{"version":3,"sources":["D2App/components/ControlBar/styles/ControlBar.module.css","D2App/components/ControlBar/styles/DashboardItemChip.module.css","D2App/components/ControlBar/styles/ClearButton.module.css","D2App/components/ControlBar/styles/ShowMoreButton.module.css","D2App/components/ItemSelector/styles/ContentMenuItem.module.css","D2App/components/ItemSelector/styles/CategorizedMenuGroup.module.css","D2App/components/TitleBar/styles/EditTitleBar.module.css","D2App/components/TitleBar/styles/ViewTitleBar.module.css","D2App/components/Item/VisualizationItem/styles/FatalErrorBoundary.module.css","D2App/components/Item/styles/DeleteItemButton.module.css","D2App/components/Item/styles/ItemHeader.module.css","D2App/components/Item/VisualizationItem/styles/LoadingMask.module.css","D2App/components/Item/VisualizationItem/styles/Item.module.css","D2App/components/Item/ListItem/Item.module.css","D2App/components/FilterBar/styles/FilterBar.module.css","D2App/modules/util.js","D2App/modules/itemTypes.js","D2App/components/ControlBar/styles/ConfirmDeleteDialog.module.css","D2App/components/Dashboard/dashboardModes.js","D2App/reducers/user.js","D2App/modules/uiBackendItemConverter.js","D2App/reducers/dashboards.js","D2App/reducers/editDashboard.js","D2App/reducers/editItemFilters.js","D2App/reducers/selected.js","D2App/actions/editItemFilters.js","D2App/reducers/itemFilters.js","D2App/actions/itemFilters.js","D2App/reducers/messages.js","D2App/api/messages.js","D2App/components/Item/MessagesItem/actions.js","D2App/reducers/snackbar.js","D2App/actions/snackbar.js","D2App/reducers/visualizations.js","D2App/actions/visualizations.js","D2App/api/index.js","D2App/api/dashboards.js","D2App/components/SnackbarMessage/SnackbarMessage.js","D2App/actions/selected.js","D2App/api/localStorage.js","D2App/api/editDashboard.js","D2App/actions/editDashboard.js","D2App/actions/dashboards.js","D2App/reducers/controlBar.js","D2App/api/controlBar.js","D2App/actions/controlBar.js","D2App/reducers/dimensions.js","D2App/reducers/settings.js","D2App/actions/dimensions.js","D2App/components/ControlBar/ControlBar.js","D2App/icons/Star.js","D2App/components/ControlBar/DashboardItemChip.js","D2App/api/dataStatistics.js","D2App/icons/AddCircle.js","D2App/icons/Clear.js","D2App/components/ControlBar/ClearButton.js","D2App/reducers/dashboardsFilter.js","D2App/components/ControlBar/Filter.js","D2App/components/ControlBar/ShowMoreButton.js","D2App/components/ControlBar/controlBarDimensions.js","D2App/components/ControlBar/DashboardsBar.js","D2App/actions/dashboardsFilter.js","D2App/components/Dashboard/DashboardVerticalOffset.js","D2App/components/ItemSelector/HeaderMenuItem.js","D2App/icons/Launch.js","D2App/components/ItemSelector/ContentMenuItem.js","D2App/components/ItemSelector/actions.js","D2App/components/ItemSelector/selectableItems.js","D2App/components/ItemSelector/CategorizedMenuGroup.js","D2App/components/ItemSelector/SinglesMenuGroup.js","D2App/components/ItemSelector/ItemSelector.js","D2App/components/TitleBar/EditTitleBar.js","D2App/components/ItemFilter/FilterDialog.js","D2App/reducers/activeModalDimension.js","D2App/actions/activeModalDimension.js","D2App/components/ItemFilter/FilterSelector.js","D2App/components/TitleBar/Info.js","D2App/components/TitleBar/ViewTitleBar.js","D2App/components/TitleBar/TitleBar.js","D2App/components/Item/VisualizationItem/DefaultPlugin.js","D2App/components/Item/VisualizationItem/assets/icons.js","D2App/components/Item/VisualizationItem/FatalErrorBoundary.js","D2App/components/Item/DeleteItemButton.js","D2App/components/Item/ItemHeader.js","D2App/components/Item/VisualizationItem/ItemHeaderButtons.js","D2App/components/Item/VisualizationItem/ItemFooter.js","D2App/modules/memoizeOne.js","D2App/components/Item/VisualizationItem/LoadingMask.js","D2App/components/Item/VisualizationItem/Item.js","D2App/widgets/Line.js","D2App/components/Item/MessagesItem/Item.js","D2App/components/Item/NotSupportedItem/Item.js","D2App/icons/Description.js","D2App/icons/Delete.js","D2App/components/Item/ListItem/Item.js","D2App/components/Item/ListItem/actions.js","D2App/components/Item/TextItem/Item.js","D2App/components/Item/AppItem/Item.js","D2App/components/Item/SpacerItem/Item.js","D2App/components/Item/Item.js","D2App/widgets/NoContentMessage.js","D2App/components/Item/ProgressiveLoadingContainer.js","D2App/components/ItemGrid/ItemGrid.js","D2App/components/FilterBar/FilterBadge.js","D2App/components/FilterBar/FilterBar.js","D2App/components/Dashboard/DashboardContent.js","D2App/components/Dashboard/ViewDashboard.js","D2App/components/ControlBar/ConfirmDeleteDialog.js","D2App/components/ControlBar/EditBar.js","D2App/components/Dashboard/EditDashboard.js","D2App/components/Dashboard/NewDashboard.js","D2App/components/Dashboard/Dashboard.js","D2App/components/App.js","D2App/actions/user.js","D2App/reducers/style.js","D2App/reducers/index.js","D2App/configureStore.js","D2App/locales/index.js","D2App/AppWrapper.js","D2App/components/Item/VisualizationItem/plugin.js","D2App/components/ItemGrid/gridUtil.js","D2App/api/metadata.js","D2App/components/ControlBar/styles/DashboardsBar.module.css"],"names":["module","exports","orArray","param","Array","isArray","orObject","isObject","arrayToIdMap","array","reduce","obj","item","id","formatDate","value","uiLocale","global","Intl","DateTimeFormat","locale","year","month","day","format","Date","substr","replace","validateReducer","defaultValue","undefined","getBaseUrl","d2","api","Api","getApi","idx","baseUrl","indexOf","slice","getWithoutId","object","VISUALIZATION","REPORT_TABLE","CHART","MAP","EVENT_REPORT","EVENT_CHART","APP","REPORTS","RESOURCES","USERS","MESSAGES","TEXT","SPACER","isVisualizationType","itemTypeMap","type","hasMapView","itemType","domainType","isTrackerDomainType","getDefaultItemCount","defaultItemCount","getAppName","appName","endPointName","propName","pluralTitle","i18n","t","appUrl","getTime","getEndPointName","getItemUrl","url","launchUrl","getItemIcon","TableIcon","ChartIcon","MapIcon","ExtensionIcon","DescriptionIcon","PersonIcon","FontDownloadIcon","EmailIcon","CropFreeIcon","NotInterestedIcon","DEFAULT_STATE_USER","username","isSuperuser","sGetUserUsername","state","user","spacerContent","isTextType","text","convertUiItemsToBackend","items","map","isUiSpacerType","convertBackendItemsToUi","isBackendSpacerType","gridProperties","getGridItemProperties","DEFAULT_STATE_DASHBOARDS","byId","updateDashboardProp","dashboardId","prop","sGetDashboardsRoot","dashboards","sGetDashboardById","sDashboardsIsFetching","sGetAllDashboards","sGetDashboardItems","sGetStarredDashboards","Object","values","filter","dashboard","starred","sGetUnstarredDashboards","getCustomDashboards","data","arrayFrom","d","name","displayName","description","displayDescription","favorite","owner","created","split","join","lastUpdated","access","numberOfItems","dashboardItems","length","DEFAULT_STATE_EDIT_DASHBOARD","NEW_DASHBOARD_STATE","sGetEditDashboardRoot","editDashboard","sGetIsEditing","isEmpty","sGetEditDashboardItems","DEFAULT_STATE_EDIT_ITEM_FILTERS","sGetEditItemFiltersRoot","editItemFilters","combineReducers","action","isLoading","showDescription","sGetSelectedRoot","selected","sGetSelectedId","sGetSelectedIsLoading","sGetSelectedShowDescription","acRemoveEditItemFilter","DEFAULT_STATE_ITEM_FILTERS","sGetItemFiltersRoot","itemFilters","sGetFiltersKeys","keys","acRemoveItemFilter","sGetMessagesRoot","messages","tGetMessages","async","getInstance","then","get","catch","error","console","log","getMessages","messageConversations","dispatch","err","DEFAULT_STATE_SNACKBAR","message","duration","open","acCloseSnackbar","DEFAULT_STATE_VISUALIZATIONS","p","sGetVisualization","visualizations","sGetVisualizationsRoot","acAddVisualization","onError","getDashboardItemsFields","withFavorite","arrayClean","getListItemFields","getFavoritesFields","withDimensions","getDashboardFields","withItems","getIdNameFields","rename","apiFetchDashboard","models","fields","loadingDashboardMsg","SnackbarMessageContent","style","fontWeight","connect","snackbar","sGetSnackbar","snackbarOpen","snackbarMessage","snackbarDuration","onCloseSnackbar","props","zIndex","autoHideDuration","onClose","acSetSelectedId","acSetSelectedIsLoading","tSetSelectedDashboardById","getState","snackbarTimeout","setTimeout","dashboardName","onSuccess","customDashboard","acSetDashboardItems","withShape","localStorage","setItem","forEach","extractFavorite","filters","clearTimeout","dash","acAppendDashboards","Promise","resolve","tLoadDashboard","saveDashboard","assign","width","w","height","h","save","msg","response","uid","acAddDashboardItem","itemPropName","generateUid","gridItemProperties","content","NEW_ITEM_SHAPE","acUpdateDashboardItem","acRemoveDashboardItem","tSaveDashboard","dashboardToSave","create","postDashboard","tFetchDashboards","collection","list","paging","toArray","tStarDashboard","isStarred","post","delete","apiStarDashboard","acSetDashboardStarred","tDeleteDashboard","apiDeleteDashboard","userRows","sGetControlBarUserRows","controlBar","sGetControlBarRoot","KEY","hasNamespace","currentUser","dataStore","has","getNamespace","apiPostControlBarRows","rows","namespace","set","acSetControlBarUserRows","tSetControlBarRows","controlBarRows","find","key","apiGetControlBarRows","DEFAULT_DIMENSIONS","getDimensionById","DIMENSION_ID_PERIOD","DIMENSION_ID_ORGUNIT","sGetDimensions","dimensions","DEFAULT_SETTINGS","keyDateFormat","keyAnalysisRelativePeriod","keyAnalysisDigitGroupSeparator","displayNameProperty","rootOrganisationUnit","sGetSettings","settings","sGetSettingsDisplayNameProperty","tSetDimensions","displayNameProp","apiFetchDimensions","acSetDimensions","dim","dimensionType","dataDimensionType","ControlBar","React","Component","constructor","super","onStartDrag","this","setState","dragging","window","addEventListener","onDrag","onEndDrag","event","preventDefault","stopPropagation","newHeight","clientY","onChangeHeight","requestAnimationFrame","removeEventListener","renderDragHandle","className","classes","draghandle","onMouseDown","render","Math","max","rootStyle","backgroundColor","editMode","colors","yellow050","white","paddingBottom","transition","root","children","defaultProps","StarIcon","xmlns","viewBox","fill","DashboardItemChip","label","chipProps","selectedState","unselected","icon","Star","link","to","onClick","debounce","eventType","apiPostDataStatistics","AddCircleIcon","teal600","ClearIcon","grey800","ClearButton","onClear","button","Clear","color","ownerData","DEFAULT_STATE_DASHBOARDS_FILTER_OWNER","order","sGetDashboardsFilterRoot","dashboardsFilter","sGetFilterName","styles","filterField","fontSize","top","searchIcon","grey700","Filter","setFilterValue","onChangeName","target","handleKeyUp","keyCode","onKeypressEnter","componentWillReceiveProps","nextProps","startAdornment","position","endAdornment","placeholder","onChange","onKeyUp","Function","prototype","withStyles","ShowMoreButton","isMaxHeight","disabled","textAlign","showMore","getRowsHeight","getControlBarHeight","FIRST_ROW_PADDING_HEIGHT","DashboardsBar","setInitialDashboardState","adjustedHeight","newRows","floor","newRowCount","min","onToggleMaxHeight","onSelectDashboard","history","push","componentDidMount","selectedId","onChangeFilterName","rowCount","controlBarHeight","contentWrapperStyle","padding","overflowY","leftControls","display","textDecoration","marginRight","AddCircle","mapDispatchToProps","withRouter","stateProps","dispatchProps","ownProps","displayDashboards","arraySort","toLowerCase","includes","marginTop","HeaderMenuItem","title","dense","LaunchIcon","grey600","LaunchLink","e","launchLink","rel","href","Launch","InsertButton","buttonInsert","ContentMenuItem","onInsert","visType","ItemIcon","renderedItemIcon","visTypeIcons","menuItem","singleItems","header","categorizedItems","listItemTypes","CategorizedMenuGroup","addItem","tAddListItemContent","newItem","toggleSeeMore","seeMore","onChangeItemsLimit","hasMore","itemUrl","context","showMoreButton","margin","contextTypes","PropTypes","isRequired","listItemType","dashboardItemIndex","findIndex","dashboardItem","category","addToDashboard","ItemSearchField","onFocus","ItemSelector","closeList","openList","_","fetchItems","anchorEl","currentTarget","setFilter","getCategorizedMenuGroups","itemCount","allItems","maxOptions","getSinglesMenuGroups","getMenuGroups","concat","add","Set","queryString","anchorOrigin","horizontal","vertical","transformOrigin","PaperProps","disableAutoFocus","disableEnforceFocus","disableRestoreFocus","maxWidth","EditTitleBar","onChangeTitle","onChangeDescription","section","titleDescription","itemSelector","selectedDashboard","FilterDialog","onConfirm","renderDialogContent","dimension","selectedItems","dialogId","commonProps","onSelect","onDeselect","onReorder","selectedPeriods","ouItems","dimensionId","large","secondary","primary","DEFAULT_STATE_ACTIVE_MODAL_DIMENSION","sGetActiveModalDimension","activeModalDimension","acSetActiveModalDimension","selectedDimensions","clearActiveModalDimension","setActiveModalDimension","addItemFilter","removeItemFilter","removeEditItemFilter","setEditItemFilters","showPopover","setShowPopover","useState","ref","useRef","closePanel","onCloseDialog","onClickOutside","reference","arrow","placement","onDimensionClick","selectedIds","itemIdsToRemove","newList","itemIds","oldList","reorderedList","filterItems","Info","show","toggle","NO_DESCRIPTION","ViewTitleBar","toggleSharingDialog","sharingDialogIsOpen","onStarClick","onInfoClick","titleStyle","cursor","userSelect","StarBorder","titleBar","actions","titleBarIcon","marginLeft","update","editLink","manage","paddingTop","onRequestClose","black","minWidth","TitleBar","edit","DefaultPlugin","pluginCredentials","shouldPluginReload","prevProps","reloadAllowed","filtersChanged","vis","visualization","prevVis","visChanged","activeType","reloadPlugin","pluginManager","currentVis","useActiveType","credentials","getActiveType","auth","defaultHeaders","Authorization","options","componentDidUpdate","getGridItemDomId","textDiv","ThreeDots","SpeechBubble","fillRule","transform","Warning","FatalErrorBoundary","errorFound","componentDidCatch","info","container","DeleteItemButton","deleteItemButton","red500","ItemHeader","forwardRef","itemId","actionButtons","itemHeaderWrap","itemTitle","itemActionsWrap","iconFill","ItemHeaderButtons","setAnchorEl","onSelectActiveType","isTrackerType","onViewTable","handleClose","onViewChart","onViewMap","canViewAs","isSingleValue","isYearOverYear","VIS_TYPE_GAUGE","VIS_TYPE_PIE","interpretationMenuLabel","activeFooter","ViewAsMenuItems","pluginIsAvailable","small","Boolean","getLink","onToggleFooter","scrollContainer","line","border","grey100","ItemFooter","objectId","getId","memoizeOne","fn","lastArgs","lastValue","args","every","arg","i","LoadingMask","center","Item","showFooter","configLoaded","pluginIsLoaded","applyFilters","visRows","visColumns","columns","visFilters","dimensionFound","dimensionObjects","getUniqueKey","uniqueId","getPluginComponent","memoizedGetVisualizationConfig","calculatedHeight","originalHeight","headerRef","current","clientHeight","ITEM_CONTENT_PADDING_BOTTOM","memoizedGetContentStyle","contentRef","offsetHeight","memoizedApplyFilters","onLoadingComplete","forDashboard","mapViews","layer","hideTitle","onToggleItemExpanded","getContentStyle","measuredHeight","createRef","getVisualizationConfig","onVisualizationLoaded","prevState","acSetActiveVisualizationType","grey200","Line","messageTypes","VALIDATION_RESULT","TICKET","SYSTEM","listStyleType","paddingLeft","seeAll","marginBottom","sender","lineHeight","snippet","maxHeight","overflow","MessagesItem","getMessageHref","msgIdentifier","messageType","getMessageSender","latestMsg","getMessageItems","editClass","readClass","read","msgDate","document","location","messageCount","userSettings","string","MessagesContainer","NotSupportedItem","justifyContent","alignItems","align","grey500","DeleteIcon","getItemTitle","ListItem","tRemoveListItemContent","contentItems","index","el","getContentItems","contentItem","Description","itemicon","deleteButton","deletebutton","deleteicon","grey900","newContent","whiteSpace","textField","fontStretch","onChangeText","updatedItem","onEdit","multiline","fullWidth","textDivStyle","viewItem","getIframeSrc","appDetails","iframeSrc","ouIds","ouPath","AppItem","appKey","system","installedApps","app","src","SpacerItem","GridItem","VisualizationItem","TextItem","getGridItem","NoContentMessage","ProgressiveLoadingContainer","shouldLoad","containerRef","shouldLoadHandler","checkShouldLoad","bufferPx","bufferFactor","innerHeight","rect","getBoundingClientRect","bottom","removeHandler","registerHandler","debounceMs","getElementsByClassName","componentWillUnmount","eventProps","pick","ItemGrid","expandedItems","clickedId","isExpanded","onRemoveItem","onLayoutChange","newLayout","acUpdateDashboardLayout","onResizeStop","layout","oldItem","onItemResize","pluginResize","onRemoveItemWrapper","adjustHeightForExpanded","expandedItem","getItemComponent","itemClassNames","getItemComponents","translucent","MARGIN","cols","getGridColumns","rowHeight","GRID_ROW_HEIGHT","innerWidth","compactType","GRID_COMPACT_TYPE","isDraggable","isResizable","draggableCancel","validItems","hasShape","badgeContainer","borderRadius","badge","badgeRemove","FilterBadge","onRemove","count","FilterBar","onBadgeRemove","onBadgeClick","bar","removeItemFIlter","filtersSelector","createSelector","arr","DashboardContent","Content","hasDashboardContent","dashboardsIsEmpty","dashboardsLoaded","contentNotReady","ConfirmDeleteDialog","onDeleteConfirmed","onContinueEditing","destructive","buttonBarStyle","EditBar","translationDialogIsOpen","dashboardModel","confirmDeleteDialogOpen","redirectUrl","onConfirmDelete","onSave","newId","onDiscard","onDiscardChanges","onDelete","onTranslationsSaved","translations","dbLocale","translation","property","onTranslate","fetchDashboardModel","toggleTranslationDialog","confirmDeleteDialog","deleteAccess","translationDialog","objectToTranslate","fieldsToTranslate","onTranslationSaved","onTranslationError","updateAccess","discardBtnText","rightControls","sGetIsNewDashboard","acSetDashboardDisplayName","EditDashboard","initialized","initEditDashboard","setEditDashboard","getDashboardContent","NewDashboard","setNewDashboard","Dashboard","setDashboard","match","params","selectDashboard","scrollToTop","scrollTo","mode","dashboardToSelect","preferredId","getItem","sGetDashboardsSortedByStarred","App","setCurrentUser","fetchDashboards","setControlBarRows","setDimensions","getChildContext","spacers","exact","path","childContextTypes","objectClean","conversations","$merge","d2Object","keyUiLocale","authorities","newState","k","$unshift","idToRemove","$splice","stateItems","layoutHasChanged","newStateItems","x","y","stateItem","si","configureStore","middleware","thunk","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducer","applyMiddleware","addResources","arTranslations","ar_IQTranslations","daTranslations","enTranslations","esTranslations","frTranslations","idTranslations","kmTranslations","loTranslations","myTranslations","nbTranslations","prsTranslations","psTranslations","ptTranslations","pt_BRTranslations","ruTranslations","svTranslations","tetTranslations","tgTranslations","ukTranslations","urTranslations","viTranslations","zhTranslations","zh_CNTranslations","appConfig","schemas","authorization","process","REACT_APP_DHIS2_AUTHORIZATION","headers","AppWrapper","store","theme","createMuiTheme","dhis2theme","i18nRoot","itemTypeToExternalPlugin","getPlugin","hasIntegratedPlugin","reportTable","chart","eventReport","eventChart","getName","load","config","plugin","loadingIndicator","loadPlugin","fetch","apiFetchFavorite","getMapFields","resize","unmount","originalType","extractedMapView","mv","VIS_TYPE_COLUMN","VIS_TYPE_PIVOT_TABLE","isNonNegativeInteger","Number","isInteger","minH","itemWithShape","Error","col","row","itemWidth","itemHeight","getShape","round","getOriginalHeight","querySelector","isFunction","setViewportSize","clientWidth","getDimensionFields","getAxesFields","getFavoriteFields","withOptions"],"mappings":"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","file":"static/js/app.c19555b7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ControlBar_root__iikeX\",\"content\":\"ControlBar_content__26Z33\",\"draghandle\":\"ControlBar_draghandle__27zum\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"DashboardItemChip_link__21drZ\",\"icon\":\"DashboardItemChip_icon__2hcIR\",\"selected\":\"DashboardItemChip_selected__r00uP\",\"unselected\":\"DashboardItemChip_unselected__2H9l2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ClearButton_button__33ZbK\",\"icon\":\"ClearButton_icon__vTJm3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"showMore\":\"ShowMoreButton_showMore__3S3He\",\"disabled\":\"ShowMoreButton_disabled__2FQNA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuItem\":\"ContentMenuItem_menuItem__vbKn3\",\"launchLink\":\"ContentMenuItem_launchLink__2Nql9\",\"label\":\"ContentMenuItem_label__ANfH1\",\"buttonInsert\":\"ContentMenuItem_buttonInsert__1joHg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"showMoreButton\":\"CategorizedMenuGroup_showMoreButton__2RbRp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"EditTitleBar_section__LIaIC\",\"titleDescription\":\"EditTitleBar_titleDescription__1YsU6\",\"title\":\"EditTitleBar_title__3mUbt\",\"description\":\"EditTitleBar_description__24U5X\",\"itemSelector\":\"EditTitleBar_itemSelector__1cFEp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"actions\":\"ViewTitleBar_actions__2UTRz\",\"editLink\":\"ViewTitleBar_editLink__d_HzW\",\"titleBar\":\"ViewTitleBar_titleBar__eiwJS\",\"titleBarIcon\":\"ViewTitleBar_titleBarIcon__2cBxv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FatalErrorBoundary_container__3SViR\",\"icon\":\"FatalErrorBoundary_icon__2UbeP\",\"message\":\"FatalErrorBoundary_message__3FzrY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"deleteItemButton\":\"DeleteItemButton_deleteItemButton__2A_sR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemWrap\":\"ItemHeader_itemWrap__cLsxA\",\"itemHeaderWrap\":\"ItemHeader_itemHeaderWrap__puT6u\",\"itemTitle\":\"ItemHeader_itemTitle__2gi2c\",\"itemActionsWrap\":\"ItemHeader_itemActionsWrap__azLJO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"center\":\"LoadingMask_center__2SFwS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textDiv\":\"Item_textDiv__1U7zV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Item_list__1_nkQ\",\"item\":\"Item_item__3-6QE\",\"itemicon\":\"Item_itemicon__QlouX\",\"link\":\"Item_link___3c_q\",\"deleteicon\":\"Item_deleteicon__3usrl\",\"deletebutton\":\"Item_deletebutton__1DpBW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bar\":\"FilterBar_bar__1Ma3p\"};","import isObject from 'lodash/isObject'; // validation\n\nexport function orNull(param) {\n  return param === undefined ? null : param;\n}\nexport function orArray(param) {\n  return Array.isArray(param) ? param : [];\n}\nexport function orObject(param) {\n  return isObject(param) ? param : {};\n} // array\n\nexport function arrayGetById(array, id) {\n  return array.find(item => item.id === id);\n} // object\n\nexport function arrayToIdMap(array) {\n  return array.reduce((obj, item) => {\n    obj[item.id] = item;\n    return obj;\n  }, {});\n} // date\n\nexport function getDate() {\n  const y = Math.floor(Math.random() * 3) + 2015;\n  const M = Math.floor(Math.random() * 12) + 1;\n  const d = Math.floor(Math.random() * 28) + 1; // const h = Math.floor(Math.random() * 23) + 1;\n  // const m = Math.floor(Math.random() * 59) + 1;\n  // const s = Math.floor(Math.random() * 59) + 1;\n\n  return new Date(`${y}-${M}-${d}`).toJSON().replace('T', ' ').substr(0, 10);\n}\nexport const formatDate = (value, uiLocale) => {\n  if (typeof global.Intl !== 'undefined' && Intl.DateTimeFormat) {\n    const locale = uiLocale || 'en';\n    return new Intl.DateTimeFormat(locale, {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    }).format(new Date(value));\n  }\n\n  return value.substr(0, 19).replace('T', ' ');\n};\n/**\n * Sorts an array of objects based on provided date property\n *\n * @param {Array} items Array of objects\n * @param {String} dateProp Name of the date property to be used for sorting\n * @param {Boolean} ascending Whether to sort ascending or descending\n */\n\nexport const sortByDate = (items, dateProp, ascending = true) => {\n  const values = Object.values(items);\n  values.sort((a, b) => {\n    const aDate = new Date(a[dateProp]);\n    const bDate = new Date(b[dateProp]);\n    return ascending ? aDate - bDate : bDate - aDate;\n  });\n  return values;\n}; // reducer validator\n\nexport const validateReducer = (value, defaultValue) => value === undefined || value === null ? defaultValue : value;\nexport const getBaseUrl = d2 => {\n  const api = d2.Api.getApi();\n  const idx = api.baseUrl.indexOf('/api');\n  return idx > -1 ? api.baseUrl.slice(0, idx) : api.baseUrl;\n};\nexport const getWithoutId = object => ({ ...object,\n  id: undefined\n});","import i18n from '@dhis2/d2-i18n';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\nimport ExtensionIcon from '@material-ui/icons/Extension';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport PersonIcon from '@material-ui/icons/Person';\nimport FontDownloadIcon from '@material-ui/icons/FontDownload';\nimport EmailIcon from '@material-ui/icons/Email';\nimport CropFreeIcon from '@material-ui/icons/CropFree';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\nimport { getBaseUrl } from './util'; // Item types\n\nexport const VISUALIZATION = 'VISUALIZATION';\nexport const REPORT_TABLE = 'REPORT_TABLE';\nexport const CHART = 'CHART';\nexport const MAP = 'MAP';\nexport const EVENT_REPORT = 'EVENT_REPORT';\nexport const EVENT_CHART = 'EVENT_CHART';\nexport const APP = 'APP';\nexport const REPORTS = 'REPORTS';\nexport const RESOURCES = 'RESOURCES';\nexport const USERS = 'USERS';\nexport const MESSAGES = 'MESSAGES';\nexport const TEXT = 'TEXT';\nexport const SPACER = 'SPACER';\nconst DOMAIN_TYPE_AGGREGATE = 'AGGREGATE';\nconst DOMAIN_TYPE_TRACKER = 'TRACKER'; // Dashboard helpers\n\nexport const isVisualizationType = item => !!itemTypeMap[item.type].isVisualizationType;\nexport const hasMapView = itemType => itemTypeMap[itemType].domainType === DOMAIN_TYPE_AGGREGATE;\nexport const isTrackerDomainType = itemType => itemTypeMap[itemType].domainType === DOMAIN_TYPE_TRACKER;\nexport const getDefaultItemCount = itemType => itemTypeMap[itemType].defaultItemCount || 5;\nexport const getAppName = itemType => itemTypeMap[itemType].appName || ''; // Item type map\n\nexport const itemTypeMap = {\n  [VISUALIZATION]: {\n    id: VISUALIZATION,\n    endPointName: 'visualizations',\n    propName: 'visualization',\n    pluralTitle: i18n.t('Visualizations'),\n    appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n    appName: 'Data Visualizer',\n    defaultItemCount: 10\n  },\n  [REPORT_TABLE]: {\n    id: REPORT_TABLE,\n    endPointName: 'visualizations',\n    propName: 'visualization',\n    pluralTitle: i18n.t('Pivot tables'),\n    domainType: DOMAIN_TYPE_AGGREGATE,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n    appName: 'Data Visualizer'\n  },\n  [CHART]: {\n    id: CHART,\n    endPointName: 'visualizations',\n    propName: 'visualization',\n    pluralTitle: i18n.t('Charts'),\n    domainType: DOMAIN_TYPE_AGGREGATE,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n    appName: 'Data Visualizer'\n  },\n  [MAP]: {\n    id: MAP,\n    endPointName: 'maps',\n    propName: 'map',\n    pluralTitle: i18n.t('Maps'),\n    domainType: DOMAIN_TYPE_AGGREGATE,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-maps/?id=${id}`,\n    appName: 'Maps'\n  },\n  [EVENT_REPORT]: {\n    id: EVENT_REPORT,\n    endPointName: 'eventReports',\n    propName: 'eventReport',\n    pluralTitle: i18n.t('Event reports'),\n    domainType: DOMAIN_TYPE_TRACKER,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-event-reports/?id=${id}`,\n    appName: 'Event Reports'\n  },\n  [EVENT_CHART]: {\n    id: EVENT_CHART,\n    endPointName: 'eventCharts',\n    propName: 'eventChart',\n    pluralTitle: i18n.t('Event charts'),\n    domainType: DOMAIN_TYPE_TRACKER,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-event-visualizer/?id=${id}`,\n    appName: 'Event Visualizer'\n  },\n  [APP]: {\n    endPointName: 'apps',\n    propName: 'appKey',\n    pluralTitle: i18n.t('Apps')\n  },\n  [REPORTS]: {\n    id: REPORTS,\n    endPointName: 'reports',\n    propName: 'reports',\n    pluralTitle: i18n.t('Reports'),\n    appUrl: (id, type) => {\n      switch (type) {\n        case 'HTML':\n          return `dhis-web-reports/#/standard-report/view/${id}`;\n\n        case 'JASPER_REPORT_TABLE':\n        case 'JASPER_JDBC':\n        default:\n          return `api/reports/${id}/data.pdf?t=${new Date().getTime()}`;\n      }\n    }\n  },\n  [RESOURCES]: {\n    id: RESOURCES,\n    endPointName: 'resources',\n    propName: 'resources',\n    pluralTitle: i18n.t('Resources'),\n    appUrl: id => `api/documents/${id}/data`\n  },\n  [USERS]: {\n    id: USERS,\n    endPointName: 'users',\n    propName: 'users',\n    pluralTitle: i18n.t('Users'),\n    appUrl: id => `dhis-web-dashboard-integration/profile.action?id=${id}`\n  },\n  [TEXT]: {\n    id: TEXT,\n    propName: 'text'\n  },\n  [MESSAGES]: {\n    propName: 'messages'\n  },\n  [SPACER]: {\n    propName: 'text'\n  }\n};\nexport const getEndPointName = type => itemTypeMap[type].endPointName;\nexport const getItemUrl = (type, item, d2) => {\n  let url;\n\n  if (type === APP) {\n    url = item.launchUrl;\n  }\n\n  if (itemTypeMap[type] && itemTypeMap[type].appUrl) {\n    url = `${getBaseUrl(d2)}/${itemTypeMap[type].appUrl(item.id, item.type)}`;\n  }\n\n  return url;\n};\nexport const getItemIcon = type => {\n  switch (type) {\n    case REPORT_TABLE:\n    case EVENT_REPORT:\n    case REPORTS:\n      return TableIcon;\n\n    case CHART:\n    case EVENT_CHART:\n      return ChartIcon;\n\n    case MAP:\n      return MapIcon;\n\n    case APP:\n      return ExtensionIcon;\n\n    case RESOURCES:\n      return DescriptionIcon;\n\n    case USERS:\n      return PersonIcon;\n\n    case TEXT:\n      return FontDownloadIcon;\n\n    case MESSAGES:\n      return EmailIcon;\n\n    case SPACER:\n      return CropFreeIcon;\n\n    default:\n      return NotInterestedIcon;\n  }\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ConfirmDeleteDialog_content__EqswE\"};","export const EDIT = 'edit';\nexport const NEW = 'new';\nexport const VIEW = 'view';","export const RECEIVED_USER = 'RECEIVED_USER';\nexport const DEFAULT_STATE_USER = {\n  id: '',\n  username: '',\n  uiLocale: '',\n  isSuperuser: false\n};\nexport default ((state = DEFAULT_STATE_USER, action) => {\n  switch (action.type) {\n    case RECEIVED_USER:\n      {\n        return fromD2ToUserObj(action.value);\n      }\n\n    default:\n      return state;\n  }\n});\n\nfunction fromD2ToUserObj(d2Object) {\n  return {\n    id: d2Object.id,\n    username: d2Object.username,\n    uiLocale: d2Object.settings.keyUiLocale,\n    isSuperuser: d2Object.authorities.has('ALL')\n  };\n} // selectors\n\n\nexport const sGetUserId = state => state.user.id;\nexport const sGetUserUsername = state => state.user.username;\nexport const sGetIsSuperuser = state => state.user.isSuperuser;\nexport const sGetUiLocale = state => state.user.uiLocale;","import { TEXT, SPACER } from './itemTypes';\nimport { getGridItemProperties } from '../components/ItemGrid/gridUtil';\nexport const spacerContent = 'SPACER_ITEM_FOR_DASHBOARD_LAYOUT_CONVENIENCE';\nexport const emptyTextItemContent = 'TEXT_ITEM_WITH_NO_CONTENT';\n\nconst isBackendSpacerType = item => item.type === TEXT && item.text === spacerContent;\n\nconst isUiSpacerType = item => item.type === SPACER;\n\nconst isTextType = item => item.type === TEXT && item.text !== spacerContent;\n\nexport const convertUiItemsToBackend = items => items.map(item => {\n  let text = null;\n\n  if (isUiSpacerType(item)) {\n    text = spacerContent;\n  } else if (isTextType(item)) {\n    text = item.text || emptyTextItemContent;\n  }\n\n  return { ...item,\n    ...(text ? {\n      text\n    } : {})\n  };\n});\nexport const convertBackendItemsToUi = items => items.map(item => {\n  const type = isBackendSpacerType(item) ? SPACER : item.type;\n  const gridProperties = getGridItemProperties(item.id);\n  const text = isTextType(item) ? item.text === emptyTextItemContent ? '' : item.text : null;\n  return { ...item,\n    ...(text !== null ? {\n      text\n    } : {}),\n    type,\n    ...gridProperties\n  };\n});","/** @module reducers/dashboards */\nimport arrayFrom from 'd2-utilizr/lib/arrayFrom';\nimport arraySort from 'd2-utilizr/lib/arraySort';\nimport { orArray, orObject } from '../modules/util';\nimport { convertBackendItemsToUi } from '../modules/uiBackendItemConverter';\nexport const SET_DASHBOARDS = 'SET_DASHBOARDS';\nexport const ADD_DASHBOARDS = 'ADD_DASHBOARDS';\nexport const SET_DASHBOARD_STARRED = 'SET_DASHBOARD_STARRED';\nexport const SET_DASHBOARD_DISPLAY_NAME = 'SET_DASHBOARD_DISPLAY_NAME';\nexport const SET_DASHBOARD_ITEMS = 'SET_DASHBOARD_ITEMS';\nexport const DEFAULT_STATE_DASHBOARDS = {\n  byId: null,\n  items: []\n}; // reducer helper functions\n\nconst updateDashboardProp = ({\n  state,\n  dashboardId,\n  prop,\n  value\n}) => ({\n  byId: { ...state.byId,\n    [dashboardId]: { ...state.byId[dashboardId],\n      [prop]: value\n    }\n  },\n  items: state.items\n});\n/**\n * Reducer that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n * @returns {Object}\n */\n\n\nexport default ((state = DEFAULT_STATE_DASHBOARDS, action) => {\n  switch (action.type) {\n    case SET_DASHBOARDS:\n      {\n        return {\n          byId: action.value,\n          items: []\n        };\n      }\n\n    case ADD_DASHBOARDS:\n      {\n        return { ...state,\n          byId: { ...state.byId,\n            ...action.value\n          }\n        };\n      }\n\n    case SET_DASHBOARD_STARRED:\n      {\n        return updateDashboardProp({\n          state,\n          dashboardId: action.dashboardId,\n          prop: 'starred',\n          value: action.value\n        });\n      }\n\n    case SET_DASHBOARD_DISPLAY_NAME:\n      {\n        return updateDashboardProp({\n          state,\n          dashboardId: action.dashboardId,\n          prop: 'displayName',\n          value: action.value\n        });\n      }\n\n    case SET_DASHBOARD_ITEMS:\n      {\n        return { ...state,\n          items: action.value\n        };\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetDashboardsRoot = state => state.dashboards; // selector level 1\n\n/**\n * Selector which returns a dashboard by id from the state object\n * If no matching dashboard is found it returns undefined\n * If dashboards.byId is null, then the dashboards api request\n * has not yet completed. If dashboards.byId is an empty object\n * then the dashboards api request is complete, but no dashboards\n * were returned\n *\n * @function\n * @param {Object} state The current state\n * @param {Number} id The id of the dashboard\n * @returns {Object | undefined}\n */\n\nexport const sGetDashboardById = (state, id) => orObject(sGetDashboardsRoot(state).byId)[id];\nexport const sDashboardsIsFetching = state => {\n  return sGetDashboardsRoot(state).byId === null;\n};\n/**\n * Selector which returns all dashboards (the byId object)\n *\n * @function\n * @param {Object} state The current state\n * @returns {Object | undefined}\n */\n\nexport const sGetAllDashboards = state => orObject(sGetDashboardsRoot(state).byId);\n/**\n * Selector which returns the current dashboard items\n *\n * @function\n * @param {Object} state The current state\n * @returns {Array}\n */\n\nexport const sGetDashboardItems = state => sGetDashboardsRoot(state).items; // selector level 2\n\nexport const sGetStarredDashboards = state => Object.values(sGetAllDashboards(state)).filter(dashboard => dashboard.starred === true);\nexport const sGetUnstarredDashboards = state => Object.values(sGetAllDashboards(state)).filter(dashboard => dashboard.starred === false); // selector level 3\n\nexport const sGetStarredDashboardIds = state => {\n  return sGetStarredDashboards(state).map(dashboard => dashboard.id);\n};\nexport const sGetUnstarredDashboardIds = state => sGetUnstarredDashboards(state).map(dashboard => dashboard.id);\nexport const sGetDashboardsSortedByStarred = state => [...arraySort(sGetStarredDashboards(state), 'ASC', 'displayName'), ...arraySort(sGetUnstarredDashboards(state), 'ASC', 'displayName')]; // utils\n\n/**\n * Returns the array of dashboards, customized for ui\n * @function\n * @param {Array} data The original dashboard list\n * @returns {Array}\n */\n\nexport const getCustomDashboards = data => arrayFrom(data).map(d => ({\n  id: d.id,\n  name: d.name,\n  displayName: d.displayName,\n  description: d.description,\n  displayDescription: d.displayDescription,\n  starred: d.favorite,\n  owner: d.user.name,\n  created: d.created.split('T').join(' ').substr(0, 16),\n  lastUpdated: d.lastUpdated.split('T').join(' ').substr(0, 16),\n  access: d.access,\n  numberOfItems: orArray(d.dashboardItems).length,\n  dashboardItems: convertBackendItemsToUi(d.dashboardItems)\n}));","/** @module reducers/editDashboard */\nimport update from 'immutability-helper';\nimport isEmpty from 'lodash/isEmpty';\nimport { orArray, orObject } from '../modules/util';\nexport const RECEIVED_EDIT_DASHBOARD = 'RECEIVED_EDIT_DASHBOARD';\nexport const RECEIVED_NOT_EDITING = 'RECEIVED_NOT_EDITING';\nexport const START_NEW_DASHBOARD = 'START_NEW_DASHBOARD';\nexport const RECEIVED_TITLE = 'RECEIVED_TITLE';\nexport const RECEIVED_DESCRIPTION = 'RECEIVED_DESCRIPTION';\nexport const ADD_DASHBOARD_ITEM = 'ADD_DASHBOARD_ITEM';\nexport const REMOVE_DASHBOARD_ITEM = 'REMOVE_DASHBOARD_ITEM';\nexport const UPDATE_DASHBOARD_ITEM = 'UPDATE_DASHBOARD_ITEM';\nexport const RECEIVED_DASHBOARD_LAYOUT = 'RECEIVED_DASHBOARD_LAYOUT';\nexport const DEFAULT_STATE_EDIT_DASHBOARD = {};\nexport const NEW_DASHBOARD_STATE = {\n  id: '',\n  name: '',\n  access: {},\n  description: '',\n  dashboardItems: []\n};\nexport default ((state = DEFAULT_STATE_EDIT_DASHBOARD, action) => {\n  switch (action.type) {\n    case RECEIVED_EDIT_DASHBOARD:\n      {\n        const newState = {};\n        Object.keys(NEW_DASHBOARD_STATE).map(k => newState[k] = action.value[k]);\n        return newState;\n      }\n\n    case RECEIVED_NOT_EDITING:\n      return DEFAULT_STATE_EDIT_DASHBOARD;\n\n    case START_NEW_DASHBOARD:\n      return NEW_DASHBOARD_STATE;\n\n    case RECEIVED_TITLE:\n      {\n        return Object.assign({}, state, {\n          name: action.value\n        });\n      }\n\n    case RECEIVED_DESCRIPTION:\n      {\n        return Object.assign({}, state, {\n          description: action.value\n        });\n      }\n\n    case ADD_DASHBOARD_ITEM:\n      return update(state, {\n        dashboardItems: {\n          $unshift: [action.value]\n        }\n      });\n\n    case REMOVE_DASHBOARD_ITEM:\n      {\n        const idToRemove = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === idToRemove);\n\n        if (dashboardItemIndex > -1) {\n          return update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1]]\n            }\n          });\n        }\n\n        return state;\n      }\n\n    case RECEIVED_DASHBOARD_LAYOUT:\n      {\n        const stateItems = orArray(state.dashboardItems);\n        let layoutHasChanged = false;\n        const newStateItems = action.value.map(({\n          x,\n          y,\n          w,\n          h,\n          i\n        }) => {\n          const stateItem = stateItems.find(si => si.id === i);\n\n          if (!(stateItem.x === x && stateItem.y === y && stateItem.w === w && stateItem.h === h)) {\n            layoutHasChanged = true;\n            return Object.assign({}, stateItem, {\n              w,\n              h,\n              x,\n              y\n            });\n          }\n\n          return stateItem;\n        });\n        return layoutHasChanged ? { ...state,\n          dashboardItems: newStateItems\n        } : state;\n      }\n\n    case UPDATE_DASHBOARD_ITEM:\n      {\n        const dashboardItem = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === dashboardItem.id);\n\n        if (dashboardItemIndex > -1) {\n          const newState = update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1, Object.assign({}, dashboardItem)]]\n            }\n          });\n          return newState;\n        }\n\n        return state;\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetEditDashboardRoot = state => state.editDashboard; // selectors\n\nexport const sGetIsEditing = state => !isEmpty(state.editDashboard);\nexport const sGetIsNewDashboard = state => {\n  return !isEmpty(state.editDashboard) && sGetEditDashboardRoot(state).id === '';\n};\nexport const sGetEditDashboardItems = state => orObject(sGetEditDashboardRoot(state)).dashboardItems;","export const CLEAR_EDIT_ITEM_FILTERS = 'CLEAR_EDIT_ITEM_FILTERS';\nexport const REMOVE_EDIT_ITEM_FILTER = 'REMOVE_EDIT_ITEM_FILTER';\nexport const SET_EDIT_ITEM_FILTERS = 'SET_EDIT_ITEM_FILTERS';\nexport const DEFAULT_STATE_EDIT_ITEM_FILTERS = {};\nexport default ((state = DEFAULT_STATE_EDIT_ITEM_FILTERS, action) => {\n  switch (action.type) {\n    case REMOVE_EDIT_ITEM_FILTER:\n      {\n        const newState = { ...state\n        };\n        delete newState[action.id];\n        return newState;\n      }\n\n    case SET_EDIT_ITEM_FILTERS:\n      {\n        return action.filters;\n      }\n\n    case CLEAR_EDIT_ITEM_FILTERS:\n      {\n        return DEFAULT_STATE_EDIT_ITEM_FILTERS;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetEditItemFiltersRoot = state => state.editItemFilters;\nexport const sGetEditFiltersKeys = state => Object.keys(sGetEditItemFiltersRoot(state));","/** @module reducers/selected */\nimport { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\nexport const SET_SELECTED_ID = 'SET_SELECTED_ID';\nexport const SET_SELECTED_ISLOADING = 'SET_SELECTED_ISLOADING';\nexport const SET_SELECTED_SHOWDESCRIPTION = 'SET_SELECTED_SHOWDESCRIPTION';\nexport const DEFAULT_STATE_SELECTED_ID = null;\nexport const DEFAULT_STATE_SELECTED_ISLOADING = false;\nexport const DEFAULT_STATE_SELECTED_SHOWDESCRIPTION = false;\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\n\nconst id = (state = DEFAULT_STATE_SELECTED_ID, action) => {\n  switch (action.type) {\n    case SET_SELECTED_ID:\n      return validateReducer(action.value, DEFAULT_STATE_SELECTED_ID);\n\n    default:\n      return state;\n  }\n};\n\nconst isLoading = (state = DEFAULT_STATE_SELECTED_ISLOADING, action) => {\n  switch (action.type) {\n    case SET_SELECTED_ISLOADING:\n      return validateReducer(action.value, DEFAULT_STATE_SELECTED_ISLOADING);\n\n    default:\n      return state;\n  }\n};\n\nconst showDescription = (state = DEFAULT_STATE_SELECTED_SHOWDESCRIPTION, action) => {\n  switch (action.type) {\n    case SET_SELECTED_SHOWDESCRIPTION:\n      return validateReducer(action.value, DEFAULT_STATE_SELECTED_SHOWDESCRIPTION);\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  id,\n  isLoading,\n  showDescription\n}); // Selectors\n\nexport const sGetSelectedRoot = state => state.selected;\nexport const sGetSelectedId = state => sGetSelectedRoot(state).id;\nexport const sGetSelectedIsLoading = state => sGetSelectedRoot(state).isLoading;\nexport const sGetSelectedShowDescription = state => sGetSelectedRoot(state).showDescription;","import { REMOVE_EDIT_ITEM_FILTER, SET_EDIT_ITEM_FILTERS, CLEAR_EDIT_ITEM_FILTERS } from '../reducers/editItemFilters'; // actions\n\nexport const acRemoveEditItemFilter = id => ({\n  type: REMOVE_EDIT_ITEM_FILTER,\n  id\n});\nexport const acClearEditItemFilters = () => ({\n  type: CLEAR_EDIT_ITEM_FILTERS\n});\nexport const acSetEditItemFilters = filters => ({\n  type: SET_EDIT_ITEM_FILTERS,\n  filters\n});","export const CLEAR_ITEM_FILTERS = 'CLEAR_ITEM_FILTERS';\nexport const SET_ITEM_FILTERS = 'SET_ITEM_FILTERS';\nexport const ADD_ITEM_FILTER = 'ADD_ITEM_FILTER';\nexport const REMOVE_ITEM_FILTER = 'REMOVE_ITEM_FILTER';\nexport const DEFAULT_STATE_ITEM_FILTERS = {};\nexport default ((state = DEFAULT_STATE_ITEM_FILTERS, action) => {\n  switch (action.type) {\n    case ADD_ITEM_FILTER:\n      {\n        return { ...state,\n          [action.filter.id]: action.filter.value\n        };\n      }\n\n    case REMOVE_ITEM_FILTER:\n      {\n        const newState = { ...state\n        };\n        delete newState[action.id];\n        return newState;\n      }\n\n    case SET_ITEM_FILTERS:\n      {\n        return action.filters;\n      }\n\n    case CLEAR_ITEM_FILTERS:\n      {\n        return DEFAULT_STATE_ITEM_FILTERS;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetItemFiltersRoot = state => state.itemFilters;\nexport const sGetFiltersKeys = state => Object.keys(sGetItemFiltersRoot(state));","import { ADD_ITEM_FILTER, REMOVE_ITEM_FILTER, SET_ITEM_FILTERS, CLEAR_ITEM_FILTERS } from '../reducers/itemFilters';\nexport const FILTER_ORG_UNIT = 'ou'; // actions\n\nexport const acAddItemFilter = filter => ({\n  type: ADD_ITEM_FILTER,\n  filter\n});\nexport const acRemoveItemFilter = id => ({\n  type: REMOVE_ITEM_FILTER,\n  id\n});\nexport const acClearItemFilters = () => ({\n  type: CLEAR_ITEM_FILTERS\n});\nexport const acSetItemFilters = filters => ({\n  type: SET_ITEM_FILTERS,\n  filters\n});","import update from 'immutability-helper';\nimport { arrayToIdMap } from '../modules/util';\nexport const RECEIVED_MESSAGES = 'RECEIVED_MESSAGES';\nexport default ((state = {}, action) => {\n  switch (action.type) {\n    case RECEIVED_MESSAGES:\n      {\n        const conversations = arrayToIdMap(action.value);\n        const newState = update(state, {\n          $merge: conversations\n        });\n        return newState;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetMessagesRoot = state => state.messages;","import { getInstance } from 'd2';\nexport const getMessages = () => {\n  const fields = 'id,messageCount,lastUpdated,messageType,displayName,read,messages[id,read,sender[id,displayName],text,lastUpdated]';\n  const url = `/messageConversations?fields=${fields}&order=read:asc&pageSize=200`;\n  return getInstance().then(d2 => d2.Api.getApi().get(url)).catch(error => console.log('Error:', error));\n};","import { RECEIVED_MESSAGES } from '../../../reducers/messages';\nimport { getMessages } from '../../../api/messages';\n\nconst onError = (action, error) => {\n  console.log(`Error in action ${action}: ${error}`);\n  return error;\n};\n\nexport const receivedMessages = value => ({\n  type: RECEIVED_MESSAGES,\n  value\n});\nexport const tGetMessages = () => async dispatch => {\n  try {\n    const messages = await getMessages();\n    const {\n      messageConversations\n    } = messages;\n    return dispatch(receivedMessages(messageConversations));\n  } catch (err) {\n    return onError('Get Messages', err);\n  }\n};","export const RECEIVED_SNACKBAR_MESSAGE = 'RECEIVED_SNACKBAR_MESSAGE';\nexport const CLOSE_SNACKBAR = 'CLOSE_SNACKBAR';\nexport const DEFAULT_STATE_SNACKBAR = {\n  message: {},\n  duration: null,\n  open: false\n};\nexport default ((state = DEFAULT_STATE_SNACKBAR, action) => {\n  switch (action.type) {\n    case RECEIVED_SNACKBAR_MESSAGE:\n      {\n        return { ...state,\n          ...action.value\n        };\n      }\n\n    case CLOSE_SNACKBAR:\n      {\n        return DEFAULT_STATE_SNACKBAR;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetSnackbar = state => state.snackbar || DEFAULT_STATE_SNACKBAR;","import { RECEIVED_SNACKBAR_MESSAGE, CLOSE_SNACKBAR } from '../reducers/snackbar';\nexport const acReceivedSnackbarMessage = value => ({\n  type: RECEIVED_SNACKBAR_MESSAGE,\n  value\n});\nexport const acCloseSnackbar = () => ({\n  type: CLOSE_SNACKBAR\n});","import { orObject } from '../modules/util';\nimport objectClean from 'd2-utilizr/lib/objectClean';\n/** @module reducers/visualizations */\n\nexport const ADD_VISUALIZATION = 'ADD_VISUALIZATION';\nexport const SET_ACTIVE_VISUALIZATION_TYPE = 'SET_ACTIVE_VISUALIZATION_TYPE';\nexport const DEFAULT_STATE_VISUALIZATIONS = {};\n\nconst isEmpty = p => p === undefined || p === null;\n\nexport default ((state = DEFAULT_STATE_VISUALIZATIONS, action) => {\n  switch (action.type) {\n    case ADD_VISUALIZATION:\n      {\n        return { ...state,\n          [action.value.id]: objectClean({ ...orObject(state[action.value.id]),\n            ...action.value\n          }, isEmpty)\n        };\n      }\n\n    case SET_ACTIVE_VISUALIZATION_TYPE:\n      {\n        return { ...state,\n          [action.id]: objectClean({ ...orObject(state[action.id]),\n            activeType: action.activeType\n          }, isEmpty)\n        };\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetVisualizationsRoot = state => state.visualizations; // selectors level 1\n\nexport const sGetVisualization = (state, id) => {\n  return sGetVisualizationsRoot(state)[id];\n};","import { ADD_VISUALIZATION, SET_ACTIVE_VISUALIZATION_TYPE } from '../reducers/visualizations';\nexport const acAddVisualization = value => ({\n  type: ADD_VISUALIZATION,\n  value\n});\nexport const acSetActiveVisualizationType = (id, activeType) => {\n  const action = {\n    type: SET_ACTIVE_VISUALIZATION_TYPE,\n    id,\n    activeType\n  };\n  return action;\n};","import arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { getListItemFields, getFavoritesFields, getIdNameFields } from './metadata'; // Helper functions\n\nexport const onError = error => console.log('Error: ', error); // Dashboard item\n\nexport const getDashboardItemsFields = ({\n  withFavorite\n} = {}) => arrayClean(['id', 'type', 'shape', 'x', 'y', 'width~rename(w)', 'height~rename(h)', 'messages', 'text', 'appKey', `${getListItemFields().join(',')}`, withFavorite ? `${getFavoritesFields({\n  withDimensions: withFavorite.withDimensions\n}).join(',')}` : ``]); // Dashboard\n\nexport const getDashboardFields = ({\n  withItems,\n  withFavorite\n} = {}) => arrayClean([`${getIdNameFields().join(',')}`, 'description', 'displayDescription', 'favorite', `user[${getIdNameFields({\n  rename: true\n}).join(',')}]`, 'created', 'lastUpdated', 'access', withItems ? `dashboardItems[${getDashboardItemsFields({\n  withFavorite\n}).join(',')}]` : ``]);","import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { onError, getDashboardFields } from './index'; // Get \"all\" dashboards on startup\n\nexport const apiFetchDashboards = () => getInstance().then(d2 => d2.models.dashboard.list({\n  fields: [getDashboardFields().join(','), 'dashboardItems[id]'].join(','),\n  paging: 'false'\n})).catch(onError); // Get more info about selected dashboard\n\nexport const apiFetchDashboard = id => getInstance().then(d2 => d2.models.dashboard.get(id, {\n  fields: arrayClean(getDashboardFields({\n    withItems: true,\n    withFavorite: {\n      withDimensions: false\n    }\n  })).join(',')\n})).catch(onError); // Star dashboard\n\nexport const apiStarDashboard = (id, isStarred) => {\n  const url = `dashboards/${id}/favorite`;\n  getInstance().then(d2 => {\n    if (isStarred) {\n      d2.Api.getApi().post(url);\n    } else {\n      d2.Api.getApi().delete(url);\n    }\n  });\n};\nexport const apiDeleteDashboard = id => {\n  return getInstance().then(d2 => {\n    return d2.models.dashboards.get(id).then(dashboard => dashboard.delete());\n  }).catch(onError);\n};","import React from 'react';\nimport { connect } from 'react-redux';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport PropTypes from 'prop-types';\nimport { sGetSnackbar } from '../../reducers/snackbar';\nimport { acCloseSnackbar } from '../../actions/snackbar';\nconst LOADING_DASHBOARD = 'LOADING_DASHBOARD';\nexport const loadingDashboardMsg = {\n  name: '',\n  type: LOADING_DASHBOARD\n};\n\nconst SnackbarMessageContent = ({\n  message\n}) => {\n  if (typeof message === 'object') {\n    //future message types:  switch(message.type)\n    return <span>\n                Loading <span style={{\n        fontWeight: 800\n      }}>{message.name}</span>{' '}\n                dashboard\n            </span>;\n  }\n\n  return message;\n};\n\nexport const SnackbarMessage = props => {\n  return <Snackbar style={{\n    zIndex: 10001\n  }} open={props.snackbarOpen} message={<SnackbarMessageContent message={props.snackbarMessage} />} autoHideDuration={props.snackbarDuration} onClose={props.onCloseSnackbar} />;\n};\n\nconst mapStateToProps = state => {\n  const {\n    message,\n    duration,\n    open\n  } = sGetSnackbar(state);\n  return {\n    snackbarOpen: open,\n    snackbarMessage: message,\n    snackbarDuration: duration\n  };\n};\n\nSnackbarMessage.propTypes = {\n  snackbarDuration: PropTypes.string,\n  snackbarMessage: PropTypes.object,\n  snackbarOpen: PropTypes.bool,\n  onCloseSnackbar: PropTypes.func\n};\nexport default connect(mapStateToProps, {\n  onCloseSnackbar: acCloseSnackbar\n})(SnackbarMessage);","import { getCustomDashboards, sGetDashboardById } from '../reducers/dashboards';\nimport { sGetIsEditing } from '../reducers/editDashboard';\nimport { sGetEditItemFiltersRoot } from '../reducers/editItemFilters';\nimport { SET_SELECTED_ID, SET_SELECTED_ISLOADING, SET_SELECTED_SHOWDESCRIPTION, sGetSelectedIsLoading, sGetSelectedId } from '../reducers/selected';\nimport { sGetUserUsername } from '../reducers/user';\nimport { acSetDashboardItems, acAppendDashboards } from './dashboards';\nimport { acClearEditItemFilters } from './editItemFilters';\nimport { acClearItemFilters, acSetItemFilters } from './itemFilters';\nimport { tGetMessages } from '../components/Item/MessagesItem/actions';\nimport { acReceivedSnackbarMessage, acCloseSnackbar } from './snackbar';\nimport { acAddVisualization } from './visualizations';\nimport { apiFetchDashboard } from '../api/dashboards';\nimport { storePreferredDashboardId } from '../api/localStorage';\nimport { withShape } from '../components/ItemGrid/gridUtil';\nimport { loadingDashboardMsg } from '../components/SnackbarMessage/SnackbarMessage';\nimport { extractFavorite } from '../components/Item/VisualizationItem/plugin';\nimport { REPORT_TABLE, CHART, MAP, EVENT_REPORT, EVENT_CHART, MESSAGES } from '../modules/itemTypes';\nimport { orObject } from '../modules/util'; // actions\n\nexport const acSetSelectedId = value => ({\n  type: SET_SELECTED_ID,\n  value\n});\nexport const acSetSelectedIsLoading = value => ({\n  type: SET_SELECTED_ISLOADING,\n  value\n});\nexport const acSetSelectedShowDescription = value => ({\n  type: SET_SELECTED_SHOWDESCRIPTION,\n  value\n});\nexport const tLoadDashboard = id => async dispatch => {\n  try {\n    const dash = await apiFetchDashboard(id);\n    dispatch(acAppendDashboards(dash));\n    return Promise.resolve(dash);\n  } catch (err) {\n    console.log('Error: ', err);\n    return err;\n  }\n}; // thunks\n\nexport const tSetSelectedDashboardById = id => async (dispatch, getState) => {\n  dispatch(acSetSelectedIsLoading(true));\n  const snackbarTimeout = setTimeout(() => {\n    const dashboardName = orObject(sGetDashboardById(getState(), id)).displayName;\n\n    if (sGetSelectedIsLoading(getState()) && dashboardName) {\n      loadingDashboardMsg.name = dashboardName;\n      dispatch(acReceivedSnackbarMessage({\n        message: loadingDashboardMsg,\n        open: true\n      }));\n    }\n  }, 500);\n\n  const onSuccess = selected => {\n    const customDashboard = getCustomDashboards(selected)[0];\n    dispatch(acSetDashboardItems(withShape(customDashboard.dashboardItems)));\n    storePreferredDashboardId(sGetUserUsername(getState()), id); // add visualizations to store\n\n    customDashboard.dashboardItems.forEach(item => {\n      switch (item.type) {\n        case REPORT_TABLE:\n        case CHART:\n        case MAP:\n        case EVENT_REPORT:\n        case EVENT_CHART:\n          dispatch(acAddVisualization(extractFavorite(item)));\n          break;\n\n        case MESSAGES:\n          dispatch(tGetMessages(id));\n          break;\n\n        default:\n          break;\n      }\n    });\n    const state = getState();\n\n    if (id === sGetSelectedId(state)) {\n      if (sGetIsEditing(state)) {\n        // disable filters when switching to edit mode\n        dispatch(acClearItemFilters());\n      } else {\n        // enable filters when switching to view mode\n        dispatch(acSetItemFilters(sGetEditItemFiltersRoot(state)));\n      }\n    } else {\n      // clear filters when switching dashboard\n      dispatch(acClearEditItemFilters());\n      dispatch(acClearItemFilters());\n    }\n\n    dispatch(acSetSelectedId(id));\n    dispatch(acSetSelectedIsLoading(false));\n    clearTimeout(snackbarTimeout);\n    dispatch(acCloseSnackbar());\n    return selected;\n  };\n\n  const onError = error => {\n    console.log('Error: ', error);\n    return error;\n  };\n\n  try {\n    const selected = await dispatch(tLoadDashboard(id));\n    return onSuccess(selected);\n  } catch (err) {\n    return onError(err);\n  }\n};","export const getPreferredDashboardId = username => localStorage.getItem(`dhis2.dashboard.current.${username}`) || undefined;\nexport const storePreferredDashboardId = (username, dashboardId) => {\n  localStorage.setItem(`dhis2.dashboard.current.${username}`, dashboardId);\n};","import { getInstance } from 'd2';\n\nconst onError = error => console.log('Error: ', error);\n\nconst saveDashboard = (dashboard, data) => {\n  const {\n    name,\n    description,\n    dashboardItems\n  } = data;\n  dashboard.name = name;\n  dashboard.description = description;\n  dashboard.dashboardItems = dashboardItems.map(item => Object.assign({}, item, {\n    width: item.w,\n    height: item.h\n  }));\n  return dashboard.save().then(msg => msg.response.uid);\n};\n\nexport const updateDashboard = data => {\n  return getInstance().then(d2 => {\n    return d2.models.dashboards.get(data.id).then(dashboard => saveDashboard(dashboard, data));\n  }).catch(onError);\n};\nexport const postDashboard = data => {\n  return getInstance().then(d2 => {\n    const dashboard = d2.models.dashboards.create();\n    return saveDashboard(dashboard, data);\n  });\n};","import { generateUid } from 'd2/uid';\nimport { RECEIVED_EDIT_DASHBOARD, START_NEW_DASHBOARD, RECEIVED_NOT_EDITING, RECEIVED_TITLE, RECEIVED_DESCRIPTION, RECEIVED_DASHBOARD_LAYOUT, ADD_DASHBOARD_ITEM, UPDATE_DASHBOARD_ITEM, REMOVE_DASHBOARD_ITEM } from '../reducers/editDashboard';\nimport { sGetEditDashboardRoot } from '../reducers/editDashboard';\nimport { updateDashboard, postDashboard } from '../api/editDashboard';\nimport { tSetSelectedDashboardById } from '../actions/selected';\nimport { NEW_ITEM_SHAPE, getGridItemProperties } from '../components/ItemGrid/gridUtil';\nimport { itemTypeMap } from '../modules/itemTypes';\nimport { convertUiItemsToBackend } from '../modules/uiBackendItemConverter';\n\nconst onError = error => {\n  console.log('Error (Saving Dashboard): ', error);\n  return error;\n}; // actions\n\n\nexport const acSetEditDashboard = (dashboard, items) => {\n  const val = { ...dashboard,\n    dashboardItems: items\n  };\n  return {\n    type: RECEIVED_EDIT_DASHBOARD,\n    value: val\n  };\n};\nexport const acSetEditNewDashboard = () => ({\n  type: START_NEW_DASHBOARD\n});\nexport const acClearEditDashboard = () => ({\n  type: RECEIVED_NOT_EDITING\n});\nexport const acSetDashboardTitle = value => ({\n  type: RECEIVED_TITLE,\n  value\n});\nexport const acSetDashboardDescription = value => ({\n  type: RECEIVED_DESCRIPTION,\n  value\n});\nexport const acUpdateDashboardLayout = value => ({\n  type: RECEIVED_DASHBOARD_LAYOUT,\n  value\n});\nexport const acAddDashboardItem = item => {\n  const type = item.type;\n  delete item.type;\n  const itemPropName = itemTypeMap[type].propName;\n  const id = generateUid();\n  const gridItemProperties = getGridItemProperties(id);\n  return {\n    type: ADD_DASHBOARD_ITEM,\n    value: {\n      id,\n      type,\n      [itemPropName]: item.content,\n      ...NEW_ITEM_SHAPE,\n      ...gridItemProperties\n    }\n  };\n};\nexport const acUpdateDashboardItem = item => ({\n  type: UPDATE_DASHBOARD_ITEM,\n  value: item\n});\nexport const acRemoveDashboardItem = value => ({\n  type: REMOVE_DASHBOARD_ITEM,\n  value\n}); // thunks\n\nexport const tSaveDashboard = () => async (dispatch, getState) => {\n  const dashboard = sGetEditDashboardRoot(getState());\n  const dashboardToSave = { ...dashboard,\n    dashboardItems: convertUiItemsToBackend(dashboard.dashboardItems)\n  };\n\n  try {\n    const dashboardId = dashboardToSave.id ? await updateDashboard(dashboardToSave) : await postDashboard(dashboardToSave);\n    dispatch(acClearEditDashboard());\n    await dispatch(tSetSelectedDashboardById(dashboardId));\n    return Promise.resolve(dashboardId);\n  } catch (error) {\n    onError(error);\n  }\n};","import { SET_DASHBOARDS, ADD_DASHBOARDS, SET_DASHBOARD_STARRED, SET_DASHBOARD_DISPLAY_NAME, SET_DASHBOARD_ITEMS } from '../reducers/dashboards';\nimport { getCustomDashboards, sGetDashboardById, sGetDashboardsSortedByStarred } from '../reducers/dashboards';\nimport { sGetUserUsername } from '../reducers/user';\nimport { tSetSelectedDashboardById, acSetSelectedId } from './selected';\nimport { acClearEditDashboard } from './editDashboard';\nimport { apiFetchDashboards, apiStarDashboard, apiDeleteDashboard } from '../api/dashboards';\nimport { getPreferredDashboardId } from '../api/localStorage';\nimport { arrayToIdMap } from '../modules/util'; // actions\n\nexport const acSetDashboards = dashboards => ({\n  type: SET_DASHBOARDS,\n  value: arrayToIdMap(getCustomDashboards(dashboards))\n});\nexport const acAppendDashboards = dashboards => ({\n  type: ADD_DASHBOARDS,\n  value: arrayToIdMap(getCustomDashboards(dashboards))\n});\nexport const acSetDashboardStarred = (dashboardId, isStarred) => ({\n  type: SET_DASHBOARD_STARRED,\n  dashboardId: dashboardId,\n  value: isStarred\n});\nexport const acSetDashboardDisplayName = (dashboardId, value) => ({\n  type: SET_DASHBOARD_DISPLAY_NAME,\n  dashboardId,\n  value\n});\nexport const acSetDashboardItems = value => ({\n  type: SET_DASHBOARD_ITEMS,\n  value\n}); // thunks\n\nexport const tFetchDashboards = () => async dispatch => {\n  const collection = await apiFetchDashboards();\n  dispatch(acSetDashboards(collection.toArray()));\n};\nexport const tSelectDashboard = id => async (dispatch, getState) => {\n  const onError = error => {\n    console.log('Error (apiFetchDashboards): ', error);\n    return error;\n  };\n\n  try {\n    const state = getState();\n    let dashboardToSelect = null;\n\n    if (id) {\n      dashboardToSelect = sGetDashboardById(state, id) || null;\n    } else {\n      const preferredId = getPreferredDashboardId(sGetUserUsername(state));\n      const dash = sGetDashboardById(state, preferredId);\n      dashboardToSelect = preferredId && dash ? dash : sGetDashboardsSortedByStarred(state)[0];\n    }\n\n    if (dashboardToSelect) {\n      dispatch(tSetSelectedDashboardById(dashboardToSelect.id));\n    } else {\n      dispatch(acSetSelectedId());\n    }\n  } catch (err) {\n    return onError(err);\n  }\n};\nexport const tStarDashboard = (id, isStarred) => async dispatch => {\n  const onSuccess = id => {\n    dispatch(acSetDashboardStarred(id, isStarred));\n    return id;\n  };\n\n  const onError = error => {\n    console.log('Error (apiStarDashboard): ', error);\n    return error;\n  };\n\n  try {\n    await apiStarDashboard(id, isStarred);\n    return onSuccess(id);\n  } catch (err) {\n    return onError(err);\n  }\n};\nexport const tDeleteDashboard = id => async dispatch => {\n  try {\n    await apiDeleteDashboard(id);\n    dispatch(acClearEditDashboard());\n    dispatch(acSetSelectedId());\n    dispatch(acSetDashboardItems([]));\n    await dispatch(tFetchDashboards());\n    return Promise.resolve();\n  } catch (err) {\n    console.log('Error (deleteDashboard): ', err);\n    return err;\n  }\n};","/** @module reducers/controlBar */\nimport { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\nexport const SET_CONTROLBAR_USER_ROWS = 'SET_CONTROLBAR_USER_ROWS';\nexport const DEFAULT_STATE_CONTROLBAR_ROWS = 1;\n\nconst userRows = (state = DEFAULT_STATE_CONTROLBAR_ROWS, action) => {\n  switch (action.type) {\n    case SET_CONTROLBAR_USER_ROWS:\n      return validateReducer(action.value, DEFAULT_STATE_CONTROLBAR_ROWS);\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  userRows\n});\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\n\nexport const sGetControlBarRoot = state => state.controlBar; // Selector dependency level 2\n\nexport const sGetControlBarUserRows = state => sGetControlBarRoot(state).userRows;","import { getInstance } from 'd2';\nimport { DEFAULT_STATE_CONTROLBAR_ROWS } from '../reducers/controlBar';\nconst NAMESPACE = 'dashboard';\nconst KEY = 'controlBarRows';\n\nconst hasNamespace = async d2 => await d2.currentUser.dataStore.has(NAMESPACE);\n\nconst getNamespace = async (d2, hasNamespace) => hasNamespace ? await d2.currentUser.dataStore.get(NAMESPACE) : await d2.currentUser.dataStore.create(NAMESPACE);\n\nexport const apiGetControlBarRows = async () => {\n  const d2 = await getInstance();\n  const namespace = await getNamespace(d2, await hasNamespace(d2));\n  const hasKey = namespace.keys && namespace.keys.find(key => key === KEY);\n\n  if (hasKey) {\n    return await namespace.get(KEY);\n  } else {\n    await apiPostControlBarRows(DEFAULT_STATE_CONTROLBAR_ROWS, namespace);\n    console.log('(These errors to /userDataStore/dashboard can be ignored)');\n    return DEFAULT_STATE_CONTROLBAR_ROWS;\n  }\n};\nexport const apiPostControlBarRows = async (rows, namespace) => {\n  const d2 = await getInstance();\n  const ns = namespace || (await getNamespace(d2, hasNamespace));\n  ns.set(KEY, rows);\n};","import { SET_CONTROLBAR_USER_ROWS } from '../reducers/controlBar';\nimport { apiGetControlBarRows } from '../api/controlBar'; // actions\n\nexport const acSetControlBarUserRows = rows => ({\n  type: SET_CONTROLBAR_USER_ROWS,\n  value: rows\n}); // thunks\n\nexport const tSetControlBarRows = () => async dispatch => {\n  const onSuccess = rows => {\n    dispatch(acSetControlBarUserRows(rows));\n  };\n\n  const onError = error => {\n    console.log('Error (apiGetControlBarRows): ', error);\n    return error;\n  };\n\n  try {\n    const controlBarRows = await apiGetControlBarRows();\n    return onSuccess(controlBarRows);\n  } catch (err) {\n    return onError(err);\n  }\n};","import { getDimensionById, DIMENSION_ID_PERIOD, DIMENSION_ID_ORGUNIT } from '@dhis2/analytics';\nexport const SET_DIMENSIONS = 'SET_DIMENSIONS';\nexport const DEFAULT_DIMENSIONS = [getDimensionById(DIMENSION_ID_PERIOD), getDimensionById(DIMENSION_ID_ORGUNIT)];\nexport default ((state = DEFAULT_DIMENSIONS, action) => {\n  switch (action.type) {\n    case SET_DIMENSIONS:\n      {\n        return [...DEFAULT_DIMENSIONS, ...action.value];\n      }\n\n    default:\n      return state;\n  }\n});\nexport const sGetDimensions = state => state.dimensions;","export const SET_SETTINGS = 'SET_SETTINGS';\nexport const ADD_SETTINGS = 'ADD_SETTINGS';\nexport const DEFAULT_SETTINGS = {\n  keyDateFormat: 'yyyy-MM-dd',\n  keyAnalysisRelativePeriod: 'LAST_12_MONTHS',\n  keyAnalysisDigitGroupSeparator: 'SPACE',\n  displayNameProperty: 'displayName',\n  uiLocale: 'en',\n  rootOrganisationUnit: {}\n};\nexport default ((state = DEFAULT_SETTINGS, action) => {\n  switch (action.type) {\n    case SET_SETTINGS:\n      {\n        return Object.assign({}, action.value);\n      }\n\n    case ADD_SETTINGS:\n      {\n        return { ...state,\n          ...action.value\n        };\n      }\n\n    default:\n      return state;\n  }\n}); // Selectors\n\nexport const sGetSettings = state => state.settings;\nexport const sGetSettingsDisplayNameProperty = state => sGetSettings(state).displayNameProperty;\nexport const sGetRootOrgUnit = state => sGetSettings(state).rootOrganisationUnit;\nexport const sGetRelativePeriod = state => sGetSettings(state).keyAnalysisRelativePeriod;\nexport const sGetUiLocale = state => sGetSettings(state).uiLocale;","import { SET_DIMENSIONS } from '../reducers/dimensions';\nimport { apiFetchDimensions } from '@dhis2/analytics';\nimport { sGetSettingsDisplayNameProperty } from '../reducers/settings';\nexport const acSetDimensions = dimensions => ({\n  type: SET_DIMENSIONS,\n  value: dimensions\n});\nexport const tSetDimensions = d2 => async (dispatch, getState) => {\n  const onSuccess = dimensions => {\n    dispatch(acSetDimensions(dimensions));\n  };\n\n  const onError = error => {\n    console.log('Error (apiFetchDimensions): ', error);\n    return error;\n  };\n\n  try {\n    const displayNameProp = sGetSettingsDisplayNameProperty(getState());\n    const dimensions = await apiFetchDimensions(d2, displayNameProp); // filter out CATEGORY that are not of type ATTRIBUTE\n\n    const filteredDimensions = dimensions.filter(dim => dim.dimensionType !== 'CATEGORY' || dim.dimensionType === 'CATEGORY' && dim.dataDimensionType === 'ATTRIBUTE');\n    return onSuccess(filteredDimensions);\n  } catch (err) {\n    return onError(err);\n  }\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { colors } from '@dhis2/ui';\nimport classes from './styles/ControlBar.module.css';\nconst DRAG_HANDLE_HEIGHT = 7;\n\nclass ControlBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dragging: false\n    };\n  }\n\n  onStartDrag = () => {\n    this.setState({\n      dragging: true\n    });\n    window.addEventListener('mousemove', this.onDrag);\n    window.addEventListener('mouseup', this.onEndDrag);\n  };\n  onDrag = event => {\n    event.preventDefault();\n    event.stopPropagation();\n    const newHeight = event.clientY;\n\n    if (this.props.onChangeHeight && newHeight !== this.props.height && newHeight > 0) {\n      requestAnimationFrame(() => {\n        this.props.onChangeHeight(newHeight);\n      });\n    }\n  };\n  onEndDrag = () => {\n    this.setState({\n      dragging: false\n    });\n    window.removeEventListener('mousemove', this.onDrag);\n    window.removeEventListener('mouseup', this.onEndDrag);\n\n    if (this.props.onEndDrag) {\n      this.props.onEndDrag();\n    }\n  };\n\n  renderDragHandle() {\n    return typeof this.props.onChangeHeight === 'function' ? <div className={classes.draghandle} style={{\n      height: DRAG_HANDLE_HEIGHT\n    }} onMouseDown={this.onStartDrag} /> : null;\n  }\n\n  render() {\n    const height = Math.max(this.props.height, 0) + DRAG_HANDLE_HEIGHT;\n    const rootStyle = Object.assign({\n      height,\n      backgroundColor: this.props.editMode ? colors.yellow050 : colors.white,\n      paddingBottom: DRAG_HANDLE_HEIGHT\n    }, // Disable animations while dragging\n    this.state.dragging ? {\n      transition: 'none'\n    } : {});\n    return <div style={rootStyle} className={classes.root}>\n                <div className={classes.content}>{this.props.children}</div>\n                {this.renderDragHandle()}\n            </div>;\n  }\n\n}\n\nControlBar.propTypes = {\n  /**\n   * The height of the control bar in number of lines. Must be a positive integer.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * If true, the background color of the control bar changes to indicate that edit mode is active.\n   */\n  editMode: PropTypes.bool.isRequired,\n\n  /**\n   * Callback function that is called when the control bar is resized.\n   * The callback receives one argument: The new height in pixels.\n   *\n   * If no callback is specified the control bar will not have a drag handle.\n   */\n  height: PropTypes.number.isRequired,\n\n  /**\n   * Callback function that is called when the control bar is dropped after being dragged.\n   * The callback receives one argument: The new height in pixels.\n   *\n   * Ignored if no \"onChangeHeight\" function is provided.\n   */\n  onChangeHeight: PropTypes.func,\n\n  /**\n   * The contents of the control bar.\n   */\n  onEndDrag: PropTypes.func\n};\nControlBar.defaultProps = {\n  onChangeHeight: null,\n  onEndDrag: null\n};\nexport default ControlBar;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst StarIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>;\n\nStarIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default StarIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Chip } from '@dhis2/ui';\nimport { Link } from 'react-router-dom';\nimport debounce from 'lodash/debounce';\nimport StarIcon from '../../icons/Star';\nimport { apiPostDataStatistics } from '../../api/dataStatistics';\nimport classes from './styles/DashboardItemChip.module.css';\nexport const DashboardItemChip = ({\n  starred,\n  selected,\n  label,\n  dashboardId\n}) => {\n  const chipProps = {\n    selected\n  };\n\n  if (starred) {\n    const selectedState = selected ? classes.selected : classes.unselected;\n    chipProps.icon = <StarIcon className={`${classes.icon} ${selectedState}`} />;\n  }\n\n  return <Link className={classes.link} to={`/${dashboardId}`} onClick={debounce(() => apiPostDataStatistics('DASHBOARD_VIEW', dashboardId), 500)}>\n            <Chip {...chipProps}>{label}</Chip>\n        </Link>;\n};\nDashboardItemChip.propTypes = {\n  dashboardId: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  selected: PropTypes.bool.isRequired,\n  starred: PropTypes.bool.isRequired,\n  classes: PropTypes.object\n};\nexport default DashboardItemChip;","import { getInstance } from 'd2';\nexport const apiPostDataStatistics = async (eventType, id) => {\n  const d2 = await getInstance();\n  const url = `dataStatistics?eventType=${eventType}&favorite=${id}`;\n  d2.Api.getApi().post(url);\n};","import React from 'react';\nimport { colors } from '@dhis2/ui';\n\nconst AddCircleIcon = () => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" fill={colors.teal600} viewBox=\"0 0 24 24\">\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm4 11h-3v3c0 .55-.45 1-1 1s-1-.45-1-1v-3H8c-.55 0-1-.45-1-1s.45-1 1-1h3V8c0-.55.45-1 1-1s1 .45 1 1v3h3c.55 0 1 .45 1 1s-.45 1-1 1z\" />\n    </svg>;\n\nexport default AddCircleIcon;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst ClearIcon = ({\n  className\n}) => <svg className={className} fill={colors.grey800} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n        <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>;\n\nClearIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default ClearIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ClearIcon from '../../icons/Clear';\nimport classes from './styles/ClearButton.module.css';\nexport const ClearButton = ({\n  onClear\n}) => <button className={classes.button} onClick={onClear}>\n        <span>\n            <ClearIcon className={classes.icon} color=\"action\" />\n        </span>\n    </button>;\nClearButton.propTypes = {\n  onClear: PropTypes.func.isRequired\n};\nexport default ClearButton;","import { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\nexport const SET_DASHBOARDS_FILTER_NAME = 'SET_DASHBOARDS_FILTER_NAME';\nexport const SET_DASHBOARDS_FILTER_OWNER = 'SET_DASHBOARDS_FILTER_OWNER';\nexport const SET_DASHBOARDS_FILTER_ORDER = 'SET_DASHBOARDS_FILTER_ORDER';\nexport const ownerData = [{\n  id: 'ALL',\n  value: 'All users'\n}, {\n  id: 'ME',\n  value: 'Created by me'\n}, {\n  id: 'OTHERS',\n  value: 'Created by others'\n}];\nexport const orderData = [{\n  id: 'NAME:ASC',\n  value: 'Name (asc)'\n}, {\n  id: 'NAME:ASC',\n  value: 'Name (desc)'\n}, {\n  id: 'ITEMS:ASC',\n  value: 'Number of items (asc)'\n}, {\n  id: 'ITEMS:ASC',\n  value: 'Number of items (desc)'\n}, {\n  id: 'CREATED:ASC',\n  value: 'Created date (asc)'\n}, {\n  id: 'CREATED:ASC',\n  value: 'Created date (desc)'\n}];\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_NAME = '';\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_OWNER = ownerData[0].id;\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_ORDER = orderData[0].id;\n\nconst name = (state = DEFAULT_STATE_DASHBOARDS_FILTER_NAME, action) => {\n  switch (action.type) {\n    case SET_DASHBOARDS_FILTER_NAME:\n      return validateReducer(action.value, DEFAULT_STATE_DASHBOARDS_FILTER_NAME);\n\n    default:\n      return state;\n  }\n};\n\nconst owner = (state = DEFAULT_STATE_DASHBOARDS_FILTER_OWNER, action) => {\n  switch (action.type) {\n    case SET_DASHBOARDS_FILTER_OWNER:\n      return validateReducer(action.value, DEFAULT_STATE_DASHBOARDS_FILTER_NAME);\n\n    default:\n      return state;\n  }\n};\n\nconst order = (state = DEFAULT_STATE_DASHBOARDS_FILTER_ORDER, action) => {\n  switch (action.type) {\n    case SET_DASHBOARDS_FILTER_ORDER:\n      return validateReducer(action.value, DEFAULT_STATE_DASHBOARDS_FILTER_ORDER);\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  name,\n  owner,\n  order\n}); // selectors\n\nexport const sGetDashboardsFilterRoot = state => state.dashboardsFilter; // selector dependency level 2\n\nexport const sGetFilterName = state => sGetDashboardsFilterRoot(state).name;\nexport const sGetFilterOwner = state => sGetDashboardsFilterRoot(state).owner;\nexport const sGetFilterOrder = state => sGetDashboardsFilterRoot(state).order;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { withStyles } from '@material-ui/core/styles';\nimport InputField from '@material-ui/core/Input';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { colors } from '@dhis2/ui';\nimport ClearButton from './ClearButton';\nimport { DEFAULT_STATE_DASHBOARDS_FILTER_NAME } from '../../reducers/dashboardsFilter';\nconst styles = {\n  filterField: {\n    fontSize: '14px',\n    width: '200px',\n    height: '30px',\n    top: '-4px'\n  },\n  searchIcon: {\n    color: colors.grey700,\n    width: '20px',\n    height: '20px'\n  }\n};\nexport const KEYCODE_ENTER = 13;\nexport const KEYCODE_ESCAPE = 27;\nexport class Filter extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: DEFAULT_STATE_DASHBOARDS_FILTER_NAME\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      value: nextProps.name\n    });\n  }\n\n  setFilterValue = event => {\n    event.preventDefault();\n    this.props.onChangeName(event.target.value);\n  };\n  handleKeyUp = event => {\n    switch (event.keyCode) {\n      case KEYCODE_ENTER:\n        this.props.onKeypressEnter();\n        break;\n\n      case KEYCODE_ESCAPE:\n        this.props.onChangeName();\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  render() {\n    const {\n      classes,\n      name,\n      onChangeName\n    } = this.props;\n    const startAdornment = <InputAdornment position=\"start\">\n                <SearchIcon className={classes.searchIcon} />\n            </InputAdornment>;\n    const endAdornment = name !== '' && name !== null ? <InputAdornment position=\"end\">\n                    <ClearButton onClear={() => onChangeName()} />\n                </InputAdornment> : null;\n    return <InputField className={classes.filterField} placeholder={i18n.t('Search for a dashboard')} startAdornment={startAdornment} endAdornment={endAdornment} value={this.state.value} onChange={this.setFilterValue} onKeyUp={this.handleKeyUp} />;\n  }\n\n}\nFilter.propTypes = {\n  classes: PropTypes.object,\n  name: PropTypes.string,\n  onChangeName: PropTypes.func,\n  onKeypressEnter: PropTypes.func\n};\nFilter.defaultProps = {\n  name: '',\n  onChangeName: Function.prototype\n};\nexport default withStyles(styles)(Filter);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport classes from './styles/ShowMoreButton.module.css';\nexport const SHOWMORE_BAR_HEIGHT = 16;\nexport const ShowMoreButton = ({\n  onClick,\n  isMaxHeight,\n  disabled\n}) => {\n  return <div style={{\n    textAlign: 'center'\n  }}>\n            {disabled ? <div className={classes.disabled}>{i18n.t('Show more')}</div> : <div className={classes.showMore} onClick={onClick}>\n                    {isMaxHeight ? i18n.t('Show less') : i18n.t('Show more')}\n                </div>}\n        </div>;\n};\nShowMoreButton.propTypes = {\n  disabled: PropTypes.bool,\n  isMaxHeight: PropTypes.bool,\n  onClick: PropTypes.func\n};\nexport default ShowMoreButton;","import { SHOWMORE_BAR_HEIGHT } from './ShowMoreButton';\nexport const CONTROL_BAR_ROW_HEIGHT = 40;\nexport const FIRST_ROW_PADDING_HEIGHT = 10;\nexport const MIN_ROW_COUNT = 1;\nconst CONTROL_BAR_OUTER_HEIGHT_DIFF = FIRST_ROW_PADDING_HEIGHT + SHOWMORE_BAR_HEIGHT - 2; // 2 pixel \"adjustment\"\n\nexport const getRowsHeight = rows => {\n  return rows * CONTROL_BAR_ROW_HEIGHT;\n};\nexport const getNumRowsFromHeight = height => {\n  return Math.floor((height - CONTROL_BAR_OUTER_HEIGHT_DIFF) / CONTROL_BAR_ROW_HEIGHT);\n};\nexport const getControlBarHeight = rows => {\n  return getRowsHeight(rows) + CONTROL_BAR_OUTER_HEIGHT_DIFF;\n};","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport ControlBar from './ControlBar';\nimport arraySort from 'd2-utilizr/lib/arraySort';\nimport PropTypes from 'prop-types';\nimport Chip from './DashboardItemChip';\nimport AddCircleIcon from '../../icons/AddCircle';\nimport Filter from './Filter';\nimport ShowMoreButton from './ShowMoreButton';\nimport { FIRST_ROW_PADDING_HEIGHT, MIN_ROW_COUNT, getRowsHeight, getControlBarHeight, getNumRowsFromHeight } from './controlBarDimensions';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { sGetAllDashboards } from '../../reducers/dashboards';\nimport { sGetFilterName } from '../../reducers/dashboardsFilter';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { acSetControlBarUserRows } from '../../actions/controlBar';\nimport { acSetFilterName } from '../../actions/dashboardsFilter';\nimport { orObject, orArray } from '../../modules/util';\nimport { apiPostControlBarRows } from '../../api/controlBar';\nimport classes from './styles/DashboardsBar.module.css';\nexport const MAX_ROW_COUNT = 10;\nexport class DashboardsBar extends Component {\n  state = {\n    rows: MIN_ROW_COUNT\n  };\n  setInitialDashboardState = rows => {\n    this.setState({\n      rows,\n      isMaxHeight: rows === MAX_ROW_COUNT\n    });\n  };\n\n  componentDidMount() {\n    this.setInitialDashboardState(this.props.userRows);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setInitialDashboardState(nextProps.userRows);\n  }\n\n  onChangeHeight = newHeight => {\n    const adjustedHeight = newHeight - 52; // don't rush the transition to a bigger row count\n\n    const newRows = Math.max(MIN_ROW_COUNT, getNumRowsFromHeight(adjustedHeight));\n\n    if (newRows !== this.state.rows) {\n      const newRowCount = Math.min(newRows, MAX_ROW_COUNT);\n      this.props.onChangeHeight(newRowCount);\n    }\n  };\n  onEndDrag = () => {\n    return apiPostControlBarRows(this.state.rows);\n  };\n  onToggleMaxHeight = () => {\n    const rows = this.state.rows === MAX_ROW_COUNT ? this.props.userRows : MAX_ROW_COUNT;\n    this.setState({\n      rows,\n      isMaxHeight: !this.state.isMaxHeight\n    });\n  };\n  onSelectDashboard = () => {\n    this.props.history.push(`/${this.props.dashboards[0].id}`);\n  };\n\n  render() {\n    const {\n      dashboards,\n      name,\n      selectedId,\n      onChangeFilterName\n    } = this.props;\n    const rowCount = this.state.isMaxHeight ? MAX_ROW_COUNT : this.state.rows;\n    const controlBarHeight = getControlBarHeight(rowCount);\n    const contentWrapperStyle = {\n      padding: `${FIRST_ROW_PADDING_HEIGHT}px 6px 0 6px`,\n      overflowY: this.state.isMaxHeight ? 'auto' : 'hidden',\n      height: getRowsHeight(rowCount) + FIRST_ROW_PADDING_HEIGHT\n    };\n    return <ControlBar height={controlBarHeight} onChangeHeight={this.onChangeHeight} onEndDrag={this.onEndDrag} editMode={false}>\n                <div style={contentWrapperStyle}>\n                    <div className={classes.leftControls}>\n                        <Link style={{\n            display: 'inline-block',\n            textDecoration: 'none',\n            marginRight: 10,\n            position: 'relative',\n            top: '2px'\n          }} to={'/new'}>\n                            <AddCircleIcon />\n                        </Link>\n                        <Filter name={name} onChangeName={onChangeFilterName} onKeypressEnter={this.onSelectDashboard} />\n                    </div>\n                    {orArray(dashboards).map(dashboard => <Chip key={dashboard.id} label={dashboard.displayName} starred={dashboard.starred} dashboardId={dashboard.id} selected={dashboard.id === selectedId} />)}\n                </div>\n                <ShowMoreButton onClick={this.onToggleMaxHeight} isMaxHeight={this.state.isMaxHeight} disabled={this.props.userRows === MAX_ROW_COUNT} />\n            </ControlBar>;\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  dashboards: sGetAllDashboards(state),\n  name: sGetFilterName(state),\n  userRows: sGetControlBarUserRows(state),\n  selectedId: sGetSelectedId(state)\n});\n\nconst mapDispatchToProps = {\n  onChangeHeight: acSetControlBarUserRows,\n  onChangeFilterName: acSetFilterName\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n  const dashboards = Object.values(orObject(stateProps.dashboards));\n  const displayDashboards = arraySort(dashboards.filter(d => d.displayName.toLowerCase().includes(stateProps.name.toLowerCase())), 'ASC', 'displayName');\n  return { ...stateProps,\n    ...ownProps,\n    ...dispatchProps,\n    dashboards: [...displayDashboards.filter(d => d.starred), ...displayDashboards.filter(d => !d.starred)]\n  };\n};\n\nDashboardsBar.propTypes = {\n  dashboards: PropTypes.array,\n  history: PropTypes.object,\n  name: PropTypes.string,\n  selectedId: PropTypes.string,\n  userRows: PropTypes.number,\n  onChangeFilterName: PropTypes.func,\n  onChangeHeight: PropTypes.func\n};\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps, mergeProps)(DashboardsBar));","import { SET_DASHBOARDS_FILTER_NAME, SET_DASHBOARDS_FILTER_OWNER, SET_DASHBOARDS_FILTER_ORDER } from '../reducers/dashboardsFilter'; // actions\n\nexport const acSetFilterName = value => ({\n  type: SET_DASHBOARDS_FILTER_NAME,\n  value\n});\nexport const acSetFilterOwner = value => ({\n  type: SET_DASHBOARDS_FILTER_OWNER,\n  value\n});\nexport const acSetFilterOrder = value => ({\n  type: SET_DASHBOARDS_FILTER_ORDER,\n  value\n});","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { getControlBarHeight, MIN_ROW_COUNT } from '../ControlBar/controlBarDimensions';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\n\nconst DashboardVerticalOffset = props => {\n  const rows = props.editMode ? MIN_ROW_COUNT : props.userRows;\n  const marginTop = getControlBarHeight(rows);\n  return <div className=\"page-container-top-margin\" style={{\n    marginTop\n  }} />;\n};\n\nconst mapStateToProps = state => ({\n  userRows: sGetControlBarUserRows(state)\n});\n\nDashboardVerticalOffset.propTypes = {\n  editMode: PropTypes.bool,\n  userRows: PropTypes.number\n};\nexport default connect(mapStateToProps)(DashboardVerticalOffset);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { MenuItem, colors } from '@dhis2/ui';\n\nconst HeaderMenuItem = ({\n  title\n}) => <MenuItem dense key={title} disabled label={<span style={{\n  color: colors.grey800,\n  fontWeight: '600'\n}}>\n                {title}\n            </span>} />;\n\nHeaderMenuItem.propTypes = {\n  title: PropTypes.string.isRequired\n};\nexport default HeaderMenuItem;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst LaunchIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\" fill={colors.grey600} viewBox=\"0 0 24 24\">\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z\" />\n    </svg>;\n\nLaunchIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default LaunchIcon;","import React from 'react';\nimport { MenuItem, colors } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport { visTypeIcons } from '@dhis2/analytics';\nimport { getItemIcon, VISUALIZATION } from '../../modules/itemTypes';\nimport LaunchIcon from '../../icons/Launch';\nimport classes from './styles/ContentMenuItem.module.css';\n\nconst LaunchLink = ({\n  url\n}) => <a onClick={e => e.stopPropagation()} className={classes.launchLink} target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n        <LaunchIcon />\n    </a>;\n\nLaunchLink.propTypes = {\n  url: PropTypes.string\n};\n\nconst InsertButton = () => <button className={classes.buttonInsert}>{i18n.t('Insert')}</button>;\n\nconst ContentMenuItem = ({\n  type,\n  name,\n  onInsert,\n  url,\n  visType\n}) => {\n  const ItemIcon = getItemIcon(type);\n  const renderedItemIcon = type === VISUALIZATION ? visTypeIcons[visType] : <ItemIcon style={{\n    fill: colors.grey600\n  }} />;\n  return <MenuItem dense onClick={onInsert} label={<div className={classes.menuItem}>\n                    <div className={classes.label}>\n                        <span style={{\n        marginRight: '6px'\n      }}>\n                            {renderedItemIcon}\n                        </span>\n                        <span>{name}</span>\n                        {url ? <LaunchLink url={url} /> : null}\n                    </div>\n                    <InsertButton />\n                </div>} />;\n};\n\nContentMenuItem.propTypes = {\n  name: PropTypes.string,\n  type: PropTypes.string,\n  url: PropTypes.string,\n  visType: PropTypes.string,\n  onInsert: PropTypes.func\n};\nexport default ContentMenuItem;","import { sGetEditDashboardRoot } from '../../reducers/editDashboard';\nimport { itemTypeMap } from '../../modules/itemTypes';\nimport { acAddDashboardItem, acUpdateDashboardItem } from '../../actions/editDashboard';\nexport const tAddListItemContent = (type, content) => (dispatch, getState) => {\n  const state = getState();\n  const listItemType = itemTypeMap[type].propName;\n  const dashboardItems = sGetEditDashboardRoot(state).dashboardItems;\n  const dashboardItemIndex = dashboardItems.findIndex(item => item.type === type);\n  let dashboardItem; // Reports/Resources/Users dashboard item type already present in dashboard\n\n  if (dashboardItemIndex > -1) {\n    dashboardItem = dashboardItems[dashboardItemIndex];\n    dashboardItem[listItemType].push(content);\n    dispatch(acUpdateDashboardItem(dashboardItem));\n  } else {\n    dashboardItem = {\n      type: type,\n      content: [content]\n    };\n    dispatch(acAddDashboardItem(dashboardItem));\n  }\n};","import i18n from '@dhis2/d2-i18n';\nimport { VISUALIZATION, MAP, EVENT_CHART, EVENT_REPORT, USERS, REPORTS, RESOURCES, APP, MESSAGES, TEXT, SPACER } from '../../modules/itemTypes';\nexport const singleItems = [{\n  id: 'additional',\n  header: i18n.t('Additional items'),\n  items: [{\n    type: TEXT,\n    name: i18n.t('Text box'),\n    content: ''\n  }, {\n    type: MESSAGES,\n    name: i18n.t('Messages'),\n    content: 'true'\n  }, {\n    type: SPACER,\n    name: i18n.t('Spacer'),\n    content: ''\n  }]\n}]; // categorizedItems are grouped in the item selector menu\n\nexport const categorizedItems = [VISUALIZATION, MAP, EVENT_REPORT, EVENT_CHART, USERS, REPORTS, RESOURCES, APP]; // listItemTypes are included in a single dashboard item\n\nexport const listItemTypes = [REPORTS, RESOURCES, USERS];","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { MenuItem, Divider } from '@dhis2/ui';\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\nimport { tAddListItemContent } from './actions';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\nimport { getItemUrl, APP, VISUALIZATION } from '../../modules/itemTypes';\nimport { categorizedItems, listItemTypes } from './selectableItems';\nimport classes from './styles/CategorizedMenuGroup.module.css';\n\nclass CategorizedMenuGroup extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      seeMore: false\n    };\n  }\n\n  addItem = item => () => {\n    const {\n      type,\n      acAddDashboardItem,\n      tAddListItemContent\n    } = this.props;\n\n    if (type === APP) {\n      acAddDashboardItem({\n        type,\n        content: item.key\n      });\n    } else {\n      const newItem = {\n        id: item.id,\n        name: item.displayName || item.name\n      };\n\n      if (listItemTypes.includes(type)) {\n        tAddListItemContent(type, newItem);\n      } else {\n        acAddDashboardItem({\n          type,\n          content: newItem\n        });\n      }\n    }\n  };\n  toggleSeeMore = () => {\n    this.setState({\n      seeMore: !this.state.seeMore\n    });\n    this.props.onChangeItemsLimit(this.props.type);\n  };\n\n  render() {\n    const {\n      title,\n      type,\n      items,\n      hasMore\n    } = this.props;\n    return <>\n                <HeaderMenuItem title={title} />\n                {items.map(item => {\n        const itemUrl = getItemUrl(type, item, this.context.d2);\n        return <ContentMenuItem key={item.id || item.key} type={type} visType={type === VISUALIZATION ? item.type : type} name={item.displayName || item.name} onInsert={this.addItem(item)} url={itemUrl} />;\n      })}\n                {hasMore ? <MenuItem dense key={`showmore${title}`} onClick={this.toggleSeeMore} label={<button className={classes.showMoreButton}>\n                                {this.state.seeMore ? i18n.t('Show fewer') : i18n.t('Show more')}\n                            </button>} /> : null}\n                <Divider margin=\"8px 0px\" />\n            </>;\n  }\n\n}\n\nCategorizedMenuGroup.propTypes = {\n  items: PropTypes.array.isRequired,\n  title: PropTypes.string.isRequired,\n  type: PropTypes.oneOf(categorizedItems).isRequired,\n  onChangeItemsLimit: PropTypes.func.isRequired,\n  acAddDashboardItem: PropTypes.func,\n  hasMore: PropTypes.bool,\n  tAddListItemContent: PropTypes.func\n};\nCategorizedMenuGroup.contextTypes = {\n  d2: PropTypes.object.isRequired\n};\nexport default connect(null, {\n  acAddDashboardItem,\n  tAddListItemContent\n})(CategorizedMenuGroup);","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\nexport const SinglesMenuGroup = ({\n  acAddDashboardItem,\n  category\n}) => {\n  const addToDashboard = ({\n    type,\n    content\n  }) => () => {\n    acAddDashboardItem({\n      type,\n      content\n    });\n  };\n\n  return <>\n            <HeaderMenuItem title={category.header} />\n            {category.items.map(item => <ContentMenuItem key={item.type} type={item.type} name={item.name} onInsert={addToDashboard(item)} />)}\n        </>;\n};\nSinglesMenuGroup.propTypes = {\n  acAddDashboardItem: PropTypes.func,\n  category: PropTypes.object\n};\nexport default connect(null, {\n  acAddDashboardItem\n})(SinglesMenuGroup);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport Popover from '@material-ui/core/Popover';\nimport { InputField, Menu } from '@dhis2/ui';\nimport CategorizedMenuGroup from './CategorizedMenuGroup';\nimport SinglesMenuGroup from './SinglesMenuGroup';\nimport { singleItems, categorizedItems } from './selectableItems';\nimport { itemTypeMap, getDefaultItemCount } from '../../modules/itemTypes';\nimport './styles/ItemSelector.css';\n\nconst ItemSearchField = props => <InputField name=\"Dashboard item search\" label={i18n.t('Search for items to add to this dashboard')} type=\"text\" onChange={props.onChange} onFocus={props.onFocus} value={props.value} />;\n\nclass ItemSelector extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      anchorEl: null,\n      open: false,\n      maxOptions: new Set(),\n      items: undefined,\n      filter: ''\n    };\n  }\n\n  closeList = () => {\n    this.setState({\n      open: false,\n      filter: ''\n    });\n  };\n  openList = (_, event) => {\n    this.fetchItems();\n    this.setState({\n      anchorEl: event.currentTarget,\n      open: true\n    });\n  };\n  setFilter = (_, event) => {\n    this.setState({\n      filter: event.target.value\n    }, this.fetchItems);\n  };\n  getCategorizedMenuGroups = () => categorizedItems.filter(type => {\n    const itemType = itemTypeMap[type];\n    return this.state.items && this.state.items[itemType.endPointName];\n  }).map(type => {\n    const itemType = itemTypeMap[type];\n    const itemCount = getDefaultItemCount(type);\n    const allItems = this.state.items[itemType.endPointName];\n    const hasMore = allItems.length > itemCount;\n    const items = this.state.maxOptions.has(itemType.id) ? allItems : allItems.slice(0, itemCount);\n    return <CategorizedMenuGroup key={type} type={type} title={itemType.pluralTitle} items={items} onChangeItemsLimit={this.fetchItems} hasMore={hasMore} />;\n  });\n  getSinglesMenuGroups = () => singleItems.map(category => <SinglesMenuGroup key={category.id} category={category} />);\n  getMenuGroups = () => this.getCategorizedMenuGroups().concat(this.getSinglesMenuGroups());\n  fetchItems = async type => {\n    if (type) {\n      const maxOptions = this.state.maxOptions;\n\n      if (maxOptions.has(type)) {\n        maxOptions.delete(type);\n      } else {\n        maxOptions.add(type);\n      }\n\n      this.setState({\n        maxOptions\n      });\n    } else {\n      this.setState({\n        maxOptions: new Set()\n      });\n    }\n\n    let queryString = '?count=11';\n\n    if ([...this.state.maxOptions.values()].length) {\n      queryString += '&max=' + [...this.state.maxOptions.values()].join('&max=');\n    }\n\n    const filter = this.state.filter ? `/${this.state.filter}` : '';\n    this.context.d2.Api.getApi().get(`dashboards/q${filter}${queryString}`).then(response => this.setState({\n      items: response\n    })).catch(console.error);\n  };\n\n  render() {\n    return <>\n                <ItemSearchField value={this.state.filter} onChange={this.setFilter} onFocus={this.openList} />\n                <Popover className=\"dashboard-item-selector\" open={this.state.open} onClose={this.closeList} anchorEl={this.state.anchorEl} anchorOrigin={{\n        horizontal: 'left',\n        vertical: 'bottom'\n      }} transformOrigin={{\n        horizontal: 'left',\n        vertical: 'top'\n      }} style={{\n        height: '70vh'\n      }} PaperProps={{\n        style: {\n          width: '700px'\n        }\n      }} disableAutoFocus={true} disableEnforceFocus={true} disableRestoreFocus={true}>\n                    <Menu maxWidth={'700px'}>{this.getMenuGroups()}</Menu>\n                </Popover>\n            </>;\n  }\n\n}\n\nItemSearchField.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n  onFocus: PropTypes.func\n};\nItemSelector.contextTypes = {\n  d2: PropTypes.object.isRequired\n};\nexport default ItemSelector;","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { InputField, TextAreaField } from '@dhis2/ui';\nimport ItemSelector from '../ItemSelector/ItemSelector';\nimport { acSetDashboardTitle, acSetDashboardDescription } from '../../actions/editDashboard';\nimport { orObject } from '../../modules/util';\nimport { sGetEditDashboardRoot } from '../../reducers/editDashboard';\nimport classes from './styles/EditTitleBar.module.css';\nexport const EditTitleBar = ({\n  name,\n  description,\n  onChangeTitle,\n  onChangeDescription\n}) => {\n  const updateTitle = (_, e) => {\n    onChangeTitle(e.target.value);\n  };\n\n  const updateDescription = (_, e) => {\n    onChangeDescription(e.target.value);\n  };\n\n  return <section className={classes.section}>\n            <div className={classes.titleDescription}>\n                <InputField className={classes.title} name=\"Dashboard title input\" label={i18n.t('Dashboard title')} type=\"text\" onChange={updateTitle} value={name} />\n                <TextAreaField className={classes.description} name=\"Dashboard description input\" label={i18n.t('Dashboard description')} onChange={updateDescription} value={description} />\n            </div>\n            <div className={classes.itemSelector}>\n                <ItemSelector />\n            </div>\n        </section>;\n};\nEditTitleBar.propTypes = {\n  onChangeDescription: PropTypes.func.isRequired,\n  onChangeTitle: PropTypes.func.isRequired,\n  description: PropTypes.string,\n  name: PropTypes.string\n};\nEditTitleBar.defaultProps = {\n  name: '',\n  description: ''\n};\n\nconst mapStateToProps = state => {\n  const selectedDashboard = orObject(sGetEditDashboardRoot(state));\n  return {\n    name: selectedDashboard.name,\n    description: selectedDashboard.description\n  };\n};\n\nconst mapDispatchToProps = {\n  onChangeTitle: acSetDashboardTitle,\n  onChangeDescription: acSetDashboardDescription\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(EditTitleBar);","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Modal, ModalTitle, ModalContent, ModalActions, ButtonStrip } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport { PeriodDimension, DynamicDimension, OrgUnitDimension, DIMENSION_ID_PERIOD, DIMENSION_ID_ORGUNIT } from '@dhis2/analytics';\n\nclass FilterDialog extends Component {\n  onConfirm = id => () => this.props.onConfirm(id);\n\n  renderDialogContent() {\n    const {\n      displayNameProperty,\n      dimension,\n      selectedItems\n    } = this.props;\n    const dialogId = dimension.id;\n    const commonProps = {\n      d2: this.context.d2,\n      onSelect: this.props.onSelect,\n      onDeselect: this.props.onDeselect,\n      onReorder: this.props.onReorder\n    };\n\n    switch (dialogId) {\n      case DIMENSION_ID_PERIOD:\n        {\n          return <PeriodDimension selectedPeriods={selectedItems} onSelect={commonProps.onSelect} />;\n        }\n\n      case DIMENSION_ID_ORGUNIT:\n        return <OrgUnitDimension displayNameProperty={displayNameProperty} ouItems={selectedItems} {...commonProps} />;\n\n      default:\n        return <DynamicDimension selectedItems={selectedItems} dimensionId={dialogId} onSelect={commonProps.onSelect} context={commonProps.d2} />;\n    }\n  }\n\n  render() {\n    const {\n      dimension,\n      onClose\n    } = this.props;\n    const dialogId = dimension.id;\n    return <>\n                {dialogId && <Modal onClose={onClose} position=\"top\" large>\n                        <ModalTitle>{dimension.name}</ModalTitle>\n                        <ModalContent>\n                            {this.renderDialogContent()}\n                        </ModalContent>\n                        <ModalActions>\n                            <ButtonStrip>\n                                <Button secondary onClick={onClose}>\n                                    {i18n.t('Cancel')}\n                                </Button>\n                                <Button primary onClick={this.onConfirm(dialogId)}>\n                                    {i18n.t('Confirm')}\n                                </Button>\n                            </ButtonStrip>\n                        </ModalActions>\n                    </Modal>}\n            </>;\n  }\n\n}\n\nFilterDialog.propTypes = {\n  dimension: PropTypes.object,\n  displayNameProperty: PropTypes.string,\n  selectedItems: PropTypes.array,\n  onClose: PropTypes.func,\n  onConfirm: PropTypes.func,\n  onDeselect: PropTypes.func,\n  onReorder: PropTypes.func,\n  onSelect: PropTypes.func\n};\nFilterDialog.contextTypes = {\n  d2: PropTypes.object\n};\nexport default FilterDialog;","export const SET_ACTIVE_MODAL_DIMENSION = 'SET_ACTIVE_MODAL_DIMENSION';\nexport const CLEAR_ACTIVE_MODAL_DIMENSION = 'CLEAR_ACTIVE_MODAL_DIMENSION';\nexport const DEFAULT_STATE_ACTIVE_MODAL_DIMENSION = {};\nexport default ((state = DEFAULT_STATE_ACTIVE_MODAL_DIMENSION, action) => {\n  switch (action.type) {\n    case SET_ACTIVE_MODAL_DIMENSION:\n      {\n        return action.value;\n      }\n\n    case CLEAR_ACTIVE_MODAL_DIMENSION:\n      {\n        return DEFAULT_STATE_ACTIVE_MODAL_DIMENSION;\n      }\n\n    default:\n      return state;\n  }\n});\nexport const sGetActiveModalDimension = state => state.activeModalDimension;","import { SET_ACTIVE_MODAL_DIMENSION, CLEAR_ACTIVE_MODAL_DIMENSION } from '../reducers/activeModalDimension';\nexport const acSetActiveModalDimension = value => ({\n  type: SET_ACTIVE_MODAL_DIMENSION,\n  value\n});\nexport const acClearActiveModalDimension = () => ({\n  type: CLEAR_ACTIVE_MODAL_DIMENSION\n});","import React, { useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport i18n from '@dhis2/d2-i18n';\nimport { DimensionsPanel } from '@dhis2/analytics';\nimport { Button, Popover } from '@dhis2/ui';\nimport FilterDialog from './FilterDialog';\nimport { sGetSettingsDisplayNameProperty } from '../../reducers/settings';\nimport { sGetActiveModalDimension } from '../../reducers/activeModalDimension';\nimport { sGetDimensions } from '../../reducers/dimensions';\nimport { sGetFiltersKeys } from '../../reducers/itemFilters';\nimport { sGetEditItemFiltersRoot } from '../../reducers/editItemFilters';\nimport { acAddItemFilter, acRemoveItemFilter } from '../../actions/itemFilters';\nimport { acRemoveEditItemFilter, acSetEditItemFilters } from '../../actions/editItemFilters';\nimport { acClearActiveModalDimension, acSetActiveModalDimension } from '../../actions/activeModalDimension';\n\nconst FilterSelector = props => {\n  const [showPopover, setShowPopover] = useState(false);\n  const ref = useRef(null);\n\n  const closePanel = () => setShowPopover(false);\n\n  const onCloseDialog = () => {\n    closePanel();\n    props.clearActiveModalDimension();\n  };\n\n  const selectDimension = id => {\n    props.setActiveModalDimension(props.dimensions.find(dimension => dimension.id === id));\n  };\n\n  const onSelectItems = ({\n    dimensionId,\n    items\n  }) => {\n    props.setEditItemFilters({ ...props.selectedItems,\n      [dimensionId]: items\n    });\n  };\n\n  const onDeselectItems = ({\n    dimensionId,\n    itemIdsToRemove\n  }) => {\n    const oldList = props.selectedItems[dimensionId] || [];\n    const newList = oldList.filter(item => !itemIdsToRemove.includes(item.id));\n\n    if (newList.length) {\n      props.setEditItemFilters({ ...props.selectedItems,\n        [dimensionId]: newList\n      });\n    } else {\n      props.removeEditItemFilter(dimensionId);\n    }\n  };\n\n  const onReorderItems = ({\n    dimensionId,\n    itemIds\n  }) => {\n    const oldList = props.selectedItems[dimensionId] || [];\n    const reorderedList = itemIds.map(id => oldList.find(item => item.id === id));\n    props.setEditItemFilters({ ...props.selectedItems,\n      [dimensionId]: reorderedList\n    });\n  };\n\n  const saveFilter = id => {\n    const filterItems = props.selectedItems[id];\n\n    if (filterItems && filterItems.length) {\n      props.addItemFilter({\n        id,\n        value: [...filterItems]\n      });\n    } else {\n      props.removeItemFilter(id);\n    }\n\n    onCloseDialog();\n  };\n\n  return <>\n            <span ref={ref}>\n                <Button onClick={() => setShowPopover(true)}>\n                    {i18n.t('Add filter')}\n                    <ArrowDropDownIcon />\n                </Button>\n            </span>\n            {showPopover && <Popover onClickOutside={closePanel} reference={ref} arrow={true} placement=\"bottom-start\">\n                    <DimensionsPanel style={{\n        width: '320px'\n      }} dimensions={props.dimensions} onDimensionClick={selectDimension} selectedIds={props.selectedDimensions} />\n                </Popover>}\n            {props.dimension ? <FilterDialog displayNameProperty={props.displayNameProperty} dimension={props.dimension} selectedItems={props.selectedItems[props.dimension.id] || []} onSelect={onSelectItems} onDeselect={onDeselectItems} onReorder={onReorderItems} onClose={onCloseDialog} onConfirm={saveFilter} /> : null}\n        </>;\n};\n\nconst mapStateToProps = state => ({\n  displayNameProperty: sGetSettingsDisplayNameProperty(state),\n  dimension: sGetActiveModalDimension(state),\n  dimensions: sGetDimensions(state),\n  selectedDimensions: sGetFiltersKeys(state),\n  selectedItems: sGetEditItemFiltersRoot(state)\n});\n\nFilterSelector.propTypes = {\n  addItemFilter: PropTypes.func,\n  clearActiveModalDimension: PropTypes.func,\n  dimension: PropTypes.object,\n  dimensions: PropTypes.array,\n  displayNameProperty: PropTypes.string,\n  removeEditItemFilter: PropTypes.func,\n  removeItemFilter: PropTypes.func,\n  selectedDimensions: PropTypes.array,\n  selectedItems: PropTypes.object,\n  setActiveModalDimension: PropTypes.func,\n  setEditItemFilters: PropTypes.func\n};\nexport default connect(mapStateToProps, {\n  clearActiveModalDimension: acClearActiveModalDimension,\n  setActiveModalDimension: acSetActiveModalDimension,\n  addItemFilter: acAddItemFilter,\n  removeItemFilter: acRemoveItemFilter,\n  removeEditItemFilter: acRemoveEditItemFilter,\n  setEditItemFilters: acSetEditItemFilters\n})(FilterSelector);","import React, { Component } from 'react';\nimport InfoOutlineIcon from '@material-ui/icons/InfoOutlined';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nclass Info extends Component {\n  show = false;\n\n  toggle() {\n    this.show = !this.show;\n    return this.show;\n  }\n\n  render() {\n    return <div onClick={() => this.props.onClick(this.toggle())}>\n                <InfoOutlineIcon style={{\n        fill: colors.grey600\n      }} />\n            </div>;\n  }\n\n}\n\nInfo.propTypes = {\n  onClick: PropTypes.func\n};\nexport default Info;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport SharingDialog from '@dhis2/d2-ui-sharing-dialog';\nimport Star from '@material-ui/icons/Star';\nimport StarBorder from '@material-ui/icons/StarBorder';\nimport { orObject } from '../../modules/util';\nimport { tStarDashboard } from '../../actions/dashboards';\nimport { acSetSelectedShowDescription } from '../../actions/selected';\nimport FilterSelector from '../ItemFilter/FilterSelector';\nimport { Button, colors } from '@dhis2/ui';\nimport Info from './Info';\nimport { sGetSelectedId, sGetSelectedShowDescription } from '../../reducers/selected';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport classes from './styles/ViewTitleBar.module.css';\nconst NO_DESCRIPTION = i18n.t('No description');\n\nclass ViewTitleBar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sharingDialogIsOpen: false\n    };\n  }\n\n  toggleSharingDialog = () => this.setState({\n    sharingDialogIsOpen: !this.state.sharingDialogIsOpen\n  });\n\n  render() {\n    const {\n      id,\n      name,\n      description,\n      access,\n      style,\n      showDescription,\n      starred,\n      onStarClick,\n      onInfoClick\n    } = this.props;\n    const titleStyle = Object.assign({}, style.title, {\n      cursor: 'default',\n      userSelect: 'text',\n      top: '7px'\n    });\n    const StarIcon = starred ? Star : StarBorder;\n    return <>\n                <div className={classes.titleBar}>\n                    <span style={titleStyle}>{name}</span>\n                    <div className={classes.actions}>\n                        <div className={classes.titleBarIcon} onClick={onStarClick}>\n                            <StarIcon style={{\n              fill: colors.grey600\n            }} />\n                        </div>\n                        <div className={classes.titleBarIcon}>\n                            <Info onClick={onInfoClick} />\n                        </div>\n                        <div style={{\n            marginLeft: '10px'\n          }}>\n                            {access.update ? <Link className={classes.editLink} to={`/${id}/edit`}>\n                                    <Button>{i18n.t('Edit')}</Button>\n                                </Link> : null}\n                            {access.manage ? <span style={{\n              marginRight: '4px'\n            }}>\n                                    <Button onClick={this.toggleSharingDialog}>\n                                        {i18n.t('Share')}\n                                    </Button>\n                                </span> : null}\n                            <span style={{\n              marginRight: '4px'\n            }}>\n                                <FilterSelector />\n                            </span>\n                        </div>\n                    </div>\n                </div>\n                {showDescription ? <div className=\"dashboard-description\" style={Object.assign({\n        paddingTop: '5px',\n        paddingBottom: '5px'\n      }, style.description, !description ? {\n        color: '#888'\n      } : {})}>\n                        {description || NO_DESCRIPTION}\n                    </div> : null}\n                {id ? <SharingDialog d2={this.context.d2} id={id} type=\"dashboard\" open={this.state.sharingDialogIsOpen} onRequestClose={this.toggleSharingDialog} /> : null}\n            </>;\n  }\n\n}\n\nViewTitleBar.propTypes = {\n  access: PropTypes.object,\n  description: PropTypes.string,\n  id: PropTypes.string,\n  name: PropTypes.string,\n  showDescription: PropTypes.bool,\n  starred: PropTypes.bool,\n  style: PropTypes.object,\n  onInfoClick: PropTypes.func,\n  onStarClick: PropTypes.func\n};\nViewTitleBar.defaultProps = {\n  name: '',\n  description: '',\n  starred: false,\n  showDescription: false,\n  onInfoClick: null\n};\nViewTitleBar.contextTypes = {\n  d2: PropTypes.object\n};\n\nconst mapStateToProps = state => {\n  const id = sGetSelectedId(state);\n  const dashboard = orObject(sGetDashboardById(state, id));\n  return {\n    id,\n    name: dashboard.displayName,\n    description: dashboard.displayDescription,\n    dashboardItems: sGetDashboardItems(state),\n    showDescription: sGetSelectedShowDescription(state),\n    starred: dashboard.starred,\n    access: orObject(dashboard.access)\n  };\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n  const {\n    id,\n    starred,\n    showDescription\n  } = stateProps;\n  const {\n    dispatch\n  } = dispatchProps;\n  return { ...stateProps,\n    ...ownProps,\n    onStarClick: () => dispatch(tStarDashboard(id, !starred)),\n    onInfoClick: () => dispatch(acSetSelectedShowDescription(!showDescription))\n  };\n};\n\nexport default connect(mapStateToProps, null, mergeProps)(ViewTitleBar);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { colors } from '@dhis2/ui';\nimport EditTitleBar from './EditTitleBar';\nimport ViewTitleBar from './ViewTitleBar';\nimport './TitleBar.css';\nconst style = {\n  title: {\n    position: 'relative',\n    fontSize: 21,\n    fontWeight: 500,\n    color: colors.black,\n    minWidth: 50\n  },\n  description: {\n    fontSize: 14,\n    color: colors.grey800\n  }\n};\n\nconst TitleBar = ({\n  edit\n}) => {\n  return <div className=\"titlebar-wrapper\" style={{\n    padding: '20px 15px 5px 10px'\n  }}>\n            {edit ? <EditTitleBar style={style} /> : <ViewTitleBar style={style} />}\n        </div>;\n};\n\nTitleBar.propTypes = {\n  edit: PropTypes.bool\n};\nexport default TitleBar;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport * as pluginManager from './plugin';\nimport { getBaseUrl, orObject } from '../../../modules/util';\nimport { getGridItemDomId } from '../../ItemGrid/gridUtil';\n\nconst pluginCredentials = d2 => {\n  return {\n    baseUrl: getBaseUrl(d2),\n    auth: d2.Api.getApi().defaultHeaders.Authorization\n  };\n};\n\nclass DefaultPlugin extends Component {\n  pluginCredentials = null;\n\n  constructor(props, context) {\n    super(props);\n    this.d2 = context.d2;\n  }\n\n  shouldPluginReload = prevProps => {\n    // TODO - fix this hack, to handle bug with multiple\n    // rerendering while switching between dashboards.\n    //\n    // To determine if the rendering is happening because of a\n    // dashboard switch, check if the item reference has changed.\n    const reloadAllowed = this.props.item === prevProps.item;\n    const filtersChanged = prevProps.itemFilters !== this.props.itemFilters;\n    const vis = orObject(this.props.visualization);\n    const prevVis = orObject(prevProps.visualization);\n    const visChanged = vis.id !== prevVis.id || vis.activeType !== prevVis.activeType;\n    return reloadAllowed && (visChanged || filtersChanged);\n  };\n  reloadPlugin = prevProps => {\n    if (pluginManager.pluginIsAvailable(this.props.item, this.props.visualization) && this.shouldPluginReload(prevProps)) {\n      const prevVis = orObject(prevProps.visualization);\n      const currentVis = this.props.visualization;\n      const useActiveType = currentVis.activeType !== prevVis.activeType || currentVis.activeType !== this.props.item.type;\n\n      if (useActiveType || this.props.itemFilters !== prevProps.itemFilters) {\n        pluginManager.unmount(this.props.item, prevVis.activeType || this.props.item.type);\n        pluginManager.load(this.props.item, this.props.visualization, {\n          credentials: this.pluginCredentials,\n          activeType: useActiveType ? currentVis.activeType : null\n        });\n      }\n    }\n  };\n\n  componentDidMount() {\n    this.pluginCredentials = pluginCredentials(this.d2);\n\n    if (pluginManager.pluginIsAvailable(this.props.item, this.props.visualization)) {\n      pluginManager.load(this.props.item, this.props.visualization, {\n        credentials: this.pluginCredentials,\n        activeType: !this.props.editMode ? this.getActiveType() : null,\n        options: this.props.options\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    this.reloadPlugin(prevProps);\n  }\n\n  getActiveType = () => this.props.visualization.activeType || this.props.item.type;\n\n  render() {\n    const {\n      classes,\n      item,\n      visualization,\n      style\n    } = this.props;\n    const pluginIsAvailable = pluginManager.pluginIsAvailable(item, visualization);\n    return pluginIsAvailable ? <div id={getGridItemDomId(item.id)} style={style} /> : <div className={classes.textDiv}>\n                {i18n.t('Unable to load the plugin for this item')}\n            </div>;\n  }\n\n}\n\nDefaultPlugin.contextTypes = {\n  d2: PropTypes.object\n};\nDefaultPlugin.propTypes = {\n  classes: PropTypes.object,\n  editMode: PropTypes.bool,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object,\n  options: PropTypes.object,\n  style: PropTypes.object,\n  visualization: PropTypes.object\n};\nDefaultPlugin.defaultProps = {\n  style: {},\n  item: {},\n  itemFilters: {},\n  options: {},\n  visualization: {}\n};\nexport default DefaultPlugin;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nexport const ThreeDots = () => <svg height=\"18\" viewBox=\"0 0 18 18\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"m4 7.5c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm10 0c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm-5 0c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5z\" fill=\"#6e7a8a\" />\n    </svg>;\nexport const SpeechBubble = () => <svg height=\"20\" viewBox=\"0 0 20 20\" width=\"20\" xmlns=\"http://www.w3.org/2000/svg\" style={{\n  margin: '3px 2px 0 2px'\n}} // Temporary fix for the misaligned icon, should be removed once the icon is replaced\n>\n        <path d=\"m20 2h-16c-1.1 0-1.99.9-1.99 2l-.01 18 4-4h14c1.1 0 2-.9 2-2v-12c0-1.1-.9-2-2-2zm-2 12h-12v-2h12zm0-3h-12v-2h12zm0-3h-12v-2h12z\" fill=\"#6e7a8a\" fillRule=\"evenodd\" transform=\"translate(-2 -2)\" />\n    </svg>;\nexport const Warning = () => <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" fill={colors.grey600}>\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z\" />\n    </svg>;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Warning } from './assets/icons';\nimport classes from './styles/FatalErrorBoundary.module.css';\n\nclass FatalErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      errorFound: false\n    };\n  }\n\n  componentDidCatch(error, info) {\n    this.setState({\n      errorFound: true\n    });\n    console.log('error: ', error);\n    console.log('info: ', info);\n  }\n\n  render() {\n    if (this.state.errorFound) {\n      return <p className={classes.container}>\n                    <span className={classes.icon}>\n                        <Warning />\n                    </span>\n                    <span className={classes.message}>\n                        {i18n.t('There was a problem loading this dashboard item')}\n                    </span>\n                </p>;\n    }\n\n    return this.props.children;\n  }\n\n}\n\nFatalErrorBoundary.propTypes = {\n  children: PropTypes.node\n};\nexport default FatalErrorBoundary;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { colors } from '@dhis2/ui';\nimport classes from './styles/DeleteItemButton.module.css';\n\nconst DeleteItemButton = ({\n  onClick\n}) => <button type=\"button\" className={classes.deleteItemButton} onClick={onClick} title={i18n.t(`Delete item`)}>\n        <DeleteIcon style={{\n    fill: colors.red500\n  }} />\n    </button>;\n\nDeleteItemButton.propTypes = {\n  onClick: PropTypes.func\n};\nexport default DeleteItemButton;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { sGetIsEditing } from '../../reducers/editDashboard';\nimport { acRemoveDashboardItem } from '../../actions/editDashboard';\nimport DeleteItemButton from './DeleteItemButton';\nimport classes from './styles/ItemHeader.module.css'; // This is the margin-top + margin-bottom defined in the css file\n\nexport const HEADER_MARGIN_HEIGHT = 12;\nconst ItemHeader = React.forwardRef(({\n  itemId,\n  acRemoveDashboardItem,\n  actionButtons,\n  title,\n  editMode\n}, ref) => {\n  const handleDeleteItem = () => acRemoveDashboardItem(itemId);\n\n  return <div className={classes.itemHeaderWrap} ref={ref}>\n                <p className={classes.itemTitle}>{title}</p>\n                {editMode ? <div className={classes.itemActionsWrap}>\n                        <DeleteItemButton onClick={handleDeleteItem} />\n                    </div> : actionButtons && <div className={classes.itemActionsWrap}>\n                            {actionButtons}\n                        </div>}\n            </div>;\n});\nItemHeader.propTypes = {\n  acRemoveDashboardItem: PropTypes.func,\n  actionButtons: PropTypes.node,\n  editMode: PropTypes.bool,\n  itemId: PropTypes.string,\n  title: PropTypes.string\n};\n\nconst mapStateToProps = state => ({\n  editMode: sGetIsEditing(state)\n});\n\nconst mapDispatchToProps = {\n  acRemoveDashboardItem\n};\nexport default connect(mapStateToProps, mapDispatchToProps, null, {\n  forwardRef: true\n})(ItemHeader);","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { isSingleValue, isYearOverYear, VIS_TYPE_GAUGE, VIS_TYPE_PIE } from '@dhis2/analytics';\nimport { Button, Menu, MenuItem, Divider, colors } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport Popover from '@material-ui/core/Popover';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport { ThreeDots, SpeechBubble } from './assets/icons';\nimport { pluginIsAvailable, getLink } from './plugin';\nimport { CHART, MAP, REPORT_TABLE, EVENT_CHART, EVENT_REPORT, isTrackerDomainType, hasMapView, getAppName } from '../../../modules/itemTypes';\nconst iconFill = {\n  fill: colors.grey600\n};\n\nconst ItemHeaderButtons = props => {\n  const [anchorEl, setAnchorEl] = useState(null);\n  const {\n    item,\n    visualization,\n    onSelectActiveType,\n    d2,\n    activeType\n  } = props;\n  const isTrackerType = isTrackerDomainType(item.type);\n\n  const onViewTable = () => {\n    handleClose();\n    onSelectActiveType(isTrackerType ? EVENT_REPORT : REPORT_TABLE);\n  };\n\n  const onViewChart = () => {\n    handleClose();\n    onSelectActiveType(isTrackerType ? EVENT_CHART : CHART);\n  };\n\n  const onViewMap = () => {\n    handleClose();\n    onSelectActiveType(MAP);\n  };\n\n  const itemHasMapView = () => hasMapView(item.type);\n\n  const handleMenuClick = (_, event) => setAnchorEl(event.currentTarget);\n\n  const handleInterpretationClick = () => {\n    props.onToggleFooter();\n\n    if (anchorEl !== null) {\n      handleClose();\n    }\n  };\n\n  const handleClose = () => setAnchorEl(null);\n\n  const type = visualization.type || item.type;\n  const canViewAs = !isSingleValue(type) && !isYearOverYear(type) && type !== VIS_TYPE_GAUGE && type !== VIS_TYPE_PIE;\n  const interpretationMenuLabel = props.activeFooter ? i18n.t(`Hide interpretations and details`) : i18n.t(`Show interpretations and details`);\n\n  const ViewAsMenuItems = () => <>\n            {activeType !== CHART && activeType !== EVENT_CHART && <MenuItem dense label={i18n.t('View as Chart')} onClick={onViewChart} icon={<ChartIcon style={iconFill} />} />}\n            {activeType !== REPORT_TABLE && activeType !== EVENT_REPORT && <MenuItem dense label={i18n.t('View as Table')} onClick={onViewTable} icon={<TableIcon style={iconFill} />} />}\n            {itemHasMapView() && activeType !== MAP && <MenuItem dense label={i18n.t('View as Map')} onClick={onViewMap} icon={<MapIcon style={iconFill} />} />}\n        </>;\n\n  return pluginIsAvailable(item, visualization) ? <>\n            <Button small secondary onClick={handleMenuClick}>\n                <ThreeDots />\n            </Button>\n            {anchorEl && <Popover open={Boolean(anchorEl)} onClose={handleClose} anchorEl={anchorEl}>\n                    <Menu>\n                        {canViewAs && <>\n                                <ViewAsMenuItems />\n                                <Divider />\n                            </>}\n                        <MenuItem dense icon={<LaunchIcon style={{\n          fill: '#6e7a8a'\n        }} />} label={i18n.t('Open in {{appName}} app', {\n          appName: getAppName(item.type)\n        })} href={getLink(item, d2)} target=\"_blank\" />\n                        <MenuItem dense icon={<SpeechBubble />} label={interpretationMenuLabel} onClick={handleInterpretationClick} />\n                    </Menu>\n                </Popover>}\n        </> : null;\n};\n\nItemHeaderButtons.propTypes = {\n  activeFooter: PropTypes.bool,\n  activeType: PropTypes.string,\n  d2: PropTypes.object,\n  item: PropTypes.object,\n  visualization: PropTypes.object,\n  onSelectActiveType: PropTypes.func,\n  onToggleFooter: PropTypes.func\n};\nexport default ItemHeaderButtons;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { colors } from '@dhis2/ui';\nimport { getId } from './plugin';\nimport InterpretationsComponent from '@dhis2/d2-ui-interpretations';\nconst style = {\n  scrollContainer: {\n    overflowY: 'auto',\n    height: '340px'\n  },\n  line: {\n    margin: '-1px 0px 0px',\n    height: '1px',\n    border: 'none',\n    backgroundColor: colors.grey100\n  }\n};\n\nclass ItemFooter extends Component {\n  render() {\n    const objectId = getId(this.props.item);\n    return <div className=\"dashboard-item-footer\">\n                <hr style={style.line} />\n                <div style={style.scrollContainer}>\n                    <InterpretationsComponent d2={this.context.d2} item={this.props.item} type={this.props.item.type.toLowerCase()} id={objectId} appName=\"dashboard\" />\n                </div>\n            </div>;\n  }\n\n}\n\nItemFooter.contextTypes = {\n  d2: PropTypes.object.isRequired\n};\nItemFooter.propTypes = {\n  item: PropTypes.object.isRequired\n};\nexport default ItemFooter;","// Note that this ignores discrepancies in 'this', so shouldn't be used with bound functions\n// This is useful instead of lodash/memoize when we only need to memoize a single value\n// Inspiration: https://github.com/alexreardon/memoize-one\nconst memoizeOne = fn => {\n  let lastArgs = undefined;\n  let lastValue = undefined;\n  return (...args) => {\n    if (lastArgs && args.length === lastArgs.length && args.every((arg, i) => arg === lastArgs[i])) {\n      return lastValue;\n    }\n\n    lastArgs = args;\n    lastValue = fn(...args);\n    return lastValue;\n  };\n};\n\nexport default memoizeOne;","import React from 'react';\nimport { CircularLoader } from '@dhis2/ui';\nimport classes from './styles/LoadingMask.module.css';\n\nconst LoadingMask = () => {\n  return <div className={classes.center}>\n            <CircularLoader />\n        </div>;\n};\n\nexport default LoadingMask;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport uniqueId from 'lodash/uniqueId';\nimport VisualizationPlugin from '@dhis2/data-visualizer-plugin';\nimport i18n from '@dhis2/d2-i18n';\nimport DefaultPlugin from './DefaultPlugin';\nimport FatalErrorBoundary from './FatalErrorBoundary';\nimport ItemHeader, { HEADER_MARGIN_HEIGHT } from '../ItemHeader';\nimport ItemHeaderButtons from './ItemHeaderButtons';\nimport ItemFooter from './ItemFooter';\nimport * as pluginManager from './plugin';\nimport { sGetVisualization } from '../../../reducers/visualizations';\nimport { sGetItemFiltersRoot } from '../../../reducers/itemFilters';\nimport { acAddVisualization, acSetActiveVisualizationType } from '../../../actions/visualizations';\nimport { VISUALIZATION, MAP, CHART, REPORT_TABLE } from '../../../modules/itemTypes';\nimport memoizeOne from '../../../modules/memoizeOne';\nimport { getVisualizationConfig } from './plugin';\nimport LoadingMask from './LoadingMask';\nimport { ITEM_CONTENT_PADDING_BOTTOM } from '../../ItemGrid/ItemGrid';\nimport classes from './styles/Item.module.css';\nexport class Item extends Component {\n  state = {\n    showFooter: false,\n    configLoaded: false,\n    pluginIsLoaded: false\n  };\n\n  constructor(props, context) {\n    super(props);\n    this.d2 = context.d2;\n    this.contentRef = React.createRef();\n    this.headerRef = React.createRef();\n    this.memoizedApplyFilters = memoizeOne(this.applyFilters);\n    this.memoizedGetVisualizationConfig = memoizeOne(getVisualizationConfig);\n    this.memoizedGetContentStyle = memoizeOne(this.getContentStyle);\n  }\n\n  async componentDidMount() {\n    this.props.onVisualizationLoaded( // TODO do not call fetch on the pluginManager, do it here as the manager will eventually be removed...\n    await pluginManager.fetch(this.props.item));\n    this.setState({\n      configLoaded: true\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.pluginIsLoaded && (prevProps.visualization !== this.props.visualization || prevProps.itemFilters !== this.props.itemFilters)) {\n      this.setState({\n        pluginIsLoaded: false\n      });\n    }\n  }\n\n  applyFilters = (visualization, filters) => {\n    if (!Object.keys(filters).length) {\n      return visualization;\n    } // deep clone objects in filters to avoid changing the visualization in the Redux store\n\n\n    const visRows = visualization.rows.map(obj => ({ ...obj\n    }));\n    const visColumns = visualization.columns.map(obj => ({ ...obj\n    }));\n    const visFilters = visualization.filters.map(obj => ({ ...obj\n    }));\n    Object.keys(filters).forEach(dimensionId => {\n      if (filters[dimensionId]) {\n        let dimensionFound = false;\n        [visRows, visColumns, visFilters].forEach(dimensionObjects => dimensionObjects.filter(obj => obj.dimension === dimensionId).forEach(obj => {\n          dimensionFound = true;\n          obj.items = filters[dimensionId];\n        })); // add dimension to filters if not already present elsewhere\n\n        if (!dimensionFound) {\n          visFilters.push({\n            dimension: dimensionId,\n            items: filters[dimensionId]\n          });\n        }\n      }\n    });\n    return { ...visualization,\n      rows: visRows,\n      columns: visColumns,\n      filters: visFilters\n    };\n  };\n  getUniqueKey = memoizeOne(() => uniqueId());\n  pluginCredentials = null;\n  getPluginComponent = () => {\n    const activeType = this.getActiveType();\n    const visualization = this.memoizedGetVisualizationConfig(this.props.visualization, this.props.item.type, activeType);\n\n    if (!visualization) {\n      return <div className={classes.textDiv}>\n                    {i18n.t('No data to display')}\n                </div>;\n    }\n\n    const calculatedHeight = this.props.item.originalHeight - this.headerRef.current.clientHeight - HEADER_MARGIN_HEIGHT - ITEM_CONTENT_PADDING_BOTTOM;\n    const props = { ...this.props,\n      visualization,\n      classes,\n      style: this.memoizedGetContentStyle(calculatedHeight, this.contentRef ? this.contentRef.offsetHeight : null, this.props.editMode)\n    };\n\n    switch (activeType) {\n      case VISUALIZATION:\n      case CHART:\n      case REPORT_TABLE:\n        {\n          return <>\n                        {!this.state.pluginIsLoaded && <div style={props.style}>\n                                <LoadingMask />\n                            </div>}\n                        <VisualizationPlugin d2={this.d2} visualization={this.memoizedApplyFilters(visualization, props.itemFilters)} onLoadingComplete={this.onLoadingComplete} forDashboard={true} style={props.style} />\n                    </>;\n        }\n\n      case MAP:\n        {\n          if (props.item.type === MAP) {\n            // apply filters only to thematic and event layers\n            // for maps AO\n            const mapViews = props.visualization.mapViews.map(obj => {\n              if (obj.layer.includes('thematic') || obj.layer.includes('event')) {\n                return this.memoizedApplyFilters(obj, props.itemFilters);\n              }\n\n              return obj;\n            });\n            props.visualization = { ...props.visualization,\n              mapViews\n            };\n          } else {\n            // this is the case of a non map AO passed to the maps plugin\n            // due to a visualization type switch in dashboard item\n            // maps plugin takes care of converting the AO to a suitable format\n            props.visualization = this.memoizedApplyFilters(props.visualization, props.itemFilters);\n          }\n\n          props.options = { ...props.options,\n            hideTitle: true\n          };\n          return <DefaultPlugin {...props} />;\n        }\n\n      default:\n        {\n          props.visualization = this.memoizedApplyFilters(props.visualization, props.itemFilters);\n          return <DefaultPlugin {...props} />;\n        }\n    }\n  };\n  onLoadingComplete = () => {\n    this.setState({\n      pluginIsLoaded: true\n    });\n  };\n  onToggleFooter = () => {\n    this.setState({\n      showFooter: !this.state.showFooter\n    }, this.props.onToggleItemExpanded(this.props.item.id));\n  };\n  onSelectActiveType = type => {\n    if (type === this.getActiveType()) {\n      return;\n    }\n\n    pluginManager.unmount(this.props.item, this.getActiveType());\n    this.props.onSelectActiveType(this.props.visualization.id, type);\n  };\n  getActiveType = () => this.props.visualization.activeType || this.props.item.type;\n  pluginIsAvailable = () => pluginManager.pluginIsAvailable(this.props.item, this.props.visualization);\n  getContentStyle = (calculatedHeight, measuredHeight, editMode) => {\n    const height = editMode ? measuredHeight || calculatedHeight : calculatedHeight;\n    return {\n      height\n    };\n  };\n\n  render() {\n    const {\n      item,\n      editMode,\n      itemFilters\n    } = this.props;\n    const {\n      showFooter\n    } = this.state;\n    const actionButtons = <ItemHeaderButtons item={item} visualization={this.props.visualization} onSelectActiveType={this.onSelectActiveType} onToggleFooter={this.onToggleFooter} d2={this.d2} activeType={this.getActiveType()} activeFooter={this.state.showFooter} />;\n    return <>\n                <ItemHeader title={pluginManager.getName(item)} itemId={item.id} actionButtons={actionButtons} ref={this.headerRef} />\n                <FatalErrorBoundary>\n                    <div key={this.getUniqueKey(itemFilters)} className=\"dashboard-item-content\" ref={ref => this.contentRef = ref}>\n                        {this.state.configLoaded && this.getPluginComponent()}\n                    </div>\n                </FatalErrorBoundary>\n                {!editMode && showFooter ? <ItemFooter item={item} /> : null}\n            </>;\n  }\n\n}\nItem.contextTypes = {\n  d2: PropTypes.object\n};\nItem.propTypes = {\n  editMode: PropTypes.bool,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object,\n  visualization: PropTypes.object,\n  onSelectActiveType: PropTypes.func,\n  onToggleItemExpanded: PropTypes.func,\n  onVisualizationLoaded: PropTypes.func\n};\nItem.defaultProps = {\n  item: {},\n  editMode: false,\n  onToggleItemExpanded: Function.prototype,\n  itemFilters: {},\n  visualization: {}\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n  itemFilters: sGetItemFiltersRoot(state),\n  visualization: sGetVisualization(state, pluginManager.extractFavorite(ownProps.item).id)\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onVisualizationLoaded: visualization => dispatch(acAddVisualization(visualization)),\n  onSelectActiveType: (id, type, activeType) => dispatch(acSetActiveVisualizationType(id, type, activeType))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Item);","import React from 'react';\nimport { colors } from '@dhis2/ui';\nconst style = {\n  backgroundColor: colors.grey200,\n  border: 'none',\n  height: '1px',\n  margin: '0px 0px 5px 0px'\n};\n\nconst Line = () => <hr style={style} />;\n\nexport default Line;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { sGetMessagesRoot } from '../../../reducers/messages';\nimport { formatDate } from '../../../modules/util';\nimport { colors } from '@dhis2/ui';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\nimport './MessagesItem.css';\nconst PRIVATE = 'PRIVATE';\nconst messageTypes = {\n  [PRIVATE]: 'Private',\n  VALIDATION_RESULT: 'Validation',\n  TICKET: 'Ticket',\n  SYSTEM: 'System'\n};\nconst style = {\n  list: {\n    listStyleType: 'none',\n    paddingLeft: '0px'\n  },\n  seeAll: {\n    textAlign: 'center',\n    fontSize: '13px',\n    marginBottom: '5px'\n  },\n  sender: {\n    fontSize: '13px',\n    lineHeight: '15px',\n    margin: 0,\n    color: colors.grey800\n  },\n  snippet: {\n    color: colors.grey800,\n    fontSize: '13px',\n    lineHeight: '15px',\n    maxHeight: '30px',\n    overflow: 'hidden'\n  }\n};\n\nclass MessagesItem extends Component {\n  state = {\n    uiLocale: ''\n  };\n\n  async componentDidMount() {\n    const uiLocale = await this.context.d2.currentUser.userSettings.get('keyUiLocale');\n    this.setState({\n      uiLocale\n    });\n  }\n\n  getMessageHref = msg => {\n    const msgIdentifier = msg ? `#/${msg.messageType}/${msg.id}` : '';\n    return `${this.context.baseUrl}/dhis-web-messaging/${msgIdentifier}`;\n  };\n  getMessageSender = msg => {\n    const latestMsg = msg.messages.slice(-1)[0];\n    return latestMsg.sender ? latestMsg.sender.displayName : '';\n  };\n  getMessageItems = () => {\n    const editClass = !this.props.editMode ? 'view' : null;\n    return this.props.messages.map(msg => {\n      const redirectToMsg = () => {\n        if (!this.props.editMode) {\n          document.location.href = this.getMessageHref(msg);\n        }\n      };\n\n      const sender = msg.messageType === PRIVATE ? this.getMessageSender(msg) : messageTypes[msg.messageType];\n      const readClass = !msg.read ? 'unread' : null;\n      const latestMsg = msg.messages.slice(-1)[0];\n      const msgDate = latestMsg.lastUpdated;\n      return <li className={`message-item ${editClass}`} key={msg.id} onClick={redirectToMsg}>\n                    <p className={`message-title ${readClass}`}>\n                        {msg.displayName} ({msg.messageCount})\n                    </p>\n                    <p style={style.sender}>\n                        {sender} - {formatDate(msgDate, this.state.uiLocale)}\n                    </p>\n                    <p style={style.snippet}>{latestMsg.text}</p>\n                </li>;\n    });\n  };\n\n  render() {\n    return <>\n                <ItemHeader title={i18n.t('Messages')} itemId={this.props.item.id} />\n                <Line />\n                {this.props.messages.length > 0 && <div className=\"dashboard-item-content\">\n                        <ul style={style.list}>{this.getMessageItems()}</ul>\n                        <div style={style.seeAll}>\n                            <a href={this.getMessageHref()}>\n                                {i18n.t('See all messages')}\n                            </a>\n                        </div>\n                    </div>}\n            </>;\n  }\n\n}\n\nMessagesItem.propTypes = {\n  editMode: PropTypes.bool,\n  item: PropTypes.object,\n  messages: PropTypes.array\n};\nMessagesItem.contextTypes = {\n  d2: PropTypes.object,\n  baseUrl: PropTypes.string\n};\n\nconst mapStateToProps = state => {\n  return {\n    messages: Object.values(sGetMessagesRoot(state))\n  };\n};\n\nconst MessagesContainer = connect(mapStateToProps, null)(MessagesItem);\nexport default MessagesContainer;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ItemHeader from '../ItemHeader';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nconst NotSupportedItem = props => <>\n        <ItemHeader title={i18n.t('Item type \"{{type}}\" not supported', {\n    type: props.item.type\n  })} itemId={props.item.id} />\n        <div style={{\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '90%'\n  }}>\n            <NotInterestedIcon style={{\n      width: 100,\n      height: 100,\n      align: 'center'\n    }} color=\"disabled\" />\n        </div>\n    </>;\n\nNotSupportedItem.propTypes = {\n  item: PropTypes.object\n};\nexport default NotSupportedItem;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst DescriptionIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill={colors.grey500}>\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M14 2H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6zm2 16H8v-2h8v2zm0-4H8v-2h8v2zm-3-5V3.5L18.5 9H13z\" />\n    </svg>;\n\nDescriptionIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default DescriptionIcon;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst DeleteIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill={colors.red500}>\n        <path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>;\n\nDeleteIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default DeleteIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { colors } from '@dhis2/ui';\nimport DescriptionIcon from '../../../icons/Description';\nimport DeleteIcon from '../../../icons/Delete';\nimport Line from '../../../widgets/Line';\nimport { itemTypeMap, getItemUrl } from '../../../modules/itemTypes';\nimport { orArray } from '../../../modules/util';\nimport { tRemoveListItemContent } from './actions';\nimport ItemHeader from '../ItemHeader';\nimport classes from './Item.module.css';\n\nconst getItemTitle = item => itemTypeMap[item.type].pluralTitle;\n\nconst getContentItems = item => orArray(item[itemTypeMap[item.type].propName]).filter((item, index, array) => array.findIndex(el => el.id === item.id) === index);\n\nconst ListItem = (props, context) => {\n  const {\n    item,\n    editMode,\n    tRemoveListItemContent\n  } = props;\n  const contentItems = getContentItems(item);\n\n  const getLink = contentItem => {\n    const deleteButton = <button className={classes.deletebutton} onClick={() => tRemoveListItemContent(item, contentItem)}>\n                <DeleteIcon className={classes.deleteicon} />\n            </button>;\n    return <>\n                <a className={classes.link} style={{\n        color: colors.grey900\n      }} href={getItemUrl(item.type, contentItem, context.d2)}>\n                    {contentItem.name}\n                </a>\n                {editMode ? deleteButton : null}\n            </>;\n  };\n\n  return <>\n            <ItemHeader title={getItemTitle(item)} itemId={item.id} />\n            <Line />\n            <div className=\"dashboard-item-content\">\n                <ul className={classes.list}>\n                    {contentItems.map(contentItem => <li className={classes.item} key={contentItem.id}>\n                            <DescriptionIcon className={classes.itemicon} />\n                            {getLink(contentItem)}\n                        </li>)}\n                </ul>\n            </div>\n        </>;\n};\n\nListItem.propTypes = {\n  editMode: PropTypes.bool,\n  item: PropTypes.object,\n  tRemoveListItemContent: PropTypes.func\n};\nListItem.contextTypes = {\n  d2: PropTypes.object\n};\nexport default connect(null, {\n  tRemoveListItemContent\n})(ListItem);","import { acUpdateDashboardItem, acRemoveDashboardItem } from '../../../actions/editDashboard';\nimport { itemTypeMap } from '../../../modules/itemTypes';\nexport const tRemoveListItemContent = (dashboardItem, content) => dispatch => {\n  const listItemType = itemTypeMap[dashboardItem.type].propName;\n  const newContent = dashboardItem[listItemType].filter(item => item.id !== content.id);\n\n  if (newContent.length) {\n    dashboardItem[listItemType] = newContent;\n    dispatch(acUpdateDashboardItem(dashboardItem));\n  } else {\n    dispatch(acRemoveDashboardItem(dashboardItem));\n  }\n};","import React from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport Input from '@material-ui/core/Input';\nimport { Parser as RichTextParser, Editor as RichTextEditor } from '@dhis2/d2-ui-rich-text';\nimport { acUpdateDashboardItem } from '../../../actions/editDashboard';\nimport { sGetEditDashboardItems } from '../../../reducers/editDashboard';\nimport { sGetDashboardItems } from '../../../reducers/dashboards';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\nconst style = {\n  textDiv: {\n    padding: '10px',\n    whiteSpace: 'pre-line',\n    lineHeight: '20px'\n  },\n  textField: {\n    fontSize: '14px',\n    fontStretch: 'normal',\n    width: '90%',\n    margin: '0 auto',\n    display: 'block',\n    lineHeight: '24px'\n  },\n  container: {\n    marginBottom: '20px',\n    marginTop: '20px'\n  }\n};\n\nconst TextItem = props => {\n  const {\n    item,\n    editMode,\n    text,\n    acUpdateDashboardItem\n  } = props;\n\n  const onChangeText = event => {\n    const updatedItem = { ...item,\n      text: event.target.value\n    };\n    acUpdateDashboardItem(updatedItem);\n  };\n\n  const viewItem = () => {\n    const textDivStyle = Object.assign({}, style.textField, style.textDiv);\n    return <div className=\"dashboard-item-content\" style={style.container}>\n                <RichTextParser style={textDivStyle}>{text}</RichTextParser>\n            </div>;\n  };\n\n  const editItem = () => {\n    return <>\n                <ItemHeader title={i18n.t('Text item')} itemId={item.id} />\n                <Line />\n                <div className=\"dashboard-item-content\">\n                    <RichTextEditor onEdit={onChangeText}>\n                        <Input value={text} multiline fullWidth style={style.textField} placeholder={i18n.t('Add text here')} onChange={onChangeText} />\n                    </RichTextEditor>\n                </div>\n            </>;\n  };\n\n  return <>{editMode ? editItem() : viewItem()}</>;\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const items = ownProps.editMode ? sGetEditDashboardItems(state) : sGetDashboardItems(state);\n  const item = items.find(item => item.id === ownProps.item.id);\n  return {\n    text: item ? item.text : ''\n  };\n};\n\nTextItem.propTypes = {\n  acUpdateDashboardItem: PropTypes.func,\n  editMode: PropTypes.bool,\n  item: PropTypes.object,\n  text: PropTypes.string\n};\nexport default connect(mapStateToProps, {\n  acUpdateDashboardItem\n})(TextItem);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\nimport { FILTER_ORG_UNIT } from '../../../actions/itemFilters';\nimport { sGetItemFiltersRoot } from '../../../reducers/itemFilters';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nconst getIframeSrc = (appDetails, item, itemFilters) => {\n  let iframeSrc = `${appDetails.launchUrl}?dashboardItemId=${item.id}`;\n\n  if (itemFilters && itemFilters[FILTER_ORG_UNIT] && itemFilters[FILTER_ORG_UNIT].length) {\n    const ouIds = itemFilters[FILTER_ORG_UNIT].map(ouPath => ouPath.split('/').slice(-1)[0]);\n    iframeSrc += `&userOrgUnit=${ouIds.join(',')}`;\n  }\n\n  return iframeSrc;\n};\n\nconst AppItem = ({\n  item,\n  itemFilters\n}, context) => {\n  let appDetails;\n  const appKey = item.appKey;\n\n  if (appKey) {\n    appDetails = context.d2.system.installedApps.find(app => app.key === appKey);\n  }\n\n  return appDetails && appDetails.name && appDetails.launchUrl ? <>\n            <ItemHeader title={appDetails.name} itemId={item.id} />\n            <Line />\n            <iframe title={appDetails.name} src={getIframeSrc(appDetails, item, itemFilters)} className=\"dashboard-item-content\" style={{\n      border: 'none'\n    }} />\n        </> : <>\n            <ItemHeader title={`${appKey} app not found`} />\n            <Line />\n            <div className=\"dashboard-item-content\" style={{\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      height: '90%'\n    }}>\n                <NotInterestedIcon color=\"disabled\" disabled style={{\n        width: 100,\n        height: 100,\n        align: 'center'\n      }} />\n            </div>\n        </>;\n};\n\nAppItem.propTypes = {\n  item: PropTypes.object,\n  itemFilters: PropTypes.object\n};\nAppItem.contextTypes = {\n  d2: PropTypes.object\n};\n\nconst mapStateToProps = state => ({\n  itemFilters: sGetItemFiltersRoot(state)\n});\n\nexport default connect(mapStateToProps)(AppItem);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { colors } from '@dhis2/ui';\nimport ItemHeader from '../ItemHeader';\nconst style = {\n  margin: '21px 28px',\n  fontSize: '14px',\n  lineHeight: '18px',\n  color: colors.grey600\n};\n\nconst SpacerItem = props => {\n  return <>\n            <ItemHeader title={i18n.t('Spacer')} itemId={props.item.id} />\n            <p style={style}>\n                {i18n.t('Use a spacer to create empty vertical space between other dashboard items.')}\n            </p>\n        </>;\n};\n\nSpacerItem.propTypes = {\n  item: PropTypes.object\n};\nexport default SpacerItem;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport VisualizationItem from './VisualizationItem/Item';\nimport MessagesItem from './MessagesItem/Item';\nimport NotSupportedItem from './NotSupportedItem/Item';\nimport ListItem from './ListItem/Item';\nimport TextItem from './TextItem/Item';\nimport AppItem from './AppItem/Item';\nimport SpacerItem from './SpacerItem/Item';\nimport { APP, VISUALIZATION, REPORT_TABLE, CHART, MAP, EVENT_CHART, EVENT_REPORT, MESSAGES, REPORTS, RESOURCES, USERS, TEXT, SPACER } from '../../modules/itemTypes';\nimport { DEFAULT_STATE_ITEM_FILTERS } from '../../reducers/itemFilters';\n\nconst getGridItem = type => {\n  switch (type) {\n    case VISUALIZATION:\n    case REPORT_TABLE:\n    case CHART:\n    case MAP:\n    case EVENT_CHART:\n    case EVENT_REPORT:\n      return VisualizationItem;\n\n    case MESSAGES:\n      return MessagesItem;\n\n    case REPORTS:\n    case RESOURCES:\n    case USERS:\n      return ListItem;\n\n    case TEXT:\n      return TextItem;\n\n    case SPACER:\n      return SpacerItem;\n\n    case APP:\n      return AppItem;\n\n    default:\n      return NotSupportedItem;\n  }\n};\n\nexport const Item = props => {\n  const GridItem = getGridItem(props.item.type);\n  return <GridItem item={props.item} editMode={props.editMode} itemFilters={props.editMode ? DEFAULT_STATE_ITEM_FILTERS : props.itemFilters} onToggleItemExpanded={props.onToggleItemExpanded} />;\n};\nItem.propTypes = {\n  editMode: PropTypes.bool,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object,\n  onToggleItemExpanded: PropTypes.func\n};","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nexport const NoContentMessage = ({\n  text\n}) => <div style={{\n  padding: '50px 10px',\n  textAlign: 'center',\n  fontSize: '15px',\n  fontWeight: 500,\n  color: colors.grey600\n}}>\n        {text}\n    </div>;\nNoContentMessage.propTypes = {\n  text: PropTypes.string\n};\nexport default NoContentMessage;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash/debounce';\nimport pick from 'lodash/pick';\nconst defaultDebounceMs = 100;\nconst defaultBufferFactor = 0.25;\n\nclass ProgressiveLoadingContainer extends Component {\n  static propTypes = {\n    children: PropTypes.node.isRequired,\n    bufferFactor: PropTypes.number,\n    className: PropTypes.string,\n    debounceMs: PropTypes.number,\n    style: PropTypes.object\n  };\n  static defaultProps = {\n    debounceMs: defaultDebounceMs,\n    bufferFactor: defaultBufferFactor\n  };\n  state = {\n    shouldLoad: false\n  };\n  containerRef = null;\n  shouldLoadHandler = null;\n\n  checkShouldLoad() {\n    const bufferPx = this.props.bufferFactor * window.innerHeight;\n\n    if (!this.containerRef) {\n      return;\n    }\n\n    const rect = this.containerRef.getBoundingClientRect();\n\n    if (rect.bottom > -bufferPx && rect.top < window.innerHeight + bufferPx) {\n      this.setState({\n        shouldLoad: true\n      });\n      this.removeHandler();\n    }\n  }\n\n  registerHandler() {\n    this.shouldLoadHandler = debounce(() => this.checkShouldLoad(), this.props.debounceMs);\n    const containers = [window, // this is probably unnecessary\n    ...document.getElementsByClassName('app-shell-app')];\n    containers.forEach(container => {\n      container.addEventListener('scroll', this.shouldLoadHandler);\n    });\n  }\n\n  removeHandler() {\n    const containers = [window, // this is probably unnecessary\n    ...document.getElementsByClassName('app-shell-app')];\n    containers.forEach(container => {\n      container.removeEventListener('scroll', this.shouldLoadHandler);\n    });\n  }\n\n  componentDidMount() {\n    this.registerHandler();\n    this.checkShouldLoad();\n  }\n\n  componentWillUnmount() {\n    this.removeHandler();\n  }\n\n  render() {\n    const {\n      children,\n      className,\n      style,\n      ...props\n    } = this.props;\n    const {\n      shouldLoad\n    } = this.state;\n    const eventProps = pick(props, ['onMouseDown', 'onTouchStart', 'onMouseUp', 'onTouchEnd']);\n    return <div ref={ref => this.containerRef = ref} style={style} className={className} {...eventProps}>\n                {shouldLoad && children}\n            </div>;\n  }\n\n}\n\nexport default ProgressiveLoadingContainer;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ReactGridLayout from 'react-grid-layout';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport { acUpdateDashboardLayout, acRemoveDashboardItem } from '../../actions/editDashboard';\nimport { Item } from '../Item/Item';\nimport { resize as pluginResize } from '../Item/VisualizationItem/plugin';\nimport { isVisualizationType } from '../../modules/itemTypes';\nimport { GRID_ROW_HEIGHT, GRID_COMPACT_TYPE, MARGIN, getGridColumns, hasShape, onItemResize } from './gridUtil';\nimport { orArray } from '../../modules/util';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\nimport './ItemGrid.css';\nimport { sGetSelectedId, sGetSelectedIsLoading } from '../../reducers/selected';\nimport { sGetEditDashboardRoot, sGetEditDashboardItems } from '../../reducers/editDashboard';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport ProgressiveLoadingContainer from '../Item/ProgressiveLoadingContainer'; // Component\n\nconst EXPANDED_HEIGHT = 17; // this is set in the .dashboard-item-content css\n\nexport const ITEM_CONTENT_PADDING_BOTTOM = 4;\nexport class ItemGrid extends Component {\n  state = {\n    expandedItems: {}\n  };\n  onToggleItemExpanded = clickedId => {\n    const isExpanded = typeof this.state.expandedItems[clickedId] === 'boolean' ? this.state.expandedItems[clickedId] : false;\n    const expandedItems = { ...this.state.expandedItems\n    };\n    expandedItems[clickedId] = !isExpanded;\n    this.setState({\n      expandedItems\n    });\n  };\n  onRemoveItem = clickedId => {\n    this.props.acRemoveDashboardItem(clickedId);\n  };\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.edit) {\n      this.setState({\n        expandedItems: {}\n      });\n    }\n  }\n\n  onLayoutChange = newLayout => {\n    if (this.props.edit) {\n      this.props.acUpdateDashboardLayout(newLayout);\n    }\n  };\n  onResizeStop = (layout, oldItem, newItem) => {\n    onItemResize(newItem.i);\n    const dashboardItem = this.props.dashboardItems.find(item => item.id === newItem.i); // call resize on the item component if it's a plugin type\n\n    if (dashboardItem && isVisualizationType(dashboardItem)) {\n      pluginResize(dashboardItem);\n    }\n  };\n  onRemoveItemWrapper = id => () => this.onRemoveItem(id);\n  adjustHeightForExpanded = dashboardItem => {\n    const expandedItem = this.state.expandedItems[dashboardItem.id];\n\n    if (expandedItem && expandedItem === true) {\n      return Object.assign({}, dashboardItem, {\n        h: dashboardItem.h + EXPANDED_HEIGHT\n      });\n    }\n\n    return dashboardItem;\n  };\n  getItemComponent = item => {\n    const itemClassNames = [item.type, this.props.edit ? 'edit' : 'view'].join(' ');\n    return <ProgressiveLoadingContainer key={item.i} className={itemClassNames}>\n                <Item item={item} editMode={this.props.edit} onToggleItemExpanded={this.onToggleItemExpanded} />\n            </ProgressiveLoadingContainer>;\n  };\n  getItemComponents = items => items.map(item => this.getItemComponent(item));\n\n  render() {\n    const {\n      edit,\n      isLoading,\n      dashboardItems\n    } = this.props;\n\n    if (!isLoading && !dashboardItems.length) {\n      return <NoContentMessage text={i18n.t('There are no items on this dashboard')} />;\n    }\n\n    const items = edit ? dashboardItems : dashboardItems.map(this.adjustHeightForExpanded);\n    return <div className=\"grid-wrapper\">\n                {isLoading ? <Layer translucent>\n                        <CenteredContent>\n                            <CircularLoader />\n                        </CenteredContent>\n                    </Layer> : null}\n                <ReactGridLayout onLayoutChange={this.onLayoutChange} onResizeStop={this.onResizeStop} className=\"layout\" layout={items} margin={MARGIN} cols={getGridColumns()} rowHeight={GRID_ROW_HEIGHT} width={window.innerWidth} compactType={GRID_COMPACT_TYPE} isDraggable={edit} isResizable={edit} draggableCancel=\"input,textarea\">\n                    {this.getItemComponents(items)}\n                </ReactGridLayout>\n            </div>;\n  }\n\n}\nItemGrid.propTypes = {\n  acRemoveDashboardItem: PropTypes.func,\n  acUpdateDashboardLayout: PropTypes.func,\n  dashboardItems: PropTypes.array,\n  edit: PropTypes.bool,\n  isLoading: PropTypes.bool\n};\nItemGrid.defaultProps = {\n  dashboardItems: []\n}; // Container\n\nconst mapStateToProps = (state, ownProps) => {\n  const selectedDashboard = ownProps.edit ? sGetEditDashboardRoot(state) : sGetDashboardById(state, sGetSelectedId(state));\n  const dashboardItems = ownProps.edit ? sGetEditDashboardItems(state) : sGetDashboardItems(state);\n  return {\n    isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n    dashboardItems\n  };\n};\n\nconst mapDispatchToProps = {\n  acUpdateDashboardLayout,\n  acRemoveDashboardItem\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n  const validItems = orArray(stateProps.dashboardItems).filter(hasShape);\n  return { ...dispatchProps,\n    edit: ownProps.edit,\n    isLoading: stateProps.isLoading,\n    dashboardItems: validItems,\n    onItemResize\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps, mergeProps)(ItemGrid);","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { colors } from '@dhis2/ui';\nconst styles = {\n  badgeContainer: {\n    margin: '2px',\n    padding: '0 16px',\n    borderRadius: '4px',\n    color: colors.white,\n    backgroundColor: '#212934',\n    height: 36,\n    display: 'flex',\n    alignItems: 'center'\n  },\n  badge: {\n    fontSize: '13px',\n    cursor: 'pointer',\n    whiteSpace: 'nowrap'\n  },\n  badgeRemove: {\n    fontSize: '12px',\n    textDecoration: 'underline',\n    marginLeft: '24px',\n    cursor: 'pointer'\n  }\n};\n\nclass FilterBadge extends Component {\n  onClick = id => () => this.props.onClick(id);\n  onRemove = id => () => this.props.onRemove(id);\n\n  render() {\n    const {\n      data\n    } = this.props;\n    return <div style={styles.badgeContainer}>\n                <span style={styles.badge} onClick={this.onClick(data.id)}>\n                    {`${data.name}: ${data.values.length > 1 ? i18n.t('{{count}} selected', {\n          count: data.values.length\n        }) : data.values[0].name}`}\n                </span>\n                <span style={styles.badgeRemove} onClick={this.onRemove(data.id)}>\n                    {i18n.t('Remove')}\n                </span>\n            </div>;\n  }\n\n}\n\nFilterBadge.propTypes = {\n  data: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired,\n  onRemove: PropTypes.func.isRequired\n};\nFilterBadge.defaultProps = {\n  onClick: Function.prototype,\n  onRemove: Function.prototype\n};\nexport default FilterBadge;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { createSelector } from 'reselect';\nimport { sGetDimensions } from '../../reducers/dimensions';\nimport { sGetItemFiltersRoot } from '../../reducers/itemFilters';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { getControlBarHeight } from '../ControlBar/controlBarDimensions';\nimport { acRemoveItemFilter } from '../../actions/itemFilters';\nimport { acRemoveEditItemFilter } from '../../actions/editItemFilters';\nimport { acSetActiveModalDimension } from '../../actions/activeModalDimension';\nimport FilterBadge from './FilterBadge';\nimport classes from './styles/FilterBar.module.css';\nexport class FilterBar extends Component {\n  onBadgeRemove = id => {\n    this.props.removeItemFilter(id);\n    this.props.removeEditItemFilter(id);\n  };\n  onBadgeClick = id => {\n    this.props.setActiveModalDimension({\n      id,\n      name: this.props.filters.find(item => item.id === id).name\n    });\n  };\n\n  render() {\n    const {\n      filters,\n      userRows\n    } = this.props;\n    const top = getControlBarHeight(userRows) + 10;\n    return filters.length ? <div className={classes.bar} style={{\n      top\n    }}>\n                {filters.map(filter => <FilterBadge key={filter.id} data={filter} onClick={this.onBadgeClick} onRemove={this.onBadgeRemove} />)}\n            </div> : null;\n  }\n\n}\nFilterBar.propTypes = {\n  filters: PropTypes.array.isRequired,\n  removeEditItemFilter: PropTypes.func.isRequired,\n  removeItemFilter: PropTypes.func.isRequired,\n  setActiveModalDimension: PropTypes.func,\n  userRows: PropTypes.number\n};\nFilterBar.defaultProps = {\n  filters: [],\n  removeItemFIlter: Function.prototype,\n  removeEditItemFilter: Function.prototype\n}; // simplify the filters structure to:\n// [{ id: 'pe', name: 'Period', values: [{ id: 2019: name: '2019' }, {id: 'LAST_MONTH', name: 'Last month' }]}, ...]\n\nconst filtersSelector = createSelector([sGetItemFiltersRoot, sGetDimensions], (filters, dimensions) => Object.keys(filters).reduce((arr, id) => {\n  arr.push({\n    id: id,\n    name: dimensions.find(dimension => dimension.id === id).name,\n    values: filters[id].map(value => ({\n      id: value.id,\n      name: value.displayName || value.name\n    }))\n  });\n  return arr;\n}, []));\n\nconst mapStateToProps = state => ({\n  filters: filtersSelector(state),\n  userRows: sGetControlBarUserRows(state)\n});\n\nexport default connect(mapStateToProps, {\n  setActiveModalDimension: acSetActiveModalDimension,\n  removeItemFilter: acRemoveItemFilter,\n  removeEditItemFilter: acRemoveEditItemFilter\n})(FilterBar);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TitleBar from '../TitleBar/TitleBar';\nimport ItemGrid from '../ItemGrid/ItemGrid';\nimport FilterBar from '../FilterBar/FilterBar';\nexport const DashboardContent = props => <>\n        <TitleBar edit={props.editMode} />\n        <FilterBar />\n        <ItemGrid edit={props.editMode} />\n    </>;\nDashboardContent.propTypes = {\n  editMode: PropTypes.bool\n};\nexport default DashboardContent;","import React from 'react';\nimport { connect } from 'react-redux';\nimport isEmpty from 'lodash/isEmpty';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport { sGetAllDashboards, sDashboardsIsFetching } from '../../reducers/dashboards';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport DashboardsBar from '../ControlBar/DashboardsBar';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport DashboardContent from './DashboardContent';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nexport const Content = ({\n  hasDashboardContent,\n  dashboardsIsEmpty\n}) => {\n  const msg = dashboardsIsEmpty ? i18n.t('No dashboards found. Use the + button to create a new dashboard.') : i18n.t('Requested dashboard not found');\n  return hasDashboardContent ? <DashboardContent editMode={false} /> : <NoContentMessage text={msg} />;\n};\nContent.propTypes = {\n  dashboardsIsEmpty: PropTypes.bool,\n  hasDashboardContent: PropTypes.bool\n};\nexport const ViewDashboard = ({\n  id,\n  dashboardsIsEmpty,\n  dashboardsLoaded\n}) => {\n  const hasDashboardContent = id && !dashboardsIsEmpty;\n  const contentNotReady = !dashboardsLoaded || id === null;\n  return <>\n            <DashboardsBar />\n            <DashboardVerticalOffset />\n            <div className=\"dashboard-wrapper\">\n                {contentNotReady ? null : <Content hasDashboardContent={hasDashboardContent} dashboardsIsEmpty={dashboardsIsEmpty} />}\n            </div>\n        </>;\n};\nViewDashboard.propTypes = {\n  dashboardsIsEmpty: PropTypes.bool,\n  dashboardsLoaded: PropTypes.bool,\n  id: PropTypes.string\n};\n\nconst mapStateToProps = state => {\n  const dashboards = sGetAllDashboards(state);\n  return {\n    id: sGetSelectedId(state),\n    dashboardsIsEmpty: isEmpty(dashboards),\n    dashboardsLoaded: !sDashboardsIsFetching(state)\n  };\n};\n\nexport default connect(mapStateToProps)(ViewDashboard);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Button, Modal, ModalContent, ModalActions, ButtonStrip, ModalTitle } from '@dhis2/ui';\nimport classes from './styles/ConfirmDeleteDialog.module.css';\nexport const ConfirmDeleteDialog = ({\n  dashboardName,\n  onDeleteConfirmed,\n  onContinueEditing,\n  open\n}) => {\n  const actions = [<Button key=\"cancel\" secondary onClick={onContinueEditing}>\n            {i18n.t('Cancel')}\n        </Button>, <Button key=\"delete\" destructive onClick={onDeleteConfirmed}>\n            {i18n.t('Delete')}\n        </Button>];\n  return open && <Modal onClose={onContinueEditing} small position=\"middle\">\n                <ModalTitle>{i18n.t('Delete dashboard')}</ModalTitle>\n                <ModalContent>\n                    <span className={classes.content}>\n                        {i18n.t('Deleting dashboard \"{{ dashboardName }}\" will remove it for all users. This action cannot be undone. Are you sure you want to permanently delete this dashboard?', {\n          dashboardName\n        })}\n                    </span>\n                </ModalContent>\n                <ModalActions>\n                    <ButtonStrip>{actions}</ButtonStrip>\n                </ModalActions>\n            </Modal>;\n};\nConfirmDeleteDialog.propTypes = {\n  dashboardName: PropTypes.string,\n  open: PropTypes.bool,\n  onContinueEditing: PropTypes.func,\n  onDeleteConfirmed: PropTypes.func\n};\nexport default ConfirmDeleteDialog;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport ControlBar from './ControlBar';\nimport TranslationDialog from '@dhis2/d2-ui-translation-dialog';\nimport { Button } from '@dhis2/ui';\nimport ConfirmDeleteDialog from './ConfirmDeleteDialog';\nimport { tSaveDashboard, acClearEditDashboard } from '../../actions/editDashboard';\nimport { tDeleteDashboard, acSetDashboardDisplayName } from '../../actions/dashboards';\nimport { sGetEditDashboardRoot, sGetIsNewDashboard } from '../../reducers/editDashboard';\nimport { CONTROL_BAR_ROW_HEIGHT, MIN_ROW_COUNT, getControlBarHeight } from './controlBarDimensions';\nimport { apiFetchDashboard } from '../../api/dashboards';\nimport classes from './styles/DashboardsBar.module.css';\nconst buttonBarStyle = {\n  height: CONTROL_BAR_ROW_HEIGHT,\n  paddingTop: '15px',\n  marginLeft: '15px',\n  marginRight: '15px'\n};\nexport class EditBar extends Component {\n  state = {\n    translationDialogIsOpen: false,\n    dashboardModel: undefined,\n    confirmDeleteDialogOpen: false,\n    redirectUrl: undefined\n  };\n  onConfirmDelete = () => {\n    this.setState({\n      confirmDeleteDialogOpen: true\n    });\n  };\n  onSave = () => {\n    this.props.onSave().then(newId => {\n      this.setState({\n        redirectUrl: `/${newId}`\n      });\n    });\n  };\n  onDiscard = () => {\n    this.props.onDiscardChanges();\n    const redirectUrl = this.props.dashboardId ? `/${this.props.dashboardId}` : '/';\n    this.setState({\n      redirectUrl\n    });\n  };\n  onContinueEditing = () => {\n    this.setState({\n      confirmDeleteDialogOpen: false\n    });\n  };\n  onDeleteConfirmed = () => {\n    this.setState({\n      confirmDeleteDialogOpen: false\n    });\n    this.props.onDelete(this.props.dashboardId).then(() => {\n      this.setState({\n        redirectUrl: '/'\n      });\n    });\n  };\n  onTranslationsSaved = async translations => {\n    if (translations && translations.length) {\n      const dbLocale = await this.context.d2.currentUser.userSettings.get('keyDbLocale');\n      const translation = translations.find(t => t.locale === dbLocale && t.property === 'NAME');\n\n      if (translation && translation.value) {\n        this.props.onTranslate(this.props.dashboardId, translation.value);\n      }\n    }\n  };\n  fetchDashboardModel = () => {\n    if (this.props.dashboardId && !this.state.dashboardModel) {\n      apiFetchDashboard(this.props.dashboardId).then(dashboardModel => this.setState({\n        dashboardModel\n      }));\n    }\n  };\n\n  componentDidMount() {\n    this.fetchDashboardModel();\n  }\n\n  componentDidUpdate() {\n    this.fetchDashboardModel();\n  }\n\n  toggleTranslationDialog = () => {\n    this.setState({\n      translationDialogIsOpen: !this.state.translationDialogIsOpen\n    });\n  };\n  confirmDeleteDialog = () => this.props.deleteAccess && this.props.dashboardId ? <ConfirmDeleteDialog dashboardName={this.props.dashboardName} onDeleteConfirmed={this.onDeleteConfirmed} onContinueEditing={this.onContinueEditing} open={this.state.confirmDeleteDialogOpen} /> : null;\n  translationDialog = () => this.state.dashboardModel && this.state.dashboardModel.id ? <TranslationDialog className=\"translation-dialog\" d2={this.context.d2} open={this.state.translationDialogIsOpen} onRequestClose={this.toggleTranslationDialog} objectToTranslate={this.state.dashboardModel} fieldsToTranslate={['name', 'description']} // TODO handle messages in snackbar\n  onTranslationSaved={this.onTranslationsSaved} onTranslationError={err => console.log('translation update error', err)} /> : null;\n\n  render() {\n    if (this.state.redirectUrl) {\n      return <Redirect to={this.state.redirectUrl} />;\n    }\n\n    const {\n      dashboardId,\n      deleteAccess,\n      updateAccess\n    } = this.props;\n    const controlBarHeight = getControlBarHeight(MIN_ROW_COUNT);\n    const discardBtnText = updateAccess ? i18n.t('Exit without saving') : i18n.t('Go to dashboards');\n    return <>\n                <ControlBar height={controlBarHeight} editMode={true}>\n                    <div style={buttonBarStyle}>\n                        {updateAccess ? <div className={classes.leftControls}>\n                                <span style={{\n              marginRight: '15px'\n            }}>\n                                    <Button primary onClick={this.onSave}>\n                                        {i18n.t('Save changes')}\n                                    </Button>\n                                </span>\n\n                                {dashboardId ? <span style={{\n              marginRight: '15px'\n            }}>\n                                        <Button onClick={this.toggleTranslationDialog}>\n                                            {i18n.t('Translate')}\n                                        </Button>\n                                    </span> : null}\n                                {dashboardId && deleteAccess ? <Button onClick={this.onConfirmDelete}>\n                                        {i18n.t('Delete')}\n                                    </Button> : null}\n                            </div> : null}\n\n                        <div className={classes.rightControls}>\n                            <Button secondary onClick={this.onDiscard}>\n                                {discardBtnText}\n                            </Button>\n                        </div>\n                    </div>\n                </ControlBar>\n                {this.translationDialog()}\n                {this.confirmDeleteDialog()}\n            </>;\n  }\n\n}\nEditBar.propTypes = {\n  dashboardId: PropTypes.string,\n  dashboardName: PropTypes.string,\n  deleteAccess: PropTypes.bool,\n  updateAccess: PropTypes.bool,\n  onDelete: PropTypes.func,\n  onDiscardChanges: PropTypes.func,\n  onSave: PropTypes.func,\n  onTranslate: PropTypes.func\n};\nEditBar.contextTypes = {\n  d2: PropTypes.object\n};\n\nconst mapStateToProps = state => {\n  const dashboard = sGetEditDashboardRoot(state);\n  let deleteAccess;\n  let updateAccess;\n\n  if (sGetIsNewDashboard(state)) {\n    deleteAccess = true;\n    updateAccess = true;\n  } else {\n    updateAccess = dashboard.access ? dashboard.access.update : false;\n    deleteAccess = dashboard.access ? dashboard.access.delete : false;\n  }\n\n  return {\n    dashboardId: dashboard.id,\n    dashboardName: dashboard.name,\n    deleteAccess,\n    updateAccess\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  onSave: () => dispatch(tSaveDashboard()).then(id => id),\n  onDelete: id => dispatch(tDeleteDashboard(id)),\n  onDiscardChanges: () => dispatch(acClearEditDashboard()),\n  onTranslate: (id, value) => dispatch(acSetDashboardDisplayName(id, value))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditBar);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport { acSetEditDashboard } from '../../actions/editDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { sGetDashboardById, sGetDashboardItems, sDashboardsIsFetching } from '../../reducers/dashboards';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport DashboardContent from './DashboardContent';\nimport EditBar from '../ControlBar/EditBar';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nexport const Content = ({\n  updateAccess\n}) => {\n  return updateAccess ? <DashboardContent editMode={true} /> : <NoContentMessage text={i18n.t('No access')} />;\n};\nContent.propTypes = {\n  updateAccess: PropTypes.bool\n};\nexport class EditDashboard extends Component {\n  state = {\n    initialized: false\n  };\n  initEditDashboard = () => {\n    if (this.props.dashboard) {\n      this.setState({\n        initialized: true\n      });\n      this.props.setEditDashboard(this.props.dashboard, this.props.items);\n    }\n  };\n\n  componentDidMount() {\n    this.initEditDashboard();\n  }\n\n  componentDidUpdate() {\n    if (!this.state.initialized) {\n      this.initEditDashboard();\n    }\n  }\n\n  getDashboardContent = () => {\n    const contentNotReady = !this.props.dashboardsLoaded || this.props.id === null;\n    return <div className=\"dashboard-wrapper\">\n                {contentNotReady ? null : <Content updateAccess={this.props.updateAccess} />}\n            </div>;\n  };\n\n  render() {\n    return <>\n                <EditBar />\n                <DashboardVerticalOffset editMode={true} />\n                {this.getDashboardContent()}\n            </>;\n  }\n\n}\nEditDashboard.propTypes = {\n  dashboard: PropTypes.object,\n  dashboardsLoaded: PropTypes.bool,\n  id: PropTypes.string,\n  items: PropTypes.array,\n  setEditDashboard: PropTypes.func,\n  updateAccess: PropTypes.bool\n};\n\nconst mapStateToProps = state => {\n  const id = sGetSelectedId(state);\n  const dashboard = id ? sGetDashboardById(state, id) : null;\n  const updateAccess = dashboard && dashboard.access ? dashboard.access.update : false;\n  return {\n    dashboard,\n    id,\n    updateAccess,\n    items: sGetDashboardItems(state),\n    dashboardsLoaded: !sDashboardsIsFetching(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setEditDashboard: acSetEditDashboard\n})(EditDashboard);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { acSetEditNewDashboard } from '../../actions/editDashboard';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport EditBar from '../ControlBar/EditBar';\nimport DashboardContent from './DashboardContent';\n\nclass NewDashboard extends Component {\n  componentDidMount() {\n    this.props.setNewDashboard();\n  }\n\n  render() {\n    return <>\n                <EditBar />\n                <DashboardVerticalOffset editMode={true} />\n                <div className=\"dashboard-wrapper\">\n                    <DashboardContent editMode={true} />\n                </div>\n            </>;\n  }\n\n}\n\nNewDashboard.propTypes = {\n  setNewDashboard: PropTypes.func\n};\nexport default connect(null, {\n  setNewDashboard: acSetEditNewDashboard\n})(NewDashboard);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { tSelectDashboard } from '../../actions/dashboards';\nimport { sDashboardsIsFetching } from '../../reducers/dashboards';\nimport { EDIT, NEW } from './dashboardModes';\nimport ViewDashboard from './ViewDashboard';\nimport EditDashboard from './EditDashboard';\nimport NewDashboard from './NewDashboard';\n\nclass Dashboard extends Component {\n  setDashboard = () => {\n    if (this.props.dashboardsLoaded) {\n      const id = this.props.match.params.dashboardId || null;\n      this.props.selectDashboard(id);\n      this.scrollToTop();\n    }\n  };\n  scrollToTop = () => {\n    window.scrollTo(0, 0);\n  };\n\n  componentDidMount() {\n    this.setDashboard();\n  }\n\n  componentDidUpdate() {\n    this.setDashboard();\n  }\n\n  render() {\n    switch (this.props.mode) {\n      case EDIT:\n        return <EditDashboard />;\n\n      case NEW:\n        return <NewDashboard />;\n\n      default:\n        return <ViewDashboard />;\n    }\n  }\n\n}\n\nDashboard.propTypes = {\n  dashboardsLoaded: PropTypes.bool,\n  match: PropTypes.object,\n  mode: PropTypes.string,\n  selectDashboard: PropTypes.func\n};\n\nconst mapStateToProps = state => {\n  return {\n    dashboardsLoaded: !sDashboardsIsFetching(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  selectDashboard: tSelectDashboard\n})(Dashboard);","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { CssVariables } from '@dhis2/ui';\nimport { EDIT, VIEW, NEW } from './Dashboard/dashboardModes';\nimport { acReceivedUser } from '../actions/user';\nimport { tFetchDashboards } from '../actions/dashboards';\nimport { tSetControlBarRows } from '../actions/controlBar';\nimport { tSetDimensions } from '../actions/dimensions';\nimport Dashboard from './Dashboard/Dashboard';\nimport SnackbarMessage from './SnackbarMessage/SnackbarMessage';\nimport './App.css';\nexport class App extends Component {\n  componentDidMount() {\n    this.props.setCurrentUser(this.props.d2.currentUser);\n    this.props.fetchDashboards();\n    this.props.setControlBarRows();\n    this.props.setDimensions(this.props.d2);\n  }\n\n  getChildContext() {\n    return {\n      baseUrl: this.props.baseUrl,\n      i18n,\n      d2: this.props.d2\n    };\n  }\n\n  render() {\n    return <>\n                <CssVariables colors spacers />\n                <Router>\n                    <Switch>\n                        <Route exact path=\"/\" render={props => <Dashboard {...props} mode={VIEW} />} />\n                        <Route exact path=\"/new\" render={props => <Dashboard {...props} mode={NEW} />} />\n                        <Route exact path=\"/:dashboardId\" render={props => <Dashboard {...props} mode={VIEW} />} />\n                        <Route exact path=\"/:dashboardId/edit\" render={props => <Dashboard {...props} mode={EDIT} />} />\n                    </Switch>\n                </Router>\n                <SnackbarMessage />\n            </>;\n  }\n\n}\nApp.propTypes = {\n  fetchDashboards: PropTypes.func.isRequired,\n  setControlBarRows: PropTypes.func.isRequired,\n  setCurrentUser: PropTypes.func.isRequired,\n  setDimensions: PropTypes.func.isRequired,\n  baseUrl: PropTypes.string,\n  d2: PropTypes.object\n};\nApp.childContextTypes = {\n  baseUrl: PropTypes.string,\n  i18n: PropTypes.object,\n  d2: PropTypes.object\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setCurrentUser: currentUser => dispatch(acReceivedUser(currentUser)),\n    fetchDashboards: () => dispatch(tFetchDashboards()),\n    setControlBarRows: () => dispatch(tSetControlBarRows()),\n    setDimensions: d2 => dispatch(tSetDimensions(d2))\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(App);","import { RECEIVED_USER } from '../reducers/user';\nexport const acReceivedUser = value => ({\n  type: RECEIVED_USER,\n  value\n});","/** @module reducers/selected */\nimport { validateReducer } from '../modules/util';\nexport const SET_STYLE = 'SET_STYLE';\nexport const DEFAULT_STATE_STYLE = 'LIST';\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\n\nconst style = (state = DEFAULT_STATE_STYLE, action) => {\n  switch (action.type) {\n    case SET_STYLE:\n      return validateReducer(action.value, DEFAULT_STATE_STYLE);\n\n    default:\n      return state;\n  }\n};\n\nexport default style;\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\n\nexport const sGetStyleRoot = state => state.style;","import { combineReducers } from 'redux';\nimport arraySort from 'd2-utilizr/lib/arraySort';\nimport dashboards, { sGetDashboardsRoot } from './dashboards';\nimport selected from './selected';\nimport dashboardsFilter, { ownerData, sGetFilterName, sGetFilterOrder, sGetFilterOwner } from './dashboardsFilter';\nimport controlBar from './controlBar';\nimport visualizations from './visualizations';\nimport editDashboard from './editDashboard';\nimport messages from './messages';\nimport user from './user';\nimport snackbar from './snackbar';\nimport itemFilters from './itemFilters';\nimport editItemFilters from './editItemFilters';\nimport style from './style';\nimport dimensions from './dimensions';\nimport settings from './settings';\nimport activeModalDimension from './activeModalDimension';\nconst USER = 'system'; // Reducers\n\nexport default combineReducers({\n  dashboards,\n  selected,\n  dashboardsFilter,\n  controlBar,\n  visualizations,\n  messages,\n  user,\n  editDashboard,\n  itemFilters,\n  editItemFilters,\n  style,\n  snackbar,\n  dimensions,\n  settings,\n  activeModalDimension\n}); // Map constants to data\n\nconst mapConstToData = {\n  NAME: 'name',\n  ITEMS: 'numberOfItems',\n  CREATED: 'created',\n  OWNER: 'owner'\n}; // Selectors\n// Filter dashboards by name\n\nexport const sFilterDashboardsByName = (dashboards, filter) => dashboards.filter(d => d.displayName.toLowerCase().includes(filter.toLowerCase())); // Filter dashboards by owner, TODO FIXME\n\nexport const sFilterDashboardsByOwner = (dashboards, filter) => {\n  const ME = ownerData[1]; // TODO\n\n  const OTHERS = ownerData[2]; // TODO\n\n  switch (filter) {\n    case ME:\n      return dashboards.filter(d => d.owner === USER);\n\n    case OTHERS:\n      return dashboards.filter(d => d.owner !== USER);\n\n    default:\n      return dashboards;\n  }\n}; // Filter dashboards by order\n\nexport const sFilterDashboardsByOrder = (dashboards, filter) => {\n  const filterValues = filter.split(':');\n  const key = filterValues[0];\n  const direction = filterValues[1];\n  return arraySort(dashboards, direction, mapConstToData[key]);\n}; // Selectors dependency level 2\n// Get filtered dashboards\n\nexport const sGetFilteredDashboards = state => {\n  const dashboards = sGetDashboardsRoot(state);\n  const nameFilter = sGetFilterName(state);\n  const ownerFilter = sGetFilterOwner(state);\n  const orderFilter = sGetFilterOrder(state);\n  return sFilterDashboardsByOrder(sFilterDashboardsByName(sFilterDashboardsByOwner(dashboards, ownerFilter), nameFilter), orderFilter);\n};","import { createStore, applyMiddleware, compose } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport reducer from './reducers';\n\nconst configureStore = () => {\n  const middleware = [thunk]; // Enable Redux devtools if extension is installed instead of redux-logger\n\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n  if (!window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ && process.env.NODE_ENV !== 'production') {\n    middleware.push(createLogger());\n  }\n\n  return createStore(reducer, composeEnhancers(applyMiddleware(...middleware)));\n};\n\nexport default configureStore;","//------------------------------------------------------------------------------\n// <auto-generated>\n// This code was generated by d2-i18n-generate.\n//\n// Changes to this file may cause incorrect behavior and will be lost if\n// the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\nimport i18n from '@dhis2/d2-i18n';\nimport arTranslations from './ar/translations.json';\nimport ar_IQTranslations from './ar_IQ/translations.json';\nimport daTranslations from './da/translations.json';\nimport enTranslations from './en/translations.json';\nimport esTranslations from './es/translations.json';\nimport frTranslations from './fr/translations.json';\nimport idTranslations from './id/translations.json';\nimport kmTranslations from './km/translations.json';\nimport loTranslations from './lo/translations.json';\nimport myTranslations from './my/translations.json';\nimport nbTranslations from './nb/translations.json';\nimport prsTranslations from './prs/translations.json';\nimport psTranslations from './ps/translations.json';\nimport ptTranslations from './pt/translations.json';\nimport pt_BRTranslations from './pt_BR/translations.json';\nimport ruTranslations from './ru/translations.json';\nimport svTranslations from './sv/translations.json';\nimport tetTranslations from './tet/translations.json';\nimport tgTranslations from './tg/translations.json';\nimport ukTranslations from './uk/translations.json';\nimport urTranslations from './ur/translations.json';\nimport viTranslations from './vi/translations.json';\nimport zhTranslations from './zh/translations.json';\nimport zh_CNTranslations from './zh_CN/translations.json';\nconst namespace = 'default';\ni18n.addResources('ar', namespace, arTranslations);\ni18n.addResources('ar_IQ', namespace, ar_IQTranslations);\ni18n.addResources('da', namespace, daTranslations);\ni18n.addResources('en', namespace, enTranslations);\ni18n.addResources('es', namespace, esTranslations);\ni18n.addResources('fr', namespace, frTranslations);\ni18n.addResources('id', namespace, idTranslations);\ni18n.addResources('km', namespace, kmTranslations);\ni18n.addResources('lo', namespace, loTranslations);\ni18n.addResources('my', namespace, myTranslations);\ni18n.addResources('nb', namespace, nbTranslations);\ni18n.addResources('prs', namespace, prsTranslations);\ni18n.addResources('ps', namespace, psTranslations);\ni18n.addResources('pt', namespace, ptTranslations);\ni18n.addResources('pt_BR', namespace, pt_BRTranslations);\ni18n.addResources('ru', namespace, ruTranslations);\ni18n.addResources('sv', namespace, svTranslations);\ni18n.addResources('tet', namespace, tetTranslations);\ni18n.addResources('tg', namespace, tgTranslations);\ni18n.addResources('uk', namespace, ukTranslations);\ni18n.addResources('ur', namespace, urTranslations);\ni18n.addResources('vi', namespace, viTranslations);\ni18n.addResources('zh', namespace, zhTranslations);\ni18n.addResources('zh_CN', namespace, zh_CNTranslations);\nexport default i18n;","import React from 'react';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport dhis2theme from '@dhis2/d2-ui-core/theme/mui3.theme';\nimport { Provider as ReduxProvider } from 'react-redux';\nimport { D2Shim } from '@dhis2/app-runtime-adapter-d2';\nimport App from './components/App';\nimport configureStore from './configureStore';\nimport './index.css';\nimport './locales';\n\nconst muiTheme = () => createMuiTheme(dhis2theme);\n\nconst schemas = ['chart', 'map', 'report', 'reportTable', 'eventChart', 'eventReport', 'dashboard', 'organisationUnit', 'userGroup'];\nconst appConfig = {\n  schemas\n};\nconst authorization = process.env.REACT_APP_DHIS2_AUTHORIZATION || null; // TODO: ER and EV plugins require the auth header in development mode.\n// Remove this when these plugins are rewritten\n\nif (authorization) {\n  appConfig.headers = {\n    Authorization: authorization\n  };\n}\n\nconst AppWrapper = () => {\n  return <ReduxProvider store={configureStore()}>\n            <MuiThemeProvider theme={muiTheme()}>\n                <D2Shim appConfig={appConfig} i18nRoot=\"./i18n\">\n                    {({\n          d2\n        }) => {\n          if (!d2) {\n            // TODO: Handle errors in d2 initialization\n            return null;\n          }\n\n          return <App d2={d2} />;\n        }}\n                </D2Shim>\n            </MuiThemeProvider>\n        </ReduxProvider>;\n};\n\nexport default AppWrapper;","import isObject from 'lodash/isObject';\nimport { VIS_TYPE_COLUMN, VIS_TYPE_PIVOT_TABLE } from '@dhis2/analytics';\nimport { apiFetchFavorite, getMapFields } from '../../../api/metadata';\nimport { REPORT_TABLE, CHART, MAP, EVENT_REPORT, EVENT_CHART, itemTypeMap } from '../../../modules/itemTypes';\nimport { getBaseUrl, getWithoutId } from '../../../modules/util';\nimport { getGridItemDomId } from '../../ItemGrid/gridUtil'; //external plugins\n\nconst itemTypeToExternalPlugin = {\n  [MAP]: 'mapPlugin',\n  [EVENT_REPORT]: 'eventReportPlugin',\n  [EVENT_CHART]: 'eventChartPlugin'\n};\n\nconst hasIntegratedPlugin = type => [CHART, REPORT_TABLE].includes(type);\n\nconst getPlugin = type => {\n  if (hasIntegratedPlugin(type)) {\n    return true;\n  }\n\n  const pluginName = itemTypeToExternalPlugin[type];\n  return global[pluginName];\n};\n\nexport const THEMATIC_LAYER = 'thematic';\nexport const pluginIsAvailable = (item = {}, visualization = {}) => {\n  const type = visualization.activeType || item.type;\n  return !!getPlugin(type);\n};\nexport const extractFavorite = item => {\n  if (!isObject(item)) {\n    return null;\n  }\n\n  const propName = itemTypeMap[item.type].propName;\n  return item[propName] || item.reportTable || item.chart || item.map || item.eventReport || item.eventChart || {};\n};\nexport const extractMapView = map => map.mapViews && map.mapViews.find(mv => mv.layer.includes(THEMATIC_LAYER));\nexport const loadPlugin = (plugin, config, credentials) => {\n  if (!(plugin && plugin.load)) {\n    return;\n  }\n\n  plugin.url = credentials.baseUrl;\n  plugin.loadingIndicator = true;\n  plugin.dashboard = true;\n\n  if (credentials.auth) {\n    plugin.auth = credentials.auth;\n  }\n\n  plugin.load(config);\n};\nexport const getId = item => extractFavorite(item).id;\nexport const getName = item => extractFavorite(item).name;\nexport const getDescription = item => extractFavorite(item).description;\nexport const getLink = (item, d2) => {\n  const baseUrl = getBaseUrl(d2);\n  const appUrl = itemTypeMap[item.type].appUrl(getId(item));\n  return `${baseUrl}/${appUrl}`;\n};\nexport const load = async (item, visualization, {\n  credentials,\n  activeType,\n  options = {}\n}) => {\n  const config = { ...visualization,\n    ...options,\n    el: getGridItemDomId(item.id)\n  };\n  const type = activeType || item.type;\n  const plugin = getPlugin(type);\n  loadPlugin(plugin, config, credentials);\n};\nexport const fetch = async item => {\n  const fetchedFavorite = await apiFetchFavorite(getId(item), item.type, {\n    fields: item.type === MAP ? getMapFields() : null\n  });\n  return fetchedFavorite;\n};\nexport const resize = item => {\n  const plugin = getPlugin(item.type);\n\n  if (plugin && plugin.resize) {\n    plugin.resize(getGridItemDomId(item.id));\n  }\n};\nexport const unmount = (item, activeType) => {\n  const plugin = getPlugin(activeType);\n\n  if (plugin && plugin.unmount) {\n    plugin.unmount(getGridItemDomId(item.id));\n  }\n};\nexport const getVisualizationConfig = (visualization, originalType, activeType) => {\n  if (originalType === MAP && originalType !== activeType) {\n    const extractedMapView = extractMapView(visualization);\n\n    if (extractedMapView === undefined) {\n      return null;\n    }\n\n    return getWithoutId({ ...visualization,\n      ...extractedMapView,\n      mapViews: undefined,\n      type: activeType === CHART ? VIS_TYPE_COLUMN : VIS_TYPE_PIVOT_TABLE\n    });\n  } else if (originalType === REPORT_TABLE && activeType === CHART) {\n    return getWithoutId({ ...visualization,\n      type: VIS_TYPE_COLUMN\n    });\n  } else if (originalType === CHART && activeType === REPORT_TABLE) {\n    return getWithoutId({ ...visualization,\n      type: VIS_TYPE_PIVOT_TABLE\n    });\n  }\n\n  return getWithoutId(visualization);\n};","import isFunction from 'd2-utilizr/lib/isFunction';\nimport { orObject } from '../../modules/util'; // Dimensions for the react-grid-layout\n\nexport const GRID_COMPACT_TYPE = 'vertical'; // vertical | horizonal | null\n\nexport const GRID_ROW_HEIGHT = 10;\nconst GRID_COLUMN_WIDTH_PX = 20;\nconst GRID_LAYOUT = 'FLEXIBLE'; // FIXED | FLEXIBLE\n\nexport const MARGIN = [10, 10];\nexport const NEW_ITEM_SHAPE = {\n  x: 0,\n  y: 0,\n  w: 20,\n  h: 29\n}; // Dimensions for getShape\n\nconst NUMBER_OF_ITEM_COLS = 2;\nconst GRID_COLUMNS = 60;\nexport const getGridColumns = () => {\n  switch (GRID_LAYOUT) {\n    case 'FLEXIBLE':\n      return GRID_COLUMNS;\n\n    case 'FIXED':\n      return Math.floor((window.innerWidth - 20) / GRID_COLUMN_WIDTH_PX);\n\n    default:\n      return GRID_COLUMNS;\n  }\n}; // isNonNegativeInteger\n\nconst isNonNegativeInteger = x => Number.isInteger(x) && x >= 0; // Does the item have all the shape properties?\n\n\nexport const hasShape = item => isNonNegativeInteger(item.x) && isNonNegativeInteger(item.y) && isNonNegativeInteger(item.w) && isNonNegativeInteger(item.h); // returns a rectangular grid block dimensioned with x, y, w, h in grid units.\n// based on a grid with 3 items across\n\nexport const getShape = i => {\n  if (!isNonNegativeInteger(i)) {\n    throw new Error('Invalid grid block number');\n  }\n\n  const col = i % NUMBER_OF_ITEM_COLS;\n  const row = Math.floor(i / NUMBER_OF_ITEM_COLS);\n  const itemWidth = Math.floor((GRID_COLUMNS - 1) / NUMBER_OF_ITEM_COLS);\n  const itemHeight = GRID_ROW_HEIGHT * 2;\n  return {\n    x: col * itemWidth,\n    y: row * itemHeight,\n    w: itemWidth,\n    h: itemHeight\n  };\n};\nexport const getGridItemProperties = itemId => {\n  return {\n    i: itemId,\n    minH: 4 // minimum height for item\n\n  };\n};\n/**\n * Calculates the grid item's original height in pixels based\n * on the height in grid units. This calculation\n * is copied directly from react-grid-layout GridItem.js (calcPosition)\n *\n * @param {Object} item item containing shape (x, y, w, h)\n */\n\nconst getOriginalHeight = item => {\n  const originalHeight = Math.round(GRID_ROW_HEIGHT * item.h + Math.max(0, item.h - 1) * MARGIN[1]);\n  return {\n    originalHeight\n  };\n};\n/**\n * Returns an array of items containing the x, y, w, h dimensions\n * and the item's originalheight in pixels\n * @function\n * @param {Array} items\n * @returns {Array}\n */\n\n\nexport const withShape = items => items.map((item, index) => {\n  const itemWithShape = hasShape(item) ? item : Object.assign({}, item, getShape(index));\n  return Object.assign({}, itemWithShape, getOriginalHeight(itemWithShape));\n});\nexport const getGridItemDomId = id => `item-${id}`;\nexport function onItemResize(id) {\n  const el = orObject(document.querySelector(`#${getGridItemDomId(id)}`));\n  if (isFunction(el.setViewportSize)) setTimeout(() => el.setViewportSize(el.clientWidth - 5, el.clientHeight - 5), 10);\n}","import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { getEndPointName } from '../modules/itemTypes'; // Id, name\n\nexport const getIdNameFields = ({\n  rename\n} = {}) => ['id', `${rename ? 'displayName~rename(name)' : 'name,displayName'}`]; // Item\n\nexport const getItemFields = () => ['dimensionItem~rename(id)', 'displayName~rename(name)', 'dimensionItemType']; // Dimension\n\nexport const getDimensionFields = ({\n  withItems\n}) => arrayClean(['dimension', 'legendSet[id]', 'filter', 'programStage', withItems ? `items[${getItemFields().join(',')}]` : ``]); // Axis\n\nexport const getAxesFields = ({\n  withItems\n}) => [`columns[${getDimensionFields({\n  withItems\n}).join(',')}]`, `rows[${getDimensionFields({\n  withItems\n}).join(',')}]`, `filters[${getDimensionFields({\n  withItems\n}).join(',')}]`]; // Favorite\n\nexport const getFavoriteFields = ({\n  withDimensions,\n  withOptions\n}) => {\n  return arrayClean([`${getIdNameFields({\n    rename: true\n  }).join(',')}`, 'displayDescription~rename(description)', withDimensions ? `${getAxesFields({\n    withItems: true\n  }).join(',')}` : ``, withOptions ? ['*', '!attributeDimensions', '!attributeValues', '!category', '!categoryDimensions', '!categoryOptionGroupSetDimensions', '!columnDimensions', '!dataDimensionItems', '!dataElementDimensions', '!dataElementGroupSetDimensions', '!filterDimensions', '!itemOrganisationUnitGroups', '!lastUpdatedBy', '!organisationUnitGroupSetDimensions', '!organisationUnitLevels', '!organisationUnits', '!programIndicatorDimensions', '!relativePeriods', '!reportParams', '!rowDimensions', '!series', '!translations', '!userOrganisationUnit', '!userOrganisationUnitChildren', '!userOrganisationUnitGrandChildren'].join(',') : '']);\n};\nexport const getFavoritesFields = ({\n  withDimensions\n}) => [`reportTable[${getFavoriteFields({\n  withDimensions\n}).join(',')}]`, `chart[${['type', ...getFavoriteFields({\n  withDimensions\n})].join(',')}]`, `map[${getFavoriteFields({\n  withDimensions\n}).join(',')}]`, `eventReport[${getFavoriteFields({\n  withDimensions\n}).join(',')}]`, `eventChart[${getFavoriteFields({\n  withDimensions\n}).join(',')}]`]; // List item\n\nexport const getListItemFields = () => [`reports[${['type', ...getIdNameFields({\n  rename: true\n})].join(',')}]`, `resources[${getIdNameFields({\n  rename: true\n}).join(',')}]`, `users[${getIdNameFields({\n  rename: true\n}).join(',')}]`]; // Map\n\nexport const getMapFields = () => [`${getIdNameFields({\n  rename: true\n}).join(',')}`, 'user,longitude,latitude,zoom,basemap', `mapViews[${getFavoriteFields({\n  withDimensions: true,\n  withOptions: true\n})}]`]; // Api\n// Get more info about the favorite of a dashboard item\n\nexport const apiFetchFavorite = (id, type, {\n  fields\n}) => getInstance().then(d2 => d2.Api.getApi().get(`${getEndPointName(type)}/${id}`, {\n  fields: fields || getFavoriteFields({\n    withDimensions: true,\n    withOptions: true\n  })\n}));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"leftControls\":\"DashboardsBar_leftControls__k-Y57\",\"rightControls\":\"DashboardsBar_rightControls__1cyr1\"};"],"sourceRoot":""}
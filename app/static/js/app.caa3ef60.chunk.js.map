{"version":3,"sources":["D2App/components/ControlBar/styles/ControlBar.module.css","D2App/components/ControlBar/styles/DashboardItemChip.module.css","D2App/components/ControlBar/styles/ClearButton.module.css","D2App/components/ControlBar/styles/ShowMoreButton.module.css","D2App/components/ItemSelector/styles/ContentMenuItem.module.css","D2App/components/ItemSelector/styles/CategorizedMenuGroup.module.css","D2App/components/TitleBar/styles/EditTitleBar.module.css","D2App/components/TitleBar/styles/ViewTitleBar.module.css","D2App/components/Item/VisualizationItem/styles/FatalErrorBoundary.module.css","D2App/components/Item/styles/DeleteItemButton.module.css","D2App/components/Item/styles/ItemHeader.module.css","D2App/components/Item/VisualizationItem/styles/LoadingMask.module.css","D2App/components/Item/VisualizationItem/styles/Item.module.css","D2App/components/Item/ListItem/Item.module.css","D2App/components/FilterBar/styles/FilterBar.module.css","D2App/components/ControlBar/styles/ConfirmDeleteDialog.module.css","D2App/components/Dashboard/dashboardModes.js","D2App/reducers/user.js","D2App/modules/uiBackendItemConverter.js","D2App/reducers/dashboards.js","D2App/reducers/editDashboard.js","D2App/reducers/editItemFilters.js","D2App/reducers/selected.js","D2App/actions/editItemFilters.js","D2App/reducers/itemFilters.js","D2App/actions/itemFilters.js","D2App/reducers/messages.js","D2App/api/messages.js","D2App/components/Item/MessagesItem/actions.js","D2App/reducers/snackbar.js","D2App/actions/snackbar.js","D2App/reducers/visualizations.js","D2App/actions/visualizations.js","D2App/api/index.js","D2App/api/dashboards.js","D2App/components/SnackbarMessage/SnackbarMessage.js","D2App/actions/selected.js","D2App/api/localStorage.js","D2App/api/editDashboard.js","D2App/actions/editDashboard.js","D2App/actions/dashboards.js","D2App/reducers/controlBar.js","D2App/api/controlBar.js","D2App/actions/controlBar.js","D2App/reducers/dimensions.js","D2App/reducers/settings.js","D2App/actions/dimensions.js","D2App/components/ControlBar/ControlBar.js","D2App/icons/Star.js","D2App/components/ControlBar/DashboardItemChip.js","D2App/api/dataStatistics.js","D2App/icons/AddCircle.js","D2App/icons/Clear.js","D2App/components/ControlBar/ClearButton.js","D2App/reducers/dashboardsFilter.js","D2App/components/ControlBar/Filter.js","D2App/components/ControlBar/ShowMoreButton.js","D2App/components/ControlBar/controlBarDimensions.js","D2App/components/ControlBar/DashboardsBar.js","D2App/actions/dashboardsFilter.js","D2App/components/Dashboard/DashboardVerticalOffset.js","D2App/components/ItemSelector/HeaderMenuItem.js","D2App/icons/Launch.js","D2App/components/ItemSelector/ContentMenuItem.js","D2App/components/ItemSelector/actions.js","D2App/components/ItemSelector/selectableItems.js","D2App/components/ItemSelector/CategorizedMenuGroup.js","D2App/components/ItemSelector/SinglesMenuGroup.js","D2App/components/ItemSelector/ItemSelector.js","D2App/components/TitleBar/EditTitleBar.js","D2App/components/ItemFilter/FilterDialog.js","D2App/reducers/activeModalDimension.js","D2App/actions/activeModalDimension.js","D2App/components/ItemFilter/FilterSelector.js","D2App/components/TitleBar/Info.js","D2App/components/TitleBar/ViewTitleBar.js","D2App/components/TitleBar/TitleBar.js","D2App/components/Item/VisualizationItem/DefaultPlugin.js","D2App/components/Item/VisualizationItem/assets/icons.js","D2App/components/Item/VisualizationItem/FatalErrorBoundary.js","D2App/components/Item/DeleteItemButton.js","D2App/components/Item/ItemHeader.js","D2App/components/Item/VisualizationItem/ItemHeaderButtons.js","D2App/components/Item/VisualizationItem/ItemFooter.js","D2App/modules/memoizeOne.js","D2App/components/Item/VisualizationItem/LoadingMask.js","D2App/components/Item/VisualizationItem/Item.js","D2App/widgets/Line.js","D2App/components/Item/MessagesItem/Item.js","D2App/components/Item/NotSupportedItem/Item.js","D2App/icons/Description.js","D2App/icons/Delete.js","D2App/components/Item/ListItem/Item.js","D2App/components/Item/ListItem/actions.js","D2App/components/Item/TextItem/Item.js","D2App/components/Item/AppItem/Item.js","D2App/components/Item/SpacerItem/Item.js","D2App/components/Item/Item.js","D2App/widgets/NoContentMessage.js","D2App/components/Item/ProgressiveLoadingContainer.js","D2App/components/ItemGrid/ItemGrid.js","D2App/components/FilterBar/FilterBadge.js","D2App/components/FilterBar/FilterBar.js","D2App/components/Dashboard/DashboardContent.js","D2App/components/Dashboard/ViewDashboard.js","D2App/components/ControlBar/ConfirmDeleteDialog.js","D2App/components/ControlBar/EditBar.js","D2App/components/Dashboard/EditDashboard.js","D2App/components/Dashboard/NewDashboard.js","D2App/components/Dashboard/Dashboard.js","D2App/components/App.js","D2App/actions/user.js","D2App/reducers/style.js","D2App/reducers/index.js","D2App/configureStore.js","D2App/locales/index.js","D2App/AppWrapper.js","D2App/modules/util.js","D2App/modules/itemTypes.js","D2App/components/Item/VisualizationItem/plugin.js","D2App/components/ItemGrid/gridUtil.js","D2App/api/metadata.js","D2App/components/ControlBar/styles/DashboardsBar.module.css"],"names":["module","exports","DEFAULT_STATE_USER","id","username","uiLocale","isSuperuser","sGetUserUsername","state","user","spacerContent","isTextType","item","type","TEXT","text","convertUiItemsToBackend","items","map","SPACER","isUiSpacerType","convertBackendItemsToUi","isBackendSpacerType","gridProperties","getGridItemProperties","DEFAULT_STATE_DASHBOARDS","byId","updateDashboardProp","dashboardId","prop","value","sGetDashboardsRoot","dashboards","sGetDashboardById","orObject","sDashboardsIsFetching","sGetAllDashboards","sGetDashboardItems","sGetStarredDashboards","Object","values","filter","dashboard","starred","sGetUnstarredDashboards","getCustomDashboards","data","arrayFrom","d","name","displayName","description","displayDescription","favorite","owner","created","split","join","substr","lastUpdated","access","numberOfItems","orArray","dashboardItems","length","DEFAULT_STATE_EDIT_DASHBOARD","NEW_DASHBOARD_STATE","sGetEditDashboardRoot","editDashboard","sGetIsEditing","isEmpty","sGetEditDashboardItems","DEFAULT_STATE_EDIT_ITEM_FILTERS","sGetEditItemFiltersRoot","editItemFilters","combineReducers","action","validateReducer","isLoading","showDescription","sGetSelectedRoot","selected","sGetSelectedId","sGetSelectedIsLoading","sGetSelectedShowDescription","acRemoveEditItemFilter","DEFAULT_STATE_ITEM_FILTERS","sGetItemFiltersRoot","itemFilters","sGetFiltersKeys","keys","acRemoveItemFilter","sGetMessagesRoot","messages","tGetMessages","async","url","getInstance","then","d2","Api","getApi","get","catch","error","console","log","getMessages","messageConversations","dispatch","err","DEFAULT_STATE_SNACKBAR","message","duration","open","acCloseSnackbar","DEFAULT_STATE_VISUALIZATIONS","p","undefined","sGetVisualization","visualizations","sGetVisualizationsRoot","acAddVisualization","onError","getDashboardItemsFields","withFavorite","arrayClean","getListItemFields","getFavoritesFields","withDimensions","getDashboardFields","withItems","getIdNameFields","rename","apiFetchDashboard","models","fields","loadingDashboardMsg","SnackbarMessageContent","style","fontWeight","connect","snackbar","sGetSnackbar","snackbarOpen","snackbarMessage","snackbarDuration","onCloseSnackbar","props","zIndex","autoHideDuration","onClose","acSetSelectedId","acSetSelectedIsLoading","tSetSelectedDashboardById","getState","snackbarTimeout","setTimeout","dashboardName","onSuccess","customDashboard","acSetDashboardItems","withShape","localStorage","setItem","forEach","REPORT_TABLE","CHART","MAP","EVENT_REPORT","EVENT_CHART","extractFavorite","MESSAGES","filters","clearTimeout","dash","acAppendDashboards","Promise","resolve","tLoadDashboard","saveDashboard","assign","width","w","height","h","save","msg","response","uid","acAddDashboardItem","itemPropName","itemTypeMap","propName","generateUid","gridItemProperties","content","NEW_ITEM_SHAPE","acUpdateDashboardItem","acRemoveDashboardItem","tSaveDashboard","dashboardToSave","create","postDashboard","arrayToIdMap","tFetchDashboards","collection","list","paging","toArray","tStarDashboard","isStarred","post","delete","apiStarDashboard","acSetDashboardStarred","tDeleteDashboard","apiDeleteDashboard","userRows","sGetControlBarUserRows","controlBar","sGetControlBarRoot","KEY","hasNamespace","currentUser","dataStore","has","getNamespace","apiPostControlBarRows","rows","namespace","set","acSetControlBarUserRows","tSetControlBarRows","controlBarRows","find","key","apiGetControlBarRows","DEFAULT_DIMENSIONS","getDimensionById","DIMENSION_ID_PERIOD","DIMENSION_ID_ORGUNIT","sGetDimensions","dimensions","DEFAULT_SETTINGS","keyDateFormat","keyAnalysisRelativePeriod","keyAnalysisDigitGroupSeparator","displayNameProperty","rootOrganisationUnit","sGetSettings","settings","sGetSettingsDisplayNameProperty","tSetDimensions","displayNameProp","apiFetchDimensions","acSetDimensions","dim","dimensionType","dataDimensionType","ControlBar","React","Component","constructor","super","onStartDrag","this","setState","dragging","window","addEventListener","onDrag","onEndDrag","event","preventDefault","stopPropagation","newHeight","clientY","onChangeHeight","requestAnimationFrame","removeEventListener","renderDragHandle","className","classes","draghandle","onMouseDown","render","Math","max","rootStyle","backgroundColor","editMode","colors","yellow050","white","paddingBottom","transition","root","children","defaultProps","StarIcon","xmlns","viewBox","fill","DashboardItemChip","label","chipProps","selectedState","unselected","icon","Star","link","to","onClick","debounce","eventType","apiPostDataStatistics","AddCircleIcon","teal600","ClearIcon","grey800","ClearButton","onClear","button","Clear","color","ownerData","DEFAULT_STATE_DASHBOARDS_FILTER_OWNER","order","sGetDashboardsFilterRoot","dashboardsFilter","sGetFilterName","styles","filterField","fontSize","top","searchIcon","grey700","Filter","setFilterValue","onChangeName","target","handleKeyUp","keyCode","onKeypressEnter","componentWillReceiveProps","nextProps","startAdornment","position","endAdornment","placeholder","i18n","t","onChange","onKeyUp","Function","prototype","withStyles","ShowMoreButton","isMaxHeight","disabled","textAlign","showMore","getRowsHeight","getControlBarHeight","FIRST_ROW_PADDING_HEIGHT","DashboardsBar","setInitialDashboardState","adjustedHeight","newRows","floor","newRowCount","min","onToggleMaxHeight","onSelectDashboard","history","push","componentDidMount","selectedId","onChangeFilterName","rowCount","controlBarHeight","contentWrapperStyle","padding","overflowY","leftControls","display","textDecoration","marginRight","AddCircle","mapDispatchToProps","withRouter","stateProps","dispatchProps","ownProps","displayDashboards","arraySort","toLowerCase","includes","marginTop","HeaderMenuItem","title","dense","LaunchIcon","grey600","LaunchLink","e","launchLink","rel","href","Launch","InsertButton","buttonInsert","ContentMenuItem","onInsert","visType","ItemIcon","getItemIcon","renderedItemIcon","VISUALIZATION","visTypeIcons","menuItem","singleItems","header","categorizedItems","USERS","REPORTS","RESOURCES","APP","listItemTypes","CategorizedMenuGroup","addItem","tAddListItemContent","newItem","toggleSeeMore","seeMore","onChangeItemsLimit","hasMore","itemUrl","getItemUrl","context","showMoreButton","margin","contextTypes","PropTypes","object","isRequired","listItemType","dashboardItemIndex","findIndex","dashboardItem","category","addToDashboard","ItemSearchField","onFocus","ItemSelector","closeList","openList","_","fetchItems","anchorEl","currentTarget","setFilter","getCategorizedMenuGroups","itemType","endPointName","itemCount","getDefaultItemCount","allItems","maxOptions","slice","pluralTitle","getSinglesMenuGroups","getMenuGroups","concat","add","Set","queryString","anchorOrigin","horizontal","vertical","transformOrigin","PaperProps","disableAutoFocus","disableEnforceFocus","disableRestoreFocus","maxWidth","EditTitleBar","onChangeTitle","onChangeDescription","section","titleDescription","itemSelector","selectedDashboard","FilterDialog","onConfirm","renderDialogContent","dimension","selectedItems","dialogId","commonProps","onSelect","onDeselect","onReorder","selectedPeriods","ouItems","dimensionId","large","secondary","primary","DEFAULT_STATE_ACTIVE_MODAL_DIMENSION","sGetActiveModalDimension","activeModalDimension","acSetActiveModalDimension","selectedDimensions","clearActiveModalDimension","setActiveModalDimension","addItemFilter","removeItemFilter","removeEditItemFilter","setEditItemFilters","showPopover","setShowPopover","useState","ref","useRef","closePanel","onCloseDialog","onClickOutside","reference","arrow","placement","onDimensionClick","selectedIds","itemIdsToRemove","newList","itemIds","oldList","reorderedList","filterItems","Info","show","toggle","NO_DESCRIPTION","ViewTitleBar","toggleSharingDialog","sharingDialogIsOpen","onStarClick","onInfoClick","titleStyle","cursor","userSelect","StarBorder","titleBar","actions","titleBarIcon","marginLeft","update","editLink","manage","paddingTop","onRequestClose","black","minWidth","TitleBar","edit","DefaultPlugin","pluginCredentials","shouldPluginReload","prevProps","reloadAllowed","filtersChanged","vis","visualization","prevVis","visChanged","activeType","reloadPlugin","pluginManager","currentVis","useActiveType","credentials","getActiveType","baseUrl","getBaseUrl","auth","defaultHeaders","Authorization","options","componentDidUpdate","getGridItemDomId","textDiv","ThreeDots","SpeechBubble","fillRule","transform","Warning","FatalErrorBoundary","errorFound","componentDidCatch","info","container","DeleteItemButton","deleteItemButton","red500","ItemHeader","forwardRef","itemId","actionButtons","itemHeaderWrap","itemTitle","itemActionsWrap","iconFill","ItemHeaderButtons","setAnchorEl","onSelectActiveType","isTrackerType","isTrackerDomainType","onViewTable","handleClose","onViewChart","onViewMap","canViewAs","isSingleValue","isYearOverYear","VIS_TYPE_GAUGE","VIS_TYPE_PIE","interpretationMenuLabel","activeFooter","ViewAsMenuItems","hasMapView","pluginIsAvailable","small","Boolean","appName","getAppName","getLink","onToggleFooter","scrollContainer","line","border","grey100","ItemFooter","objectId","getId","memoizeOne","fn","lastArgs","lastValue","args","every","arg","i","LoadingMask","center","Item","showFooter","configLoaded","pluginIsLoaded","applyFilters","visRows","obj","visColumns","columns","visFilters","dimensionFound","dimensionObjects","getUniqueKey","uniqueId","getPluginComponent","memoizedGetVisualizationConfig","calculatedHeight","originalHeight","headerRef","current","clientHeight","ITEM_CONTENT_PADDING_BOTTOM","memoizedGetContentStyle","contentRef","offsetHeight","memoizedApplyFilters","onLoadingComplete","forDashboard","mapViews","layer","hideTitle","onToggleItemExpanded","getContentStyle","measuredHeight","createRef","getVisualizationConfig","onVisualizationLoaded","prevState","acSetActiveVisualizationType","grey200","Line","messageTypes","VALIDATION_RESULT","TICKET","SYSTEM","listStyleType","paddingLeft","seeAll","marginBottom","sender","lineHeight","snippet","maxHeight","overflow","MessagesItem","getMessageHref","msgIdentifier","messageType","getMessageSender","latestMsg","getMessageItems","editClass","readClass","read","msgDate","document","location","messageCount","formatDate","userSettings","string","MessagesContainer","NotSupportedItem","justifyContent","alignItems","align","DescriptionIcon","grey500","DeleteIcon","getItemTitle","ListItem","tRemoveListItemContent","contentItems","index","array","el","getContentItems","contentItem","Description","itemicon","deleteButton","deletebutton","deleteicon","grey900","newContent","whiteSpace","textField","fontStretch","onChangeText","updatedItem","onEdit","multiline","fullWidth","textDivStyle","viewItem","getIframeSrc","appDetails","iframeSrc","launchUrl","ouIds","ouPath","AppItem","appKey","system","installedApps","app","src","SpacerItem","GridItem","VisualizationItem","TextItem","getGridItem","NoContentMessage","ProgressiveLoadingContainer","shouldLoad","containerRef","shouldLoadHandler","checkShouldLoad","bufferPx","bufferFactor","innerHeight","rect","getBoundingClientRect","bottom","removeHandler","registerHandler","debounceMs","getElementsByClassName","componentWillUnmount","eventProps","pick","ItemGrid","expandedItems","clickedId","isExpanded","onRemoveItem","onLayoutChange","newLayout","acUpdateDashboardLayout","onResizeStop","layout","oldItem","onItemResize","isVisualizationType","pluginResize","onRemoveItemWrapper","adjustHeightForExpanded","expandedItem","getItemComponent","itemClassNames","getItemComponents","translucent","MARGIN","cols","getGridColumns","rowHeight","GRID_ROW_HEIGHT","innerWidth","compactType","GRID_COMPACT_TYPE","isDraggable","isResizable","draggableCancel","validItems","hasShape","badgeContainer","borderRadius","badge","badgeRemove","FilterBadge","onRemove","count","FilterBar","onBadgeRemove","onBadgeClick","bar","removeItemFIlter","filtersSelector","createSelector","reduce","arr","DashboardContent","Content","hasDashboardContent","dashboardsIsEmpty","dashboardsLoaded","contentNotReady","ConfirmDeleteDialog","onDeleteConfirmed","onContinueEditing","destructive","buttonBarStyle","EditBar","translationDialogIsOpen","dashboardModel","confirmDeleteDialogOpen","redirectUrl","onConfirmDelete","onSave","newId","onDiscard","onDiscardChanges","onDelete","onTranslationsSaved","translations","dbLocale","translation","locale","property","onTranslate","fetchDashboardModel","toggleTranslationDialog","confirmDeleteDialog","deleteAccess","translationDialog","objectToTranslate","fieldsToTranslate","onTranslationSaved","onTranslationError","updateAccess","discardBtnText","rightControls","sGetIsNewDashboard","acSetDashboardDisplayName","EditDashboard","initialized","initEditDashboard","setEditDashboard","getDashboardContent","NewDashboard","setNewDashboard","Dashboard","setDashboard","match","params","selectDashboard","scrollToTop","scrollTo","mode","dashboardToSelect","preferredId","getItem","sGetDashboardsSortedByStarred","App","setCurrentUser","fetchDashboards","setControlBarRows","setDimensions","getChildContext","spacers","exact","path","childContextTypes","objectClean","conversations","$merge","d2Object","keyUiLocale","authorities","newState","k","$unshift","idToRemove","$splice","stateItems","layoutHasChanged","newStateItems","x","y","stateItem","si","configureStore","middleware","thunk","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducer","applyMiddleware","addResources","arTranslations","ar_IQTranslations","daTranslations","enTranslations","esTranslations","frTranslations","idTranslations","kmTranslations","loTranslations","myTranslations","nbTranslations","prsTranslations","psTranslations","ptTranslations","pt_BRTranslations","ruTranslations","svTranslations","tetTranslations","tgTranslations","ukTranslations","urTranslations","viTranslations","zhTranslations","zh_CNTranslations","appConfig","schemas","authorization","process","REACT_APP_DHIS2_AUTHORIZATION","headers","AppWrapper","store","theme","createMuiTheme","dhis2theme","i18nRoot","param","Array","isArray","isObject","global","Intl","DateTimeFormat","year","month","day","format","Date","replace","defaultValue","api","idx","indexOf","getWithoutId","domainType","defaultItemCount","appUrl","getTime","getEndPointName","TableIcon","ChartIcon","MapIcon","ExtensionIcon","PersonIcon","FontDownloadIcon","EmailIcon","CropFreeIcon","NotInterestedIcon","itemTypeToExternalPlugin","getPlugin","hasIntegratedPlugin","reportTable","chart","eventReport","eventChart","getName","load","config","plugin","loadingIndicator","loadPlugin","fetch","apiFetchFavorite","getMapFields","resize","unmount","originalType","extractedMapView","mv","VIS_TYPE_COLUMN","VIS_TYPE_PIVOT_TABLE","isNonNegativeInteger","Number","isInteger","minH","itemWithShape","Error","col","row","itemWidth","itemHeight","getShape","round","getOriginalHeight","querySelector","isFunction","setViewportSize","clientWidth","getDimensionFields","getAxesFields","getFavoriteFields","withOptions"],"mappings":"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","file":"static/js/app.caa3ef60.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ControlBar_root__iikeX\",\"content\":\"ControlBar_content__26Z33\",\"draghandle\":\"ControlBar_draghandle__27zum\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"DashboardItemChip_link__21drZ\",\"icon\":\"DashboardItemChip_icon__2hcIR\",\"selected\":\"DashboardItemChip_selected__r00uP\",\"unselected\":\"DashboardItemChip_unselected__2H9l2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ClearButton_button__33ZbK\",\"icon\":\"ClearButton_icon__vTJm3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"showMore\":\"ShowMoreButton_showMore__3S3He\",\"disabled\":\"ShowMoreButton_disabled__2FQNA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuItem\":\"ContentMenuItem_menuItem__vbKn3\",\"launchLink\":\"ContentMenuItem_launchLink__2Nql9\",\"label\":\"ContentMenuItem_label__ANfH1\",\"buttonInsert\":\"ContentMenuItem_buttonInsert__1joHg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"showMoreButton\":\"CategorizedMenuGroup_showMoreButton__2RbRp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"EditTitleBar_section__LIaIC\",\"titleDescription\":\"EditTitleBar_titleDescription__1YsU6\",\"title\":\"EditTitleBar_title__3mUbt\",\"description\":\"EditTitleBar_description__24U5X\",\"itemSelector\":\"EditTitleBar_itemSelector__1cFEp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"actions\":\"ViewTitleBar_actions__2UTRz\",\"editLink\":\"ViewTitleBar_editLink__d_HzW\",\"titleBar\":\"ViewTitleBar_titleBar__eiwJS\",\"titleBarIcon\":\"ViewTitleBar_titleBarIcon__2cBxv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FatalErrorBoundary_container__3SViR\",\"icon\":\"FatalErrorBoundary_icon__2UbeP\",\"message\":\"FatalErrorBoundary_message__3FzrY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"deleteItemButton\":\"DeleteItemButton_deleteItemButton__2A_sR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemWrap\":\"ItemHeader_itemWrap__cLsxA\",\"itemHeaderWrap\":\"ItemHeader_itemHeaderWrap__puT6u\",\"itemTitle\":\"ItemHeader_itemTitle__2gi2c\",\"itemActionsWrap\":\"ItemHeader_itemActionsWrap__azLJO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"center\":\"LoadingMask_center__2SFwS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textDiv\":\"Item_textDiv__1U7zV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Item_list__1_nkQ\",\"item\":\"Item_item__3-6QE\",\"itemicon\":\"Item_itemicon__QlouX\",\"link\":\"Item_link___3c_q\",\"deleteicon\":\"Item_deleteicon__3usrl\",\"deletebutton\":\"Item_deletebutton__1DpBW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bar\":\"FilterBar_bar__1Ma3p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ConfirmDeleteDialog_content__EqswE\"};","export const EDIT = 'edit';\nexport const NEW = 'new';\nexport const VIEW = 'view';","export const RECEIVED_USER = 'RECEIVED_USER';\nexport const DEFAULT_STATE_USER = {\n  id: '',\n  username: '',\n  uiLocale: '',\n  isSuperuser: false\n};\nexport default ((state = DEFAULT_STATE_USER, action) => {\n  switch (action.type) {\n    case RECEIVED_USER:\n      {\n        return fromD2ToUserObj(action.value);\n      }\n\n    default:\n      return state;\n  }\n});\n\nfunction fromD2ToUserObj(d2Object) {\n  return {\n    id: d2Object.id,\n    username: d2Object.username,\n    uiLocale: d2Object.settings.keyUiLocale,\n    isSuperuser: d2Object.authorities.has('ALL')\n  };\n} // selectors\n\n\nexport const sGetUserId = state => state.user.id;\nexport const sGetUserUsername = state => state.user.username;\nexport const sGetIsSuperuser = state => state.user.isSuperuser;\nexport const sGetUiLocale = state => state.user.uiLocale;","import { TEXT, SPACER } from './itemTypes';\nimport { getGridItemProperties } from '../components/ItemGrid/gridUtil';\nexport const spacerContent = 'SPACER_ITEM_FOR_DASHBOARD_LAYOUT_CONVENIENCE';\nexport const emptyTextItemContent = 'TEXT_ITEM_WITH_NO_CONTENT';\n\nconst isBackendSpacerType = item => item.type === TEXT && item.text === spacerContent;\n\nconst isUiSpacerType = item => item.type === SPACER;\n\nconst isTextType = item => item.type === TEXT && item.text !== spacerContent;\n\nexport const convertUiItemsToBackend = items => items.map(item => {\n  let text = null;\n\n  if (isUiSpacerType(item)) {\n    text = spacerContent;\n  } else if (isTextType(item)) {\n    text = item.text || emptyTextItemContent;\n  }\n\n  return { ...item,\n    ...(text ? {\n      text\n    } : {})\n  };\n});\nexport const convertBackendItemsToUi = items => items.map(item => {\n  const type = isBackendSpacerType(item) ? SPACER : item.type;\n  const gridProperties = getGridItemProperties(item.id);\n  const text = isTextType(item) ? item.text === emptyTextItemContent ? '' : item.text : null;\n  return { ...item,\n    ...(text !== null ? {\n      text\n    } : {}),\n    type,\n    ...gridProperties\n  };\n});","/** @module reducers/dashboards */\nimport arrayFrom from 'd2-utilizr/lib/arrayFrom';\nimport arraySort from 'd2-utilizr/lib/arraySort';\nimport { orArray, orObject } from '../modules/util';\nimport { convertBackendItemsToUi } from '../modules/uiBackendItemConverter';\nexport const SET_DASHBOARDS = 'SET_DASHBOARDS';\nexport const ADD_DASHBOARDS = 'ADD_DASHBOARDS';\nexport const SET_DASHBOARD_STARRED = 'SET_DASHBOARD_STARRED';\nexport const SET_DASHBOARD_DISPLAY_NAME = 'SET_DASHBOARD_DISPLAY_NAME';\nexport const SET_DASHBOARD_ITEMS = 'SET_DASHBOARD_ITEMS';\nexport const DEFAULT_STATE_DASHBOARDS = {\n  byId: null,\n  items: []\n}; // reducer helper functions\n\nconst updateDashboardProp = ({\n  state,\n  dashboardId,\n  prop,\n  value\n}) => ({\n  byId: { ...state.byId,\n    [dashboardId]: { ...state.byId[dashboardId],\n      [prop]: value\n    }\n  },\n  items: state.items\n});\n/**\n * Reducer that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n * @returns {Object}\n */\n\n\nexport default ((state = DEFAULT_STATE_DASHBOARDS, action) => {\n  switch (action.type) {\n    case SET_DASHBOARDS:\n      {\n        return {\n          byId: action.value,\n          items: []\n        };\n      }\n\n    case ADD_DASHBOARDS:\n      {\n        return { ...state,\n          byId: { ...state.byId,\n            ...action.value\n          }\n        };\n      }\n\n    case SET_DASHBOARD_STARRED:\n      {\n        return updateDashboardProp({\n          state,\n          dashboardId: action.dashboardId,\n          prop: 'starred',\n          value: action.value\n        });\n      }\n\n    case SET_DASHBOARD_DISPLAY_NAME:\n      {\n        return updateDashboardProp({\n          state,\n          dashboardId: action.dashboardId,\n          prop: 'displayName',\n          value: action.value\n        });\n      }\n\n    case SET_DASHBOARD_ITEMS:\n      {\n        return { ...state,\n          items: action.value\n        };\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetDashboardsRoot = state => state.dashboards; // selector level 1\n\n/**\n * Selector which returns a dashboard by id from the state object\n * If no matching dashboard is found it returns undefined\n * If dashboards.byId is null, then the dashboards api request\n * has not yet completed. If dashboards.byId is an empty object\n * then the dashboards api request is complete, but no dashboards\n * were returned\n *\n * @function\n * @param {Object} state The current state\n * @param {Number} id The id of the dashboard\n * @returns {Object | undefined}\n */\n\nexport const sGetDashboardById = (state, id) => orObject(sGetDashboardsRoot(state).byId)[id];\nexport const sDashboardsIsFetching = state => {\n  return sGetDashboardsRoot(state).byId === null;\n};\n/**\n * Selector which returns all dashboards (the byId object)\n *\n * @function\n * @param {Object} state The current state\n * @returns {Object | undefined}\n */\n\nexport const sGetAllDashboards = state => orObject(sGetDashboardsRoot(state).byId);\n/**\n * Selector which returns the current dashboard items\n *\n * @function\n * @param {Object} state The current state\n * @returns {Array}\n */\n\nexport const sGetDashboardItems = state => sGetDashboardsRoot(state).items; // selector level 2\n\nexport const sGetStarredDashboards = state => Object.values(sGetAllDashboards(state)).filter(dashboard => dashboard.starred === true);\nexport const sGetUnstarredDashboards = state => Object.values(sGetAllDashboards(state)).filter(dashboard => dashboard.starred === false); // selector level 3\n\nexport const sGetStarredDashboardIds = state => {\n  return sGetStarredDashboards(state).map(dashboard => dashboard.id);\n};\nexport const sGetUnstarredDashboardIds = state => sGetUnstarredDashboards(state).map(dashboard => dashboard.id);\nexport const sGetDashboardsSortedByStarred = state => [...arraySort(sGetStarredDashboards(state), 'ASC', 'displayName'), ...arraySort(sGetUnstarredDashboards(state), 'ASC', 'displayName')]; // utils\n\n/**\n * Returns the array of dashboards, customized for ui\n * @function\n * @param {Array} data The original dashboard list\n * @returns {Array}\n */\n\nexport const getCustomDashboards = data => arrayFrom(data).map(d => ({\n  id: d.id,\n  name: d.name,\n  displayName: d.displayName,\n  description: d.description,\n  displayDescription: d.displayDescription,\n  starred: d.favorite,\n  owner: d.user.name,\n  created: d.created.split('T').join(' ').substr(0, 16),\n  lastUpdated: d.lastUpdated.split('T').join(' ').substr(0, 16),\n  access: d.access,\n  numberOfItems: orArray(d.dashboardItems).length,\n  dashboardItems: convertBackendItemsToUi(d.dashboardItems)\n}));","/** @module reducers/editDashboard */\nimport update from 'immutability-helper';\nimport isEmpty from 'lodash/isEmpty';\nimport { orArray, orObject } from '../modules/util';\nexport const RECEIVED_EDIT_DASHBOARD = 'RECEIVED_EDIT_DASHBOARD';\nexport const RECEIVED_NOT_EDITING = 'RECEIVED_NOT_EDITING';\nexport const START_NEW_DASHBOARD = 'START_NEW_DASHBOARD';\nexport const RECEIVED_TITLE = 'RECEIVED_TITLE';\nexport const RECEIVED_DESCRIPTION = 'RECEIVED_DESCRIPTION';\nexport const ADD_DASHBOARD_ITEM = 'ADD_DASHBOARD_ITEM';\nexport const REMOVE_DASHBOARD_ITEM = 'REMOVE_DASHBOARD_ITEM';\nexport const UPDATE_DASHBOARD_ITEM = 'UPDATE_DASHBOARD_ITEM';\nexport const RECEIVED_DASHBOARD_LAYOUT = 'RECEIVED_DASHBOARD_LAYOUT';\nexport const DEFAULT_STATE_EDIT_DASHBOARD = {};\nexport const NEW_DASHBOARD_STATE = {\n  id: '',\n  name: '',\n  access: {},\n  description: '',\n  dashboardItems: []\n};\nexport default ((state = DEFAULT_STATE_EDIT_DASHBOARD, action) => {\n  switch (action.type) {\n    case RECEIVED_EDIT_DASHBOARD:\n      {\n        const newState = {};\n        Object.keys(NEW_DASHBOARD_STATE).map(k => newState[k] = action.value[k]);\n        return newState;\n      }\n\n    case RECEIVED_NOT_EDITING:\n      return DEFAULT_STATE_EDIT_DASHBOARD;\n\n    case START_NEW_DASHBOARD:\n      return NEW_DASHBOARD_STATE;\n\n    case RECEIVED_TITLE:\n      {\n        return Object.assign({}, state, {\n          name: action.value\n        });\n      }\n\n    case RECEIVED_DESCRIPTION:\n      {\n        return Object.assign({}, state, {\n          description: action.value\n        });\n      }\n\n    case ADD_DASHBOARD_ITEM:\n      return update(state, {\n        dashboardItems: {\n          $unshift: [action.value]\n        }\n      });\n\n    case REMOVE_DASHBOARD_ITEM:\n      {\n        const idToRemove = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === idToRemove);\n\n        if (dashboardItemIndex > -1) {\n          return update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1]]\n            }\n          });\n        }\n\n        return state;\n      }\n\n    case RECEIVED_DASHBOARD_LAYOUT:\n      {\n        const stateItems = orArray(state.dashboardItems);\n        let layoutHasChanged = false;\n        const newStateItems = action.value.map(({\n          x,\n          y,\n          w,\n          h,\n          i\n        }) => {\n          const stateItem = stateItems.find(si => si.id === i);\n\n          if (!(stateItem.x === x && stateItem.y === y && stateItem.w === w && stateItem.h === h)) {\n            layoutHasChanged = true;\n            return Object.assign({}, stateItem, {\n              w,\n              h,\n              x,\n              y\n            });\n          }\n\n          return stateItem;\n        });\n        return layoutHasChanged ? { ...state,\n          dashboardItems: newStateItems\n        } : state;\n      }\n\n    case UPDATE_DASHBOARD_ITEM:\n      {\n        const dashboardItem = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === dashboardItem.id);\n\n        if (dashboardItemIndex > -1) {\n          const newState = update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1, Object.assign({}, dashboardItem)]]\n            }\n          });\n          return newState;\n        }\n\n        return state;\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetEditDashboardRoot = state => state.editDashboard; // selectors\n\nexport const sGetIsEditing = state => !isEmpty(state.editDashboard);\nexport const sGetIsNewDashboard = state => {\n  return !isEmpty(state.editDashboard) && sGetEditDashboardRoot(state).id === '';\n};\nexport const sGetEditDashboardItems = state => orObject(sGetEditDashboardRoot(state)).dashboardItems;","export const CLEAR_EDIT_ITEM_FILTERS = 'CLEAR_EDIT_ITEM_FILTERS';\nexport const REMOVE_EDIT_ITEM_FILTER = 'REMOVE_EDIT_ITEM_FILTER';\nexport const SET_EDIT_ITEM_FILTERS = 'SET_EDIT_ITEM_FILTERS';\nexport const DEFAULT_STATE_EDIT_ITEM_FILTERS = {};\nexport default ((state = DEFAULT_STATE_EDIT_ITEM_FILTERS, action) => {\n  switch (action.type) {\n    case REMOVE_EDIT_ITEM_FILTER:\n      {\n        const newState = { ...state\n        };\n        delete newState[action.id];\n        return newState;\n      }\n\n    case SET_EDIT_ITEM_FILTERS:\n      {\n        return action.filters;\n      }\n\n    case CLEAR_EDIT_ITEM_FILTERS:\n      {\n        return DEFAULT_STATE_EDIT_ITEM_FILTERS;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetEditItemFiltersRoot = state => state.editItemFilters;\nexport const sGetEditFiltersKeys = state => Object.keys(sGetEditItemFiltersRoot(state));","/** @module reducers/selected */\nimport { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\nexport const SET_SELECTED_ID = 'SET_SELECTED_ID';\nexport const SET_SELECTED_ISLOADING = 'SET_SELECTED_ISLOADING';\nexport const SET_SELECTED_SHOWDESCRIPTION = 'SET_SELECTED_SHOWDESCRIPTION';\nexport const DEFAULT_STATE_SELECTED_ID = null;\nexport const DEFAULT_STATE_SELECTED_ISLOADING = false;\nexport const DEFAULT_STATE_SELECTED_SHOWDESCRIPTION = false;\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\n\nconst id = (state = DEFAULT_STATE_SELECTED_ID, action) => {\n  switch (action.type) {\n    case SET_SELECTED_ID:\n      return validateReducer(action.value, DEFAULT_STATE_SELECTED_ID);\n\n    default:\n      return state;\n  }\n};\n\nconst isLoading = (state = DEFAULT_STATE_SELECTED_ISLOADING, action) => {\n  switch (action.type) {\n    case SET_SELECTED_ISLOADING:\n      return validateReducer(action.value, DEFAULT_STATE_SELECTED_ISLOADING);\n\n    default:\n      return state;\n  }\n};\n\nconst showDescription = (state = DEFAULT_STATE_SELECTED_SHOWDESCRIPTION, action) => {\n  switch (action.type) {\n    case SET_SELECTED_SHOWDESCRIPTION:\n      return validateReducer(action.value, DEFAULT_STATE_SELECTED_SHOWDESCRIPTION);\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  id,\n  isLoading,\n  showDescription\n}); // Selectors\n\nexport const sGetSelectedRoot = state => state.selected;\nexport const sGetSelectedId = state => sGetSelectedRoot(state).id;\nexport const sGetSelectedIsLoading = state => sGetSelectedRoot(state).isLoading;\nexport const sGetSelectedShowDescription = state => sGetSelectedRoot(state).showDescription;","import { REMOVE_EDIT_ITEM_FILTER, SET_EDIT_ITEM_FILTERS, CLEAR_EDIT_ITEM_FILTERS } from '../reducers/editItemFilters'; // actions\n\nexport const acRemoveEditItemFilter = id => ({\n  type: REMOVE_EDIT_ITEM_FILTER,\n  id\n});\nexport const acClearEditItemFilters = () => ({\n  type: CLEAR_EDIT_ITEM_FILTERS\n});\nexport const acSetEditItemFilters = filters => ({\n  type: SET_EDIT_ITEM_FILTERS,\n  filters\n});","export const CLEAR_ITEM_FILTERS = 'CLEAR_ITEM_FILTERS';\nexport const SET_ITEM_FILTERS = 'SET_ITEM_FILTERS';\nexport const ADD_ITEM_FILTER = 'ADD_ITEM_FILTER';\nexport const REMOVE_ITEM_FILTER = 'REMOVE_ITEM_FILTER';\nexport const DEFAULT_STATE_ITEM_FILTERS = {};\nexport default ((state = DEFAULT_STATE_ITEM_FILTERS, action) => {\n  switch (action.type) {\n    case ADD_ITEM_FILTER:\n      {\n        return { ...state,\n          [action.filter.id]: action.filter.value\n        };\n      }\n\n    case REMOVE_ITEM_FILTER:\n      {\n        const newState = { ...state\n        };\n        delete newState[action.id];\n        return newState;\n      }\n\n    case SET_ITEM_FILTERS:\n      {\n        return action.filters;\n      }\n\n    case CLEAR_ITEM_FILTERS:\n      {\n        return DEFAULT_STATE_ITEM_FILTERS;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetItemFiltersRoot = state => state.itemFilters;\nexport const sGetFiltersKeys = state => Object.keys(sGetItemFiltersRoot(state));","import { ADD_ITEM_FILTER, REMOVE_ITEM_FILTER, SET_ITEM_FILTERS, CLEAR_ITEM_FILTERS } from '../reducers/itemFilters';\nexport const FILTER_ORG_UNIT = 'ou'; // actions\n\nexport const acAddItemFilter = filter => ({\n  type: ADD_ITEM_FILTER,\n  filter\n});\nexport const acRemoveItemFilter = id => ({\n  type: REMOVE_ITEM_FILTER,\n  id\n});\nexport const acClearItemFilters = () => ({\n  type: CLEAR_ITEM_FILTERS\n});\nexport const acSetItemFilters = filters => ({\n  type: SET_ITEM_FILTERS,\n  filters\n});","import update from 'immutability-helper';\nimport { arrayToIdMap } from '../modules/util';\nexport const RECEIVED_MESSAGES = 'RECEIVED_MESSAGES';\nexport default ((state = {}, action) => {\n  switch (action.type) {\n    case RECEIVED_MESSAGES:\n      {\n        const conversations = arrayToIdMap(action.value);\n        const newState = update(state, {\n          $merge: conversations\n        });\n        return newState;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetMessagesRoot = state => state.messages;","import { getInstance } from 'd2';\nexport const getMessages = () => {\n  const fields = 'id,messageCount,lastUpdated,messageType,displayName,read,messages[id,read,sender[id,displayName],text,lastUpdated]';\n  const url = `/messageConversations?fields=${fields}&order=read:asc&pageSize=200`;\n  return getInstance().then(d2 => d2.Api.getApi().get(url)).catch(error => console.log('Error:', error));\n};","import { RECEIVED_MESSAGES } from '../../../reducers/messages';\nimport { getMessages } from '../../../api/messages';\n\nconst onError = (action, error) => {\n  console.log(`Error in action ${action}: ${error}`);\n  return error;\n};\n\nexport const receivedMessages = value => ({\n  type: RECEIVED_MESSAGES,\n  value\n});\nexport const tGetMessages = () => async dispatch => {\n  try {\n    const messages = await getMessages();\n    const {\n      messageConversations\n    } = messages;\n    return dispatch(receivedMessages(messageConversations));\n  } catch (err) {\n    return onError('Get Messages', err);\n  }\n};","export const RECEIVED_SNACKBAR_MESSAGE = 'RECEIVED_SNACKBAR_MESSAGE';\nexport const CLOSE_SNACKBAR = 'CLOSE_SNACKBAR';\nexport const DEFAULT_STATE_SNACKBAR = {\n  message: {},\n  duration: null,\n  open: false\n};\nexport default ((state = DEFAULT_STATE_SNACKBAR, action) => {\n  switch (action.type) {\n    case RECEIVED_SNACKBAR_MESSAGE:\n      {\n        return { ...state,\n          ...action.value\n        };\n      }\n\n    case CLOSE_SNACKBAR:\n      {\n        return DEFAULT_STATE_SNACKBAR;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetSnackbar = state => state.snackbar || DEFAULT_STATE_SNACKBAR;","import { RECEIVED_SNACKBAR_MESSAGE, CLOSE_SNACKBAR } from '../reducers/snackbar';\nexport const acReceivedSnackbarMessage = value => ({\n  type: RECEIVED_SNACKBAR_MESSAGE,\n  value\n});\nexport const acCloseSnackbar = () => ({\n  type: CLOSE_SNACKBAR\n});","import { orObject } from '../modules/util';\nimport objectClean from 'd2-utilizr/lib/objectClean';\n/** @module reducers/visualizations */\n\nexport const ADD_VISUALIZATION = 'ADD_VISUALIZATION';\nexport const SET_ACTIVE_VISUALIZATION_TYPE = 'SET_ACTIVE_VISUALIZATION_TYPE';\nexport const DEFAULT_STATE_VISUALIZATIONS = {};\n\nconst isEmpty = p => p === undefined || p === null;\n\nexport default ((state = DEFAULT_STATE_VISUALIZATIONS, action) => {\n  switch (action.type) {\n    case ADD_VISUALIZATION:\n      {\n        return { ...state,\n          [action.value.id]: objectClean({ ...orObject(state[action.value.id]),\n            ...action.value\n          }, isEmpty)\n        };\n      }\n\n    case SET_ACTIVE_VISUALIZATION_TYPE:\n      {\n        return { ...state,\n          [action.id]: objectClean({ ...orObject(state[action.id]),\n            activeType: action.activeType\n          }, isEmpty)\n        };\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetVisualizationsRoot = state => state.visualizations; // selectors level 1\n\nexport const sGetVisualization = (state, id) => {\n  return sGetVisualizationsRoot(state)[id];\n};","import { ADD_VISUALIZATION, SET_ACTIVE_VISUALIZATION_TYPE } from '../reducers/visualizations';\nexport const acAddVisualization = value => ({\n  type: ADD_VISUALIZATION,\n  value\n});\nexport const acSetActiveVisualizationType = (id, activeType) => {\n  const action = {\n    type: SET_ACTIVE_VISUALIZATION_TYPE,\n    id,\n    activeType\n  };\n  return action;\n};","import arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { getListItemFields, getFavoritesFields, getIdNameFields } from './metadata'; // Helper functions\n\nexport const onError = error => console.log('Error: ', error); // Dashboard item\n\nexport const getDashboardItemsFields = ({\n  withFavorite\n} = {}) => arrayClean(['id', 'type', 'shape', 'x', 'y', 'width~rename(w)', 'height~rename(h)', 'messages', 'text', 'appKey', `${getListItemFields().join(',')}`, withFavorite ? `${getFavoritesFields({\n  withDimensions: withFavorite.withDimensions\n}).join(',')}` : ``]); // Dashboard\n\nexport const getDashboardFields = ({\n  withItems,\n  withFavorite\n} = {}) => arrayClean([`${getIdNameFields().join(',')}`, 'description', 'displayDescription', 'favorite', `user[${getIdNameFields({\n  rename: true\n}).join(',')}]`, 'created', 'lastUpdated', 'access', withItems ? `dashboardItems[${getDashboardItemsFields({\n  withFavorite\n}).join(',')}]` : ``]);","import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { onError, getDashboardFields } from './index'; // Get \"all\" dashboards on startup\n\nexport const apiFetchDashboards = () => getInstance().then(d2 => d2.models.dashboard.list({\n  fields: [getDashboardFields().join(','), 'dashboardItems[id]'].join(','),\n  paging: 'false'\n})).catch(onError); // Get more info about selected dashboard\n\nexport const apiFetchDashboard = id => getInstance().then(d2 => d2.models.dashboard.get(id, {\n  fields: arrayClean(getDashboardFields({\n    withItems: true,\n    withFavorite: {\n      withDimensions: false\n    }\n  })).join(',')\n})).catch(onError); // Star dashboard\n\nexport const apiStarDashboard = (id, isStarred) => {\n  const url = `dashboards/${id}/favorite`;\n  getInstance().then(d2 => {\n    if (isStarred) {\n      d2.Api.getApi().post(url);\n    } else {\n      d2.Api.getApi().delete(url);\n    }\n  });\n};\nexport const apiDeleteDashboard = id => {\n  return getInstance().then(d2 => {\n    return d2.models.dashboards.get(id).then(dashboard => dashboard.delete());\n  }).catch(onError);\n};","import React from 'react';\nimport { connect } from 'react-redux';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport PropTypes from 'prop-types';\nimport { sGetSnackbar } from '../../reducers/snackbar';\nimport { acCloseSnackbar } from '../../actions/snackbar';\nconst LOADING_DASHBOARD = 'LOADING_DASHBOARD';\nexport const loadingDashboardMsg = {\n  name: '',\n  type: LOADING_DASHBOARD\n};\n\nconst SnackbarMessageContent = ({\n  message\n}) => {\n  if (typeof message === 'object') {\n    //future message types:  switch(message.type)\n    return <span>\n                Loading <span style={{\n        fontWeight: 800\n      }}>{message.name}</span>{' '}\n                dashboard\n            </span>;\n  }\n\n  return message;\n};\n\nexport const SnackbarMessage = props => {\n  return <Snackbar style={{\n    zIndex: 10001\n  }} open={props.snackbarOpen} message={<SnackbarMessageContent message={props.snackbarMessage} />} autoHideDuration={props.snackbarDuration} onClose={props.onCloseSnackbar} />;\n};\n\nconst mapStateToProps = state => {\n  const {\n    message,\n    duration,\n    open\n  } = sGetSnackbar(state);\n  return {\n    snackbarOpen: open,\n    snackbarMessage: message,\n    snackbarDuration: duration\n  };\n};\n\nSnackbarMessage.propTypes = {\n  snackbarDuration: PropTypes.string,\n  snackbarMessage: PropTypes.object,\n  snackbarOpen: PropTypes.bool,\n  onCloseSnackbar: PropTypes.func\n};\nexport default connect(mapStateToProps, {\n  onCloseSnackbar: acCloseSnackbar\n})(SnackbarMessage);","import { getCustomDashboards, sGetDashboardById } from '../reducers/dashboards';\nimport { sGetIsEditing } from '../reducers/editDashboard';\nimport { sGetEditItemFiltersRoot } from '../reducers/editItemFilters';\nimport { SET_SELECTED_ID, SET_SELECTED_ISLOADING, SET_SELECTED_SHOWDESCRIPTION, sGetSelectedIsLoading, sGetSelectedId } from '../reducers/selected';\nimport { sGetUserUsername } from '../reducers/user';\nimport { acSetDashboardItems, acAppendDashboards } from './dashboards';\nimport { acClearEditItemFilters } from './editItemFilters';\nimport { acClearItemFilters, acSetItemFilters } from './itemFilters';\nimport { tGetMessages } from '../components/Item/MessagesItem/actions';\nimport { acReceivedSnackbarMessage, acCloseSnackbar } from './snackbar';\nimport { acAddVisualization } from './visualizations';\nimport { apiFetchDashboard } from '../api/dashboards';\nimport { storePreferredDashboardId } from '../api/localStorage';\nimport { withShape } from '../components/ItemGrid/gridUtil';\nimport { loadingDashboardMsg } from '../components/SnackbarMessage/SnackbarMessage';\nimport { extractFavorite } from '../components/Item/VisualizationItem/plugin';\nimport { REPORT_TABLE, CHART, MAP, EVENT_REPORT, EVENT_CHART, MESSAGES } from '../modules/itemTypes';\nimport { orObject } from '../modules/util'; // actions\n\nexport const acSetSelectedId = value => ({\n  type: SET_SELECTED_ID,\n  value\n});\nexport const acSetSelectedIsLoading = value => ({\n  type: SET_SELECTED_ISLOADING,\n  value\n});\nexport const acSetSelectedShowDescription = value => ({\n  type: SET_SELECTED_SHOWDESCRIPTION,\n  value\n});\nexport const tLoadDashboard = id => async dispatch => {\n  try {\n    const dash = await apiFetchDashboard(id);\n    dispatch(acAppendDashboards(dash));\n    return Promise.resolve(dash);\n  } catch (err) {\n    console.log('Error: ', err);\n    return err;\n  }\n}; // thunks\n\nexport const tSetSelectedDashboardById = id => async (dispatch, getState) => {\n  dispatch(acSetSelectedIsLoading(true));\n  const snackbarTimeout = setTimeout(() => {\n    const dashboardName = orObject(sGetDashboardById(getState(), id)).displayName;\n\n    if (sGetSelectedIsLoading(getState()) && dashboardName) {\n      loadingDashboardMsg.name = dashboardName;\n      dispatch(acReceivedSnackbarMessage({\n        message: loadingDashboardMsg,\n        open: true\n      }));\n    }\n  }, 500);\n\n  const onSuccess = selected => {\n    const customDashboard = getCustomDashboards(selected)[0];\n    dispatch(acSetDashboardItems(withShape(customDashboard.dashboardItems)));\n    storePreferredDashboardId(sGetUserUsername(getState()), id); // add visualizations to store\n\n    customDashboard.dashboardItems.forEach(item => {\n      switch (item.type) {\n        case REPORT_TABLE:\n        case CHART:\n        case MAP:\n        case EVENT_REPORT:\n        case EVENT_CHART:\n          dispatch(acAddVisualization(extractFavorite(item)));\n          break;\n\n        case MESSAGES:\n          dispatch(tGetMessages(id));\n          break;\n\n        default:\n          break;\n      }\n    });\n    const state = getState();\n\n    if (id === sGetSelectedId(state)) {\n      if (sGetIsEditing(state)) {\n        // disable filters when switching to edit mode\n        dispatch(acClearItemFilters());\n      } else {\n        // enable filters when switching to view mode\n        dispatch(acSetItemFilters(sGetEditItemFiltersRoot(state)));\n      }\n    } else {\n      // clear filters when switching dashboard\n      dispatch(acClearEditItemFilters());\n      dispatch(acClearItemFilters());\n    }\n\n    dispatch(acSetSelectedId(id));\n    dispatch(acSetSelectedIsLoading(false));\n    clearTimeout(snackbarTimeout);\n    dispatch(acCloseSnackbar());\n    return selected;\n  };\n\n  const onError = error => {\n    console.log('Error: ', error);\n    return error;\n  };\n\n  try {\n    const selected = await dispatch(tLoadDashboard(id));\n    return onSuccess(selected);\n  } catch (err) {\n    return onError(err);\n  }\n};","export const getPreferredDashboardId = username => localStorage.getItem(`dhis2.dashboard.current.${username}`) || undefined;\nexport const storePreferredDashboardId = (username, dashboardId) => {\n  localStorage.setItem(`dhis2.dashboard.current.${username}`, dashboardId);\n};","import { getInstance } from 'd2';\n\nconst onError = error => console.log('Error: ', error);\n\nconst saveDashboard = (dashboard, data) => {\n  const {\n    name,\n    description,\n    dashboardItems\n  } = data;\n  dashboard.name = name;\n  dashboard.description = description;\n  dashboard.dashboardItems = dashboardItems.map(item => Object.assign({}, item, {\n    width: item.w,\n    height: item.h\n  }));\n  return dashboard.save().then(msg => msg.response.uid);\n};\n\nexport const updateDashboard = data => {\n  return getInstance().then(d2 => {\n    return d2.models.dashboards.get(data.id).then(dashboard => saveDashboard(dashboard, data));\n  }).catch(onError);\n};\nexport const postDashboard = data => {\n  return getInstance().then(d2 => {\n    const dashboard = d2.models.dashboards.create();\n    return saveDashboard(dashboard, data);\n  });\n};","import { generateUid } from 'd2/uid';\nimport { RECEIVED_EDIT_DASHBOARD, START_NEW_DASHBOARD, RECEIVED_NOT_EDITING, RECEIVED_TITLE, RECEIVED_DESCRIPTION, RECEIVED_DASHBOARD_LAYOUT, ADD_DASHBOARD_ITEM, UPDATE_DASHBOARD_ITEM, REMOVE_DASHBOARD_ITEM } from '../reducers/editDashboard';\nimport { sGetEditDashboardRoot } from '../reducers/editDashboard';\nimport { updateDashboard, postDashboard } from '../api/editDashboard';\nimport { tSetSelectedDashboardById } from '../actions/selected';\nimport { NEW_ITEM_SHAPE, getGridItemProperties } from '../components/ItemGrid/gridUtil';\nimport { itemTypeMap } from '../modules/itemTypes';\nimport { convertUiItemsToBackend } from '../modules/uiBackendItemConverter';\n\nconst onError = error => {\n  console.log('Error (Saving Dashboard): ', error);\n  return error;\n}; // actions\n\n\nexport const acSetEditDashboard = (dashboard, items) => {\n  const val = { ...dashboard,\n    dashboardItems: items\n  };\n  return {\n    type: RECEIVED_EDIT_DASHBOARD,\n    value: val\n  };\n};\nexport const acSetEditNewDashboard = () => ({\n  type: START_NEW_DASHBOARD\n});\nexport const acClearEditDashboard = () => ({\n  type: RECEIVED_NOT_EDITING\n});\nexport const acSetDashboardTitle = value => ({\n  type: RECEIVED_TITLE,\n  value\n});\nexport const acSetDashboardDescription = value => ({\n  type: RECEIVED_DESCRIPTION,\n  value\n});\nexport const acUpdateDashboardLayout = value => ({\n  type: RECEIVED_DASHBOARD_LAYOUT,\n  value\n});\nexport const acAddDashboardItem = item => {\n  const type = item.type;\n  delete item.type;\n  const itemPropName = itemTypeMap[type].propName;\n  const id = generateUid();\n  const gridItemProperties = getGridItemProperties(id);\n  return {\n    type: ADD_DASHBOARD_ITEM,\n    value: {\n      id,\n      type,\n      [itemPropName]: item.content,\n      ...NEW_ITEM_SHAPE,\n      ...gridItemProperties\n    }\n  };\n};\nexport const acUpdateDashboardItem = item => ({\n  type: UPDATE_DASHBOARD_ITEM,\n  value: item\n});\nexport const acRemoveDashboardItem = value => ({\n  type: REMOVE_DASHBOARD_ITEM,\n  value\n}); // thunks\n\nexport const tSaveDashboard = () => async (dispatch, getState) => {\n  const dashboard = sGetEditDashboardRoot(getState());\n  const dashboardToSave = { ...dashboard,\n    dashboardItems: convertUiItemsToBackend(dashboard.dashboardItems)\n  };\n\n  try {\n    const dashboardId = dashboardToSave.id ? await updateDashboard(dashboardToSave) : await postDashboard(dashboardToSave);\n    dispatch(acClearEditDashboard());\n    await dispatch(tSetSelectedDashboardById(dashboardId));\n    return Promise.resolve(dashboardId);\n  } catch (error) {\n    onError(error);\n  }\n};","import { SET_DASHBOARDS, ADD_DASHBOARDS, SET_DASHBOARD_STARRED, SET_DASHBOARD_DISPLAY_NAME, SET_DASHBOARD_ITEMS } from '../reducers/dashboards';\nimport { getCustomDashboards, sGetDashboardById, sGetDashboardsSortedByStarred } from '../reducers/dashboards';\nimport { sGetUserUsername } from '../reducers/user';\nimport { tSetSelectedDashboardById, acSetSelectedId } from './selected';\nimport { acClearEditDashboard } from './editDashboard';\nimport { apiFetchDashboards, apiStarDashboard, apiDeleteDashboard } from '../api/dashboards';\nimport { getPreferredDashboardId } from '../api/localStorage';\nimport { arrayToIdMap } from '../modules/util'; // actions\n\nexport const acSetDashboards = dashboards => ({\n  type: SET_DASHBOARDS,\n  value: arrayToIdMap(getCustomDashboards(dashboards))\n});\nexport const acAppendDashboards = dashboards => ({\n  type: ADD_DASHBOARDS,\n  value: arrayToIdMap(getCustomDashboards(dashboards))\n});\nexport const acSetDashboardStarred = (dashboardId, isStarred) => ({\n  type: SET_DASHBOARD_STARRED,\n  dashboardId: dashboardId,\n  value: isStarred\n});\nexport const acSetDashboardDisplayName = (dashboardId, value) => ({\n  type: SET_DASHBOARD_DISPLAY_NAME,\n  dashboardId,\n  value\n});\nexport const acSetDashboardItems = value => ({\n  type: SET_DASHBOARD_ITEMS,\n  value\n}); // thunks\n\nexport const tFetchDashboards = () => async dispatch => {\n  const collection = await apiFetchDashboards();\n  dispatch(acSetDashboards(collection.toArray()));\n};\nexport const tSelectDashboard = id => async (dispatch, getState) => {\n  const onError = error => {\n    console.log('Error (apiFetchDashboards): ', error);\n    return error;\n  };\n\n  try {\n    const state = getState();\n    let dashboardToSelect = null;\n\n    if (id) {\n      dashboardToSelect = sGetDashboardById(state, id) || null;\n    } else {\n      const preferredId = getPreferredDashboardId(sGetUserUsername(state));\n      const dash = sGetDashboardById(state, preferredId);\n      dashboardToSelect = preferredId && dash ? dash : sGetDashboardsSortedByStarred(state)[0];\n    }\n\n    if (dashboardToSelect) {\n      dispatch(tSetSelectedDashboardById(dashboardToSelect.id));\n    } else {\n      dispatch(acSetSelectedId());\n    }\n  } catch (err) {\n    return onError(err);\n  }\n};\nexport const tStarDashboard = (id, isStarred) => async dispatch => {\n  const onSuccess = id => {\n    dispatch(acSetDashboardStarred(id, isStarred));\n    return id;\n  };\n\n  const onError = error => {\n    console.log('Error (apiStarDashboard): ', error);\n    return error;\n  };\n\n  try {\n    await apiStarDashboard(id, isStarred);\n    return onSuccess(id);\n  } catch (err) {\n    return onError(err);\n  }\n};\nexport const tDeleteDashboard = id => async dispatch => {\n  try {\n    await apiDeleteDashboard(id);\n    dispatch(acClearEditDashboard());\n    dispatch(acSetSelectedId());\n    dispatch(acSetDashboardItems([]));\n    await dispatch(tFetchDashboards());\n    return Promise.resolve();\n  } catch (err) {\n    console.log('Error (deleteDashboard): ', err);\n    return err;\n  }\n};","/** @module reducers/controlBar */\nimport { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\nexport const SET_CONTROLBAR_USER_ROWS = 'SET_CONTROLBAR_USER_ROWS';\nexport const DEFAULT_STATE_CONTROLBAR_ROWS = 1;\n\nconst userRows = (state = DEFAULT_STATE_CONTROLBAR_ROWS, action) => {\n  switch (action.type) {\n    case SET_CONTROLBAR_USER_ROWS:\n      return validateReducer(action.value, DEFAULT_STATE_CONTROLBAR_ROWS);\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  userRows\n});\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\n\nexport const sGetControlBarRoot = state => state.controlBar; // Selector dependency level 2\n\nexport const sGetControlBarUserRows = state => sGetControlBarRoot(state).userRows;","import { getInstance } from 'd2';\nimport { DEFAULT_STATE_CONTROLBAR_ROWS } from '../reducers/controlBar';\nconst NAMESPACE = 'dashboard';\nconst KEY = 'controlBarRows';\n\nconst hasNamespace = async d2 => await d2.currentUser.dataStore.has(NAMESPACE);\n\nconst getNamespace = async (d2, hasNamespace) => hasNamespace ? await d2.currentUser.dataStore.get(NAMESPACE) : await d2.currentUser.dataStore.create(NAMESPACE);\n\nexport const apiGetControlBarRows = async () => {\n  const d2 = await getInstance();\n  const namespace = await getNamespace(d2, await hasNamespace(d2));\n  const hasKey = namespace.keys && namespace.keys.find(key => key === KEY);\n\n  if (hasKey) {\n    return await namespace.get(KEY);\n  } else {\n    await apiPostControlBarRows(DEFAULT_STATE_CONTROLBAR_ROWS, namespace);\n    console.log('(These errors to /userDataStore/dashboard can be ignored)');\n    return DEFAULT_STATE_CONTROLBAR_ROWS;\n  }\n};\nexport const apiPostControlBarRows = async (rows, namespace) => {\n  const d2 = await getInstance();\n  const ns = namespace || (await getNamespace(d2, hasNamespace));\n  ns.set(KEY, rows);\n};","import { SET_CONTROLBAR_USER_ROWS } from '../reducers/controlBar';\nimport { apiGetControlBarRows } from '../api/controlBar'; // actions\n\nexport const acSetControlBarUserRows = rows => ({\n  type: SET_CONTROLBAR_USER_ROWS,\n  value: rows\n}); // thunks\n\nexport const tSetControlBarRows = () => async dispatch => {\n  const onSuccess = rows => {\n    dispatch(acSetControlBarUserRows(rows));\n  };\n\n  const onError = error => {\n    console.log('Error (apiGetControlBarRows): ', error);\n    return error;\n  };\n\n  try {\n    const controlBarRows = await apiGetControlBarRows();\n    return onSuccess(controlBarRows);\n  } catch (err) {\n    return onError(err);\n  }\n};","import { getDimensionById, DIMENSION_ID_PERIOD, DIMENSION_ID_ORGUNIT } from '@dhis2/analytics';\nexport const SET_DIMENSIONS = 'SET_DIMENSIONS';\nexport const DEFAULT_DIMENSIONS = [getDimensionById(DIMENSION_ID_PERIOD), getDimensionById(DIMENSION_ID_ORGUNIT)];\nexport default ((state = DEFAULT_DIMENSIONS, action) => {\n  switch (action.type) {\n    case SET_DIMENSIONS:\n      {\n        return [...DEFAULT_DIMENSIONS, ...action.value];\n      }\n\n    default:\n      return state;\n  }\n});\nexport const sGetDimensions = state => state.dimensions;","export const SET_SETTINGS = 'SET_SETTINGS';\nexport const ADD_SETTINGS = 'ADD_SETTINGS';\nexport const DEFAULT_SETTINGS = {\n  keyDateFormat: 'yyyy-MM-dd',\n  keyAnalysisRelativePeriod: 'LAST_12_MONTHS',\n  keyAnalysisDigitGroupSeparator: 'SPACE',\n  displayNameProperty: 'displayName',\n  uiLocale: 'en',\n  rootOrganisationUnit: {}\n};\nexport default ((state = DEFAULT_SETTINGS, action) => {\n  switch (action.type) {\n    case SET_SETTINGS:\n      {\n        return Object.assign({}, action.value);\n      }\n\n    case ADD_SETTINGS:\n      {\n        return { ...state,\n          ...action.value\n        };\n      }\n\n    default:\n      return state;\n  }\n}); // Selectors\n\nexport const sGetSettings = state => state.settings;\nexport const sGetSettingsDisplayNameProperty = state => sGetSettings(state).displayNameProperty;\nexport const sGetRootOrgUnit = state => sGetSettings(state).rootOrganisationUnit;\nexport const sGetRelativePeriod = state => sGetSettings(state).keyAnalysisRelativePeriod;\nexport const sGetUiLocale = state => sGetSettings(state).uiLocale;","import { SET_DIMENSIONS } from '../reducers/dimensions';\nimport { apiFetchDimensions } from '@dhis2/analytics';\nimport { sGetSettingsDisplayNameProperty } from '../reducers/settings';\nexport const acSetDimensions = dimensions => ({\n  type: SET_DIMENSIONS,\n  value: dimensions\n});\nexport const tSetDimensions = d2 => async (dispatch, getState) => {\n  const onSuccess = dimensions => {\n    dispatch(acSetDimensions(dimensions));\n  };\n\n  const onError = error => {\n    console.log('Error (apiFetchDimensions): ', error);\n    return error;\n  };\n\n  try {\n    const displayNameProp = sGetSettingsDisplayNameProperty(getState());\n    const dimensions = await apiFetchDimensions(d2, displayNameProp); // filter out CATEGORY that are not of type ATTRIBUTE\n\n    const filteredDimensions = dimensions.filter(dim => dim.dimensionType !== 'CATEGORY' || dim.dimensionType === 'CATEGORY' && dim.dataDimensionType === 'ATTRIBUTE');\n    return onSuccess(filteredDimensions);\n  } catch (err) {\n    return onError(err);\n  }\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { colors } from '@dhis2/ui';\nimport classes from './styles/ControlBar.module.css';\nconst DRAG_HANDLE_HEIGHT = 7;\n\nclass ControlBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dragging: false\n    };\n  }\n\n  onStartDrag = () => {\n    this.setState({\n      dragging: true\n    });\n    window.addEventListener('mousemove', this.onDrag);\n    window.addEventListener('mouseup', this.onEndDrag);\n  };\n  onDrag = event => {\n    event.preventDefault();\n    event.stopPropagation();\n    const newHeight = event.clientY;\n\n    if (this.props.onChangeHeight && newHeight !== this.props.height && newHeight > 0) {\n      requestAnimationFrame(() => {\n        this.props.onChangeHeight(newHeight);\n      });\n    }\n  };\n  onEndDrag = () => {\n    this.setState({\n      dragging: false\n    });\n    window.removeEventListener('mousemove', this.onDrag);\n    window.removeEventListener('mouseup', this.onEndDrag);\n\n    if (this.props.onEndDrag) {\n      this.props.onEndDrag();\n    }\n  };\n\n  renderDragHandle() {\n    return typeof this.props.onChangeHeight === 'function' ? <div className={classes.draghandle} style={{\n      height: DRAG_HANDLE_HEIGHT\n    }} onMouseDown={this.onStartDrag} /> : null;\n  }\n\n  render() {\n    const height = Math.max(this.props.height, 0) + DRAG_HANDLE_HEIGHT;\n    const rootStyle = Object.assign({\n      height,\n      backgroundColor: this.props.editMode ? colors.yellow050 : colors.white,\n      paddingBottom: DRAG_HANDLE_HEIGHT\n    }, // Disable animations while dragging\n    this.state.dragging ? {\n      transition: 'none'\n    } : {});\n    return <div style={rootStyle} className={classes.root}>\n                <div className={classes.content}>{this.props.children}</div>\n                {this.renderDragHandle()}\n            </div>;\n  }\n\n}\n\nControlBar.propTypes = {\n  /**\n   * The height of the control bar in number of lines. Must be a positive integer.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * If true, the background color of the control bar changes to indicate that edit mode is active.\n   */\n  editMode: PropTypes.bool.isRequired,\n\n  /**\n   * Callback function that is called when the control bar is resized.\n   * The callback receives one argument: The new height in pixels.\n   *\n   * If no callback is specified the control bar will not have a drag handle.\n   */\n  height: PropTypes.number.isRequired,\n\n  /**\n   * Callback function that is called when the control bar is dropped after being dragged.\n   * The callback receives one argument: The new height in pixels.\n   *\n   * Ignored if no \"onChangeHeight\" function is provided.\n   */\n  onChangeHeight: PropTypes.func,\n\n  /**\n   * The contents of the control bar.\n   */\n  onEndDrag: PropTypes.func\n};\nControlBar.defaultProps = {\n  onChangeHeight: null,\n  onEndDrag: null\n};\nexport default ControlBar;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst StarIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>;\n\nStarIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default StarIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Chip } from '@dhis2/ui';\nimport { Link } from 'react-router-dom';\nimport debounce from 'lodash/debounce';\nimport StarIcon from '../../icons/Star';\nimport { apiPostDataStatistics } from '../../api/dataStatistics';\nimport classes from './styles/DashboardItemChip.module.css';\nexport const DashboardItemChip = ({\n  starred,\n  selected,\n  label,\n  dashboardId\n}) => {\n  const chipProps = {\n    selected\n  };\n\n  if (starred) {\n    const selectedState = selected ? classes.selected : classes.unselected;\n    chipProps.icon = <StarIcon className={`${classes.icon} ${selectedState}`} />;\n  }\n\n  return <Link className={classes.link} to={`/${dashboardId}`} onClick={debounce(() => apiPostDataStatistics('DASHBOARD_VIEW', dashboardId), 500)}>\n            <Chip {...chipProps}>{label}</Chip>\n        </Link>;\n};\nDashboardItemChip.propTypes = {\n  dashboardId: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  selected: PropTypes.bool.isRequired,\n  starred: PropTypes.bool.isRequired,\n  classes: PropTypes.object\n};\nexport default DashboardItemChip;","import { getInstance } from 'd2';\nexport const apiPostDataStatistics = async (eventType, id) => {\n  const d2 = await getInstance();\n  const url = `dataStatistics?eventType=${eventType}&favorite=${id}`;\n  d2.Api.getApi().post(url);\n};","import React from 'react';\nimport { colors } from '@dhis2/ui';\n\nconst AddCircleIcon = () => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" fill={colors.teal600} viewBox=\"0 0 24 24\">\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm4 11h-3v3c0 .55-.45 1-1 1s-1-.45-1-1v-3H8c-.55 0-1-.45-1-1s.45-1 1-1h3V8c0-.55.45-1 1-1s1 .45 1 1v3h3c.55 0 1 .45 1 1s-.45 1-1 1z\" />\n    </svg>;\n\nexport default AddCircleIcon;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst ClearIcon = ({\n  className\n}) => <svg className={className} fill={colors.grey800} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n        <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>;\n\nClearIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default ClearIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ClearIcon from '../../icons/Clear';\nimport classes from './styles/ClearButton.module.css';\nexport const ClearButton = ({\n  onClear\n}) => <button className={classes.button} onClick={onClear}>\n        <span>\n            <ClearIcon className={classes.icon} color=\"action\" />\n        </span>\n    </button>;\nClearButton.propTypes = {\n  onClear: PropTypes.func.isRequired\n};\nexport default ClearButton;","import { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\nexport const SET_DASHBOARDS_FILTER_NAME = 'SET_DASHBOARDS_FILTER_NAME';\nexport const SET_DASHBOARDS_FILTER_OWNER = 'SET_DASHBOARDS_FILTER_OWNER';\nexport const SET_DASHBOARDS_FILTER_ORDER = 'SET_DASHBOARDS_FILTER_ORDER';\nexport const ownerData = [{\n  id: 'ALL',\n  value: 'All users'\n}, {\n  id: 'ME',\n  value: 'Created by me'\n}, {\n  id: 'OTHERS',\n  value: 'Created by others'\n}];\nexport const orderData = [{\n  id: 'NAME:ASC',\n  value: 'Name (asc)'\n}, {\n  id: 'NAME:ASC',\n  value: 'Name (desc)'\n}, {\n  id: 'ITEMS:ASC',\n  value: 'Number of items (asc)'\n}, {\n  id: 'ITEMS:ASC',\n  value: 'Number of items (desc)'\n}, {\n  id: 'CREATED:ASC',\n  value: 'Created date (asc)'\n}, {\n  id: 'CREATED:ASC',\n  value: 'Created date (desc)'\n}];\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_NAME = '';\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_OWNER = ownerData[0].id;\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_ORDER = orderData[0].id;\n\nconst name = (state = DEFAULT_STATE_DASHBOARDS_FILTER_NAME, action) => {\n  switch (action.type) {\n    case SET_DASHBOARDS_FILTER_NAME:\n      return validateReducer(action.value, DEFAULT_STATE_DASHBOARDS_FILTER_NAME);\n\n    default:\n      return state;\n  }\n};\n\nconst owner = (state = DEFAULT_STATE_DASHBOARDS_FILTER_OWNER, action) => {\n  switch (action.type) {\n    case SET_DASHBOARDS_FILTER_OWNER:\n      return validateReducer(action.value, DEFAULT_STATE_DASHBOARDS_FILTER_NAME);\n\n    default:\n      return state;\n  }\n};\n\nconst order = (state = DEFAULT_STATE_DASHBOARDS_FILTER_ORDER, action) => {\n  switch (action.type) {\n    case SET_DASHBOARDS_FILTER_ORDER:\n      return validateReducer(action.value, DEFAULT_STATE_DASHBOARDS_FILTER_ORDER);\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  name,\n  owner,\n  order\n}); // selectors\n\nexport const sGetDashboardsFilterRoot = state => state.dashboardsFilter; // selector dependency level 2\n\nexport const sGetFilterName = state => sGetDashboardsFilterRoot(state).name;\nexport const sGetFilterOwner = state => sGetDashboardsFilterRoot(state).owner;\nexport const sGetFilterOrder = state => sGetDashboardsFilterRoot(state).order;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { withStyles } from '@material-ui/core/styles';\nimport InputField from '@material-ui/core/Input';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { colors } from '@dhis2/ui';\nimport ClearButton from './ClearButton';\nimport { DEFAULT_STATE_DASHBOARDS_FILTER_NAME } from '../../reducers/dashboardsFilter';\nconst styles = {\n  filterField: {\n    fontSize: '14px',\n    width: '200px',\n    height: '30px',\n    top: '-4px'\n  },\n  searchIcon: {\n    color: colors.grey700,\n    width: '20px',\n    height: '20px'\n  }\n};\nexport const KEYCODE_ENTER = 13;\nexport const KEYCODE_ESCAPE = 27;\nexport class Filter extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: DEFAULT_STATE_DASHBOARDS_FILTER_NAME\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      value: nextProps.name\n    });\n  }\n\n  setFilterValue = event => {\n    event.preventDefault();\n    this.props.onChangeName(event.target.value);\n  };\n  handleKeyUp = event => {\n    switch (event.keyCode) {\n      case KEYCODE_ENTER:\n        this.props.onKeypressEnter();\n        break;\n\n      case KEYCODE_ESCAPE:\n        this.props.onChangeName();\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  render() {\n    const {\n      classes,\n      name,\n      onChangeName\n    } = this.props;\n    const startAdornment = <InputAdornment position=\"start\">\n                <SearchIcon className={classes.searchIcon} />\n            </InputAdornment>;\n    const endAdornment = name !== '' && name !== null ? <InputAdornment position=\"end\">\n                    <ClearButton onClear={() => onChangeName()} />\n                </InputAdornment> : null;\n    return <InputField className={classes.filterField} placeholder={i18n.t('Search for a dashboard')} startAdornment={startAdornment} endAdornment={endAdornment} value={this.state.value} onChange={this.setFilterValue} onKeyUp={this.handleKeyUp} />;\n  }\n\n}\nFilter.propTypes = {\n  classes: PropTypes.object,\n  name: PropTypes.string,\n  onChangeName: PropTypes.func,\n  onKeypressEnter: PropTypes.func\n};\nFilter.defaultProps = {\n  name: '',\n  onChangeName: Function.prototype\n};\nexport default withStyles(styles)(Filter);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport classes from './styles/ShowMoreButton.module.css';\nexport const SHOWMORE_BAR_HEIGHT = 16;\nexport const ShowMoreButton = ({\n  onClick,\n  isMaxHeight,\n  disabled\n}) => {\n  return <div style={{\n    textAlign: 'center'\n  }}>\n            {disabled ? <div className={classes.disabled}>{i18n.t('Show more')}</div> : <div className={classes.showMore} onClick={onClick}>\n                    {isMaxHeight ? i18n.t('Show less') : i18n.t('Show more')}\n                </div>}\n        </div>;\n};\nShowMoreButton.propTypes = {\n  disabled: PropTypes.bool,\n  isMaxHeight: PropTypes.bool,\n  onClick: PropTypes.func\n};\nexport default ShowMoreButton;","import { SHOWMORE_BAR_HEIGHT } from './ShowMoreButton';\nexport const CONTROL_BAR_ROW_HEIGHT = 40;\nexport const FIRST_ROW_PADDING_HEIGHT = 10;\nexport const MIN_ROW_COUNT = 1;\nconst CONTROL_BAR_OUTER_HEIGHT_DIFF = FIRST_ROW_PADDING_HEIGHT + SHOWMORE_BAR_HEIGHT - 2; // 2 pixel \"adjustment\"\n\nexport const getRowsHeight = rows => {\n  return rows * CONTROL_BAR_ROW_HEIGHT;\n};\nexport const getNumRowsFromHeight = height => {\n  return Math.floor((height - CONTROL_BAR_OUTER_HEIGHT_DIFF) / CONTROL_BAR_ROW_HEIGHT);\n};\nexport const getControlBarHeight = rows => {\n  return getRowsHeight(rows) + CONTROL_BAR_OUTER_HEIGHT_DIFF;\n};","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport ControlBar from './ControlBar';\nimport arraySort from 'd2-utilizr/lib/arraySort';\nimport PropTypes from 'prop-types';\nimport Chip from './DashboardItemChip';\nimport AddCircleIcon from '../../icons/AddCircle';\nimport Filter from './Filter';\nimport ShowMoreButton from './ShowMoreButton';\nimport { FIRST_ROW_PADDING_HEIGHT, MIN_ROW_COUNT, getRowsHeight, getControlBarHeight, getNumRowsFromHeight } from './controlBarDimensions';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { sGetAllDashboards } from '../../reducers/dashboards';\nimport { sGetFilterName } from '../../reducers/dashboardsFilter';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { acSetControlBarUserRows } from '../../actions/controlBar';\nimport { acSetFilterName } from '../../actions/dashboardsFilter';\nimport { orObject, orArray } from '../../modules/util';\nimport { apiPostControlBarRows } from '../../api/controlBar';\nimport classes from './styles/DashboardsBar.module.css';\nexport const MAX_ROW_COUNT = 10;\nexport class DashboardsBar extends Component {\n  state = {\n    rows: MIN_ROW_COUNT\n  };\n  setInitialDashboardState = rows => {\n    this.setState({\n      rows,\n      isMaxHeight: rows === MAX_ROW_COUNT\n    });\n  };\n\n  componentDidMount() {\n    this.setInitialDashboardState(this.props.userRows);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setInitialDashboardState(nextProps.userRows);\n  }\n\n  onChangeHeight = newHeight => {\n    const adjustedHeight = newHeight - 52; // don't rush the transition to a bigger row count\n\n    const newRows = Math.max(MIN_ROW_COUNT, getNumRowsFromHeight(adjustedHeight));\n\n    if (newRows !== this.state.rows) {\n      const newRowCount = Math.min(newRows, MAX_ROW_COUNT);\n      this.props.onChangeHeight(newRowCount);\n    }\n  };\n  onEndDrag = () => {\n    return apiPostControlBarRows(this.state.rows);\n  };\n  onToggleMaxHeight = () => {\n    const rows = this.state.rows === MAX_ROW_COUNT ? this.props.userRows : MAX_ROW_COUNT;\n    this.setState({\n      rows,\n      isMaxHeight: !this.state.isMaxHeight\n    });\n  };\n  onSelectDashboard = () => {\n    this.props.history.push(`/${this.props.dashboards[0].id}`);\n  };\n\n  render() {\n    const {\n      dashboards,\n      name,\n      selectedId,\n      onChangeFilterName\n    } = this.props;\n    const rowCount = this.state.isMaxHeight ? MAX_ROW_COUNT : this.state.rows;\n    const controlBarHeight = getControlBarHeight(rowCount);\n    const contentWrapperStyle = {\n      padding: `${FIRST_ROW_PADDING_HEIGHT}px 6px 0 6px`,\n      overflowY: this.state.isMaxHeight ? 'auto' : 'hidden',\n      height: getRowsHeight(rowCount) + FIRST_ROW_PADDING_HEIGHT\n    };\n    return <ControlBar height={controlBarHeight} onChangeHeight={this.onChangeHeight} onEndDrag={this.onEndDrag} editMode={false}>\n                <div style={contentWrapperStyle}>\n                    <div className={classes.leftControls}>\n                        <Link style={{\n            display: 'inline-block',\n            textDecoration: 'none',\n            marginRight: 10,\n            position: 'relative',\n            top: '2px'\n          }} to={'/new'}>\n                            <AddCircleIcon />\n                        </Link>\n                        <Filter name={name} onChangeName={onChangeFilterName} onKeypressEnter={this.onSelectDashboard} />\n                    </div>\n                    {orArray(dashboards).map(dashboard => <Chip key={dashboard.id} label={dashboard.displayName} starred={dashboard.starred} dashboardId={dashboard.id} selected={dashboard.id === selectedId} />)}\n                </div>\n                <ShowMoreButton onClick={this.onToggleMaxHeight} isMaxHeight={this.state.isMaxHeight} disabled={this.props.userRows === MAX_ROW_COUNT} />\n            </ControlBar>;\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  dashboards: sGetAllDashboards(state),\n  name: sGetFilterName(state),\n  userRows: sGetControlBarUserRows(state),\n  selectedId: sGetSelectedId(state)\n});\n\nconst mapDispatchToProps = {\n  onChangeHeight: acSetControlBarUserRows,\n  onChangeFilterName: acSetFilterName\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n  const dashboards = Object.values(orObject(stateProps.dashboards));\n  const displayDashboards = arraySort(dashboards.filter(d => d.displayName.toLowerCase().includes(stateProps.name.toLowerCase())), 'ASC', 'displayName');\n  return { ...stateProps,\n    ...ownProps,\n    ...dispatchProps,\n    dashboards: [...displayDashboards.filter(d => d.starred), ...displayDashboards.filter(d => !d.starred)]\n  };\n};\n\nDashboardsBar.propTypes = {\n  dashboards: PropTypes.array,\n  history: PropTypes.object,\n  name: PropTypes.string,\n  selectedId: PropTypes.string,\n  userRows: PropTypes.number,\n  onChangeFilterName: PropTypes.func,\n  onChangeHeight: PropTypes.func\n};\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps, mergeProps)(DashboardsBar));","import { SET_DASHBOARDS_FILTER_NAME, SET_DASHBOARDS_FILTER_OWNER, SET_DASHBOARDS_FILTER_ORDER } from '../reducers/dashboardsFilter'; // actions\n\nexport const acSetFilterName = value => ({\n  type: SET_DASHBOARDS_FILTER_NAME,\n  value\n});\nexport const acSetFilterOwner = value => ({\n  type: SET_DASHBOARDS_FILTER_OWNER,\n  value\n});\nexport const acSetFilterOrder = value => ({\n  type: SET_DASHBOARDS_FILTER_ORDER,\n  value\n});","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { getControlBarHeight, MIN_ROW_COUNT } from '../ControlBar/controlBarDimensions';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\n\nconst DashboardVerticalOffset = props => {\n  const rows = props.editMode ? MIN_ROW_COUNT : props.userRows;\n  const marginTop = getControlBarHeight(rows);\n  return <div className=\"page-container-top-margin\" style={{\n    marginTop\n  }} />;\n};\n\nconst mapStateToProps = state => ({\n  userRows: sGetControlBarUserRows(state)\n});\n\nDashboardVerticalOffset.propTypes = {\n  editMode: PropTypes.bool,\n  userRows: PropTypes.number\n};\nexport default connect(mapStateToProps)(DashboardVerticalOffset);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { MenuItem, colors } from '@dhis2/ui';\n\nconst HeaderMenuItem = ({\n  title\n}) => <MenuItem dense key={title} disabled label={<span style={{\n  color: colors.grey800,\n  fontWeight: '600'\n}}>\n                {title}\n            </span>} />;\n\nHeaderMenuItem.propTypes = {\n  title: PropTypes.string.isRequired\n};\nexport default HeaderMenuItem;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst LaunchIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\" fill={colors.grey600} viewBox=\"0 0 24 24\">\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z\" />\n    </svg>;\n\nLaunchIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default LaunchIcon;","import React from 'react';\nimport { MenuItem, colors } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport { visTypeIcons } from '@dhis2/analytics';\nimport { getItemIcon, VISUALIZATION } from '../../modules/itemTypes';\nimport LaunchIcon from '../../icons/Launch';\nimport classes from './styles/ContentMenuItem.module.css';\n\nconst LaunchLink = ({\n  url\n}) => <a onClick={e => e.stopPropagation()} className={classes.launchLink} target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n        <LaunchIcon />\n    </a>;\n\nLaunchLink.propTypes = {\n  url: PropTypes.string\n};\n\nconst InsertButton = () => <button className={classes.buttonInsert}>{i18n.t('Insert')}</button>;\n\nconst ContentMenuItem = ({\n  type,\n  name,\n  onInsert,\n  url,\n  visType\n}) => {\n  const ItemIcon = getItemIcon(type);\n  const renderedItemIcon = type === VISUALIZATION ? visTypeIcons[visType] : <ItemIcon style={{\n    fill: colors.grey600\n  }} />;\n  return <MenuItem dense onClick={onInsert} label={<div className={classes.menuItem}>\n                    <div className={classes.label}>\n                        <span style={{\n        marginRight: '6px'\n      }}>\n                            {renderedItemIcon}\n                        </span>\n                        <span>{name}</span>\n                        {url ? <LaunchLink url={url} /> : null}\n                    </div>\n                    <InsertButton />\n                </div>} />;\n};\n\nContentMenuItem.propTypes = {\n  name: PropTypes.string,\n  type: PropTypes.string,\n  url: PropTypes.string,\n  visType: PropTypes.string,\n  onInsert: PropTypes.func\n};\nexport default ContentMenuItem;","import { sGetEditDashboardRoot } from '../../reducers/editDashboard';\nimport { itemTypeMap } from '../../modules/itemTypes';\nimport { acAddDashboardItem, acUpdateDashboardItem } from '../../actions/editDashboard';\nexport const tAddListItemContent = (type, content) => (dispatch, getState) => {\n  const state = getState();\n  const listItemType = itemTypeMap[type].propName;\n  const dashboardItems = sGetEditDashboardRoot(state).dashboardItems;\n  const dashboardItemIndex = dashboardItems.findIndex(item => item.type === type);\n  let dashboardItem; // Reports/Resources/Users dashboard item type already present in dashboard\n\n  if (dashboardItemIndex > -1) {\n    dashboardItem = dashboardItems[dashboardItemIndex];\n    dashboardItem[listItemType].push(content);\n    dispatch(acUpdateDashboardItem(dashboardItem));\n  } else {\n    dashboardItem = {\n      type: type,\n      content: [content]\n    };\n    dispatch(acAddDashboardItem(dashboardItem));\n  }\n};","import i18n from '@dhis2/d2-i18n';\nimport { VISUALIZATION, MAP, EVENT_CHART, EVENT_REPORT, USERS, REPORTS, RESOURCES, APP, MESSAGES, TEXT, SPACER } from '../../modules/itemTypes';\nexport const singleItems = [{\n  id: 'additional',\n  header: i18n.t('Additional items'),\n  items: [{\n    type: TEXT,\n    name: i18n.t('Text box'),\n    content: ''\n  }, {\n    type: MESSAGES,\n    name: i18n.t('Messages'),\n    content: 'true'\n  }, {\n    type: SPACER,\n    name: i18n.t('Spacer'),\n    content: ''\n  }]\n}]; // categorizedItems are grouped in the item selector menu\n\nexport const categorizedItems = [VISUALIZATION, MAP, EVENT_REPORT, EVENT_CHART, USERS, REPORTS, RESOURCES, APP]; // listItemTypes are included in a single dashboard item\n\nexport const listItemTypes = [REPORTS, RESOURCES, USERS];","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { MenuItem, Divider } from '@dhis2/ui';\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\nimport { tAddListItemContent } from './actions';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\nimport { getItemUrl, APP, VISUALIZATION } from '../../modules/itemTypes';\nimport { categorizedItems, listItemTypes } from './selectableItems';\nimport classes from './styles/CategorizedMenuGroup.module.css';\n\nclass CategorizedMenuGroup extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      seeMore: false\n    };\n  }\n\n  addItem = item => () => {\n    const {\n      type,\n      acAddDashboardItem,\n      tAddListItemContent\n    } = this.props;\n\n    if (type === APP) {\n      acAddDashboardItem({\n        type,\n        content: item.key\n      });\n    } else {\n      const newItem = {\n        id: item.id,\n        name: item.displayName || item.name\n      };\n\n      if (listItemTypes.includes(type)) {\n        tAddListItemContent(type, newItem);\n      } else {\n        acAddDashboardItem({\n          type,\n          content: newItem\n        });\n      }\n    }\n  };\n  toggleSeeMore = () => {\n    this.setState({\n      seeMore: !this.state.seeMore\n    });\n    this.props.onChangeItemsLimit(this.props.type);\n  };\n\n  render() {\n    const {\n      title,\n      type,\n      items,\n      hasMore\n    } = this.props;\n    return <>\n                <HeaderMenuItem title={title} />\n                {items.map(item => {\n        const itemUrl = getItemUrl(type, item, this.context.d2);\n        return <ContentMenuItem key={item.id || item.key} type={type} visType={type === VISUALIZATION ? item.type : type} name={item.displayName || item.name} onInsert={this.addItem(item)} url={itemUrl} />;\n      })}\n                {hasMore ? <MenuItem dense key={`showmore${title}`} onClick={this.toggleSeeMore} label={<button className={classes.showMoreButton}>\n                                {this.state.seeMore ? i18n.t('Show fewer') : i18n.t('Show more')}\n                            </button>} /> : null}\n                <Divider margin=\"8px 0px\" />\n            </>;\n  }\n\n}\n\nCategorizedMenuGroup.propTypes = {\n  items: PropTypes.array.isRequired,\n  title: PropTypes.string.isRequired,\n  type: PropTypes.oneOf(categorizedItems).isRequired,\n  onChangeItemsLimit: PropTypes.func.isRequired,\n  acAddDashboardItem: PropTypes.func,\n  hasMore: PropTypes.bool,\n  tAddListItemContent: PropTypes.func\n};\nCategorizedMenuGroup.contextTypes = {\n  d2: PropTypes.object.isRequired\n};\nexport default connect(null, {\n  acAddDashboardItem,\n  tAddListItemContent\n})(CategorizedMenuGroup);","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\nexport const SinglesMenuGroup = ({\n  acAddDashboardItem,\n  category\n}) => {\n  const addToDashboard = ({\n    type,\n    content\n  }) => () => {\n    acAddDashboardItem({\n      type,\n      content\n    });\n  };\n\n  return <>\n            <HeaderMenuItem title={category.header} />\n            {category.items.map(item => <ContentMenuItem key={item.type} type={item.type} name={item.name} onInsert={addToDashboard(item)} />)}\n        </>;\n};\nSinglesMenuGroup.propTypes = {\n  acAddDashboardItem: PropTypes.func,\n  category: PropTypes.object\n};\nexport default connect(null, {\n  acAddDashboardItem\n})(SinglesMenuGroup);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport Popover from '@material-ui/core/Popover';\nimport { InputField, Menu } from '@dhis2/ui';\nimport CategorizedMenuGroup from './CategorizedMenuGroup';\nimport SinglesMenuGroup from './SinglesMenuGroup';\nimport { singleItems, categorizedItems } from './selectableItems';\nimport { itemTypeMap, getDefaultItemCount } from '../../modules/itemTypes';\nimport './styles/ItemSelector.css';\n\nconst ItemSearchField = props => <InputField name=\"Dashboard item search\" label={i18n.t('Search for items to add to this dashboard')} type=\"text\" onChange={props.onChange} onFocus={props.onFocus} value={props.value} />;\n\nclass ItemSelector extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      anchorEl: null,\n      open: false,\n      maxOptions: new Set(),\n      items: undefined,\n      filter: ''\n    };\n  }\n\n  closeList = () => {\n    this.setState({\n      open: false,\n      filter: ''\n    });\n  };\n  openList = (_, event) => {\n    this.fetchItems();\n    this.setState({\n      anchorEl: event.currentTarget,\n      open: true\n    });\n  };\n  setFilter = (_, event) => {\n    this.setState({\n      filter: event.target.value\n    }, this.fetchItems);\n  };\n  getCategorizedMenuGroups = () => categorizedItems.filter(type => {\n    const itemType = itemTypeMap[type];\n    return this.state.items && this.state.items[itemType.endPointName];\n  }).map(type => {\n    const itemType = itemTypeMap[type];\n    const itemCount = getDefaultItemCount(type);\n    const allItems = this.state.items[itemType.endPointName];\n    const hasMore = allItems.length > itemCount;\n    const items = this.state.maxOptions.has(itemType.id) ? allItems : allItems.slice(0, itemCount);\n    return <CategorizedMenuGroup key={type} type={type} title={itemType.pluralTitle} items={items} onChangeItemsLimit={this.fetchItems} hasMore={hasMore} />;\n  });\n  getSinglesMenuGroups = () => singleItems.map(category => <SinglesMenuGroup key={category.id} category={category} />);\n  getMenuGroups = () => this.getCategorizedMenuGroups().concat(this.getSinglesMenuGroups());\n  fetchItems = async type => {\n    if (type) {\n      const maxOptions = this.state.maxOptions;\n\n      if (maxOptions.has(type)) {\n        maxOptions.delete(type);\n      } else {\n        maxOptions.add(type);\n      }\n\n      this.setState({\n        maxOptions\n      });\n    } else {\n      this.setState({\n        maxOptions: new Set()\n      });\n    }\n\n    let queryString = '?count=11';\n\n    if ([...this.state.maxOptions.values()].length) {\n      queryString += '&max=' + [...this.state.maxOptions.values()].join('&max=');\n    }\n\n    const filter = this.state.filter ? `/${this.state.filter}` : '';\n    this.context.d2.Api.getApi().get(`dashboards/q${filter}${queryString}`).then(response => this.setState({\n      items: response\n    })).catch(console.error);\n  };\n\n  render() {\n    return <>\n                <ItemSearchField value={this.state.filter} onChange={this.setFilter} onFocus={this.openList} />\n                <Popover className=\"dashboard-item-selector\" open={this.state.open} onClose={this.closeList} anchorEl={this.state.anchorEl} anchorOrigin={{\n        horizontal: 'left',\n        vertical: 'bottom'\n      }} transformOrigin={{\n        horizontal: 'left',\n        vertical: 'top'\n      }} style={{\n        height: '70vh'\n      }} PaperProps={{\n        style: {\n          width: '700px'\n        }\n      }} disableAutoFocus={true} disableEnforceFocus={true} disableRestoreFocus={true}>\n                    <Menu maxWidth={'700px'}>{this.getMenuGroups()}</Menu>\n                </Popover>\n            </>;\n  }\n\n}\n\nItemSearchField.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n  onFocus: PropTypes.func\n};\nItemSelector.contextTypes = {\n  d2: PropTypes.object.isRequired\n};\nexport default ItemSelector;","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { InputField, TextAreaField } from '@dhis2/ui';\nimport ItemSelector from '../ItemSelector/ItemSelector';\nimport { acSetDashboardTitle, acSetDashboardDescription } from '../../actions/editDashboard';\nimport { orObject } from '../../modules/util';\nimport { sGetEditDashboardRoot } from '../../reducers/editDashboard';\nimport classes from './styles/EditTitleBar.module.css';\nexport const EditTitleBar = ({\n  name,\n  description,\n  onChangeTitle,\n  onChangeDescription\n}) => {\n  const updateTitle = (_, e) => {\n    onChangeTitle(e.target.value);\n  };\n\n  const updateDescription = (_, e) => {\n    onChangeDescription(e.target.value);\n  };\n\n  return <section className={classes.section}>\n            <div className={classes.titleDescription}>\n                <InputField className={classes.title} name=\"Dashboard title input\" label={i18n.t('Dashboard title')} type=\"text\" onChange={updateTitle} value={name} />\n                <TextAreaField className={classes.description} name=\"Dashboard description input\" label={i18n.t('Dashboard description')} onChange={updateDescription} value={description} />\n            </div>\n            <div className={classes.itemSelector}>\n                <ItemSelector />\n            </div>\n        </section>;\n};\nEditTitleBar.propTypes = {\n  onChangeDescription: PropTypes.func.isRequired,\n  onChangeTitle: PropTypes.func.isRequired,\n  description: PropTypes.string,\n  name: PropTypes.string\n};\nEditTitleBar.defaultProps = {\n  name: '',\n  description: ''\n};\n\nconst mapStateToProps = state => {\n  const selectedDashboard = orObject(sGetEditDashboardRoot(state));\n  return {\n    name: selectedDashboard.name,\n    description: selectedDashboard.description\n  };\n};\n\nconst mapDispatchToProps = {\n  onChangeTitle: acSetDashboardTitle,\n  onChangeDescription: acSetDashboardDescription\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(EditTitleBar);","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Modal, ModalTitle, ModalContent, ModalActions, ButtonStrip } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport { PeriodDimension, DynamicDimension, OrgUnitDimension, DIMENSION_ID_PERIOD, DIMENSION_ID_ORGUNIT } from '@dhis2/analytics';\n\nclass FilterDialog extends Component {\n  onConfirm = id => () => this.props.onConfirm(id);\n\n  renderDialogContent() {\n    const {\n      displayNameProperty,\n      dimension,\n      selectedItems\n    } = this.props;\n    const dialogId = dimension.id;\n    const commonProps = {\n      d2: this.context.d2,\n      onSelect: this.props.onSelect,\n      onDeselect: this.props.onDeselect,\n      onReorder: this.props.onReorder\n    };\n\n    switch (dialogId) {\n      case DIMENSION_ID_PERIOD:\n        {\n          return <PeriodDimension selectedPeriods={selectedItems} onSelect={commonProps.onSelect} />;\n        }\n\n      case DIMENSION_ID_ORGUNIT:\n        return <OrgUnitDimension displayNameProperty={displayNameProperty} ouItems={selectedItems} {...commonProps} />;\n\n      default:\n        return <DynamicDimension selectedItems={selectedItems} dimensionId={dialogId} onSelect={commonProps.onSelect} context={commonProps.d2} />;\n    }\n  }\n\n  render() {\n    const {\n      dimension,\n      onClose\n    } = this.props;\n    const dialogId = dimension.id;\n    return <>\n                {dialogId && <Modal onClose={onClose} position=\"top\" large>\n                        <ModalTitle>{dimension.name}</ModalTitle>\n                        <ModalContent>\n                            {this.renderDialogContent()}\n                        </ModalContent>\n                        <ModalActions>\n                            <ButtonStrip>\n                                <Button secondary onClick={onClose}>\n                                    {i18n.t('Cancel')}\n                                </Button>\n                                <Button primary onClick={this.onConfirm(dialogId)}>\n                                    {i18n.t('Confirm')}\n                                </Button>\n                            </ButtonStrip>\n                        </ModalActions>\n                    </Modal>}\n            </>;\n  }\n\n}\n\nFilterDialog.propTypes = {\n  dimension: PropTypes.object,\n  displayNameProperty: PropTypes.string,\n  selectedItems: PropTypes.array,\n  onClose: PropTypes.func,\n  onConfirm: PropTypes.func,\n  onDeselect: PropTypes.func,\n  onReorder: PropTypes.func,\n  onSelect: PropTypes.func\n};\nFilterDialog.contextTypes = {\n  d2: PropTypes.object\n};\nexport default FilterDialog;","export const SET_ACTIVE_MODAL_DIMENSION = 'SET_ACTIVE_MODAL_DIMENSION';\nexport const CLEAR_ACTIVE_MODAL_DIMENSION = 'CLEAR_ACTIVE_MODAL_DIMENSION';\nexport const DEFAULT_STATE_ACTIVE_MODAL_DIMENSION = {};\nexport default ((state = DEFAULT_STATE_ACTIVE_MODAL_DIMENSION, action) => {\n  switch (action.type) {\n    case SET_ACTIVE_MODAL_DIMENSION:\n      {\n        return action.value;\n      }\n\n    case CLEAR_ACTIVE_MODAL_DIMENSION:\n      {\n        return DEFAULT_STATE_ACTIVE_MODAL_DIMENSION;\n      }\n\n    default:\n      return state;\n  }\n});\nexport const sGetActiveModalDimension = state => state.activeModalDimension;","import { SET_ACTIVE_MODAL_DIMENSION, CLEAR_ACTIVE_MODAL_DIMENSION } from '../reducers/activeModalDimension';\nexport const acSetActiveModalDimension = value => ({\n  type: SET_ACTIVE_MODAL_DIMENSION,\n  value\n});\nexport const acClearActiveModalDimension = () => ({\n  type: CLEAR_ACTIVE_MODAL_DIMENSION\n});","import React, { useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport i18n from '@dhis2/d2-i18n';\nimport { DimensionsPanel } from '@dhis2/analytics';\nimport { Button, Popover } from '@dhis2/ui';\nimport FilterDialog from './FilterDialog';\nimport { sGetSettingsDisplayNameProperty } from '../../reducers/settings';\nimport { sGetActiveModalDimension } from '../../reducers/activeModalDimension';\nimport { sGetDimensions } from '../../reducers/dimensions';\nimport { sGetFiltersKeys } from '../../reducers/itemFilters';\nimport { sGetEditItemFiltersRoot } from '../../reducers/editItemFilters';\nimport { acAddItemFilter, acRemoveItemFilter } from '../../actions/itemFilters';\nimport { acRemoveEditItemFilter, acSetEditItemFilters } from '../../actions/editItemFilters';\nimport { acClearActiveModalDimension, acSetActiveModalDimension } from '../../actions/activeModalDimension';\n\nconst FilterSelector = props => {\n  const [showPopover, setShowPopover] = useState(false);\n  const ref = useRef(null);\n\n  const closePanel = () => setShowPopover(false);\n\n  const onCloseDialog = () => {\n    closePanel();\n    props.clearActiveModalDimension();\n  };\n\n  const selectDimension = id => {\n    props.setActiveModalDimension(props.dimensions.find(dimension => dimension.id === id));\n  };\n\n  const onSelectItems = ({\n    dimensionId,\n    items\n  }) => {\n    props.setEditItemFilters({ ...props.selectedItems,\n      [dimensionId]: items\n    });\n  };\n\n  const onDeselectItems = ({\n    dimensionId,\n    itemIdsToRemove\n  }) => {\n    const oldList = props.selectedItems[dimensionId] || [];\n    const newList = oldList.filter(item => !itemIdsToRemove.includes(item.id));\n\n    if (newList.length) {\n      props.setEditItemFilters({ ...props.selectedItems,\n        [dimensionId]: newList\n      });\n    } else {\n      props.removeEditItemFilter(dimensionId);\n    }\n  };\n\n  const onReorderItems = ({\n    dimensionId,\n    itemIds\n  }) => {\n    const oldList = props.selectedItems[dimensionId] || [];\n    const reorderedList = itemIds.map(id => oldList.find(item => item.id === id));\n    props.setEditItemFilters({ ...props.selectedItems,\n      [dimensionId]: reorderedList\n    });\n  };\n\n  const saveFilter = id => {\n    const filterItems = props.selectedItems[id];\n\n    if (filterItems && filterItems.length) {\n      props.addItemFilter({\n        id,\n        value: [...filterItems]\n      });\n    } else {\n      props.removeItemFilter(id);\n    }\n\n    onCloseDialog();\n  };\n\n  return <>\n            <span ref={ref}>\n                <Button onClick={() => setShowPopover(true)}>\n                    {i18n.t('Add filter')}\n                    <ArrowDropDownIcon />\n                </Button>\n            </span>\n            {showPopover && <Popover onClickOutside={closePanel} reference={ref} arrow={true} placement=\"bottom-start\">\n                    <DimensionsPanel style={{\n        width: '320px'\n      }} dimensions={props.dimensions} onDimensionClick={selectDimension} selectedIds={props.selectedDimensions} />\n                </Popover>}\n            {props.dimension ? <FilterDialog displayNameProperty={props.displayNameProperty} dimension={props.dimension} selectedItems={props.selectedItems[props.dimension.id] || []} onSelect={onSelectItems} onDeselect={onDeselectItems} onReorder={onReorderItems} onClose={onCloseDialog} onConfirm={saveFilter} /> : null}\n        </>;\n};\n\nconst mapStateToProps = state => ({\n  displayNameProperty: sGetSettingsDisplayNameProperty(state),\n  dimension: sGetActiveModalDimension(state),\n  dimensions: sGetDimensions(state),\n  selectedDimensions: sGetFiltersKeys(state),\n  selectedItems: sGetEditItemFiltersRoot(state)\n});\n\nFilterSelector.propTypes = {\n  addItemFilter: PropTypes.func,\n  clearActiveModalDimension: PropTypes.func,\n  dimension: PropTypes.object,\n  dimensions: PropTypes.array,\n  displayNameProperty: PropTypes.string,\n  removeEditItemFilter: PropTypes.func,\n  removeItemFilter: PropTypes.func,\n  selectedDimensions: PropTypes.array,\n  selectedItems: PropTypes.object,\n  setActiveModalDimension: PropTypes.func,\n  setEditItemFilters: PropTypes.func\n};\nexport default connect(mapStateToProps, {\n  clearActiveModalDimension: acClearActiveModalDimension,\n  setActiveModalDimension: acSetActiveModalDimension,\n  addItemFilter: acAddItemFilter,\n  removeItemFilter: acRemoveItemFilter,\n  removeEditItemFilter: acRemoveEditItemFilter,\n  setEditItemFilters: acSetEditItemFilters\n})(FilterSelector);","import React, { Component } from 'react';\nimport InfoOutlineIcon from '@material-ui/icons/InfoOutlined';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nclass Info extends Component {\n  show = false;\n\n  toggle() {\n    this.show = !this.show;\n    return this.show;\n  }\n\n  render() {\n    return <div onClick={() => this.props.onClick(this.toggle())}>\n                <InfoOutlineIcon style={{\n        fill: colors.grey600\n      }} />\n            </div>;\n  }\n\n}\n\nInfo.propTypes = {\n  onClick: PropTypes.func\n};\nexport default Info;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport SharingDialog from '@dhis2/d2-ui-sharing-dialog';\nimport Star from '@material-ui/icons/Star';\nimport StarBorder from '@material-ui/icons/StarBorder';\nimport { orObject } from '../../modules/util';\nimport { tStarDashboard } from '../../actions/dashboards';\nimport { acSetSelectedShowDescription } from '../../actions/selected';\nimport FilterSelector from '../ItemFilter/FilterSelector';\nimport { Button, colors } from '@dhis2/ui';\nimport Info from './Info';\nimport { sGetSelectedId, sGetSelectedShowDescription } from '../../reducers/selected';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport classes from './styles/ViewTitleBar.module.css';\nconst NO_DESCRIPTION = i18n.t('No description');\n\nclass ViewTitleBar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sharingDialogIsOpen: false\n    };\n  }\n\n  toggleSharingDialog = () => this.setState({\n    sharingDialogIsOpen: !this.state.sharingDialogIsOpen\n  });\n\n  render() {\n    const {\n      id,\n      name,\n      description,\n      access,\n      style,\n      showDescription,\n      starred,\n      onStarClick,\n      onInfoClick\n    } = this.props;\n    const titleStyle = Object.assign({}, style.title, {\n      cursor: 'default',\n      userSelect: 'text',\n      top: '7px'\n    });\n    const StarIcon = starred ? Star : StarBorder;\n    return <>\n                <div className={classes.titleBar}>\n                    <span style={titleStyle}>{name}</span>\n                    <div className={classes.actions}>\n                        <div className={classes.titleBarIcon} onClick={onStarClick}>\n                            <StarIcon style={{\n              fill: colors.grey600\n            }} />\n                        </div>\n                        <div className={classes.titleBarIcon}>\n                            <Info onClick={onInfoClick} />\n                        </div>\n                        <div style={{\n            marginLeft: '10px'\n          }}>\n                            {access.update ? <Link className={classes.editLink} to={`/${id}/edit`}>\n                                    <Button>{i18n.t('Edit')}</Button>\n                                </Link> : null}\n                            {access.manage ? <span style={{\n              marginRight: '4px'\n            }}>\n                                    <Button onClick={this.toggleSharingDialog}>\n                                        {i18n.t('Share')}\n                                    </Button>\n                                </span> : null}\n                            <span style={{\n              marginRight: '4px'\n            }}>\n                                <FilterSelector />\n                            </span>\n                        </div>\n                    </div>\n                </div>\n                {showDescription ? <div className=\"dashboard-description\" style={Object.assign({\n        paddingTop: '5px',\n        paddingBottom: '5px'\n      }, style.description, !description ? {\n        color: '#888'\n      } : {})}>\n                        {description || NO_DESCRIPTION}\n                    </div> : null}\n                {id ? <SharingDialog d2={this.context.d2} id={id} type=\"dashboard\" open={this.state.sharingDialogIsOpen} onRequestClose={this.toggleSharingDialog} /> : null}\n            </>;\n  }\n\n}\n\nViewTitleBar.propTypes = {\n  access: PropTypes.object,\n  description: PropTypes.string,\n  id: PropTypes.string,\n  name: PropTypes.string,\n  showDescription: PropTypes.bool,\n  starred: PropTypes.bool,\n  style: PropTypes.object,\n  onInfoClick: PropTypes.func,\n  onStarClick: PropTypes.func\n};\nViewTitleBar.defaultProps = {\n  name: '',\n  description: '',\n  starred: false,\n  showDescription: false,\n  onInfoClick: null\n};\nViewTitleBar.contextTypes = {\n  d2: PropTypes.object\n};\n\nconst mapStateToProps = state => {\n  const id = sGetSelectedId(state);\n  const dashboard = orObject(sGetDashboardById(state, id));\n  return {\n    id,\n    name: dashboard.displayName,\n    description: dashboard.displayDescription,\n    dashboardItems: sGetDashboardItems(state),\n    showDescription: sGetSelectedShowDescription(state),\n    starred: dashboard.starred,\n    access: orObject(dashboard.access)\n  };\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n  const {\n    id,\n    starred,\n    showDescription\n  } = stateProps;\n  const {\n    dispatch\n  } = dispatchProps;\n  return { ...stateProps,\n    ...ownProps,\n    onStarClick: () => dispatch(tStarDashboard(id, !starred)),\n    onInfoClick: () => dispatch(acSetSelectedShowDescription(!showDescription))\n  };\n};\n\nexport default connect(mapStateToProps, null, mergeProps)(ViewTitleBar);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { colors } from '@dhis2/ui';\nimport EditTitleBar from './EditTitleBar';\nimport ViewTitleBar from './ViewTitleBar';\nimport './TitleBar.css';\nconst style = {\n  title: {\n    position: 'relative',\n    fontSize: 21,\n    fontWeight: 500,\n    color: colors.black,\n    minWidth: 50\n  },\n  description: {\n    fontSize: 14,\n    color: colors.grey800\n  }\n};\n\nconst TitleBar = ({\n  edit\n}) => {\n  return <div className=\"titlebar-wrapper\" style={{\n    padding: '20px 15px 5px 10px'\n  }}>\n            {edit ? <EditTitleBar style={style} /> : <ViewTitleBar style={style} />}\n        </div>;\n};\n\nTitleBar.propTypes = {\n  edit: PropTypes.bool\n};\nexport default TitleBar;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport * as pluginManager from './plugin';\nimport { getBaseUrl, orObject } from '../../../modules/util';\nimport { getGridItemDomId } from '../../ItemGrid/gridUtil';\n\nconst pluginCredentials = d2 => {\n  return {\n    baseUrl: getBaseUrl(d2),\n    auth: d2.Api.getApi().defaultHeaders.Authorization\n  };\n};\n\nclass DefaultPlugin extends Component {\n  pluginCredentials = null;\n\n  constructor(props, context) {\n    super(props);\n    this.d2 = context.d2;\n  }\n\n  shouldPluginReload = prevProps => {\n    // TODO - fix this hack, to handle bug with multiple\n    // rerendering while switching between dashboards.\n    //\n    // To determine if the rendering is happening because of a\n    // dashboard switch, check if the item reference has changed.\n    const reloadAllowed = this.props.item === prevProps.item;\n    const filtersChanged = prevProps.itemFilters !== this.props.itemFilters;\n    const vis = orObject(this.props.visualization);\n    const prevVis = orObject(prevProps.visualization);\n    const visChanged = vis.id !== prevVis.id || vis.activeType !== prevVis.activeType;\n    return reloadAllowed && (visChanged || filtersChanged);\n  };\n  reloadPlugin = prevProps => {\n    if (pluginManager.pluginIsAvailable(this.props.item, this.props.visualization) && this.shouldPluginReload(prevProps)) {\n      const prevVis = orObject(prevProps.visualization);\n      const currentVis = this.props.visualization;\n      const useActiveType = currentVis.activeType !== prevVis.activeType || currentVis.activeType !== this.props.item.type;\n\n      if (useActiveType || this.props.itemFilters !== prevProps.itemFilters) {\n        pluginManager.unmount(this.props.item, prevVis.activeType || this.props.item.type);\n        pluginManager.load(this.props.item, this.props.visualization, {\n          credentials: this.pluginCredentials,\n          activeType: useActiveType ? currentVis.activeType : null\n        });\n      }\n    }\n  };\n\n  componentDidMount() {\n    this.pluginCredentials = pluginCredentials(this.d2);\n\n    if (pluginManager.pluginIsAvailable(this.props.item, this.props.visualization)) {\n      pluginManager.load(this.props.item, this.props.visualization, {\n        credentials: this.pluginCredentials,\n        activeType: !this.props.editMode ? this.getActiveType() : null,\n        options: this.props.options\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    this.reloadPlugin(prevProps);\n  }\n\n  getActiveType = () => this.props.visualization.activeType || this.props.item.type;\n\n  render() {\n    const {\n      classes,\n      item,\n      visualization,\n      style\n    } = this.props;\n    const pluginIsAvailable = pluginManager.pluginIsAvailable(item, visualization);\n    return pluginIsAvailable ? <div id={getGridItemDomId(item.id)} style={style} /> : <div className={classes.textDiv}>\n                {i18n.t('Unable to load the plugin for this item')}\n            </div>;\n  }\n\n}\n\nDefaultPlugin.contextTypes = {\n  d2: PropTypes.object\n};\nDefaultPlugin.propTypes = {\n  classes: PropTypes.object,\n  editMode: PropTypes.bool,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object,\n  options: PropTypes.object,\n  style: PropTypes.object,\n  visualization: PropTypes.object\n};\nDefaultPlugin.defaultProps = {\n  style: {},\n  item: {},\n  itemFilters: {},\n  options: {},\n  visualization: {}\n};\nexport default DefaultPlugin;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nexport const ThreeDots = () => <svg height=\"18\" viewBox=\"0 0 18 18\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"m4 7.5c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm10 0c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm-5 0c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5z\" fill=\"#6e7a8a\" />\n    </svg>;\nexport const SpeechBubble = () => <svg height=\"20\" viewBox=\"0 0 20 20\" width=\"20\" xmlns=\"http://www.w3.org/2000/svg\" style={{\n  margin: '3px 2px 0 2px'\n}} // Temporary fix for the misaligned icon, should be removed once the icon is replaced\n>\n        <path d=\"m20 2h-16c-1.1 0-1.99.9-1.99 2l-.01 18 4-4h14c1.1 0 2-.9 2-2v-12c0-1.1-.9-2-2-2zm-2 12h-12v-2h12zm0-3h-12v-2h12zm0-3h-12v-2h12z\" fill=\"#6e7a8a\" fillRule=\"evenodd\" transform=\"translate(-2 -2)\" />\n    </svg>;\nexport const Warning = () => <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" fill={colors.grey600}>\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z\" />\n    </svg>;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Warning } from './assets/icons';\nimport classes from './styles/FatalErrorBoundary.module.css';\n\nclass FatalErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      errorFound: false\n    };\n  }\n\n  componentDidCatch(error, info) {\n    this.setState({\n      errorFound: true\n    });\n    console.log('error: ', error);\n    console.log('info: ', info);\n  }\n\n  render() {\n    if (this.state.errorFound) {\n      return <p className={classes.container}>\n                    <span className={classes.icon}>\n                        <Warning />\n                    </span>\n                    <span className={classes.message}>\n                        {i18n.t('There was a problem loading this dashboard item')}\n                    </span>\n                </p>;\n    }\n\n    return this.props.children;\n  }\n\n}\n\nFatalErrorBoundary.propTypes = {\n  children: PropTypes.node\n};\nexport default FatalErrorBoundary;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { colors } from '@dhis2/ui';\nimport classes from './styles/DeleteItemButton.module.css';\n\nconst DeleteItemButton = ({\n  onClick\n}) => <button type=\"button\" className={classes.deleteItemButton} onClick={onClick} title={i18n.t(`Delete item`)}>\n        <DeleteIcon style={{\n    fill: colors.red500\n  }} />\n    </button>;\n\nDeleteItemButton.propTypes = {\n  onClick: PropTypes.func\n};\nexport default DeleteItemButton;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { sGetIsEditing } from '../../reducers/editDashboard';\nimport { acRemoveDashboardItem } from '../../actions/editDashboard';\nimport DeleteItemButton from './DeleteItemButton';\nimport classes from './styles/ItemHeader.module.css'; // This is the margin-top + margin-bottom defined in the css file\n\nexport const HEADER_MARGIN_HEIGHT = 12;\nconst ItemHeader = React.forwardRef(({\n  itemId,\n  acRemoveDashboardItem,\n  actionButtons,\n  title,\n  editMode\n}, ref) => {\n  const handleDeleteItem = () => acRemoveDashboardItem(itemId);\n\n  return <div className={classes.itemHeaderWrap} ref={ref}>\n                <p className={classes.itemTitle}>{title}</p>\n                {editMode ? <div className={classes.itemActionsWrap}>\n                        <DeleteItemButton onClick={handleDeleteItem} />\n                    </div> : actionButtons && <div className={classes.itemActionsWrap}>\n                            {actionButtons}\n                        </div>}\n            </div>;\n});\nItemHeader.propTypes = {\n  acRemoveDashboardItem: PropTypes.func,\n  actionButtons: PropTypes.node,\n  editMode: PropTypes.bool,\n  itemId: PropTypes.string,\n  title: PropTypes.string\n};\n\nconst mapStateToProps = state => ({\n  editMode: sGetIsEditing(state)\n});\n\nconst mapDispatchToProps = {\n  acRemoveDashboardItem\n};\nexport default connect(mapStateToProps, mapDispatchToProps, null, {\n  forwardRef: true\n})(ItemHeader);","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { isSingleValue, isYearOverYear, VIS_TYPE_GAUGE, VIS_TYPE_PIE } from '@dhis2/analytics';\nimport { Button, Menu, MenuItem, Divider, colors } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport Popover from '@material-ui/core/Popover';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport { ThreeDots, SpeechBubble } from './assets/icons';\nimport { pluginIsAvailable, getLink } from './plugin';\nimport { CHART, MAP, REPORT_TABLE, EVENT_CHART, EVENT_REPORT, isTrackerDomainType, hasMapView, getAppName } from '../../../modules/itemTypes';\nconst iconFill = {\n  fill: colors.grey600\n};\n\nconst ItemHeaderButtons = props => {\n  const [anchorEl, setAnchorEl] = useState(null);\n  const {\n    item,\n    visualization,\n    onSelectActiveType,\n    d2,\n    activeType\n  } = props;\n  const isTrackerType = isTrackerDomainType(item.type);\n\n  const onViewTable = () => {\n    handleClose();\n    onSelectActiveType(isTrackerType ? EVENT_REPORT : REPORT_TABLE);\n  };\n\n  const onViewChart = () => {\n    handleClose();\n    onSelectActiveType(isTrackerType ? EVENT_CHART : CHART);\n  };\n\n  const onViewMap = () => {\n    handleClose();\n    onSelectActiveType(MAP);\n  };\n\n  const itemHasMapView = () => hasMapView(item.type);\n\n  const handleMenuClick = (_, event) => setAnchorEl(event.currentTarget);\n\n  const handleInterpretationClick = () => {\n    props.onToggleFooter();\n\n    if (anchorEl !== null) {\n      handleClose();\n    }\n  };\n\n  const handleClose = () => setAnchorEl(null);\n\n  const type = visualization.type || item.type;\n  const canViewAs = !isSingleValue(type) && !isYearOverYear(type) && type !== VIS_TYPE_GAUGE && type !== VIS_TYPE_PIE;\n  const interpretationMenuLabel = props.activeFooter ? i18n.t(`Hide interpretations and details`) : i18n.t(`Show interpretations and details`);\n\n  const ViewAsMenuItems = () => <>\n            {activeType !== CHART && activeType !== EVENT_CHART && <MenuItem dense label={i18n.t('View as Chart')} onClick={onViewChart} icon={<ChartIcon style={iconFill} />} />}\n            {activeType !== REPORT_TABLE && activeType !== EVENT_REPORT && <MenuItem dense label={i18n.t('View as Table')} onClick={onViewTable} icon={<TableIcon style={iconFill} />} />}\n            {itemHasMapView() && activeType !== MAP && <MenuItem dense label={i18n.t('View as Map')} onClick={onViewMap} icon={<MapIcon style={iconFill} />} />}\n        </>;\n\n  return pluginIsAvailable(item, visualization) ? <>\n            <Button small secondary onClick={handleMenuClick}>\n                <ThreeDots />\n            </Button>\n            {anchorEl && <Popover open={Boolean(anchorEl)} onClose={handleClose} anchorEl={anchorEl}>\n                    <Menu>\n                        {canViewAs && <>\n                                <ViewAsMenuItems />\n                                <Divider />\n                            </>}\n                        <MenuItem dense icon={<LaunchIcon style={{\n          fill: '#6e7a8a'\n        }} />} label={i18n.t('Open in {{appName}} app', {\n          appName: getAppName(item.type)\n        })} href={getLink(item, d2)} target=\"_blank\" />\n                        <MenuItem dense icon={<SpeechBubble />} label={interpretationMenuLabel} onClick={handleInterpretationClick} />\n                    </Menu>\n                </Popover>}\n        </> : null;\n};\n\nItemHeaderButtons.propTypes = {\n  activeFooter: PropTypes.bool,\n  activeType: PropTypes.string,\n  d2: PropTypes.object,\n  item: PropTypes.object,\n  visualization: PropTypes.object,\n  onSelectActiveType: PropTypes.func,\n  onToggleFooter: PropTypes.func\n};\nexport default ItemHeaderButtons;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { colors } from '@dhis2/ui';\nimport { getId } from './plugin';\nimport InterpretationsComponent from '@dhis2/d2-ui-interpretations';\nconst style = {\n  scrollContainer: {\n    overflowY: 'auto',\n    height: '340px'\n  },\n  line: {\n    margin: '-1px 0px 0px',\n    height: '1px',\n    border: 'none',\n    backgroundColor: colors.grey100\n  }\n};\n\nclass ItemFooter extends Component {\n  render() {\n    const objectId = getId(this.props.item);\n    return <div className=\"dashboard-item-footer\">\n                <hr style={style.line} />\n                <div style={style.scrollContainer}>\n                    <InterpretationsComponent d2={this.context.d2} item={this.props.item} type={this.props.item.type.toLowerCase()} id={objectId} appName=\"dashboard\" />\n                </div>\n            </div>;\n  }\n\n}\n\nItemFooter.contextTypes = {\n  d2: PropTypes.object.isRequired\n};\nItemFooter.propTypes = {\n  item: PropTypes.object.isRequired\n};\nexport default ItemFooter;","// Note that this ignores discrepancies in 'this', so shouldn't be used with bound functions\n// This is useful instead of lodash/memoize when we only need to memoize a single value\n// Inspiration: https://github.com/alexreardon/memoize-one\nconst memoizeOne = fn => {\n  let lastArgs = undefined;\n  let lastValue = undefined;\n  return (...args) => {\n    if (lastArgs && args.length === lastArgs.length && args.every((arg, i) => arg === lastArgs[i])) {\n      return lastValue;\n    }\n\n    lastArgs = args;\n    lastValue = fn(...args);\n    return lastValue;\n  };\n};\n\nexport default memoizeOne;","import React from 'react';\nimport { CircularLoader } from '@dhis2/ui';\nimport classes from './styles/LoadingMask.module.css';\n\nconst LoadingMask = () => {\n  return <div className={classes.center}>\n            <CircularLoader />\n        </div>;\n};\n\nexport default LoadingMask;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport uniqueId from 'lodash/uniqueId';\nimport VisualizationPlugin from '@dhis2/data-visualizer-plugin';\nimport i18n from '@dhis2/d2-i18n';\nimport DefaultPlugin from './DefaultPlugin';\nimport FatalErrorBoundary from './FatalErrorBoundary';\nimport ItemHeader, { HEADER_MARGIN_HEIGHT } from '../ItemHeader';\nimport ItemHeaderButtons from './ItemHeaderButtons';\nimport ItemFooter from './ItemFooter';\nimport * as pluginManager from './plugin';\nimport { sGetVisualization } from '../../../reducers/visualizations';\nimport { sGetItemFiltersRoot } from '../../../reducers/itemFilters';\nimport { acAddVisualization, acSetActiveVisualizationType } from '../../../actions/visualizations';\nimport { VISUALIZATION, MAP, CHART, REPORT_TABLE } from '../../../modules/itemTypes';\nimport memoizeOne from '../../../modules/memoizeOne';\nimport { getVisualizationConfig } from './plugin';\nimport LoadingMask from './LoadingMask';\nimport { ITEM_CONTENT_PADDING_BOTTOM } from '../../ItemGrid/ItemGrid';\nimport classes from './styles/Item.module.css';\nexport class Item extends Component {\n  state = {\n    showFooter: false,\n    configLoaded: false,\n    pluginIsLoaded: false\n  };\n\n  constructor(props, context) {\n    super(props);\n    this.d2 = context.d2;\n    this.contentRef = React.createRef();\n    this.headerRef = React.createRef();\n    this.memoizedApplyFilters = memoizeOne(this.applyFilters);\n    this.memoizedGetVisualizationConfig = memoizeOne(getVisualizationConfig);\n    this.memoizedGetContentStyle = memoizeOne(this.getContentStyle);\n  }\n\n  async componentDidMount() {\n    this.props.onVisualizationLoaded( // TODO do not call fetch on the pluginManager, do it here as the manager will eventually be removed...\n    await pluginManager.fetch(this.props.item));\n    this.setState({\n      configLoaded: true\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.pluginIsLoaded && (prevProps.visualization !== this.props.visualization || prevProps.itemFilters !== this.props.itemFilters)) {\n      this.setState({\n        pluginIsLoaded: false\n      });\n    }\n  }\n\n  applyFilters = (visualization, filters) => {\n    if (!Object.keys(filters).length) {\n      return visualization;\n    } // deep clone objects in filters to avoid changing the visualization in the Redux store\n\n\n    const visRows = visualization.rows.map(obj => ({ ...obj\n    }));\n    const visColumns = visualization.columns.map(obj => ({ ...obj\n    }));\n    const visFilters = visualization.filters.map(obj => ({ ...obj\n    }));\n    Object.keys(filters).forEach(dimensionId => {\n      if (filters[dimensionId]) {\n        let dimensionFound = false;\n        [visRows, visColumns, visFilters].forEach(dimensionObjects => dimensionObjects.filter(obj => obj.dimension === dimensionId).forEach(obj => {\n          dimensionFound = true;\n          obj.items = filters[dimensionId];\n        })); // add dimension to filters if not already present elsewhere\n\n        if (!dimensionFound) {\n          visFilters.push({\n            dimension: dimensionId,\n            items: filters[dimensionId]\n          });\n        }\n      }\n    });\n    return { ...visualization,\n      rows: visRows,\n      columns: visColumns,\n      filters: visFilters\n    };\n  };\n  getUniqueKey = memoizeOne(() => uniqueId());\n  pluginCredentials = null;\n  getPluginComponent = () => {\n    const activeType = this.getActiveType();\n    const visualization = this.memoizedGetVisualizationConfig(this.props.visualization, this.props.item.type, activeType);\n\n    if (!visualization) {\n      return <div className={classes.textDiv}>\n                    {i18n.t('No data to display')}\n                </div>;\n    }\n\n    const calculatedHeight = this.props.item.originalHeight - this.headerRef.current.clientHeight - HEADER_MARGIN_HEIGHT - ITEM_CONTENT_PADDING_BOTTOM;\n    const props = { ...this.props,\n      visualization,\n      classes,\n      style: this.memoizedGetContentStyle(calculatedHeight, this.contentRef ? this.contentRef.offsetHeight : null, this.props.editMode)\n    };\n\n    switch (activeType) {\n      case VISUALIZATION:\n      case CHART:\n      case REPORT_TABLE:\n        {\n          return <>\n                        {!this.state.pluginIsLoaded && <div style={props.style}>\n                                <LoadingMask />\n                            </div>}\n                        <VisualizationPlugin d2={this.d2} visualization={this.memoizedApplyFilters(visualization, props.itemFilters)} onLoadingComplete={this.onLoadingComplete} forDashboard={true} style={props.style} />\n                    </>;\n        }\n\n      case MAP:\n        {\n          if (props.item.type === MAP) {\n            // apply filters only to thematic and event layers\n            // for maps AO\n            const mapViews = props.visualization.mapViews.map(obj => {\n              if (obj.layer.includes('thematic') || obj.layer.includes('event')) {\n                return this.memoizedApplyFilters(obj, props.itemFilters);\n              }\n\n              return obj;\n            });\n            props.visualization = { ...props.visualization,\n              mapViews\n            };\n          } else {\n            // this is the case of a non map AO passed to the maps plugin\n            // due to a visualization type switch in dashboard item\n            // maps plugin takes care of converting the AO to a suitable format\n            props.visualization = this.memoizedApplyFilters(props.visualization, props.itemFilters);\n          }\n\n          props.options = { ...props.options,\n            hideTitle: true\n          };\n          return <DefaultPlugin {...props} />;\n        }\n\n      default:\n        {\n          props.visualization = this.memoizedApplyFilters(props.visualization, props.itemFilters);\n          return <DefaultPlugin {...props} />;\n        }\n    }\n  };\n  onLoadingComplete = () => {\n    this.setState({\n      pluginIsLoaded: true\n    });\n  };\n  onToggleFooter = () => {\n    this.setState({\n      showFooter: !this.state.showFooter\n    }, this.props.onToggleItemExpanded(this.props.item.id));\n  };\n  onSelectActiveType = type => {\n    if (type === this.getActiveType()) {\n      return;\n    }\n\n    pluginManager.unmount(this.props.item, this.getActiveType());\n    this.props.onSelectActiveType(this.props.visualization.id, type);\n  };\n  getActiveType = () => this.props.visualization.activeType || this.props.item.type;\n  pluginIsAvailable = () => pluginManager.pluginIsAvailable(this.props.item, this.props.visualization);\n  getContentStyle = (calculatedHeight, measuredHeight, editMode) => {\n    const height = editMode ? measuredHeight || calculatedHeight : calculatedHeight;\n    return {\n      height\n    };\n  };\n\n  render() {\n    const {\n      item,\n      editMode,\n      itemFilters\n    } = this.props;\n    const {\n      showFooter\n    } = this.state;\n    const actionButtons = <ItemHeaderButtons item={item} visualization={this.props.visualization} onSelectActiveType={this.onSelectActiveType} onToggleFooter={this.onToggleFooter} d2={this.d2} activeType={this.getActiveType()} activeFooter={this.state.showFooter} />;\n    return <>\n                <ItemHeader title={pluginManager.getName(item)} itemId={item.id} actionButtons={actionButtons} ref={this.headerRef} />\n                <FatalErrorBoundary>\n                    <div key={this.getUniqueKey(itemFilters)} className=\"dashboard-item-content\" ref={ref => this.contentRef = ref}>\n                        {this.state.configLoaded && this.getPluginComponent()}\n                    </div>\n                </FatalErrorBoundary>\n                {!editMode && showFooter ? <ItemFooter item={item} /> : null}\n            </>;\n  }\n\n}\nItem.contextTypes = {\n  d2: PropTypes.object\n};\nItem.propTypes = {\n  editMode: PropTypes.bool,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object,\n  visualization: PropTypes.object,\n  onSelectActiveType: PropTypes.func,\n  onToggleItemExpanded: PropTypes.func,\n  onVisualizationLoaded: PropTypes.func\n};\nItem.defaultProps = {\n  item: {},\n  editMode: false,\n  onToggleItemExpanded: Function.prototype,\n  itemFilters: {},\n  visualization: {}\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n  itemFilters: sGetItemFiltersRoot(state),\n  visualization: sGetVisualization(state, pluginManager.extractFavorite(ownProps.item).id)\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onVisualizationLoaded: visualization => dispatch(acAddVisualization(visualization)),\n  onSelectActiveType: (id, type, activeType) => dispatch(acSetActiveVisualizationType(id, type, activeType))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Item);","import React from 'react';\nimport { colors } from '@dhis2/ui';\nconst style = {\n  backgroundColor: colors.grey200,\n  border: 'none',\n  height: '1px',\n  margin: '0px 0px 5px 0px'\n};\n\nconst Line = () => <hr style={style} />;\n\nexport default Line;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { sGetMessagesRoot } from '../../../reducers/messages';\nimport { formatDate } from '../../../modules/util';\nimport { colors } from '@dhis2/ui';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\nimport './MessagesItem.css';\nconst PRIVATE = 'PRIVATE';\nconst messageTypes = {\n  [PRIVATE]: 'Private',\n  VALIDATION_RESULT: 'Validation',\n  TICKET: 'Ticket',\n  SYSTEM: 'System'\n};\nconst style = {\n  list: {\n    listStyleType: 'none',\n    paddingLeft: '0px'\n  },\n  seeAll: {\n    textAlign: 'center',\n    fontSize: '13px',\n    marginBottom: '5px'\n  },\n  sender: {\n    fontSize: '13px',\n    lineHeight: '15px',\n    margin: 0,\n    color: colors.grey800\n  },\n  snippet: {\n    color: colors.grey800,\n    fontSize: '13px',\n    lineHeight: '15px',\n    maxHeight: '30px',\n    overflow: 'hidden'\n  }\n};\n\nclass MessagesItem extends Component {\n  state = {\n    uiLocale: ''\n  };\n\n  async componentDidMount() {\n    const uiLocale = await this.context.d2.currentUser.userSettings.get('keyUiLocale');\n    this.setState({\n      uiLocale\n    });\n  }\n\n  getMessageHref = msg => {\n    const msgIdentifier = msg ? `#/${msg.messageType}/${msg.id}` : '';\n    return `${this.context.baseUrl}/dhis-web-messaging/${msgIdentifier}`;\n  };\n  getMessageSender = msg => {\n    const latestMsg = msg.messages.slice(-1)[0];\n    return latestMsg.sender ? latestMsg.sender.displayName : '';\n  };\n  getMessageItems = () => {\n    const editClass = !this.props.editMode ? 'view' : null;\n    return this.props.messages.map(msg => {\n      const redirectToMsg = () => {\n        if (!this.props.editMode) {\n          document.location.href = this.getMessageHref(msg);\n        }\n      };\n\n      const sender = msg.messageType === PRIVATE ? this.getMessageSender(msg) : messageTypes[msg.messageType];\n      const readClass = !msg.read ? 'unread' : null;\n      const latestMsg = msg.messages.slice(-1)[0];\n      const msgDate = latestMsg.lastUpdated;\n      return <li className={`message-item ${editClass}`} key={msg.id} onClick={redirectToMsg}>\n                    <p className={`message-title ${readClass}`}>\n                        {msg.displayName} ({msg.messageCount})\n                    </p>\n                    <p style={style.sender}>\n                        {sender} - {formatDate(msgDate, this.state.uiLocale)}\n                    </p>\n                    <p style={style.snippet}>{latestMsg.text}</p>\n                </li>;\n    });\n  };\n\n  render() {\n    return <>\n                <ItemHeader title={i18n.t('Messages')} itemId={this.props.item.id} />\n                <Line />\n                {this.props.messages.length > 0 && <div className=\"dashboard-item-content\">\n                        <ul style={style.list}>{this.getMessageItems()}</ul>\n                        <div style={style.seeAll}>\n                            <a href={this.getMessageHref()}>\n                                {i18n.t('See all messages')}\n                            </a>\n                        </div>\n                    </div>}\n            </>;\n  }\n\n}\n\nMessagesItem.propTypes = {\n  editMode: PropTypes.bool,\n  item: PropTypes.object,\n  messages: PropTypes.array\n};\nMessagesItem.contextTypes = {\n  d2: PropTypes.object,\n  baseUrl: PropTypes.string\n};\n\nconst mapStateToProps = state => {\n  return {\n    messages: Object.values(sGetMessagesRoot(state))\n  };\n};\n\nconst MessagesContainer = connect(mapStateToProps, null)(MessagesItem);\nexport default MessagesContainer;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ItemHeader from '../ItemHeader';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nconst NotSupportedItem = props => <>\n        <ItemHeader title={i18n.t('Item type \"{{type}}\" not supported', {\n    type: props.item.type\n  })} itemId={props.item.id} />\n        <div style={{\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '90%'\n  }}>\n            <NotInterestedIcon style={{\n      width: 100,\n      height: 100,\n      align: 'center'\n    }} color=\"disabled\" />\n        </div>\n    </>;\n\nNotSupportedItem.propTypes = {\n  item: PropTypes.object\n};\nexport default NotSupportedItem;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst DescriptionIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill={colors.grey500}>\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M14 2H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6zm2 16H8v-2h8v2zm0-4H8v-2h8v2zm-3-5V3.5L18.5 9H13z\" />\n    </svg>;\n\nDescriptionIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default DescriptionIcon;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst DeleteIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill={colors.red500}>\n        <path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>;\n\nDeleteIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default DeleteIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { colors } from '@dhis2/ui';\nimport DescriptionIcon from '../../../icons/Description';\nimport DeleteIcon from '../../../icons/Delete';\nimport Line from '../../../widgets/Line';\nimport { itemTypeMap, getItemUrl } from '../../../modules/itemTypes';\nimport { orArray } from '../../../modules/util';\nimport { tRemoveListItemContent } from './actions';\nimport ItemHeader from '../ItemHeader';\nimport classes from './Item.module.css';\n\nconst getItemTitle = item => itemTypeMap[item.type].pluralTitle;\n\nconst getContentItems = item => orArray(item[itemTypeMap[item.type].propName]).filter((item, index, array) => array.findIndex(el => el.id === item.id) === index);\n\nconst ListItem = (props, context) => {\n  const {\n    item,\n    editMode,\n    tRemoveListItemContent\n  } = props;\n  const contentItems = getContentItems(item);\n\n  const getLink = contentItem => {\n    const deleteButton = <button className={classes.deletebutton} onClick={() => tRemoveListItemContent(item, contentItem)}>\n                <DeleteIcon className={classes.deleteicon} />\n            </button>;\n    return <>\n                <a className={classes.link} style={{\n        color: colors.grey900\n      }} href={getItemUrl(item.type, contentItem, context.d2)}>\n                    {contentItem.name}\n                </a>\n                {editMode ? deleteButton : null}\n            </>;\n  };\n\n  return <>\n            <ItemHeader title={getItemTitle(item)} itemId={item.id} />\n            <Line />\n            <div className=\"dashboard-item-content\">\n                <ul className={classes.list}>\n                    {contentItems.map(contentItem => <li className={classes.item} key={contentItem.id}>\n                            <DescriptionIcon className={classes.itemicon} />\n                            {getLink(contentItem)}\n                        </li>)}\n                </ul>\n            </div>\n        </>;\n};\n\nListItem.propTypes = {\n  editMode: PropTypes.bool,\n  item: PropTypes.object,\n  tRemoveListItemContent: PropTypes.func\n};\nListItem.contextTypes = {\n  d2: PropTypes.object\n};\nexport default connect(null, {\n  tRemoveListItemContent\n})(ListItem);","import { acUpdateDashboardItem, acRemoveDashboardItem } from '../../../actions/editDashboard';\nimport { itemTypeMap } from '../../../modules/itemTypes';\nexport const tRemoveListItemContent = (dashboardItem, content) => dispatch => {\n  const listItemType = itemTypeMap[dashboardItem.type].propName;\n  const newContent = dashboardItem[listItemType].filter(item => item.id !== content.id);\n\n  if (newContent.length) {\n    dashboardItem[listItemType] = newContent;\n    dispatch(acUpdateDashboardItem(dashboardItem));\n  } else {\n    dispatch(acRemoveDashboardItem(dashboardItem));\n  }\n};","import React from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport Input from '@material-ui/core/Input';\nimport { Parser as RichTextParser, Editor as RichTextEditor } from '@dhis2/d2-ui-rich-text';\nimport { acUpdateDashboardItem } from '../../../actions/editDashboard';\nimport { sGetEditDashboardItems } from '../../../reducers/editDashboard';\nimport { sGetDashboardItems } from '../../../reducers/dashboards';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\nconst style = {\n  textDiv: {\n    padding: '10px',\n    whiteSpace: 'pre-line',\n    lineHeight: '20px'\n  },\n  textField: {\n    fontSize: '14px',\n    fontStretch: 'normal',\n    width: '90%',\n    margin: '0 auto',\n    display: 'block',\n    lineHeight: '24px'\n  },\n  container: {\n    marginBottom: '20px',\n    marginTop: '20px'\n  }\n};\n\nconst TextItem = props => {\n  const {\n    item,\n    editMode,\n    text,\n    acUpdateDashboardItem\n  } = props;\n\n  const onChangeText = event => {\n    const updatedItem = { ...item,\n      text: event.target.value\n    };\n    acUpdateDashboardItem(updatedItem);\n  };\n\n  const viewItem = () => {\n    const textDivStyle = Object.assign({}, style.textField, style.textDiv);\n    return <div className=\"dashboard-item-content\" style={style.container}>\n                <RichTextParser style={textDivStyle}>{text}</RichTextParser>\n            </div>;\n  };\n\n  const editItem = () => {\n    return <>\n                <ItemHeader title={i18n.t('Text item')} itemId={item.id} />\n                <Line />\n                <div className=\"dashboard-item-content\">\n                    <RichTextEditor onEdit={onChangeText}>\n                        <Input value={text} multiline fullWidth style={style.textField} placeholder={i18n.t('Add text here')} onChange={onChangeText} />\n                    </RichTextEditor>\n                </div>\n            </>;\n  };\n\n  return <>{editMode ? editItem() : viewItem()}</>;\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const items = ownProps.editMode ? sGetEditDashboardItems(state) : sGetDashboardItems(state);\n  const item = items.find(item => item.id === ownProps.item.id);\n  return {\n    text: item ? item.text : ''\n  };\n};\n\nTextItem.propTypes = {\n  acUpdateDashboardItem: PropTypes.func,\n  editMode: PropTypes.bool,\n  item: PropTypes.object,\n  text: PropTypes.string\n};\nexport default connect(mapStateToProps, {\n  acUpdateDashboardItem\n})(TextItem);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\nimport { FILTER_ORG_UNIT } from '../../../actions/itemFilters';\nimport { sGetItemFiltersRoot } from '../../../reducers/itemFilters';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nconst getIframeSrc = (appDetails, item, itemFilters) => {\n  let iframeSrc = `${appDetails.launchUrl}?dashboardItemId=${item.id}`;\n\n  if (itemFilters && itemFilters[FILTER_ORG_UNIT] && itemFilters[FILTER_ORG_UNIT].length) {\n    const ouIds = itemFilters[FILTER_ORG_UNIT].map(ouPath => ouPath.split('/').slice(-1)[0]);\n    iframeSrc += `&userOrgUnit=${ouIds.join(',')}`;\n  }\n\n  return iframeSrc;\n};\n\nconst AppItem = ({\n  item,\n  itemFilters\n}, context) => {\n  let appDetails;\n  const appKey = item.appKey;\n\n  if (appKey) {\n    appDetails = context.d2.system.installedApps.find(app => app.key === appKey);\n  }\n\n  return appDetails && appDetails.name && appDetails.launchUrl ? <>\n            <ItemHeader title={appDetails.name} itemId={item.id} />\n            <Line />\n            <iframe title={appDetails.name} src={getIframeSrc(appDetails, item, itemFilters)} className=\"dashboard-item-content\" style={{\n      border: 'none'\n    }} />\n        </> : <>\n            <ItemHeader title={`${appKey} app not found`} />\n            <Line />\n            <div className=\"dashboard-item-content\" style={{\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      height: '90%'\n    }}>\n                <NotInterestedIcon color=\"disabled\" disabled style={{\n        width: 100,\n        height: 100,\n        align: 'center'\n      }} />\n            </div>\n        </>;\n};\n\nAppItem.propTypes = {\n  item: PropTypes.object,\n  itemFilters: PropTypes.object\n};\nAppItem.contextTypes = {\n  d2: PropTypes.object\n};\n\nconst mapStateToProps = state => ({\n  itemFilters: sGetItemFiltersRoot(state)\n});\n\nexport default connect(mapStateToProps)(AppItem);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { colors } from '@dhis2/ui';\nimport ItemHeader from '../ItemHeader';\nconst style = {\n  margin: '21px 28px',\n  fontSize: '14px',\n  lineHeight: '18px',\n  color: colors.grey600\n};\n\nconst SpacerItem = props => {\n  return <>\n            <ItemHeader title={i18n.t('Spacer')} itemId={props.item.id} />\n            <p style={style}>\n                {i18n.t('Use a spacer to create empty vertical space between other dashboard items.')}\n            </p>\n        </>;\n};\n\nSpacerItem.propTypes = {\n  item: PropTypes.object\n};\nexport default SpacerItem;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport VisualizationItem from './VisualizationItem/Item';\nimport MessagesItem from './MessagesItem/Item';\nimport NotSupportedItem from './NotSupportedItem/Item';\nimport ListItem from './ListItem/Item';\nimport TextItem from './TextItem/Item';\nimport AppItem from './AppItem/Item';\nimport SpacerItem from './SpacerItem/Item';\nimport { APP, VISUALIZATION, REPORT_TABLE, CHART, MAP, EVENT_CHART, EVENT_REPORT, MESSAGES, REPORTS, RESOURCES, USERS, TEXT, SPACER } from '../../modules/itemTypes';\nimport { DEFAULT_STATE_ITEM_FILTERS } from '../../reducers/itemFilters';\n\nconst getGridItem = type => {\n  switch (type) {\n    case VISUALIZATION:\n    case REPORT_TABLE:\n    case CHART:\n    case MAP:\n    case EVENT_CHART:\n    case EVENT_REPORT:\n      return VisualizationItem;\n\n    case MESSAGES:\n      return MessagesItem;\n\n    case REPORTS:\n    case RESOURCES:\n    case USERS:\n      return ListItem;\n\n    case TEXT:\n      return TextItem;\n\n    case SPACER:\n      return SpacerItem;\n\n    case APP:\n      return AppItem;\n\n    default:\n      return NotSupportedItem;\n  }\n};\n\nexport const Item = props => {\n  const GridItem = getGridItem(props.item.type);\n  return <GridItem item={props.item} editMode={props.editMode} itemFilters={props.editMode ? DEFAULT_STATE_ITEM_FILTERS : props.itemFilters} onToggleItemExpanded={props.onToggleItemExpanded} />;\n};\nItem.propTypes = {\n  editMode: PropTypes.bool,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object,\n  onToggleItemExpanded: PropTypes.func\n};","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nexport const NoContentMessage = ({\n  text\n}) => <div style={{\n  padding: '50px 10px',\n  textAlign: 'center',\n  fontSize: '15px',\n  fontWeight: 500,\n  color: colors.grey600\n}}>\n        {text}\n    </div>;\nNoContentMessage.propTypes = {\n  text: PropTypes.string\n};\nexport default NoContentMessage;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash/debounce';\nimport pick from 'lodash/pick';\nconst defaultDebounceMs = 100;\nconst defaultBufferFactor = 0.25;\n\nclass ProgressiveLoadingContainer extends Component {\n  static propTypes = {\n    children: PropTypes.node.isRequired,\n    bufferFactor: PropTypes.number,\n    className: PropTypes.string,\n    debounceMs: PropTypes.number,\n    style: PropTypes.object\n  };\n  static defaultProps = {\n    debounceMs: defaultDebounceMs,\n    bufferFactor: defaultBufferFactor\n  };\n  state = {\n    shouldLoad: false\n  };\n  containerRef = null;\n  shouldLoadHandler = null;\n\n  checkShouldLoad() {\n    const bufferPx = this.props.bufferFactor * window.innerHeight;\n\n    if (!this.containerRef) {\n      return;\n    }\n\n    const rect = this.containerRef.getBoundingClientRect();\n\n    if (rect.bottom > -bufferPx && rect.top < window.innerHeight + bufferPx) {\n      this.setState({\n        shouldLoad: true\n      });\n      this.removeHandler();\n    }\n  }\n\n  registerHandler() {\n    this.shouldLoadHandler = debounce(() => this.checkShouldLoad(), this.props.debounceMs);\n    const containers = [window, // this is probably unnecessary\n    ...document.getElementsByClassName('app-shell-app')];\n    containers.forEach(container => {\n      container.addEventListener('scroll', this.shouldLoadHandler);\n    });\n  }\n\n  removeHandler() {\n    const containers = [window, // this is probably unnecessary\n    ...document.getElementsByClassName('app-shell-app')];\n    containers.forEach(container => {\n      container.removeEventListener('scroll', this.shouldLoadHandler);\n    });\n  }\n\n  componentDidMount() {\n    this.registerHandler();\n    this.checkShouldLoad();\n  }\n\n  componentWillUnmount() {\n    this.removeHandler();\n  }\n\n  render() {\n    const {\n      children,\n      className,\n      style,\n      ...props\n    } = this.props;\n    const {\n      shouldLoad\n    } = this.state;\n    const eventProps = pick(props, ['onMouseDown', 'onTouchStart', 'onMouseUp', 'onTouchEnd']);\n    return <div ref={ref => this.containerRef = ref} style={style} className={className} {...eventProps}>\n                {shouldLoad && children}\n            </div>;\n  }\n\n}\n\nexport default ProgressiveLoadingContainer;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ReactGridLayout from 'react-grid-layout';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport { acUpdateDashboardLayout, acRemoveDashboardItem } from '../../actions/editDashboard';\nimport { Item } from '../Item/Item';\nimport { resize as pluginResize } from '../Item/VisualizationItem/plugin';\nimport { isVisualizationType } from '../../modules/itemTypes';\nimport { GRID_ROW_HEIGHT, GRID_COMPACT_TYPE, MARGIN, getGridColumns, hasShape, onItemResize } from './gridUtil';\nimport { orArray } from '../../modules/util';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\nimport './ItemGrid.css';\nimport { sGetSelectedId, sGetSelectedIsLoading } from '../../reducers/selected';\nimport { sGetEditDashboardRoot, sGetEditDashboardItems } from '../../reducers/editDashboard';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport ProgressiveLoadingContainer from '../Item/ProgressiveLoadingContainer'; // Component\n\nconst EXPANDED_HEIGHT = 17; // this is set in the .dashboard-item-content css\n\nexport const ITEM_CONTENT_PADDING_BOTTOM = 4;\nexport class ItemGrid extends Component {\n  state = {\n    expandedItems: {}\n  };\n  onToggleItemExpanded = clickedId => {\n    const isExpanded = typeof this.state.expandedItems[clickedId] === 'boolean' ? this.state.expandedItems[clickedId] : false;\n    const expandedItems = { ...this.state.expandedItems\n    };\n    expandedItems[clickedId] = !isExpanded;\n    this.setState({\n      expandedItems\n    });\n  };\n  onRemoveItem = clickedId => {\n    this.props.acRemoveDashboardItem(clickedId);\n  };\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.edit) {\n      this.setState({\n        expandedItems: {}\n      });\n    }\n  }\n\n  onLayoutChange = newLayout => {\n    if (this.props.edit) {\n      this.props.acUpdateDashboardLayout(newLayout);\n    }\n  };\n  onResizeStop = (layout, oldItem, newItem) => {\n    onItemResize(newItem.i);\n    const dashboardItem = this.props.dashboardItems.find(item => item.id === newItem.i); // call resize on the item component if it's a plugin type\n\n    if (dashboardItem && isVisualizationType(dashboardItem)) {\n      pluginResize(dashboardItem);\n    }\n  };\n  onRemoveItemWrapper = id => () => this.onRemoveItem(id);\n  adjustHeightForExpanded = dashboardItem => {\n    const expandedItem = this.state.expandedItems[dashboardItem.id];\n\n    if (expandedItem && expandedItem === true) {\n      return Object.assign({}, dashboardItem, {\n        h: dashboardItem.h + EXPANDED_HEIGHT\n      });\n    }\n\n    return dashboardItem;\n  };\n  getItemComponent = item => {\n    const itemClassNames = [item.type, this.props.edit ? 'edit' : 'view'].join(' ');\n    return <ProgressiveLoadingContainer key={item.i} className={itemClassNames}>\n                <Item item={item} editMode={this.props.edit} onToggleItemExpanded={this.onToggleItemExpanded} />\n            </ProgressiveLoadingContainer>;\n  };\n  getItemComponents = items => items.map(item => this.getItemComponent(item));\n\n  render() {\n    const {\n      edit,\n      isLoading,\n      dashboardItems\n    } = this.props;\n\n    if (!isLoading && !dashboardItems.length) {\n      return <NoContentMessage text={i18n.t('There are no items on this dashboard')} />;\n    }\n\n    const items = edit ? dashboardItems : dashboardItems.map(this.adjustHeightForExpanded);\n    return <div className=\"grid-wrapper\">\n                {isLoading ? <Layer translucent>\n                        <CenteredContent>\n                            <CircularLoader />\n                        </CenteredContent>\n                    </Layer> : null}\n                <ReactGridLayout onLayoutChange={this.onLayoutChange} onResizeStop={this.onResizeStop} className=\"layout\" layout={items} margin={MARGIN} cols={getGridColumns()} rowHeight={GRID_ROW_HEIGHT} width={window.innerWidth} compactType={GRID_COMPACT_TYPE} isDraggable={edit} isResizable={edit} draggableCancel=\"input,textarea\">\n                    {this.getItemComponents(items)}\n                </ReactGridLayout>\n            </div>;\n  }\n\n}\nItemGrid.propTypes = {\n  acRemoveDashboardItem: PropTypes.func,\n  acUpdateDashboardLayout: PropTypes.func,\n  dashboardItems: PropTypes.array,\n  edit: PropTypes.bool,\n  isLoading: PropTypes.bool\n};\nItemGrid.defaultProps = {\n  dashboardItems: []\n}; // Container\n\nconst mapStateToProps = (state, ownProps) => {\n  const selectedDashboard = ownProps.edit ? sGetEditDashboardRoot(state) : sGetDashboardById(state, sGetSelectedId(state));\n  const dashboardItems = ownProps.edit ? sGetEditDashboardItems(state) : sGetDashboardItems(state);\n  return {\n    isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n    dashboardItems\n  };\n};\n\nconst mapDispatchToProps = {\n  acUpdateDashboardLayout,\n  acRemoveDashboardItem\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n  const validItems = orArray(stateProps.dashboardItems).filter(hasShape);\n  return { ...dispatchProps,\n    edit: ownProps.edit,\n    isLoading: stateProps.isLoading,\n    dashboardItems: validItems,\n    onItemResize\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps, mergeProps)(ItemGrid);","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { colors } from '@dhis2/ui';\nconst styles = {\n  badgeContainer: {\n    margin: '2px',\n    padding: '0 16px',\n    borderRadius: '4px',\n    color: colors.white,\n    backgroundColor: '#212934',\n    height: 36,\n    display: 'flex',\n    alignItems: 'center'\n  },\n  badge: {\n    fontSize: '13px',\n    cursor: 'pointer',\n    whiteSpace: 'nowrap'\n  },\n  badgeRemove: {\n    fontSize: '12px',\n    textDecoration: 'underline',\n    marginLeft: '24px',\n    cursor: 'pointer'\n  }\n};\n\nclass FilterBadge extends Component {\n  onClick = id => () => this.props.onClick(id);\n  onRemove = id => () => this.props.onRemove(id);\n\n  render() {\n    const {\n      data\n    } = this.props;\n    return <div style={styles.badgeContainer}>\n                <span style={styles.badge} onClick={this.onClick(data.id)}>\n                    {`${data.name}: ${data.values.length > 1 ? i18n.t('{{count}} selected', {\n          count: data.values.length\n        }) : data.values[0].name}`}\n                </span>\n                <span style={styles.badgeRemove} onClick={this.onRemove(data.id)}>\n                    {i18n.t('Remove')}\n                </span>\n            </div>;\n  }\n\n}\n\nFilterBadge.propTypes = {\n  data: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired,\n  onRemove: PropTypes.func.isRequired\n};\nFilterBadge.defaultProps = {\n  onClick: Function.prototype,\n  onRemove: Function.prototype\n};\nexport default FilterBadge;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { createSelector } from 'reselect';\nimport { sGetDimensions } from '../../reducers/dimensions';\nimport { sGetItemFiltersRoot } from '../../reducers/itemFilters';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { getControlBarHeight } from '../ControlBar/controlBarDimensions';\nimport { acRemoveItemFilter } from '../../actions/itemFilters';\nimport { acRemoveEditItemFilter } from '../../actions/editItemFilters';\nimport { acSetActiveModalDimension } from '../../actions/activeModalDimension';\nimport FilterBadge from './FilterBadge';\nimport classes from './styles/FilterBar.module.css';\nexport class FilterBar extends Component {\n  onBadgeRemove = id => {\n    this.props.removeItemFilter(id);\n    this.props.removeEditItemFilter(id);\n  };\n  onBadgeClick = id => {\n    this.props.setActiveModalDimension({\n      id,\n      name: this.props.filters.find(item => item.id === id).name\n    });\n  };\n\n  render() {\n    const {\n      filters,\n      userRows\n    } = this.props;\n    const top = getControlBarHeight(userRows) + 10;\n    return filters.length ? <div className={classes.bar} style={{\n      top\n    }}>\n                {filters.map(filter => <FilterBadge key={filter.id} data={filter} onClick={this.onBadgeClick} onRemove={this.onBadgeRemove} />)}\n            </div> : null;\n  }\n\n}\nFilterBar.propTypes = {\n  filters: PropTypes.array.isRequired,\n  removeEditItemFilter: PropTypes.func.isRequired,\n  removeItemFilter: PropTypes.func.isRequired,\n  setActiveModalDimension: PropTypes.func,\n  userRows: PropTypes.number\n};\nFilterBar.defaultProps = {\n  filters: [],\n  removeItemFIlter: Function.prototype,\n  removeEditItemFilter: Function.prototype\n}; // simplify the filters structure to:\n// [{ id: 'pe', name: 'Period', values: [{ id: 2019: name: '2019' }, {id: 'LAST_MONTH', name: 'Last month' }]}, ...]\n\nconst filtersSelector = createSelector([sGetItemFiltersRoot, sGetDimensions], (filters, dimensions) => Object.keys(filters).reduce((arr, id) => {\n  arr.push({\n    id: id,\n    name: dimensions.find(dimension => dimension.id === id).name,\n    values: filters[id].map(value => ({\n      id: value.id,\n      name: value.displayName || value.name\n    }))\n  });\n  return arr;\n}, []));\n\nconst mapStateToProps = state => ({\n  filters: filtersSelector(state),\n  userRows: sGetControlBarUserRows(state)\n});\n\nexport default connect(mapStateToProps, {\n  setActiveModalDimension: acSetActiveModalDimension,\n  removeItemFilter: acRemoveItemFilter,\n  removeEditItemFilter: acRemoveEditItemFilter\n})(FilterBar);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TitleBar from '../TitleBar/TitleBar';\nimport ItemGrid from '../ItemGrid/ItemGrid';\nimport FilterBar from '../FilterBar/FilterBar';\nexport const DashboardContent = props => <>\n        <TitleBar edit={props.editMode} />\n        <FilterBar />\n        <ItemGrid edit={props.editMode} />\n    </>;\nDashboardContent.propTypes = {\n  editMode: PropTypes.bool\n};\nexport default DashboardContent;","import React from 'react';\nimport { connect } from 'react-redux';\nimport isEmpty from 'lodash/isEmpty';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport { sGetAllDashboards, sDashboardsIsFetching } from '../../reducers/dashboards';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport DashboardsBar from '../ControlBar/DashboardsBar';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport DashboardContent from './DashboardContent';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nexport const Content = ({\n  hasDashboardContent,\n  dashboardsIsEmpty\n}) => {\n  const msg = dashboardsIsEmpty ? i18n.t('No dashboards found. Use the + button to create a new dashboard.') : i18n.t('Requested dashboard not found');\n  return hasDashboardContent ? <DashboardContent editMode={false} /> : <NoContentMessage text={msg} />;\n};\nContent.propTypes = {\n  dashboardsIsEmpty: PropTypes.bool,\n  hasDashboardContent: PropTypes.bool\n};\nexport const ViewDashboard = ({\n  id,\n  dashboardsIsEmpty,\n  dashboardsLoaded\n}) => {\n  const hasDashboardContent = id && !dashboardsIsEmpty;\n  const contentNotReady = !dashboardsLoaded || id === null;\n  return <>\n            <DashboardsBar />\n            <DashboardVerticalOffset />\n            <div className=\"dashboard-wrapper\">\n                {contentNotReady ? null : <Content hasDashboardContent={hasDashboardContent} dashboardsIsEmpty={dashboardsIsEmpty} />}\n            </div>\n        </>;\n};\nViewDashboard.propTypes = {\n  dashboardsIsEmpty: PropTypes.bool,\n  dashboardsLoaded: PropTypes.bool,\n  id: PropTypes.string\n};\n\nconst mapStateToProps = state => {\n  const dashboards = sGetAllDashboards(state);\n  return {\n    id: sGetSelectedId(state),\n    dashboardsIsEmpty: isEmpty(dashboards),\n    dashboardsLoaded: !sDashboardsIsFetching(state)\n  };\n};\n\nexport default connect(mapStateToProps)(ViewDashboard);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Button, Modal, ModalContent, ModalActions, ButtonStrip, ModalTitle } from '@dhis2/ui';\nimport classes from './styles/ConfirmDeleteDialog.module.css';\nexport const ConfirmDeleteDialog = ({\n  dashboardName,\n  onDeleteConfirmed,\n  onContinueEditing,\n  open\n}) => {\n  const actions = [<Button key=\"cancel\" secondary onClick={onContinueEditing}>\n            {i18n.t('Cancel')}\n        </Button>, <Button key=\"delete\" destructive onClick={onDeleteConfirmed}>\n            {i18n.t('Delete')}\n        </Button>];\n  return open && <Modal onClose={onContinueEditing} small position=\"middle\">\n                <ModalTitle>{i18n.t('Delete dashboard')}</ModalTitle>\n                <ModalContent>\n                    <span className={classes.content}>\n                        {i18n.t('Deleting dashboard \"{{ dashboardName }}\" will remove it for all users. This action cannot be undone. Are you sure you want to permanently delete this dashboard?', {\n          dashboardName\n        })}\n                    </span>\n                </ModalContent>\n                <ModalActions>\n                    <ButtonStrip>{actions}</ButtonStrip>\n                </ModalActions>\n            </Modal>;\n};\nConfirmDeleteDialog.propTypes = {\n  dashboardName: PropTypes.string,\n  open: PropTypes.bool,\n  onContinueEditing: PropTypes.func,\n  onDeleteConfirmed: PropTypes.func\n};\nexport default ConfirmDeleteDialog;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport ControlBar from './ControlBar';\nimport TranslationDialog from '@dhis2/d2-ui-translation-dialog';\nimport { Button } from '@dhis2/ui';\nimport ConfirmDeleteDialog from './ConfirmDeleteDialog';\nimport { tSaveDashboard, acClearEditDashboard } from '../../actions/editDashboard';\nimport { tDeleteDashboard, acSetDashboardDisplayName } from '../../actions/dashboards';\nimport { sGetEditDashboardRoot, sGetIsNewDashboard } from '../../reducers/editDashboard';\nimport { CONTROL_BAR_ROW_HEIGHT, MIN_ROW_COUNT, getControlBarHeight } from './controlBarDimensions';\nimport { apiFetchDashboard } from '../../api/dashboards';\nimport classes from './styles/DashboardsBar.module.css';\nconst buttonBarStyle = {\n  height: CONTROL_BAR_ROW_HEIGHT,\n  paddingTop: '15px',\n  marginLeft: '15px',\n  marginRight: '15px'\n};\nexport class EditBar extends Component {\n  state = {\n    translationDialogIsOpen: false,\n    dashboardModel: undefined,\n    confirmDeleteDialogOpen: false,\n    redirectUrl: undefined\n  };\n  onConfirmDelete = () => {\n    this.setState({\n      confirmDeleteDialogOpen: true\n    });\n  };\n  onSave = () => {\n    this.props.onSave().then(newId => {\n      this.setState({\n        redirectUrl: `/${newId}`\n      });\n    });\n  };\n  onDiscard = () => {\n    this.props.onDiscardChanges();\n    const redirectUrl = this.props.dashboardId ? `/${this.props.dashboardId}` : '/';\n    this.setState({\n      redirectUrl\n    });\n  };\n  onContinueEditing = () => {\n    this.setState({\n      confirmDeleteDialogOpen: false\n    });\n  };\n  onDeleteConfirmed = () => {\n    this.setState({\n      confirmDeleteDialogOpen: false\n    });\n    this.props.onDelete(this.props.dashboardId).then(() => {\n      this.setState({\n        redirectUrl: '/'\n      });\n    });\n  };\n  onTranslationsSaved = async translations => {\n    if (translations && translations.length) {\n      const dbLocale = await this.context.d2.currentUser.userSettings.get('keyDbLocale');\n      const translation = translations.find(t => t.locale === dbLocale && t.property === 'NAME');\n\n      if (translation && translation.value) {\n        this.props.onTranslate(this.props.dashboardId, translation.value);\n      }\n    }\n  };\n  fetchDashboardModel = () => {\n    if (this.props.dashboardId && !this.state.dashboardModel) {\n      apiFetchDashboard(this.props.dashboardId).then(dashboardModel => this.setState({\n        dashboardModel\n      }));\n    }\n  };\n\n  componentDidMount() {\n    this.fetchDashboardModel();\n  }\n\n  componentDidUpdate() {\n    this.fetchDashboardModel();\n  }\n\n  toggleTranslationDialog = () => {\n    this.setState({\n      translationDialogIsOpen: !this.state.translationDialogIsOpen\n    });\n  };\n  confirmDeleteDialog = () => this.props.deleteAccess && this.props.dashboardId ? <ConfirmDeleteDialog dashboardName={this.props.dashboardName} onDeleteConfirmed={this.onDeleteConfirmed} onContinueEditing={this.onContinueEditing} open={this.state.confirmDeleteDialogOpen} /> : null;\n  translationDialog = () => this.state.dashboardModel && this.state.dashboardModel.id ? <TranslationDialog className=\"translation-dialog\" d2={this.context.d2} open={this.state.translationDialogIsOpen} onRequestClose={this.toggleTranslationDialog} objectToTranslate={this.state.dashboardModel} fieldsToTranslate={['name', 'description']} // TODO handle messages in snackbar\n  onTranslationSaved={this.onTranslationsSaved} onTranslationError={err => console.log('translation update error', err)} /> : null;\n\n  render() {\n    if (this.state.redirectUrl) {\n      return <Redirect to={this.state.redirectUrl} />;\n    }\n\n    const {\n      dashboardId,\n      deleteAccess,\n      updateAccess\n    } = this.props;\n    const controlBarHeight = getControlBarHeight(MIN_ROW_COUNT);\n    const discardBtnText = updateAccess ? i18n.t('Exit without saving') : i18n.t('Go to dashboards');\n    return <>\n                <ControlBar height={controlBarHeight} editMode={true}>\n                    <div style={buttonBarStyle}>\n                        {updateAccess ? <div className={classes.leftControls}>\n                                <span style={{\n              marginRight: '15px'\n            }}>\n                                    <Button primary onClick={this.onSave}>\n                                        {i18n.t('Save changes')}\n                                    </Button>\n                                </span>\n\n                                {dashboardId ? <span style={{\n              marginRight: '15px'\n            }}>\n                                        <Button onClick={this.toggleTranslationDialog}>\n                                            {i18n.t('Translate')}\n                                        </Button>\n                                    </span> : null}\n                                {dashboardId && deleteAccess ? <Button onClick={this.onConfirmDelete}>\n                                        {i18n.t('Delete')}\n                                    </Button> : null}\n                            </div> : null}\n\n                        <div className={classes.rightControls}>\n                            <Button secondary onClick={this.onDiscard}>\n                                {discardBtnText}\n                            </Button>\n                        </div>\n                    </div>\n                </ControlBar>\n                {this.translationDialog()}\n                {this.confirmDeleteDialog()}\n            </>;\n  }\n\n}\nEditBar.propTypes = {\n  dashboardId: PropTypes.string,\n  dashboardName: PropTypes.string,\n  deleteAccess: PropTypes.bool,\n  updateAccess: PropTypes.bool,\n  onDelete: PropTypes.func,\n  onDiscardChanges: PropTypes.func,\n  onSave: PropTypes.func,\n  onTranslate: PropTypes.func\n};\nEditBar.contextTypes = {\n  d2: PropTypes.object\n};\n\nconst mapStateToProps = state => {\n  const dashboard = sGetEditDashboardRoot(state);\n  let deleteAccess;\n  let updateAccess;\n\n  if (sGetIsNewDashboard(state)) {\n    deleteAccess = true;\n    updateAccess = true;\n  } else {\n    updateAccess = dashboard.access ? dashboard.access.update : false;\n    deleteAccess = dashboard.access ? dashboard.access.delete : false;\n  }\n\n  return {\n    dashboardId: dashboard.id,\n    dashboardName: dashboard.name,\n    deleteAccess,\n    updateAccess\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  onSave: () => dispatch(tSaveDashboard()).then(id => id),\n  onDelete: id => dispatch(tDeleteDashboard(id)),\n  onDiscardChanges: () => dispatch(acClearEditDashboard()),\n  onTranslate: (id, value) => dispatch(acSetDashboardDisplayName(id, value))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditBar);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport { acSetEditDashboard } from '../../actions/editDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { sGetDashboardById, sGetDashboardItems, sDashboardsIsFetching } from '../../reducers/dashboards';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport DashboardContent from './DashboardContent';\nimport EditBar from '../ControlBar/EditBar';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nexport const Content = ({\n  updateAccess\n}) => {\n  return updateAccess ? <DashboardContent editMode={true} /> : <NoContentMessage text={i18n.t('No access')} />;\n};\nContent.propTypes = {\n  updateAccess: PropTypes.bool\n};\nexport class EditDashboard extends Component {\n  state = {\n    initialized: false\n  };\n  initEditDashboard = () => {\n    if (this.props.dashboard) {\n      this.setState({\n        initialized: true\n      });\n      this.props.setEditDashboard(this.props.dashboard, this.props.items);\n    }\n  };\n\n  componentDidMount() {\n    this.initEditDashboard();\n  }\n\n  componentDidUpdate() {\n    if (!this.state.initialized) {\n      this.initEditDashboard();\n    }\n  }\n\n  getDashboardContent = () => {\n    const contentNotReady = !this.props.dashboardsLoaded || this.props.id === null;\n    return <div className=\"dashboard-wrapper\">\n                {contentNotReady ? null : <Content updateAccess={this.props.updateAccess} />}\n            </div>;\n  };\n\n  render() {\n    return <>\n                <EditBar />\n                <DashboardVerticalOffset editMode={true} />\n                {this.getDashboardContent()}\n            </>;\n  }\n\n}\nEditDashboard.propTypes = {\n  dashboard: PropTypes.object,\n  dashboardsLoaded: PropTypes.bool,\n  id: PropTypes.string,\n  items: PropTypes.array,\n  setEditDashboard: PropTypes.func,\n  updateAccess: PropTypes.bool\n};\n\nconst mapStateToProps = state => {\n  const id = sGetSelectedId(state);\n  const dashboard = id ? sGetDashboardById(state, id) : null;\n  const updateAccess = dashboard && dashboard.access ? dashboard.access.update : false;\n  return {\n    dashboard,\n    id,\n    updateAccess,\n    items: sGetDashboardItems(state),\n    dashboardsLoaded: !sDashboardsIsFetching(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setEditDashboard: acSetEditDashboard\n})(EditDashboard);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { acSetEditNewDashboard } from '../../actions/editDashboard';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport EditBar from '../ControlBar/EditBar';\nimport DashboardContent from './DashboardContent';\n\nclass NewDashboard extends Component {\n  componentDidMount() {\n    this.props.setNewDashboard();\n  }\n\n  render() {\n    return <>\n                <EditBar />\n                <DashboardVerticalOffset editMode={true} />\n                <div className=\"dashboard-wrapper\">\n                    <DashboardContent editMode={true} />\n                </div>\n            </>;\n  }\n\n}\n\nNewDashboard.propTypes = {\n  setNewDashboard: PropTypes.func\n};\nexport default connect(null, {\n  setNewDashboard: acSetEditNewDashboard\n})(NewDashboard);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { tSelectDashboard } from '../../actions/dashboards';\nimport { sDashboardsIsFetching } from '../../reducers/dashboards';\nimport { EDIT, NEW } from './dashboardModes';\nimport ViewDashboard from './ViewDashboard';\nimport EditDashboard from './EditDashboard';\nimport NewDashboard from './NewDashboard';\n\nclass Dashboard extends Component {\n  setDashboard = () => {\n    if (this.props.dashboardsLoaded) {\n      const id = this.props.match.params.dashboardId || null;\n      this.props.selectDashboard(id);\n      this.scrollToTop();\n    }\n  };\n  scrollToTop = () => {\n    window.scrollTo(0, 0);\n  };\n\n  componentDidMount() {\n    this.setDashboard();\n  }\n\n  componentDidUpdate() {\n    this.setDashboard();\n  }\n\n  render() {\n    switch (this.props.mode) {\n      case EDIT:\n        return <EditDashboard />;\n\n      case NEW:\n        return <NewDashboard />;\n\n      default:\n        return <ViewDashboard />;\n    }\n  }\n\n}\n\nDashboard.propTypes = {\n  dashboardsLoaded: PropTypes.bool,\n  match: PropTypes.object,\n  mode: PropTypes.string,\n  selectDashboard: PropTypes.func\n};\n\nconst mapStateToProps = state => {\n  return {\n    dashboardsLoaded: !sDashboardsIsFetching(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  selectDashboard: tSelectDashboard\n})(Dashboard);","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { CssVariables } from '@dhis2/ui';\nimport { EDIT, VIEW, NEW } from './Dashboard/dashboardModes';\nimport { acReceivedUser } from '../actions/user';\nimport { tFetchDashboards } from '../actions/dashboards';\nimport { tSetControlBarRows } from '../actions/controlBar';\nimport { tSetDimensions } from '../actions/dimensions';\nimport Dashboard from './Dashboard/Dashboard';\nimport SnackbarMessage from './SnackbarMessage/SnackbarMessage';\nimport './App.css';\nexport class App extends Component {\n  componentDidMount() {\n    this.props.setCurrentUser(this.props.d2.currentUser);\n    this.props.fetchDashboards();\n    this.props.setControlBarRows();\n    this.props.setDimensions(this.props.d2);\n  }\n\n  getChildContext() {\n    return {\n      baseUrl: this.props.baseUrl,\n      i18n,\n      d2: this.props.d2\n    };\n  }\n\n  render() {\n    return <>\n                <CssVariables colors spacers />\n                <Router>\n                    <Switch>\n                        <Route exact path=\"/\" render={props => <Dashboard {...props} mode={VIEW} />} />\n                        <Route exact path=\"/new\" render={props => <Dashboard {...props} mode={NEW} />} />\n                        <Route exact path=\"/:dashboardId\" render={props => <Dashboard {...props} mode={VIEW} />} />\n                        <Route exact path=\"/:dashboardId/edit\" render={props => <Dashboard {...props} mode={EDIT} />} />\n                    </Switch>\n                </Router>\n                <SnackbarMessage />\n            </>;\n  }\n\n}\nApp.propTypes = {\n  fetchDashboards: PropTypes.func.isRequired,\n  setControlBarRows: PropTypes.func.isRequired,\n  setCurrentUser: PropTypes.func.isRequired,\n  setDimensions: PropTypes.func.isRequired,\n  baseUrl: PropTypes.string,\n  d2: PropTypes.object\n};\nApp.childContextTypes = {\n  baseUrl: PropTypes.string,\n  i18n: PropTypes.object,\n  d2: PropTypes.object\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setCurrentUser: currentUser => dispatch(acReceivedUser(currentUser)),\n    fetchDashboards: () => dispatch(tFetchDashboards()),\n    setControlBarRows: () => dispatch(tSetControlBarRows()),\n    setDimensions: d2 => dispatch(tSetDimensions(d2))\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(App);","import { RECEIVED_USER } from '../reducers/user';\nexport const acReceivedUser = value => ({\n  type: RECEIVED_USER,\n  value\n});","/** @module reducers/selected */\nimport { validateReducer } from '../modules/util';\nexport const SET_STYLE = 'SET_STYLE';\nexport const DEFAULT_STATE_STYLE = 'LIST';\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\n\nconst style = (state = DEFAULT_STATE_STYLE, action) => {\n  switch (action.type) {\n    case SET_STYLE:\n      return validateReducer(action.value, DEFAULT_STATE_STYLE);\n\n    default:\n      return state;\n  }\n};\n\nexport default style;\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\n\nexport const sGetStyleRoot = state => state.style;","import { combineReducers } from 'redux';\nimport arraySort from 'd2-utilizr/lib/arraySort';\nimport dashboards, { sGetDashboardsRoot } from './dashboards';\nimport selected from './selected';\nimport dashboardsFilter, { ownerData, sGetFilterName, sGetFilterOrder, sGetFilterOwner } from './dashboardsFilter';\nimport controlBar from './controlBar';\nimport visualizations from './visualizations';\nimport editDashboard from './editDashboard';\nimport messages from './messages';\nimport user from './user';\nimport snackbar from './snackbar';\nimport itemFilters from './itemFilters';\nimport editItemFilters from './editItemFilters';\nimport style from './style';\nimport dimensions from './dimensions';\nimport settings from './settings';\nimport activeModalDimension from './activeModalDimension';\nconst USER = 'system'; // Reducers\n\nexport default combineReducers({\n  dashboards,\n  selected,\n  dashboardsFilter,\n  controlBar,\n  visualizations,\n  messages,\n  user,\n  editDashboard,\n  itemFilters,\n  editItemFilters,\n  style,\n  snackbar,\n  dimensions,\n  settings,\n  activeModalDimension\n}); // Map constants to data\n\nconst mapConstToData = {\n  NAME: 'name',\n  ITEMS: 'numberOfItems',\n  CREATED: 'created',\n  OWNER: 'owner'\n}; // Selectors\n// Filter dashboards by name\n\nexport const sFilterDashboardsByName = (dashboards, filter) => dashboards.filter(d => d.displayName.toLowerCase().includes(filter.toLowerCase())); // Filter dashboards by owner, TODO FIXME\n\nexport const sFilterDashboardsByOwner = (dashboards, filter) => {\n  const ME = ownerData[1]; // TODO\n\n  const OTHERS = ownerData[2]; // TODO\n\n  switch (filter) {\n    case ME:\n      return dashboards.filter(d => d.owner === USER);\n\n    case OTHERS:\n      return dashboards.filter(d => d.owner !== USER);\n\n    default:\n      return dashboards;\n  }\n}; // Filter dashboards by order\n\nexport const sFilterDashboardsByOrder = (dashboards, filter) => {\n  const filterValues = filter.split(':');\n  const key = filterValues[0];\n  const direction = filterValues[1];\n  return arraySort(dashboards, direction, mapConstToData[key]);\n}; // Selectors dependency level 2\n// Get filtered dashboards\n\nexport const sGetFilteredDashboards = state => {\n  const dashboards = sGetDashboardsRoot(state);\n  const nameFilter = sGetFilterName(state);\n  const ownerFilter = sGetFilterOwner(state);\n  const orderFilter = sGetFilterOrder(state);\n  return sFilterDashboardsByOrder(sFilterDashboardsByName(sFilterDashboardsByOwner(dashboards, ownerFilter), nameFilter), orderFilter);\n};","import { createStore, applyMiddleware, compose } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport reducer from './reducers';\n\nconst configureStore = () => {\n  const middleware = [thunk]; // Enable Redux devtools if extension is installed instead of redux-logger\n\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n  if (!window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ && process.env.NODE_ENV !== 'production') {\n    middleware.push(createLogger());\n  }\n\n  return createStore(reducer, composeEnhancers(applyMiddleware(...middleware)));\n};\n\nexport default configureStore;","//------------------------------------------------------------------------------\n// <auto-generated>\n// This code was generated by d2-i18n-generate.\n//\n// Changes to this file may cause incorrect behavior and will be lost if\n// the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\nimport i18n from '@dhis2/d2-i18n';\nimport arTranslations from './ar/translations.json';\nimport ar_IQTranslations from './ar_IQ/translations.json';\nimport daTranslations from './da/translations.json';\nimport enTranslations from './en/translations.json';\nimport esTranslations from './es/translations.json';\nimport frTranslations from './fr/translations.json';\nimport idTranslations from './id/translations.json';\nimport kmTranslations from './km/translations.json';\nimport loTranslations from './lo/translations.json';\nimport myTranslations from './my/translations.json';\nimport nbTranslations from './nb/translations.json';\nimport prsTranslations from './prs/translations.json';\nimport psTranslations from './ps/translations.json';\nimport ptTranslations from './pt/translations.json';\nimport pt_BRTranslations from './pt_BR/translations.json';\nimport ruTranslations from './ru/translations.json';\nimport svTranslations from './sv/translations.json';\nimport tetTranslations from './tet/translations.json';\nimport tgTranslations from './tg/translations.json';\nimport ukTranslations from './uk/translations.json';\nimport urTranslations from './ur/translations.json';\nimport viTranslations from './vi/translations.json';\nimport zhTranslations from './zh/translations.json';\nimport zh_CNTranslations from './zh_CN/translations.json';\nconst namespace = 'default';\ni18n.addResources('ar', namespace, arTranslations);\ni18n.addResources('ar_IQ', namespace, ar_IQTranslations);\ni18n.addResources('da', namespace, daTranslations);\ni18n.addResources('en', namespace, enTranslations);\ni18n.addResources('es', namespace, esTranslations);\ni18n.addResources('fr', namespace, frTranslations);\ni18n.addResources('id', namespace, idTranslations);\ni18n.addResources('km', namespace, kmTranslations);\ni18n.addResources('lo', namespace, loTranslations);\ni18n.addResources('my', namespace, myTranslations);\ni18n.addResources('nb', namespace, nbTranslations);\ni18n.addResources('prs', namespace, prsTranslations);\ni18n.addResources('ps', namespace, psTranslations);\ni18n.addResources('pt', namespace, ptTranslations);\ni18n.addResources('pt_BR', namespace, pt_BRTranslations);\ni18n.addResources('ru', namespace, ruTranslations);\ni18n.addResources('sv', namespace, svTranslations);\ni18n.addResources('tet', namespace, tetTranslations);\ni18n.addResources('tg', namespace, tgTranslations);\ni18n.addResources('uk', namespace, ukTranslations);\ni18n.addResources('ur', namespace, urTranslations);\ni18n.addResources('vi', namespace, viTranslations);\ni18n.addResources('zh', namespace, zhTranslations);\ni18n.addResources('zh_CN', namespace, zh_CNTranslations);\nexport default i18n;","import React from 'react';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport dhis2theme from '@dhis2/d2-ui-core/theme/mui3.theme';\nimport { Provider as ReduxProvider } from 'react-redux';\nimport { D2Shim } from '@dhis2/app-runtime-adapter-d2';\nimport App from './components/App';\nimport configureStore from './configureStore';\nimport './index.css';\nimport './locales';\n\nconst muiTheme = () => createMuiTheme(dhis2theme);\n\nconst schemas = ['chart', 'map', 'report', 'reportTable', 'eventChart', 'eventReport', 'dashboard', 'organisationUnit', 'userGroup'];\nconst appConfig = {\n  schemas\n};\nconst authorization = process.env.REACT_APP_DHIS2_AUTHORIZATION || null; // TODO: ER and EV plugins require the auth header in development mode.\n// Remove this when these plugins are rewritten\n\nif (authorization) {\n  appConfig.headers = {\n    Authorization: authorization\n  };\n}\n\nconst AppWrapper = () => {\n  return <ReduxProvider store={configureStore()}>\n            <MuiThemeProvider theme={muiTheme()}>\n                <D2Shim appConfig={appConfig} i18nRoot=\"./i18n\">\n                    {({\n          d2\n        }) => {\n          if (!d2) {\n            // TODO: Handle errors in d2 initialization\n            return null;\n          }\n\n          return <App d2={d2} />;\n        }}\n                </D2Shim>\n            </MuiThemeProvider>\n        </ReduxProvider>;\n};\n\nexport default AppWrapper;","import isObject from 'lodash/isObject'; // validation\n\nexport function orNull(param) {\n  return param === undefined ? null : param;\n}\nexport function orArray(param) {\n  return Array.isArray(param) ? param : [];\n}\nexport function orObject(param) {\n  return isObject(param) ? param : {};\n} // array\n\nexport function arrayGetById(array, id) {\n  return array.find(item => item.id === id);\n} // object\n\nexport function arrayToIdMap(array) {\n  return array.reduce((obj, item) => {\n    obj[item.id] = item;\n    return obj;\n  }, {});\n} // date\n\nexport function getDate() {\n  const y = Math.floor(Math.random() * 3) + 2015;\n  const M = Math.floor(Math.random() * 12) + 1;\n  const d = Math.floor(Math.random() * 28) + 1; // const h = Math.floor(Math.random() * 23) + 1;\n  // const m = Math.floor(Math.random() * 59) + 1;\n  // const s = Math.floor(Math.random() * 59) + 1;\n\n  return new Date(`${y}-${M}-${d}`).toJSON().replace('T', ' ').substr(0, 10);\n}\nexport const formatDate = (value, uiLocale) => {\n  if (typeof global.Intl !== 'undefined' && Intl.DateTimeFormat) {\n    const locale = uiLocale || 'en';\n    return new Intl.DateTimeFormat(locale, {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    }).format(new Date(value));\n  }\n\n  return value.substr(0, 19).replace('T', ' ');\n};\n/**\n * Sorts an array of objects based on provided date property\n *\n * @param {Array} items Array of objects\n * @param {String} dateProp Name of the date property to be used for sorting\n * @param {Boolean} ascending Whether to sort ascending or descending\n */\n\nexport const sortByDate = (items, dateProp, ascending = true) => {\n  const values = Object.values(items);\n  values.sort((a, b) => {\n    const aDate = new Date(a[dateProp]);\n    const bDate = new Date(b[dateProp]);\n    return ascending ? aDate - bDate : bDate - aDate;\n  });\n  return values;\n}; // reducer validator\n\nexport const validateReducer = (value, defaultValue) => value === undefined || value === null ? defaultValue : value;\nexport const getBaseUrl = d2 => {\n  const api = d2.Api.getApi();\n  const idx = api.baseUrl.indexOf('/api');\n  return idx > -1 ? api.baseUrl.slice(0, idx) : api.baseUrl;\n};\nexport const getWithoutId = object => ({ ...object,\n  id: undefined\n});","import i18n from '@dhis2/d2-i18n';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\nimport ExtensionIcon from '@material-ui/icons/Extension';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport PersonIcon from '@material-ui/icons/Person';\nimport FontDownloadIcon from '@material-ui/icons/FontDownload';\nimport EmailIcon from '@material-ui/icons/Email';\nimport CropFreeIcon from '@material-ui/icons/CropFree';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\nimport { getBaseUrl } from './util'; // Item types\n\nexport const VISUALIZATION = 'VISUALIZATION';\nexport const REPORT_TABLE = 'REPORT_TABLE';\nexport const CHART = 'CHART';\nexport const MAP = 'MAP';\nexport const EVENT_REPORT = 'EVENT_REPORT';\nexport const EVENT_CHART = 'EVENT_CHART';\nexport const APP = 'APP';\nexport const REPORTS = 'REPORTS';\nexport const RESOURCES = 'RESOURCES';\nexport const USERS = 'USERS';\nexport const MESSAGES = 'MESSAGES';\nexport const TEXT = 'TEXT';\nexport const SPACER = 'SPACER';\nconst DOMAIN_TYPE_AGGREGATE = 'AGGREGATE';\nconst DOMAIN_TYPE_TRACKER = 'TRACKER'; // Dashboard helpers\n\nexport const isVisualizationType = item => !!itemTypeMap[item.type].isVisualizationType;\nexport const hasMapView = itemType => itemTypeMap[itemType].domainType === DOMAIN_TYPE_AGGREGATE;\nexport const isTrackerDomainType = itemType => itemTypeMap[itemType].domainType === DOMAIN_TYPE_TRACKER;\nexport const getDefaultItemCount = itemType => itemTypeMap[itemType].defaultItemCount || 5;\nexport const getAppName = itemType => itemTypeMap[itemType].appName || ''; // Item type map\n\nexport const itemTypeMap = {\n  [VISUALIZATION]: {\n    id: VISUALIZATION,\n    endPointName: 'visualizations',\n    propName: 'visualization',\n    pluralTitle: i18n.t('Visualizations'),\n    appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n    appName: 'Data Visualizer',\n    defaultItemCount: 10\n  },\n  [REPORT_TABLE]: {\n    id: REPORT_TABLE,\n    endPointName: 'visualizations',\n    propName: 'visualization',\n    pluralTitle: i18n.t('Pivot tables'),\n    domainType: DOMAIN_TYPE_AGGREGATE,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n    appName: 'Data Visualizer'\n  },\n  [CHART]: {\n    id: CHART,\n    endPointName: 'visualizations',\n    propName: 'visualization',\n    pluralTitle: i18n.t('Charts'),\n    domainType: DOMAIN_TYPE_AGGREGATE,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n    appName: 'Data Visualizer'\n  },\n  [MAP]: {\n    id: MAP,\n    endPointName: 'maps',\n    propName: 'map',\n    pluralTitle: i18n.t('Maps'),\n    domainType: DOMAIN_TYPE_AGGREGATE,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-maps/?id=${id}`,\n    appName: 'Maps'\n  },\n  [EVENT_REPORT]: {\n    id: EVENT_REPORT,\n    endPointName: 'eventReports',\n    propName: 'eventReport',\n    pluralTitle: i18n.t('Event reports'),\n    domainType: DOMAIN_TYPE_TRACKER,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-event-reports/?id=${id}`,\n    appName: 'Event Reports'\n  },\n  [EVENT_CHART]: {\n    id: EVENT_CHART,\n    endPointName: 'eventCharts',\n    propName: 'eventChart',\n    pluralTitle: i18n.t('Event charts'),\n    domainType: DOMAIN_TYPE_TRACKER,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-event-visualizer/?id=${id}`,\n    appName: 'Event Visualizer'\n  },\n  [APP]: {\n    endPointName: 'apps',\n    propName: 'appKey',\n    pluralTitle: i18n.t('Apps')\n  },\n  [REPORTS]: {\n    id: REPORTS,\n    endPointName: 'reports',\n    propName: 'reports',\n    pluralTitle: i18n.t('Reports'),\n    appUrl: (id, type) => {\n      switch (type) {\n        case 'HTML':\n          return `dhis-web-reports/#/standard-report/view/${id}`;\n\n        case 'JASPER_REPORT_TABLE':\n        case 'JASPER_JDBC':\n        default:\n          return `api/reports/${id}/data.pdf?t=${new Date().getTime()}`;\n      }\n    }\n  },\n  [RESOURCES]: {\n    id: RESOURCES,\n    endPointName: 'resources',\n    propName: 'resources',\n    pluralTitle: i18n.t('Resources'),\n    appUrl: id => `api/documents/${id}/data`\n  },\n  [USERS]: {\n    id: USERS,\n    endPointName: 'users',\n    propName: 'users',\n    pluralTitle: i18n.t('Users'),\n    appUrl: id => `dhis-web-dashboard-integration/profile.action?id=${id}`\n  },\n  [TEXT]: {\n    id: TEXT,\n    propName: 'text'\n  },\n  [MESSAGES]: {\n    propName: 'messages'\n  },\n  [SPACER]: {\n    propName: 'text'\n  }\n};\nexport const getEndPointName = type => itemTypeMap[type].endPointName;\nexport const getItemUrl = (type, item, d2) => {\n  let url;\n\n  if (type === APP) {\n    url = item.launchUrl;\n  }\n\n  if (itemTypeMap[type] && itemTypeMap[type].appUrl) {\n    url = `${getBaseUrl(d2)}/${itemTypeMap[type].appUrl(item.id, item.type)}`;\n  }\n\n  return url;\n};\nexport const getItemIcon = type => {\n  switch (type) {\n    case REPORT_TABLE:\n    case EVENT_REPORT:\n    case REPORTS:\n      return TableIcon;\n\n    case CHART:\n    case EVENT_CHART:\n      return ChartIcon;\n\n    case MAP:\n      return MapIcon;\n\n    case APP:\n      return ExtensionIcon;\n\n    case RESOURCES:\n      return DescriptionIcon;\n\n    case USERS:\n      return PersonIcon;\n\n    case TEXT:\n      return FontDownloadIcon;\n\n    case MESSAGES:\n      return EmailIcon;\n\n    case SPACER:\n      return CropFreeIcon;\n\n    default:\n      return NotInterestedIcon;\n  }\n};","import isObject from 'lodash/isObject';\nimport { VIS_TYPE_COLUMN, VIS_TYPE_PIVOT_TABLE } from '@dhis2/analytics';\nimport { apiFetchFavorite, getMapFields } from '../../../api/metadata';\nimport { REPORT_TABLE, CHART, MAP, EVENT_REPORT, EVENT_CHART, itemTypeMap } from '../../../modules/itemTypes';\nimport { getBaseUrl, getWithoutId } from '../../../modules/util';\nimport { getGridItemDomId } from '../../ItemGrid/gridUtil'; //external plugins\n\nconst itemTypeToExternalPlugin = {\n  [MAP]: 'mapPlugin',\n  [EVENT_REPORT]: 'eventReportPlugin',\n  [EVENT_CHART]: 'eventChartPlugin'\n};\n\nconst hasIntegratedPlugin = type => [CHART, REPORT_TABLE].includes(type);\n\nconst getPlugin = type => {\n  if (hasIntegratedPlugin(type)) {\n    return true;\n  }\n\n  const pluginName = itemTypeToExternalPlugin[type];\n  return global[pluginName];\n};\n\nexport const THEMATIC_LAYER = 'thematic';\nexport const pluginIsAvailable = (item = {}, visualization = {}) => {\n  const type = visualization.activeType || item.type;\n  return !!getPlugin(type);\n};\nexport const extractFavorite = item => {\n  if (!isObject(item)) {\n    return null;\n  }\n\n  const propName = itemTypeMap[item.type].propName;\n  return item[propName] || item.reportTable || item.chart || item.map || item.eventReport || item.eventChart || {};\n};\nexport const extractMapView = map => map.mapViews && map.mapViews.find(mv => mv.layer.includes(THEMATIC_LAYER));\nexport const loadPlugin = (plugin, config, credentials) => {\n  if (!(plugin && plugin.load)) {\n    return;\n  }\n\n  plugin.url = credentials.baseUrl;\n  plugin.loadingIndicator = true;\n  plugin.dashboard = true;\n\n  if (credentials.auth) {\n    plugin.auth = credentials.auth;\n  }\n\n  plugin.load(config);\n};\nexport const getId = item => extractFavorite(item).id;\nexport const getName = item => extractFavorite(item).name;\nexport const getDescription = item => extractFavorite(item).description;\nexport const getLink = (item, d2) => {\n  const baseUrl = getBaseUrl(d2);\n  const appUrl = itemTypeMap[item.type].appUrl(getId(item));\n  return `${baseUrl}/${appUrl}`;\n};\nexport const load = async (item, visualization, {\n  credentials,\n  activeType,\n  options = {}\n}) => {\n  const config = { ...visualization,\n    ...options,\n    el: getGridItemDomId(item.id)\n  };\n  const type = activeType || item.type;\n  const plugin = getPlugin(type);\n  loadPlugin(plugin, config, credentials);\n};\nexport const fetch = async item => {\n  const fetchedFavorite = await apiFetchFavorite(getId(item), item.type, {\n    fields: item.type === MAP ? getMapFields() : null\n  });\n  return fetchedFavorite;\n};\nexport const resize = item => {\n  const plugin = getPlugin(item.type);\n\n  if (plugin && plugin.resize) {\n    plugin.resize(getGridItemDomId(item.id));\n  }\n};\nexport const unmount = (item, activeType) => {\n  const plugin = getPlugin(activeType);\n\n  if (plugin && plugin.unmount) {\n    plugin.unmount(getGridItemDomId(item.id));\n  }\n};\nexport const getVisualizationConfig = (visualization, originalType, activeType) => {\n  if (originalType === MAP && originalType !== activeType) {\n    const extractedMapView = extractMapView(visualization);\n\n    if (extractedMapView === undefined) {\n      return null;\n    }\n\n    return getWithoutId({ ...visualization,\n      ...extractedMapView,\n      mapViews: undefined,\n      type: activeType === CHART ? VIS_TYPE_COLUMN : VIS_TYPE_PIVOT_TABLE\n    });\n  } else if (originalType === REPORT_TABLE && activeType === CHART) {\n    return getWithoutId({ ...visualization,\n      type: VIS_TYPE_COLUMN\n    });\n  } else if (originalType === CHART && activeType === REPORT_TABLE) {\n    return getWithoutId({ ...visualization,\n      type: VIS_TYPE_PIVOT_TABLE\n    });\n  }\n\n  return getWithoutId(visualization);\n};","import isFunction from 'd2-utilizr/lib/isFunction';\nimport { orObject } from '../../modules/util'; // Dimensions for the react-grid-layout\n\nexport const GRID_COMPACT_TYPE = 'vertical'; // vertical | horizonal | null\n\nexport const GRID_ROW_HEIGHT = 10;\nconst GRID_COLUMN_WIDTH_PX = 20;\nconst GRID_LAYOUT = 'FLEXIBLE'; // FIXED | FLEXIBLE\n\nexport const MARGIN = [10, 10];\nexport const NEW_ITEM_SHAPE = {\n  x: 0,\n  y: 0,\n  w: 20,\n  h: 29\n}; // Dimensions for getShape\n\nconst NUMBER_OF_ITEM_COLS = 2;\nconst GRID_COLUMNS = 60;\nexport const getGridColumns = () => {\n  switch (GRID_LAYOUT) {\n    case 'FLEXIBLE':\n      return GRID_COLUMNS;\n\n    case 'FIXED':\n      return Math.floor((window.innerWidth - 20) / GRID_COLUMN_WIDTH_PX);\n\n    default:\n      return GRID_COLUMNS;\n  }\n}; // isNonNegativeInteger\n\nconst isNonNegativeInteger = x => Number.isInteger(x) && x >= 0; // Does the item have all the shape properties?\n\n\nexport const hasShape = item => isNonNegativeInteger(item.x) && isNonNegativeInteger(item.y) && isNonNegativeInteger(item.w) && isNonNegativeInteger(item.h); // returns a rectangular grid block dimensioned with x, y, w, h in grid units.\n// based on a grid with 3 items across\n\nexport const getShape = i => {\n  if (!isNonNegativeInteger(i)) {\n    throw new Error('Invalid grid block number');\n  }\n\n  const col = i % NUMBER_OF_ITEM_COLS;\n  const row = Math.floor(i / NUMBER_OF_ITEM_COLS);\n  const itemWidth = Math.floor((GRID_COLUMNS - 1) / NUMBER_OF_ITEM_COLS);\n  const itemHeight = GRID_ROW_HEIGHT * 2;\n  return {\n    x: col * itemWidth,\n    y: row * itemHeight,\n    w: itemWidth,\n    h: itemHeight\n  };\n};\nexport const getGridItemProperties = itemId => {\n  return {\n    i: itemId,\n    minH: 4 // minimum height for item\n\n  };\n};\n/**\n * Calculates the grid item's original height in pixels based\n * on the height in grid units. This calculation\n * is copied directly from react-grid-layout GridItem.js (calcPosition)\n *\n * @param {Object} item item containing shape (x, y, w, h)\n */\n\nconst getOriginalHeight = item => {\n  const originalHeight = Math.round(GRID_ROW_HEIGHT * item.h + Math.max(0, item.h - 1) * MARGIN[1]);\n  return {\n    originalHeight\n  };\n};\n/**\n * Returns an array of items containing the x, y, w, h dimensions\n * and the item's originalheight in pixels\n * @function\n * @param {Array} items\n * @returns {Array}\n */\n\n\nexport const withShape = items => items.map((item, index) => {\n  const itemWithShape = hasShape(item) ? item : Object.assign({}, item, getShape(index));\n  return Object.assign({}, itemWithShape, getOriginalHeight(itemWithShape));\n});\nexport const getGridItemDomId = id => `item-${id}`;\nexport function onItemResize(id) {\n  const el = orObject(document.querySelector(`#${getGridItemDomId(id)}`));\n  if (isFunction(el.setViewportSize)) setTimeout(() => el.setViewportSize(el.clientWidth - 5, el.clientHeight - 5), 10);\n}","import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { getEndPointName } from '../modules/itemTypes'; // Id, name\n\nexport const getIdNameFields = ({\n  rename\n} = {}) => ['id', `${rename ? 'displayName~rename(name)' : 'name,displayName'}`]; // Item\n\nexport const getItemFields = () => ['dimensionItem~rename(id)', 'displayName~rename(name)', 'dimensionItemType']; // Dimension\n\nexport const getDimensionFields = ({\n  withItems\n}) => arrayClean(['dimension', 'legendSet[id]', 'filter', 'programStage', withItems ? `items[${getItemFields().join(',')}]` : ``]); // Axis\n\nexport const getAxesFields = ({\n  withItems\n}) => [`columns[${getDimensionFields({\n  withItems\n}).join(',')}]`, `rows[${getDimensionFields({\n  withItems\n}).join(',')}]`, `filters[${getDimensionFields({\n  withItems\n}).join(',')}]`]; // Favorite\n\nexport const getFavoriteFields = ({\n  withDimensions,\n  withOptions\n}) => {\n  return arrayClean([`${getIdNameFields({\n    rename: true\n  }).join(',')}`, 'displayDescription~rename(description)', withDimensions ? `${getAxesFields({\n    withItems: true\n  }).join(',')}` : ``, withOptions ? ['*', '!attributeDimensions', '!attributeValues', '!category', '!categoryDimensions', '!categoryOptionGroupSetDimensions', '!columnDimensions', '!dataDimensionItems', '!dataElementDimensions', '!dataElementGroupSetDimensions', '!filterDimensions', '!itemOrganisationUnitGroups', '!lastUpdatedBy', '!organisationUnitGroupSetDimensions', '!organisationUnitLevels', '!organisationUnits', '!programIndicatorDimensions', '!relativePeriods', '!reportParams', '!rowDimensions', '!series', '!translations', '!userOrganisationUnit', '!userOrganisationUnitChildren', '!userOrganisationUnitGrandChildren'].join(',') : '']);\n};\nexport const getFavoritesFields = ({\n  withDimensions\n}) => [`reportTable[${getFavoriteFields({\n  withDimensions\n}).join(',')}]`, `chart[${['type', ...getFavoriteFields({\n  withDimensions\n})].join(',')}]`, `map[${getFavoriteFields({\n  withDimensions\n}).join(',')}]`, `eventReport[${getFavoriteFields({\n  withDimensions\n}).join(',')}]`, `eventChart[${getFavoriteFields({\n  withDimensions\n}).join(',')}]`]; // List item\n\nexport const getListItemFields = () => [`reports[${['type', ...getIdNameFields({\n  rename: true\n})].join(',')}]`, `resources[${getIdNameFields({\n  rename: true\n}).join(',')}]`, `users[${getIdNameFields({\n  rename: true\n}).join(',')}]`]; // Map\n\nexport const getMapFields = () => [`${getIdNameFields({\n  rename: true\n}).join(',')}`, 'user,longitude,latitude,zoom,basemap', `mapViews[${getFavoriteFields({\n  withDimensions: true,\n  withOptions: true\n})}]`]; // Api\n// Get more info about the favorite of a dashboard item\n\nexport const apiFetchFavorite = (id, type, {\n  fields\n}) => getInstance().then(d2 => d2.Api.getApi().get(`${getEndPointName(type)}/${id}`, {\n  fields: fields || getFavoriteFields({\n    withDimensions: true,\n    withOptions: true\n  })\n}));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"leftControls\":\"DashboardsBar_leftControls__k-Y57\",\"rightControls\":\"DashboardsBar_rightControls__1cyr1\"};"],"sourceRoot":""}
{"version":3,"sources":["D2App/components/ControlBar/styles/ControlBar.module.css","D2App/components/ControlBar/styles/DashboardItemChip.module.css","D2App/components/ControlBar/styles/ClearButton.module.css","D2App/components/ControlBar/styles/Filter.module.css","D2App/components/ControlBar/styles/ShowMoreButton.module.css","D2App/components/ControlBar/styles/DashboardsBar.module.css","D2App/components/ItemFilter/styles/FilterSelector.module.css","D2App/components/TitleBar/styles/ViewTitleBar.module.css","D2App/components/Item/VisualizationItem/Visualization/styles/NoVisualizationMessage.module.css","D2App/components/Item/VisualizationItem/Visualization/styles/LoadingMask.module.css","D2App/components/Item/VisualizationItem/styles/FatalErrorBoundary.module.css","D2App/components/Item/ItemHeader/styles/DeleteItemButton.module.css","D2App/components/Item/ItemHeader/styles/PrintItemInfo.module.css","D2App/components/Item/VisualizationItem/styles/ItemFooter.module.css","D2App/components/Item/ListItem/Item.module.css","D2App/components/Item/PrintTitlePageItem/styles/Item.module.css","D2App/components/FilterBar/styles/FilterBar.module.css","D2App/components/ItemSelector/styles/HeaderMenuItem.module.css","D2App/components/ItemSelector/styles/ContentMenuItem.module.css","D2App/components/ItemSelector/styles/CategorizedMenuGroup.module.css","D2App/components/ItemSelector/styles/ItemSelector.module.css","D2App/components/TitleBar/styles/EditTitleBar.module.css","D2App/modules/itemTypes.js","D2App/modules/util.js","D2App/components/ItemGrid/gridUtil.js","D2App/components/ControlBar/styles/ConfirmDeleteDialog.module.css","D2App/components/ControlBar/styles/EditBar.module.css","D2App/components/Dashboard/styles/NotSupportedNotice.module.css","D2App/components/Dashboard/styles/PrintInfo.module.css","D2App/components/Dashboard/styles/PrintActionsBar.module.css","D2App/components/Dashboard/styles/PrintLayoutDashboard.module.css","D2App/components/Dashboard/styles/PrintDashboard.module.css","D2App/components/WindowDimensionsProvider.js","D2App/components/ControlBar/ControlBar.js","D2App/icons/Star.js","D2App/api/dataStatistics.js","D2App/components/ControlBar/DashboardItemChip.js","D2App/icons/AddCircle.js","D2App/icons/Search.js","D2App/icons/Clear.js","D2App/components/ControlBar/ClearButton.js","D2App/reducers/dashboardsFilter.js","D2App/modules/isSmallScreen.js","D2App/components/ControlBar/Filter.js","D2App/actions/dashboardsFilter.js","D2App/components/ControlBar/assets/icons.js","D2App/components/ControlBar/ShowMoreButton.js","D2App/components/ControlBar/controlBarDimensions.js","D2App/reducers/controlBar.js","D2App/modules/uiBackendItemConverter.js","D2App/reducers/dashboards.js","D2App/reducers/selected.js","D2App/api/userDataStore.js","D2App/api/controlBar.js","D2App/actions/controlBar.js","D2App/components/ControlBar/DashboardsBar.js","D2App/widgets/NoContentMessage.js","D2App/components/Item/VisualizationItem/assets/icons.js","D2App/reducers/user.js","D2App/reducers/dimensions.js","D2App/reducers/itemFilters.js","D2App/actions/itemFilters.js","D2App/reducers/messages.js","D2App/api/messages.js","D2App/components/Item/MessagesItem/actions.js","D2App/reducers/alert.js","D2App/actions/alert.js","D2App/reducers/visualizations.js","D2App/actions/visualizations.js","D2App/api/metadata.js","D2App/api/index.js","D2App/api/dashboards.js","D2App/api/description.js","D2App/actions/selected.js","D2App/api/localStorage.js","D2App/actions/dashboards.js","D2App/components/ItemFilter/FilterDialog.js","D2App/reducers/settings.js","D2App/reducers/activeModalDimension.js","D2App/actions/activeModalDimension.js","D2App/components/ItemFilter/FilterSelector.js","D2App/components/TitleBar/ViewTitleBar.js","D2App/reducers/editDashboard.js","D2App/api/editDashboard.js","D2App/actions/editDashboard.js","D2App/components/Item/VisualizationItem/Visualization/DefaultPlugin.js","D2App/components/Item/VisualizationItem/Visualization/NoVisualizationMessage.js","D2App/components/Item/VisualizationItem/Visualization/MapPlugin.js","D2App/components/Item/VisualizationItem/Visualization/LoadingMask.js","D2App/components/Item/VisualizationItem/Visualization/getFilteredVisualization.js","D2App/components/Item/VisualizationItem/Visualization/getVisualizationConfig.js","D2App/modules/memoizeOne.js","D2App/components/Item/VisualizationItem/Visualization/Visualization.js","D2App/components/Item/VisualizationItem/FatalErrorBoundary.js","D2App/components/Item/ItemHeader/ViewItemActions.js","D2App/components/Item/ItemHeader/DeleteItemButton.js","D2App/components/Item/ItemHeader/EditItemActions.js","D2App/icons/Info.js","D2App/components/Item/ItemHeader/PrintItemInfo.js","D2App/components/Dashboard/dashboardModes.js","D2App/components/Item/ItemHeader/ItemHeader.js","D2App/components/Item/VisualizationItem/ItemHeaderButtons.js","D2App/components/Item/VisualizationItem/ItemFooter.js","D2App/components/Item/VisualizationItem/Item.js","D2App/widgets/Line.js","D2App/components/Item/MessagesItem/Item.js","D2App/components/Item/NotSupportedItem/Item.js","D2App/icons/Description.js","D2App/icons/Delete.js","D2App/components/Item/ListItem/Item.js","D2App/components/Item/ListItem/actions.js","D2App/reducers/printDashboard.js","D2App/components/Item/TextItem/Item.js","D2App/components/Item/AppItem/Item.js","D2App/components/Item/SpacerItem/Item.js","D2App/components/Item/PageBreakItem/Item.js","D2App/components/Item/PrintTitlePageItem/Item.js","D2App/components/Item/Item.js","D2App/components/Item/ProgressiveLoadingContainer.js","D2App/components/ItemGrid/ItemGrid.js","D2App/components/FilterBar/FilterBadge.js","D2App/components/FilterBar/FilterBar.js","D2App/reducers/windowHeight.js","D2App/actions/printDashboard.js","D2App/components/Dashboard/ViewDashboard.js","D2App/components/ItemSelector/ItemSearchField.js","D2App/components/ItemSelector/HeaderMenuItem.js","D2App/icons/Launch.js","D2App/components/ItemSelector/ContentMenuItem.js","D2App/components/ItemSelector/actions.js","D2App/components/ItemSelector/selectableItems.js","D2App/components/ItemSelector/CategorizedMenuGroup.js","D2App/components/ItemSelector/SinglesMenuGroup.js","D2App/components/ItemSelector/ItemSelector.js","D2App/components/TitleBar/EditTitleBar.js","D2App/components/ControlBar/ConfirmDeleteDialog.js","D2App/components/ControlBar/EditBar.js","D2App/components/Dashboard/NotSupportedNotice.js","D2App/components/Dashboard/PrintInfo.js","D2App/icons/LessHorizontal.js","D2App/components/Dashboard/PrintActionsBar.js","D2App/modules/printUtils.js","D2App/components/ItemGrid/PrintLayoutItemGrid.js","D2App/components/Dashboard/PrintLayoutDashboard.js","D2App/components/Dashboard/EditDashboard.js","D2App/components/Dashboard/NewDashboard.js","D2App/components/ItemGrid/PrintItemGrid.js","D2App/components/Dashboard/PrintDashboard.js","D2App/actions/windowHeight.js","D2App/components/Dashboard/Dashboard.js","D2App/components/AlertBar/AlertBar.js","D2App/actions/user.js","D2App/api/settings.js","D2App/components/App.js","D2App/actions/dimensions.js","D2App/actions/settings.js","D2App/reducers/style.js","D2App/reducers/index.js","D2App/configureStore.js","D2App/locales/index.js","D2App/AppWrapper.js","D2App/modules/item.js","D2App/components/Item/VisualizationItem/Visualization/plugin.js","D2App/components/Item/ItemHeader/styles/ItemHeader.module.css"],"names":["module","exports","VISUALIZATION","REPORT_TABLE","CHART","MAP","EVENT_REPORT","EVENT_CHART","APP","REPORTS","RESOURCES","USERS","MESSAGES","TEXT","SPACER","PAGEBREAK","PRINT_TITLE_PAGE","DOMAIN_TYPE_AGGREGATE","DOMAIN_TYPE_TRACKER","isVisualizationType","item","itemTypeMap","type","hasMapView","itemType","domainType","isTrackerDomainType","getDefaultItemCount","defaultItemCount","getAppName","appName","id","endPointName","propName","pluralTitle","i18n","t","appUrl","dataStatisticsName","Date","getTime","getEndPointName","getDataStatisticsName","getItemUrl","baseUrl","url","launchUrl","getItemIcon","TableIcon","ChartIcon","MapIcon","ExtensionIcon","DescriptionIcon","PersonIcon","FontDownloadIcon","EmailIcon","CropFreeIcon","NotInterestedIcon","orArray","param","Array","isArray","orObject","isObject","arrayToIdMap","array","reduce","obj","formatDate","value","uiLocale","global","Intl","DateTimeFormat","locale","year","month","day","format","substr","replace","validateReducer","defaultValue","undefined","GRID_COMPACT_TYPE","GRID_ROW_HEIGHT","MARGIN","NEW_ITEM_SHAPE","x","y","w","h","MAX_ITEM_GRID_HEIGHT","MAX_ITEM_GRID_HEIGHT_OIPP","MAX_ITEM_GRID_WIDTH_OIPP","A4_LANDSCAPE_WIDTH_PX","getGridColumns","isNonNegativeInteger","Number","isInteger","hasShape","getGridItemProperties","itemId","i","minH","getPageBreakItemShape","yPos","isStatic","GRID_COLUMNS","static","getPrintTitlePageItemShape","isOneItemPerPage","withShape","items","map","index","itemWithShape","Object","assign","Error","col","row","Math","floor","itemWidth","MAX_ITEM_GRID_WIDTH","itemHeight","getShape","originalHeight","round","max","getOriginalHeight","getGridItemDomId","onItemResize","el","document","querySelector","isFunction","setViewportSize","setTimeout","clientWidth","clientHeight","WindowDimensionsCtx","createContext","windowDims","height","window","innerHeight","width","innerWidth","WindowDimensionsProvider","children","dimensions","setDimensions","useState","useEffect","handleResize","debounce","addEventListener","removeEventListener","Provider","useWindowDimensions","useContext","ControlBar","React","Component","constructor","props","super","onStartDrag","this","setState","dragging","onDrag","onEndDrag","event","preventDefault","stopPropagation","newHeight","clientY","onChangeHeight","requestAnimationFrame","renderDragHandle","className","classes","draghandle","onMouseDown","data-testid","state","render","rootClass","cx","root","style","content","defaultProps","StarIcon","xmlns","viewBox","d","fill","apiPostDataStatistics","async","eventType","d2","getInstance","Api","getApi","post","DashboardItemChip","starred","selected","label","dashboardId","onClick","chipProps","selectedState","unselected","icon","Star","debouncedPostStatistics","link","to","data-test","AddCircleIcon","colors","teal600","SearchIcon","small","ClearIcon","grey800","ClearButton","onClear","button","Clear","color","SET_DASHBOARDS_FILTER","CLEAR_DASHBOARDS_FILTER","sGetDashboardsFilter","dashboardsFilter","isSmallScreen","mapDispatchToProps","setDashboardsFilter","clearDashboardsFilter","connect","filterText","isMaxHeight","onKeypressEnter","onToggleMaxHeight","focusedClassName","setFocusedClassName","inputFocused","setInputFocus","searchButton","Search","searchIcon","container","onFocus","focused","onBlur","input","placeholder","onChange","target","onKeyUp","keyCode","ref","focus","ChevronDown","ChevronUp","ShowMoreButton","disabled","containerRef","useRef","buttonLabel","onButtonClicked","buttonEl","current","MouseEvent","bubbles","cancelable","dispatchEvent","placement","onMouseOver","onMouseOut","showMore","aria-label","getRowsHeight","rows","getControlBarHeight","FIRST_ROW_PADDING_HEIGHT","CONTROL_BAR","CONTROL_BAR_CONTAINER","CHIPS_CONTAINER","getControlBarHeightSmallDevice","controlBarHeight","SET_CONTROLBAR_USER_ROWS","combineReducers","userRows","action","sGetControlBarUserRows","controlBar","sGetControlBarRoot","spacerContent","emptyTextItemContent","isTextType","text","convertUiItemsToBackend","isUiSpacerType","convertBackendItemsToUi","isBackendSpacerType","gridProperties","SET_DASHBOARDS","ADD_DASHBOARDS","SET_DASHBOARD_STARRED","SET_DASHBOARD_DISPLAY_NAME","SET_DASHBOARD_ITEMS","DEFAULT_STATE_DASHBOARDS","byId","EMPTY_DASHBOARD","updateDashboardProp","prop","sGetDashboardsRoot","dashboards","sGetDashboardById","sDashboardsIsFetching","sGetAllDashboards","sGetDashboardItems","sGetStarredDashboards","values","filter","dashboard","sGetUnstarredDashboards","getCustomDashboards","data","arrayFrom","name","displayName","description","displayDescription","favorite","owner","user","created","split","join","lastUpdated","access","numberOfItems","dashboardItems","length","SET_SELECTED_ID","SET_SELECTED_ISLOADING","SET_SELECTED_SHOWDESCRIPTION","SET_SELECTED_ITEM_ACTIVE_TYPE","CLEAR_SELECTED_ITEM_ACTIVE_TYPES","DEFAULT_STATE_SELECTED_SHOWDESCRIPTION","DEFAULT_STATE_SELECTED_ITEM_ACTIVE_TYPES","isLoading","showDescription","itemActiveTypes","activeType","sGetSelectedRoot","sGetSelectedId","sGetSelectedIsLoading","sGetSelectedShowDescription","sGetSelectedItemActiveType","NAMESPACE","hasNamespace","currentUser","dataStore","has","getNamespace","get","create","apiPostUserDataStoreValue","key","set","apiGetUserDataStoreValue","namespace","keys","find","k","console","log","KEY_CONTROLBAR_ROWS","acSetControlBarUserRows","withRouter","selectedId","history","setRows","createRef","scrollToTop","scroll","toggleMaxHeight","newRows","cancelMaxHeight","getFilteredDashboards","filteredDashboards","arraySort","toLowerCase","includes","viewableRows","getContainerHeight","containerClass","expanded","collapsed","getNumRowsFromHeight","min","apiPostControlBarRows","controls","newLink","AddCircle","Filter","push","chips","chipContainerClasses","chipContainer","getDashboardChips","marginTop","NoContentMessage","padding","textAlign","fontSize","fontWeight","grey600","ThreeDots","SpeechBubble","margin","fillRule","transform","Warning","Fullscreen","ExitFullscreen","RECEIVED_USER","DEFAULT_STATE_USER","username","isSuperuser","sGetUserUsername","SET_DIMENSIONS","DEFAULT_DIMENSIONS","getDimensionById","DIMENSION_ID_PERIOD","DIMENSION_ID_ORGUNIT","sGetDimensions","CLEAR_ITEM_FILTERS","SET_ITEM_FILTERS","ADD_ITEM_FILTER","REMOVE_ITEM_FILTER","DEFAULT_STATE_ITEM_FILTERS","sGetItemFiltersRoot","itemFilters","sGetNamedItemFilters","createSelector","filters","arr","dimension","acRemoveItemFilter","RECEIVED_MESSAGES","sGetMessagesRoot","messages","messageConversationsQuery","resource","params","fields","order","pageSize","tGetMessages","dataEngine","messageConversations","query","error","getMessages","dispatch","err","SET_ALERT_MESSAGE","CLEAR_ALERT_MESSAGE","sGetAlertMessage","alert","acClearAlertMessage","ADD_VISUALIZATION","CLEAR_VISUALIZATIONS","DEFAULT_STATE_VISUALIZATIONS","isEmpty","p","sGetVisualization","visualizations","sGetVisualizationsRoot","acAddVisualization","getIdNameFields","rename","getDimensionFields","withItems","arrayClean","getAxesFields","getFavoriteFields","withDimensions","withOptions","getFavoritesFields","apiFetchVisualization","getVisualizationId","onError","getDashboardItemsFields","withFavorite","getDashboardFields","dashboardsQuery","paging","dashboardQuery","starDashboardMutation","unstarDashboardMutation","deleteDashboardMutation","apiFetchDashboard","variables","KEY_SHOW_DESCRIPTION","acSetSelectedId","acSetSelectedIsLoading","acSetSelectedShowDescription","tSetSelectedDashboardById","getState","alertTimeout","onSuccess","acAppendDashboards","customDashboard","acSetDashboardItems","localStorage","setItem","forEach","getVisualizationFromItem","clearTimeout","tUpdateShowDescription","apiPostShowDescription","tFetchDashboards","acSetDashboards","apiFetchDashboards","tStarDashboard","isStarred","acSetDashboardStarred","mutate","apiStarDashboard","tDeleteDashboard","apiDeleteDashboard","Promise","resolve","initiallySelectedItems","addItemFilter","removeItemFilter","displayNameProperty","onClose","setFilters","useD2","onSelectItems","dimensionId","onDeselectItems","itemIdsToRemove","newList","onReorderItems","itemIds","oldList","reorderedList","dataTest","position","large","commonProps","onSelect","onDeselect","onReorder","selectedItems","selectedPeriods","ouItems","renderDialogContent","secondary","primary","filterItems","ADD_SETTINGS","DEFAULT_SETTINGS","keyDateFormat","keyAnalysisRelativePeriod","keyAnalysisDigitGroupSeparator","rootOrganisationUnit","keyGatherAnalyticalObjectStatisticsInDashboardViews","sGetSettings","settings","sGetSettingsDisplayNameProperty","sGatherAnalyticalObjectStatisticsInDashboardViews","SET_ACTIVE_MODAL_DIMENSION","CLEAR_ACTIVE_MODAL_DIMENSION","DEFAULT_STATE_ACTIVE_MODAL_DIMENSION","sGetActiveModalDimension","activeModalDimension","acSetActiveModalDimension","clearActiveModalDimension","setActiveModalDimension","showPopover","setShowPopover","onCloseDialog","buttonContainer","onClickOutside","reference","arrow","onDimensionClick","selectedIds","ViewTitleBar","moreOptionsIsOpen","setMoreOptionsIsOpen","sharingDialogIsOpen","setSharingDialogIsOpen","redirectUrl","setRedirectUrl","onToggleStarredDashboard","onShowHideDescription","toggleSharingDialog","toggleMoreOptions","StarBorder","showHideDescriptionLabel","toggleStarredDashboardLabel","buttonRef","userAccess","descriptionClasses","descContainer","desc","noDesc","titleBar","title","actions","titleBarIcon","strip","update","editLink","manage","shareButton","moreButton","dense","open","onRequestClose","stateProps","dispatchProps","ownProps","RECEIVED_EDIT_DASHBOARD","RECEIVED_NOT_EDITING","START_NEW_DASHBOARD","RECEIVED_TITLE","RECEIVED_DESCRIPTION","ADD_DASHBOARD_ITEM","REMOVE_DASHBOARD_ITEM","UPDATE_DASHBOARD_ITEM","RECEIVED_DASHBOARD_LAYOUT","SET_PRINT_PREVIEW_VIEW","CLEAR_PRINT_PREVIEW_VIEW","DEFAULT_STATE_EDIT_DASHBOARD","NEW_DASHBOARD_STATE","printPreviewView","sGetEditDashboardRoot","editDashboard","sGetIsEditing","sGetIsPrintPreviewView","sGetEditDashboardItems","createDashboardMutation","updateDashboardMutation","generatePayload","acClearEditDashboard","acAddDashboardItem","itemPropName","generateUid","gridItemProperties","shape","acUpdateDashboardItem","acRemoveDashboardItem","tSaveDashboard","dashboardToSave","response","uid","updateDashboard","postDashboard","DefaultPlugin","visualization","options","useConfig","credentials","auth","defaultHeaders","Authorization","prevItem","prevActiveType","load","unmount","shouldPluginReload","reloadAllowed","visChanged","NoVisualizationMessage","message","MapPlugin","applyFilters","mapViews","mapView","layer","pluginIsAvailable","hideTitle","LoadingMask","center","getFilteredVisualization","visRows","visColumns","columns","visFilters","dimensionFound","dimensionObjects","getWithoutId","object","getVisualizationConfig","originalType","extractedMapView","mv","VIS_TYPE_COLUMN","VIS_TYPE_PIVOT_TABLE","layout","getAdaptedUiLayoutByType","memoizeOne","fn","lastArgs","lastValue","args","every","arg","Visualization","pluginLoaded","onLoadingComplete","memoizedGetFilteredVisualization","memoizedGetVisualizationConfig","availableHeight","pluginProps","d2Config","forDashboard","FatalErrorBoundary","errorFound","componentDidCatch","info","ViewItemActions","actionButtons","itemActionsWrap","DeleteItemButton","deleteItemButton","red500","WarningIcon","PrintWarning","warning","Info","EDIT","NEW","VIEW","PRINT","PRINT_LAYOUT","isEditMode","mode","isPrintMode","isViewMode","ItemHeader","forwardRef","dashboardMode","isShortened","rest","Actions","EditItemActions","PrintItemInfo","getItemActionsMap","itemHeaderWrap","itemTitle","iconFill","ItemHeaderButtons","menuIsOpen","setMenuIsOpen","onSelectActiveType","isTrackerType","onViewTable","closeMenu","onViewChart","onViewMap","canViewAs","isSingleValue","isYearOverYear","VIS_TYPE_GAUGE","VIS_TYPE_PIE","interpretationMenuLabel","activeFooter","ViewAsMenuItems","isFullscreen","onToggleFullscreen","href","getLink","onToggleFooter","fullscreenSupported","ItemFooter","line","scrollContainer","Item","showFooter","configLoaded","isFullscreenSupported","itemDomElSelector","requestFullscreen","webkitRequestFullscreen","handleFullscreenChange","fullscreenElement","webkitFullscreenElement","exitFullscreen","webkitExitFullscreen","getUniqueKey","uniqueId","onToggleItemExpanded","setActiveType","getActiveType","isEditing","getAvailableHeight","calculatedHeight","headerRef","ITEM_CONTENT_PADDING_BOTTOM","memoizedGetContentHeight","contentRef","offsetHeight","measuredHeight","preferMeasured","updateVisualization","gatherDataStatistics","e","onfullscreenchange","onwebkitfullscreenchange","componentWillUnmount","getVisualizationName","shortened","Function","prototype","backgroundColor","grey200","border","Line","PRIVATE","messageTypes","VALIDATION_RESULT","TICKET","SYSTEM","list","listStyleType","paddingLeft","seeAll","marginBottom","sender","lineHeight","snippet","maxHeight","overflow","MessagesContainer","setUiLocale","userSettings","getUiLocale","getMessageHref","msg","msgIdentifier","messageType","modeClass","latestMsg","slice","getMessageSender","readClass","read","msgDate","location","messageCount","getMessageItems","NotSupportedItem","display","justifyContent","alignItems","align","grey500","DeleteIcon","getItemTitle","tRemoveListItemContent","dashboardItem","listItemType","newContent","contentItems","findIndex","getContentItems","contentItem","deleteButton","deletebutton","deleteicon","grey900","Description","itemicon","SET_PRINT_DASHBOARD","CLEAR_PRINT_DASHBOARD","ADD_PRINT_DASHBOARD_ITEM","SET_PRINT_DASHBOARD_LAYOUT","REMOVE_PRINT_DASHBOARD_ITEM","UPDATE_PRINT_DASHBOARD_ITEM","DEFAULT_STATE_PRINT_DASHBOARD","DEFAULT_DASHBOARD_ITEMS","NEW_PRINT_DASHBOARD_STATE","sGetPrintDashboardRoot","printDashboard","sGetIsPrinting","sGetPrintDashboardItems","textDiv","whiteSpace","textField","fontStretch","onChangeText","updatedItem","viewItem","textDivStyle","editItem","onEdit","multiline","fullWidth","printItem","textItem","getIframeSrc","appDetails","iframeSrc","ouIds","ouFilter","path","appKey","system","installedApps","app","dashboardWidget","src","SpacerItem","PageBreakItem","PrintTitlePageItem","titlePage","filterTitle","listItems","filterListItem","val","filterList","getItemFilterList","viewDashboard","sGetPrintDashboardName","sGetPrintDashboardDescription","GridItem","VisualizationItem","MessagesItem","ListItem","TextItem","AppItem","getGridItem","ProgressiveLoadingContainer","shouldLoad","shouldLoadHandler","handlerOptions","passive","checkShouldLoad","bufferPx","bufferFactor","rect","getBoundingClientRect","bottom","top","removeHandler","registerHandler","debounceMs","getElementsByClassName","componentDidMount","eventProps","pick","ItemGrid","expandedItems","clickedId","isExpanded","onLayoutChange","newLayout","edit","acUpdateDashboardLayout","onResizeStop","oldItem","newItem","pluginResize","adjustHeightForExpanded","expandedItem","getItemComponent","itemClassNames","getItemComponents","UNSAFE_componentWillReceiveProps","nextProps","translucent","cols","rowHeight","compactType","isDraggable","isResizable","draggableCancel","selectedDashboard","validItems","styles","badgeContainer","borderRadius","white","badge","cursor","badgeRemove","textDecoration","marginLeft","FilterBadge","onRemove","count","FilterBar","onBadgeRemove","onBadgeClick","bar","removeItemFIlter","SET_WINDOW_HEIGHT","DEFAULT_STATE_WINDOW_HEIGHT","sGetWindowHeight","windowHeight","acSetPrintDashboard","acClearPrintDashboard","acAddPrintDashboardItem","acUpdatePrintDashboardItem","dashboardIsEditing","dashboardIsPrinting","controlBarRows","clearEditDashboard","clearPrintDashboard","ItemSearchField","HeaderMenuItem","LaunchIcon","LaunchLink","launchLink","rel","InsertButton","buttonInsert","ContentMenuItem","onInsert","visType","ItemIcon","renderedItemIcon","visTypeIcons","menuItem","marginRight","singleItems","header","categorizedItems","listItemTypes","tAddListItemContent","dashboardItemIndex","hasMore","onChangeItemsLimit","seeMore","setSeeMore","addItem","itemUrl","showMoreButton","category","addToDashboard","ItemSelector","isOpen","setIsOpen","setFilter","setItems","maxOptions","setMaxOptions","Set","queryString","filterStr","then","catch","updateMaxOptions","delete","add","inputRef","maxWidth","menu","itemCount","allItems","displayItems","concat","EditTitleBar","onChangeTitle","onChangeDescription","section","titleDescription","_","itemSelector","ConfirmDeleteDialog","dashboardName","onDeleteConfirmed","onContinueEditing","destructive","deleteAccess","updateAccess","sGetIsNewDashboard","isPrintPreviewView","clearPrintPreview","onSave","onDelete","onDiscardChanges","onTranslate","acSetDashboardDisplayName","showPrintPreview","useDataEngine","translationDlgIsOpen","setTranslationDlgIsOpen","setDashboard","confirmDeleteDlgIsOpen","setConfirmDeleteDlgIsOpen","dboard","onConfirmDelete","newId","onPrintPreview","onTranslationsSaved","translations","dbLocale","translation","property","toggleTranslationDialog","discardBtnText","editBar","objectToTranslate","modelDefinition","fieldsToTranslate","onTranslationSaved","onTranslationError","NotSupportedNotice","noticeContainer","PrintInfo","isLayout","layoutStyle","printSuggestions","divider","LessHorizontalIcon","PrintActionsBar","isSmall","inner","LessHorizontal","print","topMargin","getTransformYPx","elStyle","transformY","match","parseInt","isLeapPage","n","getMultiple","factor","multiple","PrintLayoutItemGrid","updateDashboardLayout","isFirstPageBreak","pageBreaks","sortedPageBreaks","sortBy","hideExtraPageBreaks","sortedElements","elements","types","elementsWithBoundingRect","from","classList","indexOf","bottomY","getDomGridItemsSortedByYPos","querySelectorAll","pageBreakBottom","lastItemBottom","foundNonPageBreak","thisItemBottom","gridElement","firstBreak","scrollArea","componentDidUpdate","EDIT_BAR_HEIGHT","addPageBreaks","addDashboardItem","yPosList","pageNum","getPageBreakPositions","fromEdit","setPrintDashboard","updateDashboardItem","actionBarHeight","wrapper","paddingTop","spacers","dp24","pageOuter","setEditDashboard","renderGrid","setNewDashboard","PrintItemGrid","removeDashboardItem","sortedItems","spacerCount","dashboardMap","dashboardsIsEmpty","dashboardsLoaded","routeId","selectDashboard","dashboardToSelect","preferredId","getItem","dash","sGetDashboardsSortedByStarred","setWindowHeight","getElementsByTagName","remove","setHeaderbarVisibility","onResize","onHidden","permanent","SYSTEM_SETTINGS","fetchDashboards","setControlBarRows","apiGetControlBarRows","setCurrentUser","acSetDimensions","displayNameProp","apiFetchDimensions","dim","dimensionType","dataDimensionType","setShowDescription","apiGetShowDescription","addSettings","extraSettings","fetchedSettings","s","apiFetchSystemSettings","exact","AlertBar","DEFAULT_STATE_STYLE","objectClean","conversations","$merge","d2Object","keyUiLocale","authorities","newState","$splice","$unshift","idToRemove","stateItems","layoutHasChanged","newStateItems","stateItem","si","configureStore","middleware","thunk","withExtraArgument","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducer","applyMiddleware","addResources","arTranslations","ar_IQTranslations","ckbTranslations","csTranslations","daTranslations","enTranslations","esTranslations","frTranslations","idTranslations","kmTranslations","loTranslations","myTranslations","nbTranslations","prsTranslations","psTranslations","ptTranslations","pt_BRTranslations","ruTranslations","svTranslations","tetTranslations","tgTranslations","ukTranslations","urTranslations","uzTranslations","uz_CyrlTranslations","viTranslations","zhTranslations","zh_CNTranslations","schemas","authorization","process","REACT_APP_DHIS2_AUTHORIZATION","headers","AppWrapper","store","theme","createMuiTheme","dhis2theme","i18nRoot","reportTable","chart","eventReport","eventChart","itemTypeToExternalPlugin","getPlugin","hasIntegratedPlugin","config","plugin","loadingIndicator","loadPlugin","resize"],"mappings":"yIACAA,EAAOC,QAAU,CAAC,KAAO,yBAAyB,SAAW,6BAA6B,QAAU,4BAA4B,WAAa,iC,qBCA7ID,EAAOC,QAAU,CAAC,KAAO,gCAAgC,KAAO,gCAAgC,SAAW,oCAAoC,WAAa,wC,qBCA5JD,EAAOC,QAAU,CAAC,OAAS,4BAA4B,KAAO,4B,qBCA9DD,EAAOC,QAAU,CAAC,UAAY,0BAA0B,MAAQ,sBAAsB,QAAU,wBAAwB,WAAa,2BAA2B,aAAe,+B,qBCA/KD,EAAOC,QAAU,CAAC,UAAY,kCAAkC,SAAW,iCAAiC,SAAW,mC,qBCAvHD,EAAOC,QAAU,CAAC,UAAY,iCAAiC,SAAW,gCAAgC,SAAW,gCAAgC,QAAU,+BAA+B,UAAY,iCAAiC,cAAgB,uC,qBCA3PD,EAAOC,QAAU,CAAC,gBAAkB,0C,qBCApCD,EAAOC,QAAU,CAAC,UAAY,gCAAgC,QAAU,8BAA8B,SAAW,+BAA+B,SAAW,+BAA+B,aAAe,mCAAmC,MAAQ,4BAA4B,MAAQ,4BAA4B,cAAgB,oCAAoC,KAAO,2BAA2B,OAAS,6BAA6B,WAAa,iCAAiC,YAAc,oC,qBCA5eD,EAAOC,QAAU,CAAC,QAAU,0C,qBCA5BD,EAAOC,QAAU,CAAC,OAAS,8B,qBCA3BD,EAAOC,QAAU,CAAC,UAAY,sCAAsC,KAAO,iCAAiC,QAAU,sC,qBCAtHD,EAAOC,QAAU,CAAC,iBAAmB,6C,qBCArCD,EAAOC,QAAU,CAAC,QAAU,iC,qBCA5BD,EAAOC,QAAU,CAAC,KAAO,yBAAyB,gBAAkB,sC,4CCApED,EAAOC,QAAU,CAAC,KAAO,mBAAmB,KAAO,mBAAmB,SAAW,uBAAuB,KAAO,mBAAmB,WAAa,yBAAyB,aAAe,6B,qBCAvLD,EAAOC,QAAU,CAAC,UAAY,wBAAwB,KAAO,mBAAmB,YAAc,0BAA0B,YAAc,0BAA0B,WAAa,yBAAyB,eAAiB,+B,qBCAvND,EAAOC,QAAU,CAAC,IAAM,yB,qBCAxBD,EAAOC,QAAU,CAAC,KAAO,+B,qBCAzBD,EAAOC,QAAU,CAAC,SAAW,kCAAkC,WAAa,oCAAoC,MAAQ,+BAA+B,aAAe,wC,qBCAtKD,EAAOC,QAAU,CAAC,eAAiB,+C,qBCAnCD,EAAOC,QAAU,CAAC,KAAO,6B,qBCAzBD,EAAOC,QAAU,CAAC,QAAU,8BAA8B,iBAAmB,uCAAuC,MAAQ,4BAA4B,YAAc,kCAAkC,aAAe,qC,iCCDvN,giCAYO,MAAMC,EAAgB,gBAChBC,EAAe,eACfC,EAAQ,QACRC,EAAM,MACNC,EAAe,eACfC,EAAc,cACdC,EAAM,MACNC,EAAU,UACVC,EAAY,YACZC,EAAQ,QACRC,EAAW,WACXC,EAAO,OACPC,EAAS,SACTC,EAAY,YACZC,EAAmB,mBAC1BC,EAAwB,YACxBC,EAAsB,UAEfC,EAAsBC,KAAUC,EAAYD,EAAKE,MAAMH,oBACvDI,EAAaC,GAAYH,EAAYG,GAAUC,aAAeR,EAC9DS,EAAsBF,GAAYH,EAAYG,GAAUC,aAAeP,EACvES,EAAsBH,GAAYH,EAAYG,GAAUI,kBAAoB,EAC5EC,EAAaL,GAAYH,EAAYG,GAAUM,SAAW,GAE1DT,EAAc,CACzB,CAACnB,GAAgB,CACf6B,GAAI7B,EACJ8B,aAAc,iBACdC,SAAU,gBACVC,YAAaC,IAAKC,EAAE,kBACpBC,OAAQN,GAAE,qCAAkCA,GAC5CD,QAAS,kBACTF,iBAAkB,IAEpB,CAACzB,GAAe,CACd4B,GAAI5B,EACJ6B,aAAc,iBACdM,mBAAoB,oBACpBL,SAAU,gBACVC,YAAaC,IAAKC,EAAE,gBACpBX,WAAYR,EACZE,qBAAqB,EACrBkB,OAAQN,GAAE,qCAAkCA,GAC5CD,QAAS,mBAEX,CAAC1B,GAAQ,CACP2B,GAAI3B,EACJ4B,aAAc,iBACdC,SAAU,gBACVK,mBAAoB,aACpBJ,YAAaC,IAAKC,EAAE,UACpBX,WAAYR,EACZE,qBAAqB,EACrBkB,OAAQN,GAAE,qCAAkCA,GAC5CD,QAAS,mBAEX,CAACzB,GAAM,CACL0B,GAAI1B,EACJ2B,aAAc,OACdM,mBAAoB,WACpBL,SAAU,MACVC,YAAaC,IAAKC,EAAE,QACpBX,WAAYR,EACZE,qBAAqB,EACrBkB,OAAQN,GAAE,4BAAyBA,GACnCD,QAAS,QAEX,CAACxB,GAAe,CACdyB,GAAIzB,EACJ0B,aAAc,eACdC,SAAU,cACVC,YAAaC,IAAKC,EAAE,iBACpBX,WAAYP,EACZC,qBAAqB,EACrBkB,OAAQN,GAAE,qCAAkCA,GAC5CD,QAAS,iBAEX,CAACvB,GAAc,CACbwB,GAAIxB,EACJyB,aAAc,cACdC,SAAU,aACVC,YAAaC,IAAKC,EAAE,gBACpBX,WAAYP,EACZC,qBAAqB,EACrBkB,OAAQN,GAAE,wCAAqCA,GAC/CD,QAAS,oBAEX,CAACtB,GAAM,CACLwB,aAAc,OACdC,SAAU,SACVC,YAAaC,IAAKC,EAAE,SAEtB,CAAC3B,GAAU,CACTsB,GAAItB,EACJuB,aAAc,UACdC,SAAU,UACVC,YAAaC,IAAKC,EAAE,WACpBC,OAAQ,CAACN,EAAIT,KACX,OAAQA,GACN,IAAK,OACH,MAAM,2CAAN,OAAkDS,GAEpD,IAAK,sBACL,IAAK,cACL,QACE,MAAM,eAAN,OAAsBA,EAAtB,wBAAuC,IAAIQ,MAAOC,cAI1D,CAAC9B,GAAY,CACXqB,GAAIrB,EACJsB,aAAc,YACdC,SAAU,YACVC,YAAaC,IAAKC,EAAE,aACpBC,OAAQN,GAAE,wBAAqBA,EAArB,UAEZ,CAACpB,GAAQ,CACPoB,GAAIpB,EACJqB,aAAc,QACdC,SAAU,QACVC,YAAaC,IAAKC,EAAE,SACpBC,OAAQN,GAAE,2DAAwDA,IAEpE,CAAClB,GAAO,CACNkB,GAAIlB,EACJoB,SAAU,QAEZ,CAACrB,GAAW,CACVqB,SAAU,YAEZ,CAACnB,GAAS,CACRmB,SAAU,QAEZ,CAAClB,GAAY,CACXkB,SAAU,QAEZ,CAACjB,GAAmB,CAClBiB,SAAU,SAGDQ,EAAkBnB,GAAQD,EAAYC,GAAMU,aAC5CU,EAAwBpB,GAAQD,EAAYC,GAAMgB,oBAAsB,KACxEK,EAAa,CAACrB,EAAMF,EAAMwB,KACrC,IAAIC,EAUJ,OARIvB,IAASd,IACXqC,EAAMzB,EAAK0B,WAGTzB,EAAYC,IAASD,EAAYC,GAAMe,SACzCQ,EAAG,UAAMD,EAAN,YAAiBvB,EAAYC,GAAMe,OAAOjB,EAAKW,GAAIX,EAAKE,QAGtDuB,GAEIE,EAAczB,IACzB,OAAQA,GACN,KAAKnB,EACL,KAAKG,EACL,KAAKG,EACH,OAAOuC,IAET,KAAK5C,EACL,KAAKG,EACH,OAAO0C,IAET,KAAK5C,EACH,OAAO6C,IAET,KAAK1C,EACH,OAAO2C,IAET,KAAKzC,EACH,OAAO0C,IAET,KAAKzC,EACH,OAAO0C,IAET,KAAKxC,EACH,OAAOyC,IAET,KAAK1C,EACH,OAAO2C,IAET,KAAKzC,EACH,OAAO0C,IAET,QACE,OAAOC,O,kCCxMb,4MAKO,SAASC,EAAQC,GACtB,OAAOC,MAAMC,QAAQF,GAASA,EAAQ,GAEjC,SAASG,EAASH,GACvB,OAAOI,IAASJ,GAASA,EAAQ,GAO5B,SAASK,EAAaC,GAC3B,OAAOA,EAAMC,QAAO,CAACC,EAAK/C,KACxB+C,EAAI/C,EAAKW,IAAMX,EACR+C,IACN,IAYE,MAAMC,EAAa,CAACC,EAAOC,KAChC,GAA2B,qBAAhBC,EAAOC,MAAwBA,KAAKC,eAAgB,CAC7D,MAAMC,EAASJ,GAAY,KAC3B,OAAO,IAAIE,KAAKC,eAAeC,EAAQ,CACrCC,KAAM,UACNC,MAAO,QACPC,IAAK,YACJC,OAAO,IAAIvC,KAAK8B,IAGrB,OAAOA,EAAMU,OAAO,EAAG,IAAIC,QAAQ,IAAK,MAoB7BC,EAAkB,CAACZ,EAAOa,SAA2BC,IAAVd,GAAiC,OAAVA,EAAiBa,EAAeb,I,mDC9D/G,gkBAGO,MAAMe,EAAoB,WAEpBC,EAAkB,GAIlBC,EAAS,CAAC,GAAI,IACdC,EAAiB,CAC5BC,EAAG,EACHC,EAAG,EACHC,EAAG,GACHC,EAAG,IAMQC,EAAuB,GACvBC,EAA4B,GAC5BC,EAA2B,GAK3BC,EAAwB,KACxBC,EAAiB,IAVT,GAuBfC,EAAuBT,GAAKU,OAAOC,UAAUX,IAAMA,GAAK,EAGjDY,EAAWhF,GAAQ6E,EAAqB7E,EAAKoE,IAAMS,EAAqB7E,EAAKqE,IAAMQ,EAAqB7E,EAAKsE,IAAMO,EAAqB7E,EAAKuE,GAmB7IU,EAAwBC,IAC5B,CACLC,EAAGD,EACHE,KAAM,IAIGC,EAAwB,CAACC,EAAMC,GAAW,KAC9C,CACLnB,EAAG,EACHC,EAAGiB,EACHhB,EAvDwBkB,GAwDxBjB,EAAG,EACHkB,SAAUF,EACVH,KAAM,IAGGM,EAA6BC,IACjC,CACLvB,EAAG,EACHC,EAAG,EACHC,EAAGqB,EAAmBjB,EAjEEc,GAkExBjB,EAAGC,EACHiB,QAAQ,EACRL,KAAM,IAyBGQ,EAAYC,GAASA,EAAMC,KAAI,CAAC9F,EAAM+F,KACjD,MAAMC,EAAgBhB,EAAShF,GAAQA,EAAOiG,OAAOC,OAAO,GAAIlG,EAlE1CmF,KACtB,IAAKN,EAAqBM,GACxB,MAAM,IAAIgB,MAAM,6BAGlB,MAAMC,EAAMjB,EAnCc,EAoCpBkB,EAAMC,KAAKC,MAAMpB,EApCG,GAqCpBqB,EAAYF,KAAKC,MAAME,MACvBC,EAA+B,EAAlBzC,EACnB,MAAO,CACLG,EAAGgC,EAAMI,EACTnC,EAAGgC,EAAMK,EACTpC,EAAGkC,EACHjC,EAAGmC,IAqDiEC,CAASZ,IAC/E,OAAOE,OAAOC,OAAO,GAAIF,EAhBMhG,KAExB,CACL4G,eAFqBN,KAAKO,MAAM5C,EAAkBjE,EAAKuE,EAAI+B,KAAKQ,IAAI,EAAG9G,EAAKuE,EAAI,GAAKL,EAAO,MAetD6C,CAAkBf,OAE/CgB,EAAmBrG,GAAE,eAAYA,GACvC,SAASsG,EAAatG,GAC3B,MAAMuG,EAAKxE,YAASyE,SAASC,cAAT,WAA2BJ,EAAiBrG,MAC5D0G,IAAWH,EAAGI,kBAAkBC,YAAW,IAAML,EAAGI,gBAAgBJ,EAAGM,YAAc,EAAGN,EAAGO,aAAe,IAAI,M,qBCtHpH7I,EAAOC,QAAU,CAAC,QAAU,uC,qBCA5BD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,SAAW,4B,qBCAhED,EAAOC,QAAU,CAAC,gBAAkB,8C,qBCApCD,EAAOC,QAAU,CAAC,UAAY,6BAA6B,MAAQ,yBAAyB,iBAAmB,oCAAoC,QAAU,6B,qBCA7JD,EAAOC,QAAU,CAAC,UAAY,mCAAmC,UAAY,mCAAmC,MAAQ,+BAA+B,KAAO,gC,qBCA9JD,EAAOC,QAAU,CAAC,QAAU,sCAAsC,UAAY,0C,4CCA9ED,EAAOC,QAAU,CAAC,QAAU,gCAAgC,UAAY,oC,4rjICEjE,MAAM6I,EAAsBC,wBAAc,MAE3CC,EAAa,MACjBC,OAAQC,OAAOC,YACfC,MAAOF,OAAOG,aAwBDC,MArBkB,EAC/BC,eAEA,MAAOC,EAAYC,GAAiBC,mBAASV,KAU7C,OATAW,qBAAU,KACR,MAAMC,EAAeC,KAAS,KAC5BJ,EAAcT,OACb,KAEH,OADAE,OAAOY,iBAAiB,SAAUF,GAC3B,KACLV,OAAOa,oBAAoB,SAAUH,MAEtC,IACI,cAACd,EAAoBkB,SAArB,CAA8B3F,MAAOmF,EAArC,SACID,KAQN,MAAMU,EAAsB,IAC1BC,qBAAWpB,G,oHC1BpB,MAAMqB,UAAmBC,IAAMC,UAC7BC,YAAYC,GACVC,MAAMD,GADW,KAOnBE,YAAc,KACZC,KAAKC,SAAS,CACZC,UAAU,IAEZ1B,OAAOY,iBAAiB,YAAaY,KAAKG,QAC1C3B,OAAOY,iBAAiB,UAAWY,KAAKI,YAZvB,KAcnBD,OAASE,IACPA,EAAMC,iBACND,EAAME,kBACN,MAAMC,EAAYH,EAAMI,QAEpBT,KAAKH,MAAMa,gBAAkBF,IAAcR,KAAKH,MAAMtB,QAAUiC,EAAY,GAC9EG,uBAAsB,KACpBX,KAAKH,MAAMa,eAAeF,OArBb,KAyBnBJ,UAAY,KACVJ,KAAKC,SAAS,CACZC,UAAU,IAEZ1B,OAAOa,oBAAoB,YAAaW,KAAKG,QAC7C3B,OAAOa,oBAAoB,UAAWW,KAAKI,WAEvCJ,KAAKH,MAAMO,WACbJ,KAAKH,MAAMO,aAjCI,KAoCnBQ,iBAAmB,IAA2C,oBAA9BZ,KAAKH,MAAMa,gBAAiC,qBAAKG,UAAWC,IAAQC,WAAYC,YAAahB,KAAKD,YAAakB,cAAY,2BAlCzJjB,KAAKkB,MAAQ,CACXhB,UAAU,GAmCdiB,SACE,MAAM5C,EAASvB,KAAKQ,IAAIwC,KAAKH,MAAMtB,OAAQ,GA1Cb,EA2CxB6C,EAAYC,IAAGP,IAAQQ,KAAMtB,KAAKkB,MAAMhB,UAAYY,IAAQZ,UAClE,OAAO,sBAAKqB,MAAO,CACjBhD,UACCsC,UAAWO,EAFP,UAGK,qBAAKP,UAAWC,IAAQU,QAAxB,SAAkCxB,KAAKH,MAAMhB,WAC5CmB,KAAKY,uBAiCtBnB,EAAWgC,aAAe,CACxBf,eAAgB,KAChBN,UAAW,MAEEX,QC5EAiC,MAXE,EACfb,eACI,sBAAKA,UAAWA,EAAWc,MAAM,6BAA6BC,QAAQ,YAAtE,UACE,sBAAMC,EAAE,gBAAgBC,KAAK,SAC7B,sBAAMD,EAAE,6FACR,sBAAMA,EAAE,gBAAgBC,KAAK,Y,SCP9B,MAAMC,EAAwBC,MAAOC,EAAW5K,KACrD,MAAM6K,QAAWC,wBACXhK,EAAG,mCAA+B8J,EAA/B,qBAAqD5K,GAC9D6K,EAAGE,IAAIC,SAASC,KAAKnK,I,uBCuCRoK,MAnCkB,EAC/BC,UACAC,WACAC,QACAC,cACAC,cAEA,MAAMC,EAAY,CAChBJ,YAGF,GAAID,EAAS,CACX,MAAMM,EAAgBL,EAAW3B,IAAQ2B,SAAW3B,IAAQiC,WAC5DF,EAAUG,KAAO,cAACC,EAAD,CAAUpC,UAAS,UAAKC,IAAQkC,KAAb,YAAqBF,KAG3D,MAAMI,EAA0B/D,KAAS,IAAM4C,EAAsB,iBAAkBY,IAAc,KAOrG,OAAO,cAAC,IAAD,CAAM9B,UAAWC,IAAQqC,KAAMC,GAAE,WAAMT,GAAeC,QALzC,KAClBM,IACAN,KAGiFS,YAAU,iBAAtF,SACG,cAAC,IAAD,IAAUR,EAAV,SAAsBH,OCzBnBY,MAJO,IAAM,qBAAK3B,MAAM,6BAA6BjD,MAAM,KAAKH,OAAO,KAAKuD,KAAMyB,IAAOC,QAAS5B,QAAQ,YAA7F,SACpB,sBAAMC,EAAE,2MCaD4B,MAdI,EACjB5C,YACA6C,WACIA,EAAQ,qBAAK7C,UAAWA,EAAWtC,OAAO,KAAKqD,QAAQ,YAAYlD,MAAM,KAAKiD,MAAM,6BAA5E,SACF,sBAAME,EAAE,sVAAsVC,KAAK,cAC9V,sBAAKjB,UAAWA,EAAWc,MAAM,6BAA6BpD,OAAO,KAAKqD,QAAQ,YAAYlD,MAAM,KAApG,UACL,sBAAMmD,EAAE,gBAAgBC,KAAK,SAC7B,sBAAMD,EAAE,kPCIL8B,MAVG,EAChB9C,eACI,sBAAKA,UAAWA,EAAWiB,KAAMyB,IAAOK,QAASjC,MAAM,6BAA6BC,QAAQ,YAA5F,UACE,sBAAMC,EAAE,0GACR,sBAAMA,EAAE,gBAAgBC,KAAK,Y,mBCMtB+B,MAVY,EACzBC,aACI,wBAAQjD,UAAWC,IAAQiD,OAAQnB,QAASkB,EAA5C,SACE,+BACI,cAACE,EAAD,CAAWnD,UAAWC,IAAQkC,KAAMiB,MAAM,e,SCP/C,MAAMC,EAAwB,wBACxBC,EAA0B,0BAmBhC,MAAMC,EAAuBlD,GAASA,EAAMmD,iBCjBpCC,MAFO5F,GAASA,GAFC,I,mBCYzB,MA+ED6F,EAAqB,CACzBC,oBC1FmC7K,IAAK,CACxC/C,KAAMsN,EACNvK,UDyFA8K,sBCvFqC,MACrC7N,KAAMuN,KDwFOO,mBARSxD,IAAK,CAC3ByD,WAAYP,EAAqBlD,MAOKqD,EAAzBG,EAjFkB,EAC/BD,wBACAE,aACAC,cACAJ,sBACAK,kBACAC,wBAEA,MAAOC,EAAkBC,GAAuBhG,mBAAS,KAClDiG,EAAcC,GAAiBlG,oBAAS,IACzC,MACJN,GACEa,IA4CJ,OAAO+E,EAAc5F,KAAWkG,EAAc,wBAAQ/D,UAAWC,IAAQqE,aAAcvC,QAL/D,KACtBkC,IACAI,GAAc,IAG8B,SACpC,cAACE,EAAD,CAAYvE,UAAWC,IAAQuE,eACvB,sBAAKxE,UAAWQ,IAAGP,IAAQwE,UAAT,UAAuBP,IAAqBQ,QAvBhElF,IACdA,EAAMC,iBACN0E,EAAoBlE,IAAQ0E,UAqBoEC,OAlBnFpF,IACbA,EAAMC,iBACN0E,EAAoB,KAgBJ,UACR,cAACI,EAAD,CAAYvE,UAAWC,IAAQuE,WAAY3B,MAAOY,EAAc5F,IAAUkG,IAC1E,uBAAO/D,UAAWC,IAAQ4E,MAAO9O,KAAK,OAAO+O,YAAalO,IAAKC,EAAE,0BAA2BkO,SA9C/EvF,IACrBA,EAAMC,iBACNkE,EAAoBnE,EAAMwF,OAAOlM,QA4C6FmM,QAzChHzF,IACd,OAAQA,EAAM0F,SACZ,KAvBuB,GAwBrBlB,IACAJ,IACA,MAEF,KA3BwB,GA4BtBA,MAiC4I9K,MAAOgL,EAAYtB,YAAU,yBAAyB2C,IAfnLN,IACnB,GAAIA,GAAST,GAAgBX,EAAc5F,GACzC,OAAOgH,EAAMO,WAcNtB,GAAc,cAAC,EAAD,CAAab,QAASW,UE1E1C,MAAMyB,GAAc,IAAM,qBAAK3H,OAAO,KAAKqD,QAAQ,YAAYlD,MAAM,KAAKiD,MAAM,6BAAtD,SACzB,sBAAME,EAAE,4PAA4PC,KAAK,cAEpQqE,GAAY,IAAM,qBAAK5H,OAAO,KAAKqD,QAAQ,YAAYlD,MAAM,KAAKiD,MAAM,6BAAtD,SACvB,sBAAME,EAAE,maAAmaC,KAAK,c,0BC8CzasE,OA3CQ,EACrBxD,UACAgC,cACAyB,eAEA,MAAMC,EAAeC,iBAAO,MACtBC,EAAc5B,EAAcnN,IAAKC,EAAE,yBAA2BD,IAAKC,EAAE,wBAErE+O,EAAkB,KAMtB,MAAMC,EAAWJ,EAAaK,QAAQ9H,SAAS,GACzCwB,EAAQ,IAAIuG,WAAW,WAAY,CACvCC,SAAS,EACTC,YAAY,IAEdlE,IACA8D,EAASK,cAAc1G,IAGzB,OAAO,qBAAKQ,UAAWC,KAAQwE,UAAWU,IAAKM,EAAxC,SACID,EAAW,qBAAKxF,UAAWC,KAAQuF,SAAxB,SACJ,cAACH,GAAD,MACK,cAAC,IAAD,CAAS1E,QAASgF,EAAaQ,UAAU,SAAzC,SACJ,EACbC,cACAC,aACAlB,SACI,wBAAQnF,UAAWC,KAAQqG,SAAUvE,QAAS6D,EAAiBpD,YAAU,kBAAkB+D,aAAYZ,EAAaR,IAAKA,EAAKiB,YAAaA,EAAaC,WAAYA,EAApK,SACiBtC,EAAc,cAACuB,GAAD,IAAgB,cAACD,GAAD,WCtCpD,MAUMmB,GAAgBC,GAVS,GAW7BA,EAKIC,GAAsBD,GAC1BD,GAAcC,GATsBE,GAWhCC,GAAc,aACdC,GAAwB,sBACxBC,GAAkB,iBAClBC,GAAiC,CAAChR,EAAM2H,KACnD,MAAMsJ,EAAmBtJ,EApBK,GACe,GAqB7C,OAAQ3H,GAEN,KAAK6Q,GACH,OAAOI,EdzBqB,Ec2B9B,KAAKH,GACH,OAAOG,EAvBgCL,GAyBzC,KAAKG,GACH,OAAOE,EA7B0B,GAGML,GA4BzC,QACE,OAAOjJ,I,cCpCN,MAAMuJ,GAA2B,2BAazBC,oBAAgB,CAC7BC,SAXe,CAAC9G,EAF2B,EAEY+G,KACvD,OAAQA,EAAOrR,MACb,KAAKkR,GACH,OAAOvN,YAAgB0N,EAAOtO,MALS,GAOzC,QACE,OAAOuH,MAcN,MAEMgH,GAAyBhH,GAFJA,IAASA,EAAMiH,WAEFC,CAAmBlH,GAAO8G,S,8CC1BlE,MAAMK,GAAgB,+CAChBC,GAAuB,4BAM9BC,GAAa7R,GAAQA,EAAKE,OAAST,MAAQO,EAAK8R,OAASH,GAElDI,GAA0BlM,GAASA,EAAMC,KAAI9F,IACxD,IAAI8R,EAAO,KAQX,MAbqB9R,IAAQA,EAAKE,OAASR,KAOvCsS,CAAehS,GACjB8R,EAAOH,GACEE,GAAW7R,KACpB8R,EAAO9R,EAAK8R,MAAQF,IAGf,IAAK5R,KACN8R,EAAO,CACTA,QACE,OAGKG,GAA0BpM,GAASA,EAAMC,KAAI9F,IACxD,MAAME,EAtBoBF,IAAQA,EAAKE,OAAST,MAAQO,EAAK8R,OAASH,GAsBzDO,CAAoBlS,GAAQN,KAASM,EAAKE,KACjDiS,EAAiBlN,aAAsBjF,EAAKW,IAC5CmR,EAAOD,GAAW7R,GAAQA,EAAK8R,OAASF,GAAuB,GAAK5R,EAAK8R,KAAO,KACtF,MAAO,IAAK9R,KACG,OAAT8R,EAAgB,CAClBA,QACE,GACJ5R,UACGiS,MC9BMC,GAAiB,iBACjBC,GAAiB,iBACjBC,GAAwB,wBACxBC,GAA6B,6BAC7BC,GAAsB,sBACtBC,GAA2B,CACtCC,KAAM,KACN7M,MAAO,IAEI8M,GAAkB,GAEzBC,GAAsB,EAC1BpI,QACAyB,cACA4G,OACA5P,YAJ0B,CAM1ByP,KAAM,IAAKlI,EAAMkI,KACf,CAACzG,GAAc,IAAKzB,EAAMkI,KAAKzG,GAC7B,CAAC4G,GAAO5P,IAGZ4C,MAAO2E,EAAM3E,QA8DR,MAAMiN,GAAqBtI,GAASA,EAAMuI,WAgBpCC,GAAoB,CAACxI,EAAO7J,IAAO+B,YAASoQ,GAAmBtI,GAAOkI,MAAM/R,GAC5EsS,GAAwBzI,GACO,OAAnCsI,GAAmBtI,GAAOkI,KAUtBQ,GAAoB1I,GAAS9H,YAASoQ,GAAmBtI,GAAOkI,MAShES,GAAqB3I,GAASsI,GAAmBtI,GAAO3E,MAExDuN,GAAwB5I,GAASvE,OAAOoN,OAAOH,GAAkB1I,IAAQ8I,QAAOC,IAAmC,IAAtBA,EAAUzH,UACvG0H,GAA0BhJ,GAASvE,OAAOoN,OAAOH,GAAkB1I,IAAQ8I,QAAOC,IAAmC,IAAtBA,EAAUzH,UAezG2H,GAAsBC,GAAQC,KAAUD,GAAM5N,KAAIqF,IAAC,CAC9DxK,GAAIwK,EAAExK,GACNiT,KAAMzI,EAAEyI,KACRC,YAAa1I,EAAE0I,YACfC,YAAa3I,EAAE2I,YACfC,mBAAoB5I,EAAE4I,mBACtBjI,QAASX,EAAE6I,SACXC,MAAO9I,EAAE+I,KAAKN,KACdO,QAAShJ,EAAEgJ,QAAQC,MAAM,KAAKC,KAAK,KAAK1Q,OAAO,EAAG,IAClD2Q,YAAanJ,EAAEmJ,YAAYF,MAAM,KAAKC,KAAK,KAAK1Q,OAAO,EAAG,IAC1D4Q,OAAQpJ,EAAEoJ,OACVC,cAAelS,YAAQ6I,EAAEsJ,gBAAgBC,OACzCD,eAAgBxC,GAAwB9G,EAAEsJ,oBCzJ/BE,GAAkB,kBAClBC,GAAyB,yBACzBC,GAA+B,+BAC/BC,GAAgC,gCAChCC,GAAmC,mCAGnCC,IAAyC,EACzCC,GAA2C,GA0DzC5D,oBAAgB,CAC7B1Q,GAlDS,CAAC6J,EAZ6B,KAYM+G,KAC7C,OAAQA,EAAOrR,MACb,KAAKyU,GACH,OAAO9Q,YAAgB0N,EAAOtO,MAfK,MAiBrC,QACE,OAAOuH,IA6CX0K,UAzCgB,CAAC1K,EArB6B,MAqBa+G,KAC3D,OAAQA,EAAOrR,MACb,KAAK0U,GACH,OAAO/Q,YAAgB0N,EAAOtO,MAxBY,OA0B5C,QACE,OAAOuH,IAoCX2K,gBAhCsB,CAAC3K,EAAQwK,MAAwCzD,KACvE,OAAQA,EAAOrR,MACb,KAAK2U,GACH,OAAOhR,YAAgB0N,EAAOtO,MAAO+R,IAEvC,QACE,OAAOxK,IA2BX4K,gBAvBsB,CAAC5K,EAAQyK,GAA0C1D,KACzE,OAAQA,EAAOrR,MACb,KAAK4U,GAED,MAAO,IAAKtK,EACV,CAAC+G,EAAO5Q,IAAK4Q,EAAO8D,YAI1B,KAAKN,GAED,OAAOE,GAGX,QACE,OAAOzK,MAWN,MAAM8K,GAAmB9K,GAASA,EAAMuB,SAClCwJ,GAAiB/K,GAAS8K,GAAiB9K,GAAO7J,GAClD6U,GAAwBhL,GAAS8K,GAAiB9K,GAAO0K,UACzDO,GAA8BjL,GAAS8K,GAAiB9K,GAAO2K,gBAC/DO,GAA6B,CAAClL,EAAO7J,IAAO2U,GAAiB9K,GAAO4K,gBAAgBzU,GC/EpFgV,GAAY,YACZC,GAAetK,eAAoBE,EAAGqK,YAAYC,UAAUC,IAAIJ,IAChEK,GAAe1K,MAAOE,EAAIoK,IAAiBA,QAAqBpK,EAAGqK,YAAYC,UAAUG,IAAIN,UAAmBnK,EAAGqK,YAAYC,UAAUI,OAAOP,IAChJQ,GAA4B7K,MAAO8K,EAAKnT,KACnD,MAAMuI,QAAWC,+BACAuK,GAAaxK,EAAIoK,KAC/BS,IAAID,EAAKnT,IAEDqT,GAA2BhL,MAAO8K,EAAKtS,KAAkB,IAAD,EACnE,MAAM0H,QAAWC,wBACX8K,QAAkBP,GAAaxK,QAAUoK,GAAapK,IAG5D,OAFY,OAAG+K,QAAH,IAAGA,GAAH,UAAGA,EAAWC,YAAd,aAAG,EAAiBC,MAAKC,GAAKA,IAAMN,WAGjCG,EAAUN,IAAIG,UAErBD,GAA0BC,EAAKtS,GACrC6S,QAAQC,IAAI,mDACL9S,ICjBL+S,GAAsB,iBCCfC,GAA0BlG,IAAI,CACzC1Q,KAAMkR,GACNnO,MAAO2N,I,0BCgBF,MAsID/C,GAAqB,CACzB7D,eAAgB8M,IAEHC,mBAAW/I,aAVFxD,IAAK,CAC3BuI,WAAYG,GAAkB1I,GAC9ByD,WAAYP,EAAqBlD,GACjCwM,WAAYzB,GAAe/K,GAC3B8G,SAAUE,GAAuBhH,MAMgBqD,GAAzBG,EAvIJ,EACpBsD,WACAtH,iBACAiN,UACAlE,aACAiE,aACA/I,iBAEA,MAAO2C,EAAMsG,GAAW5O,mBAASgJ,IAC3B,MACJtJ,EADI,OAEJH,GACEgB,IACEyG,EAAM6H,sBACZ5O,qBAAU,KACR2O,EAAQ5F,KACP,CAACA,IAEJ,MAAMpD,EAAc,IApBO,KAoBD0C,EAapBwG,EAAc,KACdlJ,KACFoB,EAAIW,QAAQoH,OAAO,EAAG,IAIpBC,EAAkB,KACtB,MAAMC,EAAUrJ,IAAgBoD,EAxCP,GAyCzB8F,IACAF,EAAQK,IAGJC,EAAkB,KACtBJ,IACAF,EAAQ5F,IAWJmG,EAAwB,KAC5B,MAAMC,EAAqBC,IAAU1R,OAAOoN,OAAON,GAAYO,QAAOnI,GAAKA,EAAE0I,YAAY+D,cAAcC,SAAS5J,EAAW2J,iBAAiB,MAAO,eACnJ,MAAO,IAAIF,EAAmBpE,QAAOnI,GAAKA,EAAEW,aAAa4L,EAAmBpE,QAAOnI,IAAMA,EAAEW,YAGvFgM,EAAelK,EAAc5F,KAAWkG,IRhFnB,EQgFmD0C,EAUxEmH,EAAqBnJ,GACrBhB,EAAc5F,IAAUkG,IACnBgD,GAA+BtC,EAAYoC,GAAwBC,GAAiBpJ,GAGtF8I,GAAcmH,GRhGe,GQkHhCE,EAAiBrN,IAAGP,KAAQwE,UAAWV,IAAgB9D,KAAQ6N,SAAW7N,KAAQ8N,WACxF,OAAO,qCACG,eAAC,EAAD,CAAYrQ,OAhChB+F,EAAc5F,IAAUkG,IACnBgD,GAA+BH,GAAalJ,GAG9CgJ,GAAoBiH,GA4Bc9N,eAAiB4D,EAAc5F,GAAwB,KA5E7E8B,IACnB,MAAMyN,EAAUjR,KAAKQ,IRxCI,EAWOe,IAC3BvB,KAAKC,OAAOsB,EANwBiJ,IARP,IQ0CMqH,CAAqBrO,EAAY,KAGrEyN,IAAY3G,GACd5G,EAAe1D,KAAK8R,IAAIb,EA3BD,MAkG6E7N,UAnEtF,IFhDiB4B,gBAAuB6K,GAA0BU,GAAqB5T,GEgDjFoV,CAAsBzH,GAmEpC,UACI,sBAAKzG,UAAW6N,EAAgB1I,IAAKA,EAAKzE,MAAO,CACzDhD,OAAQkQ,EAAmB/G,KADnB,UAGI,sBAAK7G,UAAWC,KAAQkO,SAAxB,UACI,cAAC,IAAD,CAAMnO,UAAWC,KAAQmO,QAAS7L,GAAI,OAAQC,YAAU,qBAAxD,SACI,cAAC6L,EAAD,MAEJ,cAACC,EAAD,CAAQtK,gBAxDJ,KAAO,IAAD,EAC9B,MAAMxN,EAAE,UAAG8W,IAAwB,UAA3B,aAAG,EAA4B9W,GAEnCA,GACFsW,EAAQyB,KAAK/X,IAoDiDyN,kBAAmBkJ,EAAiBpJ,YAAaA,SAzBzF,MACxB,MAAMyK,EAAQlB,IAAwB3R,KAAIyN,GAAa,cAAC,EAAD,CAAyBvH,MAAOuH,EAAUM,YAAa/H,QAASyH,EAAUzH,QAASG,YAAasH,EAAU5S,GAAIoL,SAAUwH,EAAU5S,KAAOqW,EAAY9K,QAASsL,GAAnJjE,EAAU5S,MAE5E,GAAIiN,EAAc5F,GAAQ,CACxB,MAAM4Q,EAAuBjO,IAAGP,KAAQyO,cAAe3K,IAAgB9D,KAAQ6N,SAAW7N,KAAQ8N,WAClG,OAAO,qBAAK/N,UAAWyO,EAAsB/N,MAAO,CAClDhD,OAAQkQ,KADH,SAGQY,IAGf,OAAOA,GAgBQG,MAEL,cAAC,GAAD,CAAgB5M,QAASoL,EAAiBpJ,YAAaA,IAAeyB,SA9GzD,KA8GmE2B,OAEpF,qBAAKzG,MAAO,CAClBkO,UAAWlI,GAAoBjD,EAAc5F,KAAWkG,IRlIjC,EQkIiEoD,GtBjI5D,YuBcnB0H,OAfU,EACvBlH,UACI,qBAAKjH,MAAO,CAChBoO,QAAS,YACTC,UAAW,SACXC,SAAU,OACVC,WAAY,IACZ7L,MAAOV,IAAOwM,SALV,SAOGvH,I,iECXF,MAAMwH,GAAY,IAAM,qBAAKzR,OAAO,KAAKqD,QAAQ,YAAYlD,MAAM,KAAKiD,MAAM,6BAAtD,SACvB,sBAAME,EAAE,wOAAwOC,KAAK,cAEhPmO,GAAe,IAAM,qBAAK1R,OAAO,KAAKqD,QAAQ,YAAYlD,MAAM,KAAKiD,MAAM,6BAA6BJ,MAAO,CAC1H2O,OAAQ,iBADwB,SAI1B,sBAAMrO,EAAE,kIAAkIC,KAAK,UAAUqO,SAAS,UAAUC,UAAU,uBAEjLC,GAAU,IAAM,sBAAK1O,MAAM,6BAA6BpD,OAAO,KAAKqD,QAAQ,YAAYlD,MAAM,KAAKoD,KAAMyB,IAAOwM,QAAhG,UACrB,sBAAMlO,EAAE,gBAAgBC,KAAK,SAC7B,sBAAMD,EAAE,0DAEHyO,GAAa,IAAM,qBAAK/R,OAAO,KAAKqD,QAAQ,YAAYlD,MAAM,KAAKiD,MAAM,6BAAtD,SACxB,sBAAME,EAAE,oiCAAoiCC,KAAK,cAE5iCyO,GAAiB,IAAM,qBAAKhS,OAAO,KAAKqD,QAAQ,YAAYlD,MAAM,KAAKiD,MAAM,6BAAtD,SAC5B,sBAAME,EAAE,qiCAAqiCC,KAAK,cCnB7iC0O,GAAgB,gBAChBC,GAAqB,CAChCpZ,GAAI,GACJqZ,SAAU,GACV9W,SAAU,GACV+W,aAAa,GAwBR,MACMC,GAAmB1P,GAASA,EAAM0J,KAAK8F,S,cC7B7C,MAAMG,GAAiB,iBACjBC,GAAqB,CAACC,aAAiBC,MAAsBD,aAAiBE,OAYpF,MAAMC,GAAiBhQ,GAASA,EAAMpC,W,eCZtC,MAAMqS,GAAqB,qBACrBC,GAAmB,mBACnBC,GAAkB,kBAClBC,GAAqB,qBACrBC,GAA6B,GAiCnC,MAAMC,GAAsBtQ,GAASA,EAAMuQ,YAGrCC,GAAuBC,aAAe,CAACH,GAAqBN,KAAiB,CAACU,EAAS9S,IAAenC,OAAOuQ,KAAK0E,GAASpY,QAAO,CAACqY,EAAKxa,KACnJwa,EAAIzC,KAAK,CACP/X,GAAIA,EACJiT,KAAMxL,EAAWqO,MAAK2E,GAAaA,EAAUza,KAAOA,IAAIiT,KACxDP,OAAQ6H,EAAQva,GAAImF,KAAI7C,IAAK,CAC3BtC,GAAIsC,EAAMtC,GACViT,KAAM3Q,EAAM4Q,aAAe5Q,EAAM2Q,WAG9BuH,IACN,MC7CUE,GAAqB1a,IAAE,CAClCT,KAAM0a,GACNja,O,yBCPK,MAAM2a,GAAoB,oBAiB1B,MAAMC,GAAmB/Q,GAASA,EAAMgR,SCnBlCC,GAA4B,CACvCC,SAAU,uBACVC,OAAQ,CACNC,OAAQ,qHACRC,MAAO,WACPC,SAAU,MCODC,GAAeC,GAAc1Q,UACxC,IACE,MAAM2Q,ODNiB3Q,WACzB,IACE,MAAM,qBACJ2Q,SACQD,EAAWE,MAAM,CACzBD,qBAAsBR,KAExB,OAAOQ,EAAqBA,qBAC5B,MAAOE,GACPxF,QAAQC,IAAI,SAAUuF,KCHaC,CAAYJ,GAC/C,OAAOK,EAP0B,CACnCnc,KAAMob,GACNrY,MAKmCgZ,IACjC,MAAOK,GACP,OAda/K,EAcE,eAdM4K,EAcUG,EAbjC3F,QAAQC,IAAR,0BAA+BrF,EAA/B,aAA0C4K,IACnCA,EAFO,IAAC5K,EAAQ4K,GCHZI,GAAoB,oBACpBC,GAAsB,sBAmB5B,MAAMC,GAAmBjS,GAASA,EAAMkS,MCflCC,GAAsB,MACjCzc,KAAMsc,K,yBCFD,MAAMI,GAAoB,oBAEpBC,GAAuB,uBACvBC,GAA+B,GAEtCC,GAAUC,QAAWjZ,IAANiZ,GAAyB,OAANA,EAuBjC,MAEMC,GAAoB,CAACzS,EAAO7J,IAFH6J,IAASA,EAAM0S,eAG5CC,CAAuB3S,GAAO7J,GClC1Byc,GAAqBna,IAAK,CACrC/C,KAAM0c,GACN3Z,U,mCCEK,MAAMoa,GAAkB,EAC7BC,UACE,KAAO,CAAC,KAAD,UAAUA,EAAS,2BAA6B,qBAI9CC,GAAqB,EAChCC,eACIC,KAAW,CAAC,YAAa,gBAAiB,SAAU,eAAgBD,EAAS,gBAJhD,CAAC,2BAA4B,2BAA4B,qBAImBnJ,KAAK,KAAjC,UAEtEqJ,GAAgB,EAC3BF,eACI,CAAC,WAAD,OAAYD,GAAmB,CACnCC,cACCnJ,KAAK,KAFF,oBAEmBkJ,GAAmB,CAC1CC,cACCnJ,KAAK,KAJF,uBAIsBkJ,GAAmB,CAC7CC,cACCnJ,KAAK,KANF,MAQOsJ,GAAoB,EAC/BC,iBACAC,iBAEOJ,KAAW,CAAC,GAAD,OAAIJ,GAAgB,CACpCC,QAAQ,IACPjJ,KAAK,MAAQ,yCAA0CuJ,EAAc,UAAMF,GAAc,CAC1FF,WAAW,IACVnJ,KAAK,MAFgE,GAEnDwJ,EAAc,CAAC,IAAK,uBAAwB,mBAAoB,YAAa,sBAAuB,oCAAqC,oBAAqB,sBAAuB,yBAA0B,iCAAkC,oBAAqB,8BAA+B,iBAAkB,sCAAuC,0BAA2B,qBAAsB,8BAA+B,mBAAoB,gBAAiB,iBAAkB,gBAAiB,wBAAyB,gCAAiC,sCAAsCxJ,KAAK,KAAO,KAE5mByJ,GAAqB,EAChCF,oBACI,CAAC,eAAD,OAAgBD,GAAkB,CACtCC,mBACCvJ,KAAK,KAFF,qBAEoB,CAAC,UAAWsJ,GAAkB,CACtDC,oBACEvJ,KAAK,KAJH,mBAImBsJ,GAAkB,CACzCC,mBACCvJ,KAAK,KANF,2BAM0BsJ,GAAkB,CAChDC,mBACCvJ,KAAK,KARF,0BAQyBsJ,GAAkB,CAC/CC,mBACCvJ,KAAK,KAVF,MA2BO0J,GAAwBzS,UACnC,MAAM3K,EAAKqd,aAAmBhe,GACxB4b,EAAS5b,EAAKE,OAASjB,KATG,CAAC,GAAD,OAAIoe,GAAgB,CACpDC,QAAQ,IACPjJ,KAAK,MAAQ,uCAFkB,mBAEkCsJ,GAAkB,CACpFC,gBAAgB,EAChBC,aAAa,IAJmB,MASoBF,GAAkB,CACpEC,gBAAgB,EAChBC,aAAa,IAETrS,QAAWC,wBACjB,aAAaD,EAAGE,IAAIC,SAASsK,IAAhB,UAAuB5U,aAAgBrB,EAAKE,MAA5C,YAAqDS,GAAM,CACtEib,YCrESqC,GAAU9B,GAASxF,QAAQC,IAAI,UAAWuF,GAE1C+B,GAA0B,EACrCC,gBACE,KAAOV,KAAW,CAAC,KAAM,OAAQ,QAAS,IAAK,IAAK,kBAAmB,mBAAoB,WAAY,OAAQ,SAA7F,UD0CiB,CAAC,WAAD,OAAY,CAAC,UAAWJ,GAAgB,CAC7EC,QAAQ,KACNjJ,KAAK,KAF8B,yBAERgJ,GAAgB,CAC7CC,QAAQ,IACPjJ,KAAK,KAJ+B,qBAIbgJ,GAAgB,CACxCC,QAAQ,IACPjJ,KAAK,KAN+B,MC1C6GA,KAAK,MAAQ8J,EAAY,UAAML,GAAmB,CACpMF,eAAgBO,EAAaP,iBAC5BvJ,KAAK,MAFqK,KAIhK+J,GAAqB,EAChCZ,YACAW,gBACE,KAAOV,KAAW,CAAC,GAAD,OAAIJ,KAAkBhJ,KAAK,MAAQ,cAAe,qBAAsB,WAAxE,eAA4FgJ,GAAgB,CAChIC,QAAQ,IACPjJ,KAAK,KAFc,KAEL,UAAW,cAAe,SAAU,OACrDmJ,EAAS,yBAAqBU,GAAwB,CACpDC,iBACC9J,KAAK,KAFC,UCfIgK,GAAkB,CAC7B3C,SAAU,aACVC,OAAQ,CACNC,OAAQ,CAACwC,KAAsB,sBAAsB/J,KAAK,KAC1DiK,QAAQ,IAGCC,GAAiB,CAC5B7C,SAAU,aACV/a,GAAI,EACFA,QACIA,EACNgb,OAAQ,CACNC,OAAQ6B,KAAWW,GAAmB,CACpCZ,WAAW,EACXW,aAAc,CACZP,gBAAgB,MAEhBvJ,KAAK,OAGAmK,GAAwB,CACnCte,KAAM,SACNwb,SAAU,aAGV/a,GAAI,EACFA,QADE,UAEKA,EAFL,cAIO8d,GAA0B,CACrCve,KAAM,SACNwb,SAAU,aACV/a,GAAI,EACFA,QADE,UAEKA,EAFL,cAIO+d,GAA0B,CACrCxe,KAAM,SACNwb,SAAU,aACV/a,GAAI,EACFA,QACIA,GAcKge,GAAoBrT,MAAO0Q,EAAYrb,KAClD,IAQE,aAP4Bqb,EAAWE,MAAM,CAC3C3I,UAAWgL,IACV,CACDK,UAAW,CACTje,SAGiB4S,UACrB,MAAO4I,GACP8B,GAAQ9B,KCnEN0C,GAAuB,kBCchBC,GAAkB7b,IAAK,CAClC/C,KAAMyU,GACN1R,UAEW8b,GAAyB9b,IAAK,CACzC/C,KAAM0U,GACN3R,UAEW+b,GAA+B/b,IAAK,CAC/C/C,KAAM2U,GACN5R,UAcWgc,GAA4Bte,GAAM2K,MAAO+Q,EAAU6C,EAAUlD,KACxEK,EAAS0C,IAAuB,IAChC,MAAMI,EAAe5X,YAAW,KAAO,IAAD,EACpC,MAAMqM,EAAI,UAAGZ,GAAkBkM,IAAYve,UAAjC,aAAG,EAAmCkT,YP1CnB5Q,MO4CzBuS,GAAsB0J,MAAetL,GACvCyI,GP7C2BpZ,EO6CAlC,IAAKC,EAAE,oCAAgC,CAChE4S,SP9C8B,CACpC1T,KAAMqc,GACNtZ,aO+CG,KAEGmc,EAAYrT,IAChBsQ,EAASgD,GAAmBtT,IAC5B,MAAMuT,EAAkB7L,GAAoB1H,GAAU,GCrDjB,IAACiO,EAAU/N,EDqFhD,OA/BAoQ,EAASkD,GAAoB3Z,aAAU0Z,EAAgB7K,kBCtDjBuF,EDuDZE,GAAiBgF,KCvDKjT,EDuDQtL,ECtD1D6e,aAAaC,QAAb,kCAAgDzF,GAAY/N,GDwDtDtL,IAAO4U,GAAe2J,OACxB7C,EZhD4B,CAChCnc,KAAMua,KYgDF4B,ELvD+B,CACnCnc,KAAM2c,KKuDFR,EAzBwC,CAC5Cnc,KAAM6U,MA2BJuK,EAAgB7K,eAAeiL,SAAQ1f,IACrC,OAAQA,EAAKE,MACX,KAAKnB,KACL,KAAKC,KACL,KAAKC,KACL,KAAKC,KACL,KAAKC,KACHkd,EAASe,GAAmBuC,aAAyB3f,KACrD,MAEF,KAAKR,KACH6c,EAASN,GAAaC,QAO5BK,EAASyC,GAAgBne,IACzB0b,EAAS0C,IAAuB,IAChCa,aAAaT,GACb9C,EAASM,MACF5Q,GAQT,IAEE,OAAOqT,QADiBT,GAAkB3C,EAAYrb,IAEtD,MAAO2b,GACP,OATcH,EASCG,EARf3F,QAAQC,IAAI,UAAWuF,GAChBA,EAFOA,OA6BL0D,GAAyB5c,GAASqI,UAU7C,IAEE,YD9HkCA,gBAAuB6K,GAA0B0I,GAAsB5b,GC6HnG6c,CAAuB7c,QAT7BoZ,EAAS2C,GAA6B/b,IAWtC,MAAOqZ,GACP,OATcH,EASCG,EARf3F,QAAQC,IAAI,kCAAmCuF,GACxCA,EAFOA,OE9GLkD,GAAqBtM,IAAU,CAC1C7S,KAAMmS,GACNpP,MAAOL,YAAa6Q,GAAoBV,MAY7BwM,GAAsBtc,IAAK,CACtC/C,KAAMsS,GACNvP,UAGW8c,GAAmB,IAAMzU,MAAO+Q,EAAU6C,EAAUlD,KAE/DK,EAzB6BtJ,KAAU,CACvC7S,KAAMkS,GACNnP,MAAOL,YAAa6Q,GAAoBV,MAuB/BiN,MJauB1U,WAChC,IAIE,aAH6B0Q,EAAWE,MAAM,CAC5CnJ,WAAYsL,MAEQtL,WAAWA,WACjC,MAAOoJ,GACP8B,GAAQ9B,KIrBe8D,CAAmBjE,MA8BjCkE,GAAiB,CAACvf,EAAIwf,IAAc7U,MAAO+Q,EAAU6C,EAAUlD,KAC1E,MAAMoD,EAAYze,IAChB0b,EAhDiC,EAACpQ,EAAakU,KAAd,CACnCjgB,KAAMoS,GACNrG,YAAaA,EACbhJ,MAAOkd,IA6CIC,CAAsBzf,EAAIwf,IAC5Bxf,GAQT,IAEE,YJH4B2K,OAAO0Q,EAAYrb,EAAIwf,KACrD,IACMA,QACInE,EAAWqE,OAAO7B,GAAuB,CAC7CI,UAAW,CACTje,cAIEqb,EAAWqE,OAAO5B,GAAyB,CAC/CG,UAAW,CACTje,QAIN,MAAOwb,GACP8B,GAAQ9B,KIdFmE,CAAiBtE,EAAYrb,EAAIwf,GAChCf,EAAUze,GACjB,MAAO2b,GACP,OATcH,EASCG,EARf3F,QAAQC,IAAI,6BAA8BuF,GACnCA,EAFOA,OAYLoE,GAAmB5f,GAAM2K,MAAO+Q,EAAU6C,EAAUlD,KAC/D,IAGE,YJO8B1Q,OAAO0Q,EAAYrb,KACnD,UACQqb,EAAWqE,OAAO3B,GAAyB,CAC/CE,UAAW,CACTje,QAGJ,MAAOwb,GACP8B,GAAQ9B,KIjBFqE,CAAmBxE,EAAYrb,SAC/B0b,EAAS0D,MACRU,QAAQC,UACf,MAAOpE,GAEP,OADA3F,QAAQC,IAAI,4BAA6B0F,GAClCA,I,0BCoCItO,oBAJSxD,IAAK,CAC3BmW,uBAAwB7F,GAAoBtQ,MAGN,CACtCoW,cf1H6BtN,IAAM,CACnCpT,KAAMya,GACNrH,WeyHAuN,iBAAkBxF,IAFLrN,EAlHM,EACnB8S,sBACA1F,YACAuF,yBACAC,gBACAC,mBACAE,cAEA,MAAO7F,EAAS8F,GAAc1Y,mBAASqY,IACjC,GACJnV,GACEyV,YAAM,IAEJC,EAAgB,EACpBC,cACAtb,YAEAmb,EAAW,CACT,CAACG,GAActb,KAIbub,EAAkB,EACtBD,cACAE,sBAEA,MACMC,GADUpG,EAAQiG,IAAgB,IAChB7N,QAAOtT,IAASqhB,EAAgBxJ,SAAS7X,EAAKW,MACtEqgB,EAAW,IAAK9F,EACd,CAACiG,GAAcG,KAIbC,EAAiB,EACrBJ,cACAK,cAEA,MAAMC,EAAUvG,EAAQiG,IAAgB,GAClCO,EAAgBF,EAAQ1b,KAAInF,GAAM8gB,EAAQhL,MAAKzW,GAAQA,EAAKW,KAAOA,MACzEqgB,EAAW,IAAK9F,EACd,CAACiG,GAAcO,KA2CnB,OAAO,mCACItG,EAAUza,IAAM,eAAC,IAAD,CAAOghB,SAAQ,UAAKvG,EAAUza,GAAf,oBAAqCogB,QAASA,EAASa,SAAS,MAAMC,OAAK,EAA1F,UACT,cAAC,IAAD,UAAazG,EAAUxH,OACvB,cAAC,IAAD,UA1BU,MAC1B,MAAMkO,EAAc,CAClBtW,KACAuW,SAAUb,EACVc,WAAYZ,EACZa,UAAWV,GAEPW,EAAgBhH,EAAQE,EAAUza,KAAO,GAE/C,OAAQya,EAAUza,IAChB,KAAK2Z,KAED,OAAO,cAAC,KAAD,CAAiB6H,gBAAiBD,EAAeH,SAAUD,EAAYC,WAGlF,KAAKxH,KACH,OAAO,cAAC,KAAD,CAAkBuG,oBAAqBA,EAAqBsB,QAASF,KAAmBJ,IAEjG,QACE,OAAO,cAAC,KAAD,CAAkBI,cAAeA,EAAef,YAAa/F,EAAUza,GAAIohB,SAAUD,EAAYC,aAO7EM,KACf,cAAC,IAAD,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAQC,WAAS,EAACpW,QAAS6U,EAA3B,SACKhgB,IAAKC,EAAE,YAEZ,cAAC,IAAD,CAAQuhB,SAAO,EAACrW,QAhDvB,KACjB,MAAMvL,EAAKya,EAAUza,GACf6hB,EAActH,EAAQva,GAExB6hB,GAAeA,EAAY9N,OAC7BkM,EAAc,CACZjgB,KACAsC,MAAO,IAAIuf,KAGb3B,EAAiBlgB,GAGnBogB,EAAQpgB,IAmCgB,SACKI,IAAKC,EAAE,0BCvGjC,MACMyhB,GAAe,eACfC,GAAmB,CAC9BC,cAAe,aACfC,0BAA2B,iBAC3BC,+BAAgC,QAChC/B,oBAAqB,cACrB5d,SAAU,KACV4f,qBAAsB,GACtBC,qDAAqD,GAqBhD,MAAMC,GAAexY,GAASA,EAAMyY,SAC9BC,GAAkC1Y,GAASwY,GAAaxY,GAAOsW,oBAI/DqC,GAAoD3Y,GAASwY,GAAaxY,GAAOuY,oDCnCjFK,GAA6B,6BAC7BC,GAA+B,+BAC/BC,GAAuC,GAiB7C,MAAMC,GAA2B/Y,GAASA,EAAMgZ,qBClB1CC,GAA4BxgB,IAAK,CAC5C/C,KAAMkjB,GACNngB,U,0BCyDa+K,oBAfSxD,IAAK,CAC3BsW,oBAAqBoC,GAAgC1Y,GACrD4Q,UAAWmI,GAAyB/Y,GACpCpC,WAAYoS,GAAehQ,GAC3BmW,uBAAwB7F,GAAoBtQ,MAWN,CACtCkZ,0BDxDyC,MACzCxjB,KAAMmjB,KCwDNM,wBAAyBF,IAFZzV,EA5CQ7E,IACrB,MAAOya,EAAaC,GAAkBvb,oBAAS,GACzCgH,EAAMO,iBAAO,MAEbiU,EAAgB,KACpBD,GAAe,GACf1a,EAAMua,6BAOR,OAAO,qCACG,sBAAMvZ,UAAWC,KAAQ2Z,gBAAiBzU,IAAKA,EAA/C,SACI,eAAC,IAAD,CAAQpD,QAAS,IAAM2X,GAAe,GAAtC,UACK9iB,IAAKC,EAAE,cACR,cAAC,KAAD,SAGP4iB,GAAe,cAAC,IAAD,CAASI,eAAgBF,EAAeG,UAAW3U,EAAK4U,OAAO,EAAM5T,UAAU,eAAeqR,SAAS,2BAAvG,SACR,cAAC,KAAD,CAAiB9W,MAAO,CACpC7C,MAAO,SACNI,WAAYe,EAAMf,WAAY+b,iBAdbxjB,IACtBwI,EAAMwa,wBAAwBxa,EAAMf,WAAWqO,MAAK2E,GAAaA,EAAUza,KAAOA,MAaZyjB,YAAane,OAAOuQ,KAAKrN,EAAMwX,4BAE3F5D,IAAQ5T,EAAMiS,WAAoI,KAAvH,cAAC,GAAD,CAAc0F,oBAAqB3X,EAAM2X,oBAAqB1F,UAAWjS,EAAMiS,UAAW2F,QAAS+C,U,sBCnB5I,MAAMO,GAAelb,IACnB,MAAOmb,EAAmBC,GAAwBjc,oBAAS,IACpDkc,EAAqBC,GAA0Bnc,oBAAS,IACxDoc,EAAaC,GAAkBrc,mBAAS,OACzC,MACJN,GACEa,KACE,GACJ2C,GACEyV,YAAM,KACJ,GACJtgB,EADI,KAEJiT,EAFI,YAGJE,EAHI,OAIJS,EAJI,gBAKJY,EALI,QAMJrJ,EANI,yBAOJ8Y,EAPI,sBAQJC,GACE1b,EAEE2b,EAAsB,IAAML,GAAwBD,GAEpDO,EAAoB,IAAMR,GAAsBD,GAMhDtZ,EAAWc,EAAUS,KAAOyY,KAElC,GAAIN,EACF,OAAO,cAAC,IAAD,CAAUhY,GAAIgY,IAGvB,MAAMO,EAA2B9P,EAAkBpU,IAAKC,EAAE,oBAAsBD,IAAKC,EAAE,oBAOjFkkB,EAA8BpZ,EAAU/K,IAAKC,EAAE,oBAAsBD,IAAKC,EAAE,kBAQ5EmkB,EAAYhO,sBACZiO,EAAa1iB,YAAS6R,GACtB8Q,EAAqB1a,IAAGP,KAAQkb,cAAexR,EAAc1J,KAAQmb,KAAOnb,KAAQob,QAC1F,OAAO,qCACG,sBAAKrb,UAAWC,KAAQwE,UAAxB,UACI,sBAAKzE,UAAWC,KAAQqb,SAAxB,UACI,sBAAMtb,UAAWC,KAAQsb,MAAO/Y,YAAU,uBAA1C,SACKiH,IAEL,sBAAKzJ,UAAWC,KAAQub,QAAxB,UACI,qBAAKxb,UAAWC,KAAQwb,aAAc1Z,QAAS0Y,EAA/C,SACI,cAAC5Z,EAAD,CAAUH,MAAO,CAC/BO,KAAMyB,IAAOwM,aAGH,sBAAKlP,UAAWC,KAAQyb,MAAxB,UACKT,EAAWU,OAAS,cAAC,IAAD,CAAM3b,UAAWC,KAAQ2b,SAAUrZ,GAAE,WAAM/L,EAAN,SAAiBgM,YAAU,sBAAhE,SACb,cAAC,IAAD,UAAS5L,IAAKC,EAAE,YACV,KACbokB,EAAWY,OAAS,cAAC,IAAD,CAAQ7b,UAAWC,KAAQ6b,YAAa/Z,QAAS4Y,EAAjD,SACZ/jB,IAAKC,EAAE,WACA,KAChB,cAAC,GAAD,IACA,sBAAMsO,IAAK6V,EAAX,SACI,eAAC,IAAD,CAAQnY,MAAOY,EAAc5F,GAAQ2Z,SAAS,cAAczV,QAAS6Y,EAArE,UACI,cAACzL,GAAD,IACA,sBAAMnP,UAAWC,KAAQ8b,WAAzB,SACKnlB,IAAKC,EAAE,kBAKvBsjB,GAAqB,cAAC,IAAD,CAASL,UAAWkB,EAAW7U,UAAU,eAAe0T,eAAgBe,EAAxE,SACd,eAAC,IAAD,WACI,cAAC,IAAD,CAAUoB,OAAK,EAACna,MAAOkZ,EAA6BhZ,QAxCvD,KAE7B0Y,IACAG,OAsCgC,cAAC,IAAD,CAAUoB,OAAK,EAACna,MAAOiZ,EAA0B/Y,QAhDvD,KAC1B2Y,IACAE,OA+CgC,eAAC,IAAD,CAAUoB,OAAK,EAACna,MAAOjL,IAAKC,EAAE,SAAU2gB,SAAS,kBAAjD,UACI,cAAC,IAAD,CAAUwE,OAAK,EAACna,MAAOjL,IAAKC,EAAE,oBAAqBkL,QA9DrE,IAAMyY,EAAe,GAAD,OAAIhkB,EAAJ,iBA8DuEghB,SAAS,2BAClF,cAAC,IAAD,CAAUwE,OAAK,EAACna,MAAOjL,IAAKC,EAAE,qBAAsBkL,QA7DxE,IAAMyY,EAAe,GAAD,OAAIhkB,EAAJ,eA6DwEghB,SAAS,uCAMxGxM,GAAmB,qBAAKhL,UAAWkb,EAAhB,SACXvR,GAAe/S,IAAKC,EAAE,uBAGlCL,GAAM,cAAC,KAAD,CAAe6K,GAAIA,EAAI7K,GAAIA,EAAIT,KAAK,YAAYkmB,KAAM5B,EAAqB6B,eAAgBvB,QAc9GT,GAAatZ,aAAe,CAC1B6I,KAAM,GACNE,YAAa,GACbhI,SAAS,EACTqJ,iBAAiB,GAiCJnH,oBA9BSxD,IACtB,MAAM7J,EAAK4U,GAAe/K,GACpB+I,EAAYP,GAAkBxI,EAAO7J,IAAOgS,GAClD,MAAO,CACLhS,KACAiT,KAAML,EAAUM,YAChBC,YAAaP,EAAUQ,mBACvBU,eAAgBtB,GAAmB3I,GACnC2K,gBAAiBM,GAA4BjL,GAC7CsB,QAASyH,EAAUzH,QACnByI,OAAQhB,EAAUgB,UAoBkB,MAhBrB,CAAC+R,EAAYC,EAAeC,KAC7C,MAAM,GACJ7lB,EADI,QAEJmL,EAFI,gBAGJqJ,GACEmR,GACE,SACJjK,GACEkK,EACJ,MAAO,IAAKD,KACPE,EACH5B,yBAA0B,IAAMvI,EAAS6D,GAAevf,GAAKmL,IAC7D+Y,sBAAuB,IAAMxI,EAASwD,IAAwB1K,OAInDnH,CAA2CqW,I,+BCvKnD,MAAMoC,GAA0B,0BAC1BC,GAAuB,uBACvBC,GAAsB,sBACtBC,GAAiB,iBACjBC,GAAuB,uBACvBC,GAAqB,qBACrBC,GAAwB,wBACxBC,GAAwB,wBACxBC,GAA4B,4BAC5BC,GAAyB,yBACzBC,GAA2B,2BAC3BC,GAA+B,GAC/BC,GAAsB,CACjC1mB,GAAI,GACJiT,KAAM,GACNW,OAAQ,GACRT,YAAa,GACbW,eAAgB,GAChB6S,kBAAkB,GA6Hb,MAAMC,GAAwB/c,GAASA,EAAMgd,cAEvCC,GAAgBjd,IAAUuS,IAAQvS,EAAMgd,eACxCE,GAAyBld,GAAS+c,GAAsB/c,GAAO8c,iBAM/DK,GAAyBnd,GAAS9H,YAAS6kB,GAAsB/c,IAAQiK,eC1JhFwJ,GAAU9B,GAASxF,QAAQC,IAAI,UAAWuF,GAEnCyL,GAA0B,CACrClM,SAAU,aACVxb,KAAM,SACNwT,KAAM,EACJA,UACIA,GAEKmU,GAA0B,CACrCnM,SAAU,aACVxb,KAAM,SACNS,GAAI,EACFA,QACIA,EACN+S,KAAM,EACJA,UACIA,GAGFoU,GAAkB,CAACvU,EAAY,GAAIG,KAChC,IAAKH,EACVK,KAAMF,EAAKE,KACXE,YAAaJ,EAAKI,YAClBW,eAAgBf,EAAKe,eAAe3O,KAAI9F,IAAI,IAAUA,EACpDgI,MAAOhI,EAAKsE,EACZuD,OAAQ7H,EAAKuE,QCANwjB,GAAuB,MAClC7nB,KAAMwmB,KAoBKsB,GAAqBhoB,IAChC,MAAME,EAAOF,EAAKE,YACXF,EAAKE,KACZ,MAAM+nB,EAAehoB,KAAYC,GAAMW,SACjCF,EAAKunB,yBACLC,EAAqBljB,aAAsBtE,GACjD,IAAIynB,EAEJ,GAAIloB,IAASP,KAAW,CACtB,MAAM2F,EAAOtF,EAAKsF,MAAQ,EAC1B8iB,EAAQ/iB,aAAsBC,EAAMtF,EAAKuF,eAEzC6iB,EADSloB,IAASN,KACV8F,eAEAvB,KAGV,MAAO,CACLjE,KAAM4mB,GACN7jB,MAAO,CACLtC,KACAT,OACA0hB,SAAU5hB,EAAK4hB,UAAY,KAC3B,CAACqG,GAAejoB,EAAK8K,WAClB3G,QACAgkB,KACAC,KAIIC,GAAwBroB,IAAI,CACvCE,KAAM8mB,GACN/jB,MAAOjD,IAEIsoB,GAAwBrlB,IAAK,CACxC/C,KAAM6mB,GACN9jB,UAGWslB,GAAiB,IAAMjd,MAAO+Q,EAAU6C,EAAUlD,KAC7D,MAAMzI,EAAYgU,GAAsBrI,KAClCsJ,EAAkB,IAAKjV,EAC3BkB,eAAgB1C,GAAwBwB,EAAUkB,gBAClDb,KAAML,EAAUK,MAAQ7S,IAAKC,EAAE,uBAGjC,IACE,MAAMiL,EAAcuc,EAAgB7nB,QD/DT2K,OAAO0Q,EAAYtI,KAChD,IACE,MAAMH,QAAkBoL,GAAkB3C,EAAYtI,EAAK/S,KACrD,SACJ8nB,SACQzM,EAAWqE,OAAOwH,GAAyB,CACnDjJ,UAAW,CACTje,GAAI+S,EAAK/S,GACT+S,KAAMoU,GAAgBvU,EAAWG,MAGrC,OAAO+U,EAASC,IAChB,MAAOvM,GACP8B,GAAQ9B,KCkDuCwM,CAAgB3M,EAAYwM,QD/ClDld,OAAO0Q,EAAYtI,KAC9C,IACE,MAAM,SACJ+U,SACQzM,EAAWqE,OAAOuH,GAAyB,CACnDhJ,UAAW,CACTlL,KAAMoU,GAAgB,GAAIpU,MAG9B,OAAO+U,EAASC,IAChB,MAAOvM,GACP8B,GAAQ9B,KCoC4FyM,CAAc5M,EAAYwM,GAG9H,OAFAnM,EAAS0L,YACH1L,EAAS4C,GAA0BhT,IAClCwU,QAAQC,QAAQzU,GACvB,MAAOkQ,GA1FKA,KACdxF,QAAQC,IAAI,6BAA8BuF,IA0FxC8B,CAAQ9B,K,+CC9FZ,MAAM0M,GAAgB,EACpB7oB,OACAqV,aACAyT,gBACAC,UACAle,YAEA,MAAM,GACJW,GACEyV,YAAM,KACJ,QACJzf,GACEwnB,cACEC,EAAc,CAClBznB,UACA0nB,KAAM1d,EAAGE,IAAIC,SAASwd,eAAeC,eAEjCC,EAAWxZ,mBACXyZ,EAAiBzZ,mBACvBtH,qBAAU,KACRghB,aAAKvpB,EAAM8oB,EAAe,CACxBG,cACA5T,aACA0T,YAEFM,EAASpZ,QAAUjQ,EACnBspB,EAAerZ,QAAUoF,EAClB,IAAMmU,aAAQxpB,EAAMqV,KAC1B,IACH9M,qBAAU,KACJkhB,MACFD,aAAQxpB,EAAMspB,EAAerZ,SAC7BsZ,aAAKvpB,EAAM8oB,EAAe,CACxBG,cACA5T,gBAIJgU,EAASpZ,QAAUjQ,EACnBspB,EAAerZ,QAAUoF,IACxB,CAACrV,EAAM8oB,EAAezT,IAMzB,MAAMoU,EAAqB,KACzB,MAAMC,EAAgBL,EAASpZ,UAAYjQ,EACrC2pB,EAAaL,EAAerZ,UAAYoF,EAC9C,OAAOqU,GAAiBC,GAG1B,OAAO,qBAAKhpB,GAAIqG,aAAiBhH,EAAKW,IAAKkK,MAAOA,KAUpDge,GAAc9d,aAAe,CAC3BF,MAAO,GACP7K,KAAM,GACN+oB,QAAS,GACTD,cAAe,IAEFD,U,sBC9DAe,OATgB,EAC7BC,aAEO,qBAAK1f,UAAWC,KAAQyf,QAAxB,SAAkCA,ICqC5BC,OApCG,EAChBC,kBACG5gB,MAEH,GAAIA,EAAMnJ,KAAKE,OAASjB,KAAK,CAG3B,MAAM+qB,EAAW7gB,EAAM2f,cAAckB,SAASlkB,KAAImkB,GAC5CA,EAAQC,MAAMrS,SAAS,aAAeoS,EAAQC,MAAMrS,SAAS,SACxDkS,EAAaE,EAAS9gB,EAAM4R,aAG9BkP,IAET9gB,EAAM2f,cAAgB,IAAK3f,EAAM2f,cAC/BkB,iBAMF7gB,EAAM2f,cAAgBiB,EAAa5gB,EAAM2f,cAAe3f,EAAM4R,aAGhE,OAAOoP,aAAkBhhB,EAAMkM,YAAclM,EAAMnJ,KAAKE,MAAQ,cAAC,GAAD,CAAe6oB,QAAS,CACtFqB,WAAW,MACNjhB,IAAY,cAAC,GAAD,CAAwB0gB,QAAS9oB,IAAKC,EAAE,8C,sBCxB9CqpB,OANK,IACX,qBAAKlgB,UAAWC,KAAQkgB,OAAxB,SACG,cAAC,IAAD,MC6BGC,OAnCkB,CAACzB,EAAe5N,KAC/C,IAAKjV,OAAOuQ,KAAK0E,GAASxG,OACxB,OAAOoU,EAIT,MAAM0B,EAAU1B,EAAclY,KAAK9K,KAAI/C,IAAG,IAAUA,MAE9C0nB,EAAa3B,EAAc4B,QAAQ5kB,KAAI/C,IAAG,IAAUA,MAEpD4nB,EAAa7B,EAAc5N,QAAQpV,KAAI/C,IAAG,IAAUA,MAkB1D,OAhBAkD,OAAOuQ,KAAK0E,GAASwE,SAAQyB,IAC3B,GAAIjG,EAAQiG,GAAc,CACxB,IAAIyJ,GAAiB,EACrB,CAACJ,EAASC,EAAYE,GAAYjL,SAAQmL,GAAoBA,EAAiBvX,QAAOvQ,GAAOA,EAAIqY,YAAc+F,IAAazB,SAAQ3c,IAClI6nB,GAAiB,EACjB7nB,EAAI8C,MAAQqV,EAAQiG,QAGjByJ,GACHD,EAAWjS,KAAK,CACd0C,UAAW+F,EACXtb,MAAOqV,EAAQiG,SAKhB,IAAK2H,EACVlY,KAAM4Z,EACNE,QAASD,EACTvP,QAASyP,IC7BN,MAIDG,GAAeC,IAAM,IAAUA,EACnCpqB,QAAIoD,IAiCSinB,OA9BgB,CAAClC,EAAemC,EAAc5V,KAC3D,GAAI4V,IAAiBhsB,MAAOgsB,IAAiB5V,EAAY,CACvD,MAAM6V,GARaplB,EAQqBgjB,GARVkB,UAAYlkB,EAAIkkB,SAASvT,MAAK0U,GAAMA,EAAGjB,MAAMrS,SAFjD,cAY1B,YAAyB9T,IAArBmnB,EACK,KAGFJ,GAAa,IAAKhC,KACpBoC,EACHlB,cAAUjmB,EACV7D,KAAMmV,IAAerW,KAAQosB,KAAkBC,OAE5C,GAAIJ,IAAiBlsB,MAAgBsW,IAAerW,KAAO,CAChE,MAAMssB,EAASC,aAAyBzC,EAAesC,MACvD,OAAON,GAAa,IAAKhC,KACpBwC,EACHprB,KAAMkrB,OAEH,GAAIH,IAAiBjsB,MAASqW,IAAetW,KAAc,CAChE,MAAMusB,EAASC,aAAyBzC,EAAeuC,MACvD,OAAOP,GAAa,IAAKhC,KACpBwC,EACHprB,KAAMmrB,OA7BWvlB,MAiCrB,OAAOglB,GAAahC,ICpBP0C,OAdIC,IACjB,IAAIC,EACAC,EACJ,MAAO,IAAIC,KACLF,GAAYE,EAAKlX,SAAWgX,EAAShX,QAAUkX,EAAKC,OAAM,CAACC,EAAK3mB,IAAM2mB,IAAQJ,EAASvmB,OAI3FumB,EAAWE,EACXD,EAAYF,KAAMG,IAJTD,ICUb,MAAMI,WAAsB/iB,IAAMC,UAKhCC,YAAYC,GACVC,MAAMD,GADW,KAJnBqB,MAAQ,CACNwhB,cAAc,GAGG,KAMnBC,kBAAoB,KAClB3iB,KAAKC,SAAS,CACZyiB,cAAc,KANhB1iB,KAAK4iB,iCAAmCV,GAAWjB,IACnDjhB,KAAK6iB,+BAAiCX,GAAWR,IASnDvgB,SACE,MAAM,cACJqe,EADI,WAEJzT,EAFI,KAGJrV,EAHI,YAIJ+a,EAJI,gBAKJqR,GACE9iB,KAAKH,MAET,IAAK2f,EACH,OAAO,cAAC,GAAD,CAAwBe,QAAS9oB,IAAKC,EAAE,wBAGjD,MAAMqrB,EAAc,CAClBrsB,OACA+a,cACA1F,aACAxK,MAAO,CACLhD,OAAQukB,GAEVtD,cAAexf,KAAK6iB,+BAA+BrD,EAAe9oB,EAAKE,KAAMmV,IAG/E,OAAQA,GACN,KAAKvW,KACL,KAAKE,KACL,KAAKD,KAED,OAAO,sCACSuK,KAAKkB,MAAMwhB,cAAgB,qBAAKnhB,MAAOwhB,EAAYxhB,MAAxB,SACrB,cAAC,GAAD,MAER,cAAC,IAAD,CAAQyhB,SAAU,GAAlB,SACK,EACb9gB,QACI,cAAC,KAAD,CAAqBA,GAAIA,EAAIsd,cAAexf,KAAK4iB,iCAAiCG,EAAYvD,cAAeuD,EAAYtR,aAAckR,kBAAmB3iB,KAAK2iB,kBAAmBM,cAAc,EAAM1hB,MAAOwhB,EAAYxhB,aAKvO,KAAK5L,KAED,OAAO,cAAC,GAAD,CAAW8qB,aAAczgB,KAAK4iB,oCAAsCG,IAG/E,QAGI,OADAA,EAAYvD,cAAgBxf,KAAK4iB,iCAAiCG,EAAYvD,cAAeuD,EAAYtR,aAClGoP,aAAkBkC,EAAYhX,YAAcgX,EAAYrsB,KAAKE,MAAQ,cAAC,GAAD,IAAmBmsB,IAAkB,cAAC,GAAD,CAAwBxC,QAAS9oB,IAAKC,EAAE,+CAqBpJgN,oBANS,CAACxD,EAAOgc,KACvB,CACLsC,cAAe7L,GAAkBzS,EAAOwT,aAAmBwI,EAASxmB,UAIzDgO,CAAyB+d,I,sBClGxC,MAAMS,WAA2BxjB,IAAMC,UACrCC,YAAYC,GACVC,MAAMD,GACNG,KAAKkB,MAAQ,CACXiiB,YAAY,GAIhBC,kBAAkBvQ,EAAOwQ,GACvBrjB,KAAKC,SAAS,CACZkjB,YAAY,IAEd9V,QAAQC,IAAI,UAAWuF,GACvBxF,QAAQC,IAAI,SAAU+V,GAGxBliB,SACE,OAAInB,KAAKkB,MAAMiiB,WACN,oBAAGtiB,UAAWC,KAAQwE,UAAtB,UACO,sBAAMzE,UAAWC,KAAQkC,KAAzB,SACI,cAACqN,GAAD,MAEJ,sBAAMxP,UAAWC,KAAQyf,QAAzB,SACK9oB,IAAKC,EAAE,wDAKrBsI,KAAKH,MAAMhB,UAQPqkB,U,qBC7BAI,OATS,EACtBC,mBAEOA,EAAgB,qBAAK1iB,UAAWC,KAAQ0iB,gBAAxB,SAA0CD,IAAuB,K,4CCW3EE,OAXU,EACvB7gB,aACI,wBAAQhM,KAAK,SAASiK,UAAWC,KAAQ4iB,iBAAkB9gB,QAASA,EAASwZ,MAAO3kB,IAAKC,EAAL,eAApF,SACE,cAAC,KAAD,CAAY6J,MAAO,CACvBO,KAAMyB,IAAOogB,YCJjB,MAeMpf,GAAqB,CACzBya,0BAEata,mBAAQ,KAAMH,GAAdG,EAlBS,EACtB9I,SACAojB,2BAIO,qBAAKne,UAAWC,KAAQ0iB,gBAAxB,SACG,cAAC,GAAD,CAAkB5gB,QAHH,IAAMoc,EAAsBpjB,SCHxCgoB,OALK,IAAM,sBAAKjiB,MAAM,6BAA6BpD,OAAO,KAAKqD,QAAQ,YAAYlD,MAAM,KAAKoD,KAAMyB,IAAOwM,QAAhG,UAClB,sBAAMlO,EAAE,gBAAgBC,KAAK,SAC7B,sBAAMD,EAAE,wG,sBCODgiB,OANM,IAAM,qBAAKhjB,UAAWC,KAAQgjB,QAAxB,SACnB,cAAC,IAAD,CAAStiB,QAAS/J,IAAKC,EAAE,mDAAoDsP,UAAU,SAAvF,SACI,cAAC+c,GAAD,QCRL,MAAMC,GAAO,OACPC,GAAM,MACNC,GAAO,OACPC,GAAQ,QACRC,GAAe,eACfC,GAAaC,GAAQ,CAACN,GAAMC,IAAK1V,SAAS+V,GAC1CC,GAAcD,GAAQ,CAACH,GAAOC,IAAc7V,SAAS+V,GACrDE,GAAaF,GAAQA,IAASJ,GCYrCO,GAAa/kB,IAAMglB,YAAW,EAClCC,gBACAvI,QACAwI,iBACGC,GACF7e,KACD,MAAM8e,EAhBkBF,KACjB,CACL,CAACV,IAAOZ,GACR,CAACU,IAAOe,GACR,CAACX,IAAeQ,EAAcI,GAAgB,OAYhCC,CAAkBL,GAAaD,GAC/C,OAAO,sBAAK9jB,UAAWC,KAAQokB,eAAgBlf,IAAKA,EAA7C,UACO,mBAAGnF,UAAWC,KAAQqkB,UAAtB,SAAkC/I,IACjC0I,EAAU,cAACA,EAAD,IAAaD,IAAW,WAGnDJ,GAAWla,YAAc,aAMV7F,mBAAQ,KAAM,KAAM,KAAM,CACvCggB,YAAY,GADChgB,CAEZ+f,I,qFC1BH,MAAMW,GAAW,CACftjB,KAAMyB,IAAOwM,SAkGAsV,OA/FWxlB,IACxB,MAAOylB,EAAYC,GAAiBvmB,mBAAS,OACvC,QACJ9G,GACEwnB,eACE,KACJhpB,EADI,cAEJ8oB,EAFI,mBAGJgG,EAHI,WAIJzZ,GACElM,EACE4lB,EAAgBzuB,aAAoBN,EAAKE,MAEzC8uB,EAAc,KAClBC,IACAH,EAAmBC,EAAgB7vB,KAAeH,OAG9CmwB,EAAc,KAClBD,IACAH,EAAmBC,EAAgB5vB,KAAcH,OAG7CmwB,EAAY,KAChBF,IACAH,EAAmB7vB,OAoBfgwB,EAAY,IAAMJ,GAAc,GAEhC3uB,EAAO4oB,EAAc5oB,MAAQF,EAAKE,KAClCkvB,GAAaC,aAAcnvB,KAAUovB,aAAepvB,IAASA,IAASqvB,MAAkBrvB,IAASsvB,KACjGC,EAA0BtmB,EAAMumB,aAAe3uB,IAAKC,EAAL,oCAA6CD,IAAKC,EAAL,oCAE5F2uB,EAAkB,IAAM,qCACnBta,IAAerW,MAASqW,IAAelW,MAAe,cAAC,IAAD,CAAUgnB,OAAK,EAACna,MAAOjL,IAAKC,EAAE,iBAAkBkL,QAASgjB,EAAa5iB,KAAM,cAAC,KAAD,CAAWzB,MAAO6jB,OACpJrZ,IAAetW,MAAgBsW,IAAenW,MAAgB,cAAC,IAAD,CAAUinB,OAAK,EAACna,MAAOjL,IAAKC,EAAE,iBAAkBkL,QAAS8iB,EAAa1iB,KAAM,cAAC,KAAD,CAAWzB,MAAO6jB,OAzB1IvuB,aAAWH,EAAKE,OA0BdmV,IAAepW,MAAO,cAAC,IAAD,CAAUknB,OAAK,EAACna,MAAOjL,IAAKC,EAAE,eAAgBkL,QAASijB,EAAW7iB,KAAM,cAAC,KAAD,CAASzB,MAAO6jB,UAGvIvJ,EAAYhO,sBAClB,OAAOhO,EAAMymB,aAAe,cAAC,IAAD,CAAQ5iB,OAAK,EAACsV,WAAS,EAACpW,QAAS/C,EAAM0mB,mBAAvC,SAClB,cAAChW,GAAD,MACQ,qCACR,qBAAKvK,IAAK6V,EAAV,SACI,cAAC,IAAD,CAAQnY,OAAK,EAACsV,WAAS,EAACpW,QAnBrB,IAAM2iB,GAAc,GAmBoBlN,SAAS,4BAApD,SACI,cAACrI,GAAD,QAGPsV,GAAc,cAAC,IAAD,CAAS3K,UAAWkB,EAAW7U,UAAU,aAAa4T,OAAO,EAAOF,eAAgBiL,EAApF,SACP,eAAC,IAAD,WACKG,GAAa,qCACN,cAACO,EAAD,IACA,cAAC,IAAD,OAER,cAAC,IAAD,CAAUxJ,OAAK,EAAC7Z,KAAM,cAAC,KAAD,CAAYzB,MAAO,CACvDO,KAAM,aACDY,MAAOjL,IAAKC,EAAE,0BAA2B,CAC9CN,QAASD,aAAWT,EAAKE,QACvB4vB,KAAMC,aAAQ/vB,EAAMwB,GAAU2N,OAAO,WACzB,cAAC,IAAD,CAAUgX,OAAK,EAAC7Z,KAAM,cAACiN,GAAD,IAAkBvN,MAAOyjB,EAAyBvjB,QA/C5D,KAChC/C,EAAM6mB,iBAEFpB,GACFK,OA4CmB9lB,EAAM8mB,qBAAuB,cAAC,IAAD,CAAU9J,OAAK,EAAC7Z,KAAM,cAACsN,GAAD,IAAgB5N,MAAOjL,IAAKC,EAAE,mBAAoBkL,QAxCxF,KAClC/C,EAAM0mB,qBACNZ,gB,4CCnCWiB,OAfI/mB,IACjB,MAAM,GACJqC,GACEyV,YAAM,IACV,OAAO,sBAAKtU,YAAU,uBAAf,UACG,oBAAIxC,UAAWC,KAAQ+lB,OACvB,qBAAKhmB,UAAWC,KAAQgmB,gBAAxB,SACI,cAAC,KAAD,CAA0B5kB,GAAIA,EAAIxL,KAAMmJ,EAAMnJ,KAAME,KAAMiJ,EAAMnJ,KAAKE,KAAK0X,cAAejX,GAAIqd,aAAmB7U,EAAMnJ,MAAOU,QAAQ,oBCU9I,MAAM2vB,WAAapnB,YAOxBC,YAAYC,GACVC,MAAMD,GADW,KANnBqB,MAAQ,CACN8lB,YAAY,EACZC,cAAc,EACdX,cAAc,GAGG,KAyCnBY,sBAAwB,KACtB,MAAMtpB,EAAKC,SAASC,cAAckC,KAAKmnB,mBACvC,UAAY,OAAFvpB,QAAE,IAAFA,OAAA,EAAAA,EAAIwpB,sBAAJ,OAAyBxpB,QAAzB,IAAyBA,OAAzB,EAAyBA,EAAIypB,2BA3CtB,KA6CnBC,uBAAyB,KACvBtnB,KAAKC,SAAS,CACZqmB,eAAgBzoB,SAAS0pB,qBAAuB1pB,SAAS2pB,2BA/C1C,KAkDnBjB,mBAAqB,KACnB,GAAKvmB,KAAKkB,MAAMolB,aASdzoB,SAAS4pB,eAAiB5pB,SAAS4pB,iBAAmB5pB,SAAS6pB,2BATnC,CAC5B,MAAM9pB,EAAKC,SAASC,cAAckC,KAAKmnB,oBAEvC,OAAIvpB,QAAJ,IAAIA,OAAJ,EAAIA,EAAIwpB,mBACNxpB,EAAGwpB,qBACE,OAAIxpB,QAAJ,IAAIA,OAAJ,EAAIA,EAAIypB,0BACbzpB,EAAGypB,4BAzDU,KA+DnBM,aAAezF,IAAW,IAAM0F,SA/Db,KAgEnBlB,eAAiB,KACf1mB,KAAKC,SAAS,CACZ+mB,YAAahnB,KAAKkB,MAAM8lB,YACvBhnB,KAAKH,MAAMgoB,qBAAqB7nB,KAAKH,MAAMnJ,KAAKW,MAnElC,KAqEnBywB,cAAgBlxB,IACdA,IAASoJ,KAAK+nB,iBAAmB/nB,KAAKH,MAAMioB,cAAc9nB,KAAKH,MAAMnJ,KAAKW,GAAIT,IAtE7D,KAwEnBmxB,cAAgB,IACV/nB,KAAKH,MAAMmoB,UACNhoB,KAAKH,MAAMnJ,KAAKE,KAGlBoJ,KAAKH,MAAMkM,YAAc/L,KAAKH,MAAMnJ,KAAKE,KA7E/B,KA+EnBqxB,mBAAqB,KACnB,GAAIjoB,KAAKkB,MAAMolB,aACb,MAAO,OAGT,MAAM4B,EAAmBloB,KAAKH,MAAMnJ,KAAK4G,eAAiB0C,KAAKmoB,UAAUxhB,QAAQxI,aHjGjD,GGiGuFiqB,GACvH,OAAOpoB,KAAKqoB,yBAAyBH,EAAkBloB,KAAKsoB,WAAatoB,KAAKsoB,WAAWC,aAAe,KAAMlE,GAAWrkB,KAAKH,MAAM8kB,gBAAkBJ,GAAYvkB,KAAKH,MAAM8kB,iBAnF7K3kB,KAAKsoB,WAAa5oB,IAAMmO,YACxB7N,KAAKmoB,UAAYzoB,IAAMmO,YACvB7N,KAAKmnB,kBAAL,yBAA2CnnB,KAAKH,MAAMnJ,KAAKW,IAC3D2I,KAAKqoB,yBAA2BnG,IAAW,CAACgG,EAAkBM,EAAgBC,IAAmBA,GAAiBD,GAAqCN,IAGzJ,0BACEloB,KAAKH,MAAM6oB,0BAA0BjU,GAAsBzU,KAAKH,MAAMnJ,OAEtE,IACMsJ,KAAKH,MAAM8oB,sBAAwBnE,GAAWxkB,KAAKH,MAAM8kB,sBACrD5iB,EAAsB/J,aAAsBgI,KAAKH,MAAMnJ,KAAKE,MAAO8d,aAAmB1U,KAAKH,MAAMnJ,OAEzG,MAAOkyB,GACPvb,QAAQC,IAAIsb,GAGd5oB,KAAKC,SAAS,CACZgnB,cAAc,IAEhB,MAAMrpB,EAAKC,SAASC,cAAckC,KAAKmnB,oBAEvC,OAAIvpB,QAAJ,IAAIA,OAAJ,EAAIA,EAAIwpB,mBACNxpB,EAAGirB,mBAAqB7oB,KAAKsnB,wBACxB,OAAI1pB,QAAJ,IAAIA,OAAJ,EAAIA,EAAIypB,2BACbzpB,EAAGkrB,yBAA2B9oB,KAAKsnB,wBAIvCyB,uBACE,MAAMnrB,EAAKC,SAASC,cAAckC,KAAKmnB,oBAEvC,OAAIvpB,QAAJ,IAAIA,OAAJ,EAAIA,EAAIirB,oBACNjrB,EAAGyB,oBAAoB,qBAAsBW,KAAKsnB,yBAC7C,OAAI1pB,QAAJ,IAAIA,OAAJ,EAAIA,EAAIkrB,2BACblrB,EAAGyB,oBAAoB,2BAA4BW,KAAKsnB,wBAmD5DnmB,SACE,MAAM,KACJzK,EADI,cAEJiuB,EAFI,YAGJlT,GACEzR,KAAKH,OACH,WACJmnB,GACEhnB,KAAKkB,MACH6K,EAAa/L,KAAK+nB,gBAClBxE,EAAgB1C,aAAkB9U,GAAcrV,EAAKE,MAAQ,cAAC,GAAD,CAAmBF,KAAMA,EAAM8oB,cAAexf,KAAKH,MAAM2f,cAAegG,mBAAoBxlB,KAAK8nB,cAAepB,eAAgB1mB,KAAK0mB,eAAgBH,mBAAoBvmB,KAAKumB,mBAAoBxa,WAAYA,EAAYqa,aAAcY,EAAYV,aAActmB,KAAKkB,MAAMolB,aAAcK,oBAAqB3mB,KAAKknB,0BAA8B,KACtZ,OAAO,qCACK,cAAC,GAAD,CAAY9K,MAAO4M,aAAqBtyB,GAAOkF,OAAQlF,EAAKW,GAAIksB,cAAeA,EAAevd,IAAKhG,KAAKmoB,UAAWxD,cAAeA,EAAeC,YAAaluB,EAAKuyB,YACnK,cAAC,GAAD,UACI,qBAA0CpoB,UAAU,yBAAyBmF,IAAKA,GAAOhG,KAAKsoB,WAAatiB,EAA3G,SACKhG,KAAKkB,MAAM+lB,cAAgB,cAAC,GAAD,CAAevwB,KAAMA,EAAMqV,WAAYA,EAAY0F,YAAaA,EAAaqR,gBAAiB9iB,KAAKioB,wBADzHjoB,KAAK2nB,aAAalW,MAI/B+S,GAAWG,IAAkBqC,EAAa,cAAC,GAAD,CAAYtwB,KAAMA,IAAW,SAiBxFqwB,GAAKtlB,aAAe,CAClB/K,KAAM,GACNmxB,qBAAsBqB,SAASC,UAC/B3J,cAAe,IAGjB,MAWMjb,GAAqB,CACzBujB,c9BhJyC,CAACzwB,EAAI0U,KAC/B,CACbnV,KAAM4U,GACNnU,KACA0U,e8B6IF2c,oBAAqB5U,IAERpP,oBAfS,CAACxD,EAAOgc,KAAc,IAAD,EAC3C,MAAMzL,EAAe4S,GAAWnH,EAASyH,eAA8CpT,GAA7BC,GAAoBtQ,GAC9E,MAAO,CACL6K,WAAYK,GAA2BlL,EAAD,UAAQgc,EAASxmB,YAAjB,aAAQ,EAAeW,IAC7D2wB,UAAW7J,GAAcjd,GACzBuQ,cACA+N,cAAe7L,GAAkBzS,EAAOwT,aAAmBwI,EAASxmB,OACpEiyB,qBAAsB9O,GAAkD3Y,MAQpCqD,GAAzBG,CAA6CqiB,IC7K5D,MAAMxlB,GAAQ,CACZ6nB,gBAAiB7lB,IAAO8lB,QACxBC,OAAQ,OACR/qB,OAAQ,MACR2R,OAAQ,mBAKKqZ,OAFF,IAAM,oBAAIhoB,MAAOA,K,QCI9B,MAAMioB,GAAU,UACVC,GAAe,CACnB,CAACD,IAAU,UACXE,kBAAmB,aACnBC,OAAQ,SACRC,OAAQ,UAEJroB,GAAQ,CACZsoB,KAAM,CACJC,cAAe,OACfC,YAAa,OAEfC,OAAQ,CACNpa,UAAW,SACXC,SAAU,OACVoa,aAAc,OAEhBC,OAAQ,CACNra,SAAU,OACVsa,WAAY,OACZja,OAAQ,EACRjM,MAAOV,IAAOK,SAEhBwmB,QAAS,CACPnmB,MAAOV,IAAOK,QACdiM,SAAU,OACVsa,WAAY,OACZE,UAAW,OACXC,SAAU,WAuFCC,OADW7lB,aANFxD,IACf,CACLgR,SAAUvV,OAAOoN,OAAOkI,GAAiB/Q,OAIM,KAAzBwD,EAlFL,EACnBwN,WACAxb,OACAiuB,oBAEA,MAAO/qB,EAAU4wB,GAAexrB,mBAAS,KACnC,GACJkD,GACEyV,YAAM,KACJ,QACJzf,GACEwnB,cACJzgB,qBAAU,KACY+C,WAClB,MAAMpI,QAAiBsI,EAAGqK,YAAYke,aAAa9d,IAAI,eACvD6d,EAAY5wB,IAGd8wB,KACC,IAEH,MAAMC,EAAiBC,IACrB,MAAMC,EAAgBD,EAAG,YAAQA,EAAIE,YAAZ,YAA2BF,EAAIvzB,IAAO,GAC/D,MAAM,GAAN,OAAUa,EAAV,+BAAwC2yB,IAiC1C,OAAO,qCACG,cAAC,GAAD,CAAYzO,MAAO3kB,IAAKC,EAAE,YAAakE,OAAQlF,EAAKW,GAAIstB,cAAeA,EAAeC,YAAaluB,EAAKuyB,YACxG,cAAC,GAAD,IACC/W,EAAS9G,OAAS,GAAK,sBAAKvK,UAAU,yBAAf,UAChB,oBAAIU,MAAOA,GAAMsoB,KAAjB,SA7BM,MACtB,MAAMkB,EAAYvG,GAAWG,GAAiB,OAAS,KACvD,OAAOzS,EAAS1V,KAAIouB,IAClB,MAMMV,EAASU,EAAIE,cAAgBtB,GAddoB,KACvB,MAAMI,EAAYJ,EAAI1Y,SAAS+Y,OAAO,GAAG,GACzC,OAAOD,EAAUd,OAASc,EAAUd,OAAO3f,YAAc,IAYV2gB,CAAiBN,GAAOnB,GAAamB,EAAIE,aAChFK,EAAaP,EAAIQ,KAAkB,KAAX,SACxBJ,EAAYJ,EAAI1Y,SAAS+Y,OAAO,GAAG,GACnCI,EAAUL,EAAUhgB,YAC1B,OAAO,qBAAInK,UAAS,uBAAkBkqB,GAA0BnoB,QAV1C,KAChB4hB,GAAWG,KACb9mB,SAASytB,SAAS9E,KAAOmE,EAAeC,KAQrC,UACO,oBAAG/pB,UAAS,wBAAmBsqB,GAA/B,UACKP,EAAIrgB,YADT,KACwBqgB,EAAIW,aAD5B,OAGA,oBAAGhqB,MAAOA,GAAM2oB,OAAhB,UACKA,EADL,MACgBxwB,YAAW2xB,EAASzxB,MAEpC,mBAAG2H,MAAOA,GAAM6oB,QAAhB,SAA0BY,EAAUxiB,SAPMoiB,EAAIvzB,QAgBtBm0B,KACxB,qBAAKjqB,MAAOA,GAAMyoB,OAAlB,SACI,mBAAGxD,KAAMmE,IAAT,SACKlzB,IAAKC,EAAE,iC,qBChFrB+zB,OAtBU5rB,GAAS,qCAC1B,cAAC,GAAD,CAAYuc,MAAO3kB,IAAKC,EAAE,qCAAsC,CACpEd,KAAMiJ,EAAMnJ,KAAKE,OACfgF,OAAQiE,EAAMnJ,KAAKW,GAAIstB,cAAe9kB,EAAM8kB,cAAeC,YAAa/kB,EAAMnJ,KAAKuyB,YACjF,qBAAK1nB,MAAO,CAChBmqB,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZrtB,OAAQ,OAJJ,SAMI,cAAC,KAAD,CAAmBgD,MAAO,CAChC7C,MAAO,IACPH,OAAQ,IACRstB,MAAO,UACN5nB,MAAM,kBCNEvL,OAVS,EACtBmI,eACI,sBAAKA,UAAWA,EAAWc,MAAM,6BAA6BC,QAAQ,YAAYE,KAAMyB,IAAOuoB,QAA/F,UACE,sBAAMjqB,EAAE,gBAAgBC,KAAK,SAC7B,sBAAMD,EAAE,sICMDkqB,OAVI,EACjBlrB,eACI,sBAAKA,UAAWA,EAAWc,MAAM,6BAA6BjD,MAAM,KAAKH,OAAO,KAAKqD,QAAQ,YAAYE,KAAMyB,IAAOogB,OAAtH,UACE,sBAAM9hB,EAAE,kFACR,sBAAMA,EAAE,gBAAgBC,KAAK,Y,0BCOrC,MAAMkqB,GAAet1B,GAAQC,KAAYD,EAAKE,MAAMY,YA+CrCkN,mBAAQ,KAAM,CAC3BunB,uBC7DoC,CAACC,EAAe1qB,IAAYuR,IAChE,MAAMoZ,EAAex1B,KAAYu1B,EAAct1B,MAAMW,SAC/C60B,EAAaF,EAAcC,GAAcniB,QAAOtT,GAAQA,EAAKW,KAAOmK,EAAQnK,KAE9E+0B,EAAWhhB,QACb8gB,EAAcC,GAAgBC,EAC9BrZ,EAASgM,GAAsBmN,KAE/BnZ,EAASiM,GAAsBkN,MDoDpBxnB,EA3CE,EACfhO,OACAiuB,gBACAsH,6BAEA,MAAM,QACJ/zB,GACEwnB,cACE2M,EAVgB31B,IAAQsC,YAAQtC,EAAKC,KAAYD,EAAKE,MAAMW,WAAWyS,QAAO,CAACtT,EAAM+F,EAAOlD,IAAUA,EAAM+yB,WAAU1uB,GAAMA,EAAGvG,KAAOX,EAAKW,OAAQoF,IAUpI8vB,CAAgB71B,GAE/B+vB,EAAU+F,IACd,MAAMC,EAAe,wBAAQ5rB,UAAWC,KAAQ4rB,aAAc9pB,QAAS,IAAMqpB,EAAuBv1B,EAAM81B,GAArF,SACT,cAAC,GAAD,CAAY3rB,UAAWC,KAAQ6rB,eAE3C,OAAO,qCACK,mBAAG9rB,UAAWC,KAAQqC,KAAM5B,MAAO,CAC3C0C,MAAOV,IAAOqpB,SACbpG,KAAMvuB,aAAWvB,EAAKE,KAAM41B,EAAat0B,GAFlC,SAGKs0B,EAAYliB,OAEhB+Z,GAAWM,GAAiB8H,EAAe,SAI1D,OAAO,qCACG,cAAC,GAAD,CAAYrQ,MAAO4P,GAAat1B,GAAOkF,OAAQlF,EAAKW,GAAIstB,cAAeA,EAAeC,YAAaluB,EAAKuyB,YACxG,cAAC,GAAD,IACA,qBAAKpoB,UAAU,yBAAf,SACI,oBAAIA,UAAWC,KAAQ+oB,KAAvB,SACKwC,EAAa7vB,KAAIgwB,GAAe,qBAAI3rB,UAAWC,KAAQpK,KAAvB,UACzB,cAACm2B,GAAD,CAAiBhsB,UAAWC,KAAQgsB,WACnCrG,EAAQ+F,KAFkDA,EAAYn1B,gB,+BE5C5F,MAAM01B,GAAsB,sBACtBC,GAAwB,wBACxBC,GAA2B,2BAC3BC,GAA6B,6BAC7BC,GAA8B,8BAC9BC,GAA8B,8BAC9BC,GAAgC,GACvCC,GAA0B,GACnBC,GAA4B,CACvCl2B,GAAI,GACJiT,KAAM,GACNW,OAAQ,GACRT,YAAa,GACbW,eAAgBmiB,IAiGX,MAAME,GAAyBtsB,GAASA,EAAMusB,eAExCC,GAAiBxsB,IAAUuS,IAAQvS,EAAMusB,gBAGzCE,GAA0BzsB,IAAU,IAAD,EAC9C,OAAO,UAAAssB,GAAuBtsB,UAAvB,eAA+BiK,iBAAkBmiB,IC1GpD/rB,GAAQ,CACZqsB,QAAS,CACPje,QAAS,OACTke,WAAY,WACZ1D,WAAY,QAEd2D,UAAW,CACTje,SAAU,OACVke,YAAa,SACbrvB,MAAO,MACPwR,OAAQ,SACRwb,QAAS,QACTvB,WAAY,QAEd7kB,UAAW,CACT2kB,aAAc,OACdxa,UAAW,SAqFA/K,oBAxBS,CAACxD,EAAOgc,KAE9B,IAAI3gB,EAGFA,EAJqBmxB,GAAexsB,GAI5BysB,GAAwBzsB,GACvBmjB,GAAWnH,EAASyH,eACrBtG,GAAuBnd,GAEvB2I,GAAmB3I,GAG7B,MAAMxK,EAAO6F,EAAM4Q,MAAKzW,GAAQA,EAAKW,KAAO6lB,EAASxmB,KAAKW,KAC1D,MAAO,CACLmR,KAAM9R,EAAOA,EAAK8R,KAAO,MAUW,CACtCuW,0BADara,EAjFE7E,IACf,MAAM,KACJnJ,EADI,cAEJiuB,EAFI,KAGJnc,EAHI,sBAIJuW,GACElf,EAEEmuB,EAAe3tB,IACnB,MAAM4tB,EAAc,IAAKv3B,EACvB8R,KAAMnI,EAAMwF,OAAOlM,OAErBolB,EAAsBkP,IAGlBC,EAAW,KACf,MAAMC,EAAexxB,OAAOC,OAAO,GAAI2E,GAAMusB,UAAWvsB,GAAMqsB,SAC9D,OAAO,qBAAK/sB,UAAU,yBAAyBU,MAAOA,GAAM+D,UAArD,SACK,cAAC,UAAD,CAAgB/D,MAAO4sB,EAAvB,SAAsC3lB,OAI9C4lB,EAAW,IACR,qCACK,cAAC,GAAD,CAAYhS,MAAO3kB,IAAKC,EAAE,aAAckE,OAAQlF,EAAKW,GAAIstB,cAAeA,IACxE,cAAC,GAAD,IACA,qBAAK9jB,UAAU,yBAAf,SACI,cAAC,UAAD,CAAgBwtB,OAAQL,EAAxB,SACI,cAAC,KAAD,CAAOr0B,MAAO6O,EAAM8lB,WAAS,EAACC,WAAS,EAAChtB,MAAOA,GAAMusB,UAAWnoB,YAAalO,IAAKC,EAAE,iBAAkBkO,SAAUooB,WAMhIQ,EAAY,KAChB,MAAML,EAAexxB,OAAOC,OAAO,GAAI2E,GAAMusB,UAAWvsB,GAAMqsB,SAC9D,OAAO,qCACM/tB,EAAMnJ,KAAKuyB,UAAY,cAACjE,GAAD,IAAoB,KAC5C,qBAAKnkB,UAAU,yBAAyBU,MAAOA,GAAM+D,UAArD,SACI,cAAC,UAAD,CAAgB/D,MAAO4sB,EAAvB,SAAsC3lB,UAKxD,IAAIimB,EAUJ,OAPEA,EADEpK,GAAWM,GACFyJ,EACFzJ,IAAkBP,GAChBoK,EAEAN,EAGN,mCAAGO,SC7EZ,MAAMC,GAAe,CAACC,EAAYj4B,EAAM+a,KACtC,IAAImd,EAAS,UAAMD,EAAWv2B,UAAjB,4BAA8C1B,EAAKW,IAEhE,GAAIoa,EAAW,IAAqBA,EAAW,GAAkBrG,OAAQ,CACvE,MAAMyjB,EAAQpd,EAAW,GAAkBjV,KAAIsyB,GAAYA,EAASC,KAAKjkB,MAAM,KAAKmgB,OAAO,GAAG,KAC9F2D,GAAS,uBAAoBC,EAAM9jB,KAAK,MAG1C,OAAO6jB,GA0DMlqB,oBAPS,CAACxD,EAAOgc,KAEvB,CACLzL,YAFmB4S,GAAWnH,EAASyH,eAA8CpT,GAA7BC,GAAoBtQ,MAMjEwD,EAvDC,EACdigB,gBACAjuB,OACA+a,kBACK,IAAD,MACJ,MAAM,GACJvP,GACEyV,YAAM,IACV,IAAIgX,EACJ,MAAMK,EAASt4B,EAAKs4B,OAEhBA,IACFL,EAAazsB,EAAG+sB,OAAOC,cAAc/hB,MAAKgiB,GAAOA,EAAIriB,MAAQkiB,KAG/D,MAAMlO,GAAsB,QAAV,EAAA6N,SAAA,mBAAYhV,gBAAZ,mBAAsByV,uBAAtB,eAAuCtO,YAAa6D,IAAkBX,GACxF,OAAO2K,GAAcA,EAAWrkB,MAAQqkB,EAAWv2B,UAAY,sCACnD0oB,GAAa,qCACP,cAAC,GAAD,CAAY1E,MAAOuS,EAAWrkB,KAAM1O,OAAQlF,EAAKW,GAAIstB,cAAeA,EAAeC,YAAaluB,EAAKuyB,YACrG,cAAC,GAAD,OAER,wBAAQ7M,MAAOuS,EAAWrkB,KAAM+kB,IAAKX,GAAaC,EAAYj4B,EAAM+a,GAAc5Q,UAAYigB,EAAuC,sCAA3B,yBAAkEvf,MAAO,CACzL+nB,OAAQ,aAEA,qCACF,cAAC,GAAD,CAAYlN,MAAK,UAAK4S,EAAL,oBACjB,cAAC,GAAD,IACA,qBAAKnuB,UAAU,yBAAyBU,MAAO,CACrDmqB,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZrtB,OAAQ,OAJF,SAMI,cAAC,KAAD,CAAmB0F,MAAM,WAAWoC,UAAQ,EAAC9E,MAAO,CAC5D7C,MAAO,IACPH,OAAQ,IACRstB,MAAO,oBCrDf,MAAMtqB,GAAQ,CACZ2O,OAAQ,YACRL,SAAU,OACVsa,WAAY,OACZlmB,MAAOV,IAAOwM,SAgBDuf,OAbIzvB,GACV,qCACG,cAAC,GAAD,CAAYuc,MAAO3kB,IAAKC,EAAE,UAAWkE,OAAQiE,EAAMnJ,KAAKW,GAAIstB,cAAe9kB,EAAM8kB,cAAeC,YAAa/kB,EAAMnJ,KAAKuyB,YACxH,mBAAG1nB,MAAOA,GAAV,SACK9J,IAAKC,EAAE,mFCZT63B,OAFO,IAAM,wB,sBCS5B,MAAMC,GAAqB,EACzBllB,OACAE,cACAiH,cACA5F,qBAYO,sBAAKhL,UAAWC,KAAQ2uB,UAAxB,UACG,mBAAG5uB,UAAWC,KAAQwJ,KAAtB,SAA6BA,IAC5BuB,GAAmBrB,GAAe,mBAAG3J,UAAWC,KAAQ0J,YAAtB,SAAoCA,IACtEiH,EAAYrG,OAAS,GAAK,qCACnB,mBAAGvK,UAAWC,KAAQ4uB,YAAtB,SACKj4B,IAAKC,EAAE,qBAfJ,MACxB,MAAMi4B,EAAYle,EAAYjV,KAAI,EAChC8N,OACAP,YACI,qBAAIlJ,UAAWC,KAAQ8uB,eAAvB,UACOtlB,EADP,KACeP,EAAOvN,KAAIqzB,GAAOA,EAAIvlB,OAAMS,KAAK,QADJT,KAGlD,OAAO,oBAAIzJ,UAAWC,KAAQgvB,WAAvB,SAAoCH,KAU1BI,SAWrBP,GAAmB/tB,aAAe,CAChC+I,YAAa,GACbF,KAAM,GACNuB,iBAAiB,GAiBJnH,oBAdSxD,IACtB,MAAM7J,EAAK4U,GAAe/K,GACpBmjB,EAAalG,GAAcjd,GAC3B8uB,EAAgBtmB,GAAkBxI,EAAO7J,IAAOgS,GAGtD,MAAO,CACLiB,KAHW+Z,EL8DuBnjB,IAASssB,GAAuBtsB,GAAOoJ,KK9DjD2lB,CAAuB/uB,IAAUzJ,IAAKC,EAAE,sBAAwBs4B,EAAczlB,YAItGC,YAHkB6Z,EL8DuBnjB,IAASssB,GAAuBtsB,GAAOsJ,YK9DjD0lB,CAA8BhvB,GAAS8uB,EAAcvlB,mBAIpFgH,YAAaC,GAAqBxQ,GAClC2K,gBAAiBM,GAA4BjL,MAIlCwD,CAAyB8qB,ICpDxC,MAsCazI,GAAOlnB,IAClB,MAAMswB,EAvCYv5B,KAClB,OAAQA,GACN,KAAKpB,KACL,KAAKC,KACL,KAAKC,KACL,KAAKC,KACL,KAAKE,KACL,KAAKD,KACH,OAAOw6B,GAET,KAAKl6B,KACH,OAAOm6B,GAET,KAAKt6B,KACL,KAAKC,KACL,KAAKC,KACH,OAAOq6B,GAET,KAAKn6B,KACH,OAAOo6B,GAET,KAAKn6B,KACH,OAAOk5B,GAET,KAAKx5B,KACH,OAAO06B,GAET,KAAKn6B,KACH,OAAOk5B,GAET,KAAKj5B,KACH,OAAOk5B,GAET,QACE,OAAO/D,KAKMgF,CAAY5wB,EAAMnJ,KAAKE,MACxC,OAAO,cAACu5B,EAAD,CAAUz5B,KAAMmJ,EAAMnJ,KAAMiuB,cAAe9kB,EAAM8kB,cAAekD,qBAAsBhoB,EAAMgoB,wB,8CC9CrG,MAAM6I,WAAoC/wB,YAAW,eAAD,oBAYlDuB,MAAQ,CACNyvB,YAAY,GAboC,KAelDrqB,aAAe,KAfmC,KAgBlDsqB,kBAAoB,KAhB8B,KAiBlDC,eAAiB,CACfC,SAAS,GAGXC,kBACE,IAAK/wB,KAAKsG,aACR,OAGF,MAAM0qB,EAAWhxB,KAAKH,MAAMoxB,aAAezyB,OAAOC,YAC5CyyB,EAAOlxB,KAAKsG,aAAa6qB,wBAE3BD,EAAKE,QAAUJ,GAAYE,EAAKG,IAAM7yB,OAAOC,YAAcuyB,IAC7DhxB,KAAKC,SAAS,CACZ0wB,YAAY,IAEd3wB,KAAKsxB,iBAITC,kBAAmB,IAAD,EAChBvxB,KAAK4wB,kBAAoBzxB,KAAS,IAAMa,KAAK+wB,mBAAmB/wB,KAAKH,MAAM2xB,YAC3E,UAAA3zB,SAAS4zB,uBAAuB,qBAAqB,UAArD,SAAyDryB,iBAAiB,SAAUY,KAAK4wB,kBAAmB5wB,KAAK6wB,gBAGnHS,gBAAiB,IAAD,EACd,UAAAzzB,SAAS4zB,uBAAuB,qBAAqB,UAArD,SAAyDpyB,oBAAoB,SAAUW,KAAK4wB,kBAAmB5wB,KAAK6wB,gBAGtHa,oBACE1xB,KAAKuxB,kBACLvxB,KAAK+wB,kBAGPhI,uBACE/oB,KAAKsxB,gBAGPnwB,SACE,MAAM,SACJtC,EADI,UAEJgC,EAFI,MAGJU,KACG1B,GACDG,KAAKH,OACH,WACJ8wB,GACE3wB,KAAKkB,MACHywB,EAAaC,KAAK/xB,EAAO,CAAC,cAAe,eAAgB,YAAa,eAC5E,OAAO,qBAAKmG,IAAKA,GAAOhG,KAAKsG,aAAeN,EAAKzE,MAAOA,EAAOV,UAAWA,EAAWwC,YAAA,wBAA4BxD,EAAMjE,WAAc+1B,EAA9H,SACMhB,GAAc9xB,KAnEzB6xB,GAQGjvB,aAAe,CACpB+vB,WAZsB,IAatBP,aAZwB,KA2EbP,UC1Df,MAEatI,GAA8B,EACpC,MAAMyJ,WAAiBlyB,YAAW,eAAD,oBACtCuB,MAAQ,CACN4wB,cAAe,IAFqB,KAItCjK,qBAAuBkK,IACrB,MAAMC,EAA4D,mBAAxChyB,KAAKkB,MAAM4wB,cAAcC,IAA2B/xB,KAAKkB,MAAM4wB,cAAcC,GACjGD,EAAgB,IAAK9xB,KAAKkB,MAAM4wB,eAEtCA,EAAcC,IAAcC,EAC5BhyB,KAAKC,SAAS,CACZ6xB,mBAVkC,KAsBtCG,eAAiBC,IACXlyB,KAAKH,MAAMsyB,MACbnyB,KAAKH,MAAMuyB,wBAAwBF,IAxBD,KA2BtCG,aAAe,CAACrQ,EAAQsQ,EAASC,KAC/B50B,aAAa40B,EAAQ12B,GACrB,MAAMqwB,EAAgBlsB,KAAKH,MAAMsL,eAAegC,MAAKzW,GAAQA,EAAKW,KAAOk7B,EAAQ12B,IAE7EqwB,GAAiBz1B,aAAoBy1B,IACvCsG,aAAatG,IAhCqB,KAmCtCuG,wBAA0BvG,IACxB,MAAMwG,EAAe1yB,KAAKkB,MAAM4wB,cAAc5F,EAAc70B,IAE5D,OAAIq7B,IAAiC,IAAjBA,EACX/1B,OAAOC,OAAO,GAAIsvB,EAAe,CACtCjxB,EAAGixB,EAAcjxB,EA3CD,KA+CbixB,GA5C6B,KA8CtCyG,iBAAmBj8B,IACjB,MAAMk8B,EAAiB,CAACl8B,EAAKE,KAAMoJ,KAAKH,MAAMsyB,KAAO,OAAS,OAAvC,wBAAgEz7B,EAAKW,KAAM0T,KAAK,KACvG,OAAO,cAAC,GAAD,CAA0ClK,UAAW+xB,EAAgBh3B,OAAQlF,EAAKW,GAAlF,SACK,cAAC,GAAD,CAAMX,KAAMA,EAAMiuB,cAAe3kB,KAAKH,MAAMsyB,KAAOnO,GAAOE,GAAM2D,qBAAsB7nB,KAAK6nB,wBAD9DnxB,EAAKmF,IAhDV,KAoDtCg3B,kBAAoBt2B,GAASA,EAAMC,KAAI9F,GAAQsJ,KAAK2yB,iBAAiBj8B,KAtCrEo8B,iCAAiCC,GAC3BA,EAAUZ,MACZnyB,KAAKC,SAAS,CACZ6xB,cAAe,KAqCrB3wB,SACE,MAAM,KACJgxB,EADI,UAEJvmB,EAFI,eAGJT,GACEnL,KAAKH,MAET,IAAK+L,IAAcT,EAAeC,OAChC,OAAO,cAAC,GAAD,CAAkB5C,KAAM/Q,IAAKC,EAAE,0CAGxC,MAAM6E,EAAQ41B,EAAOhnB,EAAiBA,EAAe3O,IAAIwD,KAAKyyB,yBAC9D,OAAO,sBAAK5xB,UAAU,eAAf,UACM+K,EAAY,cAAC,IAAD,CAAOonB,aAAW,EAAlB,SACL,cAAC,IAAD,UACI,cAAC,IAAD,QAEG,KACf,cAAC,KAAD,CAAiBf,eAAgBjyB,KAAKiyB,eAAgBI,aAAcryB,KAAKqyB,aAAcxxB,UAAU,SAASmhB,OAAQzlB,EAAO2T,OAAQtV,KAAQq4B,KAAM33B,eAAkB43B,UAAWv4B,KAAiB+D,MAAOF,OAAOG,WAAYw0B,YAAaz4B,KAAmB04B,YAAajB,EAAMkB,YAAalB,EAAMmB,gBAAgB,iBAA7S,SACKtzB,KAAK6yB,kBAAkBt2B,SAY5Cs1B,GAASpwB,aAAe,CACtB0J,eAAgB,IAGlB,MASM5G,GAAqB,CACzB6tB,wBnC/EqCz4B,IAAK,CAC1C/C,KAAM+mB,GACNhkB,WmC0Fa+K,oBAvBS,CAACxD,EAAOgc,KAC9B,MAAMqW,EAAoBrW,EAASiV,KAAOlU,GAAsB/c,GAASwI,GAAkBxI,EAAO+K,GAAe/K,IAC3GiK,EAAiB+R,EAASiV,KAAO9T,GAAuBnd,GAAS2I,GAAmB3I,GAC1F,MAAO,CACL0K,UAAWM,GAAsBhL,KAAWqyB,EAC5CpoB,oBAkBoC5G,IAVrB,CAACyY,EAAYC,EAAeC,KAC7C,MAAMsW,EAAax6B,YAAQgkB,EAAW7R,gBAAgBnB,OAAOtO,MAC7D,MAAO,IAAKuhB,EACVkV,KAAMjV,EAASiV,KACfvmB,UAAWoR,EAAWpR,UACtBT,eAAgBqoB,EAChB71B,qBAIW+G,CAAyDmtB,ICrIxE,MAAM4B,GAAS,CACbC,eAAgB,CACdxjB,OAAQ,MACRP,QAAS,SACTgkB,aAAc,MACd1vB,MAAOV,IAAOqwB,MACdxK,gBAAiB,UACjB7qB,OAAQ,GACRmtB,QAAS,OACTE,WAAY,UAEdiI,MAAO,CACLhkB,SAAU,OACVikB,OAAQ,UACRjG,WAAY,UAEdkG,YAAa,CACXlkB,SAAU,OACVmkB,eAAgB,YAChBC,WAAY,OACZH,OAAQ,YAIZ,MAAMI,WAAoBv0B,YAAW,eAAD,oBAClCiD,QAAUvL,GAAM,IAAM2I,KAAKH,MAAM+C,QAAQvL,GADP,KAElC88B,SAAW98B,GAAM,IAAM2I,KAAKH,MAAMs0B,SAAS98B,GAE3C8J,SACE,MAAM,KACJiJ,GACEpK,KAAKH,MACT,OAAO,sBAAK0B,MAAOkyB,GAAOC,eAAgBrwB,YAAU,yBAA7C,UACK,sBAAM9B,MAAOkyB,GAAOI,MAAOjxB,QAAS5C,KAAK4C,QAAQwH,EAAK/S,IAAtD,mBACQ+S,EAAKE,KADb,aACsBF,EAAKL,OAAOqB,OAAS,EAAI3T,IAAKC,EAAE,qBAAsB,CAClF08B,MAAOhqB,EAAKL,OAAOqB,SAChBhB,EAAKL,OAAO,GAAGO,QAEZ,sBAAM/I,MAAOkyB,GAAOM,YAAanxB,QAAS5C,KAAKm0B,SAAS/pB,EAAK/S,IAA7D,SACKI,IAAKC,EAAE,gBAY5Bw8B,GAAYzyB,aAAe,CACzBmB,QAASsmB,SAASC,UAClBgL,SAAUjL,SAASC,WAEN+K,U,sBCnDR,MAAMG,WAAkB10B,YAAW,eAAD,oBACvC20B,cAAgBj9B,IACd2I,KAAKH,MAAM0X,iBAAiBlgB,IAFS,KAIvCk9B,aAAel9B,IACb2I,KAAKH,MAAMwa,wBAAwB,CACjChjB,KACAiT,KAAMtK,KAAKH,MAAM+R,QAAQzE,MAAKzW,GAAQA,EAAKW,KAAOA,IAAIiT,QAI1DnJ,SACE,MAAM,QACJyQ,GACE5R,KAAKH,MACT,OAAO+R,EAAQxG,OACf,qBAAKvK,UAAWC,KAAQ0zB,IAAKjzB,MAAO,CAClC8vB,IAAK,GADP,SAGazf,EAAQpV,KAAIwN,GAAU,cAAC,GAAD,CAA6BI,KAAMJ,EAAQpH,QAAS5C,KAAKu0B,aAAcJ,SAAUn0B,KAAKs0B,eAApEtqB,EAAO3S,QAC3C,MASrBg9B,GAAU5yB,aAAe,CACvBmQ,QAAS,GACT6iB,iBAAkBvL,SAASC,WAOdzkB,oBAJSxD,IAAK,CAC3B0Q,QAASF,GAAqBxQ,MAGQ,CACtCmZ,wBAAyBF,GACzB5C,iBAAkBxF,IAFLrN,CAGZ2vB,ICjDI,MAAMK,GAAoB,oBACpBC,GAA8Bn2B,OAAOC,YAY3C,MAAMm2B,GAAmB1zB,GAASA,EAAM2zB,aCRlCC,GAAsB,CAAC7qB,EAAW1N,KAC7C,MAAMszB,EAAM,IAAK5lB,EACfkB,eAAgB5O,GAElB,MAAO,CACL3F,KAAMm2B,GACNpzB,MAAOk2B,IAGEkF,GAAwB,MACnCn+B,KAAMo2B,KAMKgI,GAA0Bt+B,IACrC,MAAME,EAAOF,EAAKE,YACXF,EAAKE,KACZ,MAAM+nB,EAAehoB,KAAYC,GAAMW,SACjCF,EAAKunB,yBACLC,EAAqBljB,aAAsBtE,GACjD,IAAIynB,EAEJ,GAAIloB,IAASP,KAAW,CACtB,MAAM2F,EAAOtF,EAAKsF,MAAQ,EAC1B8iB,EAAQ/iB,aAAsBC,EAAMtF,EAAKuF,eAEzC6iB,EAAQ1iB,aAA2B1F,EAAK2F,kBAG1C,MAAO,CACLzF,KAAMq2B,GACNtzB,MAAO,CACLtC,KACAT,OACA0hB,SAAU5hB,EAAK4hB,UAAY,KAC3B,CAACqG,GAAejoB,EAAK8K,WAClB3G,QACAgkB,KACAC,KAQImW,GAA6Bv+B,IAAI,CAC5CE,KAAMw2B,GACNzzB,MAAOjD,ICGMgO,oBAVSxD,IACf,CACLg0B,mBAAoB/W,GAAcjd,GAClCi0B,oBAAqBzH,GAAexsB,GACpCk0B,eAAgBltB,GAAuBhH,GACvCwM,WAAYzB,GAAe/K,GAC3B2zB,aAAcD,GAAiB1zB,MAIK,CACtCm0B,mBAAoB5W,GACpB6W,oBAAqBP,IAFRrwB,EA3Cc7E,IAC3BZ,qBAAU,KACJY,EAAMq1B,mBACRr1B,EAAMw1B,qBACGx1B,EAAMs1B,qBACft1B,EAAMy1B,wBAEP,CAACz1B,EAAMq1B,mBAAoBr1B,EAAMs1B,sBACpCl2B,qBAAU,KAAO,IAAD,EACd,UAAApB,SAASC,cAAc,6BAAvB,SAA8CiQ,OAAO,EAAG,KACvD,CAAClO,EAAM6N,aACV,MAAMnP,EAASsB,EAAMg1B,a7ErBS,G6EqByBttB,GAAoB1H,EAAMu1B,gBACjF,OAAO,qCACG,cAAC,GAAD,IACA,sBAAKv0B,UAAU,oBAAoBU,MAAO,CAChDhD,UADM,UAGI,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,CAAU4zB,MAAM,aCtBjBoD,OAPS11B,GAAS,cAAC,IAAD,CAAYyK,KAAK,wBAAwB5H,MAAOjL,IAAKC,EAAE,6CAA8Cd,KAAK,OAAOgP,SAAU/F,EAAM+F,SAAUL,QAAS1F,EAAM0F,QAAS5L,MAAOkG,EAAMlG,MAAO0e,SAAS,gB,sBCYlNmd,OAZQ,EACrBpZ,WACI,cAAC,IAAD,CAAUvb,UAAWC,KAAQpK,KAAMmmB,OAAK,EAAaxW,UAAQ,EAAC3D,MAAO,sBAAMnB,MAAO,CACtF0C,MAAOV,IAAOK,QACdkM,WAAY,OAF6D,SAI1DsM,KAJmCA,GCOrCqZ,OAVI,EACjB50B,eACI,sBAAKA,UAAWA,EAAWc,MAAM,6BAA6BjD,MAAM,KAAKH,OAAO,KAAKuD,KAAMyB,IAAOwM,QAASnO,QAAQ,YAAnH,UACE,sBAAMC,EAAE,gBAAgBC,KAAK,SAC7B,sBAAMD,EAAE,0I,sBCChB,MAAM6zB,GAAa,EACjBv9B,SACI,mBAAGyK,QAASgmB,GAAKA,EAAEroB,kBAAmBM,UAAWC,KAAQ60B,WAAY9vB,OAAO,SAAS+vB,IAAI,sBAAsBpP,KAAMruB,EAArH,SACE,cAAC,GAAD,MAOF09B,GAAe,IAAM,wBAAQh1B,UAAWC,KAAQg1B,aAA3B,SAA0Cr+B,IAAKC,EAAE,YAkC7Dq+B,OAhCS,EACtBn/B,OACA0T,OACA0rB,WACA79B,MACA89B,cAEA,MAAMC,EAAW79B,aAAYzB,GACvBu/B,EAAmBv/B,IAASpB,KAAgB4gC,KAAaH,GAAW,cAACC,EAAD,CAAU30B,MAAO,CACzFO,KAAMyB,IAAOwM,WAEf,OAAO,cAAC,IAAD,CAAU8M,OAAK,EAACja,QAASozB,EAAUtzB,MAAO,sBAAK7B,UAAWC,KAAQu1B,SAAxB,UAC/B,sBAAKx1B,UAAWC,KAAQ4B,MAAxB,UACI,sBAAMnB,MAAO,CAC7B+0B,YAAa,OADG,SAGKH,IAEL,+BAAO7rB,IACNnS,EAAM,cAACu9B,GAAD,CAAYv9B,IAAKA,IAAU,QAEtC,cAAC09B,GAAD,OACIxd,SAAQ,oBAAe/N,MCxCxC,MCDMisB,GAAc,CAAC,CAC1Bl/B,GAAI,aACJm/B,OAAQ/+B,IAAKC,EAAE,oBACf6E,MAAO,CAAC,CACN3F,KAAMT,KACNmU,KAAM7S,IAAKC,EAAE,YACb8J,QAAS,IACR,CACD5K,KAAMV,KACNoU,KAAM7S,IAAKC,EAAE,YACb8J,QAAS,QACR,CACD5K,KAAMR,KACNkU,KAAM7S,IAAKC,EAAE,UACb8J,QAAS,OAIAi1B,GAAmB,CAACjhC,KAAeG,KAAKC,KAAcC,KAAaI,KAAOF,KAASC,KAAWF,MAE9F4gC,GAAgB,CAAC3gC,KAASC,KAAWC,M,0BCwDnCyO,mBAAQ,KAAM,CAC3Bga,sBACAiY,oBF7EiC,CAAC//B,EAAM4K,IAAY,CAACuR,EAAU6C,KAC/D,MAAM1U,EAAQ0U,IACRuW,EAAex1B,KAAYC,GAAMW,SACjC4T,EAAiB8S,GAAsB/c,GAAOiK,eAC9CyrB,EAAqBzrB,EAAemhB,WAAU51B,GAAQA,EAAKE,OAASA,IAC1E,IAAIs1B,EAEA0K,GAAsB,GACxB1K,EAAgB/gB,EAAeyrB,GAC/B1K,EAAcC,GAAc/c,KAAK5N,GACjCuR,EAASgM,GAAsBmN,MAE/BA,EAAgB,CACdt1B,KAAMA,EACN4K,QAAS,CAACA,IAEZuR,EAAS2L,GAAmBwN,OE2DjBxnB,EAhEc,EAC3B9N,OACAwlB,QACA7f,QACAs6B,UACAnY,qBACAiY,sBACAG,yBAEA,MAAM,QACJ5+B,GACEwnB,eACGqX,EAASC,GAAch4B,oBAAS,GAEjCi4B,EAAUvgC,GAAQ,KACtB,GAAIE,IAASd,KACX4oB,EAAmB,CACjB9nB,OACA4K,QAAS9K,EAAKoW,UAEX,CACL,MAAMylB,EAAU,CACdl7B,GAAIX,EAAKW,GACTiT,KAAM5T,EAAK6T,aAAe7T,EAAK4T,MAG7BosB,GAAcnoB,SAAS3X,GACzB+/B,EAAoB//B,EAAM27B,GAE1B7T,EAAmB,CACjB9nB,OACA4K,QAAS+wB,MAWjB,OAAO,qCACG,cAAC,GAAD,CAAgBnW,MAAOA,IACtB7f,EAAMC,KAAI9F,IACjB,MAAMwgC,EAAUj/B,aAAWrB,EAAMF,EAAMwB,GACvC,OAAO,cAAC,GAAD,CAA2CtB,KAAMA,EAAMq/B,QAASr/B,IAASpB,KAAgBkB,EAAKE,KAAOA,EAAM0T,KAAM5T,EAAK6T,aAAe7T,EAAK4T,KAAM0rB,SAAUiB,EAAQvgC,GAAOyB,IAAK++B,GAAxJxgC,EAAKW,IAAMX,EAAKoW,QAEtC+pB,EAAU,cAAC,IAAD,CAAUha,OAAK,EAA0Bja,QAXxC,KACpBo0B,GAAYD,GACZD,EAAmBlgC,IASiE8L,MAAO,wBAAQ7B,UAAWC,KAAQq2B,eAA3B,SAClEJ,EAAUt/B,IAAKC,EAAE,cAAgBD,IAAKC,EAAE,gBAD9C,kBAAgC0kB,IAEf,KAC5B,cAAC,IAAD,CAASlM,OAAO,kBCpCbxL,mBAAQ,KAAM,CAC3Bga,uBADaha,EAvBiB,EAC9Bga,qBACA0Y,eAEA,MAAMC,EAAiB,EACrBzgC,OACA4K,aACI,KACJkd,EAAmB,CACjB9nB,OACA4K,aAIJ,OAAO,qCACG,cAAC,GAAD,CAAgB4a,MAAOgb,EAASZ,SAC/BY,EAAS76B,MAAMC,KAAI9F,GAAQ,cAAC,GAAD,CAAiCE,KAAMF,EAAKE,KAAM0T,KAAM5T,EAAK4T,KAAM0rB,SAAUqB,EAAe3gC,IAAtEA,EAAKE,c,sBC4DpD0gC,OAxEM,KACnB,MAAOC,EAAQC,GAAax4B,oBAAS,IAC9BgL,EAAQytB,GAAaz4B,mBAAS,KAC9BzC,EAAOm7B,GAAY14B,mBAAS,OAC5B24B,EAAYC,GAAiB54B,mBAAS,IAAI64B,MAC3C,GACJ31B,GACEyV,YAAM,IACV1Y,qBAAU,KACR,IAAI64B,EAAc,YAEd,IAAIH,EAAW5tB,UAAUqB,SAC3B0sB,GAAe,QAAU,IAAIH,EAAW5tB,UAAUgB,KAAK,UAGzD,MAAMgtB,EAAY/tB,EAAM,WAAOA,GAAW,GAC1C9H,EAAGE,IAAIC,SAASsK,IAAhB,sBAAmCorB,GAAnC,OAA+CD,IAAeE,MAAK7Y,GAAYuY,EAASvY,KAAW8Y,MAAM5qB,QAAQwF,SAChH,CAAC7I,EAAQ2tB,IAEZ,MA0BMO,EAAmBthC,IACvB,GAAIA,EAAM,CACR,MAAM6oB,EAAU,IAAIoY,IAAIF,GACxBlY,EAAQhT,IAAI7V,GAAQ6oB,EAAQ0Y,OAAOvhC,GAAQ6oB,EAAQ2Y,IAAIxhC,GACvDghC,EAAcnY,QAEdmY,EAAc,IAAIC,MAQhBQ,EAAWxqB,sBACjB,OAAO,qCACG,sBAAM7H,IAAKqyB,EAAX,SACI,cAAC,GAAD,CAAiB1+B,MAAOqQ,EAAQpE,SAPzB,EACnBjM,WACI89B,EAAU99B,GAKsD4L,QArCrD,IAAMiyB,GAAU,OAuCtBD,GAAU,cAAC,IAAD,CAAS5c,UAAW0d,EAAUrxB,UAAU,eAAe0T,eA7C1D,KAChB8c,GAAU,GACVC,EAAU,IACVG,EAAc,IAAIC,MA0CmFjd,OAAO,EAAO0d,SAAU,IAA1G,SACH,cAAC,IAAD,CAAYz3B,UAAWC,KAAQy3B,KAAMlgB,SAAS,YAAYigB,SAAS,QAAnE,SArCT7B,GAAiBzsB,QAAOpT,IAC7B,MAAME,EAAWH,KAAYC,GAC7B,OAAO2F,GAASA,EAAMzF,EAASQ,iBAC9BkF,KAAI5F,IACL,MAAME,EAAWH,KAAYC,GACvB4hC,EAAYvhC,aAAoBL,GAChC6hC,EAAWl8B,EAAMzF,EAASQ,cAC1Bu/B,EAAU4B,EAASrtB,OAASotB,EAC5BE,EAAef,EAAWlrB,IAAI3V,EAASO,IAAMohC,EAAWA,EAASxN,MAAM,EAAGuN,GAChF,OAAO,cAAC,GAAD,CAAiC5hC,KAAMA,EAAMwlB,MAAOtlB,EAASU,YAAa+E,MAAOm8B,EAAc5B,mBAAoBoB,EAAkBrB,QAASA,GAAnHjgC,MAMiB+hC,OAFpBpC,GAAY/5B,KAAI46B,GAAY,cAAC,GAAD,CAAoCA,SAAUA,GAAvBA,EAAS//B,e,sBCzC1F,MAAMuhC,GAAe,EAC1BtuB,OACAE,cACAquB,gBACAC,yBAUO,0BAASj4B,UAAWC,KAAQi4B,QAA5B,UACG,sBAAKl4B,UAAWC,KAAQk4B,iBAAxB,UACI,cAAC,IAAD,CAAYn4B,UAAWC,KAAQsb,MAAO9R,KAAK,wBAAwB5H,MAAOjL,IAAKC,EAAE,mBAAoBd,KAAK,OAAOgP,SAV3G,CAACqzB,EAAGrQ,KACtBiQ,EAAcjQ,EAAE/iB,OAAOlM,QAS6HA,MAAO2Q,EAAM3E,YAAalO,IAAKC,EAAE,sBAAuB2gB,SAAS,0BACzM,cAAC,IAAD,CAAexX,UAAWC,KAAQ0J,YAAaF,KAAK,8BAA8B5H,MAAOjL,IAAKC,EAAE,yBAA0BkO,SAP9G,CAACqzB,EAAGrQ,KAC5BkQ,EAAoBlQ,EAAE/iB,OAAOlM,QAMsIA,MAAO6Q,EAAa6N,SAAS,mCAExL,qBAAKxX,UAAWC,KAAQo4B,aAAxB,SACI,cAAC,GAAD,SAUhBN,GAAan3B,aAAe,CAC1B6I,KAAM,GACNE,YAAa,IAGf,MAQMjG,GAAqB,CACzBs0B,clDjBiCl/B,IAAK,CACtC/C,KAAM0mB,GACN3jB,UkDgBAm/B,oBlDduCn/B,IAAK,CAC5C/C,KAAM2mB,GACN5jB,WkDca+K,oBAZSxD,IACtB,MAAMqyB,EAAoBn6B,YAAS6kB,GAAsB/c,IACzD,MAAO,CACLoJ,KAAMipB,EAAkBjpB,KACxBE,YAAa+oB,EAAkB/oB,eAQKjG,GAAzBG,CAA6Ck0B,I,4CCrB7CO,OA/BoB,EACjCC,gBACAC,oBACAC,oBACAxc,WAEA,MAAMT,EAAU,CAAC,cAAC,IAAD,CAAqBrD,WAAS,EAACpW,QAAS02B,EAAmBjhB,SAAS,0BAApE,SACN5gB,IAAKC,EAAE,WADW,UAEZ,cAAC,IAAD,CAAqB6hC,aAAW,EAAC32B,QAASy2B,EAAmBhhB,SAAS,2BAAtE,SACN5gB,IAAKC,EAAE,WADW,WAG7B,OAAOolB,GAAQ,eAAC,IAAD,CAAOrF,QAAS6hB,EAAmB51B,OAAK,EAAC4U,SAAS,SAAlD,UACD,cAAC,IAAD,UAAa7gB,IAAKC,EAAE,sBACpB,cAAC,IAAD,UACI,sBAAMmJ,UAAWC,KAAQU,QAAzB,SACK/J,IAAKC,EAAE,mKAAoK,CAC1L0hC,sBAIM,cAAC,IAAD,UACI,cAAC,IAAD,UAAc/c,U,sBCoJnB3X,oBAhCSxD,IACtB,MAAM+I,EAAYgU,GAAsB/c,GACxC,IAAIs4B,EACAC,EAUJ,MtDJgCv4B,KACxBuS,IAAQvS,EAAMgd,gBAAsD,KAApCD,GAAsB/c,GAAO7J,GsDLjEqiC,CAAmBx4B,IACrBs4B,GAAe,EACfC,GAAe,IAEfA,IAAexvB,EAAUgB,QAAShB,EAAUgB,OAAOuR,OACnDgd,IAAevvB,EAAUgB,QAAShB,EAAUgB,OAAOktB,QAG9C,CACLx1B,YAAasH,EAAU5S,GACvB+hC,cAAenvB,EAAUK,KACzBkvB,eACAG,mBAAoBvb,GAAuBld,GAC3Cu4B,mBAIuB1mB,IAAQ,CACjCuiB,oBAAqB,IAAMviB,EAASgiB,MACpC6E,kBAAmB,IAAM7mB,EpDpIY,CACrCnc,KAAMinB,KoDoINgc,OAAQ,IAAM9mB,EAASkM,MAAkB+Y,MAAK3gC,GAAMA,IACpDyiC,SAAUziC,GAAM0b,EAASkE,GAAiB5f,IAC1C0iC,iBAAkB,IAAMhnB,EAAS0L,MACjCub,YAAa,CAAC3iC,EAAIsC,IAAUoZ,E7DpJW,EAACpQ,EAAahJ,KAAd,CACvC/C,KAAMqS,GACNtG,cACAhJ,U6DiJqCsgC,CAA0B5iC,EAAIsC,IACnEugC,iBAAkB,IAAMnnB,EpD5IW,CACnCnc,KAAMgnB,QoD8IOlZ,EA7JC7E,IACd,MAAM,GACJqC,GACEyV,YAAM,IACJjF,EAAaynB,eACZC,EAAsBC,GAA2Br7B,oBAAS,IAC1DiL,EAAWqwB,GAAgBt7B,wBAASvE,IACpC8/B,EAAwBC,GAA6Bx7B,oBAAS,IAC9Doc,EAAaC,GAAkBrc,wBAASvE,GAC/CwE,qBAAU,KACJY,EAAM8C,cAAgBsH,GACxBoL,GAAkB3C,EAAY7S,EAAM8C,aAAaq1B,MAAKyC,GAAUH,EAAaG,OAE9E,CAAC56B,EAAM8C,YAAasH,IAEvB,MAAMywB,EAAkB,KACtBF,GAA0B,IAGtBX,EAAS,KACbh6B,EAAMg6B,SAAS7B,MAAK2C,IAClBtf,EAAe,IAAD,OAAKsf,QAIjBC,EAAiB,KACjB/6B,EAAM85B,oBACR95B,EAAM+5B,oBACN/5B,EAAMy1B,uBAENz1B,EAAMq6B,oBAUJZ,EAAoB,KACxBkB,GAA0B,IAGtBnB,EAAoB,KACxBmB,GAA0B,GAC1B36B,EAAMi6B,SAASj6B,EAAM8C,aAAaq1B,MAAK,KACrC3c,EAAe,SAIbwf,EAAsB74B,UAC1B,GAAI84B,GAAgBA,EAAa1vB,OAAQ,CACvC,MAAM2vB,QAAiB74B,EAAGqK,YAAYke,aAAa9d,IAAI,eACjDquB,EAAcF,EAAa3tB,MAAKzV,GAAKA,EAAEsC,SAAW+gC,GAA2B,SAAfrjC,EAAEujC,WAElED,GAAeA,EAAYrhC,OAC7BkG,EAAMm6B,YAAYn6B,EAAM8C,YAAaq4B,EAAYrhC,SAKjDuhC,EAA0B,IAAMb,GAAyBD,GA0B/D,GAAIhf,EACF,OAAO,cAAC,IAAD,CAAUhY,GAAIgY,IAGvB,MAAM,aACJqe,GACE55B,EACEs7B,EAAiB1B,EAAehiC,IAAKC,EAAE,uBAAyBD,IAAKC,EAAE,oBAC7E,OAAO,qCACG,qBAAKmJ,UAAWC,KAAQs6B,QAAxB,SACI,sBAAKv6B,UAAWC,KAAQkO,SAAxB,UACKyqB,EA3Be,eAAC,IAAD,WACxB,cAAC,IAAD,CAAQxgB,SAAO,EAACrW,QAASi3B,EAAQxhB,SAAS,wBAA1C,SACK5gB,IAAKC,EAAE,kBAEZ,cAAC,IAAD,CAAQkL,QAASg4B,EAAjB,SACK/6B,EAAM85B,mBAAqBliC,IAAKC,EAAE,sBAAwBD,IAAKC,EAAE,mBAGrEmI,EAAM8C,aAAe,cAAC,IAAD,CAAQC,QAASs4B,EAAjB,SACbzjC,IAAKC,EAAE,eAEfmI,EAAM8C,aAAe9C,EAAM25B,cAAgB,cAAC,IAAD,CAAQ52B,QAAS83B,EAAiBriB,SAAS,0BAA3C,SACnC5gB,IAAKC,EAAE,eAegC,KACxC,cAAC,IAAD,CAAQshB,WAAS,EAACpW,QAlElB,KAChB/C,EAAMk6B,mBACN,MAAM3e,EAAcvb,EAAM8C,YAAN,WAAwB9C,EAAM8C,aAAgB,IAClE0Y,EAAeD,IA+DC,SACK+f,SAnCSlxB,GAAaA,EAAU5S,GAAK,cAAC,KAAD,CAAmBwJ,UAAU,qBAAqBqB,GAAIA,EAAI4a,KAAMsd,EAAsBrd,eAAgBme,EAAyBG,kBAAmB,IAAKpxB,EACjNqxB,gBAAiB,CACfhxB,KAAM,cAEPixB,kBAAmB,CAAC,OAAQ,eAAgBC,mBAAoBX,EAAqBY,mBAAoBzoB,GAAO3F,QAAQC,IAAI,2BAA4B0F,KAAW,KANpInT,EAAM25B,cAAgB35B,EAAM8C,YAAc,cAAC,GAAD,CAAqBy2B,cAAev5B,EAAMu5B,cAAeC,kBAAmBA,EAAmBC,kBAAmBA,EAAmBxc,KAAMyd,IAA6B,W,sBC9DvOmB,OAbY,EACzBnb,aACI,cAAC,IAAD,CAAiBjI,SAAS,MAA1B,SACE,qBAAKzX,UAAWC,KAAQ66B,gBAAxB,SACI,cAAC,IAAD,CAAWvf,MAAO3kB,IAAKC,EAAE,iBAAkBosB,SAAO,EAAlD,SACKvD,Q,sBCqBFqb,OA3BG,EAChBC,eAEA,MAAMC,EAAcD,EAAWpkC,IAAKC,EAAE,oBAAsBD,IAAKC,EAAE,qBACnE,OAAO,sBAAKmJ,UAAWC,KAAQwE,UAAxB,UACG,mBAAGzE,UAAWC,KAAQsb,MAAtB,mBACQ3kB,IAAKC,EAAE,iBADf,aACoCokC,KAEpC,sBAAKj7B,UAAWC,KAAQi7B,iBAAxB,UACI,sCAAOtkC,IAAKC,EAAE,0BAAd,OACA,+BACI,6BAAKD,IAAKC,EAAE,oCACZ,6BACKD,IAAKC,EAAE,0DAEZ,6BACKD,IAAKC,EAAE,+FAIpB,oBAAImJ,UAAWC,KAAQk7B,cClBpBC,OAJY,IAAM,qBAAKt6B,MAAM,6BAA6BjD,MAAM,KAAKH,OAAO,KAAKuD,KAAMyB,IAAOwM,QAASnO,QAAQ,YAA7F,SACzB,sBAAMC,EAAE,oa,sBCqCDq6B,OA5BS,EACtB7kC,SAEA,MAAM,MACJqH,GACEa,IACE48B,EAAU73B,EAAc5F,GAC9B,OAAO,qCACG,qBAAKmC,UAAWC,KAAQwE,UAAxB,SACI,sBAAKzE,UAAWC,KAAQs7B,MAAxB,UACI,cAAC,IAAD,CAAMv7B,UAAWC,KAAQqC,KAAMC,GAAE,WAAM/L,GAAvC,SACI,eAAC,IAAD,CAAQqM,MAAOy4B,EAAf,UACI,cAACE,GAAD,IACC5kC,IAAKC,EAAE,2BAGhB,cAAC,IAAD,CAAQgM,MAAOy4B,EAASv5B,QAASpE,OAAO89B,MAAxC,SACK7kC,IAAKC,EAAE,gBAIpB,qBAAKmJ,UAAWC,KAAQy7B,gB,qBC/B7B,MAAMC,GAAkBC,IAAY,IAAD,EACxC,IAAKA,IAAYA,EAAQrsB,UACvB,OAAO,KAMT,MAAMssB,EAAU,UAAGD,EAAQrsB,UAAUtF,MAAM,KAAK,UAAhC,aAAG,EAAiC6xB,MAAM,WAE1D,OAAID,EACKE,SAASF,EAAW,IAEpB,MAmBLG,GAAaC,IAEjB,IAAIhiC,EAAI,EACR,MAEMiiC,EAAcC,GAFF,EAEwB,EAAIA,EAE9C,IAAIC,EAAWF,EAAY,GACvBF,GAAa,EAEjB,KAAOI,EAAWH,GAIhB,GAHAG,EAAWF,EAAYjiC,KACrBA,EAEEmiC,IAAaH,EAAG,CAClBD,GAAa,EACb,MAIJ,OAAOA,GChCF,MAAMK,WAA4Bv9B,YAAW,eAAD,oBACjDsyB,eAAiBC,IACflyB,KAAKH,MAAMs9B,sBAAsBjL,IAFc,KAIjDkL,iBAAmB1mC,IACjB,GAAIA,EAAKE,OAASP,KAChB,OAAO,EAGT,MAAMgnC,EAAar9B,KAAKH,MAAMsL,eAAenB,QAAOnO,GAAKA,EAAEjF,OAASP,OAC9DinC,EAAmBC,KAAOF,EAAY,CAAC,MAC7C,OAAO3mC,EAAKqE,IAAMuiC,EAAiB,GAAGviC,GAXS,KAajD43B,iBAAmBj8B,IAEjB,MAAMk8B,EAAiBvxB,IAAG,QAAS,SAAV,UAAuB3K,EAAKE,MAAQ,CAC3D,mBAAoBoJ,KAAKH,MAAMmoB,WAAahoB,KAAKo9B,iBAAiB1mC,GAClEuyB,YAAavyB,EAAKuyB,YAEpB,OAAO,qBAAkBpoB,UAAW+xB,EAA7B,SACK,cAAC,GAAD,CAAMl8B,KAAMA,EAAMiuB,cAAeP,MAD5B1tB,EAAKmF,IAnByB,KAuBjDg3B,kBAAoBt2B,GAASA,EAAMC,KAAI9F,GAAQsJ,KAAK2yB,iBAAiBj8B,KAErE8mC,sBACE,MAAMC,ED9BiCC,KACzC,MAAMC,EAAQhhC,OAAOuQ,KAAKvW,MACpBinC,EAA2B5kC,YAAQ0kC,GAAUlhC,KAAIoB,IACrD,MAAMhH,EAAOsC,MAAM2kC,KAAKjgC,EAAGkgC,WAAW3wB,MAAKtM,GAAa88B,EAAMI,QAAQl9B,IAAc,IAC9EqwB,EAAOtzB,EAAGuzB,wBACVp2B,EAAIyhC,GAAgB5+B,EAAG2D,QAAUq7B,SAAS1L,EAAKn2B,GACrD,MAAO,CACLnE,OACAknC,UAAWlgC,EAAGkgC,UACdE,QAASjjC,EAAI6hC,SAAS1L,EAAK3yB,QAC3BX,SAGJ,OAAO2/B,KAAOK,EAA0B,CAAC,aCiBhBK,CAA4B/kC,MAAM2kC,KAAKhgC,SAASqgC,iBAAiB,sBACxF,IAAIC,EAAkB,EAClBC,EAAiB,EACjBC,GAAoB,EAExB,IAAK,IAAIxiC,EAAI4hC,EAAeryB,OAAS,EAAGvP,GAAK,IAAKA,EAAG,CACnD,MAAMnF,EAAO+mC,EAAe5hC,GAE5B,GAAInF,EAAKE,OAASP,KAAW,CAC3B,GAAKgoC,EAEE,CACLF,EAAkBznC,EAAKsnC,QACvB,MAHAtnC,EAAKkH,GAAGkgC,UAAU1F,IAAI,eAKnB,CACLiG,GAAoB,EACpB,MAAMC,EAAiB5nC,EAAKsnC,QAExBM,EAAiBF,IACnBA,EAAiBE,IAKvB,MACMC,EAAc1gC,SAASC,cAAc,sBAGrCusB,EAAY8T,EAJC,IAUnB,GAJII,IACFA,EAAYh9B,MAAMhD,OAAlB,UAA8B8rB,EAA9B,OAGErqB,KAAKH,MAAMmoB,UAAW,CAExB,MAAMwW,EAAa3gC,SAASC,cAAc,qBAE1C,GAAI0gC,GAAcA,EAAWj9B,OAASi9B,EAAWj9B,MAAM6O,UAAW,CAChE,MAAMpU,EAAOwgC,GAAgBgC,EAAWj9B,OAClCk9B,EAAa5gC,SAASC,cAAc,gBAC1C2gC,GAAcA,EAAW1wB,OAAO,EAAG/R,EAAO,MAKhD01B,oBACE1xB,KAAKw9B,sBAGPkB,qBACE1+B,KAAKw9B,sBAGPr8B,SACE,MAAM,UACJyK,EADI,eAEJT,GACEnL,KAAKH,MAET,OAAK+L,GAAcT,EAAeC,OAI3B,sBAAKvK,UAAU,eAAf,UACM+K,EAAY,cAAC,IAAD,CAAOonB,aAAW,EAAlB,SACL,cAAC,IAAD,UACI,cAAC,IAAD,QAEG,KACf,cAAC,KAAD,CAAiBf,eAAgBjyB,KAAKiyB,eAAgBpxB,UAAU,SAASmhB,OAAQ7W,EAAgB+E,OAAQtV,KAAQq4B,KAAM33B,eAAkB43B,UAAWv4B,KAAiB+D,MAAOrD,KAAuB83B,YAAaz4B,KAAmB04B,aAAa,EAAOC,aAAa,EAAOC,gBAAgB,iBAA3R,SACKtzB,KAAK6yB,kBAAkB1nB,QAV/B,cAAC,GAAD,CAAkB3C,KAAM/Q,IAAKC,EAAE,2CAsB5CwlC,GAAoBz7B,aAAe,CACjC0J,eAAgB,IAYHzG,oBATSxD,IACtB,MAAMqyB,EAAoB/F,GAAuBtsB,GACjD,MAAO,CACL0K,UAAWM,GAAsBhL,KAAWqyB,EAC5CpoB,eAAgBwiB,GAAwBzsB,GAAO8I,OAAOtO,MACtDssB,UAAW7J,GAAcjd,MAIW,CACtCi8B,sBnBlI0CxjC,IAAK,CAC/C/C,KAAMs2B,GACNvzB,WmB+Ha+K,CAEZw4B,I,sCC9HH,MAAMyB,GAAkBp3B,GAAoB,G9GjBV,E8GmB5Bq3B,GAAgB,CAACriC,EAAOsiC,KAC5B,MAAMC,EFiC6BviC,KAKnC,MAAMuiC,EAAW,GACjB,IAAI9iC,EAAO,EAEX,IAAK,IAAI+iC,EAAU,EAAGA,GAAWxiC,EAAM6O,SAAU2zB,EAC/B,IAAZA,EACF/iC,GAAQ,GACC6gC,GAAWkC,GACpB/iC,GAAQ,GAERA,GAAQ,GAGV8iC,EAAS1vB,KAAKpT,GAGhB,OAAO8iC,GErDUE,CAAsBziC,GAEvC,IAAK,IAAIV,EAAI,EAAGA,EAAIU,EAAM6O,SAAUvP,EAClCgjC,EAAiB,CACfjoC,KAAMP,KACN2F,KAAM8iC,EAASjjC,MAwFN6I,oBApBS,CAACxD,EAAOgc,KAC9B,MAAM7lB,EAAK4U,GAAe/K,GAE1B,GAAIgc,EAAS+hB,SAAU,CAErB,MAAO,CACLh1B,UAFgBgU,GAAsB/c,GAGtC7J,KACAkF,MAAO8hB,GAAuBnd,IAKlC,MAAO,CACL+I,UAFgB5S,EAAKqS,GAAkBxI,EAAO7J,GAAM,KAGpDA,KACAkF,MAAOsN,GAAmB3I,MAIU,CACtCg+B,kBAAmBpK,GACnB+J,iBAAkB7J,GAClBmK,oBAAqBlK,IAHRvwB,EAnFc,EAC3BuF,YACA1N,QACA2iC,oBACAL,mBACAM,sBACAF,eAEA,MAAM,MACJvgC,EADI,OAEJH,GACEgB,IACE6/B,EAAkB96B,EAAc5F,GHpCG,GADH,GGsCtCO,qBAAU,KACJgL,IACFi1B,EAAkBj1B,EAAW1N,GAG7BA,EAAM6Z,SAAQ1f,IACRA,EAAKuE,EAAIC,OACXxE,EAAKuyB,WAAY,EACjBkW,EAAoBxiC,OAAOC,OAAO,GAAIlG,EAAM,CAC1CuE,EAAGC,YAIT0jC,GAAcriC,EAAOsiC,GACrBA,EAAiB,CACfjoC,KAAMN,KACN+F,kBAAkB,OAGrB,CAAC4N,EAAW1N,IAWf,OAAO,sCACK0iC,GAAY,cAAC,GAAD,CAAiB5nC,GAAI4S,EAAU5S,KAC7C,sBAAKwJ,UAAWQ,IAAGP,KAAQu+B,QAAS,eAAgB99B,MAVrD09B,EAAW,CAChBK,WAAYC,IAAQC,KACpBjhC,OAAQA,EAASogC,GhGnES,IgGoExB,CACFpgC,OAAQA,EAAS6gC,GAMX,WACMH,GAAY,cAAC,GAAD,CAAWpD,UAAU,IACnC,qBAAKh7B,UAAWC,KAAQ2+B,UAAWp8B,YAAU,oBAA7C,SACI,cAAC,GAAD,eCRLqB,oBAbSxD,IACtB,MAAM7J,EAAK4U,GAAe/K,GACpB+I,EAAY5S,EAAKqS,GAAkBxI,EAAO7J,GAAM,KAEtD,MAAO,CACL4S,YACAwvB,gBAHmBxvB,IAAaA,EAAUgB,SAAShB,EAAUgB,OAAOuR,OAIpEjgB,MAAOsN,GAAmB3I,GAC1By4B,mBAAoBvb,GAAuBld,GAC3C2zB,aAAcD,GAAiB1zB,MAIK,CACtCw+B,iB5D5DgC,CAACz1B,EAAW1N,KAC5C,MAAMszB,EAAM,IAAK5lB,EACfkB,eAAgB5O,GAElB,MAAO,CACL3F,KAAMumB,GACNxjB,MAAOk2B,K4DqDInrB,EAxDO7E,IACpB,MAAM,MACJnB,GACEa,IACJN,qBAAU,KACJY,EAAMoK,WACRpK,EAAM6/B,iBAAiB7/B,EAAMoK,UAAWpK,EAAMtD,SAE/C,CAACsD,EAAMoK,YAEV,MAAM01B,EAAa,KACjB,GAAI9/B,EAAM85B,mBACR,OAAO,cAAC,GAAD,CAAoBsF,UAAU,IAGvC,MAAM1gC,EAASsB,EAAMg1B,ajG7BO,GiG6B2BttB,GAAoB,GAC3E,OAAO,sBAAK1G,UAAU,oBAAoBU,MAAO,CAC/ChD,UADK,UAGK,cAAC,GAAD,IACA,cAAC,GAAD,CAAU4zB,MAAM,QAS9B,OAAO,mCACI7tB,EAAc5F,GAAS,cAAC,GAAD,CAAoB6hB,QAAS9oB,IAAKC,EAAE,2DANzC,qCACnB,cAAC,GAAD,IACCmI,EAAM45B,aAAekG,IAAe,cAAC,GAAD,CAAkBn3B,KAAM/Q,IAAKC,EAAE,uBCMjEgN,oBALSxD,IAAK,CAC3By4B,mBAAoBvb,GAAuBld,GAC3C2zB,aAAcD,GAAiB1zB,MAGO,CACtC0+B,gB7D3BmC,MACnChpC,KAAMymB,M6DyBO3Y,EAnCM7E,IACnB,MAAM,MACJnB,GACEa,IACJN,qBAAU,KACRY,EAAM+/B,oBACL,IACH,MAAMrhC,EAASsB,EAAMg1B,alGlBS,GkGkByBttB,GAAoB,GAY3E,OAAO,mCACIjD,EAAc5F,GAAS,cAAC,GAAD,CAAoB6hB,QAAS9oB,IAAKC,EAAE,4DAX1C,qCAClB,cAAC,GAAD,IACCmI,EAAM85B,mBAAqB,cAAC,GAAD,CAAoBsF,UAAU,IAAW,sBAAKp+B,UAAU,oBAAoBU,MAAO,CACrHhD,UAD2E,UAG7D,cAAC,GAAD,IACA,cAAC,GAAD,CAAU4zB,MAAM,eCf7B,MAAM0N,WAAsBlgC,YAAW,eAAD,oBAC3CgzB,iBAAmBj8B,GAAQ,qBAAkBmK,UAAWQ,IAAG3K,EAAKE,KAAM,QAAS,QAApD,SACjB,cAAC,GAAD,CAAMF,KAAMA,EAAMiuB,cAAeR,MADNztB,EAAKmF,GADC,KAI3Cg3B,kBAAoBt2B,GAASA,EAAMC,KAAI9F,GAAQsJ,KAAK2yB,iBAAiBj8B,KAErEyK,SACE,MAAM,UACJyK,EADI,eAEJT,GACEnL,KAAKH,MAET,OAAK+L,GAAcT,EAAeC,OAI3B,qCACMQ,EAAY,cAAC,IAAD,CAAOonB,aAAW,EAAlB,SACL,cAAC,IAAD,UACI,cAAC,IAAD,QAEG,KACf,cAAC,KAAD,CAAiBnyB,UAAU,eAAemhB,OAAQ7W,EAAgB+E,OAAQtV,KAAQq4B,KAAM33B,eAAkB43B,UAAWv4B,KAAiB+D,MAAOrD,KAAuB83B,YAAaz4B,KAAmB04B,aAAa,EAAOC,aAAa,EAAOC,gBAAgB,iBAA5P,SACKtzB,KAAK6yB,kBAAkB1nB,QAV/B,cAAC,GAAD,CAAkB3C,KAAM/Q,IAAKC,EAAE,2CAoB5CmoC,GAAcp+B,aAAe,CAC3B0J,eAAgB,IAWHzG,oBARSxD,IACtB,MAAMqyB,EAAoB/F,GAAuBtsB,GACjD,MAAO,CACL0K,UAAWM,GAAsBhL,KAAWqyB,EAC5CpoB,eAAgBnS,YAAQ20B,GAAwBzsB,IAAQ8I,OAAOtO,SAIpDgJ,CAAyBm7B,I,8BCsCzBn7B,oBAVSxD,IACtB,MAAM7J,EAAK4U,GAAe/K,GAE1B,MAAO,CACL+I,UAFgB5S,EAAKqS,GAAkBxI,EAAO7J,GAAM,KAGpDA,KACAkF,MAAOsN,GAAmB3I,MAIU,CACtCg+B,kBAAmBpK,GACnB+J,iBAAkB7J,GAClB8K,oBxBrDwCnmC,IAAK,CAC7C/C,KAAMu2B,GACNxzB,UwBoDAwlC,oBAAqBlK,IAJRvwB,EAjFQ,EACrBuF,YACA1N,QACA2iC,oBACAL,mBACAM,sBACAW,0BAEA7gC,qBAAU,KACR,GAAIgL,EAAW,CAEb,MAAM81B,EAAcxC,KAAOhhC,EAAO,CAAC,IAAK,MACxC2iC,EAAkBj1B,EAAW81B,GAE7B,IAAIC,EAAc,EAClBzjC,EAAM6Z,SAAQ1f,IACRA,EAAKE,OAASR,OAChB4pC,GAAe,EACfF,EAAoBppC,EAAKW,QAI7BkF,EAAM6Z,SAAQ1f,IACZyoC,EAAoBxiC,OAAOC,OAAO,GAAIlG,EAAM,CAC1CsE,EAAGI,KACHH,EAAGE,WAKP,IAAK,IAAIU,EAAI,EAAGA,EAAmC,GAA9BU,EAAM6O,OAAS40B,GAAkBnkC,GAAK,EACzDgjC,EAAiB,CACfjoC,KAAMP,KACNiiB,SAAUzc,EACVI,UAAU,IAId4iC,EAAiB,CACfjoC,KAAMN,KACN+F,kBAAkB,OAGrB,CAAC4N,EAAW1N,IACf,MAAM,MACJmC,EADI,OAEJH,GACEgB,IACEujB,EAAkBvkB,GAAU+F,EAAc5F,GPvDP,GADH,IOyDtC,OAAO,qCACG,cAAC,GAAD,CAAiBrH,GAAI4S,EAAU5S,KAC/B,sBAAKwJ,UAAWC,KAAQu+B,QAAS99B,MAAO,CAC9ChD,OAAQukB,GADF,UAGI,cAAC,GAAD,CAAW+Y,UAAU,IACrB,qBAAKh7B,UAAWC,KAAQ2+B,UAAWp8B,YAAU,kBAA7C,SACI,cAAC,GAAD,eCzEb,MC6BD48B,GAAe,CACnB,CAAC/b,IAAO,cAAC,GAAD,IACR,CAACF,IAAO,cAAC,GAAD,IACR,CAACC,IAAM,cAAC,GAAD,IACP,CAACE,IAAQ,cAAC,GAAD,IACT,CAACC,IAAe,cAAC,GAAD,KAqFH1f,oBAVS,CAACxD,EAAOgc,KAAc,IAAD,IAC3C,MAAMzT,EAAaG,GAAkB1I,GACrC,MAAO,CACLg/B,kBAAmBzsB,IAAQhK,GAC3B02B,kBAAmBx2B,GAAsBzI,GACzC7J,GAAI4U,GAAe/K,GACnBk/B,SAAS,UAAAljB,EAASyf,aAAT,mBAAgBtqB,cAAhB,eAAwB1P,cAAe,QAIZ,CACtC09B,gB1ErF8BhpC,GAAM2K,MAAO+Q,EAAU6C,KAMrD,IACE,MAAM1U,EAAQ0U,IACd,IAAI0qB,EAAoB,KAExB,GAAIjpC,EACFipC,EAAoB52B,GAAkBxI,EAAO7J,IAAO,SAC/C,CACL,MAAMkpC,GDjD2B7vB,ECiDWE,GAAiB1P,GDjDhBgV,aAAasqB,QAAb,kCAAgD9vB,UAAejW,GCkDtGgmC,EAAO/2B,GAAkBxI,EAAOq/B,GACtCD,EAAoBC,GAAeE,EAAOA,EzBoFHv/B,IAAS,IAAImN,IAAUvE,GAAsB5I,GAAQ,MAAO,kBAAmBmN,IAAUnE,GAAwBhJ,GAAQ,MAAO,gByBpFtHw/B,CAA8Bx/B,GAAO,GAItF6R,EADEutB,EACO3qB,GAA0B2qB,EAAkBjpC,IAE5Cme,GxB7C0B,MwB+CrC,MAAOxC,GACP,OAvBcH,EAuBCG,EAtBf3F,QAAQC,IAAI,+BAAgCuF,GACrCA,EAFOA,MDrCqBnC,G2E0HrCiwB,gBDzH+BhnC,IAAK,CACpC/C,KAAM89B,GACN/6B,WCqHa+K,EAnFU,EACvBrN,KACAitB,OACA6b,mBACAD,oBACAE,UACAC,kBACAM,sBAEA1hC,qBAAU,KA1BmBqlB,KAC7B,MAAMkS,EAAS34B,SAAS+iC,qBAAqB,UAAU,GAEnDrc,GAAYD,GACdkS,EAAOsH,UAAU1F,IAAI,UAErB5B,EAAOsH,UAAU+C,OAAO,WAqBxBC,CAAuBxc,KACtB,CAACA,IACJrlB,qBAAU,KACJkhC,IAAqBD,GACvBG,EAAgBD,KAEjB,CAACD,EAAkBD,EAAmBE,IACzCnhC,qBAAU,KACR,MAAM8hC,EAAW5hC,KAAS,IAAMwhC,EAAgBniC,OAAOC,cAAc,KAErE,OADAD,OAAOY,iBAAiB,SAAU2hC,GAC3B,KACLviC,OAAOa,oBAAoB,SAAU0hC,MAEtC,IAEEZ,EAQD7b,IAASL,GACJgc,GAAa3b,GAGlB4b,EACK,qCACK,cAAC,GAAD,IACA,cAAC,GAAD,CAAkB13B,KAAM/Q,IAAKC,EAAE,yElGjEN,MkGqEnCL,EACK,qCACK,cAAC,GAAD,IACA,cAAC,GAAD,CAAkBmR,KAAM/Q,IAAKC,EAAE,sCAIlC,OAAPL,EACK,cAAC,IAAD,CAAO27B,aAAW,EAAlB,SACK,cAAC,IAAD,UACI,cAAC,IAAD,QAKXiN,GAAa3b,GAjCX,cAAC,IAAD,CAAO0O,aAAW,EAAlB,SACK,cAAC,IAAD,UACI,cAAC,IAAD,WC1CLtuB,oBAJSxD,IAAK,CAC3Bqf,QAASpN,GAAiBjS,MAGY,CACtCuW,QAASpE,IADI3O,EAjBM,EACnB6b,UACA9I,aACI8I,EAAU,cAAC,IAAD,UACJ,cAAC,IAAD,CAAUygB,SAAUvpB,EAASwpB,WAAS,EAAtC,SACK1gB,MAEO,OCZjB,MCCD2gB,GAAkB,CAAC,uD,QCezB,MAoCM38B,GAAqB,CACzB48B,gBAAiB1qB,GACjB2qB,kBnG/CgC,IAAMp/B,UAUtC,IACE,MAAMozB,ODhB0BpzB,gBAAkBgL,GAAyBO,GLClC,GMeZ8zB,GAC7B,YAVAtuB,EAASvF,GAUQ4nB,IACjB,MAAOpiB,GACP,OATcH,EASCG,EARf3F,QAAQC,IAAI,iCAAkCuF,GACvCA,EAFOA,OmG2ChByuB,eFvD4B3nC,IAAK,CACjC/C,KAAM4Z,GACN7W,UEsDAoF,cClD4B,IAAMiD,MAAO+Q,EAAU6C,EAAUlD,KAC7D,MAAMoD,EAAYhX,IAChBiU,EAN2BjU,KAAU,CACvClI,KAAMia,GACNlX,MAAOmF,IAIIyiC,CAAgBziC,KAQ3B,IACE,MAAM0iC,EAAkB5nB,GAAgChE,KAClD9W,QAAmB2iC,aAAmB/uB,EAAY8uB,GAGxD,OAAO1rB,EADoBhX,EAAWkL,QAAO03B,GAA6B,aAAtBA,EAAIC,eAAsD,aAAtBD,EAAIC,eAA0D,cAA1BD,EAAIE,qBAEhI,MAAO5uB,GACP,OAZcH,EAYCG,EAXf3F,QAAQC,IAAI,+BAAgCuF,GACrCA,EAFOA,OD8ChBgvB,mBhF2CiC,IAAM7/B,UAUvC,IACE,MAAM6J,OD7G2B7J,gBAAkBgL,GAAyBuI,GAAsB7J,IC6GpEo2B,GAC9B,YAVA/uB,EAAS2C,GAUQ7J,IACjB,MAAOmH,GACP,OATcH,EASCG,EARf3F,QAAQC,IAAI,kCAAmCuF,GACxCA,EAFOA,OgF/ChBkvB,YErD0B,IAAIC,IAAkBhgC,UAChD,MAAM8T,EAAYmsB,IALStoC,MAMzBoZ,GANyBpZ,EAMFgD,OAAOC,OAAO,GAAIqlC,KAAoBD,GAN/B,CAChCprC,KAAMuiB,GACNxf,YAYA,IAEE,OAAOmc,EAAU,SHfiB,MACpC,MACM3d,EAAG,UADQ,kBACR,YAAkB+oC,GAAgB1kC,KAAI0lC,GAAC,cAAWA,KAAKn3B,KAAK,MACrE,OAAO5I,wBAAc61B,MAAK91B,GAAMA,EAAGE,IAAIC,SAASsK,IAAIxU,KAAM8/B,MAAMtjB,KGWjCwtB,KAG7B,MAAOnvB,GACP,OAVcH,EAUCG,EATf3F,QAAQC,IAAI,mCAAoCuF,GACzCA,EAFOA,QFkDHnO,mBAAQ,KAAMH,GAAdG,EA5CH7E,IACV,MAAM,GACJqC,GACEyV,YAAM,IASV,OARA1Y,qBAAU,KACRY,EAAMyhC,eAAep/B,EAAGqK,aACxB1M,EAAMshC,kBACNthC,EAAMuhC,oBACNvhC,EAAMgiC,qBACNhiC,EAAMd,gBACNc,EAAMkiC,gBACL,IACI,qCACG,cAAC,IAAD,CAAcx+B,QAAM,EAACg8B,SAAO,IAC5B,cAAC,IAAD,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAO6C,OAAK,EAACrT,KAAK,IAAI5tB,OAAQtB,GAAS,cAAC,GAAD,IAAeA,EAAOykB,KAAMJ,OACnE,cAAC,IAAD,CAAOke,OAAK,EAACrT,KAAK,OAAO5tB,OAAQtB,GAAS,cAAC,GAAD,IAAeA,EAAOykB,KAAML,OACtE,cAAC,IAAD,CAAOme,OAAK,EAACrT,KAAK,gBAAgB5tB,OAAQtB,GAAS,cAAC,GAAD,IAAeA,EAAOykB,KAAMJ,OAC/E,cAAC,IAAD,CAAOke,OAAK,EAACrT,KAAK,qBAAqB5tB,OAAQtB,GAAS,cAAC,GAAD,IAAeA,EAAOykB,KAAMN,OACpF,cAAC,IAAD,CAAOoe,OAAK,EAACrT,KAAK,0BAA0B5tB,OAAQtB,GAAS,cAAC,GAAD,IAAeA,EAAOykB,KAAMH,OACzF,cAAC,IAAD,CAAOie,OAAK,EAACrT,KAAK,4BAA4B5tB,OAAQtB,GAAS,cAAC,GAAD,IAAeA,EAAOykB,KAAMF,YAGnG,cAACie,GAAD,U,qBGvCL,MACMC,GAAsB,OAkBpB/gC,OAVD,CAACL,EAAQohC,OAAqBr6B,KAC1C,OAAQA,EAAOrR,MACb,IAXqB,YAYnB,OAAO2D,YAAgB0N,EAAOtO,MAAO2oC,IAEvC,QACE,OAAOphC,ICAE6G,oBAAgB,CAC7B0B,W3GoBc,CAACvI,EAAQiI,GAA0BlB,KACjD,OAAQA,EAAOrR,MACb,KAAKkS,GAED,MAAO,CACLM,KAAMnB,EAAOtO,MACb4C,MAAO,IAIb,KAAKwM,GAED,MAAO,IAAK7H,EACVkI,KAAM,IAAKlI,EAAMkI,QACZnB,EAAOtO,QAKlB,KAAKqP,GAED,OAAOM,GAAoB,CACzBpI,QACAyB,YAAasF,EAAOtF,YACpB4G,KAAM,UACN5P,MAAOsO,EAAOtO,QAIpB,KAAKsP,GAED,OAAOK,GAAoB,CACzBpI,QACAyB,YAAasF,EAAOtF,YACpB4G,KAAM,cACN5P,MAAOsO,EAAOtO,QAIpB,KAAKuP,GAED,MAAO,IAAKhI,EACV3E,MAAO0L,EAAOtO,OAIpB,QACE,OAAOuH,I2GlEXuB,YACA4B,iBpHhBc,CAACnD,EAD8B,GACW+G,KACxD,OAAQA,EAAOrR,MACb,KAAKsN,EAED,OAAO3J,YAAgB0N,EAAOtO,MALS,IAQ3C,KAAKwK,EAED,MAVuC,GAa3C,QACE,OAAOjD,IoHIXiH,cACAyL,e1FXc,CAAC1S,EAAQsS,GAA8BvL,KACrD,OAAQA,EAAOrR,MACb,KAAK0c,GAED,MAAO,IAAKpS,EACV,CAAC+G,EAAOtO,MAAMtC,IAAKkrC,KAAY,IAAKnpC,YAAS8H,EAAM+G,EAAOtO,MAAMtC,QAC3D4Q,EAAOtO,OACT8Z,KAIT,KAAKF,GAED,OAAOC,GAGX,QACE,OAAOtS,I0FLXgR,S/FpBc,CAAChR,EAAQ,GAAI+G,KAC3B,OAAQA,EAAOrR,MACb,KAAKob,GACH,CACE,MAAMwwB,EAAgBlpC,YAAa2O,EAAOtO,OAI1C,OAHiB6iB,KAAOtb,EAAO,CAC7BuhC,OAAQD,IAKd,QACE,OAAOthC,I+FSX0J,KnGjBc,CAAC1J,EAAQuP,GAAoBxI,KAC3C,OAAQA,EAAOrR,MACb,KAAK4Z,GAED,MASC,CACLnZ,IAFqBqrC,EARMz6B,EAAOtO,OAUrBtC,GACbqZ,SAAUgyB,EAAShyB,SACnB9W,SAAU8oC,EAAS/oB,SAASgpB,YAC5BhyB,YAAa+xB,EAASE,YAAYn2B,IAAI,QAVtC,QACE,OAAOvL,EAIb,IAAyBwhC,GmGMvBxkB,c3EDc,CAAChd,EAAQ4c,GAA8B7V,KACrD,OAAQA,EAAOrR,MACb,KAAKumB,GACH,CACE,MAAM0lB,EAAW,GAGjB,OAFAlmC,OAAOuQ,KAAK6Q,IAAqBvhB,KAAI4Q,GAAKy1B,EAASz1B,GAAKnF,EAAOtO,MAAMyT,KACrEy1B,EAAS7kB,kBAAmB,EACrB6kB,EAGX,KAAKzlB,GACH,OAAOU,GAET,KAAKF,GACH,OAAOjhB,OAAOC,OAAO,GAAIsE,EAAO,CAC9B8c,kBAAkB,IAGtB,KAAKH,GACH,OAAOlhB,OAAOC,OAAO,GAAIsE,EAAO,CAC9B8c,kBAAkB,IAGtB,KAAKX,GACH,OAAOU,GAET,KAAKT,GAED,OAAO3gB,OAAOC,OAAO,GAAIsE,EAAO,CAC9BoJ,KAAMrC,EAAOtO,QAInB,KAAK4jB,GAED,OAAO5gB,OAAOC,OAAO,GAAIsE,EAAO,CAC9BsJ,YAAavC,EAAOtO,QAI1B,KAAK6jB,GACH,OAAKvV,EAAOtO,MAAM2e,SAQXkE,KAAOtb,EAAO,CACnBiK,eAAgB,CACd23B,QAAS,CAAC,CAAClG,SAAS30B,EAAOtO,MAAM2e,UAAW,EAAGrQ,EAAOtO,WATjD6iB,KAAOtb,EAAO,CACnBiK,eAAgB,CACd43B,SAAU,CAAC96B,EAAOtO,UAW1B,KAAK8jB,GACH,CACE,MAAMulB,EAAa/6B,EAAOtO,MACpBi9B,EAAqB11B,EAAMiK,eAAemhB,WAAU51B,GAAQA,EAAKW,KAAO2rC,IAE9E,OAAIpM,GAAsB,EACjBpa,KAAOtb,EAAO,CACnBiK,eAAgB,CACd23B,QAAS,CAAC,CAAClM,EAAoB,OAK9B11B,EAGX,KAAKyc,GACH,CACE,MAAMslB,EAAajqC,YAAQkI,EAAMiK,gBACjC,IAAI+3B,GAAmB,EACvB,MAAMC,EAAgBl7B,EAAOtO,MAAM6C,KAAI,EACrC1B,IACAC,IACAC,IACAC,IACAY,QAEA,MAAMunC,EAAYH,EAAW91B,MAAKk2B,GAAMA,EAAGhsC,KAAOwE,IAElD,OAAMunC,EAAUtoC,IAAMA,GAAKsoC,EAAUroC,IAAMA,GAAKqoC,EAAUpoC,IAAMA,GAAKooC,EAAUnoC,IAAMA,GACnFioC,GAAmB,EACZvmC,OAAOC,OAAO,GAAIwmC,EAAW,CAClCpoC,IACAC,IACAH,IACAC,OAIGqoC,KAET,OAAOF,EAAmB,IAAKhiC,EAC7BiK,eAAgBg4B,GACdjiC,EAGR,KAAKwc,GACH,CACE,MAAMwO,EAAgBjkB,EAAOtO,MACvBi9B,EAAqB11B,EAAMiK,eAAemhB,WAAU51B,GAAQA,EAAKW,KAAO60B,EAAc70B,KAE5F,GAAIu/B,GAAsB,EAAG,CAM3B,OALiBpa,KAAOtb,EAAO,CAC7BiK,eAAgB,CACd23B,QAAS,CAAC,CAAClM,EAAoB,EAAGj6B,OAAOC,OAAO,GAAIsvB,QAM1D,OAAOhrB,EAGX,QACE,OAAOA,I2ErHXusB,e9CPc,CAACvsB,EAAQmsB,GAA+BplB,KACtD,OAAQA,EAAOrR,MACb,KAAKm2B,GACH,CACE,MAAM8V,EAAW,GAEjB,OADAlmC,OAAOuQ,KAAKqgB,IAA2B/wB,KAAI4Q,GAAKy1B,EAASz1B,GAAKnF,EAAOtO,MAAMyT,KACpEy1B,EAGX,KAAK7V,GACH,OAAOK,GAET,KAAKJ,GACH,OAAKhlB,EAAOtO,MAAM2e,SAQXkE,KAAOtb,EAAO,CACnBiK,eAAgB,CACd23B,QAAS,CAAC,CAAClG,SAAS30B,EAAOtO,MAAM2e,UAAW,EAAGrQ,EAAOtO,WATjD6iB,KAAOtb,EAAO,CACnBiK,eAAgB,CACd43B,SAAU,CAAC96B,EAAOtO,UAW1B,KAAKwzB,GACH,CACE,MAAM6V,EAAa/6B,EAAOtO,MACpBi9B,EAAqB11B,EAAMiK,eAAemhB,WAAU51B,GAAQA,EAAKW,KAAO2rC,IAE9E,OAAIpM,GAAsB,EACjBpa,KAAOtb,EAAO,CACnBiK,eAAgB,CACd23B,QAAS,CAAC,CAAClM,EAAoB,OAK9B11B,EAGX,KAAKksB,GACH,CACE,MAAMlB,EAAgBjkB,EAAOtO,MACvBi9B,EAAqB11B,EAAMiK,eAAemhB,WAAU51B,GAAQA,EAAKW,KAAO60B,EAAc70B,KAE5F,GAAIu/B,GAAsB,EAAG,CAM3B,OALiBpa,KAAOtb,EAAO,CAC7BiK,eAAgB,CACd23B,QAAS,CAAC,CAAClM,EAAoB,EAAGj6B,OAAOC,OAAO,GAAIsvB,QAM1D,OAAOhrB,EAGX,KAAKgsB,GACH,CACE,MAAM+V,EAAajqC,YAAQkI,EAAMiK,gBACjC,IAAI+3B,GAAmB,EACvB,MAAMC,EAAgBl7B,EAAOtO,MAAM6C,KAAI,EACrC1B,IACAC,IACAC,IACAC,IACAY,QAEA,MAAMunC,EAAYH,EAAW91B,MAAKk2B,GAAMA,EAAGhsC,KAAOwE,IAElD,OAAMunC,EAAUtoC,IAAMA,GAAKsoC,EAAUroC,IAAMA,GAAKqoC,EAAUpoC,IAAMA,GAAKooC,EAAUnoC,IAAMA,GACnFioC,GAAmB,EACZvmC,OAAOC,OAAO,GAAIwmC,EAAW,CAClCpoC,IACAC,IACAH,IACAC,OAIGqoC,KAET,OAAOF,EAAmB,IAAKhiC,EAC7BiK,eAAgBg4B,GACdjiC,EAGR,QACE,OAAOA,I8CnFXuQ,YjGpBc,CAACvQ,EAAQqQ,GAA4BtJ,KACnD,OAAQA,EAAOrR,MACb,KAAKya,GAED,MAAO,IAAKnQ,EACV,CAAC+G,EAAO+B,OAAO3S,IAAK4Q,EAAO+B,OAAOrQ,OAIxC,KAAK2X,GACH,CACE,MAAMuxB,EAAW,IAAK3hC,GAGtB,cADO2hC,EAAS56B,EAAO5Q,IAChBwrC,EAGX,KAAKzxB,GAED,OAAOnJ,EAAO2J,QAGlB,KAAKT,GAED,OAAOI,GAGX,QACE,OAAOrQ,IiGPXK,SACA6R,M5F1Bc,CAAClS,EADkB,KACW+G,KAC5C,OAAQA,EAAOrR,MACb,KAAKqc,GAED,OAAOhL,EAAOtO,MAGlB,KAAKuZ,GAED,OAV2B,KAa/B,QACE,OAAOhS,I4FcXpC,WlG3Bc,CAACoC,EAAQ4P,GAAoB7I,KAC3C,OAAQA,EAAOrR,MACb,KAAKia,GAED,MAAO,IAAIC,MAAuB7I,EAAOtO,OAG7C,QACE,OAAOuH,IkGoBXyY,ShFpBc,CAACzY,EAAQkY,GAAkBnR,KACzC,OAAQA,EAAOrR,MACb,IAbwB,eAepB,OAAO+F,OAAOC,OAAO,GAAIqL,EAAOtO,OAGpC,KAAKwf,GAED,MAAO,IAAKjY,KACP+G,EAAOtO,OAIhB,QACE,OAAOuH,IgFMXgZ,qB/E7Bc,CAAChZ,EAAQ8Y,GAAsC/R,KAC7D,OAAQA,EAAOrR,MACb,KAAKkjB,GAED,OAAO7R,EAAOtO,MAGlB,KAAKogB,GAED,OAAOC,GAGX,QACE,OAAO9Y,I+EiBX2zB,anC/Bc,CAAC3zB,EAAQyzB,GAA6B1sB,KACpD,OAAQA,EAAOrR,MACb,KAAK89B,GAED,OAAOzsB,EAAOtO,MAGlB,QACE,OAAOuH,MoCOEoiC,OAZQ5wB,IACrB,MAAM6wB,EAAa,CAACC,KAAMC,kBAAkB/wB,IAEtCgxB,EAAmBllC,OAAOmlC,sCAAwCC,KAMxE,OAJKplC,OAAOmlC,qCAILE,aAAYC,GAASJ,EAAiBK,gBAAmBR,M,8TCuBlE,MAAMt2B,GAAY,UAClBxV,IAAKusC,aAAa,KAAM/2B,GAAWg3B,IACnCxsC,IAAKusC,aAAa,QAAS/2B,GAAWi3B,IACtCzsC,IAAKusC,aAAa,MAAO/2B,GAAWk3B,IACpC1sC,IAAKusC,aAAa,KAAM/2B,GAAWm3B,IACnC3sC,IAAKusC,aAAa,KAAM/2B,GAAWo3B,IACnC5sC,IAAKusC,aAAa,KAAM/2B,GAAWq3B,IACnC7sC,IAAKusC,aAAa,KAAM/2B,GAAWs3B,IACnC9sC,IAAKusC,aAAa,KAAM/2B,GAAWu3B,IACnC/sC,IAAKusC,aAAa,KAAM/2B,GAAWw3B,IACnChtC,IAAKusC,aAAa,KAAM/2B,GAAWy3B,IACnCjtC,IAAKusC,aAAa,KAAM/2B,GAAW03B,IACnCltC,IAAKusC,aAAa,KAAM/2B,GAAW23B,IACnCntC,IAAKusC,aAAa,KAAM/2B,GAAW43B,IACnCptC,IAAKusC,aAAa,MAAO/2B,GAAW63B,IACpCrtC,IAAKusC,aAAa,KAAM/2B,GAAW83B,IACnCttC,IAAKusC,aAAa,KAAM/2B,GAAW+3B,IACnCvtC,IAAKusC,aAAa,QAAS/2B,GAAWg4B,IACtCxtC,IAAKusC,aAAa,KAAM/2B,GAAWi4B,IACnCztC,IAAKusC,aAAa,KAAM/2B,GAAWk4B,IACnC1tC,IAAKusC,aAAa,MAAO/2B,GAAWm4B,IACpC3tC,IAAKusC,aAAa,KAAM/2B,GAAWo4B,IACnC5tC,IAAKusC,aAAa,KAAM/2B,GAAWq4B,IACnC7tC,IAAKusC,aAAa,KAAM/2B,GAAWs4B,IACnC9tC,IAAKusC,aAAa,KAAM/2B,GAAWu4B,IACnC/tC,IAAKusC,aAAa,UAAW/2B,GAAWw4B,IACxChuC,IAAKusC,aAAa,KAAM/2B,GAAWy4B,IACnCjuC,IAAKusC,aAAa,KAAM/2B,GAAW04B,IACnCluC,IAAKusC,aAAa,QAAS/2B,GAAW24B,IACvBnuC,EAAf,ECtDA,MAEMurB,GAAW,CACf6iB,QAAS,CAAC,QAAS,MAAO,SAAU,cAAe,aAAc,cAAe,YAAa,mBAAoB,cAI7GC,GAAgBC,uMAAYC,+BAAiC,KAE/DF,KACF9iB,GAASijB,QAAU,CACjBnmB,cAAegmB,KA0BJI,UAtBI,KACjB,MAAMxzB,EAAaynB,cACnB,OAAO,cAAC,IAAD,CAAegM,MAAO7C,GAAe5wB,GAArC,SACG,cAAC,mBAAD,CAAkB0zB,MAlBPC,yBAAeC,KAkB1B,SACI,cAAC,IAAD,CAAQtjB,SAAUA,GAAUujB,SAAS,SAArC,SACK,EACXrkC,QAEKA,EAKE,cAAC,EAAD,UACe,cAAC,GAAD,MAJb,a,iCCrCnB,qIAEO,MAAMmU,EAA2B3f,IAAS,IAAD,EAC9C,IAAK2C,IAAS3C,GACZ,OAAO,KAIT,OAAOA,EADO,UAAGC,IAAYD,EAAKE,aAApB,aAAG,EAAwBW,WAChBb,EAAK8vC,aAAe9vC,EAAK+vC,OAAS/vC,EAAK8F,KAAO9F,EAAKgwC,aAAehwC,EAAKiwC,YAAc,IAEnGjyB,EAAqBhe,GAAQ2f,EAAyB3f,GAAMW,GAC5D2xB,EAAuBtyB,GAAQ2f,EAAyB3f,GAAM4T,M,kCCX3E,qNAIA,MAAMs8B,EAA2B,CAC/B,CAACjxC,KAAM,YACP,CAACC,KAAe,oBAChB,CAACC,KAAc,oBAKXgxC,EAAYjwC,IAChB,GAH0BA,IAAQ,CAAClB,IAAOD,KAAc8Y,SAAS3X,GAG7DkwC,CAAoBlwC,GACtB,OAAO,EAIT,OAAOiD,EADY+sC,EAAyBhwC,KAIjCiqB,EAAoBjqB,KAAUiwC,EAAUjwC,GAgBxC6vB,EAAU,CAAC/vB,EAAMwB,KAC5B,MAAMP,EAAShB,IAAYD,EAAKE,MAAMe,OAAO+c,YAAmBhe,IAChE,MAAM,GAAN,OAAUwB,EAAV,YAAqBP,IAEVsoB,EAAOje,MAAOtL,EAAM8oB,GAC/BG,cACA5T,aACA0T,UAAU,OAEV,MAAMsnB,EAAS,IAAKvnB,KACfC,EACH7hB,GAAIF,YAAiBhH,EAAKW,KAEtBT,EAAOmV,GAAcrV,EAAKE,KA5BR,EAACowC,EAAQD,EAAQpnB,KACnCqnB,GAAUA,EAAO/mB,OAIvB+mB,EAAO7uC,IAAMwnB,EAAYznB,QACzB8uC,EAAOC,kBAAmB,EAC1BD,EAAO/8B,WAAY,EAEf0V,EAAYC,OACdonB,EAAOpnB,KAAOD,EAAYC,MAG5BonB,EAAO/mB,KAAK8mB,KAiBZG,CADeL,EAAUjwC,GACNmwC,EAAQpnB,IAEhBwnB,EAASzwC,IACpB,MAAMswC,EAASH,EAAUnwC,EAAKE,MAE1BowC,GAAUA,EAAOG,QACnBH,EAAOG,OAAOzpC,YAAiBhH,EAAKW,MAG3B6oB,EAAU,CAACxpB,EAAMqV,KAC5B,MAAMi7B,EAASH,EAAU96B,GAErBi7B,GAAUA,EAAO9mB,SACnB8mB,EAAO9mB,QAAQxiB,YAAiBhH,EAAKW,Q,sCChEzC/B,EAAOC,QAAU,CAAC,eAAiB,mCAAmC,UAAY,8BAA8B,gBAAkB,sC","file":"static/js/app.dfad3944.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ControlBar_root__iikeX\",\"dragging\":\"ControlBar_dragging__3lq79\",\"content\":\"ControlBar_content__26Z33\",\"draghandle\":\"ControlBar_draghandle__27zum\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"DashboardItemChip_link__21drZ\",\"icon\":\"DashboardItemChip_icon__2hcIR\",\"selected\":\"DashboardItemChip_selected__r00uP\",\"unselected\":\"DashboardItemChip_unselected__2H9l2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ClearButton_button__33ZbK\",\"icon\":\"ClearButton_icon__vTJm3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Filter_container__1Vxdh\",\"input\":\"Filter_input__14lhU\",\"focused\":\"Filter_focused__Lvyz3\",\"searchIcon\":\"Filter_searchIcon__2ojUp\",\"searchButton\":\"Filter_searchButton__1tMTB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ShowMoreButton_container__riJz_\",\"showMore\":\"ShowMoreButton_showMore__3S3He\",\"disabled\":\"ShowMoreButton_disabled__2FQNA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"DashboardsBar_container__1xuCo\",\"expanded\":\"DashboardsBar_expanded__3lVl8\",\"controls\":\"DashboardsBar_controls__3PhmY\",\"newLink\":\"DashboardsBar_newLink__2PkLQ\",\"collapsed\":\"DashboardsBar_collapsed__3CY9n\",\"chipContainer\":\"DashboardsBar_chipContainer__IRxuN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonContainer\":\"FilterSelector_buttonContainer__O_amY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ViewTitleBar_container__VivO0\",\"actions\":\"ViewTitleBar_actions__2UTRz\",\"editLink\":\"ViewTitleBar_editLink__d_HzW\",\"titleBar\":\"ViewTitleBar_titleBar__eiwJS\",\"titleBarIcon\":\"ViewTitleBar_titleBarIcon__2cBxv\",\"strip\":\"ViewTitleBar_strip__3xR4U\",\"title\":\"ViewTitleBar_title__2GhTR\",\"descContainer\":\"ViewTitleBar_descContainer__3rF10\",\"desc\":\"ViewTitleBar_desc__3QW6Z\",\"noDesc\":\"ViewTitleBar_noDesc__Jettc\",\"moreButton\":\"ViewTitleBar_moreButton__1HduK\",\"shareButton\":\"ViewTitleBar_shareButton__3yEKR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"NoVisualizationMessage_message__22IPi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"center\":\"LoadingMask_center__KHIYy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FatalErrorBoundary_container__3SViR\",\"icon\":\"FatalErrorBoundary_icon__2UbeP\",\"message\":\"FatalErrorBoundary_message__3FzrY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"deleteItemButton\":\"DeleteItemButton_deleteItemButton__3TJm9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"warning\":\"PrintItemInfo_warning__123PK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"line\":\"ItemFooter_line__3Ko0R\",\"scrollContainer\":\"ItemFooter_scrollContainer__tuq4P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Item_list__1_nkQ\",\"item\":\"Item_item__3-6QE\",\"itemicon\":\"Item_itemicon__QlouX\",\"link\":\"Item_link___3c_q\",\"deleteicon\":\"Item_deleteicon__3usrl\",\"deletebutton\":\"Item_deletebutton__1DpBW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"titlePage\":\"Item_titlePage__18CNQ\",\"name\":\"Item_name__3nuTV\",\"description\":\"Item_description__1gFQd\",\"filterTitle\":\"Item_filterTitle__2p7TQ\",\"filterList\":\"Item_filterList__qc_G3\",\"filterListItem\":\"Item_filterListItem__sPbBY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bar\":\"FilterBar_bar__1Ma3p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"HeaderMenuItem_item__313hC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuItem\":\"ContentMenuItem_menuItem__vbKn3\",\"launchLink\":\"ContentMenuItem_launchLink__2Nql9\",\"label\":\"ContentMenuItem_label__ANfH1\",\"buttonInsert\":\"ContentMenuItem_buttonInsert__1joHg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"showMoreButton\":\"CategorizedMenuGroup_showMoreButton__2RbRp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"ItemSelector_menu__2VYae\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"EditTitleBar_section__LIaIC\",\"titleDescription\":\"EditTitleBar_titleDescription__1YsU6\",\"title\":\"EditTitleBar_title__3mUbt\",\"description\":\"EditTitleBar_description__24U5X\",\"itemSelector\":\"EditTitleBar_itemSelector__1cFEp\"};","import i18n from '@dhis2/d2-i18n';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\nimport ExtensionIcon from '@material-ui/icons/Extension';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport PersonIcon from '@material-ui/icons/Person';\nimport FontDownloadIcon from '@material-ui/icons/FontDownload';\nimport EmailIcon from '@material-ui/icons/Email';\nimport CropFreeIcon from '@material-ui/icons/CropFree';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested'; // Item types\n\nexport const VISUALIZATION = 'VISUALIZATION';\nexport const REPORT_TABLE = 'REPORT_TABLE';\nexport const CHART = 'CHART';\nexport const MAP = 'MAP';\nexport const EVENT_REPORT = 'EVENT_REPORT';\nexport const EVENT_CHART = 'EVENT_CHART';\nexport const APP = 'APP';\nexport const REPORTS = 'REPORTS';\nexport const RESOURCES = 'RESOURCES';\nexport const USERS = 'USERS';\nexport const MESSAGES = 'MESSAGES';\nexport const TEXT = 'TEXT';\nexport const SPACER = 'SPACER';\nexport const PAGEBREAK = 'PAGEBREAK';\nexport const PRINT_TITLE_PAGE = 'PRINT_TITLE_PAGE';\nconst DOMAIN_TYPE_AGGREGATE = 'AGGREGATE';\nconst DOMAIN_TYPE_TRACKER = 'TRACKER'; // Dashboard helpers\n\nexport const isVisualizationType = item => !!itemTypeMap[item.type].isVisualizationType;\nexport const hasMapView = itemType => itemTypeMap[itemType].domainType === DOMAIN_TYPE_AGGREGATE;\nexport const isTrackerDomainType = itemType => itemTypeMap[itemType].domainType === DOMAIN_TYPE_TRACKER;\nexport const getDefaultItemCount = itemType => itemTypeMap[itemType].defaultItemCount || 5;\nexport const getAppName = itemType => itemTypeMap[itemType].appName || ''; // Item type map\n\nexport const itemTypeMap = {\n  [VISUALIZATION]: {\n    id: VISUALIZATION,\n    endPointName: 'visualizations',\n    propName: 'visualization',\n    pluralTitle: i18n.t('Visualizations'),\n    appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n    appName: 'Data Visualizer',\n    defaultItemCount: 10\n  },\n  [REPORT_TABLE]: {\n    id: REPORT_TABLE,\n    endPointName: 'visualizations',\n    dataStatisticsName: 'REPORT_TABLE_VIEW',\n    propName: 'visualization',\n    pluralTitle: i18n.t('Pivot tables'),\n    domainType: DOMAIN_TYPE_AGGREGATE,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n    appName: 'Data Visualizer'\n  },\n  [CHART]: {\n    id: CHART,\n    endPointName: 'visualizations',\n    propName: 'visualization',\n    dataStatisticsName: 'CHART_VIEW',\n    pluralTitle: i18n.t('Charts'),\n    domainType: DOMAIN_TYPE_AGGREGATE,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n    appName: 'Data Visualizer'\n  },\n  [MAP]: {\n    id: MAP,\n    endPointName: 'maps',\n    dataStatisticsName: 'MAP_VIEW',\n    propName: 'map',\n    pluralTitle: i18n.t('Maps'),\n    domainType: DOMAIN_TYPE_AGGREGATE,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-maps/?id=${id}`,\n    appName: 'Maps'\n  },\n  [EVENT_REPORT]: {\n    id: EVENT_REPORT,\n    endPointName: 'eventReports',\n    propName: 'eventReport',\n    pluralTitle: i18n.t('Event reports'),\n    domainType: DOMAIN_TYPE_TRACKER,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-event-reports/?id=${id}`,\n    appName: 'Event Reports'\n  },\n  [EVENT_CHART]: {\n    id: EVENT_CHART,\n    endPointName: 'eventCharts',\n    propName: 'eventChart',\n    pluralTitle: i18n.t('Event charts'),\n    domainType: DOMAIN_TYPE_TRACKER,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-event-visualizer/?id=${id}`,\n    appName: 'Event Visualizer'\n  },\n  [APP]: {\n    endPointName: 'apps',\n    propName: 'appKey',\n    pluralTitle: i18n.t('Apps')\n  },\n  [REPORTS]: {\n    id: REPORTS,\n    endPointName: 'reports',\n    propName: 'reports',\n    pluralTitle: i18n.t('Reports'),\n    appUrl: (id, type) => {\n      switch (type) {\n        case 'HTML':\n          return `dhis-web-reports/#/standard-report/view/${id}`;\n\n        case 'JASPER_REPORT_TABLE':\n        case 'JASPER_JDBC':\n        default:\n          return `api/reports/${id}/data.pdf?t=${new Date().getTime()}`;\n      }\n    }\n  },\n  [RESOURCES]: {\n    id: RESOURCES,\n    endPointName: 'resources',\n    propName: 'resources',\n    pluralTitle: i18n.t('Resources'),\n    appUrl: id => `api/documents/${id}/data`\n  },\n  [USERS]: {\n    id: USERS,\n    endPointName: 'users',\n    propName: 'users',\n    pluralTitle: i18n.t('Users'),\n    appUrl: id => `dhis-web-dashboard-integration/profile.action?id=${id}`\n  },\n  [TEXT]: {\n    id: TEXT,\n    propName: 'text'\n  },\n  [MESSAGES]: {\n    propName: 'messages'\n  },\n  [SPACER]: {\n    propName: 'text'\n  },\n  [PAGEBREAK]: {\n    propName: 'text'\n  },\n  [PRINT_TITLE_PAGE]: {\n    propName: 'text'\n  }\n};\nexport const getEndPointName = type => itemTypeMap[type].endPointName;\nexport const getDataStatisticsName = type => itemTypeMap[type].dataStatisticsName || null;\nexport const getItemUrl = (type, item, baseUrl) => {\n  let url;\n\n  if (type === APP) {\n    url = item.launchUrl;\n  }\n\n  if (itemTypeMap[type] && itemTypeMap[type].appUrl) {\n    url = `${baseUrl}/${itemTypeMap[type].appUrl(item.id, item.type)}`;\n  }\n\n  return url;\n};\nexport const getItemIcon = type => {\n  switch (type) {\n    case REPORT_TABLE:\n    case EVENT_REPORT:\n    case REPORTS:\n      return TableIcon;\n\n    case CHART:\n    case EVENT_CHART:\n      return ChartIcon;\n\n    case MAP:\n      return MapIcon;\n\n    case APP:\n      return ExtensionIcon;\n\n    case RESOURCES:\n      return DescriptionIcon;\n\n    case USERS:\n      return PersonIcon;\n\n    case TEXT:\n      return FontDownloadIcon;\n\n    case MESSAGES:\n      return EmailIcon;\n\n    case SPACER:\n      return CropFreeIcon;\n\n    default:\n      return NotInterestedIcon;\n  }\n};","import isObject from 'lodash/isObject'; // validation\n\nexport function orNull(param) {\n  return param === undefined ? null : param;\n}\nexport function orArray(param) {\n  return Array.isArray(param) ? param : [];\n}\nexport function orObject(param) {\n  return isObject(param) ? param : {};\n} // array\n\nexport function arrayGetById(array, id) {\n  return array.find(item => item.id === id);\n} // object\n\nexport function arrayToIdMap(array) {\n  return array.reduce((obj, item) => {\n    obj[item.id] = item;\n    return obj;\n  }, {});\n} // date\n\nexport function getDate() {\n  const y = Math.floor(Math.random() * 3) + 2015;\n  const M = Math.floor(Math.random() * 12) + 1;\n  const d = Math.floor(Math.random() * 28) + 1; // const h = Math.floor(Math.random() * 23) + 1;\n  // const m = Math.floor(Math.random() * 59) + 1;\n  // const s = Math.floor(Math.random() * 59) + 1;\n\n  return new Date(`${y}-${M}-${d}`).toJSON().replace('T', ' ').substr(0, 10);\n}\nexport const formatDate = (value, uiLocale) => {\n  if (typeof global.Intl !== 'undefined' && Intl.DateTimeFormat) {\n    const locale = uiLocale || 'en';\n    return new Intl.DateTimeFormat(locale, {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    }).format(new Date(value));\n  }\n\n  return value.substr(0, 19).replace('T', ' ');\n};\n/**\n * Sorts an array of objects based on provided date property\n *\n * @param {Array} items Array of objects\n * @param {String} dateProp Name of the date property to be used for sorting\n * @param {Boolean} ascending Whether to sort ascending or descending\n */\n\nexport const sortByDate = (items, dateProp, ascending = true) => {\n  const values = Object.values(items);\n  values.sort((a, b) => {\n    const aDate = new Date(a[dateProp]);\n    const bDate = new Date(b[dateProp]);\n    return ascending ? aDate - bDate : bDate - aDate;\n  });\n  return values;\n}; // reducer validator\n\nexport const validateReducer = (value, defaultValue) => value === undefined || value === null ? defaultValue : value;","import isFunction from 'd2-utilizr/lib/isFunction';\nimport { orObject } from '../../modules/util'; // Dimensions for the react-grid-layout\n\nexport const GRID_COMPACT_TYPE = 'vertical'; // vertical | horizonal | null\n\nexport const GRID_ROW_HEIGHT = 10;\nconst GRID_COLUMN_WIDTH_PX = 20;\nconst GRID_LAYOUT = 'FLEXIBLE'; // FIXED | FLEXIBLE\n\nexport const MARGIN = [10, 10];\nexport const NEW_ITEM_SHAPE = {\n  x: 0,\n  y: 0,\n  w: 20,\n  h: 29\n}; // Dimensions for getShape\n\nconst NUMBER_OF_ITEM_COLS = 2;\nconst GRID_COLUMNS = 60;\nconst MAX_ITEM_GRID_WIDTH = GRID_COLUMNS - 1;\nexport const MAX_ITEM_GRID_HEIGHT = 34;\nexport const MAX_ITEM_GRID_HEIGHT_OIPP = 35;\nexport const MAX_ITEM_GRID_WIDTH_OIPP = 56; // for A4 landscape (297x210mm)\n// 794 px = (21cm / 2.54) * 96 pixels/inch\n// 1122 px = 29.7 /2.54 * 96 pixels/inch\n// const a4LandscapeHeightPx = 794\n\nexport const A4_LANDSCAPE_WIDTH_PX = 1102;\nexport const getGridColumns = () => {\n  switch (GRID_LAYOUT) {\n    case 'FLEXIBLE':\n      return GRID_COLUMNS;\n\n    case 'FIXED':\n      return Math.floor((window.innerWidth - 20) / GRID_COLUMN_WIDTH_PX);\n\n    default:\n      return GRID_COLUMNS;\n  }\n}; // isNonNegativeInteger\n\nconst isNonNegativeInteger = x => Number.isInteger(x) && x >= 0; // Does the item have all the shape properties?\n\n\nexport const hasShape = item => isNonNegativeInteger(item.x) && isNonNegativeInteger(item.y) && isNonNegativeInteger(item.w) && isNonNegativeInteger(item.h); // returns a rectangular grid block dimensioned with x, y, w, h in grid units.\n// based on a grid with 3 items across\n\nexport const getShape = i => {\n  if (!isNonNegativeInteger(i)) {\n    throw new Error('Invalid grid block number');\n  }\n\n  const col = i % NUMBER_OF_ITEM_COLS;\n  const row = Math.floor(i / NUMBER_OF_ITEM_COLS);\n  const itemWidth = Math.floor(MAX_ITEM_GRID_WIDTH / NUMBER_OF_ITEM_COLS);\n  const itemHeight = GRID_ROW_HEIGHT * 2;\n  return {\n    x: col * itemWidth,\n    y: row * itemHeight,\n    w: itemWidth,\n    h: itemHeight\n  };\n};\nexport const getGridItemProperties = itemId => {\n  return {\n    i: itemId,\n    minH: 4 // minimum height for item\n\n  };\n};\nexport const getPageBreakItemShape = (yPos, isStatic = true) => {\n  return {\n    x: 0,\n    y: yPos,\n    w: MAX_ITEM_GRID_WIDTH,\n    h: 5,\n    static: !!isStatic,\n    minH: 1\n  };\n};\nexport const getPrintTitlePageItemShape = isOneItemPerPage => {\n  return {\n    x: 0,\n    y: 0,\n    w: isOneItemPerPage ? MAX_ITEM_GRID_WIDTH_OIPP : MAX_ITEM_GRID_WIDTH,\n    h: MAX_ITEM_GRID_HEIGHT,\n    static: true,\n    minH: 1\n  };\n};\n/**\n * Calculates the grid item's original height in pixels based\n * on the height in grid units. This calculation\n * is copied directly from react-grid-layout GridItem.js (calcPosition)\n *\n * @param {Object} item item containing shape (x, y, w, h)\n */\n\nexport const getOriginalHeight = item => {\n  const originalHeight = Math.round(GRID_ROW_HEIGHT * item.h + Math.max(0, item.h - 1) * MARGIN[1]);\n  return {\n    originalHeight\n  };\n};\n/**\n * Returns an array of items containing the x, y, w, h dimensions\n * and the item's originalheight in pixels\n * @function\n * @param {Array} items\n * @returns {Array}\n */\n\nexport const withShape = items => items.map((item, index) => {\n  const itemWithShape = hasShape(item) ? item : Object.assign({}, item, getShape(index));\n  return Object.assign({}, itemWithShape, getOriginalHeight(itemWithShape));\n});\nexport const getGridItemDomId = id => `item-${id}`;\nexport function onItemResize(id) {\n  const el = orObject(document.querySelector(`#${getGridItemDomId(id)}`));\n  if (isFunction(el.setViewportSize)) setTimeout(() => el.setViewportSize(el.clientWidth - 5, el.clientHeight - 5), 10);\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ConfirmDeleteDialog_content__EqswE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editBar\":\"EditBar_editBar__1d1xM\",\"controls\":\"EditBar_controls__1t0nO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noticeContainer\":\"NotSupportedNotice_noticeContainer__3z9Up\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PrintInfo_container__9gH0b\",\"title\":\"PrintInfo_title__2_VZd\",\"printSuggestions\":\"PrintInfo_printSuggestions__30tcU\",\"divider\":\"PrintInfo_divider__3wzx9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PrintActionsBar_container__2iQp7\",\"topMargin\":\"PrintActionsBar_topMargin__OpYDN\",\"inner\":\"PrintActionsBar_inner__uBqU7\",\"link\":\"PrintActionsBar_link__lFUmI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"PrintLayoutDashboard_wrapper__1WDh4\",\"pageOuter\":\"PrintLayoutDashboard_pageOuter__22acI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"PrintDashboard_wrapper__1O3s_\",\"pageOuter\":\"PrintDashboard_pageOuter__fl9tw\"};","import React, { createContext, useContext, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash/debounce';\nexport const WindowDimensionsCtx = createContext(null);\n\nconst windowDims = () => ({\n  height: window.innerHeight,\n  width: window.innerWidth\n});\n\nconst WindowDimensionsProvider = ({\n  children\n}) => {\n  const [dimensions, setDimensions] = useState(windowDims());\n  useEffect(() => {\n    const handleResize = debounce(() => {\n      setDimensions(windowDims());\n    }, 200);\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n  return <WindowDimensionsCtx.Provider value={dimensions}>\n            {children}\n        </WindowDimensionsCtx.Provider>;\n};\n\nWindowDimensionsProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};\nexport default WindowDimensionsProvider;\nexport const useWindowDimensions = () => {\n  return useContext(WindowDimensionsCtx);\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport classes from './styles/ControlBar.module.css'; //Matches the height of .dragHandle in ControlBar.module.css\n\nexport const DRAG_HANDLE_HEIGHT = 7;\n\nclass ControlBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dragging: false\n    };\n  }\n\n  onStartDrag = () => {\n    this.setState({\n      dragging: true\n    });\n    window.addEventListener('mousemove', this.onDrag);\n    window.addEventListener('mouseup', this.onEndDrag);\n  };\n  onDrag = event => {\n    event.preventDefault();\n    event.stopPropagation();\n    const newHeight = event.clientY;\n\n    if (this.props.onChangeHeight && newHeight !== this.props.height && newHeight > 0) {\n      requestAnimationFrame(() => {\n        this.props.onChangeHeight(newHeight);\n      });\n    }\n  };\n  onEndDrag = () => {\n    this.setState({\n      dragging: false\n    });\n    window.removeEventListener('mousemove', this.onDrag);\n    window.removeEventListener('mouseup', this.onEndDrag);\n\n    if (this.props.onEndDrag) {\n      this.props.onEndDrag();\n    }\n  };\n  renderDragHandle = () => typeof this.props.onChangeHeight === 'function' && <div className={classes.draghandle} onMouseDown={this.onStartDrag} data-testid=\"controlbar-drag-handle\" />;\n\n  render() {\n    const height = Math.max(this.props.height, 0) + DRAG_HANDLE_HEIGHT;\n    const rootClass = cx(classes.root, this.state.dragging && classes.dragging);\n    return <div style={{\n      height\n    }} className={rootClass}>\n                <div className={classes.content}>{this.props.children}</div>\n                {this.renderDragHandle()}\n            </div>;\n  }\n\n}\n\nControlBar.propTypes = {\n  /**\n   * The height of the control bar in number of lines. Must be a positive integer.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Callback function that is called when the control bar is resized.\n   * The callback receives one argument: The new height in pixels.\n   *\n   * If no callback is specified the control bar will not have a drag handle.\n   */\n  height: PropTypes.number.isRequired,\n\n  /**\n   * Callback function that is called when the control bar is dropped after being dragged.\n   * The callback receives one argument: The new height in pixels.\n   *\n   * Ignored if no \"onChangeHeight\" function is provided.\n   */\n  onChangeHeight: PropTypes.func,\n\n  /**\n   * The contents of the control bar.\n   */\n  onEndDrag: PropTypes.func\n};\nControlBar.defaultProps = {\n  onChangeHeight: null,\n  onEndDrag: null\n};\nexport default ControlBar;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst StarIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>;\n\nStarIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default StarIcon;","import { getInstance } from 'd2';\nexport const apiPostDataStatistics = async (eventType, id) => {\n  const d2 = await getInstance();\n  const url = `dataStatistics?eventType=${eventType}&favorite=${id}`;\n  d2.Api.getApi().post(url);\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Chip } from '@dhis2/ui';\nimport { Link } from 'react-router-dom';\nimport debounce from 'lodash/debounce';\nimport StarIcon from '../../icons/Star';\nimport { apiPostDataStatistics } from '../../api/dataStatistics';\nimport classes from './styles/DashboardItemChip.module.css';\nexport const DashboardItemChip = ({\n  starred,\n  selected,\n  label,\n  dashboardId,\n  onClick\n}) => {\n  const chipProps = {\n    selected\n  };\n\n  if (starred) {\n    const selectedState = selected ? classes.selected : classes.unselected;\n    chipProps.icon = <StarIcon className={`${classes.icon} ${selectedState}`} />;\n  }\n\n  const debouncedPostStatistics = debounce(() => apiPostDataStatistics('DASHBOARD_VIEW', dashboardId), 500);\n\n  const handleClick = () => {\n    debouncedPostStatistics();\n    onClick();\n  };\n\n  return <Link className={classes.link} to={`/${dashboardId}`} onClick={handleClick} data-test=\"dashboard-chip\">\n            <Chip {...chipProps}>{label}</Chip>\n        </Link>;\n};\nDashboardItemChip.propTypes = {\n  dashboardId: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  selected: PropTypes.bool.isRequired,\n  starred: PropTypes.bool.isRequired,\n  onClick: PropTypes.func.isRequired,\n  classes: PropTypes.object\n};\nexport default DashboardItemChip;","import React from 'react';\nimport { colors } from '@dhis2/ui';\n\nconst AddCircleIcon = () => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" fill={colors.teal600} viewBox=\"0 0 24 24\">\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm4 11h-3v3c0 .55-.45 1-1 1s-1-.45-1-1v-3H8c-.55 0-1-.45-1-1s.45-1 1-1h3V8c0-.55.45-1 1-1s1 .45 1 1v3h3c.55 0 1 .45 1 1s-.45 1-1 1z\" />\n    </svg>;\n\nexport default AddCircleIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst SearchIcon = ({\n  className,\n  small\n}) => small ? <svg className={className} height=\"16\" viewBox=\"0 0 16 16\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"m6 1c2.76142375 0 5 2.23857625 5 5 0 1.20065927-.4231997 2.30247496-1.12856994 3.16441794l4.48212334 4.48202866-.7071068.7071068-4.48202866-4.48212334c-.86194298.70537024-1.96375867 1.12856994-3.16441794 1.12856994-2.76142375 0-5-2.23857625-5-5s2.23857625-5 5-5zm0 1c-2.209139 0-4 1.790861-4 4s1.790861 4 4 4 4-1.790861 4-4-1.790861-4-4-4z\" fill=\"#010101\" />\n        </svg> : <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n            <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n            <path d=\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\" />\n        </svg>;\n\nSearchIcon.propTypes = {\n  className: PropTypes.string,\n  small: PropTypes.bool\n};\nexport default SearchIcon;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst ClearIcon = ({\n  className\n}) => <svg className={className} fill={colors.grey800} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n        <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>;\n\nClearIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default ClearIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ClearIcon from '../../icons/Clear';\nimport classes from './styles/ClearButton.module.css';\nexport const ClearButton = ({\n  onClear\n}) => <button className={classes.button} onClick={onClear}>\n        <span>\n            <ClearIcon className={classes.icon} color=\"action\" />\n        </span>\n    </button>;\nClearButton.propTypes = {\n  onClear: PropTypes.func.isRequired\n};\nexport default ClearButton;","import { validateReducer } from '../modules/util';\nexport const SET_DASHBOARDS_FILTER = 'SET_DASHBOARDS_FILTER';\nexport const CLEAR_DASHBOARDS_FILTER = 'CLEAR_DASHBOARDS_FILTER';\nexport const DEFAULT_STATE_DASHBOARDS_FILTER = '';\nexport default ((state = DEFAULT_STATE_DASHBOARDS_FILTER, action) => {\n  switch (action.type) {\n    case SET_DASHBOARDS_FILTER:\n      {\n        return validateReducer(action.value, DEFAULT_STATE_DASHBOARDS_FILTER);\n      }\n\n    case CLEAR_DASHBOARDS_FILTER:\n      {\n        return DEFAULT_STATE_DASHBOARDS_FILTER;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetDashboardsFilter = state => state.dashboardsFilter;","const SMALL_SCREEN_BREAKPOINT = 480;\n\nconst isSmallScreen = width => width <= SMALL_SCREEN_BREAKPOINT;\n\nexport default isSmallScreen;","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport cx from 'classnames';\nimport SearchIcon from '../../icons/Search';\nimport ClearButton from './ClearButton';\nimport { useWindowDimensions } from '../WindowDimensionsProvider';\nimport { acSetDashboardsFilter, acClearDashboardsFilter } from '../../actions/dashboardsFilter';\nimport { sGetDashboardsFilter } from '../../reducers/dashboardsFilter';\nimport isSmallScreen from '../../modules/isSmallScreen';\nimport classes from './styles/Filter.module.css';\nexport const KEYCODE_ENTER = 13;\nexport const KEYCODE_ESCAPE = 27;\nexport const FilterUnconnected = ({\n  clearDashboardsFilter,\n  filterText,\n  isMaxHeight,\n  setDashboardsFilter,\n  onKeypressEnter,\n  onToggleMaxHeight\n}) => {\n  const [focusedClassName, setFocusedClassName] = useState('');\n  const [inputFocused, setInputFocus] = useState(false);\n  const {\n    width\n  } = useWindowDimensions();\n\n  const setFilterValue = event => {\n    event.preventDefault();\n    setDashboardsFilter(event.target.value);\n  };\n\n  const onKeyUp = event => {\n    switch (event.keyCode) {\n      case KEYCODE_ENTER:\n        onKeypressEnter();\n        clearDashboardsFilter();\n        break;\n\n      case KEYCODE_ESCAPE:\n        clearDashboardsFilter();\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const onFocus = event => {\n    event.preventDefault();\n    setFocusedClassName(classes.focused);\n  };\n\n  const onBlur = event => {\n    event.preventDefault();\n    setFocusedClassName('');\n  };\n\n  const onFocusInput = input => {\n    if (input && inputFocused && isSmallScreen(width)) {\n      return input.focus();\n    }\n  };\n\n  const toggleMaxHeight = () => {\n    onToggleMaxHeight();\n    setInputFocus(true);\n  };\n\n  return isSmallScreen(width) && !isMaxHeight ? <button className={classes.searchButton} onClick={toggleMaxHeight}>\n            <SearchIcon className={classes.searchIcon} />\n        </button> : <div className={cx(classes.container, `${focusedClassName}`)} onFocus={onFocus} onBlur={onBlur}>\n            <SearchIcon className={classes.searchIcon} small={isSmallScreen(width) && isMaxHeight} />\n            <input className={classes.input} type=\"text\" placeholder={i18n.t('Search for a dashboard')} onChange={setFilterValue} onKeyUp={onKeyUp} value={filterText} data-test=\"search-dashboard-input\" ref={onFocusInput} />\n            {filterText && <ClearButton onClear={clearDashboardsFilter} />}\n        </div>;\n};\nFilterUnconnected.propTypes = {\n  clearDashboardsFilter: PropTypes.func,\n  filterText: PropTypes.string,\n  isMaxHeight: PropTypes.bool,\n  setDashboardsFilter: PropTypes.func,\n  onKeypressEnter: PropTypes.func,\n  onToggleMaxHeight: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  filterText: sGetDashboardsFilter(state)\n});\n\nconst mapDispatchToProps = {\n  setDashboardsFilter: acSetDashboardsFilter,\n  clearDashboardsFilter: acClearDashboardsFilter\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterUnconnected);","import { SET_DASHBOARDS_FILTER, CLEAR_DASHBOARDS_FILTER } from '../reducers/dashboardsFilter'; // actions\n\nexport const acSetDashboardsFilter = value => ({\n  type: SET_DASHBOARDS_FILTER,\n  value\n});\nexport const acClearDashboardsFilter = () => ({\n  type: CLEAR_DASHBOARDS_FILTER\n});","import React from 'react';\nexport const ChevronDown = () => <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"m11.29289 15.7071c.39053.3905 1.02369.3905 1.41422 0l4.99999-4.99999c.3905-.39053.3905-1.02369 0-1.41422-.3905-.39052-1.0237-.39052-1.4142 0l-4.2929 4.2929-4.29289-4.2929c-.39053-.39052-1.02369-.39052-1.41422 0-.39052.39053-.39052 1.02369 0 1.41422z\" fill=\"#a0adba\" />\n    </svg>;\nexport const ChevronUp = () => <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"m11.2928932 8.29289322c.360484-.36048396.927715-.3882135 1.3200062-.08318861l.0942074.08318861 5 4.99999998c.3905243.3905243.3905243 1.0236893 0 1.4142136-.360484.3604839-.927715.3882135-1.3200062.0831886l-.0942074-.0831886-4.2928932-4.2921068-4.29289322 4.2921068c-.36048396.3604839-.92771502.3882135-1.32000622.0831886l-.09420734-.0831886c-.36048396-.360484-.3882135-.927715-.08318861-1.3200062l.08318861-.0942074z\" fill=\"#a0adba\" />\n    </svg>;","import React, { useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Tooltip } from '@dhis2/ui';\nimport { ChevronDown, ChevronUp } from './assets/icons';\nimport classes from './styles/ShowMoreButton.module.css';\nexport const SHOWMORE_BAR_HEIGHT = 16;\n\nconst ShowMoreButton = ({\n  onClick,\n  isMaxHeight,\n  disabled\n}) => {\n  const containerRef = useRef(null);\n  const buttonLabel = isMaxHeight ? i18n.t('Show fewer dashboards') : i18n.t('Show more dashboards');\n\n  const onButtonClicked = () => {\n    // The click may happen on the svg or path\n    // element of the button icon.\n    // In that case it is necessary to trigger\n    // the mouseout on the button element\n    // to ensure that the tooltip is removed\n    const buttonEl = containerRef.current.children[0];\n    const event = new MouseEvent('mouseout', {\n      bubbles: true,\n      cancelable: false\n    });\n    onClick();\n    buttonEl.dispatchEvent(event);\n  };\n\n  return <div className={classes.container} ref={containerRef}>\n            {disabled ? <div className={classes.disabled}>\n                    <ChevronDown />\n                </div> : <Tooltip content={buttonLabel} placement=\"bottom\">\n                    {({\n        onMouseOver,\n        onMouseOut,\n        ref\n      }) => <button className={classes.showMore} onClick={onButtonClicked} data-test=\"showmore-button\" aria-label={buttonLabel} ref={ref} onMouseOver={onMouseOver} onMouseOut={onMouseOut}>\n                            {isMaxHeight ? <ChevronUp /> : <ChevronDown />}\n                        </button>}\n                </Tooltip>}\n        </div>;\n};\n\nShowMoreButton.propTypes = {\n  disabled: PropTypes.bool,\n  isMaxHeight: PropTypes.bool,\n  onClick: PropTypes.func\n};\nexport default ShowMoreButton;","import { SHOWMORE_BAR_HEIGHT } from './ShowMoreButton';\nimport { DRAG_HANDLE_HEIGHT } from './ControlBar';\nexport const CONTROL_BAR_ROW_HEIGHT = 40;\nexport const FIRST_ROW_PADDING_HEIGHT = 10;\nexport const MIN_ROW_COUNT = 1;\nexport const HEADERBAR_HEIGHT = 48;\nexport const CONTROL_BAR_MARGIN_BOTTOM_SMALL = 32;\nexport const SEARCH_BAR_HEIGHT_SMALL = 40; // height (24px) + padding top and bottom (8px)\n// show more button\n\nexport const CONTROL_BAR_OUTER_HEIGHT_DIFF = FIRST_ROW_PADDING_HEIGHT + SHOWMORE_BAR_HEIGHT - 2; // 2 pixel \"adjustment\"\n\nexport const getRowsHeight = rows => {\n  return rows * CONTROL_BAR_ROW_HEIGHT;\n};\nexport const getNumRowsFromHeight = height => {\n  return Math.floor((height - CONTROL_BAR_OUTER_HEIGHT_DIFF) / CONTROL_BAR_ROW_HEIGHT);\n};\nexport const getControlBarHeight = rows => {\n  return getRowsHeight(rows) + CONTROL_BAR_OUTER_HEIGHT_DIFF;\n};\nexport const CONTROL_BAR = 'controlBar';\nexport const CONTROL_BAR_CONTAINER = 'controlBarContainer';\nexport const CHIPS_CONTAINER = 'chipsContainer';\nexport const getControlBarHeightSmallDevice = (type, height) => {\n  const controlBarHeight = height - HEADERBAR_HEIGHT - CONTROL_BAR_MARGIN_BOTTOM_SMALL;\n\n  switch (type) {\n    // control bar height should be 100vh -32px\n    case CONTROL_BAR:\n      return controlBarHeight - DRAG_HANDLE_HEIGHT;\n\n    case CONTROL_BAR_CONTAINER:\n      return controlBarHeight - CONTROL_BAR_OUTER_HEIGHT_DIFF;\n\n    case CHIPS_CONTAINER:\n      return controlBarHeight - SEARCH_BAR_HEIGHT_SMALL - CONTROL_BAR_OUTER_HEIGHT_DIFF;\n\n    default:\n      return height;\n  }\n};","/** @module reducers/controlBar */\nimport { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\nexport const SET_CONTROLBAR_USER_ROWS = 'SET_CONTROLBAR_USER_ROWS';\nexport const DEFAULT_STATE_CONTROLBAR_ROWS = 1;\n\nconst userRows = (state = DEFAULT_STATE_CONTROLBAR_ROWS, action) => {\n  switch (action.type) {\n    case SET_CONTROLBAR_USER_ROWS:\n      return validateReducer(action.value, DEFAULT_STATE_CONTROLBAR_ROWS);\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  userRows\n});\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\n\nexport const sGetControlBarRoot = state => state.controlBar; // Selector dependency level 2\n\nexport const sGetControlBarUserRows = state => sGetControlBarRoot(state).userRows;","import { TEXT, SPACER } from './itemTypes';\nimport { getGridItemProperties } from '../components/ItemGrid/gridUtil';\nexport const spacerContent = 'SPACER_ITEM_FOR_DASHBOARD_LAYOUT_CONVENIENCE';\nexport const emptyTextItemContent = 'TEXT_ITEM_WITH_NO_CONTENT';\n\nconst isBackendSpacerType = item => item.type === TEXT && item.text === spacerContent;\n\nconst isUiSpacerType = item => item.type === SPACER;\n\nconst isTextType = item => item.type === TEXT && item.text !== spacerContent;\n\nexport const convertUiItemsToBackend = items => items.map(item => {\n  let text = null;\n\n  if (isUiSpacerType(item)) {\n    text = spacerContent;\n  } else if (isTextType(item)) {\n    text = item.text || emptyTextItemContent;\n  }\n\n  return { ...item,\n    ...(text ? {\n      text\n    } : {})\n  };\n});\nexport const convertBackendItemsToUi = items => items.map(item => {\n  const type = isBackendSpacerType(item) ? SPACER : item.type;\n  const gridProperties = getGridItemProperties(item.id);\n  const text = isTextType(item) ? item.text === emptyTextItemContent ? '' : item.text : null;\n  return { ...item,\n    ...(text !== null ? {\n      text\n    } : {}),\n    type,\n    ...gridProperties\n  };\n});","/** @module reducers/dashboards */\nimport arrayFrom from 'd2-utilizr/lib/arrayFrom';\nimport arraySort from 'd2-utilizr/lib/arraySort';\nimport { orArray, orObject } from '../modules/util';\nimport { convertBackendItemsToUi } from '../modules/uiBackendItemConverter';\nexport const SET_DASHBOARDS = 'SET_DASHBOARDS';\nexport const ADD_DASHBOARDS = 'ADD_DASHBOARDS';\nexport const SET_DASHBOARD_STARRED = 'SET_DASHBOARD_STARRED';\nexport const SET_DASHBOARD_DISPLAY_NAME = 'SET_DASHBOARD_DISPLAY_NAME';\nexport const SET_DASHBOARD_ITEMS = 'SET_DASHBOARD_ITEMS';\nexport const DEFAULT_STATE_DASHBOARDS = {\n  byId: null,\n  items: []\n};\nexport const EMPTY_DASHBOARD = {}; // reducer helper functions\n\nconst updateDashboardProp = ({\n  state,\n  dashboardId,\n  prop,\n  value\n}) => ({\n  byId: { ...state.byId,\n    [dashboardId]: { ...state.byId[dashboardId],\n      [prop]: value\n    }\n  },\n  items: state.items\n});\n/**\n * Reducer that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n * @returns {Object}\n */\n\n\nexport default ((state = DEFAULT_STATE_DASHBOARDS, action) => {\n  switch (action.type) {\n    case SET_DASHBOARDS:\n      {\n        return {\n          byId: action.value,\n          items: []\n        };\n      }\n\n    case ADD_DASHBOARDS:\n      {\n        return { ...state,\n          byId: { ...state.byId,\n            ...action.value\n          }\n        };\n      }\n\n    case SET_DASHBOARD_STARRED:\n      {\n        return updateDashboardProp({\n          state,\n          dashboardId: action.dashboardId,\n          prop: 'starred',\n          value: action.value\n        });\n      }\n\n    case SET_DASHBOARD_DISPLAY_NAME:\n      {\n        return updateDashboardProp({\n          state,\n          dashboardId: action.dashboardId,\n          prop: 'displayName',\n          value: action.value\n        });\n      }\n\n    case SET_DASHBOARD_ITEMS:\n      {\n        return { ...state,\n          items: action.value\n        };\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetDashboardsRoot = state => state.dashboards; // selector level 1\n\n/**\n * Selector which returns a dashboard by id from the state object\n * If no matching dashboard is found it returns undefined\n * If dashboards.byId is null, then the dashboards api request\n * has not yet completed. If dashboards.byId is an empty object\n * then the dashboards api request is complete, but no dashboards\n * were returned\n *\n * @function\n * @param {Object} state The current state\n * @param {Number} id The id of the dashboard\n * @returns {Object | undefined}\n */\n\nexport const sGetDashboardById = (state, id) => orObject(sGetDashboardsRoot(state).byId)[id];\nexport const sDashboardsIsFetching = state => {\n  return sGetDashboardsRoot(state).byId === null;\n};\n/**\n * Selector which returns all dashboards (the byId object)\n *\n * @function\n * @param {Object} state The current state\n * @returns {Object | undefined}\n */\n\nexport const sGetAllDashboards = state => orObject(sGetDashboardsRoot(state).byId);\n/**\n * Selector which returns the current dashboard items\n *\n * @function\n * @param {Object} state The current state\n * @returns {Array}\n */\n\nexport const sGetDashboardItems = state => sGetDashboardsRoot(state).items; // selector level 2\n\nexport const sGetStarredDashboards = state => Object.values(sGetAllDashboards(state)).filter(dashboard => dashboard.starred === true);\nexport const sGetUnstarredDashboards = state => Object.values(sGetAllDashboards(state)).filter(dashboard => dashboard.starred === false); // selector level 3\n\nexport const sGetStarredDashboardIds = state => {\n  return sGetStarredDashboards(state).map(dashboard => dashboard.id);\n};\nexport const sGetUnstarredDashboardIds = state => sGetUnstarredDashboards(state).map(dashboard => dashboard.id);\nexport const sGetDashboardsSortedByStarred = state => [...arraySort(sGetStarredDashboards(state), 'ASC', 'displayName'), ...arraySort(sGetUnstarredDashboards(state), 'ASC', 'displayName')]; // utils\n\n/**\n * Returns the array of dashboards, customized for ui\n * @function\n * @param {Array} data The original dashboard list\n * @returns {Array}\n */\n\nexport const getCustomDashboards = data => arrayFrom(data).map(d => ({\n  id: d.id,\n  name: d.name,\n  displayName: d.displayName,\n  description: d.description,\n  displayDescription: d.displayDescription,\n  starred: d.favorite,\n  owner: d.user.name,\n  created: d.created.split('T').join(' ').substr(0, 16),\n  lastUpdated: d.lastUpdated.split('T').join(' ').substr(0, 16),\n  access: d.access,\n  numberOfItems: orArray(d.dashboardItems).length,\n  dashboardItems: convertBackendItemsToUi(d.dashboardItems)\n}));","/** @module reducers/selected */\nimport { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\nexport const SET_SELECTED_ID = 'SET_SELECTED_ID';\nexport const SET_SELECTED_ISLOADING = 'SET_SELECTED_ISLOADING';\nexport const SET_SELECTED_SHOWDESCRIPTION = 'SET_SELECTED_SHOWDESCRIPTION';\nexport const SET_SELECTED_ITEM_ACTIVE_TYPE = 'SET_SELECTED_ITEM_ACTIVE_TYPE';\nexport const CLEAR_SELECTED_ITEM_ACTIVE_TYPES = 'CLEAR_SELECTED_ITEM_ACTIVE_TYPES';\nexport const DEFAULT_STATE_SELECTED_ID = null;\nexport const DEFAULT_STATE_SELECTED_ISLOADING = false;\nexport const DEFAULT_STATE_SELECTED_SHOWDESCRIPTION = false;\nexport const DEFAULT_STATE_SELECTED_ITEM_ACTIVE_TYPES = {};\nexport const NON_EXISTING_DASHBOARD_ID = '0';\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\n\nconst id = (state = DEFAULT_STATE_SELECTED_ID, action) => {\n  switch (action.type) {\n    case SET_SELECTED_ID:\n      return validateReducer(action.value, DEFAULT_STATE_SELECTED_ID);\n\n    default:\n      return state;\n  }\n};\n\nconst isLoading = (state = DEFAULT_STATE_SELECTED_ISLOADING, action) => {\n  switch (action.type) {\n    case SET_SELECTED_ISLOADING:\n      return validateReducer(action.value, DEFAULT_STATE_SELECTED_ISLOADING);\n\n    default:\n      return state;\n  }\n};\n\nconst showDescription = (state = DEFAULT_STATE_SELECTED_SHOWDESCRIPTION, action) => {\n  switch (action.type) {\n    case SET_SELECTED_SHOWDESCRIPTION:\n      return validateReducer(action.value, DEFAULT_STATE_SELECTED_SHOWDESCRIPTION);\n\n    default:\n      return state;\n  }\n};\n\nconst itemActiveTypes = (state = DEFAULT_STATE_SELECTED_ITEM_ACTIVE_TYPES, action) => {\n  switch (action.type) {\n    case SET_SELECTED_ITEM_ACTIVE_TYPE:\n      {\n        return { ...state,\n          [action.id]: action.activeType\n        };\n      }\n\n    case CLEAR_SELECTED_ITEM_ACTIVE_TYPES:\n      {\n        return DEFAULT_STATE_SELECTED_ITEM_ACTIVE_TYPES;\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  id,\n  isLoading,\n  showDescription,\n  itemActiveTypes\n}); // Selectors\n\nexport const sGetSelectedRoot = state => state.selected;\nexport const sGetSelectedId = state => sGetSelectedRoot(state).id;\nexport const sGetSelectedIsLoading = state => sGetSelectedRoot(state).isLoading;\nexport const sGetSelectedShowDescription = state => sGetSelectedRoot(state).showDescription;\nexport const sGetSelectedItemActiveType = (state, id) => sGetSelectedRoot(state).itemActiveTypes[id];","import { getInstance } from 'd2';\nexport const NAMESPACE = 'dashboard';\nexport const hasNamespace = async (d2) => await d2.currentUser.dataStore.has(NAMESPACE);\nexport const getNamespace = async (d2, hasNamespace) => hasNamespace ? await d2.currentUser.dataStore.get(NAMESPACE) : await d2.currentUser.dataStore.create(NAMESPACE);\nexport const apiPostUserDataStoreValue = async (key, value) => {\n  const d2 = await getInstance();\n  const ns = await getNamespace(d2, hasNamespace);\n  ns.set(key, value);\n};\nexport const apiGetUserDataStoreValue = async (key, defaultValue) => {\n  const d2 = await getInstance();\n  const namespace = await getNamespace(d2, await hasNamespace(d2));\n  const hasKey = namespace?.keys?.find(k => k === key);\n\n  if (hasKey) {\n    return await namespace.get(key);\n  } else {\n    await apiPostUserDataStoreValue(key, defaultValue, namespace);\n    console.log('(These errors to /userDataStore can be ignored)');\n    return defaultValue;\n  }\n};","import { apiGetUserDataStoreValue, apiPostUserDataStoreValue } from './userDataStore';\nimport { DEFAULT_STATE_CONTROLBAR_ROWS } from '../reducers/controlBar';\nconst KEY_CONTROLBAR_ROWS = 'controlBarRows';\nexport const apiGetControlBarRows = async () => await apiGetUserDataStoreValue(KEY_CONTROLBAR_ROWS, DEFAULT_STATE_CONTROLBAR_ROWS);\nexport const apiPostControlBarRows = async (value) => await apiPostUserDataStoreValue(KEY_CONTROLBAR_ROWS, value);","import { SET_CONTROLBAR_USER_ROWS } from '../reducers/controlBar';\nimport { apiGetControlBarRows } from '../api/controlBar'; // actions\n\nexport const acSetControlBarUserRows = rows => ({\n  type: SET_CONTROLBAR_USER_ROWS,\n  value: rows\n}); // thunks\n\nexport const tSetControlBarRows = () => async dispatch => {\n  const onSuccess = rows => {\n    dispatch(acSetControlBarUserRows(rows));\n  };\n\n  const onError = error => {\n    console.log('Error (apiGetControlBarRows): ', error);\n    return error;\n  };\n\n  try {\n    const controlBarRows = await apiGetControlBarRows();\n    return onSuccess(controlBarRows);\n  } catch (err) {\n    return onError(err);\n  }\n};","import React, { useState, useEffect, createRef } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport cx from 'classnames';\nimport arraySort from 'd2-utilizr/lib/arraySort';\nimport PropTypes from 'prop-types';\nimport ControlBar, { DRAG_HANDLE_HEIGHT } from './ControlBar';\nimport Chip from './DashboardItemChip';\nimport AddCircleIcon from '../../icons/AddCircle';\nimport Filter from './Filter';\nimport ShowMoreButton from './ShowMoreButton';\nimport { FIRST_ROW_PADDING_HEIGHT, MIN_ROW_COUNT, getRowsHeight, getControlBarHeight, getNumRowsFromHeight, getControlBarHeightSmallDevice, CONTROL_BAR, CONTROL_BAR_CONTAINER, CHIPS_CONTAINER } from './controlBarDimensions';\nimport { useWindowDimensions } from '../WindowDimensionsProvider';\nimport { sGetDashboardsFilter } from '../../reducers/dashboardsFilter';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { sGetAllDashboards } from '../../reducers/dashboards';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { acSetControlBarUserRows } from '../../actions/controlBar';\nimport { apiPostControlBarRows } from '../../api/controlBar';\nimport isSmallScreen from '../../modules/isSmallScreen';\nimport classes from './styles/DashboardsBar.module.css';\nexport const MAX_ROW_COUNT = 10;\n\nconst DashboardsBar = ({\n  userRows,\n  onChangeHeight,\n  history,\n  dashboards,\n  selectedId,\n  filterText\n}) => {\n  const [rows, setRows] = useState(userRows);\n  const {\n    width,\n    height\n  } = useWindowDimensions();\n  const ref = createRef();\n  useEffect(() => {\n    setRows(userRows);\n  }, [userRows]);\n\n  const isMaxHeight = () => rows === MAX_ROW_COUNT;\n\n  const adjustHeight = newHeight => {\n    const newRows = Math.max(MIN_ROW_COUNT, getNumRowsFromHeight(newHeight - 52) // don't rush the transition to a bigger row count\n    );\n\n    if (newRows !== rows) {\n      onChangeHeight(Math.min(newRows, MAX_ROW_COUNT));\n    }\n  };\n\n  const onEndDrag = () => apiPostControlBarRows(rows);\n\n  const scrollToTop = () => {\n    if (isMaxHeight()) {\n      ref.current.scroll(0, 0);\n    }\n  };\n\n  const toggleMaxHeight = () => {\n    const newRows = isMaxHeight() ? userRows : MAX_ROW_COUNT;\n    scrollToTop();\n    setRows(newRows);\n  };\n\n  const cancelMaxHeight = () => {\n    scrollToTop();\n    setRows(userRows);\n  };\n\n  const onSelectDashboard = () => {\n    const id = getFilteredDashboards()[0]?.id;\n\n    if (id) {\n      history.push(id);\n    }\n  };\n\n  const getFilteredDashboards = () => {\n    const filteredDashboards = arraySort(Object.values(dashboards).filter(d => d.displayName.toLowerCase().includes(filterText.toLowerCase())), 'ASC', 'displayName');\n    return [...filteredDashboards.filter(d => d.starred), ...filteredDashboards.filter(d => !d.starred)];\n  };\n\n  const viewableRows = isSmallScreen(width) && !isMaxHeight() ? MIN_ROW_COUNT : rows;\n\n  const getHeight = () => {\n    if (isSmallScreen(width) && isMaxHeight()) {\n      return getControlBarHeightSmallDevice(CONTROL_BAR, height);\n    }\n\n    return getControlBarHeight(viewableRows);\n  };\n\n  const getContainerHeight = container => {\n    if (isSmallScreen(width) && isMaxHeight()) {\n      return getControlBarHeightSmallDevice(container ? CONTROL_BAR_CONTAINER : CHIPS_CONTAINER, height);\n    }\n\n    return getRowsHeight(viewableRows) + FIRST_ROW_PADDING_HEIGHT;\n  };\n\n  const getDashboardChips = () => {\n    const chips = getFilteredDashboards().map(dashboard => <Chip key={dashboard.id} label={dashboard.displayName} starred={dashboard.starred} dashboardId={dashboard.id} selected={dashboard.id === selectedId} onClick={cancelMaxHeight} />);\n\n    if (isSmallScreen(width)) {\n      const chipContainerClasses = cx(classes.chipContainer, isMaxHeight() ? classes.expanded : classes.collapsed);\n      return <div className={chipContainerClasses} style={{\n        height: getContainerHeight()\n      }}>\n                    {chips}\n                </div>;\n    } else {\n      return chips;\n    }\n  };\n\n  const containerClass = cx(classes.container, isMaxHeight() ? classes.expanded : classes.collapsed);\n  return <>\n            <ControlBar height={getHeight()} onChangeHeight={!isSmallScreen(width) ? adjustHeight : null} onEndDrag={onEndDrag}>\n                <div className={containerClass} ref={ref} style={{\n        height: getContainerHeight(CONTROL_BAR_CONTAINER)\n      }}>\n                    <div className={classes.controls}>\n                        <Link className={classes.newLink} to={'/new'} data-test=\"link-new-dashboard\">\n                            <AddCircleIcon />\n                        </Link>\n                        <Filter onKeypressEnter={onSelectDashboard} onToggleMaxHeight={toggleMaxHeight} isMaxHeight={isMaxHeight()} />\n                    </div>\n                    {getDashboardChips()}\n                </div>\n                <ShowMoreButton onClick={toggleMaxHeight} isMaxHeight={isMaxHeight()} disabled={userRows === MAX_ROW_COUNT} />\n            </ControlBar>\n            <div style={{\n      marginTop: getControlBarHeight(isSmallScreen(width) && !isMaxHeight() ? MIN_ROW_COUNT : userRows) + DRAG_HANDLE_HEIGHT\n    }} />\n        </>;\n};\n\nDashboardsBar.propTypes = {\n  dashboards: PropTypes.object,\n  filterText: PropTypes.string,\n  history: PropTypes.object,\n  selectedId: PropTypes.string,\n  userRows: PropTypes.number,\n  onChangeHeight: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  dashboards: sGetAllDashboards(state),\n  filterText: sGetDashboardsFilter(state),\n  selectedId: sGetSelectedId(state),\n  userRows: sGetControlBarUserRows(state)\n});\n\nconst mapDispatchToProps = {\n  onChangeHeight: acSetControlBarUserRows\n};\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(DashboardsBar));","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst NoContentMessage = ({\n  text\n}) => <div style={{\n  padding: '50px 10px',\n  textAlign: 'center',\n  fontSize: '15px',\n  fontWeight: 500,\n  color: colors.grey600\n}}>\n        {text}\n    </div>;\n\nNoContentMessage.propTypes = {\n  text: PropTypes.string\n};\nexport default NoContentMessage;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nexport const ThreeDots = () => <svg height=\"18\" viewBox=\"0 0 18 18\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"m4 7.5c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm10 0c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm-5 0c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5z\" fill=\"#6e7a8a\" />\n    </svg>;\nexport const SpeechBubble = () => <svg height=\"20\" viewBox=\"0 0 20 20\" width=\"20\" xmlns=\"http://www.w3.org/2000/svg\" style={{\n  margin: '3px 2px 0 2px'\n}} // Temporary fix for the misaligned icon, should be removed once the icon is replaced\n>\n        <path d=\"m20 2h-16c-1.1 0-1.99.9-1.99 2l-.01 18 4-4h14c1.1 0 2-.9 2-2v-12c0-1.1-.9-2-2-2zm-2 12h-12v-2h12zm0-3h-12v-2h12zm0-3h-12v-2h12z\" fill=\"#6e7a8a\" fillRule=\"evenodd\" transform=\"translate(-2 -2)\" />\n    </svg>;\nexport const Warning = () => <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" fill={colors.grey600}>\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z\" />\n    </svg>;\nexport const Fullscreen = () => <svg height=\"16\" viewBox=\"0 0 16 16\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"m6.85355339 9.14644661c.17356635.17356635.1928515.44299075.05785545.63785889l-.05785545.06924789-4.14755339 4.14644661h2.794c.24545989 0 .44960837.1768752.49194433.4101244l.00805567.0898756c0 .2454599-.17687516.4496084-.41012437.4919443l-.08987563.0080557h-4c-.24545989 0-.44960837-.1768752-.49194433-.4101244l-.00805567-.0898756v-4c0-.2761424.22385763-.5.5-.5.24545989 0 .44960837.1768752.49194433.4101244l.00805567.0898756v2.792l4.14644661-4.14555339c.19526215-.19526215.51184463-.19526215.70710678 0zm6.14644661-2.14644661v6h-6v-1h5v-5zm-4-4v1h-5v5h-1v-6zm5.5-2c.2454599 0 .4496084.17687516.4919443.41012437l.0080557.08987563v4c0 .27614237-.2238576.5-.5.5-.2454599 0-.4496084-.17687516-.4919443-.41012437l-.0080557-.08987563v-2.794l-4.14644661 4.14755339c-.19526215.19526215-.51184463.19526215-.70710678 0-.17356635-.17356635-.1928515-.44299075-.05785545-.63785889l.05785545-.06924789 4.14655339-4.14744661-2.793.001c-.2454599 0-.4496084-.17687516-.4919443-.41012437l-.0080557-.08987563c0-.24545989.1768752-.44960837.4101244-.49194433l.0898756-.00805567z\" fill=\"inherit\" />\n    </svg>;\nexport const ExitFullscreen = () => <svg height=\"16\" viewBox=\"0 0 16 16\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"m6.5 9c.24545989 0 .44960837.17687516.49194433.41012437l.00805567.08987563v4c0 .2761424-.22385763.5-.5.5-.24545989 0-.44960837-.1768752-.49194433-.4101244l-.00805567-.0898756v-2.794l-3.64644661 3.6475534c-.19526215.1952621-.51184463.1952621-.70710678 0-.17356635-.1735664-.1928515-.4429908-.05785545-.6378589l.05785545-.0692479 3.64555339-3.6464466h-2.792c-.24545989 0-.44960837-.17687516-.49194433-.41012437l-.00805567-.08987563c0-.24545989.17687516-.44960837.41012437-.49194433l.08987563-.00805567zm7.5-.5v5.5h-5.5v-1h4.5v-4.5zm-6.5-6.5v1h-4.5v4.5h-1v-5.5zm6.8535534-.35355339c.1735663.17356635.1928515.44299075.0578554.63785889l-.0578554.06924789-3.6475534 3.64644661h2.794c.2454599 0 .4496084.17687516.4919443.41012437l.0080557.08987563c0 .24545989-.1768752.44960837-.4101244.49194433l-.0898756.00805567h-4c-.24545989 0-.44960837-.17687516-.49194433-.41012437l-.00805567-.08987563v-4c0-.27614237.22385763-.5.5-.5.24545989 0 .44960837.17687516.49194433.41012437l.00805567.08987563v2.792l3.6464466-3.64555339c.1952622-.19526215.5118446-.19526215.7071068 0z\" fill=\"inherit\" />\n    </svg>;","export const RECEIVED_USER = 'RECEIVED_USER';\nexport const DEFAULT_STATE_USER = {\n  id: '',\n  username: '',\n  uiLocale: '',\n  isSuperuser: false\n};\nexport default ((state = DEFAULT_STATE_USER, action) => {\n  switch (action.type) {\n    case RECEIVED_USER:\n      {\n        return fromD2ToUserObj(action.value);\n      }\n\n    default:\n      return state;\n  }\n});\n\nfunction fromD2ToUserObj(d2Object) {\n  return {\n    id: d2Object.id,\n    username: d2Object.username,\n    uiLocale: d2Object.settings.keyUiLocale,\n    isSuperuser: d2Object.authorities.has('ALL')\n  };\n} // selectors\n\n\nexport const sGetUserId = state => state.user.id;\nexport const sGetUserUsername = state => state.user.username;\nexport const sGetIsSuperuser = state => state.user.isSuperuser;\nexport const sGetUiLocale = state => state.user.uiLocale;","import { getDimensionById, DIMENSION_ID_PERIOD, DIMENSION_ID_ORGUNIT } from '@dhis2/analytics';\nexport const SET_DIMENSIONS = 'SET_DIMENSIONS';\nexport const DEFAULT_DIMENSIONS = [getDimensionById(DIMENSION_ID_PERIOD), getDimensionById(DIMENSION_ID_ORGUNIT)];\nexport default ((state = DEFAULT_DIMENSIONS, action) => {\n  switch (action.type) {\n    case SET_DIMENSIONS:\n      {\n        return [...DEFAULT_DIMENSIONS, ...action.value];\n      }\n\n    default:\n      return state;\n  }\n});\nexport const sGetDimensions = state => state.dimensions;","import { sGetDimensions } from './dimensions';\nimport { createSelector } from 'reselect';\nexport const CLEAR_ITEM_FILTERS = 'CLEAR_ITEM_FILTERS';\nexport const SET_ITEM_FILTERS = 'SET_ITEM_FILTERS';\nexport const ADD_ITEM_FILTER = 'ADD_ITEM_FILTER';\nexport const REMOVE_ITEM_FILTER = 'REMOVE_ITEM_FILTER';\nexport const DEFAULT_STATE_ITEM_FILTERS = {};\nexport default ((state = DEFAULT_STATE_ITEM_FILTERS, action) => {\n  switch (action.type) {\n    case ADD_ITEM_FILTER:\n      {\n        return { ...state,\n          [action.filter.id]: action.filter.value\n        };\n      }\n\n    case REMOVE_ITEM_FILTER:\n      {\n        const newState = { ...state\n        };\n        delete newState[action.id];\n        return newState;\n      }\n\n    case SET_ITEM_FILTERS:\n      {\n        return action.filters;\n      }\n\n    case CLEAR_ITEM_FILTERS:\n      {\n        return DEFAULT_STATE_ITEM_FILTERS;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetItemFiltersRoot = state => state.itemFilters; // simplify the filters structure to:\n// [{ id: 'pe', name: 'Period', values: [{ id: 2019: name: '2019' }, {id: 'LAST_MONTH', name: 'Last month' }]}, ...]\n\nexport const sGetNamedItemFilters = createSelector([sGetItemFiltersRoot, sGetDimensions], (filters, dimensions) => Object.keys(filters).reduce((arr, id) => {\n  arr.push({\n    id: id,\n    name: dimensions.find(dimension => dimension.id === id).name,\n    values: filters[id].map(value => ({\n      id: value.id,\n      name: value.displayName || value.name\n    }))\n  });\n  return arr;\n}, []));","import { ADD_ITEM_FILTER, REMOVE_ITEM_FILTER, SET_ITEM_FILTERS, CLEAR_ITEM_FILTERS } from '../reducers/itemFilters';\nexport const FILTER_ORG_UNIT = 'ou'; // actions\n\nexport const acAddItemFilter = filter => ({\n  type: ADD_ITEM_FILTER,\n  filter\n});\nexport const acRemoveItemFilter = id => ({\n  type: REMOVE_ITEM_FILTER,\n  id\n});\nexport const acClearItemFilters = () => ({\n  type: CLEAR_ITEM_FILTERS\n});\nexport const acSetItemFilters = filters => ({\n  type: SET_ITEM_FILTERS,\n  filters\n});","import update from 'immutability-helper';\nimport { arrayToIdMap } from '../modules/util';\nexport const RECEIVED_MESSAGES = 'RECEIVED_MESSAGES';\nexport default ((state = {}, action) => {\n  switch (action.type) {\n    case RECEIVED_MESSAGES:\n      {\n        const conversations = arrayToIdMap(action.value);\n        const newState = update(state, {\n          $merge: conversations\n        });\n        return newState;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetMessagesRoot = state => state.messages;","export const messageConversationsQuery = {\n  resource: 'messageConversations',\n  params: {\n    fields: 'id,messageCount,lastUpdated,messageType,displayName,read,messages[id,read,sender[id,displayName],text,lastUpdated]',\n    order: 'read:asc',\n    pageSize: 200\n  }\n};\nexport const getMessages = async dataEngine => {\n  try {\n    const {\n      messageConversations\n    } = await dataEngine.query({\n      messageConversations: messageConversationsQuery\n    });\n    return messageConversations.messageConversations;\n  } catch (error) {\n    console.log('Error:', error);\n  }\n};","import { RECEIVED_MESSAGES } from '../../../reducers/messages';\nimport { getMessages } from '../../../api/messages';\n\nconst onError = (action, error) => {\n  console.log(`Error in action ${action}: ${error}`);\n  return error;\n};\n\nexport const receivedMessages = value => ({\n  type: RECEIVED_MESSAGES,\n  value\n});\nexport const tGetMessages = dataEngine => async dispatch => {\n  try {\n    const messageConversations = await getMessages(dataEngine);\n    return dispatch(receivedMessages(messageConversations));\n  } catch (err) {\n    return onError('Get Messages', err);\n  }\n};","export const SET_ALERT_MESSAGE = 'SET_ALERT_MESSAGE';\nexport const CLEAR_ALERT_MESSAGE = 'CLEAR_ALERT_MESSAGE';\nexport const DEFAULT_STATE_ALERT = null;\nexport default ((state = DEFAULT_STATE_ALERT, action) => {\n  switch (action.type) {\n    case SET_ALERT_MESSAGE:\n      {\n        return action.value;\n      }\n\n    case CLEAR_ALERT_MESSAGE:\n      {\n        return DEFAULT_STATE_ALERT;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetAlertMessage = state => state.alert;","import { SET_ALERT_MESSAGE, CLEAR_ALERT_MESSAGE } from '../reducers/alert';\nexport const acSetAlertMessage = value => ({\n  type: SET_ALERT_MESSAGE,\n  value\n});\nexport const acClearAlertMessage = () => ({\n  type: CLEAR_ALERT_MESSAGE\n});","import { orObject } from '../modules/util';\nimport objectClean from 'd2-utilizr/lib/objectClean';\n/** @module reducers/visualizations */\n\nexport const ADD_VISUALIZATION = 'ADD_VISUALIZATION';\nexport const SET_ACTIVE_VISUALIZATION_TYPE = 'SET_ACTIVE_VISUALIZATION_TYPE';\nexport const CLEAR_VISUALIZATIONS = 'CLEAR_VISUALIZATIONS';\nexport const DEFAULT_STATE_VISUALIZATIONS = {};\n\nconst isEmpty = p => p === undefined || p === null;\n\nexport default ((state = DEFAULT_STATE_VISUALIZATIONS, action) => {\n  switch (action.type) {\n    case ADD_VISUALIZATION:\n      {\n        return { ...state,\n          [action.value.id]: objectClean({ ...orObject(state[action.value.id]),\n            ...action.value\n          }, isEmpty)\n        };\n      }\n\n    case CLEAR_VISUALIZATIONS:\n      {\n        return DEFAULT_STATE_VISUALIZATIONS;\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetVisualizationsRoot = state => state.visualizations; // selectors level 1\n\nexport const sGetVisualization = (state, id) => {\n  return sGetVisualizationsRoot(state)[id];\n};","import { ADD_VISUALIZATION, CLEAR_VISUALIZATIONS } from '../reducers/visualizations';\nexport const acAddVisualization = value => ({\n  type: ADD_VISUALIZATION,\n  value\n});\nexport const acClearVisualizations = () => ({\n  type: CLEAR_VISUALIZATIONS\n});","import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { getEndPointName, MAP } from '../modules/itemTypes';\nimport { getVisualizationId } from '../modules/item'; // Id, name\n\nexport const getIdNameFields = ({\n  rename\n} = {}) => ['id', `${rename ? 'displayName~rename(name)' : 'name,displayName'}`]; // Item\n\nexport const getItemFields = () => ['dimensionItem~rename(id)', 'displayName~rename(name)', 'dimensionItemType']; // Dimension\n\nexport const getDimensionFields = ({\n  withItems\n}) => arrayClean(['dimension', 'legendSet[id]', 'filter', 'programStage', withItems ? `items[${getItemFields().join(',')}]` : ``]); // Axis\n\nexport const getAxesFields = ({\n  withItems\n}) => [`columns[${getDimensionFields({\n  withItems\n}).join(',')}]`, `rows[${getDimensionFields({\n  withItems\n}).join(',')}]`, `filters[${getDimensionFields({\n  withItems\n}).join(',')}]`]; // Favorite\n\nexport const getFavoriteFields = ({\n  withDimensions,\n  withOptions\n}) => {\n  return arrayClean([`${getIdNameFields({\n    rename: true\n  }).join(',')}`, 'displayDescription~rename(description)', withDimensions ? `${getAxesFields({\n    withItems: true\n  }).join(',')}` : ``, withOptions ? ['*', '!attributeDimensions', '!attributeValues', '!category', '!categoryDimensions', '!categoryOptionGroupSetDimensions', '!columnDimensions', '!dataDimensionItems', '!dataElementDimensions', '!dataElementGroupSetDimensions', '!filterDimensions', '!itemOrganisationUnitGroups', '!lastUpdatedBy', '!organisationUnitGroupSetDimensions', '!organisationUnitLevels', '!organisationUnits', '!programIndicatorDimensions', '!relativePeriods', '!reportParams', '!rowDimensions', '!translations', '!userOrganisationUnit', '!userOrganisationUnitChildren', '!userOrganisationUnitGrandChildren'].join(',') : '']);\n};\nexport const getFavoritesFields = ({\n  withDimensions\n}) => [`reportTable[${getFavoriteFields({\n  withDimensions\n}).join(',')}]`, `chart[${['type', ...getFavoriteFields({\n  withDimensions\n})].join(',')}]`, `map[${getFavoriteFields({\n  withDimensions\n}).join(',')}]`, `eventReport[${getFavoriteFields({\n  withDimensions\n}).join(',')}]`, `eventChart[${getFavoriteFields({\n  withDimensions\n}).join(',')}]`]; // List item\n\nexport const getListItemFields = () => [`reports[${['type', ...getIdNameFields({\n  rename: true\n})].join(',')}]`, `resources[${getIdNameFields({\n  rename: true\n}).join(',')}]`, `users[${getIdNameFields({\n  rename: true\n}).join(',')}]`]; // Map\n\nexport const getMapFields = () => [`${getIdNameFields({\n  rename: true\n}).join(',')}`, 'user,longitude,latitude,zoom,basemap', `mapViews[${getFavoriteFields({\n  withDimensions: true,\n  withOptions: true\n})}]`]; // Api\n\nexport const apiFetchVisualization = async item => {\n  const id = getVisualizationId(item);\n  const fields = item.type === MAP ? getMapFields() : getFavoriteFields({\n    withDimensions: true,\n    withOptions: true\n  });\n  const d2 = await getInstance();\n  return await d2.Api.getApi().get(`${getEndPointName(item.type)}/${id}`, {\n    fields\n  });\n};","import arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { getListItemFields, getFavoritesFields, getIdNameFields } from './metadata'; // Helper functions\n\nexport const onError = error => console.log('Error: ', error); // Dashboard item\n\nexport const getDashboardItemsFields = ({\n  withFavorite\n} = {}) => arrayClean(['id', 'type', 'shape', 'x', 'y', 'width~rename(w)', 'height~rename(h)', 'messages', 'text', 'appKey', `${getListItemFields().join(',')}`, withFavorite ? `${getFavoritesFields({\n  withDimensions: withFavorite.withDimensions\n}).join(',')}` : ``]); // Dashboard\n\nexport const getDashboardFields = ({\n  withItems,\n  withFavorite\n} = {}) => arrayClean([`${getIdNameFields().join(',')}`, 'description', 'displayDescription', 'favorite', `user[${getIdNameFields({\n  rename: true\n}).join(',')}]`, 'created', 'lastUpdated', 'access', 'href', // needed for d2-ui-translations-dialog, since we don't pass a d2 Model anymore\nwithItems ? `dashboardItems[${getDashboardItemsFields({\n  withFavorite\n}).join(',')}]` : ``]);","import arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { onError, getDashboardFields } from './index';\nexport const dashboardsQuery = {\n  resource: 'dashboards',\n  params: {\n    fields: [getDashboardFields(), 'dashboardItems[id]'].join(','),\n    paging: false\n  }\n};\nexport const dashboardQuery = {\n  resource: 'dashboards',\n  id: ({\n    id\n  }) => id,\n  params: {\n    fields: arrayClean(getDashboardFields({\n      withItems: true,\n      withFavorite: {\n        withDimensions: false\n      }\n    })).join(',')\n  }\n};\nexport const starDashboardMutation = {\n  type: 'create',\n  resource: 'dashboards',\n  // TODO create mutation does not accept the id function\n  // we must use a workaround until dataEngine supports dynamic resource/path\n  id: ({\n    id\n  }) => `${id}/favorite`\n};\nexport const unstarDashboardMutation = {\n  type: 'delete',\n  resource: 'dashboards',\n  id: ({\n    id\n  }) => `${id}/favorite`\n};\nexport const deleteDashboardMutation = {\n  type: 'delete',\n  resource: 'dashboards',\n  id: ({\n    id\n  }) => id\n}; // Get \"all\" dashboards on startup\n\nexport const apiFetchDashboards = async dataEngine => {\n  try {\n    const dashboardsData = await dataEngine.query({\n      dashboards: dashboardsQuery\n    });\n    return dashboardsData.dashboards.dashboards;\n  } catch (error) {\n    onError(error);\n  }\n}; // Get more info about selected dashboard\n\nexport const apiFetchDashboard = async (dataEngine, id) => {\n  try {\n    const dashboardData = await dataEngine.query({\n      dashboard: dashboardQuery\n    }, {\n      variables: {\n        id\n      }\n    });\n    return dashboardData.dashboard;\n  } catch (error) {\n    onError(error);\n  }\n}; // Star dashboard\n\nexport const apiStarDashboard = async (dataEngine, id, isStarred) => {\n  try {\n    if (isStarred) {\n      await dataEngine.mutate(starDashboardMutation, {\n        variables: {\n          id\n        }\n      });\n    } else {\n      await dataEngine.mutate(unstarDashboardMutation, {\n        variables: {\n          id\n        }\n      });\n    }\n  } catch (error) {\n    onError(error);\n  }\n};\nexport const apiDeleteDashboard = async (dataEngine, id) => {\n  try {\n    await dataEngine.mutate(deleteDashboardMutation, {\n      variables: {\n        id\n      }\n    });\n  } catch (error) {\n    onError(error);\n  }\n};","import { apiGetUserDataStoreValue, apiPostUserDataStoreValue } from './userDataStore';\nimport { DEFAULT_STATE_SELECTED_SHOWDESCRIPTION } from '../reducers/selected';\nconst KEY_SHOW_DESCRIPTION = 'showDescription';\nexport const apiGetShowDescription = async () => await apiGetUserDataStoreValue(KEY_SHOW_DESCRIPTION, DEFAULT_STATE_SELECTED_SHOWDESCRIPTION);\nexport const apiPostShowDescription = async (value) => await apiPostUserDataStoreValue(KEY_SHOW_DESCRIPTION, value);","import i18n from '@dhis2/d2-i18n';\nimport { getCustomDashboards, sGetDashboardById } from '../reducers/dashboards';\nimport { SET_SELECTED_ID, SET_SELECTED_ISLOADING, SET_SELECTED_SHOWDESCRIPTION, SET_SELECTED_ITEM_ACTIVE_TYPE, CLEAR_SELECTED_ITEM_ACTIVE_TYPES, sGetSelectedIsLoading, sGetSelectedId } from '../reducers/selected';\nimport { sGetUserUsername } from '../reducers/user';\nimport { acSetDashboardItems, acAppendDashboards } from './dashboards';\nimport { acClearItemFilters } from './itemFilters';\nimport { tGetMessages } from '../components/Item/MessagesItem/actions';\nimport { acSetAlertMessage, acClearAlertMessage } from './alert';\nimport { acAddVisualization, acClearVisualizations } from './visualizations';\nimport { apiFetchDashboard } from '../api/dashboards';\nimport { storePreferredDashboardId } from '../api/localStorage';\nimport { apiGetShowDescription, apiPostShowDescription } from '../api/description';\nimport { withShape } from '../components/ItemGrid/gridUtil';\nimport { getVisualizationFromItem } from '../modules/item';\nimport { REPORT_TABLE, CHART, MAP, EVENT_REPORT, EVENT_CHART, MESSAGES } from '../modules/itemTypes'; // actions\n\nexport const acSetSelectedId = value => ({\n  type: SET_SELECTED_ID,\n  value\n});\nexport const acSetSelectedIsLoading = value => ({\n  type: SET_SELECTED_ISLOADING,\n  value\n});\nexport const acSetSelectedShowDescription = value => ({\n  type: SET_SELECTED_SHOWDESCRIPTION,\n  value\n});\nexport const acSetSelectedItemActiveType = (id, activeType) => {\n  const action = {\n    type: SET_SELECTED_ITEM_ACTIVE_TYPE,\n    id,\n    activeType\n  };\n  return action;\n};\nexport const acClearSelectedItemActiveTypes = () => ({\n  type: CLEAR_SELECTED_ITEM_ACTIVE_TYPES\n}); // thunks\n\nexport const tSetSelectedDashboardById = id => async (dispatch, getState, dataEngine) => {\n  dispatch(acSetSelectedIsLoading(true));\n  const alertTimeout = setTimeout(() => {\n    const name = sGetDashboardById(getState(), id)?.displayName;\n\n    if (sGetSelectedIsLoading(getState()) && name) {\n      dispatch(acSetAlertMessage(i18n.t('Loading dashboard – {{name}}', {\n        name\n      })));\n    }\n  }, 500);\n\n  const onSuccess = selected => {\n    dispatch(acAppendDashboards(selected));\n    const customDashboard = getCustomDashboards(selected)[0];\n    dispatch(acSetDashboardItems(withShape(customDashboard.dashboardItems)));\n    storePreferredDashboardId(sGetUserUsername(getState()), id);\n\n    if (id !== sGetSelectedId(getState())) {\n      dispatch(acClearItemFilters());\n      dispatch(acClearVisualizations());\n      dispatch(acClearSelectedItemActiveTypes());\n    }\n\n    customDashboard.dashboardItems.forEach(item => {\n      switch (item.type) {\n        case REPORT_TABLE:\n        case CHART:\n        case MAP:\n        case EVENT_REPORT:\n        case EVENT_CHART:\n          dispatch(acAddVisualization(getVisualizationFromItem(item)));\n          break;\n\n        case MESSAGES:\n          dispatch(tGetMessages(dataEngine));\n          break;\n\n        default:\n          break;\n      }\n    });\n    dispatch(acSetSelectedId(id));\n    dispatch(acSetSelectedIsLoading(false));\n    clearTimeout(alertTimeout);\n    dispatch(acClearAlertMessage());\n    return selected;\n  };\n\n  const onError = error => {\n    console.log('Error: ', error);\n    return error;\n  };\n\n  try {\n    const dashboard = await apiFetchDashboard(dataEngine, id);\n    return onSuccess(dashboard);\n  } catch (err) {\n    return onError(err);\n  }\n};\nexport const tSetShowDescription = () => async dispatch => {\n  const onSuccess = value => {\n    dispatch(acSetSelectedShowDescription(value));\n  };\n\n  const onError = error => {\n    console.log('Error (apiGetShowDescription): ', error);\n    return error;\n  };\n\n  try {\n    const showDescription = await apiGetShowDescription();\n    return onSuccess(showDescription);\n  } catch (err) {\n    return onError(err);\n  }\n};\nexport const tUpdateShowDescription = value => async dispatch => {\n  const onSuccess = () => {\n    dispatch(acSetSelectedShowDescription(value));\n  };\n\n  const onError = error => {\n    console.log('Error (apiGetShowDescription): ', error);\n    return error;\n  };\n\n  try {\n    await apiPostShowDescription(value);\n    return onSuccess();\n  } catch (err) {\n    return onError(err);\n  }\n};","export const getPreferredDashboardId = username => localStorage.getItem(`dhis2.dashboard.current.${username}`) || undefined;\nexport const storePreferredDashboardId = (username, dashboardId) => {\n  localStorage.setItem(`dhis2.dashboard.current.${username}`, dashboardId);\n};","import { SET_DASHBOARDS, ADD_DASHBOARDS, SET_DASHBOARD_STARRED, SET_DASHBOARD_DISPLAY_NAME, SET_DASHBOARD_ITEMS } from '../reducers/dashboards';\nimport { getCustomDashboards, sGetDashboardById, sGetDashboardsSortedByStarred } from '../reducers/dashboards';\nimport { NON_EXISTING_DASHBOARD_ID } from '../reducers/selected';\nimport { sGetUserUsername } from '../reducers/user';\nimport { tSetSelectedDashboardById, acSetSelectedId } from './selected';\nimport { apiFetchDashboards, apiStarDashboard, apiDeleteDashboard } from '../api/dashboards';\nimport { getPreferredDashboardId } from '../api/localStorage';\nimport { arrayToIdMap } from '../modules/util'; // actions\n\nexport const acSetDashboards = dashboards => ({\n  type: SET_DASHBOARDS,\n  value: arrayToIdMap(getCustomDashboards(dashboards))\n});\nexport const acAppendDashboards = dashboards => ({\n  type: ADD_DASHBOARDS,\n  value: arrayToIdMap(getCustomDashboards(dashboards))\n});\nexport const acSetDashboardStarred = (dashboardId, isStarred) => ({\n  type: SET_DASHBOARD_STARRED,\n  dashboardId: dashboardId,\n  value: isStarred\n});\nexport const acSetDashboardDisplayName = (dashboardId, value) => ({\n  type: SET_DASHBOARD_DISPLAY_NAME,\n  dashboardId,\n  value\n});\nexport const acSetDashboardItems = value => ({\n  type: SET_DASHBOARD_ITEMS,\n  value\n}); // thunks\n\nexport const tFetchDashboards = () => async (dispatch, getState, dataEngine) => {\n  const dashboards = await apiFetchDashboards(dataEngine);\n  dispatch(acSetDashboards(dashboards));\n};\nexport const tSelectDashboard = id => async (dispatch, getState) => {\n  const onError = error => {\n    console.log('Error (apiFetchDashboards): ', error);\n    return error;\n  };\n\n  try {\n    const state = getState();\n    let dashboardToSelect = null;\n\n    if (id) {\n      dashboardToSelect = sGetDashboardById(state, id) || null;\n    } else {\n      const preferredId = getPreferredDashboardId(sGetUserUsername(state));\n      const dash = sGetDashboardById(state, preferredId);\n      dashboardToSelect = preferredId && dash ? dash : sGetDashboardsSortedByStarred(state)[0];\n    }\n\n    if (dashboardToSelect) {\n      dispatch(tSetSelectedDashboardById(dashboardToSelect.id));\n    } else {\n      dispatch(acSetSelectedId(NON_EXISTING_DASHBOARD_ID));\n    }\n  } catch (err) {\n    return onError(err);\n  }\n};\nexport const tStarDashboard = (id, isStarred) => async (dispatch, getState, dataEngine) => {\n  const onSuccess = id => {\n    dispatch(acSetDashboardStarred(id, isStarred));\n    return id;\n  };\n\n  const onError = error => {\n    console.log('Error (apiStarDashboard): ', error);\n    return error;\n  };\n\n  try {\n    await apiStarDashboard(dataEngine, id, isStarred);\n    return onSuccess(id);\n  } catch (err) {\n    return onError(err);\n  }\n};\nexport const tDeleteDashboard = id => async (dispatch, getState, dataEngine) => {\n  try {\n    await apiDeleteDashboard(dataEngine, id);\n    await dispatch(tFetchDashboards());\n    return Promise.resolve();\n  } catch (err) {\n    console.log('Error (deleteDashboard): ', err);\n    return err;\n  }\n};","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { useD2 } from '@dhis2/app-runtime-adapter-d2';\nimport { Button, Modal, ModalTitle, ModalContent, ModalActions, ButtonStrip } from '@dhis2/ui';\nimport { PeriodDimension, DynamicDimension, OrgUnitDimension, DIMENSION_ID_PERIOD, DIMENSION_ID_ORGUNIT } from '@dhis2/analytics';\nimport { acAddItemFilter, acRemoveItemFilter } from '../../actions/itemFilters';\nimport { sGetItemFiltersRoot } from '../../reducers/itemFilters';\n\nconst FilterDialog = ({\n  displayNameProperty,\n  dimension,\n  initiallySelectedItems,\n  addItemFilter,\n  removeItemFilter,\n  onClose\n}) => {\n  const [filters, setFilters] = useState(initiallySelectedItems);\n  const {\n    d2\n  } = useD2({});\n\n  const onSelectItems = ({\n    dimensionId,\n    items\n  }) => {\n    setFilters({\n      [dimensionId]: items\n    });\n  };\n\n  const onDeselectItems = ({\n    dimensionId,\n    itemIdsToRemove\n  }) => {\n    const oldList = filters[dimensionId] || [];\n    const newList = oldList.filter(item => !itemIdsToRemove.includes(item.id));\n    setFilters({ ...filters,\n      [dimensionId]: newList\n    });\n  };\n\n  const onReorderItems = ({\n    dimensionId,\n    itemIds\n  }) => {\n    const oldList = filters[dimensionId] || [];\n    const reorderedList = itemIds.map(id => oldList.find(item => item.id === id));\n    setFilters({ ...filters,\n      [dimensionId]: reorderedList\n    });\n  };\n\n  const saveFilter = () => {\n    const id = dimension.id;\n    const filterItems = filters[id];\n\n    if (filterItems && filterItems.length) {\n      addItemFilter({\n        id,\n        value: [...filterItems]\n      });\n    } else {\n      removeItemFilter(id);\n    }\n\n    onClose(id);\n  };\n\n  const renderDialogContent = () => {\n    const commonProps = {\n      d2,\n      onSelect: onSelectItems,\n      onDeselect: onDeselectItems,\n      onReorder: onReorderItems\n    };\n    const selectedItems = filters[dimension.id] || [];\n\n    switch (dimension.id) {\n      case DIMENSION_ID_PERIOD:\n        {\n          return <PeriodDimension selectedPeriods={selectedItems} onSelect={commonProps.onSelect} />;\n        }\n\n      case DIMENSION_ID_ORGUNIT:\n        return <OrgUnitDimension displayNameProperty={displayNameProperty} ouItems={selectedItems} {...commonProps} />;\n\n      default:\n        return <DynamicDimension selectedItems={selectedItems} dimensionId={dimension.id} onSelect={commonProps.onSelect} />;\n    }\n  };\n\n  return <>\n            {dimension.id && <Modal dataTest={`${dimension.id}-dimension-modal`} onClose={onClose} position=\"top\" large>\n                    <ModalTitle>{dimension.name}</ModalTitle>\n                    <ModalContent>{renderDialogContent()}</ModalContent>\n                    <ModalActions>\n                        <ButtonStrip>\n                            <Button secondary onClick={onClose}>\n                                {i18n.t('Cancel')}\n                            </Button>\n                            <Button primary onClick={saveFilter}>\n                                {i18n.t('Confirm')}\n                            </Button>\n                        </ButtonStrip>\n                    </ModalActions>\n                </Modal>}\n        </>;\n};\n\nFilterDialog.propTypes = {\n  addItemFilter: PropTypes.func,\n  dimension: PropTypes.object,\n  displayNameProperty: PropTypes.string,\n  initiallySelectedItems: PropTypes.object,\n  removeItemFilter: PropTypes.func,\n  onClose: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  initiallySelectedItems: sGetItemFiltersRoot(state)\n});\n\nexport default connect(mapStateToProps, {\n  addItemFilter: acAddItemFilter,\n  removeItemFilter: acRemoveItemFilter\n})(FilterDialog);","export const SET_SETTINGS = 'SET_SETTINGS';\nexport const ADD_SETTINGS = 'ADD_SETTINGS';\nexport const DEFAULT_SETTINGS = {\n  keyDateFormat: 'yyyy-MM-dd',\n  keyAnalysisRelativePeriod: 'LAST_12_MONTHS',\n  keyAnalysisDigitGroupSeparator: 'SPACE',\n  displayNameProperty: 'displayName',\n  uiLocale: 'en',\n  rootOrganisationUnit: {},\n  keyGatherAnalyticalObjectStatisticsInDashboardViews: false\n};\nexport default ((state = DEFAULT_SETTINGS, action) => {\n  switch (action.type) {\n    case SET_SETTINGS:\n      {\n        return Object.assign({}, action.value);\n      }\n\n    case ADD_SETTINGS:\n      {\n        return { ...state,\n          ...action.value\n        };\n      }\n\n    default:\n      return state;\n  }\n}); // Selectors\n\nexport const sGetSettings = state => state.settings;\nexport const sGetSettingsDisplayNameProperty = state => sGetSettings(state).displayNameProperty;\nexport const sGetRootOrgUnit = state => sGetSettings(state).rootOrganisationUnit;\nexport const sGetRelativePeriod = state => sGetSettings(state).keyAnalysisRelativePeriod;\nexport const sGetUiLocale = state => sGetSettings(state).uiLocale;\nexport const sGatherAnalyticalObjectStatisticsInDashboardViews = state => sGetSettings(state).keyGatherAnalyticalObjectStatisticsInDashboardViews;","export const SET_ACTIVE_MODAL_DIMENSION = 'SET_ACTIVE_MODAL_DIMENSION';\nexport const CLEAR_ACTIVE_MODAL_DIMENSION = 'CLEAR_ACTIVE_MODAL_DIMENSION';\nexport const DEFAULT_STATE_ACTIVE_MODAL_DIMENSION = {};\nexport default ((state = DEFAULT_STATE_ACTIVE_MODAL_DIMENSION, action) => {\n  switch (action.type) {\n    case SET_ACTIVE_MODAL_DIMENSION:\n      {\n        return action.value;\n      }\n\n    case CLEAR_ACTIVE_MODAL_DIMENSION:\n      {\n        return DEFAULT_STATE_ACTIVE_MODAL_DIMENSION;\n      }\n\n    default:\n      return state;\n  }\n});\nexport const sGetActiveModalDimension = state => state.activeModalDimension;","import { SET_ACTIVE_MODAL_DIMENSION, CLEAR_ACTIVE_MODAL_DIMENSION } from '../reducers/activeModalDimension';\nexport const acSetActiveModalDimension = value => ({\n  type: SET_ACTIVE_MODAL_DIMENSION,\n  value\n});\nexport const acClearActiveModalDimension = () => ({\n  type: CLEAR_ACTIVE_MODAL_DIMENSION\n});","import React, { useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport isEmpty from 'lodash/isEmpty';\nimport i18n from '@dhis2/d2-i18n';\nimport { DimensionsPanel } from '@dhis2/analytics';\nimport { Button, Popover } from '@dhis2/ui';\nimport FilterDialog from './FilterDialog';\nimport { sGetSettingsDisplayNameProperty } from '../../reducers/settings';\nimport { sGetActiveModalDimension } from '../../reducers/activeModalDimension';\nimport { sGetDimensions } from '../../reducers/dimensions';\nimport { sGetItemFiltersRoot } from '../../reducers/itemFilters';\nimport { acClearActiveModalDimension, acSetActiveModalDimension } from '../../actions/activeModalDimension';\nimport classes from './styles/FilterSelector.module.css';\n\nconst FilterSelector = props => {\n  const [showPopover, setShowPopover] = useState(false);\n  const ref = useRef(null);\n\n  const onCloseDialog = () => {\n    setShowPopover(false);\n    props.clearActiveModalDimension();\n  };\n\n  const selectDimension = id => {\n    props.setActiveModalDimension(props.dimensions.find(dimension => dimension.id === id));\n  };\n\n  return <>\n            <span className={classes.buttonContainer} ref={ref}>\n                <Button onClick={() => setShowPopover(true)}>\n                    {i18n.t('Add filter')}\n                    <ArrowDropDownIcon />\n                </Button>\n            </span>\n            {showPopover && <Popover onClickOutside={onCloseDialog} reference={ref} arrow={true} placement=\"bottom-start\" dataTest=\"dashboard-filter-popover\">\n                    <DimensionsPanel style={{\n        width: '320px'\n      }} dimensions={props.dimensions} onDimensionClick={selectDimension} selectedIds={Object.keys(props.initiallySelectedItems)} />\n                </Popover>}\n            {!isEmpty(props.dimension) ? <FilterDialog displayNameProperty={props.displayNameProperty} dimension={props.dimension} onClose={onCloseDialog} /> : null}\n        </>;\n};\n\nconst mapStateToProps = state => ({\n  displayNameProperty: sGetSettingsDisplayNameProperty(state),\n  dimension: sGetActiveModalDimension(state),\n  dimensions: sGetDimensions(state),\n  initiallySelectedItems: sGetItemFiltersRoot(state)\n});\n\nFilterSelector.propTypes = {\n  clearActiveModalDimension: PropTypes.func,\n  dimension: PropTypes.object,\n  dimensions: PropTypes.array,\n  displayNameProperty: PropTypes.string,\n  initiallySelectedItems: PropTypes.object,\n  setActiveModalDimension: PropTypes.func\n};\nexport default connect(mapStateToProps, {\n  clearActiveModalDimension: acClearActiveModalDimension,\n  setActiveModalDimension: acSetActiveModalDimension\n})(FilterSelector);","import React, { useState, createRef } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { Link, Redirect } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport SharingDialog from '@dhis2/d2-ui-sharing-dialog';\nimport Star from '@material-ui/icons/Star';\nimport StarBorder from '@material-ui/icons/StarBorder';\nimport { Button, FlyoutMenu, Popover, MenuItem, colors } from '@dhis2/ui';\nimport { useD2 } from '@dhis2/app-runtime-adapter-d2';\nimport { useWindowDimensions } from '../WindowDimensionsProvider';\nimport { ThreeDots } from '../Item/VisualizationItem/assets/icons';\nimport { orObject } from '../../modules/util';\nimport { tStarDashboard } from '../../actions/dashboards';\nimport { tUpdateShowDescription } from '../../actions/selected';\nimport FilterSelector from '../ItemFilter/FilterSelector';\nimport { sGetSelectedId, sGetSelectedShowDescription } from '../../reducers/selected';\nimport { sGetDashboardById, sGetDashboardItems, EMPTY_DASHBOARD } from '../../reducers/dashboards';\nimport isSmallScreen from '../../modules/isSmallScreen';\nimport classes from './styles/ViewTitleBar.module.css';\n\nconst ViewTitleBar = props => {\n  const [moreOptionsIsOpen, setMoreOptionsIsOpen] = useState(false);\n  const [sharingDialogIsOpen, setSharingDialogIsOpen] = useState(false);\n  const [redirectUrl, setRedirectUrl] = useState(null);\n  const {\n    width\n  } = useWindowDimensions();\n  const {\n    d2\n  } = useD2({});\n  const {\n    id,\n    name,\n    description,\n    access,\n    showDescription,\n    starred,\n    onToggleStarredDashboard,\n    onShowHideDescription\n  } = props;\n\n  const toggleSharingDialog = () => setSharingDialogIsOpen(!sharingDialogIsOpen);\n\n  const toggleMoreOptions = () => setMoreOptionsIsOpen(!moreOptionsIsOpen);\n\n  const printLayout = () => setRedirectUrl(`${id}/printlayout`);\n\n  const printOipp = () => setRedirectUrl(`${id}/printoipp`);\n\n  const StarIcon = starred ? Star : StarBorder;\n\n  if (redirectUrl) {\n    return <Redirect to={redirectUrl} />;\n  }\n\n  const showHideDescriptionLabel = showDescription ? i18n.t('Hide description') : i18n.t('Show description');\n\n  const showHideDescription = () => {\n    onShowHideDescription();\n    toggleMoreOptions();\n  };\n\n  const toggleStarredDashboardLabel = starred ? i18n.t('Unstar dashboard') : i18n.t('Star dashboard');\n\n  const toggleStarredDashboard = () => {\n    // TODO use dataQuery directly here with create/delete mutations ?!\n    onToggleStarredDashboard();\n    toggleMoreOptions();\n  };\n\n  const buttonRef = createRef();\n  const userAccess = orObject(access);\n  const descriptionClasses = cx(classes.descContainer, description ? classes.desc : classes.noDesc);\n  return <>\n            <div className={classes.container}>\n                <div className={classes.titleBar}>\n                    <span className={classes.title} data-test=\"view-dashboard-title\">\n                        {name}\n                    </span>\n                    <div className={classes.actions}>\n                        <div className={classes.titleBarIcon} onClick={onToggleStarredDashboard}>\n                            <StarIcon style={{\n              fill: colors.grey600\n            }} />\n                        </div>\n                        <div className={classes.strip}>\n                            {userAccess.update ? <Link className={classes.editLink} to={`/${id}/edit`} data-test=\"link-edit-dashboard\">\n                                    <Button>{i18n.t('Edit')}</Button>\n                                </Link> : null}\n                            {userAccess.manage ? <Button className={classes.shareButton} onClick={toggleSharingDialog}>\n                                    {i18n.t('Share')}\n                                </Button> : null}\n                            <FilterSelector />\n                            <span ref={buttonRef}>\n                                <Button small={isSmallScreen(width)} dataTest=\"more-button\" onClick={toggleMoreOptions}>\n                                    <ThreeDots />\n                                    <span className={classes.moreButton}>\n                                        {i18n.t('More')}\n                                    </span>\n                                </Button>\n                            </span>\n                        </div>\n                        {moreOptionsIsOpen && <Popover reference={buttonRef} placement=\"bottom-start\" onClickOutside={toggleMoreOptions}>\n                                <FlyoutMenu>\n                                    <MenuItem dense label={toggleStarredDashboardLabel} onClick={toggleStarredDashboard} />\n                                    <MenuItem dense label={showHideDescriptionLabel} onClick={showHideDescription} />\n                                    <MenuItem dense label={i18n.t('Print')} dataTest=\"print-menu-item\">\n                                        <MenuItem dense label={i18n.t('Dashboard layout')} onClick={printLayout} dataTest=\"print-layout-menu-item\" />\n                                        <MenuItem dense label={i18n.t('One item per page')} onClick={printOipp} dataTest=\"print-oipp-menu-item\" />\n                                    </MenuItem>\n                                </FlyoutMenu>\n                            </Popover>}\n                    </div>\n                </div>\n                {showDescription && <div className={descriptionClasses}>\n                        {description || i18n.t('No description')}\n                    </div>}\n            </div>\n            {id && <SharingDialog d2={d2} id={id} type=\"dashboard\" open={sharingDialogIsOpen} onRequestClose={toggleSharingDialog} />}\n        </>;\n};\n\nViewTitleBar.propTypes = {\n  access: PropTypes.object,\n  description: PropTypes.string,\n  id: PropTypes.string,\n  name: PropTypes.string,\n  showDescription: PropTypes.bool,\n  starred: PropTypes.bool,\n  onShowHideDescription: PropTypes.func,\n  onToggleStarredDashboard: PropTypes.func\n};\nViewTitleBar.defaultProps = {\n  name: '',\n  description: '',\n  starred: false,\n  showDescription: false\n};\n\nconst mapStateToProps = state => {\n  const id = sGetSelectedId(state);\n  const dashboard = sGetDashboardById(state, id) || EMPTY_DASHBOARD;\n  return {\n    id,\n    name: dashboard.displayName,\n    description: dashboard.displayDescription,\n    dashboardItems: sGetDashboardItems(state),\n    showDescription: sGetSelectedShowDescription(state),\n    starred: dashboard.starred,\n    access: dashboard.access\n  };\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n  const {\n    id,\n    starred,\n    showDescription\n  } = stateProps;\n  const {\n    dispatch\n  } = dispatchProps;\n  return { ...stateProps,\n    ...ownProps,\n    onToggleStarredDashboard: () => dispatch(tStarDashboard(id, !starred)),\n    onShowHideDescription: () => dispatch(tUpdateShowDescription(!showDescription))\n  };\n};\n\nexport default connect(mapStateToProps, null, mergeProps)(ViewTitleBar);","/** @module reducers/editDashboard */\nimport update from 'immutability-helper';\nimport isEmpty from 'lodash/isEmpty';\nimport { orArray, orObject } from '../modules/util';\nexport const RECEIVED_EDIT_DASHBOARD = 'RECEIVED_EDIT_DASHBOARD';\nexport const RECEIVED_NOT_EDITING = 'RECEIVED_NOT_EDITING';\nexport const START_NEW_DASHBOARD = 'START_NEW_DASHBOARD';\nexport const RECEIVED_TITLE = 'RECEIVED_TITLE';\nexport const RECEIVED_DESCRIPTION = 'RECEIVED_DESCRIPTION';\nexport const ADD_DASHBOARD_ITEM = 'ADD_DASHBOARD_ITEM';\nexport const REMOVE_DASHBOARD_ITEM = 'REMOVE_DASHBOARD_ITEM';\nexport const UPDATE_DASHBOARD_ITEM = 'UPDATE_DASHBOARD_ITEM';\nexport const RECEIVED_DASHBOARD_LAYOUT = 'RECEIVED_DASHBOARD_LAYOUT';\nexport const SET_PRINT_PREVIEW_VIEW = 'SET_PRINT_PREVIEW_VIEW';\nexport const CLEAR_PRINT_PREVIEW_VIEW = 'CLEAR_PRINT_PREVIEW_VIEW';\nexport const DEFAULT_STATE_EDIT_DASHBOARD = {};\nexport const NEW_DASHBOARD_STATE = {\n  id: '',\n  name: '',\n  access: {},\n  description: '',\n  dashboardItems: [],\n  printPreviewView: false\n};\nexport default ((state = DEFAULT_STATE_EDIT_DASHBOARD, action) => {\n  switch (action.type) {\n    case RECEIVED_EDIT_DASHBOARD:\n      {\n        const newState = {};\n        Object.keys(NEW_DASHBOARD_STATE).map(k => newState[k] = action.value[k]);\n        newState.printPreviewView = false;\n        return newState;\n      }\n\n    case RECEIVED_NOT_EDITING:\n      return DEFAULT_STATE_EDIT_DASHBOARD;\n\n    case SET_PRINT_PREVIEW_VIEW:\n      return Object.assign({}, state, {\n        printPreviewView: true\n      });\n\n    case CLEAR_PRINT_PREVIEW_VIEW:\n      return Object.assign({}, state, {\n        printPreviewView: false\n      });\n\n    case START_NEW_DASHBOARD:\n      return NEW_DASHBOARD_STATE;\n\n    case RECEIVED_TITLE:\n      {\n        return Object.assign({}, state, {\n          name: action.value\n        });\n      }\n\n    case RECEIVED_DESCRIPTION:\n      {\n        return Object.assign({}, state, {\n          description: action.value\n        });\n      }\n\n    case ADD_DASHBOARD_ITEM:\n      if (!action.value.position) {\n        return update(state, {\n          dashboardItems: {\n            $unshift: [action.value]\n          }\n        });\n      }\n\n      return update(state, {\n        dashboardItems: {\n          $splice: [[parseInt(action.value.position), 0, action.value]]\n        }\n      });\n\n    case REMOVE_DASHBOARD_ITEM:\n      {\n        const idToRemove = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === idToRemove);\n\n        if (dashboardItemIndex > -1) {\n          return update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1]]\n            }\n          });\n        }\n\n        return state;\n      }\n\n    case RECEIVED_DASHBOARD_LAYOUT:\n      {\n        const stateItems = orArray(state.dashboardItems);\n        let layoutHasChanged = false;\n        const newStateItems = action.value.map(({\n          x,\n          y,\n          w,\n          h,\n          i\n        }) => {\n          const stateItem = stateItems.find(si => si.id === i);\n\n          if (!(stateItem.x === x && stateItem.y === y && stateItem.w === w && stateItem.h === h)) {\n            layoutHasChanged = true;\n            return Object.assign({}, stateItem, {\n              w,\n              h,\n              x,\n              y\n            });\n          }\n\n          return stateItem;\n        });\n        return layoutHasChanged ? { ...state,\n          dashboardItems: newStateItems\n        } : state;\n      }\n\n    case UPDATE_DASHBOARD_ITEM:\n      {\n        const dashboardItem = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === dashboardItem.id);\n\n        if (dashboardItemIndex > -1) {\n          const newState = update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1, Object.assign({}, dashboardItem)]]\n            }\n          });\n          return newState;\n        }\n\n        return state;\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetEditDashboardRoot = state => state.editDashboard; // selectors\n\nexport const sGetIsEditing = state => !isEmpty(state.editDashboard);\nexport const sGetIsPrintPreviewView = state => sGetEditDashboardRoot(state).printPreviewView;\nexport const sGetIsNewDashboard = state => {\n  return !isEmpty(state.editDashboard) && sGetEditDashboardRoot(state).id === '';\n};\nexport const sGetEditDashboardName = state => sGetEditDashboardRoot(state).name;\nexport const sGetEditDashboardDescription = state => sGetEditDashboardRoot(state).description;\nexport const sGetEditDashboardItems = state => orObject(sGetEditDashboardRoot(state)).dashboardItems;","import { apiFetchDashboard } from './dashboards';\n\nconst onError = error => console.log('Error: ', error);\n\nexport const createDashboardMutation = {\n  resource: 'dashboards',\n  type: 'create',\n  data: ({\n    data\n  }) => data\n};\nexport const updateDashboardMutation = {\n  resource: 'dashboards',\n  type: 'update',\n  id: ({\n    id\n  }) => id,\n  data: ({\n    data\n  }) => data\n};\n\nconst generatePayload = (dashboard = {}, data) => {\n  return { ...dashboard,\n    name: data.name,\n    description: data.description,\n    dashboardItems: data.dashboardItems.map(item => ({ ...item,\n      width: item.w,\n      height: item.h\n    }))\n  };\n};\n\nexport const updateDashboard = async (dataEngine, data) => {\n  try {\n    const dashboard = await apiFetchDashboard(dataEngine, data.id);\n    const {\n      response\n    } = await dataEngine.mutate(updateDashboardMutation, {\n      variables: {\n        id: data.id,\n        data: generatePayload(dashboard, data)\n      }\n    });\n    return response.uid;\n  } catch (error) {\n    onError(error);\n  }\n};\nexport const postDashboard = async (dataEngine, data) => {\n  try {\n    const {\n      response\n    } = await dataEngine.mutate(createDashboardMutation, {\n      variables: {\n        data: generatePayload({}, data)\n      }\n    });\n    return response.uid;\n  } catch (error) {\n    onError(error);\n  }\n};","import { generateUid } from 'd2/uid';\nimport i18n from '@dhis2/d2-i18n';\nimport { RECEIVED_EDIT_DASHBOARD, START_NEW_DASHBOARD, RECEIVED_NOT_EDITING, RECEIVED_TITLE, RECEIVED_DESCRIPTION, RECEIVED_DASHBOARD_LAYOUT, ADD_DASHBOARD_ITEM, UPDATE_DASHBOARD_ITEM, REMOVE_DASHBOARD_ITEM, SET_PRINT_PREVIEW_VIEW, CLEAR_PRINT_PREVIEW_VIEW } from '../reducers/editDashboard';\nimport { sGetEditDashboardRoot } from '../reducers/editDashboard';\nimport { updateDashboard, postDashboard } from '../api/editDashboard';\nimport { tSetSelectedDashboardById } from '../actions/selected';\nimport { NEW_ITEM_SHAPE, getGridItemProperties, getPageBreakItemShape, getPrintTitlePageItemShape } from '../components/ItemGrid/gridUtil';\nimport { itemTypeMap, PAGEBREAK, PRINT_TITLE_PAGE } from '../modules/itemTypes';\nimport { convertUiItemsToBackend } from '../modules/uiBackendItemConverter';\n\nconst onError = error => {\n  console.log('Error (Saving Dashboard): ', error);\n  return error;\n}; // actions\n\n\nexport const acSetEditDashboard = (dashboard, items) => {\n  const val = { ...dashboard,\n    dashboardItems: items\n  };\n  return {\n    type: RECEIVED_EDIT_DASHBOARD,\n    value: val\n  };\n};\nexport const acSetEditNewDashboard = () => ({\n  type: START_NEW_DASHBOARD\n});\nexport const acClearEditDashboard = () => ({\n  type: RECEIVED_NOT_EDITING\n});\nexport const acSetPrintPreviewView = () => ({\n  type: SET_PRINT_PREVIEW_VIEW\n});\nexport const acClearPrintPreviewView = () => ({\n  type: CLEAR_PRINT_PREVIEW_VIEW\n});\nexport const acSetDashboardTitle = value => ({\n  type: RECEIVED_TITLE,\n  value\n});\nexport const acSetDashboardDescription = value => ({\n  type: RECEIVED_DESCRIPTION,\n  value\n});\nexport const acUpdateDashboardLayout = value => ({\n  type: RECEIVED_DASHBOARD_LAYOUT,\n  value\n});\nexport const acAddDashboardItem = item => {\n  const type = item.type;\n  delete item.type;\n  const itemPropName = itemTypeMap[type].propName;\n  const id = generateUid();\n  const gridItemProperties = getGridItemProperties(id);\n  let shape;\n\n  if (type === PAGEBREAK) {\n    const yPos = item.yPos || 0;\n    shape = getPageBreakItemShape(yPos, item.isStatic);\n  } else if (type === PRINT_TITLE_PAGE) {\n    shape = getPrintTitlePageItemShape();\n  } else {\n    shape = NEW_ITEM_SHAPE;\n  }\n\n  return {\n    type: ADD_DASHBOARD_ITEM,\n    value: {\n      id,\n      type,\n      position: item.position || null,\n      [itemPropName]: item.content,\n      ...NEW_ITEM_SHAPE,\n      ...gridItemProperties,\n      ...shape\n    }\n  };\n};\nexport const acUpdateDashboardItem = item => ({\n  type: UPDATE_DASHBOARD_ITEM,\n  value: item\n});\nexport const acRemoveDashboardItem = value => ({\n  type: REMOVE_DASHBOARD_ITEM,\n  value\n}); // thunks\n\nexport const tSaveDashboard = () => async (dispatch, getState, dataEngine) => {\n  const dashboard = sGetEditDashboardRoot(getState());\n  const dashboardToSave = { ...dashboard,\n    dashboardItems: convertUiItemsToBackend(dashboard.dashboardItems),\n    name: dashboard.name || i18n.t('Untitled dashboard')\n  };\n\n  try {\n    const dashboardId = dashboardToSave.id ? await updateDashboard(dataEngine, dashboardToSave) : await postDashboard(dataEngine, dashboardToSave);\n    dispatch(acClearEditDashboard());\n    await dispatch(tSetSelectedDashboardById(dashboardId));\n    return Promise.resolve(dashboardId);\n  } catch (error) {\n    onError(error);\n  }\n};","import React, { useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { useD2 } from '@dhis2/app-runtime-adapter-d2';\nimport { useConfig } from '@dhis2/app-runtime';\nimport { load, unmount } from './plugin';\nimport { getGridItemDomId } from '../../../ItemGrid/gridUtil';\n\nconst DefaultPlugin = ({\n  item,\n  activeType,\n  visualization,\n  options,\n  style\n}) => {\n  const {\n    d2\n  } = useD2({});\n  const {\n    baseUrl\n  } = useConfig();\n  const credentials = {\n    baseUrl,\n    auth: d2.Api.getApi().defaultHeaders.Authorization\n  };\n  const prevItem = useRef();\n  const prevActiveType = useRef();\n  useEffect(() => {\n    load(item, visualization, {\n      credentials,\n      activeType,\n      options\n    });\n    prevItem.current = item;\n    prevActiveType.current = activeType;\n    return () => unmount(item, activeType);\n  }, []);\n  useEffect(() => {\n    if (shouldPluginReload()) {\n      unmount(item, prevActiveType.current);\n      load(item, visualization, {\n        credentials,\n        activeType\n      });\n    }\n\n    prevItem.current = item;\n    prevActiveType.current = activeType;\n  }, [item, visualization, activeType]);\n  /**\n   * Prevent unnecessary re-rendering\n   * TODO: fix this hack\n   */\n\n  const shouldPluginReload = () => {\n    const reloadAllowed = prevItem.current === item;\n    const visChanged = prevActiveType.current !== activeType;\n    return reloadAllowed && visChanged;\n  };\n\n  return <div id={getGridItemDomId(item.id)} style={style} />;\n};\n\nDefaultPlugin.propTypes = {\n  activeType: PropTypes.string,\n  item: PropTypes.object,\n  options: PropTypes.object,\n  style: PropTypes.object,\n  visualization: PropTypes.object\n};\nDefaultPlugin.defaultProps = {\n  style: {},\n  item: {},\n  options: {},\n  visualization: {}\n};\nexport default DefaultPlugin;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classes from './styles/NoVisualizationMessage.module.css';\n\nconst NoVisualizationMessage = ({\n  message\n}) => {\n  return <div className={classes.message}>{message}</div>;\n};\n\nNoVisualizationMessage.propTypes = {\n  message: PropTypes.string\n};\nexport default NoVisualizationMessage;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport DefaultPlugin from './DefaultPlugin';\nimport { MAP } from '../../../../modules/itemTypes';\nimport { pluginIsAvailable } from './plugin';\nimport NoVisualizationMessage from './NoVisualizationMessage';\n\nconst MapPlugin = ({\n  applyFilters,\n  ...props\n}) => {\n  if (props.item.type === MAP) {\n    // apply filters only to thematic and event layers\n    // for maps AO\n    const mapViews = props.visualization.mapViews.map(mapView => {\n      if (mapView.layer.includes('thematic') || mapView.layer.includes('event')) {\n        return applyFilters(mapView, props.itemFilters);\n      }\n\n      return mapView;\n    });\n    props.visualization = { ...props.visualization,\n      mapViews\n    };\n  } else {\n    // this is the case of a non map AO passed to the maps plugin\n    // due to a visualization type switch in dashboard item\n    // maps plugin takes care of converting the AO to a suitable format\n    props.visualization = applyFilters(props.visualization, props.itemFilters);\n  }\n\n  return pluginIsAvailable(props.activeType || props.item.type) ? <DefaultPlugin options={{\n    hideTitle: true\n  }} {...props} /> : <NoVisualizationMessage message={i18n.t('Unable to load the plugin for this item')} />;\n};\n\nMapPlugin.propTypes = {\n  activeType: PropTypes.string,\n  applyFilters: PropTypes.func,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object,\n  visualization: PropTypes.object\n};\nexport default MapPlugin;","import React from 'react';\nimport { CircularLoader } from '@dhis2/ui';\nimport classes from './styles/LoadingMask.module.css';\n\nconst LoadingMask = () => {\n  return <div className={classes.center}>\n            <CircularLoader />\n        </div>;\n};\n\nexport default LoadingMask;","const getFilteredVisualization = (visualization, filters) => {\n  if (!Object.keys(filters).length) {\n    return visualization;\n  } // deep clone objects in filters to avoid changing the visualization in the Redux store\n\n\n  const visRows = visualization.rows.map(obj => ({ ...obj\n  }));\n  const visColumns = visualization.columns.map(obj => ({ ...obj\n  }));\n  const visFilters = visualization.filters.map(obj => ({ ...obj\n  }));\n  Object.keys(filters).forEach(dimensionId => {\n    if (filters[dimensionId]) {\n      let dimensionFound = false;\n      [visRows, visColumns, visFilters].forEach(dimensionObjects => dimensionObjects.filter(obj => obj.dimension === dimensionId).forEach(obj => {\n        dimensionFound = true;\n        obj.items = filters[dimensionId];\n      })); // add dimension to filters if not already present elsewhere\n\n      if (!dimensionFound) {\n        visFilters.push({\n          dimension: dimensionId,\n          items: filters[dimensionId]\n        });\n      }\n    }\n  });\n  return { ...visualization,\n    rows: visRows,\n    columns: visColumns,\n    filters: visFilters\n  };\n};\n\nexport default getFilteredVisualization;","import { VIS_TYPE_COLUMN, VIS_TYPE_PIVOT_TABLE, getAdaptedUiLayoutByType } from '@dhis2/analytics';\nimport { REPORT_TABLE, CHART, MAP } from '../../../../modules/itemTypes';\nexport const THEMATIC_LAYER = 'thematic';\n\nconst extractMapView = map => map.mapViews && map.mapViews.find(mv => mv.layer.includes(THEMATIC_LAYER));\n\nconst getWithoutId = object => ({ ...object,\n  id: undefined\n});\n\nconst getVisualizationConfig = (visualization, originalType, activeType) => {\n  if (originalType === MAP && originalType !== activeType) {\n    const extractedMapView = extractMapView(visualization);\n\n    if (extractedMapView === undefined) {\n      return null;\n    }\n\n    return getWithoutId({ ...visualization,\n      ...extractedMapView,\n      mapViews: undefined,\n      type: activeType === CHART ? VIS_TYPE_COLUMN : VIS_TYPE_PIVOT_TABLE\n    });\n  } else if (originalType === REPORT_TABLE && activeType === CHART) {\n    const layout = getAdaptedUiLayoutByType(visualization, VIS_TYPE_COLUMN);\n    return getWithoutId({ ...visualization,\n      ...layout,\n      type: VIS_TYPE_COLUMN\n    });\n  } else if (originalType === CHART && activeType === REPORT_TABLE) {\n    const layout = getAdaptedUiLayoutByType(visualization, VIS_TYPE_PIVOT_TABLE);\n    return getWithoutId({ ...visualization,\n      ...layout,\n      type: VIS_TYPE_PIVOT_TABLE\n    });\n  }\n\n  return getWithoutId(visualization);\n};\n\nexport default getVisualizationConfig;","// Note that this ignores discrepancies in 'this', so shouldn't be used with bound functions\n// This is useful instead of lodash/memoize when we only need to memoize a single value\n// Inspiration: https://github.com/alexreardon/memoize-one\nconst memoizeOne = fn => {\n  let lastArgs = undefined;\n  let lastValue = undefined;\n  return (...args) => {\n    if (lastArgs && args.length === lastArgs.length && args.every((arg, i) => arg === lastArgs[i])) {\n      return lastValue;\n    }\n\n    lastArgs = args;\n    lastValue = fn(...args);\n    return lastValue;\n  };\n};\n\nexport default memoizeOne;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport VisualizationPlugin from '@dhis2/data-visualizer-plugin';\nimport i18n from '@dhis2/d2-i18n';\nimport { D2Shim } from '@dhis2/app-runtime-adapter-d2';\nimport DefaultPlugin from './DefaultPlugin';\nimport MapPlugin from './MapPlugin';\nimport LoadingMask from './LoadingMask';\nimport NoVisualizationMessage from './NoVisualizationMessage';\nimport getFilteredVisualization from './getFilteredVisualization';\nimport getVisualizationConfig from './getVisualizationConfig';\nimport { VISUALIZATION, MAP, CHART, REPORT_TABLE } from '../../../../modules/itemTypes';\nimport { getVisualizationId } from '../../../../modules/item';\nimport memoizeOne from '../../../../modules/memoizeOne';\nimport { sGetVisualization } from '../../../../reducers/visualizations';\nimport { pluginIsAvailable } from './plugin';\n\nclass Visualization extends React.Component {\n  state = {\n    pluginLoaded: false\n  };\n\n  constructor(props) {\n    super(props);\n    this.memoizedGetFilteredVisualization = memoizeOne(getFilteredVisualization);\n    this.memoizedGetVisualizationConfig = memoizeOne(getVisualizationConfig);\n  }\n\n  onLoadingComplete = () => {\n    this.setState({\n      pluginLoaded: true\n    });\n  };\n\n  render() {\n    const {\n      visualization,\n      activeType,\n      item,\n      itemFilters,\n      availableHeight\n    } = this.props;\n\n    if (!visualization) {\n      return <NoVisualizationMessage message={i18n.t('No data to display')} />;\n    }\n\n    const pluginProps = {\n      item,\n      itemFilters,\n      activeType,\n      style: {\n        height: availableHeight\n      },\n      visualization: this.memoizedGetVisualizationConfig(visualization, item.type, activeType)\n    };\n\n    switch (activeType) {\n      case VISUALIZATION:\n      case CHART:\n      case REPORT_TABLE:\n        {\n          return <>\n                        {!this.state.pluginLoaded && <div style={pluginProps.style}>\n                                <LoadingMask />\n                            </div>}\n                        <D2Shim d2Config={{}}>\n                            {({\n                d2\n              }) => <VisualizationPlugin d2={d2} visualization={this.memoizedGetFilteredVisualization(pluginProps.visualization, pluginProps.itemFilters)} onLoadingComplete={this.onLoadingComplete} forDashboard={true} style={pluginProps.style} />}\n                        </D2Shim>\n                    </>;\n        }\n\n      case MAP:\n        {\n          return <MapPlugin applyFilters={this.memoizedGetFilteredVisualization} {...pluginProps} />;\n        }\n\n      default:\n        {\n          pluginProps.visualization = this.memoizedGetFilteredVisualization(pluginProps.visualization, pluginProps.itemFilters);\n          return pluginIsAvailable(pluginProps.activeType || pluginProps.item.type) ? <DefaultPlugin {...pluginProps} /> : <NoVisualizationMessage message={i18n.t('Unable to load the plugin for this item')} />;\n        }\n    }\n  }\n\n}\n\nVisualization.propTypes = {\n  activeType: PropTypes.string,\n  availableHeight: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  item: PropTypes.object,\n  itemFilters: PropTypes.object,\n  visualization: PropTypes.object\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    visualization: sGetVisualization(state, getVisualizationId(ownProps.item))\n  };\n};\n\nexport default connect(mapStateToProps)(Visualization);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Warning } from './assets/icons';\nimport classes from './styles/FatalErrorBoundary.module.css';\n\nclass FatalErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      errorFound: false\n    };\n  }\n\n  componentDidCatch(error, info) {\n    this.setState({\n      errorFound: true\n    });\n    console.log('error: ', error);\n    console.log('info: ', info);\n  }\n\n  render() {\n    if (this.state.errorFound) {\n      return <p className={classes.container}>\n                    <span className={classes.icon}>\n                        <Warning />\n                    </span>\n                    <span className={classes.message}>\n                        {i18n.t('There was a problem loading this dashboard item')}\n                    </span>\n                </p>;\n    }\n\n    return this.props.children;\n  }\n\n}\n\nFatalErrorBoundary.propTypes = {\n  children: PropTypes.node\n};\nexport default FatalErrorBoundary;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classes from './styles/ItemHeader.module.css';\n\nconst ViewItemActions = ({\n  actionButtons\n}) => {\n  return actionButtons ? <div className={classes.itemActionsWrap}>{actionButtons}</div> : null;\n};\n\nViewItemActions.propTypes = {\n  actionButtons: PropTypes.node\n};\nexport default ViewItemActions;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { colors } from '@dhis2/ui';\nimport classes from './styles/DeleteItemButton.module.css';\n\nconst DeleteItemButton = ({\n  onClick\n}) => <button type=\"button\" className={classes.deleteItemButton} onClick={onClick} title={i18n.t(`Delete item`)}>\n        <DeleteIcon style={{\n    fill: colors.red500\n  }} />\n    </button>;\n\nDeleteItemButton.propTypes = {\n  onClick: PropTypes.func\n};\nexport default DeleteItemButton;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport DeleteItemButton from './DeleteItemButton';\nimport { acRemoveDashboardItem } from '../../../actions/editDashboard';\nimport classes from './styles/ItemHeader.module.css';\n\nconst EditItemActions = ({\n  itemId,\n  acRemoveDashboardItem\n}) => {\n  const handleDeleteItem = () => acRemoveDashboardItem(itemId);\n\n  return <div className={classes.itemActionsWrap}>\n            <DeleteItemButton onClick={handleDeleteItem} />\n        </div>;\n};\n\nEditItemActions.propTypes = {\n  acRemoveDashboardItem: PropTypes.func,\n  itemId: PropTypes.string\n};\nconst mapDispatchToProps = {\n  acRemoveDashboardItem\n};\nexport default connect(null, mapDispatchToProps)(EditItemActions);","import React from 'react';\nimport { colors } from '@dhis2/ui';\n\nconst WarningIcon = () => <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" fill={colors.grey600}>\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z\" />\n    </svg>;\n\nexport default WarningIcon;","import React from 'react';\nimport { Tooltip } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport InfoIcon from '../../../icons/Info';\nimport classes from './styles/PrintItemInfo.module.css';\n\nconst PrintWarning = () => <div className={classes.warning}>\n        <Tooltip content={i18n.t('This item has been shortened to fit on one page')} placement=\"bottom\">\n            <InfoIcon />\n        </Tooltip>\n    </div>;\n\nexport default PrintWarning;","export const EDIT = 'edit';\nexport const NEW = 'new';\nexport const VIEW = 'view';\nexport const PRINT = 'print';\nexport const PRINT_LAYOUT = 'print-layout';\nexport const isEditMode = mode => [EDIT, NEW].includes(mode);\nexport const isPrintMode = mode => [PRINT, PRINT_LAYOUT].includes(mode);\nexport const isViewMode = mode => mode === VIEW;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ViewItemActions from './ViewItemActions';\nimport EditItemActions from './EditItemActions';\nimport PrintItemInfo from './PrintItemInfo';\nimport { VIEW, EDIT, PRINT_LAYOUT } from '../../Dashboard/dashboardModes';\nimport classes from './styles/ItemHeader.module.css';\n\nconst getItemActionsMap = isShortened => {\n  return {\n    [VIEW]: ViewItemActions,\n    [EDIT]: EditItemActions,\n    [PRINT_LAYOUT]: isShortened ? PrintItemInfo : null\n  };\n}; // This is the margin-top + margin-bottom defined in the css file\n\n\nexport const HEADER_MARGIN_HEIGHT = 12;\nconst ItemHeader = React.forwardRef(({\n  dashboardMode,\n  title,\n  isShortened,\n  ...rest\n}, ref) => {\n  const Actions = getItemActionsMap(isShortened)[dashboardMode];\n  return <div className={classes.itemHeaderWrap} ref={ref}>\n                <p className={classes.itemTitle}>{title}</p>\n                {Actions ? <Actions {...rest} /> : null}\n            </div>;\n});\nItemHeader.displayName = 'ItemHeader';\nItemHeader.propTypes = {\n  dashboardMode: PropTypes.string,\n  isShortened: PropTypes.bool,\n  title: PropTypes.string\n};\nexport default connect(null, null, null, {\n  forwardRef: true\n})(ItemHeader);","import React, { useState, createRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { useConfig } from '@dhis2/app-runtime';\nimport { isSingleValue, isYearOverYear, VIS_TYPE_GAUGE, VIS_TYPE_PIE } from '@dhis2/analytics';\nimport { Button, Menu, Popover, MenuItem, Divider, colors } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport { ThreeDots, SpeechBubble, Fullscreen, ExitFullscreen } from './assets/icons';\nimport { getLink } from './Visualization/plugin';\nimport { CHART, MAP, REPORT_TABLE, EVENT_CHART, EVENT_REPORT, isTrackerDomainType, hasMapView, getAppName } from '../../../modules/itemTypes';\nconst iconFill = {\n  fill: colors.grey600\n};\n\nconst ItemHeaderButtons = props => {\n  const [menuIsOpen, setMenuIsOpen] = useState(null);\n  const {\n    baseUrl\n  } = useConfig();\n  const {\n    item,\n    visualization,\n    onSelectActiveType,\n    activeType\n  } = props;\n  const isTrackerType = isTrackerDomainType(item.type);\n\n  const onViewTable = () => {\n    closeMenu();\n    onSelectActiveType(isTrackerType ? EVENT_REPORT : REPORT_TABLE);\n  };\n\n  const onViewChart = () => {\n    closeMenu();\n    onSelectActiveType(isTrackerType ? EVENT_CHART : CHART);\n  };\n\n  const onViewMap = () => {\n    closeMenu();\n    onSelectActiveType(MAP);\n  };\n\n  const itemHasMapView = () => hasMapView(item.type);\n\n  const handleInterpretationClick = () => {\n    props.onToggleFooter();\n\n    if (menuIsOpen) {\n      closeMenu();\n    }\n  };\n\n  const handleToggleFullscreenClick = () => {\n    props.onToggleFullscreen();\n    closeMenu();\n  };\n\n  const openMenu = () => setMenuIsOpen(true);\n\n  const closeMenu = () => setMenuIsOpen(false);\n\n  const type = visualization.type || item.type;\n  const canViewAs = !isSingleValue(type) && !isYearOverYear(type) && type !== VIS_TYPE_GAUGE && type !== VIS_TYPE_PIE;\n  const interpretationMenuLabel = props.activeFooter ? i18n.t(`Hide interpretations and details`) : i18n.t(`Show interpretations and details`);\n\n  const ViewAsMenuItems = () => <>\n            {activeType !== CHART && activeType !== EVENT_CHART && <MenuItem dense label={i18n.t('View as Chart')} onClick={onViewChart} icon={<ChartIcon style={iconFill} />} />}\n            {activeType !== REPORT_TABLE && activeType !== EVENT_REPORT && <MenuItem dense label={i18n.t('View as Table')} onClick={onViewTable} icon={<TableIcon style={iconFill} />} />}\n            {itemHasMapView() && activeType !== MAP && <MenuItem dense label={i18n.t('View as Map')} onClick={onViewMap} icon={<MapIcon style={iconFill} />} />}\n        </>;\n\n  const buttonRef = createRef();\n  return props.isFullscreen ? <Button small secondary onClick={props.onToggleFullscreen}>\n            <ExitFullscreen />\n        </Button> : <>\n            <div ref={buttonRef}>\n                <Button small secondary onClick={openMenu} dataTest=\"dashboarditem-menu-button\">\n                    <ThreeDots />\n                </Button>\n            </div>\n            {menuIsOpen && <Popover reference={buttonRef} placement=\"auto-start\" arrow={false} onClickOutside={closeMenu}>\n                    <Menu>\n                        {canViewAs && <>\n                                <ViewAsMenuItems />\n                                <Divider />\n                            </>}\n                        <MenuItem dense icon={<LaunchIcon style={{\n          fill: '#6e7a8a'\n        }} />} label={i18n.t('Open in {{appName}} app', {\n          appName: getAppName(item.type)\n        })} href={getLink(item, baseUrl)} target=\"_blank\" />\n                        <MenuItem dense icon={<SpeechBubble />} label={interpretationMenuLabel} onClick={handleInterpretationClick} />\n                        {props.fullscreenSupported && <MenuItem dense icon={<Fullscreen />} label={i18n.t('View fullscreen')} onClick={handleToggleFullscreenClick} />}\n                    </Menu>\n                </Popover>}\n        </>;\n};\n\nItemHeaderButtons.propTypes = {\n  activeFooter: PropTypes.bool,\n  activeType: PropTypes.string,\n  fullscreenSupported: PropTypes.bool,\n  isFullscreen: PropTypes.bool,\n  item: PropTypes.object,\n  visualization: PropTypes.object,\n  onSelectActiveType: PropTypes.func,\n  onToggleFooter: PropTypes.func,\n  onToggleFullscreen: PropTypes.func\n};\nexport default ItemHeaderButtons;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getVisualizationId } from '../../../modules/item';\nimport InterpretationsComponent from '@dhis2/d2-ui-interpretations';\nimport { useD2 } from '@dhis2/app-runtime-adapter-d2';\nimport classes from './styles/ItemFooter.module.css';\n\nconst ItemFooter = props => {\n  const {\n    d2\n  } = useD2({});\n  return <div data-test=\"dashboarditem-footer\">\n            <hr className={classes.line} />\n            <div className={classes.scrollContainer}>\n                <InterpretationsComponent d2={d2} item={props.item} type={props.item.type.toLowerCase()} id={getVisualizationId(props.item)} appName=\"dashboard\" />\n            </div>\n        </div>;\n};\n\nItemFooter.propTypes = {\n  item: PropTypes.object.isRequired\n};\nexport default ItemFooter;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport uniqueId from 'lodash/uniqueId';\nimport Visualization from './Visualization/Visualization';\nimport FatalErrorBoundary from './FatalErrorBoundary';\nimport ItemHeader, { HEADER_MARGIN_HEIGHT } from '../ItemHeader/ItemHeader';\nimport ItemHeaderButtons from './ItemHeaderButtons';\nimport ItemFooter from './ItemFooter';\nimport { apiPostDataStatistics } from '../../../api/dataStatistics';\nimport { apiFetchVisualization } from '../../../api/metadata';\nimport { sGetVisualization } from '../../../reducers/visualizations';\nimport { sGetSelectedItemActiveType } from '../../../reducers/selected';\nimport { sGetIsEditing } from '../../../reducers/editDashboard';\nimport { sGetItemFiltersRoot, DEFAULT_STATE_ITEM_FILTERS } from '../../../reducers/itemFilters';\nimport { sGatherAnalyticalObjectStatisticsInDashboardViews } from '../../../reducers/settings';\nimport { acAddVisualization } from '../../../actions/visualizations';\nimport { acSetSelectedItemActiveType } from '../../../actions/selected';\nimport { pluginIsAvailable } from './Visualization/plugin';\nimport { getDataStatisticsName } from '../../../modules/itemTypes';\nimport { getVisualizationId, getVisualizationName } from '../../../modules/item';\nimport memoizeOne from '../../../modules/memoizeOne';\nimport { isEditMode, isPrintMode, isViewMode } from '../../Dashboard/dashboardModes';\nimport { ITEM_CONTENT_PADDING_BOTTOM } from '../../ItemGrid/ItemGrid';\nexport class Item extends Component {\n  state = {\n    showFooter: false,\n    configLoaded: false,\n    isFullscreen: false\n  };\n\n  constructor(props) {\n    super(props);\n    this.contentRef = React.createRef();\n    this.headerRef = React.createRef();\n    this.itemDomElSelector = `.reactgriditem-${this.props.item.id}`;\n    this.memoizedGetContentHeight = memoizeOne((calculatedHeight, measuredHeight, preferMeasured) => preferMeasured ? measuredHeight || calculatedHeight : calculatedHeight);\n  }\n\n  async componentDidMount() {\n    this.props.updateVisualization(await apiFetchVisualization(this.props.item));\n\n    try {\n      if (this.props.gatherDataStatistics && isViewMode(this.props.dashboardMode)) {\n        await apiPostDataStatistics(getDataStatisticsName(this.props.item.type), getVisualizationId(this.props.item));\n      }\n    } catch (e) {\n      console.log(e);\n    }\n\n    this.setState({\n      configLoaded: true\n    });\n    const el = document.querySelector(this.itemDomElSelector);\n\n    if (el?.requestFullscreen) {\n      el.onfullscreenchange = this.handleFullscreenChange;\n    } else if (el?.webkitRequestFullscreen) {\n      el.onwebkitfullscreenchange = this.handleFullscreenChange;\n    }\n  }\n\n  componentWillUnmount() {\n    const el = document.querySelector(this.itemDomElSelector);\n\n    if (el?.onfullscreenchange) {\n      el.removeEventListener('onfullscreenchange', this.handleFullscreenChange);\n    } else if (el?.onwebkitfullscreenchange) {\n      el.removeEventListener('onwebkitfullscreenchange', this.handleFullscreenChange);\n    }\n  }\n\n  isFullscreenSupported = () => {\n    const el = document.querySelector(this.itemDomElSelector);\n    return !!(el?.requestFullscreen || el?.webkitRequestFullscreen);\n  };\n  handleFullscreenChange = () => {\n    this.setState({\n      isFullscreen: !!document.fullscreenElement || !!document.webkitFullscreenElement\n    });\n  };\n  onToggleFullscreen = () => {\n    if (!this.state.isFullscreen) {\n      const el = document.querySelector(this.itemDomElSelector);\n\n      if (el?.requestFullscreen) {\n        el.requestFullscreen();\n      } else if (el?.webkitRequestFullscreen) {\n        el.webkitRequestFullscreen();\n      }\n    } else {\n      document.exitFullscreen ? document.exitFullscreen() : document.webkitExitFullscreen();\n    }\n  };\n  getUniqueKey = memoizeOne(() => uniqueId());\n  onToggleFooter = () => {\n    this.setState({\n      showFooter: !this.state.showFooter\n    }, this.props.onToggleItemExpanded(this.props.item.id));\n  };\n  setActiveType = type => {\n    type !== this.getActiveType() && this.props.setActiveType(this.props.item.id, type);\n  };\n  getActiveType = () => {\n    if (this.props.isEditing) {\n      return this.props.item.type;\n    }\n\n    return this.props.activeType || this.props.item.type;\n  };\n  getAvailableHeight = () => {\n    if (this.state.isFullscreen) {\n      return '95vh';\n    }\n\n    const calculatedHeight = this.props.item.originalHeight - this.headerRef.current.clientHeight - HEADER_MARGIN_HEIGHT - ITEM_CONTENT_PADDING_BOTTOM;\n    return this.memoizedGetContentHeight(calculatedHeight, this.contentRef ? this.contentRef.offsetHeight : null, isEditMode(this.props.dashboardMode) || isPrintMode(this.props.dashboardMode));\n  };\n\n  render() {\n    const {\n      item,\n      dashboardMode,\n      itemFilters\n    } = this.props;\n    const {\n      showFooter\n    } = this.state;\n    const activeType = this.getActiveType();\n    const actionButtons = pluginIsAvailable(activeType || item.type) ? <ItemHeaderButtons item={item} visualization={this.props.visualization} onSelectActiveType={this.setActiveType} onToggleFooter={this.onToggleFooter} onToggleFullscreen={this.onToggleFullscreen} activeType={activeType} activeFooter={showFooter} isFullscreen={this.state.isFullscreen} fullscreenSupported={this.isFullscreenSupported()} /> : null;\n    return <>\n                <ItemHeader title={getVisualizationName(item)} itemId={item.id} actionButtons={actionButtons} ref={this.headerRef} dashboardMode={dashboardMode} isShortened={item.shortened} />\n                <FatalErrorBoundary>\n                    <div key={this.getUniqueKey(itemFilters)} className=\"dashboard-item-content\" ref={ref => this.contentRef = ref}>\n                        {this.state.configLoaded && <Visualization item={item} activeType={activeType} itemFilters={itemFilters} availableHeight={this.getAvailableHeight()} />}\n                    </div>\n                </FatalErrorBoundary>\n                {isViewMode(dashboardMode) && showFooter ? <ItemFooter item={item} /> : null}\n            </>;\n  }\n\n}\nItem.propTypes = {\n  activeType: PropTypes.string,\n  dashboardMode: PropTypes.string,\n  gatherDataStatistics: PropTypes.bool,\n  isEditing: PropTypes.bool,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object,\n  setActiveType: PropTypes.func,\n  updateVisualization: PropTypes.func,\n  visualization: PropTypes.object,\n  onToggleItemExpanded: PropTypes.func\n};\nItem.defaultProps = {\n  item: {},\n  onToggleItemExpanded: Function.prototype,\n  visualization: {}\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const itemFilters = !isEditMode(ownProps.dashboardMode) ? sGetItemFiltersRoot(state) : DEFAULT_STATE_ITEM_FILTERS;\n  return {\n    activeType: sGetSelectedItemActiveType(state, ownProps.item?.id),\n    isEditing: sGetIsEditing(state),\n    itemFilters,\n    visualization: sGetVisualization(state, getVisualizationId(ownProps.item)),\n    gatherDataStatistics: sGatherAnalyticalObjectStatisticsInDashboardViews(state)\n  };\n};\n\nconst mapDispatchToProps = {\n  setActiveType: acSetSelectedItemActiveType,\n  updateVisualization: acAddVisualization\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Item);","import React from 'react';\nimport { colors } from '@dhis2/ui';\nconst style = {\n  backgroundColor: colors.grey200,\n  border: 'none',\n  height: '1px',\n  margin: '0px 0px 5px 0px'\n};\n\nconst Line = () => <hr style={style} />;\n\nexport default Line;","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { colors } from '@dhis2/ui';\nimport { useConfig } from '@dhis2/app-runtime';\nimport { useD2 } from '@dhis2/app-runtime-adapter-d2';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport Line from '../../../widgets/Line';\nimport { sGetMessagesRoot } from '../../../reducers/messages';\nimport { formatDate } from '../../../modules/util';\nimport { isViewMode } from '../../Dashboard/dashboardModes';\nimport './MessagesItem.css';\nconst PRIVATE = 'PRIVATE';\nconst messageTypes = {\n  [PRIVATE]: 'Private',\n  VALIDATION_RESULT: 'Validation',\n  TICKET: 'Ticket',\n  SYSTEM: 'System'\n};\nconst style = {\n  list: {\n    listStyleType: 'none',\n    paddingLeft: '0px'\n  },\n  seeAll: {\n    textAlign: 'center',\n    fontSize: '13px',\n    marginBottom: '5px'\n  },\n  sender: {\n    fontSize: '13px',\n    lineHeight: '15px',\n    margin: 0,\n    color: colors.grey800\n  },\n  snippet: {\n    color: colors.grey800,\n    fontSize: '13px',\n    lineHeight: '15px',\n    maxHeight: '30px',\n    overflow: 'hidden'\n  }\n};\n\nconst MessagesItem = ({\n  messages,\n  item,\n  dashboardMode\n}) => {\n  const [uiLocale, setUiLocale] = useState('');\n  const {\n    d2\n  } = useD2({});\n  const {\n    baseUrl\n  } = useConfig();\n  useEffect(() => {\n    const getUiLocale = async () => {\n      const uiLocale = await d2.currentUser.userSettings.get('keyUiLocale');\n      setUiLocale(uiLocale);\n    };\n\n    getUiLocale();\n  }, []);\n\n  const getMessageHref = msg => {\n    const msgIdentifier = msg ? `#/${msg.messageType}/${msg.id}` : '';\n    return `${baseUrl}/dhis-web-messaging/${msgIdentifier}`;\n  };\n\n  const getMessageSender = msg => {\n    const latestMsg = msg.messages.slice(-1)[0];\n    return latestMsg.sender ? latestMsg.sender.displayName : '';\n  };\n\n  const getMessageItems = () => {\n    const modeClass = isViewMode(dashboardMode) ? 'view' : null;\n    return messages.map(msg => {\n      const redirectToMsg = () => {\n        if (isViewMode(dashboardMode)) {\n          document.location.href = getMessageHref(msg);\n        }\n      };\n\n      const sender = msg.messageType === PRIVATE ? getMessageSender(msg) : messageTypes[msg.messageType];\n      const readClass = !msg.read ? 'unread' : null;\n      const latestMsg = msg.messages.slice(-1)[0];\n      const msgDate = latestMsg.lastUpdated;\n      return <li className={`message-item ${modeClass}`} key={msg.id} onClick={redirectToMsg}>\n                    <p className={`message-title ${readClass}`}>\n                        {msg.displayName} ({msg.messageCount})\n                    </p>\n                    <p style={style.sender}>\n                        {sender} - {formatDate(msgDate, uiLocale)}\n                    </p>\n                    <p style={style.snippet}>{latestMsg.text}</p>\n                </li>;\n    });\n  };\n\n  return <>\n            <ItemHeader title={i18n.t('Messages')} itemId={item.id} dashboardMode={dashboardMode} isShortened={item.shortened} />\n            <Line />\n            {messages.length > 0 && <div className=\"dashboard-item-content\">\n                    <ul style={style.list}>{getMessageItems()}</ul>\n                    <div style={style.seeAll}>\n                        <a href={getMessageHref()}>\n                            {i18n.t('See all messages')}\n                        </a>\n                    </div>\n                </div>}\n        </>;\n};\n\nMessagesItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  messages: PropTypes.array\n};\n\nconst mapStateToProps = state => {\n  return {\n    messages: Object.values(sGetMessagesRoot(state))\n  };\n};\n\nconst MessagesContainer = connect(mapStateToProps, null)(MessagesItem);\nexport default MessagesContainer;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nconst NotSupportedItem = props => <>\n        <ItemHeader title={i18n.t('Item type \"{{type}}\" not supported', {\n    type: props.item.type\n  })} itemId={props.item.id} dashboardMode={props.dashboardMode} isShortened={props.item.shortened} />\n        <div style={{\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '90%'\n  }}>\n            <NotInterestedIcon style={{\n      width: 100,\n      height: 100,\n      align: 'center'\n    }} color=\"disabled\" />\n        </div>\n    </>;\n\nNotSupportedItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object\n};\nexport default NotSupportedItem;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst DescriptionIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill={colors.grey500}>\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M14 2H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6zm2 16H8v-2h8v2zm0-4H8v-2h8v2zm-3-5V3.5L18.5 9H13z\" />\n    </svg>;\n\nDescriptionIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default DescriptionIcon;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst DeleteIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill={colors.red500}>\n        <path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>;\n\nDeleteIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default DeleteIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { colors } from '@dhis2/ui';\nimport { useConfig } from '@dhis2/app-runtime';\nimport DescriptionIcon from '../../../icons/Description';\nimport DeleteIcon from '../../../icons/Delete';\nimport Line from '../../../widgets/Line';\nimport { itemTypeMap, getItemUrl } from '../../../modules/itemTypes';\nimport { orArray } from '../../../modules/util';\nimport { tRemoveListItemContent } from './actions';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport { isEditMode } from '../../Dashboard/dashboardModes';\nimport classes from './Item.module.css';\n\nconst getItemTitle = item => itemTypeMap[item.type].pluralTitle;\n\nconst getContentItems = item => orArray(item[itemTypeMap[item.type].propName]).filter((item, index, array) => array.findIndex(el => el.id === item.id) === index);\n\nconst ListItem = ({\n  item,\n  dashboardMode,\n  tRemoveListItemContent\n}) => {\n  const {\n    baseUrl\n  } = useConfig();\n  const contentItems = getContentItems(item);\n\n  const getLink = contentItem => {\n    const deleteButton = <button className={classes.deletebutton} onClick={() => tRemoveListItemContent(item, contentItem)}>\n                <DeleteIcon className={classes.deleteicon} />\n            </button>;\n    return <>\n                <a className={classes.link} style={{\n        color: colors.grey900\n      }} href={getItemUrl(item.type, contentItem, baseUrl)}>\n                    {contentItem.name}\n                </a>\n                {isEditMode(dashboardMode) ? deleteButton : null}\n            </>;\n  };\n\n  return <>\n            <ItemHeader title={getItemTitle(item)} itemId={item.id} dashboardMode={dashboardMode} isShortened={item.shortened} />\n            <Line />\n            <div className=\"dashboard-item-content\">\n                <ul className={classes.list}>\n                    {contentItems.map(contentItem => <li className={classes.item} key={contentItem.id}>\n                            <DescriptionIcon className={classes.itemicon} />\n                            {getLink(contentItem)}\n                        </li>)}\n                </ul>\n            </div>\n        </>;\n};\n\nListItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  tRemoveListItemContent: PropTypes.func\n};\nexport default connect(null, {\n  tRemoveListItemContent\n})(ListItem);","import { acUpdateDashboardItem, acRemoveDashboardItem } from '../../../actions/editDashboard';\nimport { itemTypeMap } from '../../../modules/itemTypes';\nexport const tRemoveListItemContent = (dashboardItem, content) => dispatch => {\n  const listItemType = itemTypeMap[dashboardItem.type].propName;\n  const newContent = dashboardItem[listItemType].filter(item => item.id !== content.id);\n\n  if (newContent.length) {\n    dashboardItem[listItemType] = newContent;\n    dispatch(acUpdateDashboardItem(dashboardItem));\n  } else {\n    dispatch(acRemoveDashboardItem(dashboardItem));\n  }\n};","/** @module reducers/editDashboard */\nimport update from 'immutability-helper';\nimport isEmpty from 'lodash/isEmpty';\nimport { orArray } from '../modules/util';\nexport const SET_PRINT_DASHBOARD = 'SET_PRINT_DASHBOARD';\nexport const CLEAR_PRINT_DASHBOARD = 'CLEAR_PRINT_DASHBOARD';\nexport const ADD_PRINT_DASHBOARD_ITEM = 'ADD_PRINT_DASHBOARD_ITEM';\nexport const SET_PRINT_DASHBOARD_LAYOUT = 'SET_PRINT_DASHBOARD_LAYOUT';\nexport const REMOVE_PRINT_DASHBOARD_ITEM = 'REMOVE_PRINT_DASHBOARD_ITEM';\nexport const UPDATE_PRINT_DASHBOARD_ITEM = 'UPDATE_PRINT_DASHBOARD_ITEM';\nexport const DEFAULT_STATE_PRINT_DASHBOARD = {};\nconst DEFAULT_DASHBOARD_ITEMS = [];\nexport const NEW_PRINT_DASHBOARD_STATE = {\n  id: '',\n  name: '',\n  access: {},\n  description: '',\n  dashboardItems: DEFAULT_DASHBOARD_ITEMS\n};\nexport default ((state = DEFAULT_STATE_PRINT_DASHBOARD, action) => {\n  switch (action.type) {\n    case SET_PRINT_DASHBOARD:\n      {\n        const newState = {};\n        Object.keys(NEW_PRINT_DASHBOARD_STATE).map(k => newState[k] = action.value[k]);\n        return newState;\n      }\n\n    case CLEAR_PRINT_DASHBOARD:\n      return DEFAULT_STATE_PRINT_DASHBOARD;\n\n    case ADD_PRINT_DASHBOARD_ITEM:\n      if (!action.value.position) {\n        return update(state, {\n          dashboardItems: {\n            $unshift: [action.value]\n          }\n        });\n      }\n\n      return update(state, {\n        dashboardItems: {\n          $splice: [[parseInt(action.value.position), 0, action.value]]\n        }\n      });\n\n    case REMOVE_PRINT_DASHBOARD_ITEM:\n      {\n        const idToRemove = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === idToRemove);\n\n        if (dashboardItemIndex > -1) {\n          return update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1]]\n            }\n          });\n        }\n\n        return state;\n      }\n\n    case UPDATE_PRINT_DASHBOARD_ITEM:\n      {\n        const dashboardItem = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === dashboardItem.id);\n\n        if (dashboardItemIndex > -1) {\n          const newState = update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1, Object.assign({}, dashboardItem)]]\n            }\n          });\n          return newState;\n        }\n\n        return state;\n      }\n\n    case SET_PRINT_DASHBOARD_LAYOUT:\n      {\n        const stateItems = orArray(state.dashboardItems);\n        let layoutHasChanged = false;\n        const newStateItems = action.value.map(({\n          x,\n          y,\n          w,\n          h,\n          i\n        }) => {\n          const stateItem = stateItems.find(si => si.id === i);\n\n          if (!(stateItem.x === x && stateItem.y === y && stateItem.w === w && stateItem.h === h)) {\n            layoutHasChanged = true;\n            return Object.assign({}, stateItem, {\n              w,\n              h,\n              x,\n              y\n            });\n          }\n\n          return stateItem;\n        });\n        return layoutHasChanged ? { ...state,\n          dashboardItems: newStateItems\n        } : state;\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetPrintDashboardRoot = state => state.printDashboard; // selectors\n\nexport const sGetIsPrinting = state => !isEmpty(state.printDashboard);\nexport const sGetPrintDashboardName = state => sGetPrintDashboardRoot(state).name;\nexport const sGetPrintDashboardDescription = state => sGetPrintDashboardRoot(state).description;\nexport const sGetPrintDashboardItems = state => {\n  return sGetPrintDashboardRoot(state)?.dashboardItems || DEFAULT_DASHBOARD_ITEMS;\n};","import React from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport Input from '@material-ui/core/Input';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport PrintItemInfo from '../ItemHeader/PrintItemInfo';\nimport Line from '../../../widgets/Line';\nimport { Parser as RichTextParser, Editor as RichTextEditor } from '@dhis2/d2-ui-rich-text';\nimport { acUpdateDashboardItem } from '../../../actions/editDashboard';\nimport { sGetEditDashboardItems } from '../../../reducers/editDashboard';\nimport { sGetDashboardItems } from '../../../reducers/dashboards';\nimport { sGetIsPrinting, sGetPrintDashboardItems } from '../../../reducers/printDashboard';\nimport { isEditMode, PRINT_LAYOUT } from '../../Dashboard/dashboardModes';\nconst style = {\n  textDiv: {\n    padding: '10px',\n    whiteSpace: 'pre-line',\n    lineHeight: '20px'\n  },\n  textField: {\n    fontSize: '14px',\n    fontStretch: 'normal',\n    width: '90%',\n    margin: '0 auto',\n    display: 'block',\n    lineHeight: '24px'\n  },\n  container: {\n    marginBottom: '20px',\n    marginTop: '20px'\n  }\n};\n\nconst TextItem = props => {\n  const {\n    item,\n    dashboardMode,\n    text,\n    acUpdateDashboardItem\n  } = props;\n\n  const onChangeText = event => {\n    const updatedItem = { ...item,\n      text: event.target.value\n    };\n    acUpdateDashboardItem(updatedItem);\n  };\n\n  const viewItem = () => {\n    const textDivStyle = Object.assign({}, style.textField, style.textDiv);\n    return <div className=\"dashboard-item-content\" style={style.container}>\n                <RichTextParser style={textDivStyle}>{text}</RichTextParser>\n            </div>;\n  };\n\n  const editItem = () => {\n    return <>\n                <ItemHeader title={i18n.t('Text item')} itemId={item.id} dashboardMode={dashboardMode} />\n                <Line />\n                <div className=\"dashboard-item-content\">\n                    <RichTextEditor onEdit={onChangeText}>\n                        <Input value={text} multiline fullWidth style={style.textField} placeholder={i18n.t('Add text here')} onChange={onChangeText} />\n                    </RichTextEditor>\n                </div>\n            </>;\n  };\n\n  const printItem = () => {\n    const textDivStyle = Object.assign({}, style.textField, style.textDiv);\n    return <>\n                {props.item.shortened ? <PrintItemInfo /> : null}\n                <div className=\"dashboard-item-content\" style={style.container}>\n                    <RichTextParser style={textDivStyle}>{text}</RichTextParser>\n                </div>\n            </>;\n  };\n\n  let textItem;\n\n  if (isEditMode(dashboardMode)) {\n    textItem = editItem;\n  } else if (dashboardMode === PRINT_LAYOUT) {\n    textItem = printItem;\n  } else {\n    textItem = viewItem;\n  }\n\n  return <>{textItem()}</>;\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const isPrintPreview = sGetIsPrinting(state);\n  let items;\n\n  if (isPrintPreview) {\n    items = sGetPrintDashboardItems(state);\n  } else if (isEditMode(ownProps.dashboardMode)) {\n    items = sGetEditDashboardItems(state);\n  } else {\n    items = sGetDashboardItems(state);\n  }\n\n  const item = items.find(item => item.id === ownProps.item.id);\n  return {\n    text: item ? item.text : ''\n  };\n};\n\nTextItem.propTypes = {\n  acUpdateDashboardItem: PropTypes.func,\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  text: PropTypes.string\n};\nexport default connect(mapStateToProps, {\n  acUpdateDashboardItem\n})(TextItem);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\nimport { useD2 } from '@dhis2/app-runtime-adapter-d2';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport Line from '../../../widgets/Line';\nimport { FILTER_ORG_UNIT } from '../../../actions/itemFilters';\nimport { sGetItemFiltersRoot, DEFAULT_STATE_ITEM_FILTERS } from '../../../reducers/itemFilters';\nimport { EDIT, isEditMode } from '../../Dashboard/dashboardModes';\n\nconst getIframeSrc = (appDetails, item, itemFilters) => {\n  let iframeSrc = `${appDetails.launchUrl}?dashboardItemId=${item.id}`;\n\n  if (itemFilters[FILTER_ORG_UNIT] && itemFilters[FILTER_ORG_UNIT].length) {\n    const ouIds = itemFilters[FILTER_ORG_UNIT].map(ouFilter => ouFilter.path.split('/').slice(-1)[0]);\n    iframeSrc += `&userOrgUnit=${ouIds.join(',')}`;\n  }\n\n  return iframeSrc;\n};\n\nconst AppItem = ({\n  dashboardMode,\n  item,\n  itemFilters\n}) => {\n  const {\n    d2\n  } = useD2({});\n  let appDetails;\n  const appKey = item.appKey;\n\n  if (appKey) {\n    appDetails = d2.system.installedApps.find(app => app.key === appKey);\n  }\n\n  const hideTitle = appDetails?.settings?.dashboardWidget?.hideTitle && dashboardMode !== EDIT;\n  return appDetails && appDetails.name && appDetails.launchUrl ? <>\n            {!hideTitle && <>\n                    <ItemHeader title={appDetails.name} itemId={item.id} dashboardMode={dashboardMode} isShortened={item.shortened} />\n                    <Line />\n                </>}\n            <iframe title={appDetails.name} src={getIframeSrc(appDetails, item, itemFilters)} className={!hideTitle ? 'dashboard-item-content' : 'dashboard-item-content-hidden-title'} style={{\n      border: 'none'\n    }} />\n        </> : <>\n            <ItemHeader title={`${appKey} app not found`} />\n            <Line />\n            <div className=\"dashboard-item-content\" style={{\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      height: '90%'\n    }}>\n                <NotInterestedIcon color=\"disabled\" disabled style={{\n        width: 100,\n        height: 100,\n        align: 'center'\n      }} />\n            </div>\n        </>;\n};\n\nAppItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const itemFilters = !isEditMode(ownProps.dashboardMode) ? sGetItemFiltersRoot(state) : DEFAULT_STATE_ITEM_FILTERS;\n  return {\n    itemFilters\n  };\n};\n\nexport default connect(mapStateToProps)(AppItem);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { colors } from '@dhis2/ui';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nconst style = {\n  margin: '21px 28px',\n  fontSize: '14px',\n  lineHeight: '18px',\n  color: colors.grey600\n};\n\nconst SpacerItem = props => {\n  return <>\n            <ItemHeader title={i18n.t('Spacer')} itemId={props.item.id} dashboardMode={props.dashboardMode} isShortened={props.item.shortened} />\n            <p style={style}>\n                {i18n.t('Use a spacer to create empty vertical space between other dashboard items.')}\n            </p>\n        </>;\n};\n\nSpacerItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object\n};\nexport default SpacerItem;","import React from 'react';\n\nconst PageBreakItem = () => <div />;\n\nexport default PageBreakItem;","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { sGetSelectedId, sGetSelectedShowDescription } from '../../../reducers/selected';\nimport { sGetDashboardById, EMPTY_DASHBOARD } from '../../../reducers/dashboards';\nimport { sGetNamedItemFilters } from '../../../reducers/itemFilters';\nimport { sGetIsEditing } from '../../../reducers/editDashboard';\nimport { sGetPrintDashboardName, sGetPrintDashboardDescription } from '../../../reducers/printDashboard';\nimport classes from './styles/Item.module.css';\n\nconst PrintTitlePageItem = ({\n  name,\n  description,\n  itemFilters,\n  showDescription\n}) => {\n  const getItemFilterList = () => {\n    const listItems = itemFilters.map(({\n      name,\n      values\n    }) => <li className={classes.filterListItem} key={name}>\n                {name}: {values.map(val => val.name).join(', ')}\n            </li>);\n    return <ul className={classes.filterList}>{listItems}</ul>;\n  };\n\n  return <div className={classes.titlePage}>\n            <p className={classes.name}>{name}</p>\n            {showDescription && description && <p className={classes.description}>{description}</p>}\n            {itemFilters.length > 0 && <>\n                    <p className={classes.filterTitle}>\n                        {i18n.t('Filters applied')}\n                    </p>\n                    {getItemFilterList()}\n                </>}\n        </div>;\n};\n\nPrintTitlePageItem.propTypes = {\n  description: PropTypes.string,\n  itemFilters: PropTypes.array,\n  name: PropTypes.string,\n  showDescription: PropTypes.bool\n};\nPrintTitlePageItem.defaultProps = {\n  description: '',\n  name: '',\n  showDescription: false\n};\n\nconst mapStateToProps = state => {\n  const id = sGetSelectedId(state);\n  const isEditMode = sGetIsEditing(state);\n  const viewDashboard = sGetDashboardById(state, id) || EMPTY_DASHBOARD;\n  const name = isEditMode ? sGetPrintDashboardName(state) || i18n.t('Untitled dashboard') : viewDashboard.displayName;\n  const description = isEditMode ? sGetPrintDashboardDescription(state) : viewDashboard.displayDescription;\n  return {\n    name,\n    description,\n    itemFilters: sGetNamedItemFilters(state),\n    showDescription: sGetSelectedShowDescription(state)\n  };\n};\n\nexport default connect(mapStateToProps)(PrintTitlePageItem);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport VisualizationItem from './VisualizationItem/Item';\nimport MessagesItem from './MessagesItem/Item';\nimport NotSupportedItem from './NotSupportedItem/Item';\nimport ListItem from './ListItem/Item';\nimport TextItem from './TextItem/Item';\nimport AppItem from './AppItem/Item';\nimport SpacerItem from './SpacerItem/Item';\nimport PageBreakItem from './PageBreakItem/Item';\nimport PrintTitlePageItem from './PrintTitlePageItem/Item';\nimport { APP, VISUALIZATION, REPORT_TABLE, CHART, MAP, EVENT_CHART, EVENT_REPORT, MESSAGES, REPORTS, RESOURCES, USERS, TEXT, SPACER, PAGEBREAK, PRINT_TITLE_PAGE } from '../../modules/itemTypes';\n\nconst getGridItem = type => {\n  switch (type) {\n    case VISUALIZATION:\n    case REPORT_TABLE:\n    case CHART:\n    case MAP:\n    case EVENT_CHART:\n    case EVENT_REPORT:\n      return VisualizationItem;\n\n    case MESSAGES:\n      return MessagesItem;\n\n    case REPORTS:\n    case RESOURCES:\n    case USERS:\n      return ListItem;\n\n    case TEXT:\n      return TextItem;\n\n    case SPACER:\n      return SpacerItem;\n\n    case APP:\n      return AppItem;\n\n    case PAGEBREAK:\n      return PageBreakItem;\n\n    case PRINT_TITLE_PAGE:\n      return PrintTitlePageItem;\n\n    default:\n      return NotSupportedItem;\n  }\n};\n\nexport const Item = props => {\n  const GridItem = getGridItem(props.item.type);\n  return <GridItem item={props.item} dashboardMode={props.dashboardMode} onToggleItemExpanded={props.onToggleItemExpanded} />;\n};\nItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  onToggleItemExpanded: PropTypes.func\n};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash/debounce';\nimport pick from 'lodash/pick';\nconst defaultDebounceMs = 100;\nconst defaultBufferFactor = 0.25;\n\nclass ProgressiveLoadingContainer extends Component {\n  static propTypes = {\n    children: PropTypes.node.isRequired,\n    bufferFactor: PropTypes.number,\n    className: PropTypes.string,\n    debounceMs: PropTypes.number,\n    style: PropTypes.object\n  };\n  static defaultProps = {\n    debounceMs: defaultDebounceMs,\n    bufferFactor: defaultBufferFactor\n  };\n  state = {\n    shouldLoad: false\n  };\n  containerRef = null;\n  shouldLoadHandler = null;\n  handlerOptions = {\n    passive: true\n  };\n\n  checkShouldLoad() {\n    if (!this.containerRef) {\n      return;\n    }\n\n    const bufferPx = this.props.bufferFactor * window.innerHeight;\n    const rect = this.containerRef.getBoundingClientRect();\n\n    if (rect.bottom > -bufferPx && rect.top < window.innerHeight + bufferPx) {\n      this.setState({\n        shouldLoad: true\n      });\n      this.removeHandler();\n    }\n  }\n\n  registerHandler() {\n    this.shouldLoadHandler = debounce(() => this.checkShouldLoad(), this.props.debounceMs);\n    document.getElementsByClassName('dashboard-wrapper')[0]?.addEventListener('scroll', this.shouldLoadHandler, this.handlerOptions);\n  }\n\n  removeHandler() {\n    document.getElementsByClassName('dashboard-wrapper')[0]?.removeEventListener('scroll', this.shouldLoadHandler, this.handlerOptions);\n  }\n\n  componentDidMount() {\n    this.registerHandler();\n    this.checkShouldLoad();\n  }\n\n  componentWillUnmount() {\n    this.removeHandler();\n  }\n\n  render() {\n    const {\n      children,\n      className,\n      style,\n      ...props\n    } = this.props;\n    const {\n      shouldLoad\n    } = this.state;\n    const eventProps = pick(props, ['onMouseDown', 'onTouchStart', 'onMouseUp', 'onTouchEnd']);\n    return <div ref={ref => this.containerRef = ref} style={style} className={className} data-test={`dashboarditem-${props.itemId}`} {...eventProps}>\n                {shouldLoad && children}\n            </div>;\n  }\n\n}\n\nexport default ProgressiveLoadingContainer;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ReactGridLayout from 'react-grid-layout';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport { acUpdateDashboardLayout } from '../../actions/editDashboard';\nimport { Item } from '../Item/Item';\nimport { resize as pluginResize } from '../Item/VisualizationItem/Visualization/plugin';\nimport { isVisualizationType } from '../../modules/itemTypes';\nimport { GRID_ROW_HEIGHT, GRID_COMPACT_TYPE, MARGIN, getGridColumns, hasShape, onItemResize } from './gridUtil';\nimport { orArray } from '../../modules/util';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\nimport './ItemGrid.css';\nimport { sGetSelectedId, sGetSelectedIsLoading } from '../../reducers/selected';\nimport { sGetEditDashboardRoot, sGetEditDashboardItems } from '../../reducers/editDashboard';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport ProgressiveLoadingContainer from '../Item/ProgressiveLoadingContainer';\nimport { VIEW, EDIT } from '../Dashboard/dashboardModes'; // Component\n\nconst EXPANDED_HEIGHT = 17; // this is set in the .dashboard-item-content css\n\nexport const ITEM_CONTENT_PADDING_BOTTOM = 4;\nexport class ItemGrid extends Component {\n  state = {\n    expandedItems: {}\n  };\n  onToggleItemExpanded = clickedId => {\n    const isExpanded = typeof this.state.expandedItems[clickedId] === 'boolean' ? this.state.expandedItems[clickedId] : false;\n    const expandedItems = { ...this.state.expandedItems\n    };\n    expandedItems[clickedId] = !isExpanded;\n    this.setState({\n      expandedItems\n    });\n  };\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.edit) {\n      this.setState({\n        expandedItems: {}\n      });\n    }\n  }\n\n  onLayoutChange = newLayout => {\n    if (this.props.edit) {\n      this.props.acUpdateDashboardLayout(newLayout);\n    }\n  };\n  onResizeStop = (layout, oldItem, newItem) => {\n    onItemResize(newItem.i);\n    const dashboardItem = this.props.dashboardItems.find(item => item.id === newItem.i); // call resize on the item component if it's a plugin type\n\n    if (dashboardItem && isVisualizationType(dashboardItem)) {\n      pluginResize(dashboardItem);\n    }\n  };\n  adjustHeightForExpanded = dashboardItem => {\n    const expandedItem = this.state.expandedItems[dashboardItem.id];\n\n    if (expandedItem && expandedItem === true) {\n      return Object.assign({}, dashboardItem, {\n        h: dashboardItem.h + EXPANDED_HEIGHT\n      });\n    }\n\n    return dashboardItem;\n  };\n  getItemComponent = item => {\n    const itemClassNames = [item.type, this.props.edit ? 'edit' : 'view', `reactgriditem-${item.id}`].join(' ');\n    return <ProgressiveLoadingContainer key={item.i} className={itemClassNames} itemId={item.id}>\n                <Item item={item} dashboardMode={this.props.edit ? EDIT : VIEW} onToggleItemExpanded={this.onToggleItemExpanded} />\n            </ProgressiveLoadingContainer>;\n  };\n  getItemComponents = items => items.map(item => this.getItemComponent(item));\n\n  render() {\n    const {\n      edit,\n      isLoading,\n      dashboardItems\n    } = this.props;\n\n    if (!isLoading && !dashboardItems.length) {\n      return <NoContentMessage text={i18n.t('There are no items on this dashboard')} />;\n    }\n\n    const items = edit ? dashboardItems : dashboardItems.map(this.adjustHeightForExpanded);\n    return <div className=\"grid-wrapper\">\n                {isLoading ? <Layer translucent>\n                        <CenteredContent>\n                            <CircularLoader />\n                        </CenteredContent>\n                    </Layer> : null}\n                <ReactGridLayout onLayoutChange={this.onLayoutChange} onResizeStop={this.onResizeStop} className=\"layout\" layout={items} margin={MARGIN} cols={getGridColumns()} rowHeight={GRID_ROW_HEIGHT} width={window.innerWidth} compactType={GRID_COMPACT_TYPE} isDraggable={edit} isResizable={edit} draggableCancel=\"input,textarea\">\n                    {this.getItemComponents(items)}\n                </ReactGridLayout>\n            </div>;\n  }\n\n}\nItemGrid.propTypes = {\n  acUpdateDashboardLayout: PropTypes.func,\n  dashboardItems: PropTypes.array,\n  edit: PropTypes.bool,\n  isLoading: PropTypes.bool\n};\nItemGrid.defaultProps = {\n  dashboardItems: []\n}; // Container\n\nconst mapStateToProps = (state, ownProps) => {\n  const selectedDashboard = ownProps.edit ? sGetEditDashboardRoot(state) : sGetDashboardById(state, sGetSelectedId(state));\n  const dashboardItems = ownProps.edit ? sGetEditDashboardItems(state) : sGetDashboardItems(state);\n  return {\n    isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n    dashboardItems\n  };\n};\n\nconst mapDispatchToProps = {\n  acUpdateDashboardLayout\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n  const validItems = orArray(stateProps.dashboardItems).filter(hasShape);\n  return { ...dispatchProps,\n    edit: ownProps.edit,\n    isLoading: stateProps.isLoading,\n    dashboardItems: validItems,\n    onItemResize\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps, mergeProps)(ItemGrid);","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { colors } from '@dhis2/ui';\nconst styles = {\n  badgeContainer: {\n    margin: '2px',\n    padding: '0 16px',\n    borderRadius: '4px',\n    color: colors.white,\n    backgroundColor: '#212934',\n    height: 36,\n    display: 'flex',\n    alignItems: 'center'\n  },\n  badge: {\n    fontSize: '13px',\n    cursor: 'pointer',\n    whiteSpace: 'nowrap'\n  },\n  badgeRemove: {\n    fontSize: '12px',\n    textDecoration: 'underline',\n    marginLeft: '24px',\n    cursor: 'pointer'\n  }\n};\n\nclass FilterBadge extends Component {\n  onClick = id => () => this.props.onClick(id);\n  onRemove = id => () => this.props.onRemove(id);\n\n  render() {\n    const {\n      data\n    } = this.props;\n    return <div style={styles.badgeContainer} data-test=\"dashboard-filter-badge\">\n                <span style={styles.badge} onClick={this.onClick(data.id)}>\n                    {`${data.name}: ${data.values.length > 1 ? i18n.t('{{count}} selected', {\n          count: data.values.length\n        }) : data.values[0].name}`}\n                </span>\n                <span style={styles.badgeRemove} onClick={this.onRemove(data.id)}>\n                    {i18n.t('Remove')}\n                </span>\n            </div>;\n  }\n\n}\n\nFilterBadge.propTypes = {\n  data: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired,\n  onRemove: PropTypes.func.isRequired\n};\nFilterBadge.defaultProps = {\n  onClick: Function.prototype,\n  onRemove: Function.prototype\n};\nexport default FilterBadge;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport FilterBadge from './FilterBadge';\nimport { sGetNamedItemFilters } from '../../reducers/itemFilters';\nimport { acRemoveItemFilter } from '../../actions/itemFilters';\nimport { acSetActiveModalDimension } from '../../actions/activeModalDimension';\nimport classes from './styles/FilterBar.module.css';\nexport class FilterBar extends Component {\n  onBadgeRemove = id => {\n    this.props.removeItemFilter(id);\n  };\n  onBadgeClick = id => {\n    this.props.setActiveModalDimension({\n      id,\n      name: this.props.filters.find(item => item.id === id).name\n    });\n  };\n\n  render() {\n    const {\n      filters\n    } = this.props;\n    return filters.length ? // the 3 is calculated so that the FilterBar has the same vertical position as the TitleBar in relation to the ControlBar\n    <div className={classes.bar} style={{\n      top: 3\n    }}>\n                {filters.map(filter => <FilterBadge key={filter.id} data={filter} onClick={this.onBadgeClick} onRemove={this.onBadgeRemove} />)}\n            </div> : null;\n  }\n\n}\nFilterBar.propTypes = {\n  filters: PropTypes.array.isRequired,\n  removeItemFilter: PropTypes.func.isRequired,\n  setActiveModalDimension: PropTypes.func\n};\nFilterBar.defaultProps = {\n  filters: [],\n  removeItemFIlter: Function.prototype\n};\n\nconst mapStateToProps = state => ({\n  filters: sGetNamedItemFilters(state)\n});\n\nexport default connect(mapStateToProps, {\n  setActiveModalDimension: acSetActiveModalDimension,\n  removeItemFilter: acRemoveItemFilter\n})(FilterBar);","export const SET_WINDOW_HEIGHT = 'SET_WINDOW_HEIGHT';\nexport const DEFAULT_STATE_WINDOW_HEIGHT = window.innerHeight;\nexport default ((state = DEFAULT_STATE_WINDOW_HEIGHT, action) => {\n  switch (action.type) {\n    case SET_WINDOW_HEIGHT:\n      {\n        return action.value;\n      }\n\n    default:\n      return state;\n  }\n});\nexport const sGetWindowHeight = state => state.windowHeight;","import { generateUid } from 'd2/uid';\nimport { SET_PRINT_DASHBOARD, CLEAR_PRINT_DASHBOARD, SET_PRINT_DASHBOARD_LAYOUT, ADD_PRINT_DASHBOARD_ITEM, REMOVE_PRINT_DASHBOARD_ITEM, UPDATE_PRINT_DASHBOARD_ITEM } from '../reducers/printDashboard';\nimport { NEW_ITEM_SHAPE, getGridItemProperties, getPageBreakItemShape, getPrintTitlePageItemShape } from '../components/ItemGrid/gridUtil';\nimport { itemTypeMap, PAGEBREAK } from '../modules/itemTypes'; // actions\n\nexport const acSetPrintDashboard = (dashboard, items) => {\n  const val = { ...dashboard,\n    dashboardItems: items\n  };\n  return {\n    type: SET_PRINT_DASHBOARD,\n    value: val\n  };\n};\nexport const acClearPrintDashboard = () => ({\n  type: CLEAR_PRINT_DASHBOARD\n});\nexport const acUpdatePrintDashboardLayout = value => ({\n  type: SET_PRINT_DASHBOARD_LAYOUT,\n  value\n});\nexport const acAddPrintDashboardItem = item => {\n  const type = item.type;\n  delete item.type;\n  const itemPropName = itemTypeMap[type].propName;\n  const id = generateUid();\n  const gridItemProperties = getGridItemProperties(id);\n  let shape;\n\n  if (type === PAGEBREAK) {\n    const yPos = item.yPos || 0;\n    shape = getPageBreakItemShape(yPos, item.isStatic);\n  } else {\n    shape = getPrintTitlePageItemShape(item.isOneItemPerPage);\n  }\n\n  return {\n    type: ADD_PRINT_DASHBOARD_ITEM,\n    value: {\n      id,\n      type,\n      position: item.position || null,\n      [itemPropName]: item.content,\n      ...NEW_ITEM_SHAPE,\n      ...gridItemProperties,\n      ...shape\n    }\n  };\n};\nexport const acRemovePrintDashboardItem = value => ({\n  type: REMOVE_PRINT_DASHBOARD_ITEM,\n  value\n});\nexport const acUpdatePrintDashboardItem = item => ({\n  type: UPDATE_PRINT_DASHBOARD_ITEM,\n  value: item\n});","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport ViewTitleBar from '../TitleBar/ViewTitleBar';\nimport ItemGrid from '../ItemGrid/ItemGrid';\nimport FilterBar from '../FilterBar/FilterBar';\nimport DashboardsBar from '../ControlBar/DashboardsBar';\nimport { sGetIsEditing } from '../../reducers/editDashboard';\nimport { sGetIsPrinting } from '../../reducers/printDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { sGetWindowHeight } from '../../reducers/windowHeight';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { acClearEditDashboard } from '../../actions/editDashboard';\nimport { acClearPrintDashboard } from '../../actions/printDashboard';\nimport { getControlBarHeight, HEADERBAR_HEIGHT } from '../ControlBar/controlBarDimensions';\nexport const ViewDashboard = props => {\n  useEffect(() => {\n    if (props.dashboardIsEditing) {\n      props.clearEditDashboard();\n    } else if (props.dashboardIsPrinting) {\n      props.clearPrintDashboard();\n    }\n  }, [props.dashboardIsEditing, props.dashboardIsPrinting]);\n  useEffect(() => {\n    document.querySelector('.dashboard-wrapper')?.scroll(0, 0);\n  }, [props.selectedId]);\n  const height = props.windowHeight - HEADERBAR_HEIGHT - getControlBarHeight(props.controlBarRows);\n  return <>\n            <DashboardsBar />\n            <div className=\"dashboard-wrapper\" style={{\n      height\n    }}>\n                <ViewTitleBar />\n                <FilterBar />\n                <ItemGrid edit={false} />\n            </div>\n        </>;\n};\nViewDashboard.propTypes = {\n  clearEditDashboard: PropTypes.func,\n  clearPrintDashboard: PropTypes.func,\n  controlBarRows: PropTypes.number,\n  dashboardIsEditing: PropTypes.bool,\n  dashboardIsPrinting: PropTypes.bool,\n  selectedId: PropTypes.string,\n  windowHeight: PropTypes.number\n};\n\nconst mapStateToProps = state => {\n  return {\n    dashboardIsEditing: sGetIsEditing(state),\n    dashboardIsPrinting: sGetIsPrinting(state),\n    controlBarRows: sGetControlBarUserRows(state),\n    selectedId: sGetSelectedId(state),\n    windowHeight: sGetWindowHeight(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  clearEditDashboard: acClearEditDashboard,\n  clearPrintDashboard: acClearPrintDashboard\n})(ViewDashboard);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { InputField } from '@dhis2/ui';\n\nconst ItemSearchField = props => <InputField name=\"Dashboard item search\" label={i18n.t('Search for items to add to this dashboard')} type=\"text\" onChange={props.onChange} onFocus={props.onFocus} value={props.value} dataTest=\"item-search\" />;\n\nItemSearchField.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n  onFocus: PropTypes.func\n};\nexport default ItemSearchField;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { MenuItem, colors } from '@dhis2/ui';\nimport classes from './styles/HeaderMenuItem.module.css';\n\nconst HeaderMenuItem = ({\n  title\n}) => <MenuItem className={classes.item} dense key={title} disabled label={<span style={{\n  color: colors.grey800,\n  fontWeight: '600'\n}}>\n                {title}\n            </span>} />;\n\nHeaderMenuItem.propTypes = {\n  title: PropTypes.string.isRequired\n};\nexport default HeaderMenuItem;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst LaunchIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\" fill={colors.grey600} viewBox=\"0 0 24 24\">\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z\" />\n    </svg>;\n\nLaunchIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default LaunchIcon;","import React from 'react';\nimport { MenuItem, colors } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport { visTypeIcons } from '@dhis2/analytics';\nimport { getItemIcon, VISUALIZATION } from '../../modules/itemTypes';\nimport LaunchIcon from '../../icons/Launch';\nimport classes from './styles/ContentMenuItem.module.css';\n\nconst LaunchLink = ({\n  url\n}) => <a onClick={e => e.stopPropagation()} className={classes.launchLink} target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n        <LaunchIcon />\n    </a>;\n\nLaunchLink.propTypes = {\n  url: PropTypes.string\n};\n\nconst InsertButton = () => <button className={classes.buttonInsert}>{i18n.t('Insert')}</button>;\n\nconst ContentMenuItem = ({\n  type,\n  name,\n  onInsert,\n  url,\n  visType\n}) => {\n  const ItemIcon = getItemIcon(type);\n  const renderedItemIcon = type === VISUALIZATION ? visTypeIcons[visType] : <ItemIcon style={{\n    fill: colors.grey600\n  }} />;\n  return <MenuItem dense onClick={onInsert} label={<div className={classes.menuItem}>\n                    <div className={classes.label}>\n                        <span style={{\n        marginRight: '6px'\n      }}>\n                            {renderedItemIcon}\n                        </span>\n                        <span>{name}</span>\n                        {url ? <LaunchLink url={url} /> : null}\n                    </div>\n                    <InsertButton />\n                </div>} dataTest={`menu-item-${name}`} />;\n};\n\nContentMenuItem.propTypes = {\n  name: PropTypes.string,\n  type: PropTypes.string,\n  url: PropTypes.string,\n  visType: PropTypes.string,\n  onInsert: PropTypes.func\n};\nexport default ContentMenuItem;","import { sGetEditDashboardRoot } from '../../reducers/editDashboard';\nimport { itemTypeMap } from '../../modules/itemTypes';\nimport { acAddDashboardItem, acUpdateDashboardItem } from '../../actions/editDashboard';\nexport const tAddListItemContent = (type, content) => (dispatch, getState) => {\n  const state = getState();\n  const listItemType = itemTypeMap[type].propName;\n  const dashboardItems = sGetEditDashboardRoot(state).dashboardItems;\n  const dashboardItemIndex = dashboardItems.findIndex(item => item.type === type);\n  let dashboardItem; // Reports/Resources/Users dashboard item type already present in dashboard\n\n  if (dashboardItemIndex > -1) {\n    dashboardItem = dashboardItems[dashboardItemIndex];\n    dashboardItem[listItemType].push(content);\n    dispatch(acUpdateDashboardItem(dashboardItem));\n  } else {\n    dashboardItem = {\n      type: type,\n      content: [content]\n    };\n    dispatch(acAddDashboardItem(dashboardItem));\n  }\n};","import i18n from '@dhis2/d2-i18n';\nimport { VISUALIZATION, MAP, EVENT_CHART, EVENT_REPORT, USERS, REPORTS, RESOURCES, APP, MESSAGES, TEXT, SPACER } from '../../modules/itemTypes';\nexport const singleItems = [{\n  id: 'additional',\n  header: i18n.t('Additional items'),\n  items: [{\n    type: TEXT,\n    name: i18n.t('Text box'),\n    content: ''\n  }, {\n    type: MESSAGES,\n    name: i18n.t('Messages'),\n    content: 'true'\n  }, {\n    type: SPACER,\n    name: i18n.t('Spacer'),\n    content: ''\n  }]\n}]; // categorizedItems are grouped in the item selector menu\n\nexport const categorizedItems = [VISUALIZATION, MAP, EVENT_REPORT, EVENT_CHART, USERS, REPORTS, RESOURCES, APP]; // listItemTypes are included in a single dashboard item\n\nexport const listItemTypes = [REPORTS, RESOURCES, USERS];","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { MenuItem, Divider } from '@dhis2/ui';\nimport { useConfig } from '@dhis2/app-runtime';\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\nimport { tAddListItemContent } from './actions';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\nimport { getItemUrl, APP, VISUALIZATION } from '../../modules/itemTypes';\nimport { categorizedItems, listItemTypes } from './selectableItems';\nimport classes from './styles/CategorizedMenuGroup.module.css';\n\nconst CategorizedMenuGroup = ({\n  type,\n  title,\n  items,\n  hasMore,\n  acAddDashboardItem,\n  tAddListItemContent,\n  onChangeItemsLimit\n}) => {\n  const {\n    baseUrl\n  } = useConfig();\n  const [seeMore, setSeeMore] = useState(false);\n\n  const addItem = item => () => {\n    if (type === APP) {\n      acAddDashboardItem({\n        type,\n        content: item.key\n      });\n    } else {\n      const newItem = {\n        id: item.id,\n        name: item.displayName || item.name\n      };\n\n      if (listItemTypes.includes(type)) {\n        tAddListItemContent(type, newItem);\n      } else {\n        acAddDashboardItem({\n          type,\n          content: newItem\n        });\n      }\n    }\n  };\n\n  const toggleSeeMore = () => {\n    setSeeMore(!seeMore);\n    onChangeItemsLimit(type);\n  };\n\n  return <>\n            <HeaderMenuItem title={title} />\n            {items.map(item => {\n      const itemUrl = getItemUrl(type, item, baseUrl);\n      return <ContentMenuItem key={item.id || item.key} type={type} visType={type === VISUALIZATION ? item.type : type} name={item.displayName || item.name} onInsert={addItem(item)} url={itemUrl} />;\n    })}\n            {hasMore ? <MenuItem dense key={`showmore${title}`} onClick={toggleSeeMore} label={<button className={classes.showMoreButton}>\n                            {seeMore ? i18n.t('Show fewer') : i18n.t('Show more')}\n                        </button>} /> : null}\n            <Divider margin=\"8px 0px\" />\n        </>;\n};\n\nCategorizedMenuGroup.propTypes = {\n  items: PropTypes.array.isRequired,\n  title: PropTypes.string.isRequired,\n  type: PropTypes.oneOf(categorizedItems).isRequired,\n  onChangeItemsLimit: PropTypes.func.isRequired,\n  acAddDashboardItem: PropTypes.func,\n  hasMore: PropTypes.bool,\n  tAddListItemContent: PropTypes.func\n};\nexport default connect(null, {\n  acAddDashboardItem,\n  tAddListItemContent\n})(CategorizedMenuGroup);","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\nexport const SinglesMenuGroup = ({\n  acAddDashboardItem,\n  category\n}) => {\n  const addToDashboard = ({\n    type,\n    content\n  }) => () => {\n    acAddDashboardItem({\n      type,\n      content\n    });\n  };\n\n  return <>\n            <HeaderMenuItem title={category.header} />\n            {category.items.map(item => <ContentMenuItem key={item.type} type={item.type} name={item.name} onInsert={addToDashboard(item)} />)}\n        </>;\n};\nSinglesMenuGroup.propTypes = {\n  acAddDashboardItem: PropTypes.func,\n  category: PropTypes.object\n};\nexport default connect(null, {\n  acAddDashboardItem\n})(SinglesMenuGroup);","import React, { useState, useEffect, createRef } from 'react';\nimport { Popover, FlyoutMenu } from '@dhis2/ui';\nimport { useD2 } from '@dhis2/app-runtime-adapter-d2';\nimport ItemSearchField from './ItemSearchField';\nimport CategorizedMenuGroup from './CategorizedMenuGroup';\nimport SinglesMenuGroup from './SinglesMenuGroup';\nimport { singleItems, categorizedItems } from './selectableItems';\nimport { itemTypeMap, getDefaultItemCount } from '../../modules/itemTypes';\nimport classes from './styles/ItemSelector.module.css';\n\nconst ItemSelector = () => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [filter, setFilter] = useState('');\n  const [items, setItems] = useState(null);\n  const [maxOptions, setMaxOptions] = useState(new Set());\n  const {\n    d2\n  } = useD2({});\n  useEffect(() => {\n    let queryString = '?count=11';\n\n    if ([...maxOptions.values()].length) {\n      queryString += '&max=' + [...maxOptions.values()].join('&max=');\n    }\n\n    const filterStr = filter ? `/${filter}` : '';\n    d2.Api.getApi().get(`dashboards/q${filterStr}${queryString}`).then(response => setItems(response)).catch(console.error);\n  }, [filter, maxOptions]);\n\n  const closeMenu = () => {\n    setIsOpen(false);\n    setFilter('');\n    setMaxOptions(new Set());\n  };\n\n  const openMenu = () => setIsOpen(true);\n\n  const getCategorizedMenuGroups = () => {\n    return categorizedItems.filter(type => {\n      const itemType = itemTypeMap[type];\n      return items && items[itemType.endPointName];\n    }).map(type => {\n      const itemType = itemTypeMap[type];\n      const itemCount = getDefaultItemCount(type);\n      const allItems = items[itemType.endPointName];\n      const hasMore = allItems.length > itemCount;\n      const displayItems = maxOptions.has(itemType.id) ? allItems : allItems.slice(0, itemCount);\n      return <CategorizedMenuGroup key={type} type={type} title={itemType.pluralTitle} items={displayItems} onChangeItemsLimit={updateMaxOptions} hasMore={hasMore} />;\n    });\n  };\n\n  const getSinglesMenuGroups = () => singleItems.map(category => <SinglesMenuGroup key={category.id} category={category} />);\n\n  const getMenuGroups = () => getCategorizedMenuGroups().concat(getSinglesMenuGroups());\n\n  const updateMaxOptions = type => {\n    if (type) {\n      const options = new Set(maxOptions);\n      options.has(type) ? options.delete(type) : options.add(type);\n      setMaxOptions(options);\n    } else {\n      setMaxOptions(new Set());\n    }\n  };\n\n  const updateFilter = ({\n    value\n  }) => setFilter(value);\n\n  const inputRef = createRef();\n  return <>\n            <span ref={inputRef}>\n                <ItemSearchField value={filter} onChange={updateFilter} onFocus={openMenu} />\n            </span>\n            {isOpen && <Popover reference={inputRef} placement=\"bottom-start\" onClickOutside={closeMenu} arrow={false} maxWidth={700}>\n                    <FlyoutMenu className={classes.menu} dataTest=\"item-menu\" maxWidth=\"700px\">\n                        {getMenuGroups()}\n                    </FlyoutMenu>\n                </Popover>}\n        </>;\n};\n\nexport default ItemSelector;","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { InputField, TextAreaField } from '@dhis2/ui';\nimport ItemSelector from '../ItemSelector/ItemSelector';\nimport { acSetDashboardTitle, acSetDashboardDescription } from '../../actions/editDashboard';\nimport { orObject } from '../../modules/util';\nimport { sGetEditDashboardRoot } from '../../reducers/editDashboard';\nimport classes from './styles/EditTitleBar.module.css';\nexport const EditTitleBar = ({\n  name,\n  description,\n  onChangeTitle,\n  onChangeDescription\n}) => {\n  const updateTitle = (_, e) => {\n    onChangeTitle(e.target.value);\n  };\n\n  const updateDescription = (_, e) => {\n    onChangeDescription(e.target.value);\n  };\n\n  return <section className={classes.section}>\n            <div className={classes.titleDescription}>\n                <InputField className={classes.title} name=\"Dashboard title input\" label={i18n.t('Dashboard title')} type=\"text\" onChange={updateTitle} value={name} placeholder={i18n.t('Untitled dashboard')} dataTest=\"dashboard-title-input\" />\n                <TextAreaField className={classes.description} name=\"Dashboard description input\" label={i18n.t('Dashboard description')} onChange={updateDescription} value={description} dataTest=\"dashboard-description-input\" />\n            </div>\n            <div className={classes.itemSelector}>\n                <ItemSelector />\n            </div>\n        </section>;\n};\nEditTitleBar.propTypes = {\n  onChangeDescription: PropTypes.func.isRequired,\n  onChangeTitle: PropTypes.func.isRequired,\n  description: PropTypes.string,\n  name: PropTypes.string\n};\nEditTitleBar.defaultProps = {\n  name: '',\n  description: ''\n};\n\nconst mapStateToProps = state => {\n  const selectedDashboard = orObject(sGetEditDashboardRoot(state));\n  return {\n    name: selectedDashboard.name,\n    description: selectedDashboard.description\n  };\n};\n\nconst mapDispatchToProps = {\n  onChangeTitle: acSetDashboardTitle,\n  onChangeDescription: acSetDashboardDescription\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(EditTitleBar);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Button, Modal, ModalContent, ModalActions, ButtonStrip, ModalTitle } from '@dhis2/ui';\nimport classes from './styles/ConfirmDeleteDialog.module.css';\nexport const ConfirmDeleteDialog = ({\n  dashboardName,\n  onDeleteConfirmed,\n  onContinueEditing,\n  open\n}) => {\n  const actions = [<Button key=\"cancel\" secondary onClick={onContinueEditing} dataTest=\"cancel-delete-dashboard\">\n            {i18n.t('Cancel')}\n        </Button>, <Button key=\"delete\" destructive onClick={onDeleteConfirmed} dataTest=\"confirm-delete-dashboard\">\n            {i18n.t('Delete')}\n        </Button>];\n  return open && <Modal onClose={onContinueEditing} small position=\"middle\">\n                <ModalTitle>{i18n.t('Delete dashboard')}</ModalTitle>\n                <ModalContent>\n                    <span className={classes.content}>\n                        {i18n.t('Deleting dashboard \"{{ dashboardName }}\" will remove it for all users. This action cannot be undone. Are you sure you want to permanently delete this dashboard?', {\n          dashboardName\n        })}\n                    </span>\n                </ModalContent>\n                <ModalActions>\n                    <ButtonStrip>{actions}</ButtonStrip>\n                </ModalActions>\n            </Modal>;\n};\nConfirmDeleteDialog.propTypes = {\n  dashboardName: PropTypes.string,\n  open: PropTypes.bool,\n  onContinueEditing: PropTypes.func,\n  onDeleteConfirmed: PropTypes.func\n};\nexport default ConfirmDeleteDialog;","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport TranslationDialog from '@dhis2/d2-ui-translation-dialog';\nimport { Button, ButtonStrip } from '@dhis2/ui';\nimport { useDataEngine } from '@dhis2/app-runtime';\nimport { useD2 } from '@dhis2/app-runtime-adapter-d2';\nimport ConfirmDeleteDialog from './ConfirmDeleteDialog';\nimport { tSaveDashboard, acClearEditDashboard, acSetPrintPreviewView, acClearPrintPreviewView } from '../../actions/editDashboard';\nimport { acClearPrintDashboard } from '../../actions/printDashboard';\nimport { tDeleteDashboard, acSetDashboardDisplayName } from '../../actions/dashboards';\nimport { sGetEditDashboardRoot, sGetIsNewDashboard, sGetIsPrintPreviewView } from '../../reducers/editDashboard';\nimport { apiFetchDashboard } from '../../api/dashboards';\nimport classes from './styles/EditBar.module.css';\n\nconst EditBar = props => {\n  const {\n    d2\n  } = useD2({});\n  const dataEngine = useDataEngine();\n  const [translationDlgIsOpen, setTranslationDlgIsOpen] = useState(false);\n  const [dashboard, setDashboard] = useState(undefined);\n  const [confirmDeleteDlgIsOpen, setConfirmDeleteDlgIsOpen] = useState(false);\n  const [redirectUrl, setRedirectUrl] = useState(undefined);\n  useEffect(() => {\n    if (props.dashboardId && !dashboard) {\n      apiFetchDashboard(dataEngine, props.dashboardId).then(dboard => setDashboard(dboard));\n    }\n  }, [props.dashboardId, dashboard]);\n\n  const onConfirmDelete = () => {\n    setConfirmDeleteDlgIsOpen(true);\n  };\n\n  const onSave = () => {\n    props.onSave().then(newId => {\n      setRedirectUrl(`/${newId}`);\n    });\n  };\n\n  const onPrintPreview = () => {\n    if (props.isPrintPreviewView) {\n      props.clearPrintPreview();\n      props.clearPrintDashboard();\n    } else {\n      props.showPrintPreview();\n    }\n  };\n\n  const onDiscard = () => {\n    props.onDiscardChanges();\n    const redirectUrl = props.dashboardId ? `/${props.dashboardId}` : '/';\n    setRedirectUrl(redirectUrl);\n  };\n\n  const onContinueEditing = () => {\n    setConfirmDeleteDlgIsOpen(false);\n  };\n\n  const onDeleteConfirmed = () => {\n    setConfirmDeleteDlgIsOpen(false);\n    props.onDelete(props.dashboardId).then(() => {\n      setRedirectUrl('/');\n    });\n  };\n\n  const onTranslationsSaved = async translations => {\n    if (translations && translations.length) {\n      const dbLocale = await d2.currentUser.userSettings.get('keyDbLocale');\n      const translation = translations.find(t => t.locale === dbLocale && t.property === 'NAME');\n\n      if (translation && translation.value) {\n        props.onTranslate(props.dashboardId, translation.value);\n      }\n    }\n  };\n\n  const toggleTranslationDialog = () => setTranslationDlgIsOpen(!translationDlgIsOpen);\n\n  const confirmDeleteDialog = () => props.deleteAccess && props.dashboardId ? <ConfirmDeleteDialog dashboardName={props.dashboardName} onDeleteConfirmed={onDeleteConfirmed} onContinueEditing={onContinueEditing} open={confirmDeleteDlgIsOpen} /> : null;\n\n  const translationDialog = () => dashboard && dashboard.id ? <TranslationDialog className=\"translation-dialog\" d2={d2} open={translationDlgIsOpen} onRequestClose={toggleTranslationDialog} objectToTranslate={{ ...dashboard,\n    modelDefinition: {\n      name: 'dashboard'\n    }\n  }} fieldsToTranslate={['name', 'description']} onTranslationSaved={onTranslationsSaved} onTranslationError={err => console.log('translation update error', err)} /> : null;\n\n  const renderActionButtons = () => <ButtonStrip>\n            <Button primary onClick={onSave} dataTest=\"save-dashboard-button\">\n                {i18n.t('Save changes')}\n            </Button>\n            <Button onClick={onPrintPreview}>\n                {props.isPrintPreviewView ? i18n.t('Exit Print preview') : i18n.t('Print preview')}\n            </Button>\n\n            {props.dashboardId && <Button onClick={toggleTranslationDialog}>\n                    {i18n.t('Translate')}\n                </Button>}\n            {props.dashboardId && props.deleteAccess && <Button onClick={onConfirmDelete} dataTest=\"delete-dashboard-button\">\n                    {i18n.t('Delete')}\n                </Button>}\n        </ButtonStrip>;\n\n  if (redirectUrl) {\n    return <Redirect to={redirectUrl} />;\n  }\n\n  const {\n    updateAccess\n  } = props;\n  const discardBtnText = updateAccess ? i18n.t('Exit without saving') : i18n.t('Go to dashboards');\n  return <>\n            <div className={classes.editBar}>\n                <div className={classes.controls}>\n                    {updateAccess ? renderActionButtons() : null}\n                    <Button secondary onClick={onDiscard}>\n                        {discardBtnText}\n                    </Button>\n                </div>\n            </div>\n            {translationDialog()}\n            {confirmDeleteDialog()}\n        </>;\n};\n\nEditBar.propTypes = {\n  clearPrintDashboard: PropTypes.func,\n  clearPrintPreview: PropTypes.func,\n  dashboardId: PropTypes.string,\n  dashboardName: PropTypes.string,\n  deleteAccess: PropTypes.bool,\n  isPrintPreviewView: PropTypes.bool,\n  showPrintPreview: PropTypes.func,\n  updateAccess: PropTypes.bool,\n  onDelete: PropTypes.func,\n  onDiscardChanges: PropTypes.func,\n  onSave: PropTypes.func,\n  onTranslate: PropTypes.func\n};\n\nconst mapStateToProps = state => {\n  const dashboard = sGetEditDashboardRoot(state);\n  let deleteAccess;\n  let updateAccess;\n\n  if (sGetIsNewDashboard(state)) {\n    deleteAccess = true;\n    updateAccess = true;\n  } else {\n    updateAccess = dashboard.access ? dashboard.access.update : false;\n    deleteAccess = dashboard.access ? dashboard.access.delete : false;\n  }\n\n  return {\n    dashboardId: dashboard.id,\n    dashboardName: dashboard.name,\n    deleteAccess,\n    isPrintPreviewView: sGetIsPrintPreviewView(state),\n    updateAccess\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  clearPrintDashboard: () => dispatch(acClearPrintDashboard()),\n  clearPrintPreview: () => dispatch(acClearPrintPreviewView()),\n  onSave: () => dispatch(tSaveDashboard()).then(id => id),\n  onDelete: id => dispatch(tDeleteDashboard(id)),\n  onDiscardChanges: () => dispatch(acClearEditDashboard()),\n  onTranslate: (id, value) => dispatch(acSetDashboardDisplayName(id, value)),\n  showPrintPreview: () => dispatch(acSetPrintPreviewView())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditBar);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { NoticeBox, CenteredContent } from '@dhis2/ui';\nimport classes from './styles/NotSupportedNotice.module.css';\n\nconst NotSupportedNotice = ({\n  message\n}) => <CenteredContent position=\"top\">\n        <div className={classes.noticeContainer}>\n            <NoticeBox title={i18n.t('Not supported')} warning>\n                {message}\n            </NoticeBox>\n        </div>\n    </CenteredContent>;\n\nNotSupportedNotice.propTypes = {\n  message: PropTypes.string\n};\nexport default NotSupportedNotice;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport classes from './styles/PrintInfo.module.css';\n\nconst PrintInfo = ({\n  isLayout\n}) => {\n  const layoutStyle = isLayout ? i18n.t('dashboard layout') : i18n.t('one item per page');\n  return <div className={classes.container}>\n            <p className={classes.title}>\n                {`${i18n.t('Print Preview')}: ${layoutStyle}`}\n            </p>\n            <div className={classes.printSuggestions}>\n                <p>{`${i18n.t('For best print results')}:`}</p>\n                <ul>\n                    <li>{i18n.t('Use Chrome or Edge web browser')}</li>\n                    <li>\n                        {i18n.t('Wait for all dashboard items to load before printing')}\n                    </li>\n                    <li>\n                        {i18n.t('Use A4 landscape paper size and default margin settings in the browser print dialog')}\n                    </li>\n                </ul>\n            </div>\n            <hr className={classes.divider} />\n        </div>;\n};\n\nPrintInfo.propTypes = {\n  isLayout: PropTypes.bool\n};\nexport default PrintInfo;","import React from 'react';\nimport { colors } from '@dhis2/ui';\n\nconst LessHorizontalIcon = () => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill={colors.grey600} viewBox=\"0 0 24 24\">\n        <path d=\"m13.2928932 6.29289322c.3905243-.39052429 1.0236893-.39052429 1.4142136 0 .3604839.36048396.3882135.92771502.0831886 1.32000622l-.0831886.09420734-4.2921068 4.29289322 4.2921068 4.2928932c.3604839.360484.3882135.927715.0831886 1.3200062l-.0831886.0942074c-.360484.3604839-.927715.3882135-1.3200062.0831886l-.0942074-.0831886-4.99999998-5c-.36048396-.360484-.3882135-.927715-.08318861-1.3200062l.08318861-.0942074z\" />\n    </svg>;\n\nexport default LessHorizontalIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Button } from '@dhis2/ui';\nimport { Link } from 'react-router-dom';\nimport LessHorizontalIcon from '../../icons/LessHorizontal';\nimport { useWindowDimensions } from '../WindowDimensionsProvider';\nimport isSmallScreen from '../../modules/isSmallScreen';\nimport classes from './styles/PrintActionsBar.module.css'; // set in PrintActionsBar.module.css\n\nexport const PRINT_ACTIONS_BAR_HEIGHT = 44;\nexport const PRINT_ACTIONS_BAR_HEIGHT_SM = 36;\n\nconst PrintActionsBar = ({\n  id\n}) => {\n  const {\n    width\n  } = useWindowDimensions();\n  const isSmall = isSmallScreen(width);\n  return <>\n            <div className={classes.container}>\n                <div className={classes.inner}>\n                    <Link className={classes.link} to={`/${id}`}>\n                        <Button small={isSmall}>\n                            <LessHorizontalIcon />\n                            {i18n.t('Exit print preview')}\n                        </Button>\n                    </Link>\n                    <Button small={isSmall} onClick={window.print}>\n                        {i18n.t('Print')}\n                    </Button>\n                </div>\n            </div>\n            <div className={classes.topMargin} />\n        </>;\n};\n\nPrintActionsBar.propTypes = {\n  id: PropTypes.string\n};\nexport default PrintActionsBar;","import sortBy from 'lodash/sortBy';\nimport { orArray } from './util';\nimport { itemTypeMap } from './itemTypes';\nexport const getTransformYPx = elStyle => {\n  if (!elStyle || !elStyle.transform) {\n    return null;\n  } // find valid transforms - those with y pixels\n  // the code is expecting the transform prop to\n  // look like:  translate(10px, 300px)\n\n\n  const transformY = elStyle.transform.split(' ')[1]?.match(/(\\d+)px/);\n\n  if (transformY) {\n    return parseInt(transformY[1]);\n  } else {\n    return null;\n  }\n};\nexport const getDomGridItemsSortedByYPos = elements => {\n  const types = Object.keys(itemTypeMap);\n  const elementsWithBoundingRect = orArray(elements).map(el => {\n    const type = Array.from(el.classList).find(className => types.indexOf(className) > -1);\n    const rect = el.getBoundingClientRect();\n    const y = getTransformYPx(el.style) || parseInt(rect.y);\n    return {\n      type,\n      classList: el.classList,\n      bottomY: y + parseInt(rect.height),\n      el\n    };\n  });\n  return sortBy(elementsWithBoundingRect, ['bottomY']);\n};\n\nconst isLeapPage = n => {\n  // pages 5,9,13,17,21,25,29... are leap pages\n  let x = 0;\n  const startPage = 1;\n\n  const getMultiple = factor => startPage + 4 * factor;\n\n  let multiple = getMultiple(0);\n  let isLeapPage = false;\n\n  while (multiple < n) {\n    multiple = getMultiple(x);\n    ++x;\n\n    if (multiple === n) {\n      isLeapPage = true;\n      break;\n    }\n  }\n\n  return isLeapPage;\n};\n\nexport const getPageBreakPositions = items => {\n  // add enough page breaks so that each item could\n  // be put on its own page. Due to the react-grid-layout\n  // unit system, we have to estimate roughly the size of each\n  // page. At regular intervals add a unit, like a leap year\n  const yPosList = [];\n  let yPos = 0;\n\n  for (let pageNum = 1; pageNum <= items.length; ++pageNum) {\n    if (pageNum === 1) {\n      yPos += 35;\n    } else if (isLeapPage(pageNum)) {\n      yPos += 40;\n    } else {\n      yPos += 39;\n    }\n\n    yPosList.push(yPos);\n  }\n\n  return yPosList;\n};","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport sortBy from 'lodash/sortBy';\nimport ReactGridLayout from 'react-grid-layout';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport cx from 'classnames';\nimport { Item } from '../Item/Item';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport { acUpdatePrintDashboardLayout } from '../../actions/printDashboard';\nimport { sGetSelectedIsLoading } from '../../reducers/selected';\nimport { sGetPrintDashboardRoot, sGetPrintDashboardItems } from '../../reducers/printDashboard';\nimport { sGetIsEditing } from '../../reducers/editDashboard';\nimport { GRID_ROW_HEIGHT, GRID_COMPACT_TYPE, MARGIN, getGridColumns, hasShape, A4_LANDSCAPE_WIDTH_PX } from './gridUtil';\nimport { getDomGridItemsSortedByYPos, getTransformYPx } from '../../modules/printUtils';\nimport { PRINT_LAYOUT } from '../Dashboard/dashboardModes';\nimport { PAGEBREAK } from '../../modules/itemTypes';\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\nimport './ItemGrid.css'; // this is set in the .dashboard-item-content css\n\nexport const ITEM_CONTENT_PADDING_BOTTOM = 4;\nexport class PrintLayoutItemGrid extends Component {\n  onLayoutChange = newLayout => {\n    this.props.updateDashboardLayout(newLayout);\n  };\n  isFirstPageBreak = item => {\n    if (item.type !== PAGEBREAK) {\n      return false;\n    }\n\n    const pageBreaks = this.props.dashboardItems.filter(i => i.type === PAGEBREAK);\n    const sortedPageBreaks = sortBy(pageBreaks, ['y']);\n    return item.y === sortedPageBreaks[0].y;\n  };\n  getItemComponent = item => {\n    // the first-page-break class is used in Edit print preview\n    const itemClassNames = cx('print', 'layout', `${item.type}`, {\n      'first-page-break': this.props.isEditing && this.isFirstPageBreak(item),\n      shortened: !!item.shortened\n    });\n    return <div key={item.i} className={itemClassNames}>\n                <Item item={item} dashboardMode={PRINT_LAYOUT} />\n            </div>;\n  };\n  getItemComponents = items => items.map(item => this.getItemComponent(item));\n\n  hideExtraPageBreaks() {\n    const sortedElements = getDomGridItemsSortedByYPos(Array.from(document.querySelectorAll('.react-grid-item')));\n    let pageBreakBottom = 0;\n    let lastItemBottom = 0;\n    let foundNonPageBreak = false;\n\n    for (let i = sortedElements.length - 1; i >= 0; --i) {\n      const item = sortedElements[i];\n\n      if (item.type === PAGEBREAK) {\n        if (!foundNonPageBreak) {\n          item.el.classList.add('removed');\n        } else {\n          pageBreakBottom = item.bottomY;\n          break;\n        }\n      } else {\n        foundNonPageBreak = true;\n        const thisItemBottom = item.bottomY;\n\n        if (thisItemBottom > lastItemBottom) {\n          lastItemBottom = thisItemBottom;\n        }\n      }\n    }\n\n    const pageHeight = 720;\n    const gridElement = document.querySelector('.react-grid-layout'); // the last page break is before the last item(s) so\n    // maxHeight is one page beyond the last page break\n\n    const maxHeight = pageBreakBottom + pageHeight;\n\n    if (gridElement) {\n      gridElement.style.height = `${maxHeight}px`;\n    }\n\n    if (this.props.isEditing) {\n      //scroll to below the title page - which is middle of the first pagebreak\n      const firstBreak = document.querySelector('.first-page-break');\n\n      if (firstBreak && firstBreak.style && firstBreak.style.transform) {\n        const yPos = getTransformYPx(firstBreak.style);\n        const scrollArea = document.querySelector('.scroll-area');\n        scrollArea && scrollArea.scroll(0, yPos + 50);\n      }\n    }\n  }\n\n  componentDidMount() {\n    this.hideExtraPageBreaks();\n  }\n\n  componentDidUpdate() {\n    this.hideExtraPageBreaks();\n  }\n\n  render() {\n    const {\n      isLoading,\n      dashboardItems\n    } = this.props;\n\n    if (!isLoading && !dashboardItems.length) {\n      return <NoContentMessage text={i18n.t('There are no items on this dashboard')} />;\n    }\n\n    return <div className=\"grid-wrapper\">\n                {isLoading ? <Layer translucent>\n                        <CenteredContent>\n                            <CircularLoader />\n                        </CenteredContent>\n                    </Layer> : null}\n                <ReactGridLayout onLayoutChange={this.onLayoutChange} className=\"layout\" layout={dashboardItems} margin={MARGIN} cols={getGridColumns()} rowHeight={GRID_ROW_HEIGHT} width={A4_LANDSCAPE_WIDTH_PX} compactType={GRID_COMPACT_TYPE} isDraggable={false} isResizable={false} draggableCancel=\"input,textarea\">\n                    {this.getItemComponents(dashboardItems)}\n                </ReactGridLayout>\n            </div>;\n  }\n\n}\nPrintLayoutItemGrid.propTypes = {\n  dashboardItems: PropTypes.array,\n  isEditing: PropTypes.bool,\n  isLoading: PropTypes.bool,\n  updateDashboardLayout: PropTypes.func\n};\nPrintLayoutItemGrid.defaultProps = {\n  dashboardItems: []\n};\n\nconst mapStateToProps = state => {\n  const selectedDashboard = sGetPrintDashboardRoot(state);\n  return {\n    isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n    dashboardItems: sGetPrintDashboardItems(state).filter(hasShape),\n    isEditing: sGetIsEditing(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  updateDashboardLayout: acUpdatePrintDashboardLayout\n})(PrintLayoutItemGrid);","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { spacers } from '@dhis2/ui';\nimport cx from 'classnames';\nimport PrintInfo from './PrintInfo';\nimport PrintActionsBar, { PRINT_ACTIONS_BAR_HEIGHT, PRINT_ACTIONS_BAR_HEIGHT_SM } from './PrintActionsBar';\nimport PrintLayoutItemGrid from '../ItemGrid/PrintLayoutItemGrid';\nimport { acSetPrintDashboard, acAddPrintDashboardItem, acUpdatePrintDashboardItem } from '../../actions/printDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { sGetEditDashboardRoot, sGetEditDashboardItems } from '../../reducers/editDashboard';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport { PAGEBREAK, PRINT_TITLE_PAGE } from '../../modules/itemTypes';\nimport { MAX_ITEM_GRID_HEIGHT } from '../ItemGrid/gridUtil';\nimport { getControlBarHeight, HEADERBAR_HEIGHT } from '../ControlBar/controlBarDimensions';\nimport { DRAG_HANDLE_HEIGHT } from '../ControlBar/ControlBar';\nimport { useWindowDimensions } from '../WindowDimensionsProvider';\nimport isSmallScreen from '../../modules/isSmallScreen';\nimport { getPageBreakPositions } from '../../modules/printUtils';\nimport classes from './styles/PrintLayoutDashboard.module.css';\nimport './styles/print.css';\nimport './styles/print-layout.css';\nconst EDIT_BAR_HEIGHT = getControlBarHeight(1) + DRAG_HANDLE_HEIGHT;\n\nconst addPageBreaks = (items, addDashboardItem) => {\n  const yPosList = getPageBreakPositions(items);\n\n  for (let i = 0; i < items.length; ++i) {\n    addDashboardItem({\n      type: PAGEBREAK,\n      yPos: yPosList[i]\n    });\n  }\n};\n\nconst PrintLayoutDashboard = ({\n  dashboard,\n  items,\n  setPrintDashboard,\n  addDashboardItem,\n  updateDashboardItem,\n  fromEdit\n}) => {\n  const {\n    width,\n    height\n  } = useWindowDimensions();\n  const actionBarHeight = isSmallScreen(width) ? PRINT_ACTIONS_BAR_HEIGHT_SM : PRINT_ACTIONS_BAR_HEIGHT;\n  useEffect(() => {\n    if (dashboard) {\n      setPrintDashboard(dashboard, items); // If any items are taller than one page, reduce it to one\n      // page (react-grid-layout units)\n\n      items.forEach(item => {\n        if (item.h > MAX_ITEM_GRID_HEIGHT) {\n          item.shortened = true;\n          updateDashboardItem(Object.assign({}, item, {\n            h: MAX_ITEM_GRID_HEIGHT\n          }));\n        }\n      });\n      addPageBreaks(items, addDashboardItem);\n      addDashboardItem({\n        type: PRINT_TITLE_PAGE,\n        isOneItemPerPage: false\n      });\n    }\n  }, [dashboard, items]);\n\n  const getWrapperStyle = () => {\n    return fromEdit ? {\n      paddingTop: spacers.dp24,\n      height: height - EDIT_BAR_HEIGHT - HEADERBAR_HEIGHT\n    } : {\n      height: height - actionBarHeight\n    };\n  };\n\n  return <>\n            {!fromEdit && <PrintActionsBar id={dashboard.id} />}\n            <div className={cx(classes.wrapper, 'scroll-area')} style={getWrapperStyle()}>\n                {!fromEdit && <PrintInfo isLayout={true} />}\n                <div className={classes.pageOuter} data-test=\"print-layout-page\">\n                    <PrintLayoutItemGrid />\n                </div>\n            </div>\n        </>;\n};\n\nPrintLayoutDashboard.propTypes = {\n  addDashboardItem: PropTypes.func,\n  dashboard: PropTypes.object,\n  fromEdit: PropTypes.bool,\n  items: PropTypes.array,\n  setPrintDashboard: PropTypes.func,\n  updateDashboardItem: PropTypes.func\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const id = sGetSelectedId(state);\n\n  if (ownProps.fromEdit) {\n    const dashboard = sGetEditDashboardRoot(state);\n    return {\n      dashboard,\n      id,\n      items: sGetEditDashboardItems(state)\n    };\n  }\n\n  const dashboard = id ? sGetDashboardById(state, id) : null;\n  return {\n    dashboard,\n    id,\n    items: sGetDashboardItems(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setPrintDashboard: acSetPrintDashboard,\n  addDashboardItem: acAddPrintDashboardItem,\n  updateDashboardItem: acUpdatePrintDashboardItem\n})(PrintLayoutDashboard);","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport EditTitleBar from '../TitleBar/EditTitleBar';\nimport ItemGrid from '../ItemGrid/ItemGrid';\nimport EditBar from '../ControlBar/EditBar';\nimport NotSupportedNotice from './NotSupportedNotice';\nimport { useWindowDimensions } from '../WindowDimensionsProvider';\nimport LayoutPrintPreview from './PrintLayoutDashboard';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport { acSetEditDashboard } from '../../actions/editDashboard';\nimport { sGetWindowHeight } from '../../reducers/windowHeight';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport { sGetIsPrintPreviewView } from '../../reducers/editDashboard';\nimport { getControlBarHeight, HEADERBAR_HEIGHT } from '../ControlBar/controlBarDimensions';\nimport isSmallScreen from '../../modules/isSmallScreen';\n\nconst EditDashboard = props => {\n  const {\n    width\n  } = useWindowDimensions();\n  useEffect(() => {\n    if (props.dashboard) {\n      props.setEditDashboard(props.dashboard, props.items);\n    }\n  }, [props.dashboard]);\n\n  const renderGrid = () => {\n    if (props.isPrintPreviewView) {\n      return <LayoutPrintPreview fromEdit={true} />;\n    }\n\n    const height = props.windowHeight - HEADERBAR_HEIGHT - getControlBarHeight(1);\n    return <div className=\"dashboard-wrapper\" style={{\n      height\n    }}>\n                <EditTitleBar />\n                <ItemGrid edit={true} />\n            </div>;\n  };\n\n  const renderEditView = () => <>\n            <EditBar />\n            {props.updateAccess ? renderGrid() : <NoContentMessage text={i18n.t('No access')} />}\n        </>;\n\n  return <>\n            {isSmallScreen(width) ? <NotSupportedNotice message={i18n.t('Editing dashboards on small screens is not supported.')} /> : renderEditView()}\n        </>;\n};\n\nEditDashboard.propTypes = {\n  dashboard: PropTypes.object,\n  isPrintPreviewView: PropTypes.bool,\n  items: PropTypes.array,\n  setEditDashboard: PropTypes.func,\n  updateAccess: PropTypes.bool,\n  windowHeight: PropTypes.number\n};\n\nconst mapStateToProps = state => {\n  const id = sGetSelectedId(state);\n  const dashboard = id ? sGetDashboardById(state, id) : null;\n  const updateAccess = dashboard && dashboard.access ? dashboard.access.update : false;\n  return {\n    dashboard,\n    updateAccess,\n    items: sGetDashboardItems(state),\n    isPrintPreviewView: sGetIsPrintPreviewView(state),\n    windowHeight: sGetWindowHeight(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setEditDashboard: acSetEditDashboard\n})(EditDashboard);","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport EditBar from '../ControlBar/EditBar';\nimport EditTitleBar from '../TitleBar/EditTitleBar';\nimport ItemGrid from '../ItemGrid/ItemGrid';\nimport LayoutPrintPreview from './PrintLayoutDashboard';\nimport NotSupportedNotice from './NotSupportedNotice';\nimport { acSetEditNewDashboard } from '../../actions/editDashboard';\nimport { sGetIsPrintPreviewView } from '../../reducers/editDashboard';\nimport { sGetWindowHeight } from '../../reducers/windowHeight';\nimport { getControlBarHeight, HEADERBAR_HEIGHT } from '../ControlBar/controlBarDimensions';\nimport { useWindowDimensions } from '../WindowDimensionsProvider';\nimport isSmallScreen from '../../modules/isSmallScreen';\n\nconst NewDashboard = props => {\n  const {\n    width\n  } = useWindowDimensions();\n  useEffect(() => {\n    props.setNewDashboard();\n  }, []);\n  const height = props.windowHeight - HEADERBAR_HEIGHT - getControlBarHeight(1);\n\n  const renderNewView = () => <>\n            <EditBar />\n            {props.isPrintPreviewView ? <LayoutPrintPreview fromEdit={true} /> : <div className=\"dashboard-wrapper\" style={{\n      height\n    }}>\n                    <EditTitleBar />\n                    <ItemGrid edit={true} />\n                </div>}\n        </>;\n\n  return <>\n            {isSmallScreen(width) ? <NotSupportedNotice message={i18n.t('Creating dashboards on small screens is not supported.')} /> : renderNewView()}\n        </>;\n};\n\nNewDashboard.propTypes = {\n  isPrintPreviewView: PropTypes.bool,\n  setNewDashboard: PropTypes.func,\n  windowHeight: PropTypes.number\n};\n\nconst mapStateToProps = state => ({\n  isPrintPreviewView: sGetIsPrintPreviewView(state),\n  windowHeight: sGetWindowHeight(state)\n});\n\nexport default connect(mapStateToProps, {\n  setNewDashboard: acSetEditNewDashboard\n})(NewDashboard);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ReactGridLayout from 'react-grid-layout';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport cx from 'classnames';\nimport { Item } from '../Item/Item';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport { PRINT } from '../Dashboard/dashboardModes';\nimport { sGetSelectedIsLoading } from '../../reducers/selected';\nimport { sGetPrintDashboardRoot, sGetPrintDashboardItems } from '../../reducers/printDashboard';\nimport { GRID_ROW_HEIGHT, GRID_COMPACT_TYPE, MARGIN, getGridColumns, hasShape, A4_LANDSCAPE_WIDTH_PX } from './gridUtil';\nimport { orArray } from '../../modules/util';\nimport 'react-grid-layout/css/styles.css';\nimport './ItemGrid.css';\nexport class PrintItemGrid extends Component {\n  getItemComponent = item => <div key={item.i} className={cx(item.type, 'print', 'oipp')}>\n            <Item item={item} dashboardMode={PRINT} />\n        </div>;\n  getItemComponents = items => items.map(item => this.getItemComponent(item));\n\n  render() {\n    const {\n      isLoading,\n      dashboardItems\n    } = this.props;\n\n    if (!isLoading && !dashboardItems.length) {\n      return <NoContentMessage text={i18n.t('There are no items on this dashboard')} />;\n    }\n\n    return <>\n                {isLoading ? <Layer translucent>\n                        <CenteredContent>\n                            <CircularLoader />\n                        </CenteredContent>\n                    </Layer> : null}\n                <ReactGridLayout className=\"layout print\" layout={dashboardItems} margin={MARGIN} cols={getGridColumns()} rowHeight={GRID_ROW_HEIGHT} width={A4_LANDSCAPE_WIDTH_PX} compactType={GRID_COMPACT_TYPE} isDraggable={false} isResizable={false} draggableCancel=\"input,textarea\">\n                    {this.getItemComponents(dashboardItems)}\n                </ReactGridLayout>\n            </>;\n  }\n\n}\nPrintItemGrid.propTypes = {\n  dashboardItems: PropTypes.array,\n  isLoading: PropTypes.bool\n};\nPrintItemGrid.defaultProps = {\n  dashboardItems: []\n};\n\nconst mapStateToProps = state => {\n  const selectedDashboard = sGetPrintDashboardRoot(state);\n  return {\n    isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n    dashboardItems: orArray(sGetPrintDashboardItems(state)).filter(hasShape)\n  };\n};\n\nexport default connect(mapStateToProps)(PrintItemGrid);","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport sortBy from 'lodash/sortBy';\nimport PrintInfo from './PrintInfo';\nimport PrintActionsBar, { PRINT_ACTIONS_BAR_HEIGHT, PRINT_ACTIONS_BAR_HEIGHT_SM } from './PrintActionsBar';\nimport PrintItemGrid from '../ItemGrid/PrintItemGrid';\nimport { acSetPrintDashboard, acAddPrintDashboardItem, acRemovePrintDashboardItem, acUpdatePrintDashboardItem } from '../../actions/printDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport { PAGEBREAK, PRINT_TITLE_PAGE, SPACER } from '../../modules/itemTypes';\nimport { MAX_ITEM_GRID_HEIGHT_OIPP, MAX_ITEM_GRID_WIDTH_OIPP } from '../ItemGrid/gridUtil';\nimport { useWindowDimensions } from '../WindowDimensionsProvider';\nimport isSmallScreen from '../../modules/isSmallScreen';\nimport classes from './styles/PrintDashboard.module.css';\nimport './styles/print.css';\nimport './styles/print-oipp.css';\n\nconst PrintDashboard = ({\n  dashboard,\n  items,\n  setPrintDashboard,\n  addDashboardItem,\n  updateDashboardItem,\n  removeDashboardItem\n}) => {\n  useEffect(() => {\n    if (dashboard) {\n      //sort the items by Y pos so they print in order of top to bottom\n      const sortedItems = sortBy(items, ['y', 'x']);\n      setPrintDashboard(dashboard, sortedItems); // remove spacers - don't want empty pages\n\n      let spacerCount = 0;\n      items.forEach(item => {\n        if (item.type === SPACER) {\n          spacerCount += 1;\n          removeDashboardItem(item.id);\n        }\n      }); // Resize the items to the full page size\n\n      items.forEach(item => {\n        updateDashboardItem(Object.assign({}, item, {\n          w: MAX_ITEM_GRID_WIDTH_OIPP,\n          h: MAX_ITEM_GRID_HEIGHT_OIPP\n        }));\n      }); // insert page breaks into the document flow to create the \"pages\"\n      // when previewing the print\n\n      for (let i = 0; i < (items.length - spacerCount) * 2; i += 2) {\n        addDashboardItem({\n          type: PAGEBREAK,\n          position: i,\n          isStatic: false\n        });\n      }\n\n      addDashboardItem({\n        type: PRINT_TITLE_PAGE,\n        isOneItemPerPage: true\n      });\n    }\n  }, [dashboard, items]);\n  const {\n    width,\n    height\n  } = useWindowDimensions();\n  const availableHeight = height - (isSmallScreen(width) ? PRINT_ACTIONS_BAR_HEIGHT_SM : PRINT_ACTIONS_BAR_HEIGHT);\n  return <>\n            <PrintActionsBar id={dashboard.id} />\n            <div className={classes.wrapper} style={{\n      height: availableHeight\n    }}>\n                <PrintInfo isLayout={false} />\n                <div className={classes.pageOuter} data-test=\"print-oipp-page\">\n                    <PrintItemGrid />\n                </div>\n            </div>\n        </>;\n};\n\nPrintDashboard.propTypes = {\n  addDashboardItem: PropTypes.func,\n  dashboard: PropTypes.object,\n  items: PropTypes.array,\n  removeDashboardItem: PropTypes.func,\n  setPrintDashboard: PropTypes.func,\n  updateDashboardItem: PropTypes.func\n};\n\nconst mapStateToProps = state => {\n  const id = sGetSelectedId(state);\n  const dashboard = id ? sGetDashboardById(state, id) : null;\n  return {\n    dashboard,\n    id,\n    items: sGetDashboardItems(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setPrintDashboard: acSetPrintDashboard,\n  addDashboardItem: acAddPrintDashboardItem,\n  removeDashboardItem: acRemovePrintDashboardItem,\n  updateDashboardItem: acUpdatePrintDashboardItem\n})(PrintDashboard);","import { SET_WINDOW_HEIGHT } from '../reducers/windowHeight';\nexport const acSetWindowHeight = value => ({\n  type: SET_WINDOW_HEIGHT,\n  value\n});","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport isEmpty from 'lodash/isEmpty';\nimport i18n from '@dhis2/d2-i18n';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport debounce from 'lodash/debounce';\nimport DashboardsBar from '../ControlBar/DashboardsBar';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport ViewDashboard from './ViewDashboard';\nimport EditDashboard from './EditDashboard';\nimport NewDashboard from './NewDashboard';\nimport PrintDashboard from './PrintDashboard';\nimport PrintLayoutDashboard from './PrintLayoutDashboard';\nimport { tSelectDashboard } from '../../actions/dashboards';\nimport { acSetWindowHeight } from '../../actions/windowHeight';\nimport { sDashboardsIsFetching, sGetAllDashboards } from '../../reducers/dashboards';\nimport { sGetSelectedId, NON_EXISTING_DASHBOARD_ID } from '../../reducers/selected';\nimport { EDIT, NEW, VIEW, PRINT, PRINT_LAYOUT, isPrintMode } from './dashboardModes';\n\nconst setHeaderbarVisibility = mode => {\n  const header = document.getElementsByTagName('header')[0];\n\n  if (isPrintMode(mode)) {\n    header.classList.add('hidden');\n  } else {\n    header.classList.remove('hidden');\n  }\n};\n\nconst dashboardMap = {\n  [VIEW]: <ViewDashboard />,\n  [EDIT]: <EditDashboard />,\n  [NEW]: <NewDashboard />,\n  [PRINT]: <PrintDashboard />,\n  [PRINT_LAYOUT]: <PrintLayoutDashboard />\n};\nexport const Dashboard = ({\n  id,\n  mode,\n  dashboardsLoaded,\n  dashboardsIsEmpty,\n  routeId,\n  selectDashboard,\n  setWindowHeight\n}) => {\n  useEffect(() => {\n    setHeaderbarVisibility(mode);\n  }, [mode]);\n  useEffect(() => {\n    if (dashboardsLoaded && !dashboardsIsEmpty) {\n      selectDashboard(routeId);\n    }\n  }, [dashboardsLoaded, dashboardsIsEmpty, routeId]);\n  useEffect(() => {\n    const onResize = debounce(() => setWindowHeight(window.innerHeight), 300);\n    window.addEventListener('resize', onResize);\n    return () => {\n      window.removeEventListener('resize', onResize);\n    };\n  }, []);\n\n  if (!dashboardsLoaded) {\n    return <Layer translucent>\n                <CenteredContent>\n                    <CircularLoader />\n                </CenteredContent>\n            </Layer>;\n  }\n\n  if (mode === NEW) {\n    return dashboardMap[mode];\n  }\n\n  if (dashboardsIsEmpty) {\n    return <>\n                <DashboardsBar />\n                <NoContentMessage text={i18n.t('No dashboards found. Use the + button to create a new dashboard.')} />\n            </>;\n  }\n\n  if (id === NON_EXISTING_DASHBOARD_ID) {\n    return <>\n                <DashboardsBar />\n                <NoContentMessage text={i18n.t('Requested dashboard not found')} />\n            </>;\n  }\n\n  if (id === null) {\n    return <Layer translucent>\n                <CenteredContent>\n                    <CircularLoader />\n                </CenteredContent>\n            </Layer>;\n  }\n\n  return dashboardMap[mode];\n};\nDashboard.propTypes = {\n  dashboardsIsEmpty: PropTypes.bool,\n  dashboardsLoaded: PropTypes.bool,\n  id: PropTypes.string,\n  match: PropTypes.object,\n  // provided by the react-router-dom\n  mode: PropTypes.string,\n  routeId: PropTypes.string,\n  selectDashboard: PropTypes.func,\n  setWindowHeight: PropTypes.func\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const dashboards = sGetAllDashboards(state);\n  return {\n    dashboardsIsEmpty: isEmpty(dashboards),\n    dashboardsLoaded: !sDashboardsIsFetching(state),\n    id: sGetSelectedId(state),\n    routeId: ownProps.match?.params?.dashboardId || null\n  };\n};\n\nexport default connect(mapStateToProps, {\n  selectDashboard: tSelectDashboard,\n  setWindowHeight: acSetWindowHeight\n})(Dashboard);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { AlertBar, AlertStack } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport { sGetAlertMessage } from '../../reducers/alert';\nimport { acClearAlertMessage } from '../../actions/alert';\nexport const Alert = ({\n  message,\n  onClose\n}) => message ? <AlertStack>\n            <AlertBar onHidden={onClose} permanent>\n                {message}\n            </AlertBar>\n        </AlertStack> : null;\nAlert.propTypes = {\n  message: PropTypes.string,\n  onClose: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  message: sGetAlertMessage(state)\n});\n\nexport default connect(mapStateToProps, {\n  onClose: acClearAlertMessage\n})(Alert);","import { RECEIVED_USER } from '../reducers/user';\nexport const acReceivedUser = value => ({\n  type: RECEIVED_USER,\n  value\n});","import { getInstance } from 'd2';\nimport { onError } from './index';\nconst SYSTEM_SETTINGS = ['keyGatherAnalyticalObjectStatisticsInDashboardViews'];\nexport const apiFetchSystemSettings = () => {\n  const endPoint = '/systemSettings';\n  const url = `${endPoint}?${SYSTEM_SETTINGS.map(s => `key=${s}`).join('&')}`;\n  return getInstance().then(d2 => d2.Api.getApi().get(url)).catch(onError);\n};","import React, { useEffect } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { CssVariables } from '@dhis2/ui';\nimport { useD2 } from '@dhis2/app-runtime-adapter-d2';\nimport Dashboard from './Dashboard/Dashboard';\nimport AlertBar from './AlertBar/AlertBar';\nimport { acReceivedUser } from '../actions/user';\nimport { tFetchDashboards } from '../actions/dashboards';\nimport { tSetControlBarRows } from '../actions/controlBar';\nimport { tSetShowDescription } from '../actions/selected';\nimport { tSetDimensions } from '../actions/dimensions';\nimport { tAddSettings } from '../actions/settings';\nimport { EDIT, VIEW, NEW, PRINT, PRINT_LAYOUT } from './Dashboard/dashboardModes';\nimport './App.css';\n\nconst App = props => {\n  const {\n    d2\n  } = useD2({});\n  useEffect(() => {\n    props.setCurrentUser(d2.currentUser);\n    props.fetchDashboards();\n    props.setControlBarRows();\n    props.setShowDescription();\n    props.setDimensions();\n    props.addSettings();\n  }, []);\n  return <>\n            <CssVariables colors spacers />\n            <Router>\n                <Switch>\n                    <Route exact path=\"/\" render={props => <Dashboard {...props} mode={VIEW} />} />\n                    <Route exact path=\"/new\" render={props => <Dashboard {...props} mode={NEW} />} />\n                    <Route exact path=\"/:dashboardId\" render={props => <Dashboard {...props} mode={VIEW} />} />\n                    <Route exact path=\"/:dashboardId/edit\" render={props => <Dashboard {...props} mode={EDIT} />} />\n                    <Route exact path=\"/:dashboardId/printoipp\" render={props => <Dashboard {...props} mode={PRINT} />} />\n                    <Route exact path=\"/:dashboardId/printlayout\" render={props => <Dashboard {...props} mode={PRINT_LAYOUT} />} />\n                </Switch>\n            </Router>\n            <AlertBar />\n        </>;\n};\n\nApp.propTypes = {\n  addSettings: PropTypes.func.isRequired,\n  fetchDashboards: PropTypes.func.isRequired,\n  setControlBarRows: PropTypes.func.isRequired,\n  setCurrentUser: PropTypes.func.isRequired,\n  setDimensions: PropTypes.func.isRequired,\n  setShowDescription: PropTypes.func.isRequired\n};\nconst mapDispatchToProps = {\n  fetchDashboards: tFetchDashboards,\n  setControlBarRows: tSetControlBarRows,\n  setCurrentUser: acReceivedUser,\n  setDimensions: tSetDimensions,\n  setShowDescription: tSetShowDescription,\n  addSettings: tAddSettings\n};\nexport default connect(null, mapDispatchToProps)(App);","import { SET_DIMENSIONS } from '../reducers/dimensions';\nimport { apiFetchDimensions } from '@dhis2/analytics';\nimport { sGetSettingsDisplayNameProperty } from '../reducers/settings';\nexport const acSetDimensions = dimensions => ({\n  type: SET_DIMENSIONS,\n  value: dimensions\n});\nexport const tSetDimensions = () => async (dispatch, getState, dataEngine) => {\n  const onSuccess = dimensions => {\n    dispatch(acSetDimensions(dimensions));\n  };\n\n  const onError = error => {\n    console.log('Error (apiFetchDimensions): ', error);\n    return error;\n  };\n\n  try {\n    const displayNameProp = sGetSettingsDisplayNameProperty(getState());\n    const dimensions = await apiFetchDimensions(dataEngine, displayNameProp); // filter out CATEGORY that are not of type ATTRIBUTE\n\n    const filteredDimensions = dimensions.filter(dim => dim.dimensionType !== 'CATEGORY' || dim.dimensionType === 'CATEGORY' && dim.dataDimensionType === 'ATTRIBUTE');\n    return onSuccess(filteredDimensions);\n  } catch (err) {\n    return onError(err);\n  }\n};","import { ADD_SETTINGS } from '../reducers/settings';\nimport { apiFetchSystemSettings } from '../api/settings';\nexport const acAddSettings = value => ({\n  type: ADD_SETTINGS,\n  value\n});\nexport const tAddSettings = (...extraSettings) => async dispatch => {\n  const onSuccess = fetchedSettings => {\n    dispatch(acAddSettings(Object.assign({}, fetchedSettings, ...extraSettings)));\n  };\n\n  const onError = error => {\n    console.log('Error (apiFetchSystemSettings): ', error);\n    return error;\n  };\n\n  try {\n    const systemSettings = await apiFetchSystemSettings();\n    return onSuccess({ ...systemSettings\n    });\n  } catch (err) {\n    return onError(err);\n  }\n};","/** @module reducers/selected */\nimport { validateReducer } from '../modules/util';\nexport const SET_STYLE = 'SET_STYLE';\nexport const DEFAULT_STATE_STYLE = 'LIST';\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\n\nconst style = (state = DEFAULT_STATE_STYLE, action) => {\n  switch (action.type) {\n    case SET_STYLE:\n      return validateReducer(action.value, DEFAULT_STATE_STYLE);\n\n    default:\n      return state;\n  }\n};\n\nexport default style;\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\n\nexport const sGetStyleRoot = state => state.style;","import { combineReducers } from 'redux';\nimport dashboards from './dashboards';\nimport selected from './selected';\nimport dashboardsFilter from './dashboardsFilter';\nimport controlBar from './controlBar';\nimport visualizations from './visualizations';\nimport editDashboard from './editDashboard';\nimport printDashboard from './printDashboard';\nimport messages from './messages';\nimport user from './user';\nimport alert from './alert';\nimport itemFilters from './itemFilters';\nimport style from './style';\nimport dimensions from './dimensions';\nimport settings from './settings';\nimport activeModalDimension from './activeModalDimension';\nimport windowHeight from './windowHeight';\nexport default combineReducers({\n  dashboards,\n  selected,\n  dashboardsFilter,\n  controlBar,\n  visualizations,\n  messages,\n  user,\n  editDashboard,\n  printDashboard,\n  itemFilters,\n  style,\n  alert,\n  dimensions,\n  settings,\n  activeModalDimension,\n  windowHeight\n});","import { createStore, applyMiddleware, compose } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport reducer from './reducers';\n\nconst configureStore = dataEngine => {\n  const middleware = [thunk.withExtraArgument(dataEngine)]; // Enable Redux devtools if extension is installed instead of redux-logger\n\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n  if (!window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ && process.env.NODE_ENV !== 'production') {\n    middleware.push(createLogger());\n  }\n\n  return createStore(reducer, composeEnhancers(applyMiddleware(...middleware)));\n};\n\nexport default configureStore;","//------------------------------------------------------------------------------\n// <auto-generated>\n// This code was generated by d2-i18n-generate.\n//\n// Changes to this file may cause incorrect behavior and will be lost if\n// the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\nimport i18n from '@dhis2/d2-i18n';\nimport arTranslations from './ar/translations.json';\nimport ar_IQTranslations from './ar_IQ/translations.json';\nimport ckbTranslations from './ckb/translations.json';\nimport csTranslations from './cs/translations.json';\nimport daTranslations from './da/translations.json';\nimport enTranslations from './en/translations.json';\nimport esTranslations from './es/translations.json';\nimport frTranslations from './fr/translations.json';\nimport idTranslations from './id/translations.json';\nimport kmTranslations from './km/translations.json';\nimport loTranslations from './lo/translations.json';\nimport myTranslations from './my/translations.json';\nimport nbTranslations from './nb/translations.json';\nimport prsTranslations from './prs/translations.json';\nimport psTranslations from './ps/translations.json';\nimport ptTranslations from './pt/translations.json';\nimport pt_BRTranslations from './pt_BR/translations.json';\nimport ruTranslations from './ru/translations.json';\nimport svTranslations from './sv/translations.json';\nimport tetTranslations from './tet/translations.json';\nimport tgTranslations from './tg/translations.json';\nimport ukTranslations from './uk/translations.json';\nimport urTranslations from './ur/translations.json';\nimport uzTranslations from './uz/translations.json';\nimport uz_CyrlTranslations from './uz_Cyrl/translations.json';\nimport viTranslations from './vi/translations.json';\nimport zhTranslations from './zh/translations.json';\nimport zh_CNTranslations from './zh_CN/translations.json';\nconst namespace = 'default';\ni18n.addResources('ar', namespace, arTranslations);\ni18n.addResources('ar_IQ', namespace, ar_IQTranslations);\ni18n.addResources('ckb', namespace, ckbTranslations);\ni18n.addResources('cs', namespace, csTranslations);\ni18n.addResources('da', namespace, daTranslations);\ni18n.addResources('en', namespace, enTranslations);\ni18n.addResources('es', namespace, esTranslations);\ni18n.addResources('fr', namespace, frTranslations);\ni18n.addResources('id', namespace, idTranslations);\ni18n.addResources('km', namespace, kmTranslations);\ni18n.addResources('lo', namespace, loTranslations);\ni18n.addResources('my', namespace, myTranslations);\ni18n.addResources('nb', namespace, nbTranslations);\ni18n.addResources('prs', namespace, prsTranslations);\ni18n.addResources('ps', namespace, psTranslations);\ni18n.addResources('pt', namespace, ptTranslations);\ni18n.addResources('pt_BR', namespace, pt_BRTranslations);\ni18n.addResources('ru', namespace, ruTranslations);\ni18n.addResources('sv', namespace, svTranslations);\ni18n.addResources('tet', namespace, tetTranslations);\ni18n.addResources('tg', namespace, tgTranslations);\ni18n.addResources('uk', namespace, ukTranslations);\ni18n.addResources('ur', namespace, urTranslations);\ni18n.addResources('uz', namespace, uzTranslations);\ni18n.addResources('uz_Cyrl', namespace, uz_CyrlTranslations);\ni18n.addResources('vi', namespace, viTranslations);\ni18n.addResources('zh', namespace, zhTranslations);\ni18n.addResources('zh_CN', namespace, zh_CNTranslations);\nexport default i18n;","import React from 'react';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport dhis2theme from '@dhis2/d2-ui-core/theme/mui3.theme';\nimport { Provider as ReduxProvider } from 'react-redux';\nimport { D2Shim } from '@dhis2/app-runtime-adapter-d2';\nimport { useDataEngine } from '@dhis2/app-runtime';\nimport WindowDimensionsProvider from './components/WindowDimensionsProvider';\nimport App from './components/App';\nimport configureStore from './configureStore';\nimport './AppWrapper.css';\nimport './locales';\n\nconst muiTheme = () => createMuiTheme(dhis2theme);\n\nconst d2Config = {\n  schemas: ['chart', 'map', 'report', 'reportTable', 'eventChart', 'eventReport', 'dashboard', 'organisationUnit', 'userGroup']\n}; // TODO: ER and EV plugins require the auth header in development mode.\n// Remove this when these plugins are rewritten\n\nconst authorization = process.env.REACT_APP_DHIS2_AUTHORIZATION || null;\n\nif (authorization) {\n  d2Config.headers = {\n    Authorization: authorization\n  };\n}\n\nconst AppWrapper = () => {\n  const dataEngine = useDataEngine();\n  return <ReduxProvider store={configureStore(dataEngine)}>\n            <MuiThemeProvider theme={muiTheme()}>\n                <D2Shim d2Config={d2Config} i18nRoot=\"./i18n\">\n                    {({\n          d2\n        }) => {\n          if (!d2) {\n            // TODO: Handle errors in d2 initialization\n            return null;\n          }\n\n          return <WindowDimensionsProvider>\n                                <App />\n                            </WindowDimensionsProvider>;\n        }}\n                </D2Shim>\n            </MuiThemeProvider>\n        </ReduxProvider>;\n};\n\nexport default AppWrapper;","import isObject from 'lodash/isObject';\nimport { itemTypeMap } from './itemTypes';\nexport const getVisualizationFromItem = item => {\n  if (!isObject(item)) {\n    return null;\n  }\n\n  const propName = itemTypeMap[item.type]?.propName;\n  return item[propName] || item.reportTable || item.chart || item.map || item.eventReport || item.eventChart || {};\n};\nexport const getVisualizationId = item => getVisualizationFromItem(item).id;\nexport const getVisualizationName = item => getVisualizationFromItem(item).name;","import { REPORT_TABLE, CHART, MAP, EVENT_REPORT, EVENT_CHART, itemTypeMap } from '../../../../modules/itemTypes';\nimport { getVisualizationId } from '../../../../modules/item';\nimport { getGridItemDomId } from '../../../ItemGrid/gridUtil'; //external plugins\n\nconst itemTypeToExternalPlugin = {\n  [MAP]: 'mapPlugin',\n  [EVENT_REPORT]: 'eventReportPlugin',\n  [EVENT_CHART]: 'eventChartPlugin'\n};\n\nconst hasIntegratedPlugin = type => [CHART, REPORT_TABLE].includes(type);\n\nconst getPlugin = type => {\n  if (hasIntegratedPlugin(type)) {\n    return true;\n  }\n\n  const pluginName = itemTypeToExternalPlugin[type];\n  return global[pluginName];\n};\n\nexport const pluginIsAvailable = type => !!getPlugin(type);\nexport const loadPlugin = (plugin, config, credentials) => {\n  if (!(plugin && plugin.load)) {\n    return;\n  }\n\n  plugin.url = credentials.baseUrl;\n  plugin.loadingIndicator = true;\n  plugin.dashboard = true;\n\n  if (credentials.auth) {\n    plugin.auth = credentials.auth;\n  }\n\n  plugin.load(config);\n};\nexport const getLink = (item, baseUrl) => {\n  const appUrl = itemTypeMap[item.type].appUrl(getVisualizationId(item));\n  return `${baseUrl}/${appUrl}`;\n};\nexport const load = async (item, visualization, {\n  credentials,\n  activeType,\n  options = {}\n}) => {\n  const config = { ...visualization,\n    ...options,\n    el: getGridItemDomId(item.id)\n  };\n  const type = activeType || item.type;\n  const plugin = getPlugin(type);\n  loadPlugin(plugin, config, credentials);\n};\nexport const resize = item => {\n  const plugin = getPlugin(item.type);\n\n  if (plugin && plugin.resize) {\n    plugin.resize(getGridItemDomId(item.id));\n  }\n};\nexport const unmount = (item, activeType) => {\n  const plugin = getPlugin(activeType);\n\n  if (plugin && plugin.unmount) {\n    plugin.unmount(getGridItemDomId(item.id));\n  }\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemHeaderWrap\":\"ItemHeader_itemHeaderWrap__JcBP7\",\"itemTitle\":\"ItemHeader_itemTitle__34rHa\",\"itemActionsWrap\":\"ItemHeader_itemActionsWrap__Gx3D9\"};"],"sourceRoot":""}
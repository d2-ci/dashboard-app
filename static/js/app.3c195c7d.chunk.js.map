{"version":3,"sources":["D2App/components/styles/NoContentMessage.module.css","D2App/components/DropdownButton/DropdownButton.module.css","D2App/pages/view/ItemFilter/styles/FilterSelector.module.css","D2App/pages/view/styles/TitleBar.module.css","D2App/components/Item/VisualizationItem/Visualization/loadExternalScript.js","D2App/components/Item/VisualizationItem/Visualization/styles/NoVisualizationMessage.module.css","D2App/components/Item/VisualizationItem/Visualization/styles/LoadingMask.module.css","D2App/components/Item/VisualizationItem/styles/FatalErrorBoundary.module.css","D2App/components/Item/ItemHeader/styles/PrintItemInfo.module.css","D2App/components/Item/VisualizationItem/styles/ItemFooter.module.css","D2App/components/Item/MessagesItem/getFormattedDate.js","D2App/components/Item/MessagesItem/styles/Item.module.css","D2App/components/Item/ListItem/Item.module.css","D2App/components/Item/PrintTitlePageItem/styles/Item.module.css","D2App/pages/view/styles/ItemGrid.module.css","D2App/pages/view/FilterBar/styles/FilterBadge.module.css","D2App/pages/view/FilterBar/styles/FilterBar.module.css","D2App/pages/view/DashboardsBar/styles/Chip.module.css","D2App/pages/view/DashboardsBar/styles/ClearButton.module.css","D2App/pages/view/DashboardsBar/styles/Filter.module.css","D2App/pages/view/DashboardsBar/styles/Content.module.css","D2App/pages/view/DashboardsBar/styles/ShowMoreButton.module.css","D2App/pages/view/DashboardsBar/styles/DragHandle.module.css","D2App/pages/view/DashboardsBar/styles/DashboardsBar.module.css","D2App/components/styles/DashboardContainer.module.css","D2App/pages/view/styles/ViewDashboard.module.css","D2App/pages/edit/ItemSelector/styles/HeaderMenuItem.module.css","D2App/pages/edit/ItemSelector/styles/ContentMenuItem.module.css","D2App/pages/edit/ItemSelector/styles/CategorizedMenuGroup.module.css","D2App/pages/edit/ItemSelector/styles/ItemSelector.module.css","D2App/pages/edit/styles/TitleBar.module.css","D2App/pages/edit/styles/ItemGrid.module.css","D2App/pages/edit/styles/FilterSettingsDialog.module.css","D2App/pages/edit/styles/ConfirmDeleteDialog.module.css","D2App/pages/edit/styles/ActionsBar.module.css","D2App/pages/edit/styles/NotSupportedNotice.module.css","D2App/pages/print/styles/PrintInfo.module.css","D2App/pages/print/styles/PrintActionsBar.module.css","D2App/pages/print/styles/PrintLayoutDashboard.module.css","D2App/pages/edit/styles/EditDashboard.module.css","D2App/pages/edit/styles/NewDashboard.module.css","D2App/pages/print/styles/PrintDashboard.module.css","D2App/components/WindowDimensionsProvider.js","D2App/api/systemSettings.js","D2App/components/SystemSettingsProvider.js","D2App/api/userSettings.js","D2App/components/UserSettingsProvider.js","D2App/components/NoContentMessage.js","D2App/modules/util.js","D2App/api/userDataStore.js","D2App/reducers/selected.js","D2App/api/description.js","D2App/reducers/dashboards.js","D2App/api/fetchAllDashboards.js","D2App/modules/smallScreen.js","D2App/modules/gridUtil.js","D2App/modules/uiBackendItemConverter.js","D2App/modules/getCustomDashboards.js","D2App/actions/dashboards.js","D2App/reducers/dimensions.js","D2App/reducers/itemFilters.js","D2App/actions/itemFilters.js","D2App/reducers/messages.js","D2App/api/messages.js","D2App/components/Item/MessagesItem/actions.js","D2App/reducers/visualizations.js","D2App/api/metadata.js","D2App/modules/dashboardModes.js","D2App/api/fetchDashboard.js","D2App/actions/selected.js","D2App/pages/view/ItemFilter/FilterDialog.js","D2App/reducers/activeModalDimension.js","D2App/actions/activeModalDimension.js","D2App/modules/getFilteredDimensions.js","D2App/modules/useDimensions.js","D2App/actions/dimensions.js","D2App/components/DropdownButton/assets/Arrow.js","D2App/components/DropdownButton/DropdownButton.js","D2App/pages/view/ItemFilter/FilterSelector.js","D2App/pages/view/TitleBar.js","D2App/pages/view/starDashboard.js","D2App/components/Item/VisualizationItem/Visualization/DefaultPlugin.js","D2App/components/Item/VisualizationItem/Visualization/LegacyPlugin.js","D2App/modules/getGridItemDomElementClassName.js","D2App/components/Item/VisualizationItem/isElementFullscreen.js","D2App/components/Item/VisualizationItem/Visualization/NoVisualizationMessage.js","D2App/components/Item/VisualizationItem/Visualization/MapPlugin.js","D2App/components/Item/VisualizationItem/Visualization/LoadingMask.js","D2App/components/Item/VisualizationItem/Visualization/DataVisualizerPlugin.js","D2App/components/Item/VisualizationItem/Visualization/getFilteredVisualization.js","D2App/components/Item/VisualizationItem/getThematicMapViews.js","D2App/components/Item/VisualizationItem/Visualization/getVisualizationConfig.js","D2App/components/Item/VisualizationItem/memoizeOne.js","D2App/components/Item/VisualizationItem/Visualization/Visualization.js","D2App/components/Item/VisualizationItem/assets/icons.js","D2App/components/Item/VisualizationItem/FatalErrorBoundary.js","D2App/components/Item/ItemHeader/ViewItemActions.js","D2App/components/Item/ItemHeader/DeleteItemButton.js","D2App/reducers/editDashboard.js","D2App/api/editDashboard.js","D2App/actions/editDashboard.js","D2App/components/Item/ItemHeader/EditItemActions.js","D2App/components/Item/ItemHeader/PrintItemInfo.js","D2App/components/Item/ItemHeader/ItemHeader.js","D2App/components/Item/VisualizationItem/ItemContextMenu/ViewAsMenuItems.js","D2App/components/Item/VisualizationItem/ItemContextMenu/ItemContextMenu.js","D2App/components/Item/VisualizationItem/ItemFooter.js","D2App/components/Item/VisualizationItem/getGridItemElement.js","D2App/api/dataStatistics.js","D2App/components/Item/VisualizationItem/Item.js","D2App/actions/visualizations.js","D2App/components/Item/MessagesItem/Item.js","D2App/components/Item/NotSupportedItem/Item.js","D2App/components/Item/ListItem/assets/Description.js","D2App/components/Item/ListItem/assets/Delete.js","D2App/components/Item/ListItem/Item.js","D2App/reducers/printDashboard.js","D2App/components/Item/TextItem/Item.js","D2App/components/Item/AppItem/Item.js","D2App/components/Item/SpacerItem/Item.js","D2App/components/Item/PageBreakItem/Item.js","D2App/components/Item/PrintTitlePageItem/Item.js","D2App/components/Item/Item.js","D2App/components/ProgressiveLoadingContainer.js","D2App/pages/view/ItemGrid.js","D2App/pages/view/FilterBar/FilterBadge.js","D2App/pages/view/FilterBar/FilterBar.js","D2App/pages/view/DashboardsBar/Chip.js","D2App/pages/view/DashboardsBar/assets/Clear.js","D2App/pages/view/DashboardsBar/ClearButton.js","D2App/reducers/dashboardsFilter.js","D2App/pages/view/DashboardsBar/Filter.js","D2App/actions/dashboardsFilter.js","D2App/pages/view/DashboardsBar/getFilteredDashboards.js","D2App/pages/view/DashboardsBar/Content.js","D2App/pages/view/DashboardsBar/assets/icons.js","D2App/pages/view/DashboardsBar/ShowMoreButton.js","D2App/pages/view/DashboardsBar/DragHandle.js","D2App/pages/view/DashboardsBar/getRowsFromHeight.js","D2App/reducers/controlBar.js","D2App/api/controlBar.js","D2App/actions/controlBar.js","D2App/pages/view/DashboardsBar/DashboardsBar.js","D2App/components/DashboardContainer.js","D2App/reducers/passiveViewRegistered.js","D2App/actions/printDashboard.js","D2App/pages/view/ViewDashboard.js","D2App/actions/passiveViewRegistered.js","D2App/pages/edit/ItemSelector/ItemSearchField.js","D2App/pages/edit/ItemSelector/HeaderMenuItem.js","D2App/pages/edit/ItemSelector/ContentMenuItem.js","D2App/pages/edit/ItemSelector/selectableItems.js","D2App/pages/edit/ItemSelector/CategorizedMenuGroup.js","D2App/pages/edit/ItemSelector/actions.js","D2App/pages/edit/ItemSelector/SinglesMenuGroup.js","D2App/modules/useDebounce.js","D2App/pages/edit/ItemSelector/ItemSelector.js","D2App/pages/edit/ItemSelector/dashboardsQQuery.js","D2App/pages/edit/TitleBar.js","D2App/pages/edit/ItemGrid.js","D2App/pages/edit/FilterSettingsDialog.js","D2App/pages/edit/ConfirmDeleteDialog.js","D2App/pages/edit/deleteDashboardMutation.js","D2App/pages/edit/ActionsBar.js","D2App/pages/edit/NotSupportedNotice.js","D2App/pages/print/PrintInfo.js","D2App/pages/print/ActionsBar.js","D2App/pages/print/StaticGrid.js","D2App/pages/print/printUtils.js","D2App/pages/print/PrintLayoutItemGrid.js","D2App/pages/print/PrintLayoutDashboard.js","D2App/pages/edit/EditDashboard.js","D2App/pages/edit/NewDashboard.js","D2App/pages/print/PrintItemGrid.js","D2App/pages/print/PrintDashboard.js","D2App/components/Dashboard.js","D2App/modules/localStorage.js","D2App/components/App.js","D2App/reducers/index.js","D2App/configureStore.js","D2App/locales/index.js","D2App/AppWrapper.js","D2App/modules/itemTypes.js","D2App/modules/item.js","D2App/components/Item/VisualizationItem/Visualization/plugin.js","D2App/components/Item/VisualizationItem/getVisualizationContainerDomId.js","D2App/components/Item/ItemHeader/styles/ItemHeader.module.css"],"names":["module","exports","loadExternalScript","src","startsWith","path","process","replace","join","normalizeRelativePath","Promise","resolve","reject","document","querySelector","isScriptLoaded","element","createElement","type","async","cleanup","console","log","head","removeChild","onload","e","onerror","error","appendChild","getFormattedDate","value","uiLocale","global","Intl","DateTimeFormat","locale","year","month","day","format","Date","substr","WindowDimensionsCtx","createContext","windowDims","height","window","innerHeight","width","innerWidth","WindowDimensionsProvider","children","dimensions","setDimensions","useState","useEffect","handleResize","debounce","addEventListener","removeEventListener","React","Provider","useWindowDimensions","useContext","DEFAULT_SETTINGS","keyDashboardContextMenuItemOpenInRelevantApp","keyDashboardContextMenuItemShowInterpretationsAndDetails","keyDashboardContextMenuItemSwitchViewType","keyDashboardContextMenuItemViewFullscreen","keyGatherAnalyticalObjectStatisticsInDashboardViews","SYSTEM_SETTINGS_REMAPPINGS","renameSystemSettings","settings","Object","keys","reduce","mapped","key","systemSettingsQuery","resource","params","SystemSettingsCtx","SystemSettingsProvider","setSettings","engine","useDataEngine","systemSettings","query","assign","fetchData","userSettingsQuery","UserSettingsCtx","UserSettingsProvider","userSettings","displayProperty","keyAnalysisDisplayProperty","useUserSettings","NoContentMessage","text","className","classes","container","orArray","param","Array","isArray","orObject","isObject","arrayToIdMap","array","obj","item","id","validateReducer","defaultValue","undefined","NAMESPACE","hasNamespace","d2","currentUser","dataStore","has","getNamespace","get","create","apiPostUserDataStoreValue","getInstance","set","apiGetUserDataStoreValue","_namespace$keys","namespace","find","k","SET_SELECTED_ID","SET_SELECTED_ISLOADING","SET_SELECTED_SHOWDESCRIPTION","SET_SELECTED_ITEM_ACTIVE_TYPE","CLEAR_SELECTED_ITEM_ACTIVE_TYPES","DEFAULT_STATE_SELECTED_SHOWDESCRIPTION","DEFAULT_STATE_SELECTED_ITEM_ACTIVE_TYPES","combineReducers","state","action","isLoading","showDescription","itemActiveTypes","activeType","sGetSelectedRoot","selected","sGetSelectedId","sGetSelectedIsLoading","sGetSelectedShowDescription","sGetSelectedItemActiveType","KEY_SHOW_DESCRIPTION","SET_DASHBOARDS","ADD_DASHBOARDS","SET_DASHBOARD_STARRED","SET_DASHBOARD_ITEMS","DEFAULT_STATE_DASHBOARDS","byId","items","EMPTY_DASHBOARD","sGetDashboardsRoot","dashboards","sGetDashboardById","sDashboardsIsFetching","sGetAllDashboards","sGetDashboardItems","sGetStarredDashboards","values","filter","dashboard","starred","sGetUnstarredDashboards","sGetDashboardsSortedByStarred","arraySort","dashboardsQuery","fields","paging","isSmallScreen","getBreakpoint","DASHBOARD_WRAPPER_LR_MARGIN_PX","GRID_COMPACT_TYPE","GRID_ROW_HEIGHT_PX","MARGIN_PX","MARGIN_SM_PX","GRID_PADDING_PX","NEW_ITEM_SHAPE","x","y","w","h","isNonNegativeInteger","Number","isInteger","hasShape","withShape","map","i","col","row","Math","floor","itemWidth","MAX_ITEM_GRID_WIDTH","getShape","originalH","getGridWidth","windowWidthPx","getGridUnitsForSmFromPx","hPx","gridUnitHeightPx","round","getProportionalHeight","wPx","getItemWHPx","ratioWH","isVisualizationType","newWPx","newHPx","getGridItemProperties","itemId","minH","getPageBreakItemShape","yPos","isStatic","GRID_COLUMNS","static","getPrintTitlePageItemShape","isOneItemPerPage","gridUnits","colOrRowSize","marginPx","max","spacerContent","emptyTextItemContent","isTextType","TEXT","convertUiItemsToBackend","SPACER","isUiSpacerType","convertBackendItemsToUi","isBackendSpacerType","gridProperties","getCustomDashboards","data","arrayFrom","d","_d$created","_d$lastUpdated","_d$allowedFilters","name","displayName","description","displayDescription","created","split","lastUpdated","access","dashboardItems","restrictFilters","allowedFilters","tFetchDashboards","dispatch","getState","dataEngine","acSetDashboards","apiFetchDashboards","SET_DIMENSIONS","PE_OU_DIMENSIONS","getDimensionById","DIMENSION_ID_PERIOD","DIMENSION_ID_ORGUNIT","INITIAL_DIMENSIONS","CLEAR_ITEM_FILTERS","ADD_ITEM_FILTER","REMOVE_ITEM_FILTER","DEFAULT_STATE_ITEM_FILTERS","sGetItemFiltersRoot","itemFilters","sGetNamedItemFilters","createSelector","filters","arr","push","dimension","acRemoveItemFilter","RECEIVED_MESSAGES","sGetMessagesRoot","messages","messageConversationsQuery","order","pageSize","tGetMessages","messageConversations","getMessages","err","ADD_VISUALIZATION","CLEAR_VISUALIZATIONS","DEFAULT_STATE_VISUALIZATIONS","isEmpty","p","sGetVisualization","visualizations","sGetVisualizationsRoot","getIdNameFields","rename","getDimensionFields","withItems","arrayClean","getAxesFields","getFavoriteFields","withDimensions","withOptions","apiFetchVisualization","getVisualizationId","MAP","Api","getApi","getEndPointName","EDIT","NEW","VIEW","PRINT","PRINT_LAYOUT","isEditMode","mode","includes","isPrintMode","isViewMode","baseDashboardFields","viewDashboardQuery","editDashboardQuery","apiFetchDashboard","variables","acSetSelectedId","acSetSelectedShowDescription","_extends","target","arguments","length","source","prototype","hasOwnProperty","call","apply","this","connect","initiallySelectedItems","addItemFilter","removeItemFilter","onClose","setFilters","useD2","onSelectItems","dimensionId","onDeselectItems","itemIdsToRemove","newList","onReorderItems","itemIds","oldList","reorderedList","Fragment","Modal","dataTest","position","large","ModalTitle","ModalContent","commonProps","onSelect","onDeselect","onReorder","selectedItems","PeriodDimension","selectedPeriods","OrgUnitDimension","displayNameProperty","ouItems","DynamicDimension","dimensionTitle","displayNameProp","renderDialogContent","ModalActions","ButtonStrip","Button","secondary","onClick","i18n","t","primary","filterItems","SET_ACTIVE_MODAL_DIMENSION","CLEAR_ACTIVE_MODAL_DIMENSION","DEFAULT_STATE_ACTIVE_MODAL_DIMENSION","sGetActiveModalDimension","activeModalDimension","acSetActiveModalDimension","filteredDimensions","dim","dimensionType","dataDimensionType","useDimensions","doFetch","useSelector","useDispatch","fetchDimensions","unfilteredDimensions","apiFetchDimensions","acSetDimensions","getFilteredDimensions","ArrowDown","xmlns","viewBox","_JSXStyle","ArrowUp","transform","DropdownButton","icon","open","component","small","anchorRef","useRef","ArrowIconComponent","ref","styles","arrow","Layer","transparent","Popper","placement","reference","clearActiveModalDimension","setActiveModalDimension","props","_props$allowedFilters","filterDialogIsOpen","setFilterDialogIsOpen","selectDimension","buttonContainer","IconFilter24","color","colors","grey700","Card","DimensionsPanel","style","onDimensionClick","selectedIds","FilterDialog","ViewTitleBar","setDashboardStarred","updateShowDescription","moreOptionsSmallIsOpen","setMoreOptionsSmallIsOpen","moreOptionsIsOpen","setMoreOptionsIsOpen","sharingDialogIsOpen","setSharingDialogIsOpen","redirectUrl","setRedirectUrl","warningAlert","useAlert","msg","warning","toggleSharingDialog","toggleMoreOptions","printLayout","printOipp","StarIcon","IconStarFilled24","IconStar24","Redirect","to","showHideDescriptionLabel","onToggleShowDescription","apiPostShowDescription","then","catch","show","toggleStarredDashboardLabel","onToggleStarredDashboard","isStarred","mutation","getStarDashboardMutation","getUnstarDashboardMutation","mutate","apiStarDashboard","userAccess","descriptionClasses","cx","descContainer","desc","noDesc","getMoreButton","useSmall","IconMore24","FlyoutMenu","MenuItem","dense","label","titleBar","title","actions","star","Tooltip","content","grey600","strip","update","Link","editLink","manage","shareButton","FilterSelector","moreButton","moreButtonSmall","SharingDialog","onRequestClose","insertTheme","defaultProps","dashboardId","DefaultPlugin","visualization","options","baseUrl","useConfig","credentials","auth","defaultHeaders","Authorization","prevItem","prevActiveType","load","current","unmount","shouldPluginReload","reloadAllowed","visChanged","getVisualizationContainerDomId","LegacyPlugin","availableHeight","availableWidth","gridWidth","el","setViewportSize","setTimeout","clientWidth","clientHeight","getGridItemDomElementClassName","isElementFullscreen","fullscreenElement","webkitFullscreenElement","classList","contains","NoVisualizationMessage","message","MapPlugin","applyFilters","resize","mapViews","mapView","layer","pluginIsAvailable","hideTitle","LoadingMask","center","CircularLoader","VisualizationPlugin","lazy","DataVisualizerPlugin","visualizationLoaded","setVisualizationLoaded","onLoadingComplete","useCallback","Suspense","fallback","forDashboard","getFilteredVisualization","visRows","rows","visColumns","columns","visFilters","forEach","dimensionFound","dimensionObjects","getThematicMapViews","mv","getWithoutId","object","getVisualizationConfig","originalType","thematicMapViews","CHART","VIS_TYPE_COLUMN","VIS_TYPE_PIVOT_TABLE","REPORT_TABLE","layout","getAdaptedUiLayoutByType","memoizeOne","fn","lastArgs","lastValue","args","every","arg","Visualization","Component","constructor","super","memoizedGetFilteredVisualization","memoizedGetVisualizationConfig","render","rest","pluginProps","VISUALIZATION","ownProps","Warning","fill","FatalErrorBoundary","errorFound","componentDidCatch","info","setState","onFatalError","Function","ViewItemActions","actionButtons","itemActionsWrap","DeleteItemButton","IconDelete24","red600","RECEIVED_EDIT_DASHBOARD","RECEIVED_NOT_EDITING","START_NEW_DASHBOARD","RECEIVED_TITLE","RECEIVED_DESCRIPTION","ADD_DASHBOARD_ITEM","REMOVE_DASHBOARD_ITEM","UPDATE_DASHBOARD_ITEM","RECEIVED_DASHBOARD_LAYOUT","SET_PRINT_PREVIEW_VIEW","CLEAR_PRINT_PREVIEW_VIEW","RECEIVED_FILTER_SETTINGS","DEFAULT_STATE_EDIT_DASHBOARD","NEW_DASHBOARD_STATE","printPreviewView","sGetEditDashboardRoot","editDashboard","sGetIsEditing","sGetIsPrintPreviewView","sGetEditDashboardItems","createDashboardMutation","updateDashboardMutation","skipTranslation","skipSharing","generatePayload","acClearEditDashboard","acAddDashboardItem","itemPropName","itemTypeMap","propName","generateUid","gridItemProperties","shape","PAGEBREAK","PRINT_TITLE_PAGE","acUpdateDashboardItem","acRemoveDashboardItem","tSaveDashboard","dashboardToSave","response","uid","updateDashboard","postDashboard","mapDispatchToProps","PrintWarning","IconWarning24","ItemHeader","forwardRef","dashboardMode","isShortened","Actions","EditItemActions","PrintItemInfo","getItemActionsMap","itemHeaderWrap","itemTitle","ViewAsMenuItems","onActiveTypeChanged","isTrackerType","isTrackerDomainType","onViewTable","EVENT_REPORT","onViewChart","EVENT_CHART","isDisabled","iconColor","grey500","ViewAsChartMenuItem","ChartMenuItem","disabled","IconVisualizationColumn16","ViewAsTableMenuItem","TableMenuItem","IconTable16","hasMapView","IconWorld16","ItemContextMenu","menuIsOpen","setMenuIsOpen","allowVisOpenInApp","allowVisShowInterpretations","allowVisViewAs","allowVisFullscreen","fullscreenAllowed","fullscreenSupported","loadItemFailed","closeMenu","canViewAs","isSingleValue","isYearOverYear","VIS_TYPE_GAUGE","VIS_TYPE_PIE","interpretationMenuLabel","activeFooter","buttonRef","createRef","onToggleFullscreen","IconFullscreenExit16","Popover","onClickOutside","Menu","onSelectActiveType","Divider","IconLaunch16","appName","getAppName","href","getLink","IconMessages16","onToggleFooter","IconFullscreen16","ItemFooter","line","scrollContainer","InterpretationsComponent","toLowerCase","getGridItemElement","apiPostDataStatistics","eventType","url","post","_defineProperty","defineProperty","enumerable","configurable","writable","Item","showFooter","configLoaded","requestFullscreen","webkitRequestFullscreen","exitFullscreen","webkitExitFullscreen","uniqueId","onToggleItemExpanded","getActiveType","setActiveType","isEditing","headerRef","itemHeaderTotalMargin","itemContentPadding","calculatedHeight","smallOriginalH","getItemHeightPx","memoizedGetContentHeight","contentRef","offsetHeight","_getGridItemElement","rect","getBoundingClientRect","getComputedStyle","documentElement","parseInt","getPropertyValue","measuredHeight","preferMeasured","updateVisualization","getDataStatisticsName","isFullscreenSupported","getVisualizationName","shortened","getUniqueKey","Consumer","getAvailableHeight","getAvailableWidth","_ownProps$item","PRIVATE","messageTypes","VALIDATION_RESULT","TICKET","SYSTEM","MessagesContainer","getMessageHref","msgIdentifier","messageType","margin","spacers","dp4","list","modeClass","sender","latestMsg","slice","getMessageSender","readClass","read","msgDate","location","messageCount","keyUiLocale","snippet","getMessageItems","seeAll","NotSupportedItem","display","justifyContent","alignItems","IconQuestion24","DescriptionIcon","DeleteIcon","red500","getItemTitle","pluralTitle","removeItem","updateItem","contentItems","index","findIndex","getContentItems","contentItem","deleteButton","deletebutton","listItemType","newContent","updateDashboardItem","deleteicon","link","grey900","getItemUrl","itemicon","SET_PRINT_DASHBOARD","CLEAR_PRINT_DASHBOARD","ADD_PRINT_DASHBOARD_ITEM","SET_PRINT_DASHBOARD_LAYOUT","REMOVE_PRINT_DASHBOARD_ITEM","UPDATE_PRINT_DASHBOARD_ITEM","DEFAULT_STATE_PRINT_DASHBOARD","DEFAULT_DASHBOARD_ITEMS","NEW_PRINT_DASHBOARD_STATE","sGetPrintDashboardRoot","printDashboard","sGetIsPrinting","sGetPrintDashboardItems","_sGetPrintDashboardRo","textDiv","padding","whiteSpace","lineHeight","textField","fontSize","fontStretch","marginBottom","marginTop","onChangeText","updatedItem","viewItem","textDivStyle","RichTextParser","editItem","RichTextEditor","onEdit","event","TextArea","placeholder","onChange","printItem","textItem","getIframeSrc","appDetails","iframeSrc","launchUrl","ouFilter","_appDetails","_appDetails$settings","_appDetails$settings$","appKey","system","installedApps","app","dashboardWidget","border","SpacerItem","PageBreakItem","PrintTitlePageItem","titlePage","filterTitle","listItems","filterListItem","val","filterList","getItemFilterList","viewDashboard","sGetPrintDashboardName","sGetPrintDashboardDescription","GridItem","VisualizationItem","MESSAGES","MessagesItem","REPORTS","RESOURCES","USERS","ListItem","TextItem","APP","AppItem","getGridItem","observerConfig","attributes","childList","subtree","ProgressiveLoadingContainer","shouldLoad","passive","checkShouldLoad","containerRef","bufferPx","bufferFactor","bottom","top","removeHandler","registerHandler","debouncedCheckShouldLoad","debounceMs","from","getElementsByClassName","handlerOptions","observer","MutationObserver","mutationsList","attributeName","observe","disconnect","componentDidMount","componentWillUnmount","eventProps","pick","PropTypes","node","isRequired","number","string","selectedDashboard","expandedItems","setExpandedItems","displayItems","setDisplayItems","layoutSm","setLayoutSm","setGridWidth","getItemsWithAdjustedHeight","sortBy","clickedId","isExpanded","newExpandedItems","expandedItem","expandedHeight","translucent","CenteredContent","ResponsiveReactGridLayout","grid","rowHeight","cols","lg","sm","breakpoints","layouts","compactType","containerPadding","isDraggable","isResizable","draggableCancel","onWidthChange","containerWidth","getItemComponent","openFilterModal","removeFilter","filterText","count","badge","badgeSmall","removeButton","FilterBar","bar","FilterBadge","Chip","chipProps","white","debouncedPostStatistics","UiChip","ClearIcon","grey800","ClearButton","onClear","button","SET_DASHBOARDS_FILTER","CLEAR_DASHBOARDS_FILTER","sGetDashboardsFilter","dashboardsFilter","setDashboardsFilter","clearDashboardsFilter","expanded","onKeypressEnter","onSearchClicked","focusedClassName","setFocusedClassName","inputFocused","setInputFocus","collapsed","searchButton","IconSearch24","searchArea","onFocus","preventDefault","focused","onBlur","searchIconContainer","IconSearch16","input","onKeyUp","keyCode","focus","clearButtonContainer","getFilteredDashboards","filteredDashboards","withRouter","selectedId","history","onChipClicked","onSelectDashboard","_getFilteredDashboard","enterNewMode","controlsSmall","Filter","chipsContainer","controlsLarge","newButton","IconAdd24","ChevronDown","ChevronUp","ShowMoreButton","dashboardBarIsExpanded","buttonLabel","onButtonClicked","buttonEl","MouseEvent","bubbles","cancelable","dispatchEvent","onMouseOver","onMouseOut","showMore","DragHandle","onHeightChanged","setDragging","startingY","setStartingY","onDrag","stopPropagation","currentY","clientY","requestAnimationFrame","onEndDrag","draghandle","onMouseDown","memo","SET_CONTROLBAR_USER_ROWS","userRows","sGetControlBarUserRows","controlBar","sGetControlBarRoot","KEY_CONTROLBAR_ROWS","acSetControlBarUserRows","DashboardsBar","updateUserRows","onExpandedChanged","dragging","userRowsChanged","rootElement","setProperty","vh","apiPostControlBarRows","scrollToTop","scroll","toggleExpanded","cancelExpanded","Content","mouseYPos","newRows","getRowsFromHeight","min","spacer","DashboardContainer","covered","REGISTER_PASSIVE_VIEW","sGetPassiveViewRegistered","passiveViewRegistered","acSetPrintDashboard","acClearPrintDashboard","acAddPrintDashboardItem","acUpdatePrintDashboardItem","dashboardIsEditing","dashboardIsPrinting","clearEditDashboard","clearPrintDashboard","registerPassiveView","controlbarExpanded","setControlbarExpanded","ComponentCover","cover","TitleBar","ItemGrid","ItemSearchField","InputField","HeaderMenuItem","fontWeight","LaunchLink","launchLink","rel","InsertButton","buttonInsert","ContentMenuItem","onInsert","visType","ItemIcon","getItemIcon","renderedItemIcon","VisualizationIcon","visTypeIcons","menuItem","singleItems","header","categorizedItems","listItemTypes","tAddListItemContent","dashboardItemIndex","dashboardItem","hasMore","onChangeItemsLimit","seeMore","setSeeMore","addItem","newItem","itemUrl","showMoreButton","category","addToDashboard","useDebounce","delay","debouncedValue","setDebouncedValue","handler","clearTimeout","ItemSelector","isOpen","setIsOpen","setFilter","setItems","maxOptions","setMaxOptions","Set","debouncedFilterText","maxItems","getDashboardsQQuery","res","updateMaxOptions","delete","add","inputRef","maxWidth","popover","menu","itemType","endPointName","itemCount","getDefaultItemCount","allItems","CategorizedMenuGroup","concat","SinglesMenuGroup","EditTitleBar","onChangeTitle","onChangeDescription","section","titleDescription","_","TextAreaField","itemSelector","acUpdateDashboardLayout","onLayoutChange","newLayout","RadioOptions","filtersSelectable","updateFilterDimensionRestrictability","radioButton","Radio","checked","payload","FilterSettingsDialog","onConfirm","setSelected","setFiltersSelectable","updateSelectedFilters","sItems","periodItem","orgUnitItem","otherItems","closeDialog","Transfer","filterable","leftHeader","transferHeader","maxSelections","Infinity","optionsWidth","rightHeader","selectedWidth","end","ConfirmDeleteDialog","dashboardName","onDeleteConfirmed","onContinueEditing","destructive","deleteDashboardMutation","saveFailedMessage","deleteFailedMessage","newDashboard","deleteAccess","updateAccess","sGetIsNewDashboard","isPrintPreviewView","clearPrintPreview","saveDashboard","fetchDashboards","onDiscardChanges","setFilterSettings","acSetFilterSettings","showPrintPreview","translationDlgIsOpen","setTranslationDlgIsOpen","filterSettingsDlgIsOpen","setFilterSettingsDlgIsOpen","setDashboard","confirmDeleteDlgIsOpen","setConfirmDeleteDlgIsOpen","saveFailureAlert","critical","deleteFailureAlert","dboard","onConfirmDelete","deleteDashboardConfirmed","onSave","newId","onPrintPreview","onFilterSettingsConfirmed","filterSettingsRestrictability","selectedFilters","toggleFilterSettingsDialog","toggleTranslationDialog","discardBtnText","editBar","controls","TranslationDialog","objectToTranslate","modelDefinition","fieldsToTranslate","onTranslationError","onTranslationSaved","NotSupportedNotice","noticeContainer","NoticeBox","PrintInfo","isLayout","layoutStyle","printSuggestions","divider","PrintActionsBar","getExitPrintButton","isSmall","buttonSmall","buttonLarge","IconChevronLeft24","getPrintButton","print","StaticGrid","pageWidthPx","ReactGridLayout","getTransformYPx","elStyle","_elStyle$transform$sp","transformY","match","isLeapPage","n","getMultiple","factor","multiple","PrintLayoutItemGrid","updateDashboardLayout","pageBreaks","sortedPageBreaks","itemClassNames","isFirstPageBreak","hideExtraPageBreaks","sortedElements","elements","types","elementsWithBoundingRect","indexOf","bottomY","getDomGridItemsSortedByYPos","querySelectorAll","pageBreakBottom","lastItemBottom","foundNonPageBreak","thisItemBottom","gridElement","maxHeight","firstBreak","scrollArea","componentDidUpdate","getItemComponents","addPageBreaks","addDashboardItem","yPosList","pageNum","getPageBreakPositions","fromEdit","setPrintDashboard","wrapper","editView","pageOuter","setEditDashboard","ActionsBar","LayoutPrintPreview","notice","setNewDashboard","notSupportedNotice","removeDashboardItem","sortedItems","spacerCount","PrintItemGrid","dashboardMap","ViewDashboard","EditDashboard","NewDashboard","PrintDashboard","PrintLayoutDashboard","_ownProps$match","_ownProps$match$param","_sGetDashboardById","routeId","dashboardsIsEmpty","dashboardsLoaded","selectDashboard","requestedId","username","lastStoredDashboardId","_dashboardToSelect","dashboardToSelect","dash","sGetSelectedDashboardId","localStorage","getItem","getPreferredDashboardId","customDashboard","setItem","storePreferredDashboardId","some","setIsLoading","loadingMessage","setLoadingMessage","getElementsByTagName","remove","setHeaderbarVisibility","alertTimeout","prepareDashboard","CssVariables","AlertStack","AlertBar","onHidden","permanent","setControlBarRows","controlBarRows","apiGetControlBarRows","setShowDescription","apiGetShowDescription","headerbarHeight","Router","Switch","Route","exact","Dashboard","prop","updateDashboardProp","objectClean","conversations","$merge","newState","$splice","$unshift","idToRemove","stateItems","layoutHasChanged","newStateItems","stateItem","si","configureStore","middleware","thunk","withExtraArgument","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducer","applyMiddleware","addResources","arTranslations","ar_IQTranslations","ckbTranslations","csTranslations","daTranslations","enTranslations","esTranslations","frTranslations","idTranslations","kmTranslations","loTranslations","myTranslations","nbTranslations","prsTranslations","psTranslations","ptTranslations","pt_BRTranslations","ruTranslations","svTranslations","tetTranslations","tgTranslations","ukTranslations","urTranslations","uzTranslations","uz_CyrlTranslations","uz_LatnTranslations","viTranslations","zhTranslations","zh_CNTranslations","d2Config","schemas","authorization","REACT_APP_DHIS2_AUTHORIZATION","headers","AppWrapper","ReduxProvider","store","D2Shim","i18nRoot","App","DOMAIN_TYPE_AGGREGATE","DOMAIN_TYPE_TRACKER","domainType","defaultItemCount","appUrl","dataStatisticsName","getTime","IconTable24","IconFileDocument24","IconVisualizationColumn24","IconWorld24","IconApps24","IconLink24","IconUser24","IconTextBox24","IconMail24","IconEmptyFrame24","getVisualizationFromItem","_itemTypeMap$item$typ","reportTable","chart","eventReport","eventChart","itemTypeToGlobalVariable","itemTypeToScriptPath","hasIntegratedPlugin","getPlugin","pluginName","loadPlugin","config","plugin","globalName","scripts","scriptsPromise","all","fetchPlugin","loadingIndicator","isFullscreen"],"mappings":"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","file":"static/js/app.3c195c7d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"NoContentMessage_container__2Aub9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"arrow\":\"DropdownButton_arrow__3SBa4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonContainer\":\"FilterSelector_buttonContainer__tdWoJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"TitleBar_container__gm2mf\",\"actions\":\"TitleBar_actions__1wSo2\",\"editLink\":\"TitleBar_editLink__3OZ1o\",\"titleBar\":\"TitleBar_titleBar__UPr19\",\"star\":\"TitleBar_star__3Suyw\",\"strip\":\"TitleBar_strip__1BuCs\",\"title\":\"TitleBar_title__1e97N\",\"descContainer\":\"TitleBar_descContainer__vbVMU\",\"desc\":\"TitleBar_desc__3XrB1\",\"noDesc\":\"TitleBar_noDesc__lok30\",\"moreText\":\"TitleBar_moreText__1GSIe\",\"moreButtonSmall\":\"TitleBar_moreButtonSmall__MM6-F\",\"shareButton\":\"TitleBar_shareButton__cW2nB\",\"moreButton\":\"TitleBar_moreButton__14NIM\"};","const isRelative = path => path.startsWith('./');\n\nconst normalizeRelativePath = path => [process.env.PUBLIC_URL, path.replace(/^\\.\\//, '')].join('/');\n\nconst isScriptLoaded = src => document.querySelector('script[src=\"' + src + '\"]') ? true : false;\n\nexport const loadExternalScript = src => {\n  if (isRelative(src)) {\n    src = normalizeRelativePath(src);\n  }\n\n  return new Promise((resolve, reject) => {\n    if (isScriptLoaded(src)) {\n      return resolve();\n    }\n\n    const element = document.createElement('script');\n    element.src = src;\n    element.type = 'text/javascript';\n    element.async = false;\n\n    const cleanup = () => {\n      console.log(`Dynamic Script Removed: ${src}`);\n      document.head.removeChild(element);\n    };\n\n    element.onload = () => {\n      console.log(`Dynamic Script Loaded: ${src}`);\n\n      try {\n        resolve();\n      } catch (e) {\n        cleanup();\n        reject();\n      }\n    };\n\n    element.onerror = () => {\n      console.error(`Dynamic Script Error: ${src}`);\n      cleanup();\n      reject();\n    };\n\n    document.head.appendChild(element);\n  });\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"NoVisualizationMessage_message__22IPi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"center\":\"LoadingMask_center__KHIYy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FatalErrorBoundary_container__3SViR\",\"icon\":\"FatalErrorBoundary_icon__2UbeP\",\"message\":\"FatalErrorBoundary_message__3FzrY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"warning\":\"PrintItemInfo_warning__123PK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"line\":\"ItemFooter_line__3Ko0R\",\"scrollContainer\":\"ItemFooter_scrollContainer__tuq4P\"};","export const getFormattedDate = (value, uiLocale) => {\n  if (typeof global.Intl !== 'undefined' && Intl.DateTimeFormat) {\n    const locale = uiLocale || 'en';\n    return new Intl.DateTimeFormat(locale, {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    }).format(new Date(value));\n  }\n\n  return value.substr(0, 19).replace('T', ' ');\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Item_list__14BHv\",\"seeAll\":\"Item_seeAll__2mEvq\",\"sender\":\"Item_sender__3ojzC\",\"snippet\":\"Item_snippet__2Off5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Item_list__1_nkQ\",\"item\":\"Item_item__3-6QE\",\"itemicon\":\"Item_itemicon__QlouX\",\"link\":\"Item_link___3c_q\",\"deleteicon\":\"Item_deleteicon__3usrl\",\"deletebutton\":\"Item_deletebutton__1DpBW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"titlePage\":\"Item_titlePage__18CNQ\",\"name\":\"Item_name__3nuTV\",\"description\":\"Item_description__1gFQd\",\"filterTitle\":\"Item_filterTitle__2p7TQ\",\"filterList\":\"Item_filterList__qc_G3\",\"filterListItem\":\"Item_filterListItem__sPbBY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"ItemGrid_grid__3RId_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FilterBadge_container__3tGhK\",\"badge\":\"FilterBadge_badge__1_Inq\",\"badgeSmall\":\"FilterBadge_badgeSmall__eEMLp\",\"removeButton\":\"FilterBadge_removeButton__3i9CK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bar\":\"FilterBar_bar__1XjvP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Chip_link__2j6Lw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ClearButton_button__3VpUG\",\"icon\":\"ClearButton_icon__3aaNL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Filter_container__4nI53\",\"searchArea\":\"Filter_searchArea__NEQQ-\",\"input\":\"Filter_input__shCTR\",\"focused\":\"Filter_focused__3jQgr\",\"searchButton\":\"Filter_searchButton__bmV7v\",\"searchIconContainer\":\"Filter_searchIconContainer__1S51H\",\"clearButtonContainer\":\"Filter_clearButtonContainer__qb3j6\",\"collapsed\":\"Filter_collapsed__2fp07\",\"expanded\":\"Filter_expanded__38GiU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Content_container__2aUo2\",\"newButton\":\"Content_newButton__3HWVd\",\"controlsSmall\":\"Content_controlsSmall__xUmRw\",\"controlsLarge\":\"Content_controlsLarge__2s0Pa\",\"newLink\":\"Content_newLink__YgAbP\",\"collapsed\":\"Content_collapsed__3GRXj\",\"expanded\":\"Content_expanded__k2nqc\",\"chipsContainer\":\"Content_chipsContainer__2sJmw\",\"controls\":\"Content_controls__3jHuc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ShowMoreButton_container__3fEwL\",\"showMore\":\"ShowMoreButton_showMore__1FPeJ\",\"disabled\":\"ShowMoreButton_disabled__2wwxj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"draghandle\":\"DragHandle_draghandle__sERVr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"DashboardsBar_container__z0Cs4\",\"content\":\"DashboardsBar_content__6Oh0n\",\"expanded\":\"DashboardsBar_expanded__10cS8\",\"spacer\":\"DashboardsBar_spacer__1y2rQ\",\"collapsed\":\"DashboardsBar_collapsed__3MY1p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"DashboardContainer_container__2PwUK\",\"covered\":\"DashboardContainer_covered__10XqJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ViewDashboard_container__2Sa9Z\",\"cover\":\"ViewDashboard_cover__3E6k_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"HeaderMenuItem_item__3xBhl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuItem\":\"ContentMenuItem_menuItem__3OEIQ\",\"launchLink\":\"ContentMenuItem_launchLink__13wRn\",\"label\":\"ContentMenuItem_label__1kS6o\",\"buttonInsert\":\"ContentMenuItem_buttonInsert__3rvGo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"showMoreButton\":\"CategorizedMenuGroup_showMoreButton__36Y5A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"ItemSelector_menu__1jnIl\",\"popover\":\"ItemSelector_popover__1JI8S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"TitleBar_section__DLQVx\",\"titleDescription\":\"TitleBar_titleDescription__2PsNX\",\"title\":\"TitleBar_title__1hU_N\",\"description\":\"TitleBar_description__ydc7m\",\"itemSelector\":\"TitleBar_itemSelector__29cYF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"ItemGrid_grid__1pIMt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descContainer\":\"FilterSettingsDialog_descContainer__2wKaB\",\"radioButton\":\"FilterSettingsDialog_radioButton__38B7A\",\"transferHeader\":\"FilterSettingsDialog_transferHeader__105SW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ConfirmDeleteDialog_content__3Znul\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editBar\":\"ActionsBar_editBar__P9kaO\",\"controls\":\"ActionsBar_controls__3Y3i1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noticeContainer\":\"NotSupportedNotice_noticeContainer__3Y9Te\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PrintInfo_container__1jB2t\",\"title\":\"PrintInfo_title__2MfuJ\",\"printSuggestions\":\"PrintInfo_printSuggestions__38G1G\",\"divider\":\"PrintInfo_divider__3ko2I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PrintActionsBar_container__2EBX_\",\"actions\":\"PrintActionsBar_actions__2_vXA\",\"link\":\"PrintActionsBar_link__2fCaa\",\"buttonSmall\":\"PrintActionsBar_buttonSmall__1wcN_\",\"buttonLarge\":\"PrintActionsBar_buttonLarge__3kwwv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PrintLayoutDashboard_container__3SXqv\",\"wrapper\":\"PrintLayoutDashboard_wrapper__2hsUa\",\"editView\":\"PrintLayoutDashboard_editView__11x2D\",\"pageOuter\":\"PrintLayoutDashboard_pageOuter__CkoEZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"EditDashboard_container__2H9lQ\",\"notice\":\"EditDashboard_notice__Ho_Ks\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"NewDashboard_container__3vGiA\",\"notice\":\"NewDashboard_notice__2rtDL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PrintDashboard_container__1eUFy\",\"wrapper\":\"PrintDashboard_wrapper__3vfN1\",\"pageOuter\":\"PrintDashboard_pageOuter__G7Kho\"};","import React, { createContext, useContext, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash/debounce';\nexport const WindowDimensionsCtx = /*#__PURE__*/createContext(null);\n\nconst windowDims = () => ({\n  height: window.innerHeight,\n  width: window.innerWidth\n});\n\nconst WindowDimensionsProvider = ({\n  children\n}) => {\n  const [dimensions, setDimensions] = useState(windowDims());\n  useEffect(() => {\n    const handleResize = debounce(() => {\n      setDimensions(windowDims());\n    }, 100);\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(WindowDimensionsCtx.Provider, {\n    value: dimensions\n  }, children);\n};\n\nWindowDimensionsProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};\nexport default WindowDimensionsProvider;\nexport const useWindowDimensions = () => {\n  return useContext(WindowDimensionsCtx);\n};","export const DEFAULT_SETTINGS = {\n  keyDashboardContextMenuItemOpenInRelevantApp: true,\n  keyDashboardContextMenuItemShowInterpretationsAndDetails: true,\n  keyDashboardContextMenuItemSwitchViewType: true,\n  keyDashboardContextMenuItemViewFullscreen: true,\n  keyGatherAnalyticalObjectStatisticsInDashboardViews: false\n};\nconst SYSTEM_SETTINGS = ['keyDashboardContextMenuItemOpenInRelevantApp', 'keyDashboardContextMenuItemShowInterpretationsAndDetails', 'keyDashboardContextMenuItemSwitchViewType', 'keyDashboardContextMenuItemViewFullscreen', 'keyGatherAnalyticalObjectStatisticsInDashboardViews'];\nconst SYSTEM_SETTINGS_REMAPPINGS = {\n  keyDashboardContextMenuItemOpenInRelevantApp: 'allowVisOpenInApp',\n  keyDashboardContextMenuItemShowInterpretationsAndDetails: 'allowVisShowInterpretations',\n  keyDashboardContextMenuItemSwitchViewType: 'allowVisViewAs',\n  keyDashboardContextMenuItemViewFullscreen: 'allowVisFullscreen'\n};\nexport const renameSystemSettings = settings => {\n  return Object.keys(settings).reduce((mapped, key) => {\n    mapped[SYSTEM_SETTINGS_REMAPPINGS[key] || key] = settings[key];\n    return mapped;\n  }, {});\n};\nexport const systemSettingsQuery = {\n  resource: 'systemSettings',\n  params: {\n    key: SYSTEM_SETTINGS\n  }\n};","import React, { useContext, useState, useEffect, createContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDataEngine } from '@dhis2/app-runtime';\nimport { systemSettingsQuery, renameSystemSettings, DEFAULT_SETTINGS } from '../api/systemSettings';\nexport const SystemSettingsCtx = /*#__PURE__*/createContext({});\n\nconst SystemSettingsProvider = ({\n  children\n}) => {\n  const [settings, setSettings] = useState([]);\n  const engine = useDataEngine();\n  useEffect(() => {\n    async function fetchData() {\n      const {\n        systemSettings\n      } = await engine.query({\n        systemSettings: systemSettingsQuery\n      });\n      setSettings(Object.assign({}, renameSystemSettings(DEFAULT_SETTINGS), renameSystemSettings(systemSettings)));\n    }\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/React.createElement(SystemSettingsCtx.Provider, {\n    value: {\n      settings\n    }\n  }, children);\n};\n\nSystemSettingsProvider.propTypes = {\n  children: PropTypes.node\n};\nexport default SystemSettingsProvider;\nexport const useSystemSettings = () => useContext(SystemSettingsCtx);","export const userSettingsQuery = {\n  resource: 'userSettings',\n  params: {\n    key: ['keyDbLocale', 'keyUiLocale', 'keyAnalysisDisplayProperty']\n  }\n};","import React, { useContext, useState, useEffect, createContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDataEngine } from '@dhis2/app-runtime';\nimport { userSettingsQuery } from '../api/userSettings';\nexport const UserSettingsCtx = /*#__PURE__*/createContext({});\n\nconst UserSettingsProvider = ({\n  children\n}) => {\n  const [settings, setSettings] = useState([]);\n  const engine = useDataEngine();\n  useEffect(() => {\n    async function fetchData() {\n      const {\n        userSettings\n      } = await engine.query({\n        userSettings: userSettingsQuery\n      });\n      setSettings({ ...userSettings,\n        displayProperty: userSettings.keyAnalysisDisplayProperty\n      });\n    }\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/React.createElement(UserSettingsCtx.Provider, {\n    value: {\n      userSettings: settings\n    }\n  }, children);\n};\n\nUserSettingsProvider.propTypes = {\n  children: PropTypes.node\n};\nexport default UserSettingsProvider;\nexport const useUserSettings = () => useContext(UserSettingsCtx);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classes from './styles/NoContentMessage.module.css';\n\nconst NoContentMessage = ({\n  text\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  className: classes.container\n}, text);\n\nNoContentMessage.propTypes = {\n  text: PropTypes.string\n};\nexport default NoContentMessage;","import isObject from 'lodash/isObject';\nexport function orArray(param) {\n  return Array.isArray(param) ? param : [];\n}\nexport function orObject(param) {\n  return isObject(param) ? param : {};\n} // object\n\nexport function arrayToIdMap(array) {\n  return array.reduce((obj, item) => {\n    obj[item.id] = item;\n    return obj;\n  }, {});\n} // reducer validator\n\nexport const validateReducer = (value, defaultValue) => value === undefined || value === null ? defaultValue : value;","import { getInstance } from 'd2';\nexport const NAMESPACE = 'dashboard';\nexport const hasNamespace = async (d2) => await d2.currentUser.dataStore.has(NAMESPACE);\nexport const getNamespace = async (d2, hasNamespace) => hasNamespace ? await d2.currentUser.dataStore.get(NAMESPACE) : await d2.currentUser.dataStore.create(NAMESPACE);\nexport const apiPostUserDataStoreValue = async (key, value) => {\n  const d2 = await getInstance();\n  const ns = await getNamespace(d2, hasNamespace);\n  return ns.set(key, value);\n};\nexport const apiGetUserDataStoreValue = async (key, defaultValue) => {\n  var _namespace$keys;\n\n  const d2 = await getInstance();\n  const namespace = await getNamespace(d2, await hasNamespace(d2));\n  const hasKey = namespace === null || namespace === void 0 ? void 0 : (_namespace$keys = namespace.keys) === null || _namespace$keys === void 0 ? void 0 : _namespace$keys.find(k => k === key);\n\n  if (hasKey) {\n    return await namespace.get(key);\n  } else {\n    await apiPostUserDataStoreValue(key, defaultValue, namespace);\n    console.log('(These errors to /userDataStore can be ignored)');\n    return defaultValue;\n  }\n};","/** @module reducers/selected */\nimport { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\nexport const SET_SELECTED_ID = 'SET_SELECTED_ID';\nexport const SET_SELECTED_ISLOADING = 'SET_SELECTED_ISLOADING';\nexport const SET_SELECTED_SHOWDESCRIPTION = 'SET_SELECTED_SHOWDESCRIPTION';\nexport const SET_SELECTED_ITEM_ACTIVE_TYPE = 'SET_SELECTED_ITEM_ACTIVE_TYPE';\nexport const CLEAR_SELECTED_ITEM_ACTIVE_TYPES = 'CLEAR_SELECTED_ITEM_ACTIVE_TYPES';\nexport const DEFAULT_STATE_SELECTED_ID = null;\nexport const DEFAULT_STATE_SELECTED_ISLOADING = false;\nexport const DEFAULT_STATE_SELECTED_SHOWDESCRIPTION = false;\nexport const DEFAULT_STATE_SELECTED_ITEM_ACTIVE_TYPES = {};\nexport const NON_EXISTING_DASHBOARD_ID = '0';\n\nconst id = (state = DEFAULT_STATE_SELECTED_ID, action) => {\n  switch (action.type) {\n    case SET_SELECTED_ID:\n      return validateReducer(action.value, DEFAULT_STATE_SELECTED_ID);\n\n    default:\n      return state;\n  }\n};\n\nconst isLoading = (state = DEFAULT_STATE_SELECTED_ISLOADING, action) => {\n  switch (action.type) {\n    case SET_SELECTED_ISLOADING:\n      return validateReducer(action.value, DEFAULT_STATE_SELECTED_ISLOADING);\n\n    default:\n      return state;\n  }\n};\n\nconst showDescription = (state = DEFAULT_STATE_SELECTED_SHOWDESCRIPTION, action) => {\n  switch (action.type) {\n    case SET_SELECTED_SHOWDESCRIPTION:\n      return validateReducer(action.value, DEFAULT_STATE_SELECTED_SHOWDESCRIPTION);\n\n    default:\n      return state;\n  }\n};\n\nconst itemActiveTypes = (state = DEFAULT_STATE_SELECTED_ITEM_ACTIVE_TYPES, action) => {\n  switch (action.type) {\n    case SET_SELECTED_ITEM_ACTIVE_TYPE:\n      {\n        return { ...state,\n          [action.id]: action.activeType\n        };\n      }\n\n    case CLEAR_SELECTED_ITEM_ACTIVE_TYPES:\n      {\n        return DEFAULT_STATE_SELECTED_ITEM_ACTIVE_TYPES;\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  id,\n  isLoading,\n  showDescription,\n  itemActiveTypes\n}); // Selectors\n\nexport const sGetSelectedRoot = state => state.selected;\nexport const sGetSelectedId = state => sGetSelectedRoot(state).id;\nexport const sGetSelectedIsLoading = state => sGetSelectedRoot(state).isLoading;\nexport const sGetSelectedShowDescription = state => sGetSelectedRoot(state).showDescription;\nexport const sGetSelectedItemActiveType = (state, id) => sGetSelectedRoot(state).itemActiveTypes[id];","import { apiGetUserDataStoreValue, apiPostUserDataStoreValue } from './userDataStore';\nimport { DEFAULT_STATE_SELECTED_SHOWDESCRIPTION } from '../reducers/selected';\nconst KEY_SHOW_DESCRIPTION = 'showDescription';\nexport const apiGetShowDescription = async () => await apiGetUserDataStoreValue(KEY_SHOW_DESCRIPTION, DEFAULT_STATE_SELECTED_SHOWDESCRIPTION);\nexport const apiPostShowDescription = value => apiPostUserDataStoreValue(KEY_SHOW_DESCRIPTION, value);","/** @module reducers/dashboards */\nimport arraySort from 'd2-utilizr/lib/arraySort';\nimport { orObject } from '../modules/util';\nexport const SET_DASHBOARDS = 'SET_DASHBOARDS';\nexport const ADD_DASHBOARDS = 'ADD_DASHBOARDS';\nexport const SET_DASHBOARD_STARRED = 'SET_DASHBOARD_STARRED';\nexport const SET_DASHBOARD_ITEMS = 'SET_DASHBOARD_ITEMS';\nexport const DEFAULT_STATE_DASHBOARDS = {\n  byId: null,\n  items: []\n};\nexport const EMPTY_DASHBOARD = {}; // reducer helper functions\n\nconst updateDashboardProp = ({\n  state,\n  dashboardId,\n  prop,\n  value\n}) => ({\n  byId: { ...state.byId,\n    [dashboardId]: { ...state.byId[dashboardId],\n      [prop]: value\n    }\n  },\n  items: state.items\n});\n/**\n * Reducer that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n * @returns {Object}\n */\n\n\nexport default ((state = DEFAULT_STATE_DASHBOARDS, action) => {\n  switch (action.type) {\n    case SET_DASHBOARDS:\n      {\n        return {\n          byId: action.value,\n          items: []\n        };\n      }\n\n    case ADD_DASHBOARDS:\n      {\n        return { ...state,\n          byId: { ...state.byId,\n            ...action.value\n          }\n        };\n      }\n\n    case SET_DASHBOARD_STARRED:\n      {\n        return updateDashboardProp({\n          state,\n          dashboardId: action.dashboardId,\n          prop: 'starred',\n          value: action.value\n        });\n      }\n\n    case SET_DASHBOARD_ITEMS:\n      {\n        return { ...state,\n          items: action.value\n        };\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetDashboardsRoot = state => state.dashboards; // selector level 1\n\n/**\n * Selector which returns a dashboard by id from the state object\n * If no matching dashboard is found it returns undefined\n * If dashboards.byId is null, then the dashboards api request\n * has not yet completed. If dashboards.byId is an empty object\n * then the dashboards api request is complete, but no dashboards\n * were returned\n *\n * @function\n * @param {Object} state The current state\n * @param {Number} id The id of the dashboard\n * @returns {Object | undefined}\n */\n\nexport const sGetDashboardById = (state, id) => orObject(sGetDashboardsRoot(state).byId)[id];\nexport const sDashboardsIsFetching = state => {\n  return sGetDashboardsRoot(state).byId === null;\n};\nexport const sGetSelectedDashboardId = (state, id, lastStoredDashboardId) => {\n  var _dashboardToSelect;\n\n  let dashboardToSelect = null;\n\n  if (id) {\n    dashboardToSelect = sGetDashboardById(state, id) || null;\n  } else {\n    const dash = sGetDashboardById(state, lastStoredDashboardId);\n    dashboardToSelect = lastStoredDashboardId && dash ? dash : sGetDashboardsSortedByStarred(state)[0];\n  }\n\n  return ((_dashboardToSelect = dashboardToSelect) === null || _dashboardToSelect === void 0 ? void 0 : _dashboardToSelect.id) || null;\n};\n/**\n * Selector which returns all dashboards (the byId object)\n *\n * @function\n * @param {Object} state The current state\n * @returns {Object | undefined}\n */\n\nexport const sGetAllDashboards = state => orObject(sGetDashboardsRoot(state).byId);\n/**\n * Selector which returns the current dashboard items\n *\n * @function\n * @param {Object} state The current state\n * @returns {Array}\n */\n\nexport const sGetDashboardItems = state => sGetDashboardsRoot(state).items; // selector level 2\n\nconst sGetStarredDashboards = state => Object.values(sGetAllDashboards(state)).filter(dashboard => dashboard.starred === true);\n\nconst sGetUnstarredDashboards = state => Object.values(sGetAllDashboards(state)).filter(dashboard => dashboard.starred === false); // selector level 3\n\n\nexport const sGetDashboardsSortedByStarred = state => [...arraySort(sGetStarredDashboards(state), 'ASC', 'displayName'), ...arraySort(sGetUnstarredDashboards(state), 'ASC', 'displayName')];","export const dashboardsQuery = {\n  resource: 'dashboards',\n  params: {\n    fields: ['id', 'displayName', 'favorite~rename(starred)'],\n    paging: false\n  }\n};\nexport const apiFetchDashboards = async dataEngine => {\n  try {\n    const dashboardsData = await dataEngine.query({\n      dashboards: dashboardsQuery\n    });\n    return dashboardsData.dashboards.dashboards;\n  } catch (error) {\n    console.log('Error: ', error);\n  }\n};","import { DASHBOARD_WRAPPER_LR_MARGIN_PX } from './gridUtil';\nconst SMALL_SCREEN_BREAKPOINT = 480;\nexport const isSmallScreen = width => width <= SMALL_SCREEN_BREAKPOINT;\nexport const getBreakpoint = () => SMALL_SCREEN_BREAKPOINT - DASHBOARD_WRAPPER_LR_MARGIN_PX;","// Dimensions for the react-grid-layout\nimport sortBy from 'lodash/sortBy';\nimport { isVisualizationType } from './itemTypes';\nimport { isSmallScreen } from './smallScreen';\nexport const GRID_COMPACT_TYPE = 'vertical'; // vertical | horizonal | null\n\nexport const GRID_ROW_HEIGHT_PX = 10;\nexport const MARGIN_PX = [10, 10];\nconst SM_SCREEN_MIN_ITEM_GRID_HEIGHT = 13; // minimum of ~320px\n\nexport const SM_SCREEN_GRID_COLUMNS = 1;\nexport const MARGIN_SM_PX = [0, 16];\nexport const GRID_PADDING_PX = [0, 0]; // sum of left+right padding of dashboard-wrapper (App.css)\n\nexport const DASHBOARD_WRAPPER_LR_MARGIN_PX = 32; // make an assumption about the original item w/h ratio\n// assumes grid width of ~1200px at time dashboard was created\n\nconst GRID_COL_WIDTH_PX = 10;\nexport const GRID_COLUMNS = 60; // Dimensions for getShape\n\nexport const NEW_ITEM_SHAPE = {\n  x: 0,\n  y: 0,\n  w: 20,\n  h: 29\n};\nconst NUMBER_OF_ITEM_COLS = 2;\nconst MAX_ITEM_GRID_WIDTH = GRID_COLUMNS - 1;\nexport const MAX_ITEM_GRID_HEIGHT = 34;\nexport const MAX_ITEM_GRID_HEIGHT_OIPP = 35;\nexport const MAX_ITEM_GRID_WIDTH_OIPP = 56;\nconst MIN_ITEM_GRID_HEIGHT = 4; // isNonNegativeInteger\n\nconst isNonNegativeInteger = x => Number.isInteger(x) && x >= 0; // Does the item have all the shape properties?\n\n\nexport const hasShape = item => isNonNegativeInteger(item.x) && isNonNegativeInteger(item.y) && isNonNegativeInteger(item.w) && isNonNegativeInteger(item.h); // returns a rectangular grid block dimensioned with x, y, w, h in grid units.\n// based on a grid with 3 items across\n\nconst getShape = i => {\n  const col = i % NUMBER_OF_ITEM_COLS;\n  const row = Math.floor(i / NUMBER_OF_ITEM_COLS);\n  const itemWidth = Math.floor(MAX_ITEM_GRID_WIDTH / NUMBER_OF_ITEM_COLS);\n  const itemHeight = GRID_ROW_HEIGHT_PX * 2;\n  return {\n    x: col * itemWidth,\n    y: row * itemHeight,\n    w: itemWidth,\n    h: itemHeight\n  };\n};\n/**\n * Returns an array of items containing the x, y, w, h dimensions\n * and the item's originalheight in pixels\n * and dimensions to create the small layout (x, y, w, h)\n * @function\n * @param {Array} items\n * @returns {Array}\n */\n\n\nexport const withShape = (items = []) => {\n  const itemsWithShape = items.map((item, i) => hasShape(item) ? item : Object.assign({}, item, getShape(i)));\n  return itemsWithShape.map(item => Object.assign({}, item, {\n    originalH: item.h\n  }));\n};\nexport const getGridWidth = windowWidthPx => windowWidthPx - DASHBOARD_WRAPPER_LR_MARGIN_PX;\n\nconst getGridUnitsForSmFromPx = hPx => {\n  const gridUnitHeightPx = GRID_ROW_HEIGHT_PX + MARGIN_SM_PX[1];\n  return Math.round((hPx + MARGIN_SM_PX[1]) / gridUnitHeightPx);\n};\n\nexport const getProportionalHeight = (item, windowWidthPx) => {\n  // get w/h ratio of the original item\n  const wPx = getItemWHPx(item.w, GRID_COL_WIDTH_PX, MARGIN_PX[0]);\n  const hPx = getItemWHPx(item.h, GRID_ROW_HEIGHT_PX, MARGIN_PX[1]);\n  const ratioWH = wPx / hPx;\n\n  if (!isVisualizationType(item)) {\n    return getGridUnitsForSmFromPx(hPx);\n  }\n\n  const gridWidthPx = getGridWidth(windowWidthPx); // get new height in px based on the ratio\n\n  const newColWidthPx = (gridWidthPx - MARGIN_SM_PX[0] * (SM_SCREEN_GRID_COLUMNS - 1) - GRID_PADDING_PX[0] * 2) / SM_SCREEN_GRID_COLUMNS;\n  const newWPx = newColWidthPx * SM_SCREEN_GRID_COLUMNS;\n  const newHPx = Math.round(newWPx / ratioWH); //convert height in px back to grid units\n\n  const h = getGridUnitsForSmFromPx(newHPx); // item must be at least the set minimum\n\n  return h < SM_SCREEN_MIN_ITEM_GRID_HEIGHT ? SM_SCREEN_MIN_ITEM_GRID_HEIGHT : h;\n};\nexport const getSmallLayout = (items, windowWidthPx) => sortBy(items, ['y', 'x']).map((item, i) => Object.assign({}, item, {\n  x: 0,\n  y: i,\n  w: SM_SCREEN_GRID_COLUMNS,\n  h: getProportionalHeight(item, windowWidthPx)\n}));\nexport const getGridItemProperties = itemId => {\n  return {\n    i: itemId,\n    minH: MIN_ITEM_GRID_HEIGHT\n  };\n};\nexport const getPageBreakItemShape = (yPos, isStatic = true) => {\n  return {\n    x: 0,\n    y: yPos,\n    w: MAX_ITEM_GRID_WIDTH,\n    h: 5,\n    static: !!isStatic,\n    minH: 1\n  };\n};\nexport const getPrintTitlePageItemShape = isOneItemPerPage => {\n  return {\n    x: 0,\n    y: 0,\n    w: isOneItemPerPage ? MAX_ITEM_GRID_WIDTH_OIPP : MAX_ITEM_GRID_WIDTH,\n    h: MAX_ITEM_GRID_HEIGHT,\n    static: true,\n    minH: 1\n  };\n};\n/**\n * Calculates the grid item's height in pixels based\n * on the height in grid units. This calculation\n * is copied directly from react-grid-layout\n * calculateUtils.js (calcGridItemWHPx)\n *\n * Each row's px height is the sum of the GRID_ROW_HEIGHT_PX + MARGIN-Y\n * So the calculation is:\n * GRID_ROW_HEIGHT_PX * Number of rows\n * +\n * yMargin * Number of rows-1\n *\n * @param {Object} item item containing shape (x, y, w, h)\n */\n\nexport const getItemHeightPx = (item, windowWidthPx) => {\n  if (isSmallScreen(windowWidthPx)) {\n    const h = item.smallOriginalH ? item.smallOriginalH : getProportionalHeight(item, windowWidthPx);\n    return getItemWHPx(h, GRID_ROW_HEIGHT_PX, MARGIN_SM_PX[1]);\n  }\n\n  return getItemWHPx(item.originalH, GRID_ROW_HEIGHT_PX, MARGIN_PX[1]);\n};\n\nconst getItemWHPx = (gridUnits, colOrRowSize, marginPx) => Math.round(colOrRowSize * gridUnits + Math.max(0, gridUnits - 1) * marginPx);","import { TEXT, SPACER } from './itemTypes';\nimport { getGridItemProperties } from './gridUtil';\nexport const spacerContent = 'SPACER_ITEM_FOR_DASHBOARD_LAYOUT_CONVENIENCE';\nexport const emptyTextItemContent = 'TEXT_ITEM_WITH_NO_CONTENT';\n\nconst isBackendSpacerType = item => item.type === TEXT && item.text === spacerContent;\n\nconst isUiSpacerType = item => item.type === SPACER;\n\nconst isTextType = item => item.type === TEXT && item.text !== spacerContent;\n\nexport const convertUiItemsToBackend = items => items.map(item => {\n  let text = null;\n\n  if (isUiSpacerType(item)) {\n    text = spacerContent;\n  } else if (isTextType(item)) {\n    text = item.text || emptyTextItemContent;\n  }\n\n  return { ...item,\n    ...(text ? {\n      text\n    } : {})\n  };\n});\nexport const convertBackendItemsToUi = items => items.map(item => {\n  const type = isBackendSpacerType(item) ? SPACER : item.type;\n  const gridProperties = getGridItemProperties(item.id);\n  const text = isTextType(item) ? item.text === emptyTextItemContent ? '' : item.text : null;\n  return { ...item,\n    ...(text !== null ? {\n      text\n    } : {}),\n    type,\n    ...gridProperties\n  };\n});","import arrayFrom from 'd2-utilizr/lib/arrayFrom';\nimport { convertBackendItemsToUi } from './uiBackendItemConverter';\n/**\n * Returns the array of dashboards, customized for ui\n * @function\n * @param {Array} data The original dashboard list\n * @returns {Array}\n */\n\nexport const getCustomDashboards = data => arrayFrom(data).map(d => {\n  var _d$created, _d$lastUpdated, _d$allowedFilters;\n\n  return {\n    id: d.id,\n    name: d.name,\n    displayName: d.displayName,\n    description: d.description,\n    displayDescription: d.displayDescription,\n    starred: d.starred,\n    created: (_d$created = d.created) === null || _d$created === void 0 ? void 0 : _d$created.split('T').join(' ').substr(0, 16),\n    lastUpdated: (_d$lastUpdated = d.lastUpdated) === null || _d$lastUpdated === void 0 ? void 0 : _d$lastUpdated.split('T').join(' ').substr(0, 16),\n    access: d.access,\n    dashboardItems: convertBackendItemsToUi(d.dashboardItems),\n    restrictFilters: d.restrictFilters,\n    allowedFilters: (_d$allowedFilters = d.allowedFilters) !== null && _d$allowedFilters !== void 0 ? _d$allowedFilters : []\n  };\n});","import { SET_DASHBOARDS, ADD_DASHBOARDS, SET_DASHBOARD_STARRED, SET_DASHBOARD_ITEMS } from '../reducers/dashboards';\nimport { apiFetchDashboards } from '../api/fetchAllDashboards';\nimport { arrayToIdMap } from '../modules/util';\nimport { getCustomDashboards } from '../modules/getCustomDashboards'; // actions\n\nexport const acSetDashboards = dashboards => ({\n  type: SET_DASHBOARDS,\n  value: arrayToIdMap(dashboards)\n});\nexport const acAppendDashboards = dashboards => ({\n  type: ADD_DASHBOARDS,\n  value: arrayToIdMap(getCustomDashboards(dashboards))\n});\nexport const acSetDashboardStarred = (dashboardId, isStarred) => ({\n  type: SET_DASHBOARD_STARRED,\n  dashboardId: dashboardId,\n  value: isStarred\n});\nexport const acSetDashboardItems = value => ({\n  type: SET_DASHBOARD_ITEMS,\n  value\n}); // thunks\n\nexport const tFetchDashboards = () => async (dispatch, getState, dataEngine) => {\n  const dashboards = await apiFetchDashboards(dataEngine);\n  return dispatch(acSetDashboards(dashboards));\n};","import { getDimensionById, DIMENSION_ID_PERIOD, DIMENSION_ID_ORGUNIT } from '@dhis2/analytics';\nexport const SET_DIMENSIONS = 'SET_DIMENSIONS';\nconst PE_OU_DIMENSIONS = [getDimensionById(DIMENSION_ID_PERIOD), getDimensionById(DIMENSION_ID_ORGUNIT)];\nconst INITIAL_DIMENSIONS = [];\nexport default ((state = INITIAL_DIMENSIONS, action) => {\n  switch (action.type) {\n    case SET_DIMENSIONS:\n      {\n        return [...PE_OU_DIMENSIONS, ...action.value];\n      }\n\n    default:\n      return state;\n  }\n});\nexport const sGetDimensions = state => state.dimensions;","import { sGetDimensions } from './dimensions';\nimport { createSelector } from 'reselect';\nexport const CLEAR_ITEM_FILTERS = 'CLEAR_ITEM_FILTERS';\nexport const ADD_ITEM_FILTER = 'ADD_ITEM_FILTER';\nexport const REMOVE_ITEM_FILTER = 'REMOVE_ITEM_FILTER';\nexport const DEFAULT_STATE_ITEM_FILTERS = {};\nexport default ((state = DEFAULT_STATE_ITEM_FILTERS, action) => {\n  switch (action.type) {\n    case ADD_ITEM_FILTER:\n      {\n        return { ...state,\n          [action.filter.id]: action.filter.value\n        };\n      }\n\n    case REMOVE_ITEM_FILTER:\n      {\n        const newState = { ...state\n        };\n        delete newState[action.id];\n        return newState;\n      }\n\n    case CLEAR_ITEM_FILTERS:\n      {\n        return DEFAULT_STATE_ITEM_FILTERS;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetItemFiltersRoot = state => state.itemFilters; // simplify the filters structure to:\n// [{ id: 'pe', name: 'Period', values: [{ id: 2019: name: '2019' }, {id: 'LAST_MONTH', name: 'Last month' }]}, ...]\n\nexport const sGetNamedItemFilters = createSelector([sGetItemFiltersRoot, sGetDimensions], (filters, dimensions) => Object.keys(filters).reduce((arr, id) => {\n  arr.push({\n    id: id,\n    name: dimensions.find(dimension => dimension.id === id).name,\n    values: filters[id].map(value => ({\n      id: value.id,\n      name: value.displayName || value.name\n    }))\n  });\n  return arr;\n}, []));","import { ADD_ITEM_FILTER, REMOVE_ITEM_FILTER, CLEAR_ITEM_FILTERS } from '../reducers/itemFilters';\nexport const FILTER_ORG_UNIT = 'ou'; // actions\n\nexport const acAddItemFilter = filter => ({\n  type: ADD_ITEM_FILTER,\n  filter\n});\nexport const acRemoveItemFilter = id => ({\n  type: REMOVE_ITEM_FILTER,\n  id\n});\nexport const acClearItemFilters = () => ({\n  type: CLEAR_ITEM_FILTERS\n});","import update from 'immutability-helper';\nimport { arrayToIdMap } from '../modules/util';\nexport const RECEIVED_MESSAGES = 'RECEIVED_MESSAGES';\nexport default ((state = {}, action) => {\n  switch (action.type) {\n    case RECEIVED_MESSAGES:\n      {\n        const conversations = arrayToIdMap(action.value);\n        const newState = update(state, {\n          $merge: conversations\n        });\n        return newState;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetMessagesRoot = state => state.messages;","export const messageConversationsQuery = {\n  resource: 'messageConversations',\n  params: {\n    fields: 'id,messageCount,lastUpdated,messageType,displayName,read,messages[id,read,sender[id,displayName],text,lastUpdated]',\n    order: 'read:asc',\n    pageSize: 200\n  }\n};\nexport const getMessages = async dataEngine => {\n  try {\n    const {\n      messageConversations\n    } = await dataEngine.query({\n      messageConversations: messageConversationsQuery\n    });\n    return messageConversations.messageConversations;\n  } catch (error) {\n    console.log('Error:', error);\n  }\n};","import { RECEIVED_MESSAGES } from '../../../reducers/messages';\nimport { getMessages } from '../../../api/messages';\n\nconst onError = (action, error) => {\n  console.log(`Error in action ${action}: ${error}`);\n  return error;\n};\n\nexport const receivedMessages = value => ({\n  type: RECEIVED_MESSAGES,\n  value\n});\nexport const tGetMessages = dataEngine => async dispatch => {\n  try {\n    const messageConversations = await getMessages(dataEngine);\n    return dispatch(receivedMessages(messageConversations));\n  } catch (err) {\n    return onError('Get Messages', err);\n  }\n};","import { orObject } from '../modules/util';\nimport objectClean from 'd2-utilizr/lib/objectClean';\n/** @module reducers/visualizations */\n\nexport const ADD_VISUALIZATION = 'ADD_VISUALIZATION';\nexport const CLEAR_VISUALIZATIONS = 'CLEAR_VISUALIZATIONS';\nexport const DEFAULT_STATE_VISUALIZATIONS = {};\n\nconst isEmpty = p => p === undefined || p === null;\n\nexport default ((state = DEFAULT_STATE_VISUALIZATIONS, action) => {\n  switch (action.type) {\n    case ADD_VISUALIZATION:\n      {\n        return { ...state,\n          [action.value.id]: objectClean({ ...orObject(state[action.value.id]),\n            ...action.value\n          }, isEmpty)\n        };\n      }\n\n    case CLEAR_VISUALIZATIONS:\n      {\n        return DEFAULT_STATE_VISUALIZATIONS;\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nconst sGetVisualizationsRoot = state => state.visualizations; // selectors level 1\n\n\nexport const sGetVisualization = (state, id) => {\n  return sGetVisualizationsRoot(state)[id];\n};","import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { getEndPointName, MAP } from '../modules/itemTypes';\nimport { getVisualizationId } from '../modules/item'; // Id, name\n\nexport const getIdNameFields = ({\n  rename\n} = {}) => ['id', `${rename ? 'displayName~rename(name)' : 'name,displayName'}`]; // Item\n\nexport const getItemFields = () => ['dimensionItem~rename(id)', 'displayName~rename(name)', 'dimensionItemType']; // Dimension\n\nexport const getDimensionFields = ({\n  withItems\n}) => arrayClean(['dimension', 'legendSet[id]', 'filter', 'programStage', withItems ? `items[${getItemFields().join(',')}]` : ``]); // Axis\n\nexport const getAxesFields = ({\n  withItems\n}) => [`columns[${getDimensionFields({\n  withItems\n}).join(',')}]`, `rows[${getDimensionFields({\n  withItems\n}).join(',')}]`, `filters[${getDimensionFields({\n  withItems\n}).join(',')}]`]; // Favorite\n\nexport const getFavoriteFields = ({\n  withDimensions,\n  withOptions\n}) => {\n  return arrayClean([`${getIdNameFields({\n    rename: true\n  }).join(',')}`, 'displayDescription~rename(description)', withDimensions ? `${getAxesFields({\n    withItems: true\n  }).join(',')}` : ``, withOptions ? ['*', '!attributeDimensions', '!attributeValues', '!category', '!categoryDimensions', '!categoryOptionGroupSetDimensions', '!columnDimensions', '!dataDimensionItems', '!dataElementDimensions', '!dataElementGroupSetDimensions', '!filterDimensions', '!itemOrganisationUnitGroups', '!lastUpdatedBy', '!organisationUnitGroupSetDimensions', '!organisationUnitLevels', '!organisationUnits', '!programIndicatorDimensions', '!relativePeriods', '!reportParams', '!rowDimensions', '!translations', '!userOrganisationUnit', '!userOrganisationUnitChildren', '!userOrganisationUnitGrandChildren'].join(',') : '']);\n};\nexport const getFavoritesFields = () => [`reportTable[${getFavoriteFields({\n  withDimensions: false\n}).join(',')}]`, `chart[${['type', ...getFavoriteFields({\n  withDimensions: false\n})].join(',')}]`, `map[${getFavoriteFields({\n  withDimensions: false\n}).join(',')}]`, `eventReport[${getFavoriteFields({\n  withDimensions: false\n}).join(',')}]`, `eventChart[${getFavoriteFields({\n  withDimensions: false\n}).join(',')}]`]; // List item\n\nexport const getListItemFields = () => [`reports[${['type', ...getIdNameFields({\n  rename: true\n})].join(',')}]`, `resources[${getIdNameFields({\n  rename: true\n}).join(',')}]`, `users[${getIdNameFields({\n  rename: true\n}).join(',')}]`]; // Map\n\nexport const getMapFields = () => [`${getIdNameFields({\n  rename: true\n}).join(',')}`, 'user,longitude,latitude,zoom,basemap', `mapViews[${getFavoriteFields({\n  withDimensions: true,\n  withOptions: true\n})}]`]; // Api\n\nexport const apiFetchVisualization = async item => {\n  const id = getVisualizationId(item);\n  const fields = item.type === MAP ? getMapFields() : getFavoriteFields({\n    withDimensions: true,\n    withOptions: true\n  });\n  const d2 = await getInstance();\n  return await d2.Api.getApi().get(`${getEndPointName(item.type)}/${id}`, {\n    fields\n  });\n};","export const EDIT = 'edit';\nexport const NEW = 'new';\nexport const VIEW = 'view';\nexport const PRINT = 'print';\nexport const PRINT_LAYOUT = 'print-layout';\nexport const isEditMode = mode => [EDIT, NEW].includes(mode);\nexport const isPrintMode = mode => [PRINT, PRINT_LAYOUT].includes(mode);\nexport const isViewMode = mode => mode === VIEW;","import arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { getIdNameFields, getListItemFields, getFavoritesFields } from './metadata';\nimport { isViewMode } from '../modules/dashboardModes';\n\nconst getDashboardItemsFields = () => arrayClean(['id', 'type', 'shape', 'x', 'y', 'width~rename(w)', 'height~rename(h)', 'messages', 'text', 'appKey', `${getListItemFields().join(',')}`, `${getFavoritesFields().join(',')}`]);\n\nconst baseDashboardFields = arrayClean(['id', 'displayName', 'displayDescription', 'favorite~rename(starred)', 'access', 'restrictFilters', 'allowedFilters', `dashboardItems[${getDashboardItemsFields().join(',')}]`]);\nexport const viewDashboardQuery = {\n  resource: 'dashboards',\n  id: ({\n    id\n  }) => id,\n  params: {\n    fields: baseDashboardFields\n  }\n};\nexport const editDashboardQuery = {\n  resource: 'dashboards',\n  id: ({\n    id\n  }) => id,\n  params: {\n    fields: arrayClean([...baseDashboardFields, `user[${getIdNameFields({\n      rename: true\n    }).join(',')}]`, 'name', 'description', 'created', 'lastUpdated', 'href' // needed for d2-ui-translations-dialog\n    ])\n  }\n}; // Get more info about selected dashboard\n\nexport const apiFetchDashboard = async (dataEngine, id, mode) => {\n  const query = isViewMode(mode) ? viewDashboardQuery : editDashboardQuery;\n\n  try {\n    const dashboardData = await dataEngine.query({\n      dashboard: query\n    }, {\n      variables: {\n        id\n      }\n    });\n    return dashboardData.dashboard;\n  } catch (error) {\n    console.log('Error: ', error);\n  }\n};","import { SET_SELECTED_ID, SET_SELECTED_ISLOADING, SET_SELECTED_SHOWDESCRIPTION, SET_SELECTED_ITEM_ACTIVE_TYPE, CLEAR_SELECTED_ITEM_ACTIVE_TYPES, NON_EXISTING_DASHBOARD_ID, sGetSelectedId } from '../reducers/selected';\nimport { sGetSelectedDashboardId } from '../reducers/dashboards';\nimport { acSetDashboardItems, acAppendDashboards } from './dashboards';\nimport { acClearItemFilters } from './itemFilters';\nimport { tGetMessages } from '../components/Item/MessagesItem/actions';\nimport { acClearVisualizations } from './visualizations';\nimport { apiFetchDashboard } from '../api/fetchDashboard';\nimport { getPreferredDashboardId, storePreferredDashboardId } from '../modules/localStorage';\nimport { apiGetShowDescription } from '../api/description';\nimport { withShape } from '../modules/gridUtil';\nimport { getCustomDashboards } from '../modules/getCustomDashboards';\nimport { MESSAGES } from '../modules/itemTypes'; // actions\n\nexport const acSetSelectedId = value => ({\n  type: SET_SELECTED_ID,\n  value\n});\nexport const acSetSelectedIsLoading = value => ({\n  type: SET_SELECTED_ISLOADING,\n  value\n});\nexport const acSetSelectedShowDescription = value => ({\n  type: SET_SELECTED_SHOWDESCRIPTION,\n  value\n});\nexport const acSetSelectedItemActiveType = (id, activeType) => {\n  const action = {\n    type: SET_SELECTED_ITEM_ACTIVE_TYPE,\n    id,\n    activeType\n  };\n  return action;\n};\nexport const acClearSelectedItemActiveTypes = () => ({\n  type: CLEAR_SELECTED_ITEM_ACTIVE_TYPES\n}); // thunks\n\nexport const tSetSelectedDashboardById = (requestedId, mode, username) => (dispatch, getState, dataEngine) => {\n  const id = sGetSelectedDashboardId(getState(), requestedId, getPreferredDashboardId(username));\n\n  if (!id) {\n    return dispatch(acSetSelectedId(NON_EXISTING_DASHBOARD_ID));\n  }\n\n  return apiFetchDashboard(dataEngine, id, mode).then(selected => {\n    dispatch(acAppendDashboards(selected));\n    const customDashboard = getCustomDashboards(selected)[0];\n    dispatch(acSetDashboardItems(withShape(customDashboard.dashboardItems)));\n    storePreferredDashboardId(username, id);\n\n    if (id !== sGetSelectedId(getState())) {\n      dispatch(acClearItemFilters());\n      dispatch(acClearVisualizations());\n      dispatch(acClearSelectedItemActiveTypes());\n    }\n\n    customDashboard.dashboardItems.some(item => item.type === MESSAGES) && dispatch(tGetMessages(dataEngine));\n    dispatch(acSetSelectedId(id));\n    return selected;\n  }).catch(err => {\n    console.error('Error: ', err);\n    return err;\n  });\n};\nexport const tSetShowDescription = () => async dispatch => {\n  const onSuccess = value => {\n    dispatch(acSetSelectedShowDescription(value));\n  };\n\n  try {\n    const showDescription = await apiGetShowDescription();\n    return onSuccess(showDescription);\n  } catch (err) {\n    console.error('Error (apiGetShowDescription): ', err);\n    return err;\n  }\n};","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { useD2 } from '@dhis2/app-runtime-adapter-d2';\nimport { Button, Modal, ModalTitle, ModalContent, ModalActions, ButtonStrip } from '@dhis2/ui';\nimport { PeriodDimension, DynamicDimension, OrgUnitDimension, DIMENSION_ID_PERIOD, DIMENSION_ID_ORGUNIT } from '@dhis2/analytics';\nimport { acAddItemFilter, acRemoveItemFilter } from '../../../actions/itemFilters';\nimport { sGetItemFiltersRoot } from '../../../reducers/itemFilters';\nimport { useUserSettings } from '../../../components/UserSettingsProvider';\n\nconst FilterDialog = ({\n  dimension,\n  initiallySelectedItems,\n  addItemFilter,\n  removeItemFilter,\n  onClose\n}) => {\n  const [filters, setFilters] = useState(initiallySelectedItems);\n  const {\n    d2\n  } = useD2();\n  const {\n    userSettings\n  } = useUserSettings();\n\n  const onSelectItems = ({\n    dimensionId,\n    items\n  }) => {\n    setFilters({\n      [dimensionId]: items\n    });\n  };\n\n  const onDeselectItems = ({\n    dimensionId,\n    itemIdsToRemove\n  }) => {\n    const oldList = filters[dimensionId] || [];\n    const newList = oldList.filter(item => !itemIdsToRemove.includes(item.id));\n    setFilters({ ...filters,\n      [dimensionId]: newList\n    });\n  };\n\n  const onReorderItems = ({\n    dimensionId,\n    itemIds\n  }) => {\n    const oldList = filters[dimensionId] || [];\n    const reorderedList = itemIds.map(id => oldList.find(item => item.id === id));\n    setFilters({ ...filters,\n      [dimensionId]: reorderedList\n    });\n  };\n\n  const saveFilter = () => {\n    const id = dimension.id;\n    const filterItems = filters[id];\n\n    if (filterItems && filterItems.length) {\n      addItemFilter({\n        id,\n        value: [...filterItems]\n      });\n    } else {\n      removeItemFilter(id);\n    }\n\n    onClose(id);\n  };\n\n  const renderDialogContent = () => {\n    const commonProps = {\n      d2,\n      onSelect: onSelectItems,\n      onDeselect: onDeselectItems,\n      onReorder: onReorderItems\n    };\n    const selectedItems = filters[dimension.id] || [];\n\n    switch (dimension.id) {\n      case DIMENSION_ID_PERIOD:\n        {\n          return /*#__PURE__*/React.createElement(PeriodDimension, {\n            selectedPeriods: selectedItems,\n            onSelect: commonProps.onSelect\n          });\n        }\n\n      case DIMENSION_ID_ORGUNIT:\n        return /*#__PURE__*/React.createElement(OrgUnitDimension, _extends({\n          displayNameProperty: userSettings.keyAnalysisDisplayProperty,\n          ouItems: selectedItems\n        }, commonProps));\n\n      default:\n        return /*#__PURE__*/React.createElement(DynamicDimension, {\n          selectedItems: selectedItems,\n          dimensionId: dimension.id,\n          onSelect: commonProps.onSelect,\n          dimensionTitle: dimension.name,\n          displayNameProp: userSettings.keyAnalysisDisplayProperty\n        });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, dimension.id && /*#__PURE__*/React.createElement(Modal, {\n    dataTest: \"dimension-modal\",\n    onClose: onClose,\n    position: \"top\",\n    large: true\n  }, /*#__PURE__*/React.createElement(ModalTitle, null, dimension.name), /*#__PURE__*/React.createElement(ModalContent, null, renderDialogContent()), /*#__PURE__*/React.createElement(ModalActions, null, /*#__PURE__*/React.createElement(ButtonStrip, null, /*#__PURE__*/React.createElement(Button, {\n    secondary: true,\n    onClick: onClose\n  }, i18n.t('Cancel')), /*#__PURE__*/React.createElement(Button, {\n    primary: true,\n    onClick: saveFilter\n  }, i18n.t('Confirm'))))));\n};\n\nFilterDialog.propTypes = {\n  addItemFilter: PropTypes.func,\n  dimension: PropTypes.object,\n  initiallySelectedItems: PropTypes.object,\n  removeItemFilter: PropTypes.func,\n  onClose: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  initiallySelectedItems: sGetItemFiltersRoot(state)\n});\n\nexport default connect(mapStateToProps, {\n  addItemFilter: acAddItemFilter,\n  removeItemFilter: acRemoveItemFilter\n})(FilterDialog);","export const SET_ACTIVE_MODAL_DIMENSION = 'SET_ACTIVE_MODAL_DIMENSION';\nexport const CLEAR_ACTIVE_MODAL_DIMENSION = 'CLEAR_ACTIVE_MODAL_DIMENSION';\nexport const DEFAULT_STATE_ACTIVE_MODAL_DIMENSION = {};\nexport default ((state = DEFAULT_STATE_ACTIVE_MODAL_DIMENSION, action) => {\n  switch (action.type) {\n    case SET_ACTIVE_MODAL_DIMENSION:\n      {\n        return action.value;\n      }\n\n    case CLEAR_ACTIVE_MODAL_DIMENSION:\n      {\n        return DEFAULT_STATE_ACTIVE_MODAL_DIMENSION;\n      }\n\n    default:\n      return state;\n  }\n});\nexport const sGetActiveModalDimension = state => state.activeModalDimension;","import { SET_ACTIVE_MODAL_DIMENSION, CLEAR_ACTIVE_MODAL_DIMENSION } from '../reducers/activeModalDimension';\nexport const acSetActiveModalDimension = value => ({\n  type: SET_ACTIVE_MODAL_DIMENSION,\n  value\n});\nexport const acClearActiveModalDimension = () => ({\n  type: CLEAR_ACTIVE_MODAL_DIMENSION\n});","// filter out CATEGORY that are not of type ATTRIBUTE\nconst filteredDimensions = dimensions => dimensions.filter(dim => dim.dimensionType !== 'CATEGORY' || dim.dimensionType === 'CATEGORY' && dim.dataDimensionType === 'ATTRIBUTE');\n\nexport default filteredDimensions;","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { acSetDimensions } from '../actions/dimensions';\nimport { apiFetchDimensions } from '@dhis2/analytics';\nimport { useDataEngine } from '@dhis2/app-runtime';\nimport getFilteredDimensions from './getFilteredDimensions';\nimport { useUserSettings } from '../components/UserSettingsProvider';\n\nconst useDimensions = doFetch => {\n  const dataEngine = useDataEngine();\n  const {\n    userSettings\n  } = useUserSettings();\n  const dimensions = useSelector(state => state.dimensions);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const fetchDimensions = async () => {\n      try {\n        const unfilteredDimensions = await apiFetchDimensions(dataEngine, userSettings.keyAnalysisDisplayProperty);\n        dispatch(acSetDimensions(getFilteredDimensions(unfilteredDimensions)));\n      } catch (e) {\n        console.error(e);\n      }\n    };\n\n    if (!dimensions.length && doFetch && userSettings.keyAnalysisDisplayProperty) {\n      fetchDimensions();\n    }\n  }, [dimensions, doFetch, userSettings.keyAnalysisDisplayProperty]);\n  return dimensions;\n};\n\nexport default useDimensions;","import { SET_DIMENSIONS } from '../reducers/dimensions';\nexport const acSetDimensions = dimensions => ({\n  type: SET_DIMENSIONS,\n  value: dimensions\n});","import _JSXStyle from \"styled-jsx/style\";\nimport propTypes from '@dhis2/prop-types';\nimport React from 'react';\nexport function ArrowDown({\n  className\n}) {\n  return /*#__PURE__*/React.createElement(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 12 12\",\n    className: \"jsx-2347926856\" + \" \" + (className || \"\")\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m5.29289 8.7071c.39053.3905 1.02369.3905 1.41422 0l2.99999-2.99999c.3905-.39053.3905-1.02369 0-1.41422-.3905-.39052-1.0237-.39052-1.4142 0l-2.2929 2.2929-2.29289-2.2929c-.39053-.39052-1.02369-.39052-1.41422 0-.39052.39053-.39052 1.02369 0 1.41422z\",\n    className: \"jsx-2347926856\"\n  }), /*#__PURE__*/React.createElement(_JSXStyle, {\n    id: \"2347926856\"\n  }, [\"svg.jsx-2347926856{fill:inherit;height:12px;width:12px;vertical-align:middle;pointer-events:none;}\"]));\n}\nArrowDown.propTypes = {\n  className: propTypes.string\n};\nexport function ArrowUp({\n  className\n}) {\n  return /*#__PURE__*/React.createElement(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 12 12\",\n    className: \"jsx-2347926856\" + \" \" + (className || \"\")\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m5.29289 8.7071c.39053.3905 1.02369.3905 1.41422 0l2.99999-2.99999c.3905-.39053.3905-1.02369 0-1.41422-.3905-.39052-1.0237-.39052-1.4142 0l-2.2929 2.2929-2.29289-2.2929c-.39053-.39052-1.02369-.39052-1.41422 0-.39052.39053-.39052 1.02369 0 1.41422z\",\n    transform: \"matrix(1 0 0 -1 0 12.999974)\",\n    className: \"jsx-2347926856\"\n  }), /*#__PURE__*/React.createElement(_JSXStyle, {\n    id: \"2347926856\"\n  }, [\"svg.jsx-2347926856{fill:inherit;height:12px;width:12px;vertical-align:middle;pointer-events:none;}\"]));\n}\nArrowUp.propTypes = {\n  className: propTypes.string\n};","import React, { useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Layer, Popper } from '@dhis2/ui';\nimport { ArrowDown, ArrowUp } from './assets/Arrow';\nimport styles from './DropdownButton.module.css';\n\nconst DropdownButton = ({\n  children,\n  className,\n  icon,\n  open,\n  onClick,\n  component,\n  small\n}) => {\n  const anchorRef = useRef();\n  const ArrowIconComponent = open ? ArrowUp : ArrowDown;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    ref: anchorRef\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: className,\n    onClick: onClick,\n    type: \"button\",\n    small: small,\n    icon: icon\n  }, children, /*#__PURE__*/React.createElement(ArrowIconComponent, {\n    className: styles.arrow\n  })), open && /*#__PURE__*/React.createElement(Layer, {\n    onClick: onClick,\n    transparent: true\n  }, /*#__PURE__*/React.createElement(Popper, {\n    placement: \"bottom-start\",\n    reference: anchorRef\n  }, component)));\n};\n\nDropdownButton.propTypes = {\n  component: PropTypes.element.isRequired,\n  open: PropTypes.bool.isRequired,\n  onClick: PropTypes.func.isRequired,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  icon: PropTypes.element,\n  small: PropTypes.bool\n};\nexport default DropdownButton;","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport isEmpty from 'lodash/isEmpty';\nimport i18n from '@dhis2/d2-i18n';\nimport { DimensionsPanel } from '@dhis2/analytics';\nimport { Card, colors, IconFilter24 } from '@dhis2/ui';\nimport FilterDialog from './FilterDialog';\nimport { sGetActiveModalDimension } from '../../../reducers/activeModalDimension';\nimport { sGetItemFiltersRoot } from '../../../reducers/itemFilters';\nimport { acClearActiveModalDimension, acSetActiveModalDimension } from '../../../actions/activeModalDimension';\nimport useDimensions from '../../../modules/useDimensions';\nimport DropdownButton from '../../../components/DropdownButton/DropdownButton';\nimport classes from './styles/FilterSelector.module.css';\n\nconst FilterSelector = props => {\n  var _props$allowedFilters;\n\n  const [filterDialogIsOpen, setFilterDialogIsOpen] = useState(false);\n  const dimensions = useDimensions(filterDialogIsOpen);\n\n  const toggleFilterDialogIsOpen = () => setFilterDialogIsOpen(!filterDialogIsOpen);\n\n  const onCloseDialog = () => {\n    setFilterDialogIsOpen(false);\n    props.clearActiveModalDimension();\n  };\n\n  const selectDimension = id => {\n    props.setActiveModalDimension(dimensions.find(dimension => dimension.id === id));\n  };\n\n  const filterDimensions = () => {\n    if (!props.restrictFilters) {\n      return dimensions;\n    } else {\n      return dimensions.filter(d => [...props.allowedFilters].includes(d.id));\n    }\n  };\n\n  const getFilterSelector = () => /*#__PURE__*/React.createElement(Card, {\n    dataTest: \"dashboard-filter-popover\"\n  }, /*#__PURE__*/React.createElement(DimensionsPanel, {\n    style: {\n      width: '320px'\n    },\n    dimensions: filterDimensions(),\n    onDimensionClick: selectDimension,\n    selectedIds: Object.keys(props.initiallySelectedItems)\n  }));\n\n  return props.restrictFilters && !((_props$allowedFilters = props.allowedFilters) !== null && _props$allowedFilters !== void 0 && _props$allowedFilters.length) ? null : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.buttonContainer\n  }, /*#__PURE__*/React.createElement(DropdownButton, {\n    open: filterDialogIsOpen,\n    onClick: toggleFilterDialogIsOpen,\n    icon: /*#__PURE__*/React.createElement(IconFilter24, {\n      color: colors.grey700\n    }),\n    component: getFilterSelector()\n  }, i18n.t('Add filter'))), !isEmpty(props.dimension) ? /*#__PURE__*/React.createElement(FilterDialog, {\n    dimension: props.dimension,\n    onClose: onCloseDialog\n  }) : null);\n};\n\nconst mapStateToProps = state => ({\n  dimension: sGetActiveModalDimension(state),\n  initiallySelectedItems: sGetItemFiltersRoot(state)\n});\n\nFilterSelector.propTypes = {\n  allowedFilters: PropTypes.array,\n  clearActiveModalDimension: PropTypes.func,\n  dimension: PropTypes.object,\n  initiallySelectedItems: PropTypes.object,\n  restrictFilters: PropTypes.bool,\n  setActiveModalDimension: PropTypes.func\n};\nexport default connect(mapStateToProps, {\n  clearActiveModalDimension: acClearActiveModalDimension,\n  setActiveModalDimension: acSetActiveModalDimension\n})(FilterSelector);","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { Link, Redirect } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport SharingDialog from '@dhis2/d2-ui-sharing-dialog';\nimport { useDataEngine, useAlert } from '@dhis2/app-runtime';\nimport { Button, FlyoutMenu, MenuItem, Tooltip, colors, IconMore24, IconStar24, IconStarFilled24 } from '@dhis2/ui';\nimport { useD2 } from '@dhis2/app-runtime-adapter-d2';\nimport { orObject } from '../../modules/util';\nimport { apiStarDashboard } from './starDashboard';\nimport { apiPostShowDescription } from '../../api/description';\nimport { acSetDashboardStarred } from '../../actions/dashboards';\nimport { acSetSelectedShowDescription } from '../../actions/selected';\nimport FilterSelector from './ItemFilter/FilterSelector';\nimport DropdownButton from '../../components/DropdownButton/DropdownButton';\nimport { sGetSelectedId, sGetSelectedShowDescription } from '../../reducers/selected';\nimport { sGetDashboardById, sGetDashboardItems, EMPTY_DASHBOARD } from '../../reducers/dashboards';\nimport classes from './styles/TitleBar.module.css';\n\nconst ViewTitleBar = ({\n  id,\n  name,\n  description,\n  access,\n  showDescription,\n  starred,\n  setDashboardStarred,\n  updateShowDescription,\n  restrictFilters,\n  allowedFilters\n}) => {\n  const [moreOptionsSmallIsOpen, setMoreOptionsSmallIsOpen] = useState(false);\n  const [moreOptionsIsOpen, setMoreOptionsIsOpen] = useState(false);\n  const [sharingDialogIsOpen, setSharingDialogIsOpen] = useState(false);\n  const [redirectUrl, setRedirectUrl] = useState(null);\n  const {\n    d2\n  } = useD2();\n  const dataEngine = useDataEngine();\n  const warningAlert = useAlert(({\n    msg\n  }) => msg, {\n    warning: true\n  });\n\n  const toggleSharingDialog = () => setSharingDialogIsOpen(!sharingDialogIsOpen);\n\n  const toggleMoreOptions = small => small ? setMoreOptionsSmallIsOpen(!moreOptionsSmallIsOpen) : setMoreOptionsIsOpen(!moreOptionsIsOpen);\n\n  const printLayout = () => setRedirectUrl(`${id}/printlayout`);\n\n  const printOipp = () => setRedirectUrl(`${id}/printoipp`);\n\n  const StarIcon = starred ? IconStarFilled24 : IconStar24;\n\n  if (redirectUrl) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: redirectUrl\n    });\n  }\n\n  const showHideDescriptionLabel = showDescription ? i18n.t('Hide description') : i18n.t('Show description');\n\n  const onToggleShowDescription = () => apiPostShowDescription(!showDescription).then(() => {\n    updateShowDescription(!showDescription);\n    toggleMoreOptions();\n  }).catch(() => {\n    const msg = showDescription ? i18n.t('Failed to hide description') : i18n.t('Failed to show description');\n    warningAlert.show({\n      msg\n    });\n  });\n\n  const toggleStarredDashboardLabel = starred ? i18n.t('Unstar dashboard') : i18n.t('Star dashboard');\n\n  const onToggleStarredDashboard = () => apiStarDashboard(dataEngine, id, !starred).then(() => {\n    setDashboardStarred(id, !starred);\n\n    if (moreOptionsIsOpen) {\n      toggleMoreOptions();\n    }\n  }).catch(() => {\n    const msg = starred ? i18n.t('Failed to unstar the dashboard') : i18n.t('Failed to star the dashboard');\n    warningAlert.show({\n      msg\n    });\n  });\n\n  const userAccess = orObject(access);\n  const descriptionClasses = cx(classes.descContainer, description ? classes.desc : classes.noDesc);\n\n  const getMoreMenu = () => /*#__PURE__*/React.createElement(FlyoutMenu, null, /*#__PURE__*/React.createElement(MenuItem, {\n    dense: true,\n    label: toggleStarredDashboardLabel,\n    onClick: onToggleStarredDashboard\n  }), /*#__PURE__*/React.createElement(MenuItem, {\n    dense: true,\n    label: showHideDescriptionLabel,\n    onClick: onToggleShowDescription\n  }), /*#__PURE__*/React.createElement(MenuItem, {\n    dense: true,\n    label: i18n.t('Print'),\n    dataTest: \"print-menu-item\"\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    dense: true,\n    label: i18n.t('Dashboard layout'),\n    onClick: printLayout,\n    dataTest: \"print-layout-menu-item\"\n  }), /*#__PURE__*/React.createElement(MenuItem, {\n    dense: true,\n    label: i18n.t('One item per page'),\n    onClick: printOipp,\n    dataTest: \"print-oipp-menu-item\"\n  })));\n\n  const getMoreButton = (className, useSmall) => /*#__PURE__*/React.createElement(DropdownButton, {\n    className: className,\n    small: useSmall,\n    onClick: () => toggleMoreOptions(useSmall),\n    icon: /*#__PURE__*/React.createElement(IconMore24, {\n      color: colors.grey700\n    }),\n    component: getMoreMenu(),\n    open: useSmall ? moreOptionsSmallIsOpen : moreOptionsIsOpen\n  }, i18n.t('More'));\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.container\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.titleBar\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.title,\n    \"data-test\": \"view-dashboard-title\"\n  }, name), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.actions\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.star,\n    onClick: onToggleStarredDashboard,\n    \"data-test\": \"button-star-dashboard\"\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    content: starred ? i18n.t('Unstar dashboard') : i18n.t('Star dashboard')\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    \"data-test\": starred ? 'dashboard-starred' : 'dashboard-unstarred'\n  }, /*#__PURE__*/React.createElement(StarIcon, {\n    color: colors.grey600\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.strip\n  }, userAccess.update ? /*#__PURE__*/React.createElement(Link, {\n    className: classes.editLink,\n    to: `/${id}/edit`,\n    \"data-test\": \"link-edit-dashboard\"\n  }, /*#__PURE__*/React.createElement(Button, null, i18n.t('Edit'))) : null, userAccess.manage ? /*#__PURE__*/React.createElement(Button, {\n    className: classes.shareButton,\n    onClick: toggleSharingDialog\n  }, i18n.t('Share')) : null, /*#__PURE__*/React.createElement(FilterSelector, {\n    allowedFilters: allowedFilters,\n    restrictFilters: restrictFilters\n  }), getMoreButton(classes.moreButton, false), getMoreButton(classes.moreButtonSmall, true)))), showDescription && /*#__PURE__*/React.createElement(\"div\", {\n    className: descriptionClasses,\n    \"data-test\": \"dashboard-description\"\n  }, description || i18n.t('No description'))), id && /*#__PURE__*/React.createElement(SharingDialog, {\n    d2: d2,\n    id: id,\n    type: \"dashboard\",\n    open: sharingDialogIsOpen,\n    onRequestClose: toggleSharingDialog,\n    insertTheme: true\n  }));\n};\n\nViewTitleBar.propTypes = {\n  access: PropTypes.object,\n  allowedFilters: PropTypes.array,\n  description: PropTypes.string,\n  id: PropTypes.string,\n  name: PropTypes.string,\n  restrictFilters: PropTypes.bool,\n  setDashboardStarred: PropTypes.func,\n  showDescription: PropTypes.bool,\n  starred: PropTypes.bool,\n  updateShowDescription: PropTypes.func\n};\nViewTitleBar.defaultProps = {\n  name: '',\n  description: '',\n  starred: false,\n  showDescription: false\n};\n\nconst mapStateToProps = state => {\n  const id = sGetSelectedId(state);\n  const dashboard = sGetDashboardById(state, id) || EMPTY_DASHBOARD;\n  return {\n    id,\n    name: dashboard.displayName,\n    description: dashboard.displayDescription,\n    dashboardItems: sGetDashboardItems(state),\n    showDescription: sGetSelectedShowDescription(state),\n    starred: dashboard.starred,\n    access: dashboard.access,\n    restrictFilters: dashboard.restrictFilters,\n    allowedFilters: dashboard.allowedFilters\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setDashboardStarred: acSetDashboardStarred,\n  updateShowDescription: acSetSelectedShowDescription\n})(ViewTitleBar);","export const getStarDashboardMutation = id => ({\n  type: 'create',\n  resource: `dashboards/${id}/favorite`\n});\nexport const getUnstarDashboardMutation = id => ({\n  type: 'delete',\n  resource: `dashboards/${id}/favorite`\n});\nexport const apiStarDashboard = (dataEngine, id, isStarred) => {\n  const mutation = isStarred ? getStarDashboardMutation(id) : getUnstarDashboardMutation(id);\n  return dataEngine.mutate(mutation);\n};","import React, { useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { useD2 } from '@dhis2/app-runtime-adapter-d2';\nimport { useConfig } from '@dhis2/app-runtime';\nimport { load, unmount } from './plugin';\nimport getVisualizationContainerDomId from '../getVisualizationContainerDomId';\n\nconst DefaultPlugin = ({\n  item,\n  activeType,\n  visualization,\n  options,\n  style\n}) => {\n  const {\n    d2\n  } = useD2();\n  const {\n    baseUrl\n  } = useConfig();\n  const credentials = {\n    baseUrl,\n    auth: d2.Api.getApi().defaultHeaders.Authorization\n  };\n  const prevItem = useRef();\n  const prevActiveType = useRef();\n  useEffect(() => {\n    load(item, visualization, {\n      credentials,\n      activeType,\n      options\n    });\n    prevItem.current = item;\n    prevActiveType.current = activeType;\n    return () => unmount(item, activeType);\n  }, []);\n  useEffect(() => {\n    if (shouldPluginReload()) {\n      unmount(item, prevActiveType.current);\n      load(item, visualization, {\n        credentials,\n        activeType\n      });\n    }\n\n    prevItem.current = item;\n    prevActiveType.current = activeType;\n  }, [item, visualization, activeType]);\n  /**\n   * Prevent unnecessary re-rendering\n   * TODO: fix this hack\n   */\n\n  const shouldPluginReload = () => {\n    const reloadAllowed = prevItem.current === item;\n    const visChanged = prevActiveType.current !== activeType;\n    return reloadAllowed && visChanged;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: getVisualizationContainerDomId(item.id),\n    style: style\n  });\n};\n\nDefaultPlugin.propTypes = {\n  activeType: PropTypes.string,\n  item: PropTypes.object,\n  options: PropTypes.object,\n  style: PropTypes.object,\n  visualization: PropTypes.object\n};\nDefaultPlugin.defaultProps = {\n  style: {},\n  item: {},\n  options: {},\n  visualization: {}\n};\nexport default DefaultPlugin;","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport DefaultPlugin from './DefaultPlugin';\nimport getVisualizationContainerDomId from '../getVisualizationContainerDomId';\n\nconst LegacyPlugin = ({\n  availableHeight,\n  availableWidth,\n  gridWidth,\n  ...props\n}) => {\n  useEffect(() => {\n    const el = document.querySelector(`#${getVisualizationContainerDomId(props.item.id)}`);\n\n    if (typeof (el === null || el === void 0 ? void 0 : el.setViewportSize) === 'function') {\n      setTimeout(() => el.setViewportSize(el.clientWidth - 5, el.clientHeight - 5), 10);\n    }\n  }, [availableHeight, availableWidth, gridWidth]);\n  return /*#__PURE__*/React.createElement(DefaultPlugin, props);\n};\n\nLegacyPlugin.propTypes = {\n  activeType: PropTypes.string,\n  availableHeight: PropTypes.number,\n  availableWidth: PropTypes.number,\n  gridWidth: PropTypes.number,\n  isFullscreen: PropTypes.bool,\n  item: PropTypes.object\n};\nexport default LegacyPlugin;","export const getGridItemDomElementClassName = itemId => `reactgriditem-${itemId}`;","import { getGridItemDomElementClassName } from '../../../modules/getGridItemDomElementClassName';\nexport const isElementFullscreen = itemId => {\n  const fullscreenElement = document.fullscreenElement || document.webkitFullscreenElement;\n  return fullscreenElement === null || fullscreenElement === void 0 ? void 0 : fullscreenElement.classList.contains(getGridItemDomElementClassName(itemId));\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classes from './styles/NoVisualizationMessage.module.css';\n\nconst NoVisualizationMessage = ({\n  message\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.message\n  }, message);\n};\n\nNoVisualizationMessage.propTypes = {\n  message: PropTypes.string\n};\nexport default NoVisualizationMessage;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport DefaultPlugin from './DefaultPlugin';\nimport { MAP } from '../../../../modules/itemTypes';\nimport { isElementFullscreen } from '../isElementFullscreen';\nimport { pluginIsAvailable, resize } from './plugin';\nimport NoVisualizationMessage from './NoVisualizationMessage';\n\nconst MapPlugin = ({\n  applyFilters,\n  availableHeight,\n  availableWidth,\n  gridWidth,\n  ...props\n}) => {\n  useEffect(() => {\n    resize(props.item.id, MAP, isElementFullscreen(props.item.id));\n  }, [availableHeight, availableWidth, gridWidth]);\n\n  if (props.item.type === MAP) {\n    // apply filters only to thematic and event layers\n    // for maps AO\n    const mapViews = props.visualization.mapViews.map(mapView => {\n      if (mapView.layer.includes('thematic') || mapView.layer.includes('event')) {\n        return applyFilters(mapView, props.itemFilters);\n      }\n\n      return mapView;\n    });\n    props.visualization = { ...props.visualization,\n      mapViews\n    };\n  } else {\n    // this is the case of a non map AO passed to the maps plugin\n    // due to a visualization type switch in dashboard item\n    // maps plugin takes care of converting the AO to a suitable format\n    props.visualization = applyFilters(props.visualization, props.itemFilters);\n  }\n\n  return pluginIsAvailable(MAP) ? /*#__PURE__*/React.createElement(DefaultPlugin, _extends({\n    options: {\n      hideTitle: true\n    }\n  }, props)) : /*#__PURE__*/React.createElement(NoVisualizationMessage, {\n    message: i18n.t('Unable to load the plugin for this item')\n  });\n};\n\nMapPlugin.propTypes = {\n  applyFilters: PropTypes.func,\n  availableHeight: PropTypes.number,\n  availableWidth: PropTypes.number,\n  gridWidth: PropTypes.number,\n  isFullscreen: PropTypes.bool,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object,\n  visualization: PropTypes.object\n};\nexport default MapPlugin;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CircularLoader } from '@dhis2/ui';\nimport classes from './styles/LoadingMask.module.css';\n\nconst LoadingMask = ({\n  style\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.center,\n    style: style\n  }, /*#__PURE__*/React.createElement(CircularLoader, null));\n};\n\nLoadingMask.propTypes = {\n  style: PropTypes.object\n};\nexport default LoadingMask;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { Suspense, useState, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { useUserSettings } from '../../../UserSettingsProvider';\nimport LoadingMask from './LoadingMask';\nconst VisualizationPlugin = /*#__PURE__*/React.lazy(() => import(\n/* webpackChunkName: \"data-visualizer-plugin\" */\n\n/* webpackPrefetch: true */\n'@dhis2/data-visualizer-plugin'));\n\nconst DataVisualizerPlugin = props => {\n  const {\n    userSettings\n  } = useUserSettings();\n  const [visualizationLoaded, setVisualizationLoaded] = useState(false);\n  const onLoadingComplete = useCallback(() => setVisualizationLoaded(true), []);\n  return /*#__PURE__*/React.createElement(Suspense, {\n    fallback: /*#__PURE__*/React.createElement(\"div\", null)\n  }, !visualizationLoaded && /*#__PURE__*/React.createElement(LoadingMask, {\n    style: props.style\n  }), /*#__PURE__*/React.createElement(VisualizationPlugin, _extends({\n    forDashboard: true,\n    userSettings: userSettings,\n    onLoadingComplete: onLoadingComplete\n  }, props)));\n};\n\nDataVisualizerPlugin.propTypes = {\n  style: PropTypes.object\n};\nexport default DataVisualizerPlugin;","const getFilteredVisualization = (visualization, filters) => {\n  if (!Object.keys(filters).length) {\n    return visualization;\n  } // deep clone objects in filters to avoid changing the visualization in the Redux store\n\n\n  const visRows = visualization.rows.map(obj => ({ ...obj\n  }));\n  const visColumns = visualization.columns.map(obj => ({ ...obj\n  }));\n  const visFilters = visualization.filters.map(obj => ({ ...obj\n  }));\n  Object.keys(filters).forEach(dimensionId => {\n    if (filters[dimensionId]) {\n      let dimensionFound = false;\n      [visRows, visColumns, visFilters].forEach(dimensionObjects => dimensionObjects.filter(obj => obj.dimension === dimensionId).forEach(obj => {\n        dimensionFound = true;\n        obj.items = filters[dimensionId];\n      })); // add dimension to filters if not already present elsewhere\n\n      if (!dimensionFound) {\n        visFilters.push({\n          dimension: dimensionId,\n          items: filters[dimensionId]\n        });\n      }\n    }\n  });\n  return { ...visualization,\n    rows: visRows,\n    columns: visColumns,\n    filters: visFilters\n  };\n};\n\nexport default getFilteredVisualization;","export const THEMATIC_LAYER = 'thematic';\n\nconst getThematicMapViews = map => map.mapViews && map.mapViews.find(mv => mv.layer.includes(THEMATIC_LAYER));\n\nexport default getThematicMapViews;","import getThematicMapViews from '../getThematicMapViews';\nimport { VIS_TYPE_COLUMN, VIS_TYPE_PIVOT_TABLE, getAdaptedUiLayoutByType } from '@dhis2/analytics';\nimport { REPORT_TABLE, CHART, MAP } from '../../../../modules/itemTypes';\n\nconst getWithoutId = object => ({ ...object,\n  id: undefined\n});\n\nconst getVisualizationConfig = (visualization, originalType, activeType) => {\n  if (originalType === MAP && originalType !== activeType) {\n    const thematicMapViews = getThematicMapViews(visualization);\n\n    if (thematicMapViews === undefined) {\n      return null;\n    }\n\n    return getWithoutId({ ...visualization,\n      ...thematicMapViews,\n      mapViews: undefined,\n      type: activeType === CHART ? VIS_TYPE_COLUMN : VIS_TYPE_PIVOT_TABLE\n    });\n  } else if (originalType === REPORT_TABLE && activeType === CHART) {\n    const layout = getAdaptedUiLayoutByType(visualization, VIS_TYPE_COLUMN);\n    return getWithoutId({ ...visualization,\n      ...layout,\n      type: VIS_TYPE_COLUMN\n    });\n  } else if (originalType === CHART && activeType === REPORT_TABLE) {\n    const layout = getAdaptedUiLayoutByType(visualization, VIS_TYPE_PIVOT_TABLE);\n    return getWithoutId({ ...visualization,\n      ...layout,\n      type: VIS_TYPE_PIVOT_TABLE\n    });\n  }\n\n  return getWithoutId(visualization);\n};\n\nexport default getVisualizationConfig;","// Note that this ignores discrepancies in 'this', so shouldn't be used with bound functions\n// This is useful instead of lodash/memoize when we only need to memoize a single value\n// Inspiration: https://github.com/alexreardon/memoize-one\nconst memoizeOne = fn => {\n  let lastArgs = undefined;\n  let lastValue = undefined;\n  return (...args) => {\n    if (lastArgs && args.length === lastArgs.length && args.every((arg, i) => arg === lastArgs[i])) {\n      return lastValue;\n    }\n\n    lastArgs = args;\n    lastValue = fn(...args);\n    return lastValue;\n  };\n};\n\nexport default memoizeOne;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport LegacyPlugin from './LegacyPlugin';\nimport MapPlugin from './MapPlugin';\nimport DataVisualizerPlugin from './DataVisualizerPlugin';\nimport NoVisualizationMessage from './NoVisualizationMessage';\nimport getFilteredVisualization from './getFilteredVisualization';\nimport { pluginIsAvailable } from './plugin';\nimport getVisualizationConfig from './getVisualizationConfig';\nimport memoizeOne from '../memoizeOne';\nimport { VISUALIZATION, MAP, CHART, REPORT_TABLE } from '../../../../modules/itemTypes';\nimport { getVisualizationId } from '../../../../modules/item';\nimport { sGetVisualization } from '../../../../reducers/visualizations';\n\nclass Visualization extends React.Component {\n  constructor(props) {\n    super(props);\n    this.memoizedGetFilteredVisualization = memoizeOne(getFilteredVisualization);\n    this.memoizedGetVisualizationConfig = memoizeOne(getVisualizationConfig);\n  }\n\n  render() {\n    const {\n      visualization,\n      activeType,\n      item,\n      itemFilters,\n      ...rest\n    } = this.props;\n\n    if (!visualization) {\n      return /*#__PURE__*/React.createElement(NoVisualizationMessage, {\n        message: i18n.t('No data to display')\n      });\n    }\n\n    const style = {\n      height: this.props.availableHeight\n    };\n\n    if (this.props.availableWidth) {\n      style.width = this.props.availableWidth;\n    }\n\n    const pluginProps = {\n      item,\n      itemFilters,\n      activeType,\n      style,\n      visualization: this.memoizedGetVisualizationConfig(visualization, item.type, activeType),\n      ...rest\n    };\n\n    switch (activeType) {\n      case VISUALIZATION:\n      case CHART:\n      case REPORT_TABLE:\n        {\n          return /*#__PURE__*/React.createElement(DataVisualizerPlugin, {\n            visualization: this.memoizedGetFilteredVisualization(pluginProps.visualization, pluginProps.itemFilters),\n            style: pluginProps.style\n          });\n        }\n\n      case MAP:\n        {\n          return /*#__PURE__*/React.createElement(MapPlugin, _extends({\n            applyFilters: this.memoizedGetFilteredVisualization\n          }, pluginProps));\n        }\n\n      default:\n        {\n          pluginProps.visualization = this.memoizedGetFilteredVisualization(pluginProps.visualization, pluginProps.itemFilters);\n          return pluginIsAvailable(pluginProps.activeType || pluginProps.item.type) ? /*#__PURE__*/React.createElement(LegacyPlugin, pluginProps) : /*#__PURE__*/React.createElement(NoVisualizationMessage, {\n            message: i18n.t('Unable to load the plugin for this item')\n          });\n        }\n    }\n  }\n\n}\n\nVisualization.propTypes = {\n  activeType: PropTypes.string,\n  availableHeight: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  availableWidth: PropTypes.number,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object,\n  visualization: PropTypes.object\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    visualization: sGetVisualization(state, getVisualizationId(ownProps.item))\n  };\n};\n\nexport default connect(mapStateToProps)(Visualization);","import React from 'react';\nimport { colors } from '@dhis2/ui';\nexport const Warning = () => /*#__PURE__*/React.createElement(\"svg\", {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  height: \"24\",\n  viewBox: \"0 0 24 24\",\n  width: \"24\",\n  fill: colors.grey600\n}, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M0 0h24v24H0z\",\n  fill: \"none\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z\"\n}));","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Warning } from './assets/icons';\nimport classes from './styles/FatalErrorBoundary.module.css';\n\nclass FatalErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      errorFound: false\n    };\n  }\n\n  componentDidCatch(error, info) {\n    this.setState({\n      errorFound: true\n    });\n    console.log('error: ', error);\n    console.log('info: ', info);\n    this.props.onFatalError();\n  }\n\n  render() {\n    if (this.state.errorFound) {\n      return /*#__PURE__*/React.createElement(\"p\", {\n        className: classes.container\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: classes.icon\n      }, /*#__PURE__*/React.createElement(Warning, null)), /*#__PURE__*/React.createElement(\"span\", {\n        className: classes.message\n      }, this.props.message));\n    }\n\n    return this.props.children;\n  }\n\n}\n\nFatalErrorBoundary.propTypes = {\n  children: PropTypes.node,\n  message: PropTypes.string,\n  onFatalError: PropTypes.func\n};\nFatalErrorBoundary.defaultProps = {\n  onFatalError: Function.prototype\n};\nexport default FatalErrorBoundary;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classes from './styles/ItemHeader.module.css';\n\nconst ViewItemActions = ({\n  actionButtons\n}) => {\n  return actionButtons ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.itemActionsWrap\n  }, actionButtons) : null;\n};\n\nViewItemActions.propTypes = {\n  actionButtons: PropTypes.node\n};\nexport default ViewItemActions;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { colors, Button, Tooltip, IconDelete24 } from '@dhis2/ui';\n\nconst DeleteItemButton = ({\n  onClick\n}) => /*#__PURE__*/React.createElement(Tooltip, {\n  content: i18n.t('Remove this item'),\n  placement: \"bottom\"\n}, /*#__PURE__*/React.createElement(Button, {\n  secondary: true,\n  small: true,\n  onClick: onClick,\n  icon: /*#__PURE__*/React.createElement(IconDelete24, {\n    color: colors.red600\n  })\n}));\n\nDeleteItemButton.propTypes = {\n  onClick: PropTypes.func\n};\nexport default DeleteItemButton;","/** @module reducers/editDashboard */\nimport update from 'immutability-helper';\nimport isEmpty from 'lodash/isEmpty';\nimport { orArray, orObject } from '../modules/util';\nexport const RECEIVED_EDIT_DASHBOARD = 'RECEIVED_EDIT_DASHBOARD';\nexport const RECEIVED_NOT_EDITING = 'RECEIVED_NOT_EDITING';\nexport const START_NEW_DASHBOARD = 'START_NEW_DASHBOARD';\nexport const RECEIVED_TITLE = 'RECEIVED_TITLE';\nexport const RECEIVED_DESCRIPTION = 'RECEIVED_DESCRIPTION';\nexport const ADD_DASHBOARD_ITEM = 'ADD_DASHBOARD_ITEM';\nexport const REMOVE_DASHBOARD_ITEM = 'REMOVE_DASHBOARD_ITEM';\nexport const UPDATE_DASHBOARD_ITEM = 'UPDATE_DASHBOARD_ITEM';\nexport const RECEIVED_DASHBOARD_LAYOUT = 'RECEIVED_DASHBOARD_LAYOUT';\nexport const SET_PRINT_PREVIEW_VIEW = 'SET_PRINT_PREVIEW_VIEW';\nexport const CLEAR_PRINT_PREVIEW_VIEW = 'CLEAR_PRINT_PREVIEW_VIEW';\nexport const RECEIVED_FILTER_SETTINGS = 'RECEIVED_FILTER_SETTINGS';\nexport const DEFAULT_STATE_EDIT_DASHBOARD = {};\nexport const NEW_DASHBOARD_STATE = {\n  id: '',\n  name: '',\n  access: {},\n  allowedFilters: [],\n  description: '',\n  dashboardItems: [],\n  restrictFilters: false,\n  printPreviewView: false\n};\nexport default ((state = DEFAULT_STATE_EDIT_DASHBOARD, action) => {\n  switch (action.type) {\n    case RECEIVED_EDIT_DASHBOARD:\n      {\n        const newState = {};\n        Object.keys(NEW_DASHBOARD_STATE).map(k => newState[k] = action.value[k]);\n        newState.printPreviewView = false;\n        return newState;\n      }\n\n    case RECEIVED_NOT_EDITING:\n      return DEFAULT_STATE_EDIT_DASHBOARD;\n\n    case SET_PRINT_PREVIEW_VIEW:\n      return Object.assign({}, state, {\n        printPreviewView: true\n      });\n\n    case CLEAR_PRINT_PREVIEW_VIEW:\n      return Object.assign({}, state, {\n        printPreviewView: false\n      });\n\n    case START_NEW_DASHBOARD:\n      return NEW_DASHBOARD_STATE;\n\n    case RECEIVED_TITLE:\n      {\n        return Object.assign({}, state, {\n          name: action.value\n        });\n      }\n\n    case RECEIVED_DESCRIPTION:\n      {\n        return Object.assign({}, state, {\n          description: action.value\n        });\n      }\n\n    case ADD_DASHBOARD_ITEM:\n      if (!action.value.position) {\n        return update(state, {\n          dashboardItems: {\n            $unshift: [action.value]\n          }\n        });\n      }\n\n      return update(state, {\n        dashboardItems: {\n          $splice: [[parseInt(action.value.position), 0, action.value]]\n        }\n      });\n\n    case REMOVE_DASHBOARD_ITEM:\n      {\n        const idToRemove = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === idToRemove);\n\n        if (dashboardItemIndex > -1) {\n          return update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1]]\n            }\n          });\n        }\n\n        return state;\n      }\n\n    case RECEIVED_DASHBOARD_LAYOUT:\n      {\n        const stateItems = orArray(state.dashboardItems);\n        let layoutHasChanged = false;\n        const newStateItems = action.value.map(({\n          x,\n          y,\n          w,\n          h,\n          i\n        }) => {\n          const stateItem = stateItems.find(si => si.id === i);\n\n          if (!(stateItem.x === x && stateItem.y === y && stateItem.w === w && stateItem.h === h)) {\n            layoutHasChanged = true;\n            return Object.assign({}, stateItem, {\n              w,\n              h,\n              x,\n              y\n            });\n          }\n\n          return stateItem;\n        });\n        return layoutHasChanged ? { ...state,\n          dashboardItems: newStateItems\n        } : state;\n      }\n\n    case UPDATE_DASHBOARD_ITEM:\n      {\n        const dashboardItem = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === dashboardItem.id);\n\n        if (dashboardItemIndex > -1) {\n          const newState = update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1, Object.assign({}, dashboardItem)]]\n            }\n          });\n          return newState;\n        }\n\n        return state;\n      }\n\n    case RECEIVED_FILTER_SETTINGS:\n      {\n        return Object.assign({}, state, {\n          allowedFilters: action.value.allowedFilters,\n          restrictFilters: action.value.restrictFilters\n        });\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetEditDashboardRoot = state => state.editDashboard; // selectors\n\nexport const sGetIsEditing = state => !isEmpty(state.editDashboard);\nexport const sGetIsPrintPreviewView = state => sGetEditDashboardRoot(state).printPreviewView;\nexport const sGetIsNewDashboard = state => {\n  return !isEmpty(state.editDashboard) && sGetEditDashboardRoot(state).id === '';\n};\nexport const sGetEditDashboardName = state => sGetEditDashboardRoot(state).name;\nexport const sGetEditDashboardDescription = state => sGetEditDashboardRoot(state).description;\nexport const sGetEditDashboardItems = state => orObject(sGetEditDashboardRoot(state)).dashboardItems;","import { apiFetchDashboard } from './fetchDashboard';\nimport { EDIT } from '../modules/dashboardModes';\nexport const createDashboardMutation = {\n  resource: 'dashboards',\n  type: 'create',\n  data: ({\n    data\n  }) => data\n};\nexport const updateDashboardMutation = {\n  resource: 'dashboards',\n  type: 'update',\n  id: ({\n    id\n  }) => id,\n  data: ({\n    data\n  }) => data,\n  params: {\n    skipTranslation: true,\n    skipSharing: true\n  }\n};\n\nconst generatePayload = (dashboard = {}, data) => {\n  return { ...dashboard,\n    name: data.name,\n    description: data.description,\n    dashboardItems: data.dashboardItems.map(item => ({ ...item,\n      width: item.w,\n      height: item.h\n    })),\n    allowedFilters: data.allowedFilters,\n    restrictFilters: data.restrictFilters\n  };\n};\n\nexport const updateDashboard = async (dataEngine, data) => {\n  const dashboard = await apiFetchDashboard(dataEngine, data.id, EDIT);\n  const {\n    response\n  } = await dataEngine.mutate(updateDashboardMutation, {\n    variables: {\n      id: data.id,\n      data: generatePayload(dashboard, data)\n    }\n  });\n  return response.uid;\n};\nexport const postDashboard = async (dataEngine, data) => {\n  const {\n    response\n  } = await dataEngine.mutate(createDashboardMutation, {\n    variables: {\n      data: generatePayload({}, data)\n    }\n  });\n  return response.uid;\n};","import { generateUid } from 'd2/uid';\nimport i18n from '@dhis2/d2-i18n';\nimport { RECEIVED_EDIT_DASHBOARD, START_NEW_DASHBOARD, RECEIVED_NOT_EDITING, RECEIVED_TITLE, RECEIVED_DESCRIPTION, RECEIVED_DASHBOARD_LAYOUT, ADD_DASHBOARD_ITEM, UPDATE_DASHBOARD_ITEM, REMOVE_DASHBOARD_ITEM, SET_PRINT_PREVIEW_VIEW, CLEAR_PRINT_PREVIEW_VIEW, RECEIVED_FILTER_SETTINGS, sGetEditDashboardRoot } from '../reducers/editDashboard';\nimport { tFetchDashboards } from './dashboards';\nimport { updateDashboard, postDashboard } from '../api/editDashboard';\nimport { NEW_ITEM_SHAPE, getGridItemProperties, getPageBreakItemShape, getPrintTitlePageItemShape } from '../modules/gridUtil';\nimport { itemTypeMap, PAGEBREAK, PRINT_TITLE_PAGE } from '../modules/itemTypes';\nimport { convertUiItemsToBackend } from '../modules/uiBackendItemConverter'; // actions\n\nexport const acSetEditDashboard = (dashboard, items) => {\n  const val = { ...dashboard,\n    dashboardItems: items\n  };\n  return {\n    type: RECEIVED_EDIT_DASHBOARD,\n    value: val\n  };\n};\nexport const acSetEditNewDashboard = () => ({\n  type: START_NEW_DASHBOARD\n});\nexport const acClearEditDashboard = () => ({\n  type: RECEIVED_NOT_EDITING\n});\nexport const acSetPrintPreviewView = () => ({\n  type: SET_PRINT_PREVIEW_VIEW\n});\nexport const acClearPrintPreviewView = () => ({\n  type: CLEAR_PRINT_PREVIEW_VIEW\n});\nexport const acSetDashboardTitle = value => ({\n  type: RECEIVED_TITLE,\n  value\n});\nexport const acSetDashboardDescription = value => ({\n  type: RECEIVED_DESCRIPTION,\n  value\n});\nexport const acUpdateDashboardLayout = value => ({\n  type: RECEIVED_DASHBOARD_LAYOUT,\n  value\n});\nexport const acAddDashboardItem = item => {\n  const type = item.type;\n  delete item.type;\n  const itemPropName = itemTypeMap[type].propName;\n  const id = generateUid();\n  const gridItemProperties = getGridItemProperties(id);\n  let shape;\n\n  if (type === PAGEBREAK) {\n    const yPos = item.yPos || 0;\n    shape = getPageBreakItemShape(yPos, item.isStatic);\n  } else if (type === PRINT_TITLE_PAGE) {\n    shape = getPrintTitlePageItemShape();\n  } else {\n    shape = NEW_ITEM_SHAPE;\n  }\n\n  return {\n    type: ADD_DASHBOARD_ITEM,\n    value: {\n      id,\n      type,\n      position: item.position || null,\n      [itemPropName]: item.content,\n      ...NEW_ITEM_SHAPE,\n      ...gridItemProperties,\n      ...shape\n    }\n  };\n};\nexport const acUpdateDashboardItem = item => ({\n  type: UPDATE_DASHBOARD_ITEM,\n  value: item\n});\nexport const acRemoveDashboardItem = value => ({\n  type: REMOVE_DASHBOARD_ITEM,\n  value\n});\nexport const acSetFilterSettings = value => ({\n  type: RECEIVED_FILTER_SETTINGS,\n  value\n}); // thunks\n\nexport const tSaveDashboard = () => async (dispatch, getState, dataEngine) => {\n  const dashboard = sGetEditDashboardRoot(getState());\n  const dashboardToSave = { ...dashboard,\n    dashboardItems: convertUiItemsToBackend(dashboard.dashboardItems),\n    name: dashboard.name || i18n.t('Untitled dashboard')\n  };\n  const dashboardId = dashboardToSave.id ? await updateDashboard(dataEngine, dashboardToSave) : await postDashboard(dataEngine, dashboardToSave); // update the dashboard list\n\n  await dispatch(tFetchDashboards());\n  return Promise.resolve(dashboardId);\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport DeleteItemButton from './DeleteItemButton';\nimport { acRemoveDashboardItem } from '../../../actions/editDashboard';\nimport classes from './styles/ItemHeader.module.css';\n\nconst EditItemActions = ({\n  itemId,\n  acRemoveDashboardItem\n}) => {\n  const handleDeleteItem = () => acRemoveDashboardItem(itemId);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.itemActionsWrap\n  }, /*#__PURE__*/React.createElement(DeleteItemButton, {\n    onClick: handleDeleteItem\n  }));\n};\n\nEditItemActions.propTypes = {\n  acRemoveDashboardItem: PropTypes.func,\n  itemId: PropTypes.string\n};\nconst mapDispatchToProps = {\n  acRemoveDashboardItem\n};\nexport default connect(null, mapDispatchToProps)(EditItemActions);","import React from 'react';\nimport { Tooltip, colors, IconWarning24 } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport classes from './styles/PrintItemInfo.module.css';\n\nconst PrintWarning = () => /*#__PURE__*/React.createElement(\"div\", {\n  className: classes.warning\n}, /*#__PURE__*/React.createElement(Tooltip, {\n  content: i18n.t('This item has been shortened to fit on one page'),\n  placement: \"bottom\"\n}, /*#__PURE__*/React.createElement(IconWarning24, {\n  color: colors.grey600\n})));\n\nexport default PrintWarning;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ViewItemActions from './ViewItemActions';\nimport EditItemActions from './EditItemActions';\nimport PrintItemInfo from './PrintItemInfo';\nimport { VIEW, EDIT, PRINT_LAYOUT } from '../../../modules/dashboardModes';\nimport classes from './styles/ItemHeader.module.css';\n\nconst getItemActionsMap = isShortened => {\n  return {\n    [VIEW]: ViewItemActions,\n    [EDIT]: EditItemActions,\n    [PRINT_LAYOUT]: isShortened ? PrintItemInfo : null\n  };\n};\n\nconst ItemHeader = /*#__PURE__*/React.forwardRef(({\n  dashboardMode,\n  title,\n  isShortened,\n  ...rest\n}, ref) => {\n  const Actions = getItemActionsMap(isShortened)[dashboardMode];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.itemHeaderWrap,\n    ref: ref\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.itemTitle\n  }, title), Actions ? /*#__PURE__*/React.createElement(Actions, rest) : null);\n});\nItemHeader.displayName = 'ItemHeader';\nItemHeader.propTypes = {\n  dashboardMode: PropTypes.string,\n  isShortened: PropTypes.bool,\n  title: PropTypes.string\n};\nexport default connect(null, null, null, {\n  forwardRef: true\n})(ItemHeader);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { MenuItem, Tooltip, colors, IconVisualizationColumn16, IconTable16, IconWorld16 } from '@dhis2/ui';\nimport getThematicMapViews from '../getThematicMapViews';\nimport { CHART, MAP, REPORT_TABLE, EVENT_CHART, EVENT_REPORT, isTrackerDomainType, hasMapView } from '../../../../modules/itemTypes';\n\nconst ViewAsMenuItems = ({\n  type,\n  activeType,\n  visualization,\n  onActiveTypeChanged\n}) => {\n  const isTrackerType = isTrackerDomainType(type);\n\n  const onViewTable = () => onActiveTypeChanged(isTrackerType ? EVENT_REPORT : REPORT_TABLE);\n\n  const onViewChart = () => onActiveTypeChanged(isTrackerType ? EVENT_CHART : CHART);\n\n  const onViewMap = () => onActiveTypeChanged(MAP);\n\n  const isDisabled = type === MAP && !getThematicMapViews(visualization);\n  const iconColor = isDisabled ? colors.grey500 : colors.grey600;\n\n  const ViewAsChartMenuItem = () => {\n    const ChartMenuItem = () => /*#__PURE__*/React.createElement(MenuItem, {\n      dense: true,\n      disabled: isDisabled,\n      label: i18n.t('View as Chart'),\n      onClick: onViewChart,\n      icon: /*#__PURE__*/React.createElement(IconVisualizationColumn16, {\n        color: iconColor\n      })\n    });\n\n    if (isDisabled) {\n      return /*#__PURE__*/React.createElement(Tooltip, {\n        content: i18n.t(\"This map can't be displayed as a chart\")\n      }, /*#__PURE__*/React.createElement(ChartMenuItem, null));\n    }\n\n    return /*#__PURE__*/React.createElement(ChartMenuItem, null);\n  };\n\n  const ViewAsTableMenuItem = () => {\n    const TableMenuItem = () => /*#__PURE__*/React.createElement(MenuItem, {\n      dense: true,\n      disabled: isDisabled,\n      label: i18n.t('View as Table'),\n      onClick: onViewTable,\n      icon: /*#__PURE__*/React.createElement(IconTable16, {\n        color: iconColor\n      })\n    });\n\n    if (isDisabled) {\n      return /*#__PURE__*/React.createElement(Tooltip, {\n        content: i18n.t(\"This map can't be displayed as a table\")\n      }, /*#__PURE__*/React.createElement(TableMenuItem, null));\n    }\n\n    return /*#__PURE__*/React.createElement(TableMenuItem, null);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, activeType !== CHART && activeType !== EVENT_CHART && /*#__PURE__*/React.createElement(ViewAsChartMenuItem, null), activeType !== REPORT_TABLE && activeType !== EVENT_REPORT && /*#__PURE__*/React.createElement(ViewAsTableMenuItem, null), hasMapView(type) && activeType !== MAP && /*#__PURE__*/React.createElement(MenuItem, {\n    dense: true,\n    label: i18n.t('View as Map'),\n    onClick: onViewMap,\n    icon: /*#__PURE__*/React.createElement(IconWorld16, {\n      color: colors.grey600\n    })\n  }));\n};\n\nViewAsMenuItems.propTypes = {\n  activeType: PropTypes.string,\n  type: PropTypes.string,\n  visualization: PropTypes.object,\n  onActiveTypeChanged: PropTypes.func\n};\nexport default ViewAsMenuItems;","import React, { useState, createRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { useConfig } from '@dhis2/app-runtime';\nimport { isSingleValue, isYearOverYear, VIS_TYPE_GAUGE, VIS_TYPE_PIE } from '@dhis2/analytics';\nimport { colors, Button, Menu, Popover, MenuItem, Divider, IconFullscreen16, IconFullscreenExit16, IconLaunch16, IconMessages16, IconMore24 } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport ViewAsMenuItems from './ViewAsMenuItems';\nimport { useWindowDimensions } from '../../../WindowDimensionsProvider';\nimport { isSmallScreen } from '../../../../modules/smallScreen';\nimport { isElementFullscreen } from '../isElementFullscreen';\nimport { getLink } from '../Visualization/plugin';\nimport { getAppName } from '../../../../modules/itemTypes';\nimport { useSystemSettings } from '../../../SystemSettingsProvider';\n\nconst ItemContextMenu = props => {\n  const [menuIsOpen, setMenuIsOpen] = useState(false);\n  const {\n    width\n  } = useWindowDimensions();\n  const {\n    baseUrl\n  } = useConfig();\n  const {\n    allowVisOpenInApp,\n    allowVisShowInterpretations,\n    allowVisViewAs,\n    allowVisFullscreen\n  } = useSystemSettings().settings;\n  const fullscreenAllowed = props.fullscreenSupported && allowVisFullscreen;\n  const noOptionsEnabled = !allowVisOpenInApp && !allowVisShowInterpretations && !allowVisViewAs && !fullscreenAllowed;\n\n  if (noOptionsEnabled || !allowVisOpenInApp && props.loadItemFailed) {\n    return null;\n  }\n\n  const toggleInterpretations = () => {\n    props.onToggleFooter();\n\n    if (menuIsOpen) {\n      closeMenu();\n    }\n  };\n\n  const toggleFullscreen = () => {\n    props.onToggleFullscreen();\n    closeMenu();\n  };\n\n  const onActiveTypeChanged = type => {\n    closeMenu();\n    props.onSelectActiveType(type);\n  };\n\n  const openMenu = () => {\n    setMenuIsOpen(true);\n  };\n\n  const closeMenu = () => setMenuIsOpen(false);\n\n  const {\n    item,\n    visualization,\n    loadItemFailed,\n    activeType\n  } = props;\n  const type = visualization.type || item.type;\n  const canViewAs = allowVisViewAs && !isSingleValue(type) && !isYearOverYear(type) && type !== VIS_TYPE_GAUGE && type !== VIS_TYPE_PIE;\n  const interpretationMenuLabel = props.activeFooter ? i18n.t(`Hide details and interpretations`) : i18n.t(`Show details and interpretations`);\n  const buttonRef = /*#__PURE__*/createRef();\n  return isElementFullscreen(item.id) ? /*#__PURE__*/React.createElement(Button, {\n    small: true,\n    secondary: true,\n    onClick: props.onToggleFullscreen\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    \"data-testid\": \"exit-fullscreen-button\"\n  }, /*#__PURE__*/React.createElement(IconFullscreenExit16, {\n    color: colors.grey600\n  }))) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    ref: buttonRef\n  }, /*#__PURE__*/React.createElement(Button, {\n    small: true,\n    secondary: true,\n    onClick: openMenu,\n    dataTest: \"dashboarditem-menu-button\",\n    icon: /*#__PURE__*/React.createElement(IconMore24, {\n      color: colors.grey700\n    })\n  })), menuIsOpen && /*#__PURE__*/React.createElement(Popover, {\n    reference: buttonRef,\n    placement: \"auto-start\",\n    arrow: false,\n    onClickOutside: closeMenu\n  }, /*#__PURE__*/React.createElement(Menu, null, canViewAs && !loadItemFailed && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ViewAsMenuItems, {\n    type: item.type,\n    activeType: activeType,\n    onActiveTypeChanged: onActiveTypeChanged,\n    visualization: visualization\n  }), (allowVisShowInterpretations || allowVisOpenInApp && !isSmallScreen(width) || fullscreenAllowed) && /*#__PURE__*/React.createElement(\"span\", {\n    \"data-testid\": \"divider\"\n  }, /*#__PURE__*/React.createElement(Divider, null))), allowVisOpenInApp && !isSmallScreen(width) && /*#__PURE__*/React.createElement(MenuItem, {\n    dense: true,\n    icon: /*#__PURE__*/React.createElement(IconLaunch16, {\n      color: colors.grey600\n    }),\n    label: i18n.t('Open in {{appName}} app', {\n      appName: getAppName(item.type)\n    }),\n    href: getLink(item, baseUrl),\n    target: \"_blank\"\n  }), allowVisShowInterpretations && !loadItemFailed && /*#__PURE__*/React.createElement(MenuItem, {\n    dense: true,\n    icon: /*#__PURE__*/React.createElement(IconMessages16, {\n      color: colors.grey600\n    }),\n    label: interpretationMenuLabel,\n    onClick: toggleInterpretations\n  }), fullscreenAllowed && !loadItemFailed && /*#__PURE__*/React.createElement(MenuItem, {\n    dense: true,\n    icon: /*#__PURE__*/React.createElement(IconFullscreen16, {\n      color: colors.grey600\n    }),\n    label: i18n.t('View fullscreen'),\n    onClick: toggleFullscreen\n  }))));\n};\n\nItemContextMenu.propTypes = {\n  activeFooter: PropTypes.bool,\n  activeType: PropTypes.string,\n  fullscreenSupported: PropTypes.bool,\n  item: PropTypes.object,\n  loadItemFailed: PropTypes.bool,\n  visualization: PropTypes.object,\n  onSelectActiveType: PropTypes.func,\n  onToggleFooter: PropTypes.func,\n  onToggleFullscreen: PropTypes.func\n};\nexport default ItemContextMenu;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getVisualizationId } from '../../../modules/item';\nimport InterpretationsComponent from '@dhis2/d2-ui-interpretations';\nimport { useD2 } from '@dhis2/app-runtime-adapter-d2';\nimport i18n from '@dhis2/d2-i18n';\nimport FatalErrorBoundary from './FatalErrorBoundary';\nimport classes from './styles/ItemFooter.module.css';\n\nconst ItemFooter = props => {\n  const {\n    d2\n  } = useD2();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    \"data-test\": \"dashboarditem-footer\"\n  }, /*#__PURE__*/React.createElement(\"hr\", {\n    className: classes.line\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.scrollContainer\n  }, /*#__PURE__*/React.createElement(FatalErrorBoundary, {\n    message: i18n.t('There was a problem loading interpretations for this item')\n  }, /*#__PURE__*/React.createElement(InterpretationsComponent, {\n    d2: d2,\n    item: props.item,\n    type: props.item.type.toLowerCase(),\n    id: getVisualizationId(props.item),\n    appName: \"dashboard\"\n  }))));\n};\n\nItemFooter.propTypes = {\n  item: PropTypes.object.isRequired\n};\nexport default ItemFooter;","import { getGridItemDomElementClassName } from '../../../modules/getGridItemDomElementClassName';\nexport const getGridItemElement = itemId => document.querySelector(`.${getGridItemDomElementClassName(itemId)}`);","import { getInstance } from 'd2';\nexport const apiPostDataStatistics = async (eventType, id) => {\n  const d2 = await getInstance();\n  const url = `dataStatistics?eventType=${eventType}&favorite=${id}`;\n  d2.Api.getApi().post(url);\n};","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport uniqueId from 'lodash/uniqueId';\nimport i18n from '@dhis2/d2-i18n';\nimport Visualization from './Visualization/Visualization';\nimport FatalErrorBoundary from './FatalErrorBoundary';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport ItemContextMenu from './ItemContextMenu/ItemContextMenu';\nimport ItemFooter from './ItemFooter';\nimport { pluginIsAvailable } from './Visualization/plugin';\nimport memoizeOne from './memoizeOne';\nimport { getGridItemElement } from './getGridItemElement';\nimport { WindowDimensionsCtx } from '../../WindowDimensionsProvider';\nimport { SystemSettingsCtx } from '../../SystemSettingsProvider';\nimport { apiPostDataStatistics } from '../../../api/dataStatistics';\nimport { apiFetchVisualization } from '../../../api/metadata';\nimport { sGetVisualization } from '../../../reducers/visualizations';\nimport { sGetSelectedItemActiveType } from '../../../reducers/selected';\nimport { sGetIsEditing } from '../../../reducers/editDashboard';\nimport { sGetItemFiltersRoot, DEFAULT_STATE_ITEM_FILTERS } from '../../../reducers/itemFilters';\nimport { acAddVisualization } from '../../../actions/visualizations';\nimport { acSetSelectedItemActiveType } from '../../../actions/selected';\nimport { getDataStatisticsName } from '../../../modules/itemTypes';\nimport { isElementFullscreen } from './isElementFullscreen';\nimport { getVisualizationId, getVisualizationName } from '../../../modules/item';\nimport { isEditMode, isPrintMode, isViewMode } from '../../../modules/dashboardModes';\nimport { getItemHeightPx } from '../../../modules/gridUtil';\nexport class Item extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"state\", {\n      showFooter: false,\n      configLoaded: false,\n      loadItemFailed: false\n    });\n\n    _defineProperty(this, \"isFullscreenSupported\", () => {\n      const el = getGridItemElement(this.props.item.id);\n      return !!(el !== null && el !== void 0 && el.requestFullscreen || el !== null && el !== void 0 && el.webkitRequestFullscreen);\n    });\n\n    _defineProperty(this, \"onToggleFullscreen\", () => {\n      if (!isElementFullscreen(this.props.item.id)) {\n        const el = getGridItemElement(this.props.item.id);\n\n        if (el !== null && el !== void 0 && el.requestFullscreen) {\n          el.requestFullscreen();\n        } else if (el !== null && el !== void 0 && el.webkitRequestFullscreen) {\n          el.webkitRequestFullscreen();\n        }\n      } else {\n        document.exitFullscreen ? document.exitFullscreen() : document.webkitExitFullscreen();\n      }\n    });\n\n    _defineProperty(this, \"getUniqueKey\", memoizeOne(() => uniqueId()));\n\n    _defineProperty(this, \"onToggleFooter\", () => {\n      this.setState({\n        showFooter: !this.state.showFooter\n      }, this.props.onToggleItemExpanded(this.props.item.id));\n    });\n\n    _defineProperty(this, \"setActiveType\", type => {\n      type !== this.getActiveType() && this.props.setActiveType(this.props.item.id, type);\n    });\n\n    _defineProperty(this, \"getActiveType\", () => {\n      if (this.props.isEditing) {\n        return this.props.item.type;\n      }\n\n      return this.props.activeType || this.props.item.type;\n    });\n\n    _defineProperty(this, \"getAvailableHeight\", ({\n      width,\n      height\n    }) => {\n      if (isElementFullscreen(this.props.item.id)) {\n        return height - this.headerRef.current.clientHeight - this.itemHeaderTotalMargin - this.itemContentPadding;\n      }\n\n      const calculatedHeight = getItemHeightPx(this.props.item, width) - this.headerRef.current.clientHeight - this.itemHeaderTotalMargin - this.itemContentPadding;\n      return this.memoizedGetContentHeight(calculatedHeight, this.contentRef ? this.contentRef.offsetHeight : null, isEditMode(this.props.dashboardMode) || isPrintMode(this.props.dashboardMode));\n    });\n\n    _defineProperty(this, \"getAvailableWidth\", () => {\n      var _getGridItemElement;\n\n      const rect = (_getGridItemElement = getGridItemElement(this.props.item.id)) === null || _getGridItemElement === void 0 ? void 0 : _getGridItemElement.getBoundingClientRect();\n      return rect && rect.width - this.itemContentPadding * 2;\n    });\n\n    _defineProperty(this, \"onFatalError\", () => {\n      this.setState({\n        loadItemFailed: true\n      });\n    });\n\n    this.contentRef = /*#__PURE__*/React.createRef();\n    this.headerRef = /*#__PURE__*/React.createRef();\n    const style = window.getComputedStyle(document.documentElement);\n    this.itemContentPadding = parseInt(style.getPropertyValue('--item-content-padding').replace('px', ''));\n    this.itemHeaderTotalMargin = parseInt(style.getPropertyValue('--item-header-margin-top').replace('px', '')) + parseInt(style.getPropertyValue('--item-header-margin-bottom').replace('px', ''));\n    this.memoizedGetContentHeight = memoizeOne((calculatedHeight, measuredHeight, preferMeasured) => preferMeasured ? measuredHeight || calculatedHeight : calculatedHeight);\n  }\n\n  async componentDidMount() {\n    this.props.updateVisualization(await apiFetchVisualization(this.props.item));\n\n    try {\n      if (this.props.settings.keyGatherAnalyticalObjectStatisticsInDashboardViews && isViewMode(this.props.dashboardMode)) {\n        await apiPostDataStatistics(getDataStatisticsName(this.props.item.type), getVisualizationId(this.props.item));\n      }\n    } catch (e) {\n      console.log(e);\n    }\n\n    this.setState({\n      configLoaded: true\n    });\n  }\n\n  render() {\n    const {\n      item,\n      dashboardMode,\n      itemFilters\n    } = this.props;\n    const {\n      showFooter\n    } = this.state;\n    const activeType = this.getActiveType();\n    const actionButtons = pluginIsAvailable(activeType || item.type) && isViewMode(dashboardMode) ? /*#__PURE__*/React.createElement(ItemContextMenu, {\n      item: item,\n      visualization: this.props.visualization,\n      onSelectActiveType: this.setActiveType,\n      onToggleFooter: this.onToggleFooter,\n      onToggleFullscreen: this.onToggleFullscreen,\n      activeType: activeType,\n      activeFooter: showFooter,\n      fullscreenSupported: this.isFullscreenSupported(),\n      loadItemFailed: this.state.loadItemFailed\n    }) : null;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ItemHeader, {\n      title: getVisualizationName(item),\n      itemId: item.id,\n      actionButtons: actionButtons,\n      ref: this.headerRef,\n      dashboardMode: dashboardMode,\n      isShortened: item.shortened\n    }), /*#__PURE__*/React.createElement(FatalErrorBoundary, {\n      message: i18n.t('There was a problem loading this dashboard item'),\n      onFatalError: this.onFatalError\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      key: this.getUniqueKey(itemFilters),\n      className: \"dashboard-item-content\",\n      ref: ref => this.contentRef = ref\n    }, this.state.configLoaded && /*#__PURE__*/React.createElement(WindowDimensionsCtx.Consumer, null, dimensions => /*#__PURE__*/React.createElement(Visualization, {\n      item: item,\n      activeType: activeType,\n      itemFilters: itemFilters,\n      availableHeight: this.getAvailableHeight(dimensions),\n      availableWidth: this.getAvailableWidth(),\n      gridWidth: this.props.gridWidth\n    })))), isViewMode(dashboardMode) && showFooter ? /*#__PURE__*/React.createElement(ItemFooter, {\n      item: item\n    }) : null);\n  }\n\n}\nItem.propTypes = {\n  activeType: PropTypes.string,\n  dashboardMode: PropTypes.string,\n  gridWidth: PropTypes.number,\n  isEditing: PropTypes.bool,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object,\n  setActiveType: PropTypes.func,\n  settings: PropTypes.object,\n  updateVisualization: PropTypes.func,\n  visualization: PropTypes.object,\n  onToggleItemExpanded: PropTypes.func\n};\nItem.defaultProps = {\n  item: {},\n  onToggleItemExpanded: Function.prototype,\n  visualization: {}\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  var _ownProps$item;\n\n  const itemFilters = !isEditMode(ownProps.dashboardMode) ? sGetItemFiltersRoot(state) : DEFAULT_STATE_ITEM_FILTERS;\n  return {\n    activeType: sGetSelectedItemActiveType(state, (_ownProps$item = ownProps.item) === null || _ownProps$item === void 0 ? void 0 : _ownProps$item.id),\n    isEditing: sGetIsEditing(state),\n    itemFilters,\n    visualization: sGetVisualization(state, getVisualizationId(ownProps.item))\n  };\n};\n\nconst mapDispatchToProps = {\n  setActiveType: acSetSelectedItemActiveType,\n  updateVisualization: acAddVisualization\n};\n\nconst ItemWithSettings = props => /*#__PURE__*/React.createElement(SystemSettingsCtx.Consumer, null, ({\n  settings\n}) => /*#__PURE__*/React.createElement(Item, _extends({\n  settings: settings\n}, props)));\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ItemWithSettings);","import { ADD_VISUALIZATION, CLEAR_VISUALIZATIONS } from '../reducers/visualizations';\nexport const acAddVisualization = value => ({\n  type: ADD_VISUALIZATION,\n  value\n});\nexport const acClearVisualizations = () => ({\n  type: CLEAR_VISUALIZATIONS\n});","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { useConfig } from '@dhis2/app-runtime';\nimport { Divider, spacers } from '@dhis2/ui';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport { useUserSettings } from '../../UserSettingsProvider';\nimport { sGetMessagesRoot } from '../../../reducers/messages';\nimport { getFormattedDate } from './getFormattedDate';\nimport { isViewMode } from '../../../modules/dashboardModes';\nimport classes from './styles/Item.module.css';\nimport './MessagesItem.css';\nconst PRIVATE = 'PRIVATE';\nconst messageTypes = {\n  [PRIVATE]: 'Private',\n  VALIDATION_RESULT: 'Validation',\n  TICKET: 'Ticket',\n  SYSTEM: 'System'\n};\n\nconst MessagesItem = ({\n  messages,\n  item,\n  dashboardMode\n}) => {\n  const {\n    baseUrl\n  } = useConfig();\n  const {\n    userSettings\n  } = useUserSettings();\n\n  const getMessageHref = msg => {\n    const msgIdentifier = msg ? `#/${msg.messageType}/${msg.id}` : '';\n    return `${baseUrl}/dhis-web-messaging/${msgIdentifier}`;\n  };\n\n  const getMessageSender = msg => {\n    const latestMsg = msg.messages.slice(-1)[0];\n    return latestMsg.sender ? latestMsg.sender.displayName : '';\n  };\n\n  const getMessageItems = () => {\n    const modeClass = isViewMode(dashboardMode) ? 'view' : null;\n    return messages.map(msg => {\n      const redirectToMsg = () => {\n        if (isViewMode(dashboardMode)) {\n          document.location.href = getMessageHref(msg);\n        }\n      };\n\n      const sender = msg.messageType === PRIVATE ? getMessageSender(msg) : messageTypes[msg.messageType];\n      const readClass = !msg.read ? 'unread' : null;\n      const latestMsg = msg.messages.slice(-1)[0];\n      const msgDate = latestMsg.lastUpdated;\n      return /*#__PURE__*/React.createElement(\"li\", {\n        className: `message-item ${modeClass}`,\n        key: msg.id,\n        onClick: redirectToMsg\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: `message-title ${readClass}`\n      }, msg.displayName, \" (\", msg.messageCount, \")\"), /*#__PURE__*/React.createElement(\"p\", {\n        className: classes.sender\n      }, sender, \" -\", ' ', getFormattedDate(msgDate, userSettings.keyUiLocale)), /*#__PURE__*/React.createElement(\"p\", {\n        className: classes.snippet\n      }, latestMsg.text));\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ItemHeader, {\n    title: i18n.t('Messages'),\n    itemId: item.id,\n    dashboardMode: dashboardMode,\n    isShortened: item.shortened\n  }), /*#__PURE__*/React.createElement(Divider, {\n    margin: `0 0 ${spacers.dp4} 0`\n  }), messages.length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard-item-content\"\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: classes.list\n  }, getMessageItems()), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.seeAll\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: getMessageHref()\n  }, i18n.t('See all messages')))));\n};\n\nMessagesItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  messages: PropTypes.array\n};\n\nconst mapStateToProps = state => {\n  return {\n    messages: Object.values(sGetMessagesRoot(state))\n  };\n};\n\nconst MessagesContainer = connect(mapStateToProps, null)(MessagesItem);\nexport default MessagesContainer;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { colors, IconQuestion24 } from '@dhis2/ui';\nimport ItemHeader from '../ItemHeader/ItemHeader';\n\nconst NotSupportedItem = props => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ItemHeader, {\n  title: i18n.t('Item type \"{{type}}\" not supported', {\n    type: props.item.type\n  }),\n  itemId: props.item.id,\n  dashboardMode: props.dashboardMode,\n  isShortened: props.item.shortened\n}), /*#__PURE__*/React.createElement(\"div\", {\n  style: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '90%'\n  }\n}, /*#__PURE__*/React.createElement(IconQuestion24, {\n  color: colors.grey500\n})));\n\nNotSupportedItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object\n};\nexport default NotSupportedItem;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst DescriptionIcon = ({\n  className\n}) => /*#__PURE__*/React.createElement(\"svg\", {\n  className: className,\n  xmlns: \"http://www.w3.org/2000/svg\",\n  viewBox: \"0 0 24 24\",\n  fill: colors.grey500\n}, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M0 0h24v24H0z\",\n  fill: \"none\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M14 2H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6zm2 16H8v-2h8v2zm0-4H8v-2h8v2zm-3-5V3.5L18.5 9H13z\"\n}));\n\nDescriptionIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default DescriptionIcon;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst DeleteIcon = ({\n  className\n}) => /*#__PURE__*/React.createElement(\"svg\", {\n  className: className,\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"18\",\n  height: \"18\",\n  viewBox: \"0 0 24 24\",\n  fill: colors.red500\n}, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M0 0h24v24H0z\",\n  fill: \"none\"\n}));\n\nDeleteIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default DeleteIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Divider, colors, spacers } from '@dhis2/ui';\nimport { useConfig } from '@dhis2/app-runtime';\nimport DescriptionIcon from './assets/Description';\nimport DeleteIcon from './assets/Delete';\nimport { itemTypeMap, getItemUrl } from '../../../modules/itemTypes';\nimport { orArray } from '../../../modules/util';\nimport { acUpdateDashboardItem, acRemoveDashboardItem } from '../../../actions/editDashboard';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport { isEditMode } from '../../../modules/dashboardModes';\nimport classes from './Item.module.css';\n\nconst getItemTitle = item => itemTypeMap[item.type].pluralTitle;\n\nconst getContentItems = item => orArray(item[itemTypeMap[item.type].propName]).filter((item, index, array) => array.findIndex(el => el.id === item.id) === index);\n\nconst ListItem = ({\n  item,\n  dashboardMode,\n  removeItem,\n  updateItem\n}) => {\n  const {\n    baseUrl\n  } = useConfig();\n  const contentItems = getContentItems(item);\n\n  const updateDashboardItem = content => {\n    const listItemType = itemTypeMap[item.type].propName;\n    const newContent = item[listItemType].filter(item => item.id !== content.id);\n\n    if (newContent.length) {\n      item[listItemType] = newContent;\n      updateItem(item);\n    } else {\n      removeItem(item);\n    }\n  };\n\n  const getLink = contentItem => {\n    const deleteButton = /*#__PURE__*/React.createElement(\"button\", {\n      className: classes.deletebutton,\n      onClick: () => updateDashboardItem(contentItem)\n    }, /*#__PURE__*/React.createElement(DeleteIcon, {\n      className: classes.deleteicon\n    }));\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"a\", {\n      className: classes.link,\n      style: {\n        color: colors.grey900\n      },\n      href: getItemUrl(item.type, contentItem, baseUrl)\n    }, contentItem.name), isEditMode(dashboardMode) ? deleteButton : null);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ItemHeader, {\n    title: getItemTitle(item),\n    itemId: item.id,\n    dashboardMode: dashboardMode,\n    isShortened: item.shortened\n  }), /*#__PURE__*/React.createElement(Divider, {\n    margin: `0 0 ${spacers.dp4} 0`\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard-item-content\"\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: classes.list\n  }, contentItems.map(contentItem => /*#__PURE__*/React.createElement(\"li\", {\n    className: classes.item,\n    key: contentItem.id\n  }, /*#__PURE__*/React.createElement(DescriptionIcon, {\n    className: classes.itemicon\n  }), getLink(contentItem))))));\n};\n\nListItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  removeItem: PropTypes.func,\n  updateItem: PropTypes.func\n};\nexport default connect(null, {\n  removeItem: acRemoveDashboardItem,\n  updateItem: acUpdateDashboardItem\n})(ListItem);","/** @module reducers/editDashboard */\nimport update from 'immutability-helper';\nimport isEmpty from 'lodash/isEmpty';\nimport { orArray } from '../modules/util';\nexport const SET_PRINT_DASHBOARD = 'SET_PRINT_DASHBOARD';\nexport const CLEAR_PRINT_DASHBOARD = 'CLEAR_PRINT_DASHBOARD';\nexport const ADD_PRINT_DASHBOARD_ITEM = 'ADD_PRINT_DASHBOARD_ITEM';\nexport const SET_PRINT_DASHBOARD_LAYOUT = 'SET_PRINT_DASHBOARD_LAYOUT';\nexport const REMOVE_PRINT_DASHBOARD_ITEM = 'REMOVE_PRINT_DASHBOARD_ITEM';\nexport const UPDATE_PRINT_DASHBOARD_ITEM = 'UPDATE_PRINT_DASHBOARD_ITEM';\nexport const DEFAULT_STATE_PRINT_DASHBOARD = {};\nconst DEFAULT_DASHBOARD_ITEMS = [];\nexport const NEW_PRINT_DASHBOARD_STATE = {\n  id: '',\n  name: '',\n  access: {},\n  description: '',\n  dashboardItems: DEFAULT_DASHBOARD_ITEMS\n};\nexport default ((state = DEFAULT_STATE_PRINT_DASHBOARD, action) => {\n  switch (action.type) {\n    case SET_PRINT_DASHBOARD:\n      {\n        const newState = {};\n        Object.keys(NEW_PRINT_DASHBOARD_STATE).map(k => newState[k] = action.value[k]);\n        return newState;\n      }\n\n    case CLEAR_PRINT_DASHBOARD:\n      return DEFAULT_STATE_PRINT_DASHBOARD;\n\n    case ADD_PRINT_DASHBOARD_ITEM:\n      if (!action.value.position) {\n        return update(state, {\n          dashboardItems: {\n            $unshift: [action.value]\n          }\n        });\n      }\n\n      return update(state, {\n        dashboardItems: {\n          $splice: [[parseInt(action.value.position), 0, action.value]]\n        }\n      });\n\n    case REMOVE_PRINT_DASHBOARD_ITEM:\n      {\n        const idToRemove = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === idToRemove);\n\n        if (dashboardItemIndex > -1) {\n          return update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1]]\n            }\n          });\n        }\n\n        return state;\n      }\n\n    case UPDATE_PRINT_DASHBOARD_ITEM:\n      {\n        const dashboardItem = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === dashboardItem.id);\n\n        if (dashboardItemIndex > -1) {\n          const newState = update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1, Object.assign({}, dashboardItem)]]\n            }\n          });\n          return newState;\n        }\n\n        return state;\n      }\n\n    case SET_PRINT_DASHBOARD_LAYOUT:\n      {\n        const stateItems = orArray(state.dashboardItems);\n        let layoutHasChanged = false;\n        const newStateItems = action.value.map(({\n          x,\n          y,\n          w,\n          h,\n          i\n        }) => {\n          const stateItem = stateItems.find(si => si.id === i);\n\n          if (!(stateItem.x === x && stateItem.y === y && stateItem.w === w && stateItem.h === h)) {\n            layoutHasChanged = true;\n            return Object.assign({}, stateItem, {\n              w,\n              h,\n              x,\n              y\n            });\n          }\n\n          return stateItem;\n        });\n        return layoutHasChanged ? { ...state,\n          dashboardItems: newStateItems\n        } : state;\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetPrintDashboardRoot = state => state.printDashboard; // selectors\n\nexport const sGetIsPrinting = state => !isEmpty(state.printDashboard);\nexport const sGetPrintDashboardName = state => sGetPrintDashboardRoot(state).name;\nexport const sGetPrintDashboardDescription = state => sGetPrintDashboardRoot(state).description;\nexport const sGetPrintDashboardItems = state => {\n  var _sGetPrintDashboardRo;\n\n  return ((_sGetPrintDashboardRo = sGetPrintDashboardRoot(state)) === null || _sGetPrintDashboardRo === void 0 ? void 0 : _sGetPrintDashboardRo.dashboardItems) || DEFAULT_DASHBOARD_ITEMS;\n};","import React from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport { Divider, TextArea, spacers } from '@dhis2/ui';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport PrintItemInfo from '../ItemHeader/PrintItemInfo';\nimport { Parser as RichTextParser, Editor as RichTextEditor } from '@dhis2/d2-ui-rich-text';\nimport { acUpdateDashboardItem } from '../../../actions/editDashboard';\nimport { sGetEditDashboardItems } from '../../../reducers/editDashboard';\nimport { sGetDashboardItems } from '../../../reducers/dashboards';\nimport { sGetIsPrinting, sGetPrintDashboardItems } from '../../../reducers/printDashboard';\nimport { isEditMode, PRINT_LAYOUT } from '../../../modules/dashboardModes';\nconst style = {\n  textDiv: {\n    padding: '10px',\n    whiteSpace: 'pre-line',\n    lineHeight: '20px'\n  },\n  textField: {\n    fontSize: '14px',\n    fontStretch: 'normal',\n    width: '90%',\n    margin: '0 auto',\n    display: 'block',\n    lineHeight: '24px'\n  },\n  container: {\n    marginBottom: '20px',\n    marginTop: '20px'\n  }\n};\n\nconst TextItem = props => {\n  const {\n    item,\n    dashboardMode,\n    text,\n    acUpdateDashboardItem\n  } = props;\n\n  const onChangeText = text => {\n    const updatedItem = { ...item,\n      text\n    };\n    acUpdateDashboardItem(updatedItem);\n  };\n\n  const viewItem = () => {\n    const textDivStyle = Object.assign({}, style.textField, style.textDiv);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dashboard-item-content\",\n      style: style.container\n    }, /*#__PURE__*/React.createElement(RichTextParser, {\n      style: textDivStyle\n    }, text));\n  };\n\n  const editItem = () => {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ItemHeader, {\n      title: i18n.t('Text item'),\n      itemId: item.id,\n      dashboardMode: dashboardMode\n    }), /*#__PURE__*/React.createElement(Divider, {\n      margin: `0 0 ${spacers.dp4} 0`\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dashboard-item-content\"\n    }, /*#__PURE__*/React.createElement(RichTextEditor, {\n      onEdit: event => onChangeText(event.target.value)\n    }, /*#__PURE__*/React.createElement(TextArea, {\n      rows: 30,\n      value: text,\n      placeholder: i18n.t('Add text here'),\n      onChange: ({\n        value\n      }) => onChangeText(value)\n    }))));\n  };\n\n  const printItem = () => {\n    const textDivStyle = Object.assign({}, style.textField, style.textDiv);\n    return /*#__PURE__*/React.createElement(React.Fragment, null, props.item.shortened ? /*#__PURE__*/React.createElement(PrintItemInfo, null) : null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dashboard-item-content\",\n      style: style.container\n    }, /*#__PURE__*/React.createElement(RichTextParser, {\n      style: textDivStyle\n    }, text)));\n  };\n\n  let textItem;\n\n  if (isEditMode(dashboardMode)) {\n    textItem = editItem;\n  } else if (dashboardMode === PRINT_LAYOUT) {\n    textItem = printItem;\n  } else {\n    textItem = viewItem;\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, textItem());\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const isPrintPreview = sGetIsPrinting(state);\n  let items;\n\n  if (isPrintPreview) {\n    items = sGetPrintDashboardItems(state);\n  } else if (isEditMode(ownProps.dashboardMode)) {\n    items = sGetEditDashboardItems(state);\n  } else {\n    items = sGetDashboardItems(state);\n  }\n\n  const item = items.find(item => item.id === ownProps.item.id);\n  return {\n    text: item ? item.text : ''\n  };\n};\n\nTextItem.propTypes = {\n  acUpdateDashboardItem: PropTypes.func,\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  text: PropTypes.string\n};\nexport default connect(mapStateToProps, {\n  acUpdateDashboardItem\n})(TextItem);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { useD2 } from '@dhis2/app-runtime-adapter-d2';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport { Divider, colors, spacers, IconQuestion24 } from '@dhis2/ui';\nimport { FILTER_ORG_UNIT } from '../../../actions/itemFilters';\nimport { sGetItemFiltersRoot, DEFAULT_STATE_ITEM_FILTERS } from '../../../reducers/itemFilters';\nimport { EDIT, isEditMode } from '../../../modules/dashboardModes';\n\nconst getIframeSrc = (appDetails, item, itemFilters) => {\n  let iframeSrc = `${appDetails.launchUrl}?dashboardItemId=${item.id}`;\n\n  if (itemFilters[FILTER_ORG_UNIT] && itemFilters[FILTER_ORG_UNIT].length) {\n    const ouIds = itemFilters[FILTER_ORG_UNIT].map(ouFilter => ouFilter.path.split('/').slice(-1)[0]);\n    iframeSrc += `&userOrgUnit=${ouIds.join(',')}`;\n  }\n\n  return iframeSrc;\n};\n\nconst AppItem = ({\n  dashboardMode,\n  item,\n  itemFilters\n}) => {\n  var _appDetails, _appDetails$settings, _appDetails$settings$;\n\n  const {\n    d2\n  } = useD2();\n  let appDetails;\n  const appKey = item.appKey;\n\n  if (appKey) {\n    appDetails = d2.system.installedApps.find(app => app.key === appKey);\n  }\n\n  const hideTitle = ((_appDetails = appDetails) === null || _appDetails === void 0 ? void 0 : (_appDetails$settings = _appDetails.settings) === null || _appDetails$settings === void 0 ? void 0 : (_appDetails$settings$ = _appDetails$settings.dashboardWidget) === null || _appDetails$settings$ === void 0 ? void 0 : _appDetails$settings$.hideTitle) && dashboardMode !== EDIT;\n  return appDetails && appDetails.name && appDetails.launchUrl ? /*#__PURE__*/React.createElement(React.Fragment, null, !hideTitle && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ItemHeader, {\n    title: appDetails.name,\n    itemId: item.id,\n    dashboardMode: dashboardMode,\n    isShortened: item.shortened\n  }), /*#__PURE__*/React.createElement(Divider, {\n    margin: `0 0 ${spacers.dp4} 0`\n  })), /*#__PURE__*/React.createElement(\"iframe\", {\n    title: appDetails.name,\n    src: getIframeSrc(appDetails, item, itemFilters),\n    className: !hideTitle ? 'dashboard-item-content' : 'dashboard-item-content-hidden-title',\n    style: {\n      border: 'none'\n    }\n  })) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ItemHeader, {\n    title: `${appKey} app not found`\n  }), /*#__PURE__*/React.createElement(Divider, {\n    margin: `0 0 ${spacers.dp4} 0`\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard-item-content\",\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      height: '90%'\n    }\n  }, /*#__PURE__*/React.createElement(IconQuestion24, {\n    color: colors.grey500\n  })));\n};\n\nAppItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const itemFilters = !isEditMode(ownProps.dashboardMode) ? sGetItemFiltersRoot(state) : DEFAULT_STATE_ITEM_FILTERS;\n  return {\n    itemFilters\n  };\n};\n\nexport default connect(mapStateToProps)(AppItem);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { colors } from '@dhis2/ui';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nconst style = {\n  margin: '21px 28px',\n  fontSize: '14px',\n  lineHeight: '18px',\n  color: colors.grey600\n};\n\nconst SpacerItem = props => {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ItemHeader, {\n    title: i18n.t('Spacer'),\n    itemId: props.item.id,\n    dashboardMode: props.dashboardMode,\n    isShortened: props.item.shortened\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    style: style\n  }, i18n.t('Use a spacer to create empty vertical space between other dashboard items.')));\n};\n\nSpacerItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object\n};\nexport default SpacerItem;","import React from 'react';\n\nconst PageBreakItem = () => /*#__PURE__*/React.createElement(\"div\", null);\n\nexport default PageBreakItem;","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { sGetSelectedId, sGetSelectedShowDescription } from '../../../reducers/selected';\nimport { sGetDashboardById, EMPTY_DASHBOARD } from '../../../reducers/dashboards';\nimport { sGetNamedItemFilters } from '../../../reducers/itemFilters';\nimport { sGetIsEditing } from '../../../reducers/editDashboard';\nimport { sGetPrintDashboardName, sGetPrintDashboardDescription } from '../../../reducers/printDashboard';\nimport classes from './styles/Item.module.css';\n\nconst PrintTitlePageItem = ({\n  name,\n  description,\n  itemFilters,\n  showDescription\n}) => {\n  const getItemFilterList = () => {\n    const listItems = itemFilters.map(({\n      name,\n      values\n    }) => /*#__PURE__*/React.createElement(\"li\", {\n      className: classes.filterListItem,\n      key: name\n    }, name, \": \", values.map(val => val.name).join(', ')));\n    return /*#__PURE__*/React.createElement(\"ul\", {\n      className: classes.filterList\n    }, listItems);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.titlePage\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.name\n  }, name), showDescription && description && /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.description\n  }, description), itemFilters.length > 0 && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.filterTitle\n  }, i18n.t('Filters applied')), getItemFilterList()));\n};\n\nPrintTitlePageItem.propTypes = {\n  description: PropTypes.string,\n  itemFilters: PropTypes.array,\n  name: PropTypes.string,\n  showDescription: PropTypes.bool\n};\nPrintTitlePageItem.defaultProps = {\n  description: '',\n  name: '',\n  showDescription: false\n};\n\nconst mapStateToProps = state => {\n  const id = sGetSelectedId(state);\n  const isEditMode = sGetIsEditing(state);\n  const viewDashboard = sGetDashboardById(state, id) || EMPTY_DASHBOARD;\n  const name = isEditMode ? sGetPrintDashboardName(state) || i18n.t('Untitled dashboard') : viewDashboard.displayName;\n  const description = isEditMode ? sGetPrintDashboardDescription(state) : viewDashboard.displayDescription;\n  return {\n    name,\n    description,\n    itemFilters: sGetNamedItemFilters(state),\n    showDescription: sGetSelectedShowDescription(state)\n  };\n};\n\nexport default connect(mapStateToProps)(PrintTitlePageItem);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport VisualizationItem from './VisualizationItem/Item';\nimport MessagesItem from './MessagesItem/Item';\nimport NotSupportedItem from './NotSupportedItem/Item';\nimport ListItem from './ListItem/Item';\nimport TextItem from './TextItem/Item';\nimport AppItem from './AppItem/Item';\nimport SpacerItem from './SpacerItem/Item';\nimport PageBreakItem from './PageBreakItem/Item';\nimport PrintTitlePageItem from './PrintTitlePageItem/Item';\nimport { APP, VISUALIZATION, REPORT_TABLE, CHART, MAP, EVENT_CHART, EVENT_REPORT, MESSAGES, REPORTS, RESOURCES, USERS, TEXT, SPACER, PAGEBREAK, PRINT_TITLE_PAGE } from '../../modules/itemTypes';\n\nconst getGridItem = type => {\n  switch (type) {\n    case VISUALIZATION:\n    case REPORT_TABLE:\n    case CHART:\n    case MAP:\n    case EVENT_CHART:\n    case EVENT_REPORT:\n      return VisualizationItem;\n\n    case MESSAGES:\n      return MessagesItem;\n\n    case REPORTS:\n    case RESOURCES:\n    case USERS:\n      return ListItem;\n\n    case TEXT:\n      return TextItem;\n\n    case SPACER:\n      return SpacerItem;\n\n    case APP:\n      return AppItem;\n\n    case PAGEBREAK:\n      return PageBreakItem;\n\n    case PRINT_TITLE_PAGE:\n      return PrintTitlePageItem;\n\n    default:\n      return NotSupportedItem;\n  }\n};\n\nexport const Item = props => {\n  const GridItem = getGridItem(props.item.type);\n  return /*#__PURE__*/React.createElement(GridItem, {\n    item: props.item,\n    gridWidth: props.gridWidth,\n    dashboardMode: props.dashboardMode,\n    onToggleItemExpanded: props.onToggleItemExpanded\n  });\n};\nItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  gridWidth: PropTypes.number,\n  item: PropTypes.object,\n  onToggleItemExpanded: PropTypes.func\n};","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash/debounce';\nimport pick from 'lodash/pick';\nconst defaultDebounceMs = 100;\nconst defaultBufferFactor = 0.25;\nconst observerConfig = {\n  attributes: true,\n  childList: false,\n  subtree: false\n};\n\nclass ProgressiveLoadingContainer extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      shouldLoad: false\n    });\n\n    _defineProperty(this, \"containerRef\", null);\n\n    _defineProperty(this, \"debouncedCheckShouldLoad\", null);\n\n    _defineProperty(this, \"handlerOptions\", {\n      passive: true\n    });\n\n    _defineProperty(this, \"observer\", null);\n  }\n\n  checkShouldLoad() {\n    if (!this.containerRef) {\n      return;\n    }\n\n    const bufferPx = this.props.bufferFactor * window.innerHeight;\n    const rect = this.containerRef.getBoundingClientRect();\n\n    if (rect.bottom > -bufferPx && rect.top < window.innerHeight + bufferPx) {\n      this.setState({\n        shouldLoad: true\n      });\n      this.removeHandler();\n    }\n  }\n\n  registerHandler() {\n    this.debouncedCheckShouldLoad = debounce(() => this.checkShouldLoad(), this.props.debounceMs);\n    Array.from(document.getElementsByClassName('dashboard-scroll-container')).forEach(container => {\n      container.addEventListener('scroll', this.debouncedCheckShouldLoad, this.handlerOptions);\n    });\n\n    const mutationCallback = mutationsList => {\n      const styleChanged = mutationsList.find(mutation => mutation.attributeName === 'style');\n\n      if (styleChanged) {\n        this.debouncedCheckShouldLoad();\n      }\n    };\n\n    this.observer = new MutationObserver(mutationCallback);\n    this.observer.observe(this.containerRef, observerConfig);\n  }\n\n  removeHandler() {\n    Array.from(document.getElementsByClassName('dashboard-scroll-container')).forEach(container => {\n      container.removeEventListener('scroll', this.debouncedCheckShouldLoad, this.handlerOptions);\n    });\n    this.observer.disconnect();\n  }\n\n  componentDidMount() {\n    this.registerHandler();\n    this.checkShouldLoad();\n  }\n\n  componentWillUnmount() {\n    this.removeHandler();\n  }\n\n  render() {\n    const {\n      children,\n      className,\n      style,\n      ...props\n    } = this.props;\n    const {\n      shouldLoad\n    } = this.state;\n    const eventProps = pick(props, ['onMouseDown', 'onTouchStart', 'onMouseUp', 'onTouchEnd']);\n    return /*#__PURE__*/React.createElement(\"div\", _extends({\n      ref: ref => this.containerRef = ref,\n      style: style,\n      className: className,\n      \"data-test\": `dashboarditem-${props.itemId}`\n    }, eventProps), shouldLoad && children);\n  }\n\n}\n\n_defineProperty(ProgressiveLoadingContainer, \"propTypes\", {\n  children: PropTypes.node.isRequired,\n  bufferFactor: PropTypes.number,\n  className: PropTypes.string,\n  debounceMs: PropTypes.number,\n  itemId: PropTypes.string,\n  style: PropTypes.object\n});\n\n_defineProperty(ProgressiveLoadingContainer, \"defaultProps\", {\n  debounceMs: defaultDebounceMs,\n  bufferFactor: defaultBufferFactor\n});\n\nexport default ProgressiveLoadingContainer;","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport cx from 'classnames';\nimport { Responsive as ResponsiveReactGridLayout } from 'react-grid-layout';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport { useWindowDimensions } from '../../components/WindowDimensionsProvider';\nimport { Item } from '../../components/Item/Item';\nimport { GRID_ROW_HEIGHT_PX, SM_SCREEN_GRID_COLUMNS, GRID_COMPACT_TYPE, GRID_PADDING_PX, MARGIN_PX, MARGIN_SM_PX, hasShape, GRID_COLUMNS, getSmallLayout, getGridWidth, getProportionalHeight } from '../../modules/gridUtil';\nimport { orArray } from '../../modules/util';\nimport NoContentMessage from '../../components/NoContentMessage';\nimport { sGetSelectedId, sGetSelectedIsLoading } from '../../reducers/selected';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport ProgressiveLoadingContainer from '../../components/ProgressiveLoadingContainer';\nimport { VIEW } from '../../modules/dashboardModes';\nimport { getBreakpoint, isSmallScreen } from '../../modules/smallScreen';\nimport { getGridItemDomElementClassName } from '../../modules/getGridItemDomElementClassName';\nimport classes from './styles/ItemGrid.module.css';\nconst EXPANDED_HEIGHT = 17;\nconst EXPANDED_HEIGHT_SM = 13;\n\nconst ResponsiveItemGrid = ({\n  isLoading,\n  dashboardItems\n}) => {\n  const {\n    width\n  } = useWindowDimensions();\n  const [expandedItems, setExpandedItems] = useState({});\n  const [displayItems, setDisplayItems] = useState(dashboardItems);\n  const [layoutSm, setLayoutSm] = useState([]);\n  const [gridWidth, setGridWidth] = useState(0);\n  useEffect(() => {\n    setLayoutSm(getItemsWithAdjustedHeight(getSmallLayout(dashboardItems, width)));\n    setDisplayItems(getItemsWithAdjustedHeight(dashboardItems));\n  }, [expandedItems, width, dashboardItems]);\n\n  const onToggleItemExpanded = clickedId => {\n    const isExpanded = typeof expandedItems[clickedId] === 'boolean' ? expandedItems[clickedId] : false;\n    const newExpandedItems = { ...expandedItems\n    };\n    newExpandedItems[clickedId] = !isExpanded;\n    setExpandedItems(newExpandedItems);\n  };\n\n  const getItemsWithAdjustedHeight = items => items.map(item => {\n    const expandedItem = expandedItems[item.id];\n\n    if (expandedItem && expandedItem === true) {\n      const expandedHeight = isSmallScreen(width) ? EXPANDED_HEIGHT_SM : EXPANDED_HEIGHT;\n      return Object.assign({}, item, {\n        h: item.h + expandedHeight,\n        smallOriginalH: getProportionalHeight(item, width)\n      });\n    }\n\n    return item;\n  });\n\n  const getItemComponent = item => {\n    if (!layoutSm.length) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: item.i\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(ProgressiveLoadingContainer, {\n      key: item.i,\n      className: cx(item.type, 'view', getGridItemDomElementClassName(item.id)),\n      itemId: item.id\n    }, /*#__PURE__*/React.createElement(Item, {\n      item: item,\n      gridWidth: gridWidth,\n      dashboardMode: VIEW,\n      onToggleItemExpanded: onToggleItemExpanded\n    }));\n  };\n\n  const getItemComponents = items => items.map(item => getItemComponent(item));\n\n  const onWidthChanged = containerWidth => setTimeout(() => setGridWidth(containerWidth), 200);\n\n  if (!isLoading && !dashboardItems.length) {\n    return /*#__PURE__*/React.createElement(NoContentMessage, {\n      text: i18n.t('There are no items on this dashboard')\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, isLoading ? /*#__PURE__*/React.createElement(Layer, {\n    translucent: true\n  }, /*#__PURE__*/React.createElement(CenteredContent, null, /*#__PURE__*/React.createElement(CircularLoader, null))) : null, /*#__PURE__*/React.createElement(ResponsiveReactGridLayout, {\n    className: classes.grid,\n    rowHeight: GRID_ROW_HEIGHT_PX,\n    width: getGridWidth(width),\n    cols: {\n      lg: GRID_COLUMNS,\n      sm: SM_SCREEN_GRID_COLUMNS\n    },\n    breakpoints: {\n      lg: getBreakpoint(),\n      sm: 0\n    },\n    layouts: {\n      lg: displayItems,\n      sm: layoutSm\n    },\n    compactType: GRID_COMPACT_TYPE,\n    margin: isSmallScreen(width) ? MARGIN_SM_PX : MARGIN_PX,\n    containerPadding: {\n      lg: GRID_PADDING_PX,\n      sm: GRID_PADDING_PX\n    },\n    isDraggable: false,\n    isResizable: false,\n    draggableCancel: \"input,textarea\",\n    onWidthChange: onWidthChanged\n  }, getItemComponents(displayItems)));\n};\n\nResponsiveItemGrid.propTypes = {\n  dashboardItems: PropTypes.array,\n  isLoading: PropTypes.bool\n};\n\nconst mapStateToProps = state => {\n  const selectedDashboard = sGetDashboardById(state, sGetSelectedId(state));\n  const dashboardItems = orArray(sGetDashboardItems(state)).filter(hasShape);\n  return {\n    isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n    dashboardItems\n  };\n};\n\nexport default connect(mapStateToProps)(ResponsiveItemGrid);","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { acRemoveItemFilter } from '../../../actions/itemFilters';\nimport { acSetActiveModalDimension } from '../../../actions/activeModalDimension';\nimport classes from './styles/FilterBadge.module.css';\n\nconst FilterBadge = ({\n  filter,\n  openFilterModal,\n  removeFilter\n}) => {\n  const filterText = `${filter.name}: ${filter.values.length > 1 ? i18n.t('{{count}} selected', {\n    count: filter.values.length\n  }) : filter.values[0].name}`;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.container,\n    \"data-test\": \"dashboard-filter-badge\"\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.badge,\n    onClick: () => openFilterModal({\n      id: filter.id,\n      name: filter.name\n    })\n  }, filterText), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.badgeSmall\n  }, filterText), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.removeButton,\n    onClick: () => removeFilter(filter.id)\n  }, i18n.t('Remove')));\n};\n\nFilterBadge.propTypes = {\n  filter: PropTypes.object.isRequired,\n  openFilterModal: PropTypes.func.isRequired,\n  removeFilter: PropTypes.func.isRequired\n};\nexport default connect(null, {\n  openFilterModal: acSetActiveModalDimension,\n  removeFilter: acRemoveItemFilter\n})(FilterBadge);","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport FilterBadge from './FilterBadge';\nimport { sGetNamedItemFilters } from '../../../reducers/itemFilters';\nimport classes from './styles/FilterBar.module.css';\n\nconst FilterBar = ({\n  filters\n}) => filters.length ? /*#__PURE__*/React.createElement(\"div\", {\n  className: classes.bar\n}, filters.map(filter => /*#__PURE__*/React.createElement(FilterBadge, {\n  key: filter.id,\n  filter: filter\n}))) : null;\n\nFilterBar.propTypes = {\n  filters: PropTypes.array.isRequired\n};\nFilterBar.defaultProps = {\n  filters: []\n};\n\nconst mapStateToProps = state => ({\n  filters: sGetNamedItemFilters(state)\n});\n\nexport default connect(mapStateToProps)(FilterBar);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Chip as UiChip, colors, IconStarFilled24 } from '@dhis2/ui';\nimport { Link } from 'react-router-dom';\nimport debounce from 'lodash/debounce';\nimport { apiPostDataStatistics } from '../../../api/dataStatistics';\nimport classes from './styles/Chip.module.css';\nexport const Chip = ({\n  starred,\n  selected,\n  label,\n  dashboardId,\n  onClick\n}) => {\n  const chipProps = {\n    selected\n  };\n\n  if (starred) {\n    chipProps.icon = /*#__PURE__*/React.createElement(IconStarFilled24, {\n      color: selected ? colors.white : colors.grey600\n    });\n  }\n\n  const debouncedPostStatistics = debounce(() => apiPostDataStatistics('DASHBOARD_VIEW', dashboardId), 500);\n\n  const handleClick = () => {\n    debouncedPostStatistics();\n    onClick();\n  };\n\n  return /*#__PURE__*/React.createElement(Link, {\n    className: classes.link,\n    to: `/${dashboardId}`,\n    onClick: handleClick,\n    \"data-test\": \"dashboard-chip\"\n  }, /*#__PURE__*/React.createElement(UiChip, chipProps, label));\n};\nChip.propTypes = {\n  dashboardId: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  selected: PropTypes.bool.isRequired,\n  starred: PropTypes.bool.isRequired,\n  onClick: PropTypes.func.isRequired,\n  classes: PropTypes.object\n};\nexport default Chip;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst ClearIcon = ({\n  className\n}) => /*#__PURE__*/React.createElement(\"svg\", {\n  className: className,\n  fill: colors.grey800,\n  xmlns: \"http://www.w3.org/2000/svg\",\n  viewBox: \"0 0 24 24\"\n}, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M0 0h24v24H0z\",\n  fill: \"none\"\n}));\n\nClearIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default ClearIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ClearIcon from './assets/Clear';\nimport classes from './styles/ClearButton.module.css';\nexport const ClearButton = ({\n  onClear\n}) => /*#__PURE__*/React.createElement(\"button\", {\n  className: classes.button,\n  onClick: onClear\n}, /*#__PURE__*/React.createElement(\"span\", null, /*#__PURE__*/React.createElement(ClearIcon, {\n  className: classes.icon,\n  color: \"action\"\n})));\nClearButton.propTypes = {\n  onClear: PropTypes.func.isRequired\n};\nexport default ClearButton;","import { validateReducer } from '../modules/util';\nexport const SET_DASHBOARDS_FILTER = 'SET_DASHBOARDS_FILTER';\nexport const CLEAR_DASHBOARDS_FILTER = 'CLEAR_DASHBOARDS_FILTER';\nexport const DEFAULT_STATE_DASHBOARDS_FILTER = '';\nexport default ((state = DEFAULT_STATE_DASHBOARDS_FILTER, action) => {\n  switch (action.type) {\n    case SET_DASHBOARDS_FILTER:\n      {\n        return validateReducer(action.value, DEFAULT_STATE_DASHBOARDS_FILTER);\n      }\n\n    case CLEAR_DASHBOARDS_FILTER:\n      {\n        return DEFAULT_STATE_DASHBOARDS_FILTER;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetDashboardsFilter = state => state.dashboardsFilter;","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport cx from 'classnames';\nimport { colors, IconSearch16, IconSearch24 } from '@dhis2/ui';\nimport ClearButton from './ClearButton';\nimport { useWindowDimensions } from '../../../components/WindowDimensionsProvider';\nimport { acSetDashboardsFilter, acClearDashboardsFilter } from '../../../actions/dashboardsFilter';\nimport { sGetDashboardsFilter } from '../../../reducers/dashboardsFilter';\nimport { isSmallScreen } from '../../../modules/smallScreen';\nimport classes from './styles/Filter.module.css';\nexport const KEYCODE_ENTER = 13;\nexport const KEYCODE_ESCAPE = 27;\nexport const FilterUnconnected = ({\n  clearDashboardsFilter,\n  expanded,\n  filterText,\n  setDashboardsFilter,\n  onKeypressEnter,\n  onSearchClicked\n}) => {\n  const [focusedClassName, setFocusedClassName] = useState('');\n  const [inputFocused, setInputFocus] = useState(false);\n  const {\n    width\n  } = useWindowDimensions();\n\n  const setFilterValue = event => {\n    event.preventDefault();\n    setDashboardsFilter(event.target.value);\n  };\n\n  const onKeyUp = event => {\n    switch (event.keyCode) {\n      case KEYCODE_ENTER:\n        onKeypressEnter();\n        clearDashboardsFilter();\n        break;\n\n      case KEYCODE_ESCAPE:\n        clearDashboardsFilter();\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const onFocus = event => {\n    event.preventDefault();\n    setFocusedClassName(classes.focused);\n  };\n\n  const onBlur = event => {\n    event.preventDefault();\n    setFocusedClassName('');\n  };\n\n  const onFocusInput = input => {\n    if (input && inputFocused && isSmallScreen(width)) {\n      return input.focus();\n    }\n  };\n\n  const activateSearchInput = () => {\n    onSearchClicked();\n    setInputFocus(true);\n  };\n\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: cx(classes.container, expanded ? classes.expanded : classes.collapsed)\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: classes.searchButton,\n    onClick: activateSearchInput\n  }, /*#__PURE__*/React.createElement(IconSearch24, {\n    color: colors.grey800\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: cx(classes.searchArea, `${focusedClassName}`),\n    onFocus: onFocus,\n    onBlur: onBlur\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.searchIconContainer\n  }, /*#__PURE__*/React.createElement(IconSearch16, {\n    color: colors.grey800\n  })), /*#__PURE__*/React.createElement(\"input\", {\n    className: classes.input,\n    type: \"text\",\n    placeholder: i18n.t('Search for a dashboard'),\n    onChange: setFilterValue,\n    onKeyUp: onKeyUp,\n    value: filterText,\n    \"data-test\": \"search-dashboard-input\",\n    ref: onFocusInput\n  }), filterText && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.clearButtonContainer\n  }, /*#__PURE__*/React.createElement(ClearButton, {\n    onClear: clearDashboardsFilter\n  }))));\n};\nFilterUnconnected.propTypes = {\n  clearDashboardsFilter: PropTypes.func,\n  expanded: PropTypes.bool,\n  filterText: PropTypes.string,\n  setDashboardsFilter: PropTypes.func,\n  onKeypressEnter: PropTypes.func,\n  onSearchClicked: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  filterText: sGetDashboardsFilter(state)\n});\n\nconst mapDispatchToProps = {\n  setDashboardsFilter: acSetDashboardsFilter,\n  clearDashboardsFilter: acClearDashboardsFilter\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterUnconnected);","import { SET_DASHBOARDS_FILTER, CLEAR_DASHBOARDS_FILTER } from '../reducers/dashboardsFilter'; // actions\n\nexport const acSetDashboardsFilter = value => ({\n  type: SET_DASHBOARDS_FILTER,\n  value\n});\nexport const acClearDashboardsFilter = () => ({\n  type: CLEAR_DASHBOARDS_FILTER\n});","import arraySort from 'd2-utilizr/lib/arraySort';\nexport const getFilteredDashboards = (dashboards, filterText) => {\n  const filteredDashboards = arraySort(Object.values(dashboards).filter(d => d.displayName.toLowerCase().includes(filterText.toLowerCase())), 'ASC', 'displayName');\n  return [...filteredDashboards.filter(d => d.starred), ...filteredDashboards.filter(d => !d.starred)];\n};","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport cx from 'classnames';\nimport { Redirect, withRouter } from 'react-router-dom';\nimport { Button, Tooltip, colors, IconAdd24 } from '@dhis2/ui';\nimport Chip from './Chip';\nimport Filter from './Filter';\nimport { getFilteredDashboards } from './getFilteredDashboards';\nimport { sGetAllDashboards } from '../../../reducers/dashboards';\nimport { sGetDashboardsFilter } from '../../../reducers/dashboardsFilter';\nimport { sGetSelectedId } from '../../../reducers/selected';\nimport classes from './styles/Content.module.css';\n\nconst Content = ({\n  dashboards,\n  expanded,\n  filterText,\n  history,\n  selectedId,\n  onChipClicked,\n  onSearchClicked\n}) => {\n  const [redirectUrl, setRedirectUrl] = useState(null);\n\n  const onSelectDashboard = () => {\n    var _getFilteredDashboard;\n\n    const id = (_getFilteredDashboard = getFilteredDashboards(dashboards, filterText)[0]) === null || _getFilteredDashboard === void 0 ? void 0 : _getFilteredDashboard.id;\n\n    if (id) {\n      history.push(id);\n    }\n  };\n\n  const enterNewMode = () => {\n    setRedirectUrl('/new');\n  };\n\n  const getChips = () => getFilteredDashboards(dashboards, filterText).map(dashboard => /*#__PURE__*/React.createElement(Chip, {\n    key: dashboard.id,\n    label: dashboard.displayName,\n    starred: dashboard.starred,\n    dashboardId: dashboard.id,\n    selected: dashboard.id === selectedId,\n    onClick: onChipClicked\n  }));\n\n  const getControlsSmall = () => /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.controlsSmall\n  }, /*#__PURE__*/React.createElement(Filter, {\n    onKeypressEnter: onSelectDashboard,\n    onSearchClicked: onSearchClicked,\n    expanded: expanded\n  }));\n\n  const getControlsLarge = () => /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.controlsLarge\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    content: i18n.t('Create a new dashboard')\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: classes.newButton,\n    small: true,\n    icon: /*#__PURE__*/React.createElement(IconAdd24, {\n      color: colors.grey600\n    }),\n    onClick: enterNewMode,\n    dataTest: \"new-button\"\n  })), /*#__PURE__*/React.createElement(Filter, {\n    onKeypressEnter: onSelectDashboard,\n    onSearchClicked: onSearchClicked,\n    expanded: expanded\n  }));\n\n  if (redirectUrl) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: redirectUrl\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: cx(classes.container, expanded ? classes.expanded : classes.collapsed)\n  }, getControlsSmall(), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.chipsContainer\n  }, getControlsLarge(), getChips()));\n};\n\nContent.propTypes = {\n  dashboards: PropTypes.object,\n  expanded: PropTypes.bool,\n  filterText: PropTypes.string,\n  history: PropTypes.object,\n  selectedId: PropTypes.string,\n  onChipClicked: PropTypes.func,\n  onSearchClicked: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  dashboards: sGetAllDashboards(state),\n  selectedId: sGetSelectedId(state),\n  filterText: sGetDashboardsFilter(state)\n});\n\nexport default withRouter(connect(mapStateToProps)(Content));","import React from 'react';\nexport const ChevronDown = () => /*#__PURE__*/React.createElement(\"svg\", {\n  height: \"24\",\n  viewBox: \"0 0 24 24\",\n  width: \"24\",\n  xmlns: \"http://www.w3.org/2000/svg\"\n}, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m11.29289 15.7071c.39053.3905 1.02369.3905 1.41422 0l4.99999-4.99999c.3905-.39053.3905-1.02369 0-1.41422-.3905-.39052-1.0237-.39052-1.4142 0l-4.2929 4.2929-4.29289-4.2929c-.39053-.39052-1.02369-.39052-1.41422 0-.39052.39053-.39052 1.02369 0 1.41422z\",\n  fill: \"#a0adba\"\n}));\nexport const ChevronUp = () => /*#__PURE__*/React.createElement(\"svg\", {\n  height: \"24\",\n  viewBox: \"0 0 24 24\",\n  width: \"24\",\n  xmlns: \"http://www.w3.org/2000/svg\"\n}, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m11.2928932 8.29289322c.360484-.36048396.927715-.3882135 1.3200062-.08318861l.0942074.08318861 5 4.99999998c.3905243.3905243.3905243 1.0236893 0 1.4142136-.360484.3604839-.927715.3882135-1.3200062.0831886l-.0942074-.0831886-4.2928932-4.2921068-4.29289322 4.2921068c-.36048396.3604839-.92771502.3882135-1.32000622.0831886l-.09420734-.0831886c-.36048396-.360484-.3882135-.927715-.08318861-1.3200062l.08318861-.0942074z\",\n  fill: \"#a0adba\"\n}));","import React, { useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Tooltip } from '@dhis2/ui';\nimport { ChevronDown, ChevronUp } from './assets/icons';\nimport classes from './styles/ShowMoreButton.module.css';\n\nconst ShowMoreButton = ({\n  onClick,\n  dashboardBarIsExpanded,\n  disabled\n}) => {\n  const containerRef = useRef(null);\n  const buttonLabel = dashboardBarIsExpanded ? i18n.t('Show fewer dashboards') : i18n.t('Show more dashboards');\n\n  const onButtonClicked = () => {\n    // The click may happen on the svg or path\n    // element of the button icon.\n    // In that case it is necessary to trigger\n    // the mouseout on the button element\n    // to ensure that the tooltip is removed\n    const buttonEl = containerRef.current.children[0];\n    const event = new MouseEvent('mouseout', {\n      bubbles: true,\n      cancelable: false\n    });\n    onClick();\n    buttonEl.dispatchEvent(event);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.container,\n    ref: containerRef\n  }, disabled ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.disabled\n  }, /*#__PURE__*/React.createElement(ChevronDown, null)) : /*#__PURE__*/React.createElement(Tooltip, {\n    content: buttonLabel,\n    placement: \"bottom\"\n  }, ({\n    onMouseOver,\n    onMouseOut,\n    ref\n  }) => /*#__PURE__*/React.createElement(\"button\", {\n    className: classes.showMore,\n    onClick: onButtonClicked,\n    \"data-test\": \"showmore-button\",\n    \"aria-label\": buttonLabel,\n    ref: ref,\n    onMouseOver: onMouseOver,\n    onMouseOut: onMouseOut\n  }, dashboardBarIsExpanded ? /*#__PURE__*/React.createElement(ChevronUp, null) : /*#__PURE__*/React.createElement(ChevronDown, null))));\n};\n\nShowMoreButton.propTypes = {\n  dashboardBarIsExpanded: PropTypes.bool,\n  disabled: PropTypes.bool,\n  onClick: PropTypes.func\n};\nexport default ShowMoreButton;","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classes from './styles/DragHandle.module.css';\n\nconst DragHandle = ({\n  onHeightChanged,\n  setDragging\n}) => {\n  const [startingY, setStartingY] = useState(0);\n\n  const onStartDrag = e => {\n    setStartingY(e.clientY);\n    setDragging(true);\n    window.addEventListener('mousemove', onDrag);\n    window.addEventListener('mouseup', onEndDrag);\n  };\n\n  const onDrag = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    const currentY = e.clientY;\n\n    if (currentY !== startingY && currentY > 0) {\n      requestAnimationFrame(() => {\n        onHeightChanged(currentY);\n      });\n    }\n  };\n\n  const onEndDrag = () => {\n    setDragging(false);\n    window.removeEventListener('mousemove', onDrag);\n    window.removeEventListener('mouseup', onEndDrag);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.draghandle,\n    onMouseDown: onStartDrag,\n    \"data-test\": \"controlbar-drag-handle\"\n  });\n};\n\nDragHandle.propTypes = {\n  setDragging: PropTypes.func,\n  onHeightChanged: PropTypes.func\n};\nexport default /*#__PURE__*/React.memo(DragHandle, () => true);","const ROW_HEIGHT = 40;\nconst PADDING_TOP = 10;\nconst SHOWMORE_BUTTON_HEIGHT = 21; // 27px - 6px below bottom edge of ctrlbar\n\nexport const getRowsFromHeight = height => {\n  return Math.round((height - SHOWMORE_BUTTON_HEIGHT - PADDING_TOP) / ROW_HEIGHT);\n};","/** @module reducers/controlBar */\nimport { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\nexport const SET_CONTROLBAR_USER_ROWS = 'SET_CONTROLBAR_USER_ROWS';\nexport const DEFAULT_STATE_CONTROLBAR_ROWS = 1;\n\nconst userRows = (state = DEFAULT_STATE_CONTROLBAR_ROWS, action) => {\n  switch (action.type) {\n    case SET_CONTROLBAR_USER_ROWS:\n      return validateReducer(action.value, DEFAULT_STATE_CONTROLBAR_ROWS);\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  userRows\n});\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\n\nconst sGetControlBarRoot = state => state.controlBar; // Selector dependency level 2\n\n\nexport const sGetControlBarUserRows = state => sGetControlBarRoot(state).userRows;","import { apiGetUserDataStoreValue, apiPostUserDataStoreValue } from './userDataStore';\nimport { DEFAULT_STATE_CONTROLBAR_ROWS } from '../reducers/controlBar';\nconst KEY_CONTROLBAR_ROWS = 'controlBarRows';\nexport const apiGetControlBarRows = async () => await apiGetUserDataStoreValue(KEY_CONTROLBAR_ROWS, DEFAULT_STATE_CONTROLBAR_ROWS);\nexport const apiPostControlBarRows = async (value) => await apiPostUserDataStoreValue(KEY_CONTROLBAR_ROWS, value);","import { SET_CONTROLBAR_USER_ROWS } from '../reducers/controlBar';\nimport { apiGetControlBarRows } from '../api/controlBar'; // actions\n\nexport const acSetControlBarUserRows = rows => ({\n  type: SET_CONTROLBAR_USER_ROWS,\n  value: rows\n}); // thunks\n\nexport const tSetControlBarRows = () => async dispatch => {\n  const onSuccess = rows => {\n    dispatch(acSetControlBarUserRows(rows));\n  };\n\n  const onError = error => {\n    console.log('Error (apiGetControlBarRows): ', error);\n    return error;\n  };\n\n  try {\n    const controlBarRows = await apiGetControlBarRows();\n    return onSuccess(controlBarRows);\n  } catch (err) {\n    return onError(err);\n  }\n};","import React, { useState, useRef, useEffect, createRef } from 'react';\nimport { connect } from 'react-redux';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport Content from './Content';\nimport ShowMoreButton from './ShowMoreButton';\nimport DragHandle from './DragHandle';\nimport { getRowsFromHeight } from './getRowsFromHeight';\nimport { sGetControlBarUserRows } from '../../../reducers/controlBar';\nimport { acSetControlBarUserRows } from '../../../actions/controlBar';\nimport { apiPostControlBarRows } from '../../../api/controlBar';\nimport { useWindowDimensions } from '../../../components/WindowDimensionsProvider';\nimport classes from './styles/DashboardsBar.module.css';\nexport const MIN_ROW_COUNT = 1;\nexport const MAX_ROW_COUNT = 10;\n\nconst DashboardsBar = ({\n  userRows,\n  updateUserRows,\n  expanded,\n  onExpandedChanged\n}) => {\n  const [dragging, setDragging] = useState(false);\n  const userRowsChanged = useRef(false);\n  const ref = /*#__PURE__*/createRef();\n  const {\n    height\n  } = useWindowDimensions();\n  const rootElement = document.documentElement;\n\n  const adjustRows = mouseYPos => {\n    const newRows = Math.max(MIN_ROW_COUNT, getRowsFromHeight(mouseYPos - 52) // don't rush the transition to a bigger row count\n    );\n\n    if (newRows < MAX_ROW_COUNT) {\n      onExpandedChanged(false);\n    }\n\n    if (newRows !== userRows) {\n      updateUserRows(Math.min(newRows, MAX_ROW_COUNT));\n      userRowsChanged.current = true;\n    }\n  };\n\n  useEffect(() => {\n    rootElement.style.setProperty('--user-rows-count', userRows);\n  }, [userRows]);\n  useEffect(() => {\n    const vh = height * 0.01;\n    rootElement.style.setProperty('--vh', `${vh}px`);\n  }, [height]);\n  useEffect(() => {\n    if (!dragging && userRowsChanged.current) {\n      apiPostControlBarRows(userRows);\n      userRowsChanged.current = false;\n    }\n  }, [dragging, userRowsChanged.current]);\n\n  const scrollToTop = () => {\n    if (expanded) {\n      ref.current.scroll(0, 0);\n    }\n  };\n\n  const toggleExpanded = () => {\n    if (expanded) {\n      cancelExpanded();\n    } else {\n      scrollToTop();\n      onExpandedChanged(!expanded);\n    }\n  };\n\n  const cancelExpanded = () => {\n    scrollToTop();\n    onExpandedChanged(false);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: expanded ? classes.expanded : classes.collapsed,\n    \"data-test\": \"dashboards-bar\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: cx(classes.container)\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.content,\n    ref: ref\n  }, /*#__PURE__*/React.createElement(Content, {\n    onChipClicked: cancelExpanded,\n    onSearchClicked: toggleExpanded,\n    expanded: expanded\n  })), /*#__PURE__*/React.createElement(ShowMoreButton, {\n    onClick: toggleExpanded,\n    dashboardBarIsExpanded: expanded,\n    disabled: !expanded && userRows === MAX_ROW_COUNT\n  }), /*#__PURE__*/React.createElement(DragHandle, {\n    setDragging: setDragging,\n    onHeightChanged: adjustRows\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: cx(classes.spacer)\n  }));\n};\n\nDashboardsBar.propTypes = {\n  expanded: PropTypes.bool,\n  updateUserRows: PropTypes.func,\n  userRows: PropTypes.number,\n  onExpandedChanged: PropTypes.func\n};\nDashboardsBar.defaultProps = {\n  expanded: false,\n  onExpandedChanged: Function.prototype\n};\n\nconst mapStateToProps = state => ({\n  userRows: sGetControlBarUserRows(state)\n});\n\nconst mapDispatchToProps = {\n  updateUserRows: acSetControlBarUserRows\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(DashboardsBar);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport classes from './styles/DashboardContainer.module.css';\n\nconst DashboardContainer = ({\n  children,\n  covered\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: cx(classes.container, 'dashboard-scroll-container', covered && classes.covered)\n  }, children);\n};\n\nDashboardContainer.propTypes = {\n  children: PropTypes.node,\n  covered: PropTypes.bool\n};\nexport default DashboardContainer;","export const REGISTER_PASSIVE_VIEW = 'REGISTER_PASSIVE_VIEW';\nexport default ((state = false, action) => {\n  switch (action.type) {\n    case REGISTER_PASSIVE_VIEW:\n      {\n        return true;\n      }\n\n    default:\n      return state;\n  }\n});\nexport const sGetPassiveViewRegistered = state => state.passiveViewRegistered;","import { generateUid } from 'd2/uid';\nimport { SET_PRINT_DASHBOARD, CLEAR_PRINT_DASHBOARD, SET_PRINT_DASHBOARD_LAYOUT, ADD_PRINT_DASHBOARD_ITEM, REMOVE_PRINT_DASHBOARD_ITEM, UPDATE_PRINT_DASHBOARD_ITEM } from '../reducers/printDashboard';\nimport { NEW_ITEM_SHAPE, getGridItemProperties, getPageBreakItemShape, getPrintTitlePageItemShape } from '../modules/gridUtil';\nimport { itemTypeMap, PAGEBREAK } from '../modules/itemTypes'; // actions\n\nexport const acSetPrintDashboard = (dashboard, items) => {\n  const val = { ...dashboard,\n    dashboardItems: items\n  };\n  return {\n    type: SET_PRINT_DASHBOARD,\n    value: val\n  };\n};\nexport const acClearPrintDashboard = () => ({\n  type: CLEAR_PRINT_DASHBOARD\n});\nexport const acUpdatePrintDashboardLayout = value => ({\n  type: SET_PRINT_DASHBOARD_LAYOUT,\n  value\n});\nexport const acAddPrintDashboardItem = item => {\n  const type = item.type;\n  delete item.type;\n  const itemPropName = itemTypeMap[type].propName;\n  const id = generateUid();\n  const gridItemProperties = getGridItemProperties(id);\n  let shape;\n\n  if (type === PAGEBREAK) {\n    const yPos = item.yPos || 0;\n    shape = getPageBreakItemShape(yPos, item.isStatic);\n  } else {\n    shape = getPrintTitlePageItemShape(item.isOneItemPerPage);\n  }\n\n  return {\n    type: ADD_PRINT_DASHBOARD_ITEM,\n    value: {\n      id,\n      type,\n      position: item.position || null,\n      [itemPropName]: item.content,\n      ...NEW_ITEM_SHAPE,\n      ...gridItemProperties,\n      ...shape\n    }\n  };\n};\nexport const acRemovePrintDashboardItem = value => ({\n  type: REMOVE_PRINT_DASHBOARD_ITEM,\n  value\n});\nexport const acUpdatePrintDashboardItem = item => ({\n  type: UPDATE_PRINT_DASHBOARD_ITEM,\n  value: item\n});","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { ComponentCover } from '@dhis2/ui';\nimport cx from 'classnames';\nimport TitleBar from './TitleBar';\nimport ItemGrid from './ItemGrid';\nimport FilterBar from './FilterBar/FilterBar';\nimport DashboardsBar from './DashboardsBar/DashboardsBar';\nimport DashboardContainer from '../../components/DashboardContainer';\nimport { sGetIsEditing } from '../../reducers/editDashboard';\nimport { sGetIsPrinting } from '../../reducers/printDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { sGetPassiveViewRegistered } from '../../reducers/passiveViewRegistered';\nimport { acClearEditDashboard } from '../../actions/editDashboard';\nimport { acClearPrintDashboard } from '../../actions/printDashboard';\nimport { acSetPassiveViewRegistered } from '../../actions/passiveViewRegistered';\nimport { apiPostDataStatistics } from '../../api/dataStatistics';\nimport classes from './styles/ViewDashboard.module.css';\nexport const ViewDashboard = props => {\n  const [controlbarExpanded, setControlbarExpanded] = useState(false);\n  useEffect(() => {\n    if (props.dashboardIsEditing) {\n      props.clearEditDashboard();\n    } else if (props.dashboardIsPrinting) {\n      props.clearPrintDashboard();\n    }\n  }, [props.dashboardIsEditing, props.dashboardIsPrinting]);\n  useEffect(() => {\n    Array.from(document.getElementsByClassName('dashboard-scroll-container')).forEach(container => {\n      container.scroll(0, 0);\n    });\n  }, [props.selectedId]);\n  useEffect(() => {\n    if (!props.passiveViewRegistered) {\n      apiPostDataStatistics('PASSIVE_DASHBOARD_VIEW', props.selectedId).then(() => {\n        props.registerPassiveView();\n      });\n    }\n  }, [props.passiveViewRegistered]);\n\n  const onExpandedChanged = expanded => setControlbarExpanded(expanded);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: cx(classes.container, 'dashboard-scroll-container'),\n    \"data-test\": \"outer-scroll-container\"\n  }, /*#__PURE__*/React.createElement(DashboardsBar, {\n    expanded: controlbarExpanded,\n    onExpandedChanged: onExpandedChanged\n  }), /*#__PURE__*/React.createElement(DashboardContainer, {\n    covered: controlbarExpanded\n  }, controlbarExpanded && /*#__PURE__*/React.createElement(ComponentCover, {\n    className: classes.cover,\n    translucent: true,\n    onClick: () => setControlbarExpanded(false)\n  }), /*#__PURE__*/React.createElement(TitleBar, null), /*#__PURE__*/React.createElement(FilterBar, null), /*#__PURE__*/React.createElement(ItemGrid, null)));\n};\nViewDashboard.propTypes = {\n  clearEditDashboard: PropTypes.func,\n  clearPrintDashboard: PropTypes.func,\n  dashboardIsEditing: PropTypes.bool,\n  dashboardIsPrinting: PropTypes.bool,\n  passiveViewRegistered: PropTypes.bool,\n  registerPassiveView: PropTypes.func,\n  selectedId: PropTypes.string\n};\n\nconst mapStateToProps = state => {\n  return {\n    dashboardIsEditing: sGetIsEditing(state),\n    dashboardIsPrinting: sGetIsPrinting(state),\n    passiveViewRegistered: sGetPassiveViewRegistered(state),\n    selectedId: sGetSelectedId(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  clearEditDashboard: acClearEditDashboard,\n  clearPrintDashboard: acClearPrintDashboard,\n  registerPassiveView: acSetPassiveViewRegistered\n})(ViewDashboard);","import { REGISTER_PASSIVE_VIEW } from '../reducers/passiveViewRegistered';\nexport const acSetPassiveViewRegistered = () => ({\n  type: REGISTER_PASSIVE_VIEW\n});","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { InputField } from '@dhis2/ui';\n\nconst ItemSearchField = props => /*#__PURE__*/React.createElement(InputField, {\n  name: \"Dashboard item search\",\n  label: i18n.t('Search for items to add to this dashboard'),\n  type: \"text\",\n  onChange: props.onChange,\n  onFocus: props.onFocus,\n  value: props.value,\n  dataTest: \"item-search\"\n});\n\nItemSearchField.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n  onFocus: PropTypes.func\n};\nexport default ItemSearchField;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { MenuItem, colors } from '@dhis2/ui';\nimport classes from './styles/HeaderMenuItem.module.css';\n\nconst HeaderMenuItem = ({\n  title\n}) => /*#__PURE__*/React.createElement(MenuItem, {\n  className: classes.item,\n  dense: true,\n  key: title,\n  disabled: true,\n  label: /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: colors.grey800,\n      fontWeight: '600'\n    }\n  }, title)\n});\n\nHeaderMenuItem.propTypes = {\n  title: PropTypes.string.isRequired\n};\nexport default HeaderMenuItem;","import React from 'react';\nimport { MenuItem, colors, IconLaunch16 } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport { visTypeIcons } from '@dhis2/analytics';\nimport { getItemIcon, VISUALIZATION } from '../../../modules/itemTypes';\nimport classes from './styles/ContentMenuItem.module.css';\n\nconst LaunchLink = ({\n  url\n}) => /*#__PURE__*/React.createElement(\"a\", {\n  onClick: e => e.stopPropagation(),\n  className: classes.launchLink,\n  target: \"_blank\",\n  rel: \"noopener noreferrer\",\n  href: url\n}, /*#__PURE__*/React.createElement(IconLaunch16, {\n  color: colors.grey700\n}));\n\nLaunchLink.propTypes = {\n  url: PropTypes.string\n};\n\nconst InsertButton = () => /*#__PURE__*/React.createElement(\"button\", {\n  className: classes.buttonInsert\n}, i18n.t('Insert'));\n\nconst ContentMenuItem = ({\n  type,\n  name,\n  onInsert,\n  url,\n  visType\n}) => {\n  const ItemIcon = getItemIcon(type);\n  let renderedItemIcon;\n\n  if (type === VISUALIZATION) {\n    const VisualizationIcon = visTypeIcons[visType];\n    renderedItemIcon = /*#__PURE__*/React.createElement(VisualizationIcon, {\n      color: colors.grey600\n    });\n  } else {\n    renderedItemIcon = /*#__PURE__*/React.createElement(ItemIcon, {\n      color: colors.grey600\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(MenuItem, {\n    onClick: onInsert,\n    icon: renderedItemIcon,\n    label: /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.menuItem\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.label\n    }, /*#__PURE__*/React.createElement(\"span\", null, name), url ? /*#__PURE__*/React.createElement(LaunchLink, {\n      url: url\n    }) : null), /*#__PURE__*/React.createElement(InsertButton, null)),\n    dataTest: `menu-item-${name}`\n  });\n};\n\nContentMenuItem.propTypes = {\n  name: PropTypes.string,\n  type: PropTypes.string,\n  url: PropTypes.string,\n  visType: PropTypes.string,\n  onInsert: PropTypes.func\n};\nexport default ContentMenuItem;","import i18n from '@dhis2/d2-i18n';\nimport { VISUALIZATION, MAP, EVENT_CHART, EVENT_REPORT, REPORTS, RESOURCES, APP, MESSAGES, TEXT, SPACER } from '../../../modules/itemTypes';\nexport const singleItems = [{\n  id: 'additional',\n  header: i18n.t('Additional items'),\n  items: [{\n    type: TEXT,\n    name: i18n.t('Text box'),\n    content: ''\n  }, {\n    type: MESSAGES,\n    name: i18n.t('Messages'),\n    content: 'true'\n  }, {\n    type: SPACER,\n    name: i18n.t('Spacer'),\n    content: ''\n  }]\n}]; // categorizedItems are grouped in the item selector menu\n\nexport const categorizedItems = [VISUALIZATION, MAP, EVENT_REPORT, EVENT_CHART, REPORTS, RESOURCES, APP]; // listItemTypes are included in a single dashboard item\n\nexport const listItemTypes = [REPORTS, RESOURCES];","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { MenuItem, Divider } from '@dhis2/ui';\nimport { useConfig } from '@dhis2/app-runtime';\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\nimport { categorizedItems, listItemTypes } from './selectableItems';\nimport { tAddListItemContent } from './actions';\nimport { acAddDashboardItem } from '../../../actions/editDashboard';\nimport { getItemUrl, APP, VISUALIZATION } from '../../../modules/itemTypes';\nimport classes from './styles/CategorizedMenuGroup.module.css';\n\nconst CategorizedMenuGroup = ({\n  type,\n  title,\n  items,\n  hasMore,\n  acAddDashboardItem,\n  tAddListItemContent,\n  onChangeItemsLimit\n}) => {\n  const {\n    baseUrl\n  } = useConfig();\n  const [seeMore, setSeeMore] = useState(false);\n\n  const addItem = item => () => {\n    if (type === APP) {\n      acAddDashboardItem({\n        type,\n        content: item.key\n      });\n    } else {\n      const newItem = {\n        id: item.id,\n        name: item.displayName || item.name\n      };\n\n      if (listItemTypes.includes(type)) {\n        tAddListItemContent(type, newItem);\n      } else {\n        acAddDashboardItem({\n          type,\n          content: newItem\n        });\n      }\n    }\n  };\n\n  const toggleSeeMore = () => {\n    setSeeMore(!seeMore);\n    onChangeItemsLimit(type);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(HeaderMenuItem, {\n    title: title\n  }), items.map(item => {\n    const itemUrl = getItemUrl(type, item, baseUrl);\n    return /*#__PURE__*/React.createElement(ContentMenuItem, {\n      key: item.id || item.key,\n      type: type,\n      visType: type === VISUALIZATION ? item.type : type,\n      name: item.displayName || item.name,\n      onInsert: addItem(item),\n      url: itemUrl\n    });\n  }), hasMore ? /*#__PURE__*/React.createElement(MenuItem, {\n    dense: true,\n    key: `showmore${title}`,\n    onClick: toggleSeeMore,\n    label: /*#__PURE__*/React.createElement(\"button\", {\n      className: classes.showMoreButton\n    }, seeMore ? i18n.t('Show fewer') : i18n.t('Show more'))\n  }) : null, /*#__PURE__*/React.createElement(Divider, {\n    margin: \"8px 0px\"\n  }));\n};\n\nCategorizedMenuGroup.propTypes = {\n  items: PropTypes.array.isRequired,\n  title: PropTypes.string.isRequired,\n  type: PropTypes.oneOf(categorizedItems).isRequired,\n  onChangeItemsLimit: PropTypes.func.isRequired,\n  acAddDashboardItem: PropTypes.func,\n  hasMore: PropTypes.bool,\n  tAddListItemContent: PropTypes.func\n};\nexport default connect(null, {\n  acAddDashboardItem,\n  tAddListItemContent\n})(CategorizedMenuGroup);","import { sGetEditDashboardRoot } from '../../../reducers/editDashboard';\nimport { itemTypeMap } from '../../../modules/itemTypes';\nimport { acAddDashboardItem, acUpdateDashboardItem } from '../../../actions/editDashboard';\nexport const tAddListItemContent = (type, content) => (dispatch, getState) => {\n  const state = getState();\n  const listItemType = itemTypeMap[type].propName;\n  const dashboardItems = sGetEditDashboardRoot(state).dashboardItems;\n  const dashboardItemIndex = dashboardItems.findIndex(item => item.type === type);\n  let dashboardItem; // Reports/Resources/Users dashboard item type already present in dashboard\n\n  if (dashboardItemIndex > -1) {\n    dashboardItem = dashboardItems[dashboardItemIndex];\n    dashboardItem[listItemType].push(content);\n    dispatch(acUpdateDashboardItem(dashboardItem));\n  } else {\n    dashboardItem = {\n      type: type,\n      content: [content]\n    };\n    dispatch(acAddDashboardItem(dashboardItem));\n  }\n};","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\nimport { acAddDashboardItem } from '../../../actions/editDashboard';\n\nconst SinglesMenuGroup = ({\n  acAddDashboardItem,\n  category\n}) => {\n  const addToDashboard = ({\n    type,\n    content\n  }) => () => {\n    acAddDashboardItem({\n      type,\n      content\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(HeaderMenuItem, {\n    title: category.header\n  }), category.items.map(item => /*#__PURE__*/React.createElement(ContentMenuItem, {\n    key: item.type,\n    type: item.type,\n    name: item.name,\n    onInsert: addToDashboard(item)\n  })));\n};\n\nSinglesMenuGroup.propTypes = {\n  acAddDashboardItem: PropTypes.func,\n  category: PropTypes.object\n};\nexport default connect(null, {\n  acAddDashboardItem\n})(SinglesMenuGroup);","import { useState, useEffect } from 'react';\n\nconst useDebounce = (value, delay) => {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [value, delay]);\n  return debouncedValue;\n};\n\nexport default useDebounce;","import React, { useState, useEffect, createRef } from 'react';\nimport { Popover, FlyoutMenu } from '@dhis2/ui';\nimport { useDataEngine } from '@dhis2/app-runtime';\nimport ItemSearchField from './ItemSearchField';\nimport CategorizedMenuGroup from './CategorizedMenuGroup';\nimport SinglesMenuGroup from './SinglesMenuGroup';\nimport { singleItems, categorizedItems } from './selectableItems';\nimport { itemTypeMap, getDefaultItemCount } from '../../../modules/itemTypes';\nimport useDebounce from '../../../modules/useDebounce';\nimport { getDashboardsQQuery } from './dashboardsQQuery';\nimport classes from './styles/ItemSelector.module.css';\n\nconst ItemSelector = () => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [filter, setFilter] = useState('');\n  const [items, setItems] = useState(null);\n  const [maxOptions, setMaxOptions] = useState(new Set());\n  const dataEngine = useDataEngine();\n  const debouncedFilterText = useDebounce(filter, 350);\n  useEffect(() => {\n    const query = getDashboardsQQuery(debouncedFilterText, Array.from(maxOptions));\n    dataEngine.query({\n      items: query\n    }).then(res => setItems(res.items));\n  }, [debouncedFilterText, maxOptions]);\n\n  const closeMenu = () => {\n    setIsOpen(false);\n    setFilter('');\n    setMaxOptions(new Set());\n  };\n\n  const openMenu = () => setIsOpen(true);\n\n  const getCategorizedMenuGroups = () => {\n    return categorizedItems.filter(type => {\n      const itemType = itemTypeMap[type];\n      return items && items[itemType.endPointName];\n    }).map(type => {\n      const itemType = itemTypeMap[type];\n      const itemCount = getDefaultItemCount(type);\n      const allItems = items[itemType.endPointName];\n      const hasMore = allItems.length > itemCount;\n      const displayItems = maxOptions.has(itemType.id) ? allItems : allItems.slice(0, itemCount);\n      return /*#__PURE__*/React.createElement(CategorizedMenuGroup, {\n        key: type,\n        type: type,\n        title: itemType.pluralTitle,\n        items: displayItems,\n        onChangeItemsLimit: updateMaxOptions,\n        hasMore: hasMore\n      });\n    });\n  };\n\n  const getSinglesMenuGroups = () => singleItems.map(category => /*#__PURE__*/React.createElement(SinglesMenuGroup, {\n    key: category.id,\n    category: category\n  }));\n\n  const getMenuGroups = () => getCategorizedMenuGroups().concat(getSinglesMenuGroups());\n\n  const updateMaxOptions = type => {\n    if (type) {\n      const options = new Set(maxOptions);\n      options.has(type) ? options.delete(type) : options.add(type);\n      setMaxOptions(options);\n    } else {\n      setMaxOptions(new Set());\n    }\n  };\n\n  const updateFilter = ({\n    value\n  }) => setFilter(value);\n\n  const inputRef = /*#__PURE__*/createRef();\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n    ref: inputRef\n  }, /*#__PURE__*/React.createElement(ItemSearchField, {\n    value: filter,\n    onChange: updateFilter,\n    onFocus: openMenu\n  })), isOpen && /*#__PURE__*/React.createElement(Popover, {\n    reference: inputRef,\n    placement: \"bottom-start\",\n    onClickOutside: closeMenu,\n    arrow: false,\n    maxWidth: 700\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.popover\n  }, /*#__PURE__*/React.createElement(FlyoutMenu, {\n    className: classes.menu,\n    dataTest: \"item-menu\",\n    maxWidth: \"700px\"\n  }, getMenuGroups()))));\n};\n\nexport default ItemSelector;","export const getDashboardsQQuery = (query = '', maxItems = []) => {\n  return {\n    resource: `dashboards/q/${query}`,\n    params: {\n      count: 11,\n      max: maxItems\n    }\n  };\n};","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { InputField, TextAreaField } from '@dhis2/ui';\nimport ItemSelector from './ItemSelector/ItemSelector';\nimport { acSetDashboardTitle, acSetDashboardDescription } from '../../actions/editDashboard';\nimport { orObject } from '../../modules/util';\nimport { sGetEditDashboardRoot } from '../../reducers/editDashboard';\nimport classes from './styles/TitleBar.module.css';\n\nconst EditTitleBar = ({\n  name,\n  description,\n  onChangeTitle,\n  onChangeDescription\n}) => {\n  const updateTitle = (_, e) => {\n    onChangeTitle(e.target.value);\n  };\n\n  const updateDescription = (_, e) => {\n    onChangeDescription(e.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: classes.section\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.titleDescription\n  }, /*#__PURE__*/React.createElement(InputField, {\n    className: classes.title,\n    name: \"Dashboard title input\",\n    label: i18n.t('Dashboard title'),\n    type: \"text\",\n    onChange: updateTitle,\n    value: name,\n    placeholder: i18n.t('Untitled dashboard'),\n    dataTest: \"dashboard-title-input\"\n  }), /*#__PURE__*/React.createElement(TextAreaField, {\n    className: classes.description,\n    name: \"Dashboard description input\",\n    label: i18n.t('Dashboard description'),\n    onChange: updateDescription,\n    value: description,\n    dataTest: \"dashboard-description-input\"\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.itemSelector\n  }, /*#__PURE__*/React.createElement(ItemSelector, null)));\n};\n\nEditTitleBar.propTypes = {\n  onChangeDescription: PropTypes.func.isRequired,\n  onChangeTitle: PropTypes.func.isRequired,\n  description: PropTypes.string,\n  name: PropTypes.string\n};\nEditTitleBar.defaultProps = {\n  name: '',\n  description: ''\n};\n\nconst mapStateToProps = state => {\n  const selectedDashboard = orObject(sGetEditDashboardRoot(state));\n  return {\n    name: selectedDashboard.name,\n    description: selectedDashboard.description\n  };\n};\n\nconst mapDispatchToProps = {\n  onChangeTitle: acSetDashboardTitle,\n  onChangeDescription: acSetDashboardDescription\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(EditTitleBar);","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Responsive as ResponsiveReactGridLayout } from 'react-grid-layout';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport cx from 'classnames';\nimport { acUpdateDashboardLayout } from '../../actions/editDashboard';\nimport { Item } from '../../components/Item/Item';\nimport { GRID_ROW_HEIGHT_PX, GRID_COMPACT_TYPE, MARGIN_PX, GRID_PADDING_PX, GRID_COLUMNS, hasShape, getGridWidth } from '../../modules/gridUtil';\nimport { getBreakpoint } from '../../modules/smallScreen';\nimport { orArray } from '../../modules/util';\nimport { getGridItemDomElementClassName } from '../../modules/getGridItemDomElementClassName';\nimport NoContentMessage from '../../components/NoContentMessage';\nimport { sGetSelectedIsLoading } from '../../reducers/selected';\nimport { sGetEditDashboardRoot, sGetEditDashboardItems } from '../../reducers/editDashboard';\nimport ProgressiveLoadingContainer from '../../components/ProgressiveLoadingContainer';\nimport { EDIT } from '../../modules/dashboardModes';\nimport { useWindowDimensions } from '../../components/WindowDimensionsProvider';\nimport classes from './styles/ItemGrid.module.css';\n\nconst EditItemGrid = ({\n  isLoading,\n  dashboardItems,\n  acUpdateDashboardLayout\n}) => {\n  const [gridWidth, setGridWidth] = useState(0);\n  const {\n    width\n  } = useWindowDimensions();\n\n  const onLayoutChange = newLayout => {\n    acUpdateDashboardLayout(newLayout);\n  };\n\n  const onWidthChanged = containerWidth => setTimeout(() => setGridWidth(containerWidth), 200);\n\n  const getItemComponent = item => /*#__PURE__*/React.createElement(ProgressiveLoadingContainer, {\n    key: item.i,\n    className: cx(item.type, 'edit', getGridItemDomElementClassName(item.id)),\n    itemId: item.id\n  }, /*#__PURE__*/React.createElement(Item, {\n    item: item,\n    gridWidth: gridWidth,\n    dashboardMode: EDIT\n  }));\n\n  const getItemComponents = items => items.map(item => getItemComponent(item));\n\n  if (!isLoading && !dashboardItems.length) {\n    return /*#__PURE__*/React.createElement(NoContentMessage, {\n      text: i18n.t('There are no items on this dashboard')\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, isLoading ? /*#__PURE__*/React.createElement(Layer, {\n    translucent: true\n  }, /*#__PURE__*/React.createElement(CenteredContent, null, /*#__PURE__*/React.createElement(CircularLoader, null))) : null, /*#__PURE__*/React.createElement(ResponsiveReactGridLayout, {\n    className: classes.grid,\n    rowHeight: GRID_ROW_HEIGHT_PX,\n    width: getGridWidth(width),\n    cols: {\n      lg: GRID_COLUMNS\n    },\n    breakpoints: {\n      lg: getBreakpoint()\n    },\n    layouts: {\n      lg: dashboardItems\n    },\n    compactType: GRID_COMPACT_TYPE,\n    margin: MARGIN_PX,\n    containerPadding: {\n      lg: GRID_PADDING_PX\n    },\n    onLayoutChange: onLayoutChange,\n    onWidthChange: onWidthChanged,\n    isDraggable: true,\n    isResizable: true,\n    draggableCancel: \"input,textarea\"\n  }, getItemComponents(dashboardItems)));\n};\n\nEditItemGrid.propTypes = {\n  acUpdateDashboardLayout: PropTypes.func,\n  dashboardItems: PropTypes.array,\n  isLoading: PropTypes.bool\n}; // Container\n\nconst mapStateToProps = state => {\n  const selectedDashboard = sGetEditDashboardRoot(state);\n  const dashboardItems = orArray(sGetEditDashboardItems(state)).filter(hasShape);\n  return {\n    isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n    dashboardItems\n  };\n};\n\nconst mapDispatchToProps = {\n  acUpdateDashboardLayout\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(EditItemGrid);","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { DIMENSION_ID_PERIOD, DIMENSION_ID_ORGUNIT } from '@dhis2/analytics';\nimport i18n from '@dhis2/d2-i18n';\nimport { Button, ButtonStrip, Modal, ModalActions, ModalContent, ModalTitle, Radio, Transfer } from '@dhis2/ui';\nimport useDimensions from '../../modules/useDimensions';\nimport classes from './styles/FilterSettingsDialog.module.css';\n\nconst RadioOptions = ({\n  filtersSelectable,\n  updateFilterDimensionRestrictability\n}) => /*#__PURE__*/React.createElement(\"form\", null, /*#__PURE__*/React.createElement(\"div\", {\n  className: classes.radioButton\n}, /*#__PURE__*/React.createElement(Radio, {\n  dense: true,\n  checked: !filtersSelectable,\n  label: i18n.t('Allow filtering by all dimensions'),\n  name: \"radio-allow-filtering-on-all\",\n  onChange: payload => {\n    return updateFilterDimensionRestrictability(payload.value === 'true');\n  },\n  value: 'false'\n})), /*#__PURE__*/React.createElement(\"div\", {\n  className: classes.radioButton\n}, /*#__PURE__*/React.createElement(Radio, {\n  dense: true,\n  checked: filtersSelectable,\n  label: i18n.t('Only allow filtering by selected dimensions'),\n  name: \"radio-restrict-filtering\",\n  onChange: payload => {\n    return updateFilterDimensionRestrictability(payload.value === 'true');\n  },\n  value: 'true'\n})));\n\nRadioOptions.propTypes = {\n  filtersSelectable: PropTypes.bool,\n  updateFilterDimensionRestrictability: PropTypes.func\n};\n\nconst FilterSettingsDialog = ({\n  restrictFilters,\n  initiallySelectedItems,\n  onClose,\n  onConfirm,\n  open\n}) => {\n  const [selected, setSelected] = useState(initiallySelectedItems);\n  const [filtersSelectable, setFiltersSelectable] = useState(restrictFilters);\n  const dimensions = useDimensions(open);\n\n  const updateFilterDimensionRestrictability = val => {\n    if (val) {\n      const otherItems = selected.filter(i => i !== DIMENSION_ID_ORGUNIT && i !== DIMENSION_ID_PERIOD);\n      updateSelectedFilters([DIMENSION_ID_PERIOD, DIMENSION_ID_ORGUNIT, ...otherItems]);\n    }\n\n    setFiltersSelectable(val);\n  };\n\n  const updateSelectedFilters = sItems => {\n    // ensure that orgUnit, period appear before other items\n    const periodItem = [...new Set(sItems.filter(i => i === DIMENSION_ID_PERIOD))];\n    const orgUnitItem = [...new Set(sItems.filter(i => i === DIMENSION_ID_ORGUNIT))];\n    const otherItems = sItems.filter(i => i !== DIMENSION_ID_ORGUNIT && i !== DIMENSION_ID_PERIOD);\n    return setSelected([...periodItem, ...orgUnitItem, ...otherItems]);\n  };\n\n  const closeDialog = () => {\n    setSelected(initiallySelectedItems);\n    setFiltersSelectable(restrictFilters);\n    onClose();\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, open && /*#__PURE__*/React.createElement(Modal, {\n    large: true,\n    position: \"top\",\n    onClose: closeDialog\n  }, /*#__PURE__*/React.createElement(ModalTitle, null, i18n.t('Dashboard filter settings')), /*#__PURE__*/React.createElement(ModalContent, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.descContainer\n  }, /*#__PURE__*/React.createElement(\"span\", null, i18n.t(`Dashboards can be filtered by dimensions to change\n                                         the data shown. By default, all dimensions are available\n                                         as filters. Alternatively, only selected dimensions can\n                                         be made available on a dashboard.`))), /*#__PURE__*/React.createElement(RadioOptions, {\n    filtersSelectable: filtersSelectable,\n    updateFilterDimensionRestrictability: updateFilterDimensionRestrictability\n  }), filtersSelectable && /*#__PURE__*/React.createElement(Transfer, {\n    filterable: true,\n    height: \"400px\",\n    leftHeader: /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.transferHeader\n    }, /*#__PURE__*/React.createElement(\"span\", null, i18n.t('Available Filters'))),\n    maxSelections: Infinity,\n    onChange: payload => {\n      return updateSelectedFilters(payload.selected);\n    },\n    options: dimensions.map(d => {\n      return {\n        label: d.name,\n        value: d.id\n      };\n    }),\n    optionsWidth: \"350px\",\n    rightHeader: /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.transferHeader\n    }, /*#__PURE__*/React.createElement(\"span\", null, i18n.t('Selected Filters'))),\n    selected: selected,\n    selectedWidth: \"350px\"\n  })), /*#__PURE__*/React.createElement(ModalActions, null, /*#__PURE__*/React.createElement(ButtonStrip, {\n    end: true\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: closeDialog,\n    secondary: true,\n    type: \"button\"\n  }, i18n.t('Cancel')), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => {\n      if (!filtersSelectable) {\n        setSelected([]);\n      }\n\n      onConfirm(filtersSelectable, selected);\n    },\n    primary: true,\n    type: \"button\"\n  }, i18n.t('Confirm'))))));\n};\n\nFilterSettingsDialog.propTypes = {\n  initiallySelectedItems: PropTypes.array,\n  open: PropTypes.bool,\n  restrictFilters: PropTypes.bool,\n  onClose: PropTypes.func,\n  onConfirm: PropTypes.func\n};\nexport default FilterSettingsDialog;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Button, Modal, ModalContent, ModalActions, ButtonStrip, ModalTitle } from '@dhis2/ui';\nimport classes from './styles/ConfirmDeleteDialog.module.css';\nexport const ConfirmDeleteDialog = ({\n  dashboardName,\n  onDeleteConfirmed,\n  onContinueEditing,\n  open\n}) => {\n  const actions = [/*#__PURE__*/React.createElement(Button, {\n    key: \"cancel\",\n    secondary: true,\n    onClick: onContinueEditing,\n    dataTest: \"cancel-delete-dashboard\"\n  }, i18n.t('Cancel')), /*#__PURE__*/React.createElement(Button, {\n    key: \"delete\",\n    destructive: true,\n    onClick: onDeleteConfirmed,\n    dataTest: \"confirm-delete-dashboard\"\n  }, i18n.t('Delete'))];\n  return open && /*#__PURE__*/React.createElement(Modal, {\n    onClose: onContinueEditing,\n    small: true,\n    position: \"middle\"\n  }, /*#__PURE__*/React.createElement(ModalTitle, null, i18n.t('Delete dashboard')), /*#__PURE__*/React.createElement(ModalContent, null, /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.content\n  }, i18n.t('Deleting dashboard \"{{ dashboardName }}\" will remove it for all users. This action cannot be undone. Are you sure you want to permanently delete this dashboard?', {\n    dashboardName\n  }))), /*#__PURE__*/React.createElement(ModalActions, null, /*#__PURE__*/React.createElement(ButtonStrip, null, actions)));\n};\nConfirmDeleteDialog.propTypes = {\n  dashboardName: PropTypes.string,\n  open: PropTypes.bool,\n  onContinueEditing: PropTypes.func,\n  onDeleteConfirmed: PropTypes.func\n};\nexport default ConfirmDeleteDialog;","export const deleteDashboardMutation = {\n  type: 'delete',\n  resource: 'dashboards',\n  id: ({\n    id\n  }) => id\n};","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport TranslationDialog from '@dhis2/d2-ui-translation-dialog';\nimport { Button, ButtonStrip } from '@dhis2/ui';\nimport { useDataEngine, useAlert } from '@dhis2/app-runtime';\nimport { useD2 } from '@dhis2/app-runtime-adapter-d2';\nimport FilterSettingsDialog from './FilterSettingsDialog';\nimport ConfirmDeleteDialog from './ConfirmDeleteDialog';\nimport { tSaveDashboard, acClearEditDashboard, acSetPrintPreviewView, acClearPrintPreviewView, acSetFilterSettings } from '../../actions/editDashboard';\nimport { acClearPrintDashboard } from '../../actions/printDashboard';\nimport { tFetchDashboards } from '../../actions/dashboards';\nimport { deleteDashboardMutation } from './deleteDashboardMutation';\nimport { sGetEditDashboardRoot, sGetIsNewDashboard, sGetIsPrintPreviewView } from '../../reducers/editDashboard';\nimport { apiFetchDashboard } from '../../api/fetchDashboard';\nimport { EDIT } from '../../modules/dashboardModes';\nimport classes from './styles/ActionsBar.module.css';\nconst saveFailedMessage = i18n.t('Failed to save dashboard. You might be offline or not have access to edit this dashboard.');\nconst deleteFailedMessage = i18n.t('Failed to delete dashboard. You might be offline or not have access to edit this dashboard.');\n\nconst EditBar = props => {\n  const {\n    d2\n  } = useD2();\n  const dataEngine = useDataEngine();\n  const [translationDlgIsOpen, setTranslationDlgIsOpen] = useState(false);\n  const [filterSettingsDlgIsOpen, setFilterSettingsDlgIsOpen] = useState(false);\n  const [dashboard, setDashboard] = useState(undefined);\n  const [confirmDeleteDlgIsOpen, setConfirmDeleteDlgIsOpen] = useState(false);\n  const [redirectUrl, setRedirectUrl] = useState(undefined);\n  const saveFailureAlert = useAlert(saveFailedMessage, {\n    critical: true\n  });\n  const deleteFailureAlert = useAlert(deleteFailedMessage, {\n    critical: true\n  });\n  useEffect(() => {\n    if (props.dashboardId && !dashboard) {\n      apiFetchDashboard(dataEngine, props.dashboardId, EDIT).then(dboard => setDashboard(dboard));\n    }\n  }, [props.dashboardId, dashboard]);\n\n  const onConfirmDelete = () => {\n    setConfirmDeleteDlgIsOpen(true);\n  };\n\n  const deleteDashboardConfirmed = () => {\n    setConfirmDeleteDlgIsOpen(false);\n    dataEngine.mutate(deleteDashboardMutation, {\n      variables: {\n        id: props.dashboardId\n      }\n    }).then(props.fetchDashboards).then(() => setRedirectUrl('/')).catch(deleteFailureAlert.show);\n  };\n\n  const onSave = () => {\n    props.saveDashboard().then(newId => {\n      setRedirectUrl(`/${newId}`);\n    }).catch(() => saveFailureAlert.show());\n  };\n\n  const onPrintPreview = () => {\n    if (props.isPrintPreviewView) {\n      props.clearPrintPreview();\n      props.clearPrintDashboard();\n    } else {\n      props.showPrintPreview();\n    }\n  };\n\n  const onDiscard = () => {\n    props.onDiscardChanges();\n    const redirectUrl = props.dashboardId ? `/${props.dashboardId}` : '/';\n    setRedirectUrl(redirectUrl);\n  };\n\n  const onContinueEditing = () => {\n    setConfirmDeleteDlgIsOpen(false);\n  };\n\n  const onFilterSettingsConfirmed = (filterSettingsRestrictability, selectedFilters) => {\n    const allowedFilters = filterSettingsRestrictability ? selectedFilters : [];\n    props.setFilterSettings({\n      allowedFilters,\n      restrictFilters: filterSettingsRestrictability\n    });\n    toggleFilterSettingsDialog();\n  };\n\n  const toggleTranslationDialog = () => setTranslationDlgIsOpen(!translationDlgIsOpen);\n\n  const toggleFilterSettingsDialog = () => {\n    setFilterSettingsDlgIsOpen(!filterSettingsDlgIsOpen);\n  };\n\n  const confirmDeleteDialog = () => props.deleteAccess && props.dashboardId ? /*#__PURE__*/React.createElement(ConfirmDeleteDialog, {\n    dashboardName: props.dashboardName,\n    onDeleteConfirmed: deleteDashboardConfirmed,\n    onContinueEditing: onContinueEditing,\n    open: confirmDeleteDlgIsOpen\n  }) : null;\n\n  const translationDialog = () => dashboard && dashboard.id ? /*#__PURE__*/React.createElement(TranslationDialog, {\n    className: \"translation-dialog\",\n    d2: d2,\n    open: translationDlgIsOpen,\n    onRequestClose: toggleTranslationDialog,\n    objectToTranslate: { ...dashboard,\n      modelDefinition: {\n        name: 'dashboard'\n      }\n    },\n    fieldsToTranslate: ['name', 'description'],\n    onTranslationError: err => console.log('translation update error', err),\n    onTranslationSaved: Function.prototype,\n    insertTheme: true\n  }) : null;\n\n  const filterSettingsDialog = () => dashboard || props.newDashboard ? /*#__PURE__*/React.createElement(FilterSettingsDialog, {\n    restrictFilters: props.restrictFilters,\n    initiallySelectedItems: props.allowedFilters,\n    onClose: toggleFilterSettingsDialog,\n    onConfirm: onFilterSettingsConfirmed,\n    open: filterSettingsDlgIsOpen\n  }) : null;\n\n  const renderActionButtons = () => /*#__PURE__*/React.createElement(ButtonStrip, null, /*#__PURE__*/React.createElement(Button, {\n    primary: true,\n    onClick: onSave,\n    dataTest: \"save-dashboard-button\"\n  }, i18n.t('Save changes')), /*#__PURE__*/React.createElement(Button, {\n    onClick: onPrintPreview\n  }, props.isPrintPreviewView ? i18n.t('Exit Print preview') : i18n.t('Print preview')), /*#__PURE__*/React.createElement(Button, {\n    onClick: toggleFilterSettingsDialog\n  }, i18n.t('Filter settings')), props.dashboardId && /*#__PURE__*/React.createElement(Button, {\n    onClick: toggleTranslationDialog\n  }, i18n.t('Translate')), props.dashboardId && props.deleteAccess && /*#__PURE__*/React.createElement(Button, {\n    onClick: onConfirmDelete,\n    dataTest: \"delete-dashboard-button\"\n  }, i18n.t('Delete')));\n\n  if (redirectUrl) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: redirectUrl\n    });\n  }\n\n  const discardBtnText = props.updateAccess ? i18n.t('Exit without saving') : i18n.t('Go to dashboards');\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.editBar,\n    \"data-test\": \"edit-control-bar\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.controls\n  }, props.updateAccess ? renderActionButtons() : null, /*#__PURE__*/React.createElement(Button, {\n    secondary: true,\n    onClick: onDiscard\n  }, discardBtnText))), filterSettingsDialog(), translationDialog(), confirmDeleteDialog());\n};\n\nEditBar.propTypes = {\n  allowedFilters: PropTypes.array,\n  clearPrintDashboard: PropTypes.func,\n  clearPrintPreview: PropTypes.func,\n  dashboardId: PropTypes.string,\n  dashboardName: PropTypes.string,\n  deleteAccess: PropTypes.bool,\n  fetchDashboards: PropTypes.func,\n  isPrintPreviewView: PropTypes.bool,\n  newDashboard: PropTypes.bool,\n  restrictFilters: PropTypes.bool,\n  saveDashboard: PropTypes.func,\n  setFilterSettings: PropTypes.func,\n  showPrintPreview: PropTypes.func,\n  updateAccess: PropTypes.bool,\n  onDiscardChanges: PropTypes.func\n};\n\nconst mapStateToProps = state => {\n  const dashboard = sGetEditDashboardRoot(state);\n  let newDashboard;\n  let deleteAccess;\n  let updateAccess;\n\n  if (sGetIsNewDashboard(state)) {\n    newDashboard = true;\n    deleteAccess = true;\n    updateAccess = true;\n  } else {\n    newDashboard = false;\n    updateAccess = dashboard.access ? dashboard.access.update : false;\n    deleteAccess = dashboard.access ? dashboard.access.delete : false;\n  }\n\n  return {\n    allowedFilters: dashboard.allowedFilters,\n    dashboardId: dashboard.id,\n    dashboardName: dashboard.name,\n    deleteAccess,\n    newDashboard,\n    restrictFilters: dashboard.restrictFilters,\n    isPrintPreviewView: sGetIsPrintPreviewView(state),\n    updateAccess\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  clearPrintDashboard: () => dispatch(acClearPrintDashboard()),\n  clearPrintPreview: () => dispatch(acClearPrintPreviewView()),\n  saveDashboard: () => dispatch(tSaveDashboard()).then(id => id),\n  fetchDashboards: () => dispatch(tFetchDashboards()),\n  onDiscardChanges: () => dispatch(acClearEditDashboard()),\n  setFilterSettings: value => dispatch(acSetFilterSettings(value)),\n  showPrintPreview: () => dispatch(acSetPrintPreviewView())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditBar);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { NoticeBox, CenteredContent } from '@dhis2/ui';\nimport classes from './styles/NotSupportedNotice.module.css';\n\nconst NotSupportedNotice = ({\n  message\n}) => /*#__PURE__*/React.createElement(CenteredContent, {\n  position: \"top\"\n}, /*#__PURE__*/React.createElement(\"div\", {\n  className: classes.noticeContainer\n}, /*#__PURE__*/React.createElement(NoticeBox, {\n  title: i18n.t('Not supported'),\n  warning: true\n}, message)));\n\nNotSupportedNotice.propTypes = {\n  message: PropTypes.string\n};\nexport default NotSupportedNotice;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport classes from './styles/PrintInfo.module.css';\n\nconst PrintInfo = ({\n  isLayout\n}) => {\n  const layoutStyle = isLayout ? i18n.t('dashboard layout') : i18n.t('one item per page');\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.container\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.title\n  }, `${i18n.t('Print Preview')}: ${layoutStyle}`), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.printSuggestions\n  }, /*#__PURE__*/React.createElement(\"p\", null, `${i18n.t('For best print results')}:`), /*#__PURE__*/React.createElement(\"ul\", null, /*#__PURE__*/React.createElement(\"li\", null, i18n.t('Use Chrome or Edge web browser')), /*#__PURE__*/React.createElement(\"li\", null, i18n.t('Wait for all dashboard items to load before printing')), /*#__PURE__*/React.createElement(\"li\", null, i18n.t('Use A4 landscape paper size and default margin settings in the browser print dialog')))), /*#__PURE__*/React.createElement(\"hr\", {\n    className: classes.divider\n  }));\n};\n\nPrintInfo.propTypes = {\n  isLayout: PropTypes.bool\n};\nexport default PrintInfo;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Button, colors, IconChevronLeft24 } from '@dhis2/ui';\nimport { Link } from 'react-router-dom';\nimport classes from './styles/PrintActionsBar.module.css'; // set in PrintActionsBar.module.css\n\nexport const PRINT_ACTIONS_BAR_HEIGHT = 44;\nexport const PRINT_ACTIONS_BAR_HEIGHT_SM = 36;\n\nconst PrintActionsBar = ({\n  id\n}) => {\n  const getExitPrintButton = isSmall => /*#__PURE__*/React.createElement(Button, {\n    className: isSmall ? classes.buttonSmall : classes.buttonLarge,\n    small: isSmall\n  }, /*#__PURE__*/React.createElement(IconChevronLeft24, {\n    color: colors.grey700\n  }), i18n.t('Exit print preview'));\n\n  const getPrintButton = isSmall => /*#__PURE__*/React.createElement(Button, {\n    className: isSmall ? classes.buttonSmall : classes.buttonLarge,\n    small: isSmall,\n    onClick: window.print\n  }, i18n.t('Print'));\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.container\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.actions\n  }, /*#__PURE__*/React.createElement(Link, {\n    className: classes.link,\n    to: `/${id}`\n  }, getExitPrintButton(true), getExitPrintButton(false)), getPrintButton(true), getPrintButton(false)));\n};\n\nPrintActionsBar.propTypes = {\n  id: PropTypes.string\n};\nexport default PrintActionsBar;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport ReactGridLayout from 'react-grid-layout';\nimport i18n from '@dhis2/d2-i18n';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport NoContentMessage from '../../components/NoContentMessage';\nimport { GRID_ROW_HEIGHT_PX, GRID_COMPACT_TYPE, MARGIN_PX, GRID_COLUMNS } from '../../modules/gridUtil';\nconst PAGE_PADDING_PX = 24;\n\nconst StaticGrid = ({\n  layout,\n  children,\n  onLayoutChange,\n  className,\n  isLoading\n}) => {\n  if (!isLoading && !layout.length) {\n    return /*#__PURE__*/React.createElement(NoContentMessage, {\n      text: i18n.t('There are no items on this dashboard')\n    });\n  }\n\n  const style = window.getComputedStyle(document.documentElement);\n  const pageWidthPx = parseInt(style.getPropertyValue('--a4-landscape-width-px').replace('px', ''));\n  return /*#__PURE__*/React.createElement(React.Fragment, null, isLoading ? /*#__PURE__*/React.createElement(Layer, {\n    translucent: true\n  }, /*#__PURE__*/React.createElement(CenteredContent, null, /*#__PURE__*/React.createElement(CircularLoader, null))) : null, /*#__PURE__*/React.createElement(ReactGridLayout, {\n    margin: MARGIN_PX,\n    cols: GRID_COLUMNS,\n    rowHeight: GRID_ROW_HEIGHT_PX,\n    width: pageWidthPx - PAGE_PADDING_PX,\n    compactType: GRID_COMPACT_TYPE,\n    isDraggable: false,\n    isResizable: false,\n    draggableCancel: \"input,textarea\",\n    className: cx('layout', className),\n    layout: layout,\n    onLayoutChange: onLayoutChange\n  }, children));\n};\n\nStaticGrid.defaultProps = {\n  onLayoutChange: Function.prototype\n};\nStaticGrid.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  isLoading: PropTypes.bool,\n  layout: PropTypes.array,\n  onLayoutChange: PropTypes.func\n};\nexport default StaticGrid;","import sortBy from 'lodash/sortBy';\nimport { orArray } from '../../modules/util';\nimport { itemTypeMap } from '../../modules/itemTypes';\nexport const getTransformYPx = elStyle => {\n  var _elStyle$transform$sp;\n\n  if (!elStyle || !elStyle.transform) {\n    return null;\n  } // find valid transforms - those with y pixels\n  // the code is expecting the transform prop to\n  // look like:  translate(10px, 300px)\n\n\n  const transformY = (_elStyle$transform$sp = elStyle.transform.split(' ')[1]) === null || _elStyle$transform$sp === void 0 ? void 0 : _elStyle$transform$sp.match(/(\\d+)px/);\n\n  if (transformY) {\n    return parseInt(transformY[1]);\n  } else {\n    return null;\n  }\n};\nexport const getDomGridItemsSortedByYPos = elements => {\n  const types = Object.keys(itemTypeMap);\n  const elementsWithBoundingRect = orArray(elements).map(el => {\n    const type = Array.from(el.classList).find(className => types.indexOf(className) > -1);\n    const rect = el.getBoundingClientRect();\n    const y = getTransformYPx(el.style) || parseInt(rect.y);\n    return {\n      type,\n      classList: el.classList,\n      bottomY: y + parseInt(rect.height),\n      el\n    };\n  });\n  return sortBy(elementsWithBoundingRect, ['bottomY']);\n};\n\nconst isLeapPage = n => {\n  // pages 5,9,13,17,21,25,29... are leap pages\n  let x = 0;\n  const startPage = 1;\n\n  const getMultiple = factor => startPage + 4 * factor;\n\n  let multiple = getMultiple(0);\n  let isLeapPage = false;\n\n  while (multiple < n) {\n    multiple = getMultiple(x);\n    ++x;\n\n    if (multiple === n) {\n      isLeapPage = true;\n      break;\n    }\n  }\n\n  return isLeapPage;\n};\n\nexport const getPageBreakPositions = items => {\n  // add enough page breaks so that each item could\n  // be put on its own page. Due to the react-grid-layout\n  // unit system, we have to estimate roughly the size of each\n  // page. At regular intervals add a unit, like a leap year\n  const yPosList = [];\n  let yPos = 0;\n\n  for (let pageNum = 1; pageNum <= items.length; ++pageNum) {\n    if (pageNum === 1) {\n      yPos += 35;\n    } else if (isLeapPage(pageNum)) {\n      yPos += 40;\n    } else {\n      yPos += 39;\n    }\n\n    yPosList.push(yPos);\n  }\n\n  return yPosList;\n};","function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport sortBy from 'lodash/sortBy';\nimport cx from 'classnames';\nimport StaticGrid from './StaticGrid';\nimport { Item } from '../../components/Item/Item';\nimport { acUpdatePrintDashboardLayout } from '../../actions/printDashboard';\nimport { sGetSelectedIsLoading } from '../../reducers/selected';\nimport { sGetPrintDashboardRoot, sGetPrintDashboardItems } from '../../reducers/printDashboard';\nimport { sGetIsEditing } from '../../reducers/editDashboard';\nimport { hasShape } from '../../modules/gridUtil';\nimport { getDomGridItemsSortedByYPos, getTransformYPx } from './printUtils';\nimport { PRINT_LAYOUT } from '../../modules/dashboardModes';\nimport { PAGEBREAK } from '../../modules/itemTypes';\nexport class PrintLayoutItemGrid extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"onLayoutChange\", newLayout => {\n      this.props.updateDashboardLayout(newLayout);\n    });\n\n    _defineProperty(this, \"isFirstPageBreak\", item => {\n      if (item.type !== PAGEBREAK) {\n        return false;\n      }\n\n      const pageBreaks = this.props.dashboardItems.filter(i => i.type === PAGEBREAK);\n      const sortedPageBreaks = sortBy(pageBreaks, ['y']);\n      return item.y === sortedPageBreaks[0].y;\n    });\n\n    _defineProperty(this, \"getItemComponent\", item => {\n      // the first-page-break class is used in Edit print preview\n      const itemClassNames = cx('print', 'layout', `${item.type}`, {\n        'first-page-break': this.props.isEditing && this.isFirstPageBreak(item),\n        shortened: !!item.shortened\n      });\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: item.i,\n        className: itemClassNames\n      }, /*#__PURE__*/React.createElement(Item, {\n        item: item,\n        dashboardMode: PRINT_LAYOUT\n      }));\n    });\n\n    _defineProperty(this, \"getItemComponents\", items => items.map(item => this.getItemComponent(item)));\n  }\n\n  hideExtraPageBreaks() {\n    const sortedElements = getDomGridItemsSortedByYPos(Array.from(document.querySelectorAll('.react-grid-item')));\n    let pageBreakBottom = 0;\n    let lastItemBottom = 0;\n    let foundNonPageBreak = false;\n\n    for (let i = sortedElements.length - 1; i >= 0; --i) {\n      const item = sortedElements[i];\n\n      if (item.type === PAGEBREAK) {\n        if (!foundNonPageBreak) {\n          item.el.classList.add('removed');\n        } else {\n          pageBreakBottom = item.bottomY;\n          break;\n        }\n      } else {\n        foundNonPageBreak = true;\n        const thisItemBottom = item.bottomY;\n\n        if (thisItemBottom > lastItemBottom) {\n          lastItemBottom = thisItemBottom;\n        }\n      }\n    }\n\n    const pageHeight = 720;\n    const gridElement = document.querySelector('.react-grid-layout'); // the last page break is before the last item(s) so\n    // maxHeight is one page beyond the last page break\n\n    const maxHeight = pageBreakBottom + pageHeight;\n\n    if (gridElement) {\n      gridElement.style.height = `${maxHeight}px`;\n    }\n\n    if (this.props.isEditing) {\n      //scroll to below the title page - which is middle of the first pagebreak\n      const firstBreak = document.querySelector('.first-page-break');\n\n      if (firstBreak && firstBreak.style && firstBreak.style.transform) {\n        const yPos = getTransformYPx(firstBreak.style);\n        const scrollArea = document.querySelector('.scroll-area');\n        scrollArea && scrollArea.scroll(0, yPos + 50);\n      }\n    }\n  }\n\n  componentDidMount() {\n    this.hideExtraPageBreaks();\n  }\n\n  componentDidUpdate() {\n    this.hideExtraPageBreaks();\n  }\n\n  render() {\n    const {\n      isLoading,\n      dashboardItems\n    } = this.props;\n    return /*#__PURE__*/React.createElement(StaticGrid, {\n      isLoading: isLoading,\n      layout: dashboardItems,\n      onLayoutChange: this.onLayoutChange\n    }, this.getItemComponents(dashboardItems));\n  }\n\n}\nPrintLayoutItemGrid.propTypes = {\n  dashboardItems: PropTypes.array,\n  isEditing: PropTypes.bool,\n  isLoading: PropTypes.bool,\n  updateDashboardLayout: PropTypes.func\n};\nPrintLayoutItemGrid.defaultProps = {\n  dashboardItems: []\n};\n\nconst mapStateToProps = state => {\n  const selectedDashboard = sGetPrintDashboardRoot(state);\n  return {\n    isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n    dashboardItems: sGetPrintDashboardItems(state).filter(hasShape),\n    isEditing: sGetIsEditing(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  updateDashboardLayout: acUpdatePrintDashboardLayout\n})(PrintLayoutItemGrid);","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport PrintInfo from './PrintInfo';\nimport PrintActionsBar from './ActionsBar';\nimport PrintLayoutItemGrid from './PrintLayoutItemGrid';\nimport { acSetPrintDashboard, acAddPrintDashboardItem, acUpdatePrintDashboardItem } from '../../actions/printDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { sGetEditDashboardRoot, sGetEditDashboardItems } from '../../reducers/editDashboard';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport { PAGEBREAK, PRINT_TITLE_PAGE } from '../../modules/itemTypes';\nimport { MAX_ITEM_GRID_HEIGHT } from '../../modules/gridUtil';\nimport { getPageBreakPositions } from './printUtils';\nimport classes from './styles/PrintLayoutDashboard.module.css';\nimport './styles/print.css';\nimport './styles/print-layout.css';\n\nconst addPageBreaks = (items, addDashboardItem) => {\n  const yPosList = getPageBreakPositions(items);\n\n  for (let i = 0; i < items.length; ++i) {\n    addDashboardItem({\n      type: PAGEBREAK,\n      yPos: yPosList[i]\n    });\n  }\n};\n\nconst PrintLayoutDashboard = ({\n  dashboard,\n  items,\n  setPrintDashboard,\n  addDashboardItem,\n  updateDashboardItem,\n  fromEdit\n}) => {\n  useEffect(() => {\n    if (dashboard) {\n      setPrintDashboard(dashboard, items); // If any items are taller than one page, reduce it to one\n      // page (react-grid-layout units)\n\n      items.forEach(item => {\n        if (item.h > MAX_ITEM_GRID_HEIGHT) {\n          item.shortened = true;\n          updateDashboardItem(Object.assign({}, item, {\n            h: MAX_ITEM_GRID_HEIGHT\n          }));\n        }\n      });\n      addPageBreaks(items, addDashboardItem);\n      addDashboardItem({\n        type: PRINT_TITLE_PAGE,\n        isOneItemPerPage: false\n      });\n    }\n  }, [dashboard, items]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.container\n  }, !fromEdit && /*#__PURE__*/React.createElement(PrintActionsBar, {\n    id: dashboard.id\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: cx(classes.wrapper, 'scroll-area', fromEdit && classes.editView)\n  }, !fromEdit && /*#__PURE__*/React.createElement(PrintInfo, {\n    isLayout: true\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.pageOuter,\n    \"data-test\": \"print-layout-page\"\n  }, /*#__PURE__*/React.createElement(PrintLayoutItemGrid, null))));\n};\n\nPrintLayoutDashboard.propTypes = {\n  addDashboardItem: PropTypes.func,\n  dashboard: PropTypes.object,\n  fromEdit: PropTypes.bool,\n  items: PropTypes.array,\n  setPrintDashboard: PropTypes.func,\n  updateDashboardItem: PropTypes.func\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const id = sGetSelectedId(state);\n\n  if (ownProps.fromEdit) {\n    const dashboard = sGetEditDashboardRoot(state);\n    return {\n      dashboard,\n      id,\n      items: sGetEditDashboardItems(state)\n    };\n  }\n\n  const dashboard = id ? sGetDashboardById(state, id) : null;\n  return {\n    dashboard,\n    id,\n    items: sGetDashboardItems(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setPrintDashboard: acSetPrintDashboard,\n  addDashboardItem: acAddPrintDashboardItem,\n  updateDashboardItem: acUpdatePrintDashboardItem\n})(PrintLayoutDashboard);","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport DashboardContainer from '../../components/DashboardContainer';\nimport TitleBar from './TitleBar';\nimport ItemGrid from './ItemGrid';\nimport ActionsBar from './ActionsBar';\nimport NotSupportedNotice from './NotSupportedNotice';\nimport LayoutPrintPreview from '../print/PrintLayoutDashboard';\nimport NoContentMessage from '../../components/NoContentMessage';\nimport { acSetEditDashboard } from '../../actions/editDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport { sGetIsPrintPreviewView } from '../../reducers/editDashboard';\nimport classes from './styles/EditDashboard.module.css';\n\nconst EditDashboard = props => {\n  useEffect(() => {\n    if (props.dashboard) {\n      props.setEditDashboard(props.dashboard, props.items);\n    }\n  }, [props.dashboard]);\n\n  const renderGrid = () => {\n    if (props.isPrintPreviewView) {\n      return /*#__PURE__*/React.createElement(LayoutPrintPreview, {\n        fromEdit: true\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(DashboardContainer, null, /*#__PURE__*/React.createElement(TitleBar, null), /*#__PURE__*/React.createElement(ItemGrid, null));\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: cx(classes.container, 'dashboard-scroll-container'),\n    \"data-test\": \"outer-scroll-container\"\n  }, /*#__PURE__*/React.createElement(ActionsBar, null), props.updateAccess ? renderGrid() : /*#__PURE__*/React.createElement(NoContentMessage, {\n    text: i18n.t('No access')\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.notice\n  }, /*#__PURE__*/React.createElement(NotSupportedNotice, {\n    message: i18n.t('Editing dashboards on small screens is not supported. Resize your screen to return to edit mode.')\n  })));\n};\n\nEditDashboard.propTypes = {\n  dashboard: PropTypes.object,\n  isPrintPreviewView: PropTypes.bool,\n  items: PropTypes.array,\n  setEditDashboard: PropTypes.func,\n  updateAccess: PropTypes.bool\n};\n\nconst mapStateToProps = state => {\n  const id = sGetSelectedId(state);\n  const dashboard = id ? sGetDashboardById(state, id) : null;\n  const updateAccess = dashboard && dashboard.access ? dashboard.access.update : false;\n  return {\n    dashboard,\n    updateAccess,\n    items: sGetDashboardItems(state),\n    isPrintPreviewView: sGetIsPrintPreviewView(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setEditDashboard: acSetEditDashboard\n})(EditDashboard);","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport cx from 'classnames';\nimport DashboardContainer from '../../components/DashboardContainer';\nimport ActionsBar from './ActionsBar';\nimport TitleBar from './TitleBar';\nimport ItemGrid from './ItemGrid';\nimport LayoutPrintPreview from '../print/PrintLayoutDashboard';\nimport NotSupportedNotice from './NotSupportedNotice';\nimport { acSetEditNewDashboard } from '../../actions/editDashboard';\nimport { sGetIsPrintPreviewView } from '../../reducers/editDashboard';\nimport classes from './styles/NewDashboard.module.css';\n\nconst NewDashboard = props => {\n  useEffect(() => {\n    props.setNewDashboard();\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: cx(classes.container, 'dashboard-scroll-container')\n  }, /*#__PURE__*/React.createElement(ActionsBar, null), props.isPrintPreviewView ? /*#__PURE__*/React.createElement(LayoutPrintPreview, {\n    fromEdit: true\n  }) : /*#__PURE__*/React.createElement(DashboardContainer, null, /*#__PURE__*/React.createElement(TitleBar, null), /*#__PURE__*/React.createElement(ItemGrid, null))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.notice\n  }, /*#__PURE__*/React.createElement(NotSupportedNotice, {\n    className: classes.notSupportedNotice,\n    message: i18n.t('Creating dashboards on small screens is not supported. Resize your screen to return to create mode.')\n  })));\n};\n\nNewDashboard.propTypes = {\n  isPrintPreviewView: PropTypes.bool,\n  setNewDashboard: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  isPrintPreviewView: sGetIsPrintPreviewView(state)\n});\n\nexport default connect(mapStateToProps, {\n  setNewDashboard: acSetEditNewDashboard\n})(NewDashboard);","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport StaticGrid from './StaticGrid';\nimport { Item } from '../../components/Item/Item';\nimport { hasShape } from '../../modules/gridUtil';\nimport { PRINT } from '../../modules/dashboardModes';\nimport { sGetSelectedIsLoading } from '../../reducers/selected';\nimport { sGetPrintDashboardRoot, sGetPrintDashboardItems } from '../../reducers/printDashboard';\nimport { orArray } from '../../modules/util';\n\nconst PrintItemGrid = ({\n  isLoading,\n  dashboardItems\n}) => {\n  const getItemComponent = item => /*#__PURE__*/React.createElement(\"div\", {\n    key: item.i,\n    className: cx(item.type, 'print', 'oipp')\n  }, /*#__PURE__*/React.createElement(Item, {\n    item: item,\n    dashboardMode: PRINT\n  }));\n\n  const getItemComponents = items => items.map(item => getItemComponent(item));\n\n  return /*#__PURE__*/React.createElement(StaticGrid, {\n    isLoading: isLoading,\n    className: \"print\",\n    layout: dashboardItems\n  }, getItemComponents(dashboardItems));\n};\n\nPrintItemGrid.propTypes = {\n  dashboardItems: PropTypes.array,\n  isLoading: PropTypes.bool\n};\n\nconst mapStateToProps = state => {\n  const selectedDashboard = sGetPrintDashboardRoot(state);\n  return {\n    isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n    dashboardItems: orArray(sGetPrintDashboardItems(state)).filter(hasShape)\n  };\n};\n\nexport default connect(mapStateToProps)(PrintItemGrid);","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport sortBy from 'lodash/sortBy';\nimport PrintInfo from './PrintInfo';\nimport PrintActionsBar from './ActionsBar';\nimport PrintItemGrid from './PrintItemGrid';\nimport { acSetPrintDashboard, acAddPrintDashboardItem, acRemovePrintDashboardItem, acUpdatePrintDashboardItem } from '../../actions/printDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport { PAGEBREAK, PRINT_TITLE_PAGE, SPACER } from '../../modules/itemTypes';\nimport { MAX_ITEM_GRID_HEIGHT_OIPP, MAX_ITEM_GRID_WIDTH_OIPP } from '../../modules/gridUtil';\nimport classes from './styles/PrintDashboard.module.css';\nimport './styles/print.css';\nimport './styles/print-oipp.css';\n\nconst PrintDashboard = ({\n  dashboard,\n  items,\n  setPrintDashboard,\n  addDashboardItem,\n  updateDashboardItem,\n  removeDashboardItem\n}) => {\n  useEffect(() => {\n    if (dashboard) {\n      //sort the items by Y pos so they print in order of top to bottom\n      const sortedItems = sortBy(items, ['y', 'x']);\n      setPrintDashboard(dashboard, sortedItems); // remove spacers - don't want empty pages\n\n      let spacerCount = 0;\n      items.forEach(item => {\n        if (item.type === SPACER) {\n          spacerCount += 1;\n          removeDashboardItem(item.id);\n        }\n      }); // Resize the items to the full page size\n\n      items.forEach(item => {\n        updateDashboardItem(Object.assign({}, item, {\n          w: MAX_ITEM_GRID_WIDTH_OIPP,\n          h: MAX_ITEM_GRID_HEIGHT_OIPP\n        }));\n      }); // insert page breaks into the document flow to create the \"pages\"\n      // when previewing the print\n\n      for (let i = 0; i < (items.length - spacerCount) * 2; i += 2) {\n        addDashboardItem({\n          type: PAGEBREAK,\n          position: i,\n          isStatic: false\n        });\n      }\n\n      addDashboardItem({\n        type: PRINT_TITLE_PAGE,\n        isOneItemPerPage: true\n      });\n    }\n  }, [dashboard, items]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.container\n  }, /*#__PURE__*/React.createElement(PrintActionsBar, {\n    id: dashboard.id\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.wrapper\n  }, /*#__PURE__*/React.createElement(PrintInfo, {\n    isLayout: false\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.pageOuter,\n    \"data-test\": \"print-oipp-page\"\n  }, /*#__PURE__*/React.createElement(PrintItemGrid, null))));\n};\n\nPrintDashboard.propTypes = {\n  addDashboardItem: PropTypes.func,\n  dashboard: PropTypes.object,\n  items: PropTypes.array,\n  removeDashboardItem: PropTypes.func,\n  setPrintDashboard: PropTypes.func,\n  updateDashboardItem: PropTypes.func\n};\n\nconst mapStateToProps = state => {\n  const id = sGetSelectedId(state);\n  const dashboard = id ? sGetDashboardById(state, id) : null;\n  return {\n    dashboard,\n    id,\n    items: sGetDashboardItems(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setPrintDashboard: acSetPrintDashboard,\n  addDashboardItem: acAddPrintDashboardItem,\n  removeDashboardItem: acRemovePrintDashboardItem,\n  updateDashboardItem: acUpdatePrintDashboardItem\n})(PrintDashboard);","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport isEmpty from 'lodash/isEmpty';\nimport i18n from '@dhis2/d2-i18n';\nimport { Layer, CenteredContent, CircularLoader, CssVariables, AlertStack, AlertBar } from '@dhis2/ui';\nimport { Redirect } from 'react-router-dom';\nimport { useD2 } from '@dhis2/app-runtime-adapter-d2';\nimport NoContentMessage from './NoContentMessage';\nimport { ViewDashboard, DashboardsBar } from '../pages/view/';\nimport { EditDashboard, NewDashboard } from '../pages/edit/';\nimport { PrintDashboard, PrintLayoutDashboard } from '../pages/print/';\nimport { acClearEditDashboard } from '../actions/editDashboard';\nimport { tSetSelectedDashboardById, acSetSelectedIsLoading } from '../actions/selected';\nimport { sGetDashboardById, sDashboardsIsFetching, sGetAllDashboards } from '../reducers/dashboards';\nimport { sGetSelectedId, NON_EXISTING_DASHBOARD_ID } from '../reducers/selected';\nimport { EDIT, NEW, VIEW, PRINT, PRINT_LAYOUT, isPrintMode, isEditMode } from '../modules/dashboardModes';\nimport { useWindowDimensions } from './WindowDimensionsProvider';\nimport { isSmallScreen } from '../modules/smallScreen';\n\nconst setHeaderbarVisibility = mode => {\n  const header = document.getElementsByTagName('header')[0];\n\n  if (isPrintMode(mode)) {\n    header.classList.add('hidden');\n  } else {\n    header.classList.remove('hidden');\n  }\n};\n\nconst dashboardMap = {\n  [VIEW]: /*#__PURE__*/React.createElement(ViewDashboard, null),\n  [EDIT]: /*#__PURE__*/React.createElement(EditDashboard, null),\n  [NEW]: /*#__PURE__*/React.createElement(NewDashboard, null),\n  [PRINT]: /*#__PURE__*/React.createElement(PrintDashboard, null),\n  [PRINT_LAYOUT]: /*#__PURE__*/React.createElement(PrintLayoutDashboard, null)\n};\n\nconst Dashboard = ({\n  id,\n  name,\n  mode,\n  dashboardsLoaded,\n  dashboardsIsEmpty,\n  routeId,\n  selectDashboard,\n  clearEditDashboard,\n  setIsLoading\n}) => {\n  const {\n    width\n  } = useWindowDimensions();\n  const [redirectUrl, setRedirectUrl] = useState(null);\n  const [loadingMessage, setLoadingMessage] = useState(null);\n  const {\n    d2\n  } = useD2();\n  const username = d2.currentUser.username;\n  useEffect(() => {\n    setHeaderbarVisibility(mode);\n  }, [mode]);\n  useEffect(() => {\n    if (isSmallScreen(width) && isEditMode(mode)) {\n      const redirectUrl = routeId ? `/${routeId}` : '/';\n      setRedirectUrl(redirectUrl);\n    } else {\n      setRedirectUrl(null);\n    }\n  }, [mode]);\n  useEffect(() => {\n    if (!isEditMode(mode)) {\n      clearEditDashboard();\n    }\n  }, [mode]);\n  useEffect(() => {\n    const prepareDashboard = async () => {\n      setIsLoading(true);\n      const alertTimeout = setTimeout(() => {\n        if (name) {\n          setLoadingMessage(i18n.t('Loading dashboard – {{name}}', {\n            name\n          }));\n        } else {\n          setLoadingMessage(i18n.t('Loading dashboard'));\n        }\n      }, 500);\n      await selectDashboard(routeId, mode, username);\n      setIsLoading(false);\n      clearTimeout(alertTimeout);\n      setLoadingMessage(null);\n    };\n\n    if (dashboardsLoaded && !dashboardsIsEmpty && mode !== NEW) {\n      prepareDashboard();\n    }\n  }, [dashboardsLoaded, dashboardsIsEmpty, routeId, mode]);\n\n  const getContent = () => {\n    if (!dashboardsLoaded) {\n      return /*#__PURE__*/React.createElement(Layer, {\n        translucent: true\n      }, /*#__PURE__*/React.createElement(CenteredContent, null, /*#__PURE__*/React.createElement(CircularLoader, null)));\n    }\n\n    if (redirectUrl) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: redirectUrl\n      });\n    }\n\n    if (mode === NEW) {\n      return dashboardMap[mode];\n    }\n\n    if (dashboardsIsEmpty) {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DashboardsBar, null), /*#__PURE__*/React.createElement(NoContentMessage, {\n        text: i18n.t('No dashboards found. Use the + button to create a new dashboard.')\n      }));\n    }\n\n    if (id === NON_EXISTING_DASHBOARD_ID) {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DashboardsBar, null), /*#__PURE__*/React.createElement(NoContentMessage, {\n        text: i18n.t('Requested dashboard not found')\n      }));\n    }\n\n    if (id === null) {\n      return /*#__PURE__*/React.createElement(Layer, {\n        translucent: true\n      }, /*#__PURE__*/React.createElement(CenteredContent, null, /*#__PURE__*/React.createElement(CircularLoader, null)));\n    }\n\n    return dashboardMap[mode];\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CssVariables, {\n    colors: true,\n    spacers: true\n  }), getContent(), /*#__PURE__*/React.createElement(AlertStack, null, loadingMessage && /*#__PURE__*/React.createElement(AlertBar, {\n    onHidden: () => setLoadingMessage(null),\n    permanent: true\n  }, loadingMessage)));\n};\n\nDashboard.propTypes = {\n  clearEditDashboard: PropTypes.func,\n  dashboardsIsEmpty: PropTypes.bool,\n  dashboardsLoaded: PropTypes.bool,\n  id: PropTypes.string,\n  mode: PropTypes.string,\n  name: PropTypes.string,\n  routeId: PropTypes.string,\n  selectDashboard: PropTypes.func,\n  setIsLoading: PropTypes.func\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  var _ownProps$match, _ownProps$match$param, _sGetDashboardById;\n\n  const dashboards = sGetAllDashboards(state); // match is provided by the react-router-dom\n\n  const routeId = ((_ownProps$match = ownProps.match) === null || _ownProps$match === void 0 ? void 0 : (_ownProps$match$param = _ownProps$match.params) === null || _ownProps$match$param === void 0 ? void 0 : _ownProps$match$param.dashboardId) || null;\n  return {\n    dashboardsIsEmpty: isEmpty(dashboards),\n    dashboardsLoaded: !sDashboardsIsFetching(state),\n    id: sGetSelectedId(state),\n    name: ((_sGetDashboardById = sGetDashboardById(state, routeId)) === null || _sGetDashboardById === void 0 ? void 0 : _sGetDashboardById.displayName) || null,\n    routeId\n  };\n};\n\nexport default connect(mapStateToProps, {\n  selectDashboard: tSetSelectedDashboardById,\n  clearEditDashboard: acClearEditDashboard,\n  setIsLoading: acSetSelectedIsLoading\n})(Dashboard);","export const getPreferredDashboardId = username => localStorage.getItem(`dhis2.dashboard.current.${username}`) || undefined;\nexport const storePreferredDashboardId = (username, dashboardId) => {\n  localStorage.setItem(`dhis2.dashboard.current.${username}`, dashboardId);\n};","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useEffect } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Dashboard from './Dashboard';\nimport { tFetchDashboards } from '../actions/dashboards';\nimport { tSetControlBarRows } from '../actions/controlBar';\nimport { tSetShowDescription } from '../actions/selected';\nimport { EDIT, VIEW, NEW, PRINT, PRINT_LAYOUT } from '../modules/dashboardModes';\nimport './styles/App.css';\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\nimport './styles/ItemGrid.css';\n\nconst App = props => {\n  useEffect(() => {\n    props.fetchDashboards();\n    props.setControlBarRows();\n    props.setShowDescription(); // store the headerbar height for controlbar height calculations\n\n    const headerbarHeight = document.querySelector('header').getBoundingClientRect().height;\n    document.documentElement.style.setProperty('--headerbar-height', `${headerbarHeight}px`);\n  }, []);\n  return /*#__PURE__*/React.createElement(Router, null, /*#__PURE__*/React.createElement(Switch, null, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    render: props => /*#__PURE__*/React.createElement(Dashboard, _extends({}, props, {\n      mode: VIEW\n    }))\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/new\",\n    render: props => /*#__PURE__*/React.createElement(Dashboard, _extends({}, props, {\n      mode: NEW\n    }))\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/:dashboardId\",\n    render: props => /*#__PURE__*/React.createElement(Dashboard, _extends({}, props, {\n      mode: VIEW\n    }))\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/:dashboardId/edit\",\n    render: props => /*#__PURE__*/React.createElement(Dashboard, _extends({}, props, {\n      mode: EDIT\n    }))\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/:dashboardId/printoipp\",\n    render: props => /*#__PURE__*/React.createElement(Dashboard, _extends({}, props, {\n      mode: PRINT\n    }))\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/:dashboardId/printlayout\",\n    render: props => /*#__PURE__*/React.createElement(Dashboard, _extends({}, props, {\n      mode: PRINT_LAYOUT\n    }))\n  })));\n};\n\nApp.propTypes = {\n  fetchDashboards: PropTypes.func,\n  setControlBarRows: PropTypes.func,\n  setShowDescription: PropTypes.func\n};\nconst mapDispatchToProps = {\n  fetchDashboards: tFetchDashboards,\n  setControlBarRows: tSetControlBarRows,\n  setShowDescription: tSetShowDescription\n};\nexport default connect(null, mapDispatchToProps)(App);","import { combineReducers } from 'redux';\nimport dashboards from './dashboards';\nimport selected from './selected';\nimport dashboardsFilter from './dashboardsFilter';\nimport controlBar from './controlBar';\nimport visualizations from './visualizations';\nimport editDashboard from './editDashboard';\nimport printDashboard from './printDashboard';\nimport messages from './messages';\nimport itemFilters from './itemFilters';\nimport dimensions from './dimensions';\nimport activeModalDimension from './activeModalDimension';\nimport passiveViewRegistered from './passiveViewRegistered';\nexport default combineReducers({\n  dashboards,\n  selected,\n  dashboardsFilter,\n  controlBar,\n  visualizations,\n  messages,\n  editDashboard,\n  printDashboard,\n  itemFilters,\n  dimensions,\n  activeModalDimension,\n  passiveViewRegistered\n});","import { createStore, applyMiddleware, compose } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport reducer from './reducers';\n\nconst configureStore = dataEngine => {\n  const middleware = [thunk.withExtraArgument(dataEngine)]; // Enable Redux devtools if extension is installed instead of redux-logger\n\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n  if (!window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ && process.env.NODE_ENV !== 'production') {\n    middleware.push(createLogger());\n  }\n\n  return createStore(reducer, composeEnhancers(applyMiddleware(...middleware)));\n};\n\nexport default configureStore;","//------------------------------------------------------------------------------\n// <auto-generated>\n// This code was generated by d2-i18n-generate.\n//\n// Changes to this file may cause incorrect behavior and will be lost if\n// the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\nimport i18n from '@dhis2/d2-i18n';\nimport arTranslations from './ar/translations.json';\nimport ar_IQTranslations from './ar_IQ/translations.json';\nimport ckbTranslations from './ckb/translations.json';\nimport csTranslations from './cs/translations.json';\nimport daTranslations from './da/translations.json';\nimport enTranslations from './en/translations.json';\nimport esTranslations from './es/translations.json';\nimport frTranslations from './fr/translations.json';\nimport idTranslations from './id/translations.json';\nimport kmTranslations from './km/translations.json';\nimport loTranslations from './lo/translations.json';\nimport myTranslations from './my/translations.json';\nimport nbTranslations from './nb/translations.json';\nimport prsTranslations from './prs/translations.json';\nimport psTranslations from './ps/translations.json';\nimport ptTranslations from './pt/translations.json';\nimport pt_BRTranslations from './pt_BR/translations.json';\nimport ruTranslations from './ru/translations.json';\nimport svTranslations from './sv/translations.json';\nimport tetTranslations from './tet/translations.json';\nimport tgTranslations from './tg/translations.json';\nimport ukTranslations from './uk/translations.json';\nimport urTranslations from './ur/translations.json';\nimport uzTranslations from './uz/translations.json';\nimport uz_CyrlTranslations from './uz_Cyrl/translations.json';\nimport uz_LatnTranslations from './uz_Latn/translations.json';\nimport viTranslations from './vi/translations.json';\nimport zhTranslations from './zh/translations.json';\nimport zh_CNTranslations from './zh_CN/translations.json';\nconst namespace = 'default';\ni18n.addResources('ar', namespace, arTranslations);\ni18n.addResources('ar_IQ', namespace, ar_IQTranslations);\ni18n.addResources('ckb', namespace, ckbTranslations);\ni18n.addResources('cs', namespace, csTranslations);\ni18n.addResources('da', namespace, daTranslations);\ni18n.addResources('en', namespace, enTranslations);\ni18n.addResources('es', namespace, esTranslations);\ni18n.addResources('fr', namespace, frTranslations);\ni18n.addResources('id', namespace, idTranslations);\ni18n.addResources('km', namespace, kmTranslations);\ni18n.addResources('lo', namespace, loTranslations);\ni18n.addResources('my', namespace, myTranslations);\ni18n.addResources('nb', namespace, nbTranslations);\ni18n.addResources('prs', namespace, prsTranslations);\ni18n.addResources('ps', namespace, psTranslations);\ni18n.addResources('pt', namespace, ptTranslations);\ni18n.addResources('pt_BR', namespace, pt_BRTranslations);\ni18n.addResources('ru', namespace, ruTranslations);\ni18n.addResources('sv', namespace, svTranslations);\ni18n.addResources('tet', namespace, tetTranslations);\ni18n.addResources('tg', namespace, tgTranslations);\ni18n.addResources('uk', namespace, ukTranslations);\ni18n.addResources('ur', namespace, urTranslations);\ni18n.addResources('uz', namespace, uzTranslations);\ni18n.addResources('uz_Cyrl', namespace, uz_CyrlTranslations);\ni18n.addResources('uz_Latn', namespace, uz_LatnTranslations);\ni18n.addResources('vi', namespace, viTranslations);\ni18n.addResources('zh', namespace, zhTranslations);\ni18n.addResources('zh_CN', namespace, zh_CNTranslations);\nexport default i18n;","import React from 'react';\nimport { Provider as ReduxProvider } from 'react-redux';\nimport { D2Shim } from '@dhis2/app-runtime-adapter-d2';\nimport { useDataEngine } from '@dhis2/app-runtime';\nimport WindowDimensionsProvider from './components/WindowDimensionsProvider';\nimport SystemSettingsProvider from './components/SystemSettingsProvider';\nimport UserSettingsProvider from './components/UserSettingsProvider';\nimport App from './components/App';\nimport configureStore from './configureStore';\nimport './locales';\nconst d2Config = {\n  schemas: ['chart', 'map', 'report', 'reportTable', 'eventChart', 'eventReport', 'dashboard', 'organisationUnit', 'userGroup']\n}; // TODO: ER and EV plugins require the auth header in development mode.\n// Remove this when these plugins are rewritten\n\nconst authorization = process.env.REACT_APP_DHIS2_AUTHORIZATION || null;\n\nif (authorization) {\n  d2Config.headers = {\n    Authorization: authorization\n  };\n}\n\nconst AppWrapper = () => {\n  const dataEngine = useDataEngine();\n  return /*#__PURE__*/React.createElement(ReduxProvider, {\n    store: configureStore(dataEngine)\n  }, /*#__PURE__*/React.createElement(D2Shim, {\n    d2Config: d2Config,\n    i18nRoot: \"./i18n\"\n  }, ({\n    d2\n  }) => {\n    if (!d2) {\n      // TODO: Handle errors in d2 initialization\n      return null;\n    }\n\n    return /*#__PURE__*/React.createElement(SystemSettingsProvider, null, /*#__PURE__*/React.createElement(UserSettingsProvider, null, /*#__PURE__*/React.createElement(WindowDimensionsProvider, null, /*#__PURE__*/React.createElement(App, null))));\n  }));\n};\n\nexport default AppWrapper;","import i18n from '@dhis2/d2-i18n';\nimport { IconApps24, IconEmptyFrame24, IconFileDocument24, IconLink24, IconMail24, IconQuestion24, IconTable24, IconTextBox24, IconUser24, IconVisualizationColumn24, IconWorld24 } from '@dhis2/ui'; // Item types\n\nexport const VISUALIZATION = 'VISUALIZATION';\nexport const REPORT_TABLE = 'REPORT_TABLE';\nexport const CHART = 'CHART';\nexport const MAP = 'MAP';\nexport const EVENT_REPORT = 'EVENT_REPORT';\nexport const EVENT_CHART = 'EVENT_CHART';\nexport const APP = 'APP';\nexport const REPORTS = 'REPORTS';\nexport const RESOURCES = 'RESOURCES';\nexport const USERS = 'USERS';\nexport const MESSAGES = 'MESSAGES';\nexport const TEXT = 'TEXT';\nexport const SPACER = 'SPACER';\nexport const PAGEBREAK = 'PAGEBREAK';\nexport const PRINT_TITLE_PAGE = 'PRINT_TITLE_PAGE';\nconst DOMAIN_TYPE_AGGREGATE = 'AGGREGATE';\nconst DOMAIN_TYPE_TRACKER = 'TRACKER'; // Dashboard helpers\n\nexport const isVisualizationType = item => !!itemTypeMap[item.type].isVisualizationType;\nexport const hasMapView = itemType => itemTypeMap[itemType].domainType === DOMAIN_TYPE_AGGREGATE;\nexport const isTrackerDomainType = itemType => itemTypeMap[itemType].domainType === DOMAIN_TYPE_TRACKER;\nexport const getDefaultItemCount = itemType => itemTypeMap[itemType].defaultItemCount || 5;\nexport const getAppName = itemType => itemTypeMap[itemType].appName || ''; // Item type map\n\nexport const itemTypeMap = {\n  [VISUALIZATION]: {\n    id: VISUALIZATION,\n    endPointName: 'visualizations',\n    propName: 'visualization',\n    pluralTitle: i18n.t('Visualizations'),\n    appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n    appName: 'Data Visualizer',\n    defaultItemCount: 10\n  },\n  [REPORT_TABLE]: {\n    id: REPORT_TABLE,\n    endPointName: 'visualizations',\n    dataStatisticsName: 'REPORT_TABLE_VIEW',\n    propName: 'visualization',\n    pluralTitle: i18n.t('Pivot tables'),\n    domainType: DOMAIN_TYPE_AGGREGATE,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n    appName: 'Data Visualizer'\n  },\n  [CHART]: {\n    id: CHART,\n    endPointName: 'visualizations',\n    propName: 'visualization',\n    dataStatisticsName: 'CHART_VIEW',\n    pluralTitle: i18n.t('Charts'),\n    domainType: DOMAIN_TYPE_AGGREGATE,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n    appName: 'Data Visualizer'\n  },\n  [MAP]: {\n    id: MAP,\n    endPointName: 'maps',\n    dataStatisticsName: 'MAP_VIEW',\n    propName: 'map',\n    pluralTitle: i18n.t('Maps'),\n    domainType: DOMAIN_TYPE_AGGREGATE,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-maps/?id=${id}`,\n    appName: 'Maps'\n  },\n  [EVENT_REPORT]: {\n    id: EVENT_REPORT,\n    endPointName: 'eventReports',\n    propName: 'eventReport',\n    pluralTitle: i18n.t('Event reports'),\n    domainType: DOMAIN_TYPE_TRACKER,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-event-reports/?id=${id}`,\n    appName: 'Event Reports'\n  },\n  [EVENT_CHART]: {\n    id: EVENT_CHART,\n    endPointName: 'eventCharts',\n    propName: 'eventChart',\n    pluralTitle: i18n.t('Event charts'),\n    domainType: DOMAIN_TYPE_TRACKER,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-event-visualizer/?id=${id}`,\n    appName: 'Event Visualizer'\n  },\n  [APP]: {\n    endPointName: 'apps',\n    propName: 'appKey',\n    pluralTitle: i18n.t('Apps')\n  },\n  [REPORTS]: {\n    id: REPORTS,\n    endPointName: 'reports',\n    propName: 'reports',\n    pluralTitle: i18n.t('Reports'),\n    appUrl: (id, type) => {\n      switch (type) {\n        case 'HTML':\n          return `dhis-web-reports/#/standard-report/view/${id}`;\n\n        case 'JASPER_REPORT_TABLE':\n        case 'JASPER_JDBC':\n        default:\n          return `api/reports/${id}/data.pdf?t=${new Date().getTime()}`;\n      }\n    }\n  },\n  [RESOURCES]: {\n    id: RESOURCES,\n    endPointName: 'resources',\n    propName: 'resources',\n    pluralTitle: i18n.t('Resources'),\n    appUrl: id => `api/documents/${id}/data`\n  },\n  [USERS]: {\n    id: USERS,\n    endPointName: 'users',\n    propName: 'users',\n    pluralTitle: i18n.t('Users'),\n    appUrl: id => `dhis-web-dashboard-integration/profile.action?id=${id}`\n  },\n  [TEXT]: {\n    id: TEXT,\n    propName: 'text'\n  },\n  [MESSAGES]: {\n    propName: 'messages'\n  },\n  [SPACER]: {\n    propName: 'text'\n  },\n  [PAGEBREAK]: {\n    propName: 'text'\n  },\n  [PRINT_TITLE_PAGE]: {\n    propName: 'text'\n  }\n};\nexport const getEndPointName = type => itemTypeMap[type].endPointName;\nexport const getDataStatisticsName = type => itemTypeMap[type].dataStatisticsName || null;\nexport const getItemUrl = (type, item, baseUrl) => {\n  let url;\n\n  if (type === APP) {\n    url = item.launchUrl;\n  }\n\n  if (itemTypeMap[type] && itemTypeMap[type].appUrl) {\n    url = `${baseUrl}/${itemTypeMap[type].appUrl(item.id, item.type)}`;\n  }\n\n  return url;\n};\nexport const getItemIcon = type => {\n  switch (type) {\n    case REPORT_TABLE:\n    case EVENT_REPORT:\n      return IconTable24;\n\n    case REPORTS:\n      return IconFileDocument24;\n\n    case CHART:\n    case EVENT_CHART:\n      return IconVisualizationColumn24;\n\n    case MAP:\n      return IconWorld24;\n\n    case APP:\n      return IconApps24;\n\n    case RESOURCES:\n      return IconLink24;\n\n    case USERS:\n      return IconUser24;\n\n    case TEXT:\n      return IconTextBox24;\n\n    case MESSAGES:\n      return IconMail24;\n\n    case SPACER:\n      return IconEmptyFrame24;\n\n    default:\n      return IconQuestion24;\n  }\n};","import isObject from 'lodash/isObject';\nimport { itemTypeMap } from './itemTypes';\nexport const getVisualizationFromItem = item => {\n  var _itemTypeMap$item$typ;\n\n  if (!isObject(item)) {\n    return null;\n  }\n\n  const propName = (_itemTypeMap$item$typ = itemTypeMap[item.type]) === null || _itemTypeMap$item$typ === void 0 ? void 0 : _itemTypeMap$item$typ.propName;\n  return item[propName] || item.reportTable || item.chart || item.map || item.eventReport || item.eventChart || {};\n};\nexport const getVisualizationId = item => getVisualizationFromItem(item).id;\nexport const getVisualizationName = item => getVisualizationFromItem(item).name;","import { REPORT_TABLE, CHART, MAP, EVENT_REPORT, EVENT_CHART, itemTypeMap } from '../../../../modules/itemTypes';\nimport { getVisualizationId } from '../../../../modules/item';\nimport getVisualizationContainerDomId from '../getVisualizationContainerDomId';\nimport { loadExternalScript } from './loadExternalScript'; //external plugins\n\nconst itemTypeToGlobalVariable = {\n  [MAP]: 'mapPlugin',\n  [EVENT_REPORT]: 'eventReportPlugin',\n  [EVENT_CHART]: 'eventChartPlugin'\n};\nconst itemTypeToScriptPath = {\n  [MAP]: '/dhis-web-maps/map.js',\n  [EVENT_REPORT]: '/dhis-web-event-reports/eventreport.js',\n  [EVENT_CHART]: '/dhis-web-event-visualizer/eventchart.js'\n};\n\nconst hasIntegratedPlugin = type => [CHART, REPORT_TABLE].includes(type);\n\nconst getPlugin = async type => {\n  if (hasIntegratedPlugin(type)) {\n    return true;\n  }\n\n  const pluginName = itemTypeToGlobalVariable[type];\n  return await global[pluginName];\n};\n\nconst fetchPlugin = async (type, baseUrl) => {\n  const globalName = itemTypeToGlobalVariable[type];\n\n  if (global[globalName]) {\n    return global[globalName]; // Will be a promise if fetch is in progress\n  }\n\n  const scripts = [];\n\n  if (type === EVENT_REPORT || type === EVENT_CHART) {\n    if (process.env.NODE_ENV === 'production') {\n      scripts.push('./vendor/babel-polyfill-6.26.0.min.js');\n      scripts.push('./vendor/jquery-3.3.1.min.js');\n      scripts.push('./vendor/jquery-migrate-3.0.1.min.js');\n    } else {\n      scripts.push('./vendor/babel-polyfill-6.26.0.js');\n      scripts.push('./vendor/jquery-3.3.1.js');\n      scripts.push('./vendor/jquery-migrate-3.0.1.js');\n    }\n  }\n\n  scripts.push(baseUrl + itemTypeToScriptPath[type]);\n  const scriptsPromise = Promise.all(scripts.map(loadExternalScript)).then(() => global[globalName] // At this point, has been replaced with the real thing\n  );\n  global[globalName] = scriptsPromise;\n  return await scriptsPromise;\n};\n\nexport const pluginIsAvailable = type => hasIntegratedPlugin(type) || itemTypeToGlobalVariable[type];\n\nconst loadPlugin = async (type, config, credentials) => {\n  if (!pluginIsAvailable(type)) {\n    return;\n  }\n\n  const plugin = await fetchPlugin(type, credentials.baseUrl);\n\n  if (!(plugin && plugin.load)) {\n    return;\n  }\n\n  plugin.url = credentials.baseUrl;\n  plugin.loadingIndicator = true;\n  plugin.dashboard = true;\n\n  if (credentials.auth) {\n    plugin.auth = credentials.auth;\n  }\n\n  plugin.load(config);\n};\n\nexport const getLink = (item, baseUrl) => {\n  const appUrl = itemTypeMap[item.type].appUrl(getVisualizationId(item));\n  return `${baseUrl}/${appUrl}`;\n};\nexport const load = async (item, visualization, {\n  credentials,\n  activeType,\n  options = {}\n}) => {\n  const config = { ...visualization,\n    ...options,\n    el: getVisualizationContainerDomId(item.id)\n  };\n  const type = activeType || item.type;\n  await loadPlugin(type, config, credentials);\n};\nexport const resize = async (id, type, isFullscreen = false) => {\n  const plugin = await getPlugin(type);\n\n  if (plugin !== null && plugin !== void 0 && plugin.resize) {\n    plugin.resize(getVisualizationContainerDomId(id), isFullscreen);\n  }\n};\nexport const unmount = async (item, activeType) => {\n  const plugin = await getPlugin(activeType);\n\n  if (plugin && plugin.unmount) {\n    plugin.unmount(getVisualizationContainerDomId(item.id));\n  }\n};","const getVisualizationContainerDomId = id => `item-${id}`;\n\nexport default getVisualizationContainerDomId;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemHeaderWrap\":\"ItemHeader_itemHeaderWrap__JcBP7\",\"itemTitle\":\"ItemHeader_itemTitle__34rHa\",\"itemActionsWrap\":\"ItemHeader_itemActionsWrap__Gx3D9\"};"],"sourceRoot":""}
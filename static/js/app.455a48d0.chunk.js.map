{"version":3,"sources":["D2App/components/ControlBar/ViewControlBar/styles/Content.module.css","D2App/components/ControlBar/ViewControlBar/styles/ShowMoreButton.module.css","D2App/components/ControlBar/ViewControlBar/styles/DragHandle.module.css","D2App/components/ControlBar/ViewControlBar/styles/DashboardsBar.module.css","D2App/components/Dashboard/styles/DashboardContainer.module.css","D2App/components/ItemFilter/styles/FilterSelector.module.css","D2App/components/TitleBar/styles/ViewTitleBar.module.css","D2App/components/Item/VisualizationItem/Visualization/styles/NoVisualizationMessage.module.css","D2App/components/Item/VisualizationItem/Visualization/styles/LoadingMask.module.css","D2App/components/Item/VisualizationItem/styles/FatalErrorBoundary.module.css","D2App/components/Item/ItemHeader/styles/DeleteItemButton.module.css","D2App/components/Item/ItemHeader/styles/PrintItemInfo.module.css","D2App/components/Item/VisualizationItem/styles/ItemFooter.module.css","D2App/components/Item/ListItem/Item.module.css","D2App/components/Item/PrintTitlePageItem/styles/Item.module.css","D2App/components/FilterBar/styles/FilterBadge.module.css","D2App/components/FilterBar/styles/FilterBar.module.css","D2App/components/Dashboard/styles/ViewDashboard.module.css","D2App/components/ItemSelector/styles/HeaderMenuItem.module.css","D2App/components/ItemSelector/styles/ContentMenuItem.module.css","D2App/components/ItemSelector/styles/CategorizedMenuGroup.module.css","D2App/components/ItemSelector/styles/ItemSelector.module.css","D2App/components/TitleBar/styles/EditTitleBar.module.css","D2App/components/ControlBar/styles/ConfirmDeleteDialog.module.css","D2App/components/ControlBar/styles/EditBar.module.css","D2App/components/Dashboard/styles/NotSupportedNotice.module.css","D2App/components/Dashboard/styles/PrintInfo.module.css","D2App/components/Dashboard/styles/PrintActionsBar.module.css","D2App/components/Dashboard/styles/PrintLayoutDashboard.module.css","D2App/components/Dashboard/styles/EditDashboard.module.css","D2App/components/Dashboard/styles/NewDashboard.module.css","D2App/components/Dashboard/styles/PrintDashboard.module.css","D2App/components/WindowDimensionsProvider.js","D2App/api/settings.js","D2App/components/SystemSettingsProvider.js","D2App/icons/Star.js","D2App/api/dataStatistics.js","D2App/components/ControlBar/ViewControlBar/DashboardItemChip.js","D2App/icons/AddCircle.js","D2App/icons/Search.js","D2App/icons/Clear.js","D2App/components/ControlBar/ViewControlBar/ClearButton.js","D2App/reducers/dashboardsFilter.js","D2App/modules/gridUtil.js","D2App/modules/smallScreen.js","D2App/components/ControlBar/ViewControlBar/Filter.js","D2App/actions/dashboardsFilter.js","D2App/modules/uiBackendItemConverter.js","D2App/reducers/dashboards.js","D2App/reducers/selected.js","D2App/modules/getFilteredDashboards.js","D2App/components/ControlBar/ViewControlBar/Content.js","D2App/components/ControlBar/ViewControlBar/assets/icons.js","D2App/components/ControlBar/ViewControlBar/ShowMoreButton.js","D2App/components/ControlBar/ViewControlBar/DragHandle.js","D2App/components/ControlBar/ViewControlBar/controlBarDimensions.js","D2App/reducers/controlBar.js","D2App/api/userDataStore.js","D2App/api/controlBar.js","D2App/actions/controlBar.js","D2App/components/ControlBar/ViewControlBar/DashboardsBar.js","D2App/widgets/NoContentMessage.js","D2App/components/Dashboard/DashboardContainer.js","D2App/components/Item/VisualizationItem/assets/icons.js","D2App/api/description.js","D2App/reducers/user.js","D2App/reducers/dimensions.js","D2App/reducers/itemFilters.js","D2App/actions/itemFilters.js","D2App/reducers/messages.js","D2App/api/messages.js","D2App/components/Item/MessagesItem/actions.js","D2App/reducers/alert.js","D2App/actions/alert.js","D2App/reducers/visualizations.js","D2App/actions/visualizations.js","D2App/api/metadata.js","D2App/api/index.js","D2App/api/dashboards.js","D2App/actions/selected.js","D2App/api/localStorage.js","D2App/actions/dashboards.js","D2App/components/ItemFilter/FilterDialog.js","D2App/reducers/activeModalDimension.js","D2App/actions/activeModalDimension.js","D2App/components/ItemFilter/FilterSelector.js","D2App/components/TitleBar/ViewTitleBar.js","D2App/api/starDashboard.js","D2App/components/Item/VisualizationItem/Visualization/DefaultPlugin.js","D2App/components/Item/VisualizationItem/Visualization/NoVisualizationMessage.js","D2App/components/Item/VisualizationItem/Visualization/MapPlugin.js","D2App/components/Item/VisualizationItem/Visualization/LoadingMask.js","D2App/components/Item/VisualizationItem/Visualization/getFilteredVisualization.js","D2App/components/Item/VisualizationItem/Visualization/getVisualizationConfig.js","D2App/modules/memoizeOne.js","D2App/components/Item/VisualizationItem/Visualization/Visualization.js","D2App/components/Item/VisualizationItem/FatalErrorBoundary.js","D2App/components/Item/ItemHeader/ViewItemActions.js","D2App/components/Item/ItemHeader/DeleteItemButton.js","D2App/reducers/editDashboard.js","D2App/api/editDashboard.js","D2App/actions/editDashboard.js","D2App/components/Item/ItemHeader/EditItemActions.js","D2App/icons/Info.js","D2App/components/Item/ItemHeader/PrintItemInfo.js","D2App/components/Dashboard/dashboardModes.js","D2App/components/Item/ItemHeader/ItemHeader.js","D2App/components/Item/VisualizationItem/ItemHeaderButtons.js","D2App/components/Item/VisualizationItem/ItemFooter.js","D2App/components/Item/VisualizationItem/Item.js","D2App/widgets/Line.js","D2App/components/Item/MessagesItem/Item.js","D2App/components/Item/NotSupportedItem/Item.js","D2App/icons/Description.js","D2App/icons/Delete.js","D2App/components/Item/ListItem/Item.js","D2App/components/Item/ListItem/actions.js","D2App/reducers/printDashboard.js","D2App/components/Item/TextItem/Item.js","D2App/components/Item/AppItem/Item.js","D2App/components/Item/SpacerItem/Item.js","D2App/components/Item/PageBreakItem/Item.js","D2App/components/Item/PrintTitlePageItem/Item.js","D2App/components/Item/Item.js","D2App/components/Item/ProgressiveLoadingContainer.js","D2App/components/ItemGrid/ViewItemGrid.js","D2App/components/FilterBar/FilterBadge.js","D2App/components/FilterBar/FilterBar.js","D2App/actions/printDashboard.js","D2App/components/Dashboard/ViewDashboard.js","D2App/components/ItemSelector/ItemSearchField.js","D2App/components/ItemSelector/HeaderMenuItem.js","D2App/icons/Launch.js","D2App/components/ItemSelector/ContentMenuItem.js","D2App/components/ItemSelector/actions.js","D2App/components/ItemSelector/selectableItems.js","D2App/components/ItemSelector/CategorizedMenuGroup.js","D2App/components/ItemSelector/SinglesMenuGroup.js","D2App/modules/useDebounce.js","D2App/components/ItemSelector/ItemSelector.js","D2App/api/dashboardsQ.js","D2App/components/TitleBar/EditTitleBar.js","D2App/components/ItemGrid/EditItemGrid.js","D2App/components/ControlBar/ConfirmDeleteDialog.js","D2App/components/ControlBar/EditBar.js","D2App/components/Dashboard/NotSupportedNotice.js","D2App/components/Dashboard/PrintInfo.js","D2App/icons/LessHorizontal.js","D2App/components/Dashboard/PrintActionsBar.js","D2App/modules/printUtils.js","D2App/components/ItemGrid/StaticGrid.js","D2App/components/ItemGrid/PrintLayoutItemGrid.js","D2App/components/Dashboard/PrintLayoutDashboard.js","D2App/components/Dashboard/EditDashboard.js","D2App/components/Dashboard/NewDashboard.js","D2App/components/ItemGrid/PrintItemGrid.js","D2App/components/Dashboard/PrintDashboard.js","D2App/components/Dashboard/Dashboard.js","D2App/components/AlertBar/AlertBar.js","D2App/modules/getFilteredDimensions.js","D2App/components/App.js","D2App/actions/user.js","D2App/actions/dimensions.js","D2App/reducers/style.js","D2App/reducers/index.js","D2App/configureStore.js","D2App/locales/index.js","D2App/AppWrapper.js","D2App/modules/itemTypes.js","D2App/modules/util.js","D2App/modules/item.js","D2App/components/Item/VisualizationItem/Visualization/plugin.js","D2App/modules/getGridItemDomId.js","D2App/components/Item/ItemHeader/styles/ItemHeader.module.css","D2App/components/ItemGrid/styles/ItemGrid.module.css","D2App/components/ControlBar/ViewControlBar/styles/DashboardItemChip.module.css","D2App/components/ControlBar/ViewControlBar/styles/ClearButton.module.css","D2App/components/ControlBar/ViewControlBar/styles/Filter.module.css"],"names":["module","exports","WindowDimensionsCtx","createContext","windowDims","height","window","innerHeight","width","innerWidth","WindowDimensionsProvider","children","dimensions","setDimensions","useState","useEffect","handleResize","debounce","addEventListener","removeEventListener","Provider","value","useWindowDimensions","useContext","DEFAULT_SETTINGS","displayNameProperty","keyDashboardContextMenuItemOpenInRelevantApp","keyDashboardContextMenuItemShowInterpretationsAndDetails","keyDashboardContextMenuItemSwitchViewType","keyDashboardContextMenuItemViewFullscreen","keyGatherAnalyticalObjectStatisticsInDashboardViews","SYSTEM_SETTINGS_REMAPPINGS","renameSystemSettings","settings","Object","keys","reduce","mapped","key","query","resource","params","SystemSettingsCtx","SystemSettingsProvider","setSettings","engine","useDataEngine","async","systemSettings","settingsQuery","assign","fetchData","useSystemSettings","StarIcon","className","xmlns","viewBox","d","fill","apiPostDataStatistics","eventType","id","d2","getInstance","url","Api","getApi","post","DashboardItemChip","starred","selected","label","dashboardId","onClick","chipProps","selectedState","classes","unselected","icon","Star","debouncedPostStatistics","link","to","data-test","AddCircleIcon","colors","teal600","SearchIcon","small","ClearIcon","grey800","ClearButton","onClear","button","Clear","color","SET_DASHBOARDS_FILTER","CLEAR_DASHBOARDS_FILTER","sGetDashboardsFilter","state","dashboardsFilter","GRID_COMPACT_TYPE","GRID_ROW_HEIGHT_PX","MARGIN_PX","MARGIN_SM_PX","GRID_PADDING_PX","NEW_ITEM_SHAPE","x","y","w","h","isNonNegativeInteger","Number","isInteger","hasShape","item","withShape","items","map","i","col","row","Math","floor","itemWidth","MAX_ITEM_GRID_WIDTH","getShape","originalH","getGridWidth","windowWidthPx","getGridUnitsForSmFromPx","hPx","gridUnitHeightPx","round","getProportionalHeight","wPx","getItemWHPx","ratioWH","isVisualizationType","newWPx","newHPx","getGridItemProperties","itemId","minH","getPageBreakItemShape","yPos","isStatic","GRID_COLUMNS","static","getPrintTitlePageItemShape","isOneItemPerPage","gridUnits","colOrRowSize","marginPx","max","isSmallScreen","mapDispatchToProps","setDashboardsFilter","type","clearDashboardsFilter","connect","filterText","expanded","onKeypressEnter","onSearchClicked","focusedClassName","setFocusedClassName","inputFocused","setInputFocus","cx","container","collapsed","searchButton","Search","searchIcon","searchArea","onFocus","event","preventDefault","focused","onBlur","searchIconContainer","searchIconSmall","searchIconLarge","input","placeholder","i18n","t","onChange","target","onKeyUp","keyCode","ref","focus","clearButtonContainer","spacerContent","emptyTextItemContent","isTextType","TEXT","text","convertUiItemsToBackend","SPACER","isUiSpacerType","convertBackendItemsToUi","isBackendSpacerType","gridProperties","SET_DASHBOARDS","ADD_DASHBOARDS","SET_DASHBOARD_STARRED","SET_DASHBOARD_DISPLAY_NAME","SET_DASHBOARD_ITEMS","DEFAULT_STATE_DASHBOARDS","byId","EMPTY_DASHBOARD","updateDashboardProp","prop","sGetDashboardsRoot","dashboards","sGetDashboardById","orObject","sDashboardsIsFetching","sGetAllDashboards","sGetDashboardItems","sGetStarredDashboards","values","filter","dashboard","sGetUnstarredDashboards","getCustomDashboards","data","arrayFrom","name","displayName","description","displayDescription","favorite","owner","user","created","split","join","substr","lastUpdated","access","numberOfItems","orArray","dashboardItems","length","SET_SELECTED_ID","SET_SELECTED_ISLOADING","SET_SELECTED_SHOWDESCRIPTION","SET_SELECTED_ITEM_ACTIVE_TYPE","CLEAR_SELECTED_ITEM_ACTIVE_TYPES","DEFAULT_STATE_SELECTED_SHOWDESCRIPTION","DEFAULT_STATE_SELECTED_ITEM_ACTIVE_TYPES","combineReducers","action","validateReducer","isLoading","showDescription","itemActiveTypes","activeType","sGetSelectedRoot","sGetSelectedId","sGetSelectedIsLoading","sGetSelectedShowDescription","sGetSelectedItemActiveType","getFilteredDashboards","filteredDashboards","arraySort","toLowerCase","includes","withRouter","selectedId","history","onChipClicked","onSelectDashboard","push","controlsSmall","Filter","chipsContainer","controlsLarge","newLink","AddCircle","ChevronDown","ChevronUp","ShowMoreButton","dashboardBarIsExpanded","disabled","containerRef","useRef","buttonLabel","onButtonClicked","buttonEl","current","MouseEvent","bubbles","cancelable","dispatchEvent","content","placement","onMouseOver","onMouseOut","showMore","aria-label","DragHandle","onHeightChanged","setDragging","startingY","setStartingY","onDrag","e","stopPropagation","currentY","clientY","requestAnimationFrame","onEndDrag","draghandle","onMouseDown","SET_CONTROLBAR_USER_ROWS","userRows","sGetControlBarUserRows","controlBar","sGetControlBarRoot","NAMESPACE","hasNamespace","currentUser","dataStore","has","getNamespace","get","create","apiPostUserDataStoreValue","set","apiGetUserDataStoreValue","defaultValue","namespace","find","k","console","log","KEY_CONTROLBAR_ROWS","acSetControlBarUserRows","rows","updateUserRows","onExpandedChanged","dragging","userRowsChanged","createRef","rootElement","document","documentElement","style","setProperty","apiPostControlBarRows","scrollToTop","scroll","toggleExpanded","cancelExpanded","newHeight","newRows","min","spacer","NoContentMessage","padding","textAlign","fontSize","fontWeight","grey600","DashboardContainer","covered","ThreeDots","SpeechBubble","margin","fillRule","transform","Warning","Fullscreen","ExitFullscreen","KEY_SHOW_DESCRIPTION","RECEIVED_USER","DEFAULT_STATE_USER","username","uiLocale","isSuperuser","sGetUserUsername","SET_DIMENSIONS","DEFAULT_DIMENSIONS","getDimensionById","DIMENSION_ID_PERIOD","DIMENSION_ID_ORGUNIT","sGetDimensions","CLEAR_ITEM_FILTERS","SET_ITEM_FILTERS","ADD_ITEM_FILTER","REMOVE_ITEM_FILTER","DEFAULT_STATE_ITEM_FILTERS","sGetItemFiltersRoot","itemFilters","sGetNamedItemFilters","createSelector","filters","arr","dimension","acRemoveItemFilter","RECEIVED_MESSAGES","sGetMessagesRoot","messages","messageConversationsQuery","fields","order","pageSize","tGetMessages","dataEngine","messageConversations","error","getMessages","dispatch","err","SET_ALERT_MESSAGE","CLEAR_ALERT_MESSAGE","sGetAlertMessage","alert","acClearAlertMessage","ADD_VISUALIZATION","CLEAR_VISUALIZATIONS","DEFAULT_STATE_VISUALIZATIONS","isEmpty","p","undefined","sGetVisualization","visualizations","sGetVisualizationsRoot","acAddVisualization","getIdNameFields","rename","getDimensionFields","withItems","arrayClean","getAxesFields","getFavoriteFields","withDimensions","withOptions","getFavoritesFields","apiFetchVisualization","getVisualizationId","MAP","getEndPointName","onError","getDashboardItemsFields","withFavorite","getDashboardFields","dashboardsQuery","paging","dashboardQuery","deleteDashboardMutation","apiFetchDashboard","variables","acSetSelectedId","acSetSelectedIsLoading","acSetSelectedShowDescription","tSetSelectedDashboardById","getState","alertTimeout","setTimeout","onSuccess","acAppendDashboards","customDashboard","acSetDashboardItems","localStorage","setItem","forEach","REPORT_TABLE","CHART","EVENT_REPORT","EVENT_CHART","getVisualizationFromItem","MESSAGES","clearTimeout","arrayToIdMap","tFetchDashboards","acSetDashboards","apiFetchDashboards","tDeleteDashboard","mutate","apiDeleteDashboard","Promise","resolve","initiallySelectedItems","addItemFilter","removeItemFilter","onClose","setFilters","useD2","onSelectItems","dimensionId","onDeselectItems","itemIdsToRemove","newList","onReorderItems","itemIds","oldList","reorderedList","dataTest","position","large","commonProps","onSelect","onDeselect","onReorder","selectedItems","selectedPeriods","ouItems","renderDialogContent","secondary","primary","filterItems","SET_ACTIVE_MODAL_DIMENSION","CLEAR_ACTIVE_MODAL_DIMENSION","DEFAULT_STATE_ACTIVE_MODAL_DIMENSION","sGetActiveModalDimension","activeModalDimension","acSetActiveModalDimension","clearActiveModalDimension","setActiveModalDimension","props","showPopover","setShowPopover","onCloseDialog","buttonContainer","onClickOutside","reference","arrow","popover","onDimensionClick","selectedIds","ViewTitleBar","setDashboardStarred","updateShowDescription","moreOptionsIsOpen","setMoreOptionsIsOpen","sharingDialogIsOpen","setSharingDialogIsOpen","redirectUrl","setRedirectUrl","warningAlert","useAlert","msg","warning","toggleSharingDialog","toggleMoreOptions","StarBorder","showHideDescriptionLabel","toggleStarredDashboardLabel","onToggleStarredDashboard","isStarred","mutation","getStarDashboardMutation","getUnstarDashboardMutation","apiStarDashboard","then","catch","show","buttonRef","userAccess","descriptionClasses","descContainer","desc","noDesc","getMoreButton","useSmall","moreText","titleBar","title","actions","star","strip","update","editLink","manage","shareButton","moreButton","moreButtonSmall","dense","apiPostShowDescription","open","onRequestClose","defaultProps","DefaultPlugin","visualization","options","baseUrl","useConfig","credentials","auth","defaultHeaders","Authorization","prevItem","prevActiveType","load","unmount","shouldPluginReload","reloadAllowed","visChanged","getGridItemDomId","NoVisualizationMessage","message","MapPlugin","applyFilters","mapViews","mapView","layer","pluginIsAvailable","hideTitle","LoadingMask","center","getFilteredVisualization","visRows","obj","visColumns","columns","visFilters","dimensionFound","dimensionObjects","getWithoutId","object","getVisualizationConfig","originalType","extractedMapView","mv","VIS_TYPE_COLUMN","VIS_TYPE_PIVOT_TABLE","layout","getAdaptedUiLayoutByType","memoizeOne","fn","lastArgs","lastValue","args","every","arg","Visualization","React","Component","constructor","super","pluginLoaded","onLoadingComplete","this","setState","memoizedGetFilteredVisualization","memoizedGetVisualizationConfig","render","availableHeight","availableWidth","pluginProps","VISUALIZATION","d2Config","forDashboard","ownProps","FatalErrorBoundary","errorFound","componentDidCatch","info","ViewItemActions","actionButtons","itemActionsWrap","DeleteItemButton","deleteItemButton","red500","RECEIVED_EDIT_DASHBOARD","RECEIVED_NOT_EDITING","START_NEW_DASHBOARD","RECEIVED_TITLE","RECEIVED_DESCRIPTION","ADD_DASHBOARD_ITEM","REMOVE_DASHBOARD_ITEM","UPDATE_DASHBOARD_ITEM","RECEIVED_DASHBOARD_LAYOUT","SET_PRINT_PREVIEW_VIEW","CLEAR_PRINT_PREVIEW_VIEW","DEFAULT_STATE_EDIT_DASHBOARD","NEW_DASHBOARD_STATE","printPreviewView","sGetEditDashboardRoot","editDashboard","sGetIsEditing","sGetIsPrintPreviewView","sGetEditDashboardItems","createDashboardMutation","updateDashboardMutation","generatePayload","acClearEditDashboard","acAddDashboardItem","itemPropName","itemTypeMap","propName","generateUid","gridItemProperties","shape","PAGEBREAK","PRINT_TITLE_PAGE","acUpdateDashboardItem","acRemoveDashboardItem","tSaveDashboard","dashboardToSave","response","uid","updateDashboard","postDashboard","WarningIcon","PrintWarning","Info","EDIT","NEW","VIEW","PRINT","PRINT_LAYOUT","isEditMode","mode","isPrintMode","isViewMode","ItemHeader","forwardRef","dashboardMode","isShortened","rest","Actions","EditItemActions","PrintItemInfo","getItemActionsMap","itemHeaderWrap","itemTitle","iconFill","ItemHeaderButtons","menuIsOpen","setMenuIsOpen","isOpen","onSelectActiveType","openInRelevantApp","showInterpretationsAndDetails","switchViewType","fullscreenAllowedInSettings","isTrackerType","isTrackerDomainType","onViewTable","closeMenu","onViewChart","onViewMap","canViewAs","isSingleValue","isYearOverYear","VIS_TYPE_GAUGE","VIS_TYPE_PIE","interpretationMenuLabel","activeFooter","ViewAsMenuItems","hasMapView","fullscreenAllowed","fullscreenSupported","isFullscreen","onToggleFullscreen","appName","getAppName","href","getLink","onToggleFooter","ItemFooter","line","scrollContainer","Item","showFooter","configLoaded","isFullscreenSupported","el","querySelector","itemDomElSelector","requestFullscreen","webkitRequestFullscreen","handleFullscreenChange","fullscreenElement","webkitFullscreenElement","pluginResize","exitFullscreen","webkitExitFullscreen","getUniqueKey","uniqueId","onToggleItemExpanded","setActiveType","getActiveType","isEditing","getAvailableHeight","calculatedHeight","smallOriginalH","getItemHeightPx","headerRef","clientHeight","itemHeaderTotalMargin","itemContentPadding","memoizedGetContentHeight","contentRef","offsetHeight","getAvailableWidth","rect","getBoundingClientRect","getComputedStyle","parseInt","getPropertyValue","replace","measuredHeight","preferMeasured","updateVisualization","getDataStatisticsName","onfullscreenchange","onwebkitfullscreenchange","componentWillUnmount","componentDidUpdate","prevProps","gridWidth","setViewportSize","clientWidth","getVisualizationName","shortened","Consumer","Function","prototype","backgroundColor","grey200","border","Line","PRIVATE","messageTypes","VALIDATION_RESULT","TICKET","SYSTEM","list","listStyleType","paddingLeft","seeAll","marginBottom","sender","lineHeight","snippet","maxHeight","overflow","MessagesContainer","setUiLocale","userSettings","getUiLocale","getMessageHref","msgIdentifier","messageType","modeClass","latestMsg","slice","getMessageSender","readClass","read","msgDate","location","messageCount","formatDate","getMessageItems","NotSupportedItem","display","justifyContent","alignItems","align","DescriptionIcon","grey500","DeleteIcon","getItemTitle","pluralTitle","tRemoveListItemContent","dashboardItem","listItemType","newContent","contentItems","index","array","findIndex","getContentItems","contentItem","deleteButton","deletebutton","deleteicon","grey900","getItemUrl","Description","itemicon","SET_PRINT_DASHBOARD","CLEAR_PRINT_DASHBOARD","ADD_PRINT_DASHBOARD_ITEM","SET_PRINT_DASHBOARD_LAYOUT","REMOVE_PRINT_DASHBOARD_ITEM","UPDATE_PRINT_DASHBOARD_ITEM","DEFAULT_STATE_PRINT_DASHBOARD","DEFAULT_DASHBOARD_ITEMS","NEW_PRINT_DASHBOARD_STATE","sGetPrintDashboardRoot","printDashboard","sGetIsPrinting","sGetPrintDashboardItems","textDiv","whiteSpace","textField","fontStretch","marginTop","onChangeText","updatedItem","viewItem","textDivStyle","editItem","onEdit","multiline","fullWidth","printItem","textItem","getIframeSrc","appDetails","iframeSrc","launchUrl","ouIds","ouFilter","path","appKey","system","installedApps","app","dashboardWidget","src","SpacerItem","PageBreakItem","PrintTitlePageItem","titlePage","filterTitle","listItems","filterListItem","val","filterList","getItemFilterList","viewDashboard","sGetPrintDashboardName","sGetPrintDashboardDescription","GridItem","VisualizationItem","MessagesItem","REPORTS","RESOURCES","USERS","ListItem","TextItem","APP","AppItem","getGridItem","ProgressiveLoadingContainer","shouldLoad","shouldLoadHandler","handlerOptions","passive","checkShouldLoad","bufferPx","bufferFactor","bottom","top","removeHandler","registerHandler","debounceMs","Array","from","getElementsByClassName","componentDidMount","eventProps","pick","selectedDashboard","expandedItems","setExpandedItems","displayItems","setDisplayItems","layoutSm","setLayoutSm","setGridWidth","getItemsWithAdjustedHeight","sortBy","clickedId","isExpanded","newExpandedItems","expandedItem","expandedHeight","translucent","grid","rowHeight","cols","lg","sm","breakpoints","SMALL_SCREEN_BREAKPOINT","layouts","compactType","containerPadding","isDraggable","isResizable","draggableCancel","onWidthChange","containerWidth","getItemComponent","openFilterModal","removeFilter","badge","count","removeButton","FilterBar","bar","acSetPrintDashboard","acClearPrintDashboard","acAddPrintDashboardItem","acUpdatePrintDashboardItem","dashboardIsEditing","dashboardIsPrinting","clearEditDashboard","clearPrintDashboard","controlbarExpanded","setControlbarExpanded","cover","ViewItemGrid","ItemSearchField","HeaderMenuItem","LaunchIcon","LaunchLink","launchLink","rel","InsertButton","buttonInsert","ContentMenuItem","onInsert","visType","ItemIcon","getItemIcon","renderedItemIcon","visTypeIcons","menuItem","marginRight","singleItems","header","categorizedItems","listItemTypes","tAddListItemContent","dashboardItemIndex","hasMore","onChangeItemsLimit","seeMore","setSeeMore","addItem","newItem","itemUrl","showMoreButton","category","addToDashboard","useDebounce","delay","debouncedValue","setDebouncedValue","handler","ItemSelector","setIsOpen","setFilter","setItems","maxOptions","setMaxOptions","Set","debouncedFilterText","maxItems","getDashboardsQQuery","res","updateMaxOptions","delete","add","inputRef","maxWidth","menu","itemType","endPointName","itemCount","getDefaultItemCount","allItems","concat","EditTitleBar","onChangeTitle","onChangeDescription","section","titleDescription","_","itemSelector","acUpdateDashboardLayout","onLayoutChange","newLayout","onResizeStop","oldItem","ConfirmDeleteDialog","dashboardName","onDeleteConfirmed","onContinueEditing","destructive","saveFailedMessage","deleteAccess","updateAccess","sGetIsNewDashboard","isPrintPreviewView","clearPrintPreview","saveDashboard","onDelete","onDiscardChanges","onTranslate","acSetDashboardDisplayName","showPrintPreview","translationDlgIsOpen","setTranslationDlgIsOpen","setDashboard","confirmDeleteDlgIsOpen","setConfirmDeleteDlgIsOpen","failureAlert","critical","dboard","onConfirmDelete","onSave","newId","onPrintPreview","onTranslationsSaved","translations","dbLocale","translation","locale","property","toggleTranslationDialog","discardBtnText","editBar","controls","objectToTranslate","modelDefinition","fieldsToTranslate","onTranslationSaved","onTranslationError","NotSupportedNotice","noticeContainer","PrintInfo","isLayout","layoutStyle","printSuggestions","divider","LessHorizontalIcon","PrintActionsBar","getExitPrintButton","isSmall","buttonSmall","buttonLarge","LessHorizontal","getPrintButton","print","getTransformYPx","elStyle","transformY","match","isLeapPage","n","getMultiple","factor","multiple","StaticGrid","PrintLayoutItemGrid","updateDashboardLayout","isFirstPageBreak","pageBreaks","sortedPageBreaks","itemClassNames","getItemComponents","hideExtraPageBreaks","sortedElements","elements","types","elementsWithBoundingRect","classList","indexOf","bottomY","getDomGridItemsSortedByYPos","querySelectorAll","pageBreakBottom","lastItemBottom","foundNonPageBreak","thisItemBottom","gridElement","firstBreak","scrollArea","addPageBreaks","addDashboardItem","yPosList","pageNum","getPageBreakPositions","fromEdit","setPrintDashboard","updateDashboardItem","wrapper","editView","pageOuter","setEditDashboard","notice","setNewDashboard","notSupportedNotice","removeDashboardItem","sortedItems","spacerCount","dashboardMap","dashboardsIsEmpty","dashboardsLoaded","routeId","selectDashboard","dashboardToSelect","preferredId","getItem","dash","sGetDashboardsSortedByStarred","getElementsByTagName","remove","setHeaderbarVisibility","onHidden","permanent","filteredDimensions","dim","dimensionType","dataDimensionType","fetchDashboards","setControlBarRows","controlBarRows","apiGetControlBarRows","setCurrentUser","setShowDescription","apiGetShowDescription","apiFetchDimensions","getFilteredDimensions","fetchDimensions","spacers","exact","AlertBar","DEFAULT_STATE_STYLE","objectClean","conversations","$merge","d2Object","keyUiLocale","authorities","newState","$splice","$unshift","idToRemove","stateItems","layoutHasChanged","newStateItems","stateItem","si","configureStore","middleware","thunk","withExtraArgument","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducer","applyMiddleware","addResources","arTranslations","ar_IQTranslations","ckbTranslations","csTranslations","daTranslations","enTranslations","esTranslations","frTranslations","idTranslations","kmTranslations","loTranslations","myTranslations","nbTranslations","prsTranslations","psTranslations","ptTranslations","pt_BRTranslations","ruTranslations","svTranslations","tetTranslations","tgTranslations","ukTranslations","urTranslations","uzTranslations","uz_CyrlTranslations","uz_LatnTranslations","viTranslations","zhTranslations","zh_CNTranslations","schemas","authorization","process","REACT_APP_DHIS2_AUTHORIZATION","headers","AppWrapper","store","theme","createMuiTheme","dhis2theme","i18nRoot","DOMAIN_TYPE_AGGREGATE","DOMAIN_TYPE_TRACKER","domainType","defaultItemCount","appUrl","dataStatisticsName","Date","getTime","TableIcon","ChartIcon","MapIcon","ExtensionIcon","PersonIcon","FontDownloadIcon","EmailIcon","CropFreeIcon","NotInterestedIcon","param","isArray","isObject","global","Intl","DateTimeFormat","year","month","day","format","reportTable","chart","eventReport","eventChart","itemTypeToExternalPlugin","getPlugin","hasIntegratedPlugin","config","plugin","loadingIndicator","loadPlugin","resize"],"mappings":"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","file":"static/js/app.455a48d0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Content_container__DYubU\",\"newLink\":\"Content_newLink__3PXmM\",\"controlsSmall\":\"Content_controlsSmall__2YcgC\",\"controlsLarge\":\"Content_controlsLarge__3D9AJ\",\"collapsed\":\"Content_collapsed__3ozGX\",\"expanded\":\"Content_expanded__22Kcl\",\"chipsContainer\":\"Content_chipsContainer__1W0Fq\",\"controls\":\"Content_controls__1eJVS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ShowMoreButton_container__W_K20\",\"showMore\":\"ShowMoreButton_showMore__1Db77\",\"disabled\":\"ShowMoreButton_disabled__3KzHL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"draghandle\":\"DragHandle_draghandle__2j24a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"DashboardsBar_container__2T0a0\",\"content\":\"DashboardsBar_content__2eVDk\",\"expanded\":\"DashboardsBar_expanded__2srLP\",\"spacer\":\"DashboardsBar_spacer__1W4--\",\"collapsed\":\"DashboardsBar_collapsed__3f7ol\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"DashboardContainer_container__2A1Hw\",\"covered\":\"DashboardContainer_covered__QHw50\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonContainer\":\"FilterSelector_buttonContainer__O_amY\",\"popover\":\"FilterSelector_popover__3TVEp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ViewTitleBar_container__VivO0\",\"actions\":\"ViewTitleBar_actions__2UTRz\",\"editLink\":\"ViewTitleBar_editLink__d_HzW\",\"titleBar\":\"ViewTitleBar_titleBar__eiwJS\",\"star\":\"ViewTitleBar_star__26YmT\",\"strip\":\"ViewTitleBar_strip__3xR4U\",\"title\":\"ViewTitleBar_title__2GhTR\",\"descContainer\":\"ViewTitleBar_descContainer__3rF10\",\"desc\":\"ViewTitleBar_desc__3QW6Z\",\"noDesc\":\"ViewTitleBar_noDesc__Jettc\",\"moreText\":\"ViewTitleBar_moreText__3yHR0\",\"moreButtonSmall\":\"ViewTitleBar_moreButtonSmall__1ajrf\",\"shareButton\":\"ViewTitleBar_shareButton__3yEKR\",\"moreButton\":\"ViewTitleBar_moreButton__1HduK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"NoVisualizationMessage_message__22IPi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"center\":\"LoadingMask_center__KHIYy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FatalErrorBoundary_container__3SViR\",\"icon\":\"FatalErrorBoundary_icon__2UbeP\",\"message\":\"FatalErrorBoundary_message__3FzrY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"deleteItemButton\":\"DeleteItemButton_deleteItemButton__3TJm9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"warning\":\"PrintItemInfo_warning__123PK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"line\":\"ItemFooter_line__3Ko0R\",\"scrollContainer\":\"ItemFooter_scrollContainer__tuq4P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Item_list__1_nkQ\",\"item\":\"Item_item__3-6QE\",\"itemicon\":\"Item_itemicon__QlouX\",\"link\":\"Item_link___3c_q\",\"deleteicon\":\"Item_deleteicon__3usrl\",\"deletebutton\":\"Item_deletebutton__1DpBW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"titlePage\":\"Item_titlePage__18CNQ\",\"name\":\"Item_name__3nuTV\",\"description\":\"Item_description__1gFQd\",\"filterTitle\":\"Item_filterTitle__2p7TQ\",\"filterList\":\"Item_filterList__qc_G3\",\"filterListItem\":\"Item_filterListItem__sPbBY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FilterBadge_container__22K0B\",\"badge\":\"FilterBadge_badge__28kyj\",\"removeButton\":\"FilterBadge_removeButton__3siwT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bar\":\"FilterBar_bar__1Ma3p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ViewDashboard_container__3uNdy\",\"cover\":\"ViewDashboard_cover__2SbDj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"HeaderMenuItem_item__313hC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuItem\":\"ContentMenuItem_menuItem__vbKn3\",\"launchLink\":\"ContentMenuItem_launchLink__2Nql9\",\"label\":\"ContentMenuItem_label__ANfH1\",\"buttonInsert\":\"ContentMenuItem_buttonInsert__1joHg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"showMoreButton\":\"CategorizedMenuGroup_showMoreButton__2RbRp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"ItemSelector_menu__2VYae\",\"popover\":\"ItemSelector_popover__2aDe3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"EditTitleBar_section__LIaIC\",\"titleDescription\":\"EditTitleBar_titleDescription__1YsU6\",\"title\":\"EditTitleBar_title__3mUbt\",\"description\":\"EditTitleBar_description__24U5X\",\"itemSelector\":\"EditTitleBar_itemSelector__1cFEp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ConfirmDeleteDialog_content__EqswE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editBar\":\"EditBar_editBar__1d1xM\",\"controls\":\"EditBar_controls__1t0nO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noticeContainer\":\"NotSupportedNotice_noticeContainer__3z9Up\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PrintInfo_container__9gH0b\",\"title\":\"PrintInfo_title__2_VZd\",\"printSuggestions\":\"PrintInfo_printSuggestions__30tcU\",\"divider\":\"PrintInfo_divider__3wzx9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PrintActionsBar_container__2iQp7\",\"actions\":\"PrintActionsBar_actions__2I2I0\",\"link\":\"PrintActionsBar_link__lFUmI\",\"buttonSmall\":\"PrintActionsBar_buttonSmall__27sFq\",\"buttonLarge\":\"PrintActionsBar_buttonLarge__QcrPj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PrintLayoutDashboard_container__3eIY-\",\"wrapper\":\"PrintLayoutDashboard_wrapper__1WDh4\",\"editView\":\"PrintLayoutDashboard_editView__1Zk_3\",\"pageOuter\":\"PrintLayoutDashboard_pageOuter__22acI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"EditDashboard_container__EcqEU\",\"notice\":\"EditDashboard_notice__1X7zB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"NewDashboard_container__VsR3D\",\"notice\":\"NewDashboard_notice__cTvCt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PrintDashboard_container__2KgcY\",\"wrapper\":\"PrintDashboard_wrapper__1O3s_\",\"pageOuter\":\"PrintDashboard_pageOuter__fl9tw\"};","import React, { createContext, useContext, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash/debounce';\nexport const WindowDimensionsCtx = createContext(null);\n\nconst windowDims = () => ({\n  height: window.innerHeight,\n  width: window.innerWidth\n});\n\nconst WindowDimensionsProvider = ({\n  children\n}) => {\n  const [dimensions, setDimensions] = useState(windowDims());\n  useEffect(() => {\n    const handleResize = debounce(() => {\n      setDimensions(windowDims());\n    }, 100);\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n  return <WindowDimensionsCtx.Provider value={dimensions}>\n            {children}\n        </WindowDimensionsCtx.Provider>;\n};\n\nWindowDimensionsProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};\nexport default WindowDimensionsProvider;\nexport const useWindowDimensions = () => {\n  return useContext(WindowDimensionsCtx);\n};","export const DEFAULT_SETTINGS = {\n  displayNameProperty: 'displayName',\n  keyDashboardContextMenuItemOpenInRelevantApp: true,\n  keyDashboardContextMenuItemShowInterpretationsAndDetails: true,\n  keyDashboardContextMenuItemSwitchViewType: true,\n  keyDashboardContextMenuItemViewFullscreen: true,\n  keyGatherAnalyticalObjectStatisticsInDashboardViews: false\n};\nconst SYSTEM_SETTINGS = ['keyDashboardContextMenuItemOpenInRelevantApp', 'keyDashboardContextMenuItemShowInterpretationsAndDetails', 'keyDashboardContextMenuItemSwitchViewType', 'keyDashboardContextMenuItemViewFullscreen', 'keyGatherAnalyticalObjectStatisticsInDashboardViews'];\nconst SYSTEM_SETTINGS_REMAPPINGS = {\n  keyDashboardContextMenuItemOpenInRelevantApp: 'openInRelevantApp',\n  keyDashboardContextMenuItemShowInterpretationsAndDetails: 'showInterpretationsAndDetails',\n  keyDashboardContextMenuItemSwitchViewType: 'switchViewType',\n  keyDashboardContextMenuItemViewFullscreen: 'fullscreenAllowedInSettings'\n};\nexport const renameSystemSettings = settings => {\n  return Object.keys(settings).reduce((mapped, key) => {\n    mapped[SYSTEM_SETTINGS_REMAPPINGS[key] || key] = settings[key];\n    return mapped;\n  }, {});\n};\nconst query = {\n  resource: 'systemSettings',\n  params: {\n    key: SYSTEM_SETTINGS\n  }\n};\nexport default query;","import React, { useContext, useState, useEffect, createContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDataEngine } from '@dhis2/app-runtime';\nimport settingsQuery, { renameSystemSettings, DEFAULT_SETTINGS } from '../api/settings';\nexport const SystemSettingsCtx = createContext({});\n\nconst SystemSettingsProvider = ({\n  children\n}) => {\n  const [settings, setSettings] = useState([]);\n  const engine = useDataEngine();\n  useEffect(() => {\n    async function fetchData() {\n      const {\n        systemSettings\n      } = await engine.query({\n        systemSettings: settingsQuery\n      });\n      setSettings(Object.assign({}, renameSystemSettings(DEFAULT_SETTINGS), renameSystemSettings(systemSettings)));\n    }\n\n    fetchData();\n  }, []);\n  return <SystemSettingsCtx.Provider value={{\n    settings\n  }}>\n            {children}\n        </SystemSettingsCtx.Provider>;\n};\n\nSystemSettingsProvider.propTypes = {\n  children: PropTypes.node\n};\nexport default SystemSettingsProvider;\nexport const useSystemSettings = () => useContext(SystemSettingsCtx);","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst StarIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>;\n\nStarIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default StarIcon;","import { getInstance } from 'd2';\nexport const apiPostDataStatistics = async (eventType, id) => {\n  const d2 = await getInstance();\n  const url = `dataStatistics?eventType=${eventType}&favorite=${id}`;\n  d2.Api.getApi().post(url);\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Chip } from '@dhis2/ui';\nimport { Link } from 'react-router-dom';\nimport debounce from 'lodash/debounce';\nimport StarIcon from '../../../icons/Star';\nimport { apiPostDataStatistics } from '../../../api/dataStatistics';\nimport classes from './styles/DashboardItemChip.module.css';\nexport const DashboardItemChip = ({\n  starred,\n  selected,\n  label,\n  dashboardId,\n  onClick\n}) => {\n  const chipProps = {\n    selected\n  };\n\n  if (starred) {\n    const selectedState = selected ? classes.selected : classes.unselected;\n    chipProps.icon = <StarIcon className={`${classes.icon} ${selectedState}`} />;\n  }\n\n  const debouncedPostStatistics = debounce(() => apiPostDataStatistics('DASHBOARD_VIEW', dashboardId), 500);\n\n  const handleClick = () => {\n    debouncedPostStatistics();\n    onClick();\n  };\n\n  return <Link className={classes.link} to={`/${dashboardId}`} onClick={handleClick} data-test=\"dashboard-chip\">\n            <Chip {...chipProps}>{label}</Chip>\n        </Link>;\n};\nDashboardItemChip.propTypes = {\n  dashboardId: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  selected: PropTypes.bool.isRequired,\n  starred: PropTypes.bool.isRequired,\n  onClick: PropTypes.func.isRequired,\n  classes: PropTypes.object\n};\nexport default DashboardItemChip;","import React from 'react';\nimport { colors } from '@dhis2/ui';\n\nconst AddCircleIcon = () => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" fill={colors.teal600} viewBox=\"0 0 24 24\">\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm4 11h-3v3c0 .55-.45 1-1 1s-1-.45-1-1v-3H8c-.55 0-1-.45-1-1s.45-1 1-1h3V8c0-.55.45-1 1-1s1 .45 1 1v3h3c.55 0 1 .45 1 1s-.45 1-1 1z\" />\n    </svg>;\n\nexport default AddCircleIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst SearchIcon = ({\n  className,\n  small\n}) => small ? <svg className={className} height=\"16\" viewBox=\"0 0 16 16\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"m6 1c2.76142375 0 5 2.23857625 5 5 0 1.20065927-.4231997 2.30247496-1.12856994 3.16441794l4.48212334 4.48202866-.7071068.7071068-4.48202866-4.48212334c-.86194298.70537024-1.96375867 1.12856994-3.16441794 1.12856994-2.76142375 0-5-2.23857625-5-5s2.23857625-5 5-5zm0 1c-2.209139 0-4 1.790861-4 4s1.790861 4 4 4 4-1.790861 4-4-1.790861-4-4-4z\" fill=\"#010101\" />\n        </svg> : <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n            <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n            <path d=\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\" />\n        </svg>;\n\nSearchIcon.propTypes = {\n  className: PropTypes.string,\n  small: PropTypes.bool\n};\nexport default SearchIcon;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst ClearIcon = ({\n  className\n}) => <svg className={className} fill={colors.grey800} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n        <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>;\n\nClearIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default ClearIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ClearIcon from '../../../icons/Clear';\nimport classes from './styles/ClearButton.module.css';\nexport const ClearButton = ({\n  onClear\n}) => <button className={classes.button} onClick={onClear}>\n        <span>\n            <ClearIcon className={classes.icon} color=\"action\" />\n        </span>\n    </button>;\nClearButton.propTypes = {\n  onClear: PropTypes.func.isRequired\n};\nexport default ClearButton;","import { validateReducer } from '../modules/util';\nexport const SET_DASHBOARDS_FILTER = 'SET_DASHBOARDS_FILTER';\nexport const CLEAR_DASHBOARDS_FILTER = 'CLEAR_DASHBOARDS_FILTER';\nexport const DEFAULT_STATE_DASHBOARDS_FILTER = '';\nexport default ((state = DEFAULT_STATE_DASHBOARDS_FILTER, action) => {\n  switch (action.type) {\n    case SET_DASHBOARDS_FILTER:\n      {\n        return validateReducer(action.value, DEFAULT_STATE_DASHBOARDS_FILTER);\n      }\n\n    case CLEAR_DASHBOARDS_FILTER:\n      {\n        return DEFAULT_STATE_DASHBOARDS_FILTER;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetDashboardsFilter = state => state.dashboardsFilter;","// Dimensions for the react-grid-layout\nimport sortBy from 'lodash/sortBy';\nimport { isVisualizationType } from './itemTypes';\nimport { isSmallScreen } from './smallScreen';\nexport const GRID_COMPACT_TYPE = 'vertical'; // vertical | horizonal | null\n\nexport const GRID_ROW_HEIGHT_PX = 10;\nexport const MARGIN_PX = [10, 10];\nconst SM_SCREEN_MIN_ITEM_GRID_HEIGHT = 13; // minimum of ~320px\n\nexport const SM_SCREEN_GRID_COLUMNS = 1;\nexport const MARGIN_SM_PX = [0, 16];\nexport const GRID_PADDING_PX = [0, 0]; // sum of left+right padding of dashboard-wrapper (App.css)\n\nexport const DASHBOARD_WRAPPER_LR_MARGIN_PX = 32; // make an assumption about the original item w/h ratio\n// assumes grid width of ~1200px at time dashboard was created\n\nconst GRID_COL_WIDTH_PX = 10;\nexport const GRID_COLUMNS = 60; // Dimensions for getShape\n\nexport const NEW_ITEM_SHAPE = {\n  x: 0,\n  y: 0,\n  w: 20,\n  h: 29\n};\nconst NUMBER_OF_ITEM_COLS = 2;\nconst MAX_ITEM_GRID_WIDTH = GRID_COLUMNS - 1;\nexport const MAX_ITEM_GRID_HEIGHT = 34;\nexport const MAX_ITEM_GRID_HEIGHT_OIPP = 35;\nexport const MAX_ITEM_GRID_WIDTH_OIPP = 56;\nconst MIN_ITEM_GRID_HEIGHT = 4; // isNonNegativeInteger\n\nconst isNonNegativeInteger = x => Number.isInteger(x) && x >= 0; // Does the item have all the shape properties?\n\n\nexport const hasShape = item => isNonNegativeInteger(item.x) && isNonNegativeInteger(item.y) && isNonNegativeInteger(item.w) && isNonNegativeInteger(item.h); // returns a rectangular grid block dimensioned with x, y, w, h in grid units.\n// based on a grid with 3 items across\n\nconst getShape = i => {\n  const col = i % NUMBER_OF_ITEM_COLS;\n  const row = Math.floor(i / NUMBER_OF_ITEM_COLS);\n  const itemWidth = Math.floor(MAX_ITEM_GRID_WIDTH / NUMBER_OF_ITEM_COLS);\n  const itemHeight = GRID_ROW_HEIGHT_PX * 2;\n  return {\n    x: col * itemWidth,\n    y: row * itemHeight,\n    w: itemWidth,\n    h: itemHeight\n  };\n};\n/**\n * Returns an array of items containing the x, y, w, h dimensions\n * and the item's originalheight in pixels\n * and dimensions to create the small layout (x, y, w, h)\n * @function\n * @param {Array} items\n * @returns {Array}\n */\n\n\nexport const withShape = (items = []) => {\n  const itemsWithShape = items.map((item, i) => hasShape(item) ? item : Object.assign({}, item, getShape(i)));\n  return itemsWithShape.map(item => Object.assign({}, item, {\n    originalH: item.h\n  }));\n};\nexport const getGridWidth = windowWidthPx => windowWidthPx - DASHBOARD_WRAPPER_LR_MARGIN_PX;\n\nconst getGridUnitsForSmFromPx = hPx => {\n  const gridUnitHeightPx = GRID_ROW_HEIGHT_PX + MARGIN_SM_PX[1];\n  return Math.round((hPx + MARGIN_SM_PX[1]) / gridUnitHeightPx);\n};\n\nexport const getProportionalHeight = (item, windowWidthPx) => {\n  // get w/h ratio of the original item\n  const wPx = getItemWHPx(item.w, GRID_COL_WIDTH_PX, MARGIN_PX[0]);\n  const hPx = getItemWHPx(item.h, GRID_ROW_HEIGHT_PX, MARGIN_PX[1]);\n  const ratioWH = wPx / hPx;\n\n  if (!isVisualizationType(item)) {\n    return getGridUnitsForSmFromPx(hPx);\n  }\n\n  const gridWidthPx = getGridWidth(windowWidthPx); // get new height in px based on the ratio\n\n  const newColWidthPx = (gridWidthPx - MARGIN_SM_PX[0] * (SM_SCREEN_GRID_COLUMNS - 1) - GRID_PADDING_PX[0] * 2) / SM_SCREEN_GRID_COLUMNS;\n  const newWPx = newColWidthPx * SM_SCREEN_GRID_COLUMNS;\n  const newHPx = Math.round(newWPx / ratioWH); //convert height in px back to grid units\n\n  const h = getGridUnitsForSmFromPx(newHPx); // item must be at least the set minimum\n\n  return h < SM_SCREEN_MIN_ITEM_GRID_HEIGHT ? SM_SCREEN_MIN_ITEM_GRID_HEIGHT : h;\n};\nexport const getSmallLayout = (items, windowWidthPx) => sortBy(items, ['y', 'x']).map((item, i) => Object.assign({}, item, {\n  x: 0,\n  y: i,\n  w: SM_SCREEN_GRID_COLUMNS,\n  h: getProportionalHeight(item, windowWidthPx)\n}));\nexport const getGridItemProperties = itemId => {\n  return {\n    i: itemId,\n    minH: MIN_ITEM_GRID_HEIGHT\n  };\n};\nexport const getPageBreakItemShape = (yPos, isStatic = true) => {\n  return {\n    x: 0,\n    y: yPos,\n    w: MAX_ITEM_GRID_WIDTH,\n    h: 5,\n    static: !!isStatic,\n    minH: 1\n  };\n};\nexport const getPrintTitlePageItemShape = isOneItemPerPage => {\n  return {\n    x: 0,\n    y: 0,\n    w: isOneItemPerPage ? MAX_ITEM_GRID_WIDTH_OIPP : MAX_ITEM_GRID_WIDTH,\n    h: MAX_ITEM_GRID_HEIGHT,\n    static: true,\n    minH: 1\n  };\n};\n/**\n * Calculates the grid item's height in pixels based\n * on the height in grid units. This calculation\n * is copied directly from react-grid-layout\n * calculateUtils.js (calcGridItemWHPx)\n *\n * Each row's px height is the sum of the GRID_ROW_HEIGHT_PX + MARGIN-Y\n * So the calculation is:\n * GRID_ROW_HEIGHT_PX * Number of rows\n * +\n * yMargin * Number of rows-1\n *\n * @param {Object} item item containing shape (x, y, w, h)\n */\n\nexport const getItemHeightPx = (item, windowWidthPx) => {\n  if (isSmallScreen(windowWidthPx)) {\n    const h = item.smallOriginalH ? item.smallOriginalH : getProportionalHeight(item, windowWidthPx);\n    return getItemWHPx(h, GRID_ROW_HEIGHT_PX, MARGIN_SM_PX[1]);\n  }\n\n  return getItemWHPx(item.originalH, GRID_ROW_HEIGHT_PX, MARGIN_PX[1]);\n};\n\nconst getItemWHPx = (gridUnits, colOrRowSize, marginPx) => Math.round(colOrRowSize * gridUnits + Math.max(0, gridUnits - 1) * marginPx);","import { DASHBOARD_WRAPPER_LR_MARGIN_PX } from './gridUtil';\nconst SMALL_SCREEN_BREAKPOINT = 480;\nexport const isSmallScreen = width => width <= SMALL_SCREEN_BREAKPOINT;\nexport const getBreakpoint = () => SMALL_SCREEN_BREAKPOINT - DASHBOARD_WRAPPER_LR_MARGIN_PX;","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport cx from 'classnames';\nimport SearchIcon from '../../../icons/Search';\nimport ClearButton from './ClearButton';\nimport { useWindowDimensions } from '../../WindowDimensionsProvider';\nimport { acSetDashboardsFilter, acClearDashboardsFilter } from '../../../actions/dashboardsFilter';\nimport { sGetDashboardsFilter } from '../../../reducers/dashboardsFilter';\nimport { isSmallScreen } from '../../../modules/smallScreen';\nimport classes from './styles/Filter.module.css';\nexport const KEYCODE_ENTER = 13;\nexport const KEYCODE_ESCAPE = 27;\nexport const FilterUnconnected = ({\n  clearDashboardsFilter,\n  expanded,\n  filterText,\n  setDashboardsFilter,\n  onKeypressEnter,\n  onSearchClicked\n}) => {\n  const [focusedClassName, setFocusedClassName] = useState('');\n  const [inputFocused, setInputFocus] = useState(false);\n  const {\n    width\n  } = useWindowDimensions();\n\n  const setFilterValue = event => {\n    event.preventDefault();\n    setDashboardsFilter(event.target.value);\n  };\n\n  const onKeyUp = event => {\n    switch (event.keyCode) {\n      case KEYCODE_ENTER:\n        onKeypressEnter();\n        clearDashboardsFilter();\n        break;\n\n      case KEYCODE_ESCAPE:\n        clearDashboardsFilter();\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const onFocus = event => {\n    event.preventDefault();\n    setFocusedClassName(classes.focused);\n  };\n\n  const onBlur = event => {\n    event.preventDefault();\n    setFocusedClassName('');\n  };\n\n  const onFocusInput = input => {\n    if (input && inputFocused && isSmallScreen(width)) {\n      return input.focus();\n    }\n  };\n\n  const activateSearchInput = () => {\n    onSearchClicked();\n    setInputFocus(true);\n  };\n\n  return <div className={cx(classes.container, expanded ? classes.expanded : classes.collapsed)}>\n            <button className={classes.searchButton} onClick={activateSearchInput}>\n                <SearchIcon className={classes.searchIcon} />\n            </button>\n            <div className={cx(classes.searchArea, `${focusedClassName}`)} onFocus={onFocus} onBlur={onBlur}>\n                <div className={classes.searchIconContainer}>\n                    <SearchIcon className={classes.searchIconSmall} small />\n                    <SearchIcon className={classes.searchIconLarge} />\n                </div>\n                <input className={classes.input} type=\"text\" placeholder={i18n.t('Search for a dashboard')} onChange={setFilterValue} onKeyUp={onKeyUp} value={filterText} data-test=\"search-dashboard-input\" ref={onFocusInput} />\n                {filterText && <div className={classes.clearButtonContainer}>\n                        <ClearButton onClear={clearDashboardsFilter} />\n                    </div>}\n            </div>\n        </div>;\n};\nFilterUnconnected.propTypes = {\n  clearDashboardsFilter: PropTypes.func,\n  expanded: PropTypes.bool,\n  filterText: PropTypes.string,\n  setDashboardsFilter: PropTypes.func,\n  onKeypressEnter: PropTypes.func,\n  onSearchClicked: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  filterText: sGetDashboardsFilter(state)\n});\n\nconst mapDispatchToProps = {\n  setDashboardsFilter: acSetDashboardsFilter,\n  clearDashboardsFilter: acClearDashboardsFilter\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterUnconnected);","import { SET_DASHBOARDS_FILTER, CLEAR_DASHBOARDS_FILTER } from '../reducers/dashboardsFilter'; // actions\n\nexport const acSetDashboardsFilter = value => ({\n  type: SET_DASHBOARDS_FILTER,\n  value\n});\nexport const acClearDashboardsFilter = () => ({\n  type: CLEAR_DASHBOARDS_FILTER\n});","import { TEXT, SPACER } from './itemTypes';\nimport { getGridItemProperties } from './gridUtil';\nexport const spacerContent = 'SPACER_ITEM_FOR_DASHBOARD_LAYOUT_CONVENIENCE';\nexport const emptyTextItemContent = 'TEXT_ITEM_WITH_NO_CONTENT';\n\nconst isBackendSpacerType = item => item.type === TEXT && item.text === spacerContent;\n\nconst isUiSpacerType = item => item.type === SPACER;\n\nconst isTextType = item => item.type === TEXT && item.text !== spacerContent;\n\nexport const convertUiItemsToBackend = items => items.map(item => {\n  let text = null;\n\n  if (isUiSpacerType(item)) {\n    text = spacerContent;\n  } else if (isTextType(item)) {\n    text = item.text || emptyTextItemContent;\n  }\n\n  return { ...item,\n    ...(text ? {\n      text\n    } : {})\n  };\n});\nexport const convertBackendItemsToUi = items => items.map(item => {\n  const type = isBackendSpacerType(item) ? SPACER : item.type;\n  const gridProperties = getGridItemProperties(item.id);\n  const text = isTextType(item) ? item.text === emptyTextItemContent ? '' : item.text : null;\n  return { ...item,\n    ...(text !== null ? {\n      text\n    } : {}),\n    type,\n    ...gridProperties\n  };\n});","/** @module reducers/dashboards */\nimport arrayFrom from 'd2-utilizr/lib/arrayFrom';\nimport arraySort from 'd2-utilizr/lib/arraySort';\nimport { orArray, orObject } from '../modules/util';\nimport { convertBackendItemsToUi } from '../modules/uiBackendItemConverter';\nexport const SET_DASHBOARDS = 'SET_DASHBOARDS';\nexport const ADD_DASHBOARDS = 'ADD_DASHBOARDS';\nexport const SET_DASHBOARD_STARRED = 'SET_DASHBOARD_STARRED';\nexport const SET_DASHBOARD_DISPLAY_NAME = 'SET_DASHBOARD_DISPLAY_NAME';\nexport const SET_DASHBOARD_ITEMS = 'SET_DASHBOARD_ITEMS';\nexport const DEFAULT_STATE_DASHBOARDS = {\n  byId: null,\n  items: []\n};\nexport const EMPTY_DASHBOARD = {}; // reducer helper functions\n\nconst updateDashboardProp = ({\n  state,\n  dashboardId,\n  prop,\n  value\n}) => ({\n  byId: { ...state.byId,\n    [dashboardId]: { ...state.byId[dashboardId],\n      [prop]: value\n    }\n  },\n  items: state.items\n});\n/**\n * Reducer that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n * @returns {Object}\n */\n\n\nexport default ((state = DEFAULT_STATE_DASHBOARDS, action) => {\n  switch (action.type) {\n    case SET_DASHBOARDS:\n      {\n        return {\n          byId: action.value,\n          items: []\n        };\n      }\n\n    case ADD_DASHBOARDS:\n      {\n        return { ...state,\n          byId: { ...state.byId,\n            ...action.value\n          }\n        };\n      }\n\n    case SET_DASHBOARD_STARRED:\n      {\n        return updateDashboardProp({\n          state,\n          dashboardId: action.dashboardId,\n          prop: 'starred',\n          value: action.value\n        });\n      }\n\n    case SET_DASHBOARD_DISPLAY_NAME:\n      {\n        return updateDashboardProp({\n          state,\n          dashboardId: action.dashboardId,\n          prop: 'displayName',\n          value: action.value\n        });\n      }\n\n    case SET_DASHBOARD_ITEMS:\n      {\n        return { ...state,\n          items: action.value\n        };\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetDashboardsRoot = state => state.dashboards; // selector level 1\n\n/**\n * Selector which returns a dashboard by id from the state object\n * If no matching dashboard is found it returns undefined\n * If dashboards.byId is null, then the dashboards api request\n * has not yet completed. If dashboards.byId is an empty object\n * then the dashboards api request is complete, but no dashboards\n * were returned\n *\n * @function\n * @param {Object} state The current state\n * @param {Number} id The id of the dashboard\n * @returns {Object | undefined}\n */\n\nexport const sGetDashboardById = (state, id) => orObject(sGetDashboardsRoot(state).byId)[id];\nexport const sDashboardsIsFetching = state => {\n  return sGetDashboardsRoot(state).byId === null;\n};\n/**\n * Selector which returns all dashboards (the byId object)\n *\n * @function\n * @param {Object} state The current state\n * @returns {Object | undefined}\n */\n\nexport const sGetAllDashboards = state => orObject(sGetDashboardsRoot(state).byId);\n/**\n * Selector which returns the current dashboard items\n *\n * @function\n * @param {Object} state The current state\n * @returns {Array}\n */\n\nexport const sGetDashboardItems = state => sGetDashboardsRoot(state).items; // selector level 2\n\nexport const sGetStarredDashboards = state => Object.values(sGetAllDashboards(state)).filter(dashboard => dashboard.starred === true);\nexport const sGetUnstarredDashboards = state => Object.values(sGetAllDashboards(state)).filter(dashboard => dashboard.starred === false); // selector level 3\n\nexport const sGetStarredDashboardIds = state => {\n  return sGetStarredDashboards(state).map(dashboard => dashboard.id);\n};\nexport const sGetUnstarredDashboardIds = state => sGetUnstarredDashboards(state).map(dashboard => dashboard.id);\nexport const sGetDashboardsSortedByStarred = state => [...arraySort(sGetStarredDashboards(state), 'ASC', 'displayName'), ...arraySort(sGetUnstarredDashboards(state), 'ASC', 'displayName')]; // utils\n\n/**\n * Returns the array of dashboards, customized for ui\n * @function\n * @param {Array} data The original dashboard list\n * @returns {Array}\n */\n\nexport const getCustomDashboards = data => arrayFrom(data).map(d => ({\n  id: d.id,\n  name: d.name,\n  displayName: d.displayName,\n  description: d.description,\n  displayDescription: d.displayDescription,\n  starred: d.favorite,\n  owner: d.user.name,\n  created: d.created.split('T').join(' ').substr(0, 16),\n  lastUpdated: d.lastUpdated.split('T').join(' ').substr(0, 16),\n  access: d.access,\n  numberOfItems: orArray(d.dashboardItems).length,\n  dashboardItems: convertBackendItemsToUi(d.dashboardItems)\n}));","/** @module reducers/selected */\nimport { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\nexport const SET_SELECTED_ID = 'SET_SELECTED_ID';\nexport const SET_SELECTED_ISLOADING = 'SET_SELECTED_ISLOADING';\nexport const SET_SELECTED_SHOWDESCRIPTION = 'SET_SELECTED_SHOWDESCRIPTION';\nexport const SET_SELECTED_ITEM_ACTIVE_TYPE = 'SET_SELECTED_ITEM_ACTIVE_TYPE';\nexport const CLEAR_SELECTED_ITEM_ACTIVE_TYPES = 'CLEAR_SELECTED_ITEM_ACTIVE_TYPES';\nexport const DEFAULT_STATE_SELECTED_ID = null;\nexport const DEFAULT_STATE_SELECTED_ISLOADING = false;\nexport const DEFAULT_STATE_SELECTED_SHOWDESCRIPTION = false;\nexport const DEFAULT_STATE_SELECTED_ITEM_ACTIVE_TYPES = {};\nexport const NON_EXISTING_DASHBOARD_ID = '0';\n\nconst id = (state = DEFAULT_STATE_SELECTED_ID, action) => {\n  switch (action.type) {\n    case SET_SELECTED_ID:\n      return validateReducer(action.value, DEFAULT_STATE_SELECTED_ID);\n\n    default:\n      return state;\n  }\n};\n\nconst isLoading = (state = DEFAULT_STATE_SELECTED_ISLOADING, action) => {\n  switch (action.type) {\n    case SET_SELECTED_ISLOADING:\n      return validateReducer(action.value, DEFAULT_STATE_SELECTED_ISLOADING);\n\n    default:\n      return state;\n  }\n};\n\nconst showDescription = (state = DEFAULT_STATE_SELECTED_SHOWDESCRIPTION, action) => {\n  switch (action.type) {\n    case SET_SELECTED_SHOWDESCRIPTION:\n      return validateReducer(action.value, DEFAULT_STATE_SELECTED_SHOWDESCRIPTION);\n\n    default:\n      return state;\n  }\n};\n\nconst itemActiveTypes = (state = DEFAULT_STATE_SELECTED_ITEM_ACTIVE_TYPES, action) => {\n  switch (action.type) {\n    case SET_SELECTED_ITEM_ACTIVE_TYPE:\n      {\n        return { ...state,\n          [action.id]: action.activeType\n        };\n      }\n\n    case CLEAR_SELECTED_ITEM_ACTIVE_TYPES:\n      {\n        return DEFAULT_STATE_SELECTED_ITEM_ACTIVE_TYPES;\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  id,\n  isLoading,\n  showDescription,\n  itemActiveTypes\n}); // Selectors\n\nexport const sGetSelectedRoot = state => state.selected;\nexport const sGetSelectedId = state => sGetSelectedRoot(state).id;\nexport const sGetSelectedIsLoading = state => sGetSelectedRoot(state).isLoading;\nexport const sGetSelectedShowDescription = state => sGetSelectedRoot(state).showDescription;\nexport const sGetSelectedItemActiveType = (state, id) => sGetSelectedRoot(state).itemActiveTypes[id];","import arraySort from 'd2-utilizr/lib/arraySort';\nexport const getFilteredDashboards = (dashboards, filterText) => {\n  const filteredDashboards = arraySort(Object.values(dashboards).filter(d => d.displayName.toLowerCase().includes(filterText.toLowerCase())), 'ASC', 'displayName');\n  return [...filteredDashboards.filter(d => d.starred), ...filteredDashboards.filter(d => !d.starred)];\n};","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { Link, withRouter } from 'react-router-dom';\nimport Chip from './DashboardItemChip';\nimport AddCircleIcon from '../../../icons/AddCircle';\nimport Filter from './Filter';\nimport { sGetAllDashboards } from '../../../reducers/dashboards';\nimport { sGetDashboardsFilter } from '../../../reducers/dashboardsFilter';\nimport { sGetSelectedId } from '../../../reducers/selected';\nimport { getFilteredDashboards } from '../../../modules/getFilteredDashboards';\nimport classes from './styles/Content.module.css';\n\nconst Content = ({\n  dashboards,\n  expanded,\n  filterText,\n  history,\n  selectedId,\n  onChipClicked,\n  onSearchClicked\n}) => {\n  const onSelectDashboard = () => {\n    const id = getFilteredDashboards(dashboards, filterText)[0]?.id;\n\n    if (id) {\n      history.push(id);\n    }\n  };\n\n  const getChips = () => getFilteredDashboards(dashboards, filterText).map(dashboard => <Chip key={dashboard.id} label={dashboard.displayName} starred={dashboard.starred} dashboardId={dashboard.id} selected={dashboard.id === selectedId} onClick={onChipClicked} />);\n\n  const getControlsSmall = () => <div className={classes.controlsSmall}>\n            <Filter onKeypressEnter={onSelectDashboard} onSearchClicked={onSearchClicked} expanded={expanded} />\n        </div>;\n\n  const getControlsLarge = () => <div className={classes.controlsLarge}>\n            <Link className={classes.newLink} to={'/new'} data-test=\"link-new-dashboard\">\n                <AddCircleIcon />\n            </Link>\n            <Filter onKeypressEnter={onSelectDashboard} onSearchClicked={onSearchClicked} expanded={expanded} />\n        </div>;\n\n  return <div className={cx(classes.container, expanded ? classes.expanded : classes.collapsed)}>\n            {getControlsSmall()}\n            <div className={classes.chipsContainer}>\n                {getControlsLarge()}\n                {getChips()}\n            </div>\n        </div>;\n};\n\nContent.propTypes = {\n  dashboards: PropTypes.object,\n  expanded: PropTypes.bool,\n  filterText: PropTypes.string,\n  history: PropTypes.object,\n  selectedId: PropTypes.string,\n  onChipClicked: PropTypes.func,\n  onSearchClicked: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  dashboards: sGetAllDashboards(state),\n  selectedId: sGetSelectedId(state),\n  filterText: sGetDashboardsFilter(state)\n});\n\nexport default withRouter(connect(mapStateToProps)(Content));","import React from 'react';\nexport const ChevronDown = () => <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"m11.29289 15.7071c.39053.3905 1.02369.3905 1.41422 0l4.99999-4.99999c.3905-.39053.3905-1.02369 0-1.41422-.3905-.39052-1.0237-.39052-1.4142 0l-4.2929 4.2929-4.29289-4.2929c-.39053-.39052-1.02369-.39052-1.41422 0-.39052.39053-.39052 1.02369 0 1.41422z\" fill=\"#a0adba\" />\n    </svg>;\nexport const ChevronUp = () => <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"m11.2928932 8.29289322c.360484-.36048396.927715-.3882135 1.3200062-.08318861l.0942074.08318861 5 4.99999998c.3905243.3905243.3905243 1.0236893 0 1.4142136-.360484.3604839-.927715.3882135-1.3200062.0831886l-.0942074-.0831886-4.2928932-4.2921068-4.29289322 4.2921068c-.36048396.3604839-.92771502.3882135-1.32000622.0831886l-.09420734-.0831886c-.36048396-.360484-.3882135-.927715-.08318861-1.3200062l.08318861-.0942074z\" fill=\"#a0adba\" />\n    </svg>;","import React, { useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Tooltip } from '@dhis2/ui';\nimport { ChevronDown, ChevronUp } from './assets/icons';\nimport classes from './styles/ShowMoreButton.module.css';\n\nconst ShowMoreButton = ({\n  onClick,\n  dashboardBarIsExpanded,\n  disabled\n}) => {\n  const containerRef = useRef(null);\n  const buttonLabel = dashboardBarIsExpanded ? i18n.t('Show fewer dashboards') : i18n.t('Show more dashboards');\n\n  const onButtonClicked = () => {\n    // The click may happen on the svg or path\n    // element of the button icon.\n    // In that case it is necessary to trigger\n    // the mouseout on the button element\n    // to ensure that the tooltip is removed\n    const buttonEl = containerRef.current.children[0];\n    const event = new MouseEvent('mouseout', {\n      bubbles: true,\n      cancelable: false\n    });\n    onClick();\n    buttonEl.dispatchEvent(event);\n  };\n\n  return <div className={classes.container} ref={containerRef}>\n            {disabled ? <div className={classes.disabled}>\n                    <ChevronDown />\n                </div> : <Tooltip content={buttonLabel} placement=\"bottom\">\n                    {({\n        onMouseOver,\n        onMouseOut,\n        ref\n      }) => <button className={classes.showMore} onClick={onButtonClicked} data-test=\"showmore-button\" aria-label={buttonLabel} ref={ref} onMouseOver={onMouseOver} onMouseOut={onMouseOut}>\n                            {dashboardBarIsExpanded ? <ChevronUp /> : <ChevronDown />}\n                        </button>}\n                </Tooltip>}\n        </div>;\n};\n\nShowMoreButton.propTypes = {\n  dashboardBarIsExpanded: PropTypes.bool,\n  disabled: PropTypes.bool,\n  onClick: PropTypes.func\n};\nexport default ShowMoreButton;","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classes from './styles/DragHandle.module.css';\n\nconst DragHandle = ({\n  onHeightChanged,\n  setDragging\n}) => {\n  const [startingY, setStartingY] = useState(0);\n\n  const onStartDrag = e => {\n    setStartingY(e.clientY);\n    setDragging(true);\n    window.addEventListener('mousemove', onDrag);\n    window.addEventListener('mouseup', onEndDrag);\n  };\n\n  const onDrag = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    const currentY = e.clientY;\n\n    if (currentY !== startingY && currentY > 0) {\n      requestAnimationFrame(() => {\n        onHeightChanged(currentY);\n      });\n    }\n  };\n\n  const onEndDrag = () => {\n    setDragging(false);\n    window.removeEventListener('mousemove', onDrag);\n    window.removeEventListener('mouseup', onEndDrag);\n  };\n\n  return <div className={classes.draghandle} onMouseDown={onStartDrag} data-test=\"controlbar-drag-handle\" />;\n};\n\nDragHandle.propTypes = {\n  setDragging: PropTypes.func,\n  onHeightChanged: PropTypes.func\n};\nexport default DragHandle;","const ROW_HEIGHT = 40;\nconst PADDING_TOP = 10;\nconst SHOWMORE_BUTTON_HEIGHT = 21; // 27px - 6px below bottom edge of ctrlbar\n\nexport const getRowsFromHeight = height => {\n  return Math.floor((height - SHOWMORE_BUTTON_HEIGHT - PADDING_TOP) / ROW_HEIGHT);\n};","/** @module reducers/controlBar */\nimport { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\nexport const SET_CONTROLBAR_USER_ROWS = 'SET_CONTROLBAR_USER_ROWS';\nexport const DEFAULT_STATE_CONTROLBAR_ROWS = 1;\n\nconst userRows = (state = DEFAULT_STATE_CONTROLBAR_ROWS, action) => {\n  switch (action.type) {\n    case SET_CONTROLBAR_USER_ROWS:\n      return validateReducer(action.value, DEFAULT_STATE_CONTROLBAR_ROWS);\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  userRows\n});\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\n\nconst sGetControlBarRoot = state => state.controlBar; // Selector dependency level 2\n\n\nexport const sGetControlBarUserRows = state => sGetControlBarRoot(state).userRows;","import { getInstance } from 'd2';\nexport const NAMESPACE = 'dashboard';\nexport const hasNamespace = async (d2) => await d2.currentUser.dataStore.has(NAMESPACE);\nexport const getNamespace = async (d2, hasNamespace) => hasNamespace ? await d2.currentUser.dataStore.get(NAMESPACE) : await d2.currentUser.dataStore.create(NAMESPACE);\nexport const apiPostUserDataStoreValue = async (key, value) => {\n  const d2 = await getInstance();\n  const ns = await getNamespace(d2, hasNamespace);\n  return ns.set(key, value);\n};\nexport const apiGetUserDataStoreValue = async (key, defaultValue) => {\n  const d2 = await getInstance();\n  const namespace = await getNamespace(d2, await hasNamespace(d2));\n  const hasKey = namespace?.keys?.find(k => k === key);\n\n  if (hasKey) {\n    return await namespace.get(key);\n  } else {\n    await apiPostUserDataStoreValue(key, defaultValue, namespace);\n    console.log('(These errors to /userDataStore can be ignored)');\n    return defaultValue;\n  }\n};","import { apiGetUserDataStoreValue, apiPostUserDataStoreValue } from './userDataStore';\nimport { DEFAULT_STATE_CONTROLBAR_ROWS } from '../reducers/controlBar';\nconst KEY_CONTROLBAR_ROWS = 'controlBarRows';\nexport const apiGetControlBarRows = async () => await apiGetUserDataStoreValue(KEY_CONTROLBAR_ROWS, DEFAULT_STATE_CONTROLBAR_ROWS);\nexport const apiPostControlBarRows = async (value) => await apiPostUserDataStoreValue(KEY_CONTROLBAR_ROWS, value);","import { SET_CONTROLBAR_USER_ROWS } from '../reducers/controlBar';\nimport { apiGetControlBarRows } from '../api/controlBar'; // actions\n\nexport const acSetControlBarUserRows = rows => ({\n  type: SET_CONTROLBAR_USER_ROWS,\n  value: rows\n}); // thunks\n\nexport const tSetControlBarRows = () => async dispatch => {\n  const onSuccess = rows => {\n    dispatch(acSetControlBarUserRows(rows));\n  };\n\n  const onError = error => {\n    console.log('Error (apiGetControlBarRows): ', error);\n    return error;\n  };\n\n  try {\n    const controlBarRows = await apiGetControlBarRows();\n    return onSuccess(controlBarRows);\n  } catch (err) {\n    return onError(err);\n  }\n};","import React, { useState, useRef, useEffect, createRef } from 'react';\nimport { connect } from 'react-redux';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport Content from './Content';\nimport ShowMoreButton from './ShowMoreButton';\nimport DragHandle from './DragHandle';\nimport { getRowsFromHeight } from './controlBarDimensions';\nimport { sGetControlBarUserRows } from '../../../reducers/controlBar';\nimport { acSetControlBarUserRows } from '../../../actions/controlBar';\nimport { apiPostControlBarRows } from '../../../api/controlBar';\nimport classes from './styles/DashboardsBar.module.css';\nexport const MIN_ROW_COUNT = 1;\nexport const MAX_ROW_COUNT = 10;\n\nconst DashboardsBar = ({\n  userRows,\n  updateUserRows,\n  expanded,\n  onExpandedChanged\n}) => {\n  const [dragging, setDragging] = useState(false);\n  const userRowsChanged = useRef(false);\n  const ref = createRef();\n  const rootElement = document.documentElement;\n\n  const adjustRows = newHeight => {\n    const newRows = Math.max(MIN_ROW_COUNT, getRowsFromHeight(newHeight - 52) // don't rush the transition to a bigger row count\n    );\n\n    if (newRows !== userRows) {\n      updateUserRows(Math.min(newRows, MAX_ROW_COUNT));\n      userRowsChanged.current = true;\n    }\n  };\n\n  useEffect(() => {\n    rootElement.style.setProperty('--user-rows-count', userRows);\n  }, [userRows]);\n  useEffect(() => {\n    if (!dragging && userRowsChanged.current) {\n      apiPostControlBarRows(userRows);\n      userRowsChanged.current = false;\n    }\n  }, [dragging, userRowsChanged.current]);\n\n  const scrollToTop = () => {\n    if (expanded) {\n      ref.current.scroll(0, 0);\n    }\n  };\n\n  const toggleExpanded = () => {\n    if (expanded) {\n      cancelExpanded();\n    } else {\n      scrollToTop();\n      onExpandedChanged(!expanded);\n    }\n  };\n\n  const cancelExpanded = () => {\n    scrollToTop();\n    onExpandedChanged(false);\n  };\n\n  return <div className={expanded ? classes.expanded : classes.collapsed} data-test=\"dashboards-bar\">\n            <div className={cx(classes.container)}>\n                <div className={classes.content} ref={ref}>\n                    <Content onChipClicked={cancelExpanded} onSearchClicked={toggleExpanded} expanded={expanded} />\n                </div>\n                <ShowMoreButton onClick={toggleExpanded} dashboardBarIsExpanded={expanded} disabled={!expanded && userRows === MAX_ROW_COUNT} />\n                <DragHandle setDragging={setDragging} onHeightChanged={adjustRows} />\n            </div>\n            <div className={cx(classes.spacer)} />\n        </div>;\n};\n\nDashboardsBar.propTypes = {\n  expanded: PropTypes.bool,\n  updateUserRows: PropTypes.func,\n  userRows: PropTypes.number,\n  onExpandedChanged: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  userRows: sGetControlBarUserRows(state)\n});\n\nconst mapDispatchToProps = {\n  updateUserRows: acSetControlBarUserRows\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(DashboardsBar);","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst NoContentMessage = ({\n  text\n}) => <div style={{\n  padding: '50px 10px',\n  textAlign: 'center',\n  fontSize: '15px',\n  fontWeight: 500,\n  color: colors.grey600\n}}>\n        {text}\n    </div>;\n\nNoContentMessage.propTypes = {\n  text: PropTypes.string\n};\nexport default NoContentMessage;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport classes from './styles/DashboardContainer.module.css';\n\nconst DashboardContainer = ({\n  children,\n  covered\n}) => {\n  return <div className={cx(classes.container, 'dashboard-scroll-container', covered && classes.covered)}>\n            {children}\n        </div>;\n};\n\nDashboardContainer.propTypes = {\n  children: PropTypes.node,\n  covered: PropTypes.bool\n};\nexport default DashboardContainer;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nexport const ThreeDots = () => <svg height=\"18\" viewBox=\"0 0 18 18\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"m4 7.5c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm10 0c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm-5 0c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5z\" fill=\"#6e7a8a\" />\n    </svg>;\nexport const SpeechBubble = () => <svg height=\"20\" viewBox=\"0 0 20 20\" width=\"20\" xmlns=\"http://www.w3.org/2000/svg\" style={{\n  margin: '3px 2px 0 2px'\n}} // Temporary fix for the misaligned icon, should be removed once the icon is replaced\n>\n        <path d=\"m20 2h-16c-1.1 0-1.99.9-1.99 2l-.01 18 4-4h14c1.1 0 2-.9 2-2v-12c0-1.1-.9-2-2-2zm-2 12h-12v-2h12zm0-3h-12v-2h12zm0-3h-12v-2h12z\" fill=\"#6e7a8a\" fillRule=\"evenodd\" transform=\"translate(-2 -2)\" />\n    </svg>;\nexport const Warning = () => <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" fill={colors.grey600}>\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z\" />\n    </svg>;\nexport const Fullscreen = () => <svg height=\"16\" viewBox=\"0 0 16 16\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"m6.85355339 9.14644661c.17356635.17356635.1928515.44299075.05785545.63785889l-.05785545.06924789-4.14755339 4.14644661h2.794c.24545989 0 .44960837.1768752.49194433.4101244l.00805567.0898756c0 .2454599-.17687516.4496084-.41012437.4919443l-.08987563.0080557h-4c-.24545989 0-.44960837-.1768752-.49194433-.4101244l-.00805567-.0898756v-4c0-.2761424.22385763-.5.5-.5.24545989 0 .44960837.1768752.49194433.4101244l.00805567.0898756v2.792l4.14644661-4.14555339c.19526215-.19526215.51184463-.19526215.70710678 0zm6.14644661-2.14644661v6h-6v-1h5v-5zm-4-4v1h-5v5h-1v-6zm5.5-2c.2454599 0 .4496084.17687516.4919443.41012437l.0080557.08987563v4c0 .27614237-.2238576.5-.5.5-.2454599 0-.4496084-.17687516-.4919443-.41012437l-.0080557-.08987563v-2.794l-4.14644661 4.14755339c-.19526215.19526215-.51184463.19526215-.70710678 0-.17356635-.17356635-.1928515-.44299075-.05785545-.63785889l.05785545-.06924789 4.14655339-4.14744661-2.793.001c-.2454599 0-.4496084-.17687516-.4919443-.41012437l-.0080557-.08987563c0-.24545989.1768752-.44960837.4101244-.49194433l.0898756-.00805567z\" fill=\"inherit\" />\n    </svg>;\nexport const ExitFullscreen = () => <svg height=\"16\" viewBox=\"0 0 16 16\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"m6.5 9c.24545989 0 .44960837.17687516.49194433.41012437l.00805567.08987563v4c0 .2761424-.22385763.5-.5.5-.24545989 0-.44960837-.1768752-.49194433-.4101244l-.00805567-.0898756v-2.794l-3.64644661 3.6475534c-.19526215.1952621-.51184463.1952621-.70710678 0-.17356635-.1735664-.1928515-.4429908-.05785545-.6378589l.05785545-.0692479 3.64555339-3.6464466h-2.792c-.24545989 0-.44960837-.17687516-.49194433-.41012437l-.00805567-.08987563c0-.24545989.17687516-.44960837.41012437-.49194433l.08987563-.00805567zm7.5-.5v5.5h-5.5v-1h4.5v-4.5zm-6.5-6.5v1h-4.5v4.5h-1v-5.5zm6.8535534-.35355339c.1735663.17356635.1928515.44299075.0578554.63785889l-.0578554.06924789-3.6475534 3.64644661h2.794c.2454599 0 .4496084.17687516.4919443.41012437l.0080557.08987563c0 .24545989-.1768752.44960837-.4101244.49194433l-.0898756.00805567h-4c-.24545989 0-.44960837-.17687516-.49194433-.41012437l-.00805567-.08987563v-4c0-.27614237.22385763-.5.5-.5.24545989 0 .44960837.17687516.49194433.41012437l.00805567.08987563v2.792l3.6464466-3.64555339c.1952622-.19526215.5118446-.19526215.7071068 0z\" fill=\"inherit\" />\n    </svg>;","import { apiGetUserDataStoreValue, apiPostUserDataStoreValue } from './userDataStore';\nimport { DEFAULT_STATE_SELECTED_SHOWDESCRIPTION } from '../reducers/selected';\nconst KEY_SHOW_DESCRIPTION = 'showDescription';\nexport const apiGetShowDescription = async () => await apiGetUserDataStoreValue(KEY_SHOW_DESCRIPTION, DEFAULT_STATE_SELECTED_SHOWDESCRIPTION);\nexport const apiPostShowDescription = value => apiPostUserDataStoreValue(KEY_SHOW_DESCRIPTION, value);","export const RECEIVED_USER = 'RECEIVED_USER';\nexport const DEFAULT_STATE_USER = {\n  id: '',\n  username: '',\n  uiLocale: '',\n  isSuperuser: false\n};\nexport default ((state = DEFAULT_STATE_USER, action) => {\n  switch (action.type) {\n    case RECEIVED_USER:\n      {\n        return fromD2ToUserObj(action.value);\n      }\n\n    default:\n      return state;\n  }\n});\n\nfunction fromD2ToUserObj(d2Object) {\n  return {\n    id: d2Object.id,\n    username: d2Object.username,\n    uiLocale: d2Object.settings.keyUiLocale,\n    isSuperuser: d2Object.authorities.has('ALL')\n  };\n} // selectors\n\n\nexport const sGetUserId = state => state.user.id;\nexport const sGetUserUsername = state => state.user.username;\nexport const sGetIsSuperuser = state => state.user.isSuperuser;\nexport const sGetUiLocale = state => state.user.uiLocale;","import { getDimensionById, DIMENSION_ID_PERIOD, DIMENSION_ID_ORGUNIT } from '@dhis2/analytics';\nexport const SET_DIMENSIONS = 'SET_DIMENSIONS';\nexport const DEFAULT_DIMENSIONS = [getDimensionById(DIMENSION_ID_PERIOD), getDimensionById(DIMENSION_ID_ORGUNIT)];\nexport default ((state = DEFAULT_DIMENSIONS, action) => {\n  switch (action.type) {\n    case SET_DIMENSIONS:\n      {\n        return [...DEFAULT_DIMENSIONS, ...action.value];\n      }\n\n    default:\n      return state;\n  }\n});\nexport const sGetDimensions = state => state.dimensions;","import { sGetDimensions } from './dimensions';\nimport { createSelector } from 'reselect';\nexport const CLEAR_ITEM_FILTERS = 'CLEAR_ITEM_FILTERS';\nexport const SET_ITEM_FILTERS = 'SET_ITEM_FILTERS';\nexport const ADD_ITEM_FILTER = 'ADD_ITEM_FILTER';\nexport const REMOVE_ITEM_FILTER = 'REMOVE_ITEM_FILTER';\nexport const DEFAULT_STATE_ITEM_FILTERS = {};\nexport default ((state = DEFAULT_STATE_ITEM_FILTERS, action) => {\n  switch (action.type) {\n    case ADD_ITEM_FILTER:\n      {\n        return { ...state,\n          [action.filter.id]: action.filter.value\n        };\n      }\n\n    case REMOVE_ITEM_FILTER:\n      {\n        const newState = { ...state\n        };\n        delete newState[action.id];\n        return newState;\n      }\n\n    case SET_ITEM_FILTERS:\n      {\n        return action.filters;\n      }\n\n    case CLEAR_ITEM_FILTERS:\n      {\n        return DEFAULT_STATE_ITEM_FILTERS;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetItemFiltersRoot = state => state.itemFilters; // simplify the filters structure to:\n// [{ id: 'pe', name: 'Period', values: [{ id: 2019: name: '2019' }, {id: 'LAST_MONTH', name: 'Last month' }]}, ...]\n\nexport const sGetNamedItemFilters = createSelector([sGetItemFiltersRoot, sGetDimensions], (filters, dimensions) => Object.keys(filters).reduce((arr, id) => {\n  arr.push({\n    id: id,\n    name: dimensions.find(dimension => dimension.id === id).name,\n    values: filters[id].map(value => ({\n      id: value.id,\n      name: value.displayName || value.name\n    }))\n  });\n  return arr;\n}, []));","import { ADD_ITEM_FILTER, REMOVE_ITEM_FILTER, SET_ITEM_FILTERS, CLEAR_ITEM_FILTERS } from '../reducers/itemFilters';\nexport const FILTER_ORG_UNIT = 'ou'; // actions\n\nexport const acAddItemFilter = filter => ({\n  type: ADD_ITEM_FILTER,\n  filter\n});\nexport const acRemoveItemFilter = id => ({\n  type: REMOVE_ITEM_FILTER,\n  id\n});\nexport const acClearItemFilters = () => ({\n  type: CLEAR_ITEM_FILTERS\n});\nexport const acSetItemFilters = filters => ({\n  type: SET_ITEM_FILTERS,\n  filters\n});","import update from 'immutability-helper';\nimport { arrayToIdMap } from '../modules/util';\nexport const RECEIVED_MESSAGES = 'RECEIVED_MESSAGES';\nexport default ((state = {}, action) => {\n  switch (action.type) {\n    case RECEIVED_MESSAGES:\n      {\n        const conversations = arrayToIdMap(action.value);\n        const newState = update(state, {\n          $merge: conversations\n        });\n        return newState;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetMessagesRoot = state => state.messages;","export const messageConversationsQuery = {\n  resource: 'messageConversations',\n  params: {\n    fields: 'id,messageCount,lastUpdated,messageType,displayName,read,messages[id,read,sender[id,displayName],text,lastUpdated]',\n    order: 'read:asc',\n    pageSize: 200\n  }\n};\nexport const getMessages = async dataEngine => {\n  try {\n    const {\n      messageConversations\n    } = await dataEngine.query({\n      messageConversations: messageConversationsQuery\n    });\n    return messageConversations.messageConversations;\n  } catch (error) {\n    console.log('Error:', error);\n  }\n};","import { RECEIVED_MESSAGES } from '../../../reducers/messages';\nimport { getMessages } from '../../../api/messages';\n\nconst onError = (action, error) => {\n  console.log(`Error in action ${action}: ${error}`);\n  return error;\n};\n\nexport const receivedMessages = value => ({\n  type: RECEIVED_MESSAGES,\n  value\n});\nexport const tGetMessages = dataEngine => async dispatch => {\n  try {\n    const messageConversations = await getMessages(dataEngine);\n    return dispatch(receivedMessages(messageConversations));\n  } catch (err) {\n    return onError('Get Messages', err);\n  }\n};","export const SET_ALERT_MESSAGE = 'SET_ALERT_MESSAGE';\nexport const CLEAR_ALERT_MESSAGE = 'CLEAR_ALERT_MESSAGE';\nexport const DEFAULT_STATE_ALERT = null;\nexport default ((state = DEFAULT_STATE_ALERT, action) => {\n  switch (action.type) {\n    case SET_ALERT_MESSAGE:\n      {\n        return action.value;\n      }\n\n    case CLEAR_ALERT_MESSAGE:\n      {\n        return DEFAULT_STATE_ALERT;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetAlertMessage = state => state.alert;","import { SET_ALERT_MESSAGE, CLEAR_ALERT_MESSAGE } from '../reducers/alert';\nexport const acSetAlertMessage = value => ({\n  type: SET_ALERT_MESSAGE,\n  value\n});\nexport const acClearAlertMessage = () => ({\n  type: CLEAR_ALERT_MESSAGE\n});","import { orObject } from '../modules/util';\nimport objectClean from 'd2-utilizr/lib/objectClean';\n/** @module reducers/visualizations */\n\nexport const ADD_VISUALIZATION = 'ADD_VISUALIZATION';\nexport const SET_ACTIVE_VISUALIZATION_TYPE = 'SET_ACTIVE_VISUALIZATION_TYPE';\nexport const CLEAR_VISUALIZATIONS = 'CLEAR_VISUALIZATIONS';\nexport const DEFAULT_STATE_VISUALIZATIONS = {};\n\nconst isEmpty = p => p === undefined || p === null;\n\nexport default ((state = DEFAULT_STATE_VISUALIZATIONS, action) => {\n  switch (action.type) {\n    case ADD_VISUALIZATION:\n      {\n        return { ...state,\n          [action.value.id]: objectClean({ ...orObject(state[action.value.id]),\n            ...action.value\n          }, isEmpty)\n        };\n      }\n\n    case CLEAR_VISUALIZATIONS:\n      {\n        return DEFAULT_STATE_VISUALIZATIONS;\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetVisualizationsRoot = state => state.visualizations; // selectors level 1\n\nexport const sGetVisualization = (state, id) => {\n  return sGetVisualizationsRoot(state)[id];\n};","import { ADD_VISUALIZATION, CLEAR_VISUALIZATIONS } from '../reducers/visualizations';\nexport const acAddVisualization = value => ({\n  type: ADD_VISUALIZATION,\n  value\n});\nexport const acClearVisualizations = () => ({\n  type: CLEAR_VISUALIZATIONS\n});","import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { getEndPointName, MAP } from '../modules/itemTypes';\nimport { getVisualizationId } from '../modules/item'; // Id, name\n\nexport const getIdNameFields = ({\n  rename\n} = {}) => ['id', `${rename ? 'displayName~rename(name)' : 'name,displayName'}`]; // Item\n\nexport const getItemFields = () => ['dimensionItem~rename(id)', 'displayName~rename(name)', 'dimensionItemType']; // Dimension\n\nexport const getDimensionFields = ({\n  withItems\n}) => arrayClean(['dimension', 'legendSet[id]', 'filter', 'programStage', withItems ? `items[${getItemFields().join(',')}]` : ``]); // Axis\n\nexport const getAxesFields = ({\n  withItems\n}) => [`columns[${getDimensionFields({\n  withItems\n}).join(',')}]`, `rows[${getDimensionFields({\n  withItems\n}).join(',')}]`, `filters[${getDimensionFields({\n  withItems\n}).join(',')}]`]; // Favorite\n\nexport const getFavoriteFields = ({\n  withDimensions,\n  withOptions\n}) => {\n  return arrayClean([`${getIdNameFields({\n    rename: true\n  }).join(',')}`, 'displayDescription~rename(description)', withDimensions ? `${getAxesFields({\n    withItems: true\n  }).join(',')}` : ``, withOptions ? ['*', '!attributeDimensions', '!attributeValues', '!category', '!categoryDimensions', '!categoryOptionGroupSetDimensions', '!columnDimensions', '!dataDimensionItems', '!dataElementDimensions', '!dataElementGroupSetDimensions', '!filterDimensions', '!itemOrganisationUnitGroups', '!lastUpdatedBy', '!organisationUnitGroupSetDimensions', '!organisationUnitLevels', '!organisationUnits', '!programIndicatorDimensions', '!relativePeriods', '!reportParams', '!rowDimensions', '!translations', '!userOrganisationUnit', '!userOrganisationUnitChildren', '!userOrganisationUnitGrandChildren'].join(',') : '']);\n};\nexport const getFavoritesFields = ({\n  withDimensions\n}) => [`reportTable[${getFavoriteFields({\n  withDimensions\n}).join(',')}]`, `chart[${['type', ...getFavoriteFields({\n  withDimensions\n})].join(',')}]`, `map[${getFavoriteFields({\n  withDimensions\n}).join(',')}]`, `eventReport[${getFavoriteFields({\n  withDimensions\n}).join(',')}]`, `eventChart[${getFavoriteFields({\n  withDimensions\n}).join(',')}]`]; // List item\n\nexport const getListItemFields = () => [`reports[${['type', ...getIdNameFields({\n  rename: true\n})].join(',')}]`, `resources[${getIdNameFields({\n  rename: true\n}).join(',')}]`, `users[${getIdNameFields({\n  rename: true\n}).join(',')}]`]; // Map\n\nexport const getMapFields = () => [`${getIdNameFields({\n  rename: true\n}).join(',')}`, 'user,longitude,latitude,zoom,basemap', `mapViews[${getFavoriteFields({\n  withDimensions: true,\n  withOptions: true\n})}]`]; // Api\n\nexport const apiFetchVisualization = async item => {\n  const id = getVisualizationId(item);\n  const fields = item.type === MAP ? getMapFields() : getFavoriteFields({\n    withDimensions: true,\n    withOptions: true\n  });\n  const d2 = await getInstance();\n  return await d2.Api.getApi().get(`${getEndPointName(item.type)}/${id}`, {\n    fields\n  });\n};","import arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { getListItemFields, getFavoritesFields, getIdNameFields } from './metadata'; // Helper functions\n\nexport const onError = error => console.log('Error: ', error); // Dashboard item\n\nexport const getDashboardItemsFields = ({\n  withFavorite\n} = {}) => arrayClean(['id', 'type', 'shape', 'x', 'y', 'width~rename(w)', 'height~rename(h)', 'messages', 'text', 'appKey', `${getListItemFields().join(',')}`, withFavorite ? `${getFavoritesFields({\n  withDimensions: withFavorite.withDimensions\n}).join(',')}` : ``]); // Dashboard\n\nexport const getDashboardFields = ({\n  withItems,\n  withFavorite\n} = {}) => arrayClean([`${getIdNameFields().join(',')}`, 'description', 'displayDescription', 'favorite', `user[${getIdNameFields({\n  rename: true\n}).join(',')}]`, 'created', 'lastUpdated', 'access', 'href', // needed for d2-ui-translations-dialog, since we don't pass a d2 Model anymore\nwithItems ? `dashboardItems[${getDashboardItemsFields({\n  withFavorite\n}).join(',')}]` : ``]);","import arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { onError, getDashboardFields } from './index';\nexport const dashboardsQuery = {\n  resource: 'dashboards',\n  params: {\n    fields: [getDashboardFields(), 'dashboardItems[id]'].join(','),\n    paging: false\n  }\n};\nexport const dashboardQuery = {\n  resource: 'dashboards',\n  id: ({\n    id\n  }) => id,\n  params: {\n    fields: arrayClean(getDashboardFields({\n      withItems: true,\n      withFavorite: {\n        withDimensions: false\n      }\n    })).join(',')\n  }\n};\nexport const deleteDashboardMutation = {\n  type: 'delete',\n  resource: 'dashboards',\n  id: ({\n    id\n  }) => id\n}; // Get \"all\" dashboards on startup\n\nexport const apiFetchDashboards = async dataEngine => {\n  try {\n    const dashboardsData = await dataEngine.query({\n      dashboards: dashboardsQuery\n    });\n    return dashboardsData.dashboards.dashboards;\n  } catch (error) {\n    onError(error);\n  }\n}; // Get more info about selected dashboard\n\nexport const apiFetchDashboard = async (dataEngine, id) => {\n  try {\n    const dashboardData = await dataEngine.query({\n      dashboard: dashboardQuery\n    }, {\n      variables: {\n        id\n      }\n    });\n    return dashboardData.dashboard;\n  } catch (error) {\n    onError(error);\n  }\n};\nexport const apiDeleteDashboard = async (dataEngine, id) => {\n  try {\n    await dataEngine.mutate(deleteDashboardMutation, {\n      variables: {\n        id\n      }\n    });\n  } catch (error) {\n    onError(error);\n  }\n};","import i18n from '@dhis2/d2-i18n';\nimport { getCustomDashboards, sGetDashboardById } from '../reducers/dashboards';\nimport { SET_SELECTED_ID, SET_SELECTED_ISLOADING, SET_SELECTED_SHOWDESCRIPTION, SET_SELECTED_ITEM_ACTIVE_TYPE, CLEAR_SELECTED_ITEM_ACTIVE_TYPES, sGetSelectedIsLoading, sGetSelectedId } from '../reducers/selected';\nimport { sGetUserUsername } from '../reducers/user';\nimport { acSetDashboardItems, acAppendDashboards } from './dashboards';\nimport { acClearItemFilters } from './itemFilters';\nimport { tGetMessages } from '../components/Item/MessagesItem/actions';\nimport { acSetAlertMessage, acClearAlertMessage } from './alert';\nimport { acAddVisualization, acClearVisualizations } from './visualizations';\nimport { apiFetchDashboard } from '../api/dashboards';\nimport { storePreferredDashboardId } from '../api/localStorage';\nimport { apiGetShowDescription } from '../api/description';\nimport { withShape } from '../modules/gridUtil';\nimport { getVisualizationFromItem } from '../modules/item';\nimport { REPORT_TABLE, CHART, MAP, EVENT_REPORT, EVENT_CHART, MESSAGES } from '../modules/itemTypes'; // actions\n\nexport const acSetSelectedId = value => ({\n  type: SET_SELECTED_ID,\n  value\n});\nexport const acSetSelectedIsLoading = value => ({\n  type: SET_SELECTED_ISLOADING,\n  value\n});\nexport const acSetSelectedShowDescription = value => ({\n  type: SET_SELECTED_SHOWDESCRIPTION,\n  value\n});\nexport const acSetSelectedItemActiveType = (id, activeType) => {\n  const action = {\n    type: SET_SELECTED_ITEM_ACTIVE_TYPE,\n    id,\n    activeType\n  };\n  return action;\n};\nexport const acClearSelectedItemActiveTypes = () => ({\n  type: CLEAR_SELECTED_ITEM_ACTIVE_TYPES\n}); // thunks\n\nexport const tSetSelectedDashboardById = id => async (dispatch, getState, dataEngine) => {\n  dispatch(acSetSelectedIsLoading(true));\n  const alertTimeout = setTimeout(() => {\n    const name = sGetDashboardById(getState(), id)?.displayName;\n\n    if (sGetSelectedIsLoading(getState()) && name) {\n      dispatch(acSetAlertMessage(i18n.t('Loading dashboard – {{name}}', {\n        name\n      })));\n    }\n  }, 500);\n\n  const onSuccess = selected => {\n    dispatch(acAppendDashboards(selected));\n    const customDashboard = getCustomDashboards(selected)[0];\n    dispatch(acSetDashboardItems(withShape(customDashboard.dashboardItems)));\n    storePreferredDashboardId(sGetUserUsername(getState()), id);\n\n    if (id !== sGetSelectedId(getState())) {\n      dispatch(acClearItemFilters());\n      dispatch(acClearVisualizations());\n      dispatch(acClearSelectedItemActiveTypes());\n    }\n\n    customDashboard.dashboardItems.forEach(item => {\n      switch (item.type) {\n        case REPORT_TABLE:\n        case CHART:\n        case MAP:\n        case EVENT_REPORT:\n        case EVENT_CHART:\n          dispatch(acAddVisualization(getVisualizationFromItem(item)));\n          break;\n\n        case MESSAGES:\n          dispatch(tGetMessages(dataEngine));\n          break;\n\n        default:\n          break;\n      }\n    });\n    dispatch(acSetSelectedId(id));\n    dispatch(acSetSelectedIsLoading(false));\n    clearTimeout(alertTimeout);\n    dispatch(acClearAlertMessage());\n    return selected;\n  };\n\n  try {\n    const dashboard = await apiFetchDashboard(dataEngine, id);\n    return onSuccess(dashboard);\n  } catch (err) {\n    console.error('Error: ', err);\n    return err;\n  }\n};\nexport const tSetShowDescription = () => async dispatch => {\n  const onSuccess = value => {\n    dispatch(acSetSelectedShowDescription(value));\n  };\n\n  try {\n    const showDescription = await apiGetShowDescription();\n    return onSuccess(showDescription);\n  } catch (err) {\n    console.error('Error (apiGetShowDescription): ', err);\n    return err;\n  }\n};","export const getPreferredDashboardId = username => localStorage.getItem(`dhis2.dashboard.current.${username}`) || undefined;\nexport const storePreferredDashboardId = (username, dashboardId) => {\n  localStorage.setItem(`dhis2.dashboard.current.${username}`, dashboardId);\n};","import { SET_DASHBOARDS, ADD_DASHBOARDS, SET_DASHBOARD_STARRED, SET_DASHBOARD_DISPLAY_NAME, SET_DASHBOARD_ITEMS, getCustomDashboards, sGetDashboardById, sGetDashboardsSortedByStarred } from '../reducers/dashboards';\nimport { NON_EXISTING_DASHBOARD_ID } from '../reducers/selected';\nimport { sGetUserUsername } from '../reducers/user';\nimport { tSetSelectedDashboardById, acSetSelectedId } from './selected';\nimport { apiFetchDashboards, apiDeleteDashboard } from '../api/dashboards';\nimport { getPreferredDashboardId } from '../api/localStorage';\nimport { arrayToIdMap } from '../modules/util'; // actions\n\nexport const acSetDashboards = dashboards => ({\n  type: SET_DASHBOARDS,\n  value: arrayToIdMap(getCustomDashboards(dashboards))\n});\nexport const acAppendDashboards = dashboards => ({\n  type: ADD_DASHBOARDS,\n  value: arrayToIdMap(getCustomDashboards(dashboards))\n});\nexport const acSetDashboardStarred = (dashboardId, isStarred) => ({\n  type: SET_DASHBOARD_STARRED,\n  dashboardId: dashboardId,\n  value: isStarred\n});\nexport const acSetDashboardDisplayName = (dashboardId, value) => ({\n  type: SET_DASHBOARD_DISPLAY_NAME,\n  dashboardId,\n  value\n});\nexport const acSetDashboardItems = value => ({\n  type: SET_DASHBOARD_ITEMS,\n  value\n}); // thunks\n\nexport const tFetchDashboards = () => async (dispatch, getState, dataEngine) => {\n  const dashboards = await apiFetchDashboards(dataEngine);\n  dispatch(acSetDashboards(dashboards));\n};\nexport const tSelectDashboard = id => async (dispatch, getState) => {\n  try {\n    const state = getState();\n    let dashboardToSelect = null;\n\n    if (id) {\n      dashboardToSelect = sGetDashboardById(state, id) || null;\n    } else {\n      const preferredId = getPreferredDashboardId(sGetUserUsername(state));\n      const dash = sGetDashboardById(state, preferredId);\n      dashboardToSelect = preferredId && dash ? dash : sGetDashboardsSortedByStarred(state)[0];\n    }\n\n    if (dashboardToSelect) {\n      dispatch(tSetSelectedDashboardById(dashboardToSelect.id));\n    } else {\n      dispatch(acSetSelectedId(NON_EXISTING_DASHBOARD_ID));\n    }\n  } catch (err) {\n    console.error('Error (apiFetchDashboards): ', err);\n    return err;\n  }\n};\nexport const tDeleteDashboard = id => async (dispatch, getState, dataEngine) => {\n  try {\n    await apiDeleteDashboard(dataEngine, id);\n    await dispatch(tFetchDashboards());\n    return Promise.resolve();\n  } catch (err) {\n    console.error('Error (deleteDashboard): ', err);\n    return err;\n  }\n};","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { useD2 } from '@dhis2/app-runtime-adapter-d2';\nimport { Button, Modal, ModalTitle, ModalContent, ModalActions, ButtonStrip } from '@dhis2/ui';\nimport { PeriodDimension, DynamicDimension, OrgUnitDimension, DIMENSION_ID_PERIOD, DIMENSION_ID_ORGUNIT } from '@dhis2/analytics';\nimport { acAddItemFilter, acRemoveItemFilter } from '../../actions/itemFilters';\nimport { sGetItemFiltersRoot } from '../../reducers/itemFilters';\nimport { useSystemSettings } from '../SystemSettingsProvider';\n\nconst FilterDialog = ({\n  dimension,\n  initiallySelectedItems,\n  addItemFilter,\n  removeItemFilter,\n  onClose\n}) => {\n  const [filters, setFilters] = useState(initiallySelectedItems);\n  const {\n    d2\n  } = useD2({});\n  const {\n    settings\n  } = useSystemSettings();\n\n  const onSelectItems = ({\n    dimensionId,\n    items\n  }) => {\n    setFilters({\n      [dimensionId]: items\n    });\n  };\n\n  const onDeselectItems = ({\n    dimensionId,\n    itemIdsToRemove\n  }) => {\n    const oldList = filters[dimensionId] || [];\n    const newList = oldList.filter(item => !itemIdsToRemove.includes(item.id));\n    setFilters({ ...filters,\n      [dimensionId]: newList\n    });\n  };\n\n  const onReorderItems = ({\n    dimensionId,\n    itemIds\n  }) => {\n    const oldList = filters[dimensionId] || [];\n    const reorderedList = itemIds.map(id => oldList.find(item => item.id === id));\n    setFilters({ ...filters,\n      [dimensionId]: reorderedList\n    });\n  };\n\n  const saveFilter = () => {\n    const id = dimension.id;\n    const filterItems = filters[id];\n\n    if (filterItems && filterItems.length) {\n      addItemFilter({\n        id,\n        value: [...filterItems]\n      });\n    } else {\n      removeItemFilter(id);\n    }\n\n    onClose(id);\n  };\n\n  const renderDialogContent = () => {\n    const commonProps = {\n      d2,\n      onSelect: onSelectItems,\n      onDeselect: onDeselectItems,\n      onReorder: onReorderItems\n    };\n    const selectedItems = filters[dimension.id] || [];\n\n    switch (dimension.id) {\n      case DIMENSION_ID_PERIOD:\n        {\n          return <PeriodDimension selectedPeriods={selectedItems} onSelect={commonProps.onSelect} />;\n        }\n\n      case DIMENSION_ID_ORGUNIT:\n        return <OrgUnitDimension displayNameProperty={settings.displayNameProperty} ouItems={selectedItems} {...commonProps} />;\n\n      default:\n        return <DynamicDimension selectedItems={selectedItems} dimensionId={dimension.id} onSelect={commonProps.onSelect} />;\n    }\n  };\n\n  return <>\n            {dimension.id && <Modal dataTest={`${dimension.id}-dimension-modal`} onClose={onClose} position=\"top\" large>\n                    <ModalTitle>{dimension.name}</ModalTitle>\n                    <ModalContent>{renderDialogContent()}</ModalContent>\n                    <ModalActions>\n                        <ButtonStrip>\n                            <Button secondary onClick={onClose}>\n                                {i18n.t('Cancel')}\n                            </Button>\n                            <Button primary onClick={saveFilter}>\n                                {i18n.t('Confirm')}\n                            </Button>\n                        </ButtonStrip>\n                    </ModalActions>\n                </Modal>}\n        </>;\n};\n\nFilterDialog.propTypes = {\n  addItemFilter: PropTypes.func,\n  dimension: PropTypes.object,\n  initiallySelectedItems: PropTypes.object,\n  removeItemFilter: PropTypes.func,\n  onClose: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  initiallySelectedItems: sGetItemFiltersRoot(state)\n});\n\nexport default connect(mapStateToProps, {\n  addItemFilter: acAddItemFilter,\n  removeItemFilter: acRemoveItemFilter\n})(FilterDialog);","export const SET_ACTIVE_MODAL_DIMENSION = 'SET_ACTIVE_MODAL_DIMENSION';\nexport const CLEAR_ACTIVE_MODAL_DIMENSION = 'CLEAR_ACTIVE_MODAL_DIMENSION';\nexport const DEFAULT_STATE_ACTIVE_MODAL_DIMENSION = {};\nexport default ((state = DEFAULT_STATE_ACTIVE_MODAL_DIMENSION, action) => {\n  switch (action.type) {\n    case SET_ACTIVE_MODAL_DIMENSION:\n      {\n        return action.value;\n      }\n\n    case CLEAR_ACTIVE_MODAL_DIMENSION:\n      {\n        return DEFAULT_STATE_ACTIVE_MODAL_DIMENSION;\n      }\n\n    default:\n      return state;\n  }\n});\nexport const sGetActiveModalDimension = state => state.activeModalDimension;","import { SET_ACTIVE_MODAL_DIMENSION, CLEAR_ACTIVE_MODAL_DIMENSION } from '../reducers/activeModalDimension';\nexport const acSetActiveModalDimension = value => ({\n  type: SET_ACTIVE_MODAL_DIMENSION,\n  value\n});\nexport const acClearActiveModalDimension = () => ({\n  type: CLEAR_ACTIVE_MODAL_DIMENSION\n});","import React, { useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport isEmpty from 'lodash/isEmpty';\nimport i18n from '@dhis2/d2-i18n';\nimport { DimensionsPanel } from '@dhis2/analytics';\nimport { Button, Popover } from '@dhis2/ui';\nimport FilterDialog from './FilterDialog';\nimport { sGetActiveModalDimension } from '../../reducers/activeModalDimension';\nimport { sGetDimensions } from '../../reducers/dimensions';\nimport { sGetItemFiltersRoot } from '../../reducers/itemFilters';\nimport { acClearActiveModalDimension, acSetActiveModalDimension } from '../../actions/activeModalDimension';\nimport classes from './styles/FilterSelector.module.css';\n\nconst FilterSelector = props => {\n  const [showPopover, setShowPopover] = useState(false);\n  const ref = useRef(null);\n\n  const onCloseDialog = () => {\n    setShowPopover(false);\n    props.clearActiveModalDimension();\n  };\n\n  const selectDimension = id => {\n    props.setActiveModalDimension(props.dimensions.find(dimension => dimension.id === id));\n  };\n\n  return <>\n            <span className={classes.buttonContainer} ref={ref}>\n                <Button onClick={() => setShowPopover(true)}>\n                    {i18n.t('Add filter')}\n                    <ArrowDropDownIcon />\n                </Button>\n            </span>\n            {showPopover && <Popover onClickOutside={onCloseDialog} reference={ref} arrow={true} placement=\"bottom-start\" dataTest=\"dashboard-filter-popover\">\n                    <div className={classes.popover}>\n                        <DimensionsPanel style={{\n          width: '320px'\n        }} dimensions={props.dimensions} onDimensionClick={selectDimension} selectedIds={Object.keys(props.initiallySelectedItems)} />\n                    </div>\n                </Popover>}\n            {!isEmpty(props.dimension) ? <FilterDialog dimension={props.dimension} onClose={onCloseDialog} /> : null}\n        </>;\n};\n\nconst mapStateToProps = state => ({\n  dimension: sGetActiveModalDimension(state),\n  dimensions: sGetDimensions(state),\n  initiallySelectedItems: sGetItemFiltersRoot(state)\n});\n\nFilterSelector.propTypes = {\n  clearActiveModalDimension: PropTypes.func,\n  dimension: PropTypes.object,\n  dimensions: PropTypes.array,\n  initiallySelectedItems: PropTypes.object,\n  setActiveModalDimension: PropTypes.func\n};\nexport default connect(mapStateToProps, {\n  clearActiveModalDimension: acClearActiveModalDimension,\n  setActiveModalDimension: acSetActiveModalDimension\n})(FilterSelector);","import React, { useState, createRef } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { Link, Redirect } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport SharingDialog from '@dhis2/d2-ui-sharing-dialog';\nimport { useDataEngine, useAlert } from '@dhis2/app-runtime';\nimport Star from '@material-ui/icons/Star';\nimport StarBorder from '@material-ui/icons/StarBorder';\nimport { Button, FlyoutMenu, Popover, MenuItem, colors } from '@dhis2/ui';\nimport { useD2 } from '@dhis2/app-runtime-adapter-d2';\nimport { ThreeDots } from '../Item/VisualizationItem/assets/icons';\nimport { orObject } from '../../modules/util';\nimport { apiStarDashboard } from '../../api/starDashboard';\nimport { apiPostShowDescription } from '../../api/description';\nimport { acSetDashboardStarred } from '../../actions/dashboards';\nimport { acSetSelectedShowDescription } from '../../actions/selected';\nimport FilterSelector from '../ItemFilter/FilterSelector';\nimport { sGetSelectedId, sGetSelectedShowDescription } from '../../reducers/selected';\nimport { sGetDashboardById, sGetDashboardItems, EMPTY_DASHBOARD } from '../../reducers/dashboards';\nimport classes from './styles/ViewTitleBar.module.css';\n\nconst ViewTitleBar = ({\n  id,\n  name,\n  description,\n  access,\n  showDescription,\n  starred,\n  setDashboardStarred,\n  updateShowDescription\n}) => {\n  const [moreOptionsIsOpen, setMoreOptionsIsOpen] = useState(false);\n  const [sharingDialogIsOpen, setSharingDialogIsOpen] = useState(false);\n  const [redirectUrl, setRedirectUrl] = useState(null);\n  const {\n    d2\n  } = useD2({});\n  const dataEngine = useDataEngine();\n  const warningAlert = useAlert(({\n    msg\n  }) => msg, {\n    warning: true\n  });\n\n  const toggleSharingDialog = () => setSharingDialogIsOpen(!sharingDialogIsOpen);\n\n  const toggleMoreOptions = () => setMoreOptionsIsOpen(!moreOptionsIsOpen);\n\n  const printLayout = () => setRedirectUrl(`${id}/printlayout`);\n\n  const printOipp = () => setRedirectUrl(`${id}/printoipp`);\n\n  const StarIcon = starred ? Star : StarBorder;\n\n  if (redirectUrl) {\n    return <Redirect to={redirectUrl} />;\n  }\n\n  const showHideDescriptionLabel = showDescription ? i18n.t('Hide description') : i18n.t('Show description');\n\n  const onToggleShowDescription = () => apiPostShowDescription(!showDescription).then(() => {\n    updateShowDescription(!showDescription);\n    toggleMoreOptions();\n  }).catch(() => {\n    const msg = showDescription ? i18n.t('Failed to hide description') : i18n.t('Failed to show description');\n    warningAlert.show({\n      msg\n    });\n  });\n\n  const toggleStarredDashboardLabel = starred ? i18n.t('Unstar dashboard') : i18n.t('Star dashboard');\n\n  const onToggleStarredDashboard = () => apiStarDashboard(dataEngine, id, !starred).then(() => {\n    setDashboardStarred(id, !starred);\n\n    if (moreOptionsIsOpen) {\n      toggleMoreOptions();\n    }\n  }).catch(() => {\n    const msg = starred ? i18n.t('Failed to unstar the dashboard') : i18n.t('Failed to star the dashboard');\n    warningAlert.show({\n      msg\n    });\n  });\n\n  const buttonRef = createRef();\n  const userAccess = orObject(access);\n  const descriptionClasses = cx(classes.descContainer, description ? classes.desc : classes.noDesc);\n\n  const getMoreButton = (className, useSmall) => <Button className={className} small={useSmall} onClick={toggleMoreOptions}>\n            <ThreeDots />\n            <span className={classes.moreText}>{i18n.t('More')}</span>\n        </Button>;\n\n  return <>\n            <div className={classes.container}>\n                <div className={classes.titleBar}>\n                    <span className={classes.title} data-test=\"view-dashboard-title\">\n                        {name}\n                    </span>\n                    <div className={classes.actions}>\n                        <div className={classes.star} onClick={onToggleStarredDashboard} data-test=\"button-star-dashboard\">\n                            <StarIcon style={{\n              fill: colors.grey600\n            }} data-test={starred ? 'dashboard-starred' : 'dashboard-unstarred'} />\n                        </div>\n                        <div className={classes.strip}>\n                            {userAccess.update ? <Link className={classes.editLink} to={`/${id}/edit`} data-test=\"link-edit-dashboard\">\n                                    <Button>{i18n.t('Edit')}</Button>\n                                </Link> : null}\n                            {userAccess.manage ? <Button className={classes.shareButton} onClick={toggleSharingDialog}>\n                                    {i18n.t('Share')}\n                                </Button> : null}\n                            <FilterSelector />\n                            <span ref={buttonRef}>\n                                {getMoreButton(classes.moreButton, false)}\n                                {getMoreButton(classes.moreButtonSmall, true)}\n                            </span>\n                        </div>\n                        {moreOptionsIsOpen && <Popover reference={buttonRef} placement=\"bottom-start\" onClickOutside={toggleMoreOptions}>\n                                <FlyoutMenu>\n                                    <MenuItem dense label={toggleStarredDashboardLabel} onClick={onToggleStarredDashboard} />\n                                    <MenuItem dense label={showHideDescriptionLabel} onClick={onToggleShowDescription} />\n                                    <MenuItem dense label={i18n.t('Print')} dataTest=\"print-menu-item\">\n                                        <MenuItem dense label={i18n.t('Dashboard layout')} onClick={printLayout} dataTest=\"print-layout-menu-item\" />\n                                        <MenuItem dense label={i18n.t('One item per page')} onClick={printOipp} dataTest=\"print-oipp-menu-item\" />\n                                    </MenuItem>\n                                </FlyoutMenu>\n                            </Popover>}\n                    </div>\n                </div>\n                {showDescription && <div className={descriptionClasses} data-test=\"dashboard-description\">\n                        {description || i18n.t('No description')}\n                    </div>}\n            </div>\n            {id && <SharingDialog d2={d2} id={id} type=\"dashboard\" open={sharingDialogIsOpen} onRequestClose={toggleSharingDialog} />}\n        </>;\n};\n\nViewTitleBar.propTypes = {\n  access: PropTypes.object,\n  description: PropTypes.string,\n  id: PropTypes.string,\n  name: PropTypes.string,\n  setDashboardStarred: PropTypes.func,\n  showDescription: PropTypes.bool,\n  starred: PropTypes.bool,\n  updateShowDescription: PropTypes.func\n};\nViewTitleBar.defaultProps = {\n  name: '',\n  description: '',\n  starred: false,\n  showDescription: false\n};\n\nconst mapStateToProps = state => {\n  const id = sGetSelectedId(state);\n  const dashboard = sGetDashboardById(state, id) || EMPTY_DASHBOARD;\n  return {\n    id,\n    name: dashboard.displayName,\n    description: dashboard.displayDescription,\n    dashboardItems: sGetDashboardItems(state),\n    showDescription: sGetSelectedShowDescription(state),\n    starred: dashboard.starred,\n    access: dashboard.access\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setDashboardStarred: acSetDashboardStarred,\n  updateShowDescription: acSetSelectedShowDescription\n})(ViewTitleBar);","export const getStarDashboardMutation = id => ({\n  type: 'create',\n  resource: `dashboards/${id}/favorite`\n});\nexport const getUnstarDashboardMutation = id => ({\n  type: 'delete',\n  resource: `dashboards/${id}/favorite`\n});\nexport const apiStarDashboard = (dataEngine, id, isStarred) => {\n  const mutation = isStarred ? getStarDashboardMutation(id) : getUnstarDashboardMutation(id);\n  return dataEngine.mutate(mutation);\n};","import React, { useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { useD2 } from '@dhis2/app-runtime-adapter-d2';\nimport { useConfig } from '@dhis2/app-runtime';\nimport { load, unmount } from './plugin';\nimport getGridItemDomId from '../../../../modules/getGridItemDomId';\n\nconst DefaultPlugin = ({\n  item,\n  activeType,\n  visualization,\n  options,\n  style\n}) => {\n  const {\n    d2\n  } = useD2({});\n  const {\n    baseUrl\n  } = useConfig();\n  const credentials = {\n    baseUrl,\n    auth: d2.Api.getApi().defaultHeaders.Authorization\n  };\n  const prevItem = useRef();\n  const prevActiveType = useRef();\n  useEffect(() => {\n    load(item, visualization, {\n      credentials,\n      activeType,\n      options\n    });\n    prevItem.current = item;\n    prevActiveType.current = activeType;\n    return () => unmount(item, activeType);\n  }, []);\n  useEffect(() => {\n    if (shouldPluginReload()) {\n      unmount(item, prevActiveType.current);\n      load(item, visualization, {\n        credentials,\n        activeType\n      });\n    }\n\n    prevItem.current = item;\n    prevActiveType.current = activeType;\n  }, [item, visualization, activeType]);\n  /**\n   * Prevent unnecessary re-rendering\n   * TODO: fix this hack\n   */\n\n  const shouldPluginReload = () => {\n    const reloadAllowed = prevItem.current === item;\n    const visChanged = prevActiveType.current !== activeType;\n    return reloadAllowed && visChanged;\n  };\n\n  return <div id={getGridItemDomId(item.id)} style={style} />;\n};\n\nDefaultPlugin.propTypes = {\n  activeType: PropTypes.string,\n  item: PropTypes.object,\n  options: PropTypes.object,\n  style: PropTypes.object,\n  visualization: PropTypes.object\n};\nDefaultPlugin.defaultProps = {\n  style: {},\n  item: {},\n  options: {},\n  visualization: {}\n};\nexport default DefaultPlugin;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classes from './styles/NoVisualizationMessage.module.css';\n\nconst NoVisualizationMessage = ({\n  message\n}) => {\n  return <div className={classes.message}>{message}</div>;\n};\n\nNoVisualizationMessage.propTypes = {\n  message: PropTypes.string\n};\nexport default NoVisualizationMessage;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport DefaultPlugin from './DefaultPlugin';\nimport { MAP } from '../../../../modules/itemTypes';\nimport { pluginIsAvailable } from './plugin';\nimport NoVisualizationMessage from './NoVisualizationMessage';\n\nconst MapPlugin = ({\n  applyFilters,\n  ...props\n}) => {\n  if (props.item.type === MAP) {\n    // apply filters only to thematic and event layers\n    // for maps AO\n    const mapViews = props.visualization.mapViews.map(mapView => {\n      if (mapView.layer.includes('thematic') || mapView.layer.includes('event')) {\n        return applyFilters(mapView, props.itemFilters);\n      }\n\n      return mapView;\n    });\n    props.visualization = { ...props.visualization,\n      mapViews\n    };\n  } else {\n    // this is the case of a non map AO passed to the maps plugin\n    // due to a visualization type switch in dashboard item\n    // maps plugin takes care of converting the AO to a suitable format\n    props.visualization = applyFilters(props.visualization, props.itemFilters);\n  }\n\n  return pluginIsAvailable(props.activeType || props.item.type) ? <DefaultPlugin options={{\n    hideTitle: true\n  }} {...props} /> : <NoVisualizationMessage message={i18n.t('Unable to load the plugin for this item')} />;\n};\n\nMapPlugin.propTypes = {\n  activeType: PropTypes.string,\n  applyFilters: PropTypes.func,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object,\n  visualization: PropTypes.object\n};\nexport default MapPlugin;","import React from 'react';\nimport { CircularLoader } from '@dhis2/ui';\nimport classes from './styles/LoadingMask.module.css';\n\nconst LoadingMask = () => {\n  return <div className={classes.center}>\n            <CircularLoader />\n        </div>;\n};\n\nexport default LoadingMask;","const getFilteredVisualization = (visualization, filters) => {\n  if (!Object.keys(filters).length) {\n    return visualization;\n  } // deep clone objects in filters to avoid changing the visualization in the Redux store\n\n\n  const visRows = visualization.rows.map(obj => ({ ...obj\n  }));\n  const visColumns = visualization.columns.map(obj => ({ ...obj\n  }));\n  const visFilters = visualization.filters.map(obj => ({ ...obj\n  }));\n  Object.keys(filters).forEach(dimensionId => {\n    if (filters[dimensionId]) {\n      let dimensionFound = false;\n      [visRows, visColumns, visFilters].forEach(dimensionObjects => dimensionObjects.filter(obj => obj.dimension === dimensionId).forEach(obj => {\n        dimensionFound = true;\n        obj.items = filters[dimensionId];\n      })); // add dimension to filters if not already present elsewhere\n\n      if (!dimensionFound) {\n        visFilters.push({\n          dimension: dimensionId,\n          items: filters[dimensionId]\n        });\n      }\n    }\n  });\n  return { ...visualization,\n    rows: visRows,\n    columns: visColumns,\n    filters: visFilters\n  };\n};\n\nexport default getFilteredVisualization;","import { VIS_TYPE_COLUMN, VIS_TYPE_PIVOT_TABLE, getAdaptedUiLayoutByType } from '@dhis2/analytics';\nimport { REPORT_TABLE, CHART, MAP } from '../../../../modules/itemTypes';\nexport const THEMATIC_LAYER = 'thematic';\n\nconst extractMapView = map => map.mapViews && map.mapViews.find(mv => mv.layer.includes(THEMATIC_LAYER));\n\nconst getWithoutId = object => ({ ...object,\n  id: undefined\n});\n\nconst getVisualizationConfig = (visualization, originalType, activeType) => {\n  if (originalType === MAP && originalType !== activeType) {\n    const extractedMapView = extractMapView(visualization);\n\n    if (extractedMapView === undefined) {\n      return null;\n    }\n\n    return getWithoutId({ ...visualization,\n      ...extractedMapView,\n      mapViews: undefined,\n      type: activeType === CHART ? VIS_TYPE_COLUMN : VIS_TYPE_PIVOT_TABLE\n    });\n  } else if (originalType === REPORT_TABLE && activeType === CHART) {\n    const layout = getAdaptedUiLayoutByType(visualization, VIS_TYPE_COLUMN);\n    return getWithoutId({ ...visualization,\n      ...layout,\n      type: VIS_TYPE_COLUMN\n    });\n  } else if (originalType === CHART && activeType === REPORT_TABLE) {\n    const layout = getAdaptedUiLayoutByType(visualization, VIS_TYPE_PIVOT_TABLE);\n    return getWithoutId({ ...visualization,\n      ...layout,\n      type: VIS_TYPE_PIVOT_TABLE\n    });\n  }\n\n  return getWithoutId(visualization);\n};\n\nexport default getVisualizationConfig;","// Note that this ignores discrepancies in 'this', so shouldn't be used with bound functions\n// This is useful instead of lodash/memoize when we only need to memoize a single value\n// Inspiration: https://github.com/alexreardon/memoize-one\nconst memoizeOne = fn => {\n  let lastArgs = undefined;\n  let lastValue = undefined;\n  return (...args) => {\n    if (lastArgs && args.length === lastArgs.length && args.every((arg, i) => arg === lastArgs[i])) {\n      return lastValue;\n    }\n\n    lastArgs = args;\n    lastValue = fn(...args);\n    return lastValue;\n  };\n};\n\nexport default memoizeOne;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport VisualizationPlugin from '@dhis2/data-visualizer-plugin';\nimport i18n from '@dhis2/d2-i18n';\nimport { D2Shim } from '@dhis2/app-runtime-adapter-d2';\nimport DefaultPlugin from './DefaultPlugin';\nimport MapPlugin from './MapPlugin';\nimport LoadingMask from './LoadingMask';\nimport NoVisualizationMessage from './NoVisualizationMessage';\nimport getFilteredVisualization from './getFilteredVisualization';\nimport getVisualizationConfig from './getVisualizationConfig';\nimport { VISUALIZATION, MAP, CHART, REPORT_TABLE } from '../../../../modules/itemTypes';\nimport { getVisualizationId } from '../../../../modules/item';\nimport memoizeOne from '../../../../modules/memoizeOne';\nimport { sGetVisualization } from '../../../../reducers/visualizations';\nimport { pluginIsAvailable } from './plugin';\n\nclass Visualization extends React.Component {\n  state = {\n    pluginLoaded: false\n  };\n\n  constructor(props) {\n    super(props);\n    this.memoizedGetFilteredVisualization = memoizeOne(getFilteredVisualization);\n    this.memoizedGetVisualizationConfig = memoizeOne(getVisualizationConfig);\n  }\n\n  onLoadingComplete = () => {\n    this.setState({\n      pluginLoaded: true\n    });\n  };\n\n  render() {\n    const {\n      visualization,\n      activeType,\n      item,\n      itemFilters,\n      availableHeight,\n      availableWidth\n    } = this.props;\n\n    if (!visualization) {\n      return <NoVisualizationMessage message={i18n.t('No data to display')} />;\n    }\n\n    const style = {\n      height: availableHeight\n    };\n\n    if (availableWidth) {\n      style.width = availableWidth;\n    }\n\n    const pluginProps = {\n      item,\n      itemFilters,\n      activeType,\n      style,\n      visualization: this.memoizedGetVisualizationConfig(visualization, item.type, activeType)\n    };\n\n    switch (activeType) {\n      case VISUALIZATION:\n      case CHART:\n      case REPORT_TABLE:\n        {\n          return <>\n                        {!this.state.pluginLoaded && <div style={pluginProps.style}>\n                                <LoadingMask />\n                            </div>}\n                        <D2Shim d2Config={{}}>\n                            {({\n                d2\n              }) => <VisualizationPlugin d2={d2} visualization={this.memoizedGetFilteredVisualization(pluginProps.visualization, pluginProps.itemFilters)} onLoadingComplete={this.onLoadingComplete} forDashboard={true} style={pluginProps.style} />}\n                        </D2Shim>\n                    </>;\n        }\n\n      case MAP:\n        {\n          return <MapPlugin applyFilters={this.memoizedGetFilteredVisualization} {...pluginProps} />;\n        }\n\n      default:\n        {\n          pluginProps.visualization = this.memoizedGetFilteredVisualization(pluginProps.visualization, pluginProps.itemFilters);\n          return pluginIsAvailable(pluginProps.activeType || pluginProps.item.type) ? <DefaultPlugin {...pluginProps} /> : <NoVisualizationMessage message={i18n.t('Unable to load the plugin for this item')} />;\n        }\n    }\n  }\n\n}\n\nVisualization.propTypes = {\n  activeType: PropTypes.string,\n  availableHeight: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  availableWidth: PropTypes.number,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object,\n  visualization: PropTypes.object\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    visualization: sGetVisualization(state, getVisualizationId(ownProps.item))\n  };\n};\n\nexport default connect(mapStateToProps)(Visualization);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Warning } from './assets/icons';\nimport classes from './styles/FatalErrorBoundary.module.css';\n\nclass FatalErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      errorFound: false\n    };\n  }\n\n  componentDidCatch(error, info) {\n    this.setState({\n      errorFound: true\n    });\n    console.log('error: ', error);\n    console.log('info: ', info);\n  }\n\n  render() {\n    if (this.state.errorFound) {\n      return <p className={classes.container}>\n                    <span className={classes.icon}>\n                        <Warning />\n                    </span>\n                    <span className={classes.message}>\n                        {i18n.t('There was a problem loading this dashboard item')}\n                    </span>\n                </p>;\n    }\n\n    return this.props.children;\n  }\n\n}\n\nFatalErrorBoundary.propTypes = {\n  children: PropTypes.node\n};\nexport default FatalErrorBoundary;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classes from './styles/ItemHeader.module.css';\n\nconst ViewItemActions = ({\n  actionButtons\n}) => {\n  return actionButtons ? <div className={classes.itemActionsWrap}>{actionButtons}</div> : null;\n};\n\nViewItemActions.propTypes = {\n  actionButtons: PropTypes.node\n};\nexport default ViewItemActions;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { colors } from '@dhis2/ui';\nimport classes from './styles/DeleteItemButton.module.css';\n\nconst DeleteItemButton = ({\n  onClick\n}) => <button type=\"button\" className={classes.deleteItemButton} onClick={onClick} title={i18n.t(`Delete item`)}>\n        <DeleteIcon style={{\n    fill: colors.red500\n  }} />\n    </button>;\n\nDeleteItemButton.propTypes = {\n  onClick: PropTypes.func\n};\nexport default DeleteItemButton;","/** @module reducers/editDashboard */\nimport update from 'immutability-helper';\nimport isEmpty from 'lodash/isEmpty';\nimport { orArray, orObject } from '../modules/util';\nexport const RECEIVED_EDIT_DASHBOARD = 'RECEIVED_EDIT_DASHBOARD';\nexport const RECEIVED_NOT_EDITING = 'RECEIVED_NOT_EDITING';\nexport const START_NEW_DASHBOARD = 'START_NEW_DASHBOARD';\nexport const RECEIVED_TITLE = 'RECEIVED_TITLE';\nexport const RECEIVED_DESCRIPTION = 'RECEIVED_DESCRIPTION';\nexport const ADD_DASHBOARD_ITEM = 'ADD_DASHBOARD_ITEM';\nexport const REMOVE_DASHBOARD_ITEM = 'REMOVE_DASHBOARD_ITEM';\nexport const UPDATE_DASHBOARD_ITEM = 'UPDATE_DASHBOARD_ITEM';\nexport const RECEIVED_DASHBOARD_LAYOUT = 'RECEIVED_DASHBOARD_LAYOUT';\nexport const SET_PRINT_PREVIEW_VIEW = 'SET_PRINT_PREVIEW_VIEW';\nexport const CLEAR_PRINT_PREVIEW_VIEW = 'CLEAR_PRINT_PREVIEW_VIEW';\nexport const DEFAULT_STATE_EDIT_DASHBOARD = {};\nexport const NEW_DASHBOARD_STATE = {\n  id: '',\n  name: '',\n  access: {},\n  description: '',\n  dashboardItems: [],\n  printPreviewView: false\n};\nexport default ((state = DEFAULT_STATE_EDIT_DASHBOARD, action) => {\n  switch (action.type) {\n    case RECEIVED_EDIT_DASHBOARD:\n      {\n        const newState = {};\n        Object.keys(NEW_DASHBOARD_STATE).map(k => newState[k] = action.value[k]);\n        newState.printPreviewView = false;\n        return newState;\n      }\n\n    case RECEIVED_NOT_EDITING:\n      return DEFAULT_STATE_EDIT_DASHBOARD;\n\n    case SET_PRINT_PREVIEW_VIEW:\n      return Object.assign({}, state, {\n        printPreviewView: true\n      });\n\n    case CLEAR_PRINT_PREVIEW_VIEW:\n      return Object.assign({}, state, {\n        printPreviewView: false\n      });\n\n    case START_NEW_DASHBOARD:\n      return NEW_DASHBOARD_STATE;\n\n    case RECEIVED_TITLE:\n      {\n        return Object.assign({}, state, {\n          name: action.value\n        });\n      }\n\n    case RECEIVED_DESCRIPTION:\n      {\n        return Object.assign({}, state, {\n          description: action.value\n        });\n      }\n\n    case ADD_DASHBOARD_ITEM:\n      if (!action.value.position) {\n        return update(state, {\n          dashboardItems: {\n            $unshift: [action.value]\n          }\n        });\n      }\n\n      return update(state, {\n        dashboardItems: {\n          $splice: [[parseInt(action.value.position), 0, action.value]]\n        }\n      });\n\n    case REMOVE_DASHBOARD_ITEM:\n      {\n        const idToRemove = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === idToRemove);\n\n        if (dashboardItemIndex > -1) {\n          return update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1]]\n            }\n          });\n        }\n\n        return state;\n      }\n\n    case RECEIVED_DASHBOARD_LAYOUT:\n      {\n        const stateItems = orArray(state.dashboardItems);\n        let layoutHasChanged = false;\n        const newStateItems = action.value.map(({\n          x,\n          y,\n          w,\n          h,\n          i\n        }) => {\n          const stateItem = stateItems.find(si => si.id === i);\n\n          if (!(stateItem.x === x && stateItem.y === y && stateItem.w === w && stateItem.h === h)) {\n            layoutHasChanged = true;\n            return Object.assign({}, stateItem, {\n              w,\n              h,\n              x,\n              y\n            });\n          }\n\n          return stateItem;\n        });\n        return layoutHasChanged ? { ...state,\n          dashboardItems: newStateItems\n        } : state;\n      }\n\n    case UPDATE_DASHBOARD_ITEM:\n      {\n        const dashboardItem = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === dashboardItem.id);\n\n        if (dashboardItemIndex > -1) {\n          const newState = update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1, Object.assign({}, dashboardItem)]]\n            }\n          });\n          return newState;\n        }\n\n        return state;\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetEditDashboardRoot = state => state.editDashboard; // selectors\n\nexport const sGetIsEditing = state => !isEmpty(state.editDashboard);\nexport const sGetIsPrintPreviewView = state => sGetEditDashboardRoot(state).printPreviewView;\nexport const sGetIsNewDashboard = state => {\n  return !isEmpty(state.editDashboard) && sGetEditDashboardRoot(state).id === '';\n};\nexport const sGetEditDashboardName = state => sGetEditDashboardRoot(state).name;\nexport const sGetEditDashboardDescription = state => sGetEditDashboardRoot(state).description;\nexport const sGetEditDashboardItems = state => orObject(sGetEditDashboardRoot(state)).dashboardItems;","import { apiFetchDashboard } from './dashboards';\nexport const createDashboardMutation = {\n  resource: 'dashboards',\n  type: 'create',\n  data: ({\n    data\n  }) => data\n};\nexport const updateDashboardMutation = {\n  resource: 'dashboards',\n  type: 'update',\n  id: ({\n    id\n  }) => id,\n  data: ({\n    data\n  }) => data\n};\n\nconst generatePayload = (dashboard = {}, data) => {\n  return { ...dashboard,\n    name: data.name,\n    description: data.description,\n    dashboardItems: data.dashboardItems.map(item => ({ ...item,\n      width: item.w,\n      height: item.h\n    }))\n  };\n};\n\nexport const updateDashboard = async (dataEngine, data) => {\n  const dashboard = await apiFetchDashboard(dataEngine, data.id);\n  const {\n    response\n  } = await dataEngine.mutate(updateDashboardMutation, {\n    variables: {\n      id: data.id,\n      data: generatePayload(dashboard, data)\n    }\n  });\n  return response.uid;\n};\nexport const postDashboard = async (dataEngine, data) => {\n  const {\n    response\n  } = await dataEngine.mutate(createDashboardMutation, {\n    variables: {\n      data: generatePayload({}, data)\n    }\n  });\n  return response.uid;\n};","import { generateUid } from 'd2/uid';\nimport i18n from '@dhis2/d2-i18n';\nimport { RECEIVED_EDIT_DASHBOARD, START_NEW_DASHBOARD, RECEIVED_NOT_EDITING, RECEIVED_TITLE, RECEIVED_DESCRIPTION, RECEIVED_DASHBOARD_LAYOUT, ADD_DASHBOARD_ITEM, UPDATE_DASHBOARD_ITEM, REMOVE_DASHBOARD_ITEM, SET_PRINT_PREVIEW_VIEW, CLEAR_PRINT_PREVIEW_VIEW, sGetEditDashboardRoot } from '../reducers/editDashboard';\nimport { tFetchDashboards } from './dashboards';\nimport { updateDashboard, postDashboard } from '../api/editDashboard';\nimport { NEW_ITEM_SHAPE, getGridItemProperties, getPageBreakItemShape, getPrintTitlePageItemShape } from '../modules/gridUtil';\nimport { itemTypeMap, PAGEBREAK, PRINT_TITLE_PAGE } from '../modules/itemTypes';\nimport { convertUiItemsToBackend } from '../modules/uiBackendItemConverter'; // actions\n\nexport const acSetEditDashboard = (dashboard, items) => {\n  const val = { ...dashboard,\n    dashboardItems: items\n  };\n  return {\n    type: RECEIVED_EDIT_DASHBOARD,\n    value: val\n  };\n};\nexport const acSetEditNewDashboard = () => ({\n  type: START_NEW_DASHBOARD\n});\nexport const acClearEditDashboard = () => ({\n  type: RECEIVED_NOT_EDITING\n});\nexport const acSetPrintPreviewView = () => ({\n  type: SET_PRINT_PREVIEW_VIEW\n});\nexport const acClearPrintPreviewView = () => ({\n  type: CLEAR_PRINT_PREVIEW_VIEW\n});\nexport const acSetDashboardTitle = value => ({\n  type: RECEIVED_TITLE,\n  value\n});\nexport const acSetDashboardDescription = value => ({\n  type: RECEIVED_DESCRIPTION,\n  value\n});\nexport const acUpdateDashboardLayout = value => ({\n  type: RECEIVED_DASHBOARD_LAYOUT,\n  value\n});\nexport const acAddDashboardItem = item => {\n  const type = item.type;\n  delete item.type;\n  const itemPropName = itemTypeMap[type].propName;\n  const id = generateUid();\n  const gridItemProperties = getGridItemProperties(id);\n  let shape;\n\n  if (type === PAGEBREAK) {\n    const yPos = item.yPos || 0;\n    shape = getPageBreakItemShape(yPos, item.isStatic);\n  } else if (type === PRINT_TITLE_PAGE) {\n    shape = getPrintTitlePageItemShape();\n  } else {\n    shape = NEW_ITEM_SHAPE;\n  }\n\n  return {\n    type: ADD_DASHBOARD_ITEM,\n    value: {\n      id,\n      type,\n      position: item.position || null,\n      [itemPropName]: item.content,\n      ...NEW_ITEM_SHAPE,\n      ...gridItemProperties,\n      ...shape\n    }\n  };\n};\nexport const acUpdateDashboardItem = item => ({\n  type: UPDATE_DASHBOARD_ITEM,\n  value: item\n});\nexport const acRemoveDashboardItem = value => ({\n  type: REMOVE_DASHBOARD_ITEM,\n  value\n}); // thunks\n\nexport const tSaveDashboard = () => async (dispatch, getState, dataEngine) => {\n  const dashboard = sGetEditDashboardRoot(getState());\n  const dashboardToSave = { ...dashboard,\n    dashboardItems: convertUiItemsToBackend(dashboard.dashboardItems),\n    name: dashboard.name || i18n.t('Untitled dashboard')\n  };\n  const dashboardId = dashboardToSave.id ? await updateDashboard(dataEngine, dashboardToSave) : await postDashboard(dataEngine, dashboardToSave); // update the dashboard list\n\n  await dispatch(tFetchDashboards());\n  return Promise.resolve(dashboardId);\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport DeleteItemButton from './DeleteItemButton';\nimport { acRemoveDashboardItem } from '../../../actions/editDashboard';\nimport classes from './styles/ItemHeader.module.css';\n\nconst EditItemActions = ({\n  itemId,\n  acRemoveDashboardItem\n}) => {\n  const handleDeleteItem = () => acRemoveDashboardItem(itemId);\n\n  return <div className={classes.itemActionsWrap}>\n            <DeleteItemButton onClick={handleDeleteItem} />\n        </div>;\n};\n\nEditItemActions.propTypes = {\n  acRemoveDashboardItem: PropTypes.func,\n  itemId: PropTypes.string\n};\nconst mapDispatchToProps = {\n  acRemoveDashboardItem\n};\nexport default connect(null, mapDispatchToProps)(EditItemActions);","import React from 'react';\nimport { colors } from '@dhis2/ui';\n\nconst WarningIcon = () => <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" fill={colors.grey600}>\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z\" />\n    </svg>;\n\nexport default WarningIcon;","import React from 'react';\nimport { Tooltip } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport InfoIcon from '../../../icons/Info';\nimport classes from './styles/PrintItemInfo.module.css';\n\nconst PrintWarning = () => <div className={classes.warning}>\n        <Tooltip content={i18n.t('This item has been shortened to fit on one page')} placement=\"bottom\">\n            <InfoIcon />\n        </Tooltip>\n    </div>;\n\nexport default PrintWarning;","export const EDIT = 'edit';\nexport const NEW = 'new';\nexport const VIEW = 'view';\nexport const PRINT = 'print';\nexport const PRINT_LAYOUT = 'print-layout';\nexport const isEditMode = mode => [EDIT, NEW].includes(mode);\nexport const isPrintMode = mode => [PRINT, PRINT_LAYOUT].includes(mode);\nexport const isViewMode = mode => mode === VIEW;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ViewItemActions from './ViewItemActions';\nimport EditItemActions from './EditItemActions';\nimport PrintItemInfo from './PrintItemInfo';\nimport { VIEW, EDIT, PRINT_LAYOUT } from '../../Dashboard/dashboardModes';\nimport classes from './styles/ItemHeader.module.css';\n\nconst getItemActionsMap = isShortened => {\n  return {\n    [VIEW]: ViewItemActions,\n    [EDIT]: EditItemActions,\n    [PRINT_LAYOUT]: isShortened ? PrintItemInfo : null\n  };\n};\n\nconst ItemHeader = React.forwardRef(({\n  dashboardMode,\n  title,\n  isShortened,\n  ...rest\n}, ref) => {\n  const Actions = getItemActionsMap(isShortened)[dashboardMode];\n  return <div className={classes.itemHeaderWrap} ref={ref}>\n                <p className={classes.itemTitle}>{title}</p>\n                {Actions ? <Actions {...rest} /> : null}\n            </div>;\n});\nItemHeader.displayName = 'ItemHeader';\nItemHeader.propTypes = {\n  dashboardMode: PropTypes.string,\n  isShortened: PropTypes.bool,\n  title: PropTypes.string\n};\nexport default connect(null, null, null, {\n  forwardRef: true\n})(ItemHeader);","import React, { useState, createRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { useConfig } from '@dhis2/app-runtime';\nimport { isSingleValue, isYearOverYear, VIS_TYPE_GAUGE, VIS_TYPE_PIE } from '@dhis2/analytics';\nimport { Button, Menu, Popover, MenuItem, Divider, colors } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport { ThreeDots, SpeechBubble, Fullscreen, ExitFullscreen } from './assets/icons';\nimport { getLink } from './Visualization/plugin';\nimport { CHART, MAP, REPORT_TABLE, EVENT_CHART, EVENT_REPORT, isTrackerDomainType, hasMapView, getAppName } from '../../../modules/itemTypes';\nimport { useSystemSettings } from '../../SystemSettingsProvider';\nconst iconFill = {\n  fill: colors.grey600\n};\n\nconst ItemHeaderButtons = props => {\n  const [menuIsOpen, setMenuIsOpen] = useState(props.isOpen);\n  const {\n    baseUrl\n  } = useConfig();\n  const {\n    item,\n    visualization,\n    onSelectActiveType,\n    activeType\n  } = props;\n  const {\n    openInRelevantApp,\n    showInterpretationsAndDetails,\n    switchViewType,\n    fullscreenAllowedInSettings\n  } = useSystemSettings().settings;\n  const isTrackerType = isTrackerDomainType(item.type);\n\n  const onViewTable = () => {\n    closeMenu();\n    onSelectActiveType(isTrackerType ? EVENT_REPORT : REPORT_TABLE);\n  };\n\n  const onViewChart = () => {\n    closeMenu();\n    onSelectActiveType(isTrackerType ? EVENT_CHART : CHART);\n  };\n\n  const onViewMap = () => {\n    closeMenu();\n    onSelectActiveType(MAP);\n  };\n\n  const itemHasMapView = () => hasMapView(item.type);\n\n  const handleInterpretationClick = () => {\n    props.onToggleFooter();\n\n    if (menuIsOpen) {\n      closeMenu();\n    }\n  };\n\n  const handleToggleFullscreenClick = () => {\n    props.onToggleFullscreen();\n    closeMenu();\n  };\n\n  const openMenu = () => setMenuIsOpen(true);\n\n  const closeMenu = () => setMenuIsOpen(false);\n\n  const type = visualization.type || item.type;\n  const canViewAs = switchViewType && !isSingleValue(type) && !isYearOverYear(type) && type !== VIS_TYPE_GAUGE && type !== VIS_TYPE_PIE;\n  const interpretationMenuLabel = props.activeFooter ? i18n.t(`Hide interpretations and details`) : i18n.t(`Show interpretations and details`);\n\n  const ViewAsMenuItems = () => <>\n            {activeType !== CHART && activeType !== EVENT_CHART && <MenuItem dense label={i18n.t('View as Chart')} onClick={onViewChart} icon={<ChartIcon style={iconFill} />} />}\n            {activeType !== REPORT_TABLE && activeType !== EVENT_REPORT && <MenuItem dense label={i18n.t('View as Table')} onClick={onViewTable} icon={<TableIcon style={iconFill} />} />}\n            {itemHasMapView() && activeType !== MAP && <MenuItem dense label={i18n.t('View as Map')} onClick={onViewMap} icon={<MapIcon style={iconFill} />} />}\n        </>;\n\n  const buttonRef = createRef();\n  const fullscreenAllowed = props.fullscreenSupported && fullscreenAllowedInSettings;\n\n  if (!openInRelevantApp && !showInterpretationsAndDetails && !switchViewType && !fullscreenAllowed) {\n    return null;\n  }\n\n  return props.isFullscreen ? <Button small secondary onClick={props.onToggleFullscreen}>\n            <ExitFullscreen />\n        </Button> : <>\n            <div ref={buttonRef}>\n                <Button small secondary onClick={openMenu} dataTest=\"dashboarditem-menu-button\">\n                    <ThreeDots />\n                </Button>\n            </div>\n            {menuIsOpen && <Popover reference={buttonRef} placement=\"auto-start\" arrow={false} onClickOutside={closeMenu}>\n                    <Menu>\n                        {canViewAs && <>\n                                <ViewAsMenuItems />\n                                {(showInterpretationsAndDetails || openInRelevantApp || fullscreenAllowed) && <Divider />}\n                            </>}\n                        {openInRelevantApp && <MenuItem dense icon={<LaunchIcon style={{\n          fill: '#6e7a8a'\n        }} />} label={i18n.t('Open in {{appName}} app', {\n          appName: getAppName(item.type)\n        })} href={getLink(item, baseUrl)} target=\"_blank\" />}\n                        {showInterpretationsAndDetails && <MenuItem dense icon={<SpeechBubble />} label={interpretationMenuLabel} onClick={handleInterpretationClick} />}\n                        {fullscreenAllowed && <MenuItem dense icon={<Fullscreen />} label={i18n.t('View fullscreen')} onClick={handleToggleFullscreenClick} />}\n                    </Menu>\n                </Popover>}\n        </>;\n};\n\nItemHeaderButtons.propTypes = {\n  activeFooter: PropTypes.bool,\n  activeType: PropTypes.string,\n  fullscreenSupported: PropTypes.bool,\n  isFullscreen: PropTypes.bool,\n  isOpen: PropTypes.bool,\n  item: PropTypes.object,\n  visualization: PropTypes.object,\n  onSelectActiveType: PropTypes.func,\n  onToggleFooter: PropTypes.func,\n  onToggleFullscreen: PropTypes.func\n};\nexport default ItemHeaderButtons;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getVisualizationId } from '../../../modules/item';\nimport InterpretationsComponent from '@dhis2/d2-ui-interpretations';\nimport { useD2 } from '@dhis2/app-runtime-adapter-d2';\nimport classes from './styles/ItemFooter.module.css';\n\nconst ItemFooter = props => {\n  const {\n    d2\n  } = useD2({});\n  return <div data-test=\"dashboarditem-footer\">\n            <hr className={classes.line} />\n            <div className={classes.scrollContainer}>\n                <InterpretationsComponent d2={d2} item={props.item} type={props.item.type.toLowerCase()} id={getVisualizationId(props.item)} appName=\"dashboard\" />\n            </div>\n        </div>;\n};\n\nItemFooter.propTypes = {\n  item: PropTypes.object.isRequired\n};\nexport default ItemFooter;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport uniqueId from 'lodash/uniqueId';\nimport Visualization from './Visualization/Visualization';\nimport FatalErrorBoundary from './FatalErrorBoundary';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport ItemHeaderButtons from './ItemHeaderButtons';\nimport ItemFooter from './ItemFooter';\nimport { WindowDimensionsCtx } from '../../WindowDimensionsProvider';\nimport { SystemSettingsCtx } from '../../SystemSettingsProvider';\nimport { apiPostDataStatistics } from '../../../api/dataStatistics';\nimport { apiFetchVisualization } from '../../../api/metadata';\nimport { sGetVisualization } from '../../../reducers/visualizations';\nimport { sGetSelectedItemActiveType } from '../../../reducers/selected';\nimport { sGetIsEditing } from '../../../reducers/editDashboard';\nimport { sGetItemFiltersRoot, DEFAULT_STATE_ITEM_FILTERS } from '../../../reducers/itemFilters';\nimport { acAddVisualization } from '../../../actions/visualizations';\nimport { acSetSelectedItemActiveType } from '../../../actions/selected';\nimport { pluginIsAvailable, resize as pluginResize } from './Visualization/plugin';\nimport { getDataStatisticsName } from '../../../modules/itemTypes';\nimport { getVisualizationId, getVisualizationName } from '../../../modules/item';\nimport memoizeOne from '../../../modules/memoizeOne';\nimport { isEditMode, isPrintMode, isViewMode } from '../../Dashboard/dashboardModes';\nimport { getItemHeightPx } from '../../../modules/gridUtil';\nimport getGridItemDomId from '../../../modules/getGridItemDomId';\nexport class Item extends Component {\n  state = {\n    showFooter: false,\n    configLoaded: false,\n    isFullscreen: false\n  };\n\n  constructor(props) {\n    super(props);\n    this.contentRef = React.createRef();\n    this.headerRef = React.createRef();\n    this.itemDomElSelector = `.reactgriditem-${this.props.item.id}`;\n    const style = window.getComputedStyle(document.documentElement);\n    this.itemContentPadding = parseInt(style.getPropertyValue('--item-content-padding').replace('px', ''));\n    this.itemHeaderTotalMargin = parseInt(style.getPropertyValue('--item-header-margin-top').replace('px', '')) + parseInt(style.getPropertyValue('--item-header-margin-bottom').replace('px', ''));\n    this.memoizedGetContentHeight = memoizeOne((calculatedHeight, measuredHeight, preferMeasured) => preferMeasured ? measuredHeight || calculatedHeight : calculatedHeight);\n  }\n\n  async componentDidMount() {\n    this.props.updateVisualization(await apiFetchVisualization(this.props.item));\n\n    try {\n      if (this.props.settings.keyGatherAnalyticalObjectStatisticsInDashboardViews && isViewMode(this.props.dashboardMode)) {\n        await apiPostDataStatistics(getDataStatisticsName(this.props.item.type), getVisualizationId(this.props.item));\n      }\n    } catch (e) {\n      console.log(e);\n    }\n\n    this.setState({\n      configLoaded: true\n    });\n    const el = document.querySelector(this.itemDomElSelector);\n\n    if (el?.requestFullscreen) {\n      el.onfullscreenchange = this.handleFullscreenChange;\n    } else if (el?.webkitRequestFullscreen) {\n      el.onwebkitfullscreenchange = this.handleFullscreenChange;\n    }\n  }\n\n  componentWillUnmount() {\n    const el = document.querySelector(this.itemDomElSelector);\n\n    if (el?.onfullscreenchange) {\n      el.removeEventListener('onfullscreenchange', this.handleFullscreenChange);\n    } else if (el?.onwebkitfullscreenchange) {\n      el.removeEventListener('onwebkitfullscreenchange', this.handleFullscreenChange);\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.gridWidth !== this.props.gridWidth) {\n      const el = document.querySelector(`#${getGridItemDomId(this.props.item.id)}`);\n\n      if (typeof el?.setViewportSize === 'function') {\n        setTimeout(() => el.setViewportSize(el.clientWidth - 5, el.clientHeight - 5), 10);\n      } // call resize on Map item\n\n\n      pluginResize(this.props.item, this.state.isFullscreen);\n    }\n  }\n\n  isFullscreenSupported = () => {\n    const el = document.querySelector(this.itemDomElSelector);\n    return !!(el?.requestFullscreen || el?.webkitRequestFullscreen);\n  };\n  handleFullscreenChange = () => {\n    this.setState({\n      isFullscreen: !!document.fullscreenElement || !!document.webkitFullscreenElement\n    }, () => pluginResize(this.props.item, this.state.isFullscreen));\n  };\n  onToggleFullscreen = () => {\n    if (!this.state.isFullscreen) {\n      const el = document.querySelector(this.itemDomElSelector);\n\n      if (el?.requestFullscreen) {\n        el.requestFullscreen();\n      } else if (el?.webkitRequestFullscreen) {\n        el.webkitRequestFullscreen();\n      }\n    } else {\n      document.exitFullscreen ? document.exitFullscreen() : document.webkitExitFullscreen();\n    }\n  };\n  getUniqueKey = memoizeOne(() => uniqueId());\n  onToggleFooter = () => {\n    this.setState({\n      showFooter: !this.state.showFooter\n    }, this.props.onToggleItemExpanded(this.props.item.id));\n  };\n  setActiveType = type => {\n    type !== this.getActiveType() && this.props.setActiveType(this.props.item.id, type);\n  };\n  getActiveType = () => {\n    if (this.props.isEditing) {\n      return this.props.item.type;\n    }\n\n    return this.props.activeType || this.props.item.type;\n  };\n  getAvailableHeight = width => {\n    if (this.state.isFullscreen) {\n      return '95vh';\n    }\n\n    const calculatedHeight = getItemHeightPx(this.props.item, width) - this.headerRef.current.clientHeight - this.itemHeaderTotalMargin - this.itemContentPadding;\n    return this.memoizedGetContentHeight(calculatedHeight, this.contentRef ? this.contentRef.offsetHeight : null, isEditMode(this.props.dashboardMode) || isPrintMode(this.props.dashboardMode));\n  };\n  getAvailableWidth = () => {\n    const rect = document.querySelector(this.itemDomElSelector)?.getBoundingClientRect();\n    return rect && rect.width - this.itemContentPadding * 2;\n  };\n\n  render() {\n    const {\n      item,\n      dashboardMode,\n      itemFilters\n    } = this.props;\n    const {\n      showFooter\n    } = this.state;\n    const activeType = this.getActiveType();\n    const actionButtons = pluginIsAvailable(activeType || item.type) ? <ItemHeaderButtons item={item} visualization={this.props.visualization} onSelectActiveType={this.setActiveType} onToggleFooter={this.onToggleFooter} onToggleFullscreen={this.onToggleFullscreen} activeType={activeType} activeFooter={showFooter} isFullscreen={this.state.isFullscreen} fullscreenSupported={this.isFullscreenSupported()} /> : null;\n    return <>\n                <ItemHeader title={getVisualizationName(item)} itemId={item.id} actionButtons={actionButtons} ref={this.headerRef} dashboardMode={dashboardMode} isShortened={item.shortened} />\n                <FatalErrorBoundary>\n                    <div key={this.getUniqueKey(itemFilters)} className=\"dashboard-item-content\" ref={ref => this.contentRef = ref}>\n                        {this.state.configLoaded && <WindowDimensionsCtx.Consumer>\n                                {dimensions => <Visualization item={item} activeType={activeType} itemFilters={itemFilters} availableHeight={this.getAvailableHeight(dimensions.width)} availableWidth={this.getAvailableWidth()} />}\n                            </WindowDimensionsCtx.Consumer>}\n                    </div>\n                </FatalErrorBoundary>\n                {isViewMode(dashboardMode) && showFooter ? <ItemFooter item={item} /> : null}\n            </>;\n  }\n\n}\nItem.propTypes = {\n  activeType: PropTypes.string,\n  dashboardMode: PropTypes.string,\n  gridWidth: PropTypes.number,\n  isEditing: PropTypes.bool,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object,\n  setActiveType: PropTypes.func,\n  settings: PropTypes.object,\n  updateVisualization: PropTypes.func,\n  visualization: PropTypes.object,\n  onToggleItemExpanded: PropTypes.func\n};\nItem.defaultProps = {\n  item: {},\n  onToggleItemExpanded: Function.prototype,\n  visualization: {}\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const itemFilters = !isEditMode(ownProps.dashboardMode) ? sGetItemFiltersRoot(state) : DEFAULT_STATE_ITEM_FILTERS;\n  return {\n    activeType: sGetSelectedItemActiveType(state, ownProps.item?.id),\n    isEditing: sGetIsEditing(state),\n    itemFilters,\n    visualization: sGetVisualization(state, getVisualizationId(ownProps.item))\n  };\n};\n\nconst mapDispatchToProps = {\n  setActiveType: acSetSelectedItemActiveType,\n  updateVisualization: acAddVisualization\n};\n\nconst ItemWithSettings = props => <SystemSettingsCtx.Consumer>\n        {({\n    settings\n  }) => <Item settings={settings} {...props} />}\n    </SystemSettingsCtx.Consumer>;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ItemWithSettings);","import React from 'react';\nimport { colors } from '@dhis2/ui';\nconst style = {\n  backgroundColor: colors.grey200,\n  border: 'none',\n  height: '1px',\n  margin: '0px 0px 5px 0px'\n};\n\nconst Line = () => <hr style={style} />;\n\nexport default Line;","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { colors } from '@dhis2/ui';\nimport { useConfig } from '@dhis2/app-runtime';\nimport { useD2 } from '@dhis2/app-runtime-adapter-d2';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport Line from '../../../widgets/Line';\nimport { sGetMessagesRoot } from '../../../reducers/messages';\nimport { formatDate } from '../../../modules/util';\nimport { isViewMode } from '../../Dashboard/dashboardModes';\nimport './MessagesItem.css';\nconst PRIVATE = 'PRIVATE';\nconst messageTypes = {\n  [PRIVATE]: 'Private',\n  VALIDATION_RESULT: 'Validation',\n  TICKET: 'Ticket',\n  SYSTEM: 'System'\n};\nconst style = {\n  list: {\n    listStyleType: 'none',\n    paddingLeft: '0px'\n  },\n  seeAll: {\n    textAlign: 'center',\n    fontSize: '13px',\n    marginBottom: '5px'\n  },\n  sender: {\n    fontSize: '13px',\n    lineHeight: '15px',\n    margin: 0,\n    color: colors.grey800\n  },\n  snippet: {\n    color: colors.grey800,\n    fontSize: '13px',\n    lineHeight: '15px',\n    maxHeight: '30px',\n    overflow: 'hidden'\n  }\n};\n\nconst MessagesItem = ({\n  messages,\n  item,\n  dashboardMode\n}) => {\n  const [uiLocale, setUiLocale] = useState('');\n  const {\n    d2\n  } = useD2({});\n  const {\n    baseUrl\n  } = useConfig();\n  useEffect(() => {\n    const getUiLocale = async () => {\n      const uiLocale = await d2.currentUser.userSettings.get('keyUiLocale');\n      setUiLocale(uiLocale);\n    };\n\n    getUiLocale();\n  }, []);\n\n  const getMessageHref = msg => {\n    const msgIdentifier = msg ? `#/${msg.messageType}/${msg.id}` : '';\n    return `${baseUrl}/dhis-web-messaging/${msgIdentifier}`;\n  };\n\n  const getMessageSender = msg => {\n    const latestMsg = msg.messages.slice(-1)[0];\n    return latestMsg.sender ? latestMsg.sender.displayName : '';\n  };\n\n  const getMessageItems = () => {\n    const modeClass = isViewMode(dashboardMode) ? 'view' : null;\n    return messages.map(msg => {\n      const redirectToMsg = () => {\n        if (isViewMode(dashboardMode)) {\n          document.location.href = getMessageHref(msg);\n        }\n      };\n\n      const sender = msg.messageType === PRIVATE ? getMessageSender(msg) : messageTypes[msg.messageType];\n      const readClass = !msg.read ? 'unread' : null;\n      const latestMsg = msg.messages.slice(-1)[0];\n      const msgDate = latestMsg.lastUpdated;\n      return <li className={`message-item ${modeClass}`} key={msg.id} onClick={redirectToMsg}>\n                    <p className={`message-title ${readClass}`}>\n                        {msg.displayName} ({msg.messageCount})\n                    </p>\n                    <p style={style.sender}>\n                        {sender} - {formatDate(msgDate, uiLocale)}\n                    </p>\n                    <p style={style.snippet}>{latestMsg.text}</p>\n                </li>;\n    });\n  };\n\n  return <>\n            <ItemHeader title={i18n.t('Messages')} itemId={item.id} dashboardMode={dashboardMode} isShortened={item.shortened} />\n            <Line />\n            {messages.length > 0 && <div className=\"dashboard-item-content\">\n                    <ul style={style.list}>{getMessageItems()}</ul>\n                    <div style={style.seeAll}>\n                        <a href={getMessageHref()}>\n                            {i18n.t('See all messages')}\n                        </a>\n                    </div>\n                </div>}\n        </>;\n};\n\nMessagesItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  messages: PropTypes.array\n};\n\nconst mapStateToProps = state => {\n  return {\n    messages: Object.values(sGetMessagesRoot(state))\n  };\n};\n\nconst MessagesContainer = connect(mapStateToProps, null)(MessagesItem);\nexport default MessagesContainer;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nconst NotSupportedItem = props => <>\n        <ItemHeader title={i18n.t('Item type \"{{type}}\" not supported', {\n    type: props.item.type\n  })} itemId={props.item.id} dashboardMode={props.dashboardMode} isShortened={props.item.shortened} />\n        <div style={{\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '90%'\n  }}>\n            <NotInterestedIcon style={{\n      width: 100,\n      height: 100,\n      align: 'center'\n    }} color=\"disabled\" />\n        </div>\n    </>;\n\nNotSupportedItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object\n};\nexport default NotSupportedItem;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst DescriptionIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill={colors.grey500}>\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M14 2H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6zm2 16H8v-2h8v2zm0-4H8v-2h8v2zm-3-5V3.5L18.5 9H13z\" />\n    </svg>;\n\nDescriptionIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default DescriptionIcon;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst DeleteIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill={colors.red500}>\n        <path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>;\n\nDeleteIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default DeleteIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { colors } from '@dhis2/ui';\nimport { useConfig } from '@dhis2/app-runtime';\nimport DescriptionIcon from '../../../icons/Description';\nimport DeleteIcon from '../../../icons/Delete';\nimport Line from '../../../widgets/Line';\nimport { itemTypeMap, getItemUrl } from '../../../modules/itemTypes';\nimport { orArray } from '../../../modules/util';\nimport { tRemoveListItemContent } from './actions';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport { isEditMode } from '../../Dashboard/dashboardModes';\nimport classes from './Item.module.css';\n\nconst getItemTitle = item => itemTypeMap[item.type].pluralTitle;\n\nconst getContentItems = item => orArray(item[itemTypeMap[item.type].propName]).filter((item, index, array) => array.findIndex(el => el.id === item.id) === index);\n\nconst ListItem = ({\n  item,\n  dashboardMode,\n  tRemoveListItemContent\n}) => {\n  const {\n    baseUrl\n  } = useConfig();\n  const contentItems = getContentItems(item);\n\n  const getLink = contentItem => {\n    const deleteButton = <button className={classes.deletebutton} onClick={() => tRemoveListItemContent(item, contentItem)}>\n                <DeleteIcon className={classes.deleteicon} />\n            </button>;\n    return <>\n                <a className={classes.link} style={{\n        color: colors.grey900\n      }} href={getItemUrl(item.type, contentItem, baseUrl)}>\n                    {contentItem.name}\n                </a>\n                {isEditMode(dashboardMode) ? deleteButton : null}\n            </>;\n  };\n\n  return <>\n            <ItemHeader title={getItemTitle(item)} itemId={item.id} dashboardMode={dashboardMode} isShortened={item.shortened} />\n            <Line />\n            <div className=\"dashboard-item-content\">\n                <ul className={classes.list}>\n                    {contentItems.map(contentItem => <li className={classes.item} key={contentItem.id}>\n                            <DescriptionIcon className={classes.itemicon} />\n                            {getLink(contentItem)}\n                        </li>)}\n                </ul>\n            </div>\n        </>;\n};\n\nListItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  tRemoveListItemContent: PropTypes.func\n};\nexport default connect(null, {\n  tRemoveListItemContent\n})(ListItem);","import { acUpdateDashboardItem, acRemoveDashboardItem } from '../../../actions/editDashboard';\nimport { itemTypeMap } from '../../../modules/itemTypes';\nexport const tRemoveListItemContent = (dashboardItem, content) => dispatch => {\n  const listItemType = itemTypeMap[dashboardItem.type].propName;\n  const newContent = dashboardItem[listItemType].filter(item => item.id !== content.id);\n\n  if (newContent.length) {\n    dashboardItem[listItemType] = newContent;\n    dispatch(acUpdateDashboardItem(dashboardItem));\n  } else {\n    dispatch(acRemoveDashboardItem(dashboardItem));\n  }\n};","/** @module reducers/editDashboard */\nimport update from 'immutability-helper';\nimport isEmpty from 'lodash/isEmpty';\nimport { orArray } from '../modules/util';\nexport const SET_PRINT_DASHBOARD = 'SET_PRINT_DASHBOARD';\nexport const CLEAR_PRINT_DASHBOARD = 'CLEAR_PRINT_DASHBOARD';\nexport const ADD_PRINT_DASHBOARD_ITEM = 'ADD_PRINT_DASHBOARD_ITEM';\nexport const SET_PRINT_DASHBOARD_LAYOUT = 'SET_PRINT_DASHBOARD_LAYOUT';\nexport const REMOVE_PRINT_DASHBOARD_ITEM = 'REMOVE_PRINT_DASHBOARD_ITEM';\nexport const UPDATE_PRINT_DASHBOARD_ITEM = 'UPDATE_PRINT_DASHBOARD_ITEM';\nexport const DEFAULT_STATE_PRINT_DASHBOARD = {};\nconst DEFAULT_DASHBOARD_ITEMS = [];\nexport const NEW_PRINT_DASHBOARD_STATE = {\n  id: '',\n  name: '',\n  access: {},\n  description: '',\n  dashboardItems: DEFAULT_DASHBOARD_ITEMS\n};\nexport default ((state = DEFAULT_STATE_PRINT_DASHBOARD, action) => {\n  switch (action.type) {\n    case SET_PRINT_DASHBOARD:\n      {\n        const newState = {};\n        Object.keys(NEW_PRINT_DASHBOARD_STATE).map(k => newState[k] = action.value[k]);\n        return newState;\n      }\n\n    case CLEAR_PRINT_DASHBOARD:\n      return DEFAULT_STATE_PRINT_DASHBOARD;\n\n    case ADD_PRINT_DASHBOARD_ITEM:\n      if (!action.value.position) {\n        return update(state, {\n          dashboardItems: {\n            $unshift: [action.value]\n          }\n        });\n      }\n\n      return update(state, {\n        dashboardItems: {\n          $splice: [[parseInt(action.value.position), 0, action.value]]\n        }\n      });\n\n    case REMOVE_PRINT_DASHBOARD_ITEM:\n      {\n        const idToRemove = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === idToRemove);\n\n        if (dashboardItemIndex > -1) {\n          return update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1]]\n            }\n          });\n        }\n\n        return state;\n      }\n\n    case UPDATE_PRINT_DASHBOARD_ITEM:\n      {\n        const dashboardItem = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === dashboardItem.id);\n\n        if (dashboardItemIndex > -1) {\n          const newState = update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1, Object.assign({}, dashboardItem)]]\n            }\n          });\n          return newState;\n        }\n\n        return state;\n      }\n\n    case SET_PRINT_DASHBOARD_LAYOUT:\n      {\n        const stateItems = orArray(state.dashboardItems);\n        let layoutHasChanged = false;\n        const newStateItems = action.value.map(({\n          x,\n          y,\n          w,\n          h,\n          i\n        }) => {\n          const stateItem = stateItems.find(si => si.id === i);\n\n          if (!(stateItem.x === x && stateItem.y === y && stateItem.w === w && stateItem.h === h)) {\n            layoutHasChanged = true;\n            return Object.assign({}, stateItem, {\n              w,\n              h,\n              x,\n              y\n            });\n          }\n\n          return stateItem;\n        });\n        return layoutHasChanged ? { ...state,\n          dashboardItems: newStateItems\n        } : state;\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetPrintDashboardRoot = state => state.printDashboard; // selectors\n\nexport const sGetIsPrinting = state => !isEmpty(state.printDashboard);\nexport const sGetPrintDashboardName = state => sGetPrintDashboardRoot(state).name;\nexport const sGetPrintDashboardDescription = state => sGetPrintDashboardRoot(state).description;\nexport const sGetPrintDashboardItems = state => {\n  return sGetPrintDashboardRoot(state)?.dashboardItems || DEFAULT_DASHBOARD_ITEMS;\n};","import React from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport Input from '@material-ui/core/Input';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport PrintItemInfo from '../ItemHeader/PrintItemInfo';\nimport Line from '../../../widgets/Line';\nimport { Parser as RichTextParser, Editor as RichTextEditor } from '@dhis2/d2-ui-rich-text';\nimport { acUpdateDashboardItem } from '../../../actions/editDashboard';\nimport { sGetEditDashboardItems } from '../../../reducers/editDashboard';\nimport { sGetDashboardItems } from '../../../reducers/dashboards';\nimport { sGetIsPrinting, sGetPrintDashboardItems } from '../../../reducers/printDashboard';\nimport { isEditMode, PRINT_LAYOUT } from '../../Dashboard/dashboardModes';\nconst style = {\n  textDiv: {\n    padding: '10px',\n    whiteSpace: 'pre-line',\n    lineHeight: '20px'\n  },\n  textField: {\n    fontSize: '14px',\n    fontStretch: 'normal',\n    width: '90%',\n    margin: '0 auto',\n    display: 'block',\n    lineHeight: '24px'\n  },\n  container: {\n    marginBottom: '20px',\n    marginTop: '20px'\n  }\n};\n\nconst TextItem = props => {\n  const {\n    item,\n    dashboardMode,\n    text,\n    acUpdateDashboardItem\n  } = props;\n\n  const onChangeText = event => {\n    const updatedItem = { ...item,\n      text: event.target.value\n    };\n    acUpdateDashboardItem(updatedItem);\n  };\n\n  const viewItem = () => {\n    const textDivStyle = Object.assign({}, style.textField, style.textDiv);\n    return <div className=\"dashboard-item-content\" style={style.container}>\n                <RichTextParser style={textDivStyle}>{text}</RichTextParser>\n            </div>;\n  };\n\n  const editItem = () => {\n    return <>\n                <ItemHeader title={i18n.t('Text item')} itemId={item.id} dashboardMode={dashboardMode} />\n                <Line />\n                <div className=\"dashboard-item-content\">\n                    <RichTextEditor onEdit={onChangeText}>\n                        <Input value={text} multiline fullWidth style={style.textField} placeholder={i18n.t('Add text here')} onChange={onChangeText} />\n                    </RichTextEditor>\n                </div>\n            </>;\n  };\n\n  const printItem = () => {\n    const textDivStyle = Object.assign({}, style.textField, style.textDiv);\n    return <>\n                {props.item.shortened ? <PrintItemInfo /> : null}\n                <div className=\"dashboard-item-content\" style={style.container}>\n                    <RichTextParser style={textDivStyle}>{text}</RichTextParser>\n                </div>\n            </>;\n  };\n\n  let textItem;\n\n  if (isEditMode(dashboardMode)) {\n    textItem = editItem;\n  } else if (dashboardMode === PRINT_LAYOUT) {\n    textItem = printItem;\n  } else {\n    textItem = viewItem;\n  }\n\n  return <>{textItem()}</>;\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const isPrintPreview = sGetIsPrinting(state);\n  let items;\n\n  if (isPrintPreview) {\n    items = sGetPrintDashboardItems(state);\n  } else if (isEditMode(ownProps.dashboardMode)) {\n    items = sGetEditDashboardItems(state);\n  } else {\n    items = sGetDashboardItems(state);\n  }\n\n  const item = items.find(item => item.id === ownProps.item.id);\n  return {\n    text: item ? item.text : ''\n  };\n};\n\nTextItem.propTypes = {\n  acUpdateDashboardItem: PropTypes.func,\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  text: PropTypes.string\n};\nexport default connect(mapStateToProps, {\n  acUpdateDashboardItem\n})(TextItem);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\nimport { useD2 } from '@dhis2/app-runtime-adapter-d2';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport Line from '../../../widgets/Line';\nimport { FILTER_ORG_UNIT } from '../../../actions/itemFilters';\nimport { sGetItemFiltersRoot, DEFAULT_STATE_ITEM_FILTERS } from '../../../reducers/itemFilters';\nimport { EDIT, isEditMode } from '../../Dashboard/dashboardModes';\n\nconst getIframeSrc = (appDetails, item, itemFilters) => {\n  let iframeSrc = `${appDetails.launchUrl}?dashboardItemId=${item.id}`;\n\n  if (itemFilters[FILTER_ORG_UNIT] && itemFilters[FILTER_ORG_UNIT].length) {\n    const ouIds = itemFilters[FILTER_ORG_UNIT].map(ouFilter => ouFilter.path.split('/').slice(-1)[0]);\n    iframeSrc += `&userOrgUnit=${ouIds.join(',')}`;\n  }\n\n  return iframeSrc;\n};\n\nconst AppItem = ({\n  dashboardMode,\n  item,\n  itemFilters\n}) => {\n  const {\n    d2\n  } = useD2({});\n  let appDetails;\n  const appKey = item.appKey;\n\n  if (appKey) {\n    appDetails = d2.system.installedApps.find(app => app.key === appKey);\n  }\n\n  const hideTitle = appDetails?.settings?.dashboardWidget?.hideTitle && dashboardMode !== EDIT;\n  return appDetails && appDetails.name && appDetails.launchUrl ? <>\n            {!hideTitle && <>\n                    <ItemHeader title={appDetails.name} itemId={item.id} dashboardMode={dashboardMode} isShortened={item.shortened} />\n                    <Line />\n                </>}\n            <iframe title={appDetails.name} src={getIframeSrc(appDetails, item, itemFilters)} className={!hideTitle ? 'dashboard-item-content' : 'dashboard-item-content-hidden-title'} style={{\n      border: 'none'\n    }} />\n        </> : <>\n            <ItemHeader title={`${appKey} app not found`} />\n            <Line />\n            <div className=\"dashboard-item-content\" style={{\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      height: '90%'\n    }}>\n                <NotInterestedIcon color=\"disabled\" disabled style={{\n        width: 100,\n        height: 100,\n        align: 'center'\n      }} />\n            </div>\n        </>;\n};\n\nAppItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const itemFilters = !isEditMode(ownProps.dashboardMode) ? sGetItemFiltersRoot(state) : DEFAULT_STATE_ITEM_FILTERS;\n  return {\n    itemFilters\n  };\n};\n\nexport default connect(mapStateToProps)(AppItem);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { colors } from '@dhis2/ui';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nconst style = {\n  margin: '21px 28px',\n  fontSize: '14px',\n  lineHeight: '18px',\n  color: colors.grey600\n};\n\nconst SpacerItem = props => {\n  return <>\n            <ItemHeader title={i18n.t('Spacer')} itemId={props.item.id} dashboardMode={props.dashboardMode} isShortened={props.item.shortened} />\n            <p style={style}>\n                {i18n.t('Use a spacer to create empty vertical space between other dashboard items.')}\n            </p>\n        </>;\n};\n\nSpacerItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object\n};\nexport default SpacerItem;","import React from 'react';\n\nconst PageBreakItem = () => <div />;\n\nexport default PageBreakItem;","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { sGetSelectedId, sGetSelectedShowDescription } from '../../../reducers/selected';\nimport { sGetDashboardById, EMPTY_DASHBOARD } from '../../../reducers/dashboards';\nimport { sGetNamedItemFilters } from '../../../reducers/itemFilters';\nimport { sGetIsEditing } from '../../../reducers/editDashboard';\nimport { sGetPrintDashboardName, sGetPrintDashboardDescription } from '../../../reducers/printDashboard';\nimport classes from './styles/Item.module.css';\n\nconst PrintTitlePageItem = ({\n  name,\n  description,\n  itemFilters,\n  showDescription\n}) => {\n  const getItemFilterList = () => {\n    const listItems = itemFilters.map(({\n      name,\n      values\n    }) => <li className={classes.filterListItem} key={name}>\n                {name}: {values.map(val => val.name).join(', ')}\n            </li>);\n    return <ul className={classes.filterList}>{listItems}</ul>;\n  };\n\n  return <div className={classes.titlePage}>\n            <p className={classes.name}>{name}</p>\n            {showDescription && description && <p className={classes.description}>{description}</p>}\n            {itemFilters.length > 0 && <>\n                    <p className={classes.filterTitle}>\n                        {i18n.t('Filters applied')}\n                    </p>\n                    {getItemFilterList()}\n                </>}\n        </div>;\n};\n\nPrintTitlePageItem.propTypes = {\n  description: PropTypes.string,\n  itemFilters: PropTypes.array,\n  name: PropTypes.string,\n  showDescription: PropTypes.bool\n};\nPrintTitlePageItem.defaultProps = {\n  description: '',\n  name: '',\n  showDescription: false\n};\n\nconst mapStateToProps = state => {\n  const id = sGetSelectedId(state);\n  const isEditMode = sGetIsEditing(state);\n  const viewDashboard = sGetDashboardById(state, id) || EMPTY_DASHBOARD;\n  const name = isEditMode ? sGetPrintDashboardName(state) || i18n.t('Untitled dashboard') : viewDashboard.displayName;\n  const description = isEditMode ? sGetPrintDashboardDescription(state) : viewDashboard.displayDescription;\n  return {\n    name,\n    description,\n    itemFilters: sGetNamedItemFilters(state),\n    showDescription: sGetSelectedShowDescription(state)\n  };\n};\n\nexport default connect(mapStateToProps)(PrintTitlePageItem);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport VisualizationItem from './VisualizationItem/Item';\nimport MessagesItem from './MessagesItem/Item';\nimport NotSupportedItem from './NotSupportedItem/Item';\nimport ListItem from './ListItem/Item';\nimport TextItem from './TextItem/Item';\nimport AppItem from './AppItem/Item';\nimport SpacerItem from './SpacerItem/Item';\nimport PageBreakItem from './PageBreakItem/Item';\nimport PrintTitlePageItem from './PrintTitlePageItem/Item';\nimport { APP, VISUALIZATION, REPORT_TABLE, CHART, MAP, EVENT_CHART, EVENT_REPORT, MESSAGES, REPORTS, RESOURCES, USERS, TEXT, SPACER, PAGEBREAK, PRINT_TITLE_PAGE } from '../../modules/itemTypes';\n\nconst getGridItem = type => {\n  switch (type) {\n    case VISUALIZATION:\n    case REPORT_TABLE:\n    case CHART:\n    case MAP:\n    case EVENT_CHART:\n    case EVENT_REPORT:\n      return VisualizationItem;\n\n    case MESSAGES:\n      return MessagesItem;\n\n    case REPORTS:\n    case RESOURCES:\n    case USERS:\n      return ListItem;\n\n    case TEXT:\n      return TextItem;\n\n    case SPACER:\n      return SpacerItem;\n\n    case APP:\n      return AppItem;\n\n    case PAGEBREAK:\n      return PageBreakItem;\n\n    case PRINT_TITLE_PAGE:\n      return PrintTitlePageItem;\n\n    default:\n      return NotSupportedItem;\n  }\n};\n\nexport const Item = props => {\n  const GridItem = getGridItem(props.item.type);\n  return <GridItem item={props.item} gridWidth={props.gridWidth} dashboardMode={props.dashboardMode} onToggleItemExpanded={props.onToggleItemExpanded} />;\n};\nItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  gridWidth: PropTypes.number,\n  item: PropTypes.object,\n  onToggleItemExpanded: PropTypes.func\n};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash/debounce';\nimport pick from 'lodash/pick';\nconst defaultDebounceMs = 100;\nconst defaultBufferFactor = 0.25;\n\nclass ProgressiveLoadingContainer extends Component {\n  static propTypes = {\n    children: PropTypes.node.isRequired,\n    bufferFactor: PropTypes.number,\n    className: PropTypes.string,\n    debounceMs: PropTypes.number,\n    style: PropTypes.object\n  };\n  static defaultProps = {\n    debounceMs: defaultDebounceMs,\n    bufferFactor: defaultBufferFactor\n  };\n  state = {\n    shouldLoad: false\n  };\n  containerRef = null;\n  shouldLoadHandler = null;\n  handlerOptions = {\n    passive: true\n  };\n\n  checkShouldLoad() {\n    if (!this.containerRef) {\n      return;\n    }\n\n    const bufferPx = this.props.bufferFactor * window.innerHeight;\n    const rect = this.containerRef.getBoundingClientRect();\n\n    if (rect.bottom > -bufferPx && rect.top < window.innerHeight + bufferPx) {\n      this.setState({\n        shouldLoad: true\n      });\n      this.removeHandler();\n    }\n  }\n\n  registerHandler() {\n    this.shouldLoadHandler = debounce(() => this.checkShouldLoad(), this.props.debounceMs);\n    Array.from(document.getElementsByClassName('dashboard-scroll-container')).forEach(container => {\n      container.addEventListener('scroll', this.shouldLoadHandler, this.handlerOptions);\n    });\n  }\n\n  removeHandler() {\n    Array.from(document.getElementsByClassName('dashboard-scroll-container')).forEach(container => {\n      container.removeEventListener('scroll', this.shouldLoadHandler, this.handlerOptions);\n    });\n  }\n\n  componentDidMount() {\n    this.registerHandler();\n    this.checkShouldLoad();\n  }\n\n  componentWillUnmount() {\n    this.removeHandler();\n  }\n\n  render() {\n    const {\n      children,\n      className,\n      style,\n      ...props\n    } = this.props;\n    const {\n      shouldLoad\n    } = this.state;\n    const eventProps = pick(props, ['onMouseDown', 'onTouchStart', 'onMouseUp', 'onTouchEnd']);\n    return <div ref={ref => this.containerRef = ref} style={style} className={className} data-test={`dashboarditem-${props.itemId}`} {...eventProps}>\n                {shouldLoad && children}\n            </div>;\n  }\n\n}\n\nexport default ProgressiveLoadingContainer;","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport cx from 'classnames';\nimport { Responsive as ResponsiveReactGridLayout } from 'react-grid-layout';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport { useWindowDimensions } from '../WindowDimensionsProvider';\nimport { Item } from '../Item/Item';\nimport { GRID_ROW_HEIGHT_PX, SM_SCREEN_GRID_COLUMNS, GRID_COMPACT_TYPE, GRID_PADDING_PX, MARGIN_PX, MARGIN_SM_PX, hasShape, GRID_COLUMNS, getSmallLayout, getGridWidth, getProportionalHeight } from '../../modules/gridUtil';\nimport { orArray } from '../../modules/util';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport { sGetSelectedId, sGetSelectedIsLoading } from '../../reducers/selected';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport ProgressiveLoadingContainer from '../Item/ProgressiveLoadingContainer';\nimport { VIEW } from '../Dashboard/dashboardModes';\nimport { getBreakpoint, isSmallScreen } from '../../modules/smallScreen';\nimport classes from './styles/ItemGrid.module.css';\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\nimport './styles/ItemGrid.css';\nconst EXPANDED_HEIGHT = 17;\nconst EXPANDED_HEIGHT_SM = 13;\n\nconst ResponsiveItemGrid = ({\n  isLoading,\n  dashboardItems\n}) => {\n  const {\n    width\n  } = useWindowDimensions();\n  const [expandedItems, setExpandedItems] = useState({});\n  const [displayItems, setDisplayItems] = useState(dashboardItems);\n  const [layoutSm, setLayoutSm] = useState([]);\n  const [gridWidth, setGridWidth] = useState(0);\n  useEffect(() => {\n    if (isSmallScreen(width)) {\n      setLayoutSm(getItemsWithAdjustedHeight(getSmallLayout(dashboardItems, width)));\n    }\n\n    setDisplayItems(getItemsWithAdjustedHeight(dashboardItems));\n  }, [expandedItems, width, dashboardItems]);\n\n  const onToggleItemExpanded = clickedId => {\n    const isExpanded = typeof expandedItems[clickedId] === 'boolean' ? expandedItems[clickedId] : false;\n    const newExpandedItems = { ...expandedItems\n    };\n    newExpandedItems[clickedId] = !isExpanded;\n    setExpandedItems(newExpandedItems);\n  };\n\n  const getItemsWithAdjustedHeight = items => items.map(item => {\n    const expandedItem = expandedItems[item.id];\n\n    if (expandedItem && expandedItem === true) {\n      const expandedHeight = isSmallScreen(width) ? EXPANDED_HEIGHT_SM : EXPANDED_HEIGHT;\n      return Object.assign({}, item, {\n        h: item.h + expandedHeight,\n        smallOriginalH: getProportionalHeight(item, width)\n      });\n    }\n\n    return item;\n  });\n\n  const getItemComponent = item => <ProgressiveLoadingContainer key={item.i} className={cx(item.type, 'view', `reactgriditem-${item.id}`)} itemId={item.id}>\n            <Item item={item} gridWidth={gridWidth} dashboardMode={VIEW} onToggleItemExpanded={onToggleItemExpanded} />\n        </ProgressiveLoadingContainer>;\n\n  const getItemComponents = items => items.map(item => getItemComponent(item));\n\n  const onWidthChanged = containerWidth => {\n    setTimeout(() => {\n      setGridWidth(containerWidth);\n    }, 200);\n  };\n\n  if (!isLoading && !dashboardItems.length) {\n    return <NoContentMessage text={i18n.t('There are no items on this dashboard')} />;\n  }\n\n  return <>\n            {isLoading ? <Layer translucent>\n                    <CenteredContent>\n                        <CircularLoader />\n                    </CenteredContent>\n                </Layer> : null}\n            <ResponsiveReactGridLayout className={classes.grid} rowHeight={GRID_ROW_HEIGHT_PX} width={getGridWidth(width)} cols={{\n      lg: GRID_COLUMNS,\n      sm: SM_SCREEN_GRID_COLUMNS\n    }} breakpoints={{\n      lg: getBreakpoint(),\n      sm: 0\n    }} layouts={{\n      lg: displayItems,\n      sm: layoutSm\n    }} compactType={GRID_COMPACT_TYPE} margin={isSmallScreen(width) ? MARGIN_SM_PX : MARGIN_PX} containerPadding={{\n      lg: GRID_PADDING_PX,\n      sm: GRID_PADDING_PX\n    }} isDraggable={false} isResizable={false} draggableCancel=\"input,textarea\" onWidthChange={onWidthChanged}>\n                {getItemComponents(displayItems)}\n            </ResponsiveReactGridLayout>\n        </>;\n};\n\nResponsiveItemGrid.propTypes = {\n  dashboardItems: PropTypes.array,\n  isLoading: PropTypes.bool\n};\n\nconst mapStateToProps = state => {\n  const selectedDashboard = sGetDashboardById(state, sGetSelectedId(state));\n  const dashboardItems = orArray(sGetDashboardItems(state)).filter(hasShape);\n  return {\n    isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n    dashboardItems\n  };\n};\n\nexport default connect(mapStateToProps)(ResponsiveItemGrid);","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { acRemoveItemFilter } from '../../actions/itemFilters';\nimport { acSetActiveModalDimension } from '../../actions/activeModalDimension';\nimport classes from './styles/FilterBadge.module.css';\n\nconst FilterBadge = ({\n  filter,\n  openFilterModal,\n  removeFilter\n}) => <div className={classes.container} data-test=\"dashboard-filter-badge\">\n        <span className={classes.badge} onClick={() => openFilterModal({\n    id: filter.id,\n    name: filter.name\n  })}>\n            {`${filter.name}: ${filter.values.length > 1 ? i18n.t('{{count}} selected', {\n      count: filter.values.length\n    }) : filter.values[0].name}`}\n        </span>\n        <span className={classes.removeButton} onClick={() => removeFilter(filter.id)}>\n            {i18n.t('Remove')}\n        </span>\n    </div>;\n\nFilterBadge.propTypes = {\n  filter: PropTypes.object.isRequired,\n  openFilterModal: PropTypes.func.isRequired,\n  removeFilter: PropTypes.func.isRequired\n};\nexport default connect(null, {\n  openFilterModal: acSetActiveModalDimension,\n  removeFilter: acRemoveItemFilter\n})(FilterBadge);","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport FilterBadge from './FilterBadge';\nimport { sGetNamedItemFilters } from '../../reducers/itemFilters';\nimport classes from './styles/FilterBar.module.css';\n\nconst FilterBar = ({\n  filters\n}) => filters.length ? <div className={classes.bar}>\n            {filters.map(filter => <FilterBadge key={filter.id} filter={filter} />)}\n        </div> : null;\n\nFilterBar.propTypes = {\n  filters: PropTypes.array.isRequired\n};\nFilterBar.defaultProps = {\n  filters: []\n};\n\nconst mapStateToProps = state => ({\n  filters: sGetNamedItemFilters(state)\n});\n\nexport default connect(mapStateToProps)(FilterBar);","import { generateUid } from 'd2/uid';\nimport { SET_PRINT_DASHBOARD, CLEAR_PRINT_DASHBOARD, SET_PRINT_DASHBOARD_LAYOUT, ADD_PRINT_DASHBOARD_ITEM, REMOVE_PRINT_DASHBOARD_ITEM, UPDATE_PRINT_DASHBOARD_ITEM } from '../reducers/printDashboard';\nimport { NEW_ITEM_SHAPE, getGridItemProperties, getPageBreakItemShape, getPrintTitlePageItemShape } from '../modules/gridUtil';\nimport { itemTypeMap, PAGEBREAK } from '../modules/itemTypes'; // actions\n\nexport const acSetPrintDashboard = (dashboard, items) => {\n  const val = { ...dashboard,\n    dashboardItems: items\n  };\n  return {\n    type: SET_PRINT_DASHBOARD,\n    value: val\n  };\n};\nexport const acClearPrintDashboard = () => ({\n  type: CLEAR_PRINT_DASHBOARD\n});\nexport const acUpdatePrintDashboardLayout = value => ({\n  type: SET_PRINT_DASHBOARD_LAYOUT,\n  value\n});\nexport const acAddPrintDashboardItem = item => {\n  const type = item.type;\n  delete item.type;\n  const itemPropName = itemTypeMap[type].propName;\n  const id = generateUid();\n  const gridItemProperties = getGridItemProperties(id);\n  let shape;\n\n  if (type === PAGEBREAK) {\n    const yPos = item.yPos || 0;\n    shape = getPageBreakItemShape(yPos, item.isStatic);\n  } else {\n    shape = getPrintTitlePageItemShape(item.isOneItemPerPage);\n  }\n\n  return {\n    type: ADD_PRINT_DASHBOARD_ITEM,\n    value: {\n      id,\n      type,\n      position: item.position || null,\n      [itemPropName]: item.content,\n      ...NEW_ITEM_SHAPE,\n      ...gridItemProperties,\n      ...shape\n    }\n  };\n};\nexport const acRemovePrintDashboardItem = value => ({\n  type: REMOVE_PRINT_DASHBOARD_ITEM,\n  value\n});\nexport const acUpdatePrintDashboardItem = item => ({\n  type: UPDATE_PRINT_DASHBOARD_ITEM,\n  value: item\n});","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { ComponentCover } from '@dhis2/ui';\nimport cx from 'classnames';\nimport DashboardContainer from './DashboardContainer';\nimport ViewTitleBar from '../TitleBar/ViewTitleBar';\nimport ViewItemGrid from '../ItemGrid/ViewItemGrid';\nimport FilterBar from '../FilterBar/FilterBar';\nimport DashboardsBar from '../ControlBar/ViewControlBar/DashboardsBar';\nimport { sGetIsEditing } from '../../reducers/editDashboard';\nimport { sGetIsPrinting } from '../../reducers/printDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { acClearEditDashboard } from '../../actions/editDashboard';\nimport { acClearPrintDashboard } from '../../actions/printDashboard';\nimport classes from './styles/ViewDashboard.module.css';\nexport const ViewDashboard = props => {\n  const [controlbarExpanded, setControlbarExpanded] = useState(false);\n  useEffect(() => {\n    if (props.dashboardIsEditing) {\n      props.clearEditDashboard();\n    } else if (props.dashboardIsPrinting) {\n      props.clearPrintDashboard();\n    }\n  }, [props.dashboardIsEditing, props.dashboardIsPrinting]);\n  useEffect(() => {\n    Array.from(document.getElementsByClassName('dashboard-scroll-container')).forEach(container => {\n      container.scroll(0, 0);\n    });\n  }, [props.selectedId]);\n\n  const onExpandedChanged = expanded => setControlbarExpanded(expanded);\n\n  return <div className={cx(classes.container, 'dashboard-scroll-container')}>\n            <DashboardsBar expanded={controlbarExpanded} onExpandedChanged={onExpandedChanged} />\n            <DashboardContainer covered={controlbarExpanded}>\n                {controlbarExpanded && <ComponentCover className={classes.cover} translucent onClick={() => setControlbarExpanded(false)} />}\n                <ViewTitleBar />\n                <FilterBar />\n                <ViewItemGrid />\n            </DashboardContainer>\n        </div>;\n};\nViewDashboard.propTypes = {\n  clearEditDashboard: PropTypes.func,\n  clearPrintDashboard: PropTypes.func,\n  dashboardIsEditing: PropTypes.bool,\n  dashboardIsPrinting: PropTypes.bool,\n  selectedId: PropTypes.string\n};\n\nconst mapStateToProps = state => {\n  return {\n    dashboardIsEditing: sGetIsEditing(state),\n    dashboardIsPrinting: sGetIsPrinting(state),\n    selectedId: sGetSelectedId(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  clearEditDashboard: acClearEditDashboard,\n  clearPrintDashboard: acClearPrintDashboard\n})(ViewDashboard);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { InputField } from '@dhis2/ui';\n\nconst ItemSearchField = props => <InputField name=\"Dashboard item search\" label={i18n.t('Search for items to add to this dashboard')} type=\"text\" onChange={props.onChange} onFocus={props.onFocus} value={props.value} dataTest=\"item-search\" />;\n\nItemSearchField.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n  onFocus: PropTypes.func\n};\nexport default ItemSearchField;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { MenuItem, colors } from '@dhis2/ui';\nimport classes from './styles/HeaderMenuItem.module.css';\n\nconst HeaderMenuItem = ({\n  title\n}) => <MenuItem className={classes.item} dense key={title} disabled label={<span style={{\n  color: colors.grey800,\n  fontWeight: '600'\n}}>\n                {title}\n            </span>} />;\n\nHeaderMenuItem.propTypes = {\n  title: PropTypes.string.isRequired\n};\nexport default HeaderMenuItem;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst LaunchIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\" fill={colors.grey600} viewBox=\"0 0 24 24\">\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z\" />\n    </svg>;\n\nLaunchIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default LaunchIcon;","import React from 'react';\nimport { MenuItem, colors } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport { visTypeIcons } from '@dhis2/analytics';\nimport { getItemIcon, VISUALIZATION } from '../../modules/itemTypes';\nimport LaunchIcon from '../../icons/Launch';\nimport classes from './styles/ContentMenuItem.module.css';\n\nconst LaunchLink = ({\n  url\n}) => <a onClick={e => e.stopPropagation()} className={classes.launchLink} target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n        <LaunchIcon />\n    </a>;\n\nLaunchLink.propTypes = {\n  url: PropTypes.string\n};\n\nconst InsertButton = () => <button className={classes.buttonInsert}>{i18n.t('Insert')}</button>;\n\nconst ContentMenuItem = ({\n  type,\n  name,\n  onInsert,\n  url,\n  visType\n}) => {\n  const ItemIcon = getItemIcon(type);\n  const renderedItemIcon = type === VISUALIZATION ? visTypeIcons[visType] : <ItemIcon style={{\n    fill: colors.grey600\n  }} />;\n  return <MenuItem dense onClick={onInsert} label={<div className={classes.menuItem}>\n                    <div className={classes.label}>\n                        <span style={{\n        marginRight: '6px'\n      }}>\n                            {renderedItemIcon}\n                        </span>\n                        <span>{name}</span>\n                        {url ? <LaunchLink url={url} /> : null}\n                    </div>\n                    <InsertButton />\n                </div>} dataTest={`menu-item-${name}`} />;\n};\n\nContentMenuItem.propTypes = {\n  name: PropTypes.string,\n  type: PropTypes.string,\n  url: PropTypes.string,\n  visType: PropTypes.string,\n  onInsert: PropTypes.func\n};\nexport default ContentMenuItem;","import { sGetEditDashboardRoot } from '../../reducers/editDashboard';\nimport { itemTypeMap } from '../../modules/itemTypes';\nimport { acAddDashboardItem, acUpdateDashboardItem } from '../../actions/editDashboard';\nexport const tAddListItemContent = (type, content) => (dispatch, getState) => {\n  const state = getState();\n  const listItemType = itemTypeMap[type].propName;\n  const dashboardItems = sGetEditDashboardRoot(state).dashboardItems;\n  const dashboardItemIndex = dashboardItems.findIndex(item => item.type === type);\n  let dashboardItem; // Reports/Resources/Users dashboard item type already present in dashboard\n\n  if (dashboardItemIndex > -1) {\n    dashboardItem = dashboardItems[dashboardItemIndex];\n    dashboardItem[listItemType].push(content);\n    dispatch(acUpdateDashboardItem(dashboardItem));\n  } else {\n    dashboardItem = {\n      type: type,\n      content: [content]\n    };\n    dispatch(acAddDashboardItem(dashboardItem));\n  }\n};","import i18n from '@dhis2/d2-i18n';\nimport { VISUALIZATION, MAP, EVENT_CHART, EVENT_REPORT, REPORTS, RESOURCES, APP, MESSAGES, TEXT, SPACER } from '../../modules/itemTypes';\nexport const singleItems = [{\n  id: 'additional',\n  header: i18n.t('Additional items'),\n  items: [{\n    type: TEXT,\n    name: i18n.t('Text box'),\n    content: ''\n  }, {\n    type: MESSAGES,\n    name: i18n.t('Messages'),\n    content: 'true'\n  }, {\n    type: SPACER,\n    name: i18n.t('Spacer'),\n    content: ''\n  }]\n}]; // categorizedItems are grouped in the item selector menu\n\nexport const categorizedItems = [VISUALIZATION, MAP, EVENT_REPORT, EVENT_CHART, REPORTS, RESOURCES, APP]; // listItemTypes are included in a single dashboard item\n\nexport const listItemTypes = [REPORTS, RESOURCES];","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { MenuItem, Divider } from '@dhis2/ui';\nimport { useConfig } from '@dhis2/app-runtime';\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\nimport { tAddListItemContent } from './actions';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\nimport { getItemUrl, APP, VISUALIZATION } from '../../modules/itemTypes';\nimport { categorizedItems, listItemTypes } from './selectableItems';\nimport classes from './styles/CategorizedMenuGroup.module.css';\n\nconst CategorizedMenuGroup = ({\n  type,\n  title,\n  items,\n  hasMore,\n  acAddDashboardItem,\n  tAddListItemContent,\n  onChangeItemsLimit\n}) => {\n  const {\n    baseUrl\n  } = useConfig();\n  const [seeMore, setSeeMore] = useState(false);\n\n  const addItem = item => () => {\n    if (type === APP) {\n      acAddDashboardItem({\n        type,\n        content: item.key\n      });\n    } else {\n      const newItem = {\n        id: item.id,\n        name: item.displayName || item.name\n      };\n\n      if (listItemTypes.includes(type)) {\n        tAddListItemContent(type, newItem);\n      } else {\n        acAddDashboardItem({\n          type,\n          content: newItem\n        });\n      }\n    }\n  };\n\n  const toggleSeeMore = () => {\n    setSeeMore(!seeMore);\n    onChangeItemsLimit(type);\n  };\n\n  return <>\n            <HeaderMenuItem title={title} />\n            {items.map(item => {\n      const itemUrl = getItemUrl(type, item, baseUrl);\n      return <ContentMenuItem key={item.id || item.key} type={type} visType={type === VISUALIZATION ? item.type : type} name={item.displayName || item.name} onInsert={addItem(item)} url={itemUrl} />;\n    })}\n            {hasMore ? <MenuItem dense key={`showmore${title}`} onClick={toggleSeeMore} label={<button className={classes.showMoreButton}>\n                            {seeMore ? i18n.t('Show fewer') : i18n.t('Show more')}\n                        </button>} /> : null}\n            <Divider margin=\"8px 0px\" />\n        </>;\n};\n\nCategorizedMenuGroup.propTypes = {\n  items: PropTypes.array.isRequired,\n  title: PropTypes.string.isRequired,\n  type: PropTypes.oneOf(categorizedItems).isRequired,\n  onChangeItemsLimit: PropTypes.func.isRequired,\n  acAddDashboardItem: PropTypes.func,\n  hasMore: PropTypes.bool,\n  tAddListItemContent: PropTypes.func\n};\nexport default connect(null, {\n  acAddDashboardItem,\n  tAddListItemContent\n})(CategorizedMenuGroup);","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\n\nconst SinglesMenuGroup = ({\n  acAddDashboardItem,\n  category\n}) => {\n  const addToDashboard = ({\n    type,\n    content\n  }) => () => {\n    acAddDashboardItem({\n      type,\n      content\n    });\n  };\n\n  return <>\n            <HeaderMenuItem title={category.header} />\n            {category.items.map(item => <ContentMenuItem key={item.type} type={item.type} name={item.name} onInsert={addToDashboard(item)} />)}\n        </>;\n};\n\nSinglesMenuGroup.propTypes = {\n  acAddDashboardItem: PropTypes.func,\n  category: PropTypes.object\n};\nexport default connect(null, {\n  acAddDashboardItem\n})(SinglesMenuGroup);","import { useState, useEffect } from 'react';\n\nconst useDebounce = (value, delay) => {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [value, delay]);\n  return debouncedValue;\n};\n\nexport default useDebounce;","import React, { useState, useEffect, createRef } from 'react';\nimport { Popover, FlyoutMenu } from '@dhis2/ui';\nimport { useDataEngine } from '@dhis2/app-runtime';\nimport ItemSearchField from './ItemSearchField';\nimport CategorizedMenuGroup from './CategorizedMenuGroup';\nimport SinglesMenuGroup from './SinglesMenuGroup';\nimport { singleItems, categorizedItems } from './selectableItems';\nimport { itemTypeMap, getDefaultItemCount } from '../../modules/itemTypes';\nimport useDebounce from '../../modules/useDebounce';\nimport { getDashboardsQQuery } from '../../api/dashboardsQ';\nimport classes from './styles/ItemSelector.module.css';\n\nconst ItemSelector = () => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [filter, setFilter] = useState('');\n  const [items, setItems] = useState(null);\n  const [maxOptions, setMaxOptions] = useState(new Set());\n  const dataEngine = useDataEngine();\n  const debouncedFilterText = useDebounce(filter, 350);\n  useEffect(() => {\n    const query = getDashboardsQQuery(debouncedFilterText, Array.from(maxOptions));\n    dataEngine.query({\n      items: query\n    }).then(res => setItems(res.items));\n  }, [debouncedFilterText, maxOptions]);\n\n  const closeMenu = () => {\n    setIsOpen(false);\n    setFilter('');\n    setMaxOptions(new Set());\n  };\n\n  const openMenu = () => setIsOpen(true);\n\n  const getCategorizedMenuGroups = () => {\n    return categorizedItems.filter(type => {\n      const itemType = itemTypeMap[type];\n      return items && items[itemType.endPointName];\n    }).map(type => {\n      const itemType = itemTypeMap[type];\n      const itemCount = getDefaultItemCount(type);\n      const allItems = items[itemType.endPointName];\n      const hasMore = allItems.length > itemCount;\n      const displayItems = maxOptions.has(itemType.id) ? allItems : allItems.slice(0, itemCount);\n      return <CategorizedMenuGroup key={type} type={type} title={itemType.pluralTitle} items={displayItems} onChangeItemsLimit={updateMaxOptions} hasMore={hasMore} />;\n    });\n  };\n\n  const getSinglesMenuGroups = () => singleItems.map(category => <SinglesMenuGroup key={category.id} category={category} />);\n\n  const getMenuGroups = () => getCategorizedMenuGroups().concat(getSinglesMenuGroups());\n\n  const updateMaxOptions = type => {\n    if (type) {\n      const options = new Set(maxOptions);\n      options.has(type) ? options.delete(type) : options.add(type);\n      setMaxOptions(options);\n    } else {\n      setMaxOptions(new Set());\n    }\n  };\n\n  const updateFilter = ({\n    value\n  }) => setFilter(value);\n\n  const inputRef = createRef();\n  return <>\n            <span ref={inputRef}>\n                <ItemSearchField value={filter} onChange={updateFilter} onFocus={openMenu} />\n            </span>\n            {isOpen && <Popover reference={inputRef} placement=\"bottom-start\" onClickOutside={closeMenu} arrow={false} maxWidth={700}>\n                    <div className={classes.popover}>\n                        <FlyoutMenu className={classes.menu} dataTest=\"item-menu\" maxWidth=\"700px\">\n                            {getMenuGroups()}\n                        </FlyoutMenu>\n                    </div>\n                </Popover>}\n        </>;\n};\n\nexport default ItemSelector;","export const getDashboardsQQuery = (query = '', maxItems = []) => {\n  return {\n    resource: `dashboards/q/${query}`,\n    params: {\n      count: 11,\n      max: maxItems\n    }\n  };\n};","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { InputField, TextAreaField } from '@dhis2/ui';\nimport ItemSelector from '../ItemSelector/ItemSelector';\nimport { acSetDashboardTitle, acSetDashboardDescription } from '../../actions/editDashboard';\nimport { orObject } from '../../modules/util';\nimport { sGetEditDashboardRoot } from '../../reducers/editDashboard';\nimport classes from './styles/EditTitleBar.module.css';\nexport const EditTitleBar = ({\n  name,\n  description,\n  onChangeTitle,\n  onChangeDescription\n}) => {\n  const updateTitle = (_, e) => {\n    onChangeTitle(e.target.value);\n  };\n\n  const updateDescription = (_, e) => {\n    onChangeDescription(e.target.value);\n  };\n\n  return <section className={classes.section}>\n            <div className={classes.titleDescription}>\n                <InputField className={classes.title} name=\"Dashboard title input\" label={i18n.t('Dashboard title')} type=\"text\" onChange={updateTitle} value={name} placeholder={i18n.t('Untitled dashboard')} dataTest=\"dashboard-title-input\" />\n                <TextAreaField className={classes.description} name=\"Dashboard description input\" label={i18n.t('Dashboard description')} onChange={updateDescription} value={description} dataTest=\"dashboard-description-input\" />\n            </div>\n            <div className={classes.itemSelector}>\n                <ItemSelector />\n            </div>\n        </section>;\n};\nEditTitleBar.propTypes = {\n  onChangeDescription: PropTypes.func.isRequired,\n  onChangeTitle: PropTypes.func.isRequired,\n  description: PropTypes.string,\n  name: PropTypes.string\n};\nEditTitleBar.defaultProps = {\n  name: '',\n  description: ''\n};\n\nconst mapStateToProps = state => {\n  const selectedDashboard = orObject(sGetEditDashboardRoot(state));\n  return {\n    name: selectedDashboard.name,\n    description: selectedDashboard.description\n  };\n};\n\nconst mapDispatchToProps = {\n  onChangeTitle: acSetDashboardTitle,\n  onChangeDescription: acSetDashboardDescription\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(EditTitleBar);","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Responsive as ResponsiveReactGridLayout } from 'react-grid-layout';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport cx from 'classnames';\nimport { acUpdateDashboardLayout } from '../../actions/editDashboard';\nimport { Item } from '../Item/Item';\nimport { resize as pluginResize } from '../Item/VisualizationItem/Visualization/plugin';\nimport { isVisualizationType } from '../../modules/itemTypes';\nimport { GRID_ROW_HEIGHT_PX, GRID_COMPACT_TYPE, MARGIN_PX, GRID_PADDING_PX, GRID_COLUMNS, hasShape, getGridWidth } from '../../modules/gridUtil';\nimport { getBreakpoint } from '../../modules/smallScreen';\nimport getGridItemDomId from '../../modules/getGridItemDomId';\nimport { orArray } from '../../modules/util';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport { sGetSelectedIsLoading } from '../../reducers/selected';\nimport { sGetEditDashboardRoot, sGetEditDashboardItems } from '../../reducers/editDashboard';\nimport ProgressiveLoadingContainer from '../Item/ProgressiveLoadingContainer';\nimport { EDIT } from '../Dashboard/dashboardModes';\nimport { useWindowDimensions } from '../WindowDimensionsProvider';\nimport classes from './styles/ItemGrid.module.css';\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\nimport './styles/ItemGrid.css';\n\nconst EditItemGrid = ({\n  isLoading,\n  dashboardItems,\n  acUpdateDashboardLayout\n}) => {\n  const [gridWidth, setGridWidth] = useState(0);\n  const {\n    width\n  } = useWindowDimensions();\n\n  const onLayoutChange = newLayout => {\n    acUpdateDashboardLayout(newLayout);\n  };\n\n  const onResizeStop = (layout, oldItem, newItem) => {\n    const el = document.querySelector(`#${getGridItemDomId(newItem.i)}`) || {};\n    if (typeof el.setViewportSize === 'function') setTimeout(() => el.setViewportSize(el.clientWidth - 5, el.clientHeight - 5), 10);\n    const dashboardItem = dashboardItems.find(item => item.id === newItem.i); // call resize on the item component if it's a plugin type\n\n    if (dashboardItem && isVisualizationType(dashboardItem)) {\n      pluginResize(dashboardItem);\n    }\n  };\n\n  const getItemComponent = item => <ProgressiveLoadingContainer key={item.i} className={cx(item.type, 'edit')} itemId={item.id}>\n            <Item item={item} gridWidth={gridWidth} dashboardMode={EDIT} />\n        </ProgressiveLoadingContainer>;\n\n  const getItemComponents = items => items.map(item => getItemComponent(item));\n\n  const onWidthChanged = containerWidth => {\n    setTimeout(() => {\n      setGridWidth(containerWidth);\n    }, 200);\n  };\n\n  if (!isLoading && !dashboardItems.length) {\n    return <NoContentMessage text={i18n.t('There are no items on this dashboard')} />;\n  }\n\n  return <>\n            {isLoading ? <Layer translucent>\n                    <CenteredContent>\n                        <CircularLoader />\n                    </CenteredContent>\n                </Layer> : null}\n            <ResponsiveReactGridLayout className={classes.grid} rowHeight={GRID_ROW_HEIGHT_PX} width={getGridWidth(width)} cols={{\n      lg: GRID_COLUMNS\n    }} breakpoints={{\n      lg: getBreakpoint()\n    }} layouts={{\n      lg: dashboardItems\n    }} compactType={GRID_COMPACT_TYPE} margin={MARGIN_PX} containerPadding={{\n      lg: GRID_PADDING_PX\n    }} onLayoutChange={onLayoutChange} onResizeStop={onResizeStop} onWidthChange={onWidthChanged} isDraggable={true} isResizable={true} draggableCancel=\"input,textarea\">\n                {getItemComponents(dashboardItems)}\n            </ResponsiveReactGridLayout>\n        </>;\n};\n\nEditItemGrid.propTypes = {\n  acUpdateDashboardLayout: PropTypes.func,\n  dashboardItems: PropTypes.array,\n  isLoading: PropTypes.bool\n}; // Container\n\nconst mapStateToProps = state => {\n  const selectedDashboard = sGetEditDashboardRoot(state);\n  const dashboardItems = orArray(sGetEditDashboardItems(state)).filter(hasShape);\n  return {\n    isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n    dashboardItems\n  };\n};\n\nconst mapDispatchToProps = {\n  acUpdateDashboardLayout\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(EditItemGrid);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Button, Modal, ModalContent, ModalActions, ButtonStrip, ModalTitle } from '@dhis2/ui';\nimport classes from './styles/ConfirmDeleteDialog.module.css';\nexport const ConfirmDeleteDialog = ({\n  dashboardName,\n  onDeleteConfirmed,\n  onContinueEditing,\n  open\n}) => {\n  const actions = [<Button key=\"cancel\" secondary onClick={onContinueEditing} dataTest=\"cancel-delete-dashboard\">\n            {i18n.t('Cancel')}\n        </Button>, <Button key=\"delete\" destructive onClick={onDeleteConfirmed} dataTest=\"confirm-delete-dashboard\">\n            {i18n.t('Delete')}\n        </Button>];\n  return open && <Modal onClose={onContinueEditing} small position=\"middle\">\n                <ModalTitle>{i18n.t('Delete dashboard')}</ModalTitle>\n                <ModalContent>\n                    <span className={classes.content}>\n                        {i18n.t('Deleting dashboard \"{{ dashboardName }}\" will remove it for all users. This action cannot be undone. Are you sure you want to permanently delete this dashboard?', {\n          dashboardName\n        })}\n                    </span>\n                </ModalContent>\n                <ModalActions>\n                    <ButtonStrip>{actions}</ButtonStrip>\n                </ModalActions>\n            </Modal>;\n};\nConfirmDeleteDialog.propTypes = {\n  dashboardName: PropTypes.string,\n  open: PropTypes.bool,\n  onContinueEditing: PropTypes.func,\n  onDeleteConfirmed: PropTypes.func\n};\nexport default ConfirmDeleteDialog;","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport TranslationDialog from '@dhis2/d2-ui-translation-dialog';\nimport { Button, ButtonStrip } from '@dhis2/ui';\nimport { useDataEngine, useAlert } from '@dhis2/app-runtime';\nimport { useD2 } from '@dhis2/app-runtime-adapter-d2';\nimport ConfirmDeleteDialog from './ConfirmDeleteDialog';\nimport { tSaveDashboard, acClearEditDashboard, acSetPrintPreviewView, acClearPrintPreviewView } from '../../actions/editDashboard';\nimport { acClearPrintDashboard } from '../../actions/printDashboard';\nimport { tDeleteDashboard, acSetDashboardDisplayName } from '../../actions/dashboards';\nimport { sGetEditDashboardRoot, sGetIsNewDashboard, sGetIsPrintPreviewView } from '../../reducers/editDashboard';\nimport { apiFetchDashboard } from '../../api/dashboards';\nimport classes from './styles/EditBar.module.css';\nconst saveFailedMessage = i18n.t('Failed to save dashboard. You might be offline or not have access to edit this dashboard.');\n\nconst EditBar = props => {\n  const {\n    d2\n  } = useD2({});\n  const dataEngine = useDataEngine();\n  const [translationDlgIsOpen, setTranslationDlgIsOpen] = useState(false);\n  const [dashboard, setDashboard] = useState(undefined);\n  const [confirmDeleteDlgIsOpen, setConfirmDeleteDlgIsOpen] = useState(false);\n  const [redirectUrl, setRedirectUrl] = useState(undefined);\n  const failureAlert = useAlert(saveFailedMessage, {\n    critical: true\n  });\n  useEffect(() => {\n    if (props.dashboardId && !dashboard) {\n      apiFetchDashboard(dataEngine, props.dashboardId).then(dboard => setDashboard(dboard));\n    }\n  }, [props.dashboardId, dashboard]);\n\n  const onConfirmDelete = () => {\n    setConfirmDeleteDlgIsOpen(true);\n  };\n\n  const onSave = () => {\n    props.saveDashboard().then(newId => {\n      setRedirectUrl(`/${newId}`);\n    }).catch(() => failureAlert.show());\n  };\n\n  const onPrintPreview = () => {\n    if (props.isPrintPreviewView) {\n      props.clearPrintPreview();\n      props.clearPrintDashboard();\n    } else {\n      props.showPrintPreview();\n    }\n  };\n\n  const onDiscard = () => {\n    props.onDiscardChanges();\n    const redirectUrl = props.dashboardId ? `/${props.dashboardId}` : '/';\n    setRedirectUrl(redirectUrl);\n  };\n\n  const onContinueEditing = () => {\n    setConfirmDeleteDlgIsOpen(false);\n  };\n\n  const onDeleteConfirmed = () => {\n    setConfirmDeleteDlgIsOpen(false);\n    props.onDelete(props.dashboardId).then(() => {\n      setRedirectUrl('/');\n    });\n  };\n\n  const onTranslationsSaved = async translations => {\n    if (translations && translations.length) {\n      const dbLocale = await d2.currentUser.userSettings.get('keyDbLocale');\n      const translation = translations.find(t => t.locale === dbLocale && t.property === 'NAME');\n\n      if (translation && translation.value) {\n        props.onTranslate(props.dashboardId, translation.value);\n      }\n    }\n  };\n\n  const toggleTranslationDialog = () => setTranslationDlgIsOpen(!translationDlgIsOpen);\n\n  const confirmDeleteDialog = () => props.deleteAccess && props.dashboardId ? <ConfirmDeleteDialog dashboardName={props.dashboardName} onDeleteConfirmed={onDeleteConfirmed} onContinueEditing={onContinueEditing} open={confirmDeleteDlgIsOpen} /> : null;\n\n  const translationDialog = () => dashboard && dashboard.id ? <TranslationDialog className=\"translation-dialog\" d2={d2} open={translationDlgIsOpen} onRequestClose={toggleTranslationDialog} objectToTranslate={{ ...dashboard,\n    modelDefinition: {\n      name: 'dashboard'\n    }\n  }} fieldsToTranslate={['name', 'description']} onTranslationSaved={onTranslationsSaved} onTranslationError={err => console.log('translation update error', err)} /> : null;\n\n  const renderActionButtons = () => <ButtonStrip>\n            <Button primary onClick={onSave} dataTest=\"save-dashboard-button\">\n                {i18n.t('Save changes')}\n            </Button>\n            <Button onClick={onPrintPreview}>\n                {props.isPrintPreviewView ? i18n.t('Exit Print preview') : i18n.t('Print preview')}\n            </Button>\n\n            {props.dashboardId && <Button onClick={toggleTranslationDialog}>\n                    {i18n.t('Translate')}\n                </Button>}\n            {props.dashboardId && props.deleteAccess && <Button onClick={onConfirmDelete} dataTest=\"delete-dashboard-button\">\n                    {i18n.t('Delete')}\n                </Button>}\n        </ButtonStrip>;\n\n  if (redirectUrl) {\n    return <Redirect to={redirectUrl} />;\n  }\n\n  const {\n    updateAccess\n  } = props;\n  const discardBtnText = updateAccess ? i18n.t('Exit without saving') : i18n.t('Go to dashboards');\n  return <>\n            <div className={classes.editBar}>\n                <div className={classes.controls}>\n                    {updateAccess ? renderActionButtons() : null}\n                    <Button secondary onClick={onDiscard}>\n                        {discardBtnText}\n                    </Button>\n                </div>\n            </div>\n            {translationDialog()}\n            {confirmDeleteDialog()}\n        </>;\n};\n\nEditBar.propTypes = {\n  clearPrintDashboard: PropTypes.func,\n  clearPrintPreview: PropTypes.func,\n  dashboardId: PropTypes.string,\n  dashboardName: PropTypes.string,\n  deleteAccess: PropTypes.bool,\n  isPrintPreviewView: PropTypes.bool,\n  saveDashboard: PropTypes.func,\n  showPrintPreview: PropTypes.func,\n  updateAccess: PropTypes.bool,\n  onDelete: PropTypes.func,\n  onDiscardChanges: PropTypes.func,\n  onTranslate: PropTypes.func\n};\n\nconst mapStateToProps = state => {\n  const dashboard = sGetEditDashboardRoot(state);\n  let deleteAccess;\n  let updateAccess;\n\n  if (sGetIsNewDashboard(state)) {\n    deleteAccess = true;\n    updateAccess = true;\n  } else {\n    updateAccess = dashboard.access ? dashboard.access.update : false;\n    deleteAccess = dashboard.access ? dashboard.access.delete : false;\n  }\n\n  return {\n    dashboardId: dashboard.id,\n    dashboardName: dashboard.name,\n    deleteAccess,\n    isPrintPreviewView: sGetIsPrintPreviewView(state),\n    updateAccess\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  clearPrintDashboard: () => dispatch(acClearPrintDashboard()),\n  clearPrintPreview: () => dispatch(acClearPrintPreviewView()),\n  saveDashboard: () => dispatch(tSaveDashboard()).then(id => id),\n  onDelete: id => dispatch(tDeleteDashboard(id)),\n  onDiscardChanges: () => dispatch(acClearEditDashboard()),\n  onTranslate: (id, value) => dispatch(acSetDashboardDisplayName(id, value)),\n  showPrintPreview: () => dispatch(acSetPrintPreviewView())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditBar);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { NoticeBox, CenteredContent } from '@dhis2/ui';\nimport classes from './styles/NotSupportedNotice.module.css';\n\nconst NotSupportedNotice = ({\n  message\n}) => <CenteredContent position=\"top\">\n        <div className={classes.noticeContainer}>\n            <NoticeBox title={i18n.t('Not supported')} warning>\n                {message}\n            </NoticeBox>\n        </div>\n    </CenteredContent>;\n\nNotSupportedNotice.propTypes = {\n  message: PropTypes.string\n};\nexport default NotSupportedNotice;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport classes from './styles/PrintInfo.module.css';\n\nconst PrintInfo = ({\n  isLayout\n}) => {\n  const layoutStyle = isLayout ? i18n.t('dashboard layout') : i18n.t('one item per page');\n  return <div className={classes.container}>\n            <p className={classes.title}>\n                {`${i18n.t('Print Preview')}: ${layoutStyle}`}\n            </p>\n            <div className={classes.printSuggestions}>\n                <p>{`${i18n.t('For best print results')}:`}</p>\n                <ul>\n                    <li>{i18n.t('Use Chrome or Edge web browser')}</li>\n                    <li>\n                        {i18n.t('Wait for all dashboard items to load before printing')}\n                    </li>\n                    <li>\n                        {i18n.t('Use A4 landscape paper size and default margin settings in the browser print dialog')}\n                    </li>\n                </ul>\n            </div>\n            <hr className={classes.divider} />\n        </div>;\n};\n\nPrintInfo.propTypes = {\n  isLayout: PropTypes.bool\n};\nexport default PrintInfo;","import React from 'react';\nimport { colors } from '@dhis2/ui';\n\nconst LessHorizontalIcon = () => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill={colors.grey600} viewBox=\"0 0 24 24\">\n        <path d=\"m13.2928932 6.29289322c.3905243-.39052429 1.0236893-.39052429 1.4142136 0 .3604839.36048396.3882135.92771502.0831886 1.32000622l-.0831886.09420734-4.2921068 4.29289322 4.2921068 4.2928932c.3604839.360484.3882135.927715.0831886 1.3200062l-.0831886.0942074c-.360484.3604839-.927715.3882135-1.3200062.0831886l-.0942074-.0831886-4.99999998-5c-.36048396-.360484-.3882135-.927715-.08318861-1.3200062l.08318861-.0942074z\" />\n    </svg>;\n\nexport default LessHorizontalIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Button } from '@dhis2/ui';\nimport { Link } from 'react-router-dom';\nimport LessHorizontalIcon from '../../icons/LessHorizontal';\nimport classes from './styles/PrintActionsBar.module.css'; // set in PrintActionsBar.module.css\n\nexport const PRINT_ACTIONS_BAR_HEIGHT = 44;\nexport const PRINT_ACTIONS_BAR_HEIGHT_SM = 36;\n\nconst PrintActionsBar = ({\n  id\n}) => {\n  const getExitPrintButton = isSmall => <Button className={isSmall ? classes.buttonSmall : classes.buttonLarge} small={isSmall}>\n            <LessHorizontalIcon />\n            {i18n.t('Exit print preview')}\n        </Button>;\n\n  const getPrintButton = isSmall => <Button className={isSmall ? classes.buttonSmall : classes.buttonLarge} small={isSmall} onClick={window.print}>\n            {i18n.t('Print')}\n        </Button>;\n\n  return <div className={classes.container}>\n            <div className={classes.actions}>\n                <Link className={classes.link} to={`/${id}`}>\n                    {getExitPrintButton(true)}\n                    {getExitPrintButton(false)}\n                </Link>\n                {getPrintButton(true)}\n                {getPrintButton(false)}\n            </div>\n        </div>;\n};\n\nPrintActionsBar.propTypes = {\n  id: PropTypes.string\n};\nexport default PrintActionsBar;","import sortBy from 'lodash/sortBy';\nimport { orArray } from './util';\nimport { itemTypeMap } from './itemTypes'; // for A4 landscape (297x210mm)\n// 794 px = (21cm / 2.54) * 96 pixels/inch\n// 1122 px = 29.7 /2.54 * 96 pixels/inch\n// const a4LandscapeHeightPx = 794\n\nexport const A4_LANDSCAPE_WIDTH_PX = 1102;\nexport const getTransformYPx = elStyle => {\n  if (!elStyle || !elStyle.transform) {\n    return null;\n  } // find valid transforms - those with y pixels\n  // the code is expecting the transform prop to\n  // look like:  translate(10px, 300px)\n\n\n  const transformY = elStyle.transform.split(' ')[1]?.match(/(\\d+)px/);\n\n  if (transformY) {\n    return parseInt(transformY[1]);\n  } else {\n    return null;\n  }\n};\nexport const getDomGridItemsSortedByYPos = elements => {\n  const types = Object.keys(itemTypeMap);\n  const elementsWithBoundingRect = orArray(elements).map(el => {\n    const type = Array.from(el.classList).find(className => types.indexOf(className) > -1);\n    const rect = el.getBoundingClientRect();\n    const y = getTransformYPx(el.style) || parseInt(rect.y);\n    return {\n      type,\n      classList: el.classList,\n      bottomY: y + parseInt(rect.height),\n      el\n    };\n  });\n  return sortBy(elementsWithBoundingRect, ['bottomY']);\n};\n\nconst isLeapPage = n => {\n  // pages 5,9,13,17,21,25,29... are leap pages\n  let x = 0;\n  const startPage = 1;\n\n  const getMultiple = factor => startPage + 4 * factor;\n\n  let multiple = getMultiple(0);\n  let isLeapPage = false;\n\n  while (multiple < n) {\n    multiple = getMultiple(x);\n    ++x;\n\n    if (multiple === n) {\n      isLeapPage = true;\n      break;\n    }\n  }\n\n  return isLeapPage;\n};\n\nexport const getPageBreakPositions = items => {\n  // add enough page breaks so that each item could\n  // be put on its own page. Due to the react-grid-layout\n  // unit system, we have to estimate roughly the size of each\n  // page. At regular intervals add a unit, like a leap year\n  const yPosList = [];\n  let yPos = 0;\n\n  for (let pageNum = 1; pageNum <= items.length; ++pageNum) {\n    if (pageNum === 1) {\n      yPos += 35;\n    } else if (isLeapPage(pageNum)) {\n      yPos += 40;\n    } else {\n      yPos += 39;\n    }\n\n    yPosList.push(yPos);\n  }\n\n  return yPosList;\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport ReactGridLayout from 'react-grid-layout';\nimport i18n from '@dhis2/d2-i18n';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport { GRID_ROW_HEIGHT_PX, GRID_COMPACT_TYPE, MARGIN_PX, GRID_COLUMNS } from '../../modules/gridUtil';\nimport { A4_LANDSCAPE_WIDTH_PX } from '../../modules/printUtils';\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\nimport './styles/ItemGrid.css';\n\nconst StaticGrid = ({\n  layout,\n  children,\n  onLayoutChange,\n  className,\n  isLoading\n}) => {\n  if (!isLoading && !layout.length) {\n    return <NoContentMessage text={i18n.t('There are no items on this dashboard')} />;\n  }\n\n  return <>\n            {isLoading ? <Layer translucent>\n                    <CenteredContent>\n                        <CircularLoader />\n                    </CenteredContent>\n                </Layer> : null}\n            <ReactGridLayout margin={MARGIN_PX} cols={GRID_COLUMNS} rowHeight={GRID_ROW_HEIGHT_PX} width={A4_LANDSCAPE_WIDTH_PX} compactType={GRID_COMPACT_TYPE} isDraggable={false} isResizable={false} draggableCancel=\"input,textarea\" className={cx('layout', className)} layout={layout} onLayoutChange={onLayoutChange}>\n                {children}\n            </ReactGridLayout>\n        </>;\n};\n\nStaticGrid.defaultProps = {\n  onLayoutChange: Function.prototype\n};\nStaticGrid.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  isLoading: PropTypes.bool,\n  layout: PropTypes.array,\n  onLayoutChange: PropTypes.func\n};\nexport default StaticGrid;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport sortBy from 'lodash/sortBy';\nimport cx from 'classnames';\nimport StaticGrid from './StaticGrid';\nimport { Item } from '../Item/Item';\nimport { acUpdatePrintDashboardLayout } from '../../actions/printDashboard';\nimport { sGetSelectedIsLoading } from '../../reducers/selected';\nimport { sGetPrintDashboardRoot, sGetPrintDashboardItems } from '../../reducers/printDashboard';\nimport { sGetIsEditing } from '../../reducers/editDashboard';\nimport { hasShape } from '../../modules/gridUtil';\nimport { getDomGridItemsSortedByYPos, getTransformYPx } from '../../modules/printUtils';\nimport { PRINT_LAYOUT } from '../Dashboard/dashboardModes';\nimport { PAGEBREAK } from '../../modules/itemTypes';\nexport class PrintLayoutItemGrid extends Component {\n  onLayoutChange = newLayout => {\n    this.props.updateDashboardLayout(newLayout);\n  };\n  isFirstPageBreak = item => {\n    if (item.type !== PAGEBREAK) {\n      return false;\n    }\n\n    const pageBreaks = this.props.dashboardItems.filter(i => i.type === PAGEBREAK);\n    const sortedPageBreaks = sortBy(pageBreaks, ['y']);\n    return item.y === sortedPageBreaks[0].y;\n  };\n  getItemComponent = item => {\n    // the first-page-break class is used in Edit print preview\n    const itemClassNames = cx('print', 'layout', `${item.type}`, {\n      'first-page-break': this.props.isEditing && this.isFirstPageBreak(item),\n      shortened: !!item.shortened\n    });\n    return <div key={item.i} className={itemClassNames}>\n                <Item item={item} dashboardMode={PRINT_LAYOUT} />\n            </div>;\n  };\n  getItemComponents = items => items.map(item => this.getItemComponent(item));\n\n  hideExtraPageBreaks() {\n    const sortedElements = getDomGridItemsSortedByYPos(Array.from(document.querySelectorAll('.react-grid-item')));\n    let pageBreakBottom = 0;\n    let lastItemBottom = 0;\n    let foundNonPageBreak = false;\n\n    for (let i = sortedElements.length - 1; i >= 0; --i) {\n      const item = sortedElements[i];\n\n      if (item.type === PAGEBREAK) {\n        if (!foundNonPageBreak) {\n          item.el.classList.add('removed');\n        } else {\n          pageBreakBottom = item.bottomY;\n          break;\n        }\n      } else {\n        foundNonPageBreak = true;\n        const thisItemBottom = item.bottomY;\n\n        if (thisItemBottom > lastItemBottom) {\n          lastItemBottom = thisItemBottom;\n        }\n      }\n    }\n\n    const pageHeight = 720;\n    const gridElement = document.querySelector('.react-grid-layout'); // the last page break is before the last item(s) so\n    // maxHeight is one page beyond the last page break\n\n    const maxHeight = pageBreakBottom + pageHeight;\n\n    if (gridElement) {\n      gridElement.style.height = `${maxHeight}px`;\n    }\n\n    if (this.props.isEditing) {\n      //scroll to below the title page - which is middle of the first pagebreak\n      const firstBreak = document.querySelector('.first-page-break');\n\n      if (firstBreak && firstBreak.style && firstBreak.style.transform) {\n        const yPos = getTransformYPx(firstBreak.style);\n        const scrollArea = document.querySelector('.scroll-area');\n        scrollArea && scrollArea.scroll(0, yPos + 50);\n      }\n    }\n  }\n\n  componentDidMount() {\n    this.hideExtraPageBreaks();\n  }\n\n  componentDidUpdate() {\n    this.hideExtraPageBreaks();\n  }\n\n  render() {\n    const {\n      isLoading,\n      dashboardItems\n    } = this.props;\n    return <StaticGrid isLoading={isLoading} layout={dashboardItems} onLayoutChange={this.onLayoutChange}>\n                {this.getItemComponents(dashboardItems)}\n            </StaticGrid>;\n  }\n\n}\nPrintLayoutItemGrid.propTypes = {\n  dashboardItems: PropTypes.array,\n  isEditing: PropTypes.bool,\n  isLoading: PropTypes.bool,\n  updateDashboardLayout: PropTypes.func\n};\nPrintLayoutItemGrid.defaultProps = {\n  dashboardItems: []\n};\n\nconst mapStateToProps = state => {\n  const selectedDashboard = sGetPrintDashboardRoot(state);\n  return {\n    isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n    dashboardItems: sGetPrintDashboardItems(state).filter(hasShape),\n    isEditing: sGetIsEditing(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  updateDashboardLayout: acUpdatePrintDashboardLayout\n})(PrintLayoutItemGrid);","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport PrintInfo from './PrintInfo';\nimport PrintActionsBar from './PrintActionsBar';\nimport PrintLayoutItemGrid from '../ItemGrid/PrintLayoutItemGrid';\nimport { acSetPrintDashboard, acAddPrintDashboardItem, acUpdatePrintDashboardItem } from '../../actions/printDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { sGetEditDashboardRoot, sGetEditDashboardItems } from '../../reducers/editDashboard';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport { PAGEBREAK, PRINT_TITLE_PAGE } from '../../modules/itemTypes';\nimport { MAX_ITEM_GRID_HEIGHT } from '../../modules/gridUtil';\nimport { getPageBreakPositions } from '../../modules/printUtils';\nimport classes from './styles/PrintLayoutDashboard.module.css';\nimport './styles/print.css';\nimport './styles/print-layout.css';\n\nconst addPageBreaks = (items, addDashboardItem) => {\n  const yPosList = getPageBreakPositions(items);\n\n  for (let i = 0; i < items.length; ++i) {\n    addDashboardItem({\n      type: PAGEBREAK,\n      yPos: yPosList[i]\n    });\n  }\n};\n\nconst PrintLayoutDashboard = ({\n  dashboard,\n  items,\n  setPrintDashboard,\n  addDashboardItem,\n  updateDashboardItem,\n  fromEdit\n}) => {\n  useEffect(() => {\n    if (dashboard) {\n      setPrintDashboard(dashboard, items); // If any items are taller than one page, reduce it to one\n      // page (react-grid-layout units)\n\n      items.forEach(item => {\n        if (item.h > MAX_ITEM_GRID_HEIGHT) {\n          item.shortened = true;\n          updateDashboardItem(Object.assign({}, item, {\n            h: MAX_ITEM_GRID_HEIGHT\n          }));\n        }\n      });\n      addPageBreaks(items, addDashboardItem);\n      addDashboardItem({\n        type: PRINT_TITLE_PAGE,\n        isOneItemPerPage: false\n      });\n    }\n  }, [dashboard, items]);\n  return <div className={classes.container}>\n            {!fromEdit && <PrintActionsBar id={dashboard.id} />}\n            <div className={cx(classes.wrapper, 'scroll-area', fromEdit && classes.editView)}>\n                {!fromEdit && <PrintInfo isLayout={true} />}\n                <div className={classes.pageOuter} data-test=\"print-layout-page\">\n                    <PrintLayoutItemGrid />\n                </div>\n            </div>\n        </div>;\n};\n\nPrintLayoutDashboard.propTypes = {\n  addDashboardItem: PropTypes.func,\n  dashboard: PropTypes.object,\n  fromEdit: PropTypes.bool,\n  items: PropTypes.array,\n  setPrintDashboard: PropTypes.func,\n  updateDashboardItem: PropTypes.func\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const id = sGetSelectedId(state);\n\n  if (ownProps.fromEdit) {\n    const dashboard = sGetEditDashboardRoot(state);\n    return {\n      dashboard,\n      id,\n      items: sGetEditDashboardItems(state)\n    };\n  }\n\n  const dashboard = id ? sGetDashboardById(state, id) : null;\n  return {\n    dashboard,\n    id,\n    items: sGetDashboardItems(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setPrintDashboard: acSetPrintDashboard,\n  addDashboardItem: acAddPrintDashboardItem,\n  updateDashboardItem: acUpdatePrintDashboardItem\n})(PrintLayoutDashboard);","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport DashboardContainer from './DashboardContainer';\nimport EditTitleBar from '../TitleBar/EditTitleBar';\nimport EditItemGrid from '../ItemGrid/EditItemGrid';\nimport EditBar from '../ControlBar/EditBar';\nimport NotSupportedNotice from './NotSupportedNotice';\nimport LayoutPrintPreview from './PrintLayoutDashboard';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport { acSetEditDashboard } from '../../actions/editDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport { sGetIsPrintPreviewView } from '../../reducers/editDashboard';\nimport classes from './styles/EditDashboard.module.css';\n\nconst EditDashboard = props => {\n  useEffect(() => {\n    if (props.dashboard) {\n      props.setEditDashboard(props.dashboard, props.items);\n    }\n  }, [props.dashboard]);\n\n  const renderGrid = () => {\n    if (props.isPrintPreviewView) {\n      return <LayoutPrintPreview fromEdit={true} />;\n    }\n\n    return <DashboardContainer>\n                <EditTitleBar />\n                <EditItemGrid />\n            </DashboardContainer>;\n  };\n\n  return <>\n            <div className={classes.container}>\n                <EditBar />\n                {props.updateAccess ? renderGrid() : <NoContentMessage text={i18n.t('No access')} />}\n            </div>\n            <div className={classes.notice}>\n                <NotSupportedNotice message={i18n.t('Editing dashboards on small screens is not supported. Resize your screen to return to edit mode.')} />\n            </div>\n        </>;\n};\n\nEditDashboard.propTypes = {\n  dashboard: PropTypes.object,\n  isPrintPreviewView: PropTypes.bool,\n  items: PropTypes.array,\n  setEditDashboard: PropTypes.func,\n  updateAccess: PropTypes.bool\n};\n\nconst mapStateToProps = state => {\n  const id = sGetSelectedId(state);\n  const dashboard = id ? sGetDashboardById(state, id) : null;\n  const updateAccess = dashboard && dashboard.access ? dashboard.access.update : false;\n  return {\n    dashboard,\n    updateAccess,\n    items: sGetDashboardItems(state),\n    isPrintPreviewView: sGetIsPrintPreviewView(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setEditDashboard: acSetEditDashboard\n})(EditDashboard);","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport DashboardContainer from './DashboardContainer';\nimport EditBar from '../ControlBar/EditBar';\nimport EditTitleBar from '../TitleBar/EditTitleBar';\nimport EditItemGrid from '../ItemGrid/EditItemGrid';\nimport LayoutPrintPreview from './PrintLayoutDashboard';\nimport NotSupportedNotice from './NotSupportedNotice';\nimport { acSetEditNewDashboard } from '../../actions/editDashboard';\nimport { sGetIsPrintPreviewView } from '../../reducers/editDashboard';\nimport classes from './styles/NewDashboard.module.css';\n\nconst NewDashboard = props => {\n  useEffect(() => {\n    props.setNewDashboard();\n  }, []);\n  return <div>\n            <div className={classes.container}>\n                <EditBar />\n                {props.isPrintPreviewView ? <LayoutPrintPreview fromEdit={true} /> : <DashboardContainer>\n                        <EditTitleBar />\n                        <EditItemGrid />\n                    </DashboardContainer>}\n            </div>\n            <div className={classes.notice}>\n                <NotSupportedNotice className={classes.notSupportedNotice} message={i18n.t('Creating dashboards on small screens is not supported. Resize your screen to return to create mode.')} />\n            </div>\n        </div>;\n};\n\nNewDashboard.propTypes = {\n  isPrintPreviewView: PropTypes.bool,\n  setNewDashboard: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  isPrintPreviewView: sGetIsPrintPreviewView(state)\n});\n\nexport default connect(mapStateToProps, {\n  setNewDashboard: acSetEditNewDashboard\n})(NewDashboard);","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport StaticGrid from './StaticGrid';\nimport { Item } from '../Item/Item';\nimport { hasShape } from '../../modules/gridUtil';\nimport { PRINT } from '../Dashboard/dashboardModes';\nimport { sGetSelectedIsLoading } from '../../reducers/selected';\nimport { sGetPrintDashboardRoot, sGetPrintDashboardItems } from '../../reducers/printDashboard';\nimport { orArray } from '../../modules/util';\n\nconst PrintItemGrid = ({\n  isLoading,\n  dashboardItems\n}) => {\n  const getItemComponent = item => <div key={item.i} className={cx(item.type, 'print', 'oipp')}>\n            <Item item={item} dashboardMode={PRINT} />\n        </div>;\n\n  const getItemComponents = items => items.map(item => getItemComponent(item));\n\n  return <StaticGrid isLoading={isLoading} className=\"print\" layout={dashboardItems}>\n            {getItemComponents(dashboardItems)}\n        </StaticGrid>;\n};\n\nPrintItemGrid.propTypes = {\n  dashboardItems: PropTypes.array,\n  isLoading: PropTypes.bool\n};\n\nconst mapStateToProps = state => {\n  const selectedDashboard = sGetPrintDashboardRoot(state);\n  return {\n    isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n    dashboardItems: orArray(sGetPrintDashboardItems(state)).filter(hasShape)\n  };\n};\n\nexport default connect(mapStateToProps)(PrintItemGrid);","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport sortBy from 'lodash/sortBy';\nimport PrintInfo from './PrintInfo';\nimport PrintActionsBar from './PrintActionsBar';\nimport PrintItemGrid from '../ItemGrid/PrintItemGrid';\nimport { acSetPrintDashboard, acAddPrintDashboardItem, acRemovePrintDashboardItem, acUpdatePrintDashboardItem } from '../../actions/printDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport { PAGEBREAK, PRINT_TITLE_PAGE, SPACER } from '../../modules/itemTypes';\nimport { MAX_ITEM_GRID_HEIGHT_OIPP, MAX_ITEM_GRID_WIDTH_OIPP } from '../../modules/gridUtil';\nimport classes from './styles/PrintDashboard.module.css';\nimport './styles/print.css';\nimport './styles/print-oipp.css';\n\nconst PrintDashboard = ({\n  dashboard,\n  items,\n  setPrintDashboard,\n  addDashboardItem,\n  updateDashboardItem,\n  removeDashboardItem\n}) => {\n  useEffect(() => {\n    if (dashboard) {\n      //sort the items by Y pos so they print in order of top to bottom\n      const sortedItems = sortBy(items, ['y', 'x']);\n      setPrintDashboard(dashboard, sortedItems); // remove spacers - don't want empty pages\n\n      let spacerCount = 0;\n      items.forEach(item => {\n        if (item.type === SPACER) {\n          spacerCount += 1;\n          removeDashboardItem(item.id);\n        }\n      }); // Resize the items to the full page size\n\n      items.forEach(item => {\n        updateDashboardItem(Object.assign({}, item, {\n          w: MAX_ITEM_GRID_WIDTH_OIPP,\n          h: MAX_ITEM_GRID_HEIGHT_OIPP\n        }));\n      }); // insert page breaks into the document flow to create the \"pages\"\n      // when previewing the print\n\n      for (let i = 0; i < (items.length - spacerCount) * 2; i += 2) {\n        addDashboardItem({\n          type: PAGEBREAK,\n          position: i,\n          isStatic: false\n        });\n      }\n\n      addDashboardItem({\n        type: PRINT_TITLE_PAGE,\n        isOneItemPerPage: true\n      });\n    }\n  }, [dashboard, items]);\n  return <div className={classes.container}>\n            <PrintActionsBar id={dashboard.id} />\n            <div className={classes.wrapper}>\n                <PrintInfo isLayout={false} />\n                <div className={classes.pageOuter} data-test=\"print-oipp-page\">\n                    <PrintItemGrid />\n                </div>\n            </div>\n        </div>;\n};\n\nPrintDashboard.propTypes = {\n  addDashboardItem: PropTypes.func,\n  dashboard: PropTypes.object,\n  items: PropTypes.array,\n  removeDashboardItem: PropTypes.func,\n  setPrintDashboard: PropTypes.func,\n  updateDashboardItem: PropTypes.func\n};\n\nconst mapStateToProps = state => {\n  const id = sGetSelectedId(state);\n  const dashboard = id ? sGetDashboardById(state, id) : null;\n  return {\n    dashboard,\n    id,\n    items: sGetDashboardItems(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setPrintDashboard: acSetPrintDashboard,\n  addDashboardItem: acAddPrintDashboardItem,\n  removeDashboardItem: acRemovePrintDashboardItem,\n  updateDashboardItem: acUpdatePrintDashboardItem\n})(PrintDashboard);","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport isEmpty from 'lodash/isEmpty';\nimport i18n from '@dhis2/d2-i18n';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport { Redirect } from 'react-router-dom';\nimport DashboardsBar from '../ControlBar/ViewControlBar/DashboardsBar';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport ViewDashboard from './ViewDashboard';\nimport EditDashboard from './EditDashboard';\nimport NewDashboard from './NewDashboard';\nimport PrintDashboard from './PrintDashboard';\nimport PrintLayoutDashboard from './PrintLayoutDashboard';\nimport { tSelectDashboard } from '../../actions/dashboards';\nimport { acClearEditDashboard } from '../../actions/editDashboard';\nimport { sDashboardsIsFetching, sGetAllDashboards } from '../../reducers/dashboards';\nimport { sGetSelectedId, NON_EXISTING_DASHBOARD_ID } from '../../reducers/selected';\nimport { EDIT, NEW, VIEW, PRINT, PRINT_LAYOUT, isPrintMode, isEditMode } from './dashboardModes';\nimport { useWindowDimensions } from '../WindowDimensionsProvider';\nimport { isSmallScreen } from '../../modules/smallScreen';\n\nconst setHeaderbarVisibility = mode => {\n  const header = document.getElementsByTagName('header')[0];\n\n  if (isPrintMode(mode)) {\n    header.classList.add('hidden');\n  } else {\n    header.classList.remove('hidden');\n  }\n};\n\nconst dashboardMap = {\n  [VIEW]: <ViewDashboard />,\n  [EDIT]: <EditDashboard />,\n  [NEW]: <NewDashboard />,\n  [PRINT]: <PrintDashboard />,\n  [PRINT_LAYOUT]: <PrintLayoutDashboard />\n};\n\nconst Dashboard = ({\n  id,\n  mode,\n  dashboardsLoaded,\n  dashboardsIsEmpty,\n  routeId,\n  selectDashboard,\n  clearEditDashboard\n}) => {\n  const {\n    width\n  } = useWindowDimensions();\n  const [redirectUrl, setRedirectUrl] = useState(null);\n  useEffect(() => {\n    setHeaderbarVisibility(mode);\n  }, [mode]);\n  useEffect(() => {\n    if (isSmallScreen(width) && isEditMode(mode)) {\n      const redirectUrl = routeId ? `/${routeId}` : '/';\n      setRedirectUrl(redirectUrl);\n    } else {\n      setRedirectUrl(null);\n    }\n  }, [mode]);\n  useEffect(() => {\n    if (!isEditMode(mode)) {\n      clearEditDashboard();\n    }\n  }, [mode]);\n  useEffect(() => {\n    if (dashboardsLoaded && !dashboardsIsEmpty) {\n      selectDashboard(routeId);\n    }\n  }, [dashboardsLoaded, dashboardsIsEmpty, routeId, mode]);\n\n  if (!dashboardsLoaded) {\n    return <Layer translucent>\n                <CenteredContent>\n                    <CircularLoader />\n                </CenteredContent>\n            </Layer>;\n  }\n\n  if (redirectUrl) {\n    return <Redirect to={redirectUrl} />;\n  }\n\n  if (mode === NEW) {\n    return dashboardMap[mode];\n  }\n\n  if (dashboardsIsEmpty) {\n    return <>\n                <DashboardsBar />\n                <NoContentMessage text={i18n.t('No dashboards found. Use the + button to create a new dashboard.')} />\n            </>;\n  }\n\n  if (id === NON_EXISTING_DASHBOARD_ID) {\n    return <>\n                <DashboardsBar />\n                <NoContentMessage text={i18n.t('Requested dashboard not found')} />\n            </>;\n  }\n\n  if (id === null) {\n    return <Layer translucent>\n                <CenteredContent>\n                    <CircularLoader />\n                </CenteredContent>\n            </Layer>;\n  }\n\n  return dashboardMap[mode];\n};\n\nDashboard.propTypes = {\n  dashboardsIsEmpty: PropTypes.bool,\n  dashboardsLoaded: PropTypes.bool,\n  id: PropTypes.string,\n  match: PropTypes.object,\n  // provided by the react-router-dom\n  mode: PropTypes.string,\n  routeId: PropTypes.string,\n  selectDashboard: PropTypes.func\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const dashboards = sGetAllDashboards(state);\n  return {\n    dashboardsIsEmpty: isEmpty(dashboards),\n    dashboardsLoaded: !sDashboardsIsFetching(state),\n    id: sGetSelectedId(state),\n    routeId: ownProps.match?.params?.dashboardId || null\n  };\n};\n\nexport default connect(mapStateToProps, {\n  selectDashboard: tSelectDashboard,\n  clearEditDashboard: acClearEditDashboard\n})(Dashboard);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { AlertBar, AlertStack } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport { sGetAlertMessage } from '../../reducers/alert';\nimport { acClearAlertMessage } from '../../actions/alert';\nexport const Alert = ({\n  message,\n  onClose\n}) => message ? <AlertStack>\n            <AlertBar onHidden={onClose} permanent>\n                {message}\n            </AlertBar>\n        </AlertStack> : null;\nAlert.propTypes = {\n  message: PropTypes.string,\n  onClose: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  message: sGetAlertMessage(state)\n});\n\nexport default connect(mapStateToProps, {\n  onClose: acClearAlertMessage\n})(Alert);","// filter out CATEGORY that are not of type ATTRIBUTE\nconst filteredDimensions = dimensions => dimensions.filter(dim => dim.dimensionType !== 'CATEGORY' || dim.dimensionType === 'CATEGORY' && dim.dataDimensionType === 'ATTRIBUTE');\n\nexport default filteredDimensions;","import React, { useEffect } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { CssVariables } from '@dhis2/ui';\nimport { useD2 } from '@dhis2/app-runtime-adapter-d2';\nimport { apiFetchDimensions } from '@dhis2/analytics';\nimport { useDataEngine } from '@dhis2/app-runtime';\nimport Dashboard from './Dashboard/Dashboard';\nimport AlertBar from './AlertBar/AlertBar';\nimport { useSystemSettings } from './SystemSettingsProvider';\nimport { acReceivedUser } from '../actions/user';\nimport { tFetchDashboards } from '../actions/dashboards';\nimport { tSetControlBarRows } from '../actions/controlBar';\nimport { tSetShowDescription } from '../actions/selected';\nimport { acSetDimensions } from '../actions/dimensions';\nimport getFilteredDimensions from '../modules/getFilteredDimensions';\nimport { EDIT, VIEW, NEW, PRINT, PRINT_LAYOUT } from './Dashboard/dashboardModes';\nimport './App.css';\n\nconst App = props => {\n  const {\n    d2\n  } = useD2({});\n  const dataEngine = useDataEngine();\n  const {\n    settings\n  } = useSystemSettings();\n  useEffect(() => {\n    props.setCurrentUser(d2.currentUser);\n    props.fetchDashboards();\n    props.setControlBarRows();\n    props.setShowDescription();\n  }, []);\n  useEffect(() => {\n    const fetchDimensions = async () => {\n      try {\n        const dimensions = await apiFetchDimensions(dataEngine, settings.displayNameProperty);\n        props.setDimensions(getFilteredDimensions(dimensions));\n      } catch (e) {\n        console.error(e);\n      }\n    };\n\n    if (settings.displayNameProperty) {\n      fetchDimensions();\n    }\n  }, [settings]);\n  return <>\n            <CssVariables colors spacers />\n            <Router>\n                <Switch>\n                    <Route exact path=\"/\" render={props => <Dashboard {...props} mode={VIEW} />} />\n                    <Route exact path=\"/new\" render={props => <Dashboard {...props} mode={NEW} />} />\n                    <Route exact path=\"/:dashboardId\" render={props => <Dashboard {...props} mode={VIEW} />} />\n                    <Route exact path=\"/:dashboardId/edit\" render={props => <Dashboard {...props} mode={EDIT} />} />\n                    <Route exact path=\"/:dashboardId/printoipp\" render={props => <Dashboard {...props} mode={PRINT} />} />\n                    <Route exact path=\"/:dashboardId/printlayout\" render={props => <Dashboard {...props} mode={PRINT_LAYOUT} />} />\n                </Switch>\n            </Router>\n            <AlertBar />\n        </>;\n};\n\nApp.propTypes = {\n  fetchDashboards: PropTypes.func.isRequired,\n  setControlBarRows: PropTypes.func.isRequired,\n  setCurrentUser: PropTypes.func.isRequired,\n  setDimensions: PropTypes.func.isRequired,\n  setShowDescription: PropTypes.func.isRequired\n};\nconst mapDispatchToProps = {\n  fetchDashboards: tFetchDashboards,\n  setControlBarRows: tSetControlBarRows,\n  setCurrentUser: acReceivedUser,\n  setDimensions: acSetDimensions,\n  setShowDescription: tSetShowDescription\n};\nexport default connect(null, mapDispatchToProps)(App);","import { RECEIVED_USER } from '../reducers/user';\nexport const acReceivedUser = value => ({\n  type: RECEIVED_USER,\n  value\n});","import { SET_DIMENSIONS } from '../reducers/dimensions';\nexport const acSetDimensions = dimensions => ({\n  type: SET_DIMENSIONS,\n  value: dimensions\n});","/** @module reducers/selected */\nimport { validateReducer } from '../modules/util';\nexport const SET_STYLE = 'SET_STYLE';\nexport const DEFAULT_STATE_STYLE = 'LIST';\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\n\nconst style = (state = DEFAULT_STATE_STYLE, action) => {\n  switch (action.type) {\n    case SET_STYLE:\n      return validateReducer(action.value, DEFAULT_STATE_STYLE);\n\n    default:\n      return state;\n  }\n};\n\nexport default style;\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\n\nexport const sGetStyleRoot = state => state.style;","import { combineReducers } from 'redux';\nimport dashboards from './dashboards';\nimport selected from './selected';\nimport dashboardsFilter from './dashboardsFilter';\nimport controlBar from './controlBar';\nimport visualizations from './visualizations';\nimport editDashboard from './editDashboard';\nimport printDashboard from './printDashboard';\nimport messages from './messages';\nimport user from './user';\nimport alert from './alert';\nimport itemFilters from './itemFilters';\nimport style from './style';\nimport dimensions from './dimensions';\nimport activeModalDimension from './activeModalDimension';\nexport default combineReducers({\n  dashboards,\n  selected,\n  dashboardsFilter,\n  controlBar,\n  visualizations,\n  messages,\n  user,\n  editDashboard,\n  printDashboard,\n  itemFilters,\n  style,\n  alert,\n  dimensions,\n  activeModalDimension\n});","import { createStore, applyMiddleware, compose } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport reducer from './reducers';\n\nconst configureStore = dataEngine => {\n  const middleware = [thunk.withExtraArgument(dataEngine)]; // Enable Redux devtools if extension is installed instead of redux-logger\n\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n  if (!window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ && process.env.NODE_ENV !== 'production') {\n    middleware.push(createLogger());\n  }\n\n  return createStore(reducer, composeEnhancers(applyMiddleware(...middleware)));\n};\n\nexport default configureStore;","//------------------------------------------------------------------------------\n// <auto-generated>\n// This code was generated by d2-i18n-generate.\n//\n// Changes to this file may cause incorrect behavior and will be lost if\n// the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\nimport i18n from '@dhis2/d2-i18n';\nimport arTranslations from './ar/translations.json';\nimport ar_IQTranslations from './ar_IQ/translations.json';\nimport ckbTranslations from './ckb/translations.json';\nimport csTranslations from './cs/translations.json';\nimport daTranslations from './da/translations.json';\nimport enTranslations from './en/translations.json';\nimport esTranslations from './es/translations.json';\nimport frTranslations from './fr/translations.json';\nimport idTranslations from './id/translations.json';\nimport kmTranslations from './km/translations.json';\nimport loTranslations from './lo/translations.json';\nimport myTranslations from './my/translations.json';\nimport nbTranslations from './nb/translations.json';\nimport prsTranslations from './prs/translations.json';\nimport psTranslations from './ps/translations.json';\nimport ptTranslations from './pt/translations.json';\nimport pt_BRTranslations from './pt_BR/translations.json';\nimport ruTranslations from './ru/translations.json';\nimport svTranslations from './sv/translations.json';\nimport tetTranslations from './tet/translations.json';\nimport tgTranslations from './tg/translations.json';\nimport ukTranslations from './uk/translations.json';\nimport urTranslations from './ur/translations.json';\nimport uzTranslations from './uz/translations.json';\nimport uz_CyrlTranslations from './uz_Cyrl/translations.json';\nimport uz_LatnTranslations from './uz_Latn/translations.json';\nimport viTranslations from './vi/translations.json';\nimport zhTranslations from './zh/translations.json';\nimport zh_CNTranslations from './zh_CN/translations.json';\nconst namespace = 'default';\ni18n.addResources('ar', namespace, arTranslations);\ni18n.addResources('ar_IQ', namespace, ar_IQTranslations);\ni18n.addResources('ckb', namespace, ckbTranslations);\ni18n.addResources('cs', namespace, csTranslations);\ni18n.addResources('da', namespace, daTranslations);\ni18n.addResources('en', namespace, enTranslations);\ni18n.addResources('es', namespace, esTranslations);\ni18n.addResources('fr', namespace, frTranslations);\ni18n.addResources('id', namespace, idTranslations);\ni18n.addResources('km', namespace, kmTranslations);\ni18n.addResources('lo', namespace, loTranslations);\ni18n.addResources('my', namespace, myTranslations);\ni18n.addResources('nb', namespace, nbTranslations);\ni18n.addResources('prs', namespace, prsTranslations);\ni18n.addResources('ps', namespace, psTranslations);\ni18n.addResources('pt', namespace, ptTranslations);\ni18n.addResources('pt_BR', namespace, pt_BRTranslations);\ni18n.addResources('ru', namespace, ruTranslations);\ni18n.addResources('sv', namespace, svTranslations);\ni18n.addResources('tet', namespace, tetTranslations);\ni18n.addResources('tg', namespace, tgTranslations);\ni18n.addResources('uk', namespace, ukTranslations);\ni18n.addResources('ur', namespace, urTranslations);\ni18n.addResources('uz', namespace, uzTranslations);\ni18n.addResources('uz_Cyrl', namespace, uz_CyrlTranslations);\ni18n.addResources('uz_Latn', namespace, uz_LatnTranslations);\ni18n.addResources('vi', namespace, viTranslations);\ni18n.addResources('zh', namespace, zhTranslations);\ni18n.addResources('zh_CN', namespace, zh_CNTranslations);\nexport default i18n;","import React from 'react';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport dhis2theme from '@dhis2/d2-ui-core/theme/mui3.theme';\nimport { Provider as ReduxProvider } from 'react-redux';\nimport { D2Shim } from '@dhis2/app-runtime-adapter-d2';\nimport { useDataEngine } from '@dhis2/app-runtime';\nimport WindowDimensionsProvider from './components/WindowDimensionsProvider';\nimport SystemSettingsProvider from './components/SystemSettingsProvider';\nimport App from './components/App';\nimport configureStore from './configureStore';\nimport './AppWrapper.css';\nimport './locales';\n\nconst muiTheme = () => createMuiTheme(dhis2theme);\n\nconst d2Config = {\n  schemas: ['chart', 'map', 'report', 'reportTable', 'eventChart', 'eventReport', 'dashboard', 'organisationUnit', 'userGroup']\n}; // TODO: ER and EV plugins require the auth header in development mode.\n// Remove this when these plugins are rewritten\n\nconst authorization = process.env.REACT_APP_DHIS2_AUTHORIZATION || null;\n\nif (authorization) {\n  d2Config.headers = {\n    Authorization: authorization\n  };\n}\n\nconst AppWrapper = () => {\n  const dataEngine = useDataEngine();\n  return <ReduxProvider store={configureStore(dataEngine)}>\n            <MuiThemeProvider theme={muiTheme()}>\n                <D2Shim d2Config={d2Config} i18nRoot=\"./i18n\">\n                    {({\n          d2\n        }) => {\n          if (!d2) {\n            // TODO: Handle errors in d2 initialization\n            return null;\n          }\n\n          return <SystemSettingsProvider>\n                                <WindowDimensionsProvider>\n                                    <App />\n                                </WindowDimensionsProvider>\n                            </SystemSettingsProvider>;\n        }}\n                </D2Shim>\n            </MuiThemeProvider>\n        </ReduxProvider>;\n};\n\nexport default AppWrapper;","import i18n from '@dhis2/d2-i18n';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\nimport ExtensionIcon from '@material-ui/icons/Extension';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport PersonIcon from '@material-ui/icons/Person';\nimport FontDownloadIcon from '@material-ui/icons/FontDownload';\nimport EmailIcon from '@material-ui/icons/Email';\nimport CropFreeIcon from '@material-ui/icons/CropFree';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested'; // Item types\n\nexport const VISUALIZATION = 'VISUALIZATION';\nexport const REPORT_TABLE = 'REPORT_TABLE';\nexport const CHART = 'CHART';\nexport const MAP = 'MAP';\nexport const EVENT_REPORT = 'EVENT_REPORT';\nexport const EVENT_CHART = 'EVENT_CHART';\nexport const APP = 'APP';\nexport const REPORTS = 'REPORTS';\nexport const RESOURCES = 'RESOURCES';\nexport const USERS = 'USERS';\nexport const MESSAGES = 'MESSAGES';\nexport const TEXT = 'TEXT';\nexport const SPACER = 'SPACER';\nexport const PAGEBREAK = 'PAGEBREAK';\nexport const PRINT_TITLE_PAGE = 'PRINT_TITLE_PAGE';\nconst DOMAIN_TYPE_AGGREGATE = 'AGGREGATE';\nconst DOMAIN_TYPE_TRACKER = 'TRACKER'; // Dashboard helpers\n\nexport const isVisualizationType = item => !!itemTypeMap[item.type].isVisualizationType;\nexport const hasMapView = itemType => itemTypeMap[itemType].domainType === DOMAIN_TYPE_AGGREGATE;\nexport const isTrackerDomainType = itemType => itemTypeMap[itemType].domainType === DOMAIN_TYPE_TRACKER;\nexport const getDefaultItemCount = itemType => itemTypeMap[itemType].defaultItemCount || 5;\nexport const getAppName = itemType => itemTypeMap[itemType].appName || ''; // Item type map\n\nexport const itemTypeMap = {\n  [VISUALIZATION]: {\n    id: VISUALIZATION,\n    endPointName: 'visualizations',\n    propName: 'visualization',\n    pluralTitle: i18n.t('Visualizations'),\n    appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n    appName: 'Data Visualizer',\n    defaultItemCount: 10\n  },\n  [REPORT_TABLE]: {\n    id: REPORT_TABLE,\n    endPointName: 'visualizations',\n    dataStatisticsName: 'REPORT_TABLE_VIEW',\n    propName: 'visualization',\n    pluralTitle: i18n.t('Pivot tables'),\n    domainType: DOMAIN_TYPE_AGGREGATE,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n    appName: 'Data Visualizer'\n  },\n  [CHART]: {\n    id: CHART,\n    endPointName: 'visualizations',\n    propName: 'visualization',\n    dataStatisticsName: 'CHART_VIEW',\n    pluralTitle: i18n.t('Charts'),\n    domainType: DOMAIN_TYPE_AGGREGATE,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n    appName: 'Data Visualizer'\n  },\n  [MAP]: {\n    id: MAP,\n    endPointName: 'maps',\n    dataStatisticsName: 'MAP_VIEW',\n    propName: 'map',\n    pluralTitle: i18n.t('Maps'),\n    domainType: DOMAIN_TYPE_AGGREGATE,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-maps/?id=${id}`,\n    appName: 'Maps'\n  },\n  [EVENT_REPORT]: {\n    id: EVENT_REPORT,\n    endPointName: 'eventReports',\n    propName: 'eventReport',\n    pluralTitle: i18n.t('Event reports'),\n    domainType: DOMAIN_TYPE_TRACKER,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-event-reports/?id=${id}`,\n    appName: 'Event Reports'\n  },\n  [EVENT_CHART]: {\n    id: EVENT_CHART,\n    endPointName: 'eventCharts',\n    propName: 'eventChart',\n    pluralTitle: i18n.t('Event charts'),\n    domainType: DOMAIN_TYPE_TRACKER,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-event-visualizer/?id=${id}`,\n    appName: 'Event Visualizer'\n  },\n  [APP]: {\n    endPointName: 'apps',\n    propName: 'appKey',\n    pluralTitle: i18n.t('Apps')\n  },\n  [REPORTS]: {\n    id: REPORTS,\n    endPointName: 'reports',\n    propName: 'reports',\n    pluralTitle: i18n.t('Reports'),\n    appUrl: (id, type) => {\n      switch (type) {\n        case 'HTML':\n          return `dhis-web-reports/#/standard-report/view/${id}`;\n\n        case 'JASPER_REPORT_TABLE':\n        case 'JASPER_JDBC':\n        default:\n          return `api/reports/${id}/data.pdf?t=${new Date().getTime()}`;\n      }\n    }\n  },\n  [RESOURCES]: {\n    id: RESOURCES,\n    endPointName: 'resources',\n    propName: 'resources',\n    pluralTitle: i18n.t('Resources'),\n    appUrl: id => `api/documents/${id}/data`\n  },\n  [USERS]: {\n    id: USERS,\n    endPointName: 'users',\n    propName: 'users',\n    pluralTitle: i18n.t('Users'),\n    appUrl: id => `dhis-web-dashboard-integration/profile.action?id=${id}`\n  },\n  [TEXT]: {\n    id: TEXT,\n    propName: 'text'\n  },\n  [MESSAGES]: {\n    propName: 'messages'\n  },\n  [SPACER]: {\n    propName: 'text'\n  },\n  [PAGEBREAK]: {\n    propName: 'text'\n  },\n  [PRINT_TITLE_PAGE]: {\n    propName: 'text'\n  }\n};\nexport const getEndPointName = type => itemTypeMap[type].endPointName;\nexport const getDataStatisticsName = type => itemTypeMap[type].dataStatisticsName || null;\nexport const getItemUrl = (type, item, baseUrl) => {\n  let url;\n\n  if (type === APP) {\n    url = item.launchUrl;\n  }\n\n  if (itemTypeMap[type] && itemTypeMap[type].appUrl) {\n    url = `${baseUrl}/${itemTypeMap[type].appUrl(item.id, item.type)}`;\n  }\n\n  return url;\n};\nexport const getItemIcon = type => {\n  switch (type) {\n    case REPORT_TABLE:\n    case EVENT_REPORT:\n    case REPORTS:\n      return TableIcon;\n\n    case CHART:\n    case EVENT_CHART:\n      return ChartIcon;\n\n    case MAP:\n      return MapIcon;\n\n    case APP:\n      return ExtensionIcon;\n\n    case RESOURCES:\n      return DescriptionIcon;\n\n    case USERS:\n      return PersonIcon;\n\n    case TEXT:\n      return FontDownloadIcon;\n\n    case MESSAGES:\n      return EmailIcon;\n\n    case SPACER:\n      return CropFreeIcon;\n\n    default:\n      return NotInterestedIcon;\n  }\n};","import isObject from 'lodash/isObject'; // validation\n\nexport function orNull(param) {\n  return param === undefined ? null : param;\n}\nexport function orArray(param) {\n  return Array.isArray(param) ? param : [];\n}\nexport function orObject(param) {\n  return isObject(param) ? param : {};\n} // array\n\nexport function arrayGetById(array, id) {\n  return array.find(item => item.id === id);\n} // object\n\nexport function arrayToIdMap(array) {\n  return array.reduce((obj, item) => {\n    obj[item.id] = item;\n    return obj;\n  }, {});\n} // date\n\nexport function getDate() {\n  const y = Math.floor(Math.random() * 3) + 2015;\n  const M = Math.floor(Math.random() * 12) + 1;\n  const d = Math.floor(Math.random() * 28) + 1; // const h = Math.floor(Math.random() * 23) + 1;\n  // const m = Math.floor(Math.random() * 59) + 1;\n  // const s = Math.floor(Math.random() * 59) + 1;\n\n  return new Date(`${y}-${M}-${d}`).toJSON().replace('T', ' ').substr(0, 10);\n}\nexport const formatDate = (value, uiLocale) => {\n  if (typeof global.Intl !== 'undefined' && Intl.DateTimeFormat) {\n    const locale = uiLocale || 'en';\n    return new Intl.DateTimeFormat(locale, {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    }).format(new Date(value));\n  }\n\n  return value.substr(0, 19).replace('T', ' ');\n};\n/**\n * Sorts an array of objects based on provided date property\n *\n * @param {Array} items Array of objects\n * @param {String} dateProp Name of the date property to be used for sorting\n * @param {Boolean} ascending Whether to sort ascending or descending\n */\n\nexport const sortByDate = (items, dateProp, ascending = true) => {\n  const values = Object.values(items);\n  values.sort((a, b) => {\n    const aDate = new Date(a[dateProp]);\n    const bDate = new Date(b[dateProp]);\n    return ascending ? aDate - bDate : bDate - aDate;\n  });\n  return values;\n}; // reducer validator\n\nexport const validateReducer = (value, defaultValue) => value === undefined || value === null ? defaultValue : value;","import isObject from 'lodash/isObject';\nimport { itemTypeMap } from './itemTypes';\nexport const getVisualizationFromItem = item => {\n  if (!isObject(item)) {\n    return null;\n  }\n\n  const propName = itemTypeMap[item.type]?.propName;\n  return item[propName] || item.reportTable || item.chart || item.map || item.eventReport || item.eventChart || {};\n};\nexport const getVisualizationId = item => getVisualizationFromItem(item).id;\nexport const getVisualizationName = item => getVisualizationFromItem(item).name;","import { REPORT_TABLE, CHART, MAP, EVENT_REPORT, EVENT_CHART, itemTypeMap } from '../../../../modules/itemTypes';\nimport { getVisualizationId } from '../../../../modules/item';\nimport getGridItemDomId from '../../../../modules/getGridItemDomId'; //external plugins\n\nconst itemTypeToExternalPlugin = {\n  [MAP]: 'mapPlugin',\n  [EVENT_REPORT]: 'eventReportPlugin',\n  [EVENT_CHART]: 'eventChartPlugin'\n};\n\nconst hasIntegratedPlugin = type => [CHART, REPORT_TABLE].includes(type);\n\nconst getPlugin = type => {\n  if (hasIntegratedPlugin(type)) {\n    return true;\n  }\n\n  const pluginName = itemTypeToExternalPlugin[type];\n  return global[pluginName];\n};\n\nexport const pluginIsAvailable = type => !!getPlugin(type);\nexport const loadPlugin = (plugin, config, credentials) => {\n  if (!(plugin && plugin.load)) {\n    return;\n  }\n\n  plugin.url = credentials.baseUrl;\n  plugin.loadingIndicator = true;\n  plugin.dashboard = true;\n\n  if (credentials.auth) {\n    plugin.auth = credentials.auth;\n  }\n\n  plugin.load(config);\n};\nexport const getLink = (item, baseUrl) => {\n  const appUrl = itemTypeMap[item.type].appUrl(getVisualizationId(item));\n  return `${baseUrl}/${appUrl}`;\n};\nexport const load = async (item, visualization, {\n  credentials,\n  activeType,\n  options = {}\n}) => {\n  const config = { ...visualization,\n    ...options,\n    el: getGridItemDomId(item.id)\n  };\n  const type = activeType || item.type;\n  const plugin = getPlugin(type);\n  loadPlugin(plugin, config, credentials);\n};\nexport const resize = (item, isFullscreen) => {\n  const plugin = getPlugin(item.type);\n\n  if (plugin && plugin.resize) {\n    plugin.resize(getGridItemDomId(item.id), isFullscreen);\n  }\n};\nexport const unmount = (item, activeType) => {\n  const plugin = getPlugin(activeType);\n\n  if (plugin && plugin.unmount) {\n    plugin.unmount(getGridItemDomId(item.id));\n  }\n};","const getGridItemDomId = id => `item-${id}`;\n\nexport default getGridItemDomId;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemHeaderWrap\":\"ItemHeader_itemHeaderWrap__JcBP7\",\"itemTitle\":\"ItemHeader_itemTitle__34rHa\",\"itemActionsWrap\":\"ItemHeader_itemActionsWrap__Gx3D9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"ItemGrid_grid__1omnd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"DashboardItemChip_link__BW7Y-\",\"icon\":\"DashboardItemChip_icon__3bSyL\",\"selected\":\"DashboardItemChip_selected__3HtWQ\",\"unselected\":\"DashboardItemChip_unselected__aM-zh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ClearButton_button__3WukP\",\"icon\":\"ClearButton_icon__2ErJB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Filter_container__wim8v\",\"searchArea\":\"Filter_searchArea__3NG5o\",\"input\":\"Filter_input__3nbSP\",\"focused\":\"Filter_focused__E3c7W\",\"searchIcon\":\"Filter_searchIcon__2SzJD\",\"searchIconSmall\":\"Filter_searchIconSmall__2EqS1\",\"searchIconLarge\":\"Filter_searchIconLarge__UOHRT\",\"searchButton\":\"Filter_searchButton__3MTLn\",\"searchIconContainer\":\"Filter_searchIconContainer__21GtO\",\"clearButtonContainer\":\"Filter_clearButtonContainer__36uqp\",\"collapsed\":\"Filter_collapsed__3NFNh\",\"expanded\":\"Filter_expanded__HFSRS\"};"],"sourceRoot":""}
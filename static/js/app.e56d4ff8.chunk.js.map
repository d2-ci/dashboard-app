{"version":3,"sources":["D2App/components/ItemFilter/styles/FilterSelector.module.css","D2App/components/TitleBar/styles/ViewTitleBar.module.css","D2App/components/Item/VisualizationItem/Visualization/styles/NoVisualizationMessage.module.css","D2App/components/Item/VisualizationItem/Visualization/styles/LoadingMask.module.css","D2App/components/Item/VisualizationItem/styles/FatalErrorBoundary.module.css","D2App/components/Item/ItemHeader/styles/DeleteItemButton.module.css","D2App/components/Item/ItemHeader/styles/PrintItemInfo.module.css","D2App/components/Item/VisualizationItem/styles/ItemFooter.module.css","D2App/components/Item/ListItem/Item.module.css","D2App/components/Item/PrintTitlePageItem/styles/Item.module.css","D2App/components/FilterBar/styles/FilterBar.module.css","D2App/components/ItemSelector/styles/HeaderMenuItem.module.css","D2App/components/ItemSelector/styles/ContentMenuItem.module.css","D2App/components/ItemSelector/styles/CategorizedMenuGroup.module.css","D2App/components/ItemSelector/styles/ItemSelector.module.css","D2App/components/TitleBar/styles/EditTitleBar.module.css","D2App/components/ControlBar/styles/ConfirmDeleteDialog.module.css","D2App/components/ControlBar/styles/EditBar.module.css","D2App/components/Dashboard/styles/NotSupportedNotice.module.css","D2App/components/Dashboard/styles/PrintInfo.module.css","D2App/components/Dashboard/styles/PrintActionsBar.module.css","D2App/components/Dashboard/styles/PrintLayoutDashboard.module.css","D2App/components/Dashboard/styles/PrintDashboard.module.css","D2App/components/WindowDimensionsProvider.js","D2App/components/ControlBar/ControlBar.js","D2App/icons/Star.js","D2App/api/dataStatistics.js","D2App/components/ControlBar/DashboardItemChip.js","D2App/icons/AddCircle.js","D2App/icons/Search.js","D2App/icons/Clear.js","D2App/components/ControlBar/ClearButton.js","D2App/reducers/dashboardsFilter.js","D2App/modules/isSmallScreen.js","D2App/components/ControlBar/Filter.js","D2App/actions/dashboardsFilter.js","D2App/components/ControlBar/assets/icons.js","D2App/components/ControlBar/ShowMoreButton.js","D2App/components/ControlBar/controlBarDimensions.js","D2App/reducers/controlBar.js","D2App/modules/uiBackendItemConverter.js","D2App/reducers/dashboards.js","D2App/reducers/selected.js","D2App/api/userDataStore.js","D2App/api/controlBar.js","D2App/actions/controlBar.js","D2App/components/ControlBar/DashboardsBar.js","D2App/widgets/NoContentMessage.js","D2App/components/Item/VisualizationItem/assets/icons.js","D2App/reducers/user.js","D2App/reducers/dimensions.js","D2App/reducers/itemFilters.js","D2App/actions/itemFilters.js","D2App/reducers/messages.js","D2App/api/messages.js","D2App/components/Item/MessagesItem/actions.js","D2App/reducers/alert.js","D2App/actions/alert.js","D2App/reducers/visualizations.js","D2App/actions/visualizations.js","D2App/api/metadata.js","D2App/api/index.js","D2App/api/dashboards.js","D2App/api/description.js","D2App/actions/selected.js","D2App/api/localStorage.js","D2App/actions/dashboards.js","D2App/components/ItemFilter/FilterDialog.js","D2App/reducers/settings.js","D2App/reducers/activeModalDimension.js","D2App/actions/activeModalDimension.js","D2App/components/ItemFilter/FilterSelector.js","D2App/components/TitleBar/ViewTitleBar.js","D2App/reducers/editDashboard.js","D2App/api/editDashboard.js","D2App/actions/editDashboard.js","D2App/components/Item/VisualizationItem/Visualization/NoVisualizationMessage.js","D2App/components/Item/VisualizationItem/Visualization/DefaultPlugin.js","D2App/components/Item/VisualizationItem/Visualization/MapPlugin.js","D2App/components/Item/VisualizationItem/Visualization/LoadingMask.js","D2App/components/Item/VisualizationItem/Visualization/getFilteredVisualization.js","D2App/components/Item/VisualizationItem/Visualization/getVisualizationConfig.js","D2App/modules/memoizeOne.js","D2App/components/Item/VisualizationItem/Visualization/Visualization.js","D2App/components/Item/VisualizationItem/FatalErrorBoundary.js","D2App/components/Item/ItemHeader/ViewItemActions.js","D2App/components/Item/ItemHeader/DeleteItemButton.js","D2App/components/Item/ItemHeader/EditItemActions.js","D2App/icons/Info.js","D2App/components/Item/ItemHeader/PrintItemInfo.js","D2App/components/Dashboard/dashboardModes.js","D2App/components/Item/ItemHeader/ItemHeader.js","D2App/components/Item/VisualizationItem/ItemHeaderButtons.js","D2App/components/Item/VisualizationItem/ItemFooter.js","D2App/components/Item/VisualizationItem/Item.js","D2App/widgets/Line.js","D2App/components/Item/MessagesItem/Item.js","D2App/components/Item/NotSupportedItem/Item.js","D2App/icons/Description.js","D2App/icons/Delete.js","D2App/components/Item/ListItem/Item.js","D2App/components/Item/ListItem/actions.js","D2App/reducers/printDashboard.js","D2App/components/Item/TextItem/Item.js","D2App/components/Item/AppItem/Item.js","D2App/components/Item/SpacerItem/Item.js","D2App/components/Item/PageBreakItem/Item.js","D2App/components/Item/PrintTitlePageItem/Item.js","D2App/components/Item/Item.js","D2App/components/Item/ProgressiveLoadingContainer.js","D2App/components/ItemGrid/ItemGrid.js","D2App/components/FilterBar/FilterBadge.js","D2App/components/FilterBar/FilterBar.js","D2App/reducers/windowHeight.js","D2App/actions/printDashboard.js","D2App/components/Dashboard/ViewDashboard.js","D2App/components/ItemSelector/ItemSearchField.js","D2App/components/ItemSelector/HeaderMenuItem.js","D2App/icons/Launch.js","D2App/components/ItemSelector/ContentMenuItem.js","D2App/components/ItemSelector/actions.js","D2App/components/ItemSelector/selectableItems.js","D2App/components/ItemSelector/CategorizedMenuGroup.js","D2App/components/ItemSelector/SinglesMenuGroup.js","D2App/components/ItemSelector/ItemSelector.js","D2App/components/TitleBar/EditTitleBar.js","D2App/components/ControlBar/ConfirmDeleteDialog.js","D2App/components/ControlBar/EditBar.js","D2App/components/Dashboard/NotSupportedNotice.js","D2App/components/Dashboard/PrintInfo.js","D2App/icons/LessHorizontal.js","D2App/components/Dashboard/PrintActionsBar.js","D2App/modules/printUtils.js","D2App/components/ItemGrid/PrintLayoutItemGrid.js","D2App/components/Dashboard/PrintLayoutDashboard.js","D2App/components/Dashboard/EditDashboard.js","D2App/components/Dashboard/NewDashboard.js","D2App/components/ItemGrid/PrintItemGrid.js","D2App/components/Dashboard/PrintDashboard.js","D2App/actions/windowHeight.js","D2App/components/Dashboard/Dashboard.js","D2App/components/AlertBar/AlertBar.js","D2App/actions/user.js","D2App/actions/dimensions.js","D2App/api/settings.js","D2App/actions/settings.js","D2App/components/App.js","D2App/reducers/style.js","D2App/reducers/index.js","D2App/configureStore.js","D2App/locales/index.js","D2App/AppWrapper.js","D2App/modules/itemTypes.js","D2App/modules/util.js","D2App/components/ItemGrid/gridUtil.js","D2App/modules/item.js","D2App/components/Item/VisualizationItem/Visualization/plugin.js","D2App/components/Item/ItemHeader/styles/ItemHeader.module.css","D2App/components/ControlBar/styles/ControlBar.module.css","D2App/components/ControlBar/styles/DashboardItemChip.module.css","D2App/components/ControlBar/styles/ClearButton.module.css","D2App/components/ControlBar/styles/Filter.module.css","D2App/components/ControlBar/styles/ShowMoreButton.module.css","D2App/components/ControlBar/styles/DashboardsBar.module.css"],"names":["module","exports","WindowDimensionsCtx","createContext","windowDims","height","window","innerHeight","width","innerWidth","WindowDimensionsProvider","children","dimensions","setDimensions","useState","useEffect","handleResize","debounce","addEventListener","removeEventListener","Provider","value","useWindowDimensions","useContext","ControlBar","React","Component","constructor","props","super","onStartDrag","this","setState","dragging","onDrag","onEndDrag","event","preventDefault","stopPropagation","newHeight","clientY","onChangeHeight","requestAnimationFrame","renderDragHandle","className","classes","draghandle","onMouseDown","data-testid","state","render","Math","max","rootClass","cx","root","style","content","defaultProps","StarIcon","xmlns","viewBox","d","fill","apiPostDataStatistics","async","eventType","id","d2","getInstance","url","Api","getApi","post","DashboardItemChip","starred","selected","label","dashboardId","onClick","chipProps","selectedState","unselected","icon","Star","debouncedPostStatistics","link","to","data-test","AddCircleIcon","colors","teal600","SearchIcon","ClearIcon","grey800","ClearButton","onClear","button","Clear","color","SET_DASHBOARDS_FILTER","CLEAR_DASHBOARDS_FILTER","sGetDashboardsFilter","dashboardsFilter","isSmallScreen","mapDispatchToProps","setDashboardsFilter","type","clearDashboardsFilter","connect","filterText","isMaxHeight","onKeypressEnter","onToggleMaxHeight","focusedClassName","setFocusedClassName","searchButton","Search","searchIcon","container","onFocus","focused","onBlur","input","placeholder","i18n","t","onChange","target","onKeyUp","keyCode","ChevronDown","ChevronUp","ShowMoreButton","disabled","containerRef","useRef","buttonLabel","onButtonClicked","buttonEl","current","MouseEvent","bubbles","cancelable","dispatchEvent","ref","placement","onMouseOver","onMouseOut","showMore","aria-label","HEADERBAR_HEIGHT","getRowsHeight","rows","getControlBarHeight","FIRST_ROW_PADDING_HEIGHT","SET_CONTROLBAR_USER_ROWS","combineReducers","userRows","action","validateReducer","sGetControlBarUserRows","controlBar","sGetControlBarRoot","spacerContent","emptyTextItemContent","isTextType","item","TEXT","text","convertUiItemsToBackend","items","map","SPACER","isUiSpacerType","convertBackendItemsToUi","isBackendSpacerType","gridProperties","getGridItemProperties","SET_DASHBOARDS","ADD_DASHBOARDS","SET_DASHBOARD_STARRED","SET_DASHBOARD_DISPLAY_NAME","SET_DASHBOARD_ITEMS","DEFAULT_STATE_DASHBOARDS","byId","EMPTY_DASHBOARD","updateDashboardProp","prop","sGetDashboardsRoot","dashboards","sGetDashboardById","orObject","sDashboardsIsFetching","sGetAllDashboards","sGetDashboardItems","sGetStarredDashboards","Object","values","filter","dashboard","sGetUnstarredDashboards","getCustomDashboards","data","arrayFrom","name","displayName","description","displayDescription","favorite","owner","user","created","split","join","substr","lastUpdated","access","numberOfItems","orArray","dashboardItems","length","SET_SELECTED_ID","SET_SELECTED_ISLOADING","SET_SELECTED_SHOWDESCRIPTION","SET_SELECTED_ITEM_ACTIVE_TYPE","CLEAR_SELECTED_ITEM_ACTIVE_TYPES","DEFAULT_STATE_SELECTED_SHOWDESCRIPTION","DEFAULT_STATE_SELECTED_ITEM_ACTIVE_TYPES","isLoading","showDescription","itemActiveTypes","activeType","sGetSelectedRoot","sGetSelectedId","sGetSelectedIsLoading","sGetSelectedShowDescription","sGetSelectedItemActiveType","NAMESPACE","hasNamespace","currentUser","dataStore","has","getNamespace","get","create","apiPostUserDataStoreValue","key","set","apiGetUserDataStoreValue","defaultValue","namespace","keys","find","k","console","log","KEY_CONTROLBAR_ROWS","acSetControlBarUserRows","tSetControlBarRows","controlBarRows","apiGetControlBarRows","dispatch","err","error","withRouter","selectedId","history","setRows","createRef","scrollToTop","scroll","toggleMaxHeight","newRows","cancelMaxHeight","getFilteredDashboards","filteredDashboards","arraySort","toLowerCase","includes","viewableRows","containerClass","expanded","collapsed","floor","getNumRowsFromHeight","min","apiPostControlBarRows","controls","newLink","AddCircle","Filter","push","chips","chipContainerClasses","chipContainer","getDashboardChips","marginTop","NoContentMessage","padding","textAlign","fontSize","fontWeight","grey600","ThreeDots","SpeechBubble","margin","fillRule","transform","Warning","Fullscreen","ExitFullscreen","RECEIVED_USER","DEFAULT_STATE_USER","username","uiLocale","isSuperuser","sGetUserUsername","SET_DIMENSIONS","DEFAULT_DIMENSIONS","getDimensionById","DIMENSION_ID_PERIOD","DIMENSION_ID_ORGUNIT","sGetDimensions","CLEAR_ITEM_FILTERS","SET_ITEM_FILTERS","ADD_ITEM_FILTER","REMOVE_ITEM_FILTER","DEFAULT_STATE_ITEM_FILTERS","sGetItemFiltersRoot","itemFilters","sGetNamedItemFilters","createSelector","filters","reduce","arr","dimension","acRemoveItemFilter","RECEIVED_MESSAGES","sGetMessagesRoot","messages","messageConversationsQuery","resource","params","fields","order","pageSize","tGetMessages","dataEngine","messageConversations","query","getMessages","SET_ALERT_MESSAGE","CLEAR_ALERT_MESSAGE","sGetAlertMessage","alert","acClearAlertMessage","ADD_VISUALIZATION","CLEAR_VISUALIZATIONS","DEFAULT_STATE_VISUALIZATIONS","isEmpty","p","undefined","sGetVisualization","visualizations","sGetVisualizationsRoot","acAddVisualization","getIdNameFields","rename","getDimensionFields","withItems","arrayClean","getAxesFields","getFavoriteFields","withDimensions","withOptions","getFavoritesFields","apiFetchVisualization","getVisualizationId","MAP","getEndPointName","onError","getDashboardItemsFields","withFavorite","getDashboardFields","dashboardsQuery","paging","dashboardQuery","starDashboardMutation","unstarDashboardMutation","deleteDashboardMutation","apiFetchDashboard","variables","KEY_SHOW_DESCRIPTION","acSetSelectedId","acSetSelectedIsLoading","acSetSelectedShowDescription","tSetSelectedDashboardById","getState","alertTimeout","setTimeout","onSuccess","acAppendDashboards","customDashboard","acSetDashboardItems","withShape","localStorage","setItem","forEach","REPORT_TABLE","CHART","EVENT_REPORT","EVENT_CHART","getVisualizationFromItem","MESSAGES","clearTimeout","tSetShowDescription","apiGetShowDescription","tUpdateShowDescription","apiPostShowDescription","arrayToIdMap","tFetchDashboards","acSetDashboards","apiFetchDashboards","tStarDashboard","isStarred","acSetDashboardStarred","mutate","apiStarDashboard","tDeleteDashboard","apiDeleteDashboard","Promise","resolve","FilterDialog","displayNameProperty","initiallySelectedItems","addItemFilter","removeItemFilter","onClose","context","setFilters","onSelectItems","dimensionId","onDeselectItems","itemIdsToRemove","newList","onReorderItems","itemIds","oldList","reorderedList","dataTest","position","large","commonProps","onSelect","onDeselect","onReorder","selectedItems","selectedPeriods","ouItems","renderDialogContent","secondary","primary","filterItems","contextTypes","PropTypes","object","ADD_SETTINGS","DEFAULT_SETTINGS","keyDateFormat","keyAnalysisRelativePeriod","keyAnalysisDigitGroupSeparator","rootOrganisationUnit","keyGatherAnalyticalObjectStatisticsInDashboardViews","sGetSettings","settings","sGetSettingsDisplayNameProperty","sGatherAnalyticalObjectStatisticsInDashboardViews","SET_ACTIVE_MODAL_DIMENSION","CLEAR_ACTIVE_MODAL_DIMENSION","DEFAULT_STATE_ACTIVE_MODAL_DIMENSION","sGetActiveModalDimension","activeModalDimension","acSetActiveModalDimension","clearActiveModalDimension","setActiveModalDimension","showPopover","setShowPopover","onCloseDialog","buttonContainer","onClickOutside","reference","arrow","onDimensionClick","selectedIds","ViewTitleBar","moreOptionsIsOpen","setMoreOptionsIsOpen","sharingDialogIsOpen","setSharingDialogIsOpen","redirectUrl","setRedirectUrl","onToggleStarredDashboard","onShowHideDescription","toggleSharingDialog","toggleMoreOptions","StarBorder","showHideDescriptionLabel","toggleStarredDashboardLabel","buttonRef","userAccess","descriptionClasses","descContainer","desc","noDesc","titleBar","title","actions","titleBarIcon","strip","update","editLink","manage","shareButton","small","moreButton","dense","open","onRequestClose","stateProps","dispatchProps","ownProps","RECEIVED_EDIT_DASHBOARD","RECEIVED_NOT_EDITING","START_NEW_DASHBOARD","RECEIVED_TITLE","RECEIVED_DESCRIPTION","ADD_DASHBOARD_ITEM","REMOVE_DASHBOARD_ITEM","UPDATE_DASHBOARD_ITEM","RECEIVED_DASHBOARD_LAYOUT","SET_PRINT_PREVIEW_VIEW","CLEAR_PRINT_PREVIEW_VIEW","DEFAULT_STATE_EDIT_DASHBOARD","NEW_DASHBOARD_STATE","printPreviewView","sGetEditDashboardRoot","editDashboard","sGetIsEditing","sGetIsPrintPreviewView","sGetEditDashboardItems","createDashboardMutation","updateDashboardMutation","generatePayload","w","h","acClearEditDashboard","acAddDashboardItem","itemPropName","itemTypeMap","propName","generateUid","gridItemProperties","shape","PAGEBREAK","yPos","getPageBreakItemShape","isStatic","PRINT_TITLE_PAGE","getPrintTitlePageItemShape","NEW_ITEM_SHAPE","acUpdateDashboardItem","acRemoveDashboardItem","tSaveDashboard","dashboardToSave","response","uid","updateDashboard","postDashboard","NoVisualizationMessage","message","DefaultPlugin","pluginCredentials","pluginIsAvailable","pluginManager","shouldPluginReload","prevProps","reloadAllowed","filtersChanged","vis","visualization","prevVis","visChanged","reloadPlugin","credentials","componentDidMount","baseUrl","getBaseUrl","auth","defaultHeaders","Authorization","options","componentDidUpdate","componentWillUnmount","getGridItemDomId","MapPlugin","applyFilters","mapViews","mapView","layer","hideTitle","LoadingMask","center","getFilteredVisualization","visRows","obj","visColumns","columns","visFilters","dimensionFound","dimensionObjects","getWithoutId","getVisualizationConfig","originalType","extractedMapView","mv","VIS_TYPE_COLUMN","VIS_TYPE_PIVOT_TABLE","layout","getAdaptedUiLayoutByType","memoizeOne","fn","lastArgs","lastValue","args","every","arg","i","Visualization","pluginLoaded","onLoadingComplete","memoizedGetFilteredVisualization","memoizedGetVisualizationConfig","availableHeight","pluginProps","VISUALIZATION","forDashboard","FatalErrorBoundary","errorFound","componentDidCatch","info","ViewItemActions","actionButtons","itemActionsWrap","DeleteItemButton","deleteItemButton","red500","itemId","WarningIcon","PrintWarning","warning","Info","EDIT","NEW","VIEW","PRINT","PRINT_LAYOUT","isEditMode","mode","isPrintMode","isViewMode","ItemHeader","forwardRef","dashboardMode","isShortened","rest","Actions","EditItemActions","PrintItemInfo","getItemActionsMap","itemHeaderWrap","itemTitle","iconFill","ItemHeaderButtons","menuIsOpen","setMenuIsOpen","useConfig","onSelectActiveType","isTrackerType","isTrackerDomainType","onViewTable","closeMenu","onViewChart","onViewMap","canViewAs","isSingleValue","isYearOverYear","VIS_TYPE_GAUGE","VIS_TYPE_PIE","interpretationMenuLabel","activeFooter","ViewAsMenuItems","hasMapView","isFullscreen","onToggleFullscreen","appName","getAppName","href","getLink","onToggleFooter","fullscreenSupported","ItemFooter","line","scrollContainer","isRequired","Item","showFooter","configLoaded","isFullscreenSupported","el","document","querySelector","itemDomElSelector","requestFullscreen","webkitRequestFullscreen","handleFullscreenChange","fullscreenElement","webkitFullscreenElement","exitFullscreen","webkitExitFullscreen","getUniqueKey","uniqueId","onToggleItemExpanded","setActiveType","getActiveType","isEditing","getAvailableHeight","calculatedHeight","originalHeight","headerRef","clientHeight","ITEM_CONTENT_PADDING_BOTTOM","memoizedGetContentHeight","contentRef","offsetHeight","measuredHeight","preferMeasured","updateVisualization","gatherDataStatistics","getDataStatisticsName","e","onfullscreenchange","onwebkitfullscreenchange","getVisualizationName","shortened","Function","prototype","backgroundColor","grey200","border","Line","PRIVATE","messageTypes","VALIDATION_RESULT","TICKET","SYSTEM","list","listStyleType","paddingLeft","seeAll","marginBottom","sender","lineHeight","snippet","maxHeight","overflow","MessagesItem","getMessageHref","msg","msgIdentifier","messageType","getMessageSender","latestMsg","slice","getMessageItems","modeClass","readClass","read","msgDate","location","messageCount","formatDate","userSettings","string","MessagesContainer","NotSupportedItem","display","justifyContent","alignItems","align","DescriptionIcon","grey500","DeleteIcon","getItemTitle","pluralTitle","ListItem","tRemoveListItemContent","contentItems","index","array","findIndex","getContentItems","contentItem","deleteButton","deletebutton","deleteicon","grey900","getItemUrl","Description","itemicon","dashboardItem","listItemType","newContent","SET_PRINT_DASHBOARD","CLEAR_PRINT_DASHBOARD","ADD_PRINT_DASHBOARD_ITEM","SET_PRINT_DASHBOARD_LAYOUT","REMOVE_PRINT_DASHBOARD_ITEM","UPDATE_PRINT_DASHBOARD_ITEM","DEFAULT_STATE_PRINT_DASHBOARD","DEFAULT_DASHBOARD_ITEMS","NEW_PRINT_DASHBOARD_STATE","sGetPrintDashboardRoot","printDashboard","sGetIsPrinting","sGetPrintDashboardItems","textDiv","whiteSpace","textField","fontStretch","onChangeText","updatedItem","viewItem","textDivStyle","assign","editItem","onEdit","multiline","fullWidth","printItem","textItem","getIframeSrc","appDetails","iframeSrc","launchUrl","ouIds","ouFilter","path","AppItem","appKey","system","installedApps","app","dashboardWidget","src","SpacerItem","PageBreakItem","PrintTitlePageItem","titlePage","filterTitle","listItems","filterListItem","val","filterList","getItemFilterList","viewDashboard","sGetPrintDashboardName","sGetPrintDashboardDescription","GridItem","VisualizationItem","REPORTS","RESOURCES","USERS","TextItem","APP","getGridItem","ProgressiveLoadingContainer","shouldLoad","shouldLoadHandler","handlerOptions","passive","checkShouldLoad","bufferPx","bufferFactor","rect","getBoundingClientRect","bottom","top","removeHandler","registerHandler","debounceMs","getElementsByClassName","eventProps","pick","ItemGrid","expandedItems","clickedId","isExpanded","onLayoutChange","newLayout","edit","acUpdateDashboardLayout","onResizeStop","oldItem","newItem","onItemResize","isVisualizationType","pluginResize","adjustHeightForExpanded","expandedItem","getItemComponent","itemClassNames","getItemComponents","UNSAFE_componentWillReceiveProps","nextProps","translucent","MARGIN","cols","getGridColumns","rowHeight","GRID_ROW_HEIGHT","compactType","GRID_COMPACT_TYPE","isDraggable","isResizable","draggableCancel","selectedDashboard","validItems","hasShape","styles","badgeContainer","borderRadius","white","badge","cursor","badgeRemove","textDecoration","marginLeft","FilterBadge","onRemove","count","FilterBar","onBadgeRemove","onBadgeClick","bar","removeItemFIlter","SET_WINDOW_HEIGHT","DEFAULT_STATE_WINDOW_HEIGHT","sGetWindowHeight","windowHeight","acSetPrintDashboard","acClearPrintDashboard","acAddPrintDashboardItem","isOneItemPerPage","acUpdatePrintDashboardItem","dashboardIsEditing","dashboardIsPrinting","clearEditDashboard","clearPrintDashboard","ItemSearchField","HeaderMenuItem","LaunchIcon","LaunchLink","launchLink","rel","InsertButton","buttonInsert","ContentMenuItem","onInsert","visType","ItemIcon","getItemIcon","renderedItemIcon","visTypeIcons","menuItem","marginRight","singleItems","header","categorizedItems","listItemTypes","CategorizedMenuGroup","addItem","tAddListItemContent","toggleSeeMore","seeMore","onChangeItemsLimit","hasMore","itemUrl","showMoreButton","dashboardItemIndex","category","addToDashboard","ItemSelector","isOpen","setIsOpen","setFilter","setItems","maxOptions","setMaxOptions","Set","queryString","filterStr","then","catch","updateMaxOptions","delete","add","inputRef","maxWidth","menu","itemType","endPointName","itemCount","getDefaultItemCount","allItems","displayItems","concat","EditTitleBar","onChangeTitle","onChangeDescription","section","titleDescription","_","itemSelector","ConfirmDeleteDialog","dashboardName","onDeleteConfirmed","onContinueEditing","destructive","EditBar","translationDialogIsOpen","dashboardModel","confirmDeleteDialogOpen","onConfirmDelete","onSave","newId","onPrintPreview","isPrintPreviewView","clearPrintPreview","showPrintPreview","onDiscard","onDiscardChanges","onDelete","onTranslationsSaved","translations","dbLocale","translation","locale","property","onTranslate","fetchDashboardModel","toggleTranslationDialog","confirmDeleteDialog","deleteAccess","translationDialog","objectToTranslate","modelDefinition","fieldsToTranslate","onTranslationSaved","onTranslationError","renderActionButtons","updateAccess","discardBtnText","editBar","sGetIsNewDashboard","acSetDashboardDisplayName","NotSupportedNotice","noticeContainer","PrintInfo","isLayout","a4LandscapeWidthPx","infoHeader","infoWrapper","infoList","divider","LessHorizontalIcon","PrintActionsBar","inner","LessHorizontal","print","topMargin","getTransformYPx","elStyle","transformY","match","parseInt","PrintLayoutItemGrid","updateDashboardLayout","isFirstPageBreak","pageBreaks","sortedPageBreaks","sortBy","y","hideExtraPageBreaks","sortedElements","elements","types","elementsWithBoundingRect","Array","from","classList","indexOf","bottomY","getDomGridItemsSortedByYPos","querySelectorAll","pageBreakBottom","lastItemBottom","foundNonPageBreak","thisItemBottom","gridElement","firstBreak","scrollArea","EDIT_BAR_HEIGHT","isLeapPage","n","x","getMultiple","factor","multiple","PrintLayoutDashboard","initialized","initPrintLayoutDashboard","setPrintDashboard","MAX_ITEM_GRID_HEIGHT","updateDashboardItem","addDashboardItem","yPosList","pageNum","addPageBreaks","getWrapperStyle","fromEdit","paddingTop","spacers","dp24","wrapper","pageOuter","setEditDashboard","renderGrid","setNewDashboard","PrintItemGrid","PrintDashboard","initPrintDashboard","sortedItems","spacerCount","removeDashboardItem","MAX_ITEM_GRID_WIDTH_OIPP","MAX_ITEM_GRID_HEIGHT_OIPP","dashboardMap","dashboardsIsEmpty","dashboardsLoaded","routeId","selectDashboard","dashboardToSelect","preferredId","getItem","dash","sGetDashboardsSortedByStarred","setWindowHeight","getElementsByTagName","remove","setHeaderbarVisibility","onResize","onHidden","permanent","tSetDimensions","acSetDimensions","displayNameProp","apiFetchDimensions","dim","dimensionType","dataDimensionType","SYSTEM_SETTINGS","tAddSettings","extraSettings","fetchedSettings","s","apiFetchSystemSettings","App","setCurrentUser","fetchDashboards","setControlBarRows","setShowDescription","addSettings","getChildContext","exact","AlertBar","childContextTypes","DEFAULT_STATE_STYLE","objectClean","conversations","$merge","d2Object","keyUiLocale","authorities","newState","$splice","$unshift","idToRemove","stateItems","layoutHasChanged","newStateItems","stateItem","si","configureStore","middleware","thunk","withExtraArgument","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducer","applyMiddleware","addResources","arTranslations","ar_IQTranslations","ckbTranslations","csTranslations","daTranslations","enTranslations","esTranslations","frTranslations","idTranslations","kmTranslations","loTranslations","myTranslations","nbTranslations","prsTranslations","psTranslations","ptTranslations","pt_BRTranslations","ruTranslations","svTranslations","tetTranslations","tgTranslations","ukTranslations","urTranslations","uzTranslations","uz_CyrlTranslations","viTranslations","zhTranslations","zh_CNTranslations","d2Config","schemas","authorization","process","REACT_APP_DHIS2_AUTHORIZATION","headers","AppWrapper","useDataEngine","store","theme","createMuiTheme","dhis2theme","i18nRoot","DOMAIN_TYPE_AGGREGATE","DOMAIN_TYPE_TRACKER","domainType","defaultItemCount","appUrl","dataStatisticsName","Date","getTime","TableIcon","ChartIcon","MapIcon","ExtensionIcon","PersonIcon","FontDownloadIcon","EmailIcon","CropFreeIcon","NotInterestedIcon","param","isArray","isObject","global","Intl","DateTimeFormat","year","month","day","format","replace","api","idx","isNonNegativeInteger","Number","isInteger","minH","GRID_COLUMNS","static","itemWithShape","Error","col","row","itemWidth","MAX_ITEM_GRID_WIDTH","itemHeight","getShape","round","getOriginalHeight","isFunction","setViewportSize","clientWidth","reportTable","chart","eventReport","eventChart","itemTypeToExternalPlugin","getPlugin","hasIntegratedPlugin","load","config","plugin","loadingIndicator","loadPlugin","resize","unmount"],"mappings":"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","file":"static/js/app.e56d4ff8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonContainer\":\"FilterSelector_buttonContainer__O_amY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ViewTitleBar_container__VivO0\",\"actions\":\"ViewTitleBar_actions__2UTRz\",\"editLink\":\"ViewTitleBar_editLink__d_HzW\",\"titleBar\":\"ViewTitleBar_titleBar__eiwJS\",\"titleBarIcon\":\"ViewTitleBar_titleBarIcon__2cBxv\",\"strip\":\"ViewTitleBar_strip__3xR4U\",\"title\":\"ViewTitleBar_title__2GhTR\",\"descContainer\":\"ViewTitleBar_descContainer__3rF10\",\"desc\":\"ViewTitleBar_desc__3QW6Z\",\"noDesc\":\"ViewTitleBar_noDesc__Jettc\",\"moreButton\":\"ViewTitleBar_moreButton__1HduK\",\"shareButton\":\"ViewTitleBar_shareButton__3yEKR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"NoVisualizationMessage_message__22IPi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"center\":\"LoadingMask_center__KHIYy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FatalErrorBoundary_container__3SViR\",\"icon\":\"FatalErrorBoundary_icon__2UbeP\",\"message\":\"FatalErrorBoundary_message__3FzrY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"deleteItemButton\":\"DeleteItemButton_deleteItemButton__3TJm9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"warning\":\"PrintItemInfo_warning__123PK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"line\":\"ItemFooter_line__3Ko0R\",\"scrollContainer\":\"ItemFooter_scrollContainer__tuq4P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Item_list__1_nkQ\",\"item\":\"Item_item__3-6QE\",\"itemicon\":\"Item_itemicon__QlouX\",\"link\":\"Item_link___3c_q\",\"deleteicon\":\"Item_deleteicon__3usrl\",\"deletebutton\":\"Item_deletebutton__1DpBW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"titlePage\":\"Item_titlePage__18CNQ\",\"name\":\"Item_name__3nuTV\",\"description\":\"Item_description__1gFQd\",\"filterTitle\":\"Item_filterTitle__2p7TQ\",\"filterList\":\"Item_filterList__qc_G3\",\"filterListItem\":\"Item_filterListItem__sPbBY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bar\":\"FilterBar_bar__1Ma3p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"HeaderMenuItem_item__313hC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuItem\":\"ContentMenuItem_menuItem__vbKn3\",\"launchLink\":\"ContentMenuItem_launchLink__2Nql9\",\"label\":\"ContentMenuItem_label__ANfH1\",\"buttonInsert\":\"ContentMenuItem_buttonInsert__1joHg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"showMoreButton\":\"CategorizedMenuGroup_showMoreButton__2RbRp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"ItemSelector_menu__2VYae\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"EditTitleBar_section__LIaIC\",\"titleDescription\":\"EditTitleBar_titleDescription__1YsU6\",\"title\":\"EditTitleBar_title__3mUbt\",\"description\":\"EditTitleBar_description__24U5X\",\"itemSelector\":\"EditTitleBar_itemSelector__1cFEp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ConfirmDeleteDialog_content__EqswE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editBar\":\"EditBar_editBar__1d1xM\",\"controls\":\"EditBar_controls__1t0nO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noticeContainer\":\"NotSupportedNotice_noticeContainer__3z9Up\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"infoWrapper\":\"PrintInfo_infoWrapper__3m2lt\",\"infoHeader\":\"PrintInfo_infoHeader__KyW8I\",\"info\":\"PrintInfo_info__13oXZ\",\"infoList\":\"PrintInfo_infoList__Iu9MC\",\"divider\":\"PrintInfo_divider__3wzx9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PrintActionsBar_container__2iQp7\",\"topMargin\":\"PrintActionsBar_topMargin__OpYDN\",\"inner\":\"PrintActionsBar_inner__uBqU7\",\"link\":\"PrintActionsBar_link__lFUmI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"PrintLayoutDashboard_wrapper__1WDh4\",\"pageOuter\":\"PrintLayoutDashboard_pageOuter__22acI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"PrintDashboard_wrapper__1O3s_\",\"pageOuter\":\"PrintDashboard_pageOuter__fl9tw\"};","import React, { createContext, useContext, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash/debounce';\nexport const WindowDimensionsCtx = createContext(null);\n\nconst windowDims = () => ({\n  height: window.innerHeight,\n  width: window.innerWidth\n});\n\nconst WindowDimensionsProvider = ({\n  children\n}) => {\n  const [dimensions, setDimensions] = useState(windowDims());\n  useEffect(() => {\n    const handleResize = debounce(() => {\n      setDimensions(windowDims());\n    }, 200);\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n  return <WindowDimensionsCtx.Provider value={dimensions}>\n            {children}\n        </WindowDimensionsCtx.Provider>;\n};\n\nWindowDimensionsProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};\nexport default WindowDimensionsProvider;\nexport const useWindowDimensions = () => {\n  return useContext(WindowDimensionsCtx);\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport classes from './styles/ControlBar.module.css'; //Matches the height of .dragHandle in ControlBar.module.css\n\nexport const DRAG_HANDLE_HEIGHT = 7;\n\nclass ControlBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dragging: false\n    };\n  }\n\n  onStartDrag = () => {\n    this.setState({\n      dragging: true\n    });\n    window.addEventListener('mousemove', this.onDrag);\n    window.addEventListener('mouseup', this.onEndDrag);\n  };\n  onDrag = event => {\n    event.preventDefault();\n    event.stopPropagation();\n    const newHeight = event.clientY;\n\n    if (this.props.onChangeHeight && newHeight !== this.props.height && newHeight > 0) {\n      requestAnimationFrame(() => {\n        this.props.onChangeHeight(newHeight);\n      });\n    }\n  };\n  onEndDrag = () => {\n    this.setState({\n      dragging: false\n    });\n    window.removeEventListener('mousemove', this.onDrag);\n    window.removeEventListener('mouseup', this.onEndDrag);\n\n    if (this.props.onEndDrag) {\n      this.props.onEndDrag();\n    }\n  };\n  renderDragHandle = () => typeof this.props.onChangeHeight === 'function' && <div className={classes.draghandle} onMouseDown={this.onStartDrag} data-testid=\"controlbar-drag-handle\" />;\n\n  render() {\n    const height = Math.max(this.props.height, 0) + DRAG_HANDLE_HEIGHT;\n    const rootClass = cx(classes.root, this.state.dragging && classes.dragging);\n    return <div style={{\n      height\n    }} className={rootClass}>\n                <div className={classes.content}>{this.props.children}</div>\n                {this.renderDragHandle()}\n            </div>;\n  }\n\n}\n\nControlBar.propTypes = {\n  /**\n   * The height of the control bar in number of lines. Must be a positive integer.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Callback function that is called when the control bar is resized.\n   * The callback receives one argument: The new height in pixels.\n   *\n   * If no callback is specified the control bar will not have a drag handle.\n   */\n  height: PropTypes.number.isRequired,\n\n  /**\n   * Callback function that is called when the control bar is dropped after being dragged.\n   * The callback receives one argument: The new height in pixels.\n   *\n   * Ignored if no \"onChangeHeight\" function is provided.\n   */\n  onChangeHeight: PropTypes.func,\n\n  /**\n   * The contents of the control bar.\n   */\n  onEndDrag: PropTypes.func\n};\nControlBar.defaultProps = {\n  onChangeHeight: null,\n  onEndDrag: null\n};\nexport default ControlBar;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst StarIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>;\n\nStarIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default StarIcon;","import { getInstance } from 'd2';\nexport const apiPostDataStatistics = async (eventType, id) => {\n  const d2 = await getInstance();\n  const url = `dataStatistics?eventType=${eventType}&favorite=${id}`;\n  d2.Api.getApi().post(url);\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Chip } from '@dhis2/ui';\nimport { Link } from 'react-router-dom';\nimport debounce from 'lodash/debounce';\nimport StarIcon from '../../icons/Star';\nimport { apiPostDataStatistics } from '../../api/dataStatistics';\nimport classes from './styles/DashboardItemChip.module.css';\nexport const DashboardItemChip = ({\n  starred,\n  selected,\n  label,\n  dashboardId,\n  onClick\n}) => {\n  const chipProps = {\n    selected\n  };\n\n  if (starred) {\n    const selectedState = selected ? classes.selected : classes.unselected;\n    chipProps.icon = <StarIcon className={`${classes.icon} ${selectedState}`} />;\n  }\n\n  const debouncedPostStatistics = debounce(() => apiPostDataStatistics('DASHBOARD_VIEW', dashboardId), 500);\n\n  const handleClick = () => {\n    debouncedPostStatistics();\n    onClick();\n  };\n\n  return <Link className={classes.link} to={`/${dashboardId}`} onClick={handleClick} data-test=\"dashboard-chip\">\n            <Chip {...chipProps}>{label}</Chip>\n        </Link>;\n};\nDashboardItemChip.propTypes = {\n  dashboardId: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  selected: PropTypes.bool.isRequired,\n  starred: PropTypes.bool.isRequired,\n  onClick: PropTypes.func.isRequired,\n  classes: PropTypes.object\n};\nexport default DashboardItemChip;","import React from 'react';\nimport { colors } from '@dhis2/ui';\n\nconst AddCircleIcon = () => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" fill={colors.teal600} viewBox=\"0 0 24 24\">\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm4 11h-3v3c0 .55-.45 1-1 1s-1-.45-1-1v-3H8c-.55 0-1-.45-1-1s.45-1 1-1h3V8c0-.55.45-1 1-1s1 .45 1 1v3h3c.55 0 1 .45 1 1s-.45 1-1 1z\" />\n    </svg>;\n\nexport default AddCircleIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst SearchIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\" />\n    </svg>;\n\nSearchIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default SearchIcon;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst ClearIcon = ({\n  className\n}) => <svg className={className} fill={colors.grey800} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n        <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>;\n\nClearIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default ClearIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ClearIcon from '../../icons/Clear';\nimport classes from './styles/ClearButton.module.css';\nexport const ClearButton = ({\n  onClear\n}) => <button className={classes.button} onClick={onClear}>\n        <span>\n            <ClearIcon className={classes.icon} color=\"action\" />\n        </span>\n    </button>;\nClearButton.propTypes = {\n  onClear: PropTypes.func.isRequired\n};\nexport default ClearButton;","import { validateReducer } from '../modules/util';\nexport const SET_DASHBOARDS_FILTER = 'SET_DASHBOARDS_FILTER';\nexport const CLEAR_DASHBOARDS_FILTER = 'CLEAR_DASHBOARDS_FILTER';\nexport const DEFAULT_STATE_DASHBOARDS_FILTER = '';\nexport default ((state = DEFAULT_STATE_DASHBOARDS_FILTER, action) => {\n  switch (action.type) {\n    case SET_DASHBOARDS_FILTER:\n      {\n        return validateReducer(action.value, DEFAULT_STATE_DASHBOARDS_FILTER);\n      }\n\n    case CLEAR_DASHBOARDS_FILTER:\n      {\n        return DEFAULT_STATE_DASHBOARDS_FILTER;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetDashboardsFilter = state => state.dashboardsFilter;","const SMALL_SCREEN_BREAKPOINT = 480;\n\nconst isSmallScreen = width => width <= SMALL_SCREEN_BREAKPOINT;\n\nexport default isSmallScreen;","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport cx from 'classnames';\nimport SearchIcon from '../../icons/Search';\nimport ClearButton from './ClearButton';\nimport { useWindowDimensions } from '../WindowDimensionsProvider';\nimport { acSetDashboardsFilter, acClearDashboardsFilter } from '../../actions/dashboardsFilter';\nimport { sGetDashboardsFilter } from '../../reducers/dashboardsFilter';\nimport isSmallScreen from '../../modules/isSmallScreen';\nimport classes from './styles/Filter.module.css';\nexport const KEYCODE_ENTER = 13;\nexport const KEYCODE_ESCAPE = 27;\nexport const FilterUnconnected = ({\n  clearDashboardsFilter,\n  filterText,\n  isMaxHeight,\n  setDashboardsFilter,\n  onKeypressEnter,\n  onToggleMaxHeight\n}) => {\n  const [focusedClassName, setFocusedClassName] = useState('');\n  const {\n    width\n  } = useWindowDimensions();\n\n  const setFilterValue = event => {\n    event.preventDefault();\n    setDashboardsFilter(event.target.value);\n  };\n\n  const onKeyUp = event => {\n    switch (event.keyCode) {\n      case KEYCODE_ENTER:\n        onKeypressEnter();\n        clearDashboardsFilter();\n        break;\n\n      case KEYCODE_ESCAPE:\n        clearDashboardsFilter();\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const onFocus = event => {\n    event.preventDefault();\n    setFocusedClassName(classes.focused);\n  };\n\n  const onBlur = event => {\n    event.preventDefault();\n    setFocusedClassName('');\n  };\n\n  return isSmallScreen(width) && !isMaxHeight ? <button className={classes.searchButton} onClick={onToggleMaxHeight}>\n            <SearchIcon className={classes.searchIcon} />\n        </button> : <div className={cx(classes.container, `${focusedClassName}`)} onFocus={onFocus} onBlur={onBlur}>\n            <SearchIcon className={classes.searchIcon} />\n            <input className={classes.input} type=\"text\" placeholder={i18n.t('Search for a dashboard')} onChange={setFilterValue} onKeyUp={onKeyUp} value={filterText} data-test=\"search-dashboard-input\" />\n            {filterText && <ClearButton onClear={clearDashboardsFilter} />}\n        </div>;\n};\nFilterUnconnected.propTypes = {\n  clearDashboardsFilter: PropTypes.func,\n  filterText: PropTypes.string,\n  isMaxHeight: PropTypes.bool,\n  setDashboardsFilter: PropTypes.func,\n  onKeypressEnter: PropTypes.func,\n  onToggleMaxHeight: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  filterText: sGetDashboardsFilter(state)\n});\n\nconst mapDispatchToProps = {\n  setDashboardsFilter: acSetDashboardsFilter,\n  clearDashboardsFilter: acClearDashboardsFilter\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterUnconnected);","import { SET_DASHBOARDS_FILTER, CLEAR_DASHBOARDS_FILTER } from '../reducers/dashboardsFilter'; // actions\n\nexport const acSetDashboardsFilter = value => ({\n  type: SET_DASHBOARDS_FILTER,\n  value\n});\nexport const acClearDashboardsFilter = () => ({\n  type: CLEAR_DASHBOARDS_FILTER\n});","import React from 'react';\nexport const ChevronDown = () => <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"m11.29289 15.7071c.39053.3905 1.02369.3905 1.41422 0l4.99999-4.99999c.3905-.39053.3905-1.02369 0-1.41422-.3905-.39052-1.0237-.39052-1.4142 0l-4.2929 4.2929-4.29289-4.2929c-.39053-.39052-1.02369-.39052-1.41422 0-.39052.39053-.39052 1.02369 0 1.41422z\" fill=\"#a0adba\" />\n    </svg>;\nexport const ChevronUp = () => <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"m11.2928932 8.29289322c.360484-.36048396.927715-.3882135 1.3200062-.08318861l.0942074.08318861 5 4.99999998c.3905243.3905243.3905243 1.0236893 0 1.4142136-.360484.3604839-.927715.3882135-1.3200062.0831886l-.0942074-.0831886-4.2928932-4.2921068-4.29289322 4.2921068c-.36048396.3604839-.92771502.3882135-1.32000622.0831886l-.09420734-.0831886c-.36048396-.360484-.3882135-.927715-.08318861-1.3200062l.08318861-.0942074z\" fill=\"#a0adba\" />\n    </svg>;","import React, { useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Tooltip } from '@dhis2/ui';\nimport { ChevronDown, ChevronUp } from './assets/icons';\nimport classes from './styles/ShowMoreButton.module.css';\nexport const SHOWMORE_BAR_HEIGHT = 16;\n\nconst ShowMoreButton = ({\n  onClick,\n  isMaxHeight,\n  disabled\n}) => {\n  const containerRef = useRef(null);\n  const buttonLabel = isMaxHeight ? i18n.t('Show fewer dashboards') : i18n.t('Show more dashboards');\n\n  const onButtonClicked = () => {\n    // The click may happen on the svg or path\n    // element of the button icon.\n    // In that case it is necessary to trigger\n    // the mouseout on the button element\n    // to ensure that the tooltip is removed\n    const buttonEl = containerRef.current.children[0];\n    const event = new MouseEvent('mouseout', {\n      bubbles: true,\n      cancelable: false\n    });\n    onClick();\n    buttonEl.dispatchEvent(event);\n  };\n\n  return <div className={classes.container} ref={containerRef}>\n            {disabled ? <div className={classes.disabled}>\n                    <ChevronDown />\n                </div> : <Tooltip content={buttonLabel} placement=\"bottom\">\n                    {({\n        onMouseOver,\n        onMouseOut,\n        ref\n      }) => <button className={classes.showMore} onClick={onButtonClicked} data-test=\"showmore-button\" aria-label={buttonLabel} ref={ref} onMouseOver={onMouseOver} onMouseOut={onMouseOut}>\n                            {isMaxHeight ? <ChevronUp /> : <ChevronDown />}\n                        </button>}\n                </Tooltip>}\n        </div>;\n};\n\nShowMoreButton.propTypes = {\n  disabled: PropTypes.bool,\n  isMaxHeight: PropTypes.bool,\n  onClick: PropTypes.func\n};\nexport default ShowMoreButton;","import { SHOWMORE_BAR_HEIGHT } from './ShowMoreButton';\nexport const CONTROL_BAR_ROW_HEIGHT = 40;\nexport const FIRST_ROW_PADDING_HEIGHT = 10;\nexport const MIN_ROW_COUNT = 1;\nexport const HEADERBAR_HEIGHT = 48;\nconst CONTROL_BAR_OUTER_HEIGHT_DIFF = FIRST_ROW_PADDING_HEIGHT + SHOWMORE_BAR_HEIGHT - 2; // 2 pixel \"adjustment\"\n\nexport const getRowsHeight = rows => {\n  return rows * CONTROL_BAR_ROW_HEIGHT;\n};\nexport const getNumRowsFromHeight = height => {\n  return Math.floor((height - CONTROL_BAR_OUTER_HEIGHT_DIFF) / CONTROL_BAR_ROW_HEIGHT);\n};\nexport const getControlBarHeight = rows => {\n  return getRowsHeight(rows) + CONTROL_BAR_OUTER_HEIGHT_DIFF;\n};","/** @module reducers/controlBar */\nimport { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\nexport const SET_CONTROLBAR_USER_ROWS = 'SET_CONTROLBAR_USER_ROWS';\nexport const DEFAULT_STATE_CONTROLBAR_ROWS = 1;\n\nconst userRows = (state = DEFAULT_STATE_CONTROLBAR_ROWS, action) => {\n  switch (action.type) {\n    case SET_CONTROLBAR_USER_ROWS:\n      return validateReducer(action.value, DEFAULT_STATE_CONTROLBAR_ROWS);\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  userRows\n});\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\n\nexport const sGetControlBarRoot = state => state.controlBar; // Selector dependency level 2\n\nexport const sGetControlBarUserRows = state => sGetControlBarRoot(state).userRows;","import { TEXT, SPACER } from './itemTypes';\nimport { getGridItemProperties } from '../components/ItemGrid/gridUtil';\nexport const spacerContent = 'SPACER_ITEM_FOR_DASHBOARD_LAYOUT_CONVENIENCE';\nexport const emptyTextItemContent = 'TEXT_ITEM_WITH_NO_CONTENT';\n\nconst isBackendSpacerType = item => item.type === TEXT && item.text === spacerContent;\n\nconst isUiSpacerType = item => item.type === SPACER;\n\nconst isTextType = item => item.type === TEXT && item.text !== spacerContent;\n\nexport const convertUiItemsToBackend = items => items.map(item => {\n  let text = null;\n\n  if (isUiSpacerType(item)) {\n    text = spacerContent;\n  } else if (isTextType(item)) {\n    text = item.text || emptyTextItemContent;\n  }\n\n  return { ...item,\n    ...(text ? {\n      text\n    } : {})\n  };\n});\nexport const convertBackendItemsToUi = items => items.map(item => {\n  const type = isBackendSpacerType(item) ? SPACER : item.type;\n  const gridProperties = getGridItemProperties(item.id);\n  const text = isTextType(item) ? item.text === emptyTextItemContent ? '' : item.text : null;\n  return { ...item,\n    ...(text !== null ? {\n      text\n    } : {}),\n    type,\n    ...gridProperties\n  };\n});","/** @module reducers/dashboards */\nimport arrayFrom from 'd2-utilizr/lib/arrayFrom';\nimport arraySort from 'd2-utilizr/lib/arraySort';\nimport { orArray, orObject } from '../modules/util';\nimport { convertBackendItemsToUi } from '../modules/uiBackendItemConverter';\nexport const SET_DASHBOARDS = 'SET_DASHBOARDS';\nexport const ADD_DASHBOARDS = 'ADD_DASHBOARDS';\nexport const SET_DASHBOARD_STARRED = 'SET_DASHBOARD_STARRED';\nexport const SET_DASHBOARD_DISPLAY_NAME = 'SET_DASHBOARD_DISPLAY_NAME';\nexport const SET_DASHBOARD_ITEMS = 'SET_DASHBOARD_ITEMS';\nexport const DEFAULT_STATE_DASHBOARDS = {\n  byId: null,\n  items: []\n};\nexport const EMPTY_DASHBOARD = {}; // reducer helper functions\n\nconst updateDashboardProp = ({\n  state,\n  dashboardId,\n  prop,\n  value\n}) => ({\n  byId: { ...state.byId,\n    [dashboardId]: { ...state.byId[dashboardId],\n      [prop]: value\n    }\n  },\n  items: state.items\n});\n/**\n * Reducer that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n * @returns {Object}\n */\n\n\nexport default ((state = DEFAULT_STATE_DASHBOARDS, action) => {\n  switch (action.type) {\n    case SET_DASHBOARDS:\n      {\n        return {\n          byId: action.value,\n          items: []\n        };\n      }\n\n    case ADD_DASHBOARDS:\n      {\n        return { ...state,\n          byId: { ...state.byId,\n            ...action.value\n          }\n        };\n      }\n\n    case SET_DASHBOARD_STARRED:\n      {\n        return updateDashboardProp({\n          state,\n          dashboardId: action.dashboardId,\n          prop: 'starred',\n          value: action.value\n        });\n      }\n\n    case SET_DASHBOARD_DISPLAY_NAME:\n      {\n        return updateDashboardProp({\n          state,\n          dashboardId: action.dashboardId,\n          prop: 'displayName',\n          value: action.value\n        });\n      }\n\n    case SET_DASHBOARD_ITEMS:\n      {\n        return { ...state,\n          items: action.value\n        };\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetDashboardsRoot = state => state.dashboards; // selector level 1\n\n/**\n * Selector which returns a dashboard by id from the state object\n * If no matching dashboard is found it returns undefined\n * If dashboards.byId is null, then the dashboards api request\n * has not yet completed. If dashboards.byId is an empty object\n * then the dashboards api request is complete, but no dashboards\n * were returned\n *\n * @function\n * @param {Object} state The current state\n * @param {Number} id The id of the dashboard\n * @returns {Object | undefined}\n */\n\nexport const sGetDashboardById = (state, id) => orObject(sGetDashboardsRoot(state).byId)[id];\nexport const sDashboardsIsFetching = state => {\n  return sGetDashboardsRoot(state).byId === null;\n};\n/**\n * Selector which returns all dashboards (the byId object)\n *\n * @function\n * @param {Object} state The current state\n * @returns {Object | undefined}\n */\n\nexport const sGetAllDashboards = state => orObject(sGetDashboardsRoot(state).byId);\n/**\n * Selector which returns the current dashboard items\n *\n * @function\n * @param {Object} state The current state\n * @returns {Array}\n */\n\nexport const sGetDashboardItems = state => sGetDashboardsRoot(state).items; // selector level 2\n\nexport const sGetStarredDashboards = state => Object.values(sGetAllDashboards(state)).filter(dashboard => dashboard.starred === true);\nexport const sGetUnstarredDashboards = state => Object.values(sGetAllDashboards(state)).filter(dashboard => dashboard.starred === false); // selector level 3\n\nexport const sGetStarredDashboardIds = state => {\n  return sGetStarredDashboards(state).map(dashboard => dashboard.id);\n};\nexport const sGetUnstarredDashboardIds = state => sGetUnstarredDashboards(state).map(dashboard => dashboard.id);\nexport const sGetDashboardsSortedByStarred = state => [...arraySort(sGetStarredDashboards(state), 'ASC', 'displayName'), ...arraySort(sGetUnstarredDashboards(state), 'ASC', 'displayName')]; // utils\n\n/**\n * Returns the array of dashboards, customized for ui\n * @function\n * @param {Array} data The original dashboard list\n * @returns {Array}\n */\n\nexport const getCustomDashboards = data => arrayFrom(data).map(d => ({\n  id: d.id,\n  name: d.name,\n  displayName: d.displayName,\n  description: d.description,\n  displayDescription: d.displayDescription,\n  starred: d.favorite,\n  owner: d.user.name,\n  created: d.created.split('T').join(' ').substr(0, 16),\n  lastUpdated: d.lastUpdated.split('T').join(' ').substr(0, 16),\n  access: d.access,\n  numberOfItems: orArray(d.dashboardItems).length,\n  dashboardItems: convertBackendItemsToUi(d.dashboardItems)\n}));","/** @module reducers/selected */\nimport { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\nexport const SET_SELECTED_ID = 'SET_SELECTED_ID';\nexport const SET_SELECTED_ISLOADING = 'SET_SELECTED_ISLOADING';\nexport const SET_SELECTED_SHOWDESCRIPTION = 'SET_SELECTED_SHOWDESCRIPTION';\nexport const SET_SELECTED_ITEM_ACTIVE_TYPE = 'SET_SELECTED_ITEM_ACTIVE_TYPE';\nexport const CLEAR_SELECTED_ITEM_ACTIVE_TYPES = 'CLEAR_SELECTED_ITEM_ACTIVE_TYPES';\nexport const DEFAULT_STATE_SELECTED_ID = null;\nexport const DEFAULT_STATE_SELECTED_ISLOADING = false;\nexport const DEFAULT_STATE_SELECTED_SHOWDESCRIPTION = false;\nexport const DEFAULT_STATE_SELECTED_ITEM_ACTIVE_TYPES = {};\nexport const NON_EXISTING_DASHBOARD_ID = '0';\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\n\nconst id = (state = DEFAULT_STATE_SELECTED_ID, action) => {\n  switch (action.type) {\n    case SET_SELECTED_ID:\n      return validateReducer(action.value, DEFAULT_STATE_SELECTED_ID);\n\n    default:\n      return state;\n  }\n};\n\nconst isLoading = (state = DEFAULT_STATE_SELECTED_ISLOADING, action) => {\n  switch (action.type) {\n    case SET_SELECTED_ISLOADING:\n      return validateReducer(action.value, DEFAULT_STATE_SELECTED_ISLOADING);\n\n    default:\n      return state;\n  }\n};\n\nconst showDescription = (state = DEFAULT_STATE_SELECTED_SHOWDESCRIPTION, action) => {\n  switch (action.type) {\n    case SET_SELECTED_SHOWDESCRIPTION:\n      return validateReducer(action.value, DEFAULT_STATE_SELECTED_SHOWDESCRIPTION);\n\n    default:\n      return state;\n  }\n};\n\nconst itemActiveTypes = (state = DEFAULT_STATE_SELECTED_ITEM_ACTIVE_TYPES, action) => {\n  switch (action.type) {\n    case SET_SELECTED_ITEM_ACTIVE_TYPE:\n      {\n        return { ...state,\n          [action.id]: action.activeType\n        };\n      }\n\n    case CLEAR_SELECTED_ITEM_ACTIVE_TYPES:\n      {\n        return DEFAULT_STATE_SELECTED_ITEM_ACTIVE_TYPES;\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  id,\n  isLoading,\n  showDescription,\n  itemActiveTypes\n}); // Selectors\n\nexport const sGetSelectedRoot = state => state.selected;\nexport const sGetSelectedId = state => sGetSelectedRoot(state).id;\nexport const sGetSelectedIsLoading = state => sGetSelectedRoot(state).isLoading;\nexport const sGetSelectedShowDescription = state => sGetSelectedRoot(state).showDescription;\nexport const sGetSelectedItemActiveType = (state, id) => sGetSelectedRoot(state).itemActiveTypes[id];","import { getInstance } from 'd2';\nexport const NAMESPACE = 'dashboard';\nexport const hasNamespace = async (d2) => await d2.currentUser.dataStore.has(NAMESPACE);\nexport const getNamespace = async (d2, hasNamespace) => hasNamespace ? await d2.currentUser.dataStore.get(NAMESPACE) : await d2.currentUser.dataStore.create(NAMESPACE);\nexport const apiPostUserDataStoreValue = async (key, value) => {\n  const d2 = await getInstance();\n  const ns = await getNamespace(d2, hasNamespace);\n  ns.set(key, value);\n};\nexport const apiGetUserDataStoreValue = async (key, defaultValue) => {\n  const d2 = await getInstance();\n  const namespace = await getNamespace(d2, await hasNamespace(d2));\n  const hasKey = namespace?.keys?.find(k => k === key);\n\n  if (hasKey) {\n    return await namespace.get(key);\n  } else {\n    await apiPostUserDataStoreValue(key, defaultValue, namespace);\n    console.log('(These errors to /userDataStore can be ignored)');\n    return defaultValue;\n  }\n};","import { apiGetUserDataStoreValue, apiPostUserDataStoreValue } from './userDataStore';\nimport { DEFAULT_STATE_CONTROLBAR_ROWS } from '../reducers/controlBar';\nconst KEY_CONTROLBAR_ROWS = 'controlBarRows';\nexport const apiGetControlBarRows = async () => await apiGetUserDataStoreValue(KEY_CONTROLBAR_ROWS, DEFAULT_STATE_CONTROLBAR_ROWS);\nexport const apiPostControlBarRows = async (value) => await apiPostUserDataStoreValue(KEY_CONTROLBAR_ROWS, value);","import { SET_CONTROLBAR_USER_ROWS } from '../reducers/controlBar';\nimport { apiGetControlBarRows } from '../api/controlBar'; // actions\n\nexport const acSetControlBarUserRows = rows => ({\n  type: SET_CONTROLBAR_USER_ROWS,\n  value: rows\n}); // thunks\n\nexport const tSetControlBarRows = () => async dispatch => {\n  const onSuccess = rows => {\n    dispatch(acSetControlBarUserRows(rows));\n  };\n\n  const onError = error => {\n    console.log('Error (apiGetControlBarRows): ', error);\n    return error;\n  };\n\n  try {\n    const controlBarRows = await apiGetControlBarRows();\n    return onSuccess(controlBarRows);\n  } catch (err) {\n    return onError(err);\n  }\n};","import React, { useState, useEffect, createRef } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport cx from 'classnames';\nimport arraySort from 'd2-utilizr/lib/arraySort';\nimport PropTypes from 'prop-types';\nimport ControlBar, { DRAG_HANDLE_HEIGHT } from './ControlBar';\nimport Chip from './DashboardItemChip';\nimport AddCircleIcon from '../../icons/AddCircle';\nimport Filter from './Filter';\nimport ShowMoreButton from './ShowMoreButton';\nimport { FIRST_ROW_PADDING_HEIGHT, MIN_ROW_COUNT, HEADERBAR_HEIGHT, getRowsHeight, getControlBarHeight, getNumRowsFromHeight } from './controlBarDimensions';\nimport { useWindowDimensions } from '../WindowDimensionsProvider';\nimport { sGetDashboardsFilter } from '../../reducers/dashboardsFilter';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { sGetAllDashboards } from '../../reducers/dashboards';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { acSetControlBarUserRows } from '../../actions/controlBar';\nimport { apiPostControlBarRows } from '../../api/controlBar';\nimport isSmallScreen from '../../modules/isSmallScreen';\nimport classes from './styles/DashboardsBar.module.css';\nexport const MAX_ROW_COUNT = 10;\n\nconst DashboardsBar = ({\n  userRows,\n  onChangeHeight,\n  history,\n  dashboards,\n  selectedId,\n  filterText\n}) => {\n  const [rows, setRows] = useState(userRows);\n  const {\n    width,\n    height\n  } = useWindowDimensions();\n  const ref = createRef();\n  useEffect(() => {\n    setRows(userRows);\n  }, [userRows]);\n\n  const isMaxHeight = () => rows === MAX_ROW_COUNT;\n\n  const adjustHeight = newHeight => {\n    const newRows = Math.max(MIN_ROW_COUNT, getNumRowsFromHeight(newHeight - 52) // don't rush the transition to a bigger row count\n    );\n\n    if (newRows !== rows) {\n      onChangeHeight(Math.min(newRows, MAX_ROW_COUNT));\n    }\n  };\n\n  const onEndDrag = () => apiPostControlBarRows(rows);\n\n  const scrollToTop = () => {\n    if (isMaxHeight()) {\n      ref.current.scroll(0, 0);\n    }\n  };\n\n  const toggleMaxHeight = () => {\n    const newRows = isMaxHeight() ? userRows : MAX_ROW_COUNT;\n    scrollToTop();\n    setRows(newRows);\n  };\n\n  const cancelMaxHeight = () => {\n    scrollToTop();\n    setRows(userRows);\n  };\n\n  const onSelectDashboard = () => {\n    const id = getFilteredDashboards()[0]?.id;\n\n    if (id) {\n      history.push(id);\n    }\n  };\n\n  const getFilteredDashboards = () => {\n    const filteredDashboards = arraySort(Object.values(dashboards).filter(d => d.displayName.toLowerCase().includes(filterText.toLowerCase())), 'ASC', 'displayName');\n    return [...filteredDashboards.filter(d => d.starred), ...filteredDashboards.filter(d => !d.starred)];\n  };\n\n  const viewableRows = isSmallScreen(width) && !isMaxHeight() ? MIN_ROW_COUNT : rows;\n\n  const getHeight = () => {\n    if (isSmallScreen(width) && isMaxHeight()) {\n      return height - HEADERBAR_HEIGHT - DRAG_HANDLE_HEIGHT - 32;\n    }\n\n    return getControlBarHeight(viewableRows);\n  };\n\n  const getContainerHeight = () => {\n    if (isSmallScreen(width) && isMaxHeight()) {\n      return height - HEADERBAR_HEIGHT - 22 - 32;\n    }\n\n    return getRowsHeight(viewableRows) + FIRST_ROW_PADDING_HEIGHT;\n  };\n\n  const getChipContainerHeight = () => {\n    if (isSmallScreen(width) && isMaxHeight()) {\n      return height - HEADERBAR_HEIGHT - 42 - 22 - 32;\n    }\n\n    return getRowsHeight(viewableRows) + FIRST_ROW_PADDING_HEIGHT;\n  };\n\n  const getDashboardChips = () => {\n    const chips = getFilteredDashboards().map(dashboard => <Chip key={dashboard.id} label={dashboard.displayName} starred={dashboard.starred} dashboardId={dashboard.id} selected={dashboard.id === selectedId} onClick={cancelMaxHeight} />);\n\n    if (isSmallScreen(width)) {\n      const chipContainerClasses = cx(classes.chipContainer, isMaxHeight() ? classes.expanded : classes.collapsed);\n      return <div className={chipContainerClasses} style={{\n        height: getChipContainerHeight()\n      }}>\n                    {chips}\n                </div>;\n    } else {\n      return chips;\n    }\n  };\n\n  const containerClass = cx(classes.container, isMaxHeight() ? classes.expanded : classes.collapsed);\n  return <>\n            <ControlBar height={getHeight()} onChangeHeight={!isSmallScreen(width) ? adjustHeight : null} onEndDrag={onEndDrag}>\n                <div className={containerClass} ref={ref} style={{\n        height: getContainerHeight()\n      }}>\n                    <div className={classes.controls}>\n                        <Link className={classes.newLink} to={'/new'} data-test=\"link-new-dashboard\">\n                            <AddCircleIcon />\n                        </Link>\n                        <Filter onKeypressEnter={onSelectDashboard} onToggleMaxHeight={toggleMaxHeight} isMaxHeight={isMaxHeight()} />\n                    </div>\n                    {getDashboardChips()}\n                </div>\n                <ShowMoreButton onClick={toggleMaxHeight} isMaxHeight={isMaxHeight()} disabled={userRows === MAX_ROW_COUNT} />\n            </ControlBar>\n            <div style={{\n      marginTop: getControlBarHeight(isSmallScreen(width) && !isMaxHeight() ? MIN_ROW_COUNT : userRows) + DRAG_HANDLE_HEIGHT\n    }} />\n        </>;\n};\n\nDashboardsBar.propTypes = {\n  dashboards: PropTypes.object,\n  filterText: PropTypes.string,\n  history: PropTypes.object,\n  selectedId: PropTypes.string,\n  userRows: PropTypes.number,\n  onChangeHeight: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  dashboards: sGetAllDashboards(state),\n  filterText: sGetDashboardsFilter(state),\n  selectedId: sGetSelectedId(state),\n  userRows: sGetControlBarUserRows(state)\n});\n\nconst mapDispatchToProps = {\n  onChangeHeight: acSetControlBarUserRows\n};\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(DashboardsBar));","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst NoContentMessage = ({\n  text\n}) => <div style={{\n  padding: '50px 10px',\n  textAlign: 'center',\n  fontSize: '15px',\n  fontWeight: 500,\n  color: colors.grey600\n}}>\n        {text}\n    </div>;\n\nNoContentMessage.propTypes = {\n  text: PropTypes.string\n};\nexport default NoContentMessage;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nexport const ThreeDots = () => <svg height=\"18\" viewBox=\"0 0 18 18\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"m4 7.5c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm10 0c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm-5 0c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5z\" fill=\"#6e7a8a\" />\n    </svg>;\nexport const SpeechBubble = () => <svg height=\"20\" viewBox=\"0 0 20 20\" width=\"20\" xmlns=\"http://www.w3.org/2000/svg\" style={{\n  margin: '3px 2px 0 2px'\n}} // Temporary fix for the misaligned icon, should be removed once the icon is replaced\n>\n        <path d=\"m20 2h-16c-1.1 0-1.99.9-1.99 2l-.01 18 4-4h14c1.1 0 2-.9 2-2v-12c0-1.1-.9-2-2-2zm-2 12h-12v-2h12zm0-3h-12v-2h12zm0-3h-12v-2h12z\" fill=\"#6e7a8a\" fillRule=\"evenodd\" transform=\"translate(-2 -2)\" />\n    </svg>;\nexport const Warning = () => <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" fill={colors.grey600}>\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z\" />\n    </svg>;\nexport const Fullscreen = () => <svg height=\"16\" viewBox=\"0 0 16 16\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"m6.85355339 9.14644661c.17356635.17356635.1928515.44299075.05785545.63785889l-.05785545.06924789-4.14755339 4.14644661h2.794c.24545989 0 .44960837.1768752.49194433.4101244l.00805567.0898756c0 .2454599-.17687516.4496084-.41012437.4919443l-.08987563.0080557h-4c-.24545989 0-.44960837-.1768752-.49194433-.4101244l-.00805567-.0898756v-4c0-.2761424.22385763-.5.5-.5.24545989 0 .44960837.1768752.49194433.4101244l.00805567.0898756v2.792l4.14644661-4.14555339c.19526215-.19526215.51184463-.19526215.70710678 0zm6.14644661-2.14644661v6h-6v-1h5v-5zm-4-4v1h-5v5h-1v-6zm5.5-2c.2454599 0 .4496084.17687516.4919443.41012437l.0080557.08987563v4c0 .27614237-.2238576.5-.5.5-.2454599 0-.4496084-.17687516-.4919443-.41012437l-.0080557-.08987563v-2.794l-4.14644661 4.14755339c-.19526215.19526215-.51184463.19526215-.70710678 0-.17356635-.17356635-.1928515-.44299075-.05785545-.63785889l.05785545-.06924789 4.14655339-4.14744661-2.793.001c-.2454599 0-.4496084-.17687516-.4919443-.41012437l-.0080557-.08987563c0-.24545989.1768752-.44960837.4101244-.49194433l.0898756-.00805567z\" fill=\"inherit\" />\n    </svg>;\nexport const ExitFullscreen = () => <svg height=\"16\" viewBox=\"0 0 16 16\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"m6.5 9c.24545989 0 .44960837.17687516.49194433.41012437l.00805567.08987563v4c0 .2761424-.22385763.5-.5.5-.24545989 0-.44960837-.1768752-.49194433-.4101244l-.00805567-.0898756v-2.794l-3.64644661 3.6475534c-.19526215.1952621-.51184463.1952621-.70710678 0-.17356635-.1735664-.1928515-.4429908-.05785545-.6378589l.05785545-.0692479 3.64555339-3.6464466h-2.792c-.24545989 0-.44960837-.17687516-.49194433-.41012437l-.00805567-.08987563c0-.24545989.17687516-.44960837.41012437-.49194433l.08987563-.00805567zm7.5-.5v5.5h-5.5v-1h4.5v-4.5zm-6.5-6.5v1h-4.5v4.5h-1v-5.5zm6.8535534-.35355339c.1735663.17356635.1928515.44299075.0578554.63785889l-.0578554.06924789-3.6475534 3.64644661h2.794c.2454599 0 .4496084.17687516.4919443.41012437l.0080557.08987563c0 .24545989-.1768752.44960837-.4101244.49194433l-.0898756.00805567h-4c-.24545989 0-.44960837-.17687516-.49194433-.41012437l-.00805567-.08987563v-4c0-.27614237.22385763-.5.5-.5.24545989 0 .44960837.17687516.49194433.41012437l.00805567.08987563v2.792l3.6464466-3.64555339c.1952622-.19526215.5118446-.19526215.7071068 0z\" fill=\"inherit\" />\n    </svg>;","export const RECEIVED_USER = 'RECEIVED_USER';\nexport const DEFAULT_STATE_USER = {\n  id: '',\n  username: '',\n  uiLocale: '',\n  isSuperuser: false\n};\nexport default ((state = DEFAULT_STATE_USER, action) => {\n  switch (action.type) {\n    case RECEIVED_USER:\n      {\n        return fromD2ToUserObj(action.value);\n      }\n\n    default:\n      return state;\n  }\n});\n\nfunction fromD2ToUserObj(d2Object) {\n  return {\n    id: d2Object.id,\n    username: d2Object.username,\n    uiLocale: d2Object.settings.keyUiLocale,\n    isSuperuser: d2Object.authorities.has('ALL')\n  };\n} // selectors\n\n\nexport const sGetUserId = state => state.user.id;\nexport const sGetUserUsername = state => state.user.username;\nexport const sGetIsSuperuser = state => state.user.isSuperuser;\nexport const sGetUiLocale = state => state.user.uiLocale;","import { getDimensionById, DIMENSION_ID_PERIOD, DIMENSION_ID_ORGUNIT } from '@dhis2/analytics';\nexport const SET_DIMENSIONS = 'SET_DIMENSIONS';\nexport const DEFAULT_DIMENSIONS = [getDimensionById(DIMENSION_ID_PERIOD), getDimensionById(DIMENSION_ID_ORGUNIT)];\nexport default ((state = DEFAULT_DIMENSIONS, action) => {\n  switch (action.type) {\n    case SET_DIMENSIONS:\n      {\n        return [...DEFAULT_DIMENSIONS, ...action.value];\n      }\n\n    default:\n      return state;\n  }\n});\nexport const sGetDimensions = state => state.dimensions;","import { sGetDimensions } from './dimensions';\nimport { createSelector } from 'reselect';\nexport const CLEAR_ITEM_FILTERS = 'CLEAR_ITEM_FILTERS';\nexport const SET_ITEM_FILTERS = 'SET_ITEM_FILTERS';\nexport const ADD_ITEM_FILTER = 'ADD_ITEM_FILTER';\nexport const REMOVE_ITEM_FILTER = 'REMOVE_ITEM_FILTER';\nexport const DEFAULT_STATE_ITEM_FILTERS = {};\nexport default ((state = DEFAULT_STATE_ITEM_FILTERS, action) => {\n  switch (action.type) {\n    case ADD_ITEM_FILTER:\n      {\n        return { ...state,\n          [action.filter.id]: action.filter.value\n        };\n      }\n\n    case REMOVE_ITEM_FILTER:\n      {\n        const newState = { ...state\n        };\n        delete newState[action.id];\n        return newState;\n      }\n\n    case SET_ITEM_FILTERS:\n      {\n        return action.filters;\n      }\n\n    case CLEAR_ITEM_FILTERS:\n      {\n        return DEFAULT_STATE_ITEM_FILTERS;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetItemFiltersRoot = state => state.itemFilters; // simplify the filters structure to:\n// [{ id: 'pe', name: 'Period', values: [{ id: 2019: name: '2019' }, {id: 'LAST_MONTH', name: 'Last month' }]}, ...]\n\nexport const sGetNamedItemFilters = createSelector([sGetItemFiltersRoot, sGetDimensions], (filters, dimensions) => Object.keys(filters).reduce((arr, id) => {\n  arr.push({\n    id: id,\n    name: dimensions.find(dimension => dimension.id === id).name,\n    values: filters[id].map(value => ({\n      id: value.id,\n      name: value.displayName || value.name\n    }))\n  });\n  return arr;\n}, []));","import { ADD_ITEM_FILTER, REMOVE_ITEM_FILTER, SET_ITEM_FILTERS, CLEAR_ITEM_FILTERS } from '../reducers/itemFilters';\nexport const FILTER_ORG_UNIT = 'ou'; // actions\n\nexport const acAddItemFilter = filter => ({\n  type: ADD_ITEM_FILTER,\n  filter\n});\nexport const acRemoveItemFilter = id => ({\n  type: REMOVE_ITEM_FILTER,\n  id\n});\nexport const acClearItemFilters = () => ({\n  type: CLEAR_ITEM_FILTERS\n});\nexport const acSetItemFilters = filters => ({\n  type: SET_ITEM_FILTERS,\n  filters\n});","import update from 'immutability-helper';\nimport { arrayToIdMap } from '../modules/util';\nexport const RECEIVED_MESSAGES = 'RECEIVED_MESSAGES';\nexport default ((state = {}, action) => {\n  switch (action.type) {\n    case RECEIVED_MESSAGES:\n      {\n        const conversations = arrayToIdMap(action.value);\n        const newState = update(state, {\n          $merge: conversations\n        });\n        return newState;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetMessagesRoot = state => state.messages;","export const messageConversationsQuery = {\n  resource: 'messageConversations',\n  params: {\n    fields: 'id,messageCount,lastUpdated,messageType,displayName,read,messages[id,read,sender[id,displayName],text,lastUpdated]',\n    order: 'read:asc',\n    pageSize: 200\n  }\n};\nexport const getMessages = async dataEngine => {\n  try {\n    const {\n      messageConversations\n    } = await dataEngine.query({\n      messageConversations: messageConversationsQuery\n    });\n    return messageConversations.messageConversations;\n  } catch (error) {\n    console.log('Error:', error);\n  }\n};","import { RECEIVED_MESSAGES } from '../../../reducers/messages';\nimport { getMessages } from '../../../api/messages';\n\nconst onError = (action, error) => {\n  console.log(`Error in action ${action}: ${error}`);\n  return error;\n};\n\nexport const receivedMessages = value => ({\n  type: RECEIVED_MESSAGES,\n  value\n});\nexport const tGetMessages = dataEngine => async dispatch => {\n  try {\n    const messageConversations = await getMessages(dataEngine);\n    return dispatch(receivedMessages(messageConversations));\n  } catch (err) {\n    return onError('Get Messages', err);\n  }\n};","export const SET_ALERT_MESSAGE = 'SET_ALERT_MESSAGE';\nexport const CLEAR_ALERT_MESSAGE = 'CLEAR_ALERT_MESSAGE';\nexport const DEFAULT_STATE_ALERT = null;\nexport default ((state = DEFAULT_STATE_ALERT, action) => {\n  switch (action.type) {\n    case SET_ALERT_MESSAGE:\n      {\n        return action.value;\n      }\n\n    case CLEAR_ALERT_MESSAGE:\n      {\n        return DEFAULT_STATE_ALERT;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetAlertMessage = state => state.alert;","import { SET_ALERT_MESSAGE, CLEAR_ALERT_MESSAGE } from '../reducers/alert';\nexport const acSetAlertMessage = value => ({\n  type: SET_ALERT_MESSAGE,\n  value\n});\nexport const acClearAlertMessage = () => ({\n  type: CLEAR_ALERT_MESSAGE\n});","import { orObject } from '../modules/util';\nimport objectClean from 'd2-utilizr/lib/objectClean';\n/** @module reducers/visualizations */\n\nexport const ADD_VISUALIZATION = 'ADD_VISUALIZATION';\nexport const SET_ACTIVE_VISUALIZATION_TYPE = 'SET_ACTIVE_VISUALIZATION_TYPE';\nexport const CLEAR_VISUALIZATIONS = 'CLEAR_VISUALIZATIONS';\nexport const DEFAULT_STATE_VISUALIZATIONS = {};\n\nconst isEmpty = p => p === undefined || p === null;\n\nexport default ((state = DEFAULT_STATE_VISUALIZATIONS, action) => {\n  switch (action.type) {\n    case ADD_VISUALIZATION:\n      {\n        return { ...state,\n          [action.value.id]: objectClean({ ...orObject(state[action.value.id]),\n            ...action.value\n          }, isEmpty)\n        };\n      }\n\n    case CLEAR_VISUALIZATIONS:\n      {\n        return DEFAULT_STATE_VISUALIZATIONS;\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetVisualizationsRoot = state => state.visualizations; // selectors level 1\n\nexport const sGetVisualization = (state, id) => {\n  return sGetVisualizationsRoot(state)[id];\n};","import { ADD_VISUALIZATION, CLEAR_VISUALIZATIONS } from '../reducers/visualizations';\nexport const acAddVisualization = value => ({\n  type: ADD_VISUALIZATION,\n  value\n});\nexport const acClearVisualizations = () => ({\n  type: CLEAR_VISUALIZATIONS\n});","import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { getEndPointName, MAP } from '../modules/itemTypes';\nimport { getVisualizationId } from '../modules/item'; // Id, name\n\nexport const getIdNameFields = ({\n  rename\n} = {}) => ['id', `${rename ? 'displayName~rename(name)' : 'name,displayName'}`]; // Item\n\nexport const getItemFields = () => ['dimensionItem~rename(id)', 'displayName~rename(name)', 'dimensionItemType']; // Dimension\n\nexport const getDimensionFields = ({\n  withItems\n}) => arrayClean(['dimension', 'legendSet[id]', 'filter', 'programStage', withItems ? `items[${getItemFields().join(',')}]` : ``]); // Axis\n\nexport const getAxesFields = ({\n  withItems\n}) => [`columns[${getDimensionFields({\n  withItems\n}).join(',')}]`, `rows[${getDimensionFields({\n  withItems\n}).join(',')}]`, `filters[${getDimensionFields({\n  withItems\n}).join(',')}]`]; // Favorite\n\nexport const getFavoriteFields = ({\n  withDimensions,\n  withOptions\n}) => {\n  return arrayClean([`${getIdNameFields({\n    rename: true\n  }).join(',')}`, 'displayDescription~rename(description)', withDimensions ? `${getAxesFields({\n    withItems: true\n  }).join(',')}` : ``, withOptions ? ['*', '!attributeDimensions', '!attributeValues', '!category', '!categoryDimensions', '!categoryOptionGroupSetDimensions', '!columnDimensions', '!dataDimensionItems', '!dataElementDimensions', '!dataElementGroupSetDimensions', '!filterDimensions', '!itemOrganisationUnitGroups', '!lastUpdatedBy', '!organisationUnitGroupSetDimensions', '!organisationUnitLevels', '!organisationUnits', '!programIndicatorDimensions', '!relativePeriods', '!reportParams', '!rowDimensions', '!translations', '!userOrganisationUnit', '!userOrganisationUnitChildren', '!userOrganisationUnitGrandChildren'].join(',') : '']);\n};\nexport const getFavoritesFields = ({\n  withDimensions\n}) => [`reportTable[${getFavoriteFields({\n  withDimensions\n}).join(',')}]`, `chart[${['type', ...getFavoriteFields({\n  withDimensions\n})].join(',')}]`, `map[${getFavoriteFields({\n  withDimensions\n}).join(',')}]`, `eventReport[${getFavoriteFields({\n  withDimensions\n}).join(',')}]`, `eventChart[${getFavoriteFields({\n  withDimensions\n}).join(',')}]`]; // List item\n\nexport const getListItemFields = () => [`reports[${['type', ...getIdNameFields({\n  rename: true\n})].join(',')}]`, `resources[${getIdNameFields({\n  rename: true\n}).join(',')}]`, `users[${getIdNameFields({\n  rename: true\n}).join(',')}]`]; // Map\n\nexport const getMapFields = () => [`${getIdNameFields({\n  rename: true\n}).join(',')}`, 'user,longitude,latitude,zoom,basemap', `mapViews[${getFavoriteFields({\n  withDimensions: true,\n  withOptions: true\n})}]`]; // Api\n\nexport const apiFetchVisualization = async item => {\n  const id = getVisualizationId(item);\n  const fields = item.type === MAP ? getMapFields() : getFavoriteFields({\n    withDimensions: true,\n    withOptions: true\n  });\n  const d2 = await getInstance();\n  return await d2.Api.getApi().get(`${getEndPointName(item.type)}/${id}`, {\n    fields\n  });\n};","import arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { getListItemFields, getFavoritesFields, getIdNameFields } from './metadata'; // Helper functions\n\nexport const onError = error => console.log('Error: ', error); // Dashboard item\n\nexport const getDashboardItemsFields = ({\n  withFavorite\n} = {}) => arrayClean(['id', 'type', 'shape', 'x', 'y', 'width~rename(w)', 'height~rename(h)', 'messages', 'text', 'appKey', `${getListItemFields().join(',')}`, withFavorite ? `${getFavoritesFields({\n  withDimensions: withFavorite.withDimensions\n}).join(',')}` : ``]); // Dashboard\n\nexport const getDashboardFields = ({\n  withItems,\n  withFavorite\n} = {}) => arrayClean([`${getIdNameFields().join(',')}`, 'description', 'displayDescription', 'favorite', `user[${getIdNameFields({\n  rename: true\n}).join(',')}]`, 'created', 'lastUpdated', 'access', 'href', // needed for d2-ui-translations-dialog, since we don't pass a d2 Model anymore\nwithItems ? `dashboardItems[${getDashboardItemsFields({\n  withFavorite\n}).join(',')}]` : ``]);","import arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { onError, getDashboardFields } from './index';\nexport const dashboardsQuery = {\n  resource: 'dashboards',\n  params: {\n    fields: [getDashboardFields(), 'dashboardItems[id]'].join(','),\n    paging: false\n  }\n};\nexport const dashboardQuery = {\n  resource: 'dashboards',\n  id: ({\n    id\n  }) => id,\n  params: {\n    fields: arrayClean(getDashboardFields({\n      withItems: true,\n      withFavorite: {\n        withDimensions: false\n      }\n    })).join(',')\n  }\n};\nexport const starDashboardMutation = {\n  type: 'create',\n  resource: 'dashboards',\n  // TODO create mutation does not accept the id function\n  // we must use a workaround until dataEngine supports dynamic resource/path\n  id: ({\n    id\n  }) => `${id}/favorite`\n};\nexport const unstarDashboardMutation = {\n  type: 'delete',\n  resource: 'dashboards',\n  id: ({\n    id\n  }) => `${id}/favorite`\n};\nexport const deleteDashboardMutation = {\n  type: 'delete',\n  resource: 'dashboards',\n  id: ({\n    id\n  }) => id\n}; // Get \"all\" dashboards on startup\n\nexport const apiFetchDashboards = async dataEngine => {\n  try {\n    const dashboardsData = await dataEngine.query({\n      dashboards: dashboardsQuery\n    });\n    return dashboardsData.dashboards.dashboards;\n  } catch (error) {\n    onError(error);\n  }\n}; // Get more info about selected dashboard\n\nexport const apiFetchDashboard = async (dataEngine, id) => {\n  try {\n    const dashboardData = await dataEngine.query({\n      dashboard: dashboardQuery\n    }, {\n      variables: {\n        id\n      }\n    });\n    return dashboardData.dashboard;\n  } catch (error) {\n    onError(error);\n  }\n}; // Star dashboard\n\nexport const apiStarDashboard = async (dataEngine, id, isStarred) => {\n  try {\n    if (isStarred) {\n      await dataEngine.mutate(starDashboardMutation, {\n        variables: {\n          id\n        }\n      });\n    } else {\n      await dataEngine.mutate(unstarDashboardMutation, {\n        variables: {\n          id\n        }\n      });\n    }\n  } catch (error) {\n    onError(error);\n  }\n};\nexport const apiDeleteDashboard = async (dataEngine, id) => {\n  try {\n    await dataEngine.mutate(deleteDashboardMutation, {\n      variables: {\n        id\n      }\n    });\n  } catch (error) {\n    onError(error);\n  }\n};","import { apiGetUserDataStoreValue, apiPostUserDataStoreValue } from './userDataStore';\nimport { DEFAULT_STATE_SELECTED_SHOWDESCRIPTION } from '../reducers/selected';\nconst KEY_SHOW_DESCRIPTION = 'showDescription';\nexport const apiGetShowDescription = async () => await apiGetUserDataStoreValue(KEY_SHOW_DESCRIPTION, DEFAULT_STATE_SELECTED_SHOWDESCRIPTION);\nexport const apiPostShowDescription = async (value) => await apiPostUserDataStoreValue(KEY_SHOW_DESCRIPTION, value);","import i18n from '@dhis2/d2-i18n';\nimport { getCustomDashboards, sGetDashboardById } from '../reducers/dashboards';\nimport { SET_SELECTED_ID, SET_SELECTED_ISLOADING, SET_SELECTED_SHOWDESCRIPTION, SET_SELECTED_ITEM_ACTIVE_TYPE, CLEAR_SELECTED_ITEM_ACTIVE_TYPES, sGetSelectedIsLoading, sGetSelectedId } from '../reducers/selected';\nimport { sGetUserUsername } from '../reducers/user';\nimport { acSetDashboardItems, acAppendDashboards } from './dashboards';\nimport { acClearItemFilters } from './itemFilters';\nimport { tGetMessages } from '../components/Item/MessagesItem/actions';\nimport { acSetAlertMessage, acClearAlertMessage } from './alert';\nimport { acAddVisualization, acClearVisualizations } from './visualizations';\nimport { apiFetchDashboard } from '../api/dashboards';\nimport { storePreferredDashboardId } from '../api/localStorage';\nimport { apiGetShowDescription, apiPostShowDescription } from '../api/description';\nimport { withShape } from '../components/ItemGrid/gridUtil';\nimport { getVisualizationFromItem } from '../modules/item';\nimport { REPORT_TABLE, CHART, MAP, EVENT_REPORT, EVENT_CHART, MESSAGES } from '../modules/itemTypes'; // actions\n\nexport const acSetSelectedId = value => ({\n  type: SET_SELECTED_ID,\n  value\n});\nexport const acSetSelectedIsLoading = value => ({\n  type: SET_SELECTED_ISLOADING,\n  value\n});\nexport const acSetSelectedShowDescription = value => ({\n  type: SET_SELECTED_SHOWDESCRIPTION,\n  value\n});\nexport const acSetSelectedItemActiveType = (id, activeType) => {\n  const action = {\n    type: SET_SELECTED_ITEM_ACTIVE_TYPE,\n    id,\n    activeType\n  };\n  return action;\n};\nexport const acClearSelectedItemActiveTypes = () => ({\n  type: CLEAR_SELECTED_ITEM_ACTIVE_TYPES\n}); // thunks\n\nexport const tSetSelectedDashboardById = id => async (dispatch, getState, dataEngine) => {\n  dispatch(acSetSelectedIsLoading(true));\n  const alertTimeout = setTimeout(() => {\n    const name = sGetDashboardById(getState(), id)?.displayName;\n\n    if (sGetSelectedIsLoading(getState()) && name) {\n      dispatch(acSetAlertMessage(i18n.t('Loading dashboard – {{name}}', {\n        name\n      })));\n    }\n  }, 500);\n\n  const onSuccess = selected => {\n    dispatch(acAppendDashboards(selected));\n    const customDashboard = getCustomDashboards(selected)[0];\n    dispatch(acSetDashboardItems(withShape(customDashboard.dashboardItems)));\n    storePreferredDashboardId(sGetUserUsername(getState()), id);\n\n    if (id !== sGetSelectedId(getState())) {\n      dispatch(acClearItemFilters());\n      dispatch(acClearVisualizations());\n      dispatch(acClearSelectedItemActiveTypes());\n    }\n\n    customDashboard.dashboardItems.forEach(item => {\n      switch (item.type) {\n        case REPORT_TABLE:\n        case CHART:\n        case MAP:\n        case EVENT_REPORT:\n        case EVENT_CHART:\n          dispatch(acAddVisualization(getVisualizationFromItem(item)));\n          break;\n\n        case MESSAGES:\n          dispatch(tGetMessages(dataEngine));\n          break;\n\n        default:\n          break;\n      }\n    });\n    dispatch(acSetSelectedId(id));\n    dispatch(acSetSelectedIsLoading(false));\n    clearTimeout(alertTimeout);\n    dispatch(acClearAlertMessage());\n    return selected;\n  };\n\n  const onError = error => {\n    console.log('Error: ', error);\n    return error;\n  };\n\n  try {\n    const dashboard = await apiFetchDashboard(dataEngine, id);\n    return onSuccess(dashboard);\n  } catch (err) {\n    return onError(err);\n  }\n};\nexport const tSetShowDescription = () => async dispatch => {\n  const onSuccess = value => {\n    dispatch(acSetSelectedShowDescription(value));\n  };\n\n  const onError = error => {\n    console.log('Error (apiGetShowDescription): ', error);\n    return error;\n  };\n\n  try {\n    const showDescription = await apiGetShowDescription();\n    return onSuccess(showDescription);\n  } catch (err) {\n    return onError(err);\n  }\n};\nexport const tUpdateShowDescription = value => async dispatch => {\n  const onSuccess = () => {\n    dispatch(acSetSelectedShowDescription(value));\n  };\n\n  const onError = error => {\n    console.log('Error (apiGetShowDescription): ', error);\n    return error;\n  };\n\n  try {\n    await apiPostShowDescription(value);\n    return onSuccess();\n  } catch (err) {\n    return onError(err);\n  }\n};","export const getPreferredDashboardId = username => localStorage.getItem(`dhis2.dashboard.current.${username}`) || undefined;\nexport const storePreferredDashboardId = (username, dashboardId) => {\n  localStorage.setItem(`dhis2.dashboard.current.${username}`, dashboardId);\n};","import { SET_DASHBOARDS, ADD_DASHBOARDS, SET_DASHBOARD_STARRED, SET_DASHBOARD_DISPLAY_NAME, SET_DASHBOARD_ITEMS } from '../reducers/dashboards';\nimport { getCustomDashboards, sGetDashboardById, sGetDashboardsSortedByStarred } from '../reducers/dashboards';\nimport { NON_EXISTING_DASHBOARD_ID } from '../reducers/selected';\nimport { sGetUserUsername } from '../reducers/user';\nimport { tSetSelectedDashboardById, acSetSelectedId } from './selected';\nimport { apiFetchDashboards, apiStarDashboard, apiDeleteDashboard } from '../api/dashboards';\nimport { getPreferredDashboardId } from '../api/localStorage';\nimport { arrayToIdMap } from '../modules/util'; // actions\n\nexport const acSetDashboards = dashboards => ({\n  type: SET_DASHBOARDS,\n  value: arrayToIdMap(getCustomDashboards(dashboards))\n});\nexport const acAppendDashboards = dashboards => ({\n  type: ADD_DASHBOARDS,\n  value: arrayToIdMap(getCustomDashboards(dashboards))\n});\nexport const acSetDashboardStarred = (dashboardId, isStarred) => ({\n  type: SET_DASHBOARD_STARRED,\n  dashboardId: dashboardId,\n  value: isStarred\n});\nexport const acSetDashboardDisplayName = (dashboardId, value) => ({\n  type: SET_DASHBOARD_DISPLAY_NAME,\n  dashboardId,\n  value\n});\nexport const acSetDashboardItems = value => ({\n  type: SET_DASHBOARD_ITEMS,\n  value\n}); // thunks\n\nexport const tFetchDashboards = () => async (dispatch, getState, dataEngine) => {\n  const dashboards = await apiFetchDashboards(dataEngine);\n  dispatch(acSetDashboards(dashboards));\n};\nexport const tSelectDashboard = id => async (dispatch, getState) => {\n  const onError = error => {\n    console.log('Error (apiFetchDashboards): ', error);\n    return error;\n  };\n\n  try {\n    const state = getState();\n    let dashboardToSelect = null;\n\n    if (id) {\n      dashboardToSelect = sGetDashboardById(state, id) || null;\n    } else {\n      const preferredId = getPreferredDashboardId(sGetUserUsername(state));\n      const dash = sGetDashboardById(state, preferredId);\n      dashboardToSelect = preferredId && dash ? dash : sGetDashboardsSortedByStarred(state)[0];\n    }\n\n    if (dashboardToSelect) {\n      dispatch(tSetSelectedDashboardById(dashboardToSelect.id));\n    } else {\n      dispatch(acSetSelectedId(NON_EXISTING_DASHBOARD_ID));\n    }\n  } catch (err) {\n    return onError(err);\n  }\n};\nexport const tStarDashboard = (id, isStarred) => async (dispatch, getState, dataEngine) => {\n  const onSuccess = id => {\n    dispatch(acSetDashboardStarred(id, isStarred));\n    return id;\n  };\n\n  const onError = error => {\n    console.log('Error (apiStarDashboard): ', error);\n    return error;\n  };\n\n  try {\n    await apiStarDashboard(dataEngine, id, isStarred);\n    return onSuccess(id);\n  } catch (err) {\n    return onError(err);\n  }\n};\nexport const tDeleteDashboard = id => async (dispatch, getState, dataEngine) => {\n  try {\n    await apiDeleteDashboard(dataEngine, id);\n    await dispatch(tFetchDashboards());\n    return Promise.resolve();\n  } catch (err) {\n    console.log('Error (deleteDashboard): ', err);\n    return err;\n  }\n};","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { Button, Modal, ModalTitle, ModalContent, ModalActions, ButtonStrip } from '@dhis2/ui';\nimport { PeriodDimension, DynamicDimension, OrgUnitDimension, DIMENSION_ID_PERIOD, DIMENSION_ID_ORGUNIT } from '@dhis2/analytics';\nimport { acAddItemFilter, acRemoveItemFilter } from '../../actions/itemFilters';\nimport { sGetItemFiltersRoot } from '../../reducers/itemFilters';\n\nconst FilterDialog = ({\n  displayNameProperty,\n  dimension,\n  initiallySelectedItems,\n  addItemFilter,\n  removeItemFilter,\n  onClose\n}, context) => {\n  const [filters, setFilters] = useState(initiallySelectedItems);\n\n  const onSelectItems = ({\n    dimensionId,\n    items\n  }) => {\n    setFilters({\n      [dimensionId]: items\n    });\n  };\n\n  const onDeselectItems = ({\n    dimensionId,\n    itemIdsToRemove\n  }) => {\n    const oldList = filters[dimensionId] || [];\n    const newList = oldList.filter(item => !itemIdsToRemove.includes(item.id));\n    setFilters({ ...filters,\n      [dimensionId]: newList\n    });\n  };\n\n  const onReorderItems = ({\n    dimensionId,\n    itemIds\n  }) => {\n    const oldList = filters[dimensionId] || [];\n    const reorderedList = itemIds.map(id => oldList.find(item => item.id === id));\n    setFilters({ ...filters,\n      [dimensionId]: reorderedList\n    });\n  };\n\n  const saveFilter = () => {\n    const id = dimension.id;\n    const filterItems = filters[id];\n\n    if (filterItems && filterItems.length) {\n      addItemFilter({\n        id,\n        value: [...filterItems]\n      });\n    } else {\n      removeItemFilter(id);\n    }\n\n    onClose(id);\n  };\n\n  const renderDialogContent = () => {\n    const commonProps = {\n      d2: context.d2,\n      onSelect: onSelectItems,\n      onDeselect: onDeselectItems,\n      onReorder: onReorderItems\n    };\n    const selectedItems = filters[dimension.id] || [];\n\n    switch (dimension.id) {\n      case DIMENSION_ID_PERIOD:\n        {\n          return <PeriodDimension selectedPeriods={selectedItems} onSelect={commonProps.onSelect} />;\n        }\n\n      case DIMENSION_ID_ORGUNIT:\n        return <OrgUnitDimension displayNameProperty={displayNameProperty} ouItems={selectedItems} {...commonProps} />;\n\n      default:\n        return <DynamicDimension selectedItems={selectedItems} dimensionId={dimension.id} onSelect={commonProps.onSelect} />;\n    }\n  };\n\n  return <>\n            {dimension.id && <Modal dataTest={`${dimension.id}-dimension-modal`} onClose={onClose} position=\"top\" large>\n                    <ModalTitle>{dimension.name}</ModalTitle>\n                    <ModalContent>{renderDialogContent()}</ModalContent>\n                    <ModalActions>\n                        <ButtonStrip>\n                            <Button secondary onClick={onClose}>\n                                {i18n.t('Cancel')}\n                            </Button>\n                            <Button primary onClick={saveFilter}>\n                                {i18n.t('Confirm')}\n                            </Button>\n                        </ButtonStrip>\n                    </ModalActions>\n                </Modal>}\n        </>;\n};\n\nFilterDialog.propTypes = {\n  addItemFilter: PropTypes.func,\n  dimension: PropTypes.object,\n  displayNameProperty: PropTypes.string,\n  initiallySelectedItems: PropTypes.object,\n  removeItemFilter: PropTypes.func,\n  onClose: PropTypes.func\n};\nFilterDialog.contextTypes = {\n  d2: PropTypes.object\n};\n\nconst mapStateToProps = state => ({\n  initiallySelectedItems: sGetItemFiltersRoot(state)\n});\n\nexport default connect(mapStateToProps, {\n  addItemFilter: acAddItemFilter,\n  removeItemFilter: acRemoveItemFilter\n})(FilterDialog);","export const SET_SETTINGS = 'SET_SETTINGS';\nexport const ADD_SETTINGS = 'ADD_SETTINGS';\nexport const DEFAULT_SETTINGS = {\n  keyDateFormat: 'yyyy-MM-dd',\n  keyAnalysisRelativePeriod: 'LAST_12_MONTHS',\n  keyAnalysisDigitGroupSeparator: 'SPACE',\n  displayNameProperty: 'displayName',\n  uiLocale: 'en',\n  rootOrganisationUnit: {},\n  keyGatherAnalyticalObjectStatisticsInDashboardViews: false\n};\nexport default ((state = DEFAULT_SETTINGS, action) => {\n  switch (action.type) {\n    case SET_SETTINGS:\n      {\n        return Object.assign({}, action.value);\n      }\n\n    case ADD_SETTINGS:\n      {\n        return { ...state,\n          ...action.value\n        };\n      }\n\n    default:\n      return state;\n  }\n}); // Selectors\n\nexport const sGetSettings = state => state.settings;\nexport const sGetSettingsDisplayNameProperty = state => sGetSettings(state).displayNameProperty;\nexport const sGetRootOrgUnit = state => sGetSettings(state).rootOrganisationUnit;\nexport const sGetRelativePeriod = state => sGetSettings(state).keyAnalysisRelativePeriod;\nexport const sGetUiLocale = state => sGetSettings(state).uiLocale;\nexport const sGatherAnalyticalObjectStatisticsInDashboardViews = state => sGetSettings(state).keyGatherAnalyticalObjectStatisticsInDashboardViews;","export const SET_ACTIVE_MODAL_DIMENSION = 'SET_ACTIVE_MODAL_DIMENSION';\nexport const CLEAR_ACTIVE_MODAL_DIMENSION = 'CLEAR_ACTIVE_MODAL_DIMENSION';\nexport const DEFAULT_STATE_ACTIVE_MODAL_DIMENSION = {};\nexport default ((state = DEFAULT_STATE_ACTIVE_MODAL_DIMENSION, action) => {\n  switch (action.type) {\n    case SET_ACTIVE_MODAL_DIMENSION:\n      {\n        return action.value;\n      }\n\n    case CLEAR_ACTIVE_MODAL_DIMENSION:\n      {\n        return DEFAULT_STATE_ACTIVE_MODAL_DIMENSION;\n      }\n\n    default:\n      return state;\n  }\n});\nexport const sGetActiveModalDimension = state => state.activeModalDimension;","import { SET_ACTIVE_MODAL_DIMENSION, CLEAR_ACTIVE_MODAL_DIMENSION } from '../reducers/activeModalDimension';\nexport const acSetActiveModalDimension = value => ({\n  type: SET_ACTIVE_MODAL_DIMENSION,\n  value\n});\nexport const acClearActiveModalDimension = () => ({\n  type: CLEAR_ACTIVE_MODAL_DIMENSION\n});","import React, { useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport isEmpty from 'lodash/isEmpty';\nimport i18n from '@dhis2/d2-i18n';\nimport { DimensionsPanel } from '@dhis2/analytics';\nimport { Button, Popover } from '@dhis2/ui';\nimport FilterDialog from './FilterDialog';\nimport { sGetSettingsDisplayNameProperty } from '../../reducers/settings';\nimport { sGetActiveModalDimension } from '../../reducers/activeModalDimension';\nimport { sGetDimensions } from '../../reducers/dimensions';\nimport { sGetItemFiltersRoot } from '../../reducers/itemFilters';\nimport { acClearActiveModalDimension, acSetActiveModalDimension } from '../../actions/activeModalDimension';\nimport classes from './styles/FilterSelector.module.css';\n\nconst FilterSelector = props => {\n  const [showPopover, setShowPopover] = useState(false);\n  const ref = useRef(null);\n\n  const onCloseDialog = () => {\n    setShowPopover(false);\n    props.clearActiveModalDimension();\n  };\n\n  const selectDimension = id => {\n    props.setActiveModalDimension(props.dimensions.find(dimension => dimension.id === id));\n  };\n\n  return <>\n            <span className={classes.buttonContainer} ref={ref}>\n                <Button onClick={() => setShowPopover(true)}>\n                    {i18n.t('Add filter')}\n                    <ArrowDropDownIcon />\n                </Button>\n            </span>\n            {showPopover && <Popover onClickOutside={onCloseDialog} reference={ref} arrow={true} placement=\"bottom-start\" dataTest=\"dashboard-filter-popover\">\n                    <DimensionsPanel style={{\n        width: '320px'\n      }} dimensions={props.dimensions} onDimensionClick={selectDimension} selectedIds={Object.keys(props.initiallySelectedItems)} />\n                </Popover>}\n            {!isEmpty(props.dimension) ? <FilterDialog displayNameProperty={props.displayNameProperty} dimension={props.dimension} onClose={onCloseDialog} /> : null}\n        </>;\n};\n\nconst mapStateToProps = state => ({\n  displayNameProperty: sGetSettingsDisplayNameProperty(state),\n  dimension: sGetActiveModalDimension(state),\n  dimensions: sGetDimensions(state),\n  initiallySelectedItems: sGetItemFiltersRoot(state)\n});\n\nFilterSelector.propTypes = {\n  clearActiveModalDimension: PropTypes.func,\n  dimension: PropTypes.object,\n  dimensions: PropTypes.array,\n  displayNameProperty: PropTypes.string,\n  initiallySelectedItems: PropTypes.object,\n  setActiveModalDimension: PropTypes.func\n};\nexport default connect(mapStateToProps, {\n  clearActiveModalDimension: acClearActiveModalDimension,\n  setActiveModalDimension: acSetActiveModalDimension\n})(FilterSelector);","import React, { useState, createRef } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { Link, Redirect } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport SharingDialog from '@dhis2/d2-ui-sharing-dialog';\nimport Star from '@material-ui/icons/Star';\nimport StarBorder from '@material-ui/icons/StarBorder';\nimport { Button, FlyoutMenu, Popover, MenuItem, colors } from '@dhis2/ui';\nimport { useWindowDimensions } from '../WindowDimensionsProvider';\nimport { ThreeDots } from '../Item/VisualizationItem/assets/icons';\nimport { orObject } from '../../modules/util';\nimport { tStarDashboard } from '../../actions/dashboards';\nimport { tUpdateShowDescription } from '../../actions/selected';\nimport FilterSelector from '../ItemFilter/FilterSelector';\nimport { sGetSelectedId, sGetSelectedShowDescription } from '../../reducers/selected';\nimport { sGetDashboardById, sGetDashboardItems, EMPTY_DASHBOARD } from '../../reducers/dashboards';\nimport isSmallScreen from '../../modules/isSmallScreen';\nimport classes from './styles/ViewTitleBar.module.css';\n\nconst ViewTitleBar = (props, context) => {\n  const [moreOptionsIsOpen, setMoreOptionsIsOpen] = useState(false);\n  const [sharingDialogIsOpen, setSharingDialogIsOpen] = useState(false);\n  const [redirectUrl, setRedirectUrl] = useState(null);\n  const {\n    width\n  } = useWindowDimensions();\n  const {\n    id,\n    name,\n    description,\n    access,\n    showDescription,\n    starred,\n    onToggleStarredDashboard,\n    onShowHideDescription\n  } = props;\n\n  const toggleSharingDialog = () => setSharingDialogIsOpen(!sharingDialogIsOpen);\n\n  const toggleMoreOptions = () => setMoreOptionsIsOpen(!moreOptionsIsOpen);\n\n  const printLayout = () => setRedirectUrl(`${id}/printlayout`);\n\n  const printOipp = () => setRedirectUrl(`${id}/printoipp`);\n\n  const StarIcon = starred ? Star : StarBorder;\n\n  if (redirectUrl) {\n    return <Redirect to={redirectUrl} />;\n  }\n\n  const showHideDescriptionLabel = showDescription ? i18n.t('Hide description') : i18n.t('Show description');\n\n  const showHideDescription = () => {\n    onShowHideDescription();\n    toggleMoreOptions();\n  };\n\n  const toggleStarredDashboardLabel = starred ? i18n.t('Unstar dashboard') : i18n.t('Star dashboard');\n\n  const toggleStarredDashboard = () => {\n    // TODO use dataQuery directly here with create/delete mutations ?!\n    onToggleStarredDashboard();\n    toggleMoreOptions();\n  };\n\n  const buttonRef = createRef();\n  const userAccess = orObject(access);\n  const descriptionClasses = cx(classes.descContainer, description ? classes.desc : classes.noDesc);\n  return <>\n            <div className={classes.container}>\n                <div className={classes.titleBar}>\n                    <span className={classes.title} data-test=\"view-dashboard-title\">\n                        {name}\n                    </span>\n                    <div className={classes.actions}>\n                        <div className={classes.titleBarIcon} onClick={onToggleStarredDashboard}>\n                            <StarIcon style={{\n              fill: colors.grey600\n            }} />\n                        </div>\n                        <div className={classes.strip}>\n                            {userAccess.update ? <Link className={classes.editLink} to={`/${id}/edit`} data-test=\"link-edit-dashboard\">\n                                    <Button>{i18n.t('Edit')}</Button>\n                                </Link> : null}\n                            {userAccess.manage ? <Button className={classes.shareButton} onClick={toggleSharingDialog}>\n                                    {i18n.t('Share')}\n                                </Button> : null}\n                            <FilterSelector />\n                            <span ref={buttonRef}>\n                                <Button small={isSmallScreen(width)} dataTest=\"more-button\" onClick={toggleMoreOptions}>\n                                    <ThreeDots />\n                                    <span className={classes.moreButton}>\n                                        {i18n.t('More')}\n                                    </span>\n                                </Button>\n                            </span>\n                        </div>\n                        {moreOptionsIsOpen && <Popover reference={buttonRef} placement=\"bottom-start\" onClickOutside={toggleMoreOptions}>\n                                <FlyoutMenu>\n                                    <MenuItem dense label={toggleStarredDashboardLabel} onClick={toggleStarredDashboard} />\n                                    <MenuItem dense label={showHideDescriptionLabel} onClick={showHideDescription} />\n                                    <MenuItem dense label={i18n.t('Print')} dataTest=\"print-menu-item\">\n                                        <MenuItem dense label={i18n.t('Dashboard layout')} onClick={printLayout} dataTest=\"print-layout-menu-item\" />\n                                        <MenuItem dense label={i18n.t('One item per page')} onClick={printOipp} dataTest=\"print-oipp-menu-item\" />\n                                    </MenuItem>\n                                </FlyoutMenu>\n                            </Popover>}\n                    </div>\n                </div>\n                {showDescription && <div className={descriptionClasses}>\n                        {description || i18n.t('No description')}\n                    </div>}\n            </div>\n            {id && <SharingDialog d2={context.d2} id={id} type=\"dashboard\" open={sharingDialogIsOpen} onRequestClose={toggleSharingDialog} />}\n        </>;\n};\n\nViewTitleBar.propTypes = {\n  access: PropTypes.object,\n  description: PropTypes.string,\n  id: PropTypes.string,\n  name: PropTypes.string,\n  showDescription: PropTypes.bool,\n  starred: PropTypes.bool,\n  onShowHideDescription: PropTypes.func,\n  onToggleStarredDashboard: PropTypes.func\n};\nViewTitleBar.defaultProps = {\n  name: '',\n  description: '',\n  starred: false,\n  showDescription: false\n};\nViewTitleBar.contextTypes = {\n  d2: PropTypes.object\n};\n\nconst mapStateToProps = state => {\n  const id = sGetSelectedId(state);\n  const dashboard = sGetDashboardById(state, id) || EMPTY_DASHBOARD;\n  return {\n    id,\n    name: dashboard.displayName,\n    description: dashboard.displayDescription,\n    dashboardItems: sGetDashboardItems(state),\n    showDescription: sGetSelectedShowDescription(state),\n    starred: dashboard.starred,\n    access: dashboard.access\n  };\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n  const {\n    id,\n    starred,\n    showDescription\n  } = stateProps;\n  const {\n    dispatch\n  } = dispatchProps;\n  return { ...stateProps,\n    ...ownProps,\n    onToggleStarredDashboard: () => dispatch(tStarDashboard(id, !starred)),\n    onShowHideDescription: () => dispatch(tUpdateShowDescription(!showDescription))\n  };\n};\n\nexport default connect(mapStateToProps, null, mergeProps)(ViewTitleBar);","/** @module reducers/editDashboard */\nimport update from 'immutability-helper';\nimport isEmpty from 'lodash/isEmpty';\nimport { orArray, orObject } from '../modules/util';\nexport const RECEIVED_EDIT_DASHBOARD = 'RECEIVED_EDIT_DASHBOARD';\nexport const RECEIVED_NOT_EDITING = 'RECEIVED_NOT_EDITING';\nexport const START_NEW_DASHBOARD = 'START_NEW_DASHBOARD';\nexport const RECEIVED_TITLE = 'RECEIVED_TITLE';\nexport const RECEIVED_DESCRIPTION = 'RECEIVED_DESCRIPTION';\nexport const ADD_DASHBOARD_ITEM = 'ADD_DASHBOARD_ITEM';\nexport const REMOVE_DASHBOARD_ITEM = 'REMOVE_DASHBOARD_ITEM';\nexport const UPDATE_DASHBOARD_ITEM = 'UPDATE_DASHBOARD_ITEM';\nexport const RECEIVED_DASHBOARD_LAYOUT = 'RECEIVED_DASHBOARD_LAYOUT';\nexport const SET_PRINT_PREVIEW_VIEW = 'SET_PRINT_PREVIEW_VIEW';\nexport const CLEAR_PRINT_PREVIEW_VIEW = 'CLEAR_PRINT_PREVIEW_VIEW';\nexport const DEFAULT_STATE_EDIT_DASHBOARD = {};\nexport const NEW_DASHBOARD_STATE = {\n  id: '',\n  name: '',\n  access: {},\n  description: '',\n  dashboardItems: [],\n  printPreviewView: false\n};\nexport default ((state = DEFAULT_STATE_EDIT_DASHBOARD, action) => {\n  switch (action.type) {\n    case RECEIVED_EDIT_DASHBOARD:\n      {\n        const newState = {};\n        Object.keys(NEW_DASHBOARD_STATE).map(k => newState[k] = action.value[k]);\n        newState.printPreviewView = false;\n        return newState;\n      }\n\n    case RECEIVED_NOT_EDITING:\n      return DEFAULT_STATE_EDIT_DASHBOARD;\n\n    case SET_PRINT_PREVIEW_VIEW:\n      return Object.assign({}, state, {\n        printPreviewView: true\n      });\n\n    case CLEAR_PRINT_PREVIEW_VIEW:\n      return Object.assign({}, state, {\n        printPreviewView: false\n      });\n\n    case START_NEW_DASHBOARD:\n      return NEW_DASHBOARD_STATE;\n\n    case RECEIVED_TITLE:\n      {\n        return Object.assign({}, state, {\n          name: action.value\n        });\n      }\n\n    case RECEIVED_DESCRIPTION:\n      {\n        return Object.assign({}, state, {\n          description: action.value\n        });\n      }\n\n    case ADD_DASHBOARD_ITEM:\n      if (!action.value.position) {\n        return update(state, {\n          dashboardItems: {\n            $unshift: [action.value]\n          }\n        });\n      }\n\n      return update(state, {\n        dashboardItems: {\n          $splice: [[parseInt(action.value.position), 0, action.value]]\n        }\n      });\n\n    case REMOVE_DASHBOARD_ITEM:\n      {\n        const idToRemove = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === idToRemove);\n\n        if (dashboardItemIndex > -1) {\n          return update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1]]\n            }\n          });\n        }\n\n        return state;\n      }\n\n    case RECEIVED_DASHBOARD_LAYOUT:\n      {\n        const stateItems = orArray(state.dashboardItems);\n        let layoutHasChanged = false;\n        const newStateItems = action.value.map(({\n          x,\n          y,\n          w,\n          h,\n          i\n        }) => {\n          const stateItem = stateItems.find(si => si.id === i);\n\n          if (!(stateItem.x === x && stateItem.y === y && stateItem.w === w && stateItem.h === h)) {\n            layoutHasChanged = true;\n            return Object.assign({}, stateItem, {\n              w,\n              h,\n              x,\n              y\n            });\n          }\n\n          return stateItem;\n        });\n        return layoutHasChanged ? { ...state,\n          dashboardItems: newStateItems\n        } : state;\n      }\n\n    case UPDATE_DASHBOARD_ITEM:\n      {\n        const dashboardItem = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === dashboardItem.id);\n\n        if (dashboardItemIndex > -1) {\n          const newState = update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1, Object.assign({}, dashboardItem)]]\n            }\n          });\n          return newState;\n        }\n\n        return state;\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetEditDashboardRoot = state => state.editDashboard; // selectors\n\nexport const sGetIsEditing = state => !isEmpty(state.editDashboard);\nexport const sGetIsPrintPreviewView = state => sGetEditDashboardRoot(state).printPreviewView;\nexport const sGetIsNewDashboard = state => {\n  return !isEmpty(state.editDashboard) && sGetEditDashboardRoot(state).id === '';\n};\nexport const sGetEditDashboardName = state => sGetEditDashboardRoot(state).name;\nexport const sGetEditDashboardDescription = state => sGetEditDashboardRoot(state).description;\nexport const sGetEditDashboardItems = state => orObject(sGetEditDashboardRoot(state)).dashboardItems;","import { apiFetchDashboard } from './dashboards';\n\nconst onError = error => console.log('Error: ', error);\n\nexport const createDashboardMutation = {\n  resource: 'dashboards',\n  type: 'create',\n  data: ({\n    data\n  }) => data\n};\nexport const updateDashboardMutation = {\n  resource: 'dashboards',\n  type: 'update',\n  id: ({\n    id\n  }) => id,\n  data: ({\n    data\n  }) => data\n};\n\nconst generatePayload = (dashboard = {}, data) => {\n  return { ...dashboard,\n    name: data.name,\n    description: data.description,\n    dashboardItems: data.dashboardItems.map(item => ({ ...item,\n      width: item.w,\n      height: item.h\n    }))\n  };\n};\n\nexport const updateDashboard = async (dataEngine, data) => {\n  try {\n    const dashboard = await apiFetchDashboard(dataEngine, data.id);\n    const {\n      response\n    } = await dataEngine.mutate(updateDashboardMutation, {\n      variables: {\n        id: data.id,\n        data: generatePayload(dashboard, data)\n      }\n    });\n    return response.uid;\n  } catch (error) {\n    onError(error);\n  }\n};\nexport const postDashboard = async (dataEngine, data) => {\n  try {\n    const {\n      response\n    } = await dataEngine.mutate(createDashboardMutation, {\n      variables: {\n        data: generatePayload({}, data)\n      }\n    });\n    return response.uid;\n  } catch (error) {\n    onError(error);\n  }\n};","import { generateUid } from 'd2/uid';\nimport i18n from '@dhis2/d2-i18n';\nimport { RECEIVED_EDIT_DASHBOARD, START_NEW_DASHBOARD, RECEIVED_NOT_EDITING, RECEIVED_TITLE, RECEIVED_DESCRIPTION, RECEIVED_DASHBOARD_LAYOUT, ADD_DASHBOARD_ITEM, UPDATE_DASHBOARD_ITEM, REMOVE_DASHBOARD_ITEM, SET_PRINT_PREVIEW_VIEW, CLEAR_PRINT_PREVIEW_VIEW } from '../reducers/editDashboard';\nimport { sGetEditDashboardRoot } from '../reducers/editDashboard';\nimport { updateDashboard, postDashboard } from '../api/editDashboard';\nimport { tSetSelectedDashboardById } from '../actions/selected';\nimport { NEW_ITEM_SHAPE, getGridItemProperties, getPageBreakItemShape, getPrintTitlePageItemShape } from '../components/ItemGrid/gridUtil';\nimport { itemTypeMap, PAGEBREAK, PRINT_TITLE_PAGE } from '../modules/itemTypes';\nimport { convertUiItemsToBackend } from '../modules/uiBackendItemConverter';\n\nconst onError = error => {\n  console.log('Error (Saving Dashboard): ', error);\n  return error;\n}; // actions\n\n\nexport const acSetEditDashboard = (dashboard, items) => {\n  const val = { ...dashboard,\n    dashboardItems: items\n  };\n  return {\n    type: RECEIVED_EDIT_DASHBOARD,\n    value: val\n  };\n};\nexport const acSetEditNewDashboard = () => ({\n  type: START_NEW_DASHBOARD\n});\nexport const acClearEditDashboard = () => ({\n  type: RECEIVED_NOT_EDITING\n});\nexport const acSetPrintPreviewView = () => ({\n  type: SET_PRINT_PREVIEW_VIEW\n});\nexport const acClearPrintPreviewView = () => ({\n  type: CLEAR_PRINT_PREVIEW_VIEW\n});\nexport const acSetDashboardTitle = value => ({\n  type: RECEIVED_TITLE,\n  value\n});\nexport const acSetDashboardDescription = value => ({\n  type: RECEIVED_DESCRIPTION,\n  value\n});\nexport const acUpdateDashboardLayout = value => ({\n  type: RECEIVED_DASHBOARD_LAYOUT,\n  value\n});\nexport const acAddDashboardItem = item => {\n  const type = item.type;\n  delete item.type;\n  const itemPropName = itemTypeMap[type].propName;\n  const id = generateUid();\n  const gridItemProperties = getGridItemProperties(id);\n  let shape;\n\n  if (type === PAGEBREAK) {\n    const yPos = item.yPos || 0;\n    shape = getPageBreakItemShape(yPos, item.isStatic);\n  } else if (type === PRINT_TITLE_PAGE) {\n    shape = getPrintTitlePageItemShape();\n  } else {\n    shape = NEW_ITEM_SHAPE;\n  }\n\n  return {\n    type: ADD_DASHBOARD_ITEM,\n    value: {\n      id,\n      type,\n      position: item.position || null,\n      [itemPropName]: item.content,\n      ...NEW_ITEM_SHAPE,\n      ...gridItemProperties,\n      ...shape\n    }\n  };\n};\nexport const acUpdateDashboardItem = item => ({\n  type: UPDATE_DASHBOARD_ITEM,\n  value: item\n});\nexport const acRemoveDashboardItem = value => ({\n  type: REMOVE_DASHBOARD_ITEM,\n  value\n}); // thunks\n\nexport const tSaveDashboard = () => async (dispatch, getState, dataEngine) => {\n  const dashboard = sGetEditDashboardRoot(getState());\n  const dashboardToSave = { ...dashboard,\n    dashboardItems: convertUiItemsToBackend(dashboard.dashboardItems),\n    name: dashboard.name || i18n.t('Untitled dashboard')\n  };\n\n  try {\n    const dashboardId = dashboardToSave.id ? await updateDashboard(dataEngine, dashboardToSave) : await postDashboard(dataEngine, dashboardToSave);\n    dispatch(acClearEditDashboard());\n    await dispatch(tSetSelectedDashboardById(dashboardId));\n    return Promise.resolve(dashboardId);\n  } catch (error) {\n    onError(error);\n  }\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classes from './styles/NoVisualizationMessage.module.css';\n\nconst NoVisualizationMessage = ({\n  message\n}) => {\n  return <div className={classes.message}>{message}</div>;\n};\n\nNoVisualizationMessage.propTypes = {\n  message: PropTypes.string\n};\nexport default NoVisualizationMessage;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport NoVisualizationMessage from './NoVisualizationMessage';\nimport * as pluginManager from './plugin';\nimport { getBaseUrl, orObject } from '../../../../modules/util';\nimport { getGridItemDomId } from '../../../ItemGrid/gridUtil';\n\nconst pluginCredentials = d2 => {\n  return {\n    baseUrl: getBaseUrl(d2),\n    auth: d2.Api.getApi().defaultHeaders.Authorization\n  };\n};\n\nclass DefaultPlugin extends Component {\n  pluginCredentials = null;\n\n  constructor(props, context) {\n    super(props);\n    this.d2 = context.d2;\n  }\n\n  pluginIsAvailable = () => pluginManager.pluginIsAvailable(this.props.activeType || this.props.item.type);\n  shouldPluginReload = prevProps => {\n    // TODO - fix this hack, to handle bug with multiple\n    // rerendering while switching between dashboards.\n    //\n    // To determine if the rendering is happening because of a\n    // dashboard switch, check if the item reference has changed.\n    const reloadAllowed = this.props.item === prevProps.item;\n    const filtersChanged = prevProps.itemFilters !== this.props.itemFilters;\n    const vis = orObject(this.props.visualization);\n    const prevVis = orObject(prevProps.visualization);\n    const visChanged = vis.id !== prevVis.id || prevProps.activeType !== this.props.activeType;\n    return reloadAllowed && (visChanged || filtersChanged);\n  };\n  reloadPlugin = prevProps => {\n    if (this.pluginIsAvailable() && this.shouldPluginReload(prevProps)) {\n      if (this.props.activeType !== prevProps.activeType || this.props.itemFilters !== prevProps.itemFilters) {\n        pluginManager.unmount(this.props.item, prevProps.activeType);\n        pluginManager.load(this.props.item, this.props.visualization, {\n          credentials: this.pluginCredentials,\n          activeType: this.props.activeType\n        });\n      }\n    }\n  };\n\n  componentDidMount() {\n    this.pluginCredentials = pluginCredentials(this.d2);\n\n    if (this.pluginIsAvailable()) {\n      pluginManager.load(this.props.item, this.props.visualization, {\n        credentials: this.pluginCredentials,\n        activeType: this.props.activeType,\n        options: this.props.options\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    this.reloadPlugin(prevProps);\n  }\n\n  componentWillUnmount() {\n    if (this.pluginIsAvailable()) {\n      pluginManager.unmount(this.props.item, this.props.activeType);\n    }\n  }\n\n  render() {\n    const {\n      item,\n      style\n    } = this.props;\n    return this.pluginIsAvailable() ? <div id={getGridItemDomId(item.id)} style={style} /> : <NoVisualizationMessage message={i18n.t('Unable to load the plugin for this item')} />;\n  }\n\n}\n\nDefaultPlugin.contextTypes = {\n  d2: PropTypes.object\n};\nDefaultPlugin.propTypes = {\n  activeType: PropTypes.string,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object,\n  options: PropTypes.object,\n  style: PropTypes.object,\n  visualization: PropTypes.object\n};\nDefaultPlugin.defaultProps = {\n  style: {},\n  item: {},\n  itemFilters: {},\n  options: {},\n  visualization: {}\n};\nexport default DefaultPlugin;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport DefaultPlugin from './DefaultPlugin';\nimport { MAP } from '../../../../modules/itemTypes';\n\nconst MapPlugin = ({\n  applyFilters,\n  ...props\n}) => {\n  if (props.item.type === MAP) {\n    // apply filters only to thematic and event layers\n    // for maps AO\n    const mapViews = props.visualization.mapViews.map(mapView => {\n      if (mapView.layer.includes('thematic') || mapView.layer.includes('event')) {\n        return applyFilters(mapView, props.itemFilters);\n      }\n\n      return mapView;\n    });\n    props.visualization = { ...props.visualization,\n      mapViews\n    };\n  } else {\n    // this is the case of a non map AO passed to the maps plugin\n    // due to a visualization type switch in dashboard item\n    // maps plugin takes care of converting the AO to a suitable format\n    props.visualization = applyFilters(props.visualization, props.itemFilters);\n  }\n\n  return <DefaultPlugin options={{\n    hideTitle: true\n  }} {...props} />;\n};\n\nMapPlugin.propTypes = {\n  applyFilters: PropTypes.func,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object,\n  visualization: PropTypes.object\n};\nexport default MapPlugin;","import React from 'react';\nimport { CircularLoader } from '@dhis2/ui';\nimport classes from './styles/LoadingMask.module.css';\n\nconst LoadingMask = () => {\n  return <div className={classes.center}>\n            <CircularLoader />\n        </div>;\n};\n\nexport default LoadingMask;","const getFilteredVisualization = (visualization, filters) => {\n  if (!Object.keys(filters).length) {\n    return visualization;\n  } // deep clone objects in filters to avoid changing the visualization in the Redux store\n\n\n  const visRows = visualization.rows.map(obj => ({ ...obj\n  }));\n  const visColumns = visualization.columns.map(obj => ({ ...obj\n  }));\n  const visFilters = visualization.filters.map(obj => ({ ...obj\n  }));\n  Object.keys(filters).forEach(dimensionId => {\n    if (filters[dimensionId]) {\n      let dimensionFound = false;\n      [visRows, visColumns, visFilters].forEach(dimensionObjects => dimensionObjects.filter(obj => obj.dimension === dimensionId).forEach(obj => {\n        dimensionFound = true;\n        obj.items = filters[dimensionId];\n      })); // add dimension to filters if not already present elsewhere\n\n      if (!dimensionFound) {\n        visFilters.push({\n          dimension: dimensionId,\n          items: filters[dimensionId]\n        });\n      }\n    }\n  });\n  return { ...visualization,\n    rows: visRows,\n    columns: visColumns,\n    filters: visFilters\n  };\n};\n\nexport default getFilteredVisualization;","import { VIS_TYPE_COLUMN, VIS_TYPE_PIVOT_TABLE, getAdaptedUiLayoutByType } from '@dhis2/analytics';\nimport { REPORT_TABLE, CHART, MAP } from '../../../../modules/itemTypes';\nexport const THEMATIC_LAYER = 'thematic';\n\nconst extractMapView = map => map.mapViews && map.mapViews.find(mv => mv.layer.includes(THEMATIC_LAYER));\n\nconst getWithoutId = object => ({ ...object,\n  id: undefined\n});\n\nconst getVisualizationConfig = (visualization, originalType, activeType) => {\n  if (originalType === MAP && originalType !== activeType) {\n    const extractedMapView = extractMapView(visualization);\n\n    if (extractedMapView === undefined) {\n      return null;\n    }\n\n    return getWithoutId({ ...visualization,\n      ...extractedMapView,\n      mapViews: undefined,\n      type: activeType === CHART ? VIS_TYPE_COLUMN : VIS_TYPE_PIVOT_TABLE\n    });\n  } else if (originalType === REPORT_TABLE && activeType === CHART) {\n    const layout = getAdaptedUiLayoutByType(visualization, VIS_TYPE_COLUMN);\n    return getWithoutId({ ...visualization,\n      ...layout,\n      type: VIS_TYPE_COLUMN\n    });\n  } else if (originalType === CHART && activeType === REPORT_TABLE) {\n    const layout = getAdaptedUiLayoutByType(visualization, VIS_TYPE_PIVOT_TABLE);\n    return getWithoutId({ ...visualization,\n      ...layout,\n      type: VIS_TYPE_PIVOT_TABLE\n    });\n  }\n\n  return getWithoutId(visualization);\n};\n\nexport default getVisualizationConfig;","// Note that this ignores discrepancies in 'this', so shouldn't be used with bound functions\n// This is useful instead of lodash/memoize when we only need to memoize a single value\n// Inspiration: https://github.com/alexreardon/memoize-one\nconst memoizeOne = fn => {\n  let lastArgs = undefined;\n  let lastValue = undefined;\n  return (...args) => {\n    if (lastArgs && args.length === lastArgs.length && args.every((arg, i) => arg === lastArgs[i])) {\n      return lastValue;\n    }\n\n    lastArgs = args;\n    lastValue = fn(...args);\n    return lastValue;\n  };\n};\n\nexport default memoizeOne;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport VisualizationPlugin from '@dhis2/data-visualizer-plugin';\nimport i18n from '@dhis2/d2-i18n';\nimport DefaultPlugin from './DefaultPlugin';\nimport MapPlugin from './MapPlugin';\nimport LoadingMask from './LoadingMask';\nimport NoVisualizationMessage from './NoVisualizationMessage';\nimport getFilteredVisualization from './getFilteredVisualization';\nimport getVisualizationConfig from './getVisualizationConfig';\nimport { VISUALIZATION, MAP, CHART, REPORT_TABLE } from '../../../../modules/itemTypes';\nimport { getVisualizationId } from '../../../../modules/item';\nimport memoizeOne from '../../../../modules/memoizeOne';\nimport { sGetVisualization } from '../../../../reducers/visualizations';\n\nclass Visualization extends React.Component {\n  state = {\n    pluginLoaded: false\n  };\n\n  constructor(props) {\n    super(props);\n    this.memoizedGetFilteredVisualization = memoizeOne(getFilteredVisualization);\n    this.memoizedGetVisualizationConfig = memoizeOne(getVisualizationConfig);\n  }\n\n  onLoadingComplete = () => {\n    this.setState({\n      pluginLoaded: true\n    });\n  };\n\n  render() {\n    const {\n      visualization,\n      activeType,\n      item,\n      itemFilters,\n      availableHeight\n    } = this.props;\n\n    if (!visualization) {\n      return <NoVisualizationMessage message={i18n.t('No data to display')} />;\n    }\n\n    const pluginProps = {\n      item,\n      itemFilters,\n      activeType,\n      style: {\n        height: availableHeight\n      },\n      visualization: this.memoizedGetVisualizationConfig(visualization, item.type, activeType)\n    };\n\n    switch (activeType) {\n      case VISUALIZATION:\n      case CHART:\n      case REPORT_TABLE:\n        {\n          return <>\n                        {!this.state.pluginLoaded && <div style={pluginProps.style}>\n                                <LoadingMask />\n                            </div>}\n                        <VisualizationPlugin d2={this.context.d2} visualization={this.memoizedGetFilteredVisualization(pluginProps.visualization, pluginProps.itemFilters)} onLoadingComplete={this.onLoadingComplete} forDashboard={true} style={pluginProps.style} />\n                    </>;\n        }\n\n      case MAP:\n        {\n          return <MapPlugin applyFilters={this.memoizedGetFilteredVisualization} {...pluginProps} />;\n        }\n\n      default:\n        {\n          pluginProps.visualization = this.memoizedGetFilteredVisualization(pluginProps.visualization, pluginProps.itemFilters);\n          return <DefaultPlugin {...pluginProps} />;\n        }\n    }\n  }\n\n}\n\nVisualization.propTypes = {\n  activeType: PropTypes.string,\n  availableHeight: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  item: PropTypes.object,\n  itemFilters: PropTypes.object,\n  visualization: PropTypes.object\n};\nVisualization.contextTypes = {\n  d2: PropTypes.object\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    visualization: sGetVisualization(state, getVisualizationId(ownProps.item))\n  };\n};\n\nexport default connect(mapStateToProps)(Visualization);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Warning } from './assets/icons';\nimport classes from './styles/FatalErrorBoundary.module.css';\n\nclass FatalErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      errorFound: false\n    };\n  }\n\n  componentDidCatch(error, info) {\n    this.setState({\n      errorFound: true\n    });\n    console.log('error: ', error);\n    console.log('info: ', info);\n  }\n\n  render() {\n    if (this.state.errorFound) {\n      return <p className={classes.container}>\n                    <span className={classes.icon}>\n                        <Warning />\n                    </span>\n                    <span className={classes.message}>\n                        {i18n.t('There was a problem loading this dashboard item')}\n                    </span>\n                </p>;\n    }\n\n    return this.props.children;\n  }\n\n}\n\nFatalErrorBoundary.propTypes = {\n  children: PropTypes.node\n};\nexport default FatalErrorBoundary;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classes from './styles/ItemHeader.module.css';\n\nconst ViewItemActions = ({\n  actionButtons\n}) => {\n  return actionButtons ? <div className={classes.itemActionsWrap}>{actionButtons}</div> : null;\n};\n\nViewItemActions.propTypes = {\n  actionButtons: PropTypes.node\n};\nexport default ViewItemActions;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { colors } from '@dhis2/ui';\nimport classes from './styles/DeleteItemButton.module.css';\n\nconst DeleteItemButton = ({\n  onClick\n}) => <button type=\"button\" className={classes.deleteItemButton} onClick={onClick} title={i18n.t(`Delete item`)}>\n        <DeleteIcon style={{\n    fill: colors.red500\n  }} />\n    </button>;\n\nDeleteItemButton.propTypes = {\n  onClick: PropTypes.func\n};\nexport default DeleteItemButton;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport DeleteItemButton from './DeleteItemButton';\nimport { acRemoveDashboardItem } from '../../../actions/editDashboard';\nimport classes from './styles/ItemHeader.module.css';\n\nconst EditItemActions = ({\n  itemId,\n  acRemoveDashboardItem\n}) => {\n  const handleDeleteItem = () => acRemoveDashboardItem(itemId);\n\n  return <div className={classes.itemActionsWrap}>\n            <DeleteItemButton onClick={handleDeleteItem} />\n        </div>;\n};\n\nEditItemActions.propTypes = {\n  acRemoveDashboardItem: PropTypes.func,\n  itemId: PropTypes.string\n};\nconst mapDispatchToProps = {\n  acRemoveDashboardItem\n};\nexport default connect(null, mapDispatchToProps)(EditItemActions);","import React from 'react';\nimport { colors } from '@dhis2/ui';\n\nconst WarningIcon = () => <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" fill={colors.grey600}>\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z\" />\n    </svg>;\n\nexport default WarningIcon;","import React from 'react';\nimport { Tooltip } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport InfoIcon from '../../../icons/Info';\nimport classes from './styles/PrintItemInfo.module.css';\n\nconst PrintWarning = () => <div className={classes.warning}>\n        <Tooltip content={i18n.t('This item has been shortened to fit on one page')} placement=\"bottom\">\n            <InfoIcon />\n        </Tooltip>\n    </div>;\n\nexport default PrintWarning;","export const EDIT = 'edit';\nexport const NEW = 'new';\nexport const VIEW = 'view';\nexport const PRINT = 'print';\nexport const PRINT_LAYOUT = 'print-layout';\nexport const isEditMode = mode => [EDIT, NEW].includes(mode);\nexport const isPrintMode = mode => [PRINT, PRINT_LAYOUT].includes(mode);\nexport const isViewMode = mode => mode === VIEW;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ViewItemActions from './ViewItemActions';\nimport EditItemActions from './EditItemActions';\nimport PrintItemInfo from './PrintItemInfo';\nimport { VIEW, EDIT, PRINT_LAYOUT } from '../../Dashboard/dashboardModes';\nimport classes from './styles/ItemHeader.module.css';\n\nconst getItemActionsMap = isShortened => {\n  return {\n    [VIEW]: ViewItemActions,\n    [EDIT]: EditItemActions,\n    [PRINT_LAYOUT]: isShortened ? PrintItemInfo : null\n  };\n}; // This is the margin-top + margin-bottom defined in the css file\n\n\nexport const HEADER_MARGIN_HEIGHT = 12;\nconst ItemHeader = React.forwardRef(({\n  dashboardMode,\n  title,\n  isShortened,\n  ...rest\n}, ref) => {\n  const Actions = getItemActionsMap(isShortened)[dashboardMode];\n  return <div className={classes.itemHeaderWrap} ref={ref}>\n                <p className={classes.itemTitle}>{title}</p>\n                {Actions ? <Actions {...rest} /> : null}\n            </div>;\n});\nItemHeader.displayName = 'ItemHeader';\nItemHeader.propTypes = {\n  dashboardMode: PropTypes.string,\n  isShortened: PropTypes.bool,\n  title: PropTypes.string\n};\nexport default connect(null, null, null, {\n  forwardRef: true\n})(ItemHeader);","import React, { useState, createRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { useConfig } from '@dhis2/app-runtime';\nimport { isSingleValue, isYearOverYear, VIS_TYPE_GAUGE, VIS_TYPE_PIE } from '@dhis2/analytics';\nimport { Button, Menu, Popover, MenuItem, Divider, colors } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport { ThreeDots, SpeechBubble, Fullscreen, ExitFullscreen } from './assets/icons';\nimport { getLink } from './Visualization/plugin';\nimport { CHART, MAP, REPORT_TABLE, EVENT_CHART, EVENT_REPORT, isTrackerDomainType, hasMapView, getAppName } from '../../../modules/itemTypes';\nconst iconFill = {\n  fill: colors.grey600\n};\n\nconst ItemHeaderButtons = props => {\n  const [menuIsOpen, setMenuIsOpen] = useState(null);\n  const {\n    baseUrl\n  } = useConfig();\n  const {\n    item,\n    visualization,\n    onSelectActiveType,\n    activeType\n  } = props;\n  const isTrackerType = isTrackerDomainType(item.type);\n\n  const onViewTable = () => {\n    closeMenu();\n    onSelectActiveType(isTrackerType ? EVENT_REPORT : REPORT_TABLE);\n  };\n\n  const onViewChart = () => {\n    closeMenu();\n    onSelectActiveType(isTrackerType ? EVENT_CHART : CHART);\n  };\n\n  const onViewMap = () => {\n    closeMenu();\n    onSelectActiveType(MAP);\n  };\n\n  const itemHasMapView = () => hasMapView(item.type);\n\n  const handleInterpretationClick = () => {\n    props.onToggleFooter();\n\n    if (menuIsOpen) {\n      closeMenu();\n    }\n  };\n\n  const handleToggleFullscreenClick = () => {\n    props.onToggleFullscreen();\n    closeMenu();\n  };\n\n  const openMenu = () => setMenuIsOpen(true);\n\n  const closeMenu = () => setMenuIsOpen(false);\n\n  const type = visualization.type || item.type;\n  const canViewAs = !isSingleValue(type) && !isYearOverYear(type) && type !== VIS_TYPE_GAUGE && type !== VIS_TYPE_PIE;\n  const interpretationMenuLabel = props.activeFooter ? i18n.t(`Hide interpretations and details`) : i18n.t(`Show interpretations and details`);\n\n  const ViewAsMenuItems = () => <>\n            {activeType !== CHART && activeType !== EVENT_CHART && <MenuItem dense label={i18n.t('View as Chart')} onClick={onViewChart} icon={<ChartIcon style={iconFill} />} />}\n            {activeType !== REPORT_TABLE && activeType !== EVENT_REPORT && <MenuItem dense label={i18n.t('View as Table')} onClick={onViewTable} icon={<TableIcon style={iconFill} />} />}\n            {itemHasMapView() && activeType !== MAP && <MenuItem dense label={i18n.t('View as Map')} onClick={onViewMap} icon={<MapIcon style={iconFill} />} />}\n        </>;\n\n  const buttonRef = createRef();\n  return props.isFullscreen ? <Button small secondary onClick={props.onToggleFullscreen}>\n            <ExitFullscreen />\n        </Button> : <>\n            <div ref={buttonRef}>\n                <Button small secondary onClick={openMenu} dataTest=\"dashboarditem-menu-button\">\n                    <ThreeDots />\n                </Button>\n            </div>\n            {menuIsOpen && <Popover reference={buttonRef} placement=\"auto-start\" arrow={false} onClickOutside={closeMenu}>\n                    <Menu>\n                        {canViewAs && <>\n                                <ViewAsMenuItems />\n                                <Divider />\n                            </>}\n                        <MenuItem dense icon={<LaunchIcon style={{\n          fill: '#6e7a8a'\n        }} />} label={i18n.t('Open in {{appName}} app', {\n          appName: getAppName(item.type)\n        })} href={getLink(item, baseUrl)} target=\"_blank\" />\n                        <MenuItem dense icon={<SpeechBubble />} label={interpretationMenuLabel} onClick={handleInterpretationClick} />\n                        {props.fullscreenSupported && <MenuItem dense icon={<Fullscreen />} label={i18n.t('View fullscreen')} onClick={handleToggleFullscreenClick} />}\n                    </Menu>\n                </Popover>}\n        </>;\n};\n\nItemHeaderButtons.propTypes = {\n  activeFooter: PropTypes.bool,\n  activeType: PropTypes.string,\n  fullscreenSupported: PropTypes.bool,\n  isFullscreen: PropTypes.bool,\n  item: PropTypes.object,\n  visualization: PropTypes.object,\n  onSelectActiveType: PropTypes.func,\n  onToggleFooter: PropTypes.func,\n  onToggleFullscreen: PropTypes.func\n};\nexport default ItemHeaderButtons;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getVisualizationId } from '../../../modules/item';\nimport InterpretationsComponent from '@dhis2/d2-ui-interpretations';\nimport classes from './styles/ItemFooter.module.css';\n\nconst ItemFooter = (props, context) => <div data-test=\"dashboarditem-footer\">\n        <hr className={classes.line} />\n        <div className={classes.scrollContainer}>\n            <InterpretationsComponent d2={context.d2} item={props.item} type={props.item.type.toLowerCase()} id={getVisualizationId(props.item)} appName=\"dashboard\" />\n        </div>\n    </div>;\n\nItemFooter.contextTypes = {\n  d2: PropTypes.object.isRequired\n};\nItemFooter.propTypes = {\n  item: PropTypes.object.isRequired\n};\nexport default ItemFooter;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport uniqueId from 'lodash/uniqueId';\nimport Visualization from './Visualization/Visualization';\nimport FatalErrorBoundary from './FatalErrorBoundary';\nimport ItemHeader, { HEADER_MARGIN_HEIGHT } from '../ItemHeader/ItemHeader';\nimport ItemHeaderButtons from './ItemHeaderButtons';\nimport ItemFooter from './ItemFooter';\nimport { apiPostDataStatistics } from '../../../api/dataStatistics';\nimport { apiFetchVisualization } from '../../../api/metadata';\nimport { sGetVisualization } from '../../../reducers/visualizations';\nimport { sGetSelectedItemActiveType } from '../../../reducers/selected';\nimport { sGetIsEditing } from '../../../reducers/editDashboard';\nimport { sGetItemFiltersRoot, DEFAULT_STATE_ITEM_FILTERS } from '../../../reducers/itemFilters';\nimport { sGatherAnalyticalObjectStatisticsInDashboardViews } from '../../../reducers/settings';\nimport { acAddVisualization } from '../../../actions/visualizations';\nimport { acSetSelectedItemActiveType } from '../../../actions/selected';\nimport { pluginIsAvailable } from './Visualization/plugin';\nimport { getDataStatisticsName } from '../../../modules/itemTypes';\nimport { getVisualizationId, getVisualizationName } from '../../../modules/item';\nimport memoizeOne from '../../../modules/memoizeOne';\nimport { isEditMode, isPrintMode, isViewMode } from '../../Dashboard/dashboardModes';\nimport { ITEM_CONTENT_PADDING_BOTTOM } from '../../ItemGrid/ItemGrid';\nexport class Item extends Component {\n  state = {\n    showFooter: false,\n    configLoaded: false,\n    isFullscreen: false\n  };\n\n  constructor(props, context) {\n    super(props);\n    this.d2 = context.d2;\n    this.contentRef = React.createRef();\n    this.headerRef = React.createRef();\n    this.itemDomElSelector = `.reactgriditem-${this.props.item.id}`;\n    this.memoizedGetContentHeight = memoizeOne((calculatedHeight, measuredHeight, preferMeasured) => preferMeasured ? measuredHeight || calculatedHeight : calculatedHeight);\n  }\n\n  async componentDidMount() {\n    this.props.updateVisualization(await apiFetchVisualization(this.props.item));\n\n    try {\n      if (this.props.gatherDataStatistics && isViewMode(this.props.dashboardMode)) {\n        await apiPostDataStatistics(getDataStatisticsName(this.props.item.type), getVisualizationId(this.props.item));\n      }\n    } catch (e) {\n      console.log(e);\n    }\n\n    this.setState({\n      configLoaded: true\n    });\n    const el = document.querySelector(this.itemDomElSelector);\n\n    if (el?.requestFullscreen) {\n      el.onfullscreenchange = this.handleFullscreenChange;\n    } else if (el?.webkitRequestFullscreen) {\n      el.onwebkitfullscreenchange = this.handleFullscreenChange;\n    }\n  }\n\n  componentWillUnmount() {\n    const el = document.querySelector(this.itemDomElSelector);\n\n    if (el?.onfullscreenchange) {\n      el.removeEventListener('onfullscreenchange', this.handleFullscreenChange);\n    } else if (el?.onwebkitfullscreenchange) {\n      el.removeEventListener('onwebkitfullscreenchange', this.handleFullscreenChange);\n    }\n  }\n\n  isFullscreenSupported = () => {\n    const el = document.querySelector(this.itemDomElSelector);\n    return !!(el?.requestFullscreen || el?.webkitRequestFullscreen);\n  };\n  handleFullscreenChange = () => {\n    this.setState({\n      isFullscreen: !!document.fullscreenElement || !!document.webkitFullscreenElement\n    });\n  };\n  onToggleFullscreen = () => {\n    if (!this.state.isFullscreen) {\n      const el = document.querySelector(this.itemDomElSelector);\n\n      if (el?.requestFullscreen) {\n        el.requestFullscreen();\n      } else if (el?.webkitRequestFullscreen) {\n        el.webkitRequestFullscreen();\n      }\n    } else {\n      document.exitFullscreen ? document.exitFullscreen() : document.webkitExitFullscreen();\n    }\n  };\n  getUniqueKey = memoizeOne(() => uniqueId());\n  onToggleFooter = () => {\n    this.setState({\n      showFooter: !this.state.showFooter\n    }, this.props.onToggleItemExpanded(this.props.item.id));\n  };\n  setActiveType = type => {\n    type !== this.getActiveType() && this.props.setActiveType(this.props.item.id, type);\n  };\n  getActiveType = () => {\n    if (this.props.isEditing) {\n      return this.props.item.type;\n    }\n\n    return this.props.activeType || this.props.item.type;\n  };\n  getAvailableHeight = () => {\n    if (this.state.isFullscreen) {\n      return '95vh';\n    }\n\n    const calculatedHeight = this.props.item.originalHeight - this.headerRef.current.clientHeight - HEADER_MARGIN_HEIGHT - ITEM_CONTENT_PADDING_BOTTOM;\n    return this.memoizedGetContentHeight(calculatedHeight, this.contentRef ? this.contentRef.offsetHeight : null, isEditMode(this.props.dashboardMode) || isPrintMode(this.props.dashboardMode));\n  };\n\n  render() {\n    const {\n      item,\n      dashboardMode,\n      itemFilters\n    } = this.props;\n    const {\n      showFooter\n    } = this.state;\n    const activeType = this.getActiveType();\n    const actionButtons = pluginIsAvailable(activeType || item.type) ? <ItemHeaderButtons item={item} visualization={this.props.visualization} onSelectActiveType={this.setActiveType} onToggleFooter={this.onToggleFooter} onToggleFullscreen={this.onToggleFullscreen} activeType={activeType} activeFooter={showFooter} isFullscreen={this.state.isFullscreen} fullscreenSupported={this.isFullscreenSupported()} /> : null;\n    return <>\n                <ItemHeader title={getVisualizationName(item)} itemId={item.id} actionButtons={actionButtons} ref={this.headerRef} dashboardMode={dashboardMode} isShortened={item.shortened} />\n                <FatalErrorBoundary>\n                    <div key={this.getUniqueKey(itemFilters)} className=\"dashboard-item-content\" ref={ref => this.contentRef = ref}>\n                        {this.state.configLoaded && <Visualization item={item} activeType={activeType} itemFilters={itemFilters} availableHeight={this.getAvailableHeight()} />}\n                    </div>\n                </FatalErrorBoundary>\n                {isViewMode(dashboardMode) && showFooter ? <ItemFooter item={item} /> : null}\n            </>;\n  }\n\n}\nItem.contextTypes = {\n  d2: PropTypes.object\n};\nItem.propTypes = {\n  activeType: PropTypes.string,\n  dashboardMode: PropTypes.string,\n  gatherDataStatistics: PropTypes.bool,\n  isEditing: PropTypes.bool,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object,\n  setActiveType: PropTypes.func,\n  updateVisualization: PropTypes.func,\n  visualization: PropTypes.object,\n  onToggleItemExpanded: PropTypes.func\n};\nItem.defaultProps = {\n  item: {},\n  onToggleItemExpanded: Function.prototype,\n  visualization: {}\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const itemFilters = !isEditMode(ownProps.dashboardMode) ? sGetItemFiltersRoot(state) : DEFAULT_STATE_ITEM_FILTERS;\n  return {\n    activeType: sGetSelectedItemActiveType(state, ownProps.item?.id),\n    isEditing: sGetIsEditing(state),\n    itemFilters,\n    visualization: sGetVisualization(state, getVisualizationId(ownProps.item)),\n    gatherDataStatistics: sGatherAnalyticalObjectStatisticsInDashboardViews(state)\n  };\n};\n\nconst mapDispatchToProps = {\n  setActiveType: acSetSelectedItemActiveType,\n  updateVisualization: acAddVisualization\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Item);","import React from 'react';\nimport { colors } from '@dhis2/ui';\nconst style = {\n  backgroundColor: colors.grey200,\n  border: 'none',\n  height: '1px',\n  margin: '0px 0px 5px 0px'\n};\n\nconst Line = () => <hr style={style} />;\n\nexport default Line;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { colors } from '@dhis2/ui';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport Line from '../../../widgets/Line';\nimport { sGetMessagesRoot } from '../../../reducers/messages';\nimport { formatDate } from '../../../modules/util';\nimport { isViewMode } from '../../Dashboard/dashboardModes';\nimport './MessagesItem.css';\nconst PRIVATE = 'PRIVATE';\nconst messageTypes = {\n  [PRIVATE]: 'Private',\n  VALIDATION_RESULT: 'Validation',\n  TICKET: 'Ticket',\n  SYSTEM: 'System'\n};\nconst style = {\n  list: {\n    listStyleType: 'none',\n    paddingLeft: '0px'\n  },\n  seeAll: {\n    textAlign: 'center',\n    fontSize: '13px',\n    marginBottom: '5px'\n  },\n  sender: {\n    fontSize: '13px',\n    lineHeight: '15px',\n    margin: 0,\n    color: colors.grey800\n  },\n  snippet: {\n    color: colors.grey800,\n    fontSize: '13px',\n    lineHeight: '15px',\n    maxHeight: '30px',\n    overflow: 'hidden'\n  }\n};\n\nclass MessagesItem extends Component {\n  state = {\n    uiLocale: ''\n  };\n\n  async componentDidMount() {\n    const uiLocale = await this.context.d2.currentUser.userSettings.get('keyUiLocale');\n    this.setState({\n      uiLocale\n    });\n  }\n\n  getMessageHref = msg => {\n    const msgIdentifier = msg ? `#/${msg.messageType}/${msg.id}` : '';\n    return `${this.context.baseUrl}/dhis-web-messaging/${msgIdentifier}`;\n  };\n  getMessageSender = msg => {\n    const latestMsg = msg.messages.slice(-1)[0];\n    return latestMsg.sender ? latestMsg.sender.displayName : '';\n  };\n  getMessageItems = () => {\n    const modeClass = isViewMode(this.props.dashboardMode) ? 'view' : null;\n    return this.props.messages.map(msg => {\n      const redirectToMsg = () => {\n        if (isViewMode(this.props.dashboardMode)) {\n          document.location.href = this.getMessageHref(msg);\n        }\n      };\n\n      const sender = msg.messageType === PRIVATE ? this.getMessageSender(msg) : messageTypes[msg.messageType];\n      const readClass = !msg.read ? 'unread' : null;\n      const latestMsg = msg.messages.slice(-1)[0];\n      const msgDate = latestMsg.lastUpdated;\n      return <li className={`message-item ${modeClass}`} key={msg.id} onClick={redirectToMsg}>\n                    <p className={`message-title ${readClass}`}>\n                        {msg.displayName} ({msg.messageCount})\n                    </p>\n                    <p style={style.sender}>\n                        {sender} - {formatDate(msgDate, this.state.uiLocale)}\n                    </p>\n                    <p style={style.snippet}>{latestMsg.text}</p>\n                </li>;\n    });\n  };\n\n  render() {\n    return <>\n                <ItemHeader title={i18n.t('Messages')} itemId={this.props.item.id} dashboardMode={this.props.dashboardMode} isShortened={this.props.item.shortened} />\n                <Line />\n                {this.props.messages.length > 0 && <div className=\"dashboard-item-content\">\n                        <ul style={style.list}>{this.getMessageItems()}</ul>\n                        <div style={style.seeAll}>\n                            <a href={this.getMessageHref()}>\n                                {i18n.t('See all messages')}\n                            </a>\n                        </div>\n                    </div>}\n            </>;\n  }\n\n}\n\nMessagesItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  messages: PropTypes.array\n};\nMessagesItem.contextTypes = {\n  d2: PropTypes.object,\n  baseUrl: PropTypes.string\n};\n\nconst mapStateToProps = state => {\n  return {\n    messages: Object.values(sGetMessagesRoot(state))\n  };\n};\n\nconst MessagesContainer = connect(mapStateToProps, null)(MessagesItem);\nexport default MessagesContainer;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nconst NotSupportedItem = props => <>\n        <ItemHeader title={i18n.t('Item type \"{{type}}\" not supported', {\n    type: props.item.type\n  })} itemId={props.item.id} dashboardMode={props.dashboardMode} isShortened={props.item.shortened} />\n        <div style={{\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '90%'\n  }}>\n            <NotInterestedIcon style={{\n      width: 100,\n      height: 100,\n      align: 'center'\n    }} color=\"disabled\" />\n        </div>\n    </>;\n\nNotSupportedItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object\n};\nexport default NotSupportedItem;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst DescriptionIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill={colors.grey500}>\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M14 2H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6zm2 16H8v-2h8v2zm0-4H8v-2h8v2zm-3-5V3.5L18.5 9H13z\" />\n    </svg>;\n\nDescriptionIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default DescriptionIcon;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst DeleteIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill={colors.red500}>\n        <path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>;\n\nDeleteIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default DeleteIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { colors } from '@dhis2/ui';\nimport DescriptionIcon from '../../../icons/Description';\nimport DeleteIcon from '../../../icons/Delete';\nimport Line from '../../../widgets/Line';\nimport { itemTypeMap, getItemUrl } from '../../../modules/itemTypes';\nimport { orArray } from '../../../modules/util';\nimport { tRemoveListItemContent } from './actions';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport { isEditMode } from '../../Dashboard/dashboardModes';\nimport classes from './Item.module.css';\n\nconst getItemTitle = item => itemTypeMap[item.type].pluralTitle;\n\nconst getContentItems = item => orArray(item[itemTypeMap[item.type].propName]).filter((item, index, array) => array.findIndex(el => el.id === item.id) === index);\n\nconst ListItem = (props, context) => {\n  const {\n    item,\n    dashboardMode,\n    tRemoveListItemContent\n  } = props;\n  const contentItems = getContentItems(item);\n\n  const getLink = contentItem => {\n    const deleteButton = <button className={classes.deletebutton} onClick={() => tRemoveListItemContent(item, contentItem)}>\n                <DeleteIcon className={classes.deleteicon} />\n            </button>;\n    return <>\n                <a className={classes.link} style={{\n        color: colors.grey900\n      }} href={getItemUrl(item.type, contentItem, context.d2)}>\n                    {contentItem.name}\n                </a>\n                {isEditMode(dashboardMode) ? deleteButton : null}\n            </>;\n  };\n\n  return <>\n            <ItemHeader title={getItemTitle(item)} itemId={item.id} dashboardMode={dashboardMode} isShortened={item.shortened} />\n            <Line />\n            <div className=\"dashboard-item-content\">\n                <ul className={classes.list}>\n                    {contentItems.map(contentItem => <li className={classes.item} key={contentItem.id}>\n                            <DescriptionIcon className={classes.itemicon} />\n                            {getLink(contentItem)}\n                        </li>)}\n                </ul>\n            </div>\n        </>;\n};\n\nListItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  tRemoveListItemContent: PropTypes.func\n};\nListItem.contextTypes = {\n  d2: PropTypes.object\n};\nexport default connect(null, {\n  tRemoveListItemContent\n})(ListItem);","import { acUpdateDashboardItem, acRemoveDashboardItem } from '../../../actions/editDashboard';\nimport { itemTypeMap } from '../../../modules/itemTypes';\nexport const tRemoveListItemContent = (dashboardItem, content) => dispatch => {\n  const listItemType = itemTypeMap[dashboardItem.type].propName;\n  const newContent = dashboardItem[listItemType].filter(item => item.id !== content.id);\n\n  if (newContent.length) {\n    dashboardItem[listItemType] = newContent;\n    dispatch(acUpdateDashboardItem(dashboardItem));\n  } else {\n    dispatch(acRemoveDashboardItem(dashboardItem));\n  }\n};","/** @module reducers/editDashboard */\nimport update from 'immutability-helper';\nimport isEmpty from 'lodash/isEmpty';\nimport { orArray } from '../modules/util';\nexport const SET_PRINT_DASHBOARD = 'SET_PRINT_DASHBOARD';\nexport const CLEAR_PRINT_DASHBOARD = 'CLEAR_PRINT_DASHBOARD';\nexport const ADD_PRINT_DASHBOARD_ITEM = 'ADD_PRINT_DASHBOARD_ITEM';\nexport const SET_PRINT_DASHBOARD_LAYOUT = 'SET_PRINT_DASHBOARD_LAYOUT';\nexport const REMOVE_PRINT_DASHBOARD_ITEM = 'REMOVE_PRINT_DASHBOARD_ITEM';\nexport const UPDATE_PRINT_DASHBOARD_ITEM = 'UPDATE_PRINT_DASHBOARD_ITEM';\nexport const DEFAULT_STATE_PRINT_DASHBOARD = {};\nconst DEFAULT_DASHBOARD_ITEMS = [];\nexport const NEW_PRINT_DASHBOARD_STATE = {\n  id: '',\n  name: '',\n  access: {},\n  description: '',\n  dashboardItems: DEFAULT_DASHBOARD_ITEMS\n};\nexport default ((state = DEFAULT_STATE_PRINT_DASHBOARD, action) => {\n  switch (action.type) {\n    case SET_PRINT_DASHBOARD:\n      {\n        const newState = {};\n        Object.keys(NEW_PRINT_DASHBOARD_STATE).map(k => newState[k] = action.value[k]);\n        return newState;\n      }\n\n    case CLEAR_PRINT_DASHBOARD:\n      return DEFAULT_STATE_PRINT_DASHBOARD;\n\n    case ADD_PRINT_DASHBOARD_ITEM:\n      if (!action.value.position) {\n        return update(state, {\n          dashboardItems: {\n            $unshift: [action.value]\n          }\n        });\n      }\n\n      return update(state, {\n        dashboardItems: {\n          $splice: [[parseInt(action.value.position), 0, action.value]]\n        }\n      });\n\n    case REMOVE_PRINT_DASHBOARD_ITEM:\n      {\n        const idToRemove = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === idToRemove);\n\n        if (dashboardItemIndex > -1) {\n          return update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1]]\n            }\n          });\n        }\n\n        return state;\n      }\n\n    case UPDATE_PRINT_DASHBOARD_ITEM:\n      {\n        const dashboardItem = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === dashboardItem.id);\n\n        if (dashboardItemIndex > -1) {\n          const newState = update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1, Object.assign({}, dashboardItem)]]\n            }\n          });\n          return newState;\n        }\n\n        return state;\n      }\n\n    case SET_PRINT_DASHBOARD_LAYOUT:\n      {\n        const stateItems = orArray(state.dashboardItems);\n        let layoutHasChanged = false;\n        const newStateItems = action.value.map(({\n          x,\n          y,\n          w,\n          h,\n          i\n        }) => {\n          const stateItem = stateItems.find(si => si.id === i);\n\n          if (!(stateItem.x === x && stateItem.y === y && stateItem.w === w && stateItem.h === h)) {\n            layoutHasChanged = true;\n            return Object.assign({}, stateItem, {\n              w,\n              h,\n              x,\n              y\n            });\n          }\n\n          return stateItem;\n        });\n        return layoutHasChanged ? { ...state,\n          dashboardItems: newStateItems\n        } : state;\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetPrintDashboardRoot = state => state.printDashboard; // selectors\n\nexport const sGetIsPrinting = state => !isEmpty(state.printDashboard);\nexport const sGetPrintDashboardName = state => sGetPrintDashboardRoot(state).name;\nexport const sGetPrintDashboardDescription = state => sGetPrintDashboardRoot(state).description;\nexport const sGetPrintDashboardItems = state => {\n  return sGetPrintDashboardRoot(state)?.dashboardItems || DEFAULT_DASHBOARD_ITEMS;\n};","import React from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport Input from '@material-ui/core/Input';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport PrintItemInfo from '../ItemHeader/PrintItemInfo';\nimport Line from '../../../widgets/Line';\nimport { Parser as RichTextParser, Editor as RichTextEditor } from '@dhis2/d2-ui-rich-text';\nimport { acUpdateDashboardItem } from '../../../actions/editDashboard';\nimport { sGetEditDashboardItems } from '../../../reducers/editDashboard';\nimport { sGetDashboardItems } from '../../../reducers/dashboards';\nimport { sGetIsPrinting, sGetPrintDashboardItems } from '../../../reducers/printDashboard';\nimport { isEditMode, PRINT_LAYOUT } from '../../Dashboard/dashboardModes';\nconst style = {\n  textDiv: {\n    padding: '10px',\n    whiteSpace: 'pre-line',\n    lineHeight: '20px'\n  },\n  textField: {\n    fontSize: '14px',\n    fontStretch: 'normal',\n    width: '90%',\n    margin: '0 auto',\n    display: 'block',\n    lineHeight: '24px'\n  },\n  container: {\n    marginBottom: '20px',\n    marginTop: '20px'\n  }\n};\n\nconst TextItem = props => {\n  const {\n    item,\n    dashboardMode,\n    text,\n    acUpdateDashboardItem\n  } = props;\n\n  const onChangeText = event => {\n    const updatedItem = { ...item,\n      text: event.target.value\n    };\n    acUpdateDashboardItem(updatedItem);\n  };\n\n  const viewItem = () => {\n    const textDivStyle = Object.assign({}, style.textField, style.textDiv);\n    return <div className=\"dashboard-item-content\" style={style.container}>\n                <RichTextParser style={textDivStyle}>{text}</RichTextParser>\n            </div>;\n  };\n\n  const editItem = () => {\n    return <>\n                <ItemHeader title={i18n.t('Text item')} itemId={item.id} dashboardMode={dashboardMode} />\n                <Line />\n                <div className=\"dashboard-item-content\">\n                    <RichTextEditor onEdit={onChangeText}>\n                        <Input value={text} multiline fullWidth style={style.textField} placeholder={i18n.t('Add text here')} onChange={onChangeText} />\n                    </RichTextEditor>\n                </div>\n            </>;\n  };\n\n  const printItem = () => {\n    const textDivStyle = Object.assign({}, style.textField, style.textDiv);\n    return <>\n                {props.item.shortened ? <PrintItemInfo /> : null}\n                <div className=\"dashboard-item-content\" style={style.container}>\n                    <RichTextParser style={textDivStyle}>{text}</RichTextParser>\n                </div>\n            </>;\n  };\n\n  let textItem;\n\n  if (isEditMode(dashboardMode)) {\n    textItem = editItem;\n  } else if (dashboardMode === PRINT_LAYOUT) {\n    textItem = printItem;\n  } else {\n    textItem = viewItem;\n  }\n\n  return <>{textItem()}</>;\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const isPrintPreview = sGetIsPrinting(state);\n  let items;\n\n  if (isPrintPreview) {\n    items = sGetPrintDashboardItems(state);\n  } else if (isEditMode(ownProps.dashboardMode)) {\n    items = sGetEditDashboardItems(state);\n  } else {\n    items = sGetDashboardItems(state);\n  }\n\n  const item = items.find(item => item.id === ownProps.item.id);\n  return {\n    text: item ? item.text : ''\n  };\n};\n\nTextItem.propTypes = {\n  acUpdateDashboardItem: PropTypes.func,\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  text: PropTypes.string\n};\nexport default connect(mapStateToProps, {\n  acUpdateDashboardItem\n})(TextItem);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport Line from '../../../widgets/Line';\nimport { FILTER_ORG_UNIT } from '../../../actions/itemFilters';\nimport { sGetItemFiltersRoot, DEFAULT_STATE_ITEM_FILTERS } from '../../../reducers/itemFilters';\nimport { EDIT, isEditMode } from '../../Dashboard/dashboardModes';\n\nconst getIframeSrc = (appDetails, item, itemFilters) => {\n  let iframeSrc = `${appDetails.launchUrl}?dashboardItemId=${item.id}`;\n\n  if (itemFilters[FILTER_ORG_UNIT] && itemFilters[FILTER_ORG_UNIT].length) {\n    const ouIds = itemFilters[FILTER_ORG_UNIT].map(ouFilter => ouFilter.path.split('/').slice(-1)[0]);\n    iframeSrc += `&userOrgUnit=${ouIds.join(',')}`;\n  }\n\n  return iframeSrc;\n};\n\nconst AppItem = ({\n  dashboardMode,\n  item,\n  itemFilters\n}, context) => {\n  let appDetails;\n  const appKey = item.appKey;\n\n  if (appKey) {\n    appDetails = context.d2.system.installedApps.find(app => app.key === appKey);\n  }\n\n  const hideTitle = appDetails?.settings?.dashboardWidget?.hideTitle && dashboardMode !== EDIT;\n  return appDetails && appDetails.name && appDetails.launchUrl ? <>\n            {!hideTitle && <>\n                    <ItemHeader title={appDetails.name} itemId={item.id} dashboardMode={dashboardMode} isShortened={item.shortened} />\n                    <Line />\n                </>}\n            <iframe title={appDetails.name} src={getIframeSrc(appDetails, item, itemFilters)} className={!hideTitle ? 'dashboard-item-content' : 'dashboard-item-content-hidden-title'} style={{\n      border: 'none'\n    }} />\n        </> : <>\n            <ItemHeader title={`${appKey} app not found`} />\n            <Line />\n            <div className=\"dashboard-item-content\" style={{\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      height: '90%'\n    }}>\n                <NotInterestedIcon color=\"disabled\" disabled style={{\n        width: 100,\n        height: 100,\n        align: 'center'\n      }} />\n            </div>\n        </>;\n};\n\nAppItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object\n};\nAppItem.contextTypes = {\n  d2: PropTypes.object\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const itemFilters = !isEditMode(ownProps.dashboardMode) ? sGetItemFiltersRoot(state) : DEFAULT_STATE_ITEM_FILTERS;\n  return {\n    itemFilters\n  };\n};\n\nexport default connect(mapStateToProps)(AppItem);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { colors } from '@dhis2/ui';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nconst style = {\n  margin: '21px 28px',\n  fontSize: '14px',\n  lineHeight: '18px',\n  color: colors.grey600\n};\n\nconst SpacerItem = props => {\n  return <>\n            <ItemHeader title={i18n.t('Spacer')} itemId={props.item.id} dashboardMode={props.dashboardMode} isShortened={props.item.shortened} />\n            <p style={style}>\n                {i18n.t('Use a spacer to create empty vertical space between other dashboard items.')}\n            </p>\n        </>;\n};\n\nSpacerItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object\n};\nexport default SpacerItem;","import React from 'react';\n\nconst PageBreakItem = () => <div />;\n\nexport default PageBreakItem;","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { sGetSelectedId, sGetSelectedShowDescription } from '../../../reducers/selected';\nimport { sGetDashboardById, EMPTY_DASHBOARD } from '../../../reducers/dashboards';\nimport { sGetNamedItemFilters } from '../../../reducers/itemFilters';\nimport { sGetIsEditing } from '../../../reducers/editDashboard';\nimport { sGetPrintDashboardName, sGetPrintDashboardDescription } from '../../../reducers/printDashboard';\nimport classes from './styles/Item.module.css';\n\nconst PrintTitlePageItem = ({\n  name,\n  description,\n  itemFilters,\n  showDescription\n}) => {\n  const getItemFilterList = () => {\n    const listItems = itemFilters.map(({\n      name,\n      values\n    }) => <li className={classes.filterListItem} key={name}>\n                {name}: {values.map(val => val.name).join(', ')}\n            </li>);\n    return <ul className={classes.filterList}>{listItems}</ul>;\n  };\n\n  return <div className={classes.titlePage}>\n            <p className={classes.name}>{name}</p>\n            {showDescription && description && <p className={classes.description}>{description}</p>}\n            {itemFilters.length > 0 && <>\n                    <p className={classes.filterTitle}>\n                        {i18n.t('Filters applied')}\n                    </p>\n                    {getItemFilterList()}\n                </>}\n        </div>;\n};\n\nPrintTitlePageItem.propTypes = {\n  description: PropTypes.string,\n  itemFilters: PropTypes.array,\n  name: PropTypes.string,\n  showDescription: PropTypes.bool\n};\nPrintTitlePageItem.defaultProps = {\n  description: '',\n  name: '',\n  showDescription: false\n};\n\nconst mapStateToProps = state => {\n  const id = sGetSelectedId(state);\n  const isEditMode = sGetIsEditing(state);\n  const viewDashboard = sGetDashboardById(state, id) || EMPTY_DASHBOARD;\n  const name = isEditMode ? sGetPrintDashboardName(state) || i18n.t('Untitled dashboard') : viewDashboard.displayName;\n  const description = isEditMode ? sGetPrintDashboardDescription(state) : viewDashboard.displayDescription;\n  return {\n    name,\n    description,\n    itemFilters: sGetNamedItemFilters(state),\n    showDescription: sGetSelectedShowDescription(state)\n  };\n};\n\nexport default connect(mapStateToProps)(PrintTitlePageItem);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport VisualizationItem from './VisualizationItem/Item';\nimport MessagesItem from './MessagesItem/Item';\nimport NotSupportedItem from './NotSupportedItem/Item';\nimport ListItem from './ListItem/Item';\nimport TextItem from './TextItem/Item';\nimport AppItem from './AppItem/Item';\nimport SpacerItem from './SpacerItem/Item';\nimport PageBreakItem from './PageBreakItem/Item';\nimport PrintTitlePageItem from './PrintTitlePageItem/Item';\nimport { APP, VISUALIZATION, REPORT_TABLE, CHART, MAP, EVENT_CHART, EVENT_REPORT, MESSAGES, REPORTS, RESOURCES, USERS, TEXT, SPACER, PAGEBREAK, PRINT_TITLE_PAGE } from '../../modules/itemTypes';\n\nconst getGridItem = type => {\n  switch (type) {\n    case VISUALIZATION:\n    case REPORT_TABLE:\n    case CHART:\n    case MAP:\n    case EVENT_CHART:\n    case EVENT_REPORT:\n      return VisualizationItem;\n\n    case MESSAGES:\n      return MessagesItem;\n\n    case REPORTS:\n    case RESOURCES:\n    case USERS:\n      return ListItem;\n\n    case TEXT:\n      return TextItem;\n\n    case SPACER:\n      return SpacerItem;\n\n    case APP:\n      return AppItem;\n\n    case PAGEBREAK:\n      return PageBreakItem;\n\n    case PRINT_TITLE_PAGE:\n      return PrintTitlePageItem;\n\n    default:\n      return NotSupportedItem;\n  }\n};\n\nexport const Item = props => {\n  const GridItem = getGridItem(props.item.type);\n  return <GridItem item={props.item} dashboardMode={props.dashboardMode} onToggleItemExpanded={props.onToggleItemExpanded} />;\n};\nItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  onToggleItemExpanded: PropTypes.func\n};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash/debounce';\nimport pick from 'lodash/pick';\nconst defaultDebounceMs = 100;\nconst defaultBufferFactor = 0.25;\n\nclass ProgressiveLoadingContainer extends Component {\n  static propTypes = {\n    children: PropTypes.node.isRequired,\n    bufferFactor: PropTypes.number,\n    className: PropTypes.string,\n    debounceMs: PropTypes.number,\n    style: PropTypes.object\n  };\n  static defaultProps = {\n    debounceMs: defaultDebounceMs,\n    bufferFactor: defaultBufferFactor\n  };\n  state = {\n    shouldLoad: false\n  };\n  containerRef = null;\n  shouldLoadHandler = null;\n  handlerOptions = {\n    passive: true\n  };\n\n  checkShouldLoad() {\n    if (!this.containerRef) {\n      return;\n    }\n\n    const bufferPx = this.props.bufferFactor * window.innerHeight;\n    const rect = this.containerRef.getBoundingClientRect();\n\n    if (rect.bottom > -bufferPx && rect.top < window.innerHeight + bufferPx) {\n      this.setState({\n        shouldLoad: true\n      });\n      this.removeHandler();\n    }\n  }\n\n  registerHandler() {\n    this.shouldLoadHandler = debounce(() => this.checkShouldLoad(), this.props.debounceMs);\n    document.getElementsByClassName('dashboard-wrapper')[0]?.addEventListener('scroll', this.shouldLoadHandler, this.handlerOptions);\n  }\n\n  removeHandler() {\n    document.getElementsByClassName('dashboard-wrapper')[0]?.removeEventListener('scroll', this.shouldLoadHandler, this.handlerOptions);\n  }\n\n  componentDidMount() {\n    this.registerHandler();\n    this.checkShouldLoad();\n  }\n\n  componentWillUnmount() {\n    this.removeHandler();\n  }\n\n  render() {\n    const {\n      children,\n      className,\n      style,\n      ...props\n    } = this.props;\n    const {\n      shouldLoad\n    } = this.state;\n    const eventProps = pick(props, ['onMouseDown', 'onTouchStart', 'onMouseUp', 'onTouchEnd']);\n    return <div ref={ref => this.containerRef = ref} style={style} className={className} data-test={`dashboarditem-${props.itemId}`} {...eventProps}>\n                {shouldLoad && children}\n            </div>;\n  }\n\n}\n\nexport default ProgressiveLoadingContainer;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ReactGridLayout from 'react-grid-layout';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport { acUpdateDashboardLayout } from '../../actions/editDashboard';\nimport { Item } from '../Item/Item';\nimport { resize as pluginResize } from '../Item/VisualizationItem/Visualization/plugin';\nimport { isVisualizationType } from '../../modules/itemTypes';\nimport { GRID_ROW_HEIGHT, GRID_COMPACT_TYPE, MARGIN, getGridColumns, hasShape, onItemResize } from './gridUtil';\nimport { orArray } from '../../modules/util';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\nimport './ItemGrid.css';\nimport { sGetSelectedId, sGetSelectedIsLoading } from '../../reducers/selected';\nimport { sGetEditDashboardRoot, sGetEditDashboardItems } from '../../reducers/editDashboard';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport ProgressiveLoadingContainer from '../Item/ProgressiveLoadingContainer';\nimport { VIEW, EDIT } from '../Dashboard/dashboardModes'; // Component\n\nconst EXPANDED_HEIGHT = 17; // this is set in the .dashboard-item-content css\n\nexport const ITEM_CONTENT_PADDING_BOTTOM = 4;\nexport class ItemGrid extends Component {\n  state = {\n    expandedItems: {}\n  };\n  onToggleItemExpanded = clickedId => {\n    const isExpanded = typeof this.state.expandedItems[clickedId] === 'boolean' ? this.state.expandedItems[clickedId] : false;\n    const expandedItems = { ...this.state.expandedItems\n    };\n    expandedItems[clickedId] = !isExpanded;\n    this.setState({\n      expandedItems\n    });\n  };\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.edit) {\n      this.setState({\n        expandedItems: {}\n      });\n    }\n  }\n\n  onLayoutChange = newLayout => {\n    if (this.props.edit) {\n      this.props.acUpdateDashboardLayout(newLayout);\n    }\n  };\n  onResizeStop = (layout, oldItem, newItem) => {\n    onItemResize(newItem.i);\n    const dashboardItem = this.props.dashboardItems.find(item => item.id === newItem.i); // call resize on the item component if it's a plugin type\n\n    if (dashboardItem && isVisualizationType(dashboardItem)) {\n      pluginResize(dashboardItem);\n    }\n  };\n  adjustHeightForExpanded = dashboardItem => {\n    const expandedItem = this.state.expandedItems[dashboardItem.id];\n\n    if (expandedItem && expandedItem === true) {\n      return Object.assign({}, dashboardItem, {\n        h: dashboardItem.h + EXPANDED_HEIGHT\n      });\n    }\n\n    return dashboardItem;\n  };\n  getItemComponent = item => {\n    const itemClassNames = [item.type, this.props.edit ? 'edit' : 'view', `reactgriditem-${item.id}`].join(' ');\n    return <ProgressiveLoadingContainer key={item.i} className={itemClassNames} itemId={item.id}>\n                <Item item={item} dashboardMode={this.props.edit ? EDIT : VIEW} onToggleItemExpanded={this.onToggleItemExpanded} />\n            </ProgressiveLoadingContainer>;\n  };\n  getItemComponents = items => items.map(item => this.getItemComponent(item));\n\n  render() {\n    const {\n      edit,\n      isLoading,\n      dashboardItems\n    } = this.props;\n\n    if (!isLoading && !dashboardItems.length) {\n      return <NoContentMessage text={i18n.t('There are no items on this dashboard')} />;\n    }\n\n    const items = edit ? dashboardItems : dashboardItems.map(this.adjustHeightForExpanded);\n    return <div className=\"grid-wrapper\">\n                {isLoading ? <Layer translucent>\n                        <CenteredContent>\n                            <CircularLoader />\n                        </CenteredContent>\n                    </Layer> : null}\n                <ReactGridLayout onLayoutChange={this.onLayoutChange} onResizeStop={this.onResizeStop} className=\"layout\" layout={items} margin={MARGIN} cols={getGridColumns()} rowHeight={GRID_ROW_HEIGHT} width={window.innerWidth} compactType={GRID_COMPACT_TYPE} isDraggable={edit} isResizable={edit} draggableCancel=\"input,textarea\">\n                    {this.getItemComponents(items)}\n                </ReactGridLayout>\n            </div>;\n  }\n\n}\nItemGrid.propTypes = {\n  acUpdateDashboardLayout: PropTypes.func,\n  dashboardItems: PropTypes.array,\n  edit: PropTypes.bool,\n  isLoading: PropTypes.bool\n};\nItemGrid.defaultProps = {\n  dashboardItems: []\n}; // Container\n\nconst mapStateToProps = (state, ownProps) => {\n  const selectedDashboard = ownProps.edit ? sGetEditDashboardRoot(state) : sGetDashboardById(state, sGetSelectedId(state));\n  const dashboardItems = ownProps.edit ? sGetEditDashboardItems(state) : sGetDashboardItems(state);\n  return {\n    isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n    dashboardItems\n  };\n};\n\nconst mapDispatchToProps = {\n  acUpdateDashboardLayout\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n  const validItems = orArray(stateProps.dashboardItems).filter(hasShape);\n  return { ...dispatchProps,\n    edit: ownProps.edit,\n    isLoading: stateProps.isLoading,\n    dashboardItems: validItems,\n    onItemResize\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps, mergeProps)(ItemGrid);","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { colors } from '@dhis2/ui';\nconst styles = {\n  badgeContainer: {\n    margin: '2px',\n    padding: '0 16px',\n    borderRadius: '4px',\n    color: colors.white,\n    backgroundColor: '#212934',\n    height: 36,\n    display: 'flex',\n    alignItems: 'center'\n  },\n  badge: {\n    fontSize: '13px',\n    cursor: 'pointer',\n    whiteSpace: 'nowrap'\n  },\n  badgeRemove: {\n    fontSize: '12px',\n    textDecoration: 'underline',\n    marginLeft: '24px',\n    cursor: 'pointer'\n  }\n};\n\nclass FilterBadge extends Component {\n  onClick = id => () => this.props.onClick(id);\n  onRemove = id => () => this.props.onRemove(id);\n\n  render() {\n    const {\n      data\n    } = this.props;\n    return <div style={styles.badgeContainer} data-test=\"dashboard-filter-badge\">\n                <span style={styles.badge} onClick={this.onClick(data.id)}>\n                    {`${data.name}: ${data.values.length > 1 ? i18n.t('{{count}} selected', {\n          count: data.values.length\n        }) : data.values[0].name}`}\n                </span>\n                <span style={styles.badgeRemove} onClick={this.onRemove(data.id)}>\n                    {i18n.t('Remove')}\n                </span>\n            </div>;\n  }\n\n}\n\nFilterBadge.propTypes = {\n  data: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired,\n  onRemove: PropTypes.func.isRequired\n};\nFilterBadge.defaultProps = {\n  onClick: Function.prototype,\n  onRemove: Function.prototype\n};\nexport default FilterBadge;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport FilterBadge from './FilterBadge';\nimport { sGetNamedItemFilters } from '../../reducers/itemFilters';\nimport { acRemoveItemFilter } from '../../actions/itemFilters';\nimport { acSetActiveModalDimension } from '../../actions/activeModalDimension';\nimport classes from './styles/FilterBar.module.css';\nexport class FilterBar extends Component {\n  onBadgeRemove = id => {\n    this.props.removeItemFilter(id);\n  };\n  onBadgeClick = id => {\n    this.props.setActiveModalDimension({\n      id,\n      name: this.props.filters.find(item => item.id === id).name\n    });\n  };\n\n  render() {\n    const {\n      filters\n    } = this.props;\n    return filters.length ? // the 3 is calculated so that the FilterBar has the same vertical position as the TitleBar in relation to the ControlBar\n    <div className={classes.bar} style={{\n      top: 3\n    }}>\n                {filters.map(filter => <FilterBadge key={filter.id} data={filter} onClick={this.onBadgeClick} onRemove={this.onBadgeRemove} />)}\n            </div> : null;\n  }\n\n}\nFilterBar.propTypes = {\n  filters: PropTypes.array.isRequired,\n  removeItemFilter: PropTypes.func.isRequired,\n  setActiveModalDimension: PropTypes.func\n};\nFilterBar.defaultProps = {\n  filters: [],\n  removeItemFIlter: Function.prototype\n};\n\nconst mapStateToProps = state => ({\n  filters: sGetNamedItemFilters(state)\n});\n\nexport default connect(mapStateToProps, {\n  setActiveModalDimension: acSetActiveModalDimension,\n  removeItemFilter: acRemoveItemFilter\n})(FilterBar);","export const SET_WINDOW_HEIGHT = 'SET_WINDOW_HEIGHT';\nexport const DEFAULT_STATE_WINDOW_HEIGHT = window.innerHeight;\nexport default ((state = DEFAULT_STATE_WINDOW_HEIGHT, action) => {\n  switch (action.type) {\n    case SET_WINDOW_HEIGHT:\n      {\n        return action.value;\n      }\n\n    default:\n      return state;\n  }\n});\nexport const sGetWindowHeight = state => state.windowHeight;","import { generateUid } from 'd2/uid';\nimport { SET_PRINT_DASHBOARD, CLEAR_PRINT_DASHBOARD, SET_PRINT_DASHBOARD_LAYOUT, ADD_PRINT_DASHBOARD_ITEM, REMOVE_PRINT_DASHBOARD_ITEM, UPDATE_PRINT_DASHBOARD_ITEM } from '../reducers/printDashboard';\nimport { NEW_ITEM_SHAPE, getGridItemProperties, getPageBreakItemShape, getPrintTitlePageItemShape } from '../components/ItemGrid/gridUtil';\nimport { itemTypeMap, PAGEBREAK } from '../modules/itemTypes'; // actions\n\nexport const acSetPrintDashboard = (dashboard, items) => {\n  const val = { ...dashboard,\n    dashboardItems: items\n  };\n  return {\n    type: SET_PRINT_DASHBOARD,\n    value: val\n  };\n};\nexport const acClearPrintDashboard = () => ({\n  type: CLEAR_PRINT_DASHBOARD\n});\nexport const acUpdatePrintDashboardLayout = value => ({\n  type: SET_PRINT_DASHBOARD_LAYOUT,\n  value\n});\nexport const acAddPrintDashboardItem = item => {\n  const type = item.type;\n  delete item.type;\n  const itemPropName = itemTypeMap[type].propName;\n  const id = generateUid();\n  const gridItemProperties = getGridItemProperties(id);\n  let shape;\n\n  if (type === PAGEBREAK) {\n    const yPos = item.yPos || 0;\n    shape = getPageBreakItemShape(yPos, item.isStatic);\n  } else {\n    shape = getPrintTitlePageItemShape(item.isOneItemPerPage);\n  }\n\n  return {\n    type: ADD_PRINT_DASHBOARD_ITEM,\n    value: {\n      id,\n      type,\n      position: item.position || null,\n      [itemPropName]: item.content,\n      ...NEW_ITEM_SHAPE,\n      ...gridItemProperties,\n      ...shape\n    }\n  };\n};\nexport const acRemovePrintDashboardItem = value => ({\n  type: REMOVE_PRINT_DASHBOARD_ITEM,\n  value\n});\nexport const acUpdatePrintDashboardItem = item => ({\n  type: UPDATE_PRINT_DASHBOARD_ITEM,\n  value: item\n});","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport ViewTitleBar from '../TitleBar/ViewTitleBar';\nimport ItemGrid from '../ItemGrid/ItemGrid';\nimport FilterBar from '../FilterBar/FilterBar';\nimport DashboardsBar from '../ControlBar/DashboardsBar';\nimport { sGetIsEditing } from '../../reducers/editDashboard';\nimport { sGetIsPrinting } from '../../reducers/printDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { sGetWindowHeight } from '../../reducers/windowHeight';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { acClearEditDashboard } from '../../actions/editDashboard';\nimport { acClearPrintDashboard } from '../../actions/printDashboard';\nimport { getControlBarHeight, HEADERBAR_HEIGHT } from '../ControlBar/controlBarDimensions';\nexport const ViewDashboard = props => {\n  useEffect(() => {\n    if (props.dashboardIsEditing) {\n      props.clearEditDashboard();\n    } else if (props.dashboardIsPrinting) {\n      props.clearPrintDashboard();\n    }\n  }, [props.dashboardIsEditing, props.dashboardIsPrinting]);\n  useEffect(() => {\n    document.querySelector('.dashboard-wrapper')?.scroll(0, 0);\n  }, [props.selectedId]);\n  const height = props.windowHeight - HEADERBAR_HEIGHT - getControlBarHeight(props.controlBarRows);\n  return <>\n            <DashboardsBar />\n            <div className=\"dashboard-wrapper\" style={{\n      height\n    }}>\n                <ViewTitleBar />\n                <FilterBar />\n                <ItemGrid edit={false} />\n            </div>\n        </>;\n};\nViewDashboard.propTypes = {\n  clearEditDashboard: PropTypes.func,\n  clearPrintDashboard: PropTypes.func,\n  controlBarRows: PropTypes.number,\n  dashboardIsEditing: PropTypes.bool,\n  dashboardIsPrinting: PropTypes.bool,\n  selectedId: PropTypes.string,\n  windowHeight: PropTypes.number\n};\n\nconst mapStateToProps = state => {\n  return {\n    dashboardIsEditing: sGetIsEditing(state),\n    dashboardIsPrinting: sGetIsPrinting(state),\n    controlBarRows: sGetControlBarUserRows(state),\n    selectedId: sGetSelectedId(state),\n    windowHeight: sGetWindowHeight(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  clearEditDashboard: acClearEditDashboard,\n  clearPrintDashboard: acClearPrintDashboard\n})(ViewDashboard);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { InputField } from '@dhis2/ui';\n\nconst ItemSearchField = props => <InputField name=\"Dashboard item search\" label={i18n.t('Search for items to add to this dashboard')} type=\"text\" onChange={props.onChange} onFocus={props.onFocus} value={props.value} dataTest=\"item-search\" />;\n\nItemSearchField.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n  onFocus: PropTypes.func\n};\nexport default ItemSearchField;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { MenuItem, colors } from '@dhis2/ui';\nimport classes from './styles/HeaderMenuItem.module.css';\n\nconst HeaderMenuItem = ({\n  title\n}) => <MenuItem className={classes.item} dense key={title} disabled label={<span style={{\n  color: colors.grey800,\n  fontWeight: '600'\n}}>\n                {title}\n            </span>} />;\n\nHeaderMenuItem.propTypes = {\n  title: PropTypes.string.isRequired\n};\nexport default HeaderMenuItem;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst LaunchIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\" fill={colors.grey600} viewBox=\"0 0 24 24\">\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z\" />\n    </svg>;\n\nLaunchIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default LaunchIcon;","import React from 'react';\nimport { MenuItem, colors } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport { visTypeIcons } from '@dhis2/analytics';\nimport { getItemIcon, VISUALIZATION } from '../../modules/itemTypes';\nimport LaunchIcon from '../../icons/Launch';\nimport classes from './styles/ContentMenuItem.module.css';\n\nconst LaunchLink = ({\n  url\n}) => <a onClick={e => e.stopPropagation()} className={classes.launchLink} target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n        <LaunchIcon />\n    </a>;\n\nLaunchLink.propTypes = {\n  url: PropTypes.string\n};\n\nconst InsertButton = () => <button className={classes.buttonInsert}>{i18n.t('Insert')}</button>;\n\nconst ContentMenuItem = ({\n  type,\n  name,\n  onInsert,\n  url,\n  visType\n}) => {\n  const ItemIcon = getItemIcon(type);\n  const renderedItemIcon = type === VISUALIZATION ? visTypeIcons[visType] : <ItemIcon style={{\n    fill: colors.grey600\n  }} />;\n  return <MenuItem dense onClick={onInsert} label={<div className={classes.menuItem}>\n                    <div className={classes.label}>\n                        <span style={{\n        marginRight: '6px'\n      }}>\n                            {renderedItemIcon}\n                        </span>\n                        <span>{name}</span>\n                        {url ? <LaunchLink url={url} /> : null}\n                    </div>\n                    <InsertButton />\n                </div>} dataTest={`menu-item-${name}`} />;\n};\n\nContentMenuItem.propTypes = {\n  name: PropTypes.string,\n  type: PropTypes.string,\n  url: PropTypes.string,\n  visType: PropTypes.string,\n  onInsert: PropTypes.func\n};\nexport default ContentMenuItem;","import { sGetEditDashboardRoot } from '../../reducers/editDashboard';\nimport { itemTypeMap } from '../../modules/itemTypes';\nimport { acAddDashboardItem, acUpdateDashboardItem } from '../../actions/editDashboard';\nexport const tAddListItemContent = (type, content) => (dispatch, getState) => {\n  const state = getState();\n  const listItemType = itemTypeMap[type].propName;\n  const dashboardItems = sGetEditDashboardRoot(state).dashboardItems;\n  const dashboardItemIndex = dashboardItems.findIndex(item => item.type === type);\n  let dashboardItem; // Reports/Resources/Users dashboard item type already present in dashboard\n\n  if (dashboardItemIndex > -1) {\n    dashboardItem = dashboardItems[dashboardItemIndex];\n    dashboardItem[listItemType].push(content);\n    dispatch(acUpdateDashboardItem(dashboardItem));\n  } else {\n    dashboardItem = {\n      type: type,\n      content: [content]\n    };\n    dispatch(acAddDashboardItem(dashboardItem));\n  }\n};","import i18n from '@dhis2/d2-i18n';\nimport { VISUALIZATION, MAP, EVENT_CHART, EVENT_REPORT, USERS, REPORTS, RESOURCES, APP, MESSAGES, TEXT, SPACER } from '../../modules/itemTypes';\nexport const singleItems = [{\n  id: 'additional',\n  header: i18n.t('Additional items'),\n  items: [{\n    type: TEXT,\n    name: i18n.t('Text box'),\n    content: ''\n  }, {\n    type: MESSAGES,\n    name: i18n.t('Messages'),\n    content: 'true'\n  }, {\n    type: SPACER,\n    name: i18n.t('Spacer'),\n    content: ''\n  }]\n}]; // categorizedItems are grouped in the item selector menu\n\nexport const categorizedItems = [VISUALIZATION, MAP, EVENT_REPORT, EVENT_CHART, USERS, REPORTS, RESOURCES, APP]; // listItemTypes are included in a single dashboard item\n\nexport const listItemTypes = [REPORTS, RESOURCES, USERS];","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { MenuItem, Divider } from '@dhis2/ui';\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\nimport { tAddListItemContent } from './actions';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\nimport { getItemUrl, APP, VISUALIZATION } from '../../modules/itemTypes';\nimport { categorizedItems, listItemTypes } from './selectableItems';\nimport classes from './styles/CategorizedMenuGroup.module.css';\n\nclass CategorizedMenuGroup extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      seeMore: false\n    };\n  }\n\n  addItem = item => () => {\n    const {\n      type,\n      acAddDashboardItem,\n      tAddListItemContent\n    } = this.props;\n\n    if (type === APP) {\n      acAddDashboardItem({\n        type,\n        content: item.key\n      });\n    } else {\n      const newItem = {\n        id: item.id,\n        name: item.displayName || item.name\n      };\n\n      if (listItemTypes.includes(type)) {\n        tAddListItemContent(type, newItem);\n      } else {\n        acAddDashboardItem({\n          type,\n          content: newItem\n        });\n      }\n    }\n  };\n  toggleSeeMore = () => {\n    this.setState({\n      seeMore: !this.state.seeMore\n    });\n    this.props.onChangeItemsLimit(this.props.type);\n  };\n\n  render() {\n    const {\n      title,\n      type,\n      items,\n      hasMore\n    } = this.props;\n    return <>\n                <HeaderMenuItem title={title} />\n                {items.map(item => {\n        const itemUrl = getItemUrl(type, item, this.context.d2);\n        return <ContentMenuItem key={item.id || item.key} type={type} visType={type === VISUALIZATION ? item.type : type} name={item.displayName || item.name} onInsert={this.addItem(item)} url={itemUrl} />;\n      })}\n                {hasMore ? <MenuItem dense key={`showmore${title}`} onClick={this.toggleSeeMore} label={<button className={classes.showMoreButton}>\n                                {this.state.seeMore ? i18n.t('Show fewer') : i18n.t('Show more')}\n                            </button>} /> : null}\n                <Divider margin=\"8px 0px\" />\n            </>;\n  }\n\n}\n\nCategorizedMenuGroup.propTypes = {\n  items: PropTypes.array.isRequired,\n  title: PropTypes.string.isRequired,\n  type: PropTypes.oneOf(categorizedItems).isRequired,\n  onChangeItemsLimit: PropTypes.func.isRequired,\n  acAddDashboardItem: PropTypes.func,\n  hasMore: PropTypes.bool,\n  tAddListItemContent: PropTypes.func\n};\nCategorizedMenuGroup.contextTypes = {\n  d2: PropTypes.object.isRequired\n};\nexport default connect(null, {\n  acAddDashboardItem,\n  tAddListItemContent\n})(CategorizedMenuGroup);","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\nexport const SinglesMenuGroup = ({\n  acAddDashboardItem,\n  category\n}) => {\n  const addToDashboard = ({\n    type,\n    content\n  }) => () => {\n    acAddDashboardItem({\n      type,\n      content\n    });\n  };\n\n  return <>\n            <HeaderMenuItem title={category.header} />\n            {category.items.map(item => <ContentMenuItem key={item.type} type={item.type} name={item.name} onInsert={addToDashboard(item)} />)}\n        </>;\n};\nSinglesMenuGroup.propTypes = {\n  acAddDashboardItem: PropTypes.func,\n  category: PropTypes.object\n};\nexport default connect(null, {\n  acAddDashboardItem\n})(SinglesMenuGroup);","import React, { useState, useEffect, createRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { Popover, FlyoutMenu } from '@dhis2/ui';\nimport ItemSearchField from './ItemSearchField';\nimport CategorizedMenuGroup from './CategorizedMenuGroup';\nimport SinglesMenuGroup from './SinglesMenuGroup';\nimport { singleItems, categorizedItems } from './selectableItems';\nimport { itemTypeMap, getDefaultItemCount } from '../../modules/itemTypes';\nimport classes from './styles/ItemSelector.module.css'; // eslint-disable-next-line no-empty-pattern\n\nconst ItemSelector = ({}, context) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [filter, setFilter] = useState('');\n  const [items, setItems] = useState(null);\n  const [maxOptions, setMaxOptions] = useState(new Set());\n  useEffect(() => {\n    let queryString = '?count=11';\n\n    if ([...maxOptions.values()].length) {\n      queryString += '&max=' + [...maxOptions.values()].join('&max=');\n    }\n\n    const filterStr = filter ? `/${filter}` : '';\n    context.d2.Api.getApi().get(`dashboards/q${filterStr}${queryString}`).then(response => setItems(response)).catch(console.error);\n  }, [filter, maxOptions]);\n\n  const closeMenu = () => {\n    setIsOpen(false);\n    setFilter('');\n    setMaxOptions(new Set());\n  };\n\n  const openMenu = () => setIsOpen(true);\n\n  const getCategorizedMenuGroups = () => {\n    return categorizedItems.filter(type => {\n      const itemType = itemTypeMap[type];\n      return items && items[itemType.endPointName];\n    }).map(type => {\n      const itemType = itemTypeMap[type];\n      const itemCount = getDefaultItemCount(type);\n      const allItems = items[itemType.endPointName];\n      const hasMore = allItems.length > itemCount;\n      const displayItems = maxOptions.has(itemType.id) ? allItems : allItems.slice(0, itemCount);\n      return <CategorizedMenuGroup key={type} type={type} title={itemType.pluralTitle} items={displayItems} onChangeItemsLimit={updateMaxOptions} hasMore={hasMore} />;\n    });\n  };\n\n  const getSinglesMenuGroups = () => singleItems.map(category => <SinglesMenuGroup key={category.id} category={category} />);\n\n  const getMenuGroups = () => getCategorizedMenuGroups().concat(getSinglesMenuGroups());\n\n  const updateMaxOptions = type => {\n    if (type) {\n      const options = new Set(maxOptions);\n      options.has(type) ? options.delete(type) : options.add(type);\n      setMaxOptions(options);\n    } else {\n      setMaxOptions(new Set());\n    }\n  };\n\n  const updateFilter = ({\n    value\n  }) => setFilter(value);\n\n  const inputRef = createRef();\n  return <>\n            <span ref={inputRef}>\n                <ItemSearchField value={filter} onChange={updateFilter} onFocus={openMenu} />\n            </span>\n            {isOpen && <Popover reference={inputRef} placement=\"bottom-start\" onClickOutside={closeMenu} arrow={false} maxWidth={700}>\n                    <FlyoutMenu className={classes.menu} dataTest=\"item-menu\" maxWidth=\"700px\">\n                        {getMenuGroups()}\n                    </FlyoutMenu>\n                </Popover>}\n        </>;\n};\n\nItemSelector.contextTypes = {\n  d2: PropTypes.object.isRequired\n};\nexport default ItemSelector;","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { InputField, TextAreaField } from '@dhis2/ui';\nimport ItemSelector from '../ItemSelector/ItemSelector';\nimport { acSetDashboardTitle, acSetDashboardDescription } from '../../actions/editDashboard';\nimport { orObject } from '../../modules/util';\nimport { sGetEditDashboardRoot } from '../../reducers/editDashboard';\nimport classes from './styles/EditTitleBar.module.css';\nexport const EditTitleBar = ({\n  name,\n  description,\n  onChangeTitle,\n  onChangeDescription\n}) => {\n  const updateTitle = (_, e) => {\n    onChangeTitle(e.target.value);\n  };\n\n  const updateDescription = (_, e) => {\n    onChangeDescription(e.target.value);\n  };\n\n  return <section className={classes.section}>\n            <div className={classes.titleDescription}>\n                <InputField className={classes.title} name=\"Dashboard title input\" label={i18n.t('Dashboard title')} type=\"text\" onChange={updateTitle} value={name} placeholder={i18n.t('Untitled dashboard')} dataTest=\"dashboard-title-input\" />\n                <TextAreaField className={classes.description} name=\"Dashboard description input\" label={i18n.t('Dashboard description')} onChange={updateDescription} value={description} dataTest=\"dashboard-description-input\" />\n            </div>\n            <div className={classes.itemSelector}>\n                <ItemSelector />\n            </div>\n        </section>;\n};\nEditTitleBar.propTypes = {\n  onChangeDescription: PropTypes.func.isRequired,\n  onChangeTitle: PropTypes.func.isRequired,\n  description: PropTypes.string,\n  name: PropTypes.string\n};\nEditTitleBar.defaultProps = {\n  name: '',\n  description: ''\n};\n\nconst mapStateToProps = state => {\n  const selectedDashboard = orObject(sGetEditDashboardRoot(state));\n  return {\n    name: selectedDashboard.name,\n    description: selectedDashboard.description\n  };\n};\n\nconst mapDispatchToProps = {\n  onChangeTitle: acSetDashboardTitle,\n  onChangeDescription: acSetDashboardDescription\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(EditTitleBar);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Button, Modal, ModalContent, ModalActions, ButtonStrip, ModalTitle } from '@dhis2/ui';\nimport classes from './styles/ConfirmDeleteDialog.module.css';\nexport const ConfirmDeleteDialog = ({\n  dashboardName,\n  onDeleteConfirmed,\n  onContinueEditing,\n  open\n}) => {\n  const actions = [<Button key=\"cancel\" secondary onClick={onContinueEditing} dataTest=\"cancel-delete-dashboard\">\n            {i18n.t('Cancel')}\n        </Button>, <Button key=\"delete\" destructive onClick={onDeleteConfirmed} dataTest=\"confirm-delete-dashboard\">\n            {i18n.t('Delete')}\n        </Button>];\n  return open && <Modal onClose={onContinueEditing} small position=\"middle\">\n                <ModalTitle>{i18n.t('Delete dashboard')}</ModalTitle>\n                <ModalContent>\n                    <span className={classes.content}>\n                        {i18n.t('Deleting dashboard \"{{ dashboardName }}\" will remove it for all users. This action cannot be undone. Are you sure you want to permanently delete this dashboard?', {\n          dashboardName\n        })}\n                    </span>\n                </ModalContent>\n                <ModalActions>\n                    <ButtonStrip>{actions}</ButtonStrip>\n                </ModalActions>\n            </Modal>;\n};\nConfirmDeleteDialog.propTypes = {\n  dashboardName: PropTypes.string,\n  open: PropTypes.bool,\n  onContinueEditing: PropTypes.func,\n  onDeleteConfirmed: PropTypes.func\n};\nexport default ConfirmDeleteDialog;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport TranslationDialog from '@dhis2/d2-ui-translation-dialog';\nimport { Button, ButtonStrip } from '@dhis2/ui';\nimport ConfirmDeleteDialog from './ConfirmDeleteDialog';\nimport { tSaveDashboard, acClearEditDashboard, acSetPrintPreviewView, acClearPrintPreviewView } from '../../actions/editDashboard';\nimport { acClearPrintDashboard } from '../../actions/printDashboard';\nimport { tDeleteDashboard, acSetDashboardDisplayName } from '../../actions/dashboards';\nimport { sGetEditDashboardRoot, sGetIsNewDashboard, sGetIsPrintPreviewView } from '../../reducers/editDashboard';\nimport { apiFetchDashboard } from '../../api/dashboards';\nimport classes from './styles/EditBar.module.css';\nexport class EditBar extends Component {\n  state = {\n    translationDialogIsOpen: false,\n    dashboardModel: undefined,\n    dashboard: undefined,\n    confirmDeleteDialogOpen: false,\n    redirectUrl: undefined\n  };\n  onConfirmDelete = () => {\n    this.setState({\n      confirmDeleteDialogOpen: true\n    });\n  };\n  onSave = () => {\n    this.props.onSave().then(newId => {\n      this.setState({\n        redirectUrl: `/${newId}`\n      });\n    });\n  };\n  onPrintPreview = () => {\n    if (this.props.isPrintPreviewView) {\n      this.props.clearPrintPreview();\n      this.props.clearPrintDashboard();\n    } else {\n      this.props.showPrintPreview();\n    }\n  };\n  onDiscard = () => {\n    this.props.onDiscardChanges();\n    const redirectUrl = this.props.dashboardId ? `/${this.props.dashboardId}` : '/';\n    this.setState({\n      redirectUrl\n    });\n  };\n  onContinueEditing = () => {\n    this.setState({\n      confirmDeleteDialogOpen: false\n    });\n  };\n  onDeleteConfirmed = () => {\n    this.setState({\n      confirmDeleteDialogOpen: false\n    });\n    this.props.onDelete(this.props.dashboardId).then(() => {\n      this.setState({\n        redirectUrl: '/'\n      });\n    });\n  };\n  onTranslationsSaved = async translations => {\n    if (translations && translations.length) {\n      const dbLocale = await this.context.d2.currentUser.userSettings.get('keyDbLocale');\n      const translation = translations.find(t => t.locale === dbLocale && t.property === 'NAME');\n\n      if (translation && translation.value) {\n        this.props.onTranslate(this.props.dashboardId, translation.value);\n      }\n    }\n  };\n  fetchDashboardModel = () => {\n    if (this.props.dashboardId && !this.state.dashboard) {\n      apiFetchDashboard(this.context.dataEngine, this.props.dashboardId).then(dashboard => this.setState({\n        dashboard\n      }));\n    }\n  };\n\n  componentDidMount() {\n    this.fetchDashboardModel();\n  }\n\n  componentDidUpdate() {\n    this.fetchDashboardModel();\n  }\n\n  toggleTranslationDialog = () => {\n    this.setState({\n      translationDialogIsOpen: !this.state.translationDialogIsOpen\n    });\n  };\n  confirmDeleteDialog = () => this.props.deleteAccess && this.props.dashboardId ? <ConfirmDeleteDialog dashboardName={this.props.dashboardName} onDeleteConfirmed={this.onDeleteConfirmed} onContinueEditing={this.onContinueEditing} open={this.state.confirmDeleteDialogOpen} /> : null;\n  translationDialog = () => this.state.dashboard && this.state.dashboard.id ? <TranslationDialog className=\"translation-dialog\" d2={this.context.d2} open={this.state.translationDialogIsOpen} onRequestClose={this.toggleTranslationDialog} objectToTranslate={{ ...this.state.dashboard,\n    modelDefinition: {\n      name: 'dashboard'\n    }\n  }} fieldsToTranslate={['name', 'description']} onTranslationSaved={this.onTranslationsSaved} onTranslationError={err => console.log('translation update error', err)} /> : null;\n  renderActionButtons = () => <ButtonStrip>\n            <Button primary onClick={this.onSave} dataTest=\"save-dashboard-button\">\n                {i18n.t('Save changes')}\n            </Button>\n            <Button onClick={this.onPrintPreview}>\n                {this.props.isPrintPreviewView ? i18n.t('Exit Print preview') : i18n.t('Print preview')}\n            </Button>\n\n            {this.props.dashboardId && <Button onClick={this.toggleTranslationDialog}>\n                    {i18n.t('Translate')}\n                </Button>}\n            {this.props.dashboardId && this.props.deleteAccess && <Button onClick={this.onConfirmDelete} dataTest=\"delete-dashboard-button\">\n                    {i18n.t('Delete')}\n                </Button>}\n        </ButtonStrip>;\n\n  render() {\n    if (this.state.redirectUrl) {\n      return <Redirect to={this.state.redirectUrl} />;\n    }\n\n    const {\n      updateAccess\n    } = this.props;\n    const discardBtnText = updateAccess ? i18n.t('Exit without saving') : i18n.t('Go to dashboards');\n    return <>\n                <div className={classes.editBar}>\n                    <div className={classes.controls}>\n                        {updateAccess ? this.renderActionButtons() : null}\n                        <Button secondary onClick={this.onDiscard}>\n                            {discardBtnText}\n                        </Button>\n                    </div>\n                </div>\n                {this.translationDialog()}\n                {this.confirmDeleteDialog()}\n            </>;\n  }\n\n}\nEditBar.propTypes = {\n  clearPrintDashboard: PropTypes.func,\n  clearPrintPreview: PropTypes.func,\n  dashboardId: PropTypes.string,\n  dashboardName: PropTypes.string,\n  deleteAccess: PropTypes.bool,\n  isPrintPreviewView: PropTypes.bool,\n  showPrintPreview: PropTypes.func,\n  updateAccess: PropTypes.bool,\n  onDelete: PropTypes.func,\n  onDiscardChanges: PropTypes.func,\n  onSave: PropTypes.func,\n  onTranslate: PropTypes.func\n};\nEditBar.contextTypes = {\n  dataEngine: PropTypes.object,\n  d2: PropTypes.object\n};\n\nconst mapStateToProps = state => {\n  const dashboard = sGetEditDashboardRoot(state);\n  let deleteAccess;\n  let updateAccess;\n\n  if (sGetIsNewDashboard(state)) {\n    deleteAccess = true;\n    updateAccess = true;\n  } else {\n    updateAccess = dashboard.access ? dashboard.access.update : false;\n    deleteAccess = dashboard.access ? dashboard.access.delete : false;\n  }\n\n  return {\n    dashboardId: dashboard.id,\n    dashboardName: dashboard.name,\n    deleteAccess,\n    isPrintPreviewView: sGetIsPrintPreviewView(state),\n    updateAccess\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  clearPrintDashboard: () => dispatch(acClearPrintDashboard()),\n  clearPrintPreview: () => dispatch(acClearPrintPreviewView()),\n  onSave: () => dispatch(tSaveDashboard()).then(id => id),\n  onDelete: id => dispatch(tDeleteDashboard(id)),\n  onDiscardChanges: () => dispatch(acClearEditDashboard()),\n  onTranslate: (id, value) => dispatch(acSetDashboardDisplayName(id, value)),\n  showPrintPreview: () => dispatch(acSetPrintPreviewView())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditBar);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { NoticeBox, CenteredContent } from '@dhis2/ui';\nimport classes from './styles/NotSupportedNotice.module.css';\n\nconst NotSupportedNotice = ({\n  message\n}) => <CenteredContent position=\"top\">\n        <div className={classes.noticeContainer}>\n            <NoticeBox title={i18n.t('Not supported')} warning>\n                {message}\n            </NoticeBox>\n        </div>\n    </CenteredContent>;\n\nNotSupportedNotice.propTypes = {\n  message: PropTypes.string\n};\nexport default NotSupportedNotice;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { a4LandscapeWidthPx } from '../ItemGrid/gridUtil';\nimport classes from './styles/PrintInfo.module.css';\n\nconst PrintInfo = ({\n  isLayout\n}) => {\n  const maxWidth = a4LandscapeWidthPx < window.innerWidth ? a4LandscapeWidthPx : window.innerWidth;\n  const infoHeader = isLayout ? i18n.t('dashboard layout') : i18n.t('one item per page');\n  return <div className={classes.infoWrapper}>\n            <p className={classes.infoHeader}>\n                {`${i18n.t('Print Preview')}: ${infoHeader}`}\n            </p>\n            <div style={{\n      maxWidth\n    }}>\n                <p className={classes.info}>\n                    {`${i18n.t('For best print results')}:`}\n                </p>\n                <div className={classes.info}>\n                    <ul className={classes.infoList}>\n                        <li>{i18n.t('Use Chrome or Edge web browser')}</li>\n                        <li>\n                            {i18n.t('Wait for all dashboard items to load before printing')}\n                        </li>\n                        <li>\n                            {i18n.t('Use A4 landscape paper size and default margin settings in the browser print dialog')}\n                        </li>\n                    </ul>\n                </div>\n            </div>\n            <hr className={classes.divider} />\n        </div>;\n};\n\nPrintInfo.propTypes = {\n  isLayout: PropTypes.bool\n};\nexport default PrintInfo;","import React from 'react';\nimport { colors } from '@dhis2/ui';\n\nconst LessHorizontalIcon = () => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill={colors.grey600} viewBox=\"0 0 24 24\">\n        <path d=\"m13.2928932 6.29289322c.3905243-.39052429 1.0236893-.39052429 1.4142136 0 .3604839.36048396.3882135.92771502.0831886 1.32000622l-.0831886.09420734-4.2921068 4.29289322 4.2921068 4.2928932c.3604839.360484.3882135.927715.0831886 1.3200062l-.0831886.0942074c-.360484.3604839-.927715.3882135-1.3200062.0831886l-.0942074-.0831886-4.99999998-5c-.36048396-.360484-.3882135-.927715-.08318861-1.3200062l.08318861-.0942074z\" />\n    </svg>;\n\nexport default LessHorizontalIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Button } from '@dhis2/ui';\nimport { Link } from 'react-router-dom';\nimport LessHorizontalIcon from '../../icons/LessHorizontal';\nimport { a4LandscapeWidthPx } from '../ItemGrid/gridUtil';\nimport classes from './styles/PrintActionsBar.module.css'; // 42px set in the module css file\n\nexport const PRINT_ACTIONS_BAR_HEIGHT = 42;\n\nconst PrintActionsBar = ({\n  id\n}) => {\n  const width = a4LandscapeWidthPx < window.innerWidth ? a4LandscapeWidthPx : window.innerWidth;\n  return <>\n            <div className={classes.container}>\n                <div className={classes.inner} style={{\n        width\n      }}>\n                    <Link className={classes.link} to={`/${id}`}>\n                        <Button dataTest=\"exit-print-preview\">\n                            <LessHorizontalIcon />\n                            {i18n.t('Exit print preview')}\n                        </Button>\n                    </Link>\n                    <Button onClick={window.print}>{i18n.t('Print')}</Button>\n                </div>\n            </div>\n            <div className={classes.topMargin} />\n        </>;\n};\n\nPrintActionsBar.propTypes = {\n  id: PropTypes.string\n};\nexport default PrintActionsBar;","import sortBy from 'lodash/sortBy';\nimport { orArray } from './util';\nimport { itemTypeMap } from './itemTypes';\nexport const getTransformYPx = elStyle => {\n  if (!elStyle || !elStyle.transform) {\n    return null;\n  } // find valid transforms - those with y pixels\n  // the code is expecting the transform prop to\n  // look like:  translate(10px, 300px)\n\n\n  const transformY = elStyle.transform.split(' ')[1]?.match(/(\\d+)px/);\n\n  if (transformY) {\n    return parseInt(transformY[1]);\n  } else {\n    return null;\n  }\n};\nexport const getDomGridItemsSortedByYPos = elements => {\n  const types = Object.keys(itemTypeMap);\n  const elementsWithBoundingRect = orArray(elements).map(el => {\n    const type = Array.from(el.classList).find(className => types.indexOf(className) > -1);\n    const rect = el.getBoundingClientRect();\n    const y = getTransformYPx(el.style) || parseInt(rect.y);\n    return {\n      type,\n      classList: el.classList,\n      bottomY: y + parseInt(rect.height),\n      el\n    };\n  });\n  return sortBy(elementsWithBoundingRect, ['bottomY']);\n};","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport sortBy from 'lodash/sortBy';\nimport ReactGridLayout from 'react-grid-layout';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport cx from 'classnames';\nimport { Item } from '../Item/Item';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport { acUpdatePrintDashboardLayout } from '../../actions/printDashboard';\nimport { sGetSelectedIsLoading } from '../../reducers/selected';\nimport { sGetPrintDashboardRoot, sGetPrintDashboardItems } from '../../reducers/printDashboard';\nimport { sGetIsEditing } from '../../reducers/editDashboard';\nimport { GRID_ROW_HEIGHT, GRID_COMPACT_TYPE, MARGIN, getGridColumns, hasShape, a4LandscapeWidthPx } from './gridUtil';\nimport { getDomGridItemsSortedByYPos, getTransformYPx } from '../../modules/printUtils';\nimport { PRINT_LAYOUT } from '../Dashboard/dashboardModes';\nimport { PAGEBREAK } from '../../modules/itemTypes';\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\nimport './ItemGrid.css'; // this is set in the .dashboard-item-content css\n\nexport const ITEM_CONTENT_PADDING_BOTTOM = 4;\nexport class PrintLayoutItemGrid extends Component {\n  onLayoutChange = newLayout => {\n    this.props.updateDashboardLayout(newLayout);\n  };\n  isFirstPageBreak = item => {\n    if (item.type !== PAGEBREAK) {\n      return false;\n    }\n\n    const pageBreaks = this.props.dashboardItems.filter(i => i.type === PAGEBREAK);\n    const sortedPageBreaks = sortBy(pageBreaks, ['y']);\n    return item.y === sortedPageBreaks[0].y;\n  };\n  getItemComponent = item => {\n    // the first-page-break class is used in Edit print preview\n    const itemClassNames = cx('print', 'layout', `${item.type}`, {\n      'first-page-break': this.props.isEditing && this.isFirstPageBreak(item),\n      shortened: !!item.shortened\n    });\n    return <div key={item.i} className={itemClassNames}>\n                <Item item={item} dashboardMode={PRINT_LAYOUT} />\n            </div>;\n  };\n  getItemComponents = items => items.map(item => this.getItemComponent(item));\n\n  hideExtraPageBreaks() {\n    const sortedElements = getDomGridItemsSortedByYPos(Array.from(document.querySelectorAll('.react-grid-item')));\n    let pageBreakBottom = 0;\n    let lastItemBottom = 0;\n    let foundNonPageBreak = false;\n\n    for (let i = sortedElements.length - 1; i >= 0; --i) {\n      const item = sortedElements[i];\n\n      if (item.type === PAGEBREAK) {\n        if (!foundNonPageBreak) {\n          item.el.classList.add('removed');\n        } else {\n          pageBreakBottom = item.bottomY;\n          break;\n        }\n      } else {\n        foundNonPageBreak = true;\n        const thisItemBottom = item.bottomY;\n\n        if (thisItemBottom > lastItemBottom) {\n          lastItemBottom = thisItemBottom;\n        }\n      }\n    }\n\n    const pageHeight = 720;\n    const gridElement = document.querySelector('.react-grid-layout'); // the last page break is before the last item(s) so\n    // maxHeight is one page beyond the last page break\n\n    const maxHeight = pageBreakBottom + pageHeight;\n\n    if (gridElement) {\n      gridElement.style.height = `${maxHeight}px`;\n    }\n\n    if (this.props.isEditing) {\n      //scroll to below the title page - which is middle of the first pagebreak\n      const firstBreak = document.querySelector('.first-page-break');\n\n      if (firstBreak && firstBreak.style && firstBreak.style.transform) {\n        const yPos = getTransformYPx(firstBreak.style);\n        const scrollArea = document.querySelector('.scroll-area');\n        scrollArea && scrollArea.scroll(0, yPos + 50);\n      }\n    }\n  }\n\n  componentDidMount() {\n    this.hideExtraPageBreaks();\n  }\n\n  componentDidUpdate() {\n    this.hideExtraPageBreaks();\n  }\n\n  render() {\n    const {\n      isLoading,\n      dashboardItems\n    } = this.props;\n\n    if (!isLoading && !dashboardItems.length) {\n      return <NoContentMessage text={i18n.t('There are no items on this dashboard')} />;\n    }\n\n    const width = a4LandscapeWidthPx < window.innerWidth ? a4LandscapeWidthPx : window.innerWidth;\n    return <div className=\"grid-wrapper\">\n                {isLoading ? <Layer translucent>\n                        <CenteredContent>\n                            <CircularLoader />\n                        </CenteredContent>\n                    </Layer> : null}\n                <ReactGridLayout onLayoutChange={this.onLayoutChange} className=\"layout\" layout={dashboardItems} margin={MARGIN} cols={getGridColumns()} rowHeight={GRID_ROW_HEIGHT} width={width} compactType={GRID_COMPACT_TYPE} isDraggable={false} isResizable={false} draggableCancel=\"input,textarea\">\n                    {this.getItemComponents(dashboardItems)}\n                </ReactGridLayout>\n            </div>;\n  }\n\n}\nPrintLayoutItemGrid.propTypes = {\n  dashboardItems: PropTypes.array,\n  isEditing: PropTypes.bool,\n  isLoading: PropTypes.bool,\n  updateDashboardLayout: PropTypes.func\n};\nPrintLayoutItemGrid.defaultProps = {\n  dashboardItems: []\n};\n\nconst mapStateToProps = state => {\n  const selectedDashboard = sGetPrintDashboardRoot(state);\n  return {\n    isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n    dashboardItems: sGetPrintDashboardItems(state).filter(hasShape),\n    isEditing: sGetIsEditing(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  updateDashboardLayout: acUpdatePrintDashboardLayout\n})(PrintLayoutItemGrid);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { spacers } from '@dhis2/ui';\nimport cx from 'classnames';\nimport PrintInfo from './PrintInfo';\nimport PrintActionsBar from './PrintActionsBar';\nimport PrintLayoutItemGrid from '../ItemGrid/PrintLayoutItemGrid';\nimport { acSetPrintDashboard, acAddPrintDashboardItem, acUpdatePrintDashboardItem } from '../../actions/printDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { sGetWindowHeight } from '../../reducers/windowHeight';\nimport { sGetEditDashboardRoot, sGetEditDashboardItems } from '../../reducers/editDashboard';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport { PAGEBREAK, PRINT_TITLE_PAGE } from '../../modules/itemTypes';\nimport { a4LandscapeWidthPx, MAX_ITEM_GRID_HEIGHT } from '../ItemGrid/gridUtil';\nimport { getControlBarHeight, HEADERBAR_HEIGHT } from '../ControlBar/controlBarDimensions';\nimport { PRINT_ACTIONS_BAR_HEIGHT } from './PrintActionsBar';\nimport { DRAG_HANDLE_HEIGHT } from '../ControlBar/ControlBar';\nimport classes from './styles/PrintLayoutDashboard.module.css';\nimport './styles/print.css';\nimport './styles/print-layout.css';\nconst EDIT_BAR_HEIGHT = getControlBarHeight(1) + DRAG_HANDLE_HEIGHT;\n\nconst isLeapPage = n => {\n  // pages 5,9,13,17,21,25,29... are leap pages\n  let x = 0;\n  const startPage = 1;\n\n  const getMultiple = factor => startPage + 4 * factor;\n\n  let multiple = getMultiple(0);\n  let isLeapPage = false;\n\n  while (multiple < n) {\n    multiple = getMultiple(x);\n    ++x;\n\n    if (multiple === n) {\n      isLeapPage = true;\n      break;\n    }\n  }\n\n  return isLeapPage;\n};\n\nconst addPageBreaks = ({\n  items,\n  addDashboardItem\n}) => {\n  // add enough page breaks so that each item could\n  // be put on its own page. Due to the react-grid-layout\n  // unit system, we have to estimate roughly the size of each\n  // page. At regular intervals add a unit, like a leap year\n  let yPos = 0;\n  const yPosList = [];\n\n  for (let pageNum = 1; pageNum <= items.length; ++pageNum) {\n    if (pageNum === 1) {\n      yPos += 35;\n    } else if (isLeapPage(pageNum)) {\n      yPos += 40;\n    } else {\n      yPos += 39;\n    }\n\n    yPosList.push(yPos);\n  }\n\n  for (let i = 0; i < items.length; ++i) {\n    addDashboardItem({\n      type: PAGEBREAK,\n      yPos: yPosList[i]\n    });\n  }\n};\n\nexport class PrintLayoutDashboard extends Component {\n  state = {\n    initialized: false\n  };\n  initPrintLayoutDashboard = () => {\n    if (this.props.dashboard) {\n      this.setState({\n        initialized: true\n      });\n      this.props.setPrintDashboard(this.props.dashboard, this.props.items); // If any items are taller than one page, reduce it to one\n      // page (react-grid-layout units)\n\n      this.props.items.forEach(item => {\n        if (item.h > MAX_ITEM_GRID_HEIGHT) {\n          item.shortened = true;\n          this.props.updateDashboardItem(Object.assign({}, item, {\n            h: MAX_ITEM_GRID_HEIGHT\n          }));\n        }\n      });\n      addPageBreaks(this.props);\n      this.props.addDashboardItem({\n        type: PRINT_TITLE_PAGE,\n        isOneItemPerPage: false\n      });\n    }\n  };\n\n  componentDidMount() {\n    this.initPrintLayoutDashboard();\n  }\n\n  componentDidUpdate() {\n    if (!this.state.initialized) {\n      this.initPrintLayoutDashboard();\n    }\n  }\n\n  getWrapperStyle = () => {\n    return this.props.fromEdit ? {\n      paddingTop: spacers.dp24,\n      height: this.props.windowHeight - EDIT_BAR_HEIGHT - HEADERBAR_HEIGHT\n    } : {\n      height: this.props.windowHeight - PRINT_ACTIONS_BAR_HEIGHT\n    };\n  };\n\n  render() {\n    return <>\n                {!this.props.fromEdit && <PrintActionsBar id={this.props.dashboard.id} />}\n                <div className={cx(classes.wrapper, 'scroll-area')} style={this.getWrapperStyle()}>\n                    {!this.props.fromEdit && <PrintInfo isLayout={true} />}\n                    <div className={classes.pageOuter} style={{\n          width: a4LandscapeWidthPx\n        }} data-test=\"print-layout-page\">\n                        <PrintLayoutItemGrid />\n                    </div>\n                </div>\n            </>;\n  }\n\n}\nPrintLayoutDashboard.propTypes = {\n  addDashboardItem: PropTypes.func,\n  dashboard: PropTypes.object,\n  fromEdit: PropTypes.bool,\n  items: PropTypes.array,\n  setPrintDashboard: PropTypes.func,\n  updateDashboardItem: PropTypes.func,\n  windowHeight: PropTypes.number\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const id = sGetSelectedId(state);\n\n  if (ownProps.fromEdit) {\n    const dashboard = sGetEditDashboardRoot(state);\n    return {\n      dashboard,\n      id,\n      items: sGetEditDashboardItems(state),\n      windowHeight: sGetWindowHeight(state)\n    };\n  }\n\n  const dashboard = id ? sGetDashboardById(state, id) : null;\n  return {\n    dashboard,\n    id,\n    items: sGetDashboardItems(state),\n    windowHeight: sGetWindowHeight(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setPrintDashboard: acSetPrintDashboard,\n  addDashboardItem: acAddPrintDashboardItem,\n  updateDashboardItem: acUpdatePrintDashboardItem\n})(PrintLayoutDashboard);","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport EditTitleBar from '../TitleBar/EditTitleBar';\nimport ItemGrid from '../ItemGrid/ItemGrid';\nimport EditBar from '../ControlBar/EditBar';\nimport NotSupportedNotice from './NotSupportedNotice';\nimport { useWindowDimensions } from '../WindowDimensionsProvider';\nimport LayoutPrintPreview from './PrintLayoutDashboard';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport { acSetEditDashboard } from '../../actions/editDashboard';\nimport { sGetWindowHeight } from '../../reducers/windowHeight';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport { sGetIsPrintPreviewView } from '../../reducers/editDashboard';\nimport { getControlBarHeight, HEADERBAR_HEIGHT } from '../ControlBar/controlBarDimensions';\nimport isSmallScreen from '../../modules/isSmallScreen';\n\nconst EditDashboard = props => {\n  const {\n    width\n  } = useWindowDimensions();\n  useEffect(() => {\n    if (props.dashboard) {\n      props.setEditDashboard(props.dashboard, props.items);\n    }\n  }, [props.dashboard]);\n\n  const renderGrid = () => {\n    if (props.isPrintPreviewView) {\n      return <LayoutPrintPreview fromEdit={true} />;\n    }\n\n    const height = props.windowHeight - HEADERBAR_HEIGHT - getControlBarHeight(1);\n    return <div className=\"dashboard-wrapper\" style={{\n      height\n    }}>\n                <EditTitleBar />\n                <ItemGrid edit={true} />\n            </div>;\n  };\n\n  const renderEditView = () => <>\n            <EditBar />\n            {props.updateAccess ? renderGrid() : <NoContentMessage text={i18n.t('No access')} />}\n        </>;\n\n  return <>\n            {isSmallScreen(width) ? <NotSupportedNotice message={i18n.t('Editing dashboards on small screens is not supported.')} /> : renderEditView()}\n        </>;\n};\n\nEditDashboard.propTypes = {\n  dashboard: PropTypes.object,\n  isPrintPreviewView: PropTypes.bool,\n  items: PropTypes.array,\n  setEditDashboard: PropTypes.func,\n  updateAccess: PropTypes.bool,\n  windowHeight: PropTypes.number\n};\n\nconst mapStateToProps = state => {\n  const id = sGetSelectedId(state);\n  const dashboard = id ? sGetDashboardById(state, id) : null;\n  const updateAccess = dashboard && dashboard.access ? dashboard.access.update : false;\n  return {\n    dashboard,\n    updateAccess,\n    items: sGetDashboardItems(state),\n    isPrintPreviewView: sGetIsPrintPreviewView(state),\n    windowHeight: sGetWindowHeight(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setEditDashboard: acSetEditDashboard\n})(EditDashboard);","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport EditBar from '../ControlBar/EditBar';\nimport EditTitleBar from '../TitleBar/EditTitleBar';\nimport ItemGrid from '../ItemGrid/ItemGrid';\nimport LayoutPrintPreview from './PrintLayoutDashboard';\nimport NotSupportedNotice from './NotSupportedNotice';\nimport { acSetEditNewDashboard } from '../../actions/editDashboard';\nimport { sGetIsPrintPreviewView } from '../../reducers/editDashboard';\nimport { sGetWindowHeight } from '../../reducers/windowHeight';\nimport { getControlBarHeight, HEADERBAR_HEIGHT } from '../ControlBar/controlBarDimensions';\nimport { useWindowDimensions } from '../WindowDimensionsProvider';\nimport isSmallScreen from '../../modules/isSmallScreen';\n\nconst NewDashboard = props => {\n  const {\n    width\n  } = useWindowDimensions();\n  useEffect(() => {\n    props.setNewDashboard();\n  }, []);\n  const height = props.windowHeight - HEADERBAR_HEIGHT - getControlBarHeight(1);\n\n  const renderNewView = () => <>\n            <EditBar />\n            {props.isPrintPreviewView ? <LayoutPrintPreview fromEdit={true} /> : <div className=\"dashboard-wrapper\" style={{\n      height\n    }}>\n                    <EditTitleBar />\n                    <ItemGrid edit={true} />\n                </div>}\n        </>;\n\n  return <>\n            {isSmallScreen(width) ? <NotSupportedNotice message={i18n.t('Creating dashboards on small screens is not supported.')} /> : renderNewView()}\n        </>;\n};\n\nNewDashboard.propTypes = {\n  isPrintPreviewView: PropTypes.bool,\n  setNewDashboard: PropTypes.func,\n  windowHeight: PropTypes.number\n};\n\nconst mapStateToProps = state => ({\n  isPrintPreviewView: sGetIsPrintPreviewView(state),\n  windowHeight: sGetWindowHeight(state)\n});\n\nexport default connect(mapStateToProps, {\n  setNewDashboard: acSetEditNewDashboard\n})(NewDashboard);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ReactGridLayout from 'react-grid-layout';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport cx from 'classnames';\nimport { Item } from '../Item/Item';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport { PRINT } from '../Dashboard/dashboardModes';\nimport { sGetSelectedIsLoading } from '../../reducers/selected';\nimport { sGetPrintDashboardRoot, sGetPrintDashboardItems } from '../../reducers/printDashboard';\nimport { GRID_ROW_HEIGHT, GRID_COMPACT_TYPE, MARGIN, getGridColumns, hasShape, a4LandscapeWidthPx } from './gridUtil';\nimport { orArray } from '../../modules/util';\nimport 'react-grid-layout/css/styles.css';\nimport './ItemGrid.css';\nexport class PrintItemGrid extends Component {\n  getItemComponent = item => <div key={item.i} className={cx(item.type, 'print', 'oipp')}>\n            <Item item={item} dashboardMode={PRINT} />\n        </div>;\n  getItemComponents = items => items.map(item => this.getItemComponent(item));\n\n  render() {\n    const {\n      isLoading,\n      dashboardItems\n    } = this.props;\n\n    if (!isLoading && !dashboardItems.length) {\n      return <NoContentMessage text={i18n.t('There are no items on this dashboard')} />;\n    }\n\n    const width = a4LandscapeWidthPx < window.innerWidth ? a4LandscapeWidthPx : window.innerWidth;\n    return <>\n                {isLoading ? <Layer translucent>\n                        <CenteredContent>\n                            <CircularLoader />\n                        </CenteredContent>\n                    </Layer> : null}\n                <ReactGridLayout className=\"layout print\" layout={dashboardItems} margin={MARGIN} cols={getGridColumns()} rowHeight={GRID_ROW_HEIGHT} width={width} compactType={GRID_COMPACT_TYPE} isDraggable={false} isResizable={false} draggableCancel=\"input,textarea\">\n                    {this.getItemComponents(dashboardItems)}\n                </ReactGridLayout>\n            </>;\n  }\n\n}\nPrintItemGrid.propTypes = {\n  dashboardItems: PropTypes.array,\n  isLoading: PropTypes.bool\n};\nPrintItemGrid.defaultProps = {\n  dashboardItems: []\n};\n\nconst mapStateToProps = state => {\n  const selectedDashboard = sGetPrintDashboardRoot(state);\n  return {\n    isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n    dashboardItems: orArray(sGetPrintDashboardItems(state)).filter(hasShape)\n  };\n};\n\nexport default connect(mapStateToProps)(PrintItemGrid);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport sortBy from 'lodash/sortBy';\nimport PrintInfo from './PrintInfo';\nimport PrintActionsBar from './PrintActionsBar';\nimport PrintItemGrid from '../ItemGrid/PrintItemGrid';\nimport { acSetPrintDashboard, acAddPrintDashboardItem, acRemovePrintDashboardItem, acUpdatePrintDashboardItem } from '../../actions/printDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { sGetWindowHeight } from '../../reducers/windowHeight';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport { PAGEBREAK, PRINT_TITLE_PAGE, SPACER } from '../../modules/itemTypes';\nimport { a4LandscapeWidthPx, MAX_ITEM_GRID_HEIGHT_OIPP, MAX_ITEM_GRID_WIDTH_OIPP } from '../ItemGrid/gridUtil';\nimport { PRINT_ACTIONS_BAR_HEIGHT } from './PrintActionsBar';\nimport classes from './styles/PrintDashboard.module.css';\nimport './styles/print.css';\nimport './styles/print-oipp.css';\nexport class PrintDashboard extends Component {\n  state = {\n    initialized: false\n  };\n  initPrintDashboard = () => {\n    if (this.props.dashboard) {\n      this.setState({\n        initialized: true\n      }); //sort the items by Y pos so they print in order of top to bottom\n\n      const sortedItems = sortBy(this.props.items, ['y', 'x']);\n      this.props.setPrintDashboard(this.props.dashboard, sortedItems); // remove spacers - don't want empty pages\n\n      let spacerCount = 0;\n      this.props.items.forEach(item => {\n        if (item.type === SPACER) {\n          spacerCount += 1;\n          this.props.removeDashboardItem(item.id);\n        }\n      }); // Resize the items to the full page size\n\n      this.props.items.forEach(item => {\n        this.props.updateDashboardItem(Object.assign({}, item, {\n          w: MAX_ITEM_GRID_WIDTH_OIPP,\n          h: MAX_ITEM_GRID_HEIGHT_OIPP\n        }));\n      }); // insert page breaks into the document flow to create the \"pages\"\n      // when previewing the print\n\n      for (let i = 0; i < (this.props.items.length - spacerCount) * 2; i += 2) {\n        this.props.addDashboardItem({\n          type: PAGEBREAK,\n          position: i,\n          isStatic: false\n        });\n      }\n\n      this.props.addDashboardItem({\n        type: PRINT_TITLE_PAGE,\n        isOneItemPerPage: true\n      });\n    }\n  };\n\n  componentDidMount() {\n    this.initPrintDashboard();\n  }\n\n  componentDidUpdate() {\n    if (!this.state.initialized) {\n      this.initPrintDashboard();\n    }\n  }\n\n  render() {\n    const height = this.props.windowHeight - PRINT_ACTIONS_BAR_HEIGHT;\n    return <>\n                <PrintActionsBar id={this.props.dashboard.id} />\n                <div className={classes.wrapper} style={{\n        height\n      }}>\n                    <PrintInfo isLayout={false} />\n                    <div className={classes.pageOuter} style={{\n          width: a4LandscapeWidthPx\n        }} data-test=\"print-oipp-page\">\n                        <PrintItemGrid />\n                    </div>\n                </div>\n            </>;\n  }\n\n}\nPrintDashboard.propTypes = {\n  addDashboardItem: PropTypes.func,\n  dashboard: PropTypes.object,\n  items: PropTypes.array,\n  removeDashboardItem: PropTypes.func,\n  setPrintDashboard: PropTypes.func,\n  updateDashboardItem: PropTypes.func,\n  windowHeight: PropTypes.number\n};\n\nconst mapStateToProps = state => {\n  const id = sGetSelectedId(state);\n  const dashboard = id ? sGetDashboardById(state, id) : null;\n  return {\n    dashboard,\n    id,\n    items: sGetDashboardItems(state),\n    windowHeight: sGetWindowHeight(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setPrintDashboard: acSetPrintDashboard,\n  addDashboardItem: acAddPrintDashboardItem,\n  removeDashboardItem: acRemovePrintDashboardItem,\n  updateDashboardItem: acUpdatePrintDashboardItem\n})(PrintDashboard);","import { SET_WINDOW_HEIGHT } from '../reducers/windowHeight';\nexport const acSetWindowHeight = value => ({\n  type: SET_WINDOW_HEIGHT,\n  value\n});","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport isEmpty from 'lodash/isEmpty';\nimport i18n from '@dhis2/d2-i18n';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport debounce from 'lodash/debounce';\nimport DashboardsBar from '../ControlBar/DashboardsBar';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport ViewDashboard from './ViewDashboard';\nimport EditDashboard from './EditDashboard';\nimport NewDashboard from './NewDashboard';\nimport PrintDashboard from './PrintDashboard';\nimport PrintLayoutDashboard from './PrintLayoutDashboard';\nimport { tSelectDashboard } from '../../actions/dashboards';\nimport { acSetWindowHeight } from '../../actions/windowHeight';\nimport { sDashboardsIsFetching, sGetAllDashboards } from '../../reducers/dashboards';\nimport { sGetSelectedId, NON_EXISTING_DASHBOARD_ID } from '../../reducers/selected';\nimport { EDIT, NEW, VIEW, PRINT, PRINT_LAYOUT, isPrintMode } from './dashboardModes';\n\nconst setHeaderbarVisibility = mode => {\n  const header = document.getElementsByTagName('header')[0];\n\n  if (isPrintMode(mode)) {\n    header.classList.add('hidden');\n  } else {\n    header.classList.remove('hidden');\n  }\n};\n\nconst dashboardMap = {\n  [VIEW]: <ViewDashboard />,\n  [EDIT]: <EditDashboard />,\n  [NEW]: <NewDashboard />,\n  [PRINT]: <PrintDashboard />,\n  [PRINT_LAYOUT]: <PrintLayoutDashboard />\n};\nexport const Dashboard = ({\n  id,\n  mode,\n  dashboardsLoaded,\n  dashboardsIsEmpty,\n  routeId,\n  selectDashboard,\n  setWindowHeight\n}) => {\n  useEffect(() => {\n    setHeaderbarVisibility(mode);\n  }, [mode]);\n  useEffect(() => {\n    if (dashboardsLoaded && !dashboardsIsEmpty) {\n      selectDashboard(routeId);\n    }\n  }, [dashboardsLoaded, dashboardsIsEmpty, routeId]);\n  useEffect(() => {\n    const onResize = debounce(() => setWindowHeight(window.innerHeight), 300);\n    window.addEventListener('resize', onResize);\n    return () => {\n      window.removeEventListener('resize', onResize);\n    };\n  }, []);\n\n  if (!dashboardsLoaded) {\n    return <Layer translucent>\n                <CenteredContent>\n                    <CircularLoader />\n                </CenteredContent>\n            </Layer>;\n  }\n\n  if (mode === NEW) {\n    return dashboardMap[mode];\n  }\n\n  if (dashboardsIsEmpty) {\n    return <>\n                <DashboardsBar />\n                <NoContentMessage text={i18n.t('No dashboards found. Use the + button to create a new dashboard.')} />\n            </>;\n  }\n\n  if (id === NON_EXISTING_DASHBOARD_ID) {\n    return <>\n                <DashboardsBar />\n                <NoContentMessage text={i18n.t('Requested dashboard not found')} />\n            </>;\n  }\n\n  if (id === null) {\n    return <Layer translucent>\n                <CenteredContent>\n                    <CircularLoader />\n                </CenteredContent>\n            </Layer>;\n  }\n\n  return dashboardMap[mode];\n};\nDashboard.propTypes = {\n  dashboardsIsEmpty: PropTypes.bool,\n  dashboardsLoaded: PropTypes.bool,\n  id: PropTypes.string,\n  match: PropTypes.object,\n  // provided by the react-router-dom\n  mode: PropTypes.string,\n  routeId: PropTypes.string,\n  selectDashboard: PropTypes.func,\n  setWindowHeight: PropTypes.func\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const dashboards = sGetAllDashboards(state);\n  return {\n    dashboardsIsEmpty: isEmpty(dashboards),\n    dashboardsLoaded: !sDashboardsIsFetching(state),\n    id: sGetSelectedId(state),\n    routeId: ownProps.match?.params?.dashboardId || null\n  };\n};\n\nexport default connect(mapStateToProps, {\n  selectDashboard: tSelectDashboard,\n  setWindowHeight: acSetWindowHeight\n})(Dashboard);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { AlertBar, AlertStack } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport { sGetAlertMessage } from '../../reducers/alert';\nimport { acClearAlertMessage } from '../../actions/alert';\nexport const Alert = ({\n  message,\n  onClose\n}) => message ? <AlertStack>\n            <AlertBar onHidden={onClose} permanent>\n                {message}\n            </AlertBar>\n        </AlertStack> : null;\nAlert.propTypes = {\n  message: PropTypes.string,\n  onClose: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  message: sGetAlertMessage(state)\n});\n\nexport default connect(mapStateToProps, {\n  onClose: acClearAlertMessage\n})(Alert);","import { RECEIVED_USER } from '../reducers/user';\nexport const acReceivedUser = value => ({\n  type: RECEIVED_USER,\n  value\n});","import { SET_DIMENSIONS } from '../reducers/dimensions';\nimport { apiFetchDimensions } from '@dhis2/analytics';\nimport { sGetSettingsDisplayNameProperty } from '../reducers/settings';\nexport const acSetDimensions = dimensions => ({\n  type: SET_DIMENSIONS,\n  value: dimensions\n});\nexport const tSetDimensions = () => async (dispatch, getState, dataEngine) => {\n  const onSuccess = dimensions => {\n    dispatch(acSetDimensions(dimensions));\n  };\n\n  const onError = error => {\n    console.log('Error (apiFetchDimensions): ', error);\n    return error;\n  };\n\n  try {\n    const displayNameProp = sGetSettingsDisplayNameProperty(getState());\n    const dimensions = await apiFetchDimensions(dataEngine, displayNameProp); // filter out CATEGORY that are not of type ATTRIBUTE\n\n    const filteredDimensions = dimensions.filter(dim => dim.dimensionType !== 'CATEGORY' || dim.dimensionType === 'CATEGORY' && dim.dataDimensionType === 'ATTRIBUTE');\n    return onSuccess(filteredDimensions);\n  } catch (err) {\n    return onError(err);\n  }\n};","import { getInstance } from 'd2';\nimport { onError } from './index';\nconst SYSTEM_SETTINGS = ['keyGatherAnalyticalObjectStatisticsInDashboardViews'];\nexport const apiFetchSystemSettings = () => {\n  const endPoint = '/systemSettings';\n  const url = `${endPoint}?${SYSTEM_SETTINGS.map(s => `key=${s}`).join('&')}`;\n  return getInstance().then(d2 => d2.Api.getApi().get(url)).catch(onError);\n};","import { ADD_SETTINGS } from '../reducers/settings';\nimport { apiFetchSystemSettings } from '../api/settings';\nexport const acAddSettings = value => ({\n  type: ADD_SETTINGS,\n  value\n});\nexport const tAddSettings = (...extraSettings) => async dispatch => {\n  const onSuccess = fetchedSettings => {\n    dispatch(acAddSettings(Object.assign({}, fetchedSettings, ...extraSettings)));\n  };\n\n  const onError = error => {\n    console.log('Error (apiFetchSystemSettings): ', error);\n    return error;\n  };\n\n  try {\n    const systemSettings = await apiFetchSystemSettings();\n    return onSuccess({ ...systemSettings\n    });\n  } catch (err) {\n    return onError(err);\n  }\n};","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { CssVariables } from '@dhis2/ui';\nimport Dashboard from './Dashboard/Dashboard';\nimport AlertBar from './AlertBar/AlertBar';\nimport { acReceivedUser } from '../actions/user';\nimport { tFetchDashboards } from '../actions/dashboards';\nimport { tSetControlBarRows } from '../actions/controlBar';\nimport { tSetShowDescription } from '../actions/selected';\nimport { tSetDimensions } from '../actions/dimensions';\nimport { tAddSettings } from '../actions/settings';\nimport { EDIT, VIEW, NEW, PRINT, PRINT_LAYOUT } from './Dashboard/dashboardModes';\nimport './App.css';\nexport class App extends Component {\n  componentDidMount() {\n    this.props.setCurrentUser(this.props.d2.currentUser);\n    this.props.fetchDashboards();\n    this.props.setControlBarRows();\n    this.props.setShowDescription();\n    this.props.setDimensions();\n    this.props.addSettings();\n  }\n\n  getChildContext() {\n    return {\n      baseUrl: this.props.baseUrl,\n      i18n,\n      d2: this.props.d2,\n      dataEngine: this.props.dataEngine\n    };\n  }\n\n  render() {\n    return <>\n                <CssVariables colors spacers />\n                <Router>\n                    <Switch>\n                        <Route exact path=\"/\" render={props => <Dashboard {...props} mode={VIEW} />} />\n                        <Route exact path=\"/new\" render={props => <Dashboard {...props} mode={NEW} />} />\n                        <Route exact path=\"/:dashboardId\" render={props => <Dashboard {...props} mode={VIEW} />} />\n                        <Route exact path=\"/:dashboardId/edit\" render={props => <Dashboard {...props} mode={EDIT} />} />\n                        <Route exact path=\"/:dashboardId/printoipp\" render={props => <Dashboard {...props} mode={PRINT} />} />\n                        <Route exact path=\"/:dashboardId/printlayout\" render={props => <Dashboard {...props} mode={PRINT_LAYOUT} />} />\n                    </Switch>\n                </Router>\n                <AlertBar />\n            </>;\n  }\n\n}\nApp.propTypes = {\n  addSettings: PropTypes.func.isRequired,\n  fetchDashboards: PropTypes.func.isRequired,\n  setControlBarRows: PropTypes.func.isRequired,\n  setCurrentUser: PropTypes.func.isRequired,\n  setDimensions: PropTypes.func.isRequired,\n  setShowDescription: PropTypes.func.isRequired,\n  baseUrl: PropTypes.string,\n  d2: PropTypes.object,\n  dataEngine: PropTypes.object\n};\nApp.childContextTypes = {\n  baseUrl: PropTypes.string,\n  i18n: PropTypes.object,\n  d2: PropTypes.object,\n  dataEngine: PropTypes.object\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchDashboards: () => dispatch(tFetchDashboards()),\n    setControlBarRows: () => dispatch(tSetControlBarRows()),\n    setCurrentUser: currentUser => dispatch(acReceivedUser(currentUser)),\n    setDimensions: () => dispatch(tSetDimensions()),\n    setShowDescription: () => dispatch(tSetShowDescription()),\n    addSettings: () => dispatch(tAddSettings())\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(App);","/** @module reducers/selected */\nimport { validateReducer } from '../modules/util';\nexport const SET_STYLE = 'SET_STYLE';\nexport const DEFAULT_STATE_STYLE = 'LIST';\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\n\nconst style = (state = DEFAULT_STATE_STYLE, action) => {\n  switch (action.type) {\n    case SET_STYLE:\n      return validateReducer(action.value, DEFAULT_STATE_STYLE);\n\n    default:\n      return state;\n  }\n};\n\nexport default style;\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\n\nexport const sGetStyleRoot = state => state.style;","import { combineReducers } from 'redux';\nimport dashboards from './dashboards';\nimport selected from './selected';\nimport dashboardsFilter from './dashboardsFilter';\nimport controlBar from './controlBar';\nimport visualizations from './visualizations';\nimport editDashboard from './editDashboard';\nimport printDashboard from './printDashboard';\nimport messages from './messages';\nimport user from './user';\nimport alert from './alert';\nimport itemFilters from './itemFilters';\nimport style from './style';\nimport dimensions from './dimensions';\nimport settings from './settings';\nimport activeModalDimension from './activeModalDimension';\nimport windowHeight from './windowHeight';\nexport default combineReducers({\n  dashboards,\n  selected,\n  dashboardsFilter,\n  controlBar,\n  visualizations,\n  messages,\n  user,\n  editDashboard,\n  printDashboard,\n  itemFilters,\n  style,\n  alert,\n  dimensions,\n  settings,\n  activeModalDimension,\n  windowHeight\n});","import { createStore, applyMiddleware, compose } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport reducer from './reducers';\n\nconst configureStore = dataEngine => {\n  const middleware = [thunk.withExtraArgument(dataEngine)]; // Enable Redux devtools if extension is installed instead of redux-logger\n\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n  if (!window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ && process.env.NODE_ENV !== 'production') {\n    middleware.push(createLogger());\n  }\n\n  return createStore(reducer, composeEnhancers(applyMiddleware(...middleware)));\n};\n\nexport default configureStore;","//------------------------------------------------------------------------------\n// <auto-generated>\n// This code was generated by d2-i18n-generate.\n//\n// Changes to this file may cause incorrect behavior and will be lost if\n// the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\nimport i18n from '@dhis2/d2-i18n';\nimport arTranslations from './ar/translations.json';\nimport ar_IQTranslations from './ar_IQ/translations.json';\nimport ckbTranslations from './ckb/translations.json';\nimport csTranslations from './cs/translations.json';\nimport daTranslations from './da/translations.json';\nimport enTranslations from './en/translations.json';\nimport esTranslations from './es/translations.json';\nimport frTranslations from './fr/translations.json';\nimport idTranslations from './id/translations.json';\nimport kmTranslations from './km/translations.json';\nimport loTranslations from './lo/translations.json';\nimport myTranslations from './my/translations.json';\nimport nbTranslations from './nb/translations.json';\nimport prsTranslations from './prs/translations.json';\nimport psTranslations from './ps/translations.json';\nimport ptTranslations from './pt/translations.json';\nimport pt_BRTranslations from './pt_BR/translations.json';\nimport ruTranslations from './ru/translations.json';\nimport svTranslations from './sv/translations.json';\nimport tetTranslations from './tet/translations.json';\nimport tgTranslations from './tg/translations.json';\nimport ukTranslations from './uk/translations.json';\nimport urTranslations from './ur/translations.json';\nimport uzTranslations from './uz/translations.json';\nimport uz_CyrlTranslations from './uz_Cyrl/translations.json';\nimport viTranslations from './vi/translations.json';\nimport zhTranslations from './zh/translations.json';\nimport zh_CNTranslations from './zh_CN/translations.json';\nconst namespace = 'default';\ni18n.addResources('ar', namespace, arTranslations);\ni18n.addResources('ar_IQ', namespace, ar_IQTranslations);\ni18n.addResources('ckb', namespace, ckbTranslations);\ni18n.addResources('cs', namespace, csTranslations);\ni18n.addResources('da', namespace, daTranslations);\ni18n.addResources('en', namespace, enTranslations);\ni18n.addResources('es', namespace, esTranslations);\ni18n.addResources('fr', namespace, frTranslations);\ni18n.addResources('id', namespace, idTranslations);\ni18n.addResources('km', namespace, kmTranslations);\ni18n.addResources('lo', namespace, loTranslations);\ni18n.addResources('my', namespace, myTranslations);\ni18n.addResources('nb', namespace, nbTranslations);\ni18n.addResources('prs', namespace, prsTranslations);\ni18n.addResources('ps', namespace, psTranslations);\ni18n.addResources('pt', namespace, ptTranslations);\ni18n.addResources('pt_BR', namespace, pt_BRTranslations);\ni18n.addResources('ru', namespace, ruTranslations);\ni18n.addResources('sv', namespace, svTranslations);\ni18n.addResources('tet', namespace, tetTranslations);\ni18n.addResources('tg', namespace, tgTranslations);\ni18n.addResources('uk', namespace, ukTranslations);\ni18n.addResources('ur', namespace, urTranslations);\ni18n.addResources('uz', namespace, uzTranslations);\ni18n.addResources('uz_Cyrl', namespace, uz_CyrlTranslations);\ni18n.addResources('vi', namespace, viTranslations);\ni18n.addResources('zh', namespace, zhTranslations);\ni18n.addResources('zh_CN', namespace, zh_CNTranslations);\nexport default i18n;","import React from 'react';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport dhis2theme from '@dhis2/d2-ui-core/theme/mui3.theme';\nimport { Provider as ReduxProvider } from 'react-redux';\nimport { D2Shim } from '@dhis2/app-runtime-adapter-d2';\nimport { useDataEngine } from '@dhis2/app-runtime';\nimport WindowDimensionsProvider from './components/WindowDimensionsProvider';\nimport App from './components/App';\nimport configureStore from './configureStore';\nimport './AppWrapper.css';\nimport './locales';\n\nconst muiTheme = () => createMuiTheme(dhis2theme);\n\nconst d2Config = {\n  schemas: ['chart', 'map', 'report', 'reportTable', 'eventChart', 'eventReport', 'dashboard', 'organisationUnit', 'userGroup']\n}; // TODO: ER and EV plugins require the auth header in development mode.\n// Remove this when these plugins are rewritten\n\nconst authorization = process.env.REACT_APP_DHIS2_AUTHORIZATION || null;\n\nif (authorization) {\n  d2Config.headers = {\n    Authorization: authorization\n  };\n}\n\nconst AppWrapper = () => {\n  const dataEngine = useDataEngine();\n  return <ReduxProvider store={configureStore(dataEngine)}>\n            <MuiThemeProvider theme={muiTheme()}>\n                <D2Shim d2Config={d2Config} i18nRoot=\"./i18n\">\n                    {({\n          d2\n        }) => {\n          if (!d2) {\n            // TODO: Handle errors in d2 initialization\n            return null;\n          }\n\n          return <WindowDimensionsProvider>\n                                <App d2={d2} dataEngine={dataEngine} />\n                            </WindowDimensionsProvider>;\n        }}\n                </D2Shim>\n            </MuiThemeProvider>\n        </ReduxProvider>;\n};\n\nexport default AppWrapper;","import i18n from '@dhis2/d2-i18n';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\nimport ExtensionIcon from '@material-ui/icons/Extension';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport PersonIcon from '@material-ui/icons/Person';\nimport FontDownloadIcon from '@material-ui/icons/FontDownload';\nimport EmailIcon from '@material-ui/icons/Email';\nimport CropFreeIcon from '@material-ui/icons/CropFree';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\nimport { getBaseUrl } from './util'; // Item types\n\nexport const VISUALIZATION = 'VISUALIZATION';\nexport const REPORT_TABLE = 'REPORT_TABLE';\nexport const CHART = 'CHART';\nexport const MAP = 'MAP';\nexport const EVENT_REPORT = 'EVENT_REPORT';\nexport const EVENT_CHART = 'EVENT_CHART';\nexport const APP = 'APP';\nexport const REPORTS = 'REPORTS';\nexport const RESOURCES = 'RESOURCES';\nexport const USERS = 'USERS';\nexport const MESSAGES = 'MESSAGES';\nexport const TEXT = 'TEXT';\nexport const SPACER = 'SPACER';\nexport const PAGEBREAK = 'PAGEBREAK';\nexport const PRINT_TITLE_PAGE = 'PRINT_TITLE_PAGE';\nconst DOMAIN_TYPE_AGGREGATE = 'AGGREGATE';\nconst DOMAIN_TYPE_TRACKER = 'TRACKER'; // Dashboard helpers\n\nexport const isVisualizationType = item => !!itemTypeMap[item.type].isVisualizationType;\nexport const hasMapView = itemType => itemTypeMap[itemType].domainType === DOMAIN_TYPE_AGGREGATE;\nexport const isTrackerDomainType = itemType => itemTypeMap[itemType].domainType === DOMAIN_TYPE_TRACKER;\nexport const getDefaultItemCount = itemType => itemTypeMap[itemType].defaultItemCount || 5;\nexport const getAppName = itemType => itemTypeMap[itemType].appName || ''; // Item type map\n\nexport const itemTypeMap = {\n  [VISUALIZATION]: {\n    id: VISUALIZATION,\n    endPointName: 'visualizations',\n    propName: 'visualization',\n    pluralTitle: i18n.t('Visualizations'),\n    appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n    appName: 'Data Visualizer',\n    defaultItemCount: 10\n  },\n  [REPORT_TABLE]: {\n    id: REPORT_TABLE,\n    endPointName: 'visualizations',\n    dataStatisticsName: 'REPORT_TABLE_VIEW',\n    propName: 'visualization',\n    pluralTitle: i18n.t('Pivot tables'),\n    domainType: DOMAIN_TYPE_AGGREGATE,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n    appName: 'Data Visualizer'\n  },\n  [CHART]: {\n    id: CHART,\n    endPointName: 'visualizations',\n    propName: 'visualization',\n    dataStatisticsName: 'CHART_VIEW',\n    pluralTitle: i18n.t('Charts'),\n    domainType: DOMAIN_TYPE_AGGREGATE,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n    appName: 'Data Visualizer'\n  },\n  [MAP]: {\n    id: MAP,\n    endPointName: 'maps',\n    dataStatisticsName: 'MAP_VIEW',\n    propName: 'map',\n    pluralTitle: i18n.t('Maps'),\n    domainType: DOMAIN_TYPE_AGGREGATE,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-maps/?id=${id}`,\n    appName: 'Maps'\n  },\n  [EVENT_REPORT]: {\n    id: EVENT_REPORT,\n    endPointName: 'eventReports',\n    propName: 'eventReport',\n    pluralTitle: i18n.t('Event reports'),\n    domainType: DOMAIN_TYPE_TRACKER,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-event-reports/?id=${id}`,\n    appName: 'Event Reports'\n  },\n  [EVENT_CHART]: {\n    id: EVENT_CHART,\n    endPointName: 'eventCharts',\n    propName: 'eventChart',\n    pluralTitle: i18n.t('Event charts'),\n    domainType: DOMAIN_TYPE_TRACKER,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-event-visualizer/?id=${id}`,\n    appName: 'Event Visualizer'\n  },\n  [APP]: {\n    endPointName: 'apps',\n    propName: 'appKey',\n    pluralTitle: i18n.t('Apps')\n  },\n  [REPORTS]: {\n    id: REPORTS,\n    endPointName: 'reports',\n    propName: 'reports',\n    pluralTitle: i18n.t('Reports'),\n    appUrl: (id, type) => {\n      switch (type) {\n        case 'HTML':\n          return `dhis-web-reports/#/standard-report/view/${id}`;\n\n        case 'JASPER_REPORT_TABLE':\n        case 'JASPER_JDBC':\n        default:\n          return `api/reports/${id}/data.pdf?t=${new Date().getTime()}`;\n      }\n    }\n  },\n  [RESOURCES]: {\n    id: RESOURCES,\n    endPointName: 'resources',\n    propName: 'resources',\n    pluralTitle: i18n.t('Resources'),\n    appUrl: id => `api/documents/${id}/data`\n  },\n  [USERS]: {\n    id: USERS,\n    endPointName: 'users',\n    propName: 'users',\n    pluralTitle: i18n.t('Users'),\n    appUrl: id => `dhis-web-dashboard-integration/profile.action?id=${id}`\n  },\n  [TEXT]: {\n    id: TEXT,\n    propName: 'text'\n  },\n  [MESSAGES]: {\n    propName: 'messages'\n  },\n  [SPACER]: {\n    propName: 'text'\n  },\n  [PAGEBREAK]: {\n    propName: 'text'\n  },\n  [PRINT_TITLE_PAGE]: {\n    propName: 'text'\n  }\n};\nexport const getEndPointName = type => itemTypeMap[type].endPointName;\nexport const getDataStatisticsName = type => itemTypeMap[type].dataStatisticsName || null;\nexport const getItemUrl = (type, item, d2) => {\n  let url;\n\n  if (type === APP) {\n    url = item.launchUrl;\n  }\n\n  if (itemTypeMap[type] && itemTypeMap[type].appUrl) {\n    url = `${getBaseUrl(d2)}/${itemTypeMap[type].appUrl(item.id, item.type)}`;\n  }\n\n  return url;\n};\nexport const getItemIcon = type => {\n  switch (type) {\n    case REPORT_TABLE:\n    case EVENT_REPORT:\n    case REPORTS:\n      return TableIcon;\n\n    case CHART:\n    case EVENT_CHART:\n      return ChartIcon;\n\n    case MAP:\n      return MapIcon;\n\n    case APP:\n      return ExtensionIcon;\n\n    case RESOURCES:\n      return DescriptionIcon;\n\n    case USERS:\n      return PersonIcon;\n\n    case TEXT:\n      return FontDownloadIcon;\n\n    case MESSAGES:\n      return EmailIcon;\n\n    case SPACER:\n      return CropFreeIcon;\n\n    default:\n      return NotInterestedIcon;\n  }\n};","import isObject from 'lodash/isObject'; // validation\n\nexport function orNull(param) {\n  return param === undefined ? null : param;\n}\nexport function orArray(param) {\n  return Array.isArray(param) ? param : [];\n}\nexport function orObject(param) {\n  return isObject(param) ? param : {};\n} // array\n\nexport function arrayGetById(array, id) {\n  return array.find(item => item.id === id);\n} // object\n\nexport function arrayToIdMap(array) {\n  return array.reduce((obj, item) => {\n    obj[item.id] = item;\n    return obj;\n  }, {});\n} // date\n\nexport function getDate() {\n  const y = Math.floor(Math.random() * 3) + 2015;\n  const M = Math.floor(Math.random() * 12) + 1;\n  const d = Math.floor(Math.random() * 28) + 1; // const h = Math.floor(Math.random() * 23) + 1;\n  // const m = Math.floor(Math.random() * 59) + 1;\n  // const s = Math.floor(Math.random() * 59) + 1;\n\n  return new Date(`${y}-${M}-${d}`).toJSON().replace('T', ' ').substr(0, 10);\n}\nexport const formatDate = (value, uiLocale) => {\n  if (typeof global.Intl !== 'undefined' && Intl.DateTimeFormat) {\n    const locale = uiLocale || 'en';\n    return new Intl.DateTimeFormat(locale, {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    }).format(new Date(value));\n  }\n\n  return value.substr(0, 19).replace('T', ' ');\n};\n/**\n * Sorts an array of objects based on provided date property\n *\n * @param {Array} items Array of objects\n * @param {String} dateProp Name of the date property to be used for sorting\n * @param {Boolean} ascending Whether to sort ascending or descending\n */\n\nexport const sortByDate = (items, dateProp, ascending = true) => {\n  const values = Object.values(items);\n  values.sort((a, b) => {\n    const aDate = new Date(a[dateProp]);\n    const bDate = new Date(b[dateProp]);\n    return ascending ? aDate - bDate : bDate - aDate;\n  });\n  return values;\n}; // reducer validator\n\nexport const validateReducer = (value, defaultValue) => value === undefined || value === null ? defaultValue : value;\nexport const getBaseUrl = d2 => {\n  const api = d2.Api.getApi();\n  const idx = api.baseUrl.indexOf('/api');\n  return idx > -1 ? api.baseUrl.slice(0, idx) : api.baseUrl;\n};","import isFunction from 'd2-utilizr/lib/isFunction';\nimport { orObject } from '../../modules/util'; // Dimensions for the react-grid-layout\n\nexport const GRID_COMPACT_TYPE = 'vertical'; // vertical | horizonal | null\n\nexport const GRID_ROW_HEIGHT = 10;\nconst GRID_COLUMN_WIDTH_PX = 20;\nconst GRID_LAYOUT = 'FLEXIBLE'; // FIXED | FLEXIBLE\n\nexport const MARGIN = [10, 10];\nexport const NEW_ITEM_SHAPE = {\n  x: 0,\n  y: 0,\n  w: 20,\n  h: 29\n}; // Dimensions for getShape\n\nconst NUMBER_OF_ITEM_COLS = 2;\nconst GRID_COLUMNS = 60;\nconst MAX_ITEM_GRID_WIDTH = GRID_COLUMNS - 1;\nexport const MAX_ITEM_GRID_HEIGHT = 34;\nexport const MAX_ITEM_GRID_HEIGHT_OIPP = 35;\nexport const MAX_ITEM_GRID_WIDTH_OIPP = 56; // for A4 landscape (297x210mm)\n// 794 px = (21cm / 2.54) * 96 pixels/inch\n// 1122 px = 29.7 /2.54 * 96 pixels/inch\n// const a4LandscapeHeightPx = 794\n\nexport const a4LandscapeWidthPx = 1102;\nexport const getGridColumns = () => {\n  switch (GRID_LAYOUT) {\n    case 'FLEXIBLE':\n      return GRID_COLUMNS;\n\n    case 'FIXED':\n      return Math.floor((window.innerWidth - 20) / GRID_COLUMN_WIDTH_PX);\n\n    default:\n      return GRID_COLUMNS;\n  }\n}; // isNonNegativeInteger\n\nconst isNonNegativeInteger = x => Number.isInteger(x) && x >= 0; // Does the item have all the shape properties?\n\n\nexport const hasShape = item => isNonNegativeInteger(item.x) && isNonNegativeInteger(item.y) && isNonNegativeInteger(item.w) && isNonNegativeInteger(item.h); // returns a rectangular grid block dimensioned with x, y, w, h in grid units.\n// based on a grid with 3 items across\n\nexport const getShape = i => {\n  if (!isNonNegativeInteger(i)) {\n    throw new Error('Invalid grid block number');\n  }\n\n  const col = i % NUMBER_OF_ITEM_COLS;\n  const row = Math.floor(i / NUMBER_OF_ITEM_COLS);\n  const itemWidth = Math.floor(MAX_ITEM_GRID_WIDTH / NUMBER_OF_ITEM_COLS);\n  const itemHeight = GRID_ROW_HEIGHT * 2;\n  return {\n    x: col * itemWidth,\n    y: row * itemHeight,\n    w: itemWidth,\n    h: itemHeight\n  };\n};\nexport const getGridItemProperties = itemId => {\n  return {\n    i: itemId,\n    minH: 4 // minimum height for item\n\n  };\n};\nexport const getPageBreakItemShape = (yPos, isStatic = true) => {\n  return {\n    x: 0,\n    y: yPos,\n    w: MAX_ITEM_GRID_WIDTH,\n    h: 5,\n    static: !!isStatic,\n    minH: 1\n  };\n};\nexport const getPrintTitlePageItemShape = isOneItemPerPage => {\n  return {\n    x: 0,\n    y: 0,\n    w: isOneItemPerPage ? MAX_ITEM_GRID_WIDTH_OIPP : MAX_ITEM_GRID_WIDTH,\n    h: MAX_ITEM_GRID_HEIGHT,\n    static: true,\n    minH: 1\n  };\n};\n/**\n * Calculates the grid item's original height in pixels based\n * on the height in grid units. This calculation\n * is copied directly from react-grid-layout GridItem.js (calcPosition)\n *\n * @param {Object} item item containing shape (x, y, w, h)\n */\n\nexport const getOriginalHeight = item => {\n  const originalHeight = Math.round(GRID_ROW_HEIGHT * item.h + Math.max(0, item.h - 1) * MARGIN[1]);\n  return {\n    originalHeight\n  };\n};\n/**\n * Returns an array of items containing the x, y, w, h dimensions\n * and the item's originalheight in pixels\n * @function\n * @param {Array} items\n * @returns {Array}\n */\n\nexport const withShape = items => items.map((item, index) => {\n  const itemWithShape = hasShape(item) ? item : Object.assign({}, item, getShape(index));\n  return Object.assign({}, itemWithShape, getOriginalHeight(itemWithShape));\n});\nexport const getGridItemDomId = id => `item-${id}`;\nexport function onItemResize(id) {\n  const el = orObject(document.querySelector(`#${getGridItemDomId(id)}`));\n  if (isFunction(el.setViewportSize)) setTimeout(() => el.setViewportSize(el.clientWidth - 5, el.clientHeight - 5), 10);\n}","import isObject from 'lodash/isObject';\nimport { itemTypeMap } from './itemTypes';\nexport const getVisualizationFromItem = item => {\n  if (!isObject(item)) {\n    return null;\n  }\n\n  const propName = itemTypeMap[item.type]?.propName;\n  return item[propName] || item.reportTable || item.chart || item.map || item.eventReport || item.eventChart || {};\n};\nexport const getVisualizationId = item => getVisualizationFromItem(item).id;\nexport const getVisualizationName = item => getVisualizationFromItem(item).name;","import { REPORT_TABLE, CHART, MAP, EVENT_REPORT, EVENT_CHART, itemTypeMap } from '../../../../modules/itemTypes';\nimport { getVisualizationId } from '../../../../modules/item';\nimport { getGridItemDomId } from '../../../ItemGrid/gridUtil'; //external plugins\n\nconst itemTypeToExternalPlugin = {\n  [MAP]: 'mapPlugin',\n  [EVENT_REPORT]: 'eventReportPlugin',\n  [EVENT_CHART]: 'eventChartPlugin'\n};\n\nconst hasIntegratedPlugin = type => [CHART, REPORT_TABLE].includes(type);\n\nconst getPlugin = type => {\n  if (hasIntegratedPlugin(type)) {\n    return true;\n  }\n\n  const pluginName = itemTypeToExternalPlugin[type];\n  return global[pluginName];\n};\n\nexport const pluginIsAvailable = type => !!getPlugin(type);\nexport const loadPlugin = (plugin, config, credentials) => {\n  if (!(plugin && plugin.load)) {\n    return;\n  }\n\n  plugin.url = credentials.baseUrl;\n  plugin.loadingIndicator = true;\n  plugin.dashboard = true;\n\n  if (credentials.auth) {\n    plugin.auth = credentials.auth;\n  }\n\n  plugin.load(config);\n};\nexport const getLink = (item, baseUrl) => {\n  const appUrl = itemTypeMap[item.type].appUrl(getVisualizationId(item));\n  return `${baseUrl}/${appUrl}`;\n};\nexport const load = async (item, visualization, {\n  credentials,\n  activeType,\n  options = {}\n}) => {\n  const config = { ...visualization,\n    ...options,\n    el: getGridItemDomId(item.id)\n  };\n  const type = activeType || item.type;\n  const plugin = getPlugin(type);\n  loadPlugin(plugin, config, credentials);\n};\nexport const resize = item => {\n  const plugin = getPlugin(item.type);\n\n  if (plugin && plugin.resize) {\n    plugin.resize(getGridItemDomId(item.id));\n  }\n};\nexport const unmount = (item, activeType) => {\n  const plugin = getPlugin(activeType);\n\n  if (plugin && plugin.unmount) {\n    plugin.unmount(getGridItemDomId(item.id));\n  }\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemHeaderWrap\":\"ItemHeader_itemHeaderWrap__JcBP7\",\"itemTitle\":\"ItemHeader_itemTitle__34rHa\",\"itemActionsWrap\":\"ItemHeader_itemActionsWrap__Gx3D9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ControlBar_root__iikeX\",\"dragging\":\"ControlBar_dragging__3lq79\",\"content\":\"ControlBar_content__26Z33\",\"draghandle\":\"ControlBar_draghandle__27zum\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"DashboardItemChip_link__21drZ\",\"icon\":\"DashboardItemChip_icon__2hcIR\",\"selected\":\"DashboardItemChip_selected__r00uP\",\"unselected\":\"DashboardItemChip_unselected__2H9l2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ClearButton_button__33ZbK\",\"icon\":\"ClearButton_icon__vTJm3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Filter_container__1Vxdh\",\"input\":\"Filter_input__14lhU\",\"focused\":\"Filter_focused__Lvyz3\",\"searchIcon\":\"Filter_searchIcon__2ojUp\",\"searchButton\":\"Filter_searchButton__1tMTB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ShowMoreButton_container__riJz_\",\"showMore\":\"ShowMoreButton_showMore__3S3He\",\"disabled\":\"ShowMoreButton_disabled__2FQNA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"DashboardsBar_container__1xuCo\",\"expanded\":\"DashboardsBar_expanded__3lVl8\",\"controls\":\"DashboardsBar_controls__3PhmY\",\"newLink\":\"DashboardsBar_newLink__2PkLQ\",\"collapsed\":\"DashboardsBar_collapsed__3CY9n\",\"chipContainer\":\"DashboardsBar_chipContainer__IRxuN\"};"],"sourceRoot":""}
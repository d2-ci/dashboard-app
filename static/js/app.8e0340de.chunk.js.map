{"version":3,"sources":["D2App/components/ControlBar/styles/ControlBar.module.css","D2App/components/ControlBar/styles/DashboardItemChip.module.css","D2App/components/ControlBar/styles/ClearButton.module.css","D2App/components/ControlBar/styles/Filter.module.css","D2App/components/ControlBar/styles/ShowMoreButton.module.css","D2App/components/ControlBar/styles/DashboardsBar.module.css","D2App/components/ItemFilter/styles/FilterSelector.module.css","D2App/components/TitleBar/styles/ViewTitleBar.module.css","D2App/components/Item/VisualizationItem/Visualization/styles/NoVisualizationMessage.module.css","D2App/components/Item/VisualizationItem/Visualization/styles/LoadingMask.module.css","D2App/components/Item/VisualizationItem/styles/FatalErrorBoundary.module.css","D2App/components/Item/ItemHeader/styles/DeleteItemButton.module.css","D2App/components/Item/ItemHeader/styles/PrintItemInfo.module.css","D2App/components/Item/VisualizationItem/styles/ItemFooter.module.css","D2App/components/Item/ListItem/Item.module.css","D2App/components/Item/PrintTitlePageItem/styles/Item.module.css","D2App/components/FilterBar/styles/FilterBar.module.css","D2App/components/ItemSelector/styles/HeaderMenuItem.module.css","D2App/components/ItemSelector/styles/ContentMenuItem.module.css","D2App/components/ItemSelector/styles/CategorizedMenuGroup.module.css","D2App/components/ItemSelector/styles/ItemSelector.module.css","D2App/components/TitleBar/styles/EditTitleBar.module.css","D2App/modules/itemTypes.js","D2App/modules/util.js","D2App/components/ItemGrid/gridUtil.js","D2App/components/ControlBar/styles/ConfirmDeleteDialog.module.css","D2App/components/ControlBar/styles/EditBar.module.css","D2App/components/Dashboard/styles/NotSupportedNotice.module.css","D2App/components/Dashboard/styles/PrintInfo.module.css","D2App/components/Dashboard/styles/PrintActionsBar.module.css","D2App/components/Dashboard/styles/PrintLayoutDashboard.module.css","D2App/components/Dashboard/styles/PrintDashboard.module.css","D2App/modules/isSmallScreen.js","D2App/components/WindowDimensionsProvider.js","D2App/components/ControlBar/ControlBar.js","D2App/icons/Star.js","D2App/api/dataStatistics.js","D2App/components/ControlBar/DashboardItemChip.js","D2App/icons/AddCircle.js","D2App/icons/Search.js","D2App/icons/Clear.js","D2App/components/ControlBar/ClearButton.js","D2App/reducers/dashboardsFilter.js","D2App/components/ControlBar/Filter.js","D2App/actions/dashboardsFilter.js","D2App/components/ControlBar/assets/icons.js","D2App/components/ControlBar/ShowMoreButton.js","D2App/components/ControlBar/controlBarDimensions.js","D2App/reducers/controlBar.js","D2App/modules/uiBackendItemConverter.js","D2App/reducers/dashboards.js","D2App/reducers/selected.js","D2App/api/userDataStore.js","D2App/api/controlBar.js","D2App/actions/controlBar.js","D2App/components/ControlBar/DashboardsBar.js","D2App/widgets/NoContentMessage.js","D2App/components/Item/VisualizationItem/assets/icons.js","D2App/reducers/user.js","D2App/reducers/dimensions.js","D2App/reducers/itemFilters.js","D2App/actions/itemFilters.js","D2App/reducers/messages.js","D2App/api/messages.js","D2App/components/Item/MessagesItem/actions.js","D2App/reducers/alert.js","D2App/actions/alert.js","D2App/reducers/visualizations.js","D2App/actions/visualizations.js","D2App/api/metadata.js","D2App/api/index.js","D2App/api/dashboards.js","D2App/api/description.js","D2App/actions/selected.js","D2App/api/localStorage.js","D2App/actions/dashboards.js","D2App/components/ItemFilter/FilterDialog.js","D2App/reducers/settings.js","D2App/reducers/activeModalDimension.js","D2App/actions/activeModalDimension.js","D2App/components/ItemFilter/FilterSelector.js","D2App/components/TitleBar/ViewTitleBar.js","D2App/components/Item/VisualizationItem/Visualization/DefaultPlugin.js","D2App/components/Item/VisualizationItem/Visualization/NoVisualizationMessage.js","D2App/components/Item/VisualizationItem/Visualization/MapPlugin.js","D2App/components/Item/VisualizationItem/Visualization/LoadingMask.js","D2App/components/Item/VisualizationItem/Visualization/getFilteredVisualization.js","D2App/components/Item/VisualizationItem/Visualization/getVisualizationConfig.js","D2App/modules/memoizeOne.js","D2App/components/Item/VisualizationItem/Visualization/Visualization.js","D2App/components/Item/VisualizationItem/FatalErrorBoundary.js","D2App/components/Item/ItemHeader/ViewItemActions.js","D2App/components/Item/ItemHeader/DeleteItemButton.js","D2App/reducers/editDashboard.js","D2App/api/editDashboard.js","D2App/actions/editDashboard.js","D2App/components/Item/ItemHeader/EditItemActions.js","D2App/icons/Info.js","D2App/components/Item/ItemHeader/PrintItemInfo.js","D2App/components/Dashboard/dashboardModes.js","D2App/components/Item/ItemHeader/ItemHeader.js","D2App/components/Item/VisualizationItem/ItemHeaderButtons.js","D2App/components/Item/VisualizationItem/ItemFooter.js","D2App/components/Item/VisualizationItem/Item.js","D2App/widgets/Line.js","D2App/components/Item/MessagesItem/Item.js","D2App/components/Item/NotSupportedItem/Item.js","D2App/icons/Description.js","D2App/icons/Delete.js","D2App/components/Item/ListItem/Item.js","D2App/components/Item/ListItem/actions.js","D2App/reducers/printDashboard.js","D2App/components/Item/TextItem/Item.js","D2App/components/Item/AppItem/Item.js","D2App/components/Item/SpacerItem/Item.js","D2App/components/Item/PageBreakItem/Item.js","D2App/components/Item/PrintTitlePageItem/Item.js","D2App/components/Item/Item.js","D2App/components/Item/ProgressiveLoadingContainer.js","D2App/components/ItemGrid/ViewItemGrid.js","D2App/components/FilterBar/FilterBadge.js","D2App/components/FilterBar/FilterBar.js","D2App/actions/printDashboard.js","D2App/components/Dashboard/ViewDashboard.js","D2App/components/ItemSelector/ItemSearchField.js","D2App/components/ItemSelector/HeaderMenuItem.js","D2App/icons/Launch.js","D2App/components/ItemSelector/ContentMenuItem.js","D2App/components/ItemSelector/actions.js","D2App/components/ItemSelector/selectableItems.js","D2App/components/ItemSelector/CategorizedMenuGroup.js","D2App/components/ItemSelector/SinglesMenuGroup.js","D2App/components/ItemSelector/ItemSelector.js","D2App/components/TitleBar/EditTitleBar.js","D2App/components/ItemGrid/EditItemGrid.js","D2App/components/ControlBar/ConfirmDeleteDialog.js","D2App/components/ControlBar/EditBar.js","D2App/components/Dashboard/NotSupportedNotice.js","D2App/components/Dashboard/PrintInfo.js","D2App/icons/LessHorizontal.js","D2App/components/Dashboard/PrintActionsBar.js","D2App/modules/printUtils.js","D2App/components/ItemGrid/PrintLayoutItemGrid.js","D2App/components/Dashboard/PrintLayoutDashboard.js","D2App/reducers/windowHeight.js","D2App/components/Dashboard/EditDashboard.js","D2App/components/Dashboard/NewDashboard.js","D2App/components/ItemGrid/PrintItemGrid.js","D2App/components/Dashboard/PrintDashboard.js","D2App/actions/windowHeight.js","D2App/components/Dashboard/Dashboard.js","D2App/components/AlertBar/AlertBar.js","D2App/actions/user.js","D2App/api/settings.js","D2App/components/App.js","D2App/actions/dimensions.js","D2App/actions/settings.js","D2App/reducers/style.js","D2App/reducers/index.js","D2App/configureStore.js","D2App/locales/index.js","D2App/AppWrapper.js","D2App/modules/item.js","D2App/components/Item/VisualizationItem/Visualization/plugin.js","D2App/components/Item/ItemHeader/styles/ItemHeader.module.css"],"names":["module","exports","VISUALIZATION","REPORT_TABLE","CHART","MAP","EVENT_REPORT","EVENT_CHART","APP","REPORTS","RESOURCES","USERS","MESSAGES","TEXT","SPACER","PAGEBREAK","PRINT_TITLE_PAGE","DOMAIN_TYPE_AGGREGATE","DOMAIN_TYPE_TRACKER","isVisualizationType","item","itemTypeMap","type","hasMapView","itemType","domainType","isTrackerDomainType","getDefaultItemCount","defaultItemCount","getAppName","appName","id","endPointName","propName","pluralTitle","i18n","t","appUrl","dataStatisticsName","Date","getTime","getEndPointName","getDataStatisticsName","getItemUrl","baseUrl","url","launchUrl","getItemIcon","TableIcon","ChartIcon","MapIcon","ExtensionIcon","DescriptionIcon","PersonIcon","FontDownloadIcon","EmailIcon","CropFreeIcon","NotInterestedIcon","orArray","param","Array","isArray","orObject","isObject","arrayToIdMap","array","reduce","obj","formatDate","value","uiLocale","global","Intl","DateTimeFormat","locale","year","month","day","format","substr","replace","validateReducer","defaultValue","undefined","GRID_COMPACT_TYPE","GRID_ROW_HEIGHT","MARGIN","SM_SCREEN_GRID_COLUMNS","MARGIN_SM","GRID_PADDING_PX","GRID_COLUMNS","NEW_ITEM_SHAPE","x","y","w","h","MAX_ITEM_GRID_WIDTH","MAX_ITEM_GRID_HEIGHT","MAX_ITEM_GRID_HEIGHT_OIPP","MAX_ITEM_GRID_WIDTH_OIPP","A4_LANDSCAPE_WIDTH_PX","isNonNegativeInteger","Number","isInteger","hasShape","withShape","items","map","i","Object","assign","col","row","Math","floor","itemWidth","itemHeight","getShape","originalH","getGridWidth","windowWidthPx","getBreakpoint","SMALL_SCREEN_BREAKPOINT","getProportionalHeight","wPx","getItemWHPx","hPx","ratioWH","gridUnitHeightPx","round","console","log","toFixed","newWPx","newHPx","getSmallLayout","sortBy","getGridItemProperties","itemId","minH","getPageBreakItemShape","yPos","isStatic","static","getPrintTitlePageItemShape","isOneItemPerPage","getItemHeightPx","isSmallScreen","smallOriginalH","gridUnits","colOrRowSize","marginPx","max","getGridItemDomId","width","WindowDimensionsCtx","createContext","windowDims","height","window","innerHeight","innerWidth","WindowDimensionsProvider","children","dimensions","setDimensions","useState","useEffect","handleResize","debounce","addEventListener","removeEventListener","Provider","useWindowDimensions","useContext","ControlBar","React","Component","constructor","props","super","onStartDrag","this","setState","dragging","onDrag","onEndDrag","event","preventDefault","stopPropagation","newHeight","clientY","onChangeHeight","requestAnimationFrame","renderDragHandle","data-testid","className","classes","draghandle","style","onMouseDown","state","render","rootClass","cx","root","content","defaultProps","StarIcon","xmlns","viewBox","d","fill","apiPostDataStatistics","async","eventType","d2","getInstance","Api","getApi","post","DashboardItemChip","starred","selected","label","dashboardId","onClick","chipProps","selectedState","unselected","icon","Star","debouncedPostStatistics","link","to","data-test","AddCircleIcon","colors","teal600","SearchIcon","ClearIcon","grey800","ClearButton","onClear","button","Clear","color","SET_DASHBOARDS_FILTER","CLEAR_DASHBOARDS_FILTER","sGetDashboardsFilter","dashboardsFilter","mapDispatchToProps","setDashboardsFilter","clearDashboardsFilter","connect","filterText","isMaxHeight","onKeypressEnter","onToggleMaxHeight","focusedClassName","setFocusedClassName","searchButton","Search","searchIcon","container","onFocus","focused","onBlur","input","placeholder","onChange","target","onKeyUp","keyCode","ChevronDown","ChevronUp","ShowMoreButton","disabled","containerRef","useRef","buttonLabel","onButtonClicked","buttonEl","current","MouseEvent","bubbles","cancelable","dispatchEvent","ref","placement","onMouseOver","onMouseOut","showMore","aria-label","getRowsHeight","rows","getControlBarHeight","FIRST_ROW_PADDING_HEIGHT","SET_CONTROLBAR_USER_ROWS","combineReducers","userRows","action","sGetControlBarUserRows","controlBar","sGetControlBarRoot","spacerContent","emptyTextItemContent","isTextType","text","convertUiItemsToBackend","isUiSpacerType","convertBackendItemsToUi","isBackendSpacerType","gridProperties","SET_DASHBOARDS","ADD_DASHBOARDS","SET_DASHBOARD_STARRED","SET_DASHBOARD_DISPLAY_NAME","SET_DASHBOARD_ITEMS","DEFAULT_STATE_DASHBOARDS","byId","EMPTY_DASHBOARD","updateDashboardProp","prop","sGetDashboardsRoot","dashboards","sGetDashboardById","sDashboardsIsFetching","sGetAllDashboards","sGetDashboardItems","sGetStarredDashboards","values","filter","dashboard","sGetUnstarredDashboards","getCustomDashboards","data","arrayFrom","name","displayName","description","displayDescription","favorite","owner","user","created","split","join","lastUpdated","access","numberOfItems","dashboardItems","length","SET_SELECTED_ID","SET_SELECTED_ISLOADING","SET_SELECTED_SHOWDESCRIPTION","SET_SELECTED_ITEM_ACTIVE_TYPE","CLEAR_SELECTED_ITEM_ACTIVE_TYPES","DEFAULT_STATE_SELECTED_SHOWDESCRIPTION","DEFAULT_STATE_SELECTED_ITEM_ACTIVE_TYPES","isLoading","showDescription","itemActiveTypes","activeType","sGetSelectedRoot","sGetSelectedId","sGetSelectedIsLoading","sGetSelectedShowDescription","sGetSelectedItemActiveType","NAMESPACE","hasNamespace","currentUser","dataStore","has","getNamespace","get","create","apiPostUserDataStoreValue","key","set","apiGetUserDataStoreValue","namespace","keys","find","k","KEY_CONTROLBAR_ROWS","acSetControlBarUserRows","withRouter","selectedId","history","setRows","createRef","scrollToTop","scroll","toggleMaxHeight","newRows","cancelMaxHeight","getFilteredDashboards","filteredDashboards","arraySort","toLowerCase","includes","containerClass","expanded","collapsed","viewableRows","rowHeightProp","min","apiPostControlBarRows","controls","newLink","AddCircle","Filter","push","chips","chipContainerClasses","chipContainer","getDashboardChips","marginTop","NoContentMessage","padding","textAlign","fontSize","fontWeight","grey600","ThreeDots","SpeechBubble","margin","fillRule","transform","Warning","Fullscreen","ExitFullscreen","RECEIVED_USER","DEFAULT_STATE_USER","username","isSuperuser","sGetUserUsername","SET_DIMENSIONS","DEFAULT_DIMENSIONS","getDimensionById","DIMENSION_ID_PERIOD","DIMENSION_ID_ORGUNIT","sGetDimensions","CLEAR_ITEM_FILTERS","SET_ITEM_FILTERS","ADD_ITEM_FILTER","REMOVE_ITEM_FILTER","DEFAULT_STATE_ITEM_FILTERS","sGetItemFiltersRoot","itemFilters","sGetNamedItemFilters","createSelector","filters","arr","dimension","acRemoveItemFilter","RECEIVED_MESSAGES","sGetMessagesRoot","messages","messageConversationsQuery","resource","params","fields","order","pageSize","tGetMessages","dataEngine","messageConversations","query","error","getMessages","dispatch","err","SET_ALERT_MESSAGE","CLEAR_ALERT_MESSAGE","sGetAlertMessage","alert","acClearAlertMessage","ADD_VISUALIZATION","CLEAR_VISUALIZATIONS","DEFAULT_STATE_VISUALIZATIONS","isEmpty","p","sGetVisualization","visualizations","sGetVisualizationsRoot","acAddVisualization","getIdNameFields","rename","getDimensionFields","withItems","arrayClean","getAxesFields","getFavoriteFields","withDimensions","withOptions","getFavoritesFields","apiFetchVisualization","getVisualizationId","onError","getDashboardItemsFields","withFavorite","getDashboardFields","dashboardsQuery","paging","dashboardQuery","starDashboardMutation","unstarDashboardMutation","deleteDashboardMutation","apiFetchDashboard","variables","KEY_SHOW_DESCRIPTION","acSetSelectedId","acSetSelectedIsLoading","acSetSelectedShowDescription","tSetSelectedDashboardById","getState","alertTimeout","setTimeout","onSuccess","acAppendDashboards","customDashboard","acSetDashboardItems","localStorage","setItem","forEach","getVisualizationFromItem","clearTimeout","tUpdateShowDescription","apiPostShowDescription","tFetchDashboards","acSetDashboards","apiFetchDashboards","tStarDashboard","isStarred","acSetDashboardStarred","mutate","apiStarDashboard","tDeleteDashboard","apiDeleteDashboard","Promise","resolve","initiallySelectedItems","addItemFilter","removeItemFilter","displayNameProperty","onClose","setFilters","useD2","onSelectItems","dimensionId","onDeselectItems","itemIdsToRemove","newList","onReorderItems","itemIds","oldList","reorderedList","dataTest","position","large","commonProps","onSelect","onDeselect","onReorder","selectedItems","selectedPeriods","ouItems","renderDialogContent","secondary","primary","filterItems","ADD_SETTINGS","DEFAULT_SETTINGS","keyDateFormat","keyAnalysisRelativePeriod","keyAnalysisDigitGroupSeparator","rootOrganisationUnit","keyGatherAnalyticalObjectStatisticsInDashboardViews","sGetSettings","settings","sGetSettingsDisplayNameProperty","sGatherAnalyticalObjectStatisticsInDashboardViews","SET_ACTIVE_MODAL_DIMENSION","CLEAR_ACTIVE_MODAL_DIMENSION","DEFAULT_STATE_ACTIVE_MODAL_DIMENSION","sGetActiveModalDimension","activeModalDimension","acSetActiveModalDimension","clearActiveModalDimension","setActiveModalDimension","showPopover","setShowPopover","onCloseDialog","buttonContainer","onClickOutside","reference","arrow","onDimensionClick","selectedIds","ViewTitleBar","moreOptionsIsOpen","setMoreOptionsIsOpen","sharingDialogIsOpen","setSharingDialogIsOpen","redirectUrl","setRedirectUrl","onToggleStarredDashboard","onShowHideDescription","toggleSharingDialog","toggleMoreOptions","StarBorder","showHideDescriptionLabel","toggleStarredDashboardLabel","buttonRef","userAccess","descriptionClasses","descContainer","desc","noDesc","titleBar","title","actions","titleBarIcon","strip","update","editLink","manage","shareButton","small","moreButton","dense","open","onRequestClose","stateProps","dispatchProps","ownProps","DefaultPlugin","visualization","options","useConfig","credentials","auth","defaultHeaders","Authorization","prevItem","prevActiveType","load","unmount","shouldPluginReload","reloadAllowed","visChanged","NoVisualizationMessage","message","MapPlugin","applyFilters","mapViews","mapView","layer","pluginIsAvailable","hideTitle","LoadingMask","center","getFilteredVisualization","visRows","visColumns","columns","visFilters","dimensionFound","dimensionObjects","getWithoutId","object","getVisualizationConfig","originalType","extractedMapView","mv","VIS_TYPE_COLUMN","VIS_TYPE_PIVOT_TABLE","layout","getAdaptedUiLayoutByType","memoizeOne","fn","lastArgs","lastValue","args","every","arg","Visualization","pluginLoaded","onLoadingComplete","memoizedGetFilteredVisualization","memoizedGetVisualizationConfig","availableHeight","availableWidth","pluginProps","d2Config","forDashboard","FatalErrorBoundary","errorFound","componentDidCatch","info","ViewItemActions","actionButtons","itemActionsWrap","DeleteItemButton","deleteItemButton","red500","RECEIVED_EDIT_DASHBOARD","RECEIVED_NOT_EDITING","START_NEW_DASHBOARD","RECEIVED_TITLE","RECEIVED_DESCRIPTION","ADD_DASHBOARD_ITEM","REMOVE_DASHBOARD_ITEM","UPDATE_DASHBOARD_ITEM","RECEIVED_DASHBOARD_LAYOUT","SET_PRINT_PREVIEW_VIEW","CLEAR_PRINT_PREVIEW_VIEW","DEFAULT_STATE_EDIT_DASHBOARD","NEW_DASHBOARD_STATE","printPreviewView","sGetEditDashboardRoot","editDashboard","sGetIsEditing","sGetIsPrintPreviewView","sGetEditDashboardItems","createDashboardMutation","updateDashboardMutation","generatePayload","acClearEditDashboard","acAddDashboardItem","itemPropName","generateUid","gridItemProperties","shape","acUpdateDashboardItem","acRemoveDashboardItem","tSaveDashboard","dashboardToSave","response","uid","updateDashboard","postDashboard","WarningIcon","PrintWarning","warning","Info","EDIT","NEW","VIEW","PRINT","PRINT_LAYOUT","isEditMode","mode","isPrintMode","isViewMode","ItemHeader","forwardRef","dashboardMode","isShortened","rest","Actions","EditItemActions","PrintItemInfo","getItemActionsMap","itemHeaderWrap","itemTitle","iconFill","ItemHeaderButtons","menuIsOpen","setMenuIsOpen","onSelectActiveType","isTrackerType","onViewTable","closeMenu","onViewChart","onViewMap","canViewAs","isSingleValue","isYearOverYear","VIS_TYPE_GAUGE","VIS_TYPE_PIE","interpretationMenuLabel","activeFooter","ViewAsMenuItems","isFullscreen","onToggleFullscreen","href","getLink","onToggleFooter","fullscreenSupported","ItemFooter","line","scrollContainer","Item","showFooter","configLoaded","isFullscreenSupported","el","document","querySelector","itemDomElSelector","requestFullscreen","webkitRequestFullscreen","handleFullscreenChange","fullscreenElement","webkitFullscreenElement","exitFullscreen","webkitExitFullscreen","getUniqueKey","uniqueId","onToggleItemExpanded","setActiveType","getActiveType","isEditing","getAvailableHeight","context","calculatedHeight","headerRef","clientHeight","memoizedGetContentHeight","contentRef","offsetHeight","getAvailableWidth","rect","getBoundingClientRect","ITEM_CONTENT_PADDING","measuredHeight","preferMeasured","updateVisualization","gatherDataStatistics","e","onfullscreenchange","onwebkitfullscreenchange","componentWillUnmount","componentDidUpdate","prevProps","gridWidth","setViewportSize","clientWidth","pluginResize","getVisualizationName","shortened","contextType","Function","prototype","backgroundColor","grey200","border","Line","PRIVATE","messageTypes","VALIDATION_RESULT","TICKET","SYSTEM","list","listStyleType","paddingLeft","seeAll","marginBottom","sender","lineHeight","snippet","maxHeight","overflow","MessagesContainer","setUiLocale","userSettings","getUiLocale","getMessageHref","msg","msgIdentifier","messageType","modeClass","latestMsg","slice","getMessageSender","readClass","read","msgDate","location","messageCount","getMessageItems","NotSupportedItem","display","justifyContent","alignItems","align","grey500","DeleteIcon","getItemTitle","tRemoveListItemContent","dashboardItem","listItemType","newContent","contentItems","index","findIndex","getContentItems","contentItem","deleteButton","deletebutton","deleteicon","grey900","Description","itemicon","SET_PRINT_DASHBOARD","CLEAR_PRINT_DASHBOARD","ADD_PRINT_DASHBOARD_ITEM","SET_PRINT_DASHBOARD_LAYOUT","REMOVE_PRINT_DASHBOARD_ITEM","UPDATE_PRINT_DASHBOARD_ITEM","DEFAULT_STATE_PRINT_DASHBOARD","DEFAULT_DASHBOARD_ITEMS","NEW_PRINT_DASHBOARD_STATE","sGetPrintDashboardRoot","printDashboard","sGetIsPrinting","sGetPrintDashboardItems","textDiv","whiteSpace","textField","fontStretch","onChangeText","updatedItem","viewItem","textDivStyle","editItem","onEdit","multiline","fullWidth","printItem","textItem","getIframeSrc","appDetails","iframeSrc","ouIds","ouFilter","path","appKey","system","installedApps","app","dashboardWidget","src","SpacerItem","PageBreakItem","PrintTitlePageItem","titlePage","filterTitle","listItems","filterListItem","val","filterList","getItemFilterList","viewDashboard","sGetPrintDashboardName","sGetPrintDashboardDescription","GridItem","VisualizationItem","MessagesItem","ListItem","TextItem","AppItem","getGridItem","ProgressiveLoadingContainer","shouldLoad","shouldLoadHandler","handlerOptions","passive","checkShouldLoad","bufferPx","bufferFactor","bottom","top","removeHandler","registerHandler","debounceMs","getElementsByClassName","componentDidMount","eventProps","pick","selectedDashboard","expandedItems","setExpandedItems","displayItems","setDisplayItems","layoutSm","setLayoutSm","setGridWidth","getItemsWithAdjustedHeight","clickedId","isExpanded","newExpandedItems","expandedItem","translucent","rowHeight","cols","lg","sm","breakpoints","layouts","compactType","containerPadding","isDraggable","isResizable","draggableCancel","onWidthChange","containerWidth","getItemComponent","styles","badgeContainer","borderRadius","white","badge","cursor","badgeRemove","textDecoration","marginLeft","FilterBadge","onRemove","count","FilterBar","onBadgeRemove","onBadgeClick","bar","removeItemFIlter","acSetPrintDashboard","acClearPrintDashboard","acAddPrintDashboardItem","acUpdatePrintDashboardItem","dashboardIsEditing","dashboardIsPrinting","controlBarRows","clearEditDashboard","clearPrintDashboard","contentHeight","ViewItemGrid","ItemSearchField","HeaderMenuItem","LaunchIcon","LaunchLink","launchLink","rel","InsertButton","buttonInsert","ContentMenuItem","onInsert","visType","ItemIcon","renderedItemIcon","visTypeIcons","menuItem","marginRight","singleItems","header","categorizedItems","listItemTypes","tAddListItemContent","dashboardItemIndex","hasMore","onChangeItemsLimit","seeMore","setSeeMore","addItem","newItem","itemUrl","showMoreButton","category","addToDashboard","ItemSelector","isOpen","setIsOpen","setFilter","setItems","maxOptions","setMaxOptions","Set","queryString","filterStr","then","catch","updateMaxOptions","delete","add","inputRef","maxWidth","menu","itemCount","allItems","concat","EditTitleBar","onChangeTitle","onChangeDescription","section","titleDescription","_","itemSelector","acUpdateDashboardLayout","onLayoutChange","newLayout","onResizeStop","oldItem","ConfirmDeleteDialog","dashboardName","onDeleteConfirmed","onContinueEditing","destructive","deleteAccess","updateAccess","sGetIsNewDashboard","isPrintPreviewView","clearPrintPreview","onSave","onDelete","onDiscardChanges","onTranslate","acSetDashboardDisplayName","showPrintPreview","useDataEngine","translationDlgIsOpen","setTranslationDlgIsOpen","setDashboard","confirmDeleteDlgIsOpen","setConfirmDeleteDlgIsOpen","dboard","onConfirmDelete","newId","onPrintPreview","onTranslationsSaved","translations","dbLocale","translation","property","toggleTranslationDialog","discardBtnText","editBar","objectToTranslate","modelDefinition","fieldsToTranslate","onTranslationSaved","onTranslationError","NotSupportedNotice","noticeContainer","PrintInfo","isLayout","layoutStyle","printSuggestions","divider","LessHorizontalIcon","PrintActionsBar","isSmall","inner","LessHorizontal","print","topMargin","getTransformYPx","elStyle","transformY","match","parseInt","isLeapPage","n","getMultiple","factor","multiple","PrintLayoutItemGrid","updateDashboardLayout","isFirstPageBreak","pageBreaks","sortedPageBreaks","itemClassNames","getItemComponents","hideExtraPageBreaks","sortedElements","elements","types","elementsWithBoundingRect","from","classList","indexOf","bottomY","getDomGridItemsSortedByYPos","querySelectorAll","pageBreakBottom","lastItemBottom","foundNonPageBreak","thisItemBottom","gridElement","firstBreak","scrollArea","EDIT_BAR_HEIGHT","addPageBreaks","addDashboardItem","yPosList","pageNum","getPageBreakPositions","fromEdit","setPrintDashboard","updateDashboardItem","actionBarHeight","wrapper","paddingTop","spacers","dp24","pageOuter","SET_WINDOW_HEIGHT","DEFAULT_STATE_WINDOW_HEIGHT","sGetWindowHeight","windowHeight","setEditDashboard","renderGrid","setNewDashboard","PrintItemGrid","removeDashboardItem","sortedItems","spacerCount","dashboardMap","dashboardsIsEmpty","dashboardsLoaded","routeId","selectDashboard","dashboardToSelect","preferredId","getItem","dash","sGetDashboardsSortedByStarred","setWindowHeight","getElementsByTagName","remove","setHeaderbarVisibility","onResize","onHidden","permanent","SYSTEM_SETTINGS","fetchDashboards","setControlBarRows","apiGetControlBarRows","setCurrentUser","acSetDimensions","displayNameProp","apiFetchDimensions","dim","dimensionType","dataDimensionType","setShowDescription","apiGetShowDescription","addSettings","extraSettings","fetchedSettings","s","apiFetchSystemSettings","exact","AlertBar","DEFAULT_STATE_STYLE","objectClean","conversations","$merge","d2Object","keyUiLocale","authorities","newState","$splice","$unshift","idToRemove","stateItems","layoutHasChanged","newStateItems","stateItem","si","configureStore","middleware","thunk","withExtraArgument","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducer","applyMiddleware","addResources","arTranslations","ar_IQTranslations","ckbTranslations","csTranslations","daTranslations","enTranslations","esTranslations","frTranslations","idTranslations","kmTranslations","loTranslations","myTranslations","nbTranslations","prsTranslations","psTranslations","ptTranslations","pt_BRTranslations","ruTranslations","svTranslations","tetTranslations","tgTranslations","ukTranslations","urTranslations","uzTranslations","uz_CyrlTranslations","viTranslations","zhTranslations","zh_CNTranslations","schemas","authorization","process","REACT_APP_DHIS2_AUTHORIZATION","headers","AppWrapper","store","theme","createMuiTheme","dhis2theme","i18nRoot","reportTable","chart","eventReport","eventChart","itemTypeToExternalPlugin","getPlugin","hasIntegratedPlugin","config","plugin","loadingIndicator","loadPlugin","resize"],"mappings":"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","file":"static/js/app.8e0340de.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ControlBar_root__iikeX\",\"dragging\":\"ControlBar_dragging__3lq79\",\"content\":\"ControlBar_content__26Z33\",\"draghandle\":\"ControlBar_draghandle__27zum\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"DashboardItemChip_link__21drZ\",\"icon\":\"DashboardItemChip_icon__2hcIR\",\"selected\":\"DashboardItemChip_selected__r00uP\",\"unselected\":\"DashboardItemChip_unselected__2H9l2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ClearButton_button__33ZbK\",\"icon\":\"ClearButton_icon__vTJm3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Filter_container__1Vxdh\",\"input\":\"Filter_input__14lhU\",\"focused\":\"Filter_focused__Lvyz3\",\"searchIcon\":\"Filter_searchIcon__2ojUp\",\"searchButton\":\"Filter_searchButton__1tMTB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ShowMoreButton_container__riJz_\",\"showMore\":\"ShowMoreButton_showMore__3S3He\",\"disabled\":\"ShowMoreButton_disabled__2FQNA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"DashboardsBar_container__1xuCo\",\"expanded\":\"DashboardsBar_expanded__3lVl8\",\"controls\":\"DashboardsBar_controls__3PhmY\",\"newLink\":\"DashboardsBar_newLink__2PkLQ\",\"collapsed\":\"DashboardsBar_collapsed__3CY9n\",\"chipContainer\":\"DashboardsBar_chipContainer__IRxuN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonContainer\":\"FilterSelector_buttonContainer__O_amY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ViewTitleBar_container__VivO0\",\"actions\":\"ViewTitleBar_actions__2UTRz\",\"editLink\":\"ViewTitleBar_editLink__d_HzW\",\"titleBar\":\"ViewTitleBar_titleBar__eiwJS\",\"titleBarIcon\":\"ViewTitleBar_titleBarIcon__2cBxv\",\"strip\":\"ViewTitleBar_strip__3xR4U\",\"title\":\"ViewTitleBar_title__2GhTR\",\"descContainer\":\"ViewTitleBar_descContainer__3rF10\",\"desc\":\"ViewTitleBar_desc__3QW6Z\",\"noDesc\":\"ViewTitleBar_noDesc__Jettc\",\"moreButton\":\"ViewTitleBar_moreButton__1HduK\",\"shareButton\":\"ViewTitleBar_shareButton__3yEKR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"NoVisualizationMessage_message__22IPi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"center\":\"LoadingMask_center__KHIYy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FatalErrorBoundary_container__3SViR\",\"icon\":\"FatalErrorBoundary_icon__2UbeP\",\"message\":\"FatalErrorBoundary_message__3FzrY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"deleteItemButton\":\"DeleteItemButton_deleteItemButton__3TJm9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"warning\":\"PrintItemInfo_warning__123PK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"line\":\"ItemFooter_line__3Ko0R\",\"scrollContainer\":\"ItemFooter_scrollContainer__tuq4P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Item_list__1_nkQ\",\"item\":\"Item_item__3-6QE\",\"itemicon\":\"Item_itemicon__QlouX\",\"link\":\"Item_link___3c_q\",\"deleteicon\":\"Item_deleteicon__3usrl\",\"deletebutton\":\"Item_deletebutton__1DpBW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"titlePage\":\"Item_titlePage__18CNQ\",\"name\":\"Item_name__3nuTV\",\"description\":\"Item_description__1gFQd\",\"filterTitle\":\"Item_filterTitle__2p7TQ\",\"filterList\":\"Item_filterList__qc_G3\",\"filterListItem\":\"Item_filterListItem__sPbBY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bar\":\"FilterBar_bar__1Ma3p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"HeaderMenuItem_item__313hC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuItem\":\"ContentMenuItem_menuItem__vbKn3\",\"launchLink\":\"ContentMenuItem_launchLink__2Nql9\",\"label\":\"ContentMenuItem_label__ANfH1\",\"buttonInsert\":\"ContentMenuItem_buttonInsert__1joHg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"showMoreButton\":\"CategorizedMenuGroup_showMoreButton__2RbRp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"ItemSelector_menu__2VYae\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"EditTitleBar_section__LIaIC\",\"titleDescription\":\"EditTitleBar_titleDescription__1YsU6\",\"title\":\"EditTitleBar_title__3mUbt\",\"description\":\"EditTitleBar_description__24U5X\",\"itemSelector\":\"EditTitleBar_itemSelector__1cFEp\"};","import i18n from '@dhis2/d2-i18n';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\nimport ExtensionIcon from '@material-ui/icons/Extension';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport PersonIcon from '@material-ui/icons/Person';\nimport FontDownloadIcon from '@material-ui/icons/FontDownload';\nimport EmailIcon from '@material-ui/icons/Email';\nimport CropFreeIcon from '@material-ui/icons/CropFree';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested'; // Item types\n\nexport const VISUALIZATION = 'VISUALIZATION';\nexport const REPORT_TABLE = 'REPORT_TABLE';\nexport const CHART = 'CHART';\nexport const MAP = 'MAP';\nexport const EVENT_REPORT = 'EVENT_REPORT';\nexport const EVENT_CHART = 'EVENT_CHART';\nexport const APP = 'APP';\nexport const REPORTS = 'REPORTS';\nexport const RESOURCES = 'RESOURCES';\nexport const USERS = 'USERS';\nexport const MESSAGES = 'MESSAGES';\nexport const TEXT = 'TEXT';\nexport const SPACER = 'SPACER';\nexport const PAGEBREAK = 'PAGEBREAK';\nexport const PRINT_TITLE_PAGE = 'PRINT_TITLE_PAGE';\nconst DOMAIN_TYPE_AGGREGATE = 'AGGREGATE';\nconst DOMAIN_TYPE_TRACKER = 'TRACKER'; // Dashboard helpers\n\nexport const isVisualizationType = item => !!itemTypeMap[item.type].isVisualizationType;\nexport const hasMapView = itemType => itemTypeMap[itemType].domainType === DOMAIN_TYPE_AGGREGATE;\nexport const isTrackerDomainType = itemType => itemTypeMap[itemType].domainType === DOMAIN_TYPE_TRACKER;\nexport const getDefaultItemCount = itemType => itemTypeMap[itemType].defaultItemCount || 5;\nexport const getAppName = itemType => itemTypeMap[itemType].appName || ''; // Item type map\n\nexport const itemTypeMap = {\n  [VISUALIZATION]: {\n    id: VISUALIZATION,\n    endPointName: 'visualizations',\n    propName: 'visualization',\n    pluralTitle: i18n.t('Visualizations'),\n    appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n    appName: 'Data Visualizer',\n    defaultItemCount: 10\n  },\n  [REPORT_TABLE]: {\n    id: REPORT_TABLE,\n    endPointName: 'visualizations',\n    dataStatisticsName: 'REPORT_TABLE_VIEW',\n    propName: 'visualization',\n    pluralTitle: i18n.t('Pivot tables'),\n    domainType: DOMAIN_TYPE_AGGREGATE,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n    appName: 'Data Visualizer'\n  },\n  [CHART]: {\n    id: CHART,\n    endPointName: 'visualizations',\n    propName: 'visualization',\n    dataStatisticsName: 'CHART_VIEW',\n    pluralTitle: i18n.t('Charts'),\n    domainType: DOMAIN_TYPE_AGGREGATE,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n    appName: 'Data Visualizer'\n  },\n  [MAP]: {\n    id: MAP,\n    endPointName: 'maps',\n    dataStatisticsName: 'MAP_VIEW',\n    propName: 'map',\n    pluralTitle: i18n.t('Maps'),\n    domainType: DOMAIN_TYPE_AGGREGATE,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-maps/?id=${id}`,\n    appName: 'Maps'\n  },\n  [EVENT_REPORT]: {\n    id: EVENT_REPORT,\n    endPointName: 'eventReports',\n    propName: 'eventReport',\n    pluralTitle: i18n.t('Event reports'),\n    domainType: DOMAIN_TYPE_TRACKER,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-event-reports/?id=${id}`,\n    appName: 'Event Reports'\n  },\n  [EVENT_CHART]: {\n    id: EVENT_CHART,\n    endPointName: 'eventCharts',\n    propName: 'eventChart',\n    pluralTitle: i18n.t('Event charts'),\n    domainType: DOMAIN_TYPE_TRACKER,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-event-visualizer/?id=${id}`,\n    appName: 'Event Visualizer'\n  },\n  [APP]: {\n    endPointName: 'apps',\n    propName: 'appKey',\n    pluralTitle: i18n.t('Apps')\n  },\n  [REPORTS]: {\n    id: REPORTS,\n    endPointName: 'reports',\n    propName: 'reports',\n    pluralTitle: i18n.t('Reports'),\n    appUrl: (id, type) => {\n      switch (type) {\n        case 'HTML':\n          return `dhis-web-reports/#/standard-report/view/${id}`;\n\n        case 'JASPER_REPORT_TABLE':\n        case 'JASPER_JDBC':\n        default:\n          return `api/reports/${id}/data.pdf?t=${new Date().getTime()}`;\n      }\n    }\n  },\n  [RESOURCES]: {\n    id: RESOURCES,\n    endPointName: 'resources',\n    propName: 'resources',\n    pluralTitle: i18n.t('Resources'),\n    appUrl: id => `api/documents/${id}/data`\n  },\n  [USERS]: {\n    id: USERS,\n    endPointName: 'users',\n    propName: 'users',\n    pluralTitle: i18n.t('Users'),\n    appUrl: id => `dhis-web-dashboard-integration/profile.action?id=${id}`\n  },\n  [TEXT]: {\n    id: TEXT,\n    propName: 'text'\n  },\n  [MESSAGES]: {\n    propName: 'messages'\n  },\n  [SPACER]: {\n    propName: 'text'\n  },\n  [PAGEBREAK]: {\n    propName: 'text'\n  },\n  [PRINT_TITLE_PAGE]: {\n    propName: 'text'\n  }\n};\nexport const getEndPointName = type => itemTypeMap[type].endPointName;\nexport const getDataStatisticsName = type => itemTypeMap[type].dataStatisticsName || null;\nexport const getItemUrl = (type, item, baseUrl) => {\n  let url;\n\n  if (type === APP) {\n    url = item.launchUrl;\n  }\n\n  if (itemTypeMap[type] && itemTypeMap[type].appUrl) {\n    url = `${baseUrl}/${itemTypeMap[type].appUrl(item.id, item.type)}`;\n  }\n\n  return url;\n};\nexport const getItemIcon = type => {\n  switch (type) {\n    case REPORT_TABLE:\n    case EVENT_REPORT:\n    case REPORTS:\n      return TableIcon;\n\n    case CHART:\n    case EVENT_CHART:\n      return ChartIcon;\n\n    case MAP:\n      return MapIcon;\n\n    case APP:\n      return ExtensionIcon;\n\n    case RESOURCES:\n      return DescriptionIcon;\n\n    case USERS:\n      return PersonIcon;\n\n    case TEXT:\n      return FontDownloadIcon;\n\n    case MESSAGES:\n      return EmailIcon;\n\n    case SPACER:\n      return CropFreeIcon;\n\n    default:\n      return NotInterestedIcon;\n  }\n};","import isObject from 'lodash/isObject'; // validation\n\nexport function orNull(param) {\n  return param === undefined ? null : param;\n}\nexport function orArray(param) {\n  return Array.isArray(param) ? param : [];\n}\nexport function orObject(param) {\n  return isObject(param) ? param : {};\n} // array\n\nexport function arrayGetById(array, id) {\n  return array.find(item => item.id === id);\n} // object\n\nexport function arrayToIdMap(array) {\n  return array.reduce((obj, item) => {\n    obj[item.id] = item;\n    return obj;\n  }, {});\n} // date\n\nexport function getDate() {\n  const y = Math.floor(Math.random() * 3) + 2015;\n  const M = Math.floor(Math.random() * 12) + 1;\n  const d = Math.floor(Math.random() * 28) + 1; // const h = Math.floor(Math.random() * 23) + 1;\n  // const m = Math.floor(Math.random() * 59) + 1;\n  // const s = Math.floor(Math.random() * 59) + 1;\n\n  return new Date(`${y}-${M}-${d}`).toJSON().replace('T', ' ').substr(0, 10);\n}\nexport const formatDate = (value, uiLocale) => {\n  if (typeof global.Intl !== 'undefined' && Intl.DateTimeFormat) {\n    const locale = uiLocale || 'en';\n    return new Intl.DateTimeFormat(locale, {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    }).format(new Date(value));\n  }\n\n  return value.substr(0, 19).replace('T', ' ');\n};\n/**\n * Sorts an array of objects based on provided date property\n *\n * @param {Array} items Array of objects\n * @param {String} dateProp Name of the date property to be used for sorting\n * @param {Boolean} ascending Whether to sort ascending or descending\n */\n\nexport const sortByDate = (items, dateProp, ascending = true) => {\n  const values = Object.values(items);\n  values.sort((a, b) => {\n    const aDate = new Date(a[dateProp]);\n    const bDate = new Date(b[dateProp]);\n    return ascending ? aDate - bDate : bDate - aDate;\n  });\n  return values;\n}; // reducer validator\n\nexport const validateReducer = (value, defaultValue) => value === undefined || value === null ? defaultValue : value;","// Dimensions for the react-grid-layout\nimport sortBy from 'lodash/sortBy';\nimport { isVisualizationType } from '../../modules/itemTypes';\nimport isSmallScreen from '../../modules/isSmallScreen';\nexport const GRID_COMPACT_TYPE = 'vertical'; // vertical | horizonal | null\n\nexport const GRID_ROW_HEIGHT = 10;\nexport const MARGIN = [10, 10];\nconst SM_SCREEN_MIN_ITEM_GRID_HEIGHT = 16; //310px\n\nexport const SM_SCREEN_GRID_COLUMNS = 1;\nexport const MARGIN_SM = [0, 16];\nexport const GRID_PADDING_PX = [0, 0];\nconst SMALL_SCREEN_BREAKPOINT = 480; // sum of left+right padding of dashboard-wrapper (App.css)\n\nconst DASHBOARD_WRAPPER_LR_MARGIN = 32; // make an assumption about the original item w/h ratio\n// assumes grid width of ~1200px at time dashboard was created\n\nconst GRID_COL_WIDTH_PX = 10;\nexport const GRID_COLUMNS = 60; // Dimensions for getShape\n\nexport const NEW_ITEM_SHAPE = {\n  x: 0,\n  y: 0,\n  w: 20,\n  h: 29\n};\nconst NUMBER_OF_ITEM_COLS = 2;\nconst MAX_ITEM_GRID_WIDTH = GRID_COLUMNS - 1;\nexport const MAX_ITEM_GRID_HEIGHT = 34;\nexport const MAX_ITEM_GRID_HEIGHT_OIPP = 35;\nexport const MAX_ITEM_GRID_WIDTH_OIPP = 56;\nconst MIN_ITEM_GRID_HEIGHT = 4; // for A4 landscape (297x210mm)\n// 794 px = (21cm / 2.54) * 96 pixels/inch\n// 1122 px = 29.7 /2.54 * 96 pixels/inch\n// const a4LandscapeHeightPx = 794\n\nexport const A4_LANDSCAPE_WIDTH_PX = 1102; // isNonNegativeInteger\n\nconst isNonNegativeInteger = x => Number.isInteger(x) && x >= 0; // Does the item have all the shape properties?\n\n\nexport const hasShape = item => isNonNegativeInteger(item.x) && isNonNegativeInteger(item.y) && isNonNegativeInteger(item.w) && isNonNegativeInteger(item.h); // returns a rectangular grid block dimensioned with x, y, w, h in grid units.\n// based on a grid with 3 items across\n\nconst getShape = i => {\n  const col = i % NUMBER_OF_ITEM_COLS;\n  const row = Math.floor(i / NUMBER_OF_ITEM_COLS);\n  const itemWidth = Math.floor(MAX_ITEM_GRID_WIDTH / NUMBER_OF_ITEM_COLS);\n  const itemHeight = GRID_ROW_HEIGHT * 2;\n  return {\n    x: col * itemWidth,\n    y: row * itemHeight,\n    w: itemWidth,\n    h: itemHeight\n  };\n};\n/**\n * Returns an array of items containing the x, y, w, h dimensions\n * and the item's originalheight in pixels\n * and dimensions to create the small layout (x, y, w, h)\n * @function\n * @param {Array} items\n * @returns {Array}\n */\n\n\nexport const withShape = (items = []) => {\n  const itemsWithShape = items.map((item, i) => hasShape(item) ? item : Object.assign({}, item, getShape(i)));\n  return itemsWithShape.map(item => Object.assign({}, item, {\n    originalH: item.h\n  }));\n};\nexport const getGridWidth = windowWidthPx => windowWidthPx - DASHBOARD_WRAPPER_LR_MARGIN;\nexport const getBreakpoint = () => SMALL_SCREEN_BREAKPOINT - DASHBOARD_WRAPPER_LR_MARGIN;\nexport const getProportionalHeight = (item, windowWidthPx) => {\n  // get w/h ratio of the original item\n  const wPx = getItemWHPx(item.w, GRID_COL_WIDTH_PX, MARGIN[0]);\n  const hPx = getItemWHPx(item.h, GRID_ROW_HEIGHT, MARGIN[1]);\n  const ratioWH = wPx / hPx;\n\n  if (!isVisualizationType(item)) {\n    // return Math.round(item.h * (MARGIN[1] / MARGIN_SM[1]))\n    //convert height in px back to grid units\n    const gridUnitHeightPx = GRID_ROW_HEIGHT + MARGIN_SM[1];\n    const h = Math.round((hPx + MARGIN_SM[1]) / gridUnitHeightPx);\n    return h;\n  }\n\n  console.log(item.type, wPx, hPx, ratioWH.toFixed(2));\n  const gridWidthPx = getGridWidth(windowWidthPx); // get new height in px based on the ratio\n\n  const newColWidthPx = (gridWidthPx - MARGIN_SM[0] * (SM_SCREEN_GRID_COLUMNS - 1) - GRID_PADDING_PX[0] * 2) / SM_SCREEN_GRID_COLUMNS;\n  const newWPx = newColWidthPx * SM_SCREEN_GRID_COLUMNS;\n  const newHPx = Math.round(newWPx / ratioWH); //convert height in px back to grid units\n\n  const gridUnitHeightPx = GRID_ROW_HEIGHT + MARGIN_SM[1];\n  const h = Math.round((newHPx + MARGIN_SM[1]) / gridUnitHeightPx); // item must be at least the set minimum\n\n  return h < SM_SCREEN_MIN_ITEM_GRID_HEIGHT ? SM_SCREEN_MIN_ITEM_GRID_HEIGHT : h;\n};\nexport const getSmallLayout = (items, windowWidthPx) => sortBy(items, ['y', 'x']).map((item, i) => Object.assign({}, item, {\n  x: 0,\n  y: i,\n  w: SM_SCREEN_GRID_COLUMNS,\n  h: getProportionalHeight(item, windowWidthPx)\n}));\nexport const getGridItemProperties = itemId => {\n  return {\n    i: itemId,\n    minH: MIN_ITEM_GRID_HEIGHT\n  };\n};\nexport const getPageBreakItemShape = (yPos, isStatic = true) => {\n  return {\n    x: 0,\n    y: yPos,\n    w: MAX_ITEM_GRID_WIDTH,\n    h: 5,\n    static: !!isStatic,\n    minH: 1\n  };\n};\nexport const getPrintTitlePageItemShape = isOneItemPerPage => {\n  return {\n    x: 0,\n    y: 0,\n    w: isOneItemPerPage ? MAX_ITEM_GRID_WIDTH_OIPP : MAX_ITEM_GRID_WIDTH,\n    h: MAX_ITEM_GRID_HEIGHT,\n    static: true,\n    minH: 1\n  };\n};\n/**\n * Calculates the grid item's height in pixels based\n * on the height in grid units. This calculation\n * is copied directly from react-grid-layout\n * calculateUtils.js (calcGridItemWHPx)\n *\n * Each row's px height is the sum of the GRID_ROW_HEIGHT + MARGIN-Y\n * So the calculation is:\n * GRID_ROW_HEIGHT* Number of rows\n * +\n * yMargin * Number of rows-1\n *\n * @param {Object} item item containing shape (x, y, w, h)\n */\n\nexport const getItemHeightPx = (item, windowWidthPx) => {\n  if (isSmallScreen(windowWidthPx)) {\n    const h = item.smallOriginalH ? item.smallOriginalH : getProportionalHeight(item, windowWidthPx);\n    return getItemWHPx(h, GRID_ROW_HEIGHT, MARGIN_SM[1]);\n  }\n\n  return getItemWHPx(item.originalH, GRID_ROW_HEIGHT, MARGIN[1]);\n};\n\nconst getItemWHPx = (gridUnits, colOrRowSize, marginPx) => Math.round(colOrRowSize * gridUnits + Math.max(0, gridUnits - 1) * marginPx);\n\nexport const getGridItemDomId = id => `item-${id}`;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ConfirmDeleteDialog_content__EqswE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editBar\":\"EditBar_editBar__1d1xM\",\"controls\":\"EditBar_controls__1t0nO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noticeContainer\":\"NotSupportedNotice_noticeContainer__3z9Up\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PrintInfo_container__9gH0b\",\"title\":\"PrintInfo_title__2_VZd\",\"printSuggestions\":\"PrintInfo_printSuggestions__30tcU\",\"divider\":\"PrintInfo_divider__3wzx9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PrintActionsBar_container__2iQp7\",\"topMargin\":\"PrintActionsBar_topMargin__OpYDN\",\"inner\":\"PrintActionsBar_inner__uBqU7\",\"link\":\"PrintActionsBar_link__lFUmI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"PrintLayoutDashboard_wrapper__1WDh4\",\"pageOuter\":\"PrintLayoutDashboard_pageOuter__22acI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"PrintDashboard_wrapper__1O3s_\",\"pageOuter\":\"PrintDashboard_pageOuter__fl9tw\"};","const SMALL_SCREEN_BREAKPOINT = 480;\n\nconst isSmallScreen = width => width <= SMALL_SCREEN_BREAKPOINT;\n\nexport default isSmallScreen;","import React, { createContext, useContext, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash/debounce';\nexport const WindowDimensionsCtx = createContext(null);\n\nconst windowDims = () => ({\n  height: window.innerHeight,\n  width: window.innerWidth\n});\n\nconst WindowDimensionsProvider = ({\n  children\n}) => {\n  const [dimensions, setDimensions] = useState(windowDims());\n  useEffect(() => {\n    const handleResize = debounce(() => {\n      setDimensions(windowDims());\n    }, 200);\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n  return <WindowDimensionsCtx.Provider value={dimensions}>\n            {children}\n        </WindowDimensionsCtx.Provider>;\n};\n\nWindowDimensionsProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};\nexport default WindowDimensionsProvider;\nexport const useWindowDimensions = () => {\n  return useContext(WindowDimensionsCtx);\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport classes from './styles/ControlBar.module.css';\nexport const DRAG_HANDLE_HEIGHT = 7;\n\nclass ControlBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dragging: false\n    };\n  }\n\n  onStartDrag = () => {\n    this.setState({\n      dragging: true\n    });\n    window.addEventListener('mousemove', this.onDrag);\n    window.addEventListener('mouseup', this.onEndDrag);\n  };\n  onDrag = event => {\n    event.preventDefault();\n    event.stopPropagation();\n    const newHeight = event.clientY;\n\n    if (this.props.onChangeHeight && newHeight !== this.props.height && newHeight > 0) {\n      requestAnimationFrame(() => {\n        this.props.onChangeHeight(newHeight);\n      });\n    }\n  };\n  onEndDrag = () => {\n    this.setState({\n      dragging: false\n    });\n    window.removeEventListener('mousemove', this.onDrag);\n    window.removeEventListener('mouseup', this.onEndDrag);\n\n    if (this.props.onEndDrag) {\n      this.props.onEndDrag();\n    }\n  };\n  renderDragHandle = () => typeof this.props.onChangeHeight === 'function' && <div data-testid=\"controlbar-drag-handle\" className={classes.draghandle} style={{\n    height: DRAG_HANDLE_HEIGHT\n  }} onMouseDown={this.onStartDrag} />;\n\n  render() {\n    const height = Math.max(this.props.height, 0) + DRAG_HANDLE_HEIGHT;\n    const rootClass = cx(classes.root, this.state.dragging && classes.dragging);\n    return <div style={{\n      height\n    }} className={rootClass}>\n                <div className={classes.content}>{this.props.children}</div>\n                {this.renderDragHandle()}\n            </div>;\n  }\n\n}\n\nControlBar.propTypes = {\n  /**\n   * The height of the control bar in number of lines. Must be a positive integer.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Callback function that is called when the control bar is resized.\n   * The callback receives one argument: The new height in pixels.\n   *\n   * If no callback is specified the control bar will not have a drag handle.\n   */\n  height: PropTypes.number.isRequired,\n\n  /**\n   * Callback function that is called when the control bar is dropped after being dragged.\n   * The callback receives one argument: The new height in pixels.\n   *\n   * Ignored if no \"onChangeHeight\" function is provided.\n   */\n  onChangeHeight: PropTypes.func,\n\n  /**\n   * The contents of the control bar.\n   */\n  onEndDrag: PropTypes.func\n};\nControlBar.defaultProps = {\n  onChangeHeight: null,\n  onEndDrag: null\n};\nexport default ControlBar;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst StarIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>;\n\nStarIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default StarIcon;","import { getInstance } from 'd2';\nexport const apiPostDataStatistics = async (eventType, id) => {\n  const d2 = await getInstance();\n  const url = `dataStatistics?eventType=${eventType}&favorite=${id}`;\n  d2.Api.getApi().post(url);\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Chip } from '@dhis2/ui';\nimport { Link } from 'react-router-dom';\nimport debounce from 'lodash/debounce';\nimport StarIcon from '../../icons/Star';\nimport { apiPostDataStatistics } from '../../api/dataStatistics';\nimport classes from './styles/DashboardItemChip.module.css';\nexport const DashboardItemChip = ({\n  starred,\n  selected,\n  label,\n  dashboardId,\n  onClick\n}) => {\n  const chipProps = {\n    selected\n  };\n\n  if (starred) {\n    const selectedState = selected ? classes.selected : classes.unselected;\n    chipProps.icon = <StarIcon className={`${classes.icon} ${selectedState}`} />;\n  }\n\n  const debouncedPostStatistics = debounce(() => apiPostDataStatistics('DASHBOARD_VIEW', dashboardId), 500);\n\n  const handleClick = () => {\n    debouncedPostStatistics();\n    onClick();\n  };\n\n  return <Link className={classes.link} to={`/${dashboardId}`} onClick={handleClick} data-test=\"dashboard-chip\">\n            <Chip {...chipProps}>{label}</Chip>\n        </Link>;\n};\nDashboardItemChip.propTypes = {\n  dashboardId: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  selected: PropTypes.bool.isRequired,\n  starred: PropTypes.bool.isRequired,\n  onClick: PropTypes.func.isRequired,\n  classes: PropTypes.object\n};\nexport default DashboardItemChip;","import React from 'react';\nimport { colors } from '@dhis2/ui';\n\nconst AddCircleIcon = () => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" fill={colors.teal600} viewBox=\"0 0 24 24\">\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm4 11h-3v3c0 .55-.45 1-1 1s-1-.45-1-1v-3H8c-.55 0-1-.45-1-1s.45-1 1-1h3V8c0-.55.45-1 1-1s1 .45 1 1v3h3c.55 0 1 .45 1 1s-.45 1-1 1z\" />\n    </svg>;\n\nexport default AddCircleIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst SearchIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\" />\n    </svg>;\n\nSearchIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default SearchIcon;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst ClearIcon = ({\n  className\n}) => <svg className={className} fill={colors.grey800} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n        <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>;\n\nClearIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default ClearIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ClearIcon from '../../icons/Clear';\nimport classes from './styles/ClearButton.module.css';\nexport const ClearButton = ({\n  onClear\n}) => <button className={classes.button} onClick={onClear}>\n        <span>\n            <ClearIcon className={classes.icon} color=\"action\" />\n        </span>\n    </button>;\nClearButton.propTypes = {\n  onClear: PropTypes.func.isRequired\n};\nexport default ClearButton;","import { validateReducer } from '../modules/util';\nexport const SET_DASHBOARDS_FILTER = 'SET_DASHBOARDS_FILTER';\nexport const CLEAR_DASHBOARDS_FILTER = 'CLEAR_DASHBOARDS_FILTER';\nexport const DEFAULT_STATE_DASHBOARDS_FILTER = '';\nexport default ((state = DEFAULT_STATE_DASHBOARDS_FILTER, action) => {\n  switch (action.type) {\n    case SET_DASHBOARDS_FILTER:\n      {\n        return validateReducer(action.value, DEFAULT_STATE_DASHBOARDS_FILTER);\n      }\n\n    case CLEAR_DASHBOARDS_FILTER:\n      {\n        return DEFAULT_STATE_DASHBOARDS_FILTER;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetDashboardsFilter = state => state.dashboardsFilter;","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport cx from 'classnames';\nimport SearchIcon from '../../icons/Search';\nimport ClearButton from './ClearButton';\nimport { useWindowDimensions } from '../WindowDimensionsProvider';\nimport { acSetDashboardsFilter, acClearDashboardsFilter } from '../../actions/dashboardsFilter';\nimport { sGetDashboardsFilter } from '../../reducers/dashboardsFilter';\nimport isSmallScreen from '../../modules/isSmallScreen';\nimport classes from './styles/Filter.module.css';\nexport const KEYCODE_ENTER = 13;\nexport const KEYCODE_ESCAPE = 27;\nexport const FilterUnconnected = ({\n  clearDashboardsFilter,\n  filterText,\n  isMaxHeight,\n  setDashboardsFilter,\n  onKeypressEnter,\n  onToggleMaxHeight\n}) => {\n  const [focusedClassName, setFocusedClassName] = useState('');\n  const {\n    width\n  } = useWindowDimensions();\n\n  const setFilterValue = event => {\n    event.preventDefault();\n    setDashboardsFilter(event.target.value);\n  };\n\n  const onKeyUp = event => {\n    switch (event.keyCode) {\n      case KEYCODE_ENTER:\n        onKeypressEnter();\n        clearDashboardsFilter();\n        break;\n\n      case KEYCODE_ESCAPE:\n        clearDashboardsFilter();\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const onFocus = event => {\n    event.preventDefault();\n    setFocusedClassName(classes.focused);\n  };\n\n  const onBlur = event => {\n    event.preventDefault();\n    setFocusedClassName('');\n  };\n\n  return isSmallScreen(width) && !isMaxHeight ? <button className={classes.searchButton} onClick={onToggleMaxHeight}>\n            <SearchIcon className={classes.searchIcon} />\n        </button> : <div className={cx(classes.container, `${focusedClassName}`)} onFocus={onFocus} onBlur={onBlur}>\n            <SearchIcon className={classes.searchIcon} />\n            <input className={classes.input} type=\"text\" placeholder={i18n.t('Search for a dashboard')} onChange={setFilterValue} onKeyUp={onKeyUp} value={filterText} data-test=\"search-dashboard-input\" />\n            {filterText && <ClearButton onClear={clearDashboardsFilter} />}\n        </div>;\n};\nFilterUnconnected.propTypes = {\n  clearDashboardsFilter: PropTypes.func,\n  filterText: PropTypes.string,\n  isMaxHeight: PropTypes.bool,\n  setDashboardsFilter: PropTypes.func,\n  onKeypressEnter: PropTypes.func,\n  onToggleMaxHeight: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  filterText: sGetDashboardsFilter(state)\n});\n\nconst mapDispatchToProps = {\n  setDashboardsFilter: acSetDashboardsFilter,\n  clearDashboardsFilter: acClearDashboardsFilter\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterUnconnected);","import { SET_DASHBOARDS_FILTER, CLEAR_DASHBOARDS_FILTER } from '../reducers/dashboardsFilter'; // actions\n\nexport const acSetDashboardsFilter = value => ({\n  type: SET_DASHBOARDS_FILTER,\n  value\n});\nexport const acClearDashboardsFilter = () => ({\n  type: CLEAR_DASHBOARDS_FILTER\n});","import React from 'react';\nexport const ChevronDown = () => <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"m11.29289 15.7071c.39053.3905 1.02369.3905 1.41422 0l4.99999-4.99999c.3905-.39053.3905-1.02369 0-1.41422-.3905-.39052-1.0237-.39052-1.4142 0l-4.2929 4.2929-4.29289-4.2929c-.39053-.39052-1.02369-.39052-1.41422 0-.39052.39053-.39052 1.02369 0 1.41422z\" fill=\"#a0adba\" />\n    </svg>;\nexport const ChevronUp = () => <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"m11.2928932 8.29289322c.360484-.36048396.927715-.3882135 1.3200062-.08318861l.0942074.08318861 5 4.99999998c.3905243.3905243.3905243 1.0236893 0 1.4142136-.360484.3604839-.927715.3882135-1.3200062.0831886l-.0942074-.0831886-4.2928932-4.2921068-4.29289322 4.2921068c-.36048396.3604839-.92771502.3882135-1.32000622.0831886l-.09420734-.0831886c-.36048396-.360484-.3882135-.927715-.08318861-1.3200062l.08318861-.0942074z\" fill=\"#a0adba\" />\n    </svg>;","import React, { useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Tooltip } from '@dhis2/ui';\nimport { ChevronDown, ChevronUp } from './assets/icons';\nimport classes from './styles/ShowMoreButton.module.css';\nexport const SHOWMORE_BAR_HEIGHT = 16;\n\nconst ShowMoreButton = ({\n  onClick,\n  isMaxHeight,\n  disabled\n}) => {\n  const containerRef = useRef(null);\n  const buttonLabel = isMaxHeight ? i18n.t('Show fewer dashboards') : i18n.t('Show more dashboards');\n\n  const onButtonClicked = () => {\n    // The click may happen on the svg or path\n    // element of the button icon.\n    // In that case it is necessary to trigger\n    // the mouseout on the button element\n    // to ensure that the tooltip is removed\n    const buttonEl = containerRef.current.children[0];\n    const event = new MouseEvent('mouseout', {\n      bubbles: true,\n      cancelable: false\n    });\n    onClick();\n    buttonEl.dispatchEvent(event);\n  };\n\n  return <div className={classes.container} ref={containerRef}>\n            {disabled ? <div className={classes.disabled}>\n                    <ChevronDown />\n                </div> : <Tooltip content={buttonLabel} placement=\"bottom\">\n                    {({\n        onMouseOver,\n        onMouseOut,\n        ref\n      }) => <button className={classes.showMore} onClick={onButtonClicked} data-test=\"showmore-button\" aria-label={buttonLabel} ref={ref} onMouseOver={onMouseOver} onMouseOut={onMouseOut}>\n                            {isMaxHeight ? <ChevronUp /> : <ChevronDown />}\n                        </button>}\n                </Tooltip>}\n        </div>;\n};\n\nShowMoreButton.propTypes = {\n  disabled: PropTypes.bool,\n  isMaxHeight: PropTypes.bool,\n  onClick: PropTypes.func\n};\nexport default ShowMoreButton;","import { SHOWMORE_BAR_HEIGHT } from './ShowMoreButton';\nexport const CONTROL_BAR_ROW_HEIGHT = 40;\nexport const FIRST_ROW_PADDING_HEIGHT = 10;\nexport const MIN_ROW_COUNT = 1;\nexport const HEADERBAR_HEIGHT = 48;\nconst CONTROL_BAR_OUTER_HEIGHT_DIFF = FIRST_ROW_PADDING_HEIGHT + SHOWMORE_BAR_HEIGHT - 2; // 2 pixel \"adjustment\"\n\nexport const getRowsHeight = rows => {\n  return rows * CONTROL_BAR_ROW_HEIGHT;\n};\nexport const getNumRowsFromHeight = height => {\n  return Math.floor((height - CONTROL_BAR_OUTER_HEIGHT_DIFF) / CONTROL_BAR_ROW_HEIGHT);\n};\nexport const getControlBarHeight = rows => {\n  return getRowsHeight(rows) + CONTROL_BAR_OUTER_HEIGHT_DIFF;\n};","/** @module reducers/controlBar */\nimport { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\nexport const SET_CONTROLBAR_USER_ROWS = 'SET_CONTROLBAR_USER_ROWS';\nexport const DEFAULT_STATE_CONTROLBAR_ROWS = 1;\n\nconst userRows = (state = DEFAULT_STATE_CONTROLBAR_ROWS, action) => {\n  switch (action.type) {\n    case SET_CONTROLBAR_USER_ROWS:\n      return validateReducer(action.value, DEFAULT_STATE_CONTROLBAR_ROWS);\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  userRows\n});\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\n\nexport const sGetControlBarRoot = state => state.controlBar; // Selector dependency level 2\n\nexport const sGetControlBarUserRows = state => sGetControlBarRoot(state).userRows;","import { TEXT, SPACER } from './itemTypes';\nimport { getGridItemProperties } from '../components/ItemGrid/gridUtil';\nexport const spacerContent = 'SPACER_ITEM_FOR_DASHBOARD_LAYOUT_CONVENIENCE';\nexport const emptyTextItemContent = 'TEXT_ITEM_WITH_NO_CONTENT';\n\nconst isBackendSpacerType = item => item.type === TEXT && item.text === spacerContent;\n\nconst isUiSpacerType = item => item.type === SPACER;\n\nconst isTextType = item => item.type === TEXT && item.text !== spacerContent;\n\nexport const convertUiItemsToBackend = items => items.map(item => {\n  let text = null;\n\n  if (isUiSpacerType(item)) {\n    text = spacerContent;\n  } else if (isTextType(item)) {\n    text = item.text || emptyTextItemContent;\n  }\n\n  return { ...item,\n    ...(text ? {\n      text\n    } : {})\n  };\n});\nexport const convertBackendItemsToUi = items => items.map(item => {\n  const type = isBackendSpacerType(item) ? SPACER : item.type;\n  const gridProperties = getGridItemProperties(item.id);\n  const text = isTextType(item) ? item.text === emptyTextItemContent ? '' : item.text : null;\n  return { ...item,\n    ...(text !== null ? {\n      text\n    } : {}),\n    type,\n    ...gridProperties\n  };\n});","/** @module reducers/dashboards */\nimport arrayFrom from 'd2-utilizr/lib/arrayFrom';\nimport arraySort from 'd2-utilizr/lib/arraySort';\nimport { orArray, orObject } from '../modules/util';\nimport { convertBackendItemsToUi } from '../modules/uiBackendItemConverter';\nexport const SET_DASHBOARDS = 'SET_DASHBOARDS';\nexport const ADD_DASHBOARDS = 'ADD_DASHBOARDS';\nexport const SET_DASHBOARD_STARRED = 'SET_DASHBOARD_STARRED';\nexport const SET_DASHBOARD_DISPLAY_NAME = 'SET_DASHBOARD_DISPLAY_NAME';\nexport const SET_DASHBOARD_ITEMS = 'SET_DASHBOARD_ITEMS';\nexport const DEFAULT_STATE_DASHBOARDS = {\n  byId: null,\n  items: []\n};\nexport const EMPTY_DASHBOARD = {}; // reducer helper functions\n\nconst updateDashboardProp = ({\n  state,\n  dashboardId,\n  prop,\n  value\n}) => ({\n  byId: { ...state.byId,\n    [dashboardId]: { ...state.byId[dashboardId],\n      [prop]: value\n    }\n  },\n  items: state.items\n});\n/**\n * Reducer that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n * @returns {Object}\n */\n\n\nexport default ((state = DEFAULT_STATE_DASHBOARDS, action) => {\n  switch (action.type) {\n    case SET_DASHBOARDS:\n      {\n        return {\n          byId: action.value,\n          items: []\n        };\n      }\n\n    case ADD_DASHBOARDS:\n      {\n        return { ...state,\n          byId: { ...state.byId,\n            ...action.value\n          }\n        };\n      }\n\n    case SET_DASHBOARD_STARRED:\n      {\n        return updateDashboardProp({\n          state,\n          dashboardId: action.dashboardId,\n          prop: 'starred',\n          value: action.value\n        });\n      }\n\n    case SET_DASHBOARD_DISPLAY_NAME:\n      {\n        return updateDashboardProp({\n          state,\n          dashboardId: action.dashboardId,\n          prop: 'displayName',\n          value: action.value\n        });\n      }\n\n    case SET_DASHBOARD_ITEMS:\n      {\n        return { ...state,\n          items: action.value\n        };\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetDashboardsRoot = state => state.dashboards; // selector level 1\n\n/**\n * Selector which returns a dashboard by id from the state object\n * If no matching dashboard is found it returns undefined\n * If dashboards.byId is null, then the dashboards api request\n * has not yet completed. If dashboards.byId is an empty object\n * then the dashboards api request is complete, but no dashboards\n * were returned\n *\n * @function\n * @param {Object} state The current state\n * @param {Number} id The id of the dashboard\n * @returns {Object | undefined}\n */\n\nexport const sGetDashboardById = (state, id) => orObject(sGetDashboardsRoot(state).byId)[id];\nexport const sDashboardsIsFetching = state => {\n  return sGetDashboardsRoot(state).byId === null;\n};\n/**\n * Selector which returns all dashboards (the byId object)\n *\n * @function\n * @param {Object} state The current state\n * @returns {Object | undefined}\n */\n\nexport const sGetAllDashboards = state => orObject(sGetDashboardsRoot(state).byId);\n/**\n * Selector which returns the current dashboard items\n *\n * @function\n * @param {Object} state The current state\n * @returns {Array}\n */\n\nexport const sGetDashboardItems = state => sGetDashboardsRoot(state).items; // selector level 2\n\nexport const sGetStarredDashboards = state => Object.values(sGetAllDashboards(state)).filter(dashboard => dashboard.starred === true);\nexport const sGetUnstarredDashboards = state => Object.values(sGetAllDashboards(state)).filter(dashboard => dashboard.starred === false); // selector level 3\n\nexport const sGetStarredDashboardIds = state => {\n  return sGetStarredDashboards(state).map(dashboard => dashboard.id);\n};\nexport const sGetUnstarredDashboardIds = state => sGetUnstarredDashboards(state).map(dashboard => dashboard.id);\nexport const sGetDashboardsSortedByStarred = state => [...arraySort(sGetStarredDashboards(state), 'ASC', 'displayName'), ...arraySort(sGetUnstarredDashboards(state), 'ASC', 'displayName')]; // utils\n\n/**\n * Returns the array of dashboards, customized for ui\n * @function\n * @param {Array} data The original dashboard list\n * @returns {Array}\n */\n\nexport const getCustomDashboards = data => arrayFrom(data).map(d => ({\n  id: d.id,\n  name: d.name,\n  displayName: d.displayName,\n  description: d.description,\n  displayDescription: d.displayDescription,\n  starred: d.favorite,\n  owner: d.user.name,\n  created: d.created.split('T').join(' ').substr(0, 16),\n  lastUpdated: d.lastUpdated.split('T').join(' ').substr(0, 16),\n  access: d.access,\n  numberOfItems: orArray(d.dashboardItems).length,\n  dashboardItems: convertBackendItemsToUi(d.dashboardItems)\n}));","/** @module reducers/selected */\nimport { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\nexport const SET_SELECTED_ID = 'SET_SELECTED_ID';\nexport const SET_SELECTED_ISLOADING = 'SET_SELECTED_ISLOADING';\nexport const SET_SELECTED_SHOWDESCRIPTION = 'SET_SELECTED_SHOWDESCRIPTION';\nexport const SET_SELECTED_ITEM_ACTIVE_TYPE = 'SET_SELECTED_ITEM_ACTIVE_TYPE';\nexport const CLEAR_SELECTED_ITEM_ACTIVE_TYPES = 'CLEAR_SELECTED_ITEM_ACTIVE_TYPES';\nexport const DEFAULT_STATE_SELECTED_ID = null;\nexport const DEFAULT_STATE_SELECTED_ISLOADING = false;\nexport const DEFAULT_STATE_SELECTED_SHOWDESCRIPTION = false;\nexport const DEFAULT_STATE_SELECTED_ITEM_ACTIVE_TYPES = {};\nexport const NON_EXISTING_DASHBOARD_ID = '0';\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\n\nconst id = (state = DEFAULT_STATE_SELECTED_ID, action) => {\n  switch (action.type) {\n    case SET_SELECTED_ID:\n      return validateReducer(action.value, DEFAULT_STATE_SELECTED_ID);\n\n    default:\n      return state;\n  }\n};\n\nconst isLoading = (state = DEFAULT_STATE_SELECTED_ISLOADING, action) => {\n  switch (action.type) {\n    case SET_SELECTED_ISLOADING:\n      return validateReducer(action.value, DEFAULT_STATE_SELECTED_ISLOADING);\n\n    default:\n      return state;\n  }\n};\n\nconst showDescription = (state = DEFAULT_STATE_SELECTED_SHOWDESCRIPTION, action) => {\n  switch (action.type) {\n    case SET_SELECTED_SHOWDESCRIPTION:\n      return validateReducer(action.value, DEFAULT_STATE_SELECTED_SHOWDESCRIPTION);\n\n    default:\n      return state;\n  }\n};\n\nconst itemActiveTypes = (state = DEFAULT_STATE_SELECTED_ITEM_ACTIVE_TYPES, action) => {\n  switch (action.type) {\n    case SET_SELECTED_ITEM_ACTIVE_TYPE:\n      {\n        return { ...state,\n          [action.id]: action.activeType\n        };\n      }\n\n    case CLEAR_SELECTED_ITEM_ACTIVE_TYPES:\n      {\n        return DEFAULT_STATE_SELECTED_ITEM_ACTIVE_TYPES;\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  id,\n  isLoading,\n  showDescription,\n  itemActiveTypes\n}); // Selectors\n\nexport const sGetSelectedRoot = state => state.selected;\nexport const sGetSelectedId = state => sGetSelectedRoot(state).id;\nexport const sGetSelectedIsLoading = state => sGetSelectedRoot(state).isLoading;\nexport const sGetSelectedShowDescription = state => sGetSelectedRoot(state).showDescription;\nexport const sGetSelectedItemActiveType = (state, id) => sGetSelectedRoot(state).itemActiveTypes[id];","import { getInstance } from 'd2';\nexport const NAMESPACE = 'dashboard';\nexport const hasNamespace = async (d2) => await d2.currentUser.dataStore.has(NAMESPACE);\nexport const getNamespace = async (d2, hasNamespace) => hasNamespace ? await d2.currentUser.dataStore.get(NAMESPACE) : await d2.currentUser.dataStore.create(NAMESPACE);\nexport const apiPostUserDataStoreValue = async (key, value) => {\n  const d2 = await getInstance();\n  const ns = await getNamespace(d2, hasNamespace);\n  ns.set(key, value);\n};\nexport const apiGetUserDataStoreValue = async (key, defaultValue) => {\n  const d2 = await getInstance();\n  const namespace = await getNamespace(d2, await hasNamespace(d2));\n  const hasKey = namespace?.keys?.find(k => k === key);\n\n  if (hasKey) {\n    return await namespace.get(key);\n  } else {\n    await apiPostUserDataStoreValue(key, defaultValue, namespace);\n    console.log('(These errors to /userDataStore can be ignored)');\n    return defaultValue;\n  }\n};","import { apiGetUserDataStoreValue, apiPostUserDataStoreValue } from './userDataStore';\nimport { DEFAULT_STATE_CONTROLBAR_ROWS } from '../reducers/controlBar';\nconst KEY_CONTROLBAR_ROWS = 'controlBarRows';\nexport const apiGetControlBarRows = async () => await apiGetUserDataStoreValue(KEY_CONTROLBAR_ROWS, DEFAULT_STATE_CONTROLBAR_ROWS);\nexport const apiPostControlBarRows = async (value) => await apiPostUserDataStoreValue(KEY_CONTROLBAR_ROWS, value);","import { SET_CONTROLBAR_USER_ROWS } from '../reducers/controlBar';\nimport { apiGetControlBarRows } from '../api/controlBar'; // actions\n\nexport const acSetControlBarUserRows = rows => ({\n  type: SET_CONTROLBAR_USER_ROWS,\n  value: rows\n}); // thunks\n\nexport const tSetControlBarRows = () => async dispatch => {\n  const onSuccess = rows => {\n    dispatch(acSetControlBarUserRows(rows));\n  };\n\n  const onError = error => {\n    console.log('Error (apiGetControlBarRows): ', error);\n    return error;\n  };\n\n  try {\n    const controlBarRows = await apiGetControlBarRows();\n    return onSuccess(controlBarRows);\n  } catch (err) {\n    return onError(err);\n  }\n};","import React, { useState, useEffect, createRef } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport cx from 'classnames';\nimport arraySort from 'd2-utilizr/lib/arraySort';\nimport PropTypes from 'prop-types';\nimport ControlBar, { DRAG_HANDLE_HEIGHT } from './ControlBar';\nimport Chip from './DashboardItemChip';\nimport AddCircleIcon from '../../icons/AddCircle';\nimport Filter from './Filter';\nimport ShowMoreButton from './ShowMoreButton';\nimport { FIRST_ROW_PADDING_HEIGHT, MIN_ROW_COUNT, getRowsHeight, getControlBarHeight, getNumRowsFromHeight } from './controlBarDimensions';\nimport { useWindowDimensions } from '../WindowDimensionsProvider';\nimport { sGetDashboardsFilter } from '../../reducers/dashboardsFilter';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { sGetAllDashboards } from '../../reducers/dashboards';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { acSetControlBarUserRows } from '../../actions/controlBar';\nimport { apiPostControlBarRows } from '../../api/controlBar';\nimport isSmallScreen from '../../modules/isSmallScreen';\nimport classes from './styles/DashboardsBar.module.css';\nexport const MAX_ROW_COUNT = 10;\n\nconst DashboardsBar = ({\n  userRows,\n  onChangeHeight,\n  history,\n  dashboards,\n  selectedId,\n  filterText\n}) => {\n  const [rows, setRows] = useState(userRows);\n  const {\n    width\n  } = useWindowDimensions();\n  const ref = createRef();\n  useEffect(() => {\n    setRows(userRows);\n  }, [userRows]);\n\n  const isMaxHeight = () => rows === MAX_ROW_COUNT;\n\n  const adjustHeight = newHeight => {\n    const newRows = Math.max(MIN_ROW_COUNT, getNumRowsFromHeight(newHeight - 52) // don't rush the transition to a bigger row count\n    );\n\n    if (newRows !== rows) {\n      onChangeHeight(Math.min(newRows, MAX_ROW_COUNT));\n    }\n  };\n\n  const onEndDrag = () => apiPostControlBarRows(rows);\n\n  const scrollToTop = () => {\n    if (isMaxHeight()) {\n      ref.current.scroll(0, 0);\n    }\n  };\n\n  const toggleMaxHeight = () => {\n    const newRows = isMaxHeight() ? userRows : MAX_ROW_COUNT;\n    scrollToTop();\n    setRows(newRows);\n  };\n\n  const cancelMaxHeight = () => {\n    scrollToTop();\n    setRows(userRows);\n  };\n\n  const onSelectDashboard = () => {\n    const id = getFilteredDashboards()[0]?.id;\n\n    if (id) {\n      history.push(id);\n    }\n  };\n\n  const getFilteredDashboards = () => {\n    const filteredDashboards = arraySort(Object.values(dashboards).filter(d => d.displayName.toLowerCase().includes(filterText.toLowerCase())), 'ASC', 'displayName');\n    return [...filteredDashboards.filter(d => d.starred), ...filteredDashboards.filter(d => !d.starred)];\n  };\n\n  const containerClass = cx(classes.container, isMaxHeight() ? classes.expanded : classes.collapsed);\n  const viewableRows = isSmallScreen(width) && !isMaxHeight() ? MIN_ROW_COUNT : rows;\n  const rowHeightProp = {\n    height: getRowsHeight(viewableRows) + FIRST_ROW_PADDING_HEIGHT\n  };\n\n  const getDashboardChips = () => {\n    const chips = getFilteredDashboards().map(dashboard => <Chip key={dashboard.id} label={dashboard.displayName} starred={dashboard.starred} dashboardId={dashboard.id} selected={dashboard.id === selectedId} onClick={cancelMaxHeight} />);\n\n    if (isSmallScreen(width)) {\n      const chipContainerClasses = cx(classes.chipContainer, isMaxHeight() ? classes.expanded : classes.collapsed);\n      return <div className={chipContainerClasses} style={rowHeightProp}>\n                    {chips}\n                </div>;\n    } else {\n      return chips;\n    }\n  };\n\n  return <>\n            <ControlBar height={getControlBarHeight(viewableRows)} onChangeHeight={!isSmallScreen(width) ? adjustHeight : null} onEndDrag={onEndDrag}>\n                <div className={containerClass} ref={ref} style={rowHeightProp}>\n                    <div className={classes.controls}>\n                        <Link className={classes.newLink} to={'/new'} data-test=\"link-new-dashboard\">\n                            <AddCircleIcon />\n                        </Link>\n                        <Filter onKeypressEnter={onSelectDashboard} onToggleMaxHeight={toggleMaxHeight} isMaxHeight={isMaxHeight()} />\n                    </div>\n                    {getDashboardChips()}\n                </div>\n                <ShowMoreButton onClick={toggleMaxHeight} isMaxHeight={isMaxHeight()} disabled={userRows === MAX_ROW_COUNT} />\n            </ControlBar>\n            <div style={{\n      marginTop: getControlBarHeight(isSmallScreen(width) && !isMaxHeight() ? MIN_ROW_COUNT : userRows) + DRAG_HANDLE_HEIGHT\n    }} />\n        </>;\n};\n\nDashboardsBar.propTypes = {\n  dashboards: PropTypes.object,\n  filterText: PropTypes.string,\n  history: PropTypes.object,\n  selectedId: PropTypes.string,\n  userRows: PropTypes.number,\n  onChangeHeight: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  dashboards: sGetAllDashboards(state),\n  filterText: sGetDashboardsFilter(state),\n  selectedId: sGetSelectedId(state),\n  userRows: sGetControlBarUserRows(state)\n});\n\nconst mapDispatchToProps = {\n  onChangeHeight: acSetControlBarUserRows\n};\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(DashboardsBar));","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst NoContentMessage = ({\n  text\n}) => <div style={{\n  padding: '50px 10px',\n  textAlign: 'center',\n  fontSize: '15px',\n  fontWeight: 500,\n  color: colors.grey600\n}}>\n        {text}\n    </div>;\n\nNoContentMessage.propTypes = {\n  text: PropTypes.string\n};\nexport default NoContentMessage;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nexport const ThreeDots = () => <svg height=\"18\" viewBox=\"0 0 18 18\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"m4 7.5c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm10 0c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm-5 0c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5z\" fill=\"#6e7a8a\" />\n    </svg>;\nexport const SpeechBubble = () => <svg height=\"20\" viewBox=\"0 0 20 20\" width=\"20\" xmlns=\"http://www.w3.org/2000/svg\" style={{\n  margin: '3px 2px 0 2px'\n}} // Temporary fix for the misaligned icon, should be removed once the icon is replaced\n>\n        <path d=\"m20 2h-16c-1.1 0-1.99.9-1.99 2l-.01 18 4-4h14c1.1 0 2-.9 2-2v-12c0-1.1-.9-2-2-2zm-2 12h-12v-2h12zm0-3h-12v-2h12zm0-3h-12v-2h12z\" fill=\"#6e7a8a\" fillRule=\"evenodd\" transform=\"translate(-2 -2)\" />\n    </svg>;\nexport const Warning = () => <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" fill={colors.grey600}>\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z\" />\n    </svg>;\nexport const Fullscreen = () => <svg height=\"16\" viewBox=\"0 0 16 16\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"m6.85355339 9.14644661c.17356635.17356635.1928515.44299075.05785545.63785889l-.05785545.06924789-4.14755339 4.14644661h2.794c.24545989 0 .44960837.1768752.49194433.4101244l.00805567.0898756c0 .2454599-.17687516.4496084-.41012437.4919443l-.08987563.0080557h-4c-.24545989 0-.44960837-.1768752-.49194433-.4101244l-.00805567-.0898756v-4c0-.2761424.22385763-.5.5-.5.24545989 0 .44960837.1768752.49194433.4101244l.00805567.0898756v2.792l4.14644661-4.14555339c.19526215-.19526215.51184463-.19526215.70710678 0zm6.14644661-2.14644661v6h-6v-1h5v-5zm-4-4v1h-5v5h-1v-6zm5.5-2c.2454599 0 .4496084.17687516.4919443.41012437l.0080557.08987563v4c0 .27614237-.2238576.5-.5.5-.2454599 0-.4496084-.17687516-.4919443-.41012437l-.0080557-.08987563v-2.794l-4.14644661 4.14755339c-.19526215.19526215-.51184463.19526215-.70710678 0-.17356635-.17356635-.1928515-.44299075-.05785545-.63785889l.05785545-.06924789 4.14655339-4.14744661-2.793.001c-.2454599 0-.4496084-.17687516-.4919443-.41012437l-.0080557-.08987563c0-.24545989.1768752-.44960837.4101244-.49194433l.0898756-.00805567z\" fill=\"inherit\" />\n    </svg>;\nexport const ExitFullscreen = () => <svg height=\"16\" viewBox=\"0 0 16 16\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"m6.5 9c.24545989 0 .44960837.17687516.49194433.41012437l.00805567.08987563v4c0 .2761424-.22385763.5-.5.5-.24545989 0-.44960837-.1768752-.49194433-.4101244l-.00805567-.0898756v-2.794l-3.64644661 3.6475534c-.19526215.1952621-.51184463.1952621-.70710678 0-.17356635-.1735664-.1928515-.4429908-.05785545-.6378589l.05785545-.0692479 3.64555339-3.6464466h-2.792c-.24545989 0-.44960837-.17687516-.49194433-.41012437l-.00805567-.08987563c0-.24545989.17687516-.44960837.41012437-.49194433l.08987563-.00805567zm7.5-.5v5.5h-5.5v-1h4.5v-4.5zm-6.5-6.5v1h-4.5v4.5h-1v-5.5zm6.8535534-.35355339c.1735663.17356635.1928515.44299075.0578554.63785889l-.0578554.06924789-3.6475534 3.64644661h2.794c.2454599 0 .4496084.17687516.4919443.41012437l.0080557.08987563c0 .24545989-.1768752.44960837-.4101244.49194433l-.0898756.00805567h-4c-.24545989 0-.44960837-.17687516-.49194433-.41012437l-.00805567-.08987563v-4c0-.27614237.22385763-.5.5-.5.24545989 0 .44960837.17687516.49194433.41012437l.00805567.08987563v2.792l3.6464466-3.64555339c.1952622-.19526215.5118446-.19526215.7071068 0z\" fill=\"inherit\" />\n    </svg>;","export const RECEIVED_USER = 'RECEIVED_USER';\nexport const DEFAULT_STATE_USER = {\n  id: '',\n  username: '',\n  uiLocale: '',\n  isSuperuser: false\n};\nexport default ((state = DEFAULT_STATE_USER, action) => {\n  switch (action.type) {\n    case RECEIVED_USER:\n      {\n        return fromD2ToUserObj(action.value);\n      }\n\n    default:\n      return state;\n  }\n});\n\nfunction fromD2ToUserObj(d2Object) {\n  return {\n    id: d2Object.id,\n    username: d2Object.username,\n    uiLocale: d2Object.settings.keyUiLocale,\n    isSuperuser: d2Object.authorities.has('ALL')\n  };\n} // selectors\n\n\nexport const sGetUserId = state => state.user.id;\nexport const sGetUserUsername = state => state.user.username;\nexport const sGetIsSuperuser = state => state.user.isSuperuser;\nexport const sGetUiLocale = state => state.user.uiLocale;","import { getDimensionById, DIMENSION_ID_PERIOD, DIMENSION_ID_ORGUNIT } from '@dhis2/analytics';\nexport const SET_DIMENSIONS = 'SET_DIMENSIONS';\nexport const DEFAULT_DIMENSIONS = [getDimensionById(DIMENSION_ID_PERIOD), getDimensionById(DIMENSION_ID_ORGUNIT)];\nexport default ((state = DEFAULT_DIMENSIONS, action) => {\n  switch (action.type) {\n    case SET_DIMENSIONS:\n      {\n        return [...DEFAULT_DIMENSIONS, ...action.value];\n      }\n\n    default:\n      return state;\n  }\n});\nexport const sGetDimensions = state => state.dimensions;","import { sGetDimensions } from './dimensions';\nimport { createSelector } from 'reselect';\nexport const CLEAR_ITEM_FILTERS = 'CLEAR_ITEM_FILTERS';\nexport const SET_ITEM_FILTERS = 'SET_ITEM_FILTERS';\nexport const ADD_ITEM_FILTER = 'ADD_ITEM_FILTER';\nexport const REMOVE_ITEM_FILTER = 'REMOVE_ITEM_FILTER';\nexport const DEFAULT_STATE_ITEM_FILTERS = {};\nexport default ((state = DEFAULT_STATE_ITEM_FILTERS, action) => {\n  switch (action.type) {\n    case ADD_ITEM_FILTER:\n      {\n        return { ...state,\n          [action.filter.id]: action.filter.value\n        };\n      }\n\n    case REMOVE_ITEM_FILTER:\n      {\n        const newState = { ...state\n        };\n        delete newState[action.id];\n        return newState;\n      }\n\n    case SET_ITEM_FILTERS:\n      {\n        return action.filters;\n      }\n\n    case CLEAR_ITEM_FILTERS:\n      {\n        return DEFAULT_STATE_ITEM_FILTERS;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetItemFiltersRoot = state => state.itemFilters; // simplify the filters structure to:\n// [{ id: 'pe', name: 'Period', values: [{ id: 2019: name: '2019' }, {id: 'LAST_MONTH', name: 'Last month' }]}, ...]\n\nexport const sGetNamedItemFilters = createSelector([sGetItemFiltersRoot, sGetDimensions], (filters, dimensions) => Object.keys(filters).reduce((arr, id) => {\n  arr.push({\n    id: id,\n    name: dimensions.find(dimension => dimension.id === id).name,\n    values: filters[id].map(value => ({\n      id: value.id,\n      name: value.displayName || value.name\n    }))\n  });\n  return arr;\n}, []));","import { ADD_ITEM_FILTER, REMOVE_ITEM_FILTER, SET_ITEM_FILTERS, CLEAR_ITEM_FILTERS } from '../reducers/itemFilters';\nexport const FILTER_ORG_UNIT = 'ou'; // actions\n\nexport const acAddItemFilter = filter => ({\n  type: ADD_ITEM_FILTER,\n  filter\n});\nexport const acRemoveItemFilter = id => ({\n  type: REMOVE_ITEM_FILTER,\n  id\n});\nexport const acClearItemFilters = () => ({\n  type: CLEAR_ITEM_FILTERS\n});\nexport const acSetItemFilters = filters => ({\n  type: SET_ITEM_FILTERS,\n  filters\n});","import update from 'immutability-helper';\nimport { arrayToIdMap } from '../modules/util';\nexport const RECEIVED_MESSAGES = 'RECEIVED_MESSAGES';\nexport default ((state = {}, action) => {\n  switch (action.type) {\n    case RECEIVED_MESSAGES:\n      {\n        const conversations = arrayToIdMap(action.value);\n        const newState = update(state, {\n          $merge: conversations\n        });\n        return newState;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetMessagesRoot = state => state.messages;","export const messageConversationsQuery = {\n  resource: 'messageConversations',\n  params: {\n    fields: 'id,messageCount,lastUpdated,messageType,displayName,read,messages[id,read,sender[id,displayName],text,lastUpdated]',\n    order: 'read:asc',\n    pageSize: 200\n  }\n};\nexport const getMessages = async dataEngine => {\n  try {\n    const {\n      messageConversations\n    } = await dataEngine.query({\n      messageConversations: messageConversationsQuery\n    });\n    return messageConversations.messageConversations;\n  } catch (error) {\n    console.log('Error:', error);\n  }\n};","import { RECEIVED_MESSAGES } from '../../../reducers/messages';\nimport { getMessages } from '../../../api/messages';\n\nconst onError = (action, error) => {\n  console.log(`Error in action ${action}: ${error}`);\n  return error;\n};\n\nexport const receivedMessages = value => ({\n  type: RECEIVED_MESSAGES,\n  value\n});\nexport const tGetMessages = dataEngine => async dispatch => {\n  try {\n    const messageConversations = await getMessages(dataEngine);\n    return dispatch(receivedMessages(messageConversations));\n  } catch (err) {\n    return onError('Get Messages', err);\n  }\n};","export const SET_ALERT_MESSAGE = 'SET_ALERT_MESSAGE';\nexport const CLEAR_ALERT_MESSAGE = 'CLEAR_ALERT_MESSAGE';\nexport const DEFAULT_STATE_ALERT = null;\nexport default ((state = DEFAULT_STATE_ALERT, action) => {\n  switch (action.type) {\n    case SET_ALERT_MESSAGE:\n      {\n        return action.value;\n      }\n\n    case CLEAR_ALERT_MESSAGE:\n      {\n        return DEFAULT_STATE_ALERT;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetAlertMessage = state => state.alert;","import { SET_ALERT_MESSAGE, CLEAR_ALERT_MESSAGE } from '../reducers/alert';\nexport const acSetAlertMessage = value => ({\n  type: SET_ALERT_MESSAGE,\n  value\n});\nexport const acClearAlertMessage = () => ({\n  type: CLEAR_ALERT_MESSAGE\n});","import { orObject } from '../modules/util';\nimport objectClean from 'd2-utilizr/lib/objectClean';\n/** @module reducers/visualizations */\n\nexport const ADD_VISUALIZATION = 'ADD_VISUALIZATION';\nexport const SET_ACTIVE_VISUALIZATION_TYPE = 'SET_ACTIVE_VISUALIZATION_TYPE';\nexport const CLEAR_VISUALIZATIONS = 'CLEAR_VISUALIZATIONS';\nexport const DEFAULT_STATE_VISUALIZATIONS = {};\n\nconst isEmpty = p => p === undefined || p === null;\n\nexport default ((state = DEFAULT_STATE_VISUALIZATIONS, action) => {\n  switch (action.type) {\n    case ADD_VISUALIZATION:\n      {\n        return { ...state,\n          [action.value.id]: objectClean({ ...orObject(state[action.value.id]),\n            ...action.value\n          }, isEmpty)\n        };\n      }\n\n    case CLEAR_VISUALIZATIONS:\n      {\n        return DEFAULT_STATE_VISUALIZATIONS;\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetVisualizationsRoot = state => state.visualizations; // selectors level 1\n\nexport const sGetVisualization = (state, id) => {\n  return sGetVisualizationsRoot(state)[id];\n};","import { ADD_VISUALIZATION, CLEAR_VISUALIZATIONS } from '../reducers/visualizations';\nexport const acAddVisualization = value => ({\n  type: ADD_VISUALIZATION,\n  value\n});\nexport const acClearVisualizations = () => ({\n  type: CLEAR_VISUALIZATIONS\n});","import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { getEndPointName, MAP } from '../modules/itemTypes';\nimport { getVisualizationId } from '../modules/item'; // Id, name\n\nexport const getIdNameFields = ({\n  rename\n} = {}) => ['id', `${rename ? 'displayName~rename(name)' : 'name,displayName'}`]; // Item\n\nexport const getItemFields = () => ['dimensionItem~rename(id)', 'displayName~rename(name)', 'dimensionItemType']; // Dimension\n\nexport const getDimensionFields = ({\n  withItems\n}) => arrayClean(['dimension', 'legendSet[id]', 'filter', 'programStage', withItems ? `items[${getItemFields().join(',')}]` : ``]); // Axis\n\nexport const getAxesFields = ({\n  withItems\n}) => [`columns[${getDimensionFields({\n  withItems\n}).join(',')}]`, `rows[${getDimensionFields({\n  withItems\n}).join(',')}]`, `filters[${getDimensionFields({\n  withItems\n}).join(',')}]`]; // Favorite\n\nexport const getFavoriteFields = ({\n  withDimensions,\n  withOptions\n}) => {\n  return arrayClean([`${getIdNameFields({\n    rename: true\n  }).join(',')}`, 'displayDescription~rename(description)', withDimensions ? `${getAxesFields({\n    withItems: true\n  }).join(',')}` : ``, withOptions ? ['*', '!attributeDimensions', '!attributeValues', '!category', '!categoryDimensions', '!categoryOptionGroupSetDimensions', '!columnDimensions', '!dataDimensionItems', '!dataElementDimensions', '!dataElementGroupSetDimensions', '!filterDimensions', '!itemOrganisationUnitGroups', '!lastUpdatedBy', '!organisationUnitGroupSetDimensions', '!organisationUnitLevels', '!organisationUnits', '!programIndicatorDimensions', '!relativePeriods', '!reportParams', '!rowDimensions', '!translations', '!userOrganisationUnit', '!userOrganisationUnitChildren', '!userOrganisationUnitGrandChildren'].join(',') : '']);\n};\nexport const getFavoritesFields = ({\n  withDimensions\n}) => [`reportTable[${getFavoriteFields({\n  withDimensions\n}).join(',')}]`, `chart[${['type', ...getFavoriteFields({\n  withDimensions\n})].join(',')}]`, `map[${getFavoriteFields({\n  withDimensions\n}).join(',')}]`, `eventReport[${getFavoriteFields({\n  withDimensions\n}).join(',')}]`, `eventChart[${getFavoriteFields({\n  withDimensions\n}).join(',')}]`]; // List item\n\nexport const getListItemFields = () => [`reports[${['type', ...getIdNameFields({\n  rename: true\n})].join(',')}]`, `resources[${getIdNameFields({\n  rename: true\n}).join(',')}]`, `users[${getIdNameFields({\n  rename: true\n}).join(',')}]`]; // Map\n\nexport const getMapFields = () => [`${getIdNameFields({\n  rename: true\n}).join(',')}`, 'user,longitude,latitude,zoom,basemap', `mapViews[${getFavoriteFields({\n  withDimensions: true,\n  withOptions: true\n})}]`]; // Api\n\nexport const apiFetchVisualization = async item => {\n  const id = getVisualizationId(item);\n  const fields = item.type === MAP ? getMapFields() : getFavoriteFields({\n    withDimensions: true,\n    withOptions: true\n  });\n  const d2 = await getInstance();\n  return await d2.Api.getApi().get(`${getEndPointName(item.type)}/${id}`, {\n    fields\n  });\n};","import arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { getListItemFields, getFavoritesFields, getIdNameFields } from './metadata'; // Helper functions\n\nexport const onError = error => console.log('Error: ', error); // Dashboard item\n\nexport const getDashboardItemsFields = ({\n  withFavorite\n} = {}) => arrayClean(['id', 'type', 'shape', 'x', 'y', 'width~rename(w)', 'height~rename(h)', 'messages', 'text', 'appKey', `${getListItemFields().join(',')}`, withFavorite ? `${getFavoritesFields({\n  withDimensions: withFavorite.withDimensions\n}).join(',')}` : ``]); // Dashboard\n\nexport const getDashboardFields = ({\n  withItems,\n  withFavorite\n} = {}) => arrayClean([`${getIdNameFields().join(',')}`, 'description', 'displayDescription', 'favorite', `user[${getIdNameFields({\n  rename: true\n}).join(',')}]`, 'created', 'lastUpdated', 'access', 'href', // needed for d2-ui-translations-dialog, since we don't pass a d2 Model anymore\nwithItems ? `dashboardItems[${getDashboardItemsFields({\n  withFavorite\n}).join(',')}]` : ``]);","import arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { onError, getDashboardFields } from './index';\nexport const dashboardsQuery = {\n  resource: 'dashboards',\n  params: {\n    fields: [getDashboardFields(), 'dashboardItems[id]'].join(','),\n    paging: false\n  }\n};\nexport const dashboardQuery = {\n  resource: 'dashboards',\n  id: ({\n    id\n  }) => id,\n  params: {\n    fields: arrayClean(getDashboardFields({\n      withItems: true,\n      withFavorite: {\n        withDimensions: false\n      }\n    })).join(',')\n  }\n};\nexport const starDashboardMutation = {\n  type: 'create',\n  resource: 'dashboards',\n  // TODO create mutation does not accept the id function\n  // we must use a workaround until dataEngine supports dynamic resource/path\n  id: ({\n    id\n  }) => `${id}/favorite`\n};\nexport const unstarDashboardMutation = {\n  type: 'delete',\n  resource: 'dashboards',\n  id: ({\n    id\n  }) => `${id}/favorite`\n};\nexport const deleteDashboardMutation = {\n  type: 'delete',\n  resource: 'dashboards',\n  id: ({\n    id\n  }) => id\n}; // Get \"all\" dashboards on startup\n\nexport const apiFetchDashboards = async dataEngine => {\n  try {\n    const dashboardsData = await dataEngine.query({\n      dashboards: dashboardsQuery\n    });\n    return dashboardsData.dashboards.dashboards;\n  } catch (error) {\n    onError(error);\n  }\n}; // Get more info about selected dashboard\n\nexport const apiFetchDashboard = async (dataEngine, id) => {\n  try {\n    const dashboardData = await dataEngine.query({\n      dashboard: dashboardQuery\n    }, {\n      variables: {\n        id\n      }\n    });\n    return dashboardData.dashboard;\n  } catch (error) {\n    onError(error);\n  }\n}; // Star dashboard\n\nexport const apiStarDashboard = async (dataEngine, id, isStarred) => {\n  try {\n    if (isStarred) {\n      await dataEngine.mutate(starDashboardMutation, {\n        variables: {\n          id\n        }\n      });\n    } else {\n      await dataEngine.mutate(unstarDashboardMutation, {\n        variables: {\n          id\n        }\n      });\n    }\n  } catch (error) {\n    onError(error);\n  }\n};\nexport const apiDeleteDashboard = async (dataEngine, id) => {\n  try {\n    await dataEngine.mutate(deleteDashboardMutation, {\n      variables: {\n        id\n      }\n    });\n  } catch (error) {\n    onError(error);\n  }\n};","import { apiGetUserDataStoreValue, apiPostUserDataStoreValue } from './userDataStore';\nimport { DEFAULT_STATE_SELECTED_SHOWDESCRIPTION } from '../reducers/selected';\nconst KEY_SHOW_DESCRIPTION = 'showDescription';\nexport const apiGetShowDescription = async () => await apiGetUserDataStoreValue(KEY_SHOW_DESCRIPTION, DEFAULT_STATE_SELECTED_SHOWDESCRIPTION);\nexport const apiPostShowDescription = async (value) => await apiPostUserDataStoreValue(KEY_SHOW_DESCRIPTION, value);","import i18n from '@dhis2/d2-i18n';\nimport { getCustomDashboards, sGetDashboardById } from '../reducers/dashboards';\nimport { SET_SELECTED_ID, SET_SELECTED_ISLOADING, SET_SELECTED_SHOWDESCRIPTION, SET_SELECTED_ITEM_ACTIVE_TYPE, CLEAR_SELECTED_ITEM_ACTIVE_TYPES, sGetSelectedIsLoading, sGetSelectedId } from '../reducers/selected';\nimport { sGetUserUsername } from '../reducers/user';\nimport { acSetDashboardItems, acAppendDashboards } from './dashboards';\nimport { acClearItemFilters } from './itemFilters';\nimport { tGetMessages } from '../components/Item/MessagesItem/actions';\nimport { acSetAlertMessage, acClearAlertMessage } from './alert';\nimport { acAddVisualization, acClearVisualizations } from './visualizations';\nimport { apiFetchDashboard } from '../api/dashboards';\nimport { storePreferredDashboardId } from '../api/localStorage';\nimport { apiGetShowDescription, apiPostShowDescription } from '../api/description';\nimport { withShape } from '../components/ItemGrid/gridUtil';\nimport { getVisualizationFromItem } from '../modules/item';\nimport { REPORT_TABLE, CHART, MAP, EVENT_REPORT, EVENT_CHART, MESSAGES } from '../modules/itemTypes'; // actions\n\nexport const acSetSelectedId = value => ({\n  type: SET_SELECTED_ID,\n  value\n});\nexport const acSetSelectedIsLoading = value => ({\n  type: SET_SELECTED_ISLOADING,\n  value\n});\nexport const acSetSelectedShowDescription = value => ({\n  type: SET_SELECTED_SHOWDESCRIPTION,\n  value\n});\nexport const acSetSelectedItemActiveType = (id, activeType) => {\n  const action = {\n    type: SET_SELECTED_ITEM_ACTIVE_TYPE,\n    id,\n    activeType\n  };\n  return action;\n};\nexport const acClearSelectedItemActiveTypes = () => ({\n  type: CLEAR_SELECTED_ITEM_ACTIVE_TYPES\n}); // thunks\n\nexport const tSetSelectedDashboardById = id => async (dispatch, getState, dataEngine) => {\n  dispatch(acSetSelectedIsLoading(true));\n  const alertTimeout = setTimeout(() => {\n    const name = sGetDashboardById(getState(), id)?.displayName;\n\n    if (sGetSelectedIsLoading(getState()) && name) {\n      dispatch(acSetAlertMessage(i18n.t('Loading dashboard – {{name}}', {\n        name\n      })));\n    }\n  }, 500);\n\n  const onSuccess = selected => {\n    dispatch(acAppendDashboards(selected));\n    const customDashboard = getCustomDashboards(selected)[0];\n    dispatch(acSetDashboardItems(withShape(customDashboard.dashboardItems)));\n    storePreferredDashboardId(sGetUserUsername(getState()), id);\n\n    if (id !== sGetSelectedId(getState())) {\n      dispatch(acClearItemFilters());\n      dispatch(acClearVisualizations());\n      dispatch(acClearSelectedItemActiveTypes());\n    }\n\n    customDashboard.dashboardItems.forEach(item => {\n      switch (item.type) {\n        case REPORT_TABLE:\n        case CHART:\n        case MAP:\n        case EVENT_REPORT:\n        case EVENT_CHART:\n          dispatch(acAddVisualization(getVisualizationFromItem(item)));\n          break;\n\n        case MESSAGES:\n          dispatch(tGetMessages(dataEngine));\n          break;\n\n        default:\n          break;\n      }\n    });\n    dispatch(acSetSelectedId(id));\n    dispatch(acSetSelectedIsLoading(false));\n    clearTimeout(alertTimeout);\n    dispatch(acClearAlertMessage());\n    return selected;\n  };\n\n  const onError = error => {\n    console.log('Error: ', error);\n    return error;\n  };\n\n  try {\n    const dashboard = await apiFetchDashboard(dataEngine, id);\n    return onSuccess(dashboard);\n  } catch (err) {\n    return onError(err);\n  }\n};\nexport const tSetShowDescription = () => async dispatch => {\n  const onSuccess = value => {\n    dispatch(acSetSelectedShowDescription(value));\n  };\n\n  const onError = error => {\n    console.log('Error (apiGetShowDescription): ', error);\n    return error;\n  };\n\n  try {\n    const showDescription = await apiGetShowDescription();\n    return onSuccess(showDescription);\n  } catch (err) {\n    return onError(err);\n  }\n};\nexport const tUpdateShowDescription = value => async dispatch => {\n  const onSuccess = () => {\n    dispatch(acSetSelectedShowDescription(value));\n  };\n\n  const onError = error => {\n    console.log('Error (apiGetShowDescription): ', error);\n    return error;\n  };\n\n  try {\n    await apiPostShowDescription(value);\n    return onSuccess();\n  } catch (err) {\n    return onError(err);\n  }\n};","export const getPreferredDashboardId = username => localStorage.getItem(`dhis2.dashboard.current.${username}`) || undefined;\nexport const storePreferredDashboardId = (username, dashboardId) => {\n  localStorage.setItem(`dhis2.dashboard.current.${username}`, dashboardId);\n};","import { SET_DASHBOARDS, ADD_DASHBOARDS, SET_DASHBOARD_STARRED, SET_DASHBOARD_DISPLAY_NAME, SET_DASHBOARD_ITEMS } from '../reducers/dashboards';\nimport { getCustomDashboards, sGetDashboardById, sGetDashboardsSortedByStarred } from '../reducers/dashboards';\nimport { NON_EXISTING_DASHBOARD_ID } from '../reducers/selected';\nimport { sGetUserUsername } from '../reducers/user';\nimport { tSetSelectedDashboardById, acSetSelectedId } from './selected';\nimport { apiFetchDashboards, apiStarDashboard, apiDeleteDashboard } from '../api/dashboards';\nimport { getPreferredDashboardId } from '../api/localStorage';\nimport { arrayToIdMap } from '../modules/util'; // actions\n\nexport const acSetDashboards = dashboards => ({\n  type: SET_DASHBOARDS,\n  value: arrayToIdMap(getCustomDashboards(dashboards))\n});\nexport const acAppendDashboards = dashboards => ({\n  type: ADD_DASHBOARDS,\n  value: arrayToIdMap(getCustomDashboards(dashboards))\n});\nexport const acSetDashboardStarred = (dashboardId, isStarred) => ({\n  type: SET_DASHBOARD_STARRED,\n  dashboardId: dashboardId,\n  value: isStarred\n});\nexport const acSetDashboardDisplayName = (dashboardId, value) => ({\n  type: SET_DASHBOARD_DISPLAY_NAME,\n  dashboardId,\n  value\n});\nexport const acSetDashboardItems = value => ({\n  type: SET_DASHBOARD_ITEMS,\n  value\n}); // thunks\n\nexport const tFetchDashboards = () => async (dispatch, getState, dataEngine) => {\n  const dashboards = await apiFetchDashboards(dataEngine);\n  dispatch(acSetDashboards(dashboards));\n};\nexport const tSelectDashboard = id => async (dispatch, getState) => {\n  const onError = error => {\n    console.log('Error (apiFetchDashboards): ', error);\n    return error;\n  };\n\n  try {\n    const state = getState();\n    let dashboardToSelect = null;\n\n    if (id) {\n      dashboardToSelect = sGetDashboardById(state, id) || null;\n    } else {\n      const preferredId = getPreferredDashboardId(sGetUserUsername(state));\n      const dash = sGetDashboardById(state, preferredId);\n      dashboardToSelect = preferredId && dash ? dash : sGetDashboardsSortedByStarred(state)[0];\n    }\n\n    if (dashboardToSelect) {\n      dispatch(tSetSelectedDashboardById(dashboardToSelect.id));\n    } else {\n      dispatch(acSetSelectedId(NON_EXISTING_DASHBOARD_ID));\n    }\n  } catch (err) {\n    return onError(err);\n  }\n};\nexport const tStarDashboard = (id, isStarred) => async (dispatch, getState, dataEngine) => {\n  const onSuccess = id => {\n    dispatch(acSetDashboardStarred(id, isStarred));\n    return id;\n  };\n\n  const onError = error => {\n    console.log('Error (apiStarDashboard): ', error);\n    return error;\n  };\n\n  try {\n    await apiStarDashboard(dataEngine, id, isStarred);\n    return onSuccess(id);\n  } catch (err) {\n    return onError(err);\n  }\n};\nexport const tDeleteDashboard = id => async (dispatch, getState, dataEngine) => {\n  try {\n    await apiDeleteDashboard(dataEngine, id);\n    await dispatch(tFetchDashboards());\n    return Promise.resolve();\n  } catch (err) {\n    console.log('Error (deleteDashboard): ', err);\n    return err;\n  }\n};","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { useD2 } from '@dhis2/app-runtime-adapter-d2';\nimport { Button, Modal, ModalTitle, ModalContent, ModalActions, ButtonStrip } from '@dhis2/ui';\nimport { PeriodDimension, DynamicDimension, OrgUnitDimension, DIMENSION_ID_PERIOD, DIMENSION_ID_ORGUNIT } from '@dhis2/analytics';\nimport { acAddItemFilter, acRemoveItemFilter } from '../../actions/itemFilters';\nimport { sGetItemFiltersRoot } from '../../reducers/itemFilters';\n\nconst FilterDialog = ({\n  displayNameProperty,\n  dimension,\n  initiallySelectedItems,\n  addItemFilter,\n  removeItemFilter,\n  onClose\n}) => {\n  const [filters, setFilters] = useState(initiallySelectedItems);\n  const {\n    d2\n  } = useD2({});\n\n  const onSelectItems = ({\n    dimensionId,\n    items\n  }) => {\n    setFilters({\n      [dimensionId]: items\n    });\n  };\n\n  const onDeselectItems = ({\n    dimensionId,\n    itemIdsToRemove\n  }) => {\n    const oldList = filters[dimensionId] || [];\n    const newList = oldList.filter(item => !itemIdsToRemove.includes(item.id));\n    setFilters({ ...filters,\n      [dimensionId]: newList\n    });\n  };\n\n  const onReorderItems = ({\n    dimensionId,\n    itemIds\n  }) => {\n    const oldList = filters[dimensionId] || [];\n    const reorderedList = itemIds.map(id => oldList.find(item => item.id === id));\n    setFilters({ ...filters,\n      [dimensionId]: reorderedList\n    });\n  };\n\n  const saveFilter = () => {\n    const id = dimension.id;\n    const filterItems = filters[id];\n\n    if (filterItems && filterItems.length) {\n      addItemFilter({\n        id,\n        value: [...filterItems]\n      });\n    } else {\n      removeItemFilter(id);\n    }\n\n    onClose(id);\n  };\n\n  const renderDialogContent = () => {\n    const commonProps = {\n      d2,\n      onSelect: onSelectItems,\n      onDeselect: onDeselectItems,\n      onReorder: onReorderItems\n    };\n    const selectedItems = filters[dimension.id] || [];\n\n    switch (dimension.id) {\n      case DIMENSION_ID_PERIOD:\n        {\n          return <PeriodDimension selectedPeriods={selectedItems} onSelect={commonProps.onSelect} />;\n        }\n\n      case DIMENSION_ID_ORGUNIT:\n        return <OrgUnitDimension displayNameProperty={displayNameProperty} ouItems={selectedItems} {...commonProps} />;\n\n      default:\n        return <DynamicDimension selectedItems={selectedItems} dimensionId={dimension.id} onSelect={commonProps.onSelect} />;\n    }\n  };\n\n  return <>\n            {dimension.id && <Modal dataTest={`${dimension.id}-dimension-modal`} onClose={onClose} position=\"top\" large>\n                    <ModalTitle>{dimension.name}</ModalTitle>\n                    <ModalContent>{renderDialogContent()}</ModalContent>\n                    <ModalActions>\n                        <ButtonStrip>\n                            <Button secondary onClick={onClose}>\n                                {i18n.t('Cancel')}\n                            </Button>\n                            <Button primary onClick={saveFilter}>\n                                {i18n.t('Confirm')}\n                            </Button>\n                        </ButtonStrip>\n                    </ModalActions>\n                </Modal>}\n        </>;\n};\n\nFilterDialog.propTypes = {\n  addItemFilter: PropTypes.func,\n  dimension: PropTypes.object,\n  displayNameProperty: PropTypes.string,\n  initiallySelectedItems: PropTypes.object,\n  removeItemFilter: PropTypes.func,\n  onClose: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  initiallySelectedItems: sGetItemFiltersRoot(state)\n});\n\nexport default connect(mapStateToProps, {\n  addItemFilter: acAddItemFilter,\n  removeItemFilter: acRemoveItemFilter\n})(FilterDialog);","export const SET_SETTINGS = 'SET_SETTINGS';\nexport const ADD_SETTINGS = 'ADD_SETTINGS';\nexport const DEFAULT_SETTINGS = {\n  keyDateFormat: 'yyyy-MM-dd',\n  keyAnalysisRelativePeriod: 'LAST_12_MONTHS',\n  keyAnalysisDigitGroupSeparator: 'SPACE',\n  displayNameProperty: 'displayName',\n  uiLocale: 'en',\n  rootOrganisationUnit: {},\n  keyGatherAnalyticalObjectStatisticsInDashboardViews: false\n};\nexport default ((state = DEFAULT_SETTINGS, action) => {\n  switch (action.type) {\n    case SET_SETTINGS:\n      {\n        return Object.assign({}, action.value);\n      }\n\n    case ADD_SETTINGS:\n      {\n        return { ...state,\n          ...action.value\n        };\n      }\n\n    default:\n      return state;\n  }\n}); // Selectors\n\nexport const sGetSettings = state => state.settings;\nexport const sGetSettingsDisplayNameProperty = state => sGetSettings(state).displayNameProperty;\nexport const sGetRootOrgUnit = state => sGetSettings(state).rootOrganisationUnit;\nexport const sGetRelativePeriod = state => sGetSettings(state).keyAnalysisRelativePeriod;\nexport const sGetUiLocale = state => sGetSettings(state).uiLocale;\nexport const sGatherAnalyticalObjectStatisticsInDashboardViews = state => sGetSettings(state).keyGatherAnalyticalObjectStatisticsInDashboardViews;","export const SET_ACTIVE_MODAL_DIMENSION = 'SET_ACTIVE_MODAL_DIMENSION';\nexport const CLEAR_ACTIVE_MODAL_DIMENSION = 'CLEAR_ACTIVE_MODAL_DIMENSION';\nexport const DEFAULT_STATE_ACTIVE_MODAL_DIMENSION = {};\nexport default ((state = DEFAULT_STATE_ACTIVE_MODAL_DIMENSION, action) => {\n  switch (action.type) {\n    case SET_ACTIVE_MODAL_DIMENSION:\n      {\n        return action.value;\n      }\n\n    case CLEAR_ACTIVE_MODAL_DIMENSION:\n      {\n        return DEFAULT_STATE_ACTIVE_MODAL_DIMENSION;\n      }\n\n    default:\n      return state;\n  }\n});\nexport const sGetActiveModalDimension = state => state.activeModalDimension;","import { SET_ACTIVE_MODAL_DIMENSION, CLEAR_ACTIVE_MODAL_DIMENSION } from '../reducers/activeModalDimension';\nexport const acSetActiveModalDimension = value => ({\n  type: SET_ACTIVE_MODAL_DIMENSION,\n  value\n});\nexport const acClearActiveModalDimension = () => ({\n  type: CLEAR_ACTIVE_MODAL_DIMENSION\n});","import React, { useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport isEmpty from 'lodash/isEmpty';\nimport i18n from '@dhis2/d2-i18n';\nimport { DimensionsPanel } from '@dhis2/analytics';\nimport { Button, Popover } from '@dhis2/ui';\nimport FilterDialog from './FilterDialog';\nimport { sGetSettingsDisplayNameProperty } from '../../reducers/settings';\nimport { sGetActiveModalDimension } from '../../reducers/activeModalDimension';\nimport { sGetDimensions } from '../../reducers/dimensions';\nimport { sGetItemFiltersRoot } from '../../reducers/itemFilters';\nimport { acClearActiveModalDimension, acSetActiveModalDimension } from '../../actions/activeModalDimension';\nimport classes from './styles/FilterSelector.module.css';\n\nconst FilterSelector = props => {\n  const [showPopover, setShowPopover] = useState(false);\n  const ref = useRef(null);\n\n  const onCloseDialog = () => {\n    setShowPopover(false);\n    props.clearActiveModalDimension();\n  };\n\n  const selectDimension = id => {\n    props.setActiveModalDimension(props.dimensions.find(dimension => dimension.id === id));\n  };\n\n  return <>\n            <span className={classes.buttonContainer} ref={ref}>\n                <Button onClick={() => setShowPopover(true)}>\n                    {i18n.t('Add filter')}\n                    <ArrowDropDownIcon />\n                </Button>\n            </span>\n            {showPopover && <Popover onClickOutside={onCloseDialog} reference={ref} arrow={true} placement=\"bottom-start\" dataTest=\"dashboard-filter-popover\">\n                    <DimensionsPanel style={{\n        width: '320px'\n      }} dimensions={props.dimensions} onDimensionClick={selectDimension} selectedIds={Object.keys(props.initiallySelectedItems)} />\n                </Popover>}\n            {!isEmpty(props.dimension) ? <FilterDialog displayNameProperty={props.displayNameProperty} dimension={props.dimension} onClose={onCloseDialog} /> : null}\n        </>;\n};\n\nconst mapStateToProps = state => ({\n  displayNameProperty: sGetSettingsDisplayNameProperty(state),\n  dimension: sGetActiveModalDimension(state),\n  dimensions: sGetDimensions(state),\n  initiallySelectedItems: sGetItemFiltersRoot(state)\n});\n\nFilterSelector.propTypes = {\n  clearActiveModalDimension: PropTypes.func,\n  dimension: PropTypes.object,\n  dimensions: PropTypes.array,\n  displayNameProperty: PropTypes.string,\n  initiallySelectedItems: PropTypes.object,\n  setActiveModalDimension: PropTypes.func\n};\nexport default connect(mapStateToProps, {\n  clearActiveModalDimension: acClearActiveModalDimension,\n  setActiveModalDimension: acSetActiveModalDimension\n})(FilterSelector);","import React, { useState, createRef } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { Link, Redirect } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport SharingDialog from '@dhis2/d2-ui-sharing-dialog';\nimport Star from '@material-ui/icons/Star';\nimport StarBorder from '@material-ui/icons/StarBorder';\nimport { Button, FlyoutMenu, Popover, MenuItem, colors } from '@dhis2/ui';\nimport { useD2 } from '@dhis2/app-runtime-adapter-d2';\nimport { useWindowDimensions } from '../WindowDimensionsProvider';\nimport { ThreeDots } from '../Item/VisualizationItem/assets/icons';\nimport { orObject } from '../../modules/util';\nimport { tStarDashboard } from '../../actions/dashboards';\nimport { tUpdateShowDescription } from '../../actions/selected';\nimport FilterSelector from '../ItemFilter/FilterSelector';\nimport { sGetSelectedId, sGetSelectedShowDescription } from '../../reducers/selected';\nimport { sGetDashboardById, sGetDashboardItems, EMPTY_DASHBOARD } from '../../reducers/dashboards';\nimport isSmallScreen from '../../modules/isSmallScreen';\nimport classes from './styles/ViewTitleBar.module.css';\n\nconst ViewTitleBar = props => {\n  const [moreOptionsIsOpen, setMoreOptionsIsOpen] = useState(false);\n  const [sharingDialogIsOpen, setSharingDialogIsOpen] = useState(false);\n  const [redirectUrl, setRedirectUrl] = useState(null);\n  const {\n    width\n  } = useWindowDimensions();\n  const {\n    d2\n  } = useD2({});\n  const {\n    id,\n    name,\n    description,\n    access,\n    showDescription,\n    starred,\n    onToggleStarredDashboard,\n    onShowHideDescription\n  } = props;\n\n  const toggleSharingDialog = () => setSharingDialogIsOpen(!sharingDialogIsOpen);\n\n  const toggleMoreOptions = () => setMoreOptionsIsOpen(!moreOptionsIsOpen);\n\n  const printLayout = () => setRedirectUrl(`${id}/printlayout`);\n\n  const printOipp = () => setRedirectUrl(`${id}/printoipp`);\n\n  const StarIcon = starred ? Star : StarBorder;\n\n  if (redirectUrl) {\n    return <Redirect to={redirectUrl} />;\n  }\n\n  const showHideDescriptionLabel = showDescription ? i18n.t('Hide description') : i18n.t('Show description');\n\n  const showHideDescription = () => {\n    onShowHideDescription();\n    toggleMoreOptions();\n  };\n\n  const toggleStarredDashboardLabel = starred ? i18n.t('Unstar dashboard') : i18n.t('Star dashboard');\n\n  const toggleStarredDashboard = () => {\n    // TODO use dataQuery directly here with create/delete mutations ?!\n    onToggleStarredDashboard();\n    toggleMoreOptions();\n  };\n\n  const buttonRef = createRef();\n  const userAccess = orObject(access);\n  const descriptionClasses = cx(classes.descContainer, description ? classes.desc : classes.noDesc);\n  return <>\n            <div className={classes.container}>\n                <div className={classes.titleBar}>\n                    <span className={classes.title} data-test=\"view-dashboard-title\">\n                        {name}\n                    </span>\n                    <div className={classes.actions}>\n                        <div className={classes.titleBarIcon} onClick={onToggleStarredDashboard}>\n                            <StarIcon style={{\n              fill: colors.grey600\n            }} />\n                        </div>\n                        <div className={classes.strip}>\n                            {userAccess.update ? <Link className={classes.editLink} to={`/${id}/edit`} data-test=\"link-edit-dashboard\">\n                                    <Button>{i18n.t('Edit')}</Button>\n                                </Link> : null}\n                            {userAccess.manage ? <Button className={classes.shareButton} onClick={toggleSharingDialog}>\n                                    {i18n.t('Share')}\n                                </Button> : null}\n                            <FilterSelector />\n                            <span ref={buttonRef}>\n                                <Button small={isSmallScreen(width)} dataTest=\"more-button\" onClick={toggleMoreOptions}>\n                                    <ThreeDots />\n                                    <span className={classes.moreButton}>\n                                        {i18n.t('More')}\n                                    </span>\n                                </Button>\n                            </span>\n                        </div>\n                        {moreOptionsIsOpen && <Popover reference={buttonRef} placement=\"bottom-start\" onClickOutside={toggleMoreOptions}>\n                                <FlyoutMenu>\n                                    <MenuItem dense label={toggleStarredDashboardLabel} onClick={toggleStarredDashboard} />\n                                    <MenuItem dense label={showHideDescriptionLabel} onClick={showHideDescription} />\n                                    <MenuItem dense label={i18n.t('Print')} dataTest=\"print-menu-item\">\n                                        <MenuItem dense label={i18n.t('Dashboard layout')} onClick={printLayout} dataTest=\"print-layout-menu-item\" />\n                                        <MenuItem dense label={i18n.t('One item per page')} onClick={printOipp} dataTest=\"print-oipp-menu-item\" />\n                                    </MenuItem>\n                                </FlyoutMenu>\n                            </Popover>}\n                    </div>\n                </div>\n                {showDescription && <div className={descriptionClasses}>\n                        {description || i18n.t('No description')}\n                    </div>}\n            </div>\n            {id && <SharingDialog d2={d2} id={id} type=\"dashboard\" open={sharingDialogIsOpen} onRequestClose={toggleSharingDialog} />}\n        </>;\n};\n\nViewTitleBar.propTypes = {\n  access: PropTypes.object,\n  description: PropTypes.string,\n  id: PropTypes.string,\n  name: PropTypes.string,\n  showDescription: PropTypes.bool,\n  starred: PropTypes.bool,\n  onShowHideDescription: PropTypes.func,\n  onToggleStarredDashboard: PropTypes.func\n};\nViewTitleBar.defaultProps = {\n  name: '',\n  description: '',\n  starred: false,\n  showDescription: false\n};\n\nconst mapStateToProps = state => {\n  const id = sGetSelectedId(state);\n  const dashboard = sGetDashboardById(state, id) || EMPTY_DASHBOARD;\n  return {\n    id,\n    name: dashboard.displayName,\n    description: dashboard.displayDescription,\n    dashboardItems: sGetDashboardItems(state),\n    showDescription: sGetSelectedShowDescription(state),\n    starred: dashboard.starred,\n    access: dashboard.access\n  };\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n  const {\n    id,\n    starred,\n    showDescription\n  } = stateProps;\n  const {\n    dispatch\n  } = dispatchProps;\n  return { ...stateProps,\n    ...ownProps,\n    onToggleStarredDashboard: () => dispatch(tStarDashboard(id, !starred)),\n    onShowHideDescription: () => dispatch(tUpdateShowDescription(!showDescription))\n  };\n};\n\nexport default connect(mapStateToProps, null, mergeProps)(ViewTitleBar);","import React, { useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { useD2 } from '@dhis2/app-runtime-adapter-d2';\nimport { useConfig } from '@dhis2/app-runtime';\nimport { load, unmount } from './plugin';\nimport { getGridItemDomId } from '../../../ItemGrid/gridUtil';\n\nconst DefaultPlugin = ({\n  item,\n  activeType,\n  visualization,\n  options,\n  style\n}) => {\n  const {\n    d2\n  } = useD2({});\n  const {\n    baseUrl\n  } = useConfig();\n  const credentials = {\n    baseUrl,\n    auth: d2.Api.getApi().defaultHeaders.Authorization\n  };\n  const prevItem = useRef();\n  const prevActiveType = useRef();\n  useEffect(() => {\n    load(item, visualization, {\n      credentials,\n      activeType,\n      options\n    });\n    prevItem.current = item;\n    prevActiveType.current = activeType;\n    return () => unmount(item, activeType);\n  }, []);\n  useEffect(() => {\n    if (shouldPluginReload()) {\n      unmount(item, prevActiveType.current);\n      load(item, visualization, {\n        credentials,\n        activeType\n      });\n    }\n\n    prevItem.current = item;\n    prevActiveType.current = activeType;\n  }, [item, visualization, activeType]);\n  /**\n   * Prevent unnecessary re-rendering\n   * TODO: fix this hack\n   */\n\n  const shouldPluginReload = () => {\n    const reloadAllowed = prevItem.current === item;\n    const visChanged = prevActiveType.current !== activeType;\n    return reloadAllowed && visChanged;\n  };\n\n  return <div id={getGridItemDomId(item.id)} style={style} />;\n};\n\nDefaultPlugin.propTypes = {\n  activeType: PropTypes.string,\n  item: PropTypes.object,\n  options: PropTypes.object,\n  style: PropTypes.object,\n  visualization: PropTypes.object\n};\nDefaultPlugin.defaultProps = {\n  style: {},\n  item: {},\n  options: {},\n  visualization: {}\n};\nexport default DefaultPlugin;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classes from './styles/NoVisualizationMessage.module.css';\n\nconst NoVisualizationMessage = ({\n  message\n}) => {\n  return <div className={classes.message}>{message}</div>;\n};\n\nNoVisualizationMessage.propTypes = {\n  message: PropTypes.string\n};\nexport default NoVisualizationMessage;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport DefaultPlugin from './DefaultPlugin';\nimport { MAP } from '../../../../modules/itemTypes';\nimport { pluginIsAvailable } from './plugin';\nimport NoVisualizationMessage from './NoVisualizationMessage';\n\nconst MapPlugin = ({\n  applyFilters,\n  ...props\n}) => {\n  if (props.item.type === MAP) {\n    // apply filters only to thematic and event layers\n    // for maps AO\n    const mapViews = props.visualization.mapViews.map(mapView => {\n      if (mapView.layer.includes('thematic') || mapView.layer.includes('event')) {\n        return applyFilters(mapView, props.itemFilters);\n      }\n\n      return mapView;\n    });\n    props.visualization = { ...props.visualization,\n      mapViews\n    };\n  } else {\n    // this is the case of a non map AO passed to the maps plugin\n    // due to a visualization type switch in dashboard item\n    // maps plugin takes care of converting the AO to a suitable format\n    props.visualization = applyFilters(props.visualization, props.itemFilters);\n  }\n\n  return pluginIsAvailable(props.activeType || props.item.type) ? <DefaultPlugin options={{\n    hideTitle: true\n  }} {...props} /> : <NoVisualizationMessage message={i18n.t('Unable to load the plugin for this item')} />;\n};\n\nMapPlugin.propTypes = {\n  activeType: PropTypes.string,\n  applyFilters: PropTypes.func,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object,\n  visualization: PropTypes.object\n};\nexport default MapPlugin;","import React from 'react';\nimport { CircularLoader } from '@dhis2/ui';\nimport classes from './styles/LoadingMask.module.css';\n\nconst LoadingMask = () => {\n  return <div className={classes.center}>\n            <CircularLoader />\n        </div>;\n};\n\nexport default LoadingMask;","const getFilteredVisualization = (visualization, filters) => {\n  if (!Object.keys(filters).length) {\n    return visualization;\n  } // deep clone objects in filters to avoid changing the visualization in the Redux store\n\n\n  const visRows = visualization.rows.map(obj => ({ ...obj\n  }));\n  const visColumns = visualization.columns.map(obj => ({ ...obj\n  }));\n  const visFilters = visualization.filters.map(obj => ({ ...obj\n  }));\n  Object.keys(filters).forEach(dimensionId => {\n    if (filters[dimensionId]) {\n      let dimensionFound = false;\n      [visRows, visColumns, visFilters].forEach(dimensionObjects => dimensionObjects.filter(obj => obj.dimension === dimensionId).forEach(obj => {\n        dimensionFound = true;\n        obj.items = filters[dimensionId];\n      })); // add dimension to filters if not already present elsewhere\n\n      if (!dimensionFound) {\n        visFilters.push({\n          dimension: dimensionId,\n          items: filters[dimensionId]\n        });\n      }\n    }\n  });\n  return { ...visualization,\n    rows: visRows,\n    columns: visColumns,\n    filters: visFilters\n  };\n};\n\nexport default getFilteredVisualization;","import { VIS_TYPE_COLUMN, VIS_TYPE_PIVOT_TABLE, getAdaptedUiLayoutByType } from '@dhis2/analytics';\nimport { REPORT_TABLE, CHART, MAP } from '../../../../modules/itemTypes';\nexport const THEMATIC_LAYER = 'thematic';\n\nconst extractMapView = map => map.mapViews && map.mapViews.find(mv => mv.layer.includes(THEMATIC_LAYER));\n\nconst getWithoutId = object => ({ ...object,\n  id: undefined\n});\n\nconst getVisualizationConfig = (visualization, originalType, activeType) => {\n  if (originalType === MAP && originalType !== activeType) {\n    const extractedMapView = extractMapView(visualization);\n\n    if (extractedMapView === undefined) {\n      return null;\n    }\n\n    return getWithoutId({ ...visualization,\n      ...extractedMapView,\n      mapViews: undefined,\n      type: activeType === CHART ? VIS_TYPE_COLUMN : VIS_TYPE_PIVOT_TABLE\n    });\n  } else if (originalType === REPORT_TABLE && activeType === CHART) {\n    const layout = getAdaptedUiLayoutByType(visualization, VIS_TYPE_COLUMN);\n    return getWithoutId({ ...visualization,\n      ...layout,\n      type: VIS_TYPE_COLUMN\n    });\n  } else if (originalType === CHART && activeType === REPORT_TABLE) {\n    const layout = getAdaptedUiLayoutByType(visualization, VIS_TYPE_PIVOT_TABLE);\n    return getWithoutId({ ...visualization,\n      ...layout,\n      type: VIS_TYPE_PIVOT_TABLE\n    });\n  }\n\n  return getWithoutId(visualization);\n};\n\nexport default getVisualizationConfig;","// Note that this ignores discrepancies in 'this', so shouldn't be used with bound functions\n// This is useful instead of lodash/memoize when we only need to memoize a single value\n// Inspiration: https://github.com/alexreardon/memoize-one\nconst memoizeOne = fn => {\n  let lastArgs = undefined;\n  let lastValue = undefined;\n  return (...args) => {\n    if (lastArgs && args.length === lastArgs.length && args.every((arg, i) => arg === lastArgs[i])) {\n      return lastValue;\n    }\n\n    lastArgs = args;\n    lastValue = fn(...args);\n    return lastValue;\n  };\n};\n\nexport default memoizeOne;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport VisualizationPlugin from '@dhis2/data-visualizer-plugin';\nimport i18n from '@dhis2/d2-i18n';\nimport { D2Shim } from '@dhis2/app-runtime-adapter-d2';\nimport DefaultPlugin from './DefaultPlugin';\nimport MapPlugin from './MapPlugin';\nimport LoadingMask from './LoadingMask';\nimport NoVisualizationMessage from './NoVisualizationMessage';\nimport getFilteredVisualization from './getFilteredVisualization';\nimport getVisualizationConfig from './getVisualizationConfig';\nimport { VISUALIZATION, MAP, CHART, REPORT_TABLE } from '../../../../modules/itemTypes';\nimport { getVisualizationId } from '../../../../modules/item';\nimport memoizeOne from '../../../../modules/memoizeOne';\nimport { sGetVisualization } from '../../../../reducers/visualizations';\nimport { pluginIsAvailable } from './plugin';\n\nclass Visualization extends React.Component {\n  state = {\n    pluginLoaded: false\n  };\n\n  constructor(props) {\n    super(props);\n    this.memoizedGetFilteredVisualization = memoizeOne(getFilteredVisualization);\n    this.memoizedGetVisualizationConfig = memoizeOne(getVisualizationConfig);\n  }\n\n  onLoadingComplete = () => {\n    this.setState({\n      pluginLoaded: true\n    });\n  };\n\n  render() {\n    const {\n      visualization,\n      activeType,\n      item,\n      itemFilters,\n      availableHeight,\n      availableWidth\n    } = this.props;\n\n    if (!visualization) {\n      return <NoVisualizationMessage message={i18n.t('No data to display')} />;\n    }\n\n    const style = {\n      height: availableHeight\n    };\n\n    if (availableWidth) {\n      style.width = availableWidth;\n    }\n\n    const pluginProps = {\n      item,\n      itemFilters,\n      activeType,\n      style,\n      visualization: this.memoizedGetVisualizationConfig(visualization, item.type, activeType)\n    };\n\n    switch (activeType) {\n      case VISUALIZATION:\n      case CHART:\n      case REPORT_TABLE:\n        {\n          return <>\n                        {!this.state.pluginLoaded && <div style={pluginProps.style}>\n                                <LoadingMask />\n                            </div>}\n                        <D2Shim d2Config={{}}>\n                            {({\n                d2\n              }) => <VisualizationPlugin d2={d2} visualization={this.memoizedGetFilteredVisualization(pluginProps.visualization, pluginProps.itemFilters)} onLoadingComplete={this.onLoadingComplete} forDashboard={true} style={pluginProps.style} />}\n                        </D2Shim>\n                    </>;\n        }\n\n      case MAP:\n        {\n          return <MapPlugin applyFilters={this.memoizedGetFilteredVisualization} {...pluginProps} />;\n        }\n\n      default:\n        {\n          pluginProps.visualization = this.memoizedGetFilteredVisualization(pluginProps.visualization, pluginProps.itemFilters);\n          return pluginIsAvailable(pluginProps.activeType || pluginProps.item.type) ? <DefaultPlugin {...pluginProps} /> : <NoVisualizationMessage message={i18n.t('Unable to load the plugin for this item')} />;\n        }\n    }\n  }\n\n}\n\nVisualization.propTypes = {\n  activeType: PropTypes.string,\n  availableHeight: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  availableWidth: PropTypes.number,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object,\n  visualization: PropTypes.object\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    visualization: sGetVisualization(state, getVisualizationId(ownProps.item))\n  };\n};\n\nexport default connect(mapStateToProps)(Visualization);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Warning } from './assets/icons';\nimport classes from './styles/FatalErrorBoundary.module.css';\n\nclass FatalErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      errorFound: false\n    };\n  }\n\n  componentDidCatch(error, info) {\n    this.setState({\n      errorFound: true\n    });\n    console.log('error: ', error);\n    console.log('info: ', info);\n  }\n\n  render() {\n    if (this.state.errorFound) {\n      return <p className={classes.container}>\n                    <span className={classes.icon}>\n                        <Warning />\n                    </span>\n                    <span className={classes.message}>\n                        {i18n.t('There was a problem loading this dashboard item')}\n                    </span>\n                </p>;\n    }\n\n    return this.props.children;\n  }\n\n}\n\nFatalErrorBoundary.propTypes = {\n  children: PropTypes.node\n};\nexport default FatalErrorBoundary;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classes from './styles/ItemHeader.module.css';\n\nconst ViewItemActions = ({\n  actionButtons\n}) => {\n  return actionButtons ? <div className={classes.itemActionsWrap}>{actionButtons}</div> : null;\n};\n\nViewItemActions.propTypes = {\n  actionButtons: PropTypes.node\n};\nexport default ViewItemActions;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { colors } from '@dhis2/ui';\nimport classes from './styles/DeleteItemButton.module.css';\n\nconst DeleteItemButton = ({\n  onClick\n}) => <button type=\"button\" className={classes.deleteItemButton} onClick={onClick} title={i18n.t(`Delete item`)}>\n        <DeleteIcon style={{\n    fill: colors.red500\n  }} />\n    </button>;\n\nDeleteItemButton.propTypes = {\n  onClick: PropTypes.func\n};\nexport default DeleteItemButton;","/** @module reducers/editDashboard */\nimport update from 'immutability-helper';\nimport isEmpty from 'lodash/isEmpty';\nimport { orArray, orObject } from '../modules/util';\nexport const RECEIVED_EDIT_DASHBOARD = 'RECEIVED_EDIT_DASHBOARD';\nexport const RECEIVED_NOT_EDITING = 'RECEIVED_NOT_EDITING';\nexport const START_NEW_DASHBOARD = 'START_NEW_DASHBOARD';\nexport const RECEIVED_TITLE = 'RECEIVED_TITLE';\nexport const RECEIVED_DESCRIPTION = 'RECEIVED_DESCRIPTION';\nexport const ADD_DASHBOARD_ITEM = 'ADD_DASHBOARD_ITEM';\nexport const REMOVE_DASHBOARD_ITEM = 'REMOVE_DASHBOARD_ITEM';\nexport const UPDATE_DASHBOARD_ITEM = 'UPDATE_DASHBOARD_ITEM';\nexport const RECEIVED_DASHBOARD_LAYOUT = 'RECEIVED_DASHBOARD_LAYOUT';\nexport const SET_PRINT_PREVIEW_VIEW = 'SET_PRINT_PREVIEW_VIEW';\nexport const CLEAR_PRINT_PREVIEW_VIEW = 'CLEAR_PRINT_PREVIEW_VIEW';\nexport const DEFAULT_STATE_EDIT_DASHBOARD = {};\nexport const NEW_DASHBOARD_STATE = {\n  id: '',\n  name: '',\n  access: {},\n  description: '',\n  dashboardItems: [],\n  printPreviewView: false\n};\nexport default ((state = DEFAULT_STATE_EDIT_DASHBOARD, action) => {\n  switch (action.type) {\n    case RECEIVED_EDIT_DASHBOARD:\n      {\n        const newState = {};\n        Object.keys(NEW_DASHBOARD_STATE).map(k => newState[k] = action.value[k]);\n        newState.printPreviewView = false;\n        return newState;\n      }\n\n    case RECEIVED_NOT_EDITING:\n      return DEFAULT_STATE_EDIT_DASHBOARD;\n\n    case SET_PRINT_PREVIEW_VIEW:\n      return Object.assign({}, state, {\n        printPreviewView: true\n      });\n\n    case CLEAR_PRINT_PREVIEW_VIEW:\n      return Object.assign({}, state, {\n        printPreviewView: false\n      });\n\n    case START_NEW_DASHBOARD:\n      return NEW_DASHBOARD_STATE;\n\n    case RECEIVED_TITLE:\n      {\n        return Object.assign({}, state, {\n          name: action.value\n        });\n      }\n\n    case RECEIVED_DESCRIPTION:\n      {\n        return Object.assign({}, state, {\n          description: action.value\n        });\n      }\n\n    case ADD_DASHBOARD_ITEM:\n      if (!action.value.position) {\n        return update(state, {\n          dashboardItems: {\n            $unshift: [action.value]\n          }\n        });\n      }\n\n      return update(state, {\n        dashboardItems: {\n          $splice: [[parseInt(action.value.position), 0, action.value]]\n        }\n      });\n\n    case REMOVE_DASHBOARD_ITEM:\n      {\n        const idToRemove = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === idToRemove);\n\n        if (dashboardItemIndex > -1) {\n          return update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1]]\n            }\n          });\n        }\n\n        return state;\n      }\n\n    case RECEIVED_DASHBOARD_LAYOUT:\n      {\n        const stateItems = orArray(state.dashboardItems);\n        let layoutHasChanged = false;\n        const newStateItems = action.value.map(({\n          x,\n          y,\n          w,\n          h,\n          i\n        }) => {\n          const stateItem = stateItems.find(si => si.id === i);\n\n          if (!(stateItem.x === x && stateItem.y === y && stateItem.w === w && stateItem.h === h)) {\n            layoutHasChanged = true;\n            return Object.assign({}, stateItem, {\n              w,\n              h,\n              x,\n              y\n            });\n          }\n\n          return stateItem;\n        });\n        return layoutHasChanged ? { ...state,\n          dashboardItems: newStateItems\n        } : state;\n      }\n\n    case UPDATE_DASHBOARD_ITEM:\n      {\n        const dashboardItem = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === dashboardItem.id);\n\n        if (dashboardItemIndex > -1) {\n          const newState = update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1, Object.assign({}, dashboardItem)]]\n            }\n          });\n          return newState;\n        }\n\n        return state;\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetEditDashboardRoot = state => state.editDashboard; // selectors\n\nexport const sGetIsEditing = state => !isEmpty(state.editDashboard);\nexport const sGetIsPrintPreviewView = state => sGetEditDashboardRoot(state).printPreviewView;\nexport const sGetIsNewDashboard = state => {\n  return !isEmpty(state.editDashboard) && sGetEditDashboardRoot(state).id === '';\n};\nexport const sGetEditDashboardName = state => sGetEditDashboardRoot(state).name;\nexport const sGetEditDashboardDescription = state => sGetEditDashboardRoot(state).description;\nexport const sGetEditDashboardItems = state => orObject(sGetEditDashboardRoot(state)).dashboardItems;","import { apiFetchDashboard } from './dashboards';\n\nconst onError = error => console.log('Error: ', error);\n\nexport const createDashboardMutation = {\n  resource: 'dashboards',\n  type: 'create',\n  data: ({\n    data\n  }) => data\n};\nexport const updateDashboardMutation = {\n  resource: 'dashboards',\n  type: 'update',\n  id: ({\n    id\n  }) => id,\n  data: ({\n    data\n  }) => data\n};\n\nconst generatePayload = (dashboard = {}, data) => {\n  return { ...dashboard,\n    name: data.name,\n    description: data.description,\n    dashboardItems: data.dashboardItems.map(item => ({ ...item,\n      width: item.w,\n      height: item.h\n    }))\n  };\n};\n\nexport const updateDashboard = async (dataEngine, data) => {\n  try {\n    const dashboard = await apiFetchDashboard(dataEngine, data.id);\n    const {\n      response\n    } = await dataEngine.mutate(updateDashboardMutation, {\n      variables: {\n        id: data.id,\n        data: generatePayload(dashboard, data)\n      }\n    });\n    return response.uid;\n  } catch (error) {\n    onError(error);\n  }\n};\nexport const postDashboard = async (dataEngine, data) => {\n  try {\n    const {\n      response\n    } = await dataEngine.mutate(createDashboardMutation, {\n      variables: {\n        data: generatePayload({}, data)\n      }\n    });\n    return response.uid;\n  } catch (error) {\n    onError(error);\n  }\n};","import { generateUid } from 'd2/uid';\nimport i18n from '@dhis2/d2-i18n';\nimport { RECEIVED_EDIT_DASHBOARD, START_NEW_DASHBOARD, RECEIVED_NOT_EDITING, RECEIVED_TITLE, RECEIVED_DESCRIPTION, RECEIVED_DASHBOARD_LAYOUT, ADD_DASHBOARD_ITEM, UPDATE_DASHBOARD_ITEM, REMOVE_DASHBOARD_ITEM, SET_PRINT_PREVIEW_VIEW, CLEAR_PRINT_PREVIEW_VIEW } from '../reducers/editDashboard';\nimport { sGetEditDashboardRoot } from '../reducers/editDashboard';\nimport { updateDashboard, postDashboard } from '../api/editDashboard';\nimport { tSetSelectedDashboardById } from '../actions/selected';\nimport { NEW_ITEM_SHAPE, getGridItemProperties, getPageBreakItemShape, getPrintTitlePageItemShape } from '../components/ItemGrid/gridUtil';\nimport { itemTypeMap, PAGEBREAK, PRINT_TITLE_PAGE } from '../modules/itemTypes';\nimport { convertUiItemsToBackend } from '../modules/uiBackendItemConverter';\n\nconst onError = error => {\n  console.log('Error (Saving Dashboard): ', error);\n  return error;\n}; // actions\n\n\nexport const acSetEditDashboard = (dashboard, items) => {\n  const val = { ...dashboard,\n    dashboardItems: items\n  };\n  return {\n    type: RECEIVED_EDIT_DASHBOARD,\n    value: val\n  };\n};\nexport const acSetEditNewDashboard = () => ({\n  type: START_NEW_DASHBOARD\n});\nexport const acClearEditDashboard = () => ({\n  type: RECEIVED_NOT_EDITING\n});\nexport const acSetPrintPreviewView = () => ({\n  type: SET_PRINT_PREVIEW_VIEW\n});\nexport const acClearPrintPreviewView = () => ({\n  type: CLEAR_PRINT_PREVIEW_VIEW\n});\nexport const acSetDashboardTitle = value => ({\n  type: RECEIVED_TITLE,\n  value\n});\nexport const acSetDashboardDescription = value => ({\n  type: RECEIVED_DESCRIPTION,\n  value\n});\nexport const acUpdateDashboardLayout = value => ({\n  type: RECEIVED_DASHBOARD_LAYOUT,\n  value\n});\nexport const acAddDashboardItem = item => {\n  const type = item.type;\n  delete item.type;\n  const itemPropName = itemTypeMap[type].propName;\n  const id = generateUid();\n  const gridItemProperties = getGridItemProperties(id);\n  let shape;\n\n  if (type === PAGEBREAK) {\n    const yPos = item.yPos || 0;\n    shape = getPageBreakItemShape(yPos, item.isStatic);\n  } else if (type === PRINT_TITLE_PAGE) {\n    shape = getPrintTitlePageItemShape();\n  } else {\n    shape = NEW_ITEM_SHAPE;\n  }\n\n  return {\n    type: ADD_DASHBOARD_ITEM,\n    value: {\n      id,\n      type,\n      position: item.position || null,\n      [itemPropName]: item.content,\n      ...NEW_ITEM_SHAPE,\n      ...gridItemProperties,\n      ...shape\n    }\n  };\n};\nexport const acUpdateDashboardItem = item => ({\n  type: UPDATE_DASHBOARD_ITEM,\n  value: item\n});\nexport const acRemoveDashboardItem = value => ({\n  type: REMOVE_DASHBOARD_ITEM,\n  value\n}); // thunks\n\nexport const tSaveDashboard = () => async (dispatch, getState, dataEngine) => {\n  const dashboard = sGetEditDashboardRoot(getState());\n  const dashboardToSave = { ...dashboard,\n    dashboardItems: convertUiItemsToBackend(dashboard.dashboardItems),\n    name: dashboard.name || i18n.t('Untitled dashboard')\n  };\n\n  try {\n    const dashboardId = dashboardToSave.id ? await updateDashboard(dataEngine, dashboardToSave) : await postDashboard(dataEngine, dashboardToSave);\n    dispatch(acClearEditDashboard());\n    await dispatch(tSetSelectedDashboardById(dashboardId));\n    return Promise.resolve(dashboardId);\n  } catch (error) {\n    onError(error);\n  }\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport DeleteItemButton from './DeleteItemButton';\nimport { acRemoveDashboardItem } from '../../../actions/editDashboard';\nimport classes from './styles/ItemHeader.module.css';\n\nconst EditItemActions = ({\n  itemId,\n  acRemoveDashboardItem\n}) => {\n  const handleDeleteItem = () => acRemoveDashboardItem(itemId);\n\n  return <div className={classes.itemActionsWrap}>\n            <DeleteItemButton onClick={handleDeleteItem} />\n        </div>;\n};\n\nEditItemActions.propTypes = {\n  acRemoveDashboardItem: PropTypes.func,\n  itemId: PropTypes.string\n};\nconst mapDispatchToProps = {\n  acRemoveDashboardItem\n};\nexport default connect(null, mapDispatchToProps)(EditItemActions);","import React from 'react';\nimport { colors } from '@dhis2/ui';\n\nconst WarningIcon = () => <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" fill={colors.grey600}>\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z\" />\n    </svg>;\n\nexport default WarningIcon;","import React from 'react';\nimport { Tooltip } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport InfoIcon from '../../../icons/Info';\nimport classes from './styles/PrintItemInfo.module.css';\n\nconst PrintWarning = () => <div className={classes.warning}>\n        <Tooltip content={i18n.t('This item has been shortened to fit on one page')} placement=\"bottom\">\n            <InfoIcon />\n        </Tooltip>\n    </div>;\n\nexport default PrintWarning;","export const EDIT = 'edit';\nexport const NEW = 'new';\nexport const VIEW = 'view';\nexport const PRINT = 'print';\nexport const PRINT_LAYOUT = 'print-layout';\nexport const isEditMode = mode => [EDIT, NEW].includes(mode);\nexport const isPrintMode = mode => [PRINT, PRINT_LAYOUT].includes(mode);\nexport const isViewMode = mode => mode === VIEW;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ViewItemActions from './ViewItemActions';\nimport EditItemActions from './EditItemActions';\nimport PrintItemInfo from './PrintItemInfo';\nimport { VIEW, EDIT, PRINT_LAYOUT } from '../../Dashboard/dashboardModes';\nimport classes from './styles/ItemHeader.module.css';\n\nconst getItemActionsMap = isShortened => {\n  return {\n    [VIEW]: ViewItemActions,\n    [EDIT]: EditItemActions,\n    [PRINT_LAYOUT]: isShortened ? PrintItemInfo : null\n  };\n}; // This is the margin-top + margin-bottom defined in the css file\n\n\nexport const HEADER_MARGIN_HEIGHT = 12;\nconst ItemHeader = React.forwardRef(({\n  dashboardMode,\n  title,\n  isShortened,\n  ...rest\n}, ref) => {\n  const Actions = getItemActionsMap(isShortened)[dashboardMode];\n  return <div className={classes.itemHeaderWrap} ref={ref}>\n                <p className={classes.itemTitle}>{title}</p>\n                {Actions ? <Actions {...rest} /> : null}\n            </div>;\n});\nItemHeader.displayName = 'ItemHeader';\nItemHeader.propTypes = {\n  dashboardMode: PropTypes.string,\n  isShortened: PropTypes.bool,\n  title: PropTypes.string\n};\nexport default connect(null, null, null, {\n  forwardRef: true\n})(ItemHeader);","import React, { useState, createRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { useConfig } from '@dhis2/app-runtime';\nimport { isSingleValue, isYearOverYear, VIS_TYPE_GAUGE, VIS_TYPE_PIE } from '@dhis2/analytics';\nimport { Button, Menu, Popover, MenuItem, Divider, colors } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport { ThreeDots, SpeechBubble, Fullscreen, ExitFullscreen } from './assets/icons';\nimport { getLink } from './Visualization/plugin';\nimport { CHART, MAP, REPORT_TABLE, EVENT_CHART, EVENT_REPORT, isTrackerDomainType, hasMapView, getAppName } from '../../../modules/itemTypes';\nconst iconFill = {\n  fill: colors.grey600\n};\n\nconst ItemHeaderButtons = props => {\n  const [menuIsOpen, setMenuIsOpen] = useState(null);\n  const {\n    baseUrl\n  } = useConfig();\n  const {\n    item,\n    visualization,\n    onSelectActiveType,\n    activeType\n  } = props;\n  const isTrackerType = isTrackerDomainType(item.type);\n\n  const onViewTable = () => {\n    closeMenu();\n    onSelectActiveType(isTrackerType ? EVENT_REPORT : REPORT_TABLE);\n  };\n\n  const onViewChart = () => {\n    closeMenu();\n    onSelectActiveType(isTrackerType ? EVENT_CHART : CHART);\n  };\n\n  const onViewMap = () => {\n    closeMenu();\n    onSelectActiveType(MAP);\n  };\n\n  const itemHasMapView = () => hasMapView(item.type);\n\n  const handleInterpretationClick = () => {\n    props.onToggleFooter();\n\n    if (menuIsOpen) {\n      closeMenu();\n    }\n  };\n\n  const handleToggleFullscreenClick = () => {\n    props.onToggleFullscreen();\n    closeMenu();\n  };\n\n  const openMenu = () => setMenuIsOpen(true);\n\n  const closeMenu = () => setMenuIsOpen(false);\n\n  const type = visualization.type || item.type;\n  const canViewAs = !isSingleValue(type) && !isYearOverYear(type) && type !== VIS_TYPE_GAUGE && type !== VIS_TYPE_PIE;\n  const interpretationMenuLabel = props.activeFooter ? i18n.t(`Hide interpretations and details`) : i18n.t(`Show interpretations and details`);\n\n  const ViewAsMenuItems = () => <>\n            {activeType !== CHART && activeType !== EVENT_CHART && <MenuItem dense label={i18n.t('View as Chart')} onClick={onViewChart} icon={<ChartIcon style={iconFill} />} />}\n            {activeType !== REPORT_TABLE && activeType !== EVENT_REPORT && <MenuItem dense label={i18n.t('View as Table')} onClick={onViewTable} icon={<TableIcon style={iconFill} />} />}\n            {itemHasMapView() && activeType !== MAP && <MenuItem dense label={i18n.t('View as Map')} onClick={onViewMap} icon={<MapIcon style={iconFill} />} />}\n        </>;\n\n  const buttonRef = createRef();\n  return props.isFullscreen ? <Button small secondary onClick={props.onToggleFullscreen}>\n            <ExitFullscreen />\n        </Button> : <>\n            <div ref={buttonRef}>\n                <Button small secondary onClick={openMenu} dataTest=\"dashboarditem-menu-button\">\n                    <ThreeDots />\n                </Button>\n            </div>\n            {menuIsOpen && <Popover reference={buttonRef} placement=\"auto-start\" arrow={false} onClickOutside={closeMenu}>\n                    <Menu>\n                        {canViewAs && <>\n                                <ViewAsMenuItems />\n                                <Divider />\n                            </>}\n                        <MenuItem dense icon={<LaunchIcon style={{\n          fill: '#6e7a8a'\n        }} />} label={i18n.t('Open in {{appName}} app', {\n          appName: getAppName(item.type)\n        })} href={getLink(item, baseUrl)} target=\"_blank\" />\n                        <MenuItem dense icon={<SpeechBubble />} label={interpretationMenuLabel} onClick={handleInterpretationClick} />\n                        {props.fullscreenSupported && <MenuItem dense icon={<Fullscreen />} label={i18n.t('View fullscreen')} onClick={handleToggleFullscreenClick} />}\n                    </Menu>\n                </Popover>}\n        </>;\n};\n\nItemHeaderButtons.propTypes = {\n  activeFooter: PropTypes.bool,\n  activeType: PropTypes.string,\n  fullscreenSupported: PropTypes.bool,\n  isFullscreen: PropTypes.bool,\n  item: PropTypes.object,\n  visualization: PropTypes.object,\n  onSelectActiveType: PropTypes.func,\n  onToggleFooter: PropTypes.func,\n  onToggleFullscreen: PropTypes.func\n};\nexport default ItemHeaderButtons;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getVisualizationId } from '../../../modules/item';\nimport InterpretationsComponent from '@dhis2/d2-ui-interpretations';\nimport { useD2 } from '@dhis2/app-runtime-adapter-d2';\nimport classes from './styles/ItemFooter.module.css';\n\nconst ItemFooter = props => {\n  const {\n    d2\n  } = useD2({});\n  return <div data-test=\"dashboarditem-footer\">\n            <hr className={classes.line} />\n            <div className={classes.scrollContainer}>\n                <InterpretationsComponent d2={d2} item={props.item} type={props.item.type.toLowerCase()} id={getVisualizationId(props.item)} appName=\"dashboard\" />\n            </div>\n        </div>;\n};\n\nItemFooter.propTypes = {\n  item: PropTypes.object.isRequired\n};\nexport default ItemFooter;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport uniqueId from 'lodash/uniqueId';\nimport Visualization from './Visualization/Visualization';\nimport FatalErrorBoundary from './FatalErrorBoundary';\nimport ItemHeader, { HEADER_MARGIN_HEIGHT } from '../ItemHeader/ItemHeader';\nimport ItemHeaderButtons from './ItemHeaderButtons';\nimport ItemFooter from './ItemFooter';\nimport { WindowDimensionsCtx } from '../../WindowDimensionsProvider';\nimport { apiPostDataStatistics } from '../../../api/dataStatistics';\nimport { apiFetchVisualization } from '../../../api/metadata';\nimport { sGetVisualization } from '../../../reducers/visualizations';\nimport { sGetSelectedItemActiveType } from '../../../reducers/selected';\nimport { sGetIsEditing } from '../../../reducers/editDashboard';\nimport { sGetItemFiltersRoot, DEFAULT_STATE_ITEM_FILTERS } from '../../../reducers/itemFilters';\nimport { sGatherAnalyticalObjectStatisticsInDashboardViews } from '../../../reducers/settings';\nimport { acAddVisualization } from '../../../actions/visualizations';\nimport { acSetSelectedItemActiveType } from '../../../actions/selected';\nimport { pluginIsAvailable, resize as pluginResize } from './Visualization/plugin';\nimport { getDataStatisticsName } from '../../../modules/itemTypes';\nimport { getVisualizationId, getVisualizationName } from '../../../modules/item';\nimport memoizeOne from '../../../modules/memoizeOne';\nimport { isEditMode, isPrintMode, isViewMode } from '../../Dashboard/dashboardModes';\nimport { getItemHeightPx, getGridItemDomId } from '../../ItemGrid/gridUtil'; // this is set in the .dashboard-item-content css\n\nconst ITEM_CONTENT_PADDING = 4;\nexport class Item extends Component {\n  state = {\n    showFooter: false,\n    configLoaded: false,\n    isFullscreen: false\n  };\n\n  constructor(props) {\n    super(props);\n    this.contentRef = React.createRef();\n    this.headerRef = React.createRef();\n    this.itemDomElSelector = `.reactgriditem-${this.props.item.id}`;\n    this.memoizedGetContentHeight = memoizeOne((calculatedHeight, measuredHeight, preferMeasured) => preferMeasured ? measuredHeight || calculatedHeight : calculatedHeight);\n  }\n\n  async componentDidMount() {\n    this.props.updateVisualization(await apiFetchVisualization(this.props.item));\n\n    try {\n      if (this.props.gatherDataStatistics && isViewMode(this.props.dashboardMode)) {\n        await apiPostDataStatistics(getDataStatisticsName(this.props.item.type), getVisualizationId(this.props.item));\n      }\n    } catch (e) {\n      console.log(e);\n    }\n\n    this.setState({\n      configLoaded: true\n    });\n    const el = document.querySelector(this.itemDomElSelector);\n\n    if (el?.requestFullscreen) {\n      el.onfullscreenchange = this.handleFullscreenChange;\n    } else if (el?.webkitRequestFullscreen) {\n      el.onwebkitfullscreenchange = this.handleFullscreenChange;\n    }\n  }\n\n  componentWillUnmount() {\n    const el = document.querySelector(this.itemDomElSelector);\n\n    if (el?.onfullscreenchange) {\n      el.removeEventListener('onfullscreenchange', this.handleFullscreenChange);\n    } else if (el?.onwebkitfullscreenchange) {\n      el.removeEventListener('onwebkitfullscreenchange', this.handleFullscreenChange);\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.gridWidth !== this.props.gridWidth) {\n      const id = this.props.item.id;\n      const el = document.querySelector(`#${getGridItemDomId(id)}`);\n\n      if (typeof el?.setViewportSize === 'function') {\n        setTimeout(() => el.setViewportSize(el.clientWidth - 5, el.clientHeight - 5), 10);\n      } // call resize on Map item\n\n\n      pluginResize(this.props.item);\n    }\n  }\n\n  isFullscreenSupported = () => {\n    const el = document.querySelector(this.itemDomElSelector);\n    return !!(el?.requestFullscreen || el?.webkitRequestFullscreen);\n  };\n  handleFullscreenChange = () => {\n    this.setState({\n      isFullscreen: !!document.fullscreenElement || !!document.webkitFullscreenElement\n    });\n  };\n  onToggleFullscreen = () => {\n    if (!this.state.isFullscreen) {\n      const el = document.querySelector(this.itemDomElSelector);\n\n      if (el?.requestFullscreen) {\n        el.requestFullscreen();\n      } else if (el?.webkitRequestFullscreen) {\n        el.webkitRequestFullscreen();\n      }\n    } else {\n      document.exitFullscreen ? document.exitFullscreen() : document.webkitExitFullscreen();\n    }\n  };\n  getUniqueKey = memoizeOne(() => uniqueId());\n  onToggleFooter = () => {\n    this.setState({\n      showFooter: !this.state.showFooter\n    }, this.props.onToggleItemExpanded(this.props.item.id));\n  };\n  setActiveType = type => {\n    type !== this.getActiveType() && this.props.setActiveType(this.props.item.id, type);\n  };\n  getActiveType = () => {\n    if (this.props.isEditing) {\n      return this.props.item.type;\n    }\n\n    return this.props.activeType || this.props.item.type;\n  };\n  getAvailableHeight = () => {\n    if (this.state.isFullscreen) {\n      return '95vh';\n    }\n\n    const {\n      width\n    } = this.context;\n    const calculatedHeight = getItemHeightPx(this.props.item, width) - this.headerRef.current.clientHeight - HEADER_MARGIN_HEIGHT - ITEM_CONTENT_PADDING;\n    return this.memoizedGetContentHeight(calculatedHeight, this.contentRef ? this.contentRef.offsetHeight : null, isEditMode(this.props.dashboardMode) || isPrintMode(this.props.dashboardMode));\n  };\n  getAvailableWidth = () => {\n    const rect = document.querySelector(this.itemDomElSelector)?.getBoundingClientRect();\n    return rect && rect.width - ITEM_CONTENT_PADDING * 2;\n  };\n\n  render() {\n    const {\n      item,\n      dashboardMode,\n      itemFilters\n    } = this.props;\n    const {\n      showFooter\n    } = this.state;\n    const activeType = this.getActiveType();\n    const actionButtons = pluginIsAvailable(activeType || item.type) ? <ItemHeaderButtons item={item} visualization={this.props.visualization} onSelectActiveType={this.setActiveType} onToggleFooter={this.onToggleFooter} onToggleFullscreen={this.onToggleFullscreen} activeType={activeType} activeFooter={showFooter} isFullscreen={this.state.isFullscreen} fullscreenSupported={this.isFullscreenSupported()} /> : null;\n    return <>\n                <ItemHeader title={getVisualizationName(item)} itemId={item.id} actionButtons={actionButtons} ref={this.headerRef} dashboardMode={dashboardMode} isShortened={item.shortened} />\n                <FatalErrorBoundary>\n                    <div key={this.getUniqueKey(itemFilters)} className=\"dashboard-item-content\" ref={ref => this.contentRef = ref}>\n                        {this.state.configLoaded && <Visualization item={item} activeType={activeType} itemFilters={itemFilters} availableHeight={this.getAvailableHeight()} availableWidth={this.getAvailableWidth()} />}\n                    </div>\n                </FatalErrorBoundary>\n                {isViewMode(dashboardMode) && showFooter ? <ItemFooter item={item} /> : null}\n            </>;\n  }\n\n}\nItem.contextType = WindowDimensionsCtx;\nItem.propTypes = {\n  activeType: PropTypes.string,\n  dashboardMode: PropTypes.string,\n  gatherDataStatistics: PropTypes.bool,\n  gridWidth: PropTypes.number,\n  isEditing: PropTypes.bool,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object,\n  setActiveType: PropTypes.func,\n  updateVisualization: PropTypes.func,\n  visualization: PropTypes.object,\n  onToggleItemExpanded: PropTypes.func\n};\nItem.defaultProps = {\n  item: {},\n  onToggleItemExpanded: Function.prototype,\n  visualization: {}\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const itemFilters = !isEditMode(ownProps.dashboardMode) ? sGetItemFiltersRoot(state) : DEFAULT_STATE_ITEM_FILTERS;\n  return {\n    activeType: sGetSelectedItemActiveType(state, ownProps.item?.id),\n    isEditing: sGetIsEditing(state),\n    itemFilters,\n    visualization: sGetVisualization(state, getVisualizationId(ownProps.item)),\n    gatherDataStatistics: sGatherAnalyticalObjectStatisticsInDashboardViews(state)\n  };\n};\n\nconst mapDispatchToProps = {\n  setActiveType: acSetSelectedItemActiveType,\n  updateVisualization: acAddVisualization\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Item);","import React from 'react';\nimport { colors } from '@dhis2/ui';\nconst style = {\n  backgroundColor: colors.grey200,\n  border: 'none',\n  height: '1px',\n  margin: '0px 0px 5px 0px'\n};\n\nconst Line = () => <hr style={style} />;\n\nexport default Line;","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { colors } from '@dhis2/ui';\nimport { useConfig } from '@dhis2/app-runtime';\nimport { useD2 } from '@dhis2/app-runtime-adapter-d2';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport Line from '../../../widgets/Line';\nimport { sGetMessagesRoot } from '../../../reducers/messages';\nimport { formatDate } from '../../../modules/util';\nimport { isViewMode } from '../../Dashboard/dashboardModes';\nimport './MessagesItem.css';\nconst PRIVATE = 'PRIVATE';\nconst messageTypes = {\n  [PRIVATE]: 'Private',\n  VALIDATION_RESULT: 'Validation',\n  TICKET: 'Ticket',\n  SYSTEM: 'System'\n};\nconst style = {\n  list: {\n    listStyleType: 'none',\n    paddingLeft: '0px'\n  },\n  seeAll: {\n    textAlign: 'center',\n    fontSize: '13px',\n    marginBottom: '5px'\n  },\n  sender: {\n    fontSize: '13px',\n    lineHeight: '15px',\n    margin: 0,\n    color: colors.grey800\n  },\n  snippet: {\n    color: colors.grey800,\n    fontSize: '13px',\n    lineHeight: '15px',\n    maxHeight: '30px',\n    overflow: 'hidden'\n  }\n};\n\nconst MessagesItem = ({\n  messages,\n  item,\n  dashboardMode\n}) => {\n  const [uiLocale, setUiLocale] = useState('');\n  const {\n    d2\n  } = useD2({});\n  const {\n    baseUrl\n  } = useConfig();\n  useEffect(() => {\n    const getUiLocale = async () => {\n      const uiLocale = await d2.currentUser.userSettings.get('keyUiLocale');\n      setUiLocale(uiLocale);\n    };\n\n    getUiLocale();\n  }, []);\n\n  const getMessageHref = msg => {\n    const msgIdentifier = msg ? `#/${msg.messageType}/${msg.id}` : '';\n    return `${baseUrl}/dhis-web-messaging/${msgIdentifier}`;\n  };\n\n  const getMessageSender = msg => {\n    const latestMsg = msg.messages.slice(-1)[0];\n    return latestMsg.sender ? latestMsg.sender.displayName : '';\n  };\n\n  const getMessageItems = () => {\n    const modeClass = isViewMode(dashboardMode) ? 'view' : null;\n    return messages.map(msg => {\n      const redirectToMsg = () => {\n        if (isViewMode(dashboardMode)) {\n          document.location.href = getMessageHref(msg);\n        }\n      };\n\n      const sender = msg.messageType === PRIVATE ? getMessageSender(msg) : messageTypes[msg.messageType];\n      const readClass = !msg.read ? 'unread' : null;\n      const latestMsg = msg.messages.slice(-1)[0];\n      const msgDate = latestMsg.lastUpdated;\n      return <li className={`message-item ${modeClass}`} key={msg.id} onClick={redirectToMsg}>\n                    <p className={`message-title ${readClass}`}>\n                        {msg.displayName} ({msg.messageCount})\n                    </p>\n                    <p style={style.sender}>\n                        {sender} - {formatDate(msgDate, uiLocale)}\n                    </p>\n                    <p style={style.snippet}>{latestMsg.text}</p>\n                </li>;\n    });\n  };\n\n  return <>\n            <ItemHeader title={i18n.t('Messages')} itemId={item.id} dashboardMode={dashboardMode} isShortened={item.shortened} />\n            <Line />\n            {messages.length > 0 && <div className=\"dashboard-item-content\">\n                    <ul style={style.list}>{getMessageItems()}</ul>\n                    <div style={style.seeAll}>\n                        <a href={getMessageHref()}>\n                            {i18n.t('See all messages')}\n                        </a>\n                    </div>\n                </div>}\n        </>;\n};\n\nMessagesItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  messages: PropTypes.array\n};\n\nconst mapStateToProps = state => {\n  return {\n    messages: Object.values(sGetMessagesRoot(state))\n  };\n};\n\nconst MessagesContainer = connect(mapStateToProps, null)(MessagesItem);\nexport default MessagesContainer;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nconst NotSupportedItem = props => <>\n        <ItemHeader title={i18n.t('Item type \"{{type}}\" not supported', {\n    type: props.item.type\n  })} itemId={props.item.id} dashboardMode={props.dashboardMode} isShortened={props.item.shortened} />\n        <div style={{\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '90%'\n  }}>\n            <NotInterestedIcon style={{\n      width: 100,\n      height: 100,\n      align: 'center'\n    }} color=\"disabled\" />\n        </div>\n    </>;\n\nNotSupportedItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object\n};\nexport default NotSupportedItem;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst DescriptionIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill={colors.grey500}>\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M14 2H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6zm2 16H8v-2h8v2zm0-4H8v-2h8v2zm-3-5V3.5L18.5 9H13z\" />\n    </svg>;\n\nDescriptionIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default DescriptionIcon;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst DeleteIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill={colors.red500}>\n        <path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>;\n\nDeleteIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default DeleteIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { colors } from '@dhis2/ui';\nimport { useConfig } from '@dhis2/app-runtime';\nimport DescriptionIcon from '../../../icons/Description';\nimport DeleteIcon from '../../../icons/Delete';\nimport Line from '../../../widgets/Line';\nimport { itemTypeMap, getItemUrl } from '../../../modules/itemTypes';\nimport { orArray } from '../../../modules/util';\nimport { tRemoveListItemContent } from './actions';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport { isEditMode } from '../../Dashboard/dashboardModes';\nimport classes from './Item.module.css';\n\nconst getItemTitle = item => itemTypeMap[item.type].pluralTitle;\n\nconst getContentItems = item => orArray(item[itemTypeMap[item.type].propName]).filter((item, index, array) => array.findIndex(el => el.id === item.id) === index);\n\nconst ListItem = ({\n  item,\n  dashboardMode,\n  tRemoveListItemContent\n}) => {\n  const {\n    baseUrl\n  } = useConfig();\n  const contentItems = getContentItems(item);\n\n  const getLink = contentItem => {\n    const deleteButton = <button className={classes.deletebutton} onClick={() => tRemoveListItemContent(item, contentItem)}>\n                <DeleteIcon className={classes.deleteicon} />\n            </button>;\n    return <>\n                <a className={classes.link} style={{\n        color: colors.grey900\n      }} href={getItemUrl(item.type, contentItem, baseUrl)}>\n                    {contentItem.name}\n                </a>\n                {isEditMode(dashboardMode) ? deleteButton : null}\n            </>;\n  };\n\n  return <>\n            <ItemHeader title={getItemTitle(item)} itemId={item.id} dashboardMode={dashboardMode} isShortened={item.shortened} />\n            <Line />\n            <div className=\"dashboard-item-content\">\n                <ul className={classes.list}>\n                    {contentItems.map(contentItem => <li className={classes.item} key={contentItem.id}>\n                            <DescriptionIcon className={classes.itemicon} />\n                            {getLink(contentItem)}\n                        </li>)}\n                </ul>\n            </div>\n        </>;\n};\n\nListItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  tRemoveListItemContent: PropTypes.func\n};\nexport default connect(null, {\n  tRemoveListItemContent\n})(ListItem);","import { acUpdateDashboardItem, acRemoveDashboardItem } from '../../../actions/editDashboard';\nimport { itemTypeMap } from '../../../modules/itemTypes';\nexport const tRemoveListItemContent = (dashboardItem, content) => dispatch => {\n  const listItemType = itemTypeMap[dashboardItem.type].propName;\n  const newContent = dashboardItem[listItemType].filter(item => item.id !== content.id);\n\n  if (newContent.length) {\n    dashboardItem[listItemType] = newContent;\n    dispatch(acUpdateDashboardItem(dashboardItem));\n  } else {\n    dispatch(acRemoveDashboardItem(dashboardItem));\n  }\n};","/** @module reducers/editDashboard */\nimport update from 'immutability-helper';\nimport isEmpty from 'lodash/isEmpty';\nimport { orArray } from '../modules/util';\nexport const SET_PRINT_DASHBOARD = 'SET_PRINT_DASHBOARD';\nexport const CLEAR_PRINT_DASHBOARD = 'CLEAR_PRINT_DASHBOARD';\nexport const ADD_PRINT_DASHBOARD_ITEM = 'ADD_PRINT_DASHBOARD_ITEM';\nexport const SET_PRINT_DASHBOARD_LAYOUT = 'SET_PRINT_DASHBOARD_LAYOUT';\nexport const REMOVE_PRINT_DASHBOARD_ITEM = 'REMOVE_PRINT_DASHBOARD_ITEM';\nexport const UPDATE_PRINT_DASHBOARD_ITEM = 'UPDATE_PRINT_DASHBOARD_ITEM';\nexport const DEFAULT_STATE_PRINT_DASHBOARD = {};\nconst DEFAULT_DASHBOARD_ITEMS = [];\nexport const NEW_PRINT_DASHBOARD_STATE = {\n  id: '',\n  name: '',\n  access: {},\n  description: '',\n  dashboardItems: DEFAULT_DASHBOARD_ITEMS\n};\nexport default ((state = DEFAULT_STATE_PRINT_DASHBOARD, action) => {\n  switch (action.type) {\n    case SET_PRINT_DASHBOARD:\n      {\n        const newState = {};\n        Object.keys(NEW_PRINT_DASHBOARD_STATE).map(k => newState[k] = action.value[k]);\n        return newState;\n      }\n\n    case CLEAR_PRINT_DASHBOARD:\n      return DEFAULT_STATE_PRINT_DASHBOARD;\n\n    case ADD_PRINT_DASHBOARD_ITEM:\n      if (!action.value.position) {\n        return update(state, {\n          dashboardItems: {\n            $unshift: [action.value]\n          }\n        });\n      }\n\n      return update(state, {\n        dashboardItems: {\n          $splice: [[parseInt(action.value.position), 0, action.value]]\n        }\n      });\n\n    case REMOVE_PRINT_DASHBOARD_ITEM:\n      {\n        const idToRemove = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === idToRemove);\n\n        if (dashboardItemIndex > -1) {\n          return update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1]]\n            }\n          });\n        }\n\n        return state;\n      }\n\n    case UPDATE_PRINT_DASHBOARD_ITEM:\n      {\n        const dashboardItem = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === dashboardItem.id);\n\n        if (dashboardItemIndex > -1) {\n          const newState = update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1, Object.assign({}, dashboardItem)]]\n            }\n          });\n          return newState;\n        }\n\n        return state;\n      }\n\n    case SET_PRINT_DASHBOARD_LAYOUT:\n      {\n        const stateItems = orArray(state.dashboardItems);\n        let layoutHasChanged = false;\n        const newStateItems = action.value.map(({\n          x,\n          y,\n          w,\n          h,\n          i\n        }) => {\n          const stateItem = stateItems.find(si => si.id === i);\n\n          if (!(stateItem.x === x && stateItem.y === y && stateItem.w === w && stateItem.h === h)) {\n            layoutHasChanged = true;\n            return Object.assign({}, stateItem, {\n              w,\n              h,\n              x,\n              y\n            });\n          }\n\n          return stateItem;\n        });\n        return layoutHasChanged ? { ...state,\n          dashboardItems: newStateItems\n        } : state;\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetPrintDashboardRoot = state => state.printDashboard; // selectors\n\nexport const sGetIsPrinting = state => !isEmpty(state.printDashboard);\nexport const sGetPrintDashboardName = state => sGetPrintDashboardRoot(state).name;\nexport const sGetPrintDashboardDescription = state => sGetPrintDashboardRoot(state).description;\nexport const sGetPrintDashboardItems = state => {\n  return sGetPrintDashboardRoot(state)?.dashboardItems || DEFAULT_DASHBOARD_ITEMS;\n};","import React from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport Input from '@material-ui/core/Input';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport PrintItemInfo from '../ItemHeader/PrintItemInfo';\nimport Line from '../../../widgets/Line';\nimport { Parser as RichTextParser, Editor as RichTextEditor } from '@dhis2/d2-ui-rich-text';\nimport { acUpdateDashboardItem } from '../../../actions/editDashboard';\nimport { sGetEditDashboardItems } from '../../../reducers/editDashboard';\nimport { sGetDashboardItems } from '../../../reducers/dashboards';\nimport { sGetIsPrinting, sGetPrintDashboardItems } from '../../../reducers/printDashboard';\nimport { isEditMode, PRINT_LAYOUT } from '../../Dashboard/dashboardModes';\nconst style = {\n  textDiv: {\n    padding: '10px',\n    whiteSpace: 'pre-line',\n    lineHeight: '20px'\n  },\n  textField: {\n    fontSize: '14px',\n    fontStretch: 'normal',\n    width: '90%',\n    margin: '0 auto',\n    display: 'block',\n    lineHeight: '24px'\n  },\n  container: {\n    marginBottom: '20px',\n    marginTop: '20px'\n  }\n};\n\nconst TextItem = props => {\n  const {\n    item,\n    dashboardMode,\n    text,\n    acUpdateDashboardItem\n  } = props;\n\n  const onChangeText = event => {\n    const updatedItem = { ...item,\n      text: event.target.value\n    };\n    acUpdateDashboardItem(updatedItem);\n  };\n\n  const viewItem = () => {\n    const textDivStyle = Object.assign({}, style.textField, style.textDiv);\n    return <div className=\"dashboard-item-content\" style={style.container}>\n                <RichTextParser style={textDivStyle}>{text}</RichTextParser>\n            </div>;\n  };\n\n  const editItem = () => {\n    return <>\n                <ItemHeader title={i18n.t('Text item')} itemId={item.id} dashboardMode={dashboardMode} />\n                <Line />\n                <div className=\"dashboard-item-content\">\n                    <RichTextEditor onEdit={onChangeText}>\n                        <Input value={text} multiline fullWidth style={style.textField} placeholder={i18n.t('Add text here')} onChange={onChangeText} />\n                    </RichTextEditor>\n                </div>\n            </>;\n  };\n\n  const printItem = () => {\n    const textDivStyle = Object.assign({}, style.textField, style.textDiv);\n    return <>\n                {props.item.shortened ? <PrintItemInfo /> : null}\n                <div className=\"dashboard-item-content\" style={style.container}>\n                    <RichTextParser style={textDivStyle}>{text}</RichTextParser>\n                </div>\n            </>;\n  };\n\n  let textItem;\n\n  if (isEditMode(dashboardMode)) {\n    textItem = editItem;\n  } else if (dashboardMode === PRINT_LAYOUT) {\n    textItem = printItem;\n  } else {\n    textItem = viewItem;\n  }\n\n  return <>{textItem()}</>;\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const isPrintPreview = sGetIsPrinting(state);\n  let items;\n\n  if (isPrintPreview) {\n    items = sGetPrintDashboardItems(state);\n  } else if (isEditMode(ownProps.dashboardMode)) {\n    items = sGetEditDashboardItems(state);\n  } else {\n    items = sGetDashboardItems(state);\n  }\n\n  const item = items.find(item => item.id === ownProps.item.id);\n  return {\n    text: item ? item.text : ''\n  };\n};\n\nTextItem.propTypes = {\n  acUpdateDashboardItem: PropTypes.func,\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  text: PropTypes.string\n};\nexport default connect(mapStateToProps, {\n  acUpdateDashboardItem\n})(TextItem);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\nimport { useD2 } from '@dhis2/app-runtime-adapter-d2';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport Line from '../../../widgets/Line';\nimport { FILTER_ORG_UNIT } from '../../../actions/itemFilters';\nimport { sGetItemFiltersRoot, DEFAULT_STATE_ITEM_FILTERS } from '../../../reducers/itemFilters';\nimport { EDIT, isEditMode } from '../../Dashboard/dashboardModes';\n\nconst getIframeSrc = (appDetails, item, itemFilters) => {\n  let iframeSrc = `${appDetails.launchUrl}?dashboardItemId=${item.id}`;\n\n  if (itemFilters[FILTER_ORG_UNIT] && itemFilters[FILTER_ORG_UNIT].length) {\n    const ouIds = itemFilters[FILTER_ORG_UNIT].map(ouFilter => ouFilter.path.split('/').slice(-1)[0]);\n    iframeSrc += `&userOrgUnit=${ouIds.join(',')}`;\n  }\n\n  return iframeSrc;\n};\n\nconst AppItem = ({\n  dashboardMode,\n  item,\n  itemFilters\n}) => {\n  const {\n    d2\n  } = useD2({});\n  let appDetails;\n  const appKey = item.appKey;\n\n  if (appKey) {\n    appDetails = d2.system.installedApps.find(app => app.key === appKey);\n  }\n\n  const hideTitle = appDetails?.settings?.dashboardWidget?.hideTitle && dashboardMode !== EDIT;\n  return appDetails && appDetails.name && appDetails.launchUrl ? <>\n            {!hideTitle && <>\n                    <ItemHeader title={appDetails.name} itemId={item.id} dashboardMode={dashboardMode} isShortened={item.shortened} />\n                    <Line />\n                </>}\n            <iframe title={appDetails.name} src={getIframeSrc(appDetails, item, itemFilters)} className={!hideTitle ? 'dashboard-item-content' : 'dashboard-item-content-hidden-title'} style={{\n      border: 'none'\n    }} />\n        </> : <>\n            <ItemHeader title={`${appKey} app not found`} />\n            <Line />\n            <div className=\"dashboard-item-content\" style={{\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      height: '90%'\n    }}>\n                <NotInterestedIcon color=\"disabled\" disabled style={{\n        width: 100,\n        height: 100,\n        align: 'center'\n      }} />\n            </div>\n        </>;\n};\n\nAppItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const itemFilters = !isEditMode(ownProps.dashboardMode) ? sGetItemFiltersRoot(state) : DEFAULT_STATE_ITEM_FILTERS;\n  return {\n    itemFilters\n  };\n};\n\nexport default connect(mapStateToProps)(AppItem);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { colors } from '@dhis2/ui';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nconst style = {\n  margin: '21px 28px',\n  fontSize: '14px',\n  lineHeight: '18px',\n  color: colors.grey600\n};\n\nconst SpacerItem = props => {\n  return <>\n            <ItemHeader title={i18n.t('Spacer')} itemId={props.item.id} dashboardMode={props.dashboardMode} isShortened={props.item.shortened} />\n            <p style={style}>\n                {i18n.t('Use a spacer to create empty vertical space between other dashboard items.')}\n            </p>\n        </>;\n};\n\nSpacerItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object\n};\nexport default SpacerItem;","import React from 'react';\n\nconst PageBreakItem = () => <div />;\n\nexport default PageBreakItem;","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { sGetSelectedId, sGetSelectedShowDescription } from '../../../reducers/selected';\nimport { sGetDashboardById, EMPTY_DASHBOARD } from '../../../reducers/dashboards';\nimport { sGetNamedItemFilters } from '../../../reducers/itemFilters';\nimport { sGetIsEditing } from '../../../reducers/editDashboard';\nimport { sGetPrintDashboardName, sGetPrintDashboardDescription } from '../../../reducers/printDashboard';\nimport classes from './styles/Item.module.css';\n\nconst PrintTitlePageItem = ({\n  name,\n  description,\n  itemFilters,\n  showDescription\n}) => {\n  const getItemFilterList = () => {\n    const listItems = itemFilters.map(({\n      name,\n      values\n    }) => <li className={classes.filterListItem} key={name}>\n                {name}: {values.map(val => val.name).join(', ')}\n            </li>);\n    return <ul className={classes.filterList}>{listItems}</ul>;\n  };\n\n  return <div className={classes.titlePage}>\n            <p className={classes.name}>{name}</p>\n            {showDescription && description && <p className={classes.description}>{description}</p>}\n            {itemFilters.length > 0 && <>\n                    <p className={classes.filterTitle}>\n                        {i18n.t('Filters applied')}\n                    </p>\n                    {getItemFilterList()}\n                </>}\n        </div>;\n};\n\nPrintTitlePageItem.propTypes = {\n  description: PropTypes.string,\n  itemFilters: PropTypes.array,\n  name: PropTypes.string,\n  showDescription: PropTypes.bool\n};\nPrintTitlePageItem.defaultProps = {\n  description: '',\n  name: '',\n  showDescription: false\n};\n\nconst mapStateToProps = state => {\n  const id = sGetSelectedId(state);\n  const isEditMode = sGetIsEditing(state);\n  const viewDashboard = sGetDashboardById(state, id) || EMPTY_DASHBOARD;\n  const name = isEditMode ? sGetPrintDashboardName(state) || i18n.t('Untitled dashboard') : viewDashboard.displayName;\n  const description = isEditMode ? sGetPrintDashboardDescription(state) : viewDashboard.displayDescription;\n  return {\n    name,\n    description,\n    itemFilters: sGetNamedItemFilters(state),\n    showDescription: sGetSelectedShowDescription(state)\n  };\n};\n\nexport default connect(mapStateToProps)(PrintTitlePageItem);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport VisualizationItem from './VisualizationItem/Item';\nimport MessagesItem from './MessagesItem/Item';\nimport NotSupportedItem from './NotSupportedItem/Item';\nimport ListItem from './ListItem/Item';\nimport TextItem from './TextItem/Item';\nimport AppItem from './AppItem/Item';\nimport SpacerItem from './SpacerItem/Item';\nimport PageBreakItem from './PageBreakItem/Item';\nimport PrintTitlePageItem from './PrintTitlePageItem/Item';\nimport { APP, VISUALIZATION, REPORT_TABLE, CHART, MAP, EVENT_CHART, EVENT_REPORT, MESSAGES, REPORTS, RESOURCES, USERS, TEXT, SPACER, PAGEBREAK, PRINT_TITLE_PAGE } from '../../modules/itemTypes';\n\nconst getGridItem = type => {\n  switch (type) {\n    case VISUALIZATION:\n    case REPORT_TABLE:\n    case CHART:\n    case MAP:\n    case EVENT_CHART:\n    case EVENT_REPORT:\n      return VisualizationItem;\n\n    case MESSAGES:\n      return MessagesItem;\n\n    case REPORTS:\n    case RESOURCES:\n    case USERS:\n      return ListItem;\n\n    case TEXT:\n      return TextItem;\n\n    case SPACER:\n      return SpacerItem;\n\n    case APP:\n      return AppItem;\n\n    case PAGEBREAK:\n      return PageBreakItem;\n\n    case PRINT_TITLE_PAGE:\n      return PrintTitlePageItem;\n\n    default:\n      return NotSupportedItem;\n  }\n};\n\nexport const Item = props => {\n  const GridItem = getGridItem(props.item.type);\n  return <GridItem item={props.item} gridWidth={props.gridWidth} dashboardMode={props.dashboardMode} onToggleItemExpanded={props.onToggleItemExpanded} />;\n};\nItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  gridWidth: PropTypes.number,\n  item: PropTypes.object,\n  onToggleItemExpanded: PropTypes.func\n};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash/debounce';\nimport pick from 'lodash/pick';\nconst defaultDebounceMs = 100;\nconst defaultBufferFactor = 0.25;\n\nclass ProgressiveLoadingContainer extends Component {\n  static propTypes = {\n    children: PropTypes.node.isRequired,\n    bufferFactor: PropTypes.number,\n    className: PropTypes.string,\n    debounceMs: PropTypes.number,\n    style: PropTypes.object\n  };\n  static defaultProps = {\n    debounceMs: defaultDebounceMs,\n    bufferFactor: defaultBufferFactor\n  };\n  state = {\n    shouldLoad: false\n  };\n  containerRef = null;\n  shouldLoadHandler = null;\n  handlerOptions = {\n    passive: true\n  };\n\n  checkShouldLoad() {\n    if (!this.containerRef) {\n      return;\n    }\n\n    const bufferPx = this.props.bufferFactor * window.innerHeight;\n    const rect = this.containerRef.getBoundingClientRect();\n\n    if (rect.bottom > -bufferPx && rect.top < window.innerHeight + bufferPx) {\n      this.setState({\n        shouldLoad: true\n      });\n      this.removeHandler();\n    }\n  }\n\n  registerHandler() {\n    this.shouldLoadHandler = debounce(() => this.checkShouldLoad(), this.props.debounceMs);\n    document.getElementsByClassName('dashboard-wrapper')[0]?.addEventListener('scroll', this.shouldLoadHandler, this.handlerOptions);\n  }\n\n  removeHandler() {\n    document.getElementsByClassName('dashboard-wrapper')[0]?.removeEventListener('scroll', this.shouldLoadHandler, this.handlerOptions);\n  }\n\n  componentDidMount() {\n    this.registerHandler();\n    this.checkShouldLoad();\n  }\n\n  componentWillUnmount() {\n    this.removeHandler();\n  }\n\n  render() {\n    const {\n      children,\n      className,\n      style,\n      ...props\n    } = this.props;\n    const {\n      shouldLoad\n    } = this.state;\n    const eventProps = pick(props, ['onMouseDown', 'onTouchStart', 'onMouseUp', 'onTouchEnd']);\n    return <div ref={ref => this.containerRef = ref} style={style} className={className} data-test={`dashboarditem-${props.itemId}`} {...eventProps}>\n                {shouldLoad && children}\n            </div>;\n  }\n\n}\n\nexport default ProgressiveLoadingContainer;","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport cx from 'classnames';\nimport { Responsive as ResponsiveReactGridLayout } from 'react-grid-layout';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport { useWindowDimensions } from '../WindowDimensionsProvider';\nimport { Item } from '../Item/Item';\nimport { GRID_ROW_HEIGHT, SM_SCREEN_GRID_COLUMNS, GRID_COMPACT_TYPE, GRID_PADDING_PX, MARGIN, MARGIN_SM, hasShape, GRID_COLUMNS, getSmallLayout, getGridWidth, getBreakpoint, getProportionalHeight } from './gridUtil';\nimport { orArray } from '../../modules/util';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport { sGetSelectedId, sGetSelectedIsLoading } from '../../reducers/selected';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport ProgressiveLoadingContainer from '../Item/ProgressiveLoadingContainer';\nimport { VIEW } from '../Dashboard/dashboardModes';\nimport isSmallScreen from '../../modules/isSmallScreen';\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\nimport './styles/ItemGrid.css';\nconst EXPANDED_HEIGHT = 17;\n\nconst ResponsiveItemGrid = ({\n  isLoading,\n  dashboardItems\n}) => {\n  const {\n    width\n  } = useWindowDimensions();\n  const [expandedItems, setExpandedItems] = useState({});\n  const [displayItems, setDisplayItems] = useState(dashboardItems);\n  const [layoutSm, setLayoutSm] = useState(getSmallLayout(dashboardItems, width));\n  const [gridWidth, setGridWidth] = useState(0);\n  useEffect(() => {\n    setLayoutSm(getItemsWithAdjustedHeight(getSmallLayout(dashboardItems, width)));\n    setDisplayItems(getItemsWithAdjustedHeight(dashboardItems));\n  }, [expandedItems, dashboardItems]);\n\n  const onToggleItemExpanded = clickedId => {\n    const isExpanded = typeof expandedItems[clickedId] === 'boolean' ? expandedItems[clickedId] : false;\n    const newExpandedItems = { ...expandedItems\n    };\n    newExpandedItems[clickedId] = !isExpanded;\n    setExpandedItems(newExpandedItems);\n  };\n\n  const getItemsWithAdjustedHeight = items => items.map(item => {\n    const expandedItem = expandedItems[item.id];\n\n    if (expandedItem && expandedItem === true) {\n      return Object.assign({}, item, {\n        h: item.h + EXPANDED_HEIGHT,\n        smallOriginalH: getProportionalHeight(item, width)\n      });\n    }\n\n    return item;\n  });\n\n  const getItemComponent = item => <ProgressiveLoadingContainer key={item.i} className={cx(item.type, 'view', `reactgriditem-${item.id}`)} itemId={item.id}>\n            <Item item={item} gridWidth={gridWidth} dashboardMode={VIEW} onToggleItemExpanded={onToggleItemExpanded} />\n        </ProgressiveLoadingContainer>;\n\n  const getItemComponents = items => items.map(item => getItemComponent(item));\n\n  const onWidthChanged = containerWidth => {\n    setTimeout(() => {\n      setGridWidth(containerWidth);\n    }, 200);\n  };\n\n  if (!isLoading && !dashboardItems.length) {\n    return <NoContentMessage text={i18n.t('There are no items on this dashboard')} />;\n  }\n\n  return <>\n            {isLoading ? <Layer translucent>\n                    <CenteredContent>\n                        <CircularLoader />\n                    </CenteredContent>\n                </Layer> : null}\n            <ResponsiveReactGridLayout rowHeight={GRID_ROW_HEIGHT} width={getGridWidth(width)} cols={{\n      lg: GRID_COLUMNS,\n      sm: SM_SCREEN_GRID_COLUMNS\n    }} breakpoints={{\n      lg: getBreakpoint(),\n      sm: 0\n    }} layouts={{\n      lg: displayItems,\n      sm: layoutSm\n    }} compactType={GRID_COMPACT_TYPE} margin={isSmallScreen(width) ? MARGIN_SM : MARGIN} containerPadding={{\n      lg: GRID_PADDING_PX,\n      sm: GRID_PADDING_PX\n    }} isDraggable={false} isResizable={false} draggableCancel=\"input,textarea\" onWidthChange={onWidthChanged}>\n                {getItemComponents(displayItems)}\n            </ResponsiveReactGridLayout>\n        </>;\n};\n\nResponsiveItemGrid.propTypes = {\n  dashboardItems: PropTypes.array,\n  isLoading: PropTypes.bool\n};\n\nconst mapStateToProps = state => {\n  const selectedDashboard = sGetDashboardById(state, sGetSelectedId(state));\n  const dashboardItems = orArray(sGetDashboardItems(state)).filter(hasShape);\n  return {\n    isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n    dashboardItems\n  };\n};\n\nexport default connect(mapStateToProps)(ResponsiveItemGrid);","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { colors } from '@dhis2/ui';\nconst styles = {\n  badgeContainer: {\n    margin: '2px',\n    padding: '0 16px',\n    borderRadius: '4px',\n    color: colors.white,\n    backgroundColor: '#212934',\n    height: 36,\n    display: 'flex',\n    alignItems: 'center'\n  },\n  badge: {\n    fontSize: '13px',\n    cursor: 'pointer',\n    whiteSpace: 'nowrap'\n  },\n  badgeRemove: {\n    fontSize: '12px',\n    textDecoration: 'underline',\n    marginLeft: '24px',\n    cursor: 'pointer'\n  }\n};\n\nclass FilterBadge extends Component {\n  onClick = id => () => this.props.onClick(id);\n  onRemove = id => () => this.props.onRemove(id);\n\n  render() {\n    const {\n      data\n    } = this.props;\n    return <div style={styles.badgeContainer} data-test=\"dashboard-filter-badge\">\n                <span style={styles.badge} onClick={this.onClick(data.id)}>\n                    {`${data.name}: ${data.values.length > 1 ? i18n.t('{{count}} selected', {\n          count: data.values.length\n        }) : data.values[0].name}`}\n                </span>\n                <span style={styles.badgeRemove} onClick={this.onRemove(data.id)}>\n                    {i18n.t('Remove')}\n                </span>\n            </div>;\n  }\n\n}\n\nFilterBadge.propTypes = {\n  data: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired,\n  onRemove: PropTypes.func.isRequired\n};\nFilterBadge.defaultProps = {\n  onClick: Function.prototype,\n  onRemove: Function.prototype\n};\nexport default FilterBadge;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport FilterBadge from './FilterBadge';\nimport { sGetNamedItemFilters } from '../../reducers/itemFilters';\nimport { acRemoveItemFilter } from '../../actions/itemFilters';\nimport { acSetActiveModalDimension } from '../../actions/activeModalDimension';\nimport classes from './styles/FilterBar.module.css';\nexport class FilterBar extends Component {\n  onBadgeRemove = id => {\n    this.props.removeItemFilter(id);\n  };\n  onBadgeClick = id => {\n    this.props.setActiveModalDimension({\n      id,\n      name: this.props.filters.find(item => item.id === id).name\n    });\n  };\n\n  render() {\n    const {\n      filters\n    } = this.props;\n    return filters.length ? // the 3 is calculated so that the FilterBar has the same vertical position as the TitleBar in relation to the ControlBar\n    <div className={classes.bar} style={{\n      top: 3\n    }}>\n                {filters.map(filter => <FilterBadge key={filter.id} data={filter} onClick={this.onBadgeClick} onRemove={this.onBadgeRemove} />)}\n            </div> : null;\n  }\n\n}\nFilterBar.propTypes = {\n  filters: PropTypes.array.isRequired,\n  removeItemFilter: PropTypes.func.isRequired,\n  setActiveModalDimension: PropTypes.func\n};\nFilterBar.defaultProps = {\n  filters: [],\n  removeItemFIlter: Function.prototype\n};\n\nconst mapStateToProps = state => ({\n  filters: sGetNamedItemFilters(state)\n});\n\nexport default connect(mapStateToProps, {\n  setActiveModalDimension: acSetActiveModalDimension,\n  removeItemFilter: acRemoveItemFilter\n})(FilterBar);","import { generateUid } from 'd2/uid';\nimport { SET_PRINT_DASHBOARD, CLEAR_PRINT_DASHBOARD, SET_PRINT_DASHBOARD_LAYOUT, ADD_PRINT_DASHBOARD_ITEM, REMOVE_PRINT_DASHBOARD_ITEM, UPDATE_PRINT_DASHBOARD_ITEM } from '../reducers/printDashboard';\nimport { NEW_ITEM_SHAPE, getGridItemProperties, getPageBreakItemShape, getPrintTitlePageItemShape } from '../components/ItemGrid/gridUtil';\nimport { itemTypeMap, PAGEBREAK } from '../modules/itemTypes'; // actions\n\nexport const acSetPrintDashboard = (dashboard, items) => {\n  const val = { ...dashboard,\n    dashboardItems: items\n  };\n  return {\n    type: SET_PRINT_DASHBOARD,\n    value: val\n  };\n};\nexport const acClearPrintDashboard = () => ({\n  type: CLEAR_PRINT_DASHBOARD\n});\nexport const acUpdatePrintDashboardLayout = value => ({\n  type: SET_PRINT_DASHBOARD_LAYOUT,\n  value\n});\nexport const acAddPrintDashboardItem = item => {\n  const type = item.type;\n  delete item.type;\n  const itemPropName = itemTypeMap[type].propName;\n  const id = generateUid();\n  const gridItemProperties = getGridItemProperties(id);\n  let shape;\n\n  if (type === PAGEBREAK) {\n    const yPos = item.yPos || 0;\n    shape = getPageBreakItemShape(yPos, item.isStatic);\n  } else {\n    shape = getPrintTitlePageItemShape(item.isOneItemPerPage);\n  }\n\n  return {\n    type: ADD_PRINT_DASHBOARD_ITEM,\n    value: {\n      id,\n      type,\n      position: item.position || null,\n      [itemPropName]: item.content,\n      ...NEW_ITEM_SHAPE,\n      ...gridItemProperties,\n      ...shape\n    }\n  };\n};\nexport const acRemovePrintDashboardItem = value => ({\n  type: REMOVE_PRINT_DASHBOARD_ITEM,\n  value\n});\nexport const acUpdatePrintDashboardItem = item => ({\n  type: UPDATE_PRINT_DASHBOARD_ITEM,\n  value: item\n});","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport ViewTitleBar from '../TitleBar/ViewTitleBar';\nimport ViewItemGrid from '../ItemGrid/ViewItemGrid';\nimport FilterBar from '../FilterBar/FilterBar';\nimport DashboardsBar from '../ControlBar/DashboardsBar';\nimport { sGetIsEditing } from '../../reducers/editDashboard';\nimport { sGetIsPrinting } from '../../reducers/printDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { acClearEditDashboard } from '../../actions/editDashboard';\nimport { acClearPrintDashboard } from '../../actions/printDashboard';\nimport { getControlBarHeight, HEADERBAR_HEIGHT } from '../ControlBar/controlBarDimensions';\nimport { useWindowDimensions } from '../WindowDimensionsProvider';\nexport const ViewDashboard = props => {\n  const {\n    height\n  } = useWindowDimensions();\n  useEffect(() => {\n    if (props.dashboardIsEditing) {\n      props.clearEditDashboard();\n    } else if (props.dashboardIsPrinting) {\n      props.clearPrintDashboard();\n    }\n  }, [props.dashboardIsEditing, props.dashboardIsPrinting]);\n  useEffect(() => {\n    document.querySelector('.dashboard-wrapper')?.scroll(0, 0);\n  }, [props.selectedId]);\n  const contentHeight = height - HEADERBAR_HEIGHT - getControlBarHeight(props.controlBarRows);\n  return <>\n            <DashboardsBar />\n            <div className={'dashboard-wrapper'} style={{\n      height: contentHeight\n    }}>\n                <ViewTitleBar />\n                <FilterBar />\n                <ViewItemGrid />\n            </div>\n        </>;\n};\nViewDashboard.propTypes = {\n  clearEditDashboard: PropTypes.func,\n  clearPrintDashboard: PropTypes.func,\n  controlBarRows: PropTypes.number,\n  dashboardIsEditing: PropTypes.bool,\n  dashboardIsPrinting: PropTypes.bool,\n  selectedId: PropTypes.string\n};\n\nconst mapStateToProps = state => {\n  return {\n    dashboardIsEditing: sGetIsEditing(state),\n    dashboardIsPrinting: sGetIsPrinting(state),\n    controlBarRows: sGetControlBarUserRows(state),\n    selectedId: sGetSelectedId(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  clearEditDashboard: acClearEditDashboard,\n  clearPrintDashboard: acClearPrintDashboard\n})(ViewDashboard);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { InputField } from '@dhis2/ui';\n\nconst ItemSearchField = props => <InputField name=\"Dashboard item search\" label={i18n.t('Search for items to add to this dashboard')} type=\"text\" onChange={props.onChange} onFocus={props.onFocus} value={props.value} dataTest=\"item-search\" />;\n\nItemSearchField.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n  onFocus: PropTypes.func\n};\nexport default ItemSearchField;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { MenuItem, colors } from '@dhis2/ui';\nimport classes from './styles/HeaderMenuItem.module.css';\n\nconst HeaderMenuItem = ({\n  title\n}) => <MenuItem className={classes.item} dense key={title} disabled label={<span style={{\n  color: colors.grey800,\n  fontWeight: '600'\n}}>\n                {title}\n            </span>} />;\n\nHeaderMenuItem.propTypes = {\n  title: PropTypes.string.isRequired\n};\nexport default HeaderMenuItem;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst LaunchIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\" fill={colors.grey600} viewBox=\"0 0 24 24\">\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z\" />\n    </svg>;\n\nLaunchIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default LaunchIcon;","import React from 'react';\nimport { MenuItem, colors } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport { visTypeIcons } from '@dhis2/analytics';\nimport { getItemIcon, VISUALIZATION } from '../../modules/itemTypes';\nimport LaunchIcon from '../../icons/Launch';\nimport classes from './styles/ContentMenuItem.module.css';\n\nconst LaunchLink = ({\n  url\n}) => <a onClick={e => e.stopPropagation()} className={classes.launchLink} target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n        <LaunchIcon />\n    </a>;\n\nLaunchLink.propTypes = {\n  url: PropTypes.string\n};\n\nconst InsertButton = () => <button className={classes.buttonInsert}>{i18n.t('Insert')}</button>;\n\nconst ContentMenuItem = ({\n  type,\n  name,\n  onInsert,\n  url,\n  visType\n}) => {\n  const ItemIcon = getItemIcon(type);\n  const renderedItemIcon = type === VISUALIZATION ? visTypeIcons[visType] : <ItemIcon style={{\n    fill: colors.grey600\n  }} />;\n  return <MenuItem dense onClick={onInsert} label={<div className={classes.menuItem}>\n                    <div className={classes.label}>\n                        <span style={{\n        marginRight: '6px'\n      }}>\n                            {renderedItemIcon}\n                        </span>\n                        <span>{name}</span>\n                        {url ? <LaunchLink url={url} /> : null}\n                    </div>\n                    <InsertButton />\n                </div>} dataTest={`menu-item-${name}`} />;\n};\n\nContentMenuItem.propTypes = {\n  name: PropTypes.string,\n  type: PropTypes.string,\n  url: PropTypes.string,\n  visType: PropTypes.string,\n  onInsert: PropTypes.func\n};\nexport default ContentMenuItem;","import { sGetEditDashboardRoot } from '../../reducers/editDashboard';\nimport { itemTypeMap } from '../../modules/itemTypes';\nimport { acAddDashboardItem, acUpdateDashboardItem } from '../../actions/editDashboard';\nexport const tAddListItemContent = (type, content) => (dispatch, getState) => {\n  const state = getState();\n  const listItemType = itemTypeMap[type].propName;\n  const dashboardItems = sGetEditDashboardRoot(state).dashboardItems;\n  const dashboardItemIndex = dashboardItems.findIndex(item => item.type === type);\n  let dashboardItem; // Reports/Resources/Users dashboard item type already present in dashboard\n\n  if (dashboardItemIndex > -1) {\n    dashboardItem = dashboardItems[dashboardItemIndex];\n    dashboardItem[listItemType].push(content);\n    dispatch(acUpdateDashboardItem(dashboardItem));\n  } else {\n    dashboardItem = {\n      type: type,\n      content: [content]\n    };\n    dispatch(acAddDashboardItem(dashboardItem));\n  }\n};","import i18n from '@dhis2/d2-i18n';\nimport { VISUALIZATION, MAP, EVENT_CHART, EVENT_REPORT, USERS, REPORTS, RESOURCES, APP, MESSAGES, TEXT, SPACER } from '../../modules/itemTypes';\nexport const singleItems = [{\n  id: 'additional',\n  header: i18n.t('Additional items'),\n  items: [{\n    type: TEXT,\n    name: i18n.t('Text box'),\n    content: ''\n  }, {\n    type: MESSAGES,\n    name: i18n.t('Messages'),\n    content: 'true'\n  }, {\n    type: SPACER,\n    name: i18n.t('Spacer'),\n    content: ''\n  }]\n}]; // categorizedItems are grouped in the item selector menu\n\nexport const categorizedItems = [VISUALIZATION, MAP, EVENT_REPORT, EVENT_CHART, USERS, REPORTS, RESOURCES, APP]; // listItemTypes are included in a single dashboard item\n\nexport const listItemTypes = [REPORTS, RESOURCES, USERS];","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { MenuItem, Divider } from '@dhis2/ui';\nimport { useConfig } from '@dhis2/app-runtime';\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\nimport { tAddListItemContent } from './actions';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\nimport { getItemUrl, APP, VISUALIZATION } from '../../modules/itemTypes';\nimport { categorizedItems, listItemTypes } from './selectableItems';\nimport classes from './styles/CategorizedMenuGroup.module.css';\n\nconst CategorizedMenuGroup = ({\n  type,\n  title,\n  items,\n  hasMore,\n  acAddDashboardItem,\n  tAddListItemContent,\n  onChangeItemsLimit\n}) => {\n  const {\n    baseUrl\n  } = useConfig();\n  const [seeMore, setSeeMore] = useState(false);\n\n  const addItem = item => () => {\n    if (type === APP) {\n      acAddDashboardItem({\n        type,\n        content: item.key\n      });\n    } else {\n      const newItem = {\n        id: item.id,\n        name: item.displayName || item.name\n      };\n\n      if (listItemTypes.includes(type)) {\n        tAddListItemContent(type, newItem);\n      } else {\n        acAddDashboardItem({\n          type,\n          content: newItem\n        });\n      }\n    }\n  };\n\n  const toggleSeeMore = () => {\n    setSeeMore(!seeMore);\n    onChangeItemsLimit(type);\n  };\n\n  return <>\n            <HeaderMenuItem title={title} />\n            {items.map(item => {\n      const itemUrl = getItemUrl(type, item, baseUrl);\n      return <ContentMenuItem key={item.id || item.key} type={type} visType={type === VISUALIZATION ? item.type : type} name={item.displayName || item.name} onInsert={addItem(item)} url={itemUrl} />;\n    })}\n            {hasMore ? <MenuItem dense key={`showmore${title}`} onClick={toggleSeeMore} label={<button className={classes.showMoreButton}>\n                            {seeMore ? i18n.t('Show fewer') : i18n.t('Show more')}\n                        </button>} /> : null}\n            <Divider margin=\"8px 0px\" />\n        </>;\n};\n\nCategorizedMenuGroup.propTypes = {\n  items: PropTypes.array.isRequired,\n  title: PropTypes.string.isRequired,\n  type: PropTypes.oneOf(categorizedItems).isRequired,\n  onChangeItemsLimit: PropTypes.func.isRequired,\n  acAddDashboardItem: PropTypes.func,\n  hasMore: PropTypes.bool,\n  tAddListItemContent: PropTypes.func\n};\nexport default connect(null, {\n  acAddDashboardItem,\n  tAddListItemContent\n})(CategorizedMenuGroup);","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\nexport const SinglesMenuGroup = ({\n  acAddDashboardItem,\n  category\n}) => {\n  const addToDashboard = ({\n    type,\n    content\n  }) => () => {\n    acAddDashboardItem({\n      type,\n      content\n    });\n  };\n\n  return <>\n            <HeaderMenuItem title={category.header} />\n            {category.items.map(item => <ContentMenuItem key={item.type} type={item.type} name={item.name} onInsert={addToDashboard(item)} />)}\n        </>;\n};\nSinglesMenuGroup.propTypes = {\n  acAddDashboardItem: PropTypes.func,\n  category: PropTypes.object\n};\nexport default connect(null, {\n  acAddDashboardItem\n})(SinglesMenuGroup);","import React, { useState, useEffect, createRef } from 'react';\nimport { Popover, FlyoutMenu } from '@dhis2/ui';\nimport { useD2 } from '@dhis2/app-runtime-adapter-d2';\nimport ItemSearchField from './ItemSearchField';\nimport CategorizedMenuGroup from './CategorizedMenuGroup';\nimport SinglesMenuGroup from './SinglesMenuGroup';\nimport { singleItems, categorizedItems } from './selectableItems';\nimport { itemTypeMap, getDefaultItemCount } from '../../modules/itemTypes';\nimport classes from './styles/ItemSelector.module.css';\n\nconst ItemSelector = () => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [filter, setFilter] = useState('');\n  const [items, setItems] = useState(null);\n  const [maxOptions, setMaxOptions] = useState(new Set());\n  const {\n    d2\n  } = useD2({});\n  useEffect(() => {\n    let queryString = '?count=11';\n\n    if ([...maxOptions.values()].length) {\n      queryString += '&max=' + [...maxOptions.values()].join('&max=');\n    }\n\n    const filterStr = filter ? `/${filter}` : '';\n    d2.Api.getApi().get(`dashboards/q${filterStr}${queryString}`).then(response => setItems(response)).catch(console.error);\n  }, [filter, maxOptions]);\n\n  const closeMenu = () => {\n    setIsOpen(false);\n    setFilter('');\n    setMaxOptions(new Set());\n  };\n\n  const openMenu = () => setIsOpen(true);\n\n  const getCategorizedMenuGroups = () => {\n    return categorizedItems.filter(type => {\n      const itemType = itemTypeMap[type];\n      return items && items[itemType.endPointName];\n    }).map(type => {\n      const itemType = itemTypeMap[type];\n      const itemCount = getDefaultItemCount(type);\n      const allItems = items[itemType.endPointName];\n      const hasMore = allItems.length > itemCount;\n      const displayItems = maxOptions.has(itemType.id) ? allItems : allItems.slice(0, itemCount);\n      return <CategorizedMenuGroup key={type} type={type} title={itemType.pluralTitle} items={displayItems} onChangeItemsLimit={updateMaxOptions} hasMore={hasMore} />;\n    });\n  };\n\n  const getSinglesMenuGroups = () => singleItems.map(category => <SinglesMenuGroup key={category.id} category={category} />);\n\n  const getMenuGroups = () => getCategorizedMenuGroups().concat(getSinglesMenuGroups());\n\n  const updateMaxOptions = type => {\n    if (type) {\n      const options = new Set(maxOptions);\n      options.has(type) ? options.delete(type) : options.add(type);\n      setMaxOptions(options);\n    } else {\n      setMaxOptions(new Set());\n    }\n  };\n\n  const updateFilter = ({\n    value\n  }) => setFilter(value);\n\n  const inputRef = createRef();\n  return <>\n            <span ref={inputRef}>\n                <ItemSearchField value={filter} onChange={updateFilter} onFocus={openMenu} />\n            </span>\n            {isOpen && <Popover reference={inputRef} placement=\"bottom-start\" onClickOutside={closeMenu} arrow={false} maxWidth={700}>\n                    <FlyoutMenu className={classes.menu} dataTest=\"item-menu\" maxWidth=\"700px\">\n                        {getMenuGroups()}\n                    </FlyoutMenu>\n                </Popover>}\n        </>;\n};\n\nexport default ItemSelector;","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { InputField, TextAreaField } from '@dhis2/ui';\nimport ItemSelector from '../ItemSelector/ItemSelector';\nimport { acSetDashboardTitle, acSetDashboardDescription } from '../../actions/editDashboard';\nimport { orObject } from '../../modules/util';\nimport { sGetEditDashboardRoot } from '../../reducers/editDashboard';\nimport classes from './styles/EditTitleBar.module.css';\nexport const EditTitleBar = ({\n  name,\n  description,\n  onChangeTitle,\n  onChangeDescription\n}) => {\n  const updateTitle = (_, e) => {\n    onChangeTitle(e.target.value);\n  };\n\n  const updateDescription = (_, e) => {\n    onChangeDescription(e.target.value);\n  };\n\n  return <section className={classes.section}>\n            <div className={classes.titleDescription}>\n                <InputField className={classes.title} name=\"Dashboard title input\" label={i18n.t('Dashboard title')} type=\"text\" onChange={updateTitle} value={name} placeholder={i18n.t('Untitled dashboard')} dataTest=\"dashboard-title-input\" />\n                <TextAreaField className={classes.description} name=\"Dashboard description input\" label={i18n.t('Dashboard description')} onChange={updateDescription} value={description} dataTest=\"dashboard-description-input\" />\n            </div>\n            <div className={classes.itemSelector}>\n                <ItemSelector />\n            </div>\n        </section>;\n};\nEditTitleBar.propTypes = {\n  onChangeDescription: PropTypes.func.isRequired,\n  onChangeTitle: PropTypes.func.isRequired,\n  description: PropTypes.string,\n  name: PropTypes.string\n};\nEditTitleBar.defaultProps = {\n  name: '',\n  description: ''\n};\n\nconst mapStateToProps = state => {\n  const selectedDashboard = orObject(sGetEditDashboardRoot(state));\n  return {\n    name: selectedDashboard.name,\n    description: selectedDashboard.description\n  };\n};\n\nconst mapDispatchToProps = {\n  onChangeTitle: acSetDashboardTitle,\n  onChangeDescription: acSetDashboardDescription\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(EditTitleBar);","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Responsive as ResponsiveReactGridLayout } from 'react-grid-layout';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport cx from 'classnames';\nimport { acUpdateDashboardLayout } from '../../actions/editDashboard';\nimport { Item } from '../Item/Item';\nimport { resize as pluginResize } from '../Item/VisualizationItem/Visualization/plugin';\nimport { isVisualizationType } from '../../modules/itemTypes';\nimport { GRID_ROW_HEIGHT, GRID_COMPACT_TYPE, MARGIN, GRID_PADDING_PX, GRID_COLUMNS, hasShape, getGridItemDomId, getGridWidth, getBreakpoint } from './gridUtil';\nimport { orArray } from '../../modules/util';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport { sGetSelectedIsLoading } from '../../reducers/selected';\nimport { sGetEditDashboardRoot, sGetEditDashboardItems } from '../../reducers/editDashboard';\nimport ProgressiveLoadingContainer from '../Item/ProgressiveLoadingContainer';\nimport { EDIT } from '../Dashboard/dashboardModes';\nimport { useWindowDimensions } from '../WindowDimensionsProvider';\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\nimport './styles/ItemGrid.css';\n\nconst EditItemGrid = ({\n  isLoading,\n  dashboardItems,\n  acUpdateDashboardLayout\n}) => {\n  const [gridWidth, setGridWidth] = useState(0);\n  const {\n    width\n  } = useWindowDimensions();\n\n  const onLayoutChange = newLayout => {\n    acUpdateDashboardLayout(newLayout);\n  };\n\n  const onResizeStop = (layout, oldItem, newItem) => {\n    const el = document.querySelector(`#${getGridItemDomId(newItem.i)}`) || {};\n    if (typeof el.setViewportSize === 'function') setTimeout(() => el.setViewportSize(el.clientWidth - 5, el.clientHeight - 5), 10);\n    const dashboardItem = dashboardItems.find(item => item.id === newItem.i); // call resize on the item component if it's a plugin type\n\n    if (dashboardItem && isVisualizationType(dashboardItem)) {\n      pluginResize(dashboardItem);\n    }\n  };\n\n  const getItemComponent = item => <ProgressiveLoadingContainer key={item.i} className={cx(item.type, 'edit')} itemId={item.id}>\n            <Item item={item} gridWidth={gridWidth} dashboardMode={EDIT} />\n        </ProgressiveLoadingContainer>;\n\n  const getItemComponents = items => items.map(item => getItemComponent(item));\n\n  const onWidthChanged = containerWidth => {\n    setTimeout(() => {\n      setGridWidth(containerWidth);\n    }, 200);\n  };\n\n  if (!isLoading && !dashboardItems.length) {\n    return <NoContentMessage text={i18n.t('There are no items on this dashboard')} />;\n  }\n\n  return <>\n            {isLoading ? <Layer translucent>\n                    <CenteredContent>\n                        <CircularLoader />\n                    </CenteredContent>\n                </Layer> : null}\n            <ResponsiveReactGridLayout rowHeight={GRID_ROW_HEIGHT} width={getGridWidth(width)} cols={{\n      lg: GRID_COLUMNS\n    }} breakpoints={{\n      lg: getBreakpoint()\n    }} layouts={{\n      lg: dashboardItems\n    }} compactType={GRID_COMPACT_TYPE} margin={MARGIN} containerPadding={{\n      lg: GRID_PADDING_PX\n    }} onLayoutChange={onLayoutChange} onResizeStop={onResizeStop} onWidthChange={onWidthChanged} isDraggable={true} isResizable={true} draggableCancel=\"input,textarea\">\n                {getItemComponents(dashboardItems)}\n            </ResponsiveReactGridLayout>\n        </>;\n};\n\nEditItemGrid.propTypes = {\n  acUpdateDashboardLayout: PropTypes.func,\n  dashboardItems: PropTypes.array,\n  isLoading: PropTypes.bool\n}; // Container\n\nconst mapStateToProps = state => {\n  const selectedDashboard = sGetEditDashboardRoot(state);\n  const dashboardItems = orArray(sGetEditDashboardItems(state)).filter(hasShape);\n  return {\n    isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n    dashboardItems\n  };\n};\n\nconst mapDispatchToProps = {\n  acUpdateDashboardLayout\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(EditItemGrid);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Button, Modal, ModalContent, ModalActions, ButtonStrip, ModalTitle } from '@dhis2/ui';\nimport classes from './styles/ConfirmDeleteDialog.module.css';\nexport const ConfirmDeleteDialog = ({\n  dashboardName,\n  onDeleteConfirmed,\n  onContinueEditing,\n  open\n}) => {\n  const actions = [<Button key=\"cancel\" secondary onClick={onContinueEditing} dataTest=\"cancel-delete-dashboard\">\n            {i18n.t('Cancel')}\n        </Button>, <Button key=\"delete\" destructive onClick={onDeleteConfirmed} dataTest=\"confirm-delete-dashboard\">\n            {i18n.t('Delete')}\n        </Button>];\n  return open && <Modal onClose={onContinueEditing} small position=\"middle\">\n                <ModalTitle>{i18n.t('Delete dashboard')}</ModalTitle>\n                <ModalContent>\n                    <span className={classes.content}>\n                        {i18n.t('Deleting dashboard \"{{ dashboardName }}\" will remove it for all users. This action cannot be undone. Are you sure you want to permanently delete this dashboard?', {\n          dashboardName\n        })}\n                    </span>\n                </ModalContent>\n                <ModalActions>\n                    <ButtonStrip>{actions}</ButtonStrip>\n                </ModalActions>\n            </Modal>;\n};\nConfirmDeleteDialog.propTypes = {\n  dashboardName: PropTypes.string,\n  open: PropTypes.bool,\n  onContinueEditing: PropTypes.func,\n  onDeleteConfirmed: PropTypes.func\n};\nexport default ConfirmDeleteDialog;","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport TranslationDialog from '@dhis2/d2-ui-translation-dialog';\nimport { Button, ButtonStrip } from '@dhis2/ui';\nimport { useDataEngine } from '@dhis2/app-runtime';\nimport { useD2 } from '@dhis2/app-runtime-adapter-d2';\nimport ConfirmDeleteDialog from './ConfirmDeleteDialog';\nimport { tSaveDashboard, acClearEditDashboard, acSetPrintPreviewView, acClearPrintPreviewView } from '../../actions/editDashboard';\nimport { acClearPrintDashboard } from '../../actions/printDashboard';\nimport { tDeleteDashboard, acSetDashboardDisplayName } from '../../actions/dashboards';\nimport { sGetEditDashboardRoot, sGetIsNewDashboard, sGetIsPrintPreviewView } from '../../reducers/editDashboard';\nimport { apiFetchDashboard } from '../../api/dashboards';\nimport classes from './styles/EditBar.module.css';\n\nconst EditBar = props => {\n  const {\n    d2\n  } = useD2({});\n  const dataEngine = useDataEngine();\n  const [translationDlgIsOpen, setTranslationDlgIsOpen] = useState(false);\n  const [dashboard, setDashboard] = useState(undefined);\n  const [confirmDeleteDlgIsOpen, setConfirmDeleteDlgIsOpen] = useState(false);\n  const [redirectUrl, setRedirectUrl] = useState(undefined);\n  useEffect(() => {\n    if (props.dashboardId && !dashboard) {\n      apiFetchDashboard(dataEngine, props.dashboardId).then(dboard => setDashboard(dboard));\n    }\n  }, [props.dashboardId, dashboard]);\n\n  const onConfirmDelete = () => {\n    setConfirmDeleteDlgIsOpen(true);\n  };\n\n  const onSave = () => {\n    props.onSave().then(newId => {\n      setRedirectUrl(`/${newId}`);\n    });\n  };\n\n  const onPrintPreview = () => {\n    if (props.isPrintPreviewView) {\n      props.clearPrintPreview();\n      props.clearPrintDashboard();\n    } else {\n      props.showPrintPreview();\n    }\n  };\n\n  const onDiscard = () => {\n    props.onDiscardChanges();\n    const redirectUrl = props.dashboardId ? `/${props.dashboardId}` : '/';\n    setRedirectUrl(redirectUrl);\n  };\n\n  const onContinueEditing = () => {\n    setConfirmDeleteDlgIsOpen(false);\n  };\n\n  const onDeleteConfirmed = () => {\n    setConfirmDeleteDlgIsOpen(false);\n    props.onDelete(props.dashboardId).then(() => {\n      setRedirectUrl('/');\n    });\n  };\n\n  const onTranslationsSaved = async translations => {\n    if (translations && translations.length) {\n      const dbLocale = await d2.currentUser.userSettings.get('keyDbLocale');\n      const translation = translations.find(t => t.locale === dbLocale && t.property === 'NAME');\n\n      if (translation && translation.value) {\n        props.onTranslate(props.dashboardId, translation.value);\n      }\n    }\n  };\n\n  const toggleTranslationDialog = () => setTranslationDlgIsOpen(!translationDlgIsOpen);\n\n  const confirmDeleteDialog = () => props.deleteAccess && props.dashboardId ? <ConfirmDeleteDialog dashboardName={props.dashboardName} onDeleteConfirmed={onDeleteConfirmed} onContinueEditing={onContinueEditing} open={confirmDeleteDlgIsOpen} /> : null;\n\n  const translationDialog = () => dashboard && dashboard.id ? <TranslationDialog className=\"translation-dialog\" d2={d2} open={translationDlgIsOpen} onRequestClose={toggleTranslationDialog} objectToTranslate={{ ...dashboard,\n    modelDefinition: {\n      name: 'dashboard'\n    }\n  }} fieldsToTranslate={['name', 'description']} onTranslationSaved={onTranslationsSaved} onTranslationError={err => console.log('translation update error', err)} /> : null;\n\n  const renderActionButtons = () => <ButtonStrip>\n            <Button primary onClick={onSave} dataTest=\"save-dashboard-button\">\n                {i18n.t('Save changes')}\n            </Button>\n            <Button onClick={onPrintPreview}>\n                {props.isPrintPreviewView ? i18n.t('Exit Print preview') : i18n.t('Print preview')}\n            </Button>\n\n            {props.dashboardId && <Button onClick={toggleTranslationDialog}>\n                    {i18n.t('Translate')}\n                </Button>}\n            {props.dashboardId && props.deleteAccess && <Button onClick={onConfirmDelete} dataTest=\"delete-dashboard-button\">\n                    {i18n.t('Delete')}\n                </Button>}\n        </ButtonStrip>;\n\n  if (redirectUrl) {\n    return <Redirect to={redirectUrl} />;\n  }\n\n  const {\n    updateAccess\n  } = props;\n  const discardBtnText = updateAccess ? i18n.t('Exit without saving') : i18n.t('Go to dashboards');\n  return <>\n            <div className={classes.editBar}>\n                <div className={classes.controls}>\n                    {updateAccess ? renderActionButtons() : null}\n                    <Button secondary onClick={onDiscard}>\n                        {discardBtnText}\n                    </Button>\n                </div>\n            </div>\n            {translationDialog()}\n            {confirmDeleteDialog()}\n        </>;\n};\n\nEditBar.propTypes = {\n  clearPrintDashboard: PropTypes.func,\n  clearPrintPreview: PropTypes.func,\n  dashboardId: PropTypes.string,\n  dashboardName: PropTypes.string,\n  deleteAccess: PropTypes.bool,\n  isPrintPreviewView: PropTypes.bool,\n  showPrintPreview: PropTypes.func,\n  updateAccess: PropTypes.bool,\n  onDelete: PropTypes.func,\n  onDiscardChanges: PropTypes.func,\n  onSave: PropTypes.func,\n  onTranslate: PropTypes.func\n};\n\nconst mapStateToProps = state => {\n  const dashboard = sGetEditDashboardRoot(state);\n  let deleteAccess;\n  let updateAccess;\n\n  if (sGetIsNewDashboard(state)) {\n    deleteAccess = true;\n    updateAccess = true;\n  } else {\n    updateAccess = dashboard.access ? dashboard.access.update : false;\n    deleteAccess = dashboard.access ? dashboard.access.delete : false;\n  }\n\n  return {\n    dashboardId: dashboard.id,\n    dashboardName: dashboard.name,\n    deleteAccess,\n    isPrintPreviewView: sGetIsPrintPreviewView(state),\n    updateAccess\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  clearPrintDashboard: () => dispatch(acClearPrintDashboard()),\n  clearPrintPreview: () => dispatch(acClearPrintPreviewView()),\n  onSave: () => dispatch(tSaveDashboard()).then(id => id),\n  onDelete: id => dispatch(tDeleteDashboard(id)),\n  onDiscardChanges: () => dispatch(acClearEditDashboard()),\n  onTranslate: (id, value) => dispatch(acSetDashboardDisplayName(id, value)),\n  showPrintPreview: () => dispatch(acSetPrintPreviewView())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditBar);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { NoticeBox, CenteredContent } from '@dhis2/ui';\nimport classes from './styles/NotSupportedNotice.module.css';\n\nconst NotSupportedNotice = ({\n  message\n}) => <CenteredContent position=\"top\">\n        <div className={classes.noticeContainer}>\n            <NoticeBox title={i18n.t('Not supported')} warning>\n                {message}\n            </NoticeBox>\n        </div>\n    </CenteredContent>;\n\nNotSupportedNotice.propTypes = {\n  message: PropTypes.string\n};\nexport default NotSupportedNotice;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport classes from './styles/PrintInfo.module.css';\n\nconst PrintInfo = ({\n  isLayout\n}) => {\n  const layoutStyle = isLayout ? i18n.t('dashboard layout') : i18n.t('one item per page');\n  return <div className={classes.container}>\n            <p className={classes.title}>\n                {`${i18n.t('Print Preview')}: ${layoutStyle}`}\n            </p>\n            <div className={classes.printSuggestions}>\n                <p>{`${i18n.t('For best print results')}:`}</p>\n                <ul>\n                    <li>{i18n.t('Use Chrome or Edge web browser')}</li>\n                    <li>\n                        {i18n.t('Wait for all dashboard items to load before printing')}\n                    </li>\n                    <li>\n                        {i18n.t('Use A4 landscape paper size and default margin settings in the browser print dialog')}\n                    </li>\n                </ul>\n            </div>\n            <hr className={classes.divider} />\n        </div>;\n};\n\nPrintInfo.propTypes = {\n  isLayout: PropTypes.bool\n};\nexport default PrintInfo;","import React from 'react';\nimport { colors } from '@dhis2/ui';\n\nconst LessHorizontalIcon = () => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill={colors.grey600} viewBox=\"0 0 24 24\">\n        <path d=\"m13.2928932 6.29289322c.3905243-.39052429 1.0236893-.39052429 1.4142136 0 .3604839.36048396.3882135.92771502.0831886 1.32000622l-.0831886.09420734-4.2921068 4.29289322 4.2921068 4.2928932c.3604839.360484.3882135.927715.0831886 1.3200062l-.0831886.0942074c-.360484.3604839-.927715.3882135-1.3200062.0831886l-.0942074-.0831886-4.99999998-5c-.36048396-.360484-.3882135-.927715-.08318861-1.3200062l.08318861-.0942074z\" />\n    </svg>;\n\nexport default LessHorizontalIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Button } from '@dhis2/ui';\nimport { Link } from 'react-router-dom';\nimport LessHorizontalIcon from '../../icons/LessHorizontal';\nimport { useWindowDimensions } from '../WindowDimensionsProvider';\nimport isSmallScreen from '../../modules/isSmallScreen';\nimport classes from './styles/PrintActionsBar.module.css'; // set in PrintActionsBar.module.css\n\nexport const PRINT_ACTIONS_BAR_HEIGHT = 44;\nexport const PRINT_ACTIONS_BAR_HEIGHT_SM = 36;\n\nconst PrintActionsBar = ({\n  id\n}) => {\n  const {\n    width\n  } = useWindowDimensions();\n  const isSmall = isSmallScreen(width);\n  return <>\n            <div className={classes.container}>\n                <div className={classes.inner}>\n                    <Link className={classes.link} to={`/${id}`}>\n                        <Button small={isSmall}>\n                            <LessHorizontalIcon />\n                            {i18n.t('Exit print preview')}\n                        </Button>\n                    </Link>\n                    <Button small={isSmall} onClick={window.print}>\n                        {i18n.t('Print')}\n                    </Button>\n                </div>\n            </div>\n            <div className={classes.topMargin} />\n        </>;\n};\n\nPrintActionsBar.propTypes = {\n  id: PropTypes.string\n};\nexport default PrintActionsBar;","import sortBy from 'lodash/sortBy';\nimport { orArray } from './util';\nimport { itemTypeMap } from './itemTypes';\nexport const getTransformYPx = elStyle => {\n  if (!elStyle || !elStyle.transform) {\n    return null;\n  } // find valid transforms - those with y pixels\n  // the code is expecting the transform prop to\n  // look like:  translate(10px, 300px)\n\n\n  const transformY = elStyle.transform.split(' ')[1]?.match(/(\\d+)px/);\n\n  if (transformY) {\n    return parseInt(transformY[1]);\n  } else {\n    return null;\n  }\n};\nexport const getDomGridItemsSortedByYPos = elements => {\n  const types = Object.keys(itemTypeMap);\n  const elementsWithBoundingRect = orArray(elements).map(el => {\n    const type = Array.from(el.classList).find(className => types.indexOf(className) > -1);\n    const rect = el.getBoundingClientRect();\n    const y = getTransformYPx(el.style) || parseInt(rect.y);\n    return {\n      type,\n      classList: el.classList,\n      bottomY: y + parseInt(rect.height),\n      el\n    };\n  });\n  return sortBy(elementsWithBoundingRect, ['bottomY']);\n};\n\nconst isLeapPage = n => {\n  // pages 5,9,13,17,21,25,29... are leap pages\n  let x = 0;\n  const startPage = 1;\n\n  const getMultiple = factor => startPage + 4 * factor;\n\n  let multiple = getMultiple(0);\n  let isLeapPage = false;\n\n  while (multiple < n) {\n    multiple = getMultiple(x);\n    ++x;\n\n    if (multiple === n) {\n      isLeapPage = true;\n      break;\n    }\n  }\n\n  return isLeapPage;\n};\n\nexport const getPageBreakPositions = items => {\n  // add enough page breaks so that each item could\n  // be put on its own page. Due to the react-grid-layout\n  // unit system, we have to estimate roughly the size of each\n  // page. At regular intervals add a unit, like a leap year\n  const yPosList = [];\n  let yPos = 0;\n\n  for (let pageNum = 1; pageNum <= items.length; ++pageNum) {\n    if (pageNum === 1) {\n      yPos += 35;\n    } else if (isLeapPage(pageNum)) {\n      yPos += 40;\n    } else {\n      yPos += 39;\n    }\n\n    yPosList.push(yPos);\n  }\n\n  return yPosList;\n};","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport sortBy from 'lodash/sortBy';\nimport ReactGridLayout from 'react-grid-layout';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport cx from 'classnames';\nimport { Item } from '../Item/Item';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport { acUpdatePrintDashboardLayout } from '../../actions/printDashboard';\nimport { sGetSelectedIsLoading } from '../../reducers/selected';\nimport { sGetPrintDashboardRoot, sGetPrintDashboardItems } from '../../reducers/printDashboard';\nimport { sGetIsEditing } from '../../reducers/editDashboard';\nimport { GRID_ROW_HEIGHT, GRID_COMPACT_TYPE, MARGIN, GRID_COLUMNS, hasShape, A4_LANDSCAPE_WIDTH_PX } from './gridUtil';\nimport { getDomGridItemsSortedByYPos, getTransformYPx } from '../../modules/printUtils';\nimport { PRINT_LAYOUT } from '../Dashboard/dashboardModes';\nimport { PAGEBREAK } from '../../modules/itemTypes';\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\nimport './styles/ItemGrid.css';\nexport class PrintLayoutItemGrid extends Component {\n  onLayoutChange = newLayout => {\n    this.props.updateDashboardLayout(newLayout);\n  };\n  isFirstPageBreak = item => {\n    if (item.type !== PAGEBREAK) {\n      return false;\n    }\n\n    const pageBreaks = this.props.dashboardItems.filter(i => i.type === PAGEBREAK);\n    const sortedPageBreaks = sortBy(pageBreaks, ['y']);\n    return item.y === sortedPageBreaks[0].y;\n  };\n  getItemComponent = item => {\n    // the first-page-break class is used in Edit print preview\n    const itemClassNames = cx('print', 'layout', `${item.type}`, {\n      'first-page-break': this.props.isEditing && this.isFirstPageBreak(item),\n      shortened: !!item.shortened\n    });\n    return <div key={item.i} className={itemClassNames}>\n                <Item item={item} dashboardMode={PRINT_LAYOUT} />\n            </div>;\n  };\n  getItemComponents = items => items.map(item => this.getItemComponent(item));\n\n  hideExtraPageBreaks() {\n    const sortedElements = getDomGridItemsSortedByYPos(Array.from(document.querySelectorAll('.react-grid-item')));\n    let pageBreakBottom = 0;\n    let lastItemBottom = 0;\n    let foundNonPageBreak = false;\n\n    for (let i = sortedElements.length - 1; i >= 0; --i) {\n      const item = sortedElements[i];\n\n      if (item.type === PAGEBREAK) {\n        if (!foundNonPageBreak) {\n          item.el.classList.add('removed');\n        } else {\n          pageBreakBottom = item.bottomY;\n          break;\n        }\n      } else {\n        foundNonPageBreak = true;\n        const thisItemBottom = item.bottomY;\n\n        if (thisItemBottom > lastItemBottom) {\n          lastItemBottom = thisItemBottom;\n        }\n      }\n    }\n\n    const pageHeight = 720;\n    const gridElement = document.querySelector('.react-grid-layout'); // the last page break is before the last item(s) so\n    // maxHeight is one page beyond the last page break\n\n    const maxHeight = pageBreakBottom + pageHeight;\n\n    if (gridElement) {\n      gridElement.style.height = `${maxHeight}px`;\n    }\n\n    if (this.props.isEditing) {\n      //scroll to below the title page - which is middle of the first pagebreak\n      const firstBreak = document.querySelector('.first-page-break');\n\n      if (firstBreak && firstBreak.style && firstBreak.style.transform) {\n        const yPos = getTransformYPx(firstBreak.style);\n        const scrollArea = document.querySelector('.scroll-area');\n        scrollArea && scrollArea.scroll(0, yPos + 50);\n      }\n    }\n  }\n\n  componentDidMount() {\n    this.hideExtraPageBreaks();\n  }\n\n  componentDidUpdate() {\n    this.hideExtraPageBreaks();\n  }\n\n  render() {\n    const {\n      isLoading,\n      dashboardItems\n    } = this.props;\n\n    if (!isLoading && !dashboardItems.length) {\n      return <NoContentMessage text={i18n.t('There are no items on this dashboard')} />;\n    }\n\n    return <div className=\"grid-wrapper\">\n                {isLoading ? <Layer translucent>\n                        <CenteredContent>\n                            <CircularLoader />\n                        </CenteredContent>\n                    </Layer> : null}\n                <ReactGridLayout onLayoutChange={this.onLayoutChange} className=\"layout\" layout={dashboardItems} margin={MARGIN} cols={GRID_COLUMNS} rowHeight={GRID_ROW_HEIGHT} width={A4_LANDSCAPE_WIDTH_PX} compactType={GRID_COMPACT_TYPE} isDraggable={false} isResizable={false} draggableCancel=\"input,textarea\">\n                    {this.getItemComponents(dashboardItems)}\n                </ReactGridLayout>\n            </div>;\n  }\n\n}\nPrintLayoutItemGrid.propTypes = {\n  dashboardItems: PropTypes.array,\n  isEditing: PropTypes.bool,\n  isLoading: PropTypes.bool,\n  updateDashboardLayout: PropTypes.func\n};\nPrintLayoutItemGrid.defaultProps = {\n  dashboardItems: []\n};\n\nconst mapStateToProps = state => {\n  const selectedDashboard = sGetPrintDashboardRoot(state);\n  return {\n    isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n    dashboardItems: sGetPrintDashboardItems(state).filter(hasShape),\n    isEditing: sGetIsEditing(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  updateDashboardLayout: acUpdatePrintDashboardLayout\n})(PrintLayoutItemGrid);","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { spacers } from '@dhis2/ui';\nimport cx from 'classnames';\nimport PrintInfo from './PrintInfo';\nimport PrintActionsBar, { PRINT_ACTIONS_BAR_HEIGHT, PRINT_ACTIONS_BAR_HEIGHT_SM } from './PrintActionsBar';\nimport PrintLayoutItemGrid from '../ItemGrid/PrintLayoutItemGrid';\nimport { acSetPrintDashboard, acAddPrintDashboardItem, acUpdatePrintDashboardItem } from '../../actions/printDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { sGetEditDashboardRoot, sGetEditDashboardItems } from '../../reducers/editDashboard';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport { PAGEBREAK, PRINT_TITLE_PAGE } from '../../modules/itemTypes';\nimport { MAX_ITEM_GRID_HEIGHT } from '../ItemGrid/gridUtil';\nimport { getControlBarHeight, HEADERBAR_HEIGHT } from '../ControlBar/controlBarDimensions';\nimport { DRAG_HANDLE_HEIGHT } from '../ControlBar/ControlBar';\nimport { useWindowDimensions } from '../WindowDimensionsProvider';\nimport isSmallScreen from '../../modules/isSmallScreen';\nimport { getPageBreakPositions } from '../../modules/printUtils';\nimport classes from './styles/PrintLayoutDashboard.module.css';\nimport './styles/print.css';\nimport './styles/print-layout.css';\nconst EDIT_BAR_HEIGHT = getControlBarHeight(1) + DRAG_HANDLE_HEIGHT;\n\nconst addPageBreaks = (items, addDashboardItem) => {\n  const yPosList = getPageBreakPositions(items);\n\n  for (let i = 0; i < items.length; ++i) {\n    addDashboardItem({\n      type: PAGEBREAK,\n      yPos: yPosList[i]\n    });\n  }\n};\n\nconst PrintLayoutDashboard = ({\n  dashboard,\n  items,\n  setPrintDashboard,\n  addDashboardItem,\n  updateDashboardItem,\n  fromEdit\n}) => {\n  const {\n    width,\n    height\n  } = useWindowDimensions();\n  const actionBarHeight = isSmallScreen(width) ? PRINT_ACTIONS_BAR_HEIGHT_SM : PRINT_ACTIONS_BAR_HEIGHT;\n  useEffect(() => {\n    if (dashboard) {\n      setPrintDashboard(dashboard, items); // If any items are taller than one page, reduce it to one\n      // page (react-grid-layout units)\n\n      items.forEach(item => {\n        if (item.h > MAX_ITEM_GRID_HEIGHT) {\n          item.shortened = true;\n          updateDashboardItem(Object.assign({}, item, {\n            h: MAX_ITEM_GRID_HEIGHT\n          }));\n        }\n      });\n      addPageBreaks(items, addDashboardItem);\n      addDashboardItem({\n        type: PRINT_TITLE_PAGE,\n        isOneItemPerPage: false\n      });\n    }\n  }, [dashboard, items]);\n\n  const getWrapperStyle = () => {\n    return fromEdit ? {\n      paddingTop: spacers.dp24,\n      height: height - EDIT_BAR_HEIGHT - HEADERBAR_HEIGHT\n    } : {\n      height: height - actionBarHeight\n    };\n  };\n\n  return <>\n            {!fromEdit && <PrintActionsBar id={dashboard.id} />}\n            <div className={cx(classes.wrapper, 'scroll-area')} style={getWrapperStyle()}>\n                {!fromEdit && <PrintInfo isLayout={true} />}\n                <div className={classes.pageOuter} data-test=\"print-layout-page\">\n                    <PrintLayoutItemGrid />\n                </div>\n            </div>\n        </>;\n};\n\nPrintLayoutDashboard.propTypes = {\n  addDashboardItem: PropTypes.func,\n  dashboard: PropTypes.object,\n  fromEdit: PropTypes.bool,\n  items: PropTypes.array,\n  setPrintDashboard: PropTypes.func,\n  updateDashboardItem: PropTypes.func\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const id = sGetSelectedId(state);\n\n  if (ownProps.fromEdit) {\n    const dashboard = sGetEditDashboardRoot(state);\n    return {\n      dashboard,\n      id,\n      items: sGetEditDashboardItems(state)\n    };\n  }\n\n  const dashboard = id ? sGetDashboardById(state, id) : null;\n  return {\n    dashboard,\n    id,\n    items: sGetDashboardItems(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setPrintDashboard: acSetPrintDashboard,\n  addDashboardItem: acAddPrintDashboardItem,\n  updateDashboardItem: acUpdatePrintDashboardItem\n})(PrintLayoutDashboard);","export const SET_WINDOW_HEIGHT = 'SET_WINDOW_HEIGHT';\nexport const DEFAULT_STATE_WINDOW_HEIGHT = window.innerHeight;\nexport default ((state = DEFAULT_STATE_WINDOW_HEIGHT, action) => {\n  switch (action.type) {\n    case SET_WINDOW_HEIGHT:\n      {\n        return action.value;\n      }\n\n    default:\n      return state;\n  }\n});\nexport const sGetWindowHeight = state => state.windowHeight;","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport EditTitleBar from '../TitleBar/EditTitleBar';\nimport EditItemGrid from '../ItemGrid/EditItemGrid';\nimport EditBar from '../ControlBar/EditBar';\nimport NotSupportedNotice from './NotSupportedNotice';\nimport { useWindowDimensions } from '../WindowDimensionsProvider';\nimport LayoutPrintPreview from './PrintLayoutDashboard';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport { acSetEditDashboard } from '../../actions/editDashboard';\nimport { sGetWindowHeight } from '../../reducers/windowHeight';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport { sGetIsPrintPreviewView } from '../../reducers/editDashboard';\nimport { getControlBarHeight, HEADERBAR_HEIGHT } from '../ControlBar/controlBarDimensions';\nimport isSmallScreen from '../../modules/isSmallScreen';\n\nconst EditDashboard = props => {\n  const {\n    width\n  } = useWindowDimensions();\n  useEffect(() => {\n    if (props.dashboard) {\n      props.setEditDashboard(props.dashboard, props.items);\n    }\n  }, [props.dashboard]);\n\n  const renderGrid = () => {\n    if (props.isPrintPreviewView) {\n      return <LayoutPrintPreview fromEdit={true} />;\n    }\n\n    const height = props.windowHeight - HEADERBAR_HEIGHT - getControlBarHeight(1);\n    return <div className=\"dashboard-wrapper\" style={{\n      height\n    }}>\n                <EditTitleBar />\n                <EditItemGrid />\n            </div>;\n  };\n\n  const renderEditView = () => <>\n            <EditBar />\n            {props.updateAccess ? renderGrid() : <NoContentMessage text={i18n.t('No access')} />}\n        </>;\n\n  return <>\n            {isSmallScreen(width) ? <NotSupportedNotice message={i18n.t('Editing dashboards on small screens is not supported.')} /> : renderEditView()}\n        </>;\n};\n\nEditDashboard.propTypes = {\n  dashboard: PropTypes.object,\n  isPrintPreviewView: PropTypes.bool,\n  items: PropTypes.array,\n  setEditDashboard: PropTypes.func,\n  updateAccess: PropTypes.bool,\n  windowHeight: PropTypes.number\n};\n\nconst mapStateToProps = state => {\n  const id = sGetSelectedId(state);\n  const dashboard = id ? sGetDashboardById(state, id) : null;\n  const updateAccess = dashboard && dashboard.access ? dashboard.access.update : false;\n  return {\n    dashboard,\n    updateAccess,\n    items: sGetDashboardItems(state),\n    isPrintPreviewView: sGetIsPrintPreviewView(state),\n    windowHeight: sGetWindowHeight(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setEditDashboard: acSetEditDashboard\n})(EditDashboard);","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport EditBar from '../ControlBar/EditBar';\nimport EditTitleBar from '../TitleBar/EditTitleBar';\nimport EditItemGrid from '../ItemGrid/EditItemGrid';\nimport LayoutPrintPreview from './PrintLayoutDashboard';\nimport NotSupportedNotice from './NotSupportedNotice';\nimport { acSetEditNewDashboard } from '../../actions/editDashboard';\nimport { sGetIsPrintPreviewView } from '../../reducers/editDashboard';\nimport { sGetWindowHeight } from '../../reducers/windowHeight';\nimport { getControlBarHeight, HEADERBAR_HEIGHT } from '../ControlBar/controlBarDimensions';\nimport { useWindowDimensions } from '../WindowDimensionsProvider';\nimport isSmallScreen from '../../modules/isSmallScreen';\n\nconst NewDashboard = props => {\n  const {\n    width\n  } = useWindowDimensions();\n  useEffect(() => {\n    props.setNewDashboard();\n  }, []);\n  const height = props.windowHeight - HEADERBAR_HEIGHT - getControlBarHeight(1);\n\n  const renderNewView = () => <>\n            <EditBar />\n            {props.isPrintPreviewView ? <LayoutPrintPreview fromEdit={true} /> : <div className=\"dashboard-wrapper\" style={{\n      height\n    }}>\n                    <EditTitleBar />\n                    <EditItemGrid />\n                </div>}\n        </>;\n\n  return <>\n            {isSmallScreen(width) ? <NotSupportedNotice message={i18n.t('Creating dashboards on small screens is not supported.')} /> : renderNewView()}\n        </>;\n};\n\nNewDashboard.propTypes = {\n  isPrintPreviewView: PropTypes.bool,\n  setNewDashboard: PropTypes.func,\n  windowHeight: PropTypes.number\n};\n\nconst mapStateToProps = state => ({\n  isPrintPreviewView: sGetIsPrintPreviewView(state),\n  windowHeight: sGetWindowHeight(state)\n});\n\nexport default connect(mapStateToProps, {\n  setNewDashboard: acSetEditNewDashboard\n})(NewDashboard);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ReactGridLayout from 'react-grid-layout';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport cx from 'classnames';\nimport { Item } from '../Item/Item';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport { PRINT } from '../Dashboard/dashboardModes';\nimport { sGetSelectedIsLoading } from '../../reducers/selected';\nimport { sGetPrintDashboardRoot, sGetPrintDashboardItems } from '../../reducers/printDashboard';\nimport { GRID_ROW_HEIGHT, GRID_COMPACT_TYPE, MARGIN, GRID_COLUMNS, hasShape, A4_LANDSCAPE_WIDTH_PX } from './gridUtil';\nimport { orArray } from '../../modules/util';\nimport 'react-grid-layout/css/styles.css';\nimport './styles/ItemGrid.css';\nexport class PrintItemGrid extends Component {\n  getItemComponent = item => <div key={item.i} className={cx(item.type, 'print', 'oipp')}>\n            <Item item={item} dashboardMode={PRINT} />\n        </div>;\n  getItemComponents = items => items.map(item => this.getItemComponent(item));\n\n  render() {\n    const {\n      isLoading,\n      dashboardItems\n    } = this.props;\n\n    if (!isLoading && !dashboardItems.length) {\n      return <NoContentMessage text={i18n.t('There are no items on this dashboard')} />;\n    }\n\n    return <>\n                {isLoading ? <Layer translucent>\n                        <CenteredContent>\n                            <CircularLoader />\n                        </CenteredContent>\n                    </Layer> : null}\n                <ReactGridLayout className=\"layout print\" layout={dashboardItems} margin={MARGIN} cols={GRID_COLUMNS} rowHeight={GRID_ROW_HEIGHT} width={A4_LANDSCAPE_WIDTH_PX} compactType={GRID_COMPACT_TYPE} isDraggable={false} isResizable={false} draggableCancel=\"input,textarea\">\n                    {this.getItemComponents(dashboardItems)}\n                </ReactGridLayout>\n            </>;\n  }\n\n}\nPrintItemGrid.propTypes = {\n  dashboardItems: PropTypes.array,\n  isLoading: PropTypes.bool\n};\nPrintItemGrid.defaultProps = {\n  dashboardItems: []\n};\n\nconst mapStateToProps = state => {\n  const selectedDashboard = sGetPrintDashboardRoot(state);\n  return {\n    isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n    dashboardItems: orArray(sGetPrintDashboardItems(state)).filter(hasShape)\n  };\n};\n\nexport default connect(mapStateToProps)(PrintItemGrid);","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport sortBy from 'lodash/sortBy';\nimport PrintInfo from './PrintInfo';\nimport PrintActionsBar, { PRINT_ACTIONS_BAR_HEIGHT, PRINT_ACTIONS_BAR_HEIGHT_SM } from './PrintActionsBar';\nimport PrintItemGrid from '../ItemGrid/PrintItemGrid';\nimport { acSetPrintDashboard, acAddPrintDashboardItem, acRemovePrintDashboardItem, acUpdatePrintDashboardItem } from '../../actions/printDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport { PAGEBREAK, PRINT_TITLE_PAGE, SPACER } from '../../modules/itemTypes';\nimport { MAX_ITEM_GRID_HEIGHT_OIPP, MAX_ITEM_GRID_WIDTH_OIPP } from '../ItemGrid/gridUtil';\nimport { useWindowDimensions } from '../WindowDimensionsProvider';\nimport isSmallScreen from '../../modules/isSmallScreen';\nimport classes from './styles/PrintDashboard.module.css';\nimport './styles/print.css';\nimport './styles/print-oipp.css';\n\nconst PrintDashboard = ({\n  dashboard,\n  items,\n  setPrintDashboard,\n  addDashboardItem,\n  updateDashboardItem,\n  removeDashboardItem\n}) => {\n  useEffect(() => {\n    if (dashboard) {\n      //sort the items by Y pos so they print in order of top to bottom\n      const sortedItems = sortBy(items, ['y', 'x']);\n      setPrintDashboard(dashboard, sortedItems); // remove spacers - don't want empty pages\n\n      let spacerCount = 0;\n      items.forEach(item => {\n        if (item.type === SPACER) {\n          spacerCount += 1;\n          removeDashboardItem(item.id);\n        }\n      }); // Resize the items to the full page size\n\n      items.forEach(item => {\n        updateDashboardItem(Object.assign({}, item, {\n          w: MAX_ITEM_GRID_WIDTH_OIPP,\n          h: MAX_ITEM_GRID_HEIGHT_OIPP\n        }));\n      }); // insert page breaks into the document flow to create the \"pages\"\n      // when previewing the print\n\n      for (let i = 0; i < (items.length - spacerCount) * 2; i += 2) {\n        addDashboardItem({\n          type: PAGEBREAK,\n          position: i,\n          isStatic: false\n        });\n      }\n\n      addDashboardItem({\n        type: PRINT_TITLE_PAGE,\n        isOneItemPerPage: true\n      });\n    }\n  }, [dashboard, items]);\n  const {\n    width,\n    height\n  } = useWindowDimensions();\n  const availableHeight = height - (isSmallScreen(width) ? PRINT_ACTIONS_BAR_HEIGHT_SM : PRINT_ACTIONS_BAR_HEIGHT);\n  return <>\n            <PrintActionsBar id={dashboard.id} />\n            <div className={classes.wrapper} style={{\n      height: availableHeight\n    }}>\n                <PrintInfo isLayout={false} />\n                <div className={classes.pageOuter} data-test=\"print-oipp-page\">\n                    <PrintItemGrid />\n                </div>\n            </div>\n        </>;\n};\n\nPrintDashboard.propTypes = {\n  addDashboardItem: PropTypes.func,\n  dashboard: PropTypes.object,\n  items: PropTypes.array,\n  removeDashboardItem: PropTypes.func,\n  setPrintDashboard: PropTypes.func,\n  updateDashboardItem: PropTypes.func\n};\n\nconst mapStateToProps = state => {\n  const id = sGetSelectedId(state);\n  const dashboard = id ? sGetDashboardById(state, id) : null;\n  return {\n    dashboard,\n    id,\n    items: sGetDashboardItems(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setPrintDashboard: acSetPrintDashboard,\n  addDashboardItem: acAddPrintDashboardItem,\n  removeDashboardItem: acRemovePrintDashboardItem,\n  updateDashboardItem: acUpdatePrintDashboardItem\n})(PrintDashboard);","import { SET_WINDOW_HEIGHT } from '../reducers/windowHeight';\nexport const acSetWindowHeight = value => ({\n  type: SET_WINDOW_HEIGHT,\n  value\n});","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport isEmpty from 'lodash/isEmpty';\nimport i18n from '@dhis2/d2-i18n';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport debounce from 'lodash/debounce';\nimport DashboardsBar from '../ControlBar/DashboardsBar';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport ViewDashboard from './ViewDashboard';\nimport EditDashboard from './EditDashboard';\nimport NewDashboard from './NewDashboard';\nimport PrintDashboard from './PrintDashboard';\nimport PrintLayoutDashboard from './PrintLayoutDashboard';\nimport { tSelectDashboard } from '../../actions/dashboards';\nimport { acSetWindowHeight } from '../../actions/windowHeight';\nimport { sDashboardsIsFetching, sGetAllDashboards } from '../../reducers/dashboards';\nimport { sGetSelectedId, NON_EXISTING_DASHBOARD_ID } from '../../reducers/selected';\nimport { EDIT, NEW, VIEW, PRINT, PRINT_LAYOUT, isPrintMode } from './dashboardModes';\n\nconst setHeaderbarVisibility = mode => {\n  const header = document.getElementsByTagName('header')[0];\n\n  if (isPrintMode(mode)) {\n    header.classList.add('hidden');\n  } else {\n    header.classList.remove('hidden');\n  }\n};\n\nconst dashboardMap = {\n  [VIEW]: <ViewDashboard />,\n  [EDIT]: <EditDashboard />,\n  [NEW]: <NewDashboard />,\n  [PRINT]: <PrintDashboard />,\n  [PRINT_LAYOUT]: <PrintLayoutDashboard />\n};\nexport const Dashboard = ({\n  id,\n  mode,\n  dashboardsLoaded,\n  dashboardsIsEmpty,\n  routeId,\n  selectDashboard,\n  setWindowHeight\n}) => {\n  useEffect(() => {\n    setHeaderbarVisibility(mode);\n  }, [mode]);\n  useEffect(() => {\n    if (dashboardsLoaded && !dashboardsIsEmpty) {\n      selectDashboard(routeId);\n    }\n  }, [dashboardsLoaded, dashboardsIsEmpty, routeId]);\n  useEffect(() => {\n    const onResize = debounce(() => setWindowHeight(window.innerHeight), 300);\n    window.addEventListener('resize', onResize);\n    return () => {\n      window.removeEventListener('resize', onResize);\n    };\n  }, []);\n\n  if (!dashboardsLoaded) {\n    return <Layer translucent>\n                <CenteredContent>\n                    <CircularLoader />\n                </CenteredContent>\n            </Layer>;\n  }\n\n  if (mode === NEW) {\n    return dashboardMap[mode];\n  }\n\n  if (dashboardsIsEmpty) {\n    return <>\n                <DashboardsBar />\n                <NoContentMessage text={i18n.t('No dashboards found. Use the + button to create a new dashboard.')} />\n            </>;\n  }\n\n  if (id === NON_EXISTING_DASHBOARD_ID) {\n    return <>\n                <DashboardsBar />\n                <NoContentMessage text={i18n.t('Requested dashboard not found')} />\n            </>;\n  }\n\n  if (id === null) {\n    return <Layer translucent>\n                <CenteredContent>\n                    <CircularLoader />\n                </CenteredContent>\n            </Layer>;\n  }\n\n  return dashboardMap[mode];\n};\nDashboard.propTypes = {\n  dashboardsIsEmpty: PropTypes.bool,\n  dashboardsLoaded: PropTypes.bool,\n  id: PropTypes.string,\n  match: PropTypes.object,\n  // provided by the react-router-dom\n  mode: PropTypes.string,\n  routeId: PropTypes.string,\n  selectDashboard: PropTypes.func,\n  setWindowHeight: PropTypes.func\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const dashboards = sGetAllDashboards(state);\n  return {\n    dashboardsIsEmpty: isEmpty(dashboards),\n    dashboardsLoaded: !sDashboardsIsFetching(state),\n    id: sGetSelectedId(state),\n    routeId: ownProps.match?.params?.dashboardId || null\n  };\n};\n\nexport default connect(mapStateToProps, {\n  selectDashboard: tSelectDashboard,\n  setWindowHeight: acSetWindowHeight\n})(Dashboard);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { AlertBar, AlertStack } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport { sGetAlertMessage } from '../../reducers/alert';\nimport { acClearAlertMessage } from '../../actions/alert';\nexport const Alert = ({\n  message,\n  onClose\n}) => message ? <AlertStack>\n            <AlertBar onHidden={onClose} permanent>\n                {message}\n            </AlertBar>\n        </AlertStack> : null;\nAlert.propTypes = {\n  message: PropTypes.string,\n  onClose: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  message: sGetAlertMessage(state)\n});\n\nexport default connect(mapStateToProps, {\n  onClose: acClearAlertMessage\n})(Alert);","import { RECEIVED_USER } from '../reducers/user';\nexport const acReceivedUser = value => ({\n  type: RECEIVED_USER,\n  value\n});","import { getInstance } from 'd2';\nimport { onError } from './index';\nconst SYSTEM_SETTINGS = ['keyGatherAnalyticalObjectStatisticsInDashboardViews'];\nexport const apiFetchSystemSettings = () => {\n  const endPoint = '/systemSettings';\n  const url = `${endPoint}?${SYSTEM_SETTINGS.map(s => `key=${s}`).join('&')}`;\n  return getInstance().then(d2 => d2.Api.getApi().get(url)).catch(onError);\n};","import React, { useEffect } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { CssVariables } from '@dhis2/ui';\nimport { useD2 } from '@dhis2/app-runtime-adapter-d2';\nimport Dashboard from './Dashboard/Dashboard';\nimport AlertBar from './AlertBar/AlertBar';\nimport { acReceivedUser } from '../actions/user';\nimport { tFetchDashboards } from '../actions/dashboards';\nimport { tSetControlBarRows } from '../actions/controlBar';\nimport { tSetShowDescription } from '../actions/selected';\nimport { tSetDimensions } from '../actions/dimensions';\nimport { tAddSettings } from '../actions/settings';\nimport { EDIT, VIEW, NEW, PRINT, PRINT_LAYOUT } from './Dashboard/dashboardModes';\nimport './App.css';\n\nconst App = props => {\n  const {\n    d2\n  } = useD2({});\n  useEffect(() => {\n    props.setCurrentUser(d2.currentUser);\n    props.fetchDashboards();\n    props.setControlBarRows();\n    props.setShowDescription();\n    props.setDimensions();\n    props.addSettings();\n  }, []);\n  return <>\n            <CssVariables colors spacers />\n            <Router>\n                <Switch>\n                    <Route exact path=\"/\" render={props => <Dashboard {...props} mode={VIEW} />} />\n                    <Route exact path=\"/new\" render={props => <Dashboard {...props} mode={NEW} />} />\n                    <Route exact path=\"/:dashboardId\" render={props => <Dashboard {...props} mode={VIEW} />} />\n                    <Route exact path=\"/:dashboardId/edit\" render={props => <Dashboard {...props} mode={EDIT} />} />\n                    <Route exact path=\"/:dashboardId/printoipp\" render={props => <Dashboard {...props} mode={PRINT} />} />\n                    <Route exact path=\"/:dashboardId/printlayout\" render={props => <Dashboard {...props} mode={PRINT_LAYOUT} />} />\n                </Switch>\n            </Router>\n            <AlertBar />\n        </>;\n};\n\nApp.propTypes = {\n  addSettings: PropTypes.func.isRequired,\n  fetchDashboards: PropTypes.func.isRequired,\n  setControlBarRows: PropTypes.func.isRequired,\n  setCurrentUser: PropTypes.func.isRequired,\n  setDimensions: PropTypes.func.isRequired,\n  setShowDescription: PropTypes.func.isRequired\n};\nconst mapDispatchToProps = {\n  fetchDashboards: tFetchDashboards,\n  setControlBarRows: tSetControlBarRows,\n  setCurrentUser: acReceivedUser,\n  setDimensions: tSetDimensions,\n  setShowDescription: tSetShowDescription,\n  addSettings: tAddSettings\n};\nexport default connect(null, mapDispatchToProps)(App);","import { SET_DIMENSIONS } from '../reducers/dimensions';\nimport { apiFetchDimensions } from '@dhis2/analytics';\nimport { sGetSettingsDisplayNameProperty } from '../reducers/settings';\nexport const acSetDimensions = dimensions => ({\n  type: SET_DIMENSIONS,\n  value: dimensions\n});\nexport const tSetDimensions = () => async (dispatch, getState, dataEngine) => {\n  const onSuccess = dimensions => {\n    dispatch(acSetDimensions(dimensions));\n  };\n\n  const onError = error => {\n    console.log('Error (apiFetchDimensions): ', error);\n    return error;\n  };\n\n  try {\n    const displayNameProp = sGetSettingsDisplayNameProperty(getState());\n    const dimensions = await apiFetchDimensions(dataEngine, displayNameProp); // filter out CATEGORY that are not of type ATTRIBUTE\n\n    const filteredDimensions = dimensions.filter(dim => dim.dimensionType !== 'CATEGORY' || dim.dimensionType === 'CATEGORY' && dim.dataDimensionType === 'ATTRIBUTE');\n    return onSuccess(filteredDimensions);\n  } catch (err) {\n    return onError(err);\n  }\n};","import { ADD_SETTINGS } from '../reducers/settings';\nimport { apiFetchSystemSettings } from '../api/settings';\nexport const acAddSettings = value => ({\n  type: ADD_SETTINGS,\n  value\n});\nexport const tAddSettings = (...extraSettings) => async dispatch => {\n  const onSuccess = fetchedSettings => {\n    dispatch(acAddSettings(Object.assign({}, fetchedSettings, ...extraSettings)));\n  };\n\n  const onError = error => {\n    console.log('Error (apiFetchSystemSettings): ', error);\n    return error;\n  };\n\n  try {\n    const systemSettings = await apiFetchSystemSettings();\n    return onSuccess({ ...systemSettings\n    });\n  } catch (err) {\n    return onError(err);\n  }\n};","/** @module reducers/selected */\nimport { validateReducer } from '../modules/util';\nexport const SET_STYLE = 'SET_STYLE';\nexport const DEFAULT_STATE_STYLE = 'LIST';\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\n\nconst style = (state = DEFAULT_STATE_STYLE, action) => {\n  switch (action.type) {\n    case SET_STYLE:\n      return validateReducer(action.value, DEFAULT_STATE_STYLE);\n\n    default:\n      return state;\n  }\n};\n\nexport default style;\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\n\nexport const sGetStyleRoot = state => state.style;","import { combineReducers } from 'redux';\nimport dashboards from './dashboards';\nimport selected from './selected';\nimport dashboardsFilter from './dashboardsFilter';\nimport controlBar from './controlBar';\nimport visualizations from './visualizations';\nimport editDashboard from './editDashboard';\nimport printDashboard from './printDashboard';\nimport messages from './messages';\nimport user from './user';\nimport alert from './alert';\nimport itemFilters from './itemFilters';\nimport style from './style';\nimport dimensions from './dimensions';\nimport settings from './settings';\nimport activeModalDimension from './activeModalDimension';\nimport windowHeight from './windowHeight';\nexport default combineReducers({\n  dashboards,\n  selected,\n  dashboardsFilter,\n  controlBar,\n  visualizations,\n  messages,\n  user,\n  editDashboard,\n  printDashboard,\n  itemFilters,\n  style,\n  alert,\n  dimensions,\n  settings,\n  activeModalDimension,\n  windowHeight\n});","import { createStore, applyMiddleware, compose } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport reducer from './reducers';\n\nconst configureStore = dataEngine => {\n  const middleware = [thunk.withExtraArgument(dataEngine)]; // Enable Redux devtools if extension is installed instead of redux-logger\n\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n  if (!window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ && process.env.NODE_ENV !== 'production') {\n    middleware.push(createLogger());\n  }\n\n  return createStore(reducer, composeEnhancers(applyMiddleware(...middleware)));\n};\n\nexport default configureStore;","//------------------------------------------------------------------------------\n// <auto-generated>\n// This code was generated by d2-i18n-generate.\n//\n// Changes to this file may cause incorrect behavior and will be lost if\n// the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\nimport i18n from '@dhis2/d2-i18n';\nimport arTranslations from './ar/translations.json';\nimport ar_IQTranslations from './ar_IQ/translations.json';\nimport ckbTranslations from './ckb/translations.json';\nimport csTranslations from './cs/translations.json';\nimport daTranslations from './da/translations.json';\nimport enTranslations from './en/translations.json';\nimport esTranslations from './es/translations.json';\nimport frTranslations from './fr/translations.json';\nimport idTranslations from './id/translations.json';\nimport kmTranslations from './km/translations.json';\nimport loTranslations from './lo/translations.json';\nimport myTranslations from './my/translations.json';\nimport nbTranslations from './nb/translations.json';\nimport prsTranslations from './prs/translations.json';\nimport psTranslations from './ps/translations.json';\nimport ptTranslations from './pt/translations.json';\nimport pt_BRTranslations from './pt_BR/translations.json';\nimport ruTranslations from './ru/translations.json';\nimport svTranslations from './sv/translations.json';\nimport tetTranslations from './tet/translations.json';\nimport tgTranslations from './tg/translations.json';\nimport ukTranslations from './uk/translations.json';\nimport urTranslations from './ur/translations.json';\nimport uzTranslations from './uz/translations.json';\nimport uz_CyrlTranslations from './uz_Cyrl/translations.json';\nimport viTranslations from './vi/translations.json';\nimport zhTranslations from './zh/translations.json';\nimport zh_CNTranslations from './zh_CN/translations.json';\nconst namespace = 'default';\ni18n.addResources('ar', namespace, arTranslations);\ni18n.addResources('ar_IQ', namespace, ar_IQTranslations);\ni18n.addResources('ckb', namespace, ckbTranslations);\ni18n.addResources('cs', namespace, csTranslations);\ni18n.addResources('da', namespace, daTranslations);\ni18n.addResources('en', namespace, enTranslations);\ni18n.addResources('es', namespace, esTranslations);\ni18n.addResources('fr', namespace, frTranslations);\ni18n.addResources('id', namespace, idTranslations);\ni18n.addResources('km', namespace, kmTranslations);\ni18n.addResources('lo', namespace, loTranslations);\ni18n.addResources('my', namespace, myTranslations);\ni18n.addResources('nb', namespace, nbTranslations);\ni18n.addResources('prs', namespace, prsTranslations);\ni18n.addResources('ps', namespace, psTranslations);\ni18n.addResources('pt', namespace, ptTranslations);\ni18n.addResources('pt_BR', namespace, pt_BRTranslations);\ni18n.addResources('ru', namespace, ruTranslations);\ni18n.addResources('sv', namespace, svTranslations);\ni18n.addResources('tet', namespace, tetTranslations);\ni18n.addResources('tg', namespace, tgTranslations);\ni18n.addResources('uk', namespace, ukTranslations);\ni18n.addResources('ur', namespace, urTranslations);\ni18n.addResources('uz', namespace, uzTranslations);\ni18n.addResources('uz_Cyrl', namespace, uz_CyrlTranslations);\ni18n.addResources('vi', namespace, viTranslations);\ni18n.addResources('zh', namespace, zhTranslations);\ni18n.addResources('zh_CN', namespace, zh_CNTranslations);\nexport default i18n;","import React from 'react';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport dhis2theme from '@dhis2/d2-ui-core/theme/mui3.theme';\nimport { Provider as ReduxProvider } from 'react-redux';\nimport { D2Shim } from '@dhis2/app-runtime-adapter-d2';\nimport { useDataEngine } from '@dhis2/app-runtime';\nimport WindowDimensionsProvider from './components/WindowDimensionsProvider';\nimport App from './components/App';\nimport configureStore from './configureStore';\nimport './AppWrapper.css';\nimport './locales';\n\nconst muiTheme = () => createMuiTheme(dhis2theme);\n\nconst d2Config = {\n  schemas: ['chart', 'map', 'report', 'reportTable', 'eventChart', 'eventReport', 'dashboard', 'organisationUnit', 'userGroup']\n}; // TODO: ER and EV plugins require the auth header in development mode.\n// Remove this when these plugins are rewritten\n\nconst authorization = process.env.REACT_APP_DHIS2_AUTHORIZATION || null;\n\nif (authorization) {\n  d2Config.headers = {\n    Authorization: authorization\n  };\n}\n\nconst AppWrapper = () => {\n  const dataEngine = useDataEngine();\n  return <ReduxProvider store={configureStore(dataEngine)}>\n            <MuiThemeProvider theme={muiTheme()}>\n                <D2Shim d2Config={d2Config} i18nRoot=\"./i18n\">\n                    {({\n          d2\n        }) => {\n          if (!d2) {\n            // TODO: Handle errors in d2 initialization\n            return null;\n          }\n\n          return <WindowDimensionsProvider>\n                                <App />\n                            </WindowDimensionsProvider>;\n        }}\n                </D2Shim>\n            </MuiThemeProvider>\n        </ReduxProvider>;\n};\n\nexport default AppWrapper;","import isObject from 'lodash/isObject';\nimport { itemTypeMap } from './itemTypes';\nexport const getVisualizationFromItem = item => {\n  if (!isObject(item)) {\n    return null;\n  }\n\n  const propName = itemTypeMap[item.type]?.propName;\n  return item[propName] || item.reportTable || item.chart || item.map || item.eventReport || item.eventChart || {};\n};\nexport const getVisualizationId = item => getVisualizationFromItem(item).id;\nexport const getVisualizationName = item => getVisualizationFromItem(item).name;","import { REPORT_TABLE, CHART, MAP, EVENT_REPORT, EVENT_CHART, itemTypeMap } from '../../../../modules/itemTypes';\nimport { getVisualizationId } from '../../../../modules/item';\nimport { getGridItemDomId } from '../../../ItemGrid/gridUtil'; //external plugins\n\nconst itemTypeToExternalPlugin = {\n  [MAP]: 'mapPlugin',\n  [EVENT_REPORT]: 'eventReportPlugin',\n  [EVENT_CHART]: 'eventChartPlugin'\n};\n\nconst hasIntegratedPlugin = type => [CHART, REPORT_TABLE].includes(type);\n\nconst getPlugin = type => {\n  if (hasIntegratedPlugin(type)) {\n    return true;\n  }\n\n  const pluginName = itemTypeToExternalPlugin[type];\n  return global[pluginName];\n};\n\nexport const pluginIsAvailable = type => !!getPlugin(type);\nexport const loadPlugin = (plugin, config, credentials) => {\n  if (!(plugin && plugin.load)) {\n    return;\n  }\n\n  plugin.url = credentials.baseUrl;\n  plugin.loadingIndicator = true;\n  plugin.dashboard = true;\n\n  if (credentials.auth) {\n    plugin.auth = credentials.auth;\n  }\n\n  plugin.load(config);\n};\nexport const getLink = (item, baseUrl) => {\n  const appUrl = itemTypeMap[item.type].appUrl(getVisualizationId(item));\n  return `${baseUrl}/${appUrl}`;\n};\nexport const load = async (item, visualization, {\n  credentials,\n  activeType,\n  options = {}\n}) => {\n  const config = { ...visualization,\n    ...options,\n    el: getGridItemDomId(item.id)\n  };\n  const type = activeType || item.type;\n  const plugin = getPlugin(type);\n  loadPlugin(plugin, config, credentials);\n};\nexport const resize = item => {\n  const plugin = getPlugin(item.type);\n\n  if (plugin && plugin.resize) {\n    plugin.resize(getGridItemDomId(item.id));\n  }\n};\nexport const unmount = (item, activeType) => {\n  const plugin = getPlugin(activeType);\n\n  if (plugin && plugin.unmount) {\n    plugin.unmount(getGridItemDomId(item.id));\n  }\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemHeaderWrap\":\"ItemHeader_itemHeaderWrap__JcBP7\",\"itemTitle\":\"ItemHeader_itemTitle__34rHa\",\"itemActionsWrap\":\"ItemHeader_itemActionsWrap__Gx3D9\"};"],"sourceRoot":""}
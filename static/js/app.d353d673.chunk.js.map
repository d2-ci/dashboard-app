{"version":3,"sources":["D2App/components/ItemSelector/styles/CategorizedMenuGroup.module.css","D2App/components/ItemSelector/styles/ItemSelector.module.css","D2App/components/TitleBar/styles/EditTitleBar.module.css","D2App/components/ItemFilter/styles/FilterSelector.module.css","D2App/components/TitleBar/styles/ViewTitleBar.module.css","D2App/components/Item/VisualizationItem/Visualization/styles/NoVisualizationMessage.module.css","D2App/components/Item/VisualizationItem/Visualization/styles/LoadingMask.module.css","D2App/components/Item/VisualizationItem/styles/FatalErrorBoundary.module.css","D2App/components/Item/ItemHeader/styles/DeleteItemButton.module.css","D2App/components/Item/ItemHeader/styles/PrintItemInfo.module.css","D2App/components/Item/VisualizationItem/styles/ItemFooter.module.css","D2App/components/Item/ListItem/Item.module.css","D2App/components/Item/PrintTitlePageItem/styles/Item.module.css","D2App/components/FilterBar/styles/FilterBar.module.css","D2App/components/ControlBar/styles/ConfirmDeleteDialog.module.css","D2App/components/ControlBar/styles/EditBar.module.css","D2App/components/Dashboard/styles/PrintInfo.module.css","D2App/components/Dashboard/styles/PrintActionsBar.module.css","D2App/components/Dashboard/styles/PrintLayoutDashboard.module.css","D2App/components/Dashboard/styles/PrintDashboard.module.css","D2App/components/WindowDimensionsProvider.js","D2App/components/ControlBar/ControlBar.js","D2App/icons/Star.js","D2App/api/dataStatistics.js","D2App/components/ControlBar/DashboardItemChip.js","D2App/icons/AddCircle.js","D2App/icons/Search.js","D2App/icons/Clear.js","D2App/components/ControlBar/ClearButton.js","D2App/reducers/dashboardsFilter.js","D2App/modules/isSmallScreen.js","D2App/components/ControlBar/Filter.js","D2App/actions/dashboardsFilter.js","D2App/components/ControlBar/assets/icons.js","D2App/components/ControlBar/ShowMoreButton.js","D2App/components/ControlBar/controlBarDimensions.js","D2App/reducers/controlBar.js","D2App/modules/uiBackendItemConverter.js","D2App/reducers/dashboards.js","D2App/reducers/selected.js","D2App/api/userDataStore.js","D2App/api/controlBar.js","D2App/actions/controlBar.js","D2App/components/ControlBar/DashboardsBar.js","D2App/widgets/NoContentMessage.js","D2App/components/ItemSelector/ItemSearchField.js","D2App/components/ItemSelector/HeaderMenuItem.js","D2App/icons/Launch.js","D2App/components/ItemSelector/ContentMenuItem.js","D2App/reducers/editDashboard.js","D2App/api/editDashboard.js","D2App/reducers/user.js","D2App/api/metadata.js","D2App/api/index.js","D2App/api/dashboards.js","D2App/actions/dashboards.js","D2App/reducers/dimensions.js","D2App/reducers/itemFilters.js","D2App/actions/itemFilters.js","D2App/reducers/messages.js","D2App/components/Item/MessagesItem/actions.js","D2App/api/messages.js","D2App/reducers/alert.js","D2App/actions/alert.js","D2App/reducers/visualizations.js","D2App/actions/visualizations.js","D2App/api/description.js","D2App/actions/selected.js","D2App/api/localStorage.js","D2App/actions/editDashboard.js","D2App/components/ItemSelector/selectableItems.js","D2App/components/ItemSelector/CategorizedMenuGroup.js","D2App/components/ItemSelector/actions.js","D2App/components/ItemSelector/SinglesMenuGroup.js","D2App/components/ItemSelector/ItemSelector.js","D2App/components/TitleBar/EditTitleBar.js","D2App/components/Item/VisualizationItem/assets/icons.js","D2App/components/ItemFilter/FilterDialog.js","D2App/reducers/settings.js","D2App/reducers/activeModalDimension.js","D2App/actions/activeModalDimension.js","D2App/components/ItemFilter/FilterSelector.js","D2App/components/TitleBar/ViewTitleBar.js","D2App/components/TitleBar/TitleBar.js","D2App/components/Item/VisualizationItem/Visualization/NoVisualizationMessage.js","D2App/components/Item/VisualizationItem/Visualization/DefaultPlugin.js","D2App/components/Item/VisualizationItem/Visualization/MapPlugin.js","D2App/components/Item/VisualizationItem/Visualization/LoadingMask.js","D2App/components/Item/VisualizationItem/Visualization/getFilteredVisualization.js","D2App/components/Item/VisualizationItem/Visualization/getVisualizationConfig.js","D2App/modules/memoizeOne.js","D2App/components/Item/VisualizationItem/Visualization/Visualization.js","D2App/components/Item/VisualizationItem/FatalErrorBoundary.js","D2App/components/Item/ItemHeader/ViewItemActions.js","D2App/components/Item/ItemHeader/DeleteItemButton.js","D2App/components/Item/ItemHeader/EditItemActions.js","D2App/icons/Info.js","D2App/components/Item/ItemHeader/PrintItemInfo.js","D2App/components/Dashboard/dashboardModes.js","D2App/components/Item/ItemHeader/ItemHeader.js","D2App/components/Item/VisualizationItem/ItemHeaderButtons.js","D2App/components/Item/VisualizationItem/ItemFooter.js","D2App/components/Item/VisualizationItem/Item.js","D2App/widgets/Line.js","D2App/components/Item/MessagesItem/Item.js","D2App/components/Item/NotSupportedItem/Item.js","D2App/icons/Description.js","D2App/icons/Delete.js","D2App/components/Item/ListItem/Item.js","D2App/components/Item/ListItem/actions.js","D2App/reducers/printDashboard.js","D2App/components/Item/TextItem/Item.js","D2App/components/Item/AppItem/Item.js","D2App/components/Item/SpacerItem/Item.js","D2App/components/Item/PageBreakItem/Item.js","D2App/components/Item/PrintTitlePageItem/Item.js","D2App/components/Item/Item.js","D2App/components/Item/ProgressiveLoadingContainer.js","D2App/components/ItemGrid/ItemGrid.js","D2App/components/FilterBar/FilterBadge.js","D2App/components/FilterBar/FilterBar.js","D2App/reducers/windowHeight.js","D2App/actions/printDashboard.js","D2App/components/Dashboard/ViewDashboard.js","D2App/components/ControlBar/ConfirmDeleteDialog.js","D2App/components/ControlBar/EditBar.js","D2App/components/Dashboard/PrintInfo.js","D2App/icons/LessHorizontal.js","D2App/components/Dashboard/PrintActionsBar.js","D2App/modules/printUtils.js","D2App/components/ItemGrid/PrintLayoutItemGrid.js","D2App/components/Dashboard/PrintLayoutDashboard.js","D2App/components/Dashboard/EditDashboard.js","D2App/components/Dashboard/NewDashboard.js","D2App/components/ItemGrid/PrintItemGrid.js","D2App/components/Dashboard/PrintDashboard.js","D2App/actions/windowHeight.js","D2App/components/Dashboard/Dashboard.js","D2App/components/AlertBar/AlertBar.js","D2App/actions/user.js","D2App/actions/dimensions.js","D2App/api/settings.js","D2App/actions/settings.js","D2App/components/App.js","D2App/reducers/style.js","D2App/reducers/index.js","D2App/configureStore.js","D2App/locales/index.js","D2App/AppWrapper.js","D2App/modules/itemTypes.js","D2App/modules/util.js","D2App/components/ItemGrid/gridUtil.js","D2App/modules/item.js","D2App/components/Item/VisualizationItem/Visualization/plugin.js","D2App/components/Item/ItemHeader/styles/ItemHeader.module.css","D2App/components/ControlBar/styles/ControlBar.module.css","D2App/components/ControlBar/styles/DashboardItemChip.module.css","D2App/components/ControlBar/styles/ClearButton.module.css","D2App/components/ControlBar/styles/Filter.module.css","D2App/components/ControlBar/styles/ShowMoreButton.module.css","D2App/components/ControlBar/styles/DashboardsBar.module.css","D2App/components/ItemSelector/styles/HeaderMenuItem.module.css","D2App/components/ItemSelector/styles/ContentMenuItem.module.css"],"names":["module","exports","WindowDimensionsCtx","createContext","windowDims","height","window","innerHeight","width","innerWidth","WindowDimensionsProvider","children","dimensions","setDimensions","useState","useEffect","handleResize","debounce","addEventListener","removeEventListener","Provider","value","useWindowDimensions","useContext","ControlBar","React","Component","constructor","props","super","onStartDrag","this","setState","dragging","onDrag","onEndDrag","event","preventDefault","stopPropagation","newHeight","clientY","onChangeHeight","requestAnimationFrame","renderDragHandle","data-testid","className","classes","draghandle","style","onMouseDown","state","render","Math","max","rootClass","cx","root","content","defaultProps","StarIcon","xmlns","viewBox","d","fill","apiPostDataStatistics","async","eventType","id","d2","getInstance","url","Api","getApi","post","DashboardItemChip","starred","selected","label","dashboardId","onClick","chipProps","selectedState","unselected","icon","Star","debouncedPostStatistics","link","to","data-test","AddCircleIcon","colors","teal600","SearchIcon","ClearIcon","grey800","ClearButton","onClear","button","Clear","color","SET_DASHBOARDS_FILTER","CLEAR_DASHBOARDS_FILTER","sGetDashboardsFilter","dashboardsFilter","isSmallScreen","mapDispatchToProps","setDashboardsFilter","type","clearDashboardsFilter","connect","filterText","isMaxHeight","onKeypressEnter","onToggleMaxHeight","focusedClassName","setFocusedClassName","searchButton","Search","searchIcon","container","onFocus","focused","onBlur","input","placeholder","i18n","t","onChange","target","onKeyUp","keyCode","ChevronDown","ChevronUp","ShowMoreButton","disabled","buttonLabel","placement","showMore","aria-label","getRowsHeight","rows","getControlBarHeight","FIRST_ROW_PADDING_HEIGHT","SET_CONTROLBAR_USER_ROWS","combineReducers","userRows","action","validateReducer","sGetControlBarUserRows","controlBar","sGetControlBarRoot","spacerContent","emptyTextItemContent","isTextType","item","TEXT","text","convertUiItemsToBackend","items","map","SPACER","isUiSpacerType","convertBackendItemsToUi","isBackendSpacerType","gridProperties","getGridItemProperties","SET_DASHBOARDS","ADD_DASHBOARDS","SET_DASHBOARD_STARRED","SET_DASHBOARD_DISPLAY_NAME","SET_DASHBOARD_ITEMS","DEFAULT_STATE_DASHBOARDS","byId","EMPTY_DASHBOARD","updateDashboardProp","prop","sGetDashboardsRoot","dashboards","sGetDashboardById","orObject","sDashboardsIsFetching","sGetAllDashboards","sGetDashboardItems","sGetStarredDashboards","Object","values","filter","dashboard","sGetUnstarredDashboards","getCustomDashboards","data","arrayFrom","name","displayName","description","displayDescription","favorite","owner","user","created","split","join","substr","lastUpdated","access","numberOfItems","orArray","dashboardItems","length","SET_SELECTED_ID","SET_SELECTED_ISLOADING","SET_SELECTED_SHOWDESCRIPTION","SET_SELECTED_ITEM_ACTIVE_TYPE","CLEAR_SELECTED_ITEM_ACTIVE_TYPES","DEFAULT_STATE_SELECTED_SHOWDESCRIPTION","DEFAULT_STATE_SELECTED_ITEM_ACTIVE_TYPES","isLoading","showDescription","itemActiveTypes","activeType","sGetSelectedRoot","sGetSelectedId","sGetSelectedIsLoading","sGetSelectedShowDescription","sGetSelectedItemActiveType","NAMESPACE","hasNamespace","currentUser","dataStore","has","getNamespace","get","create","apiPostUserDataStoreValue","key","set","apiGetUserDataStoreValue","defaultValue","namespace","keys","find","k","console","log","KEY_CONTROLBAR_ROWS","acSetControlBarUserRows","tSetControlBarRows","controlBarRows","apiGetControlBarRows","dispatch","err","error","withRouter","selectedId","history","setRows","ref","createRef","scrollToTop","current","scroll","toggleMaxHeight","newRows","cancelMaxHeight","getFilteredDashboards","filteredDashboards","arraySort","toLowerCase","includes","containerClass","expanded","collapsed","viewableRows","rowHeightProp","floor","min","apiPostControlBarRows","controls","newLink","AddCircle","Filter","push","chips","chipContainerClasses","chipContainer","getDashboardChips","marginTop","NoContentMessage","padding","textAlign","fontSize","fontWeight","grey600","ItemSearchField","dataTest","HeaderMenuItem","title","dense","LaunchIcon","LaunchLink","e","launchLink","rel","href","Launch","InsertButton","buttonInsert","ContentMenuItem","onInsert","visType","ItemIcon","getItemIcon","renderedItemIcon","VISUALIZATION","visTypeIcons","menuItem","marginRight","RECEIVED_EDIT_DASHBOARD","RECEIVED_NOT_EDITING","START_NEW_DASHBOARD","RECEIVED_TITLE","RECEIVED_DESCRIPTION","ADD_DASHBOARD_ITEM","REMOVE_DASHBOARD_ITEM","UPDATE_DASHBOARD_ITEM","RECEIVED_DASHBOARD_LAYOUT","SET_PRINT_PREVIEW_VIEW","CLEAR_PRINT_PREVIEW_VIEW","DEFAULT_STATE_EDIT_DASHBOARD","NEW_DASHBOARD_STATE","printPreviewView","sGetEditDashboardRoot","editDashboard","sGetIsEditing","isEmpty","sGetIsPrintPreviewView","sGetEditDashboardItems","onError","saveDashboard","assign","w","h","save","then","msg","response","uid","RECEIVED_USER","DEFAULT_STATE_USER","username","uiLocale","isSuperuser","sGetUserUsername","getIdNameFields","rename","getDimensionFields","withItems","arrayClean","getAxesFields","getFavoriteFields","withDimensions","withOptions","getFavoritesFields","apiFetchVisualization","getVisualizationId","fields","MAP","getEndPointName","getDashboardItemsFields","withFavorite","getDashboardFields","apiFetchDashboard","models","catch","tFetchDashboards","collection","list","paging","toArray","arrayToIdMap","tStarDashboard","isStarred","onSuccess","acSetDashboardStarred","delete","apiStarDashboard","tDeleteDashboard","apiDeleteDashboard","Promise","resolve","SET_DIMENSIONS","DEFAULT_DIMENSIONS","getDimensionById","DIMENSION_ID_PERIOD","DIMENSION_ID_ORGUNIT","sGetDimensions","CLEAR_ITEM_FILTERS","SET_ITEM_FILTERS","ADD_ITEM_FILTER","REMOVE_ITEM_FILTER","DEFAULT_STATE_ITEM_FILTERS","sGetItemFiltersRoot","itemFilters","sGetNamedItemFilters","createSelector","filters","reduce","arr","dimension","acRemoveItemFilter","RECEIVED_MESSAGES","sGetMessagesRoot","messages","tGetMessages","getMessages","messageConversations","SET_ALERT_MESSAGE","CLEAR_ALERT_MESSAGE","sGetAlertMessage","alert","acClearAlertMessage","ADD_VISUALIZATION","CLEAR_VISUALIZATIONS","DEFAULT_STATE_VISUALIZATIONS","p","undefined","sGetVisualization","visualizations","sGetVisualizationsRoot","acAddVisualization","KEY_SHOW_DESCRIPTION","acSetSelectedId","acSetSelectedIsLoading","acSetSelectedShowDescription","tSetSelectedDashboardById","getState","alertTimeout","setTimeout","customDashboard","withShape","localStorage","setItem","forEach","REPORT_TABLE","CHART","EVENT_REPORT","EVENT_CHART","getVisualizationFromItem","MESSAGES","clearTimeout","tSetShowDescription","apiGetShowDescription","tUpdateShowDescription","apiPostShowDescription","acClearEditDashboard","acAddDashboardItem","itemPropName","itemTypeMap","propName","generateUid","gridItemProperties","shape","PAGEBREAK","yPos","getPageBreakItemShape","isStatic","PRINT_TITLE_PAGE","getPrintTitlePageItemShape","NEW_ITEM_SHAPE","position","acUpdateDashboardItem","acRemoveDashboardItem","tSaveDashboard","dashboardToSave","postDashboard","singleItems","header","categorizedItems","USERS","REPORTS","RESOURCES","APP","listItemTypes","CategorizedMenuGroup","addItem","tAddListItemContent","newItem","toggleSeeMore","seeMore","onChangeItemsLimit","hasMore","itemUrl","getItemUrl","context","showMoreButton","margin","contextTypes","PropTypes","object","isRequired","listItemType","dashboardItemIndex","findIndex","dashboardItem","category","addToDashboard","ItemSelector","isOpen","setIsOpen","setFilter","setItems","maxOptions","setMaxOptions","Set","queryString","filterStr","updateMaxOptions","options","add","inputRef","reference","onClickOutside","arrow","maxWidth","menu","itemType","endPointName","itemCount","getDefaultItemCount","allItems","displayItems","slice","pluralTitle","concat","EditTitleBar","onChangeTitle","onChangeDescription","section","titleDescription","_","itemSelector","selectedDashboard","ThreeDots","SpeechBubble","fillRule","transform","Warning","FilterDialog","displayNameProperty","initiallySelectedItems","addItemFilter","removeItemFilter","onClose","setFilters","onSelectItems","dimensionId","onDeselectItems","itemIdsToRemove","newList","onReorderItems","itemIds","oldList","reorderedList","large","commonProps","onSelect","onDeselect","onReorder","selectedItems","selectedPeriods","ouItems","renderDialogContent","secondary","primary","filterItems","ADD_SETTINGS","DEFAULT_SETTINGS","keyDateFormat","keyAnalysisRelativePeriod","keyAnalysisDigitGroupSeparator","rootOrganisationUnit","keyGatherAnalyticalObjectStatisticsInDashboardViews","sGetSettings","settings","sGetSettingsDisplayNameProperty","sGatherAnalyticalObjectStatisticsInDashboardViews","SET_ACTIVE_MODAL_DIMENSION","CLEAR_ACTIVE_MODAL_DIMENSION","DEFAULT_STATE_ACTIVE_MODAL_DIMENSION","sGetActiveModalDimension","activeModalDimension","acSetActiveModalDimension","clearActiveModalDimension","setActiveModalDimension","showPopover","setShowPopover","useRef","onCloseDialog","buttonContainer","onDimensionClick","selectedIds","ViewTitleBar","moreOptionsIsOpen","setMoreOptionsIsOpen","sharingDialogIsOpen","setSharingDialogIsOpen","redirectUrl","setRedirectUrl","onToggleStarredDashboard","onShowHideDescription","toggleSharingDialog","toggleMoreOptions","titleStyle","cursor","userSelect","top","StarBorder","showHideDescriptionLabel","toggleStarredDashboardLabel","buttonRef","userAccess","titleBar","actions","titleBarIcon","strip","update","editLink","manage","shareButton","small","marginLeft","paddingTop","paddingBottom","open","onRequestClose","stateProps","dispatchProps","ownProps","black","minWidth","TitleBar","edit","NoVisualizationMessage","message","DefaultPlugin","pluginCredentials","pluginIsAvailable","pluginManager","shouldPluginReload","prevProps","reloadAllowed","filtersChanged","vis","visualization","prevVis","visChanged","reloadPlugin","credentials","componentDidMount","baseUrl","getBaseUrl","auth","defaultHeaders","Authorization","componentDidUpdate","componentWillUnmount","getGridItemDomId","MapPlugin","applyFilters","mapViews","mapView","layer","hideTitle","LoadingMask","center","getFilteredVisualization","visRows","obj","visColumns","columns","visFilters","dimensionFound","dimensionObjects","getWithoutId","getVisualizationConfig","originalType","extractedMapView","mv","VIS_TYPE_COLUMN","VIS_TYPE_PIVOT_TABLE","layout","getAdaptedUiLayoutByType","memoizeOne","fn","lastArgs","lastValue","args","every","arg","i","Visualization","pluginLoaded","onLoadingComplete","memoizedGetFilteredVisualization","memoizedGetVisualizationConfig","availableHeight","pluginProps","forDashboard","FatalErrorBoundary","errorFound","componentDidCatch","info","ViewItemActions","actionButtons","itemActionsWrap","DeleteItemButton","deleteItemButton","red500","itemId","WarningIcon","PrintWarning","warning","Info","EDIT","NEW","VIEW","PRINT","PRINT_LAYOUT","isEditMode","mode","isPrintMode","isViewMode","ItemHeader","forwardRef","dashboardMode","isShortened","rest","Actions","EditItemActions","PrintItemInfo","getItemActionsMap","itemHeaderWrap","itemTitle","iconFill","ItemHeaderButtons","menuIsOpen","setMenuIsOpen","onSelectActiveType","isTrackerType","isTrackerDomainType","onViewTable","closeMenu","onViewChart","onViewMap","canViewAs","isSingleValue","isYearOverYear","VIS_TYPE_GAUGE","VIS_TYPE_PIE","interpretationMenuLabel","activeFooter","ViewAsMenuItems","hasMapView","appName","getAppName","getLink","onToggleFooter","ItemFooter","line","scrollContainer","Item","showFooter","configLoaded","getUniqueKey","uniqueId","onToggleItemExpanded","setActiveType","getActiveType","isEditing","getAvailableHeight","calculatedHeight","originalHeight","headerRef","clientHeight","ITEM_CONTENT_PADDING_BOTTOM","memoizedGetContentHeight","contentRef","offsetHeight","measuredHeight","preferMeasured","updateVisualization","gatherDataStatistics","getDataStatisticsName","getVisualizationName","shortened","Function","prototype","backgroundColor","grey200","border","Line","PRIVATE","messageTypes","VALIDATION_RESULT","TICKET","SYSTEM","listStyleType","paddingLeft","seeAll","marginBottom","sender","lineHeight","snippet","maxHeight","overflow","MessagesItem","getMessageHref","msgIdentifier","messageType","getMessageSender","latestMsg","getMessageItems","modeClass","readClass","read","msgDate","document","location","messageCount","formatDate","userSettings","string","MessagesContainer","NotSupportedItem","display","justifyContent","alignItems","align","DescriptionIcon","grey500","DeleteIcon","getItemTitle","ListItem","tRemoveListItemContent","contentItems","index","array","el","getContentItems","contentItem","deleteButton","deletebutton","deleteicon","grey900","Description","itemicon","newContent","SET_PRINT_DASHBOARD","CLEAR_PRINT_DASHBOARD","ADD_PRINT_DASHBOARD_ITEM","SET_PRINT_DASHBOARD_LAYOUT","REMOVE_PRINT_DASHBOARD_ITEM","UPDATE_PRINT_DASHBOARD_ITEM","DEFAULT_STATE_PRINT_DASHBOARD","DEFAULT_DASHBOARD_ITEMS","NEW_PRINT_DASHBOARD_STATE","sGetPrintDashboardRoot","printDashboard","sGetIsPrinting","sGetPrintDashboardItems","textDiv","whiteSpace","textField","fontStretch","onChangeText","updatedItem","viewItem","textDivStyle","editItem","onEdit","multiline","fullWidth","printItem","textItem","getIframeSrc","appDetails","iframeSrc","launchUrl","ouIds","ouFilter","path","AppItem","appKey","system","installedApps","app","dashboardWidget","src","SpacerItem","PageBreakItem","PrintTitlePageItem","titlePage","filterTitle","listItems","filterListItem","val","filterList","getItemFilterList","viewDashboard","sGetPrintDashboardName","sGetPrintDashboardDescription","GridItem","VisualizationItem","TextItem","getGridItem","ProgressiveLoadingContainer","shouldLoad","containerRef","shouldLoadHandler","handlerOptions","passive","checkShouldLoad","bufferPx","bufferFactor","rect","getBoundingClientRect","bottom","removeHandler","registerHandler","debounceMs","getElementsByClassName","eventProps","pick","ItemGrid","expandedItems","clickedId","isExpanded","onLayoutChange","newLayout","acUpdateDashboardLayout","onResizeStop","oldItem","onItemResize","isVisualizationType","pluginResize","adjustHeightForExpanded","expandedItem","getItemComponent","itemClassNames","getItemComponents","UNSAFE_componentWillReceiveProps","nextProps","translucent","MARGIN","cols","getGridColumns","rowHeight","GRID_ROW_HEIGHT","compactType","GRID_COMPACT_TYPE","isDraggable","isResizable","draggableCancel","validItems","hasShape","styles","badgeContainer","borderRadius","white","badge","badgeRemove","textDecoration","FilterBadge","onRemove","count","FilterBar","onBadgeRemove","onBadgeClick","bar","removeItemFIlter","SET_WINDOW_HEIGHT","DEFAULT_STATE_WINDOW_HEIGHT","sGetWindowHeight","windowHeight","acSetPrintDashboard","acClearPrintDashboard","acAddPrintDashboardItem","isOneItemPerPage","acUpdatePrintDashboardItem","dashboardIsEditing","dashboardIsPrinting","clearEditDashboard","clearPrintDashboard","querySelector","ConfirmDeleteDialog","dashboardName","onDeleteConfirmed","onContinueEditing","destructive","EditBar","translationDialogIsOpen","dashboardModel","confirmDeleteDialogOpen","onConfirmDelete","onSave","newId","onPrintPreview","isPrintPreviewView","clearPrintPreview","showPrintPreview","onDiscard","onDiscardChanges","onDelete","onTranslationsSaved","translations","dbLocale","translation","locale","property","onTranslate","fetchDashboardModel","toggleTranslationDialog","confirmDeleteDialog","deleteAccess","translationDialog","objectToTranslate","fieldsToTranslate","onTranslationSaved","onTranslationError","renderActionButtons","updateAccess","discardBtnText","editBar","sGetIsNewDashboard","acSetDashboardDisplayName","PrintInfo","isLayout","a4LandscapeWidthPx","infoHeader","infoWrapper","infoList","divider","LessHorizontalIcon","PrintActionsBar","inner","LessHorizontal","print","topMargin","getTransformYPx","elStyle","transformY","match","parseInt","PrintLayoutItemGrid","updateDashboardLayout","isFirstPageBreak","pageBreaks","sortedPageBreaks","sortBy","y","hideExtraPageBreaks","sortedElements","elements","types","elementsWithBoundingRect","Array","from","classList","indexOf","bottomY","getDomGridItemsSortedByYPos","querySelectorAll","pageBreakBottom","lastItemBottom","foundNonPageBreak","thisItemBottom","gridElement","firstBreak","scrollArea","EDIT_BAR_HEIGHT","isLeapPage","n","x","getMultiple","factor","multiple","PrintLayoutDashboard","initialized","initPrintLayoutDashboard","setPrintDashboard","MAX_ITEM_GRID_HEIGHT","updateDashboardItem","addDashboardItem","yPosList","pageNum","addPageBreaks","getWrapperStyle","fromEdit","spacers","dp24","wrapper","pageOuter","setEditDashboard","renderGrid","setNewDashboard","PrintItemGrid","PrintDashboard","initPrintDashboard","sortedItems","spacerCount","removeDashboardItem","MAX_ITEM_GRID_WIDTH_OIPP","MAX_ITEM_GRID_HEIGHT_OIPP","dashboardMap","dashboardsIsEmpty","dashboardsLoaded","routeId","params","selectDashboard","dashboardToSelect","preferredId","getItem","dash","sGetDashboardsSortedByStarred","setWindowHeight","getElementsByTagName","remove","setHeaderbarVisibility","onResize","onHidden","permanent","tSetDimensions","acSetDimensions","displayNameProp","apiFetchDimensions","dim","dimensionType","dataDimensionType","SYSTEM_SETTINGS","tAddSettings","extraSettings","fetchedSettings","s","apiFetchSystemSettings","App","setCurrentUser","fetchDashboards","setControlBarRows","setShowDescription","addSettings","getChildContext","exact","AlertBar","childContextTypes","DEFAULT_STATE_STYLE","objectClean","conversations","$merge","d2Object","keyUiLocale","authorities","newState","$splice","$unshift","idToRemove","stateItems","layoutHasChanged","newStateItems","stateItem","si","configureStore","middleware","thunk","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducer","applyMiddleware","addResources","arTranslations","ar_IQTranslations","ckbTranslations","csTranslations","daTranslations","enTranslations","esTranslations","frTranslations","idTranslations","kmTranslations","loTranslations","myTranslations","nbTranslations","prsTranslations","psTranslations","ptTranslations","pt_BRTranslations","ruTranslations","svTranslations","tetTranslations","tgTranslations","ukTranslations","urTranslations","uzTranslations","uz_CyrlTranslations","viTranslations","zhTranslations","zh_CNTranslations","d2Config","schemas","authorization","process","REACT_APP_DHIS2_AUTHORIZATION","headers","AppWrapper","store","theme","createMuiTheme","dhis2theme","i18nRoot","DOMAIN_TYPE_AGGREGATE","DOMAIN_TYPE_TRACKER","domainType","defaultItemCount","appUrl","dataStatisticsName","Date","getTime","TableIcon","ChartIcon","MapIcon","ExtensionIcon","PersonIcon","FontDownloadIcon","EmailIcon","CropFreeIcon","NotInterestedIcon","param","isArray","isObject","global","Intl","DateTimeFormat","year","month","day","format","replace","api","idx","isNonNegativeInteger","Number","isInteger","minH","GRID_COLUMNS","static","itemWithShape","Error","col","row","itemWidth","MAX_ITEM_GRID_WIDTH","itemHeight","getShape","round","getOriginalHeight","isFunction","setViewportSize","clientWidth","reportTable","chart","eventReport","eventChart","itemTypeToExternalPlugin","getPlugin","hasIntegratedPlugin","load","config","plugin","loadingIndicator","loadPlugin","resize","unmount"],"mappings":"kHACAA,EAAOC,QAAU,CAAC,eAAiB,+C,qBCAnCD,EAAOC,QAAU,CAAC,KAAO,6B,qBCAzBD,EAAOC,QAAU,CAAC,QAAU,8BAA8B,iBAAmB,uCAAuC,MAAQ,4BAA4B,YAAc,kCAAkC,aAAe,qC,qBCAvND,EAAOC,QAAU,CAAC,gBAAkB,0C,qBCApCD,EAAOC,QAAU,CAAC,QAAU,8BAA8B,SAAW,+BAA+B,SAAW,+BAA+B,aAAe,mCAAmC,MAAQ,4BAA4B,SAAW,+BAA+B,YAAc,oC,4CCA5RD,EAAOC,QAAU,CAAC,QAAU,0C,qBCA5BD,EAAOC,QAAU,CAAC,OAAS,8B,qBCA3BD,EAAOC,QAAU,CAAC,UAAY,sCAAsC,KAAO,iCAAiC,QAAU,sC,qBCAtHD,EAAOC,QAAU,CAAC,iBAAmB,6C,qBCArCD,EAAOC,QAAU,CAAC,QAAU,iC,qBCA5BD,EAAOC,QAAU,CAAC,KAAO,yBAAyB,gBAAkB,sC,4CCApED,EAAOC,QAAU,CAAC,KAAO,mBAAmB,KAAO,mBAAmB,SAAW,uBAAuB,KAAO,mBAAmB,WAAa,yBAAyB,aAAe,6B,qBCAvLD,EAAOC,QAAU,CAAC,UAAY,wBAAwB,KAAO,mBAAmB,YAAc,0BAA0B,YAAc,0BAA0B,WAAa,yBAAyB,eAAiB,+B,qBCAvND,EAAOC,QAAU,CAAC,IAAM,yB,qBCAxBD,EAAOC,QAAU,CAAC,QAAU,uC,qBCA5BD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,SAAW,4B,qBCAhED,EAAOC,QAAU,CAAC,YAAc,+BAA+B,WAAa,8BAA8B,KAAO,wBAAwB,SAAW,4BAA4B,QAAU,6B,qBCA1LD,EAAOC,QAAU,CAAC,UAAY,mCAAmC,UAAY,mCAAmC,MAAQ,+BAA+B,KAAO,gC,qBCA9JD,EAAOC,QAAU,CAAC,QAAU,sCAAsC,UAAY,0C,4CCA9ED,EAAOC,QAAU,CAAC,QAAU,gCAAgC,UAAY,oC,gqjICEjE,MAAMC,EAAsBC,wBAAc,MAE3CC,EAAa,MACjBC,OAAQC,OAAOC,YACfC,MAAOF,OAAOG,aAwBDC,MArBkB,EAC/BC,eAEA,MAAOC,EAAYC,GAAiBC,mBAASV,KAU7C,OATAW,qBAAU,KACR,MAAMC,EAAeC,KAAS,KAC5BJ,EAAcT,OACb,KAEH,OADAE,OAAOY,iBAAiB,SAAUF,GAC3B,KACLV,OAAOa,oBAAoB,SAAUH,MAEtC,IACI,cAACd,EAAoBkB,SAArB,CAA8BC,MAAOT,EAArC,SACID,KAQN,MAAMW,EAAsB,IAC1BC,qBAAWrB,G,mIC3BpB,MAAMsB,UAAmBC,IAAMC,UAC7BC,YAAYC,GACVC,MAAMD,GADW,KAOnBE,YAAc,KACZC,KAAKC,SAAS,CACZC,UAAU,IAEZ3B,OAAOY,iBAAiB,YAAaa,KAAKG,QAC1C5B,OAAOY,iBAAiB,UAAWa,KAAKI,YAZvB,KAcnBD,OAASE,IACPA,EAAMC,iBACND,EAAME,kBACN,MAAMC,EAAYH,EAAMI,QAEpBT,KAAKH,MAAMa,gBAAkBF,IAAcR,KAAKH,MAAMvB,QAAUkC,EAAY,GAC9EG,uBAAsB,KACpBX,KAAKH,MAAMa,eAAeF,OArBb,KAyBnBJ,UAAY,KACVJ,KAAKC,SAAS,CACZC,UAAU,IAEZ3B,OAAOa,oBAAoB,YAAaY,KAAKG,QAC7C5B,OAAOa,oBAAoB,UAAWY,KAAKI,WAEvCJ,KAAKH,MAAMO,WACbJ,KAAKH,MAAMO,aAjCI,KAoCnBQ,iBAAmB,IAA2C,oBAA9BZ,KAAKH,MAAMa,gBAAiC,qBAAKG,cAAY,yBAAyBC,UAAWC,IAAQC,WAAYC,MAAO,CAC1J3C,OAxC8B,GAyC7B4C,YAAalB,KAAKD,cApCnBC,KAAKmB,MAAQ,CACXjB,UAAU,GAqCdkB,SACE,MAAM9C,EAAS+C,KAAKC,IAAItB,KAAKH,MAAMvB,OAAQ,GA5Cb,EA6CxBiD,EAAYC,IAAGT,IAAQU,KAAMzB,KAAKmB,MAAMjB,UAAYa,IAAQb,UAClE,OAAO,sBAAKe,MAAO,CACjB3C,UACCwC,UAAWS,EAFP,UAGK,qBAAKT,UAAWC,IAAQW,QAAxB,SAAkC1B,KAAKH,MAAMjB,WAC5CoB,KAAKY,uBAiCtBnB,EAAWkC,aAAe,CACxBjB,eAAgB,KAChBN,UAAW,MAEEX,QC7EAmC,MAXE,EACfd,eACI,sBAAKA,UAAWA,EAAWe,MAAM,6BAA6BC,QAAQ,YAAtE,UACE,sBAAMC,EAAE,gBAAgBC,KAAK,SAC7B,sBAAMD,EAAE,6FACR,sBAAMA,EAAE,gBAAgBC,KAAK,Y,SCP9B,MAAMC,EAAwBC,MAAOC,EAAWC,KACrD,MAAMC,QAAWC,wBACXC,EAAG,mCAA+BJ,EAA/B,qBAAqDC,GAC9DC,EAAGG,IAAIC,SAASC,KAAKH,I,sBCuCRI,MAnCkB,EAC/BC,UACAC,WACAC,QACAC,cACAC,cAEA,MAAMC,EAAY,CAChBJ,YAGF,GAAID,EAAS,CACX,MAAMM,EAAgBL,EAAW9B,IAAQ8B,SAAW9B,IAAQoC,WAC5DF,EAAUG,KAAO,cAACC,EAAD,CAAUvC,UAAS,UAAKC,IAAQqC,KAAb,YAAqBF,KAG3D,MAAMI,EAA0BpE,KAAS,IAAM+C,EAAsB,iBAAkBc,IAAc,KAOrG,OAAO,cAAC,IAAD,CAAMjC,UAAWC,IAAQwC,KAAMC,GAAE,WAAMT,GAAeC,QALzC,KAClBM,IACAN,KAGiFS,YAAU,iBAAtF,SACG,cAAC,IAAD,IAAUR,EAAV,SAAsBH,OCzBnBY,MAJO,IAAM,qBAAK7B,MAAM,6BAA6BpD,MAAM,KAAKH,OAAO,KAAK0D,KAAM2B,IAAOC,QAAS9B,QAAQ,YAA7F,SACpB,sBAAMC,EAAE,2MCKD8B,MAPI,EACjB/C,eACI,sBAAKA,UAAWA,EAAWe,MAAM,6BAA6BvD,OAAO,KAAKwD,QAAQ,YAAYrD,MAAM,KAApG,UACE,sBAAMsD,EAAE,gBAAgBC,KAAK,SAC7B,sBAAMD,EAAE,kPCQD+B,MAVG,EAChBhD,eACI,sBAAKA,UAAWA,EAAWkB,KAAM2B,IAAOI,QAASlC,MAAM,6BAA6BC,QAAQ,YAA5F,UACE,sBAAMC,EAAE,0GACR,sBAAMA,EAAE,gBAAgBC,KAAK,Y,kBCMtBgC,MAVY,EACzBC,aACI,wBAAQnD,UAAWC,IAAQmD,OAAQlB,QAASiB,EAA5C,SACE,+BACI,cAACE,EAAD,CAAWrD,UAAWC,IAAQqC,KAAMgB,MAAM,e,SCP/C,MAAMC,EAAwB,wBACxBC,EAA0B,0BAmBhC,MAAMC,EAAuBpD,GAASA,EAAMqD,iBCjBpCC,MAFOhG,GAASA,GAFC,I,kBCYzB,MAmEDiG,EAAqB,CACzBC,oBC9EmCrF,IAAK,CACxCsF,KAAMP,EACN/E,UD6EAuF,sBC3EqC,MACrCD,KAAMN,KD4EOQ,oBARS3D,IAAK,CAC3B4D,WAAYR,EAAqBpD,MAOKuD,EAAzBI,EArEkB,EAC/BD,wBACAE,aACAC,cACAL,sBACAM,kBACAC,wBAEA,MAAOC,EAAkBC,GAAuBrG,mBAAS,KACnD,MACJN,GACEc,IAiCJ,OAAOkF,EAAchG,KAAWuG,EAAc,wBAAQlE,UAAWC,IAAQsE,aAAcrC,QAASkC,EAAlD,SACpC,cAACI,EAAD,CAAYxE,UAAWC,IAAQwE,eACvB,sBAAKzE,UAAWU,IAAGT,IAAQyE,UAAT,UAAuBL,IAAqBM,QAZhEpF,IACdA,EAAMC,iBACN8E,EAAoBrE,IAAQ2E,UAUoEC,OAPnFtF,IACbA,EAAMC,iBACN8E,EAAoB,KAKJ,UACR,cAACE,EAAD,CAAYxE,UAAWC,IAAQwE,aAC/B,uBAAOzE,UAAWC,IAAQ6E,MAAOhB,KAAK,OAAOiB,YAAaC,IAAKC,EAAE,0BAA2BC,SAnC/E3F,IACrBA,EAAMC,iBACNqE,EAAoBtE,EAAM4F,OAAO3G,QAiC6F4G,QA9BhH7F,IACd,OAAQA,EAAM8F,SACZ,KAtBuB,GAuBrBlB,IACAJ,IACA,MAEF,KA1BwB,GA2BtBA,MAsB4IvF,MAAOyF,EAAYtB,YAAU,2BACpKsB,GAAc,cAAC,EAAD,CAAad,QAASY,UE9D1C,MAAMuB,GAAc,IAAM,qBAAK9H,OAAO,KAAKwD,QAAQ,YAAYrD,MAAM,KAAKoD,MAAM,6BAAtD,SACzB,sBAAME,EAAE,4PAA4PC,KAAK,cAEpQqE,GAAY,IAAM,qBAAK/H,OAAO,KAAKwD,QAAQ,YAAYrD,MAAM,KAAKoD,MAAM,6BAAtD,SACvB,sBAAME,EAAE,maAAmaC,KAAK,c,yBCyBzasE,OAtBQ,EACrBtD,UACAgC,cACAuB,eAEA,MAAMC,EAAcxB,EAAcc,IAAKC,EAAE,yBAA2BD,IAAKC,EAAE,wBAC3E,OAAO,qBAAKjF,UAAWC,KAAQyE,UAAxB,SACIe,EAAW,qBAAKzF,UAAWC,KAAQwF,SAAxB,SACJ,cAACH,GAAD,MACK,cAAC,IAAD,CAAS1E,QAAS8E,EAAaC,UAAU,SAAzC,SACL,wBAAQ3F,UAAWC,KAAQ2F,SAAU1D,QAASA,EAASS,YAAU,kBAAkBkD,aAAYH,EAA/F,SACKxB,EAAc,cAACqB,GAAD,IAAgB,cAACD,GAAD,WClBhD,MAMMQ,GAAgBC,GANS,GAO7BA,EAKIC,GAAsBD,GAC1BD,GAAcC,GATeE,G,cCF/B,MAAMC,GAA2B,2BAazBC,oBAAgB,CAC7BC,SAXe,CAAC/F,EAF2B,EAEYgG,KACvD,OAAQA,EAAOvC,MACb,KAAKoC,GACH,OAAOI,YAAgBD,EAAO7H,MALS,GAOzC,QACE,OAAO6B,MAcN,MAEMkG,GAAyBlG,GAFJA,IAASA,EAAMmG,WAEFC,CAAmBpG,GAAO+F,S,6CC1BlE,MAAMM,GAAgB,+CAChBC,GAAuB,4BAM9BC,GAAaC,GAAQA,EAAK/C,OAASgD,MAAQD,EAAKE,OAASL,GAElDM,GAA0BC,GAASA,EAAMC,KAAIL,IACxD,IAAIE,EAAO,KAQX,MAbqBF,IAAQA,EAAK/C,OAASqD,KAOvCC,CAAeP,GACjBE,EAAOL,GACEE,GAAWC,KACpBE,EAAOF,EAAKE,MAAQJ,IAGf,IAAKE,KACNE,EAAO,CACTA,QACE,OAGKM,GAA0BJ,GAASA,EAAMC,KAAIL,IACxD,MAAM/C,EAtBoB+C,IAAQA,EAAK/C,OAASgD,MAAQD,EAAKE,OAASL,GAsBzDY,CAAoBT,GAAQM,KAASN,EAAK/C,KACjDyD,EAAiBC,aAAsBX,EAAKvF,IAC5CyF,EAAOH,GAAWC,GAAQA,EAAKE,OAASJ,GAAuB,GAAKE,EAAKE,KAAO,KACtF,MAAO,IAAKF,KACG,OAATE,EAAgB,CAClBA,QACE,GACJjD,UACGyD,MC9BME,GAAiB,iBACjBC,GAAiB,iBACjBC,GAAwB,wBACxBC,GAA6B,6BAC7BC,GAAsB,sBACtBC,GAA2B,CACtCC,KAAM,KACNd,MAAO,IAEIe,GAAkB,GAEzBC,GAAsB,EAC1B5H,QACA4B,cACAiG,OACA1J,YAJ0B,CAM1BuJ,KAAM,IAAK1H,EAAM0H,KACf,CAAC9F,GAAc,IAAK5B,EAAM0H,KAAK9F,GAC7B,CAACiG,GAAO1J,IAGZyI,MAAO5G,EAAM4G,QA8DR,MAAMkB,GAAqB9H,GAASA,EAAM+H,WAgBpCC,GAAoB,CAAChI,EAAOiB,IAAOgH,YAASH,GAAmB9H,GAAO0H,MAAMzG,GAC5EiH,GAAwBlI,GACO,OAAnC8H,GAAmB9H,GAAO0H,KAUtBS,GAAoBnI,GAASiI,YAASH,GAAmB9H,GAAO0H,MAShEU,GAAqBpI,GAAS8H,GAAmB9H,GAAO4G,MAExDyB,GAAwBrI,GAASsI,OAAOC,OAAOJ,GAAkBnI,IAAQwI,QAAOC,IAAmC,IAAtBA,EAAUhH,UACvGiH,GAA0B1I,GAASsI,OAAOC,OAAOJ,GAAkBnI,IAAQwI,QAAOC,IAAmC,IAAtBA,EAAUhH,UAezGkH,GAAsBC,GAAQC,KAAUD,GAAM/B,KAAIjG,IAAC,CAC9DK,GAAIL,EAAEK,GACN6H,KAAMlI,EAAEkI,KACRC,YAAanI,EAAEmI,YACfC,YAAapI,EAAEoI,YACfC,mBAAoBrI,EAAEqI,mBACtBxH,QAASb,EAAEsI,SACXC,MAAOvI,EAAEwI,KAAKN,KACdO,QAASzI,EAAEyI,QAAQC,MAAM,KAAKC,KAAK,KAAKC,OAAO,EAAG,IAClDC,YAAa7I,EAAE6I,YAAYH,MAAM,KAAKC,KAAK,KAAKC,OAAO,EAAG,IAC1DE,OAAQ9I,EAAE8I,OACVC,cAAeC,YAAQhJ,EAAEiJ,gBAAgBC,OACzCD,eAAgB7C,GAAwBpG,EAAEiJ,oBCzJ/BE,GAAkB,kBAClBC,GAAyB,yBACzBC,GAA+B,+BAC/BC,GAAgC,gCAChCC,GAAmC,mCAGnCC,IAAyC,EACzCC,GAA2C,GA0DzCvE,oBAAgB,CAC7B7E,GAlDS,CAACjB,EAZ6B,KAYMgG,KAC7C,OAAQA,EAAOvC,MACb,KAAKsG,GACH,OAAO9D,YAAgBD,EAAO7H,MAfK,MAiBrC,QACE,OAAO6B,IA6CXsK,UAzCgB,CAACtK,EArB6B,MAqBagG,KAC3D,OAAQA,EAAOvC,MACb,KAAKuG,GACH,OAAO/D,YAAgBD,EAAO7H,MAxBY,OA0B5C,QACE,OAAO6B,IAoCXuK,gBAhCsB,CAACvK,EAAQoK,MAAwCpE,KACvE,OAAQA,EAAOvC,MACb,KAAKwG,GACH,OAAOhE,YAAgBD,EAAO7H,MAAOiM,IAEvC,QACE,OAAOpK,IA2BXwK,gBAvBsB,CAACxK,EAAQqK,GAA0CrE,KACzE,OAAQA,EAAOvC,MACb,KAAKyG,GAED,MAAO,IAAKlK,EACV,CAACgG,EAAO/E,IAAK+E,EAAOyE,YAI1B,KAAKN,GAED,OAAOE,GAGX,QACE,OAAOrK,MAWN,MAAM0K,GAAmB1K,GAASA,EAAM0B,SAClCiJ,GAAiB3K,GAAS0K,GAAiB1K,GAAOiB,GAClD2J,GAAwB5K,GAAS0K,GAAiB1K,GAAOsK,UACzDO,GAA8B7K,GAAS0K,GAAiB1K,GAAOuK,gBAC/DO,GAA6B,CAAC9K,EAAOiB,IAAOyJ,GAAiB1K,GAAOwK,gBAAgBvJ,GC/EpF8J,GAAY,YACZC,GAAejK,eAAoBG,EAAG+J,YAAYC,UAAUC,IAAIJ,IAChEK,GAAerK,MAAOG,EAAI8J,IAAiBA,QAAqB9J,EAAG+J,YAAYC,UAAUG,IAAIN,UAAmB7J,EAAG+J,YAAYC,UAAUI,OAAOP,IAChJQ,GAA4BxK,MAAOyK,EAAKrN,KACnD,MAAM+C,QAAWC,+BACAiK,GAAalK,EAAI8J,KAC/BS,IAAID,EAAKrN,IAEDuN,GAA2B3K,MAAOyK,EAAKG,KAAkB,IAAD,EACnE,MAAMzK,QAAWC,wBACXyK,QAAkBR,GAAalK,QAAU8J,GAAa9J,IAG5D,OAFY,OAAG0K,QAAH,IAAGA,GAAH,UAAGA,EAAWC,YAAd,aAAG,EAAiBC,MAAKC,GAAKA,IAAMP,WAGjCI,EAAUP,IAAIG,UAErBD,GAA0BC,EAAKG,GACrCK,QAAQC,IAAI,mDACLN,ICjBLO,GAAsB,iBCCfC,GAA0BzG,IAAI,CACzCjC,KAAMoC,GACN1H,MAAOuH,IAGI0G,GAAqB,IAAMrL,UAUtC,IACE,MAAMsL,ODhB0BtL,gBAAkB2K,GAAyBQ,GLClC,GMeZI,GAC7B,YAVAC,EAASJ,GAUQE,IACjB,MAAOG,GACP,OATcC,EASCD,EARfR,QAAQC,IAAI,iCAAkCQ,GACvCA,EAFOA,O,yBCQX,MAoHDlJ,GAAqB,CACzBhE,eAAgB4M,IAEHO,mBAAW/I,aAVF3D,IAAK,CAC3B+H,WAAYI,GAAkBnI,GAC9B4D,WAAYR,EAAqBpD,GACjC2M,WAAYhC,GAAe3K,GAC3B+F,SAAUG,GAAuBlG,MAMgBuD,GAAzBI,EArHJ,EACpBoC,WACAxG,iBACAqN,UACA7E,aACA4E,aACA/I,iBAEA,MAAO8B,EAAMmH,GAAWjP,mBAASmI,IAC3B,MACJzI,GACEc,IACE0O,EAAMC,sBACZlP,qBAAU,KACRgP,EAAQ9G,KACP,CAACA,IAEJ,MAAMlC,EAAc,IAnBO,KAmBD6B,EAapBsH,EAAc,KACdnJ,KACFiJ,EAAIG,QAAQC,OAAO,EAAG,IAIpBC,EAAkB,KACtB,MAAMC,EAAUvJ,IAAgBkC,EAvCP,GAwCzBiH,IACAH,EAAQO,IAGJC,EAAkB,KACtBL,IACAH,EAAQ9G,IAWJuH,EAAwB,KAC5B,MAAMC,EAAqBC,IAAUlF,OAAOC,OAAOR,GAAYS,QAAO5H,GAAKA,EAAEmI,YAAY0E,cAAcC,SAAS9J,EAAW6J,iBAAiB,MAAO,eACnJ,MAAO,IAAIF,EAAmB/E,QAAO5H,GAAKA,EAAEa,aAAa8L,EAAmB/E,QAAO5H,IAAMA,EAAEa,YAGvFkM,EAAiBtN,IAAGT,KAAQyE,UAAWR,IAAgBjE,KAAQgO,SAAWhO,KAAQiO,WAClFC,EAAexK,EAAchG,KAAWuG,IRjFnB,EQiFmD6B,EACxEqI,EAAgB,CACpB5Q,OAAQsI,GAAcqI,GRpFc,IQoGtC,OAAO,qCACG,eAAC,EAAD,CAAY3Q,OAAQwI,GAAoBmI,GAAevO,eAAiB+D,EAAchG,GAAwB,KA7DnG+B,IACnB,MAAM+N,EAAUlN,KAAKC,IRxCI,GAOOhD,EQiC6BkC,EAAY,GRhCpEa,KAAK8N,OAAO7Q,EANiByI,IAJA,MASFzI,MQoC5BiQ,IAAY1H,GACdnG,EAAeW,KAAK+N,IAAIb,EA1BD,MAkFmGnO,UApD5G,IF/CiB8B,gBAAuBwK,GAA0BW,GAAqB/N,GE+CjF+P,CAAsBxI,GAoDpC,UACI,sBAAK/F,UAAWgO,EAAgBb,IAAKA,EAAKhN,MAAOiO,EAAjD,UACI,sBAAKpO,UAAWC,KAAQuO,SAAxB,UACI,cAAC,IAAD,CAAMxO,UAAWC,KAAQwO,QAAS/L,GAAI,OAAQC,YAAU,qBAAxD,SACI,cAAC+L,EAAD,MAEJ,cAACC,GAAD,CAAQxK,gBAvCJ,KAAO,IAAD,EAC9B,MAAM7C,EAAE,UAAGqM,IAAwB,UAA3B,aAAG,EAA4BrM,GAEnCA,GACF2L,EAAQ2B,KAAKtN,IAmCiD8C,kBAAmBoJ,EAAiBtJ,YAAaA,SApBzF,MACxB,MAAM2K,EAAQlB,IAAwBzG,KAAI4B,GAAa,cAAC,EAAD,CAAyB9G,MAAO8G,EAAUM,YAAatH,QAASgH,EAAUhH,QAASG,YAAa6G,EAAUxH,GAAIS,SAAU+G,EAAUxH,KAAO0L,EAAY9K,QAASwL,GAAnJ5E,EAAUxH,MAE5E,GAAIqC,EAAchG,GAAQ,CACxB,MAAMmR,EAAuBpO,IAAGT,KAAQ8O,cAAe7K,IAAgBjE,KAAQgO,SAAWhO,KAAQiO,WAClG,OAAO,qBAAKlO,UAAW8O,EAAsB3O,MAAOiO,EAA7C,SACQS,IAGf,OAAOA,GAaQG,MAEL,cAAC,GAAD,CAAgB9M,QAASsL,EAAiBtJ,YAAaA,IAAeuB,SA5FzD,KA4FmEW,OAEpF,qBAAKjG,MAAO,CAClB8O,UAAWjJ,GAAoBrC,EAAchG,KAAWuG,IRjHjC,EQiHiEkC,GtBhH5D,YuBenB8I,OAfU,EACvBnI,UACI,qBAAK5G,MAAO,CAChBgP,QAAS,YACTC,UAAW,SACXC,SAAU,OACVC,WAAY,IACZhM,MAAOT,IAAO0M,SALV,SAOGxI,ICDMyI,OAPSzQ,GAAS,cAAC,IAAD,CAAYoK,KAAK,wBAAwBnH,MAAOgD,IAAKC,EAAE,6CAA8CnB,KAAK,OAAOoB,SAAUnG,EAAMmG,SAAUP,QAAS5F,EAAM4F,QAASnG,MAAOO,EAAMP,MAAOiR,SAAS,gB,qBCYlNC,OAZQ,EACrBC,WACI,cAAC,IAAD,CAAU3P,UAAWC,KAAQ4G,KAAM+I,OAAK,EAAanK,UAAQ,EAACzD,MAAO,sBAAM7B,MAAO,CACtFmD,MAAOT,IAAOI,QACdqM,WAAY,OAF6D,SAI1DK,KAJmCA,G,UCOrCE,OAVI,EACjB7P,eACI,sBAAKA,UAAWA,EAAWe,MAAM,6BAA6BpD,MAAM,KAAKH,OAAO,KAAK0D,KAAM2B,IAAO0M,QAASvO,QAAQ,YAAnH,UACE,sBAAMC,EAAE,gBAAgBC,KAAK,SAC7B,sBAAMD,EAAE,0I,qBCChB,MAAM6O,GAAa,EACjBrO,SACI,mBAAGS,QAAS6N,GAAKA,EAAEtQ,kBAAmBO,UAAWC,KAAQ+P,WAAY7K,OAAO,SAAS8K,IAAI,sBAAsBC,KAAMzO,EAArH,SACE,cAAC0O,GAAD,MAOFC,GAAe,IAAM,wBAAQpQ,UAAWC,KAAQoQ,aAA3B,SAA0CrL,IAAKC,EAAE,YAkC7DqL,OAhCS,EACtBxM,OACAqF,OACAoH,WACA9O,MACA+O,cAEA,MAAMC,EAAWC,aAAY5M,GACvB6M,EAAmB7M,IAAS8M,KAAgBC,KAAaL,GAAW,cAACC,EAAD,CAAUtQ,MAAO,CACzFe,KAAM2B,IAAO0M,WAEf,OAAO,cAAC,IAAD,CAAUK,OAAK,EAAC1N,QAASqO,EAAUvO,MAAO,sBAAKhC,UAAWC,KAAQ6Q,SAAxB,UAC/B,sBAAK9Q,UAAWC,KAAQ+B,MAAxB,UACI,sBAAM7B,MAAO,CAC7B4Q,YAAa,OADG,SAGKJ,IAEL,+BAAOxH,IACN1H,EAAM,cAACqO,GAAD,CAAYrO,IAAKA,IAAU,QAEtC,cAAC2O,GAAD,OACIX,SAAQ,oBAAetG,M,qBCvCxC,MAAM6H,GAA0B,0BAC1BC,GAAuB,uBACvBC,GAAsB,sBACtBC,GAAiB,iBACjBC,GAAuB,uBACvBC,GAAqB,qBACrBC,GAAwB,wBACxBC,GAAwB,wBACxBC,GAA4B,4BAC5BC,GAAyB,yBACzBC,GAA2B,2BAC3BC,GAA+B,GAC/BC,GAAsB,CACjCtQ,GAAI,GACJ6H,KAAM,GACNY,OAAQ,GACRV,YAAa,GACba,eAAgB,GAChB2H,kBAAkB,GA6Hb,MAAMC,GAAwBzR,GAASA,EAAM0R,cAEvCC,GAAgB3R,IAAU4R,IAAQ5R,EAAM0R,eACxCG,GAAyB7R,GAASyR,GAAsBzR,GAAOwR,iBAM/DM,GAAyB9R,GAASiI,YAASwJ,GAAsBzR,IAAQ6J,e,cC1JtF,MAAMkI,GAAUtF,GAAST,QAAQC,IAAI,UAAWQ,GAE1CuF,GAAgB,CAACvJ,EAAWG,KAChC,MAAM,KACJE,EADI,YAEJE,EAFI,eAGJa,GACEjB,EAOJ,OANAH,EAAUK,KAAOA,EACjBL,EAAUO,YAAcA,EACxBP,EAAUoB,eAAiBA,EAAehD,KAAIL,GAAQ8B,OAAO2J,OAAO,GAAIzL,EAAM,CAC5ElJ,MAAOkJ,EAAK0L,EACZ/U,OAAQqJ,EAAK2L,MAER1J,EAAU2J,OAAOC,MAAKC,GAAOA,EAAIC,SAASC,OChBtCC,GAAgB,gBAChBC,GAAqB,CAChCzR,GAAI,GACJ0R,SAAU,GACVC,SAAU,GACVC,aAAa,GAwBR,MACMC,GAAmB9S,GAASA,EAAMoJ,KAAKuJ,S,mCCzB7C,MAAMI,GAAkB,EAC7BC,UACE,KAAO,CAAC,KAAD,UAAUA,EAAS,2BAA6B,qBAI9CC,GAAqB,EAChCC,eACIC,KAAW,CAAC,YAAa,gBAAiB,SAAU,eAAgBD,EAAS,gBAJhD,CAAC,2BAA4B,2BAA4B,qBAImB3J,KAAK,KAAjC,UAEtE6J,GAAgB,EAC3BF,eACI,CAAC,WAAD,OAAYD,GAAmB,CACnCC,cACC3J,KAAK,KAFF,oBAEmB0J,GAAmB,CAC1CC,cACC3J,KAAK,KAJF,uBAIsB0J,GAAmB,CAC7CC,cACC3J,KAAK,KANF,MAQO8J,GAAoB,EAC/BC,iBACAC,iBAEOJ,KAAW,CAAC,GAAD,OAAIJ,GAAgB,CACpCC,QAAQ,IACPzJ,KAAK,MAAQ,yCAA0C+J,EAAc,UAAMF,GAAc,CAC1FF,WAAW,IACV3J,KAAK,MAFgE,GAEnDgK,EAAc,CAAC,IAAK,uBAAwB,mBAAoB,YAAa,sBAAuB,oCAAqC,oBAAqB,sBAAuB,yBAA0B,iCAAkC,oBAAqB,8BAA+B,iBAAkB,sCAAuC,0BAA2B,qBAAsB,8BAA+B,mBAAoB,gBAAiB,iBAAkB,gBAAiB,wBAAyB,gCAAiC,sCAAsChK,KAAK,KAAO,KAE5mBiK,GAAqB,EAChCF,oBACI,CAAC,eAAD,OAAgBD,GAAkB,CACtCC,mBACC/J,KAAK,KAFF,qBAEoB,CAAC,UAAW8J,GAAkB,CACtDC,oBACE/J,KAAK,KAJH,mBAImB8J,GAAkB,CACzCC,mBACC/J,KAAK,KANF,2BAM0B8J,GAAkB,CAChDC,mBACC/J,KAAK,KARF,0BAQyB8J,GAAkB,CAC/CC,mBACC/J,KAAK,KAVF,MA2BOkK,GAAwB1S,UACnC,MAAME,EAAKyS,aAAmBlN,GACxBmN,EAASnN,EAAK/C,OAASmQ,KATG,CAAC,GAAD,OAAIb,GAAgB,CACpDC,QAAQ,IACPzJ,KAAK,MAAQ,uCAFkB,mBAEkC8J,GAAkB,CACpFC,gBAAgB,EAChBC,aAAa,IAJmB,MASoBF,GAAkB,CACpEC,gBAAgB,EAChBC,aAAa,IAETrS,QAAWC,wBACjB,aAAaD,EAAGG,IAAIC,SAAS+J,IAAhB,UAAuBwI,aAAgBrN,EAAK/C,MAA5C,YAAqDxC,GAAM,CACtE0S,YCrES5B,GAAUtF,GAAST,QAAQC,IAAI,UAAWQ,GAE1CqH,GAA0B,EACrCC,gBACE,KAAOZ,KAAW,CAAC,KAAM,OAAQ,QAAS,IAAK,IAAK,kBAAmB,mBAAoB,WAAY,OAAQ,SAA7F,UD0CiB,CAAC,WAAD,OAAY,CAAC,UAAWJ,GAAgB,CAC7EC,QAAQ,KACNzJ,KAAK,KAF8B,yBAERwJ,GAAgB,CAC7CC,QAAQ,IACPzJ,KAAK,KAJ+B,qBAIbwJ,GAAgB,CACxCC,QAAQ,IACPzJ,KAAK,KAN+B,MC1C6GA,KAAK,MAAQwK,EAAY,UAAMP,GAAmB,CACpMF,eAAgBS,EAAaT,iBAC5B/J,KAAK,MAFqK,KAIhKyK,GAAqB,EAChCd,YACAa,gBACE,KAAOZ,KAAW,CAAC,GAAD,OAAIJ,KAAkBxJ,KAAK,MAAQ,cAAe,qBAAsB,WAAxE,eAA4FwJ,GAAgB,CAChIC,QAAQ,IACPzJ,KAAK,KAFc,KAEL,UAAW,cAAe,SAAU2J,EAAS,yBAAqBY,GAAwB,CACzGC,iBACCxK,KAAK,KAFsD,UCPjD0K,GAAoBhT,GAAME,wBAAckR,MAAKnR,GAAMA,EAAGgT,OAAOzL,UAAU4C,IAAIpK,EAAI,CAC1F0S,OAAQR,KAAWa,GAAmB,CACpCd,WAAW,EACXa,aAAc,CACZT,gBAAgB,MAEhB/J,KAAK,SACP4K,MAAMpC,ICgBGqC,GAAmB,IAAMrT,UACpC,MAAMsT,QD7BgClT,wBAAckR,MAAKnR,GAAMA,EAAGgT,OAAOzL,UAAU6L,KAAK,CACxFX,OAAQ,CAACK,KAAqBzK,KAAK,KAAM,sBAAsBA,KAAK,KACpEgL,OAAQ,YACNJ,MAAMpC,ICEqBhK,MAyB7BwE,GAzB6BxE,EAyBJsM,EAAWG,UAzBG,CACvC/Q,KAAM2D,GACNjJ,MAAOsW,YAAa9L,GAAoBZ,QAoD7B2M,GAAiB,CAACzT,EAAI0T,IAAc5T,UAC/C,MAAM6T,EAAY3T,IAChBsL,EAhDiC,EAAC3K,EAAa+S,KAAd,CACnClR,KAAM6D,GACN1F,YAAaA,EACbzD,MAAOwW,IA6CIE,CAAsB5T,EAAI0T,IAC5B1T,GAQT,IAEE,YD1D4B,EAACA,EAAI0T,KACnC,MAAMvT,EAAG,qBAAiBH,EAAjB,aACTE,wBAAckR,MAAKnR,IACbyT,EACFzT,EAAGG,IAAIC,SAASC,KAAKH,GAErBF,EAAGG,IAAIC,SAASwT,OAAO1T,OCmDnB2T,CAAiB9T,EAAI0T,GACpBC,EAAU3T,GACjB,MAAOuL,GACP,OATcC,EASCD,EARfR,QAAQC,IAAI,6BAA8BQ,GACnCA,EAFOA,OAYLuI,GAAmB/T,GAAMF,UACpC,IAGE,YDzD8BE,IACzBE,wBAAckR,MAAKnR,GACjBA,EAAGgT,OAAOnM,WAAWsD,IAAIpK,GAAIoR,MAAK5J,GAAaA,EAAUqM,aAC/DX,MAAMpC,ICoDDkD,CAAmBhU,SACnBsL,EAAS6H,MACRc,QAAQC,UACf,MAAO3I,GAEP,OADAR,QAAQC,IAAI,4BAA6BO,GAClCA,ICvFE4I,GAAiB,iBACjBC,GAAqB,CAACC,aAAiBC,MAAsBD,aAAiBE,OAYpF,MAAMC,GAAiBzV,GAASA,EAAMtC,W,eCZtC,MAAMgY,GAAqB,qBACrBC,GAAmB,mBACnBC,GAAkB,kBAClBC,GAAqB,qBACrBC,GAA6B,GAiCnC,MAAMC,GAAsB/V,GAASA,EAAMgW,YAGrCC,GAAuBC,aAAe,CAACH,GAAqBN,KAAiB,CAACU,EAASzY,IAAe4K,OAAOuD,KAAKsK,GAASC,QAAO,CAACC,EAAKpV,KACnJoV,EAAI9H,KAAK,CACPtN,GAAIA,EACJ6H,KAAMpL,EAAWoO,MAAKwK,GAAaA,EAAUrV,KAAOA,IAAI6H,KACxDP,OAAQ4N,EAAQlV,GAAI4F,KAAI1I,IAAK,CAC3B8C,GAAI9C,EAAM8C,GACV6H,KAAM3K,EAAM4K,aAAe5K,EAAM2K,WAG9BuN,IACN,MC7CUE,GAAqBtV,IAAE,CAClCwC,KAAMoS,GACN5U,OCPWuV,GAAoB,oBAiB1B,MAAMC,GAAmBzW,GAASA,EAAM0W,SCPlCC,GAAe,IAAM5V,UAChC,IACE,MAAM2V,OCbiB,MACzB,MACMtV,EAAG,uCADM,qHACN,gCACT,OAAOD,wBAAckR,MAAKnR,GAAMA,EAAGG,IAAIC,SAAS+J,IAAIjK,KAAM+S,OAAM1H,GAAST,QAAQC,IAAI,SAAUQ,MDUtEmK,IACjB,qBACJC,GACEH,EACJ,OAAOnK,EAV0B,CACnC9I,KAAM+S,GACNrY,MAQmC0Y,IACjC,MAAOrK,GACP,OAjBaxG,EAiBE,eAjBMyG,EAiBUD,EAhBjCR,QAAQC,IAAR,0BAA+BjG,EAA/B,aAA0CyG,IACnCA,EAFO,IAACzG,EAAQyG,GEHZqK,GAAoB,oBACpBC,GAAsB,sBAmB5B,MAAMC,GAAmBhX,GAASA,EAAMiX,MCflCC,GAAsB,MACjCzT,KAAMsT,K,yBCFD,MAAMI,GAAoB,oBAEpBC,GAAuB,uBACvBC,GAA+B,GAEtCzF,GAAU0F,QAAWC,IAAND,GAAyB,OAANA,EAuBjC,MAEME,GAAoB,CAACxX,EAAOiB,IAFHjB,IAASA,EAAMyX,eAG5CC,CAAuB1X,GAAOiB,GClC1B0W,GAAqBxZ,IAAK,CACrCsF,KAAM0T,GACNhZ,UCDIyZ,GAAuB,kBCchBC,GAAkB1Z,IAAK,CAClCsF,KAAMsG,GACN5L,UAEW2Z,GAAyB3Z,IAAK,CACzCsF,KAAMuG,GACN7L,UAEW4Z,GAA+B5Z,IAAK,CAC/CsF,KAAMwG,GACN9L,UAcW6Z,GAA4B/W,GAAMF,MAAOwL,EAAU0L,KAC9D1L,EAASuL,IAAuB,IAChC,MAAMI,EAAeC,YAAW,KAAO,IAAD,EACpC,MAAMrP,EAAI,UAAGd,GAAkBiQ,IAAYhX,UAAjC,aAAG,EAAmC8H,YJ1CnB5K,MI4CzByM,GAAsBqN,MAAenP,GACvCyD,GJ7C2BpO,EI6CAwG,IAAKC,EAAE,oCAAgC,CAChEkE,SJ9C8B,CACpCrF,KAAMqT,GACN3Y,aI+CG,KAEGyW,EAAYlT,IZvCcqG,MYwC9BwE,GZxC8BxE,EYwCFrG,EZxCY,CAC1C+B,KAAM4D,GACNlJ,MAAOsW,YAAa9L,GAAoBZ,OYuCtC,MAAMqQ,EAAkBzP,GAAoBjH,GAAU,GZ3BvBvD,Ma1BOwU,EAAU/Q,EDqFhD,OA/BA2K,GZ5B+BpO,EY4BFka,aAAUD,EAAgBvO,gBZ5BnB,CACtCpG,KAAM+D,GACNrJ,Wa5BwCwU,EDuDZG,GAAiBmF,KCvDKrW,EDuDQX,ECtD1DqX,aAAaC,QAAb,kCAAgD5F,GAAY/Q,GDwDtDX,IAAO0J,GAAesN,OACxB1L,EThD4B,CAChC9I,KAAMiS,KSgDFnJ,EFvD+B,CACnC9I,KAAM2T,KEuDF7K,EAzBwC,CAC5C9I,KAAM0G,MA2BJiO,EAAgBvO,eAAe2O,SAAQhS,IACrC,OAAQA,EAAK/C,MACX,KAAKgV,KACL,KAAKC,KACL,KAAK9E,KACL,KAAK+E,KACL,KAAKC,KACHrM,EAASoL,GAAmBkB,aAAyBrS,KACrD,MAEF,KAAKsS,KACHvM,EAASoK,UAOfpK,EAASsL,GAAgB5W,IACzBsL,EAASuL,IAAuB,IAChCiB,aAAab,GACb3L,EAAS2K,MACFxV,GAQT,IAEE,OAAOkT,QADiBX,GAAkBhT,IAE1C,MAAOuL,GACP,OATcC,EASCD,EARfR,QAAQC,IAAI,UAAWQ,GAChBA,EAFOA,OAYLuM,GAAsB,IAAMjY,UAUvC,IACE,MAAMwJ,OD7G2BxJ,gBAAkB2K,GAAyBkM,GAAsBxN,IC6GpE6O,GAC9B,YAVA1M,EAASwL,GAUQxN,IACjB,MAAOiC,GACP,OATcC,EASCD,EARfR,QAAQC,IAAI,kCAAmCQ,GACxCA,EAFOA,OAYLyM,GAAyB/a,GAAS4C,UAU7C,IAEE,YD9HkCA,gBAAuBwK,GAA0BqM,GAAsBzZ,GC6HnGgb,CAAuBhb,QAT7BoO,EAASwL,GAA6B5Z,IAWtC,MAAOqO,GACP,OATcC,EASCD,EARfR,QAAQC,IAAI,kCAAmCQ,GACxCA,EAFOA,OE/FL2M,GAAuB,MAClC3V,KAAMmN,KAoBKyI,GAAqB7S,IAChC,MAAM/C,EAAO+C,EAAK/C,YACX+C,EAAK/C,KACZ,MAAM6V,EAAeC,KAAY9V,GAAM+V,SACjCvY,EAAKwY,yBACLC,EAAqBvS,aAAsBlG,GACjD,IAAI0Y,EAEJ,GAAIlW,IAASmW,KAAW,CACtB,MAAMC,EAAOrT,EAAKqT,MAAQ,EAC1BF,EAAQG,aAAsBD,EAAMrT,EAAKuT,eAEzCJ,EADSlW,IAASuW,KACVC,eAEAC,KAGV,MAAO,CACLzW,KAAMuN,GACN7S,MAAO,CACL8C,KACAwC,OACA0W,SAAU3T,EAAK2T,UAAY,KAC3B,CAACb,GAAe9S,EAAKjG,WAClB2Z,QACAR,KACAC,KAIIS,GAAwB5T,IAAI,CACvC/C,KAAMyN,GACN/S,MAAOqI,IAEI6T,GAAwBlc,IAAK,CACxCsF,KAAMwN,GACN9S,UAGWmc,GAAiB,IAAMvZ,MAAOwL,EAAU0L,KACnD,MAAMxP,EAAYgJ,GAAsBwG,KAClCsC,EAAkB,IAAK9R,EAC3BoB,eAAgBlD,GAAwB8B,EAAUoB,gBAClDf,KAAML,EAAUK,MAAQnE,IAAKC,EAAE,uBAGjC,IACE,MAAMhD,EAAc2Y,EAAgBtZ,SnB7ET2H,EmB6EoC2R,EnB5E1DpZ,wBAAckR,MAAKnR,GACjBA,EAAGgT,OAAOnM,WAAWsD,IAAIzC,EAAK3H,IAAIoR,MAAK5J,GAAauJ,GAAcvJ,EAAWG,OACnFuL,MAAMpC,UAEkBnJ,IACpBzH,wBAAckR,MAAKnR,IACxB,MAAMuH,EAAYvH,EAAGgT,OAAOnM,WAAWuD,SACvC,OAAO0G,GAAcvJ,EAAWG,MmBqEwD4R,CAAcD,GAGtG,OAFAhO,EAAS6M,YACH7M,EAASyL,GAA0BpW,IAClCsT,QAAQC,QAAQvT,GACvB,MAAO6K,GA1FKA,KACdT,QAAQC,IAAI,6BAA8BQ,IA0FxCsF,CAAQtF,GnBlFmB7D,OoBjBlB6R,GAAc,CAAC,CAC1BxZ,GAAI,aACJyZ,OAAQ/V,IAAKC,EAAE,oBACfgC,MAAO,CAAC,CACNnD,KAAMgD,KACNqC,KAAMnE,IAAKC,EAAE,YACbrE,QAAS,IACR,CACDkD,KAAMqV,KACNhQ,KAAMnE,IAAKC,EAAE,YACbrE,QAAS,QACR,CACDkD,KAAMqD,KACNgC,KAAMnE,IAAKC,EAAE,UACbrE,QAAS,OAIAoa,GAAmB,CAACpK,KAAeqD,KAAK+E,KAAcC,KAAagC,KAAOC,KAASC,KAAWC,MAE9FC,GAAgB,CAACH,KAASC,KAAWF,M,0BCTlD,MAAMK,WAA6Bzc,YACjCC,YAAYC,GACVC,MAAMD,GADW,KAOnBwc,QAAU1U,GAAQ,KAChB,MAAM,KACJ/C,EADI,mBAEJ4V,EAFI,oBAGJ8B,GACEtc,KAAKH,MAET,GAAI+E,IAASsX,KACX1B,EAAmB,CACjB5V,OACAlD,QAASiG,EAAKgF,UAEX,CACL,MAAM4P,EAAU,CACdna,GAAIuF,EAAKvF,GACT6H,KAAMtC,EAAKuC,aAAevC,EAAKsC,MAG7BkS,GAActN,SAASjK,GACzB0X,EAAoB1X,EAAM2X,GAE1B/B,EAAmB,CACjB5V,OACAlD,QAAS6a,MA9BE,KAmCnBC,cAAgB,KACdxc,KAAKC,SAAS,CACZwc,SAAUzc,KAAKmB,MAAMsb,UAEvBzc,KAAKH,MAAM6c,mBAAmB1c,KAAKH,MAAM+E,OArCzC5E,KAAKmB,MAAQ,CACXsb,SAAS,GAuCbrb,SACE,MAAM,MACJqP,EADI,KAEJ7L,EAFI,MAGJmD,EAHI,QAIJ4U,GACE3c,KAAKH,MACT,OAAO,qCACK,cAAC,GAAD,CAAgB4Q,MAAOA,IACtB1I,EAAMC,KAAIL,IACnB,MAAMiV,EAAUC,aAAWjY,EAAM+C,EAAM3H,KAAK8c,QAAQza,IACpD,OAAO,cAAC,GAAD,CAA2CuC,KAAMA,EAAM0M,QAAS1M,IAAS8M,KAAgB/J,EAAK/C,KAAOA,EAAMqF,KAAMtC,EAAKuC,aAAevC,EAAKsC,KAAMoH,SAAUrR,KAAKqc,QAAQ1U,GAAOpF,IAAKqa,GAA7JjV,EAAKvF,IAAMuF,EAAKgF,QAEpCgQ,EAAU,cAAC,IAAD,CAAUjM,OAAK,EAA0B1N,QAAShD,KAAKwc,cAAe1Z,MAAO,wBAAQhC,UAAWC,KAAQgc,eAA3B,SACvE/c,KAAKmB,MAAMsb,QAAU3W,IAAKC,EAAE,cAAgBD,IAAKC,EAAE,gBADzD,kBAAgC0K,IAEf,KAC5B,cAAC,IAAD,CAASuM,OAAO,gBAehCZ,GAAqBa,aAAe,CAClC5a,GAAI6a,IAAUC,OAAOC,YAERtY,mBAAQ,KAAM,CAC3B0V,sBACA8B,oBCzFiC,CAAC1X,EAAMlD,IAAY,CAACgM,EAAU0L,KAC/D,MAAMjY,EAAQiY,IACRiE,EAAe3C,KAAY9V,GAAM+V,SACjC3P,EAAiB4H,GAAsBzR,GAAO6J,eAC9CsS,EAAqBtS,EAAeuS,WAAU5V,GAAQA,EAAK/C,OAASA,IAC1E,IAAI4Y,EAEAF,GAAsB,GACxBE,EAAgBxS,EAAesS,GAC/BE,EAAcH,GAAc3N,KAAKhO,GACjCgM,EAAS6N,GAAsBiC,MAE/BA,EAAgB,CACd5Y,KAAMA,EACNlD,QAAS,CAACA,IAEZgM,EAAS8M,GAAmBgD,ODuEjB1Y,CAGZsX,IEhEYtX,mBAAQ,KAAM,CAC3B0V,uBADa1V,EAvBiB,EAC9B0V,qBACAiD,eAEA,MAAMC,EAAiB,EACrB9Y,OACAlD,aACI,KACJ8Y,EAAmB,CACjB5V,OACAlD,aAIJ,OAAO,qCACG,cAAC,GAAD,CAAgB+O,MAAOgN,EAAS5B,SAC/B4B,EAAS1V,MAAMC,KAAIL,GAAQ,cAAC,GAAD,CAAiC/C,KAAM+C,EAAK/C,KAAMqF,KAAMtC,EAAKsC,KAAMoH,SAAUqM,EAAe/V,IAAtEA,EAAK/C,c,sBCZnE,MAAM+Y,GAAe,IAAKb,KACxB,MAAOc,EAAQC,GAAa9e,oBAAS,IAC9B4K,EAAQmU,GAAa/e,mBAAS,KAC9BgJ,EAAOgW,GAAYhf,mBAAS,OAC5Bif,EAAYC,GAAiBlf,mBAAS,IAAImf,KACjDlf,qBAAU,KACR,IAAImf,EAAc,YAEd,IAAIH,EAAWtU,UAAUuB,SAC3BkT,GAAe,QAAU,IAAIH,EAAWtU,UAAUgB,KAAK,UAGzD,MAAM0T,EAAYzU,EAAM,WAAOA,GAAW,GAC1CmT,EAAQza,GAAGG,IAAIC,SAAS+J,IAAxB,sBAA2C4R,GAA3C,OAAuDD,IAAe3K,MAAKE,GAAYqK,EAASrK,KAAW4B,MAAMnI,QAAQS,SACxH,CAACjE,EAAQqU,IAEZ,MA0BMK,EAAmBzZ,IACvB,GAAIA,EAAM,CACR,MAAM0Z,EAAU,IAAIJ,IAAIF,GACxBM,EAAQhS,IAAI1H,GAAQ0Z,EAAQrI,OAAOrR,GAAQ0Z,EAAQC,IAAI3Z,GACvDqZ,EAAcK,QAEdL,EAAc,IAAIC,MAQhBM,EAAWtQ,sBACjB,OAAO,qCACG,sBAAMD,IAAKuQ,EAAX,SACI,cAAC,GAAD,CAAiBlf,MAAOqK,EAAQ3D,SAPzB,EACnB1G,WACIwe,EAAUxe,GAKsDmG,QArCrD,IAAMoY,GAAU,OAuCtBD,GAAU,cAAC,IAAD,CAASa,UAAWD,EAAU/X,UAAU,eAAeiY,eA7C1D,KAChBb,GAAU,GACVC,EAAU,IACVG,EAAc,IAAIC,MA0CmFS,OAAO,EAAOC,SAAU,IAA1G,SACH,cAAC,IAAD,CAAY9d,UAAWC,KAAQ8d,KAAMtO,SAAS,YAAYqO,SAAS,QAAnE,SArCT9C,GAAiBnS,QAAO/E,IAC7B,MAAMka,EAAWpE,KAAY9V,GAC7B,OAAOmD,GAASA,EAAM+W,EAASC,iBAC9B/W,KAAIpD,IACL,MAAMka,EAAWpE,KAAY9V,GACvBoa,EAAYC,aAAoBra,GAChCsa,EAAWnX,EAAM+W,EAASC,cAC1BpC,EAAUuC,EAASjU,OAAS+T,EAC5BG,EAAenB,EAAW1R,IAAIwS,EAAS1c,IAAM8c,EAAWA,EAASE,MAAM,EAAGJ,GAChF,OAAO,cAAC,GAAD,CAAiCpa,KAAMA,EAAM6L,MAAOqO,EAASO,YAAatX,MAAOoX,EAAczC,mBAAoB2B,EAAkB1B,QAASA,GAAnH/X,MAMiB0a,OAFpB1D,GAAY5T,KAAIyV,GAAY,cAAC,GAAD,CAAoCA,SAAUA,GAAvBA,EAASrb,eA+BjGub,GAAaV,aAAe,CAC1B5a,GAAI6a,IAAUC,OAAOC,YAERO,U,sBCxER,MAAM4B,GAAe,EAC1BtV,OACAE,cACAqV,gBACAC,yBAUO,0BAAS3e,UAAWC,KAAQ2e,QAA5B,UACG,sBAAK5e,UAAWC,KAAQ4e,iBAAxB,UACI,cAAC,IAAD,CAAY7e,UAAWC,KAAQ0P,MAAOxG,KAAK,wBAAwBnH,MAAOgD,IAAKC,EAAE,mBAAoBnB,KAAK,OAAOoB,SAV3G,CAAC4Z,EAAG/O,KACtB2O,EAAc3O,EAAE5K,OAAO3G,QAS6HA,MAAO2K,EAAMpE,YAAaC,IAAKC,EAAE,sBAAuBwK,SAAS,0BACzM,cAAC,IAAD,CAAezP,UAAWC,KAAQoJ,YAAaF,KAAK,8BAA8BnH,MAAOgD,IAAKC,EAAE,yBAA0BC,SAP9G,CAAC4Z,EAAG/O,KAC5B4O,EAAoB5O,EAAE5K,OAAO3G,QAMsIA,MAAO6K,EAAaoG,SAAS,mCAExL,qBAAKzP,UAAWC,KAAQ8e,aAAxB,SACI,cAAC,GAAD,SAUhBN,GAAa5d,aAAe,CAC1BsI,KAAM,GACNE,YAAa,IAGf,MAQMzF,GAAqB,CACzB8a,cNjBiClgB,IAAK,CACtCsF,KAAMqN,GACN3S,UMgBAmgB,oBNduCngB,IAAK,CAC5CsF,KAAMsN,GACN5S,WMcawF,oBAZS3D,IACtB,MAAM2e,EAAoB1W,YAASwJ,GAAsBzR,IACzD,MAAO,CACL8I,KAAM6V,EAAkB7V,KACxBE,YAAa2V,EAAkB3V,eAQKzF,GAAzBI,CAA6Cya,I,iECvDrD,MAAMQ,GAAY,IAAM,qBAAKzhB,OAAO,KAAKwD,QAAQ,YAAYrD,MAAM,KAAKoD,MAAM,6BAAtD,SACvB,sBAAME,EAAE,wOAAwOC,KAAK,cAEhPge,GAAe,IAAM,qBAAK1hB,OAAO,KAAKwD,QAAQ,YAAYrD,MAAM,KAAKoD,MAAM,6BAA6BZ,MAAO,CAC1H+b,OAAQ,iBADwB,SAI1B,sBAAMjb,EAAE,kIAAkIC,KAAK,UAAUie,SAAS,UAAUC,UAAU,uBAEjLC,GAAU,IAAM,sBAAKte,MAAM,6BAA6BvD,OAAO,KAAKwD,QAAQ,YAAYrD,MAAM,KAAKuD,KAAM2B,IAAO0M,QAAhG,UACrB,sBAAMtO,EAAE,gBAAgBC,KAAK,SAC7B,sBAAMD,EAAE,0D,0BCJhB,MAAMqe,GAAe,EACnBC,sBACA5I,YACA6I,yBACAC,gBACAC,mBACAC,WACC3D,KACD,MAAOxF,EAASoJ,GAAc3hB,mBAASuhB,GAEjCK,EAAgB,EACpBC,cACA7Y,YAEA2Y,EAAW,CACT,CAACE,GAAc7Y,KAIb8Y,EAAkB,EACtBD,cACAE,sBAEA,MACMC,GADUzJ,EAAQsJ,IAAgB,IAChBjX,QAAOhC,IAASmZ,EAAgBjS,SAASlH,EAAKvF,MACtEse,EAAW,IAAKpJ,EACd,CAACsJ,GAAcG,KAIbC,EAAiB,EACrBJ,cACAK,cAEA,MAAMC,EAAU5J,EAAQsJ,IAAgB,GAClCO,EAAgBF,EAAQjZ,KAAI5F,GAAM8e,EAAQjU,MAAKtF,GAAQA,EAAKvF,KAAOA,MACzEse,EAAW,IAAKpJ,EACd,CAACsJ,GAAcO,KA2CnB,OAAO,mCACI1J,EAAUrV,IAAM,eAAC,IAAD,CAAOmO,SAAQ,UAAKkH,EAAUrV,GAAf,oBAAqCqe,QAASA,EAASnF,SAAS,MAAM8F,OAAK,EAA1F,UACT,cAAC,IAAD,UAAa3J,EAAUxN,OACvB,cAAC,IAAD,UA1BU,MAC1B,MAAMoX,EAAc,CAClBhf,GAAIya,EAAQza,GACZif,SAAUX,EACVY,WAAYV,EACZW,UAAWR,GAEPS,EAAgBnK,EAAQG,EAAUrV,KAAO,GAE/C,OAAQqV,EAAUrV,IAChB,KAAKsU,KAED,OAAO,cAAC,KAAD,CAAiBgL,gBAAiBD,EAAeH,SAAUD,EAAYC,WAGlF,KAAK3K,KACH,OAAO,cAAC,KAAD,CAAkB0J,oBAAqBA,EAAqBsB,QAASF,KAAmBJ,IAEjG,QACE,OAAO,cAAC,KAAD,CAAkBI,cAAeA,EAAeb,YAAanJ,EAAUrV,GAAIkf,SAAUD,EAAYC,SAAUxE,QAASuE,EAAYhf,OAO5Guf,KACf,cAAC,IAAD,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAQC,WAAS,EAAC7e,QAASyd,EAA3B,SACK3a,IAAKC,EAAE,YAEZ,cAAC,IAAD,CAAQ+b,SAAO,EAAC9e,QAhDvB,KACjB,MAAMZ,EAAKqV,EAAUrV,GACf2f,EAAczK,EAAQlV,GAExB2f,GAAeA,EAAY9W,OAC7BsV,EAAc,CACZne,KACA9C,MAAO,IAAIyiB,KAGbvB,EAAiBpe,GAGnBqe,EAAQre,IAmCgB,SACK0D,IAAKC,EAAE,wBAgBxCqa,GAAanD,aAAe,CAC1B5a,GAAI6a,IAAUC,QAODrY,oBAJS3D,IAAK,CAC3Bmf,uBAAwBpJ,GAAoB/V,MAGN,CACtCof,cnBzH6B5W,IAAM,CACnC/E,KAAMmS,GACNpN,WmBwHA6W,iBAAkB9I,IAFL5S,CAGZsb,IC9HI,MACM4B,GAAe,eACfC,GAAmB,CAC9BC,cAAe,aACfC,0BAA2B,iBAC3BC,+BAAgC,QAChC/B,oBAAqB,cACrBtM,SAAU,KACVsO,qBAAsB,GACtBC,qDAAqD,GAqBhD,MAAMC,GAAephB,GAASA,EAAMqhB,SAC9BC,GAAkCthB,GAASohB,GAAaphB,GAAOkf,oBAI/DqC,GAAoDvhB,GAASohB,GAAaphB,GAAOmhB,oDCnCjFK,GAA6B,6BAC7BC,GAA+B,+BAC/BC,GAAuC,GAiB7C,MAAMC,GAA2B3hB,GAASA,EAAM4hB,qBClB1CC,GAA4B1jB,IAAK,CAC5CsF,KAAM+d,GACNrjB,U,0BCyDawF,oBAfS3D,IAAK,CAC3Bkf,oBAAqBoC,GAAgCthB,GACrDsW,UAAWqL,GAAyB3hB,GACpCtC,WAAY+X,GAAezV,GAC3Bmf,uBAAwBpJ,GAAoB/V,MAWN,CACtC8hB,0BDxDyC,MACzCre,KAAMge,KCwDNM,wBAAyBF,IAFZle,EA5CQjF,IACrB,MAAOsjB,EAAaC,GAAkBrkB,oBAAS,GACzCkP,EAAMoV,iBAAO,MAEbC,EAAgB,KACpBF,GAAe,GACfvjB,EAAMojB,6BAOR,OAAO,qCACG,sBAAMniB,UAAWC,KAAQwiB,gBAAiBtV,IAAKA,EAA/C,SACI,eAAC,IAAD,CAAQjL,QAAS,IAAMogB,GAAe,GAAtC,UACKtd,IAAKC,EAAE,cACR,cAAC,KAAD,SAGPod,GAAe,cAAC,IAAD,CAASzE,eAAgB4E,EAAe7E,UAAWxQ,EAAK0Q,OAAO,EAAMlY,UAAU,eAAe8J,SAAS,2BAAvG,SACR,cAAC,KAAD,CAAiBtP,MAAO,CACpCxC,MAAO,SACNI,WAAYgB,EAAMhB,WAAY2kB,iBAdbphB,IACtBvC,EAAMqjB,wBAAwBrjB,EAAMhB,WAAWoO,MAAKwK,GAAaA,EAAUrV,KAAOA,MAaZqhB,YAAaha,OAAOuD,KAAKnN,EAAMygB,4BAE3FvN,IAAQlT,EAAM4X,WAAoI,KAAvH,cAAC,GAAD,CAAc4I,oBAAqBxgB,EAAMwgB,oBAAqB5I,UAAW5X,EAAM4X,UAAWgJ,QAAS6C,U,sBCrB5I,MAAMI,GAAe,CAAC7jB,EAAOid,KAC3B,MAAO6G,EAAmBC,GAAwB7kB,oBAAS,IACpD8kB,EAAqBC,GAA0B/kB,oBAAS,IACxDglB,EAAaC,GAAkBjlB,mBAAS,OACzC,MACJN,GACEc,KACE,GACJ6C,EADI,KAEJ6H,EAFI,YAGJE,EAHI,OAIJU,EAJI,MAKJ5J,EALI,gBAMJyK,EANI,QAOJ9I,EAPI,yBAQJqhB,EARI,sBASJC,GACErkB,EAEEskB,EAAsB,IAAML,GAAwBD,GAEpDO,EAAoB,IAAMR,GAAsBD,GAMhDU,EAAa5a,OAAO2J,OAAO,GAAInS,EAAMwP,MAAO,CAChD6T,OAAQ,UACRC,WAAY,OACZC,IAAK,QAED5iB,EAAWgB,EAAUS,KAAOohB,KAElC,GAAIV,EACF,OAAO,cAAC,IAAD,CAAUvgB,GAAIugB,IAGvB,MAAMW,EAA2BhZ,EAAkB5F,IAAKC,EAAE,oBAAsBD,IAAKC,EAAE,oBAOjF4e,EAA8B/hB,EAAUkD,IAAKC,EAAE,oBAAsBD,IAAKC,EAAE,kBAO5E6e,EAAY1W,sBACZ2W,EAAazb,YAASyB,GAC5B,OAAO,qCACG,sBAAK/J,UAAWC,KAAQ+jB,SAAxB,UACI,sBAAM7jB,MAAOojB,EAAY5gB,YAAU,uBAAnC,SACKwG,IAEL,sBAAKnJ,UAAWC,KAAQgkB,QAAxB,UACI,qBAAKjkB,UAAWC,KAAQikB,aAAchiB,QAASihB,EAA/C,SACI,cAACriB,EAAD,CAAUX,MAAO,CAC7Be,KAAM2B,IAAO0M,aAGL,sBAAKvP,UAAWC,KAAQkkB,MAAxB,UACKJ,EAAWK,OAAS,cAAC,IAAD,CAAMpkB,UAAWC,KAAQokB,SAAU3hB,GAAE,WAAMpB,EAAN,SAAiBqB,YAAU,sBAAhE,SACb,cAAC,IAAD,UAASqC,IAAKC,EAAE,YACV,KACb8e,EAAWO,OAAS,cAAC,IAAD,CAAQtkB,UAAWC,KAAQskB,YAAariB,QAASmhB,EAAjD,SACZre,IAAKC,EAAE,WACA,KAChB,cAAC,GAAD,IACA,sBAAMkI,IAAK2W,EAAX,SACI,eAAC,IAAD,CAAQU,MAAO7gB,EAAchG,GAAQ8R,SAAS,cAAcvN,QAASohB,EAArE,UACI,cAACrE,GAAD,IACA,sBAAM9e,MAAO,CAC7BskB,WAAY,OADI,SAGKzf,IAAKC,EAAE,kBAKvB4d,GAAqB,cAAC,IAAD,CAASlF,UAAWmG,EAAWne,UAAU,eAAeiY,eAAgB0F,EAAxE,SACd,eAAC,IAAD,WACI,cAAC,IAAD,CAAU1T,OAAK,EAAC5N,MAAO6hB,EAA6B3hB,QAvCnD,KAC7BihB,IACAG,OAsC4B,cAAC,IAAD,CAAU1T,OAAK,EAAC5N,MAAO4hB,EAA0B1hB,QA/CnD,KAC1BkhB,IACAE,OA8C4B,eAAC,IAAD,CAAU1T,OAAK,EAAC5N,MAAOgD,IAAKC,EAAE,SAAUwK,SAAS,kBAAjD,UACI,cAAC,IAAD,CAAUG,OAAK,EAAC5N,MAAOgD,IAAKC,EAAE,oBAAqB/C,QAlEjE,IAAMghB,EAAe,GAAD,OAAI5hB,EAAJ,iBAkEmEmO,SAAS,2BAClF,cAAC,IAAD,CAAUG,OAAK,EAAC5N,MAAOgD,IAAKC,EAAE,qBAAsB/C,QAjEpE,IAAMghB,EAAe,GAAD,OAAI5hB,EAAJ,eAiEoEmO,SAAS,uCAMxG7E,EAAkB,qBAAK5K,UAAU,wBAAwBG,MAAOwI,OAAO2J,OAAO,CACrFoS,WAAY,MACZC,cAAe,OACdxkB,EAAMkJ,YAAcA,EAEnB,GAFiC,CACnC/F,MAAO,SAJkB,SAMV+F,GAAerE,IAAKC,EAAE,oBAClB,KACZ3D,EAAK,cAAC,KAAD,CAAeC,GAAIya,EAAQza,GAAID,GAAIA,EAAIwC,KAAK,YAAY8gB,KAAM7B,EAAqB8B,eAAgBxB,IAA0B,SAe/IT,GAAa/hB,aAAe,CAC1BsI,KAAM,GACNE,YAAa,GACbvH,SAAS,EACT8I,iBAAiB,GAEnBgY,GAAazG,aAAe,CAC1B5a,GAAI6a,IAAUC,QAiCDrY,oBA9BS3D,IACtB,MAAMiB,EAAK0J,GAAe3K,GACpByI,EAAYT,GAAkBhI,EAAOiB,IAAO0G,GAClD,MAAO,CACL1G,KACA6H,KAAML,EAAUM,YAChBC,YAAaP,EAAUQ,mBACvBY,eAAgBzB,GAAmBpI,GACnCuK,gBAAiBM,GAA4B7K,GAC7CyB,QAASgH,EAAUhH,QACnBiI,OAAQjB,EAAUiB,UAoBkB,MAhBrB,CAAC+a,EAAYC,EAAeC,KAC7C,MAAM,GACJ1jB,EADI,QAEJQ,EAFI,gBAGJ8I,GACEka,GACE,SACJlY,GACEmY,EACJ,MAAO,IAAKD,KACPE,EACH7B,yBAA0B,IAAMvW,EAASmI,GAAezT,GAAKQ,IAC7DshB,sBAAuB,IAAMxW,EAAS2M,IAAwB3O,OAInD5G,CAA2C4e,I,QC7K1D,MAAMziB,GAAQ,CACZwP,MAAO,CACL6K,SAAU,WACVnL,SAAU,GACVC,WAAY,IACZhM,MAAOT,IAAOoiB,MACdC,SAAU,IAEZ7b,YAAa,CACXgG,SAAU,GACV/L,MAAOT,IAAOI,UAiBHkiB,OAbE,EACfC,UAEO,qBAAKplB,UAAU,mBAAmBG,MAAO,CAC9CgP,QAAS,sBADJ,SAGIiW,EAAO,cAAC,GAAD,CAAcjlB,MAAOA,KAAY,cAAC,GAAD,CAAcA,MAAOA,O,4ECb3DklB,OATgB,EAC7BC,aAEO,qBAAKtlB,UAAWC,KAAQqlB,QAAxB,SAAkCA,I,UCQ3C,MAAMC,WAAsB1mB,YAG1BC,YAAYC,EAAOid,GACjBhd,MAAMD,GADoB,KAF5BymB,kBAAoB,KAEQ,KAK5BC,kBAAoB,IAAMC,KAAgCxmB,KAAKH,MAAM+L,YAAc5L,KAAKH,MAAM8H,KAAK/C,MALvE,KAM5B6hB,mBAAqBC,IAMnB,MAAMC,EAAgB3mB,KAAKH,MAAM8H,OAAS+e,EAAU/e,KAC9Cif,EAAiBF,EAAUvP,cAAgBnX,KAAKH,MAAMsX,YACtD0P,EAAMzd,YAASpJ,KAAKH,MAAMinB,eAC1BC,EAAU3d,YAASsd,EAAUI,eAC7BE,EAAaH,EAAIzkB,KAAO2kB,EAAQ3kB,IAAMskB,EAAU9a,aAAe5L,KAAKH,MAAM+L,WAChF,OAAO+a,IAAkBK,GAAcJ,IAjBb,KAmB5BK,aAAeP,IACT1mB,KAAKumB,qBAAuBvmB,KAAKymB,mBAAmBC,KAClD1mB,KAAKH,MAAM+L,aAAe8a,EAAU9a,YAAc5L,KAAKH,MAAMsX,cAAgBuP,EAAUvP,cACzFqP,KAAsBxmB,KAAKH,MAAM8H,KAAM+e,EAAU9a,YACjD4a,KAAmBxmB,KAAKH,MAAM8H,KAAM3H,KAAKH,MAAMinB,cAAe,CAC5DI,YAAalnB,KAAKsmB,kBAClB1a,WAAY5L,KAAKH,MAAM+L,gBAvB7B5L,KAAKqC,GAAKya,EAAQza,GA6BpB8kB,oBAzCwB9kB,MA0CtBrC,KAAKsmB,mBA1CiBjkB,EA0CqBrC,KAAKqC,GAzC3C,CACL+kB,QAASC,YAAWhlB,GACpBilB,KAAMjlB,EAAGG,IAAIC,SAAS8kB,eAAeC,gBAyCjCxnB,KAAKumB,qBACPC,KAAmBxmB,KAAKH,MAAM8H,KAAM3H,KAAKH,MAAMinB,cAAe,CAC5DI,YAAalnB,KAAKsmB,kBAClB1a,WAAY5L,KAAKH,MAAM+L,WACvB0S,QAASte,KAAKH,MAAMye,UAK1BmJ,mBAAmBf,GACjB1mB,KAAKinB,aAAaP,GAGpBgB,uBACM1nB,KAAKumB,qBACPC,KAAsBxmB,KAAKH,MAAM8H,KAAM3H,KAAKH,MAAM+L,YAItDxK,SACE,MAAM,KACJuG,EADI,MAEJ1G,GACEjB,KAAKH,MACT,OAAOG,KAAKumB,oBAAsB,qBAAKnkB,GAAIulB,aAAiBhgB,EAAKvF,IAAKnB,MAAOA,IAAY,cAAC,GAAD,CAAwBmlB,QAAStgB,IAAKC,EAAE,8CAKrIsgB,GAAcpJ,aAAe,CAC3B5a,GAAI6a,IAAUC,QAUhBkJ,GAAc1kB,aAAe,CAC3BV,MAAO,GACP0G,KAAM,GACNwP,YAAa,GACbmH,QAAS,GACTwI,cAAe,IAEFT,UC3DAuB,OAnCG,EAChBC,kBACGhoB,MAEH,GAAIA,EAAM8H,KAAK/C,OAASmQ,KAAK,CAG3B,MAAM+S,EAAWjoB,EAAMinB,cAAcgB,SAAS9f,KAAI+f,GAC5CA,EAAQC,MAAMnZ,SAAS,aAAekZ,EAAQC,MAAMnZ,SAAS,SACxDgZ,EAAaE,EAASloB,EAAMsX,aAG9B4Q,IAETloB,EAAMinB,cAAgB,IAAKjnB,EAAMinB,cAC/BgB,iBAMFjoB,EAAMinB,cAAgBe,EAAahoB,EAAMinB,cAAejnB,EAAMsX,aAGhE,OAAO,cAAC,GAAD,CAAemH,QAAS,CAC7B2J,WAAW,MACNpoB,K,sBCrBMqoB,OANK,IACX,qBAAKpnB,UAAWC,KAAQonB,OAAxB,SACG,cAAC,IAAD,MC6BGC,OAnCkB,CAACtB,EAAexP,KAC/C,IAAK7N,OAAOuD,KAAKsK,GAASrM,OACxB,OAAO6b,EAIT,MAAMuB,EAAUvB,EAAcjgB,KAAKmB,KAAIsgB,IAAG,IAAUA,MAE9CC,EAAazB,EAAc0B,QAAQxgB,KAAIsgB,IAAG,IAAUA,MAEpDG,EAAa3B,EAAcxP,QAAQtP,KAAIsgB,IAAG,IAAUA,MAkB1D,OAhBA7e,OAAOuD,KAAKsK,GAASqC,SAAQiH,IAC3B,GAAItJ,EAAQsJ,GAAc,CACxB,IAAI8H,GAAiB,EACrB,CAACL,EAASE,EAAYE,GAAY9O,SAAQgP,GAAoBA,EAAiBhf,QAAO2e,GAAOA,EAAI7Q,YAAcmJ,IAAajH,SAAQ2O,IAClII,GAAiB,EACjBJ,EAAIvgB,MAAQuP,EAAQsJ,QAGjB8H,GACHD,EAAW/Y,KAAK,CACd+H,UAAWmJ,EACX7Y,MAAOuP,EAAQsJ,SAKhB,IAAKkG,EACVjgB,KAAMwhB,EACNG,QAASD,EACTjR,QAASmR,IC7BN,MAIDG,GAAezL,IAAM,IAAUA,EACnC/a,QAAIsW,IAiCSmQ,OA9BgB,CAAC/B,EAAegC,EAAcld,KAC3D,GAAIkd,IAAiB/T,MAAO+T,IAAiBld,EAAY,CACvD,MAAMmd,GARa/gB,EAQqB8e,GARVgB,UAAY9f,EAAI8f,SAAS7a,MAAK+b,GAAMA,EAAGhB,MAAMnZ,SAFjD,cAY1B,YAAyB6J,IAArBqQ,EACK,KAGFH,GAAa,IAAK9B,KACpBiC,EACHjB,cAAUpP,EACV9T,KAAMgH,IAAeiO,KAAQoP,KAAkBC,OAE5C,GAAIJ,IAAiBlP,MAAgBhO,IAAeiO,KAAO,CAChE,MAAMsP,EAASC,aAAyBtC,EAAemC,MACvD,OAAOL,GAAa,IAAK9B,KACpBqC,EACHvkB,KAAMqkB,OAEH,GAAIH,IAAiBjP,MAASjO,IAAegO,KAAc,CAChE,MAAMuP,EAASC,aAAyBtC,EAAeoC,MACvD,OAAON,GAAa,IAAK9B,KACpBqC,EACHvkB,KAAMskB,OA7BWlhB,MAiCrB,OAAO4gB,GAAa9B,ICpBPuC,OAdIC,IACjB,IAAIC,EACAC,EACJ,MAAO,IAAIC,KACLF,GAAYE,EAAKxe,SAAWse,EAASte,QAAUwe,EAAKC,OAAM,CAACC,EAAKC,IAAMD,IAAQJ,EAASK,OAI3FL,EAAWE,EACXD,EAAYF,KAAMG,IAJTD,ICQb,MAAMK,WAAsBnqB,IAAMC,UAKhCC,YAAYC,GACVC,MAAMD,GADW,KAJnBsB,MAAQ,CACN2oB,cAAc,GAGG,KAMnBC,kBAAoB,KAClB/pB,KAAKC,SAAS,CACZ6pB,cAAc,KANhB9pB,KAAKgqB,iCAAmCX,GAAWjB,IACnDpoB,KAAKiqB,+BAAiCZ,GAAWR,IASnDznB,SACE,MAAM,cACJ0lB,EADI,WAEJlb,EAFI,KAGJjE,EAHI,YAIJwP,EAJI,gBAKJ+S,GACElqB,KAAKH,MAET,IAAKinB,EACH,OAAO,cAAC,GAAD,CAAwBV,QAAStgB,IAAKC,EAAE,wBAGjD,MAAMokB,EAAc,CAClBxiB,OACAwP,cACAvL,aACA3K,MAAO,CACL3C,OAAQ4rB,GAEVpD,cAAe9mB,KAAKiqB,+BAA+BnD,EAAenf,EAAK/C,KAAMgH,IAG/E,OAAQA,GACN,KAAK8F,KACL,KAAKmI,KACL,KAAKD,KAED,OAAO,sCACS5Z,KAAKmB,MAAM2oB,cAAgB,qBAAK7oB,MAAOkpB,EAAYlpB,MAAxB,SACrB,cAAC,GAAD,MAER,cAAC,KAAD,CAAqBoB,GAAIrC,KAAK8c,QAAQza,GAAIykB,cAAe9mB,KAAKgqB,iCAAiCG,EAAYrD,cAAeqD,EAAYhT,aAAc4S,kBAAmB/pB,KAAK+pB,kBAAmBK,cAAc,EAAMnpB,MAAOkpB,EAAYlpB,WAIxP,KAAK8T,KAED,OAAO,cAAC,GAAD,CAAW8S,aAAc7nB,KAAKgqB,oCAAsCG,IAG/E,QAGI,OADAA,EAAYrD,cAAgB9mB,KAAKgqB,iCAAiCG,EAAYrD,cAAeqD,EAAYhT,aAClG,cAAC,GAAD,IAAmBgT,MAcpCN,GAAc5M,aAAe,CAC3B5a,GAAI6a,IAAUC,QASDrY,oBANS,CAAC3D,EAAO2kB,KACvB,CACLgB,cAAenO,GAAkBxX,EAAO0T,aAAmBiR,EAASne,UAIzD7C,CAAyB+kB,I,sBC/FxC,MAAMQ,WAA2B3qB,IAAMC,UACrCC,YAAYC,GACVC,MAAMD,GACNG,KAAKmB,MAAQ,CACXmpB,YAAY,GAIhBC,kBAAkB3c,EAAO4c,GACvBxqB,KAAKC,SAAS,CACZqqB,YAAY,IAEdnd,QAAQC,IAAI,UAAWQ,GACvBT,QAAQC,IAAI,SAAUod,GAGxBppB,SACE,OAAIpB,KAAKmB,MAAMmpB,WACN,oBAAGxpB,UAAWC,KAAQyE,UAAtB,UACO,sBAAM1E,UAAWC,KAAQqC,KAAzB,SACI,cAAC+c,GAAD,MAEJ,sBAAMrf,UAAWC,KAAQqlB,QAAzB,SACKtgB,IAAKC,EAAE,wDAKrB/F,KAAKH,MAAMjB,UAQPyrB,U,qBC7BAI,OATS,EACtBC,mBAEOA,EAAgB,qBAAK5pB,UAAWC,KAAQ4pB,gBAAxB,SAA0CD,IAAuB,K,4CCW3EE,OAXU,EACvB5nB,aACI,wBAAQ4B,KAAK,SAAS9D,UAAWC,KAAQ8pB,iBAAkB7nB,QAASA,EAASyN,MAAO3K,IAAKC,EAAL,eAApF,SACE,cAAC,KAAD,CAAY9E,MAAO,CACvBe,KAAM2B,IAAOmnB,YCJjB,MAeMpmB,GAAqB,CACzB8W,0BAEa1W,mBAAQ,KAAMJ,GAAdI,EAlBS,EACtBimB,SACAvP,2BAIO,qBAAK1a,UAAWC,KAAQ4pB,gBAAxB,SACG,cAAC,GAAD,CAAkB3nB,QAHH,IAAMwY,EAAsBuP,SCHxCC,OALK,IAAM,sBAAKnpB,MAAM,6BAA6BvD,OAAO,KAAKwD,QAAQ,YAAYrD,MAAM,KAAKuD,KAAM2B,IAAO0M,QAAhG,UAClB,sBAAMtO,EAAE,gBAAgBC,KAAK,SAC7B,sBAAMD,EAAE,wG,sBCODkpB,OANM,IAAM,qBAAKnqB,UAAWC,KAAQmqB,QAAxB,SACnB,cAAC,IAAD,CAASxpB,QAASoE,IAAKC,EAAE,mDAAoDU,UAAU,SAAvF,SACI,cAAC0kB,GAAD,QCRL,MAAMC,GAAO,OACPC,GAAM,MACNC,GAAO,OACPC,GAAQ,QACRC,GAAe,eACfC,GAAaC,GAAQ,CAACN,GAAMC,IAAKxc,SAAS6c,GAC1CC,GAAcD,GAAQ,CAACH,GAAOC,IAAc3c,SAAS6c,GACrDE,GAAaF,GAAQA,IAASJ,GCYrCO,GAAansB,IAAMosB,YAAW,EAClCC,gBACAtb,QACAub,iBACGC,GACFhe,KACD,MAAMie,EAhBkBF,KACjB,CACL,CAACV,IAAOb,GACR,CAACW,IAAOe,GACR,CAACX,IAAeQ,EAAcI,GAAgB,OAYhCC,CAAkBL,GAAaD,GAC/C,OAAO,sBAAKjrB,UAAWC,KAAQurB,eAAgBre,IAAKA,EAA7C,UACO,mBAAGnN,UAAWC,KAAQwrB,UAAtB,SAAkC9b,IACjCyb,EAAU,cAACA,EAAD,IAAaD,IAAW,WAGnDJ,GAAW3hB,YAAc,aAMVpF,mBAAQ,KAAM,KAAM,KAAM,CACvCgnB,YAAY,GADChnB,CAEZ+mB,I,qFC3BH,MAAMW,GAAW,CACfxqB,KAAM2B,IAAO0M,SAGToc,GAAoB,CAAC5sB,EAAOid,KAChC,MAAO4P,EAAYC,GAAiB5tB,mBAAS,OACvC,KACJ4I,EADI,cAEJmf,EAFI,mBAGJ8F,EAHI,WAIJhhB,GACE/L,EACEgtB,EAAgBC,aAAoBnlB,EAAK/C,MAEzCmoB,EAAc,KAClBC,IACAJ,EAAmBC,EAAgB/S,KAAeF,OAG9CqT,EAAc,KAClBD,IACAJ,EAAmBC,EAAgB9S,KAAcF,OAG7CqT,EAAY,KAChBF,IACAJ,EAAmB7X,OAefiY,EAAY,IAAML,GAAc,GAEhC/nB,EAAOkiB,EAAcliB,MAAQ+C,EAAK/C,KAClCuoB,GAAaC,aAAcxoB,KAAUyoB,aAAezoB,IAASA,IAAS0oB,MAAkB1oB,IAAS2oB,KACjGC,EAA0B3tB,EAAM4tB,aAAe3nB,IAAKC,EAAL,oCAA6CD,IAAKC,EAAL,oCAE5F2nB,EAAkB,IAAM,qCACnB9hB,IAAeiO,MAASjO,IAAemO,MAAe,cAAC,IAAD,CAAUrJ,OAAK,EAAC5N,MAAOgD,IAAKC,EAAE,iBAAkB/C,QAASiqB,EAAa7pB,KAAM,cAAC,KAAD,CAAWnC,MAAOurB,OACpJ5gB,IAAegO,MAAgBhO,IAAekO,MAAgB,cAAC,IAAD,CAAUpJ,OAAK,EAAC5N,MAAOgD,IAAKC,EAAE,iBAAkB/C,QAAS+pB,EAAa3pB,KAAM,cAAC,KAAD,CAAWnC,MAAOurB,OApB1ImB,aAAWhmB,EAAK/C,OAqBdgH,IAAemJ,MAAO,cAAC,IAAD,CAAUrE,OAAK,EAAC5N,MAAOgD,IAAKC,EAAE,eAAgB/C,QAASkqB,EAAW9pB,KAAM,cAAC,KAAD,CAASnC,MAAOurB,UAGvI5H,EAAY1W,sBAClB,OAAOqY,aAAkB3a,GAAcjE,EAAK/C,MAAQ,qCAC1C,qBAAKqJ,IAAK2W,EAAV,SACI,cAAC,IAAD,CAAQU,OAAK,EAACzD,WAAS,EAAC7e,QAjBrB,IAAM2pB,GAAc,GAiBoBpc,SAAS,4BAApD,SACI,cAACwP,GAAD,QAGP2M,GAAc,cAAC,IAAD,CAASjO,UAAWmG,EAAWne,UAAU,aAAakY,OAAO,EAAOD,eAAgBsO,EAApF,SACP,eAAC,IAAD,WACKG,GAAa,qCACN,cAACO,EAAD,IACA,cAAC,IAAD,OAER,cAAC,IAAD,CAAUhd,OAAK,EAACtN,KAAM,cAAC,KAAD,CAAYnC,MAAO,CACvDe,KAAM,aACDc,MAAOgD,IAAKC,EAAE,0BAA2B,CAC9C6nB,QAASC,aAAWlmB,EAAK/C,QACvBoM,KAAM8c,aAAQnmB,EAAMmV,EAAQza,IAAK4D,OAAO,WAC5B,cAAC,IAAD,CAAUyK,OAAK,EAACtN,KAAM,cAAC4c,GAAD,IAAkBld,MAAO0qB,EAAyBxqB,QAxC5D,KAChCnD,EAAMkuB,iBAEFrB,GACFM,eAuCQ,MAWdP,GAAkBxP,aAAe,CAC/B5a,GAAI6a,IAAUC,QAEDsP,U,4CC9Ff,MAAMuB,GAAa,CAACnuB,EAAOid,IAAY,sBAAKrZ,YAAU,uBAAf,UAC/B,oBAAI3C,UAAWC,KAAQktB,OACvB,qBAAKntB,UAAWC,KAAQmtB,gBAAxB,SACI,cAAC,KAAD,CAA0B7rB,GAAIya,EAAQza,GAAIsF,KAAM9H,EAAM8H,KAAM/C,KAAM/E,EAAM8H,KAAK/C,KAAKgK,cAAexM,GAAIyS,aAAmBhV,EAAM8H,MAAOimB,QAAQ,mBAIzJI,GAAW/Q,aAAe,CACxB5a,GAAI6a,IAAUC,OAAOC,YAKR4Q,UCIR,MAAMG,WAAaxuB,YAMxBC,YAAYC,EAAOid,GACjBhd,MAAMD,GADoB,KAL5BsB,MAAQ,CACNitB,YAAY,EACZC,cAAc,GAGY,KAwB5BC,aAAejF,IAAW,IAAMkF,SAxBJ,KAyB5BR,eAAiB,KACf/tB,KAAKC,SAAS,CACZmuB,YAAapuB,KAAKmB,MAAMitB,YACvBpuB,KAAKH,MAAM2uB,qBAAqBxuB,KAAKH,MAAM8H,KAAKvF,MA5BzB,KA8B5BqsB,cAAgB7pB,IACdA,IAAS5E,KAAK0uB,iBAAmB1uB,KAAKH,MAAM4uB,cAAczuB,KAAKH,MAAM8H,KAAKvF,GAAIwC,IA/BpD,KAiC5B8pB,cAAgB,IACV1uB,KAAKH,MAAM8uB,UACN3uB,KAAKH,MAAM8H,KAAK/C,KAGlB5E,KAAKH,MAAM+L,YAAc5L,KAAKH,MAAM8H,KAAK/C,KAtCtB,KAwC5BgqB,mBAAqB,KACnB,MAAMC,EAAmB7uB,KAAKH,MAAM8H,KAAKmnB,eAAiB9uB,KAAK+uB,UAAU3gB,QAAQ4gB,aHpDjD,GGoDuFC,GACvH,OAAOjvB,KAAKkvB,yBAAyBL,EAAkB7uB,KAAKmvB,WAAanvB,KAAKmvB,WAAWC,aAAe,KAAM3D,GAAWzrB,KAAKH,MAAMksB,gBAAkBJ,GAAY3rB,KAAKH,MAAMksB,iBAxC7K/rB,KAAKqC,GAAKya,EAAQza,GAClBrC,KAAKmvB,WAAazvB,IAAMwO,YACxBlO,KAAK+uB,UAAYrvB,IAAMwO,YACvBlO,KAAKkvB,yBAA2B7F,IAAW,CAACwF,EAAkBQ,EAAgBC,IAAmBA,GAAiBD,GAAqCR,IAGzJ,0BACE7uB,KAAKH,MAAM0vB,0BAA0B3a,GAAsB5U,KAAKH,MAAM8H,OAEtE,IACM3H,KAAKH,MAAM2vB,sBAAwB5D,GAAW5rB,KAAKH,MAAMksB,sBACrD9pB,EAAsBwtB,aAAsBzvB,KAAKH,MAAM8H,KAAK/C,MAAOiQ,aAAmB7U,KAAKH,MAAM8H,OAEzG,MAAOkJ,GACP1D,QAAQC,IAAIyD,GAGd7Q,KAAKC,SAAS,CACZouB,cAAc,IAyBlBjtB,SACE,MAAM,KACJuG,EADI,cAEJokB,EAFI,YAGJ5U,GACEnX,KAAKH,OACH,WACJuuB,GACEpuB,KAAKmB,MACHyK,EAAa5L,KAAK0uB,gBAClBhE,EAAgB,cAAC,GAAD,CAAmB/iB,KAAMA,EAAMmf,cAAe9mB,KAAKH,MAAMinB,cAAe8F,mBAAoB5sB,KAAKyuB,cAAeV,eAAgB/tB,KAAK+tB,eAAgBniB,WAAYA,EAAY6hB,aAAcW,IACjN,OAAO,qCACK,cAAC,GAAD,CAAY3d,MAAOif,aAAqB/nB,GAAOojB,OAAQpjB,EAAKvF,GAAIsoB,cAAeA,EAAezc,IAAKjO,KAAK+uB,UAAWhD,cAAeA,EAAeC,YAAarkB,EAAKgoB,YACnK,cAAC,GAAD,UACI,qBAA0C7uB,UAAU,yBAAyBmN,IAAKA,GAAOjO,KAAKmvB,WAAalhB,EAA3G,SACKjO,KAAKmB,MAAMktB,cAAgB,cAAC,GAAD,CAAe1mB,KAAMA,EAAMiE,WAAYA,EAAYuL,YAAaA,EAAa+S,gBAAiBlqB,KAAK4uB,wBADzH5uB,KAAKsuB,aAAanX,MAI/ByU,GAAWG,IAAkBqC,EAAa,cAAC,GAAD,CAAYzmB,KAAMA,IAAW,SAKxFwmB,GAAKlR,aAAe,CAClB5a,GAAI6a,IAAUC,QAchBgR,GAAKxsB,aAAe,CAClBgG,KAAM,GACN6mB,qBAAsBoB,SAASC,UAC/B/I,cAAe,IAGjB,MAWMpiB,GAAqB,CACzB+pB,cnCtGyC,CAACrsB,EAAIwJ,KAC/B,CACbhH,KAAMyG,GACNjJ,KACAwJ,emCmGF2jB,oBAAqBzW,IAERhU,oBAfS,CAAC3D,EAAO2kB,KAAc,IAAD,EAC3C,MAAM3O,EAAesU,GAAW3F,EAASiG,eAA8C9U,GAA7BC,GAAoB/V,GAC9E,MAAO,CACLyK,WAAYK,GAA2B9K,EAAD,UAAQ2kB,EAASne,YAAjB,aAAQ,EAAevF,IAC7DusB,UAAW7b,GAAc3R,GACzBgW,cACA2P,cAAenO,GAAkBxX,EAAO0T,aAAmBiR,EAASne,OACpE6nB,qBAAsB9M,GAAkDvhB,MAQpCuD,GAAzBI,CAA6CqpB,ICnI5D,MAAMltB,GAAQ,CACZ6uB,gBAAiBnsB,IAAOosB,QACxBC,OAAQ,OACR1xB,OAAQ,MACR0e,OAAQ,mBAKKiT,OAFF,IAAM,oBAAIhvB,MAAOA,K,QCE9B,MAAMivB,GAAU,UACVC,GAAe,CACnB,CAACD,IAAU,UACXE,kBAAmB,aACnBC,OAAQ,SACRC,OAAQ,UAEJrvB,GAAQ,CACZwU,KAAM,CACJ8a,cAAe,OACfC,YAAa,OAEfC,OAAQ,CACNvgB,UAAW,SACXC,SAAU,OACVugB,aAAc,OAEhBC,OAAQ,CACNxgB,SAAU,OACVygB,WAAY,OACZ5T,OAAQ,EACR5Y,MAAOT,IAAOI,SAEhB8sB,QAAS,CACPzsB,MAAOT,IAAOI,QACdoM,SAAU,OACVygB,WAAY,OACZE,UAAW,OACXC,SAAU,WAId,MAAMC,WAAqBrxB,YAAW,eAAD,oBACnCwB,MAAQ,CACN4S,SAAU,IAFuB,KAYnCkd,eAAiBxd,IACf,MAAMyd,EAAgBzd,EAAG,YAAQA,EAAI0d,YAAZ,YAA2B1d,EAAIrR,IAAO,GAC/D,MAAM,GAAN,OAAUpC,KAAK8c,QAAQsK,QAAvB,+BAAqD8J,IAdpB,KAgBnCE,iBAAmB3d,IACjB,MAAM4d,EAAY5d,EAAIoE,SAASuH,OAAO,GAAG,GACzC,OAAOiS,EAAUV,OAASU,EAAUV,OAAOzmB,YAAc,IAlBxB,KAoBnConB,gBAAkB,KAChB,MAAMC,EAAY3F,GAAW5rB,KAAKH,MAAMksB,eAAiB,OAAS,KAClE,OAAO/rB,KAAKH,MAAMgY,SAAS7P,KAAIyL,IAC7B,MAMMkd,EAASld,EAAI0d,cAAgBjB,GAAUlwB,KAAKoxB,iBAAiB3d,GAAO0c,GAAa1c,EAAI0d,aACrFK,EAAa/d,EAAIge,KAAkB,KAAX,SACxBJ,EAAY5d,EAAIoE,SAASuH,OAAO,GAAG,GACnCsS,EAAUL,EAAUzmB,YAC1B,OAAO,qBAAI9J,UAAS,uBAAkBywB,GAA0BvuB,QAV1C,KAChB4oB,GAAW5rB,KAAKH,MAAMksB,iBACxB4F,SAASC,SAAS5gB,KAAOhR,KAAKixB,eAAexd,KAQ1C,UACO,oBAAG3S,UAAS,wBAAmB0wB,GAA/B,UACK/d,EAAIvJ,YADT,KACwBuJ,EAAIoe,aAD5B,OAGA,oBAAG5wB,MAAOA,GAAM0vB,OAAhB,UACKA,EADL,MACgBmB,YAAWJ,EAAS1xB,KAAKmB,MAAM4S,aAE/C,mBAAG9S,MAAOA,GAAM4vB,QAAhB,SAA0BQ,EAAUxpB,SAPM4L,EAAIrR,QA5BhE,0BACE,MAAM2R,QAAiB/T,KAAK8c,QAAQza,GAAG+J,YAAY2lB,aAAavlB,IAAI,eACpExM,KAAKC,SAAS,CACZ8T,aAqCJ3S,SACE,OAAO,qCACK,cAAC,GAAD,CAAYqP,MAAO3K,IAAKC,EAAE,YAAaglB,OAAQ/qB,KAAKH,MAAM8H,KAAKvF,GAAI2pB,cAAe/rB,KAAKH,MAAMksB,cAAeC,YAAahsB,KAAKH,MAAM8H,KAAKgoB,YACzI,cAAC,GAAD,IACC3vB,KAAKH,MAAMgY,SAAS5M,OAAS,GAAK,sBAAKnK,UAAU,yBAAf,UAC3B,oBAAIG,MAAOA,GAAMwU,KAAjB,SAAwBzV,KAAKsxB,oBAC7B,qBAAKrwB,MAAOA,GAAMwvB,OAAlB,SACI,mBAAGzf,KAAMhR,KAAKixB,iBAAd,SACKnrB,IAAKC,EAAE,+BAcxCirB,GAAa/T,aAAe,CAC1B5a,GAAI6a,IAAUC,OACdiK,QAASlK,IAAU8U,QAUNC,OADWntB,aANF3D,IACf,CACL0W,SAAUpO,OAAOC,OAAOkO,GAAiBzW,OAIM,KAAzB2D,CAA+BksB,I,qBC7F1CkB,OAtBUryB,GAAS,qCAC1B,cAAC,GAAD,CAAY4Q,MAAO3K,IAAKC,EAAE,qCAAsC,CACpEnB,KAAM/E,EAAM8H,KAAK/C,OACfmmB,OAAQlrB,EAAM8H,KAAKvF,GAAI2pB,cAAelsB,EAAMksB,cAAeC,YAAansB,EAAM8H,KAAKgoB,YACjF,qBAAK1uB,MAAO,CAChBkxB,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZ/zB,OAAQ,OAJJ,SAMI,cAAC,KAAD,CAAmB2C,MAAO,CAChCxC,MAAO,IACPH,OAAQ,IACRg0B,MAAO,UACNluB,MAAM,kBCNEmuB,OAVS,EACtBzxB,eACI,sBAAKA,UAAWA,EAAWe,MAAM,6BAA6BC,QAAQ,YAAYE,KAAM2B,IAAO6uB,QAA/F,UACE,sBAAMzwB,EAAE,gBAAgBC,KAAK,SAC7B,sBAAMD,EAAE,sICMD0wB,OAVI,EACjB3xB,eACI,sBAAKA,UAAWA,EAAWe,MAAM,6BAA6BpD,MAAM,KAAKH,OAAO,KAAKwD,QAAQ,YAAYE,KAAM2B,IAAOmnB,OAAtH,UACE,sBAAM/oB,EAAE,kFACR,sBAAMA,EAAE,gBAAgBC,KAAK,Y,0BCMrC,MAAM0wB,GAAe/qB,GAAQ+S,KAAY/S,EAAK/C,MAAMya,YAI9CsT,GAAW,CAAC9yB,EAAOid,KACvB,MAAM,KACJnV,EADI,cAEJokB,EAFI,uBAGJ6G,GACE/yB,EACEgzB,EARgBlrB,IAAQoD,YAAQpD,EAAK+S,KAAY/S,EAAK/C,MAAM+V,WAAWhR,QAAO,CAAChC,EAAMmrB,EAAOC,IAAUA,EAAMxV,WAAUyV,GAAMA,EAAG5wB,KAAOuF,EAAKvF,OAAQ0wB,IAQpIG,CAAgBtrB,GAE/BmmB,EAAUoF,IACd,MAAMC,EAAe,wBAAQryB,UAAWC,KAAQqyB,aAAcpwB,QAAS,IAAM4vB,EAAuBjrB,EAAMurB,GAArF,SACT,cAAC,GAAD,CAAYpyB,UAAWC,KAAQsyB,eAE3C,OAAO,qCACK,mBAAGvyB,UAAWC,KAAQwC,KAAMtC,MAAO,CAC3CmD,MAAOT,IAAO2vB,SACbtiB,KAAM6L,aAAWlV,EAAK/C,KAAMsuB,EAAapW,EAAQza,IAF1C,SAGK6wB,EAAYjpB,OAEhBwhB,GAAWM,GAAiBoH,EAAe,SAI1D,OAAO,qCACG,cAAC,GAAD,CAAY1iB,MAAOiiB,GAAa/qB,GAAOojB,OAAQpjB,EAAKvF,GAAI2pB,cAAeA,EAAeC,YAAarkB,EAAKgoB,YACxG,cAAC,GAAD,IACA,qBAAK7uB,UAAU,yBAAf,SACI,oBAAIA,UAAWC,KAAQ0U,KAAvB,SACKod,EAAa7qB,KAAIkrB,GAAe,qBAAIpyB,UAAWC,KAAQ4G,KAAvB,UACzB,cAAC4rB,GAAD,CAAiBzyB,UAAWC,KAAQyyB,WACnC1F,EAAQoF,KAFkDA,EAAY9wB,cAcnGuwB,GAAS1V,aAAe,CACtB5a,GAAI6a,IAAUC,QAEDrY,mBAAQ,KAAM,CAC3B8tB,uBC7DoC,CAACpV,EAAe9b,IAAYgM,IAChE,MAAM2P,EAAe3C,KAAY8C,EAAc5Y,MAAM+V,SAC/C8Y,EAAajW,EAAcH,GAAc1T,QAAOhC,GAAQA,EAAKvF,KAAOV,EAAQU,KAE9EqxB,EAAWxoB,QACbuS,EAAcH,GAAgBoW,EAC9B/lB,EAAS6N,GAAsBiC,KAE/B9P,EAAS8N,GAAsBgC,MDoDpB1Y,CAEZ6tB,I,+BE5DI,MAAMe,GAAsB,sBACtBC,GAAwB,wBACxBC,GAA2B,2BAC3BC,GAA6B,6BAC7BC,GAA8B,8BAC9BC,GAA8B,8BAC9BC,GAAgC,GACvCC,GAA0B,GACnBC,GAA4B,CACvC9xB,GAAI,GACJ6H,KAAM,GACNY,OAAQ,GACRV,YAAa,GACba,eAAgBipB,IAiGX,MAAME,GAAyBhzB,GAASA,EAAMizB,eAExCC,GAAiBlzB,IAAU4R,IAAQ5R,EAAMizB,gBAGzCE,GAA0BnzB,IAAU,IAAD,EAC9C,OAAO,UAAAgzB,GAAuBhzB,UAAvB,eAA+B6J,iBAAkBipB,IC1GpDhzB,GAAQ,CACZszB,QAAS,CACPtkB,QAAS,OACTukB,WAAY,WACZ5D,WAAY,QAEd6D,UAAW,CACTtkB,SAAU,OACVukB,YAAa,SACbj2B,MAAO,MACPue,OAAQ,SACRmV,QAAS,QACTvB,WAAY,QAEdprB,UAAW,CACTkrB,aAAc,OACd3gB,UAAW,SAqFAjL,oBAxBS,CAAC3D,EAAO2kB,KAE9B,IAAI/d,EAGFA,EAJqBssB,GAAelzB,GAI5BmzB,GAAwBnzB,GACvBsqB,GAAW3F,EAASiG,eACrB9Y,GAAuB9R,GAEvBoI,GAAmBpI,GAG7B,MAAMwG,EAAOI,EAAMkF,MAAKtF,GAAQA,EAAKvF,KAAO0jB,EAASne,KAAKvF,KAC1D,MAAO,CACLyF,KAAMF,EAAOA,EAAKE,KAAO,MAUW,CACtC0T,0BADazW,EAjFEjF,IACf,MAAM,KACJ8H,EADI,cAEJokB,EAFI,KAGJlkB,EAHI,sBAIJ0T,GACE1b,EAEE80B,EAAet0B,IACnB,MAAMu0B,EAAc,IAAKjtB,EACvBE,KAAMxH,EAAM4F,OAAO3G,OAErBic,EAAsBqZ,IAGlBC,EAAW,KACf,MAAMC,EAAerrB,OAAO2J,OAAO,GAAInS,GAAMwzB,UAAWxzB,GAAMszB,SAC9D,OAAO,qBAAKzzB,UAAU,yBAAyBG,MAAOA,GAAMuE,UAArD,SACK,cAAC,UAAD,CAAgBvE,MAAO6zB,EAAvB,SAAsCjtB,OAI9CktB,EAAW,IACR,qCACK,cAAC,GAAD,CAAYtkB,MAAO3K,IAAKC,EAAE,aAAcglB,OAAQpjB,EAAKvF,GAAI2pB,cAAeA,IACxE,cAAC,GAAD,IACA,qBAAKjrB,UAAU,yBAAf,SACI,cAAC,UAAD,CAAgBk0B,OAAQL,EAAxB,SACI,cAAC,KAAD,CAAOr1B,MAAOuI,EAAMotB,WAAS,EAACC,WAAS,EAACj0B,MAAOA,GAAMwzB,UAAW5uB,YAAaC,IAAKC,EAAE,iBAAkBC,SAAU2uB,WAMhIQ,EAAY,KAChB,MAAML,EAAerrB,OAAO2J,OAAO,GAAInS,GAAMwzB,UAAWxzB,GAAMszB,SAC9D,OAAO,qCACM10B,EAAM8H,KAAKgoB,UAAY,cAACvD,GAAD,IAAoB,KAC5C,qBAAKtrB,UAAU,yBAAyBG,MAAOA,GAAMuE,UAArD,SACI,cAAC,UAAD,CAAgBvE,MAAO6zB,EAAvB,SAAsCjtB,UAKxD,IAAIutB,EAUJ,OAPEA,EADE3J,GAAWM,GACFgJ,EACFhJ,IAAkBP,GAChB2J,EAEAN,EAGN,mCAAGO,SC9EZ,MAAMC,GAAe,CAACC,EAAY3tB,EAAMwP,KACtC,IAAIoe,EAAS,UAAMD,EAAWE,UAAjB,4BAA8C7tB,EAAKvF,IAEhE,GAAI+U,EAAW,IAAqBA,EAAW,GAAkBlM,OAAQ,CACvE,MAAMwqB,EAAQte,EAAW,GAAkBnP,KAAI0tB,GAAYA,EAASC,KAAKlrB,MAAM,KAAK2U,OAAO,GAAG,KAC9FmW,GAAS,uBAAoBE,EAAM/qB,KAAK,MAG1C,OAAO6qB,GAGHK,GAAU,EACd7J,gBACApkB,OACAwP,eACC2F,KAAa,IAAD,MACb,IAAIwY,EACJ,MAAMO,EAASluB,EAAKkuB,OAEhBA,IACFP,EAAaxY,EAAQza,GAAGyzB,OAAOC,cAAc9oB,MAAK+oB,GAAOA,EAAIrpB,MAAQkpB,KAGvE,MAAM5N,GAAsB,QAAV,EAAAqN,SAAA,mBAAY9S,gBAAZ,mBAAsByT,uBAAtB,eAAuChO,YAAa8D,IAAkBX,GACxF,OAAOkK,GAAcA,EAAWrrB,MAAQqrB,EAAWE,UAAY,sCACnDvN,GAAa,qCACP,cAAC,GAAD,CAAYxX,MAAO6kB,EAAWrrB,KAAM8gB,OAAQpjB,EAAKvF,GAAI2pB,cAAeA,EAAeC,YAAarkB,EAAKgoB,YACrG,cAAC,GAAD,OAER,wBAAQlf,MAAO6kB,EAAWrrB,KAAMisB,IAAKb,GAAaC,EAAY3tB,EAAMwP,GAAcrW,UAAYmnB,EAAuC,sCAA3B,yBAAkEhnB,MAAO,CACzL+uB,OAAQ,aAEA,qCACF,cAAC,GAAD,CAAYvf,MAAK,UAAKolB,EAAL,oBACjB,cAAC,GAAD,IACA,qBAAK/0B,UAAU,yBAAyBG,MAAO,CACrDkxB,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZ/zB,OAAQ,OAJF,SAMI,cAAC,KAAD,CAAmB8F,MAAM,WAAWmC,UAAQ,EAACtF,MAAO,CAC5DxC,MAAO,IACPH,OAAQ,IACRg0B,MAAO,kBAWfsD,GAAQ3Y,aAAe,CACrB5a,GAAI6a,IAAUC,QAUDrY,oBAPS,CAAC3D,EAAO2kB,KAEvB,CACL3O,YAFmBsU,GAAW3F,EAASiG,eAA8C9U,GAA7BC,GAAoB/V,MAMjE2D,CAAyB8wB,ICvExC,MAAM30B,GAAQ,CACZ+b,OAAQ,YACR7M,SAAU,OACVygB,WAAY,OACZxsB,MAAOT,IAAO0M,SAgBD8lB,OAbIt2B,GACV,qCACG,cAAC,GAAD,CAAY4Q,MAAO3K,IAAKC,EAAE,UAAWglB,OAAQlrB,EAAM8H,KAAKvF,GAAI2pB,cAAelsB,EAAMksB,cAAeC,YAAansB,EAAM8H,KAAKgoB,YACxH,mBAAG1uB,MAAOA,GAAV,SACK6E,IAAKC,EAAE,mFCZTqwB,OAFO,IAAM,wB,sBCS5B,MAAMC,GAAqB,EACzBpsB,OACAE,cACAgN,cACAzL,qBAYO,sBAAK5K,UAAWC,KAAQu1B,UAAxB,UACG,mBAAGx1B,UAAWC,KAAQkJ,KAAtB,SAA6BA,IAC5ByB,GAAmBvB,GAAe,mBAAGrJ,UAAWC,KAAQoJ,YAAtB,SAAoCA,IACtEgN,EAAYlM,OAAS,GAAK,qCACnB,mBAAGnK,UAAWC,KAAQw1B,YAAtB,SACKzwB,IAAKC,EAAE,qBAfJ,MACxB,MAAMywB,EAAYrf,EAAYnP,KAAI,EAChCiC,OACAP,YACI,qBAAI5I,UAAWC,KAAQ01B,eAAvB,UACOxsB,EADP,KACeP,EAAO1B,KAAI0uB,GAAOA,EAAIzsB,OAAMS,KAAK,QADJT,KAGlD,OAAO,oBAAInJ,UAAWC,KAAQ41B,WAAvB,SAAoCH,KAU1BI,SAWrBP,GAAmB10B,aAAe,CAChCwI,YAAa,GACbF,KAAM,GACNyB,iBAAiB,GAiBJ5G,oBAdS3D,IACtB,MAAMiB,EAAK0J,GAAe3K,GACpBsqB,EAAa3Y,GAAc3R,GAC3B01B,EAAgB1tB,GAAkBhI,EAAOiB,IAAO0G,GAGtD,MAAO,CACLmB,KAHWwhB,EL8DuBtqB,IAASgzB,GAAuBhzB,GAAO8I,KK9DjD6sB,CAAuB31B,IAAU2E,IAAKC,EAAE,sBAAwB8wB,EAAc3sB,YAItGC,YAHkBshB,EL8DuBtqB,IAASgzB,GAAuBhzB,GAAOgJ,YK9DjD4sB,CAA8B51B,GAAS01B,EAAczsB,mBAIpF+M,YAAaC,GAAqBjW,GAClCuK,gBAAiBM,GAA4B7K,MAIlC2D,CAAyBuxB,ICpDxC,MAsCalI,GAAOtuB,IAClB,MAAMm3B,EAvCYpyB,KAClB,OAAQA,GACN,KAAK8M,KACL,KAAKkI,KACL,KAAKC,KACL,KAAK9E,KACL,KAAKgF,KACL,KAAKD,KACH,OAAOmd,GAET,KAAKhd,KACH,OAAO+W,GAET,KAAKhV,KACL,KAAKC,KACL,KAAKF,KACH,OAAO4W,GAET,KAAK/qB,KACH,OAAOsvB,GAET,KAAKjvB,KACH,OAAOkuB,GAET,KAAKja,KACH,OAAO0Z,GAET,KAAK7a,KACH,OAAOqb,GAET,KAAKjb,KACH,OAAOkb,GAET,QACE,OAAOnE,KAKMiF,CAAYt3B,EAAM8H,KAAK/C,MACxC,OAAO,cAACoyB,EAAD,CAAUrvB,KAAM9H,EAAM8H,KAAMokB,cAAelsB,EAAMksB,cAAeyC,qBAAsB3uB,EAAM2uB,wB,8CC9CrG,MAAM4I,WAAoCz3B,YAAW,eAAD,oBAYlDwB,MAAQ,CACNk2B,YAAY,GAboC,KAelDC,aAAe,KAfmC,KAgBlDC,kBAAoB,KAhB8B,KAiBlDC,eAAiB,CACfC,SAAS,GAGXC,kBACE,IAAK13B,KAAKs3B,aACR,OAGF,MAAMK,EAAW33B,KAAKH,MAAM+3B,aAAer5B,OAAOC,YAC5Cq5B,EAAO73B,KAAKs3B,aAAaQ,wBAE3BD,EAAKE,QAAUJ,GAAYE,EAAKrT,IAAMjmB,OAAOC,YAAcm5B,IAC7D33B,KAAKC,SAAS,CACZo3B,YAAY,IAEdr3B,KAAKg4B,iBAITC,kBAAmB,IAAD,EAChBj4B,KAAKu3B,kBAAoBr4B,KAAS,IAAMc,KAAK03B,mBAAmB13B,KAAKH,MAAMq4B,YAC3E,UAAAvG,SAASwG,uBAAuB,qBAAqB,UAArD,SAAyDh5B,iBAAiB,SAAUa,KAAKu3B,kBAAmBv3B,KAAKw3B,gBAGnHQ,gBAAiB,IAAD,EACd,UAAArG,SAASwG,uBAAuB,qBAAqB,UAArD,SAAyD/4B,oBAAoB,SAAUY,KAAKu3B,kBAAmBv3B,KAAKw3B,gBAGtHrQ,oBACEnnB,KAAKi4B,kBACLj4B,KAAK03B,kBAGPhQ,uBACE1nB,KAAKg4B,gBAGP52B,SACE,MAAM,SACJxC,EADI,UAEJkC,EAFI,MAGJG,KACGpB,GACDG,KAAKH,OACH,WACJw3B,GACEr3B,KAAKmB,MACHi3B,EAAaC,KAAKx4B,EAAO,CAAC,cAAe,eAAgB,YAAa,eAC5E,OAAO,qBAAKoO,IAAKA,GAAOjO,KAAKs3B,aAAerpB,EAAKhN,MAAOA,EAAOH,UAAWA,EAAW2C,YAAA,wBAA4B5D,EAAMkrB,WAAcqN,EAA9H,SACMf,GAAcz4B,KAnEzBw4B,GAQGz1B,aAAe,CACpBu2B,WAZsB,IAatBN,aAZwB,KA2EbR,UC1Df,MAEanI,GAA8B,EACpC,MAAMqJ,WAAiB34B,YAAW,eAAD,oBACtCwB,MAAQ,CACNo3B,cAAe,IAFqB,KAItC/J,qBAAuBgK,IACrB,MAAMC,EAA4D,mBAAxCz4B,KAAKmB,MAAMo3B,cAAcC,IAA2Bx4B,KAAKmB,MAAMo3B,cAAcC,GACjGD,EAAgB,IAAKv4B,KAAKmB,MAAMo3B,eAEtCA,EAAcC,IAAcC,EAC5Bz4B,KAAKC,SAAS,CACZs4B,mBAVkC,KAsBtCG,eAAiBC,IACX34B,KAAKH,MAAMqmB,MACblmB,KAAKH,MAAM+4B,wBAAwBD,IAxBD,KA2BtCE,aAAe,CAAC1P,EAAQ2P,EAASvc,KAC/Bwc,aAAaxc,EAAQqN,GACrB,MAAMpM,EAAgBxd,KAAKH,MAAMmL,eAAeiC,MAAKtF,GAAQA,EAAKvF,KAAOma,EAAQqN,IAE7EpM,GAAiBwb,aAAoBxb,IACvCyb,aAAazb,IAhCqB,KAmCtC0b,wBAA0B1b,IACxB,MAAM2b,EAAen5B,KAAKmB,MAAMo3B,cAAc/a,EAAcpb,IAE5D,OAAI+2B,IAAiC,IAAjBA,EACX1vB,OAAO2J,OAAO,GAAIoK,EAAe,CACtClK,EAAGkK,EAAclK,EA3CD,KA+CbkK,GA5C6B,KA8CtC4b,iBAAmBzxB,IACjB,MAAM0xB,EAAiB,CAAC1xB,EAAK/C,KAAM5E,KAAKH,MAAMqmB,KAAO,OAAS,QAAQxb,KAAK,KAC3E,OAAO,cAAC,GAAD,CAA0C5J,UAAWu4B,EAAgBtO,OAAQpjB,EAAKvF,GAAlF,SACK,cAAC,GAAD,CAAMuF,KAAMA,EAAMokB,cAAe/rB,KAAKH,MAAMqmB,KAAOkF,GAAOE,GAAMkD,qBAAsBxuB,KAAKwuB,wBAD9D7mB,EAAKiiB,IAhDV,KAoDtC0P,kBAAoBvxB,GAASA,EAAMC,KAAIL,GAAQ3H,KAAKo5B,iBAAiBzxB,KAtCrE4xB,iCAAiCC,GAC3BA,EAAUtT,MACZlmB,KAAKC,SAAS,CACZs4B,cAAe,KAqCrBn3B,SACE,MAAM,KACJ8kB,EADI,UAEJza,EAFI,eAGJT,GACEhL,KAAKH,MAET,IAAK4L,IAAcT,EAAeC,OAChC,OAAO,cAAC,GAAD,CAAkBpD,KAAM/B,IAAKC,EAAE,0CAGxC,MAAMgC,EAAQme,EAAOlb,EAAiBA,EAAehD,IAAIhI,KAAKk5B,yBAC9D,OAAO,sBAAKp4B,UAAU,eAAf,UACM2K,EAAY,cAAC,IAAD,CAAOguB,aAAW,EAAlB,SACL,cAAC,IAAD,UACI,cAAC,IAAD,QAEG,KACf,cAAC,KAAD,CAAiBf,eAAgB14B,KAAK04B,eAAgBG,aAAc74B,KAAK64B,aAAc/3B,UAAU,SAASqoB,OAAQphB,EAAOiV,OAAQ0c,KAAQC,KAAMC,eAAkBC,UAAWC,KAAiBr7B,MAAOF,OAAOG,WAAYq7B,YAAaC,KAAmBC,YAAa/T,EAAMgU,YAAahU,EAAMiU,gBAAgB,iBAA7S,SACKn6B,KAAKs5B,kBAAkBvxB,SAY5CuwB,GAAS32B,aAAe,CACtBqJ,eAAgB,IAGlB,MASMtG,GAAqB,CACzBk0B,wBjD/EqCt5B,IAAK,CAC1CsF,KAAM0N,GACNhT,WiD0FawF,oBAvBS,CAAC3D,EAAO2kB,KAC9B,MAAMhG,EAAoBgG,EAASI,KAAOtT,GAAsBzR,GAASgI,GAAkBhI,EAAO2K,GAAe3K,IAC3G6J,EAAiB8a,EAASI,KAAOjT,GAAuB9R,GAASoI,GAAmBpI,GAC1F,MAAO,CACLsK,UAAWM,GAAsB5K,KAAW2e,EAC5C9U,oBAkBoCtG,IAVrB,CAACkhB,EAAYC,EAAeC,KAC7C,MAAMsU,EAAarvB,YAAQ6a,EAAW5a,gBAAgBrB,OAAO0wB,MAC7D,MAAO,IAAKxU,EACVK,KAAMJ,EAASI,KACfza,UAAWma,EAAWna,UACtBT,eAAgBovB,EAChBrB,qBAIWj0B,CAAyDwzB,ICrIxE,MAAMgC,GAAS,CACbC,eAAgB,CACdvd,OAAQ,MACR/M,QAAS,SACTuqB,aAAc,MACdp2B,MAAOT,IAAO82B,MACd3K,gBAAiB,UACjBxxB,OAAQ,GACR6zB,QAAS,OACTE,WAAY,UAEdqI,MAAO,CACLvqB,SAAU,OACVmU,OAAQ,UACRkQ,WAAY,UAEdmG,YAAa,CACXxqB,SAAU,OACVyqB,eAAgB,YAChBrV,WAAY,OACZjB,OAAQ,YAIZ,MAAMuW,WAAoBl7B,YAAW,eAAD,oBAClCqD,QAAUZ,GAAM,IAAMpC,KAAKH,MAAMmD,QAAQZ,GADP,KAElC04B,SAAW14B,GAAM,IAAMpC,KAAKH,MAAMi7B,SAAS14B,GAE3ChB,SACE,MAAM,KACJ2I,GACE/J,KAAKH,MACT,OAAO,sBAAKoB,MAAOq5B,GAAOC,eAAgB92B,YAAU,yBAA7C,UACK,sBAAMxC,MAAOq5B,GAAOI,MAAO13B,QAAShD,KAAKgD,QAAQ+G,EAAK3H,IAAtD,mBACQ2H,EAAKE,KADb,aACsBF,EAAKL,OAAOuB,OAAS,EAAInF,IAAKC,EAAE,qBAAsB,CAClFg1B,MAAOhxB,EAAKL,OAAOuB,SAChBlB,EAAKL,OAAO,GAAGO,QAEZ,sBAAMhJ,MAAOq5B,GAAOK,YAAa33B,QAAShD,KAAK86B,SAAS/wB,EAAK3H,IAA7D,SACK0D,IAAKC,EAAE,gBAY5B80B,GAAYl5B,aAAe,CACzBqB,QAAS4sB,SAASC,UAClBiL,SAAUlL,SAASC,WAENgL,U,sBCnDR,MAAMG,WAAkBr7B,YAAW,eAAD,oBACvCs7B,cAAgB74B,IACdpC,KAAKH,MAAM2gB,iBAAiBpe,IAFS,KAIvC84B,aAAe94B,IACbpC,KAAKH,MAAMqjB,wBAAwB,CACjC9gB,KACA6H,KAAMjK,KAAKH,MAAMyX,QAAQrK,MAAKtF,GAAQA,EAAKvF,KAAOA,IAAI6H,QAI1D7I,SACE,MAAM,QACJkW,GACEtX,KAAKH,MACT,OAAOyX,EAAQrM,OACf,qBAAKnK,UAAWC,KAAQo6B,IAAKl6B,MAAO,CAClCujB,IAAK,GADP,SAGalN,EAAQtP,KAAI2B,GAAU,cAAC,GAAD,CAA6BI,KAAMJ,EAAQ3G,QAAShD,KAAKk7B,aAAcJ,SAAU96B,KAAKi7B,eAApEtxB,EAAOvH,QAC3C,MASrB44B,GAAUr5B,aAAe,CACvB2V,QAAS,GACT8jB,iBAAkBxL,SAASC,WAOd/qB,oBAJS3D,IAAK,CAC3BmW,QAASF,GAAqBjW,MAGQ,CACtC+hB,wBAAyBF,GACzBxC,iBAAkB9I,IAFL5S,CAGZk2B,ICjDI,MAAMK,GAAoB,oBACpBC,GAA8B/8B,OAAOC,YAY3C,MAAM+8B,GAAmBp6B,GAASA,EAAMq6B,aCRlCC,GAAsB,CAAC7xB,EAAW7B,KAC7C,MAAM2uB,EAAM,IAAK9sB,EACfoB,eAAgBjD,GAElB,MAAO,CACLnD,KAAM8uB,GACNp0B,MAAOo3B,IAGEgF,GAAwB,MACnC92B,KAAM+uB,KAMKgI,GAA0Bh0B,IACrC,MAAM/C,EAAO+C,EAAK/C,YACX+C,EAAK/C,KACZ,MAAM6V,EAAeC,KAAY9V,GAAM+V,SACjCvY,EAAKwY,yBACLC,EAAqBvS,aAAsBlG,GACjD,IAAI0Y,EAEJ,GAAIlW,IAASmW,KAAW,CACtB,MAAMC,EAAOrT,EAAKqT,MAAQ,EAC1BF,EAAQG,aAAsBD,EAAMrT,EAAKuT,eAEzCJ,EAAQM,aAA2BzT,EAAKi0B,kBAG1C,MAAO,CACLh3B,KAAMgvB,GACNt0B,MAAO,CACL8C,KACAwC,OACA0W,SAAU3T,EAAK2T,UAAY,KAC3B,CAACb,GAAe9S,EAAKjG,WAClB2Z,QACAR,KACAC,KAQI+gB,GAA6Bl0B,IAAI,CAC5C/C,KAAMmvB,GACNz0B,MAAOqI,ICGM7C,oBAVS3D,IACf,CACL26B,mBAAoBhpB,GAAc3R,GAClC46B,oBAAqB1H,GAAelzB,GACpCqM,eAAgBnG,GAAuBlG,GACvC2M,WAAYhC,GAAe3K,GAC3Bq6B,aAAcD,GAAiBp6B,MAIK,CACtC66B,mBAAoBzhB,GACpB0hB,oBAAqBP,IAFR52B,EA3CcjF,IAC3Bb,qBAAU,KACJa,EAAMi8B,mBACRj8B,EAAMm8B,qBACGn8B,EAAMk8B,qBACfl8B,EAAMo8B,wBAEP,CAACp8B,EAAMi8B,mBAAoBj8B,EAAMk8B,sBACpC/8B,qBAAU,KAAO,IAAD,EACd,UAAA2yB,SAASuK,cAAc,6BAAvB,SAA8C7tB,OAAO,EAAG,KACvD,CAACxO,EAAMiO,aACV,MAAMxP,EAASuB,EAAM27B,axFtBS,GwFsByB10B,GAAoBjH,EAAM2N,gBACjF,OAAO,qCACG,cAAC,GAAD,IACA,sBAAK1M,UAAU,oBAAoBG,MAAO,CAChD3C,UADM,UAGI,cAAC,GAAD,CAAU4nB,MAAM,IAChB,cAAC,GAAD,IACA,cAAC,GAAD,CAAUA,MAAM,a,4CCEjBiW,OA/BoB,EACjCC,gBACAC,oBACAC,oBACA5W,WAEA,MAAMX,EAAU,CAAC,cAAC,IAAD,CAAqBlD,WAAS,EAAC7e,QAASs5B,EAAmB/rB,SAAS,0BAApE,SACNzK,IAAKC,EAAE,WADW,UAEZ,cAAC,IAAD,CAAqBw2B,aAAW,EAACv5B,QAASq5B,EAAmB9rB,SAAS,2BAAtE,SACNzK,IAAKC,EAAE,WADW,WAG7B,OAAO2f,GAAQ,eAAC,IAAD,CAAOjF,QAAS6b,EAAmBhX,OAAK,EAAChK,SAAS,SAAlD,UACD,cAAC,IAAD,UAAaxV,IAAKC,EAAE,sBACpB,cAAC,IAAD,UACI,sBAAMjF,UAAWC,KAAQW,QAAzB,SACKoE,IAAKC,EAAE,mKAAoK,CAC1Lq2B,sBAIM,cAAC,IAAD,UACI,cAAC,IAAD,UAAcrX,U,sBCZ3B,MAAMyX,WAAgB78B,YAAW,eAAD,oBACrCwB,MAAQ,CACNs7B,yBAAyB,EACzBC,oBAAgBhkB,EAChBikB,yBAAyB,EACzB5Y,iBAAarL,GALsB,KAOrCkkB,gBAAkB,KAChB58B,KAAKC,SAAS,CACZ08B,yBAAyB,KATQ,KAYrCE,OAAS,KACP78B,KAAKH,MAAMg9B,SAASrpB,MAAKspB,IACvB98B,KAAKC,SAAS,CACZ8jB,YAAY,IAAD,OAAM+Y,SAfc,KAmBrCC,eAAiB,KACX/8B,KAAKH,MAAMm9B,oBACbh9B,KAAKH,MAAMo9B,oBACXj9B,KAAKH,MAAMo8B,uBAEXj8B,KAAKH,MAAMq9B,oBAxBsB,KA2BrCC,UAAY,KACVn9B,KAAKH,MAAMu9B,mBACX,MAAMrZ,EAAc/jB,KAAKH,MAAMkD,YAAX,WAA6B/C,KAAKH,MAAMkD,aAAgB,IAC5E/C,KAAKC,SAAS,CACZ8jB,iBA/BiC,KAkCrCuY,kBAAoB,KAClBt8B,KAAKC,SAAS,CACZ08B,yBAAyB,KApCQ,KAuCrCN,kBAAoB,KAClBr8B,KAAKC,SAAS,CACZ08B,yBAAyB,IAE3B38B,KAAKH,MAAMw9B,SAASr9B,KAAKH,MAAMkD,aAAayQ,MAAK,KAC/CxT,KAAKC,SAAS,CACZ8jB,YAAa,UA7CkB,KAiDrCuZ,oBAAsBp7B,UACpB,GAAIq7B,GAAgBA,EAAatyB,OAAQ,CACvC,MAAMuyB,QAAiBx9B,KAAK8c,QAAQza,GAAG+J,YAAY2lB,aAAavlB,IAAI,eAC9DixB,EAAcF,EAAatwB,MAAKlH,GAAKA,EAAE23B,SAAWF,GAA2B,SAAfz3B,EAAE43B,WAElEF,GAAeA,EAAYn+B,OAC7BU,KAAKH,MAAM+9B,YAAY59B,KAAKH,MAAMkD,YAAa06B,EAAYn+B,SAvD5B,KA2DrCu+B,oBAAsB,KAChB79B,KAAKH,MAAMkD,cAAgB/C,KAAKmB,MAAMu7B,gBACxCtnB,GAAkBpV,KAAKH,MAAMkD,aAAayQ,MAAKkpB,GAAkB18B,KAAKC,SAAS,CAC7Ey8B,sBA9D+B,KA2ErCoB,wBAA0B,KACxB99B,KAAKC,SAAS,CACZw8B,yBAA0Bz8B,KAAKmB,MAAMs7B,2BA7EJ,KAgFrCsB,oBAAsB,IAAM/9B,KAAKH,MAAMm+B,cAAgBh+B,KAAKH,MAAMkD,YAAc,cAAC,GAAD,CAAqBq5B,cAAep8B,KAAKH,MAAMu8B,cAAeC,kBAAmBr8B,KAAKq8B,kBAAmBC,kBAAmBt8B,KAAKs8B,kBAAmB5W,KAAM1lB,KAAKmB,MAAMw7B,0BAA8B,KAhF9O,KAiFrCsB,kBAAoB,IAAMj+B,KAAKmB,MAAMu7B,gBAAkB18B,KAAKmB,MAAMu7B,eAAet6B,GAAK,cAAC,KAAD,CAAmBtB,UAAU,qBAAqBuB,GAAIrC,KAAK8c,QAAQza,GAAIqjB,KAAM1lB,KAAKmB,MAAMs7B,wBAAyB9W,eAAgB3lB,KAAK89B,wBAAyBI,kBAAmBl+B,KAAKmB,MAAMu7B,eAAgByB,kBAAmB,CAAC,OAAQ,eAAgBC,mBAAoBp+B,KAAKs9B,oBAAqBe,mBAAoB1wB,GAAOR,QAAQC,IAAI,2BAA4BO,KAAW,KAjFta,KAkFrC2wB,oBAAsB,IAAM,eAAC,IAAD,WAClB,cAAC,IAAD,CAAQxc,SAAO,EAAC9e,QAAShD,KAAK68B,OAAQtsB,SAAS,wBAA/C,SACKzK,IAAKC,EAAE,kBAEZ,cAAC,IAAD,CAAQ/C,QAAShD,KAAK+8B,eAAtB,SACK/8B,KAAKH,MAAMm9B,mBAAqBl3B,IAAKC,EAAE,sBAAwBD,IAAKC,EAAE,mBAG1E/F,KAAKH,MAAMkD,aAAe,cAAC,IAAD,CAAQC,QAAShD,KAAK89B,wBAAtB,SAClBh4B,IAAKC,EAAE,eAEf/F,KAAKH,MAAMkD,aAAe/C,KAAKH,MAAMm+B,cAAgB,cAAC,IAAD,CAAQh7B,QAAShD,KAAK48B,gBAAiBrsB,SAAS,0BAAhD,SAC7CzK,IAAKC,EAAE,eA3B1BohB,oBACEnnB,KAAK69B,sBAGPpW,qBACEznB,KAAK69B,sBA0BPz8B,SACE,GAAIpB,KAAKmB,MAAM4iB,YACb,OAAO,cAAC,IAAD,CAAUvgB,GAAIxD,KAAKmB,MAAM4iB,cAGlC,MAAM,aACJwa,GACEv+B,KAAKH,MACH2+B,EAAiBD,EAAez4B,IAAKC,EAAE,uBAAyBD,IAAKC,EAAE,oBAC7E,OAAO,qCACK,qBAAKjF,UAAWC,KAAQ09B,QAAxB,SACI,sBAAK39B,UAAWC,KAAQuO,SAAxB,UACKivB,EAAev+B,KAAKs+B,sBAAwB,KAC7C,cAAC,IAAD,CAAQzc,WAAS,EAAC7e,QAAShD,KAAKm9B,UAAhC,SACKqB,SAIZx+B,KAAKi+B,oBACLj+B,KAAK+9B,0BAmBtBvB,GAAQvf,aAAe,CACrB5a,GAAI6a,IAAUC,QAmCDrY,oBAhCS3D,IACtB,MAAMyI,EAAYgJ,GAAsBzR,GACxC,IAAI68B,EACAO,EAUJ,M5EhBgCp9B,KACxB4R,IAAQ5R,EAAM0R,gBAAsD,KAApCD,GAAsBzR,GAAOiB,G4EOjEs8B,CAAmBv9B,IACrB68B,GAAe,EACfO,GAAe,IAEfA,IAAe30B,EAAUiB,QAASjB,EAAUiB,OAAOqa,OACnD8Y,IAAep0B,EAAUiB,QAASjB,EAAUiB,OAAOoL,QAG9C,CACLlT,YAAa6G,EAAUxH,GACvBg6B,cAAexyB,EAAUK,KACzB+zB,eACAhB,mBAAoBhqB,GAAuB7R,GAC3Co9B,mBAIuB7wB,IAAQ,CACjCuuB,oBAAqB,IAAMvuB,EAASguB,MACpCuB,kBAAmB,IAAMvvB,ExDhJY,CACrC9I,KAAM4N,KwDgJNqqB,OAAQ,IAAMnvB,EAAS+N,MAAkBjI,MAAKpR,GAAMA,IACpDi7B,SAAUj7B,GAAMsL,EAASyI,GAAiB/T,IAC1Cg7B,iBAAkB,IAAM1vB,EAAS6M,MACjCqjB,YAAa,CAACx7B,EAAI9C,IAAUoO,EtEhKW,EAAC3K,EAAazD,KAAd,CACvCsF,KAAM8D,GACN3F,cACAzD,UsE6JqCq/B,CAA0Bv8B,EAAI9C,IACnE49B,iBAAkB,IAAMxvB,ExDxJW,CACnC9I,KAAM2N,QwD0JOzN,CAA6C03B,I,sBClJ7CoC,OAlCG,EAChBC,eAEA,MAAMjgB,EAAWkgB,KAAqBvgC,OAAOG,WAAaogC,KAAqBvgC,OAAOG,WAChFqgC,EAAaF,EAAW/4B,IAAKC,EAAE,oBAAsBD,IAAKC,EAAE,qBAClE,OAAO,sBAAKjF,UAAWC,KAAQi+B,YAAxB,UACG,mBAAGl+B,UAAWC,KAAQg+B,WAAtB,mBACQj5B,IAAKC,EAAE,iBADf,aACoCg5B,KAEpC,sBAAK99B,MAAO,CAClB2d,YADM,UAGI,mBAAG9d,UAAWC,KAAQypB,KAAtB,mBACQ1kB,IAAKC,EAAE,0BADf,OAGA,qBAAKjF,UAAWC,KAAQypB,KAAxB,SACI,qBAAI1pB,UAAWC,KAAQk+B,SAAvB,UACI,6BAAKn5B,IAAKC,EAAE,oCACZ,6BACKD,IAAKC,EAAE,0DAEZ,6BACKD,IAAKC,EAAE,iGAKxB,oBAAIjF,UAAWC,KAAQm+B,cC1BpBC,OAJY,IAAM,qBAAKt9B,MAAM,6BAA6BpD,MAAM,KAAKH,OAAO,KAAK0D,KAAM2B,IAAO0M,QAASvO,QAAQ,YAA7F,SACzB,sBAAMC,EAAE,oa,sBCgCDq9B,OAzBS,EACtBh9B,SAEA,MAAM3D,EAAQqgC,KAAqBvgC,OAAOG,WAAaogC,KAAqBvgC,OAAOG,WACnF,OAAO,qCACG,qBAAKoC,UAAWC,KAAQyE,UAAxB,SACI,sBAAK1E,UAAWC,KAAQs+B,MAAOp+B,MAAO,CAC9CxC,SADQ,UAGI,cAAC,IAAD,CAAMqC,UAAWC,KAAQwC,KAAMC,GAAE,WAAMpB,GAAvC,SACI,eAAC,IAAD,CAAQmO,SAAS,qBAAjB,UACI,cAAC+uB,GAAD,IACCx5B,IAAKC,EAAE,2BAGhB,cAAC,IAAD,CAAQ/C,QAASzE,OAAOghC,MAAxB,SAAgCz5B,IAAKC,EAAE,gBAG/C,qBAAKjF,UAAWC,KAAQy+B,gB,qBC1B7B,MAAMC,GAAkBC,IAAY,IAAD,EACxC,IAAKA,IAAYA,EAAQxf,UACvB,OAAO,KAMT,MAAMyf,EAAU,UAAGD,EAAQxf,UAAUzV,MAAM,KAAK,UAAhC,aAAG,EAAiCm1B,MAAM,WAE1D,OAAID,EACKE,SAASF,EAAW,IAEpB,MCOJ,MAAMG,WAA4BngC,YAAW,eAAD,oBACjD+4B,eAAiBC,IACf34B,KAAKH,MAAMkgC,sBAAsBpH,IAFc,KAIjDqH,iBAAmBr4B,IACjB,GAAIA,EAAK/C,OAASmW,KAChB,OAAO,EAGT,MAAMklB,EAAajgC,KAAKH,MAAMmL,eAAerB,QAAOigB,GAAKA,EAAEhlB,OAASmW,OAC9DmlB,EAAmBC,KAAOF,EAAY,CAAC,MAC7C,OAAOt4B,EAAKy4B,IAAMF,EAAiB,GAAGE,GAXS,KAajDhH,iBAAmBzxB,IAEjB,MAAM0xB,EAAiB73B,IAAG,QAAS,SAAV,UAAuBmG,EAAK/C,MAAQ,CAC3D,mBAAoB5E,KAAKH,MAAM8uB,WAAa3uB,KAAKggC,iBAAiBr4B,GAClEgoB,YAAahoB,EAAKgoB,YAEpB,OAAO,qBAAkB7uB,UAAWu4B,EAA7B,SACK,cAAC,GAAD,CAAM1xB,KAAMA,EAAMokB,cAAeP,MAD5B7jB,EAAKiiB,IAnByB,KAuBjD0P,kBAAoBvxB,GAASA,EAAMC,KAAIL,GAAQ3H,KAAKo5B,iBAAiBzxB,KAErE04B,sBACE,MAAMC,ED9BiCC,KACzC,MAAMC,EAAQ/2B,OAAOuD,KAAK0N,MACpB+lB,EAA2B11B,YAAQw1B,GAAUv4B,KAAIgrB,IACrD,MAAMpuB,EAAO87B,MAAMC,KAAK3N,EAAG4N,WAAW3zB,MAAKnM,GAAa0/B,EAAMK,QAAQ//B,IAAc,IAC9E+2B,EAAO7E,EAAG8E,wBACVsI,EAAIX,GAAgBzM,EAAG/xB,QAAU4+B,SAAShI,EAAKuI,GACrD,MAAO,CACLx7B,OACAg8B,UAAW5N,EAAG4N,UACdE,QAASV,EAAIP,SAAShI,EAAKv5B,QAC3B00B,SAGJ,OAAOmN,KAAOM,EAA0B,CAAC,aCiBhBM,CAA4BL,MAAMC,KAAKhP,SAASqP,iBAAiB,sBACxF,IAAIC,EAAkB,EAClBC,EAAiB,EACjBC,GAAoB,EAExB,IAAK,IAAIvX,EAAI0W,EAAer1B,OAAS,EAAG2e,GAAK,IAAKA,EAAG,CACnD,MAAMjiB,EAAO24B,EAAe1W,GAE5B,GAAIjiB,EAAK/C,OAASmW,KAAW,CAC3B,GAAKomB,EAEE,CACLF,EAAkBt5B,EAAKm5B,QACvB,MAHAn5B,EAAKqrB,GAAG4N,UAAUriB,IAAI,eAKnB,CACL4iB,GAAoB,EACpB,MAAMC,EAAiBz5B,EAAKm5B,QAExBM,EAAiBF,IACnBA,EAAiBE,IAKvB,MACMC,EAAc1P,SAASuK,cAAc,sBAGrCpL,EAAYmQ,EAJC,IAUnB,GAJII,IACFA,EAAYpgC,MAAM3C,OAAlB,UAA8BwyB,EAA9B,OAGE9wB,KAAKH,MAAM8uB,UAAW,CAExB,MAAM2S,EAAa3P,SAASuK,cAAc,qBAE1C,GAAIoF,GAAcA,EAAWrgC,OAASqgC,EAAWrgC,MAAMif,UAAW,CAChE,MAAMlF,EAAOykB,GAAgB6B,EAAWrgC,OAClCsgC,EAAa5P,SAASuK,cAAc,gBAC1CqF,GAAcA,EAAWlzB,OAAO,EAAG2M,EAAO,MAKhDmM,oBACEnnB,KAAKqgC,sBAGP5Y,qBACEznB,KAAKqgC,sBAGPj/B,SACE,MAAM,UACJqK,EADI,eAEJT,GACEhL,KAAKH,MAET,IAAK4L,IAAcT,EAAeC,OAChC,OAAO,cAAC,GAAD,CAAkBpD,KAAM/B,IAAKC,EAAE,0CAGxC,MAAMtH,EAAQqgC,KAAqBvgC,OAAOG,WAAaogC,KAAqBvgC,OAAOG,WACnF,OAAO,sBAAKoC,UAAU,eAAf,UACM2K,EAAY,cAAC,IAAD,CAAOguB,aAAW,EAAlB,SACL,cAAC,IAAD,UACI,cAAC,IAAD,QAEG,KACf,cAAC,KAAD,CAAiBf,eAAgB14B,KAAK04B,eAAgB53B,UAAU,SAASqoB,OAAQne,EAAgBgS,OAAQ0c,KAAQC,KAAMC,eAAkBC,UAAWC,KAAiBr7B,MAAOA,EAAOs7B,YAAaC,KAAmBC,aAAa,EAAOC,aAAa,EAAOC,gBAAgB,iBAA3Q,SACKn6B,KAAKs5B,kBAAkBtuB,SAY5C80B,GAAoBn+B,aAAe,CACjCqJ,eAAgB,IAYHlG,oBATS3D,IACtB,MAAM2e,EAAoBqU,GAAuBhzB,GACjD,MAAO,CACLsK,UAAWM,GAAsB5K,KAAW2e,EAC5C9U,eAAgBspB,GAAwBnzB,GAAOwI,OAAO0wB,MACtD1L,UAAW7b,GAAc3R,MAIW,CACtC4+B,sBRnI0CzgC,IAAK,CAC/CsF,KAAMivB,GACNv0B,WQgIawF,CAEZg7B,I,qCChIH,MAAM0B,GAAkB16B,GAAoB,G9GjBV,E8GmB5B26B,GAAaC,IAEjB,IAAIC,EAAI,EACR,MAEMC,EAAcC,GAFF,EAEwB,EAAIA,EAE9C,IAAIC,EAAWF,EAAY,GACvBH,GAAa,EAEjB,KAAOK,EAAWJ,GAIhB,GAHAI,EAAWF,EAAYD,KACrBA,EAEEG,IAAaJ,EAAG,CAClBD,GAAa,EACb,MAIJ,OAAOA,GAkCF,MAAMM,WAA6BpiC,YAAW,eAAD,oBAClDwB,MAAQ,CACN6gC,aAAa,GAFmC,KAIlDC,yBAA2B,KACrBjiC,KAAKH,MAAM+J,YACb5J,KAAKC,SAAS,CACZ+hC,aAAa,IAEfhiC,KAAKH,MAAMqiC,kBAAkBliC,KAAKH,MAAM+J,UAAW5J,KAAKH,MAAMkI,OAG9D/H,KAAKH,MAAMkI,MAAM4R,SAAQhS,IACnBA,EAAK2L,EAAI6uB,OACXx6B,EAAKgoB,WAAY,EACjB3vB,KAAKH,MAAMuiC,oBAAoB34B,OAAO2J,OAAO,GAAIzL,EAAM,CACrD2L,EAAG6uB,YA/CO,GACpBp6B,QACAs6B,uBAMA,IAAIrnB,EAAO,EACX,MAAMsnB,EAAW,GAEjB,IAAK,IAAIC,EAAU,EAAGA,GAAWx6B,EAAMkD,SAAUs3B,EAC/B,IAAZA,EACFvnB,GAAQ,GACCymB,GAAWc,GACpBvnB,GAAQ,GAERA,GAAQ,GAGVsnB,EAAS5yB,KAAKsL,GAGhB,IAAK,IAAI4O,EAAI,EAAGA,EAAI7hB,EAAMkD,SAAU2e,EAClCyY,EAAiB,CACfz9B,KAAMmW,KACNC,KAAMsnB,EAAS1Y,MAyBf4Y,CAAcxiC,KAAKH,OACnBG,KAAKH,MAAMwiC,iBAAiB,CAC1Bz9B,KAAMuW,KACNygB,kBAAkB,MAvB0B,KAsClD6G,gBAAkB,IACTziC,KAAKH,MAAM6iC,SAAW,CAC3Bld,WAAYmd,IAAQC,KACpBtkC,OAAQ0B,KAAKH,MAAM27B,aAAegG,GhGlHR,IgGmHxB,CACFljC,OAAQ0B,KAAKH,MAAM27B,aH/Ge,IGgGtCrU,oBACEnnB,KAAKiiC,2BAGPxa,qBACOznB,KAAKmB,MAAM6gC,aACdhiC,KAAKiiC,2BAaT7gC,SACE,OAAO,sCACOpB,KAAKH,MAAM6iC,UAAY,cAAC,GAAD,CAAiBtgC,GAAIpC,KAAKH,MAAM+J,UAAUxH,KACnE,sBAAKtB,UAAWU,IAAGT,KAAQ8hC,QAAS,eAAgB5hC,MAAOjB,KAAKyiC,kBAAhE,WACMziC,KAAKH,MAAM6iC,UAAY,cAAC,GAAD,CAAW7D,UAAU,IAC9C,qBAAK/9B,UAAWC,KAAQ+hC,UAAW7hC,MAAO,CACpDxC,MAAOqgC,MACNr7B,YAAU,oBAFD,SAGI,cAAC,GAAD,aAuCTqB,oBAtBS,CAAC3D,EAAO2kB,KAC9B,MAAM1jB,EAAK0J,GAAe3K,GAE1B,GAAI2kB,EAAS4c,SAAU,CAErB,MAAO,CACL94B,UAFgBgJ,GAAsBzR,GAGtCiB,KACA2F,MAAOkL,GAAuB9R,GAC9Bq6B,aAAcD,GAAiBp6B,IAKnC,MAAO,CACLyI,UAFgBxH,EAAK+G,GAAkBhI,EAAOiB,GAAM,KAGpDA,KACA2F,MAAOwB,GAAmBpI,GAC1Bq6B,aAAcD,GAAiBp6B,MAIK,CACtC+gC,kBAAmBzG,GACnB4G,iBAAkB1G,GAClByG,oBAAqBvG,IAHR/2B,CAIZi9B,IChGYj9B,oBAbS3D,IACtB,MAAMiB,EAAK0J,GAAe3K,GACpByI,EAAYxH,EAAK+G,GAAkBhI,EAAOiB,GAAM,KAEtD,MAAO,CACLwH,YACA20B,gBAHmB30B,IAAaA,EAAUiB,SAASjB,EAAUiB,OAAOqa,OAIpEnd,MAAOwB,GAAmBpI,GAC1B67B,mBAAoBhqB,GAAuB7R,GAC3Cq6B,aAAcD,GAAiBp6B,MAIK,CACtC4hC,iB/DhEgC,CAACn5B,EAAW7B,KAC5C,MAAM2uB,EAAM,IAAK9sB,EACfoB,eAAgBjD,GAElB,MAAO,CACLnD,KAAMkN,GACNxS,MAAOo3B,K+DyDI5xB,EA5DOjF,IACpB,MAAM,MACJpB,GACEc,IACJP,qBAAU,KACJa,EAAM+J,WACR/J,EAAMkjC,iBAAiBljC,EAAM+J,UAAW/J,EAAMkI,SAE/C,CAAClI,EAAM+J,YAEV,MAAMo5B,EAAa,KACjB,GAAInjC,EAAMm9B,mBACR,OAAO,cAAC,GAAD,CAAoB0F,UAAU,IAGvC,MAAMpkC,EAASuB,EAAM27B,ajG9BO,GiG8B2B10B,GAAoB,GAC3E,OAAO,sBAAKhG,UAAU,oBAAoBG,MAAO,CAC/C3C,UADK,UAGK,cAAC,GAAD,CAAU4nB,MAAM,IAChB,cAAC,GAAD,CAAUA,MAAM,QAS9B,OAAO,mCACIzhB,EAAchG,GAAS,cAAC,IAAD,CAAiB6c,SAAS,MAA1B,SAChB,cAAC,IAAD,CAAW7K,MAAO3K,IAAKC,EAAE,iBAAkBmlB,SAAO,EAAlD,SACKplB,IAAKC,EAAE,6DARD,qCACnB,cAAC,GAAD,IACClG,EAAM0+B,aAAeyE,IAAe,cAAC,GAAD,CAAkBn7B,KAAM/B,IAAKC,EAAE,uBCUjEjB,oBALS3D,IAAK,CAC3B67B,mBAAoBhqB,GAAuB7R,GAC3Cq6B,aAAcD,GAAiBp6B,MAGO,CACtC8hC,gBhE/BmC,MACnCr+B,KAAMoN,MgE6BOlN,EAvCMjF,IACnB,MAAM,MACJpB,GACEc,IACJP,qBAAU,KACRa,EAAMojC,oBACL,IACH,MAAM3kC,EAASuB,EAAM27B,alGnBS,GkGmByB10B,GAAoB,GAY3E,OAAO,mCACIrC,EAAchG,GAAS,cAAC,IAAD,CAAiB6c,SAAS,MAA1B,SAChB,cAAC,IAAD,CAAW7K,MAAO3K,IAAKC,EAAE,iBAAkBmlB,SAAO,EAAlD,SACKplB,IAAKC,EAAE,8DAbF,qCAClB,cAAC,GAAD,IACClG,EAAMm9B,mBAAqB,cAAC,GAAD,CAAoB0F,UAAU,IAAW,sBAAK5hC,UAAU,oBAAoBG,MAAO,CACrH3C,UAD2E,UAG7D,cAAC,GAAD,CAAU4nB,MAAM,IAChB,cAAC,GAAD,CAAUA,MAAM,eCf7B,MAAMgd,WAAsBvjC,YAAW,eAAD,oBAC3Cy5B,iBAAmBzxB,GAAQ,qBAAkB7G,UAAWU,IAAGmG,EAAK/C,KAAM,QAAS,QAApD,SACjB,cAAC,GAAD,CAAM+C,KAAMA,EAAMokB,cAAeR,MADN5jB,EAAKiiB,GADC,KAI3C0P,kBAAoBvxB,GAASA,EAAMC,KAAIL,GAAQ3H,KAAKo5B,iBAAiBzxB,KAErEvG,SACE,MAAM,UACJqK,EADI,eAEJT,GACEhL,KAAKH,MAET,IAAK4L,IAAcT,EAAeC,OAChC,OAAO,cAAC,GAAD,CAAkBpD,KAAM/B,IAAKC,EAAE,0CAGxC,MAAMtH,EAAQqgC,KAAqBvgC,OAAOG,WAAaogC,KAAqBvgC,OAAOG,WACnF,OAAO,qCACM+M,EAAY,cAAC,IAAD,CAAOguB,aAAW,EAAlB,SACL,cAAC,IAAD,UACI,cAAC,IAAD,QAEG,KACf,cAAC,KAAD,CAAiB34B,UAAU,eAAeqoB,OAAQne,EAAgBgS,OAAQ0c,KAAQC,KAAMC,eAAkBC,UAAWC,KAAiBr7B,MAAOA,EAAOs7B,YAAaC,KAAmBC,aAAa,EAAOC,aAAa,EAAOC,gBAAgB,iBAA5O,SACKn6B,KAAKs5B,kBAAkBtuB,SAU5Ck4B,GAAcvhC,aAAe,CAC3BqJ,eAAgB,IAWHlG,oBARS3D,IACtB,MAAM2e,EAAoBqU,GAAuBhzB,GACjD,MAAO,CACLsK,UAAWM,GAAsB5K,KAAW2e,EAC5C9U,eAAgBD,YAAQupB,GAAwBnzB,IAAQwI,OAAO0wB,SAIpDv1B,CAAyBo+B,I,8BC7CjC,MAAMC,WAAuBxjC,YAAW,eAAD,oBAC5CwB,MAAQ,CACN6gC,aAAa,GAF6B,KAI5CoB,mBAAqB,KACnB,GAAIpjC,KAAKH,MAAM+J,UAAW,CACxB5J,KAAKC,SAAS,CACZ+hC,aAAa,IAGf,MAAMqB,EAAclD,KAAOngC,KAAKH,MAAMkI,MAAO,CAAC,IAAK,MACnD/H,KAAKH,MAAMqiC,kBAAkBliC,KAAKH,MAAM+J,UAAWy5B,GAEnD,IAAIC,EAAc,EAClBtjC,KAAKH,MAAMkI,MAAM4R,SAAQhS,IACnBA,EAAK/C,OAASqD,OAChBq7B,GAAe,EACftjC,KAAKH,MAAM0jC,oBAAoB57B,EAAKvF,QAIxCpC,KAAKH,MAAMkI,MAAM4R,SAAQhS,IACvB3H,KAAKH,MAAMuiC,oBAAoB34B,OAAO2J,OAAO,GAAIzL,EAAM,CACrD0L,EAAGmwB,KACHlwB,EAAGmwB,WAKP,IAAK,IAAI7Z,EAAI,EAAGA,EAA8C,GAAzC5pB,KAAKH,MAAMkI,MAAMkD,OAASq4B,GAAkB1Z,GAAK,EACpE5pB,KAAKH,MAAMwiC,iBAAiB,CAC1Bz9B,KAAMmW,KACNO,SAAUsO,EACV1O,UAAU,IAIdlb,KAAKH,MAAMwiC,iBAAiB,CAC1Bz9B,KAAMuW,KACNygB,kBAAkB,MAKxBzU,oBACEnnB,KAAKojC,qBAGP3b,qBACOznB,KAAKmB,MAAM6gC,aACdhiC,KAAKojC,qBAIThiC,SACE,MAAM9C,EAAS0B,KAAKH,MAAM27B,aP/DU,GOgEpC,OAAO,qCACK,cAAC,GAAD,CAAiBp5B,GAAIpC,KAAKH,MAAM+J,UAAUxH,KAC1C,sBAAKtB,UAAWC,KAAQ8hC,QAAS5hC,MAAO,CAChD3C,UADQ,UAGI,cAAC,GAAD,CAAWugC,UAAU,IACrB,qBAAK/9B,UAAWC,KAAQ+hC,UAAW7hC,MAAO,CACpDxC,MAAOqgC,MACNr7B,YAAU,kBAFD,SAGI,cAAC,GAAD,aA4BTqB,oBAXS3D,IACtB,MAAMiB,EAAK0J,GAAe3K,GAE1B,MAAO,CACLyI,UAFgBxH,EAAK+G,GAAkBhI,EAAOiB,GAAM,KAGpDA,KACA2F,MAAOwB,GAAmBpI,GAC1Bq6B,aAAcD,GAAiBp6B,MAIK,CACtC+gC,kBAAmBzG,GACnB4G,iBAAkB1G,GAClB4H,oBbhEwCjkC,IAAK,CAC7CsF,KAAMkvB,GACNx0B,Ua+DA8iC,oBAAqBvG,IAJR/2B,CAKZq+B,IClHI,MC6BDO,GAAe,CACnB,CAACpY,IAAO,cAAC,GAAD,IACR,CAACF,IAAO,cAAC,GAAD,IACR,CAACC,IAAM,cAAC,GAAD,IACP,CAACE,IAAQ,cAAC,GAAD,IACT,CAACC,IAAe,cAAC,GAAD,KAqFH1mB,oBAVS,CAAC3D,EAAO2kB,KAAc,IAAD,IAC3C,MAAM5c,EAAaI,GAAkBnI,GACrC,MAAO,CACLwiC,kBAAmB5wB,IAAQ7J,GAC3B06B,kBAAmBv6B,GAAsBlI,GACzCiB,GAAI0J,GAAe3K,GACnB0iC,SAAS,UAAA/d,EAAS8Z,aAAT,mBAAgBkE,cAAhB,eAAwB/gC,cAAe,QAIZ,CACtCghC,gBlFrF8B3hC,GAAMF,MAAOwL,EAAU0L,KAMrD,IACE,MAAMjY,EAAQiY,IACd,IAAI4qB,EAAoB,KAExB,GAAI5hC,EACF4hC,EAAoB76B,GAAkBhI,EAAOiB,IAAO,SAC/C,CACL,MAAM6hC,GajD2BnwB,EbiDWG,GAAiB9S,GajDhBsY,aAAayqB,QAAb,kCAAgDpwB,UAAe4E,GbkDtGyrB,EAAOh7B,GAAkBhI,EAAO8iC,GACtCD,EAAoBC,GAAeE,EAAOA,EjBoFHhjC,IAAS,IAAIwN,IAAUnF,GAAsBrI,GAAQ,MAAO,kBAAmBwN,IAAU9E,GAAwB1I,GAAQ,MAAO,gBiBpFtHijC,CAA8BjjC,GAAO,GAItFuM,EADEs2B,EACO7qB,GAA0B6qB,EAAkB5hC,IAE5C4W,GhB7C0B,MgB+CrC,MAAOrL,GACP,OAvBcC,EAuBCD,EAtBfR,QAAQC,IAAI,+BAAgCQ,GACrCA,EAFOA,MarCqBkG,GqE0HrCuwB,gBDzH+B/kC,IAAK,CACpCsF,KAAMy2B,GACN/7B,WCqHawF,EAnFU,EACvB1C,KACAspB,OACAkY,mBACAD,oBACAE,UACAE,kBACAM,sBAEArlC,qBAAU,KA1BmB0sB,KAC7B,MAAM7P,EAAS8V,SAAS2S,qBAAqB,UAAU,GAEnD3Y,GAAYD,GACd7P,EAAO+kB,UAAUriB,IAAI,UAErB1C,EAAO+kB,UAAU2D,OAAO,WAqBxBC,CAAuB9Y,KACtB,CAACA,IACJ1sB,qBAAU,KACJ4kC,IAAqBD,GACvBI,EAAgBF,KAEjB,CAACD,EAAkBD,EAAmBE,IACzC7kC,qBAAU,KACR,MAAMylC,EAAWvlC,KAAS,IAAMmlC,EAAgB9lC,OAAOC,cAAc,KAErE,OADAD,OAAOY,iBAAiB,SAAUslC,GAC3B,KACLlmC,OAAOa,oBAAoB,SAAUqlC,MAEtC,IAEEb,EAQDlY,IAASL,GACJqY,GAAahY,GAGlBiY,EACK,qCACK,cAAC,GAAD,IACA,cAAC,GAAD,CAAkB97B,KAAM/B,IAAKC,EAAE,yElGjEN,MkGqEnC3D,EACK,qCACK,cAAC,GAAD,IACA,cAAC,GAAD,CAAkByF,KAAM/B,IAAKC,EAAE,sCAIlC,OAAP3D,EACK,cAAC,IAAD,CAAOq3B,aAAW,EAAlB,SACK,cAAC,IAAD,UACI,cAAC,IAAD,QAKXiK,GAAahY,GAjCX,cAAC,IAAD,CAAO+N,aAAW,EAAlB,SACK,cAAC,IAAD,UACI,cAAC,IAAD,WC1CL30B,oBAJS3D,IAAK,CAC3BilB,QAASjO,GAAiBhX,MAGY,CACtCsf,QAASpI,IADIvT,EAjBM,EACnBshB,UACA3F,aACI2F,EAAU,cAAC,IAAD,UACJ,cAAC,IAAD,CAAUse,SAAUjkB,EAASkkB,WAAS,EAAtC,SACKve,MAEO,OCZjB,MCMMwe,GAAiBviC,GAAMH,MAAOwL,EAAU0L,KACnD,MAAMrD,EAAYlX,IAChB6O,EAN2B7O,KAAU,CACvC+F,KAAM2R,GACNjX,MAAOT,IAIIgmC,CAAgBhmC,KAQ3B,IACE,MAAMimC,EAAkBriB,GAAgCrJ,KAClDva,QAAmBkmC,aAAmB1iC,EAAIyiC,GAGhD,OAAO/uB,EADoBlX,EAAW8K,QAAOq7B,GAA6B,aAAtBA,EAAIC,eAAsD,aAAtBD,EAAIC,eAA0D,cAA1BD,EAAIE,qBAEhI,MAAOv3B,GACP,OAZcC,EAYCD,EAXfR,QAAQC,IAAI,+BAAgCQ,GACrCA,EAFOA,OCVZu3B,GAAkB,CAAC,uDCIZC,GAAe,IAAIC,IAAkBnjC,UAChD,MAAM6T,EAAYuvB,IALShmC,MAMzBoO,GANyBpO,EAMFmK,OAAO2J,OAAO,GAAIkyB,KAAoBD,GAN/B,CAChCzgC,KAAMod,GACN1iB,YAYA,IAEE,OAAOyW,EAAU,SDfiB,MACpC,MACMxT,EAAG,UADQ,kBACR,YAAkB4iC,GAAgBn9B,KAAIu9B,GAAC,cAAWA,KAAK76B,KAAK,MACrE,OAAOpI,wBAAckR,MAAKnR,GAAMA,EAAGG,IAAIC,SAAS+J,IAAIjK,KAAM+S,MAAMpC,KCWjCsyB,KAG7B,MAAO73B,GACP,OAVcC,EAUCD,EATfR,QAAQC,IAAI,mCAAoCQ,GACzCA,EAFOA,O,QCKX,MAAM63B,WAAY9lC,YACvBwnB,oBACEnnB,KAAKH,MAAM6lC,eAAe1lC,KAAKH,MAAMwC,GAAG+J,aACxCpM,KAAKH,MAAM8lC,kBACX3lC,KAAKH,MAAM+lC,oBACX5lC,KAAKH,MAAMgmC,qBACX7lC,KAAKH,MAAMf,cAAckB,KAAKH,MAAMwC,IACpCrC,KAAKH,MAAMimC,cAGbC,kBACE,MAAO,CACL3e,QAASpnB,KAAKH,MAAMunB,QACpBthB,SACAzD,GAAIrC,KAAKH,MAAMwC,IAInBjB,SACE,OAAO,qCACK,cAAC,IAAD,CAAcuC,QAAM,EAACg/B,SAAO,IAC5B,cAAC,IAAD,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOqD,OAAK,EAACrQ,KAAK,IAAIv0B,OAAQvB,GAAS,cAAC,GAAD,IAAeA,EAAO6rB,KAAMJ,OACnE,cAAC,IAAD,CAAO0a,OAAK,EAACrQ,KAAK,OAAOv0B,OAAQvB,GAAS,cAAC,GAAD,IAAeA,EAAO6rB,KAAML,OACtE,cAAC,IAAD,CAAO2a,OAAK,EAACrQ,KAAK,gBAAgBv0B,OAAQvB,GAAS,cAAC,GAAD,IAAeA,EAAO6rB,KAAMJ,OAC/E,cAAC,IAAD,CAAO0a,OAAK,EAACrQ,KAAK,qBAAqBv0B,OAAQvB,GAAS,cAAC,GAAD,IAAeA,EAAO6rB,KAAMN,OACpF,cAAC,IAAD,CAAO4a,OAAK,EAACrQ,KAAK,0BAA0Bv0B,OAAQvB,GAAS,cAAC,GAAD,IAAeA,EAAO6rB,KAAMH,OACzF,cAAC,IAAD,CAAOya,OAAK,EAACrQ,KAAK,4BAA4Bv0B,OAAQvB,GAAS,cAAC,GAAD,IAAeA,EAAO6rB,KAAMF,YAGnG,cAACya,GAAD,QAehBR,GAAIS,kBAAoB,CACtB9e,QAASlK,IAAU8U,OACnBlsB,KAAMoX,IAAUC,OAChB9a,GAAI6a,IAAUC,QAcDrY,mBAAQ,MAXI4I,IAClB,CACLi4B,gBAAiB,IAAMj4B,EAAS6H,MAChCqwB,kBAAmB,IAAMl4B,EAASH,MAClCm4B,eAAgBt5B,GAAesB,EJvEA,CACjC9I,KAAMgP,GACNtU,MIqEyD8M,IACvDtN,cAAeuD,GAAMqL,EAASk3B,GAAeviC,IAC7CwjC,mBAAoB,IAAMn4B,EAASyM,MACnC2rB,YAAa,IAAMp4B,EAAS03B,SAIjBtgC,CAAkC2gC,I,qBC7E1C,MACMU,GAAsB,OAkBpBllC,OAVD,CAACE,EAAQglC,OAAqBh/B,KAC1C,OAAQA,EAAOvC,MACb,IAXqB,YAYnB,OAAOwC,YAAgBD,EAAO7H,MAAO6mC,IAEvC,QACE,OAAOhlC,ICAE8F,oBAAgB,CAC7BiC,W3GoBc,CAAC/H,EAAQyH,GAA0BzB,KACjD,OAAQA,EAAOvC,MACb,KAAK2D,GAED,MAAO,CACLM,KAAM1B,EAAO7H,MACbyI,MAAO,IAIb,KAAKS,GAED,MAAO,IAAKrH,EACV0H,KAAM,IAAK1H,EAAM0H,QACZ1B,EAAO7H,QAKlB,KAAKmJ,GAED,OAAOM,GAAoB,CACzB5H,QACA4B,YAAaoE,EAAOpE,YACpBiG,KAAM,UACN1J,MAAO6H,EAAO7H,QAIpB,KAAKoJ,GAED,OAAOK,GAAoB,CACzB5H,QACA4B,YAAaoE,EAAOpE,YACpBiG,KAAM,cACN1J,MAAO6H,EAAO7H,QAIpB,KAAKqJ,GAED,MAAO,IAAKxH,EACV4G,MAAOZ,EAAO7H,OAIpB,QACE,OAAO6B,I2GlEX0B,YACA2B,iBpHhBc,CAACrD,EAD8B,GACWgG,KACxD,OAAQA,EAAOvC,MACb,KAAKP,EAED,OAAO+C,YAAgBD,EAAO7H,MALS,IAQ3C,KAAKgF,EAED,MAVuC,GAa3C,QACE,OAAOnD,IoHIXmG,cACAsR,ejFXc,CAACzX,EAAQqX,GAA8BrR,KACrD,OAAQA,EAAOvC,MACb,KAAK0T,GAED,MAAO,IAAKnX,EACV,CAACgG,EAAO7H,MAAM8C,IAAKgkC,KAAY,IAAKh9B,YAASjI,EAAMgG,EAAO7H,MAAM8C,QAC3D+E,EAAO7H,OACTyT,KAIT,KAAKwF,GAED,OAAOC,GAGX,QACE,OAAOrX,IiFLX0W,StFpBc,CAAC1W,EAAQ,GAAIgG,KAC3B,OAAQA,EAAOvC,MACb,KAAK+S,GACH,CACE,MAAM0uB,EAAgBzwB,YAAazO,EAAO7H,OAI1C,OAHiB4lB,KAAO/jB,EAAO,CAC7BmlC,OAAQD,IAKd,QACE,OAAOllC,IsFSXoJ,K9FjBc,CAACpJ,EAAQ0S,GAAoB1M,KAC3C,OAAQA,EAAOvC,MACb,KAAKgP,GAED,MASC,CACLxR,IAFqBmkC,EARMp/B,EAAO7H,OAUrB8C,GACb0R,SAAUyyB,EAASzyB,SACnBC,SAAUwyB,EAAS/jB,SAASgkB,YAC5BxyB,YAAauyB,EAASE,YAAYn6B,IAAI,QAVtC,QACE,OAAOnL,EAIb,IAAyBolC,G8FMvB1zB,chGDc,CAAC1R,EAAQsR,GAA8BtL,KACrD,OAAQA,EAAOvC,MACb,KAAKkN,GACH,CACE,MAAM40B,EAAW,GAGjB,OAFAj9B,OAAOuD,KAAK0F,IAAqB1K,KAAIkF,GAAKw5B,EAASx5B,GAAK/F,EAAO7H,MAAM4N,KACrEw5B,EAAS/zB,kBAAmB,EACrB+zB,EAGX,KAAK30B,GACH,OAAOU,GAET,KAAKF,GACH,OAAO9I,OAAO2J,OAAO,GAAIjS,EAAO,CAC9BwR,kBAAkB,IAGtB,KAAKH,GACH,OAAO/I,OAAO2J,OAAO,GAAIjS,EAAO,CAC9BwR,kBAAkB,IAGtB,KAAKX,GACH,OAAOU,GAET,KAAKT,GAED,OAAOxI,OAAO2J,OAAO,GAAIjS,EAAO,CAC9B8I,KAAM9C,EAAO7H,QAInB,KAAK4S,GAED,OAAOzI,OAAO2J,OAAO,GAAIjS,EAAO,CAC9BgJ,YAAahD,EAAO7H,QAI1B,KAAK6S,GACH,OAAKhL,EAAO7H,MAAMgc,SAQX4J,KAAO/jB,EAAO,CACnB6J,eAAgB,CACd27B,QAAS,CAAC,CAAC9G,SAAS14B,EAAO7H,MAAMgc,UAAW,EAAGnU,EAAO7H,WATjD4lB,KAAO/jB,EAAO,CACnB6J,eAAgB,CACd47B,SAAU,CAACz/B,EAAO7H,UAW1B,KAAK8S,GACH,CACE,MAAMy0B,EAAa1/B,EAAO7H,MACpBge,EAAqBnc,EAAM6J,eAAeuS,WAAU5V,GAAQA,EAAKvF,KAAOykC,IAE9E,OAAIvpB,GAAsB,EACjB4H,KAAO/jB,EAAO,CACnB6J,eAAgB,CACd27B,QAAS,CAAC,CAACrpB,EAAoB,OAK9Bnc,EAGX,KAAKmR,GACH,CACE,MAAMw0B,EAAa/7B,YAAQ5J,EAAM6J,gBACjC,IAAI+7B,GAAmB,EACvB,MAAMC,EAAgB7/B,EAAO7H,MAAM0I,KAAI,EACrC25B,IACAvB,IACA/sB,IACAC,IACAsW,QAEA,MAAMqd,EAAYH,EAAW75B,MAAKi6B,GAAMA,EAAG9kC,KAAOwnB,IAElD,OAAMqd,EAAUtF,IAAMA,GAAKsF,EAAU7G,IAAMA,GAAK6G,EAAU5zB,IAAMA,GAAK4zB,EAAU3zB,IAAMA,GACnFyzB,GAAmB,EACZt9B,OAAO2J,OAAO,GAAI6zB,EAAW,CAClC5zB,IACAC,IACAquB,IACAvB,OAIG6G,KAET,OAAOF,EAAmB,IAAK5lC,EAC7B6J,eAAgBg8B,GACd7lC,EAGR,KAAKkR,GACH,CACE,MAAMmL,EAAgBrW,EAAO7H,MACvBge,EAAqBnc,EAAM6J,eAAeuS,WAAU5V,GAAQA,EAAKvF,KAAOob,EAAcpb,KAE5F,GAAIkb,GAAsB,EAAG,CAM3B,OALiB4H,KAAO/jB,EAAO,CAC7B6J,eAAgB,CACd27B,QAAS,CAAC,CAACrpB,EAAoB,EAAG7T,OAAO2J,OAAO,GAAIoK,QAM1D,OAAOrc,EAGX,QACE,OAAOA,IgGrHXizB,enCPc,CAACjzB,EAAQ6yB,GAA+B7sB,KACtD,OAAQA,EAAOvC,MACb,KAAK8uB,GACH,CACE,MAAMgT,EAAW,GAEjB,OADAj9B,OAAOuD,KAAKknB,IAA2BlsB,KAAIkF,GAAKw5B,EAASx5B,GAAK/F,EAAO7H,MAAM4N,KACpEw5B,EAGX,KAAK/S,GACH,OAAOK,GAET,KAAKJ,GACH,OAAKzsB,EAAO7H,MAAMgc,SAQX4J,KAAO/jB,EAAO,CACnB6J,eAAgB,CACd27B,QAAS,CAAC,CAAC9G,SAAS14B,EAAO7H,MAAMgc,UAAW,EAAGnU,EAAO7H,WATjD4lB,KAAO/jB,EAAO,CACnB6J,eAAgB,CACd47B,SAAU,CAACz/B,EAAO7H,UAW1B,KAAKw0B,GACH,CACE,MAAM+S,EAAa1/B,EAAO7H,MACpBge,EAAqBnc,EAAM6J,eAAeuS,WAAU5V,GAAQA,EAAKvF,KAAOykC,IAE9E,OAAIvpB,GAAsB,EACjB4H,KAAO/jB,EAAO,CACnB6J,eAAgB,CACd27B,QAAS,CAAC,CAACrpB,EAAoB,OAK9Bnc,EAGX,KAAK4yB,GACH,CACE,MAAMvW,EAAgBrW,EAAO7H,MACvBge,EAAqBnc,EAAM6J,eAAeuS,WAAU5V,GAAQA,EAAKvF,KAAOob,EAAcpb,KAE5F,GAAIkb,GAAsB,EAAG,CAM3B,OALiB4H,KAAO/jB,EAAO,CAC7B6J,eAAgB,CACd27B,QAAS,CAAC,CAACrpB,EAAoB,EAAG7T,OAAO2J,OAAO,GAAIoK,QAM1D,OAAOrc,EAGX,KAAK0yB,GACH,CACE,MAAMiT,EAAa/7B,YAAQ5J,EAAM6J,gBACjC,IAAI+7B,GAAmB,EACvB,MAAMC,EAAgB7/B,EAAO7H,MAAM0I,KAAI,EACrC25B,IACAvB,IACA/sB,IACAC,IACAsW,QAEA,MAAMqd,EAAYH,EAAW75B,MAAKi6B,GAAMA,EAAG9kC,KAAOwnB,IAElD,OAAMqd,EAAUtF,IAAMA,GAAKsF,EAAU7G,IAAMA,GAAK6G,EAAU5zB,IAAMA,GAAK4zB,EAAU3zB,IAAMA,GACnFyzB,GAAmB,EACZt9B,OAAO2J,OAAO,GAAI6zB,EAAW,CAClC5zB,IACAC,IACAquB,IACAvB,OAIG6G,KAET,OAAOF,EAAmB,IAAK5lC,EAC7B6J,eAAgBg8B,GACd7lC,EAGR,QACE,OAAOA,ImCnFXgW,YxFpBc,CAAChW,EAAQ8V,GAA4B9P,KACnD,OAAQA,EAAOvC,MACb,KAAKmS,GAED,MAAO,IAAK5V,EACV,CAACgG,EAAOwC,OAAOvH,IAAK+E,EAAOwC,OAAOrK,OAIxC,KAAK0X,GACH,CACE,MAAM0vB,EAAW,IAAKvlC,GAGtB,cADOulC,EAASv/B,EAAO/E,IAChBskC,EAGX,KAAK5vB,GAED,OAAO3P,EAAOmQ,QAGlB,KAAKT,GAED,OAAOI,GAGX,QACE,OAAO9V,IwFPXF,SACAmX,MnF1Bc,CAACjX,EADkB,KACWgG,KAC5C,OAAQA,EAAOvC,MACb,KAAKqT,GAED,OAAO9Q,EAAO7H,MAGlB,KAAK4Y,GAED,OAV2B,KAa/B,QACE,OAAO/W,ImFcXtC,WzF3Bc,CAACsC,EAAQqV,GAAoBrP,KAC3C,OAAQA,EAAOvC,MACb,KAAK2R,GAED,MAAO,IAAIC,MAAuBrP,EAAO7H,OAG7C,QACE,OAAO6B,IyFoBXqhB,SnEpBc,CAACrhB,EAAQ8gB,GAAkB9a,KACzC,OAAQA,EAAOvC,MACb,IAbwB,eAepB,OAAO6E,OAAO2J,OAAO,GAAIjM,EAAO7H,OAGpC,KAAK0iB,GAED,MAAO,IAAK7gB,KACPgG,EAAO7H,OAIhB,QACE,OAAO6B,ImEMX4hB,qBlE7Bc,CAAC5hB,EAAQ0hB,GAAsC1b,KAC7D,OAAQA,EAAOvC,MACb,KAAK+d,GAED,OAAOxb,EAAO7H,MAGlB,KAAKsjB,GAED,OAAOC,GAGX,QACE,OAAO1hB,IkEiBXq6B,axB/Bc,CAACr6B,EAAQm6B,GAA6Bn0B,KACpD,OAAQA,EAAOvC,MACb,KAAKy2B,GAED,OAAOl0B,EAAO7H,MAGlB,QACE,OAAO6B,MyBOEgmC,OAZQ,KACrB,MAAMC,EAAa,CAACC,MAEdC,EAAmB/oC,OAAOgpC,sCAAwCC,KAMxE,OAJKjpC,OAAOgpC,qCAILE,aAAYC,GAASJ,EAAiBK,gBAAmBP,M,8TCuBlE,MAAMr6B,GAAY,UAClBjH,IAAK8hC,aAAa,KAAM76B,GAAW86B,IACnC/hC,IAAK8hC,aAAa,QAAS76B,GAAW+6B,IACtChiC,IAAK8hC,aAAa,MAAO76B,GAAWg7B,IACpCjiC,IAAK8hC,aAAa,KAAM76B,GAAWi7B,IACnCliC,IAAK8hC,aAAa,KAAM76B,GAAWk7B,IACnCniC,IAAK8hC,aAAa,KAAM76B,GAAWm7B,IACnCpiC,IAAK8hC,aAAa,KAAM76B,GAAWo7B,IACnCriC,IAAK8hC,aAAa,KAAM76B,GAAWq7B,IACnCtiC,IAAK8hC,aAAa,KAAM76B,GAAWs7B,IACnCviC,IAAK8hC,aAAa,KAAM76B,GAAWu7B,IACnCxiC,IAAK8hC,aAAa,KAAM76B,GAAWw7B,IACnCziC,IAAK8hC,aAAa,KAAM76B,GAAWy7B,IACnC1iC,IAAK8hC,aAAa,KAAM76B,GAAW07B,IACnC3iC,IAAK8hC,aAAa,MAAO76B,GAAW27B,IACpC5iC,IAAK8hC,aAAa,KAAM76B,GAAW47B,IACnC7iC,IAAK8hC,aAAa,KAAM76B,GAAW67B,IACnC9iC,IAAK8hC,aAAa,QAAS76B,GAAW87B,IACtC/iC,IAAK8hC,aAAa,KAAM76B,GAAW+7B,IACnChjC,IAAK8hC,aAAa,KAAM76B,GAAWg8B,IACnCjjC,IAAK8hC,aAAa,MAAO76B,GAAWi8B,IACpCljC,IAAK8hC,aAAa,KAAM76B,GAAWk8B,IACnCnjC,IAAK8hC,aAAa,KAAM76B,GAAWm8B,IACnCpjC,IAAK8hC,aAAa,KAAM76B,GAAWo8B,IACnCrjC,IAAK8hC,aAAa,KAAM76B,GAAWq8B,IACnCtjC,IAAK8hC,aAAa,UAAW76B,GAAWs8B,IACxCvjC,IAAK8hC,aAAa,KAAM76B,GAAWu8B,IACnCxjC,IAAK8hC,aAAa,KAAM76B,GAAWw8B,IACnCzjC,IAAK8hC,aAAa,QAAS76B,GAAWy8B,IACvB1jC,EAAf,ECvDA,MAEM2jC,GAAW,CACfC,QAAS,CAAC,QAAS,MAAO,SAAU,cAAe,aAAc,cAAe,YAAa,mBAAoB,cAI7GC,GAAgBC,uMAAYC,+BAAiC,KAE/DF,KACFF,GAASK,QAAU,CACjBtiB,cAAemiB,KAyBJI,UArBI,IACV,cAAC,IAAD,CAAeC,MAAO7C,KAAtB,SACG,cAAC,mBAAD,CAAkB8C,MAjBPC,yBAAeC,KAiB1B,SACI,cAAC,IAAD,CAAQV,SAAUA,GAAUW,SAAS,SAArC,SACK,EACX/nC,QAEKA,EAKE,cAAC,EAAD,UACe,cAAC,GAAD,CAAKA,GAAIA,MAJtB,Y,iCCnCnB,miCAaO,MAAMqP,EAAgB,gBAChBkI,EAAe,eACfC,EAAQ,QACR9E,EAAM,MACN+E,EAAe,eACfC,EAAc,cACdmC,EAAM,MACNF,EAAU,UACVC,EAAY,YACZF,EAAQ,QACR9B,EAAW,WACXrS,EAAO,OACPK,EAAS,SACT8S,EAAY,YACZI,EAAmB,mBAC1BkvB,EAAwB,YACxBC,EAAsB,UAEftR,EAAsBrxB,KAAU+S,EAAY/S,EAAK/C,MAAMo0B,oBACvDrL,EAAa7O,GAAYpE,EAAYoE,GAAUyrB,aAAeF,EAC9Dvd,EAAsBhO,GAAYpE,EAAYoE,GAAUyrB,aAAeD,EACvErrB,EAAsBH,GAAYpE,EAAYoE,GAAU0rB,kBAAoB,EAC5E3c,EAAa/O,GAAYpE,EAAYoE,GAAU8O,SAAW,GAE1DlT,EAAc,CACzB,CAAChJ,GAAgB,CACftP,GAAIsP,EACJqN,aAAc,iBACdpE,SAAU,gBACV0E,YAAavZ,IAAKC,EAAE,kBACpB0kC,OAAQroC,GAAE,qCAAkCA,GAC5CwrB,QAAS,kBACT4c,iBAAkB,IAEpB,CAAC5wB,GAAe,CACdxX,GAAIwX,EACJmF,aAAc,iBACd2rB,mBAAoB,oBACpB/vB,SAAU,gBACV0E,YAAavZ,IAAKC,EAAE,gBACpBwkC,WAAYF,EACZrR,qBAAqB,EACrByR,OAAQroC,GAAE,qCAAkCA,GAC5CwrB,QAAS,mBAEX,CAAC/T,GAAQ,CACPzX,GAAIyX,EACJkF,aAAc,iBACdpE,SAAU,gBACV+vB,mBAAoB,aACpBrrB,YAAavZ,IAAKC,EAAE,UACpBwkC,WAAYF,EACZrR,qBAAqB,EACrByR,OAAQroC,GAAE,qCAAkCA,GAC5CwrB,QAAS,mBAEX,CAAC7Y,GAAM,CACL3S,GAAI2S,EACJgK,aAAc,OACd2rB,mBAAoB,WACpB/vB,SAAU,MACV0E,YAAavZ,IAAKC,EAAE,QACpBwkC,WAAYF,EACZrR,qBAAqB,EACrByR,OAAQroC,GAAE,4BAAyBA,GACnCwrB,QAAS,QAEX,CAAC9T,GAAe,CACd1X,GAAI0X,EACJiF,aAAc,eACdpE,SAAU,cACV0E,YAAavZ,IAAKC,EAAE,iBACpBwkC,WAAYD,EACZtR,qBAAqB,EACrByR,OAAQroC,GAAE,qCAAkCA,GAC5CwrB,QAAS,iBAEX,CAAC7T,GAAc,CACb3X,GAAI2X,EACJgF,aAAc,cACdpE,SAAU,aACV0E,YAAavZ,IAAKC,EAAE,gBACpBwkC,WAAYD,EACZtR,qBAAqB,EACrByR,OAAQroC,GAAE,wCAAqCA,GAC/CwrB,QAAS,oBAEX,CAAC1R,GAAM,CACL6C,aAAc,OACdpE,SAAU,SACV0E,YAAavZ,IAAKC,EAAE,SAEtB,CAACiW,GAAU,CACT5Z,GAAI4Z,EACJ+C,aAAc,UACdpE,SAAU,UACV0E,YAAavZ,IAAKC,EAAE,WACpB0kC,OAAQ,CAACroC,EAAIwC,KACX,OAAQA,GACN,IAAK,OACH,MAAM,2CAAN,OAAkDxC,GAEpD,IAAK,sBACL,IAAK,cACL,QACE,MAAM,eAAN,OAAsBA,EAAtB,wBAAuC,IAAIuoC,MAAOC,cAI1D,CAAC3uB,GAAY,CACX7Z,GAAI6Z,EACJ8C,aAAc,YACdpE,SAAU,YACV0E,YAAavZ,IAAKC,EAAE,aACpB0kC,OAAQroC,GAAE,wBAAqBA,EAArB,UAEZ,CAAC2Z,GAAQ,CACP3Z,GAAI2Z,EACJgD,aAAc,QACdpE,SAAU,QACV0E,YAAavZ,IAAKC,EAAE,SACpB0kC,OAAQroC,GAAE,2DAAwDA,IAEpE,CAACwF,GAAO,CACNxF,GAAIwF,EACJ+S,SAAU,QAEZ,CAACV,GAAW,CACVU,SAAU,YAEZ,CAAC1S,GAAS,CACR0S,SAAU,QAEZ,CAACI,GAAY,CACXJ,SAAU,QAEZ,CAACQ,GAAmB,CAClBR,SAAU,SAGD3F,EAAkBpQ,GAAQ8V,EAAY9V,GAAMma,aAC5C0Q,EAAwB7qB,GAAQ8V,EAAY9V,GAAM8lC,oBAAsB,KACxE7tB,EAAa,CAACjY,EAAM+C,EAAMtF,KACrC,IAAIE,EAUJ,OARIqC,IAASsX,IACX3Z,EAAMoF,EAAK6tB,WAGT9a,EAAY9V,IAAS8V,EAAY9V,GAAM6lC,SACzCloC,EAAG,UAAM8kB,YAAWhlB,GAAjB,YAAwBqY,EAAY9V,GAAM6lC,OAAO9iC,EAAKvF,GAAIuF,EAAK/C,QAG7DrC,GAEIiP,EAAc5M,IACzB,OAAQA,GACN,KAAKgV,EACL,KAAKE,EACL,KAAKkC,EACH,OAAO6uB,IAET,KAAKhxB,EACL,KAAKE,EACH,OAAO+wB,IAET,KAAK/1B,EACH,OAAOg2B,IAET,KAAK7uB,EACH,OAAO8uB,IAET,KAAK/uB,EACH,OAAOsW,IAET,KAAKxW,EACH,OAAOkvB,IAET,KAAKrjC,EACH,OAAOsjC,IAET,KAAKjxB,EACH,OAAOkxB,IAET,KAAKljC,EACH,OAAOmjC,IAET,QACE,OAAOC,O,kCCzMb,8OAKO,SAAStgC,EAAQugC,GACtB,OAAO5K,MAAM6K,QAAQD,GAASA,EAAQ,GAEjC,SAASliC,EAASkiC,GACvB,OAAOE,IAASF,GAASA,EAAQ,GAO5B,SAAS11B,EAAamd,GAC3B,OAAOA,EAAMxb,QAAO,CAAC+Q,EAAK3gB,KACxB2gB,EAAI3gB,EAAKvF,IAAMuF,EACR2gB,IACN,IAYE,MAAMwJ,EAAa,CAACxyB,EAAOyU,KAChC,GAA2B,qBAAhB03B,EAAOC,MAAwBA,KAAKC,eAAgB,CAC7D,MAAMjO,EAAS3pB,GAAY,KAC3B,OAAO,IAAI23B,KAAKC,eAAejO,EAAQ,CACrCkO,KAAM,UACNC,MAAO,QACPC,IAAK,YACJC,OAAO,IAAIpB,KAAKrrC,IAGrB,OAAOA,EAAMqL,OAAO,EAAG,IAAIqhC,QAAQ,IAAK,MAoB7B5kC,EAAkB,CAAC9H,EAAOwN,SAA2B4L,IAAVpZ,GAAiC,OAAVA,EAAiBwN,EAAexN,EAClG+nB,EAAahlB,IACxB,MAAM4pC,EAAM5pC,EAAGG,IAAIC,SACbypC,EAAMD,EAAI7kB,QAAQyZ,QAAQ,QAChC,OAAOqL,GAAO,EAAID,EAAI7kB,QAAQhI,MAAM,EAAG8sB,GAAOD,EAAI7kB,W,mDClEpD,+jBAGO,MAAM4S,EAAoB,WAEpBF,EAAkB,GAIlBJ,EAAS,CAAC,GAAI,IACdre,EAAiB,CAC5BsmB,EAAG,EACHvB,EAAG,EACH/sB,EAAG,GACHC,EAAG,IAMQ6uB,EAAuB,GACvBsB,EAA4B,GAC5BD,EAA2B,GAK3B1E,EAAqB,KACrBlF,EAAiB,IAVT,GAuBfuS,EAAuBxK,GAAKyK,OAAOC,UAAU1K,IAAMA,GAAK,EAGjDtH,EAAW1yB,GAAQwkC,EAAqBxkC,EAAKg6B,IAAMwK,EAAqBxkC,EAAKy4B,IAAM+L,EAAqBxkC,EAAK0L,IAAM84B,EAAqBxkC,EAAK2L,GAmB7IhL,EAAwByiB,IAC5B,CACLnB,EAAGmB,EACHuhB,KAAM,IAIGrxB,EAAwB,CAACD,EAAME,GAAW,KAC9C,CACLymB,EAAG,EACHvB,EAAGplB,EACH3H,EAvDwBk5B,GAwDxBj5B,EAAG,EACHk5B,SAAUtxB,EACVoxB,KAAM,IAGGlxB,EAA6BwgB,IACjC,CACL+F,EAAG,EACHvB,EAAG,EACH/sB,EAAGuoB,EAAmB4H,EAjEE+I,GAkExBj5B,EAAG6uB,EACHqK,QAAQ,EACRF,KAAM,IAyBG9yB,EAAYzR,GAASA,EAAMC,KAAI,CAACL,EAAMmrB,KACjD,MAAM2Z,EAAgBpS,EAAS1yB,GAAQA,EAAO8B,OAAO2J,OAAO,GAAIzL,EAlE1CiiB,KACtB,IAAKuiB,EAAqBviB,GACxB,MAAM,IAAI8iB,MAAM,6BAGlB,MAAMC,EAAM/iB,EAnCc,EAoCpBgjB,EAAMvrC,KAAK8N,MAAMya,EApCG,GAqCpBijB,EAAYxrC,KAAK8N,MAAM29B,MACvBC,EAA+B,EAAlBjT,EACnB,MAAO,CACL6H,EAAGgL,EAAME,EACTzM,EAAGwM,EAAMG,EACT15B,EAAGw5B,EACHv5B,EAAGy5B,IAqDiEC,CAASla,IAC/E,OAAOrpB,OAAO2J,OAAO,GAAIq5B,EAhBM9kC,KAExB,CACLmnB,eAFqBztB,KAAK4rC,MAAMnT,EAAkBnyB,EAAK2L,EAAIjS,KAAKC,IAAI,EAAGqG,EAAK2L,EAAI,GAAKomB,EAAO,MAetDwT,CAAkBT,OAE/C9kB,EAAmBvlB,GAAE,eAAYA,GACvC,SAAS22B,EAAa32B,GAC3B,MAAM4wB,EAAK5pB,YAASuoB,SAASuK,cAAT,WAA2BvU,EAAiBvlB,MAC5D+qC,IAAWna,EAAGoa,kBAAkB9zB,YAAW,IAAM0Z,EAAGoa,gBAAgBpa,EAAGqa,YAAc,EAAGra,EAAGhE,aAAe,IAAI,M,iCCvHpH,qIAEO,MAAMhV,EAA2BrS,IAAS,IAAD,EAC9C,IAAK6jC,IAAS7jC,GACZ,OAAO,KAIT,OAAOA,EADO,UAAG+S,IAAY/S,EAAK/C,aAApB,aAAG,EAAwB+V,WAChBhT,EAAK2lC,aAAe3lC,EAAK4lC,OAAS5lC,EAAKK,KAAOL,EAAK6lC,aAAe7lC,EAAK8lC,YAAc,IAEnG54B,EAAqBlN,GAAQqS,EAAyBrS,GAAMvF,GAC5DstB,EAAuB/nB,GAAQqS,EAAyBrS,GAAMsC,M,kCCX3E,8NAKA,MAAMyjC,EAA2B,CAC/B,CAAC34B,KAAM,YACP,CAAC+E,KAAe,oBAChB,CAACC,KAAc,oBAKX4zB,EAAY/oC,IAChB,GAH0BA,IAAQ,CAACiV,IAAOD,KAAc/K,SAASjK,GAG7DgpC,CAAoBhpC,GACtB,OAAO,EAIT,OAAO6mC,EADYiC,EAAyB9oC,KAIjC2hB,EAAoB3hB,KAAU+oC,EAAU/oC,GAgBxCkpB,EAAU,CAACnmB,EAAMtF,KAC5B,MAAM+kB,EAAUC,YAAWhlB,GACrBooC,EAAS/vB,IAAY/S,EAAK/C,MAAM6lC,OAAO51B,YAAmBlN,IAChE,MAAM,GAAN,OAAUyf,EAAV,YAAqBqjB,IAEVoD,EAAO3rC,MAAOyF,EAAMmf,GAC/BI,cACAtb,aACA0S,UAAU,OAEV,MAAMwvB,EAAS,IAAKhnB,KACfxI,EACH0U,GAAIrL,YAAiBhgB,EAAKvF,KAEtBwC,EAAOgH,GAAcjE,EAAK/C,KA7BR,EAACmpC,EAAQD,EAAQ5mB,KACnC6mB,GAAUA,EAAOF,OAIvBE,EAAOxrC,IAAM2kB,EAAYE,QACzB2mB,EAAOC,kBAAmB,EAC1BD,EAAOnkC,WAAY,EAEfsd,EAAYI,OACdymB,EAAOzmB,KAAOJ,EAAYI,MAG5BymB,EAAOF,KAAKC,KAkBZG,CADeN,EAAU/oC,GACNkpC,EAAQ5mB,IAEhBgnB,EAASvmC,IACpB,MAAMomC,EAASJ,EAAUhmC,EAAK/C,MAE1BmpC,GAAUA,EAAOG,QACnBH,EAAOG,OAAOvmB,YAAiBhgB,EAAKvF,MAG3B+rC,EAAU,CAACxmC,EAAMiE,KAC5B,MAAMmiC,EAASJ,EAAU/hC,GAErBmiC,GAAUA,EAAOI,SACnBJ,EAAOI,QAAQxmB,YAAiBhgB,EAAKvF,Q,sCClEzCnE,EAAOC,QAAU,CAAC,eAAiB,mCAAmC,UAAY,8BAA8B,gBAAkB,sC,gECAlID,EAAOC,QAAU,CAAC,KAAO,yBAAyB,SAAW,6BAA6B,QAAU,4BAA4B,WAAa,iC,oBCA7ID,EAAOC,QAAU,CAAC,KAAO,gCAAgC,KAAO,gCAAgC,SAAW,oCAAoC,WAAa,wC,oBCA5JD,EAAOC,QAAU,CAAC,OAAS,4BAA4B,KAAO,4B,oBCA9DD,EAAOC,QAAU,CAAC,UAAY,0BAA0B,MAAQ,sBAAsB,QAAU,wBAAwB,WAAa,2BAA2B,aAAe,+B,oBCA/KD,EAAOC,QAAU,CAAC,UAAY,kCAAkC,SAAW,iCAAiC,SAAW,mC,oBCAvHD,EAAOC,QAAU,CAAC,UAAY,iCAAiC,SAAW,gCAAgC,SAAW,gCAAgC,QAAU,+BAA+B,UAAY,iCAAiC,cAAgB,uC,oBCA3PD,EAAOC,QAAU,CAAC,KAAO,+B,oBCAzBD,EAAOC,QAAU,CAAC,SAAW,kCAAkC,WAAa,oCAAoC,MAAQ,+BAA+B,aAAe","file":"static/js/app.d353d673.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"showMoreButton\":\"CategorizedMenuGroup_showMoreButton__2RbRp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"ItemSelector_menu__2VYae\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"EditTitleBar_section__LIaIC\",\"titleDescription\":\"EditTitleBar_titleDescription__1YsU6\",\"title\":\"EditTitleBar_title__3mUbt\",\"description\":\"EditTitleBar_description__24U5X\",\"itemSelector\":\"EditTitleBar_itemSelector__1cFEp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonContainer\":\"FilterSelector_buttonContainer__O_amY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"actions\":\"ViewTitleBar_actions__2UTRz\",\"editLink\":\"ViewTitleBar_editLink__d_HzW\",\"titleBar\":\"ViewTitleBar_titleBar__eiwJS\",\"titleBarIcon\":\"ViewTitleBar_titleBarIcon__2cBxv\",\"strip\":\"ViewTitleBar_strip__3xR4U\",\"backdrop\":\"ViewTitleBar_backdrop__2Cpm8\",\"shareButton\":\"ViewTitleBar_shareButton__3yEKR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"NoVisualizationMessage_message__22IPi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"center\":\"LoadingMask_center__KHIYy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FatalErrorBoundary_container__3SViR\",\"icon\":\"FatalErrorBoundary_icon__2UbeP\",\"message\":\"FatalErrorBoundary_message__3FzrY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"deleteItemButton\":\"DeleteItemButton_deleteItemButton__3TJm9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"warning\":\"PrintItemInfo_warning__123PK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"line\":\"ItemFooter_line__3Ko0R\",\"scrollContainer\":\"ItemFooter_scrollContainer__tuq4P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Item_list__1_nkQ\",\"item\":\"Item_item__3-6QE\",\"itemicon\":\"Item_itemicon__QlouX\",\"link\":\"Item_link___3c_q\",\"deleteicon\":\"Item_deleteicon__3usrl\",\"deletebutton\":\"Item_deletebutton__1DpBW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"titlePage\":\"Item_titlePage__18CNQ\",\"name\":\"Item_name__3nuTV\",\"description\":\"Item_description__1gFQd\",\"filterTitle\":\"Item_filterTitle__2p7TQ\",\"filterList\":\"Item_filterList__qc_G3\",\"filterListItem\":\"Item_filterListItem__sPbBY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bar\":\"FilterBar_bar__1Ma3p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ConfirmDeleteDialog_content__EqswE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editBar\":\"EditBar_editBar__1d1xM\",\"controls\":\"EditBar_controls__1t0nO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"infoWrapper\":\"PrintInfo_infoWrapper__3m2lt\",\"infoHeader\":\"PrintInfo_infoHeader__KyW8I\",\"info\":\"PrintInfo_info__13oXZ\",\"infoList\":\"PrintInfo_infoList__Iu9MC\",\"divider\":\"PrintInfo_divider__3wzx9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PrintActionsBar_container__2iQp7\",\"topMargin\":\"PrintActionsBar_topMargin__OpYDN\",\"inner\":\"PrintActionsBar_inner__uBqU7\",\"link\":\"PrintActionsBar_link__lFUmI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"PrintLayoutDashboard_wrapper__1WDh4\",\"pageOuter\":\"PrintLayoutDashboard_pageOuter__22acI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"PrintDashboard_wrapper__1O3s_\",\"pageOuter\":\"PrintDashboard_pageOuter__fl9tw\"};","import React, { createContext, useContext, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash/debounce';\nexport const WindowDimensionsCtx = createContext(null);\n\nconst windowDims = () => ({\n  height: window.innerHeight,\n  width: window.innerWidth\n});\n\nconst WindowDimensionsProvider = ({\n  children\n}) => {\n  const [dimensions, setDimensions] = useState(windowDims());\n  useEffect(() => {\n    const handleResize = debounce(() => {\n      setDimensions(windowDims());\n    }, 200);\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n  return <WindowDimensionsCtx.Provider value={dimensions}>\n            {children}\n        </WindowDimensionsCtx.Provider>;\n};\n\nWindowDimensionsProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};\nexport default WindowDimensionsProvider;\nexport const useWindowDimensions = () => {\n  return useContext(WindowDimensionsCtx);\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport classes from './styles/ControlBar.module.css';\nexport const DRAG_HANDLE_HEIGHT = 7;\n\nclass ControlBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dragging: false\n    };\n  }\n\n  onStartDrag = () => {\n    this.setState({\n      dragging: true\n    });\n    window.addEventListener('mousemove', this.onDrag);\n    window.addEventListener('mouseup', this.onEndDrag);\n  };\n  onDrag = event => {\n    event.preventDefault();\n    event.stopPropagation();\n    const newHeight = event.clientY;\n\n    if (this.props.onChangeHeight && newHeight !== this.props.height && newHeight > 0) {\n      requestAnimationFrame(() => {\n        this.props.onChangeHeight(newHeight);\n      });\n    }\n  };\n  onEndDrag = () => {\n    this.setState({\n      dragging: false\n    });\n    window.removeEventListener('mousemove', this.onDrag);\n    window.removeEventListener('mouseup', this.onEndDrag);\n\n    if (this.props.onEndDrag) {\n      this.props.onEndDrag();\n    }\n  };\n  renderDragHandle = () => typeof this.props.onChangeHeight === 'function' && <div data-testid=\"controlbar-drag-handle\" className={classes.draghandle} style={{\n    height: DRAG_HANDLE_HEIGHT\n  }} onMouseDown={this.onStartDrag} />;\n\n  render() {\n    const height = Math.max(this.props.height, 0) + DRAG_HANDLE_HEIGHT;\n    const rootClass = cx(classes.root, this.state.dragging && classes.dragging);\n    return <div style={{\n      height\n    }} className={rootClass}>\n                <div className={classes.content}>{this.props.children}</div>\n                {this.renderDragHandle()}\n            </div>;\n  }\n\n}\n\nControlBar.propTypes = {\n  /**\n   * The height of the control bar in number of lines. Must be a positive integer.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Callback function that is called when the control bar is resized.\n   * The callback receives one argument: The new height in pixels.\n   *\n   * If no callback is specified the control bar will not have a drag handle.\n   */\n  height: PropTypes.number.isRequired,\n\n  /**\n   * Callback function that is called when the control bar is dropped after being dragged.\n   * The callback receives one argument: The new height in pixels.\n   *\n   * Ignored if no \"onChangeHeight\" function is provided.\n   */\n  onChangeHeight: PropTypes.func,\n\n  /**\n   * The contents of the control bar.\n   */\n  onEndDrag: PropTypes.func\n};\nControlBar.defaultProps = {\n  onChangeHeight: null,\n  onEndDrag: null\n};\nexport default ControlBar;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst StarIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>;\n\nStarIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default StarIcon;","import { getInstance } from 'd2';\nexport const apiPostDataStatistics = async (eventType, id) => {\n  const d2 = await getInstance();\n  const url = `dataStatistics?eventType=${eventType}&favorite=${id}`;\n  d2.Api.getApi().post(url);\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Chip } from '@dhis2/ui';\nimport { Link } from 'react-router-dom';\nimport debounce from 'lodash/debounce';\nimport StarIcon from '../../icons/Star';\nimport { apiPostDataStatistics } from '../../api/dataStatistics';\nimport classes from './styles/DashboardItemChip.module.css';\nexport const DashboardItemChip = ({\n  starred,\n  selected,\n  label,\n  dashboardId,\n  onClick\n}) => {\n  const chipProps = {\n    selected\n  };\n\n  if (starred) {\n    const selectedState = selected ? classes.selected : classes.unselected;\n    chipProps.icon = <StarIcon className={`${classes.icon} ${selectedState}`} />;\n  }\n\n  const debouncedPostStatistics = debounce(() => apiPostDataStatistics('DASHBOARD_VIEW', dashboardId), 500);\n\n  const handleClick = () => {\n    debouncedPostStatistics();\n    onClick();\n  };\n\n  return <Link className={classes.link} to={`/${dashboardId}`} onClick={handleClick} data-test=\"dashboard-chip\">\n            <Chip {...chipProps}>{label}</Chip>\n        </Link>;\n};\nDashboardItemChip.propTypes = {\n  dashboardId: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  selected: PropTypes.bool.isRequired,\n  starred: PropTypes.bool.isRequired,\n  onClick: PropTypes.func.isRequired,\n  classes: PropTypes.object\n};\nexport default DashboardItemChip;","import React from 'react';\nimport { colors } from '@dhis2/ui';\n\nconst AddCircleIcon = () => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" fill={colors.teal600} viewBox=\"0 0 24 24\">\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm4 11h-3v3c0 .55-.45 1-1 1s-1-.45-1-1v-3H8c-.55 0-1-.45-1-1s.45-1 1-1h3V8c0-.55.45-1 1-1s1 .45 1 1v3h3c.55 0 1 .45 1 1s-.45 1-1 1z\" />\n    </svg>;\n\nexport default AddCircleIcon;","import React from 'react';\n\nconst SearchIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\" />\n    </svg>;\n\nexport default SearchIcon;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst ClearIcon = ({\n  className\n}) => <svg className={className} fill={colors.grey800} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n        <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>;\n\nClearIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default ClearIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ClearIcon from '../../icons/Clear';\nimport classes from './styles/ClearButton.module.css';\nexport const ClearButton = ({\n  onClear\n}) => <button className={classes.button} onClick={onClear}>\n        <span>\n            <ClearIcon className={classes.icon} color=\"action\" />\n        </span>\n    </button>;\nClearButton.propTypes = {\n  onClear: PropTypes.func.isRequired\n};\nexport default ClearButton;","import { validateReducer } from '../modules/util';\nexport const SET_DASHBOARDS_FILTER = 'SET_DASHBOARDS_FILTER';\nexport const CLEAR_DASHBOARDS_FILTER = 'CLEAR_DASHBOARDS_FILTER';\nexport const DEFAULT_STATE_DASHBOARDS_FILTER = '';\nexport default ((state = DEFAULT_STATE_DASHBOARDS_FILTER, action) => {\n  switch (action.type) {\n    case SET_DASHBOARDS_FILTER:\n      {\n        return validateReducer(action.value, DEFAULT_STATE_DASHBOARDS_FILTER);\n      }\n\n    case CLEAR_DASHBOARDS_FILTER:\n      {\n        return DEFAULT_STATE_DASHBOARDS_FILTER;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetDashboardsFilter = state => state.dashboardsFilter;","const SMALL_SCREEN_BREAKPOINT = 480;\n\nconst isSmallScreen = width => width <= SMALL_SCREEN_BREAKPOINT;\n\nexport default isSmallScreen;","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport cx from 'classnames';\nimport SearchIcon from '../../icons/Search';\nimport ClearButton from './ClearButton';\nimport { useWindowDimensions } from '../WindowDimensionsProvider';\nimport { acSetDashboardsFilter, acClearDashboardsFilter } from '../../actions/dashboardsFilter';\nimport { sGetDashboardsFilter } from '../../reducers/dashboardsFilter';\nimport isSmallScreen from '../../modules/isSmallScreen';\nimport classes from './styles/Filter.module.css';\nexport const KEYCODE_ENTER = 13;\nexport const KEYCODE_ESCAPE = 27;\nexport const FilterUnconnected = ({\n  clearDashboardsFilter,\n  filterText,\n  isMaxHeight,\n  setDashboardsFilter,\n  onKeypressEnter,\n  onToggleMaxHeight\n}) => {\n  const [focusedClassName, setFocusedClassName] = useState('');\n  const {\n    width\n  } = useWindowDimensions();\n\n  const setFilterValue = event => {\n    event.preventDefault();\n    setDashboardsFilter(event.target.value);\n  };\n\n  const onKeyUp = event => {\n    switch (event.keyCode) {\n      case KEYCODE_ENTER:\n        onKeypressEnter();\n        clearDashboardsFilter();\n        break;\n\n      case KEYCODE_ESCAPE:\n        clearDashboardsFilter();\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const onFocus = event => {\n    event.preventDefault();\n    setFocusedClassName(classes.focused);\n  };\n\n  const onBlur = event => {\n    event.preventDefault();\n    setFocusedClassName('');\n  };\n\n  return isSmallScreen(width) && !isMaxHeight ? <button className={classes.searchButton} onClick={onToggleMaxHeight}>\n            <SearchIcon className={classes.searchIcon} />\n        </button> : <div className={cx(classes.container, `${focusedClassName}`)} onFocus={onFocus} onBlur={onBlur}>\n            <SearchIcon className={classes.searchIcon} />\n            <input className={classes.input} type=\"text\" placeholder={i18n.t('Search for a dashboard')} onChange={setFilterValue} onKeyUp={onKeyUp} value={filterText} data-test=\"search-dashboard-input\" />\n            {filterText && <ClearButton onClear={clearDashboardsFilter} />}\n        </div>;\n};\nFilterUnconnected.propTypes = {\n  clearDashboardsFilter: PropTypes.func,\n  filterText: PropTypes.string,\n  isMaxHeight: PropTypes.bool,\n  setDashboardsFilter: PropTypes.func,\n  onKeypressEnter: PropTypes.func,\n  onToggleMaxHeight: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  filterText: sGetDashboardsFilter(state)\n});\n\nconst mapDispatchToProps = {\n  setDashboardsFilter: acSetDashboardsFilter,\n  clearDashboardsFilter: acClearDashboardsFilter\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterUnconnected);","import { SET_DASHBOARDS_FILTER, CLEAR_DASHBOARDS_FILTER } from '../reducers/dashboardsFilter'; // actions\n\nexport const acSetDashboardsFilter = value => ({\n  type: SET_DASHBOARDS_FILTER,\n  value\n});\nexport const acClearDashboardsFilter = () => ({\n  type: CLEAR_DASHBOARDS_FILTER\n});","import React from 'react';\nexport const ChevronDown = () => <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"m11.29289 15.7071c.39053.3905 1.02369.3905 1.41422 0l4.99999-4.99999c.3905-.39053.3905-1.02369 0-1.41422-.3905-.39052-1.0237-.39052-1.4142 0l-4.2929 4.2929-4.29289-4.2929c-.39053-.39052-1.02369-.39052-1.41422 0-.39052.39053-.39052 1.02369 0 1.41422z\" fill=\"#a0adba\" />\n    </svg>;\nexport const ChevronUp = () => <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"m11.2928932 8.29289322c.360484-.36048396.927715-.3882135 1.3200062-.08318861l.0942074.08318861 5 4.99999998c.3905243.3905243.3905243 1.0236893 0 1.4142136-.360484.3604839-.927715.3882135-1.3200062.0831886l-.0942074-.0831886-4.2928932-4.2921068-4.29289322 4.2921068c-.36048396.3604839-.92771502.3882135-1.32000622.0831886l-.09420734-.0831886c-.36048396-.360484-.3882135-.927715-.08318861-1.3200062l.08318861-.0942074z\" fill=\"#a0adba\" />\n    </svg>;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Tooltip } from '@dhis2/ui';\nimport { ChevronDown, ChevronUp } from './assets/icons';\nimport classes from './styles/ShowMoreButton.module.css';\nexport const SHOWMORE_BAR_HEIGHT = 16;\n\nconst ShowMoreButton = ({\n  onClick,\n  isMaxHeight,\n  disabled\n}) => {\n  const buttonLabel = isMaxHeight ? i18n.t('Show fewer dashboards') : i18n.t('Show more dashboards');\n  return <div className={classes.container}>\n            {disabled ? <div className={classes.disabled}>\n                    <ChevronDown />\n                </div> : <Tooltip content={buttonLabel} placement=\"bottom\">\n                    <button className={classes.showMore} onClick={onClick} data-test=\"showmore-button\" aria-label={buttonLabel}>\n                        {isMaxHeight ? <ChevronUp /> : <ChevronDown />}\n                    </button>\n                </Tooltip>}\n        </div>;\n};\n\nShowMoreButton.propTypes = {\n  disabled: PropTypes.bool,\n  isMaxHeight: PropTypes.bool,\n  onClick: PropTypes.func\n};\nexport default ShowMoreButton;","import { SHOWMORE_BAR_HEIGHT } from './ShowMoreButton';\nexport const CONTROL_BAR_ROW_HEIGHT = 40;\nexport const FIRST_ROW_PADDING_HEIGHT = 10;\nexport const MIN_ROW_COUNT = 1;\nexport const HEADERBAR_HEIGHT = 48;\nconst CONTROL_BAR_OUTER_HEIGHT_DIFF = FIRST_ROW_PADDING_HEIGHT + SHOWMORE_BAR_HEIGHT - 2; // 2 pixel \"adjustment\"\n\nexport const getRowsHeight = rows => {\n  return rows * CONTROL_BAR_ROW_HEIGHT;\n};\nexport const getNumRowsFromHeight = height => {\n  return Math.floor((height - CONTROL_BAR_OUTER_HEIGHT_DIFF) / CONTROL_BAR_ROW_HEIGHT);\n};\nexport const getControlBarHeight = rows => {\n  return getRowsHeight(rows) + CONTROL_BAR_OUTER_HEIGHT_DIFF;\n};","/** @module reducers/controlBar */\nimport { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\nexport const SET_CONTROLBAR_USER_ROWS = 'SET_CONTROLBAR_USER_ROWS';\nexport const DEFAULT_STATE_CONTROLBAR_ROWS = 1;\n\nconst userRows = (state = DEFAULT_STATE_CONTROLBAR_ROWS, action) => {\n  switch (action.type) {\n    case SET_CONTROLBAR_USER_ROWS:\n      return validateReducer(action.value, DEFAULT_STATE_CONTROLBAR_ROWS);\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  userRows\n});\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\n\nexport const sGetControlBarRoot = state => state.controlBar; // Selector dependency level 2\n\nexport const sGetControlBarUserRows = state => sGetControlBarRoot(state).userRows;","import { TEXT, SPACER } from './itemTypes';\nimport { getGridItemProperties } from '../components/ItemGrid/gridUtil';\nexport const spacerContent = 'SPACER_ITEM_FOR_DASHBOARD_LAYOUT_CONVENIENCE';\nexport const emptyTextItemContent = 'TEXT_ITEM_WITH_NO_CONTENT';\n\nconst isBackendSpacerType = item => item.type === TEXT && item.text === spacerContent;\n\nconst isUiSpacerType = item => item.type === SPACER;\n\nconst isTextType = item => item.type === TEXT && item.text !== spacerContent;\n\nexport const convertUiItemsToBackend = items => items.map(item => {\n  let text = null;\n\n  if (isUiSpacerType(item)) {\n    text = spacerContent;\n  } else if (isTextType(item)) {\n    text = item.text || emptyTextItemContent;\n  }\n\n  return { ...item,\n    ...(text ? {\n      text\n    } : {})\n  };\n});\nexport const convertBackendItemsToUi = items => items.map(item => {\n  const type = isBackendSpacerType(item) ? SPACER : item.type;\n  const gridProperties = getGridItemProperties(item.id);\n  const text = isTextType(item) ? item.text === emptyTextItemContent ? '' : item.text : null;\n  return { ...item,\n    ...(text !== null ? {\n      text\n    } : {}),\n    type,\n    ...gridProperties\n  };\n});","/** @module reducers/dashboards */\nimport arrayFrom from 'd2-utilizr/lib/arrayFrom';\nimport arraySort from 'd2-utilizr/lib/arraySort';\nimport { orArray, orObject } from '../modules/util';\nimport { convertBackendItemsToUi } from '../modules/uiBackendItemConverter';\nexport const SET_DASHBOARDS = 'SET_DASHBOARDS';\nexport const ADD_DASHBOARDS = 'ADD_DASHBOARDS';\nexport const SET_DASHBOARD_STARRED = 'SET_DASHBOARD_STARRED';\nexport const SET_DASHBOARD_DISPLAY_NAME = 'SET_DASHBOARD_DISPLAY_NAME';\nexport const SET_DASHBOARD_ITEMS = 'SET_DASHBOARD_ITEMS';\nexport const DEFAULT_STATE_DASHBOARDS = {\n  byId: null,\n  items: []\n};\nexport const EMPTY_DASHBOARD = {}; // reducer helper functions\n\nconst updateDashboardProp = ({\n  state,\n  dashboardId,\n  prop,\n  value\n}) => ({\n  byId: { ...state.byId,\n    [dashboardId]: { ...state.byId[dashboardId],\n      [prop]: value\n    }\n  },\n  items: state.items\n});\n/**\n * Reducer that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n * @returns {Object}\n */\n\n\nexport default ((state = DEFAULT_STATE_DASHBOARDS, action) => {\n  switch (action.type) {\n    case SET_DASHBOARDS:\n      {\n        return {\n          byId: action.value,\n          items: []\n        };\n      }\n\n    case ADD_DASHBOARDS:\n      {\n        return { ...state,\n          byId: { ...state.byId,\n            ...action.value\n          }\n        };\n      }\n\n    case SET_DASHBOARD_STARRED:\n      {\n        return updateDashboardProp({\n          state,\n          dashboardId: action.dashboardId,\n          prop: 'starred',\n          value: action.value\n        });\n      }\n\n    case SET_DASHBOARD_DISPLAY_NAME:\n      {\n        return updateDashboardProp({\n          state,\n          dashboardId: action.dashboardId,\n          prop: 'displayName',\n          value: action.value\n        });\n      }\n\n    case SET_DASHBOARD_ITEMS:\n      {\n        return { ...state,\n          items: action.value\n        };\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetDashboardsRoot = state => state.dashboards; // selector level 1\n\n/**\n * Selector which returns a dashboard by id from the state object\n * If no matching dashboard is found it returns undefined\n * If dashboards.byId is null, then the dashboards api request\n * has not yet completed. If dashboards.byId is an empty object\n * then the dashboards api request is complete, but no dashboards\n * were returned\n *\n * @function\n * @param {Object} state The current state\n * @param {Number} id The id of the dashboard\n * @returns {Object | undefined}\n */\n\nexport const sGetDashboardById = (state, id) => orObject(sGetDashboardsRoot(state).byId)[id];\nexport const sDashboardsIsFetching = state => {\n  return sGetDashboardsRoot(state).byId === null;\n};\n/**\n * Selector which returns all dashboards (the byId object)\n *\n * @function\n * @param {Object} state The current state\n * @returns {Object | undefined}\n */\n\nexport const sGetAllDashboards = state => orObject(sGetDashboardsRoot(state).byId);\n/**\n * Selector which returns the current dashboard items\n *\n * @function\n * @param {Object} state The current state\n * @returns {Array}\n */\n\nexport const sGetDashboardItems = state => sGetDashboardsRoot(state).items; // selector level 2\n\nexport const sGetStarredDashboards = state => Object.values(sGetAllDashboards(state)).filter(dashboard => dashboard.starred === true);\nexport const sGetUnstarredDashboards = state => Object.values(sGetAllDashboards(state)).filter(dashboard => dashboard.starred === false); // selector level 3\n\nexport const sGetStarredDashboardIds = state => {\n  return sGetStarredDashboards(state).map(dashboard => dashboard.id);\n};\nexport const sGetUnstarredDashboardIds = state => sGetUnstarredDashboards(state).map(dashboard => dashboard.id);\nexport const sGetDashboardsSortedByStarred = state => [...arraySort(sGetStarredDashboards(state), 'ASC', 'displayName'), ...arraySort(sGetUnstarredDashboards(state), 'ASC', 'displayName')]; // utils\n\n/**\n * Returns the array of dashboards, customized for ui\n * @function\n * @param {Array} data The original dashboard list\n * @returns {Array}\n */\n\nexport const getCustomDashboards = data => arrayFrom(data).map(d => ({\n  id: d.id,\n  name: d.name,\n  displayName: d.displayName,\n  description: d.description,\n  displayDescription: d.displayDescription,\n  starred: d.favorite,\n  owner: d.user.name,\n  created: d.created.split('T').join(' ').substr(0, 16),\n  lastUpdated: d.lastUpdated.split('T').join(' ').substr(0, 16),\n  access: d.access,\n  numberOfItems: orArray(d.dashboardItems).length,\n  dashboardItems: convertBackendItemsToUi(d.dashboardItems)\n}));","/** @module reducers/selected */\nimport { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\nexport const SET_SELECTED_ID = 'SET_SELECTED_ID';\nexport const SET_SELECTED_ISLOADING = 'SET_SELECTED_ISLOADING';\nexport const SET_SELECTED_SHOWDESCRIPTION = 'SET_SELECTED_SHOWDESCRIPTION';\nexport const SET_SELECTED_ITEM_ACTIVE_TYPE = 'SET_SELECTED_ITEM_ACTIVE_TYPE';\nexport const CLEAR_SELECTED_ITEM_ACTIVE_TYPES = 'CLEAR_SELECTED_ITEM_ACTIVE_TYPES';\nexport const DEFAULT_STATE_SELECTED_ID = null;\nexport const DEFAULT_STATE_SELECTED_ISLOADING = false;\nexport const DEFAULT_STATE_SELECTED_SHOWDESCRIPTION = false;\nexport const DEFAULT_STATE_SELECTED_ITEM_ACTIVE_TYPES = {};\nexport const NON_EXISTING_DASHBOARD_ID = '0';\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\n\nconst id = (state = DEFAULT_STATE_SELECTED_ID, action) => {\n  switch (action.type) {\n    case SET_SELECTED_ID:\n      return validateReducer(action.value, DEFAULT_STATE_SELECTED_ID);\n\n    default:\n      return state;\n  }\n};\n\nconst isLoading = (state = DEFAULT_STATE_SELECTED_ISLOADING, action) => {\n  switch (action.type) {\n    case SET_SELECTED_ISLOADING:\n      return validateReducer(action.value, DEFAULT_STATE_SELECTED_ISLOADING);\n\n    default:\n      return state;\n  }\n};\n\nconst showDescription = (state = DEFAULT_STATE_SELECTED_SHOWDESCRIPTION, action) => {\n  switch (action.type) {\n    case SET_SELECTED_SHOWDESCRIPTION:\n      return validateReducer(action.value, DEFAULT_STATE_SELECTED_SHOWDESCRIPTION);\n\n    default:\n      return state;\n  }\n};\n\nconst itemActiveTypes = (state = DEFAULT_STATE_SELECTED_ITEM_ACTIVE_TYPES, action) => {\n  switch (action.type) {\n    case SET_SELECTED_ITEM_ACTIVE_TYPE:\n      {\n        return { ...state,\n          [action.id]: action.activeType\n        };\n      }\n\n    case CLEAR_SELECTED_ITEM_ACTIVE_TYPES:\n      {\n        return DEFAULT_STATE_SELECTED_ITEM_ACTIVE_TYPES;\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  id,\n  isLoading,\n  showDescription,\n  itemActiveTypes\n}); // Selectors\n\nexport const sGetSelectedRoot = state => state.selected;\nexport const sGetSelectedId = state => sGetSelectedRoot(state).id;\nexport const sGetSelectedIsLoading = state => sGetSelectedRoot(state).isLoading;\nexport const sGetSelectedShowDescription = state => sGetSelectedRoot(state).showDescription;\nexport const sGetSelectedItemActiveType = (state, id) => sGetSelectedRoot(state).itemActiveTypes[id];","import { getInstance } from 'd2';\nexport const NAMESPACE = 'dashboard';\nexport const hasNamespace = async (d2) => await d2.currentUser.dataStore.has(NAMESPACE);\nexport const getNamespace = async (d2, hasNamespace) => hasNamespace ? await d2.currentUser.dataStore.get(NAMESPACE) : await d2.currentUser.dataStore.create(NAMESPACE);\nexport const apiPostUserDataStoreValue = async (key, value) => {\n  const d2 = await getInstance();\n  const ns = await getNamespace(d2, hasNamespace);\n  ns.set(key, value);\n};\nexport const apiGetUserDataStoreValue = async (key, defaultValue) => {\n  const d2 = await getInstance();\n  const namespace = await getNamespace(d2, await hasNamespace(d2));\n  const hasKey = namespace?.keys?.find(k => k === key);\n\n  if (hasKey) {\n    return await namespace.get(key);\n  } else {\n    await apiPostUserDataStoreValue(key, defaultValue, namespace);\n    console.log('(These errors to /userDataStore can be ignored)');\n    return defaultValue;\n  }\n};","import { apiGetUserDataStoreValue, apiPostUserDataStoreValue } from './userDataStore';\nimport { DEFAULT_STATE_CONTROLBAR_ROWS } from '../reducers/controlBar';\nconst KEY_CONTROLBAR_ROWS = 'controlBarRows';\nexport const apiGetControlBarRows = async () => await apiGetUserDataStoreValue(KEY_CONTROLBAR_ROWS, DEFAULT_STATE_CONTROLBAR_ROWS);\nexport const apiPostControlBarRows = async (value) => await apiPostUserDataStoreValue(KEY_CONTROLBAR_ROWS, value);","import { SET_CONTROLBAR_USER_ROWS } from '../reducers/controlBar';\nimport { apiGetControlBarRows } from '../api/controlBar'; // actions\n\nexport const acSetControlBarUserRows = rows => ({\n  type: SET_CONTROLBAR_USER_ROWS,\n  value: rows\n}); // thunks\n\nexport const tSetControlBarRows = () => async dispatch => {\n  const onSuccess = rows => {\n    dispatch(acSetControlBarUserRows(rows));\n  };\n\n  const onError = error => {\n    console.log('Error (apiGetControlBarRows): ', error);\n    return error;\n  };\n\n  try {\n    const controlBarRows = await apiGetControlBarRows();\n    return onSuccess(controlBarRows);\n  } catch (err) {\n    return onError(err);\n  }\n};","import React, { useState, useEffect, createRef } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport cx from 'classnames';\nimport arraySort from 'd2-utilizr/lib/arraySort';\nimport PropTypes from 'prop-types';\nimport ControlBar, { DRAG_HANDLE_HEIGHT } from './ControlBar';\nimport Chip from './DashboardItemChip';\nimport AddCircleIcon from '../../icons/AddCircle';\nimport Filter from './Filter';\nimport ShowMoreButton from './ShowMoreButton';\nimport { FIRST_ROW_PADDING_HEIGHT, MIN_ROW_COUNT, getRowsHeight, getControlBarHeight, getNumRowsFromHeight } from './controlBarDimensions';\nimport { useWindowDimensions } from '../WindowDimensionsProvider';\nimport { sGetDashboardsFilter } from '../../reducers/dashboardsFilter';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { sGetAllDashboards } from '../../reducers/dashboards';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { acSetControlBarUserRows } from '../../actions/controlBar';\nimport { apiPostControlBarRows } from '../../api/controlBar';\nimport isSmallScreen from '../../modules/isSmallScreen';\nimport classes from './styles/DashboardsBar.module.css';\nexport const MAX_ROW_COUNT = 10;\n\nconst DashboardsBar = ({\n  userRows,\n  onChangeHeight,\n  history,\n  dashboards,\n  selectedId,\n  filterText\n}) => {\n  const [rows, setRows] = useState(userRows);\n  const {\n    width\n  } = useWindowDimensions();\n  const ref = createRef();\n  useEffect(() => {\n    setRows(userRows);\n  }, [userRows]);\n\n  const isMaxHeight = () => rows === MAX_ROW_COUNT;\n\n  const adjustHeight = newHeight => {\n    const newRows = Math.max(MIN_ROW_COUNT, getNumRowsFromHeight(newHeight - 52) // don't rush the transition to a bigger row count\n    );\n\n    if (newRows !== rows) {\n      onChangeHeight(Math.min(newRows, MAX_ROW_COUNT));\n    }\n  };\n\n  const onEndDrag = () => apiPostControlBarRows(rows);\n\n  const scrollToTop = () => {\n    if (isMaxHeight()) {\n      ref.current.scroll(0, 0);\n    }\n  };\n\n  const toggleMaxHeight = () => {\n    const newRows = isMaxHeight() ? userRows : MAX_ROW_COUNT;\n    scrollToTop();\n    setRows(newRows);\n  };\n\n  const cancelMaxHeight = () => {\n    scrollToTop();\n    setRows(userRows);\n  };\n\n  const onSelectDashboard = () => {\n    const id = getFilteredDashboards()[0]?.id;\n\n    if (id) {\n      history.push(id);\n    }\n  };\n\n  const getFilteredDashboards = () => {\n    const filteredDashboards = arraySort(Object.values(dashboards).filter(d => d.displayName.toLowerCase().includes(filterText.toLowerCase())), 'ASC', 'displayName');\n    return [...filteredDashboards.filter(d => d.starred), ...filteredDashboards.filter(d => !d.starred)];\n  };\n\n  const containerClass = cx(classes.container, isMaxHeight() ? classes.expanded : classes.collapsed);\n  const viewableRows = isSmallScreen(width) && !isMaxHeight() ? MIN_ROW_COUNT : rows;\n  const rowHeightProp = {\n    height: getRowsHeight(viewableRows) + FIRST_ROW_PADDING_HEIGHT\n  };\n\n  const getDashboardChips = () => {\n    const chips = getFilteredDashboards().map(dashboard => <Chip key={dashboard.id} label={dashboard.displayName} starred={dashboard.starred} dashboardId={dashboard.id} selected={dashboard.id === selectedId} onClick={cancelMaxHeight} />);\n\n    if (isSmallScreen(width)) {\n      const chipContainerClasses = cx(classes.chipContainer, isMaxHeight() ? classes.expanded : classes.collapsed);\n      return <div className={chipContainerClasses} style={rowHeightProp}>\n                    {chips}\n                </div>;\n    } else {\n      return chips;\n    }\n  };\n\n  return <>\n            <ControlBar height={getControlBarHeight(viewableRows)} onChangeHeight={!isSmallScreen(width) ? adjustHeight : null} onEndDrag={onEndDrag}>\n                <div className={containerClass} ref={ref} style={rowHeightProp}>\n                    <div className={classes.controls}>\n                        <Link className={classes.newLink} to={'/new'} data-test=\"link-new-dashboard\">\n                            <AddCircleIcon />\n                        </Link>\n                        <Filter onKeypressEnter={onSelectDashboard} onToggleMaxHeight={toggleMaxHeight} isMaxHeight={isMaxHeight()} />\n                    </div>\n                    {getDashboardChips()}\n                </div>\n                <ShowMoreButton onClick={toggleMaxHeight} isMaxHeight={isMaxHeight()} disabled={userRows === MAX_ROW_COUNT} />\n            </ControlBar>\n            <div style={{\n      marginTop: getControlBarHeight(isSmallScreen(width) && !isMaxHeight() ? MIN_ROW_COUNT : userRows) + DRAG_HANDLE_HEIGHT\n    }} />\n        </>;\n};\n\nDashboardsBar.propTypes = {\n  dashboards: PropTypes.object,\n  filterText: PropTypes.string,\n  history: PropTypes.object,\n  selectedId: PropTypes.string,\n  userRows: PropTypes.number,\n  onChangeHeight: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  dashboards: sGetAllDashboards(state),\n  filterText: sGetDashboardsFilter(state),\n  selectedId: sGetSelectedId(state),\n  userRows: sGetControlBarUserRows(state)\n});\n\nconst mapDispatchToProps = {\n  onChangeHeight: acSetControlBarUserRows\n};\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(DashboardsBar));","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst NoContentMessage = ({\n  text\n}) => <div style={{\n  padding: '50px 10px',\n  textAlign: 'center',\n  fontSize: '15px',\n  fontWeight: 500,\n  color: colors.grey600\n}}>\n        {text}\n    </div>;\n\nNoContentMessage.propTypes = {\n  text: PropTypes.string\n};\nexport default NoContentMessage;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { InputField } from '@dhis2/ui';\n\nconst ItemSearchField = props => <InputField name=\"Dashboard item search\" label={i18n.t('Search for items to add to this dashboard')} type=\"text\" onChange={props.onChange} onFocus={props.onFocus} value={props.value} dataTest=\"item-search\" />;\n\nItemSearchField.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n  onFocus: PropTypes.func\n};\nexport default ItemSearchField;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { MenuItem, colors } from '@dhis2/ui';\nimport classes from './styles/HeaderMenuItem.module.css';\n\nconst HeaderMenuItem = ({\n  title\n}) => <MenuItem className={classes.item} dense key={title} disabled label={<span style={{\n  color: colors.grey800,\n  fontWeight: '600'\n}}>\n                {title}\n            </span>} />;\n\nHeaderMenuItem.propTypes = {\n  title: PropTypes.string.isRequired\n};\nexport default HeaderMenuItem;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst LaunchIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\" fill={colors.grey600} viewBox=\"0 0 24 24\">\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z\" />\n    </svg>;\n\nLaunchIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default LaunchIcon;","import React from 'react';\nimport { MenuItem, colors } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport { visTypeIcons } from '@dhis2/analytics';\nimport { getItemIcon, VISUALIZATION } from '../../modules/itemTypes';\nimport LaunchIcon from '../../icons/Launch';\nimport classes from './styles/ContentMenuItem.module.css';\n\nconst LaunchLink = ({\n  url\n}) => <a onClick={e => e.stopPropagation()} className={classes.launchLink} target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n        <LaunchIcon />\n    </a>;\n\nLaunchLink.propTypes = {\n  url: PropTypes.string\n};\n\nconst InsertButton = () => <button className={classes.buttonInsert}>{i18n.t('Insert')}</button>;\n\nconst ContentMenuItem = ({\n  type,\n  name,\n  onInsert,\n  url,\n  visType\n}) => {\n  const ItemIcon = getItemIcon(type);\n  const renderedItemIcon = type === VISUALIZATION ? visTypeIcons[visType] : <ItemIcon style={{\n    fill: colors.grey600\n  }} />;\n  return <MenuItem dense onClick={onInsert} label={<div className={classes.menuItem}>\n                    <div className={classes.label}>\n                        <span style={{\n        marginRight: '6px'\n      }}>\n                            {renderedItemIcon}\n                        </span>\n                        <span>{name}</span>\n                        {url ? <LaunchLink url={url} /> : null}\n                    </div>\n                    <InsertButton />\n                </div>} dataTest={`menu-item-${name}`} />;\n};\n\nContentMenuItem.propTypes = {\n  name: PropTypes.string,\n  type: PropTypes.string,\n  url: PropTypes.string,\n  visType: PropTypes.string,\n  onInsert: PropTypes.func\n};\nexport default ContentMenuItem;","/** @module reducers/editDashboard */\nimport update from 'immutability-helper';\nimport isEmpty from 'lodash/isEmpty';\nimport { orArray, orObject } from '../modules/util';\nexport const RECEIVED_EDIT_DASHBOARD = 'RECEIVED_EDIT_DASHBOARD';\nexport const RECEIVED_NOT_EDITING = 'RECEIVED_NOT_EDITING';\nexport const START_NEW_DASHBOARD = 'START_NEW_DASHBOARD';\nexport const RECEIVED_TITLE = 'RECEIVED_TITLE';\nexport const RECEIVED_DESCRIPTION = 'RECEIVED_DESCRIPTION';\nexport const ADD_DASHBOARD_ITEM = 'ADD_DASHBOARD_ITEM';\nexport const REMOVE_DASHBOARD_ITEM = 'REMOVE_DASHBOARD_ITEM';\nexport const UPDATE_DASHBOARD_ITEM = 'UPDATE_DASHBOARD_ITEM';\nexport const RECEIVED_DASHBOARD_LAYOUT = 'RECEIVED_DASHBOARD_LAYOUT';\nexport const SET_PRINT_PREVIEW_VIEW = 'SET_PRINT_PREVIEW_VIEW';\nexport const CLEAR_PRINT_PREVIEW_VIEW = 'CLEAR_PRINT_PREVIEW_VIEW';\nexport const DEFAULT_STATE_EDIT_DASHBOARD = {};\nexport const NEW_DASHBOARD_STATE = {\n  id: '',\n  name: '',\n  access: {},\n  description: '',\n  dashboardItems: [],\n  printPreviewView: false\n};\nexport default ((state = DEFAULT_STATE_EDIT_DASHBOARD, action) => {\n  switch (action.type) {\n    case RECEIVED_EDIT_DASHBOARD:\n      {\n        const newState = {};\n        Object.keys(NEW_DASHBOARD_STATE).map(k => newState[k] = action.value[k]);\n        newState.printPreviewView = false;\n        return newState;\n      }\n\n    case RECEIVED_NOT_EDITING:\n      return DEFAULT_STATE_EDIT_DASHBOARD;\n\n    case SET_PRINT_PREVIEW_VIEW:\n      return Object.assign({}, state, {\n        printPreviewView: true\n      });\n\n    case CLEAR_PRINT_PREVIEW_VIEW:\n      return Object.assign({}, state, {\n        printPreviewView: false\n      });\n\n    case START_NEW_DASHBOARD:\n      return NEW_DASHBOARD_STATE;\n\n    case RECEIVED_TITLE:\n      {\n        return Object.assign({}, state, {\n          name: action.value\n        });\n      }\n\n    case RECEIVED_DESCRIPTION:\n      {\n        return Object.assign({}, state, {\n          description: action.value\n        });\n      }\n\n    case ADD_DASHBOARD_ITEM:\n      if (!action.value.position) {\n        return update(state, {\n          dashboardItems: {\n            $unshift: [action.value]\n          }\n        });\n      }\n\n      return update(state, {\n        dashboardItems: {\n          $splice: [[parseInt(action.value.position), 0, action.value]]\n        }\n      });\n\n    case REMOVE_DASHBOARD_ITEM:\n      {\n        const idToRemove = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === idToRemove);\n\n        if (dashboardItemIndex > -1) {\n          return update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1]]\n            }\n          });\n        }\n\n        return state;\n      }\n\n    case RECEIVED_DASHBOARD_LAYOUT:\n      {\n        const stateItems = orArray(state.dashboardItems);\n        let layoutHasChanged = false;\n        const newStateItems = action.value.map(({\n          x,\n          y,\n          w,\n          h,\n          i\n        }) => {\n          const stateItem = stateItems.find(si => si.id === i);\n\n          if (!(stateItem.x === x && stateItem.y === y && stateItem.w === w && stateItem.h === h)) {\n            layoutHasChanged = true;\n            return Object.assign({}, stateItem, {\n              w,\n              h,\n              x,\n              y\n            });\n          }\n\n          return stateItem;\n        });\n        return layoutHasChanged ? { ...state,\n          dashboardItems: newStateItems\n        } : state;\n      }\n\n    case UPDATE_DASHBOARD_ITEM:\n      {\n        const dashboardItem = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === dashboardItem.id);\n\n        if (dashboardItemIndex > -1) {\n          const newState = update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1, Object.assign({}, dashboardItem)]]\n            }\n          });\n          return newState;\n        }\n\n        return state;\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetEditDashboardRoot = state => state.editDashboard; // selectors\n\nexport const sGetIsEditing = state => !isEmpty(state.editDashboard);\nexport const sGetIsPrintPreviewView = state => sGetEditDashboardRoot(state).printPreviewView;\nexport const sGetIsNewDashboard = state => {\n  return !isEmpty(state.editDashboard) && sGetEditDashboardRoot(state).id === '';\n};\nexport const sGetEditDashboardName = state => sGetEditDashboardRoot(state).name;\nexport const sGetEditDashboardDescription = state => sGetEditDashboardRoot(state).description;\nexport const sGetEditDashboardItems = state => orObject(sGetEditDashboardRoot(state)).dashboardItems;","import { getInstance } from 'd2';\n\nconst onError = error => console.log('Error: ', error);\n\nconst saveDashboard = (dashboard, data) => {\n  const {\n    name,\n    description,\n    dashboardItems\n  } = data;\n  dashboard.name = name;\n  dashboard.description = description;\n  dashboard.dashboardItems = dashboardItems.map(item => Object.assign({}, item, {\n    width: item.w,\n    height: item.h\n  }));\n  return dashboard.save().then(msg => msg.response.uid);\n};\n\nexport const updateDashboard = data => {\n  return getInstance().then(d2 => {\n    return d2.models.dashboards.get(data.id).then(dashboard => saveDashboard(dashboard, data));\n  }).catch(onError);\n};\nexport const postDashboard = data => {\n  return getInstance().then(d2 => {\n    const dashboard = d2.models.dashboards.create();\n    return saveDashboard(dashboard, data);\n  });\n};","export const RECEIVED_USER = 'RECEIVED_USER';\nexport const DEFAULT_STATE_USER = {\n  id: '',\n  username: '',\n  uiLocale: '',\n  isSuperuser: false\n};\nexport default ((state = DEFAULT_STATE_USER, action) => {\n  switch (action.type) {\n    case RECEIVED_USER:\n      {\n        return fromD2ToUserObj(action.value);\n      }\n\n    default:\n      return state;\n  }\n});\n\nfunction fromD2ToUserObj(d2Object) {\n  return {\n    id: d2Object.id,\n    username: d2Object.username,\n    uiLocale: d2Object.settings.keyUiLocale,\n    isSuperuser: d2Object.authorities.has('ALL')\n  };\n} // selectors\n\n\nexport const sGetUserId = state => state.user.id;\nexport const sGetUserUsername = state => state.user.username;\nexport const sGetIsSuperuser = state => state.user.isSuperuser;\nexport const sGetUiLocale = state => state.user.uiLocale;","import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { getEndPointName, MAP } from '../modules/itemTypes';\nimport { getVisualizationId } from '../modules/item'; // Id, name\n\nexport const getIdNameFields = ({\n  rename\n} = {}) => ['id', `${rename ? 'displayName~rename(name)' : 'name,displayName'}`]; // Item\n\nexport const getItemFields = () => ['dimensionItem~rename(id)', 'displayName~rename(name)', 'dimensionItemType']; // Dimension\n\nexport const getDimensionFields = ({\n  withItems\n}) => arrayClean(['dimension', 'legendSet[id]', 'filter', 'programStage', withItems ? `items[${getItemFields().join(',')}]` : ``]); // Axis\n\nexport const getAxesFields = ({\n  withItems\n}) => [`columns[${getDimensionFields({\n  withItems\n}).join(',')}]`, `rows[${getDimensionFields({\n  withItems\n}).join(',')}]`, `filters[${getDimensionFields({\n  withItems\n}).join(',')}]`]; // Favorite\n\nexport const getFavoriteFields = ({\n  withDimensions,\n  withOptions\n}) => {\n  return arrayClean([`${getIdNameFields({\n    rename: true\n  }).join(',')}`, 'displayDescription~rename(description)', withDimensions ? `${getAxesFields({\n    withItems: true\n  }).join(',')}` : ``, withOptions ? ['*', '!attributeDimensions', '!attributeValues', '!category', '!categoryDimensions', '!categoryOptionGroupSetDimensions', '!columnDimensions', '!dataDimensionItems', '!dataElementDimensions', '!dataElementGroupSetDimensions', '!filterDimensions', '!itemOrganisationUnitGroups', '!lastUpdatedBy', '!organisationUnitGroupSetDimensions', '!organisationUnitLevels', '!organisationUnits', '!programIndicatorDimensions', '!relativePeriods', '!reportParams', '!rowDimensions', '!translations', '!userOrganisationUnit', '!userOrganisationUnitChildren', '!userOrganisationUnitGrandChildren'].join(',') : '']);\n};\nexport const getFavoritesFields = ({\n  withDimensions\n}) => [`reportTable[${getFavoriteFields({\n  withDimensions\n}).join(',')}]`, `chart[${['type', ...getFavoriteFields({\n  withDimensions\n})].join(',')}]`, `map[${getFavoriteFields({\n  withDimensions\n}).join(',')}]`, `eventReport[${getFavoriteFields({\n  withDimensions\n}).join(',')}]`, `eventChart[${getFavoriteFields({\n  withDimensions\n}).join(',')}]`]; // List item\n\nexport const getListItemFields = () => [`reports[${['type', ...getIdNameFields({\n  rename: true\n})].join(',')}]`, `resources[${getIdNameFields({\n  rename: true\n}).join(',')}]`, `users[${getIdNameFields({\n  rename: true\n}).join(',')}]`]; // Map\n\nexport const getMapFields = () => [`${getIdNameFields({\n  rename: true\n}).join(',')}`, 'user,longitude,latitude,zoom,basemap', `mapViews[${getFavoriteFields({\n  withDimensions: true,\n  withOptions: true\n})}]`]; // Api\n\nexport const apiFetchVisualization = async item => {\n  const id = getVisualizationId(item);\n  const fields = item.type === MAP ? getMapFields() : getFavoriteFields({\n    withDimensions: true,\n    withOptions: true\n  });\n  const d2 = await getInstance();\n  return await d2.Api.getApi().get(`${getEndPointName(item.type)}/${id}`, {\n    fields\n  });\n};","import arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { getListItemFields, getFavoritesFields, getIdNameFields } from './metadata'; // Helper functions\n\nexport const onError = error => console.log('Error: ', error); // Dashboard item\n\nexport const getDashboardItemsFields = ({\n  withFavorite\n} = {}) => arrayClean(['id', 'type', 'shape', 'x', 'y', 'width~rename(w)', 'height~rename(h)', 'messages', 'text', 'appKey', `${getListItemFields().join(',')}`, withFavorite ? `${getFavoritesFields({\n  withDimensions: withFavorite.withDimensions\n}).join(',')}` : ``]); // Dashboard\n\nexport const getDashboardFields = ({\n  withItems,\n  withFavorite\n} = {}) => arrayClean([`${getIdNameFields().join(',')}`, 'description', 'displayDescription', 'favorite', `user[${getIdNameFields({\n  rename: true\n}).join(',')}]`, 'created', 'lastUpdated', 'access', withItems ? `dashboardItems[${getDashboardItemsFields({\n  withFavorite\n}).join(',')}]` : ``]);","import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { onError, getDashboardFields } from './index'; // Get \"all\" dashboards on startup\n\nexport const apiFetchDashboards = () => getInstance().then(d2 => d2.models.dashboard.list({\n  fields: [getDashboardFields().join(','), 'dashboardItems[id]'].join(','),\n  paging: 'false'\n})).catch(onError); // Get more info about selected dashboard\n\nexport const apiFetchDashboard = id => getInstance().then(d2 => d2.models.dashboard.get(id, {\n  fields: arrayClean(getDashboardFields({\n    withItems: true,\n    withFavorite: {\n      withDimensions: false\n    }\n  })).join(',')\n})).catch(onError); // Star dashboard\n\nexport const apiStarDashboard = (id, isStarred) => {\n  const url = `dashboards/${id}/favorite`;\n  getInstance().then(d2 => {\n    if (isStarred) {\n      d2.Api.getApi().post(url);\n    } else {\n      d2.Api.getApi().delete(url);\n    }\n  });\n};\nexport const apiDeleteDashboard = id => {\n  return getInstance().then(d2 => {\n    return d2.models.dashboards.get(id).then(dashboard => dashboard.delete());\n  }).catch(onError);\n};","import { SET_DASHBOARDS, ADD_DASHBOARDS, SET_DASHBOARD_STARRED, SET_DASHBOARD_DISPLAY_NAME, SET_DASHBOARD_ITEMS } from '../reducers/dashboards';\nimport { getCustomDashboards, sGetDashboardById, sGetDashboardsSortedByStarred } from '../reducers/dashboards';\nimport { NON_EXISTING_DASHBOARD_ID } from '../reducers/selected';\nimport { sGetUserUsername } from '../reducers/user';\nimport { tSetSelectedDashboardById, acSetSelectedId } from './selected';\nimport { apiFetchDashboards, apiStarDashboard, apiDeleteDashboard } from '../api/dashboards';\nimport { getPreferredDashboardId } from '../api/localStorage';\nimport { arrayToIdMap } from '../modules/util'; // actions\n\nexport const acSetDashboards = dashboards => ({\n  type: SET_DASHBOARDS,\n  value: arrayToIdMap(getCustomDashboards(dashboards))\n});\nexport const acAppendDashboards = dashboards => ({\n  type: ADD_DASHBOARDS,\n  value: arrayToIdMap(getCustomDashboards(dashboards))\n});\nexport const acSetDashboardStarred = (dashboardId, isStarred) => ({\n  type: SET_DASHBOARD_STARRED,\n  dashboardId: dashboardId,\n  value: isStarred\n});\nexport const acSetDashboardDisplayName = (dashboardId, value) => ({\n  type: SET_DASHBOARD_DISPLAY_NAME,\n  dashboardId,\n  value\n});\nexport const acSetDashboardItems = value => ({\n  type: SET_DASHBOARD_ITEMS,\n  value\n}); // thunks\n\nexport const tFetchDashboards = () => async dispatch => {\n  const collection = await apiFetchDashboards();\n  dispatch(acSetDashboards(collection.toArray()));\n};\nexport const tSelectDashboard = id => async (dispatch, getState) => {\n  const onError = error => {\n    console.log('Error (apiFetchDashboards): ', error);\n    return error;\n  };\n\n  try {\n    const state = getState();\n    let dashboardToSelect = null;\n\n    if (id) {\n      dashboardToSelect = sGetDashboardById(state, id) || null;\n    } else {\n      const preferredId = getPreferredDashboardId(sGetUserUsername(state));\n      const dash = sGetDashboardById(state, preferredId);\n      dashboardToSelect = preferredId && dash ? dash : sGetDashboardsSortedByStarred(state)[0];\n    }\n\n    if (dashboardToSelect) {\n      dispatch(tSetSelectedDashboardById(dashboardToSelect.id));\n    } else {\n      dispatch(acSetSelectedId(NON_EXISTING_DASHBOARD_ID));\n    }\n  } catch (err) {\n    return onError(err);\n  }\n};\nexport const tStarDashboard = (id, isStarred) => async dispatch => {\n  const onSuccess = id => {\n    dispatch(acSetDashboardStarred(id, isStarred));\n    return id;\n  };\n\n  const onError = error => {\n    console.log('Error (apiStarDashboard): ', error);\n    return error;\n  };\n\n  try {\n    await apiStarDashboard(id, isStarred);\n    return onSuccess(id);\n  } catch (err) {\n    return onError(err);\n  }\n};\nexport const tDeleteDashboard = id => async dispatch => {\n  try {\n    await apiDeleteDashboard(id);\n    await dispatch(tFetchDashboards());\n    return Promise.resolve();\n  } catch (err) {\n    console.log('Error (deleteDashboard): ', err);\n    return err;\n  }\n};","import { getDimensionById, DIMENSION_ID_PERIOD, DIMENSION_ID_ORGUNIT } from '@dhis2/analytics';\nexport const SET_DIMENSIONS = 'SET_DIMENSIONS';\nexport const DEFAULT_DIMENSIONS = [getDimensionById(DIMENSION_ID_PERIOD), getDimensionById(DIMENSION_ID_ORGUNIT)];\nexport default ((state = DEFAULT_DIMENSIONS, action) => {\n  switch (action.type) {\n    case SET_DIMENSIONS:\n      {\n        return [...DEFAULT_DIMENSIONS, ...action.value];\n      }\n\n    default:\n      return state;\n  }\n});\nexport const sGetDimensions = state => state.dimensions;","import { sGetDimensions } from './dimensions';\nimport { createSelector } from 'reselect';\nexport const CLEAR_ITEM_FILTERS = 'CLEAR_ITEM_FILTERS';\nexport const SET_ITEM_FILTERS = 'SET_ITEM_FILTERS';\nexport const ADD_ITEM_FILTER = 'ADD_ITEM_FILTER';\nexport const REMOVE_ITEM_FILTER = 'REMOVE_ITEM_FILTER';\nexport const DEFAULT_STATE_ITEM_FILTERS = {};\nexport default ((state = DEFAULT_STATE_ITEM_FILTERS, action) => {\n  switch (action.type) {\n    case ADD_ITEM_FILTER:\n      {\n        return { ...state,\n          [action.filter.id]: action.filter.value\n        };\n      }\n\n    case REMOVE_ITEM_FILTER:\n      {\n        const newState = { ...state\n        };\n        delete newState[action.id];\n        return newState;\n      }\n\n    case SET_ITEM_FILTERS:\n      {\n        return action.filters;\n      }\n\n    case CLEAR_ITEM_FILTERS:\n      {\n        return DEFAULT_STATE_ITEM_FILTERS;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetItemFiltersRoot = state => state.itemFilters; // simplify the filters structure to:\n// [{ id: 'pe', name: 'Period', values: [{ id: 2019: name: '2019' }, {id: 'LAST_MONTH', name: 'Last month' }]}, ...]\n\nexport const sGetNamedItemFilters = createSelector([sGetItemFiltersRoot, sGetDimensions], (filters, dimensions) => Object.keys(filters).reduce((arr, id) => {\n  arr.push({\n    id: id,\n    name: dimensions.find(dimension => dimension.id === id).name,\n    values: filters[id].map(value => ({\n      id: value.id,\n      name: value.displayName || value.name\n    }))\n  });\n  return arr;\n}, []));","import { ADD_ITEM_FILTER, REMOVE_ITEM_FILTER, SET_ITEM_FILTERS, CLEAR_ITEM_FILTERS } from '../reducers/itemFilters';\nexport const FILTER_ORG_UNIT = 'ou'; // actions\n\nexport const acAddItemFilter = filter => ({\n  type: ADD_ITEM_FILTER,\n  filter\n});\nexport const acRemoveItemFilter = id => ({\n  type: REMOVE_ITEM_FILTER,\n  id\n});\nexport const acClearItemFilters = () => ({\n  type: CLEAR_ITEM_FILTERS\n});\nexport const acSetItemFilters = filters => ({\n  type: SET_ITEM_FILTERS,\n  filters\n});","import update from 'immutability-helper';\nimport { arrayToIdMap } from '../modules/util';\nexport const RECEIVED_MESSAGES = 'RECEIVED_MESSAGES';\nexport default ((state = {}, action) => {\n  switch (action.type) {\n    case RECEIVED_MESSAGES:\n      {\n        const conversations = arrayToIdMap(action.value);\n        const newState = update(state, {\n          $merge: conversations\n        });\n        return newState;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetMessagesRoot = state => state.messages;","import { RECEIVED_MESSAGES } from '../../../reducers/messages';\nimport { getMessages } from '../../../api/messages';\n\nconst onError = (action, error) => {\n  console.log(`Error in action ${action}: ${error}`);\n  return error;\n};\n\nexport const receivedMessages = value => ({\n  type: RECEIVED_MESSAGES,\n  value\n});\nexport const tGetMessages = () => async dispatch => {\n  try {\n    const messages = await getMessages();\n    const {\n      messageConversations\n    } = messages;\n    return dispatch(receivedMessages(messageConversations));\n  } catch (err) {\n    return onError('Get Messages', err);\n  }\n};","import { getInstance } from 'd2';\nexport const getMessages = () => {\n  const fields = 'id,messageCount,lastUpdated,messageType,displayName,read,messages[id,read,sender[id,displayName],text,lastUpdated]';\n  const url = `/messageConversations?fields=${fields}&order=read:asc&pageSize=200`;\n  return getInstance().then(d2 => d2.Api.getApi().get(url)).catch(error => console.log('Error:', error));\n};","export const SET_ALERT_MESSAGE = 'SET_ALERT_MESSAGE';\nexport const CLEAR_ALERT_MESSAGE = 'CLEAR_ALERT_MESSAGE';\nexport const DEFAULT_STATE_ALERT = null;\nexport default ((state = DEFAULT_STATE_ALERT, action) => {\n  switch (action.type) {\n    case SET_ALERT_MESSAGE:\n      {\n        return action.value;\n      }\n\n    case CLEAR_ALERT_MESSAGE:\n      {\n        return DEFAULT_STATE_ALERT;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetAlertMessage = state => state.alert;","import { SET_ALERT_MESSAGE, CLEAR_ALERT_MESSAGE } from '../reducers/alert';\nexport const acSetAlertMessage = value => ({\n  type: SET_ALERT_MESSAGE,\n  value\n});\nexport const acClearAlertMessage = () => ({\n  type: CLEAR_ALERT_MESSAGE\n});","import { orObject } from '../modules/util';\nimport objectClean from 'd2-utilizr/lib/objectClean';\n/** @module reducers/visualizations */\n\nexport const ADD_VISUALIZATION = 'ADD_VISUALIZATION';\nexport const SET_ACTIVE_VISUALIZATION_TYPE = 'SET_ACTIVE_VISUALIZATION_TYPE';\nexport const CLEAR_VISUALIZATIONS = 'CLEAR_VISUALIZATIONS';\nexport const DEFAULT_STATE_VISUALIZATIONS = {};\n\nconst isEmpty = p => p === undefined || p === null;\n\nexport default ((state = DEFAULT_STATE_VISUALIZATIONS, action) => {\n  switch (action.type) {\n    case ADD_VISUALIZATION:\n      {\n        return { ...state,\n          [action.value.id]: objectClean({ ...orObject(state[action.value.id]),\n            ...action.value\n          }, isEmpty)\n        };\n      }\n\n    case CLEAR_VISUALIZATIONS:\n      {\n        return DEFAULT_STATE_VISUALIZATIONS;\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetVisualizationsRoot = state => state.visualizations; // selectors level 1\n\nexport const sGetVisualization = (state, id) => {\n  return sGetVisualizationsRoot(state)[id];\n};","import { ADD_VISUALIZATION, CLEAR_VISUALIZATIONS } from '../reducers/visualizations';\nexport const acAddVisualization = value => ({\n  type: ADD_VISUALIZATION,\n  value\n});\nexport const acClearVisualizations = () => ({\n  type: CLEAR_VISUALIZATIONS\n});","import { apiGetUserDataStoreValue, apiPostUserDataStoreValue } from './userDataStore';\nimport { DEFAULT_STATE_SELECTED_SHOWDESCRIPTION } from '../reducers/selected';\nconst KEY_SHOW_DESCRIPTION = 'showDescription';\nexport const apiGetShowDescription = async () => await apiGetUserDataStoreValue(KEY_SHOW_DESCRIPTION, DEFAULT_STATE_SELECTED_SHOWDESCRIPTION);\nexport const apiPostShowDescription = async (value) => await apiPostUserDataStoreValue(KEY_SHOW_DESCRIPTION, value);","import i18n from '@dhis2/d2-i18n';\nimport { getCustomDashboards, sGetDashboardById } from '../reducers/dashboards';\nimport { SET_SELECTED_ID, SET_SELECTED_ISLOADING, SET_SELECTED_SHOWDESCRIPTION, SET_SELECTED_ITEM_ACTIVE_TYPE, CLEAR_SELECTED_ITEM_ACTIVE_TYPES, sGetSelectedIsLoading, sGetSelectedId } from '../reducers/selected';\nimport { sGetUserUsername } from '../reducers/user';\nimport { acSetDashboardItems, acAppendDashboards } from './dashboards';\nimport { acClearItemFilters } from './itemFilters';\nimport { tGetMessages } from '../components/Item/MessagesItem/actions';\nimport { acSetAlertMessage, acClearAlertMessage } from './alert';\nimport { acAddVisualization, acClearVisualizations } from './visualizations';\nimport { apiFetchDashboard } from '../api/dashboards';\nimport { storePreferredDashboardId } from '../api/localStorage';\nimport { apiGetShowDescription, apiPostShowDescription } from '../api/description';\nimport { withShape } from '../components/ItemGrid/gridUtil';\nimport { getVisualizationFromItem } from '../modules/item';\nimport { REPORT_TABLE, CHART, MAP, EVENT_REPORT, EVENT_CHART, MESSAGES } from '../modules/itemTypes'; // actions\n\nexport const acSetSelectedId = value => ({\n  type: SET_SELECTED_ID,\n  value\n});\nexport const acSetSelectedIsLoading = value => ({\n  type: SET_SELECTED_ISLOADING,\n  value\n});\nexport const acSetSelectedShowDescription = value => ({\n  type: SET_SELECTED_SHOWDESCRIPTION,\n  value\n});\nexport const acSetSelectedItemActiveType = (id, activeType) => {\n  const action = {\n    type: SET_SELECTED_ITEM_ACTIVE_TYPE,\n    id,\n    activeType\n  };\n  return action;\n};\nexport const acClearSelectedItemActiveTypes = () => ({\n  type: CLEAR_SELECTED_ITEM_ACTIVE_TYPES\n}); // thunks\n\nexport const tSetSelectedDashboardById = id => async (dispatch, getState) => {\n  dispatch(acSetSelectedIsLoading(true));\n  const alertTimeout = setTimeout(() => {\n    const name = sGetDashboardById(getState(), id)?.displayName;\n\n    if (sGetSelectedIsLoading(getState()) && name) {\n      dispatch(acSetAlertMessage(i18n.t('Loading dashboard – {{name}}', {\n        name\n      })));\n    }\n  }, 500);\n\n  const onSuccess = selected => {\n    dispatch(acAppendDashboards(selected));\n    const customDashboard = getCustomDashboards(selected)[0];\n    dispatch(acSetDashboardItems(withShape(customDashboard.dashboardItems)));\n    storePreferredDashboardId(sGetUserUsername(getState()), id);\n\n    if (id !== sGetSelectedId(getState())) {\n      dispatch(acClearItemFilters());\n      dispatch(acClearVisualizations());\n      dispatch(acClearSelectedItemActiveTypes());\n    }\n\n    customDashboard.dashboardItems.forEach(item => {\n      switch (item.type) {\n        case REPORT_TABLE:\n        case CHART:\n        case MAP:\n        case EVENT_REPORT:\n        case EVENT_CHART:\n          dispatch(acAddVisualization(getVisualizationFromItem(item)));\n          break;\n\n        case MESSAGES:\n          dispatch(tGetMessages(id));\n          break;\n\n        default:\n          break;\n      }\n    });\n    dispatch(acSetSelectedId(id));\n    dispatch(acSetSelectedIsLoading(false));\n    clearTimeout(alertTimeout);\n    dispatch(acClearAlertMessage());\n    return selected;\n  };\n\n  const onError = error => {\n    console.log('Error: ', error);\n    return error;\n  };\n\n  try {\n    const dashboard = await apiFetchDashboard(id);\n    return onSuccess(dashboard);\n  } catch (err) {\n    return onError(err);\n  }\n};\nexport const tSetShowDescription = () => async dispatch => {\n  const onSuccess = value => {\n    dispatch(acSetSelectedShowDescription(value));\n  };\n\n  const onError = error => {\n    console.log('Error (apiGetShowDescription): ', error);\n    return error;\n  };\n\n  try {\n    const showDescription = await apiGetShowDescription();\n    return onSuccess(showDescription);\n  } catch (err) {\n    return onError(err);\n  }\n};\nexport const tUpdateShowDescription = value => async dispatch => {\n  const onSuccess = () => {\n    dispatch(acSetSelectedShowDescription(value));\n  };\n\n  const onError = error => {\n    console.log('Error (apiGetShowDescription): ', error);\n    return error;\n  };\n\n  try {\n    await apiPostShowDescription(value);\n    return onSuccess();\n  } catch (err) {\n    return onError(err);\n  }\n};","export const getPreferredDashboardId = username => localStorage.getItem(`dhis2.dashboard.current.${username}`) || undefined;\nexport const storePreferredDashboardId = (username, dashboardId) => {\n  localStorage.setItem(`dhis2.dashboard.current.${username}`, dashboardId);\n};","import { generateUid } from 'd2/uid';\nimport i18n from '@dhis2/d2-i18n';\nimport { RECEIVED_EDIT_DASHBOARD, START_NEW_DASHBOARD, RECEIVED_NOT_EDITING, RECEIVED_TITLE, RECEIVED_DESCRIPTION, RECEIVED_DASHBOARD_LAYOUT, ADD_DASHBOARD_ITEM, UPDATE_DASHBOARD_ITEM, REMOVE_DASHBOARD_ITEM, SET_PRINT_PREVIEW_VIEW, CLEAR_PRINT_PREVIEW_VIEW } from '../reducers/editDashboard';\nimport { sGetEditDashboardRoot } from '../reducers/editDashboard';\nimport { updateDashboard, postDashboard } from '../api/editDashboard';\nimport { tSetSelectedDashboardById } from '../actions/selected';\nimport { NEW_ITEM_SHAPE, getGridItemProperties, getPageBreakItemShape, getPrintTitlePageItemShape } from '../components/ItemGrid/gridUtil';\nimport { itemTypeMap, PAGEBREAK, PRINT_TITLE_PAGE } from '../modules/itemTypes';\nimport { convertUiItemsToBackend } from '../modules/uiBackendItemConverter';\n\nconst onError = error => {\n  console.log('Error (Saving Dashboard): ', error);\n  return error;\n}; // actions\n\n\nexport const acSetEditDashboard = (dashboard, items) => {\n  const val = { ...dashboard,\n    dashboardItems: items\n  };\n  return {\n    type: RECEIVED_EDIT_DASHBOARD,\n    value: val\n  };\n};\nexport const acSetEditNewDashboard = () => ({\n  type: START_NEW_DASHBOARD\n});\nexport const acClearEditDashboard = () => ({\n  type: RECEIVED_NOT_EDITING\n});\nexport const acSetPrintPreviewView = () => ({\n  type: SET_PRINT_PREVIEW_VIEW\n});\nexport const acClearPrintPreviewView = () => ({\n  type: CLEAR_PRINT_PREVIEW_VIEW\n});\nexport const acSetDashboardTitle = value => ({\n  type: RECEIVED_TITLE,\n  value\n});\nexport const acSetDashboardDescription = value => ({\n  type: RECEIVED_DESCRIPTION,\n  value\n});\nexport const acUpdateDashboardLayout = value => ({\n  type: RECEIVED_DASHBOARD_LAYOUT,\n  value\n});\nexport const acAddDashboardItem = item => {\n  const type = item.type;\n  delete item.type;\n  const itemPropName = itemTypeMap[type].propName;\n  const id = generateUid();\n  const gridItemProperties = getGridItemProperties(id);\n  let shape;\n\n  if (type === PAGEBREAK) {\n    const yPos = item.yPos || 0;\n    shape = getPageBreakItemShape(yPos, item.isStatic);\n  } else if (type === PRINT_TITLE_PAGE) {\n    shape = getPrintTitlePageItemShape();\n  } else {\n    shape = NEW_ITEM_SHAPE;\n  }\n\n  return {\n    type: ADD_DASHBOARD_ITEM,\n    value: {\n      id,\n      type,\n      position: item.position || null,\n      [itemPropName]: item.content,\n      ...NEW_ITEM_SHAPE,\n      ...gridItemProperties,\n      ...shape\n    }\n  };\n};\nexport const acUpdateDashboardItem = item => ({\n  type: UPDATE_DASHBOARD_ITEM,\n  value: item\n});\nexport const acRemoveDashboardItem = value => ({\n  type: REMOVE_DASHBOARD_ITEM,\n  value\n}); // thunks\n\nexport const tSaveDashboard = () => async (dispatch, getState) => {\n  const dashboard = sGetEditDashboardRoot(getState());\n  const dashboardToSave = { ...dashboard,\n    dashboardItems: convertUiItemsToBackend(dashboard.dashboardItems),\n    name: dashboard.name || i18n.t('Untitled dashboard')\n  };\n\n  try {\n    const dashboardId = dashboardToSave.id ? await updateDashboard(dashboardToSave) : await postDashboard(dashboardToSave);\n    dispatch(acClearEditDashboard());\n    await dispatch(tSetSelectedDashboardById(dashboardId));\n    return Promise.resolve(dashboardId);\n  } catch (error) {\n    onError(error);\n  }\n};","import i18n from '@dhis2/d2-i18n';\nimport { VISUALIZATION, MAP, EVENT_CHART, EVENT_REPORT, USERS, REPORTS, RESOURCES, APP, MESSAGES, TEXT, SPACER } from '../../modules/itemTypes';\nexport const singleItems = [{\n  id: 'additional',\n  header: i18n.t('Additional items'),\n  items: [{\n    type: TEXT,\n    name: i18n.t('Text box'),\n    content: ''\n  }, {\n    type: MESSAGES,\n    name: i18n.t('Messages'),\n    content: 'true'\n  }, {\n    type: SPACER,\n    name: i18n.t('Spacer'),\n    content: ''\n  }]\n}]; // categorizedItems are grouped in the item selector menu\n\nexport const categorizedItems = [VISUALIZATION, MAP, EVENT_REPORT, EVENT_CHART, USERS, REPORTS, RESOURCES, APP]; // listItemTypes are included in a single dashboard item\n\nexport const listItemTypes = [REPORTS, RESOURCES, USERS];","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { MenuItem, Divider } from '@dhis2/ui';\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\nimport { tAddListItemContent } from './actions';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\nimport { getItemUrl, APP, VISUALIZATION } from '../../modules/itemTypes';\nimport { categorizedItems, listItemTypes } from './selectableItems';\nimport classes from './styles/CategorizedMenuGroup.module.css';\n\nclass CategorizedMenuGroup extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      seeMore: false\n    };\n  }\n\n  addItem = item => () => {\n    const {\n      type,\n      acAddDashboardItem,\n      tAddListItemContent\n    } = this.props;\n\n    if (type === APP) {\n      acAddDashboardItem({\n        type,\n        content: item.key\n      });\n    } else {\n      const newItem = {\n        id: item.id,\n        name: item.displayName || item.name\n      };\n\n      if (listItemTypes.includes(type)) {\n        tAddListItemContent(type, newItem);\n      } else {\n        acAddDashboardItem({\n          type,\n          content: newItem\n        });\n      }\n    }\n  };\n  toggleSeeMore = () => {\n    this.setState({\n      seeMore: !this.state.seeMore\n    });\n    this.props.onChangeItemsLimit(this.props.type);\n  };\n\n  render() {\n    const {\n      title,\n      type,\n      items,\n      hasMore\n    } = this.props;\n    return <>\n                <HeaderMenuItem title={title} />\n                {items.map(item => {\n        const itemUrl = getItemUrl(type, item, this.context.d2);\n        return <ContentMenuItem key={item.id || item.key} type={type} visType={type === VISUALIZATION ? item.type : type} name={item.displayName || item.name} onInsert={this.addItem(item)} url={itemUrl} />;\n      })}\n                {hasMore ? <MenuItem dense key={`showmore${title}`} onClick={this.toggleSeeMore} label={<button className={classes.showMoreButton}>\n                                {this.state.seeMore ? i18n.t('Show fewer') : i18n.t('Show more')}\n                            </button>} /> : null}\n                <Divider margin=\"8px 0px\" />\n            </>;\n  }\n\n}\n\nCategorizedMenuGroup.propTypes = {\n  items: PropTypes.array.isRequired,\n  title: PropTypes.string.isRequired,\n  type: PropTypes.oneOf(categorizedItems).isRequired,\n  onChangeItemsLimit: PropTypes.func.isRequired,\n  acAddDashboardItem: PropTypes.func,\n  hasMore: PropTypes.bool,\n  tAddListItemContent: PropTypes.func\n};\nCategorizedMenuGroup.contextTypes = {\n  d2: PropTypes.object.isRequired\n};\nexport default connect(null, {\n  acAddDashboardItem,\n  tAddListItemContent\n})(CategorizedMenuGroup);","import { sGetEditDashboardRoot } from '../../reducers/editDashboard';\nimport { itemTypeMap } from '../../modules/itemTypes';\nimport { acAddDashboardItem, acUpdateDashboardItem } from '../../actions/editDashboard';\nexport const tAddListItemContent = (type, content) => (dispatch, getState) => {\n  const state = getState();\n  const listItemType = itemTypeMap[type].propName;\n  const dashboardItems = sGetEditDashboardRoot(state).dashboardItems;\n  const dashboardItemIndex = dashboardItems.findIndex(item => item.type === type);\n  let dashboardItem; // Reports/Resources/Users dashboard item type already present in dashboard\n\n  if (dashboardItemIndex > -1) {\n    dashboardItem = dashboardItems[dashboardItemIndex];\n    dashboardItem[listItemType].push(content);\n    dispatch(acUpdateDashboardItem(dashboardItem));\n  } else {\n    dashboardItem = {\n      type: type,\n      content: [content]\n    };\n    dispatch(acAddDashboardItem(dashboardItem));\n  }\n};","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\nexport const SinglesMenuGroup = ({\n  acAddDashboardItem,\n  category\n}) => {\n  const addToDashboard = ({\n    type,\n    content\n  }) => () => {\n    acAddDashboardItem({\n      type,\n      content\n    });\n  };\n\n  return <>\n            <HeaderMenuItem title={category.header} />\n            {category.items.map(item => <ContentMenuItem key={item.type} type={item.type} name={item.name} onInsert={addToDashboard(item)} />)}\n        </>;\n};\nSinglesMenuGroup.propTypes = {\n  acAddDashboardItem: PropTypes.func,\n  category: PropTypes.object\n};\nexport default connect(null, {\n  acAddDashboardItem\n})(SinglesMenuGroup);","import React, { useState, useEffect, createRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { Popover, FlyoutMenu } from '@dhis2/ui';\nimport ItemSearchField from './ItemSearchField';\nimport CategorizedMenuGroup from './CategorizedMenuGroup';\nimport SinglesMenuGroup from './SinglesMenuGroup';\nimport { singleItems, categorizedItems } from './selectableItems';\nimport { itemTypeMap, getDefaultItemCount } from '../../modules/itemTypes';\nimport classes from './styles/ItemSelector.module.css'; // eslint-disable-next-line no-empty-pattern\n\nconst ItemSelector = ({}, context) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [filter, setFilter] = useState('');\n  const [items, setItems] = useState(null);\n  const [maxOptions, setMaxOptions] = useState(new Set());\n  useEffect(() => {\n    let queryString = '?count=11';\n\n    if ([...maxOptions.values()].length) {\n      queryString += '&max=' + [...maxOptions.values()].join('&max=');\n    }\n\n    const filterStr = filter ? `/${filter}` : '';\n    context.d2.Api.getApi().get(`dashboards/q${filterStr}${queryString}`).then(response => setItems(response)).catch(console.error);\n  }, [filter, maxOptions]);\n\n  const closeMenu = () => {\n    setIsOpen(false);\n    setFilter('');\n    setMaxOptions(new Set());\n  };\n\n  const openMenu = () => setIsOpen(true);\n\n  const getCategorizedMenuGroups = () => {\n    return categorizedItems.filter(type => {\n      const itemType = itemTypeMap[type];\n      return items && items[itemType.endPointName];\n    }).map(type => {\n      const itemType = itemTypeMap[type];\n      const itemCount = getDefaultItemCount(type);\n      const allItems = items[itemType.endPointName];\n      const hasMore = allItems.length > itemCount;\n      const displayItems = maxOptions.has(itemType.id) ? allItems : allItems.slice(0, itemCount);\n      return <CategorizedMenuGroup key={type} type={type} title={itemType.pluralTitle} items={displayItems} onChangeItemsLimit={updateMaxOptions} hasMore={hasMore} />;\n    });\n  };\n\n  const getSinglesMenuGroups = () => singleItems.map(category => <SinglesMenuGroup key={category.id} category={category} />);\n\n  const getMenuGroups = () => getCategorizedMenuGroups().concat(getSinglesMenuGroups());\n\n  const updateMaxOptions = type => {\n    if (type) {\n      const options = new Set(maxOptions);\n      options.has(type) ? options.delete(type) : options.add(type);\n      setMaxOptions(options);\n    } else {\n      setMaxOptions(new Set());\n    }\n  };\n\n  const updateFilter = ({\n    value\n  }) => setFilter(value);\n\n  const inputRef = createRef();\n  return <>\n            <span ref={inputRef}>\n                <ItemSearchField value={filter} onChange={updateFilter} onFocus={openMenu} />\n            </span>\n            {isOpen && <Popover reference={inputRef} placement=\"bottom-start\" onClickOutside={closeMenu} arrow={false} maxWidth={700}>\n                    <FlyoutMenu className={classes.menu} dataTest=\"item-menu\" maxWidth=\"700px\">\n                        {getMenuGroups()}\n                    </FlyoutMenu>\n                </Popover>}\n        </>;\n};\n\nItemSelector.contextTypes = {\n  d2: PropTypes.object.isRequired\n};\nexport default ItemSelector;","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { InputField, TextAreaField } from '@dhis2/ui';\nimport ItemSelector from '../ItemSelector/ItemSelector';\nimport { acSetDashboardTitle, acSetDashboardDescription } from '../../actions/editDashboard';\nimport { orObject } from '../../modules/util';\nimport { sGetEditDashboardRoot } from '../../reducers/editDashboard';\nimport classes from './styles/EditTitleBar.module.css';\nexport const EditTitleBar = ({\n  name,\n  description,\n  onChangeTitle,\n  onChangeDescription\n}) => {\n  const updateTitle = (_, e) => {\n    onChangeTitle(e.target.value);\n  };\n\n  const updateDescription = (_, e) => {\n    onChangeDescription(e.target.value);\n  };\n\n  return <section className={classes.section}>\n            <div className={classes.titleDescription}>\n                <InputField className={classes.title} name=\"Dashboard title input\" label={i18n.t('Dashboard title')} type=\"text\" onChange={updateTitle} value={name} placeholder={i18n.t('Untitled dashboard')} dataTest=\"dashboard-title-input\" />\n                <TextAreaField className={classes.description} name=\"Dashboard description input\" label={i18n.t('Dashboard description')} onChange={updateDescription} value={description} dataTest=\"dashboard-description-input\" />\n            </div>\n            <div className={classes.itemSelector}>\n                <ItemSelector />\n            </div>\n        </section>;\n};\nEditTitleBar.propTypes = {\n  onChangeDescription: PropTypes.func.isRequired,\n  onChangeTitle: PropTypes.func.isRequired,\n  description: PropTypes.string,\n  name: PropTypes.string\n};\nEditTitleBar.defaultProps = {\n  name: '',\n  description: ''\n};\n\nconst mapStateToProps = state => {\n  const selectedDashboard = orObject(sGetEditDashboardRoot(state));\n  return {\n    name: selectedDashboard.name,\n    description: selectedDashboard.description\n  };\n};\n\nconst mapDispatchToProps = {\n  onChangeTitle: acSetDashboardTitle,\n  onChangeDescription: acSetDashboardDescription\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(EditTitleBar);","import React from 'react';\nimport { colors } from '@dhis2/ui';\nexport const ThreeDots = () => <svg height=\"18\" viewBox=\"0 0 18 18\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"m4 7.5c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm10 0c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm-5 0c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5z\" fill=\"#6e7a8a\" />\n    </svg>;\nexport const SpeechBubble = () => <svg height=\"20\" viewBox=\"0 0 20 20\" width=\"20\" xmlns=\"http://www.w3.org/2000/svg\" style={{\n  margin: '3px 2px 0 2px'\n}} // Temporary fix for the misaligned icon, should be removed once the icon is replaced\n>\n        <path d=\"m20 2h-16c-1.1 0-1.99.9-1.99 2l-.01 18 4-4h14c1.1 0 2-.9 2-2v-12c0-1.1-.9-2-2-2zm-2 12h-12v-2h12zm0-3h-12v-2h12zm0-3h-12v-2h12z\" fill=\"#6e7a8a\" fillRule=\"evenodd\" transform=\"translate(-2 -2)\" />\n    </svg>;\nexport const Warning = () => <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" fill={colors.grey600}>\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z\" />\n    </svg>;","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { Button, Modal, ModalTitle, ModalContent, ModalActions, ButtonStrip } from '@dhis2/ui';\nimport { PeriodDimension, DynamicDimension, OrgUnitDimension, DIMENSION_ID_PERIOD, DIMENSION_ID_ORGUNIT } from '@dhis2/analytics';\nimport { acAddItemFilter, acRemoveItemFilter } from '../../actions/itemFilters';\nimport { sGetItemFiltersRoot } from '../../reducers/itemFilters';\n\nconst FilterDialog = ({\n  displayNameProperty,\n  dimension,\n  initiallySelectedItems,\n  addItemFilter,\n  removeItemFilter,\n  onClose\n}, context) => {\n  const [filters, setFilters] = useState(initiallySelectedItems);\n\n  const onSelectItems = ({\n    dimensionId,\n    items\n  }) => {\n    setFilters({\n      [dimensionId]: items\n    });\n  };\n\n  const onDeselectItems = ({\n    dimensionId,\n    itemIdsToRemove\n  }) => {\n    const oldList = filters[dimensionId] || [];\n    const newList = oldList.filter(item => !itemIdsToRemove.includes(item.id));\n    setFilters({ ...filters,\n      [dimensionId]: newList\n    });\n  };\n\n  const onReorderItems = ({\n    dimensionId,\n    itemIds\n  }) => {\n    const oldList = filters[dimensionId] || [];\n    const reorderedList = itemIds.map(id => oldList.find(item => item.id === id));\n    setFilters({ ...filters,\n      [dimensionId]: reorderedList\n    });\n  };\n\n  const saveFilter = () => {\n    const id = dimension.id;\n    const filterItems = filters[id];\n\n    if (filterItems && filterItems.length) {\n      addItemFilter({\n        id,\n        value: [...filterItems]\n      });\n    } else {\n      removeItemFilter(id);\n    }\n\n    onClose(id);\n  };\n\n  const renderDialogContent = () => {\n    const commonProps = {\n      d2: context.d2,\n      onSelect: onSelectItems,\n      onDeselect: onDeselectItems,\n      onReorder: onReorderItems\n    };\n    const selectedItems = filters[dimension.id] || [];\n\n    switch (dimension.id) {\n      case DIMENSION_ID_PERIOD:\n        {\n          return <PeriodDimension selectedPeriods={selectedItems} onSelect={commonProps.onSelect} />;\n        }\n\n      case DIMENSION_ID_ORGUNIT:\n        return <OrgUnitDimension displayNameProperty={displayNameProperty} ouItems={selectedItems} {...commonProps} />;\n\n      default:\n        return <DynamicDimension selectedItems={selectedItems} dimensionId={dimension.id} onSelect={commonProps.onSelect} context={commonProps.d2} />;\n    }\n  };\n\n  return <>\n            {dimension.id && <Modal dataTest={`${dimension.id}-dimension-modal`} onClose={onClose} position=\"top\" large>\n                    <ModalTitle>{dimension.name}</ModalTitle>\n                    <ModalContent>{renderDialogContent()}</ModalContent>\n                    <ModalActions>\n                        <ButtonStrip>\n                            <Button secondary onClick={onClose}>\n                                {i18n.t('Cancel')}\n                            </Button>\n                            <Button primary onClick={saveFilter}>\n                                {i18n.t('Confirm')}\n                            </Button>\n                        </ButtonStrip>\n                    </ModalActions>\n                </Modal>}\n        </>;\n};\n\nFilterDialog.propTypes = {\n  addItemFilter: PropTypes.func,\n  dimension: PropTypes.object,\n  displayNameProperty: PropTypes.string,\n  initiallySelectedItems: PropTypes.object,\n  removeItemFilter: PropTypes.func,\n  onClose: PropTypes.func\n};\nFilterDialog.contextTypes = {\n  d2: PropTypes.object\n};\n\nconst mapStateToProps = state => ({\n  initiallySelectedItems: sGetItemFiltersRoot(state)\n});\n\nexport default connect(mapStateToProps, {\n  addItemFilter: acAddItemFilter,\n  removeItemFilter: acRemoveItemFilter\n})(FilterDialog);","export const SET_SETTINGS = 'SET_SETTINGS';\nexport const ADD_SETTINGS = 'ADD_SETTINGS';\nexport const DEFAULT_SETTINGS = {\n  keyDateFormat: 'yyyy-MM-dd',\n  keyAnalysisRelativePeriod: 'LAST_12_MONTHS',\n  keyAnalysisDigitGroupSeparator: 'SPACE',\n  displayNameProperty: 'displayName',\n  uiLocale: 'en',\n  rootOrganisationUnit: {},\n  keyGatherAnalyticalObjectStatisticsInDashboardViews: false\n};\nexport default ((state = DEFAULT_SETTINGS, action) => {\n  switch (action.type) {\n    case SET_SETTINGS:\n      {\n        return Object.assign({}, action.value);\n      }\n\n    case ADD_SETTINGS:\n      {\n        return { ...state,\n          ...action.value\n        };\n      }\n\n    default:\n      return state;\n  }\n}); // Selectors\n\nexport const sGetSettings = state => state.settings;\nexport const sGetSettingsDisplayNameProperty = state => sGetSettings(state).displayNameProperty;\nexport const sGetRootOrgUnit = state => sGetSettings(state).rootOrganisationUnit;\nexport const sGetRelativePeriod = state => sGetSettings(state).keyAnalysisRelativePeriod;\nexport const sGetUiLocale = state => sGetSettings(state).uiLocale;\nexport const sGatherAnalyticalObjectStatisticsInDashboardViews = state => sGetSettings(state).keyGatherAnalyticalObjectStatisticsInDashboardViews;","export const SET_ACTIVE_MODAL_DIMENSION = 'SET_ACTIVE_MODAL_DIMENSION';\nexport const CLEAR_ACTIVE_MODAL_DIMENSION = 'CLEAR_ACTIVE_MODAL_DIMENSION';\nexport const DEFAULT_STATE_ACTIVE_MODAL_DIMENSION = {};\nexport default ((state = DEFAULT_STATE_ACTIVE_MODAL_DIMENSION, action) => {\n  switch (action.type) {\n    case SET_ACTIVE_MODAL_DIMENSION:\n      {\n        return action.value;\n      }\n\n    case CLEAR_ACTIVE_MODAL_DIMENSION:\n      {\n        return DEFAULT_STATE_ACTIVE_MODAL_DIMENSION;\n      }\n\n    default:\n      return state;\n  }\n});\nexport const sGetActiveModalDimension = state => state.activeModalDimension;","import { SET_ACTIVE_MODAL_DIMENSION, CLEAR_ACTIVE_MODAL_DIMENSION } from '../reducers/activeModalDimension';\nexport const acSetActiveModalDimension = value => ({\n  type: SET_ACTIVE_MODAL_DIMENSION,\n  value\n});\nexport const acClearActiveModalDimension = () => ({\n  type: CLEAR_ACTIVE_MODAL_DIMENSION\n});","import React, { useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport isEmpty from 'lodash/isEmpty';\nimport i18n from '@dhis2/d2-i18n';\nimport { DimensionsPanel } from '@dhis2/analytics';\nimport { Button, Popover } from '@dhis2/ui';\nimport FilterDialog from './FilterDialog';\nimport { sGetSettingsDisplayNameProperty } from '../../reducers/settings';\nimport { sGetActiveModalDimension } from '../../reducers/activeModalDimension';\nimport { sGetDimensions } from '../../reducers/dimensions';\nimport { sGetItemFiltersRoot } from '../../reducers/itemFilters';\nimport { acClearActiveModalDimension, acSetActiveModalDimension } from '../../actions/activeModalDimension';\nimport classes from './styles/FilterSelector.module.css';\n\nconst FilterSelector = props => {\n  const [showPopover, setShowPopover] = useState(false);\n  const ref = useRef(null);\n\n  const onCloseDialog = () => {\n    setShowPopover(false);\n    props.clearActiveModalDimension();\n  };\n\n  const selectDimension = id => {\n    props.setActiveModalDimension(props.dimensions.find(dimension => dimension.id === id));\n  };\n\n  return <>\n            <span className={classes.buttonContainer} ref={ref}>\n                <Button onClick={() => setShowPopover(true)}>\n                    {i18n.t('Add filter')}\n                    <ArrowDropDownIcon />\n                </Button>\n            </span>\n            {showPopover && <Popover onClickOutside={onCloseDialog} reference={ref} arrow={true} placement=\"bottom-start\" dataTest=\"dashboard-filter-popover\">\n                    <DimensionsPanel style={{\n        width: '320px'\n      }} dimensions={props.dimensions} onDimensionClick={selectDimension} selectedIds={Object.keys(props.initiallySelectedItems)} />\n                </Popover>}\n            {!isEmpty(props.dimension) ? <FilterDialog displayNameProperty={props.displayNameProperty} dimension={props.dimension} onClose={onCloseDialog} /> : null}\n        </>;\n};\n\nconst mapStateToProps = state => ({\n  displayNameProperty: sGetSettingsDisplayNameProperty(state),\n  dimension: sGetActiveModalDimension(state),\n  dimensions: sGetDimensions(state),\n  initiallySelectedItems: sGetItemFiltersRoot(state)\n});\n\nFilterSelector.propTypes = {\n  clearActiveModalDimension: PropTypes.func,\n  dimension: PropTypes.object,\n  dimensions: PropTypes.array,\n  displayNameProperty: PropTypes.string,\n  initiallySelectedItems: PropTypes.object,\n  setActiveModalDimension: PropTypes.func\n};\nexport default connect(mapStateToProps, {\n  clearActiveModalDimension: acClearActiveModalDimension,\n  setActiveModalDimension: acSetActiveModalDimension\n})(FilterSelector);","import React, { useState, createRef } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link, Redirect } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport SharingDialog from '@dhis2/d2-ui-sharing-dialog';\nimport Star from '@material-ui/icons/Star';\nimport StarBorder from '@material-ui/icons/StarBorder';\nimport { Button, FlyoutMenu, Popover, MenuItem, colors } from '@dhis2/ui';\nimport { useWindowDimensions } from '../WindowDimensionsProvider';\nimport { ThreeDots } from '../Item/VisualizationItem/assets/icons';\nimport { orObject } from '../../modules/util';\nimport { tStarDashboard } from '../../actions/dashboards';\nimport { tUpdateShowDescription } from '../../actions/selected';\nimport FilterSelector from '../ItemFilter/FilterSelector';\nimport { sGetSelectedId, sGetSelectedShowDescription } from '../../reducers/selected';\nimport { sGetDashboardById, sGetDashboardItems, EMPTY_DASHBOARD } from '../../reducers/dashboards';\nimport isSmallScreen from '../../modules/isSmallScreen';\nimport classes from './styles/ViewTitleBar.module.css';\n\nconst ViewTitleBar = (props, context) => {\n  const [moreOptionsIsOpen, setMoreOptionsIsOpen] = useState(false);\n  const [sharingDialogIsOpen, setSharingDialogIsOpen] = useState(false);\n  const [redirectUrl, setRedirectUrl] = useState(null);\n  const {\n    width\n  } = useWindowDimensions();\n  const {\n    id,\n    name,\n    description,\n    access,\n    style,\n    showDescription,\n    starred,\n    onToggleStarredDashboard,\n    onShowHideDescription\n  } = props;\n\n  const toggleSharingDialog = () => setSharingDialogIsOpen(!sharingDialogIsOpen);\n\n  const toggleMoreOptions = () => setMoreOptionsIsOpen(!moreOptionsIsOpen);\n\n  const printLayout = () => setRedirectUrl(`${id}/printlayout`);\n\n  const printOipp = () => setRedirectUrl(`${id}/printoipp`);\n\n  const titleStyle = Object.assign({}, style.title, {\n    cursor: 'default',\n    userSelect: 'text',\n    top: '7px'\n  });\n  const StarIcon = starred ? Star : StarBorder;\n\n  if (redirectUrl) {\n    return <Redirect to={redirectUrl} />;\n  }\n\n  const showHideDescriptionLabel = showDescription ? i18n.t('Hide description') : i18n.t('Show description');\n\n  const showHideDescription = () => {\n    onShowHideDescription();\n    toggleMoreOptions();\n  };\n\n  const toggleStarredDashboardLabel = starred ? i18n.t('Unstar dashboard') : i18n.t('Star dashboard');\n\n  const toggleStarredDashboard = () => {\n    onToggleStarredDashboard();\n    toggleMoreOptions();\n  };\n\n  const buttonRef = createRef();\n  const userAccess = orObject(access);\n  return <>\n            <div className={classes.titleBar}>\n                <span style={titleStyle} data-test=\"view-dashboard-title\">\n                    {name}\n                </span>\n                <div className={classes.actions}>\n                    <div className={classes.titleBarIcon} onClick={onToggleStarredDashboard}>\n                        <StarIcon style={{\n            fill: colors.grey600\n          }} />\n                    </div>\n                    <div className={classes.strip}>\n                        {userAccess.update ? <Link className={classes.editLink} to={`/${id}/edit`} data-test=\"link-edit-dashboard\">\n                                <Button>{i18n.t('Edit')}</Button>\n                            </Link> : null}\n                        {userAccess.manage ? <Button className={classes.shareButton} onClick={toggleSharingDialog}>\n                                {i18n.t('Share')}\n                            </Button> : null}\n                        <FilterSelector />\n                        <span ref={buttonRef}>\n                            <Button small={isSmallScreen(width)} dataTest=\"more-button\" onClick={toggleMoreOptions}>\n                                <ThreeDots />\n                                <span style={{\n                marginLeft: '5px'\n              }}>\n                                    {i18n.t('More')}\n                                </span>\n                            </Button>\n                        </span>\n                    </div>\n                    {moreOptionsIsOpen && <Popover reference={buttonRef} placement=\"bottom-start\" onClickOutside={toggleMoreOptions}>\n                            <FlyoutMenu>\n                                <MenuItem dense label={toggleStarredDashboardLabel} onClick={toggleStarredDashboard} />\n                                <MenuItem dense label={showHideDescriptionLabel} onClick={showHideDescription} />\n                                <MenuItem dense label={i18n.t('Print')} dataTest=\"print-menu-item\">\n                                    <MenuItem dense label={i18n.t('Dashboard layout')} onClick={printLayout} dataTest=\"print-layout-menu-item\" />\n                                    <MenuItem dense label={i18n.t('One item per page')} onClick={printOipp} dataTest=\"print-oipp-menu-item\" />\n                                </MenuItem>\n                            </FlyoutMenu>\n                        </Popover>}\n                </div>\n            </div>\n            {showDescription ? <div className=\"dashboard-description\" style={Object.assign({\n      paddingTop: '5px',\n      paddingBottom: '5px'\n    }, style.description, !description ? {\n      color: '#888'\n    } : {})}>\n                    {description || i18n.t('No description')}\n                </div> : null}\n            {id ? <SharingDialog d2={context.d2} id={id} type=\"dashboard\" open={sharingDialogIsOpen} onRequestClose={toggleSharingDialog} /> : null}\n        </>;\n};\n\nViewTitleBar.propTypes = {\n  access: PropTypes.object,\n  description: PropTypes.string,\n  id: PropTypes.string,\n  name: PropTypes.string,\n  showDescription: PropTypes.bool,\n  starred: PropTypes.bool,\n  style: PropTypes.object,\n  onShowHideDescription: PropTypes.func,\n  onToggleStarredDashboard: PropTypes.func\n};\nViewTitleBar.defaultProps = {\n  name: '',\n  description: '',\n  starred: false,\n  showDescription: false\n};\nViewTitleBar.contextTypes = {\n  d2: PropTypes.object\n};\n\nconst mapStateToProps = state => {\n  const id = sGetSelectedId(state);\n  const dashboard = sGetDashboardById(state, id) || EMPTY_DASHBOARD;\n  return {\n    id,\n    name: dashboard.displayName,\n    description: dashboard.displayDescription,\n    dashboardItems: sGetDashboardItems(state),\n    showDescription: sGetSelectedShowDescription(state),\n    starred: dashboard.starred,\n    access: dashboard.access\n  };\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n  const {\n    id,\n    starred,\n    showDescription\n  } = stateProps;\n  const {\n    dispatch\n  } = dispatchProps;\n  return { ...stateProps,\n    ...ownProps,\n    onToggleStarredDashboard: () => dispatch(tStarDashboard(id, !starred)),\n    onShowHideDescription: () => dispatch(tUpdateShowDescription(!showDescription))\n  };\n};\n\nexport default connect(mapStateToProps, null, mergeProps)(ViewTitleBar);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { colors } from '@dhis2/ui';\nimport EditTitleBar from './EditTitleBar';\nimport ViewTitleBar from './ViewTitleBar';\nimport './TitleBar.css';\nconst style = {\n  title: {\n    position: 'relative',\n    fontSize: 21,\n    fontWeight: 500,\n    color: colors.black,\n    minWidth: 50\n  },\n  description: {\n    fontSize: 14,\n    color: colors.grey800\n  }\n};\n\nconst TitleBar = ({\n  edit\n}) => {\n  return <div className=\"titlebar-wrapper\" style={{\n    padding: '13px 15px 5px 10px'\n  }}>\n            {edit ? <EditTitleBar style={style} /> : <ViewTitleBar style={style} />}\n        </div>;\n};\n\nTitleBar.propTypes = {\n  edit: PropTypes.bool\n};\nexport default TitleBar;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classes from './styles/NoVisualizationMessage.module.css';\n\nconst NoVisualizationMessage = ({\n  message\n}) => {\n  return <div className={classes.message}>{message}</div>;\n};\n\nNoVisualizationMessage.propTypes = {\n  message: PropTypes.string\n};\nexport default NoVisualizationMessage;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport NoVisualizationMessage from './NoVisualizationMessage';\nimport * as pluginManager from './plugin';\nimport { getBaseUrl, orObject } from '../../../../modules/util';\nimport { getGridItemDomId } from '../../../ItemGrid/gridUtil';\n\nconst pluginCredentials = d2 => {\n  return {\n    baseUrl: getBaseUrl(d2),\n    auth: d2.Api.getApi().defaultHeaders.Authorization\n  };\n};\n\nclass DefaultPlugin extends Component {\n  pluginCredentials = null;\n\n  constructor(props, context) {\n    super(props);\n    this.d2 = context.d2;\n  }\n\n  pluginIsAvailable = () => pluginManager.pluginIsAvailable(this.props.activeType || this.props.item.type);\n  shouldPluginReload = prevProps => {\n    // TODO - fix this hack, to handle bug with multiple\n    // rerendering while switching between dashboards.\n    //\n    // To determine if the rendering is happening because of a\n    // dashboard switch, check if the item reference has changed.\n    const reloadAllowed = this.props.item === prevProps.item;\n    const filtersChanged = prevProps.itemFilters !== this.props.itemFilters;\n    const vis = orObject(this.props.visualization);\n    const prevVis = orObject(prevProps.visualization);\n    const visChanged = vis.id !== prevVis.id || prevProps.activeType !== this.props.activeType;\n    return reloadAllowed && (visChanged || filtersChanged);\n  };\n  reloadPlugin = prevProps => {\n    if (this.pluginIsAvailable() && this.shouldPluginReload(prevProps)) {\n      if (this.props.activeType !== prevProps.activeType || this.props.itemFilters !== prevProps.itemFilters) {\n        pluginManager.unmount(this.props.item, prevProps.activeType);\n        pluginManager.load(this.props.item, this.props.visualization, {\n          credentials: this.pluginCredentials,\n          activeType: this.props.activeType\n        });\n      }\n    }\n  };\n\n  componentDidMount() {\n    this.pluginCredentials = pluginCredentials(this.d2);\n\n    if (this.pluginIsAvailable()) {\n      pluginManager.load(this.props.item, this.props.visualization, {\n        credentials: this.pluginCredentials,\n        activeType: this.props.activeType,\n        options: this.props.options\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    this.reloadPlugin(prevProps);\n  }\n\n  componentWillUnmount() {\n    if (this.pluginIsAvailable()) {\n      pluginManager.unmount(this.props.item, this.props.activeType);\n    }\n  }\n\n  render() {\n    const {\n      item,\n      style\n    } = this.props;\n    return this.pluginIsAvailable() ? <div id={getGridItemDomId(item.id)} style={style} /> : <NoVisualizationMessage message={i18n.t('Unable to load the plugin for this item')} />;\n  }\n\n}\n\nDefaultPlugin.contextTypes = {\n  d2: PropTypes.object\n};\nDefaultPlugin.propTypes = {\n  activeType: PropTypes.string,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object,\n  options: PropTypes.object,\n  style: PropTypes.object,\n  visualization: PropTypes.object\n};\nDefaultPlugin.defaultProps = {\n  style: {},\n  item: {},\n  itemFilters: {},\n  options: {},\n  visualization: {}\n};\nexport default DefaultPlugin;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport DefaultPlugin from './DefaultPlugin';\nimport { MAP } from '../../../../modules/itemTypes';\n\nconst MapPlugin = ({\n  applyFilters,\n  ...props\n}) => {\n  if (props.item.type === MAP) {\n    // apply filters only to thematic and event layers\n    // for maps AO\n    const mapViews = props.visualization.mapViews.map(mapView => {\n      if (mapView.layer.includes('thematic') || mapView.layer.includes('event')) {\n        return applyFilters(mapView, props.itemFilters);\n      }\n\n      return mapView;\n    });\n    props.visualization = { ...props.visualization,\n      mapViews\n    };\n  } else {\n    // this is the case of a non map AO passed to the maps plugin\n    // due to a visualization type switch in dashboard item\n    // maps plugin takes care of converting the AO to a suitable format\n    props.visualization = applyFilters(props.visualization, props.itemFilters);\n  }\n\n  return <DefaultPlugin options={{\n    hideTitle: true\n  }} {...props} />;\n};\n\nMapPlugin.propTypes = {\n  applyFilters: PropTypes.func,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object,\n  visualization: PropTypes.object\n};\nexport default MapPlugin;","import React from 'react';\nimport { CircularLoader } from '@dhis2/ui';\nimport classes from './styles/LoadingMask.module.css';\n\nconst LoadingMask = () => {\n  return <div className={classes.center}>\n            <CircularLoader />\n        </div>;\n};\n\nexport default LoadingMask;","const getFilteredVisualization = (visualization, filters) => {\n  if (!Object.keys(filters).length) {\n    return visualization;\n  } // deep clone objects in filters to avoid changing the visualization in the Redux store\n\n\n  const visRows = visualization.rows.map(obj => ({ ...obj\n  }));\n  const visColumns = visualization.columns.map(obj => ({ ...obj\n  }));\n  const visFilters = visualization.filters.map(obj => ({ ...obj\n  }));\n  Object.keys(filters).forEach(dimensionId => {\n    if (filters[dimensionId]) {\n      let dimensionFound = false;\n      [visRows, visColumns, visFilters].forEach(dimensionObjects => dimensionObjects.filter(obj => obj.dimension === dimensionId).forEach(obj => {\n        dimensionFound = true;\n        obj.items = filters[dimensionId];\n      })); // add dimension to filters if not already present elsewhere\n\n      if (!dimensionFound) {\n        visFilters.push({\n          dimension: dimensionId,\n          items: filters[dimensionId]\n        });\n      }\n    }\n  });\n  return { ...visualization,\n    rows: visRows,\n    columns: visColumns,\n    filters: visFilters\n  };\n};\n\nexport default getFilteredVisualization;","import { VIS_TYPE_COLUMN, VIS_TYPE_PIVOT_TABLE, getAdaptedUiLayoutByType } from '@dhis2/analytics';\nimport { REPORT_TABLE, CHART, MAP } from '../../../../modules/itemTypes';\nexport const THEMATIC_LAYER = 'thematic';\n\nconst extractMapView = map => map.mapViews && map.mapViews.find(mv => mv.layer.includes(THEMATIC_LAYER));\n\nconst getWithoutId = object => ({ ...object,\n  id: undefined\n});\n\nconst getVisualizationConfig = (visualization, originalType, activeType) => {\n  if (originalType === MAP && originalType !== activeType) {\n    const extractedMapView = extractMapView(visualization);\n\n    if (extractedMapView === undefined) {\n      return null;\n    }\n\n    return getWithoutId({ ...visualization,\n      ...extractedMapView,\n      mapViews: undefined,\n      type: activeType === CHART ? VIS_TYPE_COLUMN : VIS_TYPE_PIVOT_TABLE\n    });\n  } else if (originalType === REPORT_TABLE && activeType === CHART) {\n    const layout = getAdaptedUiLayoutByType(visualization, VIS_TYPE_COLUMN);\n    return getWithoutId({ ...visualization,\n      ...layout,\n      type: VIS_TYPE_COLUMN\n    });\n  } else if (originalType === CHART && activeType === REPORT_TABLE) {\n    const layout = getAdaptedUiLayoutByType(visualization, VIS_TYPE_PIVOT_TABLE);\n    return getWithoutId({ ...visualization,\n      ...layout,\n      type: VIS_TYPE_PIVOT_TABLE\n    });\n  }\n\n  return getWithoutId(visualization);\n};\n\nexport default getVisualizationConfig;","// Note that this ignores discrepancies in 'this', so shouldn't be used with bound functions\n// This is useful instead of lodash/memoize when we only need to memoize a single value\n// Inspiration: https://github.com/alexreardon/memoize-one\nconst memoizeOne = fn => {\n  let lastArgs = undefined;\n  let lastValue = undefined;\n  return (...args) => {\n    if (lastArgs && args.length === lastArgs.length && args.every((arg, i) => arg === lastArgs[i])) {\n      return lastValue;\n    }\n\n    lastArgs = args;\n    lastValue = fn(...args);\n    return lastValue;\n  };\n};\n\nexport default memoizeOne;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport VisualizationPlugin from '@dhis2/data-visualizer-plugin';\nimport i18n from '@dhis2/d2-i18n';\nimport DefaultPlugin from './DefaultPlugin';\nimport MapPlugin from './MapPlugin';\nimport LoadingMask from './LoadingMask';\nimport NoVisualizationMessage from './NoVisualizationMessage';\nimport getFilteredVisualization from './getFilteredVisualization';\nimport getVisualizationConfig from './getVisualizationConfig';\nimport { VISUALIZATION, MAP, CHART, REPORT_TABLE } from '../../../../modules/itemTypes';\nimport { getVisualizationId } from '../../../../modules/item';\nimport memoizeOne from '../../../../modules/memoizeOne';\nimport { sGetVisualization } from '../../../../reducers/visualizations';\n\nclass Visualization extends React.Component {\n  state = {\n    pluginLoaded: false\n  };\n\n  constructor(props) {\n    super(props);\n    this.memoizedGetFilteredVisualization = memoizeOne(getFilteredVisualization);\n    this.memoizedGetVisualizationConfig = memoizeOne(getVisualizationConfig);\n  }\n\n  onLoadingComplete = () => {\n    this.setState({\n      pluginLoaded: true\n    });\n  };\n\n  render() {\n    const {\n      visualization,\n      activeType,\n      item,\n      itemFilters,\n      availableHeight\n    } = this.props;\n\n    if (!visualization) {\n      return <NoVisualizationMessage message={i18n.t('No data to display')} />;\n    }\n\n    const pluginProps = {\n      item,\n      itemFilters,\n      activeType,\n      style: {\n        height: availableHeight\n      },\n      visualization: this.memoizedGetVisualizationConfig(visualization, item.type, activeType)\n    };\n\n    switch (activeType) {\n      case VISUALIZATION:\n      case CHART:\n      case REPORT_TABLE:\n        {\n          return <>\n                        {!this.state.pluginLoaded && <div style={pluginProps.style}>\n                                <LoadingMask />\n                            </div>}\n                        <VisualizationPlugin d2={this.context.d2} visualization={this.memoizedGetFilteredVisualization(pluginProps.visualization, pluginProps.itemFilters)} onLoadingComplete={this.onLoadingComplete} forDashboard={true} style={pluginProps.style} />\n                    </>;\n        }\n\n      case MAP:\n        {\n          return <MapPlugin applyFilters={this.memoizedGetFilteredVisualization} {...pluginProps} />;\n        }\n\n      default:\n        {\n          pluginProps.visualization = this.memoizedGetFilteredVisualization(pluginProps.visualization, pluginProps.itemFilters);\n          return <DefaultPlugin {...pluginProps} />;\n        }\n    }\n  }\n\n}\n\nVisualization.propTypes = {\n  activeType: PropTypes.string,\n  availableHeight: PropTypes.number,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object,\n  visualization: PropTypes.object\n};\nVisualization.contextTypes = {\n  d2: PropTypes.object\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    visualization: sGetVisualization(state, getVisualizationId(ownProps.item))\n  };\n};\n\nexport default connect(mapStateToProps)(Visualization);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Warning } from './assets/icons';\nimport classes from './styles/FatalErrorBoundary.module.css';\n\nclass FatalErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      errorFound: false\n    };\n  }\n\n  componentDidCatch(error, info) {\n    this.setState({\n      errorFound: true\n    });\n    console.log('error: ', error);\n    console.log('info: ', info);\n  }\n\n  render() {\n    if (this.state.errorFound) {\n      return <p className={classes.container}>\n                    <span className={classes.icon}>\n                        <Warning />\n                    </span>\n                    <span className={classes.message}>\n                        {i18n.t('There was a problem loading this dashboard item')}\n                    </span>\n                </p>;\n    }\n\n    return this.props.children;\n  }\n\n}\n\nFatalErrorBoundary.propTypes = {\n  children: PropTypes.node\n};\nexport default FatalErrorBoundary;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classes from './styles/ItemHeader.module.css';\n\nconst ViewItemActions = ({\n  actionButtons\n}) => {\n  return actionButtons ? <div className={classes.itemActionsWrap}>{actionButtons}</div> : null;\n};\n\nViewItemActions.propTypes = {\n  actionButtons: PropTypes.node\n};\nexport default ViewItemActions;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { colors } from '@dhis2/ui';\nimport classes from './styles/DeleteItemButton.module.css';\n\nconst DeleteItemButton = ({\n  onClick\n}) => <button type=\"button\" className={classes.deleteItemButton} onClick={onClick} title={i18n.t(`Delete item`)}>\n        <DeleteIcon style={{\n    fill: colors.red500\n  }} />\n    </button>;\n\nDeleteItemButton.propTypes = {\n  onClick: PropTypes.func\n};\nexport default DeleteItemButton;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport DeleteItemButton from './DeleteItemButton';\nimport { acRemoveDashboardItem } from '../../../actions/editDashboard';\nimport classes from './styles/ItemHeader.module.css';\n\nconst EditItemActions = ({\n  itemId,\n  acRemoveDashboardItem\n}) => {\n  const handleDeleteItem = () => acRemoveDashboardItem(itemId);\n\n  return <div className={classes.itemActionsWrap}>\n            <DeleteItemButton onClick={handleDeleteItem} />\n        </div>;\n};\n\nEditItemActions.propTypes = {\n  acRemoveDashboardItem: PropTypes.func,\n  itemId: PropTypes.string\n};\nconst mapDispatchToProps = {\n  acRemoveDashboardItem\n};\nexport default connect(null, mapDispatchToProps)(EditItemActions);","import React from 'react';\nimport { colors } from '@dhis2/ui';\n\nconst WarningIcon = () => <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" fill={colors.grey600}>\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z\" />\n    </svg>;\n\nexport default WarningIcon;","import React from 'react';\nimport { Tooltip } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport InfoIcon from '../../../icons/Info';\nimport classes from './styles/PrintItemInfo.module.css';\n\nconst PrintWarning = () => <div className={classes.warning}>\n        <Tooltip content={i18n.t('This item has been shortened to fit on one page')} placement=\"bottom\">\n            <InfoIcon />\n        </Tooltip>\n    </div>;\n\nexport default PrintWarning;","export const EDIT = 'edit';\nexport const NEW = 'new';\nexport const VIEW = 'view';\nexport const PRINT = 'print';\nexport const PRINT_LAYOUT = 'print-layout';\nexport const isEditMode = mode => [EDIT, NEW].includes(mode);\nexport const isPrintMode = mode => [PRINT, PRINT_LAYOUT].includes(mode);\nexport const isViewMode = mode => mode === VIEW;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ViewItemActions from './ViewItemActions';\nimport EditItemActions from './EditItemActions';\nimport PrintItemInfo from './PrintItemInfo';\nimport { VIEW, EDIT, PRINT_LAYOUT } from '../../Dashboard/dashboardModes';\nimport classes from './styles/ItemHeader.module.css';\n\nconst getItemActionsMap = isShortened => {\n  return {\n    [VIEW]: ViewItemActions,\n    [EDIT]: EditItemActions,\n    [PRINT_LAYOUT]: isShortened ? PrintItemInfo : null\n  };\n}; // This is the margin-top + margin-bottom defined in the css file\n\n\nexport const HEADER_MARGIN_HEIGHT = 12;\nconst ItemHeader = React.forwardRef(({\n  dashboardMode,\n  title,\n  isShortened,\n  ...rest\n}, ref) => {\n  const Actions = getItemActionsMap(isShortened)[dashboardMode];\n  return <div className={classes.itemHeaderWrap} ref={ref}>\n                <p className={classes.itemTitle}>{title}</p>\n                {Actions ? <Actions {...rest} /> : null}\n            </div>;\n});\nItemHeader.displayName = 'ItemHeader';\nItemHeader.propTypes = {\n  dashboardMode: PropTypes.string,\n  isShortened: PropTypes.bool,\n  title: PropTypes.string\n};\nexport default connect(null, null, null, {\n  forwardRef: true\n})(ItemHeader);","import React, { useState, createRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { isSingleValue, isYearOverYear, VIS_TYPE_GAUGE, VIS_TYPE_PIE } from '@dhis2/analytics';\nimport { Button, Menu, Popover, MenuItem, Divider, colors } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport { ThreeDots, SpeechBubble } from './assets/icons';\nimport { pluginIsAvailable, getLink } from './Visualization/plugin';\nimport { CHART, MAP, REPORT_TABLE, EVENT_CHART, EVENT_REPORT, isTrackerDomainType, hasMapView, getAppName } from '../../../modules/itemTypes';\nconst iconFill = {\n  fill: colors.grey600\n};\n\nconst ItemHeaderButtons = (props, context) => {\n  const [menuIsOpen, setMenuIsOpen] = useState(null);\n  const {\n    item,\n    visualization,\n    onSelectActiveType,\n    activeType\n  } = props;\n  const isTrackerType = isTrackerDomainType(item.type);\n\n  const onViewTable = () => {\n    closeMenu();\n    onSelectActiveType(isTrackerType ? EVENT_REPORT : REPORT_TABLE);\n  };\n\n  const onViewChart = () => {\n    closeMenu();\n    onSelectActiveType(isTrackerType ? EVENT_CHART : CHART);\n  };\n\n  const onViewMap = () => {\n    closeMenu();\n    onSelectActiveType(MAP);\n  };\n\n  const itemHasMapView = () => hasMapView(item.type);\n\n  const handleInterpretationClick = () => {\n    props.onToggleFooter();\n\n    if (menuIsOpen) {\n      closeMenu();\n    }\n  };\n\n  const openMenu = () => setMenuIsOpen(true);\n\n  const closeMenu = () => setMenuIsOpen(false);\n\n  const type = visualization.type || item.type;\n  const canViewAs = !isSingleValue(type) && !isYearOverYear(type) && type !== VIS_TYPE_GAUGE && type !== VIS_TYPE_PIE;\n  const interpretationMenuLabel = props.activeFooter ? i18n.t(`Hide interpretations and details`) : i18n.t(`Show interpretations and details`);\n\n  const ViewAsMenuItems = () => <>\n            {activeType !== CHART && activeType !== EVENT_CHART && <MenuItem dense label={i18n.t('View as Chart')} onClick={onViewChart} icon={<ChartIcon style={iconFill} />} />}\n            {activeType !== REPORT_TABLE && activeType !== EVENT_REPORT && <MenuItem dense label={i18n.t('View as Table')} onClick={onViewTable} icon={<TableIcon style={iconFill} />} />}\n            {itemHasMapView() && activeType !== MAP && <MenuItem dense label={i18n.t('View as Map')} onClick={onViewMap} icon={<MapIcon style={iconFill} />} />}\n        </>;\n\n  const buttonRef = createRef();\n  return pluginIsAvailable(activeType || item.type) ? <>\n            <div ref={buttonRef}>\n                <Button small secondary onClick={openMenu} dataTest=\"dashboarditem-menu-button\">\n                    <ThreeDots />\n                </Button>\n            </div>\n            {menuIsOpen && <Popover reference={buttonRef} placement=\"auto-start\" arrow={false} onClickOutside={closeMenu}>\n                    <Menu>\n                        {canViewAs && <>\n                                <ViewAsMenuItems />\n                                <Divider />\n                            </>}\n                        <MenuItem dense icon={<LaunchIcon style={{\n          fill: '#6e7a8a'\n        }} />} label={i18n.t('Open in {{appName}} app', {\n          appName: getAppName(item.type)\n        })} href={getLink(item, context.d2)} target=\"_blank\" />\n                        <MenuItem dense icon={<SpeechBubble />} label={interpretationMenuLabel} onClick={handleInterpretationClick} />\n                    </Menu>\n                </Popover>}\n        </> : null;\n};\n\nItemHeaderButtons.propTypes = {\n  activeFooter: PropTypes.bool,\n  activeType: PropTypes.string,\n  item: PropTypes.object,\n  visualization: PropTypes.object,\n  onSelectActiveType: PropTypes.func,\n  onToggleFooter: PropTypes.func\n};\nItemHeaderButtons.contextTypes = {\n  d2: PropTypes.object\n};\nexport default ItemHeaderButtons;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getVisualizationId } from '../../../modules/item';\nimport InterpretationsComponent from '@dhis2/d2-ui-interpretations';\nimport classes from './styles/ItemFooter.module.css';\n\nconst ItemFooter = (props, context) => <div data-test=\"dashboarditem-footer\">\n        <hr className={classes.line} />\n        <div className={classes.scrollContainer}>\n            <InterpretationsComponent d2={context.d2} item={props.item} type={props.item.type.toLowerCase()} id={getVisualizationId(props.item)} appName=\"dashboard\" />\n        </div>\n    </div>;\n\nItemFooter.contextTypes = {\n  d2: PropTypes.object.isRequired\n};\nItemFooter.propTypes = {\n  item: PropTypes.object.isRequired\n};\nexport default ItemFooter;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport uniqueId from 'lodash/uniqueId';\nimport Visualization from './Visualization/Visualization';\nimport FatalErrorBoundary from './FatalErrorBoundary';\nimport ItemHeader, { HEADER_MARGIN_HEIGHT } from '../ItemHeader/ItemHeader';\nimport ItemHeaderButtons from './ItemHeaderButtons';\nimport ItemFooter from './ItemFooter';\nimport { apiPostDataStatistics } from '../../../api/dataStatistics';\nimport { apiFetchVisualization } from '../../../api/metadata';\nimport { sGetVisualization } from '../../../reducers/visualizations';\nimport { sGetSelectedItemActiveType } from '../../../reducers/selected';\nimport { sGetIsEditing } from '../../../reducers/editDashboard';\nimport { sGetItemFiltersRoot, DEFAULT_STATE_ITEM_FILTERS } from '../../../reducers/itemFilters';\nimport { sGatherAnalyticalObjectStatisticsInDashboardViews } from '../../../reducers/settings';\nimport { acAddVisualization } from '../../../actions/visualizations';\nimport { acSetSelectedItemActiveType } from '../../../actions/selected';\nimport { getDataStatisticsName } from '../../../modules/itemTypes';\nimport { getVisualizationId, getVisualizationName } from '../../../modules/item';\nimport memoizeOne from '../../../modules/memoizeOne';\nimport { isEditMode, isPrintMode, isViewMode } from '../../Dashboard/dashboardModes';\nimport { ITEM_CONTENT_PADDING_BOTTOM } from '../../ItemGrid/ItemGrid';\nexport class Item extends Component {\n  state = {\n    showFooter: false,\n    configLoaded: false\n  };\n\n  constructor(props, context) {\n    super(props);\n    this.d2 = context.d2;\n    this.contentRef = React.createRef();\n    this.headerRef = React.createRef();\n    this.memoizedGetContentHeight = memoizeOne((calculatedHeight, measuredHeight, preferMeasured) => preferMeasured ? measuredHeight || calculatedHeight : calculatedHeight);\n  }\n\n  async componentDidMount() {\n    this.props.updateVisualization(await apiFetchVisualization(this.props.item));\n\n    try {\n      if (this.props.gatherDataStatistics && isViewMode(this.props.dashboardMode)) {\n        await apiPostDataStatistics(getDataStatisticsName(this.props.item.type), getVisualizationId(this.props.item));\n      }\n    } catch (e) {\n      console.log(e);\n    }\n\n    this.setState({\n      configLoaded: true\n    });\n  }\n\n  getUniqueKey = memoizeOne(() => uniqueId());\n  onToggleFooter = () => {\n    this.setState({\n      showFooter: !this.state.showFooter\n    }, this.props.onToggleItemExpanded(this.props.item.id));\n  };\n  setActiveType = type => {\n    type !== this.getActiveType() && this.props.setActiveType(this.props.item.id, type);\n  };\n  getActiveType = () => {\n    if (this.props.isEditing) {\n      return this.props.item.type;\n    }\n\n    return this.props.activeType || this.props.item.type;\n  };\n  getAvailableHeight = () => {\n    const calculatedHeight = this.props.item.originalHeight - this.headerRef.current.clientHeight - HEADER_MARGIN_HEIGHT - ITEM_CONTENT_PADDING_BOTTOM;\n    return this.memoizedGetContentHeight(calculatedHeight, this.contentRef ? this.contentRef.offsetHeight : null, isEditMode(this.props.dashboardMode) || isPrintMode(this.props.dashboardMode));\n  };\n\n  render() {\n    const {\n      item,\n      dashboardMode,\n      itemFilters\n    } = this.props;\n    const {\n      showFooter\n    } = this.state;\n    const activeType = this.getActiveType();\n    const actionButtons = <ItemHeaderButtons item={item} visualization={this.props.visualization} onSelectActiveType={this.setActiveType} onToggleFooter={this.onToggleFooter} activeType={activeType} activeFooter={showFooter} />;\n    return <>\n                <ItemHeader title={getVisualizationName(item)} itemId={item.id} actionButtons={actionButtons} ref={this.headerRef} dashboardMode={dashboardMode} isShortened={item.shortened} />\n                <FatalErrorBoundary>\n                    <div key={this.getUniqueKey(itemFilters)} className=\"dashboard-item-content\" ref={ref => this.contentRef = ref}>\n                        {this.state.configLoaded && <Visualization item={item} activeType={activeType} itemFilters={itemFilters} availableHeight={this.getAvailableHeight()} />}\n                    </div>\n                </FatalErrorBoundary>\n                {isViewMode(dashboardMode) && showFooter ? <ItemFooter item={item} /> : null}\n            </>;\n  }\n\n}\nItem.contextTypes = {\n  d2: PropTypes.object\n};\nItem.propTypes = {\n  activeType: PropTypes.string,\n  dashboardMode: PropTypes.string,\n  gatherDataStatistics: PropTypes.bool,\n  isEditing: PropTypes.bool,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object,\n  setActiveType: PropTypes.func,\n  updateVisualization: PropTypes.func,\n  visualization: PropTypes.object,\n  onToggleItemExpanded: PropTypes.func\n};\nItem.defaultProps = {\n  item: {},\n  onToggleItemExpanded: Function.prototype,\n  visualization: {}\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const itemFilters = !isEditMode(ownProps.dashboardMode) ? sGetItemFiltersRoot(state) : DEFAULT_STATE_ITEM_FILTERS;\n  return {\n    activeType: sGetSelectedItemActiveType(state, ownProps.item?.id),\n    isEditing: sGetIsEditing(state),\n    itemFilters,\n    visualization: sGetVisualization(state, getVisualizationId(ownProps.item)),\n    gatherDataStatistics: sGatherAnalyticalObjectStatisticsInDashboardViews(state)\n  };\n};\n\nconst mapDispatchToProps = {\n  setActiveType: acSetSelectedItemActiveType,\n  updateVisualization: acAddVisualization\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Item);","import React from 'react';\nimport { colors } from '@dhis2/ui';\nconst style = {\n  backgroundColor: colors.grey200,\n  border: 'none',\n  height: '1px',\n  margin: '0px 0px 5px 0px'\n};\n\nconst Line = () => <hr style={style} />;\n\nexport default Line;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { colors } from '@dhis2/ui';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport Line from '../../../widgets/Line';\nimport { sGetMessagesRoot } from '../../../reducers/messages';\nimport { formatDate } from '../../../modules/util';\nimport { isViewMode } from '../../Dashboard/dashboardModes';\nimport './MessagesItem.css';\nconst PRIVATE = 'PRIVATE';\nconst messageTypes = {\n  [PRIVATE]: 'Private',\n  VALIDATION_RESULT: 'Validation',\n  TICKET: 'Ticket',\n  SYSTEM: 'System'\n};\nconst style = {\n  list: {\n    listStyleType: 'none',\n    paddingLeft: '0px'\n  },\n  seeAll: {\n    textAlign: 'center',\n    fontSize: '13px',\n    marginBottom: '5px'\n  },\n  sender: {\n    fontSize: '13px',\n    lineHeight: '15px',\n    margin: 0,\n    color: colors.grey800\n  },\n  snippet: {\n    color: colors.grey800,\n    fontSize: '13px',\n    lineHeight: '15px',\n    maxHeight: '30px',\n    overflow: 'hidden'\n  }\n};\n\nclass MessagesItem extends Component {\n  state = {\n    uiLocale: ''\n  };\n\n  async componentDidMount() {\n    const uiLocale = await this.context.d2.currentUser.userSettings.get('keyUiLocale');\n    this.setState({\n      uiLocale\n    });\n  }\n\n  getMessageHref = msg => {\n    const msgIdentifier = msg ? `#/${msg.messageType}/${msg.id}` : '';\n    return `${this.context.baseUrl}/dhis-web-messaging/${msgIdentifier}`;\n  };\n  getMessageSender = msg => {\n    const latestMsg = msg.messages.slice(-1)[0];\n    return latestMsg.sender ? latestMsg.sender.displayName : '';\n  };\n  getMessageItems = () => {\n    const modeClass = isViewMode(this.props.dashboardMode) ? 'view' : null;\n    return this.props.messages.map(msg => {\n      const redirectToMsg = () => {\n        if (isViewMode(this.props.dashboardMode)) {\n          document.location.href = this.getMessageHref(msg);\n        }\n      };\n\n      const sender = msg.messageType === PRIVATE ? this.getMessageSender(msg) : messageTypes[msg.messageType];\n      const readClass = !msg.read ? 'unread' : null;\n      const latestMsg = msg.messages.slice(-1)[0];\n      const msgDate = latestMsg.lastUpdated;\n      return <li className={`message-item ${modeClass}`} key={msg.id} onClick={redirectToMsg}>\n                    <p className={`message-title ${readClass}`}>\n                        {msg.displayName} ({msg.messageCount})\n                    </p>\n                    <p style={style.sender}>\n                        {sender} - {formatDate(msgDate, this.state.uiLocale)}\n                    </p>\n                    <p style={style.snippet}>{latestMsg.text}</p>\n                </li>;\n    });\n  };\n\n  render() {\n    return <>\n                <ItemHeader title={i18n.t('Messages')} itemId={this.props.item.id} dashboardMode={this.props.dashboardMode} isShortened={this.props.item.shortened} />\n                <Line />\n                {this.props.messages.length > 0 && <div className=\"dashboard-item-content\">\n                        <ul style={style.list}>{this.getMessageItems()}</ul>\n                        <div style={style.seeAll}>\n                            <a href={this.getMessageHref()}>\n                                {i18n.t('See all messages')}\n                            </a>\n                        </div>\n                    </div>}\n            </>;\n  }\n\n}\n\nMessagesItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  messages: PropTypes.array\n};\nMessagesItem.contextTypes = {\n  d2: PropTypes.object,\n  baseUrl: PropTypes.string\n};\n\nconst mapStateToProps = state => {\n  return {\n    messages: Object.values(sGetMessagesRoot(state))\n  };\n};\n\nconst MessagesContainer = connect(mapStateToProps, null)(MessagesItem);\nexport default MessagesContainer;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nconst NotSupportedItem = props => <>\n        <ItemHeader title={i18n.t('Item type \"{{type}}\" not supported', {\n    type: props.item.type\n  })} itemId={props.item.id} dashboardMode={props.dashboardMode} isShortened={props.item.shortened} />\n        <div style={{\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '90%'\n  }}>\n            <NotInterestedIcon style={{\n      width: 100,\n      height: 100,\n      align: 'center'\n    }} color=\"disabled\" />\n        </div>\n    </>;\n\nNotSupportedItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object\n};\nexport default NotSupportedItem;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst DescriptionIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill={colors.grey500}>\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M14 2H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6zm2 16H8v-2h8v2zm0-4H8v-2h8v2zm-3-5V3.5L18.5 9H13z\" />\n    </svg>;\n\nDescriptionIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default DescriptionIcon;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst DeleteIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill={colors.red500}>\n        <path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>;\n\nDeleteIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default DeleteIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { colors } from '@dhis2/ui';\nimport DescriptionIcon from '../../../icons/Description';\nimport DeleteIcon from '../../../icons/Delete';\nimport Line from '../../../widgets/Line';\nimport { itemTypeMap, getItemUrl } from '../../../modules/itemTypes';\nimport { orArray } from '../../../modules/util';\nimport { tRemoveListItemContent } from './actions';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport { isEditMode } from '../../Dashboard/dashboardModes';\nimport classes from './Item.module.css';\n\nconst getItemTitle = item => itemTypeMap[item.type].pluralTitle;\n\nconst getContentItems = item => orArray(item[itemTypeMap[item.type].propName]).filter((item, index, array) => array.findIndex(el => el.id === item.id) === index);\n\nconst ListItem = (props, context) => {\n  const {\n    item,\n    dashboardMode,\n    tRemoveListItemContent\n  } = props;\n  const contentItems = getContentItems(item);\n\n  const getLink = contentItem => {\n    const deleteButton = <button className={classes.deletebutton} onClick={() => tRemoveListItemContent(item, contentItem)}>\n                <DeleteIcon className={classes.deleteicon} />\n            </button>;\n    return <>\n                <a className={classes.link} style={{\n        color: colors.grey900\n      }} href={getItemUrl(item.type, contentItem, context.d2)}>\n                    {contentItem.name}\n                </a>\n                {isEditMode(dashboardMode) ? deleteButton : null}\n            </>;\n  };\n\n  return <>\n            <ItemHeader title={getItemTitle(item)} itemId={item.id} dashboardMode={dashboardMode} isShortened={item.shortened} />\n            <Line />\n            <div className=\"dashboard-item-content\">\n                <ul className={classes.list}>\n                    {contentItems.map(contentItem => <li className={classes.item} key={contentItem.id}>\n                            <DescriptionIcon className={classes.itemicon} />\n                            {getLink(contentItem)}\n                        </li>)}\n                </ul>\n            </div>\n        </>;\n};\n\nListItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  tRemoveListItemContent: PropTypes.func\n};\nListItem.contextTypes = {\n  d2: PropTypes.object\n};\nexport default connect(null, {\n  tRemoveListItemContent\n})(ListItem);","import { acUpdateDashboardItem, acRemoveDashboardItem } from '../../../actions/editDashboard';\nimport { itemTypeMap } from '../../../modules/itemTypes';\nexport const tRemoveListItemContent = (dashboardItem, content) => dispatch => {\n  const listItemType = itemTypeMap[dashboardItem.type].propName;\n  const newContent = dashboardItem[listItemType].filter(item => item.id !== content.id);\n\n  if (newContent.length) {\n    dashboardItem[listItemType] = newContent;\n    dispatch(acUpdateDashboardItem(dashboardItem));\n  } else {\n    dispatch(acRemoveDashboardItem(dashboardItem));\n  }\n};","/** @module reducers/editDashboard */\nimport update from 'immutability-helper';\nimport isEmpty from 'lodash/isEmpty';\nimport { orArray } from '../modules/util';\nexport const SET_PRINT_DASHBOARD = 'SET_PRINT_DASHBOARD';\nexport const CLEAR_PRINT_DASHBOARD = 'CLEAR_PRINT_DASHBOARD';\nexport const ADD_PRINT_DASHBOARD_ITEM = 'ADD_PRINT_DASHBOARD_ITEM';\nexport const SET_PRINT_DASHBOARD_LAYOUT = 'SET_PRINT_DASHBOARD_LAYOUT';\nexport const REMOVE_PRINT_DASHBOARD_ITEM = 'REMOVE_PRINT_DASHBOARD_ITEM';\nexport const UPDATE_PRINT_DASHBOARD_ITEM = 'UPDATE_PRINT_DASHBOARD_ITEM';\nexport const DEFAULT_STATE_PRINT_DASHBOARD = {};\nconst DEFAULT_DASHBOARD_ITEMS = [];\nexport const NEW_PRINT_DASHBOARD_STATE = {\n  id: '',\n  name: '',\n  access: {},\n  description: '',\n  dashboardItems: DEFAULT_DASHBOARD_ITEMS\n};\nexport default ((state = DEFAULT_STATE_PRINT_DASHBOARD, action) => {\n  switch (action.type) {\n    case SET_PRINT_DASHBOARD:\n      {\n        const newState = {};\n        Object.keys(NEW_PRINT_DASHBOARD_STATE).map(k => newState[k] = action.value[k]);\n        return newState;\n      }\n\n    case CLEAR_PRINT_DASHBOARD:\n      return DEFAULT_STATE_PRINT_DASHBOARD;\n\n    case ADD_PRINT_DASHBOARD_ITEM:\n      if (!action.value.position) {\n        return update(state, {\n          dashboardItems: {\n            $unshift: [action.value]\n          }\n        });\n      }\n\n      return update(state, {\n        dashboardItems: {\n          $splice: [[parseInt(action.value.position), 0, action.value]]\n        }\n      });\n\n    case REMOVE_PRINT_DASHBOARD_ITEM:\n      {\n        const idToRemove = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === idToRemove);\n\n        if (dashboardItemIndex > -1) {\n          return update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1]]\n            }\n          });\n        }\n\n        return state;\n      }\n\n    case UPDATE_PRINT_DASHBOARD_ITEM:\n      {\n        const dashboardItem = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === dashboardItem.id);\n\n        if (dashboardItemIndex > -1) {\n          const newState = update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1, Object.assign({}, dashboardItem)]]\n            }\n          });\n          return newState;\n        }\n\n        return state;\n      }\n\n    case SET_PRINT_DASHBOARD_LAYOUT:\n      {\n        const stateItems = orArray(state.dashboardItems);\n        let layoutHasChanged = false;\n        const newStateItems = action.value.map(({\n          x,\n          y,\n          w,\n          h,\n          i\n        }) => {\n          const stateItem = stateItems.find(si => si.id === i);\n\n          if (!(stateItem.x === x && stateItem.y === y && stateItem.w === w && stateItem.h === h)) {\n            layoutHasChanged = true;\n            return Object.assign({}, stateItem, {\n              w,\n              h,\n              x,\n              y\n            });\n          }\n\n          return stateItem;\n        });\n        return layoutHasChanged ? { ...state,\n          dashboardItems: newStateItems\n        } : state;\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetPrintDashboardRoot = state => state.printDashboard; // selectors\n\nexport const sGetIsPrinting = state => !isEmpty(state.printDashboard);\nexport const sGetPrintDashboardName = state => sGetPrintDashboardRoot(state).name;\nexport const sGetPrintDashboardDescription = state => sGetPrintDashboardRoot(state).description;\nexport const sGetPrintDashboardItems = state => {\n  return sGetPrintDashboardRoot(state)?.dashboardItems || DEFAULT_DASHBOARD_ITEMS;\n};","import React from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport Input from '@material-ui/core/Input';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport PrintItemInfo from '../ItemHeader/PrintItemInfo';\nimport Line from '../../../widgets/Line';\nimport { Parser as RichTextParser, Editor as RichTextEditor } from '@dhis2/d2-ui-rich-text';\nimport { acUpdateDashboardItem } from '../../../actions/editDashboard';\nimport { sGetEditDashboardItems } from '../../../reducers/editDashboard';\nimport { sGetDashboardItems } from '../../../reducers/dashboards';\nimport { sGetIsPrinting, sGetPrintDashboardItems } from '../../../reducers/printDashboard';\nimport { isEditMode, PRINT_LAYOUT } from '../../Dashboard/dashboardModes';\nconst style = {\n  textDiv: {\n    padding: '10px',\n    whiteSpace: 'pre-line',\n    lineHeight: '20px'\n  },\n  textField: {\n    fontSize: '14px',\n    fontStretch: 'normal',\n    width: '90%',\n    margin: '0 auto',\n    display: 'block',\n    lineHeight: '24px'\n  },\n  container: {\n    marginBottom: '20px',\n    marginTop: '20px'\n  }\n};\n\nconst TextItem = props => {\n  const {\n    item,\n    dashboardMode,\n    text,\n    acUpdateDashboardItem\n  } = props;\n\n  const onChangeText = event => {\n    const updatedItem = { ...item,\n      text: event.target.value\n    };\n    acUpdateDashboardItem(updatedItem);\n  };\n\n  const viewItem = () => {\n    const textDivStyle = Object.assign({}, style.textField, style.textDiv);\n    return <div className=\"dashboard-item-content\" style={style.container}>\n                <RichTextParser style={textDivStyle}>{text}</RichTextParser>\n            </div>;\n  };\n\n  const editItem = () => {\n    return <>\n                <ItemHeader title={i18n.t('Text item')} itemId={item.id} dashboardMode={dashboardMode} />\n                <Line />\n                <div className=\"dashboard-item-content\">\n                    <RichTextEditor onEdit={onChangeText}>\n                        <Input value={text} multiline fullWidth style={style.textField} placeholder={i18n.t('Add text here')} onChange={onChangeText} />\n                    </RichTextEditor>\n                </div>\n            </>;\n  };\n\n  const printItem = () => {\n    const textDivStyle = Object.assign({}, style.textField, style.textDiv);\n    return <>\n                {props.item.shortened ? <PrintItemInfo /> : null}\n                <div className=\"dashboard-item-content\" style={style.container}>\n                    <RichTextParser style={textDivStyle}>{text}</RichTextParser>\n                </div>\n            </>;\n  };\n\n  let textItem;\n\n  if (isEditMode(dashboardMode)) {\n    textItem = editItem;\n  } else if (dashboardMode === PRINT_LAYOUT) {\n    textItem = printItem;\n  } else {\n    textItem = viewItem;\n  }\n\n  return <>{textItem()}</>;\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const isPrintPreview = sGetIsPrinting(state);\n  let items;\n\n  if (isPrintPreview) {\n    items = sGetPrintDashboardItems(state);\n  } else if (isEditMode(ownProps.dashboardMode)) {\n    items = sGetEditDashboardItems(state);\n  } else {\n    items = sGetDashboardItems(state);\n  }\n\n  const item = items.find(item => item.id === ownProps.item.id);\n  return {\n    text: item ? item.text : ''\n  };\n};\n\nTextItem.propTypes = {\n  acUpdateDashboardItem: PropTypes.func,\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  text: PropTypes.string\n};\nexport default connect(mapStateToProps, {\n  acUpdateDashboardItem\n})(TextItem);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport Line from '../../../widgets/Line';\nimport { FILTER_ORG_UNIT } from '../../../actions/itemFilters';\nimport { sGetItemFiltersRoot, DEFAULT_STATE_ITEM_FILTERS } from '../../../reducers/itemFilters';\nimport { EDIT, isEditMode } from '../../Dashboard/dashboardModes';\n\nconst getIframeSrc = (appDetails, item, itemFilters) => {\n  let iframeSrc = `${appDetails.launchUrl}?dashboardItemId=${item.id}`;\n\n  if (itemFilters[FILTER_ORG_UNIT] && itemFilters[FILTER_ORG_UNIT].length) {\n    const ouIds = itemFilters[FILTER_ORG_UNIT].map(ouFilter => ouFilter.path.split('/').slice(-1)[0]);\n    iframeSrc += `&userOrgUnit=${ouIds.join(',')}`;\n  }\n\n  return iframeSrc;\n};\n\nconst AppItem = ({\n  dashboardMode,\n  item,\n  itemFilters\n}, context) => {\n  let appDetails;\n  const appKey = item.appKey;\n\n  if (appKey) {\n    appDetails = context.d2.system.installedApps.find(app => app.key === appKey);\n  }\n\n  const hideTitle = appDetails?.settings?.dashboardWidget?.hideTitle && dashboardMode !== EDIT;\n  return appDetails && appDetails.name && appDetails.launchUrl ? <>\n            {!hideTitle && <>\n                    <ItemHeader title={appDetails.name} itemId={item.id} dashboardMode={dashboardMode} isShortened={item.shortened} />\n                    <Line />\n                </>}\n            <iframe title={appDetails.name} src={getIframeSrc(appDetails, item, itemFilters)} className={!hideTitle ? 'dashboard-item-content' : 'dashboard-item-content-hidden-title'} style={{\n      border: 'none'\n    }} />\n        </> : <>\n            <ItemHeader title={`${appKey} app not found`} />\n            <Line />\n            <div className=\"dashboard-item-content\" style={{\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      height: '90%'\n    }}>\n                <NotInterestedIcon color=\"disabled\" disabled style={{\n        width: 100,\n        height: 100,\n        align: 'center'\n      }} />\n            </div>\n        </>;\n};\n\nAppItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object\n};\nAppItem.contextTypes = {\n  d2: PropTypes.object\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const itemFilters = !isEditMode(ownProps.dashboardMode) ? sGetItemFiltersRoot(state) : DEFAULT_STATE_ITEM_FILTERS;\n  return {\n    itemFilters\n  };\n};\n\nexport default connect(mapStateToProps)(AppItem);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { colors } from '@dhis2/ui';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nconst style = {\n  margin: '21px 28px',\n  fontSize: '14px',\n  lineHeight: '18px',\n  color: colors.grey600\n};\n\nconst SpacerItem = props => {\n  return <>\n            <ItemHeader title={i18n.t('Spacer')} itemId={props.item.id} dashboardMode={props.dashboardMode} isShortened={props.item.shortened} />\n            <p style={style}>\n                {i18n.t('Use a spacer to create empty vertical space between other dashboard items.')}\n            </p>\n        </>;\n};\n\nSpacerItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object\n};\nexport default SpacerItem;","import React from 'react';\n\nconst PageBreakItem = () => <div />;\n\nexport default PageBreakItem;","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { sGetSelectedId, sGetSelectedShowDescription } from '../../../reducers/selected';\nimport { sGetDashboardById, EMPTY_DASHBOARD } from '../../../reducers/dashboards';\nimport { sGetNamedItemFilters } from '../../../reducers/itemFilters';\nimport { sGetIsEditing } from '../../../reducers/editDashboard';\nimport { sGetPrintDashboardName, sGetPrintDashboardDescription } from '../../../reducers/printDashboard';\nimport classes from './styles/Item.module.css';\n\nconst PrintTitlePageItem = ({\n  name,\n  description,\n  itemFilters,\n  showDescription\n}) => {\n  const getItemFilterList = () => {\n    const listItems = itemFilters.map(({\n      name,\n      values\n    }) => <li className={classes.filterListItem} key={name}>\n                {name}: {values.map(val => val.name).join(', ')}\n            </li>);\n    return <ul className={classes.filterList}>{listItems}</ul>;\n  };\n\n  return <div className={classes.titlePage}>\n            <p className={classes.name}>{name}</p>\n            {showDescription && description && <p className={classes.description}>{description}</p>}\n            {itemFilters.length > 0 && <>\n                    <p className={classes.filterTitle}>\n                        {i18n.t('Filters applied')}\n                    </p>\n                    {getItemFilterList()}\n                </>}\n        </div>;\n};\n\nPrintTitlePageItem.propTypes = {\n  description: PropTypes.string,\n  itemFilters: PropTypes.array,\n  name: PropTypes.string,\n  showDescription: PropTypes.bool\n};\nPrintTitlePageItem.defaultProps = {\n  description: '',\n  name: '',\n  showDescription: false\n};\n\nconst mapStateToProps = state => {\n  const id = sGetSelectedId(state);\n  const isEditMode = sGetIsEditing(state);\n  const viewDashboard = sGetDashboardById(state, id) || EMPTY_DASHBOARD;\n  const name = isEditMode ? sGetPrintDashboardName(state) || i18n.t('Untitled dashboard') : viewDashboard.displayName;\n  const description = isEditMode ? sGetPrintDashboardDescription(state) : viewDashboard.displayDescription;\n  return {\n    name,\n    description,\n    itemFilters: sGetNamedItemFilters(state),\n    showDescription: sGetSelectedShowDescription(state)\n  };\n};\n\nexport default connect(mapStateToProps)(PrintTitlePageItem);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport VisualizationItem from './VisualizationItem/Item';\nimport MessagesItem from './MessagesItem/Item';\nimport NotSupportedItem from './NotSupportedItem/Item';\nimport ListItem from './ListItem/Item';\nimport TextItem from './TextItem/Item';\nimport AppItem from './AppItem/Item';\nimport SpacerItem from './SpacerItem/Item';\nimport PageBreakItem from './PageBreakItem/Item';\nimport PrintTitlePageItem from './PrintTitlePageItem/Item';\nimport { APP, VISUALIZATION, REPORT_TABLE, CHART, MAP, EVENT_CHART, EVENT_REPORT, MESSAGES, REPORTS, RESOURCES, USERS, TEXT, SPACER, PAGEBREAK, PRINT_TITLE_PAGE } from '../../modules/itemTypes';\n\nconst getGridItem = type => {\n  switch (type) {\n    case VISUALIZATION:\n    case REPORT_TABLE:\n    case CHART:\n    case MAP:\n    case EVENT_CHART:\n    case EVENT_REPORT:\n      return VisualizationItem;\n\n    case MESSAGES:\n      return MessagesItem;\n\n    case REPORTS:\n    case RESOURCES:\n    case USERS:\n      return ListItem;\n\n    case TEXT:\n      return TextItem;\n\n    case SPACER:\n      return SpacerItem;\n\n    case APP:\n      return AppItem;\n\n    case PAGEBREAK:\n      return PageBreakItem;\n\n    case PRINT_TITLE_PAGE:\n      return PrintTitlePageItem;\n\n    default:\n      return NotSupportedItem;\n  }\n};\n\nexport const Item = props => {\n  const GridItem = getGridItem(props.item.type);\n  return <GridItem item={props.item} dashboardMode={props.dashboardMode} onToggleItemExpanded={props.onToggleItemExpanded} />;\n};\nItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  onToggleItemExpanded: PropTypes.func\n};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash/debounce';\nimport pick from 'lodash/pick';\nconst defaultDebounceMs = 100;\nconst defaultBufferFactor = 0.25;\n\nclass ProgressiveLoadingContainer extends Component {\n  static propTypes = {\n    children: PropTypes.node.isRequired,\n    bufferFactor: PropTypes.number,\n    className: PropTypes.string,\n    debounceMs: PropTypes.number,\n    style: PropTypes.object\n  };\n  static defaultProps = {\n    debounceMs: defaultDebounceMs,\n    bufferFactor: defaultBufferFactor\n  };\n  state = {\n    shouldLoad: false\n  };\n  containerRef = null;\n  shouldLoadHandler = null;\n  handlerOptions = {\n    passive: true\n  };\n\n  checkShouldLoad() {\n    if (!this.containerRef) {\n      return;\n    }\n\n    const bufferPx = this.props.bufferFactor * window.innerHeight;\n    const rect = this.containerRef.getBoundingClientRect();\n\n    if (rect.bottom > -bufferPx && rect.top < window.innerHeight + bufferPx) {\n      this.setState({\n        shouldLoad: true\n      });\n      this.removeHandler();\n    }\n  }\n\n  registerHandler() {\n    this.shouldLoadHandler = debounce(() => this.checkShouldLoad(), this.props.debounceMs);\n    document.getElementsByClassName('dashboard-wrapper')[0]?.addEventListener('scroll', this.shouldLoadHandler, this.handlerOptions);\n  }\n\n  removeHandler() {\n    document.getElementsByClassName('dashboard-wrapper')[0]?.removeEventListener('scroll', this.shouldLoadHandler, this.handlerOptions);\n  }\n\n  componentDidMount() {\n    this.registerHandler();\n    this.checkShouldLoad();\n  }\n\n  componentWillUnmount() {\n    this.removeHandler();\n  }\n\n  render() {\n    const {\n      children,\n      className,\n      style,\n      ...props\n    } = this.props;\n    const {\n      shouldLoad\n    } = this.state;\n    const eventProps = pick(props, ['onMouseDown', 'onTouchStart', 'onMouseUp', 'onTouchEnd']);\n    return <div ref={ref => this.containerRef = ref} style={style} className={className} data-test={`dashboarditem-${props.itemId}`} {...eventProps}>\n                {shouldLoad && children}\n            </div>;\n  }\n\n}\n\nexport default ProgressiveLoadingContainer;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ReactGridLayout from 'react-grid-layout';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport { acUpdateDashboardLayout } from '../../actions/editDashboard';\nimport { Item } from '../Item/Item';\nimport { resize as pluginResize } from '../Item/VisualizationItem/Visualization/plugin';\nimport { isVisualizationType } from '../../modules/itemTypes';\nimport { GRID_ROW_HEIGHT, GRID_COMPACT_TYPE, MARGIN, getGridColumns, hasShape, onItemResize } from './gridUtil';\nimport { orArray } from '../../modules/util';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\nimport './ItemGrid.css';\nimport { sGetSelectedId, sGetSelectedIsLoading } from '../../reducers/selected';\nimport { sGetEditDashboardRoot, sGetEditDashboardItems } from '../../reducers/editDashboard';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport ProgressiveLoadingContainer from '../Item/ProgressiveLoadingContainer';\nimport { VIEW, EDIT } from '../Dashboard/dashboardModes'; // Component\n\nconst EXPANDED_HEIGHT = 17; // this is set in the .dashboard-item-content css\n\nexport const ITEM_CONTENT_PADDING_BOTTOM = 4;\nexport class ItemGrid extends Component {\n  state = {\n    expandedItems: {}\n  };\n  onToggleItemExpanded = clickedId => {\n    const isExpanded = typeof this.state.expandedItems[clickedId] === 'boolean' ? this.state.expandedItems[clickedId] : false;\n    const expandedItems = { ...this.state.expandedItems\n    };\n    expandedItems[clickedId] = !isExpanded;\n    this.setState({\n      expandedItems\n    });\n  };\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.edit) {\n      this.setState({\n        expandedItems: {}\n      });\n    }\n  }\n\n  onLayoutChange = newLayout => {\n    if (this.props.edit) {\n      this.props.acUpdateDashboardLayout(newLayout);\n    }\n  };\n  onResizeStop = (layout, oldItem, newItem) => {\n    onItemResize(newItem.i);\n    const dashboardItem = this.props.dashboardItems.find(item => item.id === newItem.i); // call resize on the item component if it's a plugin type\n\n    if (dashboardItem && isVisualizationType(dashboardItem)) {\n      pluginResize(dashboardItem);\n    }\n  };\n  adjustHeightForExpanded = dashboardItem => {\n    const expandedItem = this.state.expandedItems[dashboardItem.id];\n\n    if (expandedItem && expandedItem === true) {\n      return Object.assign({}, dashboardItem, {\n        h: dashboardItem.h + EXPANDED_HEIGHT\n      });\n    }\n\n    return dashboardItem;\n  };\n  getItemComponent = item => {\n    const itemClassNames = [item.type, this.props.edit ? 'edit' : 'view'].join(' ');\n    return <ProgressiveLoadingContainer key={item.i} className={itemClassNames} itemId={item.id}>\n                <Item item={item} dashboardMode={this.props.edit ? EDIT : VIEW} onToggleItemExpanded={this.onToggleItemExpanded} />\n            </ProgressiveLoadingContainer>;\n  };\n  getItemComponents = items => items.map(item => this.getItemComponent(item));\n\n  render() {\n    const {\n      edit,\n      isLoading,\n      dashboardItems\n    } = this.props;\n\n    if (!isLoading && !dashboardItems.length) {\n      return <NoContentMessage text={i18n.t('There are no items on this dashboard')} />;\n    }\n\n    const items = edit ? dashboardItems : dashboardItems.map(this.adjustHeightForExpanded);\n    return <div className=\"grid-wrapper\">\n                {isLoading ? <Layer translucent>\n                        <CenteredContent>\n                            <CircularLoader />\n                        </CenteredContent>\n                    </Layer> : null}\n                <ReactGridLayout onLayoutChange={this.onLayoutChange} onResizeStop={this.onResizeStop} className=\"layout\" layout={items} margin={MARGIN} cols={getGridColumns()} rowHeight={GRID_ROW_HEIGHT} width={window.innerWidth} compactType={GRID_COMPACT_TYPE} isDraggable={edit} isResizable={edit} draggableCancel=\"input,textarea\">\n                    {this.getItemComponents(items)}\n                </ReactGridLayout>\n            </div>;\n  }\n\n}\nItemGrid.propTypes = {\n  acUpdateDashboardLayout: PropTypes.func,\n  dashboardItems: PropTypes.array,\n  edit: PropTypes.bool,\n  isLoading: PropTypes.bool\n};\nItemGrid.defaultProps = {\n  dashboardItems: []\n}; // Container\n\nconst mapStateToProps = (state, ownProps) => {\n  const selectedDashboard = ownProps.edit ? sGetEditDashboardRoot(state) : sGetDashboardById(state, sGetSelectedId(state));\n  const dashboardItems = ownProps.edit ? sGetEditDashboardItems(state) : sGetDashboardItems(state);\n  return {\n    isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n    dashboardItems\n  };\n};\n\nconst mapDispatchToProps = {\n  acUpdateDashboardLayout\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n  const validItems = orArray(stateProps.dashboardItems).filter(hasShape);\n  return { ...dispatchProps,\n    edit: ownProps.edit,\n    isLoading: stateProps.isLoading,\n    dashboardItems: validItems,\n    onItemResize\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps, mergeProps)(ItemGrid);","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { colors } from '@dhis2/ui';\nconst styles = {\n  badgeContainer: {\n    margin: '2px',\n    padding: '0 16px',\n    borderRadius: '4px',\n    color: colors.white,\n    backgroundColor: '#212934',\n    height: 36,\n    display: 'flex',\n    alignItems: 'center'\n  },\n  badge: {\n    fontSize: '13px',\n    cursor: 'pointer',\n    whiteSpace: 'nowrap'\n  },\n  badgeRemove: {\n    fontSize: '12px',\n    textDecoration: 'underline',\n    marginLeft: '24px',\n    cursor: 'pointer'\n  }\n};\n\nclass FilterBadge extends Component {\n  onClick = id => () => this.props.onClick(id);\n  onRemove = id => () => this.props.onRemove(id);\n\n  render() {\n    const {\n      data\n    } = this.props;\n    return <div style={styles.badgeContainer} data-test=\"dashboard-filter-badge\">\n                <span style={styles.badge} onClick={this.onClick(data.id)}>\n                    {`${data.name}: ${data.values.length > 1 ? i18n.t('{{count}} selected', {\n          count: data.values.length\n        }) : data.values[0].name}`}\n                </span>\n                <span style={styles.badgeRemove} onClick={this.onRemove(data.id)}>\n                    {i18n.t('Remove')}\n                </span>\n            </div>;\n  }\n\n}\n\nFilterBadge.propTypes = {\n  data: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired,\n  onRemove: PropTypes.func.isRequired\n};\nFilterBadge.defaultProps = {\n  onClick: Function.prototype,\n  onRemove: Function.prototype\n};\nexport default FilterBadge;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport FilterBadge from './FilterBadge';\nimport { sGetNamedItemFilters } from '../../reducers/itemFilters';\nimport { acRemoveItemFilter } from '../../actions/itemFilters';\nimport { acSetActiveModalDimension } from '../../actions/activeModalDimension';\nimport classes from './styles/FilterBar.module.css';\nexport class FilterBar extends Component {\n  onBadgeRemove = id => {\n    this.props.removeItemFilter(id);\n  };\n  onBadgeClick = id => {\n    this.props.setActiveModalDimension({\n      id,\n      name: this.props.filters.find(item => item.id === id).name\n    });\n  };\n\n  render() {\n    const {\n      filters\n    } = this.props;\n    return filters.length ? // the 3 is calculated so that the FilterBar has the same vertical position as the TitleBar in relation to the ControlBar\n    <div className={classes.bar} style={{\n      top: 3\n    }}>\n                {filters.map(filter => <FilterBadge key={filter.id} data={filter} onClick={this.onBadgeClick} onRemove={this.onBadgeRemove} />)}\n            </div> : null;\n  }\n\n}\nFilterBar.propTypes = {\n  filters: PropTypes.array.isRequired,\n  removeItemFilter: PropTypes.func.isRequired,\n  setActiveModalDimension: PropTypes.func\n};\nFilterBar.defaultProps = {\n  filters: [],\n  removeItemFIlter: Function.prototype\n};\n\nconst mapStateToProps = state => ({\n  filters: sGetNamedItemFilters(state)\n});\n\nexport default connect(mapStateToProps, {\n  setActiveModalDimension: acSetActiveModalDimension,\n  removeItemFilter: acRemoveItemFilter\n})(FilterBar);","export const SET_WINDOW_HEIGHT = 'SET_WINDOW_HEIGHT';\nexport const DEFAULT_STATE_WINDOW_HEIGHT = window.innerHeight;\nexport default ((state = DEFAULT_STATE_WINDOW_HEIGHT, action) => {\n  switch (action.type) {\n    case SET_WINDOW_HEIGHT:\n      {\n        return action.value;\n      }\n\n    default:\n      return state;\n  }\n});\nexport const sGetWindowHeight = state => state.windowHeight;","import { generateUid } from 'd2/uid';\nimport { SET_PRINT_DASHBOARD, CLEAR_PRINT_DASHBOARD, SET_PRINT_DASHBOARD_LAYOUT, ADD_PRINT_DASHBOARD_ITEM, REMOVE_PRINT_DASHBOARD_ITEM, UPDATE_PRINT_DASHBOARD_ITEM } from '../reducers/printDashboard';\nimport { NEW_ITEM_SHAPE, getGridItemProperties, getPageBreakItemShape, getPrintTitlePageItemShape } from '../components/ItemGrid/gridUtil';\nimport { itemTypeMap, PAGEBREAK } from '../modules/itemTypes'; // actions\n\nexport const acSetPrintDashboard = (dashboard, items) => {\n  const val = { ...dashboard,\n    dashboardItems: items\n  };\n  return {\n    type: SET_PRINT_DASHBOARD,\n    value: val\n  };\n};\nexport const acClearPrintDashboard = () => ({\n  type: CLEAR_PRINT_DASHBOARD\n});\nexport const acUpdatePrintDashboardLayout = value => ({\n  type: SET_PRINT_DASHBOARD_LAYOUT,\n  value\n});\nexport const acAddPrintDashboardItem = item => {\n  const type = item.type;\n  delete item.type;\n  const itemPropName = itemTypeMap[type].propName;\n  const id = generateUid();\n  const gridItemProperties = getGridItemProperties(id);\n  let shape;\n\n  if (type === PAGEBREAK) {\n    const yPos = item.yPos || 0;\n    shape = getPageBreakItemShape(yPos, item.isStatic);\n  } else {\n    shape = getPrintTitlePageItemShape(item.isOneItemPerPage);\n  }\n\n  return {\n    type: ADD_PRINT_DASHBOARD_ITEM,\n    value: {\n      id,\n      type,\n      position: item.position || null,\n      [itemPropName]: item.content,\n      ...NEW_ITEM_SHAPE,\n      ...gridItemProperties,\n      ...shape\n    }\n  };\n};\nexport const acRemovePrintDashboardItem = value => ({\n  type: REMOVE_PRINT_DASHBOARD_ITEM,\n  value\n});\nexport const acUpdatePrintDashboardItem = item => ({\n  type: UPDATE_PRINT_DASHBOARD_ITEM,\n  value: item\n});","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport TitleBar from '../TitleBar/TitleBar';\nimport ItemGrid from '../ItemGrid/ItemGrid';\nimport FilterBar from '../FilterBar/FilterBar';\nimport DashboardsBar from '../ControlBar/DashboardsBar';\nimport { sGetIsEditing } from '../../reducers/editDashboard';\nimport { sGetIsPrinting } from '../../reducers/printDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { sGetWindowHeight } from '../../reducers/windowHeight';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { acClearEditDashboard } from '../../actions/editDashboard';\nimport { acClearPrintDashboard } from '../../actions/printDashboard';\nimport { getControlBarHeight, HEADERBAR_HEIGHT } from '../ControlBar/controlBarDimensions';\nexport const ViewDashboard = props => {\n  useEffect(() => {\n    if (props.dashboardIsEditing) {\n      props.clearEditDashboard();\n    } else if (props.dashboardIsPrinting) {\n      props.clearPrintDashboard();\n    }\n  }, [props.dashboardIsEditing, props.dashboardIsPrinting]);\n  useEffect(() => {\n    document.querySelector('.dashboard-wrapper')?.scroll(0, 0);\n  }, [props.selectedId]);\n  const height = props.windowHeight - HEADERBAR_HEIGHT - getControlBarHeight(props.controlBarRows);\n  return <>\n            <DashboardsBar />\n            <div className=\"dashboard-wrapper\" style={{\n      height\n    }}>\n                <TitleBar edit={false} />\n                <FilterBar />\n                <ItemGrid edit={false} />\n            </div>\n        </>;\n};\nViewDashboard.propTypes = {\n  clearEditDashboard: PropTypes.func,\n  clearPrintDashboard: PropTypes.func,\n  controlBarRows: PropTypes.number,\n  dashboardIsEditing: PropTypes.bool,\n  dashboardIsPrinting: PropTypes.bool,\n  selectedId: PropTypes.string,\n  windowHeight: PropTypes.number\n};\n\nconst mapStateToProps = state => {\n  return {\n    dashboardIsEditing: sGetIsEditing(state),\n    dashboardIsPrinting: sGetIsPrinting(state),\n    controlBarRows: sGetControlBarUserRows(state),\n    selectedId: sGetSelectedId(state),\n    windowHeight: sGetWindowHeight(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  clearEditDashboard: acClearEditDashboard,\n  clearPrintDashboard: acClearPrintDashboard\n})(ViewDashboard);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Button, Modal, ModalContent, ModalActions, ButtonStrip, ModalTitle } from '@dhis2/ui';\nimport classes from './styles/ConfirmDeleteDialog.module.css';\nexport const ConfirmDeleteDialog = ({\n  dashboardName,\n  onDeleteConfirmed,\n  onContinueEditing,\n  open\n}) => {\n  const actions = [<Button key=\"cancel\" secondary onClick={onContinueEditing} dataTest=\"cancel-delete-dashboard\">\n            {i18n.t('Cancel')}\n        </Button>, <Button key=\"delete\" destructive onClick={onDeleteConfirmed} dataTest=\"confirm-delete-dashboard\">\n            {i18n.t('Delete')}\n        </Button>];\n  return open && <Modal onClose={onContinueEditing} small position=\"middle\">\n                <ModalTitle>{i18n.t('Delete dashboard')}</ModalTitle>\n                <ModalContent>\n                    <span className={classes.content}>\n                        {i18n.t('Deleting dashboard \"{{ dashboardName }}\" will remove it for all users. This action cannot be undone. Are you sure you want to permanently delete this dashboard?', {\n          dashboardName\n        })}\n                    </span>\n                </ModalContent>\n                <ModalActions>\n                    <ButtonStrip>{actions}</ButtonStrip>\n                </ModalActions>\n            </Modal>;\n};\nConfirmDeleteDialog.propTypes = {\n  dashboardName: PropTypes.string,\n  open: PropTypes.bool,\n  onContinueEditing: PropTypes.func,\n  onDeleteConfirmed: PropTypes.func\n};\nexport default ConfirmDeleteDialog;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport TranslationDialog from '@dhis2/d2-ui-translation-dialog';\nimport { Button, ButtonStrip } from '@dhis2/ui';\nimport ConfirmDeleteDialog from './ConfirmDeleteDialog';\nimport { tSaveDashboard, acClearEditDashboard, acSetPrintPreviewView, acClearPrintPreviewView } from '../../actions/editDashboard';\nimport { acClearPrintDashboard } from '../../actions/printDashboard';\nimport { tDeleteDashboard, acSetDashboardDisplayName } from '../../actions/dashboards';\nimport { sGetEditDashboardRoot, sGetIsNewDashboard, sGetIsPrintPreviewView } from '../../reducers/editDashboard';\nimport { apiFetchDashboard } from '../../api/dashboards';\nimport classes from './styles/EditBar.module.css';\nexport class EditBar extends Component {\n  state = {\n    translationDialogIsOpen: false,\n    dashboardModel: undefined,\n    confirmDeleteDialogOpen: false,\n    redirectUrl: undefined\n  };\n  onConfirmDelete = () => {\n    this.setState({\n      confirmDeleteDialogOpen: true\n    });\n  };\n  onSave = () => {\n    this.props.onSave().then(newId => {\n      this.setState({\n        redirectUrl: `/${newId}`\n      });\n    });\n  };\n  onPrintPreview = () => {\n    if (this.props.isPrintPreviewView) {\n      this.props.clearPrintPreview();\n      this.props.clearPrintDashboard();\n    } else {\n      this.props.showPrintPreview();\n    }\n  };\n  onDiscard = () => {\n    this.props.onDiscardChanges();\n    const redirectUrl = this.props.dashboardId ? `/${this.props.dashboardId}` : '/';\n    this.setState({\n      redirectUrl\n    });\n  };\n  onContinueEditing = () => {\n    this.setState({\n      confirmDeleteDialogOpen: false\n    });\n  };\n  onDeleteConfirmed = () => {\n    this.setState({\n      confirmDeleteDialogOpen: false\n    });\n    this.props.onDelete(this.props.dashboardId).then(() => {\n      this.setState({\n        redirectUrl: '/'\n      });\n    });\n  };\n  onTranslationsSaved = async translations => {\n    if (translations && translations.length) {\n      const dbLocale = await this.context.d2.currentUser.userSettings.get('keyDbLocale');\n      const translation = translations.find(t => t.locale === dbLocale && t.property === 'NAME');\n\n      if (translation && translation.value) {\n        this.props.onTranslate(this.props.dashboardId, translation.value);\n      }\n    }\n  };\n  fetchDashboardModel = () => {\n    if (this.props.dashboardId && !this.state.dashboardModel) {\n      apiFetchDashboard(this.props.dashboardId).then(dashboardModel => this.setState({\n        dashboardModel\n      }));\n    }\n  };\n\n  componentDidMount() {\n    this.fetchDashboardModel();\n  }\n\n  componentDidUpdate() {\n    this.fetchDashboardModel();\n  }\n\n  toggleTranslationDialog = () => {\n    this.setState({\n      translationDialogIsOpen: !this.state.translationDialogIsOpen\n    });\n  };\n  confirmDeleteDialog = () => this.props.deleteAccess && this.props.dashboardId ? <ConfirmDeleteDialog dashboardName={this.props.dashboardName} onDeleteConfirmed={this.onDeleteConfirmed} onContinueEditing={this.onContinueEditing} open={this.state.confirmDeleteDialogOpen} /> : null;\n  translationDialog = () => this.state.dashboardModel && this.state.dashboardModel.id ? <TranslationDialog className=\"translation-dialog\" d2={this.context.d2} open={this.state.translationDialogIsOpen} onRequestClose={this.toggleTranslationDialog} objectToTranslate={this.state.dashboardModel} fieldsToTranslate={['name', 'description']} onTranslationSaved={this.onTranslationsSaved} onTranslationError={err => console.log('translation update error', err)} /> : null;\n  renderActionButtons = () => <ButtonStrip>\n            <Button primary onClick={this.onSave} dataTest=\"save-dashboard-button\">\n                {i18n.t('Save changes')}\n            </Button>\n            <Button onClick={this.onPrintPreview}>\n                {this.props.isPrintPreviewView ? i18n.t('Exit Print preview') : i18n.t('Print preview')}\n            </Button>\n\n            {this.props.dashboardId && <Button onClick={this.toggleTranslationDialog}>\n                    {i18n.t('Translate')}\n                </Button>}\n            {this.props.dashboardId && this.props.deleteAccess && <Button onClick={this.onConfirmDelete} dataTest=\"delete-dashboard-button\">\n                    {i18n.t('Delete')}\n                </Button>}\n        </ButtonStrip>;\n\n  render() {\n    if (this.state.redirectUrl) {\n      return <Redirect to={this.state.redirectUrl} />;\n    }\n\n    const {\n      updateAccess\n    } = this.props;\n    const discardBtnText = updateAccess ? i18n.t('Exit without saving') : i18n.t('Go to dashboards');\n    return <>\n                <div className={classes.editBar}>\n                    <div className={classes.controls}>\n                        {updateAccess ? this.renderActionButtons() : null}\n                        <Button secondary onClick={this.onDiscard}>\n                            {discardBtnText}\n                        </Button>\n                    </div>\n                </div>\n                {this.translationDialog()}\n                {this.confirmDeleteDialog()}\n            </>;\n  }\n\n}\nEditBar.propTypes = {\n  clearPrintDashboard: PropTypes.func,\n  clearPrintPreview: PropTypes.func,\n  dashboardId: PropTypes.string,\n  dashboardName: PropTypes.string,\n  deleteAccess: PropTypes.bool,\n  isPrintPreviewView: PropTypes.bool,\n  showPrintPreview: PropTypes.func,\n  updateAccess: PropTypes.bool,\n  onDelete: PropTypes.func,\n  onDiscardChanges: PropTypes.func,\n  onSave: PropTypes.func,\n  onTranslate: PropTypes.func\n};\nEditBar.contextTypes = {\n  d2: PropTypes.object\n};\n\nconst mapStateToProps = state => {\n  const dashboard = sGetEditDashboardRoot(state);\n  let deleteAccess;\n  let updateAccess;\n\n  if (sGetIsNewDashboard(state)) {\n    deleteAccess = true;\n    updateAccess = true;\n  } else {\n    updateAccess = dashboard.access ? dashboard.access.update : false;\n    deleteAccess = dashboard.access ? dashboard.access.delete : false;\n  }\n\n  return {\n    dashboardId: dashboard.id,\n    dashboardName: dashboard.name,\n    deleteAccess,\n    isPrintPreviewView: sGetIsPrintPreviewView(state),\n    updateAccess\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  clearPrintDashboard: () => dispatch(acClearPrintDashboard()),\n  clearPrintPreview: () => dispatch(acClearPrintPreviewView()),\n  onSave: () => dispatch(tSaveDashboard()).then(id => id),\n  onDelete: id => dispatch(tDeleteDashboard(id)),\n  onDiscardChanges: () => dispatch(acClearEditDashboard()),\n  onTranslate: (id, value) => dispatch(acSetDashboardDisplayName(id, value)),\n  showPrintPreview: () => dispatch(acSetPrintPreviewView())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditBar);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { a4LandscapeWidthPx } from '../ItemGrid/gridUtil';\nimport classes from './styles/PrintInfo.module.css';\n\nconst PrintInfo = ({\n  isLayout\n}) => {\n  const maxWidth = a4LandscapeWidthPx < window.innerWidth ? a4LandscapeWidthPx : window.innerWidth;\n  const infoHeader = isLayout ? i18n.t('dashboard layout') : i18n.t('one item per page');\n  return <div className={classes.infoWrapper}>\n            <p className={classes.infoHeader}>\n                {`${i18n.t('Print Preview')}: ${infoHeader}`}\n            </p>\n            <div style={{\n      maxWidth\n    }}>\n                <p className={classes.info}>\n                    {`${i18n.t('For best print results')}:`}\n                </p>\n                <div className={classes.info}>\n                    <ul className={classes.infoList}>\n                        <li>{i18n.t('Use Chrome or Edge web browser')}</li>\n                        <li>\n                            {i18n.t('Wait for all dashboard items to load before printing')}\n                        </li>\n                        <li>\n                            {i18n.t('Use A4 landscape paper size and default margin settings in the browser print dialog')}\n                        </li>\n                    </ul>\n                </div>\n            </div>\n            <hr className={classes.divider} />\n        </div>;\n};\n\nPrintInfo.propTypes = {\n  isLayout: PropTypes.bool\n};\nexport default PrintInfo;","import React from 'react';\nimport { colors } from '@dhis2/ui';\n\nconst LessHorizontalIcon = () => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill={colors.grey600} viewBox=\"0 0 24 24\">\n        <path d=\"m13.2928932 6.29289322c.3905243-.39052429 1.0236893-.39052429 1.4142136 0 .3604839.36048396.3882135.92771502.0831886 1.32000622l-.0831886.09420734-4.2921068 4.29289322 4.2921068 4.2928932c.3604839.360484.3882135.927715.0831886 1.3200062l-.0831886.0942074c-.360484.3604839-.927715.3882135-1.3200062.0831886l-.0942074-.0831886-4.99999998-5c-.36048396-.360484-.3882135-.927715-.08318861-1.3200062l.08318861-.0942074z\" />\n    </svg>;\n\nexport default LessHorizontalIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Button } from '@dhis2/ui';\nimport { Link } from 'react-router-dom';\nimport LessHorizontalIcon from '../../icons/LessHorizontal';\nimport { a4LandscapeWidthPx } from '../ItemGrid/gridUtil';\nimport classes from './styles/PrintActionsBar.module.css'; // 42px set in the module css file\n\nexport const PRINT_ACTIONS_BAR_HEIGHT = 42;\n\nconst PrintActionsBar = ({\n  id\n}) => {\n  const width = a4LandscapeWidthPx < window.innerWidth ? a4LandscapeWidthPx : window.innerWidth;\n  return <>\n            <div className={classes.container}>\n                <div className={classes.inner} style={{\n        width\n      }}>\n                    <Link className={classes.link} to={`/${id}`}>\n                        <Button dataTest=\"exit-print-preview\">\n                            <LessHorizontalIcon />\n                            {i18n.t('Exit print preview')}\n                        </Button>\n                    </Link>\n                    <Button onClick={window.print}>{i18n.t('Print')}</Button>\n                </div>\n            </div>\n            <div className={classes.topMargin} />\n        </>;\n};\n\nPrintActionsBar.propTypes = {\n  id: PropTypes.string\n};\nexport default PrintActionsBar;","import sortBy from 'lodash/sortBy';\nimport { orArray } from './util';\nimport { itemTypeMap } from './itemTypes';\nexport const getTransformYPx = elStyle => {\n  if (!elStyle || !elStyle.transform) {\n    return null;\n  } // find valid transforms - those with y pixels\n  // the code is expecting the transform prop to\n  // look like:  translate(10px, 300px)\n\n\n  const transformY = elStyle.transform.split(' ')[1]?.match(/(\\d+)px/);\n\n  if (transformY) {\n    return parseInt(transformY[1]);\n  } else {\n    return null;\n  }\n};\nexport const getDomGridItemsSortedByYPos = elements => {\n  const types = Object.keys(itemTypeMap);\n  const elementsWithBoundingRect = orArray(elements).map(el => {\n    const type = Array.from(el.classList).find(className => types.indexOf(className) > -1);\n    const rect = el.getBoundingClientRect();\n    const y = getTransformYPx(el.style) || parseInt(rect.y);\n    return {\n      type,\n      classList: el.classList,\n      bottomY: y + parseInt(rect.height),\n      el\n    };\n  });\n  return sortBy(elementsWithBoundingRect, ['bottomY']);\n};","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport sortBy from 'lodash/sortBy';\nimport ReactGridLayout from 'react-grid-layout';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport cx from 'classnames';\nimport { Item } from '../Item/Item';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport { acUpdatePrintDashboardLayout } from '../../actions/printDashboard';\nimport { sGetSelectedIsLoading } from '../../reducers/selected';\nimport { sGetPrintDashboardRoot, sGetPrintDashboardItems } from '../../reducers/printDashboard';\nimport { sGetIsEditing } from '../../reducers/editDashboard';\nimport { GRID_ROW_HEIGHT, GRID_COMPACT_TYPE, MARGIN, getGridColumns, hasShape, a4LandscapeWidthPx } from './gridUtil';\nimport { getDomGridItemsSortedByYPos, getTransformYPx } from '../../modules/printUtils';\nimport { PRINT_LAYOUT } from '../Dashboard/dashboardModes';\nimport { PAGEBREAK } from '../../modules/itemTypes';\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\nimport './ItemGrid.css'; // this is set in the .dashboard-item-content css\n\nexport const ITEM_CONTENT_PADDING_BOTTOM = 4;\nexport class PrintLayoutItemGrid extends Component {\n  onLayoutChange = newLayout => {\n    this.props.updateDashboardLayout(newLayout);\n  };\n  isFirstPageBreak = item => {\n    if (item.type !== PAGEBREAK) {\n      return false;\n    }\n\n    const pageBreaks = this.props.dashboardItems.filter(i => i.type === PAGEBREAK);\n    const sortedPageBreaks = sortBy(pageBreaks, ['y']);\n    return item.y === sortedPageBreaks[0].y;\n  };\n  getItemComponent = item => {\n    // the first-page-break class is used in Edit print preview\n    const itemClassNames = cx('print', 'layout', `${item.type}`, {\n      'first-page-break': this.props.isEditing && this.isFirstPageBreak(item),\n      shortened: !!item.shortened\n    });\n    return <div key={item.i} className={itemClassNames}>\n                <Item item={item} dashboardMode={PRINT_LAYOUT} />\n            </div>;\n  };\n  getItemComponents = items => items.map(item => this.getItemComponent(item));\n\n  hideExtraPageBreaks() {\n    const sortedElements = getDomGridItemsSortedByYPos(Array.from(document.querySelectorAll('.react-grid-item')));\n    let pageBreakBottom = 0;\n    let lastItemBottom = 0;\n    let foundNonPageBreak = false;\n\n    for (let i = sortedElements.length - 1; i >= 0; --i) {\n      const item = sortedElements[i];\n\n      if (item.type === PAGEBREAK) {\n        if (!foundNonPageBreak) {\n          item.el.classList.add('removed');\n        } else {\n          pageBreakBottom = item.bottomY;\n          break;\n        }\n      } else {\n        foundNonPageBreak = true;\n        const thisItemBottom = item.bottomY;\n\n        if (thisItemBottom > lastItemBottom) {\n          lastItemBottom = thisItemBottom;\n        }\n      }\n    }\n\n    const pageHeight = 720;\n    const gridElement = document.querySelector('.react-grid-layout'); // the last page break is before the last item(s) so\n    // maxHeight is one page beyond the last page break\n\n    const maxHeight = pageBreakBottom + pageHeight;\n\n    if (gridElement) {\n      gridElement.style.height = `${maxHeight}px`;\n    }\n\n    if (this.props.isEditing) {\n      //scroll to below the title page - which is middle of the first pagebreak\n      const firstBreak = document.querySelector('.first-page-break');\n\n      if (firstBreak && firstBreak.style && firstBreak.style.transform) {\n        const yPos = getTransformYPx(firstBreak.style);\n        const scrollArea = document.querySelector('.scroll-area');\n        scrollArea && scrollArea.scroll(0, yPos + 50);\n      }\n    }\n  }\n\n  componentDidMount() {\n    this.hideExtraPageBreaks();\n  }\n\n  componentDidUpdate() {\n    this.hideExtraPageBreaks();\n  }\n\n  render() {\n    const {\n      isLoading,\n      dashboardItems\n    } = this.props;\n\n    if (!isLoading && !dashboardItems.length) {\n      return <NoContentMessage text={i18n.t('There are no items on this dashboard')} />;\n    }\n\n    const width = a4LandscapeWidthPx < window.innerWidth ? a4LandscapeWidthPx : window.innerWidth;\n    return <div className=\"grid-wrapper\">\n                {isLoading ? <Layer translucent>\n                        <CenteredContent>\n                            <CircularLoader />\n                        </CenteredContent>\n                    </Layer> : null}\n                <ReactGridLayout onLayoutChange={this.onLayoutChange} className=\"layout\" layout={dashboardItems} margin={MARGIN} cols={getGridColumns()} rowHeight={GRID_ROW_HEIGHT} width={width} compactType={GRID_COMPACT_TYPE} isDraggable={false} isResizable={false} draggableCancel=\"input,textarea\">\n                    {this.getItemComponents(dashboardItems)}\n                </ReactGridLayout>\n            </div>;\n  }\n\n}\nPrintLayoutItemGrid.propTypes = {\n  dashboardItems: PropTypes.array,\n  isEditing: PropTypes.bool,\n  isLoading: PropTypes.bool,\n  updateDashboardLayout: PropTypes.func\n};\nPrintLayoutItemGrid.defaultProps = {\n  dashboardItems: []\n};\n\nconst mapStateToProps = state => {\n  const selectedDashboard = sGetPrintDashboardRoot(state);\n  return {\n    isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n    dashboardItems: sGetPrintDashboardItems(state).filter(hasShape),\n    isEditing: sGetIsEditing(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  updateDashboardLayout: acUpdatePrintDashboardLayout\n})(PrintLayoutItemGrid);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { spacers } from '@dhis2/ui';\nimport cx from 'classnames';\nimport PrintInfo from './PrintInfo';\nimport PrintActionsBar from './PrintActionsBar';\nimport PrintLayoutItemGrid from '../ItemGrid/PrintLayoutItemGrid';\nimport { acSetPrintDashboard, acAddPrintDashboardItem, acUpdatePrintDashboardItem } from '../../actions/printDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { sGetWindowHeight } from '../../reducers/windowHeight';\nimport { sGetEditDashboardRoot, sGetEditDashboardItems } from '../../reducers/editDashboard';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport { PAGEBREAK, PRINT_TITLE_PAGE } from '../../modules/itemTypes';\nimport { a4LandscapeWidthPx, MAX_ITEM_GRID_HEIGHT } from '../ItemGrid/gridUtil';\nimport { getControlBarHeight, HEADERBAR_HEIGHT } from '../ControlBar/controlBarDimensions';\nimport { PRINT_ACTIONS_BAR_HEIGHT } from './PrintActionsBar';\nimport { DRAG_HANDLE_HEIGHT } from '../ControlBar/ControlBar';\nimport classes from './styles/PrintLayoutDashboard.module.css';\nimport './styles/print.css';\nimport './styles/print-layout.css';\nconst EDIT_BAR_HEIGHT = getControlBarHeight(1) + DRAG_HANDLE_HEIGHT;\n\nconst isLeapPage = n => {\n  // pages 5,9,13,17,21,25,29... are leap pages\n  let x = 0;\n  const startPage = 1;\n\n  const getMultiple = factor => startPage + 4 * factor;\n\n  let multiple = getMultiple(0);\n  let isLeapPage = false;\n\n  while (multiple < n) {\n    multiple = getMultiple(x);\n    ++x;\n\n    if (multiple === n) {\n      isLeapPage = true;\n      break;\n    }\n  }\n\n  return isLeapPage;\n};\n\nconst addPageBreaks = ({\n  items,\n  addDashboardItem\n}) => {\n  // add enough page breaks so that each item could\n  // be put on its own page. Due to the react-grid-layout\n  // unit system, we have to estimate roughly the size of each\n  // page. At regular intervals add a unit, like a leap year\n  let yPos = 0;\n  const yPosList = [];\n\n  for (let pageNum = 1; pageNum <= items.length; ++pageNum) {\n    if (pageNum === 1) {\n      yPos += 35;\n    } else if (isLeapPage(pageNum)) {\n      yPos += 40;\n    } else {\n      yPos += 39;\n    }\n\n    yPosList.push(yPos);\n  }\n\n  for (let i = 0; i < items.length; ++i) {\n    addDashboardItem({\n      type: PAGEBREAK,\n      yPos: yPosList[i]\n    });\n  }\n};\n\nexport class PrintLayoutDashboard extends Component {\n  state = {\n    initialized: false\n  };\n  initPrintLayoutDashboard = () => {\n    if (this.props.dashboard) {\n      this.setState({\n        initialized: true\n      });\n      this.props.setPrintDashboard(this.props.dashboard, this.props.items); // If any items are taller than one page, reduce it to one\n      // page (react-grid-layout units)\n\n      this.props.items.forEach(item => {\n        if (item.h > MAX_ITEM_GRID_HEIGHT) {\n          item.shortened = true;\n          this.props.updateDashboardItem(Object.assign({}, item, {\n            h: MAX_ITEM_GRID_HEIGHT\n          }));\n        }\n      });\n      addPageBreaks(this.props);\n      this.props.addDashboardItem({\n        type: PRINT_TITLE_PAGE,\n        isOneItemPerPage: false\n      });\n    }\n  };\n\n  componentDidMount() {\n    this.initPrintLayoutDashboard();\n  }\n\n  componentDidUpdate() {\n    if (!this.state.initialized) {\n      this.initPrintLayoutDashboard();\n    }\n  }\n\n  getWrapperStyle = () => {\n    return this.props.fromEdit ? {\n      paddingTop: spacers.dp24,\n      height: this.props.windowHeight - EDIT_BAR_HEIGHT - HEADERBAR_HEIGHT\n    } : {\n      height: this.props.windowHeight - PRINT_ACTIONS_BAR_HEIGHT\n    };\n  };\n\n  render() {\n    return <>\n                {!this.props.fromEdit && <PrintActionsBar id={this.props.dashboard.id} />}\n                <div className={cx(classes.wrapper, 'scroll-area')} style={this.getWrapperStyle()}>\n                    {!this.props.fromEdit && <PrintInfo isLayout={true} />}\n                    <div className={classes.pageOuter} style={{\n          width: a4LandscapeWidthPx\n        }} data-test=\"print-layout-page\">\n                        <PrintLayoutItemGrid />\n                    </div>\n                </div>\n            </>;\n  }\n\n}\nPrintLayoutDashboard.propTypes = {\n  addDashboardItem: PropTypes.func,\n  dashboard: PropTypes.object,\n  fromEdit: PropTypes.bool,\n  items: PropTypes.array,\n  setPrintDashboard: PropTypes.func,\n  updateDashboardItem: PropTypes.func,\n  windowHeight: PropTypes.number\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const id = sGetSelectedId(state);\n\n  if (ownProps.fromEdit) {\n    const dashboard = sGetEditDashboardRoot(state);\n    return {\n      dashboard,\n      id,\n      items: sGetEditDashboardItems(state),\n      windowHeight: sGetWindowHeight(state)\n    };\n  }\n\n  const dashboard = id ? sGetDashboardById(state, id) : null;\n  return {\n    dashboard,\n    id,\n    items: sGetDashboardItems(state),\n    windowHeight: sGetWindowHeight(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setPrintDashboard: acSetPrintDashboard,\n  addDashboardItem: acAddPrintDashboardItem,\n  updateDashboardItem: acUpdatePrintDashboardItem\n})(PrintLayoutDashboard);","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport { NoticeBox, CenteredContent } from '@dhis2/ui';\nimport TitleBar from '../TitleBar/TitleBar';\nimport ItemGrid from '../ItemGrid/ItemGrid';\nimport EditBar from '../ControlBar/EditBar';\nimport { useWindowDimensions } from '../WindowDimensionsProvider';\nimport LayoutPrintPreview from './PrintLayoutDashboard';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport { acSetEditDashboard } from '../../actions/editDashboard';\nimport { sGetWindowHeight } from '../../reducers/windowHeight';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport { sGetIsPrintPreviewView } from '../../reducers/editDashboard';\nimport { getControlBarHeight, HEADERBAR_HEIGHT } from '../ControlBar/controlBarDimensions';\nimport isSmallScreen from '../../modules/isSmallScreen';\n\nconst EditDashboard = props => {\n  const {\n    width\n  } = useWindowDimensions();\n  useEffect(() => {\n    if (props.dashboard) {\n      props.setEditDashboard(props.dashboard, props.items);\n    }\n  }, [props.dashboard]);\n\n  const renderGrid = () => {\n    if (props.isPrintPreviewView) {\n      return <LayoutPrintPreview fromEdit={true} />;\n    }\n\n    const height = props.windowHeight - HEADERBAR_HEIGHT - getControlBarHeight(1);\n    return <div className=\"dashboard-wrapper\" style={{\n      height\n    }}>\n                <TitleBar edit={true} />\n                <ItemGrid edit={true} />\n            </div>;\n  };\n\n  const renderEditView = () => <>\n            <EditBar />\n            {props.updateAccess ? renderGrid() : <NoContentMessage text={i18n.t('No access')} />}\n        </>;\n\n  return <>\n            {isSmallScreen(width) ? <CenteredContent position=\"top\">\n                    <NoticeBox title={i18n.t('Not supported')} warning>\n                        {i18n.t('Editing dashboards on small screens is not supported.')}\n                    </NoticeBox>\n                </CenteredContent> : renderEditView()}\n        </>;\n};\n\nEditDashboard.propTypes = {\n  dashboard: PropTypes.object,\n  isPrintPreviewView: PropTypes.bool,\n  items: PropTypes.array,\n  setEditDashboard: PropTypes.func,\n  updateAccess: PropTypes.bool,\n  windowHeight: PropTypes.number\n};\n\nconst mapStateToProps = state => {\n  const id = sGetSelectedId(state);\n  const dashboard = id ? sGetDashboardById(state, id) : null;\n  const updateAccess = dashboard && dashboard.access ? dashboard.access.update : false;\n  return {\n    dashboard,\n    updateAccess,\n    items: sGetDashboardItems(state),\n    isPrintPreviewView: sGetIsPrintPreviewView(state),\n    windowHeight: sGetWindowHeight(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setEditDashboard: acSetEditDashboard\n})(EditDashboard);","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { NoticeBox, CenteredContent } from '@dhis2/ui';\nimport EditBar from '../ControlBar/EditBar';\nimport TitleBar from '../TitleBar/TitleBar';\nimport ItemGrid from '../ItemGrid/ItemGrid';\nimport LayoutPrintPreview from './PrintLayoutDashboard';\nimport { acSetEditNewDashboard } from '../../actions/editDashboard';\nimport { sGetIsPrintPreviewView } from '../../reducers/editDashboard';\nimport { sGetWindowHeight } from '../../reducers/windowHeight';\nimport { getControlBarHeight, HEADERBAR_HEIGHT } from '../ControlBar/controlBarDimensions';\nimport { useWindowDimensions } from '../WindowDimensionsProvider';\nimport isSmallScreen from '../../modules/isSmallScreen';\n\nconst NewDashboard = props => {\n  const {\n    width\n  } = useWindowDimensions();\n  useEffect(() => {\n    props.setNewDashboard();\n  }, []);\n  const height = props.windowHeight - HEADERBAR_HEIGHT - getControlBarHeight(1);\n\n  const renderNewView = () => <>\n            <EditBar />\n            {props.isPrintPreviewView ? <LayoutPrintPreview fromEdit={true} /> : <div className=\"dashboard-wrapper\" style={{\n      height\n    }}>\n                    <TitleBar edit={true} />\n                    <ItemGrid edit={true} />\n                </div>}\n        </>;\n\n  return <>\n            {isSmallScreen(width) ? <CenteredContent position=\"top\">\n                    <NoticeBox title={i18n.t('Not supported')} warning>\n                        {i18n.t('Creating dashboards on small screens is not supported.')}\n                    </NoticeBox>\n                </CenteredContent> : renderNewView()}\n        </>;\n};\n\nNewDashboard.propTypes = {\n  isPrintPreviewView: PropTypes.bool,\n  setNewDashboard: PropTypes.func,\n  windowHeight: PropTypes.number\n};\n\nconst mapStateToProps = state => ({\n  isPrintPreviewView: sGetIsPrintPreviewView(state),\n  windowHeight: sGetWindowHeight(state)\n});\n\nexport default connect(mapStateToProps, {\n  setNewDashboard: acSetEditNewDashboard\n})(NewDashboard);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ReactGridLayout from 'react-grid-layout';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport cx from 'classnames';\nimport { Item } from '../Item/Item';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport { PRINT } from '../Dashboard/dashboardModes';\nimport { sGetSelectedIsLoading } from '../../reducers/selected';\nimport { sGetPrintDashboardRoot, sGetPrintDashboardItems } from '../../reducers/printDashboard';\nimport { GRID_ROW_HEIGHT, GRID_COMPACT_TYPE, MARGIN, getGridColumns, hasShape, a4LandscapeWidthPx } from './gridUtil';\nimport { orArray } from '../../modules/util';\nimport 'react-grid-layout/css/styles.css';\nimport './ItemGrid.css';\nexport class PrintItemGrid extends Component {\n  getItemComponent = item => <div key={item.i} className={cx(item.type, 'print', 'oipp')}>\n            <Item item={item} dashboardMode={PRINT} />\n        </div>;\n  getItemComponents = items => items.map(item => this.getItemComponent(item));\n\n  render() {\n    const {\n      isLoading,\n      dashboardItems\n    } = this.props;\n\n    if (!isLoading && !dashboardItems.length) {\n      return <NoContentMessage text={i18n.t('There are no items on this dashboard')} />;\n    }\n\n    const width = a4LandscapeWidthPx < window.innerWidth ? a4LandscapeWidthPx : window.innerWidth;\n    return <>\n                {isLoading ? <Layer translucent>\n                        <CenteredContent>\n                            <CircularLoader />\n                        </CenteredContent>\n                    </Layer> : null}\n                <ReactGridLayout className=\"layout print\" layout={dashboardItems} margin={MARGIN} cols={getGridColumns()} rowHeight={GRID_ROW_HEIGHT} width={width} compactType={GRID_COMPACT_TYPE} isDraggable={false} isResizable={false} draggableCancel=\"input,textarea\">\n                    {this.getItemComponents(dashboardItems)}\n                </ReactGridLayout>\n            </>;\n  }\n\n}\nPrintItemGrid.propTypes = {\n  dashboardItems: PropTypes.array,\n  isLoading: PropTypes.bool\n};\nPrintItemGrid.defaultProps = {\n  dashboardItems: []\n};\n\nconst mapStateToProps = state => {\n  const selectedDashboard = sGetPrintDashboardRoot(state);\n  return {\n    isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n    dashboardItems: orArray(sGetPrintDashboardItems(state)).filter(hasShape)\n  };\n};\n\nexport default connect(mapStateToProps)(PrintItemGrid);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport sortBy from 'lodash/sortBy';\nimport PrintInfo from './PrintInfo';\nimport PrintActionsBar from './PrintActionsBar';\nimport PrintItemGrid from '../ItemGrid/PrintItemGrid';\nimport { acSetPrintDashboard, acAddPrintDashboardItem, acRemovePrintDashboardItem, acUpdatePrintDashboardItem } from '../../actions/printDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { sGetWindowHeight } from '../../reducers/windowHeight';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport { PAGEBREAK, PRINT_TITLE_PAGE, SPACER } from '../../modules/itemTypes';\nimport { a4LandscapeWidthPx, MAX_ITEM_GRID_HEIGHT_OIPP, MAX_ITEM_GRID_WIDTH_OIPP } from '../ItemGrid/gridUtil';\nimport { PRINT_ACTIONS_BAR_HEIGHT } from './PrintActionsBar';\nimport classes from './styles/PrintDashboard.module.css';\nimport './styles/print.css';\nimport './styles/print-oipp.css';\nexport class PrintDashboard extends Component {\n  state = {\n    initialized: false\n  };\n  initPrintDashboard = () => {\n    if (this.props.dashboard) {\n      this.setState({\n        initialized: true\n      }); //sort the items by Y pos so they print in order of top to bottom\n\n      const sortedItems = sortBy(this.props.items, ['y', 'x']);\n      this.props.setPrintDashboard(this.props.dashboard, sortedItems); // remove spacers - don't want empty pages\n\n      let spacerCount = 0;\n      this.props.items.forEach(item => {\n        if (item.type === SPACER) {\n          spacerCount += 1;\n          this.props.removeDashboardItem(item.id);\n        }\n      }); // Resize the items to the full page size\n\n      this.props.items.forEach(item => {\n        this.props.updateDashboardItem(Object.assign({}, item, {\n          w: MAX_ITEM_GRID_WIDTH_OIPP,\n          h: MAX_ITEM_GRID_HEIGHT_OIPP\n        }));\n      }); // insert page breaks into the document flow to create the \"pages\"\n      // when previewing the print\n\n      for (let i = 0; i < (this.props.items.length - spacerCount) * 2; i += 2) {\n        this.props.addDashboardItem({\n          type: PAGEBREAK,\n          position: i,\n          isStatic: false\n        });\n      }\n\n      this.props.addDashboardItem({\n        type: PRINT_TITLE_PAGE,\n        isOneItemPerPage: true\n      });\n    }\n  };\n\n  componentDidMount() {\n    this.initPrintDashboard();\n  }\n\n  componentDidUpdate() {\n    if (!this.state.initialized) {\n      this.initPrintDashboard();\n    }\n  }\n\n  render() {\n    const height = this.props.windowHeight - PRINT_ACTIONS_BAR_HEIGHT;\n    return <>\n                <PrintActionsBar id={this.props.dashboard.id} />\n                <div className={classes.wrapper} style={{\n        height\n      }}>\n                    <PrintInfo isLayout={false} />\n                    <div className={classes.pageOuter} style={{\n          width: a4LandscapeWidthPx\n        }} data-test=\"print-oipp-page\">\n                        <PrintItemGrid />\n                    </div>\n                </div>\n            </>;\n  }\n\n}\nPrintDashboard.propTypes = {\n  addDashboardItem: PropTypes.func,\n  dashboard: PropTypes.object,\n  items: PropTypes.array,\n  removeDashboardItem: PropTypes.func,\n  setPrintDashboard: PropTypes.func,\n  updateDashboardItem: PropTypes.func,\n  windowHeight: PropTypes.number\n};\n\nconst mapStateToProps = state => {\n  const id = sGetSelectedId(state);\n  const dashboard = id ? sGetDashboardById(state, id) : null;\n  return {\n    dashboard,\n    id,\n    items: sGetDashboardItems(state),\n    windowHeight: sGetWindowHeight(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setPrintDashboard: acSetPrintDashboard,\n  addDashboardItem: acAddPrintDashboardItem,\n  removeDashboardItem: acRemovePrintDashboardItem,\n  updateDashboardItem: acUpdatePrintDashboardItem\n})(PrintDashboard);","import { SET_WINDOW_HEIGHT } from '../reducers/windowHeight';\nexport const acSetWindowHeight = value => ({\n  type: SET_WINDOW_HEIGHT,\n  value\n});","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport isEmpty from 'lodash/isEmpty';\nimport i18n from '@dhis2/d2-i18n';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport debounce from 'lodash/debounce';\nimport DashboardsBar from '../ControlBar/DashboardsBar';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport ViewDashboard from './ViewDashboard';\nimport EditDashboard from './EditDashboard';\nimport NewDashboard from './NewDashboard';\nimport PrintDashboard from './PrintDashboard';\nimport PrintLayoutDashboard from './PrintLayoutDashboard';\nimport { tSelectDashboard } from '../../actions/dashboards';\nimport { acSetWindowHeight } from '../../actions/windowHeight';\nimport { sDashboardsIsFetching, sGetAllDashboards } from '../../reducers/dashboards';\nimport { sGetSelectedId, NON_EXISTING_DASHBOARD_ID } from '../../reducers/selected';\nimport { EDIT, NEW, VIEW, PRINT, PRINT_LAYOUT, isPrintMode } from './dashboardModes';\n\nconst setHeaderbarVisibility = mode => {\n  const header = document.getElementsByTagName('header')[0];\n\n  if (isPrintMode(mode)) {\n    header.classList.add('hidden');\n  } else {\n    header.classList.remove('hidden');\n  }\n};\n\nconst dashboardMap = {\n  [VIEW]: <ViewDashboard />,\n  [EDIT]: <EditDashboard />,\n  [NEW]: <NewDashboard />,\n  [PRINT]: <PrintDashboard />,\n  [PRINT_LAYOUT]: <PrintLayoutDashboard />\n};\nexport const Dashboard = ({\n  id,\n  mode,\n  dashboardsLoaded,\n  dashboardsIsEmpty,\n  routeId,\n  selectDashboard,\n  setWindowHeight\n}) => {\n  useEffect(() => {\n    setHeaderbarVisibility(mode);\n  }, [mode]);\n  useEffect(() => {\n    if (dashboardsLoaded && !dashboardsIsEmpty) {\n      selectDashboard(routeId);\n    }\n  }, [dashboardsLoaded, dashboardsIsEmpty, routeId]);\n  useEffect(() => {\n    const onResize = debounce(() => setWindowHeight(window.innerHeight), 300);\n    window.addEventListener('resize', onResize);\n    return () => {\n      window.removeEventListener('resize', onResize);\n    };\n  }, []);\n\n  if (!dashboardsLoaded) {\n    return <Layer translucent>\n                <CenteredContent>\n                    <CircularLoader />\n                </CenteredContent>\n            </Layer>;\n  }\n\n  if (mode === NEW) {\n    return dashboardMap[mode];\n  }\n\n  if (dashboardsIsEmpty) {\n    return <>\n                <DashboardsBar />\n                <NoContentMessage text={i18n.t('No dashboards found. Use the + button to create a new dashboard.')} />\n            </>;\n  }\n\n  if (id === NON_EXISTING_DASHBOARD_ID) {\n    return <>\n                <DashboardsBar />\n                <NoContentMessage text={i18n.t('Requested dashboard not found')} />\n            </>;\n  }\n\n  if (id === null) {\n    return <Layer translucent>\n                <CenteredContent>\n                    <CircularLoader />\n                </CenteredContent>\n            </Layer>;\n  }\n\n  return dashboardMap[mode];\n};\nDashboard.propTypes = {\n  dashboardsIsEmpty: PropTypes.bool,\n  dashboardsLoaded: PropTypes.bool,\n  id: PropTypes.string,\n  match: PropTypes.object,\n  // provided by the react-router-dom\n  mode: PropTypes.string,\n  routeId: PropTypes.string,\n  selectDashboard: PropTypes.func,\n  setWindowHeight: PropTypes.func\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const dashboards = sGetAllDashboards(state);\n  return {\n    dashboardsIsEmpty: isEmpty(dashboards),\n    dashboardsLoaded: !sDashboardsIsFetching(state),\n    id: sGetSelectedId(state),\n    routeId: ownProps.match?.params?.dashboardId || null\n  };\n};\n\nexport default connect(mapStateToProps, {\n  selectDashboard: tSelectDashboard,\n  setWindowHeight: acSetWindowHeight\n})(Dashboard);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { AlertBar, AlertStack } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport { sGetAlertMessage } from '../../reducers/alert';\nimport { acClearAlertMessage } from '../../actions/alert';\nexport const Alert = ({\n  message,\n  onClose\n}) => message ? <AlertStack>\n            <AlertBar onHidden={onClose} permanent>\n                {message}\n            </AlertBar>\n        </AlertStack> : null;\nAlert.propTypes = {\n  message: PropTypes.string,\n  onClose: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  message: sGetAlertMessage(state)\n});\n\nexport default connect(mapStateToProps, {\n  onClose: acClearAlertMessage\n})(Alert);","import { RECEIVED_USER } from '../reducers/user';\nexport const acReceivedUser = value => ({\n  type: RECEIVED_USER,\n  value\n});","import { SET_DIMENSIONS } from '../reducers/dimensions';\nimport { apiFetchDimensions } from '@dhis2/analytics';\nimport { sGetSettingsDisplayNameProperty } from '../reducers/settings';\nexport const acSetDimensions = dimensions => ({\n  type: SET_DIMENSIONS,\n  value: dimensions\n});\nexport const tSetDimensions = d2 => async (dispatch, getState) => {\n  const onSuccess = dimensions => {\n    dispatch(acSetDimensions(dimensions));\n  };\n\n  const onError = error => {\n    console.log('Error (apiFetchDimensions): ', error);\n    return error;\n  };\n\n  try {\n    const displayNameProp = sGetSettingsDisplayNameProperty(getState());\n    const dimensions = await apiFetchDimensions(d2, displayNameProp); // filter out CATEGORY that are not of type ATTRIBUTE\n\n    const filteredDimensions = dimensions.filter(dim => dim.dimensionType !== 'CATEGORY' || dim.dimensionType === 'CATEGORY' && dim.dataDimensionType === 'ATTRIBUTE');\n    return onSuccess(filteredDimensions);\n  } catch (err) {\n    return onError(err);\n  }\n};","import { getInstance } from 'd2';\nimport { onError } from './index';\nconst SYSTEM_SETTINGS = ['keyGatherAnalyticalObjectStatisticsInDashboardViews'];\nexport const apiFetchSystemSettings = () => {\n  const endPoint = '/systemSettings';\n  const url = `${endPoint}?${SYSTEM_SETTINGS.map(s => `key=${s}`).join('&')}`;\n  return getInstance().then(d2 => d2.Api.getApi().get(url)).catch(onError);\n};","import { ADD_SETTINGS } from '../reducers/settings';\nimport { apiFetchSystemSettings } from '../api/settings';\nexport const acAddSettings = value => ({\n  type: ADD_SETTINGS,\n  value\n});\nexport const tAddSettings = (...extraSettings) => async dispatch => {\n  const onSuccess = fetchedSettings => {\n    dispatch(acAddSettings(Object.assign({}, fetchedSettings, ...extraSettings)));\n  };\n\n  const onError = error => {\n    console.log('Error (apiFetchSystemSettings): ', error);\n    return error;\n  };\n\n  try {\n    const systemSettings = await apiFetchSystemSettings();\n    return onSuccess({ ...systemSettings\n    });\n  } catch (err) {\n    return onError(err);\n  }\n};","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { CssVariables } from '@dhis2/ui';\nimport Dashboard from './Dashboard/Dashboard';\nimport AlertBar from './AlertBar/AlertBar';\nimport { acReceivedUser } from '../actions/user';\nimport { tFetchDashboards } from '../actions/dashboards';\nimport { tSetControlBarRows } from '../actions/controlBar';\nimport { tSetShowDescription } from '../actions/selected';\nimport { tSetDimensions } from '../actions/dimensions';\nimport { tAddSettings } from '../actions/settings';\nimport { EDIT, VIEW, NEW, PRINT, PRINT_LAYOUT } from './Dashboard/dashboardModes';\nimport './App.css';\nexport class App extends Component {\n  componentDidMount() {\n    this.props.setCurrentUser(this.props.d2.currentUser);\n    this.props.fetchDashboards();\n    this.props.setControlBarRows();\n    this.props.setShowDescription();\n    this.props.setDimensions(this.props.d2);\n    this.props.addSettings();\n  }\n\n  getChildContext() {\n    return {\n      baseUrl: this.props.baseUrl,\n      i18n,\n      d2: this.props.d2\n    };\n  }\n\n  render() {\n    return <>\n                <CssVariables colors spacers />\n                <Router>\n                    <Switch>\n                        <Route exact path=\"/\" render={props => <Dashboard {...props} mode={VIEW} />} />\n                        <Route exact path=\"/new\" render={props => <Dashboard {...props} mode={NEW} />} />\n                        <Route exact path=\"/:dashboardId\" render={props => <Dashboard {...props} mode={VIEW} />} />\n                        <Route exact path=\"/:dashboardId/edit\" render={props => <Dashboard {...props} mode={EDIT} />} />\n                        <Route exact path=\"/:dashboardId/printoipp\" render={props => <Dashboard {...props} mode={PRINT} />} />\n                        <Route exact path=\"/:dashboardId/printlayout\" render={props => <Dashboard {...props} mode={PRINT_LAYOUT} />} />\n                    </Switch>\n                </Router>\n                <AlertBar />\n            </>;\n  }\n\n}\nApp.propTypes = {\n  addSettings: PropTypes.func.isRequired,\n  fetchDashboards: PropTypes.func.isRequired,\n  setControlBarRows: PropTypes.func.isRequired,\n  setCurrentUser: PropTypes.func.isRequired,\n  setDimensions: PropTypes.func.isRequired,\n  setShowDescription: PropTypes.func.isRequired,\n  baseUrl: PropTypes.string,\n  d2: PropTypes.object\n};\nApp.childContextTypes = {\n  baseUrl: PropTypes.string,\n  i18n: PropTypes.object,\n  d2: PropTypes.object\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchDashboards: () => dispatch(tFetchDashboards()),\n    setControlBarRows: () => dispatch(tSetControlBarRows()),\n    setCurrentUser: currentUser => dispatch(acReceivedUser(currentUser)),\n    setDimensions: d2 => dispatch(tSetDimensions(d2)),\n    setShowDescription: () => dispatch(tSetShowDescription()),\n    addSettings: () => dispatch(tAddSettings())\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(App);","/** @module reducers/selected */\nimport { validateReducer } from '../modules/util';\nexport const SET_STYLE = 'SET_STYLE';\nexport const DEFAULT_STATE_STYLE = 'LIST';\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\n\nconst style = (state = DEFAULT_STATE_STYLE, action) => {\n  switch (action.type) {\n    case SET_STYLE:\n      return validateReducer(action.value, DEFAULT_STATE_STYLE);\n\n    default:\n      return state;\n  }\n};\n\nexport default style;\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\n\nexport const sGetStyleRoot = state => state.style;","import { combineReducers } from 'redux';\nimport dashboards from './dashboards';\nimport selected from './selected';\nimport dashboardsFilter from './dashboardsFilter';\nimport controlBar from './controlBar';\nimport visualizations from './visualizations';\nimport editDashboard from './editDashboard';\nimport printDashboard from './printDashboard';\nimport messages from './messages';\nimport user from './user';\nimport alert from './alert';\nimport itemFilters from './itemFilters';\nimport style from './style';\nimport dimensions from './dimensions';\nimport settings from './settings';\nimport activeModalDimension from './activeModalDimension';\nimport windowHeight from './windowHeight';\nexport default combineReducers({\n  dashboards,\n  selected,\n  dashboardsFilter,\n  controlBar,\n  visualizations,\n  messages,\n  user,\n  editDashboard,\n  printDashboard,\n  itemFilters,\n  style,\n  alert,\n  dimensions,\n  settings,\n  activeModalDimension,\n  windowHeight\n});","import { createStore, applyMiddleware, compose } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport reducer from './reducers';\n\nconst configureStore = () => {\n  const middleware = [thunk]; // Enable Redux devtools if extension is installed instead of redux-logger\n\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n  if (!window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ && process.env.NODE_ENV !== 'production') {\n    middleware.push(createLogger());\n  }\n\n  return createStore(reducer, composeEnhancers(applyMiddleware(...middleware)));\n};\n\nexport default configureStore;","//------------------------------------------------------------------------------\n// <auto-generated>\n// This code was generated by d2-i18n-generate.\n//\n// Changes to this file may cause incorrect behavior and will be lost if\n// the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\nimport i18n from '@dhis2/d2-i18n';\nimport arTranslations from './ar/translations.json';\nimport ar_IQTranslations from './ar_IQ/translations.json';\nimport ckbTranslations from './ckb/translations.json';\nimport csTranslations from './cs/translations.json';\nimport daTranslations from './da/translations.json';\nimport enTranslations from './en/translations.json';\nimport esTranslations from './es/translations.json';\nimport frTranslations from './fr/translations.json';\nimport idTranslations from './id/translations.json';\nimport kmTranslations from './km/translations.json';\nimport loTranslations from './lo/translations.json';\nimport myTranslations from './my/translations.json';\nimport nbTranslations from './nb/translations.json';\nimport prsTranslations from './prs/translations.json';\nimport psTranslations from './ps/translations.json';\nimport ptTranslations from './pt/translations.json';\nimport pt_BRTranslations from './pt_BR/translations.json';\nimport ruTranslations from './ru/translations.json';\nimport svTranslations from './sv/translations.json';\nimport tetTranslations from './tet/translations.json';\nimport tgTranslations from './tg/translations.json';\nimport ukTranslations from './uk/translations.json';\nimport urTranslations from './ur/translations.json';\nimport uzTranslations from './uz/translations.json';\nimport uz_CyrlTranslations from './uz_Cyrl/translations.json';\nimport viTranslations from './vi/translations.json';\nimport zhTranslations from './zh/translations.json';\nimport zh_CNTranslations from './zh_CN/translations.json';\nconst namespace = 'default';\ni18n.addResources('ar', namespace, arTranslations);\ni18n.addResources('ar_IQ', namespace, ar_IQTranslations);\ni18n.addResources('ckb', namespace, ckbTranslations);\ni18n.addResources('cs', namespace, csTranslations);\ni18n.addResources('da', namespace, daTranslations);\ni18n.addResources('en', namespace, enTranslations);\ni18n.addResources('es', namespace, esTranslations);\ni18n.addResources('fr', namespace, frTranslations);\ni18n.addResources('id', namespace, idTranslations);\ni18n.addResources('km', namespace, kmTranslations);\ni18n.addResources('lo', namespace, loTranslations);\ni18n.addResources('my', namespace, myTranslations);\ni18n.addResources('nb', namespace, nbTranslations);\ni18n.addResources('prs', namespace, prsTranslations);\ni18n.addResources('ps', namespace, psTranslations);\ni18n.addResources('pt', namespace, ptTranslations);\ni18n.addResources('pt_BR', namespace, pt_BRTranslations);\ni18n.addResources('ru', namespace, ruTranslations);\ni18n.addResources('sv', namespace, svTranslations);\ni18n.addResources('tet', namespace, tetTranslations);\ni18n.addResources('tg', namespace, tgTranslations);\ni18n.addResources('uk', namespace, ukTranslations);\ni18n.addResources('ur', namespace, urTranslations);\ni18n.addResources('uz', namespace, uzTranslations);\ni18n.addResources('uz_Cyrl', namespace, uz_CyrlTranslations);\ni18n.addResources('vi', namespace, viTranslations);\ni18n.addResources('zh', namespace, zhTranslations);\ni18n.addResources('zh_CN', namespace, zh_CNTranslations);\nexport default i18n;","import React from 'react';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport dhis2theme from '@dhis2/d2-ui-core/theme/mui3.theme';\nimport { Provider as ReduxProvider } from 'react-redux';\nimport { D2Shim } from '@dhis2/app-runtime-adapter-d2';\nimport WindowDimensionsProvider from './components/WindowDimensionsProvider';\nimport App from './components/App';\nimport configureStore from './configureStore';\nimport './AppWrapper.css';\nimport './locales';\n\nconst muiTheme = () => createMuiTheme(dhis2theme);\n\nconst d2Config = {\n  schemas: ['chart', 'map', 'report', 'reportTable', 'eventChart', 'eventReport', 'dashboard', 'organisationUnit', 'userGroup']\n}; // TODO: ER and EV plugins require the auth header in development mode.\n// Remove this when these plugins are rewritten\n\nconst authorization = process.env.REACT_APP_DHIS2_AUTHORIZATION || null;\n\nif (authorization) {\n  d2Config.headers = {\n    Authorization: authorization\n  };\n}\n\nconst AppWrapper = () => {\n  return <ReduxProvider store={configureStore()}>\n            <MuiThemeProvider theme={muiTheme()}>\n                <D2Shim d2Config={d2Config} i18nRoot=\"./i18n\">\n                    {({\n          d2\n        }) => {\n          if (!d2) {\n            // TODO: Handle errors in d2 initialization\n            return null;\n          }\n\n          return <WindowDimensionsProvider>\n                                <App d2={d2} />\n                            </WindowDimensionsProvider>;\n        }}\n                </D2Shim>\n            </MuiThemeProvider>\n        </ReduxProvider>;\n};\n\nexport default AppWrapper;","import i18n from '@dhis2/d2-i18n';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\nimport ExtensionIcon from '@material-ui/icons/Extension';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport PersonIcon from '@material-ui/icons/Person';\nimport FontDownloadIcon from '@material-ui/icons/FontDownload';\nimport EmailIcon from '@material-ui/icons/Email';\nimport CropFreeIcon from '@material-ui/icons/CropFree';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\nimport { getBaseUrl } from './util'; // Item types\n\nexport const VISUALIZATION = 'VISUALIZATION';\nexport const REPORT_TABLE = 'REPORT_TABLE';\nexport const CHART = 'CHART';\nexport const MAP = 'MAP';\nexport const EVENT_REPORT = 'EVENT_REPORT';\nexport const EVENT_CHART = 'EVENT_CHART';\nexport const APP = 'APP';\nexport const REPORTS = 'REPORTS';\nexport const RESOURCES = 'RESOURCES';\nexport const USERS = 'USERS';\nexport const MESSAGES = 'MESSAGES';\nexport const TEXT = 'TEXT';\nexport const SPACER = 'SPACER';\nexport const PAGEBREAK = 'PAGEBREAK';\nexport const PRINT_TITLE_PAGE = 'PRINT_TITLE_PAGE';\nconst DOMAIN_TYPE_AGGREGATE = 'AGGREGATE';\nconst DOMAIN_TYPE_TRACKER = 'TRACKER'; // Dashboard helpers\n\nexport const isVisualizationType = item => !!itemTypeMap[item.type].isVisualizationType;\nexport const hasMapView = itemType => itemTypeMap[itemType].domainType === DOMAIN_TYPE_AGGREGATE;\nexport const isTrackerDomainType = itemType => itemTypeMap[itemType].domainType === DOMAIN_TYPE_TRACKER;\nexport const getDefaultItemCount = itemType => itemTypeMap[itemType].defaultItemCount || 5;\nexport const getAppName = itemType => itemTypeMap[itemType].appName || ''; // Item type map\n\nexport const itemTypeMap = {\n  [VISUALIZATION]: {\n    id: VISUALIZATION,\n    endPointName: 'visualizations',\n    propName: 'visualization',\n    pluralTitle: i18n.t('Visualizations'),\n    appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n    appName: 'Data Visualizer',\n    defaultItemCount: 10\n  },\n  [REPORT_TABLE]: {\n    id: REPORT_TABLE,\n    endPointName: 'visualizations',\n    dataStatisticsName: 'REPORT_TABLE_VIEW',\n    propName: 'visualization',\n    pluralTitle: i18n.t('Pivot tables'),\n    domainType: DOMAIN_TYPE_AGGREGATE,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n    appName: 'Data Visualizer'\n  },\n  [CHART]: {\n    id: CHART,\n    endPointName: 'visualizations',\n    propName: 'visualization',\n    dataStatisticsName: 'CHART_VIEW',\n    pluralTitle: i18n.t('Charts'),\n    domainType: DOMAIN_TYPE_AGGREGATE,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n    appName: 'Data Visualizer'\n  },\n  [MAP]: {\n    id: MAP,\n    endPointName: 'maps',\n    dataStatisticsName: 'MAP_VIEW',\n    propName: 'map',\n    pluralTitle: i18n.t('Maps'),\n    domainType: DOMAIN_TYPE_AGGREGATE,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-maps/?id=${id}`,\n    appName: 'Maps'\n  },\n  [EVENT_REPORT]: {\n    id: EVENT_REPORT,\n    endPointName: 'eventReports',\n    propName: 'eventReport',\n    pluralTitle: i18n.t('Event reports'),\n    domainType: DOMAIN_TYPE_TRACKER,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-event-reports/?id=${id}`,\n    appName: 'Event Reports'\n  },\n  [EVENT_CHART]: {\n    id: EVENT_CHART,\n    endPointName: 'eventCharts',\n    propName: 'eventChart',\n    pluralTitle: i18n.t('Event charts'),\n    domainType: DOMAIN_TYPE_TRACKER,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-event-visualizer/?id=${id}`,\n    appName: 'Event Visualizer'\n  },\n  [APP]: {\n    endPointName: 'apps',\n    propName: 'appKey',\n    pluralTitle: i18n.t('Apps')\n  },\n  [REPORTS]: {\n    id: REPORTS,\n    endPointName: 'reports',\n    propName: 'reports',\n    pluralTitle: i18n.t('Reports'),\n    appUrl: (id, type) => {\n      switch (type) {\n        case 'HTML':\n          return `dhis-web-reports/#/standard-report/view/${id}`;\n\n        case 'JASPER_REPORT_TABLE':\n        case 'JASPER_JDBC':\n        default:\n          return `api/reports/${id}/data.pdf?t=${new Date().getTime()}`;\n      }\n    }\n  },\n  [RESOURCES]: {\n    id: RESOURCES,\n    endPointName: 'resources',\n    propName: 'resources',\n    pluralTitle: i18n.t('Resources'),\n    appUrl: id => `api/documents/${id}/data`\n  },\n  [USERS]: {\n    id: USERS,\n    endPointName: 'users',\n    propName: 'users',\n    pluralTitle: i18n.t('Users'),\n    appUrl: id => `dhis-web-dashboard-integration/profile.action?id=${id}`\n  },\n  [TEXT]: {\n    id: TEXT,\n    propName: 'text'\n  },\n  [MESSAGES]: {\n    propName: 'messages'\n  },\n  [SPACER]: {\n    propName: 'text'\n  },\n  [PAGEBREAK]: {\n    propName: 'text'\n  },\n  [PRINT_TITLE_PAGE]: {\n    propName: 'text'\n  }\n};\nexport const getEndPointName = type => itemTypeMap[type].endPointName;\nexport const getDataStatisticsName = type => itemTypeMap[type].dataStatisticsName || null;\nexport const getItemUrl = (type, item, d2) => {\n  let url;\n\n  if (type === APP) {\n    url = item.launchUrl;\n  }\n\n  if (itemTypeMap[type] && itemTypeMap[type].appUrl) {\n    url = `${getBaseUrl(d2)}/${itemTypeMap[type].appUrl(item.id, item.type)}`;\n  }\n\n  return url;\n};\nexport const getItemIcon = type => {\n  switch (type) {\n    case REPORT_TABLE:\n    case EVENT_REPORT:\n    case REPORTS:\n      return TableIcon;\n\n    case CHART:\n    case EVENT_CHART:\n      return ChartIcon;\n\n    case MAP:\n      return MapIcon;\n\n    case APP:\n      return ExtensionIcon;\n\n    case RESOURCES:\n      return DescriptionIcon;\n\n    case USERS:\n      return PersonIcon;\n\n    case TEXT:\n      return FontDownloadIcon;\n\n    case MESSAGES:\n      return EmailIcon;\n\n    case SPACER:\n      return CropFreeIcon;\n\n    default:\n      return NotInterestedIcon;\n  }\n};","import isObject from 'lodash/isObject'; // validation\n\nexport function orNull(param) {\n  return param === undefined ? null : param;\n}\nexport function orArray(param) {\n  return Array.isArray(param) ? param : [];\n}\nexport function orObject(param) {\n  return isObject(param) ? param : {};\n} // array\n\nexport function arrayGetById(array, id) {\n  return array.find(item => item.id === id);\n} // object\n\nexport function arrayToIdMap(array) {\n  return array.reduce((obj, item) => {\n    obj[item.id] = item;\n    return obj;\n  }, {});\n} // date\n\nexport function getDate() {\n  const y = Math.floor(Math.random() * 3) + 2015;\n  const M = Math.floor(Math.random() * 12) + 1;\n  const d = Math.floor(Math.random() * 28) + 1; // const h = Math.floor(Math.random() * 23) + 1;\n  // const m = Math.floor(Math.random() * 59) + 1;\n  // const s = Math.floor(Math.random() * 59) + 1;\n\n  return new Date(`${y}-${M}-${d}`).toJSON().replace('T', ' ').substr(0, 10);\n}\nexport const formatDate = (value, uiLocale) => {\n  if (typeof global.Intl !== 'undefined' && Intl.DateTimeFormat) {\n    const locale = uiLocale || 'en';\n    return new Intl.DateTimeFormat(locale, {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    }).format(new Date(value));\n  }\n\n  return value.substr(0, 19).replace('T', ' ');\n};\n/**\n * Sorts an array of objects based on provided date property\n *\n * @param {Array} items Array of objects\n * @param {String} dateProp Name of the date property to be used for sorting\n * @param {Boolean} ascending Whether to sort ascending or descending\n */\n\nexport const sortByDate = (items, dateProp, ascending = true) => {\n  const values = Object.values(items);\n  values.sort((a, b) => {\n    const aDate = new Date(a[dateProp]);\n    const bDate = new Date(b[dateProp]);\n    return ascending ? aDate - bDate : bDate - aDate;\n  });\n  return values;\n}; // reducer validator\n\nexport const validateReducer = (value, defaultValue) => value === undefined || value === null ? defaultValue : value;\nexport const getBaseUrl = d2 => {\n  const api = d2.Api.getApi();\n  const idx = api.baseUrl.indexOf('/api');\n  return idx > -1 ? api.baseUrl.slice(0, idx) : api.baseUrl;\n};","import isFunction from 'd2-utilizr/lib/isFunction';\nimport { orObject } from '../../modules/util'; // Dimensions for the react-grid-layout\n\nexport const GRID_COMPACT_TYPE = 'vertical'; // vertical | horizonal | null\n\nexport const GRID_ROW_HEIGHT = 10;\nconst GRID_COLUMN_WIDTH_PX = 20;\nconst GRID_LAYOUT = 'FLEXIBLE'; // FIXED | FLEXIBLE\n\nexport const MARGIN = [10, 10];\nexport const NEW_ITEM_SHAPE = {\n  x: 0,\n  y: 0,\n  w: 20,\n  h: 29\n}; // Dimensions for getShape\n\nconst NUMBER_OF_ITEM_COLS = 2;\nconst GRID_COLUMNS = 60;\nconst MAX_ITEM_GRID_WIDTH = GRID_COLUMNS - 1;\nexport const MAX_ITEM_GRID_HEIGHT = 34;\nexport const MAX_ITEM_GRID_HEIGHT_OIPP = 35;\nexport const MAX_ITEM_GRID_WIDTH_OIPP = 56; // for A4 landscape (297x210mm)\n// 794 px = (21cm / 2.54) * 96 pixels/inch\n// 1122 px = 29.7 /2.54 * 96 pixels/inch\n// const a4LandscapeHeightPx = 794\n\nexport const a4LandscapeWidthPx = 1102;\nexport const getGridColumns = () => {\n  switch (GRID_LAYOUT) {\n    case 'FLEXIBLE':\n      return GRID_COLUMNS;\n\n    case 'FIXED':\n      return Math.floor((window.innerWidth - 20) / GRID_COLUMN_WIDTH_PX);\n\n    default:\n      return GRID_COLUMNS;\n  }\n}; // isNonNegativeInteger\n\nconst isNonNegativeInteger = x => Number.isInteger(x) && x >= 0; // Does the item have all the shape properties?\n\n\nexport const hasShape = item => isNonNegativeInteger(item.x) && isNonNegativeInteger(item.y) && isNonNegativeInteger(item.w) && isNonNegativeInteger(item.h); // returns a rectangular grid block dimensioned with x, y, w, h in grid units.\n// based on a grid with 3 items across\n\nexport const getShape = i => {\n  if (!isNonNegativeInteger(i)) {\n    throw new Error('Invalid grid block number');\n  }\n\n  const col = i % NUMBER_OF_ITEM_COLS;\n  const row = Math.floor(i / NUMBER_OF_ITEM_COLS);\n  const itemWidth = Math.floor(MAX_ITEM_GRID_WIDTH / NUMBER_OF_ITEM_COLS);\n  const itemHeight = GRID_ROW_HEIGHT * 2;\n  return {\n    x: col * itemWidth,\n    y: row * itemHeight,\n    w: itemWidth,\n    h: itemHeight\n  };\n};\nexport const getGridItemProperties = itemId => {\n  return {\n    i: itemId,\n    minH: 4 // minimum height for item\n\n  };\n};\nexport const getPageBreakItemShape = (yPos, isStatic = true) => {\n  return {\n    x: 0,\n    y: yPos,\n    w: MAX_ITEM_GRID_WIDTH,\n    h: 5,\n    static: !!isStatic,\n    minH: 1\n  };\n};\nexport const getPrintTitlePageItemShape = isOneItemPerPage => {\n  return {\n    x: 0,\n    y: 0,\n    w: isOneItemPerPage ? MAX_ITEM_GRID_WIDTH_OIPP : MAX_ITEM_GRID_WIDTH,\n    h: MAX_ITEM_GRID_HEIGHT,\n    static: true,\n    minH: 1\n  };\n};\n/**\n * Calculates the grid item's original height in pixels based\n * on the height in grid units. This calculation\n * is copied directly from react-grid-layout GridItem.js (calcPosition)\n *\n * @param {Object} item item containing shape (x, y, w, h)\n */\n\nexport const getOriginalHeight = item => {\n  const originalHeight = Math.round(GRID_ROW_HEIGHT * item.h + Math.max(0, item.h - 1) * MARGIN[1]);\n  return {\n    originalHeight\n  };\n};\n/**\n * Returns an array of items containing the x, y, w, h dimensions\n * and the item's originalheight in pixels\n * @function\n * @param {Array} items\n * @returns {Array}\n */\n\nexport const withShape = items => items.map((item, index) => {\n  const itemWithShape = hasShape(item) ? item : Object.assign({}, item, getShape(index));\n  return Object.assign({}, itemWithShape, getOriginalHeight(itemWithShape));\n});\nexport const getGridItemDomId = id => `item-${id}`;\nexport function onItemResize(id) {\n  const el = orObject(document.querySelector(`#${getGridItemDomId(id)}`));\n  if (isFunction(el.setViewportSize)) setTimeout(() => el.setViewportSize(el.clientWidth - 5, el.clientHeight - 5), 10);\n}","import isObject from 'lodash/isObject';\nimport { itemTypeMap } from './itemTypes';\nexport const getVisualizationFromItem = item => {\n  if (!isObject(item)) {\n    return null;\n  }\n\n  const propName = itemTypeMap[item.type]?.propName;\n  return item[propName] || item.reportTable || item.chart || item.map || item.eventReport || item.eventChart || {};\n};\nexport const getVisualizationId = item => getVisualizationFromItem(item).id;\nexport const getVisualizationName = item => getVisualizationFromItem(item).name;","import { REPORT_TABLE, CHART, MAP, EVENT_REPORT, EVENT_CHART, itemTypeMap } from '../../../../modules/itemTypes';\nimport { getBaseUrl } from '../../../../modules/util';\nimport { getVisualizationId } from '../../../../modules/item';\nimport { getGridItemDomId } from '../../../ItemGrid/gridUtil'; //external plugins\n\nconst itemTypeToExternalPlugin = {\n  [MAP]: 'mapPlugin',\n  [EVENT_REPORT]: 'eventReportPlugin',\n  [EVENT_CHART]: 'eventChartPlugin'\n};\n\nconst hasIntegratedPlugin = type => [CHART, REPORT_TABLE].includes(type);\n\nconst getPlugin = type => {\n  if (hasIntegratedPlugin(type)) {\n    return true;\n  }\n\n  const pluginName = itemTypeToExternalPlugin[type];\n  return global[pluginName];\n};\n\nexport const pluginIsAvailable = type => !!getPlugin(type);\nexport const loadPlugin = (plugin, config, credentials) => {\n  if (!(plugin && plugin.load)) {\n    return;\n  }\n\n  plugin.url = credentials.baseUrl;\n  plugin.loadingIndicator = true;\n  plugin.dashboard = true;\n\n  if (credentials.auth) {\n    plugin.auth = credentials.auth;\n  }\n\n  plugin.load(config);\n};\nexport const getLink = (item, d2) => {\n  const baseUrl = getBaseUrl(d2);\n  const appUrl = itemTypeMap[item.type].appUrl(getVisualizationId(item));\n  return `${baseUrl}/${appUrl}`;\n};\nexport const load = async (item, visualization, {\n  credentials,\n  activeType,\n  options = {}\n}) => {\n  const config = { ...visualization,\n    ...options,\n    el: getGridItemDomId(item.id)\n  };\n  const type = activeType || item.type;\n  const plugin = getPlugin(type);\n  loadPlugin(plugin, config, credentials);\n};\nexport const resize = item => {\n  const plugin = getPlugin(item.type);\n\n  if (plugin && plugin.resize) {\n    plugin.resize(getGridItemDomId(item.id));\n  }\n};\nexport const unmount = (item, activeType) => {\n  const plugin = getPlugin(activeType);\n\n  if (plugin && plugin.unmount) {\n    plugin.unmount(getGridItemDomId(item.id));\n  }\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemHeaderWrap\":\"ItemHeader_itemHeaderWrap__JcBP7\",\"itemTitle\":\"ItemHeader_itemTitle__34rHa\",\"itemActionsWrap\":\"ItemHeader_itemActionsWrap__Gx3D9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ControlBar_root__iikeX\",\"dragging\":\"ControlBar_dragging__3lq79\",\"content\":\"ControlBar_content__26Z33\",\"draghandle\":\"ControlBar_draghandle__27zum\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"DashboardItemChip_link__21drZ\",\"icon\":\"DashboardItemChip_icon__2hcIR\",\"selected\":\"DashboardItemChip_selected__r00uP\",\"unselected\":\"DashboardItemChip_unselected__2H9l2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ClearButton_button__33ZbK\",\"icon\":\"ClearButton_icon__vTJm3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Filter_container__1Vxdh\",\"input\":\"Filter_input__14lhU\",\"focused\":\"Filter_focused__Lvyz3\",\"searchIcon\":\"Filter_searchIcon__2ojUp\",\"searchButton\":\"Filter_searchButton__1tMTB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ShowMoreButton_container__riJz_\",\"showMore\":\"ShowMoreButton_showMore__3S3He\",\"disabled\":\"ShowMoreButton_disabled__2FQNA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"DashboardsBar_container__1xuCo\",\"expanded\":\"DashboardsBar_expanded__3lVl8\",\"controls\":\"DashboardsBar_controls__3PhmY\",\"newLink\":\"DashboardsBar_newLink__2PkLQ\",\"collapsed\":\"DashboardsBar_collapsed__3CY9n\",\"chipContainer\":\"DashboardsBar_chipContainer__IRxuN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"HeaderMenuItem_item__313hC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuItem\":\"ContentMenuItem_menuItem__vbKn3\",\"launchLink\":\"ContentMenuItem_launchLink__2Nql9\",\"label\":\"ContentMenuItem_label__ANfH1\",\"buttonInsert\":\"ContentMenuItem_buttonInsert__1joHg\"};"],"sourceRoot":""}
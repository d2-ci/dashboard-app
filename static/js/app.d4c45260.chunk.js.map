{"version":3,"sources":["D2App/components/ControlBar/styles/ControlBar.module.css","D2App/components/ControlBar/styles/DashboardItemChip.module.css","D2App/components/ControlBar/styles/ClearButton.module.css","D2App/components/ControlBar/styles/ShowMoreButton.module.css","D2App/components/ItemSelector/styles/ContentMenuItem.module.css","D2App/components/ItemSelector/styles/CategorizedMenuGroup.module.css","D2App/components/TitleBar/styles/EditTitleBar.module.css","D2App/components/TitleBar/styles/ViewTitleBar.module.css","D2App/components/Item/VisualizationItem/styles/FatalErrorBoundary.module.css","D2App/components/Item/ItemHeader/styles/DeleteItemButton.module.css","D2App/components/Item/VisualizationItem/styles/LoadingMask.module.css","D2App/components/Item/VisualizationItem/styles/Item.module.css","D2App/components/Item/ListItem/Item.module.css","D2App/components/Item/PrintTitlePageItem/styles/Item.module.css","D2App/components/FilterBar/styles/FilterBar.module.css","D2App/components/ControlBar/styles/ConfirmDeleteDialog.module.css","D2App/components/Dashboard/styles/PrintInfo.module.css","D2App/components/Dashboard/styles/PrintActionsBar.module.css","D2App/components/Dashboard/styles/PrintLayoutDashboard.module.css","D2App/components/Dashboard/styles/PrintDashboard.module.css","D2App/components/Dashboard/dashboardModes.js","D2App/reducers/user.js","D2App/modules/uiBackendItemConverter.js","D2App/reducers/dashboards.js","D2App/reducers/selected.js","D2App/reducers/dimensions.js","D2App/reducers/itemFilters.js","D2App/actions/itemFilters.js","D2App/reducers/messages.js","D2App/api/messages.js","D2App/components/Item/MessagesItem/actions.js","D2App/reducers/snackbar.js","D2App/actions/snackbar.js","D2App/reducers/visualizations.js","D2App/actions/visualizations.js","D2App/api/index.js","D2App/api/dashboards.js","D2App/components/SnackbarMessage/SnackbarMessage.js","D2App/actions/selected.js","D2App/api/localStorage.js","D2App/reducers/editDashboard.js","D2App/api/editDashboard.js","D2App/actions/editDashboard.js","D2App/actions/dashboards.js","D2App/reducers/controlBar.js","D2App/api/controlBar.js","D2App/actions/controlBar.js","D2App/reducers/settings.js","D2App/actions/dimensions.js","D2App/components/ControlBar/ControlBar.js","D2App/icons/Star.js","D2App/components/ControlBar/DashboardItemChip.js","D2App/api/dataStatistics.js","D2App/icons/AddCircle.js","D2App/icons/Clear.js","D2App/components/ControlBar/ClearButton.js","D2App/reducers/dashboardsFilter.js","D2App/components/ControlBar/Filter.js","D2App/components/ControlBar/ShowMoreButton.js","D2App/components/ControlBar/controlBarDimensions.js","D2App/components/ControlBar/DashboardsBar.js","D2App/actions/dashboardsFilter.js","D2App/components/Dashboard/DashboardVerticalOffset.js","D2App/widgets/NoContentMessage.js","D2App/components/ItemSelector/HeaderMenuItem.js","D2App/icons/Launch.js","D2App/components/ItemSelector/ContentMenuItem.js","D2App/components/ItemSelector/actions.js","D2App/components/ItemSelector/selectableItems.js","D2App/components/ItemSelector/CategorizedMenuGroup.js","D2App/components/ItemSelector/SinglesMenuGroup.js","D2App/components/ItemSelector/ItemSelector.js","D2App/components/TitleBar/EditTitleBar.js","D2App/components/Item/VisualizationItem/assets/icons.js","D2App/components/ItemFilter/FilterDialog.js","D2App/reducers/activeModalDimension.js","D2App/actions/activeModalDimension.js","D2App/components/ItemFilter/FilterSelector.js","D2App/components/TitleBar/ViewTitleBar.js","D2App/components/TitleBar/TitleBar.js","D2App/components/Item/VisualizationItem/DefaultPlugin.js","D2App/components/Item/VisualizationItem/FatalErrorBoundary.js","D2App/components/Item/ItemHeader/ViewItemActions.js","D2App/components/Item/ItemHeader/DeleteItemButton.js","D2App/components/Item/ItemHeader/EditItemActions.js","D2App/components/Item/ItemHeader/ItemHeader.js","D2App/components/Item/VisualizationItem/ItemHeaderButtons.js","D2App/components/Item/VisualizationItem/ItemFooter.js","D2App/components/Item/VisualizationItem/LoadingMask.js","D2App/modules/memoizeOne.js","D2App/components/Item/VisualizationItem/Item.js","D2App/widgets/Line.js","D2App/components/Item/MessagesItem/Item.js","D2App/components/Item/NotSupportedItem/Item.js","D2App/icons/Description.js","D2App/icons/Delete.js","D2App/components/Item/ListItem/Item.js","D2App/components/Item/ListItem/actions.js","D2App/reducers/printDashboard.js","D2App/components/Item/TextItem/Item.js","D2App/components/Item/AppItem/Item.js","D2App/components/Item/SpacerItem/Item.js","D2App/components/Item/PageBreakItem/Item.js","D2App/components/Item/PrintTitlePageItem/Item.js","D2App/components/Item/Item.js","D2App/components/Item/ProgressiveLoadingContainer.js","D2App/components/ItemGrid/ItemGrid.js","D2App/components/FilterBar/FilterBadge.js","D2App/components/FilterBar/FilterBar.js","D2App/actions/printDashboard.js","D2App/components/Dashboard/ViewDashboard.js","D2App/components/ControlBar/ConfirmDeleteDialog.js","D2App/components/ControlBar/EditBar.js","D2App/components/Dashboard/PrintInfo.js","D2App/modules/printUtils.js","D2App/icons/LessHorizontal.js","D2App/components/Dashboard/PrintActionsBar.js","D2App/components/ItemGrid/PrintLayoutItemGrid.js","D2App/components/Dashboard/PrintLayoutDashboard.js","D2App/components/Dashboard/EditDashboard.js","D2App/components/Dashboard/NewDashboard.js","D2App/components/ItemGrid/PrintItemGrid.js","D2App/components/Dashboard/PrintDashboard.js","D2App/components/Dashboard/Dashboard.js","D2App/components/App.js","D2App/actions/user.js","D2App/reducers/style.js","D2App/reducers/index.js","D2App/configureStore.js","D2App/locales/index.js","D2App/AppWrapper.js","D2App/modules/util.js","D2App/modules/itemTypes.js","D2App/components/ItemGrid/gridUtil.js","D2App/components/Item/VisualizationItem/plugin.js","D2App/components/Item/ItemHeader/styles/ItemHeader.module.css","D2App/api/metadata.js","D2App/components/ControlBar/styles/DashboardsBar.module.css"],"names":["module","exports","EDIT","NEW","PRINT","PRINT_LAYOUT","isEditMode","mode","includes","isPrintMode","isViewMode","DEFAULT_STATE_USER","id","username","uiLocale","isSuperuser","sGetUserUsername","state","user","spacerContent","isTextType","item","type","TEXT","text","convertUiItemsToBackend","items","map","SPACER","isUiSpacerType","convertBackendItemsToUi","isBackendSpacerType","gridProperties","getGridItemProperties","DEFAULT_STATE_DASHBOARDS","byId","updateDashboardProp","dashboardId","prop","value","sGetDashboardsRoot","dashboards","sGetDashboardById","orObject","sDashboardsIsFetching","sGetAllDashboards","sGetDashboardItems","sGetStarredDashboards","Object","values","filter","dashboard","starred","sGetUnstarredDashboards","getCustomDashboards","data","arrayFrom","d","name","displayName","description","displayDescription","favorite","owner","created","split","join","substr","lastUpdated","access","numberOfItems","orArray","dashboardItems","length","combineReducers","action","validateReducer","isLoading","showDescription","sGetSelectedRoot","selected","sGetSelectedId","sGetSelectedIsLoading","sGetSelectedShowDescription","DEFAULT_DIMENSIONS","getDimensionById","DIMENSION_ID_PERIOD","DIMENSION_ID_ORGUNIT","sGetDimensions","dimensions","DEFAULT_STATE_ITEM_FILTERS","sGetItemFiltersRoot","itemFilters","sGetFiltersKeys","keys","sGetNamedItemFilters","createSelector","filters","reduce","arr","push","find","dimension","acRemoveItemFilter","sGetMessagesRoot","messages","tGetMessages","async","url","getInstance","then","d2","Api","getApi","get","catch","error","console","log","getMessages","messageConversations","dispatch","err","DEFAULT_STATE_SNACKBAR","message","duration","open","acCloseSnackbar","DEFAULT_STATE_VISUALIZATIONS","isEmpty","p","undefined","sGetVisualization","visualizations","sGetVisualizationsRoot","acAddVisualization","onError","getDashboardItemsFields","withFavorite","arrayClean","getListItemFields","getFavoritesFields","withDimensions","getDashboardFields","withItems","getIdNameFields","rename","apiFetchDashboard","models","fields","loadingDashboardMsg","SnackbarMessageContent","style","fontWeight","connect","snackbar","sGetSnackbar","snackbarOpen","snackbarMessage","snackbarDuration","onCloseSnackbar","props","zIndex","autoHideDuration","onClose","acSetSelectedId","acSetSelectedIsLoading","tSetSelectedDashboardById","getState","snackbarTimeout","setTimeout","dashboardName","onSuccess","acAppendDashboards","customDashboard","acSetDashboardItems","withShape","localStorage","setItem","forEach","REPORT_TABLE","CHART","MAP","EVENT_REPORT","EVENT_CHART","extractFavorite","MESSAGES","clearTimeout","DEFAULT_STATE_EDIT_DASHBOARD","NEW_DASHBOARD_STATE","printPreviewView","sGetEditDashboardRoot","editDashboard","sGetIsEditing","sGetIsPrintPreviewView","sGetEditDashboardItems","saveDashboard","assign","width","w","height","h","save","msg","response","uid","acClearEditDashboard","acAddDashboardItem","itemPropName","itemTypeMap","propName","generateUid","gridItemProperties","shape","PAGEBREAK","yPos","getPageBreakItemShape","isStatic","PRINT_TITLE_PAGE","getPrintTitlePageItemShape","NEW_ITEM_SHAPE","position","content","acUpdateDashboardItem","acRemoveDashboardItem","tSaveDashboard","dashboardToSave","create","postDashboard","Promise","resolve","arrayToIdMap","tFetchDashboards","collection","list","paging","toArray","tStarDashboard","isStarred","post","delete","apiStarDashboard","acSetDashboardStarred","tDeleteDashboard","apiDeleteDashboard","userRows","sGetControlBarUserRows","controlBar","sGetControlBarRoot","KEY","hasNamespace","currentUser","dataStore","has","getNamespace","apiPostControlBarRows","rows","namespace","set","acSetControlBarUserRows","tSetControlBarRows","controlBarRows","key","apiGetControlBarRows","DEFAULT_SETTINGS","keyDateFormat","keyAnalysisRelativePeriod","keyAnalysisDigitGroupSeparator","displayNameProperty","rootOrganisationUnit","sGetSettings","settings","sGetSettingsDisplayNameProperty","tSetDimensions","displayNameProp","apiFetchDimensions","acSetDimensions","dim","dimensionType","dataDimensionType","ControlBar","React","Component","constructor","super","onStartDrag","this","setState","dragging","window","addEventListener","onDrag","onEndDrag","event","preventDefault","stopPropagation","newHeight","clientY","onChangeHeight","requestAnimationFrame","removeEventListener","renderDragHandle","className","classes","draghandle","onMouseDown","render","Math","max","rootStyle","backgroundColor","editMode","colors","yellow050","white","paddingBottom","transition","root","children","defaultProps","StarIcon","xmlns","viewBox","fill","DashboardItemChip","label","chipProps","selectedState","unselected","icon","Star","link","to","onClick","debounce","eventType","apiPostDataStatistics","AddCircleIcon","teal600","ClearIcon","grey800","ClearButton","onClear","button","Clear","color","ownerData","DEFAULT_STATE_DASHBOARDS_FILTER_OWNER","order","sGetDashboardsFilterRoot","dashboardsFilter","sGetFilterName","styles","filterField","fontSize","top","searchIcon","grey700","Filter","setFilterValue","onChangeName","target","handleKeyUp","keyCode","onKeypressEnter","componentWillReceiveProps","nextProps","startAdornment","endAdornment","placeholder","i18n","t","onChange","onKeyUp","Function","prototype","withStyles","ShowMoreButton","isMaxHeight","disabled","textAlign","showMore","getRowsHeight","getControlBarHeight","FIRST_ROW_PADDING_HEIGHT","DashboardsBar","setInitialDashboardState","adjustedHeight","newRows","floor","newRowCount","min","onToggleMaxHeight","onSelectDashboard","history","componentDidMount","selectedId","onChangeFilterName","rowCount","controlBarHeight","contentWrapperStyle","padding","overflowY","leftControls","display","textDecoration","marginRight","AddCircle","mapDispatchToProps","withRouter","stateProps","dispatchProps","ownProps","displayDashboards","arraySort","toLowerCase","marginTop","NoContentMessage","grey600","HeaderMenuItem","title","dense","LaunchIcon","LaunchLink","e","launchLink","rel","href","Launch","InsertButton","buttonInsert","ContentMenuItem","onInsert","visType","ItemIcon","getItemIcon","renderedItemIcon","VISUALIZATION","visTypeIcons","menuItem","singleItems","header","categorizedItems","USERS","REPORTS","RESOURCES","APP","listItemTypes","CategorizedMenuGroup","addItem","tAddListItemContent","newItem","toggleSeeMore","seeMore","onChangeItemsLimit","hasMore","itemUrl","getItemUrl","context","showMoreButton","margin","contextTypes","PropTypes","object","isRequired","listItemType","dashboardItemIndex","findIndex","dashboardItem","category","addToDashboard","ItemSearchField","onFocus","ItemSelector","closeList","openList","_","fetchItems","anchorEl","currentTarget","setFilter","getCategorizedMenuGroups","itemType","endPointName","itemCount","getDefaultItemCount","allItems","maxOptions","slice","pluralTitle","getSinglesMenuGroups","getMenuGroups","concat","add","Set","queryString","anchorOrigin","horizontal","vertical","transformOrigin","PaperProps","disableAutoFocus","disableEnforceFocus","disableRestoreFocus","maxWidth","EditTitleBar","onChangeTitle","onChangeDescription","section","titleDescription","itemSelector","selectedDashboard","ThreeDots","SpeechBubble","fillRule","transform","Warning","FilterDialog","onConfirm","renderDialogContent","selectedItems","dialogId","commonProps","onSelect","onDeselect","onReorder","selectedPeriods","ouItems","dimensionId","large","secondary","primary","DEFAULT_STATE_ACTIVE_MODAL_DIMENSION","sGetActiveModalDimension","activeModalDimension","acSetActiveModalDimension","initiallySelectedItems","selectedDimensions","clearActiveModalDimension","setActiveModalDimension","addItemFilter","removeItemFilter","showPopover","setShowPopover","useState","setFilters","ref","useRef","closePanel","onCloseDialog","onClickOutside","reference","arrow","placement","onDimensionClick","selectedIds","itemIdsToRemove","newList","itemIds","oldList","reorderedList","filterItems","ViewTitleBar","moreOptionsIsOpen","setMoreOptionsIsOpen","sharingDialogIsOpen","setSharingDialogIsOpen","redirectUrl","setRedirectUrl","onToggleStarredDashboard","onShowHideDescription","toggleSharingDialog","toggleMoreOptions","titleStyle","cursor","userSelect","StarBorder","showHideDescriptionLabel","toggleStarredDashboardLabel","buttonRef","createRef","titleBar","actions","titleBarIcon","strip","update","editLink","manage","marginLeft","paddingTop","onRequestClose","black","minWidth","TitleBar","edit","DefaultPlugin","pluginCredentials","shouldPluginReload","prevProps","reloadAllowed","filtersChanged","vis","visualization","prevVis","visChanged","activeType","reloadPlugin","pluginManager","currentVis","useActiveType","credentials","getActiveType","baseUrl","getBaseUrl","auth","defaultHeaders","Authorization","options","componentDidUpdate","getGridItemDomId","textDiv","FatalErrorBoundary","errorFound","componentDidCatch","info","container","ViewItemActions","actionButtons","itemActionsWrap","DeleteItemButton","deleteItemButton","red500","itemId","itemActionsMap","EditItemActions","ItemHeader","forwardRef","dashboardMode","rest","Actions","itemHeaderWrap","itemTitle","iconFill","ItemHeaderButtons","setAnchorEl","onSelectActiveType","isTrackerType","isTrackerDomainType","onViewTable","handleClose","onViewChart","onViewMap","canViewAs","isSingleValue","isYearOverYear","VIS_TYPE_GAUGE","VIS_TYPE_PIE","interpretationMenuLabel","activeFooter","ViewAsMenuItems","hasMapView","pluginIsAvailable","small","Boolean","appName","getAppName","getLink","onToggleFooter","scrollContainer","line","border","grey100","ItemFooter","objectId","getId","LoadingMask","center","memoizeOne","fn","lastArgs","lastValue","args","every","arg","i","Item","showFooter","configLoaded","pluginIsLoaded","applyFilters","visRows","obj","visColumns","columns","visFilters","dimensionFound","dimensionObjects","getUniqueKey","uniqueId","getPluginComponent","memoizedGetVisualizationConfig","calculatedHeight","originalHeight","headerRef","current","clientHeight","ITEM_CONTENT_PADDING_BOTTOM","memoizedGetContentStyle","contentRef","offsetHeight","memoizedApplyFilters","onLoadingComplete","forDashboard","mapViews","layer","hideTitle","onToggleItemExpanded","getContentStyle","measuredHeight","preferMeasured","onVisualizationLoaded","prevState","acSetActiveVisualizationType","grey200","Line","messageTypes","VALIDATION_RESULT","TICKET","SYSTEM","listStyleType","paddingLeft","seeAll","marginBottom","sender","lineHeight","snippet","maxHeight","overflow","MessagesItem","getMessageHref","msgIdentifier","messageType","getMessageSender","latestMsg","getMessageItems","modeClass","readClass","read","msgDate","document","location","messageCount","formatDate","userSettings","string","MessagesContainer","NotSupportedItem","justifyContent","alignItems","align","DescriptionIcon","grey500","DeleteIcon","getItemTitle","ListItem","tRemoveListItemContent","contentItems","index","array","el","getContentItems","contentItem","Description","itemicon","deleteButton","deletebutton","deleteicon","grey900","newContent","DEFAULT_STATE_PRINT_DASHBOARD","NEW_PRINT_DASHBOARD_STATE","sGetPrintDashboardRoot","printDashboard","sGetIsPrinting","sGetPrintDashboardItems","whiteSpace","textField","fontStretch","onChangeText","updatedItem","onEdit","multiline","fullWidth","textDivStyle","viewItem","getIframeSrc","appDetails","iframeSrc","launchUrl","ouIds","ouPath","AppItem","appKey","system","installedApps","app","src","SpacerItem","PageBreakItem","PrintTitlePageItem","titlePage","filterTitle","listItems","filterListItem","val","filterList","getItemFilterList","GridItem","VisualizationItem","TextItem","getGridItem","ProgressiveLoadingContainer","shouldLoad","containerRef","shouldLoadHandler","checkShouldLoad","bufferPx","bufferFactor","innerHeight","rect","getBoundingClientRect","bottom","removeHandler","registerHandler","debounceMs","getElementsByClassName","componentWillUnmount","eventProps","pick","ItemGrid","expandedItems","clickedId","isExpanded","onLayoutChange","newLayout","acUpdateDashboardLayout","onResizeStop","layout","oldItem","onItemResize","isVisualizationType","pluginResize","adjustHeightForExpanded","expandedItem","getItemComponent","itemClassNames","getItemComponents","translucent","MARGIN","cols","getGridColumns","rowHeight","GRID_ROW_HEIGHT","innerWidth","compactType","GRID_COMPACT_TYPE","isDraggable","isResizable","draggableCancel","validItems","hasShape","badgeContainer","borderRadius","badge","badgeRemove","FilterBadge","onRemove","count","FilterBar","onBadgeRemove","onBadgeClick","bar","removeItemFIlter","acSetPrintDashboard","acClearPrintDashboard","acAddPrintDashboardItem","dashboardIsEditing","dashboardIsPrinting","clearEditDashboard","clearPrintDashboard","useEffect","ConfirmDeleteDialog","onDeleteConfirmed","onContinueEditing","destructive","buttonBarStyle","EditBar","translationDialogIsOpen","dashboardModel","confirmDeleteDialogOpen","onConfirmDelete","onSave","newId","onPrintPreview","isPrintPreviewView","clearPrintPreview","showPrintPreview","onDiscard","onDiscardChanges","onDelete","onTranslationsSaved","translations","dbLocale","translation","locale","property","onTranslate","fetchDashboardModel","toggleTranslationDialog","confirmDeleteDialog","deleteAccess","translationDialog","objectToTranslate","fieldsToTranslate","onTranslationSaved","onTranslationError","renderActionButtons","printPreviewText","updateAccess","discardBtnText","rightControls","sGetIsNewDashboard","acSetDashboardDisplayName","PrintInfo","isLayout","infoPartOne","infoPartTwo","infoHeader","infoWrapper","divider","LessHorizontalIcon","PrintActionsBar","inner","LessHorizontal","print","PrintLayoutItemGrid","updateDashboardLayout","hideExtraPageBreaks","elements","Array","from","querySelectorAll","types","indexOf","y","sortedItems","sortBy","pageBreakBottom","lastItemBottom","foundNonPageBreak","parseInt","classList","thisItemBottom","gridElement","querySelector","PrintLayoutDashboard","initialized","initPrintLayoutDashboard","setPrintDashboard","updateDashboardItem","addDashboardItem","yPosList","addPageBreaks","fromEdit","wrapper","pageOuter","EditDashboard","initEditDashboard","setEditDashboard","renderGrid","NewDashboard","setNewDashboard","PrintItemGrid","PrintDashboard","initPrintDashboard","spacerCount","removeDashboardItem","dashboardMap","Dashboard","setDashboard","dashboardsLoaded","selectDashboard","setHeaderbarVisibility","scrollToTop","getElementsByTagName","remove","scrollTo","dashboardsIsEmpty","match","params","dashboardToSelect","preferredId","getItem","dash","sGetDashboardsSortedByStarred","App","setCurrentUser","fetchDashboards","setControlBarRows","setDimensions","getChildContext","spacers","exact","path","childContextTypes","objectClean","conversations","$merge","d2Object","keyUiLocale","authorities","newState","k","$splice","$unshift","idToRemove","stateItems","layoutHasChanged","newStateItems","x","stateItem","si","configureStore","middleware","thunk","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducer","applyMiddleware","addResources","arTranslations","ar_IQTranslations","daTranslations","enTranslations","esTranslations","frTranslations","idTranslations","kmTranslations","loTranslations","myTranslations","nbTranslations","prsTranslations","psTranslations","ptTranslations","pt_BRTranslations","ruTranslations","svTranslations","tetTranslations","tgTranslations","ukTranslations","urTranslations","viTranslations","zhTranslations","zh_CNTranslations","appConfig","schemas","authorization","process","REACT_APP_DHIS2_AUTHORIZATION","headers","AppWrapper","store","theme","createMuiTheme","dhis2theme","i18nRoot","param","isArray","isObject","global","Intl","DateTimeFormat","year","month","day","format","Date","replace","defaultValue","api","idx","getWithoutId","domainType","defaultItemCount","appUrl","getTime","getEndPointName","TableIcon","ChartIcon","MapIcon","ExtensionIcon","PersonIcon","FontDownloadIcon","EmailIcon","CropFreeIcon","NotInterestedIcon","isNonNegativeInteger","Number","isInteger","minH","GRID_COLUMNS","static","itemWithShape","Error","col","row","itemWidth","itemHeight","getShape","round","getOriginalHeight","isFunction","setViewportSize","clientWidth","itemTypeToExternalPlugin","getPlugin","hasIntegratedPlugin","reportTable","chart","eventReport","eventChart","getName","load","config","plugin","loadingIndicator","loadPlugin","fetch","apiFetchFavorite","getMapFields","resize","unmount","getVisualizationConfig","originalType","extractedMapView","mv","VIS_TYPE_COLUMN","VIS_TYPE_PIVOT_TABLE","getDimensionFields","getAxesFields","getFavoriteFields","withOptions"],"mappings":"kHACAA,EAAOC,QAAU,CAAC,KAAO,yBAAyB,QAAU,4BAA4B,WAAa,iC,qBCArGD,EAAOC,QAAU,CAAC,KAAO,gCAAgC,KAAO,gCAAgC,SAAW,oCAAoC,WAAa,wC,qBCA5JD,EAAOC,QAAU,CAAC,OAAS,4BAA4B,KAAO,4B,qBCA9DD,EAAOC,QAAU,CAAC,SAAW,iCAAiC,SAAW,mC,qBCAzED,EAAOC,QAAU,CAAC,SAAW,kCAAkC,WAAa,oCAAoC,MAAQ,+BAA+B,aAAe,wC,qBCAtKD,EAAOC,QAAU,CAAC,eAAiB,+C,4CCAnCD,EAAOC,QAAU,CAAC,QAAU,8BAA8B,iBAAmB,uCAAuC,MAAQ,4BAA4B,YAAc,kCAAkC,aAAe,qC,qBCAvND,EAAOC,QAAU,CAAC,QAAU,8BAA8B,SAAW,+BAA+B,SAAW,+BAA+B,aAAe,mCAAmC,MAAQ,4BAA4B,SAAW,iC,4CCA/OD,EAAOC,QAAU,CAAC,UAAY,sCAAsC,KAAO,iCAAiC,QAAU,sC,qBCAtHD,EAAOC,QAAU,CAAC,iBAAmB,6C,qBCArCD,EAAOC,QAAU,CAAC,OAAS,8B,qBCA3BD,EAAOC,QAAU,CAAC,QAAU,wB,4CCA5BD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,KAAO,mBAAmB,SAAW,uBAAuB,KAAO,mBAAmB,WAAa,yBAAyB,aAAe,6B,qBCAvLD,EAAOC,QAAU,CAAC,UAAY,wBAAwB,KAAO,mBAAmB,YAAc,0BAA0B,YAAc,0BAA0B,WAAa,yBAAyB,eAAiB,+B,qBCAvND,EAAOC,QAAU,CAAC,IAAM,yB,qBCAxBD,EAAOC,QAAU,CAAC,QAAU,uC,qBCA5BD,EAAOC,QAAU,CAAC,YAAc,+BAA+B,WAAa,8BAA8B,KAAO,wBAAwB,QAAU,6B,qBCAnJD,EAAOC,QAAU,CAAC,UAAY,mCAAmC,MAAQ,+BAA+B,KAAO,gC,qBCA/GD,EAAOC,QAAU,CAAC,QAAU,sCAAsC,UAAY,wCAAwC,YAAc,4C,4CCApID,EAAOC,QAAU,CAAC,QAAU,gCAAgC,UAAY,kCAAkC,YAAc,sC,8lvECDjH,MAAMC,EAAO,OACPC,EAAM,MAENC,EAAQ,QACRC,EAAe,eACfC,EAAaC,GAAQ,CAACL,EAAMC,GAAKK,SAASD,GAC1CE,EAAcF,GAAQ,CAACH,EAAOC,GAAcG,SAASD,GACrDG,EAAaH,GALN,SAKcA,ECNrBI,EAAqB,CAChCC,GAAI,GACJC,SAAU,GACVC,SAAU,GACVC,aAAa,GAwBR,MACMC,EAAmBC,GAASA,EAAMC,KAAKL,S,2EC5B7C,MAAMM,EAAgB,+CAOvBC,EAAaC,GAAQA,EAAKC,OAASC,KAAQF,EAAKG,OAASL,EAElDM,EAA0BC,GAASA,EAAMC,IAAIN,IACxD,IAAIG,EAAO,KAQX,MAbqBH,IAAQA,EAAKC,OAASM,IAOvCC,CAAeR,GACjBG,EAAOL,EACEC,EAAWC,KACpBG,EAAOH,EAAKG,MAdoB,6BAiB3B,2BAAKH,GACNG,EAAO,CACTA,QACE,MAGKM,EAA0BJ,GAASA,EAAMC,IAAIN,IACxD,MAAMC,EAtBoBD,IAAQA,EAAKC,OAASC,KAAQF,EAAKG,OAASL,EAsBzDY,CAAoBV,GAAQO,IAASP,EAAKC,KACjDU,EAAiBC,YAAsBZ,EAAKT,IAC5CY,EAAOJ,EAAWC,GA1BU,8BA0BFA,EAAKG,KAAgC,GAAKH,EAAKG,KAAO,KACtF,OAAO,uCAAKH,GACG,OAATG,EAAgB,CAClBA,QACE,IAHN,IAIEF,QACGU,KCzBME,EAA2B,CACtCC,KAAM,KACNT,MAAO,IAGHU,EAAsB,EAC1BnB,QACAoB,cACAC,OACAC,YAJ0B,CAM1BJ,KAAK,2BAAMlB,EAAMkB,MAAb,IACF,CAACE,GAAD,2BAAoBpB,EAAMkB,KAAKE,IAA/B,IACE,CAACC,GAAOC,MAGZb,MAAOT,EAAMS,QA8DR,MAAMc,EAAqBvB,GAASA,EAAMwB,WAgBpCC,EAAoB,CAACzB,EAAOL,IAAO+B,YAASH,EAAmBvB,GAAOkB,MAAMvB,GAC5EgC,EAAwB3B,GACO,OAAnCuB,EAAmBvB,GAAOkB,KAUtBU,EAAoB5B,GAAS0B,YAASH,EAAmBvB,GAAOkB,MAShEW,EAAqB7B,GAASuB,EAAmBvB,GAAOS,MAExDqB,EAAwB9B,GAAS+B,OAAOC,OAAOJ,EAAkB5B,IAAQiC,OAAOC,IAAmC,IAAtBA,EAAUC,SACvGC,EAA0BpC,GAAS+B,OAAOC,OAAOJ,EAAkB5B,IAAQiC,OAAOC,IAAmC,IAAtBA,EAAUC,SAezGE,EAAsBC,GAAQC,IAAUD,GAAM5B,IAAI8B,IAAC,CAC9D7C,GAAI6C,EAAE7C,GACN8C,KAAMD,EAAEC,KACRC,YAAaF,EAAEE,YACfC,YAAaH,EAAEG,YACfC,mBAAoBJ,EAAEI,mBACtBT,QAASK,EAAEK,SACXC,MAAON,EAAEvC,KAAKwC,KACdM,QAASP,EAAEO,QAAQC,MAAM,KAAKC,KAAK,KAAKC,OAAO,EAAG,IAClDC,YAAaX,EAAEW,YAAYH,MAAM,KAAKC,KAAK,KAAKC,OAAO,EAAG,IAC1DE,OAAQZ,EAAEY,OACVC,cAAeC,YAAQd,EAAEe,gBAAgBC,OACzCD,eAAgB1C,EAAwB2B,EAAEe,mB,aC5G7BE,kBAAgB,CAC7B9D,GA/BS,CAACK,EAX6B,KAWM0D,KAC7C,OAAQA,EAAOrD,MACb,IAhB2B,kBAiBzB,OAAOsD,YAAgBD,EAAOpC,MAdK,MAgBrC,QACE,OAAOtB,IA0BX4D,UAtBgB,CAAC5D,GApB6B,EAoBa0D,KAC3D,OAAQA,EAAOrD,MACb,IAzBkC,yBA0BhC,OAAOsD,YAAgBD,EAAOpC,OAvBY,GAyB5C,QACE,OAAOtB,IAiBX6D,gBAbsB,CAAC7D,GA7B6B,EA6BmB0D,KACvE,OAAQA,EAAOrD,MACb,IAlCwC,+BAmCtC,OAAOsD,YAAgBD,EAAOpC,OAhCkB,GAkClD,QACE,OAAOtB,MAUN,MAAM8D,EAAmB9D,GAASA,EAAM+D,SAClCC,EAAiBhE,GAAS8D,EAAiB9D,GAAOL,GAClDsE,EAAwBjE,GAAS8D,EAAiB9D,GAAO4D,UACzDM,EAA8BlE,GAAS8D,EAAiB9D,GAAO6D,gB,cCvDrE,MACMM,GAAqB,CAACC,aAAiBC,MAAsBD,aAAiBE,OAYpF,MAAMC,GAAiBvE,GAASA,EAAMwE,W,eCZtC,MAIMC,GAA6B,GAiCnC,MAAMC,GAAsB1E,GAASA,EAAM2E,YACrCC,GAAkB5E,GAAS+B,OAAO8C,KAAKH,GAAoB1E,IAG3D8E,GAAuBC,aAAe,CAACL,GAAqBH,IAAiB,CAACS,EAASR,IAAezC,OAAO8C,KAAKG,GAASC,OAAO,CAACC,EAAKvF,KACnJuF,EAAIC,KAAK,CACPxF,GAAIA,EACJ8C,KAAM+B,EAAWY,KAAKC,GAAaA,EAAU1F,KAAOA,GAAI8C,KACxDT,OAAQgD,EAAQrF,GAAIe,IAAIY,IAAK,CAC3B3B,GAAI2B,EAAM3B,GACV8C,KAAMnB,EAAMoB,aAAepB,EAAMmB,UAG9ByC,GACN,KC9CUI,GAAqB3F,IAAE,CAClCU,KDHgC,qBCIhCV,O,yBCUK,MAAM4F,GAAmBvF,GAASA,EAAMwF,S,cClBxC,MCWMC,GAAe,IAAMC,UAChC,IACE,MAAMF,ODbiB,MACzB,MACMG,EAAG,uCADM,qHACN,gCACT,OAAOC,yBAAcC,KAAKC,GAAMA,EAAGC,IAAIC,SAASC,IAAIN,IAAMO,MAAMC,GAASC,QAAQC,IAAI,SAAUF,KCUtEG,IACjB,qBACJC,GACEf,EACJ,OAAOgB,EAV0B,CACnCnG,KFP+B,oBEQ/BiB,MAQmCiF,IACjC,MAAOE,GACP,OAjBa/C,EAiBE,eAjBMyC,EAiBUM,EAhBjCL,QAAQC,IAAR,0BAA+B3C,EAA/B,aAA0CyC,IACnCA,EAFO,IAACzC,EAAQyC,GCDZO,GAAyB,CACpCC,QAAS,GACTC,SAAU,KACVC,MAAM,GAqBD,MCrBMC,GAAkB,MAC7BzG,KDL4B,mB,yBEGvB,MAEM0G,GAA+B,GAEtCC,GAAUC,QAAWC,IAAND,GAAyB,OAANA,EA2BjC,MAEME,GAAoB,CAACnH,EAAOL,IAFHK,IAASA,EAAMoH,eAG5CC,CAAuBrH,GAAOL,GCrC1B2H,GAAqBhG,IAAK,CACrCjB,KDE+B,oBCD/BiB,U,mCCAK,MAAMiG,GAAUpB,GAASC,QAAQC,IAAI,UAAWF,GAE1CqB,GAA0B,EACrCC,gBACE,KAAOC,KAAW,CAAC,KAAM,OAAQ,QAAS,IAAK,IAAK,kBAAmB,mBAAoB,WAAY,OAAQ,SAA7F,UAA0GC,eAAoB1E,KAAK,MAAQwE,EAAY,UAAMG,aAAmB,CACpMC,eAAgBJ,EAAaI,iBAC5B5E,KAAK,MAFqK,KAIhK6E,GAAqB,EAChCC,YACAN,gBACE,KAAOC,KAAW,CAAC,GAAD,OAAIM,eAAkB/E,KAAK,MAAQ,cAAe,qBAAsB,WAAxE,eAA4F+E,aAAgB,CAChIC,QAAQ,IACPhF,KAAK,KAFc,KAEL,UAAW,cAAe,SAAU8E,EAAS,yBAAqBP,GAAwB,CACzGC,iBACCxE,KAAK,KAFsD,UCPjDiF,GAAoBvI,GAAMiG,yBAAcC,KAAKC,GAAMA,EAAGqC,OAAOjG,UAAU+D,IAAItG,EAAI,CAC1FyI,OAAQV,KAAWI,GAAmB,CACpCC,WAAW,EACXN,aAAc,CACZI,gBAAgB,MAEhB5E,KAAK,QACPiD,MAAMqB,I,yBCVV,MACac,GAAsB,CACjC5F,KAAM,GACNpC,KAHwB,qBAMpBiI,GAAyB,EAC7B3B,aAEuB,kBAAZA,EAEF,yCACa,0BAAM4B,MAAO,CAC7BC,WAAY,MACV7B,EAAQlE,MAAa,IAHpB,aAQFkE,EA4BM8B,mBAnBSzI,IACtB,MAAM,QACJ2G,EADI,SAEJC,EAFI,KAGJC,GNZwB7G,IAASA,EAAM0I,UAAYhC,GMajDiC,CAAa3I,GACjB,MAAO,CACL4I,aAAc/B,EACdgC,gBAAiBlC,EACjBmC,iBAAkBlC,IAUkB,CACtCmC,gBAAiBjC,IADJ2B,CAzBgBO,GACtB,kBAAC,KAAD,CAAUT,MAAO,CACtBU,OAAQ,OACPpC,KAAMmC,EAAMJ,aAAcjC,QAAS,kBAAC2B,GAAD,CAAwB3B,QAASqC,EAAMH,kBAAqBK,iBAAkBF,EAAMF,iBAAkBK,QAASH,EAAMD,mB,UCftJ,MAAMK,GAAkB9H,IAAK,CAClCjB,Kdd6B,kBce7BiB,UAEW+H,GAAyB/H,IAAK,CACzCjB,KdjBoC,yBckBpCiB,UAOWgI,GAA4B3J,GAAM+F,MAAOc,EAAU+C,KAC9D/C,EAAS6C,IAAuB,IAChC,MAAMG,EAAkBC,WAAW,KACjC,MAAMC,EAAgBhI,YAASD,EAAkB8H,IAAY5J,IAAK+C,YAE9DuB,EAAsBsF,MAAeG,IACvCrB,GAAoB5F,KAAOiH,EAC3BlD,ENnCwC,CAC5CnG,KDFuC,4BCGvCiB,MMiCuC,CACjCqF,QAAS0B,GACTxB,MAAM,OAGT,KAEG8C,EAAY5F,IAChByC,EAASoD,GAAmB7F,IAC5B,MAAM8F,EAAkBxH,EAAoB0B,GAAU,GC5CjB,IAACnE,EAAUwB,ED0EhD,OA7BAoF,EAASsD,GAAoBC,YAAUF,EAAgBtG,kBC7CjB3D,ED8CZG,EAAiBwJ,KC9CKnI,ED8CQzB,EC7C1DqK,aAAaC,QAAb,kCAAgDrK,GAAYwB,GD8C1DyI,EAAgBtG,eAAe2G,QAAQ9J,IACrC,OAAQA,EAAKC,MACX,KAAK8J,IACL,KAAKC,IACL,KAAKC,IACL,KAAKC,IACL,KAAKC,IACH/D,EAASc,GAAmBkD,aAAgBpK,KAC5C,MAEF,KAAKqK,IACHjE,EAASf,SAQX9F,IAAOqE,EAAeuF,MACxB/C,EXzD4B,CAChCnG,KDVgC,uBYqE9BmG,EAAS4C,GAAgBzJ,IACzB6G,EAAS6C,IAAuB,IAChCqB,aAAalB,GACbhD,ENrE2B,CAC7BnG,KDL4B,mBO0EnB0D,GAQT,IAEE,OAAO4F,QADiBzB,GAAkBvI,IAE1C,MAAO8G,GACP,OATcN,EASCM,EARfL,QAAQC,IAAI,UAAWF,GAChBA,EAFOA,O,mCE1EX,MAWMwE,GAA+B,GAC/BC,GAAsB,CACjCjL,GAAI,GACJ8C,KAAM,GACNW,OAAQ,GACRT,YAAa,GACbY,eAAgB,GAChBsH,kBAAkB,GA6Hb,MAAMC,GAAwB9K,GAASA,EAAM+K,cAEvCC,GAAgBhL,IAAUgH,KAAQhH,EAAM+K,eACxCE,GAAyBjL,GAAS8K,GAAsB9K,GAAO6K,iBAM/DK,GAAyBlL,GAAS0B,YAASoJ,GAAsB9K,IAAQuD,eC1JhFgE,GAAUpB,GAASC,QAAQC,IAAI,UAAWF,GAE1CgF,GAAgB,CAACjJ,EAAWI,KAChC,MAAM,KACJG,EADI,YAEJE,EAFI,eAGJY,GACEjB,EAOJ,OANAJ,EAAUO,KAAOA,EACjBP,EAAUS,YAAcA,EACxBT,EAAUqB,eAAiBA,EAAe7C,IAAIN,GAAQ2B,OAAOqJ,OAAO,GAAIhL,EAAM,CAC5EiL,MAAOjL,EAAKkL,EACZC,OAAQnL,EAAKoL,KAERtJ,EAAUuJ,OAAO5F,KAAK6F,GAAOA,EAAIC,SAASC,MCWtCC,GAAuB,MAClCxL,KFvBkC,yBE2CvByL,GAAqB1L,IAChC,MAAMC,EAAOD,EAAKC,YACXD,EAAKC,KACZ,MAAM0L,EAAeC,IAAY3L,GAAM4L,SACjCtM,EAAKuM,yBACLC,EAAqBnL,YAAsBrB,GACjD,IAAIyM,EAEJ,GAAI/L,IAASgM,IAAW,CACtB,MAAMC,EAAOlM,EAAKkM,MAAQ,EAC1BF,EAAQG,YAAsBD,EAAMlM,EAAKoM,eAEzCJ,EADS/L,IAASoM,IACVC,cAEAC,IAGV,MAAO,CACLtM,KFzD8B,qBE0D9BiB,MAAM,qCACJ3B,KACAU,OACAuM,SAAUxM,EAAKwM,UAAY,KAC3B,CAACb,GAAe3L,EAAKyM,SAClBF,KACAR,GACAC,KAIIU,GAAwB1M,IAAI,CACvCC,KFpEmC,wBEqEnCiB,MAAOlB,IAEI2M,GAAwBzL,IAAK,CACxCjB,KFzEmC,wBE0EnCiB,UAGW0L,GAAiB,IAAMtH,MAAOc,EAAU+C,KACnD,MAAMrH,EAAY4I,GAAsBvB,KAClC0D,EAAe,2BAAQ/K,GAAR,IACnBqB,eAAgB/C,EAAwB0B,EAAUqB,kBAGpD,IACE,MAAMnC,EAAc6L,EAAgBtN,SD3ET2C,EC2EoC2K,ED1E1DrH,yBAAcC,KAAKC,GACjBA,EAAGqC,OAAO3G,WAAWyE,IAAI3D,EAAK3C,IAAIkG,KAAK3D,GAAaiJ,GAAcjJ,EAAWI,KACnF4D,MAAMqB,UAEkBjF,IACpBsD,yBAAcC,KAAKC,IACxB,MAAM5D,EAAY4D,EAAGqC,OAAO3G,WAAW0L,SACvC,OAAO/B,GAAcjJ,EAAWI,KCmEwD6K,CAAcF,GAGtG,OAFAzG,EApEgC,CAClCnG,KFvBkC,+BE2F1BmG,EAAS8C,GAA0BlI,IAClCgM,QAAQC,QAAQjM,GACvB,MAAO+E,GAzFKA,KACdC,QAAQC,IAAI,6BAA8BF,IAyFxCoB,CAAQpB,GDhFmB7D,OELlBsH,GAAqBpI,IAAU,CAC1CnB,KpBT4B,iBoBU5BiB,MAAOgM,YAAajL,EAAoBb,MAY7BsI,GAAsBxI,IAAK,CACtCjB,KpBpBiC,sBoBqBjCiB,UAGWiM,GAAmB,IAAM7H,UACpC,MAAM8H,QP9BgC5H,yBAAcC,KAAKC,GAAMA,EAAGqC,OAAOjG,UAAUuL,KAAK,CACxFrF,OAAQ,CAACN,KAAqB7E,KAAK,KAAM,sBAAsBA,KAAK,KACpEyK,OAAQ,WACNxH,MAAMqB,IOGqB/F,MAyB7BgF,GAzB6BhF,EAyBJgM,EAAWG,UAzBG,CACvCtN,KpBN4B,iBoBO5BiB,MAAOgM,YAAajL,EAAoBb,QAoD7BoM,GAAiB,CAACjO,EAAIkO,IAAcnI,UAW/C,IAEE,YP3D4B,EAAC/F,EAAIkO,KACnC,MAAMlI,EAAG,qBAAiBhG,EAAjB,aACTiG,yBAAcC,KAAKC,IACb+H,EACF/H,EAAGC,IAAIC,SAAS8H,KAAKnI,GAErBG,EAAGC,IAAIC,SAAS+H,OAAOpI,MOoDnBqI,CAAiBrO,EAAIkO,GAXXlO,KAChB6G,EAhDiC,EAACpF,EAAayM,KAAd,CACnCxN,KpBZmC,wBoBanCe,YAAaA,EACbE,MAAOuM,IA6CII,CAAsBtO,EAAIkO,IAC5BlO,GAUAgK,CAAUhK,GACjB,MAAO8G,GACP,OATcN,EASCM,EARfL,QAAQC,IAAI,6BAA8BF,GACnCA,EAFOA,OAYL+H,GAAmBvO,GAAM+F,UACpC,IAME,YP7D8B/F,IACzBiG,yBAAcC,KAAKC,GACjBA,EAAGqC,OAAO3G,WAAWyE,IAAItG,GAAIkG,KAAK3D,GAAaA,EAAU6L,WAC/D7H,MAAMqB,IOqDD4G,CAAmBxO,GACzB6G,ED1DgC,CAClCnG,KFvBkC,yBGiFhCmG,EAAS4C,MACT5C,EAASsD,GAAoB,WACvBtD,EAAS+G,MACRH,QAAQC,UACf,MAAO5G,GAEP,OADAL,QAAQC,IAAI,4BAA6BI,GAClCA,IC5EIhD,mBAAgB,CAC7B2K,SAXe,CAACpO,EAF2B,EAEY0D,KACvD,OAAQA,EAAOrD,MACb,IALoC,2BAMlC,OAAOsD,YAAgBD,EAAOpC,MALS,GAOzC,QACE,OAAOtB,MAcN,MAEMqO,GAAyBrO,GAFJA,IAASA,EAAMsO,WAEFC,CAAmBvO,GAAOoO,SCzBnEI,GAAM,iBAENC,GAAe/I,eAAkBI,EAAG4I,YAAYC,UAAUC,IAH9C,aAKZC,GAAenJ,MAAOI,EAAI2I,IAAiBA,QAAqB3I,EAAG4I,YAAYC,UAAU1I,IAL7E,mBAKoGH,EAAG4I,YAAYC,UAAUzB,OAL7H,aAoBL4B,GAAwBpJ,MAAOqJ,EAAMC,KAChD,MAAMlJ,QAAWF,0BACNoJ,SAAoBH,GAAa/I,EAAI2I,KAC7CQ,IAAIT,GAAKO,ICtBDG,GAA0BH,IAAI,CACzC1O,KFDsC,2BEEtCiB,MAAOyN,IAGII,GAAqB,IAAMzJ,UAUtC,IACE,MAAM0J,ODV0B1J,WAClC,MAAMI,QAAWF,yBACXoJ,QAAkBH,GAAa/I,QAAU2I,GAAa3I,IAG5D,OAFekJ,EAAUnK,MAAQmK,EAAUnK,KAAKO,KAAKiK,GAAOA,IAAQb,UAGrDQ,EAAU/I,IAAIuI,WAErBM,GDbmC,ECakBE,GAC3D5I,QAAQC,IAAI,6DDd6B,IEeZiJ,GAC7B,YAVA9I,EAAS0I,GAUQE,IACjB,MAAO3I,GACP,OATcN,EASCM,EARfL,QAAQC,IAAI,iCAAkCF,GACvCA,EAFOA,OCXLoJ,GAAmB,CAC9BC,cAAe,aACfC,0BAA2B,iBAC3BC,+BAAgC,QAChCC,oBAAqB,cACrB9P,SAAU,KACV+P,qBAAsB,IAqBjB,MAAMC,GAAe7P,GAASA,EAAM8P,SAC9BC,GAAkC/P,GAAS6P,GAAa7P,GAAO2P,oBCvB/DK,GAAiBlK,GAAMJ,MAAOc,EAAU+C,KAUnD,IACE,MAAM0G,EAAkBF,GAAgCxG,KAClD/E,QAAmB0L,aAAmBpK,EAAImK,GAGhD,MAdgBzL,KAChBgC,EAN2BhC,KAAU,CACvCnE,KvBH4B,iBuBI5BiB,MAAOkD,IAII2L,CAAgB3L,KAalBmF,CADoBnF,EAAWvC,OAAOmO,GAA6B,aAAtBA,EAAIC,eAAsD,aAAtBD,EAAIC,eAA0D,cAA1BD,EAAIE,oBAEhI,MAAO7J,GACP,OAZcN,EAYCM,EAXfL,QAAQC,IAAI,+BAAgCF,GACrCA,EAFOA,O,0BCNlB,MAAMoK,WAAmBC,IAAMC,UAC7BC,YAAY1H,GACV2H,MAAM3H,GADW,KAOnB4H,YAAc,KACZC,KAAKC,SAAS,CACZC,UAAU,IAEZC,OAAOC,iBAAiB,YAAaJ,KAAKK,QAC1CF,OAAOC,iBAAiB,UAAWJ,KAAKM,YAZvB,KAcnBD,OAASE,IACPA,EAAMC,iBACND,EAAME,kBACN,MAAMC,EAAYH,EAAMI,QAEpBX,KAAK7H,MAAMyI,gBAAkBF,IAAcV,KAAK7H,MAAMuC,QAAUgG,EAAY,GAC9EG,sBAAsB,KACpBb,KAAK7H,MAAMyI,eAAeF,MArBb,KAyBnBJ,UAAY,KACVN,KAAKC,SAAS,CACZC,UAAU,IAEZC,OAAOW,oBAAoB,YAAad,KAAKK,QAC7CF,OAAOW,oBAAoB,UAAWd,KAAKM,WAEvCN,KAAK7H,MAAMmI,WACbN,KAAK7H,MAAMmI,aA/BbN,KAAK7Q,MAAQ,CACX+Q,UAAU,GAkCda,mBACE,MAA4C,oBAA9Bf,KAAK7H,MAAMyI,eAAgC,yBAAKI,UAAWC,KAAQC,WAAYxJ,MAAO,CAClGgD,OA1CqB,GA2CpByG,YAAanB,KAAKD,cAAkB,KAGzCqB,SACE,MAAM1G,EAAS2G,KAAKC,IAAItB,KAAK7H,MAAMuC,OAAQ,GA/CpB,EAgDjB6G,EAAYrQ,OAAOqJ,OAAO,CAC9BG,SACA8G,gBAAiBxB,KAAK7H,MAAMsJ,SAAWC,IAAOC,UAAYD,IAAOE,MACjEC,cAnDqB,GAqDvB7B,KAAK7Q,MAAM+Q,SAAW,CACpB4B,WAAY,QACV,IACJ,OAAO,yBAAKpK,MAAO6J,EAAWP,UAAWC,KAAQc,MACrC,yBAAKf,UAAWC,KAAQjF,SAAUgE,KAAK7H,MAAM6J,UAC5ChC,KAAKe,qBAsCtBrB,GAAWuC,aAAe,CACxBrB,eAAgB,KAChBN,UAAW,MAEEZ,U,qBC1FAwC,OAXE,EACflB,eACI,yBAAKA,UAAWA,EAAWmB,MAAM,6BAA6BC,QAAQ,aACpE,0BAAMzQ,EAAE,gBAAgB0Q,KAAK,SAC7B,0BAAM1Q,EAAE,6FACR,0BAAMA,EAAE,gBAAgB0Q,KAAK,U,0BC0BtBC,OA1BkB,EAC/BhR,UACA4B,WACAqP,QACAhS,kBAEA,MAAMiS,EAAY,CAChBtP,YAGF,GAAI5B,EAAS,CACX,MAAMmR,EAAgBvP,EAAW+N,KAAQ/N,SAAW+N,KAAQyB,WAC5DF,EAAUG,KAAO,kBAACC,GAAD,CAAU5B,UAAS,UAAKC,KAAQ0B,KAAb,YAAqBF,KAG3D,OAAO,kBAAC,IAAD,CAAMzB,UAAWC,KAAQ4B,KAAMC,GAAE,WAAMvS,GAAewS,QAASC,KAAS,ICtB5CnO,OAAOoO,EAAWnU,KACrD,MAAMmG,QAAWF,yBACXD,EAAG,mCAA+BmO,EAA/B,qBAAqDnU,GAC9DmG,EAAGC,IAAIC,SAAS8H,KAAKnI,IDmBgEoO,CAAsB,iBAAkB3S,GAAc,MACjI,kBAAC,IAASiS,EAAYD,KEjBnBY,OAJO,IAAM,yBAAKhB,MAAM,6BAA6B3H,MAAM,KAAKE,OAAO,KAAK2H,KAAMX,IAAO0B,QAAShB,QAAQ,aACjH,0BAAMzQ,EAAE,0M,iECUD0R,OAVG,EAChBrC,eACI,yBAAKA,UAAWA,EAAWqB,KAAMX,IAAO4B,QAASnB,MAAM,6BAA6BC,QAAQ,aAC1F,0BAAMzQ,EAAE,0GACR,0BAAMA,EAAE,gBAAgB0Q,KAAK,U,sBCMtBkB,OAVY,EACzBC,aACI,4BAAQxC,UAAWC,KAAQwC,OAAQV,QAASS,GAC1C,8BACI,kBAACE,GAAD,CAAW1C,UAAWC,KAAQ0B,KAAMgB,MAAM,aCN/C,MAGMC,GAAY,CAAC,CACxB9U,GAAI,MACJ2B,MAAO,aACN,CACD3B,GAAI,KACJ2B,MAAO,iBACN,CACD3B,GAAI,SACJ2B,MAAO,sBAsBIoT,GAAwCD,GAAU,GAAG9U,GAiCnD8D,mBAAgB,CAC7BhB,KA/BW,CAACzC,EAJsC,GAIQ0D,KAC1D,OAAQA,EAAOrD,MACb,IAtCsC,6BAuCpC,OAAOsD,YAAgBD,EAAOpC,MAPgB,IAShD,QACE,OAAOtB,IA0BX8C,MAtBY,CAAC9C,EAAQ0U,GAAuChR,KAC5D,OAAQA,EAAOrD,MACb,IA/CuC,8BAgDrC,OAAOsD,YAAgBD,EAAOpC,MAjBgB,IAmBhD,QACE,OAAOtB,IAiBX2U,MAbY,CAAC3U,EA1CT,WA0CwD0D,KAC5D,OAAQA,EAAOrD,MACb,IAxDuC,8BAyDrC,OAAOsD,YAAgBD,EAAOpC,MA7C9B,YA+CF,QACE,OAAOtB,MAUN,MAAM4U,GAA2B5U,GAASA,EAAM6U,iBAE1CC,GAAiB9U,GAAS4U,GAAyB5U,GAAOyC,KClEjEsS,GAAS,CACbC,YAAa,CACXC,SAAU,OACV5J,MAAO,QACPE,OAAQ,OACR2J,IAAK,QAEPC,WAAY,CACVX,MAAOjC,IAAO6C,QACd/J,MAAO,OACPE,OAAQ,SAKL,MAAM8J,WAAe5E,YAC1BC,YAAY1H,GACV2H,MAAM3H,GADW,KAanBsM,eAAiBlE,IACfA,EAAMC,iBACNR,KAAK7H,MAAMuM,aAAanE,EAAMoE,OAAOlU,QAfpB,KAiBnBmU,YAAcrE,IACZ,OAAQA,EAAMsE,SACZ,KAtBuB,GAuBrB7E,KAAK7H,MAAM2M,kBACX,MAEF,KAzBwB,GA0BtB9E,KAAK7H,MAAMuM,iBAtBf1E,KAAK7Q,MAAQ,CACXsB,MDK8C,ICDlDsU,0BAA0BC,GACxBhF,KAAKC,SAAS,CACZxP,MAAOuU,EAAUpT,OAuBrBwP,SACE,MAAM,QACJH,EADI,KAEJrP,EAFI,aAGJ8S,GACE1E,KAAK7H,MACH8M,EAAiB,kBAAC,KAAD,CAAgBlJ,SAAS,SACpC,kBAAC,KAAD,CAAYiF,UAAWC,EAAQqD,cAErCY,EAAwB,KAATtT,GAAwB,OAATA,EAAgB,kBAAC,KAAD,CAAgBmK,SAAS,OAC7D,kBAAC,GAAD,CAAayH,QAAS,IAAMkB,OACZ,KAChC,OAAO,kBAAC,KAAD,CAAY1D,UAAWC,EAAQkD,YAAagB,YAAaC,IAAKC,EAAE,0BAA2BJ,eAAgBA,EAAgBC,aAAcA,EAAczU,MAAOuP,KAAK7Q,MAAMsB,MAAO6U,SAAUtF,KAAKyE,eAAgBc,QAASvF,KAAK4E,eAUxOJ,GAAOvC,aAAe,CACpBrQ,KAAM,GACN8S,aAAcc,SAASC,WAEVC,4BAAWxB,GAAXwB,CAAmBlB,I,sBC7DnBmB,OAlBe,EAC5B5C,UACA6C,cACAC,cAEO,yBAAKnO,MAAO,CACjBoO,UAAW,WAEFD,EAAW,yBAAK7E,UAAWC,KAAQ4E,UAAWT,IAAKC,EAAE,cAAsB,yBAAKrE,UAAWC,KAAQ8E,SAAUhD,QAASA,GAC9G6C,EAAcR,IAAKC,EAAE,aAAeD,IAAKC,EAAE,eCbzD,MAKMW,GAAgB9H,GALS,GAM7BA,EAKI+H,GAAsB/H,GAC1B8H,GAAc9H,GATegI,G,yBCiB/B,MAAMC,WAAsBvG,YAAW,eAAD,oBAC3CzQ,MAAQ,CACN+O,KDpByB,GCkBgB,KAI3CkI,yBAA2BlI,IACzB8B,KAAKC,SAAS,CACZ/B,OACA0H,YARuB,KAQV1H,KAP0B,KAmB3C0C,eAAiBF,IACf,MAAM2F,EAAiB3F,EAAY,GAE7B4F,EAAUjF,KAAKC,IDxCI,GAMO5G,ECkC6B2L,EDjCxDhF,KAAKkF,OAAO7L,EANiBwL,IAHA,MAQFxL,MCoChC,GAAI4L,IAAYtG,KAAK7Q,MAAM+O,KAAM,CAC/B,MAAMsI,EAAcnF,KAAKoF,IAAIH,EA1BN,IA2BvBtG,KAAK7H,MAAMyI,eAAe4F,KA1Ba,KA6B3ClG,UAAY,IACHrC,GAAsB+B,KAAK7Q,MAAM+O,MA9BC,KAgC3CwI,kBAAoB,KAClB,MAAMxI,EAlCmB,KAkCZ8B,KAAK7Q,MAAM+O,KAAyB8B,KAAK7H,MAAMoF,SAlCnC,GAmCzByC,KAAKC,SAAS,CACZ/B,OACA0H,aAAc5F,KAAK7Q,MAAMyW,eApCc,KAuC3Ce,kBAAoB,KAClB3G,KAAK7H,MAAMyO,QAAQtS,KAAnB,WAA4B0L,KAAK7H,MAAMxH,WAAW,GAAG7B,MA7BvD+X,oBACE7G,KAAKoG,yBAAyBpG,KAAK7H,MAAMoF,UAG3CwH,0BAA0BC,GACxBhF,KAAKoG,yBAAyBpB,EAAUzH,UA2B1C6D,SACE,MAAM,WACJzQ,EADI,KAEJiB,EAFI,WAGJkV,EAHI,mBAIJC,GACE/G,KAAK7H,MACH6O,EAAWhH,KAAK7Q,MAAMyW,YAnDH,GAmDiC5F,KAAK7Q,MAAM+O,KAC/D+I,EAAmBhB,GAAoBe,GACvCE,EAAsB,CAC1BC,QAAQ,GAAD,ODxE2B,GCwE3B,gBACPC,UAAWpH,KAAK7Q,MAAMyW,YAAc,OAAS,SAC7ClL,OAAQsL,GAAcgB,GD1EY,IC4EpC,OAAO,kBAAC,GAAD,CAAYtM,OAAQuM,EAAkBrG,eAAgBZ,KAAKY,eAAgBN,UAAWN,KAAKM,UAAWmB,UAAU,GAC3G,yBAAK/J,MAAOwP,GACR,yBAAKlG,UAAWC,KAAQoG,cACpB,kBAAC,IAAD,CAAM3P,MAAO,CACzB4P,QAAS,eACTC,eAAgB,OAChBC,YAAa,GACbzL,SAAU,WACVsI,IAAK,OACJvB,GAAI,QACW,kBAAC2E,GAAD,OAEJ,kBAAC,GAAD,CAAQ7V,KAAMA,EAAM8S,aAAcqC,EAAoBjC,gBAAiB9E,KAAK2G,qBAE/ElU,YAAQ9B,GAAYd,IAAIwB,GAAa,kBAAC,GAAD,CAAMmN,IAAKnN,EAAUvC,GAAIyT,MAAOlR,EAAUQ,YAAaP,QAASD,EAAUC,QAASf,YAAac,EAAUvC,GAAIoE,SAAU7B,EAAUvC,KAAOgY,MAEnL,kBAAC,GAAD,CAAgB/D,QAAS/C,KAAK0G,kBAAmBd,YAAa5F,KAAK7Q,MAAMyW,YAAaC,SA1EzE,KA0EmF7F,KAAK7H,MAAMoF,aAM3H,MAOMmK,GAAqB,CACzB9G,eAAgBvC,GAChB0I,mBC3G6BtW,IAAK,CAClCjB,KLDwC,6BKExCiB,WD+HakX,mBAAW/P,YA/BFzI,IAAK,CAC3BwB,WAAYI,EAAkB5B,GAC9ByC,KAAMqS,GAAe9U,GACrBoO,SAAUC,GAAuBrO,GACjC2X,WAAY3T,EAAehE,KA2BsBuY,GAnBhC,CAACE,EAAYC,EAAeC,KAC7C,MAAMnX,EAAaO,OAAOC,OAAON,YAAS+W,EAAWjX,aAC/CoX,EAAoBC,IAAUrX,EAAWS,OAAOO,GAAKA,EAAEE,YAAYoW,cAAcvZ,SAASkZ,EAAWhW,KAAKqW,gBAAiB,MAAO,eACxI,OAAO,mDAAKL,GACPE,GACAD,GAFL,IAGElX,WAAY,IAAIoX,EAAkB3W,OAAOO,GAAKA,EAAEL,YAAayW,EAAkB3W,OAAOO,IAAMA,EAAEL,aAaxEsG,CAAyDuO,KE7GpEvO,mBARSzI,IAAK,CAC3BoO,SAAUC,GAAuBrO,KAOpByI,CAhBiBO,IAC9B,MAAM+F,EAAO/F,EAAMsJ,SHJQ,EGImBtJ,EAAMoF,SAC9C2K,EAAYjC,GAAoB/H,GACtC,OAAO,yBAAK8C,UAAU,4BAA4BtJ,MAAO,CACvDwQ,iBCOWC,OAdiB,EAC9BzY,UACI,yBAAKgI,MAAO,CAChByP,QAAS,YACTrB,UAAW,SACX1B,SAAU,OACVzM,WAAY,IACZgM,MAAOjC,IAAO0G,UAEP1Y,G,qBCIM2Y,OAZQ,EACrBC,WACI,kBAAC,IAAD,CAAUC,OAAK,EAAC/J,IAAK8J,EAAOzC,UAAQ,EAACtD,MAAO,0BAAM7K,MAAO,CAC7DiM,MAAOjC,IAAO4B,QACd3L,WAAY,QAEG2Q,KCIFE,OAVI,EACjBxH,eACI,yBAAKA,UAAWA,EAAWmB,MAAM,6BAA6B3H,MAAM,KAAKE,OAAO,KAAK2H,KAAMX,IAAO0G,QAAShG,QAAQ,aACjH,0BAAMzQ,EAAE,gBAAgB0Q,KAAK,SAC7B,0BAAM1Q,EAAE,wI,sBCChB,MAAM8W,GAAa,EACjB3T,SACI,uBAAGiO,QAAS2F,GAAKA,EAAEjI,kBAAmBO,UAAWC,KAAQ0H,WAAYhE,OAAO,SAASiE,IAAI,sBAAsBC,KAAM/T,GACnH,kBAACgU,GAAD,OAOFC,GAAe,IAAM,4BAAQ/H,UAAWC,KAAQ+H,cAAe5D,IAAKC,EAAE,WAkC7D4D,OAhCS,EACtBzZ,OACAoC,OACAsX,WACApU,MACAqU,cAEA,MAAMC,EAAWC,YAAY7Z,GACvB8Z,EAAmB9Z,IAAS+Z,IAAgBC,KAAaL,GAAW,kBAACC,EAAD,CAAU1R,MAAO,CACzF2K,KAAMX,IAAO0G,WAEf,OAAO,kBAAC,IAAD,CAAUG,OAAK,EAACxF,QAASmG,EAAU3G,MAAO,yBAAKvB,UAAWC,KAAQwI,UACvD,yBAAKzI,UAAWC,KAAQsB,OACpB,0BAAM7K,MAAO,CAC7B8P,YAAa,QAEQ8B,GAEL,8BAAO1X,GACNkD,EAAM,kBAAC2T,GAAD,CAAY3T,IAAKA,IAAU,MAEtC,kBAACiU,GAAD,UCvCb,MCDMW,GAAc,CAAC,CAC1B5a,GAAI,aACJ6a,OAAQvE,IAAKC,EAAE,oBACfzV,MAAO,CAAC,CACNJ,KAAMC,IACNmC,KAAMwT,IAAKC,EAAE,YACbrJ,QAAS,IACR,CACDxM,KAAMoK,IACNhI,KAAMwT,IAAKC,EAAE,YACbrJ,QAAS,QACR,CACDxM,KAAMM,IACN8B,KAAMwT,IAAKC,EAAE,UACbrJ,QAAS,OAIA4N,GAAmB,CAACL,IAAe/P,IAAKC,IAAcC,IAAamQ,IAAOC,IAASC,IAAWC,KAE9FC,GAAgB,CAACH,IAASC,IAAWF,K,0BCTlD,MAAMK,WAA6BtK,YACjCC,YAAY1H,GACV2H,MAAM3H,GADW,KAOnBgS,QAAU5a,GAAQ,KAChB,MAAM,KACJC,EADI,mBAEJyL,EAFI,oBAGJmP,GACEpK,KAAK7H,MAET,GAAI3I,IAASwa,IACX/O,EAAmB,CACjBzL,OACAwM,QAASzM,EAAKiP,UAEX,CACL,MAAM6L,EAAU,CACdvb,GAAIS,EAAKT,GACT8C,KAAMrC,EAAKsC,aAAetC,EAAKqC,MAG7BqY,GAAcvb,SAASc,GACzB4a,EAAoB5a,EAAM6a,GAE1BpP,EAAmB,CACjBzL,OACAwM,QAASqO,MA9BE,KAmCnBC,cAAgB,KACdtK,KAAKC,SAAS,CACZsK,SAAUvK,KAAK7Q,MAAMob,UAEvBvK,KAAK7H,MAAMqS,mBAAmBxK,KAAK7H,MAAM3I,OArCzCwQ,KAAK7Q,MAAQ,CACXob,SAAS,GAuCbnJ,SACE,MAAM,MACJkH,EADI,KAEJ9Y,EAFI,MAGJI,EAHI,QAIJ6a,GACEzK,KAAK7H,MACT,OAAO,oCACK,kBAAC,GAAD,CAAgBmQ,MAAOA,IACtB1Y,EAAMC,IAAIN,IACnB,MAAMmb,EAAUC,YAAWnb,EAAMD,EAAMyQ,KAAK4K,QAAQ3V,IACpD,OAAO,kBAAC,GAAD,CAAiBuJ,IAAKjP,EAAKT,IAAMS,EAAKiP,IAAKhP,KAAMA,EAAM2Z,QAAS3Z,IAAS+Z,IAAgBha,EAAKC,KAAOA,EAAMoC,KAAMrC,EAAKsC,aAAetC,EAAKqC,KAAMsX,SAAUlJ,KAAKmK,QAAQ5a,GAAOuF,IAAK4V,MAEjLD,EAAU,kBAAC,IAAD,CAAUlC,OAAK,EAAC/J,IAAG,kBAAa8J,GAASvF,QAAS/C,KAAKsK,cAAe/H,MAAO,4BAAQvB,UAAWC,KAAQ4J,gBAClG7K,KAAK7Q,MAAMob,QAAUnF,IAAKC,EAAE,cAAgBD,IAAKC,EAAE,gBACxC,KAC5B,kBAAC,IAAD,CAASyF,OAAO,cAehCZ,GAAqBa,aAAe,CAClC9V,GAAI+V,IAAUC,OAAOC,YAERtT,mBAAQ,KAAM,CAC3BqD,sBACAmP,oBFzFiC,CAAC5a,EAAMwM,IAAY,CAACrG,EAAU+C,KAC/D,MAAMvJ,EAAQuJ,IACRyS,EAAehQ,IAAY3L,GAAM4L,SACjC1I,EAAiBuH,GAAsB9K,GAAOuD,eAC9C0Y,EAAqB1Y,EAAe2Y,UAAU9b,GAAQA,EAAKC,OAASA,GAC1E,IAAI8b,EAEAF,GAAsB,GACxBE,EAAgB5Y,EAAe0Y,GAC/BE,EAAcH,GAAc7W,KAAK0H,GACjCrG,EAASsG,GAAsBqP,MAE/BA,EAAgB,CACd9b,KAAMA,EACNwM,QAAS,CAACA,IAEZrG,EAASsF,GAAmBqQ,OEuEjB1T,CAGZsS,IChEYtS,mBAAQ,KAAM,CAC3BqD,uBADarD,CAvBiB,EAC9BqD,qBACAsQ,eAEA,MAAMC,EAAiB,EACrBhc,OACAwM,aACI,KACJf,EAAmB,CACjBzL,OACAwM,aAIJ,OAAO,oCACG,kBAAC,GAAD,CAAgBsM,MAAOiD,EAAS5B,SAC/B4B,EAAS3b,MAAMC,IAAIN,GAAQ,kBAAC,GAAD,CAAiBiP,IAAKjP,EAAKC,KAAMA,KAAMD,EAAKC,KAAMoC,KAAMrC,EAAKqC,KAAMsX,SAAUsC,EAAejc,S,QCXpI,MAAMkc,GAAkBtT,GAAS,kBAAC,IAAD,CAAYvG,KAAK,wBAAwB2Q,MAAO6C,IAAKC,EAAE,6CAA8C7V,KAAK,OAAO8V,SAAUnN,EAAMmN,SAAUoG,QAASvT,EAAMuT,QAASjb,MAAO0H,EAAM1H,QAEjN,MAAMkb,WAAqBhM,IAAMC,UAC/BC,YAAY1H,GACV2H,MAAM3H,GADW,KAWnByT,UAAY,KACV5L,KAAKC,SAAS,CACZjK,MAAM,EACN5E,OAAQ,MAdO,KAiBnBya,SAAW,CAACC,EAAGvL,KACbP,KAAK+L,aACL/L,KAAKC,SAAS,CACZ+L,SAAUzL,EAAM0L,cAChBjW,MAAM,KArBS,KAwBnBkW,UAAY,CAACJ,EAAGvL,KACdP,KAAKC,SAAS,CACZ7O,OAAQmP,EAAMoE,OAAOlU,OACpBuP,KAAK+L,aA3BS,KA6BnBI,yBAA2B,IAAMvC,GAAiBxY,OAAO5B,IACvD,MAAM4c,EAAWjR,IAAY3L,GAC7B,OAAOwQ,KAAK7Q,MAAMS,OAASoQ,KAAK7Q,MAAMS,MAAMwc,EAASC,gBACpDxc,IAAIL,IACL,MAAM4c,EAAWjR,IAAY3L,GACvB8c,EAAYC,YAAoB/c,GAChCgd,EAAWxM,KAAK7Q,MAAMS,MAAMwc,EAASC,cACrC5B,EAAU+B,EAAS7Z,OAAS2Z,EAC5B1c,EAAQoQ,KAAK7Q,MAAMsd,WAAW1O,IAAIqO,EAAStd,IAAM0d,EAAWA,EAASE,MAAM,EAAGJ,GACpF,OAAO,kBAAC,GAAD,CAAsB9N,IAAKhP,EAAMA,KAAMA,EAAM8Y,MAAO8D,EAASO,YAAa/c,MAAOA,EAAO4a,mBAAoBxK,KAAK+L,WAAYtB,QAASA,MAtC5H,KAwCnBmC,qBAAuB,IAAMlD,GAAY7Z,IAAI0b,GAAY,kBAAC,GAAD,CAAkB/M,IAAK+M,EAASzc,GAAIyc,SAAUA,KAxCpF,KAyCnBsB,cAAgB,IAAM7M,KAAKmM,2BAA2BW,OAAO9M,KAAK4M,wBAzC/C,KA0CnBb,WAAalX,UACX,GAAIrF,EAAM,CACR,MAAMid,EAAazM,KAAK7Q,MAAMsd,WAE1BA,EAAW1O,IAAIvO,GACjBid,EAAWvP,OAAO1N,GAElBid,EAAWM,IAAIvd,GAGjBwQ,KAAKC,SAAS,CACZwM,oBAGFzM,KAAKC,SAAS,CACZwM,WAAY,IAAIO,MAIpB,IAAIC,EAAc,YAEd,IAAIjN,KAAK7Q,MAAMsd,WAAWtb,UAAUwB,SACtCsa,GAAe,QAAU,IAAIjN,KAAK7Q,MAAMsd,WAAWtb,UAAUiB,KAAK,UAGpE,MAAMhB,EAAS4O,KAAK7Q,MAAMiC,OAAX,WAAwB4O,KAAK7Q,MAAMiC,QAAW,GAC7D4O,KAAK4K,QAAQ3V,GAAGC,IAAIC,SAASC,IAA7B,sBAAgDhE,GAAhD,OAAyD6b,IAAejY,KAAK8F,GAAYkF,KAAKC,SAAS,CACrGrQ,MAAOkL,KACLzF,MAAME,QAAQD,QApElB0K,KAAK7Q,MAAQ,CACX6c,SAAU,KACVhW,MAAM,EACNyW,WAAY,IAAIO,IAChBpd,WAAOyG,EACPjF,OAAQ,IAkEZgQ,SACE,OAAO,oCACK,kBAACqK,GAAD,CAAiBhb,MAAOuP,KAAK7Q,MAAMiC,OAAQkU,SAAUtF,KAAKkM,UAAWR,QAAS1L,KAAK6L,WACnF,kBAAC,KAAD,CAAS7K,UAAU,0BAA0BhL,KAAMgK,KAAK7Q,MAAM6G,KAAMsC,QAAS0H,KAAK4L,UAAWI,SAAUhM,KAAK7Q,MAAM6c,SAAUkB,aAAc,CAClJC,WAAY,OACZC,SAAU,UACTC,gBAAiB,CAClBF,WAAY,OACZC,SAAU,OACT1V,MAAO,CACRgD,OAAQ,QACP4S,WAAY,CACb5V,MAAO,CACL8C,MAAO,UAER+S,kBAAkB,EAAMC,qBAAqB,EAAMC,qBAAqB,GAC7D,kBAAC,IAAD,CAAMC,SAAU,SAAU1N,KAAK6M,oBAYnDlB,GAAaZ,aAAe,CAC1B9V,GAAI+V,IAAUC,OAAOC,YAERS,U,sBC5GR,MAAMgC,GAAe,EAC1B/b,OACAE,cACA8b,gBACAC,yBAUO,6BAAS7M,UAAWC,KAAQ6M,SACzB,yBAAK9M,UAAWC,KAAQ8M,kBACpB,kBAAC,IAAD,CAAY/M,UAAWC,KAAQqH,MAAO1W,KAAK,wBAAwB2Q,MAAO6C,IAAKC,EAAE,mBAAoB7V,KAAK,OAAO8V,SAV3G,CAACwG,EAAGpD,KACtBkF,EAAclF,EAAE/D,OAAOlU,QAS6HA,MAAOmB,IAC/I,kBAAC,IAAD,CAAeoP,UAAWC,KAAQnP,YAAaF,KAAK,8BAA8B2Q,MAAO6C,IAAKC,EAAE,yBAA0BC,SAP9G,CAACwG,EAAGpD,KAC5BmF,EAAoBnF,EAAE/D,OAAOlU,QAMsIA,MAAOqB,KAElK,yBAAKkP,UAAWC,KAAQ+M,cACpB,kBAAC,GAAD,QAUhBL,GAAa1L,aAAe,CAC1BrQ,KAAM,GACNE,YAAa,IAGf,MAQM4V,GAAqB,CACzBkG,c9BlBiCnd,IAAK,CACtCjB,KF9B4B,iBE+B5BiB,U8BiBAod,oB9BfuCpd,IAAK,CAC5CjB,KFjCkC,uBEkClCiB,W8BeamH,mBAZSzI,IACtB,MAAM8e,EAAoBpd,YAASoJ,GAAsB9K,IACzD,MAAO,CACLyC,KAAMqc,EAAkBrc,KACxBE,YAAamc,EAAkBnc,cAQK4V,GAAzB9P,CAA6C+V,I,iECvDrD,MAAMO,GAAY,IAAM,yBAAKxT,OAAO,KAAK0H,QAAQ,YAAY5H,MAAM,KAAK2H,MAAM,8BAC7E,0BAAMxQ,EAAE,wOAAwO0Q,KAAK,aAEhP8L,GAAe,IAAM,yBAAKzT,OAAO,KAAK0H,QAAQ,YAAY5H,MAAM,KAAK2H,MAAM,6BAA6BzK,MAAO,CAC1HoT,OAAQ,kBAGF,0BAAMnZ,EAAE,kIAAkI0Q,KAAK,UAAU+L,SAAS,UAAUC,UAAU,sBAEjLC,GAAU,IAAM,yBAAKnM,MAAM,6BAA6BzH,OAAO,KAAK0H,QAAQ,YAAY5H,MAAM,KAAK6H,KAAMX,IAAO0G,SACrH,0BAAMzW,EAAE,gBAAgB0Q,KAAK,SAC7B,0BAAM1Q,EAAE,wD,0BCPhB,MAAM4c,WAAqB3O,YAAW,eAAD,oBACnC4O,UAAY1f,GAAM,IAAMkR,KAAK7H,MAAMqW,UAAU1f,GAE7C2f,sBACE,MAAM,oBACJ3P,EADI,UAEJtK,EAFI,cAGJka,GACE1O,KAAK7H,MACHwW,EAAWna,EAAU1F,GACrB8f,EAAc,CAClB3Z,GAAI+K,KAAK4K,QAAQ3V,GACjB4Z,SAAU7O,KAAK7H,MAAM0W,SACrBC,WAAY9O,KAAK7H,MAAM2W,WACvBC,UAAW/O,KAAK7H,MAAM4W,WAGxB,OAAQJ,GACN,KAAKnb,KAED,OAAO,kBAAC,KAAD,CAAiBwb,gBAAiBN,EAAeG,SAAUD,EAAYC,WAGlF,KAAKpb,KACH,OAAO,kBAAC,KAAD,eAAkBqL,oBAAqBA,EAAqBmQ,QAASP,GAAmBE,IAEjG,QACE,OAAO,kBAAC,KAAD,CAAkBF,cAAeA,EAAeQ,YAAaP,EAAUE,SAAUD,EAAYC,SAAUjE,QAASgE,EAAY3Z,MAIzImM,SACE,MAAM,UACJ5M,EADI,QAEJ8D,GACE0H,KAAK7H,MACHwW,EAAWna,EAAU1F,GAC3B,OAAO,oCACM6f,GAAY,kBAAC,IAAD,CAAOrW,QAASA,EAASyD,SAAS,MAAMoT,OAAK,GAClD,kBAAC,IAAD,KAAa3a,EAAU5C,MACvB,kBAAC,IAAD,KACKoO,KAAKyO,uBAEV,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQW,WAAS,EAACrM,QAASzK,GACtB8M,IAAKC,EAAE,WAEZ,kBAAC,IAAD,CAAQgK,SAAO,EAACtM,QAAS/C,KAAKwO,UAAUG,IACnCvJ,IAAKC,EAAE,iBAoB5CkJ,GAAaxD,aAAe,CAC1B9V,GAAI+V,IAAUC,QAEDsD,UC9ER,MAEMe,GAAuC,GAiB7C,MAAMC,GAA2BpgB,GAASA,EAAMqgB,qBClB1CC,GAA4Bhf,IAAK,CAC5CjB,KDFwC,6BCGxCiB,UC8GamH,mBAnBSzI,IAAK,CAC3B2P,oBAAqBI,GAAgC/P,GACrDqF,UAAW+a,GAAyBpgB,GACpCwE,WAAYD,GAAevE,GAC3BugB,uBAAwB7b,GAAoB1E,GAC5CwgB,mBAAoB5b,GAAgB5E,KAcE,CACtCygB,0BD7GyC,MACzCpgB,KDL0C,iCEkH1CqgB,wBAAyBJ,GACzBK,clDjH6B1e,IAAM,CACnC5B,KDA6B,kBCC7B4B,WkDgHA2e,iBAAkBtb,IAJLmD,CAlGQO,IACrB,MAAO6X,EAAaC,GAAkBC,oBAAS,IACxC/b,EAASgc,GAAcD,mBAAS/X,EAAMuX,wBACvCU,EAAMC,iBAAO,MAEbC,EAAa,IAAML,GAAe,GAElCM,EAAgB,KACpBD,IACAnY,EAAMyX,6BAsDR,OAAO,oCACG,0BAAMQ,IAAKA,GACP,kBAAC,IAAD,CAAQrN,QAAS,IAAMkN,GAAe,IACjC7K,IAAKC,EAAE,cACR,kBAAC,KAAD,QAGP2K,GAAe,kBAAC,IAAD,CAASQ,eAAgBF,EAAYG,UAAWL,EAAKM,OAAO,EAAMC,UAAU,gBACpF,kBAAC,KAAD,CAAiBjZ,MAAO,CACpC8C,MAAO,SACN7G,WAAYwE,EAAMxE,WAAYid,iBA7Db9hB,IACtBqJ,EAAM0X,wBAAwB1X,EAAMxE,WAAWY,KAAKC,GAAaA,EAAU1F,KAAOA,KA4DZ+hB,YAAa1Y,EAAMwX,sBAEhFxX,EAAM3D,UAAY,kBAAC,GAAD,CAAcsK,oBAAqB3G,EAAM2G,oBAAqBtK,UAAW2D,EAAM3D,UAAWka,cAAeva,EAAQgE,EAAM3D,UAAU1F,KAAO,GAAI+f,SA3DnJ,EACpBK,cACAtf,YAEAugB,EAAW,2BAAKhc,GAAN,IACR,CAAC+a,GAActf,MAsD+Kkf,WAlD1K,EACtBI,cACA4B,sBAEA,MACMC,GADU5c,EAAQ+a,IAAgB,IAChB9d,OAAO7B,IAASuhB,EAAgBpiB,SAASa,EAAKT,KAChE8N,EAAOmU,EAAQpe,OAASoe,EAAU,GACxCZ,EAAW,2BAAKhc,GAAN,IACR,CAAC+a,GAActS,MA0C4MmS,UAtCxM,EACrBG,cACA8B,cAEA,MAAMC,EAAU9c,EAAQ+a,IAAgB,GAClCgC,EAAgBF,EAAQnhB,IAAIf,GAAMmiB,EAAQ1c,KAAKhF,GAAQA,EAAKT,KAAOA,IACzEqhB,EAAW,2BAAKhc,GAAN,IACR,CAAC+a,GAAcgC,MA+BuO5Y,QAASiY,EAAe/B,UA3B/P1f,IACjB,MAAMqiB,EAAchd,EAAQrF,GAExBqiB,GAAeA,EAAYxe,OAC7BwF,EAAM2X,cAAc,CAClBhhB,KACA2B,MAAO,IAAI0gB,KAGbhZ,EAAM4X,iBAAiBjhB,GAGzByhB,OAe4S,Q,sBCvEhT,MAAMa,GAAe,CAACjZ,EAAOyS,KAC3B,MAAOyG,EAAmBC,GAAwBpB,oBAAS,IACpDqB,EAAqBC,GAA0BtB,oBAAS,IACxDuB,EAAaC,GAAkBxB,mBAAS,OACzC,GACJphB,EADI,KAEJ8C,EAFI,YAGJE,EAHI,OAIJS,EAJI,MAKJmF,EALI,gBAMJ1E,EANI,QAOJ1B,EAPI,yBAQJqgB,EARI,sBASJC,GACEzZ,EAEE0Z,EAAsB,IAAML,GAAwBD,GAEpDO,EAAoB,IAAMR,GAAsBD,GAMhDU,EAAa7gB,OAAOqJ,OAAO,GAAI7C,EAAM4Q,MAAO,CAChD0J,OAAQ,UACRC,WAAY,OACZ5N,IAAK,QAEDnC,EAAW5Q,EAAUsR,KAAOsP,KAElC,GAAIT,EACF,OAAO,kBAAC,IAAD,CAAU3O,GAAI2O,IAGvB,MAAMU,EAA2Bnf,EAAkBoS,IAAKC,EAAE,oBAAsBD,IAAKC,EAAE,oBAOjF+M,EAA8B9gB,EAAU8T,IAAKC,EAAE,oBAAsBD,IAAKC,EAAE,kBAO5EgN,EAAYC,sBAClB,OAAO,oCACG,yBAAKtR,UAAWC,KAAQsR,UACpB,0BAAM7a,MAAOqa,GAAangB,GAC1B,yBAAKoP,UAAWC,KAAQuR,SACpB,yBAAKxR,UAAWC,KAAQwR,aAAc1P,QAAS4O,GAC3C,kBAACzP,EAAD,CAAUxK,MAAO,CAC7B2K,KAAMX,IAAO0G,YAGL,yBAAKpH,UAAWC,KAAQyR,OACnBngB,EAAOogB,OAAS,kBAAC,IAAD,CAAM3R,UAAWC,KAAQ2R,SAAU9P,GAAE,WAAMhU,EAAN,UAC9C,kBAAC,IAAD,KAASsW,IAAKC,EAAE,UACV,KACb9S,EAAOsgB,OAAS,kBAAC,IAAD,CAAQ9P,QAAS8O,GACzBzM,IAAKC,EAAE,UACA,KAChB,kBAAC,GAAD,MACA,0BAAM+K,IAAKiC,GACP,kBAAC,IAAD,CAAQtP,QAAS+O,GACb,kBAAC5D,GAAD,MACA,0BAAMxW,MAAO,CAC7Bob,WAAY,QAES1N,IAAKC,EAAE,YAKvBgM,GAAqB,kBAAC,IAAD,CAASZ,UAAW4B,EAAW1B,UAAU,eAAeH,eAAgBsB,GACtF,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAUvJ,OAAK,EAAChG,MAAO6P,EAA6BrP,QApCnD,KAC7B4O,IACAG,OAmC4B,kBAAC,IAAD,CAAUvJ,OAAK,EAAChG,MAAO4P,EAA0BpP,QA5CnD,KAC1B6O,IACAE,OA2C4B,kBAAC,IAAD,CAAUvJ,OAAK,EAAChG,MAAO6C,IAAKC,EAAE,UAC1B,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAUkD,OAAK,EAAChG,MAAO6C,IAAKC,EAAE,oBAAqBtC,QAhErE,IAAM2O,EAAe,GAAD,OAAI5iB,EAAJ,mBAiEF,kBAAC,IAAD,CAAUyZ,OAAK,EAAChG,MAAO6C,IAAKC,EAAE,qBAAsBtC,QA/DxE,IAAM2O,EAAe,GAAD,OAAI5iB,EAAJ,uBAsE3BkE,EAAkB,yBAAKgO,UAAU,wBAAwBtJ,MAAOxG,OAAOqJ,OAAO,CACrFwY,WAAY,MACZlR,cAAe,OACdnK,EAAM5F,YAAcA,EAEnB,GAFiC,CACnC6R,MAAO,UAEQ7R,GAAesT,IAAKC,EAAE,mBAClB,KACZvW,EAAK,kBAAC,KAAD,CAAemG,GAAI2V,EAAQ3V,GAAInG,GAAIA,EAAIU,KAAK,YAAYwG,KAAMub,EAAqByB,eAAgBnB,IAA0B,OAe/IT,GAAanP,aAAe,CAC1BrQ,KAAM,GACNE,YAAa,GACbR,SAAS,EACT0B,iBAAiB,GAEnBoe,GAAarG,aAAe,CAC1B9V,GAAI+V,IAAUC,QAiCDrT,mBA9BSzI,IACtB,MAAML,EAAKqE,EAAehE,GACpBkC,EAAYR,YAASD,EAAkBzB,EAAOL,IACpD,MAAO,CACLA,KACA8C,KAAMP,EAAUQ,YAChBC,YAAaT,EAAUU,mBACvBW,eAAgB1B,EAAmB7B,GACnC6D,gBAAiBK,EAA4BlE,GAC7CmC,QAASD,EAAUC,QACnBiB,OAAQ1B,YAASQ,EAAUkB,UAoBS,KAhBrB,CAACqV,EAAYC,EAAeC,KAC7C,MAAM,GACJhZ,EADI,QAEJwC,EAFI,gBAGJ0B,GACE4U,GACE,SACJjS,GACEkS,EACJ,OAAO,uCAAKD,GACPE,GADL,IAEE6J,yBAA0B,IAAMhc,EAASoH,GAAejO,GAAKwC,IAC7DsgB,sBAAuB,IAAMjc,ExClJgB,CAC/CnG,KdpB0C,+BcqB1CiB,OwCgJsEuC,OAIzD4E,CAA2CwZ,I,QCxK1D,MAAM1Z,GAAQ,CACZ4Q,MAAO,CACLvM,SAAU,WACVqI,SAAU,GACVzM,WAAY,IACZgM,MAAOjC,IAAOuR,MACdC,SAAU,IAEZphB,YAAa,CACXsS,SAAU,GACVT,MAAOjC,IAAO4B,UAiBH6P,OAbE,EACfC,UAEO,yBAAKpS,UAAU,mBAAmBtJ,MAAO,CAC9CyP,QAAS,uBAEAiM,EAAO,kBAAC,GAAD,CAAc1b,MAAOA,KAAY,kBAAC,GAAD,CAAcA,MAAOA,M,sDCZ1E,MAAM2b,WAAsBzT,YAG1BC,YAAY1H,EAAOyS,GACjB9K,MAAM3H,GADoB,KAF5Bmb,kBAAoB,KAEQ,KAK5BC,mBAAqBC,IAMnB,MAAMC,EAAgBzT,KAAK7H,MAAM5I,OAASikB,EAAUjkB,KAC9CmkB,EAAiBF,EAAU1f,cAAgBkM,KAAK7H,MAAMrE,YACtD6f,EAAM9iB,YAASmP,KAAK7H,MAAMyb,eAC1BC,EAAUhjB,YAAS2iB,EAAUI,eAC7BE,EAAaH,EAAI7kB,KAAO+kB,EAAQ/kB,IAAM6kB,EAAII,aAAeF,EAAQE,WACvE,OAAON,IAAkBK,GAAcJ,IAhBb,KAkB5BM,aAAeR,IACb,GAAIS,KAAgCjU,KAAK7H,MAAM5I,KAAMyQ,KAAK7H,MAAMyb,gBAAkB5T,KAAKuT,mBAAmBC,GAAY,CACpH,MAAMK,EAAUhjB,YAAS2iB,EAAUI,eAC7BM,EAAalU,KAAK7H,MAAMyb,cACxBO,EAAgBD,EAAWH,aAAeF,EAAQE,YAAcG,EAAWH,aAAe/T,KAAK7H,MAAM5I,KAAKC,MAE5G2kB,GAAiBnU,KAAK7H,MAAMrE,cAAgB0f,EAAU1f,eACxDmgB,KAAsBjU,KAAK7H,MAAM5I,KAAMskB,EAAQE,YAAc/T,KAAK7H,MAAM5I,KAAKC,MAC7EykB,KAAmBjU,KAAK7H,MAAM5I,KAAMyQ,KAAK7H,MAAMyb,cAAe,CAC5DQ,YAAapU,KAAKsT,kBAClBS,WAAYI,EAAgBD,EAAWH,WAAa,UA5BhC,KAkD5BM,cAAgB,IAAMrU,KAAK7H,MAAMyb,cAAcG,YAAc/T,KAAK7H,MAAM5I,KAAKC,KAhD3EwQ,KAAK/K,GAAK2V,EAAQ3V,GAgCpB4R,oBA5CwB5R,MA6CtB+K,KAAKsT,mBA7CiBre,EA6CqB+K,KAAK/K,GA5C3C,CACLqf,QAASC,YAAWtf,GACpBuf,KAAMvf,EAAGC,IAAIC,SAASsf,eAAeC,gBA4CjCT,KAAgCjU,KAAK7H,MAAM5I,KAAMyQ,KAAK7H,MAAMyb,gBAC9DK,KAAmBjU,KAAK7H,MAAM5I,KAAMyQ,KAAK7H,MAAMyb,cAAe,CAC5DQ,YAAapU,KAAKsT,kBAClBS,WAAY/T,KAAK7H,MAAMgc,cAAgBnU,KAAKqU,gBAAkB,KAC9DM,QAAS3U,KAAK7H,MAAMwc,UAK1BC,mBAAmBpB,GACjBxT,KAAKgU,aAAaR,GAKpBpS,SACE,MAAM,QACJH,EADI,KAEJ1R,EAFI,cAGJqkB,EAHI,MAIJlc,GACEsI,KAAK7H,MAET,OAD0B8b,KAAgC1kB,EAAMqkB,GACrC,yBAAK9kB,GAAI+lB,YAAiBtlB,EAAKT,IAAK4I,MAAOA,IAAY,yBAAKsJ,UAAWC,EAAQ6T,SAC7F1P,IAAKC,EAAE,6CAMxBgO,GAActI,aAAe,CAC3B9V,GAAI+V,IAAUC,QAWhBoI,GAAcpR,aAAe,CAC3BvK,MAAO,GACPnI,KAAM,GACNuE,YAAa,GACb6gB,QAAS,GACTf,cAAe,IAEFP,U,sBCjGf,MAAM0B,WAA2BpV,IAAMC,UACrCC,YAAY1H,GACV2H,MAAM3H,GACN6H,KAAK7Q,MAAQ,CACX6lB,YAAY,GAIhBC,kBAAkB3f,EAAO4f,GACvBlV,KAAKC,SAAS,CACZ+U,YAAY,IAEdzf,QAAQC,IAAI,UAAWF,GACvBC,QAAQC,IAAI,SAAU0f,GAGxB9T,SACE,OAAIpB,KAAK7Q,MAAM6lB,WACN,uBAAGhU,UAAWC,KAAQkU,WACf,0BAAMnU,UAAWC,KAAQ0B,MACrB,kBAAC2L,GAAD,OAEJ,0BAAMtN,UAAWC,KAAQnL,SACpBsP,IAAKC,EAAE,qDAKrBrF,KAAK7H,MAAM6J,UAQP+S,U,+BC7BAK,OATS,EACtBC,mBAEOA,EAAgB,yBAAKrU,UAAWC,KAAQqU,iBAAkBD,GAAuB,K,4CCW3EE,OAXU,EACvBxS,aACI,4BAAQvT,KAAK,SAASwR,UAAWC,KAAQuU,iBAAkBzS,QAASA,EAASuF,MAAOlD,IAAKC,EAAL,gBAClF,kBAAC,KAAD,CAAY3N,MAAO,CACvB2K,KAAMX,IAAO+T,WCJjB,MAeM/N,GAAqB,CACzBxL,0BAEatE,mBAAQ,KAAM8P,GAAd9P,CAlBS,EACtB8d,SACAxZ,2BAIO,yBAAK8E,UAAWC,KAAQqU,iBACrB,kBAAC,GAAD,CAAkBvS,QAHH,IAAM7G,EAAsBwZ,OCJvD,MAAMC,GAAiB,CACrB,KAAQP,GACR,CAAChnB,GAAOwnB,IAIJC,GAAalW,IAAMmW,WAAW,CAAC,EAIlC1F,KAAS,IAJyB,cACnC2F,EADmC,MAEnCzN,GAES,EADN0N,EACM,0CACT,MAAMC,EAAUN,GAAeI,GAC/B,OAAO,yBAAK/U,UAAWC,KAAQiV,eAAgB9F,IAAKA,GACtC,uBAAGpP,UAAWC,KAAQkV,WAAY7N,GACjC2N,EAAU,kBAACA,EAAYD,GAAW,QAGnDH,GAAWhkB,YAAc,aAKV+F,mBAAQ,KAAM,KAAM,KAAM,CACvCke,YAAY,GADCle,CAEZie,I,qFClBH,MAAMO,GAAW,CACf/T,KAAMX,IAAO0G,SAmFAiO,OAhFWle,IACxB,MAAO6T,EAAUsK,GAAepG,mBAAS,OACnC,KACJ3gB,EADI,cAEJqkB,EAFI,mBAGJ2C,EAHI,GAIJthB,EAJI,WAKJ8e,GACE5b,EACEqe,EAAgBC,YAAoBlnB,EAAKC,MAEzCknB,EAAc,KAClBC,IACAJ,EAAmBC,EAAgB/c,IAAeH,MAG9Csd,EAAc,KAClBD,IACAJ,EAAmBC,EAAgB9c,IAAcH,MAG7Csd,EAAY,KAChBF,IACAJ,EAAmB/c,MAefmd,EAAc,IAAML,EAAY,MAEhC9mB,EAAOokB,EAAcpkB,MAAQD,EAAKC,KAClCsnB,GAAaC,aAAcvnB,KAAUwnB,aAAexnB,IAASA,IAASynB,MAAkBznB,IAAS0nB,KACjGC,EAA0Bhf,EAAMif,aAAehS,IAAKC,EAAL,oCAA6CD,IAAKC,EAAL,oCAE5FgS,EAAkB,IAAM,oCACnBtD,IAAexa,KAASwa,IAAera,KAAe,kBAAC,IAAD,CAAU6O,OAAK,EAAChG,MAAO6C,IAAKC,EAAE,iBAAkBtC,QAAS6T,EAAajU,KAAM,kBAAC,KAAD,CAAWjL,MAAO0e,OACpJrC,IAAeza,KAAgBya,IAAeta,KAAgB,kBAAC,IAAD,CAAU8O,OAAK,EAAChG,MAAO6C,IAAKC,EAAE,iBAAkBtC,QAAS2T,EAAa/T,KAAM,kBAAC,KAAD,CAAWjL,MAAO0e,OApB1IkB,YAAW/nB,EAAKC,OAqBdukB,IAAeva,KAAO,kBAAC,IAAD,CAAU+O,OAAK,EAAChG,MAAO6C,IAAKC,EAAE,eAAgBtC,QAAS8T,EAAWlU,KAAM,kBAAC,KAAD,CAASjL,MAAO0e,QAG7I,OAAOmB,aAAkBhoB,EAAMqkB,GAAiB,oCACtC,kBAAC,IAAD,CAAQ4D,OAAK,EAACpI,WAAS,EAACrM,QAvBV,CAAC+I,EAAGvL,IAAU+V,EAAY/V,EAAM0L,gBAwB1C,kBAACiC,GAAD,OAEHlC,GAAY,kBAAC,KAAD,CAAShW,KAAMyhB,QAAQzL,GAAW1T,QAASqe,EAAa3K,SAAUA,GACvE,kBAAC,IAAD,KACK8K,GAAa,oCACN,kBAACO,EAAD,MACA,kBAAC,IAAD,OAER,kBAAC,IAAD,CAAU9O,OAAK,EAAC5F,KAAM,kBAAC,KAAD,CAAYjL,MAAO,CACvD2K,KAAM,aACDE,MAAO6C,IAAKC,EAAE,0BAA2B,CAC9CqS,QAASC,YAAWpoB,EAAKC,QACvBqZ,KAAM+O,aAAQroB,EAAM0F,GAAK0P,OAAO,WACpB,kBAAC,IAAD,CAAU4D,OAAK,EAAC5F,KAAM,kBAACwL,GAAD,MAAkB5L,MAAO4U,EAAyBpU,QAnC5D,KAChC5K,EAAM0f,iBAEW,OAAb7L,GACF2K,UAkCQ,M,sBChFd,MAAMjf,GAAQ,CACZogB,gBAAiB,CACf1Q,UAAW,OACX1M,OAAQ,SAEVqd,KAAM,CACJjN,OAAQ,eACRpQ,OAAQ,MACRsd,OAAQ,OACRxW,gBAAiBE,IAAOuW,UAI5B,MAAMC,WAAmBtY,YACvBwB,SACE,MAAM+W,EAAWC,aAAMpY,KAAK7H,MAAM5I,MAClC,OAAO,yBAAKyR,UAAU,yBACV,wBAAItJ,MAAOA,GAAMqgB,OACjB,yBAAKrgB,MAAOA,GAAMogB,iBACd,kBAAC,KAAD,CAA0B7iB,GAAI+K,KAAK4K,QAAQ3V,GAAI1F,KAAMyQ,KAAK7H,MAAM5I,KAAMC,KAAMwQ,KAAK7H,MAAM5I,KAAKC,KAAKyY,cAAenZ,GAAIqpB,EAAUT,QAAQ,iBAO1JQ,GAAWnN,aAAe,CACxB9V,GAAI+V,IAAUC,OAAOC,YAKRgN,U,sBC3BAG,OANK,IACX,yBAAKrX,UAAWC,KAAQqX,QACrB,kBAAC,IAAD,OCWGC,OAdIC,IACjB,IAAIC,OAAWpiB,EACXqiB,OAAYriB,EAChB,MAAO,IAAIsiB,KACLF,GAAYE,EAAKhmB,SAAW8lB,EAAS9lB,QAAUgmB,EAAKC,MAAM,CAACC,EAAKC,IAAMD,IAAQJ,EAASK,MAI3FL,EAAWE,EACXD,EAAYF,KAAMG,IAJTD,I,sBCaN,MAAMK,WAAanZ,YAOxBC,YAAY1H,EAAOyS,GACjB9K,MAAM3H,GADoB,KAN5BhJ,MAAQ,CACN6pB,YAAY,EACZC,cAAc,EACdC,gBAAgB,GAGU,KA0B5BC,aAAe,CAACvF,EAAezf,KAC7B,IAAKjD,OAAO8C,KAAKG,GAASxB,OACxB,OAAOihB,EAIT,MAAMwF,EAAUxF,EAAc1V,KAAKrO,IAAIwpB,GAAG,eAAUA,IAE9CC,EAAa1F,EAAc2F,QAAQ1pB,IAAIwpB,GAAG,eAAUA,IAEpDG,EAAa5F,EAAczf,QAAQtE,IAAIwpB,GAAG,eAAUA,IAkB1D,OAhBAnoB,OAAO8C,KAAKG,GAASkF,QAAQ6V,IAC3B,GAAI/a,EAAQ+a,GAAc,CACxB,IAAIuK,GAAiB,EACrB,CAACL,EAASE,EAAYE,GAAYngB,QAAQqgB,GAAoBA,EAAiBtoB,OAAOioB,GAAOA,EAAI7kB,YAAc0a,GAAa7V,QAAQggB,IAClII,GAAiB,EACjBJ,EAAIzpB,MAAQuE,EAAQ+a,MAGjBuK,GACHD,EAAWllB,KAAK,CACdE,UAAW0a,EACXtf,MAAOuE,EAAQ+a,QAKhB,2BAAK0E,GAAZ,IACE1V,KAAMkb,EACNG,QAASD,EACTnlB,QAASqlB,KAzDe,KA4D5BG,aAAepB,GAAW,IAAMqB,QA5DJ,KA6D5BtG,kBAAoB,KA7DQ,KA8D5BuG,mBAAqB,KACnB,MAAM9F,EAAa/T,KAAKqU,gBAClBT,EAAgB5T,KAAK8Z,+BAA+B9Z,KAAK7H,MAAMyb,cAAe5T,KAAK7H,MAAM5I,KAAKC,KAAMukB,GAE1G,IAAKH,EACH,OAAO,yBAAK5S,UAAWC,KAAQ6T,SAChB1P,IAAKC,EAAE,uBAIxB,MAAM0U,EAAmB/Z,KAAK7H,MAAM5I,KAAKyqB,eAAiBha,KAAKia,UAAUC,QAAQC,aLxFjD,GKwFuFC,GACjHjiB,EAAK,2BAAQ6H,KAAK7H,OAAb,IACTgc,eAAgB3lB,EAAWwR,KAAK7H,MAAM4d,eACtCnC,gBACA3S,aACAvJ,MAAOsI,KAAKqa,wBAAwBN,EAAkB/Z,KAAKsa,WAAata,KAAKsa,WAAWC,aAAe,KAAM/rB,EAAWwR,KAAK7H,MAAM4d,gBAAkBpnB,EAAYqR,KAAK7H,MAAM4d,kBAG9K,OAAQhC,GACN,KAAKxK,IACL,KAAKhQ,IACL,KAAKD,IAED,OAAO,qCACS0G,KAAK7Q,MAAM+pB,gBAAkB,yBAAKxhB,MAAOS,EAAMT,OACzC,kBAAC,GAAD,OAER,kBAAC,KAAD,CAAqBzC,GAAI+K,KAAK/K,GAAI2e,cAAe5T,KAAKwa,qBAAqB5G,EAAezb,EAAMrE,aAAc2mB,kBAAmBza,KAAKya,kBAAmBC,cAAc,EAAMhjB,MAAOS,EAAMT,SAI5M,KAAK8B,IAED,GAAIrB,EAAM5I,KAAKC,OAASgK,IAAK,CAG3B,MAAMmhB,EAAWxiB,EAAMyb,cAAc+G,SAAS9qB,IAAIwpB,GAC5CA,EAAIuB,MAAMlsB,SAAS,aAAe2qB,EAAIuB,MAAMlsB,SAAS,SAChDsR,KAAKwa,qBAAqBnB,EAAKlhB,EAAMrE,aAGvCulB,GAETlhB,EAAMyb,cAAN,2BAA2Bzb,EAAMyb,eAAjC,IACE+G,kBAMFxiB,EAAMyb,cAAgB5T,KAAKwa,qBAAqBriB,EAAMyb,cAAezb,EAAMrE,aAM7E,OAHAqE,EAAMwc,QAAN,2BAAqBxc,EAAMwc,SAA3B,IACEkG,WAAW,IAEN,kBAAC,GAAkB1iB,GAG9B,QAGI,OADAA,EAAMyb,cAAgB5T,KAAKwa,qBAAqBriB,EAAMyb,cAAezb,EAAMrE,aACpE,kBAAC,GAAkBqE,KA5HN,KAgI5BsiB,kBAAoB,KAClBza,KAAKC,SAAS,CACZiZ,gBAAgB,KAlIQ,KAqI5BrB,eAAiB,KACf7X,KAAKC,SAAS,CACZ+Y,YAAahZ,KAAK7Q,MAAM6pB,YACvBhZ,KAAK7H,MAAM2iB,qBAAqB9a,KAAK7H,MAAM5I,KAAKT,MAxIzB,KA0I5BynB,mBAAqB/mB,IACfA,IAASwQ,KAAKqU,kBAIlBJ,KAAsBjU,KAAK7H,MAAM5I,KAAMyQ,KAAKqU,iBAC5CrU,KAAK7H,MAAMoe,mBAAmBvW,KAAK7H,MAAMyb,cAAc9kB,GAAIU,KAhJjC,KAkJ5B6kB,cAAgB,IAAMrU,KAAK7H,MAAMyb,cAAcG,YAAc/T,KAAK7H,MAAM5I,KAAKC,KAlJjD,KAmJ5B+nB,kBAAoB,IAAMtD,KAAgCjU,KAAK7H,MAAM5I,KAAMyQ,KAAK7H,MAAMyb,eAnJ1D,KAoJ5BmH,gBAAkB,CAAChB,EAAkBiB,EAAgBC,KAE5C,CACLvgB,OAFaugB,GAAiBD,GAAqCjB,IAnJrE/Z,KAAK/K,GAAK2V,EAAQ3V,GAClB+K,KAAKsa,WAAa3a,IAAM2S,YACxBtS,KAAKia,UAAYta,IAAM2S,YACvBtS,KAAKwa,qBAAuBjC,GAAWvY,KAAKmZ,cAC5CnZ,KAAK8Z,+BAAiCvB,GAAWtE,MACjDjU,KAAKqa,wBAA0B9B,GAAWvY,KAAK+a,iBAGjD,0BACE/a,KAAK7H,MAAM+iB,4BACLjH,KAAoBjU,KAAK7H,MAAM5I,OACrCyQ,KAAKC,SAAS,CACZgZ,cAAc,IAIlBrE,mBAAmBpB,EAAW2H,IACxBA,EAAUjC,gBAAmB1F,EAAUI,gBAAkB5T,KAAK7H,MAAMyb,eAAiBJ,EAAU1f,cAAgBkM,KAAK7H,MAAMrE,aAC5HkM,KAAKC,SAAS,CACZiZ,gBAAgB,IAsItB9X,SACE,MAAM,KACJ7R,EADI,cAEJwmB,EAFI,YAGJjiB,GACEkM,KAAK7H,OACH,WACJ6gB,GACEhZ,KAAK7Q,MACHkmB,EAAgB,kBAAC,GAAD,CAAmB9lB,KAAMA,EAAMqkB,cAAe5T,KAAK7H,MAAMyb,cAAe2C,mBAAoBvW,KAAKuW,mBAAoBsB,eAAgB7X,KAAK6X,eAAgB5iB,GAAI+K,KAAK/K,GAAI8e,WAAY/T,KAAKqU,gBAAiB+C,aAAcpX,KAAK7Q,MAAM6pB,aACxP,OAAO,oCACK,kBAAC,GAAD,CAAY1Q,MAAO2L,KAAsB1kB,GAAOmmB,OAAQnmB,EAAKT,GAAIumB,cAAeA,EAAejF,IAAKpQ,KAAKia,UAAWlE,cAAeA,IACnI,kBAAC,GAAD,KACI,yBAAKvX,IAAKwB,KAAK2Z,aAAa7lB,GAAckN,UAAU,yBAAyBoP,IAAKA,GAAOpQ,KAAKsa,WAAalK,GACtGpQ,KAAK7Q,MAAM8pB,cAAgBjZ,KAAK6Z,uBAGxCjrB,EAAWmnB,IAAkBiD,EAAa,kBAAC,GAAD,CAAYzpB,KAAMA,IAAW,OAKxFwpB,GAAKhO,aAAe,CAClB9V,GAAI+V,IAAUC,QAWhB8N,GAAK9W,aAAe,CAClB1S,KAAM,GACNurB,qBAAsBtV,SAASC,UAC/BmO,cAAe,IAgBFhc,mBAbS,CAACzI,EAAO2Y,KAEvB,CACLhU,YAFmBtF,EAAWsZ,EAASiO,eAA8CniB,GAA7BC,GAAoB1E,GAG5EykB,cAAetd,GAAkBnH,EAAO8kB,KAA8BnM,EAASvY,MAAMT,MAI9D6G,IAAQ,CACjCulB,sBAAuBtH,GAAiBje,EAASc,GAAmBmd,IACpE2C,mBAAoB,CAACznB,EAAIU,EAAMukB,IAAepe,ExDpOJ,EAAC7G,EAAIilB,KAChC,CACbvkB,KDFyC,gCCGzCV,KACAilB,ewDgOqDqH,CAA6BtsB,EAAIU,MAG3EoI,CAA6CmhB,IC1O5D,MAAMrhB,GAAQ,CACZ8J,gBAAiBE,IAAO2Z,QACxBrD,OAAQ,OACRtd,OAAQ,MACRoQ,OAAQ,mBAKKwQ,OAFF,IAAM,wBAAI5jB,MAAOA,K,QCE9B,MACM6jB,GAAe,CACnB,QAAW,UACXC,kBAAmB,aACnBC,OAAQ,SACRC,OAAQ,UAEJhkB,GAAQ,CACZkF,KAAM,CACJ+e,cAAe,OACfC,YAAa,OAEfC,OAAQ,CACN/V,UAAW,SACX1B,SAAU,OACV0X,aAAc,OAEhBC,OAAQ,CACN3X,SAAU,OACV4X,WAAY,OACZlR,OAAQ,EACRnH,MAAOjC,IAAO4B,SAEhB2Y,QAAS,CACPtY,MAAOjC,IAAO4B,QACdc,SAAU,OACV4X,WAAY,OACZE,UAAW,OACXC,SAAU,WAId,MAAMC,WAAqBxc,YAAW,eAAD,oBACnCzQ,MAAQ,CACNH,SAAU,IAFuB,KAYnCqtB,eAAiBxhB,IACf,MAAMyhB,EAAgBzhB,EAAG,YAAQA,EAAI0hB,YAAZ,YAA2B1hB,EAAI/L,IAAO,GAC/D,MAAM,GAAN,OAAUkR,KAAK4K,QAAQ0J,QAAvB,+BAAqDgI,IAdpB,KAgBnCE,iBAAmB3hB,IACjB,MAAM4hB,EAAY5hB,EAAIlG,SAAS+X,OAAO,GAAG,GACzC,OAAO+P,EAAUV,OAASU,EAAUV,OAAOlqB,YAAc,IAlBxB,KAoBnC6qB,gBAAkB,KAChB,MAAMC,EAAY/tB,EAAWoR,KAAK7H,MAAM4d,eAAiB,OAAS,KAClE,OAAO/V,KAAK7H,MAAMxD,SAAS9E,IAAIgL,IAC7B,MAMMkhB,EA7DI,YA6DKlhB,EAAI0hB,YAA0Bvc,KAAKwc,iBAAiB3hB,GAAO0gB,GAAa1gB,EAAI0hB,aACrFK,EAAa/hB,EAAIgiB,KAAkB,KAAX,SACxBJ,EAAY5hB,EAAIlG,SAAS+X,OAAO,GAAG,GACnCoQ,EAAUL,EAAUnqB,YAC1B,OAAO,wBAAI0O,UAAS,uBAAkB2b,GAAane,IAAK3D,EAAI/L,GAAIiU,QAV1C,KAChBnU,EAAWoR,KAAK7H,MAAM4d,iBACxBgH,SAASC,SAASnU,KAAO7I,KAAKqc,eAAexhB,MASnC,uBAAGmG,UAAS,wBAAmB4b,IAC1B/hB,EAAIhJ,YADT,KACwBgJ,EAAIoiB,aAD5B,KAGA,uBAAGvlB,MAAOA,GAAMqkB,QACXA,EADL,MACgBmB,YAAWJ,EAAS9c,KAAK7Q,MAAMH,WAE/C,uBAAG0I,MAAOA,GAAMukB,SAAUQ,EAAU/sB,UAnCtD,0BACE,MAAMV,QAAiBgR,KAAK4K,QAAQ3V,GAAG4I,YAAYsf,aAAa/nB,IAAI,eACpE4K,KAAKC,SAAS,CACZjR,aAqCJoS,SACE,OAAO,oCACK,kBAAC,GAAD,CAAYkH,MAAOlD,IAAKC,EAAE,YAAaqQ,OAAQ1V,KAAK7H,MAAM5I,KAAKT,GAAIinB,cAAe/V,KAAK7H,MAAM4d,gBAC7F,kBAAC,GAAD,MACC/V,KAAK7H,MAAMxD,SAAShC,OAAS,GAAK,yBAAKqO,UAAU,0BAC1C,wBAAItJ,MAAOA,GAAMkF,MAAOoD,KAAK0c,mBAC7B,yBAAKhlB,MAAOA,GAAMmkB,QACd,uBAAGhT,KAAM7I,KAAKqc,kBACTjX,IAAKC,EAAE,yBAcxC+W,GAAarR,aAAe,CAC1B9V,GAAI+V,IAAUC,OACdqJ,QAAStJ,IAAUoS,QAUNC,OADWzlB,YANFzI,IACf,CACLwF,SAAUzD,OAAOC,OAAOuD,GAAiBvF,MAIM,KAAzByI,CAA+BwkB,I,qBC7F1CkB,OAtBUnlB,GAAS,oCAC1B,kBAAC,GAAD,CAAYmQ,MAAOlD,IAAKC,EAAE,qCAAsC,CACpE7V,KAAM2I,EAAM5I,KAAKC,OACfkmB,OAAQvd,EAAM5I,KAAKT,GAAIinB,cAAe5d,EAAM4d,gBAC1C,yBAAKre,MAAO,CAChB4P,QAAS,OACTiW,eAAgB,SAChBC,WAAY,SACZ9iB,OAAQ,QAEA,kBAAC,KAAD,CAAmBhD,MAAO,CAChC8C,MAAO,IACPE,OAAQ,IACR+iB,MAAO,UACN9Z,MAAM,eCNE+Z,OAVS,EACtB1c,eACI,yBAAKA,UAAWA,EAAWmB,MAAM,6BAA6BC,QAAQ,YAAYC,KAAMX,IAAOic,SAC7F,0BAAMhsB,EAAE,gBAAgB0Q,KAAK,SAC7B,0BAAM1Q,EAAE,oICMDisB,OAVI,EACjB5c,eACI,yBAAKA,UAAWA,EAAWmB,MAAM,6BAA6B3H,MAAM,KAAKE,OAAO,KAAK0H,QAAQ,YAAYC,KAAMX,IAAO+T,QACpH,0BAAM9jB,EAAE,kFACR,0BAAMA,EAAE,gBAAgB0Q,KAAK,U,0BCMrC,MAAMwb,GAAetuB,GAAQ4L,IAAY5L,EAAKC,MAAMmd,YAI9CmR,GAAW,CAAC3lB,EAAOyS,KACvB,MAAM,KACJrb,EADI,cAEJwmB,EAFI,uBAGJgI,GACE5lB,EACE6lB,EARgBzuB,IAAQkD,YAAQlD,EAAK4L,IAAY5L,EAAKC,MAAM4L,WAAWhK,OAAO,CAAC7B,EAAM0uB,EAAOC,IAAUA,EAAM7S,UAAU8S,GAAMA,EAAGrvB,KAAOS,EAAKT,MAAQmvB,GAQpIG,CAAgB7uB,GAgBrC,OAAO,oCACG,kBAAC,GAAD,CAAY+Y,MAAOuV,GAAatuB,GAAOmmB,OAAQnmB,EAAKT,GAAIinB,cAAeA,IACvE,kBAAC,GAAD,MACA,yBAAK/U,UAAU,0BACX,wBAAIA,UAAWC,KAAQrE,MAClBohB,EAAanuB,IAAIwuB,GAAe,wBAAIrd,UAAWC,KAAQ1R,KAAMiP,IAAK6f,EAAYvvB,IACvE,kBAACwvB,GAAD,CAAiBtd,UAAWC,KAAQsd,WApB9CF,KACd,MAAMG,EAAe,4BAAQxd,UAAWC,KAAQwd,aAAc1b,QAAS,IAAMgb,EAAuBxuB,EAAM8uB,IAC9F,kBAAC,GAAD,CAAYrd,UAAWC,KAAQyd,cAE3C,OAAO,oCACK,uBAAG1d,UAAWC,KAAQ4B,KAAMnL,MAAO,CAC3CiM,MAAOjC,IAAOid,SACb9V,KAAM8B,YAAWpb,EAAKC,KAAM6uB,EAAazT,EAAQ3V,KACrCopB,EAAYzsB,MAEhBpD,EAAWunB,GAAiByI,EAAe,OAW/B5G,CAAQyG,SAYrCP,GAAS/S,aAAe,CACtB9V,GAAI+V,IAAUC,QAEDrT,mBAAQ,KAAM,CAC3BmmB,uBC7DoC,CAACzS,EAAetP,IAAYrG,IAChE,MAAMwV,EAAehQ,IAAYmQ,EAAc9b,MAAM4L,SAC/CwjB,EAAatT,EAAcH,GAAc/Z,OAAO7B,GAAQA,EAAKT,KAAOkN,EAAQlN,IAE9E8vB,EAAWjsB,QACb2Y,EAAcH,GAAgByT,EAC9BjpB,EAASsG,GAAsBqP,KAE/B3V,EAASuG,GAAsBoP,MDoDpB1T,CAEZkmB,I,UE5DI,MAMMe,GAAgC,GAChCC,GAA4B,CACvChwB,GAAI,GACJ8C,KAAM,GACNW,OAAQ,GACRT,YAAa,GACbY,eAAgB,IAiGX,MAAMqsB,GAAyB5vB,GAASA,EAAM6vB,eAExCC,GAAiB9vB,IAAUgH,KAAQhH,EAAM6vB,gBACzCE,GAA0B/vB,GAAS0B,YAASkuB,GAAuB5vB,IAAQuD,eCvGlFgF,GAAQ,CACZod,QAAS,CACP3N,QAAS,OACTgY,WAAY,WACZnD,WAAY,QAEdoD,UAAW,CACThb,SAAU,OACVib,YAAa,SACb7kB,MAAO,MACPsQ,OAAQ,SACRxD,QAAS,QACT0U,WAAY,QAEd7G,UAAW,CACT2G,aAAc,OACd5T,UAAW,SAiEAtQ,mBAxBS,CAACzI,EAAO2Y,KAE9B,IAAIlY,EAGFA,EAJqBqvB,GAAe9vB,GAI5B+vB,GAAwB/vB,GACvBX,EAAWsZ,EAASiO,eACrB1b,GAAuBlL,GAEvB6B,EAAmB7B,GAG7B,MAAMI,EAAOK,EAAM2E,KAAKhF,GAAQA,EAAKT,KAAOgZ,EAASvY,KAAKT,IAC1D,MAAO,CACLY,KAAMH,EAAOA,EAAKG,KAAO,KAUW,CACtCuM,0BADarE,CA7DEO,IACf,MAAM,KACJ5I,EADI,cAEJwmB,EAFI,KAGJrmB,EAHI,sBAIJuM,GACE9D,EAEEmnB,EAAe/e,IACnB,MAAMgf,EAAW,2BAAQhwB,GAAR,IACfG,KAAM6Q,EAAMoE,OAAOlU,QAErBwL,EAAsBsjB,IAsBxB,OAAO,oCAAG/wB,EAAWunB,GAXZ,oCACK,kBAAC,GAAD,CAAYzN,MAAOlD,IAAKC,EAAE,aAAcqQ,OAAQnmB,EAAKT,GAAIinB,cAAeA,IACxE,kBAAC,GAAD,MACA,yBAAK/U,UAAU,0BACX,kBAAC,UAAD,CAAgBwe,OAAQF,GACpB,kBAAC,KAAD,CAAO7uB,MAAOf,EAAM+vB,WAAS,EAACC,WAAS,EAAChoB,MAAOA,GAAM0nB,UAAWja,YAAaC,IAAKC,EAAE,iBAAkBC,SAAUga,OAbrH,MACf,MAAMK,EAAezuB,OAAOqJ,OAAO,GAAI7C,GAAM0nB,UAAW1nB,GAAMod,SAC9D,OAAO,yBAAK9T,UAAU,yBAAyBtJ,MAAOA,GAAMyd,WAChD,kBAAC,UAAD,CAAgBzd,MAAOioB,GAAejwB,KAgBDkwB,MCzDrD,MAAMC,GAAe,CAACC,EAAYvwB,EAAMuE,KACtC,IAAIisB,EAAS,UAAMD,EAAWE,UAAjB,4BAA8CzwB,EAAKT,IAEhE,GAAIgF,GAAeA,EAAW,IAAqBA,EAAW,GAAkBnB,OAAQ,CACtF,MAAMstB,EAAQnsB,EAAW,GAAkBjE,IAAIqwB,GAAUA,EAAO/tB,MAAM,KAAKua,OAAO,GAAG,IACrFqT,GAAS,uBAAoBE,EAAM7tB,KAAK,MAG1C,OAAO2tB,GAGHI,GAAU,EACdpK,gBACAxmB,OACAuE,eACC8W,KACD,IAAIkV,EACJ,MAAMM,EAAS7wB,EAAK6wB,OAMpB,OAJIA,IACFN,EAAalV,EAAQ3V,GAAGorB,OAAOC,cAAc/rB,KAAKgsB,GAAOA,EAAI/hB,MAAQ4hB,IAGhEN,GAAcA,EAAWluB,MAAQkuB,EAAWE,UAAY,oCACrD,kBAAC,GAAD,CAAY1X,MAAOwX,EAAWluB,KAAM8jB,OAAQnmB,EAAKT,GAAIinB,cAAeA,IACpE,kBAAC,GAAD,MACA,4BAAQzN,MAAOwX,EAAWluB,KAAM4uB,IAAKX,GAAaC,EAAYvwB,EAAMuE,GAAckN,UAAU,yBAAyBtJ,MAAO,CAClIsgB,OAAQ,WAEA,oCACF,kBAAC,GAAD,CAAY1P,MAAK,UAAK8X,EAAL,oBACjB,kBAAC,GAAD,MACA,yBAAKpf,UAAU,yBAAyBtJ,MAAO,CACrD4P,QAAS,OACTiW,eAAgB,SAChBC,WAAY,SACZ9iB,OAAQ,QAEE,kBAAC,KAAD,CAAmBiJ,MAAM,WAAWkC,UAAQ,EAACnO,MAAO,CAC5D8C,MAAO,IACPE,OAAQ,IACR+iB,MAAO,eAWf0C,GAAQpV,aAAe,CACrB9V,GAAI+V,IAAUC,QAUDrT,mBAPS,CAACzI,EAAO2Y,KAEvB,CACLhU,YAFmBtF,EAAWsZ,EAASiO,eAA8CniB,GAA7BC,GAAoB1E,KAMjEyI,CAAyBuoB,ICpExC,MAAMzoB,GAAQ,CACZoT,OAAQ,YACR1G,SAAU,OACV4X,WAAY,OACZrY,MAAOjC,IAAO0G,SAgBDqY,OAbItoB,GACV,oCACG,kBAAC,GAAD,CAAYmQ,MAAOlD,IAAKC,EAAE,UAAWqQ,OAAQvd,EAAM5I,KAAKT,GAAIinB,cAAe5d,EAAM4d,gBACjF,uBAAGre,MAAOA,IACL0N,IAAKC,EAAE,gFCZTqb,OAFO,IAAM,8B,sBCQ5B,MAAMC,GAAqB,EACzB/uB,OACAE,cACAgC,cACAd,qBAYO,yBAAKgO,UAAWC,KAAQ2f,WACrB,uBAAG5f,UAAWC,KAAQrP,MAAOA,GAC5BoB,GAAmBlB,GAAe,uBAAGkP,UAAWC,KAAQnP,aAAcA,GACtEgC,EAAYnB,OAAS,GAAK,oCACnB,uBAAGqO,UAAWC,KAAQ4f,aACjBzb,IAAKC,EAAE,oBAfJ,MACxB,MAAMyb,EAAYhtB,EAAYjE,IAAI,EAChC+B,OACAT,YACI,wBAAI6P,UAAWC,KAAQ8f,eAAgBviB,IAAK5M,GACrCA,EADP,KACeT,EAAOtB,IAAImxB,GAAOA,EAAIpvB,MAAMQ,KAAK,QAEtD,OAAO,wBAAI4O,UAAWC,KAAQggB,YAAaH,IAU1BI,KAWrBP,GAAmB1e,aAAe,CAChCnQ,YAAa,GACbF,KAAM,GACNoB,iBAAiB,GAcJ4E,mBAXSzI,IACtB,MAAML,EAAKqE,EAAehE,GACpBkC,EAAYR,YAASD,EAAkBzB,EAAOL,IACpD,MAAO,CACL8C,KAAMP,EAAUQ,YAChBiC,YAAaG,GAAqB9E,GAClC2C,YAAaT,EAAUU,mBACvBiB,gBAAiBK,EAA4BlE,KAIlCyI,CAAyB+oB,IChDxC,MAsCa5H,GAAO5gB,IAClB,MAAMgpB,EAvCY3xB,KAClB,OAAQA,GACN,KAAK+Z,IACL,KAAKjQ,IACL,KAAKC,IACL,KAAKC,IACL,KAAKE,IACL,KAAKD,IACH,OAAO2nB,GAET,KAAKxnB,IACH,OAAOwiB,GAET,KAAKtS,IACL,KAAKC,IACL,KAAKF,IACH,OAAOiU,GAET,KAAKruB,IACH,OAAO4xB,GAET,KAAKvxB,IACH,OAAO2wB,GAET,KAAKzW,IACH,OAAOmW,GAET,KAAK3kB,IACH,OAAOklB,GAET,KAAK9kB,IACH,OAAO+kB,GAET,QACE,OAAOrD,KAKMgE,CAAYnpB,EAAM5I,KAAKC,MACxC,OAAO,kBAAC2xB,EAAD,CAAU5xB,KAAM4I,EAAM5I,KAAMwmB,cAAe5d,EAAM4d,cAAe+E,qBAAsB3iB,EAAM2iB,wB,8CC9CrG,MAAMyG,WAAoC3hB,YAAW,eAAD,oBAYlDzQ,MAAQ,CACNqyB,YAAY,GAboC,KAelDC,aAAe,KAfmC,KAgBlDC,kBAAoB,KAEpBC,kBACE,MAAMC,EAAW5hB,KAAK7H,MAAM0pB,aAAe1hB,OAAO2hB,YAElD,IAAK9hB,KAAKyhB,aACR,OAGF,MAAMM,EAAO/hB,KAAKyhB,aAAaO,wBAE3BD,EAAKE,QAAUL,GAAYG,EAAK1d,IAAMlE,OAAO2hB,YAAcF,IAC7D5hB,KAAKC,SAAS,CACZuhB,YAAY,IAEdxhB,KAAKkiB,iBAITC,kBACEniB,KAAK0hB,kBAAoB1e,KAAS,IAAMhD,KAAK2hB,kBAAmB3hB,KAAK7H,MAAMiqB,YACxD,CAACjiB,UACjB4c,SAASsF,uBAAuB,kBACxBhpB,QAAQ8b,IACjBA,EAAU/U,iBAAiB,SAAUJ,KAAK0hB,qBAI9CQ,gBACqB,CAAC/hB,UACjB4c,SAASsF,uBAAuB,kBACxBhpB,QAAQ8b,IACjBA,EAAUrU,oBAAoB,SAAUd,KAAK0hB,qBAIjD7a,oBACE7G,KAAKmiB,kBACLniB,KAAK2hB,kBAGPW,uBACEtiB,KAAKkiB,gBAGP9gB,SACE,MAAM,EAKFpB,KAAK7H,OALH,SACJ6J,EADI,UAEJhB,EAFI,MAGJtJ,GAHF,EAIKS,EAJL,kDAMM,WACJqpB,GACExhB,KAAK7Q,MACHozB,EAAaC,KAAKrqB,EAAO,CAAC,cAAe,eAAgB,YAAa,eAC5E,OAAO,uCAAKiY,IAAKA,GAAOpQ,KAAKyhB,aAAerR,EAAK1Y,MAAOA,EAAOsJ,UAAWA,GAAeuhB,GAC5Ef,GAAcxf,IAzEzBuf,GAQGtf,aAAe,CACpBmgB,WAZsB,IAatBP,aAZwB,KAiFbN,UChEf,MAEanH,GAA8B,EACpC,MAAMqI,WAAiB7iB,YAAW,eAAD,oBACtCzQ,MAAQ,CACNuzB,cAAe,IAFqB,KAItC5H,qBAAuB6H,IACrB,MAAMC,EAA4D,mBAAxC5iB,KAAK7Q,MAAMuzB,cAAcC,IAA2B3iB,KAAK7Q,MAAMuzB,cAAcC,GACjGD,EAAa,eAAQ1iB,KAAK7Q,MAAMuzB,eAEtCA,EAAcC,IAAcC,EAC5B5iB,KAAKC,SAAS,CACZyiB,mBAVkC,KAsBtCG,eAAiBC,IACX9iB,KAAK7H,MAAMib,MACbpT,KAAK7H,MAAM4qB,wBAAwBD,IAxBD,KA2BtCE,aAAe,CAACC,EAAQC,EAAS7Y,KAC/B8Y,YAAa9Y,EAAQyO,GACrB,MAAMxN,EAAgBtL,KAAK7H,MAAMzF,eAAe6B,KAAKhF,GAAQA,EAAKT,KAAOub,EAAQyO,GAE7ExN,GAAiB8X,YAAoB9X,IACvC+X,aAAa/X,IAhCqB,KAmCtCgY,wBAA0BhY,IACxB,MAAMiY,EAAevjB,KAAK7Q,MAAMuzB,cAAcpX,EAAcxc,IAE5D,OAAIy0B,IAAiC,IAAjBA,EACXryB,OAAOqJ,OAAO,GAAI+Q,EAAe,CACtC3Q,EAAG2Q,EAAc3Q,EA3CD,KA+Cb2Q,GA5C6B,KA8CtCkY,iBAAmBj0B,IACjB,MAAMk0B,EAAiB,CAACl0B,EAAKC,KAAMwQ,KAAK7H,MAAMib,KAAO,OAAS,QAAQhhB,KAAK,KAC3E,OAAO,kBAAC,GAAD,CAA6BoM,IAAKjP,EAAKupB,EAAG9X,UAAWyiB,GAChD,kBAAC,GAAD,CAAMl0B,KAAMA,EAAMwmB,cAAe/V,KAAK7H,MAAMib,KAAOhlB,EtFxE/C,OsFwE4D0sB,qBAAsB9a,KAAK8a,yBAjDnE,KAoDtC4I,kBAAoB9zB,GAASA,EAAMC,IAAIN,GAAQyQ,KAAKwjB,iBAAiBj0B,IAtCrEwV,0BAA0BC,GACpBA,EAAUoO,MACZpT,KAAKC,SAAS,CACZyiB,cAAe,KAqCrBthB,SACE,MAAM,KACJgS,EADI,UAEJrgB,EAFI,eAGJL,GACEsN,KAAK7H,MAET,IAAKpF,IAAcL,EAAeC,OAChC,OAAO,kBAAC,GAAD,CAAkBjD,KAAM0V,IAAKC,EAAE,0CAGxC,MAAMzV,EAAQwjB,EAAO1gB,EAAiBA,EAAe7C,IAAImQ,KAAKsjB,yBAC9D,OAAO,yBAAKtiB,UAAU,gBACTjO,EAAY,kBAAC,IAAD,CAAO4wB,aAAW,GACvB,kBAAC,IAAD,KACI,kBAAC,IAAD,QAEG,KACf,kBAAC,KAAD,CAAiBd,eAAgB7iB,KAAK6iB,eAAgBG,aAAchjB,KAAKgjB,aAAchiB,UAAU,SAASiiB,OAAQrzB,EAAOkb,OAAQ8Y,IAAQC,KAAMC,cAAkBC,UAAWC,IAAiBxpB,MAAO2F,OAAO8jB,WAAYC,YAAaC,IAAmBC,YAAahR,EAAMiR,YAAajR,EAAMkR,gBAAgB,kBACxStkB,KAAK0jB,kBAAkB9zB,MAY5C6yB,GAASxgB,aAAe,CACtBvP,eAAgB,IAGlB,MASMgV,GAAqB,CACzBqb,wBhEhFqCtyB,IAAK,CAC1CjB,KFjCuC,4BEkCvCiB,WgE2FamH,mBAvBS,CAACzI,EAAO2Y,KAC9B,MAAMmG,EAAoBnG,EAASsL,KAAOnZ,GAAsB9K,GAASyB,EAAkBzB,EAAOgE,EAAehE,IAC3GuD,EAAiBoV,EAASsL,KAAO/Y,GAAuBlL,GAAS6B,EAAmB7B,GAC1F,MAAO,CACL4D,UAAWK,EAAsBjE,KAAW8e,EAC5Cvb,mBAkBoCgV,GAVrB,CAACE,EAAYC,EAAeC,KAC7C,MAAMyc,EAAa9xB,YAAQmV,EAAWlV,gBAAgBtB,OAAOozB,KAC7D,OAAO,2BAAK3c,GAAZ,IACEuL,KAAMtL,EAASsL,KACfrgB,UAAW6U,EAAW7U,UACtBL,eAAgB6xB,EAChBpB,oBAIWvrB,CAAyD6qB,ICrIxE,MAAMve,GAAS,CACbugB,eAAgB,CACd3Z,OAAQ,MACR3D,QAAS,SACTud,aAAc,MACd/gB,MAAOjC,IAAOE,MACdJ,gBAAiB,UACjB9G,OAAQ,GACR4M,QAAS,OACTkW,WAAY,UAEdmH,MAAO,CACLvgB,SAAU,OACV4N,OAAQ,UACRmN,WAAY,UAEdyF,YAAa,CACXxgB,SAAU,OACVmD,eAAgB,YAChBuL,WAAY,OACZd,OAAQ,YAIZ,MAAM6S,WAAoBjlB,YAAW,eAAD,oBAClCmD,QAAUjU,GAAM,IAAMkR,KAAK7H,MAAM4K,QAAQjU,GADP,KAElCg2B,SAAWh2B,GAAM,IAAMkR,KAAK7H,MAAM2sB,SAASh2B,GAE3CsS,SACE,MAAM,KACJ3P,GACEuO,KAAK7H,MACT,OAAO,yBAAKT,MAAOwM,GAAOugB,gBACd,0BAAM/sB,MAAOwM,GAAOygB,MAAO5hB,QAAS/C,KAAK+C,QAAQtR,EAAK3C,KAAtD,UACQ2C,EAAKG,KADb,aACsBH,EAAKN,OAAOwB,OAAS,EAAIyS,IAAKC,EAAE,qBAAsB,CAClF0f,MAAOtzB,EAAKN,OAAOwB,SAChBlB,EAAKN,OAAO,GAAGS,OAEZ,0BAAM8F,MAAOwM,GAAO0gB,YAAa7hB,QAAS/C,KAAK8kB,SAASrzB,EAAK3C,KACxDsW,IAAKC,EAAE,aAY5Bwf,GAAY5iB,aAAe,CACzBc,QAASyC,SAASC,UAClBqf,SAAUtf,SAASC,WAENof,U,sBCjDR,MAAMG,WAAkBplB,YAAW,eAAD,oBACvCqlB,cAAgBn2B,IACdkR,KAAK7H,MAAM4X,iBAAiBjhB,IAFS,KAIvCo2B,aAAep2B,IACbkR,KAAK7H,MAAM0X,wBAAwB,CACjC/gB,KACA8C,KAAMoO,KAAK7H,MAAMhE,QAAQI,KAAKhF,GAAQA,EAAKT,KAAOA,GAAI8C,QAI1DwP,SACE,MAAM,QACJjN,EADI,SAEJoJ,GACEyC,KAAK7H,MACHkM,EAAM4B,GAAoB1I,GAAY,GAC5C,OAAOpJ,EAAQxB,OAAS,yBAAKqO,UAAWC,KAAQkkB,IAAKztB,MAAO,CAC1D2M,QAEWlQ,EAAQtE,IAAIuB,GAAU,kBAAC,GAAD,CAAaoN,IAAKpN,EAAOtC,GAAI2C,KAAML,EAAQ2R,QAAS/C,KAAKklB,aAAcJ,SAAU9kB,KAAKilB,kBACxG,MAUrBD,GAAU/iB,aAAe,CACvB9N,QAAS,GACTixB,iBAAkB5f,SAASC,WAQd7N,mBALSzI,IAAK,CAC3BgF,QAASF,GAAqB9E,GAC9BoO,SAAUC,GAAuBrO,KAGK,CACtC0gB,wBAAyBJ,GACzBM,iBAAkBtb,IAFLmD,CAGZotB,ICjDI,MAAMK,GAAsB,CAACh0B,EAAWzB,KAItC,CACLJ,KXN+B,sBWO/BiB,MALO,2BAAQY,GAAR,IACPqB,eAAgB9C,MAOP01B,GAAwB,MACnC91B,KXVmC,0BWgBxB+1B,GAA0Bh2B,IACrC,MAAMC,EAAOD,EAAKC,YACXD,EAAKC,KACZ,MAAM0L,EAAeC,IAAY3L,GAAM4L,SACjCtM,EAAKuM,yBACLC,EAAqBnL,YAAsBrB,GACjD,IAAIyM,EAEJ,GAAI/L,IAASgM,IAAW,CACtB,MAAMC,EAAOlM,EAAKkM,MAAQ,EAC1BF,EAAQG,YAAsBD,EAAMlM,EAAKoM,eAEzCJ,EAAQM,cAGV,MAAO,CACLrM,KX/BoC,2BWgCpCiB,MAAM,qCACJ3B,KACAU,OACAuM,SAAUxM,EAAKwM,UAAY,KAC3B,CAACb,GAAe3L,EAAKyM,SAClBF,KACAR,GACAC,KCDM3D,mBAPSzI,IACf,CACLq2B,mBAAoBrrB,GAAchL,GAClCs2B,oBAAqBxG,GAAe9vB,KAIA,CACtCu2B,mBAAoB1qB,GACpB2qB,oBAAqBL,IAFR1tB,CAhCcO,IAC3BytB,oBAAU,KACJztB,EAAMqtB,mBACRrtB,EAAMutB,qBACGvtB,EAAMstB,qBACfttB,EAAMwtB,uBAEP,CAACxtB,EAAMqtB,mBAAoBrtB,EAAMstB,sBAC7B,oCACG,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,yBAAKzkB,UAAU,qBACX,kBAAC,GAAD,CAAUoS,MAAM,IAChB,kBAAC,GAAD,MACA,kBAAC,GAAD,CAAUA,MAAM,Q,4CCUjByS,OA/BoB,EACjChtB,gBACAitB,oBACAC,oBACA/vB,WAEA,MAAMwc,EAAU,CAAC,kBAAC,IAAD,CAAQhU,IAAI,SAAS4Q,WAAS,EAACrM,QAASgjB,GAC9C3gB,IAAKC,EAAE,WACD,kBAAC,IAAD,CAAQ7G,IAAI,SAASwnB,aAAW,EAACjjB,QAAS+iB,GAChD1gB,IAAKC,EAAE,YAElB,OAAOrP,GAAQ,kBAAC,IAAD,CAAOsC,QAASytB,EAAmBvO,OAAK,EAACzb,SAAS,UACnD,kBAAC,IAAD,KAAaqJ,IAAKC,EAAE,qBACpB,kBAAC,IAAD,KACI,0BAAMrE,UAAWC,KAAQjF,SACpBoJ,IAAKC,EAAE,mKAAoK,CAC1LxM,oBAIM,kBAAC,IAAD,KACI,kBAAC,IAAD,KAAc2Z,MCTlC,MAAMyT,GAAiB,CACrBvrB,OrDjBoC,GqDkBpCqY,WAAY,OACZD,WAAY,OACZtL,YAAa,QAER,MAAM0e,WAAgBtmB,YAAW,eAAD,oBACrCzQ,MAAQ,CACNg3B,yBAAyB,EACzBC,oBAAgB/vB,EAChBgwB,yBAAyB,EACzB5U,iBAAapb,GALsB,KAOrCiwB,gBAAkB,KAChBtmB,KAAKC,SAAS,CACZomB,yBAAyB,KATQ,KAYrCE,OAAS,KACPvmB,KAAK7H,MAAMouB,SAASvxB,KAAKwxB,IACvBxmB,KAAKC,SAAS,CACZwR,YAAY,IAAD,OAAM+U,QAfc,KAmBrCC,eAAiB,KACXzmB,KAAK7H,MAAMuuB,oBACb1mB,KAAK7H,MAAMwuB,oBACX3mB,KAAK7H,MAAMwtB,uBAEX3lB,KAAK7H,MAAMyuB,oBAxBsB,KA2BrCC,UAAY,KACV7mB,KAAK7H,MAAM2uB,mBACX,MAAMrV,EAAczR,KAAK7H,MAAM5H,YAAX,WAA6ByP,KAAK7H,MAAM5H,aAAgB,IAC5EyP,KAAKC,SAAS,CACZwR,iBA/BiC,KAkCrCsU,kBAAoB,KAClB/lB,KAAKC,SAAS,CACZomB,yBAAyB,KApCQ,KAuCrCP,kBAAoB,KAClB9lB,KAAKC,SAAS,CACZomB,yBAAyB,IAE3BrmB,KAAK7H,MAAM4uB,SAAS/mB,KAAK7H,MAAM5H,aAAayE,KAAK,KAC/CgL,KAAKC,SAAS,CACZwR,YAAa,SA7CkB,KAiDrCuV,oBAAsBnyB,UACpB,GAAIoyB,GAAgBA,EAAat0B,OAAQ,CACvC,MAAMu0B,QAAiBlnB,KAAK4K,QAAQ3V,GAAG4I,YAAYsf,aAAa/nB,IAAI,eAC9D+xB,EAAcF,EAAa1yB,KAAK8Q,GAAKA,EAAE+hB,SAAWF,GAA2B,SAAf7hB,EAAEgiB,UAElEF,GAAeA,EAAY12B,OAC7BuP,KAAK7H,MAAMmvB,YAAYtnB,KAAK7H,MAAM5H,YAAa42B,EAAY12B,SAvD5B,KA2DrC82B,oBAAsB,KAChBvnB,KAAK7H,MAAM5H,cAAgByP,KAAK7Q,MAAMi3B,gBACxC/uB,GAAkB2I,KAAK7H,MAAM5H,aAAayE,KAAKoxB,GAAkBpmB,KAAKC,SAAS,CAC7EmmB,qBA9D+B,KA2ErCoB,wBAA0B,KACxBxnB,KAAKC,SAAS,CACZkmB,yBAA0BnmB,KAAK7Q,MAAMg3B,2BA7EJ,KAgFrCsB,oBAAsB,IAAMznB,KAAK7H,MAAMuvB,cAAgB1nB,KAAK7H,MAAM5H,YAAc,kBAAC,GAAD,CAAqBsI,cAAemH,KAAK7H,MAAMU,cAAeitB,kBAAmB9lB,KAAK8lB,kBAAmBC,kBAAmB/lB,KAAK+lB,kBAAmB/vB,KAAMgK,KAAK7Q,MAAMk3B,0BAA8B,KAhF9O,KAiFrCsB,kBAAoB,IAAM3nB,KAAK7Q,MAAMi3B,gBAAkBpmB,KAAK7Q,MAAMi3B,eAAet3B,GAAK,kBAAC,KAAD,CAAmBkS,UAAU,qBAAqB/L,GAAI+K,KAAK4K,QAAQ3V,GAAIe,KAAMgK,KAAK7Q,MAAMg3B,wBAAyBnT,eAAgBhT,KAAKwnB,wBAAyBI,kBAAmB5nB,KAAK7Q,MAAMi3B,eAAgByB,kBAAmB,CAAC,OAAQ,eAC/TC,mBAAoB9nB,KAAKgnB,oBAAqBe,mBAAoBnyB,GAAOL,QAAQC,IAAI,2BAA4BI,KAAW,KAlFvF,KAmFrCoyB,oBAAsB,KACpB,MAAMC,EAAmBjoB,KAAK7H,MAAMuuB,mBAAqBthB,IAAKC,EAAE,sBAAwBD,IAAKC,EAAE,iBAC/F,OAAO,yBAAKrE,UAAWC,KAAQoG,cACnB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQgI,SAAO,EAACtM,QAAS/C,KAAKumB,QACzBnhB,IAAKC,EAAE,iBAEZ,kBAAC,IAAD,CAAQtC,QAAS/C,KAAKymB,gBACjBwB,GAGJjoB,KAAK7H,MAAM5H,YAAc,kBAAC,IAAD,CAAQwS,QAAS/C,KAAKwnB,yBACvCpiB,IAAKC,EAAE,cACA,KACfrF,KAAK7H,MAAM5H,aAAeyP,KAAK7H,MAAMuvB,aAAe,kBAAC,IAAD,CAAQ3kB,QAAS/C,KAAKsmB,iBAClElhB,IAAKC,EAAE,WACA,QAhClCwB,oBACE7G,KAAKunB,sBAGP3S,qBACE5U,KAAKunB,sBAgCPnmB,SACE,GAAIpB,KAAK7Q,MAAMsiB,YACb,OAAO,kBAAC,IAAD,CAAU3O,GAAI9C,KAAK7Q,MAAMsiB,cAGlC,MAAM,aACJyW,GACEloB,KAAK7H,MACH8O,EAAmBhB,GrDpIA,GqDqInBkiB,EAAiBD,EAAe9iB,IAAKC,EAAE,uBAAyBD,IAAKC,EAAE,oBAC7E,OAAO,oCACK,kBAAC,GAAD,CAAY3K,OAAQuM,EAAkBxF,UAAU,GAC5C,yBAAK/J,MAAOuuB,IACPiC,EAAeloB,KAAKgoB,sBAAwB,KAE7C,yBAAKhnB,UAAWC,KAAQmnB,eACpB,kBAAC,IAAD,CAAQhZ,WAAS,EAACrM,QAAS/C,KAAK6mB,WAC3BsB,MAKhBnoB,KAAK2nB,oBACL3nB,KAAKynB,wBAmBtBvB,GAAQnb,aAAe,CACrB9V,GAAI+V,IAAUC,QAmCDrT,mBAhCSzI,IACtB,MAAMkC,EAAY4I,GAAsB9K,GACxC,IAAIu4B,EACAQ,EAUJ,MxEnCgC/4B,KACxBgH,KAAQhH,EAAM+K,gBAAsD,KAApCD,GAAsB9K,GAAOL,GwE0BjEu5B,CAAmBl5B,IACrBu4B,GAAe,EACfQ,GAAe,IAEfA,IAAe72B,EAAUkB,QAASlB,EAAUkB,OAAOogB,OACnD+U,IAAer2B,EAAUkB,QAASlB,EAAUkB,OAAO2K,QAG9C,CACL3M,YAAac,EAAUvC,GACvB+J,cAAexH,EAAUO,KACzB81B,eACAhB,mBAAoBtsB,GAAuBjL,GAC3C+4B,iBAIuBvyB,IAAQ,CACjCgwB,oBAAqB,IAAMhwB,EHtLQ,CACnCnG,KXVmC,0BcgMnCm3B,kBAAmB,IAAMhxB,EtEpKY,CACrCnG,KFpBsC,6BwEwLtC+2B,OAAQ,IAAM5wB,EAASwG,MAAkBnH,KAAKlG,GAAMA,GACpDi4B,SAAUj4B,GAAM6G,EAAS0H,GAAiBvO,IAC1Cg4B,iBAAkB,IAAMnxB,EtE7KU,CAClCnG,KFvBkC,yBwEoMlC83B,YAAa,CAACx4B,EAAI2B,IAAUkF,ErElLW,EAACpF,EAAaE,KAAd,CACvCjB,KpBhBwC,6BoBiBxCe,cACAE,UqE+KqC63B,CAA0Bx5B,EAAI2B,IACnEm2B,iBAAkB,IAAMjxB,EtE5KW,CACnCnG,KFlBoC,6BwEgMvBoI,CAA6CsuB,I,0BChL7CqC,OAvBG,EAChBC,eAEA,MAAM9a,ECL0B,KDKMvN,OAAO8jB,WCLb,KDK+C9jB,OAAO8jB,WAChFwE,EAAcD,EAAWpjB,IAAKC,EAAE,8EAAgFD,IAAKC,EAAE,gGACvHqjB,EAActjB,IAAKC,EAAE,8JACrBsjB,EAAaH,EAAWpjB,IAAKC,EAAE,oBAAsBD,IAAKC,EAAE,qBAClE,OAAO,yBAAKrE,UAAWC,KAAQ2nB,aACrB,uBAAG5nB,UAAWC,KAAQ0nB,YAAtB,UACQvjB,IAAKC,EAAE,iBADf,aACoCsjB,IAEpC,yBAAKjxB,MAAO,CAClBgW,aAEU,uBAAG1M,UAAWC,KAAQiU,MAAtB,UAAgCuT,EAAhC,YAA+CC,KAEnD,wBAAI1nB,UAAWC,KAAQ4nB,YEfpBC,OAJY,IAAM,yBAAK3mB,MAAM,6BAA6B3H,MAAM,KAAKE,OAAO,KAAK2H,KAAMX,IAAO0G,QAAShG,QAAQ,aACtH,0BAAMzQ,EAAE,ma,sBC2BDo3B,OAtBS,EACtBj6B,SAEA,MAAM0L,EFR0B,KEQG2F,OAAO8jB,WFRV,KEQ4C9jB,OAAO8jB,WACnF,OAAO,yBAAKjjB,UAAWC,KAAQkU,WACrB,yBAAKnU,UAAWC,KAAQ+nB,MAAOtxB,MAAO,CAC5C8C,UAEU,kBAAC,IAAD,CAAMwG,UAAWC,KAAQ4B,KAAMC,GAAE,WAAMhU,IACnC,kBAAC,IAAD,KACI,kBAACm6B,GAAD,MACC7jB,IAAKC,EAAE,wBAGhB,kBAAC,IAAD,CAAQtC,QAAS5C,OAAO+oB,OAAQ9jB,IAAKC,EAAE,a,qBCDhD,MAAM8jB,WAA4BvpB,YAAW,eAAD,oBACjDijB,eAAiBC,IACf9iB,KAAK7H,MAAMixB,sBAAsBtG,IAFc,KAIjDU,iBAAmBj0B,IACjB,MAAMk0B,EAAiB,CAACl0B,EAAKC,KAAM,QAAS,UAAU4C,KAAK,KAC3D,OAAO,yBAAKoM,IAAKjP,EAAKupB,EAAG9X,UAAWyiB,GACxB,kBAAC,GAAD,CAAMl0B,KAAMA,EAAMwmB,cAAexnB,MAPE,KAUjDm1B,kBAAoB9zB,GAASA,EAAMC,IAAIN,GAAQyQ,KAAKwjB,iBAAiBj0B,IAErE85B,sBACE,MAAMC,EAAWC,MAAMC,KAAKzM,SAAS0M,iBAAiB,qBAChDC,EAAQx4B,OAAO8C,KAAKmH,KACpBvL,EAAQ05B,EAASz5B,IAAIsuB,IACzB,MACM3uB,EADa2uB,EAAGnd,UAAU7O,MAAM,KACdoC,KAAKyM,GAAa0oB,EAAMC,QAAQ3oB,IAAc,GAChE+gB,EAAO5D,EAAG6D,wBAChB,MAAO,CACLxyB,OACA2uB,KACAyL,EAAG7H,EAAK6H,EACRjvB,EAAGonB,EAAKrnB,UAGNmvB,EAAcC,KAAOl6B,EAAO,CAAC,MACnC,IAAIm6B,EAAkB,EAClBC,EAAiB,EACjBC,GAAoB,EAExB,IAAK,IAAInR,EAAI+Q,EAAYl3B,OAAS,EAAGmmB,GAAK,IAAKA,EAAG,CAChD,MAAMvpB,EAAOs6B,EAAY/Q,GAEzB,GAAIvpB,EAAKC,OAASgM,IAAW,CAC3B,GAAKyuB,EAEE,CACL,MAAML,EAAIr6B,EAAK4uB,GAAGzmB,MAAM2W,UAAY9e,EAAK4uB,GAAGzmB,MAAM2W,UAAUlc,MAAM,KAAK,GAAGua,MAAM,GAAI,GAAKnd,EAAKq6B,EAC9FG,EAAkBG,SAASN,GAAKM,SAAS36B,EAAKoL,GAC9C,MAJApL,EAAK4uB,GAAGgM,UAAUpd,IAAI,eAMnB,CACLkd,GAAoB,EACpB,MAAML,EAAIr6B,EAAK4uB,GAAGzmB,MAAM2W,UAAY9e,EAAK4uB,GAAGzmB,MAAM2W,UAAUlc,MAAM,KAAK,GAAGua,MAAM,GAAI,GAAKnd,EAAKq6B,EACxFQ,EAAiBF,SAASN,GAAKM,SAAS36B,EAAKoL,GAE/CyvB,EAAiBJ,IACnBA,EAAiBI,IAKvB,MACMC,EAActN,SAASuN,cAAc,sBACrCpO,EAAY6N,EAFC,IAIf7N,EAAY8N,GAEdz0B,QAAQC,IAAI,8CAA+C0mB,EAAW,IAAK8N,GAGzEK,IACFA,EAAY3yB,MAAMgD,OAAlB,UAA8BwhB,EAA9B,OAIJrV,oBACE7G,KAAKqpB,sBAGPzU,qBACE5U,KAAKqpB,sBAGPjoB,SACE,MAAM,UACJrO,EADI,eAEJL,GACEsN,KAAK7H,MAET,IAAKpF,IAAcL,EAAeC,OAChC,OAAO,kBAAC,GAAD,CAAkBjD,KAAM0V,IAAKC,EAAE,0CAGxC,MAAM7K,EHvGwB,KGuGK2F,OAAO8jB,WHvGZ,KGuG8C9jB,OAAO8jB,WACnF,OAAO,yBAAKjjB,UAAU,gBACTjO,EAAY,kBAAC,IAAD,CAAO4wB,aAAW,GACvB,kBAAC,IAAD,KACI,kBAAC,IAAD,QAEG,KACf,kBAAC,KAAD,CAAiBd,eAAgB7iB,KAAK6iB,eAAgB7hB,UAAU,SAASiiB,OAAQvwB,EAAgBoY,OAAQ8Y,IAAQC,KAAMC,cAAkBC,UAAWC,IAAiBxpB,MAAOA,EAAO0pB,YAAaC,IAAmBC,aAAa,EAAOC,aAAa,EAAOC,gBAAgB,kBACtQtkB,KAAK0jB,kBAAkBhxB,MAW5Cy2B,GAAoBlnB,aAAe,CACjCvP,eAAgB,IAWHkF,mBARSzI,IACtB,MAAM8e,EAAoB8Q,GAAuB5vB,GACjD,MAAO,CACL4D,UAAWK,EAAsBjE,KAAW8e,EAC5Cvb,eAAgBD,YAAQysB,GAAwB/vB,IAAQiC,OAAOozB,OAI3B,CACtC4E,sBR1H0C34B,IAAK,CAC/CjB,KXXwC,6BWYxCiB,WQuHamH,CAEZuxB,I,qCC3FI,MAAMoB,WAA6B3qB,YAAW,eAAD,oBAClDzQ,MAAQ,CACNq7B,aAAa,GAFmC,KAIlDC,yBAA2B,KACrBzqB,KAAK7H,MAAM9G,YACb2O,KAAKC,SAAS,CACZuqB,aAAa,IAEfxqB,KAAK7H,MAAMuyB,kBAAkB1qB,KAAK7H,MAAM9G,UAAW2O,KAAK7H,MAAMvI,OAC9DoQ,KAAK7H,MAAMvI,MAAMyJ,QAAQ9J,IACnBA,EAAKoL,EAAI,IACXqF,KAAK7H,MAAMwyB,oBAAoBz5B,OAAOqJ,OAAO,GAAIhL,EAAM,CACrDoL,EAAG,QA5CO,GACpB/K,QACAg7B,uBAIA,IAAInvB,EAAO,EACX,MAAMovB,EAAW,GAEjB,IAAK,IAAI/R,EAAI,EAAGA,EAAIlpB,EAAM+C,SAAUmmB,EACxB,IAANA,EACFrd,GAAQ,GACO,IAANqd,GAAiB,KAANA,EACpBrd,GAAQ,GAERA,GADgBqd,EAhBE,GAAK,EAiBf,GAEA,GAGV+R,EAASv2B,KAAKmH,GAGhB,IAAK,IAAIqd,EAAI,EAAGA,EAAIlpB,EAAM+C,SAAUmmB,EAClC8R,EAAiB,CACfp7B,KAAMgM,IACNC,KAAMovB,EAAS/R,MAsBfgS,CAAc9qB,KAAK7H,OAEd6H,KAAK7H,MAAM4yB,UACd/qB,KAAK7H,MAAMyyB,iBAAiB,CAC1Bp7B,KAAMoM,QAMdiL,oBACE7G,KAAKyqB,2BAGP7V,qBACO5U,KAAK7Q,MAAMq7B,aACdxqB,KAAKyqB,2BAITrpB,SACE,MAAM1J,EAAQsI,KAAK7H,MAAM4yB,SAAW,CAClC7iB,UAAW,SACT,GACJ,OAAO,qCACOlI,KAAK7H,MAAM4yB,UAAY,kBAAC,GAAD,CAAiBj8B,GAAIkR,KAAK7H,MAAM9G,UAAUvC,KACnE,yBAAKkS,UAAWC,KAAQ+pB,QAAStzB,MAAOA,IAClCsI,KAAK7H,MAAM4yB,UAAY,kBAAC,GAAD,CAAWvC,UAAU,IAC9C,yBAAKxnB,UAAWC,KAAQgqB,UAAWvzB,MAAO,CACpD8C,MJ3FwB,OI6FV,kBAAC,GAAD,UAoCT5C,mBApBS,CAACzI,EAAO2Y,KAC9B,MAAMhZ,EAAKqE,EAAehE,GAE1B,GAAI2Y,EAASijB,SAAU,CAErB,MAAO,CACL15B,UAFgB4I,GAAsB9K,GAGtCL,KACAc,MAAOyK,GAAuBlL,IAKlC,MAAO,CACLkC,UAFgBvC,EAAK8B,EAAkBzB,EAAOL,GAAM,KAGpDA,KACAc,MAAOoB,EAAmB7B,KAIU,CACtCu7B,kBAAmBrF,GACnBuF,iBAAkBrF,GAClBoF,oBTnFwCp7B,IAAI,CAC5CC,KX7CyC,8BW8CzCiB,MAAOlB,KS8EMqI,CAIZ2yB,IC3HI,MAAMW,WAAsBtrB,YAAW,eAAD,oBAC3CzQ,MAAQ,CACNq7B,aAAa,GAF4B,KAI3CW,kBAAoB,KACdnrB,KAAK7H,MAAM9G,YACb2O,KAAKC,SAAS,CACZuqB,aAAa,IAEfxqB,KAAK7H,MAAMizB,iBAAiBprB,KAAK7H,MAAM9G,UAAW2O,KAAK7H,MAAMvI,SATtB,KAuB3Cy7B,WAAa,IACPrrB,KAAK7H,MAAMuuB,mBACN,kBAAC,GAAD,CAAoBqE,UAAU,IAGhC,yBAAK/pB,UAAU,qBACV,kBAAC,GAAD,CAAUoS,MAAM,IAChB,kBAAC,GAAD,CAAUA,MAAM,KAjB9BvM,oBACE7G,KAAKmrB,oBAGPvW,qBACO5U,KAAK7Q,MAAMq7B,aACdxqB,KAAKmrB,oBAeT/pB,SACE,OAAO,oCACK,kBAAC,GAAD,MACA,kBAAC,GAAD,CAAyBK,UAAU,IAClCzB,KAAK7H,MAAM+vB,aAAeloB,KAAKqrB,aAAe,kBAAC,GAAD,CAAkB37B,KAAM0V,IAAKC,EAAE,iBAyB/EzN,mBAZSzI,IACtB,MAAML,EAAKqE,EAAehE,GACpBkC,EAAYvC,EAAK8B,EAAkBzB,EAAOL,GAAM,KAEtD,MAAO,CACLuC,YACA62B,gBAHmB72B,IAAaA,EAAUkB,SAASlB,EAAUkB,OAAOogB,OAIpE/iB,MAAOoB,EAAmB7B,GAC1Bu3B,mBAAoBtsB,GAAuBjL,KAIP,CACtCi8B,iB7E/DgC,CAAC/5B,EAAWzB,KAIrC,CACLJ,KFhBmC,0BEiBnCiB,MALO,2BAAQY,GAAR,IACPqB,eAAgB9C,O6E4DLgI,CAEZszB,ICpEH,MAAMI,WAAqB1rB,YACzBiH,oBACE7G,KAAK7H,MAAMozB,kBAGbnqB,SACE,OAAO,oCACK,kBAAC,GAAD,MACA,kBAAC,GAAD,CAAyBK,UAAU,IAClCzB,KAAK7H,MAAMuuB,mBAAqB,kBAAC,GAAD,CAAoBqE,UAAU,IAAW,yBAAK/pB,UAAU,qBACjF,kBAAC,GAAD,CAAUoS,MAAM,IAChB,kBAAC,GAAD,CAAUA,MAAM,OAgBzBxb,mBAJSzI,IAAK,CAC3Bu3B,mBAAoBtsB,GAAuBjL,KAGL,CACtCo8B,gB9EfmC,MACnC/7B,KFnBiC,yBgFgCpBoI,CAEZ0zB,ICvBI,MAAME,WAAsB5rB,YAAW,eAAD,oBAC3C4jB,iBAAmBj0B,IACjB,MAAMk0B,EAAiB,CAACl0B,EAAKC,KAAM,QAAS,QAAQ4C,KAAK,KAUzD,OARA7C,EAAKkL,EAAI,GAELlL,EAAKC,OAASgM,IAChBjM,EAAKoL,EAAI,EAETpL,EAAKoL,EAAI,GAGJ,yBAAK6D,IAAKjP,EAAKupB,EAAG9X,UAAWyiB,GACxB,kBAAC,GAAD,CAAMl0B,KAAMA,EAAMwmB,cAAeznB,MAbJ,KAgB3Co1B,kBAAoB9zB,GAASA,EAAMC,IAAIN,GAAQyQ,KAAKwjB,iBAAiBj0B,IAErE6R,SACE,MAAM,UACJrO,EADI,eAEJL,GACEsN,KAAK7H,MAET,IAAKpF,IAAcL,EAAeC,OAChC,OAAO,kBAAC,GAAD,CAAkBjD,KAAM0V,IAAKC,EAAE,0CAGxC,MAAM7K,EPzCwB,KOyCK2F,OAAO8jB,WPzCZ,KOyC8C9jB,OAAO8jB,WACnF,OAAO,oCACMlxB,EAAY,kBAAC,IAAD,CAAO4wB,aAAW,GACvB,kBAAC,IAAD,KACI,kBAAC,IAAD,QAEG,KACf,kBAAC,KAAD,CAAiB3iB,UAAU,eAAeiiB,OAAQvwB,EAAgBoY,OAAQ8Y,IAAQC,KAAMC,cAAkBC,UAAWC,IAAiBxpB,MAAOA,EAAO0pB,YAAaC,IAAmBC,aAAa,EAAOC,aAAa,EAAOC,gBAAgB,kBACvOtkB,KAAK0jB,kBAAkBhxB,MAU5C84B,GAAcvpB,aAAe,CAC3BvP,eAAgB,IAWHkF,mBARSzI,IACtB,MAAM8e,EAAoB8Q,GAAuB5vB,GACjD,MAAO,CACL4D,UAAWK,EAAsBjE,KAAW8e,EAC5Cvb,eAAgBD,YAAQysB,GAAwB/vB,IAAQiC,OAAOozB,OAIpD5sB,CAAyB4zB,I,8BC5DjC,MAAMC,WAAuB7rB,YAAW,eAAD,oBAC5CzQ,MAAQ,CACNq7B,aAAa,GAF6B,KAI5CkB,mBAAqB,KACnB,GAAI1rB,KAAK7H,MAAM9G,UAAW,CACxB2O,KAAKC,SAAS,CACZuqB,aAAa,IAIf,MAAMX,EAAcC,KAAO9pB,KAAK7H,MAAMvI,MAAO,CAAC,IAAK,MACnDoQ,KAAK7H,MAAMuyB,kBAAkB1qB,KAAK7H,MAAM9G,UAAWw4B,GACnD,IAAI8B,EAAc,EAClB3rB,KAAK7H,MAAMvI,MAAMyJ,QAAQ9J,IACnBA,EAAKC,OAASM,MAChB67B,GAAe,EACf3rB,KAAK7H,MAAMyzB,oBAAoBr8B,EAAKT,OAIxC,IAAK,IAAIgqB,EAAI,EAAGA,EAA8C,GAAzC9Y,KAAK7H,MAAMvI,MAAM+C,OAASg5B,GAAkB7S,GAAK,EACpE9Y,KAAK7H,MAAMyyB,iBAAiB,CAC1Bp7B,KAAMgM,IACNO,SAAU+c,EACVnd,UAAU,IAIdqE,KAAK7H,MAAMyyB,iBAAiB,CAC1Bp7B,KAAMoM,QAKZiL,oBACE7G,KAAK0rB,qBAGP9W,qBACO5U,KAAK7Q,MAAMq7B,aACdxqB,KAAK0rB,qBAITtqB,SACE,OAAO,oCACK,kBAAC,GAAD,CAAiBtS,GAAIkR,KAAK7H,MAAM9G,UAAUvC,KAC1C,yBAAKkS,UAAWC,KAAQ+pB,SACpB,kBAAC,GAAD,CAAWxC,UAAU,IACrB,yBAAKxnB,UAAWC,KAAQgqB,UAAWvzB,MAAO,CACpD8C,MR9DwB,OQgEV,kBAAC,GAAD,UAyBT5C,mBAVSzI,IACtB,MAAML,EAAKqE,EAAehE,GAE1B,MAAO,CACLkC,UAFgBvC,EAAK8B,EAAkBzB,EAAOL,GAAM,KAGpDA,KACAc,MAAOoB,EAAmB7B,KAIU,CACtCu7B,kBAAmBrF,GACnBuF,iBAAkBrF,GAClBqG,oBb/CwCn7B,IAAK,CAC7CjB,KX1CyC,8BW2CzCiB,Wa0CamH,CAIZ6zB,IC/EH,MAAMI,GAAe,CACnB,KAAQ,kBAAC,GAAD,MACR,CAACz9B,GAAO,kBAAC,GAAD,MACR,CAACC,GAAM,kBAAC,GAAD,MACP,CAACC,GAAQ,kBAAC,GAAD,MACT,CAACC,GAAe,kBAAC,GAAD,OAEX,MAAMu9B,WAAkBlsB,YAAW,eAAD,oBACvCmsB,aAAe,KACb,GAAI/rB,KAAK7H,MAAM6zB,iBAAkB,CAC/B,MAAMl9B,EAAKkR,KAAK7H,MAAMrJ,IAAM,KAC5BkR,KAAK7H,MAAM8zB,gBAAgBn9B,GAC3BkR,KAAKksB,yBACLlsB,KAAKmsB,gBAN8B,KASvCD,uBAAyB,KACvB,MAAMviB,EAASoT,SAASqP,qBAAqB,UAAU,GAEnDz9B,EAAYqR,KAAK7H,MAAM1J,MACzBkb,EAAOwgB,UAAUpd,IAAI,UAErBpD,EAAOwgB,UAAUkC,OAAO,WAfW,KAkBvCF,YAAc,KACZhsB,OAAOmsB,SAAS,EAAG,IAGrBzlB,oBACE7G,KAAK+rB,eAGPnX,qBACE5U,KAAK+rB,eAGP3qB,SACE,MAAM,GACJtS,EADI,KAEJL,EAFI,iBAGJu9B,EAHI,kBAIJO,GACEvsB,KAAK7H,MAET,OAAK6zB,GAA2B,OAAPl9B,EAQrBL,IAASJ,EACJw9B,GAAap9B,GAGlB89B,EACK,oCACO,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,CAAkB78B,KAAM0V,IAAKC,EAAE,uEnGtEV,MmG0EjCvW,EACK,oCACO,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,CAAkBY,KAAM0V,IAAKC,EAAE,oCAIxCwmB,GAAap9B,GA3BX,kBAAC,IAAD,CAAOk1B,aAAW,GACX,kBAAC,IAAD,KACI,kBAAC,IAAD,SA8CT/rB,mBATS,CAACzI,EAAO2Y,KAAc,IAAD,IAC3C,MAAMnX,EAAaI,EAAkB5B,GACrC,MAAO,CACLo9B,kBAAmBp2B,KAAQxF,GAC3Bq7B,kBAAmBl7B,EAAsB3B,GACzCL,IAAI,UAAAgZ,EAAS0kB,aAAT,mBAAgBC,cAAhB,eAAwBl8B,cAAe4C,EAAehE,KAItB,CACtC88B,gBhF5E8Bn9B,GAAM+F,MAAOc,EAAU+C,KAMrD,IACE,MAAMvJ,EAAQuJ,IACd,IAAIg0B,EAAoB,KAExB,GAAI59B,EACF49B,EAAoB97B,EAAkBzB,EAAOL,IAAO,SAC/C,CACL,MAAM69B,GJlD2B59B,EIkDWG,EAAiBC,GJlDhBgK,aAAayzB,QAAb,kCAAgD79B,UAAesH,GImDtGw2B,EAAOj8B,EAAkBzB,EAAOw9B,GACtCD,EAAoBC,GAAeE,EAAOA,EpBkFH19B,IAAS,IAAI6Y,IAAU/W,EAAsB9B,GAAQ,MAAO,kBAAmB6Y,IAAUzW,EAAwBpC,GAAQ,MAAO,gBoBlFtH29B,CAA8B39B,GAAO,GAItFwG,EADE+2B,EACOj0B,GAA0Bi0B,EAAkB59B,IAE5CyJ,GnBjD0B,MmBmDrC,MAAO3C,GACP,OAvBcN,EAuBCM,EAtBfL,QAAQC,IAAI,+BAAgCF,GACrCA,EAFOA,MJtCqBvG,IoFgHxB6I,CAEZk0B,I,QCpGI,MAAMiB,WAAYntB,YACvBiH,oBACE7G,KAAK7H,MAAM60B,eAAehtB,KAAK7H,MAAMlD,GAAG4I,aACxCmC,KAAK7H,MAAM80B,kBACXjtB,KAAK7H,MAAM+0B,oBACXltB,KAAK7H,MAAMg1B,cAAcntB,KAAK7H,MAAMlD,IAGtCm4B,kBACE,MAAO,CACL9Y,QAAStU,KAAK7H,MAAMmc,QACpBlP,SACAnQ,GAAI+K,KAAK7H,MAAMlD,IAInBmM,SACE,OAAO,oCACK,kBAAC,IAAD,CAAcM,QAAM,EAAC2rB,SAAO,IAC5B,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAInsB,OAAQjJ,GAAS,kBAAC,GAAD,iBAAeA,EAAf,CAAsB1J,KxGjCjE,YwGkCI,kBAAC,IAAD,CAAO6+B,OAAK,EAACC,KAAK,OAAOnsB,OAAQjJ,GAAS,kBAAC,GAAD,iBAAeA,EAAf,CAAsB1J,KAAMJ,OACtE,kBAAC,IAAD,CAAOi/B,OAAK,EAACC,KAAK,gBAAgBnsB,OAAQjJ,GAAS,kBAAC,GAAD,iBAAeA,EAAf,CAAsB1J,KxGnC7E,YwGoCI,kBAAC,IAAD,CAAO6+B,OAAK,EAACC,KAAK,qBAAqBnsB,OAAQjJ,GAAS,kBAAC,GAAD,iBAAeA,EAAf,CAAsB1J,KAAML,OACpF,kBAAC,IAAD,CAAOk/B,OAAK,EAACC,KAAK,0BAA0BnsB,OAAQjJ,GAAS,kBAAC,GAAD,iBAAeA,EAAf,CAAsB1J,KAAMH,OACzF,kBAAC,IAAD,CAAOg/B,OAAK,EAACC,KAAK,4BAA4BnsB,OAAQjJ,GAAS,kBAAC,GAAD,iBAAeA,EAAf,CAAsB1J,KAAMF,SAGnG,kBAAC,GAAD,QAahBw+B,GAAIS,kBAAoB,CACtBlZ,QAAStJ,IAAUoS,OACnBhY,KAAM4F,IAAUC,OAChBhW,GAAI+V,IAAUC,QAYDrT,mBAAQ,KATIjC,IAClB,CACLq3B,eAAgBnvB,GAAelI,EC/DA,CACjCnG,KxGF2B,gBwGG3BiB,MD6DyDoN,IACvDovB,gBAAiB,IAAMt3B,EAAS+G,MAChCwwB,kBAAmB,IAAMv3B,EAAS2I,MAClC6uB,cAAel4B,GAAMU,EAASwJ,GAAelK,MAIlC2C,CAAkCm1B,I,qBElDlCr1B,OAVD,CAACvI,EARoB,OAQS0D,KAC1C,OAAQA,EAAOrD,MACb,IAXqB,YAYnB,OAAOsD,YAAgBD,EAAOpC,MAXD,QAa/B,QACE,OAAOtB,ICEEyD,mBAAgB,CAC7BjC,WxGiBc,CAACxB,EAAQiB,EAA0ByC,KACjD,OAAQA,EAAOrD,MACb,IAlC0B,iBAoCtB,MAAO,CACLa,KAAMwC,EAAOpC,MACbb,MAAO,IAIb,IAzC0B,iBA2CtB,OAAO,2BAAKT,GAAZ,IACEkB,KAAK,2BAAMlB,EAAMkB,MACZwC,EAAOpC,SAKlB,IAjDiC,wBAmD7B,OAAOH,EAAoB,CACzBnB,QACAoB,YAAasC,EAAOtC,YACpBC,KAAM,UACNC,MAAOoC,EAAOpC,QAIpB,IA1DsC,6BA4DlC,OAAOH,EAAoB,CACzBnB,QACAoB,YAAasC,EAAOtC,YACpBC,KAAM,cACNC,MAAOoC,EAAOpC,QAIpB,IAnE+B,sBAqE3B,OAAO,2BAAKtB,GAAZ,IACES,MAAOiD,EAAOpC,QAIpB,QACE,OAAOtB,IwG/DX+D,WACA8Q,oBACAvG,cACAlH,e9Fdc,CAACpH,EAAQ+G,GAA8BrD,KACrD,OAAQA,EAAOrD,MACb,IAR6B,oBAUzB,OAAO,2BAAKL,GAAZ,IACE,CAAC0D,EAAOpC,MAAM3B,IAAK2+B,KAAY,2BAAK58B,YAAS1B,EAAM0D,EAAOpC,MAAM3B,MAC3D+D,EAAOpC,OACT0F,MAIT,IAhByC,gCAkBrC,OAAO,2BAAKhH,GAAZ,IACE,CAAC0D,EAAO/D,IAAK2+B,KAAY,2BAAK58B,YAAS1B,EAAM0D,EAAO/D,MAA5B,IACtBilB,WAAYlhB,EAAOkhB,aAClB5d,MAIT,QACE,OAAOhH,I8FNXwF,SnGtBc,CAACxF,EAAQ,GAAI0D,KAC3B,OAAQA,EAAOrD,MACb,IAH6B,oBAI3B,CACE,MAAMk+B,EAAgBjxB,YAAa5J,EAAOpC,OAI1C,OAHiBkiB,KAAOxjB,EAAO,CAC7Bw+B,OAAQD,IAKd,QACE,OAAOv+B,ImGWXC,K1GnBc,CAACD,EAAQN,EAAoBgE,KAC3C,OAAQA,EAAOrD,MACb,IATyB,gBAWrB,MASC,CACLV,IAFqB8+B,EARM/6B,EAAOpC,OAUrB3B,GACbC,SAAU6+B,EAAS7+B,SACnBC,SAAU4+B,EAAS3uB,SAAS4uB,YAC5B5+B,YAAa2+B,EAASE,YAAY/vB,IAAI,QAVtC,QACE,OAAO5O,EAIb,IAAyBy+B,G0GQvB1zB,cvFHc,CAAC/K,EAAQ2K,GAA8BjH,KACrD,OAAQA,EAAOrD,MACb,IAtBmC,0BAuBjC,CACE,MAAMu+B,EAAW,GAGjB,OAFA78B,OAAO8C,KAAK+F,IAAqBlK,IAAIm+B,GAAKD,EAASC,GAAKn7B,EAAOpC,MAAMu9B,IACrED,EAAS/zB,kBAAmB,EACrB+zB,EAGX,IA7BgC,uBA8B9B,OAAOj0B,GAET,IAxBkC,yBAyBhC,OAAO5I,OAAOqJ,OAAO,GAAIpL,EAAO,CAC9B6K,kBAAkB,IAGtB,IA5BoC,2BA6BlC,OAAO9I,OAAOqJ,OAAO,GAAIpL,EAAO,CAC9B6K,kBAAkB,IAGtB,IAzC+B,sBA0C7B,OAAOD,GAET,IA3C0B,iBA6CtB,OAAO7I,OAAOqJ,OAAO,GAAIpL,EAAO,CAC9ByC,KAAMiB,EAAOpC,QAInB,IAjDgC,uBAmD5B,OAAOS,OAAOqJ,OAAO,GAAIpL,EAAO,CAC9B2C,YAAae,EAAOpC,QAI1B,IAvD8B,qBAwD5B,OAAKoC,EAAOpC,MAAMsL,SAQX4W,KAAOxjB,EAAO,CACnBuD,eAAgB,CACdu7B,QAAS,CAAC,CAAC/D,SAASr3B,EAAOpC,MAAMsL,UAAW,EAAGlJ,EAAOpC,WATjDkiB,KAAOxjB,EAAO,CACnBuD,eAAgB,CACdw7B,SAAU,CAACr7B,EAAOpC,UAW1B,IArEiC,wBAsE/B,CACE,MAAM09B,EAAat7B,EAAOpC,MACpB2a,EAAqBjc,EAAMuD,eAAe2Y,UAAU9b,GAAQA,EAAKT,KAAOq/B,GAE9E,OAAI/iB,GAAsB,EACjBuH,KAAOxjB,EAAO,CACnBuD,eAAgB,CACdu7B,QAAS,CAAC,CAAC7iB,EAAoB,OAK9Bjc,EAGX,IAnFqC,4BAoFnC,CACE,MAAMi/B,EAAa37B,YAAQtD,EAAMuD,gBACjC,IAAI27B,GAAmB,EACvB,MAAMC,EAAgBz7B,EAAOpC,MAAMZ,IAAI,EACrC0+B,IACA3E,IACAnvB,IACAE,IACAme,QAEA,MAAM0V,EAAYJ,EAAW75B,KAAKk6B,GAAMA,EAAG3/B,KAAOgqB,GAElD,OAAM0V,EAAUD,IAAMA,GAAKC,EAAU5E,IAAMA,GAAK4E,EAAU/zB,IAAMA,GAAK+zB,EAAU7zB,IAAMA,GACnF0zB,GAAmB,EACZn9B,OAAOqJ,OAAO,GAAIi0B,EAAW,CAClC/zB,IACAE,IACA4zB,IACA3E,OAIG4E,IAET,OAAOH,EAAgB,2BAAQl/B,GAAR,IACrBuD,eAAgB47B,IACdn/B,EAGR,IAlHiC,wBAmH/B,CACE,MAAMmc,EAAgBzY,EAAOpC,MACvB2a,EAAqBjc,EAAMuD,eAAe2Y,UAAU9b,GAAQA,EAAKT,KAAOwc,EAAcxc,IAE5F,GAAIsc,GAAsB,EAAG,CAM3B,OALiBuH,KAAOxjB,EAAO,CAC7BuD,eAAgB,CACdu7B,QAAS,CAAC,CAAC7iB,EAAoB,EAAGla,OAAOqJ,OAAO,GAAI+Q,QAM1D,OAAOnc,EAGX,QACE,OAAOA,IuFnHX6vB,e7BVc,CAAC7vB,EAAQ0vB,GAA+BhsB,KACtD,OAAQA,EAAOrD,MACb,IAhB+B,sBAiB7B,CACE,MAAMu+B,EAAW,GAEjB,OADA78B,OAAO8C,KAAK8qB,IAA2BjvB,IAAIm+B,GAAKD,EAASC,GAAKn7B,EAAOpC,MAAMu9B,IACpED,EAGX,IAtBiC,wBAuB/B,OAAOlP,GAET,IAxBoC,2BAyBlC,OAAKhsB,EAAOpC,MAAMsL,SAQX4W,KAAOxjB,EAAO,CACnBuD,eAAgB,CACdu7B,QAAS,CAAC,CAAC/D,SAASr3B,EAAOpC,MAAMsL,UAAW,EAAGlJ,EAAOpC,WATjDkiB,KAAOxjB,EAAO,CACnBuD,eAAgB,CACdw7B,SAAU,CAACr7B,EAAOpC,UAW1B,IArCuC,8BAsCrC,CACE,MAAM09B,EAAat7B,EAAOpC,MACpB2a,EAAqBjc,EAAMuD,eAAe2Y,UAAU9b,GAAQA,EAAKT,KAAOq/B,GAE9E,OAAI/iB,GAAsB,EACjBuH,KAAOxjB,EAAO,CACnBuD,eAAgB,CACdu7B,QAAS,CAAC,CAAC7iB,EAAoB,OAK9Bjc,EAGX,IApDuC,8BAqDrC,CACE,MAAMmc,EAAgBzY,EAAOpC,MACvB2a,EAAqBjc,EAAMuD,eAAe2Y,UAAU9b,GAAQA,EAAKT,KAAOwc,EAAcxc,IAE5F,GAAIsc,GAAsB,EAAG,CAM3B,OALiBuH,KAAOxjB,EAAO,CAC7BuD,eAAgB,CACdu7B,QAAS,CAAC,CAAC7iB,EAAoB,EAAGla,OAAOqJ,OAAO,GAAI+Q,QAM1D,OAAOnc,EAGX,IAvEsC,6BAwEpC,CACE,MAAMi/B,EAAa37B,YAAQtD,EAAMuD,gBACjC,IAAI27B,GAAmB,EACvB,MAAMC,EAAgBz7B,EAAOpC,MAAMZ,IAAI,EACrC0+B,IACA3E,IACAnvB,IACAE,IACAme,QAEA,MAAM0V,EAAYJ,EAAW75B,KAAKk6B,GAAMA,EAAG3/B,KAAOgqB,GAElD,OAAM0V,EAAUD,IAAMA,GAAKC,EAAU5E,IAAMA,GAAK4E,EAAU/zB,IAAMA,GAAK+zB,EAAU7zB,IAAMA,GACnF0zB,GAAmB,EACZn9B,OAAOqJ,OAAO,GAAIi0B,EAAW,CAClC/zB,IACAE,IACA4zB,IACA3E,OAIG4E,IAET,OAAOH,EAAgB,2BAAQl/B,GAAR,IACrBuD,eAAgB47B,IACdn/B,EAGR,QACE,OAAOA,I6BhFX2E,YrGtBc,CAAC3E,EAAQyE,GAA4Bf,KACnD,OAAQA,EAAOrD,MACb,IAL2B,kBAOvB,OAAO,2BAAKL,GAAZ,IACE,CAAC0D,EAAOzB,OAAOtC,IAAK+D,EAAOzB,OAAOX,QAIxC,IAX8B,qBAY5B,CACE,MAAMs9B,EAAQ,eAAQ5+B,GAGtB,cADO4+B,EAASl7B,EAAO/D,IAChBi/B,EAGX,IArB4B,mBAuBxB,OAAOl7B,EAAOsB,QAGlB,IA3B8B,qBA6B1B,OAAOP,GAGX,QACE,OAAOzE,IqGLXuI,SACAG,ShGxBc,CAAC1I,EAAQ0G,GAAwBhD,KAC/C,OAAQA,EAAOrD,MACb,IATqC,4BAWjC,OAAO,2BAAKL,GACP0D,EAAOpC,OAIhB,IAf0B,iBAiBtB,OAAOoF,GAGX,QACE,OAAO1G,IgGUXwE,WtG7Bc,CAACxE,EAAQmE,GAAoBT,KAC3C,OAAQA,EAAOrD,MACb,IAJ0B,iBAMtB,MAAO,IAAI8D,MAAuBT,EAAOpC,OAG7C,QACE,OAAOtB,IsGsBX8P,ShFvBc,CAAC9P,EAAQuP,GAAkB7L,KACzC,OAAQA,EAAOrD,MACb,IAZwB,eAcpB,OAAO0B,OAAOqJ,OAAO,GAAI1H,EAAOpC,OAGpC,IAhBwB,eAkBpB,OAAO,2BAAKtB,GACP0D,EAAOpC,OAIhB,QACE,OAAOtB,IgFSXqgB,qBpD/Bc,CAACrgB,EAAQmgB,GAAsCzc,KAC7D,OAAQA,EAAOrD,MACb,IALsC,6BAOlC,OAAOqD,EAAOpC,MAGlB,IATwC,+BAWpC,OAAO6e,GAGX,QACE,OAAOngB,MqDCEu/B,OAZQ,KACrB,MAAMC,EAAa,CAACC,MAEdC,EAAmB1uB,OAAO2uB,sCAAwCC,IAMxE,OAJK5uB,OAAO2uB,qCAILE,YAAYC,GAASJ,EAAiBK,eAAmBP,M,kRCoBlEvpB,IAAK+pB,aAAa,KADA,UACiBC,IACnChqB,IAAK+pB,aAAa,QAFA,UAEoBE,IACtCjqB,IAAK+pB,aAAa,KAHA,UAGiBG,IACnClqB,IAAK+pB,aAAa,KAJA,UAIiBI,IACnCnqB,IAAK+pB,aAAa,KALA,UAKiBK,IACnCpqB,IAAK+pB,aAAa,KANA,UAMiBM,IACnCrqB,IAAK+pB,aAAa,KAPA,UAOiBO,IACnCtqB,IAAK+pB,aAAa,KARA,UAQiBQ,IACnCvqB,IAAK+pB,aAAa,KATA,UASiBS,IACnCxqB,IAAK+pB,aAAa,KAVA,UAUiBU,IACnCzqB,IAAK+pB,aAAa,KAXA,UAWiBW,IACnC1qB,IAAK+pB,aAAa,MAZA,UAYkBY,IACpC3qB,IAAK+pB,aAAa,KAbA,UAaiBa,IACnC5qB,IAAK+pB,aAAa,KAdA,UAciBc,IACnC7qB,IAAK+pB,aAAa,QAfA,UAeoBe,IACtC9qB,IAAK+pB,aAAa,KAhBA,UAgBiBgB,IACnC/qB,IAAK+pB,aAAa,KAjBA,UAiBiBiB,IACnChrB,IAAK+pB,aAAa,MAlBA,UAkBkBkB,IACpCjrB,IAAK+pB,aAAa,KAnBA,UAmBiBmB,IACnClrB,IAAK+pB,aAAa,KApBA,UAoBiBoB,IACnCnrB,IAAK+pB,aAAa,KArBA,UAqBiBqB,IACnCprB,IAAK+pB,aAAa,KAtBA,UAsBiBsB,IACnCrrB,IAAK+pB,aAAa,KAvBA,UAuBiBuB,IACnCtrB,IAAK+pB,aAAa,QAxBA,UAwBoBwB,IACvBvrB,EAAf,EChDA,MAGMwrB,GAAY,CAChBC,QAFc,CAAC,QAAS,MAAO,SAAU,cAAe,aAAc,cAAe,YAAa,mBAAoB,cAIlHC,GAAgBC,uLAAYC,+BAAiC,KAG/DF,KACFF,GAAUK,QAAU,CAClBvc,cAAeoc,KAuBJI,UAnBI,IACV,kBAAC,IAAD,CAAeC,MAAOzC,MACnB,kBAAC,mBAAD,CAAkB0C,MAjBPC,yBAAeC,MAkBtB,kBAAC,IAAD,CAAQV,UAAWA,GAAWW,SAAS,UAClC,EACXt8B,QAEKA,EAKE,kBAAC,GAAD,CAAKA,GAAIA,IAHP,S,0TC7BZ,SAASxC,EAAQ++B,GACtB,OAAOjI,MAAMkI,QAAQD,GAASA,EAAQ,GAEjC,SAAS3gC,EAAS2gC,GACvB,OAAOE,IAASF,GAASA,EAAQ,GAO5B,SAAS/0B,EAAayhB,GAC3B,OAAOA,EAAM9pB,OAAO,CAACilB,EAAK9pB,KACxB8pB,EAAI9pB,EAAKT,IAAMS,EACR8pB,GACN,IAYE,MAAM6D,EAAa,CAACzsB,EAAOzB,KAChC,GAA2B,qBAAhB2iC,EAAOC,MAAwBA,KAAKC,eAAgB,CAC7D,MAAMzK,EAASp4B,GAAY,KAC3B,OAAO,IAAI4iC,KAAKC,eAAezK,EAAQ,CACrC0K,KAAM,UACNC,MAAO,QACPC,IAAK,YACJC,OAAO,IAAIC,KAAKzhC,IAGrB,OAAOA,EAAM4B,OAAO,EAAG,IAAI8/B,QAAQ,IAAK,MAoB7Br/B,EAAkB,CAACrC,EAAO2hC,SAA2B/7B,IAAV5F,GAAiC,OAAVA,EAAiB2hC,EAAe3hC,EAClG8jB,EAAatf,IACxB,MAAMo9B,EAAMp9B,EAAGC,IAAIC,SACbm9B,EAAMD,EAAI/d,QAAQqV,QAAQ,QAChC,OAAO2I,GAAO,EAAID,EAAI/d,QAAQ5H,MAAM,EAAG4lB,GAAOD,EAAI/d,SAEvCie,EAAetnB,GAAM,2BAAUA,GAAV,IAChCnc,QAAIuH,M,mDCrEN,igCAaO,MAAMkT,EAAgB,gBAChBjQ,EAAe,eACfC,EAAQ,QACRC,EAAM,MACNC,EAAe,eACfC,EAAc,cACdsQ,EAAM,MACNF,EAAU,UACVC,EAAY,YACZF,EAAQ,QACRjQ,EAAW,WACXnK,EAAO,OACPK,EAAS,SACT0L,EAAY,YACZI,EAAmB,mBAInBwnB,EAAsB7zB,KAAU4L,EAAY5L,EAAKC,MAAM4zB,oBACvD9L,EAAalL,GAJI,cAIQjR,EAAYiR,GAAUomB,WAC/C/b,EAAsBrK,GAJP,YAImBjR,EAAYiR,GAAUomB,WACxDjmB,EAAsBH,GAAYjR,EAAYiR,GAAUqmB,kBAAoB,EAC5E9a,EAAavL,GAAYjR,EAAYiR,GAAUsL,SAAW,GAE1Dvc,EAAc,CACzB,CAACoO,GAAgB,CACfza,GAAIya,EACJ8C,aAAc,iBACdjR,SAAU,gBACVuR,YAAavH,IAAKC,EAAE,kBACpBqtB,OAAQ5jC,GAAE,qCAAkCA,GAC5C4oB,QAAS,kBACT+a,iBAAkB,IAEpB,CAACn5B,GAAe,CACdxK,GAAIwK,EACJ+S,aAAc,iBACdjR,SAAU,gBACVuR,YAAavH,IAAKC,EAAE,gBACpBmtB,WAxB0B,YAyB1BpP,qBAAqB,EACrBsP,OAAQ5jC,GAAE,qCAAkCA,GAC5C4oB,QAAS,mBAEX,CAACne,GAAQ,CACPzK,GAAIyK,EACJ8S,aAAc,iBACdjR,SAAU,gBACVuR,YAAavH,IAAKC,EAAE,UACpBmtB,WAlC0B,YAmC1BpP,qBAAqB,EACrBsP,OAAQ5jC,GAAE,qCAAkCA,GAC5C4oB,QAAS,mBAEX,CAACle,GAAM,CACL1K,GAAI0K,EACJ6S,aAAc,OACdjR,SAAU,MACVuR,YAAavH,IAAKC,EAAE,QACpBmtB,WA5C0B,YA6C1BpP,qBAAqB,EACrBsP,OAAQ5jC,GAAE,4BAAyBA,GACnC4oB,QAAS,QAEX,CAACje,GAAe,CACd3K,GAAI2K,EACJ4S,aAAc,eACdjR,SAAU,cACVuR,YAAavH,IAAKC,EAAE,iBACpBmtB,WArDwB,UAsDxBpP,qBAAqB,EACrBsP,OAAQ5jC,GAAE,qCAAkCA,GAC5C4oB,QAAS,iBAEX,CAAChe,GAAc,CACb5K,GAAI4K,EACJ2S,aAAc,cACdjR,SAAU,aACVuR,YAAavH,IAAKC,EAAE,gBACpBmtB,WA/DwB,UAgExBpP,qBAAqB,EACrBsP,OAAQ5jC,GAAE,wCAAqCA,GAC/C4oB,QAAS,oBAEX,CAAC1N,GAAM,CACLqC,aAAc,OACdjR,SAAU,SACVuR,YAAavH,IAAKC,EAAE,SAEtB,CAACyE,GAAU,CACThb,GAAIgb,EACJuC,aAAc,UACdjR,SAAU,UACVuR,YAAavH,IAAKC,EAAE,WACpBqtB,OAAQ,CAAC5jC,EAAIU,KACX,OAAQA,GACN,IAAK,OACH,MAAM,2CAAN,OAAkDV,GAEpD,IAAK,sBACL,IAAK,cACL,QACE,MAAM,eAAN,OAAsBA,EAAtB,wBAAuC,IAAIojC,MAAOS,cAI1D,CAAC5oB,GAAY,CACXjb,GAAIib,EACJsC,aAAc,YACdjR,SAAU,YACVuR,YAAavH,IAAKC,EAAE,aACpBqtB,OAAQ5jC,GAAE,wBAAqBA,EAArB,UAEZ,CAAC+a,GAAQ,CACP/a,GAAI+a,EACJwC,aAAc,QACdjR,SAAU,QACVuR,YAAavH,IAAKC,EAAE,SACpBqtB,OAAQ5jC,GAAE,2DAAwDA,IAEpE,CAACW,GAAO,CACNX,GAAIW,EACJ2L,SAAU,QAEZ,CAACxB,GAAW,CACVwB,SAAU,YAEZ,CAACtL,GAAS,CACRsL,SAAU,QAEZ,CAACI,GAAY,CACXJ,SAAU,QAEZ,CAACQ,GAAmB,CAClBR,SAAU,SAGDw3B,EAAkBpjC,GAAQ2L,EAAY3L,GAAM6c,aAC5C1B,EAAa,CAACnb,EAAMD,EAAM0F,KACrC,IAAIH,EAUJ,OARItF,IAASwa,IACXlV,EAAMvF,EAAKywB,WAGT7kB,EAAY3L,IAAS2L,EAAY3L,GAAMkjC,SACzC59B,EAAG,UAAMyf,YAAWtf,GAAjB,YAAwBkG,EAAY3L,GAAMkjC,OAAOnjC,EAAKT,GAAIS,EAAKC,QAG7DsF,GAEIuU,EAAc7Z,IACzB,OAAQA,GACN,KAAK8J,EACL,KAAKG,EACL,KAAKqQ,EACH,OAAO+oB,IAET,KAAKt5B,EACL,KAAKG,EACH,OAAOo5B,IAET,KAAKt5B,EACH,OAAOu5B,IAET,KAAK/oB,EACH,OAAOgpB,IAET,KAAKjpB,EACH,OAAO2T,IAET,KAAK7T,EACH,OAAOopB,IAET,KAAKxjC,EACH,OAAOyjC,IAET,KAAKt5B,EACH,OAAOu5B,IAET,KAAKrjC,EACH,OAAOsjC,IAET,QACE,OAAOC,O,iCCrMb,ubAGO,MAAMlP,EAAoB,WAEpBH,EAAkB,GAIlBJ,EAAS,CAAC,GAAI,IACd9nB,EAAiB,CAC5ByyB,EAAG,EACH3E,EAAG,EACHnvB,EAAG,GACHE,EAAG,IAKQmpB,EAAiB,IADT,GAcfwP,EAAuB/E,GAAKgF,OAAOC,UAAUjF,IAAMA,GAAK,EAGjD/J,EAAWj1B,GAAQ+jC,EAAqB/jC,EAAKg/B,IAAM+E,EAAqB/jC,EAAKq6B,IAAM0J,EAAqB/jC,EAAKkL,IAAM64B,EAAqB/jC,EAAKoL,GAmB7IxK,EAAwBulB,IAC5B,CACLoD,EAAGpD,EACH+d,KAAM,IAIG/3B,EAAwB,CAACD,EAAME,GAAW,KAC9C,CACL4yB,EAAG,EACH3E,EAAGnuB,EACHhB,EAAGi5B,GACH/4B,EAAG,EACHg5B,SAAUh4B,EACV83B,KAAM,IAGG53B,EAA6B,KACjC,CACL0yB,EAAG,EACH3E,EAAG,EACHnvB,EAAGi5B,GACH/4B,EAAG,GACHg5B,QAAQ,EACRF,KAAM,IAyBGv6B,EAAYtJ,GAASA,EAAMC,IAAI,CAACN,EAAM0uB,KACjD,MAAM2V,EAAgBpP,EAASj1B,GAAQA,EAAO2B,OAAOqJ,OAAO,GAAIhL,EAlE1CupB,KACtB,IAAKwa,EAAqBxa,GACxB,MAAM,IAAI+a,MAAM,6BAGlB,MAAMC,EAAMhb,EA1Bc,EA2BpBib,EAAM1yB,KAAKkF,MAAMuS,EA3BG,GA4BpBkb,EAAY3yB,KAAKkF,MAAM,MACvB0tB,EAA+B,EAAlBjQ,EACnB,MAAO,CACLuK,EAAGuF,EAAME,EACTpK,EAAGmK,EAAME,EACTx5B,EAAGu5B,EACHr5B,EAAGs5B,IAqDiEC,CAASjW,IAC/E,OAAO/sB,OAAOqJ,OAAO,GAAIq5B,EAhBMrkC,KAExB,CACLyqB,eAFqB3Y,KAAK8yB,MAAMnQ,EAAkBz0B,EAAKoL,EAAI0G,KAAKC,IAAI,EAAG/R,EAAKoL,EAAI,GAAKipB,EAAO,MAetDwQ,CAAkBR,MAE/C/e,EAAmB/lB,GAAE,eAAYA,GACvC,SAASq0B,EAAar0B,GAC3B,MAAMqvB,EAAKttB,YAASksB,SAASuN,cAAT,WAA2BzV,EAAiB/lB,MAC5DulC,IAAWlW,EAAGmW,kBAAkB17B,WAAW,IAAMulB,EAAGmW,gBAAgBnW,EAAGoW,YAAc,EAAGpW,EAAGhE,aAAe,GAAI,M,6cCvGpH,MAAMqa,EAA2B,CAC/B,CAACh7B,KAAM,YACP,CAACC,KAAe,oBAChB,CAACC,KAAc,oBAKX+6B,EAAYjlC,IAChB,GAH0BA,IAAQ,CAAC+J,IAAOD,KAAc5K,SAASc,GAG7DklC,CAAoBllC,GACtB,OAAO,EAIT,OAAOmiC,EADY6C,EAAyBhlC,KAKjC+nB,EAAoB,CAAChoB,EAAO,GAAIqkB,EAAgB,MAC3D,MAAMpkB,EAAOokB,EAAcG,YAAcxkB,EAAKC,KAC9C,QAASilC,EAAUjlC,IAERmK,EAAkBpK,IAC7B,IAAKmiC,IAASniC,GACZ,OAAO,KAIT,OAAOA,EADU4L,IAAY5L,EAAKC,MAAM4L,WACf7L,EAAKolC,aAAeplC,EAAKqlC,OAASrlC,EAAKM,KAAON,EAAKslC,aAAetlC,EAAKulC,YAAc,IAkBnG1c,EAAQ7oB,GAAQoK,EAAgBpK,GAAMT,GACtCimC,EAAUxlC,GAAQoK,EAAgBpK,GAAMqC,KAExCgmB,EAAU,CAACroB,EAAM0F,KAC5B,MAAMqf,EAAUC,YAAWtf,GACrBy9B,EAASv3B,IAAY5L,EAAKC,MAAMkjC,OAAOta,EAAM7oB,IACnD,MAAM,GAAN,OAAU+kB,EAAV,YAAqBoe,IAEVsC,EAAOngC,MAAOtF,EAAMqkB,GAC/BQ,cACAL,aACAY,UAAU,OAEV,MAAMsgB,EAAM,uCAAQrhB,GACfe,GADO,IAEVwJ,GAAItJ,YAAiBtlB,EAAKT,MAEtBU,EAAOukB,GAAcxkB,EAAKC,KAhCR,EAAC0lC,EAAQD,EAAQ7gB,KACnC8gB,GAAUA,EAAOF,OAIvBE,EAAOpgC,IAAMsf,EAAYE,QACzB4gB,EAAOC,kBAAmB,EAC1BD,EAAO7jC,WAAY,EAEf+iB,EAAYI,OACd0gB,EAAO1gB,KAAOJ,EAAYI,MAG5B0gB,EAAOF,KAAKC,KAqBZG,CADeX,EAAUjlC,GACNylC,EAAQ7gB,IAEhBihB,EAAQxgC,eACWygC,YAAiBld,EAAM7oB,GAAOA,EAAKC,KAAM,CACrE+H,OAAQhI,EAAKC,OAASgK,IAAM+7B,cAAiB,OAIpCC,EAASjmC,IACpB,MAAM2lC,EAAST,EAAUllC,EAAKC,MAE1B0lC,GAAUA,EAAOM,QACnBN,EAAOM,OAAO3gB,YAAiBtlB,EAAKT,MAG3B2mC,EAAU,CAAClmC,EAAMwkB,KAC5B,MAAMmhB,EAAST,EAAU1gB,GAErBmhB,GAAUA,EAAOO,SACnBP,EAAOO,QAAQ5gB,YAAiBtlB,EAAKT,MAG5B4mC,EAAyB,CAAC9hB,EAAe+hB,EAAc5hB,KAClE,GAAI4hB,IAAiBn8B,KAAOm8B,IAAiB5hB,EAAY,CACvD,MAAM6hB,GA3DoB/lC,EA2Dc+jB,GA3DH+G,UAAY9qB,EAAI8qB,SAASpmB,KAAKshC,GAAMA,EAAGjb,MAAMlsB,SAbxD,aA0E1B,YAAyB2H,IAArBu/B,EACK,KAGFrD,YAAa,uCAAK3e,GACpBgiB,GADc,IAEjBjb,cAAUtkB,EACV7G,KAAMukB,IAAexa,IAAQu8B,IAAkBC,OAE5C,OAAIJ,IAAiBr8B,KAAgBya,IAAexa,IAClDg5B,YAAa,2BAAK3e,GAAN,IACjBpkB,KAAMsmC,OAECH,IAAiBp8B,KAASwa,IAAeza,IAC3Ci5B,YAAa,2BAAK3e,GAAN,IACjBpkB,KAAMumC,OAIHxD,YAAa3e,GAhFQ/jB,S,sCCpC9B3B,EAAOC,QAAU,CAAC,SAAW,6BAA6B,eAAiB,mCAAmC,UAAY,8BAA8B,gBAAkB,sC,uDCD1K,kNAIO,MAAMgJ,EAAkB,EAC7BC,UACE,KAAO,CAAC,KAAD,UAAUA,EAAS,2BAA6B,qBAI9C4+B,EAAqB,EAChC9+B,eACIL,IAAW,CAAC,YAAa,gBAAiB,SAAU,eAAgBK,EAAS,gBAJhD,CAAC,2BAA4B,2BAA4B,qBAImB9E,KAAK,KAAjC,UAEtE6jC,EAAgB,EAC3B/+B,eACI,CAAC,WAAD,OAAY8+B,EAAmB,CACnC9+B,cACC9E,KAAK,KAFF,oBAEmB4jC,EAAmB,CAC1C9+B,cACC9E,KAAK,KAJF,uBAIsB4jC,EAAmB,CAC7C9+B,cACC9E,KAAK,KANF,MAQO8jC,EAAoB,EAC/Bl/B,iBACAm/B,iBAEOt/B,IAAW,CAAC,GAAD,OAAIM,EAAgB,CACpCC,QAAQ,IACPhF,KAAK,MAAQ,yCAA0C4E,EAAc,UAAMi/B,EAAc,CAC1F/+B,WAAW,IACV9E,KAAK,MAFgE,GAEnD+jC,EAAc,CAAC,IAAK,uBAAwB,mBAAoB,YAAa,sBAAuB,oCAAqC,oBAAqB,sBAAuB,yBAA0B,iCAAkC,oBAAqB,8BAA+B,iBAAkB,sCAAuC,0BAA2B,qBAAsB,8BAA+B,mBAAoB,gBAAiB,iBAAkB,UAAW,gBAAiB,wBAAyB,gCAAiC,sCAAsC/jC,KAAK,KAAO,KAEvnB2E,EAAqB,EAChCC,oBACI,CAAC,eAAD,OAAgBk/B,EAAkB,CACtCl/B,mBACC5E,KAAK,KAFF,qBAEoB,CAAC,UAAW8jC,EAAkB,CACtDl/B,oBACE5E,KAAK,KAJH,mBAImB8jC,EAAkB,CACzCl/B,mBACC5E,KAAK,KANF,2BAM0B8jC,EAAkB,CAChDl/B,mBACC5E,KAAK,KARF,0BAQyB8jC,EAAkB,CAC/Cl/B,mBACC5E,KAAK,KAVF,MAYO0E,EAAoB,IAAM,CAAC,WAAD,OAAY,CAAC,UAAWK,EAAgB,CAC7EC,QAAQ,KACNhF,KAAK,KAF8B,yBAER+E,EAAgB,CAC7CC,QAAQ,IACPhF,KAAK,KAJ+B,qBAIb+E,EAAgB,CACxCC,QAAQ,IACPhF,KAAK,KAN+B,MAQ1BmjC,EAAe,IAAM,CAAC,GAAD,OAAIp+B,EAAgB,CACpDC,QAAQ,IACPhF,KAAK,MAAQ,uCAFkB,mBAEkC8jC,EAAkB,CACpFl/B,gBAAgB,EAChBm/B,aAAa,IAJmB,MAQrBb,EAAmB,CAACxmC,EAAIU,GACnC+H,YACIxC,wBAAcC,KAAKC,GAAMA,EAAGC,IAAIC,SAASC,IAAhB,UAAuBw9B,YAAgBpjC,GAAvC,YAAgDV,GAAM,CACnFyI,OAAQA,GAAU2+B,EAAkB,CAClCl/B,gBAAgB,EAChBm/B,aAAa,Q,oBCpEjBjoC,EAAOC,QAAU,CAAC,aAAe,oCAAoC,cAAgB,uC","file":"static/js/app.d4c45260.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ControlBar_root__iikeX\",\"content\":\"ControlBar_content__26Z33\",\"draghandle\":\"ControlBar_draghandle__27zum\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"DashboardItemChip_link__21drZ\",\"icon\":\"DashboardItemChip_icon__2hcIR\",\"selected\":\"DashboardItemChip_selected__r00uP\",\"unselected\":\"DashboardItemChip_unselected__2H9l2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ClearButton_button__33ZbK\",\"icon\":\"ClearButton_icon__vTJm3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"showMore\":\"ShowMoreButton_showMore__3S3He\",\"disabled\":\"ShowMoreButton_disabled__2FQNA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuItem\":\"ContentMenuItem_menuItem__vbKn3\",\"launchLink\":\"ContentMenuItem_launchLink__2Nql9\",\"label\":\"ContentMenuItem_label__ANfH1\",\"buttonInsert\":\"ContentMenuItem_buttonInsert__1joHg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"showMoreButton\":\"CategorizedMenuGroup_showMoreButton__2RbRp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"EditTitleBar_section__LIaIC\",\"titleDescription\":\"EditTitleBar_titleDescription__1YsU6\",\"title\":\"EditTitleBar_title__3mUbt\",\"description\":\"EditTitleBar_description__24U5X\",\"itemSelector\":\"EditTitleBar_itemSelector__1cFEp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"actions\":\"ViewTitleBar_actions__2UTRz\",\"editLink\":\"ViewTitleBar_editLink__d_HzW\",\"titleBar\":\"ViewTitleBar_titleBar__eiwJS\",\"titleBarIcon\":\"ViewTitleBar_titleBarIcon__2cBxv\",\"strip\":\"ViewTitleBar_strip__3xR4U\",\"backdrop\":\"ViewTitleBar_backdrop__2Cpm8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FatalErrorBoundary_container__3SViR\",\"icon\":\"FatalErrorBoundary_icon__2UbeP\",\"message\":\"FatalErrorBoundary_message__3FzrY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"deleteItemButton\":\"DeleteItemButton_deleteItemButton__3TJm9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"center\":\"LoadingMask_center__2SFwS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textDiv\":\"Item_textDiv__1U7zV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Item_list__1_nkQ\",\"item\":\"Item_item__3-6QE\",\"itemicon\":\"Item_itemicon__QlouX\",\"link\":\"Item_link___3c_q\",\"deleteicon\":\"Item_deleteicon__3usrl\",\"deletebutton\":\"Item_deletebutton__1DpBW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"titlePage\":\"Item_titlePage__18CNQ\",\"name\":\"Item_name__3nuTV\",\"description\":\"Item_description__1gFQd\",\"filterTitle\":\"Item_filterTitle__2p7TQ\",\"filterList\":\"Item_filterList__qc_G3\",\"filterListItem\":\"Item_filterListItem__sPbBY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bar\":\"FilterBar_bar__1Ma3p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ConfirmDeleteDialog_content__EqswE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"infoWrapper\":\"PrintInfo_infoWrapper__3m2lt\",\"infoHeader\":\"PrintInfo_infoHeader__KyW8I\",\"info\":\"PrintInfo_info__13oXZ\",\"divider\":\"PrintInfo_divider__3wzx9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PrintActionsBar_container__2iQp7\",\"inner\":\"PrintActionsBar_inner__uBqU7\",\"link\":\"PrintActionsBar_link__lFUmI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"PrintLayoutDashboard_wrapper__1WDh4\",\"pageOuter\":\"PrintLayoutDashboard_pageOuter__22acI\",\"pageWrapper\":\"PrintLayoutDashboard_pageWrapper__14vaM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"PrintDashboard_wrapper__1O3s_\",\"pageOuter\":\"PrintDashboard_pageOuter__fl9tw\",\"pageWrapper\":\"PrintDashboard_pageWrapper__2YkgX\"};","export const EDIT = 'edit';\nexport const NEW = 'new';\nexport const VIEW = 'view';\nexport const PRINT = 'print';\nexport const PRINT_LAYOUT = 'print-layout';\nexport const isEditMode = mode => [EDIT, NEW].includes(mode);\nexport const isPrintMode = mode => [PRINT, PRINT_LAYOUT].includes(mode);\nexport const isViewMode = mode => mode === VIEW;","export const RECEIVED_USER = 'RECEIVED_USER';\nexport const DEFAULT_STATE_USER = {\n  id: '',\n  username: '',\n  uiLocale: '',\n  isSuperuser: false\n};\nexport default ((state = DEFAULT_STATE_USER, action) => {\n  switch (action.type) {\n    case RECEIVED_USER:\n      {\n        return fromD2ToUserObj(action.value);\n      }\n\n    default:\n      return state;\n  }\n});\n\nfunction fromD2ToUserObj(d2Object) {\n  return {\n    id: d2Object.id,\n    username: d2Object.username,\n    uiLocale: d2Object.settings.keyUiLocale,\n    isSuperuser: d2Object.authorities.has('ALL')\n  };\n} // selectors\n\n\nexport const sGetUserId = state => state.user.id;\nexport const sGetUserUsername = state => state.user.username;\nexport const sGetIsSuperuser = state => state.user.isSuperuser;\nexport const sGetUiLocale = state => state.user.uiLocale;","import { TEXT, SPACER } from './itemTypes';\nimport { getGridItemProperties } from '../components/ItemGrid/gridUtil';\nexport const spacerContent = 'SPACER_ITEM_FOR_DASHBOARD_LAYOUT_CONVENIENCE';\nexport const emptyTextItemContent = 'TEXT_ITEM_WITH_NO_CONTENT';\n\nconst isBackendSpacerType = item => item.type === TEXT && item.text === spacerContent;\n\nconst isUiSpacerType = item => item.type === SPACER;\n\nconst isTextType = item => item.type === TEXT && item.text !== spacerContent;\n\nexport const convertUiItemsToBackend = items => items.map(item => {\n  let text = null;\n\n  if (isUiSpacerType(item)) {\n    text = spacerContent;\n  } else if (isTextType(item)) {\n    text = item.text || emptyTextItemContent;\n  }\n\n  return { ...item,\n    ...(text ? {\n      text\n    } : {})\n  };\n});\nexport const convertBackendItemsToUi = items => items.map(item => {\n  const type = isBackendSpacerType(item) ? SPACER : item.type;\n  const gridProperties = getGridItemProperties(item.id);\n  const text = isTextType(item) ? item.text === emptyTextItemContent ? '' : item.text : null;\n  return { ...item,\n    ...(text !== null ? {\n      text\n    } : {}),\n    type,\n    ...gridProperties\n  };\n});","/** @module reducers/dashboards */\nimport arrayFrom from 'd2-utilizr/lib/arrayFrom';\nimport arraySort from 'd2-utilizr/lib/arraySort';\nimport { orArray, orObject } from '../modules/util';\nimport { convertBackendItemsToUi } from '../modules/uiBackendItemConverter';\nexport const SET_DASHBOARDS = 'SET_DASHBOARDS';\nexport const ADD_DASHBOARDS = 'ADD_DASHBOARDS';\nexport const SET_DASHBOARD_STARRED = 'SET_DASHBOARD_STARRED';\nexport const SET_DASHBOARD_DISPLAY_NAME = 'SET_DASHBOARD_DISPLAY_NAME';\nexport const SET_DASHBOARD_ITEMS = 'SET_DASHBOARD_ITEMS';\nexport const DEFAULT_STATE_DASHBOARDS = {\n  byId: null,\n  items: []\n}; // reducer helper functions\n\nconst updateDashboardProp = ({\n  state,\n  dashboardId,\n  prop,\n  value\n}) => ({\n  byId: { ...state.byId,\n    [dashboardId]: { ...state.byId[dashboardId],\n      [prop]: value\n    }\n  },\n  items: state.items\n});\n/**\n * Reducer that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n * @returns {Object}\n */\n\n\nexport default ((state = DEFAULT_STATE_DASHBOARDS, action) => {\n  switch (action.type) {\n    case SET_DASHBOARDS:\n      {\n        return {\n          byId: action.value,\n          items: []\n        };\n      }\n\n    case ADD_DASHBOARDS:\n      {\n        return { ...state,\n          byId: { ...state.byId,\n            ...action.value\n          }\n        };\n      }\n\n    case SET_DASHBOARD_STARRED:\n      {\n        return updateDashboardProp({\n          state,\n          dashboardId: action.dashboardId,\n          prop: 'starred',\n          value: action.value\n        });\n      }\n\n    case SET_DASHBOARD_DISPLAY_NAME:\n      {\n        return updateDashboardProp({\n          state,\n          dashboardId: action.dashboardId,\n          prop: 'displayName',\n          value: action.value\n        });\n      }\n\n    case SET_DASHBOARD_ITEMS:\n      {\n        return { ...state,\n          items: action.value\n        };\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetDashboardsRoot = state => state.dashboards; // selector level 1\n\n/**\n * Selector which returns a dashboard by id from the state object\n * If no matching dashboard is found it returns undefined\n * If dashboards.byId is null, then the dashboards api request\n * has not yet completed. If dashboards.byId is an empty object\n * then the dashboards api request is complete, but no dashboards\n * were returned\n *\n * @function\n * @param {Object} state The current state\n * @param {Number} id The id of the dashboard\n * @returns {Object | undefined}\n */\n\nexport const sGetDashboardById = (state, id) => orObject(sGetDashboardsRoot(state).byId)[id];\nexport const sDashboardsIsFetching = state => {\n  return sGetDashboardsRoot(state).byId === null;\n};\n/**\n * Selector which returns all dashboards (the byId object)\n *\n * @function\n * @param {Object} state The current state\n * @returns {Object | undefined}\n */\n\nexport const sGetAllDashboards = state => orObject(sGetDashboardsRoot(state).byId);\n/**\n * Selector which returns the current dashboard items\n *\n * @function\n * @param {Object} state The current state\n * @returns {Array}\n */\n\nexport const sGetDashboardItems = state => sGetDashboardsRoot(state).items; // selector level 2\n\nexport const sGetStarredDashboards = state => Object.values(sGetAllDashboards(state)).filter(dashboard => dashboard.starred === true);\nexport const sGetUnstarredDashboards = state => Object.values(sGetAllDashboards(state)).filter(dashboard => dashboard.starred === false); // selector level 3\n\nexport const sGetStarredDashboardIds = state => {\n  return sGetStarredDashboards(state).map(dashboard => dashboard.id);\n};\nexport const sGetUnstarredDashboardIds = state => sGetUnstarredDashboards(state).map(dashboard => dashboard.id);\nexport const sGetDashboardsSortedByStarred = state => [...arraySort(sGetStarredDashboards(state), 'ASC', 'displayName'), ...arraySort(sGetUnstarredDashboards(state), 'ASC', 'displayName')]; // utils\n\n/**\n * Returns the array of dashboards, customized for ui\n * @function\n * @param {Array} data The original dashboard list\n * @returns {Array}\n */\n\nexport const getCustomDashboards = data => arrayFrom(data).map(d => ({\n  id: d.id,\n  name: d.name,\n  displayName: d.displayName,\n  description: d.description,\n  displayDescription: d.displayDescription,\n  starred: d.favorite,\n  owner: d.user.name,\n  created: d.created.split('T').join(' ').substr(0, 16),\n  lastUpdated: d.lastUpdated.split('T').join(' ').substr(0, 16),\n  access: d.access,\n  numberOfItems: orArray(d.dashboardItems).length,\n  dashboardItems: convertBackendItemsToUi(d.dashboardItems)\n}));","/** @module reducers/selected */\nimport { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\nexport const SET_SELECTED_ID = 'SET_SELECTED_ID';\nexport const SET_SELECTED_ISLOADING = 'SET_SELECTED_ISLOADING';\nexport const SET_SELECTED_SHOWDESCRIPTION = 'SET_SELECTED_SHOWDESCRIPTION';\nexport const DEFAULT_STATE_SELECTED_ID = null;\nexport const DEFAULT_STATE_SELECTED_ISLOADING = false;\nexport const DEFAULT_STATE_SELECTED_SHOWDESCRIPTION = false;\nexport const NON_EXISTING_DASHBOARD_ID = '0';\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\n\nconst id = (state = DEFAULT_STATE_SELECTED_ID, action) => {\n  switch (action.type) {\n    case SET_SELECTED_ID:\n      return validateReducer(action.value, DEFAULT_STATE_SELECTED_ID);\n\n    default:\n      return state;\n  }\n};\n\nconst isLoading = (state = DEFAULT_STATE_SELECTED_ISLOADING, action) => {\n  switch (action.type) {\n    case SET_SELECTED_ISLOADING:\n      return validateReducer(action.value, DEFAULT_STATE_SELECTED_ISLOADING);\n\n    default:\n      return state;\n  }\n};\n\nconst showDescription = (state = DEFAULT_STATE_SELECTED_SHOWDESCRIPTION, action) => {\n  switch (action.type) {\n    case SET_SELECTED_SHOWDESCRIPTION:\n      return validateReducer(action.value, DEFAULT_STATE_SELECTED_SHOWDESCRIPTION);\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  id,\n  isLoading,\n  showDescription\n}); // Selectors\n\nexport const sGetSelectedRoot = state => state.selected;\nexport const sGetSelectedId = state => sGetSelectedRoot(state).id;\nexport const sGetSelectedIsLoading = state => sGetSelectedRoot(state).isLoading;\nexport const sGetSelectedShowDescription = state => sGetSelectedRoot(state).showDescription;","import { getDimensionById, DIMENSION_ID_PERIOD, DIMENSION_ID_ORGUNIT } from '@dhis2/analytics';\nexport const SET_DIMENSIONS = 'SET_DIMENSIONS';\nexport const DEFAULT_DIMENSIONS = [getDimensionById(DIMENSION_ID_PERIOD), getDimensionById(DIMENSION_ID_ORGUNIT)];\nexport default ((state = DEFAULT_DIMENSIONS, action) => {\n  switch (action.type) {\n    case SET_DIMENSIONS:\n      {\n        return [...DEFAULT_DIMENSIONS, ...action.value];\n      }\n\n    default:\n      return state;\n  }\n});\nexport const sGetDimensions = state => state.dimensions;","import { sGetDimensions } from './dimensions';\nimport { createSelector } from 'reselect';\nexport const CLEAR_ITEM_FILTERS = 'CLEAR_ITEM_FILTERS';\nexport const SET_ITEM_FILTERS = 'SET_ITEM_FILTERS';\nexport const ADD_ITEM_FILTER = 'ADD_ITEM_FILTER';\nexport const REMOVE_ITEM_FILTER = 'REMOVE_ITEM_FILTER';\nexport const DEFAULT_STATE_ITEM_FILTERS = {};\nexport default ((state = DEFAULT_STATE_ITEM_FILTERS, action) => {\n  switch (action.type) {\n    case ADD_ITEM_FILTER:\n      {\n        return { ...state,\n          [action.filter.id]: action.filter.value\n        };\n      }\n\n    case REMOVE_ITEM_FILTER:\n      {\n        const newState = { ...state\n        };\n        delete newState[action.id];\n        return newState;\n      }\n\n    case SET_ITEM_FILTERS:\n      {\n        return action.filters;\n      }\n\n    case CLEAR_ITEM_FILTERS:\n      {\n        return DEFAULT_STATE_ITEM_FILTERS;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetItemFiltersRoot = state => state.itemFilters;\nexport const sGetFiltersKeys = state => Object.keys(sGetItemFiltersRoot(state)); // simplify the filters structure to:\n// [{ id: 'pe', name: 'Period', values: [{ id: 2019: name: '2019' }, {id: 'LAST_MONTH', name: 'Last month' }]}, ...]\n\nexport const sGetNamedItemFilters = createSelector([sGetItemFiltersRoot, sGetDimensions], (filters, dimensions) => Object.keys(filters).reduce((arr, id) => {\n  arr.push({\n    id: id,\n    name: dimensions.find(dimension => dimension.id === id).name,\n    values: filters[id].map(value => ({\n      id: value.id,\n      name: value.displayName || value.name\n    }))\n  });\n  return arr;\n}, []));","import { ADD_ITEM_FILTER, REMOVE_ITEM_FILTER, SET_ITEM_FILTERS, CLEAR_ITEM_FILTERS } from '../reducers/itemFilters';\nexport const FILTER_ORG_UNIT = 'ou'; // actions\n\nexport const acAddItemFilter = filter => ({\n  type: ADD_ITEM_FILTER,\n  filter\n});\nexport const acRemoveItemFilter = id => ({\n  type: REMOVE_ITEM_FILTER,\n  id\n});\nexport const acClearItemFilters = () => ({\n  type: CLEAR_ITEM_FILTERS\n});\nexport const acSetItemFilters = filters => ({\n  type: SET_ITEM_FILTERS,\n  filters\n});","import update from 'immutability-helper';\nimport { arrayToIdMap } from '../modules/util';\nexport const RECEIVED_MESSAGES = 'RECEIVED_MESSAGES';\nexport default ((state = {}, action) => {\n  switch (action.type) {\n    case RECEIVED_MESSAGES:\n      {\n        const conversations = arrayToIdMap(action.value);\n        const newState = update(state, {\n          $merge: conversations\n        });\n        return newState;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetMessagesRoot = state => state.messages;","import { getInstance } from 'd2';\nexport const getMessages = () => {\n  const fields = 'id,messageCount,lastUpdated,messageType,displayName,read,messages[id,read,sender[id,displayName],text,lastUpdated]';\n  const url = `/messageConversations?fields=${fields}&order=read:asc&pageSize=200`;\n  return getInstance().then(d2 => d2.Api.getApi().get(url)).catch(error => console.log('Error:', error));\n};","import { RECEIVED_MESSAGES } from '../../../reducers/messages';\nimport { getMessages } from '../../../api/messages';\n\nconst onError = (action, error) => {\n  console.log(`Error in action ${action}: ${error}`);\n  return error;\n};\n\nexport const receivedMessages = value => ({\n  type: RECEIVED_MESSAGES,\n  value\n});\nexport const tGetMessages = () => async dispatch => {\n  try {\n    const messages = await getMessages();\n    const {\n      messageConversations\n    } = messages;\n    return dispatch(receivedMessages(messageConversations));\n  } catch (err) {\n    return onError('Get Messages', err);\n  }\n};","export const RECEIVED_SNACKBAR_MESSAGE = 'RECEIVED_SNACKBAR_MESSAGE';\nexport const CLOSE_SNACKBAR = 'CLOSE_SNACKBAR';\nexport const DEFAULT_STATE_SNACKBAR = {\n  message: {},\n  duration: null,\n  open: false\n};\nexport default ((state = DEFAULT_STATE_SNACKBAR, action) => {\n  switch (action.type) {\n    case RECEIVED_SNACKBAR_MESSAGE:\n      {\n        return { ...state,\n          ...action.value\n        };\n      }\n\n    case CLOSE_SNACKBAR:\n      {\n        return DEFAULT_STATE_SNACKBAR;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetSnackbar = state => state.snackbar || DEFAULT_STATE_SNACKBAR;","import { RECEIVED_SNACKBAR_MESSAGE, CLOSE_SNACKBAR } from '../reducers/snackbar';\nexport const acReceivedSnackbarMessage = value => ({\n  type: RECEIVED_SNACKBAR_MESSAGE,\n  value\n});\nexport const acCloseSnackbar = () => ({\n  type: CLOSE_SNACKBAR\n});","import { orObject } from '../modules/util';\nimport objectClean from 'd2-utilizr/lib/objectClean';\n/** @module reducers/visualizations */\n\nexport const ADD_VISUALIZATION = 'ADD_VISUALIZATION';\nexport const SET_ACTIVE_VISUALIZATION_TYPE = 'SET_ACTIVE_VISUALIZATION_TYPE';\nexport const DEFAULT_STATE_VISUALIZATIONS = {};\n\nconst isEmpty = p => p === undefined || p === null;\n\nexport default ((state = DEFAULT_STATE_VISUALIZATIONS, action) => {\n  switch (action.type) {\n    case ADD_VISUALIZATION:\n      {\n        return { ...state,\n          [action.value.id]: objectClean({ ...orObject(state[action.value.id]),\n            ...action.value\n          }, isEmpty)\n        };\n      }\n\n    case SET_ACTIVE_VISUALIZATION_TYPE:\n      {\n        return { ...state,\n          [action.id]: objectClean({ ...orObject(state[action.id]),\n            activeType: action.activeType\n          }, isEmpty)\n        };\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetVisualizationsRoot = state => state.visualizations; // selectors level 1\n\nexport const sGetVisualization = (state, id) => {\n  return sGetVisualizationsRoot(state)[id];\n};","import { ADD_VISUALIZATION, SET_ACTIVE_VISUALIZATION_TYPE } from '../reducers/visualizations';\nexport const acAddVisualization = value => ({\n  type: ADD_VISUALIZATION,\n  value\n});\nexport const acSetActiveVisualizationType = (id, activeType) => {\n  const action = {\n    type: SET_ACTIVE_VISUALIZATION_TYPE,\n    id,\n    activeType\n  };\n  return action;\n};","import arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { getListItemFields, getFavoritesFields, getIdNameFields } from './metadata'; // Helper functions\n\nexport const onError = error => console.log('Error: ', error); // Dashboard item\n\nexport const getDashboardItemsFields = ({\n  withFavorite\n} = {}) => arrayClean(['id', 'type', 'shape', 'x', 'y', 'width~rename(w)', 'height~rename(h)', 'messages', 'text', 'appKey', `${getListItemFields().join(',')}`, withFavorite ? `${getFavoritesFields({\n  withDimensions: withFavorite.withDimensions\n}).join(',')}` : ``]); // Dashboard\n\nexport const getDashboardFields = ({\n  withItems,\n  withFavorite\n} = {}) => arrayClean([`${getIdNameFields().join(',')}`, 'description', 'displayDescription', 'favorite', `user[${getIdNameFields({\n  rename: true\n}).join(',')}]`, 'created', 'lastUpdated', 'access', withItems ? `dashboardItems[${getDashboardItemsFields({\n  withFavorite\n}).join(',')}]` : ``]);","import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { onError, getDashboardFields } from './index'; // Get \"all\" dashboards on startup\n\nexport const apiFetchDashboards = () => getInstance().then(d2 => d2.models.dashboard.list({\n  fields: [getDashboardFields().join(','), 'dashboardItems[id]'].join(','),\n  paging: 'false'\n})).catch(onError); // Get more info about selected dashboard\n\nexport const apiFetchDashboard = id => getInstance().then(d2 => d2.models.dashboard.get(id, {\n  fields: arrayClean(getDashboardFields({\n    withItems: true,\n    withFavorite: {\n      withDimensions: false\n    }\n  })).join(',')\n})).catch(onError); // Star dashboard\n\nexport const apiStarDashboard = (id, isStarred) => {\n  const url = `dashboards/${id}/favorite`;\n  getInstance().then(d2 => {\n    if (isStarred) {\n      d2.Api.getApi().post(url);\n    } else {\n      d2.Api.getApi().delete(url);\n    }\n  });\n};\nexport const apiDeleteDashboard = id => {\n  return getInstance().then(d2 => {\n    return d2.models.dashboards.get(id).then(dashboard => dashboard.delete());\n  }).catch(onError);\n};","import React from 'react';\nimport { connect } from 'react-redux';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport PropTypes from 'prop-types';\nimport { sGetSnackbar } from '../../reducers/snackbar';\nimport { acCloseSnackbar } from '../../actions/snackbar';\nconst LOADING_DASHBOARD = 'LOADING_DASHBOARD';\nexport const loadingDashboardMsg = {\n  name: '',\n  type: LOADING_DASHBOARD\n};\n\nconst SnackbarMessageContent = ({\n  message\n}) => {\n  if (typeof message === 'object') {\n    //future message types:  switch(message.type)\n    return <span>\n                Loading <span style={{\n        fontWeight: 800\n      }}>{message.name}</span>{' '}\n                dashboard\n            </span>;\n  }\n\n  return message;\n};\n\nexport const SnackbarMessage = props => {\n  return <Snackbar style={{\n    zIndex: 10001\n  }} open={props.snackbarOpen} message={<SnackbarMessageContent message={props.snackbarMessage} />} autoHideDuration={props.snackbarDuration} onClose={props.onCloseSnackbar} />;\n};\n\nconst mapStateToProps = state => {\n  const {\n    message,\n    duration,\n    open\n  } = sGetSnackbar(state);\n  return {\n    snackbarOpen: open,\n    snackbarMessage: message,\n    snackbarDuration: duration\n  };\n};\n\nSnackbarMessage.propTypes = {\n  snackbarDuration: PropTypes.string,\n  snackbarMessage: PropTypes.object,\n  snackbarOpen: PropTypes.bool,\n  onCloseSnackbar: PropTypes.func\n};\nexport default connect(mapStateToProps, {\n  onCloseSnackbar: acCloseSnackbar\n})(SnackbarMessage);","import { getCustomDashboards, sGetDashboardById } from '../reducers/dashboards';\nimport { SET_SELECTED_ID, SET_SELECTED_ISLOADING, SET_SELECTED_SHOWDESCRIPTION, sGetSelectedIsLoading, sGetSelectedId } from '../reducers/selected';\nimport { sGetUserUsername } from '../reducers/user';\nimport { acSetDashboardItems, acAppendDashboards } from './dashboards';\nimport { acClearItemFilters } from './itemFilters';\nimport { tGetMessages } from '../components/Item/MessagesItem/actions';\nimport { acReceivedSnackbarMessage, acCloseSnackbar } from './snackbar';\nimport { acAddVisualization } from './visualizations';\nimport { apiFetchDashboard } from '../api/dashboards';\nimport { storePreferredDashboardId } from '../api/localStorage';\nimport { withShape } from '../components/ItemGrid/gridUtil';\nimport { loadingDashboardMsg } from '../components/SnackbarMessage/SnackbarMessage';\nimport { extractFavorite } from '../components/Item/VisualizationItem/plugin';\nimport { REPORT_TABLE, CHART, MAP, EVENT_REPORT, EVENT_CHART, MESSAGES } from '../modules/itemTypes';\nimport { orObject } from '../modules/util'; // actions\n\nexport const acSetSelectedId = value => ({\n  type: SET_SELECTED_ID,\n  value\n});\nexport const acSetSelectedIsLoading = value => ({\n  type: SET_SELECTED_ISLOADING,\n  value\n});\nexport const acSetSelectedShowDescription = value => ({\n  type: SET_SELECTED_SHOWDESCRIPTION,\n  value\n}); // thunks\n\nexport const tSetSelectedDashboardById = id => async (dispatch, getState) => {\n  dispatch(acSetSelectedIsLoading(true));\n  const snackbarTimeout = setTimeout(() => {\n    const dashboardName = orObject(sGetDashboardById(getState(), id)).displayName;\n\n    if (sGetSelectedIsLoading(getState()) && dashboardName) {\n      loadingDashboardMsg.name = dashboardName;\n      dispatch(acReceivedSnackbarMessage({\n        message: loadingDashboardMsg,\n        open: true\n      }));\n    }\n  }, 500);\n\n  const onSuccess = selected => {\n    dispatch(acAppendDashboards(selected));\n    const customDashboard = getCustomDashboards(selected)[0];\n    dispatch(acSetDashboardItems(withShape(customDashboard.dashboardItems)));\n    storePreferredDashboardId(sGetUserUsername(getState()), id);\n    customDashboard.dashboardItems.forEach(item => {\n      switch (item.type) {\n        case REPORT_TABLE:\n        case CHART:\n        case MAP:\n        case EVENT_REPORT:\n        case EVENT_CHART:\n          dispatch(acAddVisualization(extractFavorite(item)));\n          break;\n\n        case MESSAGES:\n          dispatch(tGetMessages(id));\n          break;\n\n        default:\n          break;\n      }\n    });\n\n    if (id !== sGetSelectedId(getState())) {\n      dispatch(acClearItemFilters());\n    }\n\n    dispatch(acSetSelectedId(id));\n    dispatch(acSetSelectedIsLoading(false));\n    clearTimeout(snackbarTimeout);\n    dispatch(acCloseSnackbar());\n    return selected;\n  };\n\n  const onError = error => {\n    console.log('Error: ', error);\n    return error;\n  };\n\n  try {\n    const dashboard = await apiFetchDashboard(id);\n    return onSuccess(dashboard);\n  } catch (err) {\n    return onError(err);\n  }\n};","export const getPreferredDashboardId = username => localStorage.getItem(`dhis2.dashboard.current.${username}`) || undefined;\nexport const storePreferredDashboardId = (username, dashboardId) => {\n  localStorage.setItem(`dhis2.dashboard.current.${username}`, dashboardId);\n};","/** @module reducers/editDashboard */\nimport update from 'immutability-helper';\nimport isEmpty from 'lodash/isEmpty';\nimport { orArray, orObject } from '../modules/util';\nexport const RECEIVED_EDIT_DASHBOARD = 'RECEIVED_EDIT_DASHBOARD';\nexport const RECEIVED_NOT_EDITING = 'RECEIVED_NOT_EDITING';\nexport const START_NEW_DASHBOARD = 'START_NEW_DASHBOARD';\nexport const RECEIVED_TITLE = 'RECEIVED_TITLE';\nexport const RECEIVED_DESCRIPTION = 'RECEIVED_DESCRIPTION';\nexport const ADD_DASHBOARD_ITEM = 'ADD_DASHBOARD_ITEM';\nexport const REMOVE_DASHBOARD_ITEM = 'REMOVE_DASHBOARD_ITEM';\nexport const UPDATE_DASHBOARD_ITEM = 'UPDATE_DASHBOARD_ITEM';\nexport const RECEIVED_DASHBOARD_LAYOUT = 'RECEIVED_DASHBOARD_LAYOUT';\nexport const SET_PRINT_PREVIEW_VIEW = 'SET_PRINT_PREVIEW_VIEW';\nexport const CLEAR_PRINT_PREVIEW_VIEW = 'CLEAR_PRINT_PREVIEW_VIEW';\nexport const DEFAULT_STATE_EDIT_DASHBOARD = {};\nexport const NEW_DASHBOARD_STATE = {\n  id: '',\n  name: '',\n  access: {},\n  description: '',\n  dashboardItems: [],\n  printPreviewView: false\n};\nexport default ((state = DEFAULT_STATE_EDIT_DASHBOARD, action) => {\n  switch (action.type) {\n    case RECEIVED_EDIT_DASHBOARD:\n      {\n        const newState = {};\n        Object.keys(NEW_DASHBOARD_STATE).map(k => newState[k] = action.value[k]);\n        newState.printPreviewView = false;\n        return newState;\n      }\n\n    case RECEIVED_NOT_EDITING:\n      return DEFAULT_STATE_EDIT_DASHBOARD;\n\n    case SET_PRINT_PREVIEW_VIEW:\n      return Object.assign({}, state, {\n        printPreviewView: true\n      });\n\n    case CLEAR_PRINT_PREVIEW_VIEW:\n      return Object.assign({}, state, {\n        printPreviewView: false\n      });\n\n    case START_NEW_DASHBOARD:\n      return NEW_DASHBOARD_STATE;\n\n    case RECEIVED_TITLE:\n      {\n        return Object.assign({}, state, {\n          name: action.value\n        });\n      }\n\n    case RECEIVED_DESCRIPTION:\n      {\n        return Object.assign({}, state, {\n          description: action.value\n        });\n      }\n\n    case ADD_DASHBOARD_ITEM:\n      if (!action.value.position) {\n        return update(state, {\n          dashboardItems: {\n            $unshift: [action.value]\n          }\n        });\n      }\n\n      return update(state, {\n        dashboardItems: {\n          $splice: [[parseInt(action.value.position), 0, action.value]]\n        }\n      });\n\n    case REMOVE_DASHBOARD_ITEM:\n      {\n        const idToRemove = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === idToRemove);\n\n        if (dashboardItemIndex > -1) {\n          return update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1]]\n            }\n          });\n        }\n\n        return state;\n      }\n\n    case RECEIVED_DASHBOARD_LAYOUT:\n      {\n        const stateItems = orArray(state.dashboardItems);\n        let layoutHasChanged = false;\n        const newStateItems = action.value.map(({\n          x,\n          y,\n          w,\n          h,\n          i\n        }) => {\n          const stateItem = stateItems.find(si => si.id === i);\n\n          if (!(stateItem.x === x && stateItem.y === y && stateItem.w === w && stateItem.h === h)) {\n            layoutHasChanged = true;\n            return Object.assign({}, stateItem, {\n              w,\n              h,\n              x,\n              y\n            });\n          }\n\n          return stateItem;\n        });\n        return layoutHasChanged ? { ...state,\n          dashboardItems: newStateItems\n        } : state;\n      }\n\n    case UPDATE_DASHBOARD_ITEM:\n      {\n        const dashboardItem = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === dashboardItem.id);\n\n        if (dashboardItemIndex > -1) {\n          const newState = update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1, Object.assign({}, dashboardItem)]]\n            }\n          });\n          return newState;\n        }\n\n        return state;\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetEditDashboardRoot = state => state.editDashboard; // selectors\n\nexport const sGetIsEditing = state => !isEmpty(state.editDashboard);\nexport const sGetIsPrintPreviewView = state => sGetEditDashboardRoot(state).printPreviewView;\nexport const sGetIsNewDashboard = state => {\n  return !isEmpty(state.editDashboard) && sGetEditDashboardRoot(state).id === '';\n};\nexport const sGetEditDashboardName = state => sGetEditDashboardRoot(state).name;\nexport const sGetEditDashboardDescription = state => sGetEditDashboardRoot(state).description;\nexport const sGetEditDashboardItems = state => orObject(sGetEditDashboardRoot(state)).dashboardItems;","import { getInstance } from 'd2';\n\nconst onError = error => console.log('Error: ', error);\n\nconst saveDashboard = (dashboard, data) => {\n  const {\n    name,\n    description,\n    dashboardItems\n  } = data;\n  dashboard.name = name;\n  dashboard.description = description;\n  dashboard.dashboardItems = dashboardItems.map(item => Object.assign({}, item, {\n    width: item.w,\n    height: item.h\n  }));\n  return dashboard.save().then(msg => msg.response.uid);\n};\n\nexport const updateDashboard = data => {\n  return getInstance().then(d2 => {\n    return d2.models.dashboards.get(data.id).then(dashboard => saveDashboard(dashboard, data));\n  }).catch(onError);\n};\nexport const postDashboard = data => {\n  return getInstance().then(d2 => {\n    const dashboard = d2.models.dashboards.create();\n    return saveDashboard(dashboard, data);\n  });\n};","import { generateUid } from 'd2/uid';\nimport { RECEIVED_EDIT_DASHBOARD, START_NEW_DASHBOARD, RECEIVED_NOT_EDITING, RECEIVED_TITLE, RECEIVED_DESCRIPTION, RECEIVED_DASHBOARD_LAYOUT, ADD_DASHBOARD_ITEM, UPDATE_DASHBOARD_ITEM, REMOVE_DASHBOARD_ITEM, SET_PRINT_PREVIEW_VIEW, CLEAR_PRINT_PREVIEW_VIEW } from '../reducers/editDashboard';\nimport { sGetEditDashboardRoot } from '../reducers/editDashboard';\nimport { updateDashboard, postDashboard } from '../api/editDashboard';\nimport { tSetSelectedDashboardById } from '../actions/selected';\nimport { NEW_ITEM_SHAPE, getGridItemProperties, getPageBreakItemShape, getPrintTitlePageItemShape } from '../components/ItemGrid/gridUtil';\nimport { itemTypeMap, PAGEBREAK, PRINT_TITLE_PAGE } from '../modules/itemTypes';\nimport { convertUiItemsToBackend } from '../modules/uiBackendItemConverter';\n\nconst onError = error => {\n  console.log('Error (Saving Dashboard): ', error);\n  return error;\n}; // actions\n\n\nexport const acSetEditDashboard = (dashboard, items) => {\n  const val = { ...dashboard,\n    dashboardItems: items\n  };\n  return {\n    type: RECEIVED_EDIT_DASHBOARD,\n    value: val\n  };\n};\nexport const acSetEditNewDashboard = () => ({\n  type: START_NEW_DASHBOARD\n});\nexport const acClearEditDashboard = () => ({\n  type: RECEIVED_NOT_EDITING\n});\nexport const acSetPrintPreviewView = () => ({\n  type: SET_PRINT_PREVIEW_VIEW\n});\nexport const acClearPrintPreviewView = () => ({\n  type: CLEAR_PRINT_PREVIEW_VIEW\n});\nexport const acSetDashboardTitle = value => ({\n  type: RECEIVED_TITLE,\n  value\n});\nexport const acSetDashboardDescription = value => ({\n  type: RECEIVED_DESCRIPTION,\n  value\n});\nexport const acUpdateDashboardLayout = value => ({\n  type: RECEIVED_DASHBOARD_LAYOUT,\n  value\n});\nexport const acAddDashboardItem = item => {\n  const type = item.type;\n  delete item.type;\n  const itemPropName = itemTypeMap[type].propName;\n  const id = generateUid();\n  const gridItemProperties = getGridItemProperties(id);\n  let shape;\n\n  if (type === PAGEBREAK) {\n    const yPos = item.yPos || 0;\n    shape = getPageBreakItemShape(yPos, item.isStatic);\n  } else if (type === PRINT_TITLE_PAGE) {\n    shape = getPrintTitlePageItemShape();\n  } else {\n    shape = NEW_ITEM_SHAPE;\n  }\n\n  return {\n    type: ADD_DASHBOARD_ITEM,\n    value: {\n      id,\n      type,\n      position: item.position || null,\n      [itemPropName]: item.content,\n      ...NEW_ITEM_SHAPE,\n      ...gridItemProperties,\n      ...shape\n    }\n  };\n};\nexport const acUpdateDashboardItem = item => ({\n  type: UPDATE_DASHBOARD_ITEM,\n  value: item\n});\nexport const acRemoveDashboardItem = value => ({\n  type: REMOVE_DASHBOARD_ITEM,\n  value\n}); // thunks\n\nexport const tSaveDashboard = () => async (dispatch, getState) => {\n  const dashboard = sGetEditDashboardRoot(getState());\n  const dashboardToSave = { ...dashboard,\n    dashboardItems: convertUiItemsToBackend(dashboard.dashboardItems)\n  };\n\n  try {\n    const dashboardId = dashboardToSave.id ? await updateDashboard(dashboardToSave) : await postDashboard(dashboardToSave);\n    dispatch(acClearEditDashboard());\n    await dispatch(tSetSelectedDashboardById(dashboardId));\n    return Promise.resolve(dashboardId);\n  } catch (error) {\n    onError(error);\n  }\n};","import { SET_DASHBOARDS, ADD_DASHBOARDS, SET_DASHBOARD_STARRED, SET_DASHBOARD_DISPLAY_NAME, SET_DASHBOARD_ITEMS } from '../reducers/dashboards';\nimport { getCustomDashboards, sGetDashboardById, sGetDashboardsSortedByStarred } from '../reducers/dashboards';\nimport { NON_EXISTING_DASHBOARD_ID } from '../reducers/selected';\nimport { sGetUserUsername } from '../reducers/user';\nimport { tSetSelectedDashboardById, acSetSelectedId } from './selected';\nimport { acClearEditDashboard } from './editDashboard';\nimport { apiFetchDashboards, apiStarDashboard, apiDeleteDashboard } from '../api/dashboards';\nimport { getPreferredDashboardId } from '../api/localStorage';\nimport { arrayToIdMap } from '../modules/util'; // actions\n\nexport const acSetDashboards = dashboards => ({\n  type: SET_DASHBOARDS,\n  value: arrayToIdMap(getCustomDashboards(dashboards))\n});\nexport const acAppendDashboards = dashboards => ({\n  type: ADD_DASHBOARDS,\n  value: arrayToIdMap(getCustomDashboards(dashboards))\n});\nexport const acSetDashboardStarred = (dashboardId, isStarred) => ({\n  type: SET_DASHBOARD_STARRED,\n  dashboardId: dashboardId,\n  value: isStarred\n});\nexport const acSetDashboardDisplayName = (dashboardId, value) => ({\n  type: SET_DASHBOARD_DISPLAY_NAME,\n  dashboardId,\n  value\n});\nexport const acSetDashboardItems = value => ({\n  type: SET_DASHBOARD_ITEMS,\n  value\n}); // thunks\n\nexport const tFetchDashboards = () => async dispatch => {\n  const collection = await apiFetchDashboards();\n  dispatch(acSetDashboards(collection.toArray()));\n};\nexport const tSelectDashboard = id => async (dispatch, getState) => {\n  const onError = error => {\n    console.log('Error (apiFetchDashboards): ', error);\n    return error;\n  };\n\n  try {\n    const state = getState();\n    let dashboardToSelect = null;\n\n    if (id) {\n      dashboardToSelect = sGetDashboardById(state, id) || null;\n    } else {\n      const preferredId = getPreferredDashboardId(sGetUserUsername(state));\n      const dash = sGetDashboardById(state, preferredId);\n      dashboardToSelect = preferredId && dash ? dash : sGetDashboardsSortedByStarred(state)[0];\n    }\n\n    if (dashboardToSelect) {\n      dispatch(tSetSelectedDashboardById(dashboardToSelect.id));\n    } else {\n      dispatch(acSetSelectedId(NON_EXISTING_DASHBOARD_ID));\n    }\n  } catch (err) {\n    return onError(err);\n  }\n};\nexport const tStarDashboard = (id, isStarred) => async dispatch => {\n  const onSuccess = id => {\n    dispatch(acSetDashboardStarred(id, isStarred));\n    return id;\n  };\n\n  const onError = error => {\n    console.log('Error (apiStarDashboard): ', error);\n    return error;\n  };\n\n  try {\n    await apiStarDashboard(id, isStarred);\n    return onSuccess(id);\n  } catch (err) {\n    return onError(err);\n  }\n};\nexport const tDeleteDashboard = id => async dispatch => {\n  try {\n    await apiDeleteDashboard(id);\n    dispatch(acClearEditDashboard());\n    dispatch(acSetSelectedId());\n    dispatch(acSetDashboardItems([]));\n    await dispatch(tFetchDashboards());\n    return Promise.resolve();\n  } catch (err) {\n    console.log('Error (deleteDashboard): ', err);\n    return err;\n  }\n};","/** @module reducers/controlBar */\nimport { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\nexport const SET_CONTROLBAR_USER_ROWS = 'SET_CONTROLBAR_USER_ROWS';\nexport const DEFAULT_STATE_CONTROLBAR_ROWS = 1;\n\nconst userRows = (state = DEFAULT_STATE_CONTROLBAR_ROWS, action) => {\n  switch (action.type) {\n    case SET_CONTROLBAR_USER_ROWS:\n      return validateReducer(action.value, DEFAULT_STATE_CONTROLBAR_ROWS);\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  userRows\n});\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\n\nexport const sGetControlBarRoot = state => state.controlBar; // Selector dependency level 2\n\nexport const sGetControlBarUserRows = state => sGetControlBarRoot(state).userRows;","import { getInstance } from 'd2';\nimport { DEFAULT_STATE_CONTROLBAR_ROWS } from '../reducers/controlBar';\nconst NAMESPACE = 'dashboard';\nconst KEY = 'controlBarRows';\n\nconst hasNamespace = async d2 => await d2.currentUser.dataStore.has(NAMESPACE);\n\nconst getNamespace = async (d2, hasNamespace) => hasNamespace ? await d2.currentUser.dataStore.get(NAMESPACE) : await d2.currentUser.dataStore.create(NAMESPACE);\n\nexport const apiGetControlBarRows = async () => {\n  const d2 = await getInstance();\n  const namespace = await getNamespace(d2, await hasNamespace(d2));\n  const hasKey = namespace.keys && namespace.keys.find(key => key === KEY);\n\n  if (hasKey) {\n    return await namespace.get(KEY);\n  } else {\n    await apiPostControlBarRows(DEFAULT_STATE_CONTROLBAR_ROWS, namespace);\n    console.log('(These errors to /userDataStore/dashboard can be ignored)');\n    return DEFAULT_STATE_CONTROLBAR_ROWS;\n  }\n};\nexport const apiPostControlBarRows = async (rows, namespace) => {\n  const d2 = await getInstance();\n  const ns = namespace || (await getNamespace(d2, hasNamespace));\n  ns.set(KEY, rows);\n};","import { SET_CONTROLBAR_USER_ROWS } from '../reducers/controlBar';\nimport { apiGetControlBarRows } from '../api/controlBar'; // actions\n\nexport const acSetControlBarUserRows = rows => ({\n  type: SET_CONTROLBAR_USER_ROWS,\n  value: rows\n}); // thunks\n\nexport const tSetControlBarRows = () => async dispatch => {\n  const onSuccess = rows => {\n    dispatch(acSetControlBarUserRows(rows));\n  };\n\n  const onError = error => {\n    console.log('Error (apiGetControlBarRows): ', error);\n    return error;\n  };\n\n  try {\n    const controlBarRows = await apiGetControlBarRows();\n    return onSuccess(controlBarRows);\n  } catch (err) {\n    return onError(err);\n  }\n};","export const SET_SETTINGS = 'SET_SETTINGS';\nexport const ADD_SETTINGS = 'ADD_SETTINGS';\nexport const DEFAULT_SETTINGS = {\n  keyDateFormat: 'yyyy-MM-dd',\n  keyAnalysisRelativePeriod: 'LAST_12_MONTHS',\n  keyAnalysisDigitGroupSeparator: 'SPACE',\n  displayNameProperty: 'displayName',\n  uiLocale: 'en',\n  rootOrganisationUnit: {}\n};\nexport default ((state = DEFAULT_SETTINGS, action) => {\n  switch (action.type) {\n    case SET_SETTINGS:\n      {\n        return Object.assign({}, action.value);\n      }\n\n    case ADD_SETTINGS:\n      {\n        return { ...state,\n          ...action.value\n        };\n      }\n\n    default:\n      return state;\n  }\n}); // Selectors\n\nexport const sGetSettings = state => state.settings;\nexport const sGetSettingsDisplayNameProperty = state => sGetSettings(state).displayNameProperty;\nexport const sGetRootOrgUnit = state => sGetSettings(state).rootOrganisationUnit;\nexport const sGetRelativePeriod = state => sGetSettings(state).keyAnalysisRelativePeriod;\nexport const sGetUiLocale = state => sGetSettings(state).uiLocale;","import { SET_DIMENSIONS } from '../reducers/dimensions';\nimport { apiFetchDimensions } from '@dhis2/analytics';\nimport { sGetSettingsDisplayNameProperty } from '../reducers/settings';\nexport const acSetDimensions = dimensions => ({\n  type: SET_DIMENSIONS,\n  value: dimensions\n});\nexport const tSetDimensions = d2 => async (dispatch, getState) => {\n  const onSuccess = dimensions => {\n    dispatch(acSetDimensions(dimensions));\n  };\n\n  const onError = error => {\n    console.log('Error (apiFetchDimensions): ', error);\n    return error;\n  };\n\n  try {\n    const displayNameProp = sGetSettingsDisplayNameProperty(getState());\n    const dimensions = await apiFetchDimensions(d2, displayNameProp); // filter out CATEGORY that are not of type ATTRIBUTE\n\n    const filteredDimensions = dimensions.filter(dim => dim.dimensionType !== 'CATEGORY' || dim.dimensionType === 'CATEGORY' && dim.dataDimensionType === 'ATTRIBUTE');\n    return onSuccess(filteredDimensions);\n  } catch (err) {\n    return onError(err);\n  }\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { colors } from '@dhis2/ui';\nimport classes from './styles/ControlBar.module.css';\nconst DRAG_HANDLE_HEIGHT = 7;\n\nclass ControlBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dragging: false\n    };\n  }\n\n  onStartDrag = () => {\n    this.setState({\n      dragging: true\n    });\n    window.addEventListener('mousemove', this.onDrag);\n    window.addEventListener('mouseup', this.onEndDrag);\n  };\n  onDrag = event => {\n    event.preventDefault();\n    event.stopPropagation();\n    const newHeight = event.clientY;\n\n    if (this.props.onChangeHeight && newHeight !== this.props.height && newHeight > 0) {\n      requestAnimationFrame(() => {\n        this.props.onChangeHeight(newHeight);\n      });\n    }\n  };\n  onEndDrag = () => {\n    this.setState({\n      dragging: false\n    });\n    window.removeEventListener('mousemove', this.onDrag);\n    window.removeEventListener('mouseup', this.onEndDrag);\n\n    if (this.props.onEndDrag) {\n      this.props.onEndDrag();\n    }\n  };\n\n  renderDragHandle() {\n    return typeof this.props.onChangeHeight === 'function' ? <div className={classes.draghandle} style={{\n      height: DRAG_HANDLE_HEIGHT\n    }} onMouseDown={this.onStartDrag} /> : null;\n  }\n\n  render() {\n    const height = Math.max(this.props.height, 0) + DRAG_HANDLE_HEIGHT;\n    const rootStyle = Object.assign({\n      height,\n      backgroundColor: this.props.editMode ? colors.yellow050 : colors.white,\n      paddingBottom: DRAG_HANDLE_HEIGHT\n    }, // Disable animations while dragging\n    this.state.dragging ? {\n      transition: 'none'\n    } : {});\n    return <div style={rootStyle} className={classes.root}>\n                <div className={classes.content}>{this.props.children}</div>\n                {this.renderDragHandle()}\n            </div>;\n  }\n\n}\n\nControlBar.propTypes = {\n  /**\n   * The height of the control bar in number of lines. Must be a positive integer.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * If true, the background color of the control bar changes to indicate that edit mode is active.\n   */\n  editMode: PropTypes.bool.isRequired,\n\n  /**\n   * Callback function that is called when the control bar is resized.\n   * The callback receives one argument: The new height in pixels.\n   *\n   * If no callback is specified the control bar will not have a drag handle.\n   */\n  height: PropTypes.number.isRequired,\n\n  /**\n   * Callback function that is called when the control bar is dropped after being dragged.\n   * The callback receives one argument: The new height in pixels.\n   *\n   * Ignored if no \"onChangeHeight\" function is provided.\n   */\n  onChangeHeight: PropTypes.func,\n\n  /**\n   * The contents of the control bar.\n   */\n  onEndDrag: PropTypes.func\n};\nControlBar.defaultProps = {\n  onChangeHeight: null,\n  onEndDrag: null\n};\nexport default ControlBar;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst StarIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>;\n\nStarIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default StarIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Chip } from '@dhis2/ui';\nimport { Link } from 'react-router-dom';\nimport debounce from 'lodash/debounce';\nimport StarIcon from '../../icons/Star';\nimport { apiPostDataStatistics } from '../../api/dataStatistics';\nimport classes from './styles/DashboardItemChip.module.css';\nexport const DashboardItemChip = ({\n  starred,\n  selected,\n  label,\n  dashboardId\n}) => {\n  const chipProps = {\n    selected\n  };\n\n  if (starred) {\n    const selectedState = selected ? classes.selected : classes.unselected;\n    chipProps.icon = <StarIcon className={`${classes.icon} ${selectedState}`} />;\n  }\n\n  return <Link className={classes.link} to={`/${dashboardId}`} onClick={debounce(() => apiPostDataStatistics('DASHBOARD_VIEW', dashboardId), 500)}>\n            <Chip {...chipProps}>{label}</Chip>\n        </Link>;\n};\nDashboardItemChip.propTypes = {\n  dashboardId: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  selected: PropTypes.bool.isRequired,\n  starred: PropTypes.bool.isRequired,\n  classes: PropTypes.object\n};\nexport default DashboardItemChip;","import { getInstance } from 'd2';\nexport const apiPostDataStatistics = async (eventType, id) => {\n  const d2 = await getInstance();\n  const url = `dataStatistics?eventType=${eventType}&favorite=${id}`;\n  d2.Api.getApi().post(url);\n};","import React from 'react';\nimport { colors } from '@dhis2/ui';\n\nconst AddCircleIcon = () => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" fill={colors.teal600} viewBox=\"0 0 24 24\">\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm4 11h-3v3c0 .55-.45 1-1 1s-1-.45-1-1v-3H8c-.55 0-1-.45-1-1s.45-1 1-1h3V8c0-.55.45-1 1-1s1 .45 1 1v3h3c.55 0 1 .45 1 1s-.45 1-1 1z\" />\n    </svg>;\n\nexport default AddCircleIcon;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst ClearIcon = ({\n  className\n}) => <svg className={className} fill={colors.grey800} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n        <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>;\n\nClearIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default ClearIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ClearIcon from '../../icons/Clear';\nimport classes from './styles/ClearButton.module.css';\nexport const ClearButton = ({\n  onClear\n}) => <button className={classes.button} onClick={onClear}>\n        <span>\n            <ClearIcon className={classes.icon} color=\"action\" />\n        </span>\n    </button>;\nClearButton.propTypes = {\n  onClear: PropTypes.func.isRequired\n};\nexport default ClearButton;","import { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\nexport const SET_DASHBOARDS_FILTER_NAME = 'SET_DASHBOARDS_FILTER_NAME';\nexport const SET_DASHBOARDS_FILTER_OWNER = 'SET_DASHBOARDS_FILTER_OWNER';\nexport const SET_DASHBOARDS_FILTER_ORDER = 'SET_DASHBOARDS_FILTER_ORDER';\nexport const ownerData = [{\n  id: 'ALL',\n  value: 'All users'\n}, {\n  id: 'ME',\n  value: 'Created by me'\n}, {\n  id: 'OTHERS',\n  value: 'Created by others'\n}];\nexport const orderData = [{\n  id: 'NAME:ASC',\n  value: 'Name (asc)'\n}, {\n  id: 'NAME:ASC',\n  value: 'Name (desc)'\n}, {\n  id: 'ITEMS:ASC',\n  value: 'Number of items (asc)'\n}, {\n  id: 'ITEMS:ASC',\n  value: 'Number of items (desc)'\n}, {\n  id: 'CREATED:ASC',\n  value: 'Created date (asc)'\n}, {\n  id: 'CREATED:ASC',\n  value: 'Created date (desc)'\n}];\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_NAME = '';\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_OWNER = ownerData[0].id;\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_ORDER = orderData[0].id;\n\nconst name = (state = DEFAULT_STATE_DASHBOARDS_FILTER_NAME, action) => {\n  switch (action.type) {\n    case SET_DASHBOARDS_FILTER_NAME:\n      return validateReducer(action.value, DEFAULT_STATE_DASHBOARDS_FILTER_NAME);\n\n    default:\n      return state;\n  }\n};\n\nconst owner = (state = DEFAULT_STATE_DASHBOARDS_FILTER_OWNER, action) => {\n  switch (action.type) {\n    case SET_DASHBOARDS_FILTER_OWNER:\n      return validateReducer(action.value, DEFAULT_STATE_DASHBOARDS_FILTER_NAME);\n\n    default:\n      return state;\n  }\n};\n\nconst order = (state = DEFAULT_STATE_DASHBOARDS_FILTER_ORDER, action) => {\n  switch (action.type) {\n    case SET_DASHBOARDS_FILTER_ORDER:\n      return validateReducer(action.value, DEFAULT_STATE_DASHBOARDS_FILTER_ORDER);\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  name,\n  owner,\n  order\n}); // selectors\n\nexport const sGetDashboardsFilterRoot = state => state.dashboardsFilter; // selector dependency level 2\n\nexport const sGetFilterName = state => sGetDashboardsFilterRoot(state).name;\nexport const sGetFilterOwner = state => sGetDashboardsFilterRoot(state).owner;\nexport const sGetFilterOrder = state => sGetDashboardsFilterRoot(state).order;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { withStyles } from '@material-ui/core/styles';\nimport InputField from '@material-ui/core/Input';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { colors } from '@dhis2/ui';\nimport ClearButton from './ClearButton';\nimport { DEFAULT_STATE_DASHBOARDS_FILTER_NAME } from '../../reducers/dashboardsFilter';\nconst styles = {\n  filterField: {\n    fontSize: '14px',\n    width: '200px',\n    height: '30px',\n    top: '-4px'\n  },\n  searchIcon: {\n    color: colors.grey700,\n    width: '20px',\n    height: '20px'\n  }\n};\nexport const KEYCODE_ENTER = 13;\nexport const KEYCODE_ESCAPE = 27;\nexport class Filter extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: DEFAULT_STATE_DASHBOARDS_FILTER_NAME\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      value: nextProps.name\n    });\n  }\n\n  setFilterValue = event => {\n    event.preventDefault();\n    this.props.onChangeName(event.target.value);\n  };\n  handleKeyUp = event => {\n    switch (event.keyCode) {\n      case KEYCODE_ENTER:\n        this.props.onKeypressEnter();\n        break;\n\n      case KEYCODE_ESCAPE:\n        this.props.onChangeName();\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  render() {\n    const {\n      classes,\n      name,\n      onChangeName\n    } = this.props;\n    const startAdornment = <InputAdornment position=\"start\">\n                <SearchIcon className={classes.searchIcon} />\n            </InputAdornment>;\n    const endAdornment = name !== '' && name !== null ? <InputAdornment position=\"end\">\n                    <ClearButton onClear={() => onChangeName()} />\n                </InputAdornment> : null;\n    return <InputField className={classes.filterField} placeholder={i18n.t('Search for a dashboard')} startAdornment={startAdornment} endAdornment={endAdornment} value={this.state.value} onChange={this.setFilterValue} onKeyUp={this.handleKeyUp} />;\n  }\n\n}\nFilter.propTypes = {\n  classes: PropTypes.object,\n  name: PropTypes.string,\n  onChangeName: PropTypes.func,\n  onKeypressEnter: PropTypes.func\n};\nFilter.defaultProps = {\n  name: '',\n  onChangeName: Function.prototype\n};\nexport default withStyles(styles)(Filter);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport classes from './styles/ShowMoreButton.module.css';\nexport const SHOWMORE_BAR_HEIGHT = 16;\nexport const ShowMoreButton = ({\n  onClick,\n  isMaxHeight,\n  disabled\n}) => {\n  return <div style={{\n    textAlign: 'center'\n  }}>\n            {disabled ? <div className={classes.disabled}>{i18n.t('Show more')}</div> : <div className={classes.showMore} onClick={onClick}>\n                    {isMaxHeight ? i18n.t('Show less') : i18n.t('Show more')}\n                </div>}\n        </div>;\n};\nShowMoreButton.propTypes = {\n  disabled: PropTypes.bool,\n  isMaxHeight: PropTypes.bool,\n  onClick: PropTypes.func\n};\nexport default ShowMoreButton;","import { SHOWMORE_BAR_HEIGHT } from './ShowMoreButton';\nexport const CONTROL_BAR_ROW_HEIGHT = 40;\nexport const FIRST_ROW_PADDING_HEIGHT = 10;\nexport const MIN_ROW_COUNT = 1;\nconst CONTROL_BAR_OUTER_HEIGHT_DIFF = FIRST_ROW_PADDING_HEIGHT + SHOWMORE_BAR_HEIGHT - 2; // 2 pixel \"adjustment\"\n\nexport const getRowsHeight = rows => {\n  return rows * CONTROL_BAR_ROW_HEIGHT;\n};\nexport const getNumRowsFromHeight = height => {\n  return Math.floor((height - CONTROL_BAR_OUTER_HEIGHT_DIFF) / CONTROL_BAR_ROW_HEIGHT);\n};\nexport const getControlBarHeight = rows => {\n  return getRowsHeight(rows) + CONTROL_BAR_OUTER_HEIGHT_DIFF;\n};","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport ControlBar from './ControlBar';\nimport arraySort from 'd2-utilizr/lib/arraySort';\nimport PropTypes from 'prop-types';\nimport Chip from './DashboardItemChip';\nimport AddCircleIcon from '../../icons/AddCircle';\nimport Filter from './Filter';\nimport ShowMoreButton from './ShowMoreButton';\nimport { FIRST_ROW_PADDING_HEIGHT, MIN_ROW_COUNT, getRowsHeight, getControlBarHeight, getNumRowsFromHeight } from './controlBarDimensions';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { sGetAllDashboards } from '../../reducers/dashboards';\nimport { sGetFilterName } from '../../reducers/dashboardsFilter';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { acSetControlBarUserRows } from '../../actions/controlBar';\nimport { acSetFilterName } from '../../actions/dashboardsFilter';\nimport { orObject, orArray } from '../../modules/util';\nimport { apiPostControlBarRows } from '../../api/controlBar';\nimport classes from './styles/DashboardsBar.module.css';\nexport const MAX_ROW_COUNT = 10;\nexport class DashboardsBar extends Component {\n  state = {\n    rows: MIN_ROW_COUNT\n  };\n  setInitialDashboardState = rows => {\n    this.setState({\n      rows,\n      isMaxHeight: rows === MAX_ROW_COUNT\n    });\n  };\n\n  componentDidMount() {\n    this.setInitialDashboardState(this.props.userRows);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setInitialDashboardState(nextProps.userRows);\n  }\n\n  onChangeHeight = newHeight => {\n    const adjustedHeight = newHeight - 52; // don't rush the transition to a bigger row count\n\n    const newRows = Math.max(MIN_ROW_COUNT, getNumRowsFromHeight(adjustedHeight));\n\n    if (newRows !== this.state.rows) {\n      const newRowCount = Math.min(newRows, MAX_ROW_COUNT);\n      this.props.onChangeHeight(newRowCount);\n    }\n  };\n  onEndDrag = () => {\n    return apiPostControlBarRows(this.state.rows);\n  };\n  onToggleMaxHeight = () => {\n    const rows = this.state.rows === MAX_ROW_COUNT ? this.props.userRows : MAX_ROW_COUNT;\n    this.setState({\n      rows,\n      isMaxHeight: !this.state.isMaxHeight\n    });\n  };\n  onSelectDashboard = () => {\n    this.props.history.push(`/${this.props.dashboards[0].id}`);\n  };\n\n  render() {\n    const {\n      dashboards,\n      name,\n      selectedId,\n      onChangeFilterName\n    } = this.props;\n    const rowCount = this.state.isMaxHeight ? MAX_ROW_COUNT : this.state.rows;\n    const controlBarHeight = getControlBarHeight(rowCount);\n    const contentWrapperStyle = {\n      padding: `${FIRST_ROW_PADDING_HEIGHT}px 6px 0 6px`,\n      overflowY: this.state.isMaxHeight ? 'auto' : 'hidden',\n      height: getRowsHeight(rowCount) + FIRST_ROW_PADDING_HEIGHT\n    };\n    return <ControlBar height={controlBarHeight} onChangeHeight={this.onChangeHeight} onEndDrag={this.onEndDrag} editMode={false}>\n                <div style={contentWrapperStyle}>\n                    <div className={classes.leftControls}>\n                        <Link style={{\n            display: 'inline-block',\n            textDecoration: 'none',\n            marginRight: 10,\n            position: 'relative',\n            top: '2px'\n          }} to={'/new'}>\n                            <AddCircleIcon />\n                        </Link>\n                        <Filter name={name} onChangeName={onChangeFilterName} onKeypressEnter={this.onSelectDashboard} />\n                    </div>\n                    {orArray(dashboards).map(dashboard => <Chip key={dashboard.id} label={dashboard.displayName} starred={dashboard.starred} dashboardId={dashboard.id} selected={dashboard.id === selectedId} />)}\n                </div>\n                <ShowMoreButton onClick={this.onToggleMaxHeight} isMaxHeight={this.state.isMaxHeight} disabled={this.props.userRows === MAX_ROW_COUNT} />\n            </ControlBar>;\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  dashboards: sGetAllDashboards(state),\n  name: sGetFilterName(state),\n  userRows: sGetControlBarUserRows(state),\n  selectedId: sGetSelectedId(state)\n});\n\nconst mapDispatchToProps = {\n  onChangeHeight: acSetControlBarUserRows,\n  onChangeFilterName: acSetFilterName\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n  const dashboards = Object.values(orObject(stateProps.dashboards));\n  const displayDashboards = arraySort(dashboards.filter(d => d.displayName.toLowerCase().includes(stateProps.name.toLowerCase())), 'ASC', 'displayName');\n  return { ...stateProps,\n    ...ownProps,\n    ...dispatchProps,\n    dashboards: [...displayDashboards.filter(d => d.starred), ...displayDashboards.filter(d => !d.starred)]\n  };\n};\n\nDashboardsBar.propTypes = {\n  dashboards: PropTypes.array,\n  history: PropTypes.object,\n  name: PropTypes.string,\n  selectedId: PropTypes.string,\n  userRows: PropTypes.number,\n  onChangeFilterName: PropTypes.func,\n  onChangeHeight: PropTypes.func\n};\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps, mergeProps)(DashboardsBar));","import { SET_DASHBOARDS_FILTER_NAME, SET_DASHBOARDS_FILTER_OWNER, SET_DASHBOARDS_FILTER_ORDER } from '../reducers/dashboardsFilter'; // actions\n\nexport const acSetFilterName = value => ({\n  type: SET_DASHBOARDS_FILTER_NAME,\n  value\n});\nexport const acSetFilterOwner = value => ({\n  type: SET_DASHBOARDS_FILTER_OWNER,\n  value\n});\nexport const acSetFilterOrder = value => ({\n  type: SET_DASHBOARDS_FILTER_ORDER,\n  value\n});","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { getControlBarHeight, MIN_ROW_COUNT } from '../ControlBar/controlBarDimensions';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\n\nconst DashboardVerticalOffset = props => {\n  const rows = props.editMode ? MIN_ROW_COUNT : props.userRows;\n  const marginTop = getControlBarHeight(rows);\n  return <div className=\"page-container-top-margin\" style={{\n    marginTop\n  }} />;\n};\n\nconst mapStateToProps = state => ({\n  userRows: sGetControlBarUserRows(state)\n});\n\nDashboardVerticalOffset.propTypes = {\n  editMode: PropTypes.bool,\n  userRows: PropTypes.number\n};\nexport default connect(mapStateToProps)(DashboardVerticalOffset);","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nexport const NoContentMessage = ({\n  text\n}) => <div style={{\n  padding: '50px 10px',\n  textAlign: 'center',\n  fontSize: '15px',\n  fontWeight: 500,\n  color: colors.grey600\n}}>\n        {text}\n    </div>;\nNoContentMessage.propTypes = {\n  text: PropTypes.string\n};\nexport default NoContentMessage;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { MenuItem, colors } from '@dhis2/ui';\n\nconst HeaderMenuItem = ({\n  title\n}) => <MenuItem dense key={title} disabled label={<span style={{\n  color: colors.grey800,\n  fontWeight: '600'\n}}>\n                {title}\n            </span>} />;\n\nHeaderMenuItem.propTypes = {\n  title: PropTypes.string.isRequired\n};\nexport default HeaderMenuItem;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst LaunchIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\" fill={colors.grey600} viewBox=\"0 0 24 24\">\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z\" />\n    </svg>;\n\nLaunchIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default LaunchIcon;","import React from 'react';\nimport { MenuItem, colors } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport { visTypeIcons } from '@dhis2/analytics';\nimport { getItemIcon, VISUALIZATION } from '../../modules/itemTypes';\nimport LaunchIcon from '../../icons/Launch';\nimport classes from './styles/ContentMenuItem.module.css';\n\nconst LaunchLink = ({\n  url\n}) => <a onClick={e => e.stopPropagation()} className={classes.launchLink} target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n        <LaunchIcon />\n    </a>;\n\nLaunchLink.propTypes = {\n  url: PropTypes.string\n};\n\nconst InsertButton = () => <button className={classes.buttonInsert}>{i18n.t('Insert')}</button>;\n\nconst ContentMenuItem = ({\n  type,\n  name,\n  onInsert,\n  url,\n  visType\n}) => {\n  const ItemIcon = getItemIcon(type);\n  const renderedItemIcon = type === VISUALIZATION ? visTypeIcons[visType] : <ItemIcon style={{\n    fill: colors.grey600\n  }} />;\n  return <MenuItem dense onClick={onInsert} label={<div className={classes.menuItem}>\n                    <div className={classes.label}>\n                        <span style={{\n        marginRight: '6px'\n      }}>\n                            {renderedItemIcon}\n                        </span>\n                        <span>{name}</span>\n                        {url ? <LaunchLink url={url} /> : null}\n                    </div>\n                    <InsertButton />\n                </div>} />;\n};\n\nContentMenuItem.propTypes = {\n  name: PropTypes.string,\n  type: PropTypes.string,\n  url: PropTypes.string,\n  visType: PropTypes.string,\n  onInsert: PropTypes.func\n};\nexport default ContentMenuItem;","import { sGetEditDashboardRoot } from '../../reducers/editDashboard';\nimport { itemTypeMap } from '../../modules/itemTypes';\nimport { acAddDashboardItem, acUpdateDashboardItem } from '../../actions/editDashboard';\nexport const tAddListItemContent = (type, content) => (dispatch, getState) => {\n  const state = getState();\n  const listItemType = itemTypeMap[type].propName;\n  const dashboardItems = sGetEditDashboardRoot(state).dashboardItems;\n  const dashboardItemIndex = dashboardItems.findIndex(item => item.type === type);\n  let dashboardItem; // Reports/Resources/Users dashboard item type already present in dashboard\n\n  if (dashboardItemIndex > -1) {\n    dashboardItem = dashboardItems[dashboardItemIndex];\n    dashboardItem[listItemType].push(content);\n    dispatch(acUpdateDashboardItem(dashboardItem));\n  } else {\n    dashboardItem = {\n      type: type,\n      content: [content]\n    };\n    dispatch(acAddDashboardItem(dashboardItem));\n  }\n};","import i18n from '@dhis2/d2-i18n';\nimport { VISUALIZATION, MAP, EVENT_CHART, EVENT_REPORT, USERS, REPORTS, RESOURCES, APP, MESSAGES, TEXT, SPACER } from '../../modules/itemTypes';\nexport const singleItems = [{\n  id: 'additional',\n  header: i18n.t('Additional items'),\n  items: [{\n    type: TEXT,\n    name: i18n.t('Text box'),\n    content: ''\n  }, {\n    type: MESSAGES,\n    name: i18n.t('Messages'),\n    content: 'true'\n  }, {\n    type: SPACER,\n    name: i18n.t('Spacer'),\n    content: ''\n  }]\n}]; // categorizedItems are grouped in the item selector menu\n\nexport const categorizedItems = [VISUALIZATION, MAP, EVENT_REPORT, EVENT_CHART, USERS, REPORTS, RESOURCES, APP]; // listItemTypes are included in a single dashboard item\n\nexport const listItemTypes = [REPORTS, RESOURCES, USERS];","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { MenuItem, Divider } from '@dhis2/ui';\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\nimport { tAddListItemContent } from './actions';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\nimport { getItemUrl, APP, VISUALIZATION } from '../../modules/itemTypes';\nimport { categorizedItems, listItemTypes } from './selectableItems';\nimport classes from './styles/CategorizedMenuGroup.module.css';\n\nclass CategorizedMenuGroup extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      seeMore: false\n    };\n  }\n\n  addItem = item => () => {\n    const {\n      type,\n      acAddDashboardItem,\n      tAddListItemContent\n    } = this.props;\n\n    if (type === APP) {\n      acAddDashboardItem({\n        type,\n        content: item.key\n      });\n    } else {\n      const newItem = {\n        id: item.id,\n        name: item.displayName || item.name\n      };\n\n      if (listItemTypes.includes(type)) {\n        tAddListItemContent(type, newItem);\n      } else {\n        acAddDashboardItem({\n          type,\n          content: newItem\n        });\n      }\n    }\n  };\n  toggleSeeMore = () => {\n    this.setState({\n      seeMore: !this.state.seeMore\n    });\n    this.props.onChangeItemsLimit(this.props.type);\n  };\n\n  render() {\n    const {\n      title,\n      type,\n      items,\n      hasMore\n    } = this.props;\n    return <>\n                <HeaderMenuItem title={title} />\n                {items.map(item => {\n        const itemUrl = getItemUrl(type, item, this.context.d2);\n        return <ContentMenuItem key={item.id || item.key} type={type} visType={type === VISUALIZATION ? item.type : type} name={item.displayName || item.name} onInsert={this.addItem(item)} url={itemUrl} />;\n      })}\n                {hasMore ? <MenuItem dense key={`showmore${title}`} onClick={this.toggleSeeMore} label={<button className={classes.showMoreButton}>\n                                {this.state.seeMore ? i18n.t('Show fewer') : i18n.t('Show more')}\n                            </button>} /> : null}\n                <Divider margin=\"8px 0px\" />\n            </>;\n  }\n\n}\n\nCategorizedMenuGroup.propTypes = {\n  items: PropTypes.array.isRequired,\n  title: PropTypes.string.isRequired,\n  type: PropTypes.oneOf(categorizedItems).isRequired,\n  onChangeItemsLimit: PropTypes.func.isRequired,\n  acAddDashboardItem: PropTypes.func,\n  hasMore: PropTypes.bool,\n  tAddListItemContent: PropTypes.func\n};\nCategorizedMenuGroup.contextTypes = {\n  d2: PropTypes.object.isRequired\n};\nexport default connect(null, {\n  acAddDashboardItem,\n  tAddListItemContent\n})(CategorizedMenuGroup);","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\nexport const SinglesMenuGroup = ({\n  acAddDashboardItem,\n  category\n}) => {\n  const addToDashboard = ({\n    type,\n    content\n  }) => () => {\n    acAddDashboardItem({\n      type,\n      content\n    });\n  };\n\n  return <>\n            <HeaderMenuItem title={category.header} />\n            {category.items.map(item => <ContentMenuItem key={item.type} type={item.type} name={item.name} onInsert={addToDashboard(item)} />)}\n        </>;\n};\nSinglesMenuGroup.propTypes = {\n  acAddDashboardItem: PropTypes.func,\n  category: PropTypes.object\n};\nexport default connect(null, {\n  acAddDashboardItem\n})(SinglesMenuGroup);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport Popover from '@material-ui/core/Popover';\nimport { InputField, Menu } from '@dhis2/ui';\nimport CategorizedMenuGroup from './CategorizedMenuGroup';\nimport SinglesMenuGroup from './SinglesMenuGroup';\nimport { singleItems, categorizedItems } from './selectableItems';\nimport { itemTypeMap, getDefaultItemCount } from '../../modules/itemTypes';\nimport './styles/ItemSelector.css';\n\nconst ItemSearchField = props => <InputField name=\"Dashboard item search\" label={i18n.t('Search for items to add to this dashboard')} type=\"text\" onChange={props.onChange} onFocus={props.onFocus} value={props.value} />;\n\nclass ItemSelector extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      anchorEl: null,\n      open: false,\n      maxOptions: new Set(),\n      items: undefined,\n      filter: ''\n    };\n  }\n\n  closeList = () => {\n    this.setState({\n      open: false,\n      filter: ''\n    });\n  };\n  openList = (_, event) => {\n    this.fetchItems();\n    this.setState({\n      anchorEl: event.currentTarget,\n      open: true\n    });\n  };\n  setFilter = (_, event) => {\n    this.setState({\n      filter: event.target.value\n    }, this.fetchItems);\n  };\n  getCategorizedMenuGroups = () => categorizedItems.filter(type => {\n    const itemType = itemTypeMap[type];\n    return this.state.items && this.state.items[itemType.endPointName];\n  }).map(type => {\n    const itemType = itemTypeMap[type];\n    const itemCount = getDefaultItemCount(type);\n    const allItems = this.state.items[itemType.endPointName];\n    const hasMore = allItems.length > itemCount;\n    const items = this.state.maxOptions.has(itemType.id) ? allItems : allItems.slice(0, itemCount);\n    return <CategorizedMenuGroup key={type} type={type} title={itemType.pluralTitle} items={items} onChangeItemsLimit={this.fetchItems} hasMore={hasMore} />;\n  });\n  getSinglesMenuGroups = () => singleItems.map(category => <SinglesMenuGroup key={category.id} category={category} />);\n  getMenuGroups = () => this.getCategorizedMenuGroups().concat(this.getSinglesMenuGroups());\n  fetchItems = async type => {\n    if (type) {\n      const maxOptions = this.state.maxOptions;\n\n      if (maxOptions.has(type)) {\n        maxOptions.delete(type);\n      } else {\n        maxOptions.add(type);\n      }\n\n      this.setState({\n        maxOptions\n      });\n    } else {\n      this.setState({\n        maxOptions: new Set()\n      });\n    }\n\n    let queryString = '?count=11';\n\n    if ([...this.state.maxOptions.values()].length) {\n      queryString += '&max=' + [...this.state.maxOptions.values()].join('&max=');\n    }\n\n    const filter = this.state.filter ? `/${this.state.filter}` : '';\n    this.context.d2.Api.getApi().get(`dashboards/q${filter}${queryString}`).then(response => this.setState({\n      items: response\n    })).catch(console.error);\n  };\n\n  render() {\n    return <>\n                <ItemSearchField value={this.state.filter} onChange={this.setFilter} onFocus={this.openList} />\n                <Popover className=\"dashboard-item-selector\" open={this.state.open} onClose={this.closeList} anchorEl={this.state.anchorEl} anchorOrigin={{\n        horizontal: 'left',\n        vertical: 'bottom'\n      }} transformOrigin={{\n        horizontal: 'left',\n        vertical: 'top'\n      }} style={{\n        height: '70vh'\n      }} PaperProps={{\n        style: {\n          width: '700px'\n        }\n      }} disableAutoFocus={true} disableEnforceFocus={true} disableRestoreFocus={true}>\n                    <Menu maxWidth={'700px'}>{this.getMenuGroups()}</Menu>\n                </Popover>\n            </>;\n  }\n\n}\n\nItemSearchField.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n  onFocus: PropTypes.func\n};\nItemSelector.contextTypes = {\n  d2: PropTypes.object.isRequired\n};\nexport default ItemSelector;","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { InputField, TextAreaField } from '@dhis2/ui';\nimport ItemSelector from '../ItemSelector/ItemSelector';\nimport { acSetDashboardTitle, acSetDashboardDescription } from '../../actions/editDashboard';\nimport { orObject } from '../../modules/util';\nimport { sGetEditDashboardRoot } from '../../reducers/editDashboard';\nimport classes from './styles/EditTitleBar.module.css';\nexport const EditTitleBar = ({\n  name,\n  description,\n  onChangeTitle,\n  onChangeDescription\n}) => {\n  const updateTitle = (_, e) => {\n    onChangeTitle(e.target.value);\n  };\n\n  const updateDescription = (_, e) => {\n    onChangeDescription(e.target.value);\n  };\n\n  return <section className={classes.section}>\n            <div className={classes.titleDescription}>\n                <InputField className={classes.title} name=\"Dashboard title input\" label={i18n.t('Dashboard title')} type=\"text\" onChange={updateTitle} value={name} />\n                <TextAreaField className={classes.description} name=\"Dashboard description input\" label={i18n.t('Dashboard description')} onChange={updateDescription} value={description} />\n            </div>\n            <div className={classes.itemSelector}>\n                <ItemSelector />\n            </div>\n        </section>;\n};\nEditTitleBar.propTypes = {\n  onChangeDescription: PropTypes.func.isRequired,\n  onChangeTitle: PropTypes.func.isRequired,\n  description: PropTypes.string,\n  name: PropTypes.string\n};\nEditTitleBar.defaultProps = {\n  name: '',\n  description: ''\n};\n\nconst mapStateToProps = state => {\n  const selectedDashboard = orObject(sGetEditDashboardRoot(state));\n  return {\n    name: selectedDashboard.name,\n    description: selectedDashboard.description\n  };\n};\n\nconst mapDispatchToProps = {\n  onChangeTitle: acSetDashboardTitle,\n  onChangeDescription: acSetDashboardDescription\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(EditTitleBar);","import React from 'react';\nimport { colors } from '@dhis2/ui';\nexport const ThreeDots = () => <svg height=\"18\" viewBox=\"0 0 18 18\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"m4 7.5c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm10 0c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm-5 0c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5z\" fill=\"#6e7a8a\" />\n    </svg>;\nexport const SpeechBubble = () => <svg height=\"20\" viewBox=\"0 0 20 20\" width=\"20\" xmlns=\"http://www.w3.org/2000/svg\" style={{\n  margin: '3px 2px 0 2px'\n}} // Temporary fix for the misaligned icon, should be removed once the icon is replaced\n>\n        <path d=\"m20 2h-16c-1.1 0-1.99.9-1.99 2l-.01 18 4-4h14c1.1 0 2-.9 2-2v-12c0-1.1-.9-2-2-2zm-2 12h-12v-2h12zm0-3h-12v-2h12zm0-3h-12v-2h12z\" fill=\"#6e7a8a\" fillRule=\"evenodd\" transform=\"translate(-2 -2)\" />\n    </svg>;\nexport const Warning = () => <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" fill={colors.grey600}>\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z\" />\n    </svg>;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Modal, ModalTitle, ModalContent, ModalActions, ButtonStrip } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport { PeriodDimension, DynamicDimension, OrgUnitDimension, DIMENSION_ID_PERIOD, DIMENSION_ID_ORGUNIT } from '@dhis2/analytics';\n\nclass FilterDialog extends Component {\n  onConfirm = id => () => this.props.onConfirm(id);\n\n  renderDialogContent() {\n    const {\n      displayNameProperty,\n      dimension,\n      selectedItems\n    } = this.props;\n    const dialogId = dimension.id;\n    const commonProps = {\n      d2: this.context.d2,\n      onSelect: this.props.onSelect,\n      onDeselect: this.props.onDeselect,\n      onReorder: this.props.onReorder\n    };\n\n    switch (dialogId) {\n      case DIMENSION_ID_PERIOD:\n        {\n          return <PeriodDimension selectedPeriods={selectedItems} onSelect={commonProps.onSelect} />;\n        }\n\n      case DIMENSION_ID_ORGUNIT:\n        return <OrgUnitDimension displayNameProperty={displayNameProperty} ouItems={selectedItems} {...commonProps} />;\n\n      default:\n        return <DynamicDimension selectedItems={selectedItems} dimensionId={dialogId} onSelect={commonProps.onSelect} context={commonProps.d2} />;\n    }\n  }\n\n  render() {\n    const {\n      dimension,\n      onClose\n    } = this.props;\n    const dialogId = dimension.id;\n    return <>\n                {dialogId && <Modal onClose={onClose} position=\"top\" large>\n                        <ModalTitle>{dimension.name}</ModalTitle>\n                        <ModalContent>\n                            {this.renderDialogContent()}\n                        </ModalContent>\n                        <ModalActions>\n                            <ButtonStrip>\n                                <Button secondary onClick={onClose}>\n                                    {i18n.t('Cancel')}\n                                </Button>\n                                <Button primary onClick={this.onConfirm(dialogId)}>\n                                    {i18n.t('Confirm')}\n                                </Button>\n                            </ButtonStrip>\n                        </ModalActions>\n                    </Modal>}\n            </>;\n  }\n\n}\n\nFilterDialog.propTypes = {\n  dimension: PropTypes.object,\n  displayNameProperty: PropTypes.string,\n  selectedItems: PropTypes.array,\n  onClose: PropTypes.func,\n  onConfirm: PropTypes.func,\n  onDeselect: PropTypes.func,\n  onReorder: PropTypes.func,\n  onSelect: PropTypes.func\n};\nFilterDialog.contextTypes = {\n  d2: PropTypes.object\n};\nexport default FilterDialog;","export const SET_ACTIVE_MODAL_DIMENSION = 'SET_ACTIVE_MODAL_DIMENSION';\nexport const CLEAR_ACTIVE_MODAL_DIMENSION = 'CLEAR_ACTIVE_MODAL_DIMENSION';\nexport const DEFAULT_STATE_ACTIVE_MODAL_DIMENSION = {};\nexport default ((state = DEFAULT_STATE_ACTIVE_MODAL_DIMENSION, action) => {\n  switch (action.type) {\n    case SET_ACTIVE_MODAL_DIMENSION:\n      {\n        return action.value;\n      }\n\n    case CLEAR_ACTIVE_MODAL_DIMENSION:\n      {\n        return DEFAULT_STATE_ACTIVE_MODAL_DIMENSION;\n      }\n\n    default:\n      return state;\n  }\n});\nexport const sGetActiveModalDimension = state => state.activeModalDimension;","import { SET_ACTIVE_MODAL_DIMENSION, CLEAR_ACTIVE_MODAL_DIMENSION } from '../reducers/activeModalDimension';\nexport const acSetActiveModalDimension = value => ({\n  type: SET_ACTIVE_MODAL_DIMENSION,\n  value\n});\nexport const acClearActiveModalDimension = () => ({\n  type: CLEAR_ACTIVE_MODAL_DIMENSION\n});","import React, { useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport i18n from '@dhis2/d2-i18n';\nimport { DimensionsPanel } from '@dhis2/analytics';\nimport { Button, Popover } from '@dhis2/ui';\nimport FilterDialog from './FilterDialog';\nimport { sGetSettingsDisplayNameProperty } from '../../reducers/settings';\nimport { sGetActiveModalDimension } from '../../reducers/activeModalDimension';\nimport { sGetDimensions } from '../../reducers/dimensions';\nimport { sGetItemFiltersRoot, sGetFiltersKeys } from '../../reducers/itemFilters';\nimport { acAddItemFilter, acRemoveItemFilter } from '../../actions/itemFilters';\nimport { acClearActiveModalDimension, acSetActiveModalDimension } from '../../actions/activeModalDimension';\n\nconst FilterSelector = props => {\n  const [showPopover, setShowPopover] = useState(false);\n  const [filters, setFilters] = useState(props.initiallySelectedItems);\n  const ref = useRef(null);\n\n  const closePanel = () => setShowPopover(false);\n\n  const onCloseDialog = () => {\n    closePanel();\n    props.clearActiveModalDimension();\n  };\n\n  const selectDimension = id => {\n    props.setActiveModalDimension(props.dimensions.find(dimension => dimension.id === id));\n  };\n\n  const onSelectItems = ({\n    dimensionId,\n    items\n  }) => {\n    setFilters({ ...filters,\n      [dimensionId]: items\n    });\n  };\n\n  const onDeselectItems = ({\n    dimensionId,\n    itemIdsToRemove\n  }) => {\n    const oldList = filters[dimensionId] || [];\n    const newList = oldList.filter(item => !itemIdsToRemove.includes(item.id));\n    const list = newList.length ? newList : [];\n    setFilters({ ...filters,\n      [dimensionId]: list\n    });\n  };\n\n  const onReorderItems = ({\n    dimensionId,\n    itemIds\n  }) => {\n    const oldList = filters[dimensionId] || [];\n    const reorderedList = itemIds.map(id => oldList.find(item => item.id === id));\n    setFilters({ ...filters,\n      [dimensionId]: reorderedList\n    });\n  };\n\n  const saveFilter = id => {\n    const filterItems = filters[id];\n\n    if (filterItems && filterItems.length) {\n      props.addItemFilter({\n        id,\n        value: [...filterItems]\n      });\n    } else {\n      props.removeItemFilter(id);\n    }\n\n    onCloseDialog();\n  };\n\n  return <>\n            <span ref={ref}>\n                <Button onClick={() => setShowPopover(true)}>\n                    {i18n.t('Add filter')}\n                    <ArrowDropDownIcon />\n                </Button>\n            </span>\n            {showPopover && <Popover onClickOutside={closePanel} reference={ref} arrow={true} placement=\"bottom-start\">\n                    <DimensionsPanel style={{\n        width: '320px'\n      }} dimensions={props.dimensions} onDimensionClick={selectDimension} selectedIds={props.selectedDimensions} />\n                </Popover>}\n            {props.dimension ? <FilterDialog displayNameProperty={props.displayNameProperty} dimension={props.dimension} selectedItems={filters[props.dimension.id] || []} onSelect={onSelectItems} onDeselect={onDeselectItems} onReorder={onReorderItems} onClose={onCloseDialog} onConfirm={saveFilter} /> : null}\n        </>;\n};\n\nconst mapStateToProps = state => ({\n  displayNameProperty: sGetSettingsDisplayNameProperty(state),\n  dimension: sGetActiveModalDimension(state),\n  dimensions: sGetDimensions(state),\n  initiallySelectedItems: sGetItemFiltersRoot(state),\n  selectedDimensions: sGetFiltersKeys(state)\n});\n\nFilterSelector.propTypes = {\n  addItemFilter: PropTypes.func,\n  clearActiveModalDimension: PropTypes.func,\n  dimension: PropTypes.object,\n  dimensions: PropTypes.array,\n  displayNameProperty: PropTypes.string,\n  initiallySelectedItems: PropTypes.object,\n  removeItemFilter: PropTypes.func,\n  selectedDimensions: PropTypes.array,\n  setActiveModalDimension: PropTypes.func\n};\nexport default connect(mapStateToProps, {\n  clearActiveModalDimension: acClearActiveModalDimension,\n  setActiveModalDimension: acSetActiveModalDimension,\n  addItemFilter: acAddItemFilter,\n  removeItemFilter: acRemoveItemFilter\n})(FilterSelector);","import React, { useState, createRef } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport { Redirect } from 'react-router-dom';\nimport SharingDialog from '@dhis2/d2-ui-sharing-dialog';\nimport Star from '@material-ui/icons/Star';\nimport StarBorder from '@material-ui/icons/StarBorder';\nimport { Button, FlyoutMenu, Popover, MenuItem, colors } from '@dhis2/ui';\nimport { ThreeDots } from '../Item/VisualizationItem/assets/icons';\nimport { orObject } from '../../modules/util';\nimport { tStarDashboard } from '../../actions/dashboards';\nimport { acSetSelectedShowDescription } from '../../actions/selected';\nimport FilterSelector from '../ItemFilter/FilterSelector';\nimport { sGetSelectedId, sGetSelectedShowDescription } from '../../reducers/selected';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport classes from './styles/ViewTitleBar.module.css';\n\nconst ViewTitleBar = (props, context) => {\n  const [moreOptionsIsOpen, setMoreOptionsIsOpen] = useState(false);\n  const [sharingDialogIsOpen, setSharingDialogIsOpen] = useState(false);\n  const [redirectUrl, setRedirectUrl] = useState(null);\n  const {\n    id,\n    name,\n    description,\n    access,\n    style,\n    showDescription,\n    starred,\n    onToggleStarredDashboard,\n    onShowHideDescription\n  } = props;\n\n  const toggleSharingDialog = () => setSharingDialogIsOpen(!sharingDialogIsOpen);\n\n  const toggleMoreOptions = () => setMoreOptionsIsOpen(!moreOptionsIsOpen);\n\n  const printLayout = () => setRedirectUrl(`${id}/printlayout`);\n\n  const printOipp = () => setRedirectUrl(`${id}/printoipp`);\n\n  const titleStyle = Object.assign({}, style.title, {\n    cursor: 'default',\n    userSelect: 'text',\n    top: '7px'\n  });\n  const StarIcon = starred ? Star : StarBorder;\n\n  if (redirectUrl) {\n    return <Redirect to={redirectUrl} />;\n  }\n\n  const showHideDescriptionLabel = showDescription ? i18n.t('Hide description') : i18n.t('Show description');\n\n  const showHideDescription = () => {\n    onShowHideDescription();\n    toggleMoreOptions();\n  };\n\n  const toggleStarredDashboardLabel = starred ? i18n.t('Unstar dashboard') : i18n.t('Star dashboard');\n\n  const toggleStarredDashboard = () => {\n    onToggleStarredDashboard();\n    toggleMoreOptions();\n  };\n\n  const buttonRef = createRef();\n  return <>\n            <div className={classes.titleBar}>\n                <span style={titleStyle}>{name}</span>\n                <div className={classes.actions}>\n                    <div className={classes.titleBarIcon} onClick={onToggleStarredDashboard}>\n                        <StarIcon style={{\n            fill: colors.grey600\n          }} />\n                    </div>\n                    <div className={classes.strip}>\n                        {access.update ? <Link className={classes.editLink} to={`/${id}/edit`}>\n                                <Button>{i18n.t('Edit')}</Button>\n                            </Link> : null}\n                        {access.manage ? <Button onClick={toggleSharingDialog}>\n                                {i18n.t('Share')}\n                            </Button> : null}\n                        <FilterSelector />\n                        <span ref={buttonRef}>\n                            <Button onClick={toggleMoreOptions}>\n                                <ThreeDots />\n                                <span style={{\n                marginLeft: '5px'\n              }}>\n                                    {i18n.t('More')}\n                                </span>\n                            </Button>\n                        </span>\n                    </div>\n                    {moreOptionsIsOpen && <Popover reference={buttonRef} placement=\"bottom-start\" onClickOutside={toggleMoreOptions}>\n                            <FlyoutMenu>\n                                <MenuItem dense label={toggleStarredDashboardLabel} onClick={toggleStarredDashboard} />\n                                <MenuItem dense label={showHideDescriptionLabel} onClick={showHideDescription} />\n                                <MenuItem dense label={i18n.t('Print')}>\n                                    <FlyoutMenu>\n                                        <MenuItem dense label={i18n.t('Dashboard layout')} onClick={printLayout} />\n                                        <MenuItem dense label={i18n.t('One item per page')} onClick={printOipp} />\n                                    </FlyoutMenu>\n                                </MenuItem>\n                            </FlyoutMenu>\n                        </Popover>}\n                </div>\n            </div>\n            {showDescription ? <div className=\"dashboard-description\" style={Object.assign({\n      paddingTop: '5px',\n      paddingBottom: '5px'\n    }, style.description, !description ? {\n      color: '#888'\n    } : {})}>\n                    {description || i18n.t('No description')}\n                </div> : null}\n            {id ? <SharingDialog d2={context.d2} id={id} type=\"dashboard\" open={sharingDialogIsOpen} onRequestClose={toggleSharingDialog} /> : null}\n        </>;\n};\n\nViewTitleBar.propTypes = {\n  access: PropTypes.object,\n  description: PropTypes.string,\n  id: PropTypes.string,\n  name: PropTypes.string,\n  showDescription: PropTypes.bool,\n  starred: PropTypes.bool,\n  style: PropTypes.object,\n  onShowHideDescription: PropTypes.func,\n  onToggleStarredDashboard: PropTypes.func\n};\nViewTitleBar.defaultProps = {\n  name: '',\n  description: '',\n  starred: false,\n  showDescription: false\n};\nViewTitleBar.contextTypes = {\n  d2: PropTypes.object\n};\n\nconst mapStateToProps = state => {\n  const id = sGetSelectedId(state);\n  const dashboard = orObject(sGetDashboardById(state, id));\n  return {\n    id,\n    name: dashboard.displayName,\n    description: dashboard.displayDescription,\n    dashboardItems: sGetDashboardItems(state),\n    showDescription: sGetSelectedShowDescription(state),\n    starred: dashboard.starred,\n    access: orObject(dashboard.access)\n  };\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n  const {\n    id,\n    starred,\n    showDescription\n  } = stateProps;\n  const {\n    dispatch\n  } = dispatchProps;\n  return { ...stateProps,\n    ...ownProps,\n    onToggleStarredDashboard: () => dispatch(tStarDashboard(id, !starred)),\n    onShowHideDescription: () => dispatch(acSetSelectedShowDescription(!showDescription))\n  };\n};\n\nexport default connect(mapStateToProps, null, mergeProps)(ViewTitleBar);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { colors } from '@dhis2/ui';\nimport EditTitleBar from './EditTitleBar';\nimport ViewTitleBar from './ViewTitleBar';\nimport './TitleBar.css';\nconst style = {\n  title: {\n    position: 'relative',\n    fontSize: 21,\n    fontWeight: 500,\n    color: colors.black,\n    minWidth: 50\n  },\n  description: {\n    fontSize: 14,\n    color: colors.grey800\n  }\n};\n\nconst TitleBar = ({\n  edit\n}) => {\n  return <div className=\"titlebar-wrapper\" style={{\n    padding: '20px 15px 5px 10px'\n  }}>\n            {edit ? <EditTitleBar style={style} /> : <ViewTitleBar style={style} />}\n        </div>;\n};\n\nTitleBar.propTypes = {\n  edit: PropTypes.bool\n};\nexport default TitleBar;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport * as pluginManager from './plugin';\nimport { getBaseUrl, orObject } from '../../../modules/util';\nimport { getGridItemDomId } from '../../ItemGrid/gridUtil';\n\nconst pluginCredentials = d2 => {\n  return {\n    baseUrl: getBaseUrl(d2),\n    auth: d2.Api.getApi().defaultHeaders.Authorization\n  };\n};\n\nclass DefaultPlugin extends Component {\n  pluginCredentials = null;\n\n  constructor(props, context) {\n    super(props);\n    this.d2 = context.d2;\n  }\n\n  shouldPluginReload = prevProps => {\n    // TODO - fix this hack, to handle bug with multiple\n    // rerendering while switching between dashboards.\n    //\n    // To determine if the rendering is happening because of a\n    // dashboard switch, check if the item reference has changed.\n    const reloadAllowed = this.props.item === prevProps.item;\n    const filtersChanged = prevProps.itemFilters !== this.props.itemFilters;\n    const vis = orObject(this.props.visualization);\n    const prevVis = orObject(prevProps.visualization);\n    const visChanged = vis.id !== prevVis.id || vis.activeType !== prevVis.activeType;\n    return reloadAllowed && (visChanged || filtersChanged);\n  };\n  reloadPlugin = prevProps => {\n    if (pluginManager.pluginIsAvailable(this.props.item, this.props.visualization) && this.shouldPluginReload(prevProps)) {\n      const prevVis = orObject(prevProps.visualization);\n      const currentVis = this.props.visualization;\n      const useActiveType = currentVis.activeType !== prevVis.activeType || currentVis.activeType !== this.props.item.type;\n\n      if (useActiveType || this.props.itemFilters !== prevProps.itemFilters) {\n        pluginManager.unmount(this.props.item, prevVis.activeType || this.props.item.type);\n        pluginManager.load(this.props.item, this.props.visualization, {\n          credentials: this.pluginCredentials,\n          activeType: useActiveType ? currentVis.activeType : null\n        });\n      }\n    }\n  };\n\n  componentDidMount() {\n    this.pluginCredentials = pluginCredentials(this.d2);\n\n    if (pluginManager.pluginIsAvailable(this.props.item, this.props.visualization)) {\n      pluginManager.load(this.props.item, this.props.visualization, {\n        credentials: this.pluginCredentials,\n        activeType: this.props.useActiveType ? this.getActiveType() : null,\n        options: this.props.options\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    this.reloadPlugin(prevProps);\n  }\n\n  getActiveType = () => this.props.visualization.activeType || this.props.item.type;\n\n  render() {\n    const {\n      classes,\n      item,\n      visualization,\n      style\n    } = this.props;\n    const pluginIsAvailable = pluginManager.pluginIsAvailable(item, visualization);\n    return pluginIsAvailable ? <div id={getGridItemDomId(item.id)} style={style} /> : <div className={classes.textDiv}>\n                {i18n.t('Unable to load the plugin for this item')}\n            </div>;\n  }\n\n}\n\nDefaultPlugin.contextTypes = {\n  d2: PropTypes.object\n};\nDefaultPlugin.propTypes = {\n  classes: PropTypes.object,\n  useActiveType: PropTypes.bool,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object,\n  options: PropTypes.object,\n  style: PropTypes.object,\n  visualization: PropTypes.object\n};\nDefaultPlugin.defaultProps = {\n  style: {},\n  item: {},\n  itemFilters: {},\n  options: {},\n  visualization: {}\n};\nexport default DefaultPlugin;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Warning } from './assets/icons';\nimport classes from './styles/FatalErrorBoundary.module.css';\n\nclass FatalErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      errorFound: false\n    };\n  }\n\n  componentDidCatch(error, info) {\n    this.setState({\n      errorFound: true\n    });\n    console.log('error: ', error);\n    console.log('info: ', info);\n  }\n\n  render() {\n    if (this.state.errorFound) {\n      return <p className={classes.container}>\n                    <span className={classes.icon}>\n                        <Warning />\n                    </span>\n                    <span className={classes.message}>\n                        {i18n.t('There was a problem loading this dashboard item')}\n                    </span>\n                </p>;\n    }\n\n    return this.props.children;\n  }\n\n}\n\nFatalErrorBoundary.propTypes = {\n  children: PropTypes.node\n};\nexport default FatalErrorBoundary;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classes from './styles/ItemHeader.module.css';\n\nconst ViewItemActions = ({\n  actionButtons\n}) => {\n  return actionButtons ? <div className={classes.itemActionsWrap}>{actionButtons}</div> : null;\n};\n\nViewItemActions.propTypes = {\n  actionButtons: PropTypes.node\n};\nexport default ViewItemActions;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { colors } from '@dhis2/ui';\nimport classes from './styles/DeleteItemButton.module.css';\n\nconst DeleteItemButton = ({\n  onClick\n}) => <button type=\"button\" className={classes.deleteItemButton} onClick={onClick} title={i18n.t(`Delete item`)}>\n        <DeleteIcon style={{\n    fill: colors.red500\n  }} />\n    </button>;\n\nDeleteItemButton.propTypes = {\n  onClick: PropTypes.func\n};\nexport default DeleteItemButton;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport DeleteItemButton from './DeleteItemButton';\nimport { acRemoveDashboardItem } from '../../../actions/editDashboard';\nimport classes from './styles/ItemHeader.module.css';\n\nconst EditItemActions = ({\n  itemId,\n  acRemoveDashboardItem\n}) => {\n  const handleDeleteItem = () => acRemoveDashboardItem(itemId);\n\n  return <div className={classes.itemActionsWrap}>\n            <DeleteItemButton onClick={handleDeleteItem} />\n        </div>;\n};\n\nEditItemActions.propTypes = {\n  acRemoveDashboardItem: PropTypes.func,\n  itemId: PropTypes.string\n};\nconst mapDispatchToProps = {\n  acRemoveDashboardItem\n};\nexport default connect(null, mapDispatchToProps)(EditItemActions);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ViewItemActions from './ViewItemActions';\nimport EditItemActions from './EditItemActions';\nimport { VIEW, EDIT } from '../../Dashboard/dashboardModes';\nimport classes from './styles/ItemHeader.module.css';\nconst itemActionsMap = {\n  [VIEW]: ViewItemActions,\n  [EDIT]: EditItemActions\n}; // This is the margin-top + margin-bottom defined in the css file\n\nexport const HEADER_MARGIN_HEIGHT = 12;\nconst ItemHeader = React.forwardRef(({\n  dashboardMode,\n  title,\n  ...rest\n}, ref) => {\n  const Actions = itemActionsMap[dashboardMode];\n  return <div className={classes.itemHeaderWrap} ref={ref}>\n                <p className={classes.itemTitle}>{title}</p>\n                {Actions ? <Actions {...rest} /> : null}\n            </div>;\n});\nItemHeader.displayName = 'ItemHeader';\nItemHeader.propTypes = {\n  dashboardMode: PropTypes.string,\n  title: PropTypes.string\n};\nexport default connect(null, null, null, {\n  forwardRef: true\n})(ItemHeader);","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { isSingleValue, isYearOverYear, VIS_TYPE_GAUGE, VIS_TYPE_PIE } from '@dhis2/analytics';\nimport { Button, Menu, MenuItem, Divider, colors } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport Popover from '@material-ui/core/Popover';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport { ThreeDots, SpeechBubble } from './assets/icons';\nimport { pluginIsAvailable, getLink } from './plugin';\nimport { CHART, MAP, REPORT_TABLE, EVENT_CHART, EVENT_REPORT, isTrackerDomainType, hasMapView, getAppName } from '../../../modules/itemTypes';\nconst iconFill = {\n  fill: colors.grey600\n};\n\nconst ItemHeaderButtons = props => {\n  const [anchorEl, setAnchorEl] = useState(null);\n  const {\n    item,\n    visualization,\n    onSelectActiveType,\n    d2,\n    activeType\n  } = props;\n  const isTrackerType = isTrackerDomainType(item.type);\n\n  const onViewTable = () => {\n    handleClose();\n    onSelectActiveType(isTrackerType ? EVENT_REPORT : REPORT_TABLE);\n  };\n\n  const onViewChart = () => {\n    handleClose();\n    onSelectActiveType(isTrackerType ? EVENT_CHART : CHART);\n  };\n\n  const onViewMap = () => {\n    handleClose();\n    onSelectActiveType(MAP);\n  };\n\n  const itemHasMapView = () => hasMapView(item.type);\n\n  const handleMenuClick = (_, event) => setAnchorEl(event.currentTarget);\n\n  const handleInterpretationClick = () => {\n    props.onToggleFooter();\n\n    if (anchorEl !== null) {\n      handleClose();\n    }\n  };\n\n  const handleClose = () => setAnchorEl(null);\n\n  const type = visualization.type || item.type;\n  const canViewAs = !isSingleValue(type) && !isYearOverYear(type) && type !== VIS_TYPE_GAUGE && type !== VIS_TYPE_PIE;\n  const interpretationMenuLabel = props.activeFooter ? i18n.t(`Hide interpretations and details`) : i18n.t(`Show interpretations and details`);\n\n  const ViewAsMenuItems = () => <>\n            {activeType !== CHART && activeType !== EVENT_CHART && <MenuItem dense label={i18n.t('View as Chart')} onClick={onViewChart} icon={<ChartIcon style={iconFill} />} />}\n            {activeType !== REPORT_TABLE && activeType !== EVENT_REPORT && <MenuItem dense label={i18n.t('View as Table')} onClick={onViewTable} icon={<TableIcon style={iconFill} />} />}\n            {itemHasMapView() && activeType !== MAP && <MenuItem dense label={i18n.t('View as Map')} onClick={onViewMap} icon={<MapIcon style={iconFill} />} />}\n        </>;\n\n  return pluginIsAvailable(item, visualization) ? <>\n            <Button small secondary onClick={handleMenuClick}>\n                <ThreeDots />\n            </Button>\n            {anchorEl && <Popover open={Boolean(anchorEl)} onClose={handleClose} anchorEl={anchorEl}>\n                    <Menu>\n                        {canViewAs && <>\n                                <ViewAsMenuItems />\n                                <Divider />\n                            </>}\n                        <MenuItem dense icon={<LaunchIcon style={{\n          fill: '#6e7a8a'\n        }} />} label={i18n.t('Open in {{appName}} app', {\n          appName: getAppName(item.type)\n        })} href={getLink(item, d2)} target=\"_blank\" />\n                        <MenuItem dense icon={<SpeechBubble />} label={interpretationMenuLabel} onClick={handleInterpretationClick} />\n                    </Menu>\n                </Popover>}\n        </> : null;\n};\n\nItemHeaderButtons.propTypes = {\n  activeFooter: PropTypes.bool,\n  activeType: PropTypes.string,\n  d2: PropTypes.object,\n  item: PropTypes.object,\n  visualization: PropTypes.object,\n  onSelectActiveType: PropTypes.func,\n  onToggleFooter: PropTypes.func\n};\nexport default ItemHeaderButtons;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { colors } from '@dhis2/ui';\nimport { getId } from './plugin';\nimport InterpretationsComponent from '@dhis2/d2-ui-interpretations';\nconst style = {\n  scrollContainer: {\n    overflowY: 'auto',\n    height: '340px'\n  },\n  line: {\n    margin: '-1px 0px 0px',\n    height: '1px',\n    border: 'none',\n    backgroundColor: colors.grey100\n  }\n};\n\nclass ItemFooter extends Component {\n  render() {\n    const objectId = getId(this.props.item);\n    return <div className=\"dashboard-item-footer\">\n                <hr style={style.line} />\n                <div style={style.scrollContainer}>\n                    <InterpretationsComponent d2={this.context.d2} item={this.props.item} type={this.props.item.type.toLowerCase()} id={objectId} appName=\"dashboard\" />\n                </div>\n            </div>;\n  }\n\n}\n\nItemFooter.contextTypes = {\n  d2: PropTypes.object.isRequired\n};\nItemFooter.propTypes = {\n  item: PropTypes.object.isRequired\n};\nexport default ItemFooter;","import React from 'react';\nimport { CircularLoader } from '@dhis2/ui';\nimport classes from './styles/LoadingMask.module.css';\n\nconst LoadingMask = () => {\n  return <div className={classes.center}>\n            <CircularLoader />\n        </div>;\n};\n\nexport default LoadingMask;","// Note that this ignores discrepancies in 'this', so shouldn't be used with bound functions\n// This is useful instead of lodash/memoize when we only need to memoize a single value\n// Inspiration: https://github.com/alexreardon/memoize-one\nconst memoizeOne = fn => {\n  let lastArgs = undefined;\n  let lastValue = undefined;\n  return (...args) => {\n    if (lastArgs && args.length === lastArgs.length && args.every((arg, i) => arg === lastArgs[i])) {\n      return lastValue;\n    }\n\n    lastArgs = args;\n    lastValue = fn(...args);\n    return lastValue;\n  };\n};\n\nexport default memoizeOne;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport uniqueId from 'lodash/uniqueId';\nimport VisualizationPlugin from '@dhis2/data-visualizer-plugin';\nimport i18n from '@dhis2/d2-i18n';\nimport DefaultPlugin from './DefaultPlugin';\nimport FatalErrorBoundary from './FatalErrorBoundary';\nimport ItemHeader, { HEADER_MARGIN_HEIGHT } from '../ItemHeader/ItemHeader';\nimport ItemHeaderButtons from './ItemHeaderButtons';\nimport ItemFooter from './ItemFooter';\nimport LoadingMask from './LoadingMask';\nimport * as pluginManager from './plugin';\nimport { sGetVisualization } from '../../../reducers/visualizations';\nimport { sGetItemFiltersRoot, DEFAULT_STATE_ITEM_FILTERS } from '../../../reducers/itemFilters';\nimport { acAddVisualization, acSetActiveVisualizationType } from '../../../actions/visualizations';\nimport { VISUALIZATION, MAP, CHART, REPORT_TABLE } from '../../../modules/itemTypes';\nimport memoizeOne from '../../../modules/memoizeOne';\nimport { isEditMode, isPrintMode, isViewMode } from '../../Dashboard/dashboardModes';\nimport { ITEM_CONTENT_PADDING_BOTTOM } from '../../ItemGrid/ItemGrid';\nimport classes from './styles/Item.module.css';\nexport class Item extends Component {\n  state = {\n    showFooter: false,\n    configLoaded: false,\n    pluginIsLoaded: false\n  };\n\n  constructor(props, context) {\n    super(props);\n    this.d2 = context.d2;\n    this.contentRef = React.createRef();\n    this.headerRef = React.createRef();\n    this.memoizedApplyFilters = memoizeOne(this.applyFilters);\n    this.memoizedGetVisualizationConfig = memoizeOne(pluginManager.getVisualizationConfig);\n    this.memoizedGetContentStyle = memoizeOne(this.getContentStyle);\n  }\n\n  async componentDidMount() {\n    this.props.onVisualizationLoaded( // TODO do not call fetch on the pluginManager, do it here as the manager will eventually be removed...\n    await pluginManager.fetch(this.props.item));\n    this.setState({\n      configLoaded: true\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.pluginIsLoaded && (prevProps.visualization !== this.props.visualization || prevProps.itemFilters !== this.props.itemFilters)) {\n      this.setState({\n        pluginIsLoaded: false\n      });\n    }\n  }\n\n  applyFilters = (visualization, filters) => {\n    if (!Object.keys(filters).length) {\n      return visualization;\n    } // deep clone objects in filters to avoid changing the visualization in the Redux store\n\n\n    const visRows = visualization.rows.map(obj => ({ ...obj\n    }));\n    const visColumns = visualization.columns.map(obj => ({ ...obj\n    }));\n    const visFilters = visualization.filters.map(obj => ({ ...obj\n    }));\n    Object.keys(filters).forEach(dimensionId => {\n      if (filters[dimensionId]) {\n        let dimensionFound = false;\n        [visRows, visColumns, visFilters].forEach(dimensionObjects => dimensionObjects.filter(obj => obj.dimension === dimensionId).forEach(obj => {\n          dimensionFound = true;\n          obj.items = filters[dimensionId];\n        })); // add dimension to filters if not already present elsewhere\n\n        if (!dimensionFound) {\n          visFilters.push({\n            dimension: dimensionId,\n            items: filters[dimensionId]\n          });\n        }\n      }\n    });\n    return { ...visualization,\n      rows: visRows,\n      columns: visColumns,\n      filters: visFilters\n    };\n  };\n  getUniqueKey = memoizeOne(() => uniqueId());\n  pluginCredentials = null;\n  getPluginComponent = () => {\n    const activeType = this.getActiveType();\n    const visualization = this.memoizedGetVisualizationConfig(this.props.visualization, this.props.item.type, activeType);\n\n    if (!visualization) {\n      return <div className={classes.textDiv}>\n                    {i18n.t('No data to display')}\n                </div>;\n    }\n\n    const calculatedHeight = this.props.item.originalHeight - this.headerRef.current.clientHeight - HEADER_MARGIN_HEIGHT - ITEM_CONTENT_PADDING_BOTTOM;\n    const props = { ...this.props,\n      useActiveType: !isEditMode(this.props.dashboardMode),\n      visualization,\n      classes,\n      style: this.memoizedGetContentStyle(calculatedHeight, this.contentRef ? this.contentRef.offsetHeight : null, isEditMode(this.props.dashboardMode) || isPrintMode(this.props.dashboardMode))\n    };\n\n    switch (activeType) {\n      case VISUALIZATION:\n      case CHART:\n      case REPORT_TABLE:\n        {\n          return <>\n                        {!this.state.pluginIsLoaded && <div style={props.style}>\n                                <LoadingMask />\n                            </div>}\n                        <VisualizationPlugin d2={this.d2} visualization={this.memoizedApplyFilters(visualization, props.itemFilters)} onLoadingComplete={this.onLoadingComplete} forDashboard={true} style={props.style} />\n                    </>;\n        }\n\n      case MAP:\n        {\n          if (props.item.type === MAP) {\n            // apply filters only to thematic and event layers\n            // for maps AO\n            const mapViews = props.visualization.mapViews.map(obj => {\n              if (obj.layer.includes('thematic') || obj.layer.includes('event')) {\n                return this.memoizedApplyFilters(obj, props.itemFilters);\n              }\n\n              return obj;\n            });\n            props.visualization = { ...props.visualization,\n              mapViews\n            };\n          } else {\n            // this is the case of a non map AO passed to the maps plugin\n            // due to a visualization type switch in dashboard item\n            // maps plugin takes care of converting the AO to a suitable format\n            props.visualization = this.memoizedApplyFilters(props.visualization, props.itemFilters);\n          }\n\n          props.options = { ...props.options,\n            hideTitle: true\n          };\n          return <DefaultPlugin {...props} />;\n        }\n\n      default:\n        {\n          props.visualization = this.memoizedApplyFilters(props.visualization, props.itemFilters);\n          return <DefaultPlugin {...props} />;\n        }\n    }\n  };\n  onLoadingComplete = () => {\n    this.setState({\n      pluginIsLoaded: true\n    });\n  };\n  onToggleFooter = () => {\n    this.setState({\n      showFooter: !this.state.showFooter\n    }, this.props.onToggleItemExpanded(this.props.item.id));\n  };\n  onSelectActiveType = type => {\n    if (type === this.getActiveType()) {\n      return;\n    }\n\n    pluginManager.unmount(this.props.item, this.getActiveType());\n    this.props.onSelectActiveType(this.props.visualization.id, type);\n  };\n  getActiveType = () => this.props.visualization.activeType || this.props.item.type;\n  pluginIsAvailable = () => pluginManager.pluginIsAvailable(this.props.item, this.props.visualization);\n  getContentStyle = (calculatedHeight, measuredHeight, preferMeasured) => {\n    const height = preferMeasured ? measuredHeight || calculatedHeight : calculatedHeight;\n    return {\n      height\n    };\n  };\n\n  render() {\n    const {\n      item,\n      dashboardMode,\n      itemFilters\n    } = this.props;\n    const {\n      showFooter\n    } = this.state;\n    const actionButtons = <ItemHeaderButtons item={item} visualization={this.props.visualization} onSelectActiveType={this.onSelectActiveType} onToggleFooter={this.onToggleFooter} d2={this.d2} activeType={this.getActiveType()} activeFooter={this.state.showFooter} />;\n    return <>\n                <ItemHeader title={pluginManager.getName(item)} itemId={item.id} actionButtons={actionButtons} ref={this.headerRef} dashboardMode={dashboardMode} />\n                <FatalErrorBoundary>\n                    <div key={this.getUniqueKey(itemFilters)} className=\"dashboard-item-content\" ref={ref => this.contentRef = ref}>\n                        {this.state.configLoaded && this.getPluginComponent()}\n                    </div>\n                </FatalErrorBoundary>\n                {isViewMode(dashboardMode) && showFooter ? <ItemFooter item={item} /> : null}\n            </>;\n  }\n\n}\nItem.contextTypes = {\n  d2: PropTypes.object\n};\nItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object,\n  visualization: PropTypes.object,\n  onSelectActiveType: PropTypes.func,\n  onToggleItemExpanded: PropTypes.func,\n  onVisualizationLoaded: PropTypes.func\n};\nItem.defaultProps = {\n  item: {},\n  onToggleItemExpanded: Function.prototype,\n  visualization: {}\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const itemFilters = !isEditMode(ownProps.dashboardMode) ? sGetItemFiltersRoot(state) : DEFAULT_STATE_ITEM_FILTERS;\n  return {\n    itemFilters,\n    visualization: sGetVisualization(state, pluginManager.extractFavorite(ownProps.item).id)\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  onVisualizationLoaded: visualization => dispatch(acAddVisualization(visualization)),\n  onSelectActiveType: (id, type, activeType) => dispatch(acSetActiveVisualizationType(id, type, activeType))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Item);","import React from 'react';\nimport { colors } from '@dhis2/ui';\nconst style = {\n  backgroundColor: colors.grey200,\n  border: 'none',\n  height: '1px',\n  margin: '0px 0px 5px 0px'\n};\n\nconst Line = () => <hr style={style} />;\n\nexport default Line;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { colors } from '@dhis2/ui';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport Line from '../../../widgets/Line';\nimport { sGetMessagesRoot } from '../../../reducers/messages';\nimport { formatDate } from '../../../modules/util';\nimport { isViewMode } from '../../Dashboard/dashboardModes';\nimport './MessagesItem.css';\nconst PRIVATE = 'PRIVATE';\nconst messageTypes = {\n  [PRIVATE]: 'Private',\n  VALIDATION_RESULT: 'Validation',\n  TICKET: 'Ticket',\n  SYSTEM: 'System'\n};\nconst style = {\n  list: {\n    listStyleType: 'none',\n    paddingLeft: '0px'\n  },\n  seeAll: {\n    textAlign: 'center',\n    fontSize: '13px',\n    marginBottom: '5px'\n  },\n  sender: {\n    fontSize: '13px',\n    lineHeight: '15px',\n    margin: 0,\n    color: colors.grey800\n  },\n  snippet: {\n    color: colors.grey800,\n    fontSize: '13px',\n    lineHeight: '15px',\n    maxHeight: '30px',\n    overflow: 'hidden'\n  }\n};\n\nclass MessagesItem extends Component {\n  state = {\n    uiLocale: ''\n  };\n\n  async componentDidMount() {\n    const uiLocale = await this.context.d2.currentUser.userSettings.get('keyUiLocale');\n    this.setState({\n      uiLocale\n    });\n  }\n\n  getMessageHref = msg => {\n    const msgIdentifier = msg ? `#/${msg.messageType}/${msg.id}` : '';\n    return `${this.context.baseUrl}/dhis-web-messaging/${msgIdentifier}`;\n  };\n  getMessageSender = msg => {\n    const latestMsg = msg.messages.slice(-1)[0];\n    return latestMsg.sender ? latestMsg.sender.displayName : '';\n  };\n  getMessageItems = () => {\n    const modeClass = isViewMode(this.props.dashboardMode) ? 'view' : null;\n    return this.props.messages.map(msg => {\n      const redirectToMsg = () => {\n        if (isViewMode(this.props.dashboardMode)) {\n          document.location.href = this.getMessageHref(msg);\n        }\n      };\n\n      const sender = msg.messageType === PRIVATE ? this.getMessageSender(msg) : messageTypes[msg.messageType];\n      const readClass = !msg.read ? 'unread' : null;\n      const latestMsg = msg.messages.slice(-1)[0];\n      const msgDate = latestMsg.lastUpdated;\n      return <li className={`message-item ${modeClass}`} key={msg.id} onClick={redirectToMsg}>\n                    <p className={`message-title ${readClass}`}>\n                        {msg.displayName} ({msg.messageCount})\n                    </p>\n                    <p style={style.sender}>\n                        {sender} - {formatDate(msgDate, this.state.uiLocale)}\n                    </p>\n                    <p style={style.snippet}>{latestMsg.text}</p>\n                </li>;\n    });\n  };\n\n  render() {\n    return <>\n                <ItemHeader title={i18n.t('Messages')} itemId={this.props.item.id} dashboardMode={this.props.dashboardMode} />\n                <Line />\n                {this.props.messages.length > 0 && <div className=\"dashboard-item-content\">\n                        <ul style={style.list}>{this.getMessageItems()}</ul>\n                        <div style={style.seeAll}>\n                            <a href={this.getMessageHref()}>\n                                {i18n.t('See all messages')}\n                            </a>\n                        </div>\n                    </div>}\n            </>;\n  }\n\n}\n\nMessagesItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  messages: PropTypes.array\n};\nMessagesItem.contextTypes = {\n  d2: PropTypes.object,\n  baseUrl: PropTypes.string\n};\n\nconst mapStateToProps = state => {\n  return {\n    messages: Object.values(sGetMessagesRoot(state))\n  };\n};\n\nconst MessagesContainer = connect(mapStateToProps, null)(MessagesItem);\nexport default MessagesContainer;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nconst NotSupportedItem = props => <>\n        <ItemHeader title={i18n.t('Item type \"{{type}}\" not supported', {\n    type: props.item.type\n  })} itemId={props.item.id} dashboardMode={props.dashboardMode} />\n        <div style={{\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '90%'\n  }}>\n            <NotInterestedIcon style={{\n      width: 100,\n      height: 100,\n      align: 'center'\n    }} color=\"disabled\" />\n        </div>\n    </>;\n\nNotSupportedItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object\n};\nexport default NotSupportedItem;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst DescriptionIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill={colors.grey500}>\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M14 2H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6zm2 16H8v-2h8v2zm0-4H8v-2h8v2zm-3-5V3.5L18.5 9H13z\" />\n    </svg>;\n\nDescriptionIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default DescriptionIcon;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst DeleteIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill={colors.red500}>\n        <path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>;\n\nDeleteIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default DeleteIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { colors } from '@dhis2/ui';\nimport DescriptionIcon from '../../../icons/Description';\nimport DeleteIcon from '../../../icons/Delete';\nimport Line from '../../../widgets/Line';\nimport { itemTypeMap, getItemUrl } from '../../../modules/itemTypes';\nimport { orArray } from '../../../modules/util';\nimport { tRemoveListItemContent } from './actions';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport { isEditMode } from '../../Dashboard/dashboardModes';\nimport classes from './Item.module.css';\n\nconst getItemTitle = item => itemTypeMap[item.type].pluralTitle;\n\nconst getContentItems = item => orArray(item[itemTypeMap[item.type].propName]).filter((item, index, array) => array.findIndex(el => el.id === item.id) === index);\n\nconst ListItem = (props, context) => {\n  const {\n    item,\n    dashboardMode,\n    tRemoveListItemContent\n  } = props;\n  const contentItems = getContentItems(item);\n\n  const getLink = contentItem => {\n    const deleteButton = <button className={classes.deletebutton} onClick={() => tRemoveListItemContent(item, contentItem)}>\n                <DeleteIcon className={classes.deleteicon} />\n            </button>;\n    return <>\n                <a className={classes.link} style={{\n        color: colors.grey900\n      }} href={getItemUrl(item.type, contentItem, context.d2)}>\n                    {contentItem.name}\n                </a>\n                {isEditMode(dashboardMode) ? deleteButton : null}\n            </>;\n  };\n\n  return <>\n            <ItemHeader title={getItemTitle(item)} itemId={item.id} dashboardMode={dashboardMode} />\n            <Line />\n            <div className=\"dashboard-item-content\">\n                <ul className={classes.list}>\n                    {contentItems.map(contentItem => <li className={classes.item} key={contentItem.id}>\n                            <DescriptionIcon className={classes.itemicon} />\n                            {getLink(contentItem)}\n                        </li>)}\n                </ul>\n            </div>\n        </>;\n};\n\nListItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  tRemoveListItemContent: PropTypes.func\n};\nListItem.contextTypes = {\n  d2: PropTypes.object\n};\nexport default connect(null, {\n  tRemoveListItemContent\n})(ListItem);","import { acUpdateDashboardItem, acRemoveDashboardItem } from '../../../actions/editDashboard';\nimport { itemTypeMap } from '../../../modules/itemTypes';\nexport const tRemoveListItemContent = (dashboardItem, content) => dispatch => {\n  const listItemType = itemTypeMap[dashboardItem.type].propName;\n  const newContent = dashboardItem[listItemType].filter(item => item.id !== content.id);\n\n  if (newContent.length) {\n    dashboardItem[listItemType] = newContent;\n    dispatch(acUpdateDashboardItem(dashboardItem));\n  } else {\n    dispatch(acRemoveDashboardItem(dashboardItem));\n  }\n};","/** @module reducers/editDashboard */\nimport update from 'immutability-helper';\nimport isEmpty from 'lodash/isEmpty';\nimport { orArray, orObject } from '../modules/util';\nexport const SET_PRINT_DASHBOARD = 'SET_PRINT_DASHBOARD';\nexport const CLEAR_PRINT_DASHBOARD = 'CLEAR_PRINT_DASHBOARD';\nexport const ADD_PRINT_DASHBOARD_ITEM = 'ADD_PRINT_DASHBOARD_ITEM';\nexport const SET_PRINT_DASHBOARD_LAYOUT = 'SET_PRINT_DASHBOARD_LAYOUT';\nexport const REMOVE_PRINT_DASHBOARD_ITEM = 'REMOVE_PRINT_DASHBOARD_ITEM';\nexport const UPDATE_PRINT_DASHBOARD_ITEM = 'UPDATE_PRINT_DASHBOARD_ITEM';\nexport const DEFAULT_STATE_PRINT_DASHBOARD = {};\nexport const NEW_PRINT_DASHBOARD_STATE = {\n  id: '',\n  name: '',\n  access: {},\n  description: '',\n  dashboardItems: []\n};\nexport default ((state = DEFAULT_STATE_PRINT_DASHBOARD, action) => {\n  switch (action.type) {\n    case SET_PRINT_DASHBOARD:\n      {\n        const newState = {};\n        Object.keys(NEW_PRINT_DASHBOARD_STATE).map(k => newState[k] = action.value[k]);\n        return newState;\n      }\n\n    case CLEAR_PRINT_DASHBOARD:\n      return DEFAULT_STATE_PRINT_DASHBOARD;\n\n    case ADD_PRINT_DASHBOARD_ITEM:\n      if (!action.value.position) {\n        return update(state, {\n          dashboardItems: {\n            $unshift: [action.value]\n          }\n        });\n      }\n\n      return update(state, {\n        dashboardItems: {\n          $splice: [[parseInt(action.value.position), 0, action.value]]\n        }\n      });\n\n    case REMOVE_PRINT_DASHBOARD_ITEM:\n      {\n        const idToRemove = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === idToRemove);\n\n        if (dashboardItemIndex > -1) {\n          return update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1]]\n            }\n          });\n        }\n\n        return state;\n      }\n\n    case UPDATE_PRINT_DASHBOARD_ITEM:\n      {\n        const dashboardItem = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === dashboardItem.id);\n\n        if (dashboardItemIndex > -1) {\n          const newState = update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1, Object.assign({}, dashboardItem)]]\n            }\n          });\n          return newState;\n        }\n\n        return state;\n      }\n\n    case SET_PRINT_DASHBOARD_LAYOUT:\n      {\n        const stateItems = orArray(state.dashboardItems);\n        let layoutHasChanged = false;\n        const newStateItems = action.value.map(({\n          x,\n          y,\n          w,\n          h,\n          i\n        }) => {\n          const stateItem = stateItems.find(si => si.id === i);\n\n          if (!(stateItem.x === x && stateItem.y === y && stateItem.w === w && stateItem.h === h)) {\n            layoutHasChanged = true;\n            return Object.assign({}, stateItem, {\n              w,\n              h,\n              x,\n              y\n            });\n          }\n\n          return stateItem;\n        });\n        return layoutHasChanged ? { ...state,\n          dashboardItems: newStateItems\n        } : state;\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetPrintDashboardRoot = state => state.printDashboard; // selectors\n\nexport const sGetIsPrinting = state => !isEmpty(state.printDashboard);\nexport const sGetPrintDashboardItems = state => orObject(sGetPrintDashboardRoot(state)).dashboardItems;","import React from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport Input from '@material-ui/core/Input';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport Line from '../../../widgets/Line';\nimport { Parser as RichTextParser, Editor as RichTextEditor } from '@dhis2/d2-ui-rich-text';\nimport { acUpdateDashboardItem } from '../../../actions/editDashboard';\nimport { sGetEditDashboardItems } from '../../../reducers/editDashboard';\nimport { sGetDashboardItems } from '../../../reducers/dashboards';\nimport { sGetIsPrinting, sGetPrintDashboardItems } from '../../../reducers/printDashboard';\nimport { isEditMode } from '../../Dashboard/dashboardModes';\nconst style = {\n  textDiv: {\n    padding: '10px',\n    whiteSpace: 'pre-line',\n    lineHeight: '20px'\n  },\n  textField: {\n    fontSize: '14px',\n    fontStretch: 'normal',\n    width: '90%',\n    margin: '0 auto',\n    display: 'block',\n    lineHeight: '24px'\n  },\n  container: {\n    marginBottom: '20px',\n    marginTop: '20px'\n  }\n};\n\nconst TextItem = props => {\n  const {\n    item,\n    dashboardMode,\n    text,\n    acUpdateDashboardItem\n  } = props;\n\n  const onChangeText = event => {\n    const updatedItem = { ...item,\n      text: event.target.value\n    };\n    acUpdateDashboardItem(updatedItem);\n  };\n\n  const viewItem = () => {\n    const textDivStyle = Object.assign({}, style.textField, style.textDiv);\n    return <div className=\"dashboard-item-content\" style={style.container}>\n                <RichTextParser style={textDivStyle}>{text}</RichTextParser>\n            </div>;\n  };\n\n  const editItem = () => {\n    return <>\n                <ItemHeader title={i18n.t('Text item')} itemId={item.id} dashboardMode={dashboardMode} />\n                <Line />\n                <div className=\"dashboard-item-content\">\n                    <RichTextEditor onEdit={onChangeText}>\n                        <Input value={text} multiline fullWidth style={style.textField} placeholder={i18n.t('Add text here')} onChange={onChangeText} />\n                    </RichTextEditor>\n                </div>\n            </>;\n  };\n\n  return <>{isEditMode(dashboardMode) ? editItem() : viewItem()}</>;\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const isPrintPreview = sGetIsPrinting(state);\n  let items;\n\n  if (isPrintPreview) {\n    items = sGetPrintDashboardItems(state);\n  } else if (isEditMode(ownProps.dashboardMode)) {\n    items = sGetEditDashboardItems(state);\n  } else {\n    items = sGetDashboardItems(state);\n  }\n\n  const item = items.find(item => item.id === ownProps.item.id);\n  return {\n    text: item ? item.text : ''\n  };\n};\n\nTextItem.propTypes = {\n  acUpdateDashboardItem: PropTypes.func,\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  text: PropTypes.string\n};\nexport default connect(mapStateToProps, {\n  acUpdateDashboardItem\n})(TextItem);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\nimport { FILTER_ORG_UNIT } from '../../../actions/itemFilters';\nimport { sGetItemFiltersRoot, DEFAULT_STATE_ITEM_FILTERS } from '../../../reducers/itemFilters';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport Line from '../../../widgets/Line';\nimport { isEditMode } from '../../Dashboard/dashboardModes';\n\nconst getIframeSrc = (appDetails, item, itemFilters) => {\n  let iframeSrc = `${appDetails.launchUrl}?dashboardItemId=${item.id}`;\n\n  if (itemFilters && itemFilters[FILTER_ORG_UNIT] && itemFilters[FILTER_ORG_UNIT].length) {\n    const ouIds = itemFilters[FILTER_ORG_UNIT].map(ouPath => ouPath.split('/').slice(-1)[0]);\n    iframeSrc += `&userOrgUnit=${ouIds.join(',')}`;\n  }\n\n  return iframeSrc;\n};\n\nconst AppItem = ({\n  dashboardMode,\n  item,\n  itemFilters\n}, context) => {\n  let appDetails;\n  const appKey = item.appKey;\n\n  if (appKey) {\n    appDetails = context.d2.system.installedApps.find(app => app.key === appKey);\n  }\n\n  return appDetails && appDetails.name && appDetails.launchUrl ? <>\n            <ItemHeader title={appDetails.name} itemId={item.id} dashboardMode={dashboardMode} />\n            <Line />\n            <iframe title={appDetails.name} src={getIframeSrc(appDetails, item, itemFilters)} className=\"dashboard-item-content\" style={{\n      border: 'none'\n    }} />\n        </> : <>\n            <ItemHeader title={`${appKey} app not found`} />\n            <Line />\n            <div className=\"dashboard-item-content\" style={{\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      height: '90%'\n    }}>\n                <NotInterestedIcon color=\"disabled\" disabled style={{\n        width: 100,\n        height: 100,\n        align: 'center'\n      }} />\n            </div>\n        </>;\n};\n\nAppItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object\n};\nAppItem.contextTypes = {\n  d2: PropTypes.object\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const itemFilters = !isEditMode(ownProps.dashboardMode) ? sGetItemFiltersRoot(state) : DEFAULT_STATE_ITEM_FILTERS;\n  return {\n    itemFilters\n  };\n};\n\nexport default connect(mapStateToProps)(AppItem);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { colors } from '@dhis2/ui';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nconst style = {\n  margin: '21px 28px',\n  fontSize: '14px',\n  lineHeight: '18px',\n  color: colors.grey600\n};\n\nconst SpacerItem = props => {\n  return <>\n            <ItemHeader title={i18n.t('Spacer')} itemId={props.item.id} dashboardMode={props.dashboardMode} />\n            <p style={style}>\n                {i18n.t('Use a spacer to create empty vertical space between other dashboard items.')}\n            </p>\n        </>;\n};\n\nSpacerItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object\n};\nexport default SpacerItem;","import React from 'react';\n\nconst PageBreakItem = () => <div />;\n\nexport default PageBreakItem;","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { orObject } from '../../../modules/util';\nimport { sGetSelectedId, sGetSelectedShowDescription } from '../../../reducers/selected';\nimport { sGetDashboardById } from '../../../reducers/dashboards';\nimport { sGetNamedItemFilters } from '../../../reducers/itemFilters';\nimport classes from './styles/Item.module.css';\n\nconst PrintTitlePageItem = ({\n  name,\n  description,\n  itemFilters,\n  showDescription\n}) => {\n  const getItemFilterList = () => {\n    const listItems = itemFilters.map(({\n      name,\n      values\n    }) => <li className={classes.filterListItem} key={name}>\n                {name}: {values.map(val => val.name).join(', ')}\n            </li>);\n    return <ul className={classes.filterList}>{listItems}</ul>;\n  };\n\n  return <div className={classes.titlePage}>\n            <p className={classes.name}>{name}</p>\n            {showDescription && description && <p className={classes.description}>{description}</p>}\n            {itemFilters.length > 0 && <>\n                    <p className={classes.filterTitle}>\n                        {i18n.t('Filters applied')}\n                    </p>\n                    {getItemFilterList()}\n                </>}\n        </div>;\n};\n\nPrintTitlePageItem.propTypes = {\n  description: PropTypes.string,\n  itemFilters: PropTypes.array,\n  name: PropTypes.string,\n  showDescription: PropTypes.bool\n};\nPrintTitlePageItem.defaultProps = {\n  description: '',\n  name: '',\n  showDescription: false\n};\n\nconst mapStateToProps = state => {\n  const id = sGetSelectedId(state);\n  const dashboard = orObject(sGetDashboardById(state, id));\n  return {\n    name: dashboard.displayName,\n    itemFilters: sGetNamedItemFilters(state),\n    description: dashboard.displayDescription,\n    showDescription: sGetSelectedShowDescription(state)\n  };\n};\n\nexport default connect(mapStateToProps)(PrintTitlePageItem);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport VisualizationItem from './VisualizationItem/Item';\nimport MessagesItem from './MessagesItem/Item';\nimport NotSupportedItem from './NotSupportedItem/Item';\nimport ListItem from './ListItem/Item';\nimport TextItem from './TextItem/Item';\nimport AppItem from './AppItem/Item';\nimport SpacerItem from './SpacerItem/Item';\nimport PageBreakItem from './PageBreakItem/Item';\nimport PrintTitlePageItem from './PrintTitlePageItem/Item';\nimport { APP, VISUALIZATION, REPORT_TABLE, CHART, MAP, EVENT_CHART, EVENT_REPORT, MESSAGES, REPORTS, RESOURCES, USERS, TEXT, SPACER, PAGEBREAK, PRINT_TITLE_PAGE } from '../../modules/itemTypes';\n\nconst getGridItem = type => {\n  switch (type) {\n    case VISUALIZATION:\n    case REPORT_TABLE:\n    case CHART:\n    case MAP:\n    case EVENT_CHART:\n    case EVENT_REPORT:\n      return VisualizationItem;\n\n    case MESSAGES:\n      return MessagesItem;\n\n    case REPORTS:\n    case RESOURCES:\n    case USERS:\n      return ListItem;\n\n    case TEXT:\n      return TextItem;\n\n    case SPACER:\n      return SpacerItem;\n\n    case APP:\n      return AppItem;\n\n    case PAGEBREAK:\n      return PageBreakItem;\n\n    case PRINT_TITLE_PAGE:\n      return PrintTitlePageItem;\n\n    default:\n      return NotSupportedItem;\n  }\n};\n\nexport const Item = props => {\n  const GridItem = getGridItem(props.item.type);\n  return <GridItem item={props.item} dashboardMode={props.dashboardMode} onToggleItemExpanded={props.onToggleItemExpanded} />;\n};\nItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  onToggleItemExpanded: PropTypes.func\n};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash/debounce';\nimport pick from 'lodash/pick';\nconst defaultDebounceMs = 100;\nconst defaultBufferFactor = 0.25;\n\nclass ProgressiveLoadingContainer extends Component {\n  static propTypes = {\n    children: PropTypes.node.isRequired,\n    bufferFactor: PropTypes.number,\n    className: PropTypes.string,\n    debounceMs: PropTypes.number,\n    style: PropTypes.object\n  };\n  static defaultProps = {\n    debounceMs: defaultDebounceMs,\n    bufferFactor: defaultBufferFactor\n  };\n  state = {\n    shouldLoad: false\n  };\n  containerRef = null;\n  shouldLoadHandler = null;\n\n  checkShouldLoad() {\n    const bufferPx = this.props.bufferFactor * window.innerHeight;\n\n    if (!this.containerRef) {\n      return;\n    }\n\n    const rect = this.containerRef.getBoundingClientRect();\n\n    if (rect.bottom > -bufferPx && rect.top < window.innerHeight + bufferPx) {\n      this.setState({\n        shouldLoad: true\n      });\n      this.removeHandler();\n    }\n  }\n\n  registerHandler() {\n    this.shouldLoadHandler = debounce(() => this.checkShouldLoad(), this.props.debounceMs);\n    const containers = [window, // this is probably unnecessary\n    ...document.getElementsByClassName('app-shell-app')];\n    containers.forEach(container => {\n      container.addEventListener('scroll', this.shouldLoadHandler);\n    });\n  }\n\n  removeHandler() {\n    const containers = [window, // this is probably unnecessary\n    ...document.getElementsByClassName('app-shell-app')];\n    containers.forEach(container => {\n      container.removeEventListener('scroll', this.shouldLoadHandler);\n    });\n  }\n\n  componentDidMount() {\n    this.registerHandler();\n    this.checkShouldLoad();\n  }\n\n  componentWillUnmount() {\n    this.removeHandler();\n  }\n\n  render() {\n    const {\n      children,\n      className,\n      style,\n      ...props\n    } = this.props;\n    const {\n      shouldLoad\n    } = this.state;\n    const eventProps = pick(props, ['onMouseDown', 'onTouchStart', 'onMouseUp', 'onTouchEnd']);\n    return <div ref={ref => this.containerRef = ref} style={style} className={className} {...eventProps}>\n                {shouldLoad && children}\n            </div>;\n  }\n\n}\n\nexport default ProgressiveLoadingContainer;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ReactGridLayout from 'react-grid-layout';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport { acUpdateDashboardLayout } from '../../actions/editDashboard';\nimport { Item } from '../Item/Item';\nimport { resize as pluginResize } from '../Item/VisualizationItem/plugin';\nimport { isVisualizationType } from '../../modules/itemTypes';\nimport { GRID_ROW_HEIGHT, GRID_COMPACT_TYPE, MARGIN, getGridColumns, hasShape, onItemResize } from './gridUtil';\nimport { orArray } from '../../modules/util';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\nimport './ItemGrid.css';\nimport { sGetSelectedId, sGetSelectedIsLoading } from '../../reducers/selected';\nimport { sGetEditDashboardRoot, sGetEditDashboardItems } from '../../reducers/editDashboard';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport ProgressiveLoadingContainer from '../Item/ProgressiveLoadingContainer';\nimport { VIEW, EDIT } from '../Dashboard/dashboardModes'; // Component\n\nconst EXPANDED_HEIGHT = 17; // this is set in the .dashboard-item-content css\n\nexport const ITEM_CONTENT_PADDING_BOTTOM = 4;\nexport class ItemGrid extends Component {\n  state = {\n    expandedItems: {}\n  };\n  onToggleItemExpanded = clickedId => {\n    const isExpanded = typeof this.state.expandedItems[clickedId] === 'boolean' ? this.state.expandedItems[clickedId] : false;\n    const expandedItems = { ...this.state.expandedItems\n    };\n    expandedItems[clickedId] = !isExpanded;\n    this.setState({\n      expandedItems\n    });\n  };\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.edit) {\n      this.setState({\n        expandedItems: {}\n      });\n    }\n  }\n\n  onLayoutChange = newLayout => {\n    if (this.props.edit) {\n      this.props.acUpdateDashboardLayout(newLayout);\n    }\n  };\n  onResizeStop = (layout, oldItem, newItem) => {\n    onItemResize(newItem.i);\n    const dashboardItem = this.props.dashboardItems.find(item => item.id === newItem.i); // call resize on the item component if it's a plugin type\n\n    if (dashboardItem && isVisualizationType(dashboardItem)) {\n      pluginResize(dashboardItem);\n    }\n  };\n  adjustHeightForExpanded = dashboardItem => {\n    const expandedItem = this.state.expandedItems[dashboardItem.id];\n\n    if (expandedItem && expandedItem === true) {\n      return Object.assign({}, dashboardItem, {\n        h: dashboardItem.h + EXPANDED_HEIGHT\n      });\n    }\n\n    return dashboardItem;\n  };\n  getItemComponent = item => {\n    const itemClassNames = [item.type, this.props.edit ? 'edit' : 'view'].join(' ');\n    return <ProgressiveLoadingContainer key={item.i} className={itemClassNames}>\n                <Item item={item} dashboardMode={this.props.edit ? EDIT : VIEW} onToggleItemExpanded={this.onToggleItemExpanded} />\n            </ProgressiveLoadingContainer>;\n  };\n  getItemComponents = items => items.map(item => this.getItemComponent(item));\n\n  render() {\n    const {\n      edit,\n      isLoading,\n      dashboardItems\n    } = this.props;\n\n    if (!isLoading && !dashboardItems.length) {\n      return <NoContentMessage text={i18n.t('There are no items on this dashboard')} />;\n    }\n\n    const items = edit ? dashboardItems : dashboardItems.map(this.adjustHeightForExpanded);\n    return <div className=\"grid-wrapper\">\n                {isLoading ? <Layer translucent>\n                        <CenteredContent>\n                            <CircularLoader />\n                        </CenteredContent>\n                    </Layer> : null}\n                <ReactGridLayout onLayoutChange={this.onLayoutChange} onResizeStop={this.onResizeStop} className=\"layout\" layout={items} margin={MARGIN} cols={getGridColumns()} rowHeight={GRID_ROW_HEIGHT} width={window.innerWidth} compactType={GRID_COMPACT_TYPE} isDraggable={edit} isResizable={edit} draggableCancel=\"input,textarea\">\n                    {this.getItemComponents(items)}\n                </ReactGridLayout>\n            </div>;\n  }\n\n}\nItemGrid.propTypes = {\n  acUpdateDashboardLayout: PropTypes.func,\n  dashboardItems: PropTypes.array,\n  edit: PropTypes.bool,\n  isLoading: PropTypes.bool\n};\nItemGrid.defaultProps = {\n  dashboardItems: []\n}; // Container\n\nconst mapStateToProps = (state, ownProps) => {\n  const selectedDashboard = ownProps.edit ? sGetEditDashboardRoot(state) : sGetDashboardById(state, sGetSelectedId(state));\n  const dashboardItems = ownProps.edit ? sGetEditDashboardItems(state) : sGetDashboardItems(state);\n  return {\n    isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n    dashboardItems\n  };\n};\n\nconst mapDispatchToProps = {\n  acUpdateDashboardLayout\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n  const validItems = orArray(stateProps.dashboardItems).filter(hasShape);\n  return { ...dispatchProps,\n    edit: ownProps.edit,\n    isLoading: stateProps.isLoading,\n    dashboardItems: validItems,\n    onItemResize\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps, mergeProps)(ItemGrid);","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { colors } from '@dhis2/ui';\nconst styles = {\n  badgeContainer: {\n    margin: '2px',\n    padding: '0 16px',\n    borderRadius: '4px',\n    color: colors.white,\n    backgroundColor: '#212934',\n    height: 36,\n    display: 'flex',\n    alignItems: 'center'\n  },\n  badge: {\n    fontSize: '13px',\n    cursor: 'pointer',\n    whiteSpace: 'nowrap'\n  },\n  badgeRemove: {\n    fontSize: '12px',\n    textDecoration: 'underline',\n    marginLeft: '24px',\n    cursor: 'pointer'\n  }\n};\n\nclass FilterBadge extends Component {\n  onClick = id => () => this.props.onClick(id);\n  onRemove = id => () => this.props.onRemove(id);\n\n  render() {\n    const {\n      data\n    } = this.props;\n    return <div style={styles.badgeContainer}>\n                <span style={styles.badge} onClick={this.onClick(data.id)}>\n                    {`${data.name}: ${data.values.length > 1 ? i18n.t('{{count}} selected', {\n          count: data.values.length\n        }) : data.values[0].name}`}\n                </span>\n                <span style={styles.badgeRemove} onClick={this.onRemove(data.id)}>\n                    {i18n.t('Remove')}\n                </span>\n            </div>;\n  }\n\n}\n\nFilterBadge.propTypes = {\n  data: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired,\n  onRemove: PropTypes.func.isRequired\n};\nFilterBadge.defaultProps = {\n  onClick: Function.prototype,\n  onRemove: Function.prototype\n};\nexport default FilterBadge;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport FilterBadge from './FilterBadge';\nimport { sGetNamedItemFilters } from '../../reducers/itemFilters';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { getControlBarHeight } from '../ControlBar/controlBarDimensions';\nimport { acRemoveItemFilter } from '../../actions/itemFilters';\nimport { acSetActiveModalDimension } from '../../actions/activeModalDimension';\nimport classes from './styles/FilterBar.module.css';\nexport class FilterBar extends Component {\n  onBadgeRemove = id => {\n    this.props.removeItemFilter(id);\n  };\n  onBadgeClick = id => {\n    this.props.setActiveModalDimension({\n      id,\n      name: this.props.filters.find(item => item.id === id).name\n    });\n  };\n\n  render() {\n    const {\n      filters,\n      userRows\n    } = this.props;\n    const top = getControlBarHeight(userRows) + 10;\n    return filters.length ? <div className={classes.bar} style={{\n      top\n    }}>\n                {filters.map(filter => <FilterBadge key={filter.id} data={filter} onClick={this.onBadgeClick} onRemove={this.onBadgeRemove} />)}\n            </div> : null;\n  }\n\n}\nFilterBar.propTypes = {\n  filters: PropTypes.array.isRequired,\n  removeItemFilter: PropTypes.func.isRequired,\n  setActiveModalDimension: PropTypes.func,\n  userRows: PropTypes.number\n};\nFilterBar.defaultProps = {\n  filters: [],\n  removeItemFIlter: Function.prototype\n};\n\nconst mapStateToProps = state => ({\n  filters: sGetNamedItemFilters(state),\n  userRows: sGetControlBarUserRows(state)\n});\n\nexport default connect(mapStateToProps, {\n  setActiveModalDimension: acSetActiveModalDimension,\n  removeItemFilter: acRemoveItemFilter\n})(FilterBar);","import { generateUid } from 'd2/uid';\nimport { SET_PRINT_DASHBOARD, CLEAR_PRINT_DASHBOARD, SET_PRINT_DASHBOARD_LAYOUT, ADD_PRINT_DASHBOARD_ITEM, REMOVE_PRINT_DASHBOARD_ITEM, UPDATE_PRINT_DASHBOARD_ITEM } from '../reducers/printDashboard';\nimport { NEW_ITEM_SHAPE, getGridItemProperties, getPageBreakItemShape, getPrintTitlePageItemShape } from '../components/ItemGrid/gridUtil';\nimport { itemTypeMap, PAGEBREAK } from '../modules/itemTypes'; // actions\n\nexport const acSetPrintDashboard = (dashboard, items) => {\n  const val = { ...dashboard,\n    dashboardItems: items\n  };\n  return {\n    type: SET_PRINT_DASHBOARD,\n    value: val\n  };\n};\nexport const acClearPrintDashboard = () => ({\n  type: CLEAR_PRINT_DASHBOARD\n});\nexport const acUpdatePrintDashboardLayout = value => ({\n  type: SET_PRINT_DASHBOARD_LAYOUT,\n  value\n});\nexport const acAddPrintDashboardItem = item => {\n  const type = item.type;\n  delete item.type;\n  const itemPropName = itemTypeMap[type].propName;\n  const id = generateUid();\n  const gridItemProperties = getGridItemProperties(id);\n  let shape;\n\n  if (type === PAGEBREAK) {\n    const yPos = item.yPos || 0;\n    shape = getPageBreakItemShape(yPos, item.isStatic);\n  } else {\n    shape = getPrintTitlePageItemShape();\n  }\n\n  return {\n    type: ADD_PRINT_DASHBOARD_ITEM,\n    value: {\n      id,\n      type,\n      position: item.position || null,\n      [itemPropName]: item.content,\n      ...NEW_ITEM_SHAPE,\n      ...gridItemProperties,\n      ...shape\n    }\n  };\n};\nexport const acRemovePrintDashboardItem = value => ({\n  type: REMOVE_PRINT_DASHBOARD_ITEM,\n  value\n});\nexport const acUpdatePrintDashboardItem = item => ({\n  type: UPDATE_PRINT_DASHBOARD_ITEM,\n  value: item\n});","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport TitleBar from '../TitleBar/TitleBar';\nimport ItemGrid from '../ItemGrid/ItemGrid';\nimport FilterBar from '../FilterBar/FilterBar';\nimport DashboardsBar from '../ControlBar/DashboardsBar';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport { sGetIsEditing } from '../../reducers/editDashboard';\nimport { sGetIsPrinting } from '../../reducers/printDashboard';\nimport { acClearEditDashboard } from '../../actions/editDashboard';\nimport { acClearPrintDashboard } from '../../actions/printDashboard';\nexport const ViewDashboard = props => {\n  useEffect(() => {\n    if (props.dashboardIsEditing) {\n      props.clearEditDashboard();\n    } else if (props.dashboardIsPrinting) {\n      props.clearPrintDashboard();\n    }\n  }, [props.dashboardIsEditing, props.dashboardIsPrinting]);\n  return <>\n            <DashboardsBar />\n            <DashboardVerticalOffset />\n            <div className=\"dashboard-wrapper\">\n                <TitleBar edit={false} />\n                <FilterBar />\n                <ItemGrid edit={false} />\n            </div>\n        </>;\n};\nViewDashboard.propTypes = {\n  clearEditDashboard: PropTypes.func,\n  clearPrintDashboard: PropTypes.func,\n  dashboardIsEditing: PropTypes.bool,\n  dashboardIsPrinting: PropTypes.bool\n};\n\nconst mapStateToProps = state => {\n  return {\n    dashboardIsEditing: sGetIsEditing(state),\n    dashboardIsPrinting: sGetIsPrinting(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  clearEditDashboard: acClearEditDashboard,\n  clearPrintDashboard: acClearPrintDashboard\n})(ViewDashboard);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Button, Modal, ModalContent, ModalActions, ButtonStrip, ModalTitle } from '@dhis2/ui';\nimport classes from './styles/ConfirmDeleteDialog.module.css';\nexport const ConfirmDeleteDialog = ({\n  dashboardName,\n  onDeleteConfirmed,\n  onContinueEditing,\n  open\n}) => {\n  const actions = [<Button key=\"cancel\" secondary onClick={onContinueEditing}>\n            {i18n.t('Cancel')}\n        </Button>, <Button key=\"delete\" destructive onClick={onDeleteConfirmed}>\n            {i18n.t('Delete')}\n        </Button>];\n  return open && <Modal onClose={onContinueEditing} small position=\"middle\">\n                <ModalTitle>{i18n.t('Delete dashboard')}</ModalTitle>\n                <ModalContent>\n                    <span className={classes.content}>\n                        {i18n.t('Deleting dashboard \"{{ dashboardName }}\" will remove it for all users. This action cannot be undone. Are you sure you want to permanently delete this dashboard?', {\n          dashboardName\n        })}\n                    </span>\n                </ModalContent>\n                <ModalActions>\n                    <ButtonStrip>{actions}</ButtonStrip>\n                </ModalActions>\n            </Modal>;\n};\nConfirmDeleteDialog.propTypes = {\n  dashboardName: PropTypes.string,\n  open: PropTypes.bool,\n  onContinueEditing: PropTypes.func,\n  onDeleteConfirmed: PropTypes.func\n};\nexport default ConfirmDeleteDialog;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport ControlBar from './ControlBar';\nimport TranslationDialog from '@dhis2/d2-ui-translation-dialog';\nimport { Button, ButtonStrip } from '@dhis2/ui';\nimport ConfirmDeleteDialog from './ConfirmDeleteDialog';\nimport { tSaveDashboard, acClearEditDashboard } from '../../actions/editDashboard';\nimport { acClearPrintDashboard } from '../../actions/printDashboard';\nimport { tDeleteDashboard, acSetDashboardDisplayName } from '../../actions/dashboards';\nimport { sGetEditDashboardRoot, sGetIsNewDashboard, sGetIsPrintPreviewView } from '../../reducers/editDashboard';\nimport { acSetPrintPreviewView, acClearPrintPreviewView } from '../../actions/editDashboard';\nimport { CONTROL_BAR_ROW_HEIGHT, MIN_ROW_COUNT, getControlBarHeight } from './controlBarDimensions';\nimport { apiFetchDashboard } from '../../api/dashboards';\nimport classes from './styles/DashboardsBar.module.css';\nconst buttonBarStyle = {\n  height: CONTROL_BAR_ROW_HEIGHT,\n  paddingTop: '15px',\n  marginLeft: '15px',\n  marginRight: '15px'\n};\nexport class EditBar extends Component {\n  state = {\n    translationDialogIsOpen: false,\n    dashboardModel: undefined,\n    confirmDeleteDialogOpen: false,\n    redirectUrl: undefined\n  };\n  onConfirmDelete = () => {\n    this.setState({\n      confirmDeleteDialogOpen: true\n    });\n  };\n  onSave = () => {\n    this.props.onSave().then(newId => {\n      this.setState({\n        redirectUrl: `/${newId}`\n      });\n    });\n  };\n  onPrintPreview = () => {\n    if (this.props.isPrintPreviewView) {\n      this.props.clearPrintPreview();\n      this.props.clearPrintDashboard();\n    } else {\n      this.props.showPrintPreview();\n    }\n  };\n  onDiscard = () => {\n    this.props.onDiscardChanges();\n    const redirectUrl = this.props.dashboardId ? `/${this.props.dashboardId}` : '/';\n    this.setState({\n      redirectUrl\n    });\n  };\n  onContinueEditing = () => {\n    this.setState({\n      confirmDeleteDialogOpen: false\n    });\n  };\n  onDeleteConfirmed = () => {\n    this.setState({\n      confirmDeleteDialogOpen: false\n    });\n    this.props.onDelete(this.props.dashboardId).then(() => {\n      this.setState({\n        redirectUrl: '/'\n      });\n    });\n  };\n  onTranslationsSaved = async translations => {\n    if (translations && translations.length) {\n      const dbLocale = await this.context.d2.currentUser.userSettings.get('keyDbLocale');\n      const translation = translations.find(t => t.locale === dbLocale && t.property === 'NAME');\n\n      if (translation && translation.value) {\n        this.props.onTranslate(this.props.dashboardId, translation.value);\n      }\n    }\n  };\n  fetchDashboardModel = () => {\n    if (this.props.dashboardId && !this.state.dashboardModel) {\n      apiFetchDashboard(this.props.dashboardId).then(dashboardModel => this.setState({\n        dashboardModel\n      }));\n    }\n  };\n\n  componentDidMount() {\n    this.fetchDashboardModel();\n  }\n\n  componentDidUpdate() {\n    this.fetchDashboardModel();\n  }\n\n  toggleTranslationDialog = () => {\n    this.setState({\n      translationDialogIsOpen: !this.state.translationDialogIsOpen\n    });\n  };\n  confirmDeleteDialog = () => this.props.deleteAccess && this.props.dashboardId ? <ConfirmDeleteDialog dashboardName={this.props.dashboardName} onDeleteConfirmed={this.onDeleteConfirmed} onContinueEditing={this.onContinueEditing} open={this.state.confirmDeleteDialogOpen} /> : null;\n  translationDialog = () => this.state.dashboardModel && this.state.dashboardModel.id ? <TranslationDialog className=\"translation-dialog\" d2={this.context.d2} open={this.state.translationDialogIsOpen} onRequestClose={this.toggleTranslationDialog} objectToTranslate={this.state.dashboardModel} fieldsToTranslate={['name', 'description']} // TODO handle messages in snackbar\n  onTranslationSaved={this.onTranslationsSaved} onTranslationError={err => console.log('translation update error', err)} /> : null;\n  renderActionButtons = () => {\n    const printPreviewText = this.props.isPrintPreviewView ? i18n.t('Exit Print preview') : i18n.t('Print preview');\n    return <div className={classes.leftControls}>\n                <ButtonStrip>\n                    <Button primary onClick={this.onSave}>\n                        {i18n.t('Save changes')}\n                    </Button>\n                    <Button onClick={this.onPrintPreview}>\n                        {printPreviewText}\n                    </Button>\n\n                    {this.props.dashboardId ? <Button onClick={this.toggleTranslationDialog}>\n                            {i18n.t('Translate')}\n                        </Button> : null}\n                    {this.props.dashboardId && this.props.deleteAccess ? <Button onClick={this.onConfirmDelete}>\n                            {i18n.t('Delete')}\n                        </Button> : null}\n                </ButtonStrip>\n            </div>;\n  };\n\n  render() {\n    if (this.state.redirectUrl) {\n      return <Redirect to={this.state.redirectUrl} />;\n    }\n\n    const {\n      updateAccess\n    } = this.props;\n    const controlBarHeight = getControlBarHeight(MIN_ROW_COUNT);\n    const discardBtnText = updateAccess ? i18n.t('Exit without saving') : i18n.t('Go to dashboards');\n    return <>\n                <ControlBar height={controlBarHeight} editMode={true}>\n                    <div style={buttonBarStyle}>\n                        {updateAccess ? this.renderActionButtons() : null}\n\n                        <div className={classes.rightControls}>\n                            <Button secondary onClick={this.onDiscard}>\n                                {discardBtnText}\n                            </Button>\n                        </div>\n                    </div>\n                </ControlBar>\n                {this.translationDialog()}\n                {this.confirmDeleteDialog()}\n            </>;\n  }\n\n}\nEditBar.propTypes = {\n  clearPrintDashboard: PropTypes.func,\n  clearPrintPreview: PropTypes.func,\n  dashboardId: PropTypes.string,\n  dashboardName: PropTypes.string,\n  deleteAccess: PropTypes.bool,\n  isPrintPreviewView: PropTypes.bool,\n  showPrintPreview: PropTypes.func,\n  updateAccess: PropTypes.bool,\n  onDelete: PropTypes.func,\n  onDiscardChanges: PropTypes.func,\n  onSave: PropTypes.func,\n  onTranslate: PropTypes.func\n};\nEditBar.contextTypes = {\n  d2: PropTypes.object\n};\n\nconst mapStateToProps = state => {\n  const dashboard = sGetEditDashboardRoot(state);\n  let deleteAccess;\n  let updateAccess;\n\n  if (sGetIsNewDashboard(state)) {\n    deleteAccess = true;\n    updateAccess = true;\n  } else {\n    updateAccess = dashboard.access ? dashboard.access.update : false;\n    deleteAccess = dashboard.access ? dashboard.access.delete : false;\n  }\n\n  return {\n    dashboardId: dashboard.id,\n    dashboardName: dashboard.name,\n    deleteAccess,\n    isPrintPreviewView: sGetIsPrintPreviewView(state),\n    updateAccess\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  clearPrintDashboard: () => dispatch(acClearPrintDashboard()),\n  clearPrintPreview: () => dispatch(acClearPrintPreviewView()),\n  onSave: () => dispatch(tSaveDashboard()).then(id => id),\n  onDelete: id => dispatch(tDeleteDashboard(id)),\n  onDiscardChanges: () => dispatch(acClearEditDashboard()),\n  onTranslate: (id, value) => dispatch(acSetDashboardDisplayName(id, value)),\n  showPrintPreview: () => dispatch(acSetPrintPreviewView())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditBar);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { a4LandscapeWidthPx } from '../../modules/printUtils';\nimport classes from './styles/PrintInfo.module.css';\n\nconst PrintInfo = ({\n  isLayout\n}) => {\n  const maxWidth = a4LandscapeWidthPx < window.innerWidth ? a4LandscapeWidthPx : window.innerWidth;\n  const infoPartOne = isLayout ? i18n.t('The pages below are a preview of how the dashboard layout will be printed.') : i18n.t('The pages below are a preview of how each dashboard item will be printed on a separate page.');\n  const infoPartTwo = i18n.t('Use the default printer settings for best results and check that all dashboard items have finished loading before printing. This text will not be printed.');\n  const infoHeader = isLayout ? i18n.t('dashboard layout') : i18n.t('one item per page');\n  return <div className={classes.infoWrapper}>\n            <p className={classes.infoHeader}>\n                {`${i18n.t('Print Preview')}: ${infoHeader}`}\n            </p>\n            <div style={{\n      maxWidth\n    }}>\n                <p className={classes.info}>{`${infoPartOne} ${infoPartTwo}`}</p>\n            </div>\n            <hr className={classes.divider} />\n        </div>;\n};\n\nPrintInfo.propTypes = {\n  isLayout: PropTypes.bool\n};\nexport default PrintInfo;","// for A4 landscape (297x210mm)\n// 794 px = (21cm / 2.54) * 96 pixels/inch\n// 1122 px = 29.7 /2.54 * 96 pixels/inch\n// const a4LandscapeHeightPx = 794\nexport const a4LandscapeWidthPx = 1102;","import React from 'react';\nimport { colors } from '@dhis2/ui';\n\nconst LessHorizontalIcon = () => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill={colors.grey600} viewBox=\"0 0 24 24\">\n        <path d=\"m13.2928932 6.29289322c.3905243-.39052429 1.0236893-.39052429 1.4142136 0 .3604839.36048396.3882135.92771502.0831886 1.32000622l-.0831886.09420734-4.2921068 4.29289322 4.2921068 4.2928932c.3604839.360484.3882135.927715.0831886 1.3200062l-.0831886.0942074c-.360484.3604839-.927715.3882135-1.3200062.0831886l-.0942074-.0831886-4.99999998-5c-.36048396-.360484-.3882135-.927715-.08318861-1.3200062l.08318861-.0942074z\" />\n    </svg>;\n\nexport default LessHorizontalIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Button } from '@dhis2/ui';\nimport { Link } from 'react-router-dom';\nimport LessHorizontalIcon from '../../icons/LessHorizontal';\nimport { a4LandscapeWidthPx } from '../../modules/printUtils';\nimport classes from './styles/PrintActionsBar.module.css';\n\nconst PrintActionsBar = ({\n  id\n}) => {\n  const width = a4LandscapeWidthPx < window.innerWidth ? a4LandscapeWidthPx : window.innerWidth;\n  return <div className={classes.container}>\n            <div className={classes.inner} style={{\n      width\n    }}>\n                <Link className={classes.link} to={`/${id}`}>\n                    <Button>\n                        <LessHorizontalIcon />\n                        {i18n.t('Exit print preview')}\n                    </Button>\n                </Link>\n                <Button onClick={window.print}>{i18n.t('Print')}</Button>\n            </div>\n        </div>;\n};\n\nPrintActionsBar.propTypes = {\n  id: PropTypes.string\n};\nexport default PrintActionsBar;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ReactGridLayout from 'react-grid-layout';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport sortBy from 'lodash/sortBy';\nimport { Item } from '../Item/Item';\nimport { acUpdatePrintDashboardLayout } from '../../actions/printDashboard';\nimport { GRID_ROW_HEIGHT, GRID_COMPACT_TYPE, MARGIN, getGridColumns, hasShape } from './gridUtil';\nimport { orArray } from '../../modules/util';\nimport { a4LandscapeWidthPx } from '../../modules/printUtils';\nimport { PRINT_LAYOUT } from '../Dashboard/dashboardModes';\nimport { itemTypeMap, PAGEBREAK } from '../../modules/itemTypes';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\nimport './ItemGrid.css';\nimport { sGetSelectedIsLoading } from '../../reducers/selected';\nimport { sGetPrintDashboardRoot, sGetPrintDashboardItems } from '../../reducers/printDashboard'; // this is set in the .dashboard-item-content css\n\nexport const ITEM_CONTENT_PADDING_BOTTOM = 4;\nexport class PrintLayoutItemGrid extends Component {\n  onLayoutChange = newLayout => {\n    this.props.updateDashboardLayout(newLayout);\n  };\n  getItemComponent = item => {\n    const itemClassNames = [item.type, 'print', 'layout'].join(' ');\n    return <div key={item.i} className={itemClassNames}>\n                <Item item={item} dashboardMode={PRINT_LAYOUT} />\n            </div>;\n  };\n  getItemComponents = items => items.map(item => this.getItemComponent(item));\n\n  hideExtraPageBreaks() {\n    const elements = Array.from(document.querySelectorAll('.react-grid-item'));\n    const types = Object.keys(itemTypeMap);\n    const items = elements.map(el => {\n      const classNames = el.className.split(' ');\n      const type = classNames.find(className => types.indexOf(className) > -1);\n      const rect = el.getBoundingClientRect();\n      return {\n        type,\n        el,\n        y: rect.y,\n        h: rect.height\n      };\n    });\n    const sortedItems = sortBy(items, ['y']);\n    let pageBreakBottom = 0;\n    let lastItemBottom = 0;\n    let foundNonPageBreak = false;\n\n    for (let i = sortedItems.length - 1; i >= 0; --i) {\n      const item = sortedItems[i];\n\n      if (item.type === PAGEBREAK) {\n        if (!foundNonPageBreak) {\n          item.el.classList.add('removed');\n        } else {\n          const y = item.el.style.transform ? item.el.style.transform.split(' ')[1].slice(0, -3) : item.y;\n          pageBreakBottom = parseInt(y) + parseInt(item.h);\n          break;\n        }\n      } else {\n        foundNonPageBreak = true;\n        const y = item.el.style.transform ? item.el.style.transform.split(' ')[1].slice(0, -3) : item.y;\n        const thisItemBottom = parseInt(y) + parseInt(item.h);\n\n        if (thisItemBottom > lastItemBottom) {\n          lastItemBottom = thisItemBottom;\n        }\n      }\n    }\n\n    const pageHeight = 720;\n    const gridElement = document.querySelector('.react-grid-layout');\n    const maxHeight = pageBreakBottom + pageHeight;\n\n    if (maxHeight < lastItemBottom) {\n      // there is a problem - this should not happen\n      console.log('jj PROBLEM! items extend beyond page bottom', maxHeight, '<', lastItemBottom);\n    }\n\n    if (gridElement) {\n      gridElement.style.height = `${maxHeight}px`;\n    }\n  }\n\n  componentDidMount() {\n    this.hideExtraPageBreaks();\n  }\n\n  componentDidUpdate() {\n    this.hideExtraPageBreaks();\n  }\n\n  render() {\n    const {\n      isLoading,\n      dashboardItems\n    } = this.props;\n\n    if (!isLoading && !dashboardItems.length) {\n      return <NoContentMessage text={i18n.t('There are no items on this dashboard')} />;\n    }\n\n    const width = a4LandscapeWidthPx < window.innerWidth ? a4LandscapeWidthPx : window.innerWidth;\n    return <div className=\"grid-wrapper\">\n                {isLoading ? <Layer translucent>\n                        <CenteredContent>\n                            <CircularLoader />\n                        </CenteredContent>\n                    </Layer> : null}\n                <ReactGridLayout onLayoutChange={this.onLayoutChange} className=\"layout\" layout={dashboardItems} margin={MARGIN} cols={getGridColumns()} rowHeight={GRID_ROW_HEIGHT} width={width} compactType={GRID_COMPACT_TYPE} isDraggable={false} isResizable={false} draggableCancel=\"input,textarea\">\n                    {this.getItemComponents(dashboardItems)}\n                </ReactGridLayout>\n            </div>;\n  }\n\n}\nPrintLayoutItemGrid.propTypes = {\n  dashboardItems: PropTypes.array,\n  isLoading: PropTypes.bool,\n  updateDashboardLayout: PropTypes.func\n};\nPrintLayoutItemGrid.defaultProps = {\n  dashboardItems: []\n};\n\nconst mapStateToProps = state => {\n  const selectedDashboard = sGetPrintDashboardRoot(state);\n  return {\n    isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n    dashboardItems: orArray(sGetPrintDashboardItems(state)).filter(hasShape)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  updateDashboardLayout: acUpdatePrintDashboardLayout\n})(PrintLayoutItemGrid);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport PrintInfo from './PrintInfo';\nimport PrintActionsBar from './PrintActionsBar';\nimport PrintLayoutItemGrid from '../ItemGrid/PrintLayoutItemGrid';\nimport { acSetPrintDashboard, acAddPrintDashboardItem, acUpdatePrintDashboardItem } from '../../actions/printDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { sGetEditDashboardRoot, sGetEditDashboardItems } from '../../reducers/editDashboard';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport { PAGEBREAK, PRINT_TITLE_PAGE } from '../../modules/itemTypes';\nimport { a4LandscapeWidthPx } from '../../modules/printUtils';\nimport classes from './styles/PrintLayoutDashboard.module.css';\nimport './styles/print.css';\nimport './styles/print-layout.css';\n\nconst isEven = n => n % 2 == 0;\n\nconst addPageBreaks = ({\n  items,\n  addDashboardItem\n}) => {\n  // add enough page breaks so that each item could\n  // be put on its own page\n  let yPos = 0;\n  const yPosList = [];\n\n  for (let i = 0; i < items.length; ++i) {\n    if (i === 0) {\n      yPos += 35;\n    } else if (i === 4 || i === 10) {\n      yPos += 40;\n    } else if (isEven(i)) {\n      yPos += 39;\n    } else {\n      yPos += 40;\n    }\n\n    yPosList.push(yPos);\n  }\n\n  for (let i = 0; i < items.length; ++i) {\n    addDashboardItem({\n      type: PAGEBREAK,\n      yPos: yPosList[i]\n    });\n  }\n};\n\nexport class PrintLayoutDashboard extends Component {\n  state = {\n    initialized: false\n  };\n  initPrintLayoutDashboard = () => {\n    if (this.props.dashboard) {\n      this.setState({\n        initialized: true\n      });\n      this.props.setPrintDashboard(this.props.dashboard, this.props.items);\n      this.props.items.forEach(item => {\n        if (item.h > 34) {\n          this.props.updateDashboardItem(Object.assign({}, item, {\n            h: 34\n          }));\n        }\n      });\n      addPageBreaks(this.props);\n\n      if (!this.props.fromEdit) {\n        this.props.addDashboardItem({\n          type: PRINT_TITLE_PAGE\n        });\n      }\n    }\n  };\n\n  componentDidMount() {\n    this.initPrintLayoutDashboard();\n  }\n\n  componentDidUpdate() {\n    if (!this.state.initialized) {\n      this.initPrintLayoutDashboard();\n    }\n  }\n\n  render() {\n    const style = this.props.fromEdit ? {\n      marginTop: '100px'\n    } : {};\n    return <>\n                {!this.props.fromEdit && <PrintActionsBar id={this.props.dashboard.id} />}\n                <div className={classes.wrapper} style={style}>\n                    {!this.props.fromEdit && <PrintInfo isLayout={true} />}\n                    <div className={classes.pageOuter} style={{\n          width: a4LandscapeWidthPx\n        }}>\n                        <PrintLayoutItemGrid />\n                    </div>\n                </div>\n            </>;\n  }\n\n}\nPrintLayoutDashboard.propTypes = {\n  addDashboardItem: PropTypes.func,\n  dashboard: PropTypes.object,\n  fromEdit: PropTypes.bool,\n  items: PropTypes.array,\n  setPrintDashboard: PropTypes.func,\n  updateDashboardItem: PropTypes.func\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const id = sGetSelectedId(state);\n\n  if (ownProps.fromEdit) {\n    const dashboard = sGetEditDashboardRoot(state);\n    return {\n      dashboard,\n      id,\n      items: sGetEditDashboardItems(state)\n    };\n  }\n\n  const dashboard = id ? sGetDashboardById(state, id) : null;\n  return {\n    dashboard,\n    id,\n    items: sGetDashboardItems(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setPrintDashboard: acSetPrintDashboard,\n  addDashboardItem: acAddPrintDashboardItem,\n  updateDashboardItem: acUpdatePrintDashboardItem\n})(PrintLayoutDashboard);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport TitleBar from '../TitleBar/TitleBar';\nimport ItemGrid from '../ItemGrid/ItemGrid';\nimport EditBar from '../ControlBar/EditBar';\nimport LayoutPrintPreview from './PrintLayoutDashboard';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport { acSetEditDashboard } from '../../actions/editDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport { sGetIsPrintPreviewView } from '../../reducers/editDashboard';\nexport class EditDashboard extends Component {\n  state = {\n    initialized: false\n  };\n  initEditDashboard = () => {\n    if (this.props.dashboard) {\n      this.setState({\n        initialized: true\n      });\n      this.props.setEditDashboard(this.props.dashboard, this.props.items);\n    }\n  };\n\n  componentDidMount() {\n    this.initEditDashboard();\n  }\n\n  componentDidUpdate() {\n    if (!this.state.initialized) {\n      this.initEditDashboard();\n    }\n  }\n\n  renderGrid = () => {\n    if (this.props.isPrintPreviewView) {\n      return <LayoutPrintPreview fromEdit={true} />;\n    }\n\n    return <div className=\"dashboard-wrapper\">\n                <TitleBar edit={true} />\n                <ItemGrid edit={true} />\n            </div>;\n  };\n\n  render() {\n    return <>\n                <EditBar />\n                <DashboardVerticalOffset editMode={true} />\n                {this.props.updateAccess ? this.renderGrid() : <NoContentMessage text={i18n.t('No access')} />}\n            </>;\n  }\n\n}\nEditDashboard.propTypes = {\n  dashboard: PropTypes.object,\n  isPrintPreviewView: PropTypes.bool,\n  items: PropTypes.array,\n  setEditDashboard: PropTypes.func,\n  updateAccess: PropTypes.bool\n};\n\nconst mapStateToProps = state => {\n  const id = sGetSelectedId(state);\n  const dashboard = id ? sGetDashboardById(state, id) : null;\n  const updateAccess = dashboard && dashboard.access ? dashboard.access.update : false;\n  return {\n    dashboard,\n    updateAccess,\n    items: sGetDashboardItems(state),\n    isPrintPreviewView: sGetIsPrintPreviewView(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setEditDashboard: acSetEditDashboard\n})(EditDashboard);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport EditBar from '../ControlBar/EditBar';\nimport TitleBar from '../TitleBar/TitleBar';\nimport ItemGrid from '../ItemGrid/ItemGrid';\nimport LayoutPrintPreview from './PrintLayoutDashboard';\nimport { acSetEditNewDashboard } from '../../actions/editDashboard';\nimport { sGetIsPrintPreviewView } from '../../reducers/editDashboard';\n\nclass NewDashboard extends Component {\n  componentDidMount() {\n    this.props.setNewDashboard();\n  }\n\n  render() {\n    return <>\n                <EditBar />\n                <DashboardVerticalOffset editMode={true} />\n                {this.props.isPrintPreviewView ? <LayoutPrintPreview fromEdit={true} /> : <div className=\"dashboard-wrapper\">\n                        <TitleBar edit={true} />\n                        <ItemGrid edit={true} />\n                    </div>}\n            </>;\n  }\n\n}\n\nNewDashboard.propTypes = {\n  isPrintPreviewView: PropTypes.bool,\n  setNewDashboard: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  isPrintPreviewView: sGetIsPrintPreviewView(state)\n});\n\nexport default connect(mapStateToProps, {\n  setNewDashboard: acSetEditNewDashboard\n})(NewDashboard);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ReactGridLayout from 'react-grid-layout';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport { Item } from '../Item/Item';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport { PRINT } from '../Dashboard/dashboardModes';\nimport { sGetSelectedIsLoading } from '../../reducers/selected';\nimport { sGetPrintDashboardRoot, sGetPrintDashboardItems } from '../../reducers/printDashboard';\nimport { GRID_ROW_HEIGHT, GRID_COMPACT_TYPE, MARGIN, getGridColumns, hasShape } from './gridUtil';\nimport { a4LandscapeWidthPx } from '../../modules/printUtils';\nimport { orArray } from '../../modules/util';\nimport { PAGEBREAK } from '../../modules/itemTypes';\nimport 'react-grid-layout/css/styles.css';\nimport './ItemGrid.css';\nexport class PrintItemGrid extends Component {\n  getItemComponent = item => {\n    const itemClassNames = [item.type, 'print', 'oipp'].join(' '); // TODO: this mutates the redux store\n\n    item.w = 56;\n\n    if (item.type === PAGEBREAK) {\n      item.h = 3;\n    } else {\n      item.h = 35;\n    }\n\n    return <div key={item.i} className={itemClassNames}>\n                <Item item={item} dashboardMode={PRINT} />\n            </div>;\n  };\n  getItemComponents = items => items.map(item => this.getItemComponent(item));\n\n  render() {\n    const {\n      isLoading,\n      dashboardItems\n    } = this.props;\n\n    if (!isLoading && !dashboardItems.length) {\n      return <NoContentMessage text={i18n.t('There are no items on this dashboard')} />;\n    }\n\n    const width = a4LandscapeWidthPx < window.innerWidth ? a4LandscapeWidthPx : window.innerWidth;\n    return <>\n                {isLoading ? <Layer translucent>\n                        <CenteredContent>\n                            <CircularLoader />\n                        </CenteredContent>\n                    </Layer> : null}\n                <ReactGridLayout className=\"layout print\" layout={dashboardItems} margin={MARGIN} cols={getGridColumns()} rowHeight={GRID_ROW_HEIGHT} width={width} compactType={GRID_COMPACT_TYPE} isDraggable={false} isResizable={false} draggableCancel=\"input,textarea\">\n                    {this.getItemComponents(dashboardItems)}\n                </ReactGridLayout>\n            </>;\n  }\n\n}\nPrintItemGrid.propTypes = {\n  dashboardItems: PropTypes.array,\n  isLoading: PropTypes.bool\n};\nPrintItemGrid.defaultProps = {\n  dashboardItems: []\n};\n\nconst mapStateToProps = state => {\n  const selectedDashboard = sGetPrintDashboardRoot(state);\n  return {\n    isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n    dashboardItems: orArray(sGetPrintDashboardItems(state)).filter(hasShape)\n  };\n};\n\nexport default connect(mapStateToProps)(PrintItemGrid);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport sortBy from 'lodash/sortBy';\nimport PrintInfo from './PrintInfo';\nimport PrintActionsBar from './PrintActionsBar';\nimport PrintItemGrid from '../ItemGrid/PrintItemGrid';\nimport { acSetPrintDashboard, acAddPrintDashboardItem, acRemovePrintDashboardItem } from '../../actions/printDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport { PAGEBREAK, PRINT_TITLE_PAGE, SPACER } from '../../modules/itemTypes';\nimport { a4LandscapeWidthPx } from '../../modules/printUtils';\nimport classes from './styles/PrintDashboard.module.css';\nimport './styles/print.css';\nimport './styles/print-oipp.css';\nexport class PrintDashboard extends Component {\n  state = {\n    initialized: false\n  };\n  initPrintDashboard = () => {\n    if (this.props.dashboard) {\n      this.setState({\n        initialized: true\n      }); //sorting the items is so that the print, with one item per page\n      //prints in the order of top to bottom of the dashboard\n\n      const sortedItems = sortBy(this.props.items, ['y', 'x']);\n      this.props.setPrintDashboard(this.props.dashboard, sortedItems);\n      let spacerCount = 0;\n      this.props.items.forEach(item => {\n        if (item.type === SPACER) {\n          spacerCount += 1;\n          this.props.removeDashboardItem(item.id);\n        }\n      });\n\n      for (let i = 0; i < (this.props.items.length - spacerCount) * 2; i += 2) {\n        this.props.addDashboardItem({\n          type: PAGEBREAK,\n          position: i,\n          isStatic: false\n        });\n      }\n\n      this.props.addDashboardItem({\n        type: PRINT_TITLE_PAGE\n      });\n    }\n  };\n\n  componentDidMount() {\n    this.initPrintDashboard();\n  }\n\n  componentDidUpdate() {\n    if (!this.state.initialized) {\n      this.initPrintDashboard();\n    }\n  }\n\n  render() {\n    return <>\n                <PrintActionsBar id={this.props.dashboard.id} />\n                <div className={classes.wrapper}>\n                    <PrintInfo isLayout={false} />\n                    <div className={classes.pageOuter} style={{\n          width: a4LandscapeWidthPx\n        }}>\n                        <PrintItemGrid />\n                    </div>\n                </div>\n            </>;\n  }\n\n}\nPrintDashboard.propTypes = {\n  addDashboardItem: PropTypes.func,\n  dashboard: PropTypes.object,\n  items: PropTypes.array,\n  removeDashboardItem: PropTypes.func,\n  setPrintDashboard: PropTypes.func\n};\n\nconst mapStateToProps = state => {\n  const id = sGetSelectedId(state);\n  const dashboard = id ? sGetDashboardById(state, id) : null;\n  return {\n    dashboard,\n    id,\n    items: sGetDashboardItems(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setPrintDashboard: acSetPrintDashboard,\n  addDashboardItem: acAddPrintDashboardItem,\n  removeDashboardItem: acRemovePrintDashboardItem\n})(PrintDashboard);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport isEmpty from 'lodash/isEmpty';\nimport i18n from '@dhis2/d2-i18n';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport DashboardsBar from '../ControlBar/DashboardsBar';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport ViewDashboard from './ViewDashboard';\nimport EditDashboard from './EditDashboard';\nimport NewDashboard from './NewDashboard';\nimport PrintDashboard from './PrintDashboard';\nimport PrintLayoutDashboard from './PrintLayoutDashboard';\nimport { tSelectDashboard } from '../../actions/dashboards';\nimport { sDashboardsIsFetching, sGetAllDashboards } from '../../reducers/dashboards';\nimport { sGetSelectedId, NON_EXISTING_DASHBOARD_ID } from '../../reducers/selected';\nimport { EDIT, NEW, VIEW, PRINT, PRINT_LAYOUT, isPrintMode } from './dashboardModes';\nconst dashboardMap = {\n  [VIEW]: <ViewDashboard />,\n  [EDIT]: <EditDashboard />,\n  [NEW]: <NewDashboard />,\n  [PRINT]: <PrintDashboard />,\n  [PRINT_LAYOUT]: <PrintLayoutDashboard />\n};\nexport class Dashboard extends Component {\n  setDashboard = () => {\n    if (this.props.dashboardsLoaded) {\n      const id = this.props.id || null;\n      this.props.selectDashboard(id);\n      this.setHeaderbarVisibility();\n      this.scrollToTop();\n    }\n  };\n  setHeaderbarVisibility = () => {\n    const header = document.getElementsByTagName('header')[0];\n\n    if (isPrintMode(this.props.mode)) {\n      header.classList.add('hidden');\n    } else {\n      header.classList.remove('hidden');\n    }\n  };\n  scrollToTop = () => {\n    window.scrollTo(0, 0);\n  };\n\n  componentDidMount() {\n    this.setDashboard();\n  }\n\n  componentDidUpdate() {\n    this.setDashboard();\n  }\n\n  render() {\n    const {\n      id,\n      mode,\n      dashboardsLoaded,\n      dashboardsIsEmpty\n    } = this.props;\n\n    if (!dashboardsLoaded || id === null) {\n      return <Layer translucent>\n                    <CenteredContent>\n                        <CircularLoader />\n                    </CenteredContent>\n                </Layer>;\n    }\n\n    if (mode === NEW) {\n      return dashboardMap[mode];\n    }\n\n    if (dashboardsIsEmpty) {\n      return <>\n                    <DashboardsBar />\n                    <DashboardVerticalOffset />\n                    <NoContentMessage text={i18n.t('No dashboards found. Use the + button to create a new dashboard.')} />\n                </>;\n    }\n\n    if (id === NON_EXISTING_DASHBOARD_ID) {\n      return <>\n                    <DashboardsBar />\n                    <DashboardVerticalOffset />\n                    <NoContentMessage text={i18n.t('Requested dashboard not found')} />\n                </>;\n    }\n\n    return dashboardMap[mode];\n  }\n\n}\nDashboard.propTypes = {\n  dashboardsIsEmpty: PropTypes.bool,\n  dashboardsLoaded: PropTypes.bool,\n  id: PropTypes.string,\n  mode: PropTypes.string,\n  selectDashboard: PropTypes.func\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const dashboards = sGetAllDashboards(state);\n  return {\n    dashboardsIsEmpty: isEmpty(dashboards),\n    dashboardsLoaded: !sDashboardsIsFetching(state),\n    id: ownProps.match?.params?.dashboardId || sGetSelectedId(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  selectDashboard: tSelectDashboard\n})(Dashboard);","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { CssVariables } from '@dhis2/ui';\nimport { EDIT, VIEW, NEW, PRINT, PRINT_LAYOUT } from './Dashboard/dashboardModes';\nimport { acReceivedUser } from '../actions/user';\nimport { tFetchDashboards } from '../actions/dashboards';\nimport { tSetControlBarRows } from '../actions/controlBar';\nimport { tSetDimensions } from '../actions/dimensions';\nimport Dashboard from './Dashboard/Dashboard';\nimport SnackbarMessage from './SnackbarMessage/SnackbarMessage';\nimport './App.css';\nexport class App extends Component {\n  componentDidMount() {\n    this.props.setCurrentUser(this.props.d2.currentUser);\n    this.props.fetchDashboards();\n    this.props.setControlBarRows();\n    this.props.setDimensions(this.props.d2);\n  }\n\n  getChildContext() {\n    return {\n      baseUrl: this.props.baseUrl,\n      i18n,\n      d2: this.props.d2\n    };\n  }\n\n  render() {\n    return <>\n                <CssVariables colors spacers />\n                <Router>\n                    <Switch>\n                        <Route exact path=\"/\" render={props => <Dashboard {...props} mode={VIEW} />} />\n                        <Route exact path=\"/new\" render={props => <Dashboard {...props} mode={NEW} />} />\n                        <Route exact path=\"/:dashboardId\" render={props => <Dashboard {...props} mode={VIEW} />} />\n                        <Route exact path=\"/:dashboardId/edit\" render={props => <Dashboard {...props} mode={EDIT} />} />\n                        <Route exact path=\"/:dashboardId/printoipp\" render={props => <Dashboard {...props} mode={PRINT} />} />\n                        <Route exact path=\"/:dashboardId/printlayout\" render={props => <Dashboard {...props} mode={PRINT_LAYOUT} />} />\n                    </Switch>\n                </Router>\n                <SnackbarMessage />\n            </>;\n  }\n\n}\nApp.propTypes = {\n  fetchDashboards: PropTypes.func.isRequired,\n  setControlBarRows: PropTypes.func.isRequired,\n  setCurrentUser: PropTypes.func.isRequired,\n  setDimensions: PropTypes.func.isRequired,\n  baseUrl: PropTypes.string,\n  d2: PropTypes.object\n};\nApp.childContextTypes = {\n  baseUrl: PropTypes.string,\n  i18n: PropTypes.object,\n  d2: PropTypes.object\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setCurrentUser: currentUser => dispatch(acReceivedUser(currentUser)),\n    fetchDashboards: () => dispatch(tFetchDashboards()),\n    setControlBarRows: () => dispatch(tSetControlBarRows()),\n    setDimensions: d2 => dispatch(tSetDimensions(d2))\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(App);","import { RECEIVED_USER } from '../reducers/user';\nexport const acReceivedUser = value => ({\n  type: RECEIVED_USER,\n  value\n});","/** @module reducers/selected */\nimport { validateReducer } from '../modules/util';\nexport const SET_STYLE = 'SET_STYLE';\nexport const DEFAULT_STATE_STYLE = 'LIST';\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\n\nconst style = (state = DEFAULT_STATE_STYLE, action) => {\n  switch (action.type) {\n    case SET_STYLE:\n      return validateReducer(action.value, DEFAULT_STATE_STYLE);\n\n    default:\n      return state;\n  }\n};\n\nexport default style;\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\n\nexport const sGetStyleRoot = state => state.style;","import { combineReducers } from 'redux';\nimport arraySort from 'd2-utilizr/lib/arraySort';\nimport dashboards, { sGetDashboardsRoot } from './dashboards';\nimport selected from './selected';\nimport dashboardsFilter, { ownerData, sGetFilterName, sGetFilterOrder, sGetFilterOwner } from './dashboardsFilter';\nimport controlBar from './controlBar';\nimport visualizations from './visualizations';\nimport editDashboard from './editDashboard';\nimport printDashboard from './printDashboard';\nimport messages from './messages';\nimport user from './user';\nimport snackbar from './snackbar';\nimport itemFilters from './itemFilters';\nimport style from './style';\nimport dimensions from './dimensions';\nimport settings from './settings';\nimport activeModalDimension from './activeModalDimension';\nconst USER = 'system'; // Reducers\n\nexport default combineReducers({\n  dashboards,\n  selected,\n  dashboardsFilter,\n  controlBar,\n  visualizations,\n  messages,\n  user,\n  editDashboard,\n  printDashboard,\n  itemFilters,\n  style,\n  snackbar,\n  dimensions,\n  settings,\n  activeModalDimension\n}); // Map constants to data\n\nconst mapConstToData = {\n  NAME: 'name',\n  ITEMS: 'numberOfItems',\n  CREATED: 'created',\n  OWNER: 'owner'\n}; // Selectors\n// Filter dashboards by name\n\nexport const sFilterDashboardsByName = (dashboards, filter) => dashboards.filter(d => d.displayName.toLowerCase().includes(filter.toLowerCase())); // Filter dashboards by owner, TODO FIXME\n\nexport const sFilterDashboardsByOwner = (dashboards, filter) => {\n  const ME = ownerData[1]; // TODO\n\n  const OTHERS = ownerData[2]; // TODO\n\n  switch (filter) {\n    case ME:\n      return dashboards.filter(d => d.owner === USER);\n\n    case OTHERS:\n      return dashboards.filter(d => d.owner !== USER);\n\n    default:\n      return dashboards;\n  }\n}; // Filter dashboards by order\n\nexport const sFilterDashboardsByOrder = (dashboards, filter) => {\n  const filterValues = filter.split(':');\n  const key = filterValues[0];\n  const direction = filterValues[1];\n  return arraySort(dashboards, direction, mapConstToData[key]);\n}; // Selectors dependency level 2\n// Get filtered dashboards\n\nexport const sGetFilteredDashboards = state => {\n  const dashboards = sGetDashboardsRoot(state);\n  const nameFilter = sGetFilterName(state);\n  const ownerFilter = sGetFilterOwner(state);\n  const orderFilter = sGetFilterOrder(state);\n  return sFilterDashboardsByOrder(sFilterDashboardsByName(sFilterDashboardsByOwner(dashboards, ownerFilter), nameFilter), orderFilter);\n};","import { createStore, applyMiddleware, compose } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport reducer from './reducers';\n\nconst configureStore = () => {\n  const middleware = [thunk]; // Enable Redux devtools if extension is installed instead of redux-logger\n\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n  if (!window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ && process.env.NODE_ENV !== 'production') {\n    middleware.push(createLogger());\n  }\n\n  return createStore(reducer, composeEnhancers(applyMiddleware(...middleware)));\n};\n\nexport default configureStore;","//------------------------------------------------------------------------------\n// <auto-generated>\n// This code was generated by d2-i18n-generate.\n//\n// Changes to this file may cause incorrect behavior and will be lost if\n// the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\nimport i18n from '@dhis2/d2-i18n';\nimport arTranslations from './ar/translations.json';\nimport ar_IQTranslations from './ar_IQ/translations.json';\nimport daTranslations from './da/translations.json';\nimport enTranslations from './en/translations.json';\nimport esTranslations from './es/translations.json';\nimport frTranslations from './fr/translations.json';\nimport idTranslations from './id/translations.json';\nimport kmTranslations from './km/translations.json';\nimport loTranslations from './lo/translations.json';\nimport myTranslations from './my/translations.json';\nimport nbTranslations from './nb/translations.json';\nimport prsTranslations from './prs/translations.json';\nimport psTranslations from './ps/translations.json';\nimport ptTranslations from './pt/translations.json';\nimport pt_BRTranslations from './pt_BR/translations.json';\nimport ruTranslations from './ru/translations.json';\nimport svTranslations from './sv/translations.json';\nimport tetTranslations from './tet/translations.json';\nimport tgTranslations from './tg/translations.json';\nimport ukTranslations from './uk/translations.json';\nimport urTranslations from './ur/translations.json';\nimport viTranslations from './vi/translations.json';\nimport zhTranslations from './zh/translations.json';\nimport zh_CNTranslations from './zh_CN/translations.json';\nconst namespace = 'default';\ni18n.addResources('ar', namespace, arTranslations);\ni18n.addResources('ar_IQ', namespace, ar_IQTranslations);\ni18n.addResources('da', namespace, daTranslations);\ni18n.addResources('en', namespace, enTranslations);\ni18n.addResources('es', namespace, esTranslations);\ni18n.addResources('fr', namespace, frTranslations);\ni18n.addResources('id', namespace, idTranslations);\ni18n.addResources('km', namespace, kmTranslations);\ni18n.addResources('lo', namespace, loTranslations);\ni18n.addResources('my', namespace, myTranslations);\ni18n.addResources('nb', namespace, nbTranslations);\ni18n.addResources('prs', namespace, prsTranslations);\ni18n.addResources('ps', namespace, psTranslations);\ni18n.addResources('pt', namespace, ptTranslations);\ni18n.addResources('pt_BR', namespace, pt_BRTranslations);\ni18n.addResources('ru', namespace, ruTranslations);\ni18n.addResources('sv', namespace, svTranslations);\ni18n.addResources('tet', namespace, tetTranslations);\ni18n.addResources('tg', namespace, tgTranslations);\ni18n.addResources('uk', namespace, ukTranslations);\ni18n.addResources('ur', namespace, urTranslations);\ni18n.addResources('vi', namespace, viTranslations);\ni18n.addResources('zh', namespace, zhTranslations);\ni18n.addResources('zh_CN', namespace, zh_CNTranslations);\nexport default i18n;","import React from 'react';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport dhis2theme from '@dhis2/d2-ui-core/theme/mui3.theme';\nimport { Provider as ReduxProvider } from 'react-redux';\nimport { D2Shim } from '@dhis2/app-runtime-adapter-d2';\nimport App from './components/App';\nimport configureStore from './configureStore';\nimport './AppWrapper.css';\nimport './locales';\n\nconst muiTheme = () => createMuiTheme(dhis2theme);\n\nconst schemas = ['chart', 'map', 'report', 'reportTable', 'eventChart', 'eventReport', 'dashboard', 'organisationUnit', 'userGroup'];\nconst appConfig = {\n  schemas\n};\nconst authorization = process.env.REACT_APP_DHIS2_AUTHORIZATION || null; // TODO: ER and EV plugins require the auth header in development mode.\n// Remove this when these plugins are rewritten\n\nif (authorization) {\n  appConfig.headers = {\n    Authorization: authorization\n  };\n}\n\nconst AppWrapper = () => {\n  return <ReduxProvider store={configureStore()}>\n            <MuiThemeProvider theme={muiTheme()}>\n                <D2Shim appConfig={appConfig} i18nRoot=\"./i18n\">\n                    {({\n          d2\n        }) => {\n          if (!d2) {\n            // TODO: Handle errors in d2 initialization\n            return null;\n          }\n\n          return <App d2={d2} />;\n        }}\n                </D2Shim>\n            </MuiThemeProvider>\n        </ReduxProvider>;\n};\n\nexport default AppWrapper;","import isObject from 'lodash/isObject'; // validation\n\nexport function orNull(param) {\n  return param === undefined ? null : param;\n}\nexport function orArray(param) {\n  return Array.isArray(param) ? param : [];\n}\nexport function orObject(param) {\n  return isObject(param) ? param : {};\n} // array\n\nexport function arrayGetById(array, id) {\n  return array.find(item => item.id === id);\n} // object\n\nexport function arrayToIdMap(array) {\n  return array.reduce((obj, item) => {\n    obj[item.id] = item;\n    return obj;\n  }, {});\n} // date\n\nexport function getDate() {\n  const y = Math.floor(Math.random() * 3) + 2015;\n  const M = Math.floor(Math.random() * 12) + 1;\n  const d = Math.floor(Math.random() * 28) + 1; // const h = Math.floor(Math.random() * 23) + 1;\n  // const m = Math.floor(Math.random() * 59) + 1;\n  // const s = Math.floor(Math.random() * 59) + 1;\n\n  return new Date(`${y}-${M}-${d}`).toJSON().replace('T', ' ').substr(0, 10);\n}\nexport const formatDate = (value, uiLocale) => {\n  if (typeof global.Intl !== 'undefined' && Intl.DateTimeFormat) {\n    const locale = uiLocale || 'en';\n    return new Intl.DateTimeFormat(locale, {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    }).format(new Date(value));\n  }\n\n  return value.substr(0, 19).replace('T', ' ');\n};\n/**\n * Sorts an array of objects based on provided date property\n *\n * @param {Array} items Array of objects\n * @param {String} dateProp Name of the date property to be used for sorting\n * @param {Boolean} ascending Whether to sort ascending or descending\n */\n\nexport const sortByDate = (items, dateProp, ascending = true) => {\n  const values = Object.values(items);\n  values.sort((a, b) => {\n    const aDate = new Date(a[dateProp]);\n    const bDate = new Date(b[dateProp]);\n    return ascending ? aDate - bDate : bDate - aDate;\n  });\n  return values;\n}; // reducer validator\n\nexport const validateReducer = (value, defaultValue) => value === undefined || value === null ? defaultValue : value;\nexport const getBaseUrl = d2 => {\n  const api = d2.Api.getApi();\n  const idx = api.baseUrl.indexOf('/api');\n  return idx > -1 ? api.baseUrl.slice(0, idx) : api.baseUrl;\n};\nexport const getWithoutId = object => ({ ...object,\n  id: undefined\n});","import i18n from '@dhis2/d2-i18n';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\nimport ExtensionIcon from '@material-ui/icons/Extension';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport PersonIcon from '@material-ui/icons/Person';\nimport FontDownloadIcon from '@material-ui/icons/FontDownload';\nimport EmailIcon from '@material-ui/icons/Email';\nimport CropFreeIcon from '@material-ui/icons/CropFree';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\nimport { getBaseUrl } from './util'; // Item types\n\nexport const VISUALIZATION = 'VISUALIZATION';\nexport const REPORT_TABLE = 'REPORT_TABLE';\nexport const CHART = 'CHART';\nexport const MAP = 'MAP';\nexport const EVENT_REPORT = 'EVENT_REPORT';\nexport const EVENT_CHART = 'EVENT_CHART';\nexport const APP = 'APP';\nexport const REPORTS = 'REPORTS';\nexport const RESOURCES = 'RESOURCES';\nexport const USERS = 'USERS';\nexport const MESSAGES = 'MESSAGES';\nexport const TEXT = 'TEXT';\nexport const SPACER = 'SPACER';\nexport const PAGEBREAK = 'PAGEBREAK';\nexport const PRINT_TITLE_PAGE = 'PRINT_TITLE_PAGE';\nconst DOMAIN_TYPE_AGGREGATE = 'AGGREGATE';\nconst DOMAIN_TYPE_TRACKER = 'TRACKER'; // Dashboard helpers\n\nexport const isVisualizationType = item => !!itemTypeMap[item.type].isVisualizationType;\nexport const hasMapView = itemType => itemTypeMap[itemType].domainType === DOMAIN_TYPE_AGGREGATE;\nexport const isTrackerDomainType = itemType => itemTypeMap[itemType].domainType === DOMAIN_TYPE_TRACKER;\nexport const getDefaultItemCount = itemType => itemTypeMap[itemType].defaultItemCount || 5;\nexport const getAppName = itemType => itemTypeMap[itemType].appName || ''; // Item type map\n\nexport const itemTypeMap = {\n  [VISUALIZATION]: {\n    id: VISUALIZATION,\n    endPointName: 'visualizations',\n    propName: 'visualization',\n    pluralTitle: i18n.t('Visualizations'),\n    appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n    appName: 'Data Visualizer',\n    defaultItemCount: 10\n  },\n  [REPORT_TABLE]: {\n    id: REPORT_TABLE,\n    endPointName: 'visualizations',\n    propName: 'visualization',\n    pluralTitle: i18n.t('Pivot tables'),\n    domainType: DOMAIN_TYPE_AGGREGATE,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n    appName: 'Data Visualizer'\n  },\n  [CHART]: {\n    id: CHART,\n    endPointName: 'visualizations',\n    propName: 'visualization',\n    pluralTitle: i18n.t('Charts'),\n    domainType: DOMAIN_TYPE_AGGREGATE,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n    appName: 'Data Visualizer'\n  },\n  [MAP]: {\n    id: MAP,\n    endPointName: 'maps',\n    propName: 'map',\n    pluralTitle: i18n.t('Maps'),\n    domainType: DOMAIN_TYPE_AGGREGATE,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-maps/?id=${id}`,\n    appName: 'Maps'\n  },\n  [EVENT_REPORT]: {\n    id: EVENT_REPORT,\n    endPointName: 'eventReports',\n    propName: 'eventReport',\n    pluralTitle: i18n.t('Event reports'),\n    domainType: DOMAIN_TYPE_TRACKER,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-event-reports/?id=${id}`,\n    appName: 'Event Reports'\n  },\n  [EVENT_CHART]: {\n    id: EVENT_CHART,\n    endPointName: 'eventCharts',\n    propName: 'eventChart',\n    pluralTitle: i18n.t('Event charts'),\n    domainType: DOMAIN_TYPE_TRACKER,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-event-visualizer/?id=${id}`,\n    appName: 'Event Visualizer'\n  },\n  [APP]: {\n    endPointName: 'apps',\n    propName: 'appKey',\n    pluralTitle: i18n.t('Apps')\n  },\n  [REPORTS]: {\n    id: REPORTS,\n    endPointName: 'reports',\n    propName: 'reports',\n    pluralTitle: i18n.t('Reports'),\n    appUrl: (id, type) => {\n      switch (type) {\n        case 'HTML':\n          return `dhis-web-reports/#/standard-report/view/${id}`;\n\n        case 'JASPER_REPORT_TABLE':\n        case 'JASPER_JDBC':\n        default:\n          return `api/reports/${id}/data.pdf?t=${new Date().getTime()}`;\n      }\n    }\n  },\n  [RESOURCES]: {\n    id: RESOURCES,\n    endPointName: 'resources',\n    propName: 'resources',\n    pluralTitle: i18n.t('Resources'),\n    appUrl: id => `api/documents/${id}/data`\n  },\n  [USERS]: {\n    id: USERS,\n    endPointName: 'users',\n    propName: 'users',\n    pluralTitle: i18n.t('Users'),\n    appUrl: id => `dhis-web-dashboard-integration/profile.action?id=${id}`\n  },\n  [TEXT]: {\n    id: TEXT,\n    propName: 'text'\n  },\n  [MESSAGES]: {\n    propName: 'messages'\n  },\n  [SPACER]: {\n    propName: 'text'\n  },\n  [PAGEBREAK]: {\n    propName: 'text'\n  },\n  [PRINT_TITLE_PAGE]: {\n    propName: 'text'\n  }\n};\nexport const getEndPointName = type => itemTypeMap[type].endPointName;\nexport const getItemUrl = (type, item, d2) => {\n  let url;\n\n  if (type === APP) {\n    url = item.launchUrl;\n  }\n\n  if (itemTypeMap[type] && itemTypeMap[type].appUrl) {\n    url = `${getBaseUrl(d2)}/${itemTypeMap[type].appUrl(item.id, item.type)}`;\n  }\n\n  return url;\n};\nexport const getItemIcon = type => {\n  switch (type) {\n    case REPORT_TABLE:\n    case EVENT_REPORT:\n    case REPORTS:\n      return TableIcon;\n\n    case CHART:\n    case EVENT_CHART:\n      return ChartIcon;\n\n    case MAP:\n      return MapIcon;\n\n    case APP:\n      return ExtensionIcon;\n\n    case RESOURCES:\n      return DescriptionIcon;\n\n    case USERS:\n      return PersonIcon;\n\n    case TEXT:\n      return FontDownloadIcon;\n\n    case MESSAGES:\n      return EmailIcon;\n\n    case SPACER:\n      return CropFreeIcon;\n\n    default:\n      return NotInterestedIcon;\n  }\n};","import isFunction from 'd2-utilizr/lib/isFunction';\nimport { orObject } from '../../modules/util'; // Dimensions for the react-grid-layout\n\nexport const GRID_COMPACT_TYPE = 'vertical'; // vertical | horizonal | null\n\nexport const GRID_ROW_HEIGHT = 10;\nconst GRID_COLUMN_WIDTH_PX = 20;\nconst GRID_LAYOUT = 'FLEXIBLE'; // FIXED | FLEXIBLE\n\nexport const MARGIN = [10, 10];\nexport const NEW_ITEM_SHAPE = {\n  x: 0,\n  y: 0,\n  w: 20,\n  h: 29\n}; // Dimensions for getShape\n\nconst NUMBER_OF_ITEM_COLS = 2;\nconst GRID_COLUMNS = 60;\nexport const getGridColumns = () => {\n  switch (GRID_LAYOUT) {\n    case 'FLEXIBLE':\n      return GRID_COLUMNS;\n\n    case 'FIXED':\n      return Math.floor((window.innerWidth - 20) / GRID_COLUMN_WIDTH_PX);\n\n    default:\n      return GRID_COLUMNS;\n  }\n}; // isNonNegativeInteger\n\nconst isNonNegativeInteger = x => Number.isInteger(x) && x >= 0; // Does the item have all the shape properties?\n\n\nexport const hasShape = item => isNonNegativeInteger(item.x) && isNonNegativeInteger(item.y) && isNonNegativeInteger(item.w) && isNonNegativeInteger(item.h); // returns a rectangular grid block dimensioned with x, y, w, h in grid units.\n// based on a grid with 3 items across\n\nexport const getShape = i => {\n  if (!isNonNegativeInteger(i)) {\n    throw new Error('Invalid grid block number');\n  }\n\n  const col = i % NUMBER_OF_ITEM_COLS;\n  const row = Math.floor(i / NUMBER_OF_ITEM_COLS);\n  const itemWidth = Math.floor((GRID_COLUMNS - 1) / NUMBER_OF_ITEM_COLS);\n  const itemHeight = GRID_ROW_HEIGHT * 2;\n  return {\n    x: col * itemWidth,\n    y: row * itemHeight,\n    w: itemWidth,\n    h: itemHeight\n  };\n};\nexport const getGridItemProperties = itemId => {\n  return {\n    i: itemId,\n    minH: 4 // minimum height for item\n\n  };\n};\nexport const getPageBreakItemShape = (yPos, isStatic = true) => {\n  return {\n    x: 0,\n    y: yPos,\n    w: GRID_COLUMNS - 1,\n    h: 5,\n    static: !!isStatic,\n    minH: 1\n  };\n};\nexport const getPrintTitlePageItemShape = () => {\n  return {\n    x: 0,\n    y: 0,\n    w: GRID_COLUMNS - 1,\n    h: 30,\n    static: true,\n    minH: 1\n  };\n};\n/**\n * Calculates the grid item's original height in pixels based\n * on the height in grid units. This calculation\n * is copied directly from react-grid-layout GridItem.js (calcPosition)\n *\n * @param {Object} item item containing shape (x, y, w, h)\n */\n\nexport const getOriginalHeight = item => {\n  const originalHeight = Math.round(GRID_ROW_HEIGHT * item.h + Math.max(0, item.h - 1) * MARGIN[1]);\n  return {\n    originalHeight\n  };\n};\n/**\n * Returns an array of items containing the x, y, w, h dimensions\n * and the item's originalheight in pixels\n * @function\n * @param {Array} items\n * @returns {Array}\n */\n\nexport const withShape = items => items.map((item, index) => {\n  const itemWithShape = hasShape(item) ? item : Object.assign({}, item, getShape(index));\n  return Object.assign({}, itemWithShape, getOriginalHeight(itemWithShape));\n});\nexport const getGridItemDomId = id => `item-${id}`;\nexport function onItemResize(id) {\n  const el = orObject(document.querySelector(`#${getGridItemDomId(id)}`));\n  if (isFunction(el.setViewportSize)) setTimeout(() => el.setViewportSize(el.clientWidth - 5, el.clientHeight - 5), 10);\n}","import isObject from 'lodash/isObject';\nimport { VIS_TYPE_COLUMN, VIS_TYPE_PIVOT_TABLE } from '@dhis2/analytics';\nimport { apiFetchFavorite, getMapFields } from '../../../api/metadata';\nimport { REPORT_TABLE, CHART, MAP, EVENT_REPORT, EVENT_CHART, itemTypeMap } from '../../../modules/itemTypes';\nimport { getBaseUrl, getWithoutId } from '../../../modules/util';\nimport { getGridItemDomId } from '../../ItemGrid/gridUtil'; //external plugins\n\nconst itemTypeToExternalPlugin = {\n  [MAP]: 'mapPlugin',\n  [EVENT_REPORT]: 'eventReportPlugin',\n  [EVENT_CHART]: 'eventChartPlugin'\n};\n\nconst hasIntegratedPlugin = type => [CHART, REPORT_TABLE].includes(type);\n\nconst getPlugin = type => {\n  if (hasIntegratedPlugin(type)) {\n    return true;\n  }\n\n  const pluginName = itemTypeToExternalPlugin[type];\n  return global[pluginName];\n};\n\nexport const THEMATIC_LAYER = 'thematic';\nexport const pluginIsAvailable = (item = {}, visualization = {}) => {\n  const type = visualization.activeType || item.type;\n  return !!getPlugin(type);\n};\nexport const extractFavorite = item => {\n  if (!isObject(item)) {\n    return null;\n  }\n\n  const propName = itemTypeMap[item.type].propName;\n  return item[propName] || item.reportTable || item.chart || item.map || item.eventReport || item.eventChart || {};\n};\nexport const extractMapView = map => map.mapViews && map.mapViews.find(mv => mv.layer.includes(THEMATIC_LAYER));\nexport const loadPlugin = (plugin, config, credentials) => {\n  if (!(plugin && plugin.load)) {\n    return;\n  }\n\n  plugin.url = credentials.baseUrl;\n  plugin.loadingIndicator = true;\n  plugin.dashboard = true;\n\n  if (credentials.auth) {\n    plugin.auth = credentials.auth;\n  }\n\n  plugin.load(config);\n};\nexport const getId = item => extractFavorite(item).id;\nexport const getName = item => extractFavorite(item).name;\nexport const getDescription = item => extractFavorite(item).description;\nexport const getLink = (item, d2) => {\n  const baseUrl = getBaseUrl(d2);\n  const appUrl = itemTypeMap[item.type].appUrl(getId(item));\n  return `${baseUrl}/${appUrl}`;\n};\nexport const load = async (item, visualization, {\n  credentials,\n  activeType,\n  options = {}\n}) => {\n  const config = { ...visualization,\n    ...options,\n    el: getGridItemDomId(item.id)\n  };\n  const type = activeType || item.type;\n  const plugin = getPlugin(type);\n  loadPlugin(plugin, config, credentials);\n};\nexport const fetch = async item => {\n  const fetchedFavorite = await apiFetchFavorite(getId(item), item.type, {\n    fields: item.type === MAP ? getMapFields() : null\n  });\n  return fetchedFavorite;\n};\nexport const resize = item => {\n  const plugin = getPlugin(item.type);\n\n  if (plugin && plugin.resize) {\n    plugin.resize(getGridItemDomId(item.id));\n  }\n};\nexport const unmount = (item, activeType) => {\n  const plugin = getPlugin(activeType);\n\n  if (plugin && plugin.unmount) {\n    plugin.unmount(getGridItemDomId(item.id));\n  }\n};\nexport const getVisualizationConfig = (visualization, originalType, activeType) => {\n  if (originalType === MAP && originalType !== activeType) {\n    const extractedMapView = extractMapView(visualization);\n\n    if (extractedMapView === undefined) {\n      return null;\n    }\n\n    return getWithoutId({ ...visualization,\n      ...extractedMapView,\n      mapViews: undefined,\n      type: activeType === CHART ? VIS_TYPE_COLUMN : VIS_TYPE_PIVOT_TABLE\n    });\n  } else if (originalType === REPORT_TABLE && activeType === CHART) {\n    return getWithoutId({ ...visualization,\n      type: VIS_TYPE_COLUMN\n    });\n  } else if (originalType === CHART && activeType === REPORT_TABLE) {\n    return getWithoutId({ ...visualization,\n      type: VIS_TYPE_PIVOT_TABLE\n    });\n  }\n\n  return getWithoutId(visualization);\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemWrap\":\"ItemHeader_itemWrap__1SbYo\",\"itemHeaderWrap\":\"ItemHeader_itemHeaderWrap__JcBP7\",\"itemTitle\":\"ItemHeader_itemTitle__34rHa\",\"itemActionsWrap\":\"ItemHeader_itemActionsWrap__Gx3D9\"};","import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { getEndPointName } from '../modules/itemTypes'; // Id, name\n\nexport const getIdNameFields = ({\n  rename\n} = {}) => ['id', `${rename ? 'displayName~rename(name)' : 'name,displayName'}`]; // Item\n\nexport const getItemFields = () => ['dimensionItem~rename(id)', 'displayName~rename(name)', 'dimensionItemType']; // Dimension\n\nexport const getDimensionFields = ({\n  withItems\n}) => arrayClean(['dimension', 'legendSet[id]', 'filter', 'programStage', withItems ? `items[${getItemFields().join(',')}]` : ``]); // Axis\n\nexport const getAxesFields = ({\n  withItems\n}) => [`columns[${getDimensionFields({\n  withItems\n}).join(',')}]`, `rows[${getDimensionFields({\n  withItems\n}).join(',')}]`, `filters[${getDimensionFields({\n  withItems\n}).join(',')}]`]; // Favorite\n\nexport const getFavoriteFields = ({\n  withDimensions,\n  withOptions\n}) => {\n  return arrayClean([`${getIdNameFields({\n    rename: true\n  }).join(',')}`, 'displayDescription~rename(description)', withDimensions ? `${getAxesFields({\n    withItems: true\n  }).join(',')}` : ``, withOptions ? ['*', '!attributeDimensions', '!attributeValues', '!category', '!categoryDimensions', '!categoryOptionGroupSetDimensions', '!columnDimensions', '!dataDimensionItems', '!dataElementDimensions', '!dataElementGroupSetDimensions', '!filterDimensions', '!itemOrganisationUnitGroups', '!lastUpdatedBy', '!organisationUnitGroupSetDimensions', '!organisationUnitLevels', '!organisationUnits', '!programIndicatorDimensions', '!relativePeriods', '!reportParams', '!rowDimensions', '!series', '!translations', '!userOrganisationUnit', '!userOrganisationUnitChildren', '!userOrganisationUnitGrandChildren'].join(',') : '']);\n};\nexport const getFavoritesFields = ({\n  withDimensions\n}) => [`reportTable[${getFavoriteFields({\n  withDimensions\n}).join(',')}]`, `chart[${['type', ...getFavoriteFields({\n  withDimensions\n})].join(',')}]`, `map[${getFavoriteFields({\n  withDimensions\n}).join(',')}]`, `eventReport[${getFavoriteFields({\n  withDimensions\n}).join(',')}]`, `eventChart[${getFavoriteFields({\n  withDimensions\n}).join(',')}]`]; // List item\n\nexport const getListItemFields = () => [`reports[${['type', ...getIdNameFields({\n  rename: true\n})].join(',')}]`, `resources[${getIdNameFields({\n  rename: true\n}).join(',')}]`, `users[${getIdNameFields({\n  rename: true\n}).join(',')}]`]; // Map\n\nexport const getMapFields = () => [`${getIdNameFields({\n  rename: true\n}).join(',')}`, 'user,longitude,latitude,zoom,basemap', `mapViews[${getFavoriteFields({\n  withDimensions: true,\n  withOptions: true\n})}]`]; // Api\n// Get more info about the favorite of a dashboard item\n\nexport const apiFetchFavorite = (id, type, {\n  fields\n}) => getInstance().then(d2 => d2.Api.getApi().get(`${getEndPointName(type)}/${id}`, {\n  fields: fields || getFavoriteFields({\n    withDimensions: true,\n    withOptions: true\n  })\n}));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"leftControls\":\"DashboardsBar_leftControls__k-Y57\",\"rightControls\":\"DashboardsBar_rightControls__1cyr1\"};"],"sourceRoot":""}
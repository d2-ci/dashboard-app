{"version":3,"sources":["D2App/components/styles/DashboardContainer.module.css","D2App/components/styles/NoContentMessage.module.css","D2App/components/styles/Notice.module.css","D2App/pages/print/styles/PrintActionsBar.module.css","D2App/pages/print/styles/PrintInfo.module.css","D2App/components/Item/ItemHeader/styles/PrintItemInfo.module.css","D2App/components/Item/ListItem/Item.module.css","D2App/components/Item/MessagesItem/getFormattedDate.js","D2App/components/Item/MessagesItem/styles/Item.module.css","D2App/components/Item/PrintTitlePageItem/styles/Item.module.css","D2App/components/Item/VisualizationItem/styles/FatalErrorBoundary.module.css","D2App/components/styles/Tooltip.module.css","D2App/components/Item/VisualizationItem/styles/ItemFooter.module.css","D2App/components/Item/VisualizationItem/Visualization/loadExternalScript.js","D2App/components/Item/VisualizationItem/Visualization/styles/LoadingMask.module.css","D2App/components/Item/VisualizationItem/Visualization/styles/DataVisualizerPlugin.module.css","D2App/components/Item/VisualizationItem/Visualization/styles/VisualizationErrorMessage.module.css","D2App/components/Item/VisualizationItem/Visualization/styles/NoVisualizationMessage.module.css","D2App/pages/print/styles/PrintLayoutDashboard.module.css","D2App/components/styles/ConfirmActionDialog.module.css","D2App/pages/edit/styles/FilterSettingsDialog.module.css","D2App/pages/edit/styles/ActionsBar.module.css","D2App/pages/edit/styles/ItemGrid.module.css","D2App/pages/edit/styles/EditDashboard.module.css","D2App/pages/edit/ItemSelector/styles/ContentMenuItem.module.css","D2App/pages/edit/ItemSelector/styles/HeaderMenuItem.module.css","D2App/pages/edit/ItemSelector/styles/CategorizedMenuGroup.module.css","D2App/pages/edit/ItemSelector/styles/ItemSearchField.module.css","D2App/pages/edit/ItemSelector/styles/ItemSelector.module.css","D2App/pages/edit/styles/LayoutModal.module.css","D2App/pages/edit/styles/TitleBar.module.css","D2App/pages/edit/styles/NewDashboard.module.css","D2App/pages/print/styles/PrintDashboard.module.css","D2App/pages/view/DashboardsBar/styles/Chip.module.css","D2App/pages/view/DashboardsBar/styles/ClearButton.module.css","D2App/pages/view/DashboardsBar/styles/Filter.module.css","D2App/pages/view/DashboardsBar/styles/Content.module.css","D2App/pages/view/DashboardsBar/styles/DragHandle.module.css","D2App/pages/view/DashboardsBar/styles/ShowMoreButton.module.css","D2App/pages/view/DashboardsBar/styles/DashboardsBar.module.css","D2App/pages/view/FilterBar/styles/FilterBadge.module.css","D2App/pages/view/FilterBar/styles/FilterBar.module.css","D2App/pages/view/styles/ItemGrid.module.css","D2App/pages/view/styles/ViewDashboard.module.css","D2App/components/DropdownButton/DropdownButton.module.css","D2App/pages/view/TitleBar/styles/FilterSelector.module.css","D2App/pages/view/TitleBar/styles/StarDashboardButton.module.css","D2App/pages/view/TitleBar/styles/ActionsBar.module.css","D2App/pages/view/TitleBar/styles/Description.module.css","D2App/pages/view/TitleBar/styles/LastUpdatedTag.module.css","D2App/pages/view/TitleBar/styles/TitleBar.module.css","D2App/modules/util.js","D2App/reducers/controlBar.js","D2App/api/userDataStore.js","D2App/api/controlBar.js","D2App/actions/controlBar.js","D2App/api/fetchAllDashboards.js","D2App/reducers/dashboards.js","D2App/actions/dashboards.js","D2App/reducers/showDescription.js","D2App/api/description.js","D2App/actions/showDescription.js","D2App/modules/dashboardModes.js","D2App/modules/smallScreen.js","D2App/modules/gridUtil.js","D2App/modules/uiBackendItemConverter.js","D2App/api/metadata.js","D2App/api/fetchDashboard.js","D2App/modules/getCustomDashboards.js","D2App/api/editDashboard.js","D2App/reducers/editDashboard.js","D2App/actions/editDashboard.js","D2App/components/DashboardContainer.js","D2App/components/NoContentMessage.js","D2App/components/Notice.js","D2App/components/WindowDimensionsProvider.js","D2App/modules/setHeaderbarVisible.js","D2App/reducers/printDashboard.js","D2App/actions/printDashboard.js","D2App/pages/print/ActionsBar.js","D2App/pages/print/PrintInfo.js","D2App/reducers/dimensions.js","D2App/reducers/itemFilters.js","D2App/actions/itemFilters.js","D2App/components/Item/ItemHeader/DeleteItemButton.js","D2App/components/Item/ItemHeader/EditItemActions.js","D2App/components/Item/ItemHeader/PrintItemInfo.js","D2App/components/Item/ItemHeader/ViewItemActions.js","D2App/components/Item/ItemHeader/ItemHeader.js","D2App/components/Item/AppItem/Item.js","D2App/components/Item/ListItem/Item.js","D2App/reducers/messages.js","D2App/api/userSettings.js","D2App/components/UserSettingsProvider.js","D2App/components/Item/MessagesItem/Item.js","D2App/components/Item/NotSupportedItem/Item.js","D2App/components/Item/PageBreakItem/Item.js","D2App/reducers/selected.js","D2App/components/Item/PrintTitlePageItem/Item.js","D2App/components/Item/SpacerItem/Item.js","D2App/components/Item/TextItem/Item.js","D2App/reducers/itemActiveTypes.js","D2App/actions/itemActiveTypes.js","D2App/reducers/visualizations.js","D2App/actions/visualizations.js","D2App/api/dataStatistics.js","D2App/modules/item.js","D2App/api/fetchVisualization.js","D2App/api/systemSettings.js","D2App/components/SystemSettingsProvider.js","D2App/components/Item/VisualizationItem/assets/icons.js","D2App/components/Item/VisualizationItem/FatalErrorBoundary.js","D2App/modules/getGridItemDomElementClassName.js","D2App/components/Item/VisualizationItem/getGridItemElement.js","D2App/components/Item/VisualizationItem/isElementFullscreen.js","D2App/components/OfflineTooltip.js","D2App/components/MenuItemWithTooltip.js","D2App/components/Item/VisualizationItem/getThematicMapViews.js","D2App/components/Item/VisualizationItem/ItemContextMenu/ViewAsMenuItems.js","D2App/components/Item/VisualizationItem/ItemContextMenu/ItemContextMenu.js","D2App/components/Item/VisualizationItem/ItemFooter.js","D2App/components/Item/VisualizationItem/memoizeOne.js","D2App/components/Item/VisualizationItem/Visualization/LoadingMask.js","D2App/components/Item/VisualizationItem/Visualization/VisualizationErrorMessage.js","D2App/components/Item/VisualizationItem/Visualization/DataVisualizerPlugin.js","D2App/components/Item/VisualizationItem/Visualization/getFilteredVisualization.js","D2App/components/Item/VisualizationItem/Visualization/getVisualizationConfig.js","D2App/components/Item/VisualizationItem/Visualization/DefaultPlugin.js","D2App/components/Item/VisualizationItem/Visualization/LegacyPlugin.js","D2App/components/Item/VisualizationItem/Visualization/NoVisualizationMessage.js","D2App/components/Item/VisualizationItem/Visualization/MapPlugin.js","D2App/components/Item/VisualizationItem/Visualization/Visualization.js","D2App/components/Item/VisualizationItem/Item.js","D2App/components/Item/Item.js","D2App/pages/print/printUtils.js","D2App/pages/print/StaticGrid.js","D2App/pages/print/PrintLayoutItemGrid.js","D2App/pages/print/PrintLayoutDashboard.js","D2App/api/messages.js","D2App/components/Item/MessagesItem/actions.js","D2App/modules/localStorage.js","D2App/actions/selected.js","D2App/components/ConfirmActionDialog.js","D2App/pages/edit/deleteDashboardMutation.js","D2App/modules/getFilteredDimensions.js","D2App/modules/useDimensions.js","D2App/actions/dimensions.js","D2App/pages/edit/FilterSettingsDialog.js","D2App/pages/edit/ActionsBar.js","D2App/components/ProgressiveLoadingContainer.js","D2App/pages/edit/ItemGrid.js","D2App/pages/edit/assets/LayoutFixed.js","D2App/pages/edit/assets/LayoutFreeflow.js","D2App/modules/useDebounce.js","D2App/pages/edit/ItemSelector/ContentMenuItem.js","D2App/pages/edit/ItemSelector/HeaderMenuItem.js","D2App/pages/edit/ItemSelector/selectableItems.js","D2App/pages/edit/ItemSelector/CategorizedMenuGroup.js","D2App/pages/edit/ItemSelector/actions.js","D2App/pages/edit/ItemSelector/ItemSearchField.js","D2App/pages/edit/ItemSelector/SinglesMenuGroup.js","D2App/pages/edit/ItemSelector/ItemSelector.js","D2App/pages/edit/ItemSelector/dashboardsQQuery.js","D2App/pages/edit/LayoutModal.js","D2App/pages/edit/TitleBar.js","D2App/pages/edit/EditDashboard.js","D2App/pages/edit/NewDashboard.js","D2App/pages/print/PrintItemGrid.js","D2App/pages/print/PrintDashboard.js","D2App/components/LoadingMask.js","D2App/reducers/dashboardsFilter.js","D2App/pages/view/DashboardsBar/assets/icons.js","D2App/pages/view/DashboardsBar/Chip.js","D2App/pages/view/DashboardsBar/assets/Clear.js","D2App/pages/view/DashboardsBar/ClearButton.js","D2App/pages/view/DashboardsBar/Filter.js","D2App/actions/dashboardsFilter.js","D2App/pages/view/DashboardsBar/getFilteredDashboards.js","D2App/pages/view/DashboardsBar/Content.js","D2App/pages/view/DashboardsBar/DragHandle.js","D2App/pages/view/DashboardsBar/ShowMoreButton.js","D2App/pages/view/DashboardsBar/DashboardsBar.js","D2App/pages/view/DashboardsBar/getRowsFromHeight.js","D2App/reducers/passiveViewRegistered.js","D2App/reducers/activeModalDimension.js","D2App/actions/activeModalDimension.js","D2App/pages/view/FilterBar/FilterBadge.js","D2App/pages/view/FilterBar/FilterBar.js","D2App/pages/view/ItemGrid.js","D2App/components/DropdownButton/assets/Arrow.js","D2App/components/DropdownButton/DropdownButton.js","D2App/pages/view/TitleBar/FilterDialog.js","D2App/pages/view/TitleBar/FilterSelector.js","D2App/pages/view/TitleBar/StarDashboardButton.js","D2App/pages/view/TitleBar/ActionsBar.js","D2App/pages/view/TitleBar/apiStarDashboard.js","D2App/pages/view/TitleBar/Description.js","D2App/pages/view/TitleBar/LastUpdatedTag.js","D2App/pages/view/TitleBar/TitleBar.js","D2App/pages/view/ViewDashboard.js","D2App/actions/passiveViewRegistered.js","D2App/pages/view/CacheableViewDashboard.js","D2App/components/App.js","D2App/reducers/index.js","D2App/configureStore.js","D2App/locales/index.js","D2App/AppWrapper.js","D2App/modules/itemTypes.js","D2App/components/Item/VisualizationItem/Visualization/plugin.js","D2App/components/Item/VisualizationItem/getVisualizationContainerDomId.js","D2App/components/Item/ItemHeader/styles/ItemHeader.module.css"],"names":["module","exports","getFormattedDate","value","uiLocale","global","Intl","DateTimeFormat","locale","year","month","day","format","Date","substr","replace","loadExternalScript","src","startsWith","path","process","join","normalizeRelativePath","Promise","resolve","reject","document","querySelector","isScriptLoaded","element","createElement","type","async","cleanup","console","log","head","removeChild","onload","e","onerror","error","appendChild","orArray","param","Array","isArray","orObject","isObject","arrayToIdMap","array","reduce","obj","item","id","validateReducer","defaultValue","undefined","SET_CONTROLBAR_USER_ROWS","combineReducers","userRows","state","action","sGetControlBarUserRows","controlBar","sGetControlBarRoot","NAMESPACE","getNamespace","d2","currentUser","dataStore","has","hasDashboardNamespace","get","create","apiPostUserDataStoreValue","key","getInstance","set","apiGetUserDataStoreValue","_ns$keys","ns","keys","find","k","KEY_CONTROLBAR_ROWS","acSetControlBarUserRows","rows","dashboardsQuery","resource","params","fields","paging","SET_DASHBOARDS","ADD_DASHBOARDS","SET_DASHBOARD_STARRED","EMPTY_DASHBOARDS","sGetDashboardsRoot","dashboards","sGetDashboardById","sGetDashboardStarred","starred","sDashboardsIsFetching","sGetAllDashboards","sGetStarredDashboards","Object","values","filter","dashboard","sGetUnstarredDashboards","tFetchDashboards","dispatch","getState","dataEngine","acSetDashboards","query","apiFetchDashboards","SET_SHOW_DESCRIPTION","sGetShowDescription","showDescription","KEY_SHOW_DESCRIPTION","acSetShowDescription","EDIT","NEW","VIEW","PRINT","PRINT_LAYOUT","isEditMode","mode","includes","isPrintMode","isViewMode","isSmallScreen","width","getBreakpoint","DASHBOARD_WRAPPER_LR_MARGIN_PX","GRID_COMPACT_TYPE","GRID_ROW_HEIGHT_PX","MARGIN_PX","MARGIN_SM_PX","GRID_PADDING_PX","NEW_ITEM_SHAPE","x","y","w","h","isNonNegativeInteger","Number","isInteger","hasShape","withShape","items","map","i","assign","col","row","Math","floor","itemWidth","MAX_ITEM_GRID_WIDTH","getShape","originalH","getGridWidth","windowWidthPx","getGridUnitsForSmFromPx","hPx","gridUnitHeightPx","round","getProportionalHeight","wPx","getItemWHPx","ratioWH","isVisualizationType","newWPx","newHPx","getGridItemProperties","itemId","minH","getPageBreakItemShape","yPos","isStatic","GRID_COLUMNS","static","getPrintTitlePageItemShape","isOneItemPerPage","gridUnits","colOrRowSize","marginPx","max","getAutoItemShapes","dashboardItems","columns","maxColUnits","numberOfColUnits","length","getNumberOfColUnits","slice","sort","a","b","sortItems","itemsWithNewShape","itemHeight","colIdx","rowIdx","push","updateItems","options","reload","acSetHideGrid","acUpdateDashboardItemShapes","setTimeout","hasLayout","layout","_layout$columns","getDashboardItem","_itemTypeMap$type","itemPropName","itemTypeMap","propName","generateUid","gridItemProperties","shape","PAGEBREAK","PRINT_TITLE_PAGE","position","content","spacerContent","emptyTextItemContent","isTextType","TEXT","text","convertUiItemsToBackend","SPACER","isUiSpacerType","convertBackendItemsToUi","isBackendSpacerType","gridProperties","getIdNameFields","rename","getDimensionFields","withItems","arrayClean","getAxesFields","getFavoriteFields","withDimensions","withOptions","baseDashboardFields","viewDashboardQuery","editDashboardQuery","apiFetchDashboard","forSave","variables","data","arrayFrom","d","_d$allowedFilters","name","displayName","description","displayDescription","created","lastUpdated","access","restrictFilters","allowedFilters","href","itemConfig","createDashboardMutation","updateDashboardMutation","skipTranslation","skipSharing","generatePayload","height","RECEIVED_EDIT_DASHBOARD","RECEIVED_NOT_EDITING","START_NEW_DASHBOARD","RECEIVED_TITLE","RECEIVED_DESCRIPTION","ADD_DASHBOARD_ITEM","REMOVE_DASHBOARD_ITEM","UPDATE_DASHBOARD_ITEM","RECEIVED_DASHBOARD_ITEM_SHAPES","SET_PRINT_PREVIEW_VIEW","CLEAR_PRINT_PREVIEW_VIEW","RECEIVED_FILTER_SETTINGS","RECEIVED_HIDE_GRID","RECEIVED_LAYOUT_COLUMNS","RECEIVED_ITEM_CONFIG_INSERT_POSITION","EMPTY_STATE_EDIT_DASHBOARD","DEFAULT_STATE_EDIT_DASHBOARD","update","delete","printPreviewView","isDirty","hideGrid","insertPosition","sGetEditDashboardRoot","editDashboard","sGetIsEditing","isEmpty","sGetIsPrintPreviewView","sGetEditDashboardItems","sGetEditIsDirty","sGetHideGrid","sGetLayout","getLayout","sGetLayoutColumns","sGetItemConfigInsertPosition","getItemConfig","sGetItemConfig","acClearEditDashboard","acUpdateDashboardItem","acRemoveDashboardItem","tSetDashboardItems","itemToAdd","itemIdToRemove","dashboardItemsWithShapes","newDashboardItem","addToItemsStart","mx","addToItemsEnd","tSaveDashboard","dashboardToSave","i18n","t","dashboardId","response","mutate","uid","updateDashboard","postDashboard","DashboardContainer","children","covered","React","className","cx","classes","container","NoContentMessage","Notice","title","message","CenteredContent","noticeContainer","NoticeBox","warning","WindowDimensionsCtx","createContext","windowDims","window","innerHeight","innerWidth","WindowDimensionsProvider","dimensions","setDimensions","useState","useEffect","handleResize","debounce","addEventListener","removeEventListener","Provider","useWindowDimensions","useContext","setHeaderbarVisible","show","header","getElementsByTagName","classList","remove","add","SET_PRINT_DASHBOARD","CLEAR_PRINT_DASHBOARD","ADD_PRINT_DASHBOARD_ITEM","SET_PRINT_DASHBOARD_LAYOUT","REMOVE_PRINT_DASHBOARD_ITEM","UPDATE_PRINT_DASHBOARD_ITEM","DEFAULT_STATE_PRINT_DASHBOARD","DEFAULT_DASHBOARD_ITEMS","NEW_PRINT_DASHBOARD_STATE","sGetPrintDashboardRoot","printDashboard","sGetPrintDashboardItems","_sGetPrintDashboardRo","acSetPrintDashboard","acClearPrintDashboard","acAddPrintDashboardItem","acUpdatePrintDashboardItem","PrintActionsBar","getExitPrintButton","isSmall","Button","buttonSmall","buttonLarge","small","IconChevronLeft24","color","colors","grey700","getPrintButton","onClick","print","actions","Link","link","to","defaultValues","PrintInfo","isLayout","layoutStyle","printSuggestions","divider","SET_DIMENSIONS","PE_OU_DIMENSIONS","getDimensionById","DIMENSION_ID_PERIOD","DIMENSION_ID_ORGUNIT","INITIAL_DIMENSIONS","CLEAR_ITEM_FILTERS","ADD_ITEM_FILTER","REMOVE_ITEM_FILTER","DEFAULT_STATE_ITEM_FILTERS","sGetItemFiltersRoot","itemFilters","sGetNamedItemFilters","createSelector","filters","arr","dimension","acRemoveItemFilter","acClearItemFilters","DeleteItemButton","Tooltip","placement","secondary","icon","IconDelete24","red600","dataTest","mapDispatchToProps","onDeleteItem","connect","itemActionsWrap","PrintWarning","IconWarning24","grey600","ViewItemActions","actionButtons","ItemHeader","forwardRef","dashboardMode","isShortened","rest","ref","Actions","EditItemActions","PrintItemInfo","getItemActionsMap","itemHeaderWrap","itemTitle","getIframeSrc","appDetails","iframeSrc","launchUrl","ouFilter","split","ownProps","_appDetails","_appDetails$settings","_appDetails$settings$","useD2","appKey","system","installedApps","app","hideTitle","settings","dashboardWidget","Fragment","shortened","Divider","margin","spacers","dp4","style","border","display","justifyContent","alignItems","IconQuestion24","grey500","getItemTitle","pluralTitle","removeItem","updateItem","baseUrl","useConfig","contentItems","index","findIndex","el","getContentItems","getLink","contentItem","removeButton","listItemType","newContent","updateDashboardItem","grey900","getItemUrl","list","itemContent","IconFileDocument16","RECEIVED_MESSAGES","sGetMessagesRoot","messages","userSettingsQuery","UserSettingsCtx","UserSettingsProvider","setSettings","engine","useDataEngine","userSettings","displayProperty","keyAnalysisDisplayProperty","fetchData","useUserSettings","PRIVATE","messageTypes","VALIDATION_RESULT","TICKET","SYSTEM","MessagesContainer","getMessageHref","msg","msgIdentifier","messageType","modeClass","sender","latestMsg","getMessageSender","readClass","read","msgDate","location","messageCount","keyUiLocale","snippet","getMessageItems","seeAll","NotSupportedItem","flexDirection","PageBreakItem","SET_SELECTED","CLEAR_SELECTED","DEFAULT_SELECTED_STATE","SELECTED_PROPERTIES","sGetSelected","selected","sGetSelectedId","sGetSelectedDashboardItems","PrintTitlePageItem","titlePage","filterTitle","listItems","filterListItem","val","filterList","getItemFilterList","defaultProps","sGetPrintDashboardName","sGetSelectedDisplayName","sGetPrintDashboardDescription","sGetSelectedDisplayDescription","fontSize","lineHeight","SpacerItem","props","textDiv","padding","whiteSpace","textField","fontStretch","marginBottom","marginTop","sGetIsPrinting","onChangeText","updatedItem","viewItem","textDivStyle","RichTextParser","editItem","RichTextEditor","onEdit","event","target","TextArea","placeholder","onChange","printItem","textItem","SET_ITEM_ACTIVE_TYPE","CLEAR_ITEM_ACTIVE_TYPES","DEFAULT_STATE_ITEM_ACTIVE_TYPES","sGetItemActiveType","itemActiveTypes","acClearItemActiveTypes","ADD_VISUALIZATION","CLEAR_VISUALIZATIONS","DEFAULT_STATE_VISUALIZATIONS","p","sGetVisualization","visualizations","sGetVisualizationsRoot","acClearVisualizations","apiPostDataStatistics","eventType","url","Api","getApi","post","getVisualizationFromItem","_itemTypeMap$item$typ","visualization","eventReport","eventChart","getVisualizationId","getVisualizationName","apiFetchVisualization","MAP","getEndPointName","DEFAULT_SETTINGS","keyDashboardContextMenuItemOpenInRelevantApp","keyDashboardContextMenuItemShowInterpretationsAndDetails","keyDashboardContextMenuItemSwitchViewType","keyDashboardContextMenuItemViewFullscreen","keyGatherAnalyticalObjectStatisticsInDashboardViews","SYSTEM_SETTINGS_REMAPPINGS","keyHideBiMonthlyPeriods","keyHideDailyPeriods","keyHideMonthlyPeriods","keyHideWeeklyPeriods","keyHideBiWeeklyPeriods","renameSystemSettings","mapped","systemSettingsQuery","SystemSettingsCtx","SystemSettingsProvider","systemSettings","useSystemSettings","Warning","xmlns","viewBox","fill","FatalErrorBoundary","Component","constructor","super","this","errorFound","componentDidCatch","info","setState","onFatalError","render","Function","prototype","getGridItemDomElementClassName","getGridItemElement","isElementFullscreen","fullscreenElement","webkitFullscreenElement","contains","disabledWhenOffline","online","useOnlineStatus","notAllowed","UiTooltip","openDelay","closeDelay","onMouseOver","onMouseOut","span","_extends","arguments","source","hasOwnProperty","call","apply","MenuItemWithTooltip","tooltip","label","offline","tooltipContent","MenuItem","dense","disabled","OfflineTooltip","getThematicMapViews","mapViews","mv","layer","ViewAsMenuItems","activeType","onActiveTypeChanged","isTrackerType","isTrackerDomainType","notSupported","CHART","EVENT_CHART","IconVisualizationColumn16","REPORT_TABLE","EVENT_REPORT","IconTable16","hasMapView","IconWorld16","ItemContextMenu","menuIsOpen","setMenuIsOpen","allowVisOpenInApp","allowVisShowInterpretations","allowVisViewAs","allowVisFullscreen","fullscreenAllowed","fullscreenSupported","loadItemFailed","closeMenu","canViewAs","isSingleValue","isYearOverYear","VIS_TYPE_GAUGE","VIS_TYPE_PIE","interpretationMenuLabel","activeFooter","buttonRef","createRef","itemHref","appUrl","onToggleFullscreen","IconFullscreenExit16","IconMore24","Popover","reference","arrow","onClickOutside","Menu","getItemTypeForVis","onSelectActiveType","IconLaunch16","appName","getAppName","IconMessages16","onToggleFooter","IconFullscreen16","ItemFooter","itemFooter","line","scrollContainer","InterpretationsComponent","toLowerCase","isOffline","memoizeOne","fn","lastArgs","lastValue","args","every","arg","LoadingMask","center","CircularLoader","VisualizationErrorMessage","visHref","grey400","transform","errorMessage","appLink","stopPropagation","rel","VisualizationPlugin","lazy","DataVisualizerPlugin","filterVersion","visualizationLoaded","setVisualizationLoaded","setError","onLoadingComplete","useCallback","Suspense","fallback","wrapper","forDashboard","onError","getFilteredVisualization","visRows","visColumns","visFilters","forEach","dimensionId","dimensionFound","dimensionObjects","getWithoutId","object","getVisualizationConfig","originalType","thematicMapViews","VIS_TYPE_COLUMN","VIS_TYPE_PIVOT_TABLE","getAdaptedUiLayoutByType","DefaultPlugin","credentials","auth","defaultHeaders","Authorization","prevItem","useRef","prevActiveType","prevFilterVersion","load","current","unmount","getVisualizationContainerDomId","LegacyPlugin","availableHeight","availableWidth","gridWidth","setViewportSize","clientWidth","clientHeight","NoVisualizationMessage","MapPlugin","applyFilters","isFullscreen","plugin","getPlugin","resize","resizeMap","setOfflineStatus","offlineStatus","setMapOfflineStatus","pluginIsAvailable","mapView","getVisualization","Visualization","memoizedGetFilteredVisualization","memoizedGetVisualizationConfig","getFilterVersion","uniqueId","visualizationConfig","VISUALIZATION","_defineProperty","defineProperty","enumerable","configurable","writable","Item","showFooter","configLoaded","requestFullscreen","webkitRequestFullscreen","exitFullscreen","webkitExitFullscreen","onToggleItemExpanded","getActiveType","setActiveType","isEditing","headerRef","itemHeaderTotalMargin","itemContentPadding","calculatedHeight","smallOriginalH","getItemHeightPx","memoizedGetContentHeight","contentRef","offsetHeight","_getGridItemElement","rect","getBoundingClientRect","getComputedStyle","documentElement","parseInt","getPropertyValue","measuredHeight","preferMeasured","setVisualization","getDataStatisticsName","isFullscreenSupported","Consumer","getAvailableHeight","getAvailableWidth","_ownProps$item","GridItem","VisualizationItem","MESSAGES","MessagesItem","REPORTS","RESOURCES","USERS","ListItem","TextItem","APP","AppItem","getGridItem","getTransformYPx","elStyle","_elStyle$transform$sp","transformY","match","isLeapPage","n","getMultiple","factor","multiple","StaticGrid","onLayoutChange","pageWidthPx","ReactGridLayout","cols","rowHeight","compactType","isDraggable","isResizable","draggableCancel","PrintLayoutItemGrid","newLayout","updateDashboardLayout","pageBreaks","sortedPageBreaks","sortBy","itemClassNames","isFirstPageBreak","getItemComponent","hideExtraPageBreaks","sortedElements","elements","types","elementsWithBoundingRect","from","indexOf","bottomY","getDomGridItemsSortedByYPos","querySelectorAll","pageBreakBottom","lastItemBottom","foundNonPageBreak","thisItemBottom","gridElement","maxHeight","firstBreak","scrollArea","scroll","componentDidMount","componentDidUpdate","getItemComponents","addPageBreaks","addDashboardItem","yPosList","pageNum","getPageBreakPositions","_ownProps$match","_ownProps$match$param","fromEdit","setPrintDashboard","redirectUrl","setRedirectUrl","isLoading","setIsLoading","customizePrintLayoutDashboard","dboard","loadDashboard","Redirect","Layer","translucent","editView","pageOuter","messageConversationsQuery","order","pageSize","tGetMessages","messageConversations","getMessages","err","storePreferredDashboardId","username","localStorage","setItem","acSetSelected","ConfirmActionDialog","onConfirm","onCancel","open","cancelLabel","confirmLabel","Modal","onClose","ModalTitle","ModalContent","ModalActions","ButtonStrip","destructive","deleteDashboardMutation","filteredDimensions","dim","dimensionType","dataDimensionType","useDimensions","doFetch","useSelector","useDispatch","fetchDimensions","unfilteredDimensions","apiFetchDimensions","acSetDimensions","getFilteredDimensions","RadioOptions","filtersSelectable","updateFilterDimensionRestrictability","radioButton","Radio","checked","payload","FilterSettingsDialog","initiallySelectedItems","setSelected","setFiltersSelectable","updateSelectedFilters","sItems","periodItem","Set","orgUnitItem","otherItems","closeDialog","large","descContainer","Transfer","filterable","leftHeader","transferHeader","maxSelections","Infinity","optionsWidth","rightHeader","selectedWidth","end","primary","saveFailedMessage","deleteFailedMessage","EditBar","_dashboard$access2","_dashboard$access3","_dashboard$access4","_dashboard$access5","_dashboard$access6","translationDlgIsOpen","setTranslationDlgIsOpen","filterSettingsDlgIsOpen","setFilterSettingsDlgIsOpen","confirmDeleteDlgIsOpen","setConfirmDeleteDlgIsOpen","confirmDiscardDlgIsOpen","setConfirmDiscardDlgIsOpen","saveFailureAlert","useAlert","critical","deleteFailureAlert","onConfirmDelete","onSave","saveDashboard","then","newId","clearSelected","catch","onPrintPreview","isPrintPreviewView","clearPrintPreview","clearPrintDashboard","showPrintPreview","onDiscardConfirmed","onDiscardChanges","onContinueEditing","onFilterSettingsConfirmed","filterSettingsRestrictability","selectedFilters","setFilterSettings","toggleFilterSettingsDialog","toggleTranslationDialog","editBar","controls","_dashboard$access","renderActionButtons","TranslationDialog","onRequestClose","objectToTranslate","modelDefinition","fieldsToTranslate","onTranslationError","onTranslationSaved","insertTheme","isOnline","dashboardName","fetchDashboards","acSetFilterSettings","observerConfig","attributes","childList","subtree","ProgressiveLoadingContainer","shouldLoad","passive","checkShouldLoad","containerRef","forceLoad","removeHandler","bufferPx","bufferFactor","bottom","top","registerHandler","debouncedCheckShouldLoad","debounceMs","getElementsByClassName","handlerOptions","observer","MutationObserver","mutationsList","mutation","attributeName","observe","disconnect","componentWillUnmount","eventProps","pick","PropTypes","node","isRequired","number","string","bool","setGridWidth","ResponsiveReactGridLayout","grid","lg","breakpoints","layouts","containerPadding","onWidthChange","containerWidth","LayoutFixedIcon","fillRule","LayoutFreeflowIcon","useDebounce","delay","debouncedValue","setDebouncedValue","handler","clearTimeout","LaunchLink","launchLink","InsertButton","buttonInsert","ContentMenuItem","onInsert","visType","ItemIcon","getItemIcon","renderedItemIcon","VisualizationIcon","visTypeIcons","menuItem","HeaderMenuItem","grey800","fontWeight","singleItems","categorizedItems","listItemTypes","tAddListItemContent","dashboardItemIndex","dashboardItem","onAddItem","hasMore","onChangeItemsLimit","seeMore","setSeeMore","addItem","newItem","itemUrl","showMoreButton","ItemSearchField","getInput","Input","onFocus","category","addToDashboard","ItemSelector","isOpen","setIsOpen","setFilter","setItems","maxOptions","setMaxOptions","debouncedFilterText","maxItems","count","getDashboardsQQuery","res","updateMaxOptions","inputRef","maxWidth","popover","FlyoutMenu","menu","itemType","endPointName","itemCount","getDefaultItemCount","allItems","displayItems","CategorizedMenuGroup","concat","SinglesMenuGroup","LayoutModal","onSaveLayout","setCols","option","active","radio","iconWrapper","activeIcon","activeOption","Boolean","columnOptions","InputField","inputWidth","toString","EditTitleBar","onChangeInsertPosition","onChangeTitle","onChangeDescription","showLayoutModal","setShowLayoutModal","inputWrapper","_","TextAreaField","searchContainer","layoutWrapper","layoutOption","layoutValue","numberOfColumns","positionWrapper","positionOptions","searchWrapper","selectedDashboard","setEditDashboard","hasUpdateAccess","setHasUpdateAccess","ActionsBar","LayoutPrintPreview","TitleBar","ItemGrid","notice","setNewDashboard","removeDashboardItem","_match$params","sortedItems","spacerCount","PrintItemGrid","SET_DASHBOARDS_FILTER","CLEAR_DASHBOARDS_FILTER","sGetDashboardsFilter","dashboardsFilter","ChevronDown","ChevronUp","OfflineSaved","Chip","useCacheableSection","chipProps","IconStarFilled24","white","debouncedPostStatistics","UiChip","labelWithAdornment","adornment","ClearIcon","ClearButton","onClear","button","setDashboardsFilter","clearDashboardsFilter","filterText","expanded","onKeypressEnter","onSearchClicked","focusedClassName","setFocusedClassName","inputFocused","setInputFocus","collapsed","searchButton","IconSearch24","searchArea","preventDefault","focused","onBlur","searchIconContainer","IconSearch16","input","onKeyUp","keyCode","focus","clearButtonContainer","getFilteredDashboards","filteredDashboards","arraySort","withRouter","selectedId","history","onChipClicked","onSelectDashboard","_getFilteredDashboard","enterNewMode","controlsSmall","Filter","chipsContainer","controlsLarge","buttonPadding","buttonPosition","newButton","IconAdd24","ComponentCover","DragHandle","onHeightChanged","setDragging","startingY","setStartingY","onDrag","currentY","clientY","requestAnimationFrame","onEndDrag","draghandle","onMouseDown","memo","ShowMoreButton","dashboardBarIsExpanded","buttonLabel","onButtonClicked","buttonEl","MouseEvent","bubbles","cancelable","dispatchEvent","showMore","DashboardsBar","updateUserRows","onExpandedChanged","dragging","mouseYPos","setMouseYPos","userRowsChanged","rootElement","newRows","getRowsFromHeight","min","setProperty","vh","apiPostControlBarRows","scrollToTop","memoizedToggleExpanded","memoizedCancelExpanded","bar","Content","spacer","REGISTER_PASSIVE_VIEW","sGetPassiveViewRegistered","passiveViewRegistered","SET_ACTIVE_MODAL_DIMENSION","CLEAR_ACTIVE_MODAL_DIMENSION","DEFAULT_STATE_ACTIVE_MODAL_DIMENSION","sGetActiveModalDimension","activeModalDimension","acSetActiveModalDimension","openFilterModal","onRemove","isCached","badge","badgeSmall","FilterBar","removeFilter","removeAllFilters","dialogIsOpen","setDialogIsOpen","onRemoveFilter","filterId","FilterBadge","expandedItems","setExpandedItems","setDisplayItems","layoutSm","setLayoutSm","setForceLoad","recordingState","getItemsWithAdjustedHeight","clickedId","isExpanded","newExpandedItems","expandedItem","expandedHeight","sm","ArrowDown","_JSXStyle","ArrowUp","DropdownButton","component","anchorRef","ArrowIconComponent","styles","transparent","Popper","addItemFilter","removeItemFilter","setFilters","onSelectItems","onDeselectItems","itemIdsToRemove","newList","onReorderItems","itemIds","oldList","reorderedList","getExcludedPeriodTypes","DAILY","WEEKLY","WEEKLYWED","WEEKLYTHU","WEEKLYSAT","WEEKLYSUN","BIWEEKLY","MONTHLY","BIMONTHLY","commonProps","onSelect","onDeselect","onReorder","selectedItems","PeriodDimension","selectedPeriods","excludedPeriodTypes","OrgUnitDimension","displayNameProperty","ouItems","DynamicDimension","dimensionTitle","displayNameProp","renderDialogContent","filterItems","clearActiveModalDimension","setActiveModalDimension","_props$allowedFilters","filterDialogIsOpen","setFilterDialogIsOpen","selectDimension","buttonContainer","IconFilter24","Card","DimensionsPanel","onDimensionClick","selectedIds","FilterDialog","StarDashboardButton","StarIcon","IconStar24","star","filtersLength","setDashboardStarred","isStarred","updateShowDescription","moreOptionsSmallIsOpen","setMoreOptionsSmallIsOpen","moreOptionsIsOpen","setMoreOptionsIsOpen","sharingDialogIsOpen","setSharingDialogIsOpen","confirmCacheDialogIsOpen","setConfirmCacheDialogIsOpen","startRecording","warningAlert","toggleMoreOptions","onToggleOfflineStatus","onUpdateOfflineCache","onToggleShowDescription","apiPostShowDescription","onToggleStarredDashboard","getStarDashboardMutation","getUnstarDashboardMutation","apiStarDashboard","onToggleSharingDialog","userAccess","getMoreButton","useSmall","strip","editButton","manage","shareButton","FilterSelector","moreButton","moreButtonSmall","SharingDialog","Description","desc","noDesc","LastUpdatedTag","moment","Tag","lastUpdatedTag","time","fromNow","titleBar","requestedId","requestedDashboardName","currentId","clearEditDashboard","registerPassiveView","fetchDashboard","some","setSelectedAsOffline","controlbarExpanded","setControlbarExpanded","loadingMessage","setLoadingMessage","loaded","setLoaded","loadFailed","setLoadFailed","requestedIsAvailable","switchingDashboard","alertTimeout","cover","AlertStack","AlertBar","onHidden","permanent","_dashboardToSelect","sGetDashboardsSortedByStarred","routeId","dashboardToSelect","lastStoredDashboardId","getItem","dash","dashboardsIsEmpty","dashboardsLoaded","dashboardsBarExpanded","setDashboardsBarExpanded","CacheableSection","loadingMask","ViewDashboard","setControlBarRows","controlBarRows","apiGetControlBarRows","setShowDescription","apiGetShowDescription","headerbarHeight","CssVariables","Router","Switch","Route","exact","NewDashboard","EditDashboard","PrintDashboard","PrintLayoutDashboard","newState","objectClean","conversations","$merge","$splice","$set","$unshift","idToRemove","stateItems","shapesHaveChanged","newStateItems","stateItem","si","layoutHasChanged","configureStore","middleware","thunk","withExtraArgument","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducer","applyMiddleware","namespace","addResources","arTranslations","ar_IQTranslations","ckbTranslations","csTranslations","daTranslations","enTranslations","esTranslations","frTranslations","idTranslations","kmTranslations","loTranslations","myTranslations","nbTranslations","prsTranslations","psTranslations","ptTranslations","pt_BRTranslations","ruTranslations","svTranslations","tetTranslations","tgTranslations","ukTranslations","urTranslations","uzTranslations","uz_CyrlTranslations","uz_LatnTranslations","viTranslations","zhTranslations","zh_CNTranslations","d2Config","schemas","authorization","REACT_APP_DHIS2_AUTHORIZATION","headers","AppWrapper","ReduxProvider","store","D2Shim","i18nRoot","App","DOMAIN_TYPE_AGGREGATE","DOMAIN_TYPE_TRACKER","domainType","defaultItemCount","dataStatisticsName","getTime","IconTable24","IconFileDocument24","IconVisualizationColumn24","IconWorld24","IconApps24","IconLink24","IconUser24","IconTextBox24","IconMail24","IconEmptyFrame24","itemTypeToGlobalVariable","itemTypeToScriptPath","hasIntegratedPlugin","pluginName","loadPlugin","config","globalName","scripts","scriptsPromise","all","fetchPlugin","loadingIndicator"],"mappings":"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","file":"static/js/app.284ba813.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"DashboardContainer_container__2PwUK\",\"covered\":\"DashboardContainer_covered__10XqJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"NoContentMessage_container__2Aub9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noticeContainer\":\"Notice_noticeContainer__3KDHx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PrintActionsBar_container__2EBX_\",\"actions\":\"PrintActionsBar_actions__2_vXA\",\"link\":\"PrintActionsBar_link__2fCaa\",\"buttonSmall\":\"PrintActionsBar_buttonSmall__1wcN_\",\"buttonLarge\":\"PrintActionsBar_buttonLarge__3kwwv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PrintInfo_container__1jB2t\",\"title\":\"PrintInfo_title__2MfuJ\",\"printSuggestions\":\"PrintInfo_printSuggestions__38G1G\",\"divider\":\"PrintInfo_divider__3ko2I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"warning\":\"PrintItemInfo_warning__123PK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Item_list__1_nkQ\",\"item\":\"Item_item__3-6QE\",\"itemContent\":\"Item_itemContent__2pyz-\",\"link\":\"Item_link___3c_q\",\"removeButton\":\"Item_removeButton__3kelh\"};","export const getFormattedDate = (value, uiLocale) => {\n  if (typeof global.Intl !== 'undefined' && Intl.DateTimeFormat) {\n    const locale = uiLocale || 'en';\n    return new Intl.DateTimeFormat(locale, {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    }).format(new Date(value));\n  }\n\n  return value.substr(0, 19).replace('T', ' ');\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Item_list__14BHv\",\"seeAll\":\"Item_seeAll__2mEvq\",\"sender\":\"Item_sender__3ojzC\",\"snippet\":\"Item_snippet__2Off5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"titlePage\":\"Item_titlePage__18CNQ\",\"name\":\"Item_name__3nuTV\",\"description\":\"Item_description__1gFQd\",\"filterTitle\":\"Item_filterTitle__2p7TQ\",\"filterList\":\"Item_filterList__qc_G3\",\"filterListItem\":\"Item_filterListItem__sPbBY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FatalErrorBoundary_container__3SViR\",\"icon\":\"FatalErrorBoundary_icon__2UbeP\",\"message\":\"FatalErrorBoundary_message__3FzrY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"span\":\"Tooltip_span__1vH5V\",\"notAllowed\":\"Tooltip_notAllowed__1i3bb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemFooter\":\"ItemFooter_itemFooter__3R_oD\",\"line\":\"ItemFooter_line__3Ko0R\",\"cover\":\"ItemFooter_cover__3C7gL\",\"scrollContainer\":\"ItemFooter_scrollContainer__tuq4P\"};","const isRelative = path => path.startsWith('./');\n\nconst normalizeRelativePath = path => [process.env.PUBLIC_URL, path.replace(/^\\.\\//, '')].join('/');\n\nconst isScriptLoaded = src => document.querySelector('script[src=\"' + src + '\"]') ? true : false;\n\nexport const loadExternalScript = src => {\n  if (isRelative(src)) {\n    src = normalizeRelativePath(src);\n  }\n\n  return new Promise((resolve, reject) => {\n    if (isScriptLoaded(src)) {\n      return resolve();\n    }\n\n    const element = document.createElement('script');\n    element.src = src;\n    element.type = 'text/javascript';\n    element.async = false;\n\n    const cleanup = () => {\n      console.log(`Dynamic Script Removed: ${src}`);\n      document.head.removeChild(element);\n    };\n\n    element.onload = () => {\n      console.log(`Dynamic Script Loaded: ${src}`);\n\n      try {\n        resolve();\n      } catch (e) {\n        cleanup();\n        reject();\n      }\n    };\n\n    element.onerror = () => {\n      console.error(`Dynamic Script Error: ${src}`);\n      cleanup();\n      reject();\n    };\n\n    document.head.appendChild(element);\n  });\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"center\":\"LoadingMask_center__KHIYy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"DataVisualizerPlugin_wrapper__3_M-Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"center\":\"VisualizationErrorMessage_center__2qYSm\",\"errorMessage\":\"VisualizationErrorMessage_errorMessage__3nCRf\",\"appLink\":\"VisualizationErrorMessage_appLink__bguER\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"NoVisualizationMessage_message__22IPi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PrintLayoutDashboard_container__3SXqv\",\"wrapper\":\"PrintLayoutDashboard_wrapper__2hsUa\",\"editView\":\"PrintLayoutDashboard_editView__11x2D\",\"pageOuter\":\"PrintLayoutDashboard_pageOuter__CkoEZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ConfirmActionDialog_content__2tWgR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descContainer\":\"FilterSettingsDialog_descContainer__2wKaB\",\"radioButton\":\"FilterSettingsDialog_radioButton__38B7A\",\"transferHeader\":\"FilterSettingsDialog_transferHeader__105SW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editBar\":\"ActionsBar_editBar__P9kaO\",\"controls\":\"ActionsBar_controls__3Y3i1\",\"offline\":\"ActionsBar_offline__3jmca\",\"online\":\"ActionsBar_online__1bkTr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"ItemGrid_grid__1pIMt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"EditDashboard_container__2H9lQ\",\"notice\":\"EditDashboard_notice__Ho_Ks\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuItem\":\"ContentMenuItem_menuItem__3OEIQ\",\"launchLink\":\"ContentMenuItem_launchLink__13wRn\",\"label\":\"ContentMenuItem_label__1kS6o\",\"buttonInsert\":\"ContentMenuItem_buttonInsert__3rvGo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"HeaderMenuItem_item__3xBhl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"showMoreButton\":\"CategorizedMenuGroup_showMoreButton__36Y5A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ItemSearchField_label__1EJlb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"ItemSelector_menu__1jnIl\",\"popover\":\"ItemSelector_popover__1JI8S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"option\":\"LayoutModal_option__1BEWQ\",\"activeOption\":\"LayoutModal_activeOption__2UKST\",\"radio\":\"LayoutModal_radio__1j4Wk\",\"iconWrapper\":\"LayoutModal_iconWrapper__AD1_U\",\"activeIcon\":\"LayoutModal_activeIcon___VBGY\",\"title\":\"LayoutModal_title__ccDFI\",\"description\":\"LayoutModal_description__3KKos\",\"columnOptions\":\"LayoutModal_columnOptions__3mXbQ\",\"gap\":\"LayoutModal_gap__3Mafe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"TitleBar_container__8R5oB\",\"inputWrapper\":\"TitleBar_inputWrapper__17zVQ\",\"searchContainer\":\"TitleBar_searchContainer__172-Z\",\"searchWrapper\":\"TitleBar_searchWrapper__17o_U\",\"layoutWrapper\":\"TitleBar_layoutWrapper__1a22O\",\"positionWrapper\":\"TitleBar_positionWrapper__xzdM6\",\"label\":\"TitleBar_label__17T4v\",\"layoutValue\":\"TitleBar_layoutValue__2x2yg\",\"layoutOption\":\"TitleBar_layoutOption__1nAfD\",\"positionOptions\":\"TitleBar_positionOptions__312vW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"NewDashboard_container__3vGiA\",\"notice\":\"NewDashboard_notice__2rtDL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PrintDashboard_container__1eUFy\",\"wrapper\":\"PrintDashboard_wrapper__3vfN1\",\"pageOuter\":\"PrintDashboard_pageOuter__G7Kho\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Chip_link__2j6Lw\",\"labelWithAdornment\":\"Chip_labelWithAdornment__agoot\",\"adornment\":\"Chip_adornment__2xtgh\",\"selected\":\"Chip_selected__2rnKo\",\"progressIndicator\":\"Chip_progressIndicator__2f8yl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ClearButton_button__3VpUG\",\"icon\":\"ClearButton_icon__3aaNL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchArea\":\"Filter_searchArea__NEQQ-\",\"input\":\"Filter_input__shCTR\",\"focused\":\"Filter_focused__3jQgr\",\"searchButton\":\"Filter_searchButton__bmV7v\",\"searchIconContainer\":\"Filter_searchIconContainer__1S51H\",\"clearButtonContainer\":\"Filter_clearButtonContainer__qb3j6\",\"collapsed\":\"Filter_collapsed__2fp07\",\"expanded\":\"Filter_expanded__38GiU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Content_container__2aUo2\",\"controlsSmall\":\"Content_controlsSmall__xUmRw\",\"controlsLarge\":\"Content_controlsLarge__2s0Pa\",\"buttonPadding\":\"Content_buttonPadding__1lwl6\",\"buttonPosition\":\"Content_buttonPosition__2pNbo\",\"chipsContainer\":\"Content_chipsContainer__2sJmw\",\"newLink\":\"Content_newLink__YgAbP\",\"collapsed\":\"Content_collapsed__3GRXj\",\"expanded\":\"Content_expanded__k2nqc\",\"controls\":\"Content_controls__3jHuc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"draghandle\":\"DragHandle_draghandle__sERVr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ShowMoreButton_container__3fEwL\",\"showMore\":\"ShowMoreButton_showMore__1FPeJ\",\"disabled\":\"ShowMoreButton_disabled__2wwxj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bar\":\"DashboardsBar_bar__998a6\",\"container\":\"DashboardsBar_container__z0Cs4\",\"content\":\"DashboardsBar_content__6Oh0n\",\"expanded\":\"DashboardsBar_expanded__10cS8\",\"spacer\":\"DashboardsBar_spacer__1y2rQ\",\"collapsed\":\"DashboardsBar_collapsed__3MY1p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FilterBadge_container__3tGhK\",\"badge\":\"FilterBadge_badge__1_Inq\",\"badgeSmall\":\"FilterBadge_badgeSmall__eEMLp\",\"removeButton\":\"FilterBadge_removeButton__3i9CK\",\"span\":\"FilterBadge_span__340Kx\",\"notAllowed\":\"FilterBadge_notAllowed__2NEIc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bar\":\"FilterBar_bar__1XjvP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"ItemGrid_grid__3RId_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ViewDashboard_container__2Sa9Z\",\"cover\":\"ViewDashboard_cover__3E6k_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"arrow\":\"DropdownButton_arrow__3SBa4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonContainer\":\"FilterSelector_buttonContainer__3yctX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"star\":\"StarDashboardButton_star__3lBqk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"actions\":\"ActionsBar_actions__2S7Bp\",\"strip\":\"ActionsBar_strip__1BGo5\",\"moreButtonSmall\":\"ActionsBar_moreButtonSmall__j9bcw\",\"editButton\":\"ActionsBar_editButton__1vO5Q\",\"shareButton\":\"ActionsBar_shareButton__2oyZG\",\"moreButton\":\"ActionsBar_moreButton__24qQ-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"desc\":\"Description_desc__mrRlu\",\"noDesc\":\"Description_noDesc__2FBxT\",\"descContainer\":\"Description_descContainer__3T4PO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"lastUpdatedTag\":\"LastUpdatedTag_lastUpdatedTag__1Gm5J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"TitleBar_container__DnAGn\",\"titleBar\":\"TitleBar_titleBar__3Lh6b\",\"title\":\"TitleBar_title__s0IFk\"};","import isObject from 'lodash/isObject';\nexport function orArray(param) {\n  return Array.isArray(param) ? param : [];\n}\nexport function orObject(param) {\n  return isObject(param) ? param : {};\n} // object\n\nexport function arrayToIdMap(array) {\n  return array.reduce((obj, item) => {\n    obj[item.id] = item;\n    return obj;\n  }, {});\n} // reducer validator\n\nexport const validateReducer = (value, defaultValue) => value === undefined || value === null ? defaultValue : value;","/** @module reducers/controlBar */\nimport { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\nexport const SET_CONTROLBAR_USER_ROWS = 'SET_CONTROLBAR_USER_ROWS';\nexport const DEFAULT_STATE_CONTROLBAR_ROWS = 1;\n\nconst userRows = (state = DEFAULT_STATE_CONTROLBAR_ROWS, action) => {\n  switch (action.type) {\n    case SET_CONTROLBAR_USER_ROWS:\n      return validateReducer(action.value, DEFAULT_STATE_CONTROLBAR_ROWS);\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  userRows\n});\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\n\nconst sGetControlBarRoot = state => state.controlBar; // Selector dependency level 2\n\n\nexport const sGetControlBarUserRows = state => sGetControlBarRoot(state).userRows;","import { getInstance } from 'd2';\nexport const NAMESPACE = 'dashboard';\nexport const hasDashboardNamespace = async d2 => await d2.currentUser.dataStore.has(NAMESPACE);\nexport const getNamespace = async d2 => {\n  const hasNamespace = await hasDashboardNamespace(d2);\n  return hasNamespace ? await d2.currentUser.dataStore.get(NAMESPACE) : await d2.currentUser.dataStore.create(NAMESPACE);\n};\nexport const apiPostUserDataStoreValue = async (key, value) => {\n  const d2 = await getInstance();\n  const ns = await getNamespace(d2);\n  return ns.set(key, value);\n};\nexport const apiGetUserDataStoreValue = async (key, defaultValue) => {\n  var _ns$keys;\n\n  const d2 = await getInstance();\n  const ns = await getNamespace(d2);\n  const hasKey = ns === null || ns === void 0 ? void 0 : (_ns$keys = ns.keys) === null || _ns$keys === void 0 ? void 0 : _ns$keys.find(k => k === key);\n\n  if (hasKey) {\n    return await ns.get(key);\n  } else {\n    await apiPostUserDataStoreValue(key, defaultValue, ns);\n    console.log('(These errors to /userDataStore can be ignored)');\n    return defaultValue;\n  }\n};","import { DEFAULT_STATE_CONTROLBAR_ROWS } from '../reducers/controlBar';\nimport { apiGetUserDataStoreValue, apiPostUserDataStoreValue } from './userDataStore';\nconst KEY_CONTROLBAR_ROWS = 'controlBarRows';\nexport const apiGetControlBarRows = async () => await apiGetUserDataStoreValue(KEY_CONTROLBAR_ROWS, DEFAULT_STATE_CONTROLBAR_ROWS);\nexport const apiPostControlBarRows = async value => await apiPostUserDataStoreValue(KEY_CONTROLBAR_ROWS, value);","import { apiGetControlBarRows } from '../api/controlBar';\nimport { SET_CONTROLBAR_USER_ROWS } from '../reducers/controlBar'; // actions\n\nexport const acSetControlBarUserRows = rows => ({\n  type: SET_CONTROLBAR_USER_ROWS,\n  value: rows\n}); // thunks\n\nexport const tSetControlBarRows = () => async dispatch => {\n  const onSuccess = rows => {\n    dispatch(acSetControlBarUserRows(rows));\n  };\n\n  const onError = error => {\n    console.log('Error (apiGetControlBarRows): ', error);\n    return error;\n  };\n\n  try {\n    const controlBarRows = await apiGetControlBarRows();\n    return onSuccess(controlBarRows);\n  } catch (err) {\n    return onError(err);\n  }\n};","export const dashboardsQuery = {\n  resource: 'dashboards',\n  params: {\n    fields: ['id', 'displayName', 'favorite~rename(starred)'],\n    paging: false\n  }\n};\nexport const apiFetchDashboards = async dataEngine => {\n  try {\n    const dashboardsData = await dataEngine.query({\n      dashboards: dashboardsQuery\n    });\n    return dashboardsData.dashboards.dashboards;\n  } catch (error) {\n    console.log('Error: ', error);\n  }\n};","/** @module reducers/dashboards */\nimport arraySort from 'd2-utilizr/lib/arraySort';\nimport { orObject } from '../modules/util';\nexport const SET_DASHBOARDS = 'SET_DASHBOARDS';\nexport const ADD_DASHBOARDS = 'ADD_DASHBOARDS';\nexport const SET_DASHBOARD_STARRED = 'SET_DASHBOARD_STARRED';\nexport const EMPTY_DASHBOARDS = {};\nexport const DEFAULT_STATE_DASHBOARDS = null;\n/**\n * Reducer that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n * @returns {Object}\n */\n\nexport default ((state = DEFAULT_STATE_DASHBOARDS, action) => {\n  switch (action.type) {\n    case SET_DASHBOARDS:\n      {\n        return action.value;\n      }\n\n    case ADD_DASHBOARDS:\n      {\n        return { ...state,\n          ...action.value\n        };\n      }\n\n    case SET_DASHBOARD_STARRED:\n      {\n        return { ...state,\n          [action.id]: { ...state[action.id],\n            starred: action.value\n          }\n        };\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetDashboardsRoot = state => state.dashboards; // selector level 1\n\n/**\n * Selector which returns a dashboard by id from the state object\n * If no matching dashboard is found it returns undefined\n * If dashboards is null, then the dashboards api request\n * has not yet completed. If dashboards is an empty object\n * then the dashboards api request is complete, but no dashboards\n * were returned\n *\n * @function\n * @param {Object} state The current state\n * @param {Number} id The id of the dashboard\n * @returns {Object | undefined}\n */\n\nexport const sGetDashboardById = (state, id) => (sGetDashboardsRoot(state) || EMPTY_DASHBOARDS)[id];\nexport const sGetDashboardStarred = (state, id) => sGetDashboardById(state, id).starred;\nexport const sDashboardsIsFetching = state => {\n  return sGetDashboardsRoot(state) === null;\n};\n/**\n * Selector which returns all dashboards\n *\n * @function\n * @param {Object} state The current state\n * @returns {Object | undefined}\n */\n\nexport const sGetAllDashboards = state => orObject(sGetDashboardsRoot(state)); // selector level 2\n\nconst sGetStarredDashboards = state => Object.values(sGetAllDashboards(state)).filter(dashboard => dashboard.starred === true);\n\nconst sGetUnstarredDashboards = state => Object.values(sGetAllDashboards(state)).filter(dashboard => dashboard.starred === false); // selector level 3\n\n\nexport const sGetDashboardsSortedByStarred = state => [...arraySort(sGetStarredDashboards(state), 'ASC', 'displayName'), ...arraySort(sGetUnstarredDashboards(state), 'ASC', 'displayName')];","import { apiFetchDashboards } from '../api/fetchAllDashboards';\nimport { arrayToIdMap } from '../modules/util';\nimport { SET_DASHBOARDS, ADD_DASHBOARDS, SET_DASHBOARD_STARRED } from '../reducers/dashboards'; // actions\n\nexport const acSetDashboards = dashboards => ({\n  type: SET_DASHBOARDS,\n  value: arrayToIdMap(dashboards)\n});\nexport const acAppendDashboards = dashboards => ({\n  type: ADD_DASHBOARDS,\n  value: arrayToIdMap(dashboards)\n});\nexport const acSetDashboardStarred = (id, isStarred) => ({\n  type: SET_DASHBOARD_STARRED,\n  id,\n  value: isStarred\n}); // thunks\n\nexport const tFetchDashboards = () => async (dispatch, getState, dataEngine) => {\n  const dashboards = await apiFetchDashboards(dataEngine);\n  return dispatch(acSetDashboards(dashboards));\n};","export const SET_SHOW_DESCRIPTION = 'SET_SHOW_DESCRIPTION';\nexport const DEFAULT_STATE_SHOW_DESCRIPTION = false;\nexport default ((state = DEFAULT_STATE_SHOW_DESCRIPTION, action) => {\n  switch (action.type) {\n    case SET_SHOW_DESCRIPTION:\n      {\n        return action.value;\n      }\n\n    default:\n      return state;\n  }\n});\nexport const sGetShowDescription = state => state.showDescription;","import { DEFAULT_STATE_SHOW_DESCRIPTION } from '../reducers/showDescription';\nimport { apiGetUserDataStoreValue, apiPostUserDataStoreValue } from './userDataStore';\nconst KEY_SHOW_DESCRIPTION = 'showDescription';\nexport const apiGetShowDescription = async () => await apiGetUserDataStoreValue(KEY_SHOW_DESCRIPTION, DEFAULT_STATE_SHOW_DESCRIPTION);\nexport const apiPostShowDescription = value => apiPostUserDataStoreValue(KEY_SHOW_DESCRIPTION, value);","import { apiGetShowDescription } from '../api/description';\nimport { SET_SHOW_DESCRIPTION } from '../reducers/showDescription';\nexport const acSetShowDescription = value => ({\n  type: SET_SHOW_DESCRIPTION,\n  value\n});\nexport const tSetShowDescription = () => async dispatch => {\n  const onSuccess = value => {\n    dispatch(acSetShowDescription(value));\n  };\n\n  try {\n    const showDescription = await apiGetShowDescription();\n    return onSuccess(showDescription);\n  } catch (err) {\n    console.error('Error (apiGetShowDescription): ', err);\n    return err;\n  }\n};","export const EDIT = 'edit';\nexport const NEW = 'new';\nexport const VIEW = 'view';\nexport const PRINT = 'print';\nexport const PRINT_LAYOUT = 'print-layout';\nexport const isEditMode = mode => [EDIT, NEW].includes(mode);\nexport const isPrintMode = mode => [PRINT, PRINT_LAYOUT].includes(mode);\nexport const isViewMode = mode => mode === VIEW;","import { DASHBOARD_WRAPPER_LR_MARGIN_PX } from './gridUtil';\nconst SMALL_SCREEN_BREAKPOINT = 480;\nexport const isSmallScreen = width => width <= SMALL_SCREEN_BREAKPOINT;\nexport const getBreakpoint = () => SMALL_SCREEN_BREAKPOINT - DASHBOARD_WRAPPER_LR_MARGIN_PX;","// Dimensions for the react-grid-layout\nimport { generateUid } from 'd2/uid';\nimport sortBy from 'lodash/sortBy';\nimport { acSetHideGrid, acUpdateDashboardItemShapes } from '../actions/editDashboard';\nimport { isVisualizationType, itemTypeMap, PAGEBREAK, PRINT_TITLE_PAGE } from './itemTypes';\nimport { isSmallScreen } from './smallScreen';\nexport const GRID_COMPACT_TYPE = 'vertical'; // vertical | horizonal | null\n\nexport const GRID_ROW_HEIGHT_PX = 10;\nexport const MARGIN_PX = [10, 10];\nconst SM_SCREEN_MIN_ITEM_GRID_HEIGHT = 13; // minimum of ~320px\n\nexport const SM_SCREEN_GRID_COLUMNS = 1;\nexport const MARGIN_SM_PX = [0, 16];\nexport const GRID_PADDING_PX = [0, 0]; // sum of left+right padding of dashboard-wrapper (App.css)\n\nexport const DASHBOARD_WRAPPER_LR_MARGIN_PX = 32; // make an assumption about the original item w/h ratio\n// assumes grid width of ~1200px at time dashboard was created\n\nconst GRID_COL_WIDTH_PX = 10;\nexport const GRID_COLUMNS = 60; // Dimensions for getShape\n\nexport const NEW_ITEM_SHAPE = {\n  x: 0,\n  y: 0,\n  w: 20,\n  h: 29\n};\nconst NUMBER_OF_ITEM_COLS = 2;\nconst MAX_ITEM_GRID_WIDTH = GRID_COLUMNS - 1;\nexport const MAX_ITEM_GRID_HEIGHT = 34;\nexport const MAX_ITEM_GRID_HEIGHT_OIPP = 35;\nexport const MAX_ITEM_GRID_WIDTH_OIPP = 56;\nconst MIN_ITEM_GRID_HEIGHT = 4; // isNonNegativeInteger\n\nconst isNonNegativeInteger = x => Number.isInteger(x) && x >= 0; // Does the item have all the shape properties?\n\n\nexport const hasShape = item => isNonNegativeInteger(item.x) && isNonNegativeInteger(item.y) && isNonNegativeInteger(item.w) && isNonNegativeInteger(item.h); // returns a rectangular grid block dimensioned with x, y, w, h in grid units.\n// based on a grid with 3 items across\n\nconst getShape = i => {\n  const col = i % NUMBER_OF_ITEM_COLS;\n  const row = Math.floor(i / NUMBER_OF_ITEM_COLS);\n  const itemWidth = Math.floor(MAX_ITEM_GRID_WIDTH / NUMBER_OF_ITEM_COLS);\n  const itemHeight = GRID_ROW_HEIGHT_PX * 2;\n  return {\n    x: col * itemWidth,\n    y: row * itemHeight,\n    w: itemWidth,\n    h: itemHeight\n  };\n};\n/**\n * Returns an array of items containing the x, y, w, h dimensions\n * and the item's originalheight in pixels\n * and dimensions to create the small layout (x, y, w, h)\n * @function\n * @param {Array} items\n * @returns {Array}\n */\n\n\nexport const withShape = (items = []) => {\n  const itemsWithShape = items.map((item, i) => hasShape(item) ? item : Object.assign({}, item, getShape(i)));\n  return itemsWithShape.map(item => Object.assign({}, item, {\n    originalH: item.h\n  }));\n};\nexport const getGridWidth = windowWidthPx => windowWidthPx - DASHBOARD_WRAPPER_LR_MARGIN_PX;\n\nconst getGridUnitsForSmFromPx = hPx => {\n  const gridUnitHeightPx = GRID_ROW_HEIGHT_PX + MARGIN_SM_PX[1];\n  return Math.round((hPx + MARGIN_SM_PX[1]) / gridUnitHeightPx);\n};\n\nexport const getProportionalHeight = (item, windowWidthPx) => {\n  // get w/h ratio of the original item\n  const wPx = getItemWHPx(item.w, GRID_COL_WIDTH_PX, MARGIN_PX[0]);\n  const hPx = getItemWHPx(item.h, GRID_ROW_HEIGHT_PX, MARGIN_PX[1]);\n  const ratioWH = wPx / hPx;\n\n  if (!isVisualizationType(item)) {\n    return getGridUnitsForSmFromPx(hPx);\n  }\n\n  const gridWidthPx = getGridWidth(windowWidthPx); // get new height in px based on the ratio\n\n  const newColWidthPx = (gridWidthPx - MARGIN_SM_PX[0] * (SM_SCREEN_GRID_COLUMNS - 1) - GRID_PADDING_PX[0] * 2) / SM_SCREEN_GRID_COLUMNS;\n  const newWPx = newColWidthPx * SM_SCREEN_GRID_COLUMNS;\n  const newHPx = Math.round(newWPx / ratioWH); //convert height in px back to grid units\n\n  const h = getGridUnitsForSmFromPx(newHPx); // item must be at least the set minimum\n\n  return h < SM_SCREEN_MIN_ITEM_GRID_HEIGHT ? SM_SCREEN_MIN_ITEM_GRID_HEIGHT : h;\n};\nexport const getSmallLayout = (items, windowWidthPx) => sortBy(items, ['y', 'x']).map((item, i) => Object.assign({}, item, {\n  x: 0,\n  y: i,\n  w: SM_SCREEN_GRID_COLUMNS,\n  h: getProportionalHeight(item, windowWidthPx)\n}));\nexport const getGridItemProperties = itemId => {\n  return {\n    i: itemId,\n    minH: MIN_ITEM_GRID_HEIGHT\n  };\n};\nexport const getPageBreakItemShape = (yPos, isStatic = true) => {\n  return {\n    x: 0,\n    y: yPos,\n    w: MAX_ITEM_GRID_WIDTH,\n    h: 5,\n    static: !!isStatic,\n    minH: 1\n  };\n};\nexport const getPrintTitlePageItemShape = isOneItemPerPage => {\n  return {\n    x: 0,\n    y: 0,\n    w: isOneItemPerPage ? MAX_ITEM_GRID_WIDTH_OIPP : MAX_ITEM_GRID_WIDTH,\n    h: MAX_ITEM_GRID_HEIGHT,\n    static: true,\n    minH: 1\n  };\n};\n/**\n * Calculates the grid item's height in pixels based\n * on the height in grid units. This calculation\n * is copied directly from react-grid-layout\n * calculateUtils.js (calcGridItemWHPx)\n *\n * Each row's px height is the sum of the GRID_ROW_HEIGHT_PX + MARGIN-Y\n * So the calculation is:\n * GRID_ROW_HEIGHT_PX * Number of rows\n * +\n * yMargin * Number of rows-1\n *\n * @param {Object} item item containing shape (x, y, w, h)\n */\n\nexport const getItemHeightPx = (item, windowWidthPx) => {\n  if (isSmallScreen(windowWidthPx)) {\n    const h = item.smallOriginalH ? item.smallOriginalH : getProportionalHeight(item, windowWidthPx);\n    return getItemWHPx(h, GRID_ROW_HEIGHT_PX, MARGIN_SM_PX[1]);\n  }\n\n  return getItemWHPx(item.originalH, GRID_ROW_HEIGHT_PX, MARGIN_PX[1]);\n};\n\nconst getItemWHPx = (gridUnits, colOrRowSize, marginPx) => Math.round(colOrRowSize * gridUnits + Math.max(0, gridUnits - 1) * marginPx); // Auto layout\n\n\nconst getNumberOfColUnits = (columns, maxColUnits = GRID_COLUMNS) => {\n  if (columns.length < 1 || columns.length > maxColUnits) {\n    return null;\n  }\n\n  return Math.floor(maxColUnits / columns.length);\n};\n\nconst sortItems = items => items.slice().sort((a, b) => a.y - b.y || a.x - b.x || a.h - b.h || a.w - b.w);\n\nexport const getAutoItemShapes = (dashboardItems, columns, maxColUnits) => {\n  const numberOfColUnits = getNumberOfColUnits(columns, maxColUnits);\n\n  if (!numberOfColUnits || !dashboardItems.length) {\n    return null;\n  }\n\n  const items = sortItems(dashboardItems);\n  const itemsWithNewShape = [];\n  const itemHeight = NEW_ITEM_SHAPE.h;\n\n  for (let i = 0, colIdx = 0, rowIdx = 0, item; i < items.length; i++) {\n    item = items[i];\n    itemsWithNewShape.push({ ...item,\n      w: numberOfColUnits,\n      h: itemHeight,\n      x: numberOfColUnits * colIdx,\n      y: itemHeight * rowIdx\n    });\n    colIdx = colIdx + 1;\n\n    if (colIdx === columns.length) {\n      colIdx = 0;\n      rowIdx = rowIdx + 1;\n    }\n  }\n\n  return itemsWithNewShape;\n};\nexport const addToItemsStart = (dashboardItems, columns, newDashboardItem) => {\n  if (!columns.length) {\n    // when no layout\n    return [{ ...NEW_ITEM_SHAPE,\n      ...newDashboardItem\n    }, ...dashboardItems];\n  } else {\n    return getAutoItemShapes([...dashboardItems, { ...newDashboardItem,\n      x: 0,\n      y: 0,\n      w: 0,\n      h: 0\n    }], columns);\n  }\n};\nexport const addToItemsEnd = (dashboardItems, columns, newDashboardItem) => {\n  const items = [...dashboardItems, { ...NEW_ITEM_SHAPE,\n    ...newDashboardItem,\n    y: dashboardItems.reduce((mx, item) => Math.max(mx, item.y + item.h), 0)\n  }];\n  return columns.length ? getAutoItemShapes(items, columns) : items;\n};\nexport const updateItems = (items, dispatch, options = {}) => {\n  const {\n    reload\n  } = options;\n\n  if (reload) {\n    dispatch(acSetHideGrid(true));\n    dispatch(acUpdateDashboardItemShapes(items));\n    setTimeout(() => dispatch(acSetHideGrid(false)), 0);\n  } else {\n    dispatch(acUpdateDashboardItemShapes(items));\n  }\n};\nexport const hasLayout = layout => {\n  var _layout$columns;\n\n  return layout === null || layout === void 0 ? void 0 : (_layout$columns = layout.columns) === null || _layout$columns === void 0 ? void 0 : _layout$columns.length;\n};\nexport const getDashboardItem = item => {\n  var _itemTypeMap$type;\n\n  const type = item.type;\n  const itemPropName = (_itemTypeMap$type = itemTypeMap[type]) === null || _itemTypeMap$type === void 0 ? void 0 : _itemTypeMap$type.propName;\n  const id = generateUid();\n  const gridItemProperties = getGridItemProperties(id);\n  let shape;\n\n  if (type === PAGEBREAK) {\n    const yPos = item.yPos || 0;\n    shape = getPageBreakItemShape(yPos, item.isStatic);\n  } else if (type === PRINT_TITLE_PAGE) {\n    shape = getPrintTitlePageItemShape();\n  } else {\n    shape = NEW_ITEM_SHAPE;\n  }\n\n  return {\n    id,\n    type,\n    position: item.position || null,\n    [itemPropName]: item.content,\n    ...NEW_ITEM_SHAPE,\n    ...gridItemProperties,\n    ...shape\n  };\n};","import { getGridItemProperties } from './gridUtil';\nimport { TEXT, SPACER } from './itemTypes';\nexport const spacerContent = 'SPACER_ITEM_FOR_DASHBOARD_LAYOUT_CONVENIENCE';\nexport const emptyTextItemContent = 'TEXT_ITEM_WITH_NO_CONTENT';\n\nconst isBackendSpacerType = item => item.type === TEXT && item.text === spacerContent;\n\nconst isUiSpacerType = item => item.type === SPACER;\n\nconst isTextType = item => item.type === TEXT && item.text !== spacerContent;\n\nexport const convertUiItemsToBackend = items => items.map(item => {\n  let text = null;\n\n  if (isUiSpacerType(item)) {\n    text = spacerContent;\n  } else if (isTextType(item)) {\n    text = item.text || emptyTextItemContent;\n  }\n\n  return { ...item,\n    ...(text ? {\n      text\n    } : {})\n  };\n});\nexport const convertBackendItemsToUi = items => items.map(item => {\n  const type = isBackendSpacerType(item) ? SPACER : item.type;\n  const gridProperties = getGridItemProperties(item.id);\n  const text = isTextType(item) ? item.text === emptyTextItemContent ? '' : item.text : null;\n  return { ...item,\n    ...(text !== null ? {\n      text\n    } : {}),\n    type,\n    ...gridProperties\n  };\n});","import arrayClean from 'd2-utilizr/lib/arrayClean'; // Id, name\n\nexport const getIdNameFields = ({\n  rename\n} = {}) => ['id', `${rename ? 'displayName~rename(name)' : 'name,displayName'}`]; // Item\n\nexport const getItemFields = () => ['dimensionItem~rename(id)', 'displayName~rename(name)', 'dimensionItemType']; // Dimension\n\nexport const getDimensionFields = ({\n  withItems\n}) => arrayClean(['dimension', 'legendSet[id]', 'filter', 'programStage', withItems ? `items[${getItemFields().join(',')}]` : ``]); // Axis\n\nexport const getAxesFields = ({\n  withItems\n}) => [`columns[${getDimensionFields({\n  withItems\n}).join(',')}]`, `rows[${getDimensionFields({\n  withItems\n}).join(',')}]`, `filters[${getDimensionFields({\n  withItems\n}).join(',')}]`]; // Favorite\n\nexport const getFavoriteFields = ({\n  withDimensions,\n  withOptions\n}) => {\n  return arrayClean([`${getIdNameFields({\n    rename: true\n  }).join(',')}`, 'type', 'displayDescription~rename(description)', withDimensions ? `${getAxesFields({\n    withItems: true\n  }).join(',')}` : ``, withOptions ? ['*', '!attributeDimensions', '!attributeValues', '!category', '!categoryDimensions', '!categoryOptionGroupSetDimensions', '!columnDimensions', '!dataDimensionItems', '!dataElementDimensions', '!dataElementGroupSetDimensions', '!filterDimensions', '!itemOrganisationUnitGroups', '!lastUpdatedBy', '!organisationUnitGroupSetDimensions', '!organisationUnitLevels', '!organisationUnits', '!programIndicatorDimensions', '!relativePeriods', '!reportParams', '!rowDimensions', '!translations', '!userOrganisationUnit', '!userOrganisationUnitChildren', '!userOrganisationUnitGrandChildren'].join(',') : '']);\n};\nexport const getFavoritesFields = () => [`visualization[${getFavoriteFields({\n  withDimensions: false\n}).join(',')}]`, `map[${getFavoriteFields({\n  withDimensions: false\n}).join(',')}]`, `eventReport[${getFavoriteFields({\n  withDimensions: false\n}).join(',')}]`, `eventChart[${getFavoriteFields({\n  withDimensions: false\n}).join(',')}]`]; // List item\n\nexport const getListItemFields = () => [`reports[${['type', ...getIdNameFields({\n  rename: true\n})].join(',')}]`, `resources[${getIdNameFields({\n  rename: true\n}).join(',')}]`, `users[${getIdNameFields({\n  rename: true\n}).join(',')}]`]; // Map\n\nexport const getMapFields = () => [`${getIdNameFields({\n  rename: true\n}).join(',')}`, 'user,longitude,latitude,zoom,basemap', `mapViews[${getFavoriteFields({\n  withDimensions: true,\n  withOptions: true\n})}]`];","import arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { isViewMode } from '../modules/dashboardModes';\nimport { getCustomDashboards } from '../modules/getCustomDashboards';\nimport { withShape } from '../modules/gridUtil';\nimport { getIdNameFields, getListItemFields, getFavoritesFields } from './metadata';\n\nconst getDashboardItemsFields = () => arrayClean(['id', 'type', 'shape', 'x', 'y', 'width~rename(w)', 'height~rename(h)', 'messages', 'text', 'appKey', `${getListItemFields().join(',')}`, `${getFavoritesFields().join(',')}`]);\n\nconst baseDashboardFields = arrayClean(['id', 'displayName', 'displayDescription', 'favorite~rename(starred)', 'access', 'restrictFilters', 'allowedFilters', 'layout', 'itemConfig', `dashboardItems[${getDashboardItemsFields().join(',')}]`]);\nexport const viewDashboardQuery = {\n  resource: 'dashboards',\n  id: ({\n    id\n  }) => id,\n  params: {\n    fields: baseDashboardFields\n  }\n};\nexport const editDashboardQuery = {\n  resource: 'dashboards',\n  id: ({\n    id\n  }) => id,\n  params: {\n    fields: arrayClean([...baseDashboardFields, `user[${getIdNameFields({\n      rename: true\n    }).join(',')}]`, 'name', 'description', 'created', 'favorite', 'favorites', 'lastUpdated', 'href' // needed for d2-ui-translations-dialog\n    ])\n  }\n}; // Get more info about selected dashboard\n\nexport const apiFetchDashboard = async (dataEngine, id, {\n  mode = null,\n  forSave = false\n} = {}) => {\n  const query = isViewMode(mode) ? viewDashboardQuery : editDashboardQuery;\n\n  try {\n    const dashboardData = await dataEngine.query({\n      dashboard: query\n    }, {\n      variables: {\n        id\n      }\n    });\n    const dashboard = dashboardData.dashboard;\n\n    if (!forSave) {\n      return getCustomDashboards(Object.assign({}, dashboard, {\n        dashboardItems: withShape(dashboard.dashboardItems)\n      }))[0];\n    }\n\n    return dashboard;\n  } catch (error) {\n    console.log('Error: ', error);\n  }\n};","import arrayFrom from 'd2-utilizr/lib/arrayFrom';\nimport { convertBackendItemsToUi } from './uiBackendItemConverter';\n/**\n * Returns the array of dashboards, customized for ui\n * @function\n * @param {Array} data The original dashboard list\n * @returns {Array}\n */\n\nexport const getCustomDashboards = data => arrayFrom(data).map(d => {\n  var _d$allowedFilters;\n\n  return {\n    id: d.id,\n    name: d.name,\n    displayName: d.displayName,\n    description: d.description,\n    displayDescription: d.displayDescription,\n    starred: d.starred,\n    created: d.created,\n    lastUpdated: d.lastUpdated,\n    access: d.access,\n    dashboardItems: convertBackendItemsToUi(d.dashboardItems),\n    restrictFilters: d.restrictFilters,\n    allowedFilters: (_d$allowedFilters = d.allowedFilters) !== null && _d$allowedFilters !== void 0 ? _d$allowedFilters : [],\n    href: d.href,\n    layout: d.layout,\n    itemConfig: d.itemConfig\n  };\n});","import { EDIT } from '../modules/dashboardModes';\nimport { apiFetchDashboard } from './fetchDashboard';\nexport const createDashboardMutation = {\n  resource: 'dashboards',\n  type: 'create',\n  data: ({\n    data\n  }) => data\n};\nexport const updateDashboardMutation = {\n  resource: 'dashboards',\n  type: 'update',\n  id: ({\n    id\n  }) => id,\n  data: ({\n    data\n  }) => data,\n  params: {\n    skipTranslation: true,\n    skipSharing: true\n  }\n};\n\nconst generatePayload = (dashboard = {}, data) => {\n  return { ...dashboard,\n    name: data.name,\n    description: data.description,\n    dashboardItems: data.dashboardItems.map(item => ({ ...item,\n      width: item.w,\n      height: item.h\n    })),\n    allowedFilters: data.allowedFilters,\n    restrictFilters: data.restrictFilters,\n    layout: data.layout,\n    itemConfig: data.itemConfig\n  };\n};\n\nexport const updateDashboard = async (dataEngine, data) => {\n  const dashboard = await apiFetchDashboard(dataEngine, data.id, {\n    mode: EDIT,\n    forSave: true\n  });\n  const {\n    response\n  } = await dataEngine.mutate(updateDashboardMutation, {\n    variables: {\n      id: data.id,\n      data: generatePayload(dashboard, data)\n    }\n  });\n  return response.uid;\n};\nexport const postDashboard = async (dataEngine, data) => {\n  const {\n    response\n  } = await dataEngine.mutate(createDashboardMutation, {\n    variables: {\n      data: generatePayload({}, data)\n    }\n  });\n  return response.uid;\n};","/** @module reducers/editDashboard */\n// import { generateUid } from 'd2/uid'\nimport update from 'immutability-helper';\nimport isEmpty from 'lodash/isEmpty';\nimport { getDashboardItem } from '../modules/gridUtil'; // import {\n//     getGridItemProperties,\n//     getPageBreakItemShape,\n//     getPrintTitlePageItemShape,\n//     NEW_ITEM_SHAPE,\n// } from '../modules/gridUtil'\n// import { itemTypeMap, PAGEBREAK, PRINT_TITLE_PAGE } from '../modules/itemTypes'\n\nimport { orArray, orObject } from '../modules/util';\nexport const RECEIVED_EDIT_DASHBOARD = 'RECEIVED_EDIT_DASHBOARD';\nexport const RECEIVED_NOT_EDITING = 'RECEIVED_NOT_EDITING';\nexport const START_NEW_DASHBOARD = 'START_NEW_DASHBOARD';\nexport const RECEIVED_TITLE = 'RECEIVED_TITLE';\nexport const RECEIVED_DESCRIPTION = 'RECEIVED_DESCRIPTION';\nexport const ADD_DASHBOARD_ITEM = 'ADD_DASHBOARD_ITEM';\nexport const REMOVE_DASHBOARD_ITEM = 'REMOVE_DASHBOARD_ITEM';\nexport const UPDATE_DASHBOARD_ITEM = 'UPDATE_DASHBOARD_ITEM';\nexport const RECEIVED_DASHBOARD_ITEM_SHAPES = 'RECEIVED_DASHBOARD_ITEM_SHAPES';\nexport const SET_PRINT_PREVIEW_VIEW = 'SET_PRINT_PREVIEW_VIEW';\nexport const CLEAR_PRINT_PREVIEW_VIEW = 'CLEAR_PRINT_PREVIEW_VIEW';\nexport const RECEIVED_FILTER_SETTINGS = 'RECEIVED_FILTER_SETTINGS';\nexport const RECEIVED_HIDE_GRID = 'RECEIVED_HIDE_GRID';\nexport const RECEIVED_LAYOUT_COLUMNS = 'RECEIVED_LAYOUT_COLUMNS';\nexport const RECEIVED_ITEM_CONFIG_INSERT_POSITION = 'RECEIVED_ITEM_CONFIG_INSERT_POSITION';\nexport const EMPTY_STATE_EDIT_DASHBOARD = {};\nexport const DEFAULT_STATE_EDIT_DASHBOARD = {\n  id: '',\n  name: '',\n  access: {\n    update: true,\n    delete: true\n  },\n  allowedFilters: [],\n  description: '',\n  dashboardItems: [],\n  restrictFilters: false,\n  printPreviewView: false,\n  isDirty: false,\n  href: '',\n  hideGrid: false,\n  layout: {\n    columns: []\n  },\n  itemConfig: {\n    insertPosition: 'END'\n  }\n};\nexport default ((state = DEFAULT_STATE_EDIT_DASHBOARD, action) => {\n  switch (action.type) {\n    case RECEIVED_EDIT_DASHBOARD:\n      {\n        const newState = {};\n        Object.keys(DEFAULT_STATE_EDIT_DASHBOARD).forEach(k => newState[k] = action.value[k]);\n        newState.printPreviewView = DEFAULT_STATE_EDIT_DASHBOARD.printPreviewView;\n        newState.isDirty = DEFAULT_STATE_EDIT_DASHBOARD.isDirty;\n        return newState;\n      }\n\n    case RECEIVED_NOT_EDITING:\n      return EMPTY_STATE_EDIT_DASHBOARD;\n\n    case SET_PRINT_PREVIEW_VIEW:\n      return Object.assign({}, state, {\n        printPreviewView: true\n      });\n\n    case CLEAR_PRINT_PREVIEW_VIEW:\n      return Object.assign({}, state, {\n        printPreviewView: false\n      });\n\n    case START_NEW_DASHBOARD:\n      return DEFAULT_STATE_EDIT_DASHBOARD;\n\n    case RECEIVED_TITLE:\n      {\n        return Object.assign({}, state, {\n          name: action.value,\n          isDirty: true\n        });\n      }\n\n    case RECEIVED_DESCRIPTION:\n      {\n        return Object.assign({}, state, {\n          description: action.value,\n          isDirty: true\n        });\n      }\n\n    case ADD_DASHBOARD_ITEM:\n      {\n        const dashboardItem = getDashboardItem(action.value);\n\n        if (!dashboardItem.position) {\n          return update(state, {\n            dashboardItems: {\n              $unshift: [dashboardItem]\n            },\n            isDirty: {\n              $set: true\n            }\n          });\n        }\n\n        return update(state, {\n          dashboardItems: {\n            $splice: [[parseInt(dashboardItem.position), 0, dashboardItem]]\n          },\n          isDirty: {\n            $set: true\n          }\n        });\n      }\n\n    case REMOVE_DASHBOARD_ITEM:\n      {\n        const idToRemove = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === idToRemove);\n\n        if (dashboardItemIndex > -1) {\n          return update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1]]\n            },\n            isDirty: {\n              $set: true\n            }\n          });\n        }\n\n        return state;\n      }\n\n    case RECEIVED_DASHBOARD_ITEM_SHAPES:\n      {\n        if (!action.value) {\n          return state;\n        }\n\n        const stateItems = orArray(state.dashboardItems);\n\n        if (stateItems.length !== action.value.length) {\n          return { ...state,\n            dashboardItems: action.value\n          };\n        }\n\n        let shapesHaveChanged = false;\n        const newStateItems = action.value.map(({\n          x,\n          y,\n          w,\n          h,\n          i\n        }) => {\n          const stateItem = stateItems.find(si => si.id === i);\n\n          if (!(stateItem.x === x && stateItem.y === y && stateItem.w === w && stateItem.h === h)) {\n            shapesHaveChanged = true;\n            return Object.assign({}, stateItem, {\n              w,\n              h,\n              x,\n              y\n            });\n          }\n\n          return stateItem;\n        });\n        return { ...state,\n          dashboardItems: shapesHaveChanged ? newStateItems : state.dashboardItems,\n          isDirty: shapesHaveChanged\n        };\n      }\n\n    case UPDATE_DASHBOARD_ITEM:\n      {\n        const dashboardItem = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === dashboardItem.id);\n\n        if (dashboardItemIndex > -1) {\n          const newState = update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1, Object.assign({}, dashboardItem)]]\n            },\n            isDirty: {\n              $set: true\n            }\n          });\n          return newState;\n        }\n\n        return state;\n      }\n\n    case RECEIVED_FILTER_SETTINGS:\n      {\n        return Object.assign({}, state, {\n          allowedFilters: action.value.allowedFilters,\n          restrictFilters: action.value.restrictFilters,\n          isDirty: true\n        });\n      }\n\n    case RECEIVED_HIDE_GRID:\n      {\n        return { ...state,\n          hideGrid: action.value\n        };\n      }\n\n    case RECEIVED_LAYOUT_COLUMNS:\n      {\n        return { ...state,\n          layout: { ...state.layout,\n            columns: action.value\n          }\n        };\n      }\n\n    case RECEIVED_ITEM_CONFIG_INSERT_POSITION:\n      {\n        return { ...state,\n          itemConfig: { ...state.itemConfig,\n            insertPosition: action.value\n          }\n        };\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetEditDashboardRoot = state => state.editDashboard; // selectors\n\nexport const sGetIsEditing = state => !isEmpty(state.editDashboard);\nexport const sGetIsPrintPreviewView = state => sGetEditDashboardRoot(state).printPreviewView;\nexport const sGetEditDashboardName = state => sGetEditDashboardRoot(state).name;\nexport const sGetEditDashboardDescription = state => sGetEditDashboardRoot(state).description;\nexport const sGetEditDashboardItems = state => orObject(sGetEditDashboardRoot(state)).dashboardItems;\nexport const sGetEditIsDirty = state => sGetEditDashboardRoot(state).isDirty;\nexport const sGetHideGrid = state => sGetEditDashboardRoot(state).hideGrid;\n\nconst getLayout = editDashboard => editDashboard.layout;\n\nexport const sGetLayout = state => orObject(getLayout(sGetEditDashboardRoot(state)));\n\nconst getColumns = layout => layout.columns;\n\nexport const sGetLayoutColumns = state => orArray(getColumns(sGetLayout(state)));\n\nconst getItemConfig = editDashboard => editDashboard.itemConfig;\n\nexport const sGetItemConfig = state => orObject(getItemConfig(sGetEditDashboardRoot(state)));\n\nconst getInsertPosition = itemConfig => itemConfig.insertPosition;\n\nexport const sGetItemConfigInsertPosition = state => getInsertPosition(sGetItemConfig(state));","import i18n from '@dhis2/d2-i18n';\nimport { updateDashboard, postDashboard } from '../api/editDashboard';\nimport { addToItemsEnd, addToItemsStart, getAutoItemShapes, getDashboardItem, updateItems } from '../modules/gridUtil';\nimport { convertUiItemsToBackend } from '../modules/uiBackendItemConverter';\nimport { RECEIVED_EDIT_DASHBOARD, START_NEW_DASHBOARD, RECEIVED_NOT_EDITING, RECEIVED_TITLE, RECEIVED_DESCRIPTION, RECEIVED_DASHBOARD_ITEM_SHAPES, ADD_DASHBOARD_ITEM, UPDATE_DASHBOARD_ITEM, REMOVE_DASHBOARD_ITEM, SET_PRINT_PREVIEW_VIEW, CLEAR_PRINT_PREVIEW_VIEW, RECEIVED_FILTER_SETTINGS, sGetEditDashboardRoot, RECEIVED_HIDE_GRID, RECEIVED_LAYOUT_COLUMNS, RECEIVED_ITEM_CONFIG_INSERT_POSITION, sGetEditDashboardItems, sGetLayoutColumns, sGetItemConfigInsertPosition } from '../reducers/editDashboard';\nimport { tFetchDashboards } from './dashboards'; // actions\n\nexport const acSetEditDashboard = dashboard => ({\n  type: RECEIVED_EDIT_DASHBOARD,\n  value: dashboard\n});\nexport const acSetEditNewDashboard = () => ({\n  type: START_NEW_DASHBOARD\n});\nexport const acClearEditDashboard = () => ({\n  type: RECEIVED_NOT_EDITING\n});\nexport const acSetPrintPreviewView = () => ({\n  type: SET_PRINT_PREVIEW_VIEW\n});\nexport const acClearPrintPreviewView = () => ({\n  type: CLEAR_PRINT_PREVIEW_VIEW\n});\nexport const acSetDashboardTitle = value => ({\n  type: RECEIVED_TITLE,\n  value\n});\nexport const acSetDashboardDescription = value => ({\n  type: RECEIVED_DESCRIPTION,\n  value\n});\nexport const acUpdateDashboardItemShapes = value => ({\n  type: RECEIVED_DASHBOARD_ITEM_SHAPES,\n  value\n});\nexport const acAddDashboardItem = item => ({\n  type: ADD_DASHBOARD_ITEM,\n  value: item\n});\nexport const acUpdateDashboardItem = item => ({\n  type: UPDATE_DASHBOARD_ITEM,\n  value: item\n});\nexport const acRemoveDashboardItem = value => ({\n  type: REMOVE_DASHBOARD_ITEM,\n  value\n});\nexport const acSetFilterSettings = value => ({\n  type: RECEIVED_FILTER_SETTINGS,\n  value\n});\nexport const acSetHideGrid = value => ({\n  type: RECEIVED_HIDE_GRID,\n  value\n});\nexport const acSetLayoutColumns = value => ({\n  type: RECEIVED_LAYOUT_COLUMNS,\n  value\n});\nexport const acSetItemConfigInsertPosition = value => ({\n  type: RECEIVED_ITEM_CONFIG_INSERT_POSITION,\n  value\n}); // thunks\n// no layout + end: add to new row at the end, default size\n// no layout + start: add to 0,0, default size\n// layout + end: calculate and add to \"next shape in layout\"\n// layout + start: add to 0,0,0,0, sort, remount\n\nexport const tSetDashboardItems = (itemToAdd, itemIdToRemove) => (dispatch, getState) => {\n  const insertPosition = sGetItemConfigInsertPosition(getState());\n  const columns = sGetLayoutColumns(getState());\n  let items = [...sGetEditDashboardItems(getState())];\n  let dashboardItemsWithShapes;\n\n  if (!itemToAdd && !itemIdToRemove) {\n    // changing columns\n    if (!columns.length) {\n      // freeflow\n      updateItems(items, dispatch);\n    } else {\n      dashboardItemsWithShapes = getAutoItemShapes(items, columns);\n      updateItems(dashboardItemsWithShapes, dispatch, {\n        reload: true\n      });\n    }\n  } else {\n    if (itemIdToRemove) {\n      items = items.filter(item => item.id !== itemIdToRemove);\n    }\n\n    if (!itemToAdd) {\n      dashboardItemsWithShapes = getAutoItemShapes(items, columns);\n      updateItems(dashboardItemsWithShapes, dispatch);\n    } else {\n      const newDashboardItem = getDashboardItem(itemToAdd);\n\n      switch (insertPosition) {\n        case 'START':\n          dashboardItemsWithShapes = addToItemsStart(items, columns, newDashboardItem);\n          break;\n\n        case 'END':\n        default:\n          dashboardItemsWithShapes = addToItemsEnd(items, columns, newDashboardItem);\n      }\n\n      updateItems(dashboardItemsWithShapes, dispatch);\n    }\n  }\n};\nexport const tSaveDashboard = () => async (dispatch, getState, dataEngine) => {\n  const dashboard = sGetEditDashboardRoot(getState());\n  const dashboardToSave = { ...dashboard,\n    dashboardItems: convertUiItemsToBackend(dashboard.dashboardItems),\n    name: dashboard.name || i18n.t('Untitled dashboard')\n  };\n  const dashboardId = dashboardToSave.id ? await updateDashboard(dataEngine, dashboardToSave) : await postDashboard(dataEngine, dashboardToSave); // update the dashboard list\n\n  await dispatch(tFetchDashboards());\n  return Promise.resolve(dashboardId);\n};","import cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport classes from './styles/DashboardContainer.module.css';\n\nconst DashboardContainer = ({\n  children,\n  covered\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: cx(classes.container, 'dashboard-scroll-container', covered && classes.covered),\n    \"data-test\": \"inner-scroll-container\"\n  }, children);\n};\n\nDashboardContainer.propTypes = {\n  children: PropTypes.node,\n  covered: PropTypes.bool\n};\nexport default DashboardContainer;","import PropTypes from 'prop-types';\nimport React from 'react';\nimport classes from './styles/NoContentMessage.module.css';\n\nconst NoContentMessage = ({\n  text\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  className: classes.container\n}, text);\n\nNoContentMessage.propTypes = {\n  text: PropTypes.string\n};\nexport default NoContentMessage;","import { NoticeBox, CenteredContent } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport classes from './styles/Notice.module.css';\n\nconst Notice = ({\n  title,\n  message\n}) => /*#__PURE__*/React.createElement(CenteredContent, {\n  position: \"top\"\n}, /*#__PURE__*/React.createElement(\"div\", {\n  className: classes.noticeContainer\n}, /*#__PURE__*/React.createElement(NoticeBox, {\n  title: title,\n  warning: true\n}, message)));\n\nNotice.propTypes = {\n  message: PropTypes.string,\n  title: PropTypes.string\n};\nexport default Notice;","import debounce from 'lodash/debounce';\nimport PropTypes from 'prop-types';\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nexport const WindowDimensionsCtx = /*#__PURE__*/createContext(null);\n\nconst windowDims = () => ({\n  height: window.innerHeight,\n  width: window.innerWidth\n});\n\nconst WindowDimensionsProvider = ({\n  children\n}) => {\n  const [dimensions, setDimensions] = useState(windowDims());\n  useEffect(() => {\n    const handleResize = debounce(() => {\n      setDimensions(windowDims());\n    }, 100);\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(WindowDimensionsCtx.Provider, {\n    value: dimensions\n  }, children);\n};\n\nWindowDimensionsProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};\nexport default WindowDimensionsProvider;\nexport const useWindowDimensions = () => {\n  return useContext(WindowDimensionsCtx);\n};","export const setHeaderbarVisible = show => {\n  const header = document.getElementsByTagName('header')[0];\n\n  if (show) {\n    header.classList.remove('hidden');\n  } else {\n    header.classList.add('hidden');\n  }\n};","/** @module reducers/editDashboard */\nimport update from 'immutability-helper';\nimport isEmpty from 'lodash/isEmpty';\nimport { orArray } from '../modules/util';\nexport const SET_PRINT_DASHBOARD = 'SET_PRINT_DASHBOARD';\nexport const CLEAR_PRINT_DASHBOARD = 'CLEAR_PRINT_DASHBOARD';\nexport const ADD_PRINT_DASHBOARD_ITEM = 'ADD_PRINT_DASHBOARD_ITEM';\nexport const SET_PRINT_DASHBOARD_LAYOUT = 'SET_PRINT_DASHBOARD_LAYOUT';\nexport const REMOVE_PRINT_DASHBOARD_ITEM = 'REMOVE_PRINT_DASHBOARD_ITEM';\nexport const UPDATE_PRINT_DASHBOARD_ITEM = 'UPDATE_PRINT_DASHBOARD_ITEM';\nexport const DEFAULT_STATE_PRINT_DASHBOARD = {};\nconst DEFAULT_DASHBOARD_ITEMS = [];\nexport const NEW_PRINT_DASHBOARD_STATE = {\n  id: '',\n  name: '',\n  access: {},\n  description: '',\n  dashboardItems: DEFAULT_DASHBOARD_ITEMS\n};\nexport default ((state = DEFAULT_STATE_PRINT_DASHBOARD, action) => {\n  switch (action.type) {\n    case SET_PRINT_DASHBOARD:\n      {\n        const newState = {};\n        Object.keys(NEW_PRINT_DASHBOARD_STATE).map(k => newState[k] = action.value[k]);\n        return newState;\n      }\n\n    case CLEAR_PRINT_DASHBOARD:\n      return DEFAULT_STATE_PRINT_DASHBOARD;\n\n    case ADD_PRINT_DASHBOARD_ITEM:\n      if (!action.value.position) {\n        return update(state, {\n          dashboardItems: {\n            $unshift: [action.value]\n          }\n        });\n      }\n\n      return update(state, {\n        dashboardItems: {\n          $splice: [[parseInt(action.value.position), 0, action.value]]\n        }\n      });\n\n    case REMOVE_PRINT_DASHBOARD_ITEM:\n      {\n        const idToRemove = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === idToRemove);\n\n        if (dashboardItemIndex > -1) {\n          return update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1]]\n            }\n          });\n        }\n\n        return state;\n      }\n\n    case UPDATE_PRINT_DASHBOARD_ITEM:\n      {\n        const dashboardItem = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === dashboardItem.id);\n\n        if (dashboardItemIndex > -1) {\n          const newState = update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1, Object.assign({}, dashboardItem)]]\n            }\n          });\n          return newState;\n        }\n\n        return state;\n      }\n\n    case SET_PRINT_DASHBOARD_LAYOUT:\n      {\n        const stateItems = orArray(state.dashboardItems);\n        let layoutHasChanged = false;\n        const newStateItems = action.value.map(({\n          x,\n          y,\n          w,\n          h,\n          i\n        }) => {\n          const stateItem = stateItems.find(si => si.id === i);\n\n          if (!(stateItem.x === x && stateItem.y === y && stateItem.w === w && stateItem.h === h)) {\n            layoutHasChanged = true;\n            return Object.assign({}, stateItem, {\n              w,\n              h,\n              x,\n              y\n            });\n          }\n\n          return stateItem;\n        });\n        return layoutHasChanged ? { ...state,\n          dashboardItems: newStateItems\n        } : state;\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetPrintDashboardRoot = state => state.printDashboard; // selectors\n\nexport const sGetIsPrinting = state => !isEmpty(state.printDashboard);\nexport const sGetPrintDashboardName = state => sGetPrintDashboardRoot(state).name;\nexport const sGetPrintDashboardDescription = state => sGetPrintDashboardRoot(state).description;\nexport const sGetPrintDashboardItems = state => {\n  var _sGetPrintDashboardRo;\n\n  return ((_sGetPrintDashboardRo = sGetPrintDashboardRoot(state)) === null || _sGetPrintDashboardRo === void 0 ? void 0 : _sGetPrintDashboardRo.dashboardItems) || DEFAULT_DASHBOARD_ITEMS;\n};","import { generateUid } from 'd2/uid';\nimport { NEW_ITEM_SHAPE, getGridItemProperties, getPageBreakItemShape, getPrintTitlePageItemShape } from '../modules/gridUtil';\nimport { itemTypeMap, PAGEBREAK } from '../modules/itemTypes';\nimport { SET_PRINT_DASHBOARD, CLEAR_PRINT_DASHBOARD, SET_PRINT_DASHBOARD_LAYOUT, ADD_PRINT_DASHBOARD_ITEM, REMOVE_PRINT_DASHBOARD_ITEM, UPDATE_PRINT_DASHBOARD_ITEM } from '../reducers/printDashboard'; // actions\n\nexport const acSetPrintDashboard = dashboard => ({\n  type: SET_PRINT_DASHBOARD,\n  value: dashboard\n});\nexport const acClearPrintDashboard = () => ({\n  type: CLEAR_PRINT_DASHBOARD\n});\nexport const acUpdatePrintDashboardLayout = value => ({\n  type: SET_PRINT_DASHBOARD_LAYOUT,\n  value\n});\nexport const acAddPrintDashboardItem = item => {\n  const type = item.type;\n  delete item.type;\n  const itemPropName = itemTypeMap[type].propName;\n  const id = generateUid();\n  const gridItemProperties = getGridItemProperties(id);\n  let shape;\n\n  if (type === PAGEBREAK) {\n    const yPos = item.yPos || 0;\n    shape = getPageBreakItemShape(yPos, item.isStatic);\n  } else {\n    shape = getPrintTitlePageItemShape(item.isOneItemPerPage);\n  }\n\n  return {\n    type: ADD_PRINT_DASHBOARD_ITEM,\n    value: {\n      id,\n      type,\n      position: item.position || null,\n      [itemPropName]: item.content,\n      ...NEW_ITEM_SHAPE,\n      ...gridItemProperties,\n      ...shape\n    }\n  };\n};\nexport const acRemovePrintDashboardItem = value => ({\n  type: REMOVE_PRINT_DASHBOARD_ITEM,\n  value\n});\nexport const acUpdatePrintDashboardItem = item => ({\n  type: UPDATE_PRINT_DASHBOARD_ITEM,\n  value: item\n});","import i18n from '@dhis2/d2-i18n';\nimport { Button, colors, IconChevronLeft24 } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport classes from './styles/PrintActionsBar.module.css'; // set in PrintActionsBar.module.css\n\nexport const PRINT_ACTIONS_BAR_HEIGHT = 44;\nexport const PRINT_ACTIONS_BAR_HEIGHT_SM = 36;\n\nconst PrintActionsBar = ({\n  id\n}) => {\n  const getExitPrintButton = isSmall => /*#__PURE__*/React.createElement(Button, {\n    className: isSmall ? classes.buttonSmall : classes.buttonLarge,\n    small: isSmall\n  }, /*#__PURE__*/React.createElement(IconChevronLeft24, {\n    color: colors.grey700\n  }), i18n.t('Exit print preview'));\n\n  const getPrintButton = isSmall => /*#__PURE__*/React.createElement(Button, {\n    className: isSmall ? classes.buttonSmall : classes.buttonLarge,\n    small: isSmall,\n    onClick: window.print\n  }, i18n.t('Print'));\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.container\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.actions\n  }, /*#__PURE__*/React.createElement(Link, {\n    className: classes.link,\n    to: `/${id}`\n  }, getExitPrintButton(true), getExitPrintButton(false)), getPrintButton(true), getPrintButton(false)));\n};\n\nPrintActionsBar.defaultValues = {\n  id: '/'\n};\nPrintActionsBar.propTypes = {\n  id: PropTypes.string\n};\nexport default PrintActionsBar;","import i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport classes from './styles/PrintInfo.module.css';\n\nconst PrintInfo = ({\n  isLayout\n}) => {\n  const layoutStyle = isLayout ? i18n.t('dashboard layout') : i18n.t('one item per page');\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.container\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.title\n  }, `${i18n.t('Print Preview')}: ${layoutStyle}`), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.printSuggestions\n  }, /*#__PURE__*/React.createElement(\"p\", null, `${i18n.t('For best print results')}:`), /*#__PURE__*/React.createElement(\"ul\", null, /*#__PURE__*/React.createElement(\"li\", null, i18n.t('Use Chrome or Edge web browser')), /*#__PURE__*/React.createElement(\"li\", null, i18n.t('Wait for all dashboard items to load before printing')), /*#__PURE__*/React.createElement(\"li\", null, i18n.t('Use A4 landscape paper size and default margin settings in the browser print dialog')))), /*#__PURE__*/React.createElement(\"hr\", {\n    className: classes.divider\n  }));\n};\n\nPrintInfo.propTypes = {\n  isLayout: PropTypes.bool\n};\nexport default PrintInfo;","import { getDimensionById, DIMENSION_ID_PERIOD, DIMENSION_ID_ORGUNIT } from '@dhis2/analytics';\nexport const SET_DIMENSIONS = 'SET_DIMENSIONS';\nconst PE_OU_DIMENSIONS = [getDimensionById(DIMENSION_ID_PERIOD), getDimensionById(DIMENSION_ID_ORGUNIT)];\nconst INITIAL_DIMENSIONS = [];\nexport default ((state = INITIAL_DIMENSIONS, action) => {\n  switch (action.type) {\n    case SET_DIMENSIONS:\n      {\n        return [...PE_OU_DIMENSIONS, ...action.value];\n      }\n\n    default:\n      return state;\n  }\n});\nexport const sGetDimensions = state => state.dimensions;","import { createSelector } from 'reselect';\nimport { sGetDimensions } from './dimensions';\nexport const CLEAR_ITEM_FILTERS = 'CLEAR_ITEM_FILTERS';\nexport const ADD_ITEM_FILTER = 'ADD_ITEM_FILTER';\nexport const REMOVE_ITEM_FILTER = 'REMOVE_ITEM_FILTER';\nexport const DEFAULT_STATE_ITEM_FILTERS = {};\nexport default ((state = DEFAULT_STATE_ITEM_FILTERS, action) => {\n  switch (action.type) {\n    case ADD_ITEM_FILTER:\n      {\n        return { ...state,\n          [action.filter.id]: action.filter.value\n        };\n      }\n\n    case REMOVE_ITEM_FILTER:\n      {\n        const newState = { ...state\n        };\n        delete newState[action.id];\n        return newState;\n      }\n\n    case CLEAR_ITEM_FILTERS:\n      {\n        return DEFAULT_STATE_ITEM_FILTERS;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetItemFiltersRoot = state => state.itemFilters; // simplify the filters structure to:\n// [{ id: 'pe', name: 'Period', values: [{ id: 2019: name: '2019' }, {id: 'LAST_MONTH', name: 'Last month' }]}, ...]\n\nexport const sGetNamedItemFilters = createSelector([sGetItemFiltersRoot, sGetDimensions], (filters, dimensions) => Object.keys(filters).reduce((arr, id) => {\n  arr.push({\n    id: id,\n    name: dimensions.find(dimension => dimension.id === id).name,\n    values: filters[id].map(value => ({\n      id: value.id,\n      name: value.displayName || value.name\n    }))\n  });\n  return arr;\n}, []));","import { ADD_ITEM_FILTER, REMOVE_ITEM_FILTER, CLEAR_ITEM_FILTERS } from '../reducers/itemFilters';\nexport const FILTER_ORG_UNIT = 'ou'; // actions\n\nexport const acAddItemFilter = filter => ({\n  type: ADD_ITEM_FILTER,\n  filter\n});\nexport const acRemoveItemFilter = id => ({\n  type: REMOVE_ITEM_FILTER,\n  id\n});\nexport const acClearItemFilters = () => ({\n  type: CLEAR_ITEM_FILTERS\n});","import i18n from '@dhis2/d2-i18n';\nimport { colors, Button, Tooltip, IconDelete24 } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nconst DeleteItemButton = ({\n  onClick\n}) => /*#__PURE__*/React.createElement(Tooltip, {\n  content: i18n.t('Remove this item'),\n  placement: \"bottom\"\n}, /*#__PURE__*/React.createElement(Button, {\n  secondary: true,\n  small: true,\n  onClick: onClick,\n  icon: /*#__PURE__*/React.createElement(IconDelete24, {\n    color: colors.red600\n  }),\n  dataTest: \"delete-item-button\"\n}));\n\nDeleteItemButton.propTypes = {\n  onClick: PropTypes.func\n};\nexport default DeleteItemButton;","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { acRemoveDashboardItem, tSetDashboardItems } from '../../../actions/editDashboard';\nimport { sGetEditDashboardItems, sGetLayoutColumns } from '../../../reducers/editDashboard';\nimport DeleteItemButton from './DeleteItemButton';\nimport classes from './styles/ItemHeader.module.css';\n\nconst EditItemActions = ({\n  itemId,\n  onDeleteItem\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.itemActionsWrap\n  }, /*#__PURE__*/React.createElement(DeleteItemButton, {\n    onClick: () => onDeleteItem(itemId)\n  }));\n};\n\nEditItemActions.propTypes = {\n  itemId: PropTypes.string,\n  onDeleteItem: PropTypes.func\n};\nconst mapDispatchToProps = {\n  onDeleteItem: itemId => (dispatch, getState) => {\n    const columns = sGetLayoutColumns(getState());\n    const dashboardItems = sGetEditDashboardItems(getState());\n\n    if (!columns.length || dashboardItems.length === 1) {\n      dispatch(acRemoveDashboardItem(itemId));\n    } else {\n      dispatch(tSetDashboardItems(null, itemId));\n    }\n  }\n};\nexport default connect(null, mapDispatchToProps)(EditItemActions);","import i18n from '@dhis2/d2-i18n';\nimport { Tooltip, colors, IconWarning24 } from '@dhis2/ui';\nimport React from 'react';\nimport classes from './styles/PrintItemInfo.module.css';\n\nconst PrintWarning = () => /*#__PURE__*/React.createElement(\"div\", {\n  className: classes.warning\n}, /*#__PURE__*/React.createElement(Tooltip, {\n  content: i18n.t('This item has been shortened to fit on one page'),\n  placement: \"bottom\"\n}, /*#__PURE__*/React.createElement(IconWarning24, {\n  color: colors.grey600\n})));\n\nexport default PrintWarning;","import PropTypes from 'prop-types';\nimport React from 'react';\nimport classes from './styles/ItemHeader.module.css';\n\nconst ViewItemActions = ({\n  actionButtons\n}) => {\n  return actionButtons ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.itemActionsWrap\n  }, actionButtons) : null;\n};\n\nViewItemActions.propTypes = {\n  actionButtons: PropTypes.node\n};\nexport default ViewItemActions;","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { VIEW, EDIT, PRINT_LAYOUT } from '../../../modules/dashboardModes';\nimport EditItemActions from './EditItemActions';\nimport PrintItemInfo from './PrintItemInfo';\nimport classes from './styles/ItemHeader.module.css';\nimport ViewItemActions from './ViewItemActions';\n\nconst getItemActionsMap = isShortened => {\n  return {\n    [VIEW]: ViewItemActions,\n    [EDIT]: EditItemActions,\n    [PRINT_LAYOUT]: isShortened ? PrintItemInfo : null\n  };\n};\n\nconst ItemHeader = /*#__PURE__*/React.forwardRef(({\n  dashboardMode,\n  title,\n  isShortened,\n  ...rest\n}, ref) => {\n  const Actions = getItemActionsMap(isShortened)[dashboardMode];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.itemHeaderWrap,\n    ref: ref\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.itemTitle\n  }, title), Actions ? /*#__PURE__*/React.createElement(Actions, rest) : null);\n});\nItemHeader.displayName = 'ItemHeader';\nItemHeader.propTypes = {\n  dashboardMode: PropTypes.string,\n  isShortened: PropTypes.bool,\n  title: PropTypes.string\n};\nexport default connect(null, null, null, {\n  forwardRef: true\n})(ItemHeader);","import { useD2 } from '@dhis2/app-runtime-adapter-d2';\nimport { Divider, colors, spacers, IconQuestion24 } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { FILTER_ORG_UNIT } from '../../../actions/itemFilters';\nimport { EDIT, isEditMode } from '../../../modules/dashboardModes';\nimport { sGetItemFiltersRoot, DEFAULT_STATE_ITEM_FILTERS } from '../../../reducers/itemFilters';\nimport ItemHeader from '../ItemHeader/ItemHeader';\n\nconst getIframeSrc = (appDetails, item, itemFilters) => {\n  let iframeSrc = `${appDetails.launchUrl}?dashboardItemId=${item.id}`;\n\n  if (itemFilters[FILTER_ORG_UNIT] && itemFilters[FILTER_ORG_UNIT].length) {\n    const ouIds = itemFilters[FILTER_ORG_UNIT].map(ouFilter => ouFilter.path.split('/').slice(-1)[0]);\n    iframeSrc += `&userOrgUnit=${ouIds.join(',')}`;\n  }\n\n  return iframeSrc;\n};\n\nconst AppItem = ({\n  dashboardMode,\n  item,\n  itemFilters\n}) => {\n  var _appDetails, _appDetails$settings, _appDetails$settings$;\n\n  const {\n    d2\n  } = useD2();\n  let appDetails;\n  const appKey = item.appKey;\n\n  if (appKey) {\n    appDetails = d2.system.installedApps.find(app => app.key === appKey);\n  }\n\n  const hideTitle = ((_appDetails = appDetails) === null || _appDetails === void 0 ? void 0 : (_appDetails$settings = _appDetails.settings) === null || _appDetails$settings === void 0 ? void 0 : (_appDetails$settings$ = _appDetails$settings.dashboardWidget) === null || _appDetails$settings$ === void 0 ? void 0 : _appDetails$settings$.hideTitle) && dashboardMode !== EDIT;\n  return appDetails && appDetails.name && appDetails.launchUrl ? /*#__PURE__*/React.createElement(React.Fragment, null, !hideTitle && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ItemHeader, {\n    title: appDetails.name,\n    itemId: item.id,\n    dashboardMode: dashboardMode,\n    isShortened: item.shortened\n  }), /*#__PURE__*/React.createElement(Divider, {\n    margin: `0 0 ${spacers.dp4} 0`\n  })), /*#__PURE__*/React.createElement(\"iframe\", {\n    title: appDetails.name,\n    src: getIframeSrc(appDetails, item, itemFilters),\n    className: !hideTitle ? 'dashboard-item-content' : 'dashboard-item-content-hidden-title',\n    style: {\n      border: 'none'\n    }\n  })) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ItemHeader, {\n    title: `${appKey} app not found`\n  }), /*#__PURE__*/React.createElement(Divider, {\n    margin: `0 0 ${spacers.dp4} 0`\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard-item-content\",\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      height: '90%'\n    }\n  }, /*#__PURE__*/React.createElement(IconQuestion24, {\n    color: colors.grey500\n  })));\n};\n\nAppItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const itemFilters = !isEditMode(ownProps.dashboardMode) ? sGetItemFiltersRoot(state) : DEFAULT_STATE_ITEM_FILTERS;\n  return {\n    itemFilters\n  };\n};\n\nexport default connect(mapStateToProps)(AppItem);","import { useConfig } from '@dhis2/app-runtime';\nimport i18n from '@dhis2/d2-i18n';\nimport { Divider, IconFileDocument16, colors, spacers } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { acUpdateDashboardItem, acRemoveDashboardItem } from '../../../actions/editDashboard';\nimport { isEditMode } from '../../../modules/dashboardModes';\nimport { itemTypeMap, getItemUrl } from '../../../modules/itemTypes';\nimport { orArray } from '../../../modules/util';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport classes from './Item.module.css';\n\nconst getItemTitle = item => itemTypeMap[item.type].pluralTitle;\n\nconst getContentItems = item => orArray(item[itemTypeMap[item.type].propName]).filter((item, index, array) => array.findIndex(el => el.id === item.id) === index);\n\nconst ListItem = ({\n  item,\n  dashboardMode,\n  removeItem,\n  updateItem\n}) => {\n  const {\n    baseUrl\n  } = useConfig();\n  const contentItems = getContentItems(item);\n\n  const updateDashboardItem = content => {\n    const listItemType = itemTypeMap[item.type].propName;\n    const newContent = item[listItemType].filter(item => item.id !== content.id);\n\n    if (newContent.length) {\n      item[listItemType] = newContent;\n      updateItem(item);\n    } else {\n      removeItem(item);\n    }\n  };\n\n  const getLink = contentItem => {\n    const removeButton = /*#__PURE__*/React.createElement(\"button\", {\n      className: classes.removeButton,\n      onClick: () => updateDashboardItem(contentItem)\n    }, i18n.t('Remove'));\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"a\", {\n      className: classes.link,\n      style: {\n        color: colors.grey900\n      },\n      href: getItemUrl(item.type, contentItem, baseUrl)\n    }, contentItem.name), isEditMode(dashboardMode) ? removeButton : null);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ItemHeader, {\n    title: getItemTitle(item),\n    itemId: item.id,\n    dashboardMode: dashboardMode,\n    isShortened: item.shortened\n  }), /*#__PURE__*/React.createElement(Divider, {\n    margin: `0 0 ${spacers.dp4} 0`\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard-item-content\"\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: classes.list\n  }, contentItems.map(contentItem => /*#__PURE__*/React.createElement(\"li\", {\n    className: classes.item,\n    key: contentItem.id\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.itemContent\n  }, /*#__PURE__*/React.createElement(IconFileDocument16, {\n    color: colors.grey600\n  }), getLink(contentItem)))))));\n};\n\nListItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  removeItem: PropTypes.func,\n  updateItem: PropTypes.func\n};\nexport default connect(null, {\n  removeItem: acRemoveDashboardItem,\n  updateItem: acUpdateDashboardItem\n})(ListItem);","import update from 'immutability-helper';\nimport { arrayToIdMap } from '../modules/util';\nexport const RECEIVED_MESSAGES = 'RECEIVED_MESSAGES';\nexport default ((state = {}, action) => {\n  switch (action.type) {\n    case RECEIVED_MESSAGES:\n      {\n        const conversations = arrayToIdMap(action.value);\n        const newState = update(state, {\n          $merge: conversations\n        });\n        return newState;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetMessagesRoot = state => state.messages;","export const userSettingsQuery = {\n  resource: 'userSettings',\n  params: {\n    key: ['keyDbLocale', 'keyUiLocale', 'keyAnalysisDisplayProperty']\n  }\n};","import { useDataEngine } from '@dhis2/app-runtime';\nimport PropTypes from 'prop-types';\nimport React, { useContext, useState, useEffect, createContext } from 'react';\nimport { userSettingsQuery } from '../api/userSettings';\nexport const UserSettingsCtx = /*#__PURE__*/createContext({});\n\nconst UserSettingsProvider = ({\n  children\n}) => {\n  const [settings, setSettings] = useState([]);\n  const engine = useDataEngine();\n  useEffect(() => {\n    async function fetchData() {\n      const {\n        userSettings\n      } = await engine.query({\n        userSettings: userSettingsQuery\n      });\n      setSettings({ ...userSettings,\n        displayProperty: userSettings.keyAnalysisDisplayProperty\n      });\n    }\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/React.createElement(UserSettingsCtx.Provider, {\n    value: {\n      userSettings: settings\n    }\n  }, children);\n};\n\nUserSettingsProvider.propTypes = {\n  children: PropTypes.node\n};\nexport default UserSettingsProvider;\nexport const useUserSettings = () => useContext(UserSettingsCtx);","import { useConfig } from '@dhis2/app-runtime';\nimport i18n from '@dhis2/d2-i18n';\nimport { Divider, spacers } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { isViewMode } from '../../../modules/dashboardModes';\nimport { sGetMessagesRoot } from '../../../reducers/messages';\nimport { useUserSettings } from '../../UserSettingsProvider';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport { getFormattedDate } from './getFormattedDate';\nimport classes from './styles/Item.module.css';\nimport './MessagesItem.css';\nconst PRIVATE = 'PRIVATE';\nconst messageTypes = {\n  [PRIVATE]: 'Private',\n  VALIDATION_RESULT: 'Validation',\n  TICKET: 'Ticket',\n  SYSTEM: 'System'\n};\n\nconst MessagesItem = ({\n  messages,\n  item,\n  dashboardMode\n}) => {\n  const {\n    baseUrl\n  } = useConfig();\n  const {\n    userSettings\n  } = useUserSettings();\n\n  const getMessageHref = msg => {\n    const msgIdentifier = msg ? `#/${msg.messageType}/${msg.id}` : '';\n    return `${baseUrl}/dhis-web-messaging/${msgIdentifier}`;\n  };\n\n  const getMessageSender = msg => {\n    const latestMsg = msg.messages.slice(-1)[0];\n    return latestMsg.sender ? latestMsg.sender.displayName : '';\n  };\n\n  const getMessageItems = () => {\n    const modeClass = isViewMode(dashboardMode) ? 'view' : null;\n    return messages.map(msg => {\n      const redirectToMsg = () => {\n        if (isViewMode(dashboardMode)) {\n          document.location.href = getMessageHref(msg);\n        }\n      };\n\n      const sender = msg.messageType === PRIVATE ? getMessageSender(msg) : messageTypes[msg.messageType];\n      const readClass = !msg.read ? 'unread' : null;\n      const latestMsg = msg.messages.slice(-1)[0];\n      const msgDate = latestMsg.lastUpdated;\n      return /*#__PURE__*/React.createElement(\"li\", {\n        className: `message-item ${modeClass}`,\n        key: msg.id,\n        onClick: redirectToMsg\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: `message-title ${readClass}`\n      }, msg.displayName, \" (\", msg.messageCount, \")\"), /*#__PURE__*/React.createElement(\"p\", {\n        className: classes.sender\n      }, sender, \" -\", ' ', getFormattedDate(msgDate, userSettings.keyUiLocale)), /*#__PURE__*/React.createElement(\"p\", {\n        className: classes.snippet\n      }, latestMsg.text));\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ItemHeader, {\n    title: i18n.t('Messages'),\n    itemId: item.id,\n    dashboardMode: dashboardMode,\n    isShortened: item.shortened\n  }), /*#__PURE__*/React.createElement(Divider, {\n    margin: `0 0 ${spacers.dp4} 0`\n  }), messages.length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard-item-content\"\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: classes.list\n  }, getMessageItems()), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.seeAll\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: getMessageHref()\n  }, i18n.t('See all messages')))));\n};\n\nMessagesItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  messages: PropTypes.array\n};\n\nconst mapStateToProps = state => {\n  return {\n    messages: Object.values(sGetMessagesRoot(state))\n  };\n};\n\nconst MessagesContainer = connect(mapStateToProps, null)(MessagesItem);\nexport default MessagesContainer;","import i18n from '@dhis2/d2-i18n';\nimport { colors, IconQuestion24 } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ItemHeader from '../ItemHeader/ItemHeader';\n\nconst NotSupportedItem = ({\n  item,\n  dashboardMode\n}) => {\n  const message = item.type ? i18n.t('Item type \"{{type}}\" is not supported', {\n    type: item.type\n  }) : i18n.t('The item type is missing');\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ItemHeader, {\n    itemId: item.id,\n    dashboardMode: dashboardMode,\n    isShortened: item.shortened\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center',\n      height: '90%'\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", null, message), /*#__PURE__*/React.createElement(IconQuestion24, {\n    color: colors.grey500\n  })));\n};\n\nNotSupportedItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object\n};\nexport default NotSupportedItem;","import React from 'react';\n\nconst PageBreakItem = () => /*#__PURE__*/React.createElement(\"div\", null);\n\nexport default PageBreakItem;","export const SET_SELECTED = 'SET_SELECTED';\nexport const CLEAR_SELECTED = 'CLEAR_SELECTED';\nexport const DEFAULT_SELECTED_STATE = {};\nconst SELECTED_PROPERTIES = {\n  id: '',\n  displayName: '',\n  displayDescription: '',\n  access: {},\n  restrictFilters: false,\n  allowedFilters: [],\n  dashboardItems: [],\n  layout: [],\n  itemConfig: {}\n};\nexport default ((state = DEFAULT_SELECTED_STATE, action) => {\n  switch (action.type) {\n    case SET_SELECTED:\n      {\n        const newState = {};\n        Object.keys(SELECTED_PROPERTIES).map(k => newState[k] = action.value[k]);\n        return newState;\n      }\n\n    case CLEAR_SELECTED:\n      {\n        return DEFAULT_SELECTED_STATE;\n      }\n\n    default:\n      return state;\n  }\n}); // Selectors\n\nexport const sGetSelected = state => state.selected;\nexport const sGetSelectedId = state => sGetSelected(state).id;\nexport const sGetSelectedDisplayName = state => sGetSelected(state).displayName;\nexport const sGetSelectedDisplayDescription = state => sGetSelected(state).displayDescription;\nexport const sGetSelectedDashboardItems = state => sGetSelected(state).dashboardItems || SELECTED_PROPERTIES.dashboardItems;\nexport const sGetIsNullDashboardItems = state => sGetSelected(state).dashboardItems === undefined;","import i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { sGetIsEditing } from '../../../reducers/editDashboard';\nimport { sGetNamedItemFilters } from '../../../reducers/itemFilters';\nimport { sGetPrintDashboardName, sGetPrintDashboardDescription } from '../../../reducers/printDashboard';\nimport { sGetSelectedDisplayName, sGetSelectedDisplayDescription } from '../../../reducers/selected';\nimport { sGetShowDescription } from '../../../reducers/showDescription';\nimport classes from './styles/Item.module.css';\n\nconst PrintTitlePageItem = ({\n  name,\n  description,\n  itemFilters,\n  showDescription\n}) => {\n  const getItemFilterList = () => {\n    const listItems = itemFilters.map(({\n      name,\n      values\n    }) => /*#__PURE__*/React.createElement(\"li\", {\n      className: classes.filterListItem,\n      key: name\n    }, name, \": \", values.map(val => val.name).join(', ')));\n    return /*#__PURE__*/React.createElement(\"ul\", {\n      className: classes.filterList\n    }, listItems);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.titlePage\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.name\n  }, name), showDescription && description && /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.description\n  }, description), itemFilters.length > 0 && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.filterTitle\n  }, i18n.t('Filters applied')), getItemFilterList()));\n};\n\nPrintTitlePageItem.propTypes = {\n  description: PropTypes.string,\n  itemFilters: PropTypes.array,\n  name: PropTypes.string,\n  showDescription: PropTypes.bool\n};\nPrintTitlePageItem.defaultProps = {\n  description: '',\n  name: '',\n  showDescription: false\n};\n\nconst mapStateToProps = state => {\n  const isEditMode = sGetIsEditing(state);\n  const name = isEditMode ? sGetPrintDashboardName(state) || i18n.t('Untitled dashboard') : sGetSelectedDisplayName(state);\n  const description = isEditMode ? sGetPrintDashboardDescription(state) : sGetSelectedDisplayDescription(state);\n  return {\n    name,\n    description,\n    itemFilters: sGetNamedItemFilters(state),\n    showDescription: sGetShowDescription(state)\n  };\n};\n\nexport default connect(mapStateToProps)(PrintTitlePageItem);","import i18n from '@dhis2/d2-i18n';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nconst style = {\n  margin: '21px 28px',\n  fontSize: '14px',\n  lineHeight: '18px',\n  color: colors.grey600\n};\n\nconst SpacerItem = props => {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ItemHeader, {\n    title: i18n.t('Spacer'),\n    itemId: props.item.id,\n    dashboardMode: props.dashboardMode,\n    isShortened: props.item.shortened\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    style: style\n  }, i18n.t('Use a spacer to create empty vertical space between other dashboard items.')));\n};\n\nSpacerItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object\n};\nexport default SpacerItem;","import i18n from '@dhis2/d2-i18n';\nimport { Parser as RichTextParser, Editor as RichTextEditor } from '@dhis2/d2-ui-rich-text';\nimport { Divider, TextArea, spacers } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { acUpdateDashboardItem } from '../../../actions/editDashboard';\nimport { isEditMode, PRINT_LAYOUT } from '../../../modules/dashboardModes';\nimport { sGetEditDashboardItems } from '../../../reducers/editDashboard';\nimport { sGetIsPrinting, sGetPrintDashboardItems } from '../../../reducers/printDashboard';\nimport { sGetSelectedDashboardItems } from '../../../reducers/selected';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport PrintItemInfo from '../ItemHeader/PrintItemInfo';\nconst style = {\n  textDiv: {\n    padding: '10px',\n    whiteSpace: 'pre-line',\n    lineHeight: '20px'\n  },\n  textField: {\n    fontSize: '14px',\n    fontStretch: 'normal',\n    width: '90%',\n    margin: '0 auto',\n    display: 'block',\n    lineHeight: '24px'\n  },\n  container: {\n    marginBottom: '20px',\n    marginTop: '20px'\n  }\n};\n\nconst TextItem = props => {\n  const {\n    item,\n    dashboardMode,\n    text,\n    acUpdateDashboardItem\n  } = props;\n\n  const onChangeText = text => {\n    const updatedItem = { ...item,\n      text\n    };\n    acUpdateDashboardItem(updatedItem);\n  };\n\n  const viewItem = () => {\n    const textDivStyle = Object.assign({}, style.textField, style.textDiv);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dashboard-item-content\",\n      style: style.container\n    }, /*#__PURE__*/React.createElement(RichTextParser, {\n      style: textDivStyle\n    }, text));\n  };\n\n  const editItem = () => {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ItemHeader, {\n      title: i18n.t('Text item'),\n      itemId: item.id,\n      dashboardMode: dashboardMode\n    }), /*#__PURE__*/React.createElement(Divider, {\n      margin: `0 0 ${spacers.dp4} 0`\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dashboard-item-content\"\n    }, /*#__PURE__*/React.createElement(RichTextEditor, {\n      onEdit: event => onChangeText(event.target.value)\n    }, /*#__PURE__*/React.createElement(TextArea, {\n      rows: 30,\n      value: text,\n      placeholder: i18n.t('Add text here'),\n      onChange: ({\n        value\n      }) => onChangeText(value)\n    }))));\n  };\n\n  const printItem = () => {\n    const textDivStyle = Object.assign({}, style.textField, style.textDiv);\n    return /*#__PURE__*/React.createElement(React.Fragment, null, props.item.shortened ? /*#__PURE__*/React.createElement(PrintItemInfo, null) : null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dashboard-item-content\",\n      style: style.container\n    }, /*#__PURE__*/React.createElement(RichTextParser, {\n      style: textDivStyle\n    }, text)));\n  };\n\n  let textItem;\n\n  if (isEditMode(dashboardMode)) {\n    textItem = editItem;\n  } else if (dashboardMode === PRINT_LAYOUT) {\n    textItem = printItem;\n  } else {\n    textItem = viewItem;\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, textItem());\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const isPrintPreview = sGetIsPrinting(state);\n  let items;\n\n  if (isPrintPreview) {\n    items = sGetPrintDashboardItems(state);\n  } else if (isEditMode(ownProps.dashboardMode)) {\n    items = sGetEditDashboardItems(state);\n  } else {\n    items = sGetSelectedDashboardItems(state);\n  }\n\n  const item = items.find(item => item.id === ownProps.item.id);\n  return {\n    text: item ? item.text : ''\n  };\n};\n\nTextItem.propTypes = {\n  acUpdateDashboardItem: PropTypes.func,\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  text: PropTypes.string\n};\nexport default connect(mapStateToProps, {\n  acUpdateDashboardItem\n})(TextItem);","export const SET_ITEM_ACTIVE_TYPE = 'SET_ITEM_ACTIVE_TYPE';\nexport const CLEAR_ITEM_ACTIVE_TYPES = 'CLEAR_ITEM_ACTIVE_TYPES';\nexport const DEFAULT_STATE_ITEM_ACTIVE_TYPES = {};\nexport default ((state = DEFAULT_STATE_ITEM_ACTIVE_TYPES, action) => {\n  switch (action.type) {\n    case SET_ITEM_ACTIVE_TYPE:\n      {\n        return { ...state,\n          [action.id]: action.activeType\n        };\n      }\n\n    case CLEAR_ITEM_ACTIVE_TYPES:\n      {\n        return DEFAULT_STATE_ITEM_ACTIVE_TYPES;\n      }\n\n    default:\n      return state;\n  }\n});\nexport const sGetItemActiveType = (state, id) => state.itemActiveTypes[id];","import { SET_ITEM_ACTIVE_TYPE, CLEAR_ITEM_ACTIVE_TYPES } from '../reducers/itemActiveTypes';\nexport const acSetItemActiveType = (id, activeType) => {\n  const action = {\n    type: SET_ITEM_ACTIVE_TYPE,\n    id,\n    activeType\n  };\n  return action;\n};\nexport const acClearItemActiveTypes = () => ({\n  type: CLEAR_ITEM_ACTIVE_TYPES\n});","import objectClean from 'd2-utilizr/lib/objectClean';\nimport { orObject } from '../modules/util';\n/** @module reducers/visualizations */\n\nexport const ADD_VISUALIZATION = 'ADD_VISUALIZATION';\nexport const CLEAR_VISUALIZATIONS = 'CLEAR_VISUALIZATIONS';\nexport const DEFAULT_STATE_VISUALIZATIONS = {};\n\nconst isEmpty = p => p === undefined || p === null;\n\nexport default ((state = DEFAULT_STATE_VISUALIZATIONS, action) => {\n  switch (action.type) {\n    case ADD_VISUALIZATION:\n      {\n        return { ...state,\n          [action.value.id]: objectClean({ ...orObject(state[action.value.id]),\n            ...action.value\n          }, isEmpty)\n        };\n      }\n\n    case CLEAR_VISUALIZATIONS:\n      {\n        return DEFAULT_STATE_VISUALIZATIONS;\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nconst sGetVisualizationsRoot = state => state.visualizations; // selectors level 1\n\n\nexport const sGetVisualization = (state, id) => {\n  return sGetVisualizationsRoot(state)[id];\n};","import { ADD_VISUALIZATION, CLEAR_VISUALIZATIONS } from '../reducers/visualizations';\nexport const acAddVisualization = value => ({\n  type: ADD_VISUALIZATION,\n  value\n});\nexport const acClearVisualizations = () => ({\n  type: CLEAR_VISUALIZATIONS\n});","import { getInstance } from 'd2';\nexport const apiPostDataStatistics = async (eventType, id) => {\n  const d2 = await getInstance();\n  const url = `dataStatistics?eventType=${eventType}&favorite=${id}`;\n  d2.Api.getApi().post(url);\n};","import isObject from 'lodash/isObject';\nimport { itemTypeMap } from './itemTypes';\nexport const getVisualizationFromItem = item => {\n  var _itemTypeMap$item$typ;\n\n  if (!isObject(item)) {\n    return null;\n  }\n\n  const propName = (_itemTypeMap$item$typ = itemTypeMap[item.type]) === null || _itemTypeMap$item$typ === void 0 ? void 0 : _itemTypeMap$item$typ.propName;\n  return item[propName] || item.visualization || item.map || item.eventReport || item.eventChart || {};\n};\nexport const getVisualizationId = item => getVisualizationFromItem(item).id;\nexport const getVisualizationName = item => getVisualizationFromItem(item).name;","import { getInstance } from 'd2';\nimport { getVisualizationId } from '../modules/item';\nimport { getEndPointName, MAP } from '../modules/itemTypes';\nimport { getMapFields, getFavoriteFields } from './metadata';\nexport const apiFetchVisualization = async item => {\n  const id = getVisualizationId(item);\n  const fields = item.type === MAP ? getMapFields() : getFavoriteFields({\n    withDimensions: true,\n    withOptions: true\n  });\n  const d2 = await getInstance();\n  return await d2.Api.getApi().get(`${getEndPointName(item.type)}/${id}`, {\n    fields\n  });\n};","export const DEFAULT_SETTINGS = {\n  keyDashboardContextMenuItemOpenInRelevantApp: true,\n  keyDashboardContextMenuItemShowInterpretationsAndDetails: true,\n  keyDashboardContextMenuItemSwitchViewType: true,\n  keyDashboardContextMenuItemViewFullscreen: true,\n  keyGatherAnalyticalObjectStatisticsInDashboardViews: false\n};\nconst SYSTEM_SETTINGS = ['keyDashboardContextMenuItemOpenInRelevantApp', 'keyDashboardContextMenuItemShowInterpretationsAndDetails', 'keyDashboardContextMenuItemSwitchViewType', 'keyDashboardContextMenuItemViewFullscreen', 'keyGatherAnalyticalObjectStatisticsInDashboardViews', 'keyHideBiMonthlyPeriods', 'keyHideDailyPeriods', 'keyHideMonthlyPeriods', 'keyHideWeeklyPeriods', 'keyHideBiWeeklyPeriods'];\nconst SYSTEM_SETTINGS_REMAPPINGS = {\n  keyDashboardContextMenuItemOpenInRelevantApp: 'allowVisOpenInApp',\n  keyDashboardContextMenuItemShowInterpretationsAndDetails: 'allowVisShowInterpretations',\n  keyDashboardContextMenuItemSwitchViewType: 'allowVisViewAs',\n  keyDashboardContextMenuItemViewFullscreen: 'allowVisFullscreen',\n  keyHideBiMonthlyPeriods: 'hideBiMonthlyPeriods',\n  keyHideDailyPeriods: 'hideDailyPeriods',\n  keyHideMonthlyPeriods: 'hideMonthlyPeriods',\n  keyHideWeeklyPeriods: 'hideWeeklyPeriods',\n  keyHideBiWeeklyPeriods: 'hideBiWeeklyPeriods'\n};\nexport const renameSystemSettings = settings => {\n  return Object.keys(settings).reduce((mapped, key) => {\n    mapped[SYSTEM_SETTINGS_REMAPPINGS[key] || key] = settings[key];\n    return mapped;\n  }, {});\n};\nexport const systemSettingsQuery = {\n  resource: 'systemSettings',\n  params: {\n    key: SYSTEM_SETTINGS\n  }\n};","import { useDataEngine } from '@dhis2/app-runtime';\nimport PropTypes from 'prop-types';\nimport React, { useContext, useState, useEffect, createContext } from 'react';\nimport { systemSettingsQuery, renameSystemSettings, DEFAULT_SETTINGS } from '../api/systemSettings';\nexport const SystemSettingsCtx = /*#__PURE__*/createContext({});\n\nconst SystemSettingsProvider = ({\n  children\n}) => {\n  const [settings, setSettings] = useState([]);\n  const engine = useDataEngine();\n  useEffect(() => {\n    async function fetchData() {\n      const {\n        systemSettings\n      } = await engine.query({\n        systemSettings: systemSettingsQuery\n      });\n      setSettings(Object.assign({}, renameSystemSettings(DEFAULT_SETTINGS), renameSystemSettings(systemSettings)));\n    }\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/React.createElement(SystemSettingsCtx.Provider, {\n    value: {\n      settings\n    }\n  }, children);\n};\n\nSystemSettingsProvider.propTypes = {\n  children: PropTypes.node\n};\nexport default SystemSettingsProvider;\nexport const useSystemSettings = () => useContext(SystemSettingsCtx);","import { colors } from '@dhis2/ui';\nimport React from 'react';\nexport const Warning = () => /*#__PURE__*/React.createElement(\"svg\", {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  height: \"24\",\n  viewBox: \"0 0 24 24\",\n  width: \"24\",\n  fill: colors.grey600\n}, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M0 0h24v24H0z\",\n  fill: \"none\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z\"\n}));","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Warning } from './assets/icons';\nimport classes from './styles/FatalErrorBoundary.module.css';\n\nclass FatalErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      errorFound: false\n    };\n  }\n\n  componentDidCatch(error, info) {\n    this.setState({\n      errorFound: true\n    });\n    console.log('error: ', error);\n    console.log('info: ', info);\n    this.props.onFatalError();\n  }\n\n  render() {\n    if (this.state.errorFound) {\n      return /*#__PURE__*/React.createElement(\"p\", {\n        className: classes.container\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: classes.icon\n      }, /*#__PURE__*/React.createElement(Warning, null)), /*#__PURE__*/React.createElement(\"span\", {\n        className: classes.message\n      }, this.props.message));\n    }\n\n    return this.props.children;\n  }\n\n}\n\nFatalErrorBoundary.propTypes = {\n  children: PropTypes.node,\n  message: PropTypes.string,\n  onFatalError: PropTypes.func\n};\nFatalErrorBoundary.defaultProps = {\n  onFatalError: Function.prototype\n};\nexport default FatalErrorBoundary;","export const getGridItemDomElementClassName = itemId => `reactgriditem-${itemId}`;","import { getGridItemDomElementClassName } from '../../../modules/getGridItemDomElementClassName';\nexport const getGridItemElement = itemId => document.querySelector(`.${getGridItemDomElementClassName(itemId)}`);","import { getGridItemDomElementClassName } from '../../../modules/getGridItemDomElementClassName';\nexport const isElementFullscreen = itemId => {\n  const fullscreenElement = document.fullscreenElement || document.webkitFullscreenElement;\n  return fullscreenElement === null || fullscreenElement === void 0 ? void 0 : fullscreenElement.classList.contains(getGridItemDomElementClassName(itemId));\n};","import { useOnlineStatus } from '@dhis2/app-runtime';\nimport i18n from '@dhis2/d2-i18n';\nimport { Tooltip as UiTooltip } from '@dhis2/ui';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport classes from './styles/Tooltip.module.css';\n\nconst Tooltip = ({\n  disabledWhenOffline,\n  content,\n  children\n}) => {\n  const {\n    online\n  } = useOnlineStatus();\n  const notAllowed = disabledWhenOffline && !online;\n  return /*#__PURE__*/React.createElement(UiTooltip, {\n    content: content || i18n.t('Not available offline'),\n    openDelay: 200,\n    closeDelay: 100\n  }, ({\n    onMouseOver,\n    onMouseOut,\n    ref\n  }) => /*#__PURE__*/React.createElement(\"span\", {\n    className: cx(classes.span, notAllowed && classes.notAllowed),\n    onMouseOver: () => notAllowed && onMouseOver(),\n    onMouseOut: () => notAllowed && onMouseOut(),\n    ref: ref\n  }, children));\n};\n\nTooltip.propTypes = {\n  children: PropTypes.node,\n  content: PropTypes.string,\n  disabledWhenOffline: PropTypes.bool\n};\nTooltip.defaultProps = {\n  disabledWhenOffline: true\n};\nexport default Tooltip;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { useOnlineStatus } from '@dhis2/app-runtime';\nimport i18n from '@dhis2/d2-i18n';\nimport { MenuItem } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport OfflineTooltip from './OfflineTooltip';\n\nconst MenuItemWithTooltip = ({\n  disabledWhenOffline,\n  tooltip,\n  label,\n  ...rest\n}) => {\n  const {\n    offline\n  } = useOnlineStatus();\n  const tooltipContent = disabledWhenOffline && offline ? i18n.t('Not available offline') : tooltip;\n  const notAllowed = disabledWhenOffline && offline;\n  return /*#__PURE__*/React.createElement(MenuItem, _extends({\n    dense: true,\n    disabled: notAllowed,\n    label: /*#__PURE__*/React.createElement(OfflineTooltip, {\n      content: tooltipContent\n    }, label)\n  }, rest));\n};\n\nMenuItemWithTooltip.propTypes = {\n  disabledWhenOffline: PropTypes.bool,\n  label: PropTypes.string,\n  tooltip: PropTypes.string\n};\nMenuItemWithTooltip.defaultProps = {\n  disabledWhenOffline: true,\n  tooltip: ''\n};\nexport default MenuItemWithTooltip;","export const THEMATIC_LAYER = 'thematic';\n\nconst getThematicMapViews = map => map.mapViews && map.mapViews.find(mv => mv.layer.includes(THEMATIC_LAYER));\n\nexport default getThematicMapViews;","import i18n from '@dhis2/d2-i18n';\nimport { IconVisualizationColumn16, IconTable16, IconWorld16 } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { CHART, MAP, REPORT_TABLE, EVENT_CHART, EVENT_REPORT, isTrackerDomainType, hasMapView } from '../../../../modules/itemTypes';\nimport MenuItem from '../../../MenuItemWithTooltip';\nimport getThematicMapViews from '../getThematicMapViews';\n\nconst ViewAsMenuItems = ({\n  type,\n  activeType,\n  visualization,\n  onActiveTypeChanged\n}) => {\n  const isTrackerType = isTrackerDomainType(type);\n\n  const onViewTable = () => onActiveTypeChanged(isTrackerType ? EVENT_REPORT : REPORT_TABLE);\n\n  const onViewChart = () => onActiveTypeChanged(isTrackerType ? EVENT_CHART : CHART);\n\n  const onViewMap = () => onActiveTypeChanged(MAP);\n\n  const notSupported = type === MAP && !getThematicMapViews(visualization);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, activeType !== CHART && activeType !== EVENT_CHART && /*#__PURE__*/React.createElement(MenuItem, {\n    tooltip: notSupported ? i18n.t(\"This map can't be displayed as a chart\") : null,\n    label: i18n.t('View as Chart'),\n    onClick: onViewChart,\n    icon: /*#__PURE__*/React.createElement(IconVisualizationColumn16, null)\n  }), activeType !== REPORT_TABLE && activeType !== EVENT_REPORT && /*#__PURE__*/React.createElement(MenuItem, {\n    tooltip: notSupported ? i18n.t(\"This map can't be displayed as a table\") : null,\n    label: i18n.t('View as Table'),\n    onClick: onViewTable,\n    icon: /*#__PURE__*/React.createElement(IconTable16, null)\n  }), hasMapView(type) && activeType !== MAP && /*#__PURE__*/React.createElement(MenuItem, {\n    label: i18n.t('View as Map'),\n    onClick: onViewMap,\n    icon: /*#__PURE__*/React.createElement(IconWorld16, null)\n  }));\n};\n\nViewAsMenuItems.propTypes = {\n  activeType: PropTypes.string,\n  type: PropTypes.string,\n  visualization: PropTypes.object,\n  onActiveTypeChanged: PropTypes.func\n};\nexport default ViewAsMenuItems;","import { isSingleValue, isYearOverYear, VIS_TYPE_GAUGE, VIS_TYPE_PIE } from '@dhis2/analytics';\nimport { useConfig } from '@dhis2/app-runtime';\nimport i18n from '@dhis2/d2-i18n';\nimport { colors, Button, Menu, Popover, Divider, IconFullscreen16, IconFullscreenExit16, IconLaunch16, IconMessages16, IconMore24 } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport React, { useState, createRef } from 'react';\nimport { getVisualizationId } from '../../../../modules/item';\nimport { getAppName, itemTypeMap, getItemTypeForVis } from '../../../../modules/itemTypes';\nimport { isSmallScreen } from '../../../../modules/smallScreen';\nimport MenuItem from '../../../MenuItemWithTooltip';\nimport { useSystemSettings } from '../../../SystemSettingsProvider';\nimport { useWindowDimensions } from '../../../WindowDimensionsProvider';\nimport { isElementFullscreen } from '../isElementFullscreen';\nimport ViewAsMenuItems from './ViewAsMenuItems';\n\nconst ItemContextMenu = props => {\n  const [menuIsOpen, setMenuIsOpen] = useState(false);\n  const {\n    width\n  } = useWindowDimensions();\n  const {\n    baseUrl\n  } = useConfig();\n  const {\n    allowVisOpenInApp,\n    allowVisShowInterpretations,\n    allowVisViewAs,\n    allowVisFullscreen\n  } = useSystemSettings().settings;\n  const fullscreenAllowed = props.fullscreenSupported && allowVisFullscreen;\n  const noOptionsEnabled = !allowVisOpenInApp && !allowVisShowInterpretations && !allowVisViewAs && !fullscreenAllowed;\n\n  if (noOptionsEnabled || !allowVisOpenInApp && props.loadItemFailed) {\n    return null;\n  }\n\n  const toggleInterpretations = () => {\n    props.onToggleFooter();\n\n    if (menuIsOpen) {\n      closeMenu();\n    }\n  };\n\n  const toggleFullscreen = () => {\n    props.onToggleFullscreen();\n    closeMenu();\n  };\n\n  const onActiveTypeChanged = type => {\n    closeMenu();\n    props.onSelectActiveType(type);\n  };\n\n  const openMenu = () => {\n    setMenuIsOpen(true);\n  };\n\n  const closeMenu = () => setMenuIsOpen(false);\n\n  const {\n    item,\n    visualization,\n    loadItemFailed,\n    activeType\n  } = props;\n  const type = visualization.type || item.type;\n  const canViewAs = allowVisViewAs && !isSingleValue(type) && !isYearOverYear(type) && type !== VIS_TYPE_GAUGE && type !== VIS_TYPE_PIE;\n  const interpretationMenuLabel = props.activeFooter ? i18n.t(`Hide details and interpretations`) : i18n.t(`Show details and interpretations`);\n  const buttonRef = /*#__PURE__*/createRef();\n  const itemHref = `${baseUrl}/${itemTypeMap[item.type].appUrl(getVisualizationId(item))}`;\n  return isElementFullscreen(item.id) ? /*#__PURE__*/React.createElement(Button, {\n    small: true,\n    secondary: true,\n    onClick: props.onToggleFullscreen\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    \"data-testid\": \"exit-fullscreen-button\"\n  }, /*#__PURE__*/React.createElement(IconFullscreenExit16, {\n    color: colors.grey600\n  }))) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    ref: buttonRef\n  }, /*#__PURE__*/React.createElement(Button, {\n    small: true,\n    secondary: true,\n    onClick: openMenu,\n    dataTest: \"dashboarditem-menu-button\",\n    icon: /*#__PURE__*/React.createElement(IconMore24, {\n      color: colors.grey700\n    })\n  })), menuIsOpen && /*#__PURE__*/React.createElement(Popover, {\n    reference: buttonRef,\n    placement: \"auto-start\",\n    arrow: false,\n    onClickOutside: closeMenu\n  }, /*#__PURE__*/React.createElement(Menu, {\n    dense: true\n  }, canViewAs && !loadItemFailed && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ViewAsMenuItems, {\n    type: getItemTypeForVis(item),\n    activeType: activeType,\n    onActiveTypeChanged: onActiveTypeChanged,\n    visualization: visualization\n  }), (allowVisShowInterpretations || allowVisOpenInApp && !isSmallScreen(width) || fullscreenAllowed) && /*#__PURE__*/React.createElement(\"span\", {\n    \"data-testid\": \"divider\"\n  }, /*#__PURE__*/React.createElement(Divider, null))), allowVisOpenInApp && !isSmallScreen(width) && /*#__PURE__*/React.createElement(MenuItem, {\n    icon: /*#__PURE__*/React.createElement(IconLaunch16, null),\n    label: i18n.t('Open in {{appName}} app', {\n      appName: getAppName(item.type)\n    }),\n    href: itemHref,\n    target: \"_blank\"\n  }), allowVisShowInterpretations && !loadItemFailed && /*#__PURE__*/React.createElement(MenuItem, {\n    icon: /*#__PURE__*/React.createElement(IconMessages16, null),\n    label: interpretationMenuLabel,\n    onClick: toggleInterpretations\n  }), fullscreenAllowed && !loadItemFailed && /*#__PURE__*/React.createElement(MenuItem, {\n    disabledWhenOffline: false,\n    icon: /*#__PURE__*/React.createElement(IconFullscreen16, null),\n    label: i18n.t('View fullscreen'),\n    onClick: toggleFullscreen\n  }))));\n};\n\nItemContextMenu.propTypes = {\n  activeFooter: PropTypes.bool,\n  activeType: PropTypes.string,\n  fullscreenSupported: PropTypes.bool,\n  item: PropTypes.object,\n  loadItemFailed: PropTypes.bool,\n  visualization: PropTypes.object,\n  onSelectActiveType: PropTypes.func,\n  onToggleFooter: PropTypes.func,\n  onToggleFullscreen: PropTypes.func\n};\nexport default ItemContextMenu;","import { useOnlineStatus } from '@dhis2/app-runtime';\nimport { useD2 } from '@dhis2/app-runtime-adapter-d2';\nimport i18n from '@dhis2/d2-i18n';\nimport InterpretationsComponent from '@dhis2/d2-ui-interpretations';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { getVisualizationId } from '../../../modules/item';\nimport FatalErrorBoundary from './FatalErrorBoundary';\nimport classes from './styles/ItemFooter.module.css';\n\nconst ItemFooter = props => {\n  const {\n    d2\n  } = useD2();\n  const {\n    offline\n  } = useOnlineStatus();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.itemFooter,\n    \"data-test\": \"dashboarditem-footer\"\n  }, /*#__PURE__*/React.createElement(\"hr\", {\n    className: classes.line\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.scrollContainer\n  }, /*#__PURE__*/React.createElement(FatalErrorBoundary, {\n    message: i18n.t('There was a problem loading interpretations for this item')\n  }, /*#__PURE__*/React.createElement(InterpretationsComponent, {\n    d2: d2,\n    item: props.item,\n    type: props.item.type.toLowerCase(),\n    id: getVisualizationId(props.item),\n    appName: \"dashboard\",\n    isOffline: offline\n  }))));\n};\n\nItemFooter.propTypes = {\n  item: PropTypes.object.isRequired\n};\nexport default ItemFooter;","// Note that this ignores discrepancies in 'this', so shouldn't be used with bound functions\n// This is useful instead of lodash/memoize when we only need to memoize a single value\n// Inspiration: https://github.com/alexreardon/memoize-one\nconst memoizeOne = fn => {\n  let lastArgs = undefined;\n  let lastValue = undefined;\n  return (...args) => {\n    if (lastArgs && args.length === lastArgs.length && args.every((arg, i) => arg === lastArgs[i])) {\n      return lastValue;\n    }\n\n    lastArgs = args;\n    lastValue = fn(...args);\n    return lastValue;\n  };\n};\n\nexport default memoizeOne;","import { CircularLoader } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport classes from './styles/LoadingMask.module.css';\n\nconst LoadingMask = ({\n  style\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.center,\n    style: style\n  }, /*#__PURE__*/React.createElement(CircularLoader, null));\n};\n\nLoadingMask.propTypes = {\n  style: PropTypes.object\n};\nexport default LoadingMask;","import { useConfig } from '@dhis2/app-runtime';\nimport i18n from '@dhis2/d2-i18n';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { isPrintMode } from '../../../../modules/dashboardModes';\nimport { getVisualizationId } from '../../../../modules/item';\nimport { getAppName, itemTypeMap } from '../../../../modules/itemTypes';\nimport classes from './styles/VisualizationErrorMessage.module.css';\n\nconst getErrorIcon = () => /*#__PURE__*/React.createElement(\"svg\", {\n  height: \"96\",\n  viewBox: \"0 0 96 96\",\n  width: \"96\",\n  xmlns: \"http://www.w3.org/2000/svg\"\n}, /*#__PURE__*/React.createElement(\"g\", {\n  fill: colors.grey400,\n  transform: \"translate(3 3)\"\n}, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m40.5 73.5000001c0 2.4852813 2.0147186 4.5 4.5 4.5s4.5-2.0147187 4.5-4.5c0-2.4142734-1.9012365-4.3844892-4.2881643-4.4951021l-.2128322-.0048979c-2.4848234.0005384-4.4990035 2.0150507-4.4990035 4.5z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m48 60v-30c0-1.6568542-1.3431458-3-3-3s-3 1.3431458-3 3v30c0 1.6568542 1.3431458 3 3 3s3-1.3431458 3-3z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m45-2.99904788c3.8985931 0 7.4578604 2.21715778 9.1770339 5.71709169l37.8912554 77.19048409c1.3845546 2.8165473 1.2171646 6.1482722-.4427191 8.811863-1.6598833 2.6635901-4.5771005 4.2816904-7.7135702 4.2796124h-77.82201115c-3.13845856.002078-6.05567574-1.6160223-7.71555901-4.2796124-1.65988369-2.6635908-1.82727377-5.9953157-.44346379-8.8103471l37.89234295-77.19269833c1.7188306-3.49923557 5.2780979-5.71639335 9.176691-5.71639335zm0 6c-1.6106864 0-3.0811818.91600885-3.7909661 2.36100407l-37.89274459 77.19351591c-.47005356.9562122-.41322496 2.0873262.15030227 2.99161.56352731.9042839 1.5539177 1.4529206 2.62140842 1.4529206h77.8259889c1.0655018 0 2.0558922-.5486367 2.6194195-1.4529206.5635272-.9042838.6203558-2.0353978.1495577-2.9931259l-37.8916571-77.19130167c-.7101272-1.44569356-2.1806226-2.36170241-3.791309-2.36170241z\"\n})));\n\nconst VisualizationErrorMessage = ({\n  item,\n  dashboardMode\n}) => {\n  const {\n    baseUrl\n  } = useConfig();\n  const visHref = `${baseUrl}/${itemTypeMap[item.type].appUrl(getVisualizationId(item))}`;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.center\n  }, getErrorIcon(), /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.errorMessage\n  }, i18n.t('There was an error loading data for this item')), !isPrintMode(dashboardMode) ? /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.appLink\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    onClick: e => e.stopPropagation(),\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    href: visHref\n  }, i18n.t('Open this item in {{appName}}', {\n    appName: getAppName(item.type)\n  }))) : null);\n};\n\nVisualizationErrorMessage.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object\n};\nexport default VisualizationErrorMessage;","import PropTypes from 'prop-types';\nimport React, { Suspense, useState, useEffect, useCallback } from 'react';\nimport { useUserSettings } from '../../../UserSettingsProvider';\nimport LoadingMask from './LoadingMask';\nimport classes from './styles/DataVisualizerPlugin.module.css';\nimport VisualizationErrorMessage from './VisualizationErrorMessage';\nconst VisualizationPlugin = /*#__PURE__*/React.lazy(() => import(\n/* webpackChunkName: \"data-visualizer-plugin\" */\n\n/* webpackPrefetch: true */\n'@dhis2/data-visualizer-plugin'));\n\nconst DataVisualizerPlugin = ({\n  filterVersion,\n  item,\n  style,\n  visualization,\n  dashboardMode\n}) => {\n  const {\n    userSettings\n  } = useUserSettings();\n  const [visualizationLoaded, setVisualizationLoaded] = useState(false);\n  const [error, setError] = useState(false);\n  const onLoadingComplete = useCallback(() => setVisualizationLoaded(true), []);\n\n  const onError = () => setError(true);\n\n  useEffect(() => {\n    setError(false);\n  }, [filterVersion, visualization.type]);\n\n  if (error) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: style\n    }, /*#__PURE__*/React.createElement(VisualizationErrorMessage, {\n      item: item,\n      dashboardMode: dashboardMode\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(Suspense, {\n    fallback: /*#__PURE__*/React.createElement(\"div\", null)\n  }, !visualizationLoaded && /*#__PURE__*/React.createElement(LoadingMask, {\n    style: style\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.wrapper\n  }, /*#__PURE__*/React.createElement(VisualizationPlugin, {\n    visualization: visualization,\n    forDashboard: true,\n    userSettings: userSettings,\n    style: style,\n    onLoadingComplete: onLoadingComplete,\n    onError: onError\n  })));\n};\n\nDataVisualizerPlugin.propTypes = {\n  dashboardMode: PropTypes.string,\n  filterVersion: PropTypes.string,\n  item: PropTypes.object,\n  style: PropTypes.object,\n  visualization: PropTypes.object\n};\nexport default DataVisualizerPlugin;","const getFilteredVisualization = (visualization, filters) => {\n  if (!Object.keys(filters).length) {\n    return visualization;\n  } // deep clone objects in filters to avoid changing the visualization in the Redux store\n\n\n  const visRows = visualization.rows.map(obj => ({ ...obj\n  }));\n  const visColumns = visualization.columns.map(obj => ({ ...obj\n  }));\n  const visFilters = visualization.filters.map(obj => ({ ...obj\n  }));\n  Object.keys(filters).forEach(dimensionId => {\n    if (filters[dimensionId]) {\n      let dimensionFound = false;\n      [visRows, visColumns, visFilters].forEach(dimensionObjects => dimensionObjects.filter(obj => obj.dimension === dimensionId).forEach(obj => {\n        dimensionFound = true;\n        obj.items = filters[dimensionId];\n      })); // add dimension to filters if not already present elsewhere\n\n      if (!dimensionFound) {\n        visFilters.push({\n          dimension: dimensionId,\n          items: filters[dimensionId]\n        });\n      }\n    }\n  });\n  return { ...visualization,\n    rows: visRows,\n    columns: visColumns,\n    filters: visFilters\n  };\n};\n\nexport default getFilteredVisualization;","import { VIS_TYPE_COLUMN, VIS_TYPE_PIVOT_TABLE, getAdaptedUiLayoutByType } from '@dhis2/analytics';\nimport { REPORT_TABLE, CHART, MAP } from '../../../../modules/itemTypes';\nimport getThematicMapViews from '../getThematicMapViews';\n\nconst getWithoutId = object => ({ ...object,\n  id: undefined\n});\n\nconst getVisualizationConfig = (visualization, originalType, activeType) => {\n  if (originalType === MAP && originalType !== activeType) {\n    const thematicMapViews = getThematicMapViews(visualization);\n\n    if (thematicMapViews === undefined) {\n      return null;\n    }\n\n    return getWithoutId({ ...visualization,\n      ...thematicMapViews,\n      mapViews: undefined,\n      type: activeType === CHART ? VIS_TYPE_COLUMN : VIS_TYPE_PIVOT_TABLE\n    });\n  } else if (originalType === REPORT_TABLE && activeType === CHART) {\n    const layout = getAdaptedUiLayoutByType(visualization, VIS_TYPE_COLUMN);\n    return getWithoutId({ ...visualization,\n      ...layout,\n      type: VIS_TYPE_COLUMN\n    });\n  } else if (originalType === CHART && activeType === REPORT_TABLE) {\n    const layout = getAdaptedUiLayoutByType(visualization, VIS_TYPE_PIVOT_TABLE);\n    return getWithoutId({ ...visualization,\n      ...layout,\n      type: VIS_TYPE_PIVOT_TABLE\n    });\n  }\n\n  return getWithoutId(visualization);\n};\n\nexport default getVisualizationConfig;","import { useConfig } from '@dhis2/app-runtime';\nimport { useD2 } from '@dhis2/app-runtime-adapter-d2';\nimport PropTypes from 'prop-types';\nimport React, { useEffect, useRef } from 'react';\nimport getVisualizationContainerDomId from '../getVisualizationContainerDomId';\nimport { load, unmount } from './plugin';\n\nconst DefaultPlugin = ({\n  item,\n  activeType,\n  filterVersion,\n  visualization,\n  options,\n  style\n}) => {\n  const {\n    d2\n  } = useD2();\n  const {\n    baseUrl\n  } = useConfig();\n  const credentials = {\n    baseUrl,\n    auth: d2.Api.getApi().defaultHeaders.Authorization\n  };\n  const prevItem = useRef();\n  const prevActiveType = useRef();\n  const prevFilterVersion = useRef();\n  useEffect(() => {\n    load(item, visualization, {\n      credentials,\n      activeType,\n      options\n    });\n    prevItem.current = item;\n    prevActiveType.current = activeType;\n    prevFilterVersion.current = filterVersion;\n    return () => unmount(item, item.type || activeType);\n  }, []);\n  useEffect(() => {\n    if (prevItem.current === item && (prevActiveType.current !== activeType || prevFilterVersion.current !== filterVersion)) {\n      /* Item is the same but type or filters has changed\n       * so necessary to reload\n       */\n      load(item, visualization, {\n        credentials,\n        activeType,\n        options\n      });\n    }\n\n    prevItem.current = item;\n    prevActiveType.current = activeType;\n    prevFilterVersion.current = filterVersion;\n  }, [item, visualization, activeType, filterVersion]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: getVisualizationContainerDomId(item.id),\n    style: style\n  });\n};\n\nDefaultPlugin.propTypes = {\n  activeType: PropTypes.string,\n  filterVersion: PropTypes.string,\n  item: PropTypes.object,\n  options: PropTypes.object,\n  style: PropTypes.object,\n  visualization: PropTypes.object\n};\nDefaultPlugin.defaultProps = {\n  style: {},\n  item: {},\n  options: {},\n  visualization: {}\n};\nexport default DefaultPlugin;","import PropTypes from 'prop-types';\nimport React, { useEffect } from 'react';\nimport getVisualizationContainerDomId from '../getVisualizationContainerDomId';\nimport DefaultPlugin from './DefaultPlugin';\n\nconst LegacyPlugin = ({\n  availableHeight,\n  availableWidth,\n  gridWidth,\n  ...props\n}) => {\n  useEffect(() => {\n    const el = document.querySelector(`#${getVisualizationContainerDomId(props.item.id)}`);\n\n    if (typeof (el === null || el === void 0 ? void 0 : el.setViewportSize) === 'function') {\n      setTimeout(() => el.setViewportSize(el.clientWidth - 5, el.clientHeight - 5), 10);\n    }\n  }, [availableHeight, availableWidth, gridWidth]);\n  return /*#__PURE__*/React.createElement(DefaultPlugin, props);\n};\n\nLegacyPlugin.propTypes = {\n  activeType: PropTypes.string,\n  availableHeight: PropTypes.number,\n  availableWidth: PropTypes.number,\n  gridWidth: PropTypes.number,\n  isFullscreen: PropTypes.bool,\n  item: PropTypes.object\n};\nexport default LegacyPlugin;","import PropTypes from 'prop-types';\nimport React from 'react';\nimport classes from './styles/NoVisualizationMessage.module.css';\n\nconst NoVisualizationMessage = ({\n  message\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.message\n  }, message);\n};\n\nNoVisualizationMessage.propTypes = {\n  message: PropTypes.string\n};\nexport default NoVisualizationMessage;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { useOnlineStatus } from '@dhis2/app-runtime';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport React, { useEffect } from 'react';\nimport { MAP } from '../../../../modules/itemTypes';\nimport getVisualizationContainerDomId from '../getVisualizationContainerDomId';\nimport { isElementFullscreen } from '../isElementFullscreen';\nimport DefaultPlugin from './DefaultPlugin';\nimport NoVisualizationMessage from './NoVisualizationMessage';\nimport { pluginIsAvailable, getPlugin, unmount } from './plugin';\n\nconst MapPlugin = ({\n  visualization,\n  applyFilters,\n  availableHeight,\n  availableWidth,\n  gridWidth,\n  itemFilters,\n  ...props\n}) => {\n  const {\n    offline\n  } = useOnlineStatus();\n  useEffect(() => {\n    const resizeMap = async (id, isFullscreen) => {\n      const plugin = await getPlugin(MAP);\n      (plugin === null || plugin === void 0 ? void 0 : plugin.resize) && plugin.resize(getVisualizationContainerDomId(id), isFullscreen);\n    };\n\n    resizeMap(props.item.id, isElementFullscreen(props.item.id));\n  }, [availableHeight, availableWidth, gridWidth]); // The function returned from this effect is run when this component unmounts\n\n  useEffect(() => () => unmount(props.item, MAP), []);\n  useEffect(() => {\n    const setMapOfflineStatus = async offlineStatus => {\n      const plugin = await getPlugin(MAP);\n      (plugin === null || plugin === void 0 ? void 0 : plugin.setOfflineStatus) && plugin.setOfflineStatus(offlineStatus);\n    };\n\n    setMapOfflineStatus(offline);\n  }, [offline]);\n\n  const getVisualization = () => {\n    if (props.item.type === MAP) {\n      // apply filters only to thematic and event layers\n      // for maps AO\n      const mapViews = visualization.mapViews.map(mapView => {\n        if (mapView.layer.includes('thematic') || mapView.layer.includes('event')) {\n          return applyFilters(mapView, itemFilters);\n        }\n\n        return mapView;\n      });\n      return { ...visualization,\n        mapViews\n      };\n    } else {\n      // this is the case of a non map AO passed to the maps plugin\n      // due to a visualization type switch in dashboard item\n      // maps plugin takes care of converting the AO to a suitable format\n      return applyFilters(visualization, itemFilters);\n    }\n  };\n\n  return pluginIsAvailable(MAP) ? /*#__PURE__*/React.createElement(DefaultPlugin, _extends({\n    options: {\n      hideTitle: true\n    }\n  }, props, {\n    visualization: getVisualization()\n  })) : /*#__PURE__*/React.createElement(NoVisualizationMessage, {\n    message: i18n.t('Unable to load the plugin for this item')\n  });\n};\n\nMapPlugin.propTypes = {\n  applyFilters: PropTypes.func,\n  availableHeight: PropTypes.number,\n  availableWidth: PropTypes.number,\n  gridWidth: PropTypes.number,\n  isFullscreen: PropTypes.bool,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object,\n  visualization: PropTypes.object\n};\nexport default MapPlugin;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport i18n from '@dhis2/d2-i18n';\nimport uniqueId from 'lodash/uniqueId';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { isEditMode } from '../../../../modules/dashboardModes';\nimport { getVisualizationId } from '../../../../modules/item';\nimport { VISUALIZATION, MAP, CHART, REPORT_TABLE, getItemTypeForVis } from '../../../../modules/itemTypes';\nimport { sGetItemFiltersRoot, DEFAULT_STATE_ITEM_FILTERS } from '../../../../reducers/itemFilters';\nimport { sGetVisualization } from '../../../../reducers/visualizations';\nimport memoizeOne from '../memoizeOne';\nimport DataVisualizerPlugin from './DataVisualizerPlugin';\nimport getFilteredVisualization from './getFilteredVisualization';\nimport getVisualizationConfig from './getVisualizationConfig';\nimport LegacyPlugin from './LegacyPlugin';\nimport MapPlugin from './MapPlugin';\nimport NoVisualizationMessage from './NoVisualizationMessage';\nimport { pluginIsAvailable } from './plugin';\n\nclass Visualization extends React.Component {\n  constructor(props) {\n    super(props);\n    this.memoizedGetFilteredVisualization = memoizeOne(getFilteredVisualization);\n    this.memoizedGetVisualizationConfig = memoizeOne(getVisualizationConfig);\n    this.getFilterVersion = memoizeOne(() => uniqueId());\n  }\n\n  render() {\n    const {\n      visualization,\n      activeType,\n      item,\n      itemFilters,\n      ...rest\n    } = this.props;\n\n    if (!visualization) {\n      return /*#__PURE__*/React.createElement(NoVisualizationMessage, {\n        message: i18n.t('No data to display')\n      });\n    }\n\n    const style = {\n      height: this.props.availableHeight\n    };\n\n    if (this.props.availableWidth) {\n      style.width = this.props.availableWidth;\n    }\n\n    const visualizationConfig = this.memoizedGetVisualizationConfig(visualization, getItemTypeForVis(item), activeType);\n    const filterVersion = this.getFilterVersion(itemFilters);\n\n    switch (activeType) {\n      case VISUALIZATION:\n      case CHART:\n      case REPORT_TABLE:\n        {\n          return /*#__PURE__*/React.createElement(DataVisualizerPlugin, {\n            visualization: this.memoizedGetFilteredVisualization(visualizationConfig, itemFilters),\n            style: style,\n            filterVersion: filterVersion,\n            item: item,\n            dashboardMode: this.props.dashboardMode\n          });\n        }\n\n      case MAP:\n        {\n          return /*#__PURE__*/React.createElement(MapPlugin, _extends({\n            item: item,\n            activeType: activeType,\n            visualization: visualizationConfig,\n            itemFilters: itemFilters,\n            applyFilters: this.memoizedGetFilteredVisualization,\n            filterVersion: filterVersion,\n            style: style\n          }, rest));\n        }\n\n      default:\n        {\n          return pluginIsAvailable(activeType || item.type) ? /*#__PURE__*/React.createElement(LegacyPlugin, _extends({\n            item: item,\n            activeType: activeType,\n            visualization: this.memoizedGetFilteredVisualization(visualizationConfig, itemFilters),\n            filterVersion: filterVersion,\n            style: style\n          }, rest)) : /*#__PURE__*/React.createElement(NoVisualizationMessage, {\n            message: i18n.t('Unable to load the plugin for this item')\n          });\n        }\n    }\n  }\n\n}\n\nVisualization.propTypes = {\n  activeType: PropTypes.string,\n  availableHeight: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  availableWidth: PropTypes.number,\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object,\n  visualization: PropTypes.object\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const itemFilters = !isEditMode(ownProps.dashboardMode) ? sGetItemFiltersRoot(state) : DEFAULT_STATE_ITEM_FILTERS;\n  return {\n    itemFilters,\n    visualization: sGetVisualization(state, getVisualizationId(ownProps.item))\n  };\n};\n\nexport default connect(mapStateToProps)(Visualization);","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { acSetItemActiveType } from '../../../actions/itemActiveTypes';\nimport { acAddVisualization } from '../../../actions/visualizations';\nimport { apiPostDataStatistics } from '../../../api/dataStatistics';\nimport { apiFetchVisualization } from '../../../api/fetchVisualization';\nimport { isEditMode, isPrintMode, isViewMode } from '../../../modules/dashboardModes';\nimport { getItemHeightPx } from '../../../modules/gridUtil';\nimport { getVisualizationId, getVisualizationName } from '../../../modules/item';\nimport { getDataStatisticsName, getItemTypeForVis } from '../../../modules/itemTypes';\nimport { sGetIsEditing } from '../../../reducers/editDashboard';\nimport { sGetItemActiveType } from '../../../reducers/itemActiveTypes';\nimport { sGetItemFiltersRoot, DEFAULT_STATE_ITEM_FILTERS } from '../../../reducers/itemFilters';\nimport { sGetVisualization } from '../../../reducers/visualizations';\nimport { SystemSettingsCtx } from '../../SystemSettingsProvider';\nimport { WindowDimensionsCtx } from '../../WindowDimensionsProvider';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport FatalErrorBoundary from './FatalErrorBoundary';\nimport { getGridItemElement } from './getGridItemElement';\nimport { isElementFullscreen } from './isElementFullscreen';\nimport ItemContextMenu from './ItemContextMenu/ItemContextMenu';\nimport ItemFooter from './ItemFooter';\nimport memoizeOne from './memoizeOne';\nimport { pluginIsAvailable } from './Visualization/plugin';\nimport Visualization from './Visualization/Visualization';\n\nclass Item extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"state\", {\n      showFooter: false,\n      configLoaded: false,\n      loadItemFailed: false\n    });\n\n    _defineProperty(this, \"isFullscreenSupported\", () => {\n      const el = getGridItemElement(this.props.item.id);\n      return !!(el !== null && el !== void 0 && el.requestFullscreen || el !== null && el !== void 0 && el.webkitRequestFullscreen);\n    });\n\n    _defineProperty(this, \"onToggleFullscreen\", () => {\n      if (!isElementFullscreen(this.props.item.id)) {\n        const el = getGridItemElement(this.props.item.id);\n\n        if (el !== null && el !== void 0 && el.requestFullscreen) {\n          el.requestFullscreen();\n        } else if (el !== null && el !== void 0 && el.webkitRequestFullscreen) {\n          el.webkitRequestFullscreen();\n        }\n      } else {\n        document.exitFullscreen ? document.exitFullscreen() : document.webkitExitFullscreen();\n      }\n    });\n\n    _defineProperty(this, \"onToggleFooter\", () => {\n      this.setState({\n        showFooter: !this.state.showFooter\n      }, this.props.onToggleItemExpanded(this.props.item.id));\n    });\n\n    _defineProperty(this, \"setActiveType\", type => {\n      type !== this.getActiveType() && this.props.setActiveType(this.props.item.id, type);\n    });\n\n    _defineProperty(this, \"getActiveType\", () => {\n      if (this.props.isEditing) {\n        return getItemTypeForVis(this.props.item);\n      }\n\n      return this.props.activeType || getItemTypeForVis(this.props.item);\n    });\n\n    _defineProperty(this, \"getAvailableHeight\", ({\n      width,\n      height\n    }) => {\n      if (isElementFullscreen(this.props.item.id)) {\n        return height - this.headerRef.current.clientHeight - this.itemHeaderTotalMargin - this.itemContentPadding;\n      }\n\n      const calculatedHeight = getItemHeightPx(this.props.item, width) - this.headerRef.current.clientHeight - this.itemHeaderTotalMargin - this.itemContentPadding;\n      return this.memoizedGetContentHeight(calculatedHeight, this.contentRef ? this.contentRef.offsetHeight : null, isEditMode(this.props.dashboardMode) || isPrintMode(this.props.dashboardMode));\n    });\n\n    _defineProperty(this, \"getAvailableWidth\", () => {\n      var _getGridItemElement;\n\n      const rect = (_getGridItemElement = getGridItemElement(this.props.item.id)) === null || _getGridItemElement === void 0 ? void 0 : _getGridItemElement.getBoundingClientRect();\n      return rect && rect.width - this.itemContentPadding * 2;\n    });\n\n    _defineProperty(this, \"onFatalError\", () => {\n      this.setState({\n        loadItemFailed: true\n      });\n    });\n\n    this.contentRef = /*#__PURE__*/React.createRef();\n    this.headerRef = /*#__PURE__*/React.createRef();\n    const style = window.getComputedStyle(document.documentElement);\n    this.itemContentPadding = parseInt(style.getPropertyValue('--item-content-padding').replace('px', ''));\n    this.itemHeaderTotalMargin = parseInt(style.getPropertyValue('--item-header-margin-top').replace('px', '')) + parseInt(style.getPropertyValue('--item-header-margin-bottom').replace('px', ''));\n    this.memoizedGetContentHeight = memoizeOne((calculatedHeight, measuredHeight, preferMeasured) => preferMeasured ? measuredHeight || calculatedHeight : calculatedHeight);\n  }\n\n  async componentDidMount() {\n    this.props.setVisualization(await apiFetchVisualization(this.props.item));\n\n    try {\n      if (this.props.settings.keyGatherAnalyticalObjectStatisticsInDashboardViews && isViewMode(this.props.dashboardMode)) {\n        await apiPostDataStatistics(getDataStatisticsName(this.props.item.type), getVisualizationId(this.props.item));\n      }\n    } catch (e) {\n      console.log(e);\n    }\n\n    this.setState({\n      configLoaded: true\n    });\n  }\n\n  render() {\n    const {\n      item,\n      dashboardMode,\n      itemFilters\n    } = this.props;\n    const {\n      showFooter\n    } = this.state;\n    const activeType = this.getActiveType();\n    const actionButtons = pluginIsAvailable(activeType || item.type) && isViewMode(dashboardMode) ? /*#__PURE__*/React.createElement(ItemContextMenu, {\n      item: item,\n      visualization: this.props.visualization,\n      onSelectActiveType: this.setActiveType,\n      onToggleFooter: this.onToggleFooter,\n      onToggleFullscreen: this.onToggleFullscreen,\n      activeType: activeType,\n      activeFooter: showFooter,\n      fullscreenSupported: this.isFullscreenSupported(),\n      loadItemFailed: this.state.loadItemFailed\n    }) : null;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ItemHeader, {\n      title: getVisualizationName(item),\n      itemId: item.id,\n      actionButtons: actionButtons,\n      ref: this.headerRef,\n      dashboardMode: dashboardMode,\n      isShortened: item.shortened\n    }), /*#__PURE__*/React.createElement(FatalErrorBoundary, {\n      message: i18n.t('There was a problem loading this dashboard item'),\n      onFatalError: this.onFatalError\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dashboard-item-content\",\n      ref: ref => this.contentRef = ref\n    }, this.state.configLoaded && /*#__PURE__*/React.createElement(WindowDimensionsCtx.Consumer, null, dimensions => /*#__PURE__*/React.createElement(Visualization, {\n      item: item,\n      activeType: activeType,\n      itemFilters: itemFilters,\n      availableHeight: this.getAvailableHeight(dimensions),\n      availableWidth: this.getAvailableWidth(),\n      gridWidth: this.props.gridWidth,\n      dashboardMode: dashboardMode\n    })))), isViewMode(dashboardMode) && showFooter ? /*#__PURE__*/React.createElement(ItemFooter, {\n      item: item\n    }) : null);\n  }\n\n}\n\nItem.propTypes = {\n  activeType: PropTypes.string,\n  dashboardMode: PropTypes.string,\n  gridWidth: PropTypes.number,\n  isEditing: PropTypes.bool,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object,\n  setActiveType: PropTypes.func,\n  setVisualization: PropTypes.func,\n  settings: PropTypes.object,\n  visualization: PropTypes.object,\n  onToggleItemExpanded: PropTypes.func\n};\nItem.defaultProps = {\n  item: {},\n  onToggleItemExpanded: Function.prototype,\n  visualization: {}\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  var _ownProps$item;\n\n  const itemFilters = !isEditMode(ownProps.dashboardMode) ? sGetItemFiltersRoot(state) : DEFAULT_STATE_ITEM_FILTERS;\n  return {\n    activeType: sGetItemActiveType(state, (_ownProps$item = ownProps.item) === null || _ownProps$item === void 0 ? void 0 : _ownProps$item.id),\n    isEditing: sGetIsEditing(state),\n    itemFilters,\n    visualization: sGetVisualization(state, getVisualizationId(ownProps.item))\n  };\n};\n\nconst mapDispatchToProps = {\n  setActiveType: acSetItemActiveType,\n  setVisualization: acAddVisualization\n};\n\nconst ItemWithSettings = props => /*#__PURE__*/React.createElement(SystemSettingsCtx.Consumer, null, ({\n  settings\n}) => /*#__PURE__*/React.createElement(Item, _extends({\n  settings: settings\n}, props)));\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ItemWithSettings);","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { APP, VISUALIZATION, REPORT_TABLE, CHART, MAP, EVENT_CHART, EVENT_REPORT, MESSAGES, REPORTS, RESOURCES, USERS, TEXT, SPACER, PAGEBREAK, PRINT_TITLE_PAGE } from '../../modules/itemTypes';\nimport AppItem from './AppItem/Item';\nimport ListItem from './ListItem/Item';\nimport MessagesItem from './MessagesItem/Item';\nimport NotSupportedItem from './NotSupportedItem/Item';\nimport PageBreakItem from './PageBreakItem/Item';\nimport PrintTitlePageItem from './PrintTitlePageItem/Item';\nimport SpacerItem from './SpacerItem/Item';\nimport TextItem from './TextItem/Item';\nimport VisualizationItem from './VisualizationItem/Item';\n\nconst getGridItem = type => {\n  switch (type) {\n    case VISUALIZATION:\n    case REPORT_TABLE:\n    case CHART:\n    case MAP:\n    case EVENT_CHART:\n    case EVENT_REPORT:\n      return VisualizationItem;\n\n    case MESSAGES:\n      return MessagesItem;\n\n    case REPORTS:\n    case RESOURCES:\n    case USERS:\n      return ListItem;\n\n    case TEXT:\n      return TextItem;\n\n    case SPACER:\n      return SpacerItem;\n\n    case APP:\n      return AppItem;\n\n    case PAGEBREAK:\n      return PageBreakItem;\n\n    case PRINT_TITLE_PAGE:\n      return PrintTitlePageItem;\n\n    default:\n      return NotSupportedItem;\n  }\n};\n\nexport const Item = props => {\n  const GridItem = getGridItem(props.item.type);\n  return /*#__PURE__*/React.createElement(GridItem, props);\n};\nItem.propTypes = {\n  item: PropTypes.object\n};","import sortBy from 'lodash/sortBy';\nimport { itemTypeMap } from '../../modules/itemTypes';\nimport { orArray } from '../../modules/util';\nexport const getTransformYPx = elStyle => {\n  var _elStyle$transform$sp;\n\n  if (!elStyle || !elStyle.transform) {\n    return null;\n  } // find valid transforms - those with y pixels\n  // the code is expecting the transform prop to\n  // look like:  translate(10px, 300px)\n\n\n  const transformY = (_elStyle$transform$sp = elStyle.transform.split(' ')[1]) === null || _elStyle$transform$sp === void 0 ? void 0 : _elStyle$transform$sp.match(/(\\d+)px/);\n\n  if (transformY) {\n    return parseInt(transformY[1]);\n  } else {\n    return null;\n  }\n};\nexport const getDomGridItemsSortedByYPos = elements => {\n  const types = Object.keys(itemTypeMap);\n  const elementsWithBoundingRect = orArray(elements).map(el => {\n    const type = Array.from(el.classList).find(className => types.indexOf(className) > -1);\n    const rect = el.getBoundingClientRect();\n    const y = getTransformYPx(el.style) || parseInt(rect.y);\n    return {\n      type,\n      classList: el.classList,\n      bottomY: y + parseInt(rect.height),\n      el\n    };\n  });\n  return sortBy(elementsWithBoundingRect, ['bottomY']);\n};\n\nconst isLeapPage = n => {\n  // pages 5,9,13,17,21,25,29... are leap pages\n  let x = 0;\n  const startPage = 1;\n\n  const getMultiple = factor => startPage + 4 * factor;\n\n  let multiple = getMultiple(0);\n  let isLeapPage = false;\n\n  while (multiple < n) {\n    multiple = getMultiple(x);\n    ++x;\n\n    if (multiple === n) {\n      isLeapPage = true;\n      break;\n    }\n  }\n\n  return isLeapPage;\n};\n\nexport const getPageBreakPositions = items => {\n  // add enough page breaks so that each item could\n  // be put on its own page. Due to the react-grid-layout\n  // unit system, we have to estimate roughly the size of each\n  // page. At regular intervals add a unit, like a leap year\n  const yPosList = [];\n  let yPos = 0;\n\n  for (let pageNum = 1; pageNum <= items.length; ++pageNum) {\n    if (pageNum === 1) {\n      yPos += 35;\n    } else if (isLeapPage(pageNum)) {\n      yPos += 40;\n    } else {\n      yPos += 39;\n    }\n\n    yPosList.push(yPos);\n  }\n\n  return yPosList;\n};","import i18n from '@dhis2/d2-i18n';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactGridLayout from 'react-grid-layout';\nimport NoContentMessage from '../../components/NoContentMessage';\nimport { GRID_ROW_HEIGHT_PX, GRID_COMPACT_TYPE, MARGIN_PX, GRID_COLUMNS } from '../../modules/gridUtil';\nconst PAGE_PADDING_PX = 24;\n\nconst StaticGrid = ({\n  layout,\n  children,\n  onLayoutChange,\n  className\n}) => {\n  if (!layout.length) {\n    return /*#__PURE__*/React.createElement(NoContentMessage, {\n      text: i18n.t('There are no items on this dashboard')\n    });\n  }\n\n  const style = window.getComputedStyle(document.documentElement);\n  const pageWidthPx = parseInt(style.getPropertyValue('--a4-landscape-width-px').replace('px', ''));\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ReactGridLayout, {\n    margin: MARGIN_PX,\n    cols: GRID_COLUMNS,\n    rowHeight: GRID_ROW_HEIGHT_PX,\n    width: pageWidthPx - PAGE_PADDING_PX,\n    compactType: GRID_COMPACT_TYPE,\n    isDraggable: false,\n    isResizable: false,\n    draggableCancel: \"input,textarea\",\n    className: cx('layout', className),\n    layout: layout,\n    onLayoutChange: onLayoutChange\n  }, children));\n};\n\nStaticGrid.defaultProps = {\n  onLayoutChange: Function.prototype\n};\nStaticGrid.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  layout: PropTypes.array,\n  onLayoutChange: PropTypes.func\n};\nexport default StaticGrid;","function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport cx from 'classnames';\nimport sortBy from 'lodash/sortBy';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { acUpdatePrintDashboardLayout } from '../../actions/printDashboard';\nimport { Item } from '../../components/Item/Item';\nimport { PRINT_LAYOUT } from '../../modules/dashboardModes';\nimport { getGridItemDomElementClassName } from '../../modules/getGridItemDomElementClassName';\nimport { hasShape } from '../../modules/gridUtil';\nimport { PAGEBREAK } from '../../modules/itemTypes';\nimport { sGetIsEditing } from '../../reducers/editDashboard';\nimport { sGetPrintDashboardItems } from '../../reducers/printDashboard';\nimport { getDomGridItemsSortedByYPos, getTransformYPx } from './printUtils';\nimport StaticGrid from './StaticGrid';\n\nclass PrintLayoutItemGrid extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"onLayoutChange\", newLayout => {\n      this.props.updateDashboardLayout(newLayout);\n    });\n\n    _defineProperty(this, \"isFirstPageBreak\", item => {\n      if (item.type !== PAGEBREAK) {\n        return false;\n      }\n\n      const pageBreaks = this.props.dashboardItems.filter(i => i.type === PAGEBREAK);\n      const sortedPageBreaks = sortBy(pageBreaks, ['y']);\n      return item.y === sortedPageBreaks[0].y;\n    });\n\n    _defineProperty(this, \"getItemComponent\", item => {\n      // the first-page-break class is used in Edit print preview\n      const itemClassNames = cx('print', 'layout', getGridItemDomElementClassName(item.id), `${item.type}`, {\n        'first-page-break': this.props.isEditing && this.isFirstPageBreak(item),\n        shortened: !!item.shortened\n      });\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: item.i,\n        className: itemClassNames,\n        \"data-test\": `dashboarditem-${item.id}`\n      }, /*#__PURE__*/React.createElement(Item, {\n        item: item,\n        dashboardMode: PRINT_LAYOUT\n      }));\n    });\n\n    _defineProperty(this, \"getItemComponents\", items => items.map(item => this.getItemComponent(item)));\n  }\n\n  hideExtraPageBreaks() {\n    const sortedElements = getDomGridItemsSortedByYPos(Array.from(document.querySelectorAll('.react-grid-item')));\n    let pageBreakBottom = 0;\n    let lastItemBottom = 0;\n    let foundNonPageBreak = false;\n\n    for (let i = sortedElements.length - 1; i >= 0; --i) {\n      const item = sortedElements[i];\n\n      if (item.type === PAGEBREAK) {\n        if (!foundNonPageBreak) {\n          item.el.classList.add('removed');\n        } else {\n          pageBreakBottom = item.bottomY;\n          break;\n        }\n      } else {\n        foundNonPageBreak = true;\n        const thisItemBottom = item.bottomY;\n\n        if (thisItemBottom > lastItemBottom) {\n          lastItemBottom = thisItemBottom;\n        }\n      }\n    }\n\n    const pageHeight = 720;\n    const gridElement = document.querySelector('.react-grid-layout'); // the last page break is before the last item(s) so\n    // maxHeight is one page beyond the last page break\n\n    const maxHeight = pageBreakBottom + pageHeight;\n\n    if (gridElement) {\n      gridElement.style.height = `${maxHeight}px`;\n    }\n\n    if (this.props.isEditing) {\n      //scroll to below the title page - which is middle of the first pagebreak\n      const firstBreak = document.querySelector('.first-page-break');\n\n      if (firstBreak && firstBreak.style && firstBreak.style.transform) {\n        const yPos = getTransformYPx(firstBreak.style);\n        const scrollArea = document.querySelector('.scroll-area');\n        scrollArea && scrollArea.scroll(0, yPos + 50);\n      }\n    }\n  }\n\n  componentDidMount() {\n    this.hideExtraPageBreaks();\n  }\n\n  componentDidUpdate() {\n    this.hideExtraPageBreaks();\n  }\n\n  render() {\n    const {\n      dashboardItems\n    } = this.props;\n    return /*#__PURE__*/React.createElement(StaticGrid, {\n      layout: dashboardItems,\n      onLayoutChange: this.onLayoutChange\n    }, this.getItemComponents(dashboardItems));\n  }\n\n}\n\nPrintLayoutItemGrid.propTypes = {\n  dashboardItems: PropTypes.array,\n  isEditing: PropTypes.bool,\n  updateDashboardLayout: PropTypes.func\n};\n\nconst mapStateToProps = state => {\n  return {\n    dashboardItems: sGetPrintDashboardItems(state).filter(hasShape),\n    isEditing: sGetIsEditing(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  updateDashboardLayout: acUpdatePrintDashboardLayout\n})(PrintLayoutItemGrid);","import { useDataEngine } from '@dhis2/app-runtime';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { acSetPrintDashboard, acAddPrintDashboardItem, acUpdatePrintDashboardItem } from '../../actions/printDashboard';\nimport { apiFetchDashboard } from '../../api/fetchDashboard';\nimport { VIEW } from '../../modules/dashboardModes';\nimport { MAX_ITEM_GRID_HEIGHT } from '../../modules/gridUtil';\nimport { PAGEBREAK, PRINT_TITLE_PAGE } from '../../modules/itemTypes';\nimport { setHeaderbarVisible } from '../../modules/setHeaderbarVisible';\nimport { sGetEditDashboardRoot } from '../../reducers/editDashboard';\nimport PrintActionsBar from './ActionsBar';\nimport PrintInfo from './PrintInfo';\nimport PrintLayoutItemGrid from './PrintLayoutItemGrid';\nimport { getPageBreakPositions } from './printUtils';\nimport classes from './styles/PrintLayoutDashboard.module.css';\nimport './styles/print.css';\nimport './styles/print-layout.css';\n\nconst addPageBreaks = (items, addDashboardItem) => {\n  const yPosList = getPageBreakPositions(items);\n\n  for (let i = 0; i < items.length; ++i) {\n    addDashboardItem({\n      type: PAGEBREAK,\n      yPos: yPosList[i]\n    });\n  }\n};\n\nconst PrintLayoutDashboard = ({\n  dashboard,\n  id,\n  setPrintDashboard,\n  addDashboardItem,\n  updateDashboardItem,\n  fromEdit\n}) => {\n  const dataEngine = useDataEngine();\n  const [redirectUrl, setRedirectUrl] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const customizePrintLayoutDashboard = dboard => {\n    // If any items are taller than one page, reduce it to one\n    // page (react-grid-layout units)\n    dboard.dashboardItems.forEach(item => {\n      if (item.h > MAX_ITEM_GRID_HEIGHT) {\n        item.shortened = true;\n        updateDashboardItem(Object.assign({}, item, {\n          h: MAX_ITEM_GRID_HEIGHT\n        }));\n      }\n    });\n    addPageBreaks(dboard.dashboardItems, addDashboardItem);\n    addDashboardItem({\n      type: PRINT_TITLE_PAGE,\n      isOneItemPerPage: false\n    });\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    const loadDashboard = async () => {\n      try {\n        const dashboard = await apiFetchDashboard(dataEngine, id, {\n          mode: VIEW\n        });\n        setPrintDashboard(dashboard);\n        customizePrintLayoutDashboard(dashboard);\n      } catch (error) {\n        setRedirectUrl(id ? `/${id}` : '/');\n        setIsLoading(false);\n      }\n    };\n\n    setHeaderbarVisible(false);\n\n    if (!dashboard) {\n      loadDashboard();\n    } else {\n      setPrintDashboard(dashboard);\n      customizePrintLayoutDashboard(dashboard);\n    }\n  }, [dashboard]);\n\n  if (redirectUrl) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: redirectUrl\n    });\n  }\n\n  if (isLoading) {\n    return /*#__PURE__*/React.createElement(Layer, {\n      translucent: true\n    }, /*#__PURE__*/React.createElement(CenteredContent, null, /*#__PURE__*/React.createElement(CircularLoader, null)));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.container\n  }, !fromEdit && /*#__PURE__*/React.createElement(PrintActionsBar, {\n    id: id\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: cx(classes.wrapper, 'scroll-area', fromEdit && classes.editView)\n  }, !fromEdit && /*#__PURE__*/React.createElement(PrintInfo, {\n    isLayout: true\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.pageOuter,\n    \"data-test\": \"print-layout-page\"\n  }, /*#__PURE__*/React.createElement(PrintLayoutItemGrid, null))));\n};\n\nPrintLayoutDashboard.propTypes = {\n  addDashboardItem: PropTypes.func,\n  dashboard: PropTypes.object,\n  fromEdit: PropTypes.bool,\n  id: PropTypes.string,\n  setPrintDashboard: PropTypes.func,\n  updateDashboardItem: PropTypes.func\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  var _ownProps$match, _ownProps$match$param;\n\n  return {\n    dashboard: ownProps.fromEdit ? sGetEditDashboardRoot(state) : null,\n    id: ((_ownProps$match = ownProps.match) === null || _ownProps$match === void 0 ? void 0 : (_ownProps$match$param = _ownProps$match.params) === null || _ownProps$match$param === void 0 ? void 0 : _ownProps$match$param.dashboardId) || null\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setPrintDashboard: acSetPrintDashboard,\n  addDashboardItem: acAddPrintDashboardItem,\n  updateDashboardItem: acUpdatePrintDashboardItem\n})(PrintLayoutDashboard);","export const messageConversationsQuery = {\n  resource: 'messageConversations',\n  params: {\n    fields: 'id,messageCount,lastUpdated,messageType,displayName,read,messages[id,read,sender[id,displayName],text,lastUpdated]',\n    order: 'read:asc',\n    pageSize: 200\n  }\n};\nexport const getMessages = async dataEngine => {\n  try {\n    const {\n      messageConversations\n    } = await dataEngine.query({\n      messageConversations: messageConversationsQuery\n    });\n    return messageConversations.messageConversations;\n  } catch (error) {\n    console.log('Error:', error);\n  }\n};","import { getMessages } from '../../../api/messages';\nimport { RECEIVED_MESSAGES } from '../../../reducers/messages';\n\nconst onError = (action, error) => {\n  console.log(`Error in action ${action}: ${error}`);\n  return error;\n};\n\nexport const receivedMessages = value => ({\n  type: RECEIVED_MESSAGES,\n  value\n});\nexport const tGetMessages = dataEngine => async dispatch => {\n  try {\n    const messageConversations = await getMessages(dataEngine);\n    return dispatch(receivedMessages(messageConversations));\n  } catch (err) {\n    return onError('Get Messages', err);\n  }\n};","export const getPreferredDashboardId = username => localStorage.getItem(`dhis2.dashboard.current.${username}`) || undefined;\nexport const storePreferredDashboardId = (username, dashboardId) => {\n  localStorage.setItem(`dhis2.dashboard.current.${username}`, dashboardId);\n};","import { apiFetchDashboard } from '../api/fetchDashboard';\nimport { tGetMessages } from '../components/Item/MessagesItem/actions';\nimport { VIEW } from '../modules/dashboardModes';\nimport { MESSAGES } from '../modules/itemTypes';\nimport { storePreferredDashboardId } from '../modules/localStorage';\nimport { SET_SELECTED, CLEAR_SELECTED, sGetSelectedId } from '../reducers/selected';\nimport { acAppendDashboards } from './dashboards';\nimport { acClearItemActiveTypes } from './itemActiveTypes';\nimport { acClearItemFilters } from './itemFilters';\nimport { acClearVisualizations } from './visualizations'; // actions\n\nexport const acSetSelected = value => ({\n  type: SET_SELECTED,\n  value\n});\nexport const acClearSelected = () => ({\n  type: CLEAR_SELECTED\n}); // thunks\n\nexport const tSetSelectedDashboardById = (id, username) => async (dispatch, getState, dataEngine) => {\n  const dashboard = await apiFetchDashboard(dataEngine, id, {\n    mode: VIEW\n  });\n  dispatch(acAppendDashboards([{\n    id: dashboard.id,\n    displayName: dashboard.displayName,\n    starred: dashboard.starred\n  }]));\n\n  if (username) {\n    storePreferredDashboardId(username, id);\n  }\n\n  if (id !== sGetSelectedId(getState())) {\n    dispatch(acClearItemFilters());\n    dispatch(acClearVisualizations());\n    dispatch(acClearItemActiveTypes());\n  }\n\n  dashboard.dashboardItems.some(item => item.type === MESSAGES) && dispatch(tGetMessages(dataEngine));\n  dispatch(acSetSelected(dashboard));\n};\nexport const tSetSelectedDashboardByIdOffline = (id, username) => (dispatch, getState) => {\n  if (username) {\n    storePreferredDashboardId(username, id);\n  }\n\n  if (id !== sGetSelectedId(getState())) {\n    dispatch(acClearItemFilters());\n    dispatch(acClearVisualizations());\n    dispatch(acClearItemActiveTypes());\n  }\n\n  dispatch(acSetSelected({\n    id\n  }));\n};","import { Button, Modal, ModalContent, ModalActions, ButtonStrip, ModalTitle } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport classes from './styles/ConfirmActionDialog.module.css';\n\nconst ConfirmActionDialog = ({\n  onConfirm,\n  onCancel,\n  open,\n  title,\n  message,\n  cancelLabel,\n  confirmLabel\n}) => {\n  return open && /*#__PURE__*/React.createElement(Modal, {\n    dataTest: \"confirm-action-dialog\",\n    onClose: onCancel,\n    small: true,\n    position: \"middle\"\n  }, /*#__PURE__*/React.createElement(ModalTitle, null, title), /*#__PURE__*/React.createElement(ModalContent, null, /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.content\n  }, message)), /*#__PURE__*/React.createElement(ModalActions, null, /*#__PURE__*/React.createElement(ButtonStrip, null, /*#__PURE__*/React.createElement(Button, {\n    key: \"cancel\",\n    secondary: true,\n    onClick: onCancel\n  }, cancelLabel), /*#__PURE__*/React.createElement(Button, {\n    key: \"confirm\",\n    destructive: true,\n    onClick: onConfirm\n  }, confirmLabel))));\n};\n\nConfirmActionDialog.propTypes = {\n  cancelLabel: PropTypes.string,\n  confirmLabel: PropTypes.string,\n  message: PropTypes.string,\n  open: PropTypes.bool,\n  title: PropTypes.string,\n  onCancel: PropTypes.func,\n  onConfirm: PropTypes.func\n};\nexport default ConfirmActionDialog;","export const deleteDashboardMutation = {\n  type: 'delete',\n  resource: 'dashboards',\n  id: ({\n    id\n  }) => id\n};","// filter out CATEGORY that are not of type ATTRIBUTE\nconst filteredDimensions = dimensions => dimensions.filter(dim => dim.dimensionType !== 'CATEGORY' || dim.dimensionType === 'CATEGORY' && dim.dataDimensionType === 'ATTRIBUTE');\n\nexport default filteredDimensions;","import { apiFetchDimensions } from '@dhis2/analytics';\nimport { useDataEngine } from '@dhis2/app-runtime';\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { acSetDimensions } from '../actions/dimensions';\nimport { useUserSettings } from '../components/UserSettingsProvider';\nimport getFilteredDimensions from './getFilteredDimensions';\n\nconst useDimensions = doFetch => {\n  const dataEngine = useDataEngine();\n  const {\n    userSettings\n  } = useUserSettings();\n  const dimensions = useSelector(state => state.dimensions);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const fetchDimensions = async () => {\n      try {\n        const unfilteredDimensions = await apiFetchDimensions(dataEngine, userSettings.keyAnalysisDisplayProperty);\n        dispatch(acSetDimensions(getFilteredDimensions(unfilteredDimensions)));\n      } catch (e) {\n        console.error(e);\n      }\n    };\n\n    if (!dimensions.length && doFetch && userSettings.keyAnalysisDisplayProperty) {\n      fetchDimensions();\n    }\n  }, [dimensions, doFetch, userSettings.keyAnalysisDisplayProperty]);\n  return dimensions;\n};\n\nexport default useDimensions;","import { SET_DIMENSIONS } from '../reducers/dimensions';\nexport const acSetDimensions = dimensions => ({\n  type: SET_DIMENSIONS,\n  value: dimensions\n});","import { DIMENSION_ID_PERIOD, DIMENSION_ID_ORGUNIT } from '@dhis2/analytics';\nimport i18n from '@dhis2/d2-i18n';\nimport { Button, ButtonStrip, Modal, ModalActions, ModalContent, ModalTitle, Radio, Transfer } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport OfflineTooltip from '../../components/OfflineTooltip';\nimport useDimensions from '../../modules/useDimensions';\nimport classes from './styles/FilterSettingsDialog.module.css';\n\nconst RadioOptions = ({\n  filtersSelectable,\n  updateFilterDimensionRestrictability\n}) => /*#__PURE__*/React.createElement(\"form\", null, /*#__PURE__*/React.createElement(\"div\", {\n  className: classes.radioButton\n}, /*#__PURE__*/React.createElement(Radio, {\n  dense: true,\n  checked: !filtersSelectable,\n  label: i18n.t('Allow filtering by all dimensions'),\n  name: \"radio-allow-filtering-on-all\",\n  onChange: payload => {\n    return updateFilterDimensionRestrictability(payload.value === 'true');\n  },\n  value: 'false'\n})), /*#__PURE__*/React.createElement(\"div\", {\n  className: classes.radioButton\n}, /*#__PURE__*/React.createElement(Radio, {\n  dense: true,\n  checked: filtersSelectable,\n  label: i18n.t('Only allow filtering by selected dimensions'),\n  name: \"radio-restrict-filtering\",\n  onChange: payload => {\n    return updateFilterDimensionRestrictability(payload.value === 'true');\n  },\n  value: 'true'\n})));\n\nRadioOptions.propTypes = {\n  filtersSelectable: PropTypes.bool,\n  updateFilterDimensionRestrictability: PropTypes.func\n};\n\nconst FilterSettingsDialog = ({\n  restrictFilters,\n  initiallySelectedItems,\n  onClose,\n  onConfirm,\n  open\n}) => {\n  const [selected, setSelected] = useState(initiallySelectedItems);\n  const [filtersSelectable, setFiltersSelectable] = useState(restrictFilters);\n  const dimensions = useDimensions(open);\n\n  const updateFilterDimensionRestrictability = val => {\n    if (val) {\n      const otherItems = selected.filter(i => i !== DIMENSION_ID_ORGUNIT && i !== DIMENSION_ID_PERIOD);\n      updateSelectedFilters([DIMENSION_ID_PERIOD, DIMENSION_ID_ORGUNIT, ...otherItems]);\n    }\n\n    setFiltersSelectable(val);\n  };\n\n  const updateSelectedFilters = sItems => {\n    // ensure that orgUnit, period appear before other items\n    const periodItem = [...new Set(sItems.filter(i => i === DIMENSION_ID_PERIOD))];\n    const orgUnitItem = [...new Set(sItems.filter(i => i === DIMENSION_ID_ORGUNIT))];\n    const otherItems = sItems.filter(i => i !== DIMENSION_ID_ORGUNIT && i !== DIMENSION_ID_PERIOD);\n    return setSelected([...periodItem, ...orgUnitItem, ...otherItems]);\n  };\n\n  const closeDialog = () => {\n    setSelected(initiallySelectedItems);\n    setFiltersSelectable(restrictFilters);\n    onClose();\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, open && /*#__PURE__*/React.createElement(Modal, {\n    large: true,\n    position: \"top\",\n    onClose: closeDialog\n  }, /*#__PURE__*/React.createElement(ModalTitle, null, i18n.t('Dashboard filter settings')), /*#__PURE__*/React.createElement(ModalContent, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.descContainer\n  }, /*#__PURE__*/React.createElement(\"span\", null, i18n.t(`Dashboards can be filtered by dimensions to change\n                                         the data shown. By default, all dimensions are available\n                                         as filters. Alternatively, only selected dimensions can\n                                         be made available on a dashboard.`))), /*#__PURE__*/React.createElement(RadioOptions, {\n    filtersSelectable: filtersSelectable,\n    updateFilterDimensionRestrictability: updateFilterDimensionRestrictability\n  }), filtersSelectable && /*#__PURE__*/React.createElement(Transfer, {\n    filterable: true,\n    height: \"400px\",\n    leftHeader: /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.transferHeader\n    }, /*#__PURE__*/React.createElement(\"span\", null, i18n.t('Available Filters'))),\n    maxSelections: Infinity,\n    onChange: payload => {\n      return updateSelectedFilters(payload.selected);\n    },\n    options: dimensions.map(d => {\n      return {\n        label: d.name,\n        value: d.id\n      };\n    }),\n    optionsWidth: \"350px\",\n    rightHeader: /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.transferHeader\n    }, /*#__PURE__*/React.createElement(\"span\", null, i18n.t('Selected Filters'))),\n    selected: selected,\n    selectedWidth: \"350px\"\n  })), /*#__PURE__*/React.createElement(ModalActions, null, /*#__PURE__*/React.createElement(ButtonStrip, {\n    end: true\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: closeDialog,\n    secondary: true,\n    type: \"button\"\n  }, i18n.t('Cancel')), /*#__PURE__*/React.createElement(OfflineTooltip, {\n    content: i18n.t('Cannot confirm changes while offline')\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => {\n      if (!filtersSelectable) {\n        setSelected([]);\n      }\n\n      onConfirm(filtersSelectable, selected);\n    },\n    primary: true,\n    type: \"button\"\n  }, i18n.t('Confirm')))))));\n};\n\nFilterSettingsDialog.propTypes = {\n  initiallySelectedItems: PropTypes.array,\n  open: PropTypes.bool,\n  restrictFilters: PropTypes.bool,\n  onClose: PropTypes.func,\n  onConfirm: PropTypes.func\n};\nexport default FilterSettingsDialog;","import { useOnlineStatus, useDataEngine, useAlert } from '@dhis2/app-runtime';\nimport { useD2 } from '@dhis2/app-runtime-adapter-d2';\nimport i18n from '@dhis2/d2-i18n';\nimport TranslationDialog from '@dhis2/d2-ui-translation-dialog';\nimport { Button, ButtonStrip } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { tFetchDashboards } from '../../actions/dashboards';\nimport { tSaveDashboard, acClearEditDashboard, acSetPrintPreviewView, acClearPrintPreviewView, acSetFilterSettings } from '../../actions/editDashboard';\nimport { acClearPrintDashboard } from '../../actions/printDashboard';\nimport { acClearSelected } from '../../actions/selected';\nimport ConfirmActionDialog from '../../components/ConfirmActionDialog';\nimport OfflineTooltip from '../../components/OfflineTooltip';\nimport { sGetEditDashboardRoot, sGetIsPrintPreviewView, sGetEditIsDirty, sGetLayoutColumns } from '../../reducers/editDashboard';\nimport { deleteDashboardMutation } from './deleteDashboardMutation';\nimport FilterSettingsDialog from './FilterSettingsDialog';\nimport classes from './styles/ActionsBar.module.css';\nconst saveFailedMessage = i18n.t('Failed to save dashboard. You might be offline or not have access to edit this dashboard.');\nconst deleteFailedMessage = i18n.t('Failed to delete dashboard. You might be offline or not have access to edit this dashboard.');\n\nconst EditBar = ({\n  dashboard,\n  ...props\n}) => {\n  var _dashboard$access2, _dashboard$access3, _dashboard$access4, _dashboard$access5, _dashboard$access6;\n\n  const {\n    d2\n  } = useD2();\n  const dataEngine = useDataEngine();\n  const {\n    online\n  } = useOnlineStatus();\n  const [translationDlgIsOpen, setTranslationDlgIsOpen] = useState(false);\n  const [filterSettingsDlgIsOpen, setFilterSettingsDlgIsOpen] = useState(false);\n  const [confirmDeleteDlgIsOpen, setConfirmDeleteDlgIsOpen] = useState(false);\n  const [confirmDiscardDlgIsOpen, setConfirmDiscardDlgIsOpen] = useState(false);\n  const [redirectUrl, setRedirectUrl] = useState(undefined);\n  const saveFailureAlert = useAlert(saveFailedMessage, {\n    critical: true\n  });\n  const deleteFailureAlert = useAlert(deleteFailedMessage, {\n    critical: true\n  });\n\n  const onConfirmDelete = () => {\n    setConfirmDeleteDlgIsOpen(true);\n  };\n\n  const onDeleteConfirmed = () => {\n    setConfirmDeleteDlgIsOpen(false);\n    dataEngine.mutate(deleteDashboardMutation, {\n      variables: {\n        id: dashboard.id\n      }\n    }).then(() => {\n      props.clearSelected();\n      return props.fetchDashboards();\n    }).then(() => setRedirectUrl('/')).catch(deleteFailureAlert.show);\n  };\n\n  const onSave = () => {\n    props.saveDashboard().then(newId => {\n      props.clearSelected();\n      setRedirectUrl(`/${newId}`);\n    }).catch(() => saveFailureAlert.show());\n  };\n\n  const onPrintPreview = () => {\n    if (props.isPrintPreviewView) {\n      props.clearPrintPreview();\n      props.clearPrintDashboard();\n    } else {\n      props.showPrintPreview();\n    }\n  };\n\n  const onConfirmDiscard = () => {\n    // disabling dirty check in 2.37\n    // if (props.isDirty) {\n    //     setConfirmDiscardDlgIsOpen(true)\n    // } else {\n    onDiscardConfirmed(); // }\n  };\n\n  const onDiscardConfirmed = () => {\n    props.onDiscardChanges();\n    const redirectUrl = dashboard.id ? `/${dashboard.id}` : '/';\n    setRedirectUrl(redirectUrl);\n  };\n\n  const onContinueEditing = () => {\n    setConfirmDeleteDlgIsOpen(false);\n    setConfirmDiscardDlgIsOpen(false);\n  };\n\n  const onFilterSettingsConfirmed = (filterSettingsRestrictability, selectedFilters) => {\n    const allowedFilters = filterSettingsRestrictability ? selectedFilters : [];\n    props.setFilterSettings({\n      allowedFilters,\n      restrictFilters: filterSettingsRestrictability\n    });\n    toggleFilterSettingsDialog();\n  };\n\n  const toggleTranslationDialog = () => setTranslationDlgIsOpen(!translationDlgIsOpen);\n\n  const toggleFilterSettingsDialog = () => {\n    setFilterSettingsDlgIsOpen(!filterSettingsDlgIsOpen);\n  };\n\n  const translationDialog = () => dashboard.id ? /*#__PURE__*/React.createElement(TranslationDialog, {\n    className: \"translation-dialog\",\n    d2: d2,\n    open: translationDlgIsOpen,\n    onRequestClose: toggleTranslationDialog,\n    objectToTranslate: { ...dashboard,\n      modelDefinition: {\n        name: 'dashboard'\n      }\n    },\n    fieldsToTranslate: ['name', 'description'],\n    onTranslationError: err => console.log('translation update error', err),\n    onTranslationSaved: Function.prototype,\n    insertTheme: true,\n    isOnline: online\n  }) : null;\n\n  const filterSettingsDialog = () => {\n    return /*#__PURE__*/React.createElement(FilterSettingsDialog, {\n      restrictFilters: dashboard.restrictFilters,\n      initiallySelectedItems: dashboard.allowedFilters,\n      onClose: toggleFilterSettingsDialog,\n      onConfirm: onFilterSettingsConfirmed,\n      open: filterSettingsDlgIsOpen\n    });\n  };\n\n  const renderActionButtons = () => {\n    var _dashboard$access;\n\n    return /*#__PURE__*/React.createElement(ButtonStrip, null, /*#__PURE__*/React.createElement(OfflineTooltip, {\n      content: i18n.t('Cannot save this dashboard while offline')\n    }, /*#__PURE__*/React.createElement(Button, {\n      disabled: !online,\n      primary: true,\n      onClick: onSave,\n      dataTest: \"save-dashboard-button\"\n    }, i18n.t('Save changes'))), /*#__PURE__*/React.createElement(OfflineTooltip, null, /*#__PURE__*/React.createElement(Button, {\n      disabled: !online,\n      onClick: onPrintPreview\n    }, props.isPrintPreviewView ? i18n.t('Exit Print preview') : i18n.t('Print preview'))), /*#__PURE__*/React.createElement(OfflineTooltip, null, /*#__PURE__*/React.createElement(Button, {\n      disabled: !online,\n      onClick: toggleFilterSettingsDialog\n    }, i18n.t('Filter settings'))), dashboard.id && /*#__PURE__*/React.createElement(OfflineTooltip, null, /*#__PURE__*/React.createElement(Button, {\n      disabled: !online,\n      onClick: toggleTranslationDialog\n    }, i18n.t('Translate'))), dashboard.id && ((_dashboard$access = dashboard.access) === null || _dashboard$access === void 0 ? void 0 : _dashboard$access.delete) && /*#__PURE__*/React.createElement(OfflineTooltip, {\n      content: i18n.t('Cannot delete this dashboard while offline')\n    }, /*#__PURE__*/React.createElement(Button, {\n      disabled: !online,\n      onClick: onConfirmDelete,\n      dataTest: \"delete-dashboard-button\"\n    }, i18n.t('Delete'))));\n  };\n\n  if (redirectUrl) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: redirectUrl\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.editBar,\n    \"data-test\": \"edit-control-bar\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.controls\n  }, (_dashboard$access2 = dashboard.access) !== null && _dashboard$access2 !== void 0 && _dashboard$access2.update ? renderActionButtons() : null, /*#__PURE__*/React.createElement(Button, {\n    secondary: true,\n    onClick: onConfirmDiscard\n  }, (_dashboard$access3 = dashboard.access) !== null && _dashboard$access3 !== void 0 && _dashboard$access3.update ? i18n.t('Exit without saving') : i18n.t('Go to dashboards')))), ((_dashboard$access4 = dashboard.access) === null || _dashboard$access4 === void 0 ? void 0 : _dashboard$access4.update) && filterSettingsDialog(), dashboard.id && ((_dashboard$access5 = dashboard.access) === null || _dashboard$access5 === void 0 ? void 0 : _dashboard$access5.update) && translationDialog(), dashboard.id && ((_dashboard$access6 = dashboard.access) === null || _dashboard$access6 === void 0 ? void 0 : _dashboard$access6.delete) && /*#__PURE__*/React.createElement(ConfirmActionDialog, {\n    title: i18n.t('Delete dashboard'),\n    message: i18n.t('Deleting dashboard \"{{ dashboardName }}\" will remove it for all users. This action cannot be undone. Are you sure you want to permanently delete this dashboard?', {\n      dashboardName: dashboard.name\n    }),\n    cancelLabel: i18n.t('Cancel'),\n    confirmLabel: i18n.t('Delete'),\n    onConfirm: onDeleteConfirmed,\n    onCancel: onContinueEditing,\n    open: confirmDeleteDlgIsOpen\n  }), /*#__PURE__*/React.createElement(ConfirmActionDialog, {\n    title: i18n.t('Discard changes'),\n    message: i18n.t('This dashboard has unsaved changes. Are you sure you want to leave and discard these unsaved changes?'),\n    cancelLabel: i18n.t('No, stay here'),\n    confirmLabel: i18n.t('Yes, discard changes'),\n    onConfirm: onDiscardConfirmed,\n    onCancel: onContinueEditing,\n    open: confirmDiscardDlgIsOpen\n  }));\n};\n\nEditBar.propTypes = {\n  clearPrintDashboard: PropTypes.func,\n  clearPrintPreview: PropTypes.func,\n  clearSelected: PropTypes.func,\n  columns: PropTypes.array,\n  dashboard: PropTypes.object,\n  fetchDashboards: PropTypes.func,\n  isDirty: PropTypes.bool,\n  isPrintPreviewView: PropTypes.bool,\n  saveDashboard: PropTypes.func,\n  setFilterSettings: PropTypes.func,\n  showPrintPreview: PropTypes.func,\n  onAutoLayoutSelect: PropTypes.func,\n  onDiscardChanges: PropTypes.func\n};\nEditBar.defaultProps = {\n  columns: [...Array(5).keys()].map(i => ({\n    index: i\n  }))\n};\n\nconst mapStateToProps = state => ({\n  columns: sGetLayoutColumns(state),\n  dashboard: sGetEditDashboardRoot(state),\n  isPrintPreviewView: sGetIsPrintPreviewView(state),\n  isDirty: sGetEditIsDirty(state)\n});\n\nconst mapDispatchToProps = {\n  clearPrintDashboard: () => dispatch => dispatch(acClearPrintDashboard()),\n  clearPrintPreview: () => dispatch => dispatch(acClearPrintPreviewView()),\n  clearSelected: () => dispatch => dispatch(acClearSelected()),\n  saveDashboard: () => dispatch => dispatch(tSaveDashboard()).then(id => id),\n  fetchDashboards: () => dispatch => dispatch(tFetchDashboards()),\n  onDiscardChanges: () => dispatch => dispatch(acClearEditDashboard()),\n  setFilterSettings: value => dispatch => dispatch(acSetFilterSettings(value)),\n  showPrintPreview: () => dispatch => dispatch(acSetPrintPreviewView())\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(EditBar);","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport debounce from 'lodash/debounce';\nimport pick from 'lodash/pick';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nconst defaultDebounceMs = 100;\nconst defaultBufferFactor = 0.25;\nconst observerConfig = {\n  attributes: true,\n  childList: false,\n  subtree: false\n};\n\nclass ProgressiveLoadingContainer extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      shouldLoad: false\n    });\n\n    _defineProperty(this, \"containerRef\", null);\n\n    _defineProperty(this, \"debouncedCheckShouldLoad\", null);\n\n    _defineProperty(this, \"handlerOptions\", {\n      passive: true\n    });\n\n    _defineProperty(this, \"observer\", null);\n  }\n\n  checkShouldLoad() {\n    if (!this.containerRef) {\n      return;\n    } // force load item regardless of its position\n\n\n    if (this.forceLoad && !this.state.shouldLoad) {\n      this.setState({\n        shouldLoad: true\n      });\n      this.removeHandler();\n      return;\n    }\n\n    const bufferPx = this.props.bufferFactor * window.innerHeight;\n    const rect = this.containerRef.getBoundingClientRect(); // load item if it is near viewport\n\n    if (rect.bottom > -bufferPx && rect.top < window.innerHeight + bufferPx) {\n      this.setState({\n        shouldLoad: true\n      });\n      this.removeHandler();\n    }\n  }\n\n  registerHandler() {\n    this.debouncedCheckShouldLoad = debounce(() => this.checkShouldLoad(), this.props.debounceMs);\n    Array.from(document.getElementsByClassName('dashboard-scroll-container')).forEach(container => {\n      container.addEventListener('scroll', this.debouncedCheckShouldLoad, this.handlerOptions);\n    });\n\n    const mutationCallback = mutationsList => {\n      const styleChanged = mutationsList.find(mutation => mutation.attributeName === 'style');\n\n      if (styleChanged) {\n        this.debouncedCheckShouldLoad();\n      }\n    };\n\n    this.observer = new MutationObserver(mutationCallback);\n    this.observer.observe(this.containerRef, observerConfig);\n  }\n\n  removeHandler() {\n    Array.from(document.getElementsByClassName('dashboard-scroll-container')).forEach(container => {\n      container.removeEventListener('scroll', this.debouncedCheckShouldLoad, this.handlerOptions);\n    });\n    this.observer.disconnect();\n  }\n\n  componentDidMount() {\n    this.registerHandler();\n    this.checkShouldLoad();\n  }\n\n  componentDidUpdate() {\n    if (this.props.forceLoad && !this.state.shouldLoad) {\n      this.checkShouldLoad();\n    }\n  }\n\n  componentWillUnmount() {\n    this.removeHandler();\n  }\n\n  render() {\n    const {\n      children,\n      className,\n      style,\n      ...props\n    } = this.props;\n    const shouldLoad = this.state.shouldLoad || props.forceLoad;\n    const eventProps = pick(props, ['onMouseDown', 'onTouchStart', 'onMouseUp', 'onTouchEnd']);\n    return /*#__PURE__*/React.createElement(\"div\", _extends({\n      ref: ref => this.containerRef = ref,\n      style: style,\n      className: className,\n      \"data-test\": `dashboarditem-${props.itemId}`\n    }, eventProps), shouldLoad && children);\n  }\n\n}\n\n_defineProperty(ProgressiveLoadingContainer, \"propTypes\", {\n  children: PropTypes.node.isRequired,\n  bufferFactor: PropTypes.number,\n  className: PropTypes.string,\n  debounceMs: PropTypes.number,\n  forceLoad: PropTypes.bool,\n  itemId: PropTypes.string,\n  style: PropTypes.object\n});\n\n_defineProperty(ProgressiveLoadingContainer, \"defaultProps\", {\n  debounceMs: defaultDebounceMs,\n  bufferFactor: defaultBufferFactor,\n  forceLoad: false\n});\n\nexport default ProgressiveLoadingContainer;","import i18n from '@dhis2/d2-i18n';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport { Responsive as ResponsiveReactGridLayout } from 'react-grid-layout';\nimport { connect } from 'react-redux';\nimport { acUpdateDashboardItemShapes } from '../../actions/editDashboard';\nimport { Item } from '../../components/Item/Item';\nimport NoContentMessage from '../../components/NoContentMessage';\nimport ProgressiveLoadingContainer from '../../components/ProgressiveLoadingContainer';\nimport { useWindowDimensions } from '../../components/WindowDimensionsProvider';\nimport { EDIT } from '../../modules/dashboardModes';\nimport { getGridItemDomElementClassName } from '../../modules/getGridItemDomElementClassName';\nimport { GRID_ROW_HEIGHT_PX, GRID_COMPACT_TYPE, MARGIN_PX, GRID_PADDING_PX, GRID_COLUMNS, hasShape, getGridWidth, hasLayout } from '../../modules/gridUtil';\nimport { getBreakpoint } from '../../modules/smallScreen';\nimport { orArray } from '../../modules/util';\nimport { sGetEditDashboardItems, sGetHideGrid, sGetLayout } from '../../reducers/editDashboard';\nimport classes from './styles/ItemGrid.module.css';\n\nconst EditItemGrid = ({\n  dashboardItems,\n  acUpdateDashboardItemShapes,\n  hasLayout,\n  hideGrid\n}) => {\n  const [gridWidth, setGridWidth] = useState({\n    width: 0\n  });\n  const {\n    width\n  } = useWindowDimensions();\n\n  const onLayoutChange = newLayout => {\n    acUpdateDashboardItemShapes(newLayout);\n  };\n\n  const onWidthChanged = containerWidth => setTimeout(() => setGridWidth({\n    width: containerWidth\n  }), 200);\n\n  const getItemComponent = item => /*#__PURE__*/React.createElement(ProgressiveLoadingContainer, {\n    key: item.i,\n    className: cx(item.type, 'edit', getGridItemDomElementClassName(item.id)),\n    itemId: item.id\n  }, /*#__PURE__*/React.createElement(Item, {\n    item: item,\n    gridWidth: gridWidth.width,\n    dashboardMode: EDIT\n  }));\n\n  const getItemComponents = items => items.map(item => getItemComponent(item));\n\n  if (!dashboardItems.length) {\n    return /*#__PURE__*/React.createElement(NoContentMessage, {\n      text: i18n.t('There are no items on this dashboard')\n    });\n  }\n\n  if (hideGrid) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(ResponsiveReactGridLayout, {\n    className: classes.grid,\n    rowHeight: GRID_ROW_HEIGHT_PX,\n    width: getGridWidth(width),\n    cols: {\n      lg: GRID_COLUMNS\n    },\n    breakpoints: {\n      lg: getBreakpoint()\n    },\n    layouts: {\n      lg: dashboardItems\n    },\n    compactType: GRID_COMPACT_TYPE,\n    margin: MARGIN_PX,\n    containerPadding: {\n      lg: GRID_PADDING_PX\n    },\n    onLayoutChange: onLayoutChange,\n    onWidthChange: onWidthChanged,\n    isDraggable: !hasLayout,\n    isResizable: !hasLayout,\n    draggableCancel: \"input,textarea\"\n  }, getItemComponents(dashboardItems));\n};\n\nEditItemGrid.propTypes = {\n  acUpdateDashboardItemShapes: PropTypes.func,\n  dashboardItems: PropTypes.array,\n  hasLayout: PropTypes.bool,\n  hideGrid: PropTypes.bool\n}; // Container\n\nconst mapStateToProps = state => {\n  return {\n    dashboardItems: orArray(sGetEditDashboardItems(state)).filter(hasShape),\n    hasLayout: hasLayout(sGetLayout(state)),\n    hideGrid: sGetHideGrid(state)\n  };\n};\n\nconst mapDispatchToProps = {\n  acUpdateDashboardItemShapes\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(EditItemGrid);","import React from 'react';\nexport const LayoutFixedIcon = () => /*#__PURE__*/React.createElement(\"svg\", {\n  height: \"42\",\n  viewBox: \"0 0 42 42\",\n  width: \"42\",\n  xmlns: \"http://www.w3.org/2000/svg\"\n}, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m10 0v42h-10v-42zm16 0v42h-10v-42zm16 0v42h-10v-42z\",\n  fillRule: \"evenodd\"\n}));\nexport default LayoutFixedIcon;","import React from 'react';\nexport const LayoutFreeflowIcon = () => /*#__PURE__*/React.createElement(\"svg\", {\n  height: \"42\",\n  viewBox: \"0 0 42 42\",\n  width: \"42\",\n  xmlns: \"http://www.w3.org/2000/svg\"\n}, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m42 33v9h-42v-9zm-31-12v7h-11v-7zm15 0v7h-11v-7zm16-21v28h-10v-28zm-16 0v16h-26v-16z\",\n  fillRule: \"evenodd\"\n}));\nexport default LayoutFreeflowIcon;","import { useState, useEffect } from 'react';\n\nconst useDebounce = (value, delay) => {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [value, delay]);\n  return debouncedValue;\n};\n\nexport default useDebounce;","import { visTypeIcons } from '@dhis2/analytics';\nimport i18n from '@dhis2/d2-i18n';\nimport { MenuItem, colors, IconLaunch16 } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { getItemIcon, VISUALIZATION } from '../../../modules/itemTypes';\nimport classes from './styles/ContentMenuItem.module.css';\n\nconst LaunchLink = ({\n  url\n}) => /*#__PURE__*/React.createElement(\"a\", {\n  onClick: e => e.stopPropagation(),\n  className: classes.launchLink,\n  target: \"_blank\",\n  rel: \"noopener noreferrer\",\n  href: url\n}, /*#__PURE__*/React.createElement(IconLaunch16, {\n  color: colors.grey700\n}));\n\nLaunchLink.propTypes = {\n  url: PropTypes.string\n};\n\nconst InsertButton = () => /*#__PURE__*/React.createElement(\"button\", {\n  className: classes.buttonInsert\n}, i18n.t('Insert'));\n\nconst ContentMenuItem = ({\n  type,\n  name,\n  onInsert,\n  url,\n  visType\n}) => {\n  const ItemIcon = getItemIcon(type);\n  let renderedItemIcon;\n\n  if (type === VISUALIZATION) {\n    const VisualizationIcon = visTypeIcons[visType];\n    renderedItemIcon = /*#__PURE__*/React.createElement(VisualizationIcon, {\n      color: colors.grey600\n    });\n  } else {\n    renderedItemIcon = /*#__PURE__*/React.createElement(ItemIcon, {\n      color: colors.grey600\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(MenuItem, {\n    onClick: onInsert,\n    icon: renderedItemIcon,\n    label: /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.menuItem\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.label\n    }, /*#__PURE__*/React.createElement(\"span\", null, name), url ? /*#__PURE__*/React.createElement(LaunchLink, {\n      url: url\n    }) : null), /*#__PURE__*/React.createElement(InsertButton, null)),\n    dataTest: `menu-item-${name}`\n  });\n};\n\nContentMenuItem.propTypes = {\n  name: PropTypes.string,\n  type: PropTypes.string,\n  url: PropTypes.string,\n  visType: PropTypes.string,\n  onInsert: PropTypes.func\n};\nexport default ContentMenuItem;","import { MenuItem, colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport classes from './styles/HeaderMenuItem.module.css';\n\nconst HeaderMenuItem = ({\n  title\n}) => /*#__PURE__*/React.createElement(MenuItem, {\n  className: classes.item,\n  dense: true,\n  key: title,\n  disabled: true,\n  label: /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: colors.grey800,\n      fontWeight: '600'\n    }\n  }, title)\n});\n\nHeaderMenuItem.propTypes = {\n  title: PropTypes.string.isRequired\n};\nexport default HeaderMenuItem;","import i18n from '@dhis2/d2-i18n';\nimport { VISUALIZATION, MAP, EVENT_CHART, EVENT_REPORT, REPORTS, RESOURCES, APP, MESSAGES, TEXT, SPACER } from '../../../modules/itemTypes';\nexport const singleItems = [{\n  id: 'additional',\n  header: i18n.t('Additional items'),\n  items: [{\n    type: TEXT,\n    name: i18n.t('Text box'),\n    content: ''\n  }, {\n    type: MESSAGES,\n    name: i18n.t('Messages'),\n    content: 'true'\n  }, {\n    type: SPACER,\n    name: i18n.t('Spacer'),\n    content: ''\n  }]\n}]; // categorizedItems are grouped in the item selector menu\n\nexport const categorizedItems = [VISUALIZATION, MAP, EVENT_REPORT, EVENT_CHART, REPORTS, RESOURCES, APP]; // listItemTypes are included in a single dashboard item\n\nexport const listItemTypes = [REPORTS, RESOURCES];","import { useConfig } from '@dhis2/app-runtime';\nimport i18n from '@dhis2/d2-i18n';\nimport { MenuItem, Divider } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { tSetDashboardItems } from '../../../actions/editDashboard';\nimport { getItemUrl, APP, VISUALIZATION } from '../../../modules/itemTypes';\nimport { tAddListItemContent } from './actions';\nimport ContentMenuItem from './ContentMenuItem';\nimport HeaderMenuItem from './HeaderMenuItem';\nimport { categorizedItems, listItemTypes } from './selectableItems';\nimport classes from './styles/CategorizedMenuGroup.module.css';\n\nconst CategorizedMenuGroup = ({\n  type,\n  title,\n  items,\n  hasMore,\n  onAddItem,\n  tAddListItemContent,\n  onChangeItemsLimit\n}) => {\n  const {\n    baseUrl\n  } = useConfig();\n  const [seeMore, setSeeMore] = useState(false);\n\n  const addItem = item => () => {\n    if (type === APP) {\n      // acAddDashboardItem({ type, content: item.key })\n      onAddItem({\n        type,\n        content: item.key\n      });\n    } else {\n      const newItem = {\n        id: item.id,\n        name: item.displayName || item.name\n      };\n\n      if (listItemTypes.includes(type)) {\n        tAddListItemContent(type, newItem);\n      } else {\n        onAddItem({\n          type,\n          content: newItem\n        });\n      }\n    }\n  };\n\n  const toggleSeeMore = () => {\n    setSeeMore(!seeMore);\n    onChangeItemsLimit(type);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(HeaderMenuItem, {\n    title: title\n  }), items.map(item => {\n    const itemUrl = getItemUrl(type, item, baseUrl);\n    return /*#__PURE__*/React.createElement(ContentMenuItem, {\n      key: item.id || item.key,\n      type: type,\n      visType: type === VISUALIZATION ? item.type : type,\n      name: item.displayName || item.name,\n      onInsert: addItem(item),\n      url: itemUrl\n    });\n  }), hasMore ? /*#__PURE__*/React.createElement(MenuItem, {\n    dense: true,\n    key: `showmore${title}`,\n    onClick: toggleSeeMore,\n    label: /*#__PURE__*/React.createElement(\"button\", {\n      className: classes.showMoreButton\n    }, seeMore ? i18n.t('Show fewer') : i18n.t('Show more'))\n  }) : null, /*#__PURE__*/React.createElement(Divider, {\n    margin: \"8px 0px\"\n  }));\n};\n\nCategorizedMenuGroup.propTypes = {\n  items: PropTypes.array.isRequired,\n  title: PropTypes.string.isRequired,\n  type: PropTypes.oneOf(categorizedItems).isRequired,\n  onAddItem: PropTypes.func.isRequired,\n  onChangeItemsLimit: PropTypes.func.isRequired,\n  hasMore: PropTypes.bool,\n  tAddListItemContent: PropTypes.func\n};\nexport default connect(null, {\n  tAddListItemContent,\n  onAddItem: item => dispatch => {\n    dispatch(tSetDashboardItems(item));\n  }\n})(CategorizedMenuGroup);","import { // acAddDashboardItem,\nacUpdateDashboardItem, tSetDashboardItems } from '../../../actions/editDashboard';\nimport { itemTypeMap } from '../../../modules/itemTypes';\nimport { sGetEditDashboardRoot } from '../../../reducers/editDashboard';\nexport const tAddListItemContent = (type, content) => (dispatch, getState) => {\n  const state = getState();\n  const listItemType = itemTypeMap[type].propName;\n  const dashboardItems = sGetEditDashboardRoot(state).dashboardItems;\n  const dashboardItemIndex = dashboardItems.findIndex(item => item.type === type);\n  let dashboardItem; // Reports/Resources/Users dashboard item type already present in dashboard\n\n  if (dashboardItemIndex > -1) {\n    dashboardItem = dashboardItems[dashboardItemIndex];\n    dashboardItem[listItemType].push(content);\n    dispatch(acUpdateDashboardItem(dashboardItem));\n  } else {\n    dashboardItem = {\n      type: type,\n      content: [content]\n    }; // dispatch(acAddDashboardItem(dashboardItem))\n\n    dispatch(tSetDashboardItems(dashboardItem));\n  }\n};","import { useOnlineStatus } from '@dhis2/app-runtime';\nimport i18n from '@dhis2/d2-i18n';\nimport { Input, Tooltip } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport classes from './styles/ItemSearchField.module.css';\n\nconst ItemSearchField = props => {\n  const {\n    online\n  } = useOnlineStatus();\n\n  const getInput = () => /*#__PURE__*/React.createElement(Input, {\n    name: \"Dashboard item search\",\n    label: i18n.t('Search for items to add to this dashboard'),\n    type: \"text\",\n    onChange: props.onChange,\n    onFocus: props.onFocus,\n    value: props.value,\n    dataTest: \"item-search\",\n    disabled: !online,\n    placeholder: i18n.t('Search for visualizations, reports and more')\n  });\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.label\n  }, \"Search for items to add to this dashboard\"), online ? getInput() : /*#__PURE__*/React.createElement(Tooltip, {\n    content: i18n.t('Cannot search for dashboard items while offline'),\n    openDelay: 200,\n    closeDelay: 100\n  }, getInput()));\n};\n\nItemSearchField.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n  onFocus: PropTypes.func\n};\nexport default ItemSearchField;","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { tSetDashboardItems } from '../../../actions/editDashboard';\nimport ContentMenuItem from './ContentMenuItem';\nimport HeaderMenuItem from './HeaderMenuItem';\n\nconst SinglesMenuGroup = ({\n  onAddItem,\n  category\n}) => {\n  const addToDashboard = ({\n    type,\n    content\n  }) => () => {\n    onAddItem({\n      type,\n      content\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(HeaderMenuItem, {\n    title: category.header\n  }), category.items.map(item => /*#__PURE__*/React.createElement(ContentMenuItem, {\n    key: item.type,\n    type: item.type,\n    name: item.name,\n    onInsert: addToDashboard(item)\n  })));\n};\n\nSinglesMenuGroup.propTypes = {\n  category: PropTypes.object,\n  onAddItem: PropTypes.func\n};\nexport default connect(null, {\n  onAddItem: item => dispatch => {\n    dispatch(tSetDashboardItems(item));\n  }\n})(SinglesMenuGroup);","import { useDataEngine } from '@dhis2/app-runtime';\nimport { Popover, FlyoutMenu } from '@dhis2/ui';\nimport React, { useState, useEffect, createRef } from 'react';\nimport { itemTypeMap, getDefaultItemCount } from '../../../modules/itemTypes';\nimport useDebounce from '../../../modules/useDebounce';\nimport CategorizedMenuGroup from './CategorizedMenuGroup';\nimport { getDashboardsQQuery } from './dashboardsQQuery';\nimport ItemSearchField from './ItemSearchField';\nimport { singleItems, categorizedItems } from './selectableItems';\nimport SinglesMenuGroup from './SinglesMenuGroup';\nimport classes from './styles/ItemSelector.module.css';\n\nconst ItemSelector = () => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [filter, setFilter] = useState('');\n  const [items, setItems] = useState(null);\n  const [maxOptions, setMaxOptions] = useState(new Set());\n  const dataEngine = useDataEngine();\n  const debouncedFilterText = useDebounce(filter, 350);\n  useEffect(() => {\n    const query = getDashboardsQQuery(debouncedFilterText, Array.from(maxOptions));\n    dataEngine.query({\n      items: query\n    }).then(res => setItems(res.items));\n  }, [debouncedFilterText, maxOptions]);\n\n  const closeMenu = () => {\n    setIsOpen(false);\n    setFilter('');\n    setMaxOptions(new Set());\n  };\n\n  const openMenu = () => setIsOpen(true);\n\n  const getCategorizedMenuGroups = () => {\n    return categorizedItems.filter(type => {\n      const itemType = itemTypeMap[type];\n      return items && items[itemType.endPointName];\n    }).map(type => {\n      const itemType = itemTypeMap[type];\n      const itemCount = getDefaultItemCount(type);\n      const allItems = items[itemType.endPointName];\n      const hasMore = allItems.length > itemCount;\n      const displayItems = maxOptions.has(itemType.id) ? allItems : allItems.slice(0, itemCount);\n      return /*#__PURE__*/React.createElement(CategorizedMenuGroup, {\n        key: type,\n        type: type,\n        title: itemType.pluralTitle,\n        items: displayItems,\n        onChangeItemsLimit: updateMaxOptions,\n        hasMore: hasMore\n      });\n    });\n  };\n\n  const getSinglesMenuGroups = () => singleItems.map(category => /*#__PURE__*/React.createElement(SinglesMenuGroup, {\n    key: category.id,\n    category: category\n  }));\n\n  const getMenuGroups = () => getCategorizedMenuGroups().concat(getSinglesMenuGroups());\n\n  const updateMaxOptions = type => {\n    if (type) {\n      const options = new Set(maxOptions);\n      options.has(type) ? options.delete(type) : options.add(type);\n      setMaxOptions(options);\n    } else {\n      setMaxOptions(new Set());\n    }\n  };\n\n  const updateFilter = ({\n    value\n  }) => setFilter(value);\n\n  const inputRef = /*#__PURE__*/createRef();\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n    ref: inputRef\n  }, /*#__PURE__*/React.createElement(ItemSearchField, {\n    value: filter,\n    onChange: updateFilter,\n    onFocus: openMenu\n  })), isOpen && /*#__PURE__*/React.createElement(Popover, {\n    reference: inputRef,\n    placement: \"bottom-start\",\n    onClickOutside: closeMenu,\n    arrow: false,\n    maxWidth: 700\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.popover\n  }, /*#__PURE__*/React.createElement(FlyoutMenu, {\n    className: classes.menu,\n    dataTest: \"item-menu\",\n    maxWidth: \"700px\"\n  }, getMenuGroups()))));\n};\n\nexport default ItemSelector;","export const getDashboardsQQuery = (query = '', maxItems = []) => {\n  return {\n    resource: `dashboards/q/${query}`,\n    params: {\n      count: 11,\n      max: maxItems\n    }\n  };\n};","import i18n from '@dhis2/d2-i18n';\nimport { Modal, ModalTitle, ModalContent, ModalActions, ButtonStrip, Button, InputField, Radio } from '@dhis2/ui';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport { LayoutFixedIcon } from './assets/LayoutFixed';\nimport { LayoutFreeflowIcon } from './assets/LayoutFreeflow';\nimport classes from './styles/LayoutModal.module.css';\nconst DEFAULT_COLUMN_AMOUNT = 3;\nexport const LayoutModal = ({\n  columns,\n  onSaveLayout,\n  onClose\n}) => {\n  const [cols, setCols] = useState(columns);\n  return /*#__PURE__*/React.createElement(Modal, {\n    large: true,\n    onClose: onClose\n  }, /*#__PURE__*/React.createElement(ModalTitle, null, i18n.t('Dashboard layout')), /*#__PURE__*/React.createElement(ModalContent, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: cx(classes.option, {\n      [classes.active]: !cols\n    }),\n    onClick: () => setCols(0)\n  }, /*#__PURE__*/React.createElement(Radio, {\n    onChange: () => setCols(0),\n    checked: !cols,\n    className: classes.radio\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: cx(classes.iconWrapper, {\n      [classes.activeIcon]: !cols\n    })\n  }, /*#__PURE__*/React.createElement(LayoutFreeflowIcon, null)), /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"h2\", {\n    className: classes.title\n  }, i18n.t('Freeflow')), /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.description\n  }, i18n.t('Dashboard items can be placed anywhere, at any size.')))), /*#__PURE__*/React.createElement(\"div\", {\n    className: cx(classes.option, {\n      [classes.activeOption]: cols\n    }),\n    onClick: () => {\n      if (!cols) {\n        setCols(DEFAULT_COLUMN_AMOUNT);\n      }\n    }\n  }, /*#__PURE__*/React.createElement(Radio, {\n    onChange: () => {\n      if (!cols) {\n        setCols(DEFAULT_COLUMN_AMOUNT);\n      }\n    },\n    checked: Boolean(cols),\n    className: classes.radio\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: cx(classes.iconWrapper, {\n      [classes.activeIcon]: cols\n    })\n  }, /*#__PURE__*/React.createElement(LayoutFixedIcon, null)), /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"h2\", {\n    className: classes.title\n  }, i18n.t('Fixed columns')), /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.description\n  }, i18n.t('Dashboard items are automatically placed within fixed, horizontal columns. The number of columns can be adjusted.')), cols > 0 && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.columnOptions\n  }, /*#__PURE__*/React.createElement(InputField, {\n    inputWidth: \"100px\",\n    type: \"number\",\n    label: i18n.t('Number of columns'),\n    className: classes.columns,\n    value: cols || cols === 0 ? cols.toString() : '',\n    onChange: ({\n      value\n    }) => setCols(parseInt(value, 10)) // default value 3?\n\n  }))))), /*#__PURE__*/React.createElement(ModalActions, null, /*#__PURE__*/React.createElement(ButtonStrip, {\n    end: true\n  }, /*#__PURE__*/React.createElement(Button, {\n    secondary: true,\n    onClick: onClose\n  }, i18n.t('Cancel')), /*#__PURE__*/React.createElement(Button, {\n    primary: true,\n    onClick: () => {\n      onSaveLayout(cols);\n      onClose();\n    }\n  }, i18n.t('Save layout')))));\n};\nLayoutModal.propTypes = {\n  columns: PropTypes.number,\n  onClose: PropTypes.func,\n  onSaveLayout: PropTypes.func\n};","import i18n from '@dhis2/d2-i18n';\nimport { InputField, TextAreaField, Radio, Button } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { acSetDashboardTitle, acSetDashboardDescription, acSetLayoutColumns, tSetDashboardItems, acSetItemConfigInsertPosition } from '../../actions/editDashboard';\nimport { orObject } from '../../modules/util';\nimport { sGetEditDashboardRoot, sGetItemConfigInsertPosition, sGetLayoutColumns } from '../../reducers/editDashboard';\nimport { LayoutFixedIcon } from './assets/LayoutFixed';\nimport { LayoutFreeflowIcon } from './assets/LayoutFreeflow';\nimport ItemSelector from './ItemSelector/ItemSelector';\nimport { LayoutModal } from './LayoutModal';\nimport classes from './styles/TitleBar.module.css';\n\nconst EditTitleBar = ({\n  insertPosition,\n  columns,\n  description,\n  name,\n  onChangeInsertPosition,\n  onChangeTitle,\n  onChangeDescription,\n  onSaveLayout\n}) => {\n  const updateTitle = (_, e) => {\n    onChangeTitle(e.target.value);\n  };\n\n  const updateDescription = (_, e) => {\n    onChangeDescription(e.target.value);\n  };\n\n  const [showLayoutModal, setShowLayoutModal] = useState(false);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.container\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.inputWrapper\n  }, /*#__PURE__*/React.createElement(InputField, {\n    name: \"Dashboard title input\",\n    label: i18n.t('Dashboard title'),\n    type: \"text\",\n    onChange: updateTitle,\n    value: name,\n    placeholder: i18n.t('Untitled dashboard'),\n    dataTest: \"dashboard-title-input\"\n  }), /*#__PURE__*/React.createElement(TextAreaField, {\n    name: \"Dashboard description input\",\n    label: i18n.t('Dashboard description'),\n    onChange: updateDescription,\n    value: description,\n    dataTest: \"dashboard-description-input\"\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.searchContainer\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.layoutWrapper\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.label\n  }, i18n.t('Layout')), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.layoutOption\n  }, columns.length ? /*#__PURE__*/React.createElement(LayoutFixedIcon, null) : /*#__PURE__*/React.createElement(LayoutFreeflowIcon, null), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.layoutValue\n  }, columns.length ? i18n.t('{{numberOfColumns}} columns', {\n    numberOfColumns: columns.length // TODO: Add pluralisation\n\n  }) : i18n.t('Freeflow')), /*#__PURE__*/React.createElement(Button, {\n    small: true,\n    onClick: () => setShowLayoutModal(true)\n  }, i18n.t('Change layout')))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.positionWrapper\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.label\n  }, i18n.t('Add new items to')), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.positionOptions\n  }, /*#__PURE__*/React.createElement(Radio, {\n    dense: true,\n    label: i18n.t('End of dashboard'),\n    name: \"END\",\n    onChange: value => value.checked && onChangeInsertPosition(value.name),\n    checked: insertPosition === 'END'\n  }), /*#__PURE__*/React.createElement(Radio, {\n    dense: true,\n    label: i18n.t('Start of dashboard'),\n    name: \"START\",\n    onChange: value => value.checked && onChangeInsertPosition(value.name),\n    checked: insertPosition === 'START'\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.searchWrapper\n  }, /*#__PURE__*/React.createElement(ItemSelector, null))), showLayoutModal && /*#__PURE__*/React.createElement(LayoutModal, {\n    onClose: () => setShowLayoutModal(false),\n    columns: columns.length,\n    onSaveLayout: onSaveLayout\n  }));\n};\n\nEditTitleBar.propTypes = {\n  onChangeDescription: PropTypes.func.isRequired,\n  onChangeInsertPosition: PropTypes.func.isRequired,\n  onChangeTitle: PropTypes.func.isRequired,\n  onSaveLayout: PropTypes.func.isRequired,\n  columns: PropTypes.array,\n  description: PropTypes.string,\n  insertPosition: PropTypes.string,\n  name: PropTypes.string\n};\nEditTitleBar.defaultProps = {\n  name: '',\n  description: '',\n  insertPosition: 'END'\n};\n\nconst mapStateToProps = state => {\n  const selectedDashboard = orObject(sGetEditDashboardRoot(state));\n  return {\n    name: selectedDashboard.name,\n    columns: sGetLayoutColumns(state),\n    description: selectedDashboard.description,\n    insertPosition: sGetItemConfigInsertPosition(state)\n  };\n};\n\nconst mapDispatchToProps = {\n  onChangeTitle: acSetDashboardTitle,\n  onChangeDescription: acSetDashboardDescription,\n  onChangeInsertPosition: acSetItemConfigInsertPosition,\n  onSaveLayout: columns => dispatch => {\n    dispatch(acSetLayoutColumns([...Array(columns).keys()].map(i => ({\n      index: i\n    }))));\n    dispatch(tSetDashboardItems());\n  }\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(EditTitleBar);","import { useDataEngine } from '@dhis2/app-runtime';\nimport i18n from '@dhis2/d2-i18n';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { acSetEditDashboard } from '../../actions/editDashboard';\nimport { apiFetchDashboard } from '../../api/fetchDashboard';\nimport DashboardContainer from '../../components/DashboardContainer';\nimport NoContentMessage from '../../components/NoContentMessage';\nimport Notice from '../../components/Notice';\nimport { useWindowDimensions } from '../../components/WindowDimensionsProvider';\nimport { EDIT } from '../../modules/dashboardModes';\nimport { setHeaderbarVisible } from '../../modules/setHeaderbarVisible';\nimport { isSmallScreen } from '../../modules/smallScreen';\nimport { sGetIsPrintPreviewView } from '../../reducers/editDashboard';\nimport LayoutPrintPreview from '../print/PrintLayoutDashboard';\nimport ActionsBar from './ActionsBar';\nimport ItemGrid from './ItemGrid';\nimport classes from './styles/EditDashboard.module.css';\nimport TitleBar from './TitleBar';\n\nconst EditDashboard = props => {\n  const dataEngine = useDataEngine();\n  const {\n    width\n  } = useWindowDimensions();\n  const [redirectUrl, setRedirectUrl] = useState(null);\n  const [hasUpdateAccess, setHasUpdateAccess] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    const loadDashboard = async () => {\n      try {\n        var _dashboard$access;\n\n        const dashboard = await apiFetchDashboard(dataEngine, props.id, {\n          mode: EDIT\n        });\n        props.setEditDashboard(dashboard);\n        setHasUpdateAccess(((_dashboard$access = dashboard.access) === null || _dashboard$access === void 0 ? void 0 : _dashboard$access.update) || false);\n        setIsLoading(false);\n      } catch (error) {\n        setRedirectUrl(props.id ? `/${props.id}` : '/');\n        setIsLoading(false);\n      }\n    };\n\n    if (isSmallScreen(width)) {\n      setRedirectUrl(props.id ? `/${props.id}` : '/');\n      return;\n    }\n\n    setHeaderbarVisible(true);\n    loadDashboard();\n  }, [props.id]);\n\n  if (redirectUrl) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: redirectUrl\n    });\n  }\n\n  if (isLoading) {\n    return /*#__PURE__*/React.createElement(Layer, {\n      translucent: true\n    }, /*#__PURE__*/React.createElement(CenteredContent, null, /*#__PURE__*/React.createElement(CircularLoader, null)));\n  }\n\n  const renderGrid = () => {\n    if (props.isPrintPreviewView) {\n      return /*#__PURE__*/React.createElement(LayoutPrintPreview, {\n        fromEdit: true\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(DashboardContainer, null, /*#__PURE__*/React.createElement(TitleBar, null), /*#__PURE__*/React.createElement(ItemGrid, null));\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: cx(classes.container, 'dashboard-scroll-container'),\n    \"data-test\": \"outer-scroll-container\"\n  }, /*#__PURE__*/React.createElement(ActionsBar, null), hasUpdateAccess ? renderGrid() : /*#__PURE__*/React.createElement(NoContentMessage, {\n    text: i18n.t('No access')\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.notice\n  }, /*#__PURE__*/React.createElement(Notice, {\n    title: i18n.t('Not supported'),\n    message: i18n.t('Editing dashboards on small screens is not supported. Resize your screen to return to edit mode.')\n  })));\n};\n\nEditDashboard.propTypes = {\n  id: PropTypes.string,\n  isPrintPreviewView: PropTypes.bool,\n  setEditDashboard: PropTypes.func\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  var _ownProps$match, _ownProps$match$param;\n\n  return {\n    id: ((_ownProps$match = ownProps.match) === null || _ownProps$match === void 0 ? void 0 : (_ownProps$match$param = _ownProps$match.params) === null || _ownProps$match$param === void 0 ? void 0 : _ownProps$match$param.dashboardId) || null,\n    isPrintPreviewView: sGetIsPrintPreviewView(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setEditDashboard: acSetEditDashboard\n})(EditDashboard);","import i18n from '@dhis2/d2-i18n';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { acSetEditNewDashboard } from '../../actions/editDashboard';\nimport DashboardContainer from '../../components/DashboardContainer';\nimport Notice from '../../components/Notice';\nimport { useWindowDimensions } from '../../components/WindowDimensionsProvider';\nimport { setHeaderbarVisible } from '../../modules/setHeaderbarVisible';\nimport { isSmallScreen } from '../../modules/smallScreen';\nimport { sGetIsPrintPreviewView } from '../../reducers/editDashboard';\nimport LayoutPrintPreview from '../print/PrintLayoutDashboard';\nimport ActionsBar from './ActionsBar';\nimport ItemGrid from './ItemGrid';\nimport classes from './styles/NewDashboard.module.css';\nimport TitleBar from './TitleBar';\n\nconst NewDashboard = props => {\n  const {\n    width\n  } = useWindowDimensions();\n  const [redirectUrl, setRedirectUrl] = useState(null);\n  useEffect(() => {\n    if (isSmallScreen(width)) {\n      setRedirectUrl('/');\n      return;\n    }\n\n    setHeaderbarVisible(true);\n    props.setNewDashboard();\n  }, []);\n\n  if (redirectUrl) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: redirectUrl\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: cx(classes.container, 'dashboard-scroll-container')\n  }, /*#__PURE__*/React.createElement(ActionsBar, null), props.isPrintPreviewView ? /*#__PURE__*/React.createElement(LayoutPrintPreview, {\n    fromEdit: true\n  }) : /*#__PURE__*/React.createElement(DashboardContainer, null, /*#__PURE__*/React.createElement(TitleBar, null), /*#__PURE__*/React.createElement(ItemGrid, null))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.notice\n  }, /*#__PURE__*/React.createElement(Notice, {\n    title: i18n.t('Not supported'),\n    message: i18n.t('Creating dashboards on small screens is not supported. Resize your screen to return to create mode.')\n  })));\n};\n\nNewDashboard.propTypes = {\n  isPrintPreviewView: PropTypes.bool,\n  setNewDashboard: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  isPrintPreviewView: sGetIsPrintPreviewView(state)\n});\n\nexport default connect(mapStateToProps, {\n  setNewDashboard: acSetEditNewDashboard\n})(NewDashboard);","import cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Item } from '../../components/Item/Item';\nimport { PRINT } from '../../modules/dashboardModes';\nimport { getGridItemDomElementClassName } from '../../modules/getGridItemDomElementClassName';\nimport { hasShape } from '../../modules/gridUtil';\nimport { orArray } from '../../modules/util';\nimport { sGetPrintDashboardItems } from '../../reducers/printDashboard';\nimport StaticGrid from './StaticGrid';\n\nconst PrintItemGrid = ({\n  dashboardItems\n}) => {\n  const getItemComponent = item => /*#__PURE__*/React.createElement(\"div\", {\n    key: item.i,\n    className: cx(item.type, 'print', 'oipp', getGridItemDomElementClassName(item.id))\n  }, /*#__PURE__*/React.createElement(Item, {\n    item: item,\n    dashboardMode: PRINT\n  }));\n\n  const getItemComponents = items => items.map(item => getItemComponent(item));\n\n  return /*#__PURE__*/React.createElement(StaticGrid, {\n    className: \"print\",\n    layout: dashboardItems\n  }, getItemComponents(dashboardItems));\n};\n\nPrintItemGrid.propTypes = {\n  dashboardItems: PropTypes.array\n};\n\nconst mapStateToProps = state => {\n  return {\n    dashboardItems: orArray(sGetPrintDashboardItems(state)).filter(hasShape)\n  };\n};\n\nexport default connect(mapStateToProps)(PrintItemGrid);","import { useDataEngine } from '@dhis2/app-runtime';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport sortBy from 'lodash/sortBy';\nimport PropTypes from 'prop-types';\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { acSetPrintDashboard, acAddPrintDashboardItem, acRemovePrintDashboardItem, acUpdatePrintDashboardItem } from '../../actions/printDashboard';\nimport { apiFetchDashboard } from '../../api/fetchDashboard';\nimport { VIEW } from '../../modules/dashboardModes';\nimport { MAX_ITEM_GRID_HEIGHT_OIPP, MAX_ITEM_GRID_WIDTH_OIPP } from '../../modules/gridUtil';\nimport { PAGEBREAK, PRINT_TITLE_PAGE, SPACER } from '../../modules/itemTypes';\nimport { setHeaderbarVisible } from '../../modules/setHeaderbarVisible';\nimport PrintActionsBar from './ActionsBar';\nimport PrintInfo from './PrintInfo';\nimport PrintItemGrid from './PrintItemGrid';\nimport classes from './styles/PrintDashboard.module.css';\nimport './styles/print.css';\nimport './styles/print-oipp.css';\n\nconst PrintDashboard = ({\n  match,\n  setPrintDashboard,\n  addDashboardItem,\n  updateDashboardItem,\n  removeDashboardItem\n}) => {\n  var _match$params;\n\n  const dataEngine = useDataEngine();\n  const [redirectUrl, setRedirectUrl] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const id = (match === null || match === void 0 ? void 0 : (_match$params = match.params) === null || _match$params === void 0 ? void 0 : _match$params.dashboardId) || null;\n  useEffect(() => {\n    const loadDashboard = async () => {\n      try {\n        const dashboard = await apiFetchDashboard(dataEngine, id, {\n          mode: VIEW\n        }); //sort the items by Y pos so they print in order of top to bottom\n\n        const sortedItems = sortBy(dashboard.dashboardItems, ['y', 'x']);\n        setPrintDashboard(Object.assign({}, dashboard, {\n          dashboardItems: sortedItems\n        })); // remove spacers - don't want empty pages\n\n        let spacerCount = 0;\n        sortedItems.forEach(item => {\n          if (item.type === SPACER) {\n            spacerCount += 1;\n            removeDashboardItem(item.id);\n          }\n        }); // Resize the items to the full page size\n\n        sortedItems.forEach(item => {\n          updateDashboardItem(Object.assign({}, item, {\n            w: MAX_ITEM_GRID_WIDTH_OIPP,\n            h: MAX_ITEM_GRID_HEIGHT_OIPP\n          }));\n        }); // insert page breaks into the document flow to create the \"pages\"\n        // when previewing the print\n\n        for (let i = 0; i < (sortedItems.length - spacerCount) * 2; i += 2) {\n          addDashboardItem({\n            type: PAGEBREAK,\n            position: i,\n            isStatic: false\n          });\n        }\n\n        addDashboardItem({\n          type: PRINT_TITLE_PAGE,\n          isOneItemPerPage: true\n        });\n        setIsLoading(false);\n      } catch (error) {\n        setRedirectUrl(id ? `/${id}` : '/');\n        setIsLoading(false);\n      }\n    };\n\n    setHeaderbarVisible(false);\n    loadDashboard();\n  }, [id]);\n\n  if (redirectUrl) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: redirectUrl\n    });\n  }\n\n  if (isLoading) {\n    return /*#__PURE__*/React.createElement(Layer, {\n      translucent: true\n    }, /*#__PURE__*/React.createElement(CenteredContent, null, /*#__PURE__*/React.createElement(CircularLoader, null)));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.container\n  }, /*#__PURE__*/React.createElement(PrintActionsBar, {\n    id: id\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.wrapper\n  }, /*#__PURE__*/React.createElement(PrintInfo, {\n    isLayout: false\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.pageOuter,\n    \"data-test\": \"print-oipp-page\"\n  }, /*#__PURE__*/React.createElement(PrintItemGrid, null))));\n};\n\nPrintDashboard.propTypes = {\n  addDashboardItem: PropTypes.func,\n  match: PropTypes.object,\n  removeDashboardItem: PropTypes.func,\n  setPrintDashboard: PropTypes.func,\n  updateDashboardItem: PropTypes.func\n};\nexport default connect(null, {\n  setPrintDashboard: acSetPrintDashboard,\n  addDashboardItem: acAddPrintDashboardItem,\n  removeDashboardItem: acRemovePrintDashboardItem,\n  updateDashboardItem: acUpdatePrintDashboardItem\n})(PrintDashboard);","import { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport React from 'react';\n\nconst LoadingMask = () => /*#__PURE__*/React.createElement(Layer, {\n  translucent: true\n}, /*#__PURE__*/React.createElement(CenteredContent, null, /*#__PURE__*/React.createElement(CircularLoader, null)));\n\nexport default LoadingMask;","import { validateReducer } from '../modules/util';\nexport const SET_DASHBOARDS_FILTER = 'SET_DASHBOARDS_FILTER';\nexport const CLEAR_DASHBOARDS_FILTER = 'CLEAR_DASHBOARDS_FILTER';\nexport const DEFAULT_STATE_DASHBOARDS_FILTER = '';\nexport default ((state = DEFAULT_STATE_DASHBOARDS_FILTER, action) => {\n  switch (action.type) {\n    case SET_DASHBOARDS_FILTER:\n      {\n        return validateReducer(action.value, DEFAULT_STATE_DASHBOARDS_FILTER);\n      }\n\n    case CLEAR_DASHBOARDS_FILTER:\n      {\n        return DEFAULT_STATE_DASHBOARDS_FILTER;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetDashboardsFilter = state => state.dashboardsFilter;","import PropTypes from 'prop-types';\nimport React from 'react';\nexport const ChevronDown = () => /*#__PURE__*/React.createElement(\"svg\", {\n  height: \"24\",\n  viewBox: \"0 0 24 24\",\n  width: \"24\",\n  xmlns: \"http://www.w3.org/2000/svg\"\n}, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m11.29289 15.7071c.39053.3905 1.02369.3905 1.41422 0l4.99999-4.99999c.3905-.39053.3905-1.02369 0-1.41422-.3905-.39052-1.0237-.39052-1.4142 0l-4.2929 4.2929-4.29289-4.2929c-.39053-.39052-1.02369-.39052-1.41422 0-.39052.39053-.39052 1.02369 0 1.41422z\",\n  fill: \"#a0adba\"\n}));\nexport const ChevronUp = () => /*#__PURE__*/React.createElement(\"svg\", {\n  height: \"24\",\n  viewBox: \"0 0 24 24\",\n  width: \"24\",\n  xmlns: \"http://www.w3.org/2000/svg\"\n}, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m11.2928932 8.29289322c.360484-.36048396.927715-.3882135 1.3200062-.08318861l.0942074.08318861 5 4.99999998c.3905243.3905243.3905243 1.0236893 0 1.4142136-.360484.3604839-.927715.3882135-1.3200062.0831886l-.0942074-.0831886-4.2928932-4.2921068-4.29289322 4.2921068c-.36048396.3604839-.92771502.3882135-1.32000622.0831886l-.09420734-.0831886c-.36048396-.360484-.3882135-.927715-.08318861-1.3200062l.08318861-.0942074z\",\n  fill: \"#a0adba\"\n}));\nexport const OfflineSaved = ({\n  className\n}) => /*#__PURE__*/React.createElement(\"svg\", {\n  className: className,\n  height: \"16\",\n  viewBox: \"0 0 16 16\",\n  width: \"16\",\n  xmlns: \"http://www.w3.org/2000/svg\"\n}, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m4.5 7v1h-1.5v6h10v-6h-1.5v-1h1.5c.5522847 0 1 .44771525 1 1v6c0 .5522847-.4477153 1-1 1h-10c-.55228475 0-1-.4477153-1-1v-6c0-.55228475.44771525-1 1-1zm5 3v1h-3v-1zm2.1130214-9.31661889.7739572.63323779-4.84985989 5.92760659-3.3906721-3.3906721.70710678-.70710678 2.60944661 2.60955339z\",\n  fill: \"inherit\",\n  fillRule: \"evenodd\"\n}));\nOfflineSaved.propTypes = {\n  className: PropTypes.string\n};","import { useOnlineStatus, useCacheableSection } from '@dhis2/app-runtime';\nimport { Chip as UiChip, colors, IconStarFilled24 } from '@dhis2/ui';\nimport cx from 'classnames';\nimport debounce from 'lodash/debounce';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { apiPostDataStatistics } from '../../../api/dataStatistics';\nimport { OfflineSaved } from './assets/icons';\nimport classes from './styles/Chip.module.css';\n\nconst Chip = ({\n  starred,\n  selected,\n  label,\n  dashboardId,\n  onClick\n}) => {\n  const {\n    lastUpdated\n  } = useCacheableSection(dashboardId);\n  const {\n    online\n  } = useOnlineStatus();\n  const chipProps = {\n    selected\n  };\n\n  if (starred) {\n    chipProps.icon = /*#__PURE__*/React.createElement(IconStarFilled24, {\n      color: selected ? colors.white : colors.grey600\n    });\n  }\n\n  const debouncedPostStatistics = debounce(() => apiPostDataStatistics('DASHBOARD_VIEW', dashboardId), 500);\n\n  const handleClick = () => {\n    online && debouncedPostStatistics();\n    onClick();\n  };\n\n  return /*#__PURE__*/React.createElement(Link, {\n    className: classes.link,\n    to: `/${dashboardId}`,\n    onClick: handleClick,\n    \"data-test\": \"dashboard-chip\"\n  }, /*#__PURE__*/React.createElement(UiChip, chipProps, /*#__PURE__*/React.createElement(\"span\", {\n    className: lastUpdated ? classes.labelWithAdornment : undefined\n  }, label), lastUpdated && /*#__PURE__*/React.createElement(OfflineSaved, {\n    className: cx(classes.adornment, selected && classes.selected)\n  })));\n};\n\nChip.propTypes = {\n  dashboardId: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  selected: PropTypes.bool.isRequired,\n  starred: PropTypes.bool.isRequired,\n  onClick: PropTypes.func.isRequired\n};\nexport default Chip;","import { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nconst ClearIcon = ({\n  className\n}) => /*#__PURE__*/React.createElement(\"svg\", {\n  className: className,\n  fill: colors.grey800,\n  xmlns: \"http://www.w3.org/2000/svg\",\n  viewBox: \"0 0 24 24\"\n}, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M0 0h24v24H0z\",\n  fill: \"none\"\n}));\n\nClearIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default ClearIcon;","import PropTypes from 'prop-types';\nimport React from 'react';\nimport ClearIcon from './assets/Clear';\nimport classes from './styles/ClearButton.module.css';\n\nconst ClearButton = ({\n  onClear\n}) => /*#__PURE__*/React.createElement(\"button\", {\n  className: classes.button,\n  onClick: onClear\n}, /*#__PURE__*/React.createElement(\"span\", null, /*#__PURE__*/React.createElement(ClearIcon, {\n  className: classes.icon,\n  color: \"action\"\n})));\n\nClearButton.propTypes = {\n  onClear: PropTypes.func.isRequired\n};\nexport default ClearButton;","import i18n from '@dhis2/d2-i18n';\nimport { colors, IconSearch16, IconSearch24 } from '@dhis2/ui';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { acSetDashboardsFilter, acClearDashboardsFilter } from '../../../actions/dashboardsFilter';\nimport { useWindowDimensions } from '../../../components/WindowDimensionsProvider';\nimport { isSmallScreen } from '../../../modules/smallScreen';\nimport { sGetDashboardsFilter } from '../../../reducers/dashboardsFilter';\nimport ClearButton from './ClearButton';\nimport classes from './styles/Filter.module.css';\nexport const KEYCODE_ENTER = 13;\nexport const KEYCODE_ESCAPE = 27;\n\nconst Filter = ({\n  clearDashboardsFilter,\n  expanded,\n  filterText,\n  setDashboardsFilter,\n  onKeypressEnter,\n  onSearchClicked\n}) => {\n  const [focusedClassName, setFocusedClassName] = useState('');\n  const [inputFocused, setInputFocus] = useState(false);\n  const {\n    width\n  } = useWindowDimensions();\n\n  const setFilterValue = event => {\n    event.preventDefault();\n    setDashboardsFilter(event.target.value);\n  };\n\n  const onKeyUp = event => {\n    switch (event.keyCode) {\n      case KEYCODE_ENTER:\n        onKeypressEnter();\n        clearDashboardsFilter();\n        break;\n\n      case KEYCODE_ESCAPE:\n        clearDashboardsFilter();\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const onFocus = event => {\n    event.preventDefault();\n    setFocusedClassName(classes.focused);\n  };\n\n  const onBlur = event => {\n    event.preventDefault();\n    setFocusedClassName('');\n  };\n\n  const onFocusInput = input => {\n    if (input && inputFocused && isSmallScreen(width)) {\n      return input.focus();\n    }\n  };\n\n  const activateSearchInput = () => {\n    onSearchClicked();\n    setInputFocus(true);\n  };\n\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: cx(classes.container, expanded ? classes.expanded : classes.collapsed)\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: classes.searchButton,\n    onClick: activateSearchInput\n  }, /*#__PURE__*/React.createElement(IconSearch24, {\n    color: colors.grey800\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: cx(classes.searchArea, `${focusedClassName}`),\n    onFocus: onFocus,\n    onBlur: onBlur\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.searchIconContainer\n  }, /*#__PURE__*/React.createElement(IconSearch16, {\n    color: colors.grey800\n  })), /*#__PURE__*/React.createElement(\"input\", {\n    className: classes.input,\n    type: \"text\",\n    placeholder: i18n.t('Search for a dashboard'),\n    onChange: setFilterValue,\n    onKeyUp: onKeyUp,\n    value: filterText,\n    \"data-test\": \"search-dashboard-input\",\n    ref: onFocusInput\n  }), filterText && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.clearButtonContainer\n  }, /*#__PURE__*/React.createElement(ClearButton, {\n    onClear: clearDashboardsFilter\n  }))));\n};\n\nFilter.propTypes = {\n  clearDashboardsFilter: PropTypes.func,\n  expanded: PropTypes.bool,\n  filterText: PropTypes.string,\n  setDashboardsFilter: PropTypes.func,\n  onKeypressEnter: PropTypes.func,\n  onSearchClicked: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  filterText: sGetDashboardsFilter(state)\n});\n\nconst mapDispatchToProps = {\n  setDashboardsFilter: acSetDashboardsFilter,\n  clearDashboardsFilter: acClearDashboardsFilter\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);","import { SET_DASHBOARDS_FILTER, CLEAR_DASHBOARDS_FILTER } from '../reducers/dashboardsFilter'; // actions\n\nexport const acSetDashboardsFilter = value => ({\n  type: SET_DASHBOARDS_FILTER,\n  value\n});\nexport const acClearDashboardsFilter = () => ({\n  type: CLEAR_DASHBOARDS_FILTER\n});","import arraySort from 'd2-utilizr/lib/arraySort';\nexport const getFilteredDashboards = (dashboards, filterText) => {\n  const filteredDashboards = arraySort(Object.values(dashboards).filter(d => d.displayName.toLowerCase().includes(filterText.toLowerCase())), 'ASC', 'displayName');\n  return [...filteredDashboards.filter(d => d.starred), ...filteredDashboards.filter(d => !d.starred)];\n};","import { useOnlineStatus } from '@dhis2/app-runtime';\nimport i18n from '@dhis2/d2-i18n';\nimport { Button, ComponentCover, Tooltip, IconAdd24 } from '@dhis2/ui';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect, withRouter } from 'react-router-dom';\nimport { sGetAllDashboards } from '../../../reducers/dashboards';\nimport { sGetDashboardsFilter } from '../../../reducers/dashboardsFilter';\nimport { sGetSelectedId } from '../../../reducers/selected';\nimport Chip from './Chip';\nimport Filter from './Filter';\nimport { getFilteredDashboards } from './getFilteredDashboards';\nimport classes from './styles/Content.module.css';\n\nconst Content = ({\n  dashboards,\n  expanded,\n  filterText,\n  history,\n  selectedId,\n  onChipClicked,\n  onSearchClicked\n}) => {\n  const [redirectUrl, setRedirectUrl] = useState(null);\n  const {\n    offline\n  } = useOnlineStatus();\n\n  const onSelectDashboard = () => {\n    var _getFilteredDashboard;\n\n    const id = (_getFilteredDashboard = getFilteredDashboards(dashboards, filterText)[0]) === null || _getFilteredDashboard === void 0 ? void 0 : _getFilteredDashboard.id;\n\n    if (id) {\n      history.push(id);\n    }\n  };\n\n  const enterNewMode = () => {\n    if (!offline) {\n      setRedirectUrl('/new');\n    }\n  };\n\n  const getChips = () => getFilteredDashboards(dashboards, filterText).map(dashboard => /*#__PURE__*/React.createElement(Chip, {\n    key: dashboard.id,\n    label: dashboard.displayName,\n    starred: dashboard.starred,\n    dashboardId: dashboard.id,\n    selected: dashboard.id === selectedId,\n    onClick: onChipClicked\n  }));\n\n  const getControlsSmall = () => /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.controlsSmall\n  }, /*#__PURE__*/React.createElement(Filter, {\n    onKeypressEnter: onSelectDashboard,\n    onSearchClicked: onSearchClicked,\n    expanded: expanded\n  }));\n\n  const getControlsLarge = () => /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.controlsLarge\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.buttonPadding\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.buttonPosition\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    content: offline ? i18n.t('Cannot create a dashboard while offline') : i18n.t('Create new dashboard'),\n    closeDelay: 100,\n    openDelay: 400\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: classes.newButton,\n    disabled: offline,\n    small: true,\n    icon: /*#__PURE__*/React.createElement(IconAdd24, null),\n    onClick: enterNewMode,\n    dataTest: \"new-button\"\n  }), offline && /*#__PURE__*/React.createElement(ComponentCover, null)))), /*#__PURE__*/React.createElement(Filter, {\n    onKeypressEnter: onSelectDashboard,\n    onSearchClicked: onSearchClicked,\n    expanded: expanded\n  }));\n\n  if (redirectUrl) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: redirectUrl\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: cx(classes.container, expanded ? classes.expanded : classes.collapsed)\n  }, getControlsSmall(), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.chipsContainer\n  }, getControlsLarge(), getChips()));\n};\n\nContent.propTypes = {\n  dashboards: PropTypes.object,\n  expanded: PropTypes.bool,\n  filterText: PropTypes.string,\n  history: PropTypes.object,\n  selectedId: PropTypes.string,\n  onChipClicked: PropTypes.func,\n  onSearchClicked: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  dashboards: sGetAllDashboards(state),\n  selectedId: sGetSelectedId(state),\n  filterText: sGetDashboardsFilter(state)\n});\n\nexport default withRouter(connect(mapStateToProps)(Content));","import PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport classes from './styles/DragHandle.module.css';\n\nconst DragHandle = ({\n  onHeightChanged,\n  setDragging\n}) => {\n  const [startingY, setStartingY] = useState(0);\n\n  const onStartDrag = e => {\n    setStartingY(e.clientY);\n    setDragging(true);\n    window.addEventListener('mousemove', onDrag);\n    window.addEventListener('mouseup', onEndDrag);\n  };\n\n  const onDrag = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    const currentY = e.clientY;\n\n    if (currentY !== startingY && currentY > 0) {\n      requestAnimationFrame(() => {\n        onHeightChanged(currentY);\n      });\n    }\n  };\n\n  const onEndDrag = () => {\n    setDragging(false);\n    window.removeEventListener('mousemove', onDrag);\n    window.removeEventListener('mouseup', onEndDrag);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.draghandle,\n    onMouseDown: onStartDrag,\n    \"data-test\": \"controlbar-drag-handle\"\n  });\n};\n\nDragHandle.propTypes = {\n  setDragging: PropTypes.func,\n  onHeightChanged: PropTypes.func\n};\nexport default /*#__PURE__*/React.memo(DragHandle, () => true);","import i18n from '@dhis2/d2-i18n';\nimport { Tooltip } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport React, { useRef } from 'react';\nimport { ChevronDown, ChevronUp } from './assets/icons';\nimport classes from './styles/ShowMoreButton.module.css';\n\nconst ShowMoreButton = ({\n  onClick,\n  dashboardBarIsExpanded,\n  disabled\n}) => {\n  const containerRef = useRef(null);\n  const buttonLabel = dashboardBarIsExpanded ? i18n.t('Show fewer dashboards') : i18n.t('Show more dashboards');\n\n  const onButtonClicked = () => {\n    // The click may happen on the svg or path\n    // element of the button icon.\n    // In that case it is necessary to trigger\n    // the mouseout on the button element\n    // to ensure that the tooltip is removed\n    const buttonEl = containerRef.current.children[0];\n    const event = new MouseEvent('mouseout', {\n      bubbles: true,\n      cancelable: false\n    });\n    onClick();\n    buttonEl.dispatchEvent(event);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.container,\n    ref: containerRef\n  }, disabled ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.disabled\n  }, /*#__PURE__*/React.createElement(ChevronDown, null)) : /*#__PURE__*/React.createElement(Tooltip, {\n    content: buttonLabel,\n    placement: \"top\",\n    openDelay: 500,\n    closeDelay: 0\n  }, ({\n    onMouseOver,\n    onMouseOut,\n    ref\n  }) => /*#__PURE__*/React.createElement(\"button\", {\n    className: classes.showMore,\n    onClick: onButtonClicked,\n    \"data-test\": \"showmore-button\",\n    \"aria-label\": buttonLabel,\n    ref: ref,\n    onMouseOver: onMouseOver,\n    onMouseOut: onMouseOut\n  }, dashboardBarIsExpanded ? /*#__PURE__*/React.createElement(ChevronUp, null) : /*#__PURE__*/React.createElement(ChevronDown, null))));\n};\n\nShowMoreButton.propTypes = {\n  dashboardBarIsExpanded: PropTypes.bool,\n  disabled: PropTypes.bool,\n  onClick: PropTypes.func\n};\nexport default ShowMoreButton;","import cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { useState, useRef, useEffect, useCallback, createRef } from 'react';\nimport { connect } from 'react-redux';\nimport { acSetControlBarUserRows } from '../../../actions/controlBar';\nimport { apiPostControlBarRows } from '../../../api/controlBar';\nimport { useWindowDimensions } from '../../../components/WindowDimensionsProvider';\nimport { sGetControlBarUserRows } from '../../../reducers/controlBar';\nimport Content from './Content';\nimport DragHandle from './DragHandle';\nimport { getRowsFromHeight } from './getRowsFromHeight';\nimport ShowMoreButton from './ShowMoreButton';\nimport classes from './styles/DashboardsBar.module.css';\nexport const MIN_ROW_COUNT = 1;\nexport const MAX_ROW_COUNT = 10;\n\nconst DashboardsBar = ({\n  userRows,\n  updateUserRows,\n  expanded,\n  onExpandedChanged\n}) => {\n  const [dragging, setDragging] = useState(false);\n  const [mouseYPos, setMouseYPos] = useState(0);\n  const userRowsChanged = useRef(false);\n  const ref = /*#__PURE__*/createRef();\n  const {\n    height\n  } = useWindowDimensions();\n  const rootElement = document.documentElement;\n  useEffect(() => {\n    if (mouseYPos === 0) {\n      return;\n    }\n\n    const newRows = Math.max(MIN_ROW_COUNT, getRowsFromHeight(mouseYPos - 52) // don't rush the transition to a bigger row count\n    );\n\n    if (newRows < MAX_ROW_COUNT) {\n      onExpandedChanged(false);\n    }\n\n    if (newRows !== userRows) {\n      updateUserRows(Math.min(newRows, MAX_ROW_COUNT));\n      userRowsChanged.current = true;\n    }\n  }, [mouseYPos]);\n  useEffect(() => {\n    rootElement.style.setProperty('--user-rows-count', userRows);\n  }, [userRows]);\n  useEffect(() => {\n    const vh = height * 0.01;\n    rootElement.style.setProperty('--vh', `${vh}px`);\n  }, [height]);\n  useEffect(() => {\n    if (!dragging && userRowsChanged.current) {\n      apiPostControlBarRows(userRows);\n      userRowsChanged.current = false;\n    }\n  }, [dragging, userRowsChanged.current]);\n\n  const scrollToTop = () => {\n    if (expanded) {\n      ref.current.scroll(0, 0);\n    }\n  };\n\n  const memoizedToggleExpanded = useCallback(() => {\n    if (expanded) {\n      memoizedCancelExpanded();\n    } else {\n      scrollToTop();\n      onExpandedChanged(!expanded);\n    }\n  }, [expanded]);\n  const memoizedCancelExpanded = useCallback(() => {\n    scrollToTop();\n    onExpandedChanged(false);\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: cx(classes.bar, expanded ? classes.expanded : classes.collapsed),\n    \"data-test\": \"dashboards-bar\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.container,\n    \"data-test\": \"dashboardsbar-container\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.content,\n    ref: ref\n  }, /*#__PURE__*/React.createElement(Content, {\n    onChipClicked: memoizedCancelExpanded,\n    onSearchClicked: memoizedToggleExpanded,\n    expanded: expanded\n  })), /*#__PURE__*/React.createElement(ShowMoreButton, {\n    onClick: memoizedToggleExpanded,\n    dashboardBarIsExpanded: expanded,\n    disabled: !expanded && userRows === MAX_ROW_COUNT\n  }), /*#__PURE__*/React.createElement(DragHandle, {\n    setDragging: setDragging,\n    onHeightChanged: setMouseYPos\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.spacer\n  }));\n};\n\nDashboardsBar.propTypes = {\n  expanded: PropTypes.bool,\n  updateUserRows: PropTypes.func,\n  userRows: PropTypes.number,\n  onExpandedChanged: PropTypes.func\n};\nDashboardsBar.defaultProps = {\n  onExpandedChanged: Function.prototype\n};\n\nconst mapStateToProps = state => ({\n  userRows: sGetControlBarUserRows(state)\n});\n\nconst mapDispatchToProps = {\n  updateUserRows: acSetControlBarUserRows\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(DashboardsBar);","const ROW_HEIGHT = 40;\nconst PADDING_TOP = 10;\nconst SHOWMORE_BUTTON_HEIGHT = 21; // 27px - 6px below bottom edge of ctrlbar\n\nexport const getRowsFromHeight = height => {\n  return Math.round((height - SHOWMORE_BUTTON_HEIGHT - PADDING_TOP) / ROW_HEIGHT);\n};","export const REGISTER_PASSIVE_VIEW = 'REGISTER_PASSIVE_VIEW';\nexport default ((state = false, action) => {\n  switch (action.type) {\n    case REGISTER_PASSIVE_VIEW:\n      {\n        return true;\n      }\n\n    default:\n      return state;\n  }\n});\nexport const sGetPassiveViewRegistered = state => state.passiveViewRegistered;","export const SET_ACTIVE_MODAL_DIMENSION = 'SET_ACTIVE_MODAL_DIMENSION';\nexport const CLEAR_ACTIVE_MODAL_DIMENSION = 'CLEAR_ACTIVE_MODAL_DIMENSION';\nexport const DEFAULT_STATE_ACTIVE_MODAL_DIMENSION = {};\nexport default ((state = DEFAULT_STATE_ACTIVE_MODAL_DIMENSION, action) => {\n  switch (action.type) {\n    case SET_ACTIVE_MODAL_DIMENSION:\n      {\n        return action.value;\n      }\n\n    case CLEAR_ACTIVE_MODAL_DIMENSION:\n      {\n        return DEFAULT_STATE_ACTIVE_MODAL_DIMENSION;\n      }\n\n    default:\n      return state;\n  }\n});\nexport const sGetActiveModalDimension = state => state.activeModalDimension;","import { SET_ACTIVE_MODAL_DIMENSION, CLEAR_ACTIVE_MODAL_DIMENSION } from '../reducers/activeModalDimension';\nexport const acSetActiveModalDimension = value => ({\n  type: SET_ACTIVE_MODAL_DIMENSION,\n  value\n});\nexport const acClearActiveModalDimension = () => ({\n  type: CLEAR_ACTIVE_MODAL_DIMENSION\n});","import { useOnlineStatus, useCacheableSection } from '@dhis2/app-runtime';\nimport i18n from '@dhis2/d2-i18n';\nimport { Tooltip } from '@dhis2/ui';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { acSetActiveModalDimension } from '../../../actions/activeModalDimension';\nimport { sGetSelectedId } from '../../../reducers/selected';\nimport classes from './styles/FilterBadge.module.css';\n\nconst FilterBadge = ({\n  dashboardId,\n  filter,\n  openFilterModal,\n  onRemove\n}) => {\n  const {\n    online\n  } = useOnlineStatus();\n  const {\n    isCached\n  } = useCacheableSection(dashboardId);\n  const notAllowed = !isCached && !online;\n  const filterText = `${filter.name}: ${filter.values.length > 1 ? i18n.t('{{count}} selected', {\n    count: filter.values.length\n  }) : filter.values[0].name}`;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.container,\n    \"data-test\": \"dashboard-filter-badge\"\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.badge,\n    onClick: () => openFilterModal({\n      id: filter.id,\n      name: filter.name\n    })\n  }, filterText), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.badgeSmall\n  }, filterText), /*#__PURE__*/React.createElement(Tooltip, {\n    content: i18n.t('Cannot remove filters while offline'),\n    openDelay: 200,\n    closeDelay: 100\n  }, ({\n    onMouseOver,\n    onMouseOut,\n    ref\n  }) => /*#__PURE__*/React.createElement(\"span\", {\n    className: cx(classes.span, notAllowed && classes.notAllowed),\n    onMouseOver: () => notAllowed && onMouseOver(),\n    onMouseOut: () => notAllowed && onMouseOut(),\n    ref: ref\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    disabled: notAllowed,\n    className: classes.removeButton,\n    onClick: () => onRemove(filter.id)\n  }, i18n.t('Remove')))));\n};\n\nFilterBadge.propTypes = {\n  dashboardId: PropTypes.string.isRequired,\n  filter: PropTypes.object.isRequired,\n  openFilterModal: PropTypes.func.isRequired,\n  onRemove: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  dashboardId: sGetSelectedId(state)\n});\n\nexport default connect(mapStateToProps, {\n  openFilterModal: acSetActiveModalDimension\n})(FilterBadge);","import { useOnlineStatus } from '@dhis2/app-runtime';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { acRemoveItemFilter, acClearItemFilters } from '../../../actions/itemFilters';\nimport ConfirmActionDialog from '../../../components/ConfirmActionDialog';\nimport { sGetNamedItemFilters } from '../../../reducers/itemFilters';\nimport FilterBadge from './FilterBadge';\nimport classes from './styles/FilterBar.module.css';\n\nconst FilterBar = ({\n  filters,\n  removeFilter,\n  removeAllFilters\n}) => {\n  const {\n    online\n  } = useOnlineStatus();\n  const [dialogIsOpen, setDialogIsOpen] = useState(false);\n\n  const onRemoveFilter = filterId => {\n    if (!online && filters.length > 1) {\n      setDialogIsOpen(true);\n    } else {\n      removeFilter(filterId);\n    }\n  };\n\n  const closeDialog = () => setDialogIsOpen(false);\n\n  return filters.length ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.bar\n  }, filters.map(filter => /*#__PURE__*/React.createElement(FilterBadge, {\n    key: filter.id,\n    filter: filter,\n    onRemove: onRemoveFilter\n  }))), /*#__PURE__*/React.createElement(ConfirmActionDialog, {\n    open: dialogIsOpen,\n    title: i18n.t('Removing filters while offline'),\n    message: i18n.t('Removing this filter while offline will remove all other filters. Do you want to remove all filters on this dashboard?'),\n    cancelLabel: i18n.t('No, cancel'),\n    confirmLabel: i18n.t('Yes, remove filters'),\n    onConfirm: removeAllFilters,\n    onCancel: closeDialog\n  })) : null;\n};\n\nFilterBar.propTypes = {\n  filters: PropTypes.array.isRequired,\n  removeAllFilters: PropTypes.func.isRequired,\n  removeFilter: PropTypes.func.isRequired\n};\nFilterBar.defaultProps = {\n  filters: []\n};\n\nconst mapStateToProps = state => ({\n  filters: sGetNamedItemFilters(state)\n});\n\nexport default connect(mapStateToProps, {\n  removeAllFilters: acClearItemFilters,\n  removeFilter: acRemoveItemFilter\n})(FilterBar);","import { useCacheableSection } from '@dhis2/app-runtime';\nimport i18n from '@dhis2/d2-i18n';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { useState, useEffect } from 'react';\nimport { Responsive as ResponsiveReactGridLayout } from 'react-grid-layout';\nimport { connect } from 'react-redux';\nimport { Item } from '../../components/Item/Item';\nimport NoContentMessage from '../../components/NoContentMessage';\nimport ProgressiveLoadingContainer from '../../components/ProgressiveLoadingContainer';\nimport { useWindowDimensions } from '../../components/WindowDimensionsProvider';\nimport { VIEW } from '../../modules/dashboardModes';\nimport { getGridItemDomElementClassName } from '../../modules/getGridItemDomElementClassName';\nimport { GRID_ROW_HEIGHT_PX, SM_SCREEN_GRID_COLUMNS, GRID_COMPACT_TYPE, GRID_PADDING_PX, MARGIN_PX, MARGIN_SM_PX, GRID_COLUMNS, getSmallLayout, getGridWidth, getProportionalHeight } from '../../modules/gridUtil';\nimport { getBreakpoint, isSmallScreen } from '../../modules/smallScreen';\nimport { sGetSelectedId, sGetSelectedDashboardItems } from '../../reducers/selected';\nimport classes from './styles/ItemGrid.module.css';\nconst EXPANDED_HEIGHT = 17;\nconst EXPANDED_HEIGHT_SM = 13;\n\nconst ResponsiveItemGrid = ({\n  dashboardId,\n  dashboardItems\n}) => {\n  const {\n    width\n  } = useWindowDimensions();\n  const [expandedItems, setExpandedItems] = useState({});\n  const [displayItems, setDisplayItems] = useState(dashboardItems);\n  const [layoutSm, setLayoutSm] = useState([]);\n  const [gridWidth, setGridWidth] = useState(0);\n  const [forceLoad, setForceLoad] = useState(false);\n  const {\n    recordingState\n  } = useCacheableSection(dashboardId);\n  useEffect(() => {\n    setLayoutSm(getItemsWithAdjustedHeight(getSmallLayout(dashboardItems, width)));\n    setDisplayItems(getItemsWithAdjustedHeight(dashboardItems));\n  }, [expandedItems, width, dashboardItems]);\n  useEffect(() => {\n    if (recordingState === 'recording') {\n      setForceLoad(true);\n    }\n  }, [recordingState]);\n\n  const onToggleItemExpanded = clickedId => {\n    const isExpanded = typeof expandedItems[clickedId] === 'boolean' ? expandedItems[clickedId] : false;\n    const newExpandedItems = { ...expandedItems\n    };\n    newExpandedItems[clickedId] = !isExpanded;\n    setExpandedItems(newExpandedItems);\n  };\n\n  const getItemsWithAdjustedHeight = items => items.map(item => {\n    const expandedItem = expandedItems[item.id];\n\n    if (expandedItem && expandedItem === true) {\n      const expandedHeight = isSmallScreen(width) ? EXPANDED_HEIGHT_SM : EXPANDED_HEIGHT;\n      return Object.assign({}, item, {\n        h: item.h + expandedHeight,\n        smallOriginalH: getProportionalHeight(item, width)\n      });\n    }\n\n    return item;\n  });\n\n  const getItemComponent = item => {\n    if (!layoutSm.length) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: item.i\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(ProgressiveLoadingContainer, {\n      key: item.i,\n      className: cx(item.type, 'view', getGridItemDomElementClassName(item.id)),\n      itemId: item.id,\n      forceLoad: forceLoad\n    }, /*#__PURE__*/React.createElement(Item, {\n      item: item,\n      gridWidth: gridWidth,\n      dashboardMode: VIEW,\n      onToggleItemExpanded: onToggleItemExpanded\n    }));\n  };\n\n  const getItemComponents = items => items.map(item => getItemComponent(item));\n\n  const onWidthChanged = containerWidth => setTimeout(() => setGridWidth(containerWidth), 200);\n\n  if (!dashboardItems.length) {\n    return /*#__PURE__*/React.createElement(NoContentMessage, {\n      text: i18n.t('There are no items on this dashboard')\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(ResponsiveReactGridLayout, {\n    className: classes.grid,\n    rowHeight: GRID_ROW_HEIGHT_PX,\n    width: getGridWidth(width),\n    cols: {\n      lg: GRID_COLUMNS,\n      sm: SM_SCREEN_GRID_COLUMNS\n    },\n    breakpoints: {\n      lg: getBreakpoint(),\n      sm: 0\n    },\n    layouts: {\n      lg: displayItems,\n      sm: layoutSm\n    },\n    compactType: GRID_COMPACT_TYPE,\n    margin: isSmallScreen(width) ? MARGIN_SM_PX : MARGIN_PX,\n    containerPadding: {\n      lg: GRID_PADDING_PX,\n      sm: GRID_PADDING_PX\n    },\n    isDraggable: false,\n    isResizable: false,\n    draggableCancel: \"input,textarea\",\n    onWidthChange: onWidthChanged\n  }, getItemComponents(displayItems));\n};\n\nResponsiveItemGrid.propTypes = {\n  dashboardId: PropTypes.string,\n  dashboardItems: PropTypes.array\n};\n\nconst mapStateToProps = state => ({\n  dashboardItems: sGetSelectedDashboardItems(state),\n  dashboardId: sGetSelectedId(state)\n});\n\nexport default connect(mapStateToProps)(ResponsiveItemGrid);","import _JSXStyle from \"styled-jsx/style\";\nimport propTypes from '@dhis2/prop-types';\nimport React from 'react';\nexport function ArrowDown({\n  className\n}) {\n  return /*#__PURE__*/React.createElement(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 12 12\",\n    className: \"jsx-2347926856\" + \" \" + (className || \"\")\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m5.29289 8.7071c.39053.3905 1.02369.3905 1.41422 0l2.99999-2.99999c.3905-.39053.3905-1.02369 0-1.41422-.3905-.39052-1.0237-.39052-1.4142 0l-2.2929 2.2929-2.29289-2.2929c-.39053-.39052-1.02369-.39052-1.41422 0-.39052.39053-.39052 1.02369 0 1.41422z\",\n    className: \"jsx-2347926856\"\n  }), /*#__PURE__*/React.createElement(_JSXStyle, {\n    id: \"2347926856\"\n  }, [\"svg.jsx-2347926856{fill:inherit;height:12px;width:12px;vertical-align:middle;pointer-events:none;}\"]));\n}\nArrowDown.propTypes = {\n  className: propTypes.string\n};\nexport function ArrowUp({\n  className\n}) {\n  return /*#__PURE__*/React.createElement(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 12 12\",\n    className: \"jsx-2347926856\" + \" \" + (className || \"\")\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m5.29289 8.7071c.39053.3905 1.02369.3905 1.41422 0l2.99999-2.99999c.3905-.39053.3905-1.02369 0-1.41422-.3905-.39052-1.0237-.39052-1.4142 0l-2.2929 2.2929-2.29289-2.2929c-.39053-.39052-1.02369-.39052-1.41422 0-.39052.39053-.39052 1.02369 0 1.41422z\",\n    transform: \"matrix(1 0 0 -1 0 12.999974)\",\n    className: \"jsx-2347926856\"\n  }), /*#__PURE__*/React.createElement(_JSXStyle, {\n    id: \"2347926856\"\n  }, [\"svg.jsx-2347926856{fill:inherit;height:12px;width:12px;vertical-align:middle;pointer-events:none;}\"]));\n}\nArrowUp.propTypes = {\n  className: propTypes.string\n};","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { Button, Layer, Popper } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport React, { useRef } from 'react';\nimport OfflineTooltip from '../OfflineTooltip';\nimport { ArrowDown, ArrowUp } from './assets/Arrow';\nimport styles from './DropdownButton.module.css';\n\nconst DropdownButton = ({\n  children,\n  open,\n  onClick,\n  disabledWhenOffline,\n  component,\n  ...rest\n}) => {\n  const anchorRef = useRef();\n  const ArrowIconComponent = open ? ArrowUp : ArrowDown;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    ref: anchorRef\n  }, /*#__PURE__*/React.createElement(OfflineTooltip, {\n    disabledWhenOffline: disabledWhenOffline\n  }, /*#__PURE__*/React.createElement(Button, _extends({\n    onClick: onClick\n  }, rest), children, /*#__PURE__*/React.createElement(ArrowIconComponent, {\n    className: styles.arrow\n  }))), open && /*#__PURE__*/React.createElement(Layer, {\n    onClick: onClick,\n    transparent: true\n  }, /*#__PURE__*/React.createElement(Popper, {\n    placement: \"bottom-start\",\n    reference: anchorRef\n  }, component)));\n};\n\nDropdownButton.propTypes = {\n  children: PropTypes.node.isRequired,\n  component: PropTypes.element.isRequired,\n  open: PropTypes.bool.isRequired,\n  onClick: PropTypes.func.isRequired,\n  disabledWhenOffline: PropTypes.bool\n};\nexport default DropdownButton;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { PeriodDimension, DynamicDimension, OrgUnitDimension, DIMENSION_ID_PERIOD, DIMENSION_ID_ORGUNIT, DAILY, WEEKLY, WEEKLYWED, WEEKLYTHU, WEEKLYSAT, WEEKLYSUN, BIWEEKLY, MONTHLY, BIMONTHLY } from '@dhis2/analytics';\nimport { useD2 } from '@dhis2/app-runtime-adapter-d2';\nimport i18n from '@dhis2/d2-i18n';\nimport { Button, Modal, ModalTitle, ModalContent, ModalActions, ButtonStrip } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { acAddItemFilter, acRemoveItemFilter } from '../../../actions/itemFilters';\nimport { useSystemSettings } from '../../../components/SystemSettingsProvider';\nimport { useUserSettings } from '../../../components/UserSettingsProvider';\nimport { sGetItemFiltersRoot } from '../../../reducers/itemFilters';\n\nconst FilterDialog = ({\n  dimension,\n  initiallySelectedItems,\n  addItemFilter,\n  removeItemFilter,\n  onClose\n}) => {\n  const [filters, setFilters] = useState(initiallySelectedItems);\n  const {\n    d2\n  } = useD2();\n  const {\n    userSettings\n  } = useUserSettings();\n  const {\n    settings: systemSettings\n  } = useSystemSettings();\n\n  const onSelectItems = ({\n    dimensionId,\n    items\n  }) => {\n    setFilters({\n      [dimensionId]: items\n    });\n  };\n\n  const onDeselectItems = ({\n    dimensionId,\n    itemIdsToRemove\n  }) => {\n    const oldList = filters[dimensionId] || [];\n    const newList = oldList.filter(item => !itemIdsToRemove.includes(item.id));\n    setFilters({ ...filters,\n      [dimensionId]: newList\n    });\n  };\n\n  const onReorderItems = ({\n    dimensionId,\n    itemIds\n  }) => {\n    const oldList = filters[dimensionId] || [];\n    const reorderedList = itemIds.map(id => oldList.find(item => item.id === id));\n    setFilters({ ...filters,\n      [dimensionId]: reorderedList\n    });\n  };\n\n  const saveFilter = () => {\n    const id = dimension.id;\n    const filterItems = filters[id];\n\n    if (filterItems && filterItems.length) {\n      addItemFilter({\n        id,\n        value: [...filterItems]\n      });\n    } else {\n      removeItemFilter(id);\n    }\n\n    onClose(id);\n  };\n\n  const getExcludedPeriodTypes = (settings = {}) => {\n    const types = [];\n\n    if (settings['hideDailyPeriods']) {\n      types.push(DAILY);\n    }\n\n    if (settings['hideWeeklyPeriods']) {\n      types.push(WEEKLY, WEEKLYWED, WEEKLYTHU, WEEKLYSAT, WEEKLYSUN);\n    }\n\n    if (settings['hideBiWeeklyPeriods']) {\n      types.push(BIWEEKLY);\n    }\n\n    if (settings['hideMonthlyPeriods']) {\n      types.push(MONTHLY);\n    }\n\n    if (settings['hideBiMonthlyPeriods']) {\n      types.push(BIMONTHLY);\n    }\n\n    return types;\n  };\n\n  const renderDialogContent = () => {\n    const commonProps = {\n      d2,\n      onSelect: onSelectItems,\n      onDeselect: onDeselectItems,\n      onReorder: onReorderItems\n    };\n    const selectedItems = filters[dimension.id] || [];\n\n    switch (dimension.id) {\n      case DIMENSION_ID_PERIOD:\n        {\n          return /*#__PURE__*/React.createElement(PeriodDimension, {\n            selectedPeriods: selectedItems,\n            onSelect: commonProps.onSelect,\n            excludedPeriodTypes: getExcludedPeriodTypes(systemSettings)\n          });\n        }\n\n      case DIMENSION_ID_ORGUNIT:\n        return /*#__PURE__*/React.createElement(OrgUnitDimension, _extends({\n          displayNameProperty: userSettings.keyAnalysisDisplayProperty,\n          ouItems: selectedItems\n        }, commonProps));\n\n      default:\n        return /*#__PURE__*/React.createElement(DynamicDimension, {\n          selectedItems: selectedItems,\n          dimensionId: dimension.id,\n          onSelect: commonProps.onSelect,\n          dimensionTitle: dimension.name,\n          displayNameProp: userSettings.keyAnalysisDisplayProperty\n        });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, dimension.id && /*#__PURE__*/React.createElement(Modal, {\n    dataTest: \"dimension-modal\",\n    onClose: onClose,\n    position: \"top\",\n    large: true\n  }, /*#__PURE__*/React.createElement(ModalTitle, null, dimension.name), /*#__PURE__*/React.createElement(ModalContent, null, renderDialogContent()), /*#__PURE__*/React.createElement(ModalActions, null, /*#__PURE__*/React.createElement(ButtonStrip, null, /*#__PURE__*/React.createElement(Button, {\n    secondary: true,\n    onClick: onClose\n  }, i18n.t('Cancel')), /*#__PURE__*/React.createElement(Button, {\n    primary: true,\n    onClick: saveFilter\n  }, i18n.t('Confirm'))))));\n};\n\nFilterDialog.propTypes = {\n  addItemFilter: PropTypes.func,\n  dimension: PropTypes.object,\n  initiallySelectedItems: PropTypes.object,\n  removeItemFilter: PropTypes.func,\n  onClose: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  initiallySelectedItems: sGetItemFiltersRoot(state)\n});\n\nexport default connect(mapStateToProps, {\n  addItemFilter: acAddItemFilter,\n  removeItemFilter: acRemoveItemFilter\n})(FilterDialog);","import { DimensionsPanel } from '@dhis2/analytics';\nimport { useOnlineStatus } from '@dhis2/app-runtime';\nimport i18n from '@dhis2/d2-i18n';\nimport { Card, colors, IconFilter24 } from '@dhis2/ui';\nimport isEmpty from 'lodash/isEmpty';\nimport PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { acClearActiveModalDimension, acSetActiveModalDimension } from '../../../actions/activeModalDimension';\nimport DropdownButton from '../../../components/DropdownButton/DropdownButton';\nimport useDimensions from '../../../modules/useDimensions';\nimport { sGetActiveModalDimension } from '../../../reducers/activeModalDimension';\nimport { sGetItemFiltersRoot } from '../../../reducers/itemFilters';\nimport FilterDialog from './FilterDialog';\nimport classes from './styles/FilterSelector.module.css';\n\nconst FilterSelector = props => {\n  var _props$allowedFilters;\n\n  const [filterDialogIsOpen, setFilterDialogIsOpen] = useState(false);\n  const dimensions = useDimensions(filterDialogIsOpen);\n  const {\n    offline\n  } = useOnlineStatus();\n\n  const toggleFilterDialogIsOpen = () => setFilterDialogIsOpen(!filterDialogIsOpen);\n\n  const onCloseDialog = () => {\n    setFilterDialogIsOpen(false);\n    props.clearActiveModalDimension();\n  };\n\n  const selectDimension = id => {\n    props.setActiveModalDimension(dimensions.find(dimension => dimension.id === id));\n  };\n\n  const filterDimensions = () => {\n    if (!props.restrictFilters) {\n      return dimensions;\n    } else {\n      return dimensions.filter(d => [...props.allowedFilters].includes(d.id));\n    }\n  };\n\n  const getFilterSelector = () => /*#__PURE__*/React.createElement(Card, {\n    dataTest: \"dashboard-filter-popover\"\n  }, /*#__PURE__*/React.createElement(DimensionsPanel, {\n    style: {\n      width: '320px'\n    },\n    dimensions: filterDimensions(),\n    onDimensionClick: selectDimension,\n    selectedIds: Object.keys(props.initiallySelectedItems)\n  }));\n\n  return props.restrictFilters && !((_props$allowedFilters = props.allowedFilters) !== null && _props$allowedFilters !== void 0 && _props$allowedFilters.length) ? null : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.buttonContainer\n  }, /*#__PURE__*/React.createElement(DropdownButton, {\n    open: filterDialogIsOpen,\n    disabled: offline,\n    onClick: toggleFilterDialogIsOpen,\n    icon: /*#__PURE__*/React.createElement(IconFilter24, {\n      color: colors.grey700\n    }),\n    component: getFilterSelector()\n  }, i18n.t('Add filter'))), !isEmpty(props.dimension) ? /*#__PURE__*/React.createElement(FilterDialog, {\n    dimension: props.dimension,\n    onClose: onCloseDialog\n  }) : null);\n};\n\nconst mapStateToProps = state => ({\n  dimension: sGetActiveModalDimension(state),\n  initiallySelectedItems: sGetItemFiltersRoot(state)\n});\n\nFilterSelector.propTypes = {\n  allowedFilters: PropTypes.array,\n  clearActiveModalDimension: PropTypes.func,\n  dimension: PropTypes.object,\n  initiallySelectedItems: PropTypes.object,\n  restrictFilters: PropTypes.bool,\n  setActiveModalDimension: PropTypes.func\n};\nexport default connect(mapStateToProps, {\n  clearActiveModalDimension: acClearActiveModalDimension,\n  setActiveModalDimension: acSetActiveModalDimension\n})(FilterSelector);","import { useOnlineStatus } from '@dhis2/app-runtime';\nimport i18n from '@dhis2/d2-i18n';\nimport { Tooltip, IconStar24, IconStarFilled24, colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport classes from './styles/StarDashboardButton.module.css';\n\nconst StarDashboardButton = ({\n  starred,\n  onClick\n}) => {\n  const {\n    online\n  } = useOnlineStatus();\n  const StarIcon = starred ? IconStarFilled24 : IconStar24;\n\n  const handleOnClick = () => {\n    online && onClick();\n  };\n\n  let tooltipContent;\n\n  if (online) {\n    if (starred) {\n      tooltipContent = i18n.t('Unstar dashboard');\n    } else {\n      tooltipContent = i18n.t('Star dashboard');\n    }\n  } else {\n    if (starred) {\n      tooltipContent = i18n.t('Cannot unstar this dashboard while offline');\n    } else {\n      tooltipContent = i18n.t('Cannot star this dashboard while offline');\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"button\", {\n    className: classes.star,\n    disabled: !online,\n    onClick: handleOnClick,\n    \"data-test\": \"button-star-dashboard\"\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    content: tooltipContent\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    \"data-test\": starred ? 'dashboard-starred' : 'dashboard-unstarred'\n  }, /*#__PURE__*/React.createElement(StarIcon, {\n    color: colors.grey600\n  }))));\n};\n\nStarDashboardButton.propTypes = {\n  starred: PropTypes.bool,\n  onClick: PropTypes.func\n};\nStarDashboardButton.defaultProps = {\n  onClick: Function.prototype\n};\nexport default StarDashboardButton;","import { useDataEngine, useAlert, useOnlineStatus, useCacheableSection } from '@dhis2/app-runtime';\nimport i18n from '@dhis2/d2-i18n';\nimport { Button, FlyoutMenu, colors, IconMore24, SharingDialog } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { acSetDashboardStarred } from '../../../actions/dashboards';\nimport { acClearItemFilters } from '../../../actions/itemFilters';\nimport { acSetShowDescription } from '../../../actions/showDescription';\nimport { apiPostShowDescription } from '../../../api/description';\nimport ConfirmActionDialog from '../../../components/ConfirmActionDialog';\nimport DropdownButton from '../../../components/DropdownButton/DropdownButton';\nimport MenuItem from '../../../components/MenuItemWithTooltip';\nimport OfflineTooltip from '../../../components/OfflineTooltip';\nimport { orObject } from '../../../modules/util';\nimport { sGetDashboardStarred } from '../../../reducers/dashboards';\nimport { sGetNamedItemFilters } from '../../../reducers/itemFilters';\nimport { sGetSelected } from '../../../reducers/selected';\nimport { sGetShowDescription } from '../../../reducers/showDescription';\nimport { apiStarDashboard } from './apiStarDashboard';\nimport FilterSelector from './FilterSelector';\nimport StarDashboardButton from './StarDashboardButton';\nimport classes from './styles/ActionsBar.module.css';\n\nconst ViewActions = ({\n  id,\n  access,\n  showDescription,\n  starred,\n  setDashboardStarred,\n  updateShowDescription,\n  removeAllFilters,\n  restrictFilters,\n  allowedFilters,\n  filtersLength\n}) => {\n  const [moreOptionsSmallIsOpen, setMoreOptionsSmallIsOpen] = useState(false);\n  const [moreOptionsIsOpen, setMoreOptionsIsOpen] = useState(false);\n  const [sharingDialogIsOpen, setSharingDialogIsOpen] = useState(false);\n  const [confirmCacheDialogIsOpen, setConfirmCacheDialogIsOpen] = useState(false);\n  const [redirectUrl, setRedirectUrl] = useState(null);\n  const dataEngine = useDataEngine();\n  const {\n    offline\n  } = useOnlineStatus();\n  const {\n    lastUpdated,\n    isCached,\n    startRecording,\n    remove\n  } = useCacheableSection(id);\n  const warningAlert = useAlert(({\n    msg\n  }) => msg, {\n    warning: true\n  });\n\n  const toggleMoreOptions = small => small ? setMoreOptionsSmallIsOpen(!moreOptionsSmallIsOpen) : setMoreOptionsIsOpen(!moreOptionsIsOpen);\n\n  if (redirectUrl) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: redirectUrl\n    });\n  }\n\n  const onCacheDashboardConfirmed = () => {\n    setConfirmCacheDialogIsOpen(false);\n    removeAllFilters();\n    startRecording({});\n  };\n\n  const onToggleOfflineStatus = () => {\n    toggleMoreOptions();\n\n    if (lastUpdated) {\n      return remove();\n    }\n\n    return filtersLength ? setConfirmCacheDialogIsOpen(true) : startRecording({});\n  };\n\n  const onUpdateOfflineCache = () => {\n    toggleMoreOptions();\n    return filtersLength ? setConfirmCacheDialogIsOpen(true) : startRecording({});\n  };\n\n  const onToggleShowDescription = () => apiPostShowDescription(!showDescription).then(() => {\n    updateShowDescription(!showDescription);\n    toggleMoreOptions();\n  }).catch(() => {\n    const msg = showDescription ? i18n.t('Failed to hide description') : i18n.t('Failed to show description');\n    warningAlert.show({\n      msg\n    });\n  });\n\n  const onToggleStarredDashboard = () => apiStarDashboard(dataEngine, id, !starred).then(() => {\n    setDashboardStarred(id, !starred);\n\n    if (moreOptionsIsOpen) {\n      toggleMoreOptions();\n    }\n  }).catch(() => {\n    const msg = starred ? i18n.t('Failed to unstar the dashboard') : i18n.t('Failed to star the dashboard');\n    warningAlert.show({\n      msg\n    });\n  });\n\n  const onToggleSharingDialog = () => setSharingDialogIsOpen(!sharingDialogIsOpen);\n\n  const userAccess = orObject(access);\n\n  const getMoreMenu = () => /*#__PURE__*/React.createElement(FlyoutMenu, null, /*#__PURE__*/React.createElement(MenuItem, {\n    dense: true,\n    disabled: offline,\n    label: lastUpdated ? i18n.t('Remove from offline storage') : i18n.t('Make available offline'),\n    onClick: onToggleOfflineStatus\n  }), lastUpdated && /*#__PURE__*/React.createElement(MenuItem, {\n    dense: true,\n    label: i18n.t('Sync offline data now'),\n    disabled: offline,\n    onClick: onUpdateOfflineCache\n  }), /*#__PURE__*/React.createElement(MenuItem, {\n    dense: true,\n    disabled: offline,\n    label: starred ? i18n.t('Unstar dashboard') : i18n.t('Star dashboard'),\n    onClick: onToggleStarredDashboard\n  }), /*#__PURE__*/React.createElement(MenuItem, {\n    dense: true,\n    disabled: offline,\n    label: showDescription ? i18n.t('Hide description') : i18n.t('Show description'),\n    onClick: onToggleShowDescription\n  }), /*#__PURE__*/React.createElement(MenuItem, {\n    dense: true,\n    disabled: offline && !isCached,\n    label: i18n.t('Print'),\n    dataTest: \"print-menu-item\"\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    dense: true,\n    label: i18n.t('Dashboard layout'),\n    onClick: () => setRedirectUrl(`${id}/printlayout`),\n    dataTest: \"print-layout-menu-item\"\n  }), /*#__PURE__*/React.createElement(MenuItem, {\n    dense: true,\n    label: i18n.t('One item per page'),\n    onClick: () => setRedirectUrl(`${id}/printoipp`),\n    dataTest: \"print-oipp-menu-item\"\n  })));\n\n  const getMoreButton = (className, useSmall) => /*#__PURE__*/React.createElement(DropdownButton, {\n    className: className,\n    small: useSmall,\n    open: useSmall ? moreOptionsSmallIsOpen : moreOptionsIsOpen,\n    disabledWhenOffline: false,\n    onClick: () => toggleMoreOptions(useSmall),\n    icon: /*#__PURE__*/React.createElement(IconMore24, {\n      color: colors.grey700\n    }),\n    component: getMoreMenu()\n  }, i18n.t('More'));\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.actions\n  }, /*#__PURE__*/React.createElement(StarDashboardButton, {\n    starred: starred,\n    onClick: onToggleStarredDashboard\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.strip\n  }, userAccess.update ? /*#__PURE__*/React.createElement(OfflineTooltip, null, /*#__PURE__*/React.createElement(Button, {\n    disabled: offline,\n    className: classes.editButton,\n    onClick: () => setRedirectUrl(`${id}/edit`)\n  }, i18n.t('Edit'))) : null, userAccess.manage ? /*#__PURE__*/React.createElement(OfflineTooltip, null, /*#__PURE__*/React.createElement(Button, {\n    disabled: offline,\n    className: classes.shareButton,\n    onClick: onToggleSharingDialog\n  }, i18n.t('Share'))) : null, /*#__PURE__*/React.createElement(FilterSelector, {\n    allowedFilters: allowedFilters,\n    restrictFilters: restrictFilters\n  }), getMoreButton(classes.moreButton, false), getMoreButton(classes.moreButtonSmall, true))), id && sharingDialogIsOpen && /*#__PURE__*/React.createElement(SharingDialog, {\n    id: id,\n    type: \"dashboard\",\n    onClose: onToggleSharingDialog\n  }), /*#__PURE__*/React.createElement(ConfirmActionDialog, {\n    title: i18n.t('Clear dashboard filters?'),\n    message: i18n.t(\"A dashboard's filters can’t be saved offline. Do you want to remove the filters and make this dashboard available offline?\"),\n    cancelLabel: i18n.t('No, cancel'),\n    confirmLabel: i18n.t('Yes, clear filters and sync'),\n    onConfirm: onCacheDashboardConfirmed,\n    onCancel: () => setConfirmCacheDialogIsOpen(false),\n    open: confirmCacheDialogIsOpen\n  }));\n};\n\nViewActions.propTypes = {\n  access: PropTypes.object,\n  allowedFilters: PropTypes.array,\n  filtersLength: PropTypes.number,\n  id: PropTypes.string,\n  removeAllFilters: PropTypes.func,\n  restrictFilters: PropTypes.bool,\n  setDashboardStarred: PropTypes.func,\n  showDescription: PropTypes.bool,\n  starred: PropTypes.bool,\n  updateShowDescription: PropTypes.func\n};\n\nconst mapStateToProps = state => {\n  const dashboard = sGetSelected(state);\n  return { ...dashboard,\n    filtersLength: sGetNamedItemFilters(state).length,\n    starred: dashboard.id ? sGetDashboardStarred(state, dashboard.id) : false,\n    showDescription: sGetShowDescription(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setDashboardStarred: acSetDashboardStarred,\n  removeAllFilters: acClearItemFilters,\n  updateShowDescription: acSetShowDescription\n})(ViewActions);","const getStarDashboardMutation = id => ({\n  type: 'create',\n  resource: `dashboards/${id}/favorite`\n});\n\nconst getUnstarDashboardMutation = id => ({\n  type: 'delete',\n  resource: `dashboards/${id}/favorite`\n});\n\nexport const apiStarDashboard = (dataEngine, id, isStarred) => {\n  const mutation = isStarred ? getStarDashboardMutation(id) : getUnstarDashboardMutation(id);\n  return dataEngine.mutate(mutation);\n};","import i18n from '@dhis2/d2-i18n';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport classes from './styles/Description.module.css';\n\nconst Description = ({\n  description\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  className: cx(classes.descContainer, description ? classes.desc : classes.noDesc),\n  \"data-test\": \"dashboard-description\"\n}, description || i18n.t('No description'));\n\nDescription.propTypes = {\n  description: PropTypes.string\n};\nexport default Description;","import { useCacheableSection } from '@dhis2/app-runtime';\nimport i18n from '@dhis2/d2-i18n';\nimport { Tag, Tooltip } from '@dhis2/ui';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport classes from './styles/LastUpdatedTag.module.css';\n\nconst LastUpdatedTag = ({\n  id\n}) => {\n  const {\n    lastUpdated\n  } = useCacheableSection(id);\n  return lastUpdated !== null && lastUpdated !== void 0 && lastUpdated.toString ? /*#__PURE__*/React.createElement(Tooltip, {\n    content: /*#__PURE__*/React.createElement(\"span\", null, moment(lastUpdated).format('llll')),\n    openDelay: 200,\n    closeDelay: 100\n  }, /*#__PURE__*/React.createElement(Tag, {\n    className: classes.lastUpdatedTag,\n    maxWidth: \"400px\"\n  }, i18n.t('Offline data last updated {{time}}', {\n    time: moment(lastUpdated).fromNow()\n  }))) : null;\n};\n\nLastUpdatedTag.propTypes = {\n  id: PropTypes.string\n};\nexport default LastUpdatedTag;","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { sGetSelected } from '../../../reducers/selected';\nimport { sGetShowDescription } from '../../../reducers/showDescription';\nimport ActionsBar from './ActionsBar';\nimport Description from './Description';\nimport LastUpdatedTag from './LastUpdatedTag';\nimport classes from './styles/TitleBar.module.css';\n\nconst ViewTitleBar = ({\n  id,\n  displayName,\n  displayDescription,\n  showDescription\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.container\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.titleBar,\n    \"data-test\": \"title-bar\"\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.title,\n    \"data-test\": \"view-dashboard-title\"\n  }, displayName), /*#__PURE__*/React.createElement(ActionsBar, null)), showDescription && /*#__PURE__*/React.createElement(Description, {\n    description: displayDescription\n  }), /*#__PURE__*/React.createElement(LastUpdatedTag, {\n    id: id\n  }));\n};\n\nViewTitleBar.propTypes = {\n  displayDescription: PropTypes.string,\n  displayName: PropTypes.string,\n  id: PropTypes.string,\n  showDescription: PropTypes.bool\n};\n\nconst mapStateToProps = state => {\n  const dashboard = sGetSelected(state);\n  return { ...dashboard,\n    showDescription: sGetShowDescription(state)\n  };\n};\n\nexport default connect(mapStateToProps)(ViewTitleBar);","import { useOnlineStatus, useCacheableSection } from '@dhis2/app-runtime';\nimport i18n from '@dhis2/d2-i18n';\nimport { AlertStack, AlertBar } from '@dhis2/ui';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { acClearEditDashboard } from '../../actions/editDashboard';\nimport { acSetPassiveViewRegistered } from '../../actions/passiveViewRegistered';\nimport { acClearPrintDashboard } from '../../actions/printDashboard';\nimport { tSetSelectedDashboardById, tSetSelectedDashboardByIdOffline } from '../../actions/selected';\nimport { apiPostDataStatistics } from '../../api/dataStatistics';\nimport DashboardContainer from '../../components/DashboardContainer';\nimport LoadingMask from '../../components/LoadingMask';\nimport Notice from '../../components/Notice';\nimport { setHeaderbarVisible } from '../../modules/setHeaderbarVisible';\nimport { sGetDashboardById } from '../../reducers/dashboards';\nimport { sGetPassiveViewRegistered } from '../../reducers/passiveViewRegistered';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport DashboardsBar from './DashboardsBar/DashboardsBar';\nimport FilterBar from './FilterBar/FilterBar';\nimport ItemGrid from './ItemGrid';\nimport classes from './styles/ViewDashboard.module.css';\nimport TitleBar from './TitleBar/TitleBar';\n\nconst ViewDashboard = props => {\n  const [controlbarExpanded, setControlbarExpanded] = useState(false);\n  const [loadingMessage, setLoadingMessage] = useState(null);\n  const [loaded, setLoaded] = useState(false);\n  const [loadFailed, setLoadFailed] = useState(false);\n  const {\n    online\n  } = useOnlineStatus();\n  const {\n    isCached,\n    recordingState\n  } = useCacheableSection(props.requestedId);\n  useEffect(() => {\n    setHeaderbarVisible(true);\n    props.clearEditDashboard();\n    props.clearPrintDashboard();\n  }, []);\n  useEffect(() => {\n    setLoaded(false);\n    Array.from(document.getElementsByClassName('dashboard-scroll-container')).forEach(container => {\n      container.scroll(0, 0);\n    });\n  }, [props.requestedId]);\n  useEffect(() => {\n    if (!props.passiveViewRegistered && online) {\n      apiPostDataStatistics('PASSIVE_DASHBOARD_VIEW', props.requestedId).then(() => {\n        props.registerPassiveView();\n      }).catch(error => console.info(error));\n    }\n  }, [props.passiveViewRegistered]);\n  useEffect(() => {\n    const loadDashboard = async () => {\n      const alertTimeout = setTimeout(() => {\n        if (props.requestedDashboardName) {\n          setLoadingMessage(i18n.t('Loading dashboard – {{name}}', {\n            name: props.requestedDashboardName\n          }));\n        } else {\n          setLoadingMessage(i18n.t('Loading dashboard'));\n        }\n      }, 500);\n\n      try {\n        setLoaded(true);\n        await props.fetchDashboard(props.requestedId, props.username);\n        setLoadFailed(false);\n        setLoadingMessage(null);\n        clearTimeout(alertTimeout);\n      } catch (e) {\n        setLoaded(false);\n        setLoadFailed(true);\n        setLoadingMessage(null);\n        clearTimeout(alertTimeout);\n        props.setSelectedAsOffline(props.requestedId, props.username);\n      }\n    };\n\n    const requestedIsAvailable = online || isCached;\n    const switchingDashboard = props.requestedId !== props.currentId;\n\n    if (requestedIsAvailable && (recordingState === 'recording' || !loaded)) {\n      loadDashboard();\n    } else if (!requestedIsAvailable && switchingDashboard) {\n      setLoaded(false);\n      props.setSelectedAsOffline(props.requestedId, props.username);\n    }\n  }, [props.requestedId, props.currentId, loaded, recordingState, online]);\n\n  const onExpandedChanged = expanded => setControlbarExpanded(expanded);\n\n  const getContent = () => {\n    if (!online && !isCached && (props.requestedId !== props.currentId || !loaded)) {\n      return /*#__PURE__*/React.createElement(Notice, {\n        title: i18n.t('Offline'),\n        message: i18n.t('This dashboard cannot be loaded while offline.')\n      });\n    }\n\n    if (loadFailed) {\n      return /*#__PURE__*/React.createElement(Notice, {\n        title: i18n.t('Load dashboard failed'),\n        message: i18n.t('This dashboard could not be loaded. Please try again later.')\n      });\n    }\n\n    return props.requestedId !== props.currentId ? /*#__PURE__*/React.createElement(LoadingMask, null) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TitleBar, null), /*#__PURE__*/React.createElement(FilterBar, null), /*#__PURE__*/React.createElement(ItemGrid, null));\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: cx(classes.container, 'dashboard-scroll-container'),\n    \"data-test\": \"outer-scroll-container\"\n  }, /*#__PURE__*/React.createElement(DashboardsBar, {\n    expanded: controlbarExpanded,\n    onExpandedChanged: onExpandedChanged\n  }), /*#__PURE__*/React.createElement(DashboardContainer, {\n    covered: controlbarExpanded\n  }, controlbarExpanded && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.cover,\n    onClick: () => setControlbarExpanded(false)\n  }), getContent())), /*#__PURE__*/React.createElement(AlertStack, null, loadingMessage && /*#__PURE__*/React.createElement(AlertBar, {\n    onHidden: () => setLoadingMessage(null),\n    permanent: true\n  }, loadingMessage)));\n};\n\nViewDashboard.propTypes = {\n  clearEditDashboard: PropTypes.func,\n  clearPrintDashboard: PropTypes.func,\n  currentId: PropTypes.string,\n  fetchDashboard: PropTypes.func,\n  passiveViewRegistered: PropTypes.bool,\n  registerPassiveView: PropTypes.func,\n  requestedDashboardName: PropTypes.string,\n  requestedId: PropTypes.string,\n  setSelectedAsOffline: PropTypes.func,\n  username: PropTypes.string\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const dashboard = sGetDashboardById(state, ownProps.requestedId) || {};\n  return {\n    passiveViewRegistered: sGetPassiveViewRegistered(state),\n    requestedDashboardName: dashboard.displayName || null,\n    currentId: sGetSelectedId(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  clearEditDashboard: acClearEditDashboard,\n  clearPrintDashboard: acClearPrintDashboard,\n  registerPassiveView: acSetPassiveViewRegistered,\n  fetchDashboard: tSetSelectedDashboardById,\n  setSelectedAsOffline: tSetSelectedDashboardByIdOffline\n})(ViewDashboard);","import { REGISTER_PASSIVE_VIEW } from '../reducers/passiveViewRegistered';\nexport const acSetPassiveViewRegistered = () => ({\n  type: REGISTER_PASSIVE_VIEW\n});","import { CacheableSection } from '@dhis2/app-runtime';\nimport i18n from '@dhis2/d2-i18n';\nimport isEmpty from 'lodash/isEmpty';\nimport PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport LoadingMask from '../../components/LoadingMask';\nimport NoContentMessage from '../../components/NoContentMessage';\nimport { getPreferredDashboardId } from '../../modules/localStorage';\nimport { sDashboardsIsFetching, sGetDashboardById, sGetDashboardsSortedByStarred } from '../../reducers/dashboards';\nimport DashboardsBar from './DashboardsBar/DashboardsBar';\nimport ViewDashboard from './ViewDashboard';\n\nconst CacheableViewDashboard = ({\n  id,\n  dashboardsLoaded,\n  dashboardsIsEmpty,\n  username\n}) => {\n  const [dashboardsBarExpanded, setDashboardsBarExpanded] = useState(false);\n\n  if (!dashboardsLoaded) {\n    return /*#__PURE__*/React.createElement(LoadingMask, null);\n  }\n\n  if (dashboardsIsEmpty || id === null) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DashboardsBar, {\n      expanded: dashboardsBarExpanded,\n      onExpandedChanged: expanded => setDashboardsBarExpanded(expanded)\n    }), /*#__PURE__*/React.createElement(NoContentMessage, {\n      text: dashboardsIsEmpty ? i18n.t('No dashboards found. Use the + button to create a new dashboard.') : i18n.t('Requested dashboard not found')\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(CacheableSection, {\n    id: id,\n    loadingMask: /*#__PURE__*/React.createElement(LoadingMask, null)\n  }, /*#__PURE__*/React.createElement(ViewDashboard, {\n    key: id,\n    requestedId: id,\n    username: username\n  }));\n};\n\nCacheableViewDashboard.propTypes = {\n  dashboardsIsEmpty: PropTypes.bool,\n  dashboardsLoaded: PropTypes.bool,\n  id: PropTypes.string,\n  username: PropTypes.string\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  var _ownProps$match, _ownProps$match$param, _dashboardToSelect;\n\n  const dashboards = sGetDashboardsSortedByStarred(state); // match is provided by the react-router-dom\n\n  const routeId = ((_ownProps$match = ownProps.match) === null || _ownProps$match === void 0 ? void 0 : (_ownProps$match$param = _ownProps$match.params) === null || _ownProps$match$param === void 0 ? void 0 : _ownProps$match$param.dashboardId) || null;\n  let dashboardToSelect = null;\n\n  if (routeId) {\n    dashboardToSelect = sGetDashboardById(state, routeId) || null;\n  } else {\n    const lastStoredDashboardId = getPreferredDashboardId(ownProps.username);\n    const dash = sGetDashboardById(state, lastStoredDashboardId);\n    dashboardToSelect = lastStoredDashboardId && dash ? dash : dashboards[0];\n  }\n\n  return {\n    dashboardsIsEmpty: isEmpty(dashboards),\n    dashboardsLoaded: !sDashboardsIsFetching(state),\n    id: ((_dashboardToSelect = dashboardToSelect) === null || _dashboardToSelect === void 0 ? void 0 : _dashboardToSelect.id) || null\n  };\n};\n\nexport default connect(mapStateToProps, null)(CacheableViewDashboard);","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { useD2 } from '@dhis2/app-runtime-adapter-d2';\nimport { CssVariables } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { tSetControlBarRows } from '../actions/controlBar';\nimport { tFetchDashboards } from '../actions/dashboards';\nimport { tSetShowDescription } from '../actions/showDescription';\nimport { NewDashboard, EditDashboard } from '../pages/edit';\nimport { PrintDashboard, PrintLayoutDashboard } from '../pages/print';\nimport { ViewDashboard } from '../pages/view';\nimport './styles/App.css';\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\nimport './styles/ItemGrid.css';\n\nconst App = props => {\n  const {\n    d2\n  } = useD2();\n  useEffect(() => {\n    props.fetchDashboards();\n    props.setControlBarRows();\n    props.setShowDescription(); // store the headerbar height for controlbar height calculations\n\n    const headerbarHeight = document.querySelector('header').getBoundingClientRect().height;\n    document.documentElement.style.setProperty('--headerbar-height', `${headerbarHeight}px`);\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CssVariables, {\n    colors: true,\n    spacers: true\n  }), /*#__PURE__*/React.createElement(Router, null, /*#__PURE__*/React.createElement(Switch, null, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    render: props => /*#__PURE__*/React.createElement(ViewDashboard, _extends({\n      username: d2.currentUser.username\n    }, props))\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/new\",\n    render: props => /*#__PURE__*/React.createElement(NewDashboard, props)\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/:dashboardId\",\n    render: props => /*#__PURE__*/React.createElement(ViewDashboard, _extends({\n      username: d2.currentUser.username\n    }, props))\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/:dashboardId/edit\",\n    render: props => /*#__PURE__*/React.createElement(EditDashboard, props)\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/:dashboardId/printoipp\",\n    render: props => /*#__PURE__*/React.createElement(PrintDashboard, props)\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/:dashboardId/printlayout\",\n    render: props => /*#__PURE__*/React.createElement(PrintLayoutDashboard, props)\n  }))));\n};\n\nApp.propTypes = {\n  fetchDashboards: PropTypes.func,\n  setControlBarRows: PropTypes.func,\n  setShowDescription: PropTypes.func\n};\nconst mapDispatchToProps = {\n  fetchDashboards: tFetchDashboards,\n  setControlBarRows: tSetControlBarRows,\n  setShowDescription: tSetShowDescription\n};\nexport default connect(null, mapDispatchToProps)(App);","import { combineReducers } from 'redux';\nimport activeModalDimension from './activeModalDimension';\nimport controlBar from './controlBar';\nimport dashboards from './dashboards';\nimport dashboardsFilter from './dashboardsFilter';\nimport dimensions from './dimensions';\nimport editDashboard from './editDashboard';\nimport itemActiveTypes from './itemActiveTypes';\nimport itemFilters from './itemFilters';\nimport messages from './messages';\nimport passiveViewRegistered from './passiveViewRegistered';\nimport printDashboard from './printDashboard';\nimport selected from './selected';\nimport showDescription from './showDescription';\nimport visualizations from './visualizations';\nexport default combineReducers({\n  dashboards,\n  selected,\n  dashboardsFilter,\n  controlBar,\n  visualizations,\n  messages,\n  editDashboard,\n  printDashboard,\n  itemFilters,\n  dimensions,\n  activeModalDimension,\n  passiveViewRegistered,\n  showDescription,\n  itemActiveTypes\n});","import { createStore, applyMiddleware, compose } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport reducer from './reducers';\n\nconst configureStore = dataEngine => {\n  const middleware = [thunk.withExtraArgument(dataEngine)]; // Enable Redux devtools if extension is installed instead of redux-logger\n\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n  if (!window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ && process.env.NODE_ENV !== 'production') {\n    middleware.push(createLogger());\n  }\n\n  return createStore(reducer, composeEnhancers(applyMiddleware(...middleware)));\n};\n\nexport default configureStore;","//------------------------------------------------------------------------------\n// <auto-generated>\n// This code was generated by d2-i18n-generate.\n//\n// Changes to this file may cause incorrect behavior and will be lost if\n// the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\nimport i18n from '@dhis2/d2-i18n';\nimport arTranslations from './ar/translations.json';\nimport ar_IQTranslations from './ar_IQ/translations.json';\nimport ckbTranslations from './ckb/translations.json';\nimport csTranslations from './cs/translations.json';\nimport daTranslations from './da/translations.json';\nimport enTranslations from './en/translations.json';\nimport esTranslations from './es/translations.json';\nimport frTranslations from './fr/translations.json';\nimport idTranslations from './id/translations.json';\nimport kmTranslations from './km/translations.json';\nimport loTranslations from './lo/translations.json';\nimport myTranslations from './my/translations.json';\nimport nbTranslations from './nb/translations.json';\nimport prsTranslations from './prs/translations.json';\nimport psTranslations from './ps/translations.json';\nimport ptTranslations from './pt/translations.json';\nimport pt_BRTranslations from './pt_BR/translations.json';\nimport ruTranslations from './ru/translations.json';\nimport svTranslations from './sv/translations.json';\nimport tetTranslations from './tet/translations.json';\nimport tgTranslations from './tg/translations.json';\nimport ukTranslations from './uk/translations.json';\nimport urTranslations from './ur/translations.json';\nimport uzTranslations from './uz/translations.json';\nimport uz_CyrlTranslations from './uz_Cyrl/translations.json';\nimport uz_LatnTranslations from './uz_Latn/translations.json';\nimport viTranslations from './vi/translations.json';\nimport zhTranslations from './zh/translations.json';\nimport zh_CNTranslations from './zh_CN/translations.json';\nconst namespace = 'default';\ni18n.addResources('ar', namespace, arTranslations);\ni18n.addResources('ar_IQ', namespace, ar_IQTranslations);\ni18n.addResources('ckb', namespace, ckbTranslations);\ni18n.addResources('cs', namespace, csTranslations);\ni18n.addResources('da', namespace, daTranslations);\ni18n.addResources('en', namespace, enTranslations);\ni18n.addResources('es', namespace, esTranslations);\ni18n.addResources('fr', namespace, frTranslations);\ni18n.addResources('id', namespace, idTranslations);\ni18n.addResources('km', namespace, kmTranslations);\ni18n.addResources('lo', namespace, loTranslations);\ni18n.addResources('my', namespace, myTranslations);\ni18n.addResources('nb', namespace, nbTranslations);\ni18n.addResources('prs', namespace, prsTranslations);\ni18n.addResources('ps', namespace, psTranslations);\ni18n.addResources('pt', namespace, ptTranslations);\ni18n.addResources('pt_BR', namespace, pt_BRTranslations);\ni18n.addResources('ru', namespace, ruTranslations);\ni18n.addResources('sv', namespace, svTranslations);\ni18n.addResources('tet', namespace, tetTranslations);\ni18n.addResources('tg', namespace, tgTranslations);\ni18n.addResources('uk', namespace, ukTranslations);\ni18n.addResources('ur', namespace, urTranslations);\ni18n.addResources('uz', namespace, uzTranslations);\ni18n.addResources('uz_Cyrl', namespace, uz_CyrlTranslations);\ni18n.addResources('uz_Latn', namespace, uz_LatnTranslations);\ni18n.addResources('vi', namespace, viTranslations);\ni18n.addResources('zh', namespace, zhTranslations);\ni18n.addResources('zh_CN', namespace, zh_CNTranslations);\nexport default i18n;","import { useDataEngine } from '@dhis2/app-runtime';\nimport { D2Shim } from '@dhis2/app-runtime-adapter-d2';\nimport React from 'react';\nimport { Provider as ReduxProvider } from 'react-redux';\nimport App from './components/App';\nimport SystemSettingsProvider from './components/SystemSettingsProvider';\nimport UserSettingsProvider from './components/UserSettingsProvider';\nimport WindowDimensionsProvider from './components/WindowDimensionsProvider';\nimport configureStore from './configureStore';\nimport './locales';\nconst d2Config = {\n  schemas: ['visualization', 'map', 'report', 'eventChart', 'eventReport', 'dashboard', 'organisationUnit', 'userGroup']\n}; // TODO: ER and EV plugins require the auth header in development mode.\n// Remove this when these plugins are rewritten\n\nconst authorization = process.env.REACT_APP_DHIS2_AUTHORIZATION || null;\n\nif (authorization) {\n  d2Config.headers = {\n    Authorization: authorization\n  };\n}\n\nconst AppWrapper = () => {\n  const dataEngine = useDataEngine();\n  return /*#__PURE__*/React.createElement(ReduxProvider, {\n    store: configureStore(dataEngine)\n  }, /*#__PURE__*/React.createElement(D2Shim, {\n    d2Config: d2Config,\n    i18nRoot: \"./i18n\"\n  }, ({\n    d2\n  }) => {\n    if (!d2) {\n      // TODO: Handle errors in d2 initialization\n      return null;\n    }\n\n    return /*#__PURE__*/React.createElement(SystemSettingsProvider, null, /*#__PURE__*/React.createElement(UserSettingsProvider, null, /*#__PURE__*/React.createElement(WindowDimensionsProvider, null, /*#__PURE__*/React.createElement(App, null))));\n  }));\n};\n\nexport default AppWrapper;","import { VIS_TYPE_PIVOT_TABLE } from '@dhis2/analytics';\nimport i18n from '@dhis2/d2-i18n';\nimport { IconApps24, IconEmptyFrame24, IconFileDocument24, IconLink24, IconMail24, IconQuestion24, IconTable24, IconTextBox24, IconUser24, IconVisualizationColumn24, IconWorld24 } from '@dhis2/ui'; // Item types\n\nexport const VISUALIZATION = 'VISUALIZATION';\nexport const REPORT_TABLE = 'REPORT_TABLE';\nexport const CHART = 'CHART';\nexport const MAP = 'MAP';\nexport const EVENT_REPORT = 'EVENT_REPORT';\nexport const EVENT_CHART = 'EVENT_CHART';\nexport const APP = 'APP';\nexport const REPORTS = 'REPORTS';\nexport const RESOURCES = 'RESOURCES';\nexport const USERS = 'USERS';\nexport const MESSAGES = 'MESSAGES';\nexport const TEXT = 'TEXT';\nexport const SPACER = 'SPACER';\nexport const PAGEBREAK = 'PAGEBREAK';\nexport const PRINT_TITLE_PAGE = 'PRINT_TITLE_PAGE';\nconst DOMAIN_TYPE_AGGREGATE = 'AGGREGATE';\nconst DOMAIN_TYPE_TRACKER = 'TRACKER'; // Dashboard helpers\n\nexport const isVisualizationType = item => {\n  var _itemTypeMap$item$typ;\n\n  return !!((_itemTypeMap$item$typ = itemTypeMap[item.type]) !== null && _itemTypeMap$item$typ !== void 0 && _itemTypeMap$item$typ.isVisualizationType);\n};\nexport const hasMapView = itemType => itemTypeMap[itemType].domainType === DOMAIN_TYPE_AGGREGATE;\nexport const isTrackerDomainType = itemType => itemTypeMap[itemType].domainType === DOMAIN_TYPE_TRACKER;\nexport const getDefaultItemCount = itemType => itemTypeMap[itemType].defaultItemCount || 5;\nexport const getAppName = itemType => itemTypeMap[itemType].appName || '';\nexport const getItemTypeForVis = item => {\n  if (item.type === VISUALIZATION) {\n    if (item.visualization.type === VIS_TYPE_PIVOT_TABLE) {\n      return REPORT_TABLE;\n    } else {\n      return CHART;\n    }\n  }\n\n  return item.type;\n}; // Item type map\n\nexport const itemTypeMap = {\n  [VISUALIZATION]: {\n    id: VISUALIZATION,\n    endPointName: 'visualizations',\n    dataStatisticsName: 'VISUALIZATION_VIEW',\n    propName: 'visualization',\n    pluralTitle: i18n.t('Visualizations'),\n    domainType: DOMAIN_TYPE_AGGREGATE,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n    appName: 'Data Visualizer',\n    defaultItemCount: 10\n  },\n  [REPORT_TABLE]: {\n    id: REPORT_TABLE,\n    endPointName: 'visualizations',\n    dataStatisticsName: 'REPORT_TABLE_VIEW',\n    propName: 'visualization',\n    pluralTitle: i18n.t('Pivot tables'),\n    domainType: DOMAIN_TYPE_AGGREGATE,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n    appName: 'Data Visualizer'\n  },\n  [CHART]: {\n    id: CHART,\n    endPointName: 'visualizations',\n    propName: 'visualization',\n    dataStatisticsName: 'CHART_VIEW',\n    pluralTitle: i18n.t('Charts'),\n    domainType: DOMAIN_TYPE_AGGREGATE,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n    appName: 'Data Visualizer'\n  },\n  [MAP]: {\n    id: MAP,\n    endPointName: 'maps',\n    dataStatisticsName: 'MAP_VIEW',\n    propName: 'map',\n    pluralTitle: i18n.t('Maps'),\n    domainType: DOMAIN_TYPE_AGGREGATE,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-maps/?id=${id}`,\n    appName: 'Maps'\n  },\n  [EVENT_REPORT]: {\n    id: EVENT_REPORT,\n    endPointName: 'eventReports',\n    propName: 'eventReport',\n    pluralTitle: i18n.t('Event reports'),\n    domainType: DOMAIN_TYPE_TRACKER,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-event-reports/?id=${id}`,\n    appName: 'Event Reports'\n  },\n  [EVENT_CHART]: {\n    id: EVENT_CHART,\n    endPointName: 'eventCharts',\n    propName: 'eventChart',\n    pluralTitle: i18n.t('Event charts'),\n    domainType: DOMAIN_TYPE_TRACKER,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-event-visualizer/?id=${id}`,\n    appName: 'Event Visualizer'\n  },\n  [APP]: {\n    endPointName: 'apps',\n    propName: 'appKey',\n    pluralTitle: i18n.t('Apps')\n  },\n  [REPORTS]: {\n    id: REPORTS,\n    endPointName: 'reports',\n    propName: 'reports',\n    pluralTitle: i18n.t('Reports'),\n    appUrl: (id, type) => {\n      switch (type) {\n        case 'HTML':\n          return `dhis-web-reports/#/standard-report/view/${id}`;\n\n        case 'JASPER_REPORT_TABLE':\n        case 'JASPER_JDBC':\n        default:\n          return `api/reports/${id}/data.pdf?t=${new Date().getTime()}`;\n      }\n    }\n  },\n  [RESOURCES]: {\n    id: RESOURCES,\n    endPointName: 'resources',\n    propName: 'resources',\n    pluralTitle: i18n.t('Resources'),\n    appUrl: id => `api/documents/${id}/data`\n  },\n  [USERS]: {\n    id: USERS,\n    endPointName: 'users',\n    propName: 'users',\n    pluralTitle: i18n.t('Users'),\n    appUrl: id => `dhis-web-dashboard-integration/profile.action?id=${id}`\n  },\n  [TEXT]: {\n    id: TEXT,\n    propName: 'text'\n  },\n  [MESSAGES]: {\n    propName: 'messages'\n  },\n  [SPACER]: {\n    propName: 'text'\n  },\n  [PAGEBREAK]: {\n    propName: 'text'\n  },\n  [PRINT_TITLE_PAGE]: {\n    propName: 'text'\n  }\n};\nexport const getEndPointName = type => itemTypeMap[type].endPointName;\nexport const getDataStatisticsName = type => itemTypeMap[type].dataStatisticsName || null;\nexport const getItemUrl = (type, item, baseUrl) => {\n  let url;\n\n  if (type === APP) {\n    url = item.launchUrl;\n  }\n\n  if (itemTypeMap[type] && itemTypeMap[type].appUrl) {\n    url = `${baseUrl}/${itemTypeMap[type].appUrl(item.id, item.type)}`;\n  }\n\n  return url;\n};\nexport const getItemIcon = type => {\n  switch (type) {\n    case REPORT_TABLE:\n    case EVENT_REPORT:\n      return IconTable24;\n\n    case REPORTS:\n      return IconFileDocument24;\n\n    case CHART:\n    case EVENT_CHART:\n      return IconVisualizationColumn24;\n\n    case MAP:\n      return IconWorld24;\n\n    case APP:\n      return IconApps24;\n\n    case RESOURCES:\n      return IconLink24;\n\n    case USERS:\n      return IconUser24;\n\n    case TEXT:\n      return IconTextBox24;\n\n    case MESSAGES:\n      return IconMail24;\n\n    case SPACER:\n      return IconEmptyFrame24;\n\n    default:\n      return IconQuestion24;\n  }\n};","import { REPORT_TABLE, CHART, VISUALIZATION, MAP, EVENT_REPORT, EVENT_CHART } from '../../../../modules/itemTypes';\nimport getVisualizationContainerDomId from '../getVisualizationContainerDomId';\nimport { loadExternalScript } from './loadExternalScript'; //external plugins\n\nconst itemTypeToGlobalVariable = {\n  [MAP]: 'mapPlugin',\n  [EVENT_REPORT]: 'eventReportPlugin',\n  [EVENT_CHART]: 'eventChartPlugin'\n};\nconst itemTypeToScriptPath = {\n  [MAP]: '/dhis-web-maps/map.js',\n  [EVENT_REPORT]: '/dhis-web-event-reports/eventreport.js',\n  [EVENT_CHART]: '/dhis-web-event-visualizer/eventchart.js'\n};\n\nconst hasIntegratedPlugin = type => [CHART, REPORT_TABLE, VISUALIZATION].includes(type);\n\nexport const getPlugin = async type => {\n  if (hasIntegratedPlugin(type)) {\n    return true;\n  }\n\n  const pluginName = itemTypeToGlobalVariable[type];\n  return await global[pluginName];\n};\n\nconst fetchPlugin = async (type, baseUrl) => {\n  const globalName = itemTypeToGlobalVariable[type];\n\n  if (global[globalName]) {\n    return global[globalName]; // Will be a promise if fetch is in progress\n  }\n\n  const scripts = [];\n\n  if (type === EVENT_REPORT || type === EVENT_CHART) {\n    if (process.env.NODE_ENV === 'production') {\n      scripts.push('./vendor/babel-polyfill-6.26.0.min.js');\n      scripts.push('./vendor/jquery-3.3.1.min.js');\n      scripts.push('./vendor/jquery-migrate-3.0.1.min.js');\n    } else {\n      scripts.push('./vendor/babel-polyfill-6.26.0.js');\n      scripts.push('./vendor/jquery-3.3.1.js');\n      scripts.push('./vendor/jquery-migrate-3.0.1.js');\n    }\n  }\n\n  scripts.push(baseUrl + itemTypeToScriptPath[type]);\n  const scriptsPromise = Promise.all(scripts.map(loadExternalScript)).then(() => global[globalName] // At this point, has been replaced with the real thing\n  );\n  global[globalName] = scriptsPromise;\n  return await scriptsPromise;\n};\n\nexport const pluginIsAvailable = type => hasIntegratedPlugin(type) || itemTypeToGlobalVariable[type];\n\nconst loadPlugin = async (type, config, credentials) => {\n  if (!pluginIsAvailable(type)) {\n    return;\n  }\n\n  const plugin = await fetchPlugin(type, credentials.baseUrl);\n\n  if (!(plugin && plugin.load)) {\n    return;\n  }\n\n  plugin.url = credentials.baseUrl;\n  plugin.loadingIndicator = true;\n  plugin.dashboard = true;\n\n  if (credentials.auth) {\n    plugin.auth = credentials.auth;\n  }\n\n  plugin.load(config);\n};\n\nexport const load = async (item, visualization, {\n  credentials,\n  activeType,\n  options = {}\n}) => {\n  const config = { ...visualization,\n    ...options,\n    el: getVisualizationContainerDomId(item.id)\n  };\n  const type = activeType || item.type;\n  await loadPlugin(type, config, credentials);\n};\nexport const unmount = async (item, activeType) => {\n  const plugin = await getPlugin(activeType);\n\n  if (plugin && plugin.unmount) {\n    plugin.unmount(getVisualizationContainerDomId(item.id));\n  }\n};","const getVisualizationContainerDomId = id => `item-${id}`;\n\nexport default getVisualizationContainerDomId;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemHeaderWrap\":\"ItemHeader_itemHeaderWrap__JcBP7\",\"itemTitle\":\"ItemHeader_itemTitle__34rHa\",\"itemActionsWrap\":\"ItemHeader_itemActionsWrap__Gx3D9\"};"],"sourceRoot":""}
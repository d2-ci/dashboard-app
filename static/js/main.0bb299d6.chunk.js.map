{"version":3,"sources":["modules/itemTypes.js","components/ControlBar/styles/DashboardsBar.module.css","reducers/user.js","reducers/dashboards.js","reducers/selected.js","reducers/visualizations.js","api/metadata.js","api/index.js","api/dashboards.js","components/ItemGrid/gridUtil.js","reducers/messages.js","api/messages.js","reducers/snackbar.js","actions/snackbar.js","components/SnackbarMessage/SnackbarMessage.js","components/Item/VisualizationItem/plugin.js","actions/selected.js","api/localStorage.js","components/Item/MessagesItem/actions.js","reducers/editDashboard.js","reducers/editItemFilters.js","reducers/itemFilters.js","actions/itemFilters.js","actions/editItemFilters.js","api/editDashboard.js","actions/editDashboard.js","actions/dashboards.js","reducers/controlBar.js","api/controlBar.js","actions/controlBar.js","reducers/dimensions.js","reducers/settings.js","actions/dimensions.js","modules/colors.js","components/ControlBar/ShowMoreButton.js","components/ControlBar/controlBarDimensions.js","components/ControlBar/ControlBar.js","api/dataStatistics.js","components/ControlBar/DashboardItemChip.js","widgets/D2IconButton.js","reducers/dashboardsFilter.js","components/ControlBar/Filter.js","components/ControlBar/DashboardsBar.js","actions/dashboardsFilter.js","components/Dashboard/DashboardVerticalOffset.js","components/ItemSelect/selectableItems.js","components/ItemSelect/ItemSelectList.js","components/ItemSelect/actions.js","components/ItemSelect/ItemSelectSingle.js","components/ItemSelect/ItemSelect.js","components/TitleBar/EditTitleBar.js","components/ItemFilter/FilterDialog.js","reducers/activeModalDimension.js","actions/activeModalDimension.js","components/ItemFilter/FilterSelector.js","components/TitleBar/Info.js","components/TitleBar/ViewTitleBar.js","components/TitleBar/TitleBar.js","components/Item/VisualizationItem/DefaultPlugin.js","components/Item/ItemHeader.js","components/Item/VisualizationItem/ItemFooter.js","components/Item/ItemHeaderButton.js","components/Item/VisualizationItem/ItemHeaderButtons.js","modules/memoizeOne.js","components/Item/VisualizationItem/Item.js","widgets/Line.js","components/Item/MessagesItem/Item.js","components/Item/NotSupportedItem/Item.js","components/Item/ListItem/Item.js","components/Item/ListItem/actions.js","components/Item/TextItem/Item.js","components/Item/AppItem/Item.js","components/Item/SpacerItem/Item.js","components/Item/Item.js","components/ItemGrid/DeleteItemButton.js","widgets/ModalLoadingMask.js","widgets/NoContentMessage.js","components/Item/ProgressiveLoadingContainer.js","components/ItemGrid/ItemGrid.js","components/FilterBar/FilterBadge.js","components/FilterBar/FilterBar.js","components/Dashboard/DashboardContent.js","components/Dashboard/ViewDashboard.js","widgets/PrimaryButton.js","widgets/FlatButton.js","components/ControlBar/ConfirmDeleteDialog.js","components/ControlBar/EditBar.js","components/Dashboard/EditDashboard.js","components/Dashboard/NewDashboard.js","components/Dashboard/Dashboard.js","components/Dashboard/dashboardModes.js","components/App.js","actions/user.js","locales/index.js","reducers/style.js","reducers/index.js","configureStore.js","modules/theme.js","index.js","modules/util.js","components/ControlBar/styles/ControlBar.module.css"],"names":["REPORT_TABLE","CHART","MAP","EVENT_REPORT","EVENT_CHART","APP","REPORTS","RESOURCES","USERS","MESSAGES","TEXT","SPACER","DOMAIN_TYPE_AGGREGATE","VISUALIZATION_TYPE_TABLE","VISUALIZATION_TYPE_CHART","VISUALIZATION_TYPE_MAP","spacerContent","emptyTextItemContent","isSpacerType","item","type","text","isTextType","isPluginType","itemTypeMap","hasOwnProperty","getPlugin","pluginName","plugin","global","_itemTypeMap","Object","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","id","endPointName","propName","countName","pluralTitle","i18n","t","domainType","visualizationType","appUrl","concat","appName","getItemUrl","d2","url","launchUrl","getBaseUrl","getItemIcon","TableIcon","ChartIcon","MapIcon","ExtensionIcon","DescriptionIcon","PersonIcon","FontDownloadIcon","EmailIcon","CropFreeIcon","NotInterestedIcon","module","exports","leftControls","rightControls","DEFAULT_STATE_USER","username","uiLocale","isSuperuser","sGetUserUsername","state","user","DEFAULT_STATE_DASHBOARDS","byId","items","updateDashboardProp","dashboardId","prop","value","objectSpread","defineProperty","sGetDashboardsRoot","dashboards","sGetDashboardById","orObject","sDashboardsIsFetching","sGetAllDashboards","sGetDashboardItems","sGetStarredDashboards","values","filter","dashboard","starred","sGetUnstarredDashboards","sGetDashboardsSortedByStarred","toConsumableArray","arraySort","getCustomDashboards","data","arrayFrom","map","d","index","name","displayName","description","displayDescription","favorite","owner","created","split","join","substr","lastUpdated","access","numberOfItems","orArray","dashboardItems","length","combineReducers","arguments","undefined","action","validateReducer","isLoading","showDescription","sGetSelectedRoot","selected","sGetSelectedId","sGetSelectedIsLoading","sGetSelectedShowDescription","DEFAULT_STATE_VISUALIZATIONS","isEmpty","p","sGetVisualization","visualizations","sGetVisualizationsRoot","getIdNameFields","rename","getDimensionFields","_ref2","withItems","arrayClean","getAxesFields","_ref3","getFavoriteFields","_ref4","withDimensions","withOptions","getFavoritesFields","_ref5","apiFetchFavorite","_ref6","fields","getInstance","then","Api","getApi","get","getEndPointName","onError","error","console","log","getDashboardItemsFields","withFavorite","getDashboardFields","apiFetchDashboard","models","catch","apiStarDashboard","isStarred","post","delete","apiDeleteDashboard","MARGIN","NEW_ITEM_SHAPE","x","y","w","h","isNonNegativeInteger","Number","isInteger","hasShape","withShape","itemWithShape","assign","i","Error","col","row","Math","floor","itemWidth","GRID_ROW_HEIGHT","getShape","originalHeight","round","max","getOriginalHeight","getGridItemDomId","onItemResize","el","document","querySelector","isFunction","setViewportSize","setTimeout","clientWidth","clientHeight","sGetMessagesRoot","messages","getMessages","DEFAULT_STATE_SNACKBAR","message","duration","open","acCloseSnackbar","loadingDashboardMsg","SnackbarMessageContent","_ref","react_default","a","createElement","style","fontWeight","connect","_sGetSnackbar","snackbar","sGetSnackbar","snackbarOpen","snackbarMessage","snackbarDuration","onCloseSnackbar","props","Snackbar_default","SnackbarMessage_SnackbarMessageContent","autoHideDuration","onRequestClose","pluginIsAvailable","activeType","extractFavorite","isObject","reportTable","chart","eventReport","eventChart","loadPlugin","config","credentials","load","baseUrl","loadingIndicator","auth","getId","getName","getLink","asyncToGenerator","regenerator_default","mark","_callee","visualization","_args","wrap","_context","prev","next","stop","_x","_x2","_x3","_x4","apply","this","fetch","_callee2","fetchedFavorite","_context2","sent","abrupt","_x5","resize","unmount","getVisualizationConfig","originalType","extractedMapView","mapViews","find","mv","layer","includes","getWithoutId","acSetSelectedId","acSetSelectedIsLoading","acReceivedVisualization","tLoadDashboard","dispatch","getState","dash","acAppendDashboards","Promise","resolve","t0","tSetSelectedDashboardById","snackbarTimeout","onSuccess","dashboardName","customDashboard","acSetDashboardItems","localStorage","setItem","forEach","messageConversations","clearTimeout","DEFAULT_STATE_EDIT_DASHBOARD","NEW_DASHBOARD_STATE","sGetEditDashboardRoot","editDashboard","sGetIsEditing","sGetEditDashboardItems","DEFAULT_STATE_EDIT_ITEM_FILTERS","sGetEditItemFiltersRoot","editItemFilters","DEFAULT_STATE_ITEM_FILTERS","sGetItemFiltersRoot","itemFilters","sGetFiltersKeys","keys","acRemoveItemFilter","acRemoveEditItemFilter","saveDashboard","width","height","save","msg","response","uid","updateDashboard","postDashboard","create","acAddDashboardItem","itemPropName","generateUid","content","acUpdateDashboardItem","acRemoveDashboardItem","arrayToIdMap","acSetDashboardStarred","tFetchDashboards","collection","list","paging","toArray","userRows","sGetControlBarUserRows","controlBar","sGetControlBarRoot","KEY","hasNamespace","currentUser","dataStore","has","getNamespace","apiGetControlBarRows","_callee3","namespace","_context3","t1","t2","key","apiPostControlBarRows","_callee4","rows","_context4","set","acSetControlBarUserRows","DEFAULT_DIMENSIONS","pe","FIXED_DIMENSIONS","ou","sGetDimensions","dimensions","DEFAULT_SETTINGS","keyDateFormat","keyAnalysisRelativePeriod","keyAnalysisDigitGroupSeparator","displayNameProperty","rootOrganisationUnit","sGetSettings","settings","sGetSettingsDisplayNameProperty","acSetDimensions","keyBy","sortBy","toLowerCase","colors","styles","showMore","color","cursor","fontSize","paddingTop","textTransform","visibility","withStyles","onClick","isMaxHeight","classes","textAlign","className","MIN_ROW_COUNT","getRowsHeight","getNumRowsFromHeight","FIRST_ROW_PADDING_HEIGHT","getTopOffset","getControlBarHeight","ControlBar","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onStartDrag","setState","dragging","window","addEventListener","onDrag","onEndDrag","event","preventDefault","stopPropagation","newHeight","clientY","onChangeHeight","requestAnimationFrame","removeEventListener","draghandle","onMouseDown","rootStyle","top","backgroundColor","editMode","yellow050","white","paddingBottom","transition","root","children","renderDragHandle","React","Component","defaultProps","apiPostDataStatistics","eventType","chipTheme","default","labelColor","primary","accent","DashboardItemChip","label","chipColorProps","labelStyle","lineHeight","margin","Link","display","verticalAlign","textDecoration","to","debounce","Chip_default","avatarProps","Avatar_default","icon","Star_default","avatar","button","padding","iconStyle","IconAdd","iconColor","D2IconButton","IconButton_default","add_circle_default","Function","prototype","ownerData","DEFAULT_STATE_DASHBOARDS_FILTER_NAME","DEFAULT_STATE_DASHBOARDS_FILTER_OWNER","order","sGetDashboardsFilterRoot","dashboardsFilter","sGetFilterName","KEYCODE_ENTER","KEYCODE_ESCAPE","filterField","filterFieldInput","left","filterFieldUnderline","bottom","filterFieldUnderlineFocus","borderColor","borderWidth","clearButton","clearButtonIcon","Filter","_Component","setFilterValue","onChangeName","target","handleKeyUp","keyCode","onKeypressEnter","inherits","createClass","nextProps","TextField_default","onChange","onKeyUp","hintText","inputStyle","hintStyle","filterFieldHint","underlineStyle","underlineFocusStyle","ClearButton","disabled","opacity","Clear_default","ControlBar_Filter","react","Filter_Filter","Filter_ClearButton","MAX_ROW_COUNT","DashboardsBar","_getPrototypeOf2","_len","args","Array","_key","setInitialDashboardState","adjustedHeight","newRows","newRowCount","min","onToggleMaxHeight","onSelectDashboard","history","push","_this$props","selectedId","onChangeFilterName","rowCount","controlBarHeight","contentWrapperStyle","overflowY","components_ControlBar_ControlBar","marginRight","widgets_D2IconButton","ControlBar_DashboardItemChip","ControlBar_ShowMoreButton","mapDispatchToProps","withRouter","stateProps","dispatchProps","ownProps","displayDashboards","marginTop","singleItems","header","listItems","title","ItemSelectList","addItem","tAddListItemContent","newItem","match","toggleSeeMore","seeMore","onChangeItemsLimit","_this2","justifyContent","paddingLeft","Button_default","Divider_default","List","itemUrl","context","ItemIcon","leftIcon","fill","innerDivStyle","hoverColor","primaryText","alignItems","marginLeft","rel","href","Launch_default","contextTypes","PropTypes","object","isRequired","dashboardItem","listItemType","dashboardItemIndex","findIndex","SingleItem","onAddToDashboard","category","addToDashboard","ItemSelectSingle_SingleItem","searchIcon","ItemSearchField","Search_default","fullWidth","ItemSelect","closeList","openList","fetchItems","anchorEl","currentTarget","setFilter","getListItems","itemType","ItemSelect_ItemSelectList","popoverChildren","SingleItems","ItemSelect_ItemSelectSingle","maxOption","api","queryString","maxOptions","add","Set","ItemSelect_ItemSearchField","Popover_default","onClose","anchorOrigin","horizontal","vertical","transformOrigin","PaperProps","disableAutoFocus","disableRestoreFocus","EditTitleBar","onChangeTitle","onChangeDescription","titleStyle","section","titleDescription","text_field_TextField_default","multiline","rowsMax","placeholder","itemSelect","components_ItemSelect_ItemSelect","selectedDashboard","flex","minWidth","maxWidth","position","peId","ouId","FilterDialog","onConfirm","dimension","selectedItems","dialogId","commonProps","onSelect","onDeselect","onReorder","build","selectedPeriods","ouItems","dialogTitle","_this$props2","Dialog_default","disableEnforceFocus","dialogContent","DialogActions_default","es_Button","kind","DEFAULT_STATE_ACTIVE_MODAL_DIMENSION","sGetActiveModalDimension","activeModalDimension","acSetActiveModalDimension","FilterSelector","openPanel","closePanel","closeDialog","clearActiveModalDimension","selectDimension","setActiveModalDimension","onSelectItems","dimensionId","setEditItemFilters","onDeselectItems","itemIdsToRemove","newList","removeEditItemFilter","onReorderItems","itemIds","oldList","reorderedList","saveFilter","filterItems","addItemFilter","removeItemFilter","selectedDimensions","ArrowDropDown_default","Boolean","onDimensionClick","selectedIds","ItemFilter_FilterDialog","filters","Info","show","toggle","InfoOutlined_default","NO_DESCRIPTION","actions","starIcon","textButton","editLink","titleBar","titleBarIcon","ViewTitleBar","toggleSharingDialog","sharingDialogIsOpen","onStarClick","onInfoClick","userSelect","StarIcon","Star","StarBorder","TitleBar_Info","update","manage","ItemFilter_FilterSelector","d2_ui_sharing_dialog_default","tStarDashboard","TitleBar","edit","TitleBar_EditTitleBar","TitleBar_ViewTitleBar","DefaultPlugin","pluginCredentials","shouldPluginReload","prevProps","reloadAllowed","filtersChanged","vis","prevVis","visChanged","reloadPlugin","pluginManager","currentVis","useActiveType","getActiveType","defaultHeaders","Authorization","textDiv","HEADER_HEIGHT","ItemHeader","actionButtons","scrollContainer","line","border","ItemFooter","objectId","d2_ui_interpretations_default","ItemHeaderButton","iconBase","buttonBase","buttonDisabled","toggleFooterPadding","borderRadius","baseStyle","container","disabledStyle","activeStyle","inactiveStyle","getItemTypeId","VisualizationItemHeaderButtons","onSelectVisualization","activeFooter","onToggleFooter","toggleFooterBase","toggleFooter","tableButtonStyle","tableBtnStyle","chartButtonStyle","chartBtnStyle","mapButtonStyle","mapBtnStyle","components_Item_ItemHeaderButton","Message_default","ViewList_default","InsertChart_default","Public_default","memoizeOne","fn","lastArgs","lastValue","every","arg","overflow","textOverflow","whiteSpace","fontStretch","applyFilters","visRows","obj","visColumns","columns","visFilters","dimensionFound","dimensionObjects","Item","showFooter","configLoaded","getUniqueKey","uniqueId","getPluginComponent","getContentStyle","data_visualizer_plugin_build","forDashboard","VisualizationItem_DefaultPlugin","onToggleItemExpanded","getTitle","itemName","getActionButtons","ItemHeaderButtons","contentRef","offsetHeight","createRef","_componentDidMount","onVisualizationLoaded","_this$props3","Item_ItemHeader","ref","VisualizationItem_ItemFooter","acReceivedActiveVisualization","Line","PRIVATE","messageTypes","_messageTypes","listStyleType","seeAll","marginBottom","sender","snippet","maxHeight","MessagesItem","getMessageHref","msgIdentifier","messageType","getMessageSender","latestMsg","slice","getMessageItems","editClass","readClass","read","msgDate","location","messageCount","formatDate","userSettings","widgets_Line","string","MessagesContainer","NotSupportedItem","NotInterested_default","align","getItemTitle","removeContent","handler","contentToRemove","ListItem","tRemoveListItemContent","contentItems","array","getContentItems","contentItem","deleteButton","Delete_default","ListItemContainer","newContent","textField","onChangeText","updatedItem","d2_ui_rich_text","onEdit","textDivStyle","viewItem","getIframeSrc","appDetails","iframeSrc","ouIds","ouPath","AppItem","appKey","system","installedApps","app","src","SpacerItem","GridItem","VisualizationItem","TextItem","getGridItem","right","zIndex","DeleteItemHeaderButton","modal","pointerEvents","dark","ModalLoadingMask","LoadingMask_component_default","NoContentMessage","ProgressiveLoadingContainer","shouldLoad","containerRef","shouldLoadHandler","bufferPx","bufferFactor","innerHeight","rect","getBoundingClientRect","removeHandler","checkShouldLoad","debounceMs","registerHandler","_this3","objectWithoutProperties","ItemGrid","expandedItems","NO_ITEMS_MESSAGE","clickedId","isExpanded","onRemoveItem","onLayoutChange","newLayout","acUpdateDashboardLayout","onResizeStop","layout","oldItem","pluginResize","onRemoveItemWrapper","widgets_NoContentMessage","expandedItem","hProp","minH","widgets_ModalLoadingMask","react_grid_layout_default","cols","rowHeight","innerWidth","compactType","isDraggable","isResizable","draggableCancel","itemClassNames","Item_ProgressiveLoadingContainer","DeleteItemButton","Item_Item_Item","validItems","badgeContainer","badge","badgeRemove","FilterBadge","onRemove","count","FilterBar","onBadgeRemove","onBadgeClick","bar","FilterBar_FilterBadge","removeItemFIlter","filtersSelector","createSelector","reduce","arr","flexWrap","DashboardContent","components_TitleBar_TitleBar","components_FilterBar_FilterBar","components_ItemGrid_ItemGrid","Content","hasDashboardContent","dashboardsIsEmpty","Dashboard_DashboardContent","dashboardsLoaded","contentNotReady","ControlBar_DashboardsBar","Dashboard_DashboardVerticalOffset","ViewDashboard_Content","PrimaryButton","RaisedButton_default","defaultStyles","FlatButton","combinedStyle","FlatButton_default","ConfirmDeleteDialog","onDeleteConfirmed","onContinueEditing","widgets_FlatButton","src_widgets_PrimaryButton","material_ui_Dialog_default","buttonBarStyle","EditBar","translationDialogIsOpen","dashboardModel","confirmDeleteDialogOpen","redirectUrl","onConfirmDelete","onSave","newId","onDiscard","onDiscardChanges","onDelete","onTranslationsSaved","translations","dbLocale","translation","locale","property","onTranslate","fetchDashboardModel","toggleTranslationDialog","confirmDeleteDialog","deleteAccess","ControlBar_ConfirmDeleteDialog","translationDialog","d2_ui_translation_dialog_default","objectToTranslate","fieldsToTranslate","onTranslationSaved","onTranslationError","err","Redirect","updateAccess","discardBtnText","sGetIsNewDashboard","dashboardToSave","_x6","_x7","tDeleteDashboard","acSetDashboardDisplayName","EditDashboard","initialized","initEditDashboard","setEditDashboard","getDashboardContent","EditDashboard_Content","ControlBar_EditBar","NewDashboard","setNewDashboard","Dashboard","setDashboard","params","selectDashboard","mode","Dashboard_EditDashboard","Dashboard_NewDashboard","Dashboard_ViewDashboard","dashboardToSelect","preferredId","getItem","App","setCurrentUser","fetchDashboards","setControlBarRows","setDimensions","HeaderBar_default","HashRouter","Switch","Route","exact","path","render","components_Dashboard_Dashboard","components_SnackbarMessage_SnackbarMessage","childContextTypes","controlBarRows","displayNameProp","filteredDimensions","apiFetchDimensions","dim","dimensionType","dataDimensionType","tSetDimensions","moment","addResources","enTranslations","loTranslations","svTranslations","urTranslations","viTranslations","setDefaultNamespace","changeLanguage","objectClean","conversations","$merge","d2Object","keyUiLocale","authorities","newState","k","$unshift","idToRemove","$splice","stateItems","newStateItems","stateItem","si","$set","configureStore","middleware","thunk","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducer","applyMiddleware","muiTheme","raisedButton","primaryColor","disabledColor","disabledTextColor","getMuiTheme","configI18n","sources","manifest","isProd","getManifest","info","version","manifest_generated_at","process","activities","dhis","dhis2","apiVersion","headers","schemas","getUserSettings","d2Init","initializedD2","ReactDOM","es","store","theme","createMuiTheme","dhis2theme","index_es","src_components_App","getElementById","init","param","isArray","Intl","DateTimeFormat","year","month","day","format","Date","replace","defaultValue","idx","indexOf","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__"],"mappings":"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","file":"static/js/main.0bb299d6.chunk.js","sourcesContent":["import i18n from '@dhis2/d2-i18n';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\nimport ExtensionIcon from '@material-ui/icons/Extension';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport PersonIcon from '@material-ui/icons/Person';\nimport FontDownloadIcon from '@material-ui/icons/FontDownload';\nimport EmailIcon from '@material-ui/icons/Email';\nimport CropFreeIcon from '@material-ui/icons/CropFree';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nimport { getBaseUrl } from './util';\n\n// Item types\nexport const REPORT_TABLE = 'REPORT_TABLE';\nexport const CHART = 'CHART';\nexport const MAP = 'MAP';\nexport const EVENT_REPORT = 'EVENT_REPORT';\nexport const EVENT_CHART = 'EVENT_CHART';\nexport const APP = 'APP';\nexport const REPORTS = 'REPORTS';\nexport const RESOURCES = 'RESOURCES';\nexport const USERS = 'USERS';\nexport const MESSAGES = 'MESSAGES';\nexport const TEXT = 'TEXT';\nexport const SPACER = 'SPACER';\n\n// Domain types\nexport const DOMAIN_TYPE_AGGREGATE = 'AGGREGATE';\nexport const DOMAIN_TYPE_TRACKER = 'TRACKER';\n\n// Visualization types\nexport const VISUALIZATION_TYPE_TABLE = 'TABLE';\nexport const VISUALIZATION_TYPE_CHART = 'CHART';\nexport const VISUALIZATION_TYPE_MAP = 'MAP';\n\nexport const spacerContent = 'SPACER_ITEM_FOR_DASHBOARD_LAYOUT_CONVENIENCE';\nexport const emptyTextItemContent = 'TEXT_ITEM_WITH_NO_CONTENT';\nexport const isSpacerType = item =>\n    item.type === TEXT && item.text === spacerContent;\nexport const isTextType = item =>\n    item.type === TEXT && item.text !== spacerContent;\nexport const isPluginType = item =>\n    itemTypeMap[item.type].hasOwnProperty('plugin');\n\nexport const getPlugin = type => {\n    const pluginName = itemTypeMap[type].plugin;\n\n    if (type === CHART) {\n        return true;\n    }\n\n    return global[pluginName];\n};\n\n// Item type map\nexport const itemTypeMap = {\n    [REPORT_TABLE]: {\n        id: REPORT_TABLE,\n        endPointName: 'reportTables',\n        propName: 'reportTable',\n        countName: 'reportTableCount',\n        pluralTitle: i18n.t('Pivot tables'),\n        plugin: 'reportTablePlugin',\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        visualizationType: VISUALIZATION_TYPE_TABLE,\n        appUrl: id => `dhis-web-pivot/?id=${id}`,\n        appName: i18n.t('Pivot Tables'),\n    },\n    [CHART]: {\n        id: CHART,\n        endPointName: 'charts',\n        propName: 'chart',\n        countName: 'chartCount',\n        pluralTitle: i18n.t('Charts'),\n        plugin: 'chartPlugin',\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        visualizationType: VISUALIZATION_TYPE_CHART,\n        appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n        appName: i18n.t('Visualizer'),\n    },\n    [MAP]: {\n        id: MAP,\n        endPointName: 'maps',\n        propName: 'map',\n        countName: 'mapCount',\n        pluralTitle: i18n.t('Maps'),\n        plugin: 'mapPlugin',\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        visualizationType: VISUALIZATION_TYPE_MAP,\n        appUrl: id => `dhis-web-maps/?id=${id}`,\n        appName: i18n.t('Maps'),\n    },\n    [EVENT_REPORT]: {\n        id: EVENT_REPORT,\n        endPointName: 'eventReports',\n        propName: 'eventReport',\n        countName: 'eventReportCount',\n        pluralTitle: i18n.t('Event reports'),\n        plugin: 'eventReportPlugin',\n        domainType: DOMAIN_TYPE_TRACKER,\n        visualizationType: VISUALIZATION_TYPE_TABLE,\n        appUrl: id => `dhis-web-event-reports/?id=${id}`,\n        appName: i18n.t('Event Reports'),\n    },\n    [EVENT_CHART]: {\n        id: EVENT_CHART,\n        endPointName: 'eventCharts',\n        propName: 'eventChart',\n        countName: 'eventChartCount',\n        pluralTitle: i18n.t('Event charts'),\n        plugin: 'eventChartPlugin',\n        domainType: DOMAIN_TYPE_TRACKER,\n        visualizationType: VISUALIZATION_TYPE_CHART,\n        appUrl: id => `dhis-web-event-visualizer/?id=${id}`,\n        appName: i18n.t('Event Visualizer'),\n    },\n    [APP]: {\n        endPointName: 'apps',\n        propName: 'appKey',\n        countName: 'appCount',\n        pluralTitle: 'Apps',\n    },\n    [REPORTS]: {\n        id: REPORTS,\n        endPointName: 'reports',\n        propName: 'reports',\n        countName: 'reportCount',\n        pluralTitle: i18n.t('Reports'),\n        appUrl: id =>\n            `dhis-web-reporting/getReportParams.action?mode=report&uid=${id}`,\n    },\n    [RESOURCES]: {\n        id: RESOURCES,\n        endPointName: 'resources',\n        propName: 'resources',\n        countName: 'resourceCount',\n        pluralTitle: i18n.t('Resources'),\n        appUrl: id => `api/documents/${id}/data`,\n    },\n    [USERS]: {\n        id: USERS,\n        endPointName: 'users',\n        propName: 'users',\n        countName: 'userCount',\n        pluralTitle: i18n.t('Users'),\n        appUrl: id => `dhis-web-dashboard-integration/profile.action?id=${id}`,\n    },\n    [TEXT]: {\n        id: TEXT,\n        propName: 'text',\n    },\n    [MESSAGES]: {\n        propName: 'messages',\n    },\n    [SPACER]: {\n        propName: 'text',\n    },\n};\n\nexport const getItemUrl = (type, item, d2) => {\n    let url;\n\n    if (type === APP) {\n        url = item.launchUrl;\n    }\n\n    if (itemTypeMap[type] && itemTypeMap[type].appUrl) {\n        url = `${getBaseUrl(d2)}/${itemTypeMap[type].appUrl(item.id)}`;\n    }\n\n    return url;\n};\n\nexport const getItemIcon = type => {\n    switch (type) {\n        case REPORT_TABLE:\n        case EVENT_REPORT:\n        case REPORTS:\n            return TableIcon;\n        case CHART:\n        case EVENT_CHART:\n            return ChartIcon;\n        case MAP:\n            return MapIcon;\n        case APP:\n            return ExtensionIcon;\n        case RESOURCES:\n            return DescriptionIcon;\n        case USERS:\n            return PersonIcon;\n        case TEXT:\n            return FontDownloadIcon;\n        case MESSAGES:\n            return EmailIcon;\n        case SPACER:\n            return CropFreeIcon;\n        default:\n            return NotInterestedIcon;\n    }\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"leftControls\":\"DashboardsBar_leftControls__2kr14\",\"rightControls\":\"DashboardsBar_rightControls__2l1lT\"};","export const RECEIVED_USER = 'RECEIVED_USER';\n\nexport const DEFAULT_STATE_USER = {\n    id: '',\n    username: '',\n    uiLocale: '',\n    isSuperuser: false,\n};\n\nexport default (state = DEFAULT_STATE_USER, action) => {\n    switch (action.type) {\n        case RECEIVED_USER: {\n            return fromD2ToUserObj(action.value);\n        }\n        default:\n            return state;\n    }\n};\n\nfunction fromD2ToUserObj(d2Object) {\n    return {\n        id: d2Object.id,\n        username: d2Object.username,\n        uiLocale: d2Object.settings.keyUiLocale,\n        isSuperuser: d2Object.authorities.has('ALL'),\n    };\n}\n\n// selectors\n\nexport const sGetUserId = state => state.user.id;\nexport const sGetUserUsername = state => state.user.username;\nexport const sGetIsSuperuser = state => state.user.isSuperuser;\nexport const sGetUiLocale = state => state.user.uiLocale;\n","/** @module reducers/dashboards */\n\nimport arrayFrom from 'd2-utilizr/lib/arrayFrom';\nimport arraySort from 'd2-utilizr/lib/arraySort';\n\nimport { orArray, orObject } from '../modules/util';\nimport {\n    SPACER,\n    isSpacerType,\n    isTextType,\n    emptyTextItemContent,\n} from '../modules/itemTypes';\n\nexport const SET_DASHBOARDS = 'SET_DASHBOARDS';\nexport const ADD_DASHBOARDS = 'ADD_DASHBOARDS';\nexport const SET_DASHBOARD_STARRED = 'SET_DASHBOARD_STARRED';\nexport const SET_DASHBOARD_DISPLAY_NAME = 'SET_DASHBOARD_DISPLAY_NAME';\nexport const SET_DASHBOARD_ITEMS = 'SET_DASHBOARD_ITEMS';\n\nexport const DEFAULT_STATE_DASHBOARDS = {\n    byId: null,\n    items: [],\n};\n\n// reducer helper functions\n\nconst updateDashboardProp = (state, dashboardId, prop, value) => ({\n    byId: {\n        ...state.byId,\n        [dashboardId]: {\n            ...state.byId[dashboardId],\n            [prop]: value,\n        },\n    },\n    items: state.items,\n});\n\n/**\n * Reducer that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n * @returns {Object}\n */\nexport default (state = DEFAULT_STATE_DASHBOARDS, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS: {\n            return {\n                byId: action.value,\n                items: [],\n            };\n        }\n        case ADD_DASHBOARDS: {\n            return {\n                ...state,\n                byId: {\n                    ...state.byId,\n                    ...action.value,\n                },\n            };\n        }\n        case SET_DASHBOARD_STARRED: {\n            return updateDashboardProp(\n                state,\n                action.dashboardId,\n                'starred',\n                action.value\n            );\n        }\n        case SET_DASHBOARD_DISPLAY_NAME: {\n            return updateDashboardProp(\n                state,\n                action.dashboardId,\n                'displayName',\n                action.value\n            );\n        }\n        case SET_DASHBOARD_ITEMS: {\n            return {\n                ...state,\n                items: action.value,\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// root selector\n\nexport const sGetDashboardsRoot = state => state.dashboards;\n\n// selector level 1\n\n/**\n * Selector which returns a dashboard by id from the state object\n * If no matching dashboard is found it returns undefined\n * If dashboards.byId is null, then the dashboards api request\n * has not yet completed. If dashboards.byId is an empty object\n * then the dashboards api request is complete, but no dashboards\n * were returned\n *\n * @function\n * @param {Object} state The current state\n * @param {Number} id The id of the dashboard\n * @returns {Object | undefined}\n */\nexport const sGetDashboardById = (state, id) =>\n    orObject(sGetDashboardsRoot(state).byId)[id];\n\nexport const sDashboardsIsFetching = state => {\n    return sGetDashboardsRoot(state).byId === null;\n};\n\n/**\n * Selector which returns all dashboards (the byId object)\n *\n * @function\n * @param {Object} state The current state\n * @returns {Object | undefined}\n */\nexport const sGetAllDashboards = state =>\n    orObject(sGetDashboardsRoot(state).byId);\n\n/**\n * Selector which returns the current dashboard items\n *\n * @function\n * @param {Object} state The current state\n * @returns {Array}\n */\nexport const sGetDashboardItems = state => sGetDashboardsRoot(state).items;\n\n// selector level 2\n\nexport const sGetStarredDashboards = state =>\n    Object.values(sGetAllDashboards(state)).filter(\n        dashboard => dashboard.starred === true\n    );\n\nexport const sGetUnstarredDashboards = state =>\n    Object.values(sGetAllDashboards(state)).filter(\n        dashboard => dashboard.starred === false\n    );\n\n// selector level 3\n\nexport const sGetStarredDashboardIds = state => {\n    return sGetStarredDashboards(state).map(dashboard => dashboard.id);\n};\n\nexport const sGetUnstarredDashboardIds = state =>\n    sGetUnstarredDashboards(state).map(dashboard => dashboard.id);\n\nexport const sGetDashboardsSortedByStarred = state => [\n    ...arraySort(sGetStarredDashboards(state), 'ASC', 'displayName'),\n    ...arraySort(sGetUnstarredDashboards(state), 'ASC', 'displayName'),\n];\n\n// utils\n\n/**\n * Returns the array of dashboards, customized for ui\n * @function\n * @param {Array} data The original dashboard list\n * @returns {Array}\n */\nexport const getCustomDashboards = data => {\n    const uiItems = items =>\n        items.map(item => {\n            const type = isSpacerType(item) ? SPACER : item.type;\n            const text = isTextType(item)\n                ? item.text === emptyTextItemContent\n                    ? ''\n                    : item.text\n                : null;\n\n            return {\n                ...item,\n                ...(text !== null ? { text } : {}),\n                type,\n            };\n        });\n\n    return arrayFrom(data).map((d, index) => ({\n        id: d.id,\n        name: d.name,\n        displayName: d.displayName,\n        description: d.description,\n        displayDescription: d.displayDescription,\n        starred: d.favorite,\n        owner: d.user.name,\n        created: d.created\n            .split('T')\n            .join(' ')\n            .substr(0, 16),\n        lastUpdated: d.lastUpdated\n            .split('T')\n            .join(' ')\n            .substr(0, 16),\n        access: d.access,\n        numberOfItems: orArray(d.dashboardItems).length,\n        dashboardItems: uiItems(d.dashboardItems),\n    }));\n};\n","/** @module reducers/selected */\nimport { combineReducers } from 'redux';\n\nimport { validateReducer } from '../modules/util';\n\nexport const SET_SELECTED_ID = 'SET_SELECTED_ID';\nexport const SET_SELECTED_ISLOADING = 'SET_SELECTED_ISLOADING';\nexport const SET_SELECTED_SHOWDESCRIPTION = 'SET_SELECTED_SHOWDESCRIPTION';\n\nexport const DEFAULT_STATE_SELECTED_ID = null;\nexport const DEFAULT_STATE_SELECTED_ISLOADING = false;\nexport const DEFAULT_STATE_SELECTED_SHOWDESCRIPTION = false;\n\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\nconst id = (state = DEFAULT_STATE_SELECTED_ID, action) => {\n    switch (action.type) {\n        case SET_SELECTED_ID:\n            return validateReducer(action.value, DEFAULT_STATE_SELECTED_ID);\n        default:\n            return state;\n    }\n};\n\nconst isLoading = (state = DEFAULT_STATE_SELECTED_ISLOADING, action) => {\n    switch (action.type) {\n        case SET_SELECTED_ISLOADING:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_SELECTED_ISLOADING\n            );\n        default:\n            return state;\n    }\n};\n\nconst showDescription = (\n    state = DEFAULT_STATE_SELECTED_SHOWDESCRIPTION,\n    action\n) => {\n    switch (action.type) {\n        case SET_SELECTED_SHOWDESCRIPTION:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_SELECTED_SHOWDESCRIPTION\n            );\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    id,\n    isLoading,\n    showDescription,\n});\n\n// Selectors\n\nexport const sGetSelectedRoot = state => state.selected;\n\nexport const sGetSelectedId = state => sGetSelectedRoot(state).id;\n\nexport const sGetSelectedIsLoading = state => sGetSelectedRoot(state).isLoading;\n\nexport const sGetSelectedShowDescription = state =>\n    sGetSelectedRoot(state).showDescription;\n","import { orObject } from '../modules/util';\nimport objectClean from 'd2-utilizr/lib/objectClean';\n\n/** @module reducers/visualizations */\n\nexport const RECEIVED_VISUALIZATION = 'RECEIVED_VISUALIZATION';\nexport const RECEIVED_ACTIVE_VISUALIZATION = 'RECEIVED_ACTIVE_VISUALIZATION';\n\nexport const DEFAULT_STATE_VISUALIZATIONS = {};\n\nconst isEmpty = p => p === undefined || p === null;\n\nexport default (state = DEFAULT_STATE_VISUALIZATIONS, action) => {\n    switch (action.type) {\n        case RECEIVED_VISUALIZATION: {\n            return {\n                ...state,\n                [action.value.id]: objectClean(\n                    {\n                        ...orObject(state[action.value.id]),\n                        ...action.value,\n                    },\n                    isEmpty\n                ),\n            };\n        }\n        case RECEIVED_ACTIVE_VISUALIZATION: {\n            return {\n                ...state,\n                [action.id]: objectClean(\n                    {\n                        ...orObject(state[action.id]),\n                        activeType: action.activeType,\n                    },\n                    isEmpty\n                ),\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// root selector\nexport const sGetVisualizationsRoot = state => state.visualizations;\n\n// selectors level 1\nexport const sGetVisualization = (state, id) => {\n    return sGetVisualizationsRoot(state)[id];\n};\n","import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\n\nimport { getEndPointName } from './index';\n\n// Id, name\nexport const getIdNameFields = ({ rename } = {}) => [\n    'id',\n    `${rename ? 'displayName~rename(name)' : 'name,displayName'}`,\n];\n\n// Item\nexport const getItemFields = () => [\n    'dimensionItem~rename(id)',\n    'displayName~rename(name)',\n    'dimensionItemType',\n];\n\n// Dimension\nexport const getDimensionFields = ({ withItems }) =>\n    arrayClean([\n        'dimension',\n        'legendSet[id]',\n        'filter',\n        withItems ? `items[${getItemFields().join(',')}]` : ``,\n    ]);\n\n// Axis\nexport const getAxesFields = ({ withItems }) => [\n    `columns[${getDimensionFields({ withItems }).join(',')}]`,\n    `rows[${getDimensionFields({ withItems }).join(',')}]`,\n    `filters[${getDimensionFields({ withItems }).join(',')}]`,\n];\n\n// Favorite\nexport const getFavoriteFields = ({ withDimensions, withOptions }) => {\n    return arrayClean([\n        `${getIdNameFields({ rename: true }).join(',')}`,\n        'displayDescription~rename(description)',\n        withDimensions ? `${getAxesFields({ withItems: true }).join(',')}` : ``,\n        withOptions\n            ? [\n                  '*',\n                  '!attributeDimensions',\n                  '!attributeValues',\n                  '!category',\n                  '!categoryDimensions',\n                  '!categoryOptionGroupSetDimensions',\n                  '!columnDimensions',\n                  '!dataDimensionItems',\n                  '!dataElementDimensions',\n                  '!dataElementGroupSetDimensions',\n                  '!filterDimensions',\n                  '!itemOrganisationUnitGroups',\n                  '!lastUpdatedBy',\n                  '!organisationUnitGroupSetDimensions',\n                  '!organisationUnitLevels',\n                  '!organisationUnits',\n                  '!programIndicatorDimensions',\n                  '!relativePeriods',\n                  '!reportParams',\n                  '!rowDimensions',\n                  '!series',\n                  '!translations',\n                  '!userOrganisationUnit',\n                  '!userOrganisationUnitChildren',\n                  '!userOrganisationUnitGrandChildren',\n              ].join(',')\n            : '',\n    ]);\n};\n\nexport const getFavoritesFields = ({ withDimensions, withOptions }) => [\n    `reportTable[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `chart[${['type', ...getFavoriteFields({ withDimensions })].join(',')}]`,\n    `map[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `eventReport[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `eventChart[${getFavoriteFields({ withDimensions }).join(',')}]`,\n];\n\n// List item\nexport const getListItemFields = () => [\n    `reports[${getIdNameFields({ rename: true }).join(',')}]`,\n    `resources[${getIdNameFields({ rename: true }).join(',')}]`,\n    `users[${getIdNameFields({ rename: true }).join(',')}]`,\n];\n\n// Map\nexport const getMapFields = () => [\n    `${getIdNameFields({ rename: true }).join(',')}`,\n    'user,longitude,latitude,zoom,basemap',\n    `mapViews[${getFavoriteFields({\n        withDimensions: true,\n        withOptions: true,\n    })}]`,\n];\n\n// Api\n\n// Get more info about the favorite of a dashboard item\nexport const apiFetchFavorite = (id, type, { fields }) =>\n    getInstance().then(d2 =>\n        d2.Api.getApi().get(`${getEndPointName(type)}/${id}`, {\n            fields:\n                fields ||\n                getFavoriteFields({\n                    withDimensions: true,\n                    withOptions: true,\n                }),\n        })\n    );\n","import arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { itemTypeMap } from '../modules/itemTypes';\nimport {\n    getListItemFields,\n    getFavoritesFields,\n    getIdNameFields,\n} from './metadata';\n\n// Helper functions\n\nexport const onError = error => console.log('Error: ', error);\n\nexport const getEndPointName = type => itemTypeMap[type].endPointName;\n\n// Dashboard item\nexport const getDashboardItemsFields = ({ withFavorite } = {}) =>\n    arrayClean([\n        'id',\n        'type',\n        'shape',\n        'x',\n        'y',\n        'width~rename(w)',\n        'height~rename(h)',\n        'messages',\n        'text',\n        'appKey',\n        `${getListItemFields().join(',')}`,\n        withFavorite\n            ? `${getFavoritesFields({\n                  withDimensions: withFavorite.withDimensions,\n              }).join(',')}`\n            : ``,\n    ]);\n\n// Dashboard\nexport const getDashboardFields = ({ withItems, withFavorite } = {}) =>\n    arrayClean([\n        `${getIdNameFields().join(',')}`,\n        'description',\n        'displayDescription',\n        'favorite',\n        `user[${getIdNameFields({ rename: true }).join(',')}]`,\n        'created',\n        'lastUpdated',\n        'access',\n        withItems\n            ? `dashboardItems[${getDashboardItemsFields({\n                  withFavorite,\n              }).join(',')}]`\n            : ``,\n    ]);\n","import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { onError, getDashboardFields } from './index';\n\n// Get \"all\" dashboards on startup\nexport const apiFetchDashboards = () =>\n    getInstance()\n        .then(d2 =>\n            d2.models.dashboard.list({\n                fields: [\n                    getDashboardFields().join(','),\n                    'dashboardItems[id]',\n                ].join(','),\n                paging: 'false',\n            })\n        )\n        .catch(onError);\n\n// Get more info about selected dashboard\nexport const apiFetchDashboard = id =>\n    getInstance()\n        .then(d2 =>\n            d2.models.dashboard.get(id, {\n                fields: arrayClean(\n                    getDashboardFields({\n                        withItems: true,\n                        withFavorite: { withDimensions: false },\n                    })\n                ).join(','),\n            })\n        )\n        .catch(onError);\n\n// Star dashboard\nexport const apiStarDashboard = (id, isStarred) => {\n    const url = `dashboards/${id}/favorite`;\n\n    getInstance().then(d2 => {\n        if (isStarred) {\n            d2.Api.getApi().post(url);\n        } else {\n            d2.Api.getApi().delete(url);\n        }\n    });\n};\n\nexport const apiDeleteDashboard = id => {\n    return getInstance()\n        .then(d2 => {\n            return d2.models.dashboards\n                .get(id)\n                .then(dashboard => dashboard.delete());\n        })\n        .catch(onError);\n};\n","import isFunction from 'd2-utilizr/lib/isFunction';\n\nimport { orObject } from '../../modules/util';\n\n// Dimensions for the react-grid-layout\n\nexport const GRID_COMPACT_TYPE = 'vertical'; // vertical | horizonal | null\nexport const GRID_ROW_HEIGHT = 10;\nconst GRID_COLUMN_WIDTH_PX = 20;\nconst GRID_LAYOUT = 'FLEXIBLE'; // FIXED | FLEXIBLE\nexport const MARGIN = [10, 10];\n\nexport const NEW_ITEM_SHAPE = { x: 0, y: 0, w: 20, h: 29 };\nexport const ITEM_MIN_HEIGHT = 4;\n\n// Dimensions for getShape\n\nconst NUMBER_OF_ITEM_COLS = 2;\nconst GRID_COLUMNS = 60;\n\nexport const getGridColumns = () => {\n    switch (GRID_LAYOUT) {\n        case 'FLEXIBLE':\n            return GRID_COLUMNS;\n        case 'FIXED':\n            return Math.floor((window.innerWidth - 20) / GRID_COLUMN_WIDTH_PX);\n        default:\n            return GRID_COLUMNS;\n    }\n};\n\n// isNonNegativeInteger\n\nconst isNonNegativeInteger = x => Number.isInteger(x) && x >= 0;\n\n// Does the item have all the shape properties?\n\nexport const hasShape = item =>\n    isNonNegativeInteger(item.x) &&\n    isNonNegativeInteger(item.y) &&\n    isNonNegativeInteger(item.w) &&\n    isNonNegativeInteger(item.h);\n\n// returns a rectangular grid block dimensioned with x, y, w, h in grid units.\n// based on a grid with 3 items across\nexport const getShape = i => {\n    if (!isNonNegativeInteger(i)) {\n        throw new Error('Invalid grid block number');\n    }\n\n    const col = i % NUMBER_OF_ITEM_COLS;\n    const row = Math.floor(i / NUMBER_OF_ITEM_COLS);\n    const itemWidth = Math.floor((GRID_COLUMNS - 1) / NUMBER_OF_ITEM_COLS);\n    const itemHeight = GRID_ROW_HEIGHT * 2;\n\n    return {\n        x: col * itemWidth,\n        y: row * itemHeight,\n        w: itemWidth,\n        h: itemHeight,\n    };\n};\n\n/**\n * Calculates the grid item's original height in pixels based\n * on the height in grid units. This calculation\n * is copied directly from react-grid-layout GridItem.js (calcPosition)\n *\n * @param {Object} item item containing shape (x, y, w, h)\n */\nconst getOriginalHeight = item => {\n    const originalHeight = Math.round(\n        GRID_ROW_HEIGHT * item.h + Math.max(0, item.h - 1) * MARGIN[1]\n    );\n\n    return { originalHeight };\n};\n\n/**\n * Returns an array of items containing the x, y, w, h dimensions\n * and the item's originalheight in pixels\n * @function\n * @param {Array} items\n * @returns {Array}\n */\n\nexport const withShape = items =>\n    items.map((item, index) => {\n        const itemWithShape = hasShape(item)\n            ? item\n            : Object.assign({}, item, getShape(index));\n\n        return Object.assign(\n            {},\n            itemWithShape,\n            getOriginalHeight(itemWithShape)\n        );\n    });\n\nexport const getGridItemDomId = id => `item-${id}`;\n\nexport function onItemResize(id) {\n    const el = orObject(document.querySelector(`#${getGridItemDomId(id)}`));\n    if (isFunction(el.setViewportSize))\n        setTimeout(\n            () => el.setViewportSize(el.clientWidth - 5, el.clientHeight - 5),\n            10\n        );\n}\n","import update from 'immutability-helper';\nimport { arrayToIdMap } from '../modules/util';\n\nexport const RECEIVED_MESSAGES = 'RECEIVED_MESSAGES';\n\nexport default (state = {}, action) => {\n    switch (action.type) {\n        case RECEIVED_MESSAGES: {\n            const conversations = arrayToIdMap(action.value);\n\n            const newState = update(state, { $merge: conversations });\n\n            return newState;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetMessagesRoot = state => state.messages;\n","import { getInstance } from 'd2';\n\nexport const getMessages = () => {\n    const fields =\n        'id,messageCount,lastUpdated,messageType,displayName,read,messages[id,read,sender[id,displayName],text,lastUpdated]';\n    const url = `/messageConversations?fields=${fields}&order=read:asc&pageSize=200`;\n    return getInstance()\n        .then(d2 => d2.Api.getApi().get(url))\n        .catch(error => console.log('Error:', error));\n};\n","export const RECEIVED_SNACKBAR_MESSAGE = 'RECEIVED_SNACKBAR_MESSAGE';\nexport const CLOSE_SNACKBAR = 'CLOSE_SNACKBAR';\n\nexport const DEFAULT_STATE_SNACKBAR = {\n    message: {},\n    duration: null,\n    open: false,\n};\n\nexport default (state = DEFAULT_STATE_SNACKBAR, action) => {\n    switch (action.type) {\n        case RECEIVED_SNACKBAR_MESSAGE: {\n            return { ...state, ...action.value };\n        }\n        case CLOSE_SNACKBAR: {\n            return DEFAULT_STATE_SNACKBAR;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetSnackbar = state => state.snackbar || DEFAULT_STATE_SNACKBAR;\n","import {\n    RECEIVED_SNACKBAR_MESSAGE,\n    CLOSE_SNACKBAR,\n} from '../reducers/snackbar';\n\nexport const acReceivedSnackbarMessage = value => ({\n    type: RECEIVED_SNACKBAR_MESSAGE,\n    value,\n});\n\nexport const acCloseSnackbar = () => ({\n    type: CLOSE_SNACKBAR,\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Snackbar from 'material-ui/Snackbar';\n\nimport { sGetSnackbar } from '../../reducers/snackbar';\nimport { acCloseSnackbar } from '../../actions/snackbar';\n\nconst LOADING_DASHBOARD = 'LOADING_DASHBOARD';\nexport const loadingDashboardMsg = { name: '', type: LOADING_DASHBOARD };\n\nconst SnackbarMessageContent = ({ message }) => {\n    if (typeof message === 'object') {\n        //future message types:  switch(message.type)\n        return (\n            <span>\n                Loading <span style={{ fontWeight: 800 }}>{message.name}</span>{' '}\n                dashboard\n            </span>\n        );\n    }\n    return message;\n};\n\nexport const SnackbarMessage = props => {\n    return (\n        <Snackbar\n            open={props.snackbarOpen}\n            message={<SnackbarMessageContent message={props.snackbarMessage} />}\n            autoHideDuration={props.snackbarDuration}\n            onRequestClose={props.onCloseSnackbar}\n        />\n    );\n};\n\nconst mapStateToProps = state => {\n    const { message, duration, open } = sGetSnackbar(state);\n    return {\n        snackbarOpen: open,\n        snackbarMessage: message,\n        snackbarDuration: duration,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        onCloseSnackbar: acCloseSnackbar,\n    }\n)(SnackbarMessage);\n","import isObject from 'lodash/isObject';\nimport { apiFetchFavorite, getMapFields } from '../../../api/metadata';\nimport {\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_REPORT,\n    EVENT_CHART,\n    itemTypeMap,\n    getPlugin,\n} from '../../../modules/itemTypes';\nimport { getBaseUrl, getWithoutId } from '../../../modules/util';\nimport { getGridItemDomId } from '../../ItemGrid/gridUtil';\n\nexport const THEMATIC_LAYER = 'thematic';\n\nexport const pluginIsAvailable = (item = {}, visualization = {}) => {\n    const type = visualization.activeType || item.type;\n\n    return !!getPlugin(type);\n};\n\nexport const extractFavorite = item => {\n    if (!isObject(item)) {\n        return null;\n    }\n\n    switch (item.type) {\n        case REPORT_TABLE:\n            return item.reportTable;\n        case CHART:\n            return item.chart;\n        case MAP:\n            return item.map;\n        case EVENT_REPORT:\n            return item.eventReport;\n        case EVENT_CHART:\n            return item.eventChart;\n        default:\n            return (\n                item.reportTable ||\n                item.chart ||\n                item.map ||\n                item.eventReport ||\n                item.eventChart ||\n                {}\n            );\n    }\n};\n\nexport const extractMapView = map =>\n    map.mapViews && map.mapViews.find(mv => mv.layer.includes(THEMATIC_LAYER));\n\nexport const loadPlugin = (plugin, config, credentials) => {\n    if (!(plugin && plugin.load)) {\n        return;\n    }\n\n    plugin.url = credentials.baseUrl;\n    plugin.loadingIndicator = true;\n    plugin.dashboard = true;\n    if (credentials.auth) {\n        plugin.auth = credentials.auth;\n    }\n    plugin.load(config);\n};\n\nexport const getId = item => extractFavorite(item).id;\nexport const getName = item => extractFavorite(item).name;\nexport const getDescription = item => extractFavorite(item).description;\nexport const getLink = (item, d2) => {\n    const baseUrl = getBaseUrl(d2);\n    const appUrl = itemTypeMap[item.type].appUrl(getId(item));\n\n    return `${baseUrl}/${appUrl}`;\n};\n\nexport const load = async (\n    item,\n    visualization,\n    credentials,\n    activeType,\n    filter = {}\n) => {\n    const config = {\n        ...visualization,\n        el: getGridItemDomId(item.id),\n    };\n\n    const type = activeType || item.type;\n    const plugin = getPlugin(type);\n\n    loadPlugin(plugin, config, credentials);\n};\n\nexport const fetch = async item => {\n    const fetchedFavorite = await apiFetchFavorite(getId(item), item.type, {\n        fields: item.type === MAP ? getMapFields() : null,\n    });\n\n    return fetchedFavorite;\n};\n\nexport const resize = item => {\n    const plugin = getPlugin(item.type);\n\n    if (plugin && plugin.resize) {\n        plugin.resize(getGridItemDomId(item.id));\n    }\n};\n\nexport const unmount = (item, activeType) => {\n    const plugin = getPlugin(activeType);\n\n    if (plugin && plugin.unmount) {\n        plugin.unmount(getGridItemDomId(item.id));\n    }\n};\n\nexport const getVisualizationConfig = (\n    visualization,\n    originalType,\n    activeType\n) => {\n    if (originalType === MAP && originalType !== activeType) {\n        const extractedMapView = extractMapView(visualization);\n\n        if (extractedMapView === undefined) {\n            return null;\n        }\n\n        return getWithoutId({\n            ...visualization,\n            ...extractedMapView,\n            mapViews: undefined,\n        });\n    }\n\n    return getWithoutId(visualization);\n};\n","import {\n    SET_SELECTED_ID,\n    SET_SELECTED_ISLOADING,\n    SET_SELECTED_SHOWDESCRIPTION,\n} from '../reducers/selected';\nimport {\n    RECEIVED_VISUALIZATION,\n    RECEIVED_ACTIVE_VISUALIZATION,\n} from '../reducers/visualizations';\nimport { sGetSelectedIsLoading } from '../reducers/selected';\nimport { sGetUserUsername } from '../reducers/user';\nimport { getCustomDashboards, sGetDashboardById } from '../reducers/dashboards';\nimport { apiFetchDashboard } from '../api/dashboards';\nimport { acSetDashboardItems, acAppendDashboards } from './dashboards';\nimport { withShape } from '../components/ItemGrid/gridUtil';\nimport { tGetMessages } from '../components/Item/MessagesItem/actions';\nimport { acReceivedSnackbarMessage, acCloseSnackbar } from './snackbar';\nimport { storePreferredDashboardId } from '../api/localStorage';\nimport { loadingDashboardMsg } from '../components/SnackbarMessage/SnackbarMessage';\nimport {\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_REPORT,\n    EVENT_CHART,\n    MESSAGES,\n} from '../modules/itemTypes';\nimport { extractFavorite } from '../components/Item/VisualizationItem/plugin';\nimport { orObject } from '../modules/util';\n\n// actions\n\nexport const acSetSelectedId = value => ({\n    type: SET_SELECTED_ID,\n    value,\n});\n\nexport const acSetSelectedIsLoading = value => ({\n    type: SET_SELECTED_ISLOADING,\n    value,\n});\n\nexport const acSetSelectedShowDescription = value => ({\n    type: SET_SELECTED_SHOWDESCRIPTION,\n    value,\n});\n\nexport const acReceivedVisualization = value => ({\n    type: RECEIVED_VISUALIZATION,\n    value,\n});\n\nexport const acReceivedActiveVisualization = (id, type, activeType) => {\n    const action = {\n        type: RECEIVED_ACTIVE_VISUALIZATION,\n        id,\n    };\n\n    if (activeType !== type) {\n        action.activeType = activeType;\n    }\n\n    return action;\n};\n\nexport const tLoadDashboard = id => async (dispatch, getState) => {\n    try {\n        const dash = await apiFetchDashboard(id);\n        dispatch(acAppendDashboards(dash));\n\n        return Promise.resolve(dash);\n    } catch (err) {\n        console.log('Error: ', err);\n        return err;\n    }\n};\n\n// thunks\nexport const tSetSelectedDashboardById = id => async (dispatch, getState) => {\n    dispatch(acSetSelectedIsLoading(true));\n\n    const snackbarTimeout = setTimeout(() => {\n        const dashboardName = orObject(sGetDashboardById(getState(), id))\n            .displayName;\n        if (sGetSelectedIsLoading(getState()) && dashboardName) {\n            loadingDashboardMsg.name = dashboardName;\n\n            dispatch(\n                acReceivedSnackbarMessage({\n                    message: loadingDashboardMsg,\n                    open: true,\n                })\n            );\n        }\n    }, 500);\n\n    const onSuccess = selected => {\n        const customDashboard = getCustomDashboards(selected)[0];\n\n        dispatch(\n            acSetDashboardItems(withShape(customDashboard.dashboardItems))\n        );\n\n        storePreferredDashboardId(sGetUserUsername(getState()), id);\n\n        // add visualizations to store\n        customDashboard.dashboardItems.forEach(item => {\n            switch (item.type) {\n                case REPORT_TABLE:\n                case CHART:\n                case MAP:\n                case EVENT_REPORT:\n                case EVENT_CHART:\n                    dispatch(acReceivedVisualization(extractFavorite(item)));\n                    break;\n                case MESSAGES:\n                    dispatch(tGetMessages(id));\n                    break;\n                default:\n                    break;\n            }\n        });\n\n        dispatch(acSetSelectedId(id));\n\n        dispatch(acSetSelectedIsLoading(false));\n\n        clearTimeout(snackbarTimeout);\n\n        dispatch(acCloseSnackbar());\n\n        return selected;\n    };\n\n    const onError = error => {\n        console.log('Error: ', error);\n        return error;\n    };\n\n    try {\n        const selected = await dispatch(tLoadDashboard(id));\n\n        return onSuccess(selected);\n    } catch (err) {\n        return onError(err);\n    }\n};\n","export const getPreferredDashboardId = username =>\n    localStorage.getItem(`dhis2.dashboard.current.${username}`) || undefined;\n\nexport const storePreferredDashboardId = (username, dashboardId) => {\n    localStorage.setItem(`dhis2.dashboard.current.${username}`, dashboardId);\n};\n","import { RECEIVED_MESSAGES } from '../../../reducers/messages';\nimport { getMessages } from '../../../api/messages';\n\nconst onError = (action, error) => {\n    console.log(`Error in action ${action}: ${error}`);\n    return error;\n};\n\nexport const receivedMessages = value => ({\n    type: RECEIVED_MESSAGES,\n    value,\n});\n\nexport const tGetMessages = dashboardItemId => async dispatch => {\n    try {\n        const messages = await getMessages();\n        const { messageConversations } = messages;\n\n        return dispatch(receivedMessages(messageConversations));\n    } catch (err) {\n        return onError('Get Messages', err);\n    }\n};\n","/** @module reducers/editDashboard */\nimport update from 'immutability-helper';\nimport isEmpty from 'lodash/isEmpty';\nimport { orArray, orObject } from '../modules/util';\n\nexport const RECEIVED_EDIT_DASHBOARD = 'RECEIVED_EDIT_DASHBOARD';\nexport const RECEIVED_NOT_EDITING = 'RECEIVED_NOT_EDITING';\nexport const START_NEW_DASHBOARD = 'START_NEW_DASHBOARD';\nexport const RECEIVED_TITLE = 'RECEIVED_TITLE';\nexport const RECEIVED_DESCRIPTION = 'RECEIVED_DESCRIPTION';\nexport const ADD_DASHBOARD_ITEM = 'ADD_DASHBOARD_ITEM';\nexport const REMOVE_DASHBOARD_ITEM = 'REMOVE_DASHBOARD_ITEM';\nexport const UPDATE_DASHBOARD_ITEM = 'UPDATE_DASHBOARD_ITEM';\nexport const RECEIVED_DASHBOARD_LAYOUT = 'RECEIVED_DASHBOARD_LAYOUT';\n\nexport const DEFAULT_STATE_EDIT_DASHBOARD = {};\nexport const NEW_DASHBOARD_STATE = {\n    id: '',\n    name: '',\n    access: {},\n    description: '',\n    dashboardItems: [],\n};\n\nexport default (state = DEFAULT_STATE_EDIT_DASHBOARD, action) => {\n    switch (action.type) {\n        case RECEIVED_EDIT_DASHBOARD:\n            const newState = {};\n            Object.keys(NEW_DASHBOARD_STATE).map(\n                k => (newState[k] = action.value[k])\n            );\n            return newState;\n        case RECEIVED_NOT_EDITING:\n            return DEFAULT_STATE_EDIT_DASHBOARD;\n        case START_NEW_DASHBOARD:\n            return NEW_DASHBOARD_STATE;\n        case RECEIVED_TITLE: {\n            return Object.assign({}, state, { name: action.value });\n        }\n        case RECEIVED_DESCRIPTION: {\n            return Object.assign({}, state, {\n                description: action.value,\n            });\n        }\n        case ADD_DASHBOARD_ITEM:\n            return update(state, {\n                dashboardItems: { $unshift: [action.value] },\n            });\n        case REMOVE_DASHBOARD_ITEM: {\n            const idToRemove = action.value;\n\n            const dashboardItemIndex = state.dashboardItems.findIndex(\n                item => item.id === idToRemove\n            );\n\n            if (dashboardItemIndex > -1) {\n                return update(state, {\n                    dashboardItems: {\n                        $splice: [[dashboardItemIndex, 1]],\n                    },\n                });\n            }\n\n            return state;\n        }\n        case RECEIVED_DASHBOARD_LAYOUT: {\n            const stateItems = orArray(state.dashboardItems);\n\n            const newStateItems = action.value.map(({ x, y, w, h, i }) => {\n                const stateItem = stateItems.find(si => si.id === i);\n\n                return Object.assign({}, stateItem, { w, h, x, y });\n            });\n\n            return update(state, {\n                dashboardItems: { $set: newStateItems },\n            });\n        }\n        case UPDATE_DASHBOARD_ITEM: {\n            const dashboardItem = action.value;\n\n            const dashboardItemIndex = state.dashboardItems.findIndex(\n                item => item.id === dashboardItem.id\n            );\n\n            if (dashboardItemIndex > -1) {\n                const newState = update(state, {\n                    dashboardItems: {\n                        $splice: [[dashboardItemIndex, 1, dashboardItem]],\n                    },\n                });\n\n                return newState;\n            }\n\n            return state;\n        }\n        default:\n            return state;\n    }\n};\n\n// root selector\n\nexport const sGetEditDashboardRoot = state => state.editDashboard;\n\n// selectors\n\nexport const sGetIsEditing = state => !isEmpty(state.editDashboard);\n\nexport const sGetIsNewDashboard = state => {\n    return (\n        !isEmpty(state.editDashboard) && sGetEditDashboardRoot(state).id === ''\n    );\n};\n\nexport const sGetEditDashboardItems = state =>\n    orObject(sGetEditDashboardRoot(state)).dashboardItems;\n","export const CLEAR_EDIT_ITEM_FILTERS = 'CLEAR_EDIT_ITEM_FILTERS';\nexport const REMOVE_EDIT_ITEM_FILTER = 'REMOVE_EDIT_ITEM_FILTER';\nexport const SET_EDIT_ITEM_FILTERS = 'SET_EDIT_ITEM_FILTERS';\n\nexport const DEFAULT_STATE_EDIT_ITEM_FILTERS = {};\n\nexport default (state = DEFAULT_STATE_EDIT_ITEM_FILTERS, action) => {\n    switch (action.type) {\n        case REMOVE_EDIT_ITEM_FILTER: {\n            const newState = { ...state };\n\n            delete newState[action.id];\n\n            return newState;\n        }\n        case SET_EDIT_ITEM_FILTERS: {\n            return action.filters;\n        }\n        case CLEAR_EDIT_ITEM_FILTERS: {\n            return DEFAULT_STATE_EDIT_ITEM_FILTERS;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetEditItemFiltersRoot = state => state.editItemFilters;\n\nexport const sGetEditFiltersKeys = state =>\n    Object.keys(sGetEditItemFiltersRoot(state));\n","export const CLEAR_ITEM_FILTERS = 'CLEAR_ITEM_FILTERS';\nexport const SET_ITEM_FILTERS = 'SET_ITEM_FILTERS';\nexport const ADD_ITEM_FILTER = 'ADD_ITEM_FILTER';\nexport const REMOVE_ITEM_FILTER = 'REMOVE_ITEM_FILTER';\n\nexport const DEFAULT_STATE_ITEM_FILTERS = {};\n\nexport default (state = DEFAULT_STATE_ITEM_FILTERS, action) => {\n    switch (action.type) {\n        case ADD_ITEM_FILTER: {\n            return {\n                ...state,\n                [action.filter.id]: action.filter.value,\n            };\n        }\n        case REMOVE_ITEM_FILTER: {\n            const newState = { ...state };\n\n            delete newState[action.id];\n\n            return newState;\n        }\n        case SET_ITEM_FILTERS: {\n            return action.filters;\n        }\n        case CLEAR_ITEM_FILTERS: {\n            return DEFAULT_STATE_ITEM_FILTERS;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetItemFiltersRoot = state => state.itemFilters;\n\nexport const sGetFiltersKeys = state => Object.keys(sGetItemFiltersRoot(state));\n","import {\n    ADD_ITEM_FILTER,\n    REMOVE_ITEM_FILTER,\n    SET_ITEM_FILTERS,\n    CLEAR_ITEM_FILTERS,\n} from '../reducers/itemFilters';\n\nexport const FILTER_ORG_UNIT = 'ou';\n\n// actions\n\nexport const acAddItemFilter = filter => ({\n    type: ADD_ITEM_FILTER,\n    filter,\n});\n\nexport const acRemoveItemFilter = id => ({\n    type: REMOVE_ITEM_FILTER,\n    id,\n});\n\nexport const acClearItemFilters = () => ({\n    type: CLEAR_ITEM_FILTERS,\n});\n\nexport const acSetItemFilters = filters => ({\n    type: SET_ITEM_FILTERS,\n    filters,\n});\n","import {\n    REMOVE_EDIT_ITEM_FILTER,\n    SET_EDIT_ITEM_FILTERS,\n    CLEAR_EDIT_ITEM_FILTERS,\n} from '../reducers/editItemFilters';\n\n// actions\n\nexport const acRemoveEditItemFilter = id => ({\n    type: REMOVE_EDIT_ITEM_FILTER,\n    id,\n});\n\nexport const acClearEditItemFilters = () => ({\n    type: CLEAR_EDIT_ITEM_FILTERS,\n});\n\nexport const acSetEditItemFilters = filters => ({\n    type: SET_EDIT_ITEM_FILTERS,\n    filters,\n});\n","import { getInstance } from 'd2';\n\nconst onError = error => console.log('Error: ', error);\n\nconst saveDashboard = (dashboard, data) => {\n    const { name, description, dashboardItems } = data;\n\n    dashboard.name = name;\n    dashboard.description = description;\n    dashboard.dashboardItems = dashboardItems.map(item =>\n        Object.assign({}, item, { width: item.w, height: item.h })\n    );\n\n    return dashboard.save().then(msg => msg.response.uid);\n};\n\nexport const updateDashboard = data => {\n    return getInstance()\n        .then(d2 => {\n            return d2.models.dashboards\n                .get(data.id)\n                .then(dashboard => saveDashboard(dashboard, data));\n        })\n        .catch(onError);\n};\n\nexport const postDashboard = data => {\n    return getInstance().then(d2 => {\n        const dashboard = d2.models.dashboards.create();\n\n        return saveDashboard(dashboard, data);\n    });\n};\n","import { generateUid } from 'd2/uid';\n\nimport {\n    RECEIVED_EDIT_DASHBOARD,\n    START_NEW_DASHBOARD,\n    RECEIVED_NOT_EDITING,\n    RECEIVED_TITLE,\n    RECEIVED_DESCRIPTION,\n    RECEIVED_DASHBOARD_LAYOUT,\n    ADD_DASHBOARD_ITEM,\n    UPDATE_DASHBOARD_ITEM,\n    REMOVE_DASHBOARD_ITEM,\n} from '../reducers/editDashboard';\nimport { sGetEditDashboardRoot } from '../reducers/editDashboard';\nimport { updateDashboard, postDashboard } from '../api/editDashboard';\nimport { tSetSelectedDashboardById } from '../actions/selected';\nimport { NEW_ITEM_SHAPE } from '../components/ItemGrid/gridUtil';\nimport {\n    itemTypeMap,\n    isSpacerType,\n    TEXT,\n    emptyTextItemContent,\n    isTextType,\n} from '../modules/itemTypes';\n\nconst onError = error => {\n    console.log('Error (Saving Dashboard): ', error);\n    return error;\n};\n\n// actions\n\nexport const acSetEditDashboard = (dashboard, items) => {\n    const val = {\n        ...dashboard,\n        dashboardItems: items,\n    };\n\n    return {\n        type: RECEIVED_EDIT_DASHBOARD,\n        value: val,\n    };\n};\n\nexport const acSetEditNewDashboard = () => ({\n    type: START_NEW_DASHBOARD,\n});\n\nexport const acClearEditDashboard = () => ({\n    type: RECEIVED_NOT_EDITING,\n});\n\nexport const acSetDashboardTitle = value => ({\n    type: RECEIVED_TITLE,\n    value,\n});\n\nexport const acSetDashboardDescription = value => ({\n    type: RECEIVED_DESCRIPTION,\n    value,\n});\n\nexport const acUpdateDashboardLayout = value => ({\n    type: RECEIVED_DASHBOARD_LAYOUT,\n    value,\n});\n\nexport const acAddDashboardItem = item => {\n    const type = item.type;\n    delete item.type;\n    const itemPropName = itemTypeMap[type].propName;\n\n    return {\n        type: ADD_DASHBOARD_ITEM,\n        value: {\n            id: generateUid(),\n            type,\n            [itemPropName]: item.content,\n            ...NEW_ITEM_SHAPE,\n        },\n    };\n};\n\nexport const acUpdateDashboardItem = item => ({\n    type: UPDATE_DASHBOARD_ITEM,\n    value: item,\n});\n\nexport const acRemoveDashboardItem = value => ({\n    type: REMOVE_DASHBOARD_ITEM,\n    value,\n});\n\n// thunks\n\nexport const tSaveDashboard = () => async (dispatch, getState) => {\n    const dashboard = sGetEditDashboardRoot(getState());\n\n    const dashboardItems = dashboard.dashboardItems.map(item => {\n        const text = isTextType(item)\n            ? item.text || emptyTextItemContent\n            : null;\n\n        const type = isSpacerType(item) ? TEXT : item.type;\n\n        return {\n            ...item,\n            ...(text ? { text } : {}),\n            type,\n        };\n    });\n\n    const dashboardToSave = {\n        ...dashboard,\n        dashboardItems,\n    };\n\n    try {\n        const dashboardId = dashboardToSave.id\n            ? await updateDashboard(dashboardToSave)\n            : await postDashboard(dashboardToSave);\n\n        dispatch(acClearEditDashboard());\n        await dispatch(tSetSelectedDashboardById(dashboardId));\n\n        return Promise.resolve(dashboardId);\n    } catch (error) {\n        onError(error);\n    }\n};\n","import {\n    SET_DASHBOARDS,\n    ADD_DASHBOARDS,\n    SET_DASHBOARD_STARRED,\n    SET_DASHBOARD_DISPLAY_NAME,\n    SET_DASHBOARD_ITEMS,\n} from '../reducers/dashboards';\nimport {\n    getCustomDashboards,\n    sGetDashboardById,\n    sGetDashboardsSortedByStarred,\n} from '../reducers/dashboards';\nimport { sGetUserUsername } from '../reducers/user';\nimport { tSetSelectedDashboardById, acSetSelectedId } from './selected';\nimport { sGetSelectedId } from '../reducers/selected';\nimport { sGetIsEditing } from '../reducers/editDashboard';\nimport { sGetEditItemFiltersRoot } from '../reducers/editItemFilters';\nimport { acSetItemFilters, acClearItemFilters } from './itemFilters';\nimport { acClearEditItemFilters } from './editItemFilters';\nimport { acClearEditDashboard } from './editDashboard';\nimport {\n    apiFetchDashboards,\n    apiStarDashboard,\n    apiDeleteDashboard,\n} from '../api/dashboards';\nimport { getPreferredDashboardId } from '../api/localStorage';\nimport { arrayToIdMap } from '../modules/util';\n\n// actions\n\nexport const acSetDashboards = dashboards => ({\n    type: SET_DASHBOARDS,\n    value: arrayToIdMap(getCustomDashboards(dashboards)),\n});\n\nexport const acAppendDashboards = dashboards => ({\n    type: ADD_DASHBOARDS,\n    value: arrayToIdMap(getCustomDashboards(dashboards)),\n});\n\nexport const acSetDashboardStarred = (dashboardId, isStarred) => ({\n    type: SET_DASHBOARD_STARRED,\n    dashboardId: dashboardId,\n    value: isStarred,\n});\n\nexport const acSetDashboardDisplayName = (dashboardId, value) => ({\n    type: SET_DASHBOARD_DISPLAY_NAME,\n    dashboardId,\n    value,\n});\n\nexport const acSetDashboardItems = value => ({\n    type: SET_DASHBOARD_ITEMS,\n    value,\n});\n\n// thunks\n\nexport const tFetchDashboards = () => async dispatch => {\n    const collection = await apiFetchDashboards();\n    dispatch(acSetDashboards(collection.toArray()));\n};\n\nexport const tSelectDashboard = id => async (dispatch, getState) => {\n    const onError = error => {\n        console.log('Error (apiFetchDashboards): ', error);\n        return error;\n    };\n\n    try {\n        const state = getState();\n\n        let dashboardToSelect = null;\n        if (id) {\n            dashboardToSelect = sGetDashboardById(state, id) || null;\n        } else {\n            const preferredId = getPreferredDashboardId(\n                sGetUserUsername(state)\n            );\n            const dash = sGetDashboardById(state, preferredId);\n            dashboardToSelect =\n                preferredId && dash\n                    ? dash\n                    : sGetDashboardsSortedByStarred(state)[0];\n        }\n\n        if (dashboardToSelect) {\n            dispatch(tSetSelectedDashboardById(dashboardToSelect.id));\n\n            if (dashboardToSelect.id === sGetSelectedId(state)) {\n                if (sGetIsEditing(state)) {\n                    // disable filters when switching to edit mode\n                    dispatch(acClearItemFilters());\n                } else {\n                    // enable filters when switching to view mode\n                    dispatch(acSetItemFilters(sGetEditItemFiltersRoot(state)));\n                }\n            } else {\n                // clear filters when switching dashboard\n                dispatch(acClearEditItemFilters());\n                dispatch(acClearItemFilters());\n            }\n        } else {\n            dispatch(acSetSelectedId(false));\n        }\n    } catch (err) {\n        return onError(err);\n    }\n};\n\nexport const tStarDashboard = (id, isStarred) => async (dispatch, getState) => {\n    const onSuccess = id => {\n        dispatch(acSetDashboardStarred(id, isStarred));\n        return id;\n    };\n\n    const onError = error => {\n        console.log('Error (apiStarDashboard): ', error);\n        return error;\n    };\n    try {\n        await apiStarDashboard(id, isStarred);\n        return onSuccess(id);\n    } catch (err) {\n        return onError(err);\n    }\n};\n\nexport const tDeleteDashboard = id => async (dispatch, getState) => {\n    try {\n        await apiDeleteDashboard(id);\n        dispatch(acClearEditDashboard());\n        dispatch(acSetSelectedId());\n        dispatch(acSetDashboardItems([]));\n\n        await dispatch(tFetchDashboards());\n\n        return Promise.resolve();\n    } catch (err) {\n        console.log('Error (deleteDashboard): ', err);\n        return err;\n    }\n};\n","/** @module reducers/controlBar */\nimport { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\n\nexport const SET_CONTROLBAR_USER_ROWS = 'SET_CONTROLBAR_USER_ROWS';\n\nexport const DEFAULT_STATE_CONTROLBAR_ROWS = 1;\n\nconst userRows = (state = DEFAULT_STATE_CONTROLBAR_ROWS, action) => {\n    switch (action.type) {\n        case SET_CONTROLBAR_USER_ROWS:\n            return validateReducer(action.value, DEFAULT_STATE_CONTROLBAR_ROWS);\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    userRows,\n});\n\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\nexport const sGetControlBarRoot = state => state.controlBar;\n\n// Selector dependency level 2\n\nexport const sGetControlBarUserRows = state =>\n    sGetControlBarRoot(state).userRows;\n","import { getInstance } from 'd2';\nimport { DEFAULT_STATE_CONTROLBAR_ROWS } from '../reducers/controlBar';\n\nconst NAMESPACE = 'dashboard';\nconst KEY = 'controlBarRows';\n\nconst hasNamespace = async d2 => await d2.currentUser.dataStore.has(NAMESPACE);\n\nconst getNamespace = async (d2, hasNamespace) =>\n    hasNamespace\n        ? await d2.currentUser.dataStore.get(NAMESPACE)\n        : await d2.currentUser.dataStore.create(NAMESPACE);\n\nexport const apiGetControlBarRows = async () => {\n    const d2 = await getInstance();\n    const namespace = await getNamespace(d2, await hasNamespace(d2));\n    const hasKey = namespace.keys && namespace.keys.find(key => key === KEY);\n\n    if (hasKey) {\n        return await namespace.get(KEY);\n    } else {\n        await apiPostControlBarRows(DEFAULT_STATE_CONTROLBAR_ROWS, namespace);\n        console.log(\n            '(These errors to /userDataStore/dashboard can be ignored)'\n        );\n        return DEFAULT_STATE_CONTROLBAR_ROWS;\n    }\n};\n\nexport const apiPostControlBarRows = async (rows, namespace) => {\n    const d2 = await getInstance();\n    const ns = namespace || (await getNamespace(d2, hasNamespace));\n\n    ns.set(KEY, rows);\n};\n","import { SET_CONTROLBAR_USER_ROWS } from '../reducers/controlBar';\nimport { apiGetControlBarRows } from '../api/controlBar';\n\n// actions\n\nexport const acSetControlBarUserRows = rows => ({\n    type: SET_CONTROLBAR_USER_ROWS,\n    value: rows,\n});\n\n// thunks\n\nexport const tSetControlBarRows = () => async (dispatch, getState) => {\n    const onSuccess = rows => {\n        dispatch(acSetControlBarUserRows(rows));\n    };\n\n    const onError = error => {\n        console.log('Error (apiGetControlBarRows): ', error);\n        return error;\n    };\n\n    try {\n        const controlBarRows = await apiGetControlBarRows();\n        return onSuccess(controlBarRows);\n    } catch (err) {\n        return onError(err);\n    }\n};\n","import { FIXED_DIMENSIONS } from '@dhis2/d2-ui-analytics';\n\nexport const SET_DIMENSIONS = 'SET_DIMENSIONS';\nexport const DEFAULT_DIMENSIONS = {\n    pe: FIXED_DIMENSIONS.pe,\n    ou: FIXED_DIMENSIONS.ou,\n};\n\nexport default (state = DEFAULT_DIMENSIONS, action) => {\n    switch (action.type) {\n        case SET_DIMENSIONS: {\n            return {\n                ...DEFAULT_DIMENSIONS,\n                ...action.value,\n            };\n        }\n        default:\n            return state;\n    }\n};\n\nexport const sGetDimensions = state => state.dimensions;\n","export const SET_SETTINGS = 'SET_SETTINGS';\nexport const ADD_SETTINGS = 'ADD_SETTINGS';\n\nexport const DEFAULT_SETTINGS = {\n    keyDateFormat: 'yyyy-MM-dd',\n    keyAnalysisRelativePeriod: 'LAST_12_MONTHS',\n    keyAnalysisDigitGroupSeparator: 'SPACE',\n    displayNameProperty: 'displayName',\n    uiLocale: 'en',\n    rootOrganisationUnit: {},\n};\n\nexport default (state = DEFAULT_SETTINGS, action) => {\n    switch (action.type) {\n        case SET_SETTINGS: {\n            return Object.assign({}, action.value);\n        }\n        case ADD_SETTINGS: {\n            return {\n                ...state,\n                ...action.value,\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// Selectors\n\nexport const sGetSettings = state => state.settings;\n\nexport const sGetSettingsDisplayNameProperty = state =>\n    sGetSettings(state).displayNameProperty;\n\nexport const sGetRootOrgUnit = state =>\n    sGetSettings(state).rootOrganisationUnit;\n\nexport const sGetRelativePeriod = state =>\n    sGetSettings(state).keyAnalysisRelativePeriod;\n\nexport const sGetUiLocale = state => sGetSettings(state).uiLocale;\n","import keyBy from 'lodash/keyBy';\nimport sortBy from 'lodash/sortBy';\nimport { SET_DIMENSIONS } from '../reducers/dimensions';\nimport { apiFetchDimensions } from '@dhis2/d2-ui-analytics';\nimport { sGetSettingsDisplayNameProperty } from '../reducers/settings';\n\nexport const acSetDimensions = dimensions => ({\n    type: SET_DIMENSIONS,\n    value: keyBy(sortBy(dimensions, [d => d.name.toLowerCase()]), 'id'),\n});\n\nexport const tSetDimensions = d2 => async (dispatch, getState) => {\n    const onSuccess = dimensions => {\n        dispatch(acSetDimensions(dimensions));\n    };\n\n    const onError = error => {\n        console.log('Error (apiFetchDimensions): ', error);\n        return error;\n    };\n\n    try {\n        const displayNameProp = sGetSettingsDisplayNameProperty(getState());\n        const dimensions = await apiFetchDimensions(d2, displayNameProp);\n\n        // filter out CATEGORY that are not of type ATTRIBUTE\n        const filteredDimensions = dimensions.filter(\n            dim =>\n                dim.dimensionType !== 'CATEGORY' ||\n                (dim.dimensionType === 'CATEGORY' &&\n                    dim.dataDimensionType === 'ATTRIBUTE')\n        );\n        return onSuccess(filteredDimensions);\n    } catch (err) {\n        return onError(err);\n    }\n};\n","const lightGrey = '#ECEFF1';\nconst lightMediumGrey = '#9E9E9E';\nconst mediumGrey = '#393939';\nconst charcoalGrey = '#8C8C8C';\nconst darkGrey = '#494949';\nconst muiDefaultGrey = '#757575';\n\nconst red = '#E53935';\n\nconst paleBlue = '#E3F2FD';\nconst lightBlue = '#EAF4FF'; //'#63A4FF'\nconst royalBlue = '#004BA0';\n\nconst mint = '#B2DFDB';\nconst lightGreen = '#48A999';\nconst mediumGreen = '#00796B';\nconst darkGreen = '#004C40';\n\nconst paleYellow = '#FFF8E1';\n\nconst white = '#FFFFFF';\nconst black = 'rgba(0,0,0,0.87)';\n\nexport const colors = {\n    lightGrey,\n    lightMediumGrey,\n    mediumGrey,\n    charcoalGrey,\n    darkGrey,\n    muiDefaultGrey,\n    red,\n    paleBlue,\n    lightBlue,\n    royalBlue,\n    mint,\n    lightGreen,\n    mediumGreen,\n    darkGreen,\n    paleYellow,\n    white,\n    black,\n};\n","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport { colors } from '../../modules/colors';\n\nexport const SHOWMORE_BAR_HEIGHT = 16;\n\nconst styles = {\n    showMore: {\n        color: colors.royalBlue,\n        cursor: 'pointer',\n        fontSize: 11,\n        fontWeight: 700,\n        height: SHOWMORE_BAR_HEIGHT,\n        paddingTop: 5,\n        textTransform: 'uppercase',\n        visibility: 'visible',\n    },\n};\n\nexport const ShowMoreButton = ({ onClick, isMaxHeight, classes }) => (\n    <div style={{ textAlign: 'center' }}>\n        <div className={classes.showMore} onClick={onClick}>\n            {isMaxHeight ? i18n.t('Show less') : i18n.t('Show more')}\n        </div>\n    </div>\n);\n\nexport default withStyles(styles)(ShowMoreButton);\n","import { SHOWMORE_BAR_HEIGHT } from './ShowMoreButton';\n\nexport const CONTROL_BAR_ROW_HEIGHT = 36;\nexport const FIRST_ROW_PADDING_HEIGHT = 10;\nexport const MIN_ROW_COUNT = 1;\n\nexport const HEADERBAR_HEIGHT = 48;\n\nconst CONTROL_BAR_OUTER_HEIGHT_DIFF =\n    FIRST_ROW_PADDING_HEIGHT + SHOWMORE_BAR_HEIGHT - 2; // 2 pixel \"adjustment\"\n\nexport const getRowsHeight = rows => {\n    return rows * CONTROL_BAR_ROW_HEIGHT;\n};\n\nexport const getNumRowsFromHeight = height => {\n    return Math.floor(\n        (height - CONTROL_BAR_OUTER_HEIGHT_DIFF) / CONTROL_BAR_ROW_HEIGHT\n    );\n};\n\nexport const getTopOffset = rows => {\n    return HEADERBAR_HEIGHT + getControlBarHeight(rows, false);\n};\n\nexport const getControlBarHeight = rows => {\n    return getRowsHeight(rows) + CONTROL_BAR_OUTER_HEIGHT_DIFF;\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { colors } from '@dhis2/ui-core';\nimport { HEADERBAR_HEIGHT } from './controlBarDimensions';\n\nimport classes from './styles/ControlBar.module.css';\n\nconst DRAG_HANDLE_HEIGHT = 7;\n\nclass ControlBar extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            dragging: false,\n        };\n    }\n\n    onStartDrag = () => {\n        this.setState({ dragging: true });\n        window.addEventListener('mousemove', this.onDrag);\n        window.addEventListener('mouseup', this.onEndDrag);\n    };\n\n    onDrag = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const newHeight = event.clientY;\n\n        if (\n            this.props.onChangeHeight &&\n            newHeight !== this.props.height &&\n            newHeight > 0\n        ) {\n            requestAnimationFrame(() => {\n                this.props.onChangeHeight(newHeight);\n            });\n        }\n    };\n\n    onEndDrag = () => {\n        this.setState({ dragging: false });\n        window.removeEventListener('mousemove', this.onDrag);\n        window.removeEventListener('mouseup', this.onEndDrag);\n\n        if (this.props.onEndDrag) {\n            this.props.onEndDrag();\n        }\n    };\n\n    renderDragHandle() {\n        return typeof this.props.onChangeHeight === 'function' ? (\n            <div\n                className={classes.draghandle}\n                style={{ height: DRAG_HANDLE_HEIGHT }}\n                onMouseDown={this.onStartDrag}\n            />\n        ) : null;\n    }\n\n    render() {\n        const height = Math.max(this.props.height, 0) + DRAG_HANDLE_HEIGHT;\n\n        const rootStyle = Object.assign(\n            {\n                height,\n                top: HEADERBAR_HEIGHT,\n                backgroundColor: this.props.editMode\n                    ? colors.yellow050\n                    : colors.white,\n                paddingBottom: DRAG_HANDLE_HEIGHT,\n            },\n            // Disable animations while dragging\n            this.state.dragging ? { transition: 'none' } : {}\n        );\n\n        return (\n            <div style={rootStyle} className={classes.root}>\n                <div className={classes.content}>{this.props.children}</div>\n                {this.renderDragHandle()}\n            </div>\n        );\n    }\n}\n\nControlBar.propTypes = {\n    /**\n     * The height of the control bar in number of lines. Must be a positive integer.\n     */\n    height: PropTypes.number.isRequired,\n\n    /**\n     * If true, the background color of the control bar changes to indicate that edit mode is active.\n     */\n    editMode: PropTypes.bool.isRequired,\n\n    /**\n     * Callback function that is called when the control bar is resized.\n     * The callback receives one argument: The new height in pixels.\n     *\n     * If no callback is specified the control bar will not have a drag handle.\n     */\n    onChangeHeight: PropTypes.func,\n\n    /**\n     * Callback function that is called when the control bar is dropped after being dragged.\n     * The callback receives one argument: The new height in pixels.\n     *\n     * Ignored if no \"onChangeHeight\" function is provided.\n     */\n    onEndDrag: PropTypes.func,\n\n    /**\n     * The contents of the control bar.\n     */\n    children: PropTypes.node.isRequired,\n};\n\nControlBar.defaultProps = {\n    onChangeHeight: null,\n    onEndDrag: null,\n};\n\nexport default ControlBar;\n","import { getInstance } from 'd2';\n\nexport const apiPostDataStatistics = async (eventType, id) => {\n    const d2 = await getInstance();\n    const url = `dataStatistics?eventType=${eventType}&favorite=${id}`;\n\n    d2.Api.getApi().post(url);\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport MuiChip from 'material-ui/Chip';\nimport Avatar from 'material-ui/Avatar';\nimport IconStar from '@material-ui/icons/Star';\nimport { Link } from 'react-router-dom';\nimport debounce from 'lodash/debounce';\n\nimport { colors } from '../../modules/colors';\nimport { apiPostDataStatistics } from '../../api/dataStatistics';\n\nconst chipTheme = {\n    default: {\n        labelColor: colors.black,\n        backgroundColor: colors.lightGrey,\n    },\n    primary: {\n        labelColor: colors.black,\n        backgroundColor: colors.lightGrey,\n    },\n    accent: {\n        labelColor: colors.white,\n        backgroundColor: colors.mediumGreen,\n    },\n};\n\nconst d = '30px';\n\nconst avatar = selected => {\n    const avatarProps = {\n        color: colors.white,\n        backgroundColor: selected ? 'transparent' : colors.lightMediumGrey,\n        style: { height: d, width: d },\n    };\n\n    return <Avatar icon={<IconStar />} {...avatarProps} />;\n};\n\nconst DashboardItemChip = ({ starred, selected, label, dashboardId }) => {\n    const chipColorProps = selected\n        ? chipTheme.accent\n        : starred\n        ? chipTheme.primary\n        : chipTheme.default;\n\n    const labelStyle = { fontSize: '14px', fontWeight: 400, lineHeight: d };\n    const style = { margin: 3, height: d, cursor: 'pointer' };\n\n    const props = {\n        style,\n        labelStyle,\n        ...chipColorProps,\n    };\n\n    return (\n        <Link\n            style={{\n                display: 'inline-block',\n                verticalAlign: 'top',\n                textDecoration: 'none',\n            }}\n            to={`/${dashboardId}`}\n            onClick={debounce(\n                () => apiPostDataStatistics('DASHBOARD_VIEW', dashboardId),\n                500\n            )}\n        >\n            <MuiChip {...props}>\n                {starred ? avatar(selected) : null}\n                {label}\n            </MuiChip>\n        </Link>\n    );\n};\n\nDashboardItemChip.propTypes = {\n    starred: PropTypes.bool.isRequired,\n    selected: PropTypes.bool.isRequired,\n    label: PropTypes.string.isRequired,\n};\n\nexport default DashboardItemChip;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport IconButton from 'material-ui/IconButton';\nimport IconAdd from 'material-ui/svg-icons/content/add-circle';\nimport { colors } from '../modules/colors';\n\nconst styles = {\n    button: {\n        width: 36,\n        height: 36,\n        padding: 0,\n    },\n    iconStyle: {\n        width: 32,\n        height: 32,\n    },\n    icon: IconAdd,\n    iconColor: colors.mediumGreen,\n};\n\nconst D2IconButton = props => (\n    <IconButton\n        style={styles.button}\n        iconStyle={Object.assign({}, styles.iconStyle, props.iconStyle)}\n        onClick={props.onClick}\n    >\n        {props.icon || <IconAdd color={styles.iconColor} />}\n    </IconButton>\n);\n\nD2IconButton.propTypes = {\n    style: PropTypes.object,\n    iconStyle: PropTypes.object,\n    icon: PropTypes.object,\n    iconColor: PropTypes.string,\n    onClick: PropTypes.func,\n};\n\nD2IconButton.defaultProps = {\n    style: null,\n    iconStyle: null,\n    icon: null,\n    iconColor: '',\n    onClick: Function.prototype,\n};\n\nexport default D2IconButton;\n","import { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\n\nexport const SET_DASHBOARDS_FILTER_NAME = 'SET_DASHBOARDS_FILTER_NAME';\nexport const SET_DASHBOARDS_FILTER_OWNER = 'SET_DASHBOARDS_FILTER_OWNER';\nexport const SET_DASHBOARDS_FILTER_ORDER = 'SET_DASHBOARDS_FILTER_ORDER';\n\nexport const ownerData = [\n    { id: 'ALL', value: 'All users' },\n    { id: 'ME', value: 'Created by me' },\n    { id: 'OTHERS', value: 'Created by others' },\n];\n\nexport const orderData = [\n    { id: 'NAME:ASC', value: 'Name (asc)' },\n    { id: 'NAME:ASC', value: 'Name (desc)' },\n    { id: 'ITEMS:ASC', value: 'Number of items (asc)' },\n    { id: 'ITEMS:ASC', value: 'Number of items (desc)' },\n    { id: 'CREATED:ASC', value: 'Created date (asc)' },\n    { id: 'CREATED:ASC', value: 'Created date (desc)' },\n];\n\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_NAME = '';\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_OWNER = ownerData[0].id;\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_ORDER = orderData[0].id;\n\nconst name = (state = DEFAULT_STATE_DASHBOARDS_FILTER_NAME, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_NAME:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_NAME\n            );\n        default:\n            return state;\n    }\n};\n\nconst owner = (state = DEFAULT_STATE_DASHBOARDS_FILTER_OWNER, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_OWNER:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_NAME\n            );\n        default:\n            return state;\n    }\n};\n\nconst order = (state = DEFAULT_STATE_DASHBOARDS_FILTER_ORDER, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_ORDER:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_ORDER\n            );\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    name,\n    owner,\n    order,\n});\n\n// selectors\n\nexport const sGetDashboardsFilterRoot = state => state.dashboardsFilter;\n\n// selector dependency level 2\n\nexport const sGetFilterName = state => sGetDashboardsFilterRoot(state).name;\nexport const sGetFilterOwner = state => sGetDashboardsFilterRoot(state).owner;\nexport const sGetFilterOrder = state => sGetDashboardsFilterRoot(state).order;\n","import React, { Component, Fragment } from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport TextField from 'material-ui/TextField';\nimport IconButton from 'material-ui/IconButton';\nimport IconClear from '@material-ui/icons/Clear';\nimport isEmpty from 'd2-utilizr/lib/isEmpty';\n\nimport { DEFAULT_STATE_DASHBOARDS_FILTER_NAME } from '../../reducers/dashboardsFilter';\n\nexport const KEYCODE_ENTER = 13;\nexport const KEYCODE_ESCAPE = 27;\n\nconst styles = {\n    filterField: {\n        fontSize: '14px',\n        width: '200px',\n        height: '30px',\n        top: '-2px',\n    },\n    filterFieldInput: {\n        top: '-9px',\n        left: '1px',\n    },\n    filterFieldUnderline: {\n        bottom: '10px',\n    },\n    filterFieldUnderlineFocus: {\n        borderColor: '#aaa',\n        borderWidth: '1px',\n    },\n    clearButton: {\n        width: '20px',\n        height: '24px',\n        padding: 0,\n        top: '-5px',\n        left: '-18px',\n    },\n    clearButtonIcon: {\n        width: '16px',\n        height: '16px',\n    },\n};\n\nexport class Filter extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            value: DEFAULT_STATE_DASHBOARDS_FILTER_NAME,\n        };\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setState({\n            value: nextProps.name,\n        });\n    }\n\n    setFilterValue = event => {\n        event.preventDefault();\n\n        this.props.onChangeName(event.target.value);\n    };\n\n    handleKeyUp = event => {\n        switch (event.keyCode) {\n            case KEYCODE_ENTER:\n                this.props.onKeypressEnter();\n                break;\n            case KEYCODE_ESCAPE:\n                this.props.onChangeName();\n                break;\n            default:\n                break;\n        }\n    };\n\n    render() {\n        return (\n            <TextField\n                className=\"FilterField\"\n                value={this.state.value}\n                onChange={this.setFilterValue}\n                onKeyUp={this.handleKeyUp}\n                hintText={i18n.t('Search for a dashboard')}\n                style={styles.filterField}\n                inputStyle={styles.filterFieldInput}\n                hintStyle={styles.filterFieldHint}\n                underlineStyle={styles.filterFieldUnderline}\n                underlineFocusStyle={styles.filterFieldUnderlineFocus}\n            />\n        );\n    }\n}\n\nFilter.propTypes = {\n    name: PropTypes.string,\n    onChangeName: PropTypes.func,\n};\n\nFilter.defaultProps = {\n    name: '',\n    onChangeName: Function.prototype,\n};\n\nexport const ClearButton = ({ name, onChangeName }) => {\n    const disabled = isEmpty(name);\n\n    const clearFilter = () => onChangeName();\n\n    return (\n        <IconButton\n            style={Object.assign({}, styles.clearButton, {\n                opacity: disabled ? 0 : 1,\n            })}\n            iconStyle={styles.clearButtonIcon}\n            onClick={clearFilter}\n            disabled={disabled}\n        >\n            <IconClear color=\"action\" />\n        </IconButton>\n    );\n};\n\nClearButton.propTypes = {\n    name: PropTypes.string.isRequired,\n    onChangeName: PropTypes.func.isRequired,\n};\n\nexport default props => (\n    <Fragment>\n        <Filter {...props} />\n        <ClearButton {...props} />\n    </Fragment>\n);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport ControlBar from './ControlBar';\nimport arraySort from 'd2-utilizr/lib/arraySort';\n\nimport Chip from './DashboardItemChip';\nimport D2IconButton from '../../widgets/D2IconButton';\nimport Filter from './Filter';\nimport ShowMoreButton from './ShowMoreButton';\nimport {\n    FIRST_ROW_PADDING_HEIGHT,\n    MIN_ROW_COUNT,\n    getRowsHeight,\n    getControlBarHeight,\n    getNumRowsFromHeight,\n} from './controlBarDimensions';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { sGetAllDashboards } from '../../reducers/dashboards';\nimport { sGetFilterName } from '../../reducers/dashboardsFilter';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { acSetControlBarUserRows } from '../../actions/controlBar';\nimport { acSetFilterName } from '../../actions/dashboardsFilter';\nimport { orObject, orArray } from '../../modules/util';\nimport { apiPostControlBarRows } from '../../api/controlBar';\n\nimport classes from './styles/DashboardsBar.module.css';\n\nexport const MAX_ROW_COUNT = 10;\n\nexport class DashboardsBar extends Component {\n    state = {\n        rows: MIN_ROW_COUNT,\n    };\n\n    setInitialDashboardState = rows => {\n        this.setState({ rows, isMaxHeight: rows === MAX_ROW_COUNT });\n    };\n\n    componentDidMount() {\n        this.setInitialDashboardState(this.props.userRows);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setInitialDashboardState(nextProps.userRows);\n    }\n\n    onChangeHeight = newHeight => {\n        const adjustedHeight = newHeight - 52; // don't rush the transition to a bigger row count\n        const newRows = Math.max(\n            MIN_ROW_COUNT,\n            getNumRowsFromHeight(adjustedHeight)\n        );\n\n        if (newRows !== this.state.rows) {\n            const newRowCount = Math.min(newRows, MAX_ROW_COUNT);\n\n            this.props.onChangeHeight(newRowCount);\n        }\n    };\n\n    onEndDrag = () => {\n        return apiPostControlBarRows(this.state.rows);\n    };\n\n    onToggleMaxHeight = () => {\n        const rows =\n            this.state.rows === MAX_ROW_COUNT\n                ? this.props.userRows\n                : MAX_ROW_COUNT;\n\n        this.setState({ rows, isMaxHeight: !this.state.isMaxHeight });\n    };\n\n    onSelectDashboard = () => {\n        this.props.history.push(`/${this.props.dashboards[0].id}`);\n    };\n\n    render() {\n        const { dashboards, name, selectedId, onChangeFilterName } = this.props;\n\n        const rowCount = this.state.isMaxHeight\n            ? MAX_ROW_COUNT\n            : this.state.rows;\n        const controlBarHeight = getControlBarHeight(rowCount);\n        const contentWrapperStyle = {\n            padding: `${FIRST_ROW_PADDING_HEIGHT}px 6px 0 6px`,\n            overflowY: this.state.isMaxHeight ? 'auto' : 'hidden',\n            height: getRowsHeight(rowCount) + FIRST_ROW_PADDING_HEIGHT,\n        };\n\n        return (\n            <ControlBar\n                height={controlBarHeight}\n                onChangeHeight={this.onChangeHeight}\n                onEndDrag={this.onEndDrag}\n                editMode={false}\n            >\n                <div style={contentWrapperStyle}>\n                    <div className={classes.leftControls}>\n                        <Link\n                            style={{\n                                display: 'inline-block',\n                                textDecoration: 'none',\n                                marginRight: 10,\n                            }}\n                            to={'/new'}\n                        >\n                            <D2IconButton />\n                        </Link>\n                        <Filter\n                            name={name}\n                            onChangeName={onChangeFilterName}\n                            onKeypressEnter={this.onSelectDashboard}\n                        />\n                    </div>\n                    {orArray(dashboards).map(dashboard => (\n                        <Chip\n                            key={dashboard.id}\n                            label={dashboard.displayName}\n                            starred={dashboard.starred}\n                            dashboardId={dashboard.id}\n                            selected={dashboard.id === selectedId}\n                        />\n                    ))}\n                </div>\n                {this.props.userRows !== MAX_ROW_COUNT ? (\n                    <ShowMoreButton\n                        onClick={this.onToggleMaxHeight}\n                        isMaxHeight={this.state.isMaxHeight}\n                    />\n                ) : null}\n            </ControlBar>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    dashboards: sGetAllDashboards(state),\n    name: sGetFilterName(state),\n    userRows: sGetControlBarUserRows(state),\n    selectedId: sGetSelectedId(state),\n});\n\nconst mapDispatchToProps = {\n    onChangeHeight: acSetControlBarUserRows,\n    onChangeFilterName: acSetFilterName,\n};\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const dashboards = Object.values(orObject(stateProps.dashboards));\n    const displayDashboards = arraySort(\n        dashboards.filter(d =>\n            d.displayName.toLowerCase().includes(stateProps.name.toLowerCase())\n        ),\n        'ASC',\n        'displayName'\n    );\n\n    return {\n        ...stateProps,\n        ...ownProps,\n        ...dispatchProps,\n        dashboards: [\n            ...displayDashboards.filter(d => d.starred),\n            ...displayDashboards.filter(d => !d.starred),\n        ],\n    };\n};\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps,\n        mergeProps\n    )(DashboardsBar)\n);\n","import {\n    SET_DASHBOARDS_FILTER_NAME,\n    SET_DASHBOARDS_FILTER_OWNER,\n    SET_DASHBOARDS_FILTER_ORDER,\n} from '../reducers/dashboardsFilter';\n\n// actions\n\nexport const acSetFilterName = value => ({\n    type: SET_DASHBOARDS_FILTER_NAME,\n    value,\n});\n\nexport const acSetFilterOwner = value => ({\n    type: SET_DASHBOARDS_FILTER_OWNER,\n    value,\n});\n\nexport const acSetFilterOrder = value => ({\n    type: SET_DASHBOARDS_FILTER_ORDER,\n    value,\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport {\n    getTopOffset,\n    MIN_ROW_COUNT,\n} from '../ControlBar/controlBarDimensions';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\n\nconst DashboardVerticalOffset = props => {\n    const rows = props.editMode ? MIN_ROW_COUNT : props.userRows;\n    const marginTop = getTopOffset(rows);\n\n    return <div className=\"page-container-top-margin\" style={{ marginTop }} />;\n};\n\nconst mapStateToProps = state => ({\n    userRows: sGetControlBarUserRows(state),\n});\n\nexport default connect(mapStateToProps)(DashboardVerticalOffset);\n","import i18n from '@dhis2/d2-i18n';\nimport {\n    itemTypeMap,\n    spacerContent,\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_CHART,\n    EVENT_REPORT,\n    USERS,\n    REPORTS,\n    RESOURCES,\n    APP,\n    MESSAGES,\n    TEXT,\n    SPACER,\n} from '../../modules/itemTypes';\n\nexport const singleItems = [\n    {\n        id: 'additional',\n        header: 'Additional items',\n        items: [\n            {\n                type: TEXT,\n                name: i18n.t('Text box'),\n                content: '',\n            },\n            {\n                type: MESSAGES,\n                name: i18n.t('Messages'),\n                content: 'true',\n            },\n            {\n                type: SPACER,\n                name: i18n.t('Spacer'),\n                content: spacerContent,\n            },\n        ],\n    },\n];\n\nexport const listItems = [\n    {\n        id: REPORT_TABLE,\n        title: itemTypeMap[REPORT_TABLE].pluralTitle,\n    },\n    {\n        id: CHART,\n        title: itemTypeMap[CHART].pluralTitle,\n    },\n    { id: MAP, title: itemTypeMap[MAP].pluralTitle },\n    {\n        id: EVENT_REPORT,\n        title: itemTypeMap[EVENT_REPORT].pluralTitle,\n    },\n    {\n        id: EVENT_CHART,\n        title: itemTypeMap[EVENT_CHART].pluralTitle,\n    },\n    {\n        id: USERS,\n        title: itemTypeMap[USERS].pluralTitle,\n    },\n    {\n        id: REPORTS,\n        title: itemTypeMap[REPORTS].pluralTitle,\n    },\n    {\n        id: RESOURCES,\n        title: itemTypeMap[RESOURCES].pluralTitle,\n    },\n    { id: APP, title: itemTypeMap[APP].pluralTitle },\n];\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport Divider from 'material-ui/Divider';\nimport { List, ListItem } from 'material-ui/List';\nimport Button from '@dhis2/d2-ui-core/button/Button';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport { tAddListItemContent } from './actions';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\nimport { sGetEditDashboardRoot } from '../../reducers/editDashboard';\nimport {\n    getItemUrl,\n    getItemIcon,\n    APP,\n    CHART,\n    EVENT_CHART,\n    REPORT_TABLE,\n    EVENT_REPORT,\n    MAP,\n    REPORTS,\n    RESOURCES,\n    USERS,\n} from '../../modules/itemTypes';\nimport { colors } from '../../modules/colors';\n\nclass ItemSelectList extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seeMore: false,\n        };\n    }\n\n    addItem = item => () => {\n        const {\n            type,\n            dashboardId,\n            acAddDashboardItem,\n            tAddListItemContent,\n        } = this.props;\n\n        const newItem = {\n            id: item.id,\n            name: item.displayName || item.name,\n        };\n\n        // special handling for ListItem types\n        if (type.match(/(REPORTS|RESOURCES|USERS)/)) {\n            tAddListItemContent(dashboardId, type, newItem);\n        } else if (type === APP) {\n            acAddDashboardItem({ type, content: item.key });\n        } else {\n            acAddDashboardItem({ type, content: newItem });\n        }\n    };\n\n    toggleSeeMore = () => {\n        this.setState({ seeMore: !this.state.seeMore });\n\n        this.props.onChangeItemsLimit(this.props.type);\n    };\n\n    render() {\n        return (\n            <Fragment>\n                <div\n                    style={{\n                        display: 'flex',\n                        justifyContent: 'space-between',\n                        paddingLeft: '16px',\n                    }}\n                >\n                    <h3>{this.props.title}</h3>\n                    <Button\n                        color=\"primary\"\n                        style={{ textTransform: 'uppercase' }}\n                        onClick={this.toggleSeeMore}\n                    >\n                        {`${i18n.t('See')} ${\n                            this.state.seeMore\n                                ? i18n.t('fewer')\n                                : i18n.t('more')\n                        } ${this.props.title}`}\n                    </Button>\n                </div>\n                <Divider />\n                <List>\n                    {this.props.items.map(item => {\n                        const itemUrl = getItemUrl(\n                            this.props.type,\n                            item,\n                            this.context.d2\n                        );\n\n                        const ItemIcon = getItemIcon(this.props.type);\n\n                        return (\n                            <ListItem // apps don't have item.id\n                                key={item.id || item.key}\n                                leftIcon={\n                                    <ItemIcon\n                                        style={{\n                                            margin: '6px',\n                                            fill: colors.muiDefaultGrey,\n                                        }}\n                                    />\n                                }\n                                innerDivStyle={{ padding: '0px 0px 0px 42px' }}\n                                hoverColor=\"transparent\"\n                                primaryText={\n                                    <p\n                                        style={{\n                                            display: 'flex',\n                                            alignItems: 'center',\n                                            justifyContent: 'flex-start',\n                                            margin: 0,\n                                        }}\n                                    >\n                                        {item.displayName || item.name}\n                                        <Button\n                                            color=\"primary\"\n                                            onClick={this.addItem(item)}\n                                            style={{\n                                                marginLeft: '5px',\n                                                marginRight: '5px',\n                                            }}\n                                        >\n                                            + ADD\n                                        </Button>\n                                        {itemUrl && (\n                                            <a\n                                                target=\"_blank\"\n                                                rel=\"noopener noreferrer\"\n                                                href={itemUrl}\n                                                style={{ display: 'flex' }}\n                                            >\n                                                <LaunchIcon\n                                                    style={{\n                                                        width: '16px',\n                                                        height: '16px',\n                                                        fill:\n                                                            colors.muiDefaultGrey,\n                                                    }}\n                                                />\n                                            </a>\n                                        )}\n                                    </p>\n                                }\n                            />\n                        );\n                    })}\n                </List>\n            </Fragment>\n        );\n    }\n}\n\nItemSelectList.propTypes = {\n    type: PropTypes.oneOf([\n        APP,\n        CHART,\n        EVENT_CHART,\n        REPORT_TABLE,\n        EVENT_REPORT,\n        MAP,\n        REPORTS,\n        RESOURCES,\n        USERS,\n    ]).isRequired,\n    title: PropTypes.string.isRequired,\n    items: PropTypes.array.isRequired,\n    onChangeItemsLimit: PropTypes.func.isRequired,\n};\n\nItemSelectList.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nexport default connect(\n    state => ({\n        dashboardId: sGetEditDashboardRoot(state).id,\n    }),\n    {\n        acAddDashboardItem,\n        tAddListItemContent,\n    }\n)(ItemSelectList);\n","import { sGetEditDashboardRoot } from '../../reducers/editDashboard';\nimport { itemTypeMap } from '../../modules/itemTypes';\nimport {\n    acAddDashboardItem,\n    acUpdateDashboardItem,\n} from '../../actions/editDashboard';\n\nexport const tAddListItemContent = (dashboardId, type, content) => (\n    dispatch,\n    getState\n) => {\n    const state = getState();\n    const listItemType = itemTypeMap[type].propName;\n    const dashboardItems = sGetEditDashboardRoot(state).dashboardItems;\n    const dashboardItemIndex = dashboardItems.findIndex(\n        item => item.type === type\n    );\n    let dashboardItem;\n\n    // Reports/Resources/Users dashboard item type already present in dashboard\n    if (dashboardItemIndex > -1) {\n        dashboardItem = dashboardItems[dashboardItemIndex];\n        dashboardItem[listItemType].push(content);\n\n        dispatch(acUpdateDashboardItem(dashboardItem));\n    } else {\n        dashboardItem = {\n            type: type,\n            content: [content],\n        };\n\n        dispatch(acAddDashboardItem(dashboardItem));\n    }\n};\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport Divider from 'material-ui/Divider';\nimport { List, ListItem } from 'material-ui/List';\nimport Button from '@dhis2/d2-ui-core/button/Button';\nimport { getItemIcon } from '../../modules/itemTypes';\n\nimport { acAddDashboardItem } from '../../actions/editDashboard';\n\nconst SingleItem = ({ item, onAddToDashboard }) => {\n    const ItemIcon = getItemIcon(item.type);\n    return (\n        <ListItem\n            key={item.type}\n            leftIcon={<ItemIcon style={{ margin: '6px' }} />}\n            innerDivStyle={{ padding: '0px 0px 0px 42px' }}\n            hoverColor=\"transparent\"\n            primaryText={\n                <p\n                    style={{\n                        display: 'flex',\n                        alignItems: 'center',\n                        justifyContent: 'flex-start',\n                        margin: 0,\n                    }}\n                >\n                    {item.name}\n                    <Button\n                        color=\"primary\"\n                        onClick={onAddToDashboard}\n                        style={{\n                            marginLeft: '5px',\n                            marginRight: '5px',\n                        }}\n                    >\n                        + ADD\n                    </Button>\n                </p>\n            }\n        />\n    );\n};\n\nconst ItemSelectSingle = ({ acAddDashboardItem, category }) => {\n    const addToDashboard = ({ type, content }) => () => {\n        acAddDashboardItem({ type, content });\n    };\n\n    return (\n        <Fragment>\n            <div\n                style={{\n                    display: 'flex',\n                    justifyContent: 'space-between',\n                    paddingLeft: '16px',\n                }}\n            >\n                <h3>{category.header}</h3>\n            </div>\n            <Divider />\n            <List>\n                {category.items.map(item => (\n                    <SingleItem\n                        key={item.type}\n                        item={item}\n                        onAddToDashboard={addToDashboard(item)}\n                    />\n                ))}\n            </List>\n        </Fragment>\n    );\n};\n\nexport default connect(\n    null,\n    { acAddDashboardItem }\n)(ItemSelectSingle);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport Popover from '@material-ui/core/Popover';\nimport SearchIcon from '@material-ui/icons/Search';\nimport TextField from 'material-ui/TextField';\n\nimport { singleItems, listItems } from './selectableItems';\nimport { itemTypeMap } from '../../modules/itemTypes';\nimport ItemSelectList from './ItemSelectList';\nimport ItemSelectSingle from './ItemSelectSingle';\nimport { colors } from '../../modules/colors';\n\nimport './ItemSelect.css';\n\nconst styles = {\n    filterField: {\n        fontSize: '14px',\n        height: '30px',\n        marginLeft: '10px',\n    },\n    filterFieldInput: {\n        top: '-9px',\n        left: '1px',\n    },\n    filterFieldUnderline: {\n        bottom: '10px',\n    },\n    filterFieldUnderlineFocus: {\n        borderColor: '#aaa',\n        borderWidth: '1px',\n    },\n    searchIcon: {\n        fill: colors.muiDefaultGrey,\n    },\n};\n\nconst ItemSearchField = props => (\n    <div style={{ display: 'flex', alignItems: 'baseline' }}>\n        <SearchIcon style={styles.searchIcon} />\n        <TextField\n            hintText={i18n.t('Search for items to add to this dashboard')}\n            fullWidth={true}\n            value={props.value}\n            onClick={props.onClick}\n            onChange={props.onChange}\n            style={styles.filterField}\n            inputStyle={styles.filterFieldInput}\n            hintStyle={styles.filterFieldHint}\n            underlineStyle={styles.filterFieldUnderline}\n            underlineFocusStyle={styles.filterFieldUnderlineFocus}\n        />\n    </div>\n);\n\nclass ItemSelect extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n            open: false,\n            maxOptions: new Set(),\n            items: undefined,\n            filter: '',\n        };\n    }\n\n    closeList = () => {\n        this.setState({ open: false, filter: '' });\n    };\n\n    openList = event => {\n        this.fetchItems();\n\n        this.setState({\n            anchorEl: event.currentTarget,\n            open: true,\n        });\n    };\n\n    setFilter = event => {\n        this.setState({ filter: event.target.value }, this.fetchItems);\n    };\n\n    getListItems = items => {\n        return listItems.map(type => {\n            const itemType = itemTypeMap[type.id];\n\n            if (items && items[itemType.countName] > 0) {\n                return (\n                    <ItemSelectList\n                        key={type.id}\n                        type={type.id}\n                        title={type.title}\n                        items={items[itemType.endPointName]}\n                        onChangeItemsLimit={this.fetchItems}\n                    />\n                );\n            } else {\n                return null;\n            }\n        });\n    };\n\n    popoverChildren = items => {\n        const SingleItems = singleItems.map(category => (\n            <ItemSelectSingle key={category.id} category={category} />\n        ));\n        const ListItems = this.getListItems(items);\n\n        return ListItems.concat(SingleItems);\n    };\n\n    fetchItems = async maxOption => {\n        const api = this.context.d2.Api.getApi();\n\n        let queryString;\n\n        if (maxOption) {\n            const maxOptions = this.state.maxOptions;\n\n            if (maxOptions.has(maxOption)) {\n                maxOptions.delete(maxOption);\n            } else {\n                maxOptions.add(maxOption);\n            }\n\n            this.setState({\n                maxOptions,\n            });\n        } else {\n            this.setState({\n                maxOptions: new Set(),\n            });\n        }\n\n        if ([...this.state.maxOptions.values()].length) {\n            queryString =\n                'max=' + [...this.state.maxOptions.values()].join('&max=');\n        }\n\n        api.get(\n            `dashboards/q/${this.state.filter || ''}${\n                queryString ? `?${queryString}` : ''\n            }`\n        )\n            .then(response => {\n                this.setState({ items: response });\n            })\n            .catch(console.error);\n    };\n\n    render() {\n        return (\n            <Fragment>\n                <ItemSearchField\n                    value={this.state.filter}\n                    onClick={this.openList}\n                    onChange={this.setFilter}\n                />\n                <Popover\n                    className=\"dashboard-item-select\"\n                    open={this.state.open}\n                    onClose={this.closeList}\n                    anchorEl={this.state.anchorEl}\n                    anchorOrigin={{ horizontal: 'left', vertical: 'bottom' }}\n                    transformOrigin={{ horizontal: 'left', vertical: 'top' }}\n                    style={{ height: '70vh' }}\n                    PaperProps={{ style: { width: '700px' } }}\n                    disableAutoFocus={true}\n                    disableRestoreFocus={true}\n                >\n                    {this.popoverChildren(this.state.items)}\n                </Popover>\n            </Fragment>\n        );\n    }\n}\n\nItemSelect.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nexport default ItemSelect;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport i18n from '@dhis2/d2-i18n';\nimport TextField from '@dhis2/d2-ui-core/text-field/TextField';\n\nimport {\n    acSetDashboardTitle,\n    acSetDashboardDescription,\n} from '../../actions/editDashboard';\nimport { orObject } from '../../modules/util';\nimport { sGetEditDashboardRoot } from '../../reducers/editDashboard';\nimport { sGetDashboardById } from '../../reducers/dashboards';\nimport ItemSelect from '../ItemSelect/ItemSelect';\n\nconst styles = {\n    section: { display: 'flex', justifyContent: 'space-between' },\n    titleDescription: {\n        flex: '3',\n        marginRight: '20px',\n    },\n    title: { padding: '6px 0' },\n    itemSelect: {\n        flex: '2',\n        minWidth: '300px',\n        maxWidth: '730px',\n        position: 'relative',\n        top: '33px',\n    },\n};\n\nexport const EditTitleBar = ({\n    name,\n    displayName,\n    description,\n    style,\n    onChangeTitle,\n    onChangeDescription,\n    classes,\n}) => {\n    const titleStyle = Object.assign({}, style.title, {\n        top: '-2px',\n    });\n\n    const translatedName = () => {\n        return displayName ? (\n            <span style={style.description}>\n                {i18n.t('Current translation')}: {displayName}\n            </span>\n        ) : null;\n    };\n\n    return (\n        <section className={classes.section}>\n            <div className={classes.titleDescription}>\n                <span>{i18n.t('Currently editing')}</span>\n                <div className={classes.title}>\n                    <TextField\n                        multiline\n                        fullWidth\n                        rows={1}\n                        rowsMax={3}\n                        style={titleStyle}\n                        value={name}\n                        placeholder={i18n.t('Add title here')}\n                        onChange={onChangeTitle}\n                    />\n                    {translatedName()}\n                </div>\n                <TextField\n                    multiline\n                    fullWidth\n                    rows={1}\n                    rowsMax={3}\n                    style={style.description}\n                    value={description}\n                    placeholder={i18n.t('Add description here')}\n                    onChange={onChangeDescription}\n                />\n            </div>\n            <div className={classes.itemSelect}>\n                <ItemSelect />\n            </div>\n        </section>\n    );\n};\n\nconst mapStateToProps = state => {\n    const selectedDashboard = orObject(sGetEditDashboardRoot(state));\n    const displayName = orObject(sGetDashboardById(state, selectedDashboard.id))\n        .displayName;\n\n    return {\n        name: selectedDashboard.name,\n        displayName,\n        description: selectedDashboard.description,\n    };\n};\n\nconst mapDispatchToProps = {\n    onChangeTitle: acSetDashboardTitle,\n    onChangeDescription: acSetDashboardDescription,\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(EditTitleBar));\n\nEditTitleBar.propTypes = {\n    name: PropTypes.string,\n    displayName: PropTypes.string,\n    description: PropTypes.string,\n    onChangeTitle: PropTypes.func.isRequired,\n    onChangeDescription: PropTypes.func.isRequired,\n    style: PropTypes.object,\n};\n\nEditTitleBar.defaultProps = {\n    name: '',\n    displayName: '',\n    description: '',\n    style: {},\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Button } from '@dhis2/ui-core';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport i18n from '@dhis2/d2-i18n';\n\nimport {\n    PeriodDimension,\n    DynamicDimension,\n    OrgUnitDimension,\n    FIXED_DIMENSIONS,\n} from '@dhis2/d2-ui-analytics';\n\nconst peId = FIXED_DIMENSIONS.pe.id;\nconst ouId = FIXED_DIMENSIONS.ou.id;\n\nclass FilterDialog extends Component {\n    onConfirm = id => () => this.props.onConfirm(id);\n\n    dialogContent() {\n        const { displayNameProperty, dimension, selectedItems } = this.props;\n        const dialogId = dimension.id;\n\n        const commonProps = {\n            d2: this.context.d2,\n            onSelect: this.props.onSelect,\n            onDeselect: this.props.onDeselect,\n            onReorder: this.props.onReorder,\n        };\n\n        switch (dialogId) {\n            case peId: {\n                return (\n                    <PeriodDimension\n                        selectedPeriods={selectedItems}\n                        {...commonProps}\n                    />\n                );\n            }\n            case ouId:\n                return (\n                    <OrgUnitDimension\n                        displayNameProperty={displayNameProperty}\n                        ouItems={selectedItems}\n                        {...commonProps}\n                    />\n                );\n            default:\n                return (\n                    <DynamicDimension\n                        selectedItems={selectedItems}\n                        dialogId={dialogId}\n                        dialogTitle={dimension.name}\n                        {...commonProps}\n                    />\n                );\n        }\n    }\n\n    render() {\n        const { dimension, onClose } = this.props;\n        const dialogId = dimension.id;\n\n        return (\n            <Dialog\n                open={!!dialogId}\n                maxWidth=\"lg\"\n                disableEnforceFocus\n                onClose={onClose}\n            >\n                {dialogId && this.dialogContent()}\n                <DialogActions>\n                    <Button kind=\"secondary\" onClick={onClose}>\n                        {i18n.t('Cancel')}\n                    </Button>\n                    <Button kind=\"primary\" onClick={this.onConfirm(dialogId)}>\n                        {i18n.t('Confirm')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nFilterDialog.propTypes = {\n    displayNameProperty: PropTypes.string,\n    dimension: PropTypes.object,\n    selectedItems: PropTypes.array,\n    onSelect: PropTypes.func,\n    onDeselect: PropTypes.func,\n    onReorder: PropTypes.func,\n    onClose: PropTypes.func,\n    onConfirm: PropTypes.func,\n};\n\nFilterDialog.contextTypes = {\n    d2: PropTypes.object,\n};\n\nexport default FilterDialog;\n","export const SET_ACTIVE_MODAL_DIMENSION = 'SET_ACTIVE_MODAL_DIMENSION';\nexport const CLEAR_ACTIVE_MODAL_DIMENSION = 'CLEAR_ACTIVE_MODAL_DIMENSION';\n\nexport const DEFAULT_STATE_ACTIVE_MODAL_DIMENSION = {};\n\nexport default (state = DEFAULT_STATE_ACTIVE_MODAL_DIMENSION, action) => {\n    switch (action.type) {\n        case SET_ACTIVE_MODAL_DIMENSION: {\n            return action.value;\n        }\n        case CLEAR_ACTIVE_MODAL_DIMENSION: {\n            return DEFAULT_STATE_ACTIVE_MODAL_DIMENSION;\n        }\n        default:\n            return state;\n    }\n};\n\nexport const sGetActiveModalDimension = state => state.activeModalDimension;\n","import {\n    SET_ACTIVE_MODAL_DIMENSION,\n    CLEAR_ACTIVE_MODAL_DIMENSION,\n} from '../reducers/activeModalDimension';\n\nexport const acSetActiveModalDimension = value => ({\n    type: SET_ACTIVE_MODAL_DIMENSION,\n    value,\n});\n\nexport const acClearActiveModalDimension = () => ({\n    type: CLEAR_ACTIVE_MODAL_DIMENSION,\n});\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport Popover from '@material-ui/core/Popover';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\n\nimport i18n from '@dhis2/d2-i18n';\nimport { DimensionsPanel } from '@dhis2/d2-ui-analytics';\n\nimport { Button } from '@dhis2/ui-core';\nimport FilterDialog from './FilterDialog';\n\nimport { sGetSettingsDisplayNameProperty } from '../../reducers/settings';\nimport { sGetActiveModalDimension } from '../../reducers/activeModalDimension';\nimport { sGetDimensions } from '../../reducers/dimensions';\nimport { sGetFiltersKeys } from '../../reducers/itemFilters';\nimport { sGetEditItemFiltersRoot } from '../../reducers/editItemFilters';\nimport { acAddItemFilter, acRemoveItemFilter } from '../../actions/itemFilters';\nimport {\n    acRemoveEditItemFilter,\n    acSetEditItemFilters,\n} from '../../actions/editItemFilters';\nimport {\n    acClearActiveModalDimension,\n    acSetActiveModalDimension,\n} from '../../actions/activeModalDimension';\n\nclass FilterSelector extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n        };\n    }\n\n    openPanel = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    closePanel = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    closeDialog = () => {\n        this.setState({ anchorEl: null });\n\n        this.props.clearActiveModalDimension();\n    };\n\n    selectDimension = id => {\n        this.props.setActiveModalDimension({\n            id,\n            name: this.props.dimensions[id].name,\n        });\n    };\n\n    onSelectItems = ({ dimensionId, items }) => {\n        this.props.setEditItemFilters({\n            ...this.props.selectedItems,\n            [dimensionId]: items,\n        });\n    };\n\n    onDeselectItems = ({ dimensionId, itemIdsToRemove }) => {\n        const oldList = this.props.selectedItems[dimensionId] || [];\n        const newList = oldList.filter(\n            item => !itemIdsToRemove.includes(item.id)\n        );\n\n        if (newList.length) {\n            this.props.setEditItemFilters({\n                ...this.props.selectedItems,\n                [dimensionId]: newList,\n            });\n        } else {\n            this.props.removeEditItemFilter(dimensionId);\n        }\n    };\n\n    onReorderItems = ({ dimensionId, itemIds }) => {\n        const oldList = this.props.selectedItems[dimensionId] || [];\n        const reorderedList = itemIds.map(id =>\n            oldList.find(item => item.id === id)\n        );\n\n        this.props.setEditItemFilters({\n            ...this.props.selectedItems,\n            [dimensionId]: reorderedList,\n        });\n    };\n\n    saveFilter = id => {\n        const filterItems = this.props.selectedItems[id];\n\n        if (filterItems && filterItems.length) {\n            this.props.addItemFilter({\n                id,\n                value: [...filterItems],\n            });\n        } else {\n            this.props.removeItemFilter(id);\n        }\n\n        this.closeDialog();\n    };\n\n    render() {\n        const {\n            displayNameProperty,\n            dimension,\n            dimensions,\n            selectedDimensions,\n            selectedItems,\n        } = this.props;\n\n        return (\n            <Fragment>\n                <Button onClick={this.openPanel}>\n                    {i18n.t('Add filter')}\n                    <ArrowDropDownIcon />\n                </Button>\n                <Popover\n                    open={Boolean(this.state.anchorEl)}\n                    anchorEl={this.state.anchorEl}\n                    anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\n                    onClose={this.closePanel}\n                    style={{ height: '100%' }}\n                >\n                    <DimensionsPanel\n                        dimensions={dimensions}\n                        onDimensionClick={this.selectDimension}\n                        selectedIds={selectedDimensions}\n                    />\n                </Popover>\n                {dimension ? (\n                    <FilterDialog\n                        displayNameProperty={displayNameProperty}\n                        dimension={dimension}\n                        selectedItems={selectedItems[dimension.id] || []}\n                        onSelect={this.onSelectItems}\n                        onDeselect={this.onDeselectItems}\n                        onReorder={this.onReorderItems}\n                        onClose={this.closeDialog}\n                        onConfirm={this.saveFilter}\n                    />\n                ) : null}\n            </Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    displayNameProperty: sGetSettingsDisplayNameProperty(state),\n    dimension: sGetActiveModalDimension(state),\n    dimensions: sGetDimensions(state),\n    selectedDimensions: sGetFiltersKeys(state),\n    selectedItems: sGetEditItemFiltersRoot(state),\n});\n\nexport default connect(\n    mapStateToProps,\n    {\n        clearActiveModalDimension: acClearActiveModalDimension,\n        setActiveModalDimension: acSetActiveModalDimension,\n        addItemFilter: acAddItemFilter,\n        removeItemFilter: acRemoveItemFilter,\n        removeEditItemFilter: acRemoveEditItemFilter,\n        setEditItemFilters: acSetEditItemFilters,\n    }\n)(FilterSelector);\n","import React, { Component } from 'react';\nimport InfoOutlineIcon from '@material-ui/icons/InfoOutlined';\nimport { colors } from '../../modules/colors';\n\nclass Info extends Component {\n    show = false;\n\n    toggle() {\n        this.show = !this.show;\n        return this.show;\n    }\n\n    render() {\n        return (\n            <div onClick={() => this.props.onClick(this.toggle())}>\n                <InfoOutlineIcon style={{ fill: colors.muiDefaultGrey }} />\n            </div>\n        );\n    }\n}\n\nexport default Info;\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport SharingDialog from '@dhis2/d2-ui-sharing-dialog';\nimport Star from '@material-ui/icons/Star';\nimport StarBorder from '@material-ui/icons/StarBorder';\n\nimport { orObject } from '../../modules/util';\nimport { tStarDashboard } from '../../actions/dashboards';\nimport { acSetSelectedShowDescription } from '../../actions/selected';\nimport FilterSelector from '../ItemFilter/FilterSelector';\nimport { Button } from '@dhis2/ui-core';\nimport Info from './Info';\nimport {\n    sGetSelectedId,\n    sGetSelectedShowDescription,\n} from '../../reducers/selected';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n} from '../../reducers/dashboards';\nimport { colors } from '../../modules/colors';\n\nconst NO_DESCRIPTION = i18n.t('No description');\n\nconst styles = {\n    actions: {\n        display: 'flex',\n        alignItems: 'center',\n        marginLeft: '20px',\n    },\n    starIcon: {\n        fill: colors.muiDefaultGrey,\n    },\n    textButton: {\n        minWidth: '30px',\n        top: '1px',\n    },\n    editLink: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        textDecoration: 'none',\n        marginRight: '4px',\n    },\n    titleBar: {\n        display: 'flex',\n        alignItems: 'flex-start',\n    },\n    titleBarIcon: {\n        marginLeft: 5,\n        position: 'relative',\n        top: 1,\n        cursor: 'pointer',\n    },\n};\n\nclass ViewTitleBar extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            sharingDialogIsOpen: false,\n        };\n    }\n\n    toggleSharingDialog = () =>\n        this.setState({ sharingDialogIsOpen: !this.state.sharingDialogIsOpen });\n\n    render() {\n        const {\n            id,\n            name,\n            description,\n            access,\n            style,\n            showDescription,\n            starred,\n            onStarClick,\n            onInfoClick,\n            classes,\n        } = this.props;\n\n        const titleStyle = Object.assign({}, style.title, {\n            cursor: 'default',\n            userSelect: 'text',\n            top: '7px',\n        });\n\n        const StarIcon = starred ? Star : StarBorder;\n\n        return (\n            <Fragment>\n                <div className={classes.titleBar}>\n                    <span style={titleStyle}>{name}</span>\n                    <div className={classes.actions}>\n                        <div\n                            className={classes.titleBarIcon}\n                            onClick={onStarClick}\n                        >\n                            <StarIcon className={classes.starIcon} />\n                        </div>\n                        <div className={classes.titleBarIcon}>\n                            <Info onClick={onInfoClick} />\n                        </div>\n                        <div style={{ marginLeft: '10px' }}>\n                            {access.update ? (\n                                <Link\n                                    className={classes.editLink}\n                                    to={`/${id}/edit`}\n                                >\n                                    <Button>{i18n.t('Edit')}</Button>\n                                </Link>\n                            ) : null}\n                            {access.manage ? (\n                                <span style={{ marginRight: '4px' }}>\n                                    <Button onClick={this.toggleSharingDialog}>\n                                        {i18n.t('Share')}\n                                    </Button>\n                                </span>\n                            ) : null}\n                            <span style={{ marginRight: '4px' }}>\n                                <FilterSelector />\n                            </span>\n                        </div>\n                    </div>\n                </div>\n                {showDescription ? (\n                    <div\n                        className=\"dashboard-description\"\n                        style={Object.assign(\n                            { paddingTop: '5px', paddingBottom: '5px' },\n                            style.description,\n                            !description ? { color: '#888' } : {}\n                        )}\n                    >\n                        {description || NO_DESCRIPTION}\n                    </div>\n                ) : null}\n                {id ? (\n                    <SharingDialog\n                        d2={this.context.d2}\n                        id={id}\n                        type=\"dashboard\"\n                        open={this.state.sharingDialogIsOpen}\n                        onRequestClose={this.toggleSharingDialog}\n                    />\n                ) : null}\n            </Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    const id = sGetSelectedId(state);\n    const dashboard = orObject(sGetDashboardById(state, id));\n\n    return {\n        id,\n        name: dashboard.displayName,\n        description: dashboard.displayDescription,\n        dashboardItems: sGetDashboardItems(state),\n        showDescription: sGetSelectedShowDescription(state),\n        starred: dashboard.starred,\n        access: orObject(dashboard.access),\n    };\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const { id, starred, showDescription } = stateProps;\n    const { dispatch } = dispatchProps;\n\n    return {\n        ...stateProps,\n        ...ownProps,\n        onStarClick: () => dispatch(tStarDashboard(id, !starred)),\n        onInfoClick: () =>\n            dispatch(acSetSelectedShowDescription(!showDescription)),\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    null,\n    mergeProps\n)(withStyles(styles)(ViewTitleBar));\n\nViewTitleBar.propTypes = {\n    id: PropTypes.string,\n    name: PropTypes.string,\n    description: PropTypes.string,\n    starred: PropTypes.bool,\n    showDescription: PropTypes.bool,\n    onInfoClick: PropTypes.func,\n};\n\nViewTitleBar.defaultProps = {\n    name: '',\n    description: '',\n    starred: false,\n    showDescription: false,\n    onInfoClick: null,\n};\n\nViewTitleBar.contextTypes = {\n    d2: PropTypes.object,\n};\n","import React from 'react';\n\nimport { colors } from '../../modules/colors';\nimport EditTitleBar from './EditTitleBar';\nimport ViewTitleBar from './ViewTitleBar';\n\nimport './TitleBar.css';\n\nconst style = {\n    title: {\n        position: 'relative',\n        fontSize: 21,\n        fontWeight: 500,\n        color: colors.black,\n        minWidth: 50,\n    },\n    description: {\n        fontSize: 14,\n        color: colors.darkGrey,\n    },\n};\n\nconst TitleBar = ({ edit }) => {\n    return (\n        <div\n            className=\"titlebar-wrapper\"\n            style={{\n                padding: '20px 15px 5px 10px',\n            }}\n        >\n            {edit ? (\n                <EditTitleBar style={style} />\n            ) : (\n                <ViewTitleBar style={style} />\n            )}\n        </div>\n    );\n};\n\nexport default TitleBar;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport i18n from '@dhis2/d2-i18n';\n\nimport * as pluginManager from './plugin';\nimport { getBaseUrl, orObject } from '../../../modules/util';\nimport { getGridItemDomId } from '../../ItemGrid/gridUtil';\n\nconst pluginCredentials = d2 => {\n    return {\n        baseUrl: getBaseUrl(d2),\n        auth: d2.Api.getApi().defaultHeaders.Authorization,\n    };\n};\n\nclass DefaultPlugin extends Component {\n    pluginCredentials = null;\n\n    constructor(props, context) {\n        super(props);\n\n        this.d2 = context.d2;\n    }\n\n    shouldPluginReload = prevProps => {\n        // TODO - fix this hack, to handle bug with multiple\n        // rerendering while switching between dashboards.\n        //\n        // To determine if the rendering is happening because of a\n        // dashboard switch, check if the item reference has changed.\n        const reloadAllowed = this.props.item === prevProps.item;\n\n        const filtersChanged = prevProps.itemFilters !== this.props.itemFilters;\n        const vis = orObject(this.props.visualization);\n        const prevVis = orObject(prevProps.visualization);\n        const visChanged =\n            vis.id !== prevVis.id || vis.activeType !== prevVis.activeType;\n\n        return reloadAllowed && (visChanged || filtersChanged);\n    };\n\n    reloadPlugin = prevProps => {\n        if (\n            pluginManager.pluginIsAvailable(\n                this.props.item,\n                this.props.visualization\n            ) &&\n            this.shouldPluginReload(prevProps)\n        ) {\n            const prevVis = orObject(prevProps.visualization);\n            const currentVis = this.props.visualization;\n\n            const useActiveType =\n                currentVis.activeType !== prevVis.activeType ||\n                currentVis.activeType !== this.props.item.type;\n\n            if (\n                useActiveType ||\n                this.props.itemFilters !== prevProps.itemFilters\n            ) {\n                pluginManager.unmount(\n                    this.props.item,\n                    prevVis.activeType || this.props.item.type\n                );\n\n                pluginManager.load(\n                    this.props.item,\n                    this.props.visualization,\n                    this.pluginCredentials,\n                    useActiveType ? currentVis.activeType : null\n                );\n            }\n        }\n    };\n\n    componentDidMount() {\n        this.pluginCredentials = pluginCredentials(this.d2);\n\n        if (\n            pluginManager.pluginIsAvailable(\n                this.props.item,\n                this.props.visualization\n            )\n        ) {\n            pluginManager.load(\n                this.props.item,\n                this.props.visualization,\n                this.pluginCredentials,\n                !this.props.editMode ? this.getActiveType() : null\n            );\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        this.reloadPlugin(prevProps);\n    }\n\n    getActiveType = () =>\n        this.props.visualization.activeType || this.props.item.type;\n\n    render() {\n        const { classes, item, visualization, style } = this.props;\n        const pluginIsAvailable = pluginManager.pluginIsAvailable(\n            item,\n            visualization\n        );\n\n        return pluginIsAvailable ? (\n            <div id={getGridItemDomId(item.id)} style={style} />\n        ) : (\n            <div className={classes.textDiv}>\n                {i18n.t('Unable to load the plugin for this item')}\n            </div>\n        );\n    }\n}\n\nDefaultPlugin.contextTypes = {\n    d2: PropTypes.object,\n};\n\nDefaultPlugin.propTypes = {\n    style: PropTypes.object,\n    item: PropTypes.object,\n    itemFilters: PropTypes.object,\n    visualization: PropTypes.object,\n};\n\nDefaultPlugin.defaultProps = {\n    style: {},\n    item: {},\n    itemFilters: {},\n    visualization: {},\n};\n\nexport default DefaultPlugin;\n","import React from 'react';\n\nexport const HEADER_HEIGHT = 45;\n\nconst ItemHeader = props => {\n    const { title, actionButtons, editMode } = props;\n\n    return (\n        <div className=\"dashboard-item-header\">\n            <div\n                className=\"dashboard-item-header-title\"\n                style={{ userSelect: editMode ? 'none' : 'text' }}\n            >\n                {title}\n            </div>\n            {actionButtons}\n        </div>\n    );\n};\n\nexport default ItemHeader;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { colors } from '../../../modules/colors';\nimport { getId } from './plugin';\nimport InterpretationsComponent from '@dhis2/d2-ui-interpretations';\n\nconst style = {\n    scrollContainer: {\n        overflowY: 'auto',\n        height: '340px',\n    },\n    line: {\n        margin: '-1px 0px 0px',\n        height: '1px',\n        border: 'none',\n        backgroundColor: colors.lightGrey,\n    },\n};\n\nclass ItemFooter extends Component {\n    render() {\n        const objectId = getId(this.props.item);\n\n        return (\n            <div className=\"dashboard-item-footer\">\n                <hr style={style.line} />\n                <div style={style.scrollContainer}>\n                    <InterpretationsComponent\n                        d2={this.context.d2}\n                        item={this.props.item}\n                        type={this.props.item.type.toLowerCase()}\n                        id={objectId}\n                        appName=\"dashboard\"\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nItemFooter.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nItemFooter.propTypes = {\n    item: PropTypes.object.isRequired,\n};\n\nexport default ItemFooter;\n","import React from 'react';\n\nimport './ItemHeaderButton.css';\n\nconst ItemHeaderButton = ({ disabled, onClick, children, style }) => {\n    return (\n        <button\n            disabled={disabled}\n            type=\"button\"\n            className=\"item-action-button\"\n            style={style}\n            onClick={onClick}\n        >\n            {children}\n        </button>\n    );\n};\n\nexport default ItemHeaderButton;\n","import React, { Component, Fragment } from 'react';\nimport MessageIcon from '@material-ui/icons/Message';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\n\nimport { extractFavorite } from './plugin';\nimport ItemHeaderButton from '../ItemHeaderButton';\nimport {\n    VISUALIZATION_TYPE_TABLE,\n    VISUALIZATION_TYPE_CHART,\n    VISUALIZATION_TYPE_MAP,\n    itemTypeMap,\n    CHART,\n    MAP,\n    REPORT_TABLE,\n    EVENT_CHART,\n    EVENT_REPORT,\n    DOMAIN_TYPE_AGGREGATE,\n} from '../../../modules/itemTypes';\nimport { colors } from '../../../modules/colors';\n\nconst style = {\n    iconBase: {\n        width: '24px',\n        height: '24px',\n        fill: colors.lightMediumGrey,\n    },\n    buttonBase: {\n        padding: '5px 6px 3px 6px',\n    },\n    buttonDisabled: {\n        padding: '5px 6px 3px 6px',\n        opacity: 0.5,\n        cursor: 'unset',\n    },\n    toggleFooterPadding: {\n        padding: '7px 6px 1px 6px',\n    },\n    border: {\n        borderRadius: '2px',\n        border: `1px solid ${colors.lightGrey}`,\n    },\n};\n\nconst baseStyle = {\n    icon: style.iconBase,\n    container: style.buttonBase,\n};\n\nconst disabledStyle = {\n    icon: style.iconBase,\n    container: style.buttonDisabled,\n};\n\nconst activeStyle = {\n    icon: { ...style.iconBase, fill: colors.royalBlue },\n    container: {\n        ...style.buttonBase,\n        backgroundColor: colors.lightBlue,\n    },\n};\n\nconst inactiveStyle = disabled => (disabled ? disabledStyle : baseStyle);\n\nconst tableBtnStyle = (activeType, disabled) =>\n    [REPORT_TABLE, EVENT_REPORT].includes(activeType)\n        ? activeStyle\n        : inactiveStyle(disabled);\n\nconst chartBtnStyle = (activeType, disabled) =>\n    [CHART, EVENT_CHART].includes(activeType)\n        ? activeStyle\n        : inactiveStyle(disabled);\n\nconst mapBtnStyle = (activeType, disabled) =>\n    [MAP].includes(activeType) ? activeStyle : inactiveStyle(disabled);\n\nexport const getItemTypeId = (itemTypeMap, visualizationType, domainType) => {\n    const item = Object.values(itemTypeMap).find(\n        item =>\n            item.visualizationType === visualizationType &&\n            item.domainType === domainType\n    );\n    return item.id;\n};\n\nclass VisualizationItemHeaderButtons extends Component {\n    render() {\n        const {\n            item,\n            onSelectVisualization,\n            activeFooter,\n            activeType,\n            onToggleFooter,\n        } = this.props;\n\n        const domainType = itemTypeMap[item.type].domainType;\n\n        const onViewTable = () =>\n            onSelectVisualization(\n                getItemTypeId(itemTypeMap, VISUALIZATION_TYPE_TABLE, domainType)\n            );\n\n        const onViewChart = () =>\n            onSelectVisualization(\n                getItemTypeId(itemTypeMap, VISUALIZATION_TYPE_CHART, domainType)\n            );\n\n        const onViewMap = () =>\n            onSelectVisualization(\n                getItemTypeId(itemTypeMap, VISUALIZATION_TYPE_MAP, domainType)\n            );\n\n        const toggleFooterBase = activeFooter ? activeStyle : baseStyle;\n\n        const toggleFooter = {\n            ...toggleFooterBase,\n            container: {\n                ...toggleFooterBase.container,\n                ...style.toggleFooterPadding,\n                ...style.border,\n            },\n        };\n\n        // disable toggle buttons\n        let disabled = false;\n\n        if (item.type === VISUALIZATION_TYPE_CHART) {\n            if (extractFavorite(item).type.match(/^YEAR_OVER_YEAR/)) {\n                disabled = true;\n            }\n        }\n\n        const tableButtonStyle = tableBtnStyle(activeType, disabled);\n        const chartButtonStyle = chartBtnStyle(activeType, disabled);\n        const mapButtonStyle = mapBtnStyle(activeType, disabled);\n\n        return (\n            <Fragment>\n                <div style={{ marginRight: 10 }}>\n                    <ItemHeaderButton\n                        style={toggleFooter.container}\n                        onClick={onToggleFooter}\n                    >\n                        <MessageIcon style={toggleFooter.icon} />\n                    </ItemHeaderButton>\n                </div>\n                <div style={style.border}>\n                    <ItemHeaderButton\n                        disabled={disabled}\n                        style={tableButtonStyle.container}\n                        onClick={onViewTable}\n                    >\n                        <TableIcon style={tableButtonStyle.icon} />\n                    </ItemHeaderButton>\n                    <ItemHeaderButton\n                        disabled={disabled}\n                        style={chartButtonStyle.container}\n                        onClick={onViewChart}\n                    >\n                        <ChartIcon style={chartButtonStyle.icon} />\n                    </ItemHeaderButton>\n                    {domainType === DOMAIN_TYPE_AGGREGATE ? (\n                        <ItemHeaderButton\n                            disabled={disabled}\n                            style={mapButtonStyle.container}\n                            onClick={onViewMap}\n                        >\n                            <MapIcon style={mapButtonStyle.icon} />\n                        </ItemHeaderButton>\n                    ) : null}\n                </div>\n            </Fragment>\n        );\n    }\n}\n\nexport default VisualizationItemHeaderButtons;\n","// Note that this ignores discrepancies in 'this', so shouldn't be used with bound functions\n// This is useful instead of lodash/memoize when we only need to memoize a single value\n// Inspiration: https://github.com/alexreardon/memoize-one\n\nconst memoizeOne = fn => {\n    let lastArgs = undefined;\n    let lastValue = undefined;\n\n    return (...args) => {\n        if (\n            lastArgs &&\n            args.length === lastArgs.length &&\n            args.every((arg, i) => arg === lastArgs[i])\n        ) {\n            return lastValue;\n        }\n        lastArgs = args;\n        lastValue = fn(...args);\n        return lastValue;\n    };\n};\n\nexport default memoizeOne;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport ChartPlugin from '@dhis2/data-visualizer-plugin';\n\nimport i18n from '@dhis2/d2-i18n';\nimport uniqueId from 'lodash/uniqueId';\n\nimport DefaultPlugin from './DefaultPlugin';\nimport ItemHeader, { HEADER_HEIGHT } from '../ItemHeader';\nimport ItemFooter from './ItemFooter';\nimport VisualizationItemHeaderButtons from './ItemHeaderButtons';\nimport * as pluginManager from './plugin';\nimport { sGetVisualization } from '../../../reducers/visualizations';\nimport { sGetItemFiltersRoot } from '../../../reducers/itemFilters';\nimport {\n    acReceivedVisualization,\n    acReceivedActiveVisualization,\n} from '../../../actions/selected';\nimport { CHART, MAP, itemTypeMap } from '../../../modules/itemTypes';\nimport { colors } from '../../../modules/colors';\nimport memoizeOne from '../../../modules/memoizeOne';\nimport { getVisualizationConfig } from './plugin';\n\nconst styles = {\n    icon: {\n        width: 16,\n        height: 16,\n        marginLeft: 3,\n        cursor: 'pointer',\n        fill: colors.muiDefaultGrey,\n    },\n    title: {\n        overflow: 'hidden',\n        maxWidth: '85%',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n    },\n    textDiv: {\n        fontSize: '14px',\n        fontStretch: 'normal',\n        padding: '10px',\n        lineHeight: '20px',\n    },\n};\n\nconst applyFilters = (visualization, filters) => {\n    if (!Object.keys(filters).length) {\n        return visualization;\n    }\n\n    // deep clone objects in filters to avoid changing the visualization in the Redux store\n    const visRows = visualization.rows.map(obj => ({ ...obj }));\n    const visColumns = visualization.columns.map(obj => ({ ...obj }));\n    const visFilters = visualization.filters.map(obj => ({ ...obj }));\n\n    Object.keys(filters).forEach(dimensionId => {\n        if (filters[dimensionId]) {\n            let dimensionFound = false;\n\n            [visRows, visColumns, visFilters].forEach(dimensionObjects =>\n                dimensionObjects\n                    .filter(obj => obj.dimension === dimensionId)\n                    .forEach(obj => {\n                        dimensionFound = true;\n                        obj.items = filters[dimensionId];\n                    })\n            );\n\n            // add dimension to filters if not already present elsewhere\n            if (!dimensionFound) {\n                visFilters.push({\n                    dimension: dimensionId,\n                    items: filters[dimensionId],\n                });\n            }\n        }\n    });\n\n    return {\n        ...visualization,\n        rows: visRows,\n        columns: visColumns,\n        filters: visFilters,\n    };\n};\n\nexport class Item extends Component {\n    state = {\n        showFooter: false,\n        configLoaded: false,\n    };\n\n    constructor(props, context) {\n        super(props);\n\n        this.d2 = context.d2;\n\n        this.contentRef = React.createRef();\n    }\n\n    async componentDidMount() {\n        this.props.onVisualizationLoaded(\n            // TODO do not call fetch on the pluginManager, do it here as the manager will eventually be removed...\n            await pluginManager.fetch(this.props.item)\n        );\n\n        this.setState({\n            configLoaded: true,\n        });\n    }\n\n    getUniqueKey = memoizeOne(() => uniqueId());\n\n    pluginCredentials = null;\n\n    getPluginComponent = () => {\n        const visualization = getVisualizationConfig(\n            this.props.visualization,\n            this.props.item.type,\n            this.getActiveType()\n        );\n\n        if (!visualization) {\n            return (\n                <div className={this.props.classes.textDiv}>\n                    {i18n.t('No data to display')}\n                </div>\n            );\n        }\n\n        const props = {\n            ...this.props,\n            visualization,\n            style: this.getContentStyle(),\n        };\n\n        switch (this.getActiveType()) {\n            case CHART: {\n                return (\n                    <ChartPlugin\n                        d2={this.d2}\n                        config={applyFilters(\n                            props.visualization,\n                            props.itemFilters\n                        )}\n                        forDashboard={true}\n                        style={props.style}\n                    />\n                );\n            }\n            case MAP: {\n                if (props.item.type === MAP) {\n                    // apply filters only to thematic and event layers\n                    // for maps AO\n                    const mapViews = props.visualization.mapViews.map(obj => {\n                        if (\n                            obj.layer.includes('thematic') ||\n                            obj.layer.includes('event')\n                        ) {\n                            return applyFilters(obj, props.itemFilters);\n                        }\n\n                        return obj;\n                    });\n\n                    props.visualization = {\n                        ...props.visualization,\n                        mapViews,\n                    };\n                } else {\n                    // this is the case of a non map AO passed to the maps plugin\n                    // due to a visualization type switch in dashboard item\n                    // maps plugin takes care of converting the AO to a suitable format\n                    props.visualization = applyFilters(\n                        props.visualization,\n                        props.itemFilters\n                    );\n                }\n\n                return <DefaultPlugin {...props} />;\n            }\n            default: {\n                props.visualization = applyFilters(\n                    props.visualization,\n                    props.itemFilters\n                );\n\n                return <DefaultPlugin {...props} />;\n            }\n        }\n    };\n\n    onToggleFooter = () => {\n        this.setState(\n            { showFooter: !this.state.showFooter },\n            this.props.onToggleItemExpanded(this.props.item.id)\n        );\n    };\n\n    onSelectVisualization = activeType => {\n        // Cancel request if type is already active\n        if (activeType === this.getActiveType()) {\n            return;\n        }\n\n        pluginManager.unmount(this.props.item, this.getActiveType());\n\n        this.props.onSelectVisualization(\n            this.props.visualization.id,\n            this.props.item.type,\n            activeType\n        );\n    };\n\n    getActiveType = () =>\n        this.props.visualization.activeType || this.props.item.type;\n\n    pluginIsAvailable = () =>\n        pluginManager.pluginIsAvailable(\n            this.props.item,\n            this.props.visualization\n        );\n\n    getTitle = () => {\n        const { item, editMode, classes } = this.props;\n        const itemName = pluginManager.getName(item);\n\n        return (\n            <div style={{ display: 'flex', alignItems: 'center' }}>\n                <span className={classes.title} title={itemName}>\n                    {itemName}\n                </span>\n                {!editMode && this.pluginIsAvailable() ? (\n                    <a\n                        href={pluginManager.getLink(this.props.item, this.d2)}\n                        style={{ height: 16 }}\n                        title={`View in ${\n                            itemTypeMap[this.props.item.type].appName\n                        } app`}\n                    >\n                        <LaunchIcon className={classes.icon} />\n                    </a>\n                ) : null}\n            </div>\n        );\n    };\n\n    getActionButtons = () =>\n        pluginManager.pluginIsAvailable(\n            this.props.item,\n            this.props.visualization\n        ) && !this.props.editMode ? (\n            <VisualizationItemHeaderButtons\n                item={this.props.item}\n                activeFooter={this.state.showFooter}\n                activeType={this.getActiveType()}\n                onSelectVisualization={this.onSelectVisualization}\n                onToggleFooter={this.onToggleFooter}\n            />\n        ) : null;\n\n    getContentStyle = () => {\n        const { item, editMode } = this.props;\n        const PADDING_BOTTOM = 4;\n\n        return !editMode\n            ? {\n                  height: item.originalHeight - HEADER_HEIGHT - PADDING_BOTTOM,\n              }\n            : { height: this.contentRef.offsetHeight };\n    };\n\n    render() {\n        const { item, editMode, itemFilters } = this.props;\n        const { showFooter } = this.state;\n\n        return (\n            <Fragment>\n                <ItemHeader\n                    title={this.getTitle()}\n                    actionButtons={this.getActionButtons()}\n                    editMode={editMode}\n                />\n                <div\n                    key={this.getUniqueKey(itemFilters)}\n                    className=\"dashboard-item-content\"\n                    ref={ref => (this.contentRef = ref)}\n                >\n                    {this.state.configLoaded && this.getPluginComponent()}\n                </div>\n                {!editMode && showFooter ? <ItemFooter item={item} /> : null}\n            </Fragment>\n        );\n    }\n}\n\nItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nItem.propTypes = {\n    item: PropTypes.object,\n    editMode: PropTypes.bool,\n    onToggleItemExpanded: PropTypes.func,\n    itemFilters: PropTypes.object,\n    visualization: PropTypes.object,\n};\n\nItem.defaultProps = {\n    item: {},\n    editMode: false,\n    onToggleItemExpanded: Function.prototype,\n    itemFilters: {},\n    visualization: {},\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n    itemFilters: sGetItemFiltersRoot(state),\n    visualization: sGetVisualization(\n        state,\n        pluginManager.extractFavorite(ownProps.item).id\n    ),\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onVisualizationLoaded: visualization =>\n        dispatch(acReceivedVisualization(visualization)),\n    onSelectVisualization: (id, type, activeType) =>\n        dispatch(acReceivedActiveVisualization(id, type, activeType)),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(Item));\n","import React from 'react';\nimport { colors } from '../modules/colors';\n\nconst style = {\n    backgroundColor: colors.lightGrey,\n    border: 'none',\n    height: '1px',\n    margin: '0px 0px 5px 0px',\n};\n\nconst Line = props => <hr style={style} />;\n\nexport default Line;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\n\nimport { sGetMessagesRoot } from '../../../reducers/messages';\nimport { formatDate } from '../../../modules/util';\nimport { colors } from '../../../modules/colors';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nimport './MessagesItem.css';\n\nconst PRIVATE = 'PRIVATE';\n\nconst messageTypes = {\n    [PRIVATE]: 'Private',\n    VALIDATION_RESULT: 'Validation',\n    TICKET: 'Ticket',\n    SYSTEM: 'System',\n};\n\nconst style = {\n    list: {\n        listStyleType: 'none',\n        paddingLeft: '0px',\n    },\n    seeAll: {\n        textAlign: 'center',\n        fontSize: '13px',\n        marginBottom: '5px',\n    },\n    sender: {\n        fontSize: '13px',\n        lineHeight: '15px',\n        margin: 0,\n        color: colors.darkGrey,\n    },\n    snippet: {\n        color: colors.darkGrey,\n        fontSize: '13px',\n        lineHeight: '15px',\n        maxHeight: '30px',\n        overflow: 'hidden',\n    },\n};\n\nclass MessagesItem extends Component {\n    state = {\n        uiLocale: '',\n    };\n\n    async componentDidMount() {\n        const uiLocale = await this.context.d2.currentUser.userSettings.get(\n            'keyUiLocale'\n        );\n\n        this.setState({ uiLocale });\n    }\n\n    getMessageHref = msg => {\n        const msgIdentifier = msg ? `#/${msg.messageType}/${msg.id}` : '';\n        return `${this.context.baseUrl}/dhis-web-messaging/${msgIdentifier}`;\n    };\n\n    getMessageSender = msg => {\n        const latestMsg = msg.messages.slice(-1)[0];\n        return latestMsg.sender ? latestMsg.sender.displayName : '';\n    };\n\n    getMessageItems = () => {\n        const editClass = !this.props.editMode ? 'view' : null;\n\n        return this.props.messages.map(msg => {\n            const redirectToMsg = () => {\n                if (!this.props.editMode) {\n                    document.location.href = this.getMessageHref(msg);\n                }\n            };\n\n            const sender =\n                msg.messageType === PRIVATE\n                    ? this.getMessageSender(msg)\n                    : messageTypes[msg.messageType];\n\n            const readClass = !msg.read ? 'unread' : null;\n            const latestMsg = msg.messages.slice(-1)[0];\n            const msgDate = latestMsg.lastUpdated;\n\n            return (\n                <li\n                    className={`message-item ${editClass}`}\n                    key={msg.id}\n                    onClick={redirectToMsg}\n                >\n                    <p className={`message-title ${readClass}`}>\n                        {msg.displayName} ({msg.messageCount})\n                    </p>\n                    <p style={style.sender}>\n                        {sender} - {formatDate(msgDate, this.state.uiLocale)}\n                    </p>\n                    <p style={style.snippet}>{latestMsg.text}</p>\n                </li>\n            );\n        });\n    };\n\n    render() {\n        return (\n            <Fragment>\n                <ItemHeader title={i18n.t('Messages')} />\n                <Line />\n                {this.props.messages.length > 0 && (\n                    <div className=\"dashboard-item-content\">\n                        <ul style={style.list}>{this.getMessageItems()}</ul>\n                        <div style={style.seeAll}>\n                            <a href={this.getMessageHref()}>\n                                {i18n.t('See all messages')}\n                            </a>\n                        </div>\n                    </div>\n                )}\n            </Fragment>\n        );\n    }\n}\n\nMessagesItem.contextTypes = {\n    d2: PropTypes.object,\n    baseUrl: PropTypes.string,\n};\n\nconst mapStateToProps = state => {\n    return {\n        messages: Object.values(sGetMessagesRoot(state)),\n    };\n};\n\nconst MessagesContainer = connect(\n    mapStateToProps,\n    null\n)(MessagesItem);\n\nexport default MessagesContainer;\n","import React, { Fragment } from 'react';\nimport ItemHeader from '../ItemHeader';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nconst NotSupportedItem = props => (\n    <Fragment>\n        <ItemHeader title={`Item type not supported: ${props.item.type}`} />\n        <div\n            style={{\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center',\n                height: '90%',\n            }}\n        >\n            <NotInterestedIcon\n                style={{ width: 100, height: 100, align: 'center' }}\n                color=\"disabled\"\n            />\n        </div>\n    </Fragment>\n);\n\nexport default NotSupportedItem;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { List, ListItem as MUIListItem } from 'material-ui/List';\nimport IconButton from 'material-ui/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport Line from '../../../widgets/Line';\nimport {\n    itemTypeMap,\n    getItemUrl,\n    getItemIcon,\n} from '../../../modules/itemTypes';\nimport { orArray } from '../../../modules/util';\nimport { tRemoveListItemContent } from './actions';\nimport { colors } from '../../../modules/colors';\nimport ItemHeader from '../ItemHeader';\n\nconst getItemTitle = item => {\n    return itemTypeMap[item.type].pluralTitle;\n};\n\nconst getContentItems = item =>\n    orArray(item[itemTypeMap[item.type].propName]).filter(\n        (item, index, array) =>\n            array.findIndex(el => el.id === item.id) === index\n    );\n\nconst removeContent = (handler, item, contentToRemove) => () => {\n    handler(item, contentToRemove);\n};\n\nconst ListItem = (props, context) => {\n    const { item, editMode, tRemoveListItemContent } = props;\n\n    // avoid showing duplicates\n    const contentItems = getContentItems(item);\n\n    const primaryText = contentItem => {\n        const deleteButton = (\n            <IconButton\n                style={{\n                    verticalAlign: 'text-bottom',\n                    padding: '0 12px',\n                    height: 20,\n                }}\n                iconStyle={{\n                    width: 20,\n                    height: 20,\n                    fill: colors.red,\n                }}\n                onClick={removeContent(\n                    tRemoveListItemContent,\n                    item,\n                    contentItem\n                )}\n            >\n                <DeleteIcon />\n            </IconButton>\n        );\n\n        return (\n            <div>\n                <a\n                    style={{ textDecoration: 'none' }}\n                    href={getItemUrl(item.type, contentItem, context.d2)}\n                >\n                    {contentItem.name}\n                </a>\n                {editMode ? deleteButton : null}\n            </div>\n        );\n    };\n\n    const ItemIcon = getItemIcon(item.type);\n\n    return (\n        <Fragment>\n            <ItemHeader title={getItemTitle(item)} />\n            <Line />\n            <List className=\"dashboard-item-content\">\n                {contentItems.map(contentItem => (\n                    <MUIListItem\n                        key={contentItem.id}\n                        primaryText={primaryText(contentItem)}\n                        leftIcon={<ItemIcon style={{ margin: 0 }} />}\n                        disabled={true}\n                        innerDivStyle={{ padding: '4px 4px 4px 32px' }}\n                    />\n                ))}\n            </List>\n        </Fragment>\n    );\n};\n\nListItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nconst ListItemContainer = connect(\n    null,\n    {\n        tRemoveListItemContent,\n    }\n)(ListItem);\n\nexport default ListItemContainer;\n","import {\n    acUpdateDashboardItem,\n    acRemoveDashboardItem,\n} from '../../../actions/editDashboard';\nimport { itemTypeMap } from '../../../modules/itemTypes';\n\nexport const tRemoveListItemContent = (dashboardItem, content) => dispatch => {\n    const listItemType = itemTypeMap[dashboardItem.type].propName;\n\n    const newContent = dashboardItem[listItemType].filter(\n        item => item.id !== content.id\n    );\n\n    if (newContent.length) {\n        dashboardItem[listItemType] = newContent;\n        dispatch(acUpdateDashboardItem(dashboardItem));\n    } else {\n        dispatch(acRemoveDashboardItem(dashboardItem));\n    }\n};\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport TextField from '@dhis2/d2-ui-core/text-field/TextField';\nimport {\n    Parser as RichTextParser,\n    Editor as RichTextEditor,\n} from '@dhis2/d2-ui-rich-text';\n\nimport { acUpdateDashboardItem } from '../../../actions/editDashboard';\nimport { sGetEditDashboardItems } from '../../../reducers/editDashboard';\nimport { sGetDashboardItems } from '../../../reducers/dashboards';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nconst style = {\n    textDiv: {\n        padding: '10px',\n        whiteSpace: 'pre-line',\n        lineHeight: '20px',\n    },\n    textField: {\n        fontSize: '14px',\n        fontStretch: 'normal',\n        width: '90%',\n        margin: '0 auto',\n        display: 'block',\n    },\n    container: {\n        marginBottom: '20px',\n        marginTop: '20px',\n    },\n};\n\nconst TextItem = props => {\n    const { item, editMode, text, acUpdateDashboardItem } = props;\n\n    const onChangeText = text => {\n        const updatedItem = {\n            ...item,\n            text,\n        };\n\n        acUpdateDashboardItem(updatedItem);\n    };\n\n    const viewItem = () => {\n        const textDivStyle = Object.assign({}, style.textField, style.textDiv);\n        return (\n            <div className=\"dashboard-item-content\" style={style.container}>\n                <RichTextParser style={textDivStyle}>{text}</RichTextParser>\n            </div>\n        );\n    };\n\n    const editItem = () => {\n        return (\n            <Fragment>\n                <ItemHeader title={i18n.t('Text item')} />\n                <Line />\n                <div className=\"dashboard-item-content\">\n                    <RichTextEditor onEdit={onChangeText}>\n                        <TextField\n                            value={text}\n                            multiline\n                            rows={1}\n                            fullWidth\n                            style={style.textField}\n                            placeholder={i18n.t('Add text here')}\n                            onChange={onChangeText}\n                        />\n                    </RichTextEditor>\n                </div>\n            </Fragment>\n        );\n    };\n\n    return <Fragment>{editMode ? editItem() : viewItem()}</Fragment>;\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    const items = ownProps.editMode\n        ? sGetEditDashboardItems(state)\n        : sGetDashboardItems(state);\n\n    const item = items.find(item => item.id === ownProps.item.id);\n\n    return {\n        text: item ? item.text : '',\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        acUpdateDashboardItem,\n    }\n)(TextItem);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nimport { FILTER_ORG_UNIT } from '../../../actions/itemFilters';\nimport { sGetItemFiltersRoot } from '../../../reducers/itemFilters';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nconst getIframeSrc = (appDetails, item, itemFilters) => {\n    let iframeSrc = `${appDetails.launchUrl}?dashboardItemId=${item.id}`;\n\n    if (\n        itemFilters &&\n        itemFilters[FILTER_ORG_UNIT] &&\n        itemFilters[FILTER_ORG_UNIT].length\n    ) {\n        const ouIds = itemFilters[FILTER_ORG_UNIT].map(\n            ouPath => ouPath.split('/').slice(-1)[0]\n        );\n\n        iframeSrc += `&userOrgUnit=${ouIds.join(',')}`;\n    }\n\n    return iframeSrc;\n};\n\nconst AppItem = ({ item, itemFilters }, context) => {\n    let appDetails;\n\n    const appKey = item.appKey;\n\n    if (appKey) {\n        appDetails = context.d2.system.installedApps.find(\n            app => app.key === appKey\n        );\n    }\n\n    return appDetails && appDetails.name && appDetails.launchUrl ? (\n        <Fragment>\n            <ItemHeader title={appDetails.name} />\n            <Line />\n            <iframe\n                title={appDetails.name}\n                src={getIframeSrc(appDetails, item, itemFilters)}\n                className=\"dashboard-item-content\"\n                style={{ border: 'none' }}\n            />\n        </Fragment>\n    ) : (\n        <Fragment>\n            <ItemHeader title={`${appKey} app not found`} />\n            <Line />\n            <div\n                className=\"dashboard-item-content\"\n                style={{\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    height: '90%',\n                }}\n            >\n                <NotInterestedIcon\n                    color=\"disabled\"\n                    disabled\n                    style={{ width: 100, height: 100, align: 'center' }}\n                />\n            </div>\n        </Fragment>\n    );\n};\n\nAppItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nconst mapStateToProps = state => ({\n    itemFilters: sGetItemFiltersRoot(state),\n});\n\nexport default connect(mapStateToProps)(AppItem);\n","import React, { Fragment } from 'react';\nimport i18n from '@dhis2/d2-i18n';\n\nimport { colors } from '../../../modules/colors';\nimport ItemHeader from '../ItemHeader';\n\nconst style = {\n    margin: '21px 28px',\n    fontSize: '14px',\n    lineHeight: '18px',\n    color: colors.charcoalGrey,\n};\n\nconst SpacerItem = () => {\n    return (\n        <Fragment>\n            <ItemHeader title={i18n.t('Spacer')} />\n            <p style={style}>\n                {i18n.t(\n                    'Use a spacer to create empty vertical space between other dashboard items.'\n                )}\n            </p>\n        </Fragment>\n    );\n};\n\nexport default SpacerItem;\n","import React from 'react';\n\nimport VisualizationItem from './VisualizationItem/Item';\nimport MessagesItem from './MessagesItem/Item';\nimport NotSupportedItem from './NotSupportedItem/Item';\nimport ListItem from './ListItem/Item';\nimport TextItem from './TextItem/Item';\nimport AppItem from './AppItem/Item';\nimport SpacerItem from './SpacerItem/Item';\nimport {\n    APP,\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_CHART,\n    EVENT_REPORT,\n    MESSAGES,\n    REPORTS,\n    RESOURCES,\n    USERS,\n    TEXT,\n    SPACER,\n} from '../../modules/itemTypes';\nimport { DEFAULT_STATE_ITEM_FILTERS } from '../../reducers/itemFilters';\n\nconst getGridItem = type => {\n    switch (type) {\n        case REPORT_TABLE:\n        case CHART:\n        case MAP:\n        case EVENT_CHART:\n        case EVENT_REPORT:\n            return VisualizationItem;\n        case MESSAGES:\n            return MessagesItem;\n        case REPORTS:\n        case RESOURCES:\n        case USERS:\n            return ListItem;\n        case TEXT:\n            return TextItem;\n        case SPACER:\n            return SpacerItem;\n        case APP:\n            return AppItem;\n        default:\n            return NotSupportedItem;\n    }\n};\n\nexport const Item = props => {\n    const GridItem = getGridItem(props.item.type);\n\n    return (\n        <GridItem\n            item={props.item}\n            editMode={props.editMode}\n            itemFilters={\n                props.editMode ? DEFAULT_STATE_ITEM_FILTERS : props.itemFilters\n            }\n            onToggleItemExpanded={props.onToggleItemExpanded}\n        />\n    );\n};\n","import React from 'react';\nimport ItemHeaderButton from '../Item/ItemHeaderButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { colors } from '../../modules/colors';\n\nconst style = {\n    button: {\n        position: 'absolute',\n        top: '7px',\n        right: '7px',\n        zIndex: '1000',\n    },\n    icon: {\n        fill: colors.red,\n    },\n};\n\nconst DeleteItemHeaderButton = ({ onClick }) => (\n    <ItemHeaderButton onClick={onClick} style={style.button}>\n        <DeleteIcon style={style.icon} />\n    </ItemHeaderButton>\n);\n\nexport default DeleteItemHeaderButton;\n","import React from 'react';\nimport LoadingMask from '@dhis2/d2-ui-core/loading-mask/LoadingMask.component';\n\nconst styles = {\n    modal: {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        width: '100%',\n        height: '100%',\n        zIndex: 999999998,\n        pointerEvents: 'none',\n    },\n    dark: {\n        backgroundColor: '#000000',\n        opacity: 0.2,\n        zIndex: 999999999,\n    },\n};\n\nconst ModalLoadingMask = ({ isLoading }) => {\n    if (!isLoading) {\n        return null;\n    }\n\n    return (\n        <div className=\"loading-mask-wrapper\">\n            <div style={styles.modal}>\n                <LoadingMask />\n            </div>\n            <div\n                style={{\n                    ...styles.modal,\n                    ...styles.dark,\n                }}\n            />\n        </div>\n    );\n};\n\nexport default ModalLoadingMask;\n","import React from 'react';\nimport { colors } from '../modules/colors';\n\nexport const NoContentMessage = ({ text }) => (\n    <div\n        style={{\n            padding: '50px 10px',\n            textAlign: 'center',\n            fontSize: '15px',\n            fontWeight: 500,\n            color: colors.charcoalGrey,\n        }}\n    >\n        {text}\n    </div>\n);\n\nexport default NoContentMessage;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash/debounce';\n\nconst defaultDebounceMs = 100;\nconst defaultBufferFactor = 0.25;\n\nclass ProgressiveLoadingContainer extends Component {\n    static propTypes = {\n        children: PropTypes.node.isRequired,\n        debounceMs: PropTypes.number,\n        bufferFactor: PropTypes.number,\n    };\n    static defaultProps = {\n        debounceMs: defaultDebounceMs,\n        bufferFactor: defaultBufferFactor,\n    };\n\n    state = {\n        shouldLoad: false,\n    };\n    containerRef = null;\n    shouldLoadHandler = null;\n\n    checkShouldLoad() {\n        const bufferPx = this.props.bufferFactor * window.innerHeight;\n\n        if (!this.containerRef) {\n            return;\n        }\n\n        const rect = this.containerRef.getBoundingClientRect();\n        if (\n            rect.bottom > -bufferPx &&\n            rect.top < window.innerHeight + bufferPx\n        ) {\n            this.setState({\n                shouldLoad: true,\n            });\n\n            this.removeHandler();\n        }\n    }\n\n    registerHandler() {\n        this.shouldLoadHandler = debounce(\n            () => this.checkShouldLoad(),\n            this.props.debounceMs\n        );\n\n        window.addEventListener('scroll', this.shouldLoadHandler);\n    }\n    removeHandler() {\n        window.removeEventListener('scroll', this.shouldLoadHandler);\n    }\n\n    componentDidMount() {\n        this.registerHandler();\n        this.checkShouldLoad();\n    }\n\n    componentWillUnmount() {\n        this.removeHandler();\n    }\n\n    render() {\n        const { children, debounceMs, bufferFactor, ...props } = this.props;\n        const { shouldLoad } = this.state;\n\n        return (\n            <div ref={ref => (this.containerRef = ref)} {...props}>\n                {shouldLoad && children}\n            </div>\n        );\n    }\n}\n\nexport default ProgressiveLoadingContainer;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ReactGridLayout from 'react-grid-layout';\n\nimport {\n    acUpdateDashboardLayout,\n    acRemoveDashboardItem,\n} from '../../actions/editDashboard';\nimport { Item } from '../Item/Item';\nimport { resize as pluginResize } from '../Item/VisualizationItem/plugin';\nimport { isPluginType } from '../../modules/itemTypes';\nimport {\n    GRID_ROW_HEIGHT,\n    GRID_COMPACT_TYPE,\n    ITEM_MIN_HEIGHT,\n    MARGIN,\n    getGridColumns,\n    hasShape,\n    onItemResize,\n} from './gridUtil';\nimport { orArray } from '../../modules/util';\nimport DeleteItemButton from './DeleteItemButton';\nimport ModalLoadingMask from '../../widgets/ModalLoadingMask';\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\n\nimport './ItemGrid.css';\nimport { sGetSelectedId, sGetSelectedIsLoading } from '../../reducers/selected';\nimport {\n    sGetEditDashboardRoot,\n    sGetEditDashboardItems,\n} from '../../reducers/editDashboard';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n} from '../../reducers/dashboards';\nimport ProgressiveLoadingContainer from '../Item/ProgressiveLoadingContainer';\n\n// Component\n\nconst EXPANDED_HEIGHT = 17;\n\nexport class ItemGrid extends Component {\n    state = {\n        expandedItems: {},\n    };\n\n    NO_ITEMS_MESSAGE = i18n.t('There are no items on this dashboard');\n\n    onToggleItemExpanded = clickedId => {\n        const isExpanded =\n            typeof this.state.expandedItems[clickedId] === 'boolean'\n                ? this.state.expandedItems[clickedId]\n                : false;\n\n        const expandedItems = { ...this.state.expandedItems };\n        expandedItems[clickedId] = !isExpanded;\n        this.setState({ expandedItems });\n    };\n\n    onRemoveItem = clickedId => {\n        this.props.acRemoveDashboardItem(clickedId);\n    };\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.edit) {\n            this.setState({ expandedItems: {} });\n        }\n    }\n\n    onLayoutChange = newLayout => {\n        if (this.props.edit) {\n            this.props.acUpdateDashboardLayout(newLayout);\n        }\n    };\n\n    onResizeStop = (layout, oldItem, newItem) => {\n        onItemResize(newItem.i);\n\n        const dashboardItem = this.props.dashboardItems.find(\n            item => item.id === newItem.i\n        );\n\n        // call resize on the item component if it's a plugin type\n        if (dashboardItem && isPluginType(dashboardItem)) {\n            pluginResize(dashboardItem);\n        }\n    };\n\n    onRemoveItemWrapper = id => () => this.onRemoveItem(id);\n\n    render() {\n        const { edit, isLoading, dashboardItems } = this.props;\n\n        if (!isLoading && !dashboardItems.length) {\n            return <NoContentMessage text={this.NO_ITEMS_MESSAGE} />;\n        }\n\n        const items = dashboardItems.map((item, index) => {\n            const expandedItem = this.state.expandedItems[item.id];\n            let hProp = { h: item.h };\n\n            if (expandedItem && expandedItem === true) {\n                hProp.h = item.h + EXPANDED_HEIGHT;\n            }\n\n            return Object.assign({}, item, hProp, {\n                i: item.id,\n                minH: ITEM_MIN_HEIGHT,\n            });\n        });\n\n        return (\n            <div className=\"grid-wrapper\">\n                <ModalLoadingMask isLoading={isLoading} />\n                <ReactGridLayout\n                    onLayoutChange={this.onLayoutChange}\n                    onResizeStop={this.onResizeStop}\n                    className=\"layout\"\n                    layout={items}\n                    margin={MARGIN}\n                    cols={getGridColumns()}\n                    rowHeight={GRID_ROW_HEIGHT}\n                    width={window.innerWidth}\n                    compactType={GRID_COMPACT_TYPE}\n                    isDraggable={edit}\n                    isResizable={edit}\n                    draggableCancel=\"input,textarea\"\n                >\n                    {items.map(item => {\n                        const itemClassNames = [\n                            item.type,\n                            edit ? 'edit' : 'view',\n                        ].join(' ');\n\n                        return (\n                            <ProgressiveLoadingContainer\n                                key={item.i}\n                                className={itemClassNames}\n                            >\n                                {edit ? (\n                                    <DeleteItemButton\n                                        onClick={this.onRemoveItemWrapper(\n                                            item.id\n                                        )}\n                                    />\n                                ) : null}\n                                <Item\n                                    item={item}\n                                    editMode={edit}\n                                    onToggleItemExpanded={\n                                        this.onToggleItemExpanded\n                                    }\n                                />\n                            </ProgressiveLoadingContainer>\n                        );\n                    })}\n                </ReactGridLayout>\n            </div>\n        );\n    }\n}\n\nItemGrid.propTypes = {\n    dashboardItems: PropTypes.array,\n};\n\nItemGrid.defaultProps = {\n    dashboardItems: [],\n};\n\n// Container\n\nconst mapStateToProps = (state, ownProps) => {\n    const selectedDashboard = ownProps.edit\n        ? sGetEditDashboardRoot(state)\n        : sGetDashboardById(state, sGetSelectedId(state));\n\n    const dashboardItems = ownProps.edit\n        ? sGetEditDashboardItems(state)\n        : sGetDashboardItems(state);\n\n    return {\n        isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n        dashboardItems,\n    };\n};\n\nconst mapDispatchToProps = {\n    acUpdateDashboardLayout,\n    acRemoveDashboardItem,\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const validItems = orArray(stateProps.dashboardItems).filter(hasShape);\n\n    return {\n        ...dispatchProps,\n        edit: ownProps.edit,\n        isLoading: stateProps.isLoading,\n        dashboardItems: validItems,\n        onItemResize,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n    mergeProps\n)(ItemGrid);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport i18n from '@dhis2/d2-i18n';\n\nimport { colors } from '../../modules/colors';\n\nconst styles = {\n    badgeContainer: {\n        margin: '2px',\n        padding: '0 16px',\n        borderRadius: '4px',\n        color: colors.white,\n        backgroundColor: '#212934',\n        height: 36,\n        display: 'flex',\n        alignItems: 'center',\n    },\n    badge: {\n        fontSize: '13px',\n        cursor: 'pointer',\n        whiteSpace: 'nowrap',\n    },\n    badgeRemove: {\n        fontSize: '12px',\n        textDecoration: 'underline',\n        marginLeft: '24px',\n        cursor: 'pointer',\n    },\n};\n\nclass FilterBadge extends Component {\n    onClick = id => () => this.props.onClick(id);\n    onRemove = id => () => this.props.onRemove(id);\n\n    render() {\n        const { data } = this.props;\n\n        return (\n            <div style={styles.badgeContainer}>\n                <span style={styles.badge} onClick={this.onClick(data.id)}>\n                    {`${data.name}: ${\n                        data.values.length > 1\n                            ? i18n.t('{{count}} selected', {\n                                  count: data.values.length,\n                              })\n                            : data.values[0].name\n                    }`}\n                </span>\n                <span\n                    style={styles.badgeRemove}\n                    onClick={this.onRemove(data.id)}\n                >\n                    {i18n.t('Remove')}\n                </span>\n            </div>\n        );\n    }\n}\n\nFilterBadge.propTypes = {\n    data: PropTypes.object.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onRemove: PropTypes.func.isRequired,\n};\n\nFilterBadge.defaultProps = {\n    onClick: Function.prototype,\n    onRemove: Function.prototype,\n};\n\nexport default FilterBadge;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { createSelector } from 'reselect';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport { sGetDimensions } from '../../reducers/dimensions';\nimport { sGetItemFiltersRoot } from '../../reducers/itemFilters';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { getTopOffset } from '../ControlBar/controlBarDimensions';\nimport { acRemoveItemFilter } from '../../actions/itemFilters';\nimport { acRemoveEditItemFilter } from '../../actions/editItemFilters';\nimport { acSetActiveModalDimension } from '../../actions/activeModalDimension';\n\nimport FilterBadge from './FilterBadge';\n\nconst styles = {\n    bar: {\n        position: 'sticky',\n        zIndex: 7,\n        padding: '8px 0',\n        display: 'flex',\n        justifyContent: 'center',\n        flexWrap: 'wrap',\n    },\n};\n\nexport class FilterBar extends Component {\n    onBadgeRemove = id => {\n        this.props.removeItemFilter(id);\n        this.props.removeEditItemFilter(id);\n    };\n\n    onBadgeClick = id => {\n        this.props.setActiveModalDimension({\n            id,\n            name: this.props.filters.find(item => item.id === id).name,\n        });\n    };\n\n    render() {\n        const { filters, userRows, classes } = this.props;\n        const top = getTopOffset(userRows) + 10;\n\n        return filters.length ? (\n            <div className={classes.bar} style={{ top }}>\n                {filters.map(filter => (\n                    <FilterBadge\n                        key={filter.id}\n                        data={filter}\n                        onClick={this.onBadgeClick}\n                        onRemove={this.onBadgeRemove}\n                    />\n                ))}\n            </div>\n        ) : null;\n    }\n}\n\nFilterBar.propTypes = {\n    filters: PropTypes.array.isRequired,\n    removeItemFilter: PropTypes.func.isRequired,\n    removeEditItemFilter: PropTypes.func.isRequired,\n};\n\nFilterBar.defaultProps = {\n    filters: [],\n    removeItemFIlter: Function.prototype,\n    removeEditItemFilter: Function.prototype,\n};\n\n// simplify the filters structure to:\n// [{ id: 'pe', name: 'Period', values: [{ id: 2019: name: '2019' }, {id: 'LAST_MONTH', name: 'Last month' }]}, ...]\nconst filtersSelector = createSelector(\n    [sGetItemFiltersRoot, sGetDimensions],\n    (filters, dimensions) =>\n        Object.keys(filters).reduce((arr, id) => {\n            arr.push({\n                id: id,\n                name: dimensions[id].name,\n                values: filters[id].map(value => ({\n                    id: value.id,\n                    name: value.displayName || value.name,\n                })),\n            });\n\n            return arr;\n        }, [])\n);\n\nconst mapStateToProps = state => ({\n    filters: filtersSelector(state),\n    userRows: sGetControlBarUserRows(state),\n});\n\nexport default connect(\n    mapStateToProps,\n    {\n        setActiveModalDimension: acSetActiveModalDimension,\n        removeItemFilter: acRemoveItemFilter,\n        removeEditItemFilter: acRemoveEditItemFilter,\n    }\n)(withStyles(styles)(FilterBar));\n","import React, { Fragment } from 'react';\nimport TitleBar from '../TitleBar/TitleBar';\nimport ItemGrid from '../ItemGrid/ItemGrid';\nimport FilterBar from '../FilterBar/FilterBar';\n\nexport const DashboardContent = props => (\n    <Fragment>\n        <TitleBar edit={props.editMode} />\n        <FilterBar />\n        <ItemGrid edit={props.editMode} />\n    </Fragment>\n);\n\nexport default DashboardContent;\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport isEmpty from 'lodash/isEmpty';\nimport i18n from '@dhis2/d2-i18n';\n\nimport {\n    sGetAllDashboards,\n    sDashboardsIsFetching,\n} from '../../reducers/dashboards';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport DashboardsBar from '../ControlBar/DashboardsBar';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport DashboardContent from './DashboardContent';\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nexport const Content = ({ hasDashboardContent, dashboardsIsEmpty }) => {\n    const msg = dashboardsIsEmpty\n        ? i18n.t(\n              'No dashboards found. Use the + button to create a new dashboard.'\n          )\n        : i18n.t('Requested dashboard not found');\n\n    return hasDashboardContent ? (\n        <DashboardContent editMode={false} />\n    ) : (\n        <NoContentMessage text={msg} />\n    );\n};\n\nexport const ViewDashboard = ({ id, dashboardsIsEmpty, dashboardsLoaded }) => {\n    const hasDashboardContent = id && !dashboardsIsEmpty;\n    const contentNotReady = !dashboardsLoaded || id === null;\n\n    return (\n        <Fragment>\n            <DashboardsBar />\n            <DashboardVerticalOffset />\n            <div className=\"dashboard-wrapper\">\n                {contentNotReady ? null : (\n                    <Content\n                        hasDashboardContent={hasDashboardContent}\n                        dashboardsIsEmpty={dashboardsIsEmpty}\n                    />\n                )}\n            </div>\n        </Fragment>\n    );\n};\n\nconst mapStateToProps = state => {\n    const dashboards = sGetAllDashboards(state);\n\n    return {\n        id: sGetSelectedId(state),\n        dashboardsIsEmpty: isEmpty(dashboards),\n        dashboardsLoaded: !sDashboardsIsFetching(state),\n    };\n};\n\nexport default connect(mapStateToProps)(ViewDashboard);\n","import React from 'react';\nimport RaisedButton from 'material-ui/RaisedButton';\n\nimport './PrimaryButton.css';\n\nconst PrimaryButton = props => {\n    const { onClick, children, disabled, style } = props;\n    const label = typeof children === 'string' ? children : null;\n    const classes = ['d2ui-primary-button', disabled ? 'disabled' : null].join(\n        ' '\n    );\n\n    return (\n        <RaisedButton\n            className={classes}\n            style={style}\n            primary={true}\n            onClick={onClick}\n            label={label}\n            disabled={disabled}\n        />\n    );\n};\n\nexport default PrimaryButton;\n","import React from 'react';\nimport MuiFlatButton from 'material-ui/FlatButton';\nimport { colors } from '../modules/colors';\n\nconst defaultStyles = {\n    color: colors.royalBlue,\n    backgroundColor: 'transparent',\n    minWidth: '30px',\n};\n\nconst FlatButton = ({ onClick, children, style, disabled }) => {\n    const label = typeof children === 'string' ? children : null;\n    const classes = ['d2ui-flat-button', disabled ? 'disabled' : null].join(\n        ' '\n    );\n\n    const combinedStyle = Object.assign({}, defaultStyles, style);\n\n    return (\n        <MuiFlatButton\n            className={classes}\n            style={combinedStyle}\n            onClick={onClick}\n            label={label}\n            disabled={disabled}\n        >\n            {typeof children !== 'string' ? children : null}\n        </MuiFlatButton>\n    );\n};\n\nexport default FlatButton;\n","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport Dialog from 'material-ui/Dialog';\n\nimport FlatButton from '../../widgets/FlatButton';\nimport PrimaryButton from '../../widgets/PrimaryButton';\n\nexport const ConfirmDeleteDialog = ({\n    dashboardName,\n    onDeleteConfirmed,\n    onContinueEditing,\n    open,\n}) => {\n    const actions = [\n        <FlatButton onClick={onDeleteConfirmed}>{i18n.t('Delete')}</FlatButton>,\n        <PrimaryButton onClick={onContinueEditing}>\n            {i18n.t('Continue editing')}\n        </PrimaryButton>,\n    ];\n\n    return (\n        <Dialog\n            title={i18n.t('Confirm delete dashboard')}\n            actions={actions}\n            modal={true}\n            open={open}\n        >\n            {i18n.t(\n                'Are you sure you want to delete dashboard \"{{ dashboardName }}\"?',\n                { dashboardName }\n            )}\n        </Dialog>\n    );\n};\n\nexport default ConfirmDeleteDialog;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport ControlBar from './ControlBar';\nimport TranslationDialog from '@dhis2/d2-ui-translation-dialog';\n\nimport PrimaryButton from '../../widgets/PrimaryButton';\nimport FlatButton from '../../widgets/FlatButton';\nimport ConfirmDeleteDialog from './ConfirmDeleteDialog';\nimport {\n    tSaveDashboard,\n    acClearEditDashboard,\n} from '../../actions/editDashboard';\nimport {\n    tDeleteDashboard,\n    acSetDashboardDisplayName,\n} from '../../actions/dashboards';\nimport {\n    sGetEditDashboardRoot,\n    sGetIsNewDashboard,\n} from '../../reducers/editDashboard';\nimport {\n    CONTROL_BAR_ROW_HEIGHT,\n    MIN_ROW_COUNT,\n    getControlBarHeight,\n} from './controlBarDimensions';\nimport { apiFetchDashboard } from '../../api/dashboards';\n\nimport classes from './styles/DashboardsBar.module.css';\n\nconst buttonBarStyle = {\n    height: CONTROL_BAR_ROW_HEIGHT,\n    paddingTop: '15px',\n    marginLeft: '15px',\n    marginRight: '15px',\n};\n\nexport class EditBar extends Component {\n    state = {\n        translationDialogIsOpen: false,\n        dashboardModel: undefined,\n        confirmDeleteDialogOpen: false,\n        redirectUrl: undefined,\n    };\n\n    onConfirmDelete = () => {\n        this.setState({ confirmDeleteDialogOpen: true });\n    };\n\n    onSave = () => {\n        this.props.onSave().then(newId => {\n            this.setState({ redirectUrl: `/${newId}` });\n        });\n    };\n\n    onDiscard = () => {\n        this.props.onDiscardChanges();\n        const redirectUrl = this.props.dashboardId\n            ? `/${this.props.dashboardId}`\n            : '/';\n        this.setState({ redirectUrl });\n    };\n\n    onContinueEditing = () => {\n        this.setState({ confirmDeleteDialogOpen: false });\n    };\n\n    onDeleteConfirmed = () => {\n        this.setState({ confirmDeleteDialogOpen: false });\n        this.props.onDelete(this.props.dashboardId).then(() => {\n            this.setState({ redirectUrl: '/' });\n        });\n    };\n\n    onTranslationsSaved = async translations => {\n        if (translations && translations.length) {\n            const dbLocale = await this.context.d2.currentUser.userSettings.get(\n                'keyDbLocale'\n            );\n\n            const translation = translations.find(\n                t => t.locale === dbLocale && t.property === 'NAME'\n            );\n\n            if (translation && translation.value) {\n                this.props.onTranslate(\n                    this.props.dashboardId,\n                    translation.value\n                );\n            }\n        }\n    };\n\n    fetchDashboardModel = () => {\n        if (this.props.dashboardId && !this.state.dashboardModel) {\n            apiFetchDashboard(this.props.dashboardId).then(dashboardModel =>\n                this.setState({ dashboardModel })\n            );\n        }\n    };\n\n    componentDidMount() {\n        this.fetchDashboardModel();\n    }\n\n    componentDidUpdate() {\n        this.fetchDashboardModel();\n    }\n\n    toggleTranslationDialog = () => {\n        this.setState({\n            translationDialogIsOpen: !this.state.translationDialogIsOpen,\n        });\n    };\n\n    confirmDeleteDialog = () =>\n        this.props.deleteAccess && this.props.dashboardId ? (\n            <ConfirmDeleteDialog\n                dashboardName={this.props.dashboardName}\n                onDeleteConfirmed={this.onDeleteConfirmed}\n                onContinueEditing={this.onContinueEditing}\n                open={this.state.confirmDeleteDialogOpen}\n            />\n        ) : null;\n\n    translationDialog = () =>\n        this.state.dashboardModel && this.state.dashboardModel.id ? (\n            <TranslationDialog\n                className=\"translation-dialog\"\n                d2={this.context.d2}\n                open={this.state.translationDialogIsOpen}\n                onRequestClose={this.toggleTranslationDialog}\n                objectToTranslate={this.state.dashboardModel}\n                fieldsToTranslate={['name', 'description']}\n                // TODO handle messages in snackbar\n                onTranslationSaved={this.onTranslationsSaved}\n                onTranslationError={err =>\n                    console.log('translation update error', err)\n                }\n            />\n        ) : null;\n\n    render() {\n        if (this.state.redirectUrl) {\n            return <Redirect to={this.state.redirectUrl} />;\n        }\n\n        const { dashboardId, deleteAccess, updateAccess } = this.props;\n        const controlBarHeight = getControlBarHeight(MIN_ROW_COUNT);\n\n        const discardBtnText = updateAccess\n            ? i18n.t('Exit without saving')\n            : i18n.t('Go to dashboards');\n\n        return (\n            <Fragment>\n                <ControlBar height={controlBarHeight} editMode={true}>\n                    <div style={buttonBarStyle}>\n                        {updateAccess ? (\n                            <div className={classes.leftControls}>\n                                <span style={{ marginRight: '15px' }}>\n                                    <PrimaryButton\n                                        className=\"save-button\"\n                                        onClick={this.onSave}\n                                    >\n                                        {i18n.t('Save changes')}\n                                    </PrimaryButton>\n                                </span>\n                                {dashboardId && deleteAccess ? (\n                                    <FlatButton\n                                        className=\"delete-button\"\n                                        onClick={this.onConfirmDelete}\n                                    >\n                                        {i18n.t('Delete')}\n                                    </FlatButton>\n                                ) : null}\n                                {dashboardId ? (\n                                    <FlatButton\n                                        className=\"translate-button\"\n                                        onClick={this.toggleTranslationDialog}\n                                    >\n                                        {i18n.t('Translate')}\n                                    </FlatButton>\n                                ) : null}\n                            </div>\n                        ) : null}\n\n                        <div className={classes.rightControls}>\n                            <FlatButton\n                                className=\"discard-button\"\n                                onClick={this.onDiscard}\n                            >\n                                {discardBtnText}\n                            </FlatButton>\n                        </div>\n                    </div>\n                </ControlBar>\n                {this.translationDialog()}\n                {this.confirmDeleteDialog()}\n            </Fragment>\n        );\n    }\n}\n\nEditBar.contextTypes = {\n    d2: PropTypes.object,\n};\n\nconst mapStateToProps = state => {\n    const dashboard = sGetEditDashboardRoot(state);\n\n    let deleteAccess;\n    let updateAccess;\n    if (sGetIsNewDashboard(state)) {\n        deleteAccess = true;\n        updateAccess = true;\n    } else {\n        updateAccess = dashboard.access ? dashboard.access.update : false;\n        deleteAccess = dashboard.access ? dashboard.access.delete : false;\n    }\n\n    return {\n        dashboardId: dashboard.id,\n        dashboardName: dashboard.name,\n        deleteAccess,\n        updateAccess,\n    };\n};\n\nconst mapDispatchToProps = dispatch => ({\n    onSave: () => dispatch(tSaveDashboard()).then(id => id),\n    onDelete: id => dispatch(tDeleteDashboard(id)),\n    onDiscardChanges: () => dispatch(acClearEditDashboard()),\n    onTranslate: (id, value) => dispatch(acSetDashboardDisplayName(id, value)),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(EditBar);\n","import React, { Fragment, Component } from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\n\nimport { acSetEditDashboard } from '../../actions/editDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n    sDashboardsIsFetching,\n} from '../../reducers/dashboards';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport DashboardContent from './DashboardContent';\nimport EditBar from '../ControlBar/EditBar';\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nexport const Content = ({ updateAccess }) => {\n    return updateAccess ? (\n        <DashboardContent editMode={true} />\n    ) : (\n        <NoContentMessage text={i18n.t('No access')} />\n    );\n};\nexport class EditDashboard extends Component {\n    state = {\n        initialized: false,\n    };\n\n    initEditDashboard = () => {\n        if (this.props.dashboard) {\n            this.setState({ initialized: true });\n            this.props.setEditDashboard(this.props.dashboard, this.props.items);\n        }\n    };\n\n    componentDidMount() {\n        this.initEditDashboard();\n    }\n\n    componentDidUpdate() {\n        if (!this.state.initialized) {\n            this.initEditDashboard();\n        }\n    }\n\n    getDashboardContent = () => {\n        const contentNotReady =\n            !this.props.dashboardsLoaded || this.props.id === null;\n\n        return (\n            <div className=\"dashboard-wrapper\">\n                {contentNotReady ? null : (\n                    <Content updateAccess={this.props.updateAccess} />\n                )}\n            </div>\n        );\n    };\n\n    render() {\n        return (\n            <Fragment>\n                <EditBar />\n                <DashboardVerticalOffset editMode={true} />\n                {this.getDashboardContent()}\n            </Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    const id = sGetSelectedId(state);\n    const dashboard = id ? sGetDashboardById(state, id) : null;\n\n    const updateAccess =\n        dashboard && dashboard.access ? dashboard.access.update : false;\n\n    return {\n        dashboard,\n        id,\n        updateAccess,\n        items: sGetDashboardItems(state),\n        dashboardsLoaded: !sDashboardsIsFetching(state),\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        setEditDashboard: acSetEditDashboard,\n    }\n)(EditDashboard);\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\n\nimport { acSetEditNewDashboard } from '../../actions/editDashboard';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport EditBar from '../ControlBar/EditBar';\nimport DashboardContent from './DashboardContent';\n\nclass NewDashboard extends Component {\n    componentDidMount() {\n        this.props.setNewDashboard();\n    }\n\n    render() {\n        return (\n            <Fragment>\n                <EditBar />\n                <DashboardVerticalOffset editMode={true} />\n                <div className=\"dashboard-wrapper\">\n                    <DashboardContent editMode={true} />\n                </div>\n            </Fragment>\n        );\n    }\n}\n\nexport default connect(\n    null,\n    {\n        setNewDashboard: acSetEditNewDashboard,\n    }\n)(NewDashboard);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { tSelectDashboard } from '../../actions/dashboards';\nimport { sDashboardsIsFetching } from '../../reducers/dashboards';\nimport { EDIT, NEW } from './dashboardModes';\nimport ViewDashboard from './ViewDashboard';\nimport EditDashboard from './EditDashboard';\nimport NewDashboard from './NewDashboard';\n\nclass Dashboard extends Component {\n    setDashboard = () => {\n        if (this.props.dashboardsLoaded) {\n            const id = this.props.match.params.dashboardId || null;\n            this.props.selectDashboard(id);\n        }\n    };\n\n    componentDidMount() {\n        this.setDashboard();\n    }\n\n    componentDidUpdate() {\n        this.setDashboard();\n    }\n\n    render() {\n        switch (this.props.mode) {\n            case EDIT:\n                return <EditDashboard />;\n            case NEW:\n                return <NewDashboard />;\n            default:\n                return <ViewDashboard />;\n        }\n    }\n}\n\nconst mapStateToProps = state => {\n    return { dashboardsLoaded: !sDashboardsIsFetching(state) };\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        selectDashboard: tSelectDashboard,\n    }\n)(Dashboard);\n","export const EDIT = 'edit';\nexport const NEW = 'new';\nexport const VIEW = 'view';\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport HeaderBar from '@dhis2/ui/widgets/HeaderBar';\n\nimport { EDIT, VIEW, NEW } from './Dashboard/dashboardModes';\nimport { acReceivedUser } from '../actions/user';\nimport { tFetchDashboards } from '../actions/dashboards';\nimport { tSetControlBarRows } from '../actions/controlBar';\nimport { tSetDimensions } from '../actions/dimensions';\nimport Dashboard from './Dashboard/Dashboard';\nimport SnackbarMessage from './SnackbarMessage/SnackbarMessage';\n\nimport 'typeface-roboto';\nimport './App.css';\n\nexport class App extends Component {\n    componentDidMount() {\n        this.props.setCurrentUser(this.props.d2.currentUser);\n        this.props.fetchDashboards();\n        this.props.setControlBarRows();\n        this.props.setDimensions(this.props.d2);\n    }\n\n    getChildContext() {\n        return { baseUrl: this.props.baseUrl, i18n, d2: this.props.d2 };\n    }\n\n    render() {\n        return (\n            <div className=\"app-wrapper\">\n                <div className=\"dashboard-header-bar\">\n                    <HeaderBar appName={i18n.t('Dashboard')} />\n                </div>\n                <Router>\n                    <Switch>\n                        <Route\n                            exact\n                            path=\"/\"\n                            render={props => (\n                                <Dashboard {...props} mode={VIEW} />\n                            )}\n                        />\n                        <Route\n                            exact\n                            path=\"/new\"\n                            render={props => (\n                                <Dashboard {...props} mode={NEW} />\n                            )}\n                        />\n                        <Route\n                            exact\n                            path=\"/:dashboardId\"\n                            render={props => (\n                                <Dashboard {...props} mode={VIEW} />\n                            )}\n                        />\n                        <Route\n                            exact\n                            path=\"/:dashboardId/edit\"\n                            render={props => (\n                                <Dashboard {...props} mode={EDIT} />\n                            )}\n                        />\n                    </Switch>\n                </Router>\n                <SnackbarMessage />\n            </div>\n        );\n    }\n}\n\nApp.childContextTypes = {\n    baseUrl: PropTypes.string,\n    i18n: PropTypes.object,\n    d2: PropTypes.object,\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setCurrentUser: currentUser => dispatch(acReceivedUser(currentUser)),\n        fetchDashboards: () => dispatch(tFetchDashboards()),\n        setControlBarRows: () => dispatch(tSetControlBarRows()),\n        setDimensions: d2 => dispatch(tSetDimensions(d2)),\n    };\n};\n\nexport default connect(\n    null,\n    mapDispatchToProps\n)(App);\n","import { RECEIVED_USER } from '../reducers/user';\n\nexport const acReceivedUser = value => ({\n    type: RECEIVED_USER,\n    value,\n});\n","//------------------------------------------------------------------------------\n// <auto-generated>\n// This code was generated by d2-i18n-generate.\n//\n// Changes to this file may cause incorrect behavior and will be lost if\n// the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\nimport i18n from '@dhis2/d2-i18n';\nimport moment from 'moment';\nimport 'moment/locale/lo';\nimport 'moment/locale/sv';\nimport 'moment/locale/ur';\nimport 'moment/locale/vi';\n\nimport enTranslations from './en/translations.json';\nimport loTranslations from './lo/translations.json';\nimport svTranslations from './sv/translations.json';\nimport urTranslations from './ur/translations.json';\nimport viTranslations from './vi/translations.json';\n\nconst namespace = 'dashboards-app';\nmoment.locale('en');\n\ni18n.addResources('en', namespace, enTranslations);\ni18n.addResources('lo', namespace, loTranslations);\ni18n.addResources('sv', namespace, svTranslations);\ni18n.addResources('ur', namespace, urTranslations);\ni18n.addResources('vi', namespace, viTranslations);\n\ni18n.setDefaultNamespace(namespace);\ni18n.changeLanguage('en');\n\nexport default i18n;\n","/** @module reducers/selected */\nimport { validateReducer } from '../modules/util';\n\nexport const SET_STYLE = 'SET_STYLE';\n\nexport const DEFAULT_STATE_STYLE = 'LIST';\n\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\nconst style = (state = DEFAULT_STATE_STYLE, action) => {\n    switch (action.type) {\n        case SET_STYLE:\n            return validateReducer(action.value, DEFAULT_STATE_STYLE);\n        default:\n            return state;\n    }\n};\n\nexport default style;\n\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\nexport const sGetStyleRoot = state => state.style;\n","import { combineReducers } from 'redux';\nimport arraySort from 'd2-utilizr/lib/arraySort';\n\nimport dashboards, { sGetDashboardsRoot } from './dashboards';\nimport selected from './selected';\nimport dashboardsFilter, {\n    ownerData,\n    sGetFilterName,\n    sGetFilterOrder,\n    sGetFilterOwner,\n} from './dashboardsFilter';\nimport controlBar from './controlBar';\nimport visualizations from './visualizations';\nimport editDashboard from './editDashboard';\nimport messages from './messages';\nimport user from './user';\nimport snackbar from './snackbar';\nimport itemFilters from './itemFilters';\nimport editItemFilters from './editItemFilters';\nimport style from './style';\nimport dimensions from './dimensions';\nimport settings from './settings';\nimport activeModalDimension from './activeModalDimension';\n\nconst USER = 'system';\n\n// Reducers\n\nexport default combineReducers({\n    dashboards,\n    selected,\n    dashboardsFilter,\n    controlBar,\n    visualizations,\n    messages,\n    user,\n    editDashboard,\n    itemFilters,\n    editItemFilters,\n    style,\n    snackbar,\n    dimensions,\n    settings,\n    activeModalDimension,\n});\n\n// Map constants to data\nconst mapConstToData = {\n    NAME: 'name',\n    ITEMS: 'numberOfItems',\n    CREATED: 'created',\n    OWNER: 'owner',\n};\n\n// Selectors\n\n// Filter dashboards by name\nexport const sFilterDashboardsByName = (dashboards, filter) =>\n    dashboards.filter(d =>\n        d.displayName.toLowerCase().includes(filter.toLowerCase())\n    );\n\n// Filter dashboards by owner, TODO FIXME\nexport const sFilterDashboardsByOwner = (dashboards, filter) => {\n    const ME = ownerData[1]; // TODO\n    const OTHERS = ownerData[2]; // TODO\n\n    switch (filter) {\n        case ME:\n            return dashboards.filter(d => d.owner === USER);\n        case OTHERS:\n            return dashboards.filter(d => d.owner !== USER);\n        default:\n            return dashboards;\n    }\n};\n\n// Filter dashboards by order\nexport const sFilterDashboardsByOrder = (dashboards, filter) => {\n    const filterValues = filter.split(':');\n\n    const key = filterValues[0];\n    const direction = filterValues[1];\n\n    return arraySort(dashboards, direction, mapConstToData[key]);\n};\n\n// Selectors dependency level 2\n\n// Get filtered dashboards\nexport const sGetFilteredDashboards = state => {\n    const dashboards = sGetDashboardsRoot(state);\n\n    const nameFilter = sGetFilterName(state);\n    const ownerFilter = sGetFilterOwner(state);\n    const orderFilter = sGetFilterOrder(state);\n\n    return sFilterDashboardsByOrder(\n        sFilterDashboardsByName(\n            sFilterDashboardsByOwner(dashboards, ownerFilter),\n            nameFilter\n        ),\n        orderFilter\n    );\n};\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport reducer from './reducers';\n\nconst configureStore = () => {\n    const middleware = [thunk];\n\n    // Enable Redux devtools if extension is installed instead of redux-logger\n    const composeEnhancers =\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n    if (\n        !window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ &&\n        process.env.NODE_ENV !== 'production'\n    ) {\n        middleware.push(createLogger());\n    }\n\n    return createStore(\n        reducer,\n        composeEnhancers(applyMiddleware(...middleware))\n    );\n};\n\nexport default configureStore;\n","import getMuiTheme from 'material-ui/styles/getMuiTheme';\n\nimport { colors } from './colors';\n\nexport const muiTheme = () => {\n    const raisedButton = {\n        primaryColor: colors.royalBlue,\n        disabledColor: colors.paleBlue,\n        disabledTextColor: colors.lightMediumGrey,\n    };\n\n    const theme = getMuiTheme({ raisedButton });\n\n    return theme;\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport { MuiThemeProvider as V0MuiThemeProvider } from 'material-ui';\nimport { init as d2Init, config, getManifest, getUserSettings } from 'd2';\nimport dhis2theme from '@dhis2/d2-ui-core/theme/mui3.theme';\n\n// temporary workaround until new ui headerbar is ready\nimport 'material-design-icons/iconfont/material-icons.css';\nimport './reset.css';\n\nimport App from './components/App';\nimport './index.css';\nimport i18n from './locales';\nimport configureStore from './configureStore';\nimport { muiTheme } from './modules/theme';\n\nconst v1Theme = () => createMuiTheme({ ...dhis2theme });\n\nconst configI18n = userSettings => {\n    const uiLocale = userSettings.keyUiLocale;\n\n    if (uiLocale && uiLocale !== 'en') {\n        config.i18n.sources.add(`./i18n/i18n_module_${uiLocale}.properties`);\n    }\n\n    config.i18n.sources.add('./i18n/i18n_module_en.properties');\n    i18n.changeLanguage(uiLocale);\n};\n\nconst init = async () => {\n    const manifest = await getManifest('./manifest.webapp');\n\n    // log app info\n    console.info(\n        `Dashboards app, v${manifest.version}, ${\n            manifest.manifest_generated_at\n        }`\n    );\n\n    const isProd = process.env.NODE_ENV === 'production';\n\n    if (\n        !isProd &&\n        (!process.env.REACT_APP_DHIS2_BASE_URL ||\n            !process.env.REACT_APP_DHIS2_AUTHORIZATION)\n    ) {\n        throw new Error(\n            'Missing env variables REACT_APP_DHIS2_BASE_URL and REACT_APP_DHIS2_AUTHORIZATION'\n        );\n    }\n\n    // api config\n    const baseUrl = isProd\n        ? manifest.activities.dhis.href\n        : process.env.REACT_APP_DHIS2_BASE_URL;\n    const authorization = process.env.REACT_APP_DHIS2_AUTHORIZATION;\n\n    config.baseUrl = `${baseUrl}/api/${manifest.dhis2.apiVersion}`;\n    config.headers = isProd ? null : { Authorization: authorization };\n    config.schemas = [\n        'chart',\n        'map',\n        'report',\n        'reportTable',\n        'eventChart',\n        'eventReport',\n        'dashboard',\n        'organisationUnit',\n        'userGroup',\n    ];\n\n    getUserSettings()\n        .then(configI18n)\n        .then(() => d2Init(config))\n        .then(initializedD2 => {\n            ReactDOM.render(\n                <Provider store={configureStore()}>\n                    <MuiThemeProvider theme={v1Theme()}>\n                        <V0MuiThemeProvider muiTheme={muiTheme()}>\n                            <App baseUrl={baseUrl} d2={initializedD2} />\n                        </V0MuiThemeProvider>\n                    </MuiThemeProvider>\n                </Provider>,\n                document.getElementById('root')\n            );\n        });\n};\n\ninit();\n","import isObject from 'lodash/isObject';\n\n// validation\nexport function orNull(param) {\n    return param === undefined ? null : param;\n}\n\nexport function orArray(param) {\n    return Array.isArray(param) ? param : [];\n}\n\nexport function orObject(param) {\n    return isObject(param) ? param : {};\n}\n\n// array\nexport function arrayGetById(array, id) {\n    return array.find(item => item.id === id);\n}\n\n// object\nexport function arrayToIdMap(array) {\n    return array.reduce((obj, item) => {\n        obj[item.id] = item;\n        return obj;\n    }, {});\n}\n\n// date\nexport function getDate() {\n    const y = Math.floor(Math.random() * 3) + 2015;\n    const M = Math.floor(Math.random() * 12) + 1;\n    const d = Math.floor(Math.random() * 28) + 1;\n    // const h = Math.floor(Math.random() * 23) + 1;\n    // const m = Math.floor(Math.random() * 59) + 1;\n    // const s = Math.floor(Math.random() * 59) + 1;\n\n    return new Date(`${y}-${M}-${d}`)\n        .toJSON()\n        .replace('T', ' ')\n        .substr(0, 10);\n}\n\nexport const formatDate = (value, uiLocale) => {\n    if (typeof global.Intl !== 'undefined' && Intl.DateTimeFormat) {\n        const locale = uiLocale || 'en';\n        return new Intl.DateTimeFormat(locale, {\n            year: 'numeric',\n            month: 'short',\n            day: 'numeric',\n        }).format(new Date(value));\n    }\n\n    return value.substr(0, 19).replace('T', ' ');\n};\n\n/**\n * Sorts an array of objects based on provided date property\n *\n * @param {Array} items Array of objects\n * @param {String} dateProp Name of the date property to be used for sorting\n * @param {Boolean} ascending Whether to sort ascending or descending\n */\nexport const sortByDate = (items, dateProp, ascending = true) => {\n    const values = Object.values(items);\n\n    values.sort((a, b) => {\n        const aDate = new Date(a[dateProp]);\n        const bDate = new Date(b[dateProp]);\n\n        return ascending ? aDate - bDate : bDate - aDate;\n    });\n\n    return values;\n};\n\n// reducer validator\nexport const validateReducer = (value, defaultValue) =>\n    value === undefined || value === null ? defaultValue : value;\n\nexport const getBaseUrl = d2 => {\n    const api = d2.Api.getApi();\n    const idx = api.baseUrl.indexOf('/api');\n    return idx > -1 ? api.baseUrl.slice(0, idx) : api.baseUrl;\n};\n\nexport const getWithoutId = object => ({\n    ...object,\n    id: undefined,\n});\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ControlBar_root__3LaTt\",\"content\":\"ControlBar_content__1r98-\",\"draghandle\":\"ControlBar_draghandle__1VWa0\"};"],"sourceRoot":""}
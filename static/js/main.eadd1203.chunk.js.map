{"version":3,"sources":["modules/itemTypes.js","api/metadata.js","components/Item/ListItem/Item.module.css","reducers/user.js","reducers/dashboards.js","reducers/selected.js","reducers/visualizations.js","actions/visualizations.js","api/index.js","api/dashboards.js","reducers/messages.js","api/messages.js","reducers/snackbar.js","actions/snackbar.js","components/SnackbarMessage/SnackbarMessage.js","actions/selected.js","api/localStorage.js","components/Item/MessagesItem/actions.js","reducers/editDashboard.js","reducers/editItemFilters.js","reducers/itemFilters.js","actions/itemFilters.js","actions/editItemFilters.js","api/editDashboard.js","actions/editDashboard.js","actions/dashboards.js","reducers/controlBar.js","api/controlBar.js","actions/controlBar.js","reducers/dimensions.js","reducers/settings.js","actions/dimensions.js","components/ControlBar/ShowMoreButton.js","components/ControlBar/controlBarDimensions.js","components/ControlBar/ControlBar.js","icons/Star.js","api/dataStatistics.js","components/ControlBar/DashboardItemChip.js","icons/AddCircle.js","icons/Clear.js","components/ControlBar/ClearButton.js","reducers/dashboardsFilter.js","components/ControlBar/Filter.js","components/ControlBar/DashboardsBar.js","actions/dashboardsFilter.js","components/Dashboard/DashboardVerticalOffset.js","components/ItemSelector/HeaderMenuItem.js","icons/Launch.js","components/ItemSelector/ContentMenuItem.js","components/ItemSelector/selectableItems.js","components/ItemSelector/CategorizedMenuGroup.js","components/ItemSelector/actions.js","components/ItemSelector/SinglesMenuGroup.js","components/ItemSelector/ItemSelector.js","components/TitleBar/EditTitleBar.js","components/ItemFilter/FilterDialog.js","reducers/activeModalDimension.js","actions/activeModalDimension.js","components/ItemFilter/FilterSelector.js","components/TitleBar/Info.js","components/TitleBar/ViewTitleBar.js","components/TitleBar/TitleBar.js","components/Item/VisualizationItem/DefaultPlugin.js","components/Item/ItemHeader.js","components/Item/VisualizationItem/ItemFooter.js","components/Item/ItemHeaderButton.js","components/Item/VisualizationItem/ItemHeaderButtons.js","modules/memoizeOne.js","components/Item/VisualizationItem/Item.js","widgets/Line.js","components/Item/MessagesItem/Item.js","components/Item/NotSupportedItem/Item.js","icons/Description.js","icons/Delete.js","components/Item/ListItem/Item.js","components/Item/ListItem/actions.js","components/Item/TextItem/Item.js","components/Item/AppItem/Item.js","components/Item/SpacerItem/Item.js","components/Item/Item.js","components/ItemGrid/DeleteItemButton.js","widgets/NoContentMessage.js","components/Item/ProgressiveLoadingContainer.js","components/ItemGrid/ItemGrid.js","components/FilterBar/FilterBadge.js","components/FilterBar/FilterBar.js","components/Dashboard/DashboardContent.js","components/Dashboard/ViewDashboard.js","components/ControlBar/ConfirmDeleteDialog.js","components/ControlBar/EditBar.js","components/Dashboard/EditDashboard.js","components/Dashboard/NewDashboard.js","components/Dashboard/Dashboard.js","components/Dashboard/dashboardModes.js","components/App.js","actions/user.js","locales/index.js","reducers/style.js","reducers/index.js","configureStore.js","index.js","modules/util.js","components/ControlBar/styles/DashboardsBar.module.css","components/ItemSelector/styles/ContentMenuItem.module.css","components/ControlBar/styles/ControlBar.module.css","components/ControlBar/styles/ClearButton.module.css","components/Item/VisualizationItem/plugin.js","components/ItemGrid/gridUtil.js","components/ItemSelector/styles/CategorizedMenuGroup.module.css"],"names":["VISUALIZATION","REPORT_TABLE","CHART","MAP","EVENT_REPORT","EVENT_CHART","APP","REPORTS","RESOURCES","USERS","MESSAGES","TEXT","SPACER","spacerContent","emptyTextItemContent","isSpacerType","item","type","text","isTextType","isVisualizationType","itemTypeMap","hasMapView","itemType","domainType","isTrackerDomainType","_itemTypeMap","Object","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","id","endPointName","propName","pluralTitle","i18n","t","appUrl","concat","appName","getEndPointName","getItemUrl","d2","url","launchUrl","getBaseUrl","getItemIcon","TableIcon","ChartIcon","MapIcon","ExtensionIcon","DescriptionIcon","PersonIcon","FontDownloadIcon","EmailIcon","CropFreeIcon","NotInterestedIcon","getIdNameFields","rename","arguments","length","undefined","getDimensionFields","_ref2","withItems","arrayClean","join","getAxesFields","_ref3","getFavoriteFields","_ref4","withDimensions","withOptions","getFavoritesFields","_ref5","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","getListItemFields","getMapFields","apiFetchFavorite","_ref6","fields","getInstance","then","Api","getApi","get","module","exports","list","itemicon","link","deleteicon","deletebutton","DEFAULT_STATE_USER","username","uiLocale","isSuperuser","sGetUserUsername","state","user","DEFAULT_STATE_DASHBOARDS","byId","items","updateDashboardProp","_ref","dashboardId","prop","value","objectSpread","defineProperty","sGetDashboardsRoot","dashboards","sGetDashboardById","orObject","sDashboardsIsFetching","sGetAllDashboards","sGetDashboardItems","sGetStarredDashboards","values","filter","dashboard","starred","sGetUnstarredDashboards","sGetDashboardsSortedByStarred","toConsumableArray","arraySort","getCustomDashboards","data","arrayFrom","map","d","name","displayName","description","displayDescription","favorite","owner","created","split","substr","lastUpdated","access","numberOfItems","orArray","dashboardItems","reportTable","chart","combineReducers","action","validateReducer","isLoading","showDescription","sGetSelectedRoot","selected","sGetSelectedId","sGetSelectedIsLoading","sGetSelectedShowDescription","DEFAULT_STATE_VISUALIZATIONS","isEmpty","p","sGetVisualization","visualizations","sGetVisualizationsRoot","acAddVisualization","onError","error","console","log","getDashboardItemsFields","withFavorite","getDashboardFields","apiFetchDashboard","models","catch","apiStarDashboard","isStarred","post","delete","apiDeleteDashboard","sGetMessagesRoot","messages","getMessages","DEFAULT_STATE_SNACKBAR","message","duration","open","acCloseSnackbar","loadingDashboardMsg","SnackbarMessageContent","react_default","a","createElement","style","fontWeight","connect","_sGetSnackbar","snackbar","sGetSnackbar","snackbarOpen","snackbarMessage","snackbarDuration","onCloseSnackbar","props","Snackbar_default","zIndex","SnackbarMessage_SnackbarMessageContent","autoHideDuration","onClose","acSetSelectedId","acSetSelectedIsLoading","tLoadDashboard","asyncToGenerator","regenerator_default","mark","_callee","dispatch","dash","wrap","_context","prev","next","sent","acAppendDashboards","abrupt","Promise","resolve","t0","stop","_x","apply","this","tSetSelectedDashboardById","_callee2","getState","snackbarTimeout","onSuccess","_context2","setTimeout","dashboardName","customDashboard","acSetDashboardItems","withShape","localStorage","setItem","forEach","extractFavorite","messageConversations","clearTimeout","_x2","_x3","DEFAULT_STATE_EDIT_DASHBOARD","NEW_DASHBOARD_STATE","sGetEditDashboardRoot","editDashboard","sGetIsEditing","sGetEditDashboardItems","DEFAULT_STATE_EDIT_ITEM_FILTERS","sGetEditItemFiltersRoot","editItemFilters","DEFAULT_STATE_ITEM_FILTERS","sGetItemFiltersRoot","itemFilters","sGetFiltersKeys","keys","acRemoveItemFilter","acRemoveEditItemFilter","saveDashboard","assign","width","w","height","h","save","msg","response","uid","updateDashboard","postDashboard","create","acAddDashboardItem","itemPropName","generateUid","content","NEW_ITEM_SHAPE","acUpdateDashboardItem","acRemoveDashboardItem","arrayToIdMap","acSetDashboardStarred","tFetchDashboards","collection","paging","toArray","userRows","sGetControlBarUserRows","controlBar","sGetControlBarRoot","KEY","hasNamespace","currentUser","dataStore","has","getNamespace","apiGetControlBarRows","_callee3","namespace","_context3","t1","t2","find","key","apiPostControlBarRows","_callee4","rows","_context4","set","_x4","_x5","acSetControlBarUserRows","DEFAULT_DIMENSIONS","getDimensionById","DIMENSION_ID_PERIOD","DIMENSION_ID_ORGUNIT","sGetDimensions","dimensions","DEFAULT_SETTINGS","keyDateFormat","keyAnalysisRelativePeriod","keyAnalysisDigitGroupSeparator","displayNameProperty","rootOrganisationUnit","sGetSettings","settings","sGetSettingsDisplayNameProperty","acSetDimensions","styles","showMore","color","colors","grey700","cursor","fontSize","paddingTop","&:hover","textDecoration","disabled","grey500","withStyles","onClick","isMaxHeight","classes","textAlign","className","MIN_ROW_COUNT","getRowsHeight","getNumRowsFromHeight","Math","floor","FIRST_ROW_PADDING_HEIGHT","getTopOffset","getControlBarHeight","ControlBar","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onStartDrag","setState","dragging","window","addEventListener","onDrag","onEndDrag","event","preventDefault","stopPropagation","newHeight","clientY","onChangeHeight","requestAnimationFrame","removeEventListener","draghandle","onMouseDown","max","rootStyle","top","backgroundColor","editMode","yellow050","white","paddingBottom","transition","root","children","renderDragHandle","React","Component","defaultProps","StarIcon","xmlns","viewBox","fill","apiPostDataStatistics","eventType","chip","margin","grey600","display","verticalAlign","icon","marginTop","unselected","label","chipProps","selectedState","Star","Link","to","debounce","lib","AddCircleIcon","teal600","ClearIcon","grey800","ClearButton","onClear","button","Clear","ownerData","DEFAULT_STATE_DASHBOARDS_FILTER_NAME","DEFAULT_STATE_DASHBOARDS_FILTER_OWNER","order","sGetDashboardsFilterRoot","dashboardsFilter","sGetFilterName","KEYCODE_ENTER","KEYCODE_ESCAPE","filterField","searchIcon","Filter","_Component","setFilterValue","onChangeName","target","handleKeyUp","keyCode","onKeypressEnter","inherits","createClass","nextProps","_this$props","startAdornment","InputAdornment_default","position","Search_default","endAdornment","ControlBar_ClearButton","Input_default","placeholder","onChange","onKeyUp","Function","prototype","MAX_ROW_COUNT","DashboardsBar","_getPrototypeOf2","_len","args","Array","_key","setInitialDashboardState","adjustedHeight","newRows","newRowCount","min","onToggleMaxHeight","onSelectDashboard","history","push","selectedId","onChangeFilterName","rowCount","controlBarHeight","contentWrapperStyle","padding","overflowY","components_ControlBar_ControlBar","leftControls","marginRight","AddCircle","ControlBar_Filter","ControlBar_DashboardItemChip","ControlBar_ShowMoreButton","mapDispatchToProps","withRouter","stateProps","dispatchProps","ownProps","displayDashboards","toLowerCase","includes","HeaderMenuItem","title","dense","LaunchIcon","LaunchLink","e","launchLink","rel","href","Launch","InsertButton","buttonInsert","ContentMenuItem","onInsert","ItemIcon","menuItem","ContentMenuItem_LaunchLink","ContentMenuItem_InsertButton","singleItems","header","categorizedItems","listItemTypes","CategorizedMenuGroup","addItem","tAddListItemContent","newItem","toggleSeeMore","seeMore","onChangeItemsLimit","_this2","_this$props2","hasMore","react","ItemSelector_HeaderMenuItem","itemUrl","context","ItemSelector_ContentMenuItem","showMoreButton","contextTypes","PropTypes","object","isRequired","dashboardItem","listItemType","dashboardItemIndex","findIndex","category","addToDashboard","ItemSearchField","onFocus","ItemSelector","closeList","openList","_","fetchItems","anchorEl","currentTarget","setFilter","getCategorizedMenuGroups","allItems","maxOptions","slice","ItemSelector_CategorizedMenuGroup","getSinglesMenuGroups","ItemSelector_SinglesMenuGroup","getMenuGroups","queryString","add","Set","ItemSelector_ItemSearchField","Popover_default","anchorOrigin","horizontal","vertical","transformOrigin","PaperProps","disableAutoFocus","disableRestoreFocus","EditTitleBar","onChangeTitle","onChangeDescription","section","titleDescription","itemSelector","components_ItemSelector_ItemSelector","selectedDashboard","justifyContent","flex","clear","underline","&::before","borderBottom","&:hover::before","input","borderRadius","peId","ouId","FilterDialog","onConfirm","dimension","selectedItems","dialogId","commonProps","onSelect","onDeselect","onReorder","build","selectedPeriods","ouItems","dialogTitle","Dialog_default","maxWidth","disableEnforceFocus","dialogContent","DialogActions_default","kind","DEFAULT_STATE_ACTIVE_MODAL_DIMENSION","sGetActiveModalDimension","activeModalDimension","acSetActiveModalDimension","FilterSelector","openPanel","closePanel","closeDialog","clearActiveModalDimension","selectDimension","setActiveModalDimension","onSelectItems","dimensionId","setEditItemFilters","onDeselectItems","itemIdsToRemove","newList","removeEditItemFilter","onReorderItems","itemIds","oldList","reorderedList","saveFilter","filterItems","addItemFilter","removeItemFilter","theme","selectedDimensions","ArrowDropDown_default","Boolean","fontFamily","typography","onDimensionClick","selectedIds","ItemFilter_FilterDialog","filters","withTheme","Info","show","toggle","InfoOutlined_default","NO_DESCRIPTION","actions","alignItems","marginLeft","starIcon","textButton","minWidth","editLink","titleBar","titleBarIcon","ViewTitleBar","toggleSharingDialog","sharingDialogIsOpen","onStarClick","onInfoClick","titleStyle","userSelect","StarBorder","TitleBar_Info","update","manage","ItemFilter_FilterSelector","d2_ui_sharing_dialog_default","onRequestClose","tStarDashboard","black","TitleBar","edit","TitleBar_EditTitleBar","TitleBar_ViewTitleBar","DefaultPlugin","pluginCredentials","shouldPluginReload","prevProps","reloadAllowed","filtersChanged","vis","visualization","prevVis","visChanged","activeType","reloadPlugin","pluginManager","currentVis","useActiveType","credentials","getActiveType","baseUrl","auth","defaultHeaders","Authorization","getGridItemDomId","textDiv","HEADER_HEIGHT","ItemHeader","actionButtons","scrollContainer","line","border","grey100","ItemFooter","objectId","getId","d2_ui_interpretations_default","ItemHeaderButton","iconBase","buttonBase","buttonDisabled","opacity","toggleFooterPadding","grey200","baseStyle","container","disabledStyle","activeStyle","primary800","primary100","inactiveStyle","VisualizationItemHeaderButtons","activeFooter","onToggleFooter","toggleFooterBase","toggleFooter","components_Item_ItemHeaderButton","Message_default","onSelectActiveType","isSingleValue","match","tableButtonStyle","tableBtnStyle","chartButtonStyle","chartBtnStyle","mapButtonStyle","mapBtnStyle","ViewList_default","InsertChart_default","Public_default","renderInterpretationButton","renderVisualizationButtons","memoizeOne","fn","lastArgs","lastValue","every","arg","i","overflow","textOverflow","whiteSpace","fontStretch","lineHeight","applyFilters","visRows","obj","visColumns","columns","visFilters","dimensionFound","dimensionObjects","Item","showFooter","configLoaded","getUniqueKey","uniqueId","getPluginComponent","getVisualizationConfig","getContentStyle","es_lib","forDashboard","mapViews","layer","VisualizationItem_DefaultPlugin","onToggleItemExpanded","pluginIsAvailable","getTitle","itemName","Launch_default","getActionButtons","ItemHeaderButtons","contentRef","offsetHeight","originalHeight","createRef","_componentDidMount","onVisualizationLoaded","_this$props3","Item_ItemHeader","ref","VisualizationItem_ItemFooter","acSetActiveVisualizationType","Line","PRIVATE","messageTypes","_messageTypes","listStyleType","paddingLeft","seeAll","marginBottom","sender","snippet","maxHeight","MessagesItem","getMessageHref","msgIdentifier","messageType","getMessageSender","latestMsg","getMessageItems","editClass","readClass","read","msgDate","document","location","messageCount","formatDate","userSettings","widgets_Line","string","MessagesContainer","NotSupportedItem","NotInterested_default","align","DeleteIcon","red500","getItemTitle","ListItem","tRemoveListItemContent","contentItems","index","array","el","getContentItems","contentItem","Description","deleteButton","Delete","grey900","getLink","newContent","textField","onChangeText","updatedItem","d2_ui_rich_text","onEdit","multiline","fullWidth","textDivStyle","viewItem","getIframeSrc","appDetails","iframeSrc","ouIds","ouPath","AppItem","appKey","system","installedApps","app","src","SpacerItem","GridItem","VisualizationItem","TextItem","getGridItem","right","DeleteItemHeaderButton","Delete_default","NoContentMessage","ProgressiveLoadingContainer","shouldLoad","containerRef","shouldLoadHandler","bufferPx","bufferFactor","innerHeight","rect","getBoundingClientRect","bottom","removeHandler","checkShouldLoad","debounceMs","registerHandler","_this3","objectWithoutProperties","eventProps","pick","ItemGrid","expandedItems","clickedId","isExpanded","onRemoveItem","onLayoutChange","newLayout","acUpdateDashboardLayout","onResizeStop","layout","oldItem","onItemResize","pluginResize","onRemoveItemWrapper","widgets_NoContentMessage","expandedItem","hProp","minH","ITEM_MIN_HEIGHT","react_grid_layout_default","MARGIN","cols","getGridColumns","rowHeight","GRID_ROW_HEIGHT","innerWidth","compactType","GRID_COMPACT_TYPE","isDraggable","isResizable","draggableCancel","itemClassNames","Item_ProgressiveLoadingContainer","DeleteItemButton","Item_Item_Item","validItems","hasShape","badgeContainer","badge","badgeRemove","FilterBadge","onRemove","count","FilterBar","onBadgeRemove","onBadgeClick","bar","FilterBar_FilterBadge","removeItemFIlter","filtersSelector","createSelector","reduce","arr","flexWrap","DashboardContent","components_TitleBar_TitleBar","components_FilterBar_FilterBar","components_ItemGrid_ItemGrid","Content","hasDashboardContent","dashboardsIsEmpty","Dashboard_DashboardContent","dashboardsLoaded","contentNotReady","ControlBar_DashboardsBar","Dashboard_DashboardVerticalOffset","ViewDashboard_Content","ConfirmDeleteDialog","onDeleteConfirmed","onContinueEditing","secondary","destructive","DialogTitle_default","DialogContent_default","DialogContentText_default","buttonBarStyle","EditBar","translationDialogIsOpen","dashboardModel","confirmDeleteDialogOpen","redirectUrl","onConfirmDelete","onSave","newId","onDiscard","onDiscardChanges","onDelete","onTranslationsSaved","translations","dbLocale","translation","locale","property","onTranslate","fetchDashboardModel","toggleTranslationDialog","confirmDeleteDialog","deleteAccess","ControlBar_ConfirmDeleteDialog","translationDialog","d2_ui_translation_dialog_default","objectToTranslate","fieldsToTranslate","onTranslationSaved","onTranslationError","err","Redirect","updateAccess","discardBtnText","primary","rightControls","sGetIsNewDashboard","dashboardToSave","tDeleteDashboard","acSetDashboardDisplayName","EditDashboard","initialized","initEditDashboard","setEditDashboard","getDashboardContent","EditDashboard_Content","ControlBar_EditBar","NewDashboard","setNewDashboard","Dashboard","setDashboard","params","selectDashboard","scrollToTop","scrollTo","mode","Dashboard_EditDashboard","Dashboard_NewDashboard","Dashboard_ViewDashboard","dashboardToSelect","preferredId","getItem","App","setCurrentUser","fetchDashboards","setControlBarRows","setDimensions","HeaderBar","HashRouter","Switch","Route","exact","path","render","components_Dashboard_Dashboard","components_SnackbarMessage_SnackbarMessage","childContextTypes","controlBarRows","displayNameProp","filteredDimensions","apiFetchDimensions","dim","dimensionType","dataDimensionType","tSetDimensions","moment","addResources","arTranslations","daTranslations","enTranslations","esTranslations","frTranslations","idTranslations","kmTranslations","loTranslations","myTranslations","prsTranslations","psTranslations","ptTranslations","pt_BRTranslations","ruTranslations","svTranslations","tetTranslations","tgTranslations","ukTranslations","urTranslations","viTranslations","zhTranslations","zh_CNTranslations","setDefaultNamespace","changeLanguage","objectClean","conversations","$merge","d2Object","keyUiLocale","authorities","newState","k","$unshift","idToRemove","$splice","stateItems","newStateItems","x","y","stateItem","si","$set","configureStore","middleware","thunk","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducer","applyMiddleware","configI18n","config","sources","manifest","isProd","getManifest","info","version","manifest_generated_at","process","activities","dhis","dhis2","apiVersion","headers","schemas","getUserSettings","d2Init","initializedD2","ReactDOM","build_es","es","store","createMuiTheme","dhis2theme","src_components_App","getElementById","init","param","isArray","isObject","global","Intl","DateTimeFormat","year","month","day","format","Date","replace","defaultValue","api","idx","indexOf","getWithoutId","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","itemTypeToExternalPlugin","_itemTypeToExternalPl","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_3__","getPlugin","hasIntegratedPlugin","eventReport","eventChart","loadPlugin","plugin","load","loadingIndicator","getName","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","fetch","fetchedFavorite","resize","unmount","originalType","extractedMapView","mv","VIS_TYPE_COLUMN","VIS_TYPE_PIVOT_TABLE","__webpack_require__","__webpack_exports__","d2_utilizr_lib_isFunction__WEBPACK_IMPORTED_MODULE_0__","d2_utilizr_lib_isFunction__WEBPACK_IMPORTED_MODULE_0___default","n","_modules_util__WEBPACK_IMPORTED_MODULE_1__","isNonNegativeInteger","Number","isInteger","itemWithShape","Error","col","row","itemWidth","itemHeight","getShape","round","getOriginalHeight","querySelector","isFunction","setViewportSize","clientWidth","clientHeight"],"mappings":"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","file":"static/js/main.eadd1203.chunk.js","sourcesContent":["import i18n from '@dhis2/d2-i18n';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\nimport ExtensionIcon from '@material-ui/icons/Extension';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport PersonIcon from '@material-ui/icons/Person';\nimport FontDownloadIcon from '@material-ui/icons/FontDownload';\nimport EmailIcon from '@material-ui/icons/Email';\nimport CropFreeIcon from '@material-ui/icons/CropFree';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nimport { getBaseUrl } from './util';\n\n// Item types\nexport const VISUALIZATION = 'VISUALIZATION';\nexport const REPORT_TABLE = 'REPORT_TABLE';\nexport const CHART = 'CHART';\nexport const MAP = 'MAP';\nexport const EVENT_REPORT = 'EVENT_REPORT';\nexport const EVENT_CHART = 'EVENT_CHART';\nexport const APP = 'APP';\nexport const REPORTS = 'REPORTS';\nexport const RESOURCES = 'RESOURCES';\nexport const USERS = 'USERS';\nexport const MESSAGES = 'MESSAGES';\nexport const TEXT = 'TEXT';\nexport const SPACER = 'SPACER';\n\nconst DOMAIN_TYPE_AGGREGATE = 'AGGREGATE';\nconst DOMAIN_TYPE_TRACKER = 'TRACKER';\n\n// Dashboard helpers\nexport const spacerContent = 'SPACER_ITEM_FOR_DASHBOARD_LAYOUT_CONVENIENCE';\nexport const emptyTextItemContent = 'TEXT_ITEM_WITH_NO_CONTENT';\nexport const isSpacerType = item =>\n    item.type === TEXT && item.text === spacerContent;\nexport const isTextType = item =>\n    item.type === TEXT && item.text !== spacerContent;\nexport const isVisualizationType = item =>\n    !!itemTypeMap[item.type].isVisualizationType;\n\nexport const hasMapView = itemType =>\n    itemTypeMap[itemType].domainType === DOMAIN_TYPE_AGGREGATE;\n\nexport const isTrackerDomainType = itemType =>\n    itemTypeMap[itemType].domainType === DOMAIN_TYPE_TRACKER;\n\n// Item type map\nexport const itemTypeMap = {\n    [REPORT_TABLE]: {\n        id: REPORT_TABLE,\n        endPointName: 'reportTables',\n        propName: 'reportTable',\n        pluralTitle: i18n.t('Pivot tables'),\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n        appName: i18n.t('Visualizer'),\n    },\n    [CHART]: {\n        id: CHART,\n        endPointName: 'charts',\n        propName: 'chart',\n        pluralTitle: i18n.t('Charts'),\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n        appName: i18n.t('Visualizer'),\n    },\n    [MAP]: {\n        id: MAP,\n        endPointName: 'maps',\n        propName: 'map',\n        pluralTitle: i18n.t('Maps'),\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-maps/?id=${id}`,\n        appName: i18n.t('Maps'),\n    },\n    [EVENT_REPORT]: {\n        id: EVENT_REPORT,\n        endPointName: 'eventReports',\n        propName: 'eventReport',\n        pluralTitle: i18n.t('Event reports'),\n        domainType: DOMAIN_TYPE_TRACKER,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-event-reports/?id=${id}`,\n        appName: i18n.t('Event Reports'),\n    },\n    [EVENT_CHART]: {\n        id: EVENT_CHART,\n        endPointName: 'eventCharts',\n        propName: 'eventChart',\n        pluralTitle: i18n.t('Event charts'),\n        domainType: DOMAIN_TYPE_TRACKER,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-event-visualizer/?id=${id}`,\n        appName: i18n.t('Event Visualizer'),\n    },\n    [APP]: {\n        endPointName: 'apps',\n        propName: 'appKey',\n        pluralTitle: i18n.t('Apps'),\n    },\n    [REPORTS]: {\n        id: REPORTS,\n        endPointName: 'reports',\n        propName: 'reports',\n        pluralTitle: i18n.t('Reports'),\n        appUrl: id =>\n            `dhis-web-reporting/getReportParams.action?mode=report&uid=${id}`,\n    },\n    [RESOURCES]: {\n        id: RESOURCES,\n        endPointName: 'resources',\n        propName: 'resources',\n        pluralTitle: i18n.t('Resources'),\n        appUrl: id => `api/documents/${id}/data`,\n    },\n    [USERS]: {\n        id: USERS,\n        endPointName: 'users',\n        propName: 'users',\n        pluralTitle: i18n.t('Users'),\n        appUrl: id => `dhis-web-dashboard-integration/profile.action?id=${id}`,\n    },\n    [TEXT]: {\n        id: TEXT,\n        propName: 'text',\n    },\n    [MESSAGES]: {\n        propName: 'messages',\n    },\n    [SPACER]: {\n        propName: 'text',\n    },\n};\n\nexport const getEndPointName = type => itemTypeMap[type].endPointName;\n\nexport const getItemUrl = (type, item, d2) => {\n    let url;\n\n    if (type === APP) {\n        url = item.launchUrl;\n    }\n\n    if (itemTypeMap[type] && itemTypeMap[type].appUrl) {\n        url = `${getBaseUrl(d2)}/${itemTypeMap[type].appUrl(item.id)}`;\n    }\n\n    return url;\n};\n\nexport const getItemIcon = type => {\n    switch (type) {\n        case REPORT_TABLE:\n        case EVENT_REPORT:\n        case REPORTS:\n            return TableIcon;\n        case CHART:\n        case EVENT_CHART:\n            return ChartIcon;\n        case MAP:\n            return MapIcon;\n        case APP:\n            return ExtensionIcon;\n        case RESOURCES:\n            return DescriptionIcon;\n        case USERS:\n            return PersonIcon;\n        case TEXT:\n            return FontDownloadIcon;\n        case MESSAGES:\n            return EmailIcon;\n        case SPACER:\n            return CropFreeIcon;\n        default:\n            return NotInterestedIcon;\n    }\n};\n","import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\n\nimport { getEndPointName } from '../modules/itemTypes';\n\n// Id, name\nexport const getIdNameFields = ({ rename } = {}) => [\n    'id',\n    `${rename ? 'displayName~rename(name)' : 'name,displayName'}`,\n];\n\n// Item\nexport const getItemFields = () => [\n    'dimensionItem~rename(id)',\n    'displayName~rename(name)',\n    'dimensionItemType',\n];\n\n// Dimension\nexport const getDimensionFields = ({ withItems }) =>\n    arrayClean([\n        'dimension',\n        'legendSet[id]',\n        'filter',\n        'programStage',\n        withItems ? `items[${getItemFields().join(',')}]` : ``,\n    ]);\n\n// Axis\nexport const getAxesFields = ({ withItems }) => [\n    `columns[${getDimensionFields({ withItems }).join(',')}]`,\n    `rows[${getDimensionFields({ withItems }).join(',')}]`,\n    `filters[${getDimensionFields({ withItems }).join(',')}]`,\n];\n\n// Favorite\nexport const getFavoriteFields = ({ withDimensions, withOptions }) => {\n    return arrayClean([\n        `${getIdNameFields({ rename: true }).join(',')}`,\n        'displayDescription~rename(description)',\n        withDimensions ? `${getAxesFields({ withItems: true }).join(',')}` : ``,\n        withOptions\n            ? [\n                  '*',\n                  '!attributeDimensions',\n                  '!attributeValues',\n                  '!category',\n                  '!categoryDimensions',\n                  '!categoryOptionGroupSetDimensions',\n                  '!columnDimensions',\n                  '!dataDimensionItems',\n                  '!dataElementDimensions',\n                  '!dataElementGroupSetDimensions',\n                  '!filterDimensions',\n                  '!itemOrganisationUnitGroups',\n                  '!lastUpdatedBy',\n                  '!organisationUnitGroupSetDimensions',\n                  '!organisationUnitLevels',\n                  '!organisationUnits',\n                  '!programIndicatorDimensions',\n                  '!relativePeriods',\n                  '!reportParams',\n                  '!rowDimensions',\n                  '!series',\n                  '!translations',\n                  '!userOrganisationUnit',\n                  '!userOrganisationUnitChildren',\n                  '!userOrganisationUnitGrandChildren',\n              ].join(',')\n            : '',\n    ]);\n};\n\nexport const getFavoritesFields = ({ withDimensions }) => [\n    `reportTable[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `chart[${['type', ...getFavoriteFields({ withDimensions })].join(',')}]`,\n    `map[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `eventReport[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `eventChart[${getFavoriteFields({ withDimensions }).join(',')}]`,\n];\n\n// List item\nexport const getListItemFields = () => [\n    `reports[${getIdNameFields({ rename: true }).join(',')}]`,\n    `resources[${getIdNameFields({ rename: true }).join(',')}]`,\n    `users[${getIdNameFields({ rename: true }).join(',')}]`,\n];\n\n// Map\nexport const getMapFields = () => [\n    `${getIdNameFields({ rename: true }).join(',')}`,\n    'user,longitude,latitude,zoom,basemap',\n    `mapViews[${getFavoriteFields({\n        withDimensions: true,\n        withOptions: true,\n    })}]`,\n];\n\n// Api\n\n// Get more info about the favorite of a dashboard item\nexport const apiFetchFavorite = (id, type, { fields }) =>\n    getInstance().then(d2 =>\n        d2.Api.getApi().get(`${getEndPointName(type)}/${id}`, {\n            fields:\n                fields ||\n                getFavoriteFields({\n                    withDimensions: true,\n                    withOptions: true,\n                }),\n        })\n    );\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Item_list__2oHc1\",\"item\":\"Item_item__lO40M\",\"itemicon\":\"Item_itemicon__dv5ah\",\"link\":\"Item_link__2gULT\",\"deleteicon\":\"Item_deleteicon__3c7bl\",\"deletebutton\":\"Item_deletebutton__1DfY5\"};","export const RECEIVED_USER = 'RECEIVED_USER';\n\nexport const DEFAULT_STATE_USER = {\n    id: '',\n    username: '',\n    uiLocale: '',\n    isSuperuser: false,\n};\n\nexport default (state = DEFAULT_STATE_USER, action) => {\n    switch (action.type) {\n        case RECEIVED_USER: {\n            return fromD2ToUserObj(action.value);\n        }\n        default:\n            return state;\n    }\n};\n\nfunction fromD2ToUserObj(d2Object) {\n    return {\n        id: d2Object.id,\n        username: d2Object.username,\n        uiLocale: d2Object.settings.keyUiLocale,\n        isSuperuser: d2Object.authorities.has('ALL'),\n    };\n}\n\n// selectors\n\nexport const sGetUserId = state => state.user.id;\nexport const sGetUserUsername = state => state.user.username;\nexport const sGetIsSuperuser = state => state.user.isSuperuser;\nexport const sGetUiLocale = state => state.user.uiLocale;\n","/** @module reducers/dashboards */\n\nimport arrayFrom from 'd2-utilizr/lib/arrayFrom';\nimport arraySort from 'd2-utilizr/lib/arraySort';\n\nimport { orArray, orObject } from '../modules/util';\nimport {\n    SPACER,\n    isSpacerType,\n    isTextType,\n    emptyTextItemContent,\n    REPORT_TABLE,\n    CHART,\n    VISUALIZATION,\n} from '../modules/itemTypes';\n\nexport const SET_DASHBOARDS = 'SET_DASHBOARDS';\nexport const ADD_DASHBOARDS = 'ADD_DASHBOARDS';\nexport const SET_DASHBOARD_STARRED = 'SET_DASHBOARD_STARRED';\nexport const SET_DASHBOARD_DISPLAY_NAME = 'SET_DASHBOARD_DISPLAY_NAME';\nexport const SET_DASHBOARD_ITEMS = 'SET_DASHBOARD_ITEMS';\n\nexport const DEFAULT_STATE_DASHBOARDS = {\n    byId: null,\n    items: [],\n};\n\n// reducer helper functions\n\nconst updateDashboardProp = ({ state, dashboardId, prop, value }) => ({\n    byId: {\n        ...state.byId,\n        [dashboardId]: {\n            ...state.byId[dashboardId],\n            [prop]: value,\n        },\n    },\n    items: state.items,\n});\n\n/**\n * Reducer that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n * @returns {Object}\n */\nexport default (state = DEFAULT_STATE_DASHBOARDS, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS: {\n            return {\n                byId: action.value,\n                items: [],\n            };\n        }\n        case ADD_DASHBOARDS: {\n            return {\n                ...state,\n                byId: {\n                    ...state.byId,\n                    ...action.value,\n                },\n            };\n        }\n        case SET_DASHBOARD_STARRED: {\n            return updateDashboardProp({\n                state,\n                dashboardId: action.dashboardId,\n                prop: 'starred',\n                value: action.value,\n            });\n        }\n        case SET_DASHBOARD_DISPLAY_NAME: {\n            return updateDashboardProp({\n                state,\n                dashboardId: action.dashboardId,\n                prop: 'displayName',\n                value: action.value,\n            });\n        }\n        case SET_DASHBOARD_ITEMS: {\n            return {\n                ...state,\n                items: action.value,\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// root selector\n\nexport const sGetDashboardsRoot = state => state.dashboards;\n\n// selector level 1\n\n/**\n * Selector which returns a dashboard by id from the state object\n * If no matching dashboard is found it returns undefined\n * If dashboards.byId is null, then the dashboards api request\n * has not yet completed. If dashboards.byId is an empty object\n * then the dashboards api request is complete, but no dashboards\n * were returned\n *\n * @function\n * @param {Object} state The current state\n * @param {Number} id The id of the dashboard\n * @returns {Object | undefined}\n */\nexport const sGetDashboardById = (state, id) =>\n    orObject(sGetDashboardsRoot(state).byId)[id];\n\nexport const sDashboardsIsFetching = state => {\n    return sGetDashboardsRoot(state).byId === null;\n};\n\n/**\n * Selector which returns all dashboards (the byId object)\n *\n * @function\n * @param {Object} state The current state\n * @returns {Object | undefined}\n */\nexport const sGetAllDashboards = state =>\n    orObject(sGetDashboardsRoot(state).byId);\n\n/**\n * Selector which returns the current dashboard items\n *\n * @function\n * @param {Object} state The current state\n * @returns {Array}\n */\nexport const sGetDashboardItems = state => sGetDashboardsRoot(state).items;\n\n// selector level 2\n\nexport const sGetStarredDashboards = state =>\n    Object.values(sGetAllDashboards(state)).filter(\n        dashboard => dashboard.starred === true\n    );\n\nexport const sGetUnstarredDashboards = state =>\n    Object.values(sGetAllDashboards(state)).filter(\n        dashboard => dashboard.starred === false\n    );\n\n// selector level 3\n\nexport const sGetStarredDashboardIds = state => {\n    return sGetStarredDashboards(state).map(dashboard => dashboard.id);\n};\n\nexport const sGetUnstarredDashboardIds = state =>\n    sGetUnstarredDashboards(state).map(dashboard => dashboard.id);\n\nexport const sGetDashboardsSortedByStarred = state => [\n    ...arraySort(sGetStarredDashboards(state), 'ASC', 'displayName'),\n    ...arraySort(sGetUnstarredDashboards(state), 'ASC', 'displayName'),\n];\n\n// utils\n\n/**\n * Returns the array of dashboards, customized for ui\n * @function\n * @param {Array} data The original dashboard list\n * @returns {Array}\n */\nexport const getCustomDashboards = data => {\n    const uiItems = items =>\n        items.map(item => {\n            let type = isSpacerType(item) ? SPACER : item.type;\n\n            // TODO: temporary fix before 2.34 epic branch is merged\n            // if \"VISUALIZATION\", reset to \"REPORT_TABLE\" or \"CHART\"\n            if (type === VISUALIZATION) {\n                type = item.reportTable\n                    ? REPORT_TABLE\n                    : item.chart\n                    ? CHART\n                    : type;\n            }\n\n            const text = isTextType(item)\n                ? item.text === emptyTextItemContent\n                    ? ''\n                    : item.text\n                : null;\n\n            return {\n                ...item,\n                ...(text !== null ? { text } : {}),\n                type,\n            };\n        });\n\n    return arrayFrom(data).map(d => ({\n        id: d.id,\n        name: d.name,\n        displayName: d.displayName,\n        description: d.description,\n        displayDescription: d.displayDescription,\n        starred: d.favorite,\n        owner: d.user.name,\n        created: d.created\n            .split('T')\n            .join(' ')\n            .substr(0, 16),\n        lastUpdated: d.lastUpdated\n            .split('T')\n            .join(' ')\n            .substr(0, 16),\n        access: d.access,\n        numberOfItems: orArray(d.dashboardItems).length,\n        dashboardItems: uiItems(d.dashboardItems),\n    }));\n};\n","/** @module reducers/selected */\nimport { combineReducers } from 'redux';\n\nimport { validateReducer } from '../modules/util';\n\nexport const SET_SELECTED_ID = 'SET_SELECTED_ID';\nexport const SET_SELECTED_ISLOADING = 'SET_SELECTED_ISLOADING';\nexport const SET_SELECTED_SHOWDESCRIPTION = 'SET_SELECTED_SHOWDESCRIPTION';\n\nexport const DEFAULT_STATE_SELECTED_ID = null;\nexport const DEFAULT_STATE_SELECTED_ISLOADING = false;\nexport const DEFAULT_STATE_SELECTED_SHOWDESCRIPTION = false;\n\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\nconst id = (state = DEFAULT_STATE_SELECTED_ID, action) => {\n    switch (action.type) {\n        case SET_SELECTED_ID:\n            return validateReducer(action.value, DEFAULT_STATE_SELECTED_ID);\n        default:\n            return state;\n    }\n};\n\nconst isLoading = (state = DEFAULT_STATE_SELECTED_ISLOADING, action) => {\n    switch (action.type) {\n        case SET_SELECTED_ISLOADING:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_SELECTED_ISLOADING\n            );\n        default:\n            return state;\n    }\n};\n\nconst showDescription = (\n    state = DEFAULT_STATE_SELECTED_SHOWDESCRIPTION,\n    action\n) => {\n    switch (action.type) {\n        case SET_SELECTED_SHOWDESCRIPTION:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_SELECTED_SHOWDESCRIPTION\n            );\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    id,\n    isLoading,\n    showDescription,\n});\n\n// Selectors\n\nexport const sGetSelectedRoot = state => state.selected;\n\nexport const sGetSelectedId = state => sGetSelectedRoot(state).id;\n\nexport const sGetSelectedIsLoading = state => sGetSelectedRoot(state).isLoading;\n\nexport const sGetSelectedShowDescription = state =>\n    sGetSelectedRoot(state).showDescription;\n","import { orObject } from '../modules/util';\nimport objectClean from 'd2-utilizr/lib/objectClean';\n\n/** @module reducers/visualizations */\n\nexport const ADD_VISUALIZATION = 'ADD_VISUALIZATION';\nexport const SET_ACTIVE_VISUALIZATION_TYPE = 'SET_ACTIVE_VISUALIZATION_TYPE';\n\nexport const DEFAULT_STATE_VISUALIZATIONS = {};\n\nconst isEmpty = p => p === undefined || p === null;\n\nexport default (state = DEFAULT_STATE_VISUALIZATIONS, action) => {\n    switch (action.type) {\n        case ADD_VISUALIZATION: {\n            return {\n                ...state,\n                [action.value.id]: objectClean(\n                    {\n                        ...orObject(state[action.value.id]),\n                        ...action.value,\n                    },\n                    isEmpty\n                ),\n            };\n        }\n        case SET_ACTIVE_VISUALIZATION_TYPE: {\n            return {\n                ...state,\n                [action.id]: objectClean(\n                    {\n                        ...orObject(state[action.id]),\n                        activeType: action.activeType,\n                    },\n                    isEmpty\n                ),\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// root selector\nexport const sGetVisualizationsRoot = state => state.visualizations;\n\n// selectors level 1\nexport const sGetVisualization = (state, id) => {\n    return sGetVisualizationsRoot(state)[id];\n};\n","import {\n    ADD_VISUALIZATION,\n    SET_ACTIVE_VISUALIZATION_TYPE,\n} from '../reducers/visualizations';\n\nexport const acAddVisualization = value => ({\n    type: ADD_VISUALIZATION,\n    value,\n});\n\nexport const acSetActiveVisualizationType = (id, activeType) => {\n    const action = {\n        type: SET_ACTIVE_VISUALIZATION_TYPE,\n        id,\n        activeType,\n    };\n\n    return action;\n};\n","import arrayClean from 'd2-utilizr/lib/arrayClean';\nimport {\n    getListItemFields,\n    getFavoritesFields,\n    getIdNameFields,\n} from './metadata';\n\n// Helper functions\n\nexport const onError = error => console.log('Error: ', error);\n\n// Dashboard item\nexport const getDashboardItemsFields = ({ withFavorite } = {}) =>\n    arrayClean([\n        'id',\n        'type',\n        'shape',\n        'x',\n        'y',\n        'width~rename(w)',\n        'height~rename(h)',\n        'messages',\n        'text',\n        'appKey',\n        `${getListItemFields().join(',')}`,\n        withFavorite\n            ? `${getFavoritesFields({\n                  withDimensions: withFavorite.withDimensions,\n              }).join(',')}`\n            : ``,\n    ]);\n\n// Dashboard\nexport const getDashboardFields = ({ withItems, withFavorite } = {}) =>\n    arrayClean([\n        `${getIdNameFields().join(',')}`,\n        'description',\n        'displayDescription',\n        'favorite',\n        `user[${getIdNameFields({ rename: true }).join(',')}]`,\n        'created',\n        'lastUpdated',\n        'access',\n        withItems\n            ? `dashboardItems[${getDashboardItemsFields({\n                  withFavorite,\n              }).join(',')}]`\n            : ``,\n    ]);\n","import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { onError, getDashboardFields } from './index';\n\n// Get \"all\" dashboards on startup\nexport const apiFetchDashboards = () =>\n    getInstance()\n        .then(d2 =>\n            d2.models.dashboard.list({\n                fields: [\n                    getDashboardFields().join(','),\n                    'dashboardItems[id]',\n                ].join(','),\n                paging: 'false',\n            })\n        )\n        .catch(onError);\n\n// Get more info about selected dashboard\nexport const apiFetchDashboard = id =>\n    getInstance()\n        .then(d2 =>\n            d2.models.dashboard.get(id, {\n                fields: arrayClean(\n                    getDashboardFields({\n                        withItems: true,\n                        withFavorite: { withDimensions: false },\n                    })\n                ).join(','),\n            })\n        )\n        .catch(onError);\n\n// Star dashboard\nexport const apiStarDashboard = (id, isStarred) => {\n    const url = `dashboards/${id}/favorite`;\n\n    getInstance().then(d2 => {\n        if (isStarred) {\n            d2.Api.getApi().post(url);\n        } else {\n            d2.Api.getApi().delete(url);\n        }\n    });\n};\n\nexport const apiDeleteDashboard = id => {\n    return getInstance()\n        .then(d2 => {\n            return d2.models.dashboards\n                .get(id)\n                .then(dashboard => dashboard.delete());\n        })\n        .catch(onError);\n};\n","import update from 'immutability-helper';\nimport { arrayToIdMap } from '../modules/util';\n\nexport const RECEIVED_MESSAGES = 'RECEIVED_MESSAGES';\n\nexport default (state = {}, action) => {\n    switch (action.type) {\n        case RECEIVED_MESSAGES: {\n            const conversations = arrayToIdMap(action.value);\n\n            const newState = update(state, { $merge: conversations });\n\n            return newState;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetMessagesRoot = state => state.messages;\n","import { getInstance } from 'd2';\n\nexport const getMessages = () => {\n    const fields =\n        'id,messageCount,lastUpdated,messageType,displayName,read,messages[id,read,sender[id,displayName],text,lastUpdated]';\n    const url = `/messageConversations?fields=${fields}&order=read:asc&pageSize=200`;\n    return getInstance()\n        .then(d2 => d2.Api.getApi().get(url))\n        .catch(error => console.log('Error:', error));\n};\n","export const RECEIVED_SNACKBAR_MESSAGE = 'RECEIVED_SNACKBAR_MESSAGE';\nexport const CLOSE_SNACKBAR = 'CLOSE_SNACKBAR';\n\nexport const DEFAULT_STATE_SNACKBAR = {\n    message: {},\n    duration: null,\n    open: false,\n};\n\nexport default (state = DEFAULT_STATE_SNACKBAR, action) => {\n    switch (action.type) {\n        case RECEIVED_SNACKBAR_MESSAGE: {\n            return { ...state, ...action.value };\n        }\n        case CLOSE_SNACKBAR: {\n            return DEFAULT_STATE_SNACKBAR;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetSnackbar = state => state.snackbar || DEFAULT_STATE_SNACKBAR;\n","import {\n    RECEIVED_SNACKBAR_MESSAGE,\n    CLOSE_SNACKBAR,\n} from '../reducers/snackbar';\n\nexport const acReceivedSnackbarMessage = value => ({\n    type: RECEIVED_SNACKBAR_MESSAGE,\n    value,\n});\n\nexport const acCloseSnackbar = () => ({\n    type: CLOSE_SNACKBAR,\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport PropTypes from 'prop-types';\n\nimport { sGetSnackbar } from '../../reducers/snackbar';\nimport { acCloseSnackbar } from '../../actions/snackbar';\n\nconst LOADING_DASHBOARD = 'LOADING_DASHBOARD';\nexport const loadingDashboardMsg = { name: '', type: LOADING_DASHBOARD };\n\nconst SnackbarMessageContent = ({ message }) => {\n    if (typeof message === 'object') {\n        //future message types:  switch(message.type)\n        return (\n            <span>\n                Loading <span style={{ fontWeight: 800 }}>{message.name}</span>{' '}\n                dashboard\n            </span>\n        );\n    }\n    return message;\n};\n\nexport const SnackbarMessage = props => {\n    return (\n        <Snackbar\n            style={{ zIndex: 10001 }}\n            open={props.snackbarOpen}\n            message={<SnackbarMessageContent message={props.snackbarMessage} />}\n            autoHideDuration={props.snackbarDuration}\n            onClose={props.onCloseSnackbar}\n        />\n    );\n};\n\nconst mapStateToProps = state => {\n    const { message, duration, open } = sGetSnackbar(state);\n    return {\n        snackbarOpen: open,\n        snackbarMessage: message,\n        snackbarDuration: duration,\n    };\n};\n\nSnackbarMessage.propTypes = {\n    snackbarDuration: PropTypes.string,\n    snackbarMessage: PropTypes.object,\n    snackbarOpen: PropTypes.bool,\n    onCloseSnackbar: PropTypes.func,\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        onCloseSnackbar: acCloseSnackbar,\n    }\n)(SnackbarMessage);\n","import {\n    SET_SELECTED_ID,\n    SET_SELECTED_ISLOADING,\n    SET_SELECTED_SHOWDESCRIPTION,\n} from '../reducers/selected';\nimport { acAddVisualization } from '../actions/visualizations';\nimport { sGetSelectedIsLoading } from '../reducers/selected';\nimport { sGetUserUsername } from '../reducers/user';\nimport { getCustomDashboards, sGetDashboardById } from '../reducers/dashboards';\nimport { apiFetchDashboard } from '../api/dashboards';\nimport { acSetDashboardItems, acAppendDashboards } from './dashboards';\nimport { withShape } from '../components/ItemGrid/gridUtil';\nimport { tGetMessages } from '../components/Item/MessagesItem/actions';\nimport { acReceivedSnackbarMessage, acCloseSnackbar } from './snackbar';\nimport { storePreferredDashboardId } from '../api/localStorage';\nimport { loadingDashboardMsg } from '../components/SnackbarMessage/SnackbarMessage';\nimport {\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_REPORT,\n    EVENT_CHART,\n    MESSAGES,\n} from '../modules/itemTypes';\nimport { extractFavorite } from '../components/Item/VisualizationItem/plugin';\nimport { orObject } from '../modules/util';\n\n// actions\n\nexport const acSetSelectedId = value => ({\n    type: SET_SELECTED_ID,\n    value,\n});\n\nexport const acSetSelectedIsLoading = value => ({\n    type: SET_SELECTED_ISLOADING,\n    value,\n});\n\nexport const acSetSelectedShowDescription = value => ({\n    type: SET_SELECTED_SHOWDESCRIPTION,\n    value,\n});\n\nexport const tLoadDashboard = id => async dispatch => {\n    try {\n        const dash = await apiFetchDashboard(id);\n        dispatch(acAppendDashboards(dash));\n\n        return Promise.resolve(dash);\n    } catch (err) {\n        console.log('Error: ', err);\n        return err;\n    }\n};\n\n// thunks\nexport const tSetSelectedDashboardById = id => async (dispatch, getState) => {\n    dispatch(acSetSelectedIsLoading(true));\n\n    const snackbarTimeout = setTimeout(() => {\n        const dashboardName = orObject(sGetDashboardById(getState(), id))\n            .displayName;\n        if (sGetSelectedIsLoading(getState()) && dashboardName) {\n            loadingDashboardMsg.name = dashboardName;\n\n            dispatch(\n                acReceivedSnackbarMessage({\n                    message: loadingDashboardMsg,\n                    open: true,\n                })\n            );\n        }\n    }, 500);\n\n    const onSuccess = selected => {\n        const customDashboard = getCustomDashboards(selected)[0];\n\n        dispatch(\n            acSetDashboardItems(withShape(customDashboard.dashboardItems))\n        );\n\n        storePreferredDashboardId(sGetUserUsername(getState()), id);\n\n        // add visualizations to store\n        customDashboard.dashboardItems.forEach(item => {\n            switch (item.type) {\n                case REPORT_TABLE:\n                case CHART:\n                case MAP:\n                case EVENT_REPORT:\n                case EVENT_CHART:\n                    dispatch(acAddVisualization(extractFavorite(item)));\n                    break;\n                case MESSAGES:\n                    dispatch(tGetMessages(id));\n                    break;\n                default:\n                    break;\n            }\n        });\n\n        dispatch(acSetSelectedId(id));\n\n        dispatch(acSetSelectedIsLoading(false));\n\n        clearTimeout(snackbarTimeout);\n\n        dispatch(acCloseSnackbar());\n\n        return selected;\n    };\n\n    const onError = error => {\n        console.log('Error: ', error);\n        return error;\n    };\n\n    try {\n        const selected = await dispatch(tLoadDashboard(id));\n\n        return onSuccess(selected);\n    } catch (err) {\n        return onError(err);\n    }\n};\n","export const getPreferredDashboardId = username =>\n    localStorage.getItem(`dhis2.dashboard.current.${username}`) || undefined;\n\nexport const storePreferredDashboardId = (username, dashboardId) => {\n    localStorage.setItem(`dhis2.dashboard.current.${username}`, dashboardId);\n};\n","import { RECEIVED_MESSAGES } from '../../../reducers/messages';\nimport { getMessages } from '../../../api/messages';\n\nconst onError = (action, error) => {\n    console.log(`Error in action ${action}: ${error}`);\n    return error;\n};\n\nexport const receivedMessages = value => ({\n    type: RECEIVED_MESSAGES,\n    value,\n});\n\nexport const tGetMessages = () => async dispatch => {\n    try {\n        const messages = await getMessages();\n        const { messageConversations } = messages;\n\n        return dispatch(receivedMessages(messageConversations));\n    } catch (err) {\n        return onError('Get Messages', err);\n    }\n};\n","/** @module reducers/editDashboard */\nimport update from 'immutability-helper';\nimport isEmpty from 'lodash/isEmpty';\nimport { orArray, orObject } from '../modules/util';\n\nexport const RECEIVED_EDIT_DASHBOARD = 'RECEIVED_EDIT_DASHBOARD';\nexport const RECEIVED_NOT_EDITING = 'RECEIVED_NOT_EDITING';\nexport const START_NEW_DASHBOARD = 'START_NEW_DASHBOARD';\nexport const RECEIVED_TITLE = 'RECEIVED_TITLE';\nexport const RECEIVED_DESCRIPTION = 'RECEIVED_DESCRIPTION';\nexport const ADD_DASHBOARD_ITEM = 'ADD_DASHBOARD_ITEM';\nexport const REMOVE_DASHBOARD_ITEM = 'REMOVE_DASHBOARD_ITEM';\nexport const UPDATE_DASHBOARD_ITEM = 'UPDATE_DASHBOARD_ITEM';\nexport const RECEIVED_DASHBOARD_LAYOUT = 'RECEIVED_DASHBOARD_LAYOUT';\n\nexport const DEFAULT_STATE_EDIT_DASHBOARD = {};\nexport const NEW_DASHBOARD_STATE = {\n    id: '',\n    name: '',\n    access: {},\n    description: '',\n    dashboardItems: [],\n};\n\nexport default (state = DEFAULT_STATE_EDIT_DASHBOARD, action) => {\n    switch (action.type) {\n        case RECEIVED_EDIT_DASHBOARD: {\n            const newState = {};\n            Object.keys(NEW_DASHBOARD_STATE).map(\n                k => (newState[k] = action.value[k])\n            );\n            return newState;\n        }\n        case RECEIVED_NOT_EDITING:\n            return DEFAULT_STATE_EDIT_DASHBOARD;\n        case START_NEW_DASHBOARD:\n            return NEW_DASHBOARD_STATE;\n        case RECEIVED_TITLE: {\n            return Object.assign({}, state, { name: action.value });\n        }\n        case RECEIVED_DESCRIPTION: {\n            return Object.assign({}, state, {\n                description: action.value,\n            });\n        }\n        case ADD_DASHBOARD_ITEM:\n            return update(state, {\n                dashboardItems: { $unshift: [action.value] },\n            });\n        case REMOVE_DASHBOARD_ITEM: {\n            const idToRemove = action.value;\n\n            const dashboardItemIndex = state.dashboardItems.findIndex(\n                item => item.id === idToRemove\n            );\n\n            if (dashboardItemIndex > -1) {\n                return update(state, {\n                    dashboardItems: {\n                        $splice: [[dashboardItemIndex, 1]],\n                    },\n                });\n            }\n\n            return state;\n        }\n        case RECEIVED_DASHBOARD_LAYOUT: {\n            const stateItems = orArray(state.dashboardItems);\n\n            const newStateItems = action.value.map(({ x, y, w, h, i }) => {\n                const stateItem = stateItems.find(si => si.id === i);\n\n                return Object.assign({}, stateItem, { w, h, x, y });\n            });\n\n            return update(state, {\n                dashboardItems: { $set: newStateItems },\n            });\n        }\n        case UPDATE_DASHBOARD_ITEM: {\n            const dashboardItem = action.value;\n\n            const dashboardItemIndex = state.dashboardItems.findIndex(\n                item => item.id === dashboardItem.id\n            );\n\n            if (dashboardItemIndex > -1) {\n                const newState = update(state, {\n                    dashboardItems: {\n                        $splice: [[dashboardItemIndex, 1, dashboardItem]],\n                    },\n                });\n\n                return newState;\n            }\n\n            return state;\n        }\n        default:\n            return state;\n    }\n};\n\n// root selector\n\nexport const sGetEditDashboardRoot = state => state.editDashboard;\n\n// selectors\n\nexport const sGetIsEditing = state => !isEmpty(state.editDashboard);\n\nexport const sGetIsNewDashboard = state => {\n    return (\n        !isEmpty(state.editDashboard) && sGetEditDashboardRoot(state).id === ''\n    );\n};\n\nexport const sGetEditDashboardItems = state =>\n    orObject(sGetEditDashboardRoot(state)).dashboardItems;\n","export const CLEAR_EDIT_ITEM_FILTERS = 'CLEAR_EDIT_ITEM_FILTERS';\nexport const REMOVE_EDIT_ITEM_FILTER = 'REMOVE_EDIT_ITEM_FILTER';\nexport const SET_EDIT_ITEM_FILTERS = 'SET_EDIT_ITEM_FILTERS';\n\nexport const DEFAULT_STATE_EDIT_ITEM_FILTERS = {};\n\nexport default (state = DEFAULT_STATE_EDIT_ITEM_FILTERS, action) => {\n    switch (action.type) {\n        case REMOVE_EDIT_ITEM_FILTER: {\n            const newState = { ...state };\n\n            delete newState[action.id];\n\n            return newState;\n        }\n        case SET_EDIT_ITEM_FILTERS: {\n            return action.filters;\n        }\n        case CLEAR_EDIT_ITEM_FILTERS: {\n            return DEFAULT_STATE_EDIT_ITEM_FILTERS;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetEditItemFiltersRoot = state => state.editItemFilters;\n\nexport const sGetEditFiltersKeys = state =>\n    Object.keys(sGetEditItemFiltersRoot(state));\n","export const CLEAR_ITEM_FILTERS = 'CLEAR_ITEM_FILTERS';\nexport const SET_ITEM_FILTERS = 'SET_ITEM_FILTERS';\nexport const ADD_ITEM_FILTER = 'ADD_ITEM_FILTER';\nexport const REMOVE_ITEM_FILTER = 'REMOVE_ITEM_FILTER';\n\nexport const DEFAULT_STATE_ITEM_FILTERS = {};\n\nexport default (state = DEFAULT_STATE_ITEM_FILTERS, action) => {\n    switch (action.type) {\n        case ADD_ITEM_FILTER: {\n            return {\n                ...state,\n                [action.filter.id]: action.filter.value,\n            };\n        }\n        case REMOVE_ITEM_FILTER: {\n            const newState = { ...state };\n\n            delete newState[action.id];\n\n            return newState;\n        }\n        case SET_ITEM_FILTERS: {\n            return action.filters;\n        }\n        case CLEAR_ITEM_FILTERS: {\n            return DEFAULT_STATE_ITEM_FILTERS;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetItemFiltersRoot = state => state.itemFilters;\n\nexport const sGetFiltersKeys = state => Object.keys(sGetItemFiltersRoot(state));\n","import {\n    ADD_ITEM_FILTER,\n    REMOVE_ITEM_FILTER,\n    SET_ITEM_FILTERS,\n    CLEAR_ITEM_FILTERS,\n} from '../reducers/itemFilters';\n\nexport const FILTER_ORG_UNIT = 'ou';\n\n// actions\n\nexport const acAddItemFilter = filter => ({\n    type: ADD_ITEM_FILTER,\n    filter,\n});\n\nexport const acRemoveItemFilter = id => ({\n    type: REMOVE_ITEM_FILTER,\n    id,\n});\n\nexport const acClearItemFilters = () => ({\n    type: CLEAR_ITEM_FILTERS,\n});\n\nexport const acSetItemFilters = filters => ({\n    type: SET_ITEM_FILTERS,\n    filters,\n});\n","import {\n    REMOVE_EDIT_ITEM_FILTER,\n    SET_EDIT_ITEM_FILTERS,\n    CLEAR_EDIT_ITEM_FILTERS,\n} from '../reducers/editItemFilters';\n\n// actions\n\nexport const acRemoveEditItemFilter = id => ({\n    type: REMOVE_EDIT_ITEM_FILTER,\n    id,\n});\n\nexport const acClearEditItemFilters = () => ({\n    type: CLEAR_EDIT_ITEM_FILTERS,\n});\n\nexport const acSetEditItemFilters = filters => ({\n    type: SET_EDIT_ITEM_FILTERS,\n    filters,\n});\n","import { getInstance } from 'd2';\n\nconst onError = error => console.log('Error: ', error);\n\nconst saveDashboard = (dashboard, data) => {\n    const { name, description, dashboardItems } = data;\n\n    dashboard.name = name;\n    dashboard.description = description;\n    dashboard.dashboardItems = dashboardItems.map(item =>\n        Object.assign({}, item, { width: item.w, height: item.h })\n    );\n\n    return dashboard.save().then(msg => msg.response.uid);\n};\n\nexport const updateDashboard = data => {\n    return getInstance()\n        .then(d2 => {\n            return d2.models.dashboards\n                .get(data.id)\n                .then(dashboard => saveDashboard(dashboard, data));\n        })\n        .catch(onError);\n};\n\nexport const postDashboard = data => {\n    return getInstance().then(d2 => {\n        const dashboard = d2.models.dashboards.create();\n\n        return saveDashboard(dashboard, data);\n    });\n};\n","import { generateUid } from 'd2/uid';\n\nimport {\n    RECEIVED_EDIT_DASHBOARD,\n    START_NEW_DASHBOARD,\n    RECEIVED_NOT_EDITING,\n    RECEIVED_TITLE,\n    RECEIVED_DESCRIPTION,\n    RECEIVED_DASHBOARD_LAYOUT,\n    ADD_DASHBOARD_ITEM,\n    UPDATE_DASHBOARD_ITEM,\n    REMOVE_DASHBOARD_ITEM,\n} from '../reducers/editDashboard';\nimport { sGetEditDashboardRoot } from '../reducers/editDashboard';\nimport { updateDashboard, postDashboard } from '../api/editDashboard';\nimport { tSetSelectedDashboardById } from '../actions/selected';\nimport { NEW_ITEM_SHAPE } from '../components/ItemGrid/gridUtil';\nimport {\n    itemTypeMap,\n    isSpacerType,\n    TEXT,\n    emptyTextItemContent,\n    isTextType,\n} from '../modules/itemTypes';\n\nconst onError = error => {\n    console.log('Error (Saving Dashboard): ', error);\n    return error;\n};\n\n// actions\n\nexport const acSetEditDashboard = (dashboard, items) => {\n    const val = {\n        ...dashboard,\n        dashboardItems: items,\n    };\n\n    return {\n        type: RECEIVED_EDIT_DASHBOARD,\n        value: val,\n    };\n};\n\nexport const acSetEditNewDashboard = () => ({\n    type: START_NEW_DASHBOARD,\n});\n\nexport const acClearEditDashboard = () => ({\n    type: RECEIVED_NOT_EDITING,\n});\n\nexport const acSetDashboardTitle = value => ({\n    type: RECEIVED_TITLE,\n    value,\n});\n\nexport const acSetDashboardDescription = value => ({\n    type: RECEIVED_DESCRIPTION,\n    value,\n});\n\nexport const acUpdateDashboardLayout = value => ({\n    type: RECEIVED_DASHBOARD_LAYOUT,\n    value,\n});\n\nexport const acAddDashboardItem = item => {\n    const type = item.type;\n    delete item.type;\n    const itemPropName = itemTypeMap[type].propName;\n\n    return {\n        type: ADD_DASHBOARD_ITEM,\n        value: {\n            id: generateUid(),\n            type,\n            [itemPropName]: item.content,\n            ...NEW_ITEM_SHAPE,\n        },\n    };\n};\n\nexport const acUpdateDashboardItem = item => ({\n    type: UPDATE_DASHBOARD_ITEM,\n    value: item,\n});\n\nexport const acRemoveDashboardItem = value => ({\n    type: REMOVE_DASHBOARD_ITEM,\n    value,\n});\n\n// thunks\n\nexport const tSaveDashboard = () => async (dispatch, getState) => {\n    const dashboard = sGetEditDashboardRoot(getState());\n\n    const dashboardItems = dashboard.dashboardItems.map(item => {\n        const text = isTextType(item)\n            ? item.text || emptyTextItemContent\n            : null;\n\n        const type = isSpacerType(item) ? TEXT : item.type;\n\n        return {\n            ...item,\n            ...(text ? { text } : {}),\n            type,\n        };\n    });\n\n    const dashboardToSave = {\n        ...dashboard,\n        dashboardItems,\n    };\n\n    try {\n        const dashboardId = dashboardToSave.id\n            ? await updateDashboard(dashboardToSave)\n            : await postDashboard(dashboardToSave);\n\n        dispatch(acClearEditDashboard());\n        await dispatch(tSetSelectedDashboardById(dashboardId));\n\n        return Promise.resolve(dashboardId);\n    } catch (error) {\n        onError(error);\n    }\n};\n","import {\n    SET_DASHBOARDS,\n    ADD_DASHBOARDS,\n    SET_DASHBOARD_STARRED,\n    SET_DASHBOARD_DISPLAY_NAME,\n    SET_DASHBOARD_ITEMS,\n} from '../reducers/dashboards';\nimport {\n    getCustomDashboards,\n    sGetDashboardById,\n    sGetDashboardsSortedByStarred,\n} from '../reducers/dashboards';\nimport { sGetUserUsername } from '../reducers/user';\nimport { tSetSelectedDashboardById, acSetSelectedId } from './selected';\nimport { sGetSelectedId } from '../reducers/selected';\nimport { sGetIsEditing } from '../reducers/editDashboard';\nimport { sGetEditItemFiltersRoot } from '../reducers/editItemFilters';\nimport { acSetItemFilters, acClearItemFilters } from './itemFilters';\nimport { acClearEditItemFilters } from './editItemFilters';\nimport { acClearEditDashboard } from './editDashboard';\nimport {\n    apiFetchDashboards,\n    apiStarDashboard,\n    apiDeleteDashboard,\n} from '../api/dashboards';\nimport { getPreferredDashboardId } from '../api/localStorage';\nimport { arrayToIdMap } from '../modules/util';\n\n// actions\n\nexport const acSetDashboards = dashboards => ({\n    type: SET_DASHBOARDS,\n    value: arrayToIdMap(getCustomDashboards(dashboards)),\n});\n\nexport const acAppendDashboards = dashboards => ({\n    type: ADD_DASHBOARDS,\n    value: arrayToIdMap(getCustomDashboards(dashboards)),\n});\n\nexport const acSetDashboardStarred = (dashboardId, isStarred) => ({\n    type: SET_DASHBOARD_STARRED,\n    dashboardId: dashboardId,\n    value: isStarred,\n});\n\nexport const acSetDashboardDisplayName = (dashboardId, value) => ({\n    type: SET_DASHBOARD_DISPLAY_NAME,\n    dashboardId,\n    value,\n});\n\nexport const acSetDashboardItems = value => ({\n    type: SET_DASHBOARD_ITEMS,\n    value,\n});\n\n// thunks\n\nexport const tFetchDashboards = () => async dispatch => {\n    const collection = await apiFetchDashboards();\n    dispatch(acSetDashboards(collection.toArray()));\n};\n\nexport const tSelectDashboard = id => async (dispatch, getState) => {\n    const onError = error => {\n        console.log('Error (apiFetchDashboards): ', error);\n        return error;\n    };\n\n    try {\n        const state = getState();\n\n        let dashboardToSelect = null;\n        if (id) {\n            dashboardToSelect = sGetDashboardById(state, id) || null;\n        } else {\n            const preferredId = getPreferredDashboardId(\n                sGetUserUsername(state)\n            );\n            const dash = sGetDashboardById(state, preferredId);\n            dashboardToSelect =\n                preferredId && dash\n                    ? dash\n                    : sGetDashboardsSortedByStarred(state)[0];\n        }\n\n        if (dashboardToSelect) {\n            dispatch(tSetSelectedDashboardById(dashboardToSelect.id));\n\n            if (dashboardToSelect.id === sGetSelectedId(state)) {\n                if (sGetIsEditing(state)) {\n                    // disable filters when switching to edit mode\n                    dispatch(acClearItemFilters());\n                } else {\n                    // enable filters when switching to view mode\n                    dispatch(acSetItemFilters(sGetEditItemFiltersRoot(state)));\n                }\n            } else {\n                // clear filters when switching dashboard\n                dispatch(acClearEditItemFilters());\n                dispatch(acClearItemFilters());\n            }\n        } else {\n            dispatch(acSetSelectedId(false));\n        }\n    } catch (err) {\n        return onError(err);\n    }\n};\n\nexport const tStarDashboard = (id, isStarred) => async dispatch => {\n    const onSuccess = id => {\n        dispatch(acSetDashboardStarred(id, isStarred));\n        return id;\n    };\n\n    const onError = error => {\n        console.log('Error (apiStarDashboard): ', error);\n        return error;\n    };\n    try {\n        await apiStarDashboard(id, isStarred);\n        return onSuccess(id);\n    } catch (err) {\n        return onError(err);\n    }\n};\n\nexport const tDeleteDashboard = id => async dispatch => {\n    try {\n        await apiDeleteDashboard(id);\n        dispatch(acClearEditDashboard());\n        dispatch(acSetSelectedId());\n        dispatch(acSetDashboardItems([]));\n\n        await dispatch(tFetchDashboards());\n\n        return Promise.resolve();\n    } catch (err) {\n        console.log('Error (deleteDashboard): ', err);\n        return err;\n    }\n};\n","/** @module reducers/controlBar */\nimport { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\n\nexport const SET_CONTROLBAR_USER_ROWS = 'SET_CONTROLBAR_USER_ROWS';\n\nexport const DEFAULT_STATE_CONTROLBAR_ROWS = 1;\n\nconst userRows = (state = DEFAULT_STATE_CONTROLBAR_ROWS, action) => {\n    switch (action.type) {\n        case SET_CONTROLBAR_USER_ROWS:\n            return validateReducer(action.value, DEFAULT_STATE_CONTROLBAR_ROWS);\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    userRows,\n});\n\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\nexport const sGetControlBarRoot = state => state.controlBar;\n\n// Selector dependency level 2\n\nexport const sGetControlBarUserRows = state =>\n    sGetControlBarRoot(state).userRows;\n","import { getInstance } from 'd2';\nimport { DEFAULT_STATE_CONTROLBAR_ROWS } from '../reducers/controlBar';\n\nconst NAMESPACE = 'dashboard';\nconst KEY = 'controlBarRows';\n\nconst hasNamespace = async d2 => await d2.currentUser.dataStore.has(NAMESPACE);\n\nconst getNamespace = async (d2, hasNamespace) =>\n    hasNamespace\n        ? await d2.currentUser.dataStore.get(NAMESPACE)\n        : await d2.currentUser.dataStore.create(NAMESPACE);\n\nexport const apiGetControlBarRows = async () => {\n    const d2 = await getInstance();\n    const namespace = await getNamespace(d2, await hasNamespace(d2));\n    const hasKey = namespace.keys && namespace.keys.find(key => key === KEY);\n\n    if (hasKey) {\n        return await namespace.get(KEY);\n    } else {\n        await apiPostControlBarRows(DEFAULT_STATE_CONTROLBAR_ROWS, namespace);\n        console.log(\n            '(These errors to /userDataStore/dashboard can be ignored)'\n        );\n        return DEFAULT_STATE_CONTROLBAR_ROWS;\n    }\n};\n\nexport const apiPostControlBarRows = async (rows, namespace) => {\n    const d2 = await getInstance();\n    const ns = namespace || (await getNamespace(d2, hasNamespace));\n\n    ns.set(KEY, rows);\n};\n","import { SET_CONTROLBAR_USER_ROWS } from '../reducers/controlBar';\nimport { apiGetControlBarRows } from '../api/controlBar';\n\n// actions\n\nexport const acSetControlBarUserRows = rows => ({\n    type: SET_CONTROLBAR_USER_ROWS,\n    value: rows,\n});\n\n// thunks\n\nexport const tSetControlBarRows = () => async dispatch => {\n    const onSuccess = rows => {\n        dispatch(acSetControlBarUserRows(rows));\n    };\n\n    const onError = error => {\n        console.log('Error (apiGetControlBarRows): ', error);\n        return error;\n    };\n\n    try {\n        const controlBarRows = await apiGetControlBarRows();\n        return onSuccess(controlBarRows);\n    } catch (err) {\n        return onError(err);\n    }\n};\n","import {\n    getDimensionById,\n    DIMENSION_ID_PERIOD,\n    DIMENSION_ID_ORGUNIT,\n} from '@dhis2/analytics';\n\nexport const SET_DIMENSIONS = 'SET_DIMENSIONS';\nexport const DEFAULT_DIMENSIONS = [\n    getDimensionById(DIMENSION_ID_PERIOD),\n    getDimensionById(DIMENSION_ID_ORGUNIT),\n];\n\nexport default (state = DEFAULT_DIMENSIONS, action) => {\n    switch (action.type) {\n        case SET_DIMENSIONS: {\n            return [...DEFAULT_DIMENSIONS, ...action.value];\n        }\n        default:\n            return state;\n    }\n};\n\nexport const sGetDimensions = state => state.dimensions;\n","export const SET_SETTINGS = 'SET_SETTINGS';\nexport const ADD_SETTINGS = 'ADD_SETTINGS';\n\nexport const DEFAULT_SETTINGS = {\n    keyDateFormat: 'yyyy-MM-dd',\n    keyAnalysisRelativePeriod: 'LAST_12_MONTHS',\n    keyAnalysisDigitGroupSeparator: 'SPACE',\n    displayNameProperty: 'displayName',\n    uiLocale: 'en',\n    rootOrganisationUnit: {},\n};\n\nexport default (state = DEFAULT_SETTINGS, action) => {\n    switch (action.type) {\n        case SET_SETTINGS: {\n            return Object.assign({}, action.value);\n        }\n        case ADD_SETTINGS: {\n            return {\n                ...state,\n                ...action.value,\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// Selectors\n\nexport const sGetSettings = state => state.settings;\n\nexport const sGetSettingsDisplayNameProperty = state =>\n    sGetSettings(state).displayNameProperty;\n\nexport const sGetRootOrgUnit = state =>\n    sGetSettings(state).rootOrganisationUnit;\n\nexport const sGetRelativePeriod = state =>\n    sGetSettings(state).keyAnalysisRelativePeriod;\n\nexport const sGetUiLocale = state => sGetSettings(state).uiLocale;\n","import { SET_DIMENSIONS } from '../reducers/dimensions';\nimport { apiFetchDimensions } from '@dhis2/analytics';\nimport { sGetSettingsDisplayNameProperty } from '../reducers/settings';\n\nexport const acSetDimensions = dimensions => ({\n    type: SET_DIMENSIONS,\n    value: dimensions,\n});\n\nexport const tSetDimensions = d2 => async (dispatch, getState) => {\n    const onSuccess = dimensions => {\n        dispatch(acSetDimensions(dimensions));\n    };\n\n    const onError = error => {\n        console.log('Error (apiFetchDimensions): ', error);\n        return error;\n    };\n\n    try {\n        const displayNameProp = sGetSettingsDisplayNameProperty(getState());\n        const dimensions = await apiFetchDimensions(d2, displayNameProp);\n\n        // filter out CATEGORY that are not of type ATTRIBUTE\n        const filteredDimensions = dimensions.filter(\n            dim =>\n                dim.dimensionType !== 'CATEGORY' ||\n                (dim.dimensionType === 'CATEGORY' &&\n                    dim.dataDimensionType === 'ATTRIBUTE')\n        );\n        return onSuccess(filteredDimensions);\n    } catch (err) {\n        return onError(err);\n    }\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { colors } from '@dhis2/ui-core';\nimport { withStyles } from '@material-ui/core/styles';\n\nexport const SHOWMORE_BAR_HEIGHT = 16;\n\nconst styles = {\n    showMore: {\n        color: colors.grey700,\n        cursor: 'pointer',\n        fontSize: 11,\n        paddingTop: 5,\n        '&:hover': {\n            textDecoration: 'underline',\n        },\n    },\n    disabled: {\n        paddingTop: 5,\n        color: colors.grey500,\n        fontSize: 11,\n        cursor: 'not-allowed',\n    },\n};\n\nexport const ShowMoreButton = ({ onClick, isMaxHeight, classes, disabled }) => {\n    return (\n        <div style={{ textAlign: 'center' }}>\n            {disabled ? (\n                <div className={classes.disabled}>{i18n.t('Show more')}</div>\n            ) : (\n                <div className={classes.showMore} onClick={onClick}>\n                    {isMaxHeight ? i18n.t('Show less') : i18n.t('Show more')}\n                </div>\n            )}\n        </div>\n    );\n};\n\nShowMoreButton.propTypes = {\n    classes: PropTypes.object,\n    disabled: PropTypes.bool,\n    isMaxHeight: PropTypes.bool,\n    onClick: PropTypes.func,\n};\n\nexport default withStyles(styles)(ShowMoreButton);\n","import { SHOWMORE_BAR_HEIGHT } from './ShowMoreButton';\n\nexport const CONTROL_BAR_ROW_HEIGHT = 40;\nexport const FIRST_ROW_PADDING_HEIGHT = 10;\nexport const MIN_ROW_COUNT = 1;\n\nexport const HEADERBAR_HEIGHT = 48;\n\nconst CONTROL_BAR_OUTER_HEIGHT_DIFF =\n    FIRST_ROW_PADDING_HEIGHT + SHOWMORE_BAR_HEIGHT - 2; // 2 pixel \"adjustment\"\n\nexport const getRowsHeight = rows => {\n    return rows * CONTROL_BAR_ROW_HEIGHT;\n};\n\nexport const getNumRowsFromHeight = height => {\n    return Math.floor(\n        (height - CONTROL_BAR_OUTER_HEIGHT_DIFF) / CONTROL_BAR_ROW_HEIGHT\n    );\n};\n\nexport const getTopOffset = rows => {\n    return HEADERBAR_HEIGHT + getControlBarHeight(rows, false);\n};\n\nexport const getControlBarHeight = rows => {\n    return getRowsHeight(rows) + CONTROL_BAR_OUTER_HEIGHT_DIFF;\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { colors } from '@dhis2/ui-core';\nimport { HEADERBAR_HEIGHT } from './controlBarDimensions';\n\nimport classes from './styles/ControlBar.module.css';\n\nconst DRAG_HANDLE_HEIGHT = 7;\n\nclass ControlBar extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            dragging: false,\n        };\n    }\n\n    onStartDrag = () => {\n        this.setState({ dragging: true });\n        window.addEventListener('mousemove', this.onDrag);\n        window.addEventListener('mouseup', this.onEndDrag);\n    };\n\n    onDrag = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const newHeight = event.clientY;\n\n        if (\n            this.props.onChangeHeight &&\n            newHeight !== this.props.height &&\n            newHeight > 0\n        ) {\n            requestAnimationFrame(() => {\n                this.props.onChangeHeight(newHeight);\n            });\n        }\n    };\n\n    onEndDrag = () => {\n        this.setState({ dragging: false });\n        window.removeEventListener('mousemove', this.onDrag);\n        window.removeEventListener('mouseup', this.onEndDrag);\n\n        if (this.props.onEndDrag) {\n            this.props.onEndDrag();\n        }\n    };\n\n    renderDragHandle() {\n        return typeof this.props.onChangeHeight === 'function' ? (\n            <div\n                className={classes.draghandle}\n                style={{ height: DRAG_HANDLE_HEIGHT }}\n                onMouseDown={this.onStartDrag}\n            />\n        ) : null;\n    }\n\n    render() {\n        const height = Math.max(this.props.height, 0) + DRAG_HANDLE_HEIGHT;\n\n        const rootStyle = Object.assign(\n            {\n                height,\n                top: HEADERBAR_HEIGHT,\n                backgroundColor: this.props.editMode\n                    ? colors.yellow050\n                    : colors.white,\n                paddingBottom: DRAG_HANDLE_HEIGHT,\n            },\n            // Disable animations while dragging\n            this.state.dragging ? { transition: 'none' } : {}\n        );\n\n        return (\n            <div style={rootStyle} className={classes.root}>\n                <div className={classes.content}>{this.props.children}</div>\n                {this.renderDragHandle()}\n            </div>\n        );\n    }\n}\n\nControlBar.propTypes = {\n    /**\n     * The height of the control bar in number of lines. Must be a positive integer.\n     */\n    children: PropTypes.node.isRequired,\n\n    /**\n     * If true, the background color of the control bar changes to indicate that edit mode is active.\n     */\n    editMode: PropTypes.bool.isRequired,\n\n    /**\n     * Callback function that is called when the control bar is resized.\n     * The callback receives one argument: The new height in pixels.\n     *\n     * If no callback is specified the control bar will not have a drag handle.\n     */\n    height: PropTypes.number.isRequired,\n\n    /**\n     * Callback function that is called when the control bar is dropped after being dragged.\n     * The callback receives one argument: The new height in pixels.\n     *\n     * Ignored if no \"onChangeHeight\" function is provided.\n     */\n    onChangeHeight: PropTypes.func,\n\n    /**\n     * The contents of the control bar.\n     */\n    onEndDrag: PropTypes.func,\n};\n\nControlBar.defaultProps = {\n    onChangeHeight: null,\n    onEndDrag: null,\n};\n\nexport default ControlBar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst StarIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>\n);\n\nStarIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default StarIcon;\n","import { getInstance } from 'd2';\n\nexport const apiPostDataStatistics = async (eventType, id) => {\n    const d2 = await getInstance();\n    const url = `dataStatistics?eventType=${eventType}&favorite=${id}`;\n\n    d2.Api.getApi().post(url);\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Chip, colors } from '@dhis2/ui-core';\nimport { Link } from 'react-router-dom';\nimport debounce from 'lodash/debounce';\n\nimport StarIcon from '../../icons/Star';\nimport { apiPostDataStatistics } from '../../api/dataStatistics';\n\nconst styles = {\n    chip: {\n        margin: '3px',\n    },\n    link: {\n        color: colors.grey600,\n        display: 'inline-block',\n        textDecoration: 'none',\n        verticalAlign: 'top',\n    },\n    icon: {\n        height: '20px',\n        marginTop: '2px',\n        width: '20px',\n    },\n    selected: {\n        fill: colors.white,\n    },\n    unselected: {\n        fill: colors.grey700,\n    },\n};\n\nexport const DashboardItemChip = ({\n    starred,\n    selected,\n    label,\n    dashboardId,\n    classes,\n}) => {\n    const chipProps = {\n        selected,\n        className: classes.chip,\n    };\n\n    if (starred) {\n        const selectedState = selected ? classes.selected : classes.unselected;\n        chipProps.icon = (\n            <StarIcon className={`${classes.icon} ${selectedState}`} />\n        );\n    }\n\n    return (\n        <Link\n            className={classes.link}\n            to={`/${dashboardId}`}\n            onClick={debounce(\n                () => apiPostDataStatistics('DASHBOARD_VIEW', dashboardId),\n                500\n            )}\n        >\n            <Chip {...chipProps}>{label}</Chip>\n        </Link>\n    );\n};\n\nDashboardItemChip.propTypes = {\n    dashboardId: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    selected: PropTypes.bool.isRequired,\n    starred: PropTypes.bool.isRequired,\n    classes: PropTypes.object,\n};\n\nexport default withStyles(styles)(DashboardItemChip);\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\n\nconst AddCircleIcon = () => (\n    <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"32\"\n        height=\"32\"\n        fill={colors.teal600}\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm4 11h-3v3c0 .55-.45 1-1 1s-1-.45-1-1v-3H8c-.55 0-1-.45-1-1s.45-1 1-1h3V8c0-.55.45-1 1-1s1 .45 1 1v3h3c.55 0 1 .45 1 1s-.45 1-1 1z\" />\n    </svg>\n);\n\nexport default AddCircleIcon;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nconst ClearIcon = ({ className }) => (\n    <svg\n        className={className}\n        fill={colors.grey800}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>\n);\n\nClearIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default ClearIcon;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ClearIcon from '../../icons/Clear';\n\nimport classes from './styles/ClearButton.module.css';\n\nexport const ClearButton = ({ onClear }) => (\n    <button className={classes.button} onClick={onClear}>\n        <span>\n            <ClearIcon className={classes.icon} color=\"action\" />\n        </span>\n    </button>\n);\n\nClearButton.propTypes = {\n    onClear: PropTypes.func.isRequired,\n};\n\nexport default ClearButton;\n","import { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\n\nexport const SET_DASHBOARDS_FILTER_NAME = 'SET_DASHBOARDS_FILTER_NAME';\nexport const SET_DASHBOARDS_FILTER_OWNER = 'SET_DASHBOARDS_FILTER_OWNER';\nexport const SET_DASHBOARDS_FILTER_ORDER = 'SET_DASHBOARDS_FILTER_ORDER';\n\nexport const ownerData = [\n    { id: 'ALL', value: 'All users' },\n    { id: 'ME', value: 'Created by me' },\n    { id: 'OTHERS', value: 'Created by others' },\n];\n\nexport const orderData = [\n    { id: 'NAME:ASC', value: 'Name (asc)' },\n    { id: 'NAME:ASC', value: 'Name (desc)' },\n    { id: 'ITEMS:ASC', value: 'Number of items (asc)' },\n    { id: 'ITEMS:ASC', value: 'Number of items (desc)' },\n    { id: 'CREATED:ASC', value: 'Created date (asc)' },\n    { id: 'CREATED:ASC', value: 'Created date (desc)' },\n];\n\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_NAME = '';\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_OWNER = ownerData[0].id;\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_ORDER = orderData[0].id;\n\nconst name = (state = DEFAULT_STATE_DASHBOARDS_FILTER_NAME, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_NAME:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_NAME\n            );\n        default:\n            return state;\n    }\n};\n\nconst owner = (state = DEFAULT_STATE_DASHBOARDS_FILTER_OWNER, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_OWNER:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_NAME\n            );\n        default:\n            return state;\n    }\n};\n\nconst order = (state = DEFAULT_STATE_DASHBOARDS_FILTER_ORDER, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_ORDER:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_ORDER\n            );\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    name,\n    owner,\n    order,\n});\n\n// selectors\n\nexport const sGetDashboardsFilterRoot = state => state.dashboardsFilter;\n\n// selector dependency level 2\n\nexport const sGetFilterName = state => sGetDashboardsFilterRoot(state).name;\nexport const sGetFilterOwner = state => sGetDashboardsFilterRoot(state).owner;\nexport const sGetFilterOrder = state => sGetDashboardsFilterRoot(state).order;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport i18n from '@dhis2/d2-i18n';\nimport InputField from '@material-ui/core/Input';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { colors } from '@dhis2/ui-core';\n\nimport ClearButton from './ClearButton';\nimport { DEFAULT_STATE_DASHBOARDS_FILTER_NAME } from '../../reducers/dashboardsFilter';\n\nexport const KEYCODE_ENTER = 13;\nexport const KEYCODE_ESCAPE = 27;\n\nconst styles = {\n    filterField: {\n        fontSize: '14px',\n        width: '200px',\n        height: '30px',\n        top: '-4px',\n    },\n    searchIcon: {\n        color: colors.grey700,\n        width: '20px',\n        height: '20px',\n    },\n};\n\nexport class Filter extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            value: DEFAULT_STATE_DASHBOARDS_FILTER_NAME,\n        };\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setState({\n            value: nextProps.name,\n        });\n    }\n\n    setFilterValue = event => {\n        event.preventDefault();\n\n        this.props.onChangeName(event.target.value);\n    };\n\n    handleKeyUp = event => {\n        switch (event.keyCode) {\n            case KEYCODE_ENTER:\n                this.props.onKeypressEnter();\n                break;\n            case KEYCODE_ESCAPE:\n                this.props.onChangeName();\n                break;\n            default:\n                break;\n        }\n    };\n\n    render() {\n        const { classes, name, onChangeName } = this.props;\n\n        const startAdornment = (\n            <InputAdornment position=\"start\">\n                <SearchIcon className={classes.searchIcon} />\n            </InputAdornment>\n        );\n\n        const endAdornment =\n            name !== '' && name !== null ? (\n                <InputAdornment position=\"end\">\n                    <ClearButton onClear={() => onChangeName()} />\n                </InputAdornment>\n            ) : null;\n\n        return (\n            <InputField\n                className={classes.filterField}\n                placeholder={i18n.t('Search for a dashboard')}\n                startAdornment={startAdornment}\n                endAdornment={endAdornment}\n                value={this.state.value}\n                onChange={this.setFilterValue}\n                onKeyUp={this.handleKeyUp}\n            />\n        );\n    }\n}\n\nFilter.propTypes = {\n    classes: PropTypes.object,\n    name: PropTypes.string,\n    onChangeName: PropTypes.func,\n    onKeypressEnter: PropTypes.func,\n};\n\nFilter.defaultProps = {\n    name: '',\n    onChangeName: Function.prototype,\n};\n\nexport default withStyles(styles)(Filter);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport ControlBar from './ControlBar';\nimport arraySort from 'd2-utilizr/lib/arraySort';\nimport PropTypes from 'prop-types';\n\nimport Chip from './DashboardItemChip';\nimport AddCircleIcon from '../../icons/AddCircle';\nimport Filter from './Filter';\nimport ShowMoreButton from './ShowMoreButton';\nimport {\n    FIRST_ROW_PADDING_HEIGHT,\n    MIN_ROW_COUNT,\n    getRowsHeight,\n    getControlBarHeight,\n    getNumRowsFromHeight,\n} from './controlBarDimensions';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { sGetAllDashboards } from '../../reducers/dashboards';\nimport { sGetFilterName } from '../../reducers/dashboardsFilter';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { acSetControlBarUserRows } from '../../actions/controlBar';\nimport { acSetFilterName } from '../../actions/dashboardsFilter';\nimport { orObject, orArray } from '../../modules/util';\nimport { apiPostControlBarRows } from '../../api/controlBar';\n\nimport classes from './styles/DashboardsBar.module.css';\n\nexport const MAX_ROW_COUNT = 10;\n\nexport class DashboardsBar extends Component {\n    state = {\n        rows: MIN_ROW_COUNT,\n    };\n\n    setInitialDashboardState = rows => {\n        this.setState({ rows, isMaxHeight: rows === MAX_ROW_COUNT });\n    };\n\n    componentDidMount() {\n        this.setInitialDashboardState(this.props.userRows);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setInitialDashboardState(nextProps.userRows);\n    }\n\n    onChangeHeight = newHeight => {\n        const adjustedHeight = newHeight - 52; // don't rush the transition to a bigger row count\n        const newRows = Math.max(\n            MIN_ROW_COUNT,\n            getNumRowsFromHeight(adjustedHeight)\n        );\n\n        if (newRows !== this.state.rows) {\n            const newRowCount = Math.min(newRows, MAX_ROW_COUNT);\n\n            this.props.onChangeHeight(newRowCount);\n        }\n    };\n\n    onEndDrag = () => {\n        return apiPostControlBarRows(this.state.rows);\n    };\n\n    onToggleMaxHeight = () => {\n        const rows =\n            this.state.rows === MAX_ROW_COUNT\n                ? this.props.userRows\n                : MAX_ROW_COUNT;\n\n        this.setState({ rows, isMaxHeight: !this.state.isMaxHeight });\n    };\n\n    onSelectDashboard = () => {\n        this.props.history.push(`/${this.props.dashboards[0].id}`);\n    };\n\n    render() {\n        const { dashboards, name, selectedId, onChangeFilterName } = this.props;\n\n        const rowCount = this.state.isMaxHeight\n            ? MAX_ROW_COUNT\n            : this.state.rows;\n        const controlBarHeight = getControlBarHeight(rowCount);\n        const contentWrapperStyle = {\n            padding: `${FIRST_ROW_PADDING_HEIGHT}px 6px 0 6px`,\n            overflowY: this.state.isMaxHeight ? 'auto' : 'hidden',\n            height: getRowsHeight(rowCount) + FIRST_ROW_PADDING_HEIGHT,\n        };\n\n        return (\n            <ControlBar\n                height={controlBarHeight}\n                onChangeHeight={this.onChangeHeight}\n                onEndDrag={this.onEndDrag}\n                editMode={false}\n            >\n                <div style={contentWrapperStyle}>\n                    <div className={classes.leftControls}>\n                        <Link\n                            style={{\n                                display: 'inline-block',\n                                textDecoration: 'none',\n                                marginRight: 10,\n                                position: 'relative',\n                                top: '2px',\n                            }}\n                            to={'/new'}\n                        >\n                            <AddCircleIcon />\n                        </Link>\n                        <Filter\n                            name={name}\n                            onChangeName={onChangeFilterName}\n                            onKeypressEnter={this.onSelectDashboard}\n                        />\n                    </div>\n                    {orArray(dashboards).map(dashboard => (\n                        <Chip\n                            key={dashboard.id}\n                            label={dashboard.displayName}\n                            starred={dashboard.starred}\n                            dashboardId={dashboard.id}\n                            selected={dashboard.id === selectedId}\n                        />\n                    ))}\n                </div>\n                <ShowMoreButton\n                    onClick={this.onToggleMaxHeight}\n                    isMaxHeight={this.state.isMaxHeight}\n                    disabled={this.props.userRows === MAX_ROW_COUNT}\n                />\n            </ControlBar>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    dashboards: sGetAllDashboards(state),\n    name: sGetFilterName(state),\n    userRows: sGetControlBarUserRows(state),\n    selectedId: sGetSelectedId(state),\n});\n\nconst mapDispatchToProps = {\n    onChangeHeight: acSetControlBarUserRows,\n    onChangeFilterName: acSetFilterName,\n};\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const dashboards = Object.values(orObject(stateProps.dashboards));\n    const displayDashboards = arraySort(\n        dashboards.filter(d =>\n            d.displayName.toLowerCase().includes(stateProps.name.toLowerCase())\n        ),\n        'ASC',\n        'displayName'\n    );\n\n    return {\n        ...stateProps,\n        ...ownProps,\n        ...dispatchProps,\n        dashboards: [\n            ...displayDashboards.filter(d => d.starred),\n            ...displayDashboards.filter(d => !d.starred),\n        ],\n    };\n};\n\nDashboardsBar.propTypes = {\n    dashboards: PropTypes.array,\n    history: PropTypes.object,\n    name: PropTypes.string,\n    selectedId: PropTypes.string,\n    userRows: PropTypes.number,\n    onChangeFilterName: PropTypes.func,\n    onChangeHeight: PropTypes.func,\n};\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps,\n        mergeProps\n    )(DashboardsBar)\n);\n","import {\n    SET_DASHBOARDS_FILTER_NAME,\n    SET_DASHBOARDS_FILTER_OWNER,\n    SET_DASHBOARDS_FILTER_ORDER,\n} from '../reducers/dashboardsFilter';\n\n// actions\n\nexport const acSetFilterName = value => ({\n    type: SET_DASHBOARDS_FILTER_NAME,\n    value,\n});\n\nexport const acSetFilterOwner = value => ({\n    type: SET_DASHBOARDS_FILTER_OWNER,\n    value,\n});\n\nexport const acSetFilterOrder = value => ({\n    type: SET_DASHBOARDS_FILTER_ORDER,\n    value,\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport {\n    getTopOffset,\n    MIN_ROW_COUNT,\n} from '../ControlBar/controlBarDimensions';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\n\nconst DashboardVerticalOffset = props => {\n    const rows = props.editMode ? MIN_ROW_COUNT : props.userRows;\n    const marginTop = getTopOffset(rows);\n\n    return <div className=\"page-container-top-margin\" style={{ marginTop }} />;\n};\n\nconst mapStateToProps = state => ({\n    userRows: sGetControlBarUserRows(state),\n});\n\nDashboardVerticalOffset.propTypes = {\n    editMode: PropTypes.bool,\n    userRows: PropTypes.number,\n};\n\nexport default connect(mapStateToProps)(DashboardVerticalOffset);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { MenuItem, colors } from '@dhis2/ui-core';\n\nconst HeaderMenuItem = ({ title }) => (\n    <MenuItem\n        dense\n        key={title}\n        disabled\n        label={\n            <p style={{ color: colors.grey800, fontWeight: '600' }}>{title}</p>\n        }\n    />\n);\n\nHeaderMenuItem.propTypes = {\n    title: PropTypes.string.isRequired,\n};\n\nexport default HeaderMenuItem;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nconst LaunchIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"12\"\n        height=\"12\"\n        fill={colors.grey600}\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z\" />\n    </svg>\n);\n\nLaunchIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default LaunchIcon;\n","import React from 'react';\nimport { MenuItem, colors } from '@dhis2/ui-core';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\n\nimport { getItemIcon } from '../../modules/itemTypes';\nimport LaunchIcon from '../../icons/Launch';\n\nimport classes from './styles/ContentMenuItem.module.css';\n\nconst LaunchLink = ({ url }) => (\n    <a\n        onClick={e => e.stopPropagation()}\n        className={classes.launchLink}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        href={url}\n    >\n        <LaunchIcon />\n    </a>\n);\n\nLaunchLink.propTypes = {\n    url: PropTypes.string,\n};\n\nconst InsertButton = () => (\n    <button className={classes.buttonInsert}>{i18n.t('Insert')}</button>\n);\n\nconst ContentMenuItem = ({ type, name, onInsert, url }) => {\n    const ItemIcon = getItemIcon(type);\n\n    return (\n        <MenuItem\n            dense\n            onClick={onInsert}\n            label={\n                <div className={classes.menuItem}>\n                    <div className={classes.label}>\n                        <ItemIcon\n                            style={{ margin: '6px', fill: colors.grey600 }}\n                        />\n                        <span>{name}</span>\n                        {url ? <LaunchLink url={url} /> : null}\n                    </div>\n                    <InsertButton />\n                </div>\n            }\n        />\n    );\n};\n\nContentMenuItem.propTypes = {\n    name: PropTypes.string,\n    type: PropTypes.string,\n    url: PropTypes.string,\n    onInsert: PropTypes.func,\n};\n\nexport default ContentMenuItem;\n","import i18n from '@dhis2/d2-i18n';\nimport {\n    spacerContent,\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_CHART,\n    EVENT_REPORT,\n    USERS,\n    REPORTS,\n    RESOURCES,\n    APP,\n    MESSAGES,\n    TEXT,\n    SPACER,\n} from '../../modules/itemTypes';\n\nexport const singleItems = [\n    {\n        id: 'additional',\n        header: i18n.t('Additional items'),\n        items: [\n            {\n                type: TEXT,\n                name: i18n.t('Text box'),\n                content: '',\n            },\n            {\n                type: MESSAGES,\n                name: i18n.t('Messages'),\n                content: 'true',\n            },\n            {\n                type: SPACER,\n                name: i18n.t('Spacer'),\n                content: spacerContent,\n            },\n        ],\n    },\n];\n\n// categorizedItems are grouped in the item selector menu\nexport const categorizedItems = [\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_REPORT,\n    EVENT_CHART,\n    USERS,\n    REPORTS,\n    RESOURCES,\n    APP,\n];\n\n// listItemTypes are included in a single dashboard item\nexport const listItemTypes = [REPORTS, RESOURCES, USERS];\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { MenuItem, Divider } from '@dhis2/ui-core';\n\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\n\nimport { tAddListItemContent } from './actions';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\nimport { getItemUrl, APP } from '../../modules/itemTypes';\nimport { categorizedItems, listItemTypes } from './selectableItems';\n\nimport classes from './styles/CategorizedMenuGroup.module.css';\n\nclass CategorizedMenuGroup extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seeMore: false,\n        };\n    }\n\n    addItem = item => () => {\n        const { type, acAddDashboardItem, tAddListItemContent } = this.props;\n\n        if (type === APP) {\n            acAddDashboardItem({ type, content: item.key });\n        } else {\n            const newItem = {\n                id: item.id,\n                name: item.displayName || item.name,\n            };\n\n            if (listItemTypes.includes(type)) {\n                tAddListItemContent(type, newItem);\n            } else {\n                acAddDashboardItem({ type, content: newItem });\n            }\n        }\n    };\n\n    toggleSeeMore = () => {\n        this.setState({ seeMore: !this.state.seeMore });\n\n        this.props.onChangeItemsLimit(this.props.type);\n    };\n\n    render() {\n        const { title, type, items, hasMore } = this.props;\n        return (\n            <Fragment>\n                <HeaderMenuItem title={title} />\n                {items.map(item => {\n                    const itemUrl = getItemUrl(type, item, this.context.d2);\n                    return (\n                        <ContentMenuItem\n                            key={item.id || item.key}\n                            type={type}\n                            name={item.displayName || item.name}\n                            onInsert={this.addItem(item)}\n                            url={itemUrl}\n                        />\n                    );\n                })}\n                {hasMore ? (\n                    <MenuItem\n                        dense\n                        key={`showmore${title}`}\n                        onClick={this.toggleSeeMore}\n                        label={\n                            <button className={classes.showMoreButton}>\n                                {this.state.seeMore\n                                    ? i18n.t('Show fewer')\n                                    : i18n.t('Show more')}\n                            </button>\n                        }\n                    />\n                ) : null}\n                <Divider margin=\"8px 0px\" />\n            </Fragment>\n        );\n    }\n}\n\nCategorizedMenuGroup.propTypes = {\n    items: PropTypes.array.isRequired,\n    title: PropTypes.string.isRequired,\n    type: PropTypes.oneOf(categorizedItems).isRequired,\n    onChangeItemsLimit: PropTypes.func.isRequired,\n    acAddDashboardItem: PropTypes.func,\n    hasMore: PropTypes.bool,\n    tAddListItemContent: PropTypes.func,\n};\n\nCategorizedMenuGroup.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nexport default connect(\n    null,\n    {\n        acAddDashboardItem,\n        tAddListItemContent,\n    }\n)(CategorizedMenuGroup);\n","import { sGetEditDashboardRoot } from '../../reducers/editDashboard';\nimport { itemTypeMap } from '../../modules/itemTypes';\nimport {\n    acAddDashboardItem,\n    acUpdateDashboardItem,\n} from '../../actions/editDashboard';\n\nexport const tAddListItemContent = (type, content) => (dispatch, getState) => {\n    const state = getState();\n    const listItemType = itemTypeMap[type].propName;\n    const dashboardItems = sGetEditDashboardRoot(state).dashboardItems;\n    const dashboardItemIndex = dashboardItems.findIndex(\n        item => item.type === type\n    );\n    let dashboardItem;\n\n    // Reports/Resources/Users dashboard item type already present in dashboard\n    if (dashboardItemIndex > -1) {\n        dashboardItem = dashboardItems[dashboardItemIndex];\n        dashboardItem[listItemType].push(content);\n\n        dispatch(acUpdateDashboardItem(dashboardItem));\n    } else {\n        dashboardItem = {\n            type: type,\n            content: [content],\n        };\n\n        dispatch(acAddDashboardItem(dashboardItem));\n    }\n};\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\n\nexport const SinglesMenuGroup = ({ acAddDashboardItem, category }) => {\n    const addToDashboard = ({ type, content }) => () => {\n        acAddDashboardItem({ type, content });\n    };\n\n    return (\n        <Fragment>\n            <HeaderMenuItem title={category.header} />\n            {category.items.map(item => (\n                <ContentMenuItem\n                    key={item.type}\n                    type={item.type}\n                    name={item.name}\n                    onInsert={addToDashboard(item)}\n                />\n            ))}\n        </Fragment>\n    );\n};\n\nSinglesMenuGroup.propTypes = {\n    acAddDashboardItem: PropTypes.func,\n    category: PropTypes.object,\n};\n\nexport default connect(\n    null,\n    { acAddDashboardItem }\n)(SinglesMenuGroup);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport Popover from '@material-ui/core/Popover';\nimport { InputField, Menu } from '@dhis2/ui-core';\n\nimport CategorizedMenuGroup from './CategorizedMenuGroup';\nimport SinglesMenuGroup from './SinglesMenuGroup';\nimport { singleItems, categorizedItems } from './selectableItems';\nimport { itemTypeMap } from '../../modules/itemTypes';\n\nimport './styles/ItemSelector.css';\n\nconst ItemSearchField = props => (\n    <InputField\n        name=\"Dashboard item search\"\n        label={i18n.t('Search for items to add to this dashboard')}\n        type=\"text\"\n        onChange={props.onChange}\n        onFocus={props.onFocus}\n        value={props.value}\n    />\n);\n\nclass ItemSelector extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n            open: false,\n            maxOptions: new Set(),\n            items: undefined,\n            filter: '',\n        };\n    }\n\n    closeList = () => {\n        this.setState({ open: false, filter: '' });\n    };\n\n    openList = (_, event) => {\n        this.fetchItems();\n\n        this.setState({\n            anchorEl: event.currentTarget,\n            open: true,\n        });\n    };\n\n    setFilter = (_, event) => {\n        this.setState({ filter: event.target.value }, this.fetchItems);\n    };\n\n    getCategorizedMenuGroups = () =>\n        categorizedItems\n            .filter(type => {\n                const itemType = itemTypeMap[type];\n                return (\n                    this.state.items && this.state.items[itemType.endPointName]\n                );\n            })\n            .map(type => {\n                const itemType = itemTypeMap[type];\n                const allItems = this.state.items[itemType.endPointName];\n                const hasMore = allItems.length > 5;\n                const items = this.state.maxOptions.has(itemType.id)\n                    ? allItems\n                    : allItems.slice(0, 5);\n\n                return (\n                    <CategorizedMenuGroup\n                        key={type}\n                        type={type}\n                        title={itemType.pluralTitle}\n                        items={items}\n                        onChangeItemsLimit={this.fetchItems}\n                        hasMore={hasMore}\n                    />\n                );\n            });\n\n    getSinglesMenuGroups = () =>\n        singleItems.map(category => (\n            <SinglesMenuGroup key={category.id} category={category} />\n        ));\n\n    getMenuGroups = () =>\n        this.getCategorizedMenuGroups().concat(this.getSinglesMenuGroups());\n\n    fetchItems = async type => {\n        if (type) {\n            const maxOptions = this.state.maxOptions;\n\n            if (maxOptions.has(type)) {\n                maxOptions.delete(type);\n            } else {\n                maxOptions.add(type);\n            }\n\n            this.setState({ maxOptions });\n        } else {\n            this.setState({\n                maxOptions: new Set(),\n            });\n        }\n\n        let queryString = '?count=6';\n        if ([...this.state.maxOptions.values()].length) {\n            queryString +=\n                '&max=' + [...this.state.maxOptions.values()].join('&max=');\n        }\n\n        const filter = this.state.filter ? `/${this.state.filter}` : '';\n\n        this.context.d2.Api.getApi()\n            .get(`dashboards/q${filter}${queryString}`)\n            .then(response => this.setState({ items: response }))\n            .catch(console.error);\n    };\n\n    render() {\n        return (\n            <Fragment>\n                <ItemSearchField\n                    value={this.state.filter}\n                    onChange={this.setFilter}\n                    onFocus={this.openList}\n                />\n                <Popover\n                    className=\"dashboard-item-selector\"\n                    open={this.state.open}\n                    onClose={this.closeList}\n                    anchorEl={this.state.anchorEl}\n                    anchorOrigin={{ horizontal: 'left', vertical: 'bottom' }}\n                    transformOrigin={{ horizontal: 'left', vertical: 'top' }}\n                    style={{ height: '70vh' }}\n                    PaperProps={{ style: { width: '700px' } }}\n                    disableAutoFocus={true}\n                    disableRestoreFocus={true}\n                >\n                    <Menu>{this.getMenuGroups()}</Menu>\n                </Popover>\n            </Fragment>\n        );\n    }\n}\n\nItemSearchField.propTypes = {\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n    onFocus: PropTypes.func,\n};\n\nItemSelector.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nexport default ItemSelector;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport i18n from '@dhis2/d2-i18n';\nimport { InputField, TextAreaField } from '@dhis2/ui-core';\n\nimport ItemSelector from '../ItemSelector/ItemSelector';\nimport {\n    acSetDashboardTitle,\n    acSetDashboardDescription,\n} from '../../actions/editDashboard';\nimport { orObject } from '../../modules/util';\nimport { sGetEditDashboardRoot } from '../../reducers/editDashboard';\n\nconst styles = {\n    section: { display: 'flex', justifyContent: 'space-between' },\n    titleDescription: {\n        flex: '3',\n        marginRight: '50px',\n    },\n    title: {\n        display: 'block',\n        clear: 'both',\n    },\n    description: {\n        display: 'block',\n        clear: 'both',\n        marginTop: '15px',\n    },\n    underline: {\n        '&::before': {\n            borderBottom: `none`,\n        },\n        '&:hover::before': {\n            borderBottom: `none!important`,\n        },\n    },\n    input: {\n        backgroundColor: 'rgba(0, 0, 10, 0.05)',\n        borderRadius: '4px',\n        width: '100%',\n        '&:hover': {\n            backgroundColor: 'rgba(0, 0, 10, 0.08)',\n        },\n    },\n    itemSelector: {\n        flex: '2',\n        position: 'relative',\n    },\n};\n\nexport const EditTitleBar = ({\n    name,\n    description,\n    onChangeTitle,\n    onChangeDescription,\n    classes,\n}) => {\n    const updateTitle = (_, e) => {\n        onChangeTitle(e.target.value);\n    };\n\n    const updateDescription = (_, e) => {\n        onChangeDescription(e.target.value);\n    };\n\n    return (\n        <section className={classes.section}>\n            <div className={classes.titleDescription}>\n                <InputField\n                    className={classes.title}\n                    name=\"Dashboard title input\"\n                    label={i18n.t('Dashboard title')}\n                    type=\"text\"\n                    onChange={updateTitle}\n                    value={name}\n                />\n                <TextAreaField\n                    className={classes.description}\n                    name=\"Dashboard description input\"\n                    label={i18n.t('Dashboard description')}\n                    onChange={updateDescription}\n                    value={description}\n                />\n            </div>\n            <div className={classes.itemSelector}>\n                <ItemSelector />\n            </div>\n        </section>\n    );\n};\n\nconst mapStateToProps = state => {\n    const selectedDashboard = orObject(sGetEditDashboardRoot(state));\n\n    return {\n        name: selectedDashboard.name,\n        description: selectedDashboard.description,\n    };\n};\n\nconst mapDispatchToProps = {\n    onChangeTitle: acSetDashboardTitle,\n    onChangeDescription: acSetDashboardDescription,\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(EditTitleBar));\n\nEditTitleBar.propTypes = {\n    onChangeDescription: PropTypes.func.isRequired,\n    onChangeTitle: PropTypes.func.isRequired,\n    classes: PropTypes.object,\n    description: PropTypes.string,\n    name: PropTypes.string,\n};\n\nEditTitleBar.defaultProps = {\n    name: '',\n    description: '',\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Button } from '@dhis2/ui-core';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport i18n from '@dhis2/d2-i18n';\n\nimport {\n    PeriodDimension,\n    DynamicDimension,\n    OrgUnitDimension,\n    DIMENSION_ID_PERIOD,\n    DIMENSION_ID_ORGUNIT,\n} from '@dhis2/analytics';\n\nconst peId = DIMENSION_ID_PERIOD;\nconst ouId = DIMENSION_ID_ORGUNIT;\n\nclass FilterDialog extends Component {\n    onConfirm = id => () => this.props.onConfirm(id);\n\n    dialogContent() {\n        const { displayNameProperty, dimension, selectedItems } = this.props;\n        const dialogId = dimension.id;\n\n        const commonProps = {\n            d2: this.context.d2,\n            onSelect: this.props.onSelect,\n            onDeselect: this.props.onDeselect,\n            onReorder: this.props.onReorder,\n        };\n\n        switch (dialogId) {\n            case peId: {\n                return (\n                    <PeriodDimension\n                        selectedPeriods={selectedItems}\n                        {...commonProps}\n                    />\n                );\n            }\n            case ouId:\n                return (\n                    <OrgUnitDimension\n                        displayNameProperty={displayNameProperty}\n                        ouItems={selectedItems}\n                        {...commonProps}\n                    />\n                );\n            default:\n                return (\n                    <DynamicDimension\n                        selectedItems={selectedItems}\n                        dialogId={dialogId}\n                        dialogTitle={dimension.name}\n                        {...commonProps}\n                    />\n                );\n        }\n    }\n\n    render() {\n        const { dimension, onClose } = this.props;\n        const dialogId = dimension.id;\n\n        return (\n            <Dialog\n                open={!!dialogId}\n                maxWidth=\"lg\"\n                disableEnforceFocus\n                onClose={onClose}\n            >\n                {dialogId && this.dialogContent()}\n                <DialogActions>\n                    <Button kind=\"secondary\" onClick={onClose}>\n                        {i18n.t('Cancel')}\n                    </Button>\n                    <Button kind=\"primary\" onClick={this.onConfirm(dialogId)}>\n                        {i18n.t('Confirm')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nFilterDialog.propTypes = {\n    dimension: PropTypes.object,\n    displayNameProperty: PropTypes.string,\n    selectedItems: PropTypes.array,\n    onClose: PropTypes.func,\n    onConfirm: PropTypes.func,\n    onDeselect: PropTypes.func,\n    onReorder: PropTypes.func,\n    onSelect: PropTypes.func,\n};\n\nFilterDialog.contextTypes = {\n    d2: PropTypes.object,\n};\n\nexport default FilterDialog;\n","export const SET_ACTIVE_MODAL_DIMENSION = 'SET_ACTIVE_MODAL_DIMENSION';\nexport const CLEAR_ACTIVE_MODAL_DIMENSION = 'CLEAR_ACTIVE_MODAL_DIMENSION';\n\nexport const DEFAULT_STATE_ACTIVE_MODAL_DIMENSION = {};\n\nexport default (state = DEFAULT_STATE_ACTIVE_MODAL_DIMENSION, action) => {\n    switch (action.type) {\n        case SET_ACTIVE_MODAL_DIMENSION: {\n            return action.value;\n        }\n        case CLEAR_ACTIVE_MODAL_DIMENSION: {\n            return DEFAULT_STATE_ACTIVE_MODAL_DIMENSION;\n        }\n        default:\n            return state;\n    }\n};\n\nexport const sGetActiveModalDimension = state => state.activeModalDimension;\n","import {\n    SET_ACTIVE_MODAL_DIMENSION,\n    CLEAR_ACTIVE_MODAL_DIMENSION,\n} from '../reducers/activeModalDimension';\n\nexport const acSetActiveModalDimension = value => ({\n    type: SET_ACTIVE_MODAL_DIMENSION,\n    value,\n});\n\nexport const acClearActiveModalDimension = () => ({\n    type: CLEAR_ACTIVE_MODAL_DIMENSION,\n});\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Popover from '@material-ui/core/Popover';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport { withTheme } from '@material-ui/core/styles';\n\nimport i18n from '@dhis2/d2-i18n';\nimport { DimensionsPanel } from '@dhis2/analytics';\n\nimport { Button } from '@dhis2/ui-core';\nimport FilterDialog from './FilterDialog';\n\nimport { sGetSettingsDisplayNameProperty } from '../../reducers/settings';\nimport { sGetActiveModalDimension } from '../../reducers/activeModalDimension';\nimport { sGetDimensions } from '../../reducers/dimensions';\nimport { sGetFiltersKeys } from '../../reducers/itemFilters';\nimport { sGetEditItemFiltersRoot } from '../../reducers/editItemFilters';\nimport { acAddItemFilter, acRemoveItemFilter } from '../../actions/itemFilters';\nimport {\n    acRemoveEditItemFilter,\n    acSetEditItemFilters,\n} from '../../actions/editItemFilters';\nimport {\n    acClearActiveModalDimension,\n    acSetActiveModalDimension,\n} from '../../actions/activeModalDimension';\n\nclass FilterSelector extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n        };\n    }\n\n    openPanel = (_, event) => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    closePanel = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    closeDialog = () => {\n        this.setState({ anchorEl: null });\n\n        this.props.clearActiveModalDimension();\n    };\n\n    selectDimension = id => {\n        this.props.setActiveModalDimension(\n            this.props.dimensions.find(dimension => dimension.id === id)\n        );\n    };\n\n    onSelectItems = ({ dimensionId, items }) => {\n        this.props.setEditItemFilters({\n            ...this.props.selectedItems,\n            [dimensionId]: items,\n        });\n    };\n\n    onDeselectItems = ({ dimensionId, itemIdsToRemove }) => {\n        const oldList = this.props.selectedItems[dimensionId] || [];\n        const newList = oldList.filter(\n            item => !itemIdsToRemove.includes(item.id)\n        );\n\n        if (newList.length) {\n            this.props.setEditItemFilters({\n                ...this.props.selectedItems,\n                [dimensionId]: newList,\n            });\n        } else {\n            this.props.removeEditItemFilter(dimensionId);\n        }\n    };\n\n    onReorderItems = ({ dimensionId, itemIds }) => {\n        const oldList = this.props.selectedItems[dimensionId] || [];\n        const reorderedList = itemIds.map(id =>\n            oldList.find(item => item.id === id)\n        );\n\n        this.props.setEditItemFilters({\n            ...this.props.selectedItems,\n            [dimensionId]: reorderedList,\n        });\n    };\n\n    saveFilter = id => {\n        const filterItems = this.props.selectedItems[id];\n\n        if (filterItems && filterItems.length) {\n            this.props.addItemFilter({\n                id,\n                value: [...filterItems],\n            });\n        } else {\n            this.props.removeItemFilter(id);\n        }\n\n        this.closeDialog();\n    };\n\n    render() {\n        const {\n            theme,\n            displayNameProperty,\n            dimension,\n            dimensions,\n            selectedDimensions,\n            selectedItems,\n        } = this.props;\n\n        return (\n            <Fragment>\n                <Button onClick={this.openPanel}>\n                    {i18n.t('Add filter')}\n                    <ArrowDropDownIcon />\n                </Button>\n                <Popover\n                    open={Boolean(this.state.anchorEl)}\n                    anchorEl={this.state.anchorEl}\n                    anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\n                    onClose={this.closePanel}\n                    style={{\n                        height: '100%',\n                        fontFamily: theme.typography.fontFamily,\n                    }}\n                >\n                    <DimensionsPanel\n                        style={{ width: '320px' }}\n                        dimensions={dimensions}\n                        onDimensionClick={this.selectDimension}\n                        selectedIds={selectedDimensions}\n                    />\n                </Popover>\n                {dimension ? (\n                    <FilterDialog\n                        displayNameProperty={displayNameProperty}\n                        dimension={dimension}\n                        selectedItems={selectedItems[dimension.id] || []}\n                        onSelect={this.onSelectItems}\n                        onDeselect={this.onDeselectItems}\n                        onReorder={this.onReorderItems}\n                        onClose={this.closeDialog}\n                        onConfirm={this.saveFilter}\n                    />\n                ) : null}\n            </Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    displayNameProperty: sGetSettingsDisplayNameProperty(state),\n    dimension: sGetActiveModalDimension(state),\n    dimensions: sGetDimensions(state),\n    selectedDimensions: sGetFiltersKeys(state),\n    selectedItems: sGetEditItemFiltersRoot(state),\n});\n\nFilterSelector.propTypes = {\n    addItemFilter: PropTypes.func,\n    clearActiveModalDimension: PropTypes.func,\n    dimension: PropTypes.object,\n    dimensions: PropTypes.object,\n    displayNameProperty: PropTypes.string,\n    removeEditItemFilter: PropTypes.func,\n    removeItemFilter: PropTypes.func,\n    selectedDimensions: PropTypes.array,\n    selectedItems: PropTypes.object,\n    setActiveModalDimension: PropTypes.func,\n    setEditItemFilters: PropTypes.func,\n    theme: PropTypes.object,\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        clearActiveModalDimension: acClearActiveModalDimension,\n        setActiveModalDimension: acSetActiveModalDimension,\n        addItemFilter: acAddItemFilter,\n        removeItemFilter: acRemoveItemFilter,\n        removeEditItemFilter: acRemoveEditItemFilter,\n        setEditItemFilters: acSetEditItemFilters,\n    }\n)(withTheme()(FilterSelector));\n","import React, { Component } from 'react';\nimport InfoOutlineIcon from '@material-ui/icons/InfoOutlined';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nclass Info extends Component {\n    show = false;\n\n    toggle() {\n        this.show = !this.show;\n        return this.show;\n    }\n\n    render() {\n        return (\n            <div onClick={() => this.props.onClick(this.toggle())}>\n                <InfoOutlineIcon style={{ fill: colors.grey600 }} />\n            </div>\n        );\n    }\n}\n\nInfo.propTypes = {\n    onClick: PropTypes.func,\n};\n\nexport default Info;\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport SharingDialog from '@dhis2/d2-ui-sharing-dialog';\nimport Star from '@material-ui/icons/Star';\nimport StarBorder from '@material-ui/icons/StarBorder';\n\nimport { orObject } from '../../modules/util';\nimport { tStarDashboard } from '../../actions/dashboards';\nimport { acSetSelectedShowDescription } from '../../actions/selected';\nimport FilterSelector from '../ItemFilter/FilterSelector';\nimport { Button } from '@dhis2/ui-core';\nimport Info from './Info';\nimport {\n    sGetSelectedId,\n    sGetSelectedShowDescription,\n} from '../../reducers/selected';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n} from '../../reducers/dashboards';\nimport { colors } from '@dhis2/ui-core';\n\nconst NO_DESCRIPTION = i18n.t('No description');\n\nconst styles = {\n    actions: {\n        display: 'flex',\n        alignItems: 'center',\n        marginLeft: '20px',\n    },\n    starIcon: {\n        fill: colors.grey600,\n    },\n    textButton: {\n        minWidth: '30px',\n        top: '1px',\n    },\n    editLink: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        textDecoration: 'none',\n        marginRight: '4px',\n    },\n    titleBar: {\n        display: 'flex',\n        alignItems: 'flex-start',\n    },\n    titleBarIcon: {\n        marginLeft: 5,\n        position: 'relative',\n        top: 1,\n        cursor: 'pointer',\n    },\n};\n\nclass ViewTitleBar extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            sharingDialogIsOpen: false,\n        };\n    }\n\n    toggleSharingDialog = () =>\n        this.setState({ sharingDialogIsOpen: !this.state.sharingDialogIsOpen });\n\n    render() {\n        const {\n            id,\n            name,\n            description,\n            access,\n            style,\n            showDescription,\n            starred,\n            onStarClick,\n            onInfoClick,\n            classes,\n        } = this.props;\n\n        const titleStyle = Object.assign({}, style.title, {\n            cursor: 'default',\n            userSelect: 'text',\n            top: '7px',\n        });\n\n        const StarIcon = starred ? Star : StarBorder;\n\n        return (\n            <Fragment>\n                <div className={classes.titleBar}>\n                    <span style={titleStyle}>{name}</span>\n                    <div className={classes.actions}>\n                        <div\n                            className={classes.titleBarIcon}\n                            onClick={onStarClick}\n                        >\n                            <StarIcon className={classes.starIcon} />\n                        </div>\n                        <div className={classes.titleBarIcon}>\n                            <Info onClick={onInfoClick} />\n                        </div>\n                        <div style={{ marginLeft: '10px' }}>\n                            {access.update ? (\n                                <Link\n                                    className={classes.editLink}\n                                    to={`/${id}/edit`}\n                                >\n                                    <Button>{i18n.t('Edit')}</Button>\n                                </Link>\n                            ) : null}\n                            {access.manage ? (\n                                <span style={{ marginRight: '4px' }}>\n                                    <Button onClick={this.toggleSharingDialog}>\n                                        {i18n.t('Share')}\n                                    </Button>\n                                </span>\n                            ) : null}\n                            <span style={{ marginRight: '4px' }}>\n                                <FilterSelector />\n                            </span>\n                        </div>\n                    </div>\n                </div>\n                {showDescription ? (\n                    <div\n                        className=\"dashboard-description\"\n                        style={Object.assign(\n                            { paddingTop: '5px', paddingBottom: '5px' },\n                            style.description,\n                            !description ? { color: '#888' } : {}\n                        )}\n                    >\n                        {description || NO_DESCRIPTION}\n                    </div>\n                ) : null}\n                {id ? (\n                    <SharingDialog\n                        d2={this.context.d2}\n                        id={id}\n                        type=\"dashboard\"\n                        open={this.state.sharingDialogIsOpen}\n                        onRequestClose={this.toggleSharingDialog}\n                    />\n                ) : null}\n            </Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    const id = sGetSelectedId(state);\n    const dashboard = orObject(sGetDashboardById(state, id));\n\n    return {\n        id,\n        name: dashboard.displayName,\n        description: dashboard.displayDescription,\n        dashboardItems: sGetDashboardItems(state),\n        showDescription: sGetSelectedShowDescription(state),\n        starred: dashboard.starred,\n        access: orObject(dashboard.access),\n    };\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const { id, starred, showDescription } = stateProps;\n    const { dispatch } = dispatchProps;\n\n    return {\n        ...stateProps,\n        ...ownProps,\n        onStarClick: () => dispatch(tStarDashboard(id, !starred)),\n        onInfoClick: () =>\n            dispatch(acSetSelectedShowDescription(!showDescription)),\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    null,\n    mergeProps\n)(withStyles(styles)(ViewTitleBar));\n\nViewTitleBar.propTypes = {\n    access: PropTypes.object,\n    classes: PropTypes.object,\n    description: PropTypes.string,\n    id: PropTypes.string,\n    name: PropTypes.string,\n    showDescription: PropTypes.bool,\n    starred: PropTypes.bool,\n    style: PropTypes.object,\n    onInfoClick: PropTypes.func,\n    onStarClick: PropTypes.func,\n};\n\nViewTitleBar.defaultProps = {\n    name: '',\n    description: '',\n    starred: false,\n    showDescription: false,\n    onInfoClick: null,\n};\n\nViewTitleBar.contextTypes = {\n    d2: PropTypes.object,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { colors } from '@dhis2/ui-core';\nimport EditTitleBar from './EditTitleBar';\nimport ViewTitleBar from './ViewTitleBar';\n\nimport './TitleBar.css';\n\nconst style = {\n    title: {\n        position: 'relative',\n        fontSize: 21,\n        fontWeight: 500,\n        color: colors.black,\n        minWidth: 50,\n    },\n    description: {\n        fontSize: 14,\n        color: colors.grey800,\n    },\n};\n\nconst TitleBar = ({ edit }) => {\n    return (\n        <div\n            className=\"titlebar-wrapper\"\n            style={{\n                padding: '20px 15px 5px 10px',\n            }}\n        >\n            {edit ? (\n                <EditTitleBar style={style} />\n            ) : (\n                <ViewTitleBar style={style} />\n            )}\n        </div>\n    );\n};\n\nTitleBar.propTypes = {\n    edit: PropTypes.bool,\n};\n\nexport default TitleBar;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport i18n from '@dhis2/d2-i18n';\n\nimport * as pluginManager from './plugin';\nimport { getBaseUrl, orObject } from '../../../modules/util';\nimport { getGridItemDomId } from '../../ItemGrid/gridUtil';\n\nconst pluginCredentials = d2 => {\n    return {\n        baseUrl: getBaseUrl(d2),\n        auth: d2.Api.getApi().defaultHeaders.Authorization,\n    };\n};\n\nclass DefaultPlugin extends Component {\n    pluginCredentials = null;\n\n    constructor(props, context) {\n        super(props);\n\n        this.d2 = context.d2;\n    }\n\n    shouldPluginReload = prevProps => {\n        // TODO - fix this hack, to handle bug with multiple\n        // rerendering while switching between dashboards.\n        //\n        // To determine if the rendering is happening because of a\n        // dashboard switch, check if the item reference has changed.\n        const reloadAllowed = this.props.item === prevProps.item;\n\n        const filtersChanged = prevProps.itemFilters !== this.props.itemFilters;\n        const vis = orObject(this.props.visualization);\n        const prevVis = orObject(prevProps.visualization);\n        const visChanged =\n            vis.id !== prevVis.id || vis.activeType !== prevVis.activeType;\n\n        return reloadAllowed && (visChanged || filtersChanged);\n    };\n\n    reloadPlugin = prevProps => {\n        if (\n            pluginManager.pluginIsAvailable(\n                this.props.item,\n                this.props.visualization\n            ) &&\n            this.shouldPluginReload(prevProps)\n        ) {\n            const prevVis = orObject(prevProps.visualization);\n            const currentVis = this.props.visualization;\n\n            const useActiveType =\n                currentVis.activeType !== prevVis.activeType ||\n                currentVis.activeType !== this.props.item.type;\n\n            if (\n                useActiveType ||\n                this.props.itemFilters !== prevProps.itemFilters\n            ) {\n                pluginManager.unmount(\n                    this.props.item,\n                    prevVis.activeType || this.props.item.type\n                );\n\n                pluginManager.load(this.props.item, this.props.visualization, {\n                    credentials: this.pluginCredentials,\n                    activeType: useActiveType ? currentVis.activeType : null,\n                });\n            }\n        }\n    };\n\n    componentDidMount() {\n        this.pluginCredentials = pluginCredentials(this.d2);\n\n        if (\n            pluginManager.pluginIsAvailable(\n                this.props.item,\n                this.props.visualization\n            )\n        ) {\n            pluginManager.load(this.props.item, this.props.visualization, {\n                credentials: this.pluginCredentials,\n                activeType: !this.props.editMode ? this.getActiveType() : null,\n            });\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        this.reloadPlugin(prevProps);\n    }\n\n    getActiveType = () =>\n        this.props.visualization.activeType || this.props.item.type;\n\n    render() {\n        const { classes, item, visualization, style } = this.props;\n        const pluginIsAvailable = pluginManager.pluginIsAvailable(\n            item,\n            visualization\n        );\n\n        return pluginIsAvailable ? (\n            <div id={getGridItemDomId(item.id)} style={style} />\n        ) : (\n            <div className={classes.textDiv}>\n                {i18n.t('Unable to load the plugin for this item')}\n            </div>\n        );\n    }\n}\n\nDefaultPlugin.contextTypes = {\n    d2: PropTypes.object,\n};\n\nDefaultPlugin.propTypes = {\n    classes: PropTypes.object,\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    itemFilters: PropTypes.object,\n    style: PropTypes.object,\n    visualization: PropTypes.object,\n};\n\nDefaultPlugin.defaultProps = {\n    style: {},\n    item: {},\n    itemFilters: {},\n    visualization: {},\n};\n\nexport default DefaultPlugin;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const HEADER_HEIGHT = 45;\n\nconst ItemHeader = props => {\n    const { title, actionButtons, editMode } = props;\n\n    return (\n        <div className=\"dashboard-item-header\">\n            <div\n                className=\"dashboard-item-header-title\"\n                style={{ userSelect: editMode ? 'none' : 'text' }}\n            >\n                {title}\n            </div>\n            {actionButtons}\n        </div>\n    );\n};\n\nItemHeader.propTypes = {\n    actionButtons: PropTypes.node,\n    editMode: PropTypes.bool,\n    title: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n};\n\nexport default ItemHeader;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { colors } from '@dhis2/ui-core';\nimport { getId } from './plugin';\nimport InterpretationsComponent from '@dhis2/d2-ui-interpretations';\n\nconst style = {\n    scrollContainer: {\n        overflowY: 'auto',\n        height: '340px',\n    },\n    line: {\n        margin: '-1px 0px 0px',\n        height: '1px',\n        border: 'none',\n        backgroundColor: colors.grey100,\n    },\n};\n\nclass ItemFooter extends Component {\n    render() {\n        const objectId = getId(this.props.item);\n\n        return (\n            <div className=\"dashboard-item-footer\">\n                <hr style={style.line} />\n                <div style={style.scrollContainer}>\n                    <InterpretationsComponent\n                        d2={this.context.d2}\n                        item={this.props.item}\n                        type={this.props.item.type.toLowerCase()}\n                        id={objectId}\n                        appName=\"dashboard\"\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nItemFooter.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nItemFooter.propTypes = {\n    item: PropTypes.object.isRequired,\n};\n\nexport default ItemFooter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './ItemHeaderButton.css';\n\nconst ItemHeaderButton = ({ disabled, onClick, children, style }) => {\n    return (\n        <button\n            disabled={disabled}\n            type=\"button\"\n            className=\"item-action-button\"\n            style={style}\n            onClick={onClick}\n        >\n            {children}\n        </button>\n    );\n};\n\nItemHeaderButton.propTypes = {\n    children: PropTypes.node,\n    disabled: PropTypes.bool,\n    style: PropTypes.object,\n    onClick: PropTypes.func,\n};\n\nexport default ItemHeaderButton;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport MessageIcon from '@material-ui/icons/Message';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\n\nimport { extractFavorite } from './plugin';\nimport ItemHeaderButton from '../ItemHeaderButton';\nimport {\n    CHART,\n    MAP,\n    REPORT_TABLE,\n    EVENT_CHART,\n    EVENT_REPORT,\n    isTrackerDomainType,\n    hasMapView,\n} from '../../../modules/itemTypes';\nimport { colors, theme } from '@dhis2/ui-core';\nimport { isSingleValue } from '@dhis2/analytics';\n\nconst style = {\n    iconBase: {\n        width: '24px',\n        height: '24px',\n        fill: colors.grey500,\n    },\n    buttonBase: {\n        padding: '5px 6px 3px 6px',\n    },\n    buttonDisabled: {\n        padding: '5px 6px 3px 6px',\n        opacity: 0.5,\n        cursor: 'unset',\n    },\n    toggleFooterPadding: {\n        padding: '7px 6px 1px 6px',\n    },\n    border: {\n        borderRadius: '2px',\n        border: `1px solid ${colors.grey200}`,\n    },\n};\n\nconst baseStyle = {\n    icon: style.iconBase,\n    container: style.buttonBase,\n};\n\nconst disabledStyle = {\n    icon: style.iconBase,\n    container: style.buttonDisabled,\n};\n\nconst activeStyle = {\n    icon: { ...style.iconBase, fill: theme.primary800 },\n    container: {\n        ...style.buttonBase,\n        backgroundColor: theme.primary100,\n    },\n};\n\nconst inactiveStyle = disabled => (disabled ? disabledStyle : baseStyle);\n\nconst tableBtnStyle = (activeType, disabled) =>\n    [REPORT_TABLE, EVENT_REPORT].includes(activeType)\n        ? activeStyle\n        : inactiveStyle(disabled);\n\nconst chartBtnStyle = (activeType, disabled) =>\n    [CHART, EVENT_CHART].includes(activeType)\n        ? activeStyle\n        : inactiveStyle(disabled);\n\nconst mapBtnStyle = (activeType, disabled) =>\n    [MAP].includes(activeType) ? activeStyle : inactiveStyle(disabled);\n\nclass VisualizationItemHeaderButtons extends Component {\n    renderInterpretationButton() {\n        const { activeFooter, onToggleFooter } = this.props;\n\n        const toggleFooterBase = activeFooter ? activeStyle : baseStyle;\n\n        const toggleFooter = {\n            ...toggleFooterBase,\n            container: {\n                ...toggleFooterBase.container,\n                ...style.toggleFooterPadding,\n                ...style.border,\n            },\n        };\n\n        return (\n            <Fragment>\n                <ItemHeaderButton\n                    style={toggleFooter.container}\n                    onClick={onToggleFooter}\n                >\n                    <MessageIcon style={toggleFooter.icon} />\n                </ItemHeaderButton>\n            </Fragment>\n        );\n    }\n\n    renderVisualizationButtons() {\n        const {\n            item,\n            visualization,\n            onSelectActiveType,\n            activeType,\n        } = this.props;\n\n        if (isSingleValue(visualization.type)) {\n            return null;\n        }\n\n        const onViewTable = () =>\n            onSelectActiveType(\n                isTrackerDomainType(item.type) ? EVENT_REPORT : REPORT_TABLE\n            );\n\n        const onViewChart = () =>\n            onSelectActiveType(\n                isTrackerDomainType(item.type) ? EVENT_CHART : CHART\n            );\n\n        const onViewMap = () => onSelectActiveType(MAP);\n\n        // disable toggle buttons\n        let disabled = false;\n\n        if (item.type === CHART) {\n            if (extractFavorite(item).type.match(/^YEAR_OVER_YEAR/)) {\n                disabled = true;\n            }\n        }\n\n        const tableButtonStyle = tableBtnStyle(activeType, disabled);\n        const chartButtonStyle = chartBtnStyle(activeType, disabled);\n        const mapButtonStyle = mapBtnStyle(activeType, disabled);\n\n        return (\n            <div style={{ marginLeft: 10 }}>\n                <div style={style.border}>\n                    <ItemHeaderButton\n                        disabled={disabled}\n                        style={tableButtonStyle.container}\n                        onClick={onViewTable}\n                    >\n                        <TableIcon style={tableButtonStyle.icon} />\n                    </ItemHeaderButton>\n                    <ItemHeaderButton\n                        disabled={disabled}\n                        style={chartButtonStyle.container}\n                        onClick={onViewChart}\n                    >\n                        <ChartIcon style={chartButtonStyle.icon} />\n                    </ItemHeaderButton>\n                    {hasMapView(item.type) ? (\n                        <ItemHeaderButton\n                            disabled={disabled}\n                            style={mapButtonStyle.container}\n                            onClick={onViewMap}\n                        >\n                            <MapIcon style={mapButtonStyle.icon} />\n                        </ItemHeaderButton>\n                    ) : null}\n                </div>\n            </div>\n        );\n    }\n\n    render() {\n        return (\n            <Fragment>\n                {this.renderInterpretationButton()}\n                {this.renderVisualizationButtons()}\n            </Fragment>\n        );\n    }\n}\n\nVisualizationItemHeaderButtons.propTypes = {\n    activeFooter: PropTypes.bool,\n    activeType: PropTypes.string,\n    item: PropTypes.object,\n    visualization: PropTypes.object,\n    onSelectActiveType: PropTypes.func,\n    onToggleFooter: PropTypes.func,\n};\n\nexport default VisualizationItemHeaderButtons;\n","// Note that this ignores discrepancies in 'this', so shouldn't be used with bound functions\n// This is useful instead of lodash/memoize when we only need to memoize a single value\n// Inspiration: https://github.com/alexreardon/memoize-one\n\nconst memoizeOne = fn => {\n    let lastArgs = undefined;\n    let lastValue = undefined;\n\n    return (...args) => {\n        if (\n            lastArgs &&\n            args.length === lastArgs.length &&\n            args.every((arg, i) => arg === lastArgs[i])\n        ) {\n            return lastValue;\n        }\n        lastArgs = args;\n        lastValue = fn(...args);\n        return lastValue;\n    };\n};\n\nexport default memoizeOne;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport VisualizationPlugin from '@dhis2/data-visualizer-plugin';\n\nimport i18n from '@dhis2/d2-i18n';\nimport uniqueId from 'lodash/uniqueId';\n\nimport DefaultPlugin from './DefaultPlugin';\nimport ItemHeader, { HEADER_HEIGHT } from '../ItemHeader';\nimport ItemFooter from './ItemFooter';\nimport VisualizationItemHeaderButtons from './ItemHeaderButtons';\nimport * as pluginManager from './plugin';\nimport { sGetVisualization } from '../../../reducers/visualizations';\nimport { sGetItemFiltersRoot } from '../../../reducers/itemFilters';\nimport {\n    acAddVisualization,\n    acSetActiveVisualizationType,\n} from '../../../actions/visualizations';\nimport {\n    MAP,\n    CHART,\n    REPORT_TABLE,\n    itemTypeMap,\n} from '../../../modules/itemTypes';\n\nimport { colors } from '@dhis2/ui-core';\nimport memoizeOne from '../../../modules/memoizeOne';\nimport { getVisualizationConfig } from './plugin';\n\nconst styles = {\n    icon: {\n        width: 16,\n        height: 16,\n        marginLeft: 3,\n        cursor: 'pointer',\n        fill: colors.grey600,\n    },\n    title: {\n        overflow: 'hidden',\n        maxWidth: '85%',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n    },\n    textDiv: {\n        fontSize: '14px',\n        fontStretch: 'normal',\n        padding: '10px',\n        lineHeight: '20px',\n    },\n};\n\nconst applyFilters = (visualization, filters) => {\n    if (!Object.keys(filters).length) {\n        return visualization;\n    }\n\n    // deep clone objects in filters to avoid changing the visualization in the Redux store\n    const visRows = visualization.rows.map(obj => ({ ...obj }));\n    const visColumns = visualization.columns.map(obj => ({ ...obj }));\n    const visFilters = visualization.filters.map(obj => ({ ...obj }));\n\n    Object.keys(filters).forEach(dimensionId => {\n        if (filters[dimensionId]) {\n            let dimensionFound = false;\n\n            [visRows, visColumns, visFilters].forEach(dimensionObjects =>\n                dimensionObjects\n                    .filter(obj => obj.dimension === dimensionId)\n                    .forEach(obj => {\n                        dimensionFound = true;\n                        obj.items = filters[dimensionId];\n                    })\n            );\n\n            // add dimension to filters if not already present elsewhere\n            if (!dimensionFound) {\n                visFilters.push({\n                    dimension: dimensionId,\n                    items: filters[dimensionId],\n                });\n            }\n        }\n    });\n\n    return {\n        ...visualization,\n        rows: visRows,\n        columns: visColumns,\n        filters: visFilters,\n    };\n};\n\nexport class Item extends Component {\n    state = {\n        showFooter: false,\n        configLoaded: false,\n    };\n\n    constructor(props, context) {\n        super(props);\n\n        this.d2 = context.d2;\n\n        this.contentRef = React.createRef();\n    }\n\n    async componentDidMount() {\n        this.props.onVisualizationLoaded(\n            // TODO do not call fetch on the pluginManager, do it here as the manager will eventually be removed...\n            await pluginManager.fetch(this.props.item)\n        );\n\n        this.setState({\n            configLoaded: true,\n        });\n    }\n\n    getUniqueKey = memoizeOne(() => uniqueId());\n\n    pluginCredentials = null;\n\n    getPluginComponent = () => {\n        const activeType = this.getActiveType();\n        const visualization = getVisualizationConfig(\n            this.props.visualization,\n            this.props.item.type,\n            activeType\n        );\n\n        if (!visualization) {\n            return (\n                <div className={this.props.classes.textDiv}>\n                    {i18n.t('No data to display')}\n                </div>\n            );\n        }\n\n        const props = {\n            ...this.props,\n            visualization,\n            style: this.getContentStyle(),\n        };\n\n        switch (activeType) {\n            case CHART:\n            case REPORT_TABLE: {\n                return (\n                    <VisualizationPlugin\n                        d2={this.d2}\n                        visualization={applyFilters(\n                            visualization,\n                            props.itemFilters\n                        )}\n                        forDashboard={true}\n                        style={props.style}\n                    />\n                );\n            }\n            case MAP: {\n                if (props.item.type === MAP) {\n                    // apply filters only to thematic and event layers\n                    // for maps AO\n                    const mapViews = props.visualization.mapViews.map(obj => {\n                        if (\n                            obj.layer.includes('thematic') ||\n                            obj.layer.includes('event')\n                        ) {\n                            return applyFilters(obj, props.itemFilters);\n                        }\n\n                        return obj;\n                    });\n\n                    props.visualization = {\n                        ...props.visualization,\n                        mapViews,\n                    };\n                } else {\n                    // this is the case of a non map AO passed to the maps plugin\n                    // due to a visualization type switch in dashboard item\n                    // maps plugin takes care of converting the AO to a suitable format\n                    props.visualization = applyFilters(\n                        props.visualization,\n                        props.itemFilters\n                    );\n                }\n\n                return <DefaultPlugin {...props} />;\n            }\n            default: {\n                props.visualization = applyFilters(\n                    props.visualization,\n                    props.itemFilters\n                );\n\n                return <DefaultPlugin {...props} />;\n            }\n        }\n    };\n\n    onToggleFooter = () => {\n        this.setState(\n            { showFooter: !this.state.showFooter },\n            this.props.onToggleItemExpanded(this.props.item.id)\n        );\n    };\n\n    onSelectActiveType = type => {\n        if (type === this.getActiveType()) {\n            return;\n        }\n\n        pluginManager.unmount(this.props.item, this.getActiveType());\n\n        this.props.onSelectActiveType(this.props.visualization.id, type);\n    };\n\n    getActiveType = () =>\n        this.props.visualization.activeType || this.props.item.type;\n\n    pluginIsAvailable = () =>\n        pluginManager.pluginIsAvailable(\n            this.props.item,\n            this.props.visualization\n        );\n\n    getTitle = () => {\n        const { item, editMode, classes } = this.props;\n        const itemName = pluginManager.getName(item);\n\n        return (\n            <div style={{ display: 'flex' }}>\n                <span className={classes.title} title={itemName}>\n                    {itemName}\n                </span>\n                {!editMode && this.pluginIsAvailable() ? (\n                    <a\n                        href={pluginManager.getLink(this.props.item, this.d2)}\n                        style={{ height: 16 }}\n                        title={`View in ${\n                            itemTypeMap[this.props.item.type].appName\n                        } app`}\n                    >\n                        <LaunchIcon className={classes.icon} />\n                    </a>\n                ) : null}\n            </div>\n        );\n    };\n\n    getActionButtons = () =>\n        pluginManager.pluginIsAvailable(\n            this.props.item,\n            this.props.visualization\n        ) && !this.props.editMode ? (\n            <VisualizationItemHeaderButtons\n                item={this.props.item}\n                visualization={this.props.visualization}\n                activeFooter={this.state.showFooter}\n                activeType={this.getActiveType()}\n                onSelectActiveType={this.onSelectActiveType}\n                onToggleFooter={this.onToggleFooter}\n            />\n        ) : null;\n\n    getContentStyle = () => {\n        const { item, editMode } = this.props;\n        const PADDING_BOTTOM = 4;\n\n        return !editMode\n            ? {\n                  height: item.originalHeight - HEADER_HEIGHT - PADDING_BOTTOM,\n              }\n            : { height: this.contentRef.offsetHeight };\n    };\n\n    render() {\n        const { item, editMode, itemFilters } = this.props;\n        const { showFooter } = this.state;\n\n        return (\n            <Fragment>\n                <ItemHeader\n                    title={this.getTitle()}\n                    actionButtons={this.getActionButtons()}\n                    editMode={editMode}\n                />\n                <div\n                    key={this.getUniqueKey(itemFilters)}\n                    className=\"dashboard-item-content\"\n                    ref={ref => (this.contentRef = ref)}\n                >\n                    {this.state.configLoaded && this.getPluginComponent()}\n                </div>\n                {!editMode && showFooter ? <ItemFooter item={item} /> : null}\n            </Fragment>\n        );\n    }\n}\n\nItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nItem.propTypes = {\n    classes: PropTypes.object,\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    itemFilters: PropTypes.object,\n    visualization: PropTypes.object,\n    onSelectActiveType: PropTypes.func,\n    onToggleItemExpanded: PropTypes.func,\n    onVisualizationLoaded: PropTypes.func,\n};\n\nItem.defaultProps = {\n    item: {},\n    editMode: false,\n    onToggleItemExpanded: Function.prototype,\n    itemFilters: {},\n    visualization: {},\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n    itemFilters: sGetItemFiltersRoot(state),\n    visualization: sGetVisualization(\n        state,\n        pluginManager.extractFavorite(ownProps.item).id\n    ),\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onVisualizationLoaded: visualization =>\n        dispatch(acAddVisualization(visualization)),\n    onSelectActiveType: (id, type, activeType) =>\n        dispatch(acSetActiveVisualizationType(id, type, activeType)),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(Item));\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\n\nconst style = {\n    backgroundColor: colors.grey200,\n    border: 'none',\n    height: '1px',\n    margin: '0px 0px 5px 0px',\n};\n\nconst Line = () => <hr style={style} />;\n\nexport default Line;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\n\nimport { sGetMessagesRoot } from '../../../reducers/messages';\nimport { formatDate } from '../../../modules/util';\nimport { colors } from '@dhis2/ui-core';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nimport './MessagesItem.css';\n\nconst PRIVATE = 'PRIVATE';\n\nconst messageTypes = {\n    [PRIVATE]: 'Private',\n    VALIDATION_RESULT: 'Validation',\n    TICKET: 'Ticket',\n    SYSTEM: 'System',\n};\n\nconst style = {\n    list: {\n        listStyleType: 'none',\n        paddingLeft: '0px',\n    },\n    seeAll: {\n        textAlign: 'center',\n        fontSize: '13px',\n        marginBottom: '5px',\n    },\n    sender: {\n        fontSize: '13px',\n        lineHeight: '15px',\n        margin: 0,\n        color: colors.grey800,\n    },\n    snippet: {\n        color: colors.grey800,\n        fontSize: '13px',\n        lineHeight: '15px',\n        maxHeight: '30px',\n        overflow: 'hidden',\n    },\n};\n\nclass MessagesItem extends Component {\n    state = {\n        uiLocale: '',\n    };\n\n    async componentDidMount() {\n        const uiLocale = await this.context.d2.currentUser.userSettings.get(\n            'keyUiLocale'\n        );\n\n        this.setState({ uiLocale });\n    }\n\n    getMessageHref = msg => {\n        const msgIdentifier = msg ? `#/${msg.messageType}/${msg.id}` : '';\n        return `${this.context.baseUrl}/dhis-web-messaging/${msgIdentifier}`;\n    };\n\n    getMessageSender = msg => {\n        const latestMsg = msg.messages.slice(-1)[0];\n        return latestMsg.sender ? latestMsg.sender.displayName : '';\n    };\n\n    getMessageItems = () => {\n        const editClass = !this.props.editMode ? 'view' : null;\n\n        return this.props.messages.map(msg => {\n            const redirectToMsg = () => {\n                if (!this.props.editMode) {\n                    document.location.href = this.getMessageHref(msg);\n                }\n            };\n\n            const sender =\n                msg.messageType === PRIVATE\n                    ? this.getMessageSender(msg)\n                    : messageTypes[msg.messageType];\n\n            const readClass = !msg.read ? 'unread' : null;\n            const latestMsg = msg.messages.slice(-1)[0];\n            const msgDate = latestMsg.lastUpdated;\n\n            return (\n                <li\n                    className={`message-item ${editClass}`}\n                    key={msg.id}\n                    onClick={redirectToMsg}\n                >\n                    <p className={`message-title ${readClass}`}>\n                        {msg.displayName} ({msg.messageCount})\n                    </p>\n                    <p style={style.sender}>\n                        {sender} - {formatDate(msgDate, this.state.uiLocale)}\n                    </p>\n                    <p style={style.snippet}>{latestMsg.text}</p>\n                </li>\n            );\n        });\n    };\n\n    render() {\n        return (\n            <Fragment>\n                <ItemHeader title={i18n.t('Messages')} />\n                <Line />\n                {this.props.messages.length > 0 && (\n                    <div className=\"dashboard-item-content\">\n                        <ul style={style.list}>{this.getMessageItems()}</ul>\n                        <div style={style.seeAll}>\n                            <a href={this.getMessageHref()}>\n                                {i18n.t('See all messages')}\n                            </a>\n                        </div>\n                    </div>\n                )}\n            </Fragment>\n        );\n    }\n}\n\nMessagesItem.propTypes = {\n    editMode: PropTypes.bool,\n    messages: PropTypes.array,\n};\n\nMessagesItem.contextTypes = {\n    d2: PropTypes.object,\n    baseUrl: PropTypes.string,\n};\n\nconst mapStateToProps = state => {\n    return {\n        messages: Object.values(sGetMessagesRoot(state)),\n    };\n};\n\nconst MessagesContainer = connect(\n    mapStateToProps,\n    null\n)(MessagesItem);\n\nexport default MessagesContainer;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport ItemHeader from '../ItemHeader';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nconst NotSupportedItem = props => (\n    <Fragment>\n        <ItemHeader title={`Item type not supported: ${props.item.type}`} />\n        <div\n            style={{\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center',\n                height: '90%',\n            }}\n        >\n            <NotInterestedIcon\n                style={{ width: 100, height: 100, align: 'center' }}\n                color=\"disabled\"\n            />\n        </div>\n    </Fragment>\n);\n\nNotSupportedItem.propTypes = {\n    item: PropTypes.object,\n};\n\nexport default NotSupportedItem;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nconst DescriptionIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n        fill={colors.grey500}\n    >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M14 2H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6zm2 16H8v-2h8v2zm0-4H8v-2h8v2zm-3-5V3.5L18.5 9H13z\" />\n    </svg>\n);\n\nDescriptionIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default DescriptionIcon;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nconst DeleteIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"18\"\n        height=\"18\"\n        viewBox=\"0 0 24 24\"\n        fill={colors.red500}\n    >\n        <path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>\n);\n\nDeleteIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default DeleteIcon;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { colors } from '@dhis2/ui-core';\nimport DescriptionIcon from '../../../icons/Description';\n\nimport DeleteIcon from '../../../icons/Delete';\nimport Line from '../../../widgets/Line';\nimport { itemTypeMap, getItemUrl } from '../../../modules/itemTypes';\nimport { orArray } from '../../../modules/util';\nimport { tRemoveListItemContent } from './actions';\nimport ItemHeader from '../ItemHeader';\nimport classes from './Item.module.css';\n\nconst getItemTitle = item => itemTypeMap[item.type].pluralTitle;\n\nconst getContentItems = item =>\n    orArray(item[itemTypeMap[item.type].propName]).filter(\n        (item, index, array) =>\n            array.findIndex(el => el.id === item.id) === index\n    );\n\nconst ListItem = (props, context) => {\n    const { item, editMode, tRemoveListItemContent } = props;\n    const contentItems = getContentItems(item);\n\n    const getLink = contentItem => {\n        const deleteButton = (\n            <button\n                className={classes.deletebutton}\n                onClick={() => tRemoveListItemContent(item, contentItem)}\n            >\n                <DeleteIcon className={classes.deleteicon} />\n            </button>\n        );\n\n        return (\n            <Fragment>\n                <a\n                    className={classes.link}\n                    style={{ color: colors.grey900 }}\n                    href={getItemUrl(item.type, contentItem, context.d2)}\n                >\n                    {contentItem.name}\n                </a>\n                {editMode ? deleteButton : null}\n            </Fragment>\n        );\n    };\n\n    return (\n        <Fragment>\n            <ItemHeader title={getItemTitle(item)} />\n            <Line />\n            <div className=\"dashboard-item-content\">\n                <ul className={classes.list}>\n                    {contentItems.map(contentItem => (\n                        <li className={classes.item} key={contentItem.id}>\n                            <DescriptionIcon className={classes.itemicon} />\n                            {getLink(contentItem)}\n                        </li>\n                    ))}\n                </ul>\n            </div>\n        </Fragment>\n    );\n};\n\nListItem.propTypes = {\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    tRemoveListItemContent: PropTypes.func,\n};\n\nListItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nexport default connect(\n    null,\n    {\n        tRemoveListItemContent,\n    }\n)(ListItem);\n","import {\n    acUpdateDashboardItem,\n    acRemoveDashboardItem,\n} from '../../../actions/editDashboard';\nimport { itemTypeMap } from '../../../modules/itemTypes';\n\nexport const tRemoveListItemContent = (dashboardItem, content) => dispatch => {\n    const listItemType = itemTypeMap[dashboardItem.type].propName;\n\n    const newContent = dashboardItem[listItemType].filter(\n        item => item.id !== content.id\n    );\n\n    if (newContent.length) {\n        dashboardItem[listItemType] = newContent;\n        dispatch(acUpdateDashboardItem(dashboardItem));\n    } else {\n        dispatch(acRemoveDashboardItem(dashboardItem));\n    }\n};\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\n\nimport Input from '@material-ui/core/Input';\nimport {\n    Parser as RichTextParser,\n    Editor as RichTextEditor,\n} from '@dhis2/d2-ui-rich-text';\n\nimport { acUpdateDashboardItem } from '../../../actions/editDashboard';\nimport { sGetEditDashboardItems } from '../../../reducers/editDashboard';\nimport { sGetDashboardItems } from '../../../reducers/dashboards';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nconst style = {\n    textDiv: {\n        padding: '10px',\n        whiteSpace: 'pre-line',\n        lineHeight: '20px',\n    },\n    textField: {\n        fontSize: '14px',\n        fontStretch: 'normal',\n        width: '90%',\n        margin: '0 auto',\n        display: 'block',\n        lineHeight: '24px',\n    },\n    container: {\n        marginBottom: '20px',\n        marginTop: '20px',\n    },\n};\n\nconst TextItem = props => {\n    const { item, editMode, text, acUpdateDashboardItem } = props;\n\n    const onChangeText = event => {\n        const updatedItem = {\n            ...item,\n            text: event.target.value,\n        };\n\n        acUpdateDashboardItem(updatedItem);\n    };\n\n    const viewItem = () => {\n        const textDivStyle = Object.assign({}, style.textField, style.textDiv);\n        return (\n            <div className=\"dashboard-item-content\" style={style.container}>\n                <RichTextParser style={textDivStyle}>{text}</RichTextParser>\n            </div>\n        );\n    };\n\n    const editItem = () => {\n        return (\n            <Fragment>\n                <ItemHeader title={i18n.t('Text item')} />\n                <Line />\n                <div className=\"dashboard-item-content\">\n                    <RichTextEditor onEdit={onChangeText}>\n                        <Input\n                            value={text}\n                            multiline\n                            fullWidth\n                            style={style.textField}\n                            placeholder={i18n.t('Add text here')}\n                            onChange={onChangeText}\n                        />\n                    </RichTextEditor>\n                </div>\n            </Fragment>\n        );\n    };\n\n    return <Fragment>{editMode ? editItem() : viewItem()}</Fragment>;\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    const items = ownProps.editMode\n        ? sGetEditDashboardItems(state)\n        : sGetDashboardItems(state);\n\n    const item = items.find(item => item.id === ownProps.item.id);\n\n    return {\n        text: item ? item.text : '',\n    };\n};\n\nTextItem.propTypes = {\n    acUpdateDashboardItem: PropTypes.func,\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    text: PropTypes.string,\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        acUpdateDashboardItem,\n    }\n)(TextItem);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nimport { FILTER_ORG_UNIT } from '../../../actions/itemFilters';\nimport { sGetItemFiltersRoot } from '../../../reducers/itemFilters';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nconst getIframeSrc = (appDetails, item, itemFilters) => {\n    let iframeSrc = `${appDetails.launchUrl}?dashboardItemId=${item.id}`;\n\n    if (\n        itemFilters &&\n        itemFilters[FILTER_ORG_UNIT] &&\n        itemFilters[FILTER_ORG_UNIT].length\n    ) {\n        const ouIds = itemFilters[FILTER_ORG_UNIT].map(\n            ouPath => ouPath.split('/').slice(-1)[0]\n        );\n\n        iframeSrc += `&userOrgUnit=${ouIds.join(',')}`;\n    }\n\n    return iframeSrc;\n};\n\nconst AppItem = ({ item, itemFilters }, context) => {\n    let appDetails;\n\n    const appKey = item.appKey;\n\n    if (appKey) {\n        appDetails = context.d2.system.installedApps.find(\n            app => app.key === appKey\n        );\n    }\n\n    return appDetails && appDetails.name && appDetails.launchUrl ? (\n        <Fragment>\n            <ItemHeader title={appDetails.name} />\n            <Line />\n            <iframe\n                title={appDetails.name}\n                src={getIframeSrc(appDetails, item, itemFilters)}\n                className=\"dashboard-item-content\"\n                style={{ border: 'none' }}\n            />\n        </Fragment>\n    ) : (\n        <Fragment>\n            <ItemHeader title={`${appKey} app not found`} />\n            <Line />\n            <div\n                className=\"dashboard-item-content\"\n                style={{\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    height: '90%',\n                }}\n            >\n                <NotInterestedIcon\n                    color=\"disabled\"\n                    disabled\n                    style={{ width: 100, height: 100, align: 'center' }}\n                />\n            </div>\n        </Fragment>\n    );\n};\n\nAppItem.propTypes = {\n    item: PropTypes.object,\n    itemFilters: PropTypes.object,\n};\n\nAppItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nconst mapStateToProps = state => ({\n    itemFilters: sGetItemFiltersRoot(state),\n});\n\nexport default connect(mapStateToProps)(AppItem);\n","import React, { Fragment } from 'react';\nimport i18n from '@dhis2/d2-i18n';\n\nimport { colors } from '@dhis2/ui-core';\nimport ItemHeader from '../ItemHeader';\n\nconst style = {\n    margin: '21px 28px',\n    fontSize: '14px',\n    lineHeight: '18px',\n    color: colors.grey600,\n};\n\nconst SpacerItem = () => {\n    return (\n        <Fragment>\n            <ItemHeader title={i18n.t('Spacer')} />\n            <p style={style}>\n                {i18n.t(\n                    'Use a spacer to create empty vertical space between other dashboard items.'\n                )}\n            </p>\n        </Fragment>\n    );\n};\n\nexport default SpacerItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport VisualizationItem from './VisualizationItem/Item';\nimport MessagesItem from './MessagesItem/Item';\nimport NotSupportedItem from './NotSupportedItem/Item';\nimport ListItem from './ListItem/Item';\nimport TextItem from './TextItem/Item';\nimport AppItem from './AppItem/Item';\nimport SpacerItem from './SpacerItem/Item';\nimport {\n    APP,\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_CHART,\n    EVENT_REPORT,\n    MESSAGES,\n    REPORTS,\n    RESOURCES,\n    USERS,\n    TEXT,\n    SPACER,\n} from '../../modules/itemTypes';\nimport { DEFAULT_STATE_ITEM_FILTERS } from '../../reducers/itemFilters';\n\nconst getGridItem = type => {\n    switch (type) {\n        case REPORT_TABLE:\n        case CHART:\n        case MAP:\n        case EVENT_CHART:\n        case EVENT_REPORT:\n            return VisualizationItem;\n        case MESSAGES:\n            return MessagesItem;\n        case REPORTS:\n        case RESOURCES:\n        case USERS:\n            return ListItem;\n        case TEXT:\n            return TextItem;\n        case SPACER:\n            return SpacerItem;\n        case APP:\n            return AppItem;\n        default:\n            return NotSupportedItem;\n    }\n};\n\nexport const Item = props => {\n    const GridItem = getGridItem(props.item.type);\n\n    return (\n        <GridItem\n            item={props.item}\n            editMode={props.editMode}\n            itemFilters={\n                props.editMode ? DEFAULT_STATE_ITEM_FILTERS : props.itemFilters\n            }\n            onToggleItemExpanded={props.onToggleItemExpanded}\n        />\n    );\n};\n\nItem.propTypes = {\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    itemFilters: PropTypes.object,\n    onToggleItemExpanded: PropTypes.func,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ItemHeaderButton from '../Item/ItemHeaderButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { colors } from '@dhis2/ui-core';\n\nconst style = {\n    button: {\n        position: 'absolute',\n        top: '7px',\n        right: '7px',\n        zIndex: '1000',\n    },\n    icon: {\n        fill: colors.red500,\n    },\n};\n\nconst DeleteItemHeaderButton = ({ onClick }) => (\n    <ItemHeaderButton onClick={onClick} style={style.button}>\n        <DeleteIcon style={style.icon} />\n    </ItemHeaderButton>\n);\n\nDeleteItemHeaderButton.propTypes = {\n    onClick: PropTypes.func,\n};\n\nexport default DeleteItemHeaderButton;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nexport const NoContentMessage = ({ text }) => (\n    <div\n        style={{\n            padding: '50px 10px',\n            textAlign: 'center',\n            fontSize: '15px',\n            fontWeight: 500,\n            color: colors.grey600,\n        }}\n    >\n        {text}\n    </div>\n);\n\nNoContentMessage.propTypes = {\n    text: PropTypes.string,\n};\n\nexport default NoContentMessage;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash/debounce';\nimport pick from 'lodash/pick';\n\nconst defaultDebounceMs = 100;\nconst defaultBufferFactor = 0.25;\n\nclass ProgressiveLoadingContainer extends Component {\n    static propTypes = {\n        children: PropTypes.node.isRequired,\n        bufferFactor: PropTypes.number,\n        className: PropTypes.string,\n        debounceMs: PropTypes.number,\n        style: PropTypes.object,\n    };\n    static defaultProps = {\n        debounceMs: defaultDebounceMs,\n        bufferFactor: defaultBufferFactor,\n    };\n\n    state = {\n        shouldLoad: false,\n    };\n    containerRef = null;\n    shouldLoadHandler = null;\n\n    checkShouldLoad() {\n        const bufferPx = this.props.bufferFactor * window.innerHeight;\n\n        if (!this.containerRef) {\n            return;\n        }\n\n        const rect = this.containerRef.getBoundingClientRect();\n        if (\n            rect.bottom > -bufferPx &&\n            rect.top < window.innerHeight + bufferPx\n        ) {\n            this.setState({\n                shouldLoad: true,\n            });\n\n            this.removeHandler();\n        }\n    }\n\n    registerHandler() {\n        this.shouldLoadHandler = debounce(\n            () => this.checkShouldLoad(),\n            this.props.debounceMs\n        );\n\n        window.addEventListener('scroll', this.shouldLoadHandler);\n    }\n    removeHandler() {\n        window.removeEventListener('scroll', this.shouldLoadHandler);\n    }\n\n    componentDidMount() {\n        this.registerHandler();\n        this.checkShouldLoad();\n    }\n\n    componentWillUnmount() {\n        this.removeHandler();\n    }\n\n    render() {\n        const { children, className, style, ...props } = this.props;\n        const { shouldLoad } = this.state;\n\n        const eventProps = pick(props, [\n            'onMouseDown',\n            'onTouchStart',\n            'onMouseUp',\n            'onTouchEnd',\n        ]);\n\n        return (\n            <div\n                ref={ref => (this.containerRef = ref)}\n                style={style}\n                className={className}\n                {...eventProps}\n            >\n                {shouldLoad && children}\n            </div>\n        );\n    }\n}\n\nexport default ProgressiveLoadingContainer;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ReactGridLayout from 'react-grid-layout';\nimport { CircularLoader, ScreenCover } from '@dhis2/ui-core';\n\nimport {\n    acUpdateDashboardLayout,\n    acRemoveDashboardItem,\n} from '../../actions/editDashboard';\nimport { Item } from '../Item/Item';\nimport { resize as pluginResize } from '../Item/VisualizationItem/plugin';\nimport { isVisualizationType } from '../../modules/itemTypes';\nimport {\n    GRID_ROW_HEIGHT,\n    GRID_COMPACT_TYPE,\n    ITEM_MIN_HEIGHT,\n    MARGIN,\n    getGridColumns,\n    hasShape,\n    onItemResize,\n} from './gridUtil';\nimport { orArray } from '../../modules/util';\nimport DeleteItemButton from './DeleteItemButton';\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\n\nimport './ItemGrid.css';\nimport { sGetSelectedId, sGetSelectedIsLoading } from '../../reducers/selected';\nimport {\n    sGetEditDashboardRoot,\n    sGetEditDashboardItems,\n} from '../../reducers/editDashboard';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n} from '../../reducers/dashboards';\nimport ProgressiveLoadingContainer from '../Item/ProgressiveLoadingContainer';\n\n// Component\n\nconst EXPANDED_HEIGHT = 17;\n\nexport class ItemGrid extends Component {\n    state = {\n        expandedItems: {},\n    };\n\n    onToggleItemExpanded = clickedId => {\n        const isExpanded =\n            typeof this.state.expandedItems[clickedId] === 'boolean'\n                ? this.state.expandedItems[clickedId]\n                : false;\n\n        const expandedItems = { ...this.state.expandedItems };\n        expandedItems[clickedId] = !isExpanded;\n        this.setState({ expandedItems });\n    };\n\n    onRemoveItem = clickedId => {\n        this.props.acRemoveDashboardItem(clickedId);\n    };\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.edit) {\n            this.setState({ expandedItems: {} });\n        }\n    }\n\n    onLayoutChange = newLayout => {\n        if (this.props.edit) {\n            this.props.acUpdateDashboardLayout(newLayout);\n        }\n    };\n\n    onResizeStop = (layout, oldItem, newItem) => {\n        onItemResize(newItem.i);\n\n        const dashboardItem = this.props.dashboardItems.find(\n            item => item.id === newItem.i\n        );\n\n        // call resize on the item component if it's a plugin type\n        if (dashboardItem && isVisualizationType(dashboardItem)) {\n            pluginResize(dashboardItem);\n        }\n    };\n\n    onRemoveItemWrapper = id => () => this.onRemoveItem(id);\n\n    render() {\n        const { edit, isLoading, dashboardItems } = this.props;\n\n        if (!isLoading && !dashboardItems.length) {\n            return (\n                <NoContentMessage\n                    text={i18n.t('There are no items on this dashboard')}\n                />\n            );\n        }\n\n        const items = dashboardItems.map(item => {\n            const expandedItem = this.state.expandedItems[item.id];\n            const hProp = { h: item.h };\n\n            if (expandedItem && expandedItem === true) {\n                hProp.h = item.h + EXPANDED_HEIGHT;\n            }\n\n            return Object.assign({}, item, hProp, {\n                i: item.id,\n                minH: ITEM_MIN_HEIGHT,\n            });\n        });\n\n        return (\n            <div className=\"grid-wrapper\">\n                {isLoading ? (\n                    <ScreenCover>\n                        <CircularLoader />\n                    </ScreenCover>\n                ) : null}\n                <ReactGridLayout\n                    onLayoutChange={this.onLayoutChange}\n                    onResizeStop={this.onResizeStop}\n                    className=\"layout\"\n                    layout={items}\n                    margin={MARGIN}\n                    cols={getGridColumns()}\n                    rowHeight={GRID_ROW_HEIGHT}\n                    width={window.innerWidth}\n                    compactType={GRID_COMPACT_TYPE}\n                    isDraggable={edit}\n                    isResizable={edit}\n                    draggableCancel=\"input,textarea\"\n                >\n                    {items.map(item => {\n                        const itemClassNames = [\n                            item.type,\n                            edit ? 'edit' : 'view',\n                        ].join(' ');\n\n                        return (\n                            <ProgressiveLoadingContainer\n                                key={item.i}\n                                className={itemClassNames}\n                            >\n                                {edit ? (\n                                    <DeleteItemButton\n                                        onClick={this.onRemoveItemWrapper(\n                                            item.id\n                                        )}\n                                    />\n                                ) : null}\n                                <Item\n                                    item={item}\n                                    editMode={edit}\n                                    onToggleItemExpanded={\n                                        this.onToggleItemExpanded\n                                    }\n                                />\n                            </ProgressiveLoadingContainer>\n                        );\n                    })}\n                </ReactGridLayout>\n            </div>\n        );\n    }\n}\n\nItemGrid.propTypes = {\n    acRemoveDashboardItem: PropTypes.func,\n    acUpdateDashboardLayout: PropTypes.func,\n    dashboardItems: PropTypes.array,\n    edit: PropTypes.bool,\n    isLoading: PropTypes.bool,\n};\n\nItemGrid.defaultProps = {\n    dashboardItems: [],\n};\n\n// Container\n\nconst mapStateToProps = (state, ownProps) => {\n    const selectedDashboard = ownProps.edit\n        ? sGetEditDashboardRoot(state)\n        : sGetDashboardById(state, sGetSelectedId(state));\n\n    const dashboardItems = ownProps.edit\n        ? sGetEditDashboardItems(state)\n        : sGetDashboardItems(state);\n\n    return {\n        isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n        dashboardItems,\n    };\n};\n\nconst mapDispatchToProps = {\n    acUpdateDashboardLayout,\n    acRemoveDashboardItem,\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const validItems = orArray(stateProps.dashboardItems).filter(hasShape);\n\n    return {\n        ...dispatchProps,\n        edit: ownProps.edit,\n        isLoading: stateProps.isLoading,\n        dashboardItems: validItems,\n        onItemResize,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n    mergeProps\n)(ItemGrid);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport i18n from '@dhis2/d2-i18n';\n\nimport { colors } from '@dhis2/ui-core';\n\nconst styles = {\n    badgeContainer: {\n        margin: '2px',\n        padding: '0 16px',\n        borderRadius: '4px',\n        color: colors.white,\n        backgroundColor: '#212934',\n        height: 36,\n        display: 'flex',\n        alignItems: 'center',\n    },\n    badge: {\n        fontSize: '13px',\n        cursor: 'pointer',\n        whiteSpace: 'nowrap',\n    },\n    badgeRemove: {\n        fontSize: '12px',\n        textDecoration: 'underline',\n        marginLeft: '24px',\n        cursor: 'pointer',\n    },\n};\n\nclass FilterBadge extends Component {\n    onClick = id => () => this.props.onClick(id);\n    onRemove = id => () => this.props.onRemove(id);\n\n    render() {\n        const { data } = this.props;\n\n        return (\n            <div style={styles.badgeContainer}>\n                <span style={styles.badge} onClick={this.onClick(data.id)}>\n                    {`${data.name}: ${\n                        data.values.length > 1\n                            ? i18n.t('{{count}} selected', {\n                                  count: data.values.length,\n                              })\n                            : data.values[0].name\n                    }`}\n                </span>\n                <span\n                    style={styles.badgeRemove}\n                    onClick={this.onRemove(data.id)}\n                >\n                    {i18n.t('Remove')}\n                </span>\n            </div>\n        );\n    }\n}\n\nFilterBadge.propTypes = {\n    data: PropTypes.object.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onRemove: PropTypes.func.isRequired,\n};\n\nFilterBadge.defaultProps = {\n    onClick: Function.prototype,\n    onRemove: Function.prototype,\n};\n\nexport default FilterBadge;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { createSelector } from 'reselect';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport { sGetDimensions } from '../../reducers/dimensions';\nimport { sGetItemFiltersRoot } from '../../reducers/itemFilters';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { getTopOffset } from '../ControlBar/controlBarDimensions';\nimport { acRemoveItemFilter } from '../../actions/itemFilters';\nimport { acRemoveEditItemFilter } from '../../actions/editItemFilters';\nimport { acSetActiveModalDimension } from '../../actions/activeModalDimension';\n\nimport FilterBadge from './FilterBadge';\n\nconst styles = {\n    bar: {\n        position: 'sticky',\n        zIndex: 7,\n        padding: '8px 0',\n        display: 'flex',\n        justifyContent: 'center',\n        flexWrap: 'wrap',\n    },\n};\n\nexport class FilterBar extends Component {\n    onBadgeRemove = id => {\n        this.props.removeItemFilter(id);\n        this.props.removeEditItemFilter(id);\n    };\n\n    onBadgeClick = id => {\n        this.props.setActiveModalDimension({\n            id,\n            name: this.props.filters.find(item => item.id === id).name,\n        });\n    };\n\n    render() {\n        const { filters, userRows, classes } = this.props;\n        const top = getTopOffset(userRows) + 10;\n\n        return filters.length ? (\n            <div className={classes.bar} style={{ top }}>\n                {filters.map(filter => (\n                    <FilterBadge\n                        key={filter.id}\n                        data={filter}\n                        onClick={this.onBadgeClick}\n                        onRemove={this.onBadgeRemove}\n                    />\n                ))}\n            </div>\n        ) : null;\n    }\n}\n\nFilterBar.propTypes = {\n    filters: PropTypes.array.isRequired,\n    removeEditItemFilter: PropTypes.func.isRequired,\n    removeItemFilter: PropTypes.func.isRequired,\n    classes: PropTypes.object,\n    setActiveModalDimension: PropTypes.func,\n    userRows: PropTypes.number,\n};\n\nFilterBar.defaultProps = {\n    filters: [],\n    removeItemFIlter: Function.prototype,\n    removeEditItemFilter: Function.prototype,\n};\n\n// simplify the filters structure to:\n// [{ id: 'pe', name: 'Period', values: [{ id: 2019: name: '2019' }, {id: 'LAST_MONTH', name: 'Last month' }]}, ...]\nconst filtersSelector = createSelector(\n    [sGetItemFiltersRoot, sGetDimensions],\n    (filters, dimensions) =>\n        Object.keys(filters).reduce((arr, id) => {\n            arr.push({\n                id: id,\n                name: dimensions.find(dimension => dimension.id === id).name,\n                values: filters[id].map(value => ({\n                    id: value.id,\n                    name: value.displayName || value.name,\n                })),\n            });\n\n            return arr;\n        }, [])\n);\n\nconst mapStateToProps = state => ({\n    filters: filtersSelector(state),\n    userRows: sGetControlBarUserRows(state),\n});\n\nexport default connect(\n    mapStateToProps,\n    {\n        setActiveModalDimension: acSetActiveModalDimension,\n        removeItemFilter: acRemoveItemFilter,\n        removeEditItemFilter: acRemoveEditItemFilter,\n    }\n)(withStyles(styles)(FilterBar));\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport TitleBar from '../TitleBar/TitleBar';\nimport ItemGrid from '../ItemGrid/ItemGrid';\nimport FilterBar from '../FilterBar/FilterBar';\n\nexport const DashboardContent = props => (\n    <Fragment>\n        <TitleBar edit={props.editMode} />\n        <FilterBar />\n        <ItemGrid edit={props.editMode} />\n    </Fragment>\n);\n\nDashboardContent.propTypes = {\n    editMode: PropTypes.bool,\n};\n\nexport default DashboardContent;\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport isEmpty from 'lodash/isEmpty';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\n\nimport {\n    sGetAllDashboards,\n    sDashboardsIsFetching,\n} from '../../reducers/dashboards';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport DashboardsBar from '../ControlBar/DashboardsBar';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport DashboardContent from './DashboardContent';\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nexport const Content = ({ hasDashboardContent, dashboardsIsEmpty }) => {\n    const msg = dashboardsIsEmpty\n        ? i18n.t(\n              'No dashboards found. Use the + button to create a new dashboard.'\n          )\n        : i18n.t('Requested dashboard not found');\n\n    return hasDashboardContent ? (\n        <DashboardContent editMode={false} />\n    ) : (\n        <NoContentMessage text={msg} />\n    );\n};\n\nContent.propTypes = {\n    dashboardsIsEmpty: PropTypes.bool,\n    hasDashboardContent: PropTypes.bool,\n};\n\nexport const ViewDashboard = ({ id, dashboardsIsEmpty, dashboardsLoaded }) => {\n    const hasDashboardContent = id && !dashboardsIsEmpty;\n    const contentNotReady = !dashboardsLoaded || id === null;\n\n    return (\n        <Fragment>\n            <DashboardsBar />\n            <DashboardVerticalOffset />\n            <div className=\"dashboard-wrapper\">\n                {contentNotReady ? null : (\n                    <Content\n                        hasDashboardContent={hasDashboardContent}\n                        dashboardsIsEmpty={dashboardsIsEmpty}\n                    />\n                )}\n            </div>\n        </Fragment>\n    );\n};\n\nViewDashboard.propTypes = {\n    dashboardsIsEmpty: PropTypes.bool,\n    dashboardsLoaded: PropTypes.bool,\n    id: PropTypes.string,\n};\n\nconst mapStateToProps = state => {\n    const dashboards = sGetAllDashboards(state);\n\n    return {\n        id: sGetSelectedId(state),\n        dashboardsIsEmpty: isEmpty(dashboards),\n        dashboardsLoaded: !sDashboardsIsFetching(state),\n    };\n};\n\nexport default connect(mapStateToProps)(ViewDashboard);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport { Button } from '@dhis2/ui-core';\n\nexport const ConfirmDeleteDialog = ({\n    dashboardName,\n    onDeleteConfirmed,\n    onContinueEditing,\n    open,\n}) => {\n    const actions = [\n        <Button key=\"cancel\" secondary onClick={onContinueEditing}>\n            {i18n.t('Cancel')}\n        </Button>,\n        <Button key=\"delete\" destructive onClick={onDeleteConfirmed}>\n            {i18n.t('Delete')}\n        </Button>,\n    ];\n\n    return (\n        <Dialog open={open} onClose={onContinueEditing}>\n            <DialogTitle style={{ fontSize: '1.25rem', fontWeight: '450' }}>\n                {i18n.t('Delete dashboard')}\n            </DialogTitle>\n            <DialogContent>\n                <DialogContentText style={{ fontSize: '0.875rem' }}>\n                    {i18n.t(\n                        'Deleting dashboard \"{{ dashboardName }}\" will remove it for all users. This action cannot be undone. Are you sure you want to permanently delete this dashboard?',\n                        { dashboardName }\n                    )}\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>{actions}</DialogActions>\n        </Dialog>\n    );\n};\n\nConfirmDeleteDialog.propTypes = {\n    dashboardName: PropTypes.string,\n    open: PropTypes.bool,\n    onContinueEditing: PropTypes.func,\n    onDeleteConfirmed: PropTypes.func,\n};\n\nexport default ConfirmDeleteDialog;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport ControlBar from './ControlBar';\nimport TranslationDialog from '@dhis2/d2-ui-translation-dialog';\nimport { Button } from '@dhis2/ui-core';\n\nimport ConfirmDeleteDialog from './ConfirmDeleteDialog';\nimport {\n    tSaveDashboard,\n    acClearEditDashboard,\n} from '../../actions/editDashboard';\nimport {\n    tDeleteDashboard,\n    acSetDashboardDisplayName,\n} from '../../actions/dashboards';\nimport {\n    sGetEditDashboardRoot,\n    sGetIsNewDashboard,\n} from '../../reducers/editDashboard';\nimport {\n    CONTROL_BAR_ROW_HEIGHT,\n    MIN_ROW_COUNT,\n    getControlBarHeight,\n} from './controlBarDimensions';\nimport { apiFetchDashboard } from '../../api/dashboards';\n\nimport classes from './styles/DashboardsBar.module.css';\n\nconst buttonBarStyle = {\n    height: CONTROL_BAR_ROW_HEIGHT,\n    paddingTop: '15px',\n    marginLeft: '15px',\n    marginRight: '15px',\n};\n\nexport class EditBar extends Component {\n    state = {\n        translationDialogIsOpen: false,\n        dashboardModel: undefined,\n        confirmDeleteDialogOpen: false,\n        redirectUrl: undefined,\n    };\n\n    onConfirmDelete = () => {\n        this.setState({ confirmDeleteDialogOpen: true });\n    };\n\n    onSave = () => {\n        this.props.onSave().then(newId => {\n            this.setState({ redirectUrl: `/${newId}` });\n        });\n    };\n\n    onDiscard = () => {\n        this.props.onDiscardChanges();\n        const redirectUrl = this.props.dashboardId\n            ? `/${this.props.dashboardId}`\n            : '/';\n        this.setState({ redirectUrl });\n    };\n\n    onContinueEditing = () => {\n        this.setState({ confirmDeleteDialogOpen: false });\n    };\n\n    onDeleteConfirmed = () => {\n        this.setState({ confirmDeleteDialogOpen: false });\n        this.props.onDelete(this.props.dashboardId).then(() => {\n            this.setState({ redirectUrl: '/' });\n        });\n    };\n\n    onTranslationsSaved = async translations => {\n        if (translations && translations.length) {\n            const dbLocale = await this.context.d2.currentUser.userSettings.get(\n                'keyDbLocale'\n            );\n\n            const translation = translations.find(\n                t => t.locale === dbLocale && t.property === 'NAME'\n            );\n\n            if (translation && translation.value) {\n                this.props.onTranslate(\n                    this.props.dashboardId,\n                    translation.value\n                );\n            }\n        }\n    };\n\n    fetchDashboardModel = () => {\n        if (this.props.dashboardId && !this.state.dashboardModel) {\n            apiFetchDashboard(this.props.dashboardId).then(dashboardModel =>\n                this.setState({ dashboardModel })\n            );\n        }\n    };\n\n    componentDidMount() {\n        this.fetchDashboardModel();\n    }\n\n    componentDidUpdate() {\n        this.fetchDashboardModel();\n    }\n\n    toggleTranslationDialog = () => {\n        this.setState({\n            translationDialogIsOpen: !this.state.translationDialogIsOpen,\n        });\n    };\n\n    confirmDeleteDialog = () =>\n        this.props.deleteAccess && this.props.dashboardId ? (\n            <ConfirmDeleteDialog\n                dashboardName={this.props.dashboardName}\n                onDeleteConfirmed={this.onDeleteConfirmed}\n                onContinueEditing={this.onContinueEditing}\n                open={this.state.confirmDeleteDialogOpen}\n            />\n        ) : null;\n\n    translationDialog = () =>\n        this.state.dashboardModel && this.state.dashboardModel.id ? (\n            <TranslationDialog\n                className=\"translation-dialog\"\n                d2={this.context.d2}\n                open={this.state.translationDialogIsOpen}\n                onRequestClose={this.toggleTranslationDialog}\n                objectToTranslate={this.state.dashboardModel}\n                fieldsToTranslate={['name', 'description']}\n                // TODO handle messages in snackbar\n                onTranslationSaved={this.onTranslationsSaved}\n                onTranslationError={err =>\n                    console.log('translation update error', err)\n                }\n            />\n        ) : null;\n\n    render() {\n        if (this.state.redirectUrl) {\n            return <Redirect to={this.state.redirectUrl} />;\n        }\n\n        const { dashboardId, deleteAccess, updateAccess } = this.props;\n        const controlBarHeight = getControlBarHeight(MIN_ROW_COUNT);\n\n        const discardBtnText = updateAccess\n            ? i18n.t('Exit without saving')\n            : i18n.t('Go to dashboards');\n\n        return (\n            <Fragment>\n                <ControlBar height={controlBarHeight} editMode={true}>\n                    <div style={buttonBarStyle}>\n                        {updateAccess ? (\n                            <div className={classes.leftControls}>\n                                <span style={{ marginRight: '15px' }}>\n                                    <Button primary onClick={this.onSave}>\n                                        {i18n.t('Save changes')}\n                                    </Button>\n                                </span>\n\n                                {dashboardId ? (\n                                    <span style={{ marginRight: '15px' }}>\n                                        <Button\n                                            onClick={\n                                                this.toggleTranslationDialog\n                                            }\n                                        >\n                                            {i18n.t('Translate')}\n                                        </Button>\n                                    </span>\n                                ) : null}\n                                {dashboardId && deleteAccess ? (\n                                    <Button onClick={this.onConfirmDelete}>\n                                        {i18n.t('Delete')}\n                                    </Button>\n                                ) : null}\n                            </div>\n                        ) : null}\n\n                        <div className={classes.rightControls}>\n                            <Button secondary onClick={this.onDiscard}>\n                                {discardBtnText}\n                            </Button>\n                        </div>\n                    </div>\n                </ControlBar>\n                {this.translationDialog()}\n                {this.confirmDeleteDialog()}\n            </Fragment>\n        );\n    }\n}\n\nEditBar.propTypes = {\n    dashboardId: PropTypes.string,\n    dashboardName: PropTypes.string,\n    deleteAccess: PropTypes.bool,\n    updateAccess: PropTypes.bool,\n    onDelete: PropTypes.func,\n    onDiscardChanges: PropTypes.func,\n    onSave: PropTypes.func,\n    onTranslate: PropTypes.func,\n};\n\nEditBar.contextTypes = {\n    d2: PropTypes.object,\n};\n\nconst mapStateToProps = state => {\n    const dashboard = sGetEditDashboardRoot(state);\n\n    let deleteAccess;\n    let updateAccess;\n    if (sGetIsNewDashboard(state)) {\n        deleteAccess = true;\n        updateAccess = true;\n    } else {\n        updateAccess = dashboard.access ? dashboard.access.update : false;\n        deleteAccess = dashboard.access ? dashboard.access.delete : false;\n    }\n\n    return {\n        dashboardId: dashboard.id,\n        dashboardName: dashboard.name,\n        deleteAccess,\n        updateAccess,\n    };\n};\n\nconst mapDispatchToProps = dispatch => ({\n    onSave: () => dispatch(tSaveDashboard()).then(id => id),\n    onDelete: id => dispatch(tDeleteDashboard(id)),\n    onDiscardChanges: () => dispatch(acClearEditDashboard()),\n    onTranslate: (id, value) => dispatch(acSetDashboardDisplayName(id, value)),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(EditBar);\n","import React, { Fragment, Component } from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\n\nimport { acSetEditDashboard } from '../../actions/editDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n    sDashboardsIsFetching,\n} from '../../reducers/dashboards';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport DashboardContent from './DashboardContent';\nimport EditBar from '../ControlBar/EditBar';\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nexport const Content = ({ updateAccess }) => {\n    return updateAccess ? (\n        <DashboardContent editMode={true} />\n    ) : (\n        <NoContentMessage text={i18n.t('No access')} />\n    );\n};\n\nContent.propTypes = {\n    updateAccess: PropTypes.bool,\n};\nexport class EditDashboard extends Component {\n    state = {\n        initialized: false,\n    };\n\n    initEditDashboard = () => {\n        if (this.props.dashboard) {\n            this.setState({ initialized: true });\n            this.props.setEditDashboard(this.props.dashboard, this.props.items);\n        }\n    };\n\n    componentDidMount() {\n        this.initEditDashboard();\n    }\n\n    componentDidUpdate() {\n        if (!this.state.initialized) {\n            this.initEditDashboard();\n        }\n    }\n\n    getDashboardContent = () => {\n        const contentNotReady =\n            !this.props.dashboardsLoaded || this.props.id === null;\n\n        return (\n            <div className=\"dashboard-wrapper\">\n                {contentNotReady ? null : (\n                    <Content updateAccess={this.props.updateAccess} />\n                )}\n            </div>\n        );\n    };\n\n    render() {\n        return (\n            <Fragment>\n                <EditBar />\n                <DashboardVerticalOffset editMode={true} />\n                {this.getDashboardContent()}\n            </Fragment>\n        );\n    }\n}\n\nEditDashboard.propTypes = {\n    dashboard: PropTypes.object,\n    dashboardsLoaded: PropTypes.bool,\n    id: PropTypes.string,\n    items: PropTypes.array,\n    setEditDashboard: PropTypes.func,\n    updateAccess: PropTypes.bool,\n};\n\nconst mapStateToProps = state => {\n    const id = sGetSelectedId(state);\n    const dashboard = id ? sGetDashboardById(state, id) : null;\n\n    const updateAccess =\n        dashboard && dashboard.access ? dashboard.access.update : false;\n\n    return {\n        dashboard,\n        id,\n        updateAccess,\n        items: sGetDashboardItems(state),\n        dashboardsLoaded: !sDashboardsIsFetching(state),\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        setEditDashboard: acSetEditDashboard,\n    }\n)(EditDashboard);\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { acSetEditNewDashboard } from '../../actions/editDashboard';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport EditBar from '../ControlBar/EditBar';\nimport DashboardContent from './DashboardContent';\n\nclass NewDashboard extends Component {\n    componentDidMount() {\n        this.props.setNewDashboard();\n    }\n\n    render() {\n        return (\n            <Fragment>\n                <EditBar />\n                <DashboardVerticalOffset editMode={true} />\n                <div className=\"dashboard-wrapper\">\n                    <DashboardContent editMode={true} />\n                </div>\n            </Fragment>\n        );\n    }\n}\n\nNewDashboard.propTypes = {\n    setNewDashboard: PropTypes.func,\n};\n\nexport default connect(\n    null,\n    {\n        setNewDashboard: acSetEditNewDashboard,\n    }\n)(NewDashboard);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { tSelectDashboard } from '../../actions/dashboards';\nimport { sDashboardsIsFetching } from '../../reducers/dashboards';\nimport { EDIT, NEW } from './dashboardModes';\nimport ViewDashboard from './ViewDashboard';\nimport EditDashboard from './EditDashboard';\nimport NewDashboard from './NewDashboard';\n\nclass Dashboard extends Component {\n    setDashboard = () => {\n        if (this.props.dashboardsLoaded) {\n            const id = this.props.match.params.dashboardId || null;\n\n            this.props.selectDashboard(id);\n\n            this.scrollToTop();\n        }\n    };\n\n    scrollToTop = () => {\n        window.scrollTo(0, 0);\n    };\n\n    componentDidMount() {\n        this.setDashboard();\n    }\n\n    componentDidUpdate() {\n        this.setDashboard();\n    }\n\n    render() {\n        switch (this.props.mode) {\n            case EDIT:\n                return <EditDashboard />;\n            case NEW:\n                return <NewDashboard />;\n            default:\n                return <ViewDashboard />;\n        }\n    }\n}\n\nDashboard.propTypes = {\n    dashboardsLoaded: PropTypes.bool,\n    match: PropTypes.object,\n    mode: PropTypes.string,\n    selectDashboard: PropTypes.func,\n};\n\nconst mapStateToProps = state => {\n    return { dashboardsLoaded: !sDashboardsIsFetching(state) };\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        selectDashboard: tSelectDashboard,\n    }\n)(Dashboard);\n","export const EDIT = 'edit';\nexport const NEW = 'new';\nexport const VIEW = 'view';\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { HeaderBar } from '@dhis2/ui-widgets';\n\nimport { EDIT, VIEW, NEW } from './Dashboard/dashboardModes';\nimport { acReceivedUser } from '../actions/user';\nimport { tFetchDashboards } from '../actions/dashboards';\nimport { tSetControlBarRows } from '../actions/controlBar';\nimport { tSetDimensions } from '../actions/dimensions';\nimport Dashboard from './Dashboard/Dashboard';\nimport SnackbarMessage from './SnackbarMessage/SnackbarMessage';\n\nimport 'typeface-roboto';\nimport './App.css';\n\nexport class App extends Component {\n    componentDidMount() {\n        this.props.setCurrentUser(this.props.d2.currentUser);\n        this.props.fetchDashboards();\n        this.props.setControlBarRows();\n        this.props.setDimensions(this.props.d2);\n    }\n\n    getChildContext() {\n        return { baseUrl: this.props.baseUrl, i18n, d2: this.props.d2 };\n    }\n\n    render() {\n        return (\n            <div className=\"app-wrapper\">\n                <div className=\"dashboard-header-bar\">\n                    <HeaderBar appName={i18n.t('Dashboard')} />\n                </div>\n                <Router>\n                    <Switch>\n                        <Route\n                            exact\n                            path=\"/\"\n                            render={props => (\n                                <Dashboard {...props} mode={VIEW} />\n                            )}\n                        />\n                        <Route\n                            exact\n                            path=\"/new\"\n                            render={props => (\n                                <Dashboard {...props} mode={NEW} />\n                            )}\n                        />\n                        <Route\n                            exact\n                            path=\"/:dashboardId\"\n                            render={props => (\n                                <Dashboard {...props} mode={VIEW} />\n                            )}\n                        />\n                        <Route\n                            exact\n                            path=\"/:dashboardId/edit\"\n                            render={props => (\n                                <Dashboard {...props} mode={EDIT} />\n                            )}\n                        />\n                    </Switch>\n                </Router>\n                <SnackbarMessage />\n            </div>\n        );\n    }\n}\n\nApp.propTypes = {\n    fetchDashboards: PropTypes.func.isRequired,\n    setControlBarRows: PropTypes.func.isRequired,\n    setCurrentUser: PropTypes.func.isRequired,\n    setDimensions: PropTypes.func.isRequired,\n    baseUrl: PropTypes.string,\n    d2: PropTypes.object,\n};\n\nApp.childContextTypes = {\n    baseUrl: PropTypes.string,\n    i18n: PropTypes.object,\n    d2: PropTypes.object,\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setCurrentUser: currentUser => dispatch(acReceivedUser(currentUser)),\n        fetchDashboards: () => dispatch(tFetchDashboards()),\n        setControlBarRows: () => dispatch(tSetControlBarRows()),\n        setDimensions: d2 => dispatch(tSetDimensions(d2)),\n    };\n};\n\nexport default connect(\n    null,\n    mapDispatchToProps\n)(App);\n","import { RECEIVED_USER } from '../reducers/user';\n\nexport const acReceivedUser = value => ({\n    type: RECEIVED_USER,\n    value,\n});\n","//------------------------------------------------------------------------------\n// <auto-generated>\n// This code was generated by d2-i18n-generate.\n//\n// Changes to this file may cause incorrect behavior and will be lost if\n// the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\nimport i18n from '@dhis2/d2-i18n';\nimport moment from 'moment';\nimport 'moment/locale/ar';\nimport 'moment/locale/es';\nimport 'moment/locale/fr';\nimport 'moment/locale/lo';\nimport 'moment/locale/pt';\nimport 'moment/locale/ru';\nimport 'moment/locale/sv';\nimport 'moment/locale/tg';\nimport 'moment/locale/uk';\nimport 'moment/locale/ur';\nimport 'moment/locale/vi';\nimport 'moment/locale/zh-cn';\n\nimport arTranslations from './ar/translations.json';\nimport daTranslations from './da/translations.json';\nimport enTranslations from './en/translations.json';\nimport esTranslations from './es/translations.json';\nimport frTranslations from './fr/translations.json';\nimport idTranslations from './id/translations.json';\nimport kmTranslations from './km/translations.json';\nimport loTranslations from './lo/translations.json';\nimport myTranslations from './my/translations.json';\nimport prsTranslations from './prs/translations.json';\nimport psTranslations from './ps/translations.json';\nimport ptTranslations from './pt/translations.json';\nimport pt_BRTranslations from './pt_BR/translations.json';\nimport ruTranslations from './ru/translations.json';\nimport svTranslations from './sv/translations.json';\nimport tetTranslations from './tet/translations.json';\nimport tgTranslations from './tg/translations.json';\nimport ukTranslations from './uk/translations.json';\nimport urTranslations from './ur/translations.json';\nimport viTranslations from './vi/translations.json';\nimport zhTranslations from './zh/translations.json';\nimport zh_CNTranslations from './zh_CN/translations.json';\n\nconst namespace = 'dashboards-app';\nmoment.locale('en');\n\ni18n.addResources('ar', namespace, arTranslations);\ni18n.addResources('da', namespace, daTranslations);\ni18n.addResources('en', namespace, enTranslations);\ni18n.addResources('es', namespace, esTranslations);\ni18n.addResources('fr', namespace, frTranslations);\ni18n.addResources('id', namespace, idTranslations);\ni18n.addResources('km', namespace, kmTranslations);\ni18n.addResources('lo', namespace, loTranslations);\ni18n.addResources('my', namespace, myTranslations);\ni18n.addResources('prs', namespace, prsTranslations);\ni18n.addResources('ps', namespace, psTranslations);\ni18n.addResources('pt', namespace, ptTranslations);\ni18n.addResources('pt_BR', namespace, pt_BRTranslations);\ni18n.addResources('ru', namespace, ruTranslations);\ni18n.addResources('sv', namespace, svTranslations);\ni18n.addResources('tet', namespace, tetTranslations);\ni18n.addResources('tg', namespace, tgTranslations);\ni18n.addResources('uk', namespace, ukTranslations);\ni18n.addResources('ur', namespace, urTranslations);\ni18n.addResources('vi', namespace, viTranslations);\ni18n.addResources('zh', namespace, zhTranslations);\ni18n.addResources('zh_CN', namespace, zh_CNTranslations);\n\ni18n.setDefaultNamespace(namespace);\ni18n.changeLanguage('en');\n\nexport default i18n;\n","/** @module reducers/selected */\nimport { validateReducer } from '../modules/util';\n\nexport const SET_STYLE = 'SET_STYLE';\n\nexport const DEFAULT_STATE_STYLE = 'LIST';\n\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\nconst style = (state = DEFAULT_STATE_STYLE, action) => {\n    switch (action.type) {\n        case SET_STYLE:\n            return validateReducer(action.value, DEFAULT_STATE_STYLE);\n        default:\n            return state;\n    }\n};\n\nexport default style;\n\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\nexport const sGetStyleRoot = state => state.style;\n","import { combineReducers } from 'redux';\nimport arraySort from 'd2-utilizr/lib/arraySort';\n\nimport dashboards, { sGetDashboardsRoot } from './dashboards';\nimport selected from './selected';\nimport dashboardsFilter, {\n    ownerData,\n    sGetFilterName,\n    sGetFilterOrder,\n    sGetFilterOwner,\n} from './dashboardsFilter';\nimport controlBar from './controlBar';\nimport visualizations from './visualizations';\nimport editDashboard from './editDashboard';\nimport messages from './messages';\nimport user from './user';\nimport snackbar from './snackbar';\nimport itemFilters from './itemFilters';\nimport editItemFilters from './editItemFilters';\nimport style from './style';\nimport dimensions from './dimensions';\nimport settings from './settings';\nimport activeModalDimension from './activeModalDimension';\n\nconst USER = 'system';\n\n// Reducers\n\nexport default combineReducers({\n    dashboards,\n    selected,\n    dashboardsFilter,\n    controlBar,\n    visualizations,\n    messages,\n    user,\n    editDashboard,\n    itemFilters,\n    editItemFilters,\n    style,\n    snackbar,\n    dimensions,\n    settings,\n    activeModalDimension,\n});\n\n// Map constants to data\nconst mapConstToData = {\n    NAME: 'name',\n    ITEMS: 'numberOfItems',\n    CREATED: 'created',\n    OWNER: 'owner',\n};\n\n// Selectors\n\n// Filter dashboards by name\nexport const sFilterDashboardsByName = (dashboards, filter) =>\n    dashboards.filter(d =>\n        d.displayName.toLowerCase().includes(filter.toLowerCase())\n    );\n\n// Filter dashboards by owner, TODO FIXME\nexport const sFilterDashboardsByOwner = (dashboards, filter) => {\n    const ME = ownerData[1]; // TODO\n    const OTHERS = ownerData[2]; // TODO\n\n    switch (filter) {\n        case ME:\n            return dashboards.filter(d => d.owner === USER);\n        case OTHERS:\n            return dashboards.filter(d => d.owner !== USER);\n        default:\n            return dashboards;\n    }\n};\n\n// Filter dashboards by order\nexport const sFilterDashboardsByOrder = (dashboards, filter) => {\n    const filterValues = filter.split(':');\n\n    const key = filterValues[0];\n    const direction = filterValues[1];\n\n    return arraySort(dashboards, direction, mapConstToData[key]);\n};\n\n// Selectors dependency level 2\n\n// Get filtered dashboards\nexport const sGetFilteredDashboards = state => {\n    const dashboards = sGetDashboardsRoot(state);\n\n    const nameFilter = sGetFilterName(state);\n    const ownerFilter = sGetFilterOwner(state);\n    const orderFilter = sGetFilterOrder(state);\n\n    return sFilterDashboardsByOrder(\n        sFilterDashboardsByName(\n            sFilterDashboardsByOwner(dashboards, ownerFilter),\n            nameFilter\n        ),\n        orderFilter\n    );\n};\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport reducer from './reducers';\n\nconst configureStore = () => {\n    const middleware = [thunk];\n\n    // Enable Redux devtools if extension is installed instead of redux-logger\n    const composeEnhancers =\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n    if (\n        !window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ &&\n        process.env.NODE_ENV !== 'production'\n    ) {\n        middleware.push(createLogger());\n    }\n\n    return createStore(\n        reducer,\n        composeEnhancers(applyMiddleware(...middleware))\n    );\n};\n\nexport default configureStore;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport { init as d2Init, config, getManifest, getUserSettings } from 'd2';\nimport dhis2theme from '@dhis2/d2-ui-core/theme/mui3.theme';\n\nimport { Provider as RuntimeProvider } from '@dhis2/app-runtime';\nimport { CssReset } from '@dhis2/ui-core';\n\nimport App from './components/App';\nimport './index.css';\nimport i18n from './locales';\nimport configureStore from './configureStore';\n\nconst muiTheme = () => createMuiTheme(dhis2theme);\n\nconst configI18n = userSettings => {\n    const uiLocale = userSettings.keyUiLocale;\n\n    if (uiLocale && uiLocale !== 'en') {\n        config.i18n.sources.add(`./i18n/i18n_module_${uiLocale}.properties`);\n    }\n\n    config.i18n.sources.add('./i18n/i18n_module_en.properties');\n    i18n.changeLanguage(uiLocale);\n};\n\nconst init = async () => {\n    const manifest = await getManifest('./manifest.webapp');\n\n    // log app info\n    console.info(\n        `Dashboards app, v${manifest.version}, ${\n            manifest.manifest_generated_at\n        }`\n    );\n\n    const isProd = process.env.NODE_ENV === 'production';\n\n    if (\n        !isProd &&\n        (!process.env.REACT_APP_DHIS2_BASE_URL ||\n            !process.env.REACT_APP_DHIS2_AUTHORIZATION)\n    ) {\n        throw new Error(\n            'Missing env variables REACT_APP_DHIS2_BASE_URL and REACT_APP_DHIS2_AUTHORIZATION'\n        );\n    }\n\n    // api config\n    const baseUrl = isProd\n        ? manifest.activities.dhis.href\n        : process.env.REACT_APP_DHIS2_BASE_URL;\n    const authorization = process.env.REACT_APP_DHIS2_AUTHORIZATION;\n\n    config.baseUrl = `${baseUrl}/api/${manifest.dhis2.apiVersion}`;\n    config.headers = isProd ? null : { Authorization: authorization };\n    config.schemas = [\n        'chart',\n        'map',\n        'report',\n        'reportTable',\n        'eventChart',\n        'eventReport',\n        'dashboard',\n        'organisationUnit',\n        'userGroup',\n    ];\n\n    getUserSettings()\n        .then(configI18n)\n        .then(() => d2Init(config))\n        .then(initializedD2 => {\n            ReactDOM.render(\n                <RuntimeProvider\n                    config={{\n                        baseUrl: baseUrl,\n                        apiVersion: manifest.dhis2.apiVersion,\n                    }}\n                >\n                    <CssReset />\n                    <Provider store={configureStore()}>\n                        <MuiThemeProvider theme={muiTheme()}>\n                            <App baseUrl={baseUrl} d2={initializedD2} />\n                        </MuiThemeProvider>\n                    </Provider>\n                </RuntimeProvider>,\n                document.getElementById('root')\n            );\n        });\n};\n\ninit();\n","import isObject from 'lodash/isObject';\n\n// validation\nexport function orNull(param) {\n    return param === undefined ? null : param;\n}\n\nexport function orArray(param) {\n    return Array.isArray(param) ? param : [];\n}\n\nexport function orObject(param) {\n    return isObject(param) ? param : {};\n}\n\n// array\nexport function arrayGetById(array, id) {\n    return array.find(item => item.id === id);\n}\n\n// object\nexport function arrayToIdMap(array) {\n    return array.reduce((obj, item) => {\n        obj[item.id] = item;\n        return obj;\n    }, {});\n}\n\n// date\nexport function getDate() {\n    const y = Math.floor(Math.random() * 3) + 2015;\n    const M = Math.floor(Math.random() * 12) + 1;\n    const d = Math.floor(Math.random() * 28) + 1;\n    // const h = Math.floor(Math.random() * 23) + 1;\n    // const m = Math.floor(Math.random() * 59) + 1;\n    // const s = Math.floor(Math.random() * 59) + 1;\n\n    return new Date(`${y}-${M}-${d}`)\n        .toJSON()\n        .replace('T', ' ')\n        .substr(0, 10);\n}\n\nexport const formatDate = (value, uiLocale) => {\n    if (typeof global.Intl !== 'undefined' && Intl.DateTimeFormat) {\n        const locale = uiLocale || 'en';\n        return new Intl.DateTimeFormat(locale, {\n            year: 'numeric',\n            month: 'short',\n            day: 'numeric',\n        }).format(new Date(value));\n    }\n\n    return value.substr(0, 19).replace('T', ' ');\n};\n\n/**\n * Sorts an array of objects based on provided date property\n *\n * @param {Array} items Array of objects\n * @param {String} dateProp Name of the date property to be used for sorting\n * @param {Boolean} ascending Whether to sort ascending or descending\n */\nexport const sortByDate = (items, dateProp, ascending = true) => {\n    const values = Object.values(items);\n\n    values.sort((a, b) => {\n        const aDate = new Date(a[dateProp]);\n        const bDate = new Date(b[dateProp]);\n\n        return ascending ? aDate - bDate : bDate - aDate;\n    });\n\n    return values;\n};\n\n// reducer validator\nexport const validateReducer = (value, defaultValue) =>\n    value === undefined || value === null ? defaultValue : value;\n\nexport const getBaseUrl = d2 => {\n    const api = d2.Api.getApi();\n    const idx = api.baseUrl.indexOf('/api');\n    return idx > -1 ? api.baseUrl.slice(0, idx) : api.baseUrl;\n};\n\nexport const getWithoutId = object => ({\n    ...object,\n    id: undefined,\n});\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"leftControls\":\"DashboardsBar_leftControls__2kr14\",\"rightControls\":\"DashboardsBar_rightControls__2l1lT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuItem\":\"ContentMenuItem_menuItem__2DIcB\",\"launchLink\":\"ContentMenuItem_launchLink__MRANR\",\"label\":\"ContentMenuItem_label__2pIfq\",\"buttonInsert\":\"ContentMenuItem_buttonInsert__1GlZy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ControlBar_root__3LaTt\",\"content\":\"ControlBar_content__1r98-\",\"draghandle\":\"ControlBar_draghandle__1VWa0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ClearButton_button__2yjcV\",\"icon\":\"ClearButton_icon__1fqj8\"};","import isObject from 'lodash/isObject';\nimport { VIS_TYPE_COLUMN, VIS_TYPE_PIVOT_TABLE } from '@dhis2/analytics';\nimport { apiFetchFavorite, getMapFields } from '../../../api/metadata';\nimport {\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_REPORT,\n    EVENT_CHART,\n    itemTypeMap,\n} from '../../../modules/itemTypes';\nimport { getBaseUrl, getWithoutId } from '../../../modules/util';\nimport { getGridItemDomId } from '../../ItemGrid/gridUtil';\n\n//external plugins\nconst itemTypeToExternalPlugin = {\n    [MAP]: 'mapPlugin',\n    [EVENT_REPORT]: 'eventReportPlugin',\n    [EVENT_CHART]: 'eventChartPlugin',\n};\nconst hasIntegratedPlugin = type => [CHART, REPORT_TABLE].includes(type);\n\nconst getPlugin = type => {\n    if (hasIntegratedPlugin(type)) {\n        return true;\n    }\n    const pluginName = itemTypeToExternalPlugin[type];\n\n    return global[pluginName];\n};\n\nexport const THEMATIC_LAYER = 'thematic';\n\nexport const pluginIsAvailable = (item = {}, visualization = {}) => {\n    const type = visualization.activeType || item.type;\n\n    return !!getPlugin(type);\n};\n\nexport const extractFavorite = item => {\n    if (!isObject(item)) {\n        return null;\n    }\n\n    switch (item.type) {\n        case REPORT_TABLE:\n            return item.reportTable;\n        case CHART:\n            return item.chart;\n        case MAP:\n            return item.map;\n        case EVENT_REPORT:\n            return item.eventReport;\n        case EVENT_CHART:\n            return item.eventChart;\n        default:\n            return (\n                item.reportTable ||\n                item.chart ||\n                item.map ||\n                item.eventReport ||\n                item.eventChart ||\n                {}\n            );\n    }\n};\n\nexport const extractMapView = map =>\n    map.mapViews && map.mapViews.find(mv => mv.layer.includes(THEMATIC_LAYER));\n\nexport const loadPlugin = (plugin, config, credentials) => {\n    if (!(plugin && plugin.load)) {\n        return;\n    }\n\n    plugin.url = credentials.baseUrl;\n    plugin.loadingIndicator = true;\n    plugin.dashboard = true;\n    if (credentials.auth) {\n        plugin.auth = credentials.auth;\n    }\n    plugin.load(config);\n};\n\nexport const getId = item => extractFavorite(item).id;\nexport const getName = item => extractFavorite(item).name;\nexport const getDescription = item => extractFavorite(item).description;\nexport const getLink = (item, d2) => {\n    const baseUrl = getBaseUrl(d2);\n    const appUrl = itemTypeMap[item.type].appUrl(getId(item));\n\n    return `${baseUrl}/${appUrl}`;\n};\n\nexport const load = async (\n    item,\n    visualization,\n    { credentials, activeType }\n) => {\n    const config = {\n        ...visualization,\n        el: getGridItemDomId(item.id),\n    };\n\n    const type = activeType || item.type;\n    const plugin = getPlugin(type);\n\n    loadPlugin(plugin, config, credentials);\n};\n\nexport const fetch = async item => {\n    const fetchedFavorite = await apiFetchFavorite(getId(item), item.type, {\n        fields: item.type === MAP ? getMapFields() : null,\n    });\n\n    return fetchedFavorite;\n};\n\nexport const resize = item => {\n    const plugin = getPlugin(item.type);\n\n    if (plugin && plugin.resize) {\n        plugin.resize(getGridItemDomId(item.id));\n    }\n};\n\nexport const unmount = (item, activeType) => {\n    const plugin = getPlugin(activeType);\n\n    if (plugin && plugin.unmount) {\n        plugin.unmount(getGridItemDomId(item.id));\n    }\n};\n\nexport const getVisualizationConfig = (\n    visualization,\n    originalType,\n    activeType\n) => {\n    if (originalType === MAP && originalType !== activeType) {\n        const extractedMapView = extractMapView(visualization);\n\n        if (extractedMapView === undefined) {\n            return null;\n        }\n\n        return getWithoutId({\n            ...visualization,\n            ...extractedMapView,\n            mapViews: undefined,\n            type: activeType === CHART ? VIS_TYPE_COLUMN : VIS_TYPE_PIVOT_TABLE,\n        });\n    } else if (originalType === REPORT_TABLE && activeType === CHART) {\n        return getWithoutId({ ...visualization, type: VIS_TYPE_COLUMN });\n    } else if (originalType === CHART && activeType === REPORT_TABLE) {\n        return getWithoutId({\n            ...visualization,\n            type: VIS_TYPE_PIVOT_TABLE,\n        });\n    }\n\n    return getWithoutId(visualization);\n};\n","import isFunction from 'd2-utilizr/lib/isFunction';\n\nimport { orObject } from '../../modules/util';\n\n// Dimensions for the react-grid-layout\n\nexport const GRID_COMPACT_TYPE = 'vertical'; // vertical | horizonal | null\nexport const GRID_ROW_HEIGHT = 10;\nconst GRID_COLUMN_WIDTH_PX = 20;\nconst GRID_LAYOUT = 'FLEXIBLE'; // FIXED | FLEXIBLE\nexport const MARGIN = [10, 10];\n\nexport const NEW_ITEM_SHAPE = { x: 0, y: 0, w: 20, h: 29 };\nexport const ITEM_MIN_HEIGHT = 4;\n\n// Dimensions for getShape\n\nconst NUMBER_OF_ITEM_COLS = 2;\nconst GRID_COLUMNS = 60;\n\nexport const getGridColumns = () => {\n    switch (GRID_LAYOUT) {\n        case 'FLEXIBLE':\n            return GRID_COLUMNS;\n        case 'FIXED':\n            return Math.floor((window.innerWidth - 20) / GRID_COLUMN_WIDTH_PX);\n        default:\n            return GRID_COLUMNS;\n    }\n};\n\n// isNonNegativeInteger\n\nconst isNonNegativeInteger = x => Number.isInteger(x) && x >= 0;\n\n// Does the item have all the shape properties?\n\nexport const hasShape = item =>\n    isNonNegativeInteger(item.x) &&\n    isNonNegativeInteger(item.y) &&\n    isNonNegativeInteger(item.w) &&\n    isNonNegativeInteger(item.h);\n\n// returns a rectangular grid block dimensioned with x, y, w, h in grid units.\n// based on a grid with 3 items across\nexport const getShape = i => {\n    if (!isNonNegativeInteger(i)) {\n        throw new Error('Invalid grid block number');\n    }\n\n    const col = i % NUMBER_OF_ITEM_COLS;\n    const row = Math.floor(i / NUMBER_OF_ITEM_COLS);\n    const itemWidth = Math.floor((GRID_COLUMNS - 1) / NUMBER_OF_ITEM_COLS);\n    const itemHeight = GRID_ROW_HEIGHT * 2;\n\n    return {\n        x: col * itemWidth,\n        y: row * itemHeight,\n        w: itemWidth,\n        h: itemHeight,\n    };\n};\n\n/**\n * Calculates the grid item's original height in pixels based\n * on the height in grid units. This calculation\n * is copied directly from react-grid-layout GridItem.js (calcPosition)\n *\n * @param {Object} item item containing shape (x, y, w, h)\n */\nconst getOriginalHeight = item => {\n    const originalHeight = Math.round(\n        GRID_ROW_HEIGHT * item.h + Math.max(0, item.h - 1) * MARGIN[1]\n    );\n\n    return { originalHeight };\n};\n\n/**\n * Returns an array of items containing the x, y, w, h dimensions\n * and the item's originalheight in pixels\n * @function\n * @param {Array} items\n * @returns {Array}\n */\n\nexport const withShape = items =>\n    items.map((item, index) => {\n        const itemWithShape = hasShape(item)\n            ? item\n            : Object.assign({}, item, getShape(index));\n\n        return Object.assign(\n            {},\n            itemWithShape,\n            getOriginalHeight(itemWithShape)\n        );\n    });\n\nexport const getGridItemDomId = id => `item-${id}`;\n\nexport function onItemResize(id) {\n    const el = orObject(document.querySelector(`#${getGridItemDomId(id)}`));\n    if (isFunction(el.setViewportSize))\n        setTimeout(\n            () => el.setViewportSize(el.clientWidth - 5, el.clientHeight - 5),\n            10\n        );\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"showMoreButton\":\"CategorizedMenuGroup_showMoreButton__3-0Wa\"};"],"sourceRoot":""}
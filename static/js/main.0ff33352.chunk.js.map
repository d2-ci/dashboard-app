{"version":3,"sources":["components/ItemSelector/styles/CategorizedMenuGroup.module.css","modules/itemTypes.js","components/Item/ListItem/Item.module.css","reducers/user.js","reducers/dashboards.js","reducers/selected.js","reducers/visualizations.js","api/metadata.js","api/index.js","api/dashboards.js","components/ItemGrid/gridUtil.js","reducers/messages.js","api/messages.js","reducers/snackbar.js","actions/snackbar.js","components/SnackbarMessage/SnackbarMessage.js","components/Item/VisualizationItem/plugin.js","actions/selected.js","api/localStorage.js","components/Item/MessagesItem/actions.js","reducers/editDashboard.js","reducers/editItemFilters.js","reducers/itemFilters.js","actions/itemFilters.js","actions/editItemFilters.js","api/editDashboard.js","actions/editDashboard.js","actions/dashboards.js","reducers/controlBar.js","api/controlBar.js","actions/controlBar.js","reducers/dimensions.js","reducers/settings.js","actions/dimensions.js","components/ControlBar/ShowMoreButton.js","components/ControlBar/controlBarDimensions.js","components/ControlBar/ControlBar.js","icons/Star.js","api/dataStatistics.js","components/ControlBar/DashboardItemChip.js","icons/AddCircle.js","icons/Clear.js","components/ControlBar/ClearButton.js","reducers/dashboardsFilter.js","components/ControlBar/Filter.js","components/ControlBar/DashboardsBar.js","actions/dashboardsFilter.js","components/Dashboard/DashboardVerticalOffset.js","components/ItemSelector/HeaderMenuItem.js","icons/Launch.js","components/ItemSelector/ContentMenuItem.js","components/ItemSelector/selectableItems.js","components/ItemSelector/CategorizedMenuGroup.js","components/ItemSelector/actions.js","components/ItemSelector/SinglesMenuGroup.js","components/ItemSelector/ItemSelector.js","components/TitleBar/EditTitleBar.js","components/ItemFilter/FilterDialog.js","reducers/activeModalDimension.js","actions/activeModalDimension.js","components/ItemFilter/FilterSelector.js","components/TitleBar/Info.js","components/TitleBar/ViewTitleBar.js","components/TitleBar/TitleBar.js","components/Item/VisualizationItem/DefaultPlugin.js","components/Item/ItemHeader.js","components/Item/VisualizationItem/ItemFooter.js","components/Item/ItemHeaderButton.js","components/Item/VisualizationItem/ItemHeaderButtons.js","modules/memoizeOne.js","components/Item/VisualizationItem/Item.js","widgets/Line.js","components/Item/MessagesItem/Item.js","components/Item/NotSupportedItem/Item.js","icons/Description.js","icons/Delete.js","components/Item/ListItem/Item.js","components/Item/ListItem/actions.js","components/Item/TextItem/Item.js","components/Item/AppItem/Item.js","components/Item/SpacerItem/Item.js","components/Item/Item.js","components/ItemGrid/DeleteItemButton.js","widgets/NoContentMessage.js","components/Item/ProgressiveLoadingContainer.js","components/ItemGrid/ItemGrid.js","components/FilterBar/FilterBadge.js","components/FilterBar/FilterBar.js","components/Dashboard/DashboardContent.js","components/Dashboard/ViewDashboard.js","components/ControlBar/ConfirmDeleteDialog.js","components/ControlBar/EditBar.js","components/Dashboard/EditDashboard.js","components/Dashboard/NewDashboard.js","components/Dashboard/Dashboard.js","components/Dashboard/dashboardModes.js","components/App.js","actions/user.js","locales/index.js","reducers/style.js","reducers/index.js","configureStore.js","index.js","components/ControlBar/styles/DashboardsBar.module.css","components/ItemSelector/styles/ContentMenuItem.module.css","modules/util.js","components/ControlBar/styles/ControlBar.module.css","components/ControlBar/styles/ClearButton.module.css"],"names":["module","exports","showMoreButton","VISUALIZATION","REPORT_TABLE","CHART","MAP","EVENT_REPORT","EVENT_CHART","APP","REPORTS","RESOURCES","USERS","MESSAGES","TEXT","SPACER","DOMAIN_TYPE_AGGREGATE","VISUALIZATION_TYPE_TABLE","VISUALIZATION_TYPE_CHART","VISUALIZATION_TYPE_MAP","spacerContent","emptyTextItemContent","isSpacerType","item","type","text","isTextType","isPluginType","itemTypeMap","getPlugin","pluginName","plugin","global","_itemTypeMap","Object","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","id","endPointName","propName","pluralTitle","i18n","t","domainType","visualizationType","appUrl","concat","appName","getEndPointName","getItemUrl","d2","url","launchUrl","getBaseUrl","getItemIcon","TableIcon","ChartIcon","MapIcon","ExtensionIcon","DescriptionIcon","PersonIcon","FontDownloadIcon","EmailIcon","CropFreeIcon","NotInterestedIcon","list","itemicon","link","deleteicon","deletebutton","DEFAULT_STATE_USER","username","uiLocale","isSuperuser","sGetUserUsername","state","user","DEFAULT_STATE_DASHBOARDS","byId","items","updateDashboardProp","_ref","dashboardId","prop","value","objectSpread","defineProperty","sGetDashboardsRoot","dashboards","sGetDashboardById","orObject","sDashboardsIsFetching","sGetAllDashboards","sGetDashboardItems","sGetStarredDashboards","values","filter","dashboard","starred","sGetUnstarredDashboards","sGetDashboardsSortedByStarred","toConsumableArray","arraySort","getCustomDashboards","data","arrayFrom","map","d","name","displayName","description","displayDescription","favorite","owner","created","split","join","substr","lastUpdated","access","numberOfItems","orArray","dashboardItems","length","reportTable","chart","combineReducers","arguments","undefined","action","validateReducer","isLoading","showDescription","sGetSelectedRoot","selected","sGetSelectedId","sGetSelectedIsLoading","sGetSelectedShowDescription","DEFAULT_STATE_VISUALIZATIONS","isEmpty","p","sGetVisualization","visualizations","sGetVisualizationsRoot","getIdNameFields","rename","getDimensionFields","_ref2","withItems","arrayClean","getAxesFields","_ref3","getFavoriteFields","_ref4","withDimensions","withOptions","getFavoritesFields","_ref5","apiFetchFavorite","_ref6","fields","getInstance","then","Api","getApi","get","onError","error","console","log","getDashboardItemsFields","withFavorite","getDashboardFields","apiFetchDashboard","models","catch","apiStarDashboard","isStarred","post","delete","apiDeleteDashboard","MARGIN","NEW_ITEM_SHAPE","x","y","w","h","isNonNegativeInteger","Number","isInteger","hasShape","withShape","index","itemWithShape","assign","i","Error","col","row","Math","floor","itemWidth","GRID_ROW_HEIGHT","getShape","originalHeight","round","max","getOriginalHeight","getGridItemDomId","onItemResize","el","document","querySelector","isFunction","setViewportSize","setTimeout","clientWidth","clientHeight","sGetMessagesRoot","messages","getMessages","DEFAULT_STATE_SNACKBAR","message","duration","open","acCloseSnackbar","loadingDashboardMsg","SnackbarMessageContent","react_default","a","createElement","style","fontWeight","connect","_sGetSnackbar","snackbar","sGetSnackbar","snackbarOpen","snackbarMessage","snackbarDuration","onCloseSnackbar","props","Snackbar_default","zIndex","SnackbarMessage_SnackbarMessageContent","autoHideDuration","onClose","pluginIsAvailable","activeType","extractFavorite","isObject","eventReport","eventChart","loadPlugin","config","credentials","load","baseUrl","loadingIndicator","auth","getId","getName","getLink","asyncToGenerator","regenerator_default","mark","_callee","visualization","wrap","_context","prev","next","stop","_x","_x2","_x3","apply","this","fetch","_callee2","fetchedFavorite","_context2","sent","abrupt","_x4","resize","unmount","getVisualizationConfig","originalType","extractedMapView","mapViews","find","mv","layer","includes","getWithoutId","acSetSelectedId","acSetSelectedIsLoading","acReceivedVisualization","tLoadDashboard","dispatch","dash","acAppendDashboards","Promise","resolve","t0","tSetSelectedDashboardById","getState","snackbarTimeout","onSuccess","dashboardName","customDashboard","acSetDashboardItems","localStorage","setItem","forEach","messageConversations","clearTimeout","DEFAULT_STATE_EDIT_DASHBOARD","NEW_DASHBOARD_STATE","sGetEditDashboardRoot","editDashboard","sGetIsEditing","sGetEditDashboardItems","DEFAULT_STATE_EDIT_ITEM_FILTERS","sGetEditItemFiltersRoot","editItemFilters","DEFAULT_STATE_ITEM_FILTERS","sGetItemFiltersRoot","itemFilters","sGetFiltersKeys","keys","acRemoveItemFilter","acRemoveEditItemFilter","saveDashboard","width","height","save","msg","response","uid","updateDashboard","postDashboard","create","acAddDashboardItem","itemPropName","generateUid","content","acUpdateDashboardItem","acRemoveDashboardItem","arrayToIdMap","acSetDashboardStarred","tFetchDashboards","collection","paging","toArray","userRows","sGetControlBarUserRows","controlBar","sGetControlBarRoot","KEY","hasNamespace","currentUser","dataStore","has","getNamespace","apiGetControlBarRows","_callee3","namespace","_context3","t1","t2","key","apiPostControlBarRows","_callee4","rows","_context4","set","_x5","acSetControlBarUserRows","DEFAULT_DIMENSIONS","getDimensionById","DIMENSION_ID_PERIOD","DIMENSION_ID_ORGUNIT","sGetDimensions","dimensions","DEFAULT_SETTINGS","keyDateFormat","keyAnalysisRelativePeriod","keyAnalysisDigitGroupSeparator","displayNameProperty","rootOrganisationUnit","sGetSettings","settings","sGetSettingsDisplayNameProperty","acSetDimensions","styles","showMore","color","colors","grey700","cursor","fontSize","paddingTop","&:hover","textDecoration","disabled","grey500","withStyles","onClick","isMaxHeight","classes","textAlign","className","MIN_ROW_COUNT","getRowsHeight","getNumRowsFromHeight","FIRST_ROW_PADDING_HEIGHT","getTopOffset","getControlBarHeight","ControlBar","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onStartDrag","setState","dragging","window","addEventListener","onDrag","onEndDrag","event","preventDefault","stopPropagation","newHeight","clientY","onChangeHeight","requestAnimationFrame","removeEventListener","draghandle","onMouseDown","rootStyle","top","backgroundColor","editMode","yellow050","white","paddingBottom","transition","root","children","renderDragHandle","React","Component","defaultProps","StarIcon","xmlns","viewBox","fill","apiPostDataStatistics","eventType","chip","margin","grey600","display","verticalAlign","icon","marginTop","unselected","label","chipProps","selectedState","Star","Link","to","debounce","lib","AddCircleIcon","teal600","ClearIcon","grey800","ClearButton","onClear","button","Clear","ownerData","DEFAULT_STATE_DASHBOARDS_FILTER_NAME","DEFAULT_STATE_DASHBOARDS_FILTER_OWNER","order","sGetDashboardsFilterRoot","dashboardsFilter","sGetFilterName","KEYCODE_ENTER","KEYCODE_ESCAPE","filterField","searchIcon","Filter","_Component","setFilterValue","onChangeName","target","handleKeyUp","keyCode","onKeypressEnter","inherits","createClass","nextProps","_this$props","startAdornment","InputAdornment_default","position","Search_default","endAdornment","ControlBar_ClearButton","Input_default","placeholder","onChange","onKeyUp","Function","prototype","MAX_ROW_COUNT","DashboardsBar","_getPrototypeOf2","_len","args","Array","_key","setInitialDashboardState","adjustedHeight","newRows","newRowCount","min","onToggleMaxHeight","onSelectDashboard","history","push","selectedId","onChangeFilterName","rowCount","controlBarHeight","contentWrapperStyle","padding","overflowY","components_ControlBar_ControlBar","leftControls","marginRight","AddCircle","ControlBar_Filter","ControlBar_DashboardItemChip","ControlBar_ShowMoreButton","mapDispatchToProps","withRouter","stateProps","dispatchProps","ownProps","displayDashboards","toLowerCase","HeaderMenuItem","title","dense","LaunchIcon","LaunchLink","e","launchLink","rel","href","Launch","InsertButton","buttonInsert","ContentMenuItem","onInsert","ItemIcon","menuItem","ContentMenuItem_LaunchLink","ContentMenuItem_InsertButton","singleItems","header","categorizedItems","listItemTypes","CategorizedMenuGroup","addItem","tAddListItemContent","newItem","toggleSeeMore","seeMore","onChangeItemsLimit","_this2","_this$props2","hasMore","react","ItemSelector_HeaderMenuItem","itemUrl","context","ItemSelector_ContentMenuItem","contextTypes","PropTypes","object","isRequired","dashboardItem","listItemType","dashboardItemIndex","findIndex","category","addToDashboard","ItemSearchField","onFocus","ItemSelector","closeList","openList","_","fetchItems","anchorEl","currentTarget","setFilter","getCategorizedMenuGroups","itemType","allItems","maxOptions","slice","ItemSelector_CategorizedMenuGroup","getSinglesMenuGroups","ItemSelector_SinglesMenuGroup","getMenuGroups","queryString","add","Set","ItemSelector_ItemSearchField","Popover_default","anchorOrigin","horizontal","vertical","transformOrigin","PaperProps","disableAutoFocus","disableRestoreFocus","EditTitleBar","onChangeTitle","onChangeDescription","section","titleDescription","itemSelector","components_ItemSelector_ItemSelector","selectedDashboard","justifyContent","flex","clear","underline","&::before","borderBottom","&:hover::before","input","borderRadius","peId","ouId","FilterDialog","onConfirm","dimension","selectedItems","dialogId","commonProps","onSelect","onDeselect","onReorder","build","selectedPeriods","ouItems","dialogTitle","Dialog_default","maxWidth","disableEnforceFocus","dialogContent","DialogActions_default","kind","DEFAULT_STATE_ACTIVE_MODAL_DIMENSION","sGetActiveModalDimension","activeModalDimension","acSetActiveModalDimension","FilterSelector","openPanel","closePanel","closeDialog","clearActiveModalDimension","selectDimension","setActiveModalDimension","onSelectItems","dimensionId","setEditItemFilters","onDeselectItems","itemIdsToRemove","newList","removeEditItemFilter","onReorderItems","itemIds","oldList","reorderedList","saveFilter","filterItems","addItemFilter","removeItemFilter","theme","selectedDimensions","ArrowDropDown_default","Boolean","fontFamily","typography","onDimensionClick","selectedIds","ItemFilter_FilterDialog","filters","withTheme","Info","show","toggle","InfoOutlined_default","NO_DESCRIPTION","actions","alignItems","marginLeft","starIcon","textButton","minWidth","editLink","titleBar","titleBarIcon","ViewTitleBar","toggleSharingDialog","sharingDialogIsOpen","onStarClick","onInfoClick","titleStyle","userSelect","StarBorder","TitleBar_Info","update","manage","ItemFilter_FilterSelector","d2_ui_sharing_dialog_default","onRequestClose","tStarDashboard","black","TitleBar","edit","TitleBar_EditTitleBar","TitleBar_ViewTitleBar","DefaultPlugin","pluginCredentials","shouldPluginReload","prevProps","reloadAllowed","filtersChanged","vis","prevVis","visChanged","reloadPlugin","pluginManager","currentVis","useActiveType","getActiveType","defaultHeaders","Authorization","textDiv","HEADER_HEIGHT","ItemHeader","actionButtons","scrollContainer","line","border","grey100","ItemFooter","objectId","d2_ui_interpretations_default","ItemHeaderButton","iconBase","buttonBase","buttonDisabled","opacity","toggleFooterPadding","grey200","baseStyle","container","disabledStyle","activeStyle","primary800","primary100","inactiveStyle","getItemTypeId","VisualizationItemHeaderButtons","activeFooter","onToggleFooter","toggleFooterBase","toggleFooter","components_Item_ItemHeaderButton","Message_default","onSelectVisualization","isSingleValue","match","tableButtonStyle","tableBtnStyle","chartButtonStyle","chartBtnStyle","mapButtonStyle","mapBtnStyle","ViewList_default","InsertChart_default","Public_default","renderInterpretationButton","renderVisualizationButtons","memoizeOne","fn","lastArgs","lastValue","every","arg","overflow","textOverflow","whiteSpace","fontStretch","lineHeight","applyFilters","visRows","obj","visColumns","columns","visFilters","dimensionFound","dimensionObjects","Item","showFooter","configLoaded","getUniqueKey","uniqueId","getPluginComponent","getContentStyle","data_visualizer_plugin_build","forDashboard","VisualizationItem_DefaultPlugin","onToggleItemExpanded","getTitle","itemName","Launch_default","getActionButtons","ItemHeaderButtons","contentRef","offsetHeight","createRef","_componentDidMount","onVisualizationLoaded","_this$props3","Item_ItemHeader","ref","VisualizationItem_ItemFooter","acReceivedActiveVisualization","Line","PRIVATE","messageTypes","_messageTypes","listStyleType","paddingLeft","seeAll","marginBottom","sender","snippet","maxHeight","MessagesItem","getMessageHref","msgIdentifier","messageType","getMessageSender","latestMsg","getMessageItems","editClass","readClass","read","msgDate","location","messageCount","formatDate","userSettings","widgets_Line","string","MessagesContainer","NotSupportedItem","NotInterested_default","align","DeleteIcon","red500","getItemTitle","ListItem","tRemoveListItemContent","contentItems","array","getContentItems","contentItem","Description","deleteButton","Delete","grey900","newContent","textField","onChangeText","updatedItem","d2_ui_rich_text","onEdit","multiline","fullWidth","textDivStyle","viewItem","getIframeSrc","appDetails","iframeSrc","ouIds","ouPath","AppItem","appKey","system","installedApps","app","src","SpacerItem","GridItem","VisualizationItem","TextItem","getGridItem","right","DeleteItemHeaderButton","Delete_default","NoContentMessage","ProgressiveLoadingContainer","shouldLoad","containerRef","shouldLoadHandler","bufferPx","bufferFactor","innerHeight","rect","getBoundingClientRect","bottom","removeHandler","checkShouldLoad","debounceMs","registerHandler","_this3","objectWithoutProperties","eventProps","pick","ItemGrid","expandedItems","clickedId","isExpanded","onRemoveItem","onLayoutChange","newLayout","acUpdateDashboardLayout","onResizeStop","layout","oldItem","pluginResize","onRemoveItemWrapper","widgets_NoContentMessage","expandedItem","hProp","minH","react_grid_layout_default","cols","rowHeight","innerWidth","compactType","isDraggable","isResizable","draggableCancel","itemClassNames","Item_ProgressiveLoadingContainer","DeleteItemButton","Item_Item_Item","validItems","badgeContainer","badge","badgeRemove","FilterBadge","onRemove","count","FilterBar","onBadgeRemove","onBadgeClick","bar","FilterBar_FilterBadge","removeItemFIlter","filtersSelector","createSelector","reduce","arr","flexWrap","DashboardContent","components_TitleBar_TitleBar","components_FilterBar_FilterBar","components_ItemGrid_ItemGrid","Content","hasDashboardContent","dashboardsIsEmpty","Dashboard_DashboardContent","dashboardsLoaded","contentNotReady","ControlBar_DashboardsBar","Dashboard_DashboardVerticalOffset","ViewDashboard_Content","ConfirmDeleteDialog","onDeleteConfirmed","onContinueEditing","secondary","destructive","DialogTitle_default","DialogContent_default","DialogContentText_default","buttonBarStyle","EditBar","translationDialogIsOpen","dashboardModel","confirmDeleteDialogOpen","redirectUrl","onConfirmDelete","onSave","newId","onDiscard","onDiscardChanges","onDelete","onTranslationsSaved","translations","dbLocale","translation","locale","property","onTranslate","fetchDashboardModel","toggleTranslationDialog","confirmDeleteDialog","deleteAccess","ControlBar_ConfirmDeleteDialog","translationDialog","d2_ui_translation_dialog_default","objectToTranslate","fieldsToTranslate","onTranslationSaved","onTranslationError","err","Redirect","updateAccess","discardBtnText","primary","rightControls","sGetIsNewDashboard","dashboardToSave","tDeleteDashboard","acSetDashboardDisplayName","EditDashboard","initialized","initEditDashboard","setEditDashboard","getDashboardContent","EditDashboard_Content","ControlBar_EditBar","NewDashboard","setNewDashboard","Dashboard","setDashboard","params","selectDashboard","scrollToTop","scrollTo","mode","Dashboard_EditDashboard","Dashboard_NewDashboard","Dashboard_ViewDashboard","dashboardToSelect","preferredId","getItem","App","setCurrentUser","fetchDashboards","setControlBarRows","setDimensions","HeaderBar","HashRouter","Switch","Route","exact","path","render","components_Dashboard_Dashboard","components_SnackbarMessage_SnackbarMessage","childContextTypes","controlBarRows","displayNameProp","filteredDimensions","apiFetchDimensions","dim","dimensionType","dataDimensionType","tSetDimensions","moment","addResources","arTranslations","daTranslations","enTranslations","esTranslations","frTranslations","idTranslations","kmTranslations","loTranslations","myTranslations","prsTranslations","psTranslations","ptTranslations","pt_BRTranslations","ruTranslations","svTranslations","tetTranslations","tgTranslations","ukTranslations","urTranslations","viTranslations","zhTranslations","setDefaultNamespace","changeLanguage","objectClean","conversations","$merge","d2Object","keyUiLocale","authorities","newState","k","$unshift","idToRemove","$splice","stateItems","newStateItems","stateItem","si","$set","configureStore","middleware","thunk","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducer","applyMiddleware","configI18n","sources","manifest","isProd","getManifest","info","version","manifest_generated_at","process","activities","dhis","dhis2","apiVersion","headers","schemas","getUserSettings","d2Init","initializedD2","ReactDOM","build_es","es","store","createMuiTheme","dhis2theme","src_components_App","getElementById","init","param","isArray","Intl","DateTimeFormat","year","month","day","format","Date","replace","defaultValue","api","idx","indexOf","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__"],"mappings":"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","file":"static/js/main.0ff33352.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"showMoreButton\":\"CategorizedMenuGroup_showMoreButton__3-0Wa\"};","import i18n from '@dhis2/d2-i18n';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\nimport ExtensionIcon from '@material-ui/icons/Extension';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport PersonIcon from '@material-ui/icons/Person';\nimport FontDownloadIcon from '@material-ui/icons/FontDownload';\nimport EmailIcon from '@material-ui/icons/Email';\nimport CropFreeIcon from '@material-ui/icons/CropFree';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nimport { getBaseUrl } from './util';\n\n// Item types\nexport const VISUALIZATION = 'VISUALIZATION';\nexport const REPORT_TABLE = 'REPORT_TABLE';\nexport const CHART = 'CHART';\nexport const MAP = 'MAP';\nexport const EVENT_REPORT = 'EVENT_REPORT';\nexport const EVENT_CHART = 'EVENT_CHART';\nexport const APP = 'APP';\nexport const REPORTS = 'REPORTS';\nexport const RESOURCES = 'RESOURCES';\nexport const USERS = 'USERS';\nexport const MESSAGES = 'MESSAGES';\nexport const TEXT = 'TEXT';\nexport const SPACER = 'SPACER';\n\n// Domain types\nexport const DOMAIN_TYPE_AGGREGATE = 'AGGREGATE';\nexport const DOMAIN_TYPE_TRACKER = 'TRACKER';\n\n// Visualization types\nexport const VISUALIZATION_TYPE_TABLE = 'TABLE';\nexport const VISUALIZATION_TYPE_CHART = 'CHART';\nexport const VISUALIZATION_TYPE_MAP = 'MAP';\n\n// Dashboard helpers\nexport const spacerContent = 'SPACER_ITEM_FOR_DASHBOARD_LAYOUT_CONVENIENCE';\nexport const emptyTextItemContent = 'TEXT_ITEM_WITH_NO_CONTENT';\nexport const isSpacerType = item =>\n    item.type === TEXT && item.text === spacerContent;\nexport const isTextType = item =>\n    item.type === TEXT && item.text !== spacerContent;\nexport const isPluginType = item => 'plugin' in itemTypeMap[item.type];\n\nexport const getPlugin = type => {\n    const pluginName = itemTypeMap[type].plugin;\n\n    if (type === CHART) {\n        return true;\n    }\n\n    return global[pluginName];\n};\n\n// Item type map\nexport const itemTypeMap = {\n    [REPORT_TABLE]: {\n        id: REPORT_TABLE,\n        endPointName: 'reportTables',\n        propName: 'reportTable',\n        pluralTitle: i18n.t('Pivot tables'),\n        plugin: 'reportTablePlugin',\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        visualizationType: VISUALIZATION_TYPE_TABLE,\n        appUrl: id => `dhis-web-pivot/?id=${id}`,\n        appName: i18n.t('Pivot Tables'),\n    },\n    [CHART]: {\n        id: CHART,\n        endPointName: 'charts',\n        propName: 'chart',\n        pluralTitle: i18n.t('Charts'),\n        plugin: 'chartPlugin',\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        visualizationType: VISUALIZATION_TYPE_CHART,\n        appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n        appName: i18n.t('Visualizer'),\n    },\n    [MAP]: {\n        id: MAP,\n        endPointName: 'maps',\n        propName: 'map',\n        pluralTitle: i18n.t('Maps'),\n        plugin: 'mapPlugin',\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        visualizationType: VISUALIZATION_TYPE_MAP,\n        appUrl: id => `dhis-web-maps/?id=${id}`,\n        appName: i18n.t('Maps'),\n    },\n    [EVENT_REPORT]: {\n        id: EVENT_REPORT,\n        endPointName: 'eventReports',\n        propName: 'eventReport',\n        pluralTitle: i18n.t('Event reports'),\n        plugin: 'eventReportPlugin',\n        domainType: DOMAIN_TYPE_TRACKER,\n        visualizationType: VISUALIZATION_TYPE_TABLE,\n        appUrl: id => `dhis-web-event-reports/?id=${id}`,\n        appName: i18n.t('Event Reports'),\n    },\n    [EVENT_CHART]: {\n        id: EVENT_CHART,\n        endPointName: 'eventCharts',\n        propName: 'eventChart',\n        pluralTitle: i18n.t('Event charts'),\n        plugin: 'eventChartPlugin',\n        domainType: DOMAIN_TYPE_TRACKER,\n        visualizationType: VISUALIZATION_TYPE_CHART,\n        appUrl: id => `dhis-web-event-visualizer/?id=${id}`,\n        appName: i18n.t('Event Visualizer'),\n    },\n    [APP]: {\n        endPointName: 'apps',\n        propName: 'appKey',\n        pluralTitle: i18n.t('Apps'),\n    },\n    [REPORTS]: {\n        id: REPORTS,\n        endPointName: 'reports',\n        propName: 'reports',\n        pluralTitle: i18n.t('Reports'),\n        appUrl: id =>\n            `dhis-web-reporting/getReportParams.action?mode=report&uid=${id}`,\n    },\n    [RESOURCES]: {\n        id: RESOURCES,\n        endPointName: 'resources',\n        propName: 'resources',\n        pluralTitle: i18n.t('Resources'),\n        appUrl: id => `api/documents/${id}/data`,\n    },\n    [USERS]: {\n        id: USERS,\n        endPointName: 'users',\n        propName: 'users',\n        pluralTitle: i18n.t('Users'),\n        appUrl: id => `dhis-web-dashboard-integration/profile.action?id=${id}`,\n    },\n    [TEXT]: {\n        id: TEXT,\n        propName: 'text',\n    },\n    [MESSAGES]: {\n        propName: 'messages',\n    },\n    [SPACER]: {\n        propName: 'text',\n    },\n};\n\nexport const getEndPointName = type => itemTypeMap[type].endPointName;\n\nexport const getItemUrl = (type, item, d2) => {\n    let url;\n\n    if (type === APP) {\n        url = item.launchUrl;\n    }\n\n    if (itemTypeMap[type] && itemTypeMap[type].appUrl) {\n        url = `${getBaseUrl(d2)}/${itemTypeMap[type].appUrl(item.id)}`;\n    }\n\n    return url;\n};\n\nexport const getItemIcon = type => {\n    switch (type) {\n        case REPORT_TABLE:\n        case EVENT_REPORT:\n        case REPORTS:\n            return TableIcon;\n        case CHART:\n        case EVENT_CHART:\n            return ChartIcon;\n        case MAP:\n            return MapIcon;\n        case APP:\n            return ExtensionIcon;\n        case RESOURCES:\n            return DescriptionIcon;\n        case USERS:\n            return PersonIcon;\n        case TEXT:\n            return FontDownloadIcon;\n        case MESSAGES:\n            return EmailIcon;\n        case SPACER:\n            return CropFreeIcon;\n        default:\n            return NotInterestedIcon;\n    }\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Item_list__2oHc1\",\"item\":\"Item_item__lO40M\",\"itemicon\":\"Item_itemicon__dv5ah\",\"link\":\"Item_link__2gULT\",\"deleteicon\":\"Item_deleteicon__3c7bl\",\"deletebutton\":\"Item_deletebutton__1DfY5\"};","export const RECEIVED_USER = 'RECEIVED_USER';\n\nexport const DEFAULT_STATE_USER = {\n    id: '',\n    username: '',\n    uiLocale: '',\n    isSuperuser: false,\n};\n\nexport default (state = DEFAULT_STATE_USER, action) => {\n    switch (action.type) {\n        case RECEIVED_USER: {\n            return fromD2ToUserObj(action.value);\n        }\n        default:\n            return state;\n    }\n};\n\nfunction fromD2ToUserObj(d2Object) {\n    return {\n        id: d2Object.id,\n        username: d2Object.username,\n        uiLocale: d2Object.settings.keyUiLocale,\n        isSuperuser: d2Object.authorities.has('ALL'),\n    };\n}\n\n// selectors\n\nexport const sGetUserId = state => state.user.id;\nexport const sGetUserUsername = state => state.user.username;\nexport const sGetIsSuperuser = state => state.user.isSuperuser;\nexport const sGetUiLocale = state => state.user.uiLocale;\n","/** @module reducers/dashboards */\n\nimport arrayFrom from 'd2-utilizr/lib/arrayFrom';\nimport arraySort from 'd2-utilizr/lib/arraySort';\n\nimport { orArray, orObject } from '../modules/util';\nimport {\n    SPACER,\n    isSpacerType,\n    isTextType,\n    emptyTextItemContent,\n    REPORT_TABLE,\n    CHART,\n    VISUALIZATION,\n} from '../modules/itemTypes';\n\nexport const SET_DASHBOARDS = 'SET_DASHBOARDS';\nexport const ADD_DASHBOARDS = 'ADD_DASHBOARDS';\nexport const SET_DASHBOARD_STARRED = 'SET_DASHBOARD_STARRED';\nexport const SET_DASHBOARD_DISPLAY_NAME = 'SET_DASHBOARD_DISPLAY_NAME';\nexport const SET_DASHBOARD_ITEMS = 'SET_DASHBOARD_ITEMS';\n\nexport const DEFAULT_STATE_DASHBOARDS = {\n    byId: null,\n    items: [],\n};\n\n// reducer helper functions\n\nconst updateDashboardProp = ({ state, dashboardId, prop, value }) => ({\n    byId: {\n        ...state.byId,\n        [dashboardId]: {\n            ...state.byId[dashboardId],\n            [prop]: value,\n        },\n    },\n    items: state.items,\n});\n\n/**\n * Reducer that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n * @returns {Object}\n */\nexport default (state = DEFAULT_STATE_DASHBOARDS, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS: {\n            return {\n                byId: action.value,\n                items: [],\n            };\n        }\n        case ADD_DASHBOARDS: {\n            return {\n                ...state,\n                byId: {\n                    ...state.byId,\n                    ...action.value,\n                },\n            };\n        }\n        case SET_DASHBOARD_STARRED: {\n            return updateDashboardProp({\n                state,\n                dashboardId: action.dashboardId,\n                prop: 'starred',\n                value: action.value,\n            });\n        }\n        case SET_DASHBOARD_DISPLAY_NAME: {\n            return updateDashboardProp({\n                state,\n                dashboardId: action.dashboardId,\n                prop: 'displayName',\n                value: action.value,\n            });\n        }\n        case SET_DASHBOARD_ITEMS: {\n            return {\n                ...state,\n                items: action.value,\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// root selector\n\nexport const sGetDashboardsRoot = state => state.dashboards;\n\n// selector level 1\n\n/**\n * Selector which returns a dashboard by id from the state object\n * If no matching dashboard is found it returns undefined\n * If dashboards.byId is null, then the dashboards api request\n * has not yet completed. If dashboards.byId is an empty object\n * then the dashboards api request is complete, but no dashboards\n * were returned\n *\n * @function\n * @param {Object} state The current state\n * @param {Number} id The id of the dashboard\n * @returns {Object | undefined}\n */\nexport const sGetDashboardById = (state, id) =>\n    orObject(sGetDashboardsRoot(state).byId)[id];\n\nexport const sDashboardsIsFetching = state => {\n    return sGetDashboardsRoot(state).byId === null;\n};\n\n/**\n * Selector which returns all dashboards (the byId object)\n *\n * @function\n * @param {Object} state The current state\n * @returns {Object | undefined}\n */\nexport const sGetAllDashboards = state =>\n    orObject(sGetDashboardsRoot(state).byId);\n\n/**\n * Selector which returns the current dashboard items\n *\n * @function\n * @param {Object} state The current state\n * @returns {Array}\n */\nexport const sGetDashboardItems = state => sGetDashboardsRoot(state).items;\n\n// selector level 2\n\nexport const sGetStarredDashboards = state =>\n    Object.values(sGetAllDashboards(state)).filter(\n        dashboard => dashboard.starred === true\n    );\n\nexport const sGetUnstarredDashboards = state =>\n    Object.values(sGetAllDashboards(state)).filter(\n        dashboard => dashboard.starred === false\n    );\n\n// selector level 3\n\nexport const sGetStarredDashboardIds = state => {\n    return sGetStarredDashboards(state).map(dashboard => dashboard.id);\n};\n\nexport const sGetUnstarredDashboardIds = state =>\n    sGetUnstarredDashboards(state).map(dashboard => dashboard.id);\n\nexport const sGetDashboardsSortedByStarred = state => [\n    ...arraySort(sGetStarredDashboards(state), 'ASC', 'displayName'),\n    ...arraySort(sGetUnstarredDashboards(state), 'ASC', 'displayName'),\n];\n\n// utils\n\n/**\n * Returns the array of dashboards, customized for ui\n * @function\n * @param {Array} data The original dashboard list\n * @returns {Array}\n */\nexport const getCustomDashboards = data => {\n    const uiItems = items =>\n        items.map(item => {\n            let type = isSpacerType(item) ? SPACER : item.type;\n\n            // TODO: temporary fix before 2.34 epic branch is merged\n            // if \"VISUALIZATION\", reset to \"REPORT_TABLE\" or \"CHART\"\n            if (type === VISUALIZATION) {\n                type = item.reportTable\n                    ? REPORT_TABLE\n                    : item.chart\n                    ? CHART\n                    : type;\n            }\n\n            const text = isTextType(item)\n                ? item.text === emptyTextItemContent\n                    ? ''\n                    : item.text\n                : null;\n\n            return {\n                ...item,\n                ...(text !== null ? { text } : {}),\n                type,\n            };\n        });\n\n    return arrayFrom(data).map(d => ({\n        id: d.id,\n        name: d.name,\n        displayName: d.displayName,\n        description: d.description,\n        displayDescription: d.displayDescription,\n        starred: d.favorite,\n        owner: d.user.name,\n        created: d.created\n            .split('T')\n            .join(' ')\n            .substr(0, 16),\n        lastUpdated: d.lastUpdated\n            .split('T')\n            .join(' ')\n            .substr(0, 16),\n        access: d.access,\n        numberOfItems: orArray(d.dashboardItems).length,\n        dashboardItems: uiItems(d.dashboardItems),\n    }));\n};\n","/** @module reducers/selected */\nimport { combineReducers } from 'redux';\n\nimport { validateReducer } from '../modules/util';\n\nexport const SET_SELECTED_ID = 'SET_SELECTED_ID';\nexport const SET_SELECTED_ISLOADING = 'SET_SELECTED_ISLOADING';\nexport const SET_SELECTED_SHOWDESCRIPTION = 'SET_SELECTED_SHOWDESCRIPTION';\n\nexport const DEFAULT_STATE_SELECTED_ID = null;\nexport const DEFAULT_STATE_SELECTED_ISLOADING = false;\nexport const DEFAULT_STATE_SELECTED_SHOWDESCRIPTION = false;\n\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\nconst id = (state = DEFAULT_STATE_SELECTED_ID, action) => {\n    switch (action.type) {\n        case SET_SELECTED_ID:\n            return validateReducer(action.value, DEFAULT_STATE_SELECTED_ID);\n        default:\n            return state;\n    }\n};\n\nconst isLoading = (state = DEFAULT_STATE_SELECTED_ISLOADING, action) => {\n    switch (action.type) {\n        case SET_SELECTED_ISLOADING:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_SELECTED_ISLOADING\n            );\n        default:\n            return state;\n    }\n};\n\nconst showDescription = (\n    state = DEFAULT_STATE_SELECTED_SHOWDESCRIPTION,\n    action\n) => {\n    switch (action.type) {\n        case SET_SELECTED_SHOWDESCRIPTION:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_SELECTED_SHOWDESCRIPTION\n            );\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    id,\n    isLoading,\n    showDescription,\n});\n\n// Selectors\n\nexport const sGetSelectedRoot = state => state.selected;\n\nexport const sGetSelectedId = state => sGetSelectedRoot(state).id;\n\nexport const sGetSelectedIsLoading = state => sGetSelectedRoot(state).isLoading;\n\nexport const sGetSelectedShowDescription = state =>\n    sGetSelectedRoot(state).showDescription;\n","import { orObject } from '../modules/util';\nimport objectClean from 'd2-utilizr/lib/objectClean';\n\n/** @module reducers/visualizations */\n\nexport const RECEIVED_VISUALIZATION = 'RECEIVED_VISUALIZATION';\nexport const RECEIVED_ACTIVE_VISUALIZATION = 'RECEIVED_ACTIVE_VISUALIZATION';\n\nexport const DEFAULT_STATE_VISUALIZATIONS = {};\n\nconst isEmpty = p => p === undefined || p === null;\n\nexport default (state = DEFAULT_STATE_VISUALIZATIONS, action) => {\n    switch (action.type) {\n        case RECEIVED_VISUALIZATION: {\n            return {\n                ...state,\n                [action.value.id]: objectClean(\n                    {\n                        ...orObject(state[action.value.id]),\n                        ...action.value,\n                    },\n                    isEmpty\n                ),\n            };\n        }\n        case RECEIVED_ACTIVE_VISUALIZATION: {\n            return {\n                ...state,\n                [action.id]: objectClean(\n                    {\n                        ...orObject(state[action.id]),\n                        activeType: action.activeType,\n                    },\n                    isEmpty\n                ),\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// root selector\nexport const sGetVisualizationsRoot = state => state.visualizations;\n\n// selectors level 1\nexport const sGetVisualization = (state, id) => {\n    return sGetVisualizationsRoot(state)[id];\n};\n","import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\n\nimport { getEndPointName } from '../modules/itemTypes';\n\n// Id, name\nexport const getIdNameFields = ({ rename } = {}) => [\n    'id',\n    `${rename ? 'displayName~rename(name)' : 'name,displayName'}`,\n];\n\n// Item\nexport const getItemFields = () => [\n    'dimensionItem~rename(id)',\n    'displayName~rename(name)',\n    'dimensionItemType',\n];\n\n// Dimension\nexport const getDimensionFields = ({ withItems }) =>\n    arrayClean([\n        'dimension',\n        'legendSet[id]',\n        'filter',\n        'programStage',\n        withItems ? `items[${getItemFields().join(',')}]` : ``,\n    ]);\n\n// Axis\nexport const getAxesFields = ({ withItems }) => [\n    `columns[${getDimensionFields({ withItems }).join(',')}]`,\n    `rows[${getDimensionFields({ withItems }).join(',')}]`,\n    `filters[${getDimensionFields({ withItems }).join(',')}]`,\n];\n\n// Favorite\nexport const getFavoriteFields = ({ withDimensions, withOptions }) => {\n    return arrayClean([\n        `${getIdNameFields({ rename: true }).join(',')}`,\n        'displayDescription~rename(description)',\n        withDimensions ? `${getAxesFields({ withItems: true }).join(',')}` : ``,\n        withOptions\n            ? [\n                  '*',\n                  '!attributeDimensions',\n                  '!attributeValues',\n                  '!category',\n                  '!categoryDimensions',\n                  '!categoryOptionGroupSetDimensions',\n                  '!columnDimensions',\n                  '!dataDimensionItems',\n                  '!dataElementDimensions',\n                  '!dataElementGroupSetDimensions',\n                  '!filterDimensions',\n                  '!itemOrganisationUnitGroups',\n                  '!lastUpdatedBy',\n                  '!organisationUnitGroupSetDimensions',\n                  '!organisationUnitLevels',\n                  '!organisationUnits',\n                  '!programIndicatorDimensions',\n                  '!relativePeriods',\n                  '!reportParams',\n                  '!rowDimensions',\n                  '!series',\n                  '!translations',\n                  '!userOrganisationUnit',\n                  '!userOrganisationUnitChildren',\n                  '!userOrganisationUnitGrandChildren',\n              ].join(',')\n            : '',\n    ]);\n};\n\nexport const getFavoritesFields = ({ withDimensions }) => [\n    `reportTable[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `chart[${['type', ...getFavoriteFields({ withDimensions })].join(',')}]`,\n    `map[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `eventReport[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `eventChart[${getFavoriteFields({ withDimensions }).join(',')}]`,\n];\n\n// List item\nexport const getListItemFields = () => [\n    `reports[${getIdNameFields({ rename: true }).join(',')}]`,\n    `resources[${getIdNameFields({ rename: true }).join(',')}]`,\n    `users[${getIdNameFields({ rename: true }).join(',')}]`,\n];\n\n// Map\nexport const getMapFields = () => [\n    `${getIdNameFields({ rename: true }).join(',')}`,\n    'user,longitude,latitude,zoom,basemap',\n    `mapViews[${getFavoriteFields({\n        withDimensions: true,\n        withOptions: true,\n    })}]`,\n];\n\n// Api\n\n// Get more info about the favorite of a dashboard item\nexport const apiFetchFavorite = (id, type, { fields }) =>\n    getInstance().then(d2 =>\n        d2.Api.getApi().get(`${getEndPointName(type)}/${id}`, {\n            fields:\n                fields ||\n                getFavoriteFields({\n                    withDimensions: true,\n                    withOptions: true,\n                }),\n        })\n    );\n","import arrayClean from 'd2-utilizr/lib/arrayClean';\nimport {\n    getListItemFields,\n    getFavoritesFields,\n    getIdNameFields,\n} from './metadata';\n\n// Helper functions\n\nexport const onError = error => console.log('Error: ', error);\n\n// Dashboard item\nexport const getDashboardItemsFields = ({ withFavorite } = {}) =>\n    arrayClean([\n        'id',\n        'type',\n        'shape',\n        'x',\n        'y',\n        'width~rename(w)',\n        'height~rename(h)',\n        'messages',\n        'text',\n        'appKey',\n        `${getListItemFields().join(',')}`,\n        withFavorite\n            ? `${getFavoritesFields({\n                  withDimensions: withFavorite.withDimensions,\n              }).join(',')}`\n            : ``,\n    ]);\n\n// Dashboard\nexport const getDashboardFields = ({ withItems, withFavorite } = {}) =>\n    arrayClean([\n        `${getIdNameFields().join(',')}`,\n        'description',\n        'displayDescription',\n        'favorite',\n        `user[${getIdNameFields({ rename: true }).join(',')}]`,\n        'created',\n        'lastUpdated',\n        'access',\n        withItems\n            ? `dashboardItems[${getDashboardItemsFields({\n                  withFavorite,\n              }).join(',')}]`\n            : ``,\n    ]);\n","import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { onError, getDashboardFields } from './index';\n\n// Get \"all\" dashboards on startup\nexport const apiFetchDashboards = () =>\n    getInstance()\n        .then(d2 =>\n            d2.models.dashboard.list({\n                fields: [\n                    getDashboardFields().join(','),\n                    'dashboardItems[id]',\n                ].join(','),\n                paging: 'false',\n            })\n        )\n        .catch(onError);\n\n// Get more info about selected dashboard\nexport const apiFetchDashboard = id =>\n    getInstance()\n        .then(d2 =>\n            d2.models.dashboard.get(id, {\n                fields: arrayClean(\n                    getDashboardFields({\n                        withItems: true,\n                        withFavorite: { withDimensions: false },\n                    })\n                ).join(','),\n            })\n        )\n        .catch(onError);\n\n// Star dashboard\nexport const apiStarDashboard = (id, isStarred) => {\n    const url = `dashboards/${id}/favorite`;\n\n    getInstance().then(d2 => {\n        if (isStarred) {\n            d2.Api.getApi().post(url);\n        } else {\n            d2.Api.getApi().delete(url);\n        }\n    });\n};\n\nexport const apiDeleteDashboard = id => {\n    return getInstance()\n        .then(d2 => {\n            return d2.models.dashboards\n                .get(id)\n                .then(dashboard => dashboard.delete());\n        })\n        .catch(onError);\n};\n","import isFunction from 'd2-utilizr/lib/isFunction';\n\nimport { orObject } from '../../modules/util';\n\n// Dimensions for the react-grid-layout\n\nexport const GRID_COMPACT_TYPE = 'vertical'; // vertical | horizonal | null\nexport const GRID_ROW_HEIGHT = 10;\nconst GRID_COLUMN_WIDTH_PX = 20;\nconst GRID_LAYOUT = 'FLEXIBLE'; // FIXED | FLEXIBLE\nexport const MARGIN = [10, 10];\n\nexport const NEW_ITEM_SHAPE = { x: 0, y: 0, w: 20, h: 29 };\nexport const ITEM_MIN_HEIGHT = 4;\n\n// Dimensions for getShape\n\nconst NUMBER_OF_ITEM_COLS = 2;\nconst GRID_COLUMNS = 60;\n\nexport const getGridColumns = () => {\n    switch (GRID_LAYOUT) {\n        case 'FLEXIBLE':\n            return GRID_COLUMNS;\n        case 'FIXED':\n            return Math.floor((window.innerWidth - 20) / GRID_COLUMN_WIDTH_PX);\n        default:\n            return GRID_COLUMNS;\n    }\n};\n\n// isNonNegativeInteger\n\nconst isNonNegativeInteger = x => Number.isInteger(x) && x >= 0;\n\n// Does the item have all the shape properties?\n\nexport const hasShape = item =>\n    isNonNegativeInteger(item.x) &&\n    isNonNegativeInteger(item.y) &&\n    isNonNegativeInteger(item.w) &&\n    isNonNegativeInteger(item.h);\n\n// returns a rectangular grid block dimensioned with x, y, w, h in grid units.\n// based on a grid with 3 items across\nexport const getShape = i => {\n    if (!isNonNegativeInteger(i)) {\n        throw new Error('Invalid grid block number');\n    }\n\n    const col = i % NUMBER_OF_ITEM_COLS;\n    const row = Math.floor(i / NUMBER_OF_ITEM_COLS);\n    const itemWidth = Math.floor((GRID_COLUMNS - 1) / NUMBER_OF_ITEM_COLS);\n    const itemHeight = GRID_ROW_HEIGHT * 2;\n\n    return {\n        x: col * itemWidth,\n        y: row * itemHeight,\n        w: itemWidth,\n        h: itemHeight,\n    };\n};\n\n/**\n * Calculates the grid item's original height in pixels based\n * on the height in grid units. This calculation\n * is copied directly from react-grid-layout GridItem.js (calcPosition)\n *\n * @param {Object} item item containing shape (x, y, w, h)\n */\nconst getOriginalHeight = item => {\n    const originalHeight = Math.round(\n        GRID_ROW_HEIGHT * item.h + Math.max(0, item.h - 1) * MARGIN[1]\n    );\n\n    return { originalHeight };\n};\n\n/**\n * Returns an array of items containing the x, y, w, h dimensions\n * and the item's originalheight in pixels\n * @function\n * @param {Array} items\n * @returns {Array}\n */\n\nexport const withShape = items =>\n    items.map((item, index) => {\n        const itemWithShape = hasShape(item)\n            ? item\n            : Object.assign({}, item, getShape(index));\n\n        return Object.assign(\n            {},\n            itemWithShape,\n            getOriginalHeight(itemWithShape)\n        );\n    });\n\nexport const getGridItemDomId = id => `item-${id}`;\n\nexport function onItemResize(id) {\n    const el = orObject(document.querySelector(`#${getGridItemDomId(id)}`));\n    if (isFunction(el.setViewportSize))\n        setTimeout(\n            () => el.setViewportSize(el.clientWidth - 5, el.clientHeight - 5),\n            10\n        );\n}\n","import update from 'immutability-helper';\nimport { arrayToIdMap } from '../modules/util';\n\nexport const RECEIVED_MESSAGES = 'RECEIVED_MESSAGES';\n\nexport default (state = {}, action) => {\n    switch (action.type) {\n        case RECEIVED_MESSAGES: {\n            const conversations = arrayToIdMap(action.value);\n\n            const newState = update(state, { $merge: conversations });\n\n            return newState;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetMessagesRoot = state => state.messages;\n","import { getInstance } from 'd2';\n\nexport const getMessages = () => {\n    const fields =\n        'id,messageCount,lastUpdated,messageType,displayName,read,messages[id,read,sender[id,displayName],text,lastUpdated]';\n    const url = `/messageConversations?fields=${fields}&order=read:asc&pageSize=200`;\n    return getInstance()\n        .then(d2 => d2.Api.getApi().get(url))\n        .catch(error => console.log('Error:', error));\n};\n","export const RECEIVED_SNACKBAR_MESSAGE = 'RECEIVED_SNACKBAR_MESSAGE';\nexport const CLOSE_SNACKBAR = 'CLOSE_SNACKBAR';\n\nexport const DEFAULT_STATE_SNACKBAR = {\n    message: {},\n    duration: null,\n    open: false,\n};\n\nexport default (state = DEFAULT_STATE_SNACKBAR, action) => {\n    switch (action.type) {\n        case RECEIVED_SNACKBAR_MESSAGE: {\n            return { ...state, ...action.value };\n        }\n        case CLOSE_SNACKBAR: {\n            return DEFAULT_STATE_SNACKBAR;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetSnackbar = state => state.snackbar || DEFAULT_STATE_SNACKBAR;\n","import {\n    RECEIVED_SNACKBAR_MESSAGE,\n    CLOSE_SNACKBAR,\n} from '../reducers/snackbar';\n\nexport const acReceivedSnackbarMessage = value => ({\n    type: RECEIVED_SNACKBAR_MESSAGE,\n    value,\n});\n\nexport const acCloseSnackbar = () => ({\n    type: CLOSE_SNACKBAR,\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport PropTypes from 'prop-types';\n\nimport { sGetSnackbar } from '../../reducers/snackbar';\nimport { acCloseSnackbar } from '../../actions/snackbar';\n\nconst LOADING_DASHBOARD = 'LOADING_DASHBOARD';\nexport const loadingDashboardMsg = { name: '', type: LOADING_DASHBOARD };\n\nconst SnackbarMessageContent = ({ message }) => {\n    if (typeof message === 'object') {\n        //future message types:  switch(message.type)\n        return (\n            <span>\n                Loading <span style={{ fontWeight: 800 }}>{message.name}</span>{' '}\n                dashboard\n            </span>\n        );\n    }\n    return message;\n};\n\nexport const SnackbarMessage = props => {\n    return (\n        <Snackbar\n            style={{ zIndex: 10001 }}\n            open={props.snackbarOpen}\n            message={<SnackbarMessageContent message={props.snackbarMessage} />}\n            autoHideDuration={props.snackbarDuration}\n            onClose={props.onCloseSnackbar}\n        />\n    );\n};\n\nconst mapStateToProps = state => {\n    const { message, duration, open } = sGetSnackbar(state);\n    return {\n        snackbarOpen: open,\n        snackbarMessage: message,\n        snackbarDuration: duration,\n    };\n};\n\nSnackbarMessage.propTypes = {\n    snackbarDuration: PropTypes.string,\n    snackbarMessage: PropTypes.object,\n    snackbarOpen: PropTypes.bool,\n    onCloseSnackbar: PropTypes.func,\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        onCloseSnackbar: acCloseSnackbar,\n    }\n)(SnackbarMessage);\n","import isObject from 'lodash/isObject';\nimport { apiFetchFavorite, getMapFields } from '../../../api/metadata';\nimport {\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_REPORT,\n    EVENT_CHART,\n    itemTypeMap,\n    getPlugin,\n} from '../../../modules/itemTypes';\nimport { getBaseUrl, getWithoutId } from '../../../modules/util';\nimport { getGridItemDomId } from '../../ItemGrid/gridUtil';\n\nexport const THEMATIC_LAYER = 'thematic';\n\nexport const pluginIsAvailable = (item = {}, visualization = {}) => {\n    const type = visualization.activeType || item.type;\n\n    return !!getPlugin(type);\n};\n\nexport const extractFavorite = item => {\n    if (!isObject(item)) {\n        return null;\n    }\n\n    switch (item.type) {\n        case REPORT_TABLE:\n            return item.reportTable;\n        case CHART:\n            return item.chart;\n        case MAP:\n            return item.map;\n        case EVENT_REPORT:\n            return item.eventReport;\n        case EVENT_CHART:\n            return item.eventChart;\n        default:\n            return (\n                item.reportTable ||\n                item.chart ||\n                item.map ||\n                item.eventReport ||\n                item.eventChart ||\n                {}\n            );\n    }\n};\n\nexport const extractMapView = map =>\n    map.mapViews && map.mapViews.find(mv => mv.layer.includes(THEMATIC_LAYER));\n\nexport const loadPlugin = (plugin, config, credentials) => {\n    if (!(plugin && plugin.load)) {\n        return;\n    }\n\n    plugin.url = credentials.baseUrl;\n    plugin.loadingIndicator = true;\n    plugin.dashboard = true;\n    if (credentials.auth) {\n        plugin.auth = credentials.auth;\n    }\n    plugin.load(config);\n};\n\nexport const getId = item => extractFavorite(item).id;\nexport const getName = item => extractFavorite(item).name;\nexport const getDescription = item => extractFavorite(item).description;\nexport const getLink = (item, d2) => {\n    const baseUrl = getBaseUrl(d2);\n    const appUrl = itemTypeMap[item.type].appUrl(getId(item));\n\n    return `${baseUrl}/${appUrl}`;\n};\n\nexport const load = async (\n    item,\n    visualization,\n    { credentials, activeType }\n) => {\n    const config = {\n        ...visualization,\n        el: getGridItemDomId(item.id),\n    };\n\n    const type = activeType || item.type;\n    const plugin = getPlugin(type);\n\n    loadPlugin(plugin, config, credentials);\n};\n\nexport const fetch = async item => {\n    const fetchedFavorite = await apiFetchFavorite(getId(item), item.type, {\n        fields: item.type === MAP ? getMapFields() : null,\n    });\n\n    return fetchedFavorite;\n};\n\nexport const resize = item => {\n    const plugin = getPlugin(item.type);\n\n    if (plugin && plugin.resize) {\n        plugin.resize(getGridItemDomId(item.id));\n    }\n};\n\nexport const unmount = (item, activeType) => {\n    const plugin = getPlugin(activeType);\n\n    if (plugin && plugin.unmount) {\n        plugin.unmount(getGridItemDomId(item.id));\n    }\n};\n\nexport const getVisualizationConfig = (\n    visualization,\n    originalType,\n    activeType\n) => {\n    if (originalType === MAP && originalType !== activeType) {\n        const extractedMapView = extractMapView(visualization);\n\n        if (extractedMapView === undefined) {\n            return null;\n        }\n\n        return getWithoutId({\n            ...visualization,\n            ...extractedMapView,\n            mapViews: undefined,\n        });\n    }\n\n    return getWithoutId(visualization);\n};\n","import {\n    SET_SELECTED_ID,\n    SET_SELECTED_ISLOADING,\n    SET_SELECTED_SHOWDESCRIPTION,\n} from '../reducers/selected';\nimport {\n    RECEIVED_VISUALIZATION,\n    RECEIVED_ACTIVE_VISUALIZATION,\n} from '../reducers/visualizations';\nimport { sGetSelectedIsLoading } from '../reducers/selected';\nimport { sGetUserUsername } from '../reducers/user';\nimport { getCustomDashboards, sGetDashboardById } from '../reducers/dashboards';\nimport { apiFetchDashboard } from '../api/dashboards';\nimport { acSetDashboardItems, acAppendDashboards } from './dashboards';\nimport { withShape } from '../components/ItemGrid/gridUtil';\nimport { tGetMessages } from '../components/Item/MessagesItem/actions';\nimport { acReceivedSnackbarMessage, acCloseSnackbar } from './snackbar';\nimport { storePreferredDashboardId } from '../api/localStorage';\nimport { loadingDashboardMsg } from '../components/SnackbarMessage/SnackbarMessage';\nimport {\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_REPORT,\n    EVENT_CHART,\n    MESSAGES,\n} from '../modules/itemTypes';\nimport { extractFavorite } from '../components/Item/VisualizationItem/plugin';\nimport { orObject } from '../modules/util';\n\n// actions\n\nexport const acSetSelectedId = value => ({\n    type: SET_SELECTED_ID,\n    value,\n});\n\nexport const acSetSelectedIsLoading = value => ({\n    type: SET_SELECTED_ISLOADING,\n    value,\n});\n\nexport const acSetSelectedShowDescription = value => ({\n    type: SET_SELECTED_SHOWDESCRIPTION,\n    value,\n});\n\nexport const acReceivedVisualization = value => ({\n    type: RECEIVED_VISUALIZATION,\n    value,\n});\n\nexport const acReceivedActiveVisualization = (id, type, activeType) => {\n    const action = {\n        type: RECEIVED_ACTIVE_VISUALIZATION,\n        id,\n    };\n\n    if (activeType !== type) {\n        action.activeType = activeType;\n    }\n\n    return action;\n};\n\nexport const tLoadDashboard = id => async dispatch => {\n    try {\n        const dash = await apiFetchDashboard(id);\n        dispatch(acAppendDashboards(dash));\n\n        return Promise.resolve(dash);\n    } catch (err) {\n        console.log('Error: ', err);\n        return err;\n    }\n};\n\n// thunks\nexport const tSetSelectedDashboardById = id => async (dispatch, getState) => {\n    dispatch(acSetSelectedIsLoading(true));\n\n    const snackbarTimeout = setTimeout(() => {\n        const dashboardName = orObject(sGetDashboardById(getState(), id))\n            .displayName;\n        if (sGetSelectedIsLoading(getState()) && dashboardName) {\n            loadingDashboardMsg.name = dashboardName;\n\n            dispatch(\n                acReceivedSnackbarMessage({\n                    message: loadingDashboardMsg,\n                    open: true,\n                })\n            );\n        }\n    }, 500);\n\n    const onSuccess = selected => {\n        const customDashboard = getCustomDashboards(selected)[0];\n\n        dispatch(\n            acSetDashboardItems(withShape(customDashboard.dashboardItems))\n        );\n\n        storePreferredDashboardId(sGetUserUsername(getState()), id);\n\n        // add visualizations to store\n        customDashboard.dashboardItems.forEach(item => {\n            switch (item.type) {\n                case REPORT_TABLE:\n                case CHART:\n                case MAP:\n                case EVENT_REPORT:\n                case EVENT_CHART:\n                    dispatch(acReceivedVisualization(extractFavorite(item)));\n                    break;\n                case MESSAGES:\n                    dispatch(tGetMessages(id));\n                    break;\n                default:\n                    break;\n            }\n        });\n\n        dispatch(acSetSelectedId(id));\n\n        dispatch(acSetSelectedIsLoading(false));\n\n        clearTimeout(snackbarTimeout);\n\n        dispatch(acCloseSnackbar());\n\n        return selected;\n    };\n\n    const onError = error => {\n        console.log('Error: ', error);\n        return error;\n    };\n\n    try {\n        const selected = await dispatch(tLoadDashboard(id));\n\n        return onSuccess(selected);\n    } catch (err) {\n        return onError(err);\n    }\n};\n","export const getPreferredDashboardId = username =>\n    localStorage.getItem(`dhis2.dashboard.current.${username}`) || undefined;\n\nexport const storePreferredDashboardId = (username, dashboardId) => {\n    localStorage.setItem(`dhis2.dashboard.current.${username}`, dashboardId);\n};\n","import { RECEIVED_MESSAGES } from '../../../reducers/messages';\nimport { getMessages } from '../../../api/messages';\n\nconst onError = (action, error) => {\n    console.log(`Error in action ${action}: ${error}`);\n    return error;\n};\n\nexport const receivedMessages = value => ({\n    type: RECEIVED_MESSAGES,\n    value,\n});\n\nexport const tGetMessages = () => async dispatch => {\n    try {\n        const messages = await getMessages();\n        const { messageConversations } = messages;\n\n        return dispatch(receivedMessages(messageConversations));\n    } catch (err) {\n        return onError('Get Messages', err);\n    }\n};\n","/** @module reducers/editDashboard */\nimport update from 'immutability-helper';\nimport isEmpty from 'lodash/isEmpty';\nimport { orArray, orObject } from '../modules/util';\n\nexport const RECEIVED_EDIT_DASHBOARD = 'RECEIVED_EDIT_DASHBOARD';\nexport const RECEIVED_NOT_EDITING = 'RECEIVED_NOT_EDITING';\nexport const START_NEW_DASHBOARD = 'START_NEW_DASHBOARD';\nexport const RECEIVED_TITLE = 'RECEIVED_TITLE';\nexport const RECEIVED_DESCRIPTION = 'RECEIVED_DESCRIPTION';\nexport const ADD_DASHBOARD_ITEM = 'ADD_DASHBOARD_ITEM';\nexport const REMOVE_DASHBOARD_ITEM = 'REMOVE_DASHBOARD_ITEM';\nexport const UPDATE_DASHBOARD_ITEM = 'UPDATE_DASHBOARD_ITEM';\nexport const RECEIVED_DASHBOARD_LAYOUT = 'RECEIVED_DASHBOARD_LAYOUT';\n\nexport const DEFAULT_STATE_EDIT_DASHBOARD = {};\nexport const NEW_DASHBOARD_STATE = {\n    id: '',\n    name: '',\n    access: {},\n    description: '',\n    dashboardItems: [],\n};\n\nexport default (state = DEFAULT_STATE_EDIT_DASHBOARD, action) => {\n    switch (action.type) {\n        case RECEIVED_EDIT_DASHBOARD: {\n            const newState = {};\n            Object.keys(NEW_DASHBOARD_STATE).map(\n                k => (newState[k] = action.value[k])\n            );\n            return newState;\n        }\n        case RECEIVED_NOT_EDITING:\n            return DEFAULT_STATE_EDIT_DASHBOARD;\n        case START_NEW_DASHBOARD:\n            return NEW_DASHBOARD_STATE;\n        case RECEIVED_TITLE: {\n            return Object.assign({}, state, { name: action.value });\n        }\n        case RECEIVED_DESCRIPTION: {\n            return Object.assign({}, state, {\n                description: action.value,\n            });\n        }\n        case ADD_DASHBOARD_ITEM:\n            return update(state, {\n                dashboardItems: { $unshift: [action.value] },\n            });\n        case REMOVE_DASHBOARD_ITEM: {\n            const idToRemove = action.value;\n\n            const dashboardItemIndex = state.dashboardItems.findIndex(\n                item => item.id === idToRemove\n            );\n\n            if (dashboardItemIndex > -1) {\n                return update(state, {\n                    dashboardItems: {\n                        $splice: [[dashboardItemIndex, 1]],\n                    },\n                });\n            }\n\n            return state;\n        }\n        case RECEIVED_DASHBOARD_LAYOUT: {\n            const stateItems = orArray(state.dashboardItems);\n\n            const newStateItems = action.value.map(({ x, y, w, h, i }) => {\n                const stateItem = stateItems.find(si => si.id === i);\n\n                return Object.assign({}, stateItem, { w, h, x, y });\n            });\n\n            return update(state, {\n                dashboardItems: { $set: newStateItems },\n            });\n        }\n        case UPDATE_DASHBOARD_ITEM: {\n            const dashboardItem = action.value;\n\n            const dashboardItemIndex = state.dashboardItems.findIndex(\n                item => item.id === dashboardItem.id\n            );\n\n            if (dashboardItemIndex > -1) {\n                const newState = update(state, {\n                    dashboardItems: {\n                        $splice: [[dashboardItemIndex, 1, dashboardItem]],\n                    },\n                });\n\n                return newState;\n            }\n\n            return state;\n        }\n        default:\n            return state;\n    }\n};\n\n// root selector\n\nexport const sGetEditDashboardRoot = state => state.editDashboard;\n\n// selectors\n\nexport const sGetIsEditing = state => !isEmpty(state.editDashboard);\n\nexport const sGetIsNewDashboard = state => {\n    return (\n        !isEmpty(state.editDashboard) && sGetEditDashboardRoot(state).id === ''\n    );\n};\n\nexport const sGetEditDashboardItems = state =>\n    orObject(sGetEditDashboardRoot(state)).dashboardItems;\n","export const CLEAR_EDIT_ITEM_FILTERS = 'CLEAR_EDIT_ITEM_FILTERS';\nexport const REMOVE_EDIT_ITEM_FILTER = 'REMOVE_EDIT_ITEM_FILTER';\nexport const SET_EDIT_ITEM_FILTERS = 'SET_EDIT_ITEM_FILTERS';\n\nexport const DEFAULT_STATE_EDIT_ITEM_FILTERS = {};\n\nexport default (state = DEFAULT_STATE_EDIT_ITEM_FILTERS, action) => {\n    switch (action.type) {\n        case REMOVE_EDIT_ITEM_FILTER: {\n            const newState = { ...state };\n\n            delete newState[action.id];\n\n            return newState;\n        }\n        case SET_EDIT_ITEM_FILTERS: {\n            return action.filters;\n        }\n        case CLEAR_EDIT_ITEM_FILTERS: {\n            return DEFAULT_STATE_EDIT_ITEM_FILTERS;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetEditItemFiltersRoot = state => state.editItemFilters;\n\nexport const sGetEditFiltersKeys = state =>\n    Object.keys(sGetEditItemFiltersRoot(state));\n","export const CLEAR_ITEM_FILTERS = 'CLEAR_ITEM_FILTERS';\nexport const SET_ITEM_FILTERS = 'SET_ITEM_FILTERS';\nexport const ADD_ITEM_FILTER = 'ADD_ITEM_FILTER';\nexport const REMOVE_ITEM_FILTER = 'REMOVE_ITEM_FILTER';\n\nexport const DEFAULT_STATE_ITEM_FILTERS = {};\n\nexport default (state = DEFAULT_STATE_ITEM_FILTERS, action) => {\n    switch (action.type) {\n        case ADD_ITEM_FILTER: {\n            return {\n                ...state,\n                [action.filter.id]: action.filter.value,\n            };\n        }\n        case REMOVE_ITEM_FILTER: {\n            const newState = { ...state };\n\n            delete newState[action.id];\n\n            return newState;\n        }\n        case SET_ITEM_FILTERS: {\n            return action.filters;\n        }\n        case CLEAR_ITEM_FILTERS: {\n            return DEFAULT_STATE_ITEM_FILTERS;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetItemFiltersRoot = state => state.itemFilters;\n\nexport const sGetFiltersKeys = state => Object.keys(sGetItemFiltersRoot(state));\n","import {\n    ADD_ITEM_FILTER,\n    REMOVE_ITEM_FILTER,\n    SET_ITEM_FILTERS,\n    CLEAR_ITEM_FILTERS,\n} from '../reducers/itemFilters';\n\nexport const FILTER_ORG_UNIT = 'ou';\n\n// actions\n\nexport const acAddItemFilter = filter => ({\n    type: ADD_ITEM_FILTER,\n    filter,\n});\n\nexport const acRemoveItemFilter = id => ({\n    type: REMOVE_ITEM_FILTER,\n    id,\n});\n\nexport const acClearItemFilters = () => ({\n    type: CLEAR_ITEM_FILTERS,\n});\n\nexport const acSetItemFilters = filters => ({\n    type: SET_ITEM_FILTERS,\n    filters,\n});\n","import {\n    REMOVE_EDIT_ITEM_FILTER,\n    SET_EDIT_ITEM_FILTERS,\n    CLEAR_EDIT_ITEM_FILTERS,\n} from '../reducers/editItemFilters';\n\n// actions\n\nexport const acRemoveEditItemFilter = id => ({\n    type: REMOVE_EDIT_ITEM_FILTER,\n    id,\n});\n\nexport const acClearEditItemFilters = () => ({\n    type: CLEAR_EDIT_ITEM_FILTERS,\n});\n\nexport const acSetEditItemFilters = filters => ({\n    type: SET_EDIT_ITEM_FILTERS,\n    filters,\n});\n","import { getInstance } from 'd2';\n\nconst onError = error => console.log('Error: ', error);\n\nconst saveDashboard = (dashboard, data) => {\n    const { name, description, dashboardItems } = data;\n\n    dashboard.name = name;\n    dashboard.description = description;\n    dashboard.dashboardItems = dashboardItems.map(item =>\n        Object.assign({}, item, { width: item.w, height: item.h })\n    );\n\n    return dashboard.save().then(msg => msg.response.uid);\n};\n\nexport const updateDashboard = data => {\n    return getInstance()\n        .then(d2 => {\n            return d2.models.dashboards\n                .get(data.id)\n                .then(dashboard => saveDashboard(dashboard, data));\n        })\n        .catch(onError);\n};\n\nexport const postDashboard = data => {\n    return getInstance().then(d2 => {\n        const dashboard = d2.models.dashboards.create();\n\n        return saveDashboard(dashboard, data);\n    });\n};\n","import { generateUid } from 'd2/uid';\n\nimport {\n    RECEIVED_EDIT_DASHBOARD,\n    START_NEW_DASHBOARD,\n    RECEIVED_NOT_EDITING,\n    RECEIVED_TITLE,\n    RECEIVED_DESCRIPTION,\n    RECEIVED_DASHBOARD_LAYOUT,\n    ADD_DASHBOARD_ITEM,\n    UPDATE_DASHBOARD_ITEM,\n    REMOVE_DASHBOARD_ITEM,\n} from '../reducers/editDashboard';\nimport { sGetEditDashboardRoot } from '../reducers/editDashboard';\nimport { updateDashboard, postDashboard } from '../api/editDashboard';\nimport { tSetSelectedDashboardById } from '../actions/selected';\nimport { NEW_ITEM_SHAPE } from '../components/ItemGrid/gridUtil';\nimport {\n    itemTypeMap,\n    isSpacerType,\n    TEXT,\n    emptyTextItemContent,\n    isTextType,\n} from '../modules/itemTypes';\n\nconst onError = error => {\n    console.log('Error (Saving Dashboard): ', error);\n    return error;\n};\n\n// actions\n\nexport const acSetEditDashboard = (dashboard, items) => {\n    const val = {\n        ...dashboard,\n        dashboardItems: items,\n    };\n\n    return {\n        type: RECEIVED_EDIT_DASHBOARD,\n        value: val,\n    };\n};\n\nexport const acSetEditNewDashboard = () => ({\n    type: START_NEW_DASHBOARD,\n});\n\nexport const acClearEditDashboard = () => ({\n    type: RECEIVED_NOT_EDITING,\n});\n\nexport const acSetDashboardTitle = value => ({\n    type: RECEIVED_TITLE,\n    value,\n});\n\nexport const acSetDashboardDescription = value => ({\n    type: RECEIVED_DESCRIPTION,\n    value,\n});\n\nexport const acUpdateDashboardLayout = value => ({\n    type: RECEIVED_DASHBOARD_LAYOUT,\n    value,\n});\n\nexport const acAddDashboardItem = item => {\n    const type = item.type;\n    delete item.type;\n    const itemPropName = itemTypeMap[type].propName;\n\n    return {\n        type: ADD_DASHBOARD_ITEM,\n        value: {\n            id: generateUid(),\n            type,\n            [itemPropName]: item.content,\n            ...NEW_ITEM_SHAPE,\n        },\n    };\n};\n\nexport const acUpdateDashboardItem = item => ({\n    type: UPDATE_DASHBOARD_ITEM,\n    value: item,\n});\n\nexport const acRemoveDashboardItem = value => ({\n    type: REMOVE_DASHBOARD_ITEM,\n    value,\n});\n\n// thunks\n\nexport const tSaveDashboard = () => async (dispatch, getState) => {\n    const dashboard = sGetEditDashboardRoot(getState());\n\n    const dashboardItems = dashboard.dashboardItems.map(item => {\n        const text = isTextType(item)\n            ? item.text || emptyTextItemContent\n            : null;\n\n        const type = isSpacerType(item) ? TEXT : item.type;\n\n        return {\n            ...item,\n            ...(text ? { text } : {}),\n            type,\n        };\n    });\n\n    const dashboardToSave = {\n        ...dashboard,\n        dashboardItems,\n    };\n\n    try {\n        const dashboardId = dashboardToSave.id\n            ? await updateDashboard(dashboardToSave)\n            : await postDashboard(dashboardToSave);\n\n        dispatch(acClearEditDashboard());\n        await dispatch(tSetSelectedDashboardById(dashboardId));\n\n        return Promise.resolve(dashboardId);\n    } catch (error) {\n        onError(error);\n    }\n};\n","import {\n    SET_DASHBOARDS,\n    ADD_DASHBOARDS,\n    SET_DASHBOARD_STARRED,\n    SET_DASHBOARD_DISPLAY_NAME,\n    SET_DASHBOARD_ITEMS,\n} from '../reducers/dashboards';\nimport {\n    getCustomDashboards,\n    sGetDashboardById,\n    sGetDashboardsSortedByStarred,\n} from '../reducers/dashboards';\nimport { sGetUserUsername } from '../reducers/user';\nimport { tSetSelectedDashboardById, acSetSelectedId } from './selected';\nimport { sGetSelectedId } from '../reducers/selected';\nimport { sGetIsEditing } from '../reducers/editDashboard';\nimport { sGetEditItemFiltersRoot } from '../reducers/editItemFilters';\nimport { acSetItemFilters, acClearItemFilters } from './itemFilters';\nimport { acClearEditItemFilters } from './editItemFilters';\nimport { acClearEditDashboard } from './editDashboard';\nimport {\n    apiFetchDashboards,\n    apiStarDashboard,\n    apiDeleteDashboard,\n} from '../api/dashboards';\nimport { getPreferredDashboardId } from '../api/localStorage';\nimport { arrayToIdMap } from '../modules/util';\n\n// actions\n\nexport const acSetDashboards = dashboards => ({\n    type: SET_DASHBOARDS,\n    value: arrayToIdMap(getCustomDashboards(dashboards)),\n});\n\nexport const acAppendDashboards = dashboards => ({\n    type: ADD_DASHBOARDS,\n    value: arrayToIdMap(getCustomDashboards(dashboards)),\n});\n\nexport const acSetDashboardStarred = (dashboardId, isStarred) => ({\n    type: SET_DASHBOARD_STARRED,\n    dashboardId: dashboardId,\n    value: isStarred,\n});\n\nexport const acSetDashboardDisplayName = (dashboardId, value) => ({\n    type: SET_DASHBOARD_DISPLAY_NAME,\n    dashboardId,\n    value,\n});\n\nexport const acSetDashboardItems = value => ({\n    type: SET_DASHBOARD_ITEMS,\n    value,\n});\n\n// thunks\n\nexport const tFetchDashboards = () => async dispatch => {\n    const collection = await apiFetchDashboards();\n    dispatch(acSetDashboards(collection.toArray()));\n};\n\nexport const tSelectDashboard = id => async (dispatch, getState) => {\n    const onError = error => {\n        console.log('Error (apiFetchDashboards): ', error);\n        return error;\n    };\n\n    try {\n        const state = getState();\n\n        let dashboardToSelect = null;\n        if (id) {\n            dashboardToSelect = sGetDashboardById(state, id) || null;\n        } else {\n            const preferredId = getPreferredDashboardId(\n                sGetUserUsername(state)\n            );\n            const dash = sGetDashboardById(state, preferredId);\n            dashboardToSelect =\n                preferredId && dash\n                    ? dash\n                    : sGetDashboardsSortedByStarred(state)[0];\n        }\n\n        if (dashboardToSelect) {\n            dispatch(tSetSelectedDashboardById(dashboardToSelect.id));\n\n            if (dashboardToSelect.id === sGetSelectedId(state)) {\n                if (sGetIsEditing(state)) {\n                    // disable filters when switching to edit mode\n                    dispatch(acClearItemFilters());\n                } else {\n                    // enable filters when switching to view mode\n                    dispatch(acSetItemFilters(sGetEditItemFiltersRoot(state)));\n                }\n            } else {\n                // clear filters when switching dashboard\n                dispatch(acClearEditItemFilters());\n                dispatch(acClearItemFilters());\n            }\n        } else {\n            dispatch(acSetSelectedId(false));\n        }\n    } catch (err) {\n        return onError(err);\n    }\n};\n\nexport const tStarDashboard = (id, isStarred) => async dispatch => {\n    const onSuccess = id => {\n        dispatch(acSetDashboardStarred(id, isStarred));\n        return id;\n    };\n\n    const onError = error => {\n        console.log('Error (apiStarDashboard): ', error);\n        return error;\n    };\n    try {\n        await apiStarDashboard(id, isStarred);\n        return onSuccess(id);\n    } catch (err) {\n        return onError(err);\n    }\n};\n\nexport const tDeleteDashboard = id => async dispatch => {\n    try {\n        await apiDeleteDashboard(id);\n        dispatch(acClearEditDashboard());\n        dispatch(acSetSelectedId());\n        dispatch(acSetDashboardItems([]));\n\n        await dispatch(tFetchDashboards());\n\n        return Promise.resolve();\n    } catch (err) {\n        console.log('Error (deleteDashboard): ', err);\n        return err;\n    }\n};\n","/** @module reducers/controlBar */\nimport { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\n\nexport const SET_CONTROLBAR_USER_ROWS = 'SET_CONTROLBAR_USER_ROWS';\n\nexport const DEFAULT_STATE_CONTROLBAR_ROWS = 1;\n\nconst userRows = (state = DEFAULT_STATE_CONTROLBAR_ROWS, action) => {\n    switch (action.type) {\n        case SET_CONTROLBAR_USER_ROWS:\n            return validateReducer(action.value, DEFAULT_STATE_CONTROLBAR_ROWS);\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    userRows,\n});\n\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\nexport const sGetControlBarRoot = state => state.controlBar;\n\n// Selector dependency level 2\n\nexport const sGetControlBarUserRows = state =>\n    sGetControlBarRoot(state).userRows;\n","import { getInstance } from 'd2';\nimport { DEFAULT_STATE_CONTROLBAR_ROWS } from '../reducers/controlBar';\n\nconst NAMESPACE = 'dashboard';\nconst KEY = 'controlBarRows';\n\nconst hasNamespace = async d2 => await d2.currentUser.dataStore.has(NAMESPACE);\n\nconst getNamespace = async (d2, hasNamespace) =>\n    hasNamespace\n        ? await d2.currentUser.dataStore.get(NAMESPACE)\n        : await d2.currentUser.dataStore.create(NAMESPACE);\n\nexport const apiGetControlBarRows = async () => {\n    const d2 = await getInstance();\n    const namespace = await getNamespace(d2, await hasNamespace(d2));\n    const hasKey = namespace.keys && namespace.keys.find(key => key === KEY);\n\n    if (hasKey) {\n        return await namespace.get(KEY);\n    } else {\n        await apiPostControlBarRows(DEFAULT_STATE_CONTROLBAR_ROWS, namespace);\n        console.log(\n            '(These errors to /userDataStore/dashboard can be ignored)'\n        );\n        return DEFAULT_STATE_CONTROLBAR_ROWS;\n    }\n};\n\nexport const apiPostControlBarRows = async (rows, namespace) => {\n    const d2 = await getInstance();\n    const ns = namespace || (await getNamespace(d2, hasNamespace));\n\n    ns.set(KEY, rows);\n};\n","import { SET_CONTROLBAR_USER_ROWS } from '../reducers/controlBar';\nimport { apiGetControlBarRows } from '../api/controlBar';\n\n// actions\n\nexport const acSetControlBarUserRows = rows => ({\n    type: SET_CONTROLBAR_USER_ROWS,\n    value: rows,\n});\n\n// thunks\n\nexport const tSetControlBarRows = () => async dispatch => {\n    const onSuccess = rows => {\n        dispatch(acSetControlBarUserRows(rows));\n    };\n\n    const onError = error => {\n        console.log('Error (apiGetControlBarRows): ', error);\n        return error;\n    };\n\n    try {\n        const controlBarRows = await apiGetControlBarRows();\n        return onSuccess(controlBarRows);\n    } catch (err) {\n        return onError(err);\n    }\n};\n","import {\n    getDimensionById,\n    DIMENSION_ID_PERIOD,\n    DIMENSION_ID_ORGUNIT,\n} from '@dhis2/analytics';\n\nexport const SET_DIMENSIONS = 'SET_DIMENSIONS';\nexport const DEFAULT_DIMENSIONS = [\n    getDimensionById(DIMENSION_ID_PERIOD),\n    getDimensionById(DIMENSION_ID_ORGUNIT),\n];\n\nexport default (state = DEFAULT_DIMENSIONS, action) => {\n    switch (action.type) {\n        case SET_DIMENSIONS: {\n            return [...DEFAULT_DIMENSIONS, ...action.value];\n        }\n        default:\n            return state;\n    }\n};\n\nexport const sGetDimensions = state => state.dimensions;\n","export const SET_SETTINGS = 'SET_SETTINGS';\nexport const ADD_SETTINGS = 'ADD_SETTINGS';\n\nexport const DEFAULT_SETTINGS = {\n    keyDateFormat: 'yyyy-MM-dd',\n    keyAnalysisRelativePeriod: 'LAST_12_MONTHS',\n    keyAnalysisDigitGroupSeparator: 'SPACE',\n    displayNameProperty: 'displayName',\n    uiLocale: 'en',\n    rootOrganisationUnit: {},\n};\n\nexport default (state = DEFAULT_SETTINGS, action) => {\n    switch (action.type) {\n        case SET_SETTINGS: {\n            return Object.assign({}, action.value);\n        }\n        case ADD_SETTINGS: {\n            return {\n                ...state,\n                ...action.value,\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// Selectors\n\nexport const sGetSettings = state => state.settings;\n\nexport const sGetSettingsDisplayNameProperty = state =>\n    sGetSettings(state).displayNameProperty;\n\nexport const sGetRootOrgUnit = state =>\n    sGetSettings(state).rootOrganisationUnit;\n\nexport const sGetRelativePeriod = state =>\n    sGetSettings(state).keyAnalysisRelativePeriod;\n\nexport const sGetUiLocale = state => sGetSettings(state).uiLocale;\n","import { SET_DIMENSIONS } from '../reducers/dimensions';\nimport { apiFetchDimensions } from '@dhis2/analytics';\nimport { sGetSettingsDisplayNameProperty } from '../reducers/settings';\n\nexport const acSetDimensions = dimensions => ({\n    type: SET_DIMENSIONS,\n    value: dimensions,\n});\n\nexport const tSetDimensions = d2 => async (dispatch, getState) => {\n    const onSuccess = dimensions => {\n        dispatch(acSetDimensions(dimensions));\n    };\n\n    const onError = error => {\n        console.log('Error (apiFetchDimensions): ', error);\n        return error;\n    };\n\n    try {\n        const displayNameProp = sGetSettingsDisplayNameProperty(getState());\n        const dimensions = await apiFetchDimensions(d2, displayNameProp);\n\n        // filter out CATEGORY that are not of type ATTRIBUTE\n        const filteredDimensions = dimensions.filter(\n            dim =>\n                dim.dimensionType !== 'CATEGORY' ||\n                (dim.dimensionType === 'CATEGORY' &&\n                    dim.dataDimensionType === 'ATTRIBUTE')\n        );\n        return onSuccess(filteredDimensions);\n    } catch (err) {\n        return onError(err);\n    }\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { colors } from '@dhis2/ui-core';\nimport { withStyles } from '@material-ui/core/styles';\n\nexport const SHOWMORE_BAR_HEIGHT = 16;\n\nconst styles = {\n    showMore: {\n        color: colors.grey700,\n        cursor: 'pointer',\n        fontSize: 11,\n        paddingTop: 5,\n        '&:hover': {\n            textDecoration: 'underline',\n        },\n    },\n    disabled: {\n        paddingTop: 5,\n        color: colors.grey500,\n        fontSize: 11,\n        cursor: 'not-allowed',\n    },\n};\n\nexport const ShowMoreButton = ({ onClick, isMaxHeight, classes, disabled }) => {\n    return (\n        <div style={{ textAlign: 'center' }}>\n            {disabled ? (\n                <div className={classes.disabled}>{i18n.t('Show more')}</div>\n            ) : (\n                <div className={classes.showMore} onClick={onClick}>\n                    {isMaxHeight ? i18n.t('Show less') : i18n.t('Show more')}\n                </div>\n            )}\n        </div>\n    );\n};\n\nShowMoreButton.propTypes = {\n    classes: PropTypes.object,\n    disabled: PropTypes.bool,\n    isMaxHeight: PropTypes.bool,\n    onClick: PropTypes.func,\n};\n\nexport default withStyles(styles)(ShowMoreButton);\n","import { SHOWMORE_BAR_HEIGHT } from './ShowMoreButton';\n\nexport const CONTROL_BAR_ROW_HEIGHT = 40;\nexport const FIRST_ROW_PADDING_HEIGHT = 10;\nexport const MIN_ROW_COUNT = 1;\n\nexport const HEADERBAR_HEIGHT = 48;\n\nconst CONTROL_BAR_OUTER_HEIGHT_DIFF =\n    FIRST_ROW_PADDING_HEIGHT + SHOWMORE_BAR_HEIGHT - 2; // 2 pixel \"adjustment\"\n\nexport const getRowsHeight = rows => {\n    return rows * CONTROL_BAR_ROW_HEIGHT;\n};\n\nexport const getNumRowsFromHeight = height => {\n    return Math.floor(\n        (height - CONTROL_BAR_OUTER_HEIGHT_DIFF) / CONTROL_BAR_ROW_HEIGHT\n    );\n};\n\nexport const getTopOffset = rows => {\n    return HEADERBAR_HEIGHT + getControlBarHeight(rows, false);\n};\n\nexport const getControlBarHeight = rows => {\n    return getRowsHeight(rows) + CONTROL_BAR_OUTER_HEIGHT_DIFF;\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { colors } from '@dhis2/ui-core';\nimport { HEADERBAR_HEIGHT } from './controlBarDimensions';\n\nimport classes from './styles/ControlBar.module.css';\n\nconst DRAG_HANDLE_HEIGHT = 7;\n\nclass ControlBar extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            dragging: false,\n        };\n    }\n\n    onStartDrag = () => {\n        this.setState({ dragging: true });\n        window.addEventListener('mousemove', this.onDrag);\n        window.addEventListener('mouseup', this.onEndDrag);\n    };\n\n    onDrag = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const newHeight = event.clientY;\n\n        if (\n            this.props.onChangeHeight &&\n            newHeight !== this.props.height &&\n            newHeight > 0\n        ) {\n            requestAnimationFrame(() => {\n                this.props.onChangeHeight(newHeight);\n            });\n        }\n    };\n\n    onEndDrag = () => {\n        this.setState({ dragging: false });\n        window.removeEventListener('mousemove', this.onDrag);\n        window.removeEventListener('mouseup', this.onEndDrag);\n\n        if (this.props.onEndDrag) {\n            this.props.onEndDrag();\n        }\n    };\n\n    renderDragHandle() {\n        return typeof this.props.onChangeHeight === 'function' ? (\n            <div\n                className={classes.draghandle}\n                style={{ height: DRAG_HANDLE_HEIGHT }}\n                onMouseDown={this.onStartDrag}\n            />\n        ) : null;\n    }\n\n    render() {\n        const height = Math.max(this.props.height, 0) + DRAG_HANDLE_HEIGHT;\n\n        const rootStyle = Object.assign(\n            {\n                height,\n                top: HEADERBAR_HEIGHT,\n                backgroundColor: this.props.editMode\n                    ? colors.yellow050\n                    : colors.white,\n                paddingBottom: DRAG_HANDLE_HEIGHT,\n            },\n            // Disable animations while dragging\n            this.state.dragging ? { transition: 'none' } : {}\n        );\n\n        return (\n            <div style={rootStyle} className={classes.root}>\n                <div className={classes.content}>{this.props.children}</div>\n                {this.renderDragHandle()}\n            </div>\n        );\n    }\n}\n\nControlBar.propTypes = {\n    /**\n     * The height of the control bar in number of lines. Must be a positive integer.\n     */\n    children: PropTypes.node.isRequired,\n\n    /**\n     * If true, the background color of the control bar changes to indicate that edit mode is active.\n     */\n    editMode: PropTypes.bool.isRequired,\n\n    /**\n     * Callback function that is called when the control bar is resized.\n     * The callback receives one argument: The new height in pixels.\n     *\n     * If no callback is specified the control bar will not have a drag handle.\n     */\n    height: PropTypes.number.isRequired,\n\n    /**\n     * Callback function that is called when the control bar is dropped after being dragged.\n     * The callback receives one argument: The new height in pixels.\n     *\n     * Ignored if no \"onChangeHeight\" function is provided.\n     */\n    onChangeHeight: PropTypes.func,\n\n    /**\n     * The contents of the control bar.\n     */\n    onEndDrag: PropTypes.func,\n};\n\nControlBar.defaultProps = {\n    onChangeHeight: null,\n    onEndDrag: null,\n};\n\nexport default ControlBar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst StarIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>\n);\n\nStarIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default StarIcon;\n","import { getInstance } from 'd2';\n\nexport const apiPostDataStatistics = async (eventType, id) => {\n    const d2 = await getInstance();\n    const url = `dataStatistics?eventType=${eventType}&favorite=${id}`;\n\n    d2.Api.getApi().post(url);\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Chip, colors } from '@dhis2/ui-core';\nimport { Link } from 'react-router-dom';\nimport debounce from 'lodash/debounce';\n\nimport StarIcon from '../../icons/Star';\nimport { apiPostDataStatistics } from '../../api/dataStatistics';\n\nconst styles = {\n    chip: {\n        margin: '3px',\n    },\n    link: {\n        color: colors.grey600,\n        display: 'inline-block',\n        textDecoration: 'none',\n        verticalAlign: 'top',\n    },\n    icon: {\n        height: '20px',\n        marginTop: '2px',\n        width: '20px',\n    },\n    selected: {\n        fill: colors.white,\n    },\n    unselected: {\n        fill: colors.grey700,\n    },\n};\n\nexport const DashboardItemChip = ({\n    starred,\n    selected,\n    label,\n    dashboardId,\n    classes,\n}) => {\n    const chipProps = {\n        selected,\n        className: classes.chip,\n    };\n\n    if (starred) {\n        const selectedState = selected ? classes.selected : classes.unselected;\n        chipProps.icon = (\n            <StarIcon className={`${classes.icon} ${selectedState}`} />\n        );\n    }\n\n    return (\n        <Link\n            className={classes.link}\n            to={`/${dashboardId}`}\n            onClick={debounce(\n                () => apiPostDataStatistics('DASHBOARD_VIEW', dashboardId),\n                500\n            )}\n        >\n            <Chip {...chipProps}>{label}</Chip>\n        </Link>\n    );\n};\n\nDashboardItemChip.propTypes = {\n    dashboardId: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    selected: PropTypes.bool.isRequired,\n    starred: PropTypes.bool.isRequired,\n    classes: PropTypes.object,\n};\n\nexport default withStyles(styles)(DashboardItemChip);\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\n\nconst AddCircleIcon = () => (\n    <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"32\"\n        height=\"32\"\n        fill={colors.teal600}\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm4 11h-3v3c0 .55-.45 1-1 1s-1-.45-1-1v-3H8c-.55 0-1-.45-1-1s.45-1 1-1h3V8c0-.55.45-1 1-1s1 .45 1 1v3h3c.55 0 1 .45 1 1s-.45 1-1 1z\" />\n    </svg>\n);\n\nexport default AddCircleIcon;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nconst ClearIcon = ({ className }) => (\n    <svg\n        className={className}\n        fill={colors.grey800}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>\n);\n\nClearIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default ClearIcon;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ClearIcon from '../../icons/Clear';\n\nimport classes from './styles/ClearButton.module.css';\n\nexport const ClearButton = ({ onClear }) => (\n    <button className={classes.button} onClick={onClear}>\n        <span>\n            <ClearIcon className={classes.icon} color=\"action\" />\n        </span>\n    </button>\n);\n\nClearButton.propTypes = {\n    onClear: PropTypes.func.isRequired,\n};\n\nexport default ClearButton;\n","import { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\n\nexport const SET_DASHBOARDS_FILTER_NAME = 'SET_DASHBOARDS_FILTER_NAME';\nexport const SET_DASHBOARDS_FILTER_OWNER = 'SET_DASHBOARDS_FILTER_OWNER';\nexport const SET_DASHBOARDS_FILTER_ORDER = 'SET_DASHBOARDS_FILTER_ORDER';\n\nexport const ownerData = [\n    { id: 'ALL', value: 'All users' },\n    { id: 'ME', value: 'Created by me' },\n    { id: 'OTHERS', value: 'Created by others' },\n];\n\nexport const orderData = [\n    { id: 'NAME:ASC', value: 'Name (asc)' },\n    { id: 'NAME:ASC', value: 'Name (desc)' },\n    { id: 'ITEMS:ASC', value: 'Number of items (asc)' },\n    { id: 'ITEMS:ASC', value: 'Number of items (desc)' },\n    { id: 'CREATED:ASC', value: 'Created date (asc)' },\n    { id: 'CREATED:ASC', value: 'Created date (desc)' },\n];\n\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_NAME = '';\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_OWNER = ownerData[0].id;\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_ORDER = orderData[0].id;\n\nconst name = (state = DEFAULT_STATE_DASHBOARDS_FILTER_NAME, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_NAME:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_NAME\n            );\n        default:\n            return state;\n    }\n};\n\nconst owner = (state = DEFAULT_STATE_DASHBOARDS_FILTER_OWNER, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_OWNER:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_NAME\n            );\n        default:\n            return state;\n    }\n};\n\nconst order = (state = DEFAULT_STATE_DASHBOARDS_FILTER_ORDER, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_ORDER:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_ORDER\n            );\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    name,\n    owner,\n    order,\n});\n\n// selectors\n\nexport const sGetDashboardsFilterRoot = state => state.dashboardsFilter;\n\n// selector dependency level 2\n\nexport const sGetFilterName = state => sGetDashboardsFilterRoot(state).name;\nexport const sGetFilterOwner = state => sGetDashboardsFilterRoot(state).owner;\nexport const sGetFilterOrder = state => sGetDashboardsFilterRoot(state).order;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport i18n from '@dhis2/d2-i18n';\nimport InputField from '@material-ui/core/Input';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { colors } from '@dhis2/ui-core';\n\nimport ClearButton from './ClearButton';\nimport { DEFAULT_STATE_DASHBOARDS_FILTER_NAME } from '../../reducers/dashboardsFilter';\n\nexport const KEYCODE_ENTER = 13;\nexport const KEYCODE_ESCAPE = 27;\n\nconst styles = {\n    filterField: {\n        fontSize: '14px',\n        width: '200px',\n        height: '30px',\n        top: '-4px',\n    },\n    searchIcon: {\n        color: colors.grey700,\n        width: '20px',\n        height: '20px',\n    },\n};\n\nexport class Filter extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            value: DEFAULT_STATE_DASHBOARDS_FILTER_NAME,\n        };\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setState({\n            value: nextProps.name,\n        });\n    }\n\n    setFilterValue = event => {\n        event.preventDefault();\n\n        this.props.onChangeName(event.target.value);\n    };\n\n    handleKeyUp = event => {\n        switch (event.keyCode) {\n            case KEYCODE_ENTER:\n                this.props.onKeypressEnter();\n                break;\n            case KEYCODE_ESCAPE:\n                this.props.onChangeName();\n                break;\n            default:\n                break;\n        }\n    };\n\n    render() {\n        const { classes, name, onChangeName } = this.props;\n\n        const startAdornment = (\n            <InputAdornment position=\"start\">\n                <SearchIcon className={classes.searchIcon} />\n            </InputAdornment>\n        );\n\n        const endAdornment =\n            name !== '' && name !== null ? (\n                <InputAdornment position=\"end\">\n                    <ClearButton onClear={() => onChangeName()} />\n                </InputAdornment>\n            ) : null;\n\n        return (\n            <InputField\n                className={classes.filterField}\n                placeholder={i18n.t('Search for a dashboard')}\n                startAdornment={startAdornment}\n                endAdornment={endAdornment}\n                value={this.state.value}\n                onChange={this.setFilterValue}\n                onKeyUp={this.handleKeyUp}\n            />\n        );\n    }\n}\n\nFilter.propTypes = {\n    classes: PropTypes.object,\n    name: PropTypes.string,\n    onChangeName: PropTypes.func,\n    onKeypressEnter: PropTypes.func,\n};\n\nFilter.defaultProps = {\n    name: '',\n    onChangeName: Function.prototype,\n};\n\nexport default withStyles(styles)(Filter);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport ControlBar from './ControlBar';\nimport arraySort from 'd2-utilizr/lib/arraySort';\nimport PropTypes from 'prop-types';\n\nimport Chip from './DashboardItemChip';\nimport AddCircleIcon from '../../icons/AddCircle';\nimport Filter from './Filter';\nimport ShowMoreButton from './ShowMoreButton';\nimport {\n    FIRST_ROW_PADDING_HEIGHT,\n    MIN_ROW_COUNT,\n    getRowsHeight,\n    getControlBarHeight,\n    getNumRowsFromHeight,\n} from './controlBarDimensions';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { sGetAllDashboards } from '../../reducers/dashboards';\nimport { sGetFilterName } from '../../reducers/dashboardsFilter';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { acSetControlBarUserRows } from '../../actions/controlBar';\nimport { acSetFilterName } from '../../actions/dashboardsFilter';\nimport { orObject, orArray } from '../../modules/util';\nimport { apiPostControlBarRows } from '../../api/controlBar';\n\nimport classes from './styles/DashboardsBar.module.css';\n\nexport const MAX_ROW_COUNT = 10;\n\nexport class DashboardsBar extends Component {\n    state = {\n        rows: MIN_ROW_COUNT,\n    };\n\n    setInitialDashboardState = rows => {\n        this.setState({ rows, isMaxHeight: rows === MAX_ROW_COUNT });\n    };\n\n    componentDidMount() {\n        this.setInitialDashboardState(this.props.userRows);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setInitialDashboardState(nextProps.userRows);\n    }\n\n    onChangeHeight = newHeight => {\n        const adjustedHeight = newHeight - 52; // don't rush the transition to a bigger row count\n        const newRows = Math.max(\n            MIN_ROW_COUNT,\n            getNumRowsFromHeight(adjustedHeight)\n        );\n\n        if (newRows !== this.state.rows) {\n            const newRowCount = Math.min(newRows, MAX_ROW_COUNT);\n\n            this.props.onChangeHeight(newRowCount);\n        }\n    };\n\n    onEndDrag = () => {\n        return apiPostControlBarRows(this.state.rows);\n    };\n\n    onToggleMaxHeight = () => {\n        const rows =\n            this.state.rows === MAX_ROW_COUNT\n                ? this.props.userRows\n                : MAX_ROW_COUNT;\n\n        this.setState({ rows, isMaxHeight: !this.state.isMaxHeight });\n    };\n\n    onSelectDashboard = () => {\n        this.props.history.push(`/${this.props.dashboards[0].id}`);\n    };\n\n    render() {\n        const { dashboards, name, selectedId, onChangeFilterName } = this.props;\n\n        const rowCount = this.state.isMaxHeight\n            ? MAX_ROW_COUNT\n            : this.state.rows;\n        const controlBarHeight = getControlBarHeight(rowCount);\n        const contentWrapperStyle = {\n            padding: `${FIRST_ROW_PADDING_HEIGHT}px 6px 0 6px`,\n            overflowY: this.state.isMaxHeight ? 'auto' : 'hidden',\n            height: getRowsHeight(rowCount) + FIRST_ROW_PADDING_HEIGHT,\n        };\n\n        return (\n            <ControlBar\n                height={controlBarHeight}\n                onChangeHeight={this.onChangeHeight}\n                onEndDrag={this.onEndDrag}\n                editMode={false}\n            >\n                <div style={contentWrapperStyle}>\n                    <div className={classes.leftControls}>\n                        <Link\n                            style={{\n                                display: 'inline-block',\n                                textDecoration: 'none',\n                                marginRight: 10,\n                                position: 'relative',\n                                top: '2px',\n                            }}\n                            to={'/new'}\n                        >\n                            <AddCircleIcon />\n                        </Link>\n                        <Filter\n                            name={name}\n                            onChangeName={onChangeFilterName}\n                            onKeypressEnter={this.onSelectDashboard}\n                        />\n                    </div>\n                    {orArray(dashboards).map(dashboard => (\n                        <Chip\n                            key={dashboard.id}\n                            label={dashboard.displayName}\n                            starred={dashboard.starred}\n                            dashboardId={dashboard.id}\n                            selected={dashboard.id === selectedId}\n                        />\n                    ))}\n                </div>\n                <ShowMoreButton\n                    onClick={this.onToggleMaxHeight}\n                    isMaxHeight={this.state.isMaxHeight}\n                    disabled={this.props.userRows === MAX_ROW_COUNT}\n                />\n            </ControlBar>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    dashboards: sGetAllDashboards(state),\n    name: sGetFilterName(state),\n    userRows: sGetControlBarUserRows(state),\n    selectedId: sGetSelectedId(state),\n});\n\nconst mapDispatchToProps = {\n    onChangeHeight: acSetControlBarUserRows,\n    onChangeFilterName: acSetFilterName,\n};\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const dashboards = Object.values(orObject(stateProps.dashboards));\n    const displayDashboards = arraySort(\n        dashboards.filter(d =>\n            d.displayName.toLowerCase().includes(stateProps.name.toLowerCase())\n        ),\n        'ASC',\n        'displayName'\n    );\n\n    return {\n        ...stateProps,\n        ...ownProps,\n        ...dispatchProps,\n        dashboards: [\n            ...displayDashboards.filter(d => d.starred),\n            ...displayDashboards.filter(d => !d.starred),\n        ],\n    };\n};\n\nDashboardsBar.propTypes = {\n    dashboards: PropTypes.array,\n    history: PropTypes.object,\n    name: PropTypes.string,\n    selectedId: PropTypes.string,\n    userRows: PropTypes.number,\n    onChangeFilterName: PropTypes.func,\n    onChangeHeight: PropTypes.func,\n};\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps,\n        mergeProps\n    )(DashboardsBar)\n);\n","import {\n    SET_DASHBOARDS_FILTER_NAME,\n    SET_DASHBOARDS_FILTER_OWNER,\n    SET_DASHBOARDS_FILTER_ORDER,\n} from '../reducers/dashboardsFilter';\n\n// actions\n\nexport const acSetFilterName = value => ({\n    type: SET_DASHBOARDS_FILTER_NAME,\n    value,\n});\n\nexport const acSetFilterOwner = value => ({\n    type: SET_DASHBOARDS_FILTER_OWNER,\n    value,\n});\n\nexport const acSetFilterOrder = value => ({\n    type: SET_DASHBOARDS_FILTER_ORDER,\n    value,\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport {\n    getTopOffset,\n    MIN_ROW_COUNT,\n} from '../ControlBar/controlBarDimensions';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\n\nconst DashboardVerticalOffset = props => {\n    const rows = props.editMode ? MIN_ROW_COUNT : props.userRows;\n    const marginTop = getTopOffset(rows);\n\n    return <div className=\"page-container-top-margin\" style={{ marginTop }} />;\n};\n\nconst mapStateToProps = state => ({\n    userRows: sGetControlBarUserRows(state),\n});\n\nDashboardVerticalOffset.propTypes = {\n    editMode: PropTypes.bool,\n    userRows: PropTypes.number,\n};\n\nexport default connect(mapStateToProps)(DashboardVerticalOffset);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { MenuItem, colors } from '@dhis2/ui-core';\n\nconst HeaderMenuItem = ({ title }) => (\n    <MenuItem\n        dense\n        key={title}\n        disabled\n        label={\n            <p style={{ color: colors.grey800, fontWeight: '600' }}>{title}</p>\n        }\n    />\n);\n\nHeaderMenuItem.propTypes = {\n    title: PropTypes.string.isRequired,\n};\n\nexport default HeaderMenuItem;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nconst LaunchIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"12\"\n        height=\"12\"\n        fill={colors.grey600}\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z\" />\n    </svg>\n);\n\nLaunchIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default LaunchIcon;\n","import React from 'react';\nimport { MenuItem, colors } from '@dhis2/ui-core';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\n\nimport { getItemIcon } from '../../modules/itemTypes';\nimport LaunchIcon from '../../icons/Launch';\n\nimport classes from './styles/ContentMenuItem.module.css';\n\nconst LaunchLink = ({ url }) => (\n    <a\n        onClick={e => e.stopPropagation()}\n        className={classes.launchLink}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        href={url}\n    >\n        <LaunchIcon />\n    </a>\n);\n\nLaunchLink.propTypes = {\n    url: PropTypes.string,\n};\n\nconst InsertButton = () => (\n    <button className={classes.buttonInsert}>{i18n.t('Insert')}</button>\n);\n\nconst ContentMenuItem = ({ type, name, onInsert, url }) => {\n    const ItemIcon = getItemIcon(type);\n\n    return (\n        <MenuItem\n            dense\n            onClick={onInsert}\n            label={\n                <div className={classes.menuItem}>\n                    <div className={classes.label}>\n                        <ItemIcon\n                            style={{ margin: '6px', fill: colors.grey600 }}\n                        />\n                        <span>{name}</span>\n                        {url ? <LaunchLink url={url} /> : null}\n                    </div>\n                    <InsertButton />\n                </div>\n            }\n        />\n    );\n};\n\nContentMenuItem.propTypes = {\n    name: PropTypes.string,\n    type: PropTypes.string,\n    url: PropTypes.string,\n    onInsert: PropTypes.func,\n};\n\nexport default ContentMenuItem;\n","import i18n from '@dhis2/d2-i18n';\nimport {\n    spacerContent,\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_CHART,\n    EVENT_REPORT,\n    USERS,\n    REPORTS,\n    RESOURCES,\n    APP,\n    MESSAGES,\n    TEXT,\n    SPACER,\n} from '../../modules/itemTypes';\n\nexport const singleItems = [\n    {\n        id: 'additional',\n        header: i18n.t('Additional items'),\n        items: [\n            {\n                type: TEXT,\n                name: i18n.t('Text box'),\n                content: '',\n            },\n            {\n                type: MESSAGES,\n                name: i18n.t('Messages'),\n                content: 'true',\n            },\n            {\n                type: SPACER,\n                name: i18n.t('Spacer'),\n                content: spacerContent,\n            },\n        ],\n    },\n];\n\n// categorizedItems are grouped in the item selector menu\nexport const categorizedItems = [\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_REPORT,\n    EVENT_CHART,\n    USERS,\n    REPORTS,\n    RESOURCES,\n    APP,\n];\n\n// listItemTypes are included in a single dashboard item\nexport const listItemTypes = [REPORTS, RESOURCES, USERS];\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { MenuItem, Divider } from '@dhis2/ui-core';\n\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\n\nimport { tAddListItemContent } from './actions';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\nimport { getItemUrl, APP } from '../../modules/itemTypes';\nimport { categorizedItems, listItemTypes } from './selectableItems';\n\nimport classes from './styles/CategorizedMenuGroup.module.css';\n\nclass CategorizedMenuGroup extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seeMore: false,\n        };\n    }\n\n    addItem = item => () => {\n        const { type, acAddDashboardItem, tAddListItemContent } = this.props;\n\n        if (type === APP) {\n            acAddDashboardItem({ type, content: item.key });\n        } else {\n            const newItem = {\n                id: item.id,\n                name: item.displayName || item.name,\n            };\n\n            if (listItemTypes.includes(type)) {\n                tAddListItemContent(type, newItem);\n            } else {\n                acAddDashboardItem({ type, content: newItem });\n            }\n        }\n    };\n\n    toggleSeeMore = () => {\n        this.setState({ seeMore: !this.state.seeMore });\n\n        this.props.onChangeItemsLimit(this.props.type);\n    };\n\n    render() {\n        const { title, type, items, hasMore } = this.props;\n        return (\n            <Fragment>\n                <HeaderMenuItem title={title} />\n                {items.map(item => {\n                    const itemUrl = getItemUrl(type, item, this.context.d2);\n                    return (\n                        <ContentMenuItem\n                            key={item.id || item.key}\n                            type={type}\n                            name={item.displayName || item.name}\n                            onInsert={this.addItem(item)}\n                            url={itemUrl}\n                        />\n                    );\n                })}\n                {hasMore ? (\n                    <MenuItem\n                        dense\n                        key={`showmore${title}`}\n                        onClick={this.toggleSeeMore}\n                        label={\n                            <button className={classes.showMoreButton}>\n                                {this.state.seeMore\n                                    ? i18n.t('Show fewer')\n                                    : i18n.t('Show more')}\n                            </button>\n                        }\n                    />\n                ) : null}\n                <Divider margin=\"8px 0px\" />\n            </Fragment>\n        );\n    }\n}\n\nCategorizedMenuGroup.propTypes = {\n    items: PropTypes.array.isRequired,\n    title: PropTypes.string.isRequired,\n    type: PropTypes.oneOf(categorizedItems).isRequired,\n    onChangeItemsLimit: PropTypes.func.isRequired,\n    acAddDashboardItem: PropTypes.func,\n    hasMore: PropTypes.bool,\n    tAddListItemContent: PropTypes.func,\n};\n\nCategorizedMenuGroup.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nexport default connect(\n    null,\n    {\n        acAddDashboardItem,\n        tAddListItemContent,\n    }\n)(CategorizedMenuGroup);\n","import { sGetEditDashboardRoot } from '../../reducers/editDashboard';\nimport { itemTypeMap } from '../../modules/itemTypes';\nimport {\n    acAddDashboardItem,\n    acUpdateDashboardItem,\n} from '../../actions/editDashboard';\n\nexport const tAddListItemContent = (type, content) => (dispatch, getState) => {\n    const state = getState();\n    const listItemType = itemTypeMap[type].propName;\n    const dashboardItems = sGetEditDashboardRoot(state).dashboardItems;\n    const dashboardItemIndex = dashboardItems.findIndex(\n        item => item.type === type\n    );\n    let dashboardItem;\n\n    // Reports/Resources/Users dashboard item type already present in dashboard\n    if (dashboardItemIndex > -1) {\n        dashboardItem = dashboardItems[dashboardItemIndex];\n        dashboardItem[listItemType].push(content);\n\n        dispatch(acUpdateDashboardItem(dashboardItem));\n    } else {\n        dashboardItem = {\n            type: type,\n            content: [content],\n        };\n\n        dispatch(acAddDashboardItem(dashboardItem));\n    }\n};\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\n\nexport const SinglesMenuGroup = ({ acAddDashboardItem, category }) => {\n    const addToDashboard = ({ type, content }) => () => {\n        acAddDashboardItem({ type, content });\n    };\n\n    return (\n        <Fragment>\n            <HeaderMenuItem title={category.header} />\n            {category.items.map(item => (\n                <ContentMenuItem\n                    key={item.type}\n                    type={item.type}\n                    name={item.name}\n                    onInsert={addToDashboard(item)}\n                />\n            ))}\n        </Fragment>\n    );\n};\n\nSinglesMenuGroup.propTypes = {\n    acAddDashboardItem: PropTypes.func,\n    category: PropTypes.object,\n};\n\nexport default connect(\n    null,\n    { acAddDashboardItem }\n)(SinglesMenuGroup);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport Popover from '@material-ui/core/Popover';\nimport { InputField, Menu } from '@dhis2/ui-core';\n\nimport CategorizedMenuGroup from './CategorizedMenuGroup';\nimport SinglesMenuGroup from './SinglesMenuGroup';\nimport { singleItems, categorizedItems } from './selectableItems';\nimport { itemTypeMap } from '../../modules/itemTypes';\n\nimport './styles/ItemSelector.css';\n\nconst ItemSearchField = props => (\n    <InputField\n        name=\"Dashboard item search\"\n        label={i18n.t('Search for items to add to this dashboard')}\n        type=\"text\"\n        onChange={props.onChange}\n        onFocus={props.onFocus}\n        value={props.value}\n    />\n);\n\nclass ItemSelector extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n            open: false,\n            maxOptions: new Set(),\n            items: undefined,\n            filter: '',\n        };\n    }\n\n    closeList = () => {\n        this.setState({ open: false, filter: '' });\n    };\n\n    openList = (_, event) => {\n        this.fetchItems();\n\n        this.setState({\n            anchorEl: event.currentTarget,\n            open: true,\n        });\n    };\n\n    setFilter = (_, event) => {\n        this.setState({ filter: event.target.value }, this.fetchItems);\n    };\n\n    getCategorizedMenuGroups = () =>\n        categorizedItems\n            .filter(type => {\n                const itemType = itemTypeMap[type];\n                return (\n                    this.state.items && this.state.items[itemType.endPointName]\n                );\n            })\n            .map(type => {\n                const itemType = itemTypeMap[type];\n                const allItems = this.state.items[itemType.endPointName];\n                const hasMore = allItems.length > 5;\n                const items = this.state.maxOptions.has(itemType.id)\n                    ? allItems\n                    : allItems.slice(0, 5);\n\n                return (\n                    <CategorizedMenuGroup\n                        key={type}\n                        type={type}\n                        title={itemType.pluralTitle}\n                        items={items}\n                        onChangeItemsLimit={this.fetchItems}\n                        hasMore={hasMore}\n                    />\n                );\n            });\n\n    getSinglesMenuGroups = () =>\n        singleItems.map(category => (\n            <SinglesMenuGroup key={category.id} category={category} />\n        ));\n\n    getMenuGroups = () =>\n        this.getCategorizedMenuGroups().concat(this.getSinglesMenuGroups());\n\n    fetchItems = async type => {\n        if (type) {\n            const maxOptions = this.state.maxOptions;\n\n            if (maxOptions.has(type)) {\n                maxOptions.delete(type);\n            } else {\n                maxOptions.add(type);\n            }\n\n            this.setState({ maxOptions });\n        } else {\n            this.setState({\n                maxOptions: new Set(),\n            });\n        }\n\n        let queryString = '?count=6';\n        if ([...this.state.maxOptions.values()].length) {\n            queryString +=\n                '&max=' + [...this.state.maxOptions.values()].join('&max=');\n        }\n\n        const filter = this.state.filter ? `/${this.state.filter}` : '';\n\n        this.context.d2.Api.getApi()\n            .get(`dashboards/q${filter}${queryString}`)\n            .then(response => this.setState({ items: response }))\n            .catch(console.error);\n    };\n\n    render() {\n        return (\n            <Fragment>\n                <ItemSearchField\n                    value={this.state.filter}\n                    onChange={this.setFilter}\n                    onFocus={this.openList}\n                />\n                <Popover\n                    className=\"dashboard-item-selector\"\n                    open={this.state.open}\n                    onClose={this.closeList}\n                    anchorEl={this.state.anchorEl}\n                    anchorOrigin={{ horizontal: 'left', vertical: 'bottom' }}\n                    transformOrigin={{ horizontal: 'left', vertical: 'top' }}\n                    style={{ height: '70vh' }}\n                    PaperProps={{ style: { width: '700px' } }}\n                    disableAutoFocus={true}\n                    disableRestoreFocus={true}\n                >\n                    <Menu>{this.getMenuGroups()}</Menu>\n                </Popover>\n            </Fragment>\n        );\n    }\n}\n\nItemSearchField.propTypes = {\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n    onFocus: PropTypes.func,\n};\n\nItemSelector.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nexport default ItemSelector;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport i18n from '@dhis2/d2-i18n';\nimport { InputField, TextAreaField } from '@dhis2/ui-core';\n\nimport ItemSelector from '../ItemSelector/ItemSelector';\nimport {\n    acSetDashboardTitle,\n    acSetDashboardDescription,\n} from '../../actions/editDashboard';\nimport { orObject } from '../../modules/util';\nimport { sGetEditDashboardRoot } from '../../reducers/editDashboard';\n\nconst styles = {\n    section: { display: 'flex', justifyContent: 'space-between' },\n    titleDescription: {\n        flex: '3',\n        marginRight: '50px',\n    },\n    title: {\n        display: 'block',\n        clear: 'both',\n    },\n    description: {\n        display: 'block',\n        clear: 'both',\n        marginTop: '15px',\n    },\n    underline: {\n        '&::before': {\n            borderBottom: `none`,\n        },\n        '&:hover::before': {\n            borderBottom: `none!important`,\n        },\n    },\n    input: {\n        backgroundColor: 'rgba(0, 0, 10, 0.05)',\n        borderRadius: '4px',\n        width: '100%',\n        '&:hover': {\n            backgroundColor: 'rgba(0, 0, 10, 0.08)',\n        },\n    },\n    itemSelector: {\n        flex: '2',\n        position: 'relative',\n    },\n};\n\nexport const EditTitleBar = ({\n    name,\n    description,\n    onChangeTitle,\n    onChangeDescription,\n    classes,\n}) => {\n    const updateTitle = (_, e) => {\n        onChangeTitle(e.target.value);\n    };\n\n    const updateDescription = (_, e) => {\n        onChangeDescription(e.target.value);\n    };\n\n    return (\n        <section className={classes.section}>\n            <div className={classes.titleDescription}>\n                <InputField\n                    className={classes.title}\n                    name=\"Dashboard title input\"\n                    label={i18n.t('Dashboard title')}\n                    type=\"text\"\n                    onChange={updateTitle}\n                    value={name}\n                />\n                <TextAreaField\n                    className={classes.description}\n                    name=\"Dashboard description input\"\n                    label={i18n.t('Dashboard description')}\n                    onChange={updateDescription}\n                    value={description}\n                />\n            </div>\n            <div className={classes.itemSelector}>\n                <ItemSelector />\n            </div>\n        </section>\n    );\n};\n\nconst mapStateToProps = state => {\n    const selectedDashboard = orObject(sGetEditDashboardRoot(state));\n\n    return {\n        name: selectedDashboard.name,\n        description: selectedDashboard.description,\n    };\n};\n\nconst mapDispatchToProps = {\n    onChangeTitle: acSetDashboardTitle,\n    onChangeDescription: acSetDashboardDescription,\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(EditTitleBar));\n\nEditTitleBar.propTypes = {\n    onChangeDescription: PropTypes.func.isRequired,\n    onChangeTitle: PropTypes.func.isRequired,\n    classes: PropTypes.object,\n    description: PropTypes.string,\n    name: PropTypes.string,\n};\n\nEditTitleBar.defaultProps = {\n    name: '',\n    description: '',\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Button } from '@dhis2/ui-core';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport i18n from '@dhis2/d2-i18n';\n\nimport {\n    PeriodDimension,\n    DynamicDimension,\n    OrgUnitDimension,\n    DIMENSION_ID_PERIOD,\n    DIMENSION_ID_ORGUNIT,\n} from '@dhis2/analytics';\n\nconst peId = DIMENSION_ID_PERIOD;\nconst ouId = DIMENSION_ID_ORGUNIT;\n\nclass FilterDialog extends Component {\n    onConfirm = id => () => this.props.onConfirm(id);\n\n    dialogContent() {\n        const { displayNameProperty, dimension, selectedItems } = this.props;\n        const dialogId = dimension.id;\n\n        const commonProps = {\n            d2: this.context.d2,\n            onSelect: this.props.onSelect,\n            onDeselect: this.props.onDeselect,\n            onReorder: this.props.onReorder,\n        };\n\n        switch (dialogId) {\n            case peId: {\n                return (\n                    <PeriodDimension\n                        selectedPeriods={selectedItems}\n                        {...commonProps}\n                    />\n                );\n            }\n            case ouId:\n                return (\n                    <OrgUnitDimension\n                        displayNameProperty={displayNameProperty}\n                        ouItems={selectedItems}\n                        {...commonProps}\n                    />\n                );\n            default:\n                return (\n                    <DynamicDimension\n                        selectedItems={selectedItems}\n                        dialogId={dialogId}\n                        dialogTitle={dimension.name}\n                        {...commonProps}\n                    />\n                );\n        }\n    }\n\n    render() {\n        const { dimension, onClose } = this.props;\n        const dialogId = dimension.id;\n\n        return (\n            <Dialog\n                open={!!dialogId}\n                maxWidth=\"lg\"\n                disableEnforceFocus\n                onClose={onClose}\n            >\n                {dialogId && this.dialogContent()}\n                <DialogActions>\n                    <Button kind=\"secondary\" onClick={onClose}>\n                        {i18n.t('Cancel')}\n                    </Button>\n                    <Button kind=\"primary\" onClick={this.onConfirm(dialogId)}>\n                        {i18n.t('Confirm')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nFilterDialog.propTypes = {\n    dimension: PropTypes.object,\n    displayNameProperty: PropTypes.string,\n    selectedItems: PropTypes.array,\n    onClose: PropTypes.func,\n    onConfirm: PropTypes.func,\n    onDeselect: PropTypes.func,\n    onReorder: PropTypes.func,\n    onSelect: PropTypes.func,\n};\n\nFilterDialog.contextTypes = {\n    d2: PropTypes.object,\n};\n\nexport default FilterDialog;\n","export const SET_ACTIVE_MODAL_DIMENSION = 'SET_ACTIVE_MODAL_DIMENSION';\nexport const CLEAR_ACTIVE_MODAL_DIMENSION = 'CLEAR_ACTIVE_MODAL_DIMENSION';\n\nexport const DEFAULT_STATE_ACTIVE_MODAL_DIMENSION = {};\n\nexport default (state = DEFAULT_STATE_ACTIVE_MODAL_DIMENSION, action) => {\n    switch (action.type) {\n        case SET_ACTIVE_MODAL_DIMENSION: {\n            return action.value;\n        }\n        case CLEAR_ACTIVE_MODAL_DIMENSION: {\n            return DEFAULT_STATE_ACTIVE_MODAL_DIMENSION;\n        }\n        default:\n            return state;\n    }\n};\n\nexport const sGetActiveModalDimension = state => state.activeModalDimension;\n","import {\n    SET_ACTIVE_MODAL_DIMENSION,\n    CLEAR_ACTIVE_MODAL_DIMENSION,\n} from '../reducers/activeModalDimension';\n\nexport const acSetActiveModalDimension = value => ({\n    type: SET_ACTIVE_MODAL_DIMENSION,\n    value,\n});\n\nexport const acClearActiveModalDimension = () => ({\n    type: CLEAR_ACTIVE_MODAL_DIMENSION,\n});\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Popover from '@material-ui/core/Popover';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport { withTheme } from '@material-ui/core/styles';\n\nimport i18n from '@dhis2/d2-i18n';\nimport { DimensionsPanel } from '@dhis2/analytics';\n\nimport { Button } from '@dhis2/ui-core';\nimport FilterDialog from './FilterDialog';\n\nimport { sGetSettingsDisplayNameProperty } from '../../reducers/settings';\nimport { sGetActiveModalDimension } from '../../reducers/activeModalDimension';\nimport { sGetDimensions } from '../../reducers/dimensions';\nimport { sGetFiltersKeys } from '../../reducers/itemFilters';\nimport { sGetEditItemFiltersRoot } from '../../reducers/editItemFilters';\nimport { acAddItemFilter, acRemoveItemFilter } from '../../actions/itemFilters';\nimport {\n    acRemoveEditItemFilter,\n    acSetEditItemFilters,\n} from '../../actions/editItemFilters';\nimport {\n    acClearActiveModalDimension,\n    acSetActiveModalDimension,\n} from '../../actions/activeModalDimension';\n\nclass FilterSelector extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n        };\n    }\n\n    openPanel = (_, event) => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    closePanel = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    closeDialog = () => {\n        this.setState({ anchorEl: null });\n\n        this.props.clearActiveModalDimension();\n    };\n\n    selectDimension = id => {\n        this.props.setActiveModalDimension(\n            this.props.dimensions.find(dimension => dimension.id === id)\n        );\n    };\n\n    onSelectItems = ({ dimensionId, items }) => {\n        this.props.setEditItemFilters({\n            ...this.props.selectedItems,\n            [dimensionId]: items,\n        });\n    };\n\n    onDeselectItems = ({ dimensionId, itemIdsToRemove }) => {\n        const oldList = this.props.selectedItems[dimensionId] || [];\n        const newList = oldList.filter(\n            item => !itemIdsToRemove.includes(item.id)\n        );\n\n        if (newList.length) {\n            this.props.setEditItemFilters({\n                ...this.props.selectedItems,\n                [dimensionId]: newList,\n            });\n        } else {\n            this.props.removeEditItemFilter(dimensionId);\n        }\n    };\n\n    onReorderItems = ({ dimensionId, itemIds }) => {\n        const oldList = this.props.selectedItems[dimensionId] || [];\n        const reorderedList = itemIds.map(id =>\n            oldList.find(item => item.id === id)\n        );\n\n        this.props.setEditItemFilters({\n            ...this.props.selectedItems,\n            [dimensionId]: reorderedList,\n        });\n    };\n\n    saveFilter = id => {\n        const filterItems = this.props.selectedItems[id];\n\n        if (filterItems && filterItems.length) {\n            this.props.addItemFilter({\n                id,\n                value: [...filterItems],\n            });\n        } else {\n            this.props.removeItemFilter(id);\n        }\n\n        this.closeDialog();\n    };\n\n    render() {\n        const {\n            theme,\n            displayNameProperty,\n            dimension,\n            dimensions,\n            selectedDimensions,\n            selectedItems,\n        } = this.props;\n\n        return (\n            <Fragment>\n                <Button onClick={this.openPanel}>\n                    {i18n.t('Add filter')}\n                    <ArrowDropDownIcon />\n                </Button>\n                <Popover\n                    open={Boolean(this.state.anchorEl)}\n                    anchorEl={this.state.anchorEl}\n                    anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\n                    onClose={this.closePanel}\n                    style={{\n                        height: '100%',\n                        fontFamily: theme.typography.fontFamily,\n                    }}\n                >\n                    <DimensionsPanel\n                        dimensions={dimensions}\n                        onDimensionClick={this.selectDimension}\n                        selectedIds={selectedDimensions}\n                    />\n                </Popover>\n                {dimension ? (\n                    <FilterDialog\n                        displayNameProperty={displayNameProperty}\n                        dimension={dimension}\n                        selectedItems={selectedItems[dimension.id] || []}\n                        onSelect={this.onSelectItems}\n                        onDeselect={this.onDeselectItems}\n                        onReorder={this.onReorderItems}\n                        onClose={this.closeDialog}\n                        onConfirm={this.saveFilter}\n                    />\n                ) : null}\n            </Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    displayNameProperty: sGetSettingsDisplayNameProperty(state),\n    dimension: sGetActiveModalDimension(state),\n    dimensions: sGetDimensions(state),\n    selectedDimensions: sGetFiltersKeys(state),\n    selectedItems: sGetEditItemFiltersRoot(state),\n});\n\nFilterSelector.propTypes = {\n    addItemFilter: PropTypes.func,\n    clearActiveModalDimension: PropTypes.func,\n    dimension: PropTypes.object,\n    dimensions: PropTypes.object,\n    displayNameProperty: PropTypes.string,\n    removeEditItemFilter: PropTypes.func,\n    removeItemFilter: PropTypes.func,\n    selectedDimensions: PropTypes.array,\n    selectedItems: PropTypes.object,\n    setActiveModalDimension: PropTypes.func,\n    setEditItemFilters: PropTypes.func,\n    theme: PropTypes.object,\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        clearActiveModalDimension: acClearActiveModalDimension,\n        setActiveModalDimension: acSetActiveModalDimension,\n        addItemFilter: acAddItemFilter,\n        removeItemFilter: acRemoveItemFilter,\n        removeEditItemFilter: acRemoveEditItemFilter,\n        setEditItemFilters: acSetEditItemFilters,\n    }\n)(withTheme()(FilterSelector));\n","import React, { Component } from 'react';\nimport InfoOutlineIcon from '@material-ui/icons/InfoOutlined';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nclass Info extends Component {\n    show = false;\n\n    toggle() {\n        this.show = !this.show;\n        return this.show;\n    }\n\n    render() {\n        return (\n            <div onClick={() => this.props.onClick(this.toggle())}>\n                <InfoOutlineIcon style={{ fill: colors.grey600 }} />\n            </div>\n        );\n    }\n}\n\nInfo.propTypes = {\n    onClick: PropTypes.func,\n};\n\nexport default Info;\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport SharingDialog from '@dhis2/d2-ui-sharing-dialog';\nimport Star from '@material-ui/icons/Star';\nimport StarBorder from '@material-ui/icons/StarBorder';\n\nimport { orObject } from '../../modules/util';\nimport { tStarDashboard } from '../../actions/dashboards';\nimport { acSetSelectedShowDescription } from '../../actions/selected';\nimport FilterSelector from '../ItemFilter/FilterSelector';\nimport { Button } from '@dhis2/ui-core';\nimport Info from './Info';\nimport {\n    sGetSelectedId,\n    sGetSelectedShowDescription,\n} from '../../reducers/selected';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n} from '../../reducers/dashboards';\nimport { colors } from '@dhis2/ui-core';\n\nconst NO_DESCRIPTION = i18n.t('No description');\n\nconst styles = {\n    actions: {\n        display: 'flex',\n        alignItems: 'center',\n        marginLeft: '20px',\n    },\n    starIcon: {\n        fill: colors.grey600,\n    },\n    textButton: {\n        minWidth: '30px',\n        top: '1px',\n    },\n    editLink: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        textDecoration: 'none',\n        marginRight: '4px',\n    },\n    titleBar: {\n        display: 'flex',\n        alignItems: 'flex-start',\n    },\n    titleBarIcon: {\n        marginLeft: 5,\n        position: 'relative',\n        top: 1,\n        cursor: 'pointer',\n    },\n};\n\nclass ViewTitleBar extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            sharingDialogIsOpen: false,\n        };\n    }\n\n    toggleSharingDialog = () =>\n        this.setState({ sharingDialogIsOpen: !this.state.sharingDialogIsOpen });\n\n    render() {\n        const {\n            id,\n            name,\n            description,\n            access,\n            style,\n            showDescription,\n            starred,\n            onStarClick,\n            onInfoClick,\n            classes,\n        } = this.props;\n\n        const titleStyle = Object.assign({}, style.title, {\n            cursor: 'default',\n            userSelect: 'text',\n            top: '7px',\n        });\n\n        const StarIcon = starred ? Star : StarBorder;\n\n        return (\n            <Fragment>\n                <div className={classes.titleBar}>\n                    <span style={titleStyle}>{name}</span>\n                    <div className={classes.actions}>\n                        <div\n                            className={classes.titleBarIcon}\n                            onClick={onStarClick}\n                        >\n                            <StarIcon className={classes.starIcon} />\n                        </div>\n                        <div className={classes.titleBarIcon}>\n                            <Info onClick={onInfoClick} />\n                        </div>\n                        <div style={{ marginLeft: '10px' }}>\n                            {access.update ? (\n                                <Link\n                                    className={classes.editLink}\n                                    to={`/${id}/edit`}\n                                >\n                                    <Button>{i18n.t('Edit')}</Button>\n                                </Link>\n                            ) : null}\n                            {access.manage ? (\n                                <span style={{ marginRight: '4px' }}>\n                                    <Button onClick={this.toggleSharingDialog}>\n                                        {i18n.t('Share')}\n                                    </Button>\n                                </span>\n                            ) : null}\n                            <span style={{ marginRight: '4px' }}>\n                                <FilterSelector />\n                            </span>\n                        </div>\n                    </div>\n                </div>\n                {showDescription ? (\n                    <div\n                        className=\"dashboard-description\"\n                        style={Object.assign(\n                            { paddingTop: '5px', paddingBottom: '5px' },\n                            style.description,\n                            !description ? { color: '#888' } : {}\n                        )}\n                    >\n                        {description || NO_DESCRIPTION}\n                    </div>\n                ) : null}\n                {id ? (\n                    <SharingDialog\n                        d2={this.context.d2}\n                        id={id}\n                        type=\"dashboard\"\n                        open={this.state.sharingDialogIsOpen}\n                        onRequestClose={this.toggleSharingDialog}\n                    />\n                ) : null}\n            </Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    const id = sGetSelectedId(state);\n    const dashboard = orObject(sGetDashboardById(state, id));\n\n    return {\n        id,\n        name: dashboard.displayName,\n        description: dashboard.displayDescription,\n        dashboardItems: sGetDashboardItems(state),\n        showDescription: sGetSelectedShowDescription(state),\n        starred: dashboard.starred,\n        access: orObject(dashboard.access),\n    };\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const { id, starred, showDescription } = stateProps;\n    const { dispatch } = dispatchProps;\n\n    return {\n        ...stateProps,\n        ...ownProps,\n        onStarClick: () => dispatch(tStarDashboard(id, !starred)),\n        onInfoClick: () =>\n            dispatch(acSetSelectedShowDescription(!showDescription)),\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    null,\n    mergeProps\n)(withStyles(styles)(ViewTitleBar));\n\nViewTitleBar.propTypes = {\n    access: PropTypes.object,\n    classes: PropTypes.object,\n    description: PropTypes.string,\n    id: PropTypes.string,\n    name: PropTypes.string,\n    showDescription: PropTypes.bool,\n    starred: PropTypes.bool,\n    style: PropTypes.object,\n    onInfoClick: PropTypes.func,\n    onStarClick: PropTypes.func,\n};\n\nViewTitleBar.defaultProps = {\n    name: '',\n    description: '',\n    starred: false,\n    showDescription: false,\n    onInfoClick: null,\n};\n\nViewTitleBar.contextTypes = {\n    d2: PropTypes.object,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { colors } from '@dhis2/ui-core';\nimport EditTitleBar from './EditTitleBar';\nimport ViewTitleBar from './ViewTitleBar';\n\nimport './TitleBar.css';\n\nconst style = {\n    title: {\n        position: 'relative',\n        fontSize: 21,\n        fontWeight: 500,\n        color: colors.black,\n        minWidth: 50,\n    },\n    description: {\n        fontSize: 14,\n        color: colors.grey800,\n    },\n};\n\nconst TitleBar = ({ edit }) => {\n    return (\n        <div\n            className=\"titlebar-wrapper\"\n            style={{\n                padding: '20px 15px 5px 10px',\n            }}\n        >\n            {edit ? (\n                <EditTitleBar style={style} />\n            ) : (\n                <ViewTitleBar style={style} />\n            )}\n        </div>\n    );\n};\n\nTitleBar.propTypes = {\n    edit: PropTypes.bool,\n};\n\nexport default TitleBar;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport i18n from '@dhis2/d2-i18n';\n\nimport * as pluginManager from './plugin';\nimport { getBaseUrl, orObject } from '../../../modules/util';\nimport { getGridItemDomId } from '../../ItemGrid/gridUtil';\n\nconst pluginCredentials = d2 => {\n    return {\n        baseUrl: getBaseUrl(d2),\n        auth: d2.Api.getApi().defaultHeaders.Authorization,\n    };\n};\n\nclass DefaultPlugin extends Component {\n    pluginCredentials = null;\n\n    constructor(props, context) {\n        super(props);\n\n        this.d2 = context.d2;\n    }\n\n    shouldPluginReload = prevProps => {\n        // TODO - fix this hack, to handle bug with multiple\n        // rerendering while switching between dashboards.\n        //\n        // To determine if the rendering is happening because of a\n        // dashboard switch, check if the item reference has changed.\n        const reloadAllowed = this.props.item === prevProps.item;\n\n        const filtersChanged = prevProps.itemFilters !== this.props.itemFilters;\n        const vis = orObject(this.props.visualization);\n        const prevVis = orObject(prevProps.visualization);\n        const visChanged =\n            vis.id !== prevVis.id || vis.activeType !== prevVis.activeType;\n\n        return reloadAllowed && (visChanged || filtersChanged);\n    };\n\n    reloadPlugin = prevProps => {\n        if (\n            pluginManager.pluginIsAvailable(\n                this.props.item,\n                this.props.visualization\n            ) &&\n            this.shouldPluginReload(prevProps)\n        ) {\n            const prevVis = orObject(prevProps.visualization);\n            const currentVis = this.props.visualization;\n\n            const useActiveType =\n                currentVis.activeType !== prevVis.activeType ||\n                currentVis.activeType !== this.props.item.type;\n\n            if (\n                useActiveType ||\n                this.props.itemFilters !== prevProps.itemFilters\n            ) {\n                pluginManager.unmount(\n                    this.props.item,\n                    prevVis.activeType || this.props.item.type\n                );\n\n                pluginManager.load(this.props.item, this.props.visualization, {\n                    credentials: this.pluginCredentials,\n                    activeType: useActiveType ? currentVis.activeType : null,\n                });\n            }\n        }\n    };\n\n    componentDidMount() {\n        this.pluginCredentials = pluginCredentials(this.d2);\n\n        if (\n            pluginManager.pluginIsAvailable(\n                this.props.item,\n                this.props.visualization\n            )\n        ) {\n            pluginManager.load(this.props.item, this.props.visualization, {\n                credentials: this.pluginCredentials,\n                activeType: !this.props.editMode ? this.getActiveType() : null,\n            });\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        this.reloadPlugin(prevProps);\n    }\n\n    getActiveType = () =>\n        this.props.visualization.activeType || this.props.item.type;\n\n    render() {\n        const { classes, item, visualization, style } = this.props;\n        const pluginIsAvailable = pluginManager.pluginIsAvailable(\n            item,\n            visualization\n        );\n\n        return pluginIsAvailable ? (\n            <div id={getGridItemDomId(item.id)} style={style} />\n        ) : (\n            <div className={classes.textDiv}>\n                {i18n.t('Unable to load the plugin for this item')}\n            </div>\n        );\n    }\n}\n\nDefaultPlugin.contextTypes = {\n    d2: PropTypes.object,\n};\n\nDefaultPlugin.propTypes = {\n    classes: PropTypes.object,\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    itemFilters: PropTypes.object,\n    style: PropTypes.object,\n    visualization: PropTypes.object,\n};\n\nDefaultPlugin.defaultProps = {\n    style: {},\n    item: {},\n    itemFilters: {},\n    visualization: {},\n};\n\nexport default DefaultPlugin;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const HEADER_HEIGHT = 45;\n\nconst ItemHeader = props => {\n    const { title, actionButtons, editMode } = props;\n\n    return (\n        <div className=\"dashboard-item-header\">\n            <div\n                className=\"dashboard-item-header-title\"\n                style={{ userSelect: editMode ? 'none' : 'text' }}\n            >\n                {title}\n            </div>\n            {actionButtons}\n        </div>\n    );\n};\n\nItemHeader.propTypes = {\n    actionButtons: PropTypes.node,\n    editMode: PropTypes.bool,\n    title: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n};\n\nexport default ItemHeader;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { colors } from '@dhis2/ui-core';\nimport { getId } from './plugin';\nimport InterpretationsComponent from '@dhis2/d2-ui-interpretations';\n\nconst style = {\n    scrollContainer: {\n        overflowY: 'auto',\n        height: '340px',\n    },\n    line: {\n        margin: '-1px 0px 0px',\n        height: '1px',\n        border: 'none',\n        backgroundColor: colors.grey100,\n    },\n};\n\nclass ItemFooter extends Component {\n    render() {\n        const objectId = getId(this.props.item);\n\n        return (\n            <div className=\"dashboard-item-footer\">\n                <hr style={style.line} />\n                <div style={style.scrollContainer}>\n                    <InterpretationsComponent\n                        d2={this.context.d2}\n                        item={this.props.item}\n                        type={this.props.item.type.toLowerCase()}\n                        id={objectId}\n                        appName=\"dashboard\"\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nItemFooter.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nItemFooter.propTypes = {\n    item: PropTypes.object.isRequired,\n};\n\nexport default ItemFooter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './ItemHeaderButton.css';\n\nconst ItemHeaderButton = ({ disabled, onClick, children, style }) => {\n    return (\n        <button\n            disabled={disabled}\n            type=\"button\"\n            className=\"item-action-button\"\n            style={style}\n            onClick={onClick}\n        >\n            {children}\n        </button>\n    );\n};\n\nItemHeaderButton.propTypes = {\n    children: PropTypes.node,\n    disabled: PropTypes.bool,\n    style: PropTypes.object,\n    onClick: PropTypes.func,\n};\n\nexport default ItemHeaderButton;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport MessageIcon from '@material-ui/icons/Message';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\n\nimport { extractFavorite } from './plugin';\nimport ItemHeaderButton from '../ItemHeaderButton';\nimport {\n    VISUALIZATION_TYPE_TABLE,\n    VISUALIZATION_TYPE_CHART,\n    VISUALIZATION_TYPE_MAP,\n    itemTypeMap,\n    CHART,\n    MAP,\n    REPORT_TABLE,\n    EVENT_CHART,\n    EVENT_REPORT,\n    DOMAIN_TYPE_AGGREGATE,\n} from '../../../modules/itemTypes';\nimport { colors, theme } from '@dhis2/ui-core';\nimport { isSingleValue } from '@dhis2/analytics';\n\nconst style = {\n    iconBase: {\n        width: '24px',\n        height: '24px',\n        fill: colors.grey500,\n    },\n    buttonBase: {\n        padding: '5px 6px 3px 6px',\n    },\n    buttonDisabled: {\n        padding: '5px 6px 3px 6px',\n        opacity: 0.5,\n        cursor: 'unset',\n    },\n    toggleFooterPadding: {\n        padding: '7px 6px 1px 6px',\n    },\n    border: {\n        borderRadius: '2px',\n        border: `1px solid ${colors.grey200}`,\n    },\n};\n\nconst baseStyle = {\n    icon: style.iconBase,\n    container: style.buttonBase,\n};\n\nconst disabledStyle = {\n    icon: style.iconBase,\n    container: style.buttonDisabled,\n};\n\nconst activeStyle = {\n    icon: { ...style.iconBase, fill: theme.primary800 },\n    container: {\n        ...style.buttonBase,\n        backgroundColor: theme.primary100,\n    },\n};\n\nconst inactiveStyle = disabled => (disabled ? disabledStyle : baseStyle);\n\nconst tableBtnStyle = (activeType, disabled) =>\n    [REPORT_TABLE, EVENT_REPORT].includes(activeType)\n        ? activeStyle\n        : inactiveStyle(disabled);\n\nconst chartBtnStyle = (activeType, disabled) =>\n    [CHART, EVENT_CHART].includes(activeType)\n        ? activeStyle\n        : inactiveStyle(disabled);\n\nconst mapBtnStyle = (activeType, disabled) =>\n    [MAP].includes(activeType) ? activeStyle : inactiveStyle(disabled);\n\nexport const getItemTypeId = (itemTypeMap, visualizationType, domainType) => {\n    const item = Object.values(itemTypeMap).find(\n        item =>\n            item.visualizationType === visualizationType &&\n            item.domainType === domainType\n    );\n    return item.id;\n};\n\nclass VisualizationItemHeaderButtons extends Component {\n    renderInterpretationButton() {\n        const { activeFooter, onToggleFooter } = this.props;\n\n        const toggleFooterBase = activeFooter ? activeStyle : baseStyle;\n\n        const toggleFooter = {\n            ...toggleFooterBase,\n            container: {\n                ...toggleFooterBase.container,\n                ...style.toggleFooterPadding,\n                ...style.border,\n            },\n        };\n\n        return (\n            <Fragment>\n                <ItemHeaderButton\n                    style={toggleFooter.container}\n                    onClick={onToggleFooter}\n                >\n                    <MessageIcon style={toggleFooter.icon} />\n                </ItemHeaderButton>\n            </Fragment>\n        );\n    }\n\n    renderVisualizationButtons() {\n        const {\n            item,\n            visualization,\n            onSelectVisualization,\n            activeType,\n        } = this.props;\n\n        if (isSingleValue(visualization.type)) {\n            return null;\n        }\n\n        const domainType = itemTypeMap[item.type].domainType;\n\n        const onViewTable = () =>\n            onSelectVisualization(\n                getItemTypeId(itemTypeMap, VISUALIZATION_TYPE_TABLE, domainType)\n            );\n\n        const onViewChart = () =>\n            onSelectVisualization(\n                getItemTypeId(itemTypeMap, VISUALIZATION_TYPE_CHART, domainType)\n            );\n\n        const onViewMap = () =>\n            onSelectVisualization(\n                getItemTypeId(itemTypeMap, VISUALIZATION_TYPE_MAP, domainType)\n            );\n\n        // disable toggle buttons\n        let disabled = false;\n\n        if (item.type === VISUALIZATION_TYPE_CHART) {\n            if (extractFavorite(item).type.match(/^YEAR_OVER_YEAR/)) {\n                disabled = true;\n            }\n        }\n\n        const tableButtonStyle = tableBtnStyle(activeType, disabled);\n        const chartButtonStyle = chartBtnStyle(activeType, disabled);\n        const mapButtonStyle = mapBtnStyle(activeType, disabled);\n\n        return (\n            <div style={{ marginLeft: 10 }}>\n                <div style={style.border}>\n                    <ItemHeaderButton\n                        disabled={disabled}\n                        style={tableButtonStyle.container}\n                        onClick={onViewTable}\n                    >\n                        <TableIcon style={tableButtonStyle.icon} />\n                    </ItemHeaderButton>\n                    <ItemHeaderButton\n                        disabled={disabled}\n                        style={chartButtonStyle.container}\n                        onClick={onViewChart}\n                    >\n                        <ChartIcon style={chartButtonStyle.icon} />\n                    </ItemHeaderButton>\n                    {domainType === DOMAIN_TYPE_AGGREGATE ? (\n                        <ItemHeaderButton\n                            disabled={disabled}\n                            style={mapButtonStyle.container}\n                            onClick={onViewMap}\n                        >\n                            <MapIcon style={mapButtonStyle.icon} />\n                        </ItemHeaderButton>\n                    ) : null}\n                </div>\n            </div>\n        );\n    }\n\n    render() {\n        return (\n            <Fragment>\n                {this.renderInterpretationButton()}\n                {this.renderVisualizationButtons()}\n            </Fragment>\n        );\n    }\n}\n\nVisualizationItemHeaderButtons.propTypes = {\n    activeFooter: PropTypes.bool,\n    activeType: PropTypes.string,\n    item: PropTypes.object,\n    visualization: PropTypes.object,\n    onSelectVisualization: PropTypes.func,\n    onToggleFooter: PropTypes.func,\n};\n\nexport default VisualizationItemHeaderButtons;\n","// Note that this ignores discrepancies in 'this', so shouldn't be used with bound functions\n// This is useful instead of lodash/memoize when we only need to memoize a single value\n// Inspiration: https://github.com/alexreardon/memoize-one\n\nconst memoizeOne = fn => {\n    let lastArgs = undefined;\n    let lastValue = undefined;\n\n    return (...args) => {\n        if (\n            lastArgs &&\n            args.length === lastArgs.length &&\n            args.every((arg, i) => arg === lastArgs[i])\n        ) {\n            return lastValue;\n        }\n        lastArgs = args;\n        lastValue = fn(...args);\n        return lastValue;\n    };\n};\n\nexport default memoizeOne;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport ChartPlugin from '@dhis2/data-visualizer-plugin';\n\nimport i18n from '@dhis2/d2-i18n';\nimport uniqueId from 'lodash/uniqueId';\n\nimport DefaultPlugin from './DefaultPlugin';\nimport ItemHeader, { HEADER_HEIGHT } from '../ItemHeader';\nimport ItemFooter from './ItemFooter';\nimport VisualizationItemHeaderButtons from './ItemHeaderButtons';\nimport * as pluginManager from './plugin';\nimport { sGetVisualization } from '../../../reducers/visualizations';\nimport { sGetItemFiltersRoot } from '../../../reducers/itemFilters';\nimport {\n    acReceivedVisualization,\n    acReceivedActiveVisualization,\n} from '../../../actions/selected';\nimport { CHART, MAP, itemTypeMap } from '../../../modules/itemTypes';\nimport { colors } from '@dhis2/ui-core';\nimport memoizeOne from '../../../modules/memoizeOne';\nimport { getVisualizationConfig } from './plugin';\n\nconst styles = {\n    icon: {\n        width: 16,\n        height: 16,\n        marginLeft: 3,\n        cursor: 'pointer',\n        fill: colors.grey600,\n    },\n    title: {\n        overflow: 'hidden',\n        maxWidth: '85%',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n    },\n    textDiv: {\n        fontSize: '14px',\n        fontStretch: 'normal',\n        padding: '10px',\n        lineHeight: '20px',\n    },\n};\n\nconst applyFilters = (visualization, filters) => {\n    if (!Object.keys(filters).length) {\n        return visualization;\n    }\n\n    // deep clone objects in filters to avoid changing the visualization in the Redux store\n    const visRows = visualization.rows.map(obj => ({ ...obj }));\n    const visColumns = visualization.columns.map(obj => ({ ...obj }));\n    const visFilters = visualization.filters.map(obj => ({ ...obj }));\n\n    Object.keys(filters).forEach(dimensionId => {\n        if (filters[dimensionId]) {\n            let dimensionFound = false;\n\n            [visRows, visColumns, visFilters].forEach(dimensionObjects =>\n                dimensionObjects\n                    .filter(obj => obj.dimension === dimensionId)\n                    .forEach(obj => {\n                        dimensionFound = true;\n                        obj.items = filters[dimensionId];\n                    })\n            );\n\n            // add dimension to filters if not already present elsewhere\n            if (!dimensionFound) {\n                visFilters.push({\n                    dimension: dimensionId,\n                    items: filters[dimensionId],\n                });\n            }\n        }\n    });\n\n    return {\n        ...visualization,\n        rows: visRows,\n        columns: visColumns,\n        filters: visFilters,\n    };\n};\n\nexport class Item extends Component {\n    state = {\n        showFooter: false,\n        configLoaded: false,\n    };\n\n    constructor(props, context) {\n        super(props);\n\n        this.d2 = context.d2;\n\n        this.contentRef = React.createRef();\n    }\n\n    async componentDidMount() {\n        this.props.onVisualizationLoaded(\n            // TODO do not call fetch on the pluginManager, do it here as the manager will eventually be removed...\n            await pluginManager.fetch(this.props.item)\n        );\n\n        this.setState({\n            configLoaded: true,\n        });\n    }\n\n    getUniqueKey = memoizeOne(() => uniqueId());\n\n    pluginCredentials = null;\n\n    getPluginComponent = () => {\n        const visualization = getVisualizationConfig(\n            this.props.visualization,\n            this.props.item.type,\n            this.getActiveType()\n        );\n\n        if (!visualization) {\n            return (\n                <div className={this.props.classes.textDiv}>\n                    {i18n.t('No data to display')}\n                </div>\n            );\n        }\n\n        const props = {\n            ...this.props,\n            visualization,\n            style: this.getContentStyle(),\n        };\n\n        switch (this.getActiveType()) {\n            case CHART: {\n                return (\n                    <ChartPlugin\n                        d2={this.d2}\n                        config={applyFilters(\n                            props.visualization,\n                            props.itemFilters\n                        )}\n                        forDashboard={true}\n                        style={props.style}\n                    />\n                );\n            }\n            case MAP: {\n                if (props.item.type === MAP) {\n                    // apply filters only to thematic and event layers\n                    // for maps AO\n                    const mapViews = props.visualization.mapViews.map(obj => {\n                        if (\n                            obj.layer.includes('thematic') ||\n                            obj.layer.includes('event')\n                        ) {\n                            return applyFilters(obj, props.itemFilters);\n                        }\n\n                        return obj;\n                    });\n\n                    props.visualization = {\n                        ...props.visualization,\n                        mapViews,\n                    };\n                } else {\n                    // this is the case of a non map AO passed to the maps plugin\n                    // due to a visualization type switch in dashboard item\n                    // maps plugin takes care of converting the AO to a suitable format\n                    props.visualization = applyFilters(\n                        props.visualization,\n                        props.itemFilters\n                    );\n                }\n\n                return <DefaultPlugin {...props} />;\n            }\n            default: {\n                props.visualization = applyFilters(\n                    props.visualization,\n                    props.itemFilters\n                );\n\n                return <DefaultPlugin {...props} />;\n            }\n        }\n    };\n\n    onToggleFooter = () => {\n        this.setState(\n            { showFooter: !this.state.showFooter },\n            this.props.onToggleItemExpanded(this.props.item.id)\n        );\n    };\n\n    onSelectVisualization = activeType => {\n        // Cancel request if type is already active\n        if (activeType === this.getActiveType()) {\n            return;\n        }\n\n        pluginManager.unmount(this.props.item, this.getActiveType());\n\n        this.props.onSelectVisualization(\n            this.props.visualization.id,\n            this.props.item.type,\n            activeType\n        );\n    };\n\n    getActiveType = () =>\n        this.props.visualization.activeType || this.props.item.type;\n\n    pluginIsAvailable = () =>\n        pluginManager.pluginIsAvailable(\n            this.props.item,\n            this.props.visualization\n        );\n\n    getTitle = () => {\n        const { item, editMode, classes } = this.props;\n        const itemName = pluginManager.getName(item);\n\n        return (\n            <div style={{ display: 'flex' }}>\n                <span className={classes.title} title={itemName}>\n                    {itemName}\n                </span>\n                {!editMode && this.pluginIsAvailable() ? (\n                    <a\n                        href={pluginManager.getLink(this.props.item, this.d2)}\n                        style={{ height: 16 }}\n                        title={`View in ${\n                            itemTypeMap[this.props.item.type].appName\n                        } app`}\n                    >\n                        <LaunchIcon className={classes.icon} />\n                    </a>\n                ) : null}\n            </div>\n        );\n    };\n\n    getActionButtons = () =>\n        pluginManager.pluginIsAvailable(\n            this.props.item,\n            this.props.visualization\n        ) && !this.props.editMode ? (\n            <VisualizationItemHeaderButtons\n                item={this.props.item}\n                visualization={this.props.visualization}\n                activeFooter={this.state.showFooter}\n                activeType={this.getActiveType()}\n                onSelectVisualization={this.onSelectVisualization}\n                onToggleFooter={this.onToggleFooter}\n            />\n        ) : null;\n\n    getContentStyle = () => {\n        const { item, editMode } = this.props;\n        const PADDING_BOTTOM = 4;\n\n        return !editMode\n            ? {\n                  height: item.originalHeight - HEADER_HEIGHT - PADDING_BOTTOM,\n              }\n            : { height: this.contentRef.offsetHeight };\n    };\n\n    render() {\n        const { item, editMode, itemFilters } = this.props;\n        const { showFooter } = this.state;\n\n        return (\n            <Fragment>\n                <ItemHeader\n                    title={this.getTitle()}\n                    actionButtons={this.getActionButtons()}\n                    editMode={editMode}\n                />\n                <div\n                    key={this.getUniqueKey(itemFilters)}\n                    className=\"dashboard-item-content\"\n                    ref={ref => (this.contentRef = ref)}\n                >\n                    {this.state.configLoaded && this.getPluginComponent()}\n                </div>\n                {!editMode && showFooter ? <ItemFooter item={item} /> : null}\n            </Fragment>\n        );\n    }\n}\n\nItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nItem.propTypes = {\n    classes: PropTypes.object,\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    itemFilters: PropTypes.object,\n    visualization: PropTypes.object,\n    onSelectVisualization: PropTypes.func,\n    onToggleItemExpanded: PropTypes.func,\n    onVisualizationLoaded: PropTypes.func,\n};\n\nItem.defaultProps = {\n    item: {},\n    editMode: false,\n    onToggleItemExpanded: Function.prototype,\n    itemFilters: {},\n    visualization: {},\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n    itemFilters: sGetItemFiltersRoot(state),\n    visualization: sGetVisualization(\n        state,\n        pluginManager.extractFavorite(ownProps.item).id\n    ),\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onVisualizationLoaded: visualization =>\n        dispatch(acReceivedVisualization(visualization)),\n    onSelectVisualization: (id, type, activeType) =>\n        dispatch(acReceivedActiveVisualization(id, type, activeType)),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(Item));\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\n\nconst style = {\n    backgroundColor: colors.grey200,\n    border: 'none',\n    height: '1px',\n    margin: '0px 0px 5px 0px',\n};\n\nconst Line = () => <hr style={style} />;\n\nexport default Line;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\n\nimport { sGetMessagesRoot } from '../../../reducers/messages';\nimport { formatDate } from '../../../modules/util';\nimport { colors } from '@dhis2/ui-core';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nimport './MessagesItem.css';\n\nconst PRIVATE = 'PRIVATE';\n\nconst messageTypes = {\n    [PRIVATE]: 'Private',\n    VALIDATION_RESULT: 'Validation',\n    TICKET: 'Ticket',\n    SYSTEM: 'System',\n};\n\nconst style = {\n    list: {\n        listStyleType: 'none',\n        paddingLeft: '0px',\n    },\n    seeAll: {\n        textAlign: 'center',\n        fontSize: '13px',\n        marginBottom: '5px',\n    },\n    sender: {\n        fontSize: '13px',\n        lineHeight: '15px',\n        margin: 0,\n        color: colors.grey800,\n    },\n    snippet: {\n        color: colors.grey800,\n        fontSize: '13px',\n        lineHeight: '15px',\n        maxHeight: '30px',\n        overflow: 'hidden',\n    },\n};\n\nclass MessagesItem extends Component {\n    state = {\n        uiLocale: '',\n    };\n\n    async componentDidMount() {\n        const uiLocale = await this.context.d2.currentUser.userSettings.get(\n            'keyUiLocale'\n        );\n\n        this.setState({ uiLocale });\n    }\n\n    getMessageHref = msg => {\n        const msgIdentifier = msg ? `#/${msg.messageType}/${msg.id}` : '';\n        return `${this.context.baseUrl}/dhis-web-messaging/${msgIdentifier}`;\n    };\n\n    getMessageSender = msg => {\n        const latestMsg = msg.messages.slice(-1)[0];\n        return latestMsg.sender ? latestMsg.sender.displayName : '';\n    };\n\n    getMessageItems = () => {\n        const editClass = !this.props.editMode ? 'view' : null;\n\n        return this.props.messages.map(msg => {\n            const redirectToMsg = () => {\n                if (!this.props.editMode) {\n                    document.location.href = this.getMessageHref(msg);\n                }\n            };\n\n            const sender =\n                msg.messageType === PRIVATE\n                    ? this.getMessageSender(msg)\n                    : messageTypes[msg.messageType];\n\n            const readClass = !msg.read ? 'unread' : null;\n            const latestMsg = msg.messages.slice(-1)[0];\n            const msgDate = latestMsg.lastUpdated;\n\n            return (\n                <li\n                    className={`message-item ${editClass}`}\n                    key={msg.id}\n                    onClick={redirectToMsg}\n                >\n                    <p className={`message-title ${readClass}`}>\n                        {msg.displayName} ({msg.messageCount})\n                    </p>\n                    <p style={style.sender}>\n                        {sender} - {formatDate(msgDate, this.state.uiLocale)}\n                    </p>\n                    <p style={style.snippet}>{latestMsg.text}</p>\n                </li>\n            );\n        });\n    };\n\n    render() {\n        return (\n            <Fragment>\n                <ItemHeader title={i18n.t('Messages')} />\n                <Line />\n                {this.props.messages.length > 0 && (\n                    <div className=\"dashboard-item-content\">\n                        <ul style={style.list}>{this.getMessageItems()}</ul>\n                        <div style={style.seeAll}>\n                            <a href={this.getMessageHref()}>\n                                {i18n.t('See all messages')}\n                            </a>\n                        </div>\n                    </div>\n                )}\n            </Fragment>\n        );\n    }\n}\n\nMessagesItem.propTypes = {\n    editMode: PropTypes.bool,\n    messages: PropTypes.array,\n};\n\nMessagesItem.contextTypes = {\n    d2: PropTypes.object,\n    baseUrl: PropTypes.string,\n};\n\nconst mapStateToProps = state => {\n    return {\n        messages: Object.values(sGetMessagesRoot(state)),\n    };\n};\n\nconst MessagesContainer = connect(\n    mapStateToProps,\n    null\n)(MessagesItem);\n\nexport default MessagesContainer;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport ItemHeader from '../ItemHeader';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nconst NotSupportedItem = props => (\n    <Fragment>\n        <ItemHeader title={`Item type not supported: ${props.item.type}`} />\n        <div\n            style={{\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center',\n                height: '90%',\n            }}\n        >\n            <NotInterestedIcon\n                style={{ width: 100, height: 100, align: 'center' }}\n                color=\"disabled\"\n            />\n        </div>\n    </Fragment>\n);\n\nNotSupportedItem.propTypes = {\n    item: PropTypes.object,\n};\n\nexport default NotSupportedItem;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nconst DescriptionIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n        fill={colors.grey500}\n    >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M14 2H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6zm2 16H8v-2h8v2zm0-4H8v-2h8v2zm-3-5V3.5L18.5 9H13z\" />\n    </svg>\n);\n\nDescriptionIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default DescriptionIcon;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nconst DeleteIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"18\"\n        height=\"18\"\n        viewBox=\"0 0 24 24\"\n        fill={colors.red500}\n    >\n        <path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>\n);\n\nDeleteIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default DeleteIcon;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { colors } from '@dhis2/ui-core';\nimport DescriptionIcon from '../../../icons/Description';\n\nimport DeleteIcon from '../../../icons/Delete';\nimport Line from '../../../widgets/Line';\nimport { itemTypeMap, getItemUrl } from '../../../modules/itemTypes';\nimport { orArray } from '../../../modules/util';\nimport { tRemoveListItemContent } from './actions';\nimport ItemHeader from '../ItemHeader';\nimport classes from './Item.module.css';\n\nconst getItemTitle = item => itemTypeMap[item.type].pluralTitle;\n\nconst getContentItems = item =>\n    orArray(item[itemTypeMap[item.type].propName]).filter(\n        (item, index, array) =>\n            array.findIndex(el => el.id === item.id) === index\n    );\n\nconst ListItem = (props, context) => {\n    const { item, editMode, tRemoveListItemContent } = props;\n    const contentItems = getContentItems(item);\n\n    const getLink = contentItem => {\n        const deleteButton = (\n            <button\n                className={classes.deletebutton}\n                onClick={() => tRemoveListItemContent(item, contentItem)}\n            >\n                <DeleteIcon className={classes.deleteicon} />\n            </button>\n        );\n\n        return (\n            <Fragment>\n                <a\n                    className={classes.link}\n                    style={{ color: colors.grey900 }}\n                    href={getItemUrl(item.type, contentItem, context.d2)}\n                >\n                    {contentItem.name}\n                </a>\n                {editMode ? deleteButton : null}\n            </Fragment>\n        );\n    };\n\n    return (\n        <Fragment>\n            <ItemHeader title={getItemTitle(item)} />\n            <Line />\n            <div className=\"dashboard-item-content\">\n                <ul className={classes.list}>\n                    {contentItems.map(contentItem => (\n                        <li className={classes.item} key={contentItem.id}>\n                            <DescriptionIcon className={classes.itemicon} />\n                            {getLink(contentItem)}\n                        </li>\n                    ))}\n                </ul>\n            </div>\n        </Fragment>\n    );\n};\n\nListItem.propTypes = {\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    tRemoveListItemContent: PropTypes.func,\n};\n\nListItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nexport default connect(\n    null,\n    {\n        tRemoveListItemContent,\n    }\n)(ListItem);\n","import {\n    acUpdateDashboardItem,\n    acRemoveDashboardItem,\n} from '../../../actions/editDashboard';\nimport { itemTypeMap } from '../../../modules/itemTypes';\n\nexport const tRemoveListItemContent = (dashboardItem, content) => dispatch => {\n    const listItemType = itemTypeMap[dashboardItem.type].propName;\n\n    const newContent = dashboardItem[listItemType].filter(\n        item => item.id !== content.id\n    );\n\n    if (newContent.length) {\n        dashboardItem[listItemType] = newContent;\n        dispatch(acUpdateDashboardItem(dashboardItem));\n    } else {\n        dispatch(acRemoveDashboardItem(dashboardItem));\n    }\n};\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\n\nimport Input from '@material-ui/core/Input';\nimport {\n    Parser as RichTextParser,\n    Editor as RichTextEditor,\n} from '@dhis2/d2-ui-rich-text';\n\nimport { acUpdateDashboardItem } from '../../../actions/editDashboard';\nimport { sGetEditDashboardItems } from '../../../reducers/editDashboard';\nimport { sGetDashboardItems } from '../../../reducers/dashboards';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nconst style = {\n    textDiv: {\n        padding: '10px',\n        whiteSpace: 'pre-line',\n        lineHeight: '20px',\n    },\n    textField: {\n        fontSize: '14px',\n        fontStretch: 'normal',\n        width: '90%',\n        margin: '0 auto',\n        display: 'block',\n        lineHeight: '24px',\n    },\n    container: {\n        marginBottom: '20px',\n        marginTop: '20px',\n    },\n};\n\nconst TextItem = props => {\n    const { item, editMode, text, acUpdateDashboardItem } = props;\n\n    const onChangeText = event => {\n        const updatedItem = {\n            ...item,\n            text: event.target.value,\n        };\n\n        acUpdateDashboardItem(updatedItem);\n    };\n\n    const viewItem = () => {\n        const textDivStyle = Object.assign({}, style.textField, style.textDiv);\n        return (\n            <div className=\"dashboard-item-content\" style={style.container}>\n                <RichTextParser style={textDivStyle}>{text}</RichTextParser>\n            </div>\n        );\n    };\n\n    const editItem = () => {\n        return (\n            <Fragment>\n                <ItemHeader title={i18n.t('Text item')} />\n                <Line />\n                <div className=\"dashboard-item-content\">\n                    <RichTextEditor onEdit={onChangeText}>\n                        <Input\n                            value={text}\n                            multiline\n                            fullWidth\n                            style={style.textField}\n                            placeholder={i18n.t('Add text here')}\n                            onChange={onChangeText}\n                        />\n                    </RichTextEditor>\n                </div>\n            </Fragment>\n        );\n    };\n\n    return <Fragment>{editMode ? editItem() : viewItem()}</Fragment>;\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    const items = ownProps.editMode\n        ? sGetEditDashboardItems(state)\n        : sGetDashboardItems(state);\n\n    const item = items.find(item => item.id === ownProps.item.id);\n\n    return {\n        text: item ? item.text : '',\n    };\n};\n\nTextItem.propTypes = {\n    acUpdateDashboardItem: PropTypes.func,\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    text: PropTypes.string,\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        acUpdateDashboardItem,\n    }\n)(TextItem);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nimport { FILTER_ORG_UNIT } from '../../../actions/itemFilters';\nimport { sGetItemFiltersRoot } from '../../../reducers/itemFilters';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nconst getIframeSrc = (appDetails, item, itemFilters) => {\n    let iframeSrc = `${appDetails.launchUrl}?dashboardItemId=${item.id}`;\n\n    if (\n        itemFilters &&\n        itemFilters[FILTER_ORG_UNIT] &&\n        itemFilters[FILTER_ORG_UNIT].length\n    ) {\n        const ouIds = itemFilters[FILTER_ORG_UNIT].map(\n            ouPath => ouPath.split('/').slice(-1)[0]\n        );\n\n        iframeSrc += `&userOrgUnit=${ouIds.join(',')}`;\n    }\n\n    return iframeSrc;\n};\n\nconst AppItem = ({ item, itemFilters }, context) => {\n    let appDetails;\n\n    const appKey = item.appKey;\n\n    if (appKey) {\n        appDetails = context.d2.system.installedApps.find(\n            app => app.key === appKey\n        );\n    }\n\n    return appDetails && appDetails.name && appDetails.launchUrl ? (\n        <Fragment>\n            <ItemHeader title={appDetails.name} />\n            <Line />\n            <iframe\n                title={appDetails.name}\n                src={getIframeSrc(appDetails, item, itemFilters)}\n                className=\"dashboard-item-content\"\n                style={{ border: 'none' }}\n            />\n        </Fragment>\n    ) : (\n        <Fragment>\n            <ItemHeader title={`${appKey} app not found`} />\n            <Line />\n            <div\n                className=\"dashboard-item-content\"\n                style={{\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    height: '90%',\n                }}\n            >\n                <NotInterestedIcon\n                    color=\"disabled\"\n                    disabled\n                    style={{ width: 100, height: 100, align: 'center' }}\n                />\n            </div>\n        </Fragment>\n    );\n};\n\nAppItem.propTypes = {\n    item: PropTypes.object,\n    itemFilters: PropTypes.object,\n};\n\nAppItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nconst mapStateToProps = state => ({\n    itemFilters: sGetItemFiltersRoot(state),\n});\n\nexport default connect(mapStateToProps)(AppItem);\n","import React, { Fragment } from 'react';\nimport i18n from '@dhis2/d2-i18n';\n\nimport { colors } from '@dhis2/ui-core';\nimport ItemHeader from '../ItemHeader';\n\nconst style = {\n    margin: '21px 28px',\n    fontSize: '14px',\n    lineHeight: '18px',\n    color: colors.grey600,\n};\n\nconst SpacerItem = () => {\n    return (\n        <Fragment>\n            <ItemHeader title={i18n.t('Spacer')} />\n            <p style={style}>\n                {i18n.t(\n                    'Use a spacer to create empty vertical space between other dashboard items.'\n                )}\n            </p>\n        </Fragment>\n    );\n};\n\nexport default SpacerItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport VisualizationItem from './VisualizationItem/Item';\nimport MessagesItem from './MessagesItem/Item';\nimport NotSupportedItem from './NotSupportedItem/Item';\nimport ListItem from './ListItem/Item';\nimport TextItem from './TextItem/Item';\nimport AppItem from './AppItem/Item';\nimport SpacerItem from './SpacerItem/Item';\nimport {\n    APP,\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_CHART,\n    EVENT_REPORT,\n    MESSAGES,\n    REPORTS,\n    RESOURCES,\n    USERS,\n    TEXT,\n    SPACER,\n} from '../../modules/itemTypes';\nimport { DEFAULT_STATE_ITEM_FILTERS } from '../../reducers/itemFilters';\n\nconst getGridItem = type => {\n    switch (type) {\n        case REPORT_TABLE:\n        case CHART:\n        case MAP:\n        case EVENT_CHART:\n        case EVENT_REPORT:\n            return VisualizationItem;\n        case MESSAGES:\n            return MessagesItem;\n        case REPORTS:\n        case RESOURCES:\n        case USERS:\n            return ListItem;\n        case TEXT:\n            return TextItem;\n        case SPACER:\n            return SpacerItem;\n        case APP:\n            return AppItem;\n        default:\n            return NotSupportedItem;\n    }\n};\n\nexport const Item = props => {\n    const GridItem = getGridItem(props.item.type);\n\n    return (\n        <GridItem\n            item={props.item}\n            editMode={props.editMode}\n            itemFilters={\n                props.editMode ? DEFAULT_STATE_ITEM_FILTERS : props.itemFilters\n            }\n            onToggleItemExpanded={props.onToggleItemExpanded}\n        />\n    );\n};\n\nItem.propTypes = {\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    itemFilters: PropTypes.object,\n    onToggleItemExpanded: PropTypes.func,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ItemHeaderButton from '../Item/ItemHeaderButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { colors } from '@dhis2/ui-core';\n\nconst style = {\n    button: {\n        position: 'absolute',\n        top: '7px',\n        right: '7px',\n        zIndex: '1000',\n    },\n    icon: {\n        fill: colors.red500,\n    },\n};\n\nconst DeleteItemHeaderButton = ({ onClick }) => (\n    <ItemHeaderButton onClick={onClick} style={style.button}>\n        <DeleteIcon style={style.icon} />\n    </ItemHeaderButton>\n);\n\nDeleteItemHeaderButton.propTypes = {\n    onClick: PropTypes.func,\n};\n\nexport default DeleteItemHeaderButton;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nexport const NoContentMessage = ({ text }) => (\n    <div\n        style={{\n            padding: '50px 10px',\n            textAlign: 'center',\n            fontSize: '15px',\n            fontWeight: 500,\n            color: colors.grey600,\n        }}\n    >\n        {text}\n    </div>\n);\n\nNoContentMessage.propTypes = {\n    text: PropTypes.string,\n};\n\nexport default NoContentMessage;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash/debounce';\nimport pick from 'lodash/pick';\n\nconst defaultDebounceMs = 100;\nconst defaultBufferFactor = 0.25;\n\nclass ProgressiveLoadingContainer extends Component {\n    static propTypes = {\n        children: PropTypes.node.isRequired,\n        bufferFactor: PropTypes.number,\n        className: PropTypes.string,\n        debounceMs: PropTypes.number,\n        style: PropTypes.object,\n    };\n    static defaultProps = {\n        debounceMs: defaultDebounceMs,\n        bufferFactor: defaultBufferFactor,\n    };\n\n    state = {\n        shouldLoad: false,\n    };\n    containerRef = null;\n    shouldLoadHandler = null;\n\n    checkShouldLoad() {\n        const bufferPx = this.props.bufferFactor * window.innerHeight;\n\n        if (!this.containerRef) {\n            return;\n        }\n\n        const rect = this.containerRef.getBoundingClientRect();\n        if (\n            rect.bottom > -bufferPx &&\n            rect.top < window.innerHeight + bufferPx\n        ) {\n            this.setState({\n                shouldLoad: true,\n            });\n\n            this.removeHandler();\n        }\n    }\n\n    registerHandler() {\n        this.shouldLoadHandler = debounce(\n            () => this.checkShouldLoad(),\n            this.props.debounceMs\n        );\n\n        window.addEventListener('scroll', this.shouldLoadHandler);\n    }\n    removeHandler() {\n        window.removeEventListener('scroll', this.shouldLoadHandler);\n    }\n\n    componentDidMount() {\n        this.registerHandler();\n        this.checkShouldLoad();\n    }\n\n    componentWillUnmount() {\n        this.removeHandler();\n    }\n\n    render() {\n        const { children, className, style, ...props } = this.props;\n        const { shouldLoad } = this.state;\n\n        const eventProps = pick(props, [\n            'onMouseDown',\n            'onTouchStart',\n            'onMouseUp',\n            'onTouchEnd',\n        ]);\n\n        return (\n            <div\n                ref={ref => (this.containerRef = ref)}\n                style={style}\n                className={className}\n                {...eventProps}\n            >\n                {shouldLoad && children}\n            </div>\n        );\n    }\n}\n\nexport default ProgressiveLoadingContainer;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ReactGridLayout from 'react-grid-layout';\nimport { CircularLoader, ScreenCover } from '@dhis2/ui-core';\n\nimport {\n    acUpdateDashboardLayout,\n    acRemoveDashboardItem,\n} from '../../actions/editDashboard';\nimport { Item } from '../Item/Item';\nimport { resize as pluginResize } from '../Item/VisualizationItem/plugin';\nimport { isPluginType } from '../../modules/itemTypes';\nimport {\n    GRID_ROW_HEIGHT,\n    GRID_COMPACT_TYPE,\n    ITEM_MIN_HEIGHT,\n    MARGIN,\n    getGridColumns,\n    hasShape,\n    onItemResize,\n} from './gridUtil';\nimport { orArray } from '../../modules/util';\nimport DeleteItemButton from './DeleteItemButton';\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\n\nimport './ItemGrid.css';\nimport { sGetSelectedId, sGetSelectedIsLoading } from '../../reducers/selected';\nimport {\n    sGetEditDashboardRoot,\n    sGetEditDashboardItems,\n} from '../../reducers/editDashboard';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n} from '../../reducers/dashboards';\nimport ProgressiveLoadingContainer from '../Item/ProgressiveLoadingContainer';\n\n// Component\n\nconst EXPANDED_HEIGHT = 17;\n\nexport class ItemGrid extends Component {\n    state = {\n        expandedItems: {},\n    };\n\n    onToggleItemExpanded = clickedId => {\n        const isExpanded =\n            typeof this.state.expandedItems[clickedId] === 'boolean'\n                ? this.state.expandedItems[clickedId]\n                : false;\n\n        const expandedItems = { ...this.state.expandedItems };\n        expandedItems[clickedId] = !isExpanded;\n        this.setState({ expandedItems });\n    };\n\n    onRemoveItem = clickedId => {\n        this.props.acRemoveDashboardItem(clickedId);\n    };\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.edit) {\n            this.setState({ expandedItems: {} });\n        }\n    }\n\n    onLayoutChange = newLayout => {\n        if (this.props.edit) {\n            this.props.acUpdateDashboardLayout(newLayout);\n        }\n    };\n\n    onResizeStop = (layout, oldItem, newItem) => {\n        onItemResize(newItem.i);\n\n        const dashboardItem = this.props.dashboardItems.find(\n            item => item.id === newItem.i\n        );\n\n        // call resize on the item component if it's a plugin type\n        if (dashboardItem && isPluginType(dashboardItem)) {\n            pluginResize(dashboardItem);\n        }\n    };\n\n    onRemoveItemWrapper = id => () => this.onRemoveItem(id);\n\n    render() {\n        const { edit, isLoading, dashboardItems } = this.props;\n\n        if (!isLoading && !dashboardItems.length) {\n            return (\n                <NoContentMessage\n                    text={i18n.t('There are no items on this dashboard')}\n                />\n            );\n        }\n\n        const items = dashboardItems.map(item => {\n            const expandedItem = this.state.expandedItems[item.id];\n            const hProp = { h: item.h };\n\n            if (expandedItem && expandedItem === true) {\n                hProp.h = item.h + EXPANDED_HEIGHT;\n            }\n\n            return Object.assign({}, item, hProp, {\n                i: item.id,\n                minH: ITEM_MIN_HEIGHT,\n            });\n        });\n\n        return (\n            <div className=\"grid-wrapper\">\n                {isLoading ? (\n                    <ScreenCover>\n                        <CircularLoader />\n                    </ScreenCover>\n                ) : null}\n                <ReactGridLayout\n                    onLayoutChange={this.onLayoutChange}\n                    onResizeStop={this.onResizeStop}\n                    className=\"layout\"\n                    layout={items}\n                    margin={MARGIN}\n                    cols={getGridColumns()}\n                    rowHeight={GRID_ROW_HEIGHT}\n                    width={window.innerWidth}\n                    compactType={GRID_COMPACT_TYPE}\n                    isDraggable={edit}\n                    isResizable={edit}\n                    draggableCancel=\"input,textarea\"\n                >\n                    {items.map(item => {\n                        const itemClassNames = [\n                            item.type,\n                            edit ? 'edit' : 'view',\n                        ].join(' ');\n\n                        return (\n                            <ProgressiveLoadingContainer\n                                key={item.i}\n                                className={itemClassNames}\n                            >\n                                {edit ? (\n                                    <DeleteItemButton\n                                        onClick={this.onRemoveItemWrapper(\n                                            item.id\n                                        )}\n                                    />\n                                ) : null}\n                                <Item\n                                    item={item}\n                                    editMode={edit}\n                                    onToggleItemExpanded={\n                                        this.onToggleItemExpanded\n                                    }\n                                />\n                            </ProgressiveLoadingContainer>\n                        );\n                    })}\n                </ReactGridLayout>\n            </div>\n        );\n    }\n}\n\nItemGrid.propTypes = {\n    acRemoveDashboardItem: PropTypes.func,\n    acUpdateDashboardLayout: PropTypes.func,\n    dashboardItems: PropTypes.array,\n    edit: PropTypes.bool,\n    isLoading: PropTypes.bool,\n};\n\nItemGrid.defaultProps = {\n    dashboardItems: [],\n};\n\n// Container\n\nconst mapStateToProps = (state, ownProps) => {\n    const selectedDashboard = ownProps.edit\n        ? sGetEditDashboardRoot(state)\n        : sGetDashboardById(state, sGetSelectedId(state));\n\n    const dashboardItems = ownProps.edit\n        ? sGetEditDashboardItems(state)\n        : sGetDashboardItems(state);\n\n    return {\n        isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n        dashboardItems,\n    };\n};\n\nconst mapDispatchToProps = {\n    acUpdateDashboardLayout,\n    acRemoveDashboardItem,\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const validItems = orArray(stateProps.dashboardItems).filter(hasShape);\n\n    return {\n        ...dispatchProps,\n        edit: ownProps.edit,\n        isLoading: stateProps.isLoading,\n        dashboardItems: validItems,\n        onItemResize,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n    mergeProps\n)(ItemGrid);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport i18n from '@dhis2/d2-i18n';\n\nimport { colors } from '@dhis2/ui-core';\n\nconst styles = {\n    badgeContainer: {\n        margin: '2px',\n        padding: '0 16px',\n        borderRadius: '4px',\n        color: colors.white,\n        backgroundColor: '#212934',\n        height: 36,\n        display: 'flex',\n        alignItems: 'center',\n    },\n    badge: {\n        fontSize: '13px',\n        cursor: 'pointer',\n        whiteSpace: 'nowrap',\n    },\n    badgeRemove: {\n        fontSize: '12px',\n        textDecoration: 'underline',\n        marginLeft: '24px',\n        cursor: 'pointer',\n    },\n};\n\nclass FilterBadge extends Component {\n    onClick = id => () => this.props.onClick(id);\n    onRemove = id => () => this.props.onRemove(id);\n\n    render() {\n        const { data } = this.props;\n\n        return (\n            <div style={styles.badgeContainer}>\n                <span style={styles.badge} onClick={this.onClick(data.id)}>\n                    {`${data.name}: ${\n                        data.values.length > 1\n                            ? i18n.t('{{count}} selected', {\n                                  count: data.values.length,\n                              })\n                            : data.values[0].name\n                    }`}\n                </span>\n                <span\n                    style={styles.badgeRemove}\n                    onClick={this.onRemove(data.id)}\n                >\n                    {i18n.t('Remove')}\n                </span>\n            </div>\n        );\n    }\n}\n\nFilterBadge.propTypes = {\n    data: PropTypes.object.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onRemove: PropTypes.func.isRequired,\n};\n\nFilterBadge.defaultProps = {\n    onClick: Function.prototype,\n    onRemove: Function.prototype,\n};\n\nexport default FilterBadge;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { createSelector } from 'reselect';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport { sGetDimensions } from '../../reducers/dimensions';\nimport { sGetItemFiltersRoot } from '../../reducers/itemFilters';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { getTopOffset } from '../ControlBar/controlBarDimensions';\nimport { acRemoveItemFilter } from '../../actions/itemFilters';\nimport { acRemoveEditItemFilter } from '../../actions/editItemFilters';\nimport { acSetActiveModalDimension } from '../../actions/activeModalDimension';\n\nimport FilterBadge from './FilterBadge';\n\nconst styles = {\n    bar: {\n        position: 'sticky',\n        zIndex: 7,\n        padding: '8px 0',\n        display: 'flex',\n        justifyContent: 'center',\n        flexWrap: 'wrap',\n    },\n};\n\nexport class FilterBar extends Component {\n    onBadgeRemove = id => {\n        this.props.removeItemFilter(id);\n        this.props.removeEditItemFilter(id);\n    };\n\n    onBadgeClick = id => {\n        this.props.setActiveModalDimension({\n            id,\n            name: this.props.filters.find(item => item.id === id).name,\n        });\n    };\n\n    render() {\n        const { filters, userRows, classes } = this.props;\n        const top = getTopOffset(userRows) + 10;\n\n        return filters.length ? (\n            <div className={classes.bar} style={{ top }}>\n                {filters.map(filter => (\n                    <FilterBadge\n                        key={filter.id}\n                        data={filter}\n                        onClick={this.onBadgeClick}\n                        onRemove={this.onBadgeRemove}\n                    />\n                ))}\n            </div>\n        ) : null;\n    }\n}\n\nFilterBar.propTypes = {\n    filters: PropTypes.array.isRequired,\n    removeEditItemFilter: PropTypes.func.isRequired,\n    removeItemFilter: PropTypes.func.isRequired,\n    classes: PropTypes.object,\n    setActiveModalDimension: PropTypes.func,\n    userRows: PropTypes.number,\n};\n\nFilterBar.defaultProps = {\n    filters: [],\n    removeItemFIlter: Function.prototype,\n    removeEditItemFilter: Function.prototype,\n};\n\n// simplify the filters structure to:\n// [{ id: 'pe', name: 'Period', values: [{ id: 2019: name: '2019' }, {id: 'LAST_MONTH', name: 'Last month' }]}, ...]\nconst filtersSelector = createSelector(\n    [sGetItemFiltersRoot, sGetDimensions],\n    (filters, dimensions) =>\n        Object.keys(filters).reduce((arr, id) => {\n            arr.push({\n                id: id,\n                name: dimensions.find(dimension => dimension.id === id).name,\n                values: filters[id].map(value => ({\n                    id: value.id,\n                    name: value.displayName || value.name,\n                })),\n            });\n\n            return arr;\n        }, [])\n);\n\nconst mapStateToProps = state => ({\n    filters: filtersSelector(state),\n    userRows: sGetControlBarUserRows(state),\n});\n\nexport default connect(\n    mapStateToProps,\n    {\n        setActiveModalDimension: acSetActiveModalDimension,\n        removeItemFilter: acRemoveItemFilter,\n        removeEditItemFilter: acRemoveEditItemFilter,\n    }\n)(withStyles(styles)(FilterBar));\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport TitleBar from '../TitleBar/TitleBar';\nimport ItemGrid from '../ItemGrid/ItemGrid';\nimport FilterBar from '../FilterBar/FilterBar';\n\nexport const DashboardContent = props => (\n    <Fragment>\n        <TitleBar edit={props.editMode} />\n        <FilterBar />\n        <ItemGrid edit={props.editMode} />\n    </Fragment>\n);\n\nDashboardContent.propTypes = {\n    editMode: PropTypes.bool,\n};\n\nexport default DashboardContent;\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport isEmpty from 'lodash/isEmpty';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\n\nimport {\n    sGetAllDashboards,\n    sDashboardsIsFetching,\n} from '../../reducers/dashboards';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport DashboardsBar from '../ControlBar/DashboardsBar';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport DashboardContent from './DashboardContent';\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nexport const Content = ({ hasDashboardContent, dashboardsIsEmpty }) => {\n    const msg = dashboardsIsEmpty\n        ? i18n.t(\n              'No dashboards found. Use the + button to create a new dashboard.'\n          )\n        : i18n.t('Requested dashboard not found');\n\n    return hasDashboardContent ? (\n        <DashboardContent editMode={false} />\n    ) : (\n        <NoContentMessage text={msg} />\n    );\n};\n\nContent.propTypes = {\n    dashboardsIsEmpty: PropTypes.bool,\n    hasDashboardContent: PropTypes.bool,\n};\n\nexport const ViewDashboard = ({ id, dashboardsIsEmpty, dashboardsLoaded }) => {\n    const hasDashboardContent = id && !dashboardsIsEmpty;\n    const contentNotReady = !dashboardsLoaded || id === null;\n\n    return (\n        <Fragment>\n            <DashboardsBar />\n            <DashboardVerticalOffset />\n            <div className=\"dashboard-wrapper\">\n                {contentNotReady ? null : (\n                    <Content\n                        hasDashboardContent={hasDashboardContent}\n                        dashboardsIsEmpty={dashboardsIsEmpty}\n                    />\n                )}\n            </div>\n        </Fragment>\n    );\n};\n\nViewDashboard.propTypes = {\n    dashboardsIsEmpty: PropTypes.bool,\n    dashboardsLoaded: PropTypes.bool,\n    id: PropTypes.string,\n};\n\nconst mapStateToProps = state => {\n    const dashboards = sGetAllDashboards(state);\n\n    return {\n        id: sGetSelectedId(state),\n        dashboardsIsEmpty: isEmpty(dashboards),\n        dashboardsLoaded: !sDashboardsIsFetching(state),\n    };\n};\n\nexport default connect(mapStateToProps)(ViewDashboard);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport { Button } from '@dhis2/ui-core';\n\nexport const ConfirmDeleteDialog = ({\n    dashboardName,\n    onDeleteConfirmed,\n    onContinueEditing,\n    open,\n}) => {\n    const actions = [\n        <Button key=\"cancel\" secondary onClick={onContinueEditing}>\n            {i18n.t('Cancel')}\n        </Button>,\n        <Button key=\"delete\" destructive onClick={onDeleteConfirmed}>\n            {i18n.t('Delete')}\n        </Button>,\n    ];\n\n    return (\n        <Dialog open={open} onClose={onContinueEditing}>\n            <DialogTitle style={{ fontSize: '1.25rem', fontWeight: '450' }}>\n                {i18n.t('Delete dashboard')}\n            </DialogTitle>\n            <DialogContent>\n                <DialogContentText style={{ fontSize: '0.875rem' }}>\n                    {i18n.t(\n                        'Deleting dashboard \"{{ dashboardName }}\" will remove it for all users. This action cannot be undone. Are you sure you want to permanently delete this dashboard?',\n                        { dashboardName }\n                    )}\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>{actions}</DialogActions>\n        </Dialog>\n    );\n};\n\nConfirmDeleteDialog.propTypes = {\n    dashboardName: PropTypes.string,\n    open: PropTypes.bool,\n    onContinueEditing: PropTypes.func,\n    onDeleteConfirmed: PropTypes.func,\n};\n\nexport default ConfirmDeleteDialog;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport ControlBar from './ControlBar';\nimport TranslationDialog from '@dhis2/d2-ui-translation-dialog';\nimport { Button } from '@dhis2/ui-core';\n\nimport ConfirmDeleteDialog from './ConfirmDeleteDialog';\nimport {\n    tSaveDashboard,\n    acClearEditDashboard,\n} from '../../actions/editDashboard';\nimport {\n    tDeleteDashboard,\n    acSetDashboardDisplayName,\n} from '../../actions/dashboards';\nimport {\n    sGetEditDashboardRoot,\n    sGetIsNewDashboard,\n} from '../../reducers/editDashboard';\nimport {\n    CONTROL_BAR_ROW_HEIGHT,\n    MIN_ROW_COUNT,\n    getControlBarHeight,\n} from './controlBarDimensions';\nimport { apiFetchDashboard } from '../../api/dashboards';\n\nimport classes from './styles/DashboardsBar.module.css';\n\nconst buttonBarStyle = {\n    height: CONTROL_BAR_ROW_HEIGHT,\n    paddingTop: '15px',\n    marginLeft: '15px',\n    marginRight: '15px',\n};\n\nexport class EditBar extends Component {\n    state = {\n        translationDialogIsOpen: false,\n        dashboardModel: undefined,\n        confirmDeleteDialogOpen: false,\n        redirectUrl: undefined,\n    };\n\n    onConfirmDelete = () => {\n        this.setState({ confirmDeleteDialogOpen: true });\n    };\n\n    onSave = () => {\n        this.props.onSave().then(newId => {\n            this.setState({ redirectUrl: `/${newId}` });\n        });\n    };\n\n    onDiscard = () => {\n        this.props.onDiscardChanges();\n        const redirectUrl = this.props.dashboardId\n            ? `/${this.props.dashboardId}`\n            : '/';\n        this.setState({ redirectUrl });\n    };\n\n    onContinueEditing = () => {\n        this.setState({ confirmDeleteDialogOpen: false });\n    };\n\n    onDeleteConfirmed = () => {\n        this.setState({ confirmDeleteDialogOpen: false });\n        this.props.onDelete(this.props.dashboardId).then(() => {\n            this.setState({ redirectUrl: '/' });\n        });\n    };\n\n    onTranslationsSaved = async translations => {\n        if (translations && translations.length) {\n            const dbLocale = await this.context.d2.currentUser.userSettings.get(\n                'keyDbLocale'\n            );\n\n            const translation = translations.find(\n                t => t.locale === dbLocale && t.property === 'NAME'\n            );\n\n            if (translation && translation.value) {\n                this.props.onTranslate(\n                    this.props.dashboardId,\n                    translation.value\n                );\n            }\n        }\n    };\n\n    fetchDashboardModel = () => {\n        if (this.props.dashboardId && !this.state.dashboardModel) {\n            apiFetchDashboard(this.props.dashboardId).then(dashboardModel =>\n                this.setState({ dashboardModel })\n            );\n        }\n    };\n\n    componentDidMount() {\n        this.fetchDashboardModel();\n    }\n\n    componentDidUpdate() {\n        this.fetchDashboardModel();\n    }\n\n    toggleTranslationDialog = () => {\n        this.setState({\n            translationDialogIsOpen: !this.state.translationDialogIsOpen,\n        });\n    };\n\n    confirmDeleteDialog = () =>\n        this.props.deleteAccess && this.props.dashboardId ? (\n            <ConfirmDeleteDialog\n                dashboardName={this.props.dashboardName}\n                onDeleteConfirmed={this.onDeleteConfirmed}\n                onContinueEditing={this.onContinueEditing}\n                open={this.state.confirmDeleteDialogOpen}\n            />\n        ) : null;\n\n    translationDialog = () =>\n        this.state.dashboardModel && this.state.dashboardModel.id ? (\n            <TranslationDialog\n                className=\"translation-dialog\"\n                d2={this.context.d2}\n                open={this.state.translationDialogIsOpen}\n                onRequestClose={this.toggleTranslationDialog}\n                objectToTranslate={this.state.dashboardModel}\n                fieldsToTranslate={['name', 'description']}\n                // TODO handle messages in snackbar\n                onTranslationSaved={this.onTranslationsSaved}\n                onTranslationError={err =>\n                    console.log('translation update error', err)\n                }\n            />\n        ) : null;\n\n    render() {\n        if (this.state.redirectUrl) {\n            return <Redirect to={this.state.redirectUrl} />;\n        }\n\n        const { dashboardId, deleteAccess, updateAccess } = this.props;\n        const controlBarHeight = getControlBarHeight(MIN_ROW_COUNT);\n\n        const discardBtnText = updateAccess\n            ? i18n.t('Exit without saving')\n            : i18n.t('Go to dashboards');\n\n        return (\n            <Fragment>\n                <ControlBar height={controlBarHeight} editMode={true}>\n                    <div style={buttonBarStyle}>\n                        {updateAccess ? (\n                            <div className={classes.leftControls}>\n                                <span style={{ marginRight: '15px' }}>\n                                    <Button primary onClick={this.onSave}>\n                                        {i18n.t('Save changes')}\n                                    </Button>\n                                </span>\n\n                                {dashboardId ? (\n                                    <span style={{ marginRight: '15px' }}>\n                                        <Button\n                                            onClick={\n                                                this.toggleTranslationDialog\n                                            }\n                                        >\n                                            {i18n.t('Translate')}\n                                        </Button>\n                                    </span>\n                                ) : null}\n                                {dashboardId && deleteAccess ? (\n                                    <Button onClick={this.onConfirmDelete}>\n                                        {i18n.t('Delete')}\n                                    </Button>\n                                ) : null}\n                            </div>\n                        ) : null}\n\n                        <div className={classes.rightControls}>\n                            <Button secondary onClick={this.onDiscard}>\n                                {discardBtnText}\n                            </Button>\n                        </div>\n                    </div>\n                </ControlBar>\n                {this.translationDialog()}\n                {this.confirmDeleteDialog()}\n            </Fragment>\n        );\n    }\n}\n\nEditBar.propTypes = {\n    dashboardId: PropTypes.string,\n    dashboardName: PropTypes.string,\n    deleteAccess: PropTypes.bool,\n    updateAccess: PropTypes.bool,\n    onDelete: PropTypes.func,\n    onDiscardChanges: PropTypes.func,\n    onSave: PropTypes.func,\n    onTranslate: PropTypes.func,\n};\n\nEditBar.contextTypes = {\n    d2: PropTypes.object,\n};\n\nconst mapStateToProps = state => {\n    const dashboard = sGetEditDashboardRoot(state);\n\n    let deleteAccess;\n    let updateAccess;\n    if (sGetIsNewDashboard(state)) {\n        deleteAccess = true;\n        updateAccess = true;\n    } else {\n        updateAccess = dashboard.access ? dashboard.access.update : false;\n        deleteAccess = dashboard.access ? dashboard.access.delete : false;\n    }\n\n    return {\n        dashboardId: dashboard.id,\n        dashboardName: dashboard.name,\n        deleteAccess,\n        updateAccess,\n    };\n};\n\nconst mapDispatchToProps = dispatch => ({\n    onSave: () => dispatch(tSaveDashboard()).then(id => id),\n    onDelete: id => dispatch(tDeleteDashboard(id)),\n    onDiscardChanges: () => dispatch(acClearEditDashboard()),\n    onTranslate: (id, value) => dispatch(acSetDashboardDisplayName(id, value)),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(EditBar);\n","import React, { Fragment, Component } from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\n\nimport { acSetEditDashboard } from '../../actions/editDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n    sDashboardsIsFetching,\n} from '../../reducers/dashboards';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport DashboardContent from './DashboardContent';\nimport EditBar from '../ControlBar/EditBar';\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nexport const Content = ({ updateAccess }) => {\n    return updateAccess ? (\n        <DashboardContent editMode={true} />\n    ) : (\n        <NoContentMessage text={i18n.t('No access')} />\n    );\n};\n\nContent.propTypes = {\n    updateAccess: PropTypes.bool,\n};\nexport class EditDashboard extends Component {\n    state = {\n        initialized: false,\n    };\n\n    initEditDashboard = () => {\n        if (this.props.dashboard) {\n            this.setState({ initialized: true });\n            this.props.setEditDashboard(this.props.dashboard, this.props.items);\n        }\n    };\n\n    componentDidMount() {\n        this.initEditDashboard();\n    }\n\n    componentDidUpdate() {\n        if (!this.state.initialized) {\n            this.initEditDashboard();\n        }\n    }\n\n    getDashboardContent = () => {\n        const contentNotReady =\n            !this.props.dashboardsLoaded || this.props.id === null;\n\n        return (\n            <div className=\"dashboard-wrapper\">\n                {contentNotReady ? null : (\n                    <Content updateAccess={this.props.updateAccess} />\n                )}\n            </div>\n        );\n    };\n\n    render() {\n        return (\n            <Fragment>\n                <EditBar />\n                <DashboardVerticalOffset editMode={true} />\n                {this.getDashboardContent()}\n            </Fragment>\n        );\n    }\n}\n\nEditDashboard.propTypes = {\n    dashboard: PropTypes.object,\n    dashboardsLoaded: PropTypes.bool,\n    id: PropTypes.string,\n    items: PropTypes.array,\n    setEditDashboard: PropTypes.func,\n    updateAccess: PropTypes.bool,\n};\n\nconst mapStateToProps = state => {\n    const id = sGetSelectedId(state);\n    const dashboard = id ? sGetDashboardById(state, id) : null;\n\n    const updateAccess =\n        dashboard && dashboard.access ? dashboard.access.update : false;\n\n    return {\n        dashboard,\n        id,\n        updateAccess,\n        items: sGetDashboardItems(state),\n        dashboardsLoaded: !sDashboardsIsFetching(state),\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        setEditDashboard: acSetEditDashboard,\n    }\n)(EditDashboard);\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { acSetEditNewDashboard } from '../../actions/editDashboard';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport EditBar from '../ControlBar/EditBar';\nimport DashboardContent from './DashboardContent';\n\nclass NewDashboard extends Component {\n    componentDidMount() {\n        this.props.setNewDashboard();\n    }\n\n    render() {\n        return (\n            <Fragment>\n                <EditBar />\n                <DashboardVerticalOffset editMode={true} />\n                <div className=\"dashboard-wrapper\">\n                    <DashboardContent editMode={true} />\n                </div>\n            </Fragment>\n        );\n    }\n}\n\nNewDashboard.propTypes = {\n    setNewDashboard: PropTypes.func,\n};\n\nexport default connect(\n    null,\n    {\n        setNewDashboard: acSetEditNewDashboard,\n    }\n)(NewDashboard);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { tSelectDashboard } from '../../actions/dashboards';\nimport { sDashboardsIsFetching } from '../../reducers/dashboards';\nimport { EDIT, NEW } from './dashboardModes';\nimport ViewDashboard from './ViewDashboard';\nimport EditDashboard from './EditDashboard';\nimport NewDashboard from './NewDashboard';\n\nclass Dashboard extends Component {\n    setDashboard = () => {\n        if (this.props.dashboardsLoaded) {\n            const id = this.props.match.params.dashboardId || null;\n\n            this.props.selectDashboard(id);\n\n            this.scrollToTop();\n        }\n    };\n\n    scrollToTop = () => {\n        window.scrollTo(0, 0);\n    };\n\n    componentDidMount() {\n        this.setDashboard();\n    }\n\n    componentDidUpdate() {\n        this.setDashboard();\n    }\n\n    render() {\n        switch (this.props.mode) {\n            case EDIT:\n                return <EditDashboard />;\n            case NEW:\n                return <NewDashboard />;\n            default:\n                return <ViewDashboard />;\n        }\n    }\n}\n\nDashboard.propTypes = {\n    dashboardsLoaded: PropTypes.bool,\n    match: PropTypes.object,\n    mode: PropTypes.string,\n    selectDashboard: PropTypes.func,\n};\n\nconst mapStateToProps = state => {\n    return { dashboardsLoaded: !sDashboardsIsFetching(state) };\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        selectDashboard: tSelectDashboard,\n    }\n)(Dashboard);\n","export const EDIT = 'edit';\nexport const NEW = 'new';\nexport const VIEW = 'view';\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { HeaderBar } from '@dhis2/ui-widgets';\n\nimport { EDIT, VIEW, NEW } from './Dashboard/dashboardModes';\nimport { acReceivedUser } from '../actions/user';\nimport { tFetchDashboards } from '../actions/dashboards';\nimport { tSetControlBarRows } from '../actions/controlBar';\nimport { tSetDimensions } from '../actions/dimensions';\nimport Dashboard from './Dashboard/Dashboard';\nimport SnackbarMessage from './SnackbarMessage/SnackbarMessage';\n\nimport 'typeface-roboto';\nimport './App.css';\n\nexport class App extends Component {\n    componentDidMount() {\n        this.props.setCurrentUser(this.props.d2.currentUser);\n        this.props.fetchDashboards();\n        this.props.setControlBarRows();\n        this.props.setDimensions(this.props.d2);\n    }\n\n    getChildContext() {\n        return { baseUrl: this.props.baseUrl, i18n, d2: this.props.d2 };\n    }\n\n    render() {\n        return (\n            <div className=\"app-wrapper\">\n                <div className=\"dashboard-header-bar\">\n                    <HeaderBar appName={i18n.t('Dashboard')} />\n                </div>\n                <Router>\n                    <Switch>\n                        <Route\n                            exact\n                            path=\"/\"\n                            render={props => (\n                                <Dashboard {...props} mode={VIEW} />\n                            )}\n                        />\n                        <Route\n                            exact\n                            path=\"/new\"\n                            render={props => (\n                                <Dashboard {...props} mode={NEW} />\n                            )}\n                        />\n                        <Route\n                            exact\n                            path=\"/:dashboardId\"\n                            render={props => (\n                                <Dashboard {...props} mode={VIEW} />\n                            )}\n                        />\n                        <Route\n                            exact\n                            path=\"/:dashboardId/edit\"\n                            render={props => (\n                                <Dashboard {...props} mode={EDIT} />\n                            )}\n                        />\n                    </Switch>\n                </Router>\n                <SnackbarMessage />\n            </div>\n        );\n    }\n}\n\nApp.propTypes = {\n    fetchDashboards: PropTypes.func.isRequired,\n    setControlBarRows: PropTypes.func.isRequired,\n    setCurrentUser: PropTypes.func.isRequired,\n    setDimensions: PropTypes.func.isRequired,\n    baseUrl: PropTypes.string,\n    d2: PropTypes.object,\n};\n\nApp.childContextTypes = {\n    baseUrl: PropTypes.string,\n    i18n: PropTypes.object,\n    d2: PropTypes.object,\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setCurrentUser: currentUser => dispatch(acReceivedUser(currentUser)),\n        fetchDashboards: () => dispatch(tFetchDashboards()),\n        setControlBarRows: () => dispatch(tSetControlBarRows()),\n        setDimensions: d2 => dispatch(tSetDimensions(d2)),\n    };\n};\n\nexport default connect(\n    null,\n    mapDispatchToProps\n)(App);\n","import { RECEIVED_USER } from '../reducers/user';\n\nexport const acReceivedUser = value => ({\n    type: RECEIVED_USER,\n    value,\n});\n","//------------------------------------------------------------------------------\n// <auto-generated>\n// This code was generated by d2-i18n-generate.\n//\n// Changes to this file may cause incorrect behavior and will be lost if\n// the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\nimport i18n from '@dhis2/d2-i18n';\nimport moment from 'moment';\nimport 'moment/locale/ar';\nimport 'moment/locale/es';\nimport 'moment/locale/fr';\nimport 'moment/locale/lo';\nimport 'moment/locale/pt';\nimport 'moment/locale/ru';\nimport 'moment/locale/sv';\nimport 'moment/locale/tg';\nimport 'moment/locale/uk';\nimport 'moment/locale/ur';\nimport 'moment/locale/vi';\nimport 'moment/locale/zh-cn';\n\nimport arTranslations from './ar/translations.json';\nimport daTranslations from './da/translations.json';\nimport enTranslations from './en/translations.json';\nimport esTranslations from './es/translations.json';\nimport frTranslations from './fr/translations.json';\nimport idTranslations from './id/translations.json';\nimport kmTranslations from './km/translations.json';\nimport loTranslations from './lo/translations.json';\nimport myTranslations from './my/translations.json';\nimport prsTranslations from './prs/translations.json';\nimport psTranslations from './ps/translations.json';\nimport ptTranslations from './pt/translations.json';\nimport pt_BRTranslations from './pt_BR/translations.json';\nimport ruTranslations from './ru/translations.json';\nimport svTranslations from './sv/translations.json';\nimport tetTranslations from './tet/translations.json';\nimport tgTranslations from './tg/translations.json';\nimport ukTranslations from './uk/translations.json';\nimport urTranslations from './ur/translations.json';\nimport viTranslations from './vi/translations.json';\nimport zhTranslations from './zh/translations.json';\n\nconst namespace = 'dashboards-app';\nmoment.locale('en');\n\ni18n.addResources('ar', namespace, arTranslations);\ni18n.addResources('da', namespace, daTranslations);\ni18n.addResources('en', namespace, enTranslations);\ni18n.addResources('es', namespace, esTranslations);\ni18n.addResources('fr', namespace, frTranslations);\ni18n.addResources('id', namespace, idTranslations);\ni18n.addResources('km', namespace, kmTranslations);\ni18n.addResources('lo', namespace, loTranslations);\ni18n.addResources('my', namespace, myTranslations);\ni18n.addResources('prs', namespace, prsTranslations);\ni18n.addResources('ps', namespace, psTranslations);\ni18n.addResources('pt', namespace, ptTranslations);\ni18n.addResources('pt_BR', namespace, pt_BRTranslations);\ni18n.addResources('ru', namespace, ruTranslations);\ni18n.addResources('sv', namespace, svTranslations);\ni18n.addResources('tet', namespace, tetTranslations);\ni18n.addResources('tg', namespace, tgTranslations);\ni18n.addResources('uk', namespace, ukTranslations);\ni18n.addResources('ur', namespace, urTranslations);\ni18n.addResources('vi', namespace, viTranslations);\ni18n.addResources('zh', namespace, zhTranslations);\n\ni18n.setDefaultNamespace(namespace);\ni18n.changeLanguage('en');\n\nexport default i18n;\n","/** @module reducers/selected */\nimport { validateReducer } from '../modules/util';\n\nexport const SET_STYLE = 'SET_STYLE';\n\nexport const DEFAULT_STATE_STYLE = 'LIST';\n\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\nconst style = (state = DEFAULT_STATE_STYLE, action) => {\n    switch (action.type) {\n        case SET_STYLE:\n            return validateReducer(action.value, DEFAULT_STATE_STYLE);\n        default:\n            return state;\n    }\n};\n\nexport default style;\n\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\nexport const sGetStyleRoot = state => state.style;\n","import { combineReducers } from 'redux';\nimport arraySort from 'd2-utilizr/lib/arraySort';\n\nimport dashboards, { sGetDashboardsRoot } from './dashboards';\nimport selected from './selected';\nimport dashboardsFilter, {\n    ownerData,\n    sGetFilterName,\n    sGetFilterOrder,\n    sGetFilterOwner,\n} from './dashboardsFilter';\nimport controlBar from './controlBar';\nimport visualizations from './visualizations';\nimport editDashboard from './editDashboard';\nimport messages from './messages';\nimport user from './user';\nimport snackbar from './snackbar';\nimport itemFilters from './itemFilters';\nimport editItemFilters from './editItemFilters';\nimport style from './style';\nimport dimensions from './dimensions';\nimport settings from './settings';\nimport activeModalDimension from './activeModalDimension';\n\nconst USER = 'system';\n\n// Reducers\n\nexport default combineReducers({\n    dashboards,\n    selected,\n    dashboardsFilter,\n    controlBar,\n    visualizations,\n    messages,\n    user,\n    editDashboard,\n    itemFilters,\n    editItemFilters,\n    style,\n    snackbar,\n    dimensions,\n    settings,\n    activeModalDimension,\n});\n\n// Map constants to data\nconst mapConstToData = {\n    NAME: 'name',\n    ITEMS: 'numberOfItems',\n    CREATED: 'created',\n    OWNER: 'owner',\n};\n\n// Selectors\n\n// Filter dashboards by name\nexport const sFilterDashboardsByName = (dashboards, filter) =>\n    dashboards.filter(d =>\n        d.displayName.toLowerCase().includes(filter.toLowerCase())\n    );\n\n// Filter dashboards by owner, TODO FIXME\nexport const sFilterDashboardsByOwner = (dashboards, filter) => {\n    const ME = ownerData[1]; // TODO\n    const OTHERS = ownerData[2]; // TODO\n\n    switch (filter) {\n        case ME:\n            return dashboards.filter(d => d.owner === USER);\n        case OTHERS:\n            return dashboards.filter(d => d.owner !== USER);\n        default:\n            return dashboards;\n    }\n};\n\n// Filter dashboards by order\nexport const sFilterDashboardsByOrder = (dashboards, filter) => {\n    const filterValues = filter.split(':');\n\n    const key = filterValues[0];\n    const direction = filterValues[1];\n\n    return arraySort(dashboards, direction, mapConstToData[key]);\n};\n\n// Selectors dependency level 2\n\n// Get filtered dashboards\nexport const sGetFilteredDashboards = state => {\n    const dashboards = sGetDashboardsRoot(state);\n\n    const nameFilter = sGetFilterName(state);\n    const ownerFilter = sGetFilterOwner(state);\n    const orderFilter = sGetFilterOrder(state);\n\n    return sFilterDashboardsByOrder(\n        sFilterDashboardsByName(\n            sFilterDashboardsByOwner(dashboards, ownerFilter),\n            nameFilter\n        ),\n        orderFilter\n    );\n};\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport reducer from './reducers';\n\nconst configureStore = () => {\n    const middleware = [thunk];\n\n    // Enable Redux devtools if extension is installed instead of redux-logger\n    const composeEnhancers =\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n    if (\n        !window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ &&\n        process.env.NODE_ENV !== 'production'\n    ) {\n        middleware.push(createLogger());\n    }\n\n    return createStore(\n        reducer,\n        composeEnhancers(applyMiddleware(...middleware))\n    );\n};\n\nexport default configureStore;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport { init as d2Init, config, getManifest, getUserSettings } from 'd2';\nimport dhis2theme from '@dhis2/d2-ui-core/theme/mui3.theme';\n\nimport { Provider as RuntimeProvider } from '@dhis2/app-runtime';\nimport { CssReset } from '@dhis2/ui-core';\n\nimport App from './components/App';\nimport './index.css';\nimport i18n from './locales';\nimport configureStore from './configureStore';\n\nconst muiTheme = () => createMuiTheme(dhis2theme);\n\nconst configI18n = userSettings => {\n    const uiLocale = userSettings.keyUiLocale;\n\n    if (uiLocale && uiLocale !== 'en') {\n        config.i18n.sources.add(`./i18n/i18n_module_${uiLocale}.properties`);\n    }\n\n    config.i18n.sources.add('./i18n/i18n_module_en.properties');\n    i18n.changeLanguage(uiLocale);\n};\n\nconst init = async () => {\n    const manifest = await getManifest('./manifest.webapp');\n\n    // log app info\n    console.info(\n        `Dashboards app, v${manifest.version}, ${\n            manifest.manifest_generated_at\n        }`\n    );\n\n    const isProd = process.env.NODE_ENV === 'production';\n\n    if (\n        !isProd &&\n        (!process.env.REACT_APP_DHIS2_BASE_URL ||\n            !process.env.REACT_APP_DHIS2_AUTHORIZATION)\n    ) {\n        throw new Error(\n            'Missing env variables REACT_APP_DHIS2_BASE_URL and REACT_APP_DHIS2_AUTHORIZATION'\n        );\n    }\n\n    // api config\n    const baseUrl = isProd\n        ? manifest.activities.dhis.href\n        : process.env.REACT_APP_DHIS2_BASE_URL;\n    const authorization = process.env.REACT_APP_DHIS2_AUTHORIZATION;\n\n    config.baseUrl = `${baseUrl}/api/${manifest.dhis2.apiVersion}`;\n    config.headers = isProd ? null : { Authorization: authorization };\n    config.schemas = [\n        'chart',\n        'map',\n        'report',\n        'reportTable',\n        'eventChart',\n        'eventReport',\n        'dashboard',\n        'organisationUnit',\n        'userGroup',\n    ];\n\n    getUserSettings()\n        .then(configI18n)\n        .then(() => d2Init(config))\n        .then(initializedD2 => {\n            ReactDOM.render(\n                <RuntimeProvider\n                    config={{\n                        baseUrl: baseUrl,\n                        apiVersion: manifest.dhis2.apiVersion,\n                    }}\n                >\n                    <CssReset />\n                    <Provider store={configureStore()}>\n                        <MuiThemeProvider theme={muiTheme()}>\n                            <App baseUrl={baseUrl} d2={initializedD2} />\n                        </MuiThemeProvider>\n                    </Provider>\n                </RuntimeProvider>,\n                document.getElementById('root')\n            );\n        });\n};\n\ninit();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"leftControls\":\"DashboardsBar_leftControls__2kr14\",\"rightControls\":\"DashboardsBar_rightControls__2l1lT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuItem\":\"ContentMenuItem_menuItem__2DIcB\",\"launchLink\":\"ContentMenuItem_launchLink__MRANR\",\"label\":\"ContentMenuItem_label__2pIfq\",\"buttonInsert\":\"ContentMenuItem_buttonInsert__1GlZy\"};","import isObject from 'lodash/isObject';\n\n// validation\nexport function orNull(param) {\n    return param === undefined ? null : param;\n}\n\nexport function orArray(param) {\n    return Array.isArray(param) ? param : [];\n}\n\nexport function orObject(param) {\n    return isObject(param) ? param : {};\n}\n\n// array\nexport function arrayGetById(array, id) {\n    return array.find(item => item.id === id);\n}\n\n// object\nexport function arrayToIdMap(array) {\n    return array.reduce((obj, item) => {\n        obj[item.id] = item;\n        return obj;\n    }, {});\n}\n\n// date\nexport function getDate() {\n    const y = Math.floor(Math.random() * 3) + 2015;\n    const M = Math.floor(Math.random() * 12) + 1;\n    const d = Math.floor(Math.random() * 28) + 1;\n    // const h = Math.floor(Math.random() * 23) + 1;\n    // const m = Math.floor(Math.random() * 59) + 1;\n    // const s = Math.floor(Math.random() * 59) + 1;\n\n    return new Date(`${y}-${M}-${d}`)\n        .toJSON()\n        .replace('T', ' ')\n        .substr(0, 10);\n}\n\nexport const formatDate = (value, uiLocale) => {\n    if (typeof global.Intl !== 'undefined' && Intl.DateTimeFormat) {\n        const locale = uiLocale || 'en';\n        return new Intl.DateTimeFormat(locale, {\n            year: 'numeric',\n            month: 'short',\n            day: 'numeric',\n        }).format(new Date(value));\n    }\n\n    return value.substr(0, 19).replace('T', ' ');\n};\n\n/**\n * Sorts an array of objects based on provided date property\n *\n * @param {Array} items Array of objects\n * @param {String} dateProp Name of the date property to be used for sorting\n * @param {Boolean} ascending Whether to sort ascending or descending\n */\nexport const sortByDate = (items, dateProp, ascending = true) => {\n    const values = Object.values(items);\n\n    values.sort((a, b) => {\n        const aDate = new Date(a[dateProp]);\n        const bDate = new Date(b[dateProp]);\n\n        return ascending ? aDate - bDate : bDate - aDate;\n    });\n\n    return values;\n};\n\n// reducer validator\nexport const validateReducer = (value, defaultValue) =>\n    value === undefined || value === null ? defaultValue : value;\n\nexport const getBaseUrl = d2 => {\n    const api = d2.Api.getApi();\n    const idx = api.baseUrl.indexOf('/api');\n    return idx > -1 ? api.baseUrl.slice(0, idx) : api.baseUrl;\n};\n\nexport const getWithoutId = object => ({\n    ...object,\n    id: undefined,\n});\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ControlBar_root__3LaTt\",\"content\":\"ControlBar_content__1r98-\",\"draghandle\":\"ControlBar_draghandle__1VWa0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ClearButton_button__2yjcV\",\"icon\":\"ClearButton_icon__1fqj8\"};"],"sourceRoot":""}
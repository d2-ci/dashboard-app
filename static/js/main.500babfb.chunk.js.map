{"version":3,"sources":["api/metadata.js","components/Item/ListItem/Item.module.css","components/TitleBar/styles/EditTitleBar.module.css","components/TitleBar/styles/ViewTitleBar.module.css","modules/itemTypes.js","components/ControlBar/styles/DashboardsBar.module.css","components/ControlBar/styles/DashboardItemChip.module.css","reducers/user.js","modules/uiBackendItemConverter.js","reducers/dashboards.js","reducers/editDashboard.js","reducers/editItemFilters.js","reducers/selected.js","actions/editItemFilters.js","reducers/itemFilters.js","actions/itemFilters.js","reducers/messages.js","api/messages.js","reducers/snackbar.js","actions/snackbar.js","reducers/visualizations.js","actions/visualizations.js","api/index.js","api/dashboards.js","components/SnackbarMessage/SnackbarMessage.js","actions/selected.js","api/localStorage.js","components/Item/MessagesItem/actions.js","api/editDashboard.js","actions/editDashboard.js","actions/dashboards.js","reducers/controlBar.js","api/controlBar.js","actions/controlBar.js","reducers/dimensions.js","reducers/settings.js","actions/dimensions.js","components/ControlBar/ShowMoreButton.js","components/ControlBar/controlBarDimensions.js","components/ControlBar/ControlBar.js","icons/Star.js","api/dataStatistics.js","components/ControlBar/DashboardItemChip.js","icons/AddCircle.js","icons/Clear.js","components/ControlBar/ClearButton.js","reducers/dashboardsFilter.js","components/ControlBar/Filter.js","components/ControlBar/DashboardsBar.js","actions/dashboardsFilter.js","components/Dashboard/DashboardVerticalOffset.js","components/ItemSelector/HeaderMenuItem.js","icons/Launch.js","components/ItemSelector/ContentMenuItem.js","components/ItemSelector/selectableItems.js","components/ItemSelector/CategorizedMenuGroup.js","components/ItemSelector/actions.js","components/ItemSelector/SinglesMenuGroup.js","components/ItemSelector/ItemSelector.js","components/TitleBar/EditTitleBar.js","components/ItemFilter/FilterDialog.js","reducers/activeModalDimension.js","actions/activeModalDimension.js","components/ItemFilter/FilterSelector.js","components/TitleBar/Info.js","components/TitleBar/ViewTitleBar.js","components/TitleBar/TitleBar.js","components/Item/VisualizationItem/DefaultPlugin.js","components/Item/VisualizationItem/assets/icons.js","components/Item/VisualizationItem/FatalErrorBoundary.js","components/Item/DeleteItemButton.js","components/Item/ItemHeader.js","components/Item/VisualizationItem/ItemHeaderButtons.js","components/Item/VisualizationItem/ItemFooter.js","modules/memoizeOne.js","components/Item/VisualizationItem/LoadingMask.js","components/Item/VisualizationItem/Item.js","widgets/Line.js","components/Item/MessagesItem/Item.js","components/Item/NotSupportedItem/Item.js","icons/Description.js","icons/Delete.js","components/Item/ListItem/Item.js","components/Item/ListItem/actions.js","components/Item/TextItem/Item.js","components/Item/AppItem/Item.js","components/Item/SpacerItem/Item.js","components/Item/Item.js","widgets/NoContentMessage.js","components/Item/ProgressiveLoadingContainer.js","components/ItemGrid/ItemGrid.js","components/FilterBar/FilterBadge.js","components/FilterBar/FilterBar.js","components/Dashboard/DashboardContent.js","components/Dashboard/ViewDashboard.js","components/ControlBar/ConfirmDeleteDialog.js","components/ControlBar/EditBar.js","components/Dashboard/EditDashboard.js","components/Dashboard/NewDashboard.js","components/Dashboard/Dashboard.js","components/Dashboard/dashboardModes.js","components/App.js","actions/user.js","locales/index.js","reducers/style.js","reducers/index.js","configureStore.js","index.js","components/ItemSelector/styles/ContentMenuItem.module.css","components/Item/styles/ItemHeader.module.css","modules/util.js","components/ControlBar/styles/ControlBar.module.css","components/Item/VisualizationItem/styles/FatalErrorBoundary.module.css","components/ControlBar/styles/ShowMoreButton.module.css","components/ControlBar/styles/ClearButton.module.css","components/Item/VisualizationItem/styles/Item.module.css","components/Item/VisualizationItem/plugin.js","components/ItemGrid/gridUtil.js","components/ItemSelector/styles/CategorizedMenuGroup.module.css","components/Item/styles/DeleteItemButton.module.css","components/Item/VisualizationItem/styles/LoadingMask.module.css","components/FilterBar/styles/FilterBar.module.css","components/ControlBar/styles/ConfirmDeleteDialog.module.css"],"names":["getIdNameFields","rename","arguments","length","undefined","concat","getDimensionFields","_ref2","withItems","arrayClean","join","getAxesFields","_ref3","getFavoriteFields","_ref4","withDimensions","withOptions","getFavoritesFields","_ref5","Object","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","getListItemFields","getMapFields","apiFetchFavorite","id","type","_ref6","fields","getInstance","then","d2","Api","getApi","get","getEndPointName","module","exports","list","item","itemicon","link","deleteicon","deletebutton","section","titleDescription","title","description","itemSelector","actions","editLink","titleBar","titleBarIcon","VISUALIZATION","REPORT_TABLE","CHART","MAP","EVENT_REPORT","EVENT_CHART","APP","REPORTS","RESOURCES","USERS","MESSAGES","TEXT","SPACER","isVisualizationType","itemTypeMap","hasMapView","itemType","domainType","isTrackerDomainType","getDefaultItemCount","defaultItemCount","getAppName","appName","_itemTypeMap","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","endPointName","propName","pluralTitle","i18n","t","appUrl","Date","getTime","getItemUrl","url","launchUrl","getBaseUrl","getItemIcon","TableIcon","ChartIcon","MapIcon","ExtensionIcon","DescriptionIcon","PersonIcon","FontDownloadIcon","EmailIcon","CropFreeIcon","NotInterestedIcon","leftControls","rightControls","icon","selected","unselected","DEFAULT_STATE_USER","username","uiLocale","isSuperuser","sGetUserUsername","state","user","spacerContent","isTextType","text","convertUiItemsToBackend","items","map","isUiSpacerType","objectSpread","convertBackendItemsToUi","isBackendSpacerType","gridProperties","getGridItemProperties","DEFAULT_STATE_DASHBOARDS","byId","updateDashboardProp","_ref","dashboardId","prop","value","defineProperty","sGetDashboardsRoot","dashboards","sGetDashboardById","orObject","sDashboardsIsFetching","sGetAllDashboards","sGetDashboardItems","sGetStarredDashboards","values","filter","dashboard","starred","sGetUnstarredDashboards","sGetDashboardsSortedByStarred","toConsumableArray","arraySort","getCustomDashboards","data","arrayFrom","d","name","displayName","displayDescription","favorite","owner","created","split","substr","lastUpdated","access","numberOfItems","orArray","dashboardItems","DEFAULT_STATE_EDIT_DASHBOARD","NEW_DASHBOARD_STATE","sGetEditDashboardRoot","editDashboard","sGetIsEditing","isEmpty","sGetEditDashboardItems","DEFAULT_STATE_EDIT_ITEM_FILTERS","sGetEditItemFiltersRoot","editItemFilters","combineReducers","action","validateReducer","isLoading","showDescription","sGetSelectedRoot","sGetSelectedId","sGetSelectedIsLoading","sGetSelectedShowDescription","acRemoveEditItemFilter","DEFAULT_STATE_ITEM_FILTERS","sGetItemFiltersRoot","itemFilters","sGetFiltersKeys","keys","acRemoveItemFilter","sGetMessagesRoot","messages","getMessages","catch","error","console","log","DEFAULT_STATE_SNACKBAR","message","duration","open","acCloseSnackbar","DEFAULT_STATE_VISUALIZATIONS","p","sGetVisualization","visualizations","sGetVisualizationsRoot","acAddVisualization","onError","getDashboardItemsFields","withFavorite","getDashboardFields","apiFetchDashboard","models","apiStarDashboard","isStarred","post","delete","apiDeleteDashboard","loadingDashboardMsg","SnackbarMessageContent","react_default","a","createElement","style","fontWeight","connect","_sGetSnackbar","snackbar","sGetSnackbar","snackbarOpen","snackbarMessage","snackbarDuration","onCloseSnackbar","props","Snackbar_default","zIndex","SnackbarMessage_SnackbarMessageContent","autoHideDuration","onClose","acSetSelectedId","acSetSelectedIsLoading","tLoadDashboard","asyncToGenerator","regenerator_default","mark","_callee","dispatch","dash","wrap","_context","prev","next","sent","acAppendDashboards","abrupt","Promise","resolve","t0","stop","_x","apply","this","tSetSelectedDashboardById","_callee2","getState","snackbarTimeout","onSuccess","_context2","setTimeout","dashboardName","customDashboard","acSetDashboardItems","withShape","localStorage","setItem","forEach","extractFavorite","messageConversations","filters","clearTimeout","_x2","_x3","saveDashboard","assign","width","w","height","h","save","msg","response","uid","updateDashboard","postDashboard","create","acAddDashboardItem","itemPropName","generateUid","gridItemProperties","content","NEW_ITEM_SHAPE","acUpdateDashboardItem","acRemoveDashboardItem","arrayToIdMap","acSetDashboardStarred","tFetchDashboards","collection","paging","toArray","userRows","sGetControlBarUserRows","controlBar","sGetControlBarRoot","KEY","hasNamespace","currentUser","dataStore","has","getNamespace","apiGetControlBarRows","_callee3","namespace","_context3","t1","t2","find","key","apiPostControlBarRows","_callee4","rows","_context4","set","_x4","_x5","acSetControlBarUserRows","DEFAULT_DIMENSIONS","getDimensionById","DIMENSION_ID_PERIOD","DIMENSION_ID_ORGUNIT","sGetDimensions","dimensions","DEFAULT_SETTINGS","keyDateFormat","keyAnalysisRelativePeriod","keyAnalysisDigitGroupSeparator","displayNameProperty","rootOrganisationUnit","sGetSettings","settings","sGetSettingsDisplayNameProperty","acSetDimensions","ShowMoreButton","onClick","isMaxHeight","disabled","textAlign","className","classes","showMore","MIN_ROW_COUNT","getRowsHeight","getNumRowsFromHeight","Math","floor","FIRST_ROW_PADDING_HEIGHT","getTopOffset","getControlBarHeight","ControlBar","_this","classCallCheck","_super","call","onStartDrag","setState","dragging","window","addEventListener","onDrag","onEndDrag","event","preventDefault","stopPropagation","newHeight","clientY","onChangeHeight","requestAnimationFrame","removeEventListener","draghandle","onMouseDown","max","rootStyle","top","backgroundColor","editMode","colors","yellow050","white","paddingBottom","transition","root","children","renderDragHandle","React","Component","defaultProps","StarIcon","xmlns","viewBox","fill","apiPostDataStatistics","eventType","DashboardItemChip","label","chipProps","selectedState","Star","react_router_dom","to","debounce","es_lib","AddCircleIcon","teal600","ClearIcon","grey800","ClearButton","onClear","button","Clear","color","ownerData","DEFAULT_STATE_DASHBOARDS_FILTER_NAME","DEFAULT_STATE_DASHBOARDS_FILTER_OWNER","order","sGetDashboardsFilterRoot","dashboardsFilter","sGetFilterName","styles","filterField","fontSize","searchIcon","grey700","KEYCODE_ENTER","KEYCODE_ESCAPE","Filter","_Component","inherits","Filter_createSuper","setFilterValue","onChangeName","target","handleKeyUp","keyCode","onKeypressEnter","createClass","nextProps","_this$props","startAdornment","InputAdornment_default","position","Search_default","endAdornment","ControlBar_ClearButton","Input_default","placeholder","onChange","onKeyUp","Function","prototype","withStyles","MAX_ROW_COUNT","DashboardsBar","DashboardsBar_createSuper","_len","args","Array","_key","setInitialDashboardState","adjustedHeight","newRows","newRowCount","min","onToggleMaxHeight","onSelectDashboard","history","push","selectedId","onChangeFilterName","rowCount","controlBarHeight","contentWrapperStyle","padding","overflowY","components_ControlBar_ControlBar","display","textDecoration","marginRight","AddCircle","ControlBar_Filter","ControlBar_DashboardItemChip","ControlBar_ShowMoreButton","mapDispatchToProps","withRouter","stateProps","dispatchProps","ownProps","displayDashboards","toLowerCase","includes","marginTop","HeaderMenuItem","dense","LaunchIcon","grey600","LaunchLink","e","launchLink","rel","href","Launch","InsertButton","buttonInsert","ContentMenuItem","onInsert","visType","ItemIcon","renderedItemIcon","visTypeIcons","menuItem","ContentMenuItem_LaunchLink","ContentMenuItem_InsertButton","singleItems","header","categorizedItems","listItemTypes","CategorizedMenuGroup","addItem","tAddListItemContent","newItem","toggleSeeMore","seeMore","onChangeItemsLimit","_this2","_this$props2","hasMore","Fragment","ItemSelector_HeaderMenuItem","itemUrl","context","ItemSelector_ContentMenuItem","showMoreButton","margin","contextTypes","PropTypes","object","isRequired","dashboardItem","listItemType","dashboardItemIndex","findIndex","category","addToDashboard","ItemSearchField","onFocus","ItemSelector","closeList","openList","_","fetchItems","anchorEl","currentTarget","setFilter","getCategorizedMenuGroups","itemCount","allItems","maxOptions","slice","ItemSelector_CategorizedMenuGroup","getSinglesMenuGroups","ItemSelector_SinglesMenuGroup","getMenuGroups","queryString","add","Set","ItemSelector_ItemSearchField","Popover_default","anchorOrigin","horizontal","vertical","transformOrigin","PaperProps","disableAutoFocus","disableEnforceFocus","disableRestoreFocus","maxWidth","EditTitleBar","onChangeTitle","onChangeDescription","components_ItemSelector_ItemSelector","selectedDashboard","FilterDialog","onConfirm","dimension","selectedItems","dialogId","commonProps","onSelect","onDeselect","onReorder","build_es_lib","selectedPeriods","ouItems","dimensionId","large","renderDialogContent","secondary","primary","DEFAULT_STATE_ACTIVE_MODAL_DIMENSION","sGetActiveModalDimension","activeModalDimension","acSetActiveModalDimension","selectedDimensions","clearActiveModalDimension","setActiveModalDimension","addItemFilter","removeItemFilter","removeEditItemFilter","setEditItemFilters","_useState","useState","_useState2","slicedToArray","showPopover","setShowPopover","ref","useRef","closePanel","onCloseDialog","ArrowDropDown_default","onClickOutside","reference","arrow","placement","onDimensionClick","selectedIds","ItemFilter_FilterDialog","itemIdsToRemove","newList","itemIds","oldList","reorderedList","filterItems","Info","show","toggle","InfoOutlined_default","NO_DESCRIPTION","ViewTitleBar","toggleSharingDialog","sharingDialogIsOpen","onStarClick","onInfoClick","titleStyle","cursor","userSelect","StarBorder","TitleBar_Info","marginLeft","update","manage","ItemFilter_FilterSelector","paddingTop","d2_ui_sharing_dialog_default","onRequestClose","tStarDashboard","black","minWidth","TitleBar","edit","TitleBar_EditTitleBar","TitleBar_ViewTitleBar","DefaultPlugin","pluginCredentials","shouldPluginReload","prevProps","reloadAllowed","filtersChanged","vis","visualization","prevVis","visChanged","activeType","reloadPlugin","pluginManager","currentVis","useActiveType","credentials","getActiveType","baseUrl","auth","defaultHeaders","Authorization","options","getGridItemDomId","textDiv","ThreeDots","SpeechBubble","fillRule","transform","Warning","FatalErrorBoundary","errorFound","info","container","icons_Warning","DeleteItemButton","deleteItemButton","Delete_default","red500","HEADER_MARGIN_HEIGHT","ItemHeader","forwardRef","itemId","actionButtons","itemHeaderWrap","itemTitle","itemActionsWrap","Item_DeleteItemButton","iconFill","ItemHeaderButtons","setAnchorEl","onSelectActiveType","isTrackerType","onViewTable","handleClose","onViewChart","onViewMap","canViewAs","isSingleValue","isYearOverYear","VIS_TYPE_GAUGE","VIS_TYPE_PIE","interpretationMenuLabel","activeFooter","pluginIsAvailable","small","icons_ThreeDots","Boolean","InsertChart_default","ViewList_default","Public_default","Launch_default","getLink","icons_SpeechBubble","onToggleFooter","scrollContainer","line","border","grey100","ItemFooter","objectId","getId","d2_ui_interpretations_default","memoizeOne","fn","lastArgs","lastValue","every","arg","i","LoadingMask","center","Item","Item_createSuper","showFooter","configLoaded","pluginIsLoaded","applyFilters","visRows","obj","visColumns","columns","visFilters","dimensionFound","dimensionObjects","getUniqueKey","uniqueId","getPluginComponent","memoizedGetVisualizationConfig","calculatedHeight","originalHeight","headerRef","current","clientHeight","ITEM_CONTENT_PADDING_BOTTOM","memoizedGetContentStyle","contentRef","offsetHeight","VisualizationItem_LoadingMask","data_visualizer_plugin_build_es_lib","memoizedApplyFilters","onLoadingComplete","forDashboard","mapViews","layer","hideTitle","VisualizationItem_DefaultPlugin","onToggleItemExpanded","getContentStyle","measuredHeight","createRef","getVisualizationConfig","_componentDidMount","onVisualizationLoaded","prevState","VisualizationItem_ItemHeaderButtons","Item_ItemHeader","VisualizationItem_FatalErrorBoundary","VisualizationItem_ItemFooter","acSetActiveVisualizationType","grey200","Line","PRIVATE","messageTypes","_messageTypes","listStyleType","paddingLeft","seeAll","marginBottom","sender","lineHeight","snippet","maxHeight","overflow","MessagesItem","getMessageHref","msgIdentifier","messageType","getMessageSender","latestMsg","getMessageItems","editClass","readClass","read","msgDate","document","location","messageCount","formatDate","userSettings","widgets_Line","string","MessagesContainer","NotSupportedItem","justifyContent","alignItems","NotInterested_default","align","grey500","DeleteIcon","getItemTitle","ListItem","tRemoveListItemContent","contentItems","index","array","el","getContentItems","contentItem","Description","deleteButton","icons_Delete","grey900","newContent","whiteSpace","textField","fontStretch","onChangeText","updatedItem","d2_ui_rich_text","onEdit","multiline","fullWidth","textDivStyle","viewItem","getIframeSrc","appDetails","iframeSrc","ouIds","ouPath","AppItem","appKey","system","installedApps","app","src","SpacerItem","GridItem","VisualizationItem","TextItem","getGridItem","NoContentMessage","ProgressiveLoadingContainer","shouldLoad","containerRef","shouldLoadHandler","bufferPx","bufferFactor","innerHeight","rect","getBoundingClientRect","bottom","removeHandler","checkShouldLoad","debounceMs","registerHandler","_this3","objectWithoutProperties","eventProps","pick","EXPANDED_HEIGHT","ItemGrid","ItemGrid_createSuper","expandedItems","clickedId","isExpanded","onRemoveItem","onLayoutChange","newLayout","acUpdateDashboardLayout","onResizeStop","layout","oldItem","onItemResize","pluginResize","onRemoveItemWrapper","adjustHeightForExpanded","expandedItem","getItemComponent","itemClassNames","Item_ProgressiveLoadingContainer","Item_Item_Item","getItemComponents","widgets_NoContentMessage","translucent","react_grid_layout_default","MARGIN","cols","getGridColumns","rowHeight","GRID_ROW_HEIGHT","innerWidth","compactType","GRID_COMPACT_TYPE","isDraggable","isResizable","draggableCancel","validItems","hasShape","badgeContainer","borderRadius","badge","badgeRemove","FilterBadge","onRemove","count","FilterBar","FilterBar_createSuper","onBadgeRemove","onBadgeClick","bar","FilterBar_FilterBadge","removeItemFIlter","filtersSelector","createSelector","reduce","arr","DashboardContent","components_TitleBar_TitleBar","components_FilterBar_FilterBar","components_ItemGrid_ItemGrid","Content","hasDashboardContent","dashboardsIsEmpty","Dashboard_DashboardContent","dashboardsLoaded","contentNotReady","ControlBar_DashboardsBar","Dashboard_DashboardVerticalOffset","ViewDashboard_Content","ConfirmDeleteDialog","onDeleteConfirmed","onContinueEditing","destructive","buttonBarStyle","EditBar","EditBar_createSuper","translationDialogIsOpen","dashboardModel","confirmDeleteDialogOpen","redirectUrl","onConfirmDelete","onSave","newId","onDiscard","onDiscardChanges","onDelete","onTranslationsSaved","translations","dbLocale","translation","locale","property","onTranslate","fetchDashboardModel","toggleTranslationDialog","confirmDeleteDialog","deleteAccess","ControlBar_ConfirmDeleteDialog","translationDialog","d2_ui_translation_dialog_default","objectToTranslate","fieldsToTranslate","onTranslationSaved","onTranslationError","err","react_router","updateAccess","discardBtnText","sGetIsNewDashboard","dashboardToSave","tDeleteDashboard","acSetDashboardDisplayName","EditDashboard","EditDashboard_createSuper","initialized","initEditDashboard","setEditDashboard","getDashboardContent","EditDashboard_Content","ControlBar_EditBar","NewDashboard","setNewDashboard","Dashboard","setDashboard","match","params","selectDashboard","scrollToTop","scrollTo","mode","Dashboard_EditDashboard","Dashboard_NewDashboard","Dashboard_ViewDashboard","dashboardToSelect","preferredId","getItem","App","App_createSuper","setCurrentUser","fetchDashboards","setControlBarRows","setDimensions","spacers","exact","path","render","components_Dashboard_Dashboard","components_SnackbarMessage_SnackbarMessage","childContextTypes","controlBarRows","displayNameProp","filteredDimensions","apiFetchDimensions","dim","dimensionType","dataDimensionType","tSetDimensions","moment","addResources","arTranslations","ar_IQTranslations","daTranslations","enTranslations","esTranslations","frTranslations","idTranslations","kmTranslations","loTranslations","myTranslations","nbTranslations","prsTranslations","psTranslations","ptTranslations","pt_BRTranslations","ruTranslations","svTranslations","tetTranslations","tgTranslations","ukTranslations","urTranslations","viTranslations","zhTranslations","zh_CNTranslations","setDefaultNamespace","changeLanguage","objectClean","conversations","$merge","d2Object","keyUiLocale","authorities","newState","k","$unshift","idToRemove","$splice","stateItems","layoutHasChanged","newStateItems","x","y","stateItem","si","configureStore","middleware","thunk","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducer","applyMiddleware","configI18n","config","sources","manifest","isProd","getManifest","version","manifest_generated_at","process","activities","dhis","dhis2","apiVersion","headers","schemas","getUserSettings","d2Init","initializedD2","ReactDOM","lib","es","store","theme","createMuiTheme","dhis2theme","src_components_App","getElementById","init","itemWrap","param","isArray","isObject","global","Intl","DateTimeFormat","year","month","day","format","replace","defaultValue","api","idx","indexOf","getWithoutId","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","itemTypeToExternalPlugin","_itemTypeToExternalPl","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_3__","getPlugin","hasIntegratedPlugin","reportTable","chart","eventReport","eventChart","loadPlugin","plugin","load","loadingIndicator","getName","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","_ref$options","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","fetch","fetchedFavorite","resize","unmount","originalType","extractedMapView","mv","VIS_TYPE_COLUMN","VIS_TYPE_PIVOT_TABLE","__webpack_require__","__webpack_exports__","d2_utilizr_lib_isFunction__WEBPACK_IMPORTED_MODULE_0__","d2_utilizr_lib_isFunction__WEBPACK_IMPORTED_MODULE_0___default","n","_modules_util__WEBPACK_IMPORTED_MODULE_1__","isNonNegativeInteger","Number","isInteger","minH","itemWithShape","Error","col","row","itemWidth","itemHeight","getShape","round","getOriginalHeight","querySelector","isFunction","setViewportSize","clientWidth"],"mappings":"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","file":"static/js/main.500babfb.chunk.js","sourcesContent":["import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\n\nimport { getEndPointName } from '../modules/itemTypes';\n\n// Id, name\nexport const getIdNameFields = ({ rename } = {}) => [\n    'id',\n    `${rename ? 'displayName~rename(name)' : 'name,displayName'}`,\n];\n\n// Item\nexport const getItemFields = () => [\n    'dimensionItem~rename(id)',\n    'displayName~rename(name)',\n    'dimensionItemType',\n];\n\n// Dimension\nexport const getDimensionFields = ({ withItems }) =>\n    arrayClean([\n        'dimension',\n        'legendSet[id]',\n        'filter',\n        'programStage',\n        withItems ? `items[${getItemFields().join(',')}]` : ``,\n    ]);\n\n// Axis\nexport const getAxesFields = ({ withItems }) => [\n    `columns[${getDimensionFields({ withItems }).join(',')}]`,\n    `rows[${getDimensionFields({ withItems }).join(',')}]`,\n    `filters[${getDimensionFields({ withItems }).join(',')}]`,\n];\n\n// Favorite\nexport const getFavoriteFields = ({ withDimensions, withOptions }) => {\n    return arrayClean([\n        `${getIdNameFields({ rename: true }).join(',')}`,\n        'displayDescription~rename(description)',\n        withDimensions ? `${getAxesFields({ withItems: true }).join(',')}` : ``,\n        withOptions\n            ? [\n                  '*',\n                  '!attributeDimensions',\n                  '!attributeValues',\n                  '!category',\n                  '!categoryDimensions',\n                  '!categoryOptionGroupSetDimensions',\n                  '!columnDimensions',\n                  '!dataDimensionItems',\n                  '!dataElementDimensions',\n                  '!dataElementGroupSetDimensions',\n                  '!filterDimensions',\n                  '!itemOrganisationUnitGroups',\n                  '!lastUpdatedBy',\n                  '!organisationUnitGroupSetDimensions',\n                  '!organisationUnitLevels',\n                  '!organisationUnits',\n                  '!programIndicatorDimensions',\n                  '!relativePeriods',\n                  '!reportParams',\n                  '!rowDimensions',\n                  '!series',\n                  '!translations',\n                  '!userOrganisationUnit',\n                  '!userOrganisationUnitChildren',\n                  '!userOrganisationUnitGrandChildren',\n              ].join(',')\n            : '',\n    ]);\n};\n\nexport const getFavoritesFields = ({ withDimensions }) => [\n    `reportTable[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `chart[${['type', ...getFavoriteFields({ withDimensions })].join(',')}]`,\n    `map[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `eventReport[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `eventChart[${getFavoriteFields({ withDimensions }).join(',')}]`,\n];\n\n// List item\nexport const getListItemFields = () => [\n    `reports[${['type', ...getIdNameFields({ rename: true })].join(',')}]`,\n    `resources[${getIdNameFields({ rename: true }).join(',')}]`,\n    `users[${getIdNameFields({ rename: true }).join(',')}]`,\n];\n\n// Map\nexport const getMapFields = () => [\n    `${getIdNameFields({ rename: true }).join(',')}`,\n    'user,longitude,latitude,zoom,basemap',\n    `mapViews[${getFavoriteFields({\n        withDimensions: true,\n        withOptions: true,\n    })}]`,\n];\n\n// Api\n\n// Get more info about the favorite of a dashboard item\nexport const apiFetchFavorite = (id, type, { fields }) =>\n    getInstance().then(d2 =>\n        d2.Api.getApi().get(`${getEndPointName(type)}/${id}`, {\n            fields:\n                fields ||\n                getFavoriteFields({\n                    withDimensions: true,\n                    withOptions: true,\n                }),\n        })\n    );\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Item_list__2oHc1\",\"item\":\"Item_item__lO40M\",\"itemicon\":\"Item_itemicon__dv5ah\",\"link\":\"Item_link__2gULT\",\"deleteicon\":\"Item_deleteicon__3c7bl\",\"deletebutton\":\"Item_deletebutton__1DfY5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"EditTitleBar_section__2sBzn\",\"titleDescription\":\"EditTitleBar_titleDescription__1-pfK\",\"title\":\"EditTitleBar_title__2fOQP\",\"description\":\"EditTitleBar_description__fKEX6\",\"itemSelector\":\"EditTitleBar_itemSelector__PWJdH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"actions\":\"ViewTitleBar_actions__1kGtw\",\"editLink\":\"ViewTitleBar_editLink__1HKr0\",\"titleBar\":\"ViewTitleBar_titleBar__1K-pW\",\"titleBarIcon\":\"ViewTitleBar_titleBarIcon__2spKM\"};","import i18n from '@dhis2/d2-i18n';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\nimport ExtensionIcon from '@material-ui/icons/Extension';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport PersonIcon from '@material-ui/icons/Person';\nimport FontDownloadIcon from '@material-ui/icons/FontDownload';\nimport EmailIcon from '@material-ui/icons/Email';\nimport CropFreeIcon from '@material-ui/icons/CropFree';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nimport { getBaseUrl } from './util';\n\n// Item types\nexport const VISUALIZATION = 'VISUALIZATION';\nexport const REPORT_TABLE = 'REPORT_TABLE';\nexport const CHART = 'CHART';\nexport const MAP = 'MAP';\nexport const EVENT_REPORT = 'EVENT_REPORT';\nexport const EVENT_CHART = 'EVENT_CHART';\nexport const APP = 'APP';\nexport const REPORTS = 'REPORTS';\nexport const RESOURCES = 'RESOURCES';\nexport const USERS = 'USERS';\nexport const MESSAGES = 'MESSAGES';\nexport const TEXT = 'TEXT';\nexport const SPACER = 'SPACER';\n\nconst DOMAIN_TYPE_AGGREGATE = 'AGGREGATE';\nconst DOMAIN_TYPE_TRACKER = 'TRACKER';\n\n// Dashboard helpers\nexport const isVisualizationType = item =>\n    !!itemTypeMap[item.type].isVisualizationType;\nexport const hasMapView = itemType =>\n    itemTypeMap[itemType].domainType === DOMAIN_TYPE_AGGREGATE;\nexport const isTrackerDomainType = itemType =>\n    itemTypeMap[itemType].domainType === DOMAIN_TYPE_TRACKER;\nexport const getDefaultItemCount = itemType =>\n    itemTypeMap[itemType].defaultItemCount || 5;\nexport const getAppName = itemType => itemTypeMap[itemType].appName || '';\n\n// Item type map\nexport const itemTypeMap = {\n    [VISUALIZATION]: {\n        id: VISUALIZATION,\n        endPointName: 'visualizations',\n        propName: 'visualization',\n        pluralTitle: i18n.t('Visualizations'),\n        appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n        appName: 'Data Visualizer',\n        defaultItemCount: 10,\n    },\n    [REPORT_TABLE]: {\n        id: REPORT_TABLE,\n        endPointName: 'visualizations',\n        propName: 'visualization',\n        pluralTitle: i18n.t('Pivot tables'),\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n        appName: 'Data Visualizer',\n    },\n    [CHART]: {\n        id: CHART,\n        endPointName: 'visualizations',\n        propName: 'visualization',\n        pluralTitle: i18n.t('Charts'),\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n        appName: 'Data Visualizer',\n    },\n    [MAP]: {\n        id: MAP,\n        endPointName: 'maps',\n        propName: 'map',\n        pluralTitle: i18n.t('Maps'),\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-maps/?id=${id}`,\n        appName: 'Maps',\n    },\n    [EVENT_REPORT]: {\n        id: EVENT_REPORT,\n        endPointName: 'eventReports',\n        propName: 'eventReport',\n        pluralTitle: i18n.t('Event reports'),\n        domainType: DOMAIN_TYPE_TRACKER,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-event-reports/?id=${id}`,\n        appName: 'Event Reports',\n    },\n    [EVENT_CHART]: {\n        id: EVENT_CHART,\n        endPointName: 'eventCharts',\n        propName: 'eventChart',\n        pluralTitle: i18n.t('Event charts'),\n        domainType: DOMAIN_TYPE_TRACKER,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-event-visualizer/?id=${id}`,\n        appName: 'Event Visualizer',\n    },\n    [APP]: {\n        endPointName: 'apps',\n        propName: 'appKey',\n        pluralTitle: i18n.t('Apps'),\n    },\n    [REPORTS]: {\n        id: REPORTS,\n        endPointName: 'reports',\n        propName: 'reports',\n        pluralTitle: i18n.t('Reports'),\n        appUrl: (id, type) => {\n            switch(type) {\n                case 'HTML':\n                    return `dhis-web-reports/#/standard-report/view/${id}`;\n\n                case 'JASPER_REPORT_TABLE':\n                case 'JASPER_JDBC':\n                default:\n                    return `api/reports/${id}/data.pdf?t=${(new Date()).getTime()}`;\n            }\n        },\n    },\n    [RESOURCES]: {\n        id: RESOURCES,\n        endPointName: 'resources',\n        propName: 'resources',\n        pluralTitle: i18n.t('Resources'),\n        appUrl: id => `api/documents/${id}/data`,\n    },\n    [USERS]: {\n        id: USERS,\n        endPointName: 'users',\n        propName: 'users',\n        pluralTitle: i18n.t('Users'),\n        appUrl: id => `dhis-web-dashboard-integration/profile.action?id=${id}`,\n    },\n    [TEXT]: {\n        id: TEXT,\n        propName: 'text',\n    },\n    [MESSAGES]: {\n        propName: 'messages',\n    },\n    [SPACER]: {\n        propName: 'text',\n    },\n};\n\nexport const getEndPointName = type => itemTypeMap[type].endPointName;\n\nexport const getItemUrl = (type, item, d2) => {\n    let url;\n\n    if (type === APP) {\n        url = item.launchUrl;\n    }\n\n    if (itemTypeMap[type] && itemTypeMap[type].appUrl) {\n        url = `${getBaseUrl(d2)}/${itemTypeMap[type].appUrl(item.id, item.type)}`;\n    }\n\n    return url;\n};\n\nexport const getItemIcon = type => {\n    switch (type) {\n        case REPORT_TABLE:\n        case EVENT_REPORT:\n        case REPORTS:\n            return TableIcon;\n        case CHART:\n        case EVENT_CHART:\n            return ChartIcon;\n        case MAP:\n            return MapIcon;\n        case APP:\n            return ExtensionIcon;\n        case RESOURCES:\n            return DescriptionIcon;\n        case USERS:\n            return PersonIcon;\n        case TEXT:\n            return FontDownloadIcon;\n        case MESSAGES:\n            return EmailIcon;\n        case SPACER:\n            return CropFreeIcon;\n        default:\n            return NotInterestedIcon;\n    }\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"leftControls\":\"DashboardsBar_leftControls__2kr14\",\"rightControls\":\"DashboardsBar_rightControls__2l1lT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"DashboardItemChip_link__1b7Z_\",\"icon\":\"DashboardItemChip_icon__1zOaG\",\"selected\":\"DashboardItemChip_selected__36Qak\",\"unselected\":\"DashboardItemChip_unselected__3dm-X\"};","export const RECEIVED_USER = 'RECEIVED_USER';\n\nexport const DEFAULT_STATE_USER = {\n    id: '',\n    username: '',\n    uiLocale: '',\n    isSuperuser: false,\n};\n\nexport default (state = DEFAULT_STATE_USER, action) => {\n    switch (action.type) {\n        case RECEIVED_USER: {\n            return fromD2ToUserObj(action.value);\n        }\n        default:\n            return state;\n    }\n};\n\nfunction fromD2ToUserObj(d2Object) {\n    return {\n        id: d2Object.id,\n        username: d2Object.username,\n        uiLocale: d2Object.settings.keyUiLocale,\n        isSuperuser: d2Object.authorities.has('ALL'),\n    };\n}\n\n// selectors\n\nexport const sGetUserId = state => state.user.id;\nexport const sGetUserUsername = state => state.user.username;\nexport const sGetIsSuperuser = state => state.user.isSuperuser;\nexport const sGetUiLocale = state => state.user.uiLocale;\n","import { TEXT, SPACER } from './itemTypes';\nimport { getGridItemProperties } from '../components/ItemGrid/gridUtil';\n\nexport const spacerContent = 'SPACER_ITEM_FOR_DASHBOARD_LAYOUT_CONVENIENCE';\nexport const emptyTextItemContent = 'TEXT_ITEM_WITH_NO_CONTENT';\n\nconst isBackendSpacerType = item =>\n    item.type === TEXT && item.text === spacerContent;\nconst isUiSpacerType = item => item.type === SPACER;\nconst isTextType = item => item.type === TEXT && item.text !== spacerContent;\n\nexport const convertUiItemsToBackend = items =>\n    items.map(item => {\n        let text = null;\n        if (isUiSpacerType(item)) {\n            text = spacerContent;\n        } else if (isTextType(item)) {\n            text = item.text || emptyTextItemContent;\n        }\n\n        return {\n            ...item,\n            ...(text ? { text } : {}),\n        };\n    });\n\nexport const convertBackendItemsToUi = items =>\n    items.map(item => {\n        const type = isBackendSpacerType(item) ? SPACER : item.type;\n        const gridProperties = getGridItemProperties(item.id);\n\n        const text = isTextType(item)\n            ? item.text === emptyTextItemContent\n                ? ''\n                : item.text\n            : null;\n\n        return {\n            ...item,\n            ...(text !== null ? { text } : {}),\n            type,\n            ...gridProperties,\n        };\n    });\n","/** @module reducers/dashboards */\n\nimport arrayFrom from 'd2-utilizr/lib/arrayFrom';\nimport arraySort from 'd2-utilizr/lib/arraySort';\n\nimport { orArray, orObject } from '../modules/util';\nimport { convertBackendItemsToUi } from '../modules/uiBackendItemConverter';\n\nexport const SET_DASHBOARDS = 'SET_DASHBOARDS';\nexport const ADD_DASHBOARDS = 'ADD_DASHBOARDS';\nexport const SET_DASHBOARD_STARRED = 'SET_DASHBOARD_STARRED';\nexport const SET_DASHBOARD_DISPLAY_NAME = 'SET_DASHBOARD_DISPLAY_NAME';\nexport const SET_DASHBOARD_ITEMS = 'SET_DASHBOARD_ITEMS';\n\nexport const DEFAULT_STATE_DASHBOARDS = {\n    byId: null,\n    items: [],\n};\n\n// reducer helper functions\n\nconst updateDashboardProp = ({ state, dashboardId, prop, value }) => ({\n    byId: {\n        ...state.byId,\n        [dashboardId]: {\n            ...state.byId[dashboardId],\n            [prop]: value,\n        },\n    },\n    items: state.items,\n});\n\n/**\n * Reducer that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n * @returns {Object}\n */\nexport default (state = DEFAULT_STATE_DASHBOARDS, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS: {\n            return {\n                byId: action.value,\n                items: [],\n            };\n        }\n        case ADD_DASHBOARDS: {\n            return {\n                ...state,\n                byId: {\n                    ...state.byId,\n                    ...action.value,\n                },\n            };\n        }\n        case SET_DASHBOARD_STARRED: {\n            return updateDashboardProp({\n                state,\n                dashboardId: action.dashboardId,\n                prop: 'starred',\n                value: action.value,\n            });\n        }\n        case SET_DASHBOARD_DISPLAY_NAME: {\n            return updateDashboardProp({\n                state,\n                dashboardId: action.dashboardId,\n                prop: 'displayName',\n                value: action.value,\n            });\n        }\n        case SET_DASHBOARD_ITEMS: {\n            return {\n                ...state,\n                items: action.value,\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// root selector\n\nexport const sGetDashboardsRoot = state => state.dashboards;\n\n// selector level 1\n\n/**\n * Selector which returns a dashboard by id from the state object\n * If no matching dashboard is found it returns undefined\n * If dashboards.byId is null, then the dashboards api request\n * has not yet completed. If dashboards.byId is an empty object\n * then the dashboards api request is complete, but no dashboards\n * were returned\n *\n * @function\n * @param {Object} state The current state\n * @param {Number} id The id of the dashboard\n * @returns {Object | undefined}\n */\nexport const sGetDashboardById = (state, id) =>\n    orObject(sGetDashboardsRoot(state).byId)[id];\n\nexport const sDashboardsIsFetching = state => {\n    return sGetDashboardsRoot(state).byId === null;\n};\n\n/**\n * Selector which returns all dashboards (the byId object)\n *\n * @function\n * @param {Object} state The current state\n * @returns {Object | undefined}\n */\nexport const sGetAllDashboards = state =>\n    orObject(sGetDashboardsRoot(state).byId);\n\n/**\n * Selector which returns the current dashboard items\n *\n * @function\n * @param {Object} state The current state\n * @returns {Array}\n */\nexport const sGetDashboardItems = state => sGetDashboardsRoot(state).items;\n\n// selector level 2\n\nexport const sGetStarredDashboards = state =>\n    Object.values(sGetAllDashboards(state)).filter(\n        dashboard => dashboard.starred === true\n    );\n\nexport const sGetUnstarredDashboards = state =>\n    Object.values(sGetAllDashboards(state)).filter(\n        dashboard => dashboard.starred === false\n    );\n\n// selector level 3\n\nexport const sGetStarredDashboardIds = state => {\n    return sGetStarredDashboards(state).map(dashboard => dashboard.id);\n};\n\nexport const sGetUnstarredDashboardIds = state =>\n    sGetUnstarredDashboards(state).map(dashboard => dashboard.id);\n\nexport const sGetDashboardsSortedByStarred = state => [\n    ...arraySort(sGetStarredDashboards(state), 'ASC', 'displayName'),\n    ...arraySort(sGetUnstarredDashboards(state), 'ASC', 'displayName'),\n];\n\n// utils\n\n/**\n * Returns the array of dashboards, customized for ui\n * @function\n * @param {Array} data The original dashboard list\n * @returns {Array}\n */\nexport const getCustomDashboards = data =>\n    arrayFrom(data).map(d => ({\n        id: d.id,\n        name: d.name,\n        displayName: d.displayName,\n        description: d.description,\n        displayDescription: d.displayDescription,\n        starred: d.favorite,\n        owner: d.user.name,\n        created: d.created\n            .split('T')\n            .join(' ')\n            .substr(0, 16),\n        lastUpdated: d.lastUpdated\n            .split('T')\n            .join(' ')\n            .substr(0, 16),\n        access: d.access,\n        numberOfItems: orArray(d.dashboardItems).length,\n        dashboardItems: convertBackendItemsToUi(d.dashboardItems),\n    }));\n","/** @module reducers/editDashboard */\nimport update from 'immutability-helper';\nimport isEmpty from 'lodash/isEmpty';\nimport { orArray, orObject } from '../modules/util';\n\nexport const RECEIVED_EDIT_DASHBOARD = 'RECEIVED_EDIT_DASHBOARD';\nexport const RECEIVED_NOT_EDITING = 'RECEIVED_NOT_EDITING';\nexport const START_NEW_DASHBOARD = 'START_NEW_DASHBOARD';\nexport const RECEIVED_TITLE = 'RECEIVED_TITLE';\nexport const RECEIVED_DESCRIPTION = 'RECEIVED_DESCRIPTION';\nexport const ADD_DASHBOARD_ITEM = 'ADD_DASHBOARD_ITEM';\nexport const REMOVE_DASHBOARD_ITEM = 'REMOVE_DASHBOARD_ITEM';\nexport const UPDATE_DASHBOARD_ITEM = 'UPDATE_DASHBOARD_ITEM';\nexport const RECEIVED_DASHBOARD_LAYOUT = 'RECEIVED_DASHBOARD_LAYOUT';\n\nexport const DEFAULT_STATE_EDIT_DASHBOARD = {};\nexport const NEW_DASHBOARD_STATE = {\n    id: '',\n    name: '',\n    access: {},\n    description: '',\n    dashboardItems: [],\n};\n\nexport default (state = DEFAULT_STATE_EDIT_DASHBOARD, action) => {\n    switch (action.type) {\n        case RECEIVED_EDIT_DASHBOARD: {\n            const newState = {};\n            Object.keys(NEW_DASHBOARD_STATE).map(\n                k => (newState[k] = action.value[k])\n            );\n            return newState;\n        }\n        case RECEIVED_NOT_EDITING:\n            return DEFAULT_STATE_EDIT_DASHBOARD;\n        case START_NEW_DASHBOARD:\n            return NEW_DASHBOARD_STATE;\n        case RECEIVED_TITLE: {\n            return Object.assign({}, state, { name: action.value });\n        }\n        case RECEIVED_DESCRIPTION: {\n            return Object.assign({}, state, {\n                description: action.value,\n            });\n        }\n        case ADD_DASHBOARD_ITEM:\n            return update(state, {\n                dashboardItems: { $unshift: [action.value] },\n            });\n        case REMOVE_DASHBOARD_ITEM: {\n            const idToRemove = action.value;\n\n            const dashboardItemIndex = state.dashboardItems.findIndex(\n                item => item.id === idToRemove\n            );\n\n            if (dashboardItemIndex > -1) {\n                return update(state, {\n                    dashboardItems: {\n                        $splice: [[dashboardItemIndex, 1]],\n                    },\n                });\n            }\n\n            return state;\n        }\n        case RECEIVED_DASHBOARD_LAYOUT: {\n            const stateItems = orArray(state.dashboardItems);\n            let layoutHasChanged = false;\n\n            const newStateItems = action.value.map(({ x, y, w, h, i }) => {\n                const stateItem = stateItems.find(si => si.id === i);\n\n                if (\n                    !(\n                        stateItem.x === x &&\n                        stateItem.y === y &&\n                        stateItem.w === w &&\n                        stateItem.h === h\n                    )\n                ) {\n                    layoutHasChanged = true;\n                    return Object.assign({}, stateItem, { w, h, x, y });\n                }\n\n                return stateItem;\n            });\n\n            return layoutHasChanged\n                ? {\n                      ...state,\n                      dashboardItems: newStateItems,\n                  }\n                : state;\n        }\n        case UPDATE_DASHBOARD_ITEM: {\n            const dashboardItem = action.value;\n\n            const dashboardItemIndex = state.dashboardItems.findIndex(\n                item => item.id === dashboardItem.id\n            );\n\n            if (dashboardItemIndex > -1) {\n                const newState = update(state, {\n                    dashboardItems: {\n                        $splice: [\n                            [\n                                dashboardItemIndex,\n                                1,\n                                Object.assign({}, dashboardItem),\n                            ],\n                        ],\n                    },\n                });\n\n                return newState;\n            }\n\n            return state;\n        }\n        default:\n            return state;\n    }\n};\n\n// root selector\n\nexport const sGetEditDashboardRoot = state => state.editDashboard;\n\n// selectors\n\nexport const sGetIsEditing = state => !isEmpty(state.editDashboard);\n\nexport const sGetIsNewDashboard = state => {\n    return (\n        !isEmpty(state.editDashboard) && sGetEditDashboardRoot(state).id === ''\n    );\n};\n\nexport const sGetEditDashboardItems = state =>\n    orObject(sGetEditDashboardRoot(state)).dashboardItems;\n","export const CLEAR_EDIT_ITEM_FILTERS = 'CLEAR_EDIT_ITEM_FILTERS';\nexport const REMOVE_EDIT_ITEM_FILTER = 'REMOVE_EDIT_ITEM_FILTER';\nexport const SET_EDIT_ITEM_FILTERS = 'SET_EDIT_ITEM_FILTERS';\n\nexport const DEFAULT_STATE_EDIT_ITEM_FILTERS = {};\n\nexport default (state = DEFAULT_STATE_EDIT_ITEM_FILTERS, action) => {\n    switch (action.type) {\n        case REMOVE_EDIT_ITEM_FILTER: {\n            const newState = { ...state };\n\n            delete newState[action.id];\n\n            return newState;\n        }\n        case SET_EDIT_ITEM_FILTERS: {\n            return action.filters;\n        }\n        case CLEAR_EDIT_ITEM_FILTERS: {\n            return DEFAULT_STATE_EDIT_ITEM_FILTERS;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetEditItemFiltersRoot = state => state.editItemFilters;\n\nexport const sGetEditFiltersKeys = state =>\n    Object.keys(sGetEditItemFiltersRoot(state));\n","/** @module reducers/selected */\nimport { combineReducers } from 'redux';\n\nimport { validateReducer } from '../modules/util';\n\nexport const SET_SELECTED_ID = 'SET_SELECTED_ID';\nexport const SET_SELECTED_ISLOADING = 'SET_SELECTED_ISLOADING';\nexport const SET_SELECTED_SHOWDESCRIPTION = 'SET_SELECTED_SHOWDESCRIPTION';\n\nexport const DEFAULT_STATE_SELECTED_ID = null;\nexport const DEFAULT_STATE_SELECTED_ISLOADING = false;\nexport const DEFAULT_STATE_SELECTED_SHOWDESCRIPTION = false;\n\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\nconst id = (state = DEFAULT_STATE_SELECTED_ID, action) => {\n    switch (action.type) {\n        case SET_SELECTED_ID:\n            return validateReducer(action.value, DEFAULT_STATE_SELECTED_ID);\n        default:\n            return state;\n    }\n};\n\nconst isLoading = (state = DEFAULT_STATE_SELECTED_ISLOADING, action) => {\n    switch (action.type) {\n        case SET_SELECTED_ISLOADING:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_SELECTED_ISLOADING\n            );\n        default:\n            return state;\n    }\n};\n\nconst showDescription = (\n    state = DEFAULT_STATE_SELECTED_SHOWDESCRIPTION,\n    action\n) => {\n    switch (action.type) {\n        case SET_SELECTED_SHOWDESCRIPTION:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_SELECTED_SHOWDESCRIPTION\n            );\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    id,\n    isLoading,\n    showDescription,\n});\n\n// Selectors\n\nexport const sGetSelectedRoot = state => state.selected;\n\nexport const sGetSelectedId = state => sGetSelectedRoot(state).id;\n\nexport const sGetSelectedIsLoading = state => sGetSelectedRoot(state).isLoading;\n\nexport const sGetSelectedShowDescription = state =>\n    sGetSelectedRoot(state).showDescription;\n","import {\n    REMOVE_EDIT_ITEM_FILTER,\n    SET_EDIT_ITEM_FILTERS,\n    CLEAR_EDIT_ITEM_FILTERS,\n} from '../reducers/editItemFilters';\n\n// actions\n\nexport const acRemoveEditItemFilter = id => ({\n    type: REMOVE_EDIT_ITEM_FILTER,\n    id,\n});\n\nexport const acClearEditItemFilters = () => ({\n    type: CLEAR_EDIT_ITEM_FILTERS,\n});\n\nexport const acSetEditItemFilters = filters => ({\n    type: SET_EDIT_ITEM_FILTERS,\n    filters,\n});\n","export const CLEAR_ITEM_FILTERS = 'CLEAR_ITEM_FILTERS';\nexport const SET_ITEM_FILTERS = 'SET_ITEM_FILTERS';\nexport const ADD_ITEM_FILTER = 'ADD_ITEM_FILTER';\nexport const REMOVE_ITEM_FILTER = 'REMOVE_ITEM_FILTER';\n\nexport const DEFAULT_STATE_ITEM_FILTERS = {};\n\nexport default (state = DEFAULT_STATE_ITEM_FILTERS, action) => {\n    switch (action.type) {\n        case ADD_ITEM_FILTER: {\n            return {\n                ...state,\n                [action.filter.id]: action.filter.value,\n            };\n        }\n        case REMOVE_ITEM_FILTER: {\n            const newState = { ...state };\n\n            delete newState[action.id];\n\n            return newState;\n        }\n        case SET_ITEM_FILTERS: {\n            return action.filters;\n        }\n        case CLEAR_ITEM_FILTERS: {\n            return DEFAULT_STATE_ITEM_FILTERS;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetItemFiltersRoot = state => state.itemFilters;\n\nexport const sGetFiltersKeys = state => Object.keys(sGetItemFiltersRoot(state));\n","import {\n    ADD_ITEM_FILTER,\n    REMOVE_ITEM_FILTER,\n    SET_ITEM_FILTERS,\n    CLEAR_ITEM_FILTERS,\n} from '../reducers/itemFilters';\n\nexport const FILTER_ORG_UNIT = 'ou';\n\n// actions\n\nexport const acAddItemFilter = filter => ({\n    type: ADD_ITEM_FILTER,\n    filter,\n});\n\nexport const acRemoveItemFilter = id => ({\n    type: REMOVE_ITEM_FILTER,\n    id,\n});\n\nexport const acClearItemFilters = () => ({\n    type: CLEAR_ITEM_FILTERS,\n});\n\nexport const acSetItemFilters = filters => ({\n    type: SET_ITEM_FILTERS,\n    filters,\n});\n","import update from 'immutability-helper';\nimport { arrayToIdMap } from '../modules/util';\n\nexport const RECEIVED_MESSAGES = 'RECEIVED_MESSAGES';\n\nexport default (state = {}, action) => {\n    switch (action.type) {\n        case RECEIVED_MESSAGES: {\n            const conversations = arrayToIdMap(action.value);\n\n            const newState = update(state, { $merge: conversations });\n\n            return newState;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetMessagesRoot = state => state.messages;\n","import { getInstance } from 'd2';\n\nexport const getMessages = () => {\n    const fields =\n        'id,messageCount,lastUpdated,messageType,displayName,read,messages[id,read,sender[id,displayName],text,lastUpdated]';\n    const url = `/messageConversations?fields=${fields}&order=read:asc&pageSize=200`;\n    return getInstance()\n        .then(d2 => d2.Api.getApi().get(url))\n        .catch(error => console.log('Error:', error));\n};\n","export const RECEIVED_SNACKBAR_MESSAGE = 'RECEIVED_SNACKBAR_MESSAGE';\nexport const CLOSE_SNACKBAR = 'CLOSE_SNACKBAR';\n\nexport const DEFAULT_STATE_SNACKBAR = {\n    message: {},\n    duration: null,\n    open: false,\n};\n\nexport default (state = DEFAULT_STATE_SNACKBAR, action) => {\n    switch (action.type) {\n        case RECEIVED_SNACKBAR_MESSAGE: {\n            return { ...state, ...action.value };\n        }\n        case CLOSE_SNACKBAR: {\n            return DEFAULT_STATE_SNACKBAR;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetSnackbar = state => state.snackbar || DEFAULT_STATE_SNACKBAR;\n","import {\n    RECEIVED_SNACKBAR_MESSAGE,\n    CLOSE_SNACKBAR,\n} from '../reducers/snackbar';\n\nexport const acReceivedSnackbarMessage = value => ({\n    type: RECEIVED_SNACKBAR_MESSAGE,\n    value,\n});\n\nexport const acCloseSnackbar = () => ({\n    type: CLOSE_SNACKBAR,\n});\n","import { orObject } from '../modules/util';\nimport objectClean from 'd2-utilizr/lib/objectClean';\n\n/** @module reducers/visualizations */\n\nexport const ADD_VISUALIZATION = 'ADD_VISUALIZATION';\nexport const SET_ACTIVE_VISUALIZATION_TYPE = 'SET_ACTIVE_VISUALIZATION_TYPE';\n\nexport const DEFAULT_STATE_VISUALIZATIONS = {};\n\nconst isEmpty = p => p === undefined || p === null;\n\nexport default (state = DEFAULT_STATE_VISUALIZATIONS, action) => {\n    switch (action.type) {\n        case ADD_VISUALIZATION: {\n            return {\n                ...state,\n                [action.value.id]: objectClean(\n                    {\n                        ...orObject(state[action.value.id]),\n                        ...action.value,\n                    },\n                    isEmpty\n                ),\n            };\n        }\n        case SET_ACTIVE_VISUALIZATION_TYPE: {\n            return {\n                ...state,\n                [action.id]: objectClean(\n                    {\n                        ...orObject(state[action.id]),\n                        activeType: action.activeType,\n                    },\n                    isEmpty\n                ),\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// root selector\nexport const sGetVisualizationsRoot = state => state.visualizations;\n\n// selectors level 1\nexport const sGetVisualization = (state, id) => {\n    return sGetVisualizationsRoot(state)[id];\n};\n","import {\n    ADD_VISUALIZATION,\n    SET_ACTIVE_VISUALIZATION_TYPE,\n} from '../reducers/visualizations';\n\nexport const acAddVisualization = value => ({\n    type: ADD_VISUALIZATION,\n    value,\n});\n\nexport const acSetActiveVisualizationType = (id, activeType) => {\n    const action = {\n        type: SET_ACTIVE_VISUALIZATION_TYPE,\n        id,\n        activeType,\n    };\n\n    return action;\n};\n","import arrayClean from 'd2-utilizr/lib/arrayClean';\nimport {\n    getListItemFields,\n    getFavoritesFields,\n    getIdNameFields,\n} from './metadata';\n\n// Helper functions\n\nexport const onError = error => console.log('Error: ', error);\n\n// Dashboard item\nexport const getDashboardItemsFields = ({ withFavorite } = {}) =>\n    arrayClean([\n        'id',\n        'type',\n        'shape',\n        'x',\n        'y',\n        'width~rename(w)',\n        'height~rename(h)',\n        'messages',\n        'text',\n        'appKey',\n        `${getListItemFields().join(',')}`,\n        withFavorite\n            ? `${getFavoritesFields({\n                  withDimensions: withFavorite.withDimensions,\n              }).join(',')}`\n            : ``,\n    ]);\n\n// Dashboard\nexport const getDashboardFields = ({ withItems, withFavorite } = {}) =>\n    arrayClean([\n        `${getIdNameFields().join(',')}`,\n        'description',\n        'displayDescription',\n        'favorite',\n        `user[${getIdNameFields({ rename: true }).join(',')}]`,\n        'created',\n        'lastUpdated',\n        'access',\n        withItems\n            ? `dashboardItems[${getDashboardItemsFields({\n                  withFavorite,\n              }).join(',')}]`\n            : ``,\n    ]);\n","import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { onError, getDashboardFields } from './index';\n\n// Get \"all\" dashboards on startup\nexport const apiFetchDashboards = () =>\n    getInstance()\n        .then(d2 =>\n            d2.models.dashboard.list({\n                fields: [\n                    getDashboardFields().join(','),\n                    'dashboardItems[id]',\n                ].join(','),\n                paging: 'false',\n            })\n        )\n        .catch(onError);\n\n// Get more info about selected dashboard\nexport const apiFetchDashboard = id =>\n    getInstance()\n        .then(d2 =>\n            d2.models.dashboard.get(id, {\n                fields: arrayClean(\n                    getDashboardFields({\n                        withItems: true,\n                        withFavorite: { withDimensions: false },\n                    })\n                ).join(','),\n            })\n        )\n        .catch(onError);\n\n// Star dashboard\nexport const apiStarDashboard = (id, isStarred) => {\n    const url = `dashboards/${id}/favorite`;\n\n    getInstance().then(d2 => {\n        if (isStarred) {\n            d2.Api.getApi().post(url);\n        } else {\n            d2.Api.getApi().delete(url);\n        }\n    });\n};\n\nexport const apiDeleteDashboard = id => {\n    return getInstance()\n        .then(d2 => {\n            return d2.models.dashboards\n                .get(id)\n                .then(dashboard => dashboard.delete());\n        })\n        .catch(onError);\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport PropTypes from 'prop-types';\n\nimport { sGetSnackbar } from '../../reducers/snackbar';\nimport { acCloseSnackbar } from '../../actions/snackbar';\n\nconst LOADING_DASHBOARD = 'LOADING_DASHBOARD';\nexport const loadingDashboardMsg = { name: '', type: LOADING_DASHBOARD };\n\nconst SnackbarMessageContent = ({ message }) => {\n    if (typeof message === 'object') {\n        //future message types:  switch(message.type)\n        return (\n            <span>\n                Loading <span style={{ fontWeight: 800 }}>{message.name}</span>{' '}\n                dashboard\n            </span>\n        );\n    }\n    return message;\n};\n\nexport const SnackbarMessage = props => {\n    return (\n        <Snackbar\n            style={{ zIndex: 10001 }}\n            open={props.snackbarOpen}\n            message={<SnackbarMessageContent message={props.snackbarMessage} />}\n            autoHideDuration={props.snackbarDuration}\n            onClose={props.onCloseSnackbar}\n        />\n    );\n};\n\nconst mapStateToProps = state => {\n    const { message, duration, open } = sGetSnackbar(state);\n    return {\n        snackbarOpen: open,\n        snackbarMessage: message,\n        snackbarDuration: duration,\n    };\n};\n\nSnackbarMessage.propTypes = {\n    snackbarDuration: PropTypes.string,\n    snackbarMessage: PropTypes.object,\n    snackbarOpen: PropTypes.bool,\n    onCloseSnackbar: PropTypes.func,\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        onCloseSnackbar: acCloseSnackbar,\n    }\n)(SnackbarMessage);\n","import { getCustomDashboards, sGetDashboardById } from '../reducers/dashboards';\nimport { sGetIsEditing } from '../reducers/editDashboard';\nimport { sGetEditItemFiltersRoot } from '../reducers/editItemFilters';\nimport {\n    SET_SELECTED_ID,\n    SET_SELECTED_ISLOADING,\n    SET_SELECTED_SHOWDESCRIPTION,\n    sGetSelectedIsLoading,\n    sGetSelectedId,\n} from '../reducers/selected';\nimport { sGetUserUsername } from '../reducers/user';\n\nimport { acSetDashboardItems, acAppendDashboards } from './dashboards';\nimport { acClearEditItemFilters } from './editItemFilters';\nimport { acClearItemFilters, acSetItemFilters } from './itemFilters';\nimport { tGetMessages } from '../components/Item/MessagesItem/actions';\nimport { acReceivedSnackbarMessage, acCloseSnackbar } from './snackbar';\nimport { acAddVisualization } from './visualizations';\n\nimport { apiFetchDashboard } from '../api/dashboards';\nimport { storePreferredDashboardId } from '../api/localStorage';\n\nimport { withShape } from '../components/ItemGrid/gridUtil';\nimport { loadingDashboardMsg } from '../components/SnackbarMessage/SnackbarMessage';\nimport { extractFavorite } from '../components/Item/VisualizationItem/plugin';\n\nimport {\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_REPORT,\n    EVENT_CHART,\n    MESSAGES,\n} from '../modules/itemTypes';\nimport { orObject } from '../modules/util';\n\n// actions\n\nexport const acSetSelectedId = value => ({\n    type: SET_SELECTED_ID,\n    value,\n});\n\nexport const acSetSelectedIsLoading = value => ({\n    type: SET_SELECTED_ISLOADING,\n    value,\n});\n\nexport const acSetSelectedShowDescription = value => ({\n    type: SET_SELECTED_SHOWDESCRIPTION,\n    value,\n});\n\nexport const tLoadDashboard = id => async dispatch => {\n    try {\n        const dash = await apiFetchDashboard(id);\n\n        dispatch(acAppendDashboards(dash));\n\n        return Promise.resolve(dash);\n    } catch (err) {\n        console.log('Error: ', err);\n        return err;\n    }\n};\n\n// thunks\nexport const tSetSelectedDashboardById = id => async (dispatch, getState) => {\n    dispatch(acSetSelectedIsLoading(true));\n\n    const snackbarTimeout = setTimeout(() => {\n        const dashboardName = orObject(sGetDashboardById(getState(), id))\n            .displayName;\n        if (sGetSelectedIsLoading(getState()) && dashboardName) {\n            loadingDashboardMsg.name = dashboardName;\n\n            dispatch(\n                acReceivedSnackbarMessage({\n                    message: loadingDashboardMsg,\n                    open: true,\n                })\n            );\n        }\n    }, 500);\n\n    const onSuccess = selected => {\n        const customDashboard = getCustomDashboards(selected)[0];\n\n        dispatch(\n            acSetDashboardItems(withShape(customDashboard.dashboardItems))\n        );\n\n        storePreferredDashboardId(sGetUserUsername(getState()), id);\n\n        // add visualizations to store\n        customDashboard.dashboardItems.forEach(item => {\n            switch (item.type) {\n                case REPORT_TABLE:\n                case CHART:\n                case MAP:\n                case EVENT_REPORT:\n                case EVENT_CHART:\n                    dispatch(acAddVisualization(extractFavorite(item)));\n                    break;\n                case MESSAGES:\n                    dispatch(tGetMessages(id));\n                    break;\n                default:\n                    break;\n            }\n        });\n\n        const state = getState();\n        if (id === sGetSelectedId(state)) {\n            if (sGetIsEditing(state)) {\n                // disable filters when switching to edit mode\n                dispatch(acClearItemFilters());\n            } else {\n                // enable filters when switching to view mode\n                dispatch(acSetItemFilters(sGetEditItemFiltersRoot(state)));\n            }\n        } else {\n            // clear filters when switching dashboard\n            dispatch(acClearEditItemFilters());\n            dispatch(acClearItemFilters());\n        }\n\n        dispatch(acSetSelectedId(id));\n\n        dispatch(acSetSelectedIsLoading(false));\n\n        clearTimeout(snackbarTimeout);\n\n        dispatch(acCloseSnackbar());\n\n        return selected;\n    };\n\n    const onError = error => {\n        console.log('Error: ', error);\n        return error;\n    };\n\n    try {\n        const selected = await dispatch(tLoadDashboard(id));\n\n        return onSuccess(selected);\n    } catch (err) {\n        return onError(err);\n    }\n};\n","export const getPreferredDashboardId = username =>\n    localStorage.getItem(`dhis2.dashboard.current.${username}`) || undefined;\n\nexport const storePreferredDashboardId = (username, dashboardId) => {\n    localStorage.setItem(`dhis2.dashboard.current.${username}`, dashboardId);\n};\n","import { RECEIVED_MESSAGES } from '../../../reducers/messages';\nimport { getMessages } from '../../../api/messages';\n\nconst onError = (action, error) => {\n    console.log(`Error in action ${action}: ${error}`);\n    return error;\n};\n\nexport const receivedMessages = value => ({\n    type: RECEIVED_MESSAGES,\n    value,\n});\n\nexport const tGetMessages = () => async dispatch => {\n    try {\n        const messages = await getMessages();\n        const { messageConversations } = messages;\n\n        return dispatch(receivedMessages(messageConversations));\n    } catch (err) {\n        return onError('Get Messages', err);\n    }\n};\n","import { getInstance } from 'd2';\n\nconst onError = error => console.log('Error: ', error);\n\nconst saveDashboard = (dashboard, data) => {\n    const { name, description, dashboardItems } = data;\n\n    dashboard.name = name;\n    dashboard.description = description;\n    dashboard.dashboardItems = dashboardItems.map(item =>\n        Object.assign({}, item, { width: item.w, height: item.h })\n    );\n\n    return dashboard.save().then(msg => msg.response.uid);\n};\n\nexport const updateDashboard = data => {\n    return getInstance()\n        .then(d2 => {\n            return d2.models.dashboards\n                .get(data.id)\n                .then(dashboard => saveDashboard(dashboard, data));\n        })\n        .catch(onError);\n};\n\nexport const postDashboard = data => {\n    return getInstance().then(d2 => {\n        const dashboard = d2.models.dashboards.create();\n\n        return saveDashboard(dashboard, data);\n    });\n};\n","import { generateUid } from 'd2/uid';\n\nimport {\n    RECEIVED_EDIT_DASHBOARD,\n    START_NEW_DASHBOARD,\n    RECEIVED_NOT_EDITING,\n    RECEIVED_TITLE,\n    RECEIVED_DESCRIPTION,\n    RECEIVED_DASHBOARD_LAYOUT,\n    ADD_DASHBOARD_ITEM,\n    UPDATE_DASHBOARD_ITEM,\n    REMOVE_DASHBOARD_ITEM,\n} from '../reducers/editDashboard';\nimport { sGetEditDashboardRoot } from '../reducers/editDashboard';\nimport { updateDashboard, postDashboard } from '../api/editDashboard';\nimport { tSetSelectedDashboardById } from '../actions/selected';\nimport {\n    NEW_ITEM_SHAPE,\n    getGridItemProperties,\n} from '../components/ItemGrid/gridUtil';\nimport { itemTypeMap } from '../modules/itemTypes';\nimport { convertUiItemsToBackend } from '../modules/uiBackendItemConverter';\n\nconst onError = error => {\n    console.log('Error (Saving Dashboard): ', error);\n    return error;\n};\n\n// actions\n\nexport const acSetEditDashboard = (dashboard, items) => {\n    const val = {\n        ...dashboard,\n        dashboardItems: items,\n    };\n\n    return {\n        type: RECEIVED_EDIT_DASHBOARD,\n        value: val,\n    };\n};\n\nexport const acSetEditNewDashboard = () => ({\n    type: START_NEW_DASHBOARD,\n});\n\nexport const acClearEditDashboard = () => ({\n    type: RECEIVED_NOT_EDITING,\n});\n\nexport const acSetDashboardTitle = value => ({\n    type: RECEIVED_TITLE,\n    value,\n});\n\nexport const acSetDashboardDescription = value => ({\n    type: RECEIVED_DESCRIPTION,\n    value,\n});\n\nexport const acUpdateDashboardLayout = value => ({\n    type: RECEIVED_DASHBOARD_LAYOUT,\n    value,\n});\n\nexport const acAddDashboardItem = item => {\n    const type = item.type;\n    delete item.type;\n    const itemPropName = itemTypeMap[type].propName;\n\n    const id = generateUid();\n    const gridItemProperties = getGridItemProperties(id);\n\n    return {\n        type: ADD_DASHBOARD_ITEM,\n        value: {\n            id,\n            type,\n            [itemPropName]: item.content,\n            ...NEW_ITEM_SHAPE,\n            ...gridItemProperties,\n        },\n    };\n};\n\nexport const acUpdateDashboardItem = item => ({\n    type: UPDATE_DASHBOARD_ITEM,\n    value: item,\n});\n\nexport const acRemoveDashboardItem = value => ({\n    type: REMOVE_DASHBOARD_ITEM,\n    value,\n});\n\n// thunks\n\nexport const tSaveDashboard = () => async (dispatch, getState) => {\n    const dashboard = sGetEditDashboardRoot(getState());\n\n    const dashboardToSave = {\n        ...dashboard,\n        dashboardItems: convertUiItemsToBackend(dashboard.dashboardItems),\n    };\n\n    try {\n        const dashboardId = dashboardToSave.id\n            ? await updateDashboard(dashboardToSave)\n            : await postDashboard(dashboardToSave);\n\n        dispatch(acClearEditDashboard());\n        await dispatch(tSetSelectedDashboardById(dashboardId));\n\n        return Promise.resolve(dashboardId);\n    } catch (error) {\n        onError(error);\n    }\n};\n","import {\n    SET_DASHBOARDS,\n    ADD_DASHBOARDS,\n    SET_DASHBOARD_STARRED,\n    SET_DASHBOARD_DISPLAY_NAME,\n    SET_DASHBOARD_ITEMS,\n} from '../reducers/dashboards';\nimport {\n    getCustomDashboards,\n    sGetDashboardById,\n    sGetDashboardsSortedByStarred,\n} from '../reducers/dashboards';\nimport { sGetUserUsername } from '../reducers/user';\nimport { tSetSelectedDashboardById, acSetSelectedId } from './selected';\nimport { acClearEditDashboard } from './editDashboard';\nimport {\n    apiFetchDashboards,\n    apiStarDashboard,\n    apiDeleteDashboard,\n} from '../api/dashboards';\nimport { getPreferredDashboardId } from '../api/localStorage';\nimport { arrayToIdMap } from '../modules/util';\n\n// actions\n\nexport const acSetDashboards = dashboards => ({\n    type: SET_DASHBOARDS,\n    value: arrayToIdMap(getCustomDashboards(dashboards)),\n});\n\nexport const acAppendDashboards = dashboards => ({\n    type: ADD_DASHBOARDS,\n    value: arrayToIdMap(getCustomDashboards(dashboards)),\n});\n\nexport const acSetDashboardStarred = (dashboardId, isStarred) => ({\n    type: SET_DASHBOARD_STARRED,\n    dashboardId: dashboardId,\n    value: isStarred,\n});\n\nexport const acSetDashboardDisplayName = (dashboardId, value) => ({\n    type: SET_DASHBOARD_DISPLAY_NAME,\n    dashboardId,\n    value,\n});\n\nexport const acSetDashboardItems = value => ({\n    type: SET_DASHBOARD_ITEMS,\n    value,\n});\n\n// thunks\n\nexport const tFetchDashboards = () => async dispatch => {\n    const collection = await apiFetchDashboards();\n    dispatch(acSetDashboards(collection.toArray()));\n};\n\nexport const tSelectDashboard = id => async (dispatch, getState) => {\n    const onError = error => {\n        console.log('Error (apiFetchDashboards): ', error);\n        return error;\n    };\n\n    try {\n        const state = getState();\n\n        let dashboardToSelect = null;\n        if (id) {\n            dashboardToSelect = sGetDashboardById(state, id) || null;\n        } else {\n            const preferredId = getPreferredDashboardId(\n                sGetUserUsername(state)\n            );\n            const dash = sGetDashboardById(state, preferredId);\n            dashboardToSelect =\n                preferredId && dash\n                    ? dash\n                    : sGetDashboardsSortedByStarred(state)[0];\n        }\n\n        if (dashboardToSelect) {\n            dispatch(tSetSelectedDashboardById(dashboardToSelect.id));\n        } else {\n            dispatch(acSetSelectedId());\n        }\n    } catch (err) {\n        return onError(err);\n    }\n};\n\nexport const tStarDashboard = (id, isStarred) => async dispatch => {\n    const onSuccess = id => {\n        dispatch(acSetDashboardStarred(id, isStarred));\n        return id;\n    };\n\n    const onError = error => {\n        console.log('Error (apiStarDashboard): ', error);\n        return error;\n    };\n    try {\n        await apiStarDashboard(id, isStarred);\n        return onSuccess(id);\n    } catch (err) {\n        return onError(err);\n    }\n};\n\nexport const tDeleteDashboard = id => async dispatch => {\n    try {\n        await apiDeleteDashboard(id);\n        dispatch(acClearEditDashboard());\n        dispatch(acSetSelectedId());\n        dispatch(acSetDashboardItems([]));\n\n        await dispatch(tFetchDashboards());\n\n        return Promise.resolve();\n    } catch (err) {\n        console.log('Error (deleteDashboard): ', err);\n        return err;\n    }\n};\n","/** @module reducers/controlBar */\nimport { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\n\nexport const SET_CONTROLBAR_USER_ROWS = 'SET_CONTROLBAR_USER_ROWS';\n\nexport const DEFAULT_STATE_CONTROLBAR_ROWS = 1;\n\nconst userRows = (state = DEFAULT_STATE_CONTROLBAR_ROWS, action) => {\n    switch (action.type) {\n        case SET_CONTROLBAR_USER_ROWS:\n            return validateReducer(action.value, DEFAULT_STATE_CONTROLBAR_ROWS);\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    userRows,\n});\n\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\nexport const sGetControlBarRoot = state => state.controlBar;\n\n// Selector dependency level 2\n\nexport const sGetControlBarUserRows = state =>\n    sGetControlBarRoot(state).userRows;\n","import { getInstance } from 'd2';\nimport { DEFAULT_STATE_CONTROLBAR_ROWS } from '../reducers/controlBar';\n\nconst NAMESPACE = 'dashboard';\nconst KEY = 'controlBarRows';\n\nconst hasNamespace = async d2 => await d2.currentUser.dataStore.has(NAMESPACE);\n\nconst getNamespace = async (d2, hasNamespace) =>\n    hasNamespace\n        ? await d2.currentUser.dataStore.get(NAMESPACE)\n        : await d2.currentUser.dataStore.create(NAMESPACE);\n\nexport const apiGetControlBarRows = async () => {\n    const d2 = await getInstance();\n    const namespace = await getNamespace(d2, await hasNamespace(d2));\n    const hasKey = namespace.keys && namespace.keys.find(key => key === KEY);\n\n    if (hasKey) {\n        return await namespace.get(KEY);\n    } else {\n        await apiPostControlBarRows(DEFAULT_STATE_CONTROLBAR_ROWS, namespace);\n        console.log(\n            '(These errors to /userDataStore/dashboard can be ignored)'\n        );\n        return DEFAULT_STATE_CONTROLBAR_ROWS;\n    }\n};\n\nexport const apiPostControlBarRows = async (rows, namespace) => {\n    const d2 = await getInstance();\n    const ns = namespace || (await getNamespace(d2, hasNamespace));\n\n    ns.set(KEY, rows);\n};\n","import { SET_CONTROLBAR_USER_ROWS } from '../reducers/controlBar';\nimport { apiGetControlBarRows } from '../api/controlBar';\n\n// actions\n\nexport const acSetControlBarUserRows = rows => ({\n    type: SET_CONTROLBAR_USER_ROWS,\n    value: rows,\n});\n\n// thunks\n\nexport const tSetControlBarRows = () => async dispatch => {\n    const onSuccess = rows => {\n        dispatch(acSetControlBarUserRows(rows));\n    };\n\n    const onError = error => {\n        console.log('Error (apiGetControlBarRows): ', error);\n        return error;\n    };\n\n    try {\n        const controlBarRows = await apiGetControlBarRows();\n        return onSuccess(controlBarRows);\n    } catch (err) {\n        return onError(err);\n    }\n};\n","import {\n    getDimensionById,\n    DIMENSION_ID_PERIOD,\n    DIMENSION_ID_ORGUNIT,\n} from '@dhis2/analytics';\n\nexport const SET_DIMENSIONS = 'SET_DIMENSIONS';\nexport const DEFAULT_DIMENSIONS = [\n    getDimensionById(DIMENSION_ID_PERIOD),\n    getDimensionById(DIMENSION_ID_ORGUNIT),\n];\n\nexport default (state = DEFAULT_DIMENSIONS, action) => {\n    switch (action.type) {\n        case SET_DIMENSIONS: {\n            return [...DEFAULT_DIMENSIONS, ...action.value];\n        }\n        default:\n            return state;\n    }\n};\n\nexport const sGetDimensions = state => state.dimensions;\n","export const SET_SETTINGS = 'SET_SETTINGS';\nexport const ADD_SETTINGS = 'ADD_SETTINGS';\n\nexport const DEFAULT_SETTINGS = {\n    keyDateFormat: 'yyyy-MM-dd',\n    keyAnalysisRelativePeriod: 'LAST_12_MONTHS',\n    keyAnalysisDigitGroupSeparator: 'SPACE',\n    displayNameProperty: 'displayName',\n    uiLocale: 'en',\n    rootOrganisationUnit: {},\n};\n\nexport default (state = DEFAULT_SETTINGS, action) => {\n    switch (action.type) {\n        case SET_SETTINGS: {\n            return Object.assign({}, action.value);\n        }\n        case ADD_SETTINGS: {\n            return {\n                ...state,\n                ...action.value,\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// Selectors\n\nexport const sGetSettings = state => state.settings;\n\nexport const sGetSettingsDisplayNameProperty = state =>\n    sGetSettings(state).displayNameProperty;\n\nexport const sGetRootOrgUnit = state =>\n    sGetSettings(state).rootOrganisationUnit;\n\nexport const sGetRelativePeriod = state =>\n    sGetSettings(state).keyAnalysisRelativePeriod;\n\nexport const sGetUiLocale = state => sGetSettings(state).uiLocale;\n","import { SET_DIMENSIONS } from '../reducers/dimensions';\nimport { apiFetchDimensions } from '@dhis2/analytics';\nimport { sGetSettingsDisplayNameProperty } from '../reducers/settings';\n\nexport const acSetDimensions = dimensions => ({\n    type: SET_DIMENSIONS,\n    value: dimensions,\n});\n\nexport const tSetDimensions = d2 => async (dispatch, getState) => {\n    const onSuccess = dimensions => {\n        dispatch(acSetDimensions(dimensions));\n    };\n\n    const onError = error => {\n        console.log('Error (apiFetchDimensions): ', error);\n        return error;\n    };\n\n    try {\n        const displayNameProp = sGetSettingsDisplayNameProperty(getState());\n        const dimensions = await apiFetchDimensions(d2, displayNameProp);\n\n        // filter out CATEGORY that are not of type ATTRIBUTE\n        const filteredDimensions = dimensions.filter(\n            dim =>\n                dim.dimensionType !== 'CATEGORY' ||\n                (dim.dimensionType === 'CATEGORY' &&\n                    dim.dataDimensionType === 'ATTRIBUTE')\n        );\n        return onSuccess(filteredDimensions);\n    } catch (err) {\n        return onError(err);\n    }\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\n\nimport classes from './styles/ShowMoreButton.module.css';\n\nexport const SHOWMORE_BAR_HEIGHT = 16;\n\nexport const ShowMoreButton = ({ onClick, isMaxHeight, disabled }) => {\n    return (\n        <div style={{ textAlign: 'center' }}>\n            {disabled ? (\n                <div className={classes.disabled}>{i18n.t('Show more')}</div>\n            ) : (\n                <div className={classes.showMore} onClick={onClick}>\n                    {isMaxHeight ? i18n.t('Show less') : i18n.t('Show more')}\n                </div>\n            )}\n        </div>\n    );\n};\n\nShowMoreButton.propTypes = {\n    disabled: PropTypes.bool,\n    isMaxHeight: PropTypes.bool,\n    onClick: PropTypes.func,\n};\n\nexport default ShowMoreButton;\n","import { SHOWMORE_BAR_HEIGHT } from './ShowMoreButton';\n\nexport const CONTROL_BAR_ROW_HEIGHT = 40;\nexport const FIRST_ROW_PADDING_HEIGHT = 10;\nexport const MIN_ROW_COUNT = 1;\n\nexport const HEADERBAR_HEIGHT = 48;\n\nconst CONTROL_BAR_OUTER_HEIGHT_DIFF =\n    FIRST_ROW_PADDING_HEIGHT + SHOWMORE_BAR_HEIGHT - 2; // 2 pixel \"adjustment\"\n\nexport const getRowsHeight = rows => {\n    return rows * CONTROL_BAR_ROW_HEIGHT;\n};\n\nexport const getNumRowsFromHeight = height => {\n    return Math.floor(\n        (height - CONTROL_BAR_OUTER_HEIGHT_DIFF) / CONTROL_BAR_ROW_HEIGHT\n    );\n};\n\nexport const getTopOffset = rows => {\n    return HEADERBAR_HEIGHT + getControlBarHeight(rows, false);\n};\n\nexport const getControlBarHeight = rows => {\n    return getRowsHeight(rows) + CONTROL_BAR_OUTER_HEIGHT_DIFF;\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { colors } from '@dhis2/ui';\nimport { HEADERBAR_HEIGHT } from './controlBarDimensions';\n\nimport classes from './styles/ControlBar.module.css';\n\nconst DRAG_HANDLE_HEIGHT = 7;\n\nclass ControlBar extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            dragging: false,\n        };\n    }\n\n    onStartDrag = () => {\n        this.setState({ dragging: true });\n        window.addEventListener('mousemove', this.onDrag);\n        window.addEventListener('mouseup', this.onEndDrag);\n    };\n\n    onDrag = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const newHeight = event.clientY;\n\n        if (\n            this.props.onChangeHeight &&\n            newHeight !== this.props.height &&\n            newHeight > 0\n        ) {\n            requestAnimationFrame(() => {\n                this.props.onChangeHeight(newHeight);\n            });\n        }\n    };\n\n    onEndDrag = () => {\n        this.setState({ dragging: false });\n        window.removeEventListener('mousemove', this.onDrag);\n        window.removeEventListener('mouseup', this.onEndDrag);\n\n        if (this.props.onEndDrag) {\n            this.props.onEndDrag();\n        }\n    };\n\n    renderDragHandle() {\n        return typeof this.props.onChangeHeight === 'function' ? (\n            <div\n                className={classes.draghandle}\n                style={{ height: DRAG_HANDLE_HEIGHT }}\n                onMouseDown={this.onStartDrag}\n            />\n        ) : null;\n    }\n\n    render() {\n        const height = Math.max(this.props.height, 0) + DRAG_HANDLE_HEIGHT;\n\n        const rootStyle = Object.assign(\n            {\n                height,\n                top: HEADERBAR_HEIGHT,\n                backgroundColor: this.props.editMode\n                    ? colors.yellow050\n                    : colors.white,\n                paddingBottom: DRAG_HANDLE_HEIGHT,\n            },\n            // Disable animations while dragging\n            this.state.dragging ? { transition: 'none' } : {}\n        );\n\n        return (\n            <div style={rootStyle} className={classes.root}>\n                <div className={classes.content}>{this.props.children}</div>\n                {this.renderDragHandle()}\n            </div>\n        );\n    }\n}\n\nControlBar.propTypes = {\n    /**\n     * The height of the control bar in number of lines. Must be a positive integer.\n     */\n    children: PropTypes.node.isRequired,\n\n    /**\n     * If true, the background color of the control bar changes to indicate that edit mode is active.\n     */\n    editMode: PropTypes.bool.isRequired,\n\n    /**\n     * Callback function that is called when the control bar is resized.\n     * The callback receives one argument: The new height in pixels.\n     *\n     * If no callback is specified the control bar will not have a drag handle.\n     */\n    height: PropTypes.number.isRequired,\n\n    /**\n     * Callback function that is called when the control bar is dropped after being dragged.\n     * The callback receives one argument: The new height in pixels.\n     *\n     * Ignored if no \"onChangeHeight\" function is provided.\n     */\n    onChangeHeight: PropTypes.func,\n\n    /**\n     * The contents of the control bar.\n     */\n    onEndDrag: PropTypes.func,\n};\n\nControlBar.defaultProps = {\n    onChangeHeight: null,\n    onEndDrag: null,\n};\n\nexport default ControlBar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst StarIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>\n);\n\nStarIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default StarIcon;\n","import { getInstance } from 'd2';\n\nexport const apiPostDataStatistics = async (eventType, id) => {\n    const d2 = await getInstance();\n    const url = `dataStatistics?eventType=${eventType}&favorite=${id}`;\n\n    d2.Api.getApi().post(url);\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Chip } from '@dhis2/ui';\nimport { Link } from 'react-router-dom';\nimport debounce from 'lodash/debounce';\n\nimport StarIcon from '../../icons/Star';\nimport { apiPostDataStatistics } from '../../api/dataStatistics';\n\nimport classes from './styles/DashboardItemChip.module.css';\n\nexport const DashboardItemChip = ({\n    starred,\n    selected,\n    label,\n    dashboardId,\n}) => {\n    const chipProps = {\n        selected,\n    };\n\n    if (starred) {\n        const selectedState = selected ? classes.selected : classes.unselected;\n        chipProps.icon = (\n            <StarIcon className={`${classes.icon} ${selectedState}`} />\n        );\n    }\n\n    return (\n        <Link\n            className={classes.link}\n            to={`/${dashboardId}`}\n            onClick={debounce(\n                () => apiPostDataStatistics('DASHBOARD_VIEW', dashboardId),\n                500\n            )}\n        >\n            <Chip {...chipProps}>{label}</Chip>\n        </Link>\n    );\n};\n\nDashboardItemChip.propTypes = {\n    dashboardId: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    selected: PropTypes.bool.isRequired,\n    starred: PropTypes.bool.isRequired,\n    classes: PropTypes.object,\n};\n\nexport default DashboardItemChip;\n","import React from 'react';\nimport { colors } from '@dhis2/ui';\n\nconst AddCircleIcon = () => (\n    <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"32\"\n        height=\"32\"\n        fill={colors.teal600}\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm4 11h-3v3c0 .55-.45 1-1 1s-1-.45-1-1v-3H8c-.55 0-1-.45-1-1s.45-1 1-1h3V8c0-.55.45-1 1-1s1 .45 1 1v3h3c.55 0 1 .45 1 1s-.45 1-1 1z\" />\n    </svg>\n);\n\nexport default AddCircleIcon;\n","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst ClearIcon = ({ className }) => (\n    <svg\n        className={className}\n        fill={colors.grey800}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>\n);\n\nClearIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default ClearIcon;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ClearIcon from '../../icons/Clear';\n\nimport classes from './styles/ClearButton.module.css';\n\nexport const ClearButton = ({ onClear }) => (\n    <button className={classes.button} onClick={onClear}>\n        <span>\n            <ClearIcon className={classes.icon} color=\"action\" />\n        </span>\n    </button>\n);\n\nClearButton.propTypes = {\n    onClear: PropTypes.func.isRequired,\n};\n\nexport default ClearButton;\n","import { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\n\nexport const SET_DASHBOARDS_FILTER_NAME = 'SET_DASHBOARDS_FILTER_NAME';\nexport const SET_DASHBOARDS_FILTER_OWNER = 'SET_DASHBOARDS_FILTER_OWNER';\nexport const SET_DASHBOARDS_FILTER_ORDER = 'SET_DASHBOARDS_FILTER_ORDER';\n\nexport const ownerData = [\n    { id: 'ALL', value: 'All users' },\n    { id: 'ME', value: 'Created by me' },\n    { id: 'OTHERS', value: 'Created by others' },\n];\n\nexport const orderData = [\n    { id: 'NAME:ASC', value: 'Name (asc)' },\n    { id: 'NAME:ASC', value: 'Name (desc)' },\n    { id: 'ITEMS:ASC', value: 'Number of items (asc)' },\n    { id: 'ITEMS:ASC', value: 'Number of items (desc)' },\n    { id: 'CREATED:ASC', value: 'Created date (asc)' },\n    { id: 'CREATED:ASC', value: 'Created date (desc)' },\n];\n\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_NAME = '';\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_OWNER = ownerData[0].id;\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_ORDER = orderData[0].id;\n\nconst name = (state = DEFAULT_STATE_DASHBOARDS_FILTER_NAME, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_NAME:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_NAME\n            );\n        default:\n            return state;\n    }\n};\n\nconst owner = (state = DEFAULT_STATE_DASHBOARDS_FILTER_OWNER, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_OWNER:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_NAME\n            );\n        default:\n            return state;\n    }\n};\n\nconst order = (state = DEFAULT_STATE_DASHBOARDS_FILTER_ORDER, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_ORDER:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_ORDER\n            );\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    name,\n    owner,\n    order,\n});\n\n// selectors\n\nexport const sGetDashboardsFilterRoot = state => state.dashboardsFilter;\n\n// selector dependency level 2\n\nexport const sGetFilterName = state => sGetDashboardsFilterRoot(state).name;\nexport const sGetFilterOwner = state => sGetDashboardsFilterRoot(state).owner;\nexport const sGetFilterOrder = state => sGetDashboardsFilterRoot(state).order;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { withStyles } from '@material-ui/core/styles';\nimport InputField from '@material-ui/core/Input';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { colors } from '@dhis2/ui';\n\nimport ClearButton from './ClearButton';\nimport { DEFAULT_STATE_DASHBOARDS_FILTER_NAME } from '../../reducers/dashboardsFilter';\n\nconst styles = {\n    filterField: {\n        fontSize: '14px',\n        width: '200px',\n        height: '30px',\n        top: '-4px',\n    },\n    searchIcon: {\n        color: colors.grey700,\n        width: '20px',\n        height: '20px',\n    },\n};\n\nexport const KEYCODE_ENTER = 13;\nexport const KEYCODE_ESCAPE = 27;\n\nexport class Filter extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            value: DEFAULT_STATE_DASHBOARDS_FILTER_NAME,\n        };\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setState({\n            value: nextProps.name,\n        });\n    }\n\n    setFilterValue = event => {\n        event.preventDefault();\n\n        this.props.onChangeName(event.target.value);\n    };\n\n    handleKeyUp = event => {\n        switch (event.keyCode) {\n            case KEYCODE_ENTER:\n                this.props.onKeypressEnter();\n                break;\n            case KEYCODE_ESCAPE:\n                this.props.onChangeName();\n                break;\n            default:\n                break;\n        }\n    };\n\n    render() {\n        const { classes, name, onChangeName } = this.props;\n\n        const startAdornment = (\n            <InputAdornment position=\"start\">\n                <SearchIcon className={classes.searchIcon} />\n            </InputAdornment>\n        );\n\n        const endAdornment =\n            name !== '' && name !== null ? (\n                <InputAdornment position=\"end\">\n                    <ClearButton onClear={() => onChangeName()} />\n                </InputAdornment>\n            ) : null;\n\n        return (\n            <InputField\n                className={classes.filterField}\n                placeholder={i18n.t('Search for a dashboard')}\n                startAdornment={startAdornment}\n                endAdornment={endAdornment}\n                value={this.state.value}\n                onChange={this.setFilterValue}\n                onKeyUp={this.handleKeyUp}\n            />\n        );\n    }\n}\n\nFilter.propTypes = {\n    classes: PropTypes.object,\n    name: PropTypes.string,\n    onChangeName: PropTypes.func,\n    onKeypressEnter: PropTypes.func,\n};\n\nFilter.defaultProps = {\n    name: '',\n    onChangeName: Function.prototype,\n};\n\nexport default withStyles(styles)(Filter);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport ControlBar from './ControlBar';\nimport arraySort from 'd2-utilizr/lib/arraySort';\nimport PropTypes from 'prop-types';\n\nimport Chip from './DashboardItemChip';\nimport AddCircleIcon from '../../icons/AddCircle';\nimport Filter from './Filter';\nimport ShowMoreButton from './ShowMoreButton';\nimport {\n    FIRST_ROW_PADDING_HEIGHT,\n    MIN_ROW_COUNT,\n    getRowsHeight,\n    getControlBarHeight,\n    getNumRowsFromHeight,\n} from './controlBarDimensions';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { sGetAllDashboards } from '../../reducers/dashboards';\nimport { sGetFilterName } from '../../reducers/dashboardsFilter';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { acSetControlBarUserRows } from '../../actions/controlBar';\nimport { acSetFilterName } from '../../actions/dashboardsFilter';\nimport { orObject, orArray } from '../../modules/util';\nimport { apiPostControlBarRows } from '../../api/controlBar';\n\nimport classes from './styles/DashboardsBar.module.css';\n\nexport const MAX_ROW_COUNT = 10;\n\nexport class DashboardsBar extends Component {\n    state = {\n        rows: MIN_ROW_COUNT,\n    };\n\n    setInitialDashboardState = rows => {\n        this.setState({ rows, isMaxHeight: rows === MAX_ROW_COUNT });\n    };\n\n    componentDidMount() {\n        this.setInitialDashboardState(this.props.userRows);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setInitialDashboardState(nextProps.userRows);\n    }\n\n    onChangeHeight = newHeight => {\n        const adjustedHeight = newHeight - 52; // don't rush the transition to a bigger row count\n        const newRows = Math.max(\n            MIN_ROW_COUNT,\n            getNumRowsFromHeight(adjustedHeight)\n        );\n\n        if (newRows !== this.state.rows) {\n            const newRowCount = Math.min(newRows, MAX_ROW_COUNT);\n\n            this.props.onChangeHeight(newRowCount);\n        }\n    };\n\n    onEndDrag = () => {\n        return apiPostControlBarRows(this.state.rows);\n    };\n\n    onToggleMaxHeight = () => {\n        const rows =\n            this.state.rows === MAX_ROW_COUNT\n                ? this.props.userRows\n                : MAX_ROW_COUNT;\n\n        this.setState({ rows, isMaxHeight: !this.state.isMaxHeight });\n    };\n\n    onSelectDashboard = () => {\n        this.props.history.push(`/${this.props.dashboards[0].id}`);\n    };\n\n    render() {\n        const { dashboards, name, selectedId, onChangeFilterName } = this.props;\n\n        const rowCount = this.state.isMaxHeight\n            ? MAX_ROW_COUNT\n            : this.state.rows;\n        const controlBarHeight = getControlBarHeight(rowCount);\n        const contentWrapperStyle = {\n            padding: `${FIRST_ROW_PADDING_HEIGHT}px 6px 0 6px`,\n            overflowY: this.state.isMaxHeight ? 'auto' : 'hidden',\n            height: getRowsHeight(rowCount) + FIRST_ROW_PADDING_HEIGHT,\n        };\n\n        return (\n            <ControlBar\n                height={controlBarHeight}\n                onChangeHeight={this.onChangeHeight}\n                onEndDrag={this.onEndDrag}\n                editMode={false}\n            >\n                <div style={contentWrapperStyle}>\n                    <div className={classes.leftControls}>\n                        <Link\n                            style={{\n                                display: 'inline-block',\n                                textDecoration: 'none',\n                                marginRight: 10,\n                                position: 'relative',\n                                top: '2px',\n                            }}\n                            to={'/new'}\n                        >\n                            <AddCircleIcon />\n                        </Link>\n                        <Filter\n                            name={name}\n                            onChangeName={onChangeFilterName}\n                            onKeypressEnter={this.onSelectDashboard}\n                        />\n                    </div>\n                    {orArray(dashboards).map(dashboard => (\n                        <Chip\n                            key={dashboard.id}\n                            label={dashboard.displayName}\n                            starred={dashboard.starred}\n                            dashboardId={dashboard.id}\n                            selected={dashboard.id === selectedId}\n                        />\n                    ))}\n                </div>\n                <ShowMoreButton\n                    onClick={this.onToggleMaxHeight}\n                    isMaxHeight={this.state.isMaxHeight}\n                    disabled={this.props.userRows === MAX_ROW_COUNT}\n                />\n            </ControlBar>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    dashboards: sGetAllDashboards(state),\n    name: sGetFilterName(state),\n    userRows: sGetControlBarUserRows(state),\n    selectedId: sGetSelectedId(state),\n});\n\nconst mapDispatchToProps = {\n    onChangeHeight: acSetControlBarUserRows,\n    onChangeFilterName: acSetFilterName,\n};\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const dashboards = Object.values(orObject(stateProps.dashboards));\n    const displayDashboards = arraySort(\n        dashboards.filter(d =>\n            d.displayName.toLowerCase().includes(stateProps.name.toLowerCase())\n        ),\n        'ASC',\n        'displayName'\n    );\n\n    return {\n        ...stateProps,\n        ...ownProps,\n        ...dispatchProps,\n        dashboards: [\n            ...displayDashboards.filter(d => d.starred),\n            ...displayDashboards.filter(d => !d.starred),\n        ],\n    };\n};\n\nDashboardsBar.propTypes = {\n    dashboards: PropTypes.array,\n    history: PropTypes.object,\n    name: PropTypes.string,\n    selectedId: PropTypes.string,\n    userRows: PropTypes.number,\n    onChangeFilterName: PropTypes.func,\n    onChangeHeight: PropTypes.func,\n};\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps,\n        mergeProps\n    )(DashboardsBar)\n);\n","import {\n    SET_DASHBOARDS_FILTER_NAME,\n    SET_DASHBOARDS_FILTER_OWNER,\n    SET_DASHBOARDS_FILTER_ORDER,\n} from '../reducers/dashboardsFilter';\n\n// actions\n\nexport const acSetFilterName = value => ({\n    type: SET_DASHBOARDS_FILTER_NAME,\n    value,\n});\n\nexport const acSetFilterOwner = value => ({\n    type: SET_DASHBOARDS_FILTER_OWNER,\n    value,\n});\n\nexport const acSetFilterOrder = value => ({\n    type: SET_DASHBOARDS_FILTER_ORDER,\n    value,\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport {\n    getTopOffset,\n    MIN_ROW_COUNT,\n} from '../ControlBar/controlBarDimensions';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\n\nconst DashboardVerticalOffset = props => {\n    const rows = props.editMode ? MIN_ROW_COUNT : props.userRows;\n    const marginTop = getTopOffset(rows);\n\n    return <div className=\"page-container-top-margin\" style={{ marginTop }} />;\n};\n\nconst mapStateToProps = state => ({\n    userRows: sGetControlBarUserRows(state),\n});\n\nDashboardVerticalOffset.propTypes = {\n    editMode: PropTypes.bool,\n    userRows: PropTypes.number,\n};\n\nexport default connect(mapStateToProps)(DashboardVerticalOffset);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { MenuItem, colors } from '@dhis2/ui';\n\nconst HeaderMenuItem = ({ title }) => (\n    <MenuItem\n        dense\n        key={title}\n        disabled\n        label={\n            <span style={{ color: colors.grey800, fontWeight: '600' }}>\n                {title}\n            </span>\n        }\n    />\n);\n\nHeaderMenuItem.propTypes = {\n    title: PropTypes.string.isRequired,\n};\n\nexport default HeaderMenuItem;\n","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst LaunchIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"12\"\n        height=\"12\"\n        fill={colors.grey600}\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z\" />\n    </svg>\n);\n\nLaunchIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default LaunchIcon;\n","import React from 'react';\nimport { MenuItem, colors } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport { visTypeIcons } from '@dhis2/analytics';\n\nimport { getItemIcon, VISUALIZATION } from '../../modules/itemTypes';\nimport LaunchIcon from '../../icons/Launch';\n\nimport classes from './styles/ContentMenuItem.module.css';\n\nconst LaunchLink = ({ url }) => (\n    <a\n        onClick={e => e.stopPropagation()}\n        className={classes.launchLink}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        href={url}\n    >\n        <LaunchIcon />\n    </a>\n);\n\nLaunchLink.propTypes = {\n    url: PropTypes.string,\n};\n\nconst InsertButton = () => (\n    <button className={classes.buttonInsert}>{i18n.t('Insert')}</button>\n);\n\nconst ContentMenuItem = ({ type, name, onInsert, url, visType }) => {\n    const ItemIcon = getItemIcon(type);\n\n    const renderedItemIcon =\n        type === VISUALIZATION ? (\n            visTypeIcons[visType]\n        ) : (\n            <ItemIcon style={{ fill: colors.grey600 }} />\n        );\n\n    return (\n        <MenuItem\n            dense\n            onClick={onInsert}\n            label={\n                <div className={classes.menuItem}>\n                    <div className={classes.label}>\n                        <span style={{ marginRight: '6px' }}>\n                            {renderedItemIcon}\n                        </span>\n                        <span>{name}</span>\n                        {url ? <LaunchLink url={url} /> : null}\n                    </div>\n                    <InsertButton />\n                </div>\n            }\n        />\n    );\n};\n\nContentMenuItem.propTypes = {\n    name: PropTypes.string,\n    type: PropTypes.string,\n    url: PropTypes.string,\n    visType: PropTypes.string,\n    onInsert: PropTypes.func,\n};\n\nexport default ContentMenuItem;\n","import i18n from '@dhis2/d2-i18n';\nimport {\n    VISUALIZATION,\n    MAP,\n    EVENT_CHART,\n    EVENT_REPORT,\n    USERS,\n    REPORTS,\n    RESOURCES,\n    APP,\n    MESSAGES,\n    TEXT,\n    SPACER,\n} from '../../modules/itemTypes';\n\nexport const singleItems = [\n    {\n        id: 'additional',\n        header: i18n.t('Additional items'),\n        items: [\n            {\n                type: TEXT,\n                name: i18n.t('Text box'),\n                content: '',\n            },\n            {\n                type: MESSAGES,\n                name: i18n.t('Messages'),\n                content: 'true',\n            },\n            {\n                type: SPACER,\n                name: i18n.t('Spacer'),\n                content: '',\n            },\n        ],\n    },\n];\n\n// categorizedItems are grouped in the item selector menu\nexport const categorizedItems = [\n    VISUALIZATION,\n    MAP,\n    EVENT_REPORT,\n    EVENT_CHART,\n    USERS,\n    REPORTS,\n    RESOURCES,\n    APP,\n];\n\n// listItemTypes are included in a single dashboard item\nexport const listItemTypes = [REPORTS, RESOURCES, USERS];\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { MenuItem, Divider } from '@dhis2/ui';\n\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\n\nimport { tAddListItemContent } from './actions';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\nimport { getItemUrl, APP, VISUALIZATION } from '../../modules/itemTypes';\nimport { categorizedItems, listItemTypes } from './selectableItems';\n\nimport classes from './styles/CategorizedMenuGroup.module.css';\n\nclass CategorizedMenuGroup extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seeMore: false,\n        };\n    }\n\n    addItem = item => () => {\n        const { type, acAddDashboardItem, tAddListItemContent } = this.props;\n\n        if (type === APP) {\n            acAddDashboardItem({ type, content: item.key });\n        } else {\n            const newItem = {\n                id: item.id,\n                name: item.displayName || item.name,\n            };\n\n            if (listItemTypes.includes(type)) {\n                tAddListItemContent(type, newItem);\n            } else {\n                acAddDashboardItem({ type, content: newItem });\n            }\n        }\n    };\n\n    toggleSeeMore = () => {\n        this.setState({ seeMore: !this.state.seeMore });\n\n        this.props.onChangeItemsLimit(this.props.type);\n    };\n\n    render() {\n        const { title, type, items, hasMore } = this.props;\n        return (\n            <>\n                <HeaderMenuItem title={title} />\n                {items.map(item => {\n                    const itemUrl = getItemUrl(type, item, this.context.d2);\n                    return (\n                        <ContentMenuItem\n                            key={item.id || item.key}\n                            type={type}\n                            visType={type === VISUALIZATION ? item.type : type}\n                            name={item.displayName || item.name}\n                            onInsert={this.addItem(item)}\n                            url={itemUrl}\n                        />\n                    );\n                })}\n                {hasMore ? (\n                    <MenuItem\n                        dense\n                        key={`showmore${title}`}\n                        onClick={this.toggleSeeMore}\n                        label={\n                            <button className={classes.showMoreButton}>\n                                {this.state.seeMore\n                                    ? i18n.t('Show fewer')\n                                    : i18n.t('Show more')}\n                            </button>\n                        }\n                    />\n                ) : null}\n                <Divider margin=\"8px 0px\" />\n            </>\n        );\n    }\n}\n\nCategorizedMenuGroup.propTypes = {\n    items: PropTypes.array.isRequired,\n    title: PropTypes.string.isRequired,\n    type: PropTypes.oneOf(categorizedItems).isRequired,\n    onChangeItemsLimit: PropTypes.func.isRequired,\n    acAddDashboardItem: PropTypes.func,\n    hasMore: PropTypes.bool,\n    tAddListItemContent: PropTypes.func,\n};\n\nCategorizedMenuGroup.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nexport default connect(null, {\n    acAddDashboardItem,\n    tAddListItemContent,\n})(CategorizedMenuGroup);\n","import { sGetEditDashboardRoot } from '../../reducers/editDashboard';\nimport { itemTypeMap } from '../../modules/itemTypes';\nimport {\n    acAddDashboardItem,\n    acUpdateDashboardItem,\n} from '../../actions/editDashboard';\n\nexport const tAddListItemContent = (type, content) => (dispatch, getState) => {\n    const state = getState();\n    const listItemType = itemTypeMap[type].propName;\n    const dashboardItems = sGetEditDashboardRoot(state).dashboardItems;\n    const dashboardItemIndex = dashboardItems.findIndex(\n        item => item.type === type\n    );\n    let dashboardItem;\n\n    // Reports/Resources/Users dashboard item type already present in dashboard\n    if (dashboardItemIndex > -1) {\n        dashboardItem = dashboardItems[dashboardItemIndex];\n        dashboardItem[listItemType].push(content);\n\n        dispatch(acUpdateDashboardItem(dashboardItem));\n    } else {\n        dashboardItem = {\n            type: type,\n            content: [content],\n        };\n\n        dispatch(acAddDashboardItem(dashboardItem));\n    }\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\n\nexport const SinglesMenuGroup = ({ acAddDashboardItem, category }) => {\n    const addToDashboard = ({ type, content }) => () => {\n        acAddDashboardItem({ type, content });\n    };\n\n    return (\n        <>\n            <HeaderMenuItem title={category.header} />\n            {category.items.map(item => (\n                <ContentMenuItem\n                    key={item.type}\n                    type={item.type}\n                    name={item.name}\n                    onInsert={addToDashboard(item)}\n                />\n            ))}\n        </>\n    );\n};\n\nSinglesMenuGroup.propTypes = {\n    acAddDashboardItem: PropTypes.func,\n    category: PropTypes.object,\n};\n\nexport default connect(\n    null,\n    { acAddDashboardItem }\n)(SinglesMenuGroup);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport Popover from '@material-ui/core/Popover';\nimport { InputField, Menu } from '@dhis2/ui';\n\nimport CategorizedMenuGroup from './CategorizedMenuGroup';\nimport SinglesMenuGroup from './SinglesMenuGroup';\nimport { singleItems, categorizedItems } from './selectableItems';\nimport { itemTypeMap, getDefaultItemCount } from '../../modules/itemTypes';\n\nimport './styles/ItemSelector.css';\n\nconst ItemSearchField = props => (\n    <InputField\n        name=\"Dashboard item search\"\n        label={i18n.t('Search for items to add to this dashboard')}\n        type=\"text\"\n        onChange={props.onChange}\n        onFocus={props.onFocus}\n        value={props.value}\n    />\n);\n\nclass ItemSelector extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n            open: false,\n            maxOptions: new Set(),\n            items: undefined,\n            filter: '',\n        };\n    }\n\n    closeList = () => {\n        this.setState({ open: false, filter: '' });\n    };\n\n    openList = (_, event) => {\n        this.fetchItems();\n\n        this.setState({\n            anchorEl: event.currentTarget,\n            open: true,\n        });\n    };\n\n    setFilter = (_, event) => {\n        this.setState({ filter: event.target.value }, this.fetchItems);\n    };\n\n    getCategorizedMenuGroups = () =>\n        categorizedItems\n            .filter(type => {\n                const itemType = itemTypeMap[type];\n                return (\n                    this.state.items && this.state.items[itemType.endPointName]\n                );\n            })\n            .map(type => {\n                const itemType = itemTypeMap[type];\n                const itemCount = getDefaultItemCount(type);\n                const allItems = this.state.items[itemType.endPointName];\n                const hasMore = allItems.length > itemCount;\n                const items = this.state.maxOptions.has(itemType.id)\n                    ? allItems\n                    : allItems.slice(0, itemCount);\n\n                return (\n                    <CategorizedMenuGroup\n                        key={type}\n                        type={type}\n                        title={itemType.pluralTitle}\n                        items={items}\n                        onChangeItemsLimit={this.fetchItems}\n                        hasMore={hasMore}\n                    />\n                );\n            });\n\n    getSinglesMenuGroups = () =>\n        singleItems.map(category => (\n            <SinglesMenuGroup key={category.id} category={category} />\n        ));\n\n    getMenuGroups = () =>\n        this.getCategorizedMenuGroups().concat(this.getSinglesMenuGroups());\n\n    fetchItems = async type => {\n        if (type) {\n            const maxOptions = this.state.maxOptions;\n\n            if (maxOptions.has(type)) {\n                maxOptions.delete(type);\n            } else {\n                maxOptions.add(type);\n            }\n\n            this.setState({ maxOptions });\n        } else {\n            this.setState({\n                maxOptions: new Set(),\n            });\n        }\n\n        let queryString = '?count=11';\n        if ([...this.state.maxOptions.values()].length) {\n            queryString +=\n                '&max=' + [...this.state.maxOptions.values()].join('&max=');\n        }\n\n        const filter = this.state.filter ? `/${this.state.filter}` : '';\n\n        this.context.d2.Api.getApi()\n            .get(`dashboards/q${filter}${queryString}`)\n            .then(response => this.setState({ items: response }))\n            .catch(console.error);\n    };\n\n    render() {\n        return (\n            <>\n                <ItemSearchField\n                    value={this.state.filter}\n                    onChange={this.setFilter}\n                    onFocus={this.openList}\n                />\n                <Popover\n                    className=\"dashboard-item-selector\"\n                    open={this.state.open}\n                    onClose={this.closeList}\n                    anchorEl={this.state.anchorEl}\n                    anchorOrigin={{ horizontal: 'left', vertical: 'bottom' }}\n                    transformOrigin={{ horizontal: 'left', vertical: 'top' }}\n                    style={{ height: '70vh' }}\n                    PaperProps={{ style: { width: '700px' } }}\n                    disableAutoFocus={true}\n                    disableEnforceFocus={true}\n                    disableRestoreFocus={true}\n                >\n                    <Menu maxWidth={'700px'}>{this.getMenuGroups()}</Menu>\n                </Popover>\n            </>\n        );\n    }\n}\n\nItemSearchField.propTypes = {\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n    onFocus: PropTypes.func,\n};\n\nItemSelector.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nexport default ItemSelector;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { InputField, TextAreaField } from '@dhis2/ui';\n\nimport ItemSelector from '../ItemSelector/ItemSelector';\nimport {\n    acSetDashboardTitle,\n    acSetDashboardDescription,\n} from '../../actions/editDashboard';\nimport { orObject } from '../../modules/util';\nimport { sGetEditDashboardRoot } from '../../reducers/editDashboard';\n\nimport classes from './styles/EditTitleBar.module.css';\n\nexport const EditTitleBar = ({\n    name,\n    description,\n    onChangeTitle,\n    onChangeDescription,\n}) => {\n    const updateTitle = (_, e) => {\n        onChangeTitle(e.target.value);\n    };\n\n    const updateDescription = (_, e) => {\n        onChangeDescription(e.target.value);\n    };\n\n    return (\n        <section className={classes.section}>\n            <div className={classes.titleDescription}>\n                <InputField\n                    className={classes.title}\n                    name=\"Dashboard title input\"\n                    label={i18n.t('Dashboard title')}\n                    type=\"text\"\n                    onChange={updateTitle}\n                    value={name}\n                />\n                <TextAreaField\n                    className={classes.description}\n                    name=\"Dashboard description input\"\n                    label={i18n.t('Dashboard description')}\n                    onChange={updateDescription}\n                    value={description}\n                />\n            </div>\n            <div className={classes.itemSelector}>\n                <ItemSelector />\n            </div>\n        </section>\n    );\n};\n\nEditTitleBar.propTypes = {\n    onChangeDescription: PropTypes.func.isRequired,\n    onChangeTitle: PropTypes.func.isRequired,\n    description: PropTypes.string,\n    name: PropTypes.string,\n};\n\nEditTitleBar.defaultProps = {\n    name: '',\n    description: '',\n};\n\nconst mapStateToProps = state => {\n    const selectedDashboard = orObject(sGetEditDashboardRoot(state));\n\n    return {\n        name: selectedDashboard.name,\n        description: selectedDashboard.description,\n    };\n};\n\nconst mapDispatchToProps = {\n    onChangeTitle: acSetDashboardTitle,\n    onChangeDescription: acSetDashboardDescription,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditTitleBar);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n    Button,\n    Modal,\n    ModalTitle,\n    ModalContent,\n    ModalActions,\n    ButtonStrip,\n} from '@dhis2/ui';\n\nimport i18n from '@dhis2/d2-i18n';\n\nimport {\n    PeriodDimension,\n    DynamicDimension,\n    OrgUnitDimension,\n    DIMENSION_ID_PERIOD,\n    DIMENSION_ID_ORGUNIT,\n} from '@dhis2/analytics';\n\nclass FilterDialog extends Component {\n    onConfirm = id => () => this.props.onConfirm(id);\n\n    renderDialogContent() {\n        const { displayNameProperty, dimension, selectedItems } = this.props;\n        const dialogId = dimension.id;\n\n        const commonProps = {\n            d2: this.context.d2,\n            onSelect: this.props.onSelect,\n            onDeselect: this.props.onDeselect,\n            onReorder: this.props.onReorder,\n        };\n\n        switch (dialogId) {\n            case DIMENSION_ID_PERIOD: {\n                return (\n                    <PeriodDimension\n                        selectedPeriods={selectedItems}\n                        onSelect={commonProps.onSelect}\n                    />\n                );\n            }\n            case DIMENSION_ID_ORGUNIT:\n                return (\n                    <OrgUnitDimension\n                        displayNameProperty={displayNameProperty}\n                        ouItems={selectedItems}\n                        {...commonProps}\n                    />\n                );\n            default:\n                return (\n                    <DynamicDimension\n                        selectedItems={selectedItems}\n                        dimensionId={dialogId}\n                        onSelect={commonProps.onSelect}\n                        context={commonProps.d2}\n                    />\n                );\n        }\n    }\n\n    render() {\n        const { dimension, onClose } = this.props;\n        const dialogId = dimension.id;\n\n        return (\n            <>\n                {dialogId && (\n                    <Modal onClose={onClose} position=\"top\" large>\n                        <ModalTitle>{dimension.name}</ModalTitle>\n                        <ModalContent>\n                            {this.renderDialogContent()}\n                        </ModalContent>\n                        <ModalActions>\n                            <ButtonStrip>\n                                <Button secondary onClick={onClose}>\n                                    {i18n.t('Cancel')}\n                                </Button>\n                                <Button\n                                    primary\n                                    onClick={this.onConfirm(dialogId)}\n                                >\n                                    {i18n.t('Confirm')}\n                                </Button>\n                            </ButtonStrip>\n                        </ModalActions>\n                    </Modal>\n                )}\n            </>\n        );\n    }\n}\n\nFilterDialog.propTypes = {\n    dimension: PropTypes.object,\n    displayNameProperty: PropTypes.string,\n    selectedItems: PropTypes.array,\n    onClose: PropTypes.func,\n    onConfirm: PropTypes.func,\n    onDeselect: PropTypes.func,\n    onReorder: PropTypes.func,\n    onSelect: PropTypes.func,\n};\n\nFilterDialog.contextTypes = {\n    d2: PropTypes.object,\n};\n\nexport default FilterDialog;\n","export const SET_ACTIVE_MODAL_DIMENSION = 'SET_ACTIVE_MODAL_DIMENSION';\nexport const CLEAR_ACTIVE_MODAL_DIMENSION = 'CLEAR_ACTIVE_MODAL_DIMENSION';\n\nexport const DEFAULT_STATE_ACTIVE_MODAL_DIMENSION = {};\n\nexport default (state = DEFAULT_STATE_ACTIVE_MODAL_DIMENSION, action) => {\n    switch (action.type) {\n        case SET_ACTIVE_MODAL_DIMENSION: {\n            return action.value;\n        }\n        case CLEAR_ACTIVE_MODAL_DIMENSION: {\n            return DEFAULT_STATE_ACTIVE_MODAL_DIMENSION;\n        }\n        default:\n            return state;\n    }\n};\n\nexport const sGetActiveModalDimension = state => state.activeModalDimension;\n","import {\n    SET_ACTIVE_MODAL_DIMENSION,\n    CLEAR_ACTIVE_MODAL_DIMENSION,\n} from '../reducers/activeModalDimension';\n\nexport const acSetActiveModalDimension = value => ({\n    type: SET_ACTIVE_MODAL_DIMENSION,\n    value,\n});\n\nexport const acClearActiveModalDimension = () => ({\n    type: CLEAR_ACTIVE_MODAL_DIMENSION,\n});\n","import React, { useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\n\nimport i18n from '@dhis2/d2-i18n';\nimport { DimensionsPanel } from '@dhis2/analytics';\n\nimport { Button, Popover } from '@dhis2/ui';\nimport FilterDialog from './FilterDialog';\n\nimport { sGetSettingsDisplayNameProperty } from '../../reducers/settings';\nimport { sGetActiveModalDimension } from '../../reducers/activeModalDimension';\nimport { sGetDimensions } from '../../reducers/dimensions';\nimport { sGetFiltersKeys } from '../../reducers/itemFilters';\nimport { sGetEditItemFiltersRoot } from '../../reducers/editItemFilters';\nimport { acAddItemFilter, acRemoveItemFilter } from '../../actions/itemFilters';\nimport {\n    acRemoveEditItemFilter,\n    acSetEditItemFilters,\n} from '../../actions/editItemFilters';\nimport {\n    acClearActiveModalDimension,\n    acSetActiveModalDimension,\n} from '../../actions/activeModalDimension';\n\nconst FilterSelector = props => {\n    const [showPopover, setShowPopover] = useState(false);\n    const ref = useRef(null);\n\n    const closePanel = () => setShowPopover(false);\n\n    const onCloseDialog = () => {\n        closePanel();\n\n        props.clearActiveModalDimension();\n    };\n\n    const selectDimension = id => {\n        props.setActiveModalDimension(\n            props.dimensions.find(dimension => dimension.id === id)\n        );\n    };\n\n    const onSelectItems = ({ dimensionId, items }) => {\n        props.setEditItemFilters({\n            ...props.selectedItems,\n            [dimensionId]: items,\n        });\n    };\n\n    const onDeselectItems = ({ dimensionId, itemIdsToRemove }) => {\n        const oldList = props.selectedItems[dimensionId] || [];\n        const newList = oldList.filter(\n            item => !itemIdsToRemove.includes(item.id)\n        );\n\n        if (newList.length) {\n            props.setEditItemFilters({\n                ...props.selectedItems,\n                [dimensionId]: newList,\n            });\n        } else {\n            props.removeEditItemFilter(dimensionId);\n        }\n    };\n\n    const onReorderItems = ({ dimensionId, itemIds }) => {\n        const oldList = props.selectedItems[dimensionId] || [];\n        const reorderedList = itemIds.map(id =>\n            oldList.find(item => item.id === id)\n        );\n\n        props.setEditItemFilters({\n            ...props.selectedItems,\n            [dimensionId]: reorderedList,\n        });\n    };\n\n    const saveFilter = id => {\n        const filterItems = props.selectedItems[id];\n\n        if (filterItems && filterItems.length) {\n            props.addItemFilter({\n                id,\n                value: [...filterItems],\n            });\n        } else {\n            props.removeItemFilter(id);\n        }\n\n        onCloseDialog();\n    };\n\n    return (\n        <>\n            <span ref={ref}>\n                <Button onClick={() => setShowPopover(true)}>\n                    {i18n.t('Add filter')}\n                    <ArrowDropDownIcon />\n                </Button>\n            </span>\n            {showPopover && (\n                <Popover\n                    onClickOutside={closePanel}\n                    reference={ref}\n                    arrow={true}\n                    placement=\"bottom-start\"\n                >\n                    <DimensionsPanel\n                        style={{ width: '320px' }}\n                        dimensions={props.dimensions}\n                        onDimensionClick={selectDimension}\n                        selectedIds={props.selectedDimensions}\n                    />\n                </Popover>\n            )}\n            {props.dimension ? (\n                <FilterDialog\n                    displayNameProperty={props.displayNameProperty}\n                    dimension={props.dimension}\n                    selectedItems={\n                        props.selectedItems[props.dimension.id] || []\n                    }\n                    onSelect={onSelectItems}\n                    onDeselect={onDeselectItems}\n                    onReorder={onReorderItems}\n                    onClose={onCloseDialog}\n                    onConfirm={saveFilter}\n                />\n            ) : null}\n        </>\n    );\n};\n\nconst mapStateToProps = state => ({\n    displayNameProperty: sGetSettingsDisplayNameProperty(state),\n    dimension: sGetActiveModalDimension(state),\n    dimensions: sGetDimensions(state),\n    selectedDimensions: sGetFiltersKeys(state),\n    selectedItems: sGetEditItemFiltersRoot(state),\n});\n\nFilterSelector.propTypes = {\n    addItemFilter: PropTypes.func,\n    clearActiveModalDimension: PropTypes.func,\n    dimension: PropTypes.object,\n    dimensions: PropTypes.array,\n    displayNameProperty: PropTypes.string,\n    removeEditItemFilter: PropTypes.func,\n    removeItemFilter: PropTypes.func,\n    selectedDimensions: PropTypes.array,\n    selectedItems: PropTypes.object,\n    setActiveModalDimension: PropTypes.func,\n    setEditItemFilters: PropTypes.func,\n};\n\nexport default connect(mapStateToProps, {\n    clearActiveModalDimension: acClearActiveModalDimension,\n    setActiveModalDimension: acSetActiveModalDimension,\n    addItemFilter: acAddItemFilter,\n    removeItemFilter: acRemoveItemFilter,\n    removeEditItemFilter: acRemoveEditItemFilter,\n    setEditItemFilters: acSetEditItemFilters,\n})(FilterSelector);\n","import React, { Component } from 'react';\nimport InfoOutlineIcon from '@material-ui/icons/InfoOutlined';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nclass Info extends Component {\n    show = false;\n\n    toggle() {\n        this.show = !this.show;\n        return this.show;\n    }\n\n    render() {\n        return (\n            <div onClick={() => this.props.onClick(this.toggle())}>\n                <InfoOutlineIcon style={{ fill: colors.grey600 }} />\n            </div>\n        );\n    }\n}\n\nInfo.propTypes = {\n    onClick: PropTypes.func,\n};\n\nexport default Info;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport SharingDialog from '@dhis2/d2-ui-sharing-dialog';\nimport Star from '@material-ui/icons/Star';\nimport StarBorder from '@material-ui/icons/StarBorder';\nimport { Button, colors } from '@dhis2/ui';\n\nimport { orObject } from '../../modules/util';\nimport { tStarDashboard } from '../../actions/dashboards';\nimport { acSetSelectedShowDescription } from '../../actions/selected';\nimport FilterSelector from '../ItemFilter/FilterSelector';\nimport Info from './Info';\nimport {\n    sGetSelectedId,\n    sGetSelectedShowDescription,\n} from '../../reducers/selected';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n} from '../../reducers/dashboards';\n\nimport classes from './styles/ViewTitleBar.module.css';\n\nconst NO_DESCRIPTION = i18n.t('No description');\n\nclass ViewTitleBar extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            sharingDialogIsOpen: false,\n        };\n    }\n\n    toggleSharingDialog = () =>\n        this.setState({ sharingDialogIsOpen: !this.state.sharingDialogIsOpen });\n\n    render() {\n        const {\n            id,\n            name,\n            description,\n            access,\n            style,\n            showDescription,\n            starred,\n            onStarClick,\n            onInfoClick,\n        } = this.props;\n\n        const titleStyle = Object.assign({}, style.title, {\n            cursor: 'default',\n            userSelect: 'text',\n            top: '7px',\n        });\n\n        const StarIcon = starred ? Star : StarBorder;\n\n        return (\n            <>\n                <div className={classes.titleBar}>\n                    <span style={titleStyle}>{name}</span>\n                    <div className={classes.actions}>\n                        <div\n                            className={classes.titleBarIcon}\n                            onClick={onStarClick}\n                        >\n                            <StarIcon style={{ fill: colors.grey600 }} />\n                        </div>\n                        <div className={classes.titleBarIcon}>\n                            <Info onClick={onInfoClick} />\n                        </div>\n                        <div style={{ marginLeft: '10px' }}>\n                            {access.update ? (\n                                <Link\n                                    className={classes.editLink}\n                                    to={`/${id}/edit`}\n                                >\n                                    <Button>{i18n.t('Edit')}</Button>\n                                </Link>\n                            ) : null}\n                            {access.manage ? (\n                                <span style={{ marginRight: '4px' }}>\n                                    <Button onClick={this.toggleSharingDialog}>\n                                        {i18n.t('Share')}\n                                    </Button>\n                                </span>\n                            ) : null}\n                            <span style={{ marginRight: '4px' }}>\n                                <FilterSelector />\n                            </span>\n                        </div>\n                    </div>\n                </div>\n                {showDescription ? (\n                    <div\n                        className=\"dashboard-description\"\n                        style={Object.assign(\n                            { paddingTop: '10px', paddingBottom: '5px' },\n                            style.description,\n                            !description ? { color: '#888' } : {}\n                        )}\n                    >\n                        {description || NO_DESCRIPTION}\n                    </div>\n                ) : null}\n                {id ? (\n                    <SharingDialog\n                        d2={this.context.d2}\n                        id={id}\n                        type=\"dashboard\"\n                        open={this.state.sharingDialogIsOpen}\n                        onRequestClose={this.toggleSharingDialog}\n                    />\n                ) : null}\n            </>\n        );\n    }\n}\n\nViewTitleBar.propTypes = {\n    access: PropTypes.object,\n    description: PropTypes.string,\n    id: PropTypes.string,\n    name: PropTypes.string,\n    showDescription: PropTypes.bool,\n    starred: PropTypes.bool,\n    style: PropTypes.object,\n    onInfoClick: PropTypes.func,\n    onStarClick: PropTypes.func,\n};\n\nViewTitleBar.defaultProps = {\n    name: '',\n    description: '',\n    starred: false,\n    showDescription: false,\n    onInfoClick: null,\n};\n\nViewTitleBar.contextTypes = {\n    d2: PropTypes.object,\n};\n\nconst mapStateToProps = state => {\n    const id = sGetSelectedId(state);\n    const dashboard = orObject(sGetDashboardById(state, id));\n\n    return {\n        id,\n        name: dashboard.displayName,\n        description: dashboard.displayDescription,\n        dashboardItems: sGetDashboardItems(state),\n        showDescription: sGetSelectedShowDescription(state),\n        starred: dashboard.starred,\n        access: orObject(dashboard.access),\n    };\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const { id, starred, showDescription } = stateProps;\n    const { dispatch } = dispatchProps;\n\n    return {\n        ...stateProps,\n        ...ownProps,\n        onStarClick: () => dispatch(tStarDashboard(id, !starred)),\n        onInfoClick: () =>\n            dispatch(acSetSelectedShowDescription(!showDescription)),\n    };\n};\n\nexport default connect(mapStateToProps, null, mergeProps)(ViewTitleBar);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { colors } from '@dhis2/ui';\nimport EditTitleBar from './EditTitleBar';\nimport ViewTitleBar from './ViewTitleBar';\n\nimport './TitleBar.css';\n\nconst style = {\n    title: {\n        position: 'relative',\n        fontSize: 21,\n        fontWeight: 500,\n        color: colors.black,\n        minWidth: 50,\n    },\n    description: {\n        fontSize: 14,\n        color: colors.grey800,\n    },\n};\n\nconst TitleBar = ({ edit }) => {\n    return (\n        <div\n            className=\"titlebar-wrapper\"\n            style={{\n                padding: '20px 15px 5px 10px',\n            }}\n        >\n            {edit ? (\n                <EditTitleBar style={style} />\n            ) : (\n                <ViewTitleBar style={style} />\n            )}\n        </div>\n    );\n};\n\nTitleBar.propTypes = {\n    edit: PropTypes.bool,\n};\n\nexport default TitleBar;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport i18n from '@dhis2/d2-i18n';\n\nimport * as pluginManager from './plugin';\nimport { getBaseUrl, orObject } from '../../../modules/util';\nimport { getGridItemDomId } from '../../ItemGrid/gridUtil';\n\nconst pluginCredentials = d2 => {\n    return {\n        baseUrl: getBaseUrl(d2),\n        auth: d2.Api.getApi().defaultHeaders.Authorization,\n    };\n};\n\nclass DefaultPlugin extends Component {\n    pluginCredentials = null;\n\n    constructor(props, context) {\n        super(props);\n\n        this.d2 = context.d2;\n    }\n\n    shouldPluginReload = prevProps => {\n        // TODO - fix this hack, to handle bug with multiple\n        // rerendering while switching between dashboards.\n        //\n        // To determine if the rendering is happening because of a\n        // dashboard switch, check if the item reference has changed.\n        const reloadAllowed = this.props.item === prevProps.item;\n\n        const filtersChanged = prevProps.itemFilters !== this.props.itemFilters;\n        const vis = orObject(this.props.visualization);\n        const prevVis = orObject(prevProps.visualization);\n        const visChanged =\n            vis.id !== prevVis.id || vis.activeType !== prevVis.activeType;\n\n        return reloadAllowed && (visChanged || filtersChanged);\n    };\n\n    reloadPlugin = prevProps => {\n        if (\n            pluginManager.pluginIsAvailable(\n                this.props.item,\n                this.props.visualization\n            ) &&\n            this.shouldPluginReload(prevProps)\n        ) {\n            const prevVis = orObject(prevProps.visualization);\n            const currentVis = this.props.visualization;\n\n            const useActiveType =\n                currentVis.activeType !== prevVis.activeType ||\n                currentVis.activeType !== this.props.item.type;\n\n            if (\n                useActiveType ||\n                this.props.itemFilters !== prevProps.itemFilters\n            ) {\n                pluginManager.unmount(\n                    this.props.item,\n                    prevVis.activeType || this.props.item.type\n                );\n\n                pluginManager.load(this.props.item, this.props.visualization, {\n                    credentials: this.pluginCredentials,\n                    activeType: useActiveType ? currentVis.activeType : null,\n                });\n            }\n        }\n    };\n\n    componentDidMount() {\n        this.pluginCredentials = pluginCredentials(this.d2);\n\n        if (\n            pluginManager.pluginIsAvailable(\n                this.props.item,\n                this.props.visualization\n            )\n        ) {\n            pluginManager.load(this.props.item, this.props.visualization, {\n                credentials: this.pluginCredentials,\n                activeType: !this.props.editMode ? this.getActiveType() : null,\n                options: this.props.options,\n            });\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        this.reloadPlugin(prevProps);\n    }\n\n    getActiveType = () =>\n        this.props.visualization.activeType || this.props.item.type;\n\n    render() {\n        const { classes, item, visualization, style } = this.props;\n        const pluginIsAvailable = pluginManager.pluginIsAvailable(\n            item,\n            visualization\n        );\n\n        return pluginIsAvailable ? (\n            <div id={getGridItemDomId(item.id)} style={style} />\n        ) : (\n            <div className={classes.textDiv}>\n                {i18n.t('Unable to load the plugin for this item')}\n            </div>\n        );\n    }\n}\n\nDefaultPlugin.contextTypes = {\n    d2: PropTypes.object,\n};\n\nDefaultPlugin.propTypes = {\n    classes: PropTypes.object,\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    itemFilters: PropTypes.object,\n    options: PropTypes.object,\n    style: PropTypes.object,\n    visualization: PropTypes.object,\n};\n\nDefaultPlugin.defaultProps = {\n    style: {},\n    item: {},\n    itemFilters: {},\n    options: {},\n    visualization: {},\n};\n\nexport default DefaultPlugin;\n","import React from 'react';\nimport { colors } from '@dhis2/ui';\n\nexport const ThreeDots = () => (\n    <svg\n        height=\"18\"\n        viewBox=\"0 0 18 18\"\n        width=\"18\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n    >\n        <path\n            d=\"m4 7.5c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm10 0c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm-5 0c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5z\"\n            fill=\"#6e7a8a\"\n        />\n    </svg>\n);\n\nexport const SpeechBubble = () => (\n    <svg\n        height=\"20\"\n        viewBox=\"0 0 20 20\"\n        width=\"20\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        style={{ margin: '3px 2px 0 2px' }} // Temporary fix for the misaligned icon, should be removed once the icon is replaced\n    >\n        <path\n            d=\"m20 2h-16c-1.1 0-1.99.9-1.99 2l-.01 18 4-4h14c1.1 0 2-.9 2-2v-12c0-1.1-.9-2-2-2zm-2 12h-12v-2h12zm0-3h-12v-2h12zm0-3h-12v-2h12z\"\n            fill=\"#6e7a8a\"\n            fillRule=\"evenodd\"\n            transform=\"translate(-2 -2)\"\n        />\n    </svg>\n);\n\nexport const Warning = () => (\n    <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        height=\"24\"\n        viewBox=\"0 0 24 24\"\n        width=\"24\"\n        fill={colors.grey600}\n    >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z\" />\n    </svg>\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Warning } from './assets/icons';\n\nimport classes from './styles/FatalErrorBoundary.module.css';\n\nclass FatalErrorBoundary extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            errorFound: false,\n        };\n    }\n    componentDidCatch(error, info) {\n        this.setState({\n            errorFound: true,\n        });\n        console.log('error: ', error);\n        console.log('info: ', info);\n    }\n    render() {\n        if (this.state.errorFound) {\n            return (\n                <p className={classes.container}>\n                    <span className={classes.icon}>\n                        <Warning />\n                    </span>\n                    <span className={classes.message}>\n                        {i18n.t(\n                            'There was a problem loading this dashboard item'\n                        )}\n                    </span>\n                </p>\n            );\n        }\n        return this.props.children;\n    }\n}\n\nFatalErrorBoundary.propTypes = {\n    children: PropTypes.node,\n};\n\nexport default FatalErrorBoundary;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { colors } from '@dhis2/ui';\n\nimport classes from './styles/DeleteItemButton.module.css';\n\nconst DeleteItemButton = ({ onClick }) => (\n    <button\n        type=\"button\"\n        className={classes.deleteItemButton}\n        onClick={onClick}\n        title={i18n.t(`Delete item`)}\n    >\n        <DeleteIcon style={{ fill: colors.red500 }} />\n    </button>\n);\n\nDeleteItemButton.propTypes = {\n    onClick: PropTypes.func,\n};\n\nexport default DeleteItemButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { sGetIsEditing } from '../../reducers/editDashboard';\nimport { acRemoveDashboardItem } from '../../actions/editDashboard';\nimport DeleteItemButton from './DeleteItemButton';\n\nimport classes from './styles/ItemHeader.module.css';\n\n// This is the margin-top + margin-bottom defined in the css file\nexport const HEADER_MARGIN_HEIGHT = 12;\n\nconst ItemHeader = React.forwardRef(\n    (\n        { itemId, acRemoveDashboardItem, actionButtons, title, editMode },\n        ref\n    ) => {\n        const handleDeleteItem = () => acRemoveDashboardItem(itemId);\n\n        return (\n            <div className={classes.itemHeaderWrap} ref={ref}>\n                <p className={classes.itemTitle}>{title}</p>\n                {editMode ? (\n                    <div className={classes.itemActionsWrap}>\n                        <DeleteItemButton onClick={handleDeleteItem} />\n                    </div>\n                ) : (\n                    actionButtons && (\n                        <div className={classes.itemActionsWrap}>\n                            {actionButtons}\n                        </div>\n                    )\n                )}\n            </div>\n        );\n    }\n);\n\nItemHeader.propTypes = {\n    acRemoveDashboardItem: PropTypes.func,\n    actionButtons: PropTypes.node,\n    editMode: PropTypes.bool,\n    itemId: PropTypes.string,\n    title: PropTypes.string,\n};\n\nconst mapStateToProps = state => ({\n    editMode: sGetIsEditing(state),\n});\n\nconst mapDispatchToProps = {\n    acRemoveDashboardItem,\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n    null,\n    { forwardRef: true }\n)(ItemHeader);\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n    isSingleValue,\n    isYearOverYear,\n    VIS_TYPE_GAUGE,\n    VIS_TYPE_PIE,\n} from '@dhis2/analytics';\nimport { Button, Menu, MenuItem, Divider, colors } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport Popover from '@material-ui/core/Popover';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\nimport LaunchIcon from '@material-ui/icons/Launch';\n\nimport { ThreeDots, SpeechBubble } from './assets/icons';\nimport { pluginIsAvailable, getLink } from './plugin';\nimport {\n    CHART,\n    MAP,\n    REPORT_TABLE,\n    EVENT_CHART,\n    EVENT_REPORT,\n    isTrackerDomainType,\n    hasMapView,\n    getAppName,\n} from '../../../modules/itemTypes';\n\nconst iconFill = { fill: colors.grey600 };\n\nconst ItemHeaderButtons = props => {\n    const [anchorEl, setAnchorEl] = useState(null);\n\n    const { item, visualization, onSelectActiveType, d2, activeType } = props;\n\n    const isTrackerType = isTrackerDomainType(item.type);\n\n    const onViewTable = () => {\n        handleClose();\n        onSelectActiveType(isTrackerType ? EVENT_REPORT : REPORT_TABLE);\n    };\n\n    const onViewChart = () => {\n        handleClose();\n        onSelectActiveType(isTrackerType ? EVENT_CHART : CHART);\n    };\n\n    const onViewMap = () => {\n        handleClose();\n        onSelectActiveType(MAP);\n    };\n\n    const itemHasMapView = () => hasMapView(item.type);\n\n    const handleMenuClick = (_, event) => setAnchorEl(event.currentTarget);\n\n    const handleInterpretationClick = () => {\n        props.onToggleFooter();\n        if (anchorEl !== null) {\n            handleClose();\n        }\n    };\n\n    const handleClose = () => setAnchorEl(null);\n\n    const type = visualization.type || item.type;\n    const canViewAs =\n        !isSingleValue(type) &&\n        !isYearOverYear(type) &&\n        type !== VIS_TYPE_GAUGE &&\n        type !== VIS_TYPE_PIE;\n\n    const interpretationMenuLabel = props.activeFooter\n        ? i18n.t(`Hide interpretations and details`)\n        : i18n.t(`Show interpretations and details`);\n\n    const ViewAsMenuItems = () => (\n        <>\n            {activeType !== CHART && activeType !== EVENT_CHART && (\n                <MenuItem\n                    dense\n                    label={i18n.t('View as Chart')}\n                    onClick={onViewChart}\n                    icon={<ChartIcon style={iconFill} />}\n                />\n            )}\n            {activeType !== REPORT_TABLE && activeType !== EVENT_REPORT && (\n                <MenuItem\n                    dense\n                    label={i18n.t('View as Table')}\n                    onClick={onViewTable}\n                    icon={<TableIcon style={iconFill} />}\n                />\n            )}\n            {itemHasMapView() && activeType !== MAP && (\n                <MenuItem\n                    dense\n                    label={i18n.t('View as Map')}\n                    onClick={onViewMap}\n                    icon={<MapIcon style={iconFill} />}\n                />\n            )}\n        </>\n    );\n\n    return pluginIsAvailable(item, visualization) ? (\n        <>\n            <Button small secondary onClick={handleMenuClick}>\n                <ThreeDots />\n            </Button>\n            {anchorEl && (\n                <Popover\n                    open={Boolean(anchorEl)}\n                    onClose={handleClose}\n                    anchorEl={anchorEl}\n                >\n                    <Menu>\n                        {canViewAs && (\n                            <>\n                                <ViewAsMenuItems />\n                                <Divider />\n                            </>\n                        )}\n                        <MenuItem\n                            dense\n                            icon={<LaunchIcon style={{ fill: '#6e7a8a' }} />}\n                            label={i18n.t('Open in {{appName}} app', {\n                                appName: getAppName(item.type),\n                            })}\n                            href={getLink(item, d2)}\n                            target=\"_blank\"\n                        />\n                        <MenuItem\n                            dense\n                            icon={<SpeechBubble />}\n                            label={interpretationMenuLabel}\n                            onClick={handleInterpretationClick}\n                        />\n                    </Menu>\n                </Popover>\n            )}\n        </>\n    ) : null;\n};\n\nItemHeaderButtons.propTypes = {\n    activeFooter: PropTypes.bool,\n    activeType: PropTypes.string,\n    d2: PropTypes.object,\n    item: PropTypes.object,\n    visualization: PropTypes.object,\n    onSelectActiveType: PropTypes.func,\n    onToggleFooter: PropTypes.func,\n};\n\nexport default ItemHeaderButtons;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { colors } from '@dhis2/ui';\nimport { getId } from './plugin';\nimport InterpretationsComponent from '@dhis2/d2-ui-interpretations';\n\nconst style = {\n    scrollContainer: {\n        overflowY: 'auto',\n        height: '340px',\n    },\n    line: {\n        margin: '-1px 0px 0px',\n        height: '1px',\n        border: 'none',\n        backgroundColor: colors.grey100,\n    },\n};\n\nclass ItemFooter extends Component {\n    render() {\n        const objectId = getId(this.props.item);\n\n        return (\n            <div className=\"dashboard-item-footer\">\n                <hr style={style.line} />\n                <div style={style.scrollContainer}>\n                    <InterpretationsComponent\n                        d2={this.context.d2}\n                        item={this.props.item}\n                        type={this.props.item.type.toLowerCase()}\n                        id={objectId}\n                        appName=\"dashboard\"\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nItemFooter.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nItemFooter.propTypes = {\n    item: PropTypes.object.isRequired,\n};\n\nexport default ItemFooter;\n","// Note that this ignores discrepancies in 'this', so shouldn't be used with bound functions\n// This is useful instead of lodash/memoize when we only need to memoize a single value\n// Inspiration: https://github.com/alexreardon/memoize-one\n\nconst memoizeOne = fn => {\n    let lastArgs = undefined;\n    let lastValue = undefined;\n\n    return (...args) => {\n        if (\n            lastArgs &&\n            args.length === lastArgs.length &&\n            args.every((arg, i) => arg === lastArgs[i])\n        ) {\n            return lastValue;\n        }\n        lastArgs = args;\n        lastValue = fn(...args);\n        return lastValue;\n    };\n};\n\nexport default memoizeOne;\n","import React from 'react';\nimport { CircularLoader } from '@dhis2/ui';\n\nimport classes from './styles/LoadingMask.module.css';\n\nconst LoadingMask = () => {\n    return (\n        <div className={classes.center}>\n            <CircularLoader />\n        </div>\n    );\n};\n\nexport default LoadingMask;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport uniqueId from 'lodash/uniqueId';\nimport VisualizationPlugin from '@dhis2/data-visualizer-plugin';\nimport i18n from '@dhis2/d2-i18n';\n\nimport DefaultPlugin from './DefaultPlugin';\nimport FatalErrorBoundary from './FatalErrorBoundary';\nimport ItemHeader, { HEADER_MARGIN_HEIGHT } from '../ItemHeader';\nimport ItemHeaderButtons from './ItemHeaderButtons';\nimport ItemFooter from './ItemFooter';\nimport * as pluginManager from './plugin';\nimport { sGetVisualization } from '../../../reducers/visualizations';\nimport { sGetItemFiltersRoot } from '../../../reducers/itemFilters';\nimport {\n    acAddVisualization,\n    acSetActiveVisualizationType,\n} from '../../../actions/visualizations';\nimport {\n    VISUALIZATION,\n    MAP,\n    CHART,\n    REPORT_TABLE,\n} from '../../../modules/itemTypes';\nimport memoizeOne from '../../../modules/memoizeOne';\n\nimport { getVisualizationConfig } from './plugin';\nimport LoadingMask from './LoadingMask';\nimport { ITEM_CONTENT_PADDING_BOTTOM } from '../../ItemGrid/ItemGrid';\n\nimport classes from './styles/Item.module.css';\n\nexport class Item extends Component {\n    state = {\n        showFooter: false,\n        configLoaded: false,\n        pluginIsLoaded: false,\n    };\n\n    constructor(props, context) {\n        super(props);\n\n        this.d2 = context.d2;\n\n        this.contentRef = React.createRef();\n        this.headerRef = React.createRef();\n\n        this.memoizedApplyFilters = memoizeOne(this.applyFilters);\n\n        this.memoizedGetVisualizationConfig = memoizeOne(\n            getVisualizationConfig\n        );\n\n        this.memoizedGetContentStyle = memoizeOne(this.getContentStyle);\n    }\n\n    async componentDidMount() {\n        this.props.onVisualizationLoaded(\n            // TODO do not call fetch on the pluginManager, do it here as the manager will eventually be removed...\n            await pluginManager.fetch(this.props.item)\n        );\n\n        this.setState({\n            configLoaded: true,\n        });\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (\n            prevState.pluginIsLoaded &&\n            (prevProps.visualization !== this.props.visualization ||\n                prevProps.itemFilters !== this.props.itemFilters)\n        ) {\n            this.setState({\n                pluginIsLoaded: false,\n            });\n        }\n    }\n\n    applyFilters = (visualization, filters) => {\n        if (!Object.keys(filters).length) {\n            return visualization;\n        }\n\n        // deep clone objects in filters to avoid changing the visualization in the Redux store\n        const visRows = visualization.rows.map(obj => ({ ...obj }));\n        const visColumns = visualization.columns.map(obj => ({ ...obj }));\n        const visFilters = visualization.filters.map(obj => ({ ...obj }));\n\n        Object.keys(filters).forEach(dimensionId => {\n            if (filters[dimensionId]) {\n                let dimensionFound = false;\n\n                [visRows, visColumns, visFilters].forEach(dimensionObjects =>\n                    dimensionObjects\n                        .filter(obj => obj.dimension === dimensionId)\n                        .forEach(obj => {\n                            dimensionFound = true;\n                            obj.items = filters[dimensionId];\n                        })\n                );\n\n                // add dimension to filters if not already present elsewhere\n                if (!dimensionFound) {\n                    visFilters.push({\n                        dimension: dimensionId,\n                        items: filters[dimensionId],\n                    });\n                }\n            }\n        });\n\n        return {\n            ...visualization,\n            rows: visRows,\n            columns: visColumns,\n            filters: visFilters,\n        };\n    };\n\n    getUniqueKey = memoizeOne(() => uniqueId());\n\n    pluginCredentials = null;\n\n    getPluginComponent = () => {\n        const activeType = this.getActiveType();\n        const visualization = this.memoizedGetVisualizationConfig(\n            this.props.visualization,\n            this.props.item.type,\n            activeType\n        );\n\n        if (!visualization) {\n            return (\n                <div className={classes.textDiv}>\n                    {i18n.t('No data to display')}\n                </div>\n            );\n        }\n\n        const calculatedHeight =\n            this.props.item.originalHeight -\n            this.headerRef.current.clientHeight -\n            HEADER_MARGIN_HEIGHT -\n            ITEM_CONTENT_PADDING_BOTTOM;\n\n        const props = {\n            ...this.props,\n            visualization,\n            classes,\n            style: this.memoizedGetContentStyle(\n                calculatedHeight,\n                this.contentRef ? this.contentRef.offsetHeight : null,\n                this.props.editMode\n            ),\n        };\n\n        switch (activeType) {\n            case VISUALIZATION:\n            case CHART:\n            case REPORT_TABLE: {\n                return (\n                    <>\n                        {!this.state.pluginIsLoaded && (\n                            <div style={props.style}>\n                                <LoadingMask />\n                            </div>\n                        )}\n                        <VisualizationPlugin\n                            d2={this.d2}\n                            visualization={this.memoizedApplyFilters(\n                                visualization,\n                                props.itemFilters\n                            )}\n                            onLoadingComplete={this.onLoadingComplete}\n                            forDashboard={true}\n                            style={props.style}\n                        />\n                    </>\n                );\n            }\n            case MAP: {\n                if (props.item.type === MAP) {\n                    // apply filters only to thematic and event layers\n                    // for maps AO\n                    const mapViews = props.visualization.mapViews.map(obj => {\n                        if (\n                            obj.layer.includes('thematic') ||\n                            obj.layer.includes('event')\n                        ) {\n                            return this.memoizedApplyFilters(\n                                obj,\n                                props.itemFilters\n                            );\n                        }\n\n                        return obj;\n                    });\n\n                    props.visualization = {\n                        ...props.visualization,\n                        mapViews,\n                    };\n                } else {\n                    // this is the case of a non map AO passed to the maps plugin\n                    // due to a visualization type switch in dashboard item\n                    // maps plugin takes care of converting the AO to a suitable format\n                    props.visualization = this.memoizedApplyFilters(\n                        props.visualization,\n                        props.itemFilters\n                    );\n                }\n\n                props.options = {\n                    ...props.options,\n                    hideTitle: true,\n                };\n\n                return <DefaultPlugin {...props} />;\n            }\n            default: {\n                props.visualization = this.memoizedApplyFilters(\n                    props.visualization,\n                    props.itemFilters\n                );\n\n                return <DefaultPlugin {...props} />;\n            }\n        }\n    };\n\n    onLoadingComplete = () => {\n        this.setState({\n            pluginIsLoaded: true,\n        });\n    };\n\n    onToggleFooter = () => {\n        this.setState(\n            { showFooter: !this.state.showFooter },\n            this.props.onToggleItemExpanded(this.props.item.id)\n        );\n    };\n\n    onSelectActiveType = type => {\n        if (type === this.getActiveType()) {\n            return;\n        }\n\n        pluginManager.unmount(this.props.item, this.getActiveType());\n\n        this.props.onSelectActiveType(this.props.visualization.id, type);\n    };\n\n    getActiveType = () =>\n        this.props.visualization.activeType || this.props.item.type;\n\n    pluginIsAvailable = () =>\n        pluginManager.pluginIsAvailable(\n            this.props.item,\n            this.props.visualization\n        );\n\n    getContentStyle = (calculatedHeight, measuredHeight, editMode) => {\n        const height = editMode\n            ? measuredHeight || calculatedHeight\n            : calculatedHeight;\n\n        return { height };\n    };\n\n    render() {\n        const { item, editMode, itemFilters } = this.props;\n        const { showFooter } = this.state;\n\n        const actionButtons = (\n            <ItemHeaderButtons\n                item={item}\n                visualization={this.props.visualization}\n                onSelectActiveType={this.onSelectActiveType}\n                onToggleFooter={this.onToggleFooter}\n                d2={this.d2}\n                activeType={this.getActiveType()}\n                activeFooter={this.state.showFooter}\n            />\n        );\n\n        return (\n            <>\n                <ItemHeader\n                    title={pluginManager.getName(item)}\n                    itemId={item.id}\n                    actionButtons={actionButtons}\n                    ref={this.headerRef}\n                />\n                <FatalErrorBoundary>\n                    <div\n                        key={this.getUniqueKey(itemFilters)}\n                        className=\"dashboard-item-content\"\n                        ref={ref => (this.contentRef = ref)}\n                    >\n                        {this.state.configLoaded && this.getPluginComponent()}\n                    </div>\n                </FatalErrorBoundary>\n                {!editMode && showFooter ? <ItemFooter item={item} /> : null}\n            </>\n        );\n    }\n}\n\nItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nItem.propTypes = {\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    itemFilters: PropTypes.object,\n    visualization: PropTypes.object,\n    onSelectActiveType: PropTypes.func,\n    onToggleItemExpanded: PropTypes.func,\n    onVisualizationLoaded: PropTypes.func,\n};\n\nItem.defaultProps = {\n    item: {},\n    editMode: false,\n    onToggleItemExpanded: Function.prototype,\n    itemFilters: {},\n    visualization: {},\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n    itemFilters: sGetItemFiltersRoot(state),\n    visualization: sGetVisualization(\n        state,\n        pluginManager.extractFavorite(ownProps.item).id\n    ),\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onVisualizationLoaded: visualization =>\n        dispatch(acAddVisualization(visualization)),\n    onSelectActiveType: (id, type, activeType) =>\n        dispatch(acSetActiveVisualizationType(id, type, activeType)),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Item);\n","import React from 'react';\nimport { colors } from '@dhis2/ui';\n\nconst style = {\n    backgroundColor: colors.grey200,\n    border: 'none',\n    height: '1px',\n    margin: '0px 0px 5px 0px',\n};\n\nconst Line = () => <hr style={style} />;\n\nexport default Line;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\n\nimport { sGetMessagesRoot } from '../../../reducers/messages';\nimport { formatDate } from '../../../modules/util';\nimport { colors } from '@dhis2/ui';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nimport './MessagesItem.css';\n\nconst PRIVATE = 'PRIVATE';\n\nconst messageTypes = {\n    [PRIVATE]: 'Private',\n    VALIDATION_RESULT: 'Validation',\n    TICKET: 'Ticket',\n    SYSTEM: 'System',\n};\n\nconst style = {\n    list: {\n        listStyleType: 'none',\n        paddingLeft: '0px',\n    },\n    seeAll: {\n        textAlign: 'center',\n        fontSize: '13px',\n        marginBottom: '5px',\n    },\n    sender: {\n        fontSize: '13px',\n        lineHeight: '15px',\n        margin: 0,\n        color: colors.grey800,\n    },\n    snippet: {\n        color: colors.grey800,\n        fontSize: '13px',\n        lineHeight: '15px',\n        maxHeight: '30px',\n        overflow: 'hidden',\n    },\n};\n\nclass MessagesItem extends Component {\n    state = {\n        uiLocale: '',\n    };\n\n    async componentDidMount() {\n        const uiLocale = await this.context.d2.currentUser.userSettings.get(\n            'keyUiLocale'\n        );\n\n        this.setState({ uiLocale });\n    }\n\n    getMessageHref = msg => {\n        const msgIdentifier = msg ? `#/${msg.messageType}/${msg.id}` : '';\n        return `${this.context.baseUrl}/dhis-web-messaging/${msgIdentifier}`;\n    };\n\n    getMessageSender = msg => {\n        const latestMsg = msg.messages.slice(-1)[0];\n        return latestMsg.sender ? latestMsg.sender.displayName : '';\n    };\n\n    getMessageItems = () => {\n        const editClass = !this.props.editMode ? 'view' : null;\n\n        return this.props.messages.map(msg => {\n            const redirectToMsg = () => {\n                if (!this.props.editMode) {\n                    document.location.href = this.getMessageHref(msg);\n                }\n            };\n\n            const sender =\n                msg.messageType === PRIVATE\n                    ? this.getMessageSender(msg)\n                    : messageTypes[msg.messageType];\n\n            const readClass = !msg.read ? 'unread' : null;\n            const latestMsg = msg.messages.slice(-1)[0];\n            const msgDate = latestMsg.lastUpdated;\n\n            return (\n                <li\n                    className={`message-item ${editClass}`}\n                    key={msg.id}\n                    onClick={redirectToMsg}\n                >\n                    <p className={`message-title ${readClass}`}>\n                        {msg.displayName} ({msg.messageCount})\n                    </p>\n                    <p style={style.sender}>\n                        {sender} - {formatDate(msgDate, this.state.uiLocale)}\n                    </p>\n                    <p style={style.snippet}>{latestMsg.text}</p>\n                </li>\n            );\n        });\n    };\n\n    render() {\n        return (\n            <>\n                <ItemHeader\n                    title={i18n.t('Messages')}\n                    itemId={this.props.item.id}\n                />\n                <Line />\n                {this.props.messages.length > 0 && (\n                    <div className=\"dashboard-item-content\">\n                        <ul style={style.list}>{this.getMessageItems()}</ul>\n                        <div style={style.seeAll}>\n                            <a href={this.getMessageHref()}>\n                                {i18n.t('See all messages')}\n                            </a>\n                        </div>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nMessagesItem.propTypes = {\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    messages: PropTypes.array,\n};\n\nMessagesItem.contextTypes = {\n    d2: PropTypes.object,\n    baseUrl: PropTypes.string,\n};\n\nconst mapStateToProps = state => {\n    return {\n        messages: Object.values(sGetMessagesRoot(state)),\n    };\n};\n\nconst MessagesContainer = connect(mapStateToProps, null)(MessagesItem);\n\nexport default MessagesContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ItemHeader from '../ItemHeader';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nconst NotSupportedItem = props => (\n    <>\n        <ItemHeader\n            title={i18n.t('Item type \"{{type}}\" not supported', {\n                type: props.item.type,\n            })}\n            itemId={props.item.id}\n        />\n        <div\n            style={{\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center',\n                height: '90%',\n            }}\n        >\n            <NotInterestedIcon\n                style={{ width: 100, height: 100, align: 'center' }}\n                color=\"disabled\"\n            />\n        </div>\n    </>\n);\n\nNotSupportedItem.propTypes = {\n    item: PropTypes.object,\n};\n\nexport default NotSupportedItem;\n","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst DescriptionIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n        fill={colors.grey500}\n    >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M14 2H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6zm2 16H8v-2h8v2zm0-4H8v-2h8v2zm-3-5V3.5L18.5 9H13z\" />\n    </svg>\n);\n\nDescriptionIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default DescriptionIcon;\n","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst DeleteIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"18\"\n        height=\"18\"\n        viewBox=\"0 0 24 24\"\n        fill={colors.red500}\n    >\n        <path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>\n);\n\nDeleteIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default DeleteIcon;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { colors } from '@dhis2/ui';\nimport DescriptionIcon from '../../../icons/Description';\n\nimport DeleteIcon from '../../../icons/Delete';\nimport Line from '../../../widgets/Line';\nimport { itemTypeMap, getItemUrl } from '../../../modules/itemTypes';\nimport { orArray } from '../../../modules/util';\nimport { tRemoveListItemContent } from './actions';\nimport ItemHeader from '../ItemHeader';\nimport classes from './Item.module.css';\n\nconst getItemTitle = item => itemTypeMap[item.type].pluralTitle;\n\nconst getContentItems = item =>\n    orArray(item[itemTypeMap[item.type].propName]).filter(\n        (item, index, array) =>\n            array.findIndex(el => el.id === item.id) === index\n    );\n\nconst ListItem = (props, context) => {\n    const { item, editMode, tRemoveListItemContent } = props;\n    const contentItems = getContentItems(item);\n\n    const getLink = contentItem => {\n        const deleteButton = (\n            <button\n                className={classes.deletebutton}\n                onClick={() => tRemoveListItemContent(item, contentItem)}\n            >\n                <DeleteIcon className={classes.deleteicon} />\n            </button>\n        );\n\n        return (\n            <>\n                <a\n                    className={classes.link}\n                    style={{ color: colors.grey900 }}\n                    href={getItemUrl(item.type, contentItem, context.d2)}\n                >\n                    {contentItem.name}\n                </a>\n                {editMode ? deleteButton : null}\n            </>\n        );\n    };\n\n    return (\n        <>\n            <ItemHeader title={getItemTitle(item)} itemId={item.id} />\n            <Line />\n            <div className=\"dashboard-item-content\">\n                <ul className={classes.list}>\n                    {contentItems.map(contentItem => (\n                        <li className={classes.item} key={contentItem.id}>\n                            <DescriptionIcon className={classes.itemicon} />\n                            {getLink(contentItem)}\n                        </li>\n                    ))}\n                </ul>\n            </div>\n        </>\n    );\n};\n\nListItem.propTypes = {\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    tRemoveListItemContent: PropTypes.func,\n};\n\nListItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nexport default connect(null, {\n    tRemoveListItemContent,\n})(ListItem);\n","import {\n    acUpdateDashboardItem,\n    acRemoveDashboardItem,\n} from '../../../actions/editDashboard';\nimport { itemTypeMap } from '../../../modules/itemTypes';\n\nexport const tRemoveListItemContent = (dashboardItem, content) => dispatch => {\n    const listItemType = itemTypeMap[dashboardItem.type].propName;\n\n    const newContent = dashboardItem[listItemType].filter(\n        item => item.id !== content.id\n    );\n\n    if (newContent.length) {\n        dashboardItem[listItemType] = newContent;\n        dispatch(acUpdateDashboardItem(dashboardItem));\n    } else {\n        dispatch(acRemoveDashboardItem(dashboardItem));\n    }\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\n\nimport Input from '@material-ui/core/Input';\nimport {\n    Parser as RichTextParser,\n    Editor as RichTextEditor,\n} from '@dhis2/d2-ui-rich-text';\n\nimport { acUpdateDashboardItem } from '../../../actions/editDashboard';\nimport { sGetEditDashboardItems } from '../../../reducers/editDashboard';\nimport { sGetDashboardItems } from '../../../reducers/dashboards';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nconst style = {\n    textDiv: {\n        padding: '10px',\n        whiteSpace: 'pre-line',\n        lineHeight: '20px',\n    },\n    textField: {\n        fontSize: '14px',\n        fontStretch: 'normal',\n        width: '90%',\n        margin: '0 auto',\n        display: 'block',\n        lineHeight: '24px',\n    },\n    container: {\n        marginBottom: '20px',\n        marginTop: '20px',\n    },\n};\n\nconst TextItem = props => {\n    const { item, editMode, text, acUpdateDashboardItem } = props;\n\n    const onChangeText = event => {\n        const updatedItem = {\n            ...item,\n            text: event.target.value,\n        };\n\n        acUpdateDashboardItem(updatedItem);\n    };\n\n    const viewItem = () => {\n        const textDivStyle = Object.assign({}, style.textField, style.textDiv);\n        return (\n            <div className=\"dashboard-item-content\" style={style.container}>\n                <RichTextParser style={textDivStyle}>{text}</RichTextParser>\n            </div>\n        );\n    };\n\n    const editItem = () => {\n        return (\n            <>\n                <ItemHeader title={i18n.t('Text item')} itemId={item.id} />\n                <Line />\n                <div className=\"dashboard-item-content\">\n                    <RichTextEditor onEdit={onChangeText}>\n                        <Input\n                            value={text}\n                            multiline\n                            fullWidth\n                            style={style.textField}\n                            placeholder={i18n.t('Add text here')}\n                            onChange={onChangeText}\n                        />\n                    </RichTextEditor>\n                </div>\n            </>\n        );\n    };\n\n    return <>{editMode ? editItem() : viewItem()}</>;\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    const items = ownProps.editMode\n        ? sGetEditDashboardItems(state)\n        : sGetDashboardItems(state);\n\n    const item = items.find(item => item.id === ownProps.item.id);\n\n    return {\n        text: item ? item.text : '',\n    };\n};\n\nTextItem.propTypes = {\n    acUpdateDashboardItem: PropTypes.func,\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    text: PropTypes.string,\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        acUpdateDashboardItem,\n    }\n)(TextItem);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nimport { FILTER_ORG_UNIT } from '../../../actions/itemFilters';\nimport { sGetItemFiltersRoot } from '../../../reducers/itemFilters';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nconst getIframeSrc = (appDetails, item, itemFilters) => {\n    let iframeSrc = `${appDetails.launchUrl}?dashboardItemId=${item.id}`;\n\n    if (\n        itemFilters &&\n        itemFilters[FILTER_ORG_UNIT] &&\n        itemFilters[FILTER_ORG_UNIT].length\n    ) {\n        const ouIds = itemFilters[FILTER_ORG_UNIT].map(\n            ouPath => ouPath.split('/').slice(-1)[0]\n        );\n\n        iframeSrc += `&userOrgUnit=${ouIds.join(',')}`;\n    }\n\n    return iframeSrc;\n};\n\nconst AppItem = ({ item, itemFilters }, context) => {\n    let appDetails;\n\n    const appKey = item.appKey;\n\n    if (appKey) {\n        appDetails = context.d2.system.installedApps.find(\n            app => app.key === appKey\n        );\n    }\n\n    return appDetails && appDetails.name && appDetails.launchUrl ? (\n        <>\n            <ItemHeader title={appDetails.name} itemId={item.id} />\n            <Line />\n            <iframe\n                title={appDetails.name}\n                src={getIframeSrc(appDetails, item, itemFilters)}\n                className=\"dashboard-item-content\"\n                style={{ border: 'none' }}\n            />\n        </>\n    ) : (\n        <>\n            <ItemHeader title={`${appKey} app not found`} />\n            <Line />\n            <div\n                className=\"dashboard-item-content\"\n                style={{\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    height: '90%',\n                }}\n            >\n                <NotInterestedIcon\n                    color=\"disabled\"\n                    disabled\n                    style={{ width: 100, height: 100, align: 'center' }}\n                />\n            </div>\n        </>\n    );\n};\n\nAppItem.propTypes = {\n    item: PropTypes.object,\n    itemFilters: PropTypes.object,\n};\n\nAppItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nconst mapStateToProps = state => ({\n    itemFilters: sGetItemFiltersRoot(state),\n});\n\nexport default connect(mapStateToProps)(AppItem);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\n\nimport { colors } from '@dhis2/ui';\nimport ItemHeader from '../ItemHeader';\n\nconst style = {\n    margin: '21px 28px',\n    fontSize: '14px',\n    lineHeight: '18px',\n    color: colors.grey600,\n};\n\nconst SpacerItem = props => {\n    return (\n        <>\n            <ItemHeader title={i18n.t('Spacer')} itemId={props.item.id} />\n            <p style={style}>\n                {i18n.t(\n                    'Use a spacer to create empty vertical space between other dashboard items.'\n                )}\n            </p>\n        </>\n    );\n};\n\nSpacerItem.propTypes = {\n    item: PropTypes.object,\n};\n\nexport default SpacerItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport VisualizationItem from './VisualizationItem/Item';\nimport MessagesItem from './MessagesItem/Item';\nimport NotSupportedItem from './NotSupportedItem/Item';\nimport ListItem from './ListItem/Item';\nimport TextItem from './TextItem/Item';\nimport AppItem from './AppItem/Item';\nimport SpacerItem from './SpacerItem/Item';\nimport {\n    APP,\n    VISUALIZATION,\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_CHART,\n    EVENT_REPORT,\n    MESSAGES,\n    REPORTS,\n    RESOURCES,\n    USERS,\n    TEXT,\n    SPACER,\n} from '../../modules/itemTypes';\nimport { DEFAULT_STATE_ITEM_FILTERS } from '../../reducers/itemFilters';\n\nconst getGridItem = type => {\n    switch (type) {\n        case VISUALIZATION:\n        case REPORT_TABLE:\n        case CHART:\n        case MAP:\n        case EVENT_CHART:\n        case EVENT_REPORT:\n            return VisualizationItem;\n        case MESSAGES:\n            return MessagesItem;\n        case REPORTS:\n        case RESOURCES:\n        case USERS:\n            return ListItem;\n        case TEXT:\n            return TextItem;\n        case SPACER:\n            return SpacerItem;\n        case APP:\n            return AppItem;\n        default:\n            return NotSupportedItem;\n    }\n};\n\nexport const Item = props => {\n    const GridItem = getGridItem(props.item.type);\n\n    return (\n        <GridItem\n            item={props.item}\n            editMode={props.editMode}\n            itemFilters={\n                props.editMode ? DEFAULT_STATE_ITEM_FILTERS : props.itemFilters\n            }\n            onToggleItemExpanded={props.onToggleItemExpanded}\n        />\n    );\n};\n\nItem.propTypes = {\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    itemFilters: PropTypes.object,\n    onToggleItemExpanded: PropTypes.func,\n};\n","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nexport const NoContentMessage = ({ text }) => (\n    <div\n        style={{\n            padding: '50px 10px',\n            textAlign: 'center',\n            fontSize: '15px',\n            fontWeight: 500,\n            color: colors.grey600,\n        }}\n    >\n        {text}\n    </div>\n);\n\nNoContentMessage.propTypes = {\n    text: PropTypes.string,\n};\n\nexport default NoContentMessage;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash/debounce';\nimport pick from 'lodash/pick';\n\nconst defaultDebounceMs = 100;\nconst defaultBufferFactor = 0.25;\n\nclass ProgressiveLoadingContainer extends Component {\n    static propTypes = {\n        children: PropTypes.node.isRequired,\n        bufferFactor: PropTypes.number,\n        className: PropTypes.string,\n        debounceMs: PropTypes.number,\n        style: PropTypes.object,\n    };\n    static defaultProps = {\n        debounceMs: defaultDebounceMs,\n        bufferFactor: defaultBufferFactor,\n    };\n\n    state = {\n        shouldLoad: false,\n    };\n    containerRef = null;\n    shouldLoadHandler = null;\n\n    checkShouldLoad() {\n        const bufferPx = this.props.bufferFactor * window.innerHeight;\n\n        if (!this.containerRef) {\n            return;\n        }\n\n        const rect = this.containerRef.getBoundingClientRect();\n        if (\n            rect.bottom > -bufferPx &&\n            rect.top < window.innerHeight + bufferPx\n        ) {\n            this.setState({\n                shouldLoad: true,\n            });\n\n            this.removeHandler();\n        }\n    }\n\n    registerHandler() {\n        this.shouldLoadHandler = debounce(\n            () => this.checkShouldLoad(),\n            this.props.debounceMs\n        );\n\n        window.addEventListener('scroll', this.shouldLoadHandler);\n    }\n    removeHandler() {\n        window.removeEventListener('scroll', this.shouldLoadHandler);\n    }\n\n    componentDidMount() {\n        this.registerHandler();\n        this.checkShouldLoad();\n    }\n\n    componentWillUnmount() {\n        this.removeHandler();\n    }\n\n    render() {\n        const { children, className, style, ...props } = this.props;\n        const { shouldLoad } = this.state;\n\n        const eventProps = pick(props, [\n            'onMouseDown',\n            'onTouchStart',\n            'onMouseUp',\n            'onTouchEnd',\n        ]);\n\n        return (\n            <div\n                ref={ref => (this.containerRef = ref)}\n                style={style}\n                className={className}\n                {...eventProps}\n            >\n                {shouldLoad && children}\n            </div>\n        );\n    }\n}\n\nexport default ProgressiveLoadingContainer;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ReactGridLayout from 'react-grid-layout';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\n\nimport {\n    acUpdateDashboardLayout,\n    acRemoveDashboardItem,\n} from '../../actions/editDashboard';\nimport { Item } from '../Item/Item';\nimport { resize as pluginResize } from '../Item/VisualizationItem/plugin';\nimport { isVisualizationType } from '../../modules/itemTypes';\nimport {\n    GRID_ROW_HEIGHT,\n    GRID_COMPACT_TYPE,\n    MARGIN,\n    getGridColumns,\n    hasShape,\n    onItemResize,\n} from './gridUtil';\nimport { orArray } from '../../modules/util';\n\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\n\nimport './ItemGrid.css';\nimport { sGetSelectedId, sGetSelectedIsLoading } from '../../reducers/selected';\nimport {\n    sGetEditDashboardRoot,\n    sGetEditDashboardItems,\n} from '../../reducers/editDashboard';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n} from '../../reducers/dashboards';\nimport ProgressiveLoadingContainer from '../Item/ProgressiveLoadingContainer';\n\n// Component\n\nconst EXPANDED_HEIGHT = 17;\n// this is set in the .dashboard-item-content css\nexport const ITEM_CONTENT_PADDING_BOTTOM = 4;\n\nexport class ItemGrid extends Component {\n    state = {\n        expandedItems: {},\n    };\n\n    onToggleItemExpanded = clickedId => {\n        const isExpanded =\n            typeof this.state.expandedItems[clickedId] === 'boolean'\n                ? this.state.expandedItems[clickedId]\n                : false;\n\n        const expandedItems = { ...this.state.expandedItems };\n        expandedItems[clickedId] = !isExpanded;\n        this.setState({ expandedItems });\n    };\n\n    onRemoveItem = clickedId => {\n        this.props.acRemoveDashboardItem(clickedId);\n    };\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.edit) {\n            this.setState({ expandedItems: {} });\n        }\n    }\n\n    onLayoutChange = newLayout => {\n        if (this.props.edit) {\n            this.props.acUpdateDashboardLayout(newLayout);\n        }\n    };\n\n    onResizeStop = (layout, oldItem, newItem) => {\n        onItemResize(newItem.i);\n\n        const dashboardItem = this.props.dashboardItems.find(\n            item => item.id === newItem.i\n        );\n\n        // call resize on the item component if it's a plugin type\n        if (dashboardItem && isVisualizationType(dashboardItem)) {\n            pluginResize(dashboardItem);\n        }\n    };\n\n    onRemoveItemWrapper = id => () => this.onRemoveItem(id);\n\n    adjustHeightForExpanded = dashboardItem => {\n        const expandedItem = this.state.expandedItems[dashboardItem.id];\n\n        if (expandedItem && expandedItem === true) {\n            return Object.assign({}, dashboardItem, {\n                h: dashboardItem.h + EXPANDED_HEIGHT,\n            });\n        }\n\n        return dashboardItem;\n    };\n\n    getItemComponent = item => {\n        const itemClassNames = [\n            item.type,\n            this.props.edit ? 'edit' : 'view',\n        ].join(' ');\n\n        return (\n            <ProgressiveLoadingContainer\n                key={item.i}\n                className={itemClassNames}\n            >\n                <Item\n                    item={item}\n                    editMode={this.props.edit}\n                    onToggleItemExpanded={this.onToggleItemExpanded}\n                />\n            </ProgressiveLoadingContainer>\n        );\n    };\n\n    getItemComponents = items => items.map(item => this.getItemComponent(item));\n\n    render() {\n        const { edit, isLoading, dashboardItems } = this.props;\n\n        if (!isLoading && !dashboardItems.length) {\n            return (\n                <NoContentMessage\n                    text={i18n.t('There are no items on this dashboard')}\n                />\n            );\n        }\n\n        const items = edit\n            ? dashboardItems\n            : dashboardItems.map(this.adjustHeightForExpanded);\n\n        return (\n            <div className=\"grid-wrapper\">\n                {isLoading ? (\n                    <Layer translucent>\n                        <CenteredContent>\n                            <CircularLoader />\n                        </CenteredContent>\n                    </Layer>\n                ) : null}\n                <ReactGridLayout\n                    onLayoutChange={this.onLayoutChange}\n                    onResizeStop={this.onResizeStop}\n                    className=\"layout\"\n                    layout={items}\n                    margin={MARGIN}\n                    cols={getGridColumns()}\n                    rowHeight={GRID_ROW_HEIGHT}\n                    width={window.innerWidth}\n                    compactType={GRID_COMPACT_TYPE}\n                    isDraggable={edit}\n                    isResizable={edit}\n                    draggableCancel=\"input,textarea\"\n                >\n                    {this.getItemComponents(items)}\n                </ReactGridLayout>\n            </div>\n        );\n    }\n}\n\nItemGrid.propTypes = {\n    acRemoveDashboardItem: PropTypes.func,\n    acUpdateDashboardLayout: PropTypes.func,\n    dashboardItems: PropTypes.array,\n    edit: PropTypes.bool,\n    isLoading: PropTypes.bool,\n};\n\nItemGrid.defaultProps = {\n    dashboardItems: [],\n};\n\n// Container\n\nconst mapStateToProps = (state, ownProps) => {\n    const selectedDashboard = ownProps.edit\n        ? sGetEditDashboardRoot(state)\n        : sGetDashboardById(state, sGetSelectedId(state));\n\n    const dashboardItems = ownProps.edit\n        ? sGetEditDashboardItems(state)\n        : sGetDashboardItems(state);\n\n    return {\n        isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n        dashboardItems,\n    };\n};\n\nconst mapDispatchToProps = {\n    acUpdateDashboardLayout,\n    acRemoveDashboardItem,\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const validItems = orArray(stateProps.dashboardItems).filter(hasShape);\n\n    return {\n        ...dispatchProps,\n        edit: ownProps.edit,\n        isLoading: stateProps.isLoading,\n        dashboardItems: validItems,\n        onItemResize,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n    mergeProps\n)(ItemGrid);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport i18n from '@dhis2/d2-i18n';\n\nimport { colors } from '@dhis2/ui';\n\nconst styles = {\n    badgeContainer: {\n        margin: '2px',\n        padding: '0 16px',\n        borderRadius: '4px',\n        color: colors.white,\n        backgroundColor: '#212934',\n        height: 36,\n        display: 'flex',\n        alignItems: 'center',\n    },\n    badge: {\n        fontSize: '13px',\n        cursor: 'pointer',\n        whiteSpace: 'nowrap',\n    },\n    badgeRemove: {\n        fontSize: '12px',\n        textDecoration: 'underline',\n        marginLeft: '24px',\n        cursor: 'pointer',\n    },\n};\n\nclass FilterBadge extends Component {\n    onClick = id => () => this.props.onClick(id);\n    onRemove = id => () => this.props.onRemove(id);\n\n    render() {\n        const { data } = this.props;\n\n        return (\n            <div style={styles.badgeContainer}>\n                <span style={styles.badge} onClick={this.onClick(data.id)}>\n                    {`${data.name}: ${\n                        data.values.length > 1\n                            ? i18n.t('{{count}} selected', {\n                                  count: data.values.length,\n                              })\n                            : data.values[0].name\n                    }`}\n                </span>\n                <span\n                    style={styles.badgeRemove}\n                    onClick={this.onRemove(data.id)}\n                >\n                    {i18n.t('Remove')}\n                </span>\n            </div>\n        );\n    }\n}\n\nFilterBadge.propTypes = {\n    data: PropTypes.object.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onRemove: PropTypes.func.isRequired,\n};\n\nFilterBadge.defaultProps = {\n    onClick: Function.prototype,\n    onRemove: Function.prototype,\n};\n\nexport default FilterBadge;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { createSelector } from 'reselect';\n\nimport { sGetDimensions } from '../../reducers/dimensions';\nimport { sGetItemFiltersRoot } from '../../reducers/itemFilters';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { getTopOffset } from '../ControlBar/controlBarDimensions';\nimport { acRemoveItemFilter } from '../../actions/itemFilters';\nimport { acRemoveEditItemFilter } from '../../actions/editItemFilters';\nimport { acSetActiveModalDimension } from '../../actions/activeModalDimension';\n\nimport FilterBadge from './FilterBadge';\n\nimport classes from './styles/FilterBar.module.css';\n\nexport class FilterBar extends Component {\n    onBadgeRemove = id => {\n        this.props.removeItemFilter(id);\n        this.props.removeEditItemFilter(id);\n    };\n\n    onBadgeClick = id => {\n        this.props.setActiveModalDimension({\n            id,\n            name: this.props.filters.find(item => item.id === id).name,\n        });\n    };\n\n    render() {\n        const { filters, userRows } = this.props;\n        const top = getTopOffset(userRows) + 10;\n\n        return filters.length ? (\n            <div className={classes.bar} style={{ top }}>\n                {filters.map(filter => (\n                    <FilterBadge\n                        key={filter.id}\n                        data={filter}\n                        onClick={this.onBadgeClick}\n                        onRemove={this.onBadgeRemove}\n                    />\n                ))}\n            </div>\n        ) : null;\n    }\n}\n\nFilterBar.propTypes = {\n    filters: PropTypes.array.isRequired,\n    removeEditItemFilter: PropTypes.func.isRequired,\n    removeItemFilter: PropTypes.func.isRequired,\n    setActiveModalDimension: PropTypes.func,\n    userRows: PropTypes.number,\n};\n\nFilterBar.defaultProps = {\n    filters: [],\n    removeItemFIlter: Function.prototype,\n    removeEditItemFilter: Function.prototype,\n};\n\n// simplify the filters structure to:\n// [{ id: 'pe', name: 'Period', values: [{ id: 2019: name: '2019' }, {id: 'LAST_MONTH', name: 'Last month' }]}, ...]\nconst filtersSelector = createSelector(\n    [sGetItemFiltersRoot, sGetDimensions],\n    (filters, dimensions) =>\n        Object.keys(filters).reduce((arr, id) => {\n            arr.push({\n                id: id,\n                name: dimensions.find(dimension => dimension.id === id).name,\n                values: filters[id].map(value => ({\n                    id: value.id,\n                    name: value.displayName || value.name,\n                })),\n            });\n\n            return arr;\n        }, [])\n);\n\nconst mapStateToProps = state => ({\n    filters: filtersSelector(state),\n    userRows: sGetControlBarUserRows(state),\n});\n\nexport default connect(\n    mapStateToProps,\n    {\n        setActiveModalDimension: acSetActiveModalDimension,\n        removeItemFilter: acRemoveItemFilter,\n        removeEditItemFilter: acRemoveEditItemFilter,\n    }\n)(FilterBar);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TitleBar from '../TitleBar/TitleBar';\nimport ItemGrid from '../ItemGrid/ItemGrid';\nimport FilterBar from '../FilterBar/FilterBar';\n\nexport const DashboardContent = props => (\n    <>\n        <TitleBar edit={props.editMode} />\n        <FilterBar />\n        <ItemGrid edit={props.editMode} />\n    </>\n);\n\nDashboardContent.propTypes = {\n    editMode: PropTypes.bool,\n};\n\nexport default DashboardContent;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport isEmpty from 'lodash/isEmpty';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\n\nimport {\n    sGetAllDashboards,\n    sDashboardsIsFetching,\n} from '../../reducers/dashboards';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport DashboardsBar from '../ControlBar/DashboardsBar';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport DashboardContent from './DashboardContent';\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nexport const Content = ({ hasDashboardContent, dashboardsIsEmpty }) => {\n    const msg = dashboardsIsEmpty\n        ? i18n.t(\n              'No dashboards found. Use the + button to create a new dashboard.'\n          )\n        : i18n.t('Requested dashboard not found');\n\n    return hasDashboardContent ? (\n        <DashboardContent editMode={false} />\n    ) : (\n        <NoContentMessage text={msg} />\n    );\n};\n\nContent.propTypes = {\n    dashboardsIsEmpty: PropTypes.bool,\n    hasDashboardContent: PropTypes.bool,\n};\n\nexport const ViewDashboard = ({ id, dashboardsIsEmpty, dashboardsLoaded }) => {\n    const hasDashboardContent = id && !dashboardsIsEmpty;\n    const contentNotReady = !dashboardsLoaded || id === null;\n\n    return (\n        <>\n            <DashboardsBar />\n            <DashboardVerticalOffset />\n            <div className=\"dashboard-wrapper\">\n                {contentNotReady ? null : (\n                    <Content\n                        hasDashboardContent={hasDashboardContent}\n                        dashboardsIsEmpty={dashboardsIsEmpty}\n                    />\n                )}\n            </div>\n        </>\n    );\n};\n\nViewDashboard.propTypes = {\n    dashboardsIsEmpty: PropTypes.bool,\n    dashboardsLoaded: PropTypes.bool,\n    id: PropTypes.string,\n};\n\nconst mapStateToProps = state => {\n    const dashboards = sGetAllDashboards(state);\n\n    return {\n        id: sGetSelectedId(state),\n        dashboardsIsEmpty: isEmpty(dashboards),\n        dashboardsLoaded: !sDashboardsIsFetching(state),\n    };\n};\n\nexport default connect(mapStateToProps)(ViewDashboard);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport {\n    Button,\n    Modal,\n    ModalContent,\n    ModalActions,\n    ButtonStrip,\n    ModalTitle,\n} from '@dhis2/ui';\n\nimport classes from './styles/ConfirmDeleteDialog.module.css';\n\nexport const ConfirmDeleteDialog = ({\n    dashboardName,\n    onDeleteConfirmed,\n    onContinueEditing,\n    open,\n}) => {\n    const actions = [\n        <Button key=\"cancel\" secondary onClick={onContinueEditing}>\n            {i18n.t('Cancel')}\n        </Button>,\n        <Button key=\"delete\" destructive onClick={onDeleteConfirmed}>\n            {i18n.t('Delete')}\n        </Button>,\n    ];\n\n    return (\n        open && (\n            <Modal onClose={onContinueEditing} small position=\"middle\">\n                <ModalTitle>{i18n.t('Delete dashboard')}</ModalTitle>\n                <ModalContent>\n                    <span className={classes.content}>\n                        {i18n.t(\n                            'Deleting dashboard \"{{ dashboardName }}\" will remove it for all users. This action cannot be undone. Are you sure you want to permanently delete this dashboard?',\n                            { dashboardName }\n                        )}\n                    </span>\n                </ModalContent>\n                <ModalActions>\n                    <ButtonStrip>{actions}</ButtonStrip>\n                </ModalActions>\n            </Modal>\n        )\n    );\n};\n\nConfirmDeleteDialog.propTypes = {\n    dashboardName: PropTypes.string,\n    open: PropTypes.bool,\n    onContinueEditing: PropTypes.func,\n    onDeleteConfirmed: PropTypes.func,\n};\n\nexport default ConfirmDeleteDialog;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport ControlBar from './ControlBar';\nimport TranslationDialog from '@dhis2/d2-ui-translation-dialog';\nimport { Button } from '@dhis2/ui';\n\nimport ConfirmDeleteDialog from './ConfirmDeleteDialog';\nimport {\n    tSaveDashboard,\n    acClearEditDashboard,\n} from '../../actions/editDashboard';\nimport {\n    tDeleteDashboard,\n    acSetDashboardDisplayName,\n} from '../../actions/dashboards';\nimport {\n    sGetEditDashboardRoot,\n    sGetIsNewDashboard,\n} from '../../reducers/editDashboard';\nimport {\n    CONTROL_BAR_ROW_HEIGHT,\n    MIN_ROW_COUNT,\n    getControlBarHeight,\n} from './controlBarDimensions';\nimport { apiFetchDashboard } from '../../api/dashboards';\n\nimport classes from './styles/DashboardsBar.module.css';\n\nconst buttonBarStyle = {\n    height: CONTROL_BAR_ROW_HEIGHT,\n    paddingTop: '15px',\n    marginLeft: '15px',\n    marginRight: '15px',\n};\n\nexport class EditBar extends Component {\n    state = {\n        translationDialogIsOpen: false,\n        dashboardModel: undefined,\n        confirmDeleteDialogOpen: false,\n        redirectUrl: undefined,\n    };\n\n    onConfirmDelete = () => {\n        this.setState({ confirmDeleteDialogOpen: true });\n    };\n\n    onSave = () => {\n        this.props.onSave().then(newId => {\n            this.setState({ redirectUrl: `/${newId}` });\n        });\n    };\n\n    onDiscard = () => {\n        this.props.onDiscardChanges();\n        const redirectUrl = this.props.dashboardId\n            ? `/${this.props.dashboardId}`\n            : '/';\n        this.setState({ redirectUrl });\n    };\n\n    onContinueEditing = () => {\n        this.setState({ confirmDeleteDialogOpen: false });\n    };\n\n    onDeleteConfirmed = () => {\n        this.setState({ confirmDeleteDialogOpen: false });\n        this.props.onDelete(this.props.dashboardId).then(() => {\n            this.setState({ redirectUrl: '/' });\n        });\n    };\n\n    onTranslationsSaved = async translations => {\n        if (translations && translations.length) {\n            const dbLocale = await this.context.d2.currentUser.userSettings.get(\n                'keyDbLocale'\n            );\n\n            const translation = translations.find(\n                t => t.locale === dbLocale && t.property === 'NAME'\n            );\n\n            if (translation && translation.value) {\n                this.props.onTranslate(\n                    this.props.dashboardId,\n                    translation.value\n                );\n            }\n        }\n    };\n\n    fetchDashboardModel = () => {\n        if (this.props.dashboardId && !this.state.dashboardModel) {\n            apiFetchDashboard(this.props.dashboardId).then(dashboardModel =>\n                this.setState({ dashboardModel })\n            );\n        }\n    };\n\n    componentDidMount() {\n        this.fetchDashboardModel();\n    }\n\n    componentDidUpdate() {\n        this.fetchDashboardModel();\n    }\n\n    toggleTranslationDialog = () => {\n        this.setState({\n            translationDialogIsOpen: !this.state.translationDialogIsOpen,\n        });\n    };\n\n    confirmDeleteDialog = () =>\n        this.props.deleteAccess && this.props.dashboardId ? (\n            <ConfirmDeleteDialog\n                dashboardName={this.props.dashboardName}\n                onDeleteConfirmed={this.onDeleteConfirmed}\n                onContinueEditing={this.onContinueEditing}\n                open={this.state.confirmDeleteDialogOpen}\n            />\n        ) : null;\n\n    translationDialog = () =>\n        this.state.dashboardModel && this.state.dashboardModel.id ? (\n            <TranslationDialog\n                className=\"translation-dialog\"\n                d2={this.context.d2}\n                open={this.state.translationDialogIsOpen}\n                onRequestClose={this.toggleTranslationDialog}\n                objectToTranslate={this.state.dashboardModel}\n                fieldsToTranslate={['name', 'description']}\n                // TODO handle messages in snackbar\n                onTranslationSaved={this.onTranslationsSaved}\n                onTranslationError={err =>\n                    console.log('translation update error', err)\n                }\n            />\n        ) : null;\n\n    render() {\n        if (this.state.redirectUrl) {\n            return <Redirect to={this.state.redirectUrl} />;\n        }\n\n        const { dashboardId, deleteAccess, updateAccess } = this.props;\n        const controlBarHeight = getControlBarHeight(MIN_ROW_COUNT);\n\n        const discardBtnText = updateAccess\n            ? i18n.t('Exit without saving')\n            : i18n.t('Go to dashboards');\n\n        return (\n            <>\n                <ControlBar height={controlBarHeight} editMode={true}>\n                    <div style={buttonBarStyle}>\n                        {updateAccess ? (\n                            <div className={classes.leftControls}>\n                                <span style={{ marginRight: '15px' }}>\n                                    <Button primary onClick={this.onSave}>\n                                        {i18n.t('Save changes')}\n                                    </Button>\n                                </span>\n\n                                {dashboardId ? (\n                                    <span style={{ marginRight: '15px' }}>\n                                        <Button\n                                            onClick={\n                                                this.toggleTranslationDialog\n                                            }\n                                        >\n                                            {i18n.t('Translate')}\n                                        </Button>\n                                    </span>\n                                ) : null}\n                                {dashboardId && deleteAccess ? (\n                                    <Button onClick={this.onConfirmDelete}>\n                                        {i18n.t('Delete')}\n                                    </Button>\n                                ) : null}\n                            </div>\n                        ) : null}\n\n                        <div className={classes.rightControls}>\n                            <Button secondary onClick={this.onDiscard}>\n                                {discardBtnText}\n                            </Button>\n                        </div>\n                    </div>\n                </ControlBar>\n                {this.translationDialog()}\n                {this.confirmDeleteDialog()}\n            </>\n        );\n    }\n}\n\nEditBar.propTypes = {\n    dashboardId: PropTypes.string,\n    dashboardName: PropTypes.string,\n    deleteAccess: PropTypes.bool,\n    updateAccess: PropTypes.bool,\n    onDelete: PropTypes.func,\n    onDiscardChanges: PropTypes.func,\n    onSave: PropTypes.func,\n    onTranslate: PropTypes.func,\n};\n\nEditBar.contextTypes = {\n    d2: PropTypes.object,\n};\n\nconst mapStateToProps = state => {\n    const dashboard = sGetEditDashboardRoot(state);\n\n    let deleteAccess;\n    let updateAccess;\n    if (sGetIsNewDashboard(state)) {\n        deleteAccess = true;\n        updateAccess = true;\n    } else {\n        updateAccess = dashboard.access ? dashboard.access.update : false;\n        deleteAccess = dashboard.access ? dashboard.access.delete : false;\n    }\n\n    return {\n        dashboardId: dashboard.id,\n        dashboardName: dashboard.name,\n        deleteAccess,\n        updateAccess,\n    };\n};\n\nconst mapDispatchToProps = dispatch => ({\n    onSave: () => dispatch(tSaveDashboard()).then(id => id),\n    onDelete: id => dispatch(tDeleteDashboard(id)),\n    onDiscardChanges: () => dispatch(acClearEditDashboard()),\n    onTranslate: (id, value) => dispatch(acSetDashboardDisplayName(id, value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditBar);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\n\nimport { acSetEditDashboard } from '../../actions/editDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n    sDashboardsIsFetching,\n} from '../../reducers/dashboards';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport DashboardContent from './DashboardContent';\nimport EditBar from '../ControlBar/EditBar';\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nexport const Content = ({ updateAccess }) => {\n    return updateAccess ? (\n        <DashboardContent editMode={true} />\n    ) : (\n        <NoContentMessage text={i18n.t('No access')} />\n    );\n};\n\nContent.propTypes = {\n    updateAccess: PropTypes.bool,\n};\nexport class EditDashboard extends Component {\n    state = {\n        initialized: false,\n    };\n\n    initEditDashboard = () => {\n        if (this.props.dashboard) {\n            this.setState({ initialized: true });\n            this.props.setEditDashboard(this.props.dashboard, this.props.items);\n        }\n    };\n\n    componentDidMount() {\n        this.initEditDashboard();\n    }\n\n    componentDidUpdate() {\n        if (!this.state.initialized) {\n            this.initEditDashboard();\n        }\n    }\n\n    getDashboardContent = () => {\n        const contentNotReady =\n            !this.props.dashboardsLoaded || this.props.id === null;\n\n        return (\n            <div className=\"dashboard-wrapper\">\n                {contentNotReady ? null : (\n                    <Content updateAccess={this.props.updateAccess} />\n                )}\n            </div>\n        );\n    };\n\n    render() {\n        return (\n            <>\n                <EditBar />\n                <DashboardVerticalOffset editMode={true} />\n                {this.getDashboardContent()}\n            </>\n        );\n    }\n}\n\nEditDashboard.propTypes = {\n    dashboard: PropTypes.object,\n    dashboardsLoaded: PropTypes.bool,\n    id: PropTypes.string,\n    items: PropTypes.array,\n    setEditDashboard: PropTypes.func,\n    updateAccess: PropTypes.bool,\n};\n\nconst mapStateToProps = state => {\n    const id = sGetSelectedId(state);\n    const dashboard = id ? sGetDashboardById(state, id) : null;\n\n    const updateAccess =\n        dashboard && dashboard.access ? dashboard.access.update : false;\n\n    return {\n        dashboard,\n        id,\n        updateAccess,\n        items: sGetDashboardItems(state),\n        dashboardsLoaded: !sDashboardsIsFetching(state),\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        setEditDashboard: acSetEditDashboard,\n    }\n)(EditDashboard);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { acSetEditNewDashboard } from '../../actions/editDashboard';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport EditBar from '../ControlBar/EditBar';\nimport DashboardContent from './DashboardContent';\n\nclass NewDashboard extends Component {\n    componentDidMount() {\n        this.props.setNewDashboard();\n    }\n\n    render() {\n        return (\n            <>\n                <EditBar />\n                <DashboardVerticalOffset editMode={true} />\n                <div className=\"dashboard-wrapper\">\n                    <DashboardContent editMode={true} />\n                </div>\n            </>\n        );\n    }\n}\n\nNewDashboard.propTypes = {\n    setNewDashboard: PropTypes.func,\n};\n\nexport default connect(\n    null,\n    {\n        setNewDashboard: acSetEditNewDashboard,\n    }\n)(NewDashboard);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { tSelectDashboard } from '../../actions/dashboards';\nimport { sDashboardsIsFetching } from '../../reducers/dashboards';\nimport { EDIT, NEW } from './dashboardModes';\nimport ViewDashboard from './ViewDashboard';\nimport EditDashboard from './EditDashboard';\nimport NewDashboard from './NewDashboard';\n\nclass Dashboard extends Component {\n    setDashboard = () => {\n        if (this.props.dashboardsLoaded) {\n            const id = this.props.match.params.dashboardId || null;\n\n            this.props.selectDashboard(id);\n\n            this.scrollToTop();\n        }\n    };\n\n    scrollToTop = () => {\n        window.scrollTo(0, 0);\n    };\n\n    componentDidMount() {\n        this.setDashboard();\n    }\n\n    componentDidUpdate() {\n        this.setDashboard();\n    }\n\n    render() {\n        switch (this.props.mode) {\n            case EDIT:\n                return <EditDashboard />;\n            case NEW:\n                return <NewDashboard />;\n            default:\n                return <ViewDashboard />;\n        }\n    }\n}\n\nDashboard.propTypes = {\n    dashboardsLoaded: PropTypes.bool,\n    match: PropTypes.object,\n    mode: PropTypes.string,\n    selectDashboard: PropTypes.func,\n};\n\nconst mapStateToProps = state => {\n    return { dashboardsLoaded: !sDashboardsIsFetching(state) };\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        selectDashboard: tSelectDashboard,\n    }\n)(Dashboard);\n","export const EDIT = 'edit';\nexport const NEW = 'new';\nexport const VIEW = 'view';\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { HeaderBar, CssVariables } from '@dhis2/ui';\n\nimport { EDIT, VIEW, NEW } from './Dashboard/dashboardModes';\nimport { acReceivedUser } from '../actions/user';\nimport { tFetchDashboards } from '../actions/dashboards';\nimport { tSetControlBarRows } from '../actions/controlBar';\nimport { tSetDimensions } from '../actions/dimensions';\nimport Dashboard from './Dashboard/Dashboard';\nimport SnackbarMessage from './SnackbarMessage/SnackbarMessage';\n\nimport 'typeface-roboto';\nimport './App.css';\n\nexport class App extends Component {\n    componentDidMount() {\n        this.props.setCurrentUser(this.props.d2.currentUser);\n        this.props.fetchDashboards();\n        this.props.setControlBarRows();\n        this.props.setDimensions(this.props.d2);\n    }\n\n    getChildContext() {\n        return { baseUrl: this.props.baseUrl, i18n, d2: this.props.d2 };\n    }\n\n    render() {\n        return (\n            <>\n                <CssVariables colors spacers />\n                <div className=\"app-wrapper\">\n                    <div className=\"dashboard-header-bar\">\n                        <HeaderBar appName={i18n.t('Dashboard')} />\n                    </div>\n                    <Router>\n                        <Switch>\n                            <Route\n                                exact\n                                path=\"/\"\n                                render={props => (\n                                    <Dashboard {...props} mode={VIEW} />\n                                )}\n                            />\n                            <Route\n                                exact\n                                path=\"/new\"\n                                render={props => (\n                                    <Dashboard {...props} mode={NEW} />\n                                )}\n                            />\n                            <Route\n                                exact\n                                path=\"/:dashboardId\"\n                                render={props => (\n                                    <Dashboard {...props} mode={VIEW} />\n                                )}\n                            />\n                            <Route\n                                exact\n                                path=\"/:dashboardId/edit\"\n                                render={props => (\n                                    <Dashboard {...props} mode={EDIT} />\n                                )}\n                            />\n                        </Switch>\n                    </Router>\n                    <SnackbarMessage />\n                </div>\n            </>\n        );\n    }\n}\n\nApp.propTypes = {\n    fetchDashboards: PropTypes.func.isRequired,\n    setControlBarRows: PropTypes.func.isRequired,\n    setCurrentUser: PropTypes.func.isRequired,\n    setDimensions: PropTypes.func.isRequired,\n    baseUrl: PropTypes.string,\n    d2: PropTypes.object,\n};\n\nApp.childContextTypes = {\n    baseUrl: PropTypes.string,\n    i18n: PropTypes.object,\n    d2: PropTypes.object,\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setCurrentUser: currentUser => dispatch(acReceivedUser(currentUser)),\n        fetchDashboards: () => dispatch(tFetchDashboards()),\n        setControlBarRows: () => dispatch(tSetControlBarRows()),\n        setDimensions: d2 => dispatch(tSetDimensions(d2)),\n    };\n};\n\nexport default connect(null, mapDispatchToProps)(App);\n","import { RECEIVED_USER } from '../reducers/user';\n\nexport const acReceivedUser = value => ({\n    type: RECEIVED_USER,\n    value,\n});\n","//------------------------------------------------------------------------------\n// <auto-generated>\n    // This code was generated by d2-i18n-generate.\n    //\n    // Changes to this file may cause incorrect behavior and will be lost if\n    // the code is regenerated.\n    // </auto-generated>\n//------------------------------------------------------------------------------\nimport i18n from '@dhis2/d2-i18n';\nimport moment from 'moment';\nimport 'moment/locale/ar';\nimport 'moment/locale/es';\nimport 'moment/locale/fr';\nimport 'moment/locale/lo';\nimport 'moment/locale/nb';\nimport 'moment/locale/pt';\nimport 'moment/locale/ru';\nimport 'moment/locale/sv';\nimport 'moment/locale/tg';\nimport 'moment/locale/uk';\nimport 'moment/locale/ur';\nimport 'moment/locale/vi';\nimport 'moment/locale/zh-cn';\n\nimport arTranslations from './ar/translations.json';\nimport ar_IQTranslations from './ar_IQ/translations.json';\nimport daTranslations from './da/translations.json';\nimport enTranslations from './en/translations.json';\nimport esTranslations from './es/translations.json';\nimport frTranslations from './fr/translations.json';\nimport idTranslations from './id/translations.json';\nimport kmTranslations from './km/translations.json';\nimport loTranslations from './lo/translations.json';\nimport myTranslations from './my/translations.json';\nimport nbTranslations from './nb/translations.json';\nimport prsTranslations from './prs/translations.json';\nimport psTranslations from './ps/translations.json';\nimport ptTranslations from './pt/translations.json';\nimport pt_BRTranslations from './pt_BR/translations.json';\nimport ruTranslations from './ru/translations.json';\nimport svTranslations from './sv/translations.json';\nimport tetTranslations from './tet/translations.json';\nimport tgTranslations from './tg/translations.json';\nimport ukTranslations from './uk/translations.json';\nimport urTranslations from './ur/translations.json';\nimport viTranslations from './vi/translations.json';\nimport zhTranslations from './zh/translations.json';\nimport zh_CNTranslations from './zh_CN/translations.json';\n\nconst namespace = 'dashboards-app';\nmoment.locale('en');\n\ni18n.addResources('ar', namespace, arTranslations);\ni18n.addResources('ar_IQ', namespace, ar_IQTranslations);\ni18n.addResources('da', namespace, daTranslations);\ni18n.addResources('en', namespace, enTranslations);\ni18n.addResources('es', namespace, esTranslations);\ni18n.addResources('fr', namespace, frTranslations);\ni18n.addResources('id', namespace, idTranslations);\ni18n.addResources('km', namespace, kmTranslations);\ni18n.addResources('lo', namespace, loTranslations);\ni18n.addResources('my', namespace, myTranslations);\ni18n.addResources('nb', namespace, nbTranslations);\ni18n.addResources('prs', namespace, prsTranslations);\ni18n.addResources('ps', namespace, psTranslations);\ni18n.addResources('pt', namespace, ptTranslations);\ni18n.addResources('pt_BR', namespace, pt_BRTranslations);\ni18n.addResources('ru', namespace, ruTranslations);\ni18n.addResources('sv', namespace, svTranslations);\ni18n.addResources('tet', namespace, tetTranslations);\ni18n.addResources('tg', namespace, tgTranslations);\ni18n.addResources('uk', namespace, ukTranslations);\ni18n.addResources('ur', namespace, urTranslations);\ni18n.addResources('vi', namespace, viTranslations);\ni18n.addResources('zh', namespace, zhTranslations);\ni18n.addResources('zh_CN', namespace, zh_CNTranslations);\n\ni18n.setDefaultNamespace(namespace);\ni18n.changeLanguage('en');\n\nexport default i18n;\n","/** @module reducers/selected */\nimport { validateReducer } from '../modules/util';\n\nexport const SET_STYLE = 'SET_STYLE';\n\nexport const DEFAULT_STATE_STYLE = 'LIST';\n\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\nconst style = (state = DEFAULT_STATE_STYLE, action) => {\n    switch (action.type) {\n        case SET_STYLE:\n            return validateReducer(action.value, DEFAULT_STATE_STYLE);\n        default:\n            return state;\n    }\n};\n\nexport default style;\n\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\nexport const sGetStyleRoot = state => state.style;\n","import { combineReducers } from 'redux';\nimport arraySort from 'd2-utilizr/lib/arraySort';\n\nimport dashboards, { sGetDashboardsRoot } from './dashboards';\nimport selected from './selected';\nimport dashboardsFilter, {\n    ownerData,\n    sGetFilterName,\n    sGetFilterOrder,\n    sGetFilterOwner,\n} from './dashboardsFilter';\nimport controlBar from './controlBar';\nimport visualizations from './visualizations';\nimport editDashboard from './editDashboard';\nimport messages from './messages';\nimport user from './user';\nimport snackbar from './snackbar';\nimport itemFilters from './itemFilters';\nimport editItemFilters from './editItemFilters';\nimport style from './style';\nimport dimensions from './dimensions';\nimport settings from './settings';\nimport activeModalDimension from './activeModalDimension';\n\nconst USER = 'system';\n\n// Reducers\n\nexport default combineReducers({\n    dashboards,\n    selected,\n    dashboardsFilter,\n    controlBar,\n    visualizations,\n    messages,\n    user,\n    editDashboard,\n    itemFilters,\n    editItemFilters,\n    style,\n    snackbar,\n    dimensions,\n    settings,\n    activeModalDimension,\n});\n\n// Map constants to data\nconst mapConstToData = {\n    NAME: 'name',\n    ITEMS: 'numberOfItems',\n    CREATED: 'created',\n    OWNER: 'owner',\n};\n\n// Selectors\n\n// Filter dashboards by name\nexport const sFilterDashboardsByName = (dashboards, filter) =>\n    dashboards.filter(d =>\n        d.displayName.toLowerCase().includes(filter.toLowerCase())\n    );\n\n// Filter dashboards by owner, TODO FIXME\nexport const sFilterDashboardsByOwner = (dashboards, filter) => {\n    const ME = ownerData[1]; // TODO\n    const OTHERS = ownerData[2]; // TODO\n\n    switch (filter) {\n        case ME:\n            return dashboards.filter(d => d.owner === USER);\n        case OTHERS:\n            return dashboards.filter(d => d.owner !== USER);\n        default:\n            return dashboards;\n    }\n};\n\n// Filter dashboards by order\nexport const sFilterDashboardsByOrder = (dashboards, filter) => {\n    const filterValues = filter.split(':');\n\n    const key = filterValues[0];\n    const direction = filterValues[1];\n\n    return arraySort(dashboards, direction, mapConstToData[key]);\n};\n\n// Selectors dependency level 2\n\n// Get filtered dashboards\nexport const sGetFilteredDashboards = state => {\n    const dashboards = sGetDashboardsRoot(state);\n\n    const nameFilter = sGetFilterName(state);\n    const ownerFilter = sGetFilterOwner(state);\n    const orderFilter = sGetFilterOrder(state);\n\n    return sFilterDashboardsByOrder(\n        sFilterDashboardsByName(\n            sFilterDashboardsByOwner(dashboards, ownerFilter),\n            nameFilter\n        ),\n        orderFilter\n    );\n};\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport reducer from './reducers';\n\nconst configureStore = () => {\n    const middleware = [thunk];\n\n    // Enable Redux devtools if extension is installed instead of redux-logger\n    const composeEnhancers =\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n    if (\n        !window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ &&\n        process.env.NODE_ENV !== 'production'\n    ) {\n        middleware.push(createLogger());\n    }\n\n    return createStore(\n        reducer,\n        composeEnhancers(applyMiddleware(...middleware))\n    );\n};\n\nexport default configureStore;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport { init as d2Init, config, getManifest, getUserSettings } from 'd2';\nimport dhis2theme from '@dhis2/d2-ui-core/theme/mui3.theme';\n\nimport { Provider as RuntimeProvider } from '@dhis2/app-runtime';\nimport { CssReset } from '@dhis2/ui';\n\nimport App from './components/App';\nimport './index.css';\nimport i18n from './locales';\nimport configureStore from './configureStore';\n\nconst muiTheme = () => createMuiTheme(dhis2theme);\n\nconst configI18n = userSettings => {\n    const uiLocale = userSettings.keyUiLocale;\n\n    if (uiLocale && uiLocale !== 'en') {\n        config.i18n.sources.add(`./i18n/i18n_module_${uiLocale}.properties`);\n    }\n\n    config.i18n.sources.add('./i18n/i18n_module_en.properties');\n    i18n.changeLanguage(uiLocale);\n};\n\nconst init = async () => {\n    const manifest = await getManifest('./manifest.webapp');\n\n    // log app info\n    console.info(\n        `Dashboards app, v${manifest.version}, ${manifest.manifest_generated_at}`\n    );\n\n    const isProd = process.env.NODE_ENV === 'production';\n\n    if (\n        !isProd &&\n        (!process.env.REACT_APP_DHIS2_BASE_URL ||\n            !process.env.REACT_APP_DHIS2_AUTHORIZATION)\n    ) {\n        throw new Error(\n            'Missing env variables REACT_APP_DHIS2_BASE_URL and REACT_APP_DHIS2_AUTHORIZATION'\n        );\n    }\n\n    // api config\n    const baseUrl = isProd\n        ? manifest.activities.dhis.href\n        : process.env.REACT_APP_DHIS2_BASE_URL;\n    const authorization = process.env.REACT_APP_DHIS2_AUTHORIZATION;\n\n    config.baseUrl = `${baseUrl}/api/${manifest.dhis2.apiVersion}`;\n    config.headers = isProd ? null : { Authorization: authorization };\n    config.schemas = [\n        'chart',\n        'map',\n        'report',\n        'reportTable',\n        'eventChart',\n        'eventReport',\n        'dashboard',\n        'organisationUnit',\n        'userGroup',\n    ];\n\n    getUserSettings()\n        .then(configI18n)\n        .then(() => d2Init(config))\n        .then(initializedD2 => {\n            ReactDOM.render(\n                <RuntimeProvider\n                    config={{\n                        baseUrl: baseUrl,\n                        apiVersion: manifest.dhis2.apiVersion,\n                    }}\n                >\n                    <CssReset />\n                    <Provider store={configureStore()}>\n                        <MuiThemeProvider theme={muiTheme()}>\n                            <App baseUrl={baseUrl} d2={initializedD2} />\n                        </MuiThemeProvider>\n                    </Provider>\n                </RuntimeProvider>,\n                document.getElementById('root')\n            );\n        });\n};\n\ninit();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuItem\":\"ContentMenuItem_menuItem__2DIcB\",\"launchLink\":\"ContentMenuItem_launchLink__MRANR\",\"label\":\"ContentMenuItem_label__2pIfq\",\"buttonInsert\":\"ContentMenuItem_buttonInsert__1GlZy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemWrap\":\"ItemHeader_itemWrap__3gJiQ\",\"itemHeaderWrap\":\"ItemHeader_itemHeaderWrap__xEKwZ\",\"itemTitle\":\"ItemHeader_itemTitle__3LmXp\",\"itemActionsWrap\":\"ItemHeader_itemActionsWrap__1U5Ex\"};","import isObject from 'lodash/isObject';\n\n// validation\nexport function orNull(param) {\n    return param === undefined ? null : param;\n}\n\nexport function orArray(param) {\n    return Array.isArray(param) ? param : [];\n}\n\nexport function orObject(param) {\n    return isObject(param) ? param : {};\n}\n\n// array\nexport function arrayGetById(array, id) {\n    return array.find(item => item.id === id);\n}\n\n// object\nexport function arrayToIdMap(array) {\n    return array.reduce((obj, item) => {\n        obj[item.id] = item;\n        return obj;\n    }, {});\n}\n\n// date\nexport function getDate() {\n    const y = Math.floor(Math.random() * 3) + 2015;\n    const M = Math.floor(Math.random() * 12) + 1;\n    const d = Math.floor(Math.random() * 28) + 1;\n    // const h = Math.floor(Math.random() * 23) + 1;\n    // const m = Math.floor(Math.random() * 59) + 1;\n    // const s = Math.floor(Math.random() * 59) + 1;\n\n    return new Date(`${y}-${M}-${d}`)\n        .toJSON()\n        .replace('T', ' ')\n        .substr(0, 10);\n}\n\nexport const formatDate = (value, uiLocale) => {\n    if (typeof global.Intl !== 'undefined' && Intl.DateTimeFormat) {\n        const locale = uiLocale || 'en';\n        return new Intl.DateTimeFormat(locale, {\n            year: 'numeric',\n            month: 'short',\n            day: 'numeric',\n        }).format(new Date(value));\n    }\n\n    return value.substr(0, 19).replace('T', ' ');\n};\n\n/**\n * Sorts an array of objects based on provided date property\n *\n * @param {Array} items Array of objects\n * @param {String} dateProp Name of the date property to be used for sorting\n * @param {Boolean} ascending Whether to sort ascending or descending\n */\nexport const sortByDate = (items, dateProp, ascending = true) => {\n    const values = Object.values(items);\n\n    values.sort((a, b) => {\n        const aDate = new Date(a[dateProp]);\n        const bDate = new Date(b[dateProp]);\n\n        return ascending ? aDate - bDate : bDate - aDate;\n    });\n\n    return values;\n};\n\n// reducer validator\nexport const validateReducer = (value, defaultValue) =>\n    value === undefined || value === null ? defaultValue : value;\n\nexport const getBaseUrl = d2 => {\n    const api = d2.Api.getApi();\n    const idx = api.baseUrl.indexOf('/api');\n    return idx > -1 ? api.baseUrl.slice(0, idx) : api.baseUrl;\n};\n\nexport const getWithoutId = object => ({\n    ...object,\n    id: undefined,\n});\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ControlBar_root__3LaTt\",\"content\":\"ControlBar_content__1r98-\",\"draghandle\":\"ControlBar_draghandle__1VWa0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FatalErrorBoundary_container__x6zhd\",\"icon\":\"FatalErrorBoundary_icon__2XjC2\",\"message\":\"FatalErrorBoundary_message__2p9y8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"showMore\":\"ShowMoreButton_showMore__rWqw9\",\"disabled\":\"ShowMoreButton_disabled__2oX7G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ClearButton_button__2yjcV\",\"icon\":\"ClearButton_icon__1fqj8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textDiv\":\"Item_textDiv__2b-T5\"};","import isObject from 'lodash/isObject';\nimport { VIS_TYPE_COLUMN, VIS_TYPE_PIVOT_TABLE } from '@dhis2/analytics';\nimport { apiFetchFavorite, getMapFields } from '../../../api/metadata';\nimport {\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_REPORT,\n    EVENT_CHART,\n    itemTypeMap,\n} from '../../../modules/itemTypes';\nimport { getBaseUrl, getWithoutId } from '../../../modules/util';\nimport { getGridItemDomId } from '../../ItemGrid/gridUtil';\n\n//external plugins\nconst itemTypeToExternalPlugin = {\n    [MAP]: 'mapPlugin',\n    [EVENT_REPORT]: 'eventReportPlugin',\n    [EVENT_CHART]: 'eventChartPlugin',\n};\nconst hasIntegratedPlugin = type => [CHART, REPORT_TABLE].includes(type);\n\nconst getPlugin = type => {\n    if (hasIntegratedPlugin(type)) {\n        return true;\n    }\n    const pluginName = itemTypeToExternalPlugin[type];\n\n    return global[pluginName];\n};\n\nexport const THEMATIC_LAYER = 'thematic';\n\nexport const pluginIsAvailable = (item = {}, visualization = {}) => {\n    const type = visualization.activeType || item.type;\n\n    return !!getPlugin(type);\n};\n\nexport const extractFavorite = item => {\n    if (!isObject(item)) {\n        return null;\n    }\n\n    const propName = itemTypeMap[item.type].propName;\n\n    return (\n        item[propName] ||\n        (item.reportTable ||\n            item.chart ||\n            item.map ||\n            item.eventReport ||\n            item.eventChart ||\n            {})\n    );\n};\n\nexport const extractMapView = map =>\n    map.mapViews && map.mapViews.find(mv => mv.layer.includes(THEMATIC_LAYER));\n\nexport const loadPlugin = (plugin, config, credentials) => {\n    if (!(plugin && plugin.load)) {\n        return;\n    }\n\n    plugin.url = credentials.baseUrl;\n    plugin.loadingIndicator = true;\n    plugin.dashboard = true;\n    if (credentials.auth) {\n        plugin.auth = credentials.auth;\n    }\n    plugin.load(config);\n};\n\nexport const getId = item => extractFavorite(item).id;\nexport const getName = item => extractFavorite(item).name;\nexport const getDescription = item => extractFavorite(item).description;\nexport const getLink = (item, d2) => {\n    const baseUrl = getBaseUrl(d2);\n    const appUrl = itemTypeMap[item.type].appUrl(getId(item));\n\n    return `${baseUrl}/${appUrl}`;\n};\n\nexport const load = async (\n    item,\n    visualization,\n    { credentials, activeType, options = {} }\n) => {\n    const config = {\n        ...visualization,\n        ...options,\n        el: getGridItemDomId(item.id),\n    };\n\n    const type = activeType || item.type;\n    const plugin = getPlugin(type);\n\n    loadPlugin(plugin, config, credentials);\n};\n\nexport const fetch = async item => {\n    const fetchedFavorite = await apiFetchFavorite(getId(item), item.type, {\n        fields: item.type === MAP ? getMapFields() : null,\n    });\n\n    return fetchedFavorite;\n};\n\nexport const resize = item => {\n    const plugin = getPlugin(item.type);\n\n    if (plugin && plugin.resize) {\n        plugin.resize(getGridItemDomId(item.id));\n    }\n};\n\nexport const unmount = (item, activeType) => {\n    const plugin = getPlugin(activeType);\n\n    if (plugin && plugin.unmount) {\n        plugin.unmount(getGridItemDomId(item.id));\n    }\n};\n\nexport const getVisualizationConfig = (\n    visualization,\n    originalType,\n    activeType\n) => {\n    if (originalType === MAP && originalType !== activeType) {\n        const extractedMapView = extractMapView(visualization);\n\n        if (extractedMapView === undefined) {\n            return null;\n        }\n\n        return getWithoutId({\n            ...visualization,\n            ...extractedMapView,\n            mapViews: undefined,\n            type: activeType === CHART ? VIS_TYPE_COLUMN : VIS_TYPE_PIVOT_TABLE,\n        });\n    } else if (originalType === REPORT_TABLE && activeType === CHART) {\n        return getWithoutId({ ...visualization, type: VIS_TYPE_COLUMN });\n    } else if (originalType === CHART && activeType === REPORT_TABLE) {\n        return getWithoutId({\n            ...visualization,\n            type: VIS_TYPE_PIVOT_TABLE,\n        });\n    }\n\n    return getWithoutId(visualization);\n};\n","import isFunction from 'd2-utilizr/lib/isFunction';\n\nimport { orObject } from '../../modules/util';\n\n// Dimensions for the react-grid-layout\n\nexport const GRID_COMPACT_TYPE = 'vertical'; // vertical | horizonal | null\nexport const GRID_ROW_HEIGHT = 10;\nconst GRID_COLUMN_WIDTH_PX = 20;\nconst GRID_LAYOUT = 'FLEXIBLE'; // FIXED | FLEXIBLE\nexport const MARGIN = [10, 10];\n\nexport const NEW_ITEM_SHAPE = { x: 0, y: 0, w: 20, h: 29 };\n\n// Dimensions for getShape\n\nconst NUMBER_OF_ITEM_COLS = 2;\nconst GRID_COLUMNS = 60;\n\nexport const getGridColumns = () => {\n    switch (GRID_LAYOUT) {\n        case 'FLEXIBLE':\n            return GRID_COLUMNS;\n        case 'FIXED':\n            return Math.floor((window.innerWidth - 20) / GRID_COLUMN_WIDTH_PX);\n        default:\n            return GRID_COLUMNS;\n    }\n};\n\n// isNonNegativeInteger\n\nconst isNonNegativeInteger = x => Number.isInteger(x) && x >= 0;\n\n// Does the item have all the shape properties?\n\nexport const hasShape = item =>\n    isNonNegativeInteger(item.x) &&\n    isNonNegativeInteger(item.y) &&\n    isNonNegativeInteger(item.w) &&\n    isNonNegativeInteger(item.h);\n\n// returns a rectangular grid block dimensioned with x, y, w, h in grid units.\n// based on a grid with 3 items across\nexport const getShape = i => {\n    if (!isNonNegativeInteger(i)) {\n        throw new Error('Invalid grid block number');\n    }\n\n    const col = i % NUMBER_OF_ITEM_COLS;\n    const row = Math.floor(i / NUMBER_OF_ITEM_COLS);\n    const itemWidth = Math.floor((GRID_COLUMNS - 1) / NUMBER_OF_ITEM_COLS);\n    const itemHeight = GRID_ROW_HEIGHT * 2;\n\n    return {\n        x: col * itemWidth,\n        y: row * itemHeight,\n        w: itemWidth,\n        h: itemHeight,\n    };\n};\n\nexport const getGridItemProperties = itemId => {\n    return {\n        i: itemId,\n        minH: 4, // minimum height for item\n    };\n};\n\n/**\n * Calculates the grid item's original height in pixels based\n * on the height in grid units. This calculation\n * is copied directly from react-grid-layout GridItem.js (calcPosition)\n *\n * @param {Object} item item containing shape (x, y, w, h)\n */\nconst getOriginalHeight = item => {\n    const originalHeight = Math.round(\n        GRID_ROW_HEIGHT * item.h + Math.max(0, item.h - 1) * MARGIN[1]\n    );\n\n    return { originalHeight };\n};\n\n/**\n * Returns an array of items containing the x, y, w, h dimensions\n * and the item's originalheight in pixels\n * @function\n * @param {Array} items\n * @returns {Array}\n */\n\nexport const withShape = items =>\n    items.map((item, index) => {\n        const itemWithShape = hasShape(item)\n            ? item\n            : Object.assign({}, item, getShape(index));\n\n        return Object.assign(\n            {},\n            itemWithShape,\n            getOriginalHeight(itemWithShape)\n        );\n    });\n\nexport const getGridItemDomId = id => `item-${id}`;\n\nexport function onItemResize(id) {\n    const el = orObject(document.querySelector(`#${getGridItemDomId(id)}`));\n    if (isFunction(el.setViewportSize))\n        setTimeout(\n            () => el.setViewportSize(el.clientWidth - 5, el.clientHeight - 5),\n            10\n        );\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"showMoreButton\":\"CategorizedMenuGroup_showMoreButton__3-0Wa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"deleteItemButton\":\"DeleteItemButton_deleteItemButton__4YLrM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"center\":\"LoadingMask_center__GnxG9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bar\":\"FilterBar_bar__2mF3Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ConfirmDeleteDialog_content__1IFNx\"};"],"sourceRoot":""}
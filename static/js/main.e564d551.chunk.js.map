{"version":3,"sources":["modules/itemTypes.js","components/ControlBar/styles/DashboardsBar.module.css","modules/util.js","reducers/user.js","reducers/dashboards.js","reducers/selected.js","reducers/visualizations.js","api/metadata.js","api/index.js","api/dashboards.js","components/ItemGrid/gridUtil.js","reducers/messages.js","api/messages.js","reducers/snackbar.js","actions/snackbar.js","components/SnackbarMessage/SnackbarMessage.js","components/Item/VisualizationItem/plugin.js","actions/selected.js","api/localStorage.js","components/Item/MessagesItem/actions.js","reducers/editDashboard.js","reducers/editItemFilters.js","reducers/itemFilters.js","actions/itemFilters.js","actions/editItemFilters.js","api/editDashboard.js","actions/editDashboard.js","actions/dashboards.js","reducers/controlBar.js","api/controlBar.js","actions/controlBar.js","reducers/dimensions.js","reducers/settings.js","actions/dimensions.js","modules/colors.js","components/ControlBar/ShowMoreButton.js","components/ControlBar/controlBarDimensions.js","components/ControlBar/ControlBar.js","api/dataStatistics.js","components/ControlBar/DashboardItemChip.js","widgets/D2IconButton.js","reducers/dashboardsFilter.js","components/ControlBar/Filter.js","components/ControlBar/DashboardsBar.js","actions/dashboardsFilter.js","components/Dashboard/DashboardVerticalOffset.js","components/ItemSelect/selectableItems.js","components/ItemSelect/ItemSelectList.js","components/ItemSelect/actions.js","components/ItemSelect/ItemSelectSingle.js","components/ItemSelect/ItemSelect.js","components/TitleBar/EditTitleBar.js","components/ItemFilter/FilterDialog.js","reducers/activeModalDimension.js","actions/activeModalDimension.js","components/ItemFilter/FilterSelector.js","components/TitleBar/Info.js","components/TitleBar/ViewTitleBar.js","components/TitleBar/TitleBar.js","components/Item/VisualizationItem/DefaultPlugin.js","components/Item/ItemHeader.js","components/Item/VisualizationItem/ItemFooter.js","components/Item/ItemHeaderButton.js","components/Item/VisualizationItem/ItemHeaderButtons.js","modules/memoizeOne.js","components/Item/VisualizationItem/Item.js","widgets/Line.js","components/Item/MessagesItem/Item.js","components/Item/NotSupportedItem/Item.js","components/Item/ListItem/Item.js","components/Item/ListItem/actions.js","components/Item/TextItem/Item.js","components/Item/AppItem/Item.js","components/Item/SpacerItem/Item.js","components/Item/Item.js","components/ItemGrid/DeleteItemButton.js","widgets/ModalLoadingMask.js","widgets/NoContentMessage.js","components/Item/ProgressiveLoadingContainer.js","components/ItemGrid/ItemGrid.js","components/FilterBar/FilterBadge.js","components/FilterBar/FilterBar.js","components/Dashboard/DashboardContent.js","components/Dashboard/ViewDashboard.js","widgets/PrimaryButton.js","widgets/FlatButton.js","components/ControlBar/ConfirmDeleteDialog.js","components/ControlBar/EditBar.js","components/Dashboard/EditDashboard.js","components/Dashboard/NewDashboard.js","components/Dashboard/Dashboard.js","components/Dashboard/dashboardModes.js","components/App.js","actions/user.js","locales/index.js","reducers/style.js","reducers/index.js","configureStore.js","modules/theme.js","index.js","components/ControlBar/styles/ControlBar.module.css"],"names":["REPORT_TABLE","CHART","MAP","EVENT_REPORT","EVENT_CHART","APP","REPORTS","RESOURCES","USERS","MESSAGES","TEXT","SPACER","DOMAIN_TYPE_AGGREGATE","VISUALIZATION_TYPE_TABLE","VISUALIZATION_TYPE_CHART","VISUALIZATION_TYPE_MAP","spacerContent","emptyTextItemContent","isSpacerType","item","type","text","isTextType","isPluginType","itemTypeMap","hasOwnProperty","getPlugin","pluginName","plugin","global","_itemTypeMap","Object","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","id","endPointName","propName","countName","pluralTitle","i18n","t","domainType","visualizationType","appUrl","concat","appName","getItemUrl","d2","url","launchUrl","getBaseUrl","getItemIcon","TableIcon","ChartIcon","MapIcon","ExtensionIcon","DescriptionIcon","PersonIcon","FontDownloadIcon","EmailIcon","CropFreeIcon","NotInterestedIcon","module","exports","leftControls","rightControls","orArray","param","Array","isArray","orObject","isObject","arrayToIdMap","array","reduce","obj","formatDate","value","uiLocale","Intl","DateTimeFormat","locale","year","month","day","format","Date","substr","replace","validateReducer","defaultValue","undefined","api","Api","getApi","idx","baseUrl","indexOf","slice","getWithoutId","object","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","DEFAULT_STATE_USER","username","isSuperuser","sGetUserUsername","state","user","DEFAULT_STATE_DASHBOARDS","byId","items","updateDashboardProp","dashboardId","prop","objectSpread","defineProperty","sGetDashboardsRoot","dashboards","sGetDashboardById","sDashboardsIsFetching","sGetAllDashboards","sGetDashboardItems","sGetStarredDashboards","values","filter","dashboard","starred","sGetUnstarredDashboards","sGetDashboardsSortedByStarred","toConsumableArray","arraySort","getCustomDashboards","data","arrayFrom","map","d","index","name","displayName","description","displayDescription","favorite","owner","created","split","join","lastUpdated","access","numberOfItems","dashboardItems","length","combineReducers","arguments","action","isLoading","showDescription","sGetSelectedRoot","selected","sGetSelectedId","sGetSelectedIsLoading","sGetSelectedShowDescription","DEFAULT_STATE_VISUALIZATIONS","isEmpty","p","sGetVisualization","visualizations","sGetVisualizationsRoot","getIdNameFields","rename","getDimensionFields","_ref2","withItems","arrayClean","getAxesFields","_ref3","getFavoriteFields","_ref4","withDimensions","withOptions","getFavoritesFields","_ref5","apiFetchFavorite","_ref6","fields","getInstance","then","get","getEndPointName","onError","error","console","log","getDashboardItemsFields","withFavorite","getDashboardFields","apiFetchDashboard","models","catch","apiStarDashboard","isStarred","post","delete","apiDeleteDashboard","MARGIN","NEW_ITEM_SHAPE","x","y","w","h","isNonNegativeInteger","Number","isInteger","hasShape","withShape","itemWithShape","assign","i","Error","col","row","Math","floor","itemWidth","GRID_ROW_HEIGHT","getShape","originalHeight","round","max","getOriginalHeight","getGridItemDomId","onItemResize","el","document","querySelector","isFunction","setViewportSize","setTimeout","clientWidth","clientHeight","sGetMessagesRoot","messages","getMessages","DEFAULT_STATE_SNACKBAR","message","duration","open","acCloseSnackbar","loadingDashboardMsg","SnackbarMessageContent","_ref","react_default","a","createElement","style","fontWeight","connect","_sGetSnackbar","snackbar","sGetSnackbar","snackbarOpen","snackbarMessage","snackbarDuration","onCloseSnackbar","props","Snackbar_default","SnackbarMessage_SnackbarMessageContent","autoHideDuration","onRequestClose","pluginIsAvailable","activeType","extractFavorite","reportTable","chart","eventReport","eventChart","loadPlugin","config","credentials","load","loadingIndicator","auth","getId","getName","getLink","asyncToGenerator","regenerator_default","mark","_callee","visualization","_args","wrap","_context","prev","next","stop","_x","_x2","_x3","_x4","apply","this","fetch","_callee2","fetchedFavorite","_context2","sent","abrupt","_x5","resize","unmount","getVisualizationConfig","originalType","extractedMapView","mapViews","find","mv","layer","includes","acSetSelectedId","acSetSelectedIsLoading","acReceivedVisualization","tLoadDashboard","dispatch","getState","dash","acAppendDashboards","Promise","resolve","t0","tSetSelectedDashboardById","snackbarTimeout","onSuccess","dashboardName","customDashboard","acSetDashboardItems","localStorage","setItem","forEach","messageConversations","clearTimeout","DEFAULT_STATE_EDIT_DASHBOARD","NEW_DASHBOARD_STATE","sGetEditDashboardRoot","editDashboard","sGetIsEditing","sGetEditDashboardItems","DEFAULT_STATE_EDIT_ITEM_FILTERS","sGetEditItemFiltersRoot","editItemFilters","DEFAULT_STATE_ITEM_FILTERS","sGetItemFiltersRoot","itemFilters","sGetFiltersKeys","keys","acRemoveItemFilter","acRemoveEditItemFilter","saveDashboard","width","height","save","msg","response","uid","updateDashboard","postDashboard","create","acAddDashboardItem","itemPropName","generateUid","content","acUpdateDashboardItem","acRemoveDashboardItem","acSetDashboardStarred","tFetchDashboards","collection","list","paging","toArray","userRows","sGetControlBarUserRows","controlBar","sGetControlBarRoot","KEY","hasNamespace","currentUser","dataStore","has","getNamespace","apiGetControlBarRows","_callee3","namespace","_context3","t1","t2","key","apiPostControlBarRows","_callee4","rows","_context4","set","acSetControlBarUserRows","DEFAULT_DIMENSIONS","pe","FIXED_DIMENSIONS","ou","sGetDimensions","dimensions","DEFAULT_SETTINGS","keyDateFormat","keyAnalysisRelativePeriod","keyAnalysisDigitGroupSeparator","displayNameProperty","rootOrganisationUnit","sGetSettings","settings","sGetSettingsDisplayNameProperty","acSetDimensions","keyBy","sortBy","toLowerCase","colors","styles","showMore","color","cursor","fontSize","paddingTop","textTransform","visibility","withStyles","onClick","isMaxHeight","classes","textAlign","className","MIN_ROW_COUNT","getRowsHeight","getNumRowsFromHeight","FIRST_ROW_PADDING_HEIGHT","getTopOffset","getControlBarHeight","ControlBar","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onStartDrag","setState","dragging","window","addEventListener","onDrag","onEndDrag","event","preventDefault","stopPropagation","newHeight","clientY","onChangeHeight","requestAnimationFrame","removeEventListener","draghandle","onMouseDown","rootStyle","top","backgroundColor","editMode","yellow050","white","paddingBottom","transition","root","children","renderDragHandle","React","Component","defaultProps","apiPostDataStatistics","eventType","chipTheme","default","labelColor","primary","accent","DashboardItemChip","label","chipColorProps","labelStyle","lineHeight","margin","Link","display","verticalAlign","textDecoration","to","debounce","Chip_default","avatarProps","Avatar_default","icon","Star_default","avatar","button","padding","iconStyle","IconAdd","iconColor","D2IconButton","IconButton_default","add_circle_default","Function","prototype","ownerData","DEFAULT_STATE_DASHBOARDS_FILTER_NAME","DEFAULT_STATE_DASHBOARDS_FILTER_OWNER","order","sGetDashboardsFilterRoot","dashboardsFilter","sGetFilterName","KEYCODE_ENTER","KEYCODE_ESCAPE","filterField","filterFieldInput","left","filterFieldUnderline","bottom","filterFieldUnderlineFocus","borderColor","borderWidth","clearButton","clearButtonIcon","Filter","_Component","setFilterValue","onChangeName","target","handleKeyUp","keyCode","onKeypressEnter","inherits","createClass","nextProps","TextField_default","onChange","onKeyUp","hintText","inputStyle","hintStyle","filterFieldHint","underlineStyle","underlineFocusStyle","ClearButton","disabled","opacity","Clear_default","ControlBar_Filter","react","Filter_Filter","Filter_ClearButton","MAX_ROW_COUNT","DashboardsBar","_getPrototypeOf2","_len","args","_key","setInitialDashboardState","adjustedHeight","newRows","newRowCount","min","onToggleMaxHeight","onSelectDashboard","history","push","_this$props","selectedId","onChangeFilterName","rowCount","controlBarHeight","contentWrapperStyle","overflowY","components_ControlBar_ControlBar","marginRight","widgets_D2IconButton","ControlBar_DashboardItemChip","ControlBar_ShowMoreButton","mapDispatchToProps","withRouter","stateProps","dispatchProps","ownProps","displayDashboards","marginTop","singleItems","header","listItems","title","ItemSelectList","addItem","tAddListItemContent","newItem","match","toggleSeeMore","seeMore","onChangeItemsLimit","_this2","justifyContent","paddingLeft","Button_default","Divider_default","List","itemUrl","context","ItemIcon","leftIcon","fill","innerDivStyle","hoverColor","primaryText","alignItems","marginLeft","rel","href","Launch_default","contextTypes","PropTypes","isRequired","dashboardItem","listItemType","dashboardItemIndex","findIndex","SingleItem","onAddToDashboard","category","addToDashboard","ItemSelectSingle_SingleItem","searchIcon","ItemSearchField","Search_default","fullWidth","ItemSelect","closeList","openList","fetchItems","anchorEl","currentTarget","setFilter","getListItems","itemType","ItemSelect_ItemSelectList","popoverChildren","SingleItems","ItemSelect_ItemSelectSingle","maxOption","queryString","maxOptions","add","Set","ItemSelect_ItemSearchField","Popover_default","onClose","anchorOrigin","horizontal","vertical","transformOrigin","PaperProps","disableAutoFocus","disableRestoreFocus","EditTitleBar","onChangeTitle","onChangeDescription","titleStyle","section","titleDescription","text_field_TextField_default","multiline","rowsMax","placeholder","itemSelect","components_ItemSelect_ItemSelect","selectedDashboard","flex","minWidth","maxWidth","position","peId","ouId","FilterDialog","onConfirm","dimension","selectedItems","dialogId","commonProps","onSelect","onDeselect","onReorder","build","selectedPeriods","ouItems","dialogTitle","_this$props2","Dialog_default","disableEnforceFocus","dialogContent","DialogActions_default","es_Button","kind","DEFAULT_STATE_ACTIVE_MODAL_DIMENSION","sGetActiveModalDimension","activeModalDimension","acSetActiveModalDimension","FilterSelector","openPanel","closePanel","closeDialog","clearActiveModalDimension","selectDimension","setActiveModalDimension","onSelectItems","dimensionId","setEditItemFilters","onDeselectItems","itemIdsToRemove","newList","removeEditItemFilter","onReorderItems","itemIds","oldList","reorderedList","saveFilter","filterItems","addItemFilter","removeItemFilter","selectedDimensions","ArrowDropDown_default","Boolean","onDimensionClick","selectedIds","ItemFilter_FilterDialog","filters","Info","show","toggle","InfoOutlined_default","NO_DESCRIPTION","actions","starIcon","textButton","editLink","titleBar","titleBarIcon","ViewTitleBar","toggleSharingDialog","sharingDialogIsOpen","onStarClick","onInfoClick","userSelect","StarIcon","Star","StarBorder","TitleBar_Info","update","manage","ItemFilter_FilterSelector","d2_ui_sharing_dialog_default","tStarDashboard","TitleBar","edit","TitleBar_EditTitleBar","TitleBar_ViewTitleBar","DefaultPlugin","pluginCredentials","shouldPluginReload","prevProps","reloadAllowed","filtersChanged","vis","prevVis","visChanged","reloadPlugin","pluginManager","currentVis","useActiveType","getActiveType","defaultHeaders","Authorization","textDiv","HEADER_HEIGHT","ItemHeader","actionButtons","scrollContainer","line","border","ItemFooter","objectId","d2_ui_interpretations_default","ItemHeaderButton","iconBase","buttonBase","buttonDisabled","toggleFooterPadding","borderRadius","baseStyle","container","disabledStyle","activeStyle","inactiveStyle","getItemTypeId","VisualizationItemHeaderButtons","onSelectVisualization","activeFooter","onToggleFooter","toggleFooterBase","toggleFooter","tableButtonStyle","tableBtnStyle","chartButtonStyle","chartBtnStyle","mapButtonStyle","mapBtnStyle","components_Item_ItemHeaderButton","Message_default","ViewList_default","InsertChart_default","Public_default","memoizeOne","fn","lastArgs","lastValue","every","arg","overflow","textOverflow","whiteSpace","fontStretch","applyFilters","visRows","visColumns","columns","visFilters","dimensionFound","dimensionObjects","Item","showFooter","configLoaded","getUniqueKey","uniqueId","getPluginComponent","getContentStyle","data_visualizer_plugin_build","forDashboard","VisualizationItem_DefaultPlugin","onToggleItemExpanded","getTitle","itemName","getActionButtons","ItemHeaderButtons","contentRef","offsetHeight","createRef","_componentDidMount","onVisualizationLoaded","_this$props3","Item_ItemHeader","ref","VisualizationItem_ItemFooter","acReceivedActiveVisualization","Line","PRIVATE","messageTypes","_messageTypes","listStyleType","seeAll","marginBottom","sender","snippet","maxHeight","MessagesItem","getMessageHref","msgIdentifier","messageType","getMessageSender","latestMsg","getMessageItems","editClass","readClass","read","msgDate","location","messageCount","userSettings","widgets_Line","string","MessagesContainer","NotSupportedItem","NotInterested_default","align","getItemTitle","removeContent","handler","contentToRemove","ListItem","tRemoveListItemContent","contentItems","getContentItems","contentItem","deleteButton","Delete_default","ListItemContainer","newContent","textField","onChangeText","updatedItem","d2_ui_rich_text","onEdit","textDivStyle","viewItem","getIframeSrc","appDetails","iframeSrc","ouIds","ouPath","AppItem","appKey","system","installedApps","app","src","SpacerItem","GridItem","VisualizationItem","TextItem","getGridItem","right","zIndex","DeleteItemHeaderButton","modal","pointerEvents","dark","ModalLoadingMask","LoadingMask_component_default","NoContentMessage","ProgressiveLoadingContainer","shouldLoad","containerRef","shouldLoadHandler","bufferPx","bufferFactor","innerHeight","rect","getBoundingClientRect","removeHandler","checkShouldLoad","debounceMs","registerHandler","_this3","objectWithoutProperties","ItemGrid","expandedItems","NO_ITEMS_MESSAGE","clickedId","isExpanded","onRemoveItem","onLayoutChange","newLayout","acUpdateDashboardLayout","onResizeStop","layout","oldItem","pluginResize","onRemoveItemWrapper","widgets_NoContentMessage","expandedItem","hProp","minH","widgets_ModalLoadingMask","react_grid_layout_default","cols","rowHeight","innerWidth","compactType","isDraggable","isResizable","draggableCancel","itemClassNames","Item_ProgressiveLoadingContainer","DeleteItemButton","Item_Item_Item","validItems","badgeContainer","badge","badgeRemove","FilterBadge","onRemove","count","FilterBar","onBadgeRemove","onBadgeClick","bar","FilterBar_FilterBadge","removeItemFIlter","filtersSelector","createSelector","arr","flexWrap","DashboardContent","components_TitleBar_TitleBar","components_FilterBar_FilterBar","components_ItemGrid_ItemGrid","Content","hasDashboardContent","dashboardsIsEmpty","Dashboard_DashboardContent","dashboardsLoaded","contentNotReady","ControlBar_DashboardsBar","Dashboard_DashboardVerticalOffset","ViewDashboard_Content","PrimaryButton","RaisedButton_default","defaultStyles","FlatButton","combinedStyle","FlatButton_default","ConfirmDeleteDialog","onDeleteConfirmed","onContinueEditing","widgets_FlatButton","src_widgets_PrimaryButton","material_ui_Dialog_default","buttonBarStyle","EditBar","translationDialogIsOpen","dashboardModel","confirmDeleteDialogOpen","redirectUrl","onConfirmDelete","onSave","newId","onDiscard","onDiscardChanges","onDelete","onTranslationsSaved","translations","dbLocale","translation","property","onTranslate","fetchDashboardModel","toggleTranslationDialog","confirmDeleteDialog","deleteAccess","ControlBar_ConfirmDeleteDialog","translationDialog","d2_ui_translation_dialog_default","objectToTranslate","fieldsToTranslate","onTranslationSaved","onTranslationError","err","Redirect","updateAccess","discardBtnText","sGetIsNewDashboard","dashboardToSave","_x6","_x7","tDeleteDashboard","acSetDashboardDisplayName","EditDashboard","initialized","initEditDashboard","setEditDashboard","getDashboardContent","EditDashboard_Content","ControlBar_EditBar","NewDashboard","setNewDashboard","Dashboard","setDashboard","params","selectDashboard","mode","Dashboard_EditDashboard","Dashboard_NewDashboard","Dashboard_ViewDashboard","dashboardToSelect","preferredId","getItem","App","setCurrentUser","fetchDashboards","setControlBarRows","setDimensions","HeaderBar_default","HashRouter","Switch","Route","exact","path","render","components_Dashboard_Dashboard","components_SnackbarMessage_SnackbarMessage","childContextTypes","controlBarRows","displayNameProp","filteredDimensions","apiFetchDimensions","dim","dimensionType","dataDimensionType","tSetDimensions","moment","addResources","arTranslations","daTranslations","enTranslations","esTranslations","frTranslations","idTranslations","kmTranslations","loTranslations","myTranslations","nbTranslations","prsTranslations","psTranslations","ptTranslations","pt_BRTranslations","ruTranslations","svTranslations","tetTranslations","tgTranslations","ukTranslations","urTranslations","viTranslations","zhTranslations","zh_CNTranslations","setDefaultNamespace","changeLanguage","objectClean","conversations","$merge","d2Object","keyUiLocale","authorities","newState","k","$unshift","idToRemove","$splice","stateItems","newStateItems","stateItem","si","$set","configureStore","middleware","thunk","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducer","applyMiddleware","muiTheme","raisedButton","primaryColor","disabledColor","disabledTextColor","getMuiTheme","configI18n","sources","manifest","isProd","getManifest","info","version","manifest_generated_at","process","activities","dhis","dhis2","apiVersion","headers","schemas","getUserSettings","d2Init","initializedD2","ReactDOM","es","store","theme","createMuiTheme","dhis2theme","index_es","src_components_App","getElementById","init"],"mappings":"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","file":"static/js/main.e564d551.chunk.js","sourcesContent":["import i18n from '@dhis2/d2-i18n';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\nimport ExtensionIcon from '@material-ui/icons/Extension';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport PersonIcon from '@material-ui/icons/Person';\nimport FontDownloadIcon from '@material-ui/icons/FontDownload';\nimport EmailIcon from '@material-ui/icons/Email';\nimport CropFreeIcon from '@material-ui/icons/CropFree';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nimport { getBaseUrl } from './util';\n\n// Item types\nexport const REPORT_TABLE = 'REPORT_TABLE';\nexport const CHART = 'CHART';\nexport const MAP = 'MAP';\nexport const EVENT_REPORT = 'EVENT_REPORT';\nexport const EVENT_CHART = 'EVENT_CHART';\nexport const APP = 'APP';\nexport const REPORTS = 'REPORTS';\nexport const RESOURCES = 'RESOURCES';\nexport const USERS = 'USERS';\nexport const MESSAGES = 'MESSAGES';\nexport const TEXT = 'TEXT';\nexport const SPACER = 'SPACER';\n\n// Domain types\nexport const DOMAIN_TYPE_AGGREGATE = 'AGGREGATE';\nexport const DOMAIN_TYPE_TRACKER = 'TRACKER';\n\n// Visualization types\nexport const VISUALIZATION_TYPE_TABLE = 'TABLE';\nexport const VISUALIZATION_TYPE_CHART = 'CHART';\nexport const VISUALIZATION_TYPE_MAP = 'MAP';\n\nexport const spacerContent = 'SPACER_ITEM_FOR_DASHBOARD_LAYOUT_CONVENIENCE';\nexport const emptyTextItemContent = 'TEXT_ITEM_WITH_NO_CONTENT';\nexport const isSpacerType = item =>\n    item.type === TEXT && item.text === spacerContent;\nexport const isTextType = item =>\n    item.type === TEXT && item.text !== spacerContent;\nexport const isPluginType = item =>\n    itemTypeMap[item.type].hasOwnProperty('plugin');\n\nexport const getPlugin = type => {\n    const pluginName = itemTypeMap[type].plugin;\n\n    if (type === CHART) {\n        return true;\n    }\n\n    return global[pluginName];\n};\n\n// Item type map\nexport const itemTypeMap = {\n    [REPORT_TABLE]: {\n        id: REPORT_TABLE,\n        endPointName: 'reportTables',\n        propName: 'reportTable',\n        countName: 'reportTableCount',\n        pluralTitle: i18n.t('Pivot tables'),\n        plugin: 'reportTablePlugin',\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        visualizationType: VISUALIZATION_TYPE_TABLE,\n        appUrl: id => `dhis-web-pivot/?id=${id}`,\n        appName: i18n.t('Pivot Tables'),\n    },\n    [CHART]: {\n        id: CHART,\n        endPointName: 'charts',\n        propName: 'chart',\n        countName: 'chartCount',\n        pluralTitle: i18n.t('Charts'),\n        plugin: 'chartPlugin',\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        visualizationType: VISUALIZATION_TYPE_CHART,\n        appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n        appName: i18n.t('Visualizer'),\n    },\n    [MAP]: {\n        id: MAP,\n        endPointName: 'maps',\n        propName: 'map',\n        countName: 'mapCount',\n        pluralTitle: i18n.t('Maps'),\n        plugin: 'mapPlugin',\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        visualizationType: VISUALIZATION_TYPE_MAP,\n        appUrl: id => `dhis-web-maps/?id=${id}`,\n        appName: i18n.t('Maps'),\n    },\n    [EVENT_REPORT]: {\n        id: EVENT_REPORT,\n        endPointName: 'eventReports',\n        propName: 'eventReport',\n        countName: 'eventReportCount',\n        pluralTitle: i18n.t('Event reports'),\n        plugin: 'eventReportPlugin',\n        domainType: DOMAIN_TYPE_TRACKER,\n        visualizationType: VISUALIZATION_TYPE_TABLE,\n        appUrl: id => `dhis-web-event-reports/?id=${id}`,\n        appName: i18n.t('Event Reports'),\n    },\n    [EVENT_CHART]: {\n        id: EVENT_CHART,\n        endPointName: 'eventCharts',\n        propName: 'eventChart',\n        countName: 'eventChartCount',\n        pluralTitle: i18n.t('Event charts'),\n        plugin: 'eventChartPlugin',\n        domainType: DOMAIN_TYPE_TRACKER,\n        visualizationType: VISUALIZATION_TYPE_CHART,\n        appUrl: id => `dhis-web-event-visualizer/?id=${id}`,\n        appName: i18n.t('Event Visualizer'),\n    },\n    [APP]: {\n        endPointName: 'apps',\n        propName: 'appKey',\n        countName: 'appCount',\n        pluralTitle: 'Apps',\n    },\n    [REPORTS]: {\n        id: REPORTS,\n        endPointName: 'reports',\n        propName: 'reports',\n        countName: 'reportCount',\n        pluralTitle: i18n.t('Reports'),\n        appUrl: id =>\n            `dhis-web-reporting/getReportParams.action?mode=report&uid=${id}`,\n    },\n    [RESOURCES]: {\n        id: RESOURCES,\n        endPointName: 'resources',\n        propName: 'resources',\n        countName: 'resourceCount',\n        pluralTitle: i18n.t('Resources'),\n        appUrl: id => `api/documents/${id}/data`,\n    },\n    [USERS]: {\n        id: USERS,\n        endPointName: 'users',\n        propName: 'users',\n        countName: 'userCount',\n        pluralTitle: i18n.t('Users'),\n        appUrl: id => `dhis-web-dashboard-integration/profile.action?id=${id}`,\n    },\n    [TEXT]: {\n        id: TEXT,\n        propName: 'text',\n    },\n    [MESSAGES]: {\n        propName: 'messages',\n    },\n    [SPACER]: {\n        propName: 'text',\n    },\n};\n\nexport const getItemUrl = (type, item, d2) => {\n    let url;\n\n    if (type === APP) {\n        url = item.launchUrl;\n    }\n\n    if (itemTypeMap[type] && itemTypeMap[type].appUrl) {\n        url = `${getBaseUrl(d2)}/${itemTypeMap[type].appUrl(item.id)}`;\n    }\n\n    return url;\n};\n\nexport const getItemIcon = type => {\n    switch (type) {\n        case REPORT_TABLE:\n        case EVENT_REPORT:\n        case REPORTS:\n            return TableIcon;\n        case CHART:\n        case EVENT_CHART:\n            return ChartIcon;\n        case MAP:\n            return MapIcon;\n        case APP:\n            return ExtensionIcon;\n        case RESOURCES:\n            return DescriptionIcon;\n        case USERS:\n            return PersonIcon;\n        case TEXT:\n            return FontDownloadIcon;\n        case MESSAGES:\n            return EmailIcon;\n        case SPACER:\n            return CropFreeIcon;\n        default:\n            return NotInterestedIcon;\n    }\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"leftControls\":\"DashboardsBar_leftControls__2kr14\",\"rightControls\":\"DashboardsBar_rightControls__2l1lT\"};","import isObject from 'lodash/isObject';\n\n// validation\nexport function orNull(param) {\n    return param === undefined ? null : param;\n}\n\nexport function orArray(param) {\n    return Array.isArray(param) ? param : [];\n}\n\nexport function orObject(param) {\n    return isObject(param) ? param : {};\n}\n\n// array\nexport function arrayGetById(array, id) {\n    return array.find(item => item.id === id);\n}\n\n// object\nexport function arrayToIdMap(array) {\n    return array.reduce((obj, item) => {\n        obj[item.id] = item;\n        return obj;\n    }, {});\n}\n\n// date\nexport function getDate() {\n    const y = Math.floor(Math.random() * 3) + 2015;\n    const M = Math.floor(Math.random() * 12) + 1;\n    const d = Math.floor(Math.random() * 28) + 1;\n    // const h = Math.floor(Math.random() * 23) + 1;\n    // const m = Math.floor(Math.random() * 59) + 1;\n    // const s = Math.floor(Math.random() * 59) + 1;\n\n    return new Date(`${y}-${M}-${d}`)\n        .toJSON()\n        .replace('T', ' ')\n        .substr(0, 10);\n}\n\nexport const formatDate = (value, uiLocale) => {\n    if (typeof global.Intl !== 'undefined' && Intl.DateTimeFormat) {\n        const locale = uiLocale || 'en';\n        return new Intl.DateTimeFormat(locale, {\n            year: 'numeric',\n            month: 'short',\n            day: 'numeric',\n        }).format(new Date(value));\n    }\n\n    return value.substr(0, 19).replace('T', ' ');\n};\n\n/**\n * Sorts an array of objects based on provided date property\n *\n * @param {Array} items Array of objects\n * @param {String} dateProp Name of the date property to be used for sorting\n * @param {Boolean} ascending Whether to sort ascending or descending\n */\nexport const sortByDate = (items, dateProp, ascending = true) => {\n    const values = Object.values(items);\n\n    values.sort((a, b) => {\n        const aDate = new Date(a[dateProp]);\n        const bDate = new Date(b[dateProp]);\n\n        return ascending ? aDate - bDate : bDate - aDate;\n    });\n\n    return values;\n};\n\n// reducer validator\nexport const validateReducer = (value, defaultValue) =>\n    value === undefined || value === null ? defaultValue : value;\n\nexport const getBaseUrl = d2 => {\n    const api = d2.Api.getApi();\n    const idx = api.baseUrl.indexOf('/api');\n    return idx > -1 ? api.baseUrl.slice(0, idx) : api.baseUrl;\n};\n\nexport const getWithoutId = object => ({\n    ...object,\n    id: undefined,\n});\n","export const RECEIVED_USER = 'RECEIVED_USER';\n\nexport const DEFAULT_STATE_USER = {\n    id: '',\n    username: '',\n    uiLocale: '',\n    isSuperuser: false,\n};\n\nexport default (state = DEFAULT_STATE_USER, action) => {\n    switch (action.type) {\n        case RECEIVED_USER: {\n            return fromD2ToUserObj(action.value);\n        }\n        default:\n            return state;\n    }\n};\n\nfunction fromD2ToUserObj(d2Object) {\n    return {\n        id: d2Object.id,\n        username: d2Object.username,\n        uiLocale: d2Object.settings.keyUiLocale,\n        isSuperuser: d2Object.authorities.has('ALL'),\n    };\n}\n\n// selectors\n\nexport const sGetUserId = state => state.user.id;\nexport const sGetUserUsername = state => state.user.username;\nexport const sGetIsSuperuser = state => state.user.isSuperuser;\nexport const sGetUiLocale = state => state.user.uiLocale;\n","/** @module reducers/dashboards */\n\nimport arrayFrom from 'd2-utilizr/lib/arrayFrom';\nimport arraySort from 'd2-utilizr/lib/arraySort';\n\nimport { orArray, orObject } from '../modules/util';\nimport {\n    SPACER,\n    isSpacerType,\n    isTextType,\n    emptyTextItemContent,\n} from '../modules/itemTypes';\n\nexport const SET_DASHBOARDS = 'SET_DASHBOARDS';\nexport const ADD_DASHBOARDS = 'ADD_DASHBOARDS';\nexport const SET_DASHBOARD_STARRED = 'SET_DASHBOARD_STARRED';\nexport const SET_DASHBOARD_DISPLAY_NAME = 'SET_DASHBOARD_DISPLAY_NAME';\nexport const SET_DASHBOARD_ITEMS = 'SET_DASHBOARD_ITEMS';\n\nexport const DEFAULT_STATE_DASHBOARDS = {\n    byId: null,\n    items: [],\n};\n\n// reducer helper functions\n\nconst updateDashboardProp = (state, dashboardId, prop, value) => ({\n    byId: {\n        ...state.byId,\n        [dashboardId]: {\n            ...state.byId[dashboardId],\n            [prop]: value,\n        },\n    },\n    items: state.items,\n});\n\n/**\n * Reducer that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n * @returns {Object}\n */\nexport default (state = DEFAULT_STATE_DASHBOARDS, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS: {\n            return {\n                byId: action.value,\n                items: [],\n            };\n        }\n        case ADD_DASHBOARDS: {\n            return {\n                ...state,\n                byId: {\n                    ...state.byId,\n                    ...action.value,\n                },\n            };\n        }\n        case SET_DASHBOARD_STARRED: {\n            return updateDashboardProp(\n                state,\n                action.dashboardId,\n                'starred',\n                action.value\n            );\n        }\n        case SET_DASHBOARD_DISPLAY_NAME: {\n            return updateDashboardProp(\n                state,\n                action.dashboardId,\n                'displayName',\n                action.value\n            );\n        }\n        case SET_DASHBOARD_ITEMS: {\n            return {\n                ...state,\n                items: action.value,\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// root selector\n\nexport const sGetDashboardsRoot = state => state.dashboards;\n\n// selector level 1\n\n/**\n * Selector which returns a dashboard by id from the state object\n * If no matching dashboard is found it returns undefined\n * If dashboards.byId is null, then the dashboards api request\n * has not yet completed. If dashboards.byId is an empty object\n * then the dashboards api request is complete, but no dashboards\n * were returned\n *\n * @function\n * @param {Object} state The current state\n * @param {Number} id The id of the dashboard\n * @returns {Object | undefined}\n */\nexport const sGetDashboardById = (state, id) =>\n    orObject(sGetDashboardsRoot(state).byId)[id];\n\nexport const sDashboardsIsFetching = state => {\n    return sGetDashboardsRoot(state).byId === null;\n};\n\n/**\n * Selector which returns all dashboards (the byId object)\n *\n * @function\n * @param {Object} state The current state\n * @returns {Object | undefined}\n */\nexport const sGetAllDashboards = state =>\n    orObject(sGetDashboardsRoot(state).byId);\n\n/**\n * Selector which returns the current dashboard items\n *\n * @function\n * @param {Object} state The current state\n * @returns {Array}\n */\nexport const sGetDashboardItems = state => sGetDashboardsRoot(state).items;\n\n// selector level 2\n\nexport const sGetStarredDashboards = state =>\n    Object.values(sGetAllDashboards(state)).filter(\n        dashboard => dashboard.starred === true\n    );\n\nexport const sGetUnstarredDashboards = state =>\n    Object.values(sGetAllDashboards(state)).filter(\n        dashboard => dashboard.starred === false\n    );\n\n// selector level 3\n\nexport const sGetStarredDashboardIds = state => {\n    return sGetStarredDashboards(state).map(dashboard => dashboard.id);\n};\n\nexport const sGetUnstarredDashboardIds = state =>\n    sGetUnstarredDashboards(state).map(dashboard => dashboard.id);\n\nexport const sGetDashboardsSortedByStarred = state => [\n    ...arraySort(sGetStarredDashboards(state), 'ASC', 'displayName'),\n    ...arraySort(sGetUnstarredDashboards(state), 'ASC', 'displayName'),\n];\n\n// utils\n\n/**\n * Returns the array of dashboards, customized for ui\n * @function\n * @param {Array} data The original dashboard list\n * @returns {Array}\n */\nexport const getCustomDashboards = data => {\n    const uiItems = items =>\n        items.map(item => {\n            const type = isSpacerType(item) ? SPACER : item.type;\n            const text = isTextType(item)\n                ? item.text === emptyTextItemContent\n                    ? ''\n                    : item.text\n                : null;\n\n            return {\n                ...item,\n                ...(text !== null ? { text } : {}),\n                type,\n            };\n        });\n\n    return arrayFrom(data).map((d, index) => ({\n        id: d.id,\n        name: d.name,\n        displayName: d.displayName,\n        description: d.description,\n        displayDescription: d.displayDescription,\n        starred: d.favorite,\n        owner: d.user.name,\n        created: d.created\n            .split('T')\n            .join(' ')\n            .substr(0, 16),\n        lastUpdated: d.lastUpdated\n            .split('T')\n            .join(' ')\n            .substr(0, 16),\n        access: d.access,\n        numberOfItems: orArray(d.dashboardItems).length,\n        dashboardItems: uiItems(d.dashboardItems),\n    }));\n};\n","/** @module reducers/selected */\nimport { combineReducers } from 'redux';\n\nimport { validateReducer } from '../modules/util';\n\nexport const SET_SELECTED_ID = 'SET_SELECTED_ID';\nexport const SET_SELECTED_ISLOADING = 'SET_SELECTED_ISLOADING';\nexport const SET_SELECTED_SHOWDESCRIPTION = 'SET_SELECTED_SHOWDESCRIPTION';\n\nexport const DEFAULT_STATE_SELECTED_ID = null;\nexport const DEFAULT_STATE_SELECTED_ISLOADING = false;\nexport const DEFAULT_STATE_SELECTED_SHOWDESCRIPTION = false;\n\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\nconst id = (state = DEFAULT_STATE_SELECTED_ID, action) => {\n    switch (action.type) {\n        case SET_SELECTED_ID:\n            return validateReducer(action.value, DEFAULT_STATE_SELECTED_ID);\n        default:\n            return state;\n    }\n};\n\nconst isLoading = (state = DEFAULT_STATE_SELECTED_ISLOADING, action) => {\n    switch (action.type) {\n        case SET_SELECTED_ISLOADING:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_SELECTED_ISLOADING\n            );\n        default:\n            return state;\n    }\n};\n\nconst showDescription = (\n    state = DEFAULT_STATE_SELECTED_SHOWDESCRIPTION,\n    action\n) => {\n    switch (action.type) {\n        case SET_SELECTED_SHOWDESCRIPTION:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_SELECTED_SHOWDESCRIPTION\n            );\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    id,\n    isLoading,\n    showDescription,\n});\n\n// Selectors\n\nexport const sGetSelectedRoot = state => state.selected;\n\nexport const sGetSelectedId = state => sGetSelectedRoot(state).id;\n\nexport const sGetSelectedIsLoading = state => sGetSelectedRoot(state).isLoading;\n\nexport const sGetSelectedShowDescription = state =>\n    sGetSelectedRoot(state).showDescription;\n","import { orObject } from '../modules/util';\nimport objectClean from 'd2-utilizr/lib/objectClean';\n\n/** @module reducers/visualizations */\n\nexport const RECEIVED_VISUALIZATION = 'RECEIVED_VISUALIZATION';\nexport const RECEIVED_ACTIVE_VISUALIZATION = 'RECEIVED_ACTIVE_VISUALIZATION';\n\nexport const DEFAULT_STATE_VISUALIZATIONS = {};\n\nconst isEmpty = p => p === undefined || p === null;\n\nexport default (state = DEFAULT_STATE_VISUALIZATIONS, action) => {\n    switch (action.type) {\n        case RECEIVED_VISUALIZATION: {\n            return {\n                ...state,\n                [action.value.id]: objectClean(\n                    {\n                        ...orObject(state[action.value.id]),\n                        ...action.value,\n                    },\n                    isEmpty\n                ),\n            };\n        }\n        case RECEIVED_ACTIVE_VISUALIZATION: {\n            return {\n                ...state,\n                [action.id]: objectClean(\n                    {\n                        ...orObject(state[action.id]),\n                        activeType: action.activeType,\n                    },\n                    isEmpty\n                ),\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// root selector\nexport const sGetVisualizationsRoot = state => state.visualizations;\n\n// selectors level 1\nexport const sGetVisualization = (state, id) => {\n    return sGetVisualizationsRoot(state)[id];\n};\n","import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\n\nimport { getEndPointName } from './index';\n\n// Id, name\nexport const getIdNameFields = ({ rename } = {}) => [\n    'id',\n    `${rename ? 'displayName~rename(name)' : 'name,displayName'}`,\n];\n\n// Item\nexport const getItemFields = () => [\n    'dimensionItem~rename(id)',\n    'displayName~rename(name)',\n    'dimensionItemType',\n];\n\n// Dimension\nexport const getDimensionFields = ({ withItems }) =>\n    arrayClean([\n        'dimension',\n        'legendSet[id]',\n        'filter',\n        withItems ? `items[${getItemFields().join(',')}]` : ``,\n    ]);\n\n// Axis\nexport const getAxesFields = ({ withItems }) => [\n    `columns[${getDimensionFields({ withItems }).join(',')}]`,\n    `rows[${getDimensionFields({ withItems }).join(',')}]`,\n    `filters[${getDimensionFields({ withItems }).join(',')}]`,\n];\n\n// Favorite\nexport const getFavoriteFields = ({ withDimensions, withOptions }) => {\n    return arrayClean([\n        `${getIdNameFields({ rename: true }).join(',')}`,\n        'displayDescription~rename(description)',\n        withDimensions ? `${getAxesFields({ withItems: true }).join(',')}` : ``,\n        withOptions\n            ? [\n                  '*',\n                  '!attributeDimensions',\n                  '!attributeValues',\n                  '!category',\n                  '!categoryDimensions',\n                  '!categoryOptionGroupSetDimensions',\n                  '!columnDimensions',\n                  '!dataDimensionItems',\n                  '!dataElementDimensions',\n                  '!dataElementGroupSetDimensions',\n                  '!filterDimensions',\n                  '!itemOrganisationUnitGroups',\n                  '!lastUpdatedBy',\n                  '!organisationUnitGroupSetDimensions',\n                  '!organisationUnitLevels',\n                  '!organisationUnits',\n                  '!programIndicatorDimensions',\n                  '!relativePeriods',\n                  '!reportParams',\n                  '!rowDimensions',\n                  '!series',\n                  '!translations',\n                  '!userOrganisationUnit',\n                  '!userOrganisationUnitChildren',\n                  '!userOrganisationUnitGrandChildren',\n              ].join(',')\n            : '',\n    ]);\n};\n\nexport const getFavoritesFields = ({ withDimensions, withOptions }) => [\n    `reportTable[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `chart[${['type', ...getFavoriteFields({ withDimensions })].join(',')}]`,\n    `map[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `eventReport[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `eventChart[${getFavoriteFields({ withDimensions }).join(',')}]`,\n];\n\n// List item\nexport const getListItemFields = () => [\n    `reports[${getIdNameFields({ rename: true }).join(',')}]`,\n    `resources[${getIdNameFields({ rename: true }).join(',')}]`,\n    `users[${getIdNameFields({ rename: true }).join(',')}]`,\n];\n\n// Map\nexport const getMapFields = () => [\n    `${getIdNameFields({ rename: true }).join(',')}`,\n    'user,longitude,latitude,zoom,basemap',\n    `mapViews[${getFavoriteFields({\n        withDimensions: true,\n        withOptions: true,\n    })}]`,\n];\n\n// Api\n\n// Get more info about the favorite of a dashboard item\nexport const apiFetchFavorite = (id, type, { fields }) =>\n    getInstance().then(d2 =>\n        d2.Api.getApi().get(`${getEndPointName(type)}/${id}`, {\n            fields:\n                fields ||\n                getFavoriteFields({\n                    withDimensions: true,\n                    withOptions: true,\n                }),\n        })\n    );\n","import arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { itemTypeMap } from '../modules/itemTypes';\nimport {\n    getListItemFields,\n    getFavoritesFields,\n    getIdNameFields,\n} from './metadata';\n\n// Helper functions\n\nexport const onError = error => console.log('Error: ', error);\n\nexport const getEndPointName = type => itemTypeMap[type].endPointName;\n\n// Dashboard item\nexport const getDashboardItemsFields = ({ withFavorite } = {}) =>\n    arrayClean([\n        'id',\n        'type',\n        'shape',\n        'x',\n        'y',\n        'width~rename(w)',\n        'height~rename(h)',\n        'messages',\n        'text',\n        'appKey',\n        `${getListItemFields().join(',')}`,\n        withFavorite\n            ? `${getFavoritesFields({\n                  withDimensions: withFavorite.withDimensions,\n              }).join(',')}`\n            : ``,\n    ]);\n\n// Dashboard\nexport const getDashboardFields = ({ withItems, withFavorite } = {}) =>\n    arrayClean([\n        `${getIdNameFields().join(',')}`,\n        'description',\n        'displayDescription',\n        'favorite',\n        `user[${getIdNameFields({ rename: true }).join(',')}]`,\n        'created',\n        'lastUpdated',\n        'access',\n        withItems\n            ? `dashboardItems[${getDashboardItemsFields({\n                  withFavorite,\n              }).join(',')}]`\n            : ``,\n    ]);\n","import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { onError, getDashboardFields } from './index';\n\n// Get \"all\" dashboards on startup\nexport const apiFetchDashboards = () =>\n    getInstance()\n        .then(d2 =>\n            d2.models.dashboard.list({\n                fields: [\n                    getDashboardFields().join(','),\n                    'dashboardItems[id]',\n                ].join(','),\n                paging: 'false',\n            })\n        )\n        .catch(onError);\n\n// Get more info about selected dashboard\nexport const apiFetchDashboard = id =>\n    getInstance()\n        .then(d2 =>\n            d2.models.dashboard.get(id, {\n                fields: arrayClean(\n                    getDashboardFields({\n                        withItems: true,\n                        withFavorite: { withDimensions: false },\n                    })\n                ).join(','),\n            })\n        )\n        .catch(onError);\n\n// Star dashboard\nexport const apiStarDashboard = (id, isStarred) => {\n    const url = `dashboards/${id}/favorite`;\n\n    getInstance().then(d2 => {\n        if (isStarred) {\n            d2.Api.getApi().post(url);\n        } else {\n            d2.Api.getApi().delete(url);\n        }\n    });\n};\n\nexport const apiDeleteDashboard = id => {\n    return getInstance()\n        .then(d2 => {\n            return d2.models.dashboards\n                .get(id)\n                .then(dashboard => dashboard.delete());\n        })\n        .catch(onError);\n};\n","import isFunction from 'd2-utilizr/lib/isFunction';\n\nimport { orObject } from '../../modules/util';\n\n// Dimensions for the react-grid-layout\n\nexport const GRID_COMPACT_TYPE = 'vertical'; // vertical | horizonal | null\nexport const GRID_ROW_HEIGHT = 10;\nconst GRID_COLUMN_WIDTH_PX = 20;\nconst GRID_LAYOUT = 'FLEXIBLE'; // FIXED | FLEXIBLE\nexport const MARGIN = [10, 10];\n\nexport const NEW_ITEM_SHAPE = { x: 0, y: 0, w: 20, h: 29 };\nexport const ITEM_MIN_HEIGHT = 4;\n\n// Dimensions for getShape\n\nconst NUMBER_OF_ITEM_COLS = 2;\nconst GRID_COLUMNS = 60;\n\nexport const getGridColumns = () => {\n    switch (GRID_LAYOUT) {\n        case 'FLEXIBLE':\n            return GRID_COLUMNS;\n        case 'FIXED':\n            return Math.floor((window.innerWidth - 20) / GRID_COLUMN_WIDTH_PX);\n        default:\n            return GRID_COLUMNS;\n    }\n};\n\n// isNonNegativeInteger\n\nconst isNonNegativeInteger = x => Number.isInteger(x) && x >= 0;\n\n// Does the item have all the shape properties?\n\nexport const hasShape = item =>\n    isNonNegativeInteger(item.x) &&\n    isNonNegativeInteger(item.y) &&\n    isNonNegativeInteger(item.w) &&\n    isNonNegativeInteger(item.h);\n\n// returns a rectangular grid block dimensioned with x, y, w, h in grid units.\n// based on a grid with 3 items across\nexport const getShape = i => {\n    if (!isNonNegativeInteger(i)) {\n        throw new Error('Invalid grid block number');\n    }\n\n    const col = i % NUMBER_OF_ITEM_COLS;\n    const row = Math.floor(i / NUMBER_OF_ITEM_COLS);\n    const itemWidth = Math.floor((GRID_COLUMNS - 1) / NUMBER_OF_ITEM_COLS);\n    const itemHeight = GRID_ROW_HEIGHT * 2;\n\n    return {\n        x: col * itemWidth,\n        y: row * itemHeight,\n        w: itemWidth,\n        h: itemHeight,\n    };\n};\n\n/**\n * Calculates the grid item's original height in pixels based\n * on the height in grid units. This calculation\n * is copied directly from react-grid-layout GridItem.js (calcPosition)\n *\n * @param {Object} item item containing shape (x, y, w, h)\n */\nconst getOriginalHeight = item => {\n    const originalHeight = Math.round(\n        GRID_ROW_HEIGHT * item.h + Math.max(0, item.h - 1) * MARGIN[1]\n    );\n\n    return { originalHeight };\n};\n\n/**\n * Returns an array of items containing the x, y, w, h dimensions\n * and the item's originalheight in pixels\n * @function\n * @param {Array} items\n * @returns {Array}\n */\n\nexport const withShape = items =>\n    items.map((item, index) => {\n        const itemWithShape = hasShape(item)\n            ? item\n            : Object.assign({}, item, getShape(index));\n\n        return Object.assign(\n            {},\n            itemWithShape,\n            getOriginalHeight(itemWithShape)\n        );\n    });\n\nexport const getGridItemDomId = id => `item-${id}`;\n\nexport function onItemResize(id) {\n    const el = orObject(document.querySelector(`#${getGridItemDomId(id)}`));\n    if (isFunction(el.setViewportSize))\n        setTimeout(\n            () => el.setViewportSize(el.clientWidth - 5, el.clientHeight - 5),\n            10\n        );\n}\n","import update from 'immutability-helper';\nimport { arrayToIdMap } from '../modules/util';\n\nexport const RECEIVED_MESSAGES = 'RECEIVED_MESSAGES';\n\nexport default (state = {}, action) => {\n    switch (action.type) {\n        case RECEIVED_MESSAGES: {\n            const conversations = arrayToIdMap(action.value);\n\n            const newState = update(state, { $merge: conversations });\n\n            return newState;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetMessagesRoot = state => state.messages;\n","import { getInstance } from 'd2';\n\nexport const getMessages = () => {\n    const fields =\n        'id,messageCount,lastUpdated,messageType,displayName,read,messages[id,read,sender[id,displayName],text,lastUpdated]';\n    const url = `/messageConversations?fields=${fields}&order=read:asc&pageSize=200`;\n    return getInstance()\n        .then(d2 => d2.Api.getApi().get(url))\n        .catch(error => console.log('Error:', error));\n};\n","export const RECEIVED_SNACKBAR_MESSAGE = 'RECEIVED_SNACKBAR_MESSAGE';\nexport const CLOSE_SNACKBAR = 'CLOSE_SNACKBAR';\n\nexport const DEFAULT_STATE_SNACKBAR = {\n    message: {},\n    duration: null,\n    open: false,\n};\n\nexport default (state = DEFAULT_STATE_SNACKBAR, action) => {\n    switch (action.type) {\n        case RECEIVED_SNACKBAR_MESSAGE: {\n            return { ...state, ...action.value };\n        }\n        case CLOSE_SNACKBAR: {\n            return DEFAULT_STATE_SNACKBAR;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetSnackbar = state => state.snackbar || DEFAULT_STATE_SNACKBAR;\n","import {\n    RECEIVED_SNACKBAR_MESSAGE,\n    CLOSE_SNACKBAR,\n} from '../reducers/snackbar';\n\nexport const acReceivedSnackbarMessage = value => ({\n    type: RECEIVED_SNACKBAR_MESSAGE,\n    value,\n});\n\nexport const acCloseSnackbar = () => ({\n    type: CLOSE_SNACKBAR,\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Snackbar from 'material-ui/Snackbar';\n\nimport { sGetSnackbar } from '../../reducers/snackbar';\nimport { acCloseSnackbar } from '../../actions/snackbar';\n\nconst LOADING_DASHBOARD = 'LOADING_DASHBOARD';\nexport const loadingDashboardMsg = { name: '', type: LOADING_DASHBOARD };\n\nconst SnackbarMessageContent = ({ message }) => {\n    if (typeof message === 'object') {\n        //future message types:  switch(message.type)\n        return (\n            <span>\n                Loading <span style={{ fontWeight: 800 }}>{message.name}</span>{' '}\n                dashboard\n            </span>\n        );\n    }\n    return message;\n};\n\nexport const SnackbarMessage = props => {\n    return (\n        <Snackbar\n            open={props.snackbarOpen}\n            message={<SnackbarMessageContent message={props.snackbarMessage} />}\n            autoHideDuration={props.snackbarDuration}\n            onRequestClose={props.onCloseSnackbar}\n        />\n    );\n};\n\nconst mapStateToProps = state => {\n    const { message, duration, open } = sGetSnackbar(state);\n    return {\n        snackbarOpen: open,\n        snackbarMessage: message,\n        snackbarDuration: duration,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        onCloseSnackbar: acCloseSnackbar,\n    }\n)(SnackbarMessage);\n","import isObject from 'lodash/isObject';\nimport { apiFetchFavorite, getMapFields } from '../../../api/metadata';\nimport {\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_REPORT,\n    EVENT_CHART,\n    itemTypeMap,\n    getPlugin,\n} from '../../../modules/itemTypes';\nimport { getBaseUrl, getWithoutId } from '../../../modules/util';\nimport { getGridItemDomId } from '../../ItemGrid/gridUtil';\n\nexport const THEMATIC_LAYER = 'thematic';\n\nexport const pluginIsAvailable = (item = {}, visualization = {}) => {\n    const type = visualization.activeType || item.type;\n\n    return !!getPlugin(type);\n};\n\nexport const extractFavorite = item => {\n    if (!isObject(item)) {\n        return null;\n    }\n\n    switch (item.type) {\n        case REPORT_TABLE:\n            return item.reportTable;\n        case CHART:\n            return item.chart;\n        case MAP:\n            return item.map;\n        case EVENT_REPORT:\n            return item.eventReport;\n        case EVENT_CHART:\n            return item.eventChart;\n        default:\n            return (\n                item.reportTable ||\n                item.chart ||\n                item.map ||\n                item.eventReport ||\n                item.eventChart ||\n                {}\n            );\n    }\n};\n\nexport const extractMapView = map =>\n    map.mapViews && map.mapViews.find(mv => mv.layer.includes(THEMATIC_LAYER));\n\nexport const loadPlugin = (plugin, config, credentials) => {\n    if (!(plugin && plugin.load)) {\n        return;\n    }\n\n    plugin.url = credentials.baseUrl;\n    plugin.loadingIndicator = true;\n    plugin.dashboard = true;\n    if (credentials.auth) {\n        plugin.auth = credentials.auth;\n    }\n    plugin.load(config);\n};\n\nexport const getId = item => extractFavorite(item).id;\nexport const getName = item => extractFavorite(item).name;\nexport const getDescription = item => extractFavorite(item).description;\nexport const getLink = (item, d2) => {\n    const baseUrl = getBaseUrl(d2);\n    const appUrl = itemTypeMap[item.type].appUrl(getId(item));\n\n    return `${baseUrl}/${appUrl}`;\n};\n\nexport const load = async (\n    item,\n    visualization,\n    credentials,\n    activeType,\n    filter = {}\n) => {\n    const config = {\n        ...visualization,\n        el: getGridItemDomId(item.id),\n    };\n\n    const type = activeType || item.type;\n    const plugin = getPlugin(type);\n\n    loadPlugin(plugin, config, credentials);\n};\n\nexport const fetch = async item => {\n    const fetchedFavorite = await apiFetchFavorite(getId(item), item.type, {\n        fields: item.type === MAP ? getMapFields() : null,\n    });\n\n    return fetchedFavorite;\n};\n\nexport const resize = item => {\n    const plugin = getPlugin(item.type);\n\n    if (plugin && plugin.resize) {\n        plugin.resize(getGridItemDomId(item.id));\n    }\n};\n\nexport const unmount = (item, activeType) => {\n    const plugin = getPlugin(activeType);\n\n    if (plugin && plugin.unmount) {\n        plugin.unmount(getGridItemDomId(item.id));\n    }\n};\n\nexport const getVisualizationConfig = (\n    visualization,\n    originalType,\n    activeType\n) => {\n    if (originalType === MAP && originalType !== activeType) {\n        const extractedMapView = extractMapView(visualization);\n\n        if (extractedMapView === undefined) {\n            return null;\n        }\n\n        return getWithoutId({\n            ...visualization,\n            ...extractedMapView,\n            mapViews: undefined,\n        });\n    }\n\n    return getWithoutId(visualization);\n};\n","import {\n    SET_SELECTED_ID,\n    SET_SELECTED_ISLOADING,\n    SET_SELECTED_SHOWDESCRIPTION,\n} from '../reducers/selected';\nimport {\n    RECEIVED_VISUALIZATION,\n    RECEIVED_ACTIVE_VISUALIZATION,\n} from '../reducers/visualizations';\nimport { sGetSelectedIsLoading } from '../reducers/selected';\nimport { sGetUserUsername } from '../reducers/user';\nimport { getCustomDashboards, sGetDashboardById } from '../reducers/dashboards';\nimport { apiFetchDashboard } from '../api/dashboards';\nimport { acSetDashboardItems, acAppendDashboards } from './dashboards';\nimport { withShape } from '../components/ItemGrid/gridUtil';\nimport { tGetMessages } from '../components/Item/MessagesItem/actions';\nimport { acReceivedSnackbarMessage, acCloseSnackbar } from './snackbar';\nimport { storePreferredDashboardId } from '../api/localStorage';\nimport { loadingDashboardMsg } from '../components/SnackbarMessage/SnackbarMessage';\nimport {\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_REPORT,\n    EVENT_CHART,\n    MESSAGES,\n} from '../modules/itemTypes';\nimport { extractFavorite } from '../components/Item/VisualizationItem/plugin';\nimport { orObject } from '../modules/util';\n\n// actions\n\nexport const acSetSelectedId = value => ({\n    type: SET_SELECTED_ID,\n    value,\n});\n\nexport const acSetSelectedIsLoading = value => ({\n    type: SET_SELECTED_ISLOADING,\n    value,\n});\n\nexport const acSetSelectedShowDescription = value => ({\n    type: SET_SELECTED_SHOWDESCRIPTION,\n    value,\n});\n\nexport const acReceivedVisualization = value => ({\n    type: RECEIVED_VISUALIZATION,\n    value,\n});\n\nexport const acReceivedActiveVisualization = (id, type, activeType) => {\n    const action = {\n        type: RECEIVED_ACTIVE_VISUALIZATION,\n        id,\n    };\n\n    if (activeType !== type) {\n        action.activeType = activeType;\n    }\n\n    return action;\n};\n\nexport const tLoadDashboard = id => async (dispatch, getState) => {\n    try {\n        const dash = await apiFetchDashboard(id);\n        dispatch(acAppendDashboards(dash));\n\n        return Promise.resolve(dash);\n    } catch (err) {\n        console.log('Error: ', err);\n        return err;\n    }\n};\n\n// thunks\nexport const tSetSelectedDashboardById = id => async (dispatch, getState) => {\n    dispatch(acSetSelectedIsLoading(true));\n\n    const snackbarTimeout = setTimeout(() => {\n        const dashboardName = orObject(sGetDashboardById(getState(), id))\n            .displayName;\n        if (sGetSelectedIsLoading(getState()) && dashboardName) {\n            loadingDashboardMsg.name = dashboardName;\n\n            dispatch(\n                acReceivedSnackbarMessage({\n                    message: loadingDashboardMsg,\n                    open: true,\n                })\n            );\n        }\n    }, 500);\n\n    const onSuccess = selected => {\n        const customDashboard = getCustomDashboards(selected)[0];\n\n        dispatch(\n            acSetDashboardItems(withShape(customDashboard.dashboardItems))\n        );\n\n        storePreferredDashboardId(sGetUserUsername(getState()), id);\n\n        // add visualizations to store\n        customDashboard.dashboardItems.forEach(item => {\n            switch (item.type) {\n                case REPORT_TABLE:\n                case CHART:\n                case MAP:\n                case EVENT_REPORT:\n                case EVENT_CHART:\n                    dispatch(acReceivedVisualization(extractFavorite(item)));\n                    break;\n                case MESSAGES:\n                    dispatch(tGetMessages(id));\n                    break;\n                default:\n                    break;\n            }\n        });\n\n        dispatch(acSetSelectedId(id));\n\n        dispatch(acSetSelectedIsLoading(false));\n\n        clearTimeout(snackbarTimeout);\n\n        dispatch(acCloseSnackbar());\n\n        return selected;\n    };\n\n    const onError = error => {\n        console.log('Error: ', error);\n        return error;\n    };\n\n    try {\n        const selected = await dispatch(tLoadDashboard(id));\n\n        return onSuccess(selected);\n    } catch (err) {\n        return onError(err);\n    }\n};\n","export const getPreferredDashboardId = username =>\n    localStorage.getItem(`dhis2.dashboard.current.${username}`) || undefined;\n\nexport const storePreferredDashboardId = (username, dashboardId) => {\n    localStorage.setItem(`dhis2.dashboard.current.${username}`, dashboardId);\n};\n","import { RECEIVED_MESSAGES } from '../../../reducers/messages';\nimport { getMessages } from '../../../api/messages';\n\nconst onError = (action, error) => {\n    console.log(`Error in action ${action}: ${error}`);\n    return error;\n};\n\nexport const receivedMessages = value => ({\n    type: RECEIVED_MESSAGES,\n    value,\n});\n\nexport const tGetMessages = dashboardItemId => async dispatch => {\n    try {\n        const messages = await getMessages();\n        const { messageConversations } = messages;\n\n        return dispatch(receivedMessages(messageConversations));\n    } catch (err) {\n        return onError('Get Messages', err);\n    }\n};\n","/** @module reducers/editDashboard */\nimport update from 'immutability-helper';\nimport isEmpty from 'lodash/isEmpty';\nimport { orArray, orObject } from '../modules/util';\n\nexport const RECEIVED_EDIT_DASHBOARD = 'RECEIVED_EDIT_DASHBOARD';\nexport const RECEIVED_NOT_EDITING = 'RECEIVED_NOT_EDITING';\nexport const START_NEW_DASHBOARD = 'START_NEW_DASHBOARD';\nexport const RECEIVED_TITLE = 'RECEIVED_TITLE';\nexport const RECEIVED_DESCRIPTION = 'RECEIVED_DESCRIPTION';\nexport const ADD_DASHBOARD_ITEM = 'ADD_DASHBOARD_ITEM';\nexport const REMOVE_DASHBOARD_ITEM = 'REMOVE_DASHBOARD_ITEM';\nexport const UPDATE_DASHBOARD_ITEM = 'UPDATE_DASHBOARD_ITEM';\nexport const RECEIVED_DASHBOARD_LAYOUT = 'RECEIVED_DASHBOARD_LAYOUT';\n\nexport const DEFAULT_STATE_EDIT_DASHBOARD = {};\nexport const NEW_DASHBOARD_STATE = {\n    id: '',\n    name: '',\n    access: {},\n    description: '',\n    dashboardItems: [],\n};\n\nexport default (state = DEFAULT_STATE_EDIT_DASHBOARD, action) => {\n    switch (action.type) {\n        case RECEIVED_EDIT_DASHBOARD:\n            const newState = {};\n            Object.keys(NEW_DASHBOARD_STATE).map(\n                k => (newState[k] = action.value[k])\n            );\n            return newState;\n        case RECEIVED_NOT_EDITING:\n            return DEFAULT_STATE_EDIT_DASHBOARD;\n        case START_NEW_DASHBOARD:\n            return NEW_DASHBOARD_STATE;\n        case RECEIVED_TITLE: {\n            return Object.assign({}, state, { name: action.value });\n        }\n        case RECEIVED_DESCRIPTION: {\n            return Object.assign({}, state, {\n                description: action.value,\n            });\n        }\n        case ADD_DASHBOARD_ITEM:\n            return update(state, {\n                dashboardItems: { $unshift: [action.value] },\n            });\n        case REMOVE_DASHBOARD_ITEM: {\n            const idToRemove = action.value;\n\n            const dashboardItemIndex = state.dashboardItems.findIndex(\n                item => item.id === idToRemove\n            );\n\n            if (dashboardItemIndex > -1) {\n                return update(state, {\n                    dashboardItems: {\n                        $splice: [[dashboardItemIndex, 1]],\n                    },\n                });\n            }\n\n            return state;\n        }\n        case RECEIVED_DASHBOARD_LAYOUT: {\n            const stateItems = orArray(state.dashboardItems);\n\n            const newStateItems = action.value.map(({ x, y, w, h, i }) => {\n                const stateItem = stateItems.find(si => si.id === i);\n\n                return Object.assign({}, stateItem, { w, h, x, y });\n            });\n\n            return update(state, {\n                dashboardItems: { $set: newStateItems },\n            });\n        }\n        case UPDATE_DASHBOARD_ITEM: {\n            const dashboardItem = action.value;\n\n            const dashboardItemIndex = state.dashboardItems.findIndex(\n                item => item.id === dashboardItem.id\n            );\n\n            if (dashboardItemIndex > -1) {\n                const newState = update(state, {\n                    dashboardItems: {\n                        $splice: [[dashboardItemIndex, 1, dashboardItem]],\n                    },\n                });\n\n                return newState;\n            }\n\n            return state;\n        }\n        default:\n            return state;\n    }\n};\n\n// root selector\n\nexport const sGetEditDashboardRoot = state => state.editDashboard;\n\n// selectors\n\nexport const sGetIsEditing = state => !isEmpty(state.editDashboard);\n\nexport const sGetIsNewDashboard = state => {\n    return (\n        !isEmpty(state.editDashboard) && sGetEditDashboardRoot(state).id === ''\n    );\n};\n\nexport const sGetEditDashboardItems = state =>\n    orObject(sGetEditDashboardRoot(state)).dashboardItems;\n","export const CLEAR_EDIT_ITEM_FILTERS = 'CLEAR_EDIT_ITEM_FILTERS';\nexport const REMOVE_EDIT_ITEM_FILTER = 'REMOVE_EDIT_ITEM_FILTER';\nexport const SET_EDIT_ITEM_FILTERS = 'SET_EDIT_ITEM_FILTERS';\n\nexport const DEFAULT_STATE_EDIT_ITEM_FILTERS = {};\n\nexport default (state = DEFAULT_STATE_EDIT_ITEM_FILTERS, action) => {\n    switch (action.type) {\n        case REMOVE_EDIT_ITEM_FILTER: {\n            const newState = { ...state };\n\n            delete newState[action.id];\n\n            return newState;\n        }\n        case SET_EDIT_ITEM_FILTERS: {\n            return action.filters;\n        }\n        case CLEAR_EDIT_ITEM_FILTERS: {\n            return DEFAULT_STATE_EDIT_ITEM_FILTERS;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetEditItemFiltersRoot = state => state.editItemFilters;\n\nexport const sGetEditFiltersKeys = state =>\n    Object.keys(sGetEditItemFiltersRoot(state));\n","export const CLEAR_ITEM_FILTERS = 'CLEAR_ITEM_FILTERS';\nexport const SET_ITEM_FILTERS = 'SET_ITEM_FILTERS';\nexport const ADD_ITEM_FILTER = 'ADD_ITEM_FILTER';\nexport const REMOVE_ITEM_FILTER = 'REMOVE_ITEM_FILTER';\n\nexport const DEFAULT_STATE_ITEM_FILTERS = {};\n\nexport default (state = DEFAULT_STATE_ITEM_FILTERS, action) => {\n    switch (action.type) {\n        case ADD_ITEM_FILTER: {\n            return {\n                ...state,\n                [action.filter.id]: action.filter.value,\n            };\n        }\n        case REMOVE_ITEM_FILTER: {\n            const newState = { ...state };\n\n            delete newState[action.id];\n\n            return newState;\n        }\n        case SET_ITEM_FILTERS: {\n            return action.filters;\n        }\n        case CLEAR_ITEM_FILTERS: {\n            return DEFAULT_STATE_ITEM_FILTERS;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetItemFiltersRoot = state => state.itemFilters;\n\nexport const sGetFiltersKeys = state => Object.keys(sGetItemFiltersRoot(state));\n","import {\n    ADD_ITEM_FILTER,\n    REMOVE_ITEM_FILTER,\n    SET_ITEM_FILTERS,\n    CLEAR_ITEM_FILTERS,\n} from '../reducers/itemFilters';\n\nexport const FILTER_ORG_UNIT = 'ou';\n\n// actions\n\nexport const acAddItemFilter = filter => ({\n    type: ADD_ITEM_FILTER,\n    filter,\n});\n\nexport const acRemoveItemFilter = id => ({\n    type: REMOVE_ITEM_FILTER,\n    id,\n});\n\nexport const acClearItemFilters = () => ({\n    type: CLEAR_ITEM_FILTERS,\n});\n\nexport const acSetItemFilters = filters => ({\n    type: SET_ITEM_FILTERS,\n    filters,\n});\n","import {\n    REMOVE_EDIT_ITEM_FILTER,\n    SET_EDIT_ITEM_FILTERS,\n    CLEAR_EDIT_ITEM_FILTERS,\n} from '../reducers/editItemFilters';\n\n// actions\n\nexport const acRemoveEditItemFilter = id => ({\n    type: REMOVE_EDIT_ITEM_FILTER,\n    id,\n});\n\nexport const acClearEditItemFilters = () => ({\n    type: CLEAR_EDIT_ITEM_FILTERS,\n});\n\nexport const acSetEditItemFilters = filters => ({\n    type: SET_EDIT_ITEM_FILTERS,\n    filters,\n});\n","import { getInstance } from 'd2';\n\nconst onError = error => console.log('Error: ', error);\n\nconst saveDashboard = (dashboard, data) => {\n    const { name, description, dashboardItems } = data;\n\n    dashboard.name = name;\n    dashboard.description = description;\n    dashboard.dashboardItems = dashboardItems.map(item =>\n        Object.assign({}, item, { width: item.w, height: item.h })\n    );\n\n    return dashboard.save().then(msg => msg.response.uid);\n};\n\nexport const updateDashboard = data => {\n    return getInstance()\n        .then(d2 => {\n            return d2.models.dashboards\n                .get(data.id)\n                .then(dashboard => saveDashboard(dashboard, data));\n        })\n        .catch(onError);\n};\n\nexport const postDashboard = data => {\n    return getInstance().then(d2 => {\n        const dashboard = d2.models.dashboards.create();\n\n        return saveDashboard(dashboard, data);\n    });\n};\n","import { generateUid } from 'd2/uid';\n\nimport {\n    RECEIVED_EDIT_DASHBOARD,\n    START_NEW_DASHBOARD,\n    RECEIVED_NOT_EDITING,\n    RECEIVED_TITLE,\n    RECEIVED_DESCRIPTION,\n    RECEIVED_DASHBOARD_LAYOUT,\n    ADD_DASHBOARD_ITEM,\n    UPDATE_DASHBOARD_ITEM,\n    REMOVE_DASHBOARD_ITEM,\n} from '../reducers/editDashboard';\nimport { sGetEditDashboardRoot } from '../reducers/editDashboard';\nimport { updateDashboard, postDashboard } from '../api/editDashboard';\nimport { tSetSelectedDashboardById } from '../actions/selected';\nimport { NEW_ITEM_SHAPE } from '../components/ItemGrid/gridUtil';\nimport {\n    itemTypeMap,\n    isSpacerType,\n    TEXT,\n    emptyTextItemContent,\n    isTextType,\n} from '../modules/itemTypes';\n\nconst onError = error => {\n    console.log('Error (Saving Dashboard): ', error);\n    return error;\n};\n\n// actions\n\nexport const acSetEditDashboard = (dashboard, items) => {\n    const val = {\n        ...dashboard,\n        dashboardItems: items,\n    };\n\n    return {\n        type: RECEIVED_EDIT_DASHBOARD,\n        value: val,\n    };\n};\n\nexport const acSetEditNewDashboard = () => ({\n    type: START_NEW_DASHBOARD,\n});\n\nexport const acClearEditDashboard = () => ({\n    type: RECEIVED_NOT_EDITING,\n});\n\nexport const acSetDashboardTitle = value => ({\n    type: RECEIVED_TITLE,\n    value,\n});\n\nexport const acSetDashboardDescription = value => ({\n    type: RECEIVED_DESCRIPTION,\n    value,\n});\n\nexport const acUpdateDashboardLayout = value => ({\n    type: RECEIVED_DASHBOARD_LAYOUT,\n    value,\n});\n\nexport const acAddDashboardItem = item => {\n    const type = item.type;\n    delete item.type;\n    const itemPropName = itemTypeMap[type].propName;\n\n    return {\n        type: ADD_DASHBOARD_ITEM,\n        value: {\n            id: generateUid(),\n            type,\n            [itemPropName]: item.content,\n            ...NEW_ITEM_SHAPE,\n        },\n    };\n};\n\nexport const acUpdateDashboardItem = item => ({\n    type: UPDATE_DASHBOARD_ITEM,\n    value: item,\n});\n\nexport const acRemoveDashboardItem = value => ({\n    type: REMOVE_DASHBOARD_ITEM,\n    value,\n});\n\n// thunks\n\nexport const tSaveDashboard = () => async (dispatch, getState) => {\n    const dashboard = sGetEditDashboardRoot(getState());\n\n    const dashboardItems = dashboard.dashboardItems.map(item => {\n        const text = isTextType(item)\n            ? item.text || emptyTextItemContent\n            : null;\n\n        const type = isSpacerType(item) ? TEXT : item.type;\n\n        return {\n            ...item,\n            ...(text ? { text } : {}),\n            type,\n        };\n    });\n\n    const dashboardToSave = {\n        ...dashboard,\n        dashboardItems,\n    };\n\n    try {\n        const dashboardId = dashboardToSave.id\n            ? await updateDashboard(dashboardToSave)\n            : await postDashboard(dashboardToSave);\n\n        dispatch(acClearEditDashboard());\n        await dispatch(tSetSelectedDashboardById(dashboardId));\n\n        return Promise.resolve(dashboardId);\n    } catch (error) {\n        onError(error);\n    }\n};\n","import {\n    SET_DASHBOARDS,\n    ADD_DASHBOARDS,\n    SET_DASHBOARD_STARRED,\n    SET_DASHBOARD_DISPLAY_NAME,\n    SET_DASHBOARD_ITEMS,\n} from '../reducers/dashboards';\nimport {\n    getCustomDashboards,\n    sGetDashboardById,\n    sGetDashboardsSortedByStarred,\n} from '../reducers/dashboards';\nimport { sGetUserUsername } from '../reducers/user';\nimport { tSetSelectedDashboardById, acSetSelectedId } from './selected';\nimport { sGetSelectedId } from '../reducers/selected';\nimport { sGetIsEditing } from '../reducers/editDashboard';\nimport { sGetEditItemFiltersRoot } from '../reducers/editItemFilters';\nimport { acSetItemFilters, acClearItemFilters } from './itemFilters';\nimport { acClearEditItemFilters } from './editItemFilters';\nimport { acClearEditDashboard } from './editDashboard';\nimport {\n    apiFetchDashboards,\n    apiStarDashboard,\n    apiDeleteDashboard,\n} from '../api/dashboards';\nimport { getPreferredDashboardId } from '../api/localStorage';\nimport { arrayToIdMap } from '../modules/util';\n\n// actions\n\nexport const acSetDashboards = dashboards => ({\n    type: SET_DASHBOARDS,\n    value: arrayToIdMap(getCustomDashboards(dashboards)),\n});\n\nexport const acAppendDashboards = dashboards => ({\n    type: ADD_DASHBOARDS,\n    value: arrayToIdMap(getCustomDashboards(dashboards)),\n});\n\nexport const acSetDashboardStarred = (dashboardId, isStarred) => ({\n    type: SET_DASHBOARD_STARRED,\n    dashboardId: dashboardId,\n    value: isStarred,\n});\n\nexport const acSetDashboardDisplayName = (dashboardId, value) => ({\n    type: SET_DASHBOARD_DISPLAY_NAME,\n    dashboardId,\n    value,\n});\n\nexport const acSetDashboardItems = value => ({\n    type: SET_DASHBOARD_ITEMS,\n    value,\n});\n\n// thunks\n\nexport const tFetchDashboards = () => async dispatch => {\n    const collection = await apiFetchDashboards();\n    dispatch(acSetDashboards(collection.toArray()));\n};\n\nexport const tSelectDashboard = id => async (dispatch, getState) => {\n    const onError = error => {\n        console.log('Error (apiFetchDashboards): ', error);\n        return error;\n    };\n\n    try {\n        const state = getState();\n\n        let dashboardToSelect = null;\n        if (id) {\n            dashboardToSelect = sGetDashboardById(state, id) || null;\n        } else {\n            const preferredId = getPreferredDashboardId(\n                sGetUserUsername(state)\n            );\n            const dash = sGetDashboardById(state, preferredId);\n            dashboardToSelect =\n                preferredId && dash\n                    ? dash\n                    : sGetDashboardsSortedByStarred(state)[0];\n        }\n\n        if (dashboardToSelect) {\n            dispatch(tSetSelectedDashboardById(dashboardToSelect.id));\n\n            if (dashboardToSelect.id === sGetSelectedId(state)) {\n                if (sGetIsEditing(state)) {\n                    // disable filters when switching to edit mode\n                    dispatch(acClearItemFilters());\n                } else {\n                    // enable filters when switching to view mode\n                    dispatch(acSetItemFilters(sGetEditItemFiltersRoot(state)));\n                }\n            } else {\n                // clear filters when switching dashboard\n                dispatch(acClearEditItemFilters());\n                dispatch(acClearItemFilters());\n            }\n        } else {\n            dispatch(acSetSelectedId(false));\n        }\n    } catch (err) {\n        return onError(err);\n    }\n};\n\nexport const tStarDashboard = (id, isStarred) => async (dispatch, getState) => {\n    const onSuccess = id => {\n        dispatch(acSetDashboardStarred(id, isStarred));\n        return id;\n    };\n\n    const onError = error => {\n        console.log('Error (apiStarDashboard): ', error);\n        return error;\n    };\n    try {\n        await apiStarDashboard(id, isStarred);\n        return onSuccess(id);\n    } catch (err) {\n        return onError(err);\n    }\n};\n\nexport const tDeleteDashboard = id => async (dispatch, getState) => {\n    try {\n        await apiDeleteDashboard(id);\n        dispatch(acClearEditDashboard());\n        dispatch(acSetSelectedId());\n        dispatch(acSetDashboardItems([]));\n\n        await dispatch(tFetchDashboards());\n\n        return Promise.resolve();\n    } catch (err) {\n        console.log('Error (deleteDashboard): ', err);\n        return err;\n    }\n};\n","/** @module reducers/controlBar */\nimport { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\n\nexport const SET_CONTROLBAR_USER_ROWS = 'SET_CONTROLBAR_USER_ROWS';\n\nexport const DEFAULT_STATE_CONTROLBAR_ROWS = 1;\n\nconst userRows = (state = DEFAULT_STATE_CONTROLBAR_ROWS, action) => {\n    switch (action.type) {\n        case SET_CONTROLBAR_USER_ROWS:\n            return validateReducer(action.value, DEFAULT_STATE_CONTROLBAR_ROWS);\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    userRows,\n});\n\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\nexport const sGetControlBarRoot = state => state.controlBar;\n\n// Selector dependency level 2\n\nexport const sGetControlBarUserRows = state =>\n    sGetControlBarRoot(state).userRows;\n","import { getInstance } from 'd2';\nimport { DEFAULT_STATE_CONTROLBAR_ROWS } from '../reducers/controlBar';\n\nconst NAMESPACE = 'dashboard';\nconst KEY = 'controlBarRows';\n\nconst hasNamespace = async d2 => await d2.currentUser.dataStore.has(NAMESPACE);\n\nconst getNamespace = async (d2, hasNamespace) =>\n    hasNamespace\n        ? await d2.currentUser.dataStore.get(NAMESPACE)\n        : await d2.currentUser.dataStore.create(NAMESPACE);\n\nexport const apiGetControlBarRows = async () => {\n    const d2 = await getInstance();\n    const namespace = await getNamespace(d2, await hasNamespace(d2));\n    const hasKey = namespace.keys && namespace.keys.find(key => key === KEY);\n\n    if (hasKey) {\n        return await namespace.get(KEY);\n    } else {\n        await apiPostControlBarRows(DEFAULT_STATE_CONTROLBAR_ROWS, namespace);\n        console.log(\n            '(These errors to /userDataStore/dashboard can be ignored)'\n        );\n        return DEFAULT_STATE_CONTROLBAR_ROWS;\n    }\n};\n\nexport const apiPostControlBarRows = async (rows, namespace) => {\n    const d2 = await getInstance();\n    const ns = namespace || (await getNamespace(d2, hasNamespace));\n\n    ns.set(KEY, rows);\n};\n","import { SET_CONTROLBAR_USER_ROWS } from '../reducers/controlBar';\nimport { apiGetControlBarRows } from '../api/controlBar';\n\n// actions\n\nexport const acSetControlBarUserRows = rows => ({\n    type: SET_CONTROLBAR_USER_ROWS,\n    value: rows,\n});\n\n// thunks\n\nexport const tSetControlBarRows = () => async (dispatch, getState) => {\n    const onSuccess = rows => {\n        dispatch(acSetControlBarUserRows(rows));\n    };\n\n    const onError = error => {\n        console.log('Error (apiGetControlBarRows): ', error);\n        return error;\n    };\n\n    try {\n        const controlBarRows = await apiGetControlBarRows();\n        return onSuccess(controlBarRows);\n    } catch (err) {\n        return onError(err);\n    }\n};\n","import { FIXED_DIMENSIONS } from '@dhis2/d2-ui-analytics';\n\nexport const SET_DIMENSIONS = 'SET_DIMENSIONS';\nexport const DEFAULT_DIMENSIONS = {\n    pe: FIXED_DIMENSIONS.pe,\n    ou: FIXED_DIMENSIONS.ou,\n};\n\nexport default (state = DEFAULT_DIMENSIONS, action) => {\n    switch (action.type) {\n        case SET_DIMENSIONS: {\n            return {\n                ...DEFAULT_DIMENSIONS,\n                ...action.value,\n            };\n        }\n        default:\n            return state;\n    }\n};\n\nexport const sGetDimensions = state => state.dimensions;\n","export const SET_SETTINGS = 'SET_SETTINGS';\nexport const ADD_SETTINGS = 'ADD_SETTINGS';\n\nexport const DEFAULT_SETTINGS = {\n    keyDateFormat: 'yyyy-MM-dd',\n    keyAnalysisRelativePeriod: 'LAST_12_MONTHS',\n    keyAnalysisDigitGroupSeparator: 'SPACE',\n    displayNameProperty: 'displayName',\n    uiLocale: 'en',\n    rootOrganisationUnit: {},\n};\n\nexport default (state = DEFAULT_SETTINGS, action) => {\n    switch (action.type) {\n        case SET_SETTINGS: {\n            return Object.assign({}, action.value);\n        }\n        case ADD_SETTINGS: {\n            return {\n                ...state,\n                ...action.value,\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// Selectors\n\nexport const sGetSettings = state => state.settings;\n\nexport const sGetSettingsDisplayNameProperty = state =>\n    sGetSettings(state).displayNameProperty;\n\nexport const sGetRootOrgUnit = state =>\n    sGetSettings(state).rootOrganisationUnit;\n\nexport const sGetRelativePeriod = state =>\n    sGetSettings(state).keyAnalysisRelativePeriod;\n\nexport const sGetUiLocale = state => sGetSettings(state).uiLocale;\n","import keyBy from 'lodash/keyBy';\nimport sortBy from 'lodash/sortBy';\nimport { SET_DIMENSIONS } from '../reducers/dimensions';\nimport { apiFetchDimensions } from '@dhis2/d2-ui-analytics';\nimport { sGetSettingsDisplayNameProperty } from '../reducers/settings';\n\nexport const acSetDimensions = dimensions => ({\n    type: SET_DIMENSIONS,\n    value: keyBy(sortBy(dimensions, [d => d.name.toLowerCase()]), 'id'),\n});\n\nexport const tSetDimensions = d2 => async (dispatch, getState) => {\n    const onSuccess = dimensions => {\n        dispatch(acSetDimensions(dimensions));\n    };\n\n    const onError = error => {\n        console.log('Error (apiFetchDimensions): ', error);\n        return error;\n    };\n\n    try {\n        const displayNameProp = sGetSettingsDisplayNameProperty(getState());\n        const dimensions = await apiFetchDimensions(d2, displayNameProp);\n\n        // filter out CATEGORY that are not of type ATTRIBUTE\n        const filteredDimensions = dimensions.filter(\n            dim =>\n                dim.dimensionType !== 'CATEGORY' ||\n                (dim.dimensionType === 'CATEGORY' &&\n                    dim.dataDimensionType === 'ATTRIBUTE')\n        );\n        return onSuccess(filteredDimensions);\n    } catch (err) {\n        return onError(err);\n    }\n};\n","const lightGrey = '#ECEFF1';\nconst lightMediumGrey = '#9E9E9E';\nconst mediumGrey = '#393939';\nconst charcoalGrey = '#8C8C8C';\nconst darkGrey = '#494949';\nconst muiDefaultGrey = '#757575';\n\nconst red = '#E53935';\n\nconst paleBlue = '#E3F2FD';\nconst lightBlue = '#EAF4FF'; //'#63A4FF'\nconst royalBlue = '#004BA0';\n\nconst mint = '#B2DFDB';\nconst lightGreen = '#48A999';\nconst mediumGreen = '#00796B';\nconst darkGreen = '#004C40';\n\nconst paleYellow = '#FFF8E1';\n\nconst white = '#FFFFFF';\nconst black = 'rgba(0,0,0,0.87)';\n\nexport const colors = {\n    lightGrey,\n    lightMediumGrey,\n    mediumGrey,\n    charcoalGrey,\n    darkGrey,\n    muiDefaultGrey,\n    red,\n    paleBlue,\n    lightBlue,\n    royalBlue,\n    mint,\n    lightGreen,\n    mediumGreen,\n    darkGreen,\n    paleYellow,\n    white,\n    black,\n};\n","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport { colors } from '../../modules/colors';\n\nexport const SHOWMORE_BAR_HEIGHT = 16;\n\nconst styles = {\n    showMore: {\n        color: colors.royalBlue,\n        cursor: 'pointer',\n        fontSize: 11,\n        fontWeight: 700,\n        height: SHOWMORE_BAR_HEIGHT,\n        paddingTop: 5,\n        textTransform: 'uppercase',\n        visibility: 'visible',\n    },\n};\n\nexport const ShowMoreButton = ({ onClick, isMaxHeight, classes }) => (\n    <div style={{ textAlign: 'center' }}>\n        <div className={classes.showMore} onClick={onClick}>\n            {isMaxHeight ? i18n.t('Show less') : i18n.t('Show more')}\n        </div>\n    </div>\n);\n\nexport default withStyles(styles)(ShowMoreButton);\n","import { SHOWMORE_BAR_HEIGHT } from './ShowMoreButton';\n\nexport const CONTROL_BAR_ROW_HEIGHT = 36;\nexport const FIRST_ROW_PADDING_HEIGHT = 10;\nexport const MIN_ROW_COUNT = 1;\n\nexport const HEADERBAR_HEIGHT = 48;\n\nconst CONTROL_BAR_OUTER_HEIGHT_DIFF =\n    FIRST_ROW_PADDING_HEIGHT + SHOWMORE_BAR_HEIGHT - 2; // 2 pixel \"adjustment\"\n\nexport const getRowsHeight = rows => {\n    return rows * CONTROL_BAR_ROW_HEIGHT;\n};\n\nexport const getNumRowsFromHeight = height => {\n    return Math.floor(\n        (height - CONTROL_BAR_OUTER_HEIGHT_DIFF) / CONTROL_BAR_ROW_HEIGHT\n    );\n};\n\nexport const getTopOffset = rows => {\n    return HEADERBAR_HEIGHT + getControlBarHeight(rows, false);\n};\n\nexport const getControlBarHeight = rows => {\n    return getRowsHeight(rows) + CONTROL_BAR_OUTER_HEIGHT_DIFF;\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { colors } from '@dhis2/ui-core';\nimport { HEADERBAR_HEIGHT } from './controlBarDimensions';\n\nimport classes from './styles/ControlBar.module.css';\n\nconst DRAG_HANDLE_HEIGHT = 7;\n\nclass ControlBar extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            dragging: false,\n        };\n    }\n\n    onStartDrag = () => {\n        this.setState({ dragging: true });\n        window.addEventListener('mousemove', this.onDrag);\n        window.addEventListener('mouseup', this.onEndDrag);\n    };\n\n    onDrag = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const newHeight = event.clientY;\n\n        if (\n            this.props.onChangeHeight &&\n            newHeight !== this.props.height &&\n            newHeight > 0\n        ) {\n            requestAnimationFrame(() => {\n                this.props.onChangeHeight(newHeight);\n            });\n        }\n    };\n\n    onEndDrag = () => {\n        this.setState({ dragging: false });\n        window.removeEventListener('mousemove', this.onDrag);\n        window.removeEventListener('mouseup', this.onEndDrag);\n\n        if (this.props.onEndDrag) {\n            this.props.onEndDrag();\n        }\n    };\n\n    renderDragHandle() {\n        return typeof this.props.onChangeHeight === 'function' ? (\n            <div\n                className={classes.draghandle}\n                style={{ height: DRAG_HANDLE_HEIGHT }}\n                onMouseDown={this.onStartDrag}\n            />\n        ) : null;\n    }\n\n    render() {\n        const height = Math.max(this.props.height, 0) + DRAG_HANDLE_HEIGHT;\n\n        const rootStyle = Object.assign(\n            {\n                height,\n                top: HEADERBAR_HEIGHT,\n                backgroundColor: this.props.editMode\n                    ? colors.yellow050\n                    : colors.white,\n                paddingBottom: DRAG_HANDLE_HEIGHT,\n            },\n            // Disable animations while dragging\n            this.state.dragging ? { transition: 'none' } : {}\n        );\n\n        return (\n            <div style={rootStyle} className={classes.root}>\n                <div className={classes.content}>{this.props.children}</div>\n                {this.renderDragHandle()}\n            </div>\n        );\n    }\n}\n\nControlBar.propTypes = {\n    /**\n     * The height of the control bar in number of lines. Must be a positive integer.\n     */\n    height: PropTypes.number.isRequired,\n\n    /**\n     * If true, the background color of the control bar changes to indicate that edit mode is active.\n     */\n    editMode: PropTypes.bool.isRequired,\n\n    /**\n     * Callback function that is called when the control bar is resized.\n     * The callback receives one argument: The new height in pixels.\n     *\n     * If no callback is specified the control bar will not have a drag handle.\n     */\n    onChangeHeight: PropTypes.func,\n\n    /**\n     * Callback function that is called when the control bar is dropped after being dragged.\n     * The callback receives one argument: The new height in pixels.\n     *\n     * Ignored if no \"onChangeHeight\" function is provided.\n     */\n    onEndDrag: PropTypes.func,\n\n    /**\n     * The contents of the control bar.\n     */\n    children: PropTypes.node.isRequired,\n};\n\nControlBar.defaultProps = {\n    onChangeHeight: null,\n    onEndDrag: null,\n};\n\nexport default ControlBar;\n","import { getInstance } from 'd2';\n\nexport const apiPostDataStatistics = async (eventType, id) => {\n    const d2 = await getInstance();\n    const url = `dataStatistics?eventType=${eventType}&favorite=${id}`;\n\n    d2.Api.getApi().post(url);\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport MuiChip from 'material-ui/Chip';\nimport Avatar from 'material-ui/Avatar';\nimport IconStar from '@material-ui/icons/Star';\nimport { Link } from 'react-router-dom';\nimport debounce from 'lodash/debounce';\n\nimport { colors } from '../../modules/colors';\nimport { apiPostDataStatistics } from '../../api/dataStatistics';\n\nconst chipTheme = {\n    default: {\n        labelColor: colors.black,\n        backgroundColor: colors.lightGrey,\n    },\n    primary: {\n        labelColor: colors.black,\n        backgroundColor: colors.lightGrey,\n    },\n    accent: {\n        labelColor: colors.white,\n        backgroundColor: colors.mediumGreen,\n    },\n};\n\nconst d = '30px';\n\nconst avatar = selected => {\n    const avatarProps = {\n        color: colors.white,\n        backgroundColor: selected ? 'transparent' : colors.lightMediumGrey,\n        style: { height: d, width: d },\n    };\n\n    return <Avatar icon={<IconStar />} {...avatarProps} />;\n};\n\nconst DashboardItemChip = ({ starred, selected, label, dashboardId }) => {\n    const chipColorProps = selected\n        ? chipTheme.accent\n        : starred\n        ? chipTheme.primary\n        : chipTheme.default;\n\n    const labelStyle = { fontSize: '14px', fontWeight: 400, lineHeight: d };\n    const style = { margin: 3, height: d, cursor: 'pointer' };\n\n    const props = {\n        style,\n        labelStyle,\n        ...chipColorProps,\n    };\n\n    return (\n        <Link\n            style={{\n                display: 'inline-block',\n                verticalAlign: 'top',\n                textDecoration: 'none',\n            }}\n            to={`/${dashboardId}`}\n            onClick={debounce(\n                () => apiPostDataStatistics('DASHBOARD_VIEW', dashboardId),\n                500\n            )}\n        >\n            <MuiChip {...props}>\n                {starred ? avatar(selected) : null}\n                {label}\n            </MuiChip>\n        </Link>\n    );\n};\n\nDashboardItemChip.propTypes = {\n    starred: PropTypes.bool.isRequired,\n    selected: PropTypes.bool.isRequired,\n    label: PropTypes.string.isRequired,\n};\n\nexport default DashboardItemChip;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport IconButton from 'material-ui/IconButton';\nimport IconAdd from 'material-ui/svg-icons/content/add-circle';\nimport { colors } from '../modules/colors';\n\nconst styles = {\n    button: {\n        width: 36,\n        height: 36,\n        padding: 0,\n    },\n    iconStyle: {\n        width: 32,\n        height: 32,\n    },\n    icon: IconAdd,\n    iconColor: colors.mediumGreen,\n};\n\nconst D2IconButton = props => (\n    <IconButton\n        style={styles.button}\n        iconStyle={Object.assign({}, styles.iconStyle, props.iconStyle)}\n        onClick={props.onClick}\n    >\n        {props.icon || <IconAdd color={styles.iconColor} />}\n    </IconButton>\n);\n\nD2IconButton.propTypes = {\n    style: PropTypes.object,\n    iconStyle: PropTypes.object,\n    icon: PropTypes.object,\n    iconColor: PropTypes.string,\n    onClick: PropTypes.func,\n};\n\nD2IconButton.defaultProps = {\n    style: null,\n    iconStyle: null,\n    icon: null,\n    iconColor: '',\n    onClick: Function.prototype,\n};\n\nexport default D2IconButton;\n","import { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\n\nexport const SET_DASHBOARDS_FILTER_NAME = 'SET_DASHBOARDS_FILTER_NAME';\nexport const SET_DASHBOARDS_FILTER_OWNER = 'SET_DASHBOARDS_FILTER_OWNER';\nexport const SET_DASHBOARDS_FILTER_ORDER = 'SET_DASHBOARDS_FILTER_ORDER';\n\nexport const ownerData = [\n    { id: 'ALL', value: 'All users' },\n    { id: 'ME', value: 'Created by me' },\n    { id: 'OTHERS', value: 'Created by others' },\n];\n\nexport const orderData = [\n    { id: 'NAME:ASC', value: 'Name (asc)' },\n    { id: 'NAME:ASC', value: 'Name (desc)' },\n    { id: 'ITEMS:ASC', value: 'Number of items (asc)' },\n    { id: 'ITEMS:ASC', value: 'Number of items (desc)' },\n    { id: 'CREATED:ASC', value: 'Created date (asc)' },\n    { id: 'CREATED:ASC', value: 'Created date (desc)' },\n];\n\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_NAME = '';\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_OWNER = ownerData[0].id;\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_ORDER = orderData[0].id;\n\nconst name = (state = DEFAULT_STATE_DASHBOARDS_FILTER_NAME, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_NAME:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_NAME\n            );\n        default:\n            return state;\n    }\n};\n\nconst owner = (state = DEFAULT_STATE_DASHBOARDS_FILTER_OWNER, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_OWNER:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_NAME\n            );\n        default:\n            return state;\n    }\n};\n\nconst order = (state = DEFAULT_STATE_DASHBOARDS_FILTER_ORDER, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_ORDER:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_ORDER\n            );\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    name,\n    owner,\n    order,\n});\n\n// selectors\n\nexport const sGetDashboardsFilterRoot = state => state.dashboardsFilter;\n\n// selector dependency level 2\n\nexport const sGetFilterName = state => sGetDashboardsFilterRoot(state).name;\nexport const sGetFilterOwner = state => sGetDashboardsFilterRoot(state).owner;\nexport const sGetFilterOrder = state => sGetDashboardsFilterRoot(state).order;\n","import React, { Component, Fragment } from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport TextField from 'material-ui/TextField';\nimport IconButton from 'material-ui/IconButton';\nimport IconClear from '@material-ui/icons/Clear';\nimport isEmpty from 'd2-utilizr/lib/isEmpty';\n\nimport { DEFAULT_STATE_DASHBOARDS_FILTER_NAME } from '../../reducers/dashboardsFilter';\n\nexport const KEYCODE_ENTER = 13;\nexport const KEYCODE_ESCAPE = 27;\n\nconst styles = {\n    filterField: {\n        fontSize: '14px',\n        width: '200px',\n        height: '30px',\n        top: '-2px',\n    },\n    filterFieldInput: {\n        top: '-9px',\n        left: '1px',\n    },\n    filterFieldUnderline: {\n        bottom: '10px',\n    },\n    filterFieldUnderlineFocus: {\n        borderColor: '#aaa',\n        borderWidth: '1px',\n    },\n    clearButton: {\n        width: '20px',\n        height: '24px',\n        padding: 0,\n        top: '-5px',\n        left: '-18px',\n    },\n    clearButtonIcon: {\n        width: '16px',\n        height: '16px',\n    },\n};\n\nexport class Filter extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            value: DEFAULT_STATE_DASHBOARDS_FILTER_NAME,\n        };\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setState({\n            value: nextProps.name,\n        });\n    }\n\n    setFilterValue = event => {\n        event.preventDefault();\n\n        this.props.onChangeName(event.target.value);\n    };\n\n    handleKeyUp = event => {\n        switch (event.keyCode) {\n            case KEYCODE_ENTER:\n                this.props.onKeypressEnter();\n                break;\n            case KEYCODE_ESCAPE:\n                this.props.onChangeName();\n                break;\n            default:\n                break;\n        }\n    };\n\n    render() {\n        return (\n            <TextField\n                className=\"FilterField\"\n                value={this.state.value}\n                onChange={this.setFilterValue}\n                onKeyUp={this.handleKeyUp}\n                hintText={i18n.t('Search for a dashboard')}\n                style={styles.filterField}\n                inputStyle={styles.filterFieldInput}\n                hintStyle={styles.filterFieldHint}\n                underlineStyle={styles.filterFieldUnderline}\n                underlineFocusStyle={styles.filterFieldUnderlineFocus}\n            />\n        );\n    }\n}\n\nFilter.propTypes = {\n    name: PropTypes.string,\n    onChangeName: PropTypes.func,\n};\n\nFilter.defaultProps = {\n    name: '',\n    onChangeName: Function.prototype,\n};\n\nexport const ClearButton = ({ name, onChangeName }) => {\n    const disabled = isEmpty(name);\n\n    const clearFilter = () => onChangeName();\n\n    return (\n        <IconButton\n            style={Object.assign({}, styles.clearButton, {\n                opacity: disabled ? 0 : 1,\n            })}\n            iconStyle={styles.clearButtonIcon}\n            onClick={clearFilter}\n            disabled={disabled}\n        >\n            <IconClear color=\"action\" />\n        </IconButton>\n    );\n};\n\nClearButton.propTypes = {\n    name: PropTypes.string.isRequired,\n    onChangeName: PropTypes.func.isRequired,\n};\n\nexport default props => (\n    <Fragment>\n        <Filter {...props} />\n        <ClearButton {...props} />\n    </Fragment>\n);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport ControlBar from './ControlBar';\nimport arraySort from 'd2-utilizr/lib/arraySort';\n\nimport Chip from './DashboardItemChip';\nimport D2IconButton from '../../widgets/D2IconButton';\nimport Filter from './Filter';\nimport ShowMoreButton from './ShowMoreButton';\nimport {\n    FIRST_ROW_PADDING_HEIGHT,\n    MIN_ROW_COUNT,\n    getRowsHeight,\n    getControlBarHeight,\n    getNumRowsFromHeight,\n} from './controlBarDimensions';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { sGetAllDashboards } from '../../reducers/dashboards';\nimport { sGetFilterName } from '../../reducers/dashboardsFilter';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { acSetControlBarUserRows } from '../../actions/controlBar';\nimport { acSetFilterName } from '../../actions/dashboardsFilter';\nimport { orObject, orArray } from '../../modules/util';\nimport { apiPostControlBarRows } from '../../api/controlBar';\n\nimport classes from './styles/DashboardsBar.module.css';\n\nexport const MAX_ROW_COUNT = 10;\n\nexport class DashboardsBar extends Component {\n    state = {\n        rows: MIN_ROW_COUNT,\n    };\n\n    setInitialDashboardState = rows => {\n        this.setState({ rows, isMaxHeight: rows === MAX_ROW_COUNT });\n    };\n\n    componentDidMount() {\n        this.setInitialDashboardState(this.props.userRows);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setInitialDashboardState(nextProps.userRows);\n    }\n\n    onChangeHeight = newHeight => {\n        const adjustedHeight = newHeight - 52; // don't rush the transition to a bigger row count\n        const newRows = Math.max(\n            MIN_ROW_COUNT,\n            getNumRowsFromHeight(adjustedHeight)\n        );\n\n        if (newRows !== this.state.rows) {\n            const newRowCount = Math.min(newRows, MAX_ROW_COUNT);\n\n            this.props.onChangeHeight(newRowCount);\n        }\n    };\n\n    onEndDrag = () => {\n        return apiPostControlBarRows(this.state.rows);\n    };\n\n    onToggleMaxHeight = () => {\n        const rows =\n            this.state.rows === MAX_ROW_COUNT\n                ? this.props.userRows\n                : MAX_ROW_COUNT;\n\n        this.setState({ rows, isMaxHeight: !this.state.isMaxHeight });\n    };\n\n    onSelectDashboard = () => {\n        this.props.history.push(`/${this.props.dashboards[0].id}`);\n    };\n\n    render() {\n        const { dashboards, name, selectedId, onChangeFilterName } = this.props;\n\n        const rowCount = this.state.isMaxHeight\n            ? MAX_ROW_COUNT\n            : this.state.rows;\n        const controlBarHeight = getControlBarHeight(rowCount);\n        const contentWrapperStyle = {\n            padding: `${FIRST_ROW_PADDING_HEIGHT}px 6px 0 6px`,\n            overflowY: this.state.isMaxHeight ? 'auto' : 'hidden',\n            height: getRowsHeight(rowCount) + FIRST_ROW_PADDING_HEIGHT,\n        };\n\n        return (\n            <ControlBar\n                height={controlBarHeight}\n                onChangeHeight={this.onChangeHeight}\n                onEndDrag={this.onEndDrag}\n                editMode={false}\n            >\n                <div style={contentWrapperStyle}>\n                    <div className={classes.leftControls}>\n                        <Link\n                            style={{\n                                display: 'inline-block',\n                                textDecoration: 'none',\n                                marginRight: 10,\n                            }}\n                            to={'/new'}\n                        >\n                            <D2IconButton />\n                        </Link>\n                        <Filter\n                            name={name}\n                            onChangeName={onChangeFilterName}\n                            onKeypressEnter={this.onSelectDashboard}\n                        />\n                    </div>\n                    {orArray(dashboards).map(dashboard => (\n                        <Chip\n                            key={dashboard.id}\n                            label={dashboard.displayName}\n                            starred={dashboard.starred}\n                            dashboardId={dashboard.id}\n                            selected={dashboard.id === selectedId}\n                        />\n                    ))}\n                </div>\n                {this.props.userRows !== MAX_ROW_COUNT ? (\n                    <ShowMoreButton\n                        onClick={this.onToggleMaxHeight}\n                        isMaxHeight={this.state.isMaxHeight}\n                    />\n                ) : null}\n            </ControlBar>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    dashboards: sGetAllDashboards(state),\n    name: sGetFilterName(state),\n    userRows: sGetControlBarUserRows(state),\n    selectedId: sGetSelectedId(state),\n});\n\nconst mapDispatchToProps = {\n    onChangeHeight: acSetControlBarUserRows,\n    onChangeFilterName: acSetFilterName,\n};\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const dashboards = Object.values(orObject(stateProps.dashboards));\n    const displayDashboards = arraySort(\n        dashboards.filter(d =>\n            d.displayName.toLowerCase().includes(stateProps.name.toLowerCase())\n        ),\n        'ASC',\n        'displayName'\n    );\n\n    return {\n        ...stateProps,\n        ...ownProps,\n        ...dispatchProps,\n        dashboards: [\n            ...displayDashboards.filter(d => d.starred),\n            ...displayDashboards.filter(d => !d.starred),\n        ],\n    };\n};\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps,\n        mergeProps\n    )(DashboardsBar)\n);\n","import {\n    SET_DASHBOARDS_FILTER_NAME,\n    SET_DASHBOARDS_FILTER_OWNER,\n    SET_DASHBOARDS_FILTER_ORDER,\n} from '../reducers/dashboardsFilter';\n\n// actions\n\nexport const acSetFilterName = value => ({\n    type: SET_DASHBOARDS_FILTER_NAME,\n    value,\n});\n\nexport const acSetFilterOwner = value => ({\n    type: SET_DASHBOARDS_FILTER_OWNER,\n    value,\n});\n\nexport const acSetFilterOrder = value => ({\n    type: SET_DASHBOARDS_FILTER_ORDER,\n    value,\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport {\n    getTopOffset,\n    MIN_ROW_COUNT,\n} from '../ControlBar/controlBarDimensions';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\n\nconst DashboardVerticalOffset = props => {\n    const rows = props.editMode ? MIN_ROW_COUNT : props.userRows;\n    const marginTop = getTopOffset(rows);\n\n    return <div className=\"page-container-top-margin\" style={{ marginTop }} />;\n};\n\nconst mapStateToProps = state => ({\n    userRows: sGetControlBarUserRows(state),\n});\n\nexport default connect(mapStateToProps)(DashboardVerticalOffset);\n","import i18n from '@dhis2/d2-i18n';\nimport {\n    itemTypeMap,\n    spacerContent,\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_CHART,\n    EVENT_REPORT,\n    USERS,\n    REPORTS,\n    RESOURCES,\n    APP,\n    MESSAGES,\n    TEXT,\n    SPACER,\n} from '../../modules/itemTypes';\n\nexport const singleItems = [\n    {\n        id: 'additional',\n        header: 'Additional items',\n        items: [\n            {\n                type: TEXT,\n                name: i18n.t('Text box'),\n                content: '',\n            },\n            {\n                type: MESSAGES,\n                name: i18n.t('Messages'),\n                content: 'true',\n            },\n            {\n                type: SPACER,\n                name: i18n.t('Spacer'),\n                content: spacerContent,\n            },\n        ],\n    },\n];\n\nexport const listItems = [\n    {\n        id: REPORT_TABLE,\n        title: itemTypeMap[REPORT_TABLE].pluralTitle,\n    },\n    {\n        id: CHART,\n        title: itemTypeMap[CHART].pluralTitle,\n    },\n    { id: MAP, title: itemTypeMap[MAP].pluralTitle },\n    {\n        id: EVENT_REPORT,\n        title: itemTypeMap[EVENT_REPORT].pluralTitle,\n    },\n    {\n        id: EVENT_CHART,\n        title: itemTypeMap[EVENT_CHART].pluralTitle,\n    },\n    {\n        id: USERS,\n        title: itemTypeMap[USERS].pluralTitle,\n    },\n    {\n        id: REPORTS,\n        title: itemTypeMap[REPORTS].pluralTitle,\n    },\n    {\n        id: RESOURCES,\n        title: itemTypeMap[RESOURCES].pluralTitle,\n    },\n    { id: APP, title: itemTypeMap[APP].pluralTitle },\n];\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport Divider from 'material-ui/Divider';\nimport { List, ListItem } from 'material-ui/List';\nimport Button from '@dhis2/d2-ui-core/button/Button';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport { tAddListItemContent } from './actions';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\nimport { sGetEditDashboardRoot } from '../../reducers/editDashboard';\nimport {\n    getItemUrl,\n    getItemIcon,\n    APP,\n    CHART,\n    EVENT_CHART,\n    REPORT_TABLE,\n    EVENT_REPORT,\n    MAP,\n    REPORTS,\n    RESOURCES,\n    USERS,\n} from '../../modules/itemTypes';\nimport { colors } from '../../modules/colors';\n\nclass ItemSelectList extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seeMore: false,\n        };\n    }\n\n    addItem = item => () => {\n        const {\n            type,\n            dashboardId,\n            acAddDashboardItem,\n            tAddListItemContent,\n        } = this.props;\n\n        const newItem = {\n            id: item.id,\n            name: item.displayName || item.name,\n        };\n\n        // special handling for ListItem types\n        if (type.match(/(REPORTS|RESOURCES|USERS)/)) {\n            tAddListItemContent(dashboardId, type, newItem);\n        } else if (type === APP) {\n            acAddDashboardItem({ type, content: item.key });\n        } else {\n            acAddDashboardItem({ type, content: newItem });\n        }\n    };\n\n    toggleSeeMore = () => {\n        this.setState({ seeMore: !this.state.seeMore });\n\n        this.props.onChangeItemsLimit(this.props.type);\n    };\n\n    render() {\n        return (\n            <Fragment>\n                <div\n                    style={{\n                        display: 'flex',\n                        justifyContent: 'space-between',\n                        paddingLeft: '16px',\n                    }}\n                >\n                    <h3>{this.props.title}</h3>\n                    <Button\n                        color=\"primary\"\n                        style={{ textTransform: 'uppercase' }}\n                        onClick={this.toggleSeeMore}\n                    >\n                        {`${i18n.t('See')} ${\n                            this.state.seeMore\n                                ? i18n.t('fewer')\n                                : i18n.t('more')\n                        } ${this.props.title}`}\n                    </Button>\n                </div>\n                <Divider />\n                <List>\n                    {this.props.items.map(item => {\n                        const itemUrl = getItemUrl(\n                            this.props.type,\n                            item,\n                            this.context.d2\n                        );\n\n                        const ItemIcon = getItemIcon(this.props.type);\n\n                        return (\n                            <ListItem // apps don't have item.id\n                                key={item.id || item.key}\n                                leftIcon={\n                                    <ItemIcon\n                                        style={{\n                                            margin: '6px',\n                                            fill: colors.muiDefaultGrey,\n                                        }}\n                                    />\n                                }\n                                innerDivStyle={{ padding: '0px 0px 0px 42px' }}\n                                hoverColor=\"transparent\"\n                                primaryText={\n                                    <p\n                                        style={{\n                                            display: 'flex',\n                                            alignItems: 'center',\n                                            justifyContent: 'flex-start',\n                                            margin: 0,\n                                        }}\n                                    >\n                                        {item.displayName || item.name}\n                                        <Button\n                                            color=\"primary\"\n                                            onClick={this.addItem(item)}\n                                            style={{\n                                                marginLeft: '5px',\n                                                marginRight: '5px',\n                                            }}\n                                        >\n                                            + ADD\n                                        </Button>\n                                        {itemUrl && (\n                                            <a\n                                                target=\"_blank\"\n                                                rel=\"noopener noreferrer\"\n                                                href={itemUrl}\n                                                style={{ display: 'flex' }}\n                                            >\n                                                <LaunchIcon\n                                                    style={{\n                                                        width: '16px',\n                                                        height: '16px',\n                                                        fill:\n                                                            colors.muiDefaultGrey,\n                                                    }}\n                                                />\n                                            </a>\n                                        )}\n                                    </p>\n                                }\n                            />\n                        );\n                    })}\n                </List>\n            </Fragment>\n        );\n    }\n}\n\nItemSelectList.propTypes = {\n    type: PropTypes.oneOf([\n        APP,\n        CHART,\n        EVENT_CHART,\n        REPORT_TABLE,\n        EVENT_REPORT,\n        MAP,\n        REPORTS,\n        RESOURCES,\n        USERS,\n    ]).isRequired,\n    title: PropTypes.string.isRequired,\n    items: PropTypes.array.isRequired,\n    onChangeItemsLimit: PropTypes.func.isRequired,\n};\n\nItemSelectList.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nexport default connect(\n    state => ({\n        dashboardId: sGetEditDashboardRoot(state).id,\n    }),\n    {\n        acAddDashboardItem,\n        tAddListItemContent,\n    }\n)(ItemSelectList);\n","import { sGetEditDashboardRoot } from '../../reducers/editDashboard';\nimport { itemTypeMap } from '../../modules/itemTypes';\nimport {\n    acAddDashboardItem,\n    acUpdateDashboardItem,\n} from '../../actions/editDashboard';\n\nexport const tAddListItemContent = (dashboardId, type, content) => (\n    dispatch,\n    getState\n) => {\n    const state = getState();\n    const listItemType = itemTypeMap[type].propName;\n    const dashboardItems = sGetEditDashboardRoot(state).dashboardItems;\n    const dashboardItemIndex = dashboardItems.findIndex(\n        item => item.type === type\n    );\n    let dashboardItem;\n\n    // Reports/Resources/Users dashboard item type already present in dashboard\n    if (dashboardItemIndex > -1) {\n        dashboardItem = dashboardItems[dashboardItemIndex];\n        dashboardItem[listItemType].push(content);\n\n        dispatch(acUpdateDashboardItem(dashboardItem));\n    } else {\n        dashboardItem = {\n            type: type,\n            content: [content],\n        };\n\n        dispatch(acAddDashboardItem(dashboardItem));\n    }\n};\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport Divider from 'material-ui/Divider';\nimport { List, ListItem } from 'material-ui/List';\nimport Button from '@dhis2/d2-ui-core/button/Button';\nimport { getItemIcon } from '../../modules/itemTypes';\n\nimport { acAddDashboardItem } from '../../actions/editDashboard';\n\nconst SingleItem = ({ item, onAddToDashboard }) => {\n    const ItemIcon = getItemIcon(item.type);\n    return (\n        <ListItem\n            key={item.type}\n            leftIcon={<ItemIcon style={{ margin: '6px' }} />}\n            innerDivStyle={{ padding: '0px 0px 0px 42px' }}\n            hoverColor=\"transparent\"\n            primaryText={\n                <p\n                    style={{\n                        display: 'flex',\n                        alignItems: 'center',\n                        justifyContent: 'flex-start',\n                        margin: 0,\n                    }}\n                >\n                    {item.name}\n                    <Button\n                        color=\"primary\"\n                        onClick={onAddToDashboard}\n                        style={{\n                            marginLeft: '5px',\n                            marginRight: '5px',\n                        }}\n                    >\n                        + ADD\n                    </Button>\n                </p>\n            }\n        />\n    );\n};\n\nconst ItemSelectSingle = ({ acAddDashboardItem, category }) => {\n    const addToDashboard = ({ type, content }) => () => {\n        acAddDashboardItem({ type, content });\n    };\n\n    return (\n        <Fragment>\n            <div\n                style={{\n                    display: 'flex',\n                    justifyContent: 'space-between',\n                    paddingLeft: '16px',\n                }}\n            >\n                <h3>{category.header}</h3>\n            </div>\n            <Divider />\n            <List>\n                {category.items.map(item => (\n                    <SingleItem\n                        key={item.type}\n                        item={item}\n                        onAddToDashboard={addToDashboard(item)}\n                    />\n                ))}\n            </List>\n        </Fragment>\n    );\n};\n\nexport default connect(\n    null,\n    { acAddDashboardItem }\n)(ItemSelectSingle);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport Popover from '@material-ui/core/Popover';\nimport SearchIcon from '@material-ui/icons/Search';\nimport TextField from 'material-ui/TextField';\n\nimport { singleItems, listItems } from './selectableItems';\nimport { itemTypeMap } from '../../modules/itemTypes';\nimport ItemSelectList from './ItemSelectList';\nimport ItemSelectSingle from './ItemSelectSingle';\nimport { colors } from '../../modules/colors';\n\nimport './ItemSelect.css';\n\nconst styles = {\n    filterField: {\n        fontSize: '14px',\n        height: '30px',\n        marginLeft: '10px',\n    },\n    filterFieldInput: {\n        top: '-9px',\n        left: '1px',\n    },\n    filterFieldUnderline: {\n        bottom: '10px',\n    },\n    filterFieldUnderlineFocus: {\n        borderColor: '#aaa',\n        borderWidth: '1px',\n    },\n    searchIcon: {\n        fill: colors.muiDefaultGrey,\n    },\n};\n\nconst ItemSearchField = props => (\n    <div style={{ display: 'flex', alignItems: 'baseline' }}>\n        <SearchIcon style={styles.searchIcon} />\n        <TextField\n            hintText={i18n.t('Search for items to add to this dashboard')}\n            fullWidth={true}\n            value={props.value}\n            onClick={props.onClick}\n            onChange={props.onChange}\n            style={styles.filterField}\n            inputStyle={styles.filterFieldInput}\n            hintStyle={styles.filterFieldHint}\n            underlineStyle={styles.filterFieldUnderline}\n            underlineFocusStyle={styles.filterFieldUnderlineFocus}\n        />\n    </div>\n);\n\nclass ItemSelect extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n            open: false,\n            maxOptions: new Set(),\n            items: undefined,\n            filter: '',\n        };\n    }\n\n    closeList = () => {\n        this.setState({ open: false, filter: '' });\n    };\n\n    openList = event => {\n        this.fetchItems();\n\n        this.setState({\n            anchorEl: event.currentTarget,\n            open: true,\n        });\n    };\n\n    setFilter = event => {\n        this.setState({ filter: event.target.value }, this.fetchItems);\n    };\n\n    getListItems = items => {\n        return listItems.map(type => {\n            const itemType = itemTypeMap[type.id];\n\n            if (items && items[itemType.countName] > 0) {\n                return (\n                    <ItemSelectList\n                        key={type.id}\n                        type={type.id}\n                        title={type.title}\n                        items={items[itemType.endPointName]}\n                        onChangeItemsLimit={this.fetchItems}\n                    />\n                );\n            } else {\n                return null;\n            }\n        });\n    };\n\n    popoverChildren = items => {\n        const SingleItems = singleItems.map(category => (\n            <ItemSelectSingle key={category.id} category={category} />\n        ));\n        const ListItems = this.getListItems(items);\n\n        return ListItems.concat(SingleItems);\n    };\n\n    fetchItems = async maxOption => {\n        const api = this.context.d2.Api.getApi();\n\n        let queryString;\n\n        if (maxOption) {\n            const maxOptions = this.state.maxOptions;\n\n            if (maxOptions.has(maxOption)) {\n                maxOptions.delete(maxOption);\n            } else {\n                maxOptions.add(maxOption);\n            }\n\n            this.setState({\n                maxOptions,\n            });\n        } else {\n            this.setState({\n                maxOptions: new Set(),\n            });\n        }\n\n        if ([...this.state.maxOptions.values()].length) {\n            queryString =\n                'max=' + [...this.state.maxOptions.values()].join('&max=');\n        }\n\n        api.get(\n            `dashboards/q/${this.state.filter || ''}${\n                queryString ? `?${queryString}` : ''\n            }`\n        )\n            .then(response => {\n                this.setState({ items: response });\n            })\n            .catch(console.error);\n    };\n\n    render() {\n        return (\n            <Fragment>\n                <ItemSearchField\n                    value={this.state.filter}\n                    onClick={this.openList}\n                    onChange={this.setFilter}\n                />\n                <Popover\n                    className=\"dashboard-item-select\"\n                    open={this.state.open}\n                    onClose={this.closeList}\n                    anchorEl={this.state.anchorEl}\n                    anchorOrigin={{ horizontal: 'left', vertical: 'bottom' }}\n                    transformOrigin={{ horizontal: 'left', vertical: 'top' }}\n                    style={{ height: '70vh' }}\n                    PaperProps={{ style: { width: '700px' } }}\n                    disableAutoFocus={true}\n                    disableRestoreFocus={true}\n                >\n                    {this.popoverChildren(this.state.items)}\n                </Popover>\n            </Fragment>\n        );\n    }\n}\n\nItemSelect.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nexport default ItemSelect;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport i18n from '@dhis2/d2-i18n';\nimport TextField from '@dhis2/d2-ui-core/text-field/TextField';\n\nimport {\n    acSetDashboardTitle,\n    acSetDashboardDescription,\n} from '../../actions/editDashboard';\nimport { orObject } from '../../modules/util';\nimport { sGetEditDashboardRoot } from '../../reducers/editDashboard';\nimport { sGetDashboardById } from '../../reducers/dashboards';\nimport ItemSelect from '../ItemSelect/ItemSelect';\n\nconst styles = {\n    section: { display: 'flex', justifyContent: 'space-between' },\n    titleDescription: {\n        flex: '3',\n        marginRight: '20px',\n    },\n    title: { padding: '6px 0' },\n    itemSelect: {\n        flex: '2',\n        minWidth: '300px',\n        maxWidth: '730px',\n        position: 'relative',\n        top: '33px',\n    },\n};\n\nexport const EditTitleBar = ({\n    name,\n    displayName,\n    description,\n    style,\n    onChangeTitle,\n    onChangeDescription,\n    classes,\n}) => {\n    const titleStyle = Object.assign({}, style.title, {\n        top: '-2px',\n    });\n\n    const translatedName = () => {\n        return displayName ? (\n            <span style={style.description}>\n                {i18n.t('Current translation')}: {displayName}\n            </span>\n        ) : null;\n    };\n\n    return (\n        <section className={classes.section}>\n            <div className={classes.titleDescription}>\n                <span>{i18n.t('Currently editing')}</span>\n                <div className={classes.title}>\n                    <TextField\n                        multiline\n                        fullWidth\n                        rows={1}\n                        rowsMax={3}\n                        style={titleStyle}\n                        value={name}\n                        placeholder={i18n.t('Add title here')}\n                        onChange={onChangeTitle}\n                    />\n                    {translatedName()}\n                </div>\n                <TextField\n                    multiline\n                    fullWidth\n                    rows={1}\n                    rowsMax={3}\n                    style={style.description}\n                    value={description}\n                    placeholder={i18n.t('Add description here')}\n                    onChange={onChangeDescription}\n                />\n            </div>\n            <div className={classes.itemSelect}>\n                <ItemSelect />\n            </div>\n        </section>\n    );\n};\n\nconst mapStateToProps = state => {\n    const selectedDashboard = orObject(sGetEditDashboardRoot(state));\n    const displayName = orObject(sGetDashboardById(state, selectedDashboard.id))\n        .displayName;\n\n    return {\n        name: selectedDashboard.name,\n        displayName,\n        description: selectedDashboard.description,\n    };\n};\n\nconst mapDispatchToProps = {\n    onChangeTitle: acSetDashboardTitle,\n    onChangeDescription: acSetDashboardDescription,\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(EditTitleBar));\n\nEditTitleBar.propTypes = {\n    name: PropTypes.string,\n    displayName: PropTypes.string,\n    description: PropTypes.string,\n    onChangeTitle: PropTypes.func.isRequired,\n    onChangeDescription: PropTypes.func.isRequired,\n    style: PropTypes.object,\n};\n\nEditTitleBar.defaultProps = {\n    name: '',\n    displayName: '',\n    description: '',\n    style: {},\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Button } from '@dhis2/ui-core';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport i18n from '@dhis2/d2-i18n';\n\nimport {\n    PeriodDimension,\n    DynamicDimension,\n    OrgUnitDimension,\n    FIXED_DIMENSIONS,\n} from '@dhis2/d2-ui-analytics';\n\nconst peId = FIXED_DIMENSIONS.pe.id;\nconst ouId = FIXED_DIMENSIONS.ou.id;\n\nclass FilterDialog extends Component {\n    onConfirm = id => () => this.props.onConfirm(id);\n\n    dialogContent() {\n        const { displayNameProperty, dimension, selectedItems } = this.props;\n        const dialogId = dimension.id;\n\n        const commonProps = {\n            d2: this.context.d2,\n            onSelect: this.props.onSelect,\n            onDeselect: this.props.onDeselect,\n            onReorder: this.props.onReorder,\n        };\n\n        switch (dialogId) {\n            case peId: {\n                return (\n                    <PeriodDimension\n                        selectedPeriods={selectedItems}\n                        {...commonProps}\n                    />\n                );\n            }\n            case ouId:\n                return (\n                    <OrgUnitDimension\n                        displayNameProperty={displayNameProperty}\n                        ouItems={selectedItems}\n                        {...commonProps}\n                    />\n                );\n            default:\n                return (\n                    <DynamicDimension\n                        selectedItems={selectedItems}\n                        dialogId={dialogId}\n                        dialogTitle={dimension.name}\n                        {...commonProps}\n                    />\n                );\n        }\n    }\n\n    render() {\n        const { dimension, onClose } = this.props;\n        const dialogId = dimension.id;\n\n        return (\n            <Dialog\n                open={!!dialogId}\n                maxWidth=\"lg\"\n                disableEnforceFocus\n                onClose={onClose}\n            >\n                {dialogId && this.dialogContent()}\n                <DialogActions>\n                    <Button kind=\"secondary\" onClick={onClose}>\n                        {i18n.t('Cancel')}\n                    </Button>\n                    <Button kind=\"primary\" onClick={this.onConfirm(dialogId)}>\n                        {i18n.t('Confirm')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nFilterDialog.propTypes = {\n    displayNameProperty: PropTypes.string,\n    dimension: PropTypes.object,\n    selectedItems: PropTypes.array,\n    onSelect: PropTypes.func,\n    onDeselect: PropTypes.func,\n    onReorder: PropTypes.func,\n    onClose: PropTypes.func,\n    onConfirm: PropTypes.func,\n};\n\nFilterDialog.contextTypes = {\n    d2: PropTypes.object,\n};\n\nexport default FilterDialog;\n","export const SET_ACTIVE_MODAL_DIMENSION = 'SET_ACTIVE_MODAL_DIMENSION';\nexport const CLEAR_ACTIVE_MODAL_DIMENSION = 'CLEAR_ACTIVE_MODAL_DIMENSION';\n\nexport const DEFAULT_STATE_ACTIVE_MODAL_DIMENSION = {};\n\nexport default (state = DEFAULT_STATE_ACTIVE_MODAL_DIMENSION, action) => {\n    switch (action.type) {\n        case SET_ACTIVE_MODAL_DIMENSION: {\n            return action.value;\n        }\n        case CLEAR_ACTIVE_MODAL_DIMENSION: {\n            return DEFAULT_STATE_ACTIVE_MODAL_DIMENSION;\n        }\n        default:\n            return state;\n    }\n};\n\nexport const sGetActiveModalDimension = state => state.activeModalDimension;\n","import {\n    SET_ACTIVE_MODAL_DIMENSION,\n    CLEAR_ACTIVE_MODAL_DIMENSION,\n} from '../reducers/activeModalDimension';\n\nexport const acSetActiveModalDimension = value => ({\n    type: SET_ACTIVE_MODAL_DIMENSION,\n    value,\n});\n\nexport const acClearActiveModalDimension = () => ({\n    type: CLEAR_ACTIVE_MODAL_DIMENSION,\n});\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport Popover from '@material-ui/core/Popover';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\n\nimport i18n from '@dhis2/d2-i18n';\nimport { DimensionsPanel } from '@dhis2/d2-ui-analytics';\n\nimport { Button } from '@dhis2/ui-core';\nimport FilterDialog from './FilterDialog';\n\nimport { sGetSettingsDisplayNameProperty } from '../../reducers/settings';\nimport { sGetActiveModalDimension } from '../../reducers/activeModalDimension';\nimport { sGetDimensions } from '../../reducers/dimensions';\nimport { sGetFiltersKeys } from '../../reducers/itemFilters';\nimport { sGetEditItemFiltersRoot } from '../../reducers/editItemFilters';\nimport { acAddItemFilter, acRemoveItemFilter } from '../../actions/itemFilters';\nimport {\n    acRemoveEditItemFilter,\n    acSetEditItemFilters,\n} from '../../actions/editItemFilters';\nimport {\n    acClearActiveModalDimension,\n    acSetActiveModalDimension,\n} from '../../actions/activeModalDimension';\n\nclass FilterSelector extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n        };\n    }\n\n    openPanel = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    closePanel = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    closeDialog = () => {\n        this.setState({ anchorEl: null });\n\n        this.props.clearActiveModalDimension();\n    };\n\n    selectDimension = id => {\n        this.props.setActiveModalDimension({\n            id,\n            name: this.props.dimensions[id].name,\n        });\n    };\n\n    onSelectItems = ({ dimensionId, items }) => {\n        this.props.setEditItemFilters({\n            ...this.props.selectedItems,\n            [dimensionId]: items,\n        });\n    };\n\n    onDeselectItems = ({ dimensionId, itemIdsToRemove }) => {\n        const oldList = this.props.selectedItems[dimensionId] || [];\n        const newList = oldList.filter(\n            item => !itemIdsToRemove.includes(item.id)\n        );\n\n        if (newList.length) {\n            this.props.setEditItemFilters({\n                ...this.props.selectedItems,\n                [dimensionId]: newList,\n            });\n        } else {\n            this.props.removeEditItemFilter(dimensionId);\n        }\n    };\n\n    onReorderItems = ({ dimensionId, itemIds }) => {\n        const oldList = this.props.selectedItems[dimensionId] || [];\n        const reorderedList = itemIds.map(id =>\n            oldList.find(item => item.id === id)\n        );\n\n        this.props.setEditItemFilters({\n            ...this.props.selectedItems,\n            [dimensionId]: reorderedList,\n        });\n    };\n\n    saveFilter = id => {\n        const filterItems = this.props.selectedItems[id];\n\n        if (filterItems && filterItems.length) {\n            this.props.addItemFilter({\n                id,\n                value: [...filterItems],\n            });\n        } else {\n            this.props.removeItemFilter(id);\n        }\n\n        this.closeDialog();\n    };\n\n    render() {\n        const {\n            displayNameProperty,\n            dimension,\n            dimensions,\n            selectedDimensions,\n            selectedItems,\n        } = this.props;\n\n        return (\n            <Fragment>\n                <Button onClick={this.openPanel}>\n                    {i18n.t('Add filter')}\n                    <ArrowDropDownIcon />\n                </Button>\n                <Popover\n                    open={Boolean(this.state.anchorEl)}\n                    anchorEl={this.state.anchorEl}\n                    anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\n                    onClose={this.closePanel}\n                    style={{ height: '100%' }}\n                >\n                    <DimensionsPanel\n                        dimensions={dimensions}\n                        onDimensionClick={this.selectDimension}\n                        selectedIds={selectedDimensions}\n                    />\n                </Popover>\n                {dimension ? (\n                    <FilterDialog\n                        displayNameProperty={displayNameProperty}\n                        dimension={dimension}\n                        selectedItems={selectedItems[dimension.id] || []}\n                        onSelect={this.onSelectItems}\n                        onDeselect={this.onDeselectItems}\n                        onReorder={this.onReorderItems}\n                        onClose={this.closeDialog}\n                        onConfirm={this.saveFilter}\n                    />\n                ) : null}\n            </Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    displayNameProperty: sGetSettingsDisplayNameProperty(state),\n    dimension: sGetActiveModalDimension(state),\n    dimensions: sGetDimensions(state),\n    selectedDimensions: sGetFiltersKeys(state),\n    selectedItems: sGetEditItemFiltersRoot(state),\n});\n\nexport default connect(\n    mapStateToProps,\n    {\n        clearActiveModalDimension: acClearActiveModalDimension,\n        setActiveModalDimension: acSetActiveModalDimension,\n        addItemFilter: acAddItemFilter,\n        removeItemFilter: acRemoveItemFilter,\n        removeEditItemFilter: acRemoveEditItemFilter,\n        setEditItemFilters: acSetEditItemFilters,\n    }\n)(FilterSelector);\n","import React, { Component } from 'react';\nimport InfoOutlineIcon from '@material-ui/icons/InfoOutlined';\nimport { colors } from '../../modules/colors';\n\nclass Info extends Component {\n    show = false;\n\n    toggle() {\n        this.show = !this.show;\n        return this.show;\n    }\n\n    render() {\n        return (\n            <div onClick={() => this.props.onClick(this.toggle())}>\n                <InfoOutlineIcon style={{ fill: colors.muiDefaultGrey }} />\n            </div>\n        );\n    }\n}\n\nexport default Info;\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport SharingDialog from '@dhis2/d2-ui-sharing-dialog';\nimport Star from '@material-ui/icons/Star';\nimport StarBorder from '@material-ui/icons/StarBorder';\n\nimport { orObject } from '../../modules/util';\nimport { tStarDashboard } from '../../actions/dashboards';\nimport { acSetSelectedShowDescription } from '../../actions/selected';\nimport FilterSelector from '../ItemFilter/FilterSelector';\nimport { Button } from '@dhis2/ui-core';\nimport Info from './Info';\nimport {\n    sGetSelectedId,\n    sGetSelectedShowDescription,\n} from '../../reducers/selected';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n} from '../../reducers/dashboards';\nimport { colors } from '../../modules/colors';\n\nconst NO_DESCRIPTION = i18n.t('No description');\n\nconst styles = {\n    actions: {\n        display: 'flex',\n        alignItems: 'center',\n        marginLeft: '20px',\n    },\n    starIcon: {\n        fill: colors.muiDefaultGrey,\n    },\n    textButton: {\n        minWidth: '30px',\n        top: '1px',\n    },\n    editLink: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        textDecoration: 'none',\n        marginRight: '4px',\n    },\n    titleBar: {\n        display: 'flex',\n        alignItems: 'flex-start',\n    },\n    titleBarIcon: {\n        marginLeft: 5,\n        position: 'relative',\n        top: 1,\n        cursor: 'pointer',\n    },\n};\n\nclass ViewTitleBar extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            sharingDialogIsOpen: false,\n        };\n    }\n\n    toggleSharingDialog = () =>\n        this.setState({ sharingDialogIsOpen: !this.state.sharingDialogIsOpen });\n\n    render() {\n        const {\n            id,\n            name,\n            description,\n            access,\n            style,\n            showDescription,\n            starred,\n            onStarClick,\n            onInfoClick,\n            classes,\n        } = this.props;\n\n        const titleStyle = Object.assign({}, style.title, {\n            cursor: 'default',\n            userSelect: 'text',\n            top: '7px',\n        });\n\n        const StarIcon = starred ? Star : StarBorder;\n\n        return (\n            <Fragment>\n                <div className={classes.titleBar}>\n                    <span style={titleStyle}>{name}</span>\n                    <div className={classes.actions}>\n                        <div\n                            className={classes.titleBarIcon}\n                            onClick={onStarClick}\n                        >\n                            <StarIcon className={classes.starIcon} />\n                        </div>\n                        <div className={classes.titleBarIcon}>\n                            <Info onClick={onInfoClick} />\n                        </div>\n                        <div style={{ marginLeft: '10px' }}>\n                            {access.update ? (\n                                <Link\n                                    className={classes.editLink}\n                                    to={`/${id}/edit`}\n                                >\n                                    <Button>{i18n.t('Edit')}</Button>\n                                </Link>\n                            ) : null}\n                            {access.manage ? (\n                                <span style={{ marginRight: '4px' }}>\n                                    <Button onClick={this.toggleSharingDialog}>\n                                        {i18n.t('Share')}\n                                    </Button>\n                                </span>\n                            ) : null}\n                            <span style={{ marginRight: '4px' }}>\n                                <FilterSelector />\n                            </span>\n                        </div>\n                    </div>\n                </div>\n                {showDescription ? (\n                    <div\n                        className=\"dashboard-description\"\n                        style={Object.assign(\n                            { paddingTop: '5px', paddingBottom: '5px' },\n                            style.description,\n                            !description ? { color: '#888' } : {}\n                        )}\n                    >\n                        {description || NO_DESCRIPTION}\n                    </div>\n                ) : null}\n                {id ? (\n                    <SharingDialog\n                        d2={this.context.d2}\n                        id={id}\n                        type=\"dashboard\"\n                        open={this.state.sharingDialogIsOpen}\n                        onRequestClose={this.toggleSharingDialog}\n                    />\n                ) : null}\n            </Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    const id = sGetSelectedId(state);\n    const dashboard = orObject(sGetDashboardById(state, id));\n\n    return {\n        id,\n        name: dashboard.displayName,\n        description: dashboard.displayDescription,\n        dashboardItems: sGetDashboardItems(state),\n        showDescription: sGetSelectedShowDescription(state),\n        starred: dashboard.starred,\n        access: orObject(dashboard.access),\n    };\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const { id, starred, showDescription } = stateProps;\n    const { dispatch } = dispatchProps;\n\n    return {\n        ...stateProps,\n        ...ownProps,\n        onStarClick: () => dispatch(tStarDashboard(id, !starred)),\n        onInfoClick: () =>\n            dispatch(acSetSelectedShowDescription(!showDescription)),\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    null,\n    mergeProps\n)(withStyles(styles)(ViewTitleBar));\n\nViewTitleBar.propTypes = {\n    id: PropTypes.string,\n    name: PropTypes.string,\n    description: PropTypes.string,\n    starred: PropTypes.bool,\n    showDescription: PropTypes.bool,\n    onInfoClick: PropTypes.func,\n};\n\nViewTitleBar.defaultProps = {\n    name: '',\n    description: '',\n    starred: false,\n    showDescription: false,\n    onInfoClick: null,\n};\n\nViewTitleBar.contextTypes = {\n    d2: PropTypes.object,\n};\n","import React from 'react';\n\nimport { colors } from '../../modules/colors';\nimport EditTitleBar from './EditTitleBar';\nimport ViewTitleBar from './ViewTitleBar';\n\nimport './TitleBar.css';\n\nconst style = {\n    title: {\n        position: 'relative',\n        fontSize: 21,\n        fontWeight: 500,\n        color: colors.black,\n        minWidth: 50,\n    },\n    description: {\n        fontSize: 14,\n        color: colors.darkGrey,\n    },\n};\n\nconst TitleBar = ({ edit }) => {\n    return (\n        <div\n            className=\"titlebar-wrapper\"\n            style={{\n                padding: '20px 15px 5px 10px',\n            }}\n        >\n            {edit ? (\n                <EditTitleBar style={style} />\n            ) : (\n                <ViewTitleBar style={style} />\n            )}\n        </div>\n    );\n};\n\nexport default TitleBar;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport i18n from '@dhis2/d2-i18n';\n\nimport * as pluginManager from './plugin';\nimport { getBaseUrl, orObject } from '../../../modules/util';\nimport { getGridItemDomId } from '../../ItemGrid/gridUtil';\n\nconst pluginCredentials = d2 => {\n    return {\n        baseUrl: getBaseUrl(d2),\n        auth: d2.Api.getApi().defaultHeaders.Authorization,\n    };\n};\n\nclass DefaultPlugin extends Component {\n    pluginCredentials = null;\n\n    constructor(props, context) {\n        super(props);\n\n        this.d2 = context.d2;\n    }\n\n    shouldPluginReload = prevProps => {\n        // TODO - fix this hack, to handle bug with multiple\n        // rerendering while switching between dashboards.\n        //\n        // To determine if the rendering is happening because of a\n        // dashboard switch, check if the item reference has changed.\n        const reloadAllowed = this.props.item === prevProps.item;\n\n        const filtersChanged = prevProps.itemFilters !== this.props.itemFilters;\n        const vis = orObject(this.props.visualization);\n        const prevVis = orObject(prevProps.visualization);\n        const visChanged =\n            vis.id !== prevVis.id || vis.activeType !== prevVis.activeType;\n\n        return reloadAllowed && (visChanged || filtersChanged);\n    };\n\n    reloadPlugin = prevProps => {\n        if (\n            pluginManager.pluginIsAvailable(\n                this.props.item,\n                this.props.visualization\n            ) &&\n            this.shouldPluginReload(prevProps)\n        ) {\n            const prevVis = orObject(prevProps.visualization);\n            const currentVis = this.props.visualization;\n\n            const useActiveType =\n                currentVis.activeType !== prevVis.activeType ||\n                currentVis.activeType !== this.props.item.type;\n\n            if (\n                useActiveType ||\n                this.props.itemFilters !== prevProps.itemFilters\n            ) {\n                pluginManager.unmount(\n                    this.props.item,\n                    prevVis.activeType || this.props.item.type\n                );\n\n                pluginManager.load(\n                    this.props.item,\n                    this.props.visualization,\n                    this.pluginCredentials,\n                    useActiveType ? currentVis.activeType : null\n                );\n            }\n        }\n    };\n\n    componentDidMount() {\n        this.pluginCredentials = pluginCredentials(this.d2);\n\n        if (\n            pluginManager.pluginIsAvailable(\n                this.props.item,\n                this.props.visualization\n            )\n        ) {\n            pluginManager.load(\n                this.props.item,\n                this.props.visualization,\n                this.pluginCredentials,\n                !this.props.editMode ? this.getActiveType() : null\n            );\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        this.reloadPlugin(prevProps);\n    }\n\n    getActiveType = () =>\n        this.props.visualization.activeType || this.props.item.type;\n\n    render() {\n        const { classes, item, visualization, style } = this.props;\n        const pluginIsAvailable = pluginManager.pluginIsAvailable(\n            item,\n            visualization\n        );\n\n        return pluginIsAvailable ? (\n            <div id={getGridItemDomId(item.id)} style={style} />\n        ) : (\n            <div className={classes.textDiv}>\n                {i18n.t('Unable to load the plugin for this item')}\n            </div>\n        );\n    }\n}\n\nDefaultPlugin.contextTypes = {\n    d2: PropTypes.object,\n};\n\nDefaultPlugin.propTypes = {\n    style: PropTypes.object,\n    item: PropTypes.object,\n    itemFilters: PropTypes.object,\n    visualization: PropTypes.object,\n};\n\nDefaultPlugin.defaultProps = {\n    style: {},\n    item: {},\n    itemFilters: {},\n    visualization: {},\n};\n\nexport default DefaultPlugin;\n","import React from 'react';\n\nexport const HEADER_HEIGHT = 45;\n\nconst ItemHeader = props => {\n    const { title, actionButtons, editMode } = props;\n\n    return (\n        <div className=\"dashboard-item-header\">\n            <div\n                className=\"dashboard-item-header-title\"\n                style={{ userSelect: editMode ? 'none' : 'text' }}\n            >\n                {title}\n            </div>\n            {actionButtons}\n        </div>\n    );\n};\n\nexport default ItemHeader;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { colors } from '../../../modules/colors';\nimport { getId } from './plugin';\nimport InterpretationsComponent from '@dhis2/d2-ui-interpretations';\n\nconst style = {\n    scrollContainer: {\n        overflowY: 'auto',\n        height: '340px',\n    },\n    line: {\n        margin: '-1px 0px 0px',\n        height: '1px',\n        border: 'none',\n        backgroundColor: colors.lightGrey,\n    },\n};\n\nclass ItemFooter extends Component {\n    render() {\n        const objectId = getId(this.props.item);\n\n        return (\n            <div className=\"dashboard-item-footer\">\n                <hr style={style.line} />\n                <div style={style.scrollContainer}>\n                    <InterpretationsComponent\n                        d2={this.context.d2}\n                        item={this.props.item}\n                        type={this.props.item.type.toLowerCase()}\n                        id={objectId}\n                        appName=\"dashboard\"\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nItemFooter.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nItemFooter.propTypes = {\n    item: PropTypes.object.isRequired,\n};\n\nexport default ItemFooter;\n","import React from 'react';\n\nimport './ItemHeaderButton.css';\n\nconst ItemHeaderButton = ({ disabled, onClick, children, style }) => {\n    return (\n        <button\n            disabled={disabled}\n            type=\"button\"\n            className=\"item-action-button\"\n            style={style}\n            onClick={onClick}\n        >\n            {children}\n        </button>\n    );\n};\n\nexport default ItemHeaderButton;\n","import React, { Component, Fragment } from 'react';\nimport MessageIcon from '@material-ui/icons/Message';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\n\nimport { extractFavorite } from './plugin';\nimport ItemHeaderButton from '../ItemHeaderButton';\nimport {\n    VISUALIZATION_TYPE_TABLE,\n    VISUALIZATION_TYPE_CHART,\n    VISUALIZATION_TYPE_MAP,\n    itemTypeMap,\n    CHART,\n    MAP,\n    REPORT_TABLE,\n    EVENT_CHART,\n    EVENT_REPORT,\n    DOMAIN_TYPE_AGGREGATE,\n} from '../../../modules/itemTypes';\nimport { colors } from '../../../modules/colors';\n\nconst style = {\n    iconBase: {\n        width: '24px',\n        height: '24px',\n        fill: colors.lightMediumGrey,\n    },\n    buttonBase: {\n        padding: '5px 6px 3px 6px',\n    },\n    buttonDisabled: {\n        padding: '5px 6px 3px 6px',\n        opacity: 0.5,\n        cursor: 'unset',\n    },\n    toggleFooterPadding: {\n        padding: '7px 6px 1px 6px',\n    },\n    border: {\n        borderRadius: '2px',\n        border: `1px solid ${colors.lightGrey}`,\n    },\n};\n\nconst baseStyle = {\n    icon: style.iconBase,\n    container: style.buttonBase,\n};\n\nconst disabledStyle = {\n    icon: style.iconBase,\n    container: style.buttonDisabled,\n};\n\nconst activeStyle = {\n    icon: { ...style.iconBase, fill: colors.royalBlue },\n    container: {\n        ...style.buttonBase,\n        backgroundColor: colors.lightBlue,\n    },\n};\n\nconst inactiveStyle = disabled => (disabled ? disabledStyle : baseStyle);\n\nconst tableBtnStyle = (activeType, disabled) =>\n    [REPORT_TABLE, EVENT_REPORT].includes(activeType)\n        ? activeStyle\n        : inactiveStyle(disabled);\n\nconst chartBtnStyle = (activeType, disabled) =>\n    [CHART, EVENT_CHART].includes(activeType)\n        ? activeStyle\n        : inactiveStyle(disabled);\n\nconst mapBtnStyle = (activeType, disabled) =>\n    [MAP].includes(activeType) ? activeStyle : inactiveStyle(disabled);\n\nexport const getItemTypeId = (itemTypeMap, visualizationType, domainType) => {\n    const item = Object.values(itemTypeMap).find(\n        item =>\n            item.visualizationType === visualizationType &&\n            item.domainType === domainType\n    );\n    return item.id;\n};\n\nclass VisualizationItemHeaderButtons extends Component {\n    render() {\n        const {\n            item,\n            onSelectVisualization,\n            activeFooter,\n            activeType,\n            onToggleFooter,\n        } = this.props;\n\n        const domainType = itemTypeMap[item.type].domainType;\n\n        const onViewTable = () =>\n            onSelectVisualization(\n                getItemTypeId(itemTypeMap, VISUALIZATION_TYPE_TABLE, domainType)\n            );\n\n        const onViewChart = () =>\n            onSelectVisualization(\n                getItemTypeId(itemTypeMap, VISUALIZATION_TYPE_CHART, domainType)\n            );\n\n        const onViewMap = () =>\n            onSelectVisualization(\n                getItemTypeId(itemTypeMap, VISUALIZATION_TYPE_MAP, domainType)\n            );\n\n        const toggleFooterBase = activeFooter ? activeStyle : baseStyle;\n\n        const toggleFooter = {\n            ...toggleFooterBase,\n            container: {\n                ...toggleFooterBase.container,\n                ...style.toggleFooterPadding,\n                ...style.border,\n            },\n        };\n\n        // disable toggle buttons\n        let disabled = false;\n\n        if (item.type === VISUALIZATION_TYPE_CHART) {\n            if (extractFavorite(item).type.match(/^YEAR_OVER_YEAR/)) {\n                disabled = true;\n            }\n        }\n\n        const tableButtonStyle = tableBtnStyle(activeType, disabled);\n        const chartButtonStyle = chartBtnStyle(activeType, disabled);\n        const mapButtonStyle = mapBtnStyle(activeType, disabled);\n\n        return (\n            <Fragment>\n                <div style={{ marginRight: 10 }}>\n                    <ItemHeaderButton\n                        style={toggleFooter.container}\n                        onClick={onToggleFooter}\n                    >\n                        <MessageIcon style={toggleFooter.icon} />\n                    </ItemHeaderButton>\n                </div>\n                <div style={style.border}>\n                    <ItemHeaderButton\n                        disabled={disabled}\n                        style={tableButtonStyle.container}\n                        onClick={onViewTable}\n                    >\n                        <TableIcon style={tableButtonStyle.icon} />\n                    </ItemHeaderButton>\n                    <ItemHeaderButton\n                        disabled={disabled}\n                        style={chartButtonStyle.container}\n                        onClick={onViewChart}\n                    >\n                        <ChartIcon style={chartButtonStyle.icon} />\n                    </ItemHeaderButton>\n                    {domainType === DOMAIN_TYPE_AGGREGATE ? (\n                        <ItemHeaderButton\n                            disabled={disabled}\n                            style={mapButtonStyle.container}\n                            onClick={onViewMap}\n                        >\n                            <MapIcon style={mapButtonStyle.icon} />\n                        </ItemHeaderButton>\n                    ) : null}\n                </div>\n            </Fragment>\n        );\n    }\n}\n\nexport default VisualizationItemHeaderButtons;\n","// Note that this ignores discrepancies in 'this', so shouldn't be used with bound functions\n// This is useful instead of lodash/memoize when we only need to memoize a single value\n// Inspiration: https://github.com/alexreardon/memoize-one\n\nconst memoizeOne = fn => {\n    let lastArgs = undefined;\n    let lastValue = undefined;\n\n    return (...args) => {\n        if (\n            lastArgs &&\n            args.length === lastArgs.length &&\n            args.every((arg, i) => arg === lastArgs[i])\n        ) {\n            return lastValue;\n        }\n        lastArgs = args;\n        lastValue = fn(...args);\n        return lastValue;\n    };\n};\n\nexport default memoizeOne;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport ChartPlugin from '@dhis2/data-visualizer-plugin';\n\nimport i18n from '@dhis2/d2-i18n';\nimport uniqueId from 'lodash/uniqueId';\n\nimport DefaultPlugin from './DefaultPlugin';\nimport ItemHeader, { HEADER_HEIGHT } from '../ItemHeader';\nimport ItemFooter from './ItemFooter';\nimport VisualizationItemHeaderButtons from './ItemHeaderButtons';\nimport * as pluginManager from './plugin';\nimport { sGetVisualization } from '../../../reducers/visualizations';\nimport { sGetItemFiltersRoot } from '../../../reducers/itemFilters';\nimport {\n    acReceivedVisualization,\n    acReceivedActiveVisualization,\n} from '../../../actions/selected';\nimport { CHART, MAP, itemTypeMap } from '../../../modules/itemTypes';\nimport { colors } from '../../../modules/colors';\nimport memoizeOne from '../../../modules/memoizeOne';\nimport { getVisualizationConfig } from './plugin';\n\nconst styles = {\n    icon: {\n        width: 16,\n        height: 16,\n        marginLeft: 3,\n        cursor: 'pointer',\n        fill: colors.muiDefaultGrey,\n    },\n    title: {\n        overflow: 'hidden',\n        maxWidth: '85%',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n    },\n    textDiv: {\n        fontSize: '14px',\n        fontStretch: 'normal',\n        padding: '10px',\n        lineHeight: '20px',\n    },\n};\n\nconst applyFilters = (visualization, filters) => {\n    if (!Object.keys(filters).length) {\n        return visualization;\n    }\n\n    // deep clone objects in filters to avoid changing the visualization in the Redux store\n    const visRows = visualization.rows.map(obj => ({ ...obj }));\n    const visColumns = visualization.columns.map(obj => ({ ...obj }));\n    const visFilters = visualization.filters.map(obj => ({ ...obj }));\n\n    Object.keys(filters).forEach(dimensionId => {\n        if (filters[dimensionId]) {\n            let dimensionFound = false;\n\n            [visRows, visColumns, visFilters].forEach(dimensionObjects =>\n                dimensionObjects\n                    .filter(obj => obj.dimension === dimensionId)\n                    .forEach(obj => {\n                        dimensionFound = true;\n                        obj.items = filters[dimensionId];\n                    })\n            );\n\n            // add dimension to filters if not already present elsewhere\n            if (!dimensionFound) {\n                visFilters.push({\n                    dimension: dimensionId,\n                    items: filters[dimensionId],\n                });\n            }\n        }\n    });\n\n    return {\n        ...visualization,\n        rows: visRows,\n        columns: visColumns,\n        filters: visFilters,\n    };\n};\n\nexport class Item extends Component {\n    state = {\n        showFooter: false,\n        configLoaded: false,\n    };\n\n    constructor(props, context) {\n        super(props);\n\n        this.d2 = context.d2;\n\n        this.contentRef = React.createRef();\n    }\n\n    async componentDidMount() {\n        this.props.onVisualizationLoaded(\n            // TODO do not call fetch on the pluginManager, do it here as the manager will eventually be removed...\n            await pluginManager.fetch(this.props.item)\n        );\n\n        this.setState({\n            configLoaded: true,\n        });\n    }\n\n    getUniqueKey = memoizeOne(() => uniqueId());\n\n    pluginCredentials = null;\n\n    getPluginComponent = () => {\n        const visualization = getVisualizationConfig(\n            this.props.visualization,\n            this.props.item.type,\n            this.getActiveType()\n        );\n\n        if (!visualization) {\n            return (\n                <div className={this.props.classes.textDiv}>\n                    {i18n.t('No data to display')}\n                </div>\n            );\n        }\n\n        const props = {\n            ...this.props,\n            visualization,\n            style: this.getContentStyle(),\n        };\n\n        switch (this.getActiveType()) {\n            case CHART: {\n                return (\n                    <ChartPlugin\n                        d2={this.d2}\n                        config={applyFilters(\n                            props.visualization,\n                            props.itemFilters\n                        )}\n                        forDashboard={true}\n                        style={props.style}\n                    />\n                );\n            }\n            case MAP: {\n                if (props.item.type === MAP) {\n                    // apply filters only to thematic and event layers\n                    // for maps AO\n                    const mapViews = props.visualization.mapViews.map(obj => {\n                        if (\n                            obj.layer.includes('thematic') ||\n                            obj.layer.includes('event')\n                        ) {\n                            return applyFilters(obj, props.itemFilters);\n                        }\n\n                        return obj;\n                    });\n\n                    props.visualization = {\n                        ...props.visualization,\n                        mapViews,\n                    };\n                } else {\n                    // this is the case of a non map AO passed to the maps plugin\n                    // due to a visualization type switch in dashboard item\n                    // maps plugin takes care of converting the AO to a suitable format\n                    props.visualization = applyFilters(\n                        props.visualization,\n                        props.itemFilters\n                    );\n                }\n\n                return <DefaultPlugin {...props} />;\n            }\n            default: {\n                props.visualization = applyFilters(\n                    props.visualization,\n                    props.itemFilters\n                );\n\n                return <DefaultPlugin {...props} />;\n            }\n        }\n    };\n\n    onToggleFooter = () => {\n        this.setState(\n            { showFooter: !this.state.showFooter },\n            this.props.onToggleItemExpanded(this.props.item.id)\n        );\n    };\n\n    onSelectVisualization = activeType => {\n        // Cancel request if type is already active\n        if (activeType === this.getActiveType()) {\n            return;\n        }\n\n        pluginManager.unmount(this.props.item, this.getActiveType());\n\n        this.props.onSelectVisualization(\n            this.props.visualization.id,\n            this.props.item.type,\n            activeType\n        );\n    };\n\n    getActiveType = () =>\n        this.props.visualization.activeType || this.props.item.type;\n\n    pluginIsAvailable = () =>\n        pluginManager.pluginIsAvailable(\n            this.props.item,\n            this.props.visualization\n        );\n\n    getTitle = () => {\n        const { item, editMode, classes } = this.props;\n        const itemName = pluginManager.getName(item);\n\n        return (\n            <div style={{ display: 'flex', alignItems: 'center' }}>\n                <span className={classes.title} title={itemName}>\n                    {itemName}\n                </span>\n                {!editMode && this.pluginIsAvailable() ? (\n                    <a\n                        href={pluginManager.getLink(this.props.item, this.d2)}\n                        style={{ height: 16 }}\n                        title={`View in ${\n                            itemTypeMap[this.props.item.type].appName\n                        } app`}\n                    >\n                        <LaunchIcon className={classes.icon} />\n                    </a>\n                ) : null}\n            </div>\n        );\n    };\n\n    getActionButtons = () =>\n        pluginManager.pluginIsAvailable(\n            this.props.item,\n            this.props.visualization\n        ) && !this.props.editMode ? (\n            <VisualizationItemHeaderButtons\n                item={this.props.item}\n                activeFooter={this.state.showFooter}\n                activeType={this.getActiveType()}\n                onSelectVisualization={this.onSelectVisualization}\n                onToggleFooter={this.onToggleFooter}\n            />\n        ) : null;\n\n    getContentStyle = () => {\n        const { item, editMode } = this.props;\n        const PADDING_BOTTOM = 4;\n\n        return !editMode\n            ? {\n                  height: item.originalHeight - HEADER_HEIGHT - PADDING_BOTTOM,\n              }\n            : { height: this.contentRef.offsetHeight };\n    };\n\n    render() {\n        const { item, editMode, itemFilters } = this.props;\n        const { showFooter } = this.state;\n\n        return (\n            <Fragment>\n                <ItemHeader\n                    title={this.getTitle()}\n                    actionButtons={this.getActionButtons()}\n                    editMode={editMode}\n                />\n                <div\n                    key={this.getUniqueKey(itemFilters)}\n                    className=\"dashboard-item-content\"\n                    ref={ref => (this.contentRef = ref)}\n                >\n                    {this.state.configLoaded && this.getPluginComponent()}\n                </div>\n                {!editMode && showFooter ? <ItemFooter item={item} /> : null}\n            </Fragment>\n        );\n    }\n}\n\nItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nItem.propTypes = {\n    item: PropTypes.object,\n    editMode: PropTypes.bool,\n    onToggleItemExpanded: PropTypes.func,\n    itemFilters: PropTypes.object,\n    visualization: PropTypes.object,\n};\n\nItem.defaultProps = {\n    item: {},\n    editMode: false,\n    onToggleItemExpanded: Function.prototype,\n    itemFilters: {},\n    visualization: {},\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n    itemFilters: sGetItemFiltersRoot(state),\n    visualization: sGetVisualization(\n        state,\n        pluginManager.extractFavorite(ownProps.item).id\n    ),\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onVisualizationLoaded: visualization =>\n        dispatch(acReceivedVisualization(visualization)),\n    onSelectVisualization: (id, type, activeType) =>\n        dispatch(acReceivedActiveVisualization(id, type, activeType)),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(Item));\n","import React from 'react';\nimport { colors } from '../modules/colors';\n\nconst style = {\n    backgroundColor: colors.lightGrey,\n    border: 'none',\n    height: '1px',\n    margin: '0px 0px 5px 0px',\n};\n\nconst Line = props => <hr style={style} />;\n\nexport default Line;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\n\nimport { sGetMessagesRoot } from '../../../reducers/messages';\nimport { formatDate } from '../../../modules/util';\nimport { colors } from '../../../modules/colors';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nimport './MessagesItem.css';\n\nconst PRIVATE = 'PRIVATE';\n\nconst messageTypes = {\n    [PRIVATE]: 'Private',\n    VALIDATION_RESULT: 'Validation',\n    TICKET: 'Ticket',\n    SYSTEM: 'System',\n};\n\nconst style = {\n    list: {\n        listStyleType: 'none',\n        paddingLeft: '0px',\n    },\n    seeAll: {\n        textAlign: 'center',\n        fontSize: '13px',\n        marginBottom: '5px',\n    },\n    sender: {\n        fontSize: '13px',\n        lineHeight: '15px',\n        margin: 0,\n        color: colors.darkGrey,\n    },\n    snippet: {\n        color: colors.darkGrey,\n        fontSize: '13px',\n        lineHeight: '15px',\n        maxHeight: '30px',\n        overflow: 'hidden',\n    },\n};\n\nclass MessagesItem extends Component {\n    state = {\n        uiLocale: '',\n    };\n\n    async componentDidMount() {\n        const uiLocale = await this.context.d2.currentUser.userSettings.get(\n            'keyUiLocale'\n        );\n\n        this.setState({ uiLocale });\n    }\n\n    getMessageHref = msg => {\n        const msgIdentifier = msg ? `#/${msg.messageType}/${msg.id}` : '';\n        return `${this.context.baseUrl}/dhis-web-messaging/${msgIdentifier}`;\n    };\n\n    getMessageSender = msg => {\n        const latestMsg = msg.messages.slice(-1)[0];\n        return latestMsg.sender ? latestMsg.sender.displayName : '';\n    };\n\n    getMessageItems = () => {\n        const editClass = !this.props.editMode ? 'view' : null;\n\n        return this.props.messages.map(msg => {\n            const redirectToMsg = () => {\n                if (!this.props.editMode) {\n                    document.location.href = this.getMessageHref(msg);\n                }\n            };\n\n            const sender =\n                msg.messageType === PRIVATE\n                    ? this.getMessageSender(msg)\n                    : messageTypes[msg.messageType];\n\n            const readClass = !msg.read ? 'unread' : null;\n            const latestMsg = msg.messages.slice(-1)[0];\n            const msgDate = latestMsg.lastUpdated;\n\n            return (\n                <li\n                    className={`message-item ${editClass}`}\n                    key={msg.id}\n                    onClick={redirectToMsg}\n                >\n                    <p className={`message-title ${readClass}`}>\n                        {msg.displayName} ({msg.messageCount})\n                    </p>\n                    <p style={style.sender}>\n                        {sender} - {formatDate(msgDate, this.state.uiLocale)}\n                    </p>\n                    <p style={style.snippet}>{latestMsg.text}</p>\n                </li>\n            );\n        });\n    };\n\n    render() {\n        return (\n            <Fragment>\n                <ItemHeader title={i18n.t('Messages')} />\n                <Line />\n                {this.props.messages.length > 0 && (\n                    <div className=\"dashboard-item-content\">\n                        <ul style={style.list}>{this.getMessageItems()}</ul>\n                        <div style={style.seeAll}>\n                            <a href={this.getMessageHref()}>\n                                {i18n.t('See all messages')}\n                            </a>\n                        </div>\n                    </div>\n                )}\n            </Fragment>\n        );\n    }\n}\n\nMessagesItem.contextTypes = {\n    d2: PropTypes.object,\n    baseUrl: PropTypes.string,\n};\n\nconst mapStateToProps = state => {\n    return {\n        messages: Object.values(sGetMessagesRoot(state)),\n    };\n};\n\nconst MessagesContainer = connect(\n    mapStateToProps,\n    null\n)(MessagesItem);\n\nexport default MessagesContainer;\n","import React, { Fragment } from 'react';\nimport ItemHeader from '../ItemHeader';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nconst NotSupportedItem = props => (\n    <Fragment>\n        <ItemHeader title={`Item type not supported: ${props.item.type}`} />\n        <div\n            style={{\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center',\n                height: '90%',\n            }}\n        >\n            <NotInterestedIcon\n                style={{ width: 100, height: 100, align: 'center' }}\n                color=\"disabled\"\n            />\n        </div>\n    </Fragment>\n);\n\nexport default NotSupportedItem;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { List, ListItem as MUIListItem } from 'material-ui/List';\nimport IconButton from 'material-ui/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport Line from '../../../widgets/Line';\nimport {\n    itemTypeMap,\n    getItemUrl,\n    getItemIcon,\n} from '../../../modules/itemTypes';\nimport { orArray } from '../../../modules/util';\nimport { tRemoveListItemContent } from './actions';\nimport { colors } from '../../../modules/colors';\nimport ItemHeader from '../ItemHeader';\n\nconst getItemTitle = item => {\n    return itemTypeMap[item.type].pluralTitle;\n};\n\nconst getContentItems = item =>\n    orArray(item[itemTypeMap[item.type].propName]).filter(\n        (item, index, array) =>\n            array.findIndex(el => el.id === item.id) === index\n    );\n\nconst removeContent = (handler, item, contentToRemove) => () => {\n    handler(item, contentToRemove);\n};\n\nconst ListItem = (props, context) => {\n    const { item, editMode, tRemoveListItemContent } = props;\n\n    // avoid showing duplicates\n    const contentItems = getContentItems(item);\n\n    const primaryText = contentItem => {\n        const deleteButton = (\n            <IconButton\n                style={{\n                    verticalAlign: 'text-bottom',\n                    padding: '0 12px',\n                    height: 20,\n                }}\n                iconStyle={{\n                    width: 20,\n                    height: 20,\n                    fill: colors.red,\n                }}\n                onClick={removeContent(\n                    tRemoveListItemContent,\n                    item,\n                    contentItem\n                )}\n            >\n                <DeleteIcon />\n            </IconButton>\n        );\n\n        return (\n            <div>\n                <a\n                    style={{ textDecoration: 'none' }}\n                    href={getItemUrl(item.type, contentItem, context.d2)}\n                >\n                    {contentItem.name}\n                </a>\n                {editMode ? deleteButton : null}\n            </div>\n        );\n    };\n\n    const ItemIcon = getItemIcon(item.type);\n\n    return (\n        <Fragment>\n            <ItemHeader title={getItemTitle(item)} />\n            <Line />\n            <List className=\"dashboard-item-content\">\n                {contentItems.map(contentItem => (\n                    <MUIListItem\n                        key={contentItem.id}\n                        primaryText={primaryText(contentItem)}\n                        leftIcon={<ItemIcon style={{ margin: 0 }} />}\n                        disabled={true}\n                        innerDivStyle={{ padding: '4px 4px 4px 32px' }}\n                    />\n                ))}\n            </List>\n        </Fragment>\n    );\n};\n\nListItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nconst ListItemContainer = connect(\n    null,\n    {\n        tRemoveListItemContent,\n    }\n)(ListItem);\n\nexport default ListItemContainer;\n","import {\n    acUpdateDashboardItem,\n    acRemoveDashboardItem,\n} from '../../../actions/editDashboard';\nimport { itemTypeMap } from '../../../modules/itemTypes';\n\nexport const tRemoveListItemContent = (dashboardItem, content) => dispatch => {\n    const listItemType = itemTypeMap[dashboardItem.type].propName;\n\n    const newContent = dashboardItem[listItemType].filter(\n        item => item.id !== content.id\n    );\n\n    if (newContent.length) {\n        dashboardItem[listItemType] = newContent;\n        dispatch(acUpdateDashboardItem(dashboardItem));\n    } else {\n        dispatch(acRemoveDashboardItem(dashboardItem));\n    }\n};\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport TextField from '@dhis2/d2-ui-core/text-field/TextField';\nimport {\n    Parser as RichTextParser,\n    Editor as RichTextEditor,\n} from '@dhis2/d2-ui-rich-text';\n\nimport { acUpdateDashboardItem } from '../../../actions/editDashboard';\nimport { sGetEditDashboardItems } from '../../../reducers/editDashboard';\nimport { sGetDashboardItems } from '../../../reducers/dashboards';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nconst style = {\n    textDiv: {\n        padding: '10px',\n        whiteSpace: 'pre-line',\n        lineHeight: '20px',\n    },\n    textField: {\n        fontSize: '14px',\n        fontStretch: 'normal',\n        width: '90%',\n        margin: '0 auto',\n        display: 'block',\n    },\n    container: {\n        marginBottom: '20px',\n        marginTop: '20px',\n    },\n};\n\nconst TextItem = props => {\n    const { item, editMode, text, acUpdateDashboardItem } = props;\n\n    const onChangeText = text => {\n        const updatedItem = {\n            ...item,\n            text,\n        };\n\n        acUpdateDashboardItem(updatedItem);\n    };\n\n    const viewItem = () => {\n        const textDivStyle = Object.assign({}, style.textField, style.textDiv);\n        return (\n            <div className=\"dashboard-item-content\" style={style.container}>\n                <RichTextParser style={textDivStyle}>{text}</RichTextParser>\n            </div>\n        );\n    };\n\n    const editItem = () => {\n        return (\n            <Fragment>\n                <ItemHeader title={i18n.t('Text item')} />\n                <Line />\n                <div className=\"dashboard-item-content\">\n                    <RichTextEditor onEdit={onChangeText}>\n                        <TextField\n                            value={text}\n                            multiline\n                            rows={1}\n                            fullWidth\n                            style={style.textField}\n                            placeholder={i18n.t('Add text here')}\n                            onChange={onChangeText}\n                        />\n                    </RichTextEditor>\n                </div>\n            </Fragment>\n        );\n    };\n\n    return <Fragment>{editMode ? editItem() : viewItem()}</Fragment>;\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    const items = ownProps.editMode\n        ? sGetEditDashboardItems(state)\n        : sGetDashboardItems(state);\n\n    const item = items.find(item => item.id === ownProps.item.id);\n\n    return {\n        text: item ? item.text : '',\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        acUpdateDashboardItem,\n    }\n)(TextItem);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nimport { FILTER_ORG_UNIT } from '../../../actions/itemFilters';\nimport { sGetItemFiltersRoot } from '../../../reducers/itemFilters';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nconst getIframeSrc = (appDetails, item, itemFilters) => {\n    let iframeSrc = `${appDetails.launchUrl}?dashboardItemId=${item.id}`;\n\n    if (\n        itemFilters &&\n        itemFilters[FILTER_ORG_UNIT] &&\n        itemFilters[FILTER_ORG_UNIT].length\n    ) {\n        const ouIds = itemFilters[FILTER_ORG_UNIT].map(\n            ouPath => ouPath.split('/').slice(-1)[0]\n        );\n\n        iframeSrc += `&userOrgUnit=${ouIds.join(',')}`;\n    }\n\n    return iframeSrc;\n};\n\nconst AppItem = ({ item, itemFilters }, context) => {\n    let appDetails;\n\n    const appKey = item.appKey;\n\n    if (appKey) {\n        appDetails = context.d2.system.installedApps.find(\n            app => app.key === appKey\n        );\n    }\n\n    return appDetails && appDetails.name && appDetails.launchUrl ? (\n        <Fragment>\n            <ItemHeader title={appDetails.name} />\n            <Line />\n            <iframe\n                title={appDetails.name}\n                src={getIframeSrc(appDetails, item, itemFilters)}\n                className=\"dashboard-item-content\"\n                style={{ border: 'none' }}\n            />\n        </Fragment>\n    ) : (\n        <Fragment>\n            <ItemHeader title={`${appKey} app not found`} />\n            <Line />\n            <div\n                className=\"dashboard-item-content\"\n                style={{\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    height: '90%',\n                }}\n            >\n                <NotInterestedIcon\n                    color=\"disabled\"\n                    disabled\n                    style={{ width: 100, height: 100, align: 'center' }}\n                />\n            </div>\n        </Fragment>\n    );\n};\n\nAppItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nconst mapStateToProps = state => ({\n    itemFilters: sGetItemFiltersRoot(state),\n});\n\nexport default connect(mapStateToProps)(AppItem);\n","import React, { Fragment } from 'react';\nimport i18n from '@dhis2/d2-i18n';\n\nimport { colors } from '../../../modules/colors';\nimport ItemHeader from '../ItemHeader';\n\nconst style = {\n    margin: '21px 28px',\n    fontSize: '14px',\n    lineHeight: '18px',\n    color: colors.charcoalGrey,\n};\n\nconst SpacerItem = () => {\n    return (\n        <Fragment>\n            <ItemHeader title={i18n.t('Spacer')} />\n            <p style={style}>\n                {i18n.t(\n                    'Use a spacer to create empty vertical space between other dashboard items.'\n                )}\n            </p>\n        </Fragment>\n    );\n};\n\nexport default SpacerItem;\n","import React from 'react';\n\nimport VisualizationItem from './VisualizationItem/Item';\nimport MessagesItem from './MessagesItem/Item';\nimport NotSupportedItem from './NotSupportedItem/Item';\nimport ListItem from './ListItem/Item';\nimport TextItem from './TextItem/Item';\nimport AppItem from './AppItem/Item';\nimport SpacerItem from './SpacerItem/Item';\nimport {\n    APP,\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_CHART,\n    EVENT_REPORT,\n    MESSAGES,\n    REPORTS,\n    RESOURCES,\n    USERS,\n    TEXT,\n    SPACER,\n} from '../../modules/itemTypes';\nimport { DEFAULT_STATE_ITEM_FILTERS } from '../../reducers/itemFilters';\n\nconst getGridItem = type => {\n    switch (type) {\n        case REPORT_TABLE:\n        case CHART:\n        case MAP:\n        case EVENT_CHART:\n        case EVENT_REPORT:\n            return VisualizationItem;\n        case MESSAGES:\n            return MessagesItem;\n        case REPORTS:\n        case RESOURCES:\n        case USERS:\n            return ListItem;\n        case TEXT:\n            return TextItem;\n        case SPACER:\n            return SpacerItem;\n        case APP:\n            return AppItem;\n        default:\n            return NotSupportedItem;\n    }\n};\n\nexport const Item = props => {\n    const GridItem = getGridItem(props.item.type);\n\n    return (\n        <GridItem\n            item={props.item}\n            editMode={props.editMode}\n            itemFilters={\n                props.editMode ? DEFAULT_STATE_ITEM_FILTERS : props.itemFilters\n            }\n            onToggleItemExpanded={props.onToggleItemExpanded}\n        />\n    );\n};\n","import React from 'react';\nimport ItemHeaderButton from '../Item/ItemHeaderButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { colors } from '../../modules/colors';\n\nconst style = {\n    button: {\n        position: 'absolute',\n        top: '7px',\n        right: '7px',\n        zIndex: '1000',\n    },\n    icon: {\n        fill: colors.red,\n    },\n};\n\nconst DeleteItemHeaderButton = ({ onClick }) => (\n    <ItemHeaderButton onClick={onClick} style={style.button}>\n        <DeleteIcon style={style.icon} />\n    </ItemHeaderButton>\n);\n\nexport default DeleteItemHeaderButton;\n","import React from 'react';\nimport LoadingMask from '@dhis2/d2-ui-core/loading-mask/LoadingMask.component';\n\nconst styles = {\n    modal: {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        width: '100%',\n        height: '100%',\n        zIndex: 999999998,\n        pointerEvents: 'none',\n    },\n    dark: {\n        backgroundColor: '#000000',\n        opacity: 0.2,\n        zIndex: 999999999,\n    },\n};\n\nconst ModalLoadingMask = ({ isLoading }) => {\n    if (!isLoading) {\n        return null;\n    }\n\n    return (\n        <div className=\"loading-mask-wrapper\">\n            <div style={styles.modal}>\n                <LoadingMask />\n            </div>\n            <div\n                style={{\n                    ...styles.modal,\n                    ...styles.dark,\n                }}\n            />\n        </div>\n    );\n};\n\nexport default ModalLoadingMask;\n","import React from 'react';\nimport { colors } from '../modules/colors';\n\nexport const NoContentMessage = ({ text }) => (\n    <div\n        style={{\n            padding: '50px 10px',\n            textAlign: 'center',\n            fontSize: '15px',\n            fontWeight: 500,\n            color: colors.charcoalGrey,\n        }}\n    >\n        {text}\n    </div>\n);\n\nexport default NoContentMessage;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash/debounce';\n\nconst defaultDebounceMs = 100;\nconst defaultBufferFactor = 0.25;\n\nclass ProgressiveLoadingContainer extends Component {\n    static propTypes = {\n        children: PropTypes.node.isRequired,\n        debounceMs: PropTypes.number,\n        bufferFactor: PropTypes.number,\n    };\n    static defaultProps = {\n        debounceMs: defaultDebounceMs,\n        bufferFactor: defaultBufferFactor,\n    };\n\n    state = {\n        shouldLoad: false,\n    };\n    containerRef = null;\n    shouldLoadHandler = null;\n\n    checkShouldLoad() {\n        const bufferPx = this.props.bufferFactor * window.innerHeight;\n\n        if (!this.containerRef) {\n            return;\n        }\n\n        const rect = this.containerRef.getBoundingClientRect();\n        if (\n            rect.bottom > -bufferPx &&\n            rect.top < window.innerHeight + bufferPx\n        ) {\n            this.setState({\n                shouldLoad: true,\n            });\n\n            this.removeHandler();\n        }\n    }\n\n    registerHandler() {\n        this.shouldLoadHandler = debounce(\n            () => this.checkShouldLoad(),\n            this.props.debounceMs\n        );\n\n        window.addEventListener('scroll', this.shouldLoadHandler);\n    }\n    removeHandler() {\n        window.removeEventListener('scroll', this.shouldLoadHandler);\n    }\n\n    componentDidMount() {\n        this.registerHandler();\n        this.checkShouldLoad();\n    }\n\n    componentWillUnmount() {\n        this.removeHandler();\n    }\n\n    render() {\n        const { children, debounceMs, bufferFactor, ...props } = this.props;\n        const { shouldLoad } = this.state;\n\n        return (\n            <div ref={ref => (this.containerRef = ref)} {...props}>\n                {shouldLoad && children}\n            </div>\n        );\n    }\n}\n\nexport default ProgressiveLoadingContainer;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ReactGridLayout from 'react-grid-layout';\n\nimport {\n    acUpdateDashboardLayout,\n    acRemoveDashboardItem,\n} from '../../actions/editDashboard';\nimport { Item } from '../Item/Item';\nimport { resize as pluginResize } from '../Item/VisualizationItem/plugin';\nimport { isPluginType } from '../../modules/itemTypes';\nimport {\n    GRID_ROW_HEIGHT,\n    GRID_COMPACT_TYPE,\n    ITEM_MIN_HEIGHT,\n    MARGIN,\n    getGridColumns,\n    hasShape,\n    onItemResize,\n} from './gridUtil';\nimport { orArray } from '../../modules/util';\nimport DeleteItemButton from './DeleteItemButton';\nimport ModalLoadingMask from '../../widgets/ModalLoadingMask';\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\n\nimport './ItemGrid.css';\nimport { sGetSelectedId, sGetSelectedIsLoading } from '../../reducers/selected';\nimport {\n    sGetEditDashboardRoot,\n    sGetEditDashboardItems,\n} from '../../reducers/editDashboard';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n} from '../../reducers/dashboards';\nimport ProgressiveLoadingContainer from '../Item/ProgressiveLoadingContainer';\n\n// Component\n\nconst EXPANDED_HEIGHT = 17;\n\nexport class ItemGrid extends Component {\n    state = {\n        expandedItems: {},\n    };\n\n    NO_ITEMS_MESSAGE = i18n.t('There are no items on this dashboard');\n\n    onToggleItemExpanded = clickedId => {\n        const isExpanded =\n            typeof this.state.expandedItems[clickedId] === 'boolean'\n                ? this.state.expandedItems[clickedId]\n                : false;\n\n        const expandedItems = { ...this.state.expandedItems };\n        expandedItems[clickedId] = !isExpanded;\n        this.setState({ expandedItems });\n    };\n\n    onRemoveItem = clickedId => {\n        this.props.acRemoveDashboardItem(clickedId);\n    };\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.edit) {\n            this.setState({ expandedItems: {} });\n        }\n    }\n\n    onLayoutChange = newLayout => {\n        if (this.props.edit) {\n            this.props.acUpdateDashboardLayout(newLayout);\n        }\n    };\n\n    onResizeStop = (layout, oldItem, newItem) => {\n        onItemResize(newItem.i);\n\n        const dashboardItem = this.props.dashboardItems.find(\n            item => item.id === newItem.i\n        );\n\n        // call resize on the item component if it's a plugin type\n        if (dashboardItem && isPluginType(dashboardItem)) {\n            pluginResize(dashboardItem);\n        }\n    };\n\n    onRemoveItemWrapper = id => () => this.onRemoveItem(id);\n\n    render() {\n        const { edit, isLoading, dashboardItems } = this.props;\n\n        if (!isLoading && !dashboardItems.length) {\n            return <NoContentMessage text={this.NO_ITEMS_MESSAGE} />;\n        }\n\n        const items = dashboardItems.map((item, index) => {\n            const expandedItem = this.state.expandedItems[item.id];\n            let hProp = { h: item.h };\n\n            if (expandedItem && expandedItem === true) {\n                hProp.h = item.h + EXPANDED_HEIGHT;\n            }\n\n            return Object.assign({}, item, hProp, {\n                i: item.id,\n                minH: ITEM_MIN_HEIGHT,\n            });\n        });\n\n        return (\n            <div className=\"grid-wrapper\">\n                <ModalLoadingMask isLoading={isLoading} />\n                <ReactGridLayout\n                    onLayoutChange={this.onLayoutChange}\n                    onResizeStop={this.onResizeStop}\n                    className=\"layout\"\n                    layout={items}\n                    margin={MARGIN}\n                    cols={getGridColumns()}\n                    rowHeight={GRID_ROW_HEIGHT}\n                    width={window.innerWidth}\n                    compactType={GRID_COMPACT_TYPE}\n                    isDraggable={edit}\n                    isResizable={edit}\n                    draggableCancel=\"input,textarea\"\n                >\n                    {items.map(item => {\n                        const itemClassNames = [\n                            item.type,\n                            edit ? 'edit' : 'view',\n                        ].join(' ');\n\n                        return (\n                            <ProgressiveLoadingContainer\n                                key={item.i}\n                                className={itemClassNames}\n                            >\n                                {edit ? (\n                                    <DeleteItemButton\n                                        onClick={this.onRemoveItemWrapper(\n                                            item.id\n                                        )}\n                                    />\n                                ) : null}\n                                <Item\n                                    item={item}\n                                    editMode={edit}\n                                    onToggleItemExpanded={\n                                        this.onToggleItemExpanded\n                                    }\n                                />\n                            </ProgressiveLoadingContainer>\n                        );\n                    })}\n                </ReactGridLayout>\n            </div>\n        );\n    }\n}\n\nItemGrid.propTypes = {\n    dashboardItems: PropTypes.array,\n};\n\nItemGrid.defaultProps = {\n    dashboardItems: [],\n};\n\n// Container\n\nconst mapStateToProps = (state, ownProps) => {\n    const selectedDashboard = ownProps.edit\n        ? sGetEditDashboardRoot(state)\n        : sGetDashboardById(state, sGetSelectedId(state));\n\n    const dashboardItems = ownProps.edit\n        ? sGetEditDashboardItems(state)\n        : sGetDashboardItems(state);\n\n    return {\n        isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n        dashboardItems,\n    };\n};\n\nconst mapDispatchToProps = {\n    acUpdateDashboardLayout,\n    acRemoveDashboardItem,\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const validItems = orArray(stateProps.dashboardItems).filter(hasShape);\n\n    return {\n        ...dispatchProps,\n        edit: ownProps.edit,\n        isLoading: stateProps.isLoading,\n        dashboardItems: validItems,\n        onItemResize,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n    mergeProps\n)(ItemGrid);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport i18n from '@dhis2/d2-i18n';\n\nimport { colors } from '../../modules/colors';\n\nconst styles = {\n    badgeContainer: {\n        margin: '2px',\n        padding: '0 16px',\n        borderRadius: '4px',\n        color: colors.white,\n        backgroundColor: '#212934',\n        height: 36,\n        display: 'flex',\n        alignItems: 'center',\n    },\n    badge: {\n        fontSize: '13px',\n        cursor: 'pointer',\n        whiteSpace: 'nowrap',\n    },\n    badgeRemove: {\n        fontSize: '12px',\n        textDecoration: 'underline',\n        marginLeft: '24px',\n        cursor: 'pointer',\n    },\n};\n\nclass FilterBadge extends Component {\n    onClick = id => () => this.props.onClick(id);\n    onRemove = id => () => this.props.onRemove(id);\n\n    render() {\n        const { data } = this.props;\n\n        return (\n            <div style={styles.badgeContainer}>\n                <span style={styles.badge} onClick={this.onClick(data.id)}>\n                    {`${data.name}: ${\n                        data.values.length > 1\n                            ? i18n.t('{{count}} selected', {\n                                  count: data.values.length,\n                              })\n                            : data.values[0].name\n                    }`}\n                </span>\n                <span\n                    style={styles.badgeRemove}\n                    onClick={this.onRemove(data.id)}\n                >\n                    {i18n.t('Remove')}\n                </span>\n            </div>\n        );\n    }\n}\n\nFilterBadge.propTypes = {\n    data: PropTypes.object.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onRemove: PropTypes.func.isRequired,\n};\n\nFilterBadge.defaultProps = {\n    onClick: Function.prototype,\n    onRemove: Function.prototype,\n};\n\nexport default FilterBadge;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { createSelector } from 'reselect';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport { sGetDimensions } from '../../reducers/dimensions';\nimport { sGetItemFiltersRoot } from '../../reducers/itemFilters';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { getTopOffset } from '../ControlBar/controlBarDimensions';\nimport { acRemoveItemFilter } from '../../actions/itemFilters';\nimport { acRemoveEditItemFilter } from '../../actions/editItemFilters';\nimport { acSetActiveModalDimension } from '../../actions/activeModalDimension';\n\nimport FilterBadge from './FilterBadge';\n\nconst styles = {\n    bar: {\n        position: 'sticky',\n        zIndex: 7,\n        padding: '8px 0',\n        display: 'flex',\n        justifyContent: 'center',\n        flexWrap: 'wrap',\n    },\n};\n\nexport class FilterBar extends Component {\n    onBadgeRemove = id => {\n        this.props.removeItemFilter(id);\n        this.props.removeEditItemFilter(id);\n    };\n\n    onBadgeClick = id => {\n        this.props.setActiveModalDimension({\n            id,\n            name: this.props.filters.find(item => item.id === id).name,\n        });\n    };\n\n    render() {\n        const { filters, userRows, classes } = this.props;\n        const top = getTopOffset(userRows) + 10;\n\n        return filters.length ? (\n            <div className={classes.bar} style={{ top }}>\n                {filters.map(filter => (\n                    <FilterBadge\n                        key={filter.id}\n                        data={filter}\n                        onClick={this.onBadgeClick}\n                        onRemove={this.onBadgeRemove}\n                    />\n                ))}\n            </div>\n        ) : null;\n    }\n}\n\nFilterBar.propTypes = {\n    filters: PropTypes.array.isRequired,\n    removeItemFilter: PropTypes.func.isRequired,\n    removeEditItemFilter: PropTypes.func.isRequired,\n};\n\nFilterBar.defaultProps = {\n    filters: [],\n    removeItemFIlter: Function.prototype,\n    removeEditItemFilter: Function.prototype,\n};\n\n// simplify the filters structure to:\n// [{ id: 'pe', name: 'Period', values: [{ id: 2019: name: '2019' }, {id: 'LAST_MONTH', name: 'Last month' }]}, ...]\nconst filtersSelector = createSelector(\n    [sGetItemFiltersRoot, sGetDimensions],\n    (filters, dimensions) =>\n        Object.keys(filters).reduce((arr, id) => {\n            arr.push({\n                id: id,\n                name: dimensions[id].name,\n                values: filters[id].map(value => ({\n                    id: value.id,\n                    name: value.displayName || value.name,\n                })),\n            });\n\n            return arr;\n        }, [])\n);\n\nconst mapStateToProps = state => ({\n    filters: filtersSelector(state),\n    userRows: sGetControlBarUserRows(state),\n});\n\nexport default connect(\n    mapStateToProps,\n    {\n        setActiveModalDimension: acSetActiveModalDimension,\n        removeItemFilter: acRemoveItemFilter,\n        removeEditItemFilter: acRemoveEditItemFilter,\n    }\n)(withStyles(styles)(FilterBar));\n","import React, { Fragment } from 'react';\nimport TitleBar from '../TitleBar/TitleBar';\nimport ItemGrid from '../ItemGrid/ItemGrid';\nimport FilterBar from '../FilterBar/FilterBar';\n\nexport const DashboardContent = props => (\n    <Fragment>\n        <TitleBar edit={props.editMode} />\n        <FilterBar />\n        <ItemGrid edit={props.editMode} />\n    </Fragment>\n);\n\nexport default DashboardContent;\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport isEmpty from 'lodash/isEmpty';\nimport i18n from '@dhis2/d2-i18n';\n\nimport {\n    sGetAllDashboards,\n    sDashboardsIsFetching,\n} from '../../reducers/dashboards';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport DashboardsBar from '../ControlBar/DashboardsBar';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport DashboardContent from './DashboardContent';\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nexport const Content = ({ hasDashboardContent, dashboardsIsEmpty }) => {\n    const msg = dashboardsIsEmpty\n        ? i18n.t(\n              'No dashboards found. Use the + button to create a new dashboard.'\n          )\n        : i18n.t('Requested dashboard not found');\n\n    return hasDashboardContent ? (\n        <DashboardContent editMode={false} />\n    ) : (\n        <NoContentMessage text={msg} />\n    );\n};\n\nexport const ViewDashboard = ({ id, dashboardsIsEmpty, dashboardsLoaded }) => {\n    const hasDashboardContent = id && !dashboardsIsEmpty;\n    const contentNotReady = !dashboardsLoaded || id === null;\n\n    return (\n        <Fragment>\n            <DashboardsBar />\n            <DashboardVerticalOffset />\n            <div className=\"dashboard-wrapper\">\n                {contentNotReady ? null : (\n                    <Content\n                        hasDashboardContent={hasDashboardContent}\n                        dashboardsIsEmpty={dashboardsIsEmpty}\n                    />\n                )}\n            </div>\n        </Fragment>\n    );\n};\n\nconst mapStateToProps = state => {\n    const dashboards = sGetAllDashboards(state);\n\n    return {\n        id: sGetSelectedId(state),\n        dashboardsIsEmpty: isEmpty(dashboards),\n        dashboardsLoaded: !sDashboardsIsFetching(state),\n    };\n};\n\nexport default connect(mapStateToProps)(ViewDashboard);\n","import React from 'react';\nimport RaisedButton from 'material-ui/RaisedButton';\n\nimport './PrimaryButton.css';\n\nconst PrimaryButton = props => {\n    const { onClick, children, disabled, style } = props;\n    const label = typeof children === 'string' ? children : null;\n    const classes = ['d2ui-primary-button', disabled ? 'disabled' : null].join(\n        ' '\n    );\n\n    return (\n        <RaisedButton\n            className={classes}\n            style={style}\n            primary={true}\n            onClick={onClick}\n            label={label}\n            disabled={disabled}\n        />\n    );\n};\n\nexport default PrimaryButton;\n","import React from 'react';\nimport MuiFlatButton from 'material-ui/FlatButton';\nimport { colors } from '../modules/colors';\n\nconst defaultStyles = {\n    color: colors.royalBlue,\n    backgroundColor: 'transparent',\n    minWidth: '30px',\n};\n\nconst FlatButton = ({ onClick, children, style, disabled }) => {\n    const label = typeof children === 'string' ? children : null;\n    const classes = ['d2ui-flat-button', disabled ? 'disabled' : null].join(\n        ' '\n    );\n\n    const combinedStyle = Object.assign({}, defaultStyles, style);\n\n    return (\n        <MuiFlatButton\n            className={classes}\n            style={combinedStyle}\n            onClick={onClick}\n            label={label}\n            disabled={disabled}\n        >\n            {typeof children !== 'string' ? children : null}\n        </MuiFlatButton>\n    );\n};\n\nexport default FlatButton;\n","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport Dialog from 'material-ui/Dialog';\n\nimport FlatButton from '../../widgets/FlatButton';\nimport PrimaryButton from '../../widgets/PrimaryButton';\n\nexport const ConfirmDeleteDialog = ({\n    dashboardName,\n    onDeleteConfirmed,\n    onContinueEditing,\n    open,\n}) => {\n    const actions = [\n        <FlatButton onClick={onDeleteConfirmed}>{i18n.t('Delete')}</FlatButton>,\n        <PrimaryButton onClick={onContinueEditing}>\n            {i18n.t('Continue editing')}\n        </PrimaryButton>,\n    ];\n\n    return (\n        <Dialog\n            title={i18n.t('Confirm delete dashboard')}\n            actions={actions}\n            modal={true}\n            open={open}\n        >\n            {i18n.t(\n                'Are you sure you want to delete dashboard \"{{ dashboardName }}\"?',\n                { dashboardName }\n            )}\n        </Dialog>\n    );\n};\n\nexport default ConfirmDeleteDialog;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport ControlBar from './ControlBar';\nimport TranslationDialog from '@dhis2/d2-ui-translation-dialog';\n\nimport PrimaryButton from '../../widgets/PrimaryButton';\nimport FlatButton from '../../widgets/FlatButton';\nimport ConfirmDeleteDialog from './ConfirmDeleteDialog';\nimport {\n    tSaveDashboard,\n    acClearEditDashboard,\n} from '../../actions/editDashboard';\nimport {\n    tDeleteDashboard,\n    acSetDashboardDisplayName,\n} from '../../actions/dashboards';\nimport {\n    sGetEditDashboardRoot,\n    sGetIsNewDashboard,\n} from '../../reducers/editDashboard';\nimport {\n    CONTROL_BAR_ROW_HEIGHT,\n    MIN_ROW_COUNT,\n    getControlBarHeight,\n} from './controlBarDimensions';\nimport { apiFetchDashboard } from '../../api/dashboards';\n\nimport classes from './styles/DashboardsBar.module.css';\n\nconst buttonBarStyle = {\n    height: CONTROL_BAR_ROW_HEIGHT,\n    paddingTop: '15px',\n    marginLeft: '15px',\n    marginRight: '15px',\n};\n\nexport class EditBar extends Component {\n    state = {\n        translationDialogIsOpen: false,\n        dashboardModel: undefined,\n        confirmDeleteDialogOpen: false,\n        redirectUrl: undefined,\n    };\n\n    onConfirmDelete = () => {\n        this.setState({ confirmDeleteDialogOpen: true });\n    };\n\n    onSave = () => {\n        this.props.onSave().then(newId => {\n            this.setState({ redirectUrl: `/${newId}` });\n        });\n    };\n\n    onDiscard = () => {\n        this.props.onDiscardChanges();\n        const redirectUrl = this.props.dashboardId\n            ? `/${this.props.dashboardId}`\n            : '/';\n        this.setState({ redirectUrl });\n    };\n\n    onContinueEditing = () => {\n        this.setState({ confirmDeleteDialogOpen: false });\n    };\n\n    onDeleteConfirmed = () => {\n        this.setState({ confirmDeleteDialogOpen: false });\n        this.props.onDelete(this.props.dashboardId).then(() => {\n            this.setState({ redirectUrl: '/' });\n        });\n    };\n\n    onTranslationsSaved = async translations => {\n        if (translations && translations.length) {\n            const dbLocale = await this.context.d2.currentUser.userSettings.get(\n                'keyDbLocale'\n            );\n\n            const translation = translations.find(\n                t => t.locale === dbLocale && t.property === 'NAME'\n            );\n\n            if (translation && translation.value) {\n                this.props.onTranslate(\n                    this.props.dashboardId,\n                    translation.value\n                );\n            }\n        }\n    };\n\n    fetchDashboardModel = () => {\n        if (this.props.dashboardId && !this.state.dashboardModel) {\n            apiFetchDashboard(this.props.dashboardId).then(dashboardModel =>\n                this.setState({ dashboardModel })\n            );\n        }\n    };\n\n    componentDidMount() {\n        this.fetchDashboardModel();\n    }\n\n    componentDidUpdate() {\n        this.fetchDashboardModel();\n    }\n\n    toggleTranslationDialog = () => {\n        this.setState({\n            translationDialogIsOpen: !this.state.translationDialogIsOpen,\n        });\n    };\n\n    confirmDeleteDialog = () =>\n        this.props.deleteAccess && this.props.dashboardId ? (\n            <ConfirmDeleteDialog\n                dashboardName={this.props.dashboardName}\n                onDeleteConfirmed={this.onDeleteConfirmed}\n                onContinueEditing={this.onContinueEditing}\n                open={this.state.confirmDeleteDialogOpen}\n            />\n        ) : null;\n\n    translationDialog = () =>\n        this.state.dashboardModel && this.state.dashboardModel.id ? (\n            <TranslationDialog\n                className=\"translation-dialog\"\n                d2={this.context.d2}\n                open={this.state.translationDialogIsOpen}\n                onRequestClose={this.toggleTranslationDialog}\n                objectToTranslate={this.state.dashboardModel}\n                fieldsToTranslate={['name', 'description']}\n                // TODO handle messages in snackbar\n                onTranslationSaved={this.onTranslationsSaved}\n                onTranslationError={err =>\n                    console.log('translation update error', err)\n                }\n            />\n        ) : null;\n\n    render() {\n        if (this.state.redirectUrl) {\n            return <Redirect to={this.state.redirectUrl} />;\n        }\n\n        const { dashboardId, deleteAccess, updateAccess } = this.props;\n        const controlBarHeight = getControlBarHeight(MIN_ROW_COUNT);\n\n        const discardBtnText = updateAccess\n            ? i18n.t('Exit without saving')\n            : i18n.t('Go to dashboards');\n\n        return (\n            <Fragment>\n                <ControlBar height={controlBarHeight} editMode={true}>\n                    <div style={buttonBarStyle}>\n                        {updateAccess ? (\n                            <div className={classes.leftControls}>\n                                <span style={{ marginRight: '15px' }}>\n                                    <PrimaryButton\n                                        className=\"save-button\"\n                                        onClick={this.onSave}\n                                    >\n                                        {i18n.t('Save changes')}\n                                    </PrimaryButton>\n                                </span>\n                                {dashboardId && deleteAccess ? (\n                                    <FlatButton\n                                        className=\"delete-button\"\n                                        onClick={this.onConfirmDelete}\n                                    >\n                                        {i18n.t('Delete')}\n                                    </FlatButton>\n                                ) : null}\n                                {dashboardId ? (\n                                    <FlatButton\n                                        className=\"translate-button\"\n                                        onClick={this.toggleTranslationDialog}\n                                    >\n                                        {i18n.t('Translate')}\n                                    </FlatButton>\n                                ) : null}\n                            </div>\n                        ) : null}\n\n                        <div className={classes.rightControls}>\n                            <FlatButton\n                                className=\"discard-button\"\n                                onClick={this.onDiscard}\n                            >\n                                {discardBtnText}\n                            </FlatButton>\n                        </div>\n                    </div>\n                </ControlBar>\n                {this.translationDialog()}\n                {this.confirmDeleteDialog()}\n            </Fragment>\n        );\n    }\n}\n\nEditBar.contextTypes = {\n    d2: PropTypes.object,\n};\n\nconst mapStateToProps = state => {\n    const dashboard = sGetEditDashboardRoot(state);\n\n    let deleteAccess;\n    let updateAccess;\n    if (sGetIsNewDashboard(state)) {\n        deleteAccess = true;\n        updateAccess = true;\n    } else {\n        updateAccess = dashboard.access ? dashboard.access.update : false;\n        deleteAccess = dashboard.access ? dashboard.access.delete : false;\n    }\n\n    return {\n        dashboardId: dashboard.id,\n        dashboardName: dashboard.name,\n        deleteAccess,\n        updateAccess,\n    };\n};\n\nconst mapDispatchToProps = dispatch => ({\n    onSave: () => dispatch(tSaveDashboard()).then(id => id),\n    onDelete: id => dispatch(tDeleteDashboard(id)),\n    onDiscardChanges: () => dispatch(acClearEditDashboard()),\n    onTranslate: (id, value) => dispatch(acSetDashboardDisplayName(id, value)),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(EditBar);\n","import React, { Fragment, Component } from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\n\nimport { acSetEditDashboard } from '../../actions/editDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n    sDashboardsIsFetching,\n} from '../../reducers/dashboards';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport DashboardContent from './DashboardContent';\nimport EditBar from '../ControlBar/EditBar';\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nexport const Content = ({ updateAccess }) => {\n    return updateAccess ? (\n        <DashboardContent editMode={true} />\n    ) : (\n        <NoContentMessage text={i18n.t('No access')} />\n    );\n};\nexport class EditDashboard extends Component {\n    state = {\n        initialized: false,\n    };\n\n    initEditDashboard = () => {\n        if (this.props.dashboard) {\n            this.setState({ initialized: true });\n            this.props.setEditDashboard(this.props.dashboard, this.props.items);\n        }\n    };\n\n    componentDidMount() {\n        this.initEditDashboard();\n    }\n\n    componentDidUpdate() {\n        if (!this.state.initialized) {\n            this.initEditDashboard();\n        }\n    }\n\n    getDashboardContent = () => {\n        const contentNotReady =\n            !this.props.dashboardsLoaded || this.props.id === null;\n\n        return (\n            <div className=\"dashboard-wrapper\">\n                {contentNotReady ? null : (\n                    <Content updateAccess={this.props.updateAccess} />\n                )}\n            </div>\n        );\n    };\n\n    render() {\n        return (\n            <Fragment>\n                <EditBar />\n                <DashboardVerticalOffset editMode={true} />\n                {this.getDashboardContent()}\n            </Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    const id = sGetSelectedId(state);\n    const dashboard = id ? sGetDashboardById(state, id) : null;\n\n    const updateAccess =\n        dashboard && dashboard.access ? dashboard.access.update : false;\n\n    return {\n        dashboard,\n        id,\n        updateAccess,\n        items: sGetDashboardItems(state),\n        dashboardsLoaded: !sDashboardsIsFetching(state),\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        setEditDashboard: acSetEditDashboard,\n    }\n)(EditDashboard);\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\n\nimport { acSetEditNewDashboard } from '../../actions/editDashboard';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport EditBar from '../ControlBar/EditBar';\nimport DashboardContent from './DashboardContent';\n\nclass NewDashboard extends Component {\n    componentDidMount() {\n        this.props.setNewDashboard();\n    }\n\n    render() {\n        return (\n            <Fragment>\n                <EditBar />\n                <DashboardVerticalOffset editMode={true} />\n                <div className=\"dashboard-wrapper\">\n                    <DashboardContent editMode={true} />\n                </div>\n            </Fragment>\n        );\n    }\n}\n\nexport default connect(\n    null,\n    {\n        setNewDashboard: acSetEditNewDashboard,\n    }\n)(NewDashboard);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { tSelectDashboard } from '../../actions/dashboards';\nimport { sDashboardsIsFetching } from '../../reducers/dashboards';\nimport { EDIT, NEW } from './dashboardModes';\nimport ViewDashboard from './ViewDashboard';\nimport EditDashboard from './EditDashboard';\nimport NewDashboard from './NewDashboard';\n\nclass Dashboard extends Component {\n    setDashboard = () => {\n        if (this.props.dashboardsLoaded) {\n            const id = this.props.match.params.dashboardId || null;\n            this.props.selectDashboard(id);\n        }\n    };\n\n    componentDidMount() {\n        this.setDashboard();\n    }\n\n    componentDidUpdate() {\n        this.setDashboard();\n    }\n\n    render() {\n        switch (this.props.mode) {\n            case EDIT:\n                return <EditDashboard />;\n            case NEW:\n                return <NewDashboard />;\n            default:\n                return <ViewDashboard />;\n        }\n    }\n}\n\nconst mapStateToProps = state => {\n    return { dashboardsLoaded: !sDashboardsIsFetching(state) };\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        selectDashboard: tSelectDashboard,\n    }\n)(Dashboard);\n","export const EDIT = 'edit';\nexport const NEW = 'new';\nexport const VIEW = 'view';\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport HeaderBar from '@dhis2/ui/widgets/HeaderBar';\n\nimport { EDIT, VIEW, NEW } from './Dashboard/dashboardModes';\nimport { acReceivedUser } from '../actions/user';\nimport { tFetchDashboards } from '../actions/dashboards';\nimport { tSetControlBarRows } from '../actions/controlBar';\nimport { tSetDimensions } from '../actions/dimensions';\nimport Dashboard from './Dashboard/Dashboard';\nimport SnackbarMessage from './SnackbarMessage/SnackbarMessage';\n\nimport 'typeface-roboto';\nimport './App.css';\n\nexport class App extends Component {\n    componentDidMount() {\n        this.props.setCurrentUser(this.props.d2.currentUser);\n        this.props.fetchDashboards();\n        this.props.setControlBarRows();\n        this.props.setDimensions(this.props.d2);\n    }\n\n    getChildContext() {\n        return { baseUrl: this.props.baseUrl, i18n, d2: this.props.d2 };\n    }\n\n    render() {\n        return (\n            <div className=\"app-wrapper\">\n                <div className=\"dashboard-header-bar\">\n                    <HeaderBar appName={i18n.t('Dashboard')} />\n                </div>\n                <Router>\n                    <Switch>\n                        <Route\n                            exact\n                            path=\"/\"\n                            render={props => (\n                                <Dashboard {...props} mode={VIEW} />\n                            )}\n                        />\n                        <Route\n                            exact\n                            path=\"/new\"\n                            render={props => (\n                                <Dashboard {...props} mode={NEW} />\n                            )}\n                        />\n                        <Route\n                            exact\n                            path=\"/:dashboardId\"\n                            render={props => (\n                                <Dashboard {...props} mode={VIEW} />\n                            )}\n                        />\n                        <Route\n                            exact\n                            path=\"/:dashboardId/edit\"\n                            render={props => (\n                                <Dashboard {...props} mode={EDIT} />\n                            )}\n                        />\n                    </Switch>\n                </Router>\n                <SnackbarMessage />\n            </div>\n        );\n    }\n}\n\nApp.childContextTypes = {\n    baseUrl: PropTypes.string,\n    i18n: PropTypes.object,\n    d2: PropTypes.object,\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setCurrentUser: currentUser => dispatch(acReceivedUser(currentUser)),\n        fetchDashboards: () => dispatch(tFetchDashboards()),\n        setControlBarRows: () => dispatch(tSetControlBarRows()),\n        setDimensions: d2 => dispatch(tSetDimensions(d2)),\n    };\n};\n\nexport default connect(\n    null,\n    mapDispatchToProps\n)(App);\n","import { RECEIVED_USER } from '../reducers/user';\n\nexport const acReceivedUser = value => ({\n    type: RECEIVED_USER,\n    value,\n});\n","//------------------------------------------------------------------------------\n// <auto-generated>\n// This code was generated by d2-i18n-generate.\n//\n// Changes to this file may cause incorrect behavior and will be lost if\n// the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\nimport i18n from '@dhis2/d2-i18n';\nimport moment from 'moment';\nimport 'moment/locale/ar';\nimport 'moment/locale/es';\nimport 'moment/locale/fr';\nimport 'moment/locale/lo';\nimport 'moment/locale/nb';\nimport 'moment/locale/pt';\nimport 'moment/locale/ru';\nimport 'moment/locale/sv';\nimport 'moment/locale/tg';\nimport 'moment/locale/uk';\nimport 'moment/locale/ur';\nimport 'moment/locale/vi';\nimport 'moment/locale/zh-cn';\n\nimport arTranslations from './ar/translations.json';\nimport daTranslations from './da/translations.json';\nimport enTranslations from './en/translations.json';\nimport esTranslations from './es/translations.json';\nimport frTranslations from './fr/translations.json';\nimport idTranslations from './id/translations.json';\nimport kmTranslations from './km/translations.json';\nimport loTranslations from './lo/translations.json';\nimport myTranslations from './my/translations.json';\nimport nbTranslations from './nb/translations.json';\nimport prsTranslations from './prs/translations.json';\nimport psTranslations from './ps/translations.json';\nimport ptTranslations from './pt/translations.json';\nimport pt_BRTranslations from './pt_BR/translations.json';\nimport ruTranslations from './ru/translations.json';\nimport svTranslations from './sv/translations.json';\nimport tetTranslations from './tet/translations.json';\nimport tgTranslations from './tg/translations.json';\nimport ukTranslations from './uk/translations.json';\nimport urTranslations from './ur/translations.json';\nimport viTranslations from './vi/translations.json';\nimport zhTranslations from './zh/translations.json';\nimport zh_CNTranslations from './zh_CN/translations.json';\n\nconst namespace = 'dashboards-app';\nmoment.locale('en');\n\ni18n.addResources('ar', namespace, arTranslations);\ni18n.addResources('da', namespace, daTranslations);\ni18n.addResources('en', namespace, enTranslations);\ni18n.addResources('es', namespace, esTranslations);\ni18n.addResources('fr', namespace, frTranslations);\ni18n.addResources('id', namespace, idTranslations);\ni18n.addResources('km', namespace, kmTranslations);\ni18n.addResources('lo', namespace, loTranslations);\ni18n.addResources('my', namespace, myTranslations);\ni18n.addResources('nb', namespace, nbTranslations);\ni18n.addResources('prs', namespace, prsTranslations);\ni18n.addResources('ps', namespace, psTranslations);\ni18n.addResources('pt', namespace, ptTranslations);\ni18n.addResources('pt_BR', namespace, pt_BRTranslations);\ni18n.addResources('ru', namespace, ruTranslations);\ni18n.addResources('sv', namespace, svTranslations);\ni18n.addResources('tet', namespace, tetTranslations);\ni18n.addResources('tg', namespace, tgTranslations);\ni18n.addResources('uk', namespace, ukTranslations);\ni18n.addResources('ur', namespace, urTranslations);\ni18n.addResources('vi', namespace, viTranslations);\ni18n.addResources('zh', namespace, zhTranslations);\ni18n.addResources('zh_CN', namespace, zh_CNTranslations);\n\ni18n.setDefaultNamespace(namespace);\ni18n.changeLanguage('en');\n\nexport default i18n;\n","/** @module reducers/selected */\nimport { validateReducer } from '../modules/util';\n\nexport const SET_STYLE = 'SET_STYLE';\n\nexport const DEFAULT_STATE_STYLE = 'LIST';\n\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\nconst style = (state = DEFAULT_STATE_STYLE, action) => {\n    switch (action.type) {\n        case SET_STYLE:\n            return validateReducer(action.value, DEFAULT_STATE_STYLE);\n        default:\n            return state;\n    }\n};\n\nexport default style;\n\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\nexport const sGetStyleRoot = state => state.style;\n","import { combineReducers } from 'redux';\nimport arraySort from 'd2-utilizr/lib/arraySort';\n\nimport dashboards, { sGetDashboardsRoot } from './dashboards';\nimport selected from './selected';\nimport dashboardsFilter, {\n    ownerData,\n    sGetFilterName,\n    sGetFilterOrder,\n    sGetFilterOwner,\n} from './dashboardsFilter';\nimport controlBar from './controlBar';\nimport visualizations from './visualizations';\nimport editDashboard from './editDashboard';\nimport messages from './messages';\nimport user from './user';\nimport snackbar from './snackbar';\nimport itemFilters from './itemFilters';\nimport editItemFilters from './editItemFilters';\nimport style from './style';\nimport dimensions from './dimensions';\nimport settings from './settings';\nimport activeModalDimension from './activeModalDimension';\n\nconst USER = 'system';\n\n// Reducers\n\nexport default combineReducers({\n    dashboards,\n    selected,\n    dashboardsFilter,\n    controlBar,\n    visualizations,\n    messages,\n    user,\n    editDashboard,\n    itemFilters,\n    editItemFilters,\n    style,\n    snackbar,\n    dimensions,\n    settings,\n    activeModalDimension,\n});\n\n// Map constants to data\nconst mapConstToData = {\n    NAME: 'name',\n    ITEMS: 'numberOfItems',\n    CREATED: 'created',\n    OWNER: 'owner',\n};\n\n// Selectors\n\n// Filter dashboards by name\nexport const sFilterDashboardsByName = (dashboards, filter) =>\n    dashboards.filter(d =>\n        d.displayName.toLowerCase().includes(filter.toLowerCase())\n    );\n\n// Filter dashboards by owner, TODO FIXME\nexport const sFilterDashboardsByOwner = (dashboards, filter) => {\n    const ME = ownerData[1]; // TODO\n    const OTHERS = ownerData[2]; // TODO\n\n    switch (filter) {\n        case ME:\n            return dashboards.filter(d => d.owner === USER);\n        case OTHERS:\n            return dashboards.filter(d => d.owner !== USER);\n        default:\n            return dashboards;\n    }\n};\n\n// Filter dashboards by order\nexport const sFilterDashboardsByOrder = (dashboards, filter) => {\n    const filterValues = filter.split(':');\n\n    const key = filterValues[0];\n    const direction = filterValues[1];\n\n    return arraySort(dashboards, direction, mapConstToData[key]);\n};\n\n// Selectors dependency level 2\n\n// Get filtered dashboards\nexport const sGetFilteredDashboards = state => {\n    const dashboards = sGetDashboardsRoot(state);\n\n    const nameFilter = sGetFilterName(state);\n    const ownerFilter = sGetFilterOwner(state);\n    const orderFilter = sGetFilterOrder(state);\n\n    return sFilterDashboardsByOrder(\n        sFilterDashboardsByName(\n            sFilterDashboardsByOwner(dashboards, ownerFilter),\n            nameFilter\n        ),\n        orderFilter\n    );\n};\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport reducer from './reducers';\n\nconst configureStore = () => {\n    const middleware = [thunk];\n\n    // Enable Redux devtools if extension is installed instead of redux-logger\n    const composeEnhancers =\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n    if (\n        !window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ &&\n        process.env.NODE_ENV !== 'production'\n    ) {\n        middleware.push(createLogger());\n    }\n\n    return createStore(\n        reducer,\n        composeEnhancers(applyMiddleware(...middleware))\n    );\n};\n\nexport default configureStore;\n","import getMuiTheme from 'material-ui/styles/getMuiTheme';\n\nimport { colors } from './colors';\n\nexport const muiTheme = () => {\n    const raisedButton = {\n        primaryColor: colors.royalBlue,\n        disabledColor: colors.paleBlue,\n        disabledTextColor: colors.lightMediumGrey,\n    };\n\n    const theme = getMuiTheme({ raisedButton });\n\n    return theme;\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport { MuiThemeProvider as V0MuiThemeProvider } from 'material-ui';\nimport { init as d2Init, config, getManifest, getUserSettings } from 'd2';\nimport dhis2theme from '@dhis2/d2-ui-core/theme/mui3.theme';\n\n// temporary workaround until new ui headerbar is ready\nimport 'material-design-icons/iconfont/material-icons.css';\nimport './reset.css';\n\nimport App from './components/App';\nimport './index.css';\nimport i18n from './locales';\nimport configureStore from './configureStore';\nimport { muiTheme } from './modules/theme';\n\nconst v1Theme = () => createMuiTheme({ ...dhis2theme });\n\nconst configI18n = userSettings => {\n    const uiLocale = userSettings.keyUiLocale;\n\n    if (uiLocale && uiLocale !== 'en') {\n        config.i18n.sources.add(`./i18n/i18n_module_${uiLocale}.properties`);\n    }\n\n    config.i18n.sources.add('./i18n/i18n_module_en.properties');\n    i18n.changeLanguage(uiLocale);\n};\n\nconst init = async () => {\n    const manifest = await getManifest('./manifest.webapp');\n\n    // log app info\n    console.info(\n        `Dashboards app, v${manifest.version}, ${\n            manifest.manifest_generated_at\n        }`\n    );\n\n    const isProd = process.env.NODE_ENV === 'production';\n\n    if (\n        !isProd &&\n        (!process.env.REACT_APP_DHIS2_BASE_URL ||\n            !process.env.REACT_APP_DHIS2_AUTHORIZATION)\n    ) {\n        throw new Error(\n            'Missing env variables REACT_APP_DHIS2_BASE_URL and REACT_APP_DHIS2_AUTHORIZATION'\n        );\n    }\n\n    // api config\n    const baseUrl = isProd\n        ? manifest.activities.dhis.href\n        : process.env.REACT_APP_DHIS2_BASE_URL;\n    const authorization = process.env.REACT_APP_DHIS2_AUTHORIZATION;\n\n    config.baseUrl = `${baseUrl}/api/${manifest.dhis2.apiVersion}`;\n    config.headers = isProd ? null : { Authorization: authorization };\n    config.schemas = [\n        'chart',\n        'map',\n        'report',\n        'reportTable',\n        'eventChart',\n        'eventReport',\n        'dashboard',\n        'organisationUnit',\n        'userGroup',\n    ];\n\n    getUserSettings()\n        .then(configI18n)\n        .then(() => d2Init(config))\n        .then(initializedD2 => {\n            ReactDOM.render(\n                <Provider store={configureStore()}>\n                    <MuiThemeProvider theme={v1Theme()}>\n                        <V0MuiThemeProvider muiTheme={muiTheme()}>\n                            <App baseUrl={baseUrl} d2={initializedD2} />\n                        </V0MuiThemeProvider>\n                    </MuiThemeProvider>\n                </Provider>,\n                document.getElementById('root')\n            );\n        });\n};\n\ninit();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ControlBar_root__3LaTt\",\"content\":\"ControlBar_content__1r98-\",\"draghandle\":\"ControlBar_draghandle__1VWa0\"};"],"sourceRoot":""}
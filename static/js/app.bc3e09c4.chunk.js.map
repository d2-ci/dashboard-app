{"version":3,"sources":["D2App/components/ControlBar/styles/ControlBar.module.css","D2App/components/ControlBar/styles/DashboardItemChip.module.css","D2App/components/ControlBar/styles/ClearButton.module.css","D2App/components/ControlBar/styles/Filter.module.css","D2App/components/ControlBar/styles/ShowMoreButton.module.css","D2App/components/ControlBar/styles/DashboardsBar.module.css","D2App/components/ItemFilter/styles/FilterSelector.module.css","D2App/components/TitleBar/styles/ViewTitleBar.module.css","D2App/components/Item/VisualizationItem/Visualization/styles/NoVisualizationMessage.module.css","D2App/components/Item/VisualizationItem/Visualization/styles/LoadingMask.module.css","D2App/components/Item/VisualizationItem/styles/FatalErrorBoundary.module.css","D2App/components/Item/ItemHeader/styles/DeleteItemButton.module.css","D2App/components/Item/ItemHeader/styles/PrintItemInfo.module.css","D2App/components/Item/VisualizationItem/styles/ItemFooter.module.css","D2App/components/Item/ListItem/Item.module.css","D2App/components/Item/PrintTitlePageItem/styles/Item.module.css","D2App/components/FilterBar/styles/FilterBar.module.css","D2App/components/ItemSelector/styles/HeaderMenuItem.module.css","D2App/components/ItemSelector/styles/ContentMenuItem.module.css","D2App/components/ItemSelector/styles/CategorizedMenuGroup.module.css","D2App/components/ItemSelector/styles/ItemSelector.module.css","D2App/components/TitleBar/styles/EditTitleBar.module.css","D2App/modules/itemTypes.js","D2App/modules/util.js","D2App/components/ItemGrid/gridUtil.js","D2App/components/ControlBar/styles/ConfirmDeleteDialog.module.css","D2App/components/ControlBar/styles/EditBar.module.css","D2App/components/Dashboard/styles/NotSupportedNotice.module.css","D2App/components/Dashboard/styles/PrintInfo.module.css","D2App/components/Dashboard/styles/PrintActionsBar.module.css","D2App/components/Dashboard/styles/PrintLayoutDashboard.module.css","D2App/components/Dashboard/styles/PrintDashboard.module.css","D2App/components/WindowDimensionsProvider.js","D2App/components/ControlBar/ControlBar.js","D2App/icons/Star.js","D2App/api/dataStatistics.js","D2App/components/ControlBar/DashboardItemChip.js","D2App/icons/AddCircle.js","D2App/icons/Search.js","D2App/icons/Clear.js","D2App/components/ControlBar/ClearButton.js","D2App/reducers/dashboardsFilter.js","D2App/modules/isSmallScreen.js","D2App/components/ControlBar/Filter.js","D2App/actions/dashboardsFilter.js","D2App/components/ControlBar/assets/icons.js","D2App/components/ControlBar/ShowMoreButton.js","D2App/components/ControlBar/controlBarDimensions.js","D2App/reducers/controlBar.js","D2App/modules/uiBackendItemConverter.js","D2App/reducers/dashboards.js","D2App/reducers/selected.js","D2App/api/userDataStore.js","D2App/api/controlBar.js","D2App/actions/controlBar.js","D2App/components/ControlBar/DashboardsBar.js","D2App/widgets/NoContentMessage.js","D2App/components/Item/VisualizationItem/assets/icons.js","D2App/reducers/user.js","D2App/reducers/dimensions.js","D2App/reducers/itemFilters.js","D2App/actions/itemFilters.js","D2App/reducers/messages.js","D2App/api/messages.js","D2App/components/Item/MessagesItem/actions.js","D2App/reducers/alert.js","D2App/actions/alert.js","D2App/reducers/visualizations.js","D2App/actions/visualizations.js","D2App/api/metadata.js","D2App/api/index.js","D2App/api/dashboards.js","D2App/api/description.js","D2App/actions/selected.js","D2App/api/localStorage.js","D2App/actions/dashboards.js","D2App/components/ItemFilter/FilterDialog.js","D2App/reducers/settings.js","D2App/reducers/activeModalDimension.js","D2App/actions/activeModalDimension.js","D2App/components/ItemFilter/FilterSelector.js","D2App/components/TitleBar/ViewTitleBar.js","D2App/reducers/editDashboard.js","D2App/api/editDashboard.js","D2App/actions/editDashboard.js","D2App/components/Item/VisualizationItem/Visualization/NoVisualizationMessage.js","D2App/components/Item/VisualizationItem/Visualization/DefaultPlugin.js","D2App/components/Item/VisualizationItem/Visualization/MapPlugin.js","D2App/components/Item/VisualizationItem/Visualization/LoadingMask.js","D2App/components/Item/VisualizationItem/Visualization/getFilteredVisualization.js","D2App/components/Item/VisualizationItem/Visualization/getVisualizationConfig.js","D2App/modules/memoizeOne.js","D2App/components/Item/VisualizationItem/Visualization/Visualization.js","D2App/components/Item/VisualizationItem/FatalErrorBoundary.js","D2App/components/Item/ItemHeader/ViewItemActions.js","D2App/components/Item/ItemHeader/DeleteItemButton.js","D2App/components/Item/ItemHeader/EditItemActions.js","D2App/icons/Info.js","D2App/components/Item/ItemHeader/PrintItemInfo.js","D2App/components/Dashboard/dashboardModes.js","D2App/components/Item/ItemHeader/ItemHeader.js","D2App/components/Item/VisualizationItem/ItemHeaderButtons.js","D2App/components/Item/VisualizationItem/ItemFooter.js","D2App/components/Item/VisualizationItem/Item.js","D2App/widgets/Line.js","D2App/components/Item/MessagesItem/Item.js","D2App/components/Item/NotSupportedItem/Item.js","D2App/icons/Description.js","D2App/icons/Delete.js","D2App/components/Item/ListItem/Item.js","D2App/components/Item/ListItem/actions.js","D2App/reducers/printDashboard.js","D2App/components/Item/TextItem/Item.js","D2App/components/Item/AppItem/Item.js","D2App/components/Item/SpacerItem/Item.js","D2App/components/Item/PageBreakItem/Item.js","D2App/components/Item/PrintTitlePageItem/Item.js","D2App/components/Item/Item.js","D2App/components/Item/ProgressiveLoadingContainer.js","D2App/components/ItemGrid/ItemGrid.js","D2App/components/FilterBar/FilterBadge.js","D2App/components/FilterBar/FilterBar.js","D2App/reducers/windowHeight.js","D2App/actions/printDashboard.js","D2App/components/Dashboard/ViewDashboard.js","D2App/components/ItemSelector/ItemSearchField.js","D2App/components/ItemSelector/HeaderMenuItem.js","D2App/icons/Launch.js","D2App/components/ItemSelector/ContentMenuItem.js","D2App/components/ItemSelector/actions.js","D2App/components/ItemSelector/selectableItems.js","D2App/components/ItemSelector/CategorizedMenuGroup.js","D2App/components/ItemSelector/SinglesMenuGroup.js","D2App/components/ItemSelector/ItemSelector.js","D2App/components/TitleBar/EditTitleBar.js","D2App/components/ControlBar/ConfirmDeleteDialog.js","D2App/components/ControlBar/EditBar.js","D2App/components/Dashboard/NotSupportedNotice.js","D2App/components/Dashboard/PrintInfo.js","D2App/icons/LessHorizontal.js","D2App/components/Dashboard/PrintActionsBar.js","D2App/modules/printUtils.js","D2App/components/ItemGrid/PrintLayoutItemGrid.js","D2App/components/Dashboard/PrintLayoutDashboard.js","D2App/components/Dashboard/EditDashboard.js","D2App/components/Dashboard/NewDashboard.js","D2App/components/ItemGrid/PrintItemGrid.js","D2App/components/Dashboard/PrintDashboard.js","D2App/actions/windowHeight.js","D2App/components/Dashboard/Dashboard.js","D2App/components/AlertBar/AlertBar.js","D2App/actions/user.js","D2App/actions/dimensions.js","D2App/api/settings.js","D2App/actions/settings.js","D2App/components/App.js","D2App/reducers/style.js","D2App/reducers/index.js","D2App/configureStore.js","D2App/locales/index.js","D2App/AppWrapper.js","D2App/modules/item.js","D2App/components/Item/VisualizationItem/Visualization/plugin.js","D2App/components/Item/ItemHeader/styles/ItemHeader.module.css"],"names":["module","exports","VISUALIZATION","REPORT_TABLE","CHART","MAP","EVENT_REPORT","EVENT_CHART","APP","REPORTS","RESOURCES","USERS","MESSAGES","TEXT","SPACER","PAGEBREAK","PRINT_TITLE_PAGE","DOMAIN_TYPE_AGGREGATE","DOMAIN_TYPE_TRACKER","isVisualizationType","item","itemTypeMap","type","hasMapView","itemType","domainType","isTrackerDomainType","getDefaultItemCount","defaultItemCount","getAppName","appName","id","endPointName","propName","pluralTitle","i18n","t","appUrl","dataStatisticsName","Date","getTime","getEndPointName","getDataStatisticsName","getItemUrl","d2","url","launchUrl","getBaseUrl","getItemIcon","TableIcon","ChartIcon","MapIcon","ExtensionIcon","DescriptionIcon","PersonIcon","FontDownloadIcon","EmailIcon","CropFreeIcon","NotInterestedIcon","orArray","param","Array","isArray","orObject","isObject","arrayToIdMap","array","reduce","obj","formatDate","value","uiLocale","global","Intl","DateTimeFormat","locale","year","month","day","format","substr","replace","validateReducer","defaultValue","undefined","api","Api","getApi","idx","baseUrl","indexOf","slice","GRID_COMPACT_TYPE","GRID_ROW_HEIGHT","MARGIN","NEW_ITEM_SHAPE","x","y","w","h","MAX_ITEM_GRID_HEIGHT","MAX_ITEM_GRID_HEIGHT_OIPP","MAX_ITEM_GRID_WIDTH_OIPP","a4LandscapeWidthPx","getGridColumns","isNonNegativeInteger","Number","isInteger","hasShape","getGridItemProperties","itemId","i","minH","getPageBreakItemShape","yPos","isStatic","GRID_COLUMNS","static","getPrintTitlePageItemShape","isOneItemPerPage","withShape","items","map","index","itemWithShape","Object","assign","Error","col","row","Math","floor","itemWidth","MAX_ITEM_GRID_WIDTH","itemHeight","getShape","originalHeight","round","max","getOriginalHeight","getGridItemDomId","onItemResize","el","document","querySelector","isFunction","setViewportSize","setTimeout","clientWidth","clientHeight","WindowDimensionsCtx","createContext","windowDims","height","window","innerHeight","width","innerWidth","WindowDimensionsProvider","children","dimensions","setDimensions","useState","useEffect","handleResize","debounce","addEventListener","removeEventListener","Provider","useWindowDimensions","useContext","ControlBar","React","Component","constructor","props","super","onStartDrag","this","setState","dragging","onDrag","onEndDrag","event","preventDefault","stopPropagation","newHeight","clientY","onChangeHeight","requestAnimationFrame","renderDragHandle","data-testid","className","classes","draghandle","style","onMouseDown","state","render","rootClass","cx","root","content","defaultProps","StarIcon","xmlns","viewBox","d","fill","apiPostDataStatistics","async","eventType","getInstance","post","DashboardItemChip","starred","selected","label","dashboardId","onClick","chipProps","selectedState","unselected","icon","Star","debouncedPostStatistics","link","to","data-test","AddCircleIcon","colors","teal600","SearchIcon","ClearIcon","grey800","ClearButton","onClear","button","Clear","color","SET_DASHBOARDS_FILTER","CLEAR_DASHBOARDS_FILTER","sGetDashboardsFilter","dashboardsFilter","isSmallScreen","mapDispatchToProps","setDashboardsFilter","clearDashboardsFilter","connect","filterText","isMaxHeight","onKeypressEnter","onToggleMaxHeight","focusedClassName","setFocusedClassName","searchButton","Search","searchIcon","container","onFocus","focused","onBlur","input","placeholder","onChange","target","onKeyUp","keyCode","ChevronDown","ChevronUp","ShowMoreButton","disabled","buttonLabel","placement","showMore","aria-label","getRowsHeight","rows","getControlBarHeight","FIRST_ROW_PADDING_HEIGHT","SET_CONTROLBAR_USER_ROWS","combineReducers","userRows","action","sGetControlBarUserRows","controlBar","sGetControlBarRoot","spacerContent","emptyTextItemContent","isTextType","text","convertUiItemsToBackend","isUiSpacerType","convertBackendItemsToUi","isBackendSpacerType","gridProperties","SET_DASHBOARDS","ADD_DASHBOARDS","SET_DASHBOARD_STARRED","SET_DASHBOARD_DISPLAY_NAME","SET_DASHBOARD_ITEMS","DEFAULT_STATE_DASHBOARDS","byId","EMPTY_DASHBOARD","updateDashboardProp","prop","sGetDashboardsRoot","dashboards","sGetDashboardById","sDashboardsIsFetching","sGetAllDashboards","sGetDashboardItems","sGetStarredDashboards","values","filter","dashboard","sGetUnstarredDashboards","getCustomDashboards","data","arrayFrom","name","displayName","description","displayDescription","favorite","owner","user","created","split","join","lastUpdated","access","numberOfItems","dashboardItems","length","SET_SELECTED_ID","SET_SELECTED_ISLOADING","SET_SELECTED_SHOWDESCRIPTION","SET_SELECTED_ITEM_ACTIVE_TYPE","CLEAR_SELECTED_ITEM_ACTIVE_TYPES","DEFAULT_STATE_SELECTED_SHOWDESCRIPTION","DEFAULT_STATE_SELECTED_ITEM_ACTIVE_TYPES","isLoading","showDescription","itemActiveTypes","activeType","sGetSelectedRoot","sGetSelectedId","sGetSelectedIsLoading","sGetSelectedShowDescription","sGetSelectedItemActiveType","NAMESPACE","hasNamespace","currentUser","dataStore","has","getNamespace","get","create","apiPostUserDataStoreValue","key","set","apiGetUserDataStoreValue","namespace","keys","find","k","console","log","KEY_CONTROLBAR_ROWS","acSetControlBarUserRows","tSetControlBarRows","controlBarRows","apiGetControlBarRows","dispatch","err","error","withRouter","selectedId","history","setRows","ref","createRef","scrollToTop","current","scroll","toggleMaxHeight","newRows","cancelMaxHeight","getFilteredDashboards","filteredDashboards","arraySort","toLowerCase","includes","containerClass","expanded","collapsed","viewableRows","rowHeightProp","min","apiPostControlBarRows","controls","newLink","AddCircle","Filter","push","chips","chipContainerClasses","chipContainer","getDashboardChips","marginTop","NoContentMessage","padding","textAlign","fontSize","fontWeight","grey600","ThreeDots","SpeechBubble","margin","fillRule","transform","Warning","Fullscreen","ExitFullscreen","RECEIVED_USER","DEFAULT_STATE_USER","username","isSuperuser","sGetUserUsername","SET_DIMENSIONS","DEFAULT_DIMENSIONS","getDimensionById","DIMENSION_ID_PERIOD","DIMENSION_ID_ORGUNIT","sGetDimensions","CLEAR_ITEM_FILTERS","SET_ITEM_FILTERS","ADD_ITEM_FILTER","REMOVE_ITEM_FILTER","DEFAULT_STATE_ITEM_FILTERS","sGetItemFiltersRoot","itemFilters","sGetNamedItemFilters","createSelector","filters","arr","dimension","acRemoveItemFilter","RECEIVED_MESSAGES","sGetMessagesRoot","messages","messageConversationsQuery","resource","params","fields","order","pageSize","tGetMessages","dataEngine","messageConversations","query","getMessages","SET_ALERT_MESSAGE","CLEAR_ALERT_MESSAGE","sGetAlertMessage","alert","acClearAlertMessage","ADD_VISUALIZATION","CLEAR_VISUALIZATIONS","DEFAULT_STATE_VISUALIZATIONS","isEmpty","p","sGetVisualization","visualizations","sGetVisualizationsRoot","acAddVisualization","getIdNameFields","rename","getDimensionFields","withItems","arrayClean","getAxesFields","getFavoriteFields","withDimensions","withOptions","getFavoritesFields","apiFetchVisualization","getVisualizationId","onError","getDashboardItemsFields","withFavorite","getDashboardFields","dashboardsQuery","paging","dashboardQuery","starDashboardMutation","unstarDashboardMutation","deleteDashboardMutation","apiFetchDashboard","variables","KEY_SHOW_DESCRIPTION","acSetSelectedId","acSetSelectedIsLoading","acSetSelectedShowDescription","tSetSelectedDashboardById","getState","alertTimeout","onSuccess","acAppendDashboards","customDashboard","acSetDashboardItems","localStorage","setItem","forEach","getVisualizationFromItem","clearTimeout","tSetShowDescription","apiGetShowDescription","tUpdateShowDescription","apiPostShowDescription","tFetchDashboards","acSetDashboards","apiFetchDashboards","tStarDashboard","isStarred","acSetDashboardStarred","mutate","apiStarDashboard","tDeleteDashboard","apiDeleteDashboard","Promise","resolve","FilterDialog","displayNameProperty","initiallySelectedItems","addItemFilter","removeItemFilter","onClose","context","setFilters","onSelectItems","dimensionId","onDeselectItems","itemIdsToRemove","newList","onReorderItems","itemIds","oldList","reorderedList","dataTest","position","large","commonProps","onSelect","onDeselect","onReorder","selectedItems","selectedPeriods","ouItems","renderDialogContent","secondary","primary","filterItems","contextTypes","PropTypes","object","ADD_SETTINGS","DEFAULT_SETTINGS","keyDateFormat","keyAnalysisRelativePeriod","keyAnalysisDigitGroupSeparator","rootOrganisationUnit","keyGatherAnalyticalObjectStatisticsInDashboardViews","sGetSettings","settings","sGetSettingsDisplayNameProperty","sGatherAnalyticalObjectStatisticsInDashboardViews","SET_ACTIVE_MODAL_DIMENSION","CLEAR_ACTIVE_MODAL_DIMENSION","DEFAULT_STATE_ACTIVE_MODAL_DIMENSION","sGetActiveModalDimension","activeModalDimension","acSetActiveModalDimension","clearActiveModalDimension","setActiveModalDimension","showPopover","setShowPopover","useRef","onCloseDialog","buttonContainer","onClickOutside","reference","arrow","onDimensionClick","selectedIds","ViewTitleBar","moreOptionsIsOpen","setMoreOptionsIsOpen","sharingDialogIsOpen","setSharingDialogIsOpen","redirectUrl","setRedirectUrl","onToggleStarredDashboard","onShowHideDescription","toggleSharingDialog","toggleMoreOptions","StarBorder","showHideDescriptionLabel","toggleStarredDashboardLabel","buttonRef","userAccess","descriptionClasses","descContainer","desc","noDesc","titleBar","title","actions","titleBarIcon","strip","update","editLink","manage","shareButton","small","moreButton","dense","open","onRequestClose","stateProps","dispatchProps","ownProps","RECEIVED_EDIT_DASHBOARD","RECEIVED_NOT_EDITING","START_NEW_DASHBOARD","RECEIVED_TITLE","RECEIVED_DESCRIPTION","ADD_DASHBOARD_ITEM","REMOVE_DASHBOARD_ITEM","UPDATE_DASHBOARD_ITEM","RECEIVED_DASHBOARD_LAYOUT","SET_PRINT_PREVIEW_VIEW","CLEAR_PRINT_PREVIEW_VIEW","DEFAULT_STATE_EDIT_DASHBOARD","NEW_DASHBOARD_STATE","printPreviewView","sGetEditDashboardRoot","editDashboard","sGetIsEditing","sGetIsPrintPreviewView","sGetEditDashboardItems","createDashboardMutation","updateDashboardMutation","generatePayload","acClearEditDashboard","acAddDashboardItem","itemPropName","generateUid","gridItemProperties","shape","acUpdateDashboardItem","acRemoveDashboardItem","tSaveDashboard","dashboardToSave","response","uid","updateDashboard","postDashboard","NoVisualizationMessage","message","DefaultPlugin","pluginCredentials","pluginIsAvailable","pluginManager","shouldPluginReload","prevProps","reloadAllowed","filtersChanged","vis","visualization","prevVis","visChanged","reloadPlugin","credentials","componentDidMount","auth","defaultHeaders","Authorization","options","componentDidUpdate","componentWillUnmount","MapPlugin","applyFilters","mapViews","mapView","layer","hideTitle","LoadingMask","center","getFilteredVisualization","visRows","visColumns","columns","visFilters","dimensionFound","dimensionObjects","getWithoutId","getVisualizationConfig","originalType","extractedMapView","mv","VIS_TYPE_COLUMN","VIS_TYPE_PIVOT_TABLE","layout","getAdaptedUiLayoutByType","memoizeOne","fn","lastArgs","lastValue","args","every","arg","Visualization","pluginLoaded","onLoadingComplete","memoizedGetFilteredVisualization","memoizedGetVisualizationConfig","availableHeight","pluginProps","forDashboard","FatalErrorBoundary","errorFound","componentDidCatch","info","ViewItemActions","actionButtons","itemActionsWrap","DeleteItemButton","deleteItemButton","red500","WarningIcon","PrintWarning","warning","Info","EDIT","NEW","VIEW","PRINT","PRINT_LAYOUT","isEditMode","mode","isPrintMode","isViewMode","ItemHeader","forwardRef","dashboardMode","isShortened","rest","Actions","EditItemActions","PrintItemInfo","getItemActionsMap","itemHeaderWrap","itemTitle","iconFill","ItemHeaderButtons","menuIsOpen","setMenuIsOpen","useConfig","onSelectActiveType","isTrackerType","onViewTable","closeMenu","onViewChart","onViewMap","canViewAs","isSingleValue","isYearOverYear","VIS_TYPE_GAUGE","VIS_TYPE_PIE","interpretationMenuLabel","activeFooter","ViewAsMenuItems","isFullscreen","onToggleFullscreen","href","getLink","onToggleFooter","fullscreenSupported","ItemFooter","line","scrollContainer","isRequired","Item","showFooter","configLoaded","isFullscreenSupported","itemDomElSelector","requestFullscreen","webkitRequestFullscreen","handleFullscreenChange","fullscreenElement","webkitFullscreenElement","exitFullscreen","webkitExitFullscreen","getUniqueKey","uniqueId","onToggleItemExpanded","setActiveType","getActiveType","isEditing","getAvailableHeight","calculatedHeight","headerRef","ITEM_CONTENT_PADDING_BOTTOM","memoizedGetContentHeight","contentRef","offsetHeight","measuredHeight","preferMeasured","updateVisualization","gatherDataStatistics","e","onfullscreenchange","onwebkitfullscreenchange","getVisualizationName","shortened","Function","prototype","backgroundColor","grey200","border","Line","PRIVATE","messageTypes","VALIDATION_RESULT","TICKET","SYSTEM","list","listStyleType","paddingLeft","seeAll","marginBottom","sender","lineHeight","snippet","maxHeight","overflow","MessagesItem","getMessageHref","msg","msgIdentifier","messageType","getMessageSender","latestMsg","getMessageItems","modeClass","readClass","read","msgDate","location","messageCount","userSettings","string","MessagesContainer","NotSupportedItem","display","justifyContent","alignItems","align","grey500","DeleteIcon","getItemTitle","ListItem","tRemoveListItemContent","contentItems","findIndex","getContentItems","contentItem","deleteButton","deletebutton","deleteicon","grey900","Description","itemicon","dashboardItem","listItemType","newContent","SET_PRINT_DASHBOARD","CLEAR_PRINT_DASHBOARD","ADD_PRINT_DASHBOARD_ITEM","SET_PRINT_DASHBOARD_LAYOUT","REMOVE_PRINT_DASHBOARD_ITEM","UPDATE_PRINT_DASHBOARD_ITEM","DEFAULT_STATE_PRINT_DASHBOARD","DEFAULT_DASHBOARD_ITEMS","NEW_PRINT_DASHBOARD_STATE","sGetPrintDashboardRoot","printDashboard","sGetIsPrinting","sGetPrintDashboardItems","textDiv","whiteSpace","textField","fontStretch","onChangeText","updatedItem","viewItem","textDivStyle","editItem","onEdit","multiline","fullWidth","printItem","textItem","getIframeSrc","appDetails","iframeSrc","ouIds","ouFilter","path","AppItem","appKey","system","installedApps","app","dashboardWidget","src","SpacerItem","PageBreakItem","PrintTitlePageItem","titlePage","filterTitle","listItems","filterListItem","val","filterList","getItemFilterList","viewDashboard","sGetPrintDashboardName","sGetPrintDashboardDescription","GridItem","VisualizationItem","TextItem","getGridItem","ProgressiveLoadingContainer","shouldLoad","containerRef","shouldLoadHandler","handlerOptions","passive","checkShouldLoad","bufferPx","bufferFactor","rect","getBoundingClientRect","bottom","top","removeHandler","registerHandler","debounceMs","getElementsByClassName","eventProps","pick","ItemGrid","expandedItems","clickedId","isExpanded","onLayoutChange","newLayout","edit","acUpdateDashboardLayout","onResizeStop","oldItem","newItem","pluginResize","adjustHeightForExpanded","expandedItem","getItemComponent","itemClassNames","getItemComponents","UNSAFE_componentWillReceiveProps","nextProps","translucent","cols","rowHeight","compactType","isDraggable","isResizable","draggableCancel","selectedDashboard","validItems","styles","badgeContainer","borderRadius","white","badge","cursor","badgeRemove","textDecoration","marginLeft","FilterBadge","onRemove","count","FilterBar","onBadgeRemove","onBadgeClick","bar","removeItemFIlter","SET_WINDOW_HEIGHT","DEFAULT_STATE_WINDOW_HEIGHT","sGetWindowHeight","windowHeight","acSetPrintDashboard","acClearPrintDashboard","acAddPrintDashboardItem","acUpdatePrintDashboardItem","dashboardIsEditing","dashboardIsPrinting","clearEditDashboard","clearPrintDashboard","ItemSearchField","HeaderMenuItem","LaunchIcon","LaunchLink","launchLink","rel","InsertButton","buttonInsert","ContentMenuItem","onInsert","visType","ItemIcon","renderedItemIcon","visTypeIcons","menuItem","marginRight","singleItems","header","categorizedItems","listItemTypes","CategorizedMenuGroup","addItem","tAddListItemContent","toggleSeeMore","seeMore","onChangeItemsLimit","hasMore","itemUrl","showMoreButton","dashboardItemIndex","category","addToDashboard","ItemSelector","isOpen","setIsOpen","setFilter","setItems","maxOptions","setMaxOptions","Set","queryString","filterStr","then","catch","updateMaxOptions","delete","add","inputRef","maxWidth","menu","itemCount","allItems","displayItems","concat","EditTitleBar","onChangeTitle","onChangeDescription","section","titleDescription","_","itemSelector","ConfirmDeleteDialog","dashboardName","onDeleteConfirmed","onContinueEditing","destructive","EditBar","translationDialogIsOpen","dashboardModel","confirmDeleteDialogOpen","onConfirmDelete","onSave","newId","onPrintPreview","isPrintPreviewView","clearPrintPreview","showPrintPreview","onDiscard","onDiscardChanges","onDelete","onTranslationsSaved","translations","dbLocale","translation","property","onTranslate","fetchDashboardModel","toggleTranslationDialog","confirmDeleteDialog","deleteAccess","translationDialog","objectToTranslate","modelDefinition","fieldsToTranslate","onTranslationSaved","onTranslationError","renderActionButtons","updateAccess","discardBtnText","editBar","sGetIsNewDashboard","acSetDashboardDisplayName","NotSupportedNotice","noticeContainer","PrintInfo","isLayout","infoHeader","infoWrapper","infoList","divider","LessHorizontalIcon","PrintActionsBar","inner","LessHorizontal","print","topMargin","getTransformYPx","elStyle","transformY","match","parseInt","PrintLayoutItemGrid","updateDashboardLayout","isFirstPageBreak","pageBreaks","sortedPageBreaks","sortBy","hideExtraPageBreaks","sortedElements","elements","types","elementsWithBoundingRect","from","classList","bottomY","getDomGridItemsSortedByYPos","querySelectorAll","pageBreakBottom","lastItemBottom","foundNonPageBreak","thisItemBottom","gridElement","firstBreak","scrollArea","EDIT_BAR_HEIGHT","isLeapPage","n","getMultiple","factor","multiple","PrintLayoutDashboard","initialized","initPrintLayoutDashboard","setPrintDashboard","updateDashboardItem","addDashboardItem","yPosList","pageNum","addPageBreaks","getWrapperStyle","fromEdit","paddingTop","spacers","dp24","wrapper","pageOuter","setEditDashboard","renderGrid","setNewDashboard","PrintItemGrid","PrintDashboard","initPrintDashboard","sortedItems","spacerCount","removeDashboardItem","dashboardMap","dashboardsIsEmpty","dashboardsLoaded","routeId","selectDashboard","dashboardToSelect","preferredId","getItem","dash","sGetDashboardsSortedByStarred","setWindowHeight","getElementsByTagName","remove","setHeaderbarVisibility","onResize","onHidden","permanent","tSetDimensions","acSetDimensions","displayNameProp","apiFetchDimensions","dim","dimensionType","dataDimensionType","SYSTEM_SETTINGS","tAddSettings","extraSettings","fetchedSettings","s","apiFetchSystemSettings","App","setCurrentUser","fetchDashboards","setControlBarRows","setShowDescription","addSettings","getChildContext","exact","AlertBar","childContextTypes","DEFAULT_STATE_STYLE","objectClean","conversations","$merge","d2Object","keyUiLocale","authorities","newState","$splice","$unshift","idToRemove","stateItems","layoutHasChanged","newStateItems","stateItem","si","configureStore","middleware","thunk","withExtraArgument","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducer","applyMiddleware","addResources","arTranslations","ar_IQTranslations","ckbTranslations","csTranslations","daTranslations","enTranslations","esTranslations","frTranslations","idTranslations","kmTranslations","loTranslations","myTranslations","nbTranslations","prsTranslations","psTranslations","ptTranslations","pt_BRTranslations","ruTranslations","svTranslations","tetTranslations","tgTranslations","ukTranslations","urTranslations","uzTranslations","uz_CyrlTranslations","viTranslations","zhTranslations","zh_CNTranslations","d2Config","schemas","authorization","process","REACT_APP_DHIS2_AUTHORIZATION","headers","AppWrapper","useDataEngine","store","theme","createMuiTheme","dhis2theme","i18nRoot","reportTable","chart","eventReport","eventChart","itemTypeToExternalPlugin","getPlugin","hasIntegratedPlugin","load","config","plugin","loadingIndicator","loadPlugin","resize","unmount"],"mappings":"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","file":"static/js/app.bc3e09c4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ControlBar_root__iikeX\",\"dragging\":\"ControlBar_dragging__3lq79\",\"content\":\"ControlBar_content__26Z33\",\"draghandle\":\"ControlBar_draghandle__27zum\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"DashboardItemChip_link__21drZ\",\"icon\":\"DashboardItemChip_icon__2hcIR\",\"selected\":\"DashboardItemChip_selected__r00uP\",\"unselected\":\"DashboardItemChip_unselected__2H9l2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ClearButton_button__33ZbK\",\"icon\":\"ClearButton_icon__vTJm3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Filter_container__1Vxdh\",\"input\":\"Filter_input__14lhU\",\"focused\":\"Filter_focused__Lvyz3\",\"searchIcon\":\"Filter_searchIcon__2ojUp\",\"searchButton\":\"Filter_searchButton__1tMTB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ShowMoreButton_container__riJz_\",\"showMore\":\"ShowMoreButton_showMore__3S3He\",\"disabled\":\"ShowMoreButton_disabled__2FQNA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"DashboardsBar_container__1xuCo\",\"expanded\":\"DashboardsBar_expanded__3lVl8\",\"controls\":\"DashboardsBar_controls__3PhmY\",\"newLink\":\"DashboardsBar_newLink__2PkLQ\",\"collapsed\":\"DashboardsBar_collapsed__3CY9n\",\"chipContainer\":\"DashboardsBar_chipContainer__IRxuN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonContainer\":\"FilterSelector_buttonContainer__O_amY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ViewTitleBar_container__VivO0\",\"actions\":\"ViewTitleBar_actions__2UTRz\",\"editLink\":\"ViewTitleBar_editLink__d_HzW\",\"titleBar\":\"ViewTitleBar_titleBar__eiwJS\",\"titleBarIcon\":\"ViewTitleBar_titleBarIcon__2cBxv\",\"strip\":\"ViewTitleBar_strip__3xR4U\",\"title\":\"ViewTitleBar_title__2GhTR\",\"descContainer\":\"ViewTitleBar_descContainer__3rF10\",\"desc\":\"ViewTitleBar_desc__3QW6Z\",\"noDesc\":\"ViewTitleBar_noDesc__Jettc\",\"moreButton\":\"ViewTitleBar_moreButton__1HduK\",\"shareButton\":\"ViewTitleBar_shareButton__3yEKR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"NoVisualizationMessage_message__22IPi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"center\":\"LoadingMask_center__KHIYy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FatalErrorBoundary_container__3SViR\",\"icon\":\"FatalErrorBoundary_icon__2UbeP\",\"message\":\"FatalErrorBoundary_message__3FzrY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"deleteItemButton\":\"DeleteItemButton_deleteItemButton__3TJm9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"warning\":\"PrintItemInfo_warning__123PK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"line\":\"ItemFooter_line__3Ko0R\",\"scrollContainer\":\"ItemFooter_scrollContainer__tuq4P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Item_list__1_nkQ\",\"item\":\"Item_item__3-6QE\",\"itemicon\":\"Item_itemicon__QlouX\",\"link\":\"Item_link___3c_q\",\"deleteicon\":\"Item_deleteicon__3usrl\",\"deletebutton\":\"Item_deletebutton__1DpBW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"titlePage\":\"Item_titlePage__18CNQ\",\"name\":\"Item_name__3nuTV\",\"description\":\"Item_description__1gFQd\",\"filterTitle\":\"Item_filterTitle__2p7TQ\",\"filterList\":\"Item_filterList__qc_G3\",\"filterListItem\":\"Item_filterListItem__sPbBY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bar\":\"FilterBar_bar__1Ma3p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"HeaderMenuItem_item__313hC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuItem\":\"ContentMenuItem_menuItem__vbKn3\",\"launchLink\":\"ContentMenuItem_launchLink__2Nql9\",\"label\":\"ContentMenuItem_label__ANfH1\",\"buttonInsert\":\"ContentMenuItem_buttonInsert__1joHg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"showMoreButton\":\"CategorizedMenuGroup_showMoreButton__2RbRp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"ItemSelector_menu__2VYae\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"EditTitleBar_section__LIaIC\",\"titleDescription\":\"EditTitleBar_titleDescription__1YsU6\",\"title\":\"EditTitleBar_title__3mUbt\",\"description\":\"EditTitleBar_description__24U5X\",\"itemSelector\":\"EditTitleBar_itemSelector__1cFEp\"};","import i18n from '@dhis2/d2-i18n';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\nimport ExtensionIcon from '@material-ui/icons/Extension';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport PersonIcon from '@material-ui/icons/Person';\nimport FontDownloadIcon from '@material-ui/icons/FontDownload';\nimport EmailIcon from '@material-ui/icons/Email';\nimport CropFreeIcon from '@material-ui/icons/CropFree';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\nimport { getBaseUrl } from './util'; // Item types\n\nexport const VISUALIZATION = 'VISUALIZATION';\nexport const REPORT_TABLE = 'REPORT_TABLE';\nexport const CHART = 'CHART';\nexport const MAP = 'MAP';\nexport const EVENT_REPORT = 'EVENT_REPORT';\nexport const EVENT_CHART = 'EVENT_CHART';\nexport const APP = 'APP';\nexport const REPORTS = 'REPORTS';\nexport const RESOURCES = 'RESOURCES';\nexport const USERS = 'USERS';\nexport const MESSAGES = 'MESSAGES';\nexport const TEXT = 'TEXT';\nexport const SPACER = 'SPACER';\nexport const PAGEBREAK = 'PAGEBREAK';\nexport const PRINT_TITLE_PAGE = 'PRINT_TITLE_PAGE';\nconst DOMAIN_TYPE_AGGREGATE = 'AGGREGATE';\nconst DOMAIN_TYPE_TRACKER = 'TRACKER'; // Dashboard helpers\n\nexport const isVisualizationType = item => !!itemTypeMap[item.type].isVisualizationType;\nexport const hasMapView = itemType => itemTypeMap[itemType].domainType === DOMAIN_TYPE_AGGREGATE;\nexport const isTrackerDomainType = itemType => itemTypeMap[itemType].domainType === DOMAIN_TYPE_TRACKER;\nexport const getDefaultItemCount = itemType => itemTypeMap[itemType].defaultItemCount || 5;\nexport const getAppName = itemType => itemTypeMap[itemType].appName || ''; // Item type map\n\nexport const itemTypeMap = {\n  [VISUALIZATION]: {\n    id: VISUALIZATION,\n    endPointName: 'visualizations',\n    propName: 'visualization',\n    pluralTitle: i18n.t('Visualizations'),\n    appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n    appName: 'Data Visualizer',\n    defaultItemCount: 10\n  },\n  [REPORT_TABLE]: {\n    id: REPORT_TABLE,\n    endPointName: 'visualizations',\n    dataStatisticsName: 'REPORT_TABLE_VIEW',\n    propName: 'visualization',\n    pluralTitle: i18n.t('Pivot tables'),\n    domainType: DOMAIN_TYPE_AGGREGATE,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n    appName: 'Data Visualizer'\n  },\n  [CHART]: {\n    id: CHART,\n    endPointName: 'visualizations',\n    propName: 'visualization',\n    dataStatisticsName: 'CHART_VIEW',\n    pluralTitle: i18n.t('Charts'),\n    domainType: DOMAIN_TYPE_AGGREGATE,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n    appName: 'Data Visualizer'\n  },\n  [MAP]: {\n    id: MAP,\n    endPointName: 'maps',\n    dataStatisticsName: 'MAP_VIEW',\n    propName: 'map',\n    pluralTitle: i18n.t('Maps'),\n    domainType: DOMAIN_TYPE_AGGREGATE,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-maps/?id=${id}`,\n    appName: 'Maps'\n  },\n  [EVENT_REPORT]: {\n    id: EVENT_REPORT,\n    endPointName: 'eventReports',\n    propName: 'eventReport',\n    pluralTitle: i18n.t('Event reports'),\n    domainType: DOMAIN_TYPE_TRACKER,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-event-reports/?id=${id}`,\n    appName: 'Event Reports'\n  },\n  [EVENT_CHART]: {\n    id: EVENT_CHART,\n    endPointName: 'eventCharts',\n    propName: 'eventChart',\n    pluralTitle: i18n.t('Event charts'),\n    domainType: DOMAIN_TYPE_TRACKER,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-event-visualizer/?id=${id}`,\n    appName: 'Event Visualizer'\n  },\n  [APP]: {\n    endPointName: 'apps',\n    propName: 'appKey',\n    pluralTitle: i18n.t('Apps')\n  },\n  [REPORTS]: {\n    id: REPORTS,\n    endPointName: 'reports',\n    propName: 'reports',\n    pluralTitle: i18n.t('Reports'),\n    appUrl: (id, type) => {\n      switch (type) {\n        case 'HTML':\n          return `dhis-web-reports/#/standard-report/view/${id}`;\n\n        case 'JASPER_REPORT_TABLE':\n        case 'JASPER_JDBC':\n        default:\n          return `api/reports/${id}/data.pdf?t=${new Date().getTime()}`;\n      }\n    }\n  },\n  [RESOURCES]: {\n    id: RESOURCES,\n    endPointName: 'resources',\n    propName: 'resources',\n    pluralTitle: i18n.t('Resources'),\n    appUrl: id => `api/documents/${id}/data`\n  },\n  [USERS]: {\n    id: USERS,\n    endPointName: 'users',\n    propName: 'users',\n    pluralTitle: i18n.t('Users'),\n    appUrl: id => `dhis-web-dashboard-integration/profile.action?id=${id}`\n  },\n  [TEXT]: {\n    id: TEXT,\n    propName: 'text'\n  },\n  [MESSAGES]: {\n    propName: 'messages'\n  },\n  [SPACER]: {\n    propName: 'text'\n  },\n  [PAGEBREAK]: {\n    propName: 'text'\n  },\n  [PRINT_TITLE_PAGE]: {\n    propName: 'text'\n  }\n};\nexport const getEndPointName = type => itemTypeMap[type].endPointName;\nexport const getDataStatisticsName = type => itemTypeMap[type].dataStatisticsName || null;\nexport const getItemUrl = (type, item, d2) => {\n  let url;\n\n  if (type === APP) {\n    url = item.launchUrl;\n  }\n\n  if (itemTypeMap[type] && itemTypeMap[type].appUrl) {\n    url = `${getBaseUrl(d2)}/${itemTypeMap[type].appUrl(item.id, item.type)}`;\n  }\n\n  return url;\n};\nexport const getItemIcon = type => {\n  switch (type) {\n    case REPORT_TABLE:\n    case EVENT_REPORT:\n    case REPORTS:\n      return TableIcon;\n\n    case CHART:\n    case EVENT_CHART:\n      return ChartIcon;\n\n    case MAP:\n      return MapIcon;\n\n    case APP:\n      return ExtensionIcon;\n\n    case RESOURCES:\n      return DescriptionIcon;\n\n    case USERS:\n      return PersonIcon;\n\n    case TEXT:\n      return FontDownloadIcon;\n\n    case MESSAGES:\n      return EmailIcon;\n\n    case SPACER:\n      return CropFreeIcon;\n\n    default:\n      return NotInterestedIcon;\n  }\n};","import isObject from 'lodash/isObject'; // validation\n\nexport function orNull(param) {\n  return param === undefined ? null : param;\n}\nexport function orArray(param) {\n  return Array.isArray(param) ? param : [];\n}\nexport function orObject(param) {\n  return isObject(param) ? param : {};\n} // array\n\nexport function arrayGetById(array, id) {\n  return array.find(item => item.id === id);\n} // object\n\nexport function arrayToIdMap(array) {\n  return array.reduce((obj, item) => {\n    obj[item.id] = item;\n    return obj;\n  }, {});\n} // date\n\nexport function getDate() {\n  const y = Math.floor(Math.random() * 3) + 2015;\n  const M = Math.floor(Math.random() * 12) + 1;\n  const d = Math.floor(Math.random() * 28) + 1; // const h = Math.floor(Math.random() * 23) + 1;\n  // const m = Math.floor(Math.random() * 59) + 1;\n  // const s = Math.floor(Math.random() * 59) + 1;\n\n  return new Date(`${y}-${M}-${d}`).toJSON().replace('T', ' ').substr(0, 10);\n}\nexport const formatDate = (value, uiLocale) => {\n  if (typeof global.Intl !== 'undefined' && Intl.DateTimeFormat) {\n    const locale = uiLocale || 'en';\n    return new Intl.DateTimeFormat(locale, {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    }).format(new Date(value));\n  }\n\n  return value.substr(0, 19).replace('T', ' ');\n};\n/**\n * Sorts an array of objects based on provided date property\n *\n * @param {Array} items Array of objects\n * @param {String} dateProp Name of the date property to be used for sorting\n * @param {Boolean} ascending Whether to sort ascending or descending\n */\n\nexport const sortByDate = (items, dateProp, ascending = true) => {\n  const values = Object.values(items);\n  values.sort((a, b) => {\n    const aDate = new Date(a[dateProp]);\n    const bDate = new Date(b[dateProp]);\n    return ascending ? aDate - bDate : bDate - aDate;\n  });\n  return values;\n}; // reducer validator\n\nexport const validateReducer = (value, defaultValue) => value === undefined || value === null ? defaultValue : value;\nexport const getBaseUrl = d2 => {\n  const api = d2.Api.getApi();\n  const idx = api.baseUrl.indexOf('/api');\n  return idx > -1 ? api.baseUrl.slice(0, idx) : api.baseUrl;\n};","import isFunction from 'd2-utilizr/lib/isFunction';\nimport { orObject } from '../../modules/util'; // Dimensions for the react-grid-layout\n\nexport const GRID_COMPACT_TYPE = 'vertical'; // vertical | horizonal | null\n\nexport const GRID_ROW_HEIGHT = 10;\nconst GRID_COLUMN_WIDTH_PX = 20;\nconst GRID_LAYOUT = 'FLEXIBLE'; // FIXED | FLEXIBLE\n\nexport const MARGIN = [10, 10];\nexport const NEW_ITEM_SHAPE = {\n  x: 0,\n  y: 0,\n  w: 20,\n  h: 29\n}; // Dimensions for getShape\n\nconst NUMBER_OF_ITEM_COLS = 2;\nconst GRID_COLUMNS = 60;\nconst MAX_ITEM_GRID_WIDTH = GRID_COLUMNS - 1;\nexport const MAX_ITEM_GRID_HEIGHT = 34;\nexport const MAX_ITEM_GRID_HEIGHT_OIPP = 35;\nexport const MAX_ITEM_GRID_WIDTH_OIPP = 56; // for A4 landscape (297x210mm)\n// 794 px = (21cm / 2.54) * 96 pixels/inch\n// 1122 px = 29.7 /2.54 * 96 pixels/inch\n// const a4LandscapeHeightPx = 794\n\nexport const a4LandscapeWidthPx = 1102;\nexport const getGridColumns = () => {\n  switch (GRID_LAYOUT) {\n    case 'FLEXIBLE':\n      return GRID_COLUMNS;\n\n    case 'FIXED':\n      return Math.floor((window.innerWidth - 20) / GRID_COLUMN_WIDTH_PX);\n\n    default:\n      return GRID_COLUMNS;\n  }\n}; // isNonNegativeInteger\n\nconst isNonNegativeInteger = x => Number.isInteger(x) && x >= 0; // Does the item have all the shape properties?\n\n\nexport const hasShape = item => isNonNegativeInteger(item.x) && isNonNegativeInteger(item.y) && isNonNegativeInteger(item.w) && isNonNegativeInteger(item.h); // returns a rectangular grid block dimensioned with x, y, w, h in grid units.\n// based on a grid with 3 items across\n\nexport const getShape = i => {\n  if (!isNonNegativeInteger(i)) {\n    throw new Error('Invalid grid block number');\n  }\n\n  const col = i % NUMBER_OF_ITEM_COLS;\n  const row = Math.floor(i / NUMBER_OF_ITEM_COLS);\n  const itemWidth = Math.floor(MAX_ITEM_GRID_WIDTH / NUMBER_OF_ITEM_COLS);\n  const itemHeight = GRID_ROW_HEIGHT * 2;\n  return {\n    x: col * itemWidth,\n    y: row * itemHeight,\n    w: itemWidth,\n    h: itemHeight\n  };\n};\nexport const getGridItemProperties = itemId => {\n  return {\n    i: itemId,\n    minH: 4 // minimum height for item\n\n  };\n};\nexport const getPageBreakItemShape = (yPos, isStatic = true) => {\n  return {\n    x: 0,\n    y: yPos,\n    w: MAX_ITEM_GRID_WIDTH,\n    h: 5,\n    static: !!isStatic,\n    minH: 1\n  };\n};\nexport const getPrintTitlePageItemShape = isOneItemPerPage => {\n  return {\n    x: 0,\n    y: 0,\n    w: isOneItemPerPage ? MAX_ITEM_GRID_WIDTH_OIPP : MAX_ITEM_GRID_WIDTH,\n    h: MAX_ITEM_GRID_HEIGHT,\n    static: true,\n    minH: 1\n  };\n};\n/**\n * Calculates the grid item's original height in pixels based\n * on the height in grid units. This calculation\n * is copied directly from react-grid-layout GridItem.js (calcPosition)\n *\n * @param {Object} item item containing shape (x, y, w, h)\n */\n\nexport const getOriginalHeight = item => {\n  const originalHeight = Math.round(GRID_ROW_HEIGHT * item.h + Math.max(0, item.h - 1) * MARGIN[1]);\n  return {\n    originalHeight\n  };\n};\n/**\n * Returns an array of items containing the x, y, w, h dimensions\n * and the item's originalheight in pixels\n * @function\n * @param {Array} items\n * @returns {Array}\n */\n\nexport const withShape = items => items.map((item, index) => {\n  const itemWithShape = hasShape(item) ? item : Object.assign({}, item, getShape(index));\n  return Object.assign({}, itemWithShape, getOriginalHeight(itemWithShape));\n});\nexport const getGridItemDomId = id => `item-${id}`;\nexport function onItemResize(id) {\n  const el = orObject(document.querySelector(`#${getGridItemDomId(id)}`));\n  if (isFunction(el.setViewportSize)) setTimeout(() => el.setViewportSize(el.clientWidth - 5, el.clientHeight - 5), 10);\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ConfirmDeleteDialog_content__EqswE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editBar\":\"EditBar_editBar__1d1xM\",\"controls\":\"EditBar_controls__1t0nO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noticeContainer\":\"NotSupportedNotice_noticeContainer__3z9Up\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"infoWrapper\":\"PrintInfo_infoWrapper__3m2lt\",\"infoHeader\":\"PrintInfo_infoHeader__KyW8I\",\"info\":\"PrintInfo_info__13oXZ\",\"infoList\":\"PrintInfo_infoList__Iu9MC\",\"divider\":\"PrintInfo_divider__3wzx9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PrintActionsBar_container__2iQp7\",\"topMargin\":\"PrintActionsBar_topMargin__OpYDN\",\"inner\":\"PrintActionsBar_inner__uBqU7\",\"link\":\"PrintActionsBar_link__lFUmI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"PrintLayoutDashboard_wrapper__1WDh4\",\"pageOuter\":\"PrintLayoutDashboard_pageOuter__22acI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"PrintDashboard_wrapper__1O3s_\",\"pageOuter\":\"PrintDashboard_pageOuter__fl9tw\"};","import React, { createContext, useContext, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash/debounce';\nexport const WindowDimensionsCtx = createContext(null);\n\nconst windowDims = () => ({\n  height: window.innerHeight,\n  width: window.innerWidth\n});\n\nconst WindowDimensionsProvider = ({\n  children\n}) => {\n  const [dimensions, setDimensions] = useState(windowDims());\n  useEffect(() => {\n    const handleResize = debounce(() => {\n      setDimensions(windowDims());\n    }, 200);\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n  return <WindowDimensionsCtx.Provider value={dimensions}>\n            {children}\n        </WindowDimensionsCtx.Provider>;\n};\n\nWindowDimensionsProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};\nexport default WindowDimensionsProvider;\nexport const useWindowDimensions = () => {\n  return useContext(WindowDimensionsCtx);\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport classes from './styles/ControlBar.module.css';\nexport const DRAG_HANDLE_HEIGHT = 7;\n\nclass ControlBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dragging: false\n    };\n  }\n\n  onStartDrag = () => {\n    this.setState({\n      dragging: true\n    });\n    window.addEventListener('mousemove', this.onDrag);\n    window.addEventListener('mouseup', this.onEndDrag);\n  };\n  onDrag = event => {\n    event.preventDefault();\n    event.stopPropagation();\n    const newHeight = event.clientY;\n\n    if (this.props.onChangeHeight && newHeight !== this.props.height && newHeight > 0) {\n      requestAnimationFrame(() => {\n        this.props.onChangeHeight(newHeight);\n      });\n    }\n  };\n  onEndDrag = () => {\n    this.setState({\n      dragging: false\n    });\n    window.removeEventListener('mousemove', this.onDrag);\n    window.removeEventListener('mouseup', this.onEndDrag);\n\n    if (this.props.onEndDrag) {\n      this.props.onEndDrag();\n    }\n  };\n  renderDragHandle = () => typeof this.props.onChangeHeight === 'function' && <div data-testid=\"controlbar-drag-handle\" className={classes.draghandle} style={{\n    height: DRAG_HANDLE_HEIGHT\n  }} onMouseDown={this.onStartDrag} />;\n\n  render() {\n    const height = Math.max(this.props.height, 0) + DRAG_HANDLE_HEIGHT;\n    const rootClass = cx(classes.root, this.state.dragging && classes.dragging);\n    return <div style={{\n      height\n    }} className={rootClass}>\n                <div className={classes.content}>{this.props.children}</div>\n                {this.renderDragHandle()}\n            </div>;\n  }\n\n}\n\nControlBar.propTypes = {\n  /**\n   * The height of the control bar in number of lines. Must be a positive integer.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Callback function that is called when the control bar is resized.\n   * The callback receives one argument: The new height in pixels.\n   *\n   * If no callback is specified the control bar will not have a drag handle.\n   */\n  height: PropTypes.number.isRequired,\n\n  /**\n   * Callback function that is called when the control bar is dropped after being dragged.\n   * The callback receives one argument: The new height in pixels.\n   *\n   * Ignored if no \"onChangeHeight\" function is provided.\n   */\n  onChangeHeight: PropTypes.func,\n\n  /**\n   * The contents of the control bar.\n   */\n  onEndDrag: PropTypes.func\n};\nControlBar.defaultProps = {\n  onChangeHeight: null,\n  onEndDrag: null\n};\nexport default ControlBar;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst StarIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>;\n\nStarIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default StarIcon;","import { getInstance } from 'd2';\nexport const apiPostDataStatistics = async (eventType, id) => {\n  const d2 = await getInstance();\n  const url = `dataStatistics?eventType=${eventType}&favorite=${id}`;\n  d2.Api.getApi().post(url);\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Chip } from '@dhis2/ui';\nimport { Link } from 'react-router-dom';\nimport debounce from 'lodash/debounce';\nimport StarIcon from '../../icons/Star';\nimport { apiPostDataStatistics } from '../../api/dataStatistics';\nimport classes from './styles/DashboardItemChip.module.css';\nexport const DashboardItemChip = ({\n  starred,\n  selected,\n  label,\n  dashboardId,\n  onClick\n}) => {\n  const chipProps = {\n    selected\n  };\n\n  if (starred) {\n    const selectedState = selected ? classes.selected : classes.unselected;\n    chipProps.icon = <StarIcon className={`${classes.icon} ${selectedState}`} />;\n  }\n\n  const debouncedPostStatistics = debounce(() => apiPostDataStatistics('DASHBOARD_VIEW', dashboardId), 500);\n\n  const handleClick = () => {\n    debouncedPostStatistics();\n    onClick();\n  };\n\n  return <Link className={classes.link} to={`/${dashboardId}`} onClick={handleClick} data-test=\"dashboard-chip\">\n            <Chip {...chipProps}>{label}</Chip>\n        </Link>;\n};\nDashboardItemChip.propTypes = {\n  dashboardId: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  selected: PropTypes.bool.isRequired,\n  starred: PropTypes.bool.isRequired,\n  onClick: PropTypes.func.isRequired,\n  classes: PropTypes.object\n};\nexport default DashboardItemChip;","import React from 'react';\nimport { colors } from '@dhis2/ui';\n\nconst AddCircleIcon = () => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" fill={colors.teal600} viewBox=\"0 0 24 24\">\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm4 11h-3v3c0 .55-.45 1-1 1s-1-.45-1-1v-3H8c-.55 0-1-.45-1-1s.45-1 1-1h3V8c0-.55.45-1 1-1s1 .45 1 1v3h3c.55 0 1 .45 1 1s-.45 1-1 1z\" />\n    </svg>;\n\nexport default AddCircleIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst SearchIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\" />\n    </svg>;\n\nSearchIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default SearchIcon;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst ClearIcon = ({\n  className\n}) => <svg className={className} fill={colors.grey800} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n        <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>;\n\nClearIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default ClearIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ClearIcon from '../../icons/Clear';\nimport classes from './styles/ClearButton.module.css';\nexport const ClearButton = ({\n  onClear\n}) => <button className={classes.button} onClick={onClear}>\n        <span>\n            <ClearIcon className={classes.icon} color=\"action\" />\n        </span>\n    </button>;\nClearButton.propTypes = {\n  onClear: PropTypes.func.isRequired\n};\nexport default ClearButton;","import { validateReducer } from '../modules/util';\nexport const SET_DASHBOARDS_FILTER = 'SET_DASHBOARDS_FILTER';\nexport const CLEAR_DASHBOARDS_FILTER = 'CLEAR_DASHBOARDS_FILTER';\nexport const DEFAULT_STATE_DASHBOARDS_FILTER = '';\nexport default ((state = DEFAULT_STATE_DASHBOARDS_FILTER, action) => {\n  switch (action.type) {\n    case SET_DASHBOARDS_FILTER:\n      {\n        return validateReducer(action.value, DEFAULT_STATE_DASHBOARDS_FILTER);\n      }\n\n    case CLEAR_DASHBOARDS_FILTER:\n      {\n        return DEFAULT_STATE_DASHBOARDS_FILTER;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetDashboardsFilter = state => state.dashboardsFilter;","const SMALL_SCREEN_BREAKPOINT = 480;\n\nconst isSmallScreen = width => width <= SMALL_SCREEN_BREAKPOINT;\n\nexport default isSmallScreen;","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport cx from 'classnames';\nimport SearchIcon from '../../icons/Search';\nimport ClearButton from './ClearButton';\nimport { useWindowDimensions } from '../WindowDimensionsProvider';\nimport { acSetDashboardsFilter, acClearDashboardsFilter } from '../../actions/dashboardsFilter';\nimport { sGetDashboardsFilter } from '../../reducers/dashboardsFilter';\nimport isSmallScreen from '../../modules/isSmallScreen';\nimport classes from './styles/Filter.module.css';\nexport const KEYCODE_ENTER = 13;\nexport const KEYCODE_ESCAPE = 27;\nexport const FilterUnconnected = ({\n  clearDashboardsFilter,\n  filterText,\n  isMaxHeight,\n  setDashboardsFilter,\n  onKeypressEnter,\n  onToggleMaxHeight\n}) => {\n  const [focusedClassName, setFocusedClassName] = useState('');\n  const {\n    width\n  } = useWindowDimensions();\n\n  const setFilterValue = event => {\n    event.preventDefault();\n    setDashboardsFilter(event.target.value);\n  };\n\n  const onKeyUp = event => {\n    switch (event.keyCode) {\n      case KEYCODE_ENTER:\n        onKeypressEnter();\n        clearDashboardsFilter();\n        break;\n\n      case KEYCODE_ESCAPE:\n        clearDashboardsFilter();\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const onFocus = event => {\n    event.preventDefault();\n    setFocusedClassName(classes.focused);\n  };\n\n  const onBlur = event => {\n    event.preventDefault();\n    setFocusedClassName('');\n  };\n\n  return isSmallScreen(width) && !isMaxHeight ? <button className={classes.searchButton} onClick={onToggleMaxHeight}>\n            <SearchIcon className={classes.searchIcon} />\n        </button> : <div className={cx(classes.container, `${focusedClassName}`)} onFocus={onFocus} onBlur={onBlur}>\n            <SearchIcon className={classes.searchIcon} />\n            <input className={classes.input} type=\"text\" placeholder={i18n.t('Search for a dashboard')} onChange={setFilterValue} onKeyUp={onKeyUp} value={filterText} data-test=\"search-dashboard-input\" />\n            {filterText && <ClearButton onClear={clearDashboardsFilter} />}\n        </div>;\n};\nFilterUnconnected.propTypes = {\n  clearDashboardsFilter: PropTypes.func,\n  filterText: PropTypes.string,\n  isMaxHeight: PropTypes.bool,\n  setDashboardsFilter: PropTypes.func,\n  onKeypressEnter: PropTypes.func,\n  onToggleMaxHeight: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  filterText: sGetDashboardsFilter(state)\n});\n\nconst mapDispatchToProps = {\n  setDashboardsFilter: acSetDashboardsFilter,\n  clearDashboardsFilter: acClearDashboardsFilter\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterUnconnected);","import { SET_DASHBOARDS_FILTER, CLEAR_DASHBOARDS_FILTER } from '../reducers/dashboardsFilter'; // actions\n\nexport const acSetDashboardsFilter = value => ({\n  type: SET_DASHBOARDS_FILTER,\n  value\n});\nexport const acClearDashboardsFilter = () => ({\n  type: CLEAR_DASHBOARDS_FILTER\n});","import React from 'react';\nexport const ChevronDown = () => <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"m11.29289 15.7071c.39053.3905 1.02369.3905 1.41422 0l4.99999-4.99999c.3905-.39053.3905-1.02369 0-1.41422-.3905-.39052-1.0237-.39052-1.4142 0l-4.2929 4.2929-4.29289-4.2929c-.39053-.39052-1.02369-.39052-1.41422 0-.39052.39053-.39052 1.02369 0 1.41422z\" fill=\"#a0adba\" />\n    </svg>;\nexport const ChevronUp = () => <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"m11.2928932 8.29289322c.360484-.36048396.927715-.3882135 1.3200062-.08318861l.0942074.08318861 5 4.99999998c.3905243.3905243.3905243 1.0236893 0 1.4142136-.360484.3604839-.927715.3882135-1.3200062.0831886l-.0942074-.0831886-4.2928932-4.2921068-4.29289322 4.2921068c-.36048396.3604839-.92771502.3882135-1.32000622.0831886l-.09420734-.0831886c-.36048396-.360484-.3882135-.927715-.08318861-1.3200062l.08318861-.0942074z\" fill=\"#a0adba\" />\n    </svg>;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Tooltip } from '@dhis2/ui';\nimport { ChevronDown, ChevronUp } from './assets/icons';\nimport classes from './styles/ShowMoreButton.module.css';\nexport const SHOWMORE_BAR_HEIGHT = 16;\n\nconst ShowMoreButton = ({\n  onClick,\n  isMaxHeight,\n  disabled\n}) => {\n  const buttonLabel = isMaxHeight ? i18n.t('Show fewer dashboards') : i18n.t('Show more dashboards');\n  return <div className={classes.container}>\n            {disabled ? <div className={classes.disabled}>\n                    <ChevronDown />\n                </div> : <Tooltip content={buttonLabel} placement=\"bottom\">\n                    <button className={classes.showMore} onClick={onClick} data-test=\"showmore-button\" aria-label={buttonLabel}>\n                        {isMaxHeight ? <ChevronUp /> : <ChevronDown />}\n                    </button>\n                </Tooltip>}\n        </div>;\n};\n\nShowMoreButton.propTypes = {\n  disabled: PropTypes.bool,\n  isMaxHeight: PropTypes.bool,\n  onClick: PropTypes.func\n};\nexport default ShowMoreButton;","import { SHOWMORE_BAR_HEIGHT } from './ShowMoreButton';\nexport const CONTROL_BAR_ROW_HEIGHT = 40;\nexport const FIRST_ROW_PADDING_HEIGHT = 10;\nexport const MIN_ROW_COUNT = 1;\nexport const HEADERBAR_HEIGHT = 48;\nconst CONTROL_BAR_OUTER_HEIGHT_DIFF = FIRST_ROW_PADDING_HEIGHT + SHOWMORE_BAR_HEIGHT - 2; // 2 pixel \"adjustment\"\n\nexport const getRowsHeight = rows => {\n  return rows * CONTROL_BAR_ROW_HEIGHT;\n};\nexport const getNumRowsFromHeight = height => {\n  return Math.floor((height - CONTROL_BAR_OUTER_HEIGHT_DIFF) / CONTROL_BAR_ROW_HEIGHT);\n};\nexport const getControlBarHeight = rows => {\n  return getRowsHeight(rows) + CONTROL_BAR_OUTER_HEIGHT_DIFF;\n};","/** @module reducers/controlBar */\nimport { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\nexport const SET_CONTROLBAR_USER_ROWS = 'SET_CONTROLBAR_USER_ROWS';\nexport const DEFAULT_STATE_CONTROLBAR_ROWS = 1;\n\nconst userRows = (state = DEFAULT_STATE_CONTROLBAR_ROWS, action) => {\n  switch (action.type) {\n    case SET_CONTROLBAR_USER_ROWS:\n      return validateReducer(action.value, DEFAULT_STATE_CONTROLBAR_ROWS);\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  userRows\n});\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\n\nexport const sGetControlBarRoot = state => state.controlBar; // Selector dependency level 2\n\nexport const sGetControlBarUserRows = state => sGetControlBarRoot(state).userRows;","import { TEXT, SPACER } from './itemTypes';\nimport { getGridItemProperties } from '../components/ItemGrid/gridUtil';\nexport const spacerContent = 'SPACER_ITEM_FOR_DASHBOARD_LAYOUT_CONVENIENCE';\nexport const emptyTextItemContent = 'TEXT_ITEM_WITH_NO_CONTENT';\n\nconst isBackendSpacerType = item => item.type === TEXT && item.text === spacerContent;\n\nconst isUiSpacerType = item => item.type === SPACER;\n\nconst isTextType = item => item.type === TEXT && item.text !== spacerContent;\n\nexport const convertUiItemsToBackend = items => items.map(item => {\n  let text = null;\n\n  if (isUiSpacerType(item)) {\n    text = spacerContent;\n  } else if (isTextType(item)) {\n    text = item.text || emptyTextItemContent;\n  }\n\n  return { ...item,\n    ...(text ? {\n      text\n    } : {})\n  };\n});\nexport const convertBackendItemsToUi = items => items.map(item => {\n  const type = isBackendSpacerType(item) ? SPACER : item.type;\n  const gridProperties = getGridItemProperties(item.id);\n  const text = isTextType(item) ? item.text === emptyTextItemContent ? '' : item.text : null;\n  return { ...item,\n    ...(text !== null ? {\n      text\n    } : {}),\n    type,\n    ...gridProperties\n  };\n});","/** @module reducers/dashboards */\nimport arrayFrom from 'd2-utilizr/lib/arrayFrom';\nimport arraySort from 'd2-utilizr/lib/arraySort';\nimport { orArray, orObject } from '../modules/util';\nimport { convertBackendItemsToUi } from '../modules/uiBackendItemConverter';\nexport const SET_DASHBOARDS = 'SET_DASHBOARDS';\nexport const ADD_DASHBOARDS = 'ADD_DASHBOARDS';\nexport const SET_DASHBOARD_STARRED = 'SET_DASHBOARD_STARRED';\nexport const SET_DASHBOARD_DISPLAY_NAME = 'SET_DASHBOARD_DISPLAY_NAME';\nexport const SET_DASHBOARD_ITEMS = 'SET_DASHBOARD_ITEMS';\nexport const DEFAULT_STATE_DASHBOARDS = {\n  byId: null,\n  items: []\n};\nexport const EMPTY_DASHBOARD = {}; // reducer helper functions\n\nconst updateDashboardProp = ({\n  state,\n  dashboardId,\n  prop,\n  value\n}) => ({\n  byId: { ...state.byId,\n    [dashboardId]: { ...state.byId[dashboardId],\n      [prop]: value\n    }\n  },\n  items: state.items\n});\n/**\n * Reducer that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n * @returns {Object}\n */\n\n\nexport default ((state = DEFAULT_STATE_DASHBOARDS, action) => {\n  switch (action.type) {\n    case SET_DASHBOARDS:\n      {\n        return {\n          byId: action.value,\n          items: []\n        };\n      }\n\n    case ADD_DASHBOARDS:\n      {\n        return { ...state,\n          byId: { ...state.byId,\n            ...action.value\n          }\n        };\n      }\n\n    case SET_DASHBOARD_STARRED:\n      {\n        return updateDashboardProp({\n          state,\n          dashboardId: action.dashboardId,\n          prop: 'starred',\n          value: action.value\n        });\n      }\n\n    case SET_DASHBOARD_DISPLAY_NAME:\n      {\n        return updateDashboardProp({\n          state,\n          dashboardId: action.dashboardId,\n          prop: 'displayName',\n          value: action.value\n        });\n      }\n\n    case SET_DASHBOARD_ITEMS:\n      {\n        return { ...state,\n          items: action.value\n        };\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetDashboardsRoot = state => state.dashboards; // selector level 1\n\n/**\n * Selector which returns a dashboard by id from the state object\n * If no matching dashboard is found it returns undefined\n * If dashboards.byId is null, then the dashboards api request\n * has not yet completed. If dashboards.byId is an empty object\n * then the dashboards api request is complete, but no dashboards\n * were returned\n *\n * @function\n * @param {Object} state The current state\n * @param {Number} id The id of the dashboard\n * @returns {Object | undefined}\n */\n\nexport const sGetDashboardById = (state, id) => orObject(sGetDashboardsRoot(state).byId)[id];\nexport const sDashboardsIsFetching = state => {\n  return sGetDashboardsRoot(state).byId === null;\n};\n/**\n * Selector which returns all dashboards (the byId object)\n *\n * @function\n * @param {Object} state The current state\n * @returns {Object | undefined}\n */\n\nexport const sGetAllDashboards = state => orObject(sGetDashboardsRoot(state).byId);\n/**\n * Selector which returns the current dashboard items\n *\n * @function\n * @param {Object} state The current state\n * @returns {Array}\n */\n\nexport const sGetDashboardItems = state => sGetDashboardsRoot(state).items; // selector level 2\n\nexport const sGetStarredDashboards = state => Object.values(sGetAllDashboards(state)).filter(dashboard => dashboard.starred === true);\nexport const sGetUnstarredDashboards = state => Object.values(sGetAllDashboards(state)).filter(dashboard => dashboard.starred === false); // selector level 3\n\nexport const sGetStarredDashboardIds = state => {\n  return sGetStarredDashboards(state).map(dashboard => dashboard.id);\n};\nexport const sGetUnstarredDashboardIds = state => sGetUnstarredDashboards(state).map(dashboard => dashboard.id);\nexport const sGetDashboardsSortedByStarred = state => [...arraySort(sGetStarredDashboards(state), 'ASC', 'displayName'), ...arraySort(sGetUnstarredDashboards(state), 'ASC', 'displayName')]; // utils\n\n/**\n * Returns the array of dashboards, customized for ui\n * @function\n * @param {Array} data The original dashboard list\n * @returns {Array}\n */\n\nexport const getCustomDashboards = data => arrayFrom(data).map(d => ({\n  id: d.id,\n  name: d.name,\n  displayName: d.displayName,\n  description: d.description,\n  displayDescription: d.displayDescription,\n  starred: d.favorite,\n  owner: d.user.name,\n  created: d.created.split('T').join(' ').substr(0, 16),\n  lastUpdated: d.lastUpdated.split('T').join(' ').substr(0, 16),\n  access: d.access,\n  numberOfItems: orArray(d.dashboardItems).length,\n  dashboardItems: convertBackendItemsToUi(d.dashboardItems)\n}));","/** @module reducers/selected */\nimport { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\nexport const SET_SELECTED_ID = 'SET_SELECTED_ID';\nexport const SET_SELECTED_ISLOADING = 'SET_SELECTED_ISLOADING';\nexport const SET_SELECTED_SHOWDESCRIPTION = 'SET_SELECTED_SHOWDESCRIPTION';\nexport const SET_SELECTED_ITEM_ACTIVE_TYPE = 'SET_SELECTED_ITEM_ACTIVE_TYPE';\nexport const CLEAR_SELECTED_ITEM_ACTIVE_TYPES = 'CLEAR_SELECTED_ITEM_ACTIVE_TYPES';\nexport const DEFAULT_STATE_SELECTED_ID = null;\nexport const DEFAULT_STATE_SELECTED_ISLOADING = false;\nexport const DEFAULT_STATE_SELECTED_SHOWDESCRIPTION = false;\nexport const DEFAULT_STATE_SELECTED_ITEM_ACTIVE_TYPES = {};\nexport const NON_EXISTING_DASHBOARD_ID = '0';\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\n\nconst id = (state = DEFAULT_STATE_SELECTED_ID, action) => {\n  switch (action.type) {\n    case SET_SELECTED_ID:\n      return validateReducer(action.value, DEFAULT_STATE_SELECTED_ID);\n\n    default:\n      return state;\n  }\n};\n\nconst isLoading = (state = DEFAULT_STATE_SELECTED_ISLOADING, action) => {\n  switch (action.type) {\n    case SET_SELECTED_ISLOADING:\n      return validateReducer(action.value, DEFAULT_STATE_SELECTED_ISLOADING);\n\n    default:\n      return state;\n  }\n};\n\nconst showDescription = (state = DEFAULT_STATE_SELECTED_SHOWDESCRIPTION, action) => {\n  switch (action.type) {\n    case SET_SELECTED_SHOWDESCRIPTION:\n      return validateReducer(action.value, DEFAULT_STATE_SELECTED_SHOWDESCRIPTION);\n\n    default:\n      return state;\n  }\n};\n\nconst itemActiveTypes = (state = DEFAULT_STATE_SELECTED_ITEM_ACTIVE_TYPES, action) => {\n  switch (action.type) {\n    case SET_SELECTED_ITEM_ACTIVE_TYPE:\n      {\n        return { ...state,\n          [action.id]: action.activeType\n        };\n      }\n\n    case CLEAR_SELECTED_ITEM_ACTIVE_TYPES:\n      {\n        return DEFAULT_STATE_SELECTED_ITEM_ACTIVE_TYPES;\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  id,\n  isLoading,\n  showDescription,\n  itemActiveTypes\n}); // Selectors\n\nexport const sGetSelectedRoot = state => state.selected;\nexport const sGetSelectedId = state => sGetSelectedRoot(state).id;\nexport const sGetSelectedIsLoading = state => sGetSelectedRoot(state).isLoading;\nexport const sGetSelectedShowDescription = state => sGetSelectedRoot(state).showDescription;\nexport const sGetSelectedItemActiveType = (state, id) => sGetSelectedRoot(state).itemActiveTypes[id];","import { getInstance } from 'd2';\nexport const NAMESPACE = 'dashboard';\nexport const hasNamespace = async (d2) => await d2.currentUser.dataStore.has(NAMESPACE);\nexport const getNamespace = async (d2, hasNamespace) => hasNamespace ? await d2.currentUser.dataStore.get(NAMESPACE) : await d2.currentUser.dataStore.create(NAMESPACE);\nexport const apiPostUserDataStoreValue = async (key, value) => {\n  const d2 = await getInstance();\n  const ns = await getNamespace(d2, hasNamespace);\n  ns.set(key, value);\n};\nexport const apiGetUserDataStoreValue = async (key, defaultValue) => {\n  const d2 = await getInstance();\n  const namespace = await getNamespace(d2, await hasNamespace(d2));\n  const hasKey = namespace?.keys?.find(k => k === key);\n\n  if (hasKey) {\n    return await namespace.get(key);\n  } else {\n    await apiPostUserDataStoreValue(key, defaultValue, namespace);\n    console.log('(These errors to /userDataStore can be ignored)');\n    return defaultValue;\n  }\n};","import { apiGetUserDataStoreValue, apiPostUserDataStoreValue } from './userDataStore';\nimport { DEFAULT_STATE_CONTROLBAR_ROWS } from '../reducers/controlBar';\nconst KEY_CONTROLBAR_ROWS = 'controlBarRows';\nexport const apiGetControlBarRows = async () => await apiGetUserDataStoreValue(KEY_CONTROLBAR_ROWS, DEFAULT_STATE_CONTROLBAR_ROWS);\nexport const apiPostControlBarRows = async (value) => await apiPostUserDataStoreValue(KEY_CONTROLBAR_ROWS, value);","import { SET_CONTROLBAR_USER_ROWS } from '../reducers/controlBar';\nimport { apiGetControlBarRows } from '../api/controlBar'; // actions\n\nexport const acSetControlBarUserRows = rows => ({\n  type: SET_CONTROLBAR_USER_ROWS,\n  value: rows\n}); // thunks\n\nexport const tSetControlBarRows = () => async dispatch => {\n  const onSuccess = rows => {\n    dispatch(acSetControlBarUserRows(rows));\n  };\n\n  const onError = error => {\n    console.log('Error (apiGetControlBarRows): ', error);\n    return error;\n  };\n\n  try {\n    const controlBarRows = await apiGetControlBarRows();\n    return onSuccess(controlBarRows);\n  } catch (err) {\n    return onError(err);\n  }\n};","import React, { useState, useEffect, createRef } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport cx from 'classnames';\nimport arraySort from 'd2-utilizr/lib/arraySort';\nimport PropTypes from 'prop-types';\nimport ControlBar, { DRAG_HANDLE_HEIGHT } from './ControlBar';\nimport Chip from './DashboardItemChip';\nimport AddCircleIcon from '../../icons/AddCircle';\nimport Filter from './Filter';\nimport ShowMoreButton from './ShowMoreButton';\nimport { FIRST_ROW_PADDING_HEIGHT, MIN_ROW_COUNT, getRowsHeight, getControlBarHeight, getNumRowsFromHeight } from './controlBarDimensions';\nimport { useWindowDimensions } from '../WindowDimensionsProvider';\nimport { sGetDashboardsFilter } from '../../reducers/dashboardsFilter';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { sGetAllDashboards } from '../../reducers/dashboards';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { acSetControlBarUserRows } from '../../actions/controlBar';\nimport { apiPostControlBarRows } from '../../api/controlBar';\nimport isSmallScreen from '../../modules/isSmallScreen';\nimport classes from './styles/DashboardsBar.module.css';\nexport const MAX_ROW_COUNT = 10;\n\nconst DashboardsBar = ({\n  userRows,\n  onChangeHeight,\n  history,\n  dashboards,\n  selectedId,\n  filterText\n}) => {\n  const [rows, setRows] = useState(userRows);\n  const {\n    width\n  } = useWindowDimensions();\n  const ref = createRef();\n  useEffect(() => {\n    setRows(userRows);\n  }, [userRows]);\n\n  const isMaxHeight = () => rows === MAX_ROW_COUNT;\n\n  const adjustHeight = newHeight => {\n    const newRows = Math.max(MIN_ROW_COUNT, getNumRowsFromHeight(newHeight - 52) // don't rush the transition to a bigger row count\n    );\n\n    if (newRows !== rows) {\n      onChangeHeight(Math.min(newRows, MAX_ROW_COUNT));\n    }\n  };\n\n  const onEndDrag = () => apiPostControlBarRows(rows);\n\n  const scrollToTop = () => {\n    if (isMaxHeight()) {\n      ref.current.scroll(0, 0);\n    }\n  };\n\n  const toggleMaxHeight = () => {\n    const newRows = isMaxHeight() ? userRows : MAX_ROW_COUNT;\n    scrollToTop();\n    setRows(newRows);\n  };\n\n  const cancelMaxHeight = () => {\n    scrollToTop();\n    setRows(userRows);\n  };\n\n  const onSelectDashboard = () => {\n    const id = getFilteredDashboards()[0]?.id;\n\n    if (id) {\n      history.push(id);\n    }\n  };\n\n  const getFilteredDashboards = () => {\n    const filteredDashboards = arraySort(Object.values(dashboards).filter(d => d.displayName.toLowerCase().includes(filterText.toLowerCase())), 'ASC', 'displayName');\n    return [...filteredDashboards.filter(d => d.starred), ...filteredDashboards.filter(d => !d.starred)];\n  };\n\n  const containerClass = cx(classes.container, isMaxHeight() ? classes.expanded : classes.collapsed);\n  const viewableRows = isSmallScreen(width) && !isMaxHeight() ? MIN_ROW_COUNT : rows;\n  const rowHeightProp = {\n    height: getRowsHeight(viewableRows) + FIRST_ROW_PADDING_HEIGHT\n  };\n\n  const getDashboardChips = () => {\n    const chips = getFilteredDashboards().map(dashboard => <Chip key={dashboard.id} label={dashboard.displayName} starred={dashboard.starred} dashboardId={dashboard.id} selected={dashboard.id === selectedId} onClick={cancelMaxHeight} />);\n\n    if (isSmallScreen(width)) {\n      const chipContainerClasses = cx(classes.chipContainer, isMaxHeight() ? classes.expanded : classes.collapsed);\n      return <div className={chipContainerClasses} style={rowHeightProp}>\n                    {chips}\n                </div>;\n    } else {\n      return chips;\n    }\n  };\n\n  return <>\n            <ControlBar height={getControlBarHeight(viewableRows)} onChangeHeight={!isSmallScreen(width) ? adjustHeight : null} onEndDrag={onEndDrag}>\n                <div className={containerClass} ref={ref} style={rowHeightProp}>\n                    <div className={classes.controls}>\n                        <Link className={classes.newLink} to={'/new'} data-test=\"link-new-dashboard\">\n                            <AddCircleIcon />\n                        </Link>\n                        <Filter onKeypressEnter={onSelectDashboard} onToggleMaxHeight={toggleMaxHeight} isMaxHeight={isMaxHeight()} />\n                    </div>\n                    {getDashboardChips()}\n                </div>\n                <ShowMoreButton onClick={toggleMaxHeight} isMaxHeight={isMaxHeight()} disabled={userRows === MAX_ROW_COUNT} />\n            </ControlBar>\n            <div style={{\n      marginTop: getControlBarHeight(isSmallScreen(width) && !isMaxHeight() ? MIN_ROW_COUNT : userRows) + DRAG_HANDLE_HEIGHT\n    }} />\n        </>;\n};\n\nDashboardsBar.propTypes = {\n  dashboards: PropTypes.object,\n  filterText: PropTypes.string,\n  history: PropTypes.object,\n  selectedId: PropTypes.string,\n  userRows: PropTypes.number,\n  onChangeHeight: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  dashboards: sGetAllDashboards(state),\n  filterText: sGetDashboardsFilter(state),\n  selectedId: sGetSelectedId(state),\n  userRows: sGetControlBarUserRows(state)\n});\n\nconst mapDispatchToProps = {\n  onChangeHeight: acSetControlBarUserRows\n};\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(DashboardsBar));","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst NoContentMessage = ({\n  text\n}) => <div style={{\n  padding: '50px 10px',\n  textAlign: 'center',\n  fontSize: '15px',\n  fontWeight: 500,\n  color: colors.grey600\n}}>\n        {text}\n    </div>;\n\nNoContentMessage.propTypes = {\n  text: PropTypes.string\n};\nexport default NoContentMessage;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nexport const ThreeDots = () => <svg height=\"18\" viewBox=\"0 0 18 18\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"m4 7.5c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm10 0c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm-5 0c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5z\" fill=\"#6e7a8a\" />\n    </svg>;\nexport const SpeechBubble = () => <svg height=\"20\" viewBox=\"0 0 20 20\" width=\"20\" xmlns=\"http://www.w3.org/2000/svg\" style={{\n  margin: '3px 2px 0 2px'\n}} // Temporary fix for the misaligned icon, should be removed once the icon is replaced\n>\n        <path d=\"m20 2h-16c-1.1 0-1.99.9-1.99 2l-.01 18 4-4h14c1.1 0 2-.9 2-2v-12c0-1.1-.9-2-2-2zm-2 12h-12v-2h12zm0-3h-12v-2h12zm0-3h-12v-2h12z\" fill=\"#6e7a8a\" fillRule=\"evenodd\" transform=\"translate(-2 -2)\" />\n    </svg>;\nexport const Warning = () => <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" fill={colors.grey600}>\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z\" />\n    </svg>;\nexport const Fullscreen = () => <svg height=\"16\" viewBox=\"0 0 16 16\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"m6.85355339 9.14644661c.17356635.17356635.1928515.44299075.05785545.63785889l-.05785545.06924789-4.14755339 4.14644661h2.794c.24545989 0 .44960837.1768752.49194433.4101244l.00805567.0898756c0 .2454599-.17687516.4496084-.41012437.4919443l-.08987563.0080557h-4c-.24545989 0-.44960837-.1768752-.49194433-.4101244l-.00805567-.0898756v-4c0-.2761424.22385763-.5.5-.5.24545989 0 .44960837.1768752.49194433.4101244l.00805567.0898756v2.792l4.14644661-4.14555339c.19526215-.19526215.51184463-.19526215.70710678 0zm6.14644661-2.14644661v6h-6v-1h5v-5zm-4-4v1h-5v5h-1v-6zm5.5-2c.2454599 0 .4496084.17687516.4919443.41012437l.0080557.08987563v4c0 .27614237-.2238576.5-.5.5-.2454599 0-.4496084-.17687516-.4919443-.41012437l-.0080557-.08987563v-2.794l-4.14644661 4.14755339c-.19526215.19526215-.51184463.19526215-.70710678 0-.17356635-.17356635-.1928515-.44299075-.05785545-.63785889l.05785545-.06924789 4.14655339-4.14744661-2.793.001c-.2454599 0-.4496084-.17687516-.4919443-.41012437l-.0080557-.08987563c0-.24545989.1768752-.44960837.4101244-.49194433l.0898756-.00805567z\" fill=\"inherit\" />\n    </svg>;\nexport const ExitFullscreen = () => <svg height=\"16\" viewBox=\"0 0 16 16\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"m6.5 9c.24545989 0 .44960837.17687516.49194433.41012437l.00805567.08987563v4c0 .2761424-.22385763.5-.5.5-.24545989 0-.44960837-.1768752-.49194433-.4101244l-.00805567-.0898756v-2.794l-3.64644661 3.6475534c-.19526215.1952621-.51184463.1952621-.70710678 0-.17356635-.1735664-.1928515-.4429908-.05785545-.6378589l.05785545-.0692479 3.64555339-3.6464466h-2.792c-.24545989 0-.44960837-.17687516-.49194433-.41012437l-.00805567-.08987563c0-.24545989.17687516-.44960837.41012437-.49194433l.08987563-.00805567zm7.5-.5v5.5h-5.5v-1h4.5v-4.5zm-6.5-6.5v1h-4.5v4.5h-1v-5.5zm6.8535534-.35355339c.1735663.17356635.1928515.44299075.0578554.63785889l-.0578554.06924789-3.6475534 3.64644661h2.794c.2454599 0 .4496084.17687516.4919443.41012437l.0080557.08987563c0 .24545989-.1768752.44960837-.4101244.49194433l-.0898756.00805567h-4c-.24545989 0-.44960837-.17687516-.49194433-.41012437l-.00805567-.08987563v-4c0-.27614237.22385763-.5.5-.5.24545989 0 .44960837.17687516.49194433.41012437l.00805567.08987563v2.792l3.6464466-3.64555339c.1952622-.19526215.5118446-.19526215.7071068 0z\" fill=\"inherit\" />\n    </svg>;","export const RECEIVED_USER = 'RECEIVED_USER';\nexport const DEFAULT_STATE_USER = {\n  id: '',\n  username: '',\n  uiLocale: '',\n  isSuperuser: false\n};\nexport default ((state = DEFAULT_STATE_USER, action) => {\n  switch (action.type) {\n    case RECEIVED_USER:\n      {\n        return fromD2ToUserObj(action.value);\n      }\n\n    default:\n      return state;\n  }\n});\n\nfunction fromD2ToUserObj(d2Object) {\n  return {\n    id: d2Object.id,\n    username: d2Object.username,\n    uiLocale: d2Object.settings.keyUiLocale,\n    isSuperuser: d2Object.authorities.has('ALL')\n  };\n} // selectors\n\n\nexport const sGetUserId = state => state.user.id;\nexport const sGetUserUsername = state => state.user.username;\nexport const sGetIsSuperuser = state => state.user.isSuperuser;\nexport const sGetUiLocale = state => state.user.uiLocale;","import { getDimensionById, DIMENSION_ID_PERIOD, DIMENSION_ID_ORGUNIT } from '@dhis2/analytics';\nexport const SET_DIMENSIONS = 'SET_DIMENSIONS';\nexport const DEFAULT_DIMENSIONS = [getDimensionById(DIMENSION_ID_PERIOD), getDimensionById(DIMENSION_ID_ORGUNIT)];\nexport default ((state = DEFAULT_DIMENSIONS, action) => {\n  switch (action.type) {\n    case SET_DIMENSIONS:\n      {\n        return [...DEFAULT_DIMENSIONS, ...action.value];\n      }\n\n    default:\n      return state;\n  }\n});\nexport const sGetDimensions = state => state.dimensions;","import { sGetDimensions } from './dimensions';\nimport { createSelector } from 'reselect';\nexport const CLEAR_ITEM_FILTERS = 'CLEAR_ITEM_FILTERS';\nexport const SET_ITEM_FILTERS = 'SET_ITEM_FILTERS';\nexport const ADD_ITEM_FILTER = 'ADD_ITEM_FILTER';\nexport const REMOVE_ITEM_FILTER = 'REMOVE_ITEM_FILTER';\nexport const DEFAULT_STATE_ITEM_FILTERS = {};\nexport default ((state = DEFAULT_STATE_ITEM_FILTERS, action) => {\n  switch (action.type) {\n    case ADD_ITEM_FILTER:\n      {\n        return { ...state,\n          [action.filter.id]: action.filter.value\n        };\n      }\n\n    case REMOVE_ITEM_FILTER:\n      {\n        const newState = { ...state\n        };\n        delete newState[action.id];\n        return newState;\n      }\n\n    case SET_ITEM_FILTERS:\n      {\n        return action.filters;\n      }\n\n    case CLEAR_ITEM_FILTERS:\n      {\n        return DEFAULT_STATE_ITEM_FILTERS;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetItemFiltersRoot = state => state.itemFilters; // simplify the filters structure to:\n// [{ id: 'pe', name: 'Period', values: [{ id: 2019: name: '2019' }, {id: 'LAST_MONTH', name: 'Last month' }]}, ...]\n\nexport const sGetNamedItemFilters = createSelector([sGetItemFiltersRoot, sGetDimensions], (filters, dimensions) => Object.keys(filters).reduce((arr, id) => {\n  arr.push({\n    id: id,\n    name: dimensions.find(dimension => dimension.id === id).name,\n    values: filters[id].map(value => ({\n      id: value.id,\n      name: value.displayName || value.name\n    }))\n  });\n  return arr;\n}, []));","import { ADD_ITEM_FILTER, REMOVE_ITEM_FILTER, SET_ITEM_FILTERS, CLEAR_ITEM_FILTERS } from '../reducers/itemFilters';\nexport const FILTER_ORG_UNIT = 'ou'; // actions\n\nexport const acAddItemFilter = filter => ({\n  type: ADD_ITEM_FILTER,\n  filter\n});\nexport const acRemoveItemFilter = id => ({\n  type: REMOVE_ITEM_FILTER,\n  id\n});\nexport const acClearItemFilters = () => ({\n  type: CLEAR_ITEM_FILTERS\n});\nexport const acSetItemFilters = filters => ({\n  type: SET_ITEM_FILTERS,\n  filters\n});","import update from 'immutability-helper';\nimport { arrayToIdMap } from '../modules/util';\nexport const RECEIVED_MESSAGES = 'RECEIVED_MESSAGES';\nexport default ((state = {}, action) => {\n  switch (action.type) {\n    case RECEIVED_MESSAGES:\n      {\n        const conversations = arrayToIdMap(action.value);\n        const newState = update(state, {\n          $merge: conversations\n        });\n        return newState;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetMessagesRoot = state => state.messages;","export const messageConversationsQuery = {\n  resource: 'messageConversations',\n  params: {\n    fields: 'id,messageCount,lastUpdated,messageType,displayName,read,messages[id,read,sender[id,displayName],text,lastUpdated]',\n    order: 'read:asc',\n    pageSize: 200\n  }\n};\nexport const getMessages = async dataEngine => {\n  try {\n    const {\n      messageConversations\n    } = await dataEngine.query({\n      messageConversations: messageConversationsQuery\n    });\n    return messageConversations.messageConversations;\n  } catch (error) {\n    console.log('Error:', error);\n  }\n};","import { RECEIVED_MESSAGES } from '../../../reducers/messages';\nimport { getMessages } from '../../../api/messages';\n\nconst onError = (action, error) => {\n  console.log(`Error in action ${action}: ${error}`);\n  return error;\n};\n\nexport const receivedMessages = value => ({\n  type: RECEIVED_MESSAGES,\n  value\n});\nexport const tGetMessages = dataEngine => async dispatch => {\n  try {\n    const messageConversations = await getMessages(dataEngine);\n    return dispatch(receivedMessages(messageConversations));\n  } catch (err) {\n    return onError('Get Messages', err);\n  }\n};","export const SET_ALERT_MESSAGE = 'SET_ALERT_MESSAGE';\nexport const CLEAR_ALERT_MESSAGE = 'CLEAR_ALERT_MESSAGE';\nexport const DEFAULT_STATE_ALERT = null;\nexport default ((state = DEFAULT_STATE_ALERT, action) => {\n  switch (action.type) {\n    case SET_ALERT_MESSAGE:\n      {\n        return action.value;\n      }\n\n    case CLEAR_ALERT_MESSAGE:\n      {\n        return DEFAULT_STATE_ALERT;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetAlertMessage = state => state.alert;","import { SET_ALERT_MESSAGE, CLEAR_ALERT_MESSAGE } from '../reducers/alert';\nexport const acSetAlertMessage = value => ({\n  type: SET_ALERT_MESSAGE,\n  value\n});\nexport const acClearAlertMessage = () => ({\n  type: CLEAR_ALERT_MESSAGE\n});","import { orObject } from '../modules/util';\nimport objectClean from 'd2-utilizr/lib/objectClean';\n/** @module reducers/visualizations */\n\nexport const ADD_VISUALIZATION = 'ADD_VISUALIZATION';\nexport const SET_ACTIVE_VISUALIZATION_TYPE = 'SET_ACTIVE_VISUALIZATION_TYPE';\nexport const CLEAR_VISUALIZATIONS = 'CLEAR_VISUALIZATIONS';\nexport const DEFAULT_STATE_VISUALIZATIONS = {};\n\nconst isEmpty = p => p === undefined || p === null;\n\nexport default ((state = DEFAULT_STATE_VISUALIZATIONS, action) => {\n  switch (action.type) {\n    case ADD_VISUALIZATION:\n      {\n        return { ...state,\n          [action.value.id]: objectClean({ ...orObject(state[action.value.id]),\n            ...action.value\n          }, isEmpty)\n        };\n      }\n\n    case CLEAR_VISUALIZATIONS:\n      {\n        return DEFAULT_STATE_VISUALIZATIONS;\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetVisualizationsRoot = state => state.visualizations; // selectors level 1\n\nexport const sGetVisualization = (state, id) => {\n  return sGetVisualizationsRoot(state)[id];\n};","import { ADD_VISUALIZATION, CLEAR_VISUALIZATIONS } from '../reducers/visualizations';\nexport const acAddVisualization = value => ({\n  type: ADD_VISUALIZATION,\n  value\n});\nexport const acClearVisualizations = () => ({\n  type: CLEAR_VISUALIZATIONS\n});","import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { getEndPointName, MAP } from '../modules/itemTypes';\nimport { getVisualizationId } from '../modules/item'; // Id, name\n\nexport const getIdNameFields = ({\n  rename\n} = {}) => ['id', `${rename ? 'displayName~rename(name)' : 'name,displayName'}`]; // Item\n\nexport const getItemFields = () => ['dimensionItem~rename(id)', 'displayName~rename(name)', 'dimensionItemType']; // Dimension\n\nexport const getDimensionFields = ({\n  withItems\n}) => arrayClean(['dimension', 'legendSet[id]', 'filter', 'programStage', withItems ? `items[${getItemFields().join(',')}]` : ``]); // Axis\n\nexport const getAxesFields = ({\n  withItems\n}) => [`columns[${getDimensionFields({\n  withItems\n}).join(',')}]`, `rows[${getDimensionFields({\n  withItems\n}).join(',')}]`, `filters[${getDimensionFields({\n  withItems\n}).join(',')}]`]; // Favorite\n\nexport const getFavoriteFields = ({\n  withDimensions,\n  withOptions\n}) => {\n  return arrayClean([`${getIdNameFields({\n    rename: true\n  }).join(',')}`, 'displayDescription~rename(description)', withDimensions ? `${getAxesFields({\n    withItems: true\n  }).join(',')}` : ``, withOptions ? ['*', '!attributeDimensions', '!attributeValues', '!category', '!categoryDimensions', '!categoryOptionGroupSetDimensions', '!columnDimensions', '!dataDimensionItems', '!dataElementDimensions', '!dataElementGroupSetDimensions', '!filterDimensions', '!itemOrganisationUnitGroups', '!lastUpdatedBy', '!organisationUnitGroupSetDimensions', '!organisationUnitLevels', '!organisationUnits', '!programIndicatorDimensions', '!relativePeriods', '!reportParams', '!rowDimensions', '!translations', '!userOrganisationUnit', '!userOrganisationUnitChildren', '!userOrganisationUnitGrandChildren'].join(',') : '']);\n};\nexport const getFavoritesFields = ({\n  withDimensions\n}) => [`reportTable[${getFavoriteFields({\n  withDimensions\n}).join(',')}]`, `chart[${['type', ...getFavoriteFields({\n  withDimensions\n})].join(',')}]`, `map[${getFavoriteFields({\n  withDimensions\n}).join(',')}]`, `eventReport[${getFavoriteFields({\n  withDimensions\n}).join(',')}]`, `eventChart[${getFavoriteFields({\n  withDimensions\n}).join(',')}]`]; // List item\n\nexport const getListItemFields = () => [`reports[${['type', ...getIdNameFields({\n  rename: true\n})].join(',')}]`, `resources[${getIdNameFields({\n  rename: true\n}).join(',')}]`, `users[${getIdNameFields({\n  rename: true\n}).join(',')}]`]; // Map\n\nexport const getMapFields = () => [`${getIdNameFields({\n  rename: true\n}).join(',')}`, 'user,longitude,latitude,zoom,basemap', `mapViews[${getFavoriteFields({\n  withDimensions: true,\n  withOptions: true\n})}]`]; // Api\n\nexport const apiFetchVisualization = async item => {\n  const id = getVisualizationId(item);\n  const fields = item.type === MAP ? getMapFields() : getFavoriteFields({\n    withDimensions: true,\n    withOptions: true\n  });\n  const d2 = await getInstance();\n  return await d2.Api.getApi().get(`${getEndPointName(item.type)}/${id}`, {\n    fields\n  });\n};","import arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { getListItemFields, getFavoritesFields, getIdNameFields } from './metadata'; // Helper functions\n\nexport const onError = error => console.log('Error: ', error); // Dashboard item\n\nexport const getDashboardItemsFields = ({\n  withFavorite\n} = {}) => arrayClean(['id', 'type', 'shape', 'x', 'y', 'width~rename(w)', 'height~rename(h)', 'messages', 'text', 'appKey', `${getListItemFields().join(',')}`, withFavorite ? `${getFavoritesFields({\n  withDimensions: withFavorite.withDimensions\n}).join(',')}` : ``]); // Dashboard\n\nexport const getDashboardFields = ({\n  withItems,\n  withFavorite\n} = {}) => arrayClean([`${getIdNameFields().join(',')}`, 'description', 'displayDescription', 'favorite', `user[${getIdNameFields({\n  rename: true\n}).join(',')}]`, 'created', 'lastUpdated', 'access', 'href', // needed for d2-ui-translations-dialog, since we don't pass a d2 Model anymore\nwithItems ? `dashboardItems[${getDashboardItemsFields({\n  withFavorite\n}).join(',')}]` : ``]);","import arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { onError, getDashboardFields } from './index';\nexport const dashboardsQuery = {\n  resource: 'dashboards',\n  params: {\n    fields: [getDashboardFields(), 'dashboardItems[id]'].join(','),\n    paging: false\n  }\n};\nexport const dashboardQuery = {\n  resource: 'dashboards',\n  id: ({\n    id\n  }) => id,\n  params: {\n    fields: arrayClean(getDashboardFields({\n      withItems: true,\n      withFavorite: {\n        withDimensions: false\n      }\n    })).join(',')\n  }\n};\nexport const starDashboardMutation = {\n  type: 'create',\n  resource: 'dashboards',\n  // TODO create mutation does not accept the id function\n  // we must use a workaround until dataEngine supports dynamic resource/path\n  id: ({\n    id\n  }) => `${id}/favorite`\n};\nexport const unstarDashboardMutation = {\n  type: 'delete',\n  resource: 'dashboards',\n  id: ({\n    id\n  }) => `${id}/favorite`\n};\nexport const deleteDashboardMutation = {\n  type: 'delete',\n  resource: 'dashboards',\n  id: ({\n    id\n  }) => id\n}; // Get \"all\" dashboards on startup\n\nexport const apiFetchDashboards = async dataEngine => {\n  try {\n    const dashboardsData = await dataEngine.query({\n      dashboards: dashboardsQuery\n    });\n    return dashboardsData.dashboards.dashboards;\n  } catch (error) {\n    onError(error);\n  }\n}; // Get more info about selected dashboard\n\nexport const apiFetchDashboard = async (dataEngine, id) => {\n  try {\n    const dashboardData = await dataEngine.query({\n      dashboard: dashboardQuery\n    }, {\n      variables: {\n        id\n      }\n    });\n    return dashboardData.dashboard;\n  } catch (error) {\n    onError(error);\n  }\n}; // Star dashboard\n\nexport const apiStarDashboard = async (dataEngine, id, isStarred) => {\n  try {\n    if (isStarred) {\n      await dataEngine.mutate(starDashboardMutation, {\n        variables: {\n          id\n        }\n      });\n    } else {\n      await dataEngine.mutate(unstarDashboardMutation, {\n        variables: {\n          id\n        }\n      });\n    }\n  } catch (error) {\n    onError(error);\n  }\n};\nexport const apiDeleteDashboard = async (dataEngine, id) => {\n  try {\n    await dataEngine.mutate(deleteDashboardMutation, {\n      variables: {\n        id\n      }\n    });\n  } catch (error) {\n    onError(error);\n  }\n};","import { apiGetUserDataStoreValue, apiPostUserDataStoreValue } from './userDataStore';\nimport { DEFAULT_STATE_SELECTED_SHOWDESCRIPTION } from '../reducers/selected';\nconst KEY_SHOW_DESCRIPTION = 'showDescription';\nexport const apiGetShowDescription = async () => await apiGetUserDataStoreValue(KEY_SHOW_DESCRIPTION, DEFAULT_STATE_SELECTED_SHOWDESCRIPTION);\nexport const apiPostShowDescription = async (value) => await apiPostUserDataStoreValue(KEY_SHOW_DESCRIPTION, value);","import i18n from '@dhis2/d2-i18n';\nimport { getCustomDashboards, sGetDashboardById } from '../reducers/dashboards';\nimport { SET_SELECTED_ID, SET_SELECTED_ISLOADING, SET_SELECTED_SHOWDESCRIPTION, SET_SELECTED_ITEM_ACTIVE_TYPE, CLEAR_SELECTED_ITEM_ACTIVE_TYPES, sGetSelectedIsLoading, sGetSelectedId } from '../reducers/selected';\nimport { sGetUserUsername } from '../reducers/user';\nimport { acSetDashboardItems, acAppendDashboards } from './dashboards';\nimport { acClearItemFilters } from './itemFilters';\nimport { tGetMessages } from '../components/Item/MessagesItem/actions';\nimport { acSetAlertMessage, acClearAlertMessage } from './alert';\nimport { acAddVisualization, acClearVisualizations } from './visualizations';\nimport { apiFetchDashboard } from '../api/dashboards';\nimport { storePreferredDashboardId } from '../api/localStorage';\nimport { apiGetShowDescription, apiPostShowDescription } from '../api/description';\nimport { withShape } from '../components/ItemGrid/gridUtil';\nimport { getVisualizationFromItem } from '../modules/item';\nimport { REPORT_TABLE, CHART, MAP, EVENT_REPORT, EVENT_CHART, MESSAGES } from '../modules/itemTypes'; // actions\n\nexport const acSetSelectedId = value => ({\n  type: SET_SELECTED_ID,\n  value\n});\nexport const acSetSelectedIsLoading = value => ({\n  type: SET_SELECTED_ISLOADING,\n  value\n});\nexport const acSetSelectedShowDescription = value => ({\n  type: SET_SELECTED_SHOWDESCRIPTION,\n  value\n});\nexport const acSetSelectedItemActiveType = (id, activeType) => {\n  const action = {\n    type: SET_SELECTED_ITEM_ACTIVE_TYPE,\n    id,\n    activeType\n  };\n  return action;\n};\nexport const acClearSelectedItemActiveTypes = () => ({\n  type: CLEAR_SELECTED_ITEM_ACTIVE_TYPES\n}); // thunks\n\nexport const tSetSelectedDashboardById = id => async (dispatch, getState, dataEngine) => {\n  dispatch(acSetSelectedIsLoading(true));\n  const alertTimeout = setTimeout(() => {\n    const name = sGetDashboardById(getState(), id)?.displayName;\n\n    if (sGetSelectedIsLoading(getState()) && name) {\n      dispatch(acSetAlertMessage(i18n.t('Loading dashboard – {{name}}', {\n        name\n      })));\n    }\n  }, 500);\n\n  const onSuccess = selected => {\n    dispatch(acAppendDashboards(selected));\n    const customDashboard = getCustomDashboards(selected)[0];\n    dispatch(acSetDashboardItems(withShape(customDashboard.dashboardItems)));\n    storePreferredDashboardId(sGetUserUsername(getState()), id);\n\n    if (id !== sGetSelectedId(getState())) {\n      dispatch(acClearItemFilters());\n      dispatch(acClearVisualizations());\n      dispatch(acClearSelectedItemActiveTypes());\n    }\n\n    customDashboard.dashboardItems.forEach(item => {\n      switch (item.type) {\n        case REPORT_TABLE:\n        case CHART:\n        case MAP:\n        case EVENT_REPORT:\n        case EVENT_CHART:\n          dispatch(acAddVisualization(getVisualizationFromItem(item)));\n          break;\n\n        case MESSAGES:\n          dispatch(tGetMessages(dataEngine));\n          break;\n\n        default:\n          break;\n      }\n    });\n    dispatch(acSetSelectedId(id));\n    dispatch(acSetSelectedIsLoading(false));\n    clearTimeout(alertTimeout);\n    dispatch(acClearAlertMessage());\n    return selected;\n  };\n\n  const onError = error => {\n    console.log('Error: ', error);\n    return error;\n  };\n\n  try {\n    const dashboard = await apiFetchDashboard(dataEngine, id);\n    return onSuccess(dashboard);\n  } catch (err) {\n    return onError(err);\n  }\n};\nexport const tSetShowDescription = () => async dispatch => {\n  const onSuccess = value => {\n    dispatch(acSetSelectedShowDescription(value));\n  };\n\n  const onError = error => {\n    console.log('Error (apiGetShowDescription): ', error);\n    return error;\n  };\n\n  try {\n    const showDescription = await apiGetShowDescription();\n    return onSuccess(showDescription);\n  } catch (err) {\n    return onError(err);\n  }\n};\nexport const tUpdateShowDescription = value => async dispatch => {\n  const onSuccess = () => {\n    dispatch(acSetSelectedShowDescription(value));\n  };\n\n  const onError = error => {\n    console.log('Error (apiGetShowDescription): ', error);\n    return error;\n  };\n\n  try {\n    await apiPostShowDescription(value);\n    return onSuccess();\n  } catch (err) {\n    return onError(err);\n  }\n};","export const getPreferredDashboardId = username => localStorage.getItem(`dhis2.dashboard.current.${username}`) || undefined;\nexport const storePreferredDashboardId = (username, dashboardId) => {\n  localStorage.setItem(`dhis2.dashboard.current.${username}`, dashboardId);\n};","import { SET_DASHBOARDS, ADD_DASHBOARDS, SET_DASHBOARD_STARRED, SET_DASHBOARD_DISPLAY_NAME, SET_DASHBOARD_ITEMS } from '../reducers/dashboards';\nimport { getCustomDashboards, sGetDashboardById, sGetDashboardsSortedByStarred } from '../reducers/dashboards';\nimport { NON_EXISTING_DASHBOARD_ID } from '../reducers/selected';\nimport { sGetUserUsername } from '../reducers/user';\nimport { tSetSelectedDashboardById, acSetSelectedId } from './selected';\nimport { apiFetchDashboards, apiStarDashboard, apiDeleteDashboard } from '../api/dashboards';\nimport { getPreferredDashboardId } from '../api/localStorage';\nimport { arrayToIdMap } from '../modules/util'; // actions\n\nexport const acSetDashboards = dashboards => ({\n  type: SET_DASHBOARDS,\n  value: arrayToIdMap(getCustomDashboards(dashboards))\n});\nexport const acAppendDashboards = dashboards => ({\n  type: ADD_DASHBOARDS,\n  value: arrayToIdMap(getCustomDashboards(dashboards))\n});\nexport const acSetDashboardStarred = (dashboardId, isStarred) => ({\n  type: SET_DASHBOARD_STARRED,\n  dashboardId: dashboardId,\n  value: isStarred\n});\nexport const acSetDashboardDisplayName = (dashboardId, value) => ({\n  type: SET_DASHBOARD_DISPLAY_NAME,\n  dashboardId,\n  value\n});\nexport const acSetDashboardItems = value => ({\n  type: SET_DASHBOARD_ITEMS,\n  value\n}); // thunks\n\nexport const tFetchDashboards = () => async (dispatch, getState, dataEngine) => {\n  const dashboards = await apiFetchDashboards(dataEngine);\n  dispatch(acSetDashboards(dashboards));\n};\nexport const tSelectDashboard = id => async (dispatch, getState) => {\n  const onError = error => {\n    console.log('Error (apiFetchDashboards): ', error);\n    return error;\n  };\n\n  try {\n    const state = getState();\n    let dashboardToSelect = null;\n\n    if (id) {\n      dashboardToSelect = sGetDashboardById(state, id) || null;\n    } else {\n      const preferredId = getPreferredDashboardId(sGetUserUsername(state));\n      const dash = sGetDashboardById(state, preferredId);\n      dashboardToSelect = preferredId && dash ? dash : sGetDashboardsSortedByStarred(state)[0];\n    }\n\n    if (dashboardToSelect) {\n      dispatch(tSetSelectedDashboardById(dashboardToSelect.id));\n    } else {\n      dispatch(acSetSelectedId(NON_EXISTING_DASHBOARD_ID));\n    }\n  } catch (err) {\n    return onError(err);\n  }\n};\nexport const tStarDashboard = (id, isStarred) => async (dispatch, getState, dataEngine) => {\n  const onSuccess = id => {\n    dispatch(acSetDashboardStarred(id, isStarred));\n    return id;\n  };\n\n  const onError = error => {\n    console.log('Error (apiStarDashboard): ', error);\n    return error;\n  };\n\n  try {\n    await apiStarDashboard(dataEngine, id, isStarred);\n    return onSuccess(id);\n  } catch (err) {\n    return onError(err);\n  }\n};\nexport const tDeleteDashboard = id => async (dispatch, getState, dataEngine) => {\n  try {\n    await apiDeleteDashboard(dataEngine, id);\n    await dispatch(tFetchDashboards());\n    return Promise.resolve();\n  } catch (err) {\n    console.log('Error (deleteDashboard): ', err);\n    return err;\n  }\n};","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { Button, Modal, ModalTitle, ModalContent, ModalActions, ButtonStrip } from '@dhis2/ui';\nimport { PeriodDimension, DynamicDimension, OrgUnitDimension, DIMENSION_ID_PERIOD, DIMENSION_ID_ORGUNIT } from '@dhis2/analytics';\nimport { acAddItemFilter, acRemoveItemFilter } from '../../actions/itemFilters';\nimport { sGetItemFiltersRoot } from '../../reducers/itemFilters';\n\nconst FilterDialog = ({\n  displayNameProperty,\n  dimension,\n  initiallySelectedItems,\n  addItemFilter,\n  removeItemFilter,\n  onClose\n}, context) => {\n  const [filters, setFilters] = useState(initiallySelectedItems);\n\n  const onSelectItems = ({\n    dimensionId,\n    items\n  }) => {\n    setFilters({\n      [dimensionId]: items\n    });\n  };\n\n  const onDeselectItems = ({\n    dimensionId,\n    itemIdsToRemove\n  }) => {\n    const oldList = filters[dimensionId] || [];\n    const newList = oldList.filter(item => !itemIdsToRemove.includes(item.id));\n    setFilters({ ...filters,\n      [dimensionId]: newList\n    });\n  };\n\n  const onReorderItems = ({\n    dimensionId,\n    itemIds\n  }) => {\n    const oldList = filters[dimensionId] || [];\n    const reorderedList = itemIds.map(id => oldList.find(item => item.id === id));\n    setFilters({ ...filters,\n      [dimensionId]: reorderedList\n    });\n  };\n\n  const saveFilter = () => {\n    const id = dimension.id;\n    const filterItems = filters[id];\n\n    if (filterItems && filterItems.length) {\n      addItemFilter({\n        id,\n        value: [...filterItems]\n      });\n    } else {\n      removeItemFilter(id);\n    }\n\n    onClose(id);\n  };\n\n  const renderDialogContent = () => {\n    const commonProps = {\n      d2: context.d2,\n      onSelect: onSelectItems,\n      onDeselect: onDeselectItems,\n      onReorder: onReorderItems\n    };\n    const selectedItems = filters[dimension.id] || [];\n\n    switch (dimension.id) {\n      case DIMENSION_ID_PERIOD:\n        {\n          return <PeriodDimension selectedPeriods={selectedItems} onSelect={commonProps.onSelect} />;\n        }\n\n      case DIMENSION_ID_ORGUNIT:\n        return <OrgUnitDimension displayNameProperty={displayNameProperty} ouItems={selectedItems} {...commonProps} />;\n\n      default:\n        return <DynamicDimension selectedItems={selectedItems} dimensionId={dimension.id} onSelect={commonProps.onSelect} />;\n    }\n  };\n\n  return <>\n            {dimension.id && <Modal dataTest={`${dimension.id}-dimension-modal`} onClose={onClose} position=\"top\" large>\n                    <ModalTitle>{dimension.name}</ModalTitle>\n                    <ModalContent>{renderDialogContent()}</ModalContent>\n                    <ModalActions>\n                        <ButtonStrip>\n                            <Button secondary onClick={onClose}>\n                                {i18n.t('Cancel')}\n                            </Button>\n                            <Button primary onClick={saveFilter}>\n                                {i18n.t('Confirm')}\n                            </Button>\n                        </ButtonStrip>\n                    </ModalActions>\n                </Modal>}\n        </>;\n};\n\nFilterDialog.propTypes = {\n  addItemFilter: PropTypes.func,\n  dimension: PropTypes.object,\n  displayNameProperty: PropTypes.string,\n  initiallySelectedItems: PropTypes.object,\n  removeItemFilter: PropTypes.func,\n  onClose: PropTypes.func\n};\nFilterDialog.contextTypes = {\n  d2: PropTypes.object\n};\n\nconst mapStateToProps = state => ({\n  initiallySelectedItems: sGetItemFiltersRoot(state)\n});\n\nexport default connect(mapStateToProps, {\n  addItemFilter: acAddItemFilter,\n  removeItemFilter: acRemoveItemFilter\n})(FilterDialog);","export const SET_SETTINGS = 'SET_SETTINGS';\nexport const ADD_SETTINGS = 'ADD_SETTINGS';\nexport const DEFAULT_SETTINGS = {\n  keyDateFormat: 'yyyy-MM-dd',\n  keyAnalysisRelativePeriod: 'LAST_12_MONTHS',\n  keyAnalysisDigitGroupSeparator: 'SPACE',\n  displayNameProperty: 'displayName',\n  uiLocale: 'en',\n  rootOrganisationUnit: {},\n  keyGatherAnalyticalObjectStatisticsInDashboardViews: false\n};\nexport default ((state = DEFAULT_SETTINGS, action) => {\n  switch (action.type) {\n    case SET_SETTINGS:\n      {\n        return Object.assign({}, action.value);\n      }\n\n    case ADD_SETTINGS:\n      {\n        return { ...state,\n          ...action.value\n        };\n      }\n\n    default:\n      return state;\n  }\n}); // Selectors\n\nexport const sGetSettings = state => state.settings;\nexport const sGetSettingsDisplayNameProperty = state => sGetSettings(state).displayNameProperty;\nexport const sGetRootOrgUnit = state => sGetSettings(state).rootOrganisationUnit;\nexport const sGetRelativePeriod = state => sGetSettings(state).keyAnalysisRelativePeriod;\nexport const sGetUiLocale = state => sGetSettings(state).uiLocale;\nexport const sGatherAnalyticalObjectStatisticsInDashboardViews = state => sGetSettings(state).keyGatherAnalyticalObjectStatisticsInDashboardViews;","export const SET_ACTIVE_MODAL_DIMENSION = 'SET_ACTIVE_MODAL_DIMENSION';\nexport const CLEAR_ACTIVE_MODAL_DIMENSION = 'CLEAR_ACTIVE_MODAL_DIMENSION';\nexport const DEFAULT_STATE_ACTIVE_MODAL_DIMENSION = {};\nexport default ((state = DEFAULT_STATE_ACTIVE_MODAL_DIMENSION, action) => {\n  switch (action.type) {\n    case SET_ACTIVE_MODAL_DIMENSION:\n      {\n        return action.value;\n      }\n\n    case CLEAR_ACTIVE_MODAL_DIMENSION:\n      {\n        return DEFAULT_STATE_ACTIVE_MODAL_DIMENSION;\n      }\n\n    default:\n      return state;\n  }\n});\nexport const sGetActiveModalDimension = state => state.activeModalDimension;","import { SET_ACTIVE_MODAL_DIMENSION, CLEAR_ACTIVE_MODAL_DIMENSION } from '../reducers/activeModalDimension';\nexport const acSetActiveModalDimension = value => ({\n  type: SET_ACTIVE_MODAL_DIMENSION,\n  value\n});\nexport const acClearActiveModalDimension = () => ({\n  type: CLEAR_ACTIVE_MODAL_DIMENSION\n});","import React, { useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport isEmpty from 'lodash/isEmpty';\nimport i18n from '@dhis2/d2-i18n';\nimport { DimensionsPanel } from '@dhis2/analytics';\nimport { Button, Popover } from '@dhis2/ui';\nimport FilterDialog from './FilterDialog';\nimport { sGetSettingsDisplayNameProperty } from '../../reducers/settings';\nimport { sGetActiveModalDimension } from '../../reducers/activeModalDimension';\nimport { sGetDimensions } from '../../reducers/dimensions';\nimport { sGetItemFiltersRoot } from '../../reducers/itemFilters';\nimport { acClearActiveModalDimension, acSetActiveModalDimension } from '../../actions/activeModalDimension';\nimport classes from './styles/FilterSelector.module.css';\n\nconst FilterSelector = props => {\n  const [showPopover, setShowPopover] = useState(false);\n  const ref = useRef(null);\n\n  const onCloseDialog = () => {\n    setShowPopover(false);\n    props.clearActiveModalDimension();\n  };\n\n  const selectDimension = id => {\n    props.setActiveModalDimension(props.dimensions.find(dimension => dimension.id === id));\n  };\n\n  return <>\n            <span className={classes.buttonContainer} ref={ref}>\n                <Button onClick={() => setShowPopover(true)}>\n                    {i18n.t('Add filter')}\n                    <ArrowDropDownIcon />\n                </Button>\n            </span>\n            {showPopover && <Popover onClickOutside={onCloseDialog} reference={ref} arrow={true} placement=\"bottom-start\" dataTest=\"dashboard-filter-popover\">\n                    <DimensionsPanel style={{\n        width: '320px'\n      }} dimensions={props.dimensions} onDimensionClick={selectDimension} selectedIds={Object.keys(props.initiallySelectedItems)} />\n                </Popover>}\n            {!isEmpty(props.dimension) ? <FilterDialog displayNameProperty={props.displayNameProperty} dimension={props.dimension} onClose={onCloseDialog} /> : null}\n        </>;\n};\n\nconst mapStateToProps = state => ({\n  displayNameProperty: sGetSettingsDisplayNameProperty(state),\n  dimension: sGetActiveModalDimension(state),\n  dimensions: sGetDimensions(state),\n  initiallySelectedItems: sGetItemFiltersRoot(state)\n});\n\nFilterSelector.propTypes = {\n  clearActiveModalDimension: PropTypes.func,\n  dimension: PropTypes.object,\n  dimensions: PropTypes.array,\n  displayNameProperty: PropTypes.string,\n  initiallySelectedItems: PropTypes.object,\n  setActiveModalDimension: PropTypes.func\n};\nexport default connect(mapStateToProps, {\n  clearActiveModalDimension: acClearActiveModalDimension,\n  setActiveModalDimension: acSetActiveModalDimension\n})(FilterSelector);","import React, { useState, createRef } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { Link, Redirect } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport SharingDialog from '@dhis2/d2-ui-sharing-dialog';\nimport Star from '@material-ui/icons/Star';\nimport StarBorder from '@material-ui/icons/StarBorder';\nimport { Button, FlyoutMenu, Popover, MenuItem, colors } from '@dhis2/ui';\nimport { useWindowDimensions } from '../WindowDimensionsProvider';\nimport { ThreeDots } from '../Item/VisualizationItem/assets/icons';\nimport { orObject } from '../../modules/util';\nimport { tStarDashboard } from '../../actions/dashboards';\nimport { tUpdateShowDescription } from '../../actions/selected';\nimport FilterSelector from '../ItemFilter/FilterSelector';\nimport { sGetSelectedId, sGetSelectedShowDescription } from '../../reducers/selected';\nimport { sGetDashboardById, sGetDashboardItems, EMPTY_DASHBOARD } from '../../reducers/dashboards';\nimport isSmallScreen from '../../modules/isSmallScreen';\nimport classes from './styles/ViewTitleBar.module.css';\n\nconst ViewTitleBar = (props, context) => {\n  const [moreOptionsIsOpen, setMoreOptionsIsOpen] = useState(false);\n  const [sharingDialogIsOpen, setSharingDialogIsOpen] = useState(false);\n  const [redirectUrl, setRedirectUrl] = useState(null);\n  const {\n    width\n  } = useWindowDimensions();\n  const {\n    id,\n    name,\n    description,\n    access,\n    showDescription,\n    starred,\n    onToggleStarredDashboard,\n    onShowHideDescription\n  } = props;\n\n  const toggleSharingDialog = () => setSharingDialogIsOpen(!sharingDialogIsOpen);\n\n  const toggleMoreOptions = () => setMoreOptionsIsOpen(!moreOptionsIsOpen);\n\n  const printLayout = () => setRedirectUrl(`${id}/printlayout`);\n\n  const printOipp = () => setRedirectUrl(`${id}/printoipp`);\n\n  const StarIcon = starred ? Star : StarBorder;\n\n  if (redirectUrl) {\n    return <Redirect to={redirectUrl} />;\n  }\n\n  const showHideDescriptionLabel = showDescription ? i18n.t('Hide description') : i18n.t('Show description');\n\n  const showHideDescription = () => {\n    onShowHideDescription();\n    toggleMoreOptions();\n  };\n\n  const toggleStarredDashboardLabel = starred ? i18n.t('Unstar dashboard') : i18n.t('Star dashboard');\n\n  const toggleStarredDashboard = () => {\n    // TODO use dataQuery directly here with create/delete mutations ?!\n    onToggleStarredDashboard();\n    toggleMoreOptions();\n  };\n\n  const buttonRef = createRef();\n  const userAccess = orObject(access);\n  const descriptionClasses = cx(classes.descContainer, description ? classes.desc : classes.noDesc);\n  return <>\n            <div className={classes.container}>\n                <div className={classes.titleBar}>\n                    <span className={classes.title} data-test=\"view-dashboard-title\">\n                        {name}\n                    </span>\n                    <div className={classes.actions}>\n                        <div className={classes.titleBarIcon} onClick={onToggleStarredDashboard}>\n                            <StarIcon style={{\n              fill: colors.grey600\n            }} />\n                        </div>\n                        <div className={classes.strip}>\n                            {userAccess.update ? <Link className={classes.editLink} to={`/${id}/edit`} data-test=\"link-edit-dashboard\">\n                                    <Button>{i18n.t('Edit')}</Button>\n                                </Link> : null}\n                            {userAccess.manage ? <Button className={classes.shareButton} onClick={toggleSharingDialog}>\n                                    {i18n.t('Share')}\n                                </Button> : null}\n                            <FilterSelector />\n                            <span ref={buttonRef}>\n                                <Button small={isSmallScreen(width)} dataTest=\"more-button\" onClick={toggleMoreOptions}>\n                                    <ThreeDots />\n                                    <span className={classes.moreButton}>\n                                        {i18n.t('More')}\n                                    </span>\n                                </Button>\n                            </span>\n                        </div>\n                        {moreOptionsIsOpen && <Popover reference={buttonRef} placement=\"bottom-start\" onClickOutside={toggleMoreOptions}>\n                                <FlyoutMenu>\n                                    <MenuItem dense label={toggleStarredDashboardLabel} onClick={toggleStarredDashboard} />\n                                    <MenuItem dense label={showHideDescriptionLabel} onClick={showHideDescription} />\n                                    <MenuItem dense label={i18n.t('Print')} dataTest=\"print-menu-item\">\n                                        <MenuItem dense label={i18n.t('Dashboard layout')} onClick={printLayout} dataTest=\"print-layout-menu-item\" />\n                                        <MenuItem dense label={i18n.t('One item per page')} onClick={printOipp} dataTest=\"print-oipp-menu-item\" />\n                                    </MenuItem>\n                                </FlyoutMenu>\n                            </Popover>}\n                    </div>\n                </div>\n                {showDescription && <div className={descriptionClasses}>\n                        {description || i18n.t('No description')}\n                    </div>}\n            </div>\n            {id && <SharingDialog d2={context.d2} id={id} type=\"dashboard\" open={sharingDialogIsOpen} onRequestClose={toggleSharingDialog} />}\n        </>;\n};\n\nViewTitleBar.propTypes = {\n  access: PropTypes.object,\n  description: PropTypes.string,\n  id: PropTypes.string,\n  name: PropTypes.string,\n  showDescription: PropTypes.bool,\n  starred: PropTypes.bool,\n  onShowHideDescription: PropTypes.func,\n  onToggleStarredDashboard: PropTypes.func\n};\nViewTitleBar.defaultProps = {\n  name: '',\n  description: '',\n  starred: false,\n  showDescription: false\n};\nViewTitleBar.contextTypes = {\n  d2: PropTypes.object\n};\n\nconst mapStateToProps = state => {\n  const id = sGetSelectedId(state);\n  const dashboard = sGetDashboardById(state, id) || EMPTY_DASHBOARD;\n  return {\n    id,\n    name: dashboard.displayName,\n    description: dashboard.displayDescription,\n    dashboardItems: sGetDashboardItems(state),\n    showDescription: sGetSelectedShowDescription(state),\n    starred: dashboard.starred,\n    access: dashboard.access\n  };\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n  const {\n    id,\n    starred,\n    showDescription\n  } = stateProps;\n  const {\n    dispatch\n  } = dispatchProps;\n  return { ...stateProps,\n    ...ownProps,\n    onToggleStarredDashboard: () => dispatch(tStarDashboard(id, !starred)),\n    onShowHideDescription: () => dispatch(tUpdateShowDescription(!showDescription))\n  };\n};\n\nexport default connect(mapStateToProps, null, mergeProps)(ViewTitleBar);","/** @module reducers/editDashboard */\nimport update from 'immutability-helper';\nimport isEmpty from 'lodash/isEmpty';\nimport { orArray, orObject } from '../modules/util';\nexport const RECEIVED_EDIT_DASHBOARD = 'RECEIVED_EDIT_DASHBOARD';\nexport const RECEIVED_NOT_EDITING = 'RECEIVED_NOT_EDITING';\nexport const START_NEW_DASHBOARD = 'START_NEW_DASHBOARD';\nexport const RECEIVED_TITLE = 'RECEIVED_TITLE';\nexport const RECEIVED_DESCRIPTION = 'RECEIVED_DESCRIPTION';\nexport const ADD_DASHBOARD_ITEM = 'ADD_DASHBOARD_ITEM';\nexport const REMOVE_DASHBOARD_ITEM = 'REMOVE_DASHBOARD_ITEM';\nexport const UPDATE_DASHBOARD_ITEM = 'UPDATE_DASHBOARD_ITEM';\nexport const RECEIVED_DASHBOARD_LAYOUT = 'RECEIVED_DASHBOARD_LAYOUT';\nexport const SET_PRINT_PREVIEW_VIEW = 'SET_PRINT_PREVIEW_VIEW';\nexport const CLEAR_PRINT_PREVIEW_VIEW = 'CLEAR_PRINT_PREVIEW_VIEW';\nexport const DEFAULT_STATE_EDIT_DASHBOARD = {};\nexport const NEW_DASHBOARD_STATE = {\n  id: '',\n  name: '',\n  access: {},\n  description: '',\n  dashboardItems: [],\n  printPreviewView: false\n};\nexport default ((state = DEFAULT_STATE_EDIT_DASHBOARD, action) => {\n  switch (action.type) {\n    case RECEIVED_EDIT_DASHBOARD:\n      {\n        const newState = {};\n        Object.keys(NEW_DASHBOARD_STATE).map(k => newState[k] = action.value[k]);\n        newState.printPreviewView = false;\n        return newState;\n      }\n\n    case RECEIVED_NOT_EDITING:\n      return DEFAULT_STATE_EDIT_DASHBOARD;\n\n    case SET_PRINT_PREVIEW_VIEW:\n      return Object.assign({}, state, {\n        printPreviewView: true\n      });\n\n    case CLEAR_PRINT_PREVIEW_VIEW:\n      return Object.assign({}, state, {\n        printPreviewView: false\n      });\n\n    case START_NEW_DASHBOARD:\n      return NEW_DASHBOARD_STATE;\n\n    case RECEIVED_TITLE:\n      {\n        return Object.assign({}, state, {\n          name: action.value\n        });\n      }\n\n    case RECEIVED_DESCRIPTION:\n      {\n        return Object.assign({}, state, {\n          description: action.value\n        });\n      }\n\n    case ADD_DASHBOARD_ITEM:\n      if (!action.value.position) {\n        return update(state, {\n          dashboardItems: {\n            $unshift: [action.value]\n          }\n        });\n      }\n\n      return update(state, {\n        dashboardItems: {\n          $splice: [[parseInt(action.value.position), 0, action.value]]\n        }\n      });\n\n    case REMOVE_DASHBOARD_ITEM:\n      {\n        const idToRemove = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === idToRemove);\n\n        if (dashboardItemIndex > -1) {\n          return update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1]]\n            }\n          });\n        }\n\n        return state;\n      }\n\n    case RECEIVED_DASHBOARD_LAYOUT:\n      {\n        const stateItems = orArray(state.dashboardItems);\n        let layoutHasChanged = false;\n        const newStateItems = action.value.map(({\n          x,\n          y,\n          w,\n          h,\n          i\n        }) => {\n          const stateItem = stateItems.find(si => si.id === i);\n\n          if (!(stateItem.x === x && stateItem.y === y && stateItem.w === w && stateItem.h === h)) {\n            layoutHasChanged = true;\n            return Object.assign({}, stateItem, {\n              w,\n              h,\n              x,\n              y\n            });\n          }\n\n          return stateItem;\n        });\n        return layoutHasChanged ? { ...state,\n          dashboardItems: newStateItems\n        } : state;\n      }\n\n    case UPDATE_DASHBOARD_ITEM:\n      {\n        const dashboardItem = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === dashboardItem.id);\n\n        if (dashboardItemIndex > -1) {\n          const newState = update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1, Object.assign({}, dashboardItem)]]\n            }\n          });\n          return newState;\n        }\n\n        return state;\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetEditDashboardRoot = state => state.editDashboard; // selectors\n\nexport const sGetIsEditing = state => !isEmpty(state.editDashboard);\nexport const sGetIsPrintPreviewView = state => sGetEditDashboardRoot(state).printPreviewView;\nexport const sGetIsNewDashboard = state => {\n  return !isEmpty(state.editDashboard) && sGetEditDashboardRoot(state).id === '';\n};\nexport const sGetEditDashboardName = state => sGetEditDashboardRoot(state).name;\nexport const sGetEditDashboardDescription = state => sGetEditDashboardRoot(state).description;\nexport const sGetEditDashboardItems = state => orObject(sGetEditDashboardRoot(state)).dashboardItems;","import { apiFetchDashboard } from './dashboards';\n\nconst onError = error => console.log('Error: ', error);\n\nexport const createDashboardMutation = {\n  resource: 'dashboards',\n  type: 'create',\n  data: ({\n    data\n  }) => data\n};\nexport const updateDashboardMutation = {\n  resource: 'dashboards',\n  type: 'update',\n  id: ({\n    id\n  }) => id,\n  data: ({\n    data\n  }) => data\n};\n\nconst generatePayload = (dashboard = {}, data) => {\n  return { ...dashboard,\n    name: data.name,\n    description: data.description,\n    dashboardItems: data.dashboardItems.map(item => ({ ...item,\n      width: item.w,\n      height: item.h\n    }))\n  };\n};\n\nexport const updateDashboard = async (dataEngine, data) => {\n  try {\n    const dashboard = await apiFetchDashboard(dataEngine, data.id);\n    const {\n      response\n    } = await dataEngine.mutate(updateDashboardMutation, {\n      variables: {\n        id: data.id,\n        data: generatePayload(dashboard, data)\n      }\n    });\n    return response.uid;\n  } catch (error) {\n    onError(error);\n  }\n};\nexport const postDashboard = async (dataEngine, data) => {\n  try {\n    const {\n      response\n    } = await dataEngine.mutate(createDashboardMutation, {\n      variables: {\n        data: generatePayload({}, data)\n      }\n    });\n    return response.uid;\n  } catch (error) {\n    onError(error);\n  }\n};","import { generateUid } from 'd2/uid';\nimport i18n from '@dhis2/d2-i18n';\nimport { RECEIVED_EDIT_DASHBOARD, START_NEW_DASHBOARD, RECEIVED_NOT_EDITING, RECEIVED_TITLE, RECEIVED_DESCRIPTION, RECEIVED_DASHBOARD_LAYOUT, ADD_DASHBOARD_ITEM, UPDATE_DASHBOARD_ITEM, REMOVE_DASHBOARD_ITEM, SET_PRINT_PREVIEW_VIEW, CLEAR_PRINT_PREVIEW_VIEW } from '../reducers/editDashboard';\nimport { sGetEditDashboardRoot } from '../reducers/editDashboard';\nimport { updateDashboard, postDashboard } from '../api/editDashboard';\nimport { tSetSelectedDashboardById } from '../actions/selected';\nimport { NEW_ITEM_SHAPE, getGridItemProperties, getPageBreakItemShape, getPrintTitlePageItemShape } from '../components/ItemGrid/gridUtil';\nimport { itemTypeMap, PAGEBREAK, PRINT_TITLE_PAGE } from '../modules/itemTypes';\nimport { convertUiItemsToBackend } from '../modules/uiBackendItemConverter';\n\nconst onError = error => {\n  console.log('Error (Saving Dashboard): ', error);\n  return error;\n}; // actions\n\n\nexport const acSetEditDashboard = (dashboard, items) => {\n  const val = { ...dashboard,\n    dashboardItems: items\n  };\n  return {\n    type: RECEIVED_EDIT_DASHBOARD,\n    value: val\n  };\n};\nexport const acSetEditNewDashboard = () => ({\n  type: START_NEW_DASHBOARD\n});\nexport const acClearEditDashboard = () => ({\n  type: RECEIVED_NOT_EDITING\n});\nexport const acSetPrintPreviewView = () => ({\n  type: SET_PRINT_PREVIEW_VIEW\n});\nexport const acClearPrintPreviewView = () => ({\n  type: CLEAR_PRINT_PREVIEW_VIEW\n});\nexport const acSetDashboardTitle = value => ({\n  type: RECEIVED_TITLE,\n  value\n});\nexport const acSetDashboardDescription = value => ({\n  type: RECEIVED_DESCRIPTION,\n  value\n});\nexport const acUpdateDashboardLayout = value => ({\n  type: RECEIVED_DASHBOARD_LAYOUT,\n  value\n});\nexport const acAddDashboardItem = item => {\n  const type = item.type;\n  delete item.type;\n  const itemPropName = itemTypeMap[type].propName;\n  const id = generateUid();\n  const gridItemProperties = getGridItemProperties(id);\n  let shape;\n\n  if (type === PAGEBREAK) {\n    const yPos = item.yPos || 0;\n    shape = getPageBreakItemShape(yPos, item.isStatic);\n  } else if (type === PRINT_TITLE_PAGE) {\n    shape = getPrintTitlePageItemShape();\n  } else {\n    shape = NEW_ITEM_SHAPE;\n  }\n\n  return {\n    type: ADD_DASHBOARD_ITEM,\n    value: {\n      id,\n      type,\n      position: item.position || null,\n      [itemPropName]: item.content,\n      ...NEW_ITEM_SHAPE,\n      ...gridItemProperties,\n      ...shape\n    }\n  };\n};\nexport const acUpdateDashboardItem = item => ({\n  type: UPDATE_DASHBOARD_ITEM,\n  value: item\n});\nexport const acRemoveDashboardItem = value => ({\n  type: REMOVE_DASHBOARD_ITEM,\n  value\n}); // thunks\n\nexport const tSaveDashboard = () => async (dispatch, getState, dataEngine) => {\n  const dashboard = sGetEditDashboardRoot(getState());\n  const dashboardToSave = { ...dashboard,\n    dashboardItems: convertUiItemsToBackend(dashboard.dashboardItems),\n    name: dashboard.name || i18n.t('Untitled dashboard')\n  };\n\n  try {\n    const dashboardId = dashboardToSave.id ? await updateDashboard(dataEngine, dashboardToSave) : await postDashboard(dataEngine, dashboardToSave);\n    dispatch(acClearEditDashboard());\n    await dispatch(tSetSelectedDashboardById(dashboardId));\n    return Promise.resolve(dashboardId);\n  } catch (error) {\n    onError(error);\n  }\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classes from './styles/NoVisualizationMessage.module.css';\n\nconst NoVisualizationMessage = ({\n  message\n}) => {\n  return <div className={classes.message}>{message}</div>;\n};\n\nNoVisualizationMessage.propTypes = {\n  message: PropTypes.string\n};\nexport default NoVisualizationMessage;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport NoVisualizationMessage from './NoVisualizationMessage';\nimport * as pluginManager from './plugin';\nimport { getBaseUrl, orObject } from '../../../../modules/util';\nimport { getGridItemDomId } from '../../../ItemGrid/gridUtil';\n\nconst pluginCredentials = d2 => {\n  return {\n    baseUrl: getBaseUrl(d2),\n    auth: d2.Api.getApi().defaultHeaders.Authorization\n  };\n};\n\nclass DefaultPlugin extends Component {\n  pluginCredentials = null;\n\n  constructor(props, context) {\n    super(props);\n    this.d2 = context.d2;\n  }\n\n  pluginIsAvailable = () => pluginManager.pluginIsAvailable(this.props.activeType || this.props.item.type);\n  shouldPluginReload = prevProps => {\n    // TODO - fix this hack, to handle bug with multiple\n    // rerendering while switching between dashboards.\n    //\n    // To determine if the rendering is happening because of a\n    // dashboard switch, check if the item reference has changed.\n    const reloadAllowed = this.props.item === prevProps.item;\n    const filtersChanged = prevProps.itemFilters !== this.props.itemFilters;\n    const vis = orObject(this.props.visualization);\n    const prevVis = orObject(prevProps.visualization);\n    const visChanged = vis.id !== prevVis.id || prevProps.activeType !== this.props.activeType;\n    return reloadAllowed && (visChanged || filtersChanged);\n  };\n  reloadPlugin = prevProps => {\n    if (this.pluginIsAvailable() && this.shouldPluginReload(prevProps)) {\n      if (this.props.activeType !== prevProps.activeType || this.props.itemFilters !== prevProps.itemFilters) {\n        pluginManager.unmount(this.props.item, prevProps.activeType);\n        pluginManager.load(this.props.item, this.props.visualization, {\n          credentials: this.pluginCredentials,\n          activeType: this.props.activeType\n        });\n      }\n    }\n  };\n\n  componentDidMount() {\n    this.pluginCredentials = pluginCredentials(this.d2);\n\n    if (this.pluginIsAvailable()) {\n      pluginManager.load(this.props.item, this.props.visualization, {\n        credentials: this.pluginCredentials,\n        activeType: this.props.activeType,\n        options: this.props.options\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    this.reloadPlugin(prevProps);\n  }\n\n  componentWillUnmount() {\n    if (this.pluginIsAvailable()) {\n      pluginManager.unmount(this.props.item, this.props.activeType);\n    }\n  }\n\n  render() {\n    const {\n      item,\n      style\n    } = this.props;\n    return this.pluginIsAvailable() ? <div id={getGridItemDomId(item.id)} style={style} /> : <NoVisualizationMessage message={i18n.t('Unable to load the plugin for this item')} />;\n  }\n\n}\n\nDefaultPlugin.contextTypes = {\n  d2: PropTypes.object\n};\nDefaultPlugin.propTypes = {\n  activeType: PropTypes.string,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object,\n  options: PropTypes.object,\n  style: PropTypes.object,\n  visualization: PropTypes.object\n};\nDefaultPlugin.defaultProps = {\n  style: {},\n  item: {},\n  itemFilters: {},\n  options: {},\n  visualization: {}\n};\nexport default DefaultPlugin;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport DefaultPlugin from './DefaultPlugin';\nimport { MAP } from '../../../../modules/itemTypes';\n\nconst MapPlugin = ({\n  applyFilters,\n  ...props\n}) => {\n  if (props.item.type === MAP) {\n    // apply filters only to thematic and event layers\n    // for maps AO\n    const mapViews = props.visualization.mapViews.map(mapView => {\n      if (mapView.layer.includes('thematic') || mapView.layer.includes('event')) {\n        return applyFilters(mapView, props.itemFilters);\n      }\n\n      return mapView;\n    });\n    props.visualization = { ...props.visualization,\n      mapViews\n    };\n  } else {\n    // this is the case of a non map AO passed to the maps plugin\n    // due to a visualization type switch in dashboard item\n    // maps plugin takes care of converting the AO to a suitable format\n    props.visualization = applyFilters(props.visualization, props.itemFilters);\n  }\n\n  return <DefaultPlugin options={{\n    hideTitle: true\n  }} {...props} />;\n};\n\nMapPlugin.propTypes = {\n  applyFilters: PropTypes.func,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object,\n  visualization: PropTypes.object\n};\nexport default MapPlugin;","import React from 'react';\nimport { CircularLoader } from '@dhis2/ui';\nimport classes from './styles/LoadingMask.module.css';\n\nconst LoadingMask = () => {\n  return <div className={classes.center}>\n            <CircularLoader />\n        </div>;\n};\n\nexport default LoadingMask;","const getFilteredVisualization = (visualization, filters) => {\n  if (!Object.keys(filters).length) {\n    return visualization;\n  } // deep clone objects in filters to avoid changing the visualization in the Redux store\n\n\n  const visRows = visualization.rows.map(obj => ({ ...obj\n  }));\n  const visColumns = visualization.columns.map(obj => ({ ...obj\n  }));\n  const visFilters = visualization.filters.map(obj => ({ ...obj\n  }));\n  Object.keys(filters).forEach(dimensionId => {\n    if (filters[dimensionId]) {\n      let dimensionFound = false;\n      [visRows, visColumns, visFilters].forEach(dimensionObjects => dimensionObjects.filter(obj => obj.dimension === dimensionId).forEach(obj => {\n        dimensionFound = true;\n        obj.items = filters[dimensionId];\n      })); // add dimension to filters if not already present elsewhere\n\n      if (!dimensionFound) {\n        visFilters.push({\n          dimension: dimensionId,\n          items: filters[dimensionId]\n        });\n      }\n    }\n  });\n  return { ...visualization,\n    rows: visRows,\n    columns: visColumns,\n    filters: visFilters\n  };\n};\n\nexport default getFilteredVisualization;","import { VIS_TYPE_COLUMN, VIS_TYPE_PIVOT_TABLE, getAdaptedUiLayoutByType } from '@dhis2/analytics';\nimport { REPORT_TABLE, CHART, MAP } from '../../../../modules/itemTypes';\nexport const THEMATIC_LAYER = 'thematic';\n\nconst extractMapView = map => map.mapViews && map.mapViews.find(mv => mv.layer.includes(THEMATIC_LAYER));\n\nconst getWithoutId = object => ({ ...object,\n  id: undefined\n});\n\nconst getVisualizationConfig = (visualization, originalType, activeType) => {\n  if (originalType === MAP && originalType !== activeType) {\n    const extractedMapView = extractMapView(visualization);\n\n    if (extractedMapView === undefined) {\n      return null;\n    }\n\n    return getWithoutId({ ...visualization,\n      ...extractedMapView,\n      mapViews: undefined,\n      type: activeType === CHART ? VIS_TYPE_COLUMN : VIS_TYPE_PIVOT_TABLE\n    });\n  } else if (originalType === REPORT_TABLE && activeType === CHART) {\n    const layout = getAdaptedUiLayoutByType(visualization, VIS_TYPE_COLUMN);\n    return getWithoutId({ ...visualization,\n      ...layout,\n      type: VIS_TYPE_COLUMN\n    });\n  } else if (originalType === CHART && activeType === REPORT_TABLE) {\n    const layout = getAdaptedUiLayoutByType(visualization, VIS_TYPE_PIVOT_TABLE);\n    return getWithoutId({ ...visualization,\n      ...layout,\n      type: VIS_TYPE_PIVOT_TABLE\n    });\n  }\n\n  return getWithoutId(visualization);\n};\n\nexport default getVisualizationConfig;","// Note that this ignores discrepancies in 'this', so shouldn't be used with bound functions\n// This is useful instead of lodash/memoize when we only need to memoize a single value\n// Inspiration: https://github.com/alexreardon/memoize-one\nconst memoizeOne = fn => {\n  let lastArgs = undefined;\n  let lastValue = undefined;\n  return (...args) => {\n    if (lastArgs && args.length === lastArgs.length && args.every((arg, i) => arg === lastArgs[i])) {\n      return lastValue;\n    }\n\n    lastArgs = args;\n    lastValue = fn(...args);\n    return lastValue;\n  };\n};\n\nexport default memoizeOne;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport VisualizationPlugin from '@dhis2/data-visualizer-plugin';\nimport i18n from '@dhis2/d2-i18n';\nimport DefaultPlugin from './DefaultPlugin';\nimport MapPlugin from './MapPlugin';\nimport LoadingMask from './LoadingMask';\nimport NoVisualizationMessage from './NoVisualizationMessage';\nimport getFilteredVisualization from './getFilteredVisualization';\nimport getVisualizationConfig from './getVisualizationConfig';\nimport { VISUALIZATION, MAP, CHART, REPORT_TABLE } from '../../../../modules/itemTypes';\nimport { getVisualizationId } from '../../../../modules/item';\nimport memoizeOne from '../../../../modules/memoizeOne';\nimport { sGetVisualization } from '../../../../reducers/visualizations';\n\nclass Visualization extends React.Component {\n  state = {\n    pluginLoaded: false\n  };\n\n  constructor(props) {\n    super(props);\n    this.memoizedGetFilteredVisualization = memoizeOne(getFilteredVisualization);\n    this.memoizedGetVisualizationConfig = memoizeOne(getVisualizationConfig);\n  }\n\n  onLoadingComplete = () => {\n    this.setState({\n      pluginLoaded: true\n    });\n  };\n\n  render() {\n    const {\n      visualization,\n      activeType,\n      item,\n      itemFilters,\n      availableHeight\n    } = this.props;\n\n    if (!visualization) {\n      return <NoVisualizationMessage message={i18n.t('No data to display')} />;\n    }\n\n    const pluginProps = {\n      item,\n      itemFilters,\n      activeType,\n      style: {\n        height: availableHeight\n      },\n      visualization: this.memoizedGetVisualizationConfig(visualization, item.type, activeType)\n    };\n\n    switch (activeType) {\n      case VISUALIZATION:\n      case CHART:\n      case REPORT_TABLE:\n        {\n          return <>\n                        {!this.state.pluginLoaded && <div style={pluginProps.style}>\n                                <LoadingMask />\n                            </div>}\n                        <VisualizationPlugin d2={this.context.d2} visualization={this.memoizedGetFilteredVisualization(pluginProps.visualization, pluginProps.itemFilters)} onLoadingComplete={this.onLoadingComplete} forDashboard={true} style={pluginProps.style} />\n                    </>;\n        }\n\n      case MAP:\n        {\n          return <MapPlugin applyFilters={this.memoizedGetFilteredVisualization} {...pluginProps} />;\n        }\n\n      default:\n        {\n          pluginProps.visualization = this.memoizedGetFilteredVisualization(pluginProps.visualization, pluginProps.itemFilters);\n          return <DefaultPlugin {...pluginProps} />;\n        }\n    }\n  }\n\n}\n\nVisualization.propTypes = {\n  activeType: PropTypes.string,\n  availableHeight: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  item: PropTypes.object,\n  itemFilters: PropTypes.object,\n  visualization: PropTypes.object\n};\nVisualization.contextTypes = {\n  d2: PropTypes.object\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    visualization: sGetVisualization(state, getVisualizationId(ownProps.item))\n  };\n};\n\nexport default connect(mapStateToProps)(Visualization);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Warning } from './assets/icons';\nimport classes from './styles/FatalErrorBoundary.module.css';\n\nclass FatalErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      errorFound: false\n    };\n  }\n\n  componentDidCatch(error, info) {\n    this.setState({\n      errorFound: true\n    });\n    console.log('error: ', error);\n    console.log('info: ', info);\n  }\n\n  render() {\n    if (this.state.errorFound) {\n      return <p className={classes.container}>\n                    <span className={classes.icon}>\n                        <Warning />\n                    </span>\n                    <span className={classes.message}>\n                        {i18n.t('There was a problem loading this dashboard item')}\n                    </span>\n                </p>;\n    }\n\n    return this.props.children;\n  }\n\n}\n\nFatalErrorBoundary.propTypes = {\n  children: PropTypes.node\n};\nexport default FatalErrorBoundary;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classes from './styles/ItemHeader.module.css';\n\nconst ViewItemActions = ({\n  actionButtons\n}) => {\n  return actionButtons ? <div className={classes.itemActionsWrap}>{actionButtons}</div> : null;\n};\n\nViewItemActions.propTypes = {\n  actionButtons: PropTypes.node\n};\nexport default ViewItemActions;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { colors } from '@dhis2/ui';\nimport classes from './styles/DeleteItemButton.module.css';\n\nconst DeleteItemButton = ({\n  onClick\n}) => <button type=\"button\" className={classes.deleteItemButton} onClick={onClick} title={i18n.t(`Delete item`)}>\n        <DeleteIcon style={{\n    fill: colors.red500\n  }} />\n    </button>;\n\nDeleteItemButton.propTypes = {\n  onClick: PropTypes.func\n};\nexport default DeleteItemButton;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport DeleteItemButton from './DeleteItemButton';\nimport { acRemoveDashboardItem } from '../../../actions/editDashboard';\nimport classes from './styles/ItemHeader.module.css';\n\nconst EditItemActions = ({\n  itemId,\n  acRemoveDashboardItem\n}) => {\n  const handleDeleteItem = () => acRemoveDashboardItem(itemId);\n\n  return <div className={classes.itemActionsWrap}>\n            <DeleteItemButton onClick={handleDeleteItem} />\n        </div>;\n};\n\nEditItemActions.propTypes = {\n  acRemoveDashboardItem: PropTypes.func,\n  itemId: PropTypes.string\n};\nconst mapDispatchToProps = {\n  acRemoveDashboardItem\n};\nexport default connect(null, mapDispatchToProps)(EditItemActions);","import React from 'react';\nimport { colors } from '@dhis2/ui';\n\nconst WarningIcon = () => <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" fill={colors.grey600}>\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z\" />\n    </svg>;\n\nexport default WarningIcon;","import React from 'react';\nimport { Tooltip } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport InfoIcon from '../../../icons/Info';\nimport classes from './styles/PrintItemInfo.module.css';\n\nconst PrintWarning = () => <div className={classes.warning}>\n        <Tooltip content={i18n.t('This item has been shortened to fit on one page')} placement=\"bottom\">\n            <InfoIcon />\n        </Tooltip>\n    </div>;\n\nexport default PrintWarning;","export const EDIT = 'edit';\nexport const NEW = 'new';\nexport const VIEW = 'view';\nexport const PRINT = 'print';\nexport const PRINT_LAYOUT = 'print-layout';\nexport const isEditMode = mode => [EDIT, NEW].includes(mode);\nexport const isPrintMode = mode => [PRINT, PRINT_LAYOUT].includes(mode);\nexport const isViewMode = mode => mode === VIEW;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ViewItemActions from './ViewItemActions';\nimport EditItemActions from './EditItemActions';\nimport PrintItemInfo from './PrintItemInfo';\nimport { VIEW, EDIT, PRINT_LAYOUT } from '../../Dashboard/dashboardModes';\nimport classes from './styles/ItemHeader.module.css';\n\nconst getItemActionsMap = isShortened => {\n  return {\n    [VIEW]: ViewItemActions,\n    [EDIT]: EditItemActions,\n    [PRINT_LAYOUT]: isShortened ? PrintItemInfo : null\n  };\n}; // This is the margin-top + margin-bottom defined in the css file\n\n\nexport const HEADER_MARGIN_HEIGHT = 12;\nconst ItemHeader = React.forwardRef(({\n  dashboardMode,\n  title,\n  isShortened,\n  ...rest\n}, ref) => {\n  const Actions = getItemActionsMap(isShortened)[dashboardMode];\n  return <div className={classes.itemHeaderWrap} ref={ref}>\n                <p className={classes.itemTitle}>{title}</p>\n                {Actions ? <Actions {...rest} /> : null}\n            </div>;\n});\nItemHeader.displayName = 'ItemHeader';\nItemHeader.propTypes = {\n  dashboardMode: PropTypes.string,\n  isShortened: PropTypes.bool,\n  title: PropTypes.string\n};\nexport default connect(null, null, null, {\n  forwardRef: true\n})(ItemHeader);","import React, { useState, createRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { useConfig } from '@dhis2/app-runtime';\nimport { isSingleValue, isYearOverYear, VIS_TYPE_GAUGE, VIS_TYPE_PIE } from '@dhis2/analytics';\nimport { Button, Menu, Popover, MenuItem, Divider, colors } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport { ThreeDots, SpeechBubble, Fullscreen, ExitFullscreen } from './assets/icons';\nimport { getLink } from './Visualization/plugin';\nimport { CHART, MAP, REPORT_TABLE, EVENT_CHART, EVENT_REPORT, isTrackerDomainType, hasMapView, getAppName } from '../../../modules/itemTypes';\nconst iconFill = {\n  fill: colors.grey600\n};\n\nconst ItemHeaderButtons = props => {\n  const [menuIsOpen, setMenuIsOpen] = useState(null);\n  const {\n    baseUrl\n  } = useConfig();\n  const {\n    item,\n    visualization,\n    onSelectActiveType,\n    activeType\n  } = props;\n  const isTrackerType = isTrackerDomainType(item.type);\n\n  const onViewTable = () => {\n    closeMenu();\n    onSelectActiveType(isTrackerType ? EVENT_REPORT : REPORT_TABLE);\n  };\n\n  const onViewChart = () => {\n    closeMenu();\n    onSelectActiveType(isTrackerType ? EVENT_CHART : CHART);\n  };\n\n  const onViewMap = () => {\n    closeMenu();\n    onSelectActiveType(MAP);\n  };\n\n  const itemHasMapView = () => hasMapView(item.type);\n\n  const handleInterpretationClick = () => {\n    props.onToggleFooter();\n\n    if (menuIsOpen) {\n      closeMenu();\n    }\n  };\n\n  const handleToggleFullscreenClick = () => {\n    props.onToggleFullscreen();\n    closeMenu();\n  };\n\n  const openMenu = () => setMenuIsOpen(true);\n\n  const closeMenu = () => setMenuIsOpen(false);\n\n  const type = visualization.type || item.type;\n  const canViewAs = !isSingleValue(type) && !isYearOverYear(type) && type !== VIS_TYPE_GAUGE && type !== VIS_TYPE_PIE;\n  const interpretationMenuLabel = props.activeFooter ? i18n.t(`Hide interpretations and details`) : i18n.t(`Show interpretations and details`);\n\n  const ViewAsMenuItems = () => <>\n            {activeType !== CHART && activeType !== EVENT_CHART && <MenuItem dense label={i18n.t('View as Chart')} onClick={onViewChart} icon={<ChartIcon style={iconFill} />} />}\n            {activeType !== REPORT_TABLE && activeType !== EVENT_REPORT && <MenuItem dense label={i18n.t('View as Table')} onClick={onViewTable} icon={<TableIcon style={iconFill} />} />}\n            {itemHasMapView() && activeType !== MAP && <MenuItem dense label={i18n.t('View as Map')} onClick={onViewMap} icon={<MapIcon style={iconFill} />} />}\n        </>;\n\n  const buttonRef = createRef();\n  return props.isFullscreen ? <Button small secondary onClick={props.onToggleFullscreen}>\n            <ExitFullscreen />\n        </Button> : <>\n            <div ref={buttonRef}>\n                <Button small secondary onClick={openMenu} dataTest=\"dashboarditem-menu-button\">\n                    <ThreeDots />\n                </Button>\n            </div>\n            {menuIsOpen && <Popover reference={buttonRef} placement=\"auto-start\" arrow={false} onClickOutside={closeMenu}>\n                    <Menu>\n                        {canViewAs && <>\n                                <ViewAsMenuItems />\n                                <Divider />\n                            </>}\n                        <MenuItem dense icon={<LaunchIcon style={{\n          fill: '#6e7a8a'\n        }} />} label={i18n.t('Open in {{appName}} app', {\n          appName: getAppName(item.type)\n        })} href={getLink(item, baseUrl)} target=\"_blank\" />\n                        <MenuItem dense icon={<SpeechBubble />} label={interpretationMenuLabel} onClick={handleInterpretationClick} />\n                        {props.fullscreenSupported && <MenuItem dense icon={<Fullscreen />} label={i18n.t('View fullscreen')} onClick={handleToggleFullscreenClick} />}\n                    </Menu>\n                </Popover>}\n        </>;\n};\n\nItemHeaderButtons.propTypes = {\n  activeFooter: PropTypes.bool,\n  activeType: PropTypes.string,\n  fullscreenSupported: PropTypes.bool,\n  isFullscreen: PropTypes.bool,\n  item: PropTypes.object,\n  visualization: PropTypes.object,\n  onSelectActiveType: PropTypes.func,\n  onToggleFooter: PropTypes.func,\n  onToggleFullscreen: PropTypes.func\n};\nexport default ItemHeaderButtons;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getVisualizationId } from '../../../modules/item';\nimport InterpretationsComponent from '@dhis2/d2-ui-interpretations';\nimport classes from './styles/ItemFooter.module.css';\n\nconst ItemFooter = (props, context) => <div data-test=\"dashboarditem-footer\">\n        <hr className={classes.line} />\n        <div className={classes.scrollContainer}>\n            <InterpretationsComponent d2={context.d2} item={props.item} type={props.item.type.toLowerCase()} id={getVisualizationId(props.item)} appName=\"dashboard\" />\n        </div>\n    </div>;\n\nItemFooter.contextTypes = {\n  d2: PropTypes.object.isRequired\n};\nItemFooter.propTypes = {\n  item: PropTypes.object.isRequired\n};\nexport default ItemFooter;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport uniqueId from 'lodash/uniqueId';\nimport Visualization from './Visualization/Visualization';\nimport FatalErrorBoundary from './FatalErrorBoundary';\nimport ItemHeader, { HEADER_MARGIN_HEIGHT } from '../ItemHeader/ItemHeader';\nimport ItemHeaderButtons from './ItemHeaderButtons';\nimport ItemFooter from './ItemFooter';\nimport { apiPostDataStatistics } from '../../../api/dataStatistics';\nimport { apiFetchVisualization } from '../../../api/metadata';\nimport { sGetVisualization } from '../../../reducers/visualizations';\nimport { sGetSelectedItemActiveType } from '../../../reducers/selected';\nimport { sGetIsEditing } from '../../../reducers/editDashboard';\nimport { sGetItemFiltersRoot, DEFAULT_STATE_ITEM_FILTERS } from '../../../reducers/itemFilters';\nimport { sGatherAnalyticalObjectStatisticsInDashboardViews } from '../../../reducers/settings';\nimport { acAddVisualization } from '../../../actions/visualizations';\nimport { acSetSelectedItemActiveType } from '../../../actions/selected';\nimport { pluginIsAvailable } from './Visualization/plugin';\nimport { getDataStatisticsName } from '../../../modules/itemTypes';\nimport { getVisualizationId, getVisualizationName } from '../../../modules/item';\nimport memoizeOne from '../../../modules/memoizeOne';\nimport { isEditMode, isPrintMode, isViewMode } from '../../Dashboard/dashboardModes';\nimport { ITEM_CONTENT_PADDING_BOTTOM } from '../../ItemGrid/ItemGrid';\nexport class Item extends Component {\n  state = {\n    showFooter: false,\n    configLoaded: false,\n    isFullscreen: false\n  };\n\n  constructor(props, context) {\n    super(props);\n    this.d2 = context.d2;\n    this.contentRef = React.createRef();\n    this.headerRef = React.createRef();\n    this.itemDomElSelector = `.reactgriditem-${this.props.item.id}`;\n    this.memoizedGetContentHeight = memoizeOne((calculatedHeight, measuredHeight, preferMeasured) => preferMeasured ? measuredHeight || calculatedHeight : calculatedHeight);\n  }\n\n  async componentDidMount() {\n    this.props.updateVisualization(await apiFetchVisualization(this.props.item));\n\n    try {\n      if (this.props.gatherDataStatistics && isViewMode(this.props.dashboardMode)) {\n        await apiPostDataStatistics(getDataStatisticsName(this.props.item.type), getVisualizationId(this.props.item));\n      }\n    } catch (e) {\n      console.log(e);\n    }\n\n    this.setState({\n      configLoaded: true\n    });\n    const el = document.querySelector(this.itemDomElSelector);\n\n    if (el?.requestFullscreen) {\n      el.onfullscreenchange = this.handleFullscreenChange;\n    } else if (el?.webkitRequestFullscreen) {\n      el.onwebkitfullscreenchange = this.handleFullscreenChange;\n    }\n  }\n\n  componentWillUnmount() {\n    const el = document.querySelector(this.itemDomElSelector);\n\n    if (el?.onfullscreenchange) {\n      el.removeEventListener('onfullscreenchange', this.handleFullscreenChange);\n    } else if (el?.onwebkitfullscreenchange) {\n      el.removeEventListener('onwebkitfullscreenchange', this.handleFullscreenChange);\n    }\n  }\n\n  isFullscreenSupported = () => {\n    const el = document.querySelector(this.itemDomElSelector);\n    return !!(el?.requestFullscreen || el?.webkitRequestFullscreen);\n  };\n  handleFullscreenChange = () => {\n    this.setState({\n      isFullscreen: !!document.fullscreenElement || !!document.webkitFullscreenElement\n    });\n  };\n  onToggleFullscreen = () => {\n    if (!this.state.isFullscreen) {\n      const el = document.querySelector(this.itemDomElSelector);\n\n      if (el?.requestFullscreen) {\n        el.requestFullscreen();\n      } else if (el?.webkitRequestFullscreen) {\n        el.webkitRequestFullscreen();\n      }\n    } else {\n      document.exitFullscreen ? document.exitFullscreen() : document.webkitExitFullscreen();\n    }\n  };\n  getUniqueKey = memoizeOne(() => uniqueId());\n  onToggleFooter = () => {\n    this.setState({\n      showFooter: !this.state.showFooter\n    }, this.props.onToggleItemExpanded(this.props.item.id));\n  };\n  setActiveType = type => {\n    type !== this.getActiveType() && this.props.setActiveType(this.props.item.id, type);\n  };\n  getActiveType = () => {\n    if (this.props.isEditing) {\n      return this.props.item.type;\n    }\n\n    return this.props.activeType || this.props.item.type;\n  };\n  getAvailableHeight = () => {\n    if (this.state.isFullscreen) {\n      return '95vh';\n    }\n\n    const calculatedHeight = this.props.item.originalHeight - this.headerRef.current.clientHeight - HEADER_MARGIN_HEIGHT - ITEM_CONTENT_PADDING_BOTTOM;\n    return this.memoizedGetContentHeight(calculatedHeight, this.contentRef ? this.contentRef.offsetHeight : null, isEditMode(this.props.dashboardMode) || isPrintMode(this.props.dashboardMode));\n  };\n\n  render() {\n    const {\n      item,\n      dashboardMode,\n      itemFilters\n    } = this.props;\n    const {\n      showFooter\n    } = this.state;\n    const activeType = this.getActiveType();\n    const actionButtons = pluginIsAvailable(activeType || item.type) ? <ItemHeaderButtons item={item} visualization={this.props.visualization} onSelectActiveType={this.setActiveType} onToggleFooter={this.onToggleFooter} onToggleFullscreen={this.onToggleFullscreen} activeType={activeType} activeFooter={showFooter} isFullscreen={this.state.isFullscreen} fullscreenSupported={this.isFullscreenSupported()} /> : null;\n    return <>\n                <ItemHeader title={getVisualizationName(item)} itemId={item.id} actionButtons={actionButtons} ref={this.headerRef} dashboardMode={dashboardMode} isShortened={item.shortened} />\n                <FatalErrorBoundary>\n                    <div key={this.getUniqueKey(itemFilters)} className=\"dashboard-item-content\" ref={ref => this.contentRef = ref}>\n                        {this.state.configLoaded && <Visualization item={item} activeType={activeType} itemFilters={itemFilters} availableHeight={this.getAvailableHeight()} />}\n                    </div>\n                </FatalErrorBoundary>\n                {isViewMode(dashboardMode) && showFooter ? <ItemFooter item={item} /> : null}\n            </>;\n  }\n\n}\nItem.contextTypes = {\n  d2: PropTypes.object\n};\nItem.propTypes = {\n  activeType: PropTypes.string,\n  dashboardMode: PropTypes.string,\n  gatherDataStatistics: PropTypes.bool,\n  isEditing: PropTypes.bool,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object,\n  setActiveType: PropTypes.func,\n  updateVisualization: PropTypes.func,\n  visualization: PropTypes.object,\n  onToggleItemExpanded: PropTypes.func\n};\nItem.defaultProps = {\n  item: {},\n  onToggleItemExpanded: Function.prototype,\n  visualization: {}\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const itemFilters = !isEditMode(ownProps.dashboardMode) ? sGetItemFiltersRoot(state) : DEFAULT_STATE_ITEM_FILTERS;\n  return {\n    activeType: sGetSelectedItemActiveType(state, ownProps.item?.id),\n    isEditing: sGetIsEditing(state),\n    itemFilters,\n    visualization: sGetVisualization(state, getVisualizationId(ownProps.item)),\n    gatherDataStatistics: sGatherAnalyticalObjectStatisticsInDashboardViews(state)\n  };\n};\n\nconst mapDispatchToProps = {\n  setActiveType: acSetSelectedItemActiveType,\n  updateVisualization: acAddVisualization\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Item);","import React from 'react';\nimport { colors } from '@dhis2/ui';\nconst style = {\n  backgroundColor: colors.grey200,\n  border: 'none',\n  height: '1px',\n  margin: '0px 0px 5px 0px'\n};\n\nconst Line = () => <hr style={style} />;\n\nexport default Line;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { colors } from '@dhis2/ui';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport Line from '../../../widgets/Line';\nimport { sGetMessagesRoot } from '../../../reducers/messages';\nimport { formatDate } from '../../../modules/util';\nimport { isViewMode } from '../../Dashboard/dashboardModes';\nimport './MessagesItem.css';\nconst PRIVATE = 'PRIVATE';\nconst messageTypes = {\n  [PRIVATE]: 'Private',\n  VALIDATION_RESULT: 'Validation',\n  TICKET: 'Ticket',\n  SYSTEM: 'System'\n};\nconst style = {\n  list: {\n    listStyleType: 'none',\n    paddingLeft: '0px'\n  },\n  seeAll: {\n    textAlign: 'center',\n    fontSize: '13px',\n    marginBottom: '5px'\n  },\n  sender: {\n    fontSize: '13px',\n    lineHeight: '15px',\n    margin: 0,\n    color: colors.grey800\n  },\n  snippet: {\n    color: colors.grey800,\n    fontSize: '13px',\n    lineHeight: '15px',\n    maxHeight: '30px',\n    overflow: 'hidden'\n  }\n};\n\nclass MessagesItem extends Component {\n  state = {\n    uiLocale: ''\n  };\n\n  async componentDidMount() {\n    const uiLocale = await this.context.d2.currentUser.userSettings.get('keyUiLocale');\n    this.setState({\n      uiLocale\n    });\n  }\n\n  getMessageHref = msg => {\n    const msgIdentifier = msg ? `#/${msg.messageType}/${msg.id}` : '';\n    return `${this.context.baseUrl}/dhis-web-messaging/${msgIdentifier}`;\n  };\n  getMessageSender = msg => {\n    const latestMsg = msg.messages.slice(-1)[0];\n    return latestMsg.sender ? latestMsg.sender.displayName : '';\n  };\n  getMessageItems = () => {\n    const modeClass = isViewMode(this.props.dashboardMode) ? 'view' : null;\n    return this.props.messages.map(msg => {\n      const redirectToMsg = () => {\n        if (isViewMode(this.props.dashboardMode)) {\n          document.location.href = this.getMessageHref(msg);\n        }\n      };\n\n      const sender = msg.messageType === PRIVATE ? this.getMessageSender(msg) : messageTypes[msg.messageType];\n      const readClass = !msg.read ? 'unread' : null;\n      const latestMsg = msg.messages.slice(-1)[0];\n      const msgDate = latestMsg.lastUpdated;\n      return <li className={`message-item ${modeClass}`} key={msg.id} onClick={redirectToMsg}>\n                    <p className={`message-title ${readClass}`}>\n                        {msg.displayName} ({msg.messageCount})\n                    </p>\n                    <p style={style.sender}>\n                        {sender} - {formatDate(msgDate, this.state.uiLocale)}\n                    </p>\n                    <p style={style.snippet}>{latestMsg.text}</p>\n                </li>;\n    });\n  };\n\n  render() {\n    return <>\n                <ItemHeader title={i18n.t('Messages')} itemId={this.props.item.id} dashboardMode={this.props.dashboardMode} isShortened={this.props.item.shortened} />\n                <Line />\n                {this.props.messages.length > 0 && <div className=\"dashboard-item-content\">\n                        <ul style={style.list}>{this.getMessageItems()}</ul>\n                        <div style={style.seeAll}>\n                            <a href={this.getMessageHref()}>\n                                {i18n.t('See all messages')}\n                            </a>\n                        </div>\n                    </div>}\n            </>;\n  }\n\n}\n\nMessagesItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  messages: PropTypes.array\n};\nMessagesItem.contextTypes = {\n  d2: PropTypes.object,\n  baseUrl: PropTypes.string\n};\n\nconst mapStateToProps = state => {\n  return {\n    messages: Object.values(sGetMessagesRoot(state))\n  };\n};\n\nconst MessagesContainer = connect(mapStateToProps, null)(MessagesItem);\nexport default MessagesContainer;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nconst NotSupportedItem = props => <>\n        <ItemHeader title={i18n.t('Item type \"{{type}}\" not supported', {\n    type: props.item.type\n  })} itemId={props.item.id} dashboardMode={props.dashboardMode} isShortened={props.item.shortened} />\n        <div style={{\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '90%'\n  }}>\n            <NotInterestedIcon style={{\n      width: 100,\n      height: 100,\n      align: 'center'\n    }} color=\"disabled\" />\n        </div>\n    </>;\n\nNotSupportedItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object\n};\nexport default NotSupportedItem;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst DescriptionIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill={colors.grey500}>\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M14 2H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6zm2 16H8v-2h8v2zm0-4H8v-2h8v2zm-3-5V3.5L18.5 9H13z\" />\n    </svg>;\n\nDescriptionIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default DescriptionIcon;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst DeleteIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill={colors.red500}>\n        <path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>;\n\nDeleteIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default DeleteIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { colors } from '@dhis2/ui';\nimport DescriptionIcon from '../../../icons/Description';\nimport DeleteIcon from '../../../icons/Delete';\nimport Line from '../../../widgets/Line';\nimport { itemTypeMap, getItemUrl } from '../../../modules/itemTypes';\nimport { orArray } from '../../../modules/util';\nimport { tRemoveListItemContent } from './actions';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport { isEditMode } from '../../Dashboard/dashboardModes';\nimport classes from './Item.module.css';\n\nconst getItemTitle = item => itemTypeMap[item.type].pluralTitle;\n\nconst getContentItems = item => orArray(item[itemTypeMap[item.type].propName]).filter((item, index, array) => array.findIndex(el => el.id === item.id) === index);\n\nconst ListItem = (props, context) => {\n  const {\n    item,\n    dashboardMode,\n    tRemoveListItemContent\n  } = props;\n  const contentItems = getContentItems(item);\n\n  const getLink = contentItem => {\n    const deleteButton = <button className={classes.deletebutton} onClick={() => tRemoveListItemContent(item, contentItem)}>\n                <DeleteIcon className={classes.deleteicon} />\n            </button>;\n    return <>\n                <a className={classes.link} style={{\n        color: colors.grey900\n      }} href={getItemUrl(item.type, contentItem, context.d2)}>\n                    {contentItem.name}\n                </a>\n                {isEditMode(dashboardMode) ? deleteButton : null}\n            </>;\n  };\n\n  return <>\n            <ItemHeader title={getItemTitle(item)} itemId={item.id} dashboardMode={dashboardMode} isShortened={item.shortened} />\n            <Line />\n            <div className=\"dashboard-item-content\">\n                <ul className={classes.list}>\n                    {contentItems.map(contentItem => <li className={classes.item} key={contentItem.id}>\n                            <DescriptionIcon className={classes.itemicon} />\n                            {getLink(contentItem)}\n                        </li>)}\n                </ul>\n            </div>\n        </>;\n};\n\nListItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  tRemoveListItemContent: PropTypes.func\n};\nListItem.contextTypes = {\n  d2: PropTypes.object\n};\nexport default connect(null, {\n  tRemoveListItemContent\n})(ListItem);","import { acUpdateDashboardItem, acRemoveDashboardItem } from '../../../actions/editDashboard';\nimport { itemTypeMap } from '../../../modules/itemTypes';\nexport const tRemoveListItemContent = (dashboardItem, content) => dispatch => {\n  const listItemType = itemTypeMap[dashboardItem.type].propName;\n  const newContent = dashboardItem[listItemType].filter(item => item.id !== content.id);\n\n  if (newContent.length) {\n    dashboardItem[listItemType] = newContent;\n    dispatch(acUpdateDashboardItem(dashboardItem));\n  } else {\n    dispatch(acRemoveDashboardItem(dashboardItem));\n  }\n};","/** @module reducers/editDashboard */\nimport update from 'immutability-helper';\nimport isEmpty from 'lodash/isEmpty';\nimport { orArray } from '../modules/util';\nexport const SET_PRINT_DASHBOARD = 'SET_PRINT_DASHBOARD';\nexport const CLEAR_PRINT_DASHBOARD = 'CLEAR_PRINT_DASHBOARD';\nexport const ADD_PRINT_DASHBOARD_ITEM = 'ADD_PRINT_DASHBOARD_ITEM';\nexport const SET_PRINT_DASHBOARD_LAYOUT = 'SET_PRINT_DASHBOARD_LAYOUT';\nexport const REMOVE_PRINT_DASHBOARD_ITEM = 'REMOVE_PRINT_DASHBOARD_ITEM';\nexport const UPDATE_PRINT_DASHBOARD_ITEM = 'UPDATE_PRINT_DASHBOARD_ITEM';\nexport const DEFAULT_STATE_PRINT_DASHBOARD = {};\nconst DEFAULT_DASHBOARD_ITEMS = [];\nexport const NEW_PRINT_DASHBOARD_STATE = {\n  id: '',\n  name: '',\n  access: {},\n  description: '',\n  dashboardItems: DEFAULT_DASHBOARD_ITEMS\n};\nexport default ((state = DEFAULT_STATE_PRINT_DASHBOARD, action) => {\n  switch (action.type) {\n    case SET_PRINT_DASHBOARD:\n      {\n        const newState = {};\n        Object.keys(NEW_PRINT_DASHBOARD_STATE).map(k => newState[k] = action.value[k]);\n        return newState;\n      }\n\n    case CLEAR_PRINT_DASHBOARD:\n      return DEFAULT_STATE_PRINT_DASHBOARD;\n\n    case ADD_PRINT_DASHBOARD_ITEM:\n      if (!action.value.position) {\n        return update(state, {\n          dashboardItems: {\n            $unshift: [action.value]\n          }\n        });\n      }\n\n      return update(state, {\n        dashboardItems: {\n          $splice: [[parseInt(action.value.position), 0, action.value]]\n        }\n      });\n\n    case REMOVE_PRINT_DASHBOARD_ITEM:\n      {\n        const idToRemove = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === idToRemove);\n\n        if (dashboardItemIndex > -1) {\n          return update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1]]\n            }\n          });\n        }\n\n        return state;\n      }\n\n    case UPDATE_PRINT_DASHBOARD_ITEM:\n      {\n        const dashboardItem = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === dashboardItem.id);\n\n        if (dashboardItemIndex > -1) {\n          const newState = update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1, Object.assign({}, dashboardItem)]]\n            }\n          });\n          return newState;\n        }\n\n        return state;\n      }\n\n    case SET_PRINT_DASHBOARD_LAYOUT:\n      {\n        const stateItems = orArray(state.dashboardItems);\n        let layoutHasChanged = false;\n        const newStateItems = action.value.map(({\n          x,\n          y,\n          w,\n          h,\n          i\n        }) => {\n          const stateItem = stateItems.find(si => si.id === i);\n\n          if (!(stateItem.x === x && stateItem.y === y && stateItem.w === w && stateItem.h === h)) {\n            layoutHasChanged = true;\n            return Object.assign({}, stateItem, {\n              w,\n              h,\n              x,\n              y\n            });\n          }\n\n          return stateItem;\n        });\n        return layoutHasChanged ? { ...state,\n          dashboardItems: newStateItems\n        } : state;\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetPrintDashboardRoot = state => state.printDashboard; // selectors\n\nexport const sGetIsPrinting = state => !isEmpty(state.printDashboard);\nexport const sGetPrintDashboardName = state => sGetPrintDashboardRoot(state).name;\nexport const sGetPrintDashboardDescription = state => sGetPrintDashboardRoot(state).description;\nexport const sGetPrintDashboardItems = state => {\n  return sGetPrintDashboardRoot(state)?.dashboardItems || DEFAULT_DASHBOARD_ITEMS;\n};","import React from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport Input from '@material-ui/core/Input';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport PrintItemInfo from '../ItemHeader/PrintItemInfo';\nimport Line from '../../../widgets/Line';\nimport { Parser as RichTextParser, Editor as RichTextEditor } from '@dhis2/d2-ui-rich-text';\nimport { acUpdateDashboardItem } from '../../../actions/editDashboard';\nimport { sGetEditDashboardItems } from '../../../reducers/editDashboard';\nimport { sGetDashboardItems } from '../../../reducers/dashboards';\nimport { sGetIsPrinting, sGetPrintDashboardItems } from '../../../reducers/printDashboard';\nimport { isEditMode, PRINT_LAYOUT } from '../../Dashboard/dashboardModes';\nconst style = {\n  textDiv: {\n    padding: '10px',\n    whiteSpace: 'pre-line',\n    lineHeight: '20px'\n  },\n  textField: {\n    fontSize: '14px',\n    fontStretch: 'normal',\n    width: '90%',\n    margin: '0 auto',\n    display: 'block',\n    lineHeight: '24px'\n  },\n  container: {\n    marginBottom: '20px',\n    marginTop: '20px'\n  }\n};\n\nconst TextItem = props => {\n  const {\n    item,\n    dashboardMode,\n    text,\n    acUpdateDashboardItem\n  } = props;\n\n  const onChangeText = event => {\n    const updatedItem = { ...item,\n      text: event.target.value\n    };\n    acUpdateDashboardItem(updatedItem);\n  };\n\n  const viewItem = () => {\n    const textDivStyle = Object.assign({}, style.textField, style.textDiv);\n    return <div className=\"dashboard-item-content\" style={style.container}>\n                <RichTextParser style={textDivStyle}>{text}</RichTextParser>\n            </div>;\n  };\n\n  const editItem = () => {\n    return <>\n                <ItemHeader title={i18n.t('Text item')} itemId={item.id} dashboardMode={dashboardMode} />\n                <Line />\n                <div className=\"dashboard-item-content\">\n                    <RichTextEditor onEdit={onChangeText}>\n                        <Input value={text} multiline fullWidth style={style.textField} placeholder={i18n.t('Add text here')} onChange={onChangeText} />\n                    </RichTextEditor>\n                </div>\n            </>;\n  };\n\n  const printItem = () => {\n    const textDivStyle = Object.assign({}, style.textField, style.textDiv);\n    return <>\n                {props.item.shortened ? <PrintItemInfo /> : null}\n                <div className=\"dashboard-item-content\" style={style.container}>\n                    <RichTextParser style={textDivStyle}>{text}</RichTextParser>\n                </div>\n            </>;\n  };\n\n  let textItem;\n\n  if (isEditMode(dashboardMode)) {\n    textItem = editItem;\n  } else if (dashboardMode === PRINT_LAYOUT) {\n    textItem = printItem;\n  } else {\n    textItem = viewItem;\n  }\n\n  return <>{textItem()}</>;\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const isPrintPreview = sGetIsPrinting(state);\n  let items;\n\n  if (isPrintPreview) {\n    items = sGetPrintDashboardItems(state);\n  } else if (isEditMode(ownProps.dashboardMode)) {\n    items = sGetEditDashboardItems(state);\n  } else {\n    items = sGetDashboardItems(state);\n  }\n\n  const item = items.find(item => item.id === ownProps.item.id);\n  return {\n    text: item ? item.text : ''\n  };\n};\n\nTextItem.propTypes = {\n  acUpdateDashboardItem: PropTypes.func,\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  text: PropTypes.string\n};\nexport default connect(mapStateToProps, {\n  acUpdateDashboardItem\n})(TextItem);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport Line from '../../../widgets/Line';\nimport { FILTER_ORG_UNIT } from '../../../actions/itemFilters';\nimport { sGetItemFiltersRoot, DEFAULT_STATE_ITEM_FILTERS } from '../../../reducers/itemFilters';\nimport { EDIT, isEditMode } from '../../Dashboard/dashboardModes';\n\nconst getIframeSrc = (appDetails, item, itemFilters) => {\n  let iframeSrc = `${appDetails.launchUrl}?dashboardItemId=${item.id}`;\n\n  if (itemFilters[FILTER_ORG_UNIT] && itemFilters[FILTER_ORG_UNIT].length) {\n    const ouIds = itemFilters[FILTER_ORG_UNIT].map(ouFilter => ouFilter.path.split('/').slice(-1)[0]);\n    iframeSrc += `&userOrgUnit=${ouIds.join(',')}`;\n  }\n\n  return iframeSrc;\n};\n\nconst AppItem = ({\n  dashboardMode,\n  item,\n  itemFilters\n}, context) => {\n  let appDetails;\n  const appKey = item.appKey;\n\n  if (appKey) {\n    appDetails = context.d2.system.installedApps.find(app => app.key === appKey);\n  }\n\n  const hideTitle = appDetails?.settings?.dashboardWidget?.hideTitle && dashboardMode !== EDIT;\n  return appDetails && appDetails.name && appDetails.launchUrl ? <>\n            {!hideTitle && <>\n                    <ItemHeader title={appDetails.name} itemId={item.id} dashboardMode={dashboardMode} isShortened={item.shortened} />\n                    <Line />\n                </>}\n            <iframe title={appDetails.name} src={getIframeSrc(appDetails, item, itemFilters)} className={!hideTitle ? 'dashboard-item-content' : 'dashboard-item-content-hidden-title'} style={{\n      border: 'none'\n    }} />\n        </> : <>\n            <ItemHeader title={`${appKey} app not found`} />\n            <Line />\n            <div className=\"dashboard-item-content\" style={{\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      height: '90%'\n    }}>\n                <NotInterestedIcon color=\"disabled\" disabled style={{\n        width: 100,\n        height: 100,\n        align: 'center'\n      }} />\n            </div>\n        </>;\n};\n\nAppItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object\n};\nAppItem.contextTypes = {\n  d2: PropTypes.object\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const itemFilters = !isEditMode(ownProps.dashboardMode) ? sGetItemFiltersRoot(state) : DEFAULT_STATE_ITEM_FILTERS;\n  return {\n    itemFilters\n  };\n};\n\nexport default connect(mapStateToProps)(AppItem);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { colors } from '@dhis2/ui';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nconst style = {\n  margin: '21px 28px',\n  fontSize: '14px',\n  lineHeight: '18px',\n  color: colors.grey600\n};\n\nconst SpacerItem = props => {\n  return <>\n            <ItemHeader title={i18n.t('Spacer')} itemId={props.item.id} dashboardMode={props.dashboardMode} isShortened={props.item.shortened} />\n            <p style={style}>\n                {i18n.t('Use a spacer to create empty vertical space between other dashboard items.')}\n            </p>\n        </>;\n};\n\nSpacerItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object\n};\nexport default SpacerItem;","import React from 'react';\n\nconst PageBreakItem = () => <div />;\n\nexport default PageBreakItem;","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { sGetSelectedId, sGetSelectedShowDescription } from '../../../reducers/selected';\nimport { sGetDashboardById, EMPTY_DASHBOARD } from '../../../reducers/dashboards';\nimport { sGetNamedItemFilters } from '../../../reducers/itemFilters';\nimport { sGetIsEditing } from '../../../reducers/editDashboard';\nimport { sGetPrintDashboardName, sGetPrintDashboardDescription } from '../../../reducers/printDashboard';\nimport classes from './styles/Item.module.css';\n\nconst PrintTitlePageItem = ({\n  name,\n  description,\n  itemFilters,\n  showDescription\n}) => {\n  const getItemFilterList = () => {\n    const listItems = itemFilters.map(({\n      name,\n      values\n    }) => <li className={classes.filterListItem} key={name}>\n                {name}: {values.map(val => val.name).join(', ')}\n            </li>);\n    return <ul className={classes.filterList}>{listItems}</ul>;\n  };\n\n  return <div className={classes.titlePage}>\n            <p className={classes.name}>{name}</p>\n            {showDescription && description && <p className={classes.description}>{description}</p>}\n            {itemFilters.length > 0 && <>\n                    <p className={classes.filterTitle}>\n                        {i18n.t('Filters applied')}\n                    </p>\n                    {getItemFilterList()}\n                </>}\n        </div>;\n};\n\nPrintTitlePageItem.propTypes = {\n  description: PropTypes.string,\n  itemFilters: PropTypes.array,\n  name: PropTypes.string,\n  showDescription: PropTypes.bool\n};\nPrintTitlePageItem.defaultProps = {\n  description: '',\n  name: '',\n  showDescription: false\n};\n\nconst mapStateToProps = state => {\n  const id = sGetSelectedId(state);\n  const isEditMode = sGetIsEditing(state);\n  const viewDashboard = sGetDashboardById(state, id) || EMPTY_DASHBOARD;\n  const name = isEditMode ? sGetPrintDashboardName(state) || i18n.t('Untitled dashboard') : viewDashboard.displayName;\n  const description = isEditMode ? sGetPrintDashboardDescription(state) : viewDashboard.displayDescription;\n  return {\n    name,\n    description,\n    itemFilters: sGetNamedItemFilters(state),\n    showDescription: sGetSelectedShowDescription(state)\n  };\n};\n\nexport default connect(mapStateToProps)(PrintTitlePageItem);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport VisualizationItem from './VisualizationItem/Item';\nimport MessagesItem from './MessagesItem/Item';\nimport NotSupportedItem from './NotSupportedItem/Item';\nimport ListItem from './ListItem/Item';\nimport TextItem from './TextItem/Item';\nimport AppItem from './AppItem/Item';\nimport SpacerItem from './SpacerItem/Item';\nimport PageBreakItem from './PageBreakItem/Item';\nimport PrintTitlePageItem from './PrintTitlePageItem/Item';\nimport { APP, VISUALIZATION, REPORT_TABLE, CHART, MAP, EVENT_CHART, EVENT_REPORT, MESSAGES, REPORTS, RESOURCES, USERS, TEXT, SPACER, PAGEBREAK, PRINT_TITLE_PAGE } from '../../modules/itemTypes';\n\nconst getGridItem = type => {\n  switch (type) {\n    case VISUALIZATION:\n    case REPORT_TABLE:\n    case CHART:\n    case MAP:\n    case EVENT_CHART:\n    case EVENT_REPORT:\n      return VisualizationItem;\n\n    case MESSAGES:\n      return MessagesItem;\n\n    case REPORTS:\n    case RESOURCES:\n    case USERS:\n      return ListItem;\n\n    case TEXT:\n      return TextItem;\n\n    case SPACER:\n      return SpacerItem;\n\n    case APP:\n      return AppItem;\n\n    case PAGEBREAK:\n      return PageBreakItem;\n\n    case PRINT_TITLE_PAGE:\n      return PrintTitlePageItem;\n\n    default:\n      return NotSupportedItem;\n  }\n};\n\nexport const Item = props => {\n  const GridItem = getGridItem(props.item.type);\n  return <GridItem item={props.item} dashboardMode={props.dashboardMode} onToggleItemExpanded={props.onToggleItemExpanded} />;\n};\nItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  onToggleItemExpanded: PropTypes.func\n};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash/debounce';\nimport pick from 'lodash/pick';\nconst defaultDebounceMs = 100;\nconst defaultBufferFactor = 0.25;\n\nclass ProgressiveLoadingContainer extends Component {\n  static propTypes = {\n    children: PropTypes.node.isRequired,\n    bufferFactor: PropTypes.number,\n    className: PropTypes.string,\n    debounceMs: PropTypes.number,\n    style: PropTypes.object\n  };\n  static defaultProps = {\n    debounceMs: defaultDebounceMs,\n    bufferFactor: defaultBufferFactor\n  };\n  state = {\n    shouldLoad: false\n  };\n  containerRef = null;\n  shouldLoadHandler = null;\n  handlerOptions = {\n    passive: true\n  };\n\n  checkShouldLoad() {\n    if (!this.containerRef) {\n      return;\n    }\n\n    const bufferPx = this.props.bufferFactor * window.innerHeight;\n    const rect = this.containerRef.getBoundingClientRect();\n\n    if (rect.bottom > -bufferPx && rect.top < window.innerHeight + bufferPx) {\n      this.setState({\n        shouldLoad: true\n      });\n      this.removeHandler();\n    }\n  }\n\n  registerHandler() {\n    this.shouldLoadHandler = debounce(() => this.checkShouldLoad(), this.props.debounceMs);\n    document.getElementsByClassName('dashboard-wrapper')[0]?.addEventListener('scroll', this.shouldLoadHandler, this.handlerOptions);\n  }\n\n  removeHandler() {\n    document.getElementsByClassName('dashboard-wrapper')[0]?.removeEventListener('scroll', this.shouldLoadHandler, this.handlerOptions);\n  }\n\n  componentDidMount() {\n    this.registerHandler();\n    this.checkShouldLoad();\n  }\n\n  componentWillUnmount() {\n    this.removeHandler();\n  }\n\n  render() {\n    const {\n      children,\n      className,\n      style,\n      ...props\n    } = this.props;\n    const {\n      shouldLoad\n    } = this.state;\n    const eventProps = pick(props, ['onMouseDown', 'onTouchStart', 'onMouseUp', 'onTouchEnd']);\n    return <div ref={ref => this.containerRef = ref} style={style} className={className} data-test={`dashboarditem-${props.itemId}`} {...eventProps}>\n                {shouldLoad && children}\n            </div>;\n  }\n\n}\n\nexport default ProgressiveLoadingContainer;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ReactGridLayout from 'react-grid-layout';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport { acUpdateDashboardLayout } from '../../actions/editDashboard';\nimport { Item } from '../Item/Item';\nimport { resize as pluginResize } from '../Item/VisualizationItem/Visualization/plugin';\nimport { isVisualizationType } from '../../modules/itemTypes';\nimport { GRID_ROW_HEIGHT, GRID_COMPACT_TYPE, MARGIN, getGridColumns, hasShape, onItemResize } from './gridUtil';\nimport { orArray } from '../../modules/util';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\nimport './ItemGrid.css';\nimport { sGetSelectedId, sGetSelectedIsLoading } from '../../reducers/selected';\nimport { sGetEditDashboardRoot, sGetEditDashboardItems } from '../../reducers/editDashboard';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport ProgressiveLoadingContainer from '../Item/ProgressiveLoadingContainer';\nimport { VIEW, EDIT } from '../Dashboard/dashboardModes'; // Component\n\nconst EXPANDED_HEIGHT = 17; // this is set in the .dashboard-item-content css\n\nexport const ITEM_CONTENT_PADDING_BOTTOM = 4;\nexport class ItemGrid extends Component {\n  state = {\n    expandedItems: {}\n  };\n  onToggleItemExpanded = clickedId => {\n    const isExpanded = typeof this.state.expandedItems[clickedId] === 'boolean' ? this.state.expandedItems[clickedId] : false;\n    const expandedItems = { ...this.state.expandedItems\n    };\n    expandedItems[clickedId] = !isExpanded;\n    this.setState({\n      expandedItems\n    });\n  };\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.edit) {\n      this.setState({\n        expandedItems: {}\n      });\n    }\n  }\n\n  onLayoutChange = newLayout => {\n    if (this.props.edit) {\n      this.props.acUpdateDashboardLayout(newLayout);\n    }\n  };\n  onResizeStop = (layout, oldItem, newItem) => {\n    onItemResize(newItem.i);\n    const dashboardItem = this.props.dashboardItems.find(item => item.id === newItem.i); // call resize on the item component if it's a plugin type\n\n    if (dashboardItem && isVisualizationType(dashboardItem)) {\n      pluginResize(dashboardItem);\n    }\n  };\n  adjustHeightForExpanded = dashboardItem => {\n    const expandedItem = this.state.expandedItems[dashboardItem.id];\n\n    if (expandedItem && expandedItem === true) {\n      return Object.assign({}, dashboardItem, {\n        h: dashboardItem.h + EXPANDED_HEIGHT\n      });\n    }\n\n    return dashboardItem;\n  };\n  getItemComponent = item => {\n    const itemClassNames = [item.type, this.props.edit ? 'edit' : 'view', `reactgriditem-${item.id}`].join(' ');\n    return <ProgressiveLoadingContainer key={item.i} className={itemClassNames} itemId={item.id}>\n                <Item item={item} dashboardMode={this.props.edit ? EDIT : VIEW} onToggleItemExpanded={this.onToggleItemExpanded} />\n            </ProgressiveLoadingContainer>;\n  };\n  getItemComponents = items => items.map(item => this.getItemComponent(item));\n\n  render() {\n    const {\n      edit,\n      isLoading,\n      dashboardItems\n    } = this.props;\n\n    if (!isLoading && !dashboardItems.length) {\n      return <NoContentMessage text={i18n.t('There are no items on this dashboard')} />;\n    }\n\n    const items = edit ? dashboardItems : dashboardItems.map(this.adjustHeightForExpanded);\n    return <div className=\"grid-wrapper\">\n                {isLoading ? <Layer translucent>\n                        <CenteredContent>\n                            <CircularLoader />\n                        </CenteredContent>\n                    </Layer> : null}\n                <ReactGridLayout onLayoutChange={this.onLayoutChange} onResizeStop={this.onResizeStop} className=\"layout\" layout={items} margin={MARGIN} cols={getGridColumns()} rowHeight={GRID_ROW_HEIGHT} width={window.innerWidth} compactType={GRID_COMPACT_TYPE} isDraggable={edit} isResizable={edit} draggableCancel=\"input,textarea\">\n                    {this.getItemComponents(items)}\n                </ReactGridLayout>\n            </div>;\n  }\n\n}\nItemGrid.propTypes = {\n  acUpdateDashboardLayout: PropTypes.func,\n  dashboardItems: PropTypes.array,\n  edit: PropTypes.bool,\n  isLoading: PropTypes.bool\n};\nItemGrid.defaultProps = {\n  dashboardItems: []\n}; // Container\n\nconst mapStateToProps = (state, ownProps) => {\n  const selectedDashboard = ownProps.edit ? sGetEditDashboardRoot(state) : sGetDashboardById(state, sGetSelectedId(state));\n  const dashboardItems = ownProps.edit ? sGetEditDashboardItems(state) : sGetDashboardItems(state);\n  return {\n    isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n    dashboardItems\n  };\n};\n\nconst mapDispatchToProps = {\n  acUpdateDashboardLayout\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n  const validItems = orArray(stateProps.dashboardItems).filter(hasShape);\n  return { ...dispatchProps,\n    edit: ownProps.edit,\n    isLoading: stateProps.isLoading,\n    dashboardItems: validItems,\n    onItemResize\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps, mergeProps)(ItemGrid);","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { colors } from '@dhis2/ui';\nconst styles = {\n  badgeContainer: {\n    margin: '2px',\n    padding: '0 16px',\n    borderRadius: '4px',\n    color: colors.white,\n    backgroundColor: '#212934',\n    height: 36,\n    display: 'flex',\n    alignItems: 'center'\n  },\n  badge: {\n    fontSize: '13px',\n    cursor: 'pointer',\n    whiteSpace: 'nowrap'\n  },\n  badgeRemove: {\n    fontSize: '12px',\n    textDecoration: 'underline',\n    marginLeft: '24px',\n    cursor: 'pointer'\n  }\n};\n\nclass FilterBadge extends Component {\n  onClick = id => () => this.props.onClick(id);\n  onRemove = id => () => this.props.onRemove(id);\n\n  render() {\n    const {\n      data\n    } = this.props;\n    return <div style={styles.badgeContainer} data-test=\"dashboard-filter-badge\">\n                <span style={styles.badge} onClick={this.onClick(data.id)}>\n                    {`${data.name}: ${data.values.length > 1 ? i18n.t('{{count}} selected', {\n          count: data.values.length\n        }) : data.values[0].name}`}\n                </span>\n                <span style={styles.badgeRemove} onClick={this.onRemove(data.id)}>\n                    {i18n.t('Remove')}\n                </span>\n            </div>;\n  }\n\n}\n\nFilterBadge.propTypes = {\n  data: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired,\n  onRemove: PropTypes.func.isRequired\n};\nFilterBadge.defaultProps = {\n  onClick: Function.prototype,\n  onRemove: Function.prototype\n};\nexport default FilterBadge;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport FilterBadge from './FilterBadge';\nimport { sGetNamedItemFilters } from '../../reducers/itemFilters';\nimport { acRemoveItemFilter } from '../../actions/itemFilters';\nimport { acSetActiveModalDimension } from '../../actions/activeModalDimension';\nimport classes from './styles/FilterBar.module.css';\nexport class FilterBar extends Component {\n  onBadgeRemove = id => {\n    this.props.removeItemFilter(id);\n  };\n  onBadgeClick = id => {\n    this.props.setActiveModalDimension({\n      id,\n      name: this.props.filters.find(item => item.id === id).name\n    });\n  };\n\n  render() {\n    const {\n      filters\n    } = this.props;\n    return filters.length ? // the 3 is calculated so that the FilterBar has the same vertical position as the TitleBar in relation to the ControlBar\n    <div className={classes.bar} style={{\n      top: 3\n    }}>\n                {filters.map(filter => <FilterBadge key={filter.id} data={filter} onClick={this.onBadgeClick} onRemove={this.onBadgeRemove} />)}\n            </div> : null;\n  }\n\n}\nFilterBar.propTypes = {\n  filters: PropTypes.array.isRequired,\n  removeItemFilter: PropTypes.func.isRequired,\n  setActiveModalDimension: PropTypes.func\n};\nFilterBar.defaultProps = {\n  filters: [],\n  removeItemFIlter: Function.prototype\n};\n\nconst mapStateToProps = state => ({\n  filters: sGetNamedItemFilters(state)\n});\n\nexport default connect(mapStateToProps, {\n  setActiveModalDimension: acSetActiveModalDimension,\n  removeItemFilter: acRemoveItemFilter\n})(FilterBar);","export const SET_WINDOW_HEIGHT = 'SET_WINDOW_HEIGHT';\nexport const DEFAULT_STATE_WINDOW_HEIGHT = window.innerHeight;\nexport default ((state = DEFAULT_STATE_WINDOW_HEIGHT, action) => {\n  switch (action.type) {\n    case SET_WINDOW_HEIGHT:\n      {\n        return action.value;\n      }\n\n    default:\n      return state;\n  }\n});\nexport const sGetWindowHeight = state => state.windowHeight;","import { generateUid } from 'd2/uid';\nimport { SET_PRINT_DASHBOARD, CLEAR_PRINT_DASHBOARD, SET_PRINT_DASHBOARD_LAYOUT, ADD_PRINT_DASHBOARD_ITEM, REMOVE_PRINT_DASHBOARD_ITEM, UPDATE_PRINT_DASHBOARD_ITEM } from '../reducers/printDashboard';\nimport { NEW_ITEM_SHAPE, getGridItemProperties, getPageBreakItemShape, getPrintTitlePageItemShape } from '../components/ItemGrid/gridUtil';\nimport { itemTypeMap, PAGEBREAK } from '../modules/itemTypes'; // actions\n\nexport const acSetPrintDashboard = (dashboard, items) => {\n  const val = { ...dashboard,\n    dashboardItems: items\n  };\n  return {\n    type: SET_PRINT_DASHBOARD,\n    value: val\n  };\n};\nexport const acClearPrintDashboard = () => ({\n  type: CLEAR_PRINT_DASHBOARD\n});\nexport const acUpdatePrintDashboardLayout = value => ({\n  type: SET_PRINT_DASHBOARD_LAYOUT,\n  value\n});\nexport const acAddPrintDashboardItem = item => {\n  const type = item.type;\n  delete item.type;\n  const itemPropName = itemTypeMap[type].propName;\n  const id = generateUid();\n  const gridItemProperties = getGridItemProperties(id);\n  let shape;\n\n  if (type === PAGEBREAK) {\n    const yPos = item.yPos || 0;\n    shape = getPageBreakItemShape(yPos, item.isStatic);\n  } else {\n    shape = getPrintTitlePageItemShape(item.isOneItemPerPage);\n  }\n\n  return {\n    type: ADD_PRINT_DASHBOARD_ITEM,\n    value: {\n      id,\n      type,\n      position: item.position || null,\n      [itemPropName]: item.content,\n      ...NEW_ITEM_SHAPE,\n      ...gridItemProperties,\n      ...shape\n    }\n  };\n};\nexport const acRemovePrintDashboardItem = value => ({\n  type: REMOVE_PRINT_DASHBOARD_ITEM,\n  value\n});\nexport const acUpdatePrintDashboardItem = item => ({\n  type: UPDATE_PRINT_DASHBOARD_ITEM,\n  value: item\n});","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport ViewTitleBar from '../TitleBar/ViewTitleBar';\nimport ItemGrid from '../ItemGrid/ItemGrid';\nimport FilterBar from '../FilterBar/FilterBar';\nimport DashboardsBar from '../ControlBar/DashboardsBar';\nimport { sGetIsEditing } from '../../reducers/editDashboard';\nimport { sGetIsPrinting } from '../../reducers/printDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { sGetWindowHeight } from '../../reducers/windowHeight';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { acClearEditDashboard } from '../../actions/editDashboard';\nimport { acClearPrintDashboard } from '../../actions/printDashboard';\nimport { getControlBarHeight, HEADERBAR_HEIGHT } from '../ControlBar/controlBarDimensions';\nexport const ViewDashboard = props => {\n  useEffect(() => {\n    if (props.dashboardIsEditing) {\n      props.clearEditDashboard();\n    } else if (props.dashboardIsPrinting) {\n      props.clearPrintDashboard();\n    }\n  }, [props.dashboardIsEditing, props.dashboardIsPrinting]);\n  useEffect(() => {\n    document.querySelector('.dashboard-wrapper')?.scroll(0, 0);\n  }, [props.selectedId]);\n  const height = props.windowHeight - HEADERBAR_HEIGHT - getControlBarHeight(props.controlBarRows);\n  return <>\n            <DashboardsBar />\n            <div className=\"dashboard-wrapper\" style={{\n      height\n    }}>\n                <ViewTitleBar />\n                <FilterBar />\n                <ItemGrid edit={false} />\n            </div>\n        </>;\n};\nViewDashboard.propTypes = {\n  clearEditDashboard: PropTypes.func,\n  clearPrintDashboard: PropTypes.func,\n  controlBarRows: PropTypes.number,\n  dashboardIsEditing: PropTypes.bool,\n  dashboardIsPrinting: PropTypes.bool,\n  selectedId: PropTypes.string,\n  windowHeight: PropTypes.number\n};\n\nconst mapStateToProps = state => {\n  return {\n    dashboardIsEditing: sGetIsEditing(state),\n    dashboardIsPrinting: sGetIsPrinting(state),\n    controlBarRows: sGetControlBarUserRows(state),\n    selectedId: sGetSelectedId(state),\n    windowHeight: sGetWindowHeight(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  clearEditDashboard: acClearEditDashboard,\n  clearPrintDashboard: acClearPrintDashboard\n})(ViewDashboard);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { InputField } from '@dhis2/ui';\n\nconst ItemSearchField = props => <InputField name=\"Dashboard item search\" label={i18n.t('Search for items to add to this dashboard')} type=\"text\" onChange={props.onChange} onFocus={props.onFocus} value={props.value} dataTest=\"item-search\" />;\n\nItemSearchField.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n  onFocus: PropTypes.func\n};\nexport default ItemSearchField;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { MenuItem, colors } from '@dhis2/ui';\nimport classes from './styles/HeaderMenuItem.module.css';\n\nconst HeaderMenuItem = ({\n  title\n}) => <MenuItem className={classes.item} dense key={title} disabled label={<span style={{\n  color: colors.grey800,\n  fontWeight: '600'\n}}>\n                {title}\n            </span>} />;\n\nHeaderMenuItem.propTypes = {\n  title: PropTypes.string.isRequired\n};\nexport default HeaderMenuItem;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst LaunchIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\" fill={colors.grey600} viewBox=\"0 0 24 24\">\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z\" />\n    </svg>;\n\nLaunchIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default LaunchIcon;","import React from 'react';\nimport { MenuItem, colors } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport { visTypeIcons } from '@dhis2/analytics';\nimport { getItemIcon, VISUALIZATION } from '../../modules/itemTypes';\nimport LaunchIcon from '../../icons/Launch';\nimport classes from './styles/ContentMenuItem.module.css';\n\nconst LaunchLink = ({\n  url\n}) => <a onClick={e => e.stopPropagation()} className={classes.launchLink} target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n        <LaunchIcon />\n    </a>;\n\nLaunchLink.propTypes = {\n  url: PropTypes.string\n};\n\nconst InsertButton = () => <button className={classes.buttonInsert}>{i18n.t('Insert')}</button>;\n\nconst ContentMenuItem = ({\n  type,\n  name,\n  onInsert,\n  url,\n  visType\n}) => {\n  const ItemIcon = getItemIcon(type);\n  const renderedItemIcon = type === VISUALIZATION ? visTypeIcons[visType] : <ItemIcon style={{\n    fill: colors.grey600\n  }} />;\n  return <MenuItem dense onClick={onInsert} label={<div className={classes.menuItem}>\n                    <div className={classes.label}>\n                        <span style={{\n        marginRight: '6px'\n      }}>\n                            {renderedItemIcon}\n                        </span>\n                        <span>{name}</span>\n                        {url ? <LaunchLink url={url} /> : null}\n                    </div>\n                    <InsertButton />\n                </div>} dataTest={`menu-item-${name}`} />;\n};\n\nContentMenuItem.propTypes = {\n  name: PropTypes.string,\n  type: PropTypes.string,\n  url: PropTypes.string,\n  visType: PropTypes.string,\n  onInsert: PropTypes.func\n};\nexport default ContentMenuItem;","import { sGetEditDashboardRoot } from '../../reducers/editDashboard';\nimport { itemTypeMap } from '../../modules/itemTypes';\nimport { acAddDashboardItem, acUpdateDashboardItem } from '../../actions/editDashboard';\nexport const tAddListItemContent = (type, content) => (dispatch, getState) => {\n  const state = getState();\n  const listItemType = itemTypeMap[type].propName;\n  const dashboardItems = sGetEditDashboardRoot(state).dashboardItems;\n  const dashboardItemIndex = dashboardItems.findIndex(item => item.type === type);\n  let dashboardItem; // Reports/Resources/Users dashboard item type already present in dashboard\n\n  if (dashboardItemIndex > -1) {\n    dashboardItem = dashboardItems[dashboardItemIndex];\n    dashboardItem[listItemType].push(content);\n    dispatch(acUpdateDashboardItem(dashboardItem));\n  } else {\n    dashboardItem = {\n      type: type,\n      content: [content]\n    };\n    dispatch(acAddDashboardItem(dashboardItem));\n  }\n};","import i18n from '@dhis2/d2-i18n';\nimport { VISUALIZATION, MAP, EVENT_CHART, EVENT_REPORT, USERS, REPORTS, RESOURCES, APP, MESSAGES, TEXT, SPACER } from '../../modules/itemTypes';\nexport const singleItems = [{\n  id: 'additional',\n  header: i18n.t('Additional items'),\n  items: [{\n    type: TEXT,\n    name: i18n.t('Text box'),\n    content: ''\n  }, {\n    type: MESSAGES,\n    name: i18n.t('Messages'),\n    content: 'true'\n  }, {\n    type: SPACER,\n    name: i18n.t('Spacer'),\n    content: ''\n  }]\n}]; // categorizedItems are grouped in the item selector menu\n\nexport const categorizedItems = [VISUALIZATION, MAP, EVENT_REPORT, EVENT_CHART, USERS, REPORTS, RESOURCES, APP]; // listItemTypes are included in a single dashboard item\n\nexport const listItemTypes = [REPORTS, RESOURCES, USERS];","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { MenuItem, Divider } from '@dhis2/ui';\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\nimport { tAddListItemContent } from './actions';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\nimport { getItemUrl, APP, VISUALIZATION } from '../../modules/itemTypes';\nimport { categorizedItems, listItemTypes } from './selectableItems';\nimport classes from './styles/CategorizedMenuGroup.module.css';\n\nclass CategorizedMenuGroup extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      seeMore: false\n    };\n  }\n\n  addItem = item => () => {\n    const {\n      type,\n      acAddDashboardItem,\n      tAddListItemContent\n    } = this.props;\n\n    if (type === APP) {\n      acAddDashboardItem({\n        type,\n        content: item.key\n      });\n    } else {\n      const newItem = {\n        id: item.id,\n        name: item.displayName || item.name\n      };\n\n      if (listItemTypes.includes(type)) {\n        tAddListItemContent(type, newItem);\n      } else {\n        acAddDashboardItem({\n          type,\n          content: newItem\n        });\n      }\n    }\n  };\n  toggleSeeMore = () => {\n    this.setState({\n      seeMore: !this.state.seeMore\n    });\n    this.props.onChangeItemsLimit(this.props.type);\n  };\n\n  render() {\n    const {\n      title,\n      type,\n      items,\n      hasMore\n    } = this.props;\n    return <>\n                <HeaderMenuItem title={title} />\n                {items.map(item => {\n        const itemUrl = getItemUrl(type, item, this.context.d2);\n        return <ContentMenuItem key={item.id || item.key} type={type} visType={type === VISUALIZATION ? item.type : type} name={item.displayName || item.name} onInsert={this.addItem(item)} url={itemUrl} />;\n      })}\n                {hasMore ? <MenuItem dense key={`showmore${title}`} onClick={this.toggleSeeMore} label={<button className={classes.showMoreButton}>\n                                {this.state.seeMore ? i18n.t('Show fewer') : i18n.t('Show more')}\n                            </button>} /> : null}\n                <Divider margin=\"8px 0px\" />\n            </>;\n  }\n\n}\n\nCategorizedMenuGroup.propTypes = {\n  items: PropTypes.array.isRequired,\n  title: PropTypes.string.isRequired,\n  type: PropTypes.oneOf(categorizedItems).isRequired,\n  onChangeItemsLimit: PropTypes.func.isRequired,\n  acAddDashboardItem: PropTypes.func,\n  hasMore: PropTypes.bool,\n  tAddListItemContent: PropTypes.func\n};\nCategorizedMenuGroup.contextTypes = {\n  d2: PropTypes.object.isRequired\n};\nexport default connect(null, {\n  acAddDashboardItem,\n  tAddListItemContent\n})(CategorizedMenuGroup);","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\nexport const SinglesMenuGroup = ({\n  acAddDashboardItem,\n  category\n}) => {\n  const addToDashboard = ({\n    type,\n    content\n  }) => () => {\n    acAddDashboardItem({\n      type,\n      content\n    });\n  };\n\n  return <>\n            <HeaderMenuItem title={category.header} />\n            {category.items.map(item => <ContentMenuItem key={item.type} type={item.type} name={item.name} onInsert={addToDashboard(item)} />)}\n        </>;\n};\nSinglesMenuGroup.propTypes = {\n  acAddDashboardItem: PropTypes.func,\n  category: PropTypes.object\n};\nexport default connect(null, {\n  acAddDashboardItem\n})(SinglesMenuGroup);","import React, { useState, useEffect, createRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { Popover, FlyoutMenu } from '@dhis2/ui';\nimport ItemSearchField from './ItemSearchField';\nimport CategorizedMenuGroup from './CategorizedMenuGroup';\nimport SinglesMenuGroup from './SinglesMenuGroup';\nimport { singleItems, categorizedItems } from './selectableItems';\nimport { itemTypeMap, getDefaultItemCount } from '../../modules/itemTypes';\nimport classes from './styles/ItemSelector.module.css'; // eslint-disable-next-line no-empty-pattern\n\nconst ItemSelector = ({}, context) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [filter, setFilter] = useState('');\n  const [items, setItems] = useState(null);\n  const [maxOptions, setMaxOptions] = useState(new Set());\n  useEffect(() => {\n    let queryString = '?count=11';\n\n    if ([...maxOptions.values()].length) {\n      queryString += '&max=' + [...maxOptions.values()].join('&max=');\n    }\n\n    const filterStr = filter ? `/${filter}` : '';\n    context.d2.Api.getApi().get(`dashboards/q${filterStr}${queryString}`).then(response => setItems(response)).catch(console.error);\n  }, [filter, maxOptions]);\n\n  const closeMenu = () => {\n    setIsOpen(false);\n    setFilter('');\n    setMaxOptions(new Set());\n  };\n\n  const openMenu = () => setIsOpen(true);\n\n  const getCategorizedMenuGroups = () => {\n    return categorizedItems.filter(type => {\n      const itemType = itemTypeMap[type];\n      return items && items[itemType.endPointName];\n    }).map(type => {\n      const itemType = itemTypeMap[type];\n      const itemCount = getDefaultItemCount(type);\n      const allItems = items[itemType.endPointName];\n      const hasMore = allItems.length > itemCount;\n      const displayItems = maxOptions.has(itemType.id) ? allItems : allItems.slice(0, itemCount);\n      return <CategorizedMenuGroup key={type} type={type} title={itemType.pluralTitle} items={displayItems} onChangeItemsLimit={updateMaxOptions} hasMore={hasMore} />;\n    });\n  };\n\n  const getSinglesMenuGroups = () => singleItems.map(category => <SinglesMenuGroup key={category.id} category={category} />);\n\n  const getMenuGroups = () => getCategorizedMenuGroups().concat(getSinglesMenuGroups());\n\n  const updateMaxOptions = type => {\n    if (type) {\n      const options = new Set(maxOptions);\n      options.has(type) ? options.delete(type) : options.add(type);\n      setMaxOptions(options);\n    } else {\n      setMaxOptions(new Set());\n    }\n  };\n\n  const updateFilter = ({\n    value\n  }) => setFilter(value);\n\n  const inputRef = createRef();\n  return <>\n            <span ref={inputRef}>\n                <ItemSearchField value={filter} onChange={updateFilter} onFocus={openMenu} />\n            </span>\n            {isOpen && <Popover reference={inputRef} placement=\"bottom-start\" onClickOutside={closeMenu} arrow={false} maxWidth={700}>\n                    <FlyoutMenu className={classes.menu} dataTest=\"item-menu\" maxWidth=\"700px\">\n                        {getMenuGroups()}\n                    </FlyoutMenu>\n                </Popover>}\n        </>;\n};\n\nItemSelector.contextTypes = {\n  d2: PropTypes.object.isRequired\n};\nexport default ItemSelector;","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { InputField, TextAreaField } from '@dhis2/ui';\nimport ItemSelector from '../ItemSelector/ItemSelector';\nimport { acSetDashboardTitle, acSetDashboardDescription } from '../../actions/editDashboard';\nimport { orObject } from '../../modules/util';\nimport { sGetEditDashboardRoot } from '../../reducers/editDashboard';\nimport classes from './styles/EditTitleBar.module.css';\nexport const EditTitleBar = ({\n  name,\n  description,\n  onChangeTitle,\n  onChangeDescription\n}) => {\n  const updateTitle = (_, e) => {\n    onChangeTitle(e.target.value);\n  };\n\n  const updateDescription = (_, e) => {\n    onChangeDescription(e.target.value);\n  };\n\n  return <section className={classes.section}>\n            <div className={classes.titleDescription}>\n                <InputField className={classes.title} name=\"Dashboard title input\" label={i18n.t('Dashboard title')} type=\"text\" onChange={updateTitle} value={name} placeholder={i18n.t('Untitled dashboard')} dataTest=\"dashboard-title-input\" />\n                <TextAreaField className={classes.description} name=\"Dashboard description input\" label={i18n.t('Dashboard description')} onChange={updateDescription} value={description} dataTest=\"dashboard-description-input\" />\n            </div>\n            <div className={classes.itemSelector}>\n                <ItemSelector />\n            </div>\n        </section>;\n};\nEditTitleBar.propTypes = {\n  onChangeDescription: PropTypes.func.isRequired,\n  onChangeTitle: PropTypes.func.isRequired,\n  description: PropTypes.string,\n  name: PropTypes.string\n};\nEditTitleBar.defaultProps = {\n  name: '',\n  description: ''\n};\n\nconst mapStateToProps = state => {\n  const selectedDashboard = orObject(sGetEditDashboardRoot(state));\n  return {\n    name: selectedDashboard.name,\n    description: selectedDashboard.description\n  };\n};\n\nconst mapDispatchToProps = {\n  onChangeTitle: acSetDashboardTitle,\n  onChangeDescription: acSetDashboardDescription\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(EditTitleBar);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Button, Modal, ModalContent, ModalActions, ButtonStrip, ModalTitle } from '@dhis2/ui';\nimport classes from './styles/ConfirmDeleteDialog.module.css';\nexport const ConfirmDeleteDialog = ({\n  dashboardName,\n  onDeleteConfirmed,\n  onContinueEditing,\n  open\n}) => {\n  const actions = [<Button key=\"cancel\" secondary onClick={onContinueEditing} dataTest=\"cancel-delete-dashboard\">\n            {i18n.t('Cancel')}\n        </Button>, <Button key=\"delete\" destructive onClick={onDeleteConfirmed} dataTest=\"confirm-delete-dashboard\">\n            {i18n.t('Delete')}\n        </Button>];\n  return open && <Modal onClose={onContinueEditing} small position=\"middle\">\n                <ModalTitle>{i18n.t('Delete dashboard')}</ModalTitle>\n                <ModalContent>\n                    <span className={classes.content}>\n                        {i18n.t('Deleting dashboard \"{{ dashboardName }}\" will remove it for all users. This action cannot be undone. Are you sure you want to permanently delete this dashboard?', {\n          dashboardName\n        })}\n                    </span>\n                </ModalContent>\n                <ModalActions>\n                    <ButtonStrip>{actions}</ButtonStrip>\n                </ModalActions>\n            </Modal>;\n};\nConfirmDeleteDialog.propTypes = {\n  dashboardName: PropTypes.string,\n  open: PropTypes.bool,\n  onContinueEditing: PropTypes.func,\n  onDeleteConfirmed: PropTypes.func\n};\nexport default ConfirmDeleteDialog;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport TranslationDialog from '@dhis2/d2-ui-translation-dialog';\nimport { Button, ButtonStrip } from '@dhis2/ui';\nimport ConfirmDeleteDialog from './ConfirmDeleteDialog';\nimport { tSaveDashboard, acClearEditDashboard, acSetPrintPreviewView, acClearPrintPreviewView } from '../../actions/editDashboard';\nimport { acClearPrintDashboard } from '../../actions/printDashboard';\nimport { tDeleteDashboard, acSetDashboardDisplayName } from '../../actions/dashboards';\nimport { sGetEditDashboardRoot, sGetIsNewDashboard, sGetIsPrintPreviewView } from '../../reducers/editDashboard';\nimport { apiFetchDashboard } from '../../api/dashboards';\nimport classes from './styles/EditBar.module.css';\nexport class EditBar extends Component {\n  state = {\n    translationDialogIsOpen: false,\n    dashboardModel: undefined,\n    dashboard: undefined,\n    confirmDeleteDialogOpen: false,\n    redirectUrl: undefined\n  };\n  onConfirmDelete = () => {\n    this.setState({\n      confirmDeleteDialogOpen: true\n    });\n  };\n  onSave = () => {\n    this.props.onSave().then(newId => {\n      this.setState({\n        redirectUrl: `/${newId}`\n      });\n    });\n  };\n  onPrintPreview = () => {\n    if (this.props.isPrintPreviewView) {\n      this.props.clearPrintPreview();\n      this.props.clearPrintDashboard();\n    } else {\n      this.props.showPrintPreview();\n    }\n  };\n  onDiscard = () => {\n    this.props.onDiscardChanges();\n    const redirectUrl = this.props.dashboardId ? `/${this.props.dashboardId}` : '/';\n    this.setState({\n      redirectUrl\n    });\n  };\n  onContinueEditing = () => {\n    this.setState({\n      confirmDeleteDialogOpen: false\n    });\n  };\n  onDeleteConfirmed = () => {\n    this.setState({\n      confirmDeleteDialogOpen: false\n    });\n    this.props.onDelete(this.props.dashboardId).then(() => {\n      this.setState({\n        redirectUrl: '/'\n      });\n    });\n  };\n  onTranslationsSaved = async translations => {\n    if (translations && translations.length) {\n      const dbLocale = await this.context.d2.currentUser.userSettings.get('keyDbLocale');\n      const translation = translations.find(t => t.locale === dbLocale && t.property === 'NAME');\n\n      if (translation && translation.value) {\n        this.props.onTranslate(this.props.dashboardId, translation.value);\n      }\n    }\n  };\n  fetchDashboardModel = () => {\n    if (this.props.dashboardId && !this.state.dashboard) {\n      apiFetchDashboard(this.context.dataEngine, this.props.dashboardId).then(dashboard => this.setState({\n        dashboard\n      }));\n    }\n  };\n\n  componentDidMount() {\n    this.fetchDashboardModel();\n  }\n\n  componentDidUpdate() {\n    this.fetchDashboardModel();\n  }\n\n  toggleTranslationDialog = () => {\n    this.setState({\n      translationDialogIsOpen: !this.state.translationDialogIsOpen\n    });\n  };\n  confirmDeleteDialog = () => this.props.deleteAccess && this.props.dashboardId ? <ConfirmDeleteDialog dashboardName={this.props.dashboardName} onDeleteConfirmed={this.onDeleteConfirmed} onContinueEditing={this.onContinueEditing} open={this.state.confirmDeleteDialogOpen} /> : null;\n  translationDialog = () => this.state.dashboard && this.state.dashboard.id ? <TranslationDialog className=\"translation-dialog\" d2={this.context.d2} open={this.state.translationDialogIsOpen} onRequestClose={this.toggleTranslationDialog} objectToTranslate={{ ...this.state.dashboard,\n    modelDefinition: {\n      name: 'dashboard'\n    }\n  }} fieldsToTranslate={['name', 'description']} onTranslationSaved={this.onTranslationsSaved} onTranslationError={err => console.log('translation update error', err)} /> : null;\n  renderActionButtons = () => <ButtonStrip>\n            <Button primary onClick={this.onSave} dataTest=\"save-dashboard-button\">\n                {i18n.t('Save changes')}\n            </Button>\n            <Button onClick={this.onPrintPreview}>\n                {this.props.isPrintPreviewView ? i18n.t('Exit Print preview') : i18n.t('Print preview')}\n            </Button>\n\n            {this.props.dashboardId && <Button onClick={this.toggleTranslationDialog}>\n                    {i18n.t('Translate')}\n                </Button>}\n            {this.props.dashboardId && this.props.deleteAccess && <Button onClick={this.onConfirmDelete} dataTest=\"delete-dashboard-button\">\n                    {i18n.t('Delete')}\n                </Button>}\n        </ButtonStrip>;\n\n  render() {\n    if (this.state.redirectUrl) {\n      return <Redirect to={this.state.redirectUrl} />;\n    }\n\n    const {\n      updateAccess\n    } = this.props;\n    const discardBtnText = updateAccess ? i18n.t('Exit without saving') : i18n.t('Go to dashboards');\n    return <>\n                <div className={classes.editBar}>\n                    <div className={classes.controls}>\n                        {updateAccess ? this.renderActionButtons() : null}\n                        <Button secondary onClick={this.onDiscard}>\n                            {discardBtnText}\n                        </Button>\n                    </div>\n                </div>\n                {this.translationDialog()}\n                {this.confirmDeleteDialog()}\n            </>;\n  }\n\n}\nEditBar.propTypes = {\n  clearPrintDashboard: PropTypes.func,\n  clearPrintPreview: PropTypes.func,\n  dashboardId: PropTypes.string,\n  dashboardName: PropTypes.string,\n  deleteAccess: PropTypes.bool,\n  isPrintPreviewView: PropTypes.bool,\n  showPrintPreview: PropTypes.func,\n  updateAccess: PropTypes.bool,\n  onDelete: PropTypes.func,\n  onDiscardChanges: PropTypes.func,\n  onSave: PropTypes.func,\n  onTranslate: PropTypes.func\n};\nEditBar.contextTypes = {\n  dataEngine: PropTypes.object,\n  d2: PropTypes.object\n};\n\nconst mapStateToProps = state => {\n  const dashboard = sGetEditDashboardRoot(state);\n  let deleteAccess;\n  let updateAccess;\n\n  if (sGetIsNewDashboard(state)) {\n    deleteAccess = true;\n    updateAccess = true;\n  } else {\n    updateAccess = dashboard.access ? dashboard.access.update : false;\n    deleteAccess = dashboard.access ? dashboard.access.delete : false;\n  }\n\n  return {\n    dashboardId: dashboard.id,\n    dashboardName: dashboard.name,\n    deleteAccess,\n    isPrintPreviewView: sGetIsPrintPreviewView(state),\n    updateAccess\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  clearPrintDashboard: () => dispatch(acClearPrintDashboard()),\n  clearPrintPreview: () => dispatch(acClearPrintPreviewView()),\n  onSave: () => dispatch(tSaveDashboard()).then(id => id),\n  onDelete: id => dispatch(tDeleteDashboard(id)),\n  onDiscardChanges: () => dispatch(acClearEditDashboard()),\n  onTranslate: (id, value) => dispatch(acSetDashboardDisplayName(id, value)),\n  showPrintPreview: () => dispatch(acSetPrintPreviewView())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditBar);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { NoticeBox, CenteredContent } from '@dhis2/ui';\nimport classes from './styles/NotSupportedNotice.module.css';\n\nconst NotSupportedNotice = ({\n  message\n}) => <CenteredContent position=\"top\">\n        <div className={classes.noticeContainer}>\n            <NoticeBox title={i18n.t('Not supported')} warning>\n                {message}\n            </NoticeBox>\n        </div>\n    </CenteredContent>;\n\nNotSupportedNotice.propTypes = {\n  message: PropTypes.string\n};\nexport default NotSupportedNotice;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { a4LandscapeWidthPx } from '../ItemGrid/gridUtil';\nimport classes from './styles/PrintInfo.module.css';\n\nconst PrintInfo = ({\n  isLayout\n}) => {\n  const maxWidth = a4LandscapeWidthPx < window.innerWidth ? a4LandscapeWidthPx : window.innerWidth;\n  const infoHeader = isLayout ? i18n.t('dashboard layout') : i18n.t('one item per page');\n  return <div className={classes.infoWrapper}>\n            <p className={classes.infoHeader}>\n                {`${i18n.t('Print Preview')}: ${infoHeader}`}\n            </p>\n            <div style={{\n      maxWidth\n    }}>\n                <p className={classes.info}>\n                    {`${i18n.t('For best print results')}:`}\n                </p>\n                <div className={classes.info}>\n                    <ul className={classes.infoList}>\n                        <li>{i18n.t('Use Chrome or Edge web browser')}</li>\n                        <li>\n                            {i18n.t('Wait for all dashboard items to load before printing')}\n                        </li>\n                        <li>\n                            {i18n.t('Use A4 landscape paper size and default margin settings in the browser print dialog')}\n                        </li>\n                    </ul>\n                </div>\n            </div>\n            <hr className={classes.divider} />\n        </div>;\n};\n\nPrintInfo.propTypes = {\n  isLayout: PropTypes.bool\n};\nexport default PrintInfo;","import React from 'react';\nimport { colors } from '@dhis2/ui';\n\nconst LessHorizontalIcon = () => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill={colors.grey600} viewBox=\"0 0 24 24\">\n        <path d=\"m13.2928932 6.29289322c.3905243-.39052429 1.0236893-.39052429 1.4142136 0 .3604839.36048396.3882135.92771502.0831886 1.32000622l-.0831886.09420734-4.2921068 4.29289322 4.2921068 4.2928932c.3604839.360484.3882135.927715.0831886 1.3200062l-.0831886.0942074c-.360484.3604839-.927715.3882135-1.3200062.0831886l-.0942074-.0831886-4.99999998-5c-.36048396-.360484-.3882135-.927715-.08318861-1.3200062l.08318861-.0942074z\" />\n    </svg>;\n\nexport default LessHorizontalIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Button } from '@dhis2/ui';\nimport { Link } from 'react-router-dom';\nimport LessHorizontalIcon from '../../icons/LessHorizontal';\nimport { a4LandscapeWidthPx } from '../ItemGrid/gridUtil';\nimport classes from './styles/PrintActionsBar.module.css'; // 42px set in the module css file\n\nexport const PRINT_ACTIONS_BAR_HEIGHT = 42;\n\nconst PrintActionsBar = ({\n  id\n}) => {\n  const width = a4LandscapeWidthPx < window.innerWidth ? a4LandscapeWidthPx : window.innerWidth;\n  return <>\n            <div className={classes.container}>\n                <div className={classes.inner} style={{\n        width\n      }}>\n                    <Link className={classes.link} to={`/${id}`}>\n                        <Button dataTest=\"exit-print-preview\">\n                            <LessHorizontalIcon />\n                            {i18n.t('Exit print preview')}\n                        </Button>\n                    </Link>\n                    <Button onClick={window.print}>{i18n.t('Print')}</Button>\n                </div>\n            </div>\n            <div className={classes.topMargin} />\n        </>;\n};\n\nPrintActionsBar.propTypes = {\n  id: PropTypes.string\n};\nexport default PrintActionsBar;","import sortBy from 'lodash/sortBy';\nimport { orArray } from './util';\nimport { itemTypeMap } from './itemTypes';\nexport const getTransformYPx = elStyle => {\n  if (!elStyle || !elStyle.transform) {\n    return null;\n  } // find valid transforms - those with y pixels\n  // the code is expecting the transform prop to\n  // look like:  translate(10px, 300px)\n\n\n  const transformY = elStyle.transform.split(' ')[1]?.match(/(\\d+)px/);\n\n  if (transformY) {\n    return parseInt(transformY[1]);\n  } else {\n    return null;\n  }\n};\nexport const getDomGridItemsSortedByYPos = elements => {\n  const types = Object.keys(itemTypeMap);\n  const elementsWithBoundingRect = orArray(elements).map(el => {\n    const type = Array.from(el.classList).find(className => types.indexOf(className) > -1);\n    const rect = el.getBoundingClientRect();\n    const y = getTransformYPx(el.style) || parseInt(rect.y);\n    return {\n      type,\n      classList: el.classList,\n      bottomY: y + parseInt(rect.height),\n      el\n    };\n  });\n  return sortBy(elementsWithBoundingRect, ['bottomY']);\n};","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport sortBy from 'lodash/sortBy';\nimport ReactGridLayout from 'react-grid-layout';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport cx from 'classnames';\nimport { Item } from '../Item/Item';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport { acUpdatePrintDashboardLayout } from '../../actions/printDashboard';\nimport { sGetSelectedIsLoading } from '../../reducers/selected';\nimport { sGetPrintDashboardRoot, sGetPrintDashboardItems } from '../../reducers/printDashboard';\nimport { sGetIsEditing } from '../../reducers/editDashboard';\nimport { GRID_ROW_HEIGHT, GRID_COMPACT_TYPE, MARGIN, getGridColumns, hasShape, a4LandscapeWidthPx } from './gridUtil';\nimport { getDomGridItemsSortedByYPos, getTransformYPx } from '../../modules/printUtils';\nimport { PRINT_LAYOUT } from '../Dashboard/dashboardModes';\nimport { PAGEBREAK } from '../../modules/itemTypes';\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\nimport './ItemGrid.css'; // this is set in the .dashboard-item-content css\n\nexport const ITEM_CONTENT_PADDING_BOTTOM = 4;\nexport class PrintLayoutItemGrid extends Component {\n  onLayoutChange = newLayout => {\n    this.props.updateDashboardLayout(newLayout);\n  };\n  isFirstPageBreak = item => {\n    if (item.type !== PAGEBREAK) {\n      return false;\n    }\n\n    const pageBreaks = this.props.dashboardItems.filter(i => i.type === PAGEBREAK);\n    const sortedPageBreaks = sortBy(pageBreaks, ['y']);\n    return item.y === sortedPageBreaks[0].y;\n  };\n  getItemComponent = item => {\n    // the first-page-break class is used in Edit print preview\n    const itemClassNames = cx('print', 'layout', `${item.type}`, {\n      'first-page-break': this.props.isEditing && this.isFirstPageBreak(item),\n      shortened: !!item.shortened\n    });\n    return <div key={item.i} className={itemClassNames}>\n                <Item item={item} dashboardMode={PRINT_LAYOUT} />\n            </div>;\n  };\n  getItemComponents = items => items.map(item => this.getItemComponent(item));\n\n  hideExtraPageBreaks() {\n    const sortedElements = getDomGridItemsSortedByYPos(Array.from(document.querySelectorAll('.react-grid-item')));\n    let pageBreakBottom = 0;\n    let lastItemBottom = 0;\n    let foundNonPageBreak = false;\n\n    for (let i = sortedElements.length - 1; i >= 0; --i) {\n      const item = sortedElements[i];\n\n      if (item.type === PAGEBREAK) {\n        if (!foundNonPageBreak) {\n          item.el.classList.add('removed');\n        } else {\n          pageBreakBottom = item.bottomY;\n          break;\n        }\n      } else {\n        foundNonPageBreak = true;\n        const thisItemBottom = item.bottomY;\n\n        if (thisItemBottom > lastItemBottom) {\n          lastItemBottom = thisItemBottom;\n        }\n      }\n    }\n\n    const pageHeight = 720;\n    const gridElement = document.querySelector('.react-grid-layout'); // the last page break is before the last item(s) so\n    // maxHeight is one page beyond the last page break\n\n    const maxHeight = pageBreakBottom + pageHeight;\n\n    if (gridElement) {\n      gridElement.style.height = `${maxHeight}px`;\n    }\n\n    if (this.props.isEditing) {\n      //scroll to below the title page - which is middle of the first pagebreak\n      const firstBreak = document.querySelector('.first-page-break');\n\n      if (firstBreak && firstBreak.style && firstBreak.style.transform) {\n        const yPos = getTransformYPx(firstBreak.style);\n        const scrollArea = document.querySelector('.scroll-area');\n        scrollArea && scrollArea.scroll(0, yPos + 50);\n      }\n    }\n  }\n\n  componentDidMount() {\n    this.hideExtraPageBreaks();\n  }\n\n  componentDidUpdate() {\n    this.hideExtraPageBreaks();\n  }\n\n  render() {\n    const {\n      isLoading,\n      dashboardItems\n    } = this.props;\n\n    if (!isLoading && !dashboardItems.length) {\n      return <NoContentMessage text={i18n.t('There are no items on this dashboard')} />;\n    }\n\n    const width = a4LandscapeWidthPx < window.innerWidth ? a4LandscapeWidthPx : window.innerWidth;\n    return <div className=\"grid-wrapper\">\n                {isLoading ? <Layer translucent>\n                        <CenteredContent>\n                            <CircularLoader />\n                        </CenteredContent>\n                    </Layer> : null}\n                <ReactGridLayout onLayoutChange={this.onLayoutChange} className=\"layout\" layout={dashboardItems} margin={MARGIN} cols={getGridColumns()} rowHeight={GRID_ROW_HEIGHT} width={width} compactType={GRID_COMPACT_TYPE} isDraggable={false} isResizable={false} draggableCancel=\"input,textarea\">\n                    {this.getItemComponents(dashboardItems)}\n                </ReactGridLayout>\n            </div>;\n  }\n\n}\nPrintLayoutItemGrid.propTypes = {\n  dashboardItems: PropTypes.array,\n  isEditing: PropTypes.bool,\n  isLoading: PropTypes.bool,\n  updateDashboardLayout: PropTypes.func\n};\nPrintLayoutItemGrid.defaultProps = {\n  dashboardItems: []\n};\n\nconst mapStateToProps = state => {\n  const selectedDashboard = sGetPrintDashboardRoot(state);\n  return {\n    isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n    dashboardItems: sGetPrintDashboardItems(state).filter(hasShape),\n    isEditing: sGetIsEditing(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  updateDashboardLayout: acUpdatePrintDashboardLayout\n})(PrintLayoutItemGrid);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { spacers } from '@dhis2/ui';\nimport cx from 'classnames';\nimport PrintInfo from './PrintInfo';\nimport PrintActionsBar from './PrintActionsBar';\nimport PrintLayoutItemGrid from '../ItemGrid/PrintLayoutItemGrid';\nimport { acSetPrintDashboard, acAddPrintDashboardItem, acUpdatePrintDashboardItem } from '../../actions/printDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { sGetWindowHeight } from '../../reducers/windowHeight';\nimport { sGetEditDashboardRoot, sGetEditDashboardItems } from '../../reducers/editDashboard';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport { PAGEBREAK, PRINT_TITLE_PAGE } from '../../modules/itemTypes';\nimport { a4LandscapeWidthPx, MAX_ITEM_GRID_HEIGHT } from '../ItemGrid/gridUtil';\nimport { getControlBarHeight, HEADERBAR_HEIGHT } from '../ControlBar/controlBarDimensions';\nimport { PRINT_ACTIONS_BAR_HEIGHT } from './PrintActionsBar';\nimport { DRAG_HANDLE_HEIGHT } from '../ControlBar/ControlBar';\nimport classes from './styles/PrintLayoutDashboard.module.css';\nimport './styles/print.css';\nimport './styles/print-layout.css';\nconst EDIT_BAR_HEIGHT = getControlBarHeight(1) + DRAG_HANDLE_HEIGHT;\n\nconst isLeapPage = n => {\n  // pages 5,9,13,17,21,25,29... are leap pages\n  let x = 0;\n  const startPage = 1;\n\n  const getMultiple = factor => startPage + 4 * factor;\n\n  let multiple = getMultiple(0);\n  let isLeapPage = false;\n\n  while (multiple < n) {\n    multiple = getMultiple(x);\n    ++x;\n\n    if (multiple === n) {\n      isLeapPage = true;\n      break;\n    }\n  }\n\n  return isLeapPage;\n};\n\nconst addPageBreaks = ({\n  items,\n  addDashboardItem\n}) => {\n  // add enough page breaks so that each item could\n  // be put on its own page. Due to the react-grid-layout\n  // unit system, we have to estimate roughly the size of each\n  // page. At regular intervals add a unit, like a leap year\n  let yPos = 0;\n  const yPosList = [];\n\n  for (let pageNum = 1; pageNum <= items.length; ++pageNum) {\n    if (pageNum === 1) {\n      yPos += 35;\n    } else if (isLeapPage(pageNum)) {\n      yPos += 40;\n    } else {\n      yPos += 39;\n    }\n\n    yPosList.push(yPos);\n  }\n\n  for (let i = 0; i < items.length; ++i) {\n    addDashboardItem({\n      type: PAGEBREAK,\n      yPos: yPosList[i]\n    });\n  }\n};\n\nexport class PrintLayoutDashboard extends Component {\n  state = {\n    initialized: false\n  };\n  initPrintLayoutDashboard = () => {\n    if (this.props.dashboard) {\n      this.setState({\n        initialized: true\n      });\n      this.props.setPrintDashboard(this.props.dashboard, this.props.items); // If any items are taller than one page, reduce it to one\n      // page (react-grid-layout units)\n\n      this.props.items.forEach(item => {\n        if (item.h > MAX_ITEM_GRID_HEIGHT) {\n          item.shortened = true;\n          this.props.updateDashboardItem(Object.assign({}, item, {\n            h: MAX_ITEM_GRID_HEIGHT\n          }));\n        }\n      });\n      addPageBreaks(this.props);\n      this.props.addDashboardItem({\n        type: PRINT_TITLE_PAGE,\n        isOneItemPerPage: false\n      });\n    }\n  };\n\n  componentDidMount() {\n    this.initPrintLayoutDashboard();\n  }\n\n  componentDidUpdate() {\n    if (!this.state.initialized) {\n      this.initPrintLayoutDashboard();\n    }\n  }\n\n  getWrapperStyle = () => {\n    return this.props.fromEdit ? {\n      paddingTop: spacers.dp24,\n      height: this.props.windowHeight - EDIT_BAR_HEIGHT - HEADERBAR_HEIGHT\n    } : {\n      height: this.props.windowHeight - PRINT_ACTIONS_BAR_HEIGHT\n    };\n  };\n\n  render() {\n    return <>\n                {!this.props.fromEdit && <PrintActionsBar id={this.props.dashboard.id} />}\n                <div className={cx(classes.wrapper, 'scroll-area')} style={this.getWrapperStyle()}>\n                    {!this.props.fromEdit && <PrintInfo isLayout={true} />}\n                    <div className={classes.pageOuter} style={{\n          width: a4LandscapeWidthPx\n        }} data-test=\"print-layout-page\">\n                        <PrintLayoutItemGrid />\n                    </div>\n                </div>\n            </>;\n  }\n\n}\nPrintLayoutDashboard.propTypes = {\n  addDashboardItem: PropTypes.func,\n  dashboard: PropTypes.object,\n  fromEdit: PropTypes.bool,\n  items: PropTypes.array,\n  setPrintDashboard: PropTypes.func,\n  updateDashboardItem: PropTypes.func,\n  windowHeight: PropTypes.number\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const id = sGetSelectedId(state);\n\n  if (ownProps.fromEdit) {\n    const dashboard = sGetEditDashboardRoot(state);\n    return {\n      dashboard,\n      id,\n      items: sGetEditDashboardItems(state),\n      windowHeight: sGetWindowHeight(state)\n    };\n  }\n\n  const dashboard = id ? sGetDashboardById(state, id) : null;\n  return {\n    dashboard,\n    id,\n    items: sGetDashboardItems(state),\n    windowHeight: sGetWindowHeight(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setPrintDashboard: acSetPrintDashboard,\n  addDashboardItem: acAddPrintDashboardItem,\n  updateDashboardItem: acUpdatePrintDashboardItem\n})(PrintLayoutDashboard);","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport EditTitleBar from '../TitleBar/EditTitleBar';\nimport ItemGrid from '../ItemGrid/ItemGrid';\nimport EditBar from '../ControlBar/EditBar';\nimport NotSupportedNotice from './NotSupportedNotice';\nimport { useWindowDimensions } from '../WindowDimensionsProvider';\nimport LayoutPrintPreview from './PrintLayoutDashboard';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport { acSetEditDashboard } from '../../actions/editDashboard';\nimport { sGetWindowHeight } from '../../reducers/windowHeight';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport { sGetIsPrintPreviewView } from '../../reducers/editDashboard';\nimport { getControlBarHeight, HEADERBAR_HEIGHT } from '../ControlBar/controlBarDimensions';\nimport isSmallScreen from '../../modules/isSmallScreen';\n\nconst EditDashboard = props => {\n  const {\n    width\n  } = useWindowDimensions();\n  useEffect(() => {\n    if (props.dashboard) {\n      props.setEditDashboard(props.dashboard, props.items);\n    }\n  }, [props.dashboard]);\n\n  const renderGrid = () => {\n    if (props.isPrintPreviewView) {\n      return <LayoutPrintPreview fromEdit={true} />;\n    }\n\n    const height = props.windowHeight - HEADERBAR_HEIGHT - getControlBarHeight(1);\n    return <div className=\"dashboard-wrapper\" style={{\n      height\n    }}>\n                <EditTitleBar />\n                <ItemGrid edit={true} />\n            </div>;\n  };\n\n  const renderEditView = () => <>\n            <EditBar />\n            {props.updateAccess ? renderGrid() : <NoContentMessage text={i18n.t('No access')} />}\n        </>;\n\n  return <>\n            {isSmallScreen(width) ? <NotSupportedNotice message={i18n.t('Editing dashboards on small screens is not supported.')} /> : renderEditView()}\n        </>;\n};\n\nEditDashboard.propTypes = {\n  dashboard: PropTypes.object,\n  isPrintPreviewView: PropTypes.bool,\n  items: PropTypes.array,\n  setEditDashboard: PropTypes.func,\n  updateAccess: PropTypes.bool,\n  windowHeight: PropTypes.number\n};\n\nconst mapStateToProps = state => {\n  const id = sGetSelectedId(state);\n  const dashboard = id ? sGetDashboardById(state, id) : null;\n  const updateAccess = dashboard && dashboard.access ? dashboard.access.update : false;\n  return {\n    dashboard,\n    updateAccess,\n    items: sGetDashboardItems(state),\n    isPrintPreviewView: sGetIsPrintPreviewView(state),\n    windowHeight: sGetWindowHeight(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setEditDashboard: acSetEditDashboard\n})(EditDashboard);","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport EditBar from '../ControlBar/EditBar';\nimport EditTitleBar from '../TitleBar/EditTitleBar';\nimport ItemGrid from '../ItemGrid/ItemGrid';\nimport LayoutPrintPreview from './PrintLayoutDashboard';\nimport NotSupportedNotice from './NotSupportedNotice';\nimport { acSetEditNewDashboard } from '../../actions/editDashboard';\nimport { sGetIsPrintPreviewView } from '../../reducers/editDashboard';\nimport { sGetWindowHeight } from '../../reducers/windowHeight';\nimport { getControlBarHeight, HEADERBAR_HEIGHT } from '../ControlBar/controlBarDimensions';\nimport { useWindowDimensions } from '../WindowDimensionsProvider';\nimport isSmallScreen from '../../modules/isSmallScreen';\n\nconst NewDashboard = props => {\n  const {\n    width\n  } = useWindowDimensions();\n  useEffect(() => {\n    props.setNewDashboard();\n  }, []);\n  const height = props.windowHeight - HEADERBAR_HEIGHT - getControlBarHeight(1);\n\n  const renderNewView = () => <>\n            <EditBar />\n            {props.isPrintPreviewView ? <LayoutPrintPreview fromEdit={true} /> : <div className=\"dashboard-wrapper\" style={{\n      height\n    }}>\n                    <EditTitleBar />\n                    <ItemGrid edit={true} />\n                </div>}\n        </>;\n\n  return <>\n            {isSmallScreen(width) ? <NotSupportedNotice message={i18n.t('Creating dashboards on small screens is not supported.')} /> : renderNewView()}\n        </>;\n};\n\nNewDashboard.propTypes = {\n  isPrintPreviewView: PropTypes.bool,\n  setNewDashboard: PropTypes.func,\n  windowHeight: PropTypes.number\n};\n\nconst mapStateToProps = state => ({\n  isPrintPreviewView: sGetIsPrintPreviewView(state),\n  windowHeight: sGetWindowHeight(state)\n});\n\nexport default connect(mapStateToProps, {\n  setNewDashboard: acSetEditNewDashboard\n})(NewDashboard);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ReactGridLayout from 'react-grid-layout';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport cx from 'classnames';\nimport { Item } from '../Item/Item';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport { PRINT } from '../Dashboard/dashboardModes';\nimport { sGetSelectedIsLoading } from '../../reducers/selected';\nimport { sGetPrintDashboardRoot, sGetPrintDashboardItems } from '../../reducers/printDashboard';\nimport { GRID_ROW_HEIGHT, GRID_COMPACT_TYPE, MARGIN, getGridColumns, hasShape, a4LandscapeWidthPx } from './gridUtil';\nimport { orArray } from '../../modules/util';\nimport 'react-grid-layout/css/styles.css';\nimport './ItemGrid.css';\nexport class PrintItemGrid extends Component {\n  getItemComponent = item => <div key={item.i} className={cx(item.type, 'print', 'oipp')}>\n            <Item item={item} dashboardMode={PRINT} />\n        </div>;\n  getItemComponents = items => items.map(item => this.getItemComponent(item));\n\n  render() {\n    const {\n      isLoading,\n      dashboardItems\n    } = this.props;\n\n    if (!isLoading && !dashboardItems.length) {\n      return <NoContentMessage text={i18n.t('There are no items on this dashboard')} />;\n    }\n\n    const width = a4LandscapeWidthPx < window.innerWidth ? a4LandscapeWidthPx : window.innerWidth;\n    return <>\n                {isLoading ? <Layer translucent>\n                        <CenteredContent>\n                            <CircularLoader />\n                        </CenteredContent>\n                    </Layer> : null}\n                <ReactGridLayout className=\"layout print\" layout={dashboardItems} margin={MARGIN} cols={getGridColumns()} rowHeight={GRID_ROW_HEIGHT} width={width} compactType={GRID_COMPACT_TYPE} isDraggable={false} isResizable={false} draggableCancel=\"input,textarea\">\n                    {this.getItemComponents(dashboardItems)}\n                </ReactGridLayout>\n            </>;\n  }\n\n}\nPrintItemGrid.propTypes = {\n  dashboardItems: PropTypes.array,\n  isLoading: PropTypes.bool\n};\nPrintItemGrid.defaultProps = {\n  dashboardItems: []\n};\n\nconst mapStateToProps = state => {\n  const selectedDashboard = sGetPrintDashboardRoot(state);\n  return {\n    isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n    dashboardItems: orArray(sGetPrintDashboardItems(state)).filter(hasShape)\n  };\n};\n\nexport default connect(mapStateToProps)(PrintItemGrid);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport sortBy from 'lodash/sortBy';\nimport PrintInfo from './PrintInfo';\nimport PrintActionsBar from './PrintActionsBar';\nimport PrintItemGrid from '../ItemGrid/PrintItemGrid';\nimport { acSetPrintDashboard, acAddPrintDashboardItem, acRemovePrintDashboardItem, acUpdatePrintDashboardItem } from '../../actions/printDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { sGetWindowHeight } from '../../reducers/windowHeight';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport { PAGEBREAK, PRINT_TITLE_PAGE, SPACER } from '../../modules/itemTypes';\nimport { a4LandscapeWidthPx, MAX_ITEM_GRID_HEIGHT_OIPP, MAX_ITEM_GRID_WIDTH_OIPP } from '../ItemGrid/gridUtil';\nimport { PRINT_ACTIONS_BAR_HEIGHT } from './PrintActionsBar';\nimport classes from './styles/PrintDashboard.module.css';\nimport './styles/print.css';\nimport './styles/print-oipp.css';\nexport class PrintDashboard extends Component {\n  state = {\n    initialized: false\n  };\n  initPrintDashboard = () => {\n    if (this.props.dashboard) {\n      this.setState({\n        initialized: true\n      }); //sort the items by Y pos so they print in order of top to bottom\n\n      const sortedItems = sortBy(this.props.items, ['y', 'x']);\n      this.props.setPrintDashboard(this.props.dashboard, sortedItems); // remove spacers - don't want empty pages\n\n      let spacerCount = 0;\n      this.props.items.forEach(item => {\n        if (item.type === SPACER) {\n          spacerCount += 1;\n          this.props.removeDashboardItem(item.id);\n        }\n      }); // Resize the items to the full page size\n\n      this.props.items.forEach(item => {\n        this.props.updateDashboardItem(Object.assign({}, item, {\n          w: MAX_ITEM_GRID_WIDTH_OIPP,\n          h: MAX_ITEM_GRID_HEIGHT_OIPP\n        }));\n      }); // insert page breaks into the document flow to create the \"pages\"\n      // when previewing the print\n\n      for (let i = 0; i < (this.props.items.length - spacerCount) * 2; i += 2) {\n        this.props.addDashboardItem({\n          type: PAGEBREAK,\n          position: i,\n          isStatic: false\n        });\n      }\n\n      this.props.addDashboardItem({\n        type: PRINT_TITLE_PAGE,\n        isOneItemPerPage: true\n      });\n    }\n  };\n\n  componentDidMount() {\n    this.initPrintDashboard();\n  }\n\n  componentDidUpdate() {\n    if (!this.state.initialized) {\n      this.initPrintDashboard();\n    }\n  }\n\n  render() {\n    const height = this.props.windowHeight - PRINT_ACTIONS_BAR_HEIGHT;\n    return <>\n                <PrintActionsBar id={this.props.dashboard.id} />\n                <div className={classes.wrapper} style={{\n        height\n      }}>\n                    <PrintInfo isLayout={false} />\n                    <div className={classes.pageOuter} style={{\n          width: a4LandscapeWidthPx\n        }} data-test=\"print-oipp-page\">\n                        <PrintItemGrid />\n                    </div>\n                </div>\n            </>;\n  }\n\n}\nPrintDashboard.propTypes = {\n  addDashboardItem: PropTypes.func,\n  dashboard: PropTypes.object,\n  items: PropTypes.array,\n  removeDashboardItem: PropTypes.func,\n  setPrintDashboard: PropTypes.func,\n  updateDashboardItem: PropTypes.func,\n  windowHeight: PropTypes.number\n};\n\nconst mapStateToProps = state => {\n  const id = sGetSelectedId(state);\n  const dashboard = id ? sGetDashboardById(state, id) : null;\n  return {\n    dashboard,\n    id,\n    items: sGetDashboardItems(state),\n    windowHeight: sGetWindowHeight(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setPrintDashboard: acSetPrintDashboard,\n  addDashboardItem: acAddPrintDashboardItem,\n  removeDashboardItem: acRemovePrintDashboardItem,\n  updateDashboardItem: acUpdatePrintDashboardItem\n})(PrintDashboard);","import { SET_WINDOW_HEIGHT } from '../reducers/windowHeight';\nexport const acSetWindowHeight = value => ({\n  type: SET_WINDOW_HEIGHT,\n  value\n});","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport isEmpty from 'lodash/isEmpty';\nimport i18n from '@dhis2/d2-i18n';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport debounce from 'lodash/debounce';\nimport DashboardsBar from '../ControlBar/DashboardsBar';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport ViewDashboard from './ViewDashboard';\nimport EditDashboard from './EditDashboard';\nimport NewDashboard from './NewDashboard';\nimport PrintDashboard from './PrintDashboard';\nimport PrintLayoutDashboard from './PrintLayoutDashboard';\nimport { tSelectDashboard } from '../../actions/dashboards';\nimport { acSetWindowHeight } from '../../actions/windowHeight';\nimport { sDashboardsIsFetching, sGetAllDashboards } from '../../reducers/dashboards';\nimport { sGetSelectedId, NON_EXISTING_DASHBOARD_ID } from '../../reducers/selected';\nimport { EDIT, NEW, VIEW, PRINT, PRINT_LAYOUT, isPrintMode } from './dashboardModes';\n\nconst setHeaderbarVisibility = mode => {\n  const header = document.getElementsByTagName('header')[0];\n\n  if (isPrintMode(mode)) {\n    header.classList.add('hidden');\n  } else {\n    header.classList.remove('hidden');\n  }\n};\n\nconst dashboardMap = {\n  [VIEW]: <ViewDashboard />,\n  [EDIT]: <EditDashboard />,\n  [NEW]: <NewDashboard />,\n  [PRINT]: <PrintDashboard />,\n  [PRINT_LAYOUT]: <PrintLayoutDashboard />\n};\nexport const Dashboard = ({\n  id,\n  mode,\n  dashboardsLoaded,\n  dashboardsIsEmpty,\n  routeId,\n  selectDashboard,\n  setWindowHeight\n}) => {\n  useEffect(() => {\n    setHeaderbarVisibility(mode);\n  }, [mode]);\n  useEffect(() => {\n    if (dashboardsLoaded && !dashboardsIsEmpty) {\n      selectDashboard(routeId);\n    }\n  }, [dashboardsLoaded, dashboardsIsEmpty, routeId]);\n  useEffect(() => {\n    const onResize = debounce(() => setWindowHeight(window.innerHeight), 300);\n    window.addEventListener('resize', onResize);\n    return () => {\n      window.removeEventListener('resize', onResize);\n    };\n  }, []);\n\n  if (!dashboardsLoaded) {\n    return <Layer translucent>\n                <CenteredContent>\n                    <CircularLoader />\n                </CenteredContent>\n            </Layer>;\n  }\n\n  if (mode === NEW) {\n    return dashboardMap[mode];\n  }\n\n  if (dashboardsIsEmpty) {\n    return <>\n                <DashboardsBar />\n                <NoContentMessage text={i18n.t('No dashboards found. Use the + button to create a new dashboard.')} />\n            </>;\n  }\n\n  if (id === NON_EXISTING_DASHBOARD_ID) {\n    return <>\n                <DashboardsBar />\n                <NoContentMessage text={i18n.t('Requested dashboard not found')} />\n            </>;\n  }\n\n  if (id === null) {\n    return <Layer translucent>\n                <CenteredContent>\n                    <CircularLoader />\n                </CenteredContent>\n            </Layer>;\n  }\n\n  return dashboardMap[mode];\n};\nDashboard.propTypes = {\n  dashboardsIsEmpty: PropTypes.bool,\n  dashboardsLoaded: PropTypes.bool,\n  id: PropTypes.string,\n  match: PropTypes.object,\n  // provided by the react-router-dom\n  mode: PropTypes.string,\n  routeId: PropTypes.string,\n  selectDashboard: PropTypes.func,\n  setWindowHeight: PropTypes.func\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const dashboards = sGetAllDashboards(state);\n  return {\n    dashboardsIsEmpty: isEmpty(dashboards),\n    dashboardsLoaded: !sDashboardsIsFetching(state),\n    id: sGetSelectedId(state),\n    routeId: ownProps.match?.params?.dashboardId || null\n  };\n};\n\nexport default connect(mapStateToProps, {\n  selectDashboard: tSelectDashboard,\n  setWindowHeight: acSetWindowHeight\n})(Dashboard);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { AlertBar, AlertStack } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport { sGetAlertMessage } from '../../reducers/alert';\nimport { acClearAlertMessage } from '../../actions/alert';\nexport const Alert = ({\n  message,\n  onClose\n}) => message ? <AlertStack>\n            <AlertBar onHidden={onClose} permanent>\n                {message}\n            </AlertBar>\n        </AlertStack> : null;\nAlert.propTypes = {\n  message: PropTypes.string,\n  onClose: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  message: sGetAlertMessage(state)\n});\n\nexport default connect(mapStateToProps, {\n  onClose: acClearAlertMessage\n})(Alert);","import { RECEIVED_USER } from '../reducers/user';\nexport const acReceivedUser = value => ({\n  type: RECEIVED_USER,\n  value\n});","import { SET_DIMENSIONS } from '../reducers/dimensions';\nimport { apiFetchDimensions } from '@dhis2/analytics';\nimport { sGetSettingsDisplayNameProperty } from '../reducers/settings';\nexport const acSetDimensions = dimensions => ({\n  type: SET_DIMENSIONS,\n  value: dimensions\n});\nexport const tSetDimensions = () => async (dispatch, getState, dataEngine) => {\n  const onSuccess = dimensions => {\n    dispatch(acSetDimensions(dimensions));\n  };\n\n  const onError = error => {\n    console.log('Error (apiFetchDimensions): ', error);\n    return error;\n  };\n\n  try {\n    const displayNameProp = sGetSettingsDisplayNameProperty(getState());\n    const dimensions = await apiFetchDimensions(dataEngine, displayNameProp); // filter out CATEGORY that are not of type ATTRIBUTE\n\n    const filteredDimensions = dimensions.filter(dim => dim.dimensionType !== 'CATEGORY' || dim.dimensionType === 'CATEGORY' && dim.dataDimensionType === 'ATTRIBUTE');\n    return onSuccess(filteredDimensions);\n  } catch (err) {\n    return onError(err);\n  }\n};","import { getInstance } from 'd2';\nimport { onError } from './index';\nconst SYSTEM_SETTINGS = ['keyGatherAnalyticalObjectStatisticsInDashboardViews'];\nexport const apiFetchSystemSettings = () => {\n  const endPoint = '/systemSettings';\n  const url = `${endPoint}?${SYSTEM_SETTINGS.map(s => `key=${s}`).join('&')}`;\n  return getInstance().then(d2 => d2.Api.getApi().get(url)).catch(onError);\n};","import { ADD_SETTINGS } from '../reducers/settings';\nimport { apiFetchSystemSettings } from '../api/settings';\nexport const acAddSettings = value => ({\n  type: ADD_SETTINGS,\n  value\n});\nexport const tAddSettings = (...extraSettings) => async dispatch => {\n  const onSuccess = fetchedSettings => {\n    dispatch(acAddSettings(Object.assign({}, fetchedSettings, ...extraSettings)));\n  };\n\n  const onError = error => {\n    console.log('Error (apiFetchSystemSettings): ', error);\n    return error;\n  };\n\n  try {\n    const systemSettings = await apiFetchSystemSettings();\n    return onSuccess({ ...systemSettings\n    });\n  } catch (err) {\n    return onError(err);\n  }\n};","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { CssVariables } from '@dhis2/ui';\nimport Dashboard from './Dashboard/Dashboard';\nimport AlertBar from './AlertBar/AlertBar';\nimport { acReceivedUser } from '../actions/user';\nimport { tFetchDashboards } from '../actions/dashboards';\nimport { tSetControlBarRows } from '../actions/controlBar';\nimport { tSetShowDescription } from '../actions/selected';\nimport { tSetDimensions } from '../actions/dimensions';\nimport { tAddSettings } from '../actions/settings';\nimport { EDIT, VIEW, NEW, PRINT, PRINT_LAYOUT } from './Dashboard/dashboardModes';\nimport './App.css';\nexport class App extends Component {\n  componentDidMount() {\n    this.props.setCurrentUser(this.props.d2.currentUser);\n    this.props.fetchDashboards();\n    this.props.setControlBarRows();\n    this.props.setShowDescription();\n    this.props.setDimensions();\n    this.props.addSettings();\n  }\n\n  getChildContext() {\n    return {\n      baseUrl: this.props.baseUrl,\n      i18n,\n      d2: this.props.d2,\n      dataEngine: this.props.dataEngine\n    };\n  }\n\n  render() {\n    return <>\n                <CssVariables colors spacers />\n                <Router>\n                    <Switch>\n                        <Route exact path=\"/\" render={props => <Dashboard {...props} mode={VIEW} />} />\n                        <Route exact path=\"/new\" render={props => <Dashboard {...props} mode={NEW} />} />\n                        <Route exact path=\"/:dashboardId\" render={props => <Dashboard {...props} mode={VIEW} />} />\n                        <Route exact path=\"/:dashboardId/edit\" render={props => <Dashboard {...props} mode={EDIT} />} />\n                        <Route exact path=\"/:dashboardId/printoipp\" render={props => <Dashboard {...props} mode={PRINT} />} />\n                        <Route exact path=\"/:dashboardId/printlayout\" render={props => <Dashboard {...props} mode={PRINT_LAYOUT} />} />\n                    </Switch>\n                </Router>\n                <AlertBar />\n            </>;\n  }\n\n}\nApp.propTypes = {\n  addSettings: PropTypes.func.isRequired,\n  fetchDashboards: PropTypes.func.isRequired,\n  setControlBarRows: PropTypes.func.isRequired,\n  setCurrentUser: PropTypes.func.isRequired,\n  setDimensions: PropTypes.func.isRequired,\n  setShowDescription: PropTypes.func.isRequired,\n  baseUrl: PropTypes.string,\n  d2: PropTypes.object,\n  dataEngine: PropTypes.object\n};\nApp.childContextTypes = {\n  baseUrl: PropTypes.string,\n  i18n: PropTypes.object,\n  d2: PropTypes.object,\n  dataEngine: PropTypes.object\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchDashboards: () => dispatch(tFetchDashboards()),\n    setControlBarRows: () => dispatch(tSetControlBarRows()),\n    setCurrentUser: currentUser => dispatch(acReceivedUser(currentUser)),\n    setDimensions: () => dispatch(tSetDimensions()),\n    setShowDescription: () => dispatch(tSetShowDescription()),\n    addSettings: () => dispatch(tAddSettings())\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(App);","/** @module reducers/selected */\nimport { validateReducer } from '../modules/util';\nexport const SET_STYLE = 'SET_STYLE';\nexport const DEFAULT_STATE_STYLE = 'LIST';\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\n\nconst style = (state = DEFAULT_STATE_STYLE, action) => {\n  switch (action.type) {\n    case SET_STYLE:\n      return validateReducer(action.value, DEFAULT_STATE_STYLE);\n\n    default:\n      return state;\n  }\n};\n\nexport default style;\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\n\nexport const sGetStyleRoot = state => state.style;","import { combineReducers } from 'redux';\nimport dashboards from './dashboards';\nimport selected from './selected';\nimport dashboardsFilter from './dashboardsFilter';\nimport controlBar from './controlBar';\nimport visualizations from './visualizations';\nimport editDashboard from './editDashboard';\nimport printDashboard from './printDashboard';\nimport messages from './messages';\nimport user from './user';\nimport alert from './alert';\nimport itemFilters from './itemFilters';\nimport style from './style';\nimport dimensions from './dimensions';\nimport settings from './settings';\nimport activeModalDimension from './activeModalDimension';\nimport windowHeight from './windowHeight';\nexport default combineReducers({\n  dashboards,\n  selected,\n  dashboardsFilter,\n  controlBar,\n  visualizations,\n  messages,\n  user,\n  editDashboard,\n  printDashboard,\n  itemFilters,\n  style,\n  alert,\n  dimensions,\n  settings,\n  activeModalDimension,\n  windowHeight\n});","import { createStore, applyMiddleware, compose } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport reducer from './reducers';\n\nconst configureStore = dataEngine => {\n  const middleware = [thunk.withExtraArgument(dataEngine)]; // Enable Redux devtools if extension is installed instead of redux-logger\n\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n  if (!window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ && process.env.NODE_ENV !== 'production') {\n    middleware.push(createLogger());\n  }\n\n  return createStore(reducer, composeEnhancers(applyMiddleware(...middleware)));\n};\n\nexport default configureStore;","//------------------------------------------------------------------------------\n// <auto-generated>\n// This code was generated by d2-i18n-generate.\n//\n// Changes to this file may cause incorrect behavior and will be lost if\n// the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\nimport i18n from '@dhis2/d2-i18n';\nimport arTranslations from './ar/translations.json';\nimport ar_IQTranslations from './ar_IQ/translations.json';\nimport ckbTranslations from './ckb/translations.json';\nimport csTranslations from './cs/translations.json';\nimport daTranslations from './da/translations.json';\nimport enTranslations from './en/translations.json';\nimport esTranslations from './es/translations.json';\nimport frTranslations from './fr/translations.json';\nimport idTranslations from './id/translations.json';\nimport kmTranslations from './km/translations.json';\nimport loTranslations from './lo/translations.json';\nimport myTranslations from './my/translations.json';\nimport nbTranslations from './nb/translations.json';\nimport prsTranslations from './prs/translations.json';\nimport psTranslations from './ps/translations.json';\nimport ptTranslations from './pt/translations.json';\nimport pt_BRTranslations from './pt_BR/translations.json';\nimport ruTranslations from './ru/translations.json';\nimport svTranslations from './sv/translations.json';\nimport tetTranslations from './tet/translations.json';\nimport tgTranslations from './tg/translations.json';\nimport ukTranslations from './uk/translations.json';\nimport urTranslations from './ur/translations.json';\nimport uzTranslations from './uz/translations.json';\nimport uz_CyrlTranslations from './uz_Cyrl/translations.json';\nimport viTranslations from './vi/translations.json';\nimport zhTranslations from './zh/translations.json';\nimport zh_CNTranslations from './zh_CN/translations.json';\nconst namespace = 'default';\ni18n.addResources('ar', namespace, arTranslations);\ni18n.addResources('ar_IQ', namespace, ar_IQTranslations);\ni18n.addResources('ckb', namespace, ckbTranslations);\ni18n.addResources('cs', namespace, csTranslations);\ni18n.addResources('da', namespace, daTranslations);\ni18n.addResources('en', namespace, enTranslations);\ni18n.addResources('es', namespace, esTranslations);\ni18n.addResources('fr', namespace, frTranslations);\ni18n.addResources('id', namespace, idTranslations);\ni18n.addResources('km', namespace, kmTranslations);\ni18n.addResources('lo', namespace, loTranslations);\ni18n.addResources('my', namespace, myTranslations);\ni18n.addResources('nb', namespace, nbTranslations);\ni18n.addResources('prs', namespace, prsTranslations);\ni18n.addResources('ps', namespace, psTranslations);\ni18n.addResources('pt', namespace, ptTranslations);\ni18n.addResources('pt_BR', namespace, pt_BRTranslations);\ni18n.addResources('ru', namespace, ruTranslations);\ni18n.addResources('sv', namespace, svTranslations);\ni18n.addResources('tet', namespace, tetTranslations);\ni18n.addResources('tg', namespace, tgTranslations);\ni18n.addResources('uk', namespace, ukTranslations);\ni18n.addResources('ur', namespace, urTranslations);\ni18n.addResources('uz', namespace, uzTranslations);\ni18n.addResources('uz_Cyrl', namespace, uz_CyrlTranslations);\ni18n.addResources('vi', namespace, viTranslations);\ni18n.addResources('zh', namespace, zhTranslations);\ni18n.addResources('zh_CN', namespace, zh_CNTranslations);\nexport default i18n;","import React from 'react';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport dhis2theme from '@dhis2/d2-ui-core/theme/mui3.theme';\nimport { Provider as ReduxProvider } from 'react-redux';\nimport { D2Shim } from '@dhis2/app-runtime-adapter-d2';\nimport { useDataEngine } from '@dhis2/app-runtime';\nimport WindowDimensionsProvider from './components/WindowDimensionsProvider';\nimport App from './components/App';\nimport configureStore from './configureStore';\nimport './AppWrapper.css';\nimport './locales';\n\nconst muiTheme = () => createMuiTheme(dhis2theme);\n\nconst d2Config = {\n  schemas: ['chart', 'map', 'report', 'reportTable', 'eventChart', 'eventReport', 'dashboard', 'organisationUnit', 'userGroup']\n}; // TODO: ER and EV plugins require the auth header in development mode.\n// Remove this when these plugins are rewritten\n\nconst authorization = process.env.REACT_APP_DHIS2_AUTHORIZATION || null;\n\nif (authorization) {\n  d2Config.headers = {\n    Authorization: authorization\n  };\n}\n\nconst AppWrapper = () => {\n  const dataEngine = useDataEngine();\n  return <ReduxProvider store={configureStore(dataEngine)}>\n            <MuiThemeProvider theme={muiTheme()}>\n                <D2Shim d2Config={d2Config} i18nRoot=\"./i18n\">\n                    {({\n          d2\n        }) => {\n          if (!d2) {\n            // TODO: Handle errors in d2 initialization\n            return null;\n          }\n\n          return <WindowDimensionsProvider>\n                                <App d2={d2} dataEngine={dataEngine} />\n                            </WindowDimensionsProvider>;\n        }}\n                </D2Shim>\n            </MuiThemeProvider>\n        </ReduxProvider>;\n};\n\nexport default AppWrapper;","import isObject from 'lodash/isObject';\nimport { itemTypeMap } from './itemTypes';\nexport const getVisualizationFromItem = item => {\n  if (!isObject(item)) {\n    return null;\n  }\n\n  const propName = itemTypeMap[item.type]?.propName;\n  return item[propName] || item.reportTable || item.chart || item.map || item.eventReport || item.eventChart || {};\n};\nexport const getVisualizationId = item => getVisualizationFromItem(item).id;\nexport const getVisualizationName = item => getVisualizationFromItem(item).name;","import { REPORT_TABLE, CHART, MAP, EVENT_REPORT, EVENT_CHART, itemTypeMap } from '../../../../modules/itemTypes';\nimport { getVisualizationId } from '../../../../modules/item';\nimport { getGridItemDomId } from '../../../ItemGrid/gridUtil'; //external plugins\n\nconst itemTypeToExternalPlugin = {\n  [MAP]: 'mapPlugin',\n  [EVENT_REPORT]: 'eventReportPlugin',\n  [EVENT_CHART]: 'eventChartPlugin'\n};\n\nconst hasIntegratedPlugin = type => [CHART, REPORT_TABLE].includes(type);\n\nconst getPlugin = type => {\n  if (hasIntegratedPlugin(type)) {\n    return true;\n  }\n\n  const pluginName = itemTypeToExternalPlugin[type];\n  return global[pluginName];\n};\n\nexport const pluginIsAvailable = type => !!getPlugin(type);\nexport const loadPlugin = (plugin, config, credentials) => {\n  if (!(plugin && plugin.load)) {\n    return;\n  }\n\n  plugin.url = credentials.baseUrl;\n  plugin.loadingIndicator = true;\n  plugin.dashboard = true;\n\n  if (credentials.auth) {\n    plugin.auth = credentials.auth;\n  }\n\n  plugin.load(config);\n};\nexport const getLink = (item, baseUrl) => {\n  const appUrl = itemTypeMap[item.type].appUrl(getVisualizationId(item));\n  return `${baseUrl}/${appUrl}`;\n};\nexport const load = async (item, visualization, {\n  credentials,\n  activeType,\n  options = {}\n}) => {\n  const config = { ...visualization,\n    ...options,\n    el: getGridItemDomId(item.id)\n  };\n  const type = activeType || item.type;\n  const plugin = getPlugin(type);\n  loadPlugin(plugin, config, credentials);\n};\nexport const resize = item => {\n  const plugin = getPlugin(item.type);\n\n  if (plugin && plugin.resize) {\n    plugin.resize(getGridItemDomId(item.id));\n  }\n};\nexport const unmount = (item, activeType) => {\n  const plugin = getPlugin(activeType);\n\n  if (plugin && plugin.unmount) {\n    plugin.unmount(getGridItemDomId(item.id));\n  }\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemHeaderWrap\":\"ItemHeader_itemHeaderWrap__JcBP7\",\"itemTitle\":\"ItemHeader_itemTitle__34rHa\",\"itemActionsWrap\":\"ItemHeader_itemActionsWrap__Gx3D9\"};"],"sourceRoot":""}
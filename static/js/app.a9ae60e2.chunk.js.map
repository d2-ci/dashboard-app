{"version":3,"sources":["D2App/components/ItemSelector/styles/CategorizedMenuGroup.module.css","D2App/components/ItemSelector/styles/ItemSelector.module.css","D2App/components/TitleBar/styles/EditTitleBar.module.css","D2App/components/TitleBar/styles/ViewTitleBar.module.css","D2App/components/Item/VisualizationItem/Visualization/styles/NoVisualizationMessage.module.css","D2App/components/Item/VisualizationItem/Visualization/styles/LoadingMask.module.css","D2App/components/Item/VisualizationItem/styles/FatalErrorBoundary.module.css","D2App/components/Item/ItemHeader/styles/DeleteItemButton.module.css","D2App/components/Item/ItemHeader/styles/PrintItemInfo.module.css","D2App/components/Item/VisualizationItem/styles/ItemFooter.module.css","D2App/components/Item/ListItem/Item.module.css","D2App/components/Item/PrintTitlePageItem/styles/Item.module.css","D2App/components/FilterBar/styles/FilterBar.module.css","D2App/components/ControlBar/styles/ConfirmDeleteDialog.module.css","D2App/components/Dashboard/styles/PrintInfo.module.css","D2App/components/Dashboard/styles/PrintActionsBar.module.css","D2App/components/Dashboard/styles/PrintLayoutDashboard.module.css","D2App/components/Dashboard/styles/PrintDashboard.module.css","D2App/components/ControlBar/ControlBar.js","D2App/icons/Star.js","D2App/api/dataStatistics.js","D2App/components/ControlBar/DashboardItemChip.js","D2App/icons/AddCircle.js","D2App/icons/Search.js","D2App/icons/Clear.js","D2App/components/ControlBar/ClearButton.js","D2App/reducers/dashboardsFilter.js","D2App/components/ControlBar/Filter.js","D2App/actions/dashboardsFilter.js","D2App/components/ControlBar/ShowMoreButton.js","D2App/components/ControlBar/controlBarDimensions.js","D2App/reducers/controlBar.js","D2App/modules/uiBackendItemConverter.js","D2App/reducers/dashboards.js","D2App/reducers/selected.js","D2App/api/userDataStore.js","D2App/api/controlBar.js","D2App/actions/controlBar.js","D2App/components/ControlBar/DashboardsBar.js","D2App/components/Dashboard/DashboardVerticalOffset.js","D2App/widgets/NoContentMessage.js","D2App/components/ItemSelector/ItemSearchField.js","D2App/components/ItemSelector/HeaderMenuItem.js","D2App/icons/Launch.js","D2App/components/ItemSelector/ContentMenuItem.js","D2App/reducers/editDashboard.js","D2App/api/editDashboard.js","D2App/reducers/user.js","D2App/api/metadata.js","D2App/api/index.js","D2App/api/dashboards.js","D2App/actions/dashboards.js","D2App/reducers/dimensions.js","D2App/reducers/itemFilters.js","D2App/actions/itemFilters.js","D2App/reducers/messages.js","D2App/components/Item/MessagesItem/actions.js","D2App/api/messages.js","D2App/reducers/alert.js","D2App/actions/alert.js","D2App/reducers/visualizations.js","D2App/actions/visualizations.js","D2App/api/description.js","D2App/actions/selected.js","D2App/api/localStorage.js","D2App/actions/editDashboard.js","D2App/components/ItemSelector/selectableItems.js","D2App/components/ItemSelector/CategorizedMenuGroup.js","D2App/components/ItemSelector/actions.js","D2App/components/ItemSelector/SinglesMenuGroup.js","D2App/components/ItemSelector/ItemSelector.js","D2App/components/TitleBar/EditTitleBar.js","D2App/components/Item/VisualizationItem/assets/icons.js","D2App/components/ItemFilter/FilterDialog.js","D2App/reducers/settings.js","D2App/reducers/activeModalDimension.js","D2App/actions/activeModalDimension.js","D2App/components/ItemFilter/FilterSelector.js","D2App/components/TitleBar/ViewTitleBar.js","D2App/components/TitleBar/TitleBar.js","D2App/components/Item/VisualizationItem/Visualization/NoVisualizationMessage.js","D2App/components/Item/VisualizationItem/Visualization/DefaultPlugin.js","D2App/components/Item/VisualizationItem/Visualization/MapPlugin.js","D2App/components/Item/VisualizationItem/Visualization/LoadingMask.js","D2App/components/Item/VisualizationItem/Visualization/getFilteredVisualization.js","D2App/components/Item/VisualizationItem/Visualization/getVisualizationConfig.js","D2App/modules/memoizeOne.js","D2App/components/Item/VisualizationItem/Visualization/Visualization.js","D2App/components/Item/VisualizationItem/FatalErrorBoundary.js","D2App/components/Item/ItemHeader/ViewItemActions.js","D2App/components/Item/ItemHeader/DeleteItemButton.js","D2App/components/Item/ItemHeader/EditItemActions.js","D2App/icons/Info.js","D2App/components/Item/ItemHeader/PrintItemInfo.js","D2App/components/Dashboard/dashboardModes.js","D2App/components/Item/ItemHeader/ItemHeader.js","D2App/components/Item/VisualizationItem/ItemHeaderButtons.js","D2App/components/Item/VisualizationItem/ItemFooter.js","D2App/components/Item/VisualizationItem/Item.js","D2App/widgets/Line.js","D2App/components/Item/MessagesItem/Item.js","D2App/components/Item/NotSupportedItem/Item.js","D2App/icons/Description.js","D2App/icons/Delete.js","D2App/components/Item/ListItem/Item.js","D2App/components/Item/ListItem/actions.js","D2App/reducers/printDashboard.js","D2App/components/Item/TextItem/Item.js","D2App/components/Item/AppItem/Item.js","D2App/components/Item/SpacerItem/Item.js","D2App/components/Item/PageBreakItem/Item.js","D2App/components/Item/PrintTitlePageItem/Item.js","D2App/components/Item/Item.js","D2App/components/Item/ProgressiveLoadingContainer.js","D2App/components/ItemGrid/ItemGrid.js","D2App/components/FilterBar/FilterBadge.js","D2App/components/FilterBar/FilterBar.js","D2App/reducers/windowHeight.js","D2App/actions/printDashboard.js","D2App/components/Dashboard/ViewDashboard.js","D2App/components/ControlBar/ConfirmDeleteDialog.js","D2App/components/ControlBar/EditBar.js","D2App/components/Dashboard/PrintInfo.js","D2App/icons/LessHorizontal.js","D2App/components/Dashboard/PrintActionsBar.js","D2App/modules/printUtils.js","D2App/components/ItemGrid/PrintLayoutItemGrid.js","D2App/components/Dashboard/PrintLayoutDashboard.js","D2App/components/Dashboard/EditDashboard.js","D2App/components/Dashboard/NewDashboard.js","D2App/components/ItemGrid/PrintItemGrid.js","D2App/components/Dashboard/PrintDashboard.js","D2App/actions/windowHeight.js","D2App/components/Dashboard/Dashboard.js","D2App/components/AlertBar/AlertBar.js","D2App/actions/user.js","D2App/actions/dimensions.js","D2App/api/settings.js","D2App/actions/settings.js","D2App/components/App.js","D2App/reducers/style.js","D2App/reducers/index.js","D2App/configureStore.js","D2App/locales/index.js","D2App/AppWrapper.js","D2App/modules/itemTypes.js","D2App/modules/util.js","D2App/components/ItemGrid/gridUtil.js","D2App/modules/item.js","D2App/components/Item/VisualizationItem/Visualization/plugin.js","D2App/components/Item/ItemHeader/styles/ItemHeader.module.css","D2App/components/ControlBar/styles/DashboardsBar.module.css","D2App/components/ControlBar/styles/ControlBar.module.css","D2App/components/ControlBar/styles/DashboardItemChip.module.css","D2App/components/ControlBar/styles/ClearButton.module.css","D2App/components/ControlBar/styles/Filter.module.css","D2App/components/ControlBar/styles/ShowMoreButton.module.css","D2App/components/ItemSelector/styles/HeaderMenuItem.module.css","D2App/components/ItemSelector/styles/ContentMenuItem.module.css"],"names":["module","exports","ControlBar","React","Component","constructor","props","super","onStartDrag","this","setState","dragging","window","addEventListener","onDrag","onEndDrag","event","preventDefault","stopPropagation","newHeight","clientY","onChangeHeight","height","requestAnimationFrame","removeEventListener","state","renderDragHandle","data-testid","className","classes","draghandle","style","onMouseDown","render","Math","max","rootStyle","Object","assign","backgroundColor","editMode","colors","yellow050","white","paddingBottom","transition","root","content","children","defaultProps","StarIcon","xmlns","viewBox","d","fill","apiPostDataStatistics","async","eventType","id","d2","getInstance","url","Api","getApi","post","DashboardItemChip","starred","selected","label","dashboardId","onClick","chipProps","selectedState","unselected","icon","Star","debouncedPostStatistics","debounce","link","to","data-test","AddCircleIcon","width","teal600","SearchIcon","ClearIcon","grey800","ClearButton","onClear","button","Clear","color","SET_DASHBOARDS_FILTER","CLEAR_DASHBOARDS_FILTER","sGetDashboardsFilter","dashboardsFilter","mapDispatchToProps","setDashboardsFilter","value","type","clearDashboardsFilter","connect","filterText","onKeypressEnter","focusedClassName","setFocusedClassName","useState","cx","container","onFocus","focused","onBlur","Search","searchIcon","input","placeholder","i18n","t","onChange","target","onKeyUp","keyCode","ShowMoreButton","isMaxHeight","disabled","showMore","getRowsHeight","rows","getControlBarHeight","FIRST_ROW_PADDING_HEIGHT","SET_CONTROLBAR_USER_ROWS","combineReducers","userRows","action","validateReducer","sGetControlBarUserRows","controlBar","sGetControlBarRoot","spacerContent","emptyTextItemContent","isTextType","item","TEXT","text","convertUiItemsToBackend","items","map","SPACER","isUiSpacerType","convertBackendItemsToUi","isBackendSpacerType","gridProperties","getGridItemProperties","SET_DASHBOARDS","ADD_DASHBOARDS","SET_DASHBOARD_STARRED","SET_DASHBOARD_DISPLAY_NAME","SET_DASHBOARD_ITEMS","DEFAULT_STATE_DASHBOARDS","byId","EMPTY_DASHBOARD","updateDashboardProp","prop","sGetDashboardsRoot","dashboards","sGetDashboardById","orObject","sDashboardsIsFetching","sGetAllDashboards","sGetDashboardItems","sGetStarredDashboards","values","filter","dashboard","sGetUnstarredDashboards","getCustomDashboards","data","arrayFrom","name","displayName","description","displayDescription","favorite","owner","user","created","split","join","substr","lastUpdated","access","numberOfItems","orArray","dashboardItems","length","SET_SELECTED_ID","SET_SELECTED_ISLOADING","SET_SELECTED_SHOWDESCRIPTION","SET_SELECTED_ITEM_ACTIVE_TYPE","CLEAR_SELECTED_ITEM_ACTIVE_TYPES","DEFAULT_STATE_SELECTED_SHOWDESCRIPTION","DEFAULT_STATE_SELECTED_ITEM_ACTIVE_TYPES","isLoading","showDescription","itemActiveTypes","activeType","sGetSelectedRoot","sGetSelectedId","sGetSelectedIsLoading","sGetSelectedShowDescription","sGetSelectedItemActiveType","NAMESPACE","hasNamespace","currentUser","dataStore","has","getNamespace","get","create","apiPostUserDataStoreValue","key","set","apiGetUserDataStoreValue","defaultValue","namespace","keys","find","k","console","log","KEY_CONTROLBAR_ROWS","acSetControlBarUserRows","tSetControlBarRows","controlBarRows","apiGetControlBarRows","dispatch","err","error","withRouter","selectedId","history","setRows","useEffect","cancelMaxHeight","getFilteredDashboards","filteredDashboards","arraySort","toLowerCase","includes","overflowYClass","overflowYAuto","overflowYHidden","newRows","floor","min","apiPostControlBarRows","leftControls","newLink","AddCircle","push","marginTop","NoContentMessage","padding","textAlign","fontSize","fontWeight","grey600","ItemSearchField","dataTest","HeaderMenuItem","title","dense","LaunchIcon","LaunchLink","e","launchLink","rel","href","Launch","InsertButton","buttonInsert","ContentMenuItem","onInsert","visType","ItemIcon","getItemIcon","renderedItemIcon","VISUALIZATION","visTypeIcons","menuItem","marginRight","RECEIVED_EDIT_DASHBOARD","RECEIVED_NOT_EDITING","START_NEW_DASHBOARD","RECEIVED_TITLE","RECEIVED_DESCRIPTION","ADD_DASHBOARD_ITEM","REMOVE_DASHBOARD_ITEM","UPDATE_DASHBOARD_ITEM","RECEIVED_DASHBOARD_LAYOUT","SET_PRINT_PREVIEW_VIEW","CLEAR_PRINT_PREVIEW_VIEW","DEFAULT_STATE_EDIT_DASHBOARD","NEW_DASHBOARD_STATE","printPreviewView","sGetEditDashboardRoot","editDashboard","sGetIsEditing","isEmpty","sGetIsPrintPreviewView","sGetEditDashboardItems","onError","saveDashboard","w","h","save","then","msg","response","uid","RECEIVED_USER","DEFAULT_STATE_USER","username","uiLocale","isSuperuser","sGetUserUsername","getIdNameFields","rename","getDimensionFields","withItems","arrayClean","getAxesFields","getFavoriteFields","withDimensions","withOptions","getFavoritesFields","apiFetchVisualization","getVisualizationId","fields","MAP","getEndPointName","getDashboardItemsFields","withFavorite","getDashboardFields","apiFetchDashboard","models","catch","tFetchDashboards","collection","list","paging","toArray","arrayToIdMap","tStarDashboard","isStarred","onSuccess","acSetDashboardStarred","delete","apiStarDashboard","tDeleteDashboard","apiDeleteDashboard","Promise","resolve","SET_DIMENSIONS","DEFAULT_DIMENSIONS","getDimensionById","DIMENSION_ID_PERIOD","DIMENSION_ID_ORGUNIT","sGetDimensions","dimensions","CLEAR_ITEM_FILTERS","SET_ITEM_FILTERS","ADD_ITEM_FILTER","REMOVE_ITEM_FILTER","DEFAULT_STATE_ITEM_FILTERS","sGetItemFiltersRoot","itemFilters","sGetNamedItemFilters","createSelector","filters","reduce","arr","dimension","acRemoveItemFilter","RECEIVED_MESSAGES","sGetMessagesRoot","messages","tGetMessages","getMessages","messageConversations","SET_ALERT_MESSAGE","CLEAR_ALERT_MESSAGE","sGetAlertMessage","alert","acClearAlertMessage","ADD_VISUALIZATION","CLEAR_VISUALIZATIONS","DEFAULT_STATE_VISUALIZATIONS","p","undefined","sGetVisualization","visualizations","sGetVisualizationsRoot","acAddVisualization","KEY_SHOW_DESCRIPTION","acSetSelectedId","acSetSelectedIsLoading","acSetSelectedShowDescription","tSetSelectedDashboardById","getState","alertTimeout","setTimeout","customDashboard","withShape","localStorage","setItem","forEach","REPORT_TABLE","CHART","EVENT_REPORT","EVENT_CHART","getVisualizationFromItem","MESSAGES","clearTimeout","tSetShowDescription","apiGetShowDescription","tUpdateShowDescription","apiPostShowDescription","acClearEditDashboard","acAddDashboardItem","itemPropName","itemTypeMap","propName","generateUid","gridItemProperties","shape","PAGEBREAK","yPos","getPageBreakItemShape","isStatic","PRINT_TITLE_PAGE","getPrintTitlePageItemShape","NEW_ITEM_SHAPE","position","acUpdateDashboardItem","acRemoveDashboardItem","tSaveDashboard","dashboardToSave","postDashboard","singleItems","header","categorizedItems","USERS","REPORTS","RESOURCES","APP","listItemTypes","CategorizedMenuGroup","addItem","tAddListItemContent","newItem","toggleSeeMore","seeMore","onChangeItemsLimit","hasMore","itemUrl","getItemUrl","context","showMoreButton","margin","contextTypes","PropTypes","object","isRequired","listItemType","dashboardItemIndex","findIndex","dashboardItem","category","addToDashboard","ItemSelector","isOpen","setIsOpen","setFilter","setItems","maxOptions","setMaxOptions","Set","queryString","filterStr","updateMaxOptions","options","add","inputRef","createRef","ref","reference","placement","onClickOutside","arrow","maxWidth","menu","itemType","endPointName","itemCount","getDefaultItemCount","allItems","displayItems","slice","pluralTitle","concat","EditTitleBar","onChangeTitle","onChangeDescription","section","titleDescription","_","itemSelector","selectedDashboard","ThreeDots","SpeechBubble","fillRule","transform","Warning","FilterDialog","displayNameProperty","initiallySelectedItems","addItemFilter","removeItemFilter","onClose","setFilters","onSelectItems","dimensionId","onDeselectItems","itemIdsToRemove","newList","onReorderItems","itemIds","oldList","reorderedList","large","commonProps","onSelect","onDeselect","onReorder","selectedItems","selectedPeriods","ouItems","renderDialogContent","secondary","primary","filterItems","ADD_SETTINGS","DEFAULT_SETTINGS","keyDateFormat","keyAnalysisRelativePeriod","keyAnalysisDigitGroupSeparator","rootOrganisationUnit","keyGatherAnalyticalObjectStatisticsInDashboardViews","sGetSettings","settings","sGetSettingsDisplayNameProperty","sGatherAnalyticalObjectStatisticsInDashboardViews","SET_ACTIVE_MODAL_DIMENSION","CLEAR_ACTIVE_MODAL_DIMENSION","DEFAULT_STATE_ACTIVE_MODAL_DIMENSION","sGetActiveModalDimension","activeModalDimension","acSetActiveModalDimension","clearActiveModalDimension","setActiveModalDimension","showPopover","setShowPopover","useRef","onCloseDialog","onDimensionClick","selectedIds","ViewTitleBar","moreOptionsIsOpen","setMoreOptionsIsOpen","sharingDialogIsOpen","setSharingDialogIsOpen","redirectUrl","setRedirectUrl","onToggleStarredDashboard","onShowHideDescription","toggleSharingDialog","toggleMoreOptions","titleStyle","cursor","userSelect","top","StarBorder","showHideDescriptionLabel","toggleStarredDashboardLabel","buttonRef","userAccess","titleBar","actions","titleBarIcon","strip","update","editLink","manage","marginLeft","paddingTop","open","onRequestClose","stateProps","dispatchProps","ownProps","black","minWidth","TitleBar","edit","NoVisualizationMessage","message","DefaultPlugin","pluginCredentials","pluginIsAvailable","pluginManager","shouldPluginReload","prevProps","reloadAllowed","filtersChanged","vis","visualization","prevVis","visChanged","reloadPlugin","credentials","componentDidMount","baseUrl","getBaseUrl","auth","defaultHeaders","Authorization","componentDidUpdate","componentWillUnmount","getGridItemDomId","MapPlugin","applyFilters","mapViews","mapView","layer","hideTitle","LoadingMask","center","getFilteredVisualization","visRows","obj","visColumns","columns","visFilters","dimensionFound","dimensionObjects","getWithoutId","getVisualizationConfig","originalType","extractedMapView","mv","VIS_TYPE_COLUMN","VIS_TYPE_PIVOT_TABLE","layout","getAdaptedUiLayoutByType","memoizeOne","fn","lastArgs","lastValue","args","every","arg","i","Visualization","pluginLoaded","onLoadingComplete","memoizedGetFilteredVisualization","memoizedGetVisualizationConfig","availableHeight","pluginProps","forDashboard","FatalErrorBoundary","errorFound","componentDidCatch","info","ViewItemActions","actionButtons","itemActionsWrap","DeleteItemButton","deleteItemButton","red500","itemId","WarningIcon","PrintWarning","warning","Info","EDIT","NEW","VIEW","PRINT","PRINT_LAYOUT","isEditMode","mode","isPrintMode","isViewMode","ItemHeader","forwardRef","dashboardMode","isShortened","rest","Actions","EditItemActions","PrintItemInfo","getItemActionsMap","itemHeaderWrap","itemTitle","iconFill","ItemHeaderButtons","menuIsOpen","setMenuIsOpen","onSelectActiveType","isTrackerType","isTrackerDomainType","onViewTable","closeMenu","onViewChart","onViewMap","canViewAs","isSingleValue","isYearOverYear","VIS_TYPE_GAUGE","VIS_TYPE_PIE","interpretationMenuLabel","activeFooter","ViewAsMenuItems","hasMapView","small","appName","getAppName","getLink","onToggleFooter","ItemFooter","line","scrollContainer","Item","showFooter","configLoaded","getUniqueKey","uniqueId","onToggleItemExpanded","setActiveType","getActiveType","isEditing","getAvailableHeight","calculatedHeight","originalHeight","headerRef","current","clientHeight","ITEM_CONTENT_PADDING_BOTTOM","memoizedGetContentHeight","contentRef","offsetHeight","measuredHeight","preferMeasured","updateVisualization","gatherDataStatistics","getDataStatisticsName","getVisualizationName","shortened","Function","prototype","grey200","border","Line","PRIVATE","messageTypes","VALIDATION_RESULT","TICKET","SYSTEM","listStyleType","paddingLeft","seeAll","marginBottom","sender","lineHeight","snippet","maxHeight","overflow","MessagesItem","getMessageHref","msgIdentifier","messageType","getMessageSender","latestMsg","getMessageItems","modeClass","readClass","read","msgDate","document","location","messageCount","formatDate","userSettings","string","MessagesContainer","NotSupportedItem","display","justifyContent","alignItems","align","DescriptionIcon","grey500","DeleteIcon","getItemTitle","ListItem","tRemoveListItemContent","contentItems","index","array","el","getContentItems","contentItem","deleteButton","deletebutton","deleteicon","grey900","Description","itemicon","newContent","SET_PRINT_DASHBOARD","CLEAR_PRINT_DASHBOARD","ADD_PRINT_DASHBOARD_ITEM","SET_PRINT_DASHBOARD_LAYOUT","REMOVE_PRINT_DASHBOARD_ITEM","UPDATE_PRINT_DASHBOARD_ITEM","DEFAULT_STATE_PRINT_DASHBOARD","DEFAULT_DASHBOARD_ITEMS","NEW_PRINT_DASHBOARD_STATE","sGetPrintDashboardRoot","printDashboard","sGetIsPrinting","sGetPrintDashboardItems","textDiv","whiteSpace","textField","fontStretch","onChangeText","updatedItem","viewItem","textDivStyle","editItem","onEdit","multiline","fullWidth","printItem","textItem","getIframeSrc","appDetails","iframeSrc","launchUrl","ouIds","ouFilter","path","AppItem","appKey","system","installedApps","app","dashboardWidget","src","SpacerItem","PageBreakItem","PrintTitlePageItem","titlePage","filterTitle","listItems","filterListItem","val","filterList","getItemFilterList","viewDashboard","sGetPrintDashboardName","sGetPrintDashboardDescription","GridItem","VisualizationItem","TextItem","getGridItem","ProgressiveLoadingContainer","shouldLoad","containerRef","shouldLoadHandler","handlerOptions","passive","checkShouldLoad","bufferPx","bufferFactor","innerHeight","rect","getBoundingClientRect","bottom","removeHandler","registerHandler","debounceMs","getElementsByClassName","eventProps","pick","ItemGrid","expandedItems","clickedId","isExpanded","onLayoutChange","newLayout","acUpdateDashboardLayout","onResizeStop","oldItem","onItemResize","isVisualizationType","pluginResize","adjustHeightForExpanded","expandedItem","getItemComponent","itemClassNames","getItemComponents","UNSAFE_componentWillReceiveProps","nextProps","translucent","MARGIN","cols","getGridColumns","rowHeight","GRID_ROW_HEIGHT","innerWidth","compactType","GRID_COMPACT_TYPE","isDraggable","isResizable","draggableCancel","validItems","hasShape","styles","badgeContainer","borderRadius","badge","badgeRemove","textDecoration","FilterBadge","onRemove","count","FilterBar","onBadgeRemove","onBadgeClick","bar","removeItemFIlter","SET_WINDOW_HEIGHT","DEFAULT_STATE_WINDOW_HEIGHT","sGetWindowHeight","windowHeight","acSetPrintDashboard","acClearPrintDashboard","acAddPrintDashboardItem","isOneItemPerPage","acUpdatePrintDashboardItem","dashboardIsEditing","dashboardIsPrinting","clearEditDashboard","clearPrintDashboard","querySelector","scroll","ConfirmDeleteDialog","dashboardName","onDeleteConfirmed","onContinueEditing","destructive","buttonBarStyle","EditBar","translationDialogIsOpen","dashboardModel","confirmDeleteDialogOpen","onConfirmDelete","onSave","newId","onPrintPreview","isPrintPreviewView","clearPrintPreview","showPrintPreview","onDiscard","onDiscardChanges","onDelete","onTranslationsSaved","translations","dbLocale","translation","locale","property","onTranslate","fetchDashboardModel","toggleTranslationDialog","confirmDeleteDialog","deleteAccess","translationDialog","objectToTranslate","fieldsToTranslate","onTranslationSaved","onTranslationError","renderActionButtons","printPreviewText","updateAccess","controlBarHeight","discardBtnText","rightControls","topMargin","sGetIsNewDashboard","acSetDashboardDisplayName","PrintInfo","isLayout","a4LandscapeWidthPx","infoHeader","infoWrapper","infoList","divider","LessHorizontalIcon","PrintActionsBar","inner","LessHorizontal","print","getTransformYPx","elStyle","transformY","match","parseInt","PrintLayoutItemGrid","updateDashboardLayout","isFirstPageBreak","pageBreaks","sortedPageBreaks","sortBy","y","hideExtraPageBreaks","sortedElements","elements","types","elementsWithBoundingRect","Array","from","classList","indexOf","bottomY","getDomGridItemsSortedByYPos","querySelectorAll","pageBreakBottom","lastItemBottom","foundNonPageBreak","thisItemBottom","gridElement","firstBreak","scrollArea","EDIT_BAR_HEIGHT","isLeapPage","n","x","getMultiple","factor","multiple","PrintLayoutDashboard","initialized","initPrintLayoutDashboard","setPrintDashboard","MAX_ITEM_GRID_HEIGHT","updateDashboardItem","addDashboardItem","yPosList","pageNum","addPageBreaks","getWrapperStyle","fromEdit","spacers","dp24","wrapper","pageOuter","EditDashboard","initEditDashboard","setEditDashboard","renderGrid","NewDashboard","setNewDashboard","PrintItemGrid","PrintDashboard","initPrintDashboard","sortedItems","spacerCount","removeDashboardItem","MAX_ITEM_GRID_WIDTH_OIPP","MAX_ITEM_GRID_HEIGHT_OIPP","dashboardMap","dashboardsIsEmpty","dashboardsLoaded","routeId","params","selectDashboard","dashboardToSelect","preferredId","getItem","dash","sGetDashboardsSortedByStarred","setWindowHeight","getElementsByTagName","remove","setHeaderbarVisibility","onResize","onHidden","permanent","tSetDimensions","acSetDimensions","displayNameProp","apiFetchDimensions","dim","dimensionType","dataDimensionType","SYSTEM_SETTINGS","tAddSettings","extraSettings","fetchedSettings","s","apiFetchSystemSettings","App","setCurrentUser","fetchDashboards","setControlBarRows","setShowDescription","setDimensions","addSettings","getChildContext","exact","AlertBar","childContextTypes","DEFAULT_STATE_STYLE","objectClean","conversations","$merge","d2Object","keyUiLocale","authorities","newState","$splice","$unshift","idToRemove","stateItems","layoutHasChanged","newStateItems","stateItem","si","configureStore","middleware","thunk","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducer","applyMiddleware","addResources","arTranslations","ar_IQTranslations","ckbTranslations","csTranslations","daTranslations","enTranslations","esTranslations","frTranslations","idTranslations","kmTranslations","loTranslations","myTranslations","nbTranslations","prsTranslations","psTranslations","ptTranslations","pt_BRTranslations","ruTranslations","svTranslations","tetTranslations","tgTranslations","ukTranslations","urTranslations","uzTranslations","uz_CyrlTranslations","viTranslations","zhTranslations","zh_CNTranslations","d2Config","schemas","authorization","process","REACT_APP_DHIS2_AUTHORIZATION","headers","AppWrapper","store","theme","createMuiTheme","dhis2theme","i18nRoot","DOMAIN_TYPE_AGGREGATE","DOMAIN_TYPE_TRACKER","domainType","defaultItemCount","appUrl","dataStatisticsName","Date","getTime","TableIcon","ChartIcon","MapIcon","ExtensionIcon","PersonIcon","FontDownloadIcon","EmailIcon","CropFreeIcon","NotInterestedIcon","param","isArray","isObject","global","Intl","DateTimeFormat","year","month","day","format","replace","api","idx","isNonNegativeInteger","Number","isInteger","minH","GRID_COLUMNS","static","itemWithShape","Error","col","row","itemWidth","MAX_ITEM_GRID_WIDTH","itemHeight","getShape","round","getOriginalHeight","isFunction","setViewportSize","clientWidth","reportTable","chart","eventReport","eventChart","itemTypeToExternalPlugin","getPlugin","hasIntegratedPlugin","load","config","plugin","loadingIndicator","loadPlugin","resize","unmount"],"mappings":"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","file":"static/js/app.a9ae60e2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"showMoreButton\":\"CategorizedMenuGroup_showMoreButton__2RbRp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"ItemSelector_menu__2VYae\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"EditTitleBar_section__LIaIC\",\"titleDescription\":\"EditTitleBar_titleDescription__1YsU6\",\"title\":\"EditTitleBar_title__3mUbt\",\"description\":\"EditTitleBar_description__24U5X\",\"itemSelector\":\"EditTitleBar_itemSelector__1cFEp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"actions\":\"ViewTitleBar_actions__2UTRz\",\"editLink\":\"ViewTitleBar_editLink__d_HzW\",\"titleBar\":\"ViewTitleBar_titleBar__eiwJS\",\"titleBarIcon\":\"ViewTitleBar_titleBarIcon__2cBxv\",\"strip\":\"ViewTitleBar_strip__3xR4U\",\"backdrop\":\"ViewTitleBar_backdrop__2Cpm8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"NoVisualizationMessage_message__22IPi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"center\":\"LoadingMask_center__KHIYy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FatalErrorBoundary_container__3SViR\",\"icon\":\"FatalErrorBoundary_icon__2UbeP\",\"message\":\"FatalErrorBoundary_message__3FzrY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"deleteItemButton\":\"DeleteItemButton_deleteItemButton__3TJm9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"warning\":\"PrintItemInfo_warning__123PK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"line\":\"ItemFooter_line__3Ko0R\",\"scrollContainer\":\"ItemFooter_scrollContainer__tuq4P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Item_list__1_nkQ\",\"item\":\"Item_item__3-6QE\",\"itemicon\":\"Item_itemicon__QlouX\",\"link\":\"Item_link___3c_q\",\"deleteicon\":\"Item_deleteicon__3usrl\",\"deletebutton\":\"Item_deletebutton__1DpBW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"titlePage\":\"Item_titlePage__18CNQ\",\"name\":\"Item_name__3nuTV\",\"description\":\"Item_description__1gFQd\",\"filterTitle\":\"Item_filterTitle__2p7TQ\",\"filterList\":\"Item_filterList__qc_G3\",\"filterListItem\":\"Item_filterListItem__sPbBY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bar\":\"FilterBar_bar__1Ma3p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ConfirmDeleteDialog_content__EqswE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"infoWrapper\":\"PrintInfo_infoWrapper__3m2lt\",\"infoHeader\":\"PrintInfo_infoHeader__KyW8I\",\"info\":\"PrintInfo_info__13oXZ\",\"infoList\":\"PrintInfo_infoList__Iu9MC\",\"divider\":\"PrintInfo_divider__3wzx9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PrintActionsBar_container__2iQp7\",\"topMargin\":\"PrintActionsBar_topMargin__OpYDN\",\"inner\":\"PrintActionsBar_inner__uBqU7\",\"link\":\"PrintActionsBar_link__lFUmI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"PrintLayoutDashboard_wrapper__1WDh4\",\"pageOuter\":\"PrintLayoutDashboard_pageOuter__22acI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"PrintDashboard_wrapper__1O3s_\",\"pageOuter\":\"PrintDashboard_pageOuter__fl9tw\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { colors } from '@dhis2/ui';\nimport classes from './styles/ControlBar.module.css';\nexport const DRAG_HANDLE_HEIGHT = 7;\n\nclass ControlBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dragging: false\n    };\n  }\n\n  onStartDrag = () => {\n    this.setState({\n      dragging: true\n    });\n    window.addEventListener('mousemove', this.onDrag);\n    window.addEventListener('mouseup', this.onEndDrag);\n  };\n  onDrag = event => {\n    event.preventDefault();\n    event.stopPropagation();\n    const newHeight = event.clientY;\n\n    if (this.props.onChangeHeight && newHeight !== this.props.height && newHeight > 0) {\n      requestAnimationFrame(() => {\n        this.props.onChangeHeight(newHeight);\n      });\n    }\n  };\n  onEndDrag = () => {\n    this.setState({\n      dragging: false\n    });\n    window.removeEventListener('mousemove', this.onDrag);\n    window.removeEventListener('mouseup', this.onEndDrag);\n\n    if (this.props.onEndDrag) {\n      this.props.onEndDrag();\n    }\n  };\n\n  renderDragHandle() {\n    return typeof this.props.onChangeHeight === 'function' ? <div data-testid=\"controlbar-drag-handle\" className={classes.draghandle} style={{\n      height: DRAG_HANDLE_HEIGHT\n    }} onMouseDown={this.onStartDrag} /> : null;\n  }\n\n  render() {\n    const height = Math.max(this.props.height, 0) + DRAG_HANDLE_HEIGHT;\n    const rootStyle = Object.assign({\n      height,\n      backgroundColor: this.props.editMode ? colors.yellow050 : colors.white,\n      paddingBottom: DRAG_HANDLE_HEIGHT\n    }, // Disable animations while dragging\n    this.state.dragging ? {\n      transition: 'none'\n    } : {});\n    return <div style={rootStyle} className={classes.root}>\n                <div className={classes.content}>{this.props.children}</div>\n                {this.renderDragHandle()}\n            </div>;\n  }\n\n}\n\nControlBar.propTypes = {\n  /**\n   * The height of the control bar in number of lines. Must be a positive integer.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * If true, the background color of the control bar changes to indicate that edit mode is active.\n   */\n  editMode: PropTypes.bool.isRequired,\n\n  /**\n   * Callback function that is called when the control bar is resized.\n   * The callback receives one argument: The new height in pixels.\n   *\n   * If no callback is specified the control bar will not have a drag handle.\n   */\n  height: PropTypes.number.isRequired,\n\n  /**\n   * Callback function that is called when the control bar is dropped after being dragged.\n   * The callback receives one argument: The new height in pixels.\n   *\n   * Ignored if no \"onChangeHeight\" function is provided.\n   */\n  onChangeHeight: PropTypes.func,\n\n  /**\n   * The contents of the control bar.\n   */\n  onEndDrag: PropTypes.func\n};\nControlBar.defaultProps = {\n  onChangeHeight: null,\n  onEndDrag: null\n};\nexport default ControlBar;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst StarIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>;\n\nStarIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default StarIcon;","import { getInstance } from 'd2';\nexport const apiPostDataStatistics = async (eventType, id) => {\n  const d2 = await getInstance();\n  const url = `dataStatistics?eventType=${eventType}&favorite=${id}`;\n  d2.Api.getApi().post(url);\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Chip } from '@dhis2/ui';\nimport { Link } from 'react-router-dom';\nimport debounce from 'lodash/debounce';\nimport StarIcon from '../../icons/Star';\nimport { apiPostDataStatistics } from '../../api/dataStatistics';\nimport classes from './styles/DashboardItemChip.module.css';\nexport const DashboardItemChip = ({\n  starred,\n  selected,\n  label,\n  dashboardId,\n  onClick\n}) => {\n  const chipProps = {\n    selected\n  };\n\n  if (starred) {\n    const selectedState = selected ? classes.selected : classes.unselected;\n    chipProps.icon = <StarIcon className={`${classes.icon} ${selectedState}`} />;\n  }\n\n  const debouncedPostStatistics = debounce(() => apiPostDataStatistics('DASHBOARD_VIEW', dashboardId), 500);\n\n  const handleClick = () => {\n    debouncedPostStatistics();\n    onClick();\n  };\n\n  return <Link className={classes.link} to={`/${dashboardId}`} onClick={handleClick} data-test=\"dashboard-chip\">\n            <Chip {...chipProps}>{label}</Chip>\n        </Link>;\n};\nDashboardItemChip.propTypes = {\n  dashboardId: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  selected: PropTypes.bool.isRequired,\n  starred: PropTypes.bool.isRequired,\n  onClick: PropTypes.func.isRequired,\n  classes: PropTypes.object\n};\nexport default DashboardItemChip;","import React from 'react';\nimport { colors } from '@dhis2/ui';\n\nconst AddCircleIcon = () => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" fill={colors.teal600} viewBox=\"0 0 24 24\">\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm4 11h-3v3c0 .55-.45 1-1 1s-1-.45-1-1v-3H8c-.55 0-1-.45-1-1s.45-1 1-1h3V8c0-.55.45-1 1-1s1 .45 1 1v3h3c.55 0 1 .45 1 1s-.45 1-1 1z\" />\n    </svg>;\n\nexport default AddCircleIcon;","import React from 'react';\n\nconst SearchIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\" />\n    </svg>;\n\nexport default SearchIcon;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst ClearIcon = ({\n  className\n}) => <svg className={className} fill={colors.grey800} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n        <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>;\n\nClearIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default ClearIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ClearIcon from '../../icons/Clear';\nimport classes from './styles/ClearButton.module.css';\nexport const ClearButton = ({\n  onClear\n}) => <button className={classes.button} onClick={onClear}>\n        <span>\n            <ClearIcon className={classes.icon} color=\"action\" />\n        </span>\n    </button>;\nClearButton.propTypes = {\n  onClear: PropTypes.func.isRequired\n};\nexport default ClearButton;","import { validateReducer } from '../modules/util';\nexport const SET_DASHBOARDS_FILTER = 'SET_DASHBOARDS_FILTER';\nexport const CLEAR_DASHBOARDS_FILTER = 'CLEAR_DASHBOARDS_FILTER';\nexport const DEFAULT_STATE_DASHBOARDS_FILTER = '';\nexport default ((state = DEFAULT_STATE_DASHBOARDS_FILTER, action) => {\n  switch (action.type) {\n    case SET_DASHBOARDS_FILTER:\n      {\n        return validateReducer(action.value, DEFAULT_STATE_DASHBOARDS_FILTER);\n      }\n\n    case CLEAR_DASHBOARDS_FILTER:\n      {\n        return DEFAULT_STATE_DASHBOARDS_FILTER;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetDashboardsFilter = state => state.dashboardsFilter;","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport cx from 'classnames';\nimport SearchIcon from '../../icons/Search';\nimport ClearButton from './ClearButton';\nimport { acSetDashboardsFilter, acClearDashboardsFilter } from '../../actions/dashboardsFilter';\nimport { sGetDashboardsFilter } from '../../reducers/dashboardsFilter';\nimport classes from './styles/Filter.module.css';\nexport const KEYCODE_ENTER = 13;\nexport const KEYCODE_ESCAPE = 27;\nexport const Filter = ({\n  clearDashboardsFilter,\n  filterText,\n  setDashboardsFilter,\n  onKeypressEnter\n}) => {\n  const [focusedClassName, setFocusedClassName] = useState('');\n\n  const setFilterValue = event => {\n    event.preventDefault();\n    setDashboardsFilter(event.target.value);\n  };\n\n  const onKeyUp = event => {\n    switch (event.keyCode) {\n      case KEYCODE_ENTER:\n        onKeypressEnter();\n        clearDashboardsFilter();\n        break;\n\n      case KEYCODE_ESCAPE:\n        clearDashboardsFilter();\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const onFocus = event => {\n    event.preventDefault();\n    setFocusedClassName(classes.focused);\n  };\n\n  const onBlur = event => {\n    event.preventDefault();\n    setFocusedClassName('');\n  };\n\n  return <div className={cx(classes.container, `${focusedClassName}`)} onFocus={onFocus} onBlur={onBlur}>\n            <SearchIcon className={classes.searchIcon} />\n            <input className={classes.input} type=\"text\" placeholder={i18n.t('Search for a dashboard')} onChange={setFilterValue} onKeyUp={onKeyUp} value={filterText} data-test=\"search-dashboard-input\" />\n            {filterText && <ClearButton onClear={clearDashboardsFilter} />}\n        </div>;\n};\nFilter.propTypes = {\n  clearDashboardsFilter: PropTypes.func,\n  filterText: PropTypes.string,\n  setDashboardsFilter: PropTypes.func,\n  onKeypressEnter: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  filterText: sGetDashboardsFilter(state)\n});\n\nconst mapDispatchToProps = {\n  setDashboardsFilter: acSetDashboardsFilter,\n  clearDashboardsFilter: acClearDashboardsFilter\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);","import { SET_DASHBOARDS_FILTER, CLEAR_DASHBOARDS_FILTER } from '../reducers/dashboardsFilter'; // actions\n\nexport const acSetDashboardsFilter = value => ({\n  type: SET_DASHBOARDS_FILTER,\n  value\n});\nexport const acClearDashboardsFilter = () => ({\n  type: CLEAR_DASHBOARDS_FILTER\n});","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport classes from './styles/ShowMoreButton.module.css';\nexport const SHOWMORE_BAR_HEIGHT = 16;\nexport const ShowMoreButton = ({\n  onClick,\n  isMaxHeight,\n  disabled\n}) => {\n  return <div className={classes.container}>\n            {disabled ? <div className={classes.disabled}>{i18n.t('Show more')}</div> : <div className={classes.showMore} onClick={onClick} data-test=\"showmore-button\">\n                    {isMaxHeight ? i18n.t('Show less') : i18n.t('Show more')}\n                </div>}\n        </div>;\n};\nShowMoreButton.propTypes = {\n  disabled: PropTypes.bool,\n  isMaxHeight: PropTypes.bool,\n  onClick: PropTypes.func\n};\nexport default ShowMoreButton;","import { SHOWMORE_BAR_HEIGHT } from './ShowMoreButton';\nexport const CONTROL_BAR_ROW_HEIGHT = 40;\nexport const FIRST_ROW_PADDING_HEIGHT = 10;\nexport const MIN_ROW_COUNT = 1;\nexport const HEADERBAR_HEIGHT = 48;\nconst CONTROL_BAR_OUTER_HEIGHT_DIFF = FIRST_ROW_PADDING_HEIGHT + SHOWMORE_BAR_HEIGHT - 2; // 2 pixel \"adjustment\"\n\nexport const getRowsHeight = rows => {\n  return rows * CONTROL_BAR_ROW_HEIGHT;\n};\nexport const getNumRowsFromHeight = height => {\n  return Math.floor((height - CONTROL_BAR_OUTER_HEIGHT_DIFF) / CONTROL_BAR_ROW_HEIGHT);\n};\nexport const getControlBarHeight = rows => {\n  return getRowsHeight(rows) + CONTROL_BAR_OUTER_HEIGHT_DIFF;\n};","/** @module reducers/controlBar */\nimport { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\nexport const SET_CONTROLBAR_USER_ROWS = 'SET_CONTROLBAR_USER_ROWS';\nexport const DEFAULT_STATE_CONTROLBAR_ROWS = 1;\n\nconst userRows = (state = DEFAULT_STATE_CONTROLBAR_ROWS, action) => {\n  switch (action.type) {\n    case SET_CONTROLBAR_USER_ROWS:\n      return validateReducer(action.value, DEFAULT_STATE_CONTROLBAR_ROWS);\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  userRows\n});\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\n\nexport const sGetControlBarRoot = state => state.controlBar; // Selector dependency level 2\n\nexport const sGetControlBarUserRows = state => sGetControlBarRoot(state).userRows;","import { TEXT, SPACER } from './itemTypes';\nimport { getGridItemProperties } from '../components/ItemGrid/gridUtil';\nexport const spacerContent = 'SPACER_ITEM_FOR_DASHBOARD_LAYOUT_CONVENIENCE';\nexport const emptyTextItemContent = 'TEXT_ITEM_WITH_NO_CONTENT';\n\nconst isBackendSpacerType = item => item.type === TEXT && item.text === spacerContent;\n\nconst isUiSpacerType = item => item.type === SPACER;\n\nconst isTextType = item => item.type === TEXT && item.text !== spacerContent;\n\nexport const convertUiItemsToBackend = items => items.map(item => {\n  let text = null;\n\n  if (isUiSpacerType(item)) {\n    text = spacerContent;\n  } else if (isTextType(item)) {\n    text = item.text || emptyTextItemContent;\n  }\n\n  return { ...item,\n    ...(text ? {\n      text\n    } : {})\n  };\n});\nexport const convertBackendItemsToUi = items => items.map(item => {\n  const type = isBackendSpacerType(item) ? SPACER : item.type;\n  const gridProperties = getGridItemProperties(item.id);\n  const text = isTextType(item) ? item.text === emptyTextItemContent ? '' : item.text : null;\n  return { ...item,\n    ...(text !== null ? {\n      text\n    } : {}),\n    type,\n    ...gridProperties\n  };\n});","/** @module reducers/dashboards */\nimport arrayFrom from 'd2-utilizr/lib/arrayFrom';\nimport arraySort from 'd2-utilizr/lib/arraySort';\nimport { orArray, orObject } from '../modules/util';\nimport { convertBackendItemsToUi } from '../modules/uiBackendItemConverter';\nexport const SET_DASHBOARDS = 'SET_DASHBOARDS';\nexport const ADD_DASHBOARDS = 'ADD_DASHBOARDS';\nexport const SET_DASHBOARD_STARRED = 'SET_DASHBOARD_STARRED';\nexport const SET_DASHBOARD_DISPLAY_NAME = 'SET_DASHBOARD_DISPLAY_NAME';\nexport const SET_DASHBOARD_ITEMS = 'SET_DASHBOARD_ITEMS';\nexport const DEFAULT_STATE_DASHBOARDS = {\n  byId: null,\n  items: []\n};\nexport const EMPTY_DASHBOARD = {}; // reducer helper functions\n\nconst updateDashboardProp = ({\n  state,\n  dashboardId,\n  prop,\n  value\n}) => ({\n  byId: { ...state.byId,\n    [dashboardId]: { ...state.byId[dashboardId],\n      [prop]: value\n    }\n  },\n  items: state.items\n});\n/**\n * Reducer that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n * @returns {Object}\n */\n\n\nexport default ((state = DEFAULT_STATE_DASHBOARDS, action) => {\n  switch (action.type) {\n    case SET_DASHBOARDS:\n      {\n        return {\n          byId: action.value,\n          items: []\n        };\n      }\n\n    case ADD_DASHBOARDS:\n      {\n        return { ...state,\n          byId: { ...state.byId,\n            ...action.value\n          }\n        };\n      }\n\n    case SET_DASHBOARD_STARRED:\n      {\n        return updateDashboardProp({\n          state,\n          dashboardId: action.dashboardId,\n          prop: 'starred',\n          value: action.value\n        });\n      }\n\n    case SET_DASHBOARD_DISPLAY_NAME:\n      {\n        return updateDashboardProp({\n          state,\n          dashboardId: action.dashboardId,\n          prop: 'displayName',\n          value: action.value\n        });\n      }\n\n    case SET_DASHBOARD_ITEMS:\n      {\n        return { ...state,\n          items: action.value\n        };\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetDashboardsRoot = state => state.dashboards; // selector level 1\n\n/**\n * Selector which returns a dashboard by id from the state object\n * If no matching dashboard is found it returns undefined\n * If dashboards.byId is null, then the dashboards api request\n * has not yet completed. If dashboards.byId is an empty object\n * then the dashboards api request is complete, but no dashboards\n * were returned\n *\n * @function\n * @param {Object} state The current state\n * @param {Number} id The id of the dashboard\n * @returns {Object | undefined}\n */\n\nexport const sGetDashboardById = (state, id) => orObject(sGetDashboardsRoot(state).byId)[id];\nexport const sDashboardsIsFetching = state => {\n  return sGetDashboardsRoot(state).byId === null;\n};\n/**\n * Selector which returns all dashboards (the byId object)\n *\n * @function\n * @param {Object} state The current state\n * @returns {Object | undefined}\n */\n\nexport const sGetAllDashboards = state => orObject(sGetDashboardsRoot(state).byId);\n/**\n * Selector which returns the current dashboard items\n *\n * @function\n * @param {Object} state The current state\n * @returns {Array}\n */\n\nexport const sGetDashboardItems = state => sGetDashboardsRoot(state).items; // selector level 2\n\nexport const sGetStarredDashboards = state => Object.values(sGetAllDashboards(state)).filter(dashboard => dashboard.starred === true);\nexport const sGetUnstarredDashboards = state => Object.values(sGetAllDashboards(state)).filter(dashboard => dashboard.starred === false); // selector level 3\n\nexport const sGetStarredDashboardIds = state => {\n  return sGetStarredDashboards(state).map(dashboard => dashboard.id);\n};\nexport const sGetUnstarredDashboardIds = state => sGetUnstarredDashboards(state).map(dashboard => dashboard.id);\nexport const sGetDashboardsSortedByStarred = state => [...arraySort(sGetStarredDashboards(state), 'ASC', 'displayName'), ...arraySort(sGetUnstarredDashboards(state), 'ASC', 'displayName')]; // utils\n\n/**\n * Returns the array of dashboards, customized for ui\n * @function\n * @param {Array} data The original dashboard list\n * @returns {Array}\n */\n\nexport const getCustomDashboards = data => arrayFrom(data).map(d => ({\n  id: d.id,\n  name: d.name,\n  displayName: d.displayName,\n  description: d.description,\n  displayDescription: d.displayDescription,\n  starred: d.favorite,\n  owner: d.user.name,\n  created: d.created.split('T').join(' ').substr(0, 16),\n  lastUpdated: d.lastUpdated.split('T').join(' ').substr(0, 16),\n  access: d.access,\n  numberOfItems: orArray(d.dashboardItems).length,\n  dashboardItems: convertBackendItemsToUi(d.dashboardItems)\n}));","/** @module reducers/selected */\nimport { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\nexport const SET_SELECTED_ID = 'SET_SELECTED_ID';\nexport const SET_SELECTED_ISLOADING = 'SET_SELECTED_ISLOADING';\nexport const SET_SELECTED_SHOWDESCRIPTION = 'SET_SELECTED_SHOWDESCRIPTION';\nexport const SET_SELECTED_ITEM_ACTIVE_TYPE = 'SET_SELECTED_ITEM_ACTIVE_TYPE';\nexport const CLEAR_SELECTED_ITEM_ACTIVE_TYPES = 'CLEAR_SELECTED_ITEM_ACTIVE_TYPES';\nexport const DEFAULT_STATE_SELECTED_ID = null;\nexport const DEFAULT_STATE_SELECTED_ISLOADING = false;\nexport const DEFAULT_STATE_SELECTED_SHOWDESCRIPTION = false;\nexport const DEFAULT_STATE_SELECTED_ITEM_ACTIVE_TYPES = {};\nexport const NON_EXISTING_DASHBOARD_ID = '0';\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\n\nconst id = (state = DEFAULT_STATE_SELECTED_ID, action) => {\n  switch (action.type) {\n    case SET_SELECTED_ID:\n      return validateReducer(action.value, DEFAULT_STATE_SELECTED_ID);\n\n    default:\n      return state;\n  }\n};\n\nconst isLoading = (state = DEFAULT_STATE_SELECTED_ISLOADING, action) => {\n  switch (action.type) {\n    case SET_SELECTED_ISLOADING:\n      return validateReducer(action.value, DEFAULT_STATE_SELECTED_ISLOADING);\n\n    default:\n      return state;\n  }\n};\n\nconst showDescription = (state = DEFAULT_STATE_SELECTED_SHOWDESCRIPTION, action) => {\n  switch (action.type) {\n    case SET_SELECTED_SHOWDESCRIPTION:\n      return validateReducer(action.value, DEFAULT_STATE_SELECTED_SHOWDESCRIPTION);\n\n    default:\n      return state;\n  }\n};\n\nconst itemActiveTypes = (state = DEFAULT_STATE_SELECTED_ITEM_ACTIVE_TYPES, action) => {\n  switch (action.type) {\n    case SET_SELECTED_ITEM_ACTIVE_TYPE:\n      {\n        return { ...state,\n          [action.id]: action.activeType\n        };\n      }\n\n    case CLEAR_SELECTED_ITEM_ACTIVE_TYPES:\n      {\n        return DEFAULT_STATE_SELECTED_ITEM_ACTIVE_TYPES;\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  id,\n  isLoading,\n  showDescription,\n  itemActiveTypes\n}); // Selectors\n\nexport const sGetSelectedRoot = state => state.selected;\nexport const sGetSelectedId = state => sGetSelectedRoot(state).id;\nexport const sGetSelectedIsLoading = state => sGetSelectedRoot(state).isLoading;\nexport const sGetSelectedShowDescription = state => sGetSelectedRoot(state).showDescription;\nexport const sGetSelectedItemActiveType = (state, id) => sGetSelectedRoot(state).itemActiveTypes[id];","import { getInstance } from 'd2';\nexport const NAMESPACE = 'dashboard';\nexport const hasNamespace = async (d2) => await d2.currentUser.dataStore.has(NAMESPACE);\nexport const getNamespace = async (d2, hasNamespace) => hasNamespace ? await d2.currentUser.dataStore.get(NAMESPACE) : await d2.currentUser.dataStore.create(NAMESPACE);\nexport const apiPostUserDataStoreValue = async (key, value) => {\n  const d2 = await getInstance();\n  const ns = await getNamespace(d2, hasNamespace);\n  ns.set(key, value);\n};\nexport const apiGetUserDataStoreValue = async (key, defaultValue) => {\n  const d2 = await getInstance();\n  const namespace = await getNamespace(d2, await hasNamespace(d2));\n  const hasKey = namespace?.keys?.find(k => k === key);\n\n  if (hasKey) {\n    return await namespace.get(key);\n  } else {\n    await apiPostUserDataStoreValue(key, defaultValue, namespace);\n    console.log('(These errors to /userDataStore can be ignored)');\n    return defaultValue;\n  }\n};","import { apiGetUserDataStoreValue, apiPostUserDataStoreValue } from './userDataStore';\nimport { DEFAULT_STATE_CONTROLBAR_ROWS } from '../reducers/controlBar';\nconst KEY_CONTROLBAR_ROWS = 'controlBarRows';\nexport const apiGetControlBarRows = async () => await apiGetUserDataStoreValue(KEY_CONTROLBAR_ROWS, DEFAULT_STATE_CONTROLBAR_ROWS);\nexport const apiPostControlBarRows = async (value) => await apiPostUserDataStoreValue(KEY_CONTROLBAR_ROWS, value);","import { SET_CONTROLBAR_USER_ROWS } from '../reducers/controlBar';\nimport { apiGetControlBarRows } from '../api/controlBar'; // actions\n\nexport const acSetControlBarUserRows = rows => ({\n  type: SET_CONTROLBAR_USER_ROWS,\n  value: rows\n}); // thunks\n\nexport const tSetControlBarRows = () => async dispatch => {\n  const onSuccess = rows => {\n    dispatch(acSetControlBarUserRows(rows));\n  };\n\n  const onError = error => {\n    console.log('Error (apiGetControlBarRows): ', error);\n    return error;\n  };\n\n  try {\n    const controlBarRows = await apiGetControlBarRows();\n    return onSuccess(controlBarRows);\n  } catch (err) {\n    return onError(err);\n  }\n};","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport cx from 'classnames';\nimport arraySort from 'd2-utilizr/lib/arraySort';\nimport PropTypes from 'prop-types';\nimport ControlBar from './ControlBar';\nimport Chip from './DashboardItemChip';\nimport AddCircleIcon from '../../icons/AddCircle';\nimport Filter from './Filter';\nimport ShowMoreButton from './ShowMoreButton';\nimport { FIRST_ROW_PADDING_HEIGHT, MIN_ROW_COUNT, getRowsHeight, getControlBarHeight, getNumRowsFromHeight } from './controlBarDimensions';\nimport { sGetDashboardsFilter } from '../../reducers/dashboardsFilter';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { sGetAllDashboards } from '../../reducers/dashboards';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { acSetControlBarUserRows } from '../../actions/controlBar';\nimport { apiPostControlBarRows } from '../../api/controlBar';\nimport classes from './styles/DashboardsBar.module.css';\nexport const MAX_ROW_COUNT = 10;\nexport const DashboardsBar = ({\n  userRows,\n  onChangeHeight,\n  history,\n  dashboards,\n  selectedId,\n  filterText\n}) => {\n  const [rows, setRows] = useState(userRows);\n  useEffect(() => {\n    setRows(userRows);\n  }, [userRows]);\n\n  const isMaxHeight = () => rows === MAX_ROW_COUNT;\n\n  const adjustHeight = newHeight => {\n    const newRows = Math.max(MIN_ROW_COUNT, getNumRowsFromHeight(newHeight - 52) // don't rush the transition to a bigger row count\n    );\n\n    if (newRows !== rows) {\n      onChangeHeight(Math.min(newRows, MAX_ROW_COUNT));\n    }\n  };\n\n  const onEndDrag = () => apiPostControlBarRows(rows);\n\n  const toggleMaxHeight = () => {\n    const newRows = isMaxHeight() ? userRows : MAX_ROW_COUNT;\n    setRows(newRows);\n  };\n\n  const cancelMaxHeight = () => {\n    setRows(userRows);\n  };\n\n  const onSelectDashboard = () => {\n    const id = getFilteredDashboards()[0]?.id;\n\n    if (id) {\n      history.push(id);\n    }\n  };\n\n  const getFilteredDashboards = () => {\n    const filteredDashboards = arraySort(Object.values(dashboards).filter(d => d.displayName.toLowerCase().includes(filterText.toLowerCase())), 'ASC', 'displayName');\n    return [...filteredDashboards.filter(d => d.starred), ...filteredDashboards.filter(d => !d.starred)];\n  };\n\n  const overflowYClass = isMaxHeight() ? classes.overflowYAuto : classes.overflowYHidden;\n  return <ControlBar height={getControlBarHeight(rows)} onChangeHeight={adjustHeight} onEndDrag={onEndDrag} editMode={false}>\n            <div className={cx(classes.container, overflowYClass)} style={{\n      height: getRowsHeight(rows) + FIRST_ROW_PADDING_HEIGHT\n    }}>\n                <div className={classes.leftControls}>\n                    <Link className={classes.newLink} to={'/new'} data-test=\"link-new-dashboard\">\n                        <AddCircleIcon />\n                    </Link>\n                    <Filter onKeypressEnter={onSelectDashboard} />\n                </div>\n                {getFilteredDashboards().map(dashboard => <Chip key={dashboard.id} label={dashboard.displayName} starred={dashboard.starred} dashboardId={dashboard.id} selected={dashboard.id === selectedId} onClick={cancelMaxHeight} />)}\n            </div>\n            <ShowMoreButton onClick={toggleMaxHeight} isMaxHeight={isMaxHeight()} disabled={userRows === MAX_ROW_COUNT} />\n        </ControlBar>;\n};\nDashboardsBar.propTypes = {\n  dashboards: PropTypes.object,\n  filterText: PropTypes.string,\n  history: PropTypes.object,\n  selectedId: PropTypes.string,\n  userRows: PropTypes.number,\n  onChangeHeight: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  dashboards: sGetAllDashboards(state),\n  filterText: sGetDashboardsFilter(state),\n  selectedId: sGetSelectedId(state),\n  userRows: sGetControlBarUserRows(state)\n});\n\nconst mapDispatchToProps = {\n  onChangeHeight: acSetControlBarUserRows\n};\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(DashboardsBar));","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { getControlBarHeight, MIN_ROW_COUNT } from '../ControlBar/controlBarDimensions';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { DRAG_HANDLE_HEIGHT } from '../ControlBar/ControlBar';\n\nconst DashboardVerticalOffset = props => {\n  const rows = props.editMode ? MIN_ROW_COUNT : props.userRows;\n  const marginTop = getControlBarHeight(rows) + DRAG_HANDLE_HEIGHT;\n  return <div className=\"page-container-top-margin\" style={{\n    marginTop\n  }} />;\n};\n\nconst mapStateToProps = state => ({\n  userRows: sGetControlBarUserRows(state)\n});\n\nDashboardVerticalOffset.propTypes = {\n  editMode: PropTypes.bool,\n  userRows: PropTypes.number\n};\nexport default connect(mapStateToProps)(DashboardVerticalOffset);","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nexport const NoContentMessage = ({\n  text\n}) => <div style={{\n  padding: '50px 10px',\n  textAlign: 'center',\n  fontSize: '15px',\n  fontWeight: 500,\n  color: colors.grey600\n}}>\n        {text}\n    </div>;\nNoContentMessage.propTypes = {\n  text: PropTypes.string\n};\nexport default NoContentMessage;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { InputField } from '@dhis2/ui';\n\nconst ItemSearchField = props => <InputField name=\"Dashboard item search\" label={i18n.t('Search for items to add to this dashboard')} type=\"text\" onChange={props.onChange} onFocus={props.onFocus} value={props.value} dataTest=\"item-search\" />;\n\nItemSearchField.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n  onFocus: PropTypes.func\n};\nexport default ItemSearchField;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { MenuItem, colors } from '@dhis2/ui';\nimport classes from './styles/HeaderMenuItem.module.css';\n\nconst HeaderMenuItem = ({\n  title\n}) => <MenuItem className={classes.item} dense key={title} disabled label={<span style={{\n  color: colors.grey800,\n  fontWeight: '600'\n}}>\n                {title}\n            </span>} />;\n\nHeaderMenuItem.propTypes = {\n  title: PropTypes.string.isRequired\n};\nexport default HeaderMenuItem;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst LaunchIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\" fill={colors.grey600} viewBox=\"0 0 24 24\">\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z\" />\n    </svg>;\n\nLaunchIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default LaunchIcon;","import React from 'react';\nimport { MenuItem, colors } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport { visTypeIcons } from '@dhis2/analytics';\nimport { getItemIcon, VISUALIZATION } from '../../modules/itemTypes';\nimport LaunchIcon from '../../icons/Launch';\nimport classes from './styles/ContentMenuItem.module.css';\n\nconst LaunchLink = ({\n  url\n}) => <a onClick={e => e.stopPropagation()} className={classes.launchLink} target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n        <LaunchIcon />\n    </a>;\n\nLaunchLink.propTypes = {\n  url: PropTypes.string\n};\n\nconst InsertButton = () => <button className={classes.buttonInsert}>{i18n.t('Insert')}</button>;\n\nconst ContentMenuItem = ({\n  type,\n  name,\n  onInsert,\n  url,\n  visType\n}) => {\n  const ItemIcon = getItemIcon(type);\n  const renderedItemIcon = type === VISUALIZATION ? visTypeIcons[visType] : <ItemIcon style={{\n    fill: colors.grey600\n  }} />;\n  return <MenuItem dense onClick={onInsert} label={<div className={classes.menuItem}>\n                    <div className={classes.label}>\n                        <span style={{\n        marginRight: '6px'\n      }}>\n                            {renderedItemIcon}\n                        </span>\n                        <span>{name}</span>\n                        {url ? <LaunchLink url={url} /> : null}\n                    </div>\n                    <InsertButton />\n                </div>} dataTest={`menu-item-${name}`} />;\n};\n\nContentMenuItem.propTypes = {\n  name: PropTypes.string,\n  type: PropTypes.string,\n  url: PropTypes.string,\n  visType: PropTypes.string,\n  onInsert: PropTypes.func\n};\nexport default ContentMenuItem;","/** @module reducers/editDashboard */\nimport update from 'immutability-helper';\nimport isEmpty from 'lodash/isEmpty';\nimport { orArray, orObject } from '../modules/util';\nexport const RECEIVED_EDIT_DASHBOARD = 'RECEIVED_EDIT_DASHBOARD';\nexport const RECEIVED_NOT_EDITING = 'RECEIVED_NOT_EDITING';\nexport const START_NEW_DASHBOARD = 'START_NEW_DASHBOARD';\nexport const RECEIVED_TITLE = 'RECEIVED_TITLE';\nexport const RECEIVED_DESCRIPTION = 'RECEIVED_DESCRIPTION';\nexport const ADD_DASHBOARD_ITEM = 'ADD_DASHBOARD_ITEM';\nexport const REMOVE_DASHBOARD_ITEM = 'REMOVE_DASHBOARD_ITEM';\nexport const UPDATE_DASHBOARD_ITEM = 'UPDATE_DASHBOARD_ITEM';\nexport const RECEIVED_DASHBOARD_LAYOUT = 'RECEIVED_DASHBOARD_LAYOUT';\nexport const SET_PRINT_PREVIEW_VIEW = 'SET_PRINT_PREVIEW_VIEW';\nexport const CLEAR_PRINT_PREVIEW_VIEW = 'CLEAR_PRINT_PREVIEW_VIEW';\nexport const DEFAULT_STATE_EDIT_DASHBOARD = {};\nexport const NEW_DASHBOARD_STATE = {\n  id: '',\n  name: '',\n  access: {},\n  description: '',\n  dashboardItems: [],\n  printPreviewView: false\n};\nexport default ((state = DEFAULT_STATE_EDIT_DASHBOARD, action) => {\n  switch (action.type) {\n    case RECEIVED_EDIT_DASHBOARD:\n      {\n        const newState = {};\n        Object.keys(NEW_DASHBOARD_STATE).map(k => newState[k] = action.value[k]);\n        newState.printPreviewView = false;\n        return newState;\n      }\n\n    case RECEIVED_NOT_EDITING:\n      return DEFAULT_STATE_EDIT_DASHBOARD;\n\n    case SET_PRINT_PREVIEW_VIEW:\n      return Object.assign({}, state, {\n        printPreviewView: true\n      });\n\n    case CLEAR_PRINT_PREVIEW_VIEW:\n      return Object.assign({}, state, {\n        printPreviewView: false\n      });\n\n    case START_NEW_DASHBOARD:\n      return NEW_DASHBOARD_STATE;\n\n    case RECEIVED_TITLE:\n      {\n        return Object.assign({}, state, {\n          name: action.value\n        });\n      }\n\n    case RECEIVED_DESCRIPTION:\n      {\n        return Object.assign({}, state, {\n          description: action.value\n        });\n      }\n\n    case ADD_DASHBOARD_ITEM:\n      if (!action.value.position) {\n        return update(state, {\n          dashboardItems: {\n            $unshift: [action.value]\n          }\n        });\n      }\n\n      return update(state, {\n        dashboardItems: {\n          $splice: [[parseInt(action.value.position), 0, action.value]]\n        }\n      });\n\n    case REMOVE_DASHBOARD_ITEM:\n      {\n        const idToRemove = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === idToRemove);\n\n        if (dashboardItemIndex > -1) {\n          return update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1]]\n            }\n          });\n        }\n\n        return state;\n      }\n\n    case RECEIVED_DASHBOARD_LAYOUT:\n      {\n        const stateItems = orArray(state.dashboardItems);\n        let layoutHasChanged = false;\n        const newStateItems = action.value.map(({\n          x,\n          y,\n          w,\n          h,\n          i\n        }) => {\n          const stateItem = stateItems.find(si => si.id === i);\n\n          if (!(stateItem.x === x && stateItem.y === y && stateItem.w === w && stateItem.h === h)) {\n            layoutHasChanged = true;\n            return Object.assign({}, stateItem, {\n              w,\n              h,\n              x,\n              y\n            });\n          }\n\n          return stateItem;\n        });\n        return layoutHasChanged ? { ...state,\n          dashboardItems: newStateItems\n        } : state;\n      }\n\n    case UPDATE_DASHBOARD_ITEM:\n      {\n        const dashboardItem = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === dashboardItem.id);\n\n        if (dashboardItemIndex > -1) {\n          const newState = update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1, Object.assign({}, dashboardItem)]]\n            }\n          });\n          return newState;\n        }\n\n        return state;\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetEditDashboardRoot = state => state.editDashboard; // selectors\n\nexport const sGetIsEditing = state => !isEmpty(state.editDashboard);\nexport const sGetIsPrintPreviewView = state => sGetEditDashboardRoot(state).printPreviewView;\nexport const sGetIsNewDashboard = state => {\n  return !isEmpty(state.editDashboard) && sGetEditDashboardRoot(state).id === '';\n};\nexport const sGetEditDashboardName = state => sGetEditDashboardRoot(state).name;\nexport const sGetEditDashboardDescription = state => sGetEditDashboardRoot(state).description;\nexport const sGetEditDashboardItems = state => orObject(sGetEditDashboardRoot(state)).dashboardItems;","import { getInstance } from 'd2';\n\nconst onError = error => console.log('Error: ', error);\n\nconst saveDashboard = (dashboard, data) => {\n  const {\n    name,\n    description,\n    dashboardItems\n  } = data;\n  dashboard.name = name;\n  dashboard.description = description;\n  dashboard.dashboardItems = dashboardItems.map(item => Object.assign({}, item, {\n    width: item.w,\n    height: item.h\n  }));\n  return dashboard.save().then(msg => msg.response.uid);\n};\n\nexport const updateDashboard = data => {\n  return getInstance().then(d2 => {\n    return d2.models.dashboards.get(data.id).then(dashboard => saveDashboard(dashboard, data));\n  }).catch(onError);\n};\nexport const postDashboard = data => {\n  return getInstance().then(d2 => {\n    const dashboard = d2.models.dashboards.create();\n    return saveDashboard(dashboard, data);\n  });\n};","export const RECEIVED_USER = 'RECEIVED_USER';\nexport const DEFAULT_STATE_USER = {\n  id: '',\n  username: '',\n  uiLocale: '',\n  isSuperuser: false\n};\nexport default ((state = DEFAULT_STATE_USER, action) => {\n  switch (action.type) {\n    case RECEIVED_USER:\n      {\n        return fromD2ToUserObj(action.value);\n      }\n\n    default:\n      return state;\n  }\n});\n\nfunction fromD2ToUserObj(d2Object) {\n  return {\n    id: d2Object.id,\n    username: d2Object.username,\n    uiLocale: d2Object.settings.keyUiLocale,\n    isSuperuser: d2Object.authorities.has('ALL')\n  };\n} // selectors\n\n\nexport const sGetUserId = state => state.user.id;\nexport const sGetUserUsername = state => state.user.username;\nexport const sGetIsSuperuser = state => state.user.isSuperuser;\nexport const sGetUiLocale = state => state.user.uiLocale;","import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { getEndPointName, MAP } from '../modules/itemTypes';\nimport { getVisualizationId } from '../modules/item'; // Id, name\n\nexport const getIdNameFields = ({\n  rename\n} = {}) => ['id', `${rename ? 'displayName~rename(name)' : 'name,displayName'}`]; // Item\n\nexport const getItemFields = () => ['dimensionItem~rename(id)', 'displayName~rename(name)', 'dimensionItemType']; // Dimension\n\nexport const getDimensionFields = ({\n  withItems\n}) => arrayClean(['dimension', 'legendSet[id]', 'filter', 'programStage', withItems ? `items[${getItemFields().join(',')}]` : ``]); // Axis\n\nexport const getAxesFields = ({\n  withItems\n}) => [`columns[${getDimensionFields({\n  withItems\n}).join(',')}]`, `rows[${getDimensionFields({\n  withItems\n}).join(',')}]`, `filters[${getDimensionFields({\n  withItems\n}).join(',')}]`]; // Favorite\n\nexport const getFavoriteFields = ({\n  withDimensions,\n  withOptions\n}) => {\n  return arrayClean([`${getIdNameFields({\n    rename: true\n  }).join(',')}`, 'displayDescription~rename(description)', withDimensions ? `${getAxesFields({\n    withItems: true\n  }).join(',')}` : ``, withOptions ? ['*', '!attributeDimensions', '!attributeValues', '!category', '!categoryDimensions', '!categoryOptionGroupSetDimensions', '!columnDimensions', '!dataDimensionItems', '!dataElementDimensions', '!dataElementGroupSetDimensions', '!filterDimensions', '!itemOrganisationUnitGroups', '!lastUpdatedBy', '!organisationUnitGroupSetDimensions', '!organisationUnitLevels', '!organisationUnits', '!programIndicatorDimensions', '!relativePeriods', '!reportParams', '!rowDimensions', '!translations', '!userOrganisationUnit', '!userOrganisationUnitChildren', '!userOrganisationUnitGrandChildren'].join(',') : '']);\n};\nexport const getFavoritesFields = ({\n  withDimensions\n}) => [`reportTable[${getFavoriteFields({\n  withDimensions\n}).join(',')}]`, `chart[${['type', ...getFavoriteFields({\n  withDimensions\n})].join(',')}]`, `map[${getFavoriteFields({\n  withDimensions\n}).join(',')}]`, `eventReport[${getFavoriteFields({\n  withDimensions\n}).join(',')}]`, `eventChart[${getFavoriteFields({\n  withDimensions\n}).join(',')}]`]; // List item\n\nexport const getListItemFields = () => [`reports[${['type', ...getIdNameFields({\n  rename: true\n})].join(',')}]`, `resources[${getIdNameFields({\n  rename: true\n}).join(',')}]`, `users[${getIdNameFields({\n  rename: true\n}).join(',')}]`]; // Map\n\nexport const getMapFields = () => [`${getIdNameFields({\n  rename: true\n}).join(',')}`, 'user,longitude,latitude,zoom,basemap', `mapViews[${getFavoriteFields({\n  withDimensions: true,\n  withOptions: true\n})}]`]; // Api\n\nexport const apiFetchVisualization = async item => {\n  const id = getVisualizationId(item);\n  const fields = item.type === MAP ? getMapFields() : getFavoriteFields({\n    withDimensions: true,\n    withOptions: true\n  });\n  const d2 = await getInstance();\n  return await d2.Api.getApi().get(`${getEndPointName(item.type)}/${id}`, {\n    fields\n  });\n};","import arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { getListItemFields, getFavoritesFields, getIdNameFields } from './metadata'; // Helper functions\n\nexport const onError = error => console.log('Error: ', error); // Dashboard item\n\nexport const getDashboardItemsFields = ({\n  withFavorite\n} = {}) => arrayClean(['id', 'type', 'shape', 'x', 'y', 'width~rename(w)', 'height~rename(h)', 'messages', 'text', 'appKey', `${getListItemFields().join(',')}`, withFavorite ? `${getFavoritesFields({\n  withDimensions: withFavorite.withDimensions\n}).join(',')}` : ``]); // Dashboard\n\nexport const getDashboardFields = ({\n  withItems,\n  withFavorite\n} = {}) => arrayClean([`${getIdNameFields().join(',')}`, 'description', 'displayDescription', 'favorite', `user[${getIdNameFields({\n  rename: true\n}).join(',')}]`, 'created', 'lastUpdated', 'access', withItems ? `dashboardItems[${getDashboardItemsFields({\n  withFavorite\n}).join(',')}]` : ``]);","import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { onError, getDashboardFields } from './index'; // Get \"all\" dashboards on startup\n\nexport const apiFetchDashboards = () => getInstance().then(d2 => d2.models.dashboard.list({\n  fields: [getDashboardFields().join(','), 'dashboardItems[id]'].join(','),\n  paging: 'false'\n})).catch(onError); // Get more info about selected dashboard\n\nexport const apiFetchDashboard = id => getInstance().then(d2 => d2.models.dashboard.get(id, {\n  fields: arrayClean(getDashboardFields({\n    withItems: true,\n    withFavorite: {\n      withDimensions: false\n    }\n  })).join(',')\n})).catch(onError); // Star dashboard\n\nexport const apiStarDashboard = (id, isStarred) => {\n  const url = `dashboards/${id}/favorite`;\n  getInstance().then(d2 => {\n    if (isStarred) {\n      d2.Api.getApi().post(url);\n    } else {\n      d2.Api.getApi().delete(url);\n    }\n  });\n};\nexport const apiDeleteDashboard = id => {\n  return getInstance().then(d2 => {\n    return d2.models.dashboards.get(id).then(dashboard => dashboard.delete());\n  }).catch(onError);\n};","import { SET_DASHBOARDS, ADD_DASHBOARDS, SET_DASHBOARD_STARRED, SET_DASHBOARD_DISPLAY_NAME, SET_DASHBOARD_ITEMS } from '../reducers/dashboards';\nimport { getCustomDashboards, sGetDashboardById, sGetDashboardsSortedByStarred } from '../reducers/dashboards';\nimport { NON_EXISTING_DASHBOARD_ID } from '../reducers/selected';\nimport { sGetUserUsername } from '../reducers/user';\nimport { tSetSelectedDashboardById, acSetSelectedId } from './selected';\nimport { apiFetchDashboards, apiStarDashboard, apiDeleteDashboard } from '../api/dashboards';\nimport { getPreferredDashboardId } from '../api/localStorage';\nimport { arrayToIdMap } from '../modules/util'; // actions\n\nexport const acSetDashboards = dashboards => ({\n  type: SET_DASHBOARDS,\n  value: arrayToIdMap(getCustomDashboards(dashboards))\n});\nexport const acAppendDashboards = dashboards => ({\n  type: ADD_DASHBOARDS,\n  value: arrayToIdMap(getCustomDashboards(dashboards))\n});\nexport const acSetDashboardStarred = (dashboardId, isStarred) => ({\n  type: SET_DASHBOARD_STARRED,\n  dashboardId: dashboardId,\n  value: isStarred\n});\nexport const acSetDashboardDisplayName = (dashboardId, value) => ({\n  type: SET_DASHBOARD_DISPLAY_NAME,\n  dashboardId,\n  value\n});\nexport const acSetDashboardItems = value => ({\n  type: SET_DASHBOARD_ITEMS,\n  value\n}); // thunks\n\nexport const tFetchDashboards = () => async dispatch => {\n  const collection = await apiFetchDashboards();\n  dispatch(acSetDashboards(collection.toArray()));\n};\nexport const tSelectDashboard = id => async (dispatch, getState) => {\n  const onError = error => {\n    console.log('Error (apiFetchDashboards): ', error);\n    return error;\n  };\n\n  try {\n    const state = getState();\n    let dashboardToSelect = null;\n\n    if (id) {\n      dashboardToSelect = sGetDashboardById(state, id) || null;\n    } else {\n      const preferredId = getPreferredDashboardId(sGetUserUsername(state));\n      const dash = sGetDashboardById(state, preferredId);\n      dashboardToSelect = preferredId && dash ? dash : sGetDashboardsSortedByStarred(state)[0];\n    }\n\n    if (dashboardToSelect) {\n      dispatch(tSetSelectedDashboardById(dashboardToSelect.id));\n    } else {\n      dispatch(acSetSelectedId(NON_EXISTING_DASHBOARD_ID));\n    }\n  } catch (err) {\n    return onError(err);\n  }\n};\nexport const tStarDashboard = (id, isStarred) => async dispatch => {\n  const onSuccess = id => {\n    dispatch(acSetDashboardStarred(id, isStarred));\n    return id;\n  };\n\n  const onError = error => {\n    console.log('Error (apiStarDashboard): ', error);\n    return error;\n  };\n\n  try {\n    await apiStarDashboard(id, isStarred);\n    return onSuccess(id);\n  } catch (err) {\n    return onError(err);\n  }\n};\nexport const tDeleteDashboard = id => async dispatch => {\n  try {\n    await apiDeleteDashboard(id);\n    await dispatch(tFetchDashboards());\n    return Promise.resolve();\n  } catch (err) {\n    console.log('Error (deleteDashboard): ', err);\n    return err;\n  }\n};","import { getDimensionById, DIMENSION_ID_PERIOD, DIMENSION_ID_ORGUNIT } from '@dhis2/analytics';\nexport const SET_DIMENSIONS = 'SET_DIMENSIONS';\nexport const DEFAULT_DIMENSIONS = [getDimensionById(DIMENSION_ID_PERIOD), getDimensionById(DIMENSION_ID_ORGUNIT)];\nexport default ((state = DEFAULT_DIMENSIONS, action) => {\n  switch (action.type) {\n    case SET_DIMENSIONS:\n      {\n        return [...DEFAULT_DIMENSIONS, ...action.value];\n      }\n\n    default:\n      return state;\n  }\n});\nexport const sGetDimensions = state => state.dimensions;","import { sGetDimensions } from './dimensions';\nimport { createSelector } from 'reselect';\nexport const CLEAR_ITEM_FILTERS = 'CLEAR_ITEM_FILTERS';\nexport const SET_ITEM_FILTERS = 'SET_ITEM_FILTERS';\nexport const ADD_ITEM_FILTER = 'ADD_ITEM_FILTER';\nexport const REMOVE_ITEM_FILTER = 'REMOVE_ITEM_FILTER';\nexport const DEFAULT_STATE_ITEM_FILTERS = {};\nexport default ((state = DEFAULT_STATE_ITEM_FILTERS, action) => {\n  switch (action.type) {\n    case ADD_ITEM_FILTER:\n      {\n        return { ...state,\n          [action.filter.id]: action.filter.value\n        };\n      }\n\n    case REMOVE_ITEM_FILTER:\n      {\n        const newState = { ...state\n        };\n        delete newState[action.id];\n        return newState;\n      }\n\n    case SET_ITEM_FILTERS:\n      {\n        return action.filters;\n      }\n\n    case CLEAR_ITEM_FILTERS:\n      {\n        return DEFAULT_STATE_ITEM_FILTERS;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetItemFiltersRoot = state => state.itemFilters; // simplify the filters structure to:\n// [{ id: 'pe', name: 'Period', values: [{ id: 2019: name: '2019' }, {id: 'LAST_MONTH', name: 'Last month' }]}, ...]\n\nexport const sGetNamedItemFilters = createSelector([sGetItemFiltersRoot, sGetDimensions], (filters, dimensions) => Object.keys(filters).reduce((arr, id) => {\n  arr.push({\n    id: id,\n    name: dimensions.find(dimension => dimension.id === id).name,\n    values: filters[id].map(value => ({\n      id: value.id,\n      name: value.displayName || value.name\n    }))\n  });\n  return arr;\n}, []));","import { ADD_ITEM_FILTER, REMOVE_ITEM_FILTER, SET_ITEM_FILTERS, CLEAR_ITEM_FILTERS } from '../reducers/itemFilters';\nexport const FILTER_ORG_UNIT = 'ou'; // actions\n\nexport const acAddItemFilter = filter => ({\n  type: ADD_ITEM_FILTER,\n  filter\n});\nexport const acRemoveItemFilter = id => ({\n  type: REMOVE_ITEM_FILTER,\n  id\n});\nexport const acClearItemFilters = () => ({\n  type: CLEAR_ITEM_FILTERS\n});\nexport const acSetItemFilters = filters => ({\n  type: SET_ITEM_FILTERS,\n  filters\n});","import update from 'immutability-helper';\nimport { arrayToIdMap } from '../modules/util';\nexport const RECEIVED_MESSAGES = 'RECEIVED_MESSAGES';\nexport default ((state = {}, action) => {\n  switch (action.type) {\n    case RECEIVED_MESSAGES:\n      {\n        const conversations = arrayToIdMap(action.value);\n        const newState = update(state, {\n          $merge: conversations\n        });\n        return newState;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetMessagesRoot = state => state.messages;","import { RECEIVED_MESSAGES } from '../../../reducers/messages';\nimport { getMessages } from '../../../api/messages';\n\nconst onError = (action, error) => {\n  console.log(`Error in action ${action}: ${error}`);\n  return error;\n};\n\nexport const receivedMessages = value => ({\n  type: RECEIVED_MESSAGES,\n  value\n});\nexport const tGetMessages = () => async dispatch => {\n  try {\n    const messages = await getMessages();\n    const {\n      messageConversations\n    } = messages;\n    return dispatch(receivedMessages(messageConversations));\n  } catch (err) {\n    return onError('Get Messages', err);\n  }\n};","import { getInstance } from 'd2';\nexport const getMessages = () => {\n  const fields = 'id,messageCount,lastUpdated,messageType,displayName,read,messages[id,read,sender[id,displayName],text,lastUpdated]';\n  const url = `/messageConversations?fields=${fields}&order=read:asc&pageSize=200`;\n  return getInstance().then(d2 => d2.Api.getApi().get(url)).catch(error => console.log('Error:', error));\n};","export const SET_ALERT_MESSAGE = 'SET_ALERT_MESSAGE';\nexport const CLEAR_ALERT_MESSAGE = 'CLEAR_ALERT_MESSAGE';\nexport const DEFAULT_STATE_ALERT = null;\nexport default ((state = DEFAULT_STATE_ALERT, action) => {\n  switch (action.type) {\n    case SET_ALERT_MESSAGE:\n      {\n        return action.value;\n      }\n\n    case CLEAR_ALERT_MESSAGE:\n      {\n        return DEFAULT_STATE_ALERT;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetAlertMessage = state => state.alert;","import { SET_ALERT_MESSAGE, CLEAR_ALERT_MESSAGE } from '../reducers/alert';\nexport const acSetAlertMessage = value => ({\n  type: SET_ALERT_MESSAGE,\n  value\n});\nexport const acClearAlertMessage = () => ({\n  type: CLEAR_ALERT_MESSAGE\n});","import { orObject } from '../modules/util';\nimport objectClean from 'd2-utilizr/lib/objectClean';\n/** @module reducers/visualizations */\n\nexport const ADD_VISUALIZATION = 'ADD_VISUALIZATION';\nexport const SET_ACTIVE_VISUALIZATION_TYPE = 'SET_ACTIVE_VISUALIZATION_TYPE';\nexport const CLEAR_VISUALIZATIONS = 'CLEAR_VISUALIZATIONS';\nexport const DEFAULT_STATE_VISUALIZATIONS = {};\n\nconst isEmpty = p => p === undefined || p === null;\n\nexport default ((state = DEFAULT_STATE_VISUALIZATIONS, action) => {\n  switch (action.type) {\n    case ADD_VISUALIZATION:\n      {\n        return { ...state,\n          [action.value.id]: objectClean({ ...orObject(state[action.value.id]),\n            ...action.value\n          }, isEmpty)\n        };\n      }\n\n    case CLEAR_VISUALIZATIONS:\n      {\n        return DEFAULT_STATE_VISUALIZATIONS;\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetVisualizationsRoot = state => state.visualizations; // selectors level 1\n\nexport const sGetVisualization = (state, id) => {\n  return sGetVisualizationsRoot(state)[id];\n};","import { ADD_VISUALIZATION, CLEAR_VISUALIZATIONS } from '../reducers/visualizations';\nexport const acAddVisualization = value => ({\n  type: ADD_VISUALIZATION,\n  value\n});\nexport const acClearVisualizations = () => ({\n  type: CLEAR_VISUALIZATIONS\n});","import { apiGetUserDataStoreValue, apiPostUserDataStoreValue } from './userDataStore';\nimport { DEFAULT_STATE_SELECTED_SHOWDESCRIPTION } from '../reducers/selected';\nconst KEY_SHOW_DESCRIPTION = 'showDescription';\nexport const apiGetShowDescription = async () => await apiGetUserDataStoreValue(KEY_SHOW_DESCRIPTION, DEFAULT_STATE_SELECTED_SHOWDESCRIPTION);\nexport const apiPostShowDescription = async (value) => await apiPostUserDataStoreValue(KEY_SHOW_DESCRIPTION, value);","import i18n from '@dhis2/d2-i18n';\nimport { getCustomDashboards, sGetDashboardById } from '../reducers/dashboards';\nimport { SET_SELECTED_ID, SET_SELECTED_ISLOADING, SET_SELECTED_SHOWDESCRIPTION, SET_SELECTED_ITEM_ACTIVE_TYPE, CLEAR_SELECTED_ITEM_ACTIVE_TYPES, sGetSelectedIsLoading, sGetSelectedId } from '../reducers/selected';\nimport { sGetUserUsername } from '../reducers/user';\nimport { acSetDashboardItems, acAppendDashboards } from './dashboards';\nimport { acClearItemFilters } from './itemFilters';\nimport { tGetMessages } from '../components/Item/MessagesItem/actions';\nimport { acSetAlertMessage, acClearAlertMessage } from './alert';\nimport { acAddVisualization, acClearVisualizations } from './visualizations';\nimport { apiFetchDashboard } from '../api/dashboards';\nimport { storePreferredDashboardId } from '../api/localStorage';\nimport { apiGetShowDescription, apiPostShowDescription } from '../api/description';\nimport { withShape } from '../components/ItemGrid/gridUtil';\nimport { getVisualizationFromItem } from '../modules/item';\nimport { REPORT_TABLE, CHART, MAP, EVENT_REPORT, EVENT_CHART, MESSAGES } from '../modules/itemTypes'; // actions\n\nexport const acSetSelectedId = value => ({\n  type: SET_SELECTED_ID,\n  value\n});\nexport const acSetSelectedIsLoading = value => ({\n  type: SET_SELECTED_ISLOADING,\n  value\n});\nexport const acSetSelectedShowDescription = value => ({\n  type: SET_SELECTED_SHOWDESCRIPTION,\n  value\n});\nexport const acSetSelectedItemActiveType = (id, activeType) => {\n  const action = {\n    type: SET_SELECTED_ITEM_ACTIVE_TYPE,\n    id,\n    activeType\n  };\n  return action;\n};\nexport const acClearSelectedItemActiveTypes = () => ({\n  type: CLEAR_SELECTED_ITEM_ACTIVE_TYPES\n}); // thunks\n\nexport const tSetSelectedDashboardById = id => async (dispatch, getState) => {\n  dispatch(acSetSelectedIsLoading(true));\n  const alertTimeout = setTimeout(() => {\n    const name = sGetDashboardById(getState(), id)?.displayName;\n\n    if (sGetSelectedIsLoading(getState()) && name) {\n      dispatch(acSetAlertMessage(i18n.t('Loading dashboard – {{name}}', {\n        name\n      })));\n    }\n  }, 500);\n\n  const onSuccess = selected => {\n    dispatch(acAppendDashboards(selected));\n    const customDashboard = getCustomDashboards(selected)[0];\n    dispatch(acSetDashboardItems(withShape(customDashboard.dashboardItems)));\n    storePreferredDashboardId(sGetUserUsername(getState()), id);\n\n    if (id !== sGetSelectedId(getState())) {\n      dispatch(acClearItemFilters());\n      dispatch(acClearVisualizations());\n      dispatch(acClearSelectedItemActiveTypes());\n    }\n\n    customDashboard.dashboardItems.forEach(item => {\n      switch (item.type) {\n        case REPORT_TABLE:\n        case CHART:\n        case MAP:\n        case EVENT_REPORT:\n        case EVENT_CHART:\n          dispatch(acAddVisualization(getVisualizationFromItem(item)));\n          break;\n\n        case MESSAGES:\n          dispatch(tGetMessages(id));\n          break;\n\n        default:\n          break;\n      }\n    });\n    dispatch(acSetSelectedId(id));\n    dispatch(acSetSelectedIsLoading(false));\n    clearTimeout(alertTimeout);\n    dispatch(acClearAlertMessage());\n    return selected;\n  };\n\n  const onError = error => {\n    console.log('Error: ', error);\n    return error;\n  };\n\n  try {\n    const dashboard = await apiFetchDashboard(id);\n    return onSuccess(dashboard);\n  } catch (err) {\n    return onError(err);\n  }\n};\nexport const tSetShowDescription = () => async dispatch => {\n  const onSuccess = value => {\n    dispatch(acSetSelectedShowDescription(value));\n  };\n\n  const onError = error => {\n    console.log('Error (apiGetShowDescription): ', error);\n    return error;\n  };\n\n  try {\n    const showDescription = await apiGetShowDescription();\n    return onSuccess(showDescription);\n  } catch (err) {\n    return onError(err);\n  }\n};\nexport const tUpdateShowDescription = value => async dispatch => {\n  const onSuccess = () => {\n    dispatch(acSetSelectedShowDescription(value));\n  };\n\n  const onError = error => {\n    console.log('Error (apiGetShowDescription): ', error);\n    return error;\n  };\n\n  try {\n    await apiPostShowDescription(value);\n    return onSuccess();\n  } catch (err) {\n    return onError(err);\n  }\n};","export const getPreferredDashboardId = username => localStorage.getItem(`dhis2.dashboard.current.${username}`) || undefined;\nexport const storePreferredDashboardId = (username, dashboardId) => {\n  localStorage.setItem(`dhis2.dashboard.current.${username}`, dashboardId);\n};","import { generateUid } from 'd2/uid';\nimport i18n from '@dhis2/d2-i18n';\nimport { RECEIVED_EDIT_DASHBOARD, START_NEW_DASHBOARD, RECEIVED_NOT_EDITING, RECEIVED_TITLE, RECEIVED_DESCRIPTION, RECEIVED_DASHBOARD_LAYOUT, ADD_DASHBOARD_ITEM, UPDATE_DASHBOARD_ITEM, REMOVE_DASHBOARD_ITEM, SET_PRINT_PREVIEW_VIEW, CLEAR_PRINT_PREVIEW_VIEW } from '../reducers/editDashboard';\nimport { sGetEditDashboardRoot } from '../reducers/editDashboard';\nimport { updateDashboard, postDashboard } from '../api/editDashboard';\nimport { tSetSelectedDashboardById } from '../actions/selected';\nimport { NEW_ITEM_SHAPE, getGridItemProperties, getPageBreakItemShape, getPrintTitlePageItemShape } from '../components/ItemGrid/gridUtil';\nimport { itemTypeMap, PAGEBREAK, PRINT_TITLE_PAGE } from '../modules/itemTypes';\nimport { convertUiItemsToBackend } from '../modules/uiBackendItemConverter';\n\nconst onError = error => {\n  console.log('Error (Saving Dashboard): ', error);\n  return error;\n}; // actions\n\n\nexport const acSetEditDashboard = (dashboard, items) => {\n  const val = { ...dashboard,\n    dashboardItems: items\n  };\n  return {\n    type: RECEIVED_EDIT_DASHBOARD,\n    value: val\n  };\n};\nexport const acSetEditNewDashboard = () => ({\n  type: START_NEW_DASHBOARD\n});\nexport const acClearEditDashboard = () => ({\n  type: RECEIVED_NOT_EDITING\n});\nexport const acSetPrintPreviewView = () => ({\n  type: SET_PRINT_PREVIEW_VIEW\n});\nexport const acClearPrintPreviewView = () => ({\n  type: CLEAR_PRINT_PREVIEW_VIEW\n});\nexport const acSetDashboardTitle = value => ({\n  type: RECEIVED_TITLE,\n  value\n});\nexport const acSetDashboardDescription = value => ({\n  type: RECEIVED_DESCRIPTION,\n  value\n});\nexport const acUpdateDashboardLayout = value => ({\n  type: RECEIVED_DASHBOARD_LAYOUT,\n  value\n});\nexport const acAddDashboardItem = item => {\n  const type = item.type;\n  delete item.type;\n  const itemPropName = itemTypeMap[type].propName;\n  const id = generateUid();\n  const gridItemProperties = getGridItemProperties(id);\n  let shape;\n\n  if (type === PAGEBREAK) {\n    const yPos = item.yPos || 0;\n    shape = getPageBreakItemShape(yPos, item.isStatic);\n  } else if (type === PRINT_TITLE_PAGE) {\n    shape = getPrintTitlePageItemShape();\n  } else {\n    shape = NEW_ITEM_SHAPE;\n  }\n\n  return {\n    type: ADD_DASHBOARD_ITEM,\n    value: {\n      id,\n      type,\n      position: item.position || null,\n      [itemPropName]: item.content,\n      ...NEW_ITEM_SHAPE,\n      ...gridItemProperties,\n      ...shape\n    }\n  };\n};\nexport const acUpdateDashboardItem = item => ({\n  type: UPDATE_DASHBOARD_ITEM,\n  value: item\n});\nexport const acRemoveDashboardItem = value => ({\n  type: REMOVE_DASHBOARD_ITEM,\n  value\n}); // thunks\n\nexport const tSaveDashboard = () => async (dispatch, getState) => {\n  const dashboard = sGetEditDashboardRoot(getState());\n  const dashboardToSave = { ...dashboard,\n    dashboardItems: convertUiItemsToBackend(dashboard.dashboardItems),\n    name: dashboard.name || i18n.t('Untitled dashboard')\n  };\n\n  try {\n    const dashboardId = dashboardToSave.id ? await updateDashboard(dashboardToSave) : await postDashboard(dashboardToSave);\n    dispatch(acClearEditDashboard());\n    await dispatch(tSetSelectedDashboardById(dashboardId));\n    return Promise.resolve(dashboardId);\n  } catch (error) {\n    onError(error);\n  }\n};","import i18n from '@dhis2/d2-i18n';\nimport { VISUALIZATION, MAP, EVENT_CHART, EVENT_REPORT, USERS, REPORTS, RESOURCES, APP, MESSAGES, TEXT, SPACER } from '../../modules/itemTypes';\nexport const singleItems = [{\n  id: 'additional',\n  header: i18n.t('Additional items'),\n  items: [{\n    type: TEXT,\n    name: i18n.t('Text box'),\n    content: ''\n  }, {\n    type: MESSAGES,\n    name: i18n.t('Messages'),\n    content: 'true'\n  }, {\n    type: SPACER,\n    name: i18n.t('Spacer'),\n    content: ''\n  }]\n}]; // categorizedItems are grouped in the item selector menu\n\nexport const categorizedItems = [VISUALIZATION, MAP, EVENT_REPORT, EVENT_CHART, USERS, REPORTS, RESOURCES, APP]; // listItemTypes are included in a single dashboard item\n\nexport const listItemTypes = [REPORTS, RESOURCES, USERS];","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { MenuItem, Divider } from '@dhis2/ui';\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\nimport { tAddListItemContent } from './actions';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\nimport { getItemUrl, APP, VISUALIZATION } from '../../modules/itemTypes';\nimport { categorizedItems, listItemTypes } from './selectableItems';\nimport classes from './styles/CategorizedMenuGroup.module.css';\n\nclass CategorizedMenuGroup extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      seeMore: false\n    };\n  }\n\n  addItem = item => () => {\n    const {\n      type,\n      acAddDashboardItem,\n      tAddListItemContent\n    } = this.props;\n\n    if (type === APP) {\n      acAddDashboardItem({\n        type,\n        content: item.key\n      });\n    } else {\n      const newItem = {\n        id: item.id,\n        name: item.displayName || item.name\n      };\n\n      if (listItemTypes.includes(type)) {\n        tAddListItemContent(type, newItem);\n      } else {\n        acAddDashboardItem({\n          type,\n          content: newItem\n        });\n      }\n    }\n  };\n  toggleSeeMore = () => {\n    this.setState({\n      seeMore: !this.state.seeMore\n    });\n    this.props.onChangeItemsLimit(this.props.type);\n  };\n\n  render() {\n    const {\n      title,\n      type,\n      items,\n      hasMore\n    } = this.props;\n    return <>\n                <HeaderMenuItem title={title} />\n                {items.map(item => {\n        const itemUrl = getItemUrl(type, item, this.context.d2);\n        return <ContentMenuItem key={item.id || item.key} type={type} visType={type === VISUALIZATION ? item.type : type} name={item.displayName || item.name} onInsert={this.addItem(item)} url={itemUrl} />;\n      })}\n                {hasMore ? <MenuItem dense key={`showmore${title}`} onClick={this.toggleSeeMore} label={<button className={classes.showMoreButton}>\n                                {this.state.seeMore ? i18n.t('Show fewer') : i18n.t('Show more')}\n                            </button>} /> : null}\n                <Divider margin=\"8px 0px\" />\n            </>;\n  }\n\n}\n\nCategorizedMenuGroup.propTypes = {\n  items: PropTypes.array.isRequired,\n  title: PropTypes.string.isRequired,\n  type: PropTypes.oneOf(categorizedItems).isRequired,\n  onChangeItemsLimit: PropTypes.func.isRequired,\n  acAddDashboardItem: PropTypes.func,\n  hasMore: PropTypes.bool,\n  tAddListItemContent: PropTypes.func\n};\nCategorizedMenuGroup.contextTypes = {\n  d2: PropTypes.object.isRequired\n};\nexport default connect(null, {\n  acAddDashboardItem,\n  tAddListItemContent\n})(CategorizedMenuGroup);","import { sGetEditDashboardRoot } from '../../reducers/editDashboard';\nimport { itemTypeMap } from '../../modules/itemTypes';\nimport { acAddDashboardItem, acUpdateDashboardItem } from '../../actions/editDashboard';\nexport const tAddListItemContent = (type, content) => (dispatch, getState) => {\n  const state = getState();\n  const listItemType = itemTypeMap[type].propName;\n  const dashboardItems = sGetEditDashboardRoot(state).dashboardItems;\n  const dashboardItemIndex = dashboardItems.findIndex(item => item.type === type);\n  let dashboardItem; // Reports/Resources/Users dashboard item type already present in dashboard\n\n  if (dashboardItemIndex > -1) {\n    dashboardItem = dashboardItems[dashboardItemIndex];\n    dashboardItem[listItemType].push(content);\n    dispatch(acUpdateDashboardItem(dashboardItem));\n  } else {\n    dashboardItem = {\n      type: type,\n      content: [content]\n    };\n    dispatch(acAddDashboardItem(dashboardItem));\n  }\n};","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\nexport const SinglesMenuGroup = ({\n  acAddDashboardItem,\n  category\n}) => {\n  const addToDashboard = ({\n    type,\n    content\n  }) => () => {\n    acAddDashboardItem({\n      type,\n      content\n    });\n  };\n\n  return <>\n            <HeaderMenuItem title={category.header} />\n            {category.items.map(item => <ContentMenuItem key={item.type} type={item.type} name={item.name} onInsert={addToDashboard(item)} />)}\n        </>;\n};\nSinglesMenuGroup.propTypes = {\n  acAddDashboardItem: PropTypes.func,\n  category: PropTypes.object\n};\nexport default connect(null, {\n  acAddDashboardItem\n})(SinglesMenuGroup);","import React, { useState, useEffect, createRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { Popover, FlyoutMenu } from '@dhis2/ui';\nimport ItemSearchField from './ItemSearchField';\nimport CategorizedMenuGroup from './CategorizedMenuGroup';\nimport SinglesMenuGroup from './SinglesMenuGroup';\nimport { singleItems, categorizedItems } from './selectableItems';\nimport { itemTypeMap, getDefaultItemCount } from '../../modules/itemTypes';\nimport classes from './styles/ItemSelector.module.css'; // eslint-disable-next-line no-empty-pattern\n\nconst ItemSelector = ({}, context) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [filter, setFilter] = useState('');\n  const [items, setItems] = useState(null);\n  const [maxOptions, setMaxOptions] = useState(new Set());\n  useEffect(() => {\n    let queryString = '?count=11';\n\n    if ([...maxOptions.values()].length) {\n      queryString += '&max=' + [...maxOptions.values()].join('&max=');\n    }\n\n    const filterStr = filter ? `/${filter}` : '';\n    context.d2.Api.getApi().get(`dashboards/q${filterStr}${queryString}`).then(response => setItems(response)).catch(console.error);\n  }, [filter, maxOptions]);\n\n  const closeMenu = () => {\n    setIsOpen(false);\n    setFilter('');\n    setMaxOptions(new Set());\n  };\n\n  const openMenu = () => setIsOpen(true);\n\n  const getCategorizedMenuGroups = () => {\n    return categorizedItems.filter(type => {\n      const itemType = itemTypeMap[type];\n      return items && items[itemType.endPointName];\n    }).map(type => {\n      const itemType = itemTypeMap[type];\n      const itemCount = getDefaultItemCount(type);\n      const allItems = items[itemType.endPointName];\n      const hasMore = allItems.length > itemCount;\n      const displayItems = maxOptions.has(itemType.id) ? allItems : allItems.slice(0, itemCount);\n      return <CategorizedMenuGroup key={type} type={type} title={itemType.pluralTitle} items={displayItems} onChangeItemsLimit={updateMaxOptions} hasMore={hasMore} />;\n    });\n  };\n\n  const getSinglesMenuGroups = () => singleItems.map(category => <SinglesMenuGroup key={category.id} category={category} />);\n\n  const getMenuGroups = () => getCategorizedMenuGroups().concat(getSinglesMenuGroups());\n\n  const updateMaxOptions = type => {\n    if (type) {\n      const options = new Set(maxOptions);\n      options.has(type) ? options.delete(type) : options.add(type);\n      setMaxOptions(options);\n    } else {\n      setMaxOptions(new Set());\n    }\n  };\n\n  const updateFilter = ({\n    value\n  }) => setFilter(value);\n\n  const inputRef = createRef();\n  return <>\n            <span ref={inputRef}>\n                <ItemSearchField value={filter} onChange={updateFilter} onFocus={openMenu} />\n            </span>\n            {isOpen && <Popover reference={inputRef} placement=\"bottom-start\" onClickOutside={closeMenu} arrow={false} maxWidth={700}>\n                    <FlyoutMenu className={classes.menu} dataTest=\"item-menu\" maxWidth=\"700px\">\n                        {getMenuGroups()}\n                    </FlyoutMenu>\n                </Popover>}\n        </>;\n};\n\nItemSelector.contextTypes = {\n  d2: PropTypes.object.isRequired\n};\nexport default ItemSelector;","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { InputField, TextAreaField } from '@dhis2/ui';\nimport ItemSelector from '../ItemSelector/ItemSelector';\nimport { acSetDashboardTitle, acSetDashboardDescription } from '../../actions/editDashboard';\nimport { orObject } from '../../modules/util';\nimport { sGetEditDashboardRoot } from '../../reducers/editDashboard';\nimport classes from './styles/EditTitleBar.module.css';\nexport const EditTitleBar = ({\n  name,\n  description,\n  onChangeTitle,\n  onChangeDescription\n}) => {\n  const updateTitle = (_, e) => {\n    onChangeTitle(e.target.value);\n  };\n\n  const updateDescription = (_, e) => {\n    onChangeDescription(e.target.value);\n  };\n\n  return <section className={classes.section}>\n            <div className={classes.titleDescription}>\n                <InputField className={classes.title} name=\"Dashboard title input\" label={i18n.t('Dashboard title')} type=\"text\" onChange={updateTitle} value={name} placeholder={i18n.t('Untitled dashboard')} dataTest=\"dashboard-title-input\" />\n                <TextAreaField className={classes.description} name=\"Dashboard description input\" label={i18n.t('Dashboard description')} onChange={updateDescription} value={description} dataTest=\"dashboard-description-input\" />\n            </div>\n            <div className={classes.itemSelector}>\n                <ItemSelector />\n            </div>\n        </section>;\n};\nEditTitleBar.propTypes = {\n  onChangeDescription: PropTypes.func.isRequired,\n  onChangeTitle: PropTypes.func.isRequired,\n  description: PropTypes.string,\n  name: PropTypes.string\n};\nEditTitleBar.defaultProps = {\n  name: '',\n  description: ''\n};\n\nconst mapStateToProps = state => {\n  const selectedDashboard = orObject(sGetEditDashboardRoot(state));\n  return {\n    name: selectedDashboard.name,\n    description: selectedDashboard.description\n  };\n};\n\nconst mapDispatchToProps = {\n  onChangeTitle: acSetDashboardTitle,\n  onChangeDescription: acSetDashboardDescription\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(EditTitleBar);","import React from 'react';\nimport { colors } from '@dhis2/ui';\nexport const ThreeDots = () => <svg height=\"18\" viewBox=\"0 0 18 18\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"m4 7.5c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm10 0c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm-5 0c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5z\" fill=\"#6e7a8a\" />\n    </svg>;\nexport const SpeechBubble = () => <svg height=\"20\" viewBox=\"0 0 20 20\" width=\"20\" xmlns=\"http://www.w3.org/2000/svg\" style={{\n  margin: '3px 2px 0 2px'\n}} // Temporary fix for the misaligned icon, should be removed once the icon is replaced\n>\n        <path d=\"m20 2h-16c-1.1 0-1.99.9-1.99 2l-.01 18 4-4h14c1.1 0 2-.9 2-2v-12c0-1.1-.9-2-2-2zm-2 12h-12v-2h12zm0-3h-12v-2h12zm0-3h-12v-2h12z\" fill=\"#6e7a8a\" fillRule=\"evenodd\" transform=\"translate(-2 -2)\" />\n    </svg>;\nexport const Warning = () => <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" fill={colors.grey600}>\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z\" />\n    </svg>;","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { Button, Modal, ModalTitle, ModalContent, ModalActions, ButtonStrip } from '@dhis2/ui';\nimport { PeriodDimension, DynamicDimension, OrgUnitDimension, DIMENSION_ID_PERIOD, DIMENSION_ID_ORGUNIT } from '@dhis2/analytics';\nimport { acAddItemFilter, acRemoveItemFilter } from '../../actions/itemFilters';\nimport { sGetItemFiltersRoot } from '../../reducers/itemFilters';\n\nconst FilterDialog = ({\n  displayNameProperty,\n  dimension,\n  initiallySelectedItems,\n  addItemFilter,\n  removeItemFilter,\n  onClose\n}, context) => {\n  const [filters, setFilters] = useState(initiallySelectedItems);\n\n  const onSelectItems = ({\n    dimensionId,\n    items\n  }) => {\n    setFilters({\n      [dimensionId]: items\n    });\n  };\n\n  const onDeselectItems = ({\n    dimensionId,\n    itemIdsToRemove\n  }) => {\n    const oldList = filters[dimensionId] || [];\n    const newList = oldList.filter(item => !itemIdsToRemove.includes(item.id));\n    setFilters({ ...filters,\n      [dimensionId]: newList\n    });\n  };\n\n  const onReorderItems = ({\n    dimensionId,\n    itemIds\n  }) => {\n    const oldList = filters[dimensionId] || [];\n    const reorderedList = itemIds.map(id => oldList.find(item => item.id === id));\n    setFilters({ ...filters,\n      [dimensionId]: reorderedList\n    });\n  };\n\n  const saveFilter = () => {\n    const id = dimension.id;\n    const filterItems = filters[id];\n\n    if (filterItems && filterItems.length) {\n      addItemFilter({\n        id,\n        value: [...filterItems]\n      });\n    } else {\n      removeItemFilter(id);\n    }\n\n    onClose(id);\n  };\n\n  const renderDialogContent = () => {\n    const commonProps = {\n      d2: context.d2,\n      onSelect: onSelectItems,\n      onDeselect: onDeselectItems,\n      onReorder: onReorderItems\n    };\n    const selectedItems = filters[dimension.id] || [];\n\n    switch (dimension.id) {\n      case DIMENSION_ID_PERIOD:\n        {\n          return <PeriodDimension selectedPeriods={selectedItems} onSelect={commonProps.onSelect} />;\n        }\n\n      case DIMENSION_ID_ORGUNIT:\n        return <OrgUnitDimension displayNameProperty={displayNameProperty} ouItems={selectedItems} {...commonProps} />;\n\n      default:\n        return <DynamicDimension selectedItems={selectedItems} dimensionId={dimension.id} onSelect={commonProps.onSelect} context={commonProps.d2} />;\n    }\n  };\n\n  return <>\n            {dimension.id && <Modal dataTest={`${dimension.id}-dimension-modal`} onClose={onClose} position=\"top\" large>\n                    <ModalTitle>{dimension.name}</ModalTitle>\n                    <ModalContent>{renderDialogContent()}</ModalContent>\n                    <ModalActions>\n                        <ButtonStrip>\n                            <Button secondary onClick={onClose}>\n                                {i18n.t('Cancel')}\n                            </Button>\n                            <Button primary onClick={saveFilter}>\n                                {i18n.t('Confirm')}\n                            </Button>\n                        </ButtonStrip>\n                    </ModalActions>\n                </Modal>}\n        </>;\n};\n\nFilterDialog.propTypes = {\n  addItemFilter: PropTypes.func,\n  dimension: PropTypes.object,\n  displayNameProperty: PropTypes.string,\n  initiallySelectedItems: PropTypes.object,\n  removeItemFilter: PropTypes.func,\n  onClose: PropTypes.func\n};\nFilterDialog.contextTypes = {\n  d2: PropTypes.object\n};\n\nconst mapStateToProps = state => ({\n  initiallySelectedItems: sGetItemFiltersRoot(state)\n});\n\nexport default connect(mapStateToProps, {\n  addItemFilter: acAddItemFilter,\n  removeItemFilter: acRemoveItemFilter\n})(FilterDialog);","export const SET_SETTINGS = 'SET_SETTINGS';\nexport const ADD_SETTINGS = 'ADD_SETTINGS';\nexport const DEFAULT_SETTINGS = {\n  keyDateFormat: 'yyyy-MM-dd',\n  keyAnalysisRelativePeriod: 'LAST_12_MONTHS',\n  keyAnalysisDigitGroupSeparator: 'SPACE',\n  displayNameProperty: 'displayName',\n  uiLocale: 'en',\n  rootOrganisationUnit: {},\n  keyGatherAnalyticalObjectStatisticsInDashboardViews: false\n};\nexport default ((state = DEFAULT_SETTINGS, action) => {\n  switch (action.type) {\n    case SET_SETTINGS:\n      {\n        return Object.assign({}, action.value);\n      }\n\n    case ADD_SETTINGS:\n      {\n        return { ...state,\n          ...action.value\n        };\n      }\n\n    default:\n      return state;\n  }\n}); // Selectors\n\nexport const sGetSettings = state => state.settings;\nexport const sGetSettingsDisplayNameProperty = state => sGetSettings(state).displayNameProperty;\nexport const sGetRootOrgUnit = state => sGetSettings(state).rootOrganisationUnit;\nexport const sGetRelativePeriod = state => sGetSettings(state).keyAnalysisRelativePeriod;\nexport const sGetUiLocale = state => sGetSettings(state).uiLocale;\nexport const sGatherAnalyticalObjectStatisticsInDashboardViews = state => sGetSettings(state).keyGatherAnalyticalObjectStatisticsInDashboardViews;","export const SET_ACTIVE_MODAL_DIMENSION = 'SET_ACTIVE_MODAL_DIMENSION';\nexport const CLEAR_ACTIVE_MODAL_DIMENSION = 'CLEAR_ACTIVE_MODAL_DIMENSION';\nexport const DEFAULT_STATE_ACTIVE_MODAL_DIMENSION = {};\nexport default ((state = DEFAULT_STATE_ACTIVE_MODAL_DIMENSION, action) => {\n  switch (action.type) {\n    case SET_ACTIVE_MODAL_DIMENSION:\n      {\n        return action.value;\n      }\n\n    case CLEAR_ACTIVE_MODAL_DIMENSION:\n      {\n        return DEFAULT_STATE_ACTIVE_MODAL_DIMENSION;\n      }\n\n    default:\n      return state;\n  }\n});\nexport const sGetActiveModalDimension = state => state.activeModalDimension;","import { SET_ACTIVE_MODAL_DIMENSION, CLEAR_ACTIVE_MODAL_DIMENSION } from '../reducers/activeModalDimension';\nexport const acSetActiveModalDimension = value => ({\n  type: SET_ACTIVE_MODAL_DIMENSION,\n  value\n});\nexport const acClearActiveModalDimension = () => ({\n  type: CLEAR_ACTIVE_MODAL_DIMENSION\n});","import React, { useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport isEmpty from 'lodash/isEmpty';\nimport i18n from '@dhis2/d2-i18n';\nimport { DimensionsPanel } from '@dhis2/analytics';\nimport { Button, Popover } from '@dhis2/ui';\nimport FilterDialog from './FilterDialog';\nimport { sGetSettingsDisplayNameProperty } from '../../reducers/settings';\nimport { sGetActiveModalDimension } from '../../reducers/activeModalDimension';\nimport { sGetDimensions } from '../../reducers/dimensions';\nimport { sGetItemFiltersRoot } from '../../reducers/itemFilters';\nimport { acClearActiveModalDimension, acSetActiveModalDimension } from '../../actions/activeModalDimension';\n\nconst FilterSelector = props => {\n  const [showPopover, setShowPopover] = useState(false);\n  const ref = useRef(null);\n\n  const onCloseDialog = () => {\n    setShowPopover(false);\n    props.clearActiveModalDimension();\n  };\n\n  const selectDimension = id => {\n    props.setActiveModalDimension(props.dimensions.find(dimension => dimension.id === id));\n  };\n\n  return <>\n            <span ref={ref}>\n                <Button onClick={() => setShowPopover(true)}>\n                    {i18n.t('Add filter')}\n                    <ArrowDropDownIcon />\n                </Button>\n            </span>\n            {showPopover && <Popover onClickOutside={onCloseDialog} reference={ref} arrow={true} placement=\"bottom-start\" dataTest=\"dashboard-filter-popover\">\n                    <DimensionsPanel style={{\n        width: '320px'\n      }} dimensions={props.dimensions} onDimensionClick={selectDimension} selectedIds={Object.keys(props.initiallySelectedItems)} />\n                </Popover>}\n            {!isEmpty(props.dimension) ? <FilterDialog displayNameProperty={props.displayNameProperty} dimension={props.dimension} onClose={onCloseDialog} /> : null}\n        </>;\n};\n\nconst mapStateToProps = state => ({\n  displayNameProperty: sGetSettingsDisplayNameProperty(state),\n  dimension: sGetActiveModalDimension(state),\n  dimensions: sGetDimensions(state),\n  initiallySelectedItems: sGetItemFiltersRoot(state)\n});\n\nFilterSelector.propTypes = {\n  clearActiveModalDimension: PropTypes.func,\n  dimension: PropTypes.object,\n  dimensions: PropTypes.array,\n  displayNameProperty: PropTypes.string,\n  initiallySelectedItems: PropTypes.object,\n  setActiveModalDimension: PropTypes.func\n};\nexport default connect(mapStateToProps, {\n  clearActiveModalDimension: acClearActiveModalDimension,\n  setActiveModalDimension: acSetActiveModalDimension\n})(FilterSelector);","import React, { useState, createRef } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link, Redirect } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport SharingDialog from '@dhis2/d2-ui-sharing-dialog';\nimport Star from '@material-ui/icons/Star';\nimport StarBorder from '@material-ui/icons/StarBorder';\nimport { Button, FlyoutMenu, Popover, MenuItem, colors } from '@dhis2/ui';\nimport { ThreeDots } from '../Item/VisualizationItem/assets/icons';\nimport { orObject } from '../../modules/util';\nimport { tStarDashboard } from '../../actions/dashboards';\nimport { tUpdateShowDescription } from '../../actions/selected';\nimport FilterSelector from '../ItemFilter/FilterSelector';\nimport { sGetSelectedId, sGetSelectedShowDescription } from '../../reducers/selected';\nimport { sGetDashboardById, sGetDashboardItems, EMPTY_DASHBOARD } from '../../reducers/dashboards';\nimport classes from './styles/ViewTitleBar.module.css';\n\nconst ViewTitleBar = (props, context) => {\n  const [moreOptionsIsOpen, setMoreOptionsIsOpen] = useState(false);\n  const [sharingDialogIsOpen, setSharingDialogIsOpen] = useState(false);\n  const [redirectUrl, setRedirectUrl] = useState(null);\n  const {\n    id,\n    name,\n    description,\n    access,\n    style,\n    showDescription,\n    starred,\n    onToggleStarredDashboard,\n    onShowHideDescription\n  } = props;\n\n  const toggleSharingDialog = () => setSharingDialogIsOpen(!sharingDialogIsOpen);\n\n  const toggleMoreOptions = () => setMoreOptionsIsOpen(!moreOptionsIsOpen);\n\n  const printLayout = () => setRedirectUrl(`${id}/printlayout`);\n\n  const printOipp = () => setRedirectUrl(`${id}/printoipp`);\n\n  const titleStyle = Object.assign({}, style.title, {\n    cursor: 'default',\n    userSelect: 'text',\n    top: '7px'\n  });\n  const StarIcon = starred ? Star : StarBorder;\n\n  if (redirectUrl) {\n    return <Redirect to={redirectUrl} />;\n  }\n\n  const showHideDescriptionLabel = showDescription ? i18n.t('Hide description') : i18n.t('Show description');\n\n  const showHideDescription = () => {\n    onShowHideDescription();\n    toggleMoreOptions();\n  };\n\n  const toggleStarredDashboardLabel = starred ? i18n.t('Unstar dashboard') : i18n.t('Star dashboard');\n\n  const toggleStarredDashboard = () => {\n    onToggleStarredDashboard();\n    toggleMoreOptions();\n  };\n\n  const buttonRef = createRef();\n  const userAccess = orObject(access);\n  return <>\n            <div className={classes.titleBar}>\n                <span style={titleStyle} data-test=\"view-dashboard-title\">\n                    {name}\n                </span>\n                <div className={classes.actions}>\n                    <div className={classes.titleBarIcon} onClick={onToggleStarredDashboard}>\n                        <StarIcon style={{\n            fill: colors.grey600\n          }} />\n                    </div>\n                    <div className={classes.strip}>\n                        {userAccess.update ? <Link className={classes.editLink} to={`/${id}/edit`} data-test=\"link-edit-dashboard\">\n                                <Button>{i18n.t('Edit')}</Button>\n                            </Link> : null}\n                        {userAccess.manage ? <Button onClick={toggleSharingDialog}>\n                                {i18n.t('Share')}\n                            </Button> : null}\n                        <FilterSelector />\n                        <span ref={buttonRef}>\n                            <Button dataTest=\"more-button\" onClick={toggleMoreOptions}>\n                                <ThreeDots />\n                                <span style={{\n                marginLeft: '5px'\n              }}>\n                                    {i18n.t('More')}\n                                </span>\n                            </Button>\n                        </span>\n                    </div>\n                    {moreOptionsIsOpen && <Popover reference={buttonRef} placement=\"bottom-start\" onClickOutside={toggleMoreOptions}>\n                            <FlyoutMenu>\n                                <MenuItem dense label={toggleStarredDashboardLabel} onClick={toggleStarredDashboard} />\n                                <MenuItem dense label={showHideDescriptionLabel} onClick={showHideDescription} />\n                                <MenuItem dense label={i18n.t('Print')} dataTest=\"print-menu-item\">\n                                    <MenuItem dense label={i18n.t('Dashboard layout')} onClick={printLayout} dataTest=\"print-layout-menu-item\" />\n                                    <MenuItem dense label={i18n.t('One item per page')} onClick={printOipp} dataTest=\"print-oipp-menu-item\" />\n                                </MenuItem>\n                            </FlyoutMenu>\n                        </Popover>}\n                </div>\n            </div>\n            {showDescription ? <div className=\"dashboard-description\" style={Object.assign({\n      paddingTop: '5px',\n      paddingBottom: '5px'\n    }, style.description, !description ? {\n      color: '#888'\n    } : {})}>\n                    {description || i18n.t('No description')}\n                </div> : null}\n            {id ? <SharingDialog d2={context.d2} id={id} type=\"dashboard\" open={sharingDialogIsOpen} onRequestClose={toggleSharingDialog} /> : null}\n        </>;\n};\n\nViewTitleBar.propTypes = {\n  access: PropTypes.object,\n  description: PropTypes.string,\n  id: PropTypes.string,\n  name: PropTypes.string,\n  showDescription: PropTypes.bool,\n  starred: PropTypes.bool,\n  style: PropTypes.object,\n  onShowHideDescription: PropTypes.func,\n  onToggleStarredDashboard: PropTypes.func\n};\nViewTitleBar.defaultProps = {\n  name: '',\n  description: '',\n  starred: false,\n  showDescription: false\n};\nViewTitleBar.contextTypes = {\n  d2: PropTypes.object\n};\n\nconst mapStateToProps = state => {\n  const id = sGetSelectedId(state);\n  const dashboard = sGetDashboardById(state, id) || EMPTY_DASHBOARD;\n  return {\n    id,\n    name: dashboard.displayName,\n    description: dashboard.displayDescription,\n    dashboardItems: sGetDashboardItems(state),\n    showDescription: sGetSelectedShowDescription(state),\n    starred: dashboard.starred,\n    access: dashboard.access\n  };\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n  const {\n    id,\n    starred,\n    showDescription\n  } = stateProps;\n  const {\n    dispatch\n  } = dispatchProps;\n  return { ...stateProps,\n    ...ownProps,\n    onToggleStarredDashboard: () => dispatch(tStarDashboard(id, !starred)),\n    onShowHideDescription: () => dispatch(tUpdateShowDescription(!showDescription))\n  };\n};\n\nexport default connect(mapStateToProps, null, mergeProps)(ViewTitleBar);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { colors } from '@dhis2/ui';\nimport EditTitleBar from './EditTitleBar';\nimport ViewTitleBar from './ViewTitleBar';\nimport './TitleBar.css';\nconst style = {\n  title: {\n    position: 'relative',\n    fontSize: 21,\n    fontWeight: 500,\n    color: colors.black,\n    minWidth: 50\n  },\n  description: {\n    fontSize: 14,\n    color: colors.grey800\n  }\n};\n\nconst TitleBar = ({\n  edit\n}) => {\n  return <div className=\"titlebar-wrapper\" style={{\n    padding: '13px 15px 5px 10px'\n  }}>\n            {edit ? <EditTitleBar style={style} /> : <ViewTitleBar style={style} />}\n        </div>;\n};\n\nTitleBar.propTypes = {\n  edit: PropTypes.bool\n};\nexport default TitleBar;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classes from './styles/NoVisualizationMessage.module.css';\n\nconst NoVisualizationMessage = ({\n  message\n}) => {\n  return <div className={classes.message}>{message}</div>;\n};\n\nNoVisualizationMessage.propTypes = {\n  message: PropTypes.string\n};\nexport default NoVisualizationMessage;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport NoVisualizationMessage from './NoVisualizationMessage';\nimport * as pluginManager from './plugin';\nimport { getBaseUrl, orObject } from '../../../../modules/util';\nimport { getGridItemDomId } from '../../../ItemGrid/gridUtil';\n\nconst pluginCredentials = d2 => {\n  return {\n    baseUrl: getBaseUrl(d2),\n    auth: d2.Api.getApi().defaultHeaders.Authorization\n  };\n};\n\nclass DefaultPlugin extends Component {\n  pluginCredentials = null;\n\n  constructor(props, context) {\n    super(props);\n    this.d2 = context.d2;\n  }\n\n  pluginIsAvailable = () => pluginManager.pluginIsAvailable(this.props.activeType || this.props.item.type);\n  shouldPluginReload = prevProps => {\n    // TODO - fix this hack, to handle bug with multiple\n    // rerendering while switching between dashboards.\n    //\n    // To determine if the rendering is happening because of a\n    // dashboard switch, check if the item reference has changed.\n    const reloadAllowed = this.props.item === prevProps.item;\n    const filtersChanged = prevProps.itemFilters !== this.props.itemFilters;\n    const vis = orObject(this.props.visualization);\n    const prevVis = orObject(prevProps.visualization);\n    const visChanged = vis.id !== prevVis.id || prevProps.activeType !== this.props.activeType;\n    return reloadAllowed && (visChanged || filtersChanged);\n  };\n  reloadPlugin = prevProps => {\n    if (this.pluginIsAvailable() && this.shouldPluginReload(prevProps)) {\n      if (this.props.activeType !== prevProps.activeType || this.props.itemFilters !== prevProps.itemFilters) {\n        pluginManager.unmount(this.props.item, prevProps.activeType);\n        pluginManager.load(this.props.item, this.props.visualization, {\n          credentials: this.pluginCredentials,\n          activeType: this.props.activeType\n        });\n      }\n    }\n  };\n\n  componentDidMount() {\n    this.pluginCredentials = pluginCredentials(this.d2);\n\n    if (this.pluginIsAvailable()) {\n      pluginManager.load(this.props.item, this.props.visualization, {\n        credentials: this.pluginCredentials,\n        activeType: this.props.activeType,\n        options: this.props.options\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    this.reloadPlugin(prevProps);\n  }\n\n  componentWillUnmount() {\n    if (this.pluginIsAvailable()) {\n      pluginManager.unmount(this.props.item, this.props.activeType);\n    }\n  }\n\n  render() {\n    const {\n      item,\n      style\n    } = this.props;\n    return this.pluginIsAvailable() ? <div id={getGridItemDomId(item.id)} style={style} /> : <NoVisualizationMessage message={i18n.t('Unable to load the plugin for this item')} />;\n  }\n\n}\n\nDefaultPlugin.contextTypes = {\n  d2: PropTypes.object\n};\nDefaultPlugin.propTypes = {\n  activeType: PropTypes.string,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object,\n  options: PropTypes.object,\n  style: PropTypes.object,\n  visualization: PropTypes.object\n};\nDefaultPlugin.defaultProps = {\n  style: {},\n  item: {},\n  itemFilters: {},\n  options: {},\n  visualization: {}\n};\nexport default DefaultPlugin;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport DefaultPlugin from './DefaultPlugin';\nimport { MAP } from '../../../../modules/itemTypes';\n\nconst MapPlugin = ({\n  applyFilters,\n  ...props\n}) => {\n  if (props.item.type === MAP) {\n    // apply filters only to thematic and event layers\n    // for maps AO\n    const mapViews = props.visualization.mapViews.map(mapView => {\n      if (mapView.layer.includes('thematic') || mapView.layer.includes('event')) {\n        return applyFilters(mapView, props.itemFilters);\n      }\n\n      return mapView;\n    });\n    props.visualization = { ...props.visualization,\n      mapViews\n    };\n  } else {\n    // this is the case of a non map AO passed to the maps plugin\n    // due to a visualization type switch in dashboard item\n    // maps plugin takes care of converting the AO to a suitable format\n    props.visualization = applyFilters(props.visualization, props.itemFilters);\n  }\n\n  return <DefaultPlugin options={{\n    hideTitle: true\n  }} {...props} />;\n};\n\nMapPlugin.propTypes = {\n  applyFilters: PropTypes.func,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object,\n  visualization: PropTypes.object\n};\nexport default MapPlugin;","import React from 'react';\nimport { CircularLoader } from '@dhis2/ui';\nimport classes from './styles/LoadingMask.module.css';\n\nconst LoadingMask = () => {\n  return <div className={classes.center}>\n            <CircularLoader />\n        </div>;\n};\n\nexport default LoadingMask;","const getFilteredVisualization = (visualization, filters) => {\n  if (!Object.keys(filters).length) {\n    return visualization;\n  } // deep clone objects in filters to avoid changing the visualization in the Redux store\n\n\n  const visRows = visualization.rows.map(obj => ({ ...obj\n  }));\n  const visColumns = visualization.columns.map(obj => ({ ...obj\n  }));\n  const visFilters = visualization.filters.map(obj => ({ ...obj\n  }));\n  Object.keys(filters).forEach(dimensionId => {\n    if (filters[dimensionId]) {\n      let dimensionFound = false;\n      [visRows, visColumns, visFilters].forEach(dimensionObjects => dimensionObjects.filter(obj => obj.dimension === dimensionId).forEach(obj => {\n        dimensionFound = true;\n        obj.items = filters[dimensionId];\n      })); // add dimension to filters if not already present elsewhere\n\n      if (!dimensionFound) {\n        visFilters.push({\n          dimension: dimensionId,\n          items: filters[dimensionId]\n        });\n      }\n    }\n  });\n  return { ...visualization,\n    rows: visRows,\n    columns: visColumns,\n    filters: visFilters\n  };\n};\n\nexport default getFilteredVisualization;","import { VIS_TYPE_COLUMN, VIS_TYPE_PIVOT_TABLE, getAdaptedUiLayoutByType } from '@dhis2/analytics';\nimport { REPORT_TABLE, CHART, MAP } from '../../../../modules/itemTypes';\nexport const THEMATIC_LAYER = 'thematic';\n\nconst extractMapView = map => map.mapViews && map.mapViews.find(mv => mv.layer.includes(THEMATIC_LAYER));\n\nconst getWithoutId = object => ({ ...object,\n  id: undefined\n});\n\nconst getVisualizationConfig = (visualization, originalType, activeType) => {\n  if (originalType === MAP && originalType !== activeType) {\n    const extractedMapView = extractMapView(visualization);\n\n    if (extractedMapView === undefined) {\n      return null;\n    }\n\n    return getWithoutId({ ...visualization,\n      ...extractedMapView,\n      mapViews: undefined,\n      type: activeType === CHART ? VIS_TYPE_COLUMN : VIS_TYPE_PIVOT_TABLE\n    });\n  } else if (originalType === REPORT_TABLE && activeType === CHART) {\n    const layout = getAdaptedUiLayoutByType(visualization, VIS_TYPE_COLUMN);\n    return getWithoutId({ ...visualization,\n      ...layout,\n      type: VIS_TYPE_COLUMN\n    });\n  } else if (originalType === CHART && activeType === REPORT_TABLE) {\n    const layout = getAdaptedUiLayoutByType(visualization, VIS_TYPE_PIVOT_TABLE);\n    return getWithoutId({ ...visualization,\n      ...layout,\n      type: VIS_TYPE_PIVOT_TABLE\n    });\n  }\n\n  return getWithoutId(visualization);\n};\n\nexport default getVisualizationConfig;","// Note that this ignores discrepancies in 'this', so shouldn't be used with bound functions\n// This is useful instead of lodash/memoize when we only need to memoize a single value\n// Inspiration: https://github.com/alexreardon/memoize-one\nconst memoizeOne = fn => {\n  let lastArgs = undefined;\n  let lastValue = undefined;\n  return (...args) => {\n    if (lastArgs && args.length === lastArgs.length && args.every((arg, i) => arg === lastArgs[i])) {\n      return lastValue;\n    }\n\n    lastArgs = args;\n    lastValue = fn(...args);\n    return lastValue;\n  };\n};\n\nexport default memoizeOne;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport VisualizationPlugin from '@dhis2/data-visualizer-plugin';\nimport i18n from '@dhis2/d2-i18n';\nimport DefaultPlugin from './DefaultPlugin';\nimport MapPlugin from './MapPlugin';\nimport LoadingMask from './LoadingMask';\nimport NoVisualizationMessage from './NoVisualizationMessage';\nimport getFilteredVisualization from './getFilteredVisualization';\nimport getVisualizationConfig from './getVisualizationConfig';\nimport { VISUALIZATION, MAP, CHART, REPORT_TABLE } from '../../../../modules/itemTypes';\nimport { getVisualizationId } from '../../../../modules/item';\nimport memoizeOne from '../../../../modules/memoizeOne';\nimport { sGetVisualization } from '../../../../reducers/visualizations';\n\nclass Visualization extends React.Component {\n  state = {\n    pluginLoaded: false\n  };\n\n  constructor(props) {\n    super(props);\n    this.memoizedGetFilteredVisualization = memoizeOne(getFilteredVisualization);\n    this.memoizedGetVisualizationConfig = memoizeOne(getVisualizationConfig);\n  }\n\n  onLoadingComplete = () => {\n    this.setState({\n      pluginLoaded: true\n    });\n  };\n\n  render() {\n    const {\n      visualization,\n      activeType,\n      item,\n      itemFilters,\n      availableHeight\n    } = this.props;\n\n    if (!visualization) {\n      return <NoVisualizationMessage message={i18n.t('No data to display')} />;\n    }\n\n    const pluginProps = {\n      item,\n      itemFilters,\n      activeType,\n      style: {\n        height: availableHeight\n      },\n      visualization: this.memoizedGetVisualizationConfig(visualization, item.type, activeType)\n    };\n\n    switch (activeType) {\n      case VISUALIZATION:\n      case CHART:\n      case REPORT_TABLE:\n        {\n          return <>\n                        {!this.state.pluginLoaded && <div style={pluginProps.style}>\n                                <LoadingMask />\n                            </div>}\n                        <VisualizationPlugin d2={this.context.d2} visualization={this.memoizedGetFilteredVisualization(pluginProps.visualization, pluginProps.itemFilters)} onLoadingComplete={this.onLoadingComplete} forDashboard={true} style={pluginProps.style} />\n                    </>;\n        }\n\n      case MAP:\n        {\n          return <MapPlugin applyFilters={this.memoizedGetFilteredVisualization} {...pluginProps} />;\n        }\n\n      default:\n        {\n          pluginProps.visualization = this.memoizedGetFilteredVisualization(pluginProps.visualization, pluginProps.itemFilters);\n          return <DefaultPlugin {...pluginProps} />;\n        }\n    }\n  }\n\n}\n\nVisualization.propTypes = {\n  activeType: PropTypes.string,\n  availableHeight: PropTypes.number,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object,\n  visualization: PropTypes.object\n};\nVisualization.contextTypes = {\n  d2: PropTypes.object\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    visualization: sGetVisualization(state, getVisualizationId(ownProps.item))\n  };\n};\n\nexport default connect(mapStateToProps)(Visualization);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Warning } from './assets/icons';\nimport classes from './styles/FatalErrorBoundary.module.css';\n\nclass FatalErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      errorFound: false\n    };\n  }\n\n  componentDidCatch(error, info) {\n    this.setState({\n      errorFound: true\n    });\n    console.log('error: ', error);\n    console.log('info: ', info);\n  }\n\n  render() {\n    if (this.state.errorFound) {\n      return <p className={classes.container}>\n                    <span className={classes.icon}>\n                        <Warning />\n                    </span>\n                    <span className={classes.message}>\n                        {i18n.t('There was a problem loading this dashboard item')}\n                    </span>\n                </p>;\n    }\n\n    return this.props.children;\n  }\n\n}\n\nFatalErrorBoundary.propTypes = {\n  children: PropTypes.node\n};\nexport default FatalErrorBoundary;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classes from './styles/ItemHeader.module.css';\n\nconst ViewItemActions = ({\n  actionButtons\n}) => {\n  return actionButtons ? <div className={classes.itemActionsWrap}>{actionButtons}</div> : null;\n};\n\nViewItemActions.propTypes = {\n  actionButtons: PropTypes.node\n};\nexport default ViewItemActions;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { colors } from '@dhis2/ui';\nimport classes from './styles/DeleteItemButton.module.css';\n\nconst DeleteItemButton = ({\n  onClick\n}) => <button type=\"button\" className={classes.deleteItemButton} onClick={onClick} title={i18n.t(`Delete item`)}>\n        <DeleteIcon style={{\n    fill: colors.red500\n  }} />\n    </button>;\n\nDeleteItemButton.propTypes = {\n  onClick: PropTypes.func\n};\nexport default DeleteItemButton;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport DeleteItemButton from './DeleteItemButton';\nimport { acRemoveDashboardItem } from '../../../actions/editDashboard';\nimport classes from './styles/ItemHeader.module.css';\n\nconst EditItemActions = ({\n  itemId,\n  acRemoveDashboardItem\n}) => {\n  const handleDeleteItem = () => acRemoveDashboardItem(itemId);\n\n  return <div className={classes.itemActionsWrap}>\n            <DeleteItemButton onClick={handleDeleteItem} />\n        </div>;\n};\n\nEditItemActions.propTypes = {\n  acRemoveDashboardItem: PropTypes.func,\n  itemId: PropTypes.string\n};\nconst mapDispatchToProps = {\n  acRemoveDashboardItem\n};\nexport default connect(null, mapDispatchToProps)(EditItemActions);","import React from 'react';\nimport { colors } from '@dhis2/ui';\n\nconst WarningIcon = () => <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" fill={colors.grey600}>\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z\" />\n    </svg>;\n\nexport default WarningIcon;","import React from 'react';\nimport { Tooltip } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport InfoIcon from '../../../icons/Info';\nimport classes from './styles/PrintItemInfo.module.css';\n\nconst PrintWarning = () => <div className={classes.warning}>\n        <Tooltip content={i18n.t('This item has been shortened to fit on one page')} placement=\"bottom\">\n            <InfoIcon />\n        </Tooltip>\n    </div>;\n\nexport default PrintWarning;","export const EDIT = 'edit';\nexport const NEW = 'new';\nexport const VIEW = 'view';\nexport const PRINT = 'print';\nexport const PRINT_LAYOUT = 'print-layout';\nexport const isEditMode = mode => [EDIT, NEW].includes(mode);\nexport const isPrintMode = mode => [PRINT, PRINT_LAYOUT].includes(mode);\nexport const isViewMode = mode => mode === VIEW;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ViewItemActions from './ViewItemActions';\nimport EditItemActions from './EditItemActions';\nimport PrintItemInfo from './PrintItemInfo';\nimport { VIEW, EDIT, PRINT_LAYOUT } from '../../Dashboard/dashboardModes';\nimport classes from './styles/ItemHeader.module.css';\n\nconst getItemActionsMap = isShortened => {\n  return {\n    [VIEW]: ViewItemActions,\n    [EDIT]: EditItemActions,\n    [PRINT_LAYOUT]: isShortened ? PrintItemInfo : null\n  };\n}; // This is the margin-top + margin-bottom defined in the css file\n\n\nexport const HEADER_MARGIN_HEIGHT = 12;\nconst ItemHeader = React.forwardRef(({\n  dashboardMode,\n  title,\n  isShortened,\n  ...rest\n}, ref) => {\n  const Actions = getItemActionsMap(isShortened)[dashboardMode];\n  return <div className={classes.itemHeaderWrap} ref={ref}>\n                <p className={classes.itemTitle}>{title}</p>\n                {Actions ? <Actions {...rest} /> : null}\n            </div>;\n});\nItemHeader.displayName = 'ItemHeader';\nItemHeader.propTypes = {\n  dashboardMode: PropTypes.string,\n  isShortened: PropTypes.bool,\n  title: PropTypes.string\n};\nexport default connect(null, null, null, {\n  forwardRef: true\n})(ItemHeader);","import React, { useState, createRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { isSingleValue, isYearOverYear, VIS_TYPE_GAUGE, VIS_TYPE_PIE } from '@dhis2/analytics';\nimport { Button, Menu, Popover, MenuItem, Divider, colors } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport { ThreeDots, SpeechBubble } from './assets/icons';\nimport { pluginIsAvailable, getLink } from './Visualization/plugin';\nimport { CHART, MAP, REPORT_TABLE, EVENT_CHART, EVENT_REPORT, isTrackerDomainType, hasMapView, getAppName } from '../../../modules/itemTypes';\nconst iconFill = {\n  fill: colors.grey600\n};\n\nconst ItemHeaderButtons = (props, context) => {\n  const [menuIsOpen, setMenuIsOpen] = useState(null);\n  const {\n    item,\n    visualization,\n    onSelectActiveType,\n    activeType\n  } = props;\n  const isTrackerType = isTrackerDomainType(item.type);\n\n  const onViewTable = () => {\n    closeMenu();\n    onSelectActiveType(isTrackerType ? EVENT_REPORT : REPORT_TABLE);\n  };\n\n  const onViewChart = () => {\n    closeMenu();\n    onSelectActiveType(isTrackerType ? EVENT_CHART : CHART);\n  };\n\n  const onViewMap = () => {\n    closeMenu();\n    onSelectActiveType(MAP);\n  };\n\n  const itemHasMapView = () => hasMapView(item.type);\n\n  const handleInterpretationClick = () => {\n    props.onToggleFooter();\n\n    if (menuIsOpen) {\n      closeMenu();\n    }\n  };\n\n  const openMenu = () => setMenuIsOpen(true);\n\n  const closeMenu = () => setMenuIsOpen(false);\n\n  const type = visualization.type || item.type;\n  const canViewAs = !isSingleValue(type) && !isYearOverYear(type) && type !== VIS_TYPE_GAUGE && type !== VIS_TYPE_PIE;\n  const interpretationMenuLabel = props.activeFooter ? i18n.t(`Hide interpretations and details`) : i18n.t(`Show interpretations and details`);\n\n  const ViewAsMenuItems = () => <>\n            {activeType !== CHART && activeType !== EVENT_CHART && <MenuItem dense label={i18n.t('View as Chart')} onClick={onViewChart} icon={<ChartIcon style={iconFill} />} />}\n            {activeType !== REPORT_TABLE && activeType !== EVENT_REPORT && <MenuItem dense label={i18n.t('View as Table')} onClick={onViewTable} icon={<TableIcon style={iconFill} />} />}\n            {itemHasMapView() && activeType !== MAP && <MenuItem dense label={i18n.t('View as Map')} onClick={onViewMap} icon={<MapIcon style={iconFill} />} />}\n        </>;\n\n  const buttonRef = createRef();\n  return pluginIsAvailable(activeType || item.type) ? <>\n            <div ref={buttonRef}>\n                <Button small secondary onClick={openMenu} dataTest=\"dashboarditem-menu-button\">\n                    <ThreeDots />\n                </Button>\n            </div>\n            {menuIsOpen && <Popover reference={buttonRef} placement=\"auto-start\" arrow={false} onClickOutside={closeMenu}>\n                    <Menu>\n                        {canViewAs && <>\n                                <ViewAsMenuItems />\n                                <Divider />\n                            </>}\n                        <MenuItem dense icon={<LaunchIcon style={{\n          fill: '#6e7a8a'\n        }} />} label={i18n.t('Open in {{appName}} app', {\n          appName: getAppName(item.type)\n        })} href={getLink(item, context.d2)} target=\"_blank\" />\n                        <MenuItem dense icon={<SpeechBubble />} label={interpretationMenuLabel} onClick={handleInterpretationClick} />\n                    </Menu>\n                </Popover>}\n        </> : null;\n};\n\nItemHeaderButtons.propTypes = {\n  activeFooter: PropTypes.bool,\n  activeType: PropTypes.string,\n  item: PropTypes.object,\n  visualization: PropTypes.object,\n  onSelectActiveType: PropTypes.func,\n  onToggleFooter: PropTypes.func\n};\nItemHeaderButtons.contextTypes = {\n  d2: PropTypes.object\n};\nexport default ItemHeaderButtons;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getVisualizationId } from '../../../modules/item';\nimport InterpretationsComponent from '@dhis2/d2-ui-interpretations';\nimport classes from './styles/ItemFooter.module.css';\n\nconst ItemFooter = (props, context) => <div data-test=\"dashboarditem-footer\">\n        <hr className={classes.line} />\n        <div className={classes.scrollContainer}>\n            <InterpretationsComponent d2={context.d2} item={props.item} type={props.item.type.toLowerCase()} id={getVisualizationId(props.item)} appName=\"dashboard\" />\n        </div>\n    </div>;\n\nItemFooter.contextTypes = {\n  d2: PropTypes.object.isRequired\n};\nItemFooter.propTypes = {\n  item: PropTypes.object.isRequired\n};\nexport default ItemFooter;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport uniqueId from 'lodash/uniqueId';\nimport Visualization from './Visualization/Visualization';\nimport FatalErrorBoundary from './FatalErrorBoundary';\nimport ItemHeader, { HEADER_MARGIN_HEIGHT } from '../ItemHeader/ItemHeader';\nimport ItemHeaderButtons from './ItemHeaderButtons';\nimport ItemFooter from './ItemFooter';\nimport { apiPostDataStatistics } from '../../../api/dataStatistics';\nimport { apiFetchVisualization } from '../../../api/metadata';\nimport { sGetVisualization } from '../../../reducers/visualizations';\nimport { sGetSelectedItemActiveType } from '../../../reducers/selected';\nimport { sGetIsEditing } from '../../../reducers/editDashboard';\nimport { sGetItemFiltersRoot, DEFAULT_STATE_ITEM_FILTERS } from '../../../reducers/itemFilters';\nimport { sGatherAnalyticalObjectStatisticsInDashboardViews } from '../../../reducers/settings';\nimport { acAddVisualization } from '../../../actions/visualizations';\nimport { acSetSelectedItemActiveType } from '../../../actions/selected';\nimport { getDataStatisticsName } from '../../../modules/itemTypes';\nimport { getVisualizationId, getVisualizationName } from '../../../modules/item';\nimport memoizeOne from '../../../modules/memoizeOne';\nimport { isEditMode, isPrintMode, isViewMode } from '../../Dashboard/dashboardModes';\nimport { ITEM_CONTENT_PADDING_BOTTOM } from '../../ItemGrid/ItemGrid';\nexport class Item extends Component {\n  state = {\n    showFooter: false,\n    configLoaded: false\n  };\n\n  constructor(props, context) {\n    super(props);\n    this.d2 = context.d2;\n    this.contentRef = React.createRef();\n    this.headerRef = React.createRef();\n    this.memoizedGetContentHeight = memoizeOne((calculatedHeight, measuredHeight, preferMeasured) => preferMeasured ? measuredHeight || calculatedHeight : calculatedHeight);\n  }\n\n  async componentDidMount() {\n    this.props.updateVisualization(await apiFetchVisualization(this.props.item));\n\n    try {\n      if (this.props.gatherDataStatistics && isViewMode(this.props.dashboardMode)) {\n        await apiPostDataStatistics(getDataStatisticsName(this.props.item.type), getVisualizationId(this.props.item));\n      }\n    } catch (e) {\n      console.log(e);\n    }\n\n    this.setState({\n      configLoaded: true\n    });\n  }\n\n  getUniqueKey = memoizeOne(() => uniqueId());\n  onToggleFooter = () => {\n    this.setState({\n      showFooter: !this.state.showFooter\n    }, this.props.onToggleItemExpanded(this.props.item.id));\n  };\n  setActiveType = type => {\n    type !== this.getActiveType() && this.props.setActiveType(this.props.item.id, type);\n  };\n  getActiveType = () => {\n    if (this.props.isEditing) {\n      return this.props.item.type;\n    }\n\n    return this.props.activeType || this.props.item.type;\n  };\n  getAvailableHeight = () => {\n    const calculatedHeight = this.props.item.originalHeight - this.headerRef.current.clientHeight - HEADER_MARGIN_HEIGHT - ITEM_CONTENT_PADDING_BOTTOM;\n    return this.memoizedGetContentHeight(calculatedHeight, this.contentRef ? this.contentRef.offsetHeight : null, isEditMode(this.props.dashboardMode) || isPrintMode(this.props.dashboardMode));\n  };\n\n  render() {\n    const {\n      item,\n      dashboardMode,\n      itemFilters\n    } = this.props;\n    const {\n      showFooter\n    } = this.state;\n    const activeType = this.getActiveType();\n    const actionButtons = <ItemHeaderButtons item={item} visualization={this.props.visualization} onSelectActiveType={this.setActiveType} onToggleFooter={this.onToggleFooter} activeType={activeType} activeFooter={showFooter} />;\n    return <>\n                <ItemHeader title={getVisualizationName(item)} itemId={item.id} actionButtons={actionButtons} ref={this.headerRef} dashboardMode={dashboardMode} isShortened={item.shortened} />\n                <FatalErrorBoundary>\n                    <div key={this.getUniqueKey(itemFilters)} className=\"dashboard-item-content\" ref={ref => this.contentRef = ref}>\n                        {this.state.configLoaded && <Visualization item={item} activeType={activeType} itemFilters={itemFilters} availableHeight={this.getAvailableHeight()} />}\n                    </div>\n                </FatalErrorBoundary>\n                {isViewMode(dashboardMode) && showFooter ? <ItemFooter item={item} /> : null}\n            </>;\n  }\n\n}\nItem.contextTypes = {\n  d2: PropTypes.object\n};\nItem.propTypes = {\n  activeType: PropTypes.string,\n  dashboardMode: PropTypes.string,\n  gatherDataStatistics: PropTypes.bool,\n  isEditing: PropTypes.bool,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object,\n  setActiveType: PropTypes.func,\n  updateVisualization: PropTypes.func,\n  visualization: PropTypes.object,\n  onToggleItemExpanded: PropTypes.func\n};\nItem.defaultProps = {\n  item: {},\n  onToggleItemExpanded: Function.prototype,\n  visualization: {}\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const itemFilters = !isEditMode(ownProps.dashboardMode) ? sGetItemFiltersRoot(state) : DEFAULT_STATE_ITEM_FILTERS;\n  return {\n    activeType: sGetSelectedItemActiveType(state, ownProps.item?.id),\n    isEditing: sGetIsEditing(state),\n    itemFilters,\n    visualization: sGetVisualization(state, getVisualizationId(ownProps.item)),\n    gatherDataStatistics: sGatherAnalyticalObjectStatisticsInDashboardViews(state)\n  };\n};\n\nconst mapDispatchToProps = {\n  setActiveType: acSetSelectedItemActiveType,\n  updateVisualization: acAddVisualization\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Item);","import React from 'react';\nimport { colors } from '@dhis2/ui';\nconst style = {\n  backgroundColor: colors.grey200,\n  border: 'none',\n  height: '1px',\n  margin: '0px 0px 5px 0px'\n};\n\nconst Line = () => <hr style={style} />;\n\nexport default Line;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { colors } from '@dhis2/ui';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport Line from '../../../widgets/Line';\nimport { sGetMessagesRoot } from '../../../reducers/messages';\nimport { formatDate } from '../../../modules/util';\nimport { isViewMode } from '../../Dashboard/dashboardModes';\nimport './MessagesItem.css';\nconst PRIVATE = 'PRIVATE';\nconst messageTypes = {\n  [PRIVATE]: 'Private',\n  VALIDATION_RESULT: 'Validation',\n  TICKET: 'Ticket',\n  SYSTEM: 'System'\n};\nconst style = {\n  list: {\n    listStyleType: 'none',\n    paddingLeft: '0px'\n  },\n  seeAll: {\n    textAlign: 'center',\n    fontSize: '13px',\n    marginBottom: '5px'\n  },\n  sender: {\n    fontSize: '13px',\n    lineHeight: '15px',\n    margin: 0,\n    color: colors.grey800\n  },\n  snippet: {\n    color: colors.grey800,\n    fontSize: '13px',\n    lineHeight: '15px',\n    maxHeight: '30px',\n    overflow: 'hidden'\n  }\n};\n\nclass MessagesItem extends Component {\n  state = {\n    uiLocale: ''\n  };\n\n  async componentDidMount() {\n    const uiLocale = await this.context.d2.currentUser.userSettings.get('keyUiLocale');\n    this.setState({\n      uiLocale\n    });\n  }\n\n  getMessageHref = msg => {\n    const msgIdentifier = msg ? `#/${msg.messageType}/${msg.id}` : '';\n    return `${this.context.baseUrl}/dhis-web-messaging/${msgIdentifier}`;\n  };\n  getMessageSender = msg => {\n    const latestMsg = msg.messages.slice(-1)[0];\n    return latestMsg.sender ? latestMsg.sender.displayName : '';\n  };\n  getMessageItems = () => {\n    const modeClass = isViewMode(this.props.dashboardMode) ? 'view' : null;\n    return this.props.messages.map(msg => {\n      const redirectToMsg = () => {\n        if (isViewMode(this.props.dashboardMode)) {\n          document.location.href = this.getMessageHref(msg);\n        }\n      };\n\n      const sender = msg.messageType === PRIVATE ? this.getMessageSender(msg) : messageTypes[msg.messageType];\n      const readClass = !msg.read ? 'unread' : null;\n      const latestMsg = msg.messages.slice(-1)[0];\n      const msgDate = latestMsg.lastUpdated;\n      return <li className={`message-item ${modeClass}`} key={msg.id} onClick={redirectToMsg}>\n                    <p className={`message-title ${readClass}`}>\n                        {msg.displayName} ({msg.messageCount})\n                    </p>\n                    <p style={style.sender}>\n                        {sender} - {formatDate(msgDate, this.state.uiLocale)}\n                    </p>\n                    <p style={style.snippet}>{latestMsg.text}</p>\n                </li>;\n    });\n  };\n\n  render() {\n    return <>\n                <ItemHeader title={i18n.t('Messages')} itemId={this.props.item.id} dashboardMode={this.props.dashboardMode} isShortened={this.props.item.shortened} />\n                <Line />\n                {this.props.messages.length > 0 && <div className=\"dashboard-item-content\">\n                        <ul style={style.list}>{this.getMessageItems()}</ul>\n                        <div style={style.seeAll}>\n                            <a href={this.getMessageHref()}>\n                                {i18n.t('See all messages')}\n                            </a>\n                        </div>\n                    </div>}\n            </>;\n  }\n\n}\n\nMessagesItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  messages: PropTypes.array\n};\nMessagesItem.contextTypes = {\n  d2: PropTypes.object,\n  baseUrl: PropTypes.string\n};\n\nconst mapStateToProps = state => {\n  return {\n    messages: Object.values(sGetMessagesRoot(state))\n  };\n};\n\nconst MessagesContainer = connect(mapStateToProps, null)(MessagesItem);\nexport default MessagesContainer;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nconst NotSupportedItem = props => <>\n        <ItemHeader title={i18n.t('Item type \"{{type}}\" not supported', {\n    type: props.item.type\n  })} itemId={props.item.id} dashboardMode={props.dashboardMode} isShortened={props.item.shortened} />\n        <div style={{\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '90%'\n  }}>\n            <NotInterestedIcon style={{\n      width: 100,\n      height: 100,\n      align: 'center'\n    }} color=\"disabled\" />\n        </div>\n    </>;\n\nNotSupportedItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object\n};\nexport default NotSupportedItem;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst DescriptionIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill={colors.grey500}>\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M14 2H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6zm2 16H8v-2h8v2zm0-4H8v-2h8v2zm-3-5V3.5L18.5 9H13z\" />\n    </svg>;\n\nDescriptionIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default DescriptionIcon;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst DeleteIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill={colors.red500}>\n        <path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>;\n\nDeleteIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default DeleteIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { colors } from '@dhis2/ui';\nimport DescriptionIcon from '../../../icons/Description';\nimport DeleteIcon from '../../../icons/Delete';\nimport Line from '../../../widgets/Line';\nimport { itemTypeMap, getItemUrl } from '../../../modules/itemTypes';\nimport { orArray } from '../../../modules/util';\nimport { tRemoveListItemContent } from './actions';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport { isEditMode } from '../../Dashboard/dashboardModes';\nimport classes from './Item.module.css';\n\nconst getItemTitle = item => itemTypeMap[item.type].pluralTitle;\n\nconst getContentItems = item => orArray(item[itemTypeMap[item.type].propName]).filter((item, index, array) => array.findIndex(el => el.id === item.id) === index);\n\nconst ListItem = (props, context) => {\n  const {\n    item,\n    dashboardMode,\n    tRemoveListItemContent\n  } = props;\n  const contentItems = getContentItems(item);\n\n  const getLink = contentItem => {\n    const deleteButton = <button className={classes.deletebutton} onClick={() => tRemoveListItemContent(item, contentItem)}>\n                <DeleteIcon className={classes.deleteicon} />\n            </button>;\n    return <>\n                <a className={classes.link} style={{\n        color: colors.grey900\n      }} href={getItemUrl(item.type, contentItem, context.d2)}>\n                    {contentItem.name}\n                </a>\n                {isEditMode(dashboardMode) ? deleteButton : null}\n            </>;\n  };\n\n  return <>\n            <ItemHeader title={getItemTitle(item)} itemId={item.id} dashboardMode={dashboardMode} isShortened={item.shortened} />\n            <Line />\n            <div className=\"dashboard-item-content\">\n                <ul className={classes.list}>\n                    {contentItems.map(contentItem => <li className={classes.item} key={contentItem.id}>\n                            <DescriptionIcon className={classes.itemicon} />\n                            {getLink(contentItem)}\n                        </li>)}\n                </ul>\n            </div>\n        </>;\n};\n\nListItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  tRemoveListItemContent: PropTypes.func\n};\nListItem.contextTypes = {\n  d2: PropTypes.object\n};\nexport default connect(null, {\n  tRemoveListItemContent\n})(ListItem);","import { acUpdateDashboardItem, acRemoveDashboardItem } from '../../../actions/editDashboard';\nimport { itemTypeMap } from '../../../modules/itemTypes';\nexport const tRemoveListItemContent = (dashboardItem, content) => dispatch => {\n  const listItemType = itemTypeMap[dashboardItem.type].propName;\n  const newContent = dashboardItem[listItemType].filter(item => item.id !== content.id);\n\n  if (newContent.length) {\n    dashboardItem[listItemType] = newContent;\n    dispatch(acUpdateDashboardItem(dashboardItem));\n  } else {\n    dispatch(acRemoveDashboardItem(dashboardItem));\n  }\n};","/** @module reducers/editDashboard */\nimport update from 'immutability-helper';\nimport isEmpty from 'lodash/isEmpty';\nimport { orArray } from '../modules/util';\nexport const SET_PRINT_DASHBOARD = 'SET_PRINT_DASHBOARD';\nexport const CLEAR_PRINT_DASHBOARD = 'CLEAR_PRINT_DASHBOARD';\nexport const ADD_PRINT_DASHBOARD_ITEM = 'ADD_PRINT_DASHBOARD_ITEM';\nexport const SET_PRINT_DASHBOARD_LAYOUT = 'SET_PRINT_DASHBOARD_LAYOUT';\nexport const REMOVE_PRINT_DASHBOARD_ITEM = 'REMOVE_PRINT_DASHBOARD_ITEM';\nexport const UPDATE_PRINT_DASHBOARD_ITEM = 'UPDATE_PRINT_DASHBOARD_ITEM';\nexport const DEFAULT_STATE_PRINT_DASHBOARD = {};\nconst DEFAULT_DASHBOARD_ITEMS = [];\nexport const NEW_PRINT_DASHBOARD_STATE = {\n  id: '',\n  name: '',\n  access: {},\n  description: '',\n  dashboardItems: DEFAULT_DASHBOARD_ITEMS\n};\nexport default ((state = DEFAULT_STATE_PRINT_DASHBOARD, action) => {\n  switch (action.type) {\n    case SET_PRINT_DASHBOARD:\n      {\n        const newState = {};\n        Object.keys(NEW_PRINT_DASHBOARD_STATE).map(k => newState[k] = action.value[k]);\n        return newState;\n      }\n\n    case CLEAR_PRINT_DASHBOARD:\n      return DEFAULT_STATE_PRINT_DASHBOARD;\n\n    case ADD_PRINT_DASHBOARD_ITEM:\n      if (!action.value.position) {\n        return update(state, {\n          dashboardItems: {\n            $unshift: [action.value]\n          }\n        });\n      }\n\n      return update(state, {\n        dashboardItems: {\n          $splice: [[parseInt(action.value.position), 0, action.value]]\n        }\n      });\n\n    case REMOVE_PRINT_DASHBOARD_ITEM:\n      {\n        const idToRemove = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === idToRemove);\n\n        if (dashboardItemIndex > -1) {\n          return update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1]]\n            }\n          });\n        }\n\n        return state;\n      }\n\n    case UPDATE_PRINT_DASHBOARD_ITEM:\n      {\n        const dashboardItem = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === dashboardItem.id);\n\n        if (dashboardItemIndex > -1) {\n          const newState = update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1, Object.assign({}, dashboardItem)]]\n            }\n          });\n          return newState;\n        }\n\n        return state;\n      }\n\n    case SET_PRINT_DASHBOARD_LAYOUT:\n      {\n        const stateItems = orArray(state.dashboardItems);\n        let layoutHasChanged = false;\n        const newStateItems = action.value.map(({\n          x,\n          y,\n          w,\n          h,\n          i\n        }) => {\n          const stateItem = stateItems.find(si => si.id === i);\n\n          if (!(stateItem.x === x && stateItem.y === y && stateItem.w === w && stateItem.h === h)) {\n            layoutHasChanged = true;\n            return Object.assign({}, stateItem, {\n              w,\n              h,\n              x,\n              y\n            });\n          }\n\n          return stateItem;\n        });\n        return layoutHasChanged ? { ...state,\n          dashboardItems: newStateItems\n        } : state;\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetPrintDashboardRoot = state => state.printDashboard; // selectors\n\nexport const sGetIsPrinting = state => !isEmpty(state.printDashboard);\nexport const sGetPrintDashboardName = state => sGetPrintDashboardRoot(state).name;\nexport const sGetPrintDashboardDescription = state => sGetPrintDashboardRoot(state).description;\nexport const sGetPrintDashboardItems = state => {\n  return sGetPrintDashboardRoot(state)?.dashboardItems || DEFAULT_DASHBOARD_ITEMS;\n};","import React from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport Input from '@material-ui/core/Input';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport PrintItemInfo from '../ItemHeader/PrintItemInfo';\nimport Line from '../../../widgets/Line';\nimport { Parser as RichTextParser, Editor as RichTextEditor } from '@dhis2/d2-ui-rich-text';\nimport { acUpdateDashboardItem } from '../../../actions/editDashboard';\nimport { sGetEditDashboardItems } from '../../../reducers/editDashboard';\nimport { sGetDashboardItems } from '../../../reducers/dashboards';\nimport { sGetIsPrinting, sGetPrintDashboardItems } from '../../../reducers/printDashboard';\nimport { isEditMode, PRINT_LAYOUT } from '../../Dashboard/dashboardModes';\nconst style = {\n  textDiv: {\n    padding: '10px',\n    whiteSpace: 'pre-line',\n    lineHeight: '20px'\n  },\n  textField: {\n    fontSize: '14px',\n    fontStretch: 'normal',\n    width: '90%',\n    margin: '0 auto',\n    display: 'block',\n    lineHeight: '24px'\n  },\n  container: {\n    marginBottom: '20px',\n    marginTop: '20px'\n  }\n};\n\nconst TextItem = props => {\n  const {\n    item,\n    dashboardMode,\n    text,\n    acUpdateDashboardItem\n  } = props;\n\n  const onChangeText = event => {\n    const updatedItem = { ...item,\n      text: event.target.value\n    };\n    acUpdateDashboardItem(updatedItem);\n  };\n\n  const viewItem = () => {\n    const textDivStyle = Object.assign({}, style.textField, style.textDiv);\n    return <div className=\"dashboard-item-content\" style={style.container}>\n                <RichTextParser style={textDivStyle}>{text}</RichTextParser>\n            </div>;\n  };\n\n  const editItem = () => {\n    return <>\n                <ItemHeader title={i18n.t('Text item')} itemId={item.id} dashboardMode={dashboardMode} />\n                <Line />\n                <div className=\"dashboard-item-content\">\n                    <RichTextEditor onEdit={onChangeText}>\n                        <Input value={text} multiline fullWidth style={style.textField} placeholder={i18n.t('Add text here')} onChange={onChangeText} />\n                    </RichTextEditor>\n                </div>\n            </>;\n  };\n\n  const printItem = () => {\n    const textDivStyle = Object.assign({}, style.textField, style.textDiv);\n    return <>\n                {props.item.shortened ? <PrintItemInfo /> : null}\n                <div className=\"dashboard-item-content\" style={style.container}>\n                    <RichTextParser style={textDivStyle}>{text}</RichTextParser>\n                </div>\n            </>;\n  };\n\n  let textItem;\n\n  if (isEditMode(dashboardMode)) {\n    textItem = editItem;\n  } else if (dashboardMode === PRINT_LAYOUT) {\n    textItem = printItem;\n  } else {\n    textItem = viewItem;\n  }\n\n  return <>{textItem()}</>;\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const isPrintPreview = sGetIsPrinting(state);\n  let items;\n\n  if (isPrintPreview) {\n    items = sGetPrintDashboardItems(state);\n  } else if (isEditMode(ownProps.dashboardMode)) {\n    items = sGetEditDashboardItems(state);\n  } else {\n    items = sGetDashboardItems(state);\n  }\n\n  const item = items.find(item => item.id === ownProps.item.id);\n  return {\n    text: item ? item.text : ''\n  };\n};\n\nTextItem.propTypes = {\n  acUpdateDashboardItem: PropTypes.func,\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  text: PropTypes.string\n};\nexport default connect(mapStateToProps, {\n  acUpdateDashboardItem\n})(TextItem);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport Line from '../../../widgets/Line';\nimport { FILTER_ORG_UNIT } from '../../../actions/itemFilters';\nimport { sGetItemFiltersRoot, DEFAULT_STATE_ITEM_FILTERS } from '../../../reducers/itemFilters';\nimport { EDIT, isEditMode } from '../../Dashboard/dashboardModes';\n\nconst getIframeSrc = (appDetails, item, itemFilters) => {\n  let iframeSrc = `${appDetails.launchUrl}?dashboardItemId=${item.id}`;\n\n  if (itemFilters[FILTER_ORG_UNIT] && itemFilters[FILTER_ORG_UNIT].length) {\n    const ouIds = itemFilters[FILTER_ORG_UNIT].map(ouFilter => ouFilter.path.split('/').slice(-1)[0]);\n    iframeSrc += `&userOrgUnit=${ouIds.join(',')}`;\n  }\n\n  return iframeSrc;\n};\n\nconst AppItem = ({\n  dashboardMode,\n  item,\n  itemFilters\n}, context) => {\n  let appDetails;\n  const appKey = item.appKey;\n\n  if (appKey) {\n    appDetails = context.d2.system.installedApps.find(app => app.key === appKey);\n  }\n\n  const hideTitle = appDetails?.settings?.dashboardWidget?.hideTitle && dashboardMode !== EDIT;\n  return appDetails && appDetails.name && appDetails.launchUrl ? <>\n            {!hideTitle && <>\n                    <ItemHeader title={appDetails.name} itemId={item.id} dashboardMode={dashboardMode} isShortened={item.shortened} />\n                    <Line />\n                </>}\n            <iframe title={appDetails.name} src={getIframeSrc(appDetails, item, itemFilters)} className={!hideTitle ? 'dashboard-item-content' : 'dashboard-item-content-hidden-title'} style={{\n      border: 'none'\n    }} />\n        </> : <>\n            <ItemHeader title={`${appKey} app not found`} />\n            <Line />\n            <div className=\"dashboard-item-content\" style={{\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      height: '90%'\n    }}>\n                <NotInterestedIcon color=\"disabled\" disabled style={{\n        width: 100,\n        height: 100,\n        align: 'center'\n      }} />\n            </div>\n        </>;\n};\n\nAppItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object\n};\nAppItem.contextTypes = {\n  d2: PropTypes.object\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const itemFilters = !isEditMode(ownProps.dashboardMode) ? sGetItemFiltersRoot(state) : DEFAULT_STATE_ITEM_FILTERS;\n  return {\n    itemFilters\n  };\n};\n\nexport default connect(mapStateToProps)(AppItem);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { colors } from '@dhis2/ui';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nconst style = {\n  margin: '21px 28px',\n  fontSize: '14px',\n  lineHeight: '18px',\n  color: colors.grey600\n};\n\nconst SpacerItem = props => {\n  return <>\n            <ItemHeader title={i18n.t('Spacer')} itemId={props.item.id} dashboardMode={props.dashboardMode} isShortened={props.item.shortened} />\n            <p style={style}>\n                {i18n.t('Use a spacer to create empty vertical space between other dashboard items.')}\n            </p>\n        </>;\n};\n\nSpacerItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object\n};\nexport default SpacerItem;","import React from 'react';\n\nconst PageBreakItem = () => <div />;\n\nexport default PageBreakItem;","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { sGetSelectedId, sGetSelectedShowDescription } from '../../../reducers/selected';\nimport { sGetDashboardById, EMPTY_DASHBOARD } from '../../../reducers/dashboards';\nimport { sGetNamedItemFilters } from '../../../reducers/itemFilters';\nimport { sGetIsEditing } from '../../../reducers/editDashboard';\nimport { sGetPrintDashboardName, sGetPrintDashboardDescription } from '../../../reducers/printDashboard';\nimport classes from './styles/Item.module.css';\n\nconst PrintTitlePageItem = ({\n  name,\n  description,\n  itemFilters,\n  showDescription\n}) => {\n  const getItemFilterList = () => {\n    const listItems = itemFilters.map(({\n      name,\n      values\n    }) => <li className={classes.filterListItem} key={name}>\n                {name}: {values.map(val => val.name).join(', ')}\n            </li>);\n    return <ul className={classes.filterList}>{listItems}</ul>;\n  };\n\n  return <div className={classes.titlePage}>\n            <p className={classes.name}>{name}</p>\n            {showDescription && description && <p className={classes.description}>{description}</p>}\n            {itemFilters.length > 0 && <>\n                    <p className={classes.filterTitle}>\n                        {i18n.t('Filters applied')}\n                    </p>\n                    {getItemFilterList()}\n                </>}\n        </div>;\n};\n\nPrintTitlePageItem.propTypes = {\n  description: PropTypes.string,\n  itemFilters: PropTypes.array,\n  name: PropTypes.string,\n  showDescription: PropTypes.bool\n};\nPrintTitlePageItem.defaultProps = {\n  description: '',\n  name: '',\n  showDescription: false\n};\n\nconst mapStateToProps = state => {\n  const id = sGetSelectedId(state);\n  const isEditMode = sGetIsEditing(state);\n  const viewDashboard = sGetDashboardById(state, id) || EMPTY_DASHBOARD;\n  const name = isEditMode ? sGetPrintDashboardName(state) || i18n.t('Untitled dashboard') : viewDashboard.displayName;\n  const description = isEditMode ? sGetPrintDashboardDescription(state) : viewDashboard.displayDescription;\n  return {\n    name,\n    description,\n    itemFilters: sGetNamedItemFilters(state),\n    showDescription: sGetSelectedShowDescription(state)\n  };\n};\n\nexport default connect(mapStateToProps)(PrintTitlePageItem);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport VisualizationItem from './VisualizationItem/Item';\nimport MessagesItem from './MessagesItem/Item';\nimport NotSupportedItem from './NotSupportedItem/Item';\nimport ListItem from './ListItem/Item';\nimport TextItem from './TextItem/Item';\nimport AppItem from './AppItem/Item';\nimport SpacerItem from './SpacerItem/Item';\nimport PageBreakItem from './PageBreakItem/Item';\nimport PrintTitlePageItem from './PrintTitlePageItem/Item';\nimport { APP, VISUALIZATION, REPORT_TABLE, CHART, MAP, EVENT_CHART, EVENT_REPORT, MESSAGES, REPORTS, RESOURCES, USERS, TEXT, SPACER, PAGEBREAK, PRINT_TITLE_PAGE } from '../../modules/itemTypes';\n\nconst getGridItem = type => {\n  switch (type) {\n    case VISUALIZATION:\n    case REPORT_TABLE:\n    case CHART:\n    case MAP:\n    case EVENT_CHART:\n    case EVENT_REPORT:\n      return VisualizationItem;\n\n    case MESSAGES:\n      return MessagesItem;\n\n    case REPORTS:\n    case RESOURCES:\n    case USERS:\n      return ListItem;\n\n    case TEXT:\n      return TextItem;\n\n    case SPACER:\n      return SpacerItem;\n\n    case APP:\n      return AppItem;\n\n    case PAGEBREAK:\n      return PageBreakItem;\n\n    case PRINT_TITLE_PAGE:\n      return PrintTitlePageItem;\n\n    default:\n      return NotSupportedItem;\n  }\n};\n\nexport const Item = props => {\n  const GridItem = getGridItem(props.item.type);\n  return <GridItem item={props.item} dashboardMode={props.dashboardMode} onToggleItemExpanded={props.onToggleItemExpanded} />;\n};\nItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  onToggleItemExpanded: PropTypes.func\n};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash/debounce';\nimport pick from 'lodash/pick';\nconst defaultDebounceMs = 100;\nconst defaultBufferFactor = 0.25;\n\nclass ProgressiveLoadingContainer extends Component {\n  static propTypes = {\n    children: PropTypes.node.isRequired,\n    bufferFactor: PropTypes.number,\n    className: PropTypes.string,\n    debounceMs: PropTypes.number,\n    style: PropTypes.object\n  };\n  static defaultProps = {\n    debounceMs: defaultDebounceMs,\n    bufferFactor: defaultBufferFactor\n  };\n  state = {\n    shouldLoad: false\n  };\n  containerRef = null;\n  shouldLoadHandler = null;\n  handlerOptions = {\n    passive: true\n  };\n\n  checkShouldLoad() {\n    if (!this.containerRef) {\n      return;\n    }\n\n    const bufferPx = this.props.bufferFactor * window.innerHeight;\n    const rect = this.containerRef.getBoundingClientRect();\n\n    if (rect.bottom > -bufferPx && rect.top < window.innerHeight + bufferPx) {\n      this.setState({\n        shouldLoad: true\n      });\n      this.removeHandler();\n    }\n  }\n\n  registerHandler() {\n    this.shouldLoadHandler = debounce(() => this.checkShouldLoad(), this.props.debounceMs);\n    document.getElementsByClassName('dashboard-wrapper')[0]?.addEventListener('scroll', this.shouldLoadHandler, this.handlerOptions);\n  }\n\n  removeHandler() {\n    document.getElementsByClassName('dashboard-wrapper')[0]?.removeEventListener('scroll', this.shouldLoadHandler, this.handlerOptions);\n  }\n\n  componentDidMount() {\n    this.registerHandler();\n    this.checkShouldLoad();\n  }\n\n  componentWillUnmount() {\n    this.removeHandler();\n  }\n\n  render() {\n    const {\n      children,\n      className,\n      style,\n      ...props\n    } = this.props;\n    const {\n      shouldLoad\n    } = this.state;\n    const eventProps = pick(props, ['onMouseDown', 'onTouchStart', 'onMouseUp', 'onTouchEnd']);\n    return <div ref={ref => this.containerRef = ref} style={style} className={className} data-test={`dashboarditem-${props.itemId}`} {...eventProps}>\n                {shouldLoad && children}\n            </div>;\n  }\n\n}\n\nexport default ProgressiveLoadingContainer;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ReactGridLayout from 'react-grid-layout';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport { acUpdateDashboardLayout } from '../../actions/editDashboard';\nimport { Item } from '../Item/Item';\nimport { resize as pluginResize } from '../Item/VisualizationItem/Visualization/plugin';\nimport { isVisualizationType } from '../../modules/itemTypes';\nimport { GRID_ROW_HEIGHT, GRID_COMPACT_TYPE, MARGIN, getGridColumns, hasShape, onItemResize } from './gridUtil';\nimport { orArray } from '../../modules/util';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\nimport './ItemGrid.css';\nimport { sGetSelectedId, sGetSelectedIsLoading } from '../../reducers/selected';\nimport { sGetEditDashboardRoot, sGetEditDashboardItems } from '../../reducers/editDashboard';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport ProgressiveLoadingContainer from '../Item/ProgressiveLoadingContainer';\nimport { VIEW, EDIT } from '../Dashboard/dashboardModes'; // Component\n\nconst EXPANDED_HEIGHT = 17; // this is set in the .dashboard-item-content css\n\nexport const ITEM_CONTENT_PADDING_BOTTOM = 4;\nexport class ItemGrid extends Component {\n  state = {\n    expandedItems: {}\n  };\n  onToggleItemExpanded = clickedId => {\n    const isExpanded = typeof this.state.expandedItems[clickedId] === 'boolean' ? this.state.expandedItems[clickedId] : false;\n    const expandedItems = { ...this.state.expandedItems\n    };\n    expandedItems[clickedId] = !isExpanded;\n    this.setState({\n      expandedItems\n    });\n  };\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.edit) {\n      this.setState({\n        expandedItems: {}\n      });\n    }\n  }\n\n  onLayoutChange = newLayout => {\n    if (this.props.edit) {\n      this.props.acUpdateDashboardLayout(newLayout);\n    }\n  };\n  onResizeStop = (layout, oldItem, newItem) => {\n    onItemResize(newItem.i);\n    const dashboardItem = this.props.dashboardItems.find(item => item.id === newItem.i); // call resize on the item component if it's a plugin type\n\n    if (dashboardItem && isVisualizationType(dashboardItem)) {\n      pluginResize(dashboardItem);\n    }\n  };\n  adjustHeightForExpanded = dashboardItem => {\n    const expandedItem = this.state.expandedItems[dashboardItem.id];\n\n    if (expandedItem && expandedItem === true) {\n      return Object.assign({}, dashboardItem, {\n        h: dashboardItem.h + EXPANDED_HEIGHT\n      });\n    }\n\n    return dashboardItem;\n  };\n  getItemComponent = item => {\n    const itemClassNames = [item.type, this.props.edit ? 'edit' : 'view'].join(' ');\n    return <ProgressiveLoadingContainer key={item.i} className={itemClassNames} itemId={item.id}>\n                <Item item={item} dashboardMode={this.props.edit ? EDIT : VIEW} onToggleItemExpanded={this.onToggleItemExpanded} />\n            </ProgressiveLoadingContainer>;\n  };\n  getItemComponents = items => items.map(item => this.getItemComponent(item));\n\n  render() {\n    const {\n      edit,\n      isLoading,\n      dashboardItems\n    } = this.props;\n\n    if (!isLoading && !dashboardItems.length) {\n      return <NoContentMessage text={i18n.t('There are no items on this dashboard')} />;\n    }\n\n    const items = edit ? dashboardItems : dashboardItems.map(this.adjustHeightForExpanded);\n    return <div className=\"grid-wrapper\">\n                {isLoading ? <Layer translucent>\n                        <CenteredContent>\n                            <CircularLoader />\n                        </CenteredContent>\n                    </Layer> : null}\n                <ReactGridLayout onLayoutChange={this.onLayoutChange} onResizeStop={this.onResizeStop} className=\"layout\" layout={items} margin={MARGIN} cols={getGridColumns()} rowHeight={GRID_ROW_HEIGHT} width={window.innerWidth} compactType={GRID_COMPACT_TYPE} isDraggable={edit} isResizable={edit} draggableCancel=\"input,textarea\">\n                    {this.getItemComponents(items)}\n                </ReactGridLayout>\n            </div>;\n  }\n\n}\nItemGrid.propTypes = {\n  acUpdateDashboardLayout: PropTypes.func,\n  dashboardItems: PropTypes.array,\n  edit: PropTypes.bool,\n  isLoading: PropTypes.bool\n};\nItemGrid.defaultProps = {\n  dashboardItems: []\n}; // Container\n\nconst mapStateToProps = (state, ownProps) => {\n  const selectedDashboard = ownProps.edit ? sGetEditDashboardRoot(state) : sGetDashboardById(state, sGetSelectedId(state));\n  const dashboardItems = ownProps.edit ? sGetEditDashboardItems(state) : sGetDashboardItems(state);\n  return {\n    isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n    dashboardItems\n  };\n};\n\nconst mapDispatchToProps = {\n  acUpdateDashboardLayout\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n  const validItems = orArray(stateProps.dashboardItems).filter(hasShape);\n  return { ...dispatchProps,\n    edit: ownProps.edit,\n    isLoading: stateProps.isLoading,\n    dashboardItems: validItems,\n    onItemResize\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps, mergeProps)(ItemGrid);","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { colors } from '@dhis2/ui';\nconst styles = {\n  badgeContainer: {\n    margin: '2px',\n    padding: '0 16px',\n    borderRadius: '4px',\n    color: colors.white,\n    backgroundColor: '#212934',\n    height: 36,\n    display: 'flex',\n    alignItems: 'center'\n  },\n  badge: {\n    fontSize: '13px',\n    cursor: 'pointer',\n    whiteSpace: 'nowrap'\n  },\n  badgeRemove: {\n    fontSize: '12px',\n    textDecoration: 'underline',\n    marginLeft: '24px',\n    cursor: 'pointer'\n  }\n};\n\nclass FilterBadge extends Component {\n  onClick = id => () => this.props.onClick(id);\n  onRemove = id => () => this.props.onRemove(id);\n\n  render() {\n    const {\n      data\n    } = this.props;\n    return <div style={styles.badgeContainer} data-test=\"dashboard-filter-badge\">\n                <span style={styles.badge} onClick={this.onClick(data.id)}>\n                    {`${data.name}: ${data.values.length > 1 ? i18n.t('{{count}} selected', {\n          count: data.values.length\n        }) : data.values[0].name}`}\n                </span>\n                <span style={styles.badgeRemove} onClick={this.onRemove(data.id)}>\n                    {i18n.t('Remove')}\n                </span>\n            </div>;\n  }\n\n}\n\nFilterBadge.propTypes = {\n  data: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired,\n  onRemove: PropTypes.func.isRequired\n};\nFilterBadge.defaultProps = {\n  onClick: Function.prototype,\n  onRemove: Function.prototype\n};\nexport default FilterBadge;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport FilterBadge from './FilterBadge';\nimport { sGetNamedItemFilters } from '../../reducers/itemFilters';\nimport { acRemoveItemFilter } from '../../actions/itemFilters';\nimport { acSetActiveModalDimension } from '../../actions/activeModalDimension';\nimport classes from './styles/FilterBar.module.css';\nexport class FilterBar extends Component {\n  onBadgeRemove = id => {\n    this.props.removeItemFilter(id);\n  };\n  onBadgeClick = id => {\n    this.props.setActiveModalDimension({\n      id,\n      name: this.props.filters.find(item => item.id === id).name\n    });\n  };\n\n  render() {\n    const {\n      filters\n    } = this.props;\n    return filters.length ? // the 3 is calculated so that the FilterBar has the same vertical position as the TitleBar in relation to the ControlBar\n    <div className={classes.bar} style={{\n      top: 3\n    }}>\n                {filters.map(filter => <FilterBadge key={filter.id} data={filter} onClick={this.onBadgeClick} onRemove={this.onBadgeRemove} />)}\n            </div> : null;\n  }\n\n}\nFilterBar.propTypes = {\n  filters: PropTypes.array.isRequired,\n  removeItemFilter: PropTypes.func.isRequired,\n  setActiveModalDimension: PropTypes.func\n};\nFilterBar.defaultProps = {\n  filters: [],\n  removeItemFIlter: Function.prototype\n};\n\nconst mapStateToProps = state => ({\n  filters: sGetNamedItemFilters(state)\n});\n\nexport default connect(mapStateToProps, {\n  setActiveModalDimension: acSetActiveModalDimension,\n  removeItemFilter: acRemoveItemFilter\n})(FilterBar);","export const SET_WINDOW_HEIGHT = 'SET_WINDOW_HEIGHT';\nexport const DEFAULT_STATE_WINDOW_HEIGHT = window.innerHeight;\nexport default ((state = DEFAULT_STATE_WINDOW_HEIGHT, action) => {\n  switch (action.type) {\n    case SET_WINDOW_HEIGHT:\n      {\n        return action.value;\n      }\n\n    default:\n      return state;\n  }\n});\nexport const sGetWindowHeight = state => state.windowHeight;","import { generateUid } from 'd2/uid';\nimport { SET_PRINT_DASHBOARD, CLEAR_PRINT_DASHBOARD, SET_PRINT_DASHBOARD_LAYOUT, ADD_PRINT_DASHBOARD_ITEM, REMOVE_PRINT_DASHBOARD_ITEM, UPDATE_PRINT_DASHBOARD_ITEM } from '../reducers/printDashboard';\nimport { NEW_ITEM_SHAPE, getGridItemProperties, getPageBreakItemShape, getPrintTitlePageItemShape } from '../components/ItemGrid/gridUtil';\nimport { itemTypeMap, PAGEBREAK } from '../modules/itemTypes'; // actions\n\nexport const acSetPrintDashboard = (dashboard, items) => {\n  const val = { ...dashboard,\n    dashboardItems: items\n  };\n  return {\n    type: SET_PRINT_DASHBOARD,\n    value: val\n  };\n};\nexport const acClearPrintDashboard = () => ({\n  type: CLEAR_PRINT_DASHBOARD\n});\nexport const acUpdatePrintDashboardLayout = value => ({\n  type: SET_PRINT_DASHBOARD_LAYOUT,\n  value\n});\nexport const acAddPrintDashboardItem = item => {\n  const type = item.type;\n  delete item.type;\n  const itemPropName = itemTypeMap[type].propName;\n  const id = generateUid();\n  const gridItemProperties = getGridItemProperties(id);\n  let shape;\n\n  if (type === PAGEBREAK) {\n    const yPos = item.yPos || 0;\n    shape = getPageBreakItemShape(yPos, item.isStatic);\n  } else {\n    shape = getPrintTitlePageItemShape(item.isOneItemPerPage);\n  }\n\n  return {\n    type: ADD_PRINT_DASHBOARD_ITEM,\n    value: {\n      id,\n      type,\n      position: item.position || null,\n      [itemPropName]: item.content,\n      ...NEW_ITEM_SHAPE,\n      ...gridItemProperties,\n      ...shape\n    }\n  };\n};\nexport const acRemovePrintDashboardItem = value => ({\n  type: REMOVE_PRINT_DASHBOARD_ITEM,\n  value\n});\nexport const acUpdatePrintDashboardItem = item => ({\n  type: UPDATE_PRINT_DASHBOARD_ITEM,\n  value: item\n});","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport TitleBar from '../TitleBar/TitleBar';\nimport ItemGrid from '../ItemGrid/ItemGrid';\nimport FilterBar from '../FilterBar/FilterBar';\nimport DashboardsBar from '../ControlBar/DashboardsBar';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport { sGetIsEditing } from '../../reducers/editDashboard';\nimport { sGetIsPrinting } from '../../reducers/printDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { sGetWindowHeight } from '../../reducers/windowHeight';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { acClearEditDashboard } from '../../actions/editDashboard';\nimport { acClearPrintDashboard } from '../../actions/printDashboard';\nimport { getControlBarHeight, HEADERBAR_HEIGHT } from '../ControlBar/controlBarDimensions';\nexport const ViewDashboard = props => {\n  useEffect(() => {\n    if (props.dashboardIsEditing) {\n      props.clearEditDashboard();\n    } else if (props.dashboardIsPrinting) {\n      props.clearPrintDashboard();\n    }\n  }, [props.dashboardIsEditing, props.dashboardIsPrinting]);\n  useEffect(() => {\n    document.querySelector('.dashboard-wrapper')?.scroll(0, 0);\n  }, [props.selectedId]);\n  const height = props.windowHeight - HEADERBAR_HEIGHT - getControlBarHeight(props.controlBarRows);\n  return <>\n            <DashboardsBar />\n            <DashboardVerticalOffset />\n            <div className=\"dashboard-wrapper\" style={{\n      height\n    }}>\n                <TitleBar edit={false} />\n                <FilterBar />\n                <ItemGrid edit={false} />\n            </div>\n        </>;\n};\nViewDashboard.propTypes = {\n  clearEditDashboard: PropTypes.func,\n  clearPrintDashboard: PropTypes.func,\n  controlBarRows: PropTypes.number,\n  dashboardIsEditing: PropTypes.bool,\n  dashboardIsPrinting: PropTypes.bool,\n  selectedId: PropTypes.string,\n  windowHeight: PropTypes.number\n};\n\nconst mapStateToProps = state => {\n  return {\n    dashboardIsEditing: sGetIsEditing(state),\n    dashboardIsPrinting: sGetIsPrinting(state),\n    controlBarRows: sGetControlBarUserRows(state),\n    selectedId: sGetSelectedId(state),\n    windowHeight: sGetWindowHeight(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  clearEditDashboard: acClearEditDashboard,\n  clearPrintDashboard: acClearPrintDashboard\n})(ViewDashboard);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Button, Modal, ModalContent, ModalActions, ButtonStrip, ModalTitle } from '@dhis2/ui';\nimport classes from './styles/ConfirmDeleteDialog.module.css';\nexport const ConfirmDeleteDialog = ({\n  dashboardName,\n  onDeleteConfirmed,\n  onContinueEditing,\n  open\n}) => {\n  const actions = [<Button key=\"cancel\" secondary onClick={onContinueEditing} dataTest=\"cancel-delete-dashboard\">\n            {i18n.t('Cancel')}\n        </Button>, <Button key=\"delete\" destructive onClick={onDeleteConfirmed} dataTest=\"confirm-delete-dashboard\">\n            {i18n.t('Delete')}\n        </Button>];\n  return open && <Modal onClose={onContinueEditing} small position=\"middle\">\n                <ModalTitle>{i18n.t('Delete dashboard')}</ModalTitle>\n                <ModalContent>\n                    <span className={classes.content}>\n                        {i18n.t('Deleting dashboard \"{{ dashboardName }}\" will remove it for all users. This action cannot be undone. Are you sure you want to permanently delete this dashboard?', {\n          dashboardName\n        })}\n                    </span>\n                </ModalContent>\n                <ModalActions>\n                    <ButtonStrip>{actions}</ButtonStrip>\n                </ModalActions>\n            </Modal>;\n};\nConfirmDeleteDialog.propTypes = {\n  dashboardName: PropTypes.string,\n  open: PropTypes.bool,\n  onContinueEditing: PropTypes.func,\n  onDeleteConfirmed: PropTypes.func\n};\nexport default ConfirmDeleteDialog;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport ControlBar from './ControlBar';\nimport TranslationDialog from '@dhis2/d2-ui-translation-dialog';\nimport { Button, ButtonStrip } from '@dhis2/ui';\nimport ConfirmDeleteDialog from './ConfirmDeleteDialog';\nimport { tSaveDashboard, acClearEditDashboard } from '../../actions/editDashboard';\nimport { acClearPrintDashboard } from '../../actions/printDashboard';\nimport { tDeleteDashboard, acSetDashboardDisplayName } from '../../actions/dashboards';\nimport { sGetEditDashboardRoot, sGetIsNewDashboard, sGetIsPrintPreviewView } from '../../reducers/editDashboard';\nimport { acSetPrintPreviewView, acClearPrintPreviewView } from '../../actions/editDashboard';\nimport { CONTROL_BAR_ROW_HEIGHT, MIN_ROW_COUNT, getControlBarHeight } from './controlBarDimensions';\nimport { apiFetchDashboard } from '../../api/dashboards';\nimport classes from './styles/DashboardsBar.module.css';\nconst buttonBarStyle = {\n  height: CONTROL_BAR_ROW_HEIGHT,\n  paddingTop: '15px',\n  marginLeft: '15px',\n  marginRight: '15px'\n};\nexport class EditBar extends Component {\n  state = {\n    translationDialogIsOpen: false,\n    dashboardModel: undefined,\n    confirmDeleteDialogOpen: false,\n    redirectUrl: undefined\n  };\n  onConfirmDelete = () => {\n    this.setState({\n      confirmDeleteDialogOpen: true\n    });\n  };\n  onSave = () => {\n    this.props.onSave().then(newId => {\n      this.setState({\n        redirectUrl: `/${newId}`\n      });\n    });\n  };\n  onPrintPreview = () => {\n    if (this.props.isPrintPreviewView) {\n      this.props.clearPrintPreview();\n      this.props.clearPrintDashboard();\n    } else {\n      this.props.showPrintPreview();\n    }\n  };\n  onDiscard = () => {\n    this.props.onDiscardChanges();\n    const redirectUrl = this.props.dashboardId ? `/${this.props.dashboardId}` : '/';\n    this.setState({\n      redirectUrl\n    });\n  };\n  onContinueEditing = () => {\n    this.setState({\n      confirmDeleteDialogOpen: false\n    });\n  };\n  onDeleteConfirmed = () => {\n    this.setState({\n      confirmDeleteDialogOpen: false\n    });\n    this.props.onDelete(this.props.dashboardId).then(() => {\n      this.setState({\n        redirectUrl: '/'\n      });\n    });\n  };\n  onTranslationsSaved = async translations => {\n    if (translations && translations.length) {\n      const dbLocale = await this.context.d2.currentUser.userSettings.get('keyDbLocale');\n      const translation = translations.find(t => t.locale === dbLocale && t.property === 'NAME');\n\n      if (translation && translation.value) {\n        this.props.onTranslate(this.props.dashboardId, translation.value);\n      }\n    }\n  };\n  fetchDashboardModel = () => {\n    if (this.props.dashboardId && !this.state.dashboardModel) {\n      apiFetchDashboard(this.props.dashboardId).then(dashboardModel => this.setState({\n        dashboardModel\n      }));\n    }\n  };\n\n  componentDidMount() {\n    this.fetchDashboardModel();\n  }\n\n  componentDidUpdate() {\n    this.fetchDashboardModel();\n  }\n\n  toggleTranslationDialog = () => {\n    this.setState({\n      translationDialogIsOpen: !this.state.translationDialogIsOpen\n    });\n  };\n  confirmDeleteDialog = () => this.props.deleteAccess && this.props.dashboardId ? <ConfirmDeleteDialog dashboardName={this.props.dashboardName} onDeleteConfirmed={this.onDeleteConfirmed} onContinueEditing={this.onContinueEditing} open={this.state.confirmDeleteDialogOpen} /> : null;\n  translationDialog = () => this.state.dashboardModel && this.state.dashboardModel.id ? <TranslationDialog className=\"translation-dialog\" d2={this.context.d2} open={this.state.translationDialogIsOpen} onRequestClose={this.toggleTranslationDialog} objectToTranslate={this.state.dashboardModel} fieldsToTranslate={['name', 'description']} onTranslationSaved={this.onTranslationsSaved} onTranslationError={err => console.log('translation update error', err)} /> : null;\n  renderActionButtons = () => {\n    const printPreviewText = this.props.isPrintPreviewView ? i18n.t('Exit Print preview') : i18n.t('Print preview');\n    return <div className={classes.leftControls}>\n                <ButtonStrip>\n                    <Button primary onClick={this.onSave} dataTest=\"save-dashboard-button\">\n                        {i18n.t('Save changes')}\n                    </Button>\n                    <Button onClick={this.onPrintPreview}>\n                        {printPreviewText}\n                    </Button>\n\n                    {this.props.dashboardId ? <Button onClick={this.toggleTranslationDialog}>\n                            {i18n.t('Translate')}\n                        </Button> : null}\n                    {this.props.dashboardId && this.props.deleteAccess ? <Button onClick={this.onConfirmDelete} dataTest=\"delete-dashboard-button\">\n                            {i18n.t('Delete')}\n                        </Button> : null}\n                </ButtonStrip>\n            </div>;\n  };\n\n  render() {\n    if (this.state.redirectUrl) {\n      return <Redirect to={this.state.redirectUrl} />;\n    }\n\n    const {\n      updateAccess\n    } = this.props;\n    const controlBarHeight = getControlBarHeight(MIN_ROW_COUNT);\n    const discardBtnText = updateAccess ? i18n.t('Exit without saving') : i18n.t('Go to dashboards');\n    return <>\n                <ControlBar height={controlBarHeight} editMode={true}>\n                    <div style={buttonBarStyle}>\n                        {updateAccess ? this.renderActionButtons() : null}\n\n                        <div className={classes.rightControls}>\n                            <Button secondary onClick={this.onDiscard}>\n                                {discardBtnText}\n                            </Button>\n                        </div>\n                    </div>\n                </ControlBar>\n                <div className={classes.topMargin} />\n                {this.translationDialog()}\n                {this.confirmDeleteDialog()}\n            </>;\n  }\n\n}\nEditBar.propTypes = {\n  clearPrintDashboard: PropTypes.func,\n  clearPrintPreview: PropTypes.func,\n  dashboardId: PropTypes.string,\n  dashboardName: PropTypes.string,\n  deleteAccess: PropTypes.bool,\n  isPrintPreviewView: PropTypes.bool,\n  showPrintPreview: PropTypes.func,\n  updateAccess: PropTypes.bool,\n  onDelete: PropTypes.func,\n  onDiscardChanges: PropTypes.func,\n  onSave: PropTypes.func,\n  onTranslate: PropTypes.func\n};\nEditBar.contextTypes = {\n  d2: PropTypes.object\n};\n\nconst mapStateToProps = state => {\n  const dashboard = sGetEditDashboardRoot(state);\n  let deleteAccess;\n  let updateAccess;\n\n  if (sGetIsNewDashboard(state)) {\n    deleteAccess = true;\n    updateAccess = true;\n  } else {\n    updateAccess = dashboard.access ? dashboard.access.update : false;\n    deleteAccess = dashboard.access ? dashboard.access.delete : false;\n  }\n\n  return {\n    dashboardId: dashboard.id,\n    dashboardName: dashboard.name,\n    deleteAccess,\n    isPrintPreviewView: sGetIsPrintPreviewView(state),\n    updateAccess\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  clearPrintDashboard: () => dispatch(acClearPrintDashboard()),\n  clearPrintPreview: () => dispatch(acClearPrintPreviewView()),\n  onSave: () => dispatch(tSaveDashboard()).then(id => id),\n  onDelete: id => dispatch(tDeleteDashboard(id)),\n  onDiscardChanges: () => dispatch(acClearEditDashboard()),\n  onTranslate: (id, value) => dispatch(acSetDashboardDisplayName(id, value)),\n  showPrintPreview: () => dispatch(acSetPrintPreviewView())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditBar);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { a4LandscapeWidthPx } from '../ItemGrid/gridUtil';\nimport classes from './styles/PrintInfo.module.css';\n\nconst PrintInfo = ({\n  isLayout\n}) => {\n  const maxWidth = a4LandscapeWidthPx < window.innerWidth ? a4LandscapeWidthPx : window.innerWidth;\n  const infoHeader = isLayout ? i18n.t('dashboard layout') : i18n.t('one item per page');\n  return <div className={classes.infoWrapper}>\n            <p className={classes.infoHeader}>\n                {`${i18n.t('Print Preview')}: ${infoHeader}`}\n            </p>\n            <div style={{\n      maxWidth\n    }}>\n                <p className={classes.info}>\n                    {`${i18n.t('For best print results')}:`}\n                </p>\n                <div className={classes.info}>\n                    <ul className={classes.infoList}>\n                        <li>{i18n.t('Use Chrome or Edge web browser')}</li>\n                        <li>\n                            {i18n.t('Wait for all dashboard items to load before printing')}\n                        </li>\n                        <li>\n                            {i18n.t('Use A4 landscape paper size and default margin settings in the browser print dialog')}\n                        </li>\n                    </ul>\n                </div>\n            </div>\n            <hr className={classes.divider} />\n        </div>;\n};\n\nPrintInfo.propTypes = {\n  isLayout: PropTypes.bool\n};\nexport default PrintInfo;","import React from 'react';\nimport { colors } from '@dhis2/ui';\n\nconst LessHorizontalIcon = () => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill={colors.grey600} viewBox=\"0 0 24 24\">\n        <path d=\"m13.2928932 6.29289322c.3905243-.39052429 1.0236893-.39052429 1.4142136 0 .3604839.36048396.3882135.92771502.0831886 1.32000622l-.0831886.09420734-4.2921068 4.29289322 4.2921068 4.2928932c.3604839.360484.3882135.927715.0831886 1.3200062l-.0831886.0942074c-.360484.3604839-.927715.3882135-1.3200062.0831886l-.0942074-.0831886-4.99999998-5c-.36048396-.360484-.3882135-.927715-.08318861-1.3200062l.08318861-.0942074z\" />\n    </svg>;\n\nexport default LessHorizontalIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Button } from '@dhis2/ui';\nimport { Link } from 'react-router-dom';\nimport LessHorizontalIcon from '../../icons/LessHorizontal';\nimport { a4LandscapeWidthPx } from '../ItemGrid/gridUtil';\nimport classes from './styles/PrintActionsBar.module.css'; // 42px set in the module css file\n\nexport const PRINT_ACTIONS_BAR_HEIGHT = 42;\n\nconst PrintActionsBar = ({\n  id\n}) => {\n  const width = a4LandscapeWidthPx < window.innerWidth ? a4LandscapeWidthPx : window.innerWidth;\n  return <>\n            <div className={classes.container}>\n                <div className={classes.inner} style={{\n        width\n      }}>\n                    <Link className={classes.link} to={`/${id}`}>\n                        <Button dataTest=\"exit-print-preview\">\n                            <LessHorizontalIcon />\n                            {i18n.t('Exit print preview')}\n                        </Button>\n                    </Link>\n                    <Button onClick={window.print}>{i18n.t('Print')}</Button>\n                </div>\n            </div>\n            <div className={classes.topMargin} />\n        </>;\n};\n\nPrintActionsBar.propTypes = {\n  id: PropTypes.string\n};\nexport default PrintActionsBar;","import sortBy from 'lodash/sortBy';\nimport { orArray } from './util';\nimport { itemTypeMap } from './itemTypes';\nexport const getTransformYPx = elStyle => {\n  if (!elStyle || !elStyle.transform) {\n    return null;\n  } // find valid transforms - those with y pixels\n  // the code is expecting the transform prop to\n  // look like:  translate(10px, 300px)\n\n\n  const transformY = elStyle.transform.split(' ')[1]?.match(/(\\d+)px/);\n\n  if (transformY) {\n    return parseInt(transformY[1]);\n  } else {\n    return null;\n  }\n};\nexport const getDomGridItemsSortedByYPos = elements => {\n  const types = Object.keys(itemTypeMap);\n  const elementsWithBoundingRect = orArray(elements).map(el => {\n    const type = Array.from(el.classList).find(className => types.indexOf(className) > -1);\n    const rect = el.getBoundingClientRect();\n    const y = getTransformYPx(el.style) || parseInt(rect.y);\n    return {\n      type,\n      classList: el.classList,\n      bottomY: y + parseInt(rect.height),\n      el\n    };\n  });\n  return sortBy(elementsWithBoundingRect, ['bottomY']);\n};","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport sortBy from 'lodash/sortBy';\nimport ReactGridLayout from 'react-grid-layout';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport cx from 'classnames';\nimport { Item } from '../Item/Item';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport { acUpdatePrintDashboardLayout } from '../../actions/printDashboard';\nimport { sGetSelectedIsLoading } from '../../reducers/selected';\nimport { sGetPrintDashboardRoot, sGetPrintDashboardItems } from '../../reducers/printDashboard';\nimport { sGetIsEditing } from '../../reducers/editDashboard';\nimport { GRID_ROW_HEIGHT, GRID_COMPACT_TYPE, MARGIN, getGridColumns, hasShape, a4LandscapeWidthPx } from './gridUtil';\nimport { getDomGridItemsSortedByYPos, getTransformYPx } from '../../modules/printUtils';\nimport { PRINT_LAYOUT } from '../Dashboard/dashboardModes';\nimport { PAGEBREAK } from '../../modules/itemTypes';\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\nimport './ItemGrid.css'; // this is set in the .dashboard-item-content css\n\nexport const ITEM_CONTENT_PADDING_BOTTOM = 4;\nexport class PrintLayoutItemGrid extends Component {\n  onLayoutChange = newLayout => {\n    this.props.updateDashboardLayout(newLayout);\n  };\n  isFirstPageBreak = item => {\n    if (item.type !== PAGEBREAK) {\n      return false;\n    }\n\n    const pageBreaks = this.props.dashboardItems.filter(i => i.type === PAGEBREAK);\n    const sortedPageBreaks = sortBy(pageBreaks, ['y']);\n    return item.y === sortedPageBreaks[0].y;\n  };\n  getItemComponent = item => {\n    // the first-page-break class is used in Edit print preview\n    const itemClassNames = cx('print', 'layout', `${item.type}`, {\n      'first-page-break': this.props.isEditing && this.isFirstPageBreak(item),\n      shortened: !!item.shortened\n    });\n    return <div key={item.i} className={itemClassNames}>\n                <Item item={item} dashboardMode={PRINT_LAYOUT} />\n            </div>;\n  };\n  getItemComponents = items => items.map(item => this.getItemComponent(item));\n\n  hideExtraPageBreaks() {\n    const sortedElements = getDomGridItemsSortedByYPos(Array.from(document.querySelectorAll('.react-grid-item')));\n    let pageBreakBottom = 0;\n    let lastItemBottom = 0;\n    let foundNonPageBreak = false;\n\n    for (let i = sortedElements.length - 1; i >= 0; --i) {\n      const item = sortedElements[i];\n\n      if (item.type === PAGEBREAK) {\n        if (!foundNonPageBreak) {\n          item.el.classList.add('removed');\n        } else {\n          pageBreakBottom = item.bottomY;\n          break;\n        }\n      } else {\n        foundNonPageBreak = true;\n        const thisItemBottom = item.bottomY;\n\n        if (thisItemBottom > lastItemBottom) {\n          lastItemBottom = thisItemBottom;\n        }\n      }\n    }\n\n    const pageHeight = 720;\n    const gridElement = document.querySelector('.react-grid-layout'); // the last page break is before the last item(s) so\n    // maxHeight is one page beyond the last page break\n\n    const maxHeight = pageBreakBottom + pageHeight;\n\n    if (gridElement) {\n      gridElement.style.height = `${maxHeight}px`;\n    }\n\n    if (this.props.isEditing) {\n      //scroll to below the title page - which is middle of the first pagebreak\n      const firstBreak = document.querySelector('.first-page-break');\n\n      if (firstBreak && firstBreak.style && firstBreak.style.transform) {\n        const yPos = getTransformYPx(firstBreak.style);\n        const scrollArea = document.querySelector('.scroll-area');\n        scrollArea && scrollArea.scroll(0, yPos + 50);\n      }\n    }\n  }\n\n  componentDidMount() {\n    this.hideExtraPageBreaks();\n  }\n\n  componentDidUpdate() {\n    this.hideExtraPageBreaks();\n  }\n\n  render() {\n    const {\n      isLoading,\n      dashboardItems\n    } = this.props;\n\n    if (!isLoading && !dashboardItems.length) {\n      return <NoContentMessage text={i18n.t('There are no items on this dashboard')} />;\n    }\n\n    const width = a4LandscapeWidthPx < window.innerWidth ? a4LandscapeWidthPx : window.innerWidth;\n    return <div className=\"grid-wrapper\">\n                {isLoading ? <Layer translucent>\n                        <CenteredContent>\n                            <CircularLoader />\n                        </CenteredContent>\n                    </Layer> : null}\n                <ReactGridLayout onLayoutChange={this.onLayoutChange} className=\"layout\" layout={dashboardItems} margin={MARGIN} cols={getGridColumns()} rowHeight={GRID_ROW_HEIGHT} width={width} compactType={GRID_COMPACT_TYPE} isDraggable={false} isResizable={false} draggableCancel=\"input,textarea\">\n                    {this.getItemComponents(dashboardItems)}\n                </ReactGridLayout>\n            </div>;\n  }\n\n}\nPrintLayoutItemGrid.propTypes = {\n  dashboardItems: PropTypes.array,\n  isEditing: PropTypes.bool,\n  isLoading: PropTypes.bool,\n  updateDashboardLayout: PropTypes.func\n};\nPrintLayoutItemGrid.defaultProps = {\n  dashboardItems: []\n};\n\nconst mapStateToProps = state => {\n  const selectedDashboard = sGetPrintDashboardRoot(state);\n  return {\n    isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n    dashboardItems: sGetPrintDashboardItems(state).filter(hasShape),\n    isEditing: sGetIsEditing(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  updateDashboardLayout: acUpdatePrintDashboardLayout\n})(PrintLayoutItemGrid);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { spacers } from '@dhis2/ui';\nimport cx from 'classnames';\nimport PrintInfo from './PrintInfo';\nimport PrintActionsBar from './PrintActionsBar';\nimport PrintLayoutItemGrid from '../ItemGrid/PrintLayoutItemGrid';\nimport { acSetPrintDashboard, acAddPrintDashboardItem, acUpdatePrintDashboardItem } from '../../actions/printDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { sGetWindowHeight } from '../../reducers/windowHeight';\nimport { sGetEditDashboardRoot, sGetEditDashboardItems } from '../../reducers/editDashboard';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport { PAGEBREAK, PRINT_TITLE_PAGE } from '../../modules/itemTypes';\nimport { a4LandscapeWidthPx, MAX_ITEM_GRID_HEIGHT } from '../ItemGrid/gridUtil';\nimport { getControlBarHeight, HEADERBAR_HEIGHT } from '../ControlBar/controlBarDimensions';\nimport { PRINT_ACTIONS_BAR_HEIGHT } from './PrintActionsBar';\nimport { DRAG_HANDLE_HEIGHT } from '../ControlBar/ControlBar';\nimport classes from './styles/PrintLayoutDashboard.module.css';\nimport './styles/print.css';\nimport './styles/print-layout.css';\nconst EDIT_BAR_HEIGHT = getControlBarHeight(1) + DRAG_HANDLE_HEIGHT;\n\nconst isLeapPage = n => {\n  // pages 5,9,13,17,21,25,29... are leap pages\n  let x = 0;\n  const startPage = 1;\n\n  const getMultiple = factor => startPage + 4 * factor;\n\n  let multiple = getMultiple(0);\n  let isLeapPage = false;\n\n  while (multiple < n) {\n    multiple = getMultiple(x);\n    ++x;\n\n    if (multiple === n) {\n      isLeapPage = true;\n      break;\n    }\n  }\n\n  return isLeapPage;\n};\n\nconst addPageBreaks = ({\n  items,\n  addDashboardItem\n}) => {\n  // add enough page breaks so that each item could\n  // be put on its own page. Due to the react-grid-layout\n  // unit system, we have to estimate roughly the size of each\n  // page. At regular intervals add a unit, like a leap year\n  let yPos = 0;\n  const yPosList = [];\n\n  for (let pageNum = 1; pageNum <= items.length; ++pageNum) {\n    if (pageNum === 1) {\n      yPos += 35;\n    } else if (isLeapPage(pageNum)) {\n      yPos += 40;\n    } else {\n      yPos += 39;\n    }\n\n    yPosList.push(yPos);\n  }\n\n  for (let i = 0; i < items.length; ++i) {\n    addDashboardItem({\n      type: PAGEBREAK,\n      yPos: yPosList[i]\n    });\n  }\n};\n\nexport class PrintLayoutDashboard extends Component {\n  state = {\n    initialized: false\n  };\n  initPrintLayoutDashboard = () => {\n    if (this.props.dashboard) {\n      this.setState({\n        initialized: true\n      });\n      this.props.setPrintDashboard(this.props.dashboard, this.props.items); // If any items are taller than one page, reduce it to one\n      // page (react-grid-layout units)\n\n      this.props.items.forEach(item => {\n        if (item.h > MAX_ITEM_GRID_HEIGHT) {\n          item.shortened = true;\n          this.props.updateDashboardItem(Object.assign({}, item, {\n            h: MAX_ITEM_GRID_HEIGHT\n          }));\n        }\n      });\n      addPageBreaks(this.props);\n      this.props.addDashboardItem({\n        type: PRINT_TITLE_PAGE,\n        isOneItemPerPage: false\n      });\n    }\n  };\n\n  componentDidMount() {\n    this.initPrintLayoutDashboard();\n  }\n\n  componentDidUpdate() {\n    if (!this.state.initialized) {\n      this.initPrintLayoutDashboard();\n    }\n  }\n\n  getWrapperStyle = () => {\n    return this.props.fromEdit ? {\n      paddingTop: spacers.dp24,\n      height: this.props.windowHeight - EDIT_BAR_HEIGHT - HEADERBAR_HEIGHT\n    } : {\n      height: this.props.windowHeight - PRINT_ACTIONS_BAR_HEIGHT\n    };\n  };\n\n  render() {\n    return <>\n                {!this.props.fromEdit && <PrintActionsBar id={this.props.dashboard.id} />}\n                <div className={cx(classes.wrapper, 'scroll-area')} style={this.getWrapperStyle()}>\n                    {!this.props.fromEdit && <PrintInfo isLayout={true} />}\n                    <div className={classes.pageOuter} style={{\n          width: a4LandscapeWidthPx\n        }} data-test=\"print-layout-page\">\n                        <PrintLayoutItemGrid />\n                    </div>\n                </div>\n            </>;\n  }\n\n}\nPrintLayoutDashboard.propTypes = {\n  addDashboardItem: PropTypes.func,\n  dashboard: PropTypes.object,\n  fromEdit: PropTypes.bool,\n  items: PropTypes.array,\n  setPrintDashboard: PropTypes.func,\n  updateDashboardItem: PropTypes.func,\n  windowHeight: PropTypes.number\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const id = sGetSelectedId(state);\n\n  if (ownProps.fromEdit) {\n    const dashboard = sGetEditDashboardRoot(state);\n    return {\n      dashboard,\n      id,\n      items: sGetEditDashboardItems(state),\n      windowHeight: sGetWindowHeight(state)\n    };\n  }\n\n  const dashboard = id ? sGetDashboardById(state, id) : null;\n  return {\n    dashboard,\n    id,\n    items: sGetDashboardItems(state),\n    windowHeight: sGetWindowHeight(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setPrintDashboard: acSetPrintDashboard,\n  addDashboardItem: acAddPrintDashboardItem,\n  updateDashboardItem: acUpdatePrintDashboardItem\n})(PrintLayoutDashboard);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport TitleBar from '../TitleBar/TitleBar';\nimport ItemGrid from '../ItemGrid/ItemGrid';\nimport EditBar from '../ControlBar/EditBar';\nimport LayoutPrintPreview from './PrintLayoutDashboard';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport { acSetEditDashboard } from '../../actions/editDashboard';\nimport { sGetWindowHeight } from '../../reducers/windowHeight';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport { sGetIsPrintPreviewView } from '../../reducers/editDashboard';\nimport { getControlBarHeight, HEADERBAR_HEIGHT } from '../ControlBar/controlBarDimensions';\nexport class EditDashboard extends Component {\n  state = {\n    initialized: false\n  };\n  initEditDashboard = () => {\n    if (this.props.dashboard) {\n      this.setState({\n        initialized: true\n      });\n      this.props.setEditDashboard(this.props.dashboard, this.props.items);\n    }\n  };\n\n  componentDidMount() {\n    this.initEditDashboard();\n  }\n\n  componentDidUpdate() {\n    if (!this.state.initialized) {\n      this.initEditDashboard();\n    }\n  }\n\n  renderGrid = () => {\n    if (this.props.isPrintPreviewView) {\n      return <LayoutPrintPreview fromEdit={true} />;\n    }\n\n    const height = this.props.windowHeight - HEADERBAR_HEIGHT - getControlBarHeight(1);\n    return <div className=\"dashboard-wrapper\" style={{\n      height\n    }}>\n                <TitleBar edit={true} />\n                <ItemGrid edit={true} />\n            </div>;\n  };\n\n  render() {\n    return <>\n                <EditBar />\n                {this.props.updateAccess ? this.renderGrid() : <NoContentMessage text={i18n.t('No access')} />}\n            </>;\n  }\n\n}\nEditDashboard.propTypes = {\n  dashboard: PropTypes.object,\n  isPrintPreviewView: PropTypes.bool,\n  items: PropTypes.array,\n  setEditDashboard: PropTypes.func,\n  updateAccess: PropTypes.bool,\n  windowHeight: PropTypes.number\n};\n\nconst mapStateToProps = state => {\n  const id = sGetSelectedId(state);\n  const dashboard = id ? sGetDashboardById(state, id) : null;\n  const updateAccess = dashboard && dashboard.access ? dashboard.access.update : false;\n  return {\n    dashboard,\n    updateAccess,\n    items: sGetDashboardItems(state),\n    isPrintPreviewView: sGetIsPrintPreviewView(state),\n    windowHeight: sGetWindowHeight(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setEditDashboard: acSetEditDashboard\n})(EditDashboard);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport EditBar from '../ControlBar/EditBar';\nimport TitleBar from '../TitleBar/TitleBar';\nimport ItemGrid from '../ItemGrid/ItemGrid';\nimport LayoutPrintPreview from './PrintLayoutDashboard';\nimport { acSetEditNewDashboard } from '../../actions/editDashboard';\nimport { sGetIsPrintPreviewView } from '../../reducers/editDashboard';\nimport { sGetWindowHeight } from '../../reducers/windowHeight';\nimport { getControlBarHeight, HEADERBAR_HEIGHT } from '../ControlBar/controlBarDimensions';\n\nclass NewDashboard extends Component {\n  componentDidMount() {\n    this.props.setNewDashboard();\n  }\n\n  render() {\n    const height = this.props.windowHeight - HEADERBAR_HEIGHT - getControlBarHeight(1);\n    return <>\n                <EditBar />\n                {this.props.isPrintPreviewView ? <LayoutPrintPreview fromEdit={true} /> : <div className=\"dashboard-wrapper\" style={{\n        height\n      }}>\n                        <TitleBar edit={true} />\n                        <ItemGrid edit={true} />\n                    </div>}\n            </>;\n  }\n\n}\n\nNewDashboard.propTypes = {\n  isPrintPreviewView: PropTypes.bool,\n  setNewDashboard: PropTypes.func,\n  windowHeight: PropTypes.number\n};\n\nconst mapStateToProps = state => ({\n  isPrintPreviewView: sGetIsPrintPreviewView(state),\n  windowHeight: sGetWindowHeight(state)\n});\n\nexport default connect(mapStateToProps, {\n  setNewDashboard: acSetEditNewDashboard\n})(NewDashboard);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ReactGridLayout from 'react-grid-layout';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport cx from 'classnames';\nimport { Item } from '../Item/Item';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport { PRINT } from '../Dashboard/dashboardModes';\nimport { sGetSelectedIsLoading } from '../../reducers/selected';\nimport { sGetPrintDashboardRoot, sGetPrintDashboardItems } from '../../reducers/printDashboard';\nimport { GRID_ROW_HEIGHT, GRID_COMPACT_TYPE, MARGIN, getGridColumns, hasShape, a4LandscapeWidthPx } from './gridUtil';\nimport { orArray } from '../../modules/util';\nimport 'react-grid-layout/css/styles.css';\nimport './ItemGrid.css';\nexport class PrintItemGrid extends Component {\n  getItemComponent = item => <div key={item.i} className={cx(item.type, 'print', 'oipp')}>\n            <Item item={item} dashboardMode={PRINT} />\n        </div>;\n  getItemComponents = items => items.map(item => this.getItemComponent(item));\n\n  render() {\n    const {\n      isLoading,\n      dashboardItems\n    } = this.props;\n\n    if (!isLoading && !dashboardItems.length) {\n      return <NoContentMessage text={i18n.t('There are no items on this dashboard')} />;\n    }\n\n    const width = a4LandscapeWidthPx < window.innerWidth ? a4LandscapeWidthPx : window.innerWidth;\n    return <>\n                {isLoading ? <Layer translucent>\n                        <CenteredContent>\n                            <CircularLoader />\n                        </CenteredContent>\n                    </Layer> : null}\n                <ReactGridLayout className=\"layout print\" layout={dashboardItems} margin={MARGIN} cols={getGridColumns()} rowHeight={GRID_ROW_HEIGHT} width={width} compactType={GRID_COMPACT_TYPE} isDraggable={false} isResizable={false} draggableCancel=\"input,textarea\">\n                    {this.getItemComponents(dashboardItems)}\n                </ReactGridLayout>\n            </>;\n  }\n\n}\nPrintItemGrid.propTypes = {\n  dashboardItems: PropTypes.array,\n  isLoading: PropTypes.bool\n};\nPrintItemGrid.defaultProps = {\n  dashboardItems: []\n};\n\nconst mapStateToProps = state => {\n  const selectedDashboard = sGetPrintDashboardRoot(state);\n  return {\n    isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n    dashboardItems: orArray(sGetPrintDashboardItems(state)).filter(hasShape)\n  };\n};\n\nexport default connect(mapStateToProps)(PrintItemGrid);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport sortBy from 'lodash/sortBy';\nimport PrintInfo from './PrintInfo';\nimport PrintActionsBar from './PrintActionsBar';\nimport PrintItemGrid from '../ItemGrid/PrintItemGrid';\nimport { acSetPrintDashboard, acAddPrintDashboardItem, acRemovePrintDashboardItem, acUpdatePrintDashboardItem } from '../../actions/printDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { sGetWindowHeight } from '../../reducers/windowHeight';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport { PAGEBREAK, PRINT_TITLE_PAGE, SPACER } from '../../modules/itemTypes';\nimport { a4LandscapeWidthPx, MAX_ITEM_GRID_HEIGHT_OIPP, MAX_ITEM_GRID_WIDTH_OIPP } from '../ItemGrid/gridUtil';\nimport { PRINT_ACTIONS_BAR_HEIGHT } from './PrintActionsBar';\nimport classes from './styles/PrintDashboard.module.css';\nimport './styles/print.css';\nimport './styles/print-oipp.css';\nexport class PrintDashboard extends Component {\n  state = {\n    initialized: false\n  };\n  initPrintDashboard = () => {\n    if (this.props.dashboard) {\n      this.setState({\n        initialized: true\n      }); //sort the items by Y pos so they print in order of top to bottom\n\n      const sortedItems = sortBy(this.props.items, ['y', 'x']);\n      this.props.setPrintDashboard(this.props.dashboard, sortedItems); // remove spacers - don't want empty pages\n\n      let spacerCount = 0;\n      this.props.items.forEach(item => {\n        if (item.type === SPACER) {\n          spacerCount += 1;\n          this.props.removeDashboardItem(item.id);\n        }\n      }); // Resize the items to the full page size\n\n      this.props.items.forEach(item => {\n        this.props.updateDashboardItem(Object.assign({}, item, {\n          w: MAX_ITEM_GRID_WIDTH_OIPP,\n          h: MAX_ITEM_GRID_HEIGHT_OIPP\n        }));\n      }); // insert page breaks into the document flow to create the \"pages\"\n      // when previewing the print\n\n      for (let i = 0; i < (this.props.items.length - spacerCount) * 2; i += 2) {\n        this.props.addDashboardItem({\n          type: PAGEBREAK,\n          position: i,\n          isStatic: false\n        });\n      }\n\n      this.props.addDashboardItem({\n        type: PRINT_TITLE_PAGE,\n        isOneItemPerPage: true\n      });\n    }\n  };\n\n  componentDidMount() {\n    this.initPrintDashboard();\n  }\n\n  componentDidUpdate() {\n    if (!this.state.initialized) {\n      this.initPrintDashboard();\n    }\n  }\n\n  render() {\n    const height = this.props.windowHeight - PRINT_ACTIONS_BAR_HEIGHT;\n    return <>\n                <PrintActionsBar id={this.props.dashboard.id} />\n                <div className={classes.wrapper} style={{\n        height\n      }}>\n                    <PrintInfo isLayout={false} />\n                    <div className={classes.pageOuter} style={{\n          width: a4LandscapeWidthPx\n        }} data-test=\"print-oipp-page\">\n                        <PrintItemGrid />\n                    </div>\n                </div>\n            </>;\n  }\n\n}\nPrintDashboard.propTypes = {\n  addDashboardItem: PropTypes.func,\n  dashboard: PropTypes.object,\n  items: PropTypes.array,\n  removeDashboardItem: PropTypes.func,\n  setPrintDashboard: PropTypes.func,\n  updateDashboardItem: PropTypes.func,\n  windowHeight: PropTypes.number\n};\n\nconst mapStateToProps = state => {\n  const id = sGetSelectedId(state);\n  const dashboard = id ? sGetDashboardById(state, id) : null;\n  return {\n    dashboard,\n    id,\n    items: sGetDashboardItems(state),\n    windowHeight: sGetWindowHeight(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setPrintDashboard: acSetPrintDashboard,\n  addDashboardItem: acAddPrintDashboardItem,\n  removeDashboardItem: acRemovePrintDashboardItem,\n  updateDashboardItem: acUpdatePrintDashboardItem\n})(PrintDashboard);","import { SET_WINDOW_HEIGHT } from '../reducers/windowHeight';\nexport const acSetWindowHeight = value => ({\n  type: SET_WINDOW_HEIGHT,\n  value\n});","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport isEmpty from 'lodash/isEmpty';\nimport i18n from '@dhis2/d2-i18n';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport debounce from 'lodash/debounce';\nimport DashboardsBar from '../ControlBar/DashboardsBar';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport ViewDashboard from './ViewDashboard';\nimport EditDashboard from './EditDashboard';\nimport NewDashboard from './NewDashboard';\nimport PrintDashboard from './PrintDashboard';\nimport PrintLayoutDashboard from './PrintLayoutDashboard';\nimport { tSelectDashboard } from '../../actions/dashboards';\nimport { acSetWindowHeight } from '../../actions/windowHeight';\nimport { sDashboardsIsFetching, sGetAllDashboards } from '../../reducers/dashboards';\nimport { sGetSelectedId, NON_EXISTING_DASHBOARD_ID } from '../../reducers/selected';\nimport { EDIT, NEW, VIEW, PRINT, PRINT_LAYOUT, isPrintMode } from './dashboardModes';\n\nconst setHeaderbarVisibility = mode => {\n  const header = document.getElementsByTagName('header')[0];\n\n  if (isPrintMode(mode)) {\n    header.classList.add('hidden');\n  } else {\n    header.classList.remove('hidden');\n  }\n};\n\nconst dashboardMap = {\n  [VIEW]: <ViewDashboard />,\n  [EDIT]: <EditDashboard />,\n  [NEW]: <NewDashboard />,\n  [PRINT]: <PrintDashboard />,\n  [PRINT_LAYOUT]: <PrintLayoutDashboard />\n};\nexport const Dashboard = ({\n  id,\n  mode,\n  dashboardsLoaded,\n  dashboardsIsEmpty,\n  routeId,\n  selectDashboard,\n  setWindowHeight\n}) => {\n  useEffect(() => {\n    setHeaderbarVisibility(mode);\n  }, [mode]);\n  useEffect(() => {\n    if (dashboardsLoaded && !dashboardsIsEmpty) {\n      selectDashboard(routeId);\n    }\n  }, [dashboardsLoaded, dashboardsIsEmpty, routeId]);\n  useEffect(() => {\n    const onResize = debounce(() => setWindowHeight(window.innerHeight), 300);\n    window.addEventListener('resize', onResize);\n    return () => {\n      window.removeEventListener('resize', onResize);\n    };\n  }, []);\n\n  if (!dashboardsLoaded) {\n    return <Layer translucent>\n                <CenteredContent>\n                    <CircularLoader />\n                </CenteredContent>\n            </Layer>;\n  }\n\n  if (mode === NEW) {\n    return dashboardMap[mode];\n  }\n\n  if (dashboardsIsEmpty) {\n    return <>\n                <DashboardsBar />\n                <DashboardVerticalOffset />\n                <NoContentMessage text={i18n.t('No dashboards found. Use the + button to create a new dashboard.')} />\n            </>;\n  }\n\n  if (id === NON_EXISTING_DASHBOARD_ID) {\n    return <>\n                <DashboardsBar />\n                <DashboardVerticalOffset />\n                <NoContentMessage text={i18n.t('Requested dashboard not found')} />\n            </>;\n  }\n\n  if (id === null) {\n    return <Layer translucent>\n                <CenteredContent>\n                    <CircularLoader />\n                </CenteredContent>\n            </Layer>;\n  }\n\n  return dashboardMap[mode];\n};\nDashboard.propTypes = {\n  dashboardsIsEmpty: PropTypes.bool,\n  dashboardsLoaded: PropTypes.bool,\n  id: PropTypes.string,\n  match: PropTypes.object,\n  // provided by the react-router-dom\n  mode: PropTypes.string,\n  routeId: PropTypes.string,\n  selectDashboard: PropTypes.func,\n  setWindowHeight: PropTypes.func\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const dashboards = sGetAllDashboards(state);\n  return {\n    dashboardsIsEmpty: isEmpty(dashboards),\n    dashboardsLoaded: !sDashboardsIsFetching(state),\n    id: sGetSelectedId(state),\n    routeId: ownProps.match?.params?.dashboardId || null\n  };\n};\n\nexport default connect(mapStateToProps, {\n  selectDashboard: tSelectDashboard,\n  setWindowHeight: acSetWindowHeight\n})(Dashboard);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { AlertBar, AlertStack } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport { sGetAlertMessage } from '../../reducers/alert';\nimport { acClearAlertMessage } from '../../actions/alert';\nexport const Alert = ({\n  message,\n  onClose\n}) => message ? <AlertStack>\n            <AlertBar onHidden={onClose} permanent>\n                {message}\n            </AlertBar>\n        </AlertStack> : null;\nAlert.propTypes = {\n  message: PropTypes.string,\n  onClose: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  message: sGetAlertMessage(state)\n});\n\nexport default connect(mapStateToProps, {\n  onClose: acClearAlertMessage\n})(Alert);","import { RECEIVED_USER } from '../reducers/user';\nexport const acReceivedUser = value => ({\n  type: RECEIVED_USER,\n  value\n});","import { SET_DIMENSIONS } from '../reducers/dimensions';\nimport { apiFetchDimensions } from '@dhis2/analytics';\nimport { sGetSettingsDisplayNameProperty } from '../reducers/settings';\nexport const acSetDimensions = dimensions => ({\n  type: SET_DIMENSIONS,\n  value: dimensions\n});\nexport const tSetDimensions = d2 => async (dispatch, getState) => {\n  const onSuccess = dimensions => {\n    dispatch(acSetDimensions(dimensions));\n  };\n\n  const onError = error => {\n    console.log('Error (apiFetchDimensions): ', error);\n    return error;\n  };\n\n  try {\n    const displayNameProp = sGetSettingsDisplayNameProperty(getState());\n    const dimensions = await apiFetchDimensions(d2, displayNameProp); // filter out CATEGORY that are not of type ATTRIBUTE\n\n    const filteredDimensions = dimensions.filter(dim => dim.dimensionType !== 'CATEGORY' || dim.dimensionType === 'CATEGORY' && dim.dataDimensionType === 'ATTRIBUTE');\n    return onSuccess(filteredDimensions);\n  } catch (err) {\n    return onError(err);\n  }\n};","import { getInstance } from 'd2';\nimport { onError } from './index';\nconst SYSTEM_SETTINGS = ['keyGatherAnalyticalObjectStatisticsInDashboardViews'];\nexport const apiFetchSystemSettings = () => {\n  const endPoint = '/systemSettings';\n  const url = `${endPoint}?${SYSTEM_SETTINGS.map(s => `key=${s}`).join('&')}`;\n  return getInstance().then(d2 => d2.Api.getApi().get(url)).catch(onError);\n};","import { ADD_SETTINGS } from '../reducers/settings';\nimport { apiFetchSystemSettings } from '../api/settings';\nexport const acAddSettings = value => ({\n  type: ADD_SETTINGS,\n  value\n});\nexport const tAddSettings = (...extraSettings) => async dispatch => {\n  const onSuccess = fetchedSettings => {\n    dispatch(acAddSettings(Object.assign({}, fetchedSettings, ...extraSettings)));\n  };\n\n  const onError = error => {\n    console.log('Error (apiFetchSystemSettings): ', error);\n    return error;\n  };\n\n  try {\n    const systemSettings = await apiFetchSystemSettings();\n    return onSuccess({ ...systemSettings\n    });\n  } catch (err) {\n    return onError(err);\n  }\n};","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { CssVariables } from '@dhis2/ui';\nimport Dashboard from './Dashboard/Dashboard';\nimport AlertBar from './AlertBar/AlertBar';\nimport { acReceivedUser } from '../actions/user';\nimport { tFetchDashboards } from '../actions/dashboards';\nimport { tSetControlBarRows } from '../actions/controlBar';\nimport { tSetShowDescription } from '../actions/selected';\nimport { tSetDimensions } from '../actions/dimensions';\nimport { tAddSettings } from '../actions/settings';\nimport { EDIT, VIEW, NEW, PRINT, PRINT_LAYOUT } from './Dashboard/dashboardModes';\nimport './App.css';\nexport class App extends Component {\n  componentDidMount() {\n    this.props.setCurrentUser(this.props.d2.currentUser);\n    this.props.fetchDashboards();\n    this.props.setControlBarRows();\n    this.props.setShowDescription();\n    this.props.setDimensions(this.props.d2);\n    this.props.addSettings();\n  }\n\n  getChildContext() {\n    return {\n      baseUrl: this.props.baseUrl,\n      i18n,\n      d2: this.props.d2\n    };\n  }\n\n  render() {\n    return <>\n                <CssVariables colors spacers />\n                <Router>\n                    <Switch>\n                        <Route exact path=\"/\" render={props => <Dashboard {...props} mode={VIEW} />} />\n                        <Route exact path=\"/new\" render={props => <Dashboard {...props} mode={NEW} />} />\n                        <Route exact path=\"/:dashboardId\" render={props => <Dashboard {...props} mode={VIEW} />} />\n                        <Route exact path=\"/:dashboardId/edit\" render={props => <Dashboard {...props} mode={EDIT} />} />\n                        <Route exact path=\"/:dashboardId/printoipp\" render={props => <Dashboard {...props} mode={PRINT} />} />\n                        <Route exact path=\"/:dashboardId/printlayout\" render={props => <Dashboard {...props} mode={PRINT_LAYOUT} />} />\n                    </Switch>\n                </Router>\n                <AlertBar />\n            </>;\n  }\n\n}\nApp.propTypes = {\n  addSettings: PropTypes.func.isRequired,\n  fetchDashboards: PropTypes.func.isRequired,\n  setControlBarRows: PropTypes.func.isRequired,\n  setCurrentUser: PropTypes.func.isRequired,\n  setDimensions: PropTypes.func.isRequired,\n  setShowDescription: PropTypes.func.isRequired,\n  baseUrl: PropTypes.string,\n  d2: PropTypes.object\n};\nApp.childContextTypes = {\n  baseUrl: PropTypes.string,\n  i18n: PropTypes.object,\n  d2: PropTypes.object\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchDashboards: () => dispatch(tFetchDashboards()),\n    setControlBarRows: () => dispatch(tSetControlBarRows()),\n    setCurrentUser: currentUser => dispatch(acReceivedUser(currentUser)),\n    setDimensions: d2 => dispatch(tSetDimensions(d2)),\n    setShowDescription: () => dispatch(tSetShowDescription()),\n    addSettings: () => dispatch(tAddSettings())\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(App);","/** @module reducers/selected */\nimport { validateReducer } from '../modules/util';\nexport const SET_STYLE = 'SET_STYLE';\nexport const DEFAULT_STATE_STYLE = 'LIST';\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\n\nconst style = (state = DEFAULT_STATE_STYLE, action) => {\n  switch (action.type) {\n    case SET_STYLE:\n      return validateReducer(action.value, DEFAULT_STATE_STYLE);\n\n    default:\n      return state;\n  }\n};\n\nexport default style;\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\n\nexport const sGetStyleRoot = state => state.style;","import { combineReducers } from 'redux';\nimport dashboards from './dashboards';\nimport selected from './selected';\nimport dashboardsFilter from './dashboardsFilter';\nimport controlBar from './controlBar';\nimport visualizations from './visualizations';\nimport editDashboard from './editDashboard';\nimport printDashboard from './printDashboard';\nimport messages from './messages';\nimport user from './user';\nimport alert from './alert';\nimport itemFilters from './itemFilters';\nimport style from './style';\nimport dimensions from './dimensions';\nimport settings from './settings';\nimport activeModalDimension from './activeModalDimension';\nimport windowHeight from './windowHeight';\nexport default combineReducers({\n  dashboards,\n  selected,\n  dashboardsFilter,\n  controlBar,\n  visualizations,\n  messages,\n  user,\n  editDashboard,\n  printDashboard,\n  itemFilters,\n  style,\n  alert,\n  dimensions,\n  settings,\n  activeModalDimension,\n  windowHeight\n});","import { createStore, applyMiddleware, compose } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport reducer from './reducers';\n\nconst configureStore = () => {\n  const middleware = [thunk]; // Enable Redux devtools if extension is installed instead of redux-logger\n\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n  if (!window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ && process.env.NODE_ENV !== 'production') {\n    middleware.push(createLogger());\n  }\n\n  return createStore(reducer, composeEnhancers(applyMiddleware(...middleware)));\n};\n\nexport default configureStore;","//------------------------------------------------------------------------------\n// <auto-generated>\n// This code was generated by d2-i18n-generate.\n//\n// Changes to this file may cause incorrect behavior and will be lost if\n// the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\nimport i18n from '@dhis2/d2-i18n';\nimport arTranslations from './ar/translations.json';\nimport ar_IQTranslations from './ar_IQ/translations.json';\nimport ckbTranslations from './ckb/translations.json';\nimport csTranslations from './cs/translations.json';\nimport daTranslations from './da/translations.json';\nimport enTranslations from './en/translations.json';\nimport esTranslations from './es/translations.json';\nimport frTranslations from './fr/translations.json';\nimport idTranslations from './id/translations.json';\nimport kmTranslations from './km/translations.json';\nimport loTranslations from './lo/translations.json';\nimport myTranslations from './my/translations.json';\nimport nbTranslations from './nb/translations.json';\nimport prsTranslations from './prs/translations.json';\nimport psTranslations from './ps/translations.json';\nimport ptTranslations from './pt/translations.json';\nimport pt_BRTranslations from './pt_BR/translations.json';\nimport ruTranslations from './ru/translations.json';\nimport svTranslations from './sv/translations.json';\nimport tetTranslations from './tet/translations.json';\nimport tgTranslations from './tg/translations.json';\nimport ukTranslations from './uk/translations.json';\nimport urTranslations from './ur/translations.json';\nimport uzTranslations from './uz/translations.json';\nimport uz_CyrlTranslations from './uz_Cyrl/translations.json';\nimport viTranslations from './vi/translations.json';\nimport zhTranslations from './zh/translations.json';\nimport zh_CNTranslations from './zh_CN/translations.json';\nconst namespace = 'default';\ni18n.addResources('ar', namespace, arTranslations);\ni18n.addResources('ar_IQ', namespace, ar_IQTranslations);\ni18n.addResources('ckb', namespace, ckbTranslations);\ni18n.addResources('cs', namespace, csTranslations);\ni18n.addResources('da', namespace, daTranslations);\ni18n.addResources('en', namespace, enTranslations);\ni18n.addResources('es', namespace, esTranslations);\ni18n.addResources('fr', namespace, frTranslations);\ni18n.addResources('id', namespace, idTranslations);\ni18n.addResources('km', namespace, kmTranslations);\ni18n.addResources('lo', namespace, loTranslations);\ni18n.addResources('my', namespace, myTranslations);\ni18n.addResources('nb', namespace, nbTranslations);\ni18n.addResources('prs', namespace, prsTranslations);\ni18n.addResources('ps', namespace, psTranslations);\ni18n.addResources('pt', namespace, ptTranslations);\ni18n.addResources('pt_BR', namespace, pt_BRTranslations);\ni18n.addResources('ru', namespace, ruTranslations);\ni18n.addResources('sv', namespace, svTranslations);\ni18n.addResources('tet', namespace, tetTranslations);\ni18n.addResources('tg', namespace, tgTranslations);\ni18n.addResources('uk', namespace, ukTranslations);\ni18n.addResources('ur', namespace, urTranslations);\ni18n.addResources('uz', namespace, uzTranslations);\ni18n.addResources('uz_Cyrl', namespace, uz_CyrlTranslations);\ni18n.addResources('vi', namespace, viTranslations);\ni18n.addResources('zh', namespace, zhTranslations);\ni18n.addResources('zh_CN', namespace, zh_CNTranslations);\nexport default i18n;","import React from 'react';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport dhis2theme from '@dhis2/d2-ui-core/theme/mui3.theme';\nimport { Provider as ReduxProvider } from 'react-redux';\nimport { D2Shim } from '@dhis2/app-runtime-adapter-d2';\nimport App from './components/App';\nimport configureStore from './configureStore';\nimport './AppWrapper.css';\nimport './locales';\n\nconst muiTheme = () => createMuiTheme(dhis2theme);\n\nconst d2Config = {\n  schemas: ['chart', 'map', 'report', 'reportTable', 'eventChart', 'eventReport', 'dashboard', 'organisationUnit', 'userGroup']\n}; // TODO: ER and EV plugins require the auth header in development mode.\n// Remove this when these plugins are rewritten\n\nconst authorization = process.env.REACT_APP_DHIS2_AUTHORIZATION || null;\n\nif (authorization) {\n  d2Config.headers = {\n    Authorization: authorization\n  };\n}\n\nconst AppWrapper = () => {\n  return <ReduxProvider store={configureStore()}>\n            <MuiThemeProvider theme={muiTheme()}>\n                <D2Shim d2Config={d2Config} i18nRoot=\"./i18n\">\n                    {({\n          d2\n        }) => {\n          if (!d2) {\n            // TODO: Handle errors in d2 initialization\n            return null;\n          }\n\n          return <App d2={d2} />;\n        }}\n                </D2Shim>\n            </MuiThemeProvider>\n        </ReduxProvider>;\n};\n\nexport default AppWrapper;","import i18n from '@dhis2/d2-i18n';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\nimport ExtensionIcon from '@material-ui/icons/Extension';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport PersonIcon from '@material-ui/icons/Person';\nimport FontDownloadIcon from '@material-ui/icons/FontDownload';\nimport EmailIcon from '@material-ui/icons/Email';\nimport CropFreeIcon from '@material-ui/icons/CropFree';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\nimport { getBaseUrl } from './util'; // Item types\n\nexport const VISUALIZATION = 'VISUALIZATION';\nexport const REPORT_TABLE = 'REPORT_TABLE';\nexport const CHART = 'CHART';\nexport const MAP = 'MAP';\nexport const EVENT_REPORT = 'EVENT_REPORT';\nexport const EVENT_CHART = 'EVENT_CHART';\nexport const APP = 'APP';\nexport const REPORTS = 'REPORTS';\nexport const RESOURCES = 'RESOURCES';\nexport const USERS = 'USERS';\nexport const MESSAGES = 'MESSAGES';\nexport const TEXT = 'TEXT';\nexport const SPACER = 'SPACER';\nexport const PAGEBREAK = 'PAGEBREAK';\nexport const PRINT_TITLE_PAGE = 'PRINT_TITLE_PAGE';\nconst DOMAIN_TYPE_AGGREGATE = 'AGGREGATE';\nconst DOMAIN_TYPE_TRACKER = 'TRACKER'; // Dashboard helpers\n\nexport const isVisualizationType = item => !!itemTypeMap[item.type].isVisualizationType;\nexport const hasMapView = itemType => itemTypeMap[itemType].domainType === DOMAIN_TYPE_AGGREGATE;\nexport const isTrackerDomainType = itemType => itemTypeMap[itemType].domainType === DOMAIN_TYPE_TRACKER;\nexport const getDefaultItemCount = itemType => itemTypeMap[itemType].defaultItemCount || 5;\nexport const getAppName = itemType => itemTypeMap[itemType].appName || ''; // Item type map\n\nexport const itemTypeMap = {\n  [VISUALIZATION]: {\n    id: VISUALIZATION,\n    endPointName: 'visualizations',\n    propName: 'visualization',\n    pluralTitle: i18n.t('Visualizations'),\n    appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n    appName: 'Data Visualizer',\n    defaultItemCount: 10\n  },\n  [REPORT_TABLE]: {\n    id: REPORT_TABLE,\n    endPointName: 'visualizations',\n    dataStatisticsName: 'REPORT_TABLE_VIEW',\n    propName: 'visualization',\n    pluralTitle: i18n.t('Pivot tables'),\n    domainType: DOMAIN_TYPE_AGGREGATE,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n    appName: 'Data Visualizer'\n  },\n  [CHART]: {\n    id: CHART,\n    endPointName: 'visualizations',\n    propName: 'visualization',\n    dataStatisticsName: 'CHART_VIEW',\n    pluralTitle: i18n.t('Charts'),\n    domainType: DOMAIN_TYPE_AGGREGATE,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n    appName: 'Data Visualizer'\n  },\n  [MAP]: {\n    id: MAP,\n    endPointName: 'maps',\n    dataStatisticsName: 'MAP_VIEW',\n    propName: 'map',\n    pluralTitle: i18n.t('Maps'),\n    domainType: DOMAIN_TYPE_AGGREGATE,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-maps/?id=${id}`,\n    appName: 'Maps'\n  },\n  [EVENT_REPORT]: {\n    id: EVENT_REPORT,\n    endPointName: 'eventReports',\n    propName: 'eventReport',\n    pluralTitle: i18n.t('Event reports'),\n    domainType: DOMAIN_TYPE_TRACKER,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-event-reports/?id=${id}`,\n    appName: 'Event Reports'\n  },\n  [EVENT_CHART]: {\n    id: EVENT_CHART,\n    endPointName: 'eventCharts',\n    propName: 'eventChart',\n    pluralTitle: i18n.t('Event charts'),\n    domainType: DOMAIN_TYPE_TRACKER,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-event-visualizer/?id=${id}`,\n    appName: 'Event Visualizer'\n  },\n  [APP]: {\n    endPointName: 'apps',\n    propName: 'appKey',\n    pluralTitle: i18n.t('Apps')\n  },\n  [REPORTS]: {\n    id: REPORTS,\n    endPointName: 'reports',\n    propName: 'reports',\n    pluralTitle: i18n.t('Reports'),\n    appUrl: (id, type) => {\n      switch (type) {\n        case 'HTML':\n          return `dhis-web-reports/#/standard-report/view/${id}`;\n\n        case 'JASPER_REPORT_TABLE':\n        case 'JASPER_JDBC':\n        default:\n          return `api/reports/${id}/data.pdf?t=${new Date().getTime()}`;\n      }\n    }\n  },\n  [RESOURCES]: {\n    id: RESOURCES,\n    endPointName: 'resources',\n    propName: 'resources',\n    pluralTitle: i18n.t('Resources'),\n    appUrl: id => `api/documents/${id}/data`\n  },\n  [USERS]: {\n    id: USERS,\n    endPointName: 'users',\n    propName: 'users',\n    pluralTitle: i18n.t('Users'),\n    appUrl: id => `dhis-web-dashboard-integration/profile.action?id=${id}`\n  },\n  [TEXT]: {\n    id: TEXT,\n    propName: 'text'\n  },\n  [MESSAGES]: {\n    propName: 'messages'\n  },\n  [SPACER]: {\n    propName: 'text'\n  },\n  [PAGEBREAK]: {\n    propName: 'text'\n  },\n  [PRINT_TITLE_PAGE]: {\n    propName: 'text'\n  }\n};\nexport const getEndPointName = type => itemTypeMap[type].endPointName;\nexport const getDataStatisticsName = type => itemTypeMap[type].dataStatisticsName || null;\nexport const getItemUrl = (type, item, d2) => {\n  let url;\n\n  if (type === APP) {\n    url = item.launchUrl;\n  }\n\n  if (itemTypeMap[type] && itemTypeMap[type].appUrl) {\n    url = `${getBaseUrl(d2)}/${itemTypeMap[type].appUrl(item.id, item.type)}`;\n  }\n\n  return url;\n};\nexport const getItemIcon = type => {\n  switch (type) {\n    case REPORT_TABLE:\n    case EVENT_REPORT:\n    case REPORTS:\n      return TableIcon;\n\n    case CHART:\n    case EVENT_CHART:\n      return ChartIcon;\n\n    case MAP:\n      return MapIcon;\n\n    case APP:\n      return ExtensionIcon;\n\n    case RESOURCES:\n      return DescriptionIcon;\n\n    case USERS:\n      return PersonIcon;\n\n    case TEXT:\n      return FontDownloadIcon;\n\n    case MESSAGES:\n      return EmailIcon;\n\n    case SPACER:\n      return CropFreeIcon;\n\n    default:\n      return NotInterestedIcon;\n  }\n};","import isObject from 'lodash/isObject'; // validation\n\nexport function orNull(param) {\n  return param === undefined ? null : param;\n}\nexport function orArray(param) {\n  return Array.isArray(param) ? param : [];\n}\nexport function orObject(param) {\n  return isObject(param) ? param : {};\n} // array\n\nexport function arrayGetById(array, id) {\n  return array.find(item => item.id === id);\n} // object\n\nexport function arrayToIdMap(array) {\n  return array.reduce((obj, item) => {\n    obj[item.id] = item;\n    return obj;\n  }, {});\n} // date\n\nexport function getDate() {\n  const y = Math.floor(Math.random() * 3) + 2015;\n  const M = Math.floor(Math.random() * 12) + 1;\n  const d = Math.floor(Math.random() * 28) + 1; // const h = Math.floor(Math.random() * 23) + 1;\n  // const m = Math.floor(Math.random() * 59) + 1;\n  // const s = Math.floor(Math.random() * 59) + 1;\n\n  return new Date(`${y}-${M}-${d}`).toJSON().replace('T', ' ').substr(0, 10);\n}\nexport const formatDate = (value, uiLocale) => {\n  if (typeof global.Intl !== 'undefined' && Intl.DateTimeFormat) {\n    const locale = uiLocale || 'en';\n    return new Intl.DateTimeFormat(locale, {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    }).format(new Date(value));\n  }\n\n  return value.substr(0, 19).replace('T', ' ');\n};\n/**\n * Sorts an array of objects based on provided date property\n *\n * @param {Array} items Array of objects\n * @param {String} dateProp Name of the date property to be used for sorting\n * @param {Boolean} ascending Whether to sort ascending or descending\n */\n\nexport const sortByDate = (items, dateProp, ascending = true) => {\n  const values = Object.values(items);\n  values.sort((a, b) => {\n    const aDate = new Date(a[dateProp]);\n    const bDate = new Date(b[dateProp]);\n    return ascending ? aDate - bDate : bDate - aDate;\n  });\n  return values;\n}; // reducer validator\n\nexport const validateReducer = (value, defaultValue) => value === undefined || value === null ? defaultValue : value;\nexport const getBaseUrl = d2 => {\n  const api = d2.Api.getApi();\n  const idx = api.baseUrl.indexOf('/api');\n  return idx > -1 ? api.baseUrl.slice(0, idx) : api.baseUrl;\n};","import isFunction from 'd2-utilizr/lib/isFunction';\nimport { orObject } from '../../modules/util'; // Dimensions for the react-grid-layout\n\nexport const GRID_COMPACT_TYPE = 'vertical'; // vertical | horizonal | null\n\nexport const GRID_ROW_HEIGHT = 10;\nconst GRID_COLUMN_WIDTH_PX = 20;\nconst GRID_LAYOUT = 'FLEXIBLE'; // FIXED | FLEXIBLE\n\nexport const MARGIN = [10, 10];\nexport const NEW_ITEM_SHAPE = {\n  x: 0,\n  y: 0,\n  w: 20,\n  h: 29\n}; // Dimensions for getShape\n\nconst NUMBER_OF_ITEM_COLS = 2;\nconst GRID_COLUMNS = 60;\nconst MAX_ITEM_GRID_WIDTH = GRID_COLUMNS - 1;\nexport const MAX_ITEM_GRID_HEIGHT = 34;\nexport const MAX_ITEM_GRID_HEIGHT_OIPP = 35;\nexport const MAX_ITEM_GRID_WIDTH_OIPP = 56; // for A4 landscape (297x210mm)\n// 794 px = (21cm / 2.54) * 96 pixels/inch\n// 1122 px = 29.7 /2.54 * 96 pixels/inch\n// const a4LandscapeHeightPx = 794\n\nexport const a4LandscapeWidthPx = 1102;\nexport const getGridColumns = () => {\n  switch (GRID_LAYOUT) {\n    case 'FLEXIBLE':\n      return GRID_COLUMNS;\n\n    case 'FIXED':\n      return Math.floor((window.innerWidth - 20) / GRID_COLUMN_WIDTH_PX);\n\n    default:\n      return GRID_COLUMNS;\n  }\n}; // isNonNegativeInteger\n\nconst isNonNegativeInteger = x => Number.isInteger(x) && x >= 0; // Does the item have all the shape properties?\n\n\nexport const hasShape = item => isNonNegativeInteger(item.x) && isNonNegativeInteger(item.y) && isNonNegativeInteger(item.w) && isNonNegativeInteger(item.h); // returns a rectangular grid block dimensioned with x, y, w, h in grid units.\n// based on a grid with 3 items across\n\nexport const getShape = i => {\n  if (!isNonNegativeInteger(i)) {\n    throw new Error('Invalid grid block number');\n  }\n\n  const col = i % NUMBER_OF_ITEM_COLS;\n  const row = Math.floor(i / NUMBER_OF_ITEM_COLS);\n  const itemWidth = Math.floor(MAX_ITEM_GRID_WIDTH / NUMBER_OF_ITEM_COLS);\n  const itemHeight = GRID_ROW_HEIGHT * 2;\n  return {\n    x: col * itemWidth,\n    y: row * itemHeight,\n    w: itemWidth,\n    h: itemHeight\n  };\n};\nexport const getGridItemProperties = itemId => {\n  return {\n    i: itemId,\n    minH: 4 // minimum height for item\n\n  };\n};\nexport const getPageBreakItemShape = (yPos, isStatic = true) => {\n  return {\n    x: 0,\n    y: yPos,\n    w: MAX_ITEM_GRID_WIDTH,\n    h: 5,\n    static: !!isStatic,\n    minH: 1\n  };\n};\nexport const getPrintTitlePageItemShape = isOneItemPerPage => {\n  return {\n    x: 0,\n    y: 0,\n    w: isOneItemPerPage ? MAX_ITEM_GRID_WIDTH_OIPP : MAX_ITEM_GRID_WIDTH,\n    h: MAX_ITEM_GRID_HEIGHT,\n    static: true,\n    minH: 1\n  };\n};\n/**\n * Calculates the grid item's original height in pixels based\n * on the height in grid units. This calculation\n * is copied directly from react-grid-layout GridItem.js (calcPosition)\n *\n * @param {Object} item item containing shape (x, y, w, h)\n */\n\nexport const getOriginalHeight = item => {\n  const originalHeight = Math.round(GRID_ROW_HEIGHT * item.h + Math.max(0, item.h - 1) * MARGIN[1]);\n  return {\n    originalHeight\n  };\n};\n/**\n * Returns an array of items containing the x, y, w, h dimensions\n * and the item's originalheight in pixels\n * @function\n * @param {Array} items\n * @returns {Array}\n */\n\nexport const withShape = items => items.map((item, index) => {\n  const itemWithShape = hasShape(item) ? item : Object.assign({}, item, getShape(index));\n  return Object.assign({}, itemWithShape, getOriginalHeight(itemWithShape));\n});\nexport const getGridItemDomId = id => `item-${id}`;\nexport function onItemResize(id) {\n  const el = orObject(document.querySelector(`#${getGridItemDomId(id)}`));\n  if (isFunction(el.setViewportSize)) setTimeout(() => el.setViewportSize(el.clientWidth - 5, el.clientHeight - 5), 10);\n}","import isObject from 'lodash/isObject';\nimport { itemTypeMap } from './itemTypes';\nexport const getVisualizationFromItem = item => {\n  if (!isObject(item)) {\n    return null;\n  }\n\n  const propName = itemTypeMap[item.type]?.propName;\n  return item[propName] || item.reportTable || item.chart || item.map || item.eventReport || item.eventChart || {};\n};\nexport const getVisualizationId = item => getVisualizationFromItem(item).id;\nexport const getVisualizationName = item => getVisualizationFromItem(item).name;","import { REPORT_TABLE, CHART, MAP, EVENT_REPORT, EVENT_CHART, itemTypeMap } from '../../../../modules/itemTypes';\nimport { getBaseUrl } from '../../../../modules/util';\nimport { getVisualizationId } from '../../../../modules/item';\nimport { getGridItemDomId } from '../../../ItemGrid/gridUtil'; //external plugins\n\nconst itemTypeToExternalPlugin = {\n  [MAP]: 'mapPlugin',\n  [EVENT_REPORT]: 'eventReportPlugin',\n  [EVENT_CHART]: 'eventChartPlugin'\n};\n\nconst hasIntegratedPlugin = type => [CHART, REPORT_TABLE].includes(type);\n\nconst getPlugin = type => {\n  if (hasIntegratedPlugin(type)) {\n    return true;\n  }\n\n  const pluginName = itemTypeToExternalPlugin[type];\n  return global[pluginName];\n};\n\nexport const pluginIsAvailable = type => !!getPlugin(type);\nexport const loadPlugin = (plugin, config, credentials) => {\n  if (!(plugin && plugin.load)) {\n    return;\n  }\n\n  plugin.url = credentials.baseUrl;\n  plugin.loadingIndicator = true;\n  plugin.dashboard = true;\n\n  if (credentials.auth) {\n    plugin.auth = credentials.auth;\n  }\n\n  plugin.load(config);\n};\nexport const getLink = (item, d2) => {\n  const baseUrl = getBaseUrl(d2);\n  const appUrl = itemTypeMap[item.type].appUrl(getVisualizationId(item));\n  return `${baseUrl}/${appUrl}`;\n};\nexport const load = async (item, visualization, {\n  credentials,\n  activeType,\n  options = {}\n}) => {\n  const config = { ...visualization,\n    ...options,\n    el: getGridItemDomId(item.id)\n  };\n  const type = activeType || item.type;\n  const plugin = getPlugin(type);\n  loadPlugin(plugin, config, credentials);\n};\nexport const resize = item => {\n  const plugin = getPlugin(item.type);\n\n  if (plugin && plugin.resize) {\n    plugin.resize(getGridItemDomId(item.id));\n  }\n};\nexport const unmount = (item, activeType) => {\n  const plugin = getPlugin(activeType);\n\n  if (plugin && plugin.unmount) {\n    plugin.unmount(getGridItemDomId(item.id));\n  }\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemHeaderWrap\":\"ItemHeader_itemHeaderWrap__JcBP7\",\"itemTitle\":\"ItemHeader_itemTitle__34rHa\",\"itemActionsWrap\":\"ItemHeader_itemActionsWrap__Gx3D9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"DashboardsBar_container__1xuCo\",\"overflowYAuto\":\"DashboardsBar_overflowYAuto__2mKmg\",\"overflowYHidden\":\"DashboardsBar_overflowYHidden__24dgC\",\"leftControls\":\"DashboardsBar_leftControls__k-Y57\",\"newLink\":\"DashboardsBar_newLink__2PkLQ\",\"rightControls\":\"DashboardsBar_rightControls__1cyr1\",\"topMargin\":\"DashboardsBar_topMargin__FKGgr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ControlBar_root__iikeX\",\"content\":\"ControlBar_content__26Z33\",\"draghandle\":\"ControlBar_draghandle__27zum\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"DashboardItemChip_link__21drZ\",\"icon\":\"DashboardItemChip_icon__2hcIR\",\"selected\":\"DashboardItemChip_selected__r00uP\",\"unselected\":\"DashboardItemChip_unselected__2H9l2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ClearButton_button__33ZbK\",\"icon\":\"ClearButton_icon__vTJm3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Filter_container__1Vxdh\",\"input\":\"Filter_input__14lhU\",\"focused\":\"Filter_focused__Lvyz3\",\"searchIcon\":\"Filter_searchIcon__2ojUp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ShowMoreButton_container__riJz_\",\"showMore\":\"ShowMoreButton_showMore__3S3He\",\"disabled\":\"ShowMoreButton_disabled__2FQNA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"HeaderMenuItem_item__313hC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuItem\":\"ContentMenuItem_menuItem__vbKn3\",\"launchLink\":\"ContentMenuItem_launchLink__2Nql9\",\"label\":\"ContentMenuItem_label__ANfH1\",\"buttonInsert\":\"ContentMenuItem_buttonInsert__1joHg\"};"],"sourceRoot":""}
{"version":3,"sources":["modules/itemTypes.js","reducers/user.js","reducers/dashboards.js","reducers/selected.js","reducers/visualizations.js","api/metadata.js","api/index.js","api/dashboards.js","components/ItemGrid/gridUtil.js","reducers/messages.js","api/messages.js","reducers/snackbar.js","actions/snackbar.js","components/SnackbarMessage/SnackbarMessage.js","reducers/itemFilter.js","actions/itemFilter.js","components/Item/VisualizationItem/plugin.js","actions/selected.js","api/localStorage.js","components/Item/MessagesItem/actions.js","reducers/editDashboard.js","api/editDashboard.js","actions/editDashboard.js","actions/dashboards.js","reducers/controlBar.js","api/controlBar.js","actions/controlBar.js","modules/colors.js","api/dataStatistics.js","components/ControlBar/DashboardItemChip.js","widgets/D2IconButton.js","reducers/dashboardsFilter.js","components/ControlBar/Filter.js","components/ControlBar/ShowMoreButton.js","components/ControlBar/controlBarDimensions.js","components/ControlBar/DashboardsBar.js","actions/dashboardsFilter.js","components/Dashboard/DashboardVerticalOffset.js","components/ItemSelect/selectableItems.js","components/ItemSelect/ItemSelectList.js","components/ItemSelect/actions.js","components/ItemSelect/ItemSelectSingle.js","components/ItemSelect/ItemSelect.js","components/TitleBar/EditTitleBar.js","widgets/FlatButton.js","widgets/PrimaryButton.js","widgets/D2TextLink.js","components/ItemFilter/ItemFilter.js","api/orgUnits.js","components/TitleBar/Info.js","components/TitleBar/ViewTitleBar.js","components/TitleBar/TitleBar.js","components/Item/VisualizationItem/DefaultPlugin.js","components/Item/ItemHeader.js","components/Item/VisualizationItem/ItemFooter.js","components/Item/ItemHeaderButton.js","components/Item/VisualizationItem/ItemHeaderButtons.js","modules/memoizeOne.js","components/Item/VisualizationItem/Item.js","widgets/Line.js","components/Item/MessagesItem/Item.js","components/Item/NotSupportedItem/Item.js","components/Item/ListItem/Item.js","components/Item/ListItem/actions.js","components/Item/TextItem/Item.js","components/Item/AppItem/Item.js","components/Item/SpacerItem/Item.js","components/Item/ProgressiveLoadingContainer.js","components/Item/Item.js","components/ItemGrid/DeleteItemButton.js","widgets/ModalLoadingMask.js","widgets/NoContentMessage.js","components/ItemGrid/ItemGrid.js","components/Dashboard/DashboardContent.js","components/Dashboard/ViewDashboard.js","components/ControlBar/ConfirmDeleteDialog.js","components/ControlBar/EditBar.js","components/Dashboard/EditDashboard.js","components/Dashboard/NewDashboard.js","components/Dashboard/Dashboard.js","components/Dashboard/dashboardModes.js","components/App.js","actions/user.js","locales/index.js","reducers/style.js","reducers/index.js","configureStore.js","modules/theme.js","index.js","modules/util.js"],"names":["REPORT_TABLE","CHART","MAP","EVENT_REPORT","EVENT_CHART","APP","REPORTS","RESOURCES","USERS","MESSAGES","TEXT","SPACER","DOMAIN_TYPE_AGGREGATE","VISUALIZATION_TYPE_TABLE","VISUALIZATION_TYPE_CHART","VISUALIZATION_TYPE_MAP","spacerContent","emptyTextItemContent","isSpacerType","item","type","text","isTextType","isPluginType","itemTypeMap","hasOwnProperty","getPlugin","pluginName","plugin","global","_itemTypeMap","Object","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","id","endPointName","propName","countName","pluralTitle","i18n","t","domainType","visualizationType","appUrl","concat","appName","getItemUrl","d2","url","launchUrl","getBaseUrl","getItemIcon","TableIcon","ChartIcon","MapIcon","ExtensionIcon","DescriptionIcon","PersonIcon","FontDownloadIcon","EmailIcon","CropFreeIcon","NotInterestedIcon","DEFAULT_STATE_USER","username","uiLocale","isSuperuser","sGetUserUsername","state","user","DEFAULT_STATE_DASHBOARDS","byId","items","updateDashboardProp","dashboardId","prop","value","objectSpread","defineProperty","sGetDashboardsRoot","dashboards","sGetDashboardById","orObject","sDashboardsIsFetching","sGetAllDashboards","sGetDashboardItems","sGetStarredDashboards","values","filter","dashboard","starred","sGetUnstarredDashboards","sGetDashboardsSortedByStarred","toConsumableArray","arraySort","getCustomDashboards","data","arrayFrom","map","d","index","name","displayName","description","displayDescription","favorite","owner","created","split","join","substr","lastUpdated","access","numberOfItems","orArray","dashboardItems","length","combineReducers","arguments","undefined","action","validateReducer","isLoading","showDescription","sGetSelectedRoot","selected","sGetSelectedId","sGetSelectedIsLoading","sGetSelectedShowDescription","DEFAULT_STATE_VISUALIZATIONS","isEmpty","p","sGetVisualization","visualizations","sGetVisualizationsRoot","getIdNameFields","rename","getDimensionFields","_ref2","withItems","arrayClean","getAxesFields","_ref3","getFavoriteFields","_ref4","withDimensions","withOptions","getFavoritesFields","_ref5","getMapFields","apiFetchFavorite","_ref6","fields","getInstance","then","Api","getApi","get","getEndPointName","onError","error","console","log","getDashboardItemsFields","withFavorite","getDashboardFields","apiFetchDashboard","models","catch","apiStarDashboard","isStarred","post","delete","apiDeleteDashboard","MARGIN","NEW_ITEM_SHAPE","x","y","w","h","isNonNegativeInteger","Number","isInteger","hasShape","withShape","itemWithShape","assign","i","Error","col","row","Math","floor","itemWidth","GRID_ROW_HEIGHT","getShape","originalHeight","round","max","getOriginalHeight","getGridItemDomId","onItemResize","el","document","querySelector","isFunction","setViewportSize","setTimeout","clientWidth","clientHeight","sGetMessagesRoot","messages","getMessages","DEFAULT_STATE_SNACKBAR","message","duration","open","acCloseSnackbar","loadingDashboardMsg","SnackbarMessageContent","_ref","react_default","a","createElement","style","fontWeight","connect","_sGetSnackbar","snackbar","sGetSnackbar","snackbarOpen","snackbarMessage","snackbarDuration","onCloseSnackbar","props","Snackbar_default","SnackbarMessage_SnackbarMessageContent","autoHideDuration","onRequestClose","DEFAULT_STATE_ITEM_FILTER","sGetItemFilterRoot","itemFilter","sGetFilterKeys","keys","FILTER_USER_ORG_UNIT","pluginIsAvailable","activeType","extractFavorite","isObject","reportTable","chart","eventReport","eventChart","extractMapView","mapViews","find","mv","layer","includes","loadPlugin","config","credentials","load","baseUrl","loadingIndicator","auth","getId","getName","getLink","configureFilter","ouIds","ouPath","slice","getUserOrgUnitIds","userOrgUnitFilter","fetch","asyncToGenerator","regenerator_default","mark","_callee3","fetchedFavorite","_args3","wrap","_context3","prev","next","sent","abrupt","stop","_x6","apply","this","resize","unmount","getVisualizationConfig","visualization","originalType","extractedMapView","getWithoutId","acSetSelectedId","acSetSelectedIsLoading","acReceivedVisualization","tLoadDashboard","_callee","dispatch","getState","dash","_context","acAppendDashboards","Promise","resolve","t0","_x","_x2","tSetSelectedDashboardById","_callee2","snackbarTimeout","onSuccess","_context2","dashboardName","customDashboard","acSetDashboardItems","localStorage","setItem","forEach","messageConversations","clearTimeout","_x3","_x4","DEFAULT_STATE_EDIT_DASHBOARD","NEW_DASHBOARD_STATE","sGetEditDashboardRoot","editDashboard","sGetEditDashboardItems","saveDashboard","width","height","save","msg","response","uid","updateDashboard","postDashboard","create","acAddDashboardItem","itemPropName","generateUid","content","acUpdateDashboardItem","acRemoveDashboardItem","arrayToIdMap","acSetDashboardStarred","tFetchDashboards","collection","list","paging","toArray","userRows","sGetControlBarUserRows","controlBar","sGetControlBarRoot","KEY","hasNamespace","currentUser","dataStore","has","getNamespace","apiGetControlBarRows","namespace","t1","t2","key","apiPostControlBarRows","_callee4","rows","_context4","set","_x5","acSetControlBarUserRows","colors","lightGrey","lightMediumGrey","mediumGrey","charcoalGrey","darkGrey","muiDefaultGrey","red","paleBlue","lightBlue","royalBlue","mint","lightGreen","mediumGreen","darkGreen","paleYellow","white","black","apiPostDataStatistics","eventType","chipTheme","default","labelColor","backgroundColor","primary","accent","DashboardItemChip","label","chipColorProps","labelStyle","fontSize","lineHeight","margin","cursor","Link","display","verticalAlign","textDecoration","to","onClick","debounce","Chip_default","avatarProps","color","Avatar_default","icon","Star_default","avatar","styles","button","padding","iconStyle","IconAdd","iconColor","D2IconButton","IconButton_default","add_circle_default","defaultProps","Function","prototype","ownerData","DEFAULT_STATE_DASHBOARDS_FILTER_NAME","DEFAULT_STATE_DASHBOARDS_FILTER_OWNER","order","sGetDashboardsFilterRoot","dashboardsFilter","sGetFilterName","KEYCODE_ENTER","KEYCODE_ESCAPE","filterField","top","filterFieldInput","left","filterFieldUnderline","bottom","filterFieldUnderlineFocus","borderColor","borderWidth","clearButton","clearButtonIcon","Filter","_Component","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setFilterValue","event","preventDefault","onChangeName","target","handleKeyUp","keyCode","onKeypressEnter","inherits","createClass","nextProps","setState","TextField_default","className","onChange","onKeyUp","hintText","inputStyle","hintStyle","filterFieldHint","underlineStyle","underlineFocusStyle","Component","ClearButton","disabled","opacity","Clear_default","ControlBar_Filter","react","Filter_Filter","Filter_ClearButton","showMore","paddingTop","textTransform","visibility","withStyles","isMaxHeight","classes","textAlign","MIN_ROW_COUNT","getRowsHeight","getNumRowsFromHeight","FIRST_ROW_PADDING_HEIGHT","getControlBarHeight","expandable","flapHeight","END_FLAP_HEIGHT","MAX_ROW_COUNT","DashboardsBar","_getPrototypeOf2","_len","args","Array","_key","setInitialDashboardState","onChangeHeight","newHeight","newRows","newRowCount","min","onEndDrag","onToggleMaxHeight","onSelectDashboard","history","push","_this$props","selectedId","onChangeFilterName","rowCount","controlBarHeight","contentWrapperStyle","overflowY","ControlBar_default","editMode","marginRight","widgets_D2IconButton","ControlBar_DashboardItemChip","ControlBar_ShowMoreButton","mapDispatchToProps","withRouter","stateProps","dispatchProps","ownProps","displayDashboards","toLowerCase","marginTop","singleItems","header","listItems","title","ItemSelectList","addItem","tAddListItemContent","newItem","match","toggleSeeMore","seeMore","onChangeItemsLimit","_this2","justifyContent","paddingLeft","Button","Divider_default","List","itemUrl","context","ItemIcon","leftIcon","fill","innerDivStyle","hoverColor","primaryText","alignItems","marginLeft","rel","href","Launch_default","contextTypes","PropTypes","object","isRequired","dashboardItem","listItemType","dashboardItemIndex","findIndex","SingleItem","onAddToDashboard","category","addToDashboard","ItemSelectSingle_SingleItem","searchIcon","ItemSearchField","Search_default","fullWidth","ItemSelect","closeList","openList","fetchItems","anchorEl","currentTarget","setFilter","getListItems","itemType","ItemSelect_ItemSelectList","popoverChildren","SingleItems","ItemSelect_ItemSelectSingle","maxOption","api","queryString","maxOptions","add","Set","ItemSelect_ItemSearchField","Popover_default","onClose","anchorOrigin","horizontal","vertical","transformOrigin","PaperProps","React","EditTitleBar","onChangeTitle","onChangeDescription","titleStyle","section","titleDescription","text_field_TextField","multiline","rowsMax","placeholder","itemSelect","components_ItemSelect_ItemSelect","selectedDashboard","flex","minWidth","maxWidth","position","defaultStyles","FlatButton","children","combinedStyle","FlatButton_default","PrimaryButton","RaisedButton_default","textLink","textLinkHover","D2TextLink","onMouseOverHandle","bind","assertThisInitialized","onMouseOutHandle","hoverStyle","_this$props2","onMouseOver","onMouseOut","ItemFilter","roots","onSelectOrgUnit","e","orgUnit","path","ou","onDeselectAll","onSubmit","acSetItemFilter","renderOrgUnitTree","marginBottom","Info_default","infoIcon","container","widgets_D2TextLink","d2_ui_org_unit_tree","onSelectClick","hideCheckboxes","organisationUnits","userDataViewFallback","rootLevel","rootList","actions","widgets_FlatButton","src_widgets_PrimaryButton","Dialog_default","modal","theme","border","Info","show","toggle","InfoOutlined_default","NO_DESCRIPTION","starIcon","textButton","editLink","titleBar","titleBarIcon","ViewTitleBar","toggleSharingDialog","sharingDialogIsOpen","toggleFilterDialog","filterDialogIsOpen","renderItemFilterLabel","len","itemFilterKeys","borderRadius","onStarClick","onInfoClick","userSelect","StarIcon","Star","StarBorder","TitleBar_Info","update","manage","paddingBottom","d2_ui_sharing_dialog_default","components_ItemFilter_ItemFilter","tStarDashboard","TitleBar","edit","TitleBar_EditTitleBar","TitleBar_ViewTitleBar","DefaultPlugin","pluginCredentials","shouldPluginReload","prevProps","reloadAllowed","filterChanged","vis","prevVis","visChanged","reloadPlugin","pluginManager","currentVis","onSelectVisualization","defaultHeaders","Authorization","textDiv","HEADER_HEIGHT","ItemHeader","actionButtons","scrollContainer","line","ItemFooter","objectId","d2_ui_interpretations_default","ItemHeaderButton","iconBase","buttonBase","buttonDisabled","toggleFooterPadding","baseStyle","disabledStyle","activeStyle","inactiveStyle","getItemTypeId","VisualizationItemHeaderButtons","activeFooter","onToggleFooter","toggleFooterBase","toggleFooter","tableButtonStyle","tableBtnStyle","chartButtonStyle","chartBtnStyle","mapButtonStyle","mapBtnStyle","components_Item_ItemHeaderButton","Message_default","ViewList_default","InsertChart_default","Public_default","memoizeOne","fn","lastArgs","lastValue","every","arg","overflow","textOverflow","whiteSpace","fontStretch","Item","showFooter","configLoaded","getUniqueKey","uniqueId","onToggleItemExpanded","getActiveType","getTitle","itemName","getConfig","getActionButtons","ItemHeaderButtons","getContentStyle","getPluginComponent","_this$props3","data_visualizer_plugin","filters","VisualizationItem_DefaultPlugin","_componentDidMount","onVisualizationLoaded","_this$props4","Item_ItemHeader","VisualizationItem_ItemFooter","acReceivedActiveVisualization","Line","PRIVATE","messageTypes","_messageTypes","listStyleType","seeAll","sender","snippet","maxHeight","MessagesItem","getMessageHref","msgIdentifier","messageType","getMessageSender","latestMsg","getMessageItems","editClass","readClass","read","msgDate","location","messageCount","formatDate","userSettings","widgets_Line","string","MessagesContainer","NotSupportedItem","NotInterested_default","align","getItemTitle","removeContent","handler","contentToRemove","ListItem","tRemoveListItemContent","contentItems","array","getContentItems","contentItem","deleteButton","Delete_default","ListItemContainer","newContent","textField","onChangeText","updatedItem","textDivStyle","viewItem","getIframeSrc","appDetails","iframeSrc","AppItem","appKey","system","installedApps","app","src","SpacerItem","ProgressiveLoadingContainer","shouldLoad","containerRef","shouldLoadHandler","bufferPx","bufferFactor","window","innerHeight","rect","getBoundingClientRect","removeHandler","checkShouldLoad","debounceMs","addEventListener","removeEventListener","registerHandler","_this3","objectWithoutProperties","ref","GridItem","VisualizationItem","TextItem","getGridItem","Item_ProgressiveLoadingContainer","right","zIndex","DeleteItemHeaderButton","pointerEvents","dark","ModalLoadingMask","LoadingMask_component","NoContentMessage","ItemGrid","expandedItems","NO_ITEMS_MESSAGE","clickedId","isExpanded","onRemoveItem","onLayoutChange","newLayout","acUpdateDashboardLayout","onResizeStop","layout","oldItem","pluginResize","onRemoveItemWrapper","widgets_NoContentMessage","expandedItem","hProp","minH","widgets_ModalLoadingMask","react_grid_layout_default","cols","rowHeight","innerWidth","compactType","isDraggable","isResizable","draggableCancel","itemClassNames","DeleteItemButton","Item_Item_Item","validItems","DashboardContent","components_TitleBar_TitleBar","components_ItemGrid_ItemGrid","Content","hasDashboardContent","dashboardsIsEmpty","Dashboard_DashboardContent","dashboardsLoaded","contentNotReady","ControlBar_DashboardsBar","Dashboard_DashboardVerticalOffset","ViewDashboard_Content","ConfirmDeleteDialog","onDeleteConfirmed","onContinueEditing","buttonBarStyle","EditBar","translationDialogIsOpen","dashboardModel","confirmDeleteDialogOpen","redirectUrl","onConfirmDelete","onSave","newId","onDiscard","onDiscardChanges","onDelete","onTranslationsSaved","translations","dbLocale","translation","locale","property","onTranslate","fetchDashboardModel","toggleTranslationDialog","confirmDeleteDialog","deleteAccess","ControlBar_ConfirmDeleteDialog","translationDialog","d2_ui_translation_dialog_default","objectToTranslate","fieldsToTranslate","onTranslationSaved","onTranslationError","err","Redirect","updateAccess","discardBtnText","sGetIsNewDashboard","dashboardToSave","_x7","tDeleteDashboard","acSetDashboardDisplayName","EditDashboard","initialized","initEditDashboard","setEditDashboard","getDashboardContent","EditDashboard_Content","ControlBar_EditBar","NewDashboard","setNewDashboard","Dashboard","setDashboard","params","selectDashboard","mode","Dashboard_EditDashboard","Dashboard_NewDashboard","Dashboard_ViewDashboard","dashboardToSelect","preferredId","getItem","App","setCurrentUser","fetchDashboards","setControlBarRows","HeaderBar_default","HashRouter","Switch","Route","exact","render","components_Dashboard_Dashboard","components_SnackbarMessage_SnackbarMessage","childContextTypes","controlBarRows","moment","addResources","enTranslations","loTranslations","svTranslations","urTranslations","viTranslations","setDefaultNamespace","changeLanguage","objectClean","conversations","$merge","d2Object","settings","keyUiLocale","authorities","newState","k","$unshift","idToRemove","$splice","stateItems","newStateItems","stateItem","si","$set","configureStore","middleware","thunk","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducer","applyMiddleware","muiTheme","raisedButton","primaryColor","disabledColor","disabledTextColor","getMuiTheme","configI18n","sources","manifest","isProd","getManifest","info","version","manifest_generated_at","process","activities","dhis","dhis2","apiVersion","headers","schemas","getUserSettings","d2Init","initializedD2","ReactDOM","es","store","createMuiTheme","dhis2theme","index_es","src_components_App","getElementById","init","param","isArray","reduce","obj","Intl","DateTimeFormat","year","month","day","format","Date","replace","defaultValue","idx","indexOf","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__"],"mappings":"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","file":"static/js/main.62d693c8.chunk.js","sourcesContent":["import i18n from '@dhis2/d2-i18n';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\nimport ExtensionIcon from '@material-ui/icons/Extension';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport PersonIcon from '@material-ui/icons/Person';\nimport FontDownloadIcon from '@material-ui/icons/FontDownload';\nimport EmailIcon from '@material-ui/icons/Email';\nimport CropFreeIcon from '@material-ui/icons/CropFree';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nimport { getBaseUrl } from './util';\n\n// Item types\nexport const REPORT_TABLE = 'REPORT_TABLE';\nexport const CHART = 'CHART';\nexport const MAP = 'MAP';\nexport const EVENT_REPORT = 'EVENT_REPORT';\nexport const EVENT_CHART = 'EVENT_CHART';\nexport const APP = 'APP';\nexport const REPORTS = 'REPORTS';\nexport const RESOURCES = 'RESOURCES';\nexport const USERS = 'USERS';\nexport const MESSAGES = 'MESSAGES';\nexport const TEXT = 'TEXT';\nexport const SPACER = 'SPACER';\n\n// Domain types\nexport const DOMAIN_TYPE_AGGREGATE = 'AGGREGATE';\nexport const DOMAIN_TYPE_TRACKER = 'TRACKER';\n\n// Visualization types\nexport const VISUALIZATION_TYPE_TABLE = 'TABLE';\nexport const VISUALIZATION_TYPE_CHART = 'CHART';\nexport const VISUALIZATION_TYPE_MAP = 'MAP';\n\nexport const spacerContent = 'SPACER_ITEM_FOR_DASHBOARD_LAYOUT_CONVENIENCE';\nexport const emptyTextItemContent = 'TEXT_ITEM_WITH_NO_CONTENT';\nexport const isSpacerType = item =>\n    item.type === TEXT && item.text === spacerContent;\nexport const isTextType = item =>\n    item.type === TEXT && item.text !== spacerContent;\nexport const isPluginType = item =>\n    itemTypeMap[item.type].hasOwnProperty('plugin');\n\nexport const getPlugin = type => {\n    const pluginName = itemTypeMap[type].plugin;\n\n    if (type === CHART) {\n        return true;\n    }\n\n    return global[pluginName];\n};\n\n// Item type map\nexport const itemTypeMap = {\n    [REPORT_TABLE]: {\n        id: REPORT_TABLE,\n        endPointName: 'reportTables',\n        propName: 'reportTable',\n        countName: 'reportTableCount',\n        pluralTitle: i18n.t('Pivot tables'),\n        plugin: 'reportTablePlugin',\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        visualizationType: VISUALIZATION_TYPE_TABLE,\n        appUrl: id => `dhis-web-pivot/?id=${id}`,\n        appName: i18n.t('Pivot Tables'),\n    },\n    [CHART]: {\n        id: CHART,\n        endPointName: 'charts',\n        propName: 'chart',\n        countName: 'chartCount',\n        pluralTitle: i18n.t('Charts'),\n        plugin: 'chartPlugin',\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        visualizationType: VISUALIZATION_TYPE_CHART,\n        appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n        appName: i18n.t('Visualizer'),\n    },\n    [MAP]: {\n        id: MAP,\n        endPointName: 'maps',\n        propName: 'map',\n        countName: 'mapCount',\n        pluralTitle: i18n.t('Maps'),\n        plugin: 'mapPlugin',\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        visualizationType: VISUALIZATION_TYPE_MAP,\n        appUrl: id => `dhis-web-maps/?id=${id}`,\n        appName: i18n.t('Maps'),\n    },\n    [EVENT_REPORT]: {\n        id: EVENT_REPORT,\n        endPointName: 'eventReports',\n        propName: 'eventReport',\n        countName: 'eventReportCount',\n        pluralTitle: i18n.t('Event reports'),\n        plugin: 'eventReportPlugin',\n        domainType: DOMAIN_TYPE_TRACKER,\n        visualizationType: VISUALIZATION_TYPE_TABLE,\n        appUrl: id => `dhis-web-event-reports/?id=${id}`,\n        appName: i18n.t('Event Reports'),\n    },\n    [EVENT_CHART]: {\n        id: EVENT_CHART,\n        endPointName: 'eventCharts',\n        propName: 'eventChart',\n        countName: 'eventChartCount',\n        pluralTitle: i18n.t('Event charts'),\n        plugin: 'eventChartPlugin',\n        domainType: DOMAIN_TYPE_TRACKER,\n        visualizationType: VISUALIZATION_TYPE_CHART,\n        appUrl: id => `dhis-web-event-visualizer/?id=${id}`,\n        appName: i18n.t('Event Visualizer'),\n    },\n    [APP]: {\n        endPointName: 'apps',\n        propName: 'appKey',\n        countName: 'appCount',\n        pluralTitle: 'Apps',\n    },\n    [REPORTS]: {\n        id: REPORTS,\n        endPointName: 'reports',\n        propName: 'reports',\n        countName: 'reportCount',\n        pluralTitle: i18n.t('Reports'),\n        appUrl: id =>\n            `dhis-web-reporting/getReportParams.action?mode=report&uid=${id}`,\n    },\n    [RESOURCES]: {\n        id: RESOURCES,\n        endPointName: 'resources',\n        propName: 'resources',\n        countName: 'resourceCount',\n        pluralTitle: i18n.t('Resources'),\n        appUrl: id => `api/documents/${id}/data`,\n    },\n    [USERS]: {\n        id: USERS,\n        endPointName: 'users',\n        propName: 'users',\n        countName: 'userCount',\n        pluralTitle: i18n.t('Users'),\n        appUrl: id => `dhis-web-dashboard-integration/profile.action?id=${id}`,\n    },\n    [TEXT]: {\n        id: TEXT,\n        propName: 'text',\n    },\n    [MESSAGES]: {\n        propName: 'messages',\n    },\n    [SPACER]: {\n        propName: 'text',\n    },\n};\n\nexport const getItemUrl = (type, item, d2) => {\n    let url;\n\n    if (type === APP) {\n        url = item.launchUrl;\n    }\n\n    if (itemTypeMap[type] && itemTypeMap[type].appUrl) {\n        url = `${getBaseUrl(d2)}/${itemTypeMap[type].appUrl(item.id)}`;\n    }\n\n    return url;\n};\n\nexport const getItemIcon = type => {\n    switch (type) {\n        case REPORT_TABLE:\n        case EVENT_REPORT:\n        case REPORTS:\n            return TableIcon;\n        case CHART:\n        case EVENT_CHART:\n            return ChartIcon;\n        case MAP:\n            return MapIcon;\n        case APP:\n            return ExtensionIcon;\n        case RESOURCES:\n            return DescriptionIcon;\n        case USERS:\n            return PersonIcon;\n        case TEXT:\n            return FontDownloadIcon;\n        case MESSAGES:\n            return EmailIcon;\n        case SPACER:\n            return CropFreeIcon;\n        default:\n            return NotInterestedIcon;\n    }\n};\n","export const RECEIVED_USER = 'RECEIVED_USER';\n\nexport const DEFAULT_STATE_USER = {\n    id: '',\n    username: '',\n    uiLocale: '',\n    isSuperuser: false,\n};\n\nexport default (state = DEFAULT_STATE_USER, action) => {\n    switch (action.type) {\n        case RECEIVED_USER: {\n            return fromD2ToUserObj(action.value);\n        }\n        default:\n            return state;\n    }\n};\n\nfunction fromD2ToUserObj(d2Object) {\n    return {\n        id: d2Object.id,\n        username: d2Object.username,\n        uiLocale: d2Object.settings.keyUiLocale,\n        isSuperuser: d2Object.authorities.has('ALL'),\n    };\n}\n\n// selectors\n\nexport const sGetUserId = state => state.user.id;\nexport const sGetUserUsername = state => state.user.username;\nexport const sGetIsSuperuser = state => state.user.isSuperuser;\nexport const sGetUiLocale = state => state.user.uiLocale;\n","/** @module reducers/dashboards */\n\nimport arrayFrom from 'd2-utilizr/lib/arrayFrom';\nimport arraySort from 'd2-utilizr/lib/arraySort';\n\nimport { orArray, orObject } from '../modules/util';\nimport {\n    SPACER,\n    isSpacerType,\n    isTextType,\n    emptyTextItemContent,\n} from '../modules/itemTypes';\n\nexport const SET_DASHBOARDS = 'SET_DASHBOARDS';\nexport const ADD_DASHBOARDS = 'ADD_DASHBOARDS';\nexport const SET_DASHBOARD_STARRED = 'SET_DASHBOARD_STARRED';\nexport const SET_DASHBOARD_DISPLAY_NAME = 'SET_DASHBOARD_DISPLAY_NAME';\nexport const SET_DASHBOARD_ITEMS = 'SET_DASHBOARD_ITEMS';\n\nexport const DEFAULT_STATE_DASHBOARDS = {\n    byId: null,\n    items: [],\n};\n\n// reducer helper functions\n\nconst updateDashboardProp = (state, dashboardId, prop, value) => ({\n    byId: {\n        ...state.byId,\n        [dashboardId]: {\n            ...state.byId[dashboardId],\n            [prop]: value,\n        },\n    },\n    items: state.items,\n});\n\n/**\n * Reducer that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n * @returns {Object}\n */\nexport default (state = DEFAULT_STATE_DASHBOARDS, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS: {\n            return {\n                byId: action.value,\n                items: [],\n            };\n        }\n        case ADD_DASHBOARDS: {\n            return {\n                ...state,\n                byId: {\n                    ...state.byId,\n                    ...action.value,\n                },\n            };\n        }\n        case SET_DASHBOARD_STARRED: {\n            return updateDashboardProp(\n                state,\n                action.dashboardId,\n                'starred',\n                action.value\n            );\n        }\n        case SET_DASHBOARD_DISPLAY_NAME: {\n            return updateDashboardProp(\n                state,\n                action.dashboardId,\n                'displayName',\n                action.value\n            );\n        }\n        case SET_DASHBOARD_ITEMS: {\n            return {\n                ...state,\n                items: action.value,\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// root selector\n\nexport const sGetDashboardsRoot = state => state.dashboards;\n\n// selector level 1\n\n/**\n * Selector which returns a dashboard by id from the state object\n * If no matching dashboard is found it returns undefined\n * If dashboards.byId is null, then the dashboards api request\n * has not yet completed. If dashboards.byId is an empty object\n * then the dashboards api request is complete, but no dashboards\n * were returned\n *\n * @function\n * @param {Object} state The current state\n * @param {Number} id The id of the dashboard\n * @returns {Object | undefined}\n */\nexport const sGetDashboardById = (state, id) =>\n    orObject(sGetDashboardsRoot(state).byId)[id];\n\nexport const sDashboardsIsFetching = state => {\n    return sGetDashboardsRoot(state).byId === null;\n};\n\n/**\n * Selector which returns all dashboards (the byId object)\n *\n * @function\n * @param {Object} state The current state\n * @returns {Object | undefined}\n */\nexport const sGetAllDashboards = state =>\n    orObject(sGetDashboardsRoot(state).byId);\n\n/**\n * Selector which returns the current dashboard items\n *\n * @function\n * @param {Object} state The current state\n * @returns {Array}\n */\nexport const sGetDashboardItems = state => sGetDashboardsRoot(state).items;\n\n// selector level 2\n\nexport const sGetStarredDashboards = state =>\n    Object.values(sGetAllDashboards(state)).filter(\n        dashboard => dashboard.starred === true\n    );\n\nexport const sGetUnstarredDashboards = state =>\n    Object.values(sGetAllDashboards(state)).filter(\n        dashboard => dashboard.starred === false\n    );\n\n// selector level 3\n\nexport const sGetStarredDashboardIds = state => {\n    return sGetStarredDashboards(state).map(dashboard => dashboard.id);\n};\n\nexport const sGetUnstarredDashboardIds = state =>\n    sGetUnstarredDashboards(state).map(dashboard => dashboard.id);\n\nexport const sGetDashboardsSortedByStarred = state => [\n    ...arraySort(sGetStarredDashboards(state), 'ASC', 'displayName'),\n    ...arraySort(sGetUnstarredDashboards(state), 'ASC', 'displayName'),\n];\n\n// utils\n\n/**\n * Returns the array of dashboards, customized for ui\n * @function\n * @param {Array} data The original dashboard list\n * @returns {Array}\n */\nexport const getCustomDashboards = data => {\n    const uiItems = items =>\n        items.map(item => {\n            const type = isSpacerType(item) ? SPACER : item.type;\n            const text = isTextType(item)\n                ? item.text === emptyTextItemContent\n                    ? ''\n                    : item.text\n                : null;\n\n            return {\n                ...item,\n                ...(text !== null ? { text } : {}),\n                type,\n            };\n        });\n\n    return arrayFrom(data).map((d, index) => ({\n        id: d.id,\n        name: d.name,\n        displayName: d.displayName,\n        description: d.description,\n        displayDescription: d.displayDescription,\n        starred: d.favorite,\n        owner: d.user.name,\n        created: d.created\n            .split('T')\n            .join(' ')\n            .substr(0, 16),\n        lastUpdated: d.lastUpdated\n            .split('T')\n            .join(' ')\n            .substr(0, 16),\n        access: d.access,\n        numberOfItems: orArray(d.dashboardItems).length,\n        dashboardItems: uiItems(d.dashboardItems),\n    }));\n};\n","/** @module reducers/selected */\nimport { combineReducers } from 'redux';\n\nimport { validateReducer } from '../modules/util';\n\nexport const SET_SELECTED_ID = 'SET_SELECTED_ID';\nexport const SET_SELECTED_ISLOADING = 'SET_SELECTED_ISLOADING';\nexport const SET_SELECTED_SHOWDESCRIPTION = 'SET_SELECTED_SHOWDESCRIPTION';\n\nexport const DEFAULT_STATE_SELECTED_ID = null;\nexport const DEFAULT_STATE_SELECTED_ISLOADING = false;\nexport const DEFAULT_STATE_SELECTED_SHOWDESCRIPTION = false;\n\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\nconst id = (state = DEFAULT_STATE_SELECTED_ID, action) => {\n    switch (action.type) {\n        case SET_SELECTED_ID:\n            return validateReducer(action.value, DEFAULT_STATE_SELECTED_ID);\n        default:\n            return state;\n    }\n};\n\nconst isLoading = (state = DEFAULT_STATE_SELECTED_ISLOADING, action) => {\n    switch (action.type) {\n        case SET_SELECTED_ISLOADING:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_SELECTED_ISLOADING\n            );\n        default:\n            return state;\n    }\n};\n\nconst showDescription = (\n    state = DEFAULT_STATE_SELECTED_SHOWDESCRIPTION,\n    action\n) => {\n    switch (action.type) {\n        case SET_SELECTED_SHOWDESCRIPTION:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_SELECTED_SHOWDESCRIPTION\n            );\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    id,\n    isLoading,\n    showDescription,\n});\n\n// Selectors\n\nexport const sGetSelectedRoot = state => state.selected;\n\nexport const sGetSelectedId = state => sGetSelectedRoot(state).id;\n\nexport const sGetSelectedIsLoading = state => sGetSelectedRoot(state).isLoading;\n\nexport const sGetSelectedShowDescription = state =>\n    sGetSelectedRoot(state).showDescription;\n","import { orObject } from '../modules/util';\nimport objectClean from 'd2-utilizr/lib/objectClean';\n\n/** @module reducers/visualizations */\n\nexport const RECEIVED_VISUALIZATION = 'RECEIVED_VISUALIZATION';\nexport const RECEIVED_ACTIVE_VISUALIZATION = 'RECEIVED_ACTIVE_VISUALIZATION';\n\nexport const DEFAULT_STATE_VISUALIZATIONS = {};\n\nconst isEmpty = p => p === undefined || p === null;\n\nexport default (state = DEFAULT_STATE_VISUALIZATIONS, action) => {\n    switch (action.type) {\n        case RECEIVED_VISUALIZATION: {\n            return {\n                ...state,\n                [action.value.id]: action.value,\n            };\n        }\n        case RECEIVED_ACTIVE_VISUALIZATION: {\n            return {\n                ...state,\n                [action.id]: objectClean(\n                    {\n                        ...orObject(state[action.id]),\n                        activeType: action.activeType,\n                    },\n                    isEmpty\n                ),\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// root selector\nexport const sGetVisualizationsRoot = state => state.visualizations;\n\n// selectors level 1\nexport const sGetVisualization = (state, id) => {\n    return sGetVisualizationsRoot(state)[id];\n};\n","import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\n\nimport { getEndPointName } from './index';\n\n// Id, name\nexport const getIdNameFields = ({ rename } = {}) => [\n    'id',\n    `${rename ? 'displayName~rename(name)' : 'name,displayName'}`,\n];\n\n// Item\nexport const getItemFields = () => [\n    'dimensionItem~rename(id)',\n    'displayName~rename(name)',\n];\n\n// Dimension\nexport const getDimensionFields = ({ withItems }) =>\n    arrayClean([\n        'dimension',\n        'legendSet[id]',\n        withItems ? `items[${getItemFields().join(',')}]` : ``,\n    ]);\n\n// Axis\nexport const getAxesFields = ({ withItems }) => [\n    `columns[${getDimensionFields({ withItems }).join(',')}]`,\n    `rows[${getDimensionFields({ withItems }).join(',')}]`,\n    `filters[${getDimensionFields({ withItems }).join(',')}]`,\n];\n\n// Favorite\nexport const getFavoriteFields = ({ withDimensions, withOptions }) => {\n    return arrayClean([\n        `${getIdNameFields({ rename: true }).join(',')}`,\n        'displayDescription~rename(description)',\n        withDimensions ? `${getAxesFields({ withItems: true }).join(',')}` : ``,\n        withOptions\n            ? [\n                  '*',\n                  '!attributeDimensions',\n                  '!attributeValues',\n                  '!category',\n                  '!categoryDimensions',\n                  '!categoryOptionGroupSetDimensions',\n                  '!columnDimensions',\n                  '!dataDimensionItems',\n                  '!dataElementDimensions',\n                  '!dataElementGroupSetDimensions',\n                  '!filterDimensions',\n                  '!itemOrganisationUnitGroups',\n                  '!lastUpdatedBy',\n                  '!organisationUnitGroupSetDimensions',\n                  '!organisationUnitLevels',\n                  '!organisationUnits',\n                  '!programIndicatorDimensions',\n                  '!relativePeriods',\n                  '!reportParams',\n                  '!rowDimensions',\n                  '!series',\n                  '!translations',\n                  '!userOrganisationUnit',\n                  '!userOrganisationUnitChildren',\n                  '!userOrganisationUnitGrandChildren',\n              ].join(',')\n            : '',\n    ]);\n};\n\nexport const getFavoritesFields = ({ withDimensions, withOptions }) => [\n    `reportTable[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `chart[${['type', ...getFavoriteFields({ withDimensions })].join(',')}]`,\n    `map[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `eventReport[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `eventChart[${getFavoriteFields({ withDimensions }).join(',')}]`,\n];\n\n// List item\nexport const getListItemFields = () => [\n    `reports[${getIdNameFields({ rename: true }).join(',')}]`,\n    `resources[${getIdNameFields({ rename: true }).join(',')}]`,\n    `users[${getIdNameFields({ rename: true }).join(',')}]`,\n];\n\n// Map\nexport const getMapFields = () => [\n    `${getIdNameFields({ rename: true }).join(',')}`,\n    'user,longitude,latitude,zoom,basemap',\n    `mapViews[${getFavoriteFields({\n        withDimensions: true,\n        withOptions: true,\n    })}]`,\n];\n\n// Api\n\n// Get more info about the favorite of a dashboard item\nexport const apiFetchFavorite = (id, type, { fields }) =>\n    getInstance().then(d2 =>\n        d2.Api.getApi().get(\n            `${getEndPointName(type)}/${id}?fields=${fields ||\n                getFavoriteFields({\n                    withDimensions: true,\n                    withOptions: true,\n                })}`\n        )\n    );\n","import arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { itemTypeMap } from '../modules/itemTypes';\nimport {\n    getListItemFields,\n    getFavoritesFields,\n    getIdNameFields,\n} from './metadata';\n\n// Helper functions\n\nexport const onError = error => console.log('Error: ', error);\n\nexport const getEndPointName = type => itemTypeMap[type].endPointName;\n\n// Dashboard item\nexport const getDashboardItemsFields = ({ withFavorite } = {}) =>\n    arrayClean([\n        'id',\n        'type',\n        'shape',\n        'x',\n        'y',\n        'width~rename(w)',\n        'height~rename(h)',\n        'messages',\n        'text',\n        'appKey',\n        `${getListItemFields().join(',')}`,\n        withFavorite\n            ? `${getFavoritesFields({\n                  withDimensions: withFavorite.withDimensions,\n              }).join(',')}`\n            : ``,\n    ]);\n\n// Dashboard\nexport const getDashboardFields = ({ withItems, withFavorite } = {}) =>\n    arrayClean([\n        `${getIdNameFields().join(',')}`,\n        'description',\n        'displayDescription',\n        'favorite',\n        `user[${getIdNameFields({ rename: true }).join(',')}]`,\n        'created',\n        'lastUpdated',\n        'access',\n        withItems\n            ? `dashboardItems[${getDashboardItemsFields({\n                  withFavorite,\n              }).join(',')}]`\n            : ``,\n    ]);\n","import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { onError, getDashboardFields } from './index';\n\n// Get \"all\" dashboards on startup\nexport const apiFetchDashboards = () =>\n    getInstance()\n        .then(d2 =>\n            d2.models.dashboard.list({\n                fields: [\n                    getDashboardFields().join(','),\n                    'dashboardItems[id]',\n                ].join(','),\n                paging: 'false',\n            })\n        )\n        .catch(onError);\n\n// Get more info about selected dashboard\nexport const apiFetchDashboard = id =>\n    getInstance()\n        .then(d2 =>\n            d2.models.dashboard.get(id, {\n                fields: arrayClean(\n                    getDashboardFields({\n                        withItems: true,\n                        withFavorite: { withDimensions: false },\n                    })\n                ).join(','),\n            })\n        )\n        .catch(onError);\n\n// Star dashboard\nexport const apiStarDashboard = (id, isStarred) => {\n    const url = `dashboards/${id}/favorite`;\n\n    getInstance().then(d2 => {\n        if (isStarred) {\n            d2.Api.getApi().post(url);\n        } else {\n            d2.Api.getApi().delete(url);\n        }\n    });\n};\n\nexport const apiDeleteDashboard = id => {\n    return getInstance()\n        .then(d2 => {\n            return d2.models.dashboards\n                .get(id)\n                .then(dashboard => dashboard.delete());\n        })\n        .catch(onError);\n};\n","import isFunction from 'd2-utilizr/lib/isFunction';\n\nimport { orObject } from '../../modules/util';\n\n// Dimensions for the react-grid-layout\n\nexport const GRID_COMPACT_TYPE = 'vertical'; // vertical | horizonal | null\nexport const GRID_ROW_HEIGHT = 10;\nconst GRID_COLUMN_WIDTH_PX = 20;\nconst GRID_LAYOUT = 'FLEXIBLE'; // FIXED | FLEXIBLE\nexport const MARGIN = [10, 10];\n\nexport const NEW_ITEM_SHAPE = { x: 0, y: 0, w: 20, h: 29 };\nexport const ITEM_MIN_HEIGHT = 4;\n\n// Dimensions for getShape\n\nconst NUMBER_OF_ITEM_COLS = 2;\nconst GRID_COLUMNS = 60;\n\nexport const getGridColumns = () => {\n    switch (GRID_LAYOUT) {\n        case 'FLEXIBLE':\n            return GRID_COLUMNS;\n        case 'FIXED':\n            return Math.floor((window.innerWidth - 20) / GRID_COLUMN_WIDTH_PX);\n        default:\n            return GRID_COLUMNS;\n    }\n};\n\n// isNonNegativeInteger\n\nconst isNonNegativeInteger = x => Number.isInteger(x) && x >= 0;\n\n// Does the item have all the shape properties?\n\nexport const hasShape = item =>\n    isNonNegativeInteger(item.x) &&\n    isNonNegativeInteger(item.y) &&\n    isNonNegativeInteger(item.w) &&\n    isNonNegativeInteger(item.h);\n\n// returns a rectangular grid block dimensioned with x, y, w, h in grid units.\n// based on a grid with 3 items across\nexport const getShape = i => {\n    if (!isNonNegativeInteger(i)) {\n        throw new Error('Invalid grid block number');\n    }\n\n    const col = i % NUMBER_OF_ITEM_COLS;\n    const row = Math.floor(i / NUMBER_OF_ITEM_COLS);\n    const itemWidth = Math.floor((GRID_COLUMNS - 1) / NUMBER_OF_ITEM_COLS);\n    const itemHeight = GRID_ROW_HEIGHT * 2;\n\n    return {\n        x: col * itemWidth,\n        y: row * itemHeight,\n        w: itemWidth,\n        h: itemHeight,\n    };\n};\n\n/**\n * Calculates the grid item's original height in pixels based\n * on the height in grid units. This calculation\n * is copied directly from react-grid-layout GridItem.js (calcPosition)\n *\n * @param {Object} item item containing shape (x, y, w, h)\n */\nconst getOriginalHeight = item => {\n    const originalHeight = Math.round(\n        GRID_ROW_HEIGHT * item.h + Math.max(0, item.h - 1) * MARGIN[1]\n    );\n\n    return { originalHeight };\n};\n\n/**\n * Returns an array of items containing the x, y, w, h dimensions\n * and the item's originalheight in pixels\n * @function\n * @param {Array} items\n * @returns {Array}\n */\n\nexport const withShape = items =>\n    items.map((item, index) => {\n        const itemWithShape = hasShape(item)\n            ? item\n            : Object.assign({}, item, getShape(index));\n\n        return Object.assign(\n            {},\n            itemWithShape,\n            getOriginalHeight(itemWithShape)\n        );\n    });\n\nexport const getGridItemDomId = id => `item-${id}`;\n\nexport function onItemResize(id) {\n    const el = orObject(document.querySelector(`#${getGridItemDomId(id)}`));\n    if (isFunction(el.setViewportSize))\n        setTimeout(\n            () => el.setViewportSize(el.clientWidth - 5, el.clientHeight - 5),\n            10\n        );\n}\n","import update from 'immutability-helper';\nimport { arrayToIdMap } from '../modules/util';\n\nexport const RECEIVED_MESSAGES = 'RECEIVED_MESSAGES';\n\nexport default (state = {}, action) => {\n    switch (action.type) {\n        case RECEIVED_MESSAGES: {\n            const conversations = arrayToIdMap(action.value);\n\n            const newState = update(state, { $merge: conversations });\n\n            return newState;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetMessagesRoot = state => state.messages;\n","import { getInstance } from 'd2';\n\nexport const getMessages = () => {\n    const fields =\n        'id,messageCount,lastUpdated,messageType,displayName,read,messages[id,read,sender[id,displayName],text,lastUpdated]';\n    const url = `/messageConversations?fields=${fields}&order=read:asc&pageSize=200`;\n    return getInstance()\n        .then(d2 => d2.Api.getApi().get(url))\n        .catch(error => console.log('Error:', error));\n};\n","export const RECEIVED_SNACKBAR_MESSAGE = 'RECEIVED_SNACKBAR_MESSAGE';\nexport const CLOSE_SNACKBAR = 'CLOSE_SNACKBAR';\n\nexport const DEFAULT_STATE_SNACKBAR = {\n    message: {},\n    duration: null,\n    open: false,\n};\n\nexport default (state = DEFAULT_STATE_SNACKBAR, action) => {\n    switch (action.type) {\n        case RECEIVED_SNACKBAR_MESSAGE: {\n            return { ...state, ...action.value };\n        }\n        case CLOSE_SNACKBAR: {\n            return DEFAULT_STATE_SNACKBAR;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetSnackbar = state => state.snackbar || DEFAULT_STATE_SNACKBAR;\n","import {\n    RECEIVED_SNACKBAR_MESSAGE,\n    CLOSE_SNACKBAR,\n} from '../reducers/snackbar';\n\nexport const acReceivedSnackbarMessage = value => ({\n    type: RECEIVED_SNACKBAR_MESSAGE,\n    value,\n});\n\nexport const acCloseSnackbar = () => ({\n    type: CLOSE_SNACKBAR,\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Snackbar from 'material-ui/Snackbar';\n\nimport { sGetSnackbar } from '../../reducers/snackbar';\nimport { acCloseSnackbar } from '../../actions/snackbar';\n\nconst LOADING_DASHBOARD = 'LOADING_DASHBOARD';\nexport const loadingDashboardMsg = { name: '', type: LOADING_DASHBOARD };\n\nconst SnackbarMessageContent = ({ message }) => {\n    if (typeof message === 'object') {\n        //future message types:  switch(message.type)\n        return (\n            <span>\n                Loading <span style={{ fontWeight: 800 }}>{message.name}</span>{' '}\n                dashboard\n            </span>\n        );\n    }\n    return message;\n};\n\nexport const SnackbarMessage = props => {\n    return (\n        <Snackbar\n            open={props.snackbarOpen}\n            message={<SnackbarMessageContent message={props.snackbarMessage} />}\n            autoHideDuration={props.snackbarDuration}\n            onRequestClose={props.onCloseSnackbar}\n        />\n    );\n};\n\nconst mapStateToProps = state => {\n    const { message, duration, open } = sGetSnackbar(state);\n    return {\n        snackbarOpen: open,\n        snackbarMessage: message,\n        snackbarDuration: duration,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        onCloseSnackbar: acCloseSnackbar,\n    }\n)(SnackbarMessage);\n","import objectClean from 'd2-utilizr/lib/objectClean';\nimport isEmpty from 'd2-utilizr/lib/isEmpty';\n\nexport const SET_ITEM_FILTER = 'SET_ITEM_FILTER';\n\nexport const DEFAULT_STATE_ITEM_FILTER = {};\n\nexport default (state = DEFAULT_STATE_ITEM_FILTER, action) => {\n    switch (action.type) {\n        case SET_ITEM_FILTER: {\n            return objectClean(\n                {\n                    ...state,\n                    [action.key]: action.value,\n                },\n                isEmpty\n            );\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetItemFilterRoot = state => state.itemFilter;\n\nexport const sGetFilterKeys = state => Object.keys(sGetItemFilterRoot(state));\n","import { SET_ITEM_FILTER } from '../reducers/itemFilter';\n\nexport const FILTER_USER_ORG_UNIT = 'userOrgUnit';\n\n// actions\n\nexport const acSetItemFilter = (key, value) => ({\n    type: SET_ITEM_FILTER,\n    key,\n    value,\n});\n","import isObject from 'lodash/isObject';\nimport { apiFetchFavorite, getMapFields } from '../../../api/metadata';\nimport { FILTER_USER_ORG_UNIT } from '../../../actions/itemFilter';\nimport {\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_REPORT,\n    EVENT_CHART,\n    itemTypeMap,\n    getPlugin,\n} from '../../../modules/itemTypes';\nimport { getBaseUrl, orObject, getWithoutId } from '../../../modules/util';\nimport { getGridItemDomId } from '../../ItemGrid/gridUtil';\n\nexport const THEMATIC_LAYER = 'thematic';\n\nexport const pluginIsAvailable = (item = {}, visualization = {}) => {\n    const type = visualization.activeType || item.type;\n\n    return !!getPlugin(type);\n};\n\nexport const extractFavorite = item => {\n    if (!isObject(item)) {\n        return null;\n    }\n\n    switch (item.type) {\n        case REPORT_TABLE:\n            return item.reportTable;\n        case CHART:\n            return item.chart;\n        case MAP:\n            return item.map;\n        case EVENT_REPORT:\n            return item.eventReport;\n        case EVENT_CHART:\n            return item.eventChart;\n        default:\n            return (\n                item.reportTable ||\n                item.chart ||\n                item.map ||\n                item.eventReport ||\n                item.eventChart ||\n                {}\n            );\n    }\n};\n\nexport const extractMapView = map =>\n    map.mapViews && map.mapViews.find(mv => mv.layer.includes(THEMATIC_LAYER));\n\nexport const loadPlugin = (plugin, config, credentials) => {\n    if (!(plugin && plugin.load)) {\n        return;\n    }\n\n    plugin.url = credentials.baseUrl;\n    plugin.loadingIndicator = true;\n    plugin.dashboard = true;\n    if (credentials.auth) {\n        plugin.auth = credentials.auth;\n    }\n\n    plugin.load(config);\n};\n\nexport const getId = item => extractFavorite(item).id;\nexport const getName = item => extractFavorite(item).name;\nexport const getDescription = item => extractFavorite(item).description;\nexport const getLink = (item, d2) => {\n    const baseUrl = getBaseUrl(d2);\n    const appUrl = itemTypeMap[item.type].appUrl(getId(item));\n\n    return `${baseUrl}/${appUrl}`;\n};\n\nconst getUserOrgUnitIds = (ouPaths = []) => {\n    return ouPaths.map(ouPath => ouPath.split('/').slice(-1)[0]);\n};\n\n// if original visualisation, set id and let the plugin handle it\n// otherwise fetch and pass the correct config to the plugin\nconst configureFavorite = async (item, activeType) => {\n    const isOriginalVisualisation = activeType\n        ? item.type === activeType\n        : true;\n    let favorite;\n\n    if (isOriginalVisualisation) {\n        const fullFavorite = extractFavorite(item);\n\n        favorite = {\n            id: fullFavorite.id,\n        };\n    } else {\n        const fetchedFavorite = await apiFetchFavorite(getId(item), item.type, {\n            fields: item.type === MAP ? getMapFields() : null,\n        });\n\n        favorite =\n            item.type === MAP\n                ? orObject(extractMapView(fetchedFavorite))\n                : fetchedFavorite;\n\n        favorite.id = null;\n    }\n\n    return favorite;\n};\n\nconst configureFilter = (filter = {}) => {\n    const ouIds = getUserOrgUnitIds(filter[FILTER_USER_ORG_UNIT]);\n    const userOrgUnitFilter = ouIds.length\n        ? { [FILTER_USER_ORG_UNIT]: ouIds }\n        : {};\n\n    return Object.assign({}, filter, userOrgUnitFilter);\n};\n\nexport const load = async (item, credentials, activeType, filter = {}) => {\n    const config = {\n        ...(await configureFavorite(item, activeType)),\n        ...configureFilter(filter),\n        el: getGridItemDomId(item.id),\n    };\n\n    const type = activeType || item.type;\n    const plugin = getPlugin(type);\n\n    loadPlugin(plugin, config, credentials);\n};\n\nexport const fetch = async (item, filter = {}) => {\n    const fetchedFavorite = await apiFetchFavorite(getId(item), item.type, {\n        fields: item.type === MAP ? getMapFields() : null,\n    });\n\n    return {\n        ...fetchedFavorite,\n        ...configureFilter(filter),\n        el: getGridItemDomId(item.id),\n    };\n};\n\nexport const resize = item => {\n    const plugin = getPlugin(item.type);\n\n    if (plugin && plugin.resize) {\n        plugin.resize(getGridItemDomId(item.id));\n    }\n};\n\nexport const unmount = (item, activeType) => {\n    const plugin = getPlugin(activeType);\n\n    if (plugin && plugin.unmount) {\n        plugin.unmount(getGridItemDomId(item.id));\n    }\n};\n\nexport const getVisualizationConfig = (\n    visualization,\n    originalType,\n    activeType\n) => {\n    if (originalType === MAP && originalType !== activeType) {\n        const extractedMapView = extractMapView(visualization);\n\n        if (extractedMapView === undefined) {\n            return null;\n        }\n\n        return getWithoutId({\n            ...visualization,\n            ...extractedMapView,\n            mapViews: undefined,\n        });\n    }\n\n    return getWithoutId(visualization);\n};\n","import {\n    SET_SELECTED_ID,\n    SET_SELECTED_ISLOADING,\n    SET_SELECTED_SHOWDESCRIPTION,\n} from '../reducers/selected';\nimport {\n    RECEIVED_VISUALIZATION,\n    RECEIVED_ACTIVE_VISUALIZATION,\n} from '../reducers/visualizations';\nimport { sGetSelectedIsLoading } from '../reducers/selected';\nimport { sGetUserUsername } from '../reducers/user';\nimport { getCustomDashboards, sGetDashboardById } from '../reducers/dashboards';\nimport { apiFetchDashboard } from '../api/dashboards';\nimport { acSetDashboardItems, acAppendDashboards } from './dashboards';\nimport { withShape } from '../components/ItemGrid/gridUtil';\nimport { tGetMessages } from '../components/Item/MessagesItem/actions';\nimport { acReceivedSnackbarMessage, acCloseSnackbar } from './snackbar';\nimport { storePreferredDashboardId } from '../api/localStorage';\nimport { loadingDashboardMsg } from '../components/SnackbarMessage/SnackbarMessage';\nimport {\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_REPORT,\n    EVENT_CHART,\n    MESSAGES,\n} from '../modules/itemTypes';\nimport { extractFavorite } from '../components/Item/VisualizationItem/plugin';\nimport { orObject } from '../modules/util';\n\n// actions\n\nexport const acSetSelectedId = value => ({\n    type: SET_SELECTED_ID,\n    value,\n});\n\nexport const acSetSelectedIsLoading = value => ({\n    type: SET_SELECTED_ISLOADING,\n    value,\n});\n\nexport const acSetSelectedShowDescription = value => ({\n    type: SET_SELECTED_SHOWDESCRIPTION,\n    value,\n});\n\nexport const acReceivedVisualization = value => ({\n    type: RECEIVED_VISUALIZATION,\n    value,\n});\n\nexport const acReceivedActiveVisualization = (id, type, activeType) => {\n    const action = {\n        type: RECEIVED_ACTIVE_VISUALIZATION,\n        id,\n    };\n\n    if (activeType !== type) {\n        action.activeType = activeType;\n    }\n\n    return action;\n};\n\nexport const tLoadDashboard = id => async (dispatch, getState) => {\n    try {\n        const dash = await apiFetchDashboard(id);\n        dispatch(acAppendDashboards(dash));\n\n        return Promise.resolve(dash);\n    } catch (err) {\n        console.log('Error: ', err);\n        return err;\n    }\n};\n\n// thunks\nexport const tSetSelectedDashboardById = id => async (dispatch, getState) => {\n    dispatch(acSetSelectedIsLoading(true));\n\n    const snackbarTimeout = setTimeout(() => {\n        const dashboardName = orObject(sGetDashboardById(getState(), id))\n            .displayName;\n        if (sGetSelectedIsLoading(getState()) && dashboardName) {\n            loadingDashboardMsg.name = dashboardName;\n\n            dispatch(\n                acReceivedSnackbarMessage({\n                    message: loadingDashboardMsg,\n                    open: true,\n                })\n            );\n        }\n    }, 500);\n\n    const onSuccess = selected => {\n        const customDashboard = getCustomDashboards(selected)[0];\n\n        dispatch(\n            acSetDashboardItems(withShape(customDashboard.dashboardItems))\n        );\n\n        storePreferredDashboardId(sGetUserUsername(getState()), id);\n\n        // add visualizations to store\n        customDashboard.dashboardItems.forEach(item => {\n            switch (item.type) {\n                case REPORT_TABLE:\n                case CHART:\n                case MAP:\n                case EVENT_REPORT:\n                case EVENT_CHART:\n                    dispatch(\n                        acReceivedVisualization(\n                            extractFavorite(item),\n                            item.type\n                        )\n                    );\n                    break;\n                case MESSAGES:\n                    dispatch(tGetMessages(id));\n                    break;\n                default:\n                    break;\n            }\n        });\n\n        dispatch(acSetSelectedId(id));\n\n        dispatch(acSetSelectedIsLoading(false));\n\n        clearTimeout(snackbarTimeout);\n\n        dispatch(acCloseSnackbar());\n\n        return selected;\n    };\n\n    const onError = error => {\n        console.log('Error: ', error);\n        return error;\n    };\n\n    try {\n        const selected = await dispatch(tLoadDashboard(id));\n\n        return onSuccess(selected);\n    } catch (err) {\n        return onError(err);\n    }\n};\n","export const getPreferredDashboardId = username =>\n    localStorage.getItem(`dhis2.dashboard.current.${username}`) || undefined;\n\nexport const storePreferredDashboardId = (username, dashboardId) => {\n    localStorage.setItem(`dhis2.dashboard.current.${username}`, dashboardId);\n};\n","import { RECEIVED_MESSAGES } from '../../../reducers/messages';\nimport { getMessages } from '../../../api/messages';\n\nconst onError = (action, error) => {\n    console.log(`Error in action ${action}: ${error}`);\n    return error;\n};\n\nexport const receivedMessages = value => ({\n    type: RECEIVED_MESSAGES,\n    value,\n});\n\nexport const tGetMessages = dashboardItemId => async dispatch => {\n    try {\n        const messages = await getMessages();\n        const { messageConversations } = messages;\n\n        return dispatch(receivedMessages(messageConversations));\n    } catch (err) {\n        return onError('Get Messages', err);\n    }\n};\n","/** @module reducers/editDashboard */\nimport update from 'immutability-helper';\nimport isEmpty from 'lodash/isEmpty';\nimport { orArray, orObject } from '../modules/util';\n\nexport const RECEIVED_EDIT_DASHBOARD = 'RECEIVED_EDIT_DASHBOARD';\nexport const RECEIVED_NOT_EDITING = 'RECEIVED_NOT_EDITING';\nexport const START_NEW_DASHBOARD = 'START_NEW_DASHBOARD';\nexport const RECEIVED_TITLE = 'RECEIVED_TITLE';\nexport const RECEIVED_DESCRIPTION = 'RECEIVED_DESCRIPTION';\nexport const ADD_DASHBOARD_ITEM = 'ADD_DASHBOARD_ITEM';\nexport const REMOVE_DASHBOARD_ITEM = 'REMOVE_DASHBOARD_ITEM';\nexport const UPDATE_DASHBOARD_ITEM = 'UPDATE_DASHBOARD_ITEM';\nexport const RECEIVED_DASHBOARD_LAYOUT = 'RECEIVED_DASHBOARD_LAYOUT';\n\nexport const DEFAULT_STATE_EDIT_DASHBOARD = {};\nexport const NEW_DASHBOARD_STATE = {\n    id: '',\n    name: '',\n    access: {},\n    description: '',\n    dashboardItems: [],\n};\n\nexport default (state = DEFAULT_STATE_EDIT_DASHBOARD, action) => {\n    switch (action.type) {\n        case RECEIVED_EDIT_DASHBOARD:\n            const newState = {};\n            Object.keys(NEW_DASHBOARD_STATE).map(\n                k => (newState[k] = action.value[k])\n            );\n            return newState;\n        case RECEIVED_NOT_EDITING:\n            return DEFAULT_STATE_EDIT_DASHBOARD;\n        case START_NEW_DASHBOARD:\n            return NEW_DASHBOARD_STATE;\n        case RECEIVED_TITLE: {\n            return Object.assign({}, state, { name: action.value });\n        }\n        case RECEIVED_DESCRIPTION: {\n            return Object.assign({}, state, {\n                description: action.value,\n            });\n        }\n        case ADD_DASHBOARD_ITEM:\n            return update(state, {\n                dashboardItems: { $unshift: [action.value] },\n            });\n        case REMOVE_DASHBOARD_ITEM: {\n            const idToRemove = action.value;\n\n            const dashboardItemIndex = state.dashboardItems.findIndex(\n                item => item.id === idToRemove\n            );\n\n            if (dashboardItemIndex > -1) {\n                return update(state, {\n                    dashboardItems: {\n                        $splice: [[dashboardItemIndex, 1]],\n                    },\n                });\n            }\n\n            return state;\n        }\n        case RECEIVED_DASHBOARD_LAYOUT: {\n            const stateItems = orArray(state.dashboardItems);\n\n            const newStateItems = action.value.map(({ x, y, w, h, i }) => {\n                const stateItem = stateItems.find(si => si.id === i);\n\n                return Object.assign({}, stateItem, { w, h, x, y });\n            });\n\n            return update(state, {\n                dashboardItems: { $set: newStateItems },\n            });\n        }\n        case UPDATE_DASHBOARD_ITEM: {\n            const dashboardItem = action.value;\n\n            const dashboardItemIndex = state.dashboardItems.findIndex(\n                item => item.id === dashboardItem.id\n            );\n\n            if (dashboardItemIndex > -1) {\n                const newState = update(state, {\n                    dashboardItems: {\n                        $splice: [[dashboardItemIndex, 1, dashboardItem]],\n                    },\n                });\n\n                return newState;\n            }\n\n            return state;\n        }\n        default:\n            return state;\n    }\n};\n\n// root selector\n\nexport const sGetEditDashboardRoot = state => state.editDashboard;\n\n// selectors\n\nexport const sGetIsEditing = state => !isEmpty(state.editDashboard);\n\nexport const sGetIsNewDashboard = state => {\n    return (\n        !isEmpty(state.editDashboard) && sGetEditDashboardRoot(state).id === ''\n    );\n};\n\nexport const sGetEditDashboardItems = state =>\n    orObject(sGetEditDashboardRoot(state)).dashboardItems;\n","import { getInstance } from 'd2';\n\nconst onError = error => console.log('Error: ', error);\n\nconst saveDashboard = (dashboard, data) => {\n    const { name, description, dashboardItems } = data;\n\n    dashboard.name = name;\n    dashboard.description = description;\n    dashboard.dashboardItems = dashboardItems.map(item =>\n        Object.assign({}, item, { width: item.w, height: item.h })\n    );\n\n    return dashboard.save().then(msg => msg.response.uid);\n};\n\nexport const updateDashboard = data => {\n    return getInstance()\n        .then(d2 => {\n            return d2.models.dashboards\n                .get(data.id)\n                .then(dashboard => saveDashboard(dashboard, data));\n        })\n        .catch(onError);\n};\n\nexport const postDashboard = data => {\n    return getInstance().then(d2 => {\n        const dashboard = d2.models.dashboards.create();\n\n        return saveDashboard(dashboard, data);\n    });\n};\n","import { generateUid } from 'd2/uid';\n\nimport {\n    RECEIVED_EDIT_DASHBOARD,\n    START_NEW_DASHBOARD,\n    RECEIVED_NOT_EDITING,\n    RECEIVED_TITLE,\n    RECEIVED_DESCRIPTION,\n    RECEIVED_DASHBOARD_LAYOUT,\n    ADD_DASHBOARD_ITEM,\n    UPDATE_DASHBOARD_ITEM,\n    REMOVE_DASHBOARD_ITEM,\n} from '../reducers/editDashboard';\nimport { sGetEditDashboardRoot } from '../reducers/editDashboard';\nimport { updateDashboard, postDashboard } from '../api/editDashboard';\nimport { tSetSelectedDashboardById } from '../actions/selected';\nimport { NEW_ITEM_SHAPE } from '../components/ItemGrid/gridUtil';\nimport {\n    itemTypeMap,\n    isSpacerType,\n    TEXT,\n    emptyTextItemContent,\n    isTextType,\n} from '../modules/itemTypes';\n\nconst onError = error => {\n    console.log('Error (Saving Dashboard): ', error);\n    return error;\n};\n\n// actions\n\nexport const acSetEditDashboard = (dashboard, items) => {\n    const val = {\n        ...dashboard,\n        dashboardItems: items,\n    };\n\n    return {\n        type: RECEIVED_EDIT_DASHBOARD,\n        value: val,\n    };\n};\n\nexport const acSetEditNewDashboard = () => ({\n    type: START_NEW_DASHBOARD,\n});\n\nexport const acClearEditDashboard = () => ({\n    type: RECEIVED_NOT_EDITING,\n});\n\nexport const acSetDashboardTitle = value => ({\n    type: RECEIVED_TITLE,\n    value,\n});\n\nexport const acSetDashboardDescription = value => ({\n    type: RECEIVED_DESCRIPTION,\n    value,\n});\n\nexport const acUpdateDashboardLayout = value => ({\n    type: RECEIVED_DASHBOARD_LAYOUT,\n    value,\n});\n\nexport const acAddDashboardItem = item => {\n    const type = item.type;\n    delete item.type;\n    const itemPropName = itemTypeMap[type].propName;\n\n    return {\n        type: ADD_DASHBOARD_ITEM,\n        value: {\n            id: generateUid(),\n            type,\n            [itemPropName]: item.content,\n            ...NEW_ITEM_SHAPE,\n        },\n    };\n};\n\nexport const acUpdateDashboardItem = item => ({\n    type: UPDATE_DASHBOARD_ITEM,\n    value: item,\n});\n\nexport const acRemoveDashboardItem = value => ({\n    type: REMOVE_DASHBOARD_ITEM,\n    value,\n});\n\n// thunks\n\nexport const tSaveDashboard = () => async (dispatch, getState) => {\n    const dashboard = sGetEditDashboardRoot(getState());\n\n    const dashboardItems = dashboard.dashboardItems.map(item => {\n        const text = isTextType(item)\n            ? item.text || emptyTextItemContent\n            : null;\n\n        const type = isSpacerType(item) ? TEXT : item.type;\n\n        return {\n            ...item,\n            ...(text ? { text } : {}),\n            type,\n        };\n    });\n\n    const dashboardToSave = {\n        ...dashboard,\n        dashboardItems,\n    };\n\n    try {\n        const dashboardId = dashboardToSave.id\n            ? await updateDashboard(dashboardToSave)\n            : await postDashboard(dashboardToSave);\n\n        dispatch(acClearEditDashboard());\n        await dispatch(tSetSelectedDashboardById(dashboardId));\n\n        return Promise.resolve(dashboardId);\n    } catch (error) {\n        onError(error);\n    }\n};\n","import {\n    SET_DASHBOARDS,\n    ADD_DASHBOARDS,\n    SET_DASHBOARD_STARRED,\n    SET_DASHBOARD_DISPLAY_NAME,\n    SET_DASHBOARD_ITEMS,\n} from '../reducers/dashboards';\nimport {\n    getCustomDashboards,\n    sGetDashboardById,\n    sGetDashboardsSortedByStarred,\n} from '../reducers/dashboards';\nimport { sGetUserUsername } from '../reducers/user';\nimport { tSetSelectedDashboardById, acSetSelectedId } from './selected';\nimport { acClearEditDashboard } from './editDashboard';\nimport {\n    apiFetchDashboards,\n    apiStarDashboard,\n    apiDeleteDashboard,\n} from '../api/dashboards';\nimport { getPreferredDashboardId } from '../api/localStorage';\nimport { arrayToIdMap } from '../modules/util';\n\n// actions\n\nexport const acSetDashboards = dashboards => ({\n    type: SET_DASHBOARDS,\n    value: arrayToIdMap(getCustomDashboards(dashboards)),\n});\n\nexport const acAppendDashboards = dashboards => ({\n    type: ADD_DASHBOARDS,\n    value: arrayToIdMap(getCustomDashboards(dashboards)),\n});\n\nexport const acSetDashboardStarred = (dashboardId, isStarred) => ({\n    type: SET_DASHBOARD_STARRED,\n    dashboardId: dashboardId,\n    value: isStarred,\n});\n\nexport const acSetDashboardDisplayName = (dashboardId, value) => ({\n    type: SET_DASHBOARD_DISPLAY_NAME,\n    dashboardId,\n    value,\n});\n\nexport const acSetDashboardItems = value => ({\n    type: SET_DASHBOARD_ITEMS,\n    value,\n});\n\n// thunks\n\nexport const tFetchDashboards = () => async dispatch => {\n    const collection = await apiFetchDashboards();\n    dispatch(acSetDashboards(collection.toArray()));\n};\n\nexport const tSelectDashboard = id => async (dispatch, getState) => {\n    const onError = error => {\n        console.log('Error (apiFetchDashboards): ', error);\n        return error;\n    };\n\n    try {\n        const state = getState();\n\n        let dashboardToSelect = null;\n        if (id) {\n            dashboardToSelect = sGetDashboardById(state, id) || null;\n        } else {\n            const preferredId = getPreferredDashboardId(\n                sGetUserUsername(state)\n            );\n            const dash = sGetDashboardById(state, preferredId);\n            dashboardToSelect =\n                preferredId && dash\n                    ? dash\n                    : sGetDashboardsSortedByStarred(state)[0];\n        }\n\n        if (dashboardToSelect) {\n            dispatch(tSetSelectedDashboardById(dashboardToSelect.id));\n        } else {\n            dispatch(acSetSelectedId(false));\n        }\n    } catch (err) {\n        return onError(err);\n    }\n};\n\nexport const tStarDashboard = (id, isStarred) => async (dispatch, getState) => {\n    const onSuccess = id => {\n        dispatch(acSetDashboardStarred(id, isStarred));\n        return id;\n    };\n\n    const onError = error => {\n        console.log('Error (apiStarDashboard): ', error);\n        return error;\n    };\n    try {\n        await apiStarDashboard(id, isStarred);\n        return onSuccess(id);\n    } catch (err) {\n        return onError(err);\n    }\n};\n\nexport const tDeleteDashboard = id => async (dispatch, getState) => {\n    try {\n        await apiDeleteDashboard(id);\n        dispatch(acClearEditDashboard());\n        dispatch(acSetSelectedId());\n        dispatch(acSetDashboardItems([]));\n\n        await dispatch(tFetchDashboards());\n\n        return Promise.resolve();\n    } catch (err) {\n        console.log('Error (deleteDashboard): ', err);\n        return err;\n    }\n};\n","/** @module reducers/controlBar */\nimport { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\n\nexport const SET_CONTROLBAR_USER_ROWS = 'SET_CONTROLBAR_USER_ROWS';\n\nexport const DEFAULT_STATE_CONTROLBAR_ROWS = 1;\n\nconst userRows = (state = DEFAULT_STATE_CONTROLBAR_ROWS, action) => {\n    switch (action.type) {\n        case SET_CONTROLBAR_USER_ROWS:\n            return validateReducer(action.value, DEFAULT_STATE_CONTROLBAR_ROWS);\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    userRows,\n});\n\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\nexport const sGetControlBarRoot = state => state.controlBar;\n\n// Selector dependency level 2\n\nexport const sGetControlBarUserRows = state =>\n    sGetControlBarRoot(state).userRows;\n","import { getInstance } from 'd2';\nimport { DEFAULT_STATE_CONTROLBAR_ROWS } from '../reducers/controlBar';\n\nconst NAMESPACE = 'dashboard';\nconst KEY = 'controlBarRows';\n\nconst hasNamespace = async d2 => await d2.currentUser.dataStore.has(NAMESPACE);\n\nconst getNamespace = async (d2, hasNamespace) =>\n    hasNamespace\n        ? await d2.currentUser.dataStore.get(NAMESPACE)\n        : await d2.currentUser.dataStore.create(NAMESPACE);\n\nexport const apiGetControlBarRows = async () => {\n    const d2 = await getInstance();\n    const namespace = await getNamespace(d2, await hasNamespace(d2));\n    const hasKey = namespace.keys && namespace.keys.find(key => key === KEY);\n\n    if (hasKey) {\n        return await namespace.get(KEY);\n    } else {\n        await apiPostControlBarRows(DEFAULT_STATE_CONTROLBAR_ROWS, namespace);\n        console.log(\n            '(These errors to /userDataStore/dashboard can be ignored)'\n        );\n        return DEFAULT_STATE_CONTROLBAR_ROWS;\n    }\n};\n\nexport const apiPostControlBarRows = async (rows, namespace) => {\n    const d2 = await getInstance();\n    const ns = namespace || (await getNamespace(d2, hasNamespace));\n\n    ns.set(KEY, rows);\n};\n","import { SET_CONTROLBAR_USER_ROWS } from '../reducers/controlBar';\nimport { apiGetControlBarRows } from '../api/controlBar';\n\n// actions\n\nexport const acSetControlBarUserRows = rows => ({\n    type: SET_CONTROLBAR_USER_ROWS,\n    value: rows,\n});\n\n// thunks\n\nexport const tSetControlBarRows = () => async (dispatch, getState) => {\n    const onSuccess = rows => {\n        dispatch(acSetControlBarUserRows(rows));\n    };\n\n    const onError = error => {\n        console.log('Error (apiGetControlBarRows): ', error);\n        return error;\n    };\n\n    try {\n        const controlBarRows = await apiGetControlBarRows();\n        return onSuccess(controlBarRows);\n    } catch (err) {\n        return onError(err);\n    }\n};\n","const lightGrey = '#ECEFF1';\nconst lightMediumGrey = '#9E9E9E';\nconst mediumGrey = '#393939';\nconst charcoalGrey = '#8C8C8C';\nconst darkGrey = '#494949';\nconst muiDefaultGrey = '#757575';\n\nconst red = '#E53935';\n\nconst paleBlue = '#E3F2FD';\nconst lightBlue = '#EAF4FF'; //'#63A4FF'\nconst royalBlue = '#004BA0';\n\nconst mint = '#B2DFDB';\nconst lightGreen = '#48A999';\nconst mediumGreen = '#00796B';\nconst darkGreen = '#004C40';\n\nconst paleYellow = '#FFF8E1';\n\nconst white = '#FFFFFF';\nconst black = 'rgba(0,0,0,0.87)';\n\nexport const colors = {\n    lightGrey,\n    lightMediumGrey,\n    mediumGrey,\n    charcoalGrey,\n    darkGrey,\n    muiDefaultGrey,\n    red,\n    paleBlue,\n    lightBlue,\n    royalBlue,\n    mint,\n    lightGreen,\n    mediumGreen,\n    darkGreen,\n    paleYellow,\n    white,\n    black,\n};\n","import { getInstance } from 'd2';\n\nexport const apiPostDataStatistics = async (eventType, id) => {\n    const d2 = await getInstance();\n    const url = `dataStatistics?eventType=${eventType}&favorite=${id}`;\n\n    d2.Api.getApi().post(url);\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport MuiChip from 'material-ui/Chip';\nimport Avatar from 'material-ui/Avatar';\nimport IconStar from '@material-ui/icons/Star';\nimport { Link } from 'react-router-dom';\nimport debounce from 'lodash/debounce';\n\nimport { colors } from '../../modules/colors';\nimport { apiPostDataStatistics } from '../../api/dataStatistics';\n\nconst chipTheme = {\n    default: {\n        labelColor: colors.black,\n        backgroundColor: colors.lightGrey,\n    },\n    primary: {\n        labelColor: colors.black,\n        backgroundColor: colors.lightGrey,\n    },\n    accent: {\n        labelColor: colors.white,\n        backgroundColor: colors.mediumGreen,\n    },\n};\n\nconst d = '30px';\n\nconst avatar = selected => {\n    const avatarProps = {\n        color: colors.white,\n        backgroundColor: selected ? 'transparent' : colors.lightMediumGrey,\n        style: { height: d, width: d },\n    };\n\n    return <Avatar icon={<IconStar />} {...avatarProps} />;\n};\n\nconst DashboardItemChip = ({ starred, selected, label, dashboardId }) => {\n    const chipColorProps = selected\n        ? chipTheme.accent\n        : starred\n        ? chipTheme.primary\n        : chipTheme.default;\n\n    const labelStyle = { fontSize: '14px', fontWeight: 400, lineHeight: d };\n    const style = { margin: 3, height: d, cursor: 'pointer' };\n\n    const props = {\n        style,\n        labelStyle,\n        ...chipColorProps,\n    };\n\n    return (\n        <Link\n            style={{\n                display: 'inline-block',\n                verticalAlign: 'top',\n                textDecoration: 'none',\n            }}\n            to={`/${dashboardId}`}\n            onClick={debounce(\n                () => apiPostDataStatistics('DASHBOARD_VIEW', dashboardId),\n                500\n            )}\n        >\n            <MuiChip {...props}>\n                {starred ? avatar(selected) : null}\n                {label}\n            </MuiChip>\n        </Link>\n    );\n};\n\nDashboardItemChip.propTypes = {\n    starred: PropTypes.bool.isRequired,\n    selected: PropTypes.bool.isRequired,\n    label: PropTypes.string.isRequired,\n};\n\nexport default DashboardItemChip;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport IconButton from 'material-ui/IconButton';\nimport IconAdd from 'material-ui/svg-icons/content/add-circle';\nimport { colors } from '../modules/colors';\n\nconst styles = {\n    button: {\n        width: 36,\n        height: 36,\n        padding: 0,\n    },\n    iconStyle: {\n        width: 32,\n        height: 32,\n    },\n    icon: IconAdd,\n    iconColor: colors.mediumGreen,\n};\n\nconst D2IconButton = props => (\n    <IconButton\n        style={styles.button}\n        iconStyle={Object.assign({}, styles.iconStyle, props.iconStyle)}\n        onClick={props.onClick}\n    >\n        {props.icon || <IconAdd color={styles.iconColor} />}\n    </IconButton>\n);\n\nD2IconButton.propTypes = {\n    style: PropTypes.object,\n    iconStyle: PropTypes.object,\n    icon: PropTypes.object,\n    iconColor: PropTypes.string,\n    onClick: PropTypes.func,\n};\n\nD2IconButton.defaultProps = {\n    style: null,\n    iconStyle: null,\n    icon: null,\n    iconColor: '',\n    onClick: Function.prototype,\n};\n\nexport default D2IconButton;\n","import { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\n\nexport const SET_DASHBOARDS_FILTER_NAME = 'SET_DASHBOARDS_FILTER_NAME';\nexport const SET_DASHBOARDS_FILTER_OWNER = 'SET_DASHBOARDS_FILTER_OWNER';\nexport const SET_DASHBOARDS_FILTER_ORDER = 'SET_DASHBOARDS_FILTER_ORDER';\n\nexport const ownerData = [\n    { id: 'ALL', value: 'All users' },\n    { id: 'ME', value: 'Created by me' },\n    { id: 'OTHERS', value: 'Created by others' },\n];\n\nexport const orderData = [\n    { id: 'NAME:ASC', value: 'Name (asc)' },\n    { id: 'NAME:ASC', value: 'Name (desc)' },\n    { id: 'ITEMS:ASC', value: 'Number of items (asc)' },\n    { id: 'ITEMS:ASC', value: 'Number of items (desc)' },\n    { id: 'CREATED:ASC', value: 'Created date (asc)' },\n    { id: 'CREATED:ASC', value: 'Created date (desc)' },\n];\n\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_NAME = '';\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_OWNER = ownerData[0].id;\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_ORDER = orderData[0].id;\n\nconst name = (state = DEFAULT_STATE_DASHBOARDS_FILTER_NAME, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_NAME:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_NAME\n            );\n        default:\n            return state;\n    }\n};\n\nconst owner = (state = DEFAULT_STATE_DASHBOARDS_FILTER_OWNER, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_OWNER:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_NAME\n            );\n        default:\n            return state;\n    }\n};\n\nconst order = (state = DEFAULT_STATE_DASHBOARDS_FILTER_ORDER, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_ORDER:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_ORDER\n            );\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    name,\n    owner,\n    order,\n});\n\n// selectors\n\nexport const sGetDashboardsFilterRoot = state => state.dashboardsFilter;\n\n// selector dependency level 2\n\nexport const sGetFilterName = state => sGetDashboardsFilterRoot(state).name;\nexport const sGetFilterOwner = state => sGetDashboardsFilterRoot(state).owner;\nexport const sGetFilterOrder = state => sGetDashboardsFilterRoot(state).order;\n","import React, { Component, Fragment } from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport TextField from 'material-ui/TextField';\nimport IconButton from 'material-ui/IconButton';\nimport IconClear from '@material-ui/icons/Clear';\nimport isEmpty from 'd2-utilizr/lib/isEmpty';\n\nimport { DEFAULT_STATE_DASHBOARDS_FILTER_NAME } from '../../reducers/dashboardsFilter';\n\nexport const KEYCODE_ENTER = 13;\nexport const KEYCODE_ESCAPE = 27;\n\nconst styles = {\n    filterField: {\n        fontSize: '14px',\n        width: '200px',\n        height: '30px',\n        top: '-2px',\n    },\n    filterFieldInput: {\n        top: '-9px',\n        left: '1px',\n    },\n    filterFieldUnderline: {\n        bottom: '10px',\n    },\n    filterFieldUnderlineFocus: {\n        borderColor: '#aaa',\n        borderWidth: '1px',\n    },\n    clearButton: {\n        width: '20px',\n        height: '24px',\n        padding: 0,\n        top: '-5px',\n        left: '-18px',\n    },\n    clearButtonIcon: {\n        width: '16px',\n        height: '16px',\n    },\n};\n\nexport class Filter extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            value: DEFAULT_STATE_DASHBOARDS_FILTER_NAME,\n        };\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setState({\n            value: nextProps.name,\n        });\n    }\n\n    setFilterValue = event => {\n        event.preventDefault();\n\n        this.props.onChangeName(event.target.value);\n    };\n\n    handleKeyUp = event => {\n        switch (event.keyCode) {\n            case KEYCODE_ENTER:\n                this.props.onKeypressEnter();\n                break;\n            case KEYCODE_ESCAPE:\n                this.props.onChangeName();\n                break;\n            default:\n                break;\n        }\n    };\n\n    render() {\n        return (\n            <TextField\n                className=\"FilterField\"\n                value={this.state.value}\n                onChange={this.setFilterValue}\n                onKeyUp={this.handleKeyUp}\n                hintText={i18n.t('Search for a dashboard')}\n                style={styles.filterField}\n                inputStyle={styles.filterFieldInput}\n                hintStyle={styles.filterFieldHint}\n                underlineStyle={styles.filterFieldUnderline}\n                underlineFocusStyle={styles.filterFieldUnderlineFocus}\n            />\n        );\n    }\n}\n\nFilter.propTypes = {\n    name: PropTypes.string,\n    onChangeName: PropTypes.func,\n};\n\nFilter.defaultProps = {\n    name: '',\n    onChangeName: Function.prototype,\n};\n\nexport const ClearButton = ({ name, onChangeName }) => {\n    const disabled = isEmpty(name);\n\n    const clearFilter = () => onChangeName();\n\n    return (\n        <IconButton\n            style={Object.assign({}, styles.clearButton, {\n                opacity: disabled ? 0 : 1,\n            })}\n            iconStyle={styles.clearButtonIcon}\n            onClick={clearFilter}\n            disabled={disabled}\n        >\n            <IconClear color=\"action\" />\n        </IconButton>\n    );\n};\n\nClearButton.propTypes = {\n    name: PropTypes.string.isRequired,\n    onChangeName: PropTypes.func.isRequired,\n};\n\nexport default props => (\n    <Fragment>\n        <Filter {...props} />\n        <ClearButton {...props} />\n    </Fragment>\n);\n","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport { colors } from '../../modules/colors';\n\nexport const SHOWMORE_BAR_HEIGHT = 16;\n\nconst styles = {\n    showMore: {\n        color: colors.royalBlue,\n        cursor: 'pointer',\n        fontSize: 11,\n        fontWeight: 700,\n        height: SHOWMORE_BAR_HEIGHT,\n        paddingTop: 5,\n        textTransform: 'uppercase',\n        visibility: 'visible',\n    },\n};\n\nexport const ShowMoreButton = ({ onClick, isMaxHeight, classes }) => (\n    <div style={{ textAlign: 'center' }}>\n        <div className={classes.showMore} onClick={onClick}>\n            {isMaxHeight ? i18n.t('Show less') : i18n.t('Show more')}\n        </div>\n    </div>\n);\n\nexport default withStyles(styles)(ShowMoreButton);\n","import { END_FLAP_HEIGHT } from '@dhis2/d2-ui-core/control-bar/ControlBar';\nimport { SHOWMORE_BAR_HEIGHT } from './ShowMoreButton';\n\nexport const CONTROL_BAR_ROW_HEIGHT = 36;\nexport const FIRST_ROW_PADDING_HEIGHT = 10;\nexport const HEADERBAR_HEIGHT = 48;\n\nexport const MIN_ROW_COUNT = 1;\n\nconst CONTROL_BAR_OUTER_HEIGHT_DIFF =\n    FIRST_ROW_PADDING_HEIGHT + SHOWMORE_BAR_HEIGHT - 2; // 2 pixel \"adjustment\"\n\nexport const getRowsHeight = rows => {\n    return rows * CONTROL_BAR_ROW_HEIGHT;\n};\n\nexport const getNumRowsFromHeight = height => {\n    return Math.floor(\n        (height - CONTROL_BAR_OUTER_HEIGHT_DIFF) / CONTROL_BAR_ROW_HEIGHT\n    );\n};\n\nexport const getControlBarHeight = (rows, expandable) => {\n    const flapHeight = !expandable ? END_FLAP_HEIGHT : 0;\n\n    return getRowsHeight(rows) + CONTROL_BAR_OUTER_HEIGHT_DIFF + flapHeight;\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport ControlBar from '@dhis2/d2-ui-core/control-bar/ControlBar';\nimport arraySort from 'd2-utilizr/lib/arraySort';\n\nimport Chip from './DashboardItemChip';\nimport D2IconButton from '../../widgets/D2IconButton';\nimport Filter from './Filter';\nimport ShowMoreButton from './ShowMoreButton';\nimport {\n    FIRST_ROW_PADDING_HEIGHT,\n    MIN_ROW_COUNT,\n    getRowsHeight,\n    getControlBarHeight,\n    getNumRowsFromHeight,\n} from './controlBarDimensions';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { sGetAllDashboards } from '../../reducers/dashboards';\nimport { sGetFilterName } from '../../reducers/dashboardsFilter';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { acSetControlBarUserRows } from '../../actions/controlBar';\nimport { acSetFilterName } from '../../actions/dashboardsFilter';\nimport { orObject, orArray } from '../../modules/util';\nimport { apiPostControlBarRows } from '../../api/controlBar';\n\nimport './ControlBar.css';\n\nexport const MAX_ROW_COUNT = 10;\n\nexport class DashboardsBar extends Component {\n    state = {\n        rows: MIN_ROW_COUNT,\n    };\n\n    setInitialDashboardState = rows => {\n        this.setState({ rows, isMaxHeight: rows === MAX_ROW_COUNT });\n    };\n\n    componentDidMount() {\n        this.setInitialDashboardState(this.props.userRows);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setInitialDashboardState(nextProps.userRows);\n    }\n\n    onChangeHeight = newHeight => {\n        const newRows = Math.max(\n            MIN_ROW_COUNT,\n            getNumRowsFromHeight(newHeight)\n        );\n\n        if (newRows !== this.state.rows) {\n            const newRowCount = Math.min(newRows, MAX_ROW_COUNT);\n\n            this.props.onChangeHeight(newRowCount);\n        }\n    };\n\n    onEndDrag = () => {\n        return apiPostControlBarRows(this.state.rows);\n    };\n\n    onToggleMaxHeight = () => {\n        const rows =\n            this.state.rows === MAX_ROW_COUNT\n                ? this.props.userRows\n                : MAX_ROW_COUNT;\n\n        this.setState({ rows, isMaxHeight: !this.state.isMaxHeight });\n    };\n\n    onSelectDashboard = () => {\n        this.props.history.push(`/${this.props.dashboards[0].id}`);\n    };\n\n    render() {\n        const { dashboards, name, selectedId, onChangeFilterName } = this.props;\n\n        const rowCount = this.state.isMaxHeight\n            ? MAX_ROW_COUNT\n            : this.state.rows;\n        const controlBarHeight = getControlBarHeight(rowCount, true);\n        const contentWrapperStyle = {\n            padding: `${FIRST_ROW_PADDING_HEIGHT}px 6px 0 6px`,\n            overflowY: this.state.isMaxHeight ? 'auto' : 'hidden',\n            height: getRowsHeight(rowCount) + FIRST_ROW_PADDING_HEIGHT,\n        };\n\n        return (\n            <ControlBar\n                height={controlBarHeight}\n                onChangeHeight={this.onChangeHeight}\n                onEndDrag={this.onEndDrag}\n                editMode={false}\n                expandable={true}\n            >\n                <div style={contentWrapperStyle}>\n                    <div className=\"left-controls\">\n                        <Link\n                            style={{\n                                display: 'inline-block',\n                                textDecoration: 'none',\n                                marginRight: 10,\n                            }}\n                            to={'/new'}\n                        >\n                            <D2IconButton />\n                        </Link>\n                        <Filter\n                            name={name}\n                            onChangeName={onChangeFilterName}\n                            onKeypressEnter={this.onSelectDashboard}\n                        />\n                    </div>\n                    {orArray(dashboards).map(dashboard => (\n                        <Chip\n                            key={dashboard.id}\n                            label={dashboard.displayName}\n                            starred={dashboard.starred}\n                            dashboardId={dashboard.id}\n                            selected={dashboard.id === selectedId}\n                        />\n                    ))}\n                </div>\n                {this.props.userRows !== MAX_ROW_COUNT ? (\n                    <ShowMoreButton\n                        onClick={this.onToggleMaxHeight}\n                        isMaxHeight={this.state.isMaxHeight}\n                    />\n                ) : null}\n            </ControlBar>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    dashboards: sGetAllDashboards(state),\n    name: sGetFilterName(state),\n    userRows: sGetControlBarUserRows(state),\n    selectedId: sGetSelectedId(state),\n});\n\nconst mapDispatchToProps = {\n    onChangeHeight: acSetControlBarUserRows,\n    onChangeFilterName: acSetFilterName,\n};\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const dashboards = Object.values(orObject(stateProps.dashboards));\n    const displayDashboards = arraySort(\n        dashboards.filter(d =>\n            d.displayName.toLowerCase().includes(stateProps.name.toLowerCase())\n        ),\n        'ASC',\n        'displayName'\n    );\n\n    return {\n        ...stateProps,\n        ...ownProps,\n        ...dispatchProps,\n        dashboards: [\n            ...displayDashboards.filter(d => d.starred),\n            ...displayDashboards.filter(d => !d.starred),\n        ],\n    };\n};\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps,\n        mergeProps\n    )(DashboardsBar)\n);\n","import {\n    SET_DASHBOARDS_FILTER_NAME,\n    SET_DASHBOARDS_FILTER_OWNER,\n    SET_DASHBOARDS_FILTER_ORDER,\n} from '../reducers/dashboardsFilter';\n\n// actions\n\nexport const acSetFilterName = value => ({\n    type: SET_DASHBOARDS_FILTER_NAME,\n    value,\n});\n\nexport const acSetFilterOwner = value => ({\n    type: SET_DASHBOARDS_FILTER_OWNER,\n    value,\n});\n\nexport const acSetFilterOrder = value => ({\n    type: SET_DASHBOARDS_FILTER_ORDER,\n    value,\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport {\n    HEADERBAR_HEIGHT,\n    getControlBarHeight,\n    MIN_ROW_COUNT,\n} from '../ControlBar/controlBarDimensions';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\n\nconst DashboardVerticalOffset = props => {\n    const rows = props.editMode ? MIN_ROW_COUNT : props.userRows;\n    const marginTop = HEADERBAR_HEIGHT + getControlBarHeight(rows, false);\n\n    return <div className=\"page-container-top-margin\" style={{ marginTop }} />;\n};\n\nconst mapStateToProps = state => ({\n    userRows: sGetControlBarUserRows(state),\n});\n\nexport default connect(mapStateToProps)(DashboardVerticalOffset);\n","import i18n from '@dhis2/d2-i18n';\nimport {\n    itemTypeMap,\n    spacerContent,\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_CHART,\n    EVENT_REPORT,\n    USERS,\n    REPORTS,\n    RESOURCES,\n    APP,\n    MESSAGES,\n    TEXT,\n    SPACER,\n} from '../../modules/itemTypes';\n\nexport const singleItems = [\n    {\n        id: 'additional',\n        header: 'Additional items',\n        items: [\n            {\n                type: TEXT,\n                name: i18n.t('Text box'),\n                content: '',\n            },\n            {\n                type: MESSAGES,\n                name: i18n.t('Messages'),\n                content: 'true',\n            },\n            {\n                type: SPACER,\n                name: i18n.t('Spacer'),\n                content: spacerContent,\n            },\n        ],\n    },\n];\n\nexport const listItems = [\n    {\n        id: REPORT_TABLE,\n        title: itemTypeMap[REPORT_TABLE].pluralTitle,\n    },\n    {\n        id: CHART,\n        title: itemTypeMap[CHART].pluralTitle,\n    },\n    { id: MAP, title: itemTypeMap[MAP].pluralTitle },\n    {\n        id: EVENT_REPORT,\n        title: itemTypeMap[EVENT_REPORT].pluralTitle,\n    },\n    {\n        id: EVENT_CHART,\n        title: itemTypeMap[EVENT_CHART].pluralTitle,\n    },\n    {\n        id: USERS,\n        title: itemTypeMap[USERS].pluralTitle,\n    },\n    {\n        id: REPORTS,\n        title: itemTypeMap[REPORTS].pluralTitle,\n    },\n    {\n        id: RESOURCES,\n        title: itemTypeMap[RESOURCES].pluralTitle,\n    },\n    { id: APP, title: itemTypeMap[APP].pluralTitle },\n];\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport Divider from 'material-ui/Divider';\nimport { List, ListItem } from 'material-ui/List';\nimport Button from 'd2-ui/lib/button/Button';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport { tAddListItemContent } from './actions';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\nimport { sGetEditDashboardRoot } from '../../reducers/editDashboard';\nimport {\n    getItemUrl,\n    getItemIcon,\n    APP,\n    CHART,\n    EVENT_CHART,\n    REPORT_TABLE,\n    EVENT_REPORT,\n    MAP,\n    REPORTS,\n    RESOURCES,\n    USERS,\n} from '../../modules/itemTypes';\nimport { colors } from '../../modules/colors';\n\nclass ItemSelectList extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seeMore: false,\n        };\n    }\n\n    addItem = item => () => {\n        const {\n            type,\n            dashboardId,\n            acAddDashboardItem,\n            tAddListItemContent,\n        } = this.props;\n\n        const newItem = {\n            id: item.id,\n            name: item.displayName || item.name,\n        };\n\n        // special handling for ListItem types\n        if (type.match(/(REPORTS|RESOURCES|USERS)/)) {\n            tAddListItemContent(dashboardId, type, newItem);\n        } else if (type === APP) {\n            acAddDashboardItem({ type, content: item.key });\n        } else {\n            acAddDashboardItem({ type, content: newItem });\n        }\n    };\n\n    toggleSeeMore = () => {\n        this.setState({ seeMore: !this.state.seeMore });\n\n        this.props.onChangeItemsLimit(this.props.type);\n    };\n\n    render() {\n        return (\n            <Fragment>\n                <div\n                    style={{\n                        display: 'flex',\n                        justifyContent: 'space-between',\n                        paddingLeft: '16px',\n                    }}\n                >\n                    <h3>{this.props.title}</h3>\n                    <Button\n                        color=\"primary\"\n                        style={{ textTransform: 'uppercase' }}\n                        onClick={this.toggleSeeMore}\n                    >\n                        {`${i18n.t('See')} ${\n                            this.state.seeMore\n                                ? i18n.t('fewer')\n                                : i18n.t('more')\n                        } ${this.props.title}`}\n                    </Button>\n                </div>\n                <Divider />\n                <List>\n                    {this.props.items.map(item => {\n                        const itemUrl = getItemUrl(\n                            this.props.type,\n                            item,\n                            this.context.d2\n                        );\n\n                        const ItemIcon = getItemIcon(this.props.type);\n\n                        return (\n                            <ListItem // apps don't have item.id\n                                key={item.id || item.key}\n                                leftIcon={\n                                    <ItemIcon\n                                        style={{\n                                            margin: '6px',\n                                            fill: colors.muiDefaultGrey,\n                                        }}\n                                    />\n                                }\n                                innerDivStyle={{ padding: '0px 0px 0px 42px' }}\n                                hoverColor=\"transparent\"\n                                primaryText={\n                                    <p\n                                        style={{\n                                            display: 'flex',\n                                            alignItems: 'center',\n                                            justifyContent: 'flex-start',\n                                            margin: 0,\n                                        }}\n                                    >\n                                        {item.displayName || item.name}\n                                        <Button\n                                            color=\"primary\"\n                                            onClick={this.addItem(item)}\n                                            style={{\n                                                marginLeft: '5px',\n                                                marginRight: '5px',\n                                            }}\n                                        >\n                                            + ADD\n                                        </Button>\n                                        {itemUrl && (\n                                            <a\n                                                target=\"_blank\"\n                                                rel=\"noopener noreferrer\"\n                                                href={itemUrl}\n                                                style={{ display: 'flex' }}\n                                            >\n                                                <LaunchIcon\n                                                    style={{\n                                                        width: '16px',\n                                                        height: '16px',\n                                                        fill:\n                                                            colors.muiDefaultGrey,\n                                                    }}\n                                                />\n                                            </a>\n                                        )}\n                                    </p>\n                                }\n                            />\n                        );\n                    })}\n                </List>\n            </Fragment>\n        );\n    }\n}\n\nItemSelectList.propTypes = {\n    type: PropTypes.oneOf([\n        APP,\n        CHART,\n        EVENT_CHART,\n        REPORT_TABLE,\n        EVENT_REPORT,\n        MAP,\n        REPORTS,\n        RESOURCES,\n        USERS,\n    ]).isRequired,\n    title: PropTypes.string.isRequired,\n    items: PropTypes.array.isRequired,\n    onChangeItemsLimit: PropTypes.func.isRequired,\n};\n\nItemSelectList.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nexport default connect(\n    state => ({\n        dashboardId: sGetEditDashboardRoot(state).id,\n    }),\n    {\n        acAddDashboardItem,\n        tAddListItemContent,\n    }\n)(ItemSelectList);\n","import { sGetEditDashboardRoot } from '../../reducers/editDashboard';\nimport { itemTypeMap } from '../../modules/itemTypes';\nimport {\n    acAddDashboardItem,\n    acUpdateDashboardItem,\n} from '../../actions/editDashboard';\n\nexport const tAddListItemContent = (dashboardId, type, content) => (\n    dispatch,\n    getState\n) => {\n    const state = getState();\n    const listItemType = itemTypeMap[type].propName;\n    const dashboardItems = sGetEditDashboardRoot(state).dashboardItems;\n    const dashboardItemIndex = dashboardItems.findIndex(\n        item => item.type === type\n    );\n    let dashboardItem;\n\n    // Reports/Resources/Users dashboard item type already present in dashboard\n    if (dashboardItemIndex > -1) {\n        dashboardItem = dashboardItems[dashboardItemIndex];\n        dashboardItem[listItemType].push(content);\n\n        dispatch(acUpdateDashboardItem(dashboardItem));\n    } else {\n        dashboardItem = {\n            type: type,\n            content: [content],\n        };\n\n        dispatch(acAddDashboardItem(dashboardItem));\n    }\n};\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport Divider from 'material-ui/Divider';\nimport { List, ListItem } from 'material-ui/List';\nimport Button from 'd2-ui/lib/button/Button';\nimport { getItemIcon } from '../../modules/itemTypes';\n\nimport { acAddDashboardItem } from '../../actions/editDashboard';\n\nconst SingleItem = ({ item, onAddToDashboard }) => {\n    const ItemIcon = getItemIcon(item.type);\n    return (\n        <ListItem\n            key={item.type}\n            leftIcon={<ItemIcon style={{ margin: '6px' }} />}\n            innerDivStyle={{ padding: '0px 0px 0px 42px' }}\n            hoverColor=\"transparent\"\n            primaryText={\n                <p\n                    style={{\n                        display: 'flex',\n                        alignItems: 'center',\n                        justifyContent: 'flex-start',\n                        margin: 0,\n                    }}\n                >\n                    {item.name}\n                    <Button\n                        color=\"primary\"\n                        onClick={onAddToDashboard}\n                        style={{\n                            marginLeft: '5px',\n                            marginRight: '5px',\n                        }}\n                    >\n                        + ADD\n                    </Button>\n                </p>\n            }\n        />\n    );\n};\n\nconst ItemSelectSingle = ({ acAddDashboardItem, category }) => {\n    const addToDashboard = ({ type, content }) => () => {\n        acAddDashboardItem({ type, content });\n    };\n\n    return (\n        <Fragment>\n            <div\n                style={{\n                    display: 'flex',\n                    justifyContent: 'space-between',\n                    paddingLeft: '16px',\n                }}\n            >\n                <h3>{category.header}</h3>\n            </div>\n            <Divider />\n            <List>\n                {category.items.map(item => (\n                    <SingleItem\n                        key={item.type}\n                        item={item}\n                        onAddToDashboard={addToDashboard(item)}\n                    />\n                ))}\n            </List>\n        </Fragment>\n    );\n};\n\nexport default connect(\n    null,\n    { acAddDashboardItem }\n)(ItemSelectSingle);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport Popover from '@material-ui/core/Popover';\nimport SearchIcon from '@material-ui/icons/Search';\nimport TextField from 'material-ui/TextField';\n\nimport { singleItems, listItems } from './selectableItems';\nimport { itemTypeMap } from '../../modules/itemTypes';\nimport ItemSelectList from './ItemSelectList';\nimport ItemSelectSingle from './ItemSelectSingle';\nimport { colors } from '../../modules/colors';\n\nimport './ItemSelect.css';\n\nconst styles = {\n    filterField: {\n        fontSize: '14px',\n        height: '30px',\n        marginLeft: '10px',\n    },\n    filterFieldInput: {\n        top: '-9px',\n        left: '1px',\n    },\n    filterFieldUnderline: {\n        bottom: '10px',\n    },\n    filterFieldUnderlineFocus: {\n        borderColor: '#aaa',\n        borderWidth: '1px',\n    },\n    searchIcon: {\n        fill: colors.muiDefaultGrey,\n    },\n};\n\nconst ItemSearchField = props => (\n    <div style={{ display: 'flex', alignItems: 'baseline' }}>\n        <SearchIcon style={styles.searchIcon} />\n        <TextField\n            hintText={i18n.t('Search for items to add to this dashboard')}\n            fullWidth={true}\n            value={props.value}\n            onClick={props.onClick}\n            onChange={props.onChange}\n            style={styles.filterField}\n            inputStyle={styles.filterFieldInput}\n            hintStyle={styles.filterFieldHint}\n            underlineStyle={styles.filterFieldUnderline}\n            underlineFocusStyle={styles.filterFieldUnderlineFocus}\n        />\n    </div>\n);\n\nclass ItemSelect extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n            open: false,\n            maxOptions: new Set(),\n            items: undefined,\n            filter: '',\n        };\n    }\n\n    closeList = () => {\n        this.setState({ open: false, filter: '' });\n    };\n\n    openList = event => {\n        this.fetchItems();\n\n        this.setState({\n            anchorEl: event.currentTarget,\n            open: true,\n        });\n    };\n\n    setFilter = event => {\n        this.setState({ filter: event.target.value }, this.fetchItems);\n    };\n\n    getListItems = items => {\n        return listItems.map(type => {\n            const itemType = itemTypeMap[type.id];\n\n            if (items && items[itemType.countName] > 0) {\n                return (\n                    <ItemSelectList\n                        key={type.id}\n                        type={type.id}\n                        title={type.title}\n                        items={items[itemType.endPointName]}\n                        onChangeItemsLimit={this.fetchItems}\n                    />\n                );\n            } else {\n                return null;\n            }\n        });\n    };\n\n    popoverChildren = items => {\n        const SingleItems = singleItems.map(category => (\n            <ItemSelectSingle key={category.id} category={category} />\n        ));\n        const ListItems = this.getListItems(items);\n\n        return ListItems.concat(SingleItems);\n    };\n\n    fetchItems = async maxOption => {\n        const api = this.context.d2.Api.getApi();\n\n        let queryString;\n\n        if (maxOption) {\n            const maxOptions = this.state.maxOptions;\n\n            if (maxOptions.has(maxOption)) {\n                maxOptions.delete(maxOption);\n            } else {\n                maxOptions.add(maxOption);\n            }\n\n            this.setState({\n                maxOptions,\n            });\n        } else {\n            this.setState({\n                maxOptions: new Set(),\n            });\n        }\n\n        if ([...this.state.maxOptions.values()].length) {\n            queryString =\n                'max=' + [...this.state.maxOptions.values()].join('&max=');\n        }\n\n        api.get(\n            `dashboards/q/${this.state.filter || ''}${\n                queryString ? `?${queryString}` : ''\n            }`\n        )\n            .then(response => {\n                this.setState({ items: response });\n            })\n            .catch(console.error);\n    };\n\n    render() {\n        return (\n            <Fragment>\n                <ItemSearchField\n                    value={this.state.filter}\n                    onClick={this.openList}\n                    onChange={this.setFilter}\n                />\n                <Popover\n                    className=\"dashboard-item-select\"\n                    open={this.state.open}\n                    onClose={this.closeList}\n                    anchorEl={this.state.anchorEl}\n                    anchorOrigin={{ horizontal: 'left', vertical: 'bottom' }}\n                    transformOrigin={{ horizontal: 'left', vertical: 'top' }}\n                    style={{ height: '70vh' }}\n                    PaperProps={{ style: { width: '700px' } }}\n                >\n                    {this.popoverChildren(this.state.items)}\n                </Popover>\n            </Fragment>\n        );\n    }\n}\n\nItemSelect.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nexport default ItemSelect;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport i18n from '@dhis2/d2-i18n';\nimport TextField from 'd2-ui/lib/text-field/TextField';\n\nimport {\n    acSetDashboardTitle,\n    acSetDashboardDescription,\n} from '../../actions/editDashboard';\nimport { orObject } from '../../modules/util';\nimport { sGetEditDashboardRoot } from '../../reducers/editDashboard';\nimport { sGetDashboardById } from '../../reducers/dashboards';\nimport ItemSelect from '../ItemSelect/ItemSelect';\n\nconst styles = {\n    section: { display: 'flex', justifyContent: 'space-between' },\n    titleDescription: {\n        flex: '3',\n        marginRight: '20px',\n    },\n    title: { padding: '6px 0' },\n    itemSelect: {\n        flex: '2',\n        minWidth: '300px',\n        maxWidth: '730px',\n        position: 'relative',\n        top: '33px',\n    },\n};\n\nexport const EditTitleBar = ({\n    name,\n    displayName,\n    description,\n    style,\n    onChangeTitle,\n    onChangeDescription,\n    classes,\n}) => {\n    const titleStyle = Object.assign({}, style.title, {\n        top: '-2px',\n    });\n\n    const translatedName = () => {\n        return displayName ? (\n            <span style={style.description}>\n                {i18n.t('Current translation')}: {displayName}\n            </span>\n        ) : null;\n    };\n\n    return (\n        <section className={classes.section}>\n            <div className={classes.titleDescription}>\n                <span>{i18n.t('Currently editing')}</span>\n                <div className={classes.title}>\n                    <TextField\n                        multiline\n                        fullWidth\n                        rows={1}\n                        rowsMax={3}\n                        style={titleStyle}\n                        value={name}\n                        placeholder={i18n.t('Add title here')}\n                        onChange={onChangeTitle}\n                    />\n                    {translatedName()}\n                </div>\n                <TextField\n                    multiline\n                    fullWidth\n                    rows={1}\n                    rowsMax={3}\n                    style={style.description}\n                    value={description}\n                    placeholder={i18n.t('Add description here')}\n                    onChange={onChangeDescription}\n                />\n            </div>\n            <div className={classes.itemSelect}>\n                <ItemSelect />\n            </div>\n        </section>\n    );\n};\n\nconst mapStateToProps = state => {\n    const selectedDashboard = orObject(sGetEditDashboardRoot(state));\n    const displayName = orObject(sGetDashboardById(state, selectedDashboard.id))\n        .displayName;\n\n    return {\n        name: selectedDashboard.name,\n        displayName,\n        description: selectedDashboard.description,\n    };\n};\n\nconst mapDispatchToProps = {\n    onChangeTitle: acSetDashboardTitle,\n    onChangeDescription: acSetDashboardDescription,\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(EditTitleBar));\n\nEditTitleBar.propTypes = {\n    name: PropTypes.string,\n    displayName: PropTypes.string,\n    description: PropTypes.string,\n    onChangeTitle: PropTypes.func.isRequired,\n    onChangeDescription: PropTypes.func.isRequired,\n    style: PropTypes.object,\n};\n\nEditTitleBar.defaultProps = {\n    name: '',\n    displayName: '',\n    description: '',\n    style: {},\n};\n","import React from 'react';\nimport MuiFlatButton from 'material-ui/FlatButton';\nimport { colors } from '../modules/colors';\n\nconst defaultStyles = {\n    color: colors.royalBlue,\n    backgroundColor: 'transparent',\n    minWidth: '30px',\n};\n\nconst FlatButton = ({ onClick, children, style, disabled }) => {\n    const label = typeof children === 'string' ? children : null;\n    const classes = ['d2ui-flat-button', disabled ? 'disabled' : null].join(\n        ' '\n    );\n\n    const combinedStyle = Object.assign({}, defaultStyles, style);\n\n    return (\n        <MuiFlatButton\n            className={classes}\n            style={combinedStyle}\n            onClick={onClick}\n            label={label}\n            disabled={disabled}\n        >\n            {typeof children !== 'string' ? children : null}\n        </MuiFlatButton>\n    );\n};\n\nexport default FlatButton;\n","import React from 'react';\nimport RaisedButton from 'material-ui/RaisedButton';\n\nimport './PrimaryButton.css';\n\nconst PrimaryButton = props => {\n    const { onClick, children, disabled, style } = props;\n    const label = typeof children === 'string' ? children : null;\n    const classes = ['d2ui-primary-button', disabled ? 'disabled' : null].join(\n        ' '\n    );\n\n    return (\n        <RaisedButton\n            className={classes}\n            style={style}\n            primary={true}\n            onClick={onClick}\n            label={label}\n            disabled={disabled}\n        />\n    );\n};\n\nexport default PrimaryButton;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nconst styles = {\n    textLink: {\n        fontSize: '14px',\n        fontWeight: 400,\n        color: '#000',\n        cursor: 'pointer',\n    },\n    textLinkHover: {\n        color: '#666',\n    },\n};\n\nclass D2TextLink extends Component {\n    constructor(props) {\n        super(props);\n\n        this.onMouseOverHandle = this.onMouseOverHandle.bind(this);\n        this.onMouseOutHandle = this.onMouseOutHandle.bind(this);\n\n        const { style } = props;\n\n        this.state = Object.assign({}, styles.textLink, style);\n    }\n\n    onMouseOverHandle(event) {\n        event.preventDefault();\n\n        const { style, hoverStyle } = this.props;\n\n        this.setState({\n            ...styles.textLink,\n            ...styles.textLinkHover,\n            ...style,\n            ...hoverStyle,\n        });\n    }\n\n    onMouseOutHandle(event) {\n        event.preventDefault();\n\n        const { style } = this.props;\n\n        this.setState({\n            ...styles.textLink,\n            ...style,\n        });\n    }\n\n    render() {\n        const { text, onClick } = this.props;\n\n        return (\n            <span\n                style={this.state}\n                onClick={onClick}\n                onMouseOver={this.onMouseOverHandle}\n                onMouseOut={this.onMouseOutHandle}\n            >\n                {text}\n            </span>\n        );\n    }\n}\n\nD2TextLink.propTypes = {\n    text: PropTypes.string,\n    onClick: PropTypes.func,\n    style: PropTypes.object,\n    hoverStyle: PropTypes.object,\n};\n\nD2TextLink.defaultProps = {\n    text: '',\n    onClick: Function.prototype,\n    style: null,\n    hoverStyle: null,\n};\n\nexport default D2TextLink;\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport Dialog from 'material-ui/Dialog';\nimport { OrgUnitTreeMultipleRoots } from '@dhis2/d2-ui-org-unit-tree';\nimport InfoIcon from '@material-ui/icons/Info';\n\nimport FlatButton from '../../widgets/FlatButton';\nimport PrimaryButton from '../../widgets/PrimaryButton';\nimport { apiFetchOrgUnits } from '../../api/orgUnits';\nimport {\n    acSetItemFilter,\n    FILTER_USER_ORG_UNIT,\n} from '../../actions/itemFilter';\nimport { sGetItemFilterRoot } from '../../reducers/itemFilter';\nimport D2TextLink from '../../widgets/D2TextLink';\n\nconst styles = theme => ({\n    container: {\n        height: '500px',\n        overflowY: 'auto',\n        border: '1px solid #eee',\n        padding: '10px 7px',\n    },\n    infoIcon: {\n        fill: '#888',\n        position: 'relative',\n        top: '7px',\n        marginRight: '5px',\n    },\n});\n\nclass ItemFilter extends Component {\n    state = {\n        roots: [],\n        selected: [],\n    };\n\n    componentDidMount() {\n        apiFetchOrgUnits().then(roots => {\n            this.setState({ roots });\n        });\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setState({ selected: nextProps.selected });\n    }\n\n    onSelectOrgUnit = (e, orgUnit) => {\n        let selected;\n\n        if (this.state.selected.includes(orgUnit.path)) {\n            selected = this.state.selected.filter(ou => ou !== orgUnit.path);\n        } else {\n            selected = this.state.selected.concat(orgUnit.path);\n        }\n\n        this.setState({ selected });\n    };\n\n    onDeselectAll = () => {\n        this.setState({\n            selected: [],\n        });\n    };\n\n    onSubmit = () => {\n        this.props.acSetItemFilter(FILTER_USER_ORG_UNIT, this.state.selected);\n        this.props.onRequestClose();\n    };\n\n    renderOrgUnitTree = classes => {\n        return (\n            <Fragment>\n                <div\n                    style={{\n                        fontSize: '13px',\n                        marginTop: '5px',\n                        marginBottom: '16px',\n                    }}\n                >\n                    <InfoIcon className={classes.infoIcon} />\n                    Filtering only applies to favorites with \"User org units\"\n                    set\n                </div>\n                <div className={classes.container}>\n                    <div style={{ padding: '1px 0 12px 6px' }}>\n                        <D2TextLink\n                            text=\"Deselect all\"\n                            onClick={this.onDeselectAll}\n                            style={{ color: '#006ed3' }}\n                            hoverStyle={{ color: '#3399f8' }}\n                        />\n                    </div>\n                    <OrgUnitTreeMultipleRoots\n                        roots={this.state.roots}\n                        selected={this.state.selected}\n                        onSelectClick={this.onSelectOrgUnit}\n                        hideCheckboxes\n                    />\n                </div>\n            </Fragment>\n        );\n    };\n\n    render() {\n        const actions = [\n            <FlatButton onClick={this.props.onRequestClose}>Cancel</FlatButton>,\n            <PrimaryButton onClick={this.onSubmit}>Save</PrimaryButton>,\n        ];\n\n        return (\n            <Dialog\n                title=\"Organisation unit filter\"\n                actions={actions}\n                modal={false}\n                open={this.props.open}\n                onRequestClose={this.props.onRequestClose}\n            >\n                {this.renderOrgUnitTree(this.props.classes)}\n            </Dialog>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    selected: sGetItemFilterRoot(state)[FILTER_USER_ORG_UNIT] || [],\n});\n\nexport default connect(\n    mapStateToProps,\n    { acSetItemFilter }\n)(withStyles(styles)(ItemFilter));\n","import { getInstance } from 'd2';\n\nexport const apiFetchOrgUnits = () => {\n    return getInstance().then(d2 => {\n        return d2.models.organisationUnits\n            .list({\n                paging: false,\n                fields: 'id,path,displayName,children::isNotEmpty',\n                userDataViewFallback: true,\n            })\n            .then(rootLevel => {\n                const rootList = rootLevel.toArray();\n                const roots = rootList.length > 1 ? rootList : [rootList[0]];\n\n                return roots;\n            });\n    });\n};\n","import React, { Component } from 'react';\nimport InfoOutlineIcon from '@material-ui/icons/InfoOutlined';\nimport { colors } from '../../modules/colors';\n\nclass Info extends Component {\n    show = false;\n\n    toggle() {\n        this.show = !this.show;\n        return this.show;\n    }\n\n    render() {\n        return (\n            <div onClick={() => this.props.onClick(this.toggle())}>\n                <InfoOutlineIcon style={{ fill: colors.muiDefaultGrey }} />\n            </div>\n        );\n    }\n}\n\nexport default Info;\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport SharingDialog from '@dhis2/d2-ui-sharing-dialog';\nimport Star from '@material-ui/icons/Star';\nimport StarBorder from '@material-ui/icons/StarBorder';\n\nimport { orObject } from '../../modules/util';\nimport { tStarDashboard } from '../../actions/dashboards';\nimport { acSetSelectedShowDescription } from '../../actions/selected';\nimport FilterDialog from '../ItemFilter/ItemFilter';\nimport FlatButton from '../../widgets/FlatButton';\nimport Info from './Info';\nimport {\n    sGetSelectedId,\n    sGetSelectedShowDescription,\n} from '../../reducers/selected';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n} from '../../reducers/dashboards';\nimport { sGetFilterKeys } from '../../reducers/itemFilter';\nimport { colors } from '../../modules/colors';\n\nconst NO_DESCRIPTION = i18n.t('No description');\n\nconst styles = {\n    actions: {\n        display: 'flex',\n        alignItems: 'center',\n        marginLeft: '20px',\n    },\n    starIcon: {\n        fill: colors.muiDefaultGrey,\n    },\n    textButton: {\n        minWidth: '30px',\n        top: '1px',\n    },\n    editLink: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        textDecoration: 'none',\n    },\n    titleBar: {\n        display: 'flex',\n        alignItems: 'flex-start',\n    },\n    titleBarIcon: {\n        marginLeft: 5,\n        position: 'relative',\n        top: 1,\n        cursor: 'pointer',\n    },\n};\n\nclass ViewTitleBar extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            sharingDialogIsOpen: false,\n            filterDialogIsOpen: false,\n        };\n    }\n\n    toggleSharingDialog = () =>\n        this.setState({ sharingDialogIsOpen: !this.state.sharingDialogIsOpen });\n\n    toggleFilterDialog = () =>\n        this.setState({ filterDialogIsOpen: !this.state.filterDialogIsOpen });\n\n    renderItemFilterLabel = () => {\n        const len = this.props.itemFilterKeys.length;\n\n        return len ? (\n            <span\n                onClick={this.toggleFilterDialog}\n                style={{\n                    marginLeft: '20px',\n                    cursor: 'pointer',\n                    color: colors.white,\n                    fontWeight: 500,\n                    backgroundColor: '#444',\n                    padding: '6px 8px',\n                    borderRadius: '3px',\n                    position: 'relative',\n                    top: '1px',\n                }}\n            >\n                {len} {len > 1 ? 'filters' : 'filter'} applied\n            </span>\n        ) : (\n            ''\n        );\n    };\n\n    render() {\n        const {\n            id,\n            name,\n            description,\n            access,\n            style,\n            showDescription,\n            starred,\n            onStarClick,\n            onInfoClick,\n            classes,\n        } = this.props;\n\n        const titleStyle = Object.assign({}, style.title, {\n            cursor: 'default',\n            userSelect: 'text',\n            top: '7px',\n        });\n\n        const StarIcon = starred ? Star : StarBorder;\n\n        return (\n            <Fragment>\n                <div className={classes.titleBar}>\n                    <span style={titleStyle}>{name}</span>\n                    <div className={classes.actions}>\n                        <div\n                            className={classes.titleBarIcon}\n                            onClick={onStarClick}\n                        >\n                            <StarIcon className={classes.starIcon} />\n                        </div>\n                        <div className={classes.titleBarIcon}>\n                            <Info onClick={onInfoClick} />\n                        </div>\n                        <span style={{ marginLeft: '10px' }}>\n                            {access.update ? (\n                                <Link\n                                    className={classes.editLink}\n                                    to={`/${id}/edit`}\n                                >\n                                    <FlatButton className={classes.textButton}>\n                                        Edit\n                                    </FlatButton>\n                                </Link>\n                            ) : null}\n\n                            {access.manage ? (\n                                <FlatButton\n                                    className={classes.textButton}\n                                    onClick={this.toggleSharingDialog}\n                                >\n                                    Share\n                                </FlatButton>\n                            ) : null}\n                            <FlatButton\n                                className={classes.textButton}\n                                onClick={this.toggleFilterDialog}\n                            >\n                                Filter\n                            </FlatButton>\n                            {this.renderItemFilterLabel()}\n                        </span>\n                    </div>\n                </div>\n                {showDescription ? (\n                    <div\n                        className=\"dashboard-description\"\n                        style={Object.assign(\n                            { paddingTop: '5px', paddingBottom: '5px' },\n                            style.description,\n                            !description ? { color: '#888' } : {}\n                        )}\n                    >\n                        {description || NO_DESCRIPTION}\n                    </div>\n                ) : null}\n                {id ? (\n                    <SharingDialog\n                        d2={this.context.d2}\n                        id={id}\n                        type=\"dashboard\"\n                        open={this.state.sharingDialogIsOpen}\n                        onRequestClose={this.toggleSharingDialog}\n                    />\n                ) : null}\n                {id ? (\n                    <FilterDialog\n                        open={this.state.filterDialogIsOpen}\n                        onRequestClose={this.toggleFilterDialog}\n                    />\n                ) : null}\n            </Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    const id = sGetSelectedId(state);\n    const dashboard = orObject(sGetDashboardById(state, id));\n\n    return {\n        id,\n        name: dashboard.displayName,\n        description: dashboard.displayDescription,\n        dashboardItems: sGetDashboardItems(state),\n        showDescription: sGetSelectedShowDescription(state),\n        starred: dashboard.starred,\n        access: orObject(dashboard.access),\n        itemFilterKeys: sGetFilterKeys(state),\n    };\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const { id, starred, showDescription } = stateProps;\n    const { dispatch } = dispatchProps;\n\n    return {\n        ...stateProps,\n        ...ownProps,\n        onStarClick: () => dispatch(tStarDashboard(id, !starred)),\n        onInfoClick: () =>\n            dispatch(acSetSelectedShowDescription(!showDescription)),\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    null,\n    mergeProps\n)(withStyles(styles)(ViewTitleBar));\n\nViewTitleBar.propTypes = {\n    id: PropTypes.string,\n    name: PropTypes.string,\n    description: PropTypes.string,\n    starred: PropTypes.bool,\n    showDescription: PropTypes.bool,\n    onInfoClick: PropTypes.func,\n};\n\nViewTitleBar.defaultProps = {\n    name: '',\n    description: '',\n    starred: false,\n    showDescription: false,\n    onInfoClick: null,\n};\n\nViewTitleBar.contextTypes = {\n    d2: PropTypes.object,\n};\n","import React from 'react';\n\nimport { colors } from '../../modules/colors';\nimport EditTitleBar from './EditTitleBar';\nimport ViewTitleBar from './ViewTitleBar';\n\nimport './TitleBar.css';\n\nconst style = {\n    title: {\n        position: 'relative',\n        fontSize: 21,\n        fontWeight: 500,\n        color: colors.black,\n        minWidth: 50,\n    },\n    description: {\n        fontSize: 14,\n        color: colors.darkGrey,\n    },\n};\n\nconst TitleBar = ({ edit }) => {\n    return (\n        <div\n            className=\"titlebar-wrapper\"\n            style={{\n                padding: '20px 15px 5px 10px',\n            }}\n        >\n            {edit ? (\n                <EditTitleBar style={style} />\n            ) : (\n                <ViewTitleBar style={style} />\n            )}\n        </div>\n    );\n};\n\nexport default TitleBar;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\n\nimport * as pluginManager from './plugin';\nimport { getBaseUrl, orObject } from '../../../modules/util';\nimport { getGridItemDomId } from '../../ItemGrid/gridUtil';\nimport { getPlugin } from '../../../modules/itemTypes';\n\nconst pluginCredentials = d2 => {\n    return {\n        baseUrl: getBaseUrl(d2),\n        auth: d2.Api.getApi().defaultHeaders.Authorization,\n    };\n};\n\nclass DefaultPlugin extends Component {\n    pluginCredentials = null;\n\n    constructor(props, context) {\n        super(props);\n\n        this.d2 = context.d2;\n    }\n\n    shouldPluginReload = prevProps => {\n        // TODO - fix this hack, to handle bug with multiple\n        // rerendering while switching between dashboards.\n        //\n        // To determine if the rendering is happening because of a\n        // dashboard switch, check if the item reference has changed.\n        const reloadAllowed = this.props.item === prevProps.item;\n\n        const filterChanged = prevProps.itemFilter !== this.props.itemFilter;\n        const vis = orObject(this.props.visualization);\n        const prevVis = orObject(prevProps.visualization);\n        const visChanged =\n            vis.id !== prevVis.id || vis.activeType !== prevVis.activeType;\n\n        return reloadAllowed && (visChanged || filterChanged);\n    };\n\n    reloadPlugin = prevProps => {\n        if (\n            pluginManager.pluginIsAvailable(\n                this.props.item,\n                this.props.visualization\n            ) &&\n            this.shouldPluginReload(prevProps)\n        ) {\n            const prevVis = orObject(prevProps.visualization);\n            const currentVis = this.props.visualization;\n\n            const useActiveType =\n                currentVis.activeType !== prevVis.activeType ||\n                currentVis.activeType !== this.props.item.type;\n\n            if (\n                useActiveType ||\n                this.props.itemFilter !== prevProps.itemFilter\n            ) {\n                pluginManager.unmount(\n                    this.props.item,\n                    prevVis.activeType || this.props.item.type\n                );\n\n                pluginManager.loadPlugin(\n                    getPlugin(this.props.activeType),\n                    this.props.visualization,\n                    this.pluginCredentials\n                );\n            }\n        }\n    };\n\n    componentDidMount() {\n        this.pluginCredentials = pluginCredentials(this.d2);\n\n        if (\n            pluginManager.pluginIsAvailable(\n                this.props.item,\n                this.props.visualization\n            )\n        ) {\n            pluginManager.loadPlugin(\n                getPlugin(this.props.activeType),\n                this.props.visualization,\n                this.pluginCredentials\n            );\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        this.reloadPlugin(prevProps);\n    }\n\n    onSelectVisualization = activeType => {\n        // Cancel request if type is already active\n        if (activeType === this.props.activeType) {\n            return;\n        }\n\n        pluginManager.unmount(\n            this.props.item,\n            this.props.visualization.activeType || this.props.item.type\n        );\n\n        this.props.onSelectVisualization(\n            this.props.visualization.id,\n            this.props.item.type,\n            activeType\n        );\n    };\n\n    render() {\n        const { classes, item, visualization, style } = this.props;\n        const pluginIsAvailable = pluginManager.pluginIsAvailable(\n            item,\n            visualization\n        );\n\n        return pluginIsAvailable ? (\n            <div id={getGridItemDomId(item.id)} style={style} />\n        ) : (\n            <div className={classes.textDiv}>\n                {i18n.t('Unable to load the plugin for this item')}\n            </div>\n        );\n    }\n}\n\nDefaultPlugin.contextTypes = {\n    d2: PropTypes.object,\n};\n\nDefaultPlugin.propTypes = {\n    style: PropTypes.object,\n    item: PropTypes.object,\n    itemFilter: PropTypes.object,\n    visualization: PropTypes.object,\n    activeType: PropTypes.string.isRequired,\n};\n\nDefaultPlugin.defaultProps = {\n    style: {},\n    item: {},\n    itemFilter: {},\n    visualization: {},\n};\n\nexport default DefaultPlugin;\n","import React from 'react';\n\nexport const HEADER_HEIGHT = 45;\n\nconst ItemHeader = props => {\n    const { title, actionButtons, editMode } = props;\n\n    return (\n        <div className=\"dashboard-item-header\">\n            <div\n                className=\"dashboard-item-header-title\"\n                style={{ userSelect: editMode ? 'none' : 'text' }}\n            >\n                {title}\n            </div>\n            {actionButtons}\n        </div>\n    );\n};\n\nexport default ItemHeader;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { colors } from '../../../modules/colors';\nimport { getId } from './plugin';\nimport InterpretationsComponent from '@dhis2/d2-ui-interpretations';\n\nconst style = {\n    scrollContainer: {\n        overflowY: 'auto',\n        height: '340px',\n    },\n    line: {\n        margin: '-1px 0px 0px',\n        height: '1px',\n        border: 'none',\n        backgroundColor: colors.lightGrey,\n    },\n};\n\nclass ItemFooter extends Component {\n    render() {\n        const objectId = getId(this.props.item);\n\n        return (\n            <div className=\"dashboard-item-footer\">\n                <hr style={style.line} />\n                <div style={style.scrollContainer}>\n                    <InterpretationsComponent\n                        d2={this.context.d2}\n                        item={this.props.item}\n                        type={this.props.item.type.toLowerCase()}\n                        id={objectId}\n                        appName=\"dashboard\"\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nItemFooter.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nItemFooter.propTypes = {\n    item: PropTypes.object.isRequired,\n};\n\nexport default ItemFooter;\n","import React from 'react';\n\nimport './ItemHeaderButton.css';\n\nconst ItemHeaderButton = ({ disabled, onClick, children, style }) => {\n    return (\n        <button\n            disabled={disabled}\n            type=\"button\"\n            className=\"item-action-button\"\n            style={style}\n            onClick={onClick}\n        >\n            {children}\n        </button>\n    );\n};\n\nexport default ItemHeaderButton;\n","import React, { Component, Fragment } from 'react';\nimport MessageIcon from '@material-ui/icons/Message';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\n\nimport { extractFavorite } from './plugin';\nimport ItemHeaderButton from '../ItemHeaderButton';\nimport {\n    VISUALIZATION_TYPE_TABLE,\n    VISUALIZATION_TYPE_CHART,\n    VISUALIZATION_TYPE_MAP,\n    itemTypeMap,\n    CHART,\n    MAP,\n    REPORT_TABLE,\n    EVENT_CHART,\n    EVENT_REPORT,\n    DOMAIN_TYPE_AGGREGATE,\n} from '../../../modules/itemTypes';\nimport { colors } from '../../../modules/colors';\n\nconst style = {\n    iconBase: {\n        width: '24px',\n        height: '24px',\n        fill: colors.lightMediumGrey,\n    },\n    buttonBase: {\n        padding: '5px 6px 3px 6px',\n    },\n    buttonDisabled: {\n        padding: '5px 6px 3px 6px',\n        opacity: 0.5,\n        cursor: 'unset',\n    },\n    toggleFooterPadding: {\n        padding: '7px 6px 1px 6px',\n    },\n    border: {\n        borderRadius: '2px',\n        border: `1px solid ${colors.lightGrey}`,\n    },\n};\n\nconst baseStyle = {\n    icon: style.iconBase,\n    container: style.buttonBase,\n};\n\nconst disabledStyle = {\n    icon: style.iconBase,\n    container: style.buttonDisabled,\n};\n\nconst activeStyle = {\n    icon: { ...style.iconBase, fill: colors.royalBlue },\n    container: {\n        ...style.buttonBase,\n        backgroundColor: colors.lightBlue,\n    },\n};\n\nconst inactiveStyle = disabled => (disabled ? disabledStyle : baseStyle);\n\nconst tableBtnStyle = (activeType, disabled) =>\n    [REPORT_TABLE, EVENT_REPORT].includes(activeType)\n        ? activeStyle\n        : inactiveStyle(disabled);\n\nconst chartBtnStyle = (activeType, disabled) =>\n    [CHART, EVENT_CHART].includes(activeType)\n        ? activeStyle\n        : inactiveStyle(disabled);\n\nconst mapBtnStyle = (activeType, disabled) =>\n    [MAP].includes(activeType) ? activeStyle : inactiveStyle(disabled);\n\nexport const getItemTypeId = (itemTypeMap, visualizationType, domainType) => {\n    const item = Object.values(itemTypeMap).find(\n        item =>\n            item.visualizationType === visualizationType &&\n            item.domainType === domainType\n    );\n    return item.id;\n};\n\nclass VisualizationItemHeaderButtons extends Component {\n    render() {\n        const {\n            item,\n            onSelectVisualization,\n            activeFooter,\n            activeType,\n            onToggleFooter,\n        } = this.props;\n\n        const domainType = itemTypeMap[item.type].domainType;\n\n        const onViewTable = () =>\n            onSelectVisualization(\n                getItemTypeId(itemTypeMap, VISUALIZATION_TYPE_TABLE, domainType)\n            );\n\n        const onViewChart = () =>\n            onSelectVisualization(\n                getItemTypeId(itemTypeMap, VISUALIZATION_TYPE_CHART, domainType)\n            );\n\n        const onViewMap = () =>\n            onSelectVisualization(\n                getItemTypeId(itemTypeMap, VISUALIZATION_TYPE_MAP, domainType)\n            );\n\n        const toggleFooterBase = activeFooter ? activeStyle : baseStyle;\n\n        const toggleFooter = {\n            ...toggleFooterBase,\n            container: {\n                ...toggleFooterBase.container,\n                ...style.toggleFooterPadding,\n                ...style.border,\n            },\n        };\n\n        // disable toggle buttons\n        let disabled = false;\n\n        if (item.type === VISUALIZATION_TYPE_CHART) {\n            if (extractFavorite(item).type.match(/^YEAR_OVER_YEAR/)) {\n                disabled = true;\n            }\n        }\n\n        const tableButtonStyle = tableBtnStyle(activeType, disabled);\n        const chartButtonStyle = chartBtnStyle(activeType, disabled);\n        const mapButtonStyle = mapBtnStyle(activeType, disabled);\n\n        return (\n            <Fragment>\n                <div style={{ marginRight: 10 }}>\n                    <ItemHeaderButton\n                        style={toggleFooter.container}\n                        onClick={onToggleFooter}\n                    >\n                        <MessageIcon style={toggleFooter.icon} />\n                    </ItemHeaderButton>\n                </div>\n                <div style={style.border}>\n                    <ItemHeaderButton\n                        disabled={disabled}\n                        style={tableButtonStyle.container}\n                        onClick={onViewTable}\n                    >\n                        <TableIcon style={tableButtonStyle.icon} />\n                    </ItemHeaderButton>\n                    <ItemHeaderButton\n                        disabled={disabled}\n                        style={chartButtonStyle.container}\n                        onClick={onViewChart}\n                    >\n                        <ChartIcon style={chartButtonStyle.icon} />\n                    </ItemHeaderButton>\n                    {domainType === DOMAIN_TYPE_AGGREGATE ? (\n                        <ItemHeaderButton\n                            disabled={disabled}\n                            style={mapButtonStyle.container}\n                            onClick={onViewMap}\n                        >\n                            <MapIcon style={mapButtonStyle.icon} />\n                        </ItemHeaderButton>\n                    ) : null}\n                </div>\n            </Fragment>\n        );\n    }\n}\n\nexport default VisualizationItemHeaderButtons;\n","// Note that this ignores discrepancies in 'this', so shouldn't be used with bound functions\n// This is useful instead of lodash/memoize when we only need to memoize a single value\n// Inspiration: https://github.com/alexreardon/memoize-one\n\nconst memoizeOne = fn => {\n    let lastArgs = undefined;\n    let lastValue = undefined;\n\n    return (...args) => {\n        if (\n            lastArgs &&\n            args.length === lastArgs.length &&\n            args.every((arg, i) => arg === lastArgs[i])\n        ) {\n            return lastValue;\n        }\n        lastArgs = args;\n        lastValue = fn(...args);\n        return lastValue;\n    };\n};\n\nexport default memoizeOne;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport ChartPlugin from 'data-visualizer-plugin';\nimport i18n from '@dhis2/d2-i18n';\nimport uniqueId from 'lodash/uniqueId';\n\nimport DefaultPlugin from './DefaultPlugin';\nimport ItemHeader, { HEADER_HEIGHT } from '../ItemHeader';\nimport ItemFooter from './ItemFooter';\nimport VisualizationItemHeaderButtons from './ItemHeaderButtons';\nimport * as pluginManager from './plugin';\nimport { sGetVisualization } from '../../../reducers/visualizations';\nimport { sGetItemFilterRoot } from '../../../reducers/itemFilter';\nimport {\n    acReceivedVisualization,\n    acReceivedActiveVisualization,\n} from '../../../actions/selected';\nimport { CHART, itemTypeMap } from '../../../modules/itemTypes';\nimport { colors } from '../../../modules/colors';\nimport memoizeOne from '../../../modules/memoizeOne';\n\nconst styles = {\n    icon: {\n        width: 16,\n        height: 16,\n        marginLeft: 3,\n        cursor: 'pointer',\n        fill: colors.muiDefaultGrey,\n    },\n    title: {\n        overflow: 'hidden',\n        maxWidth: '85%',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n    },\n    textDiv: {\n        fontSize: '14px',\n        fontStretch: 'normal',\n        padding: '10px',\n        lineHeight: '20px',\n    },\n};\n\nexport class Item extends Component {\n    state = {\n        showFooter: false,\n        configLoaded: false,\n    };\n\n    constructor(props, context) {\n        super(props);\n\n        this.d2 = context.d2;\n    }\n\n    async componentDidMount() {\n        this.props.onVisualizationLoaded(\n            await pluginManager.fetch(this.props.item, this.props.itemFilter)\n        );\n\n        this.setState({\n            configLoaded: true,\n        });\n    }\n\n    getUniqueKey = memoizeOne(() => uniqueId());\n\n    pluginCredentials = null;\n\n    onToggleFooter = () => {\n        this.setState(\n            { showFooter: !this.state.showFooter },\n            this.props.onToggleItemExpanded(this.props.item.id)\n        );\n    };\n\n    onSelectVisualization = activeType => {\n        // Cancel request if type is already active\n        if (activeType === this.getActiveType()) {\n            return;\n        }\n\n        pluginManager.unmount(this.props.item, this.getActiveType());\n\n        this.props.onSelectVisualization(\n            this.props.visualization.id,\n            this.props.item.type,\n            activeType\n        );\n    };\n\n    getActiveType = () =>\n        this.props.visualization.activeType || this.props.item.type;\n\n    pluginIsAvailable = () =>\n        pluginManager.pluginIsAvailable(\n            this.props.item,\n            this.props.visualization\n        );\n\n    getTitle = () => {\n        const { item, editMode, classes } = this.props;\n        const itemName = pluginManager.getName(item);\n\n        return (\n            <div style={{ display: 'flex', alignItems: 'center' }}>\n                <span className={classes.title} title={itemName}>\n                    {itemName}\n                </span>\n                {!editMode && this.pluginIsAvailable() ? (\n                    <a\n                        href={pluginManager.getLink(this.props.item, this.d2)}\n                        style={{ height: 16 }}\n                        title={`View in ${\n                            itemTypeMap[this.props.item.type].appName\n                        } app`}\n                    >\n                        <LaunchIcon className={classes.icon} />\n                    </a>\n                ) : null}\n            </div>\n        );\n    };\n\n    getConfig = () =>\n        pluginManager.getVisualizationConfig(\n            this.props.visualization,\n            this.props.item.type,\n            this.getActiveType()\n        );\n\n    getActionButtons = () =>\n        pluginManager.pluginIsAvailable(\n            this.props.item,\n            this.props.visualization\n        ) && !this.props.editMode ? (\n            <VisualizationItemHeaderButtons\n                item={this.props.item}\n                activeFooter={this.state.showFooter}\n                activeType={this.getActiveType()}\n                onSelectVisualization={this.onSelectVisualization}\n                onToggleFooter={this.onToggleFooter}\n            />\n        ) : null;\n\n    getContentStyle = () => {\n        const { item, editMode } = this.props;\n        const PADDING_BOTTOM = 4;\n        return !editMode\n            ? {\n                  height: item.originalHeight - HEADER_HEIGHT - PADDING_BOTTOM,\n              }\n            : null;\n    };\n\n    getPluginComponent = () => {\n        const config = this.getConfig();\n        const style = this.getContentStyle();\n        const activeType = this.getActiveType();\n        const { item, itemFilter, classes } = this.props;\n\n        if (config) {\n            return activeType === CHART ? (\n                <ChartPlugin\n                    d2={this.d2}\n                    config={config}\n                    filters={itemFilter}\n                    style={style}\n                />\n            ) : (\n                <DefaultPlugin\n                    activeType={activeType}\n                    item={item}\n                    style={style}\n                    visualization={config}\n                    itemFilter={itemFilter}\n                />\n            );\n        }\n\n        return (\n            <div className={classes.textDiv}>\n                {i18n.t('No data to display')}\n            </div>\n        );\n    };\n\n    render() {\n        const { item, editMode, itemFilter } = this.props;\n        const { showFooter } = this.state;\n\n        return (\n            <Fragment>\n                <ItemHeader\n                    title={this.getTitle()}\n                    actionButtons={this.getActionButtons()}\n                    editMode={editMode}\n                />\n                <div\n                    key={this.getUniqueKey(itemFilter)}\n                    className=\"dashboard-item-content\"\n                >\n                    {this.state.configLoaded && this.getPluginComponent()}\n                </div>\n                {!editMode && showFooter ? <ItemFooter item={item} /> : null}\n            </Fragment>\n        );\n    }\n}\n\nItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nItem.propTypes = {\n    item: PropTypes.object,\n    editMode: PropTypes.bool,\n    onToggleItemExpanded: PropTypes.func,\n    itemFilter: PropTypes.object,\n    visualization: PropTypes.object,\n};\n\nItem.defaultProps = {\n    item: {},\n    editMode: false,\n    onToggleItemExpanded: Function.prototype,\n    itemFilter: {},\n    visualization: {},\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n    itemFilter: sGetItemFilterRoot(state),\n    visualization: sGetVisualization(\n        state,\n        pluginManager.extractFavorite(ownProps.item).id\n    ),\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onVisualizationLoaded: visualization =>\n        dispatch(acReceivedVisualization(visualization)),\n    onSelectVisualization: (id, type, activeType) =>\n        dispatch(acReceivedActiveVisualization(id, type, activeType)),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(Item));\n","import React from 'react';\nimport { colors } from '../modules/colors';\n\nconst style = {\n    backgroundColor: colors.lightGrey,\n    border: 'none',\n    height: '1px',\n    margin: '0px 0px 5px 0px',\n};\n\nconst Line = props => <hr style={style} />;\n\nexport default Line;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\n\nimport { sGetMessagesRoot } from '../../../reducers/messages';\nimport { formatDate } from '../../../modules/util';\nimport { colors } from '../../../modules/colors';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nimport './MessagesItem.css';\n\nconst PRIVATE = 'PRIVATE';\n\nconst messageTypes = {\n    [PRIVATE]: 'Private',\n    VALIDATION_RESULT: 'Validation',\n    TICKET: 'Ticket',\n    SYSTEM: 'System',\n};\n\nconst style = {\n    list: {\n        listStyleType: 'none',\n        paddingLeft: '0px',\n    },\n    seeAll: {\n        textAlign: 'center',\n        fontSize: '13px',\n        marginBottom: '5px',\n    },\n    sender: {\n        fontSize: '13px',\n        lineHeight: '15px',\n        margin: 0,\n        color: colors.darkGrey,\n    },\n    snippet: {\n        color: colors.darkGrey,\n        fontSize: '13px',\n        lineHeight: '15px',\n        maxHeight: '30px',\n        overflow: 'hidden',\n    },\n};\n\nclass MessagesItem extends Component {\n    state = {\n        uiLocale: '',\n    };\n\n    async componentDidMount() {\n        const uiLocale = await this.context.d2.currentUser.userSettings.get(\n            'keyUiLocale'\n        );\n\n        this.setState({ uiLocale });\n    }\n\n    getMessageHref = msg => {\n        const msgIdentifier = msg ? `#/${msg.messageType}/${msg.id}` : '';\n        return `${this.context.baseUrl}/dhis-web-messaging/${msgIdentifier}`;\n    };\n\n    getMessageSender = msg => {\n        const latestMsg = msg.messages.slice(-1)[0];\n        return latestMsg.sender ? latestMsg.sender.displayName : '';\n    };\n\n    getMessageItems = () => {\n        const editClass = !this.props.editMode ? 'view' : null;\n\n        return this.props.messages.map(msg => {\n            const redirectToMsg = () => {\n                if (!this.props.editMode) {\n                    document.location.href = this.getMessageHref(msg);\n                }\n            };\n\n            const sender =\n                msg.messageType === PRIVATE\n                    ? this.getMessageSender(msg)\n                    : messageTypes[msg.messageType];\n\n            const readClass = !msg.read ? 'unread' : null;\n            const latestMsg = msg.messages.slice(-1)[0];\n            const msgDate = latestMsg.lastUpdated;\n\n            return (\n                <li\n                    className={`message-item ${editClass}`}\n                    key={msg.id}\n                    onClick={redirectToMsg}\n                >\n                    <p className={`message-title ${readClass}`}>\n                        {msg.displayName} ({msg.messageCount})\n                    </p>\n                    <p style={style.sender}>\n                        {sender} - {formatDate(msgDate, this.state.uiLocale)}\n                    </p>\n                    <p style={style.snippet}>{latestMsg.text}</p>\n                </li>\n            );\n        });\n    };\n\n    render() {\n        return (\n            <Fragment>\n                <ItemHeader title={i18n.t('Messages')} />\n                <Line />\n                {this.props.messages.length > 0 && (\n                    <div className=\"dashboard-item-content\">\n                        <ul style={style.list}>{this.getMessageItems()}</ul>\n                        <div style={style.seeAll}>\n                            <a href={this.getMessageHref()}>\n                                {i18n.t('See all messages')}\n                            </a>\n                        </div>\n                    </div>\n                )}\n            </Fragment>\n        );\n    }\n}\n\nMessagesItem.contextTypes = {\n    d2: PropTypes.object,\n    baseUrl: PropTypes.string,\n};\n\nconst mapStateToProps = state => {\n    return {\n        messages: Object.values(sGetMessagesRoot(state)),\n    };\n};\n\nconst MessagesContainer = connect(\n    mapStateToProps,\n    null\n)(MessagesItem);\n\nexport default MessagesContainer;\n","import React, { Fragment } from 'react';\nimport ItemHeader from '../ItemHeader';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nconst NotSupportedItem = props => (\n    <Fragment>\n        <ItemHeader title={`Item type not supported: ${props.item.type}`} />\n        <div\n            style={{\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center',\n                height: '90%',\n            }}\n        >\n            <NotInterestedIcon\n                style={{ width: 100, height: 100, align: 'center' }}\n                color=\"disabled\"\n            />\n        </div>\n    </Fragment>\n);\n\nexport default NotSupportedItem;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { List, ListItem as MUIListItem } from 'material-ui/List';\nimport IconButton from 'material-ui/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport Line from '../../../widgets/Line';\nimport {\n    itemTypeMap,\n    getItemUrl,\n    getItemIcon,\n} from '../../../modules/itemTypes';\nimport { orArray } from '../../../modules/util';\nimport { tRemoveListItemContent } from './actions';\nimport { colors } from '../../../modules/colors';\nimport ItemHeader from '../ItemHeader';\n\nconst getItemTitle = item => {\n    return itemTypeMap[item.type].pluralTitle;\n};\n\nconst getContentItems = item =>\n    orArray(item[itemTypeMap[item.type].propName]).filter(\n        (item, index, array) =>\n            array.findIndex(el => el.id === item.id) === index\n    );\n\nconst removeContent = (handler, item, contentToRemove) => () => {\n    handler(item, contentToRemove);\n};\n\nconst ListItem = (props, context) => {\n    const { item, editMode, tRemoveListItemContent } = props;\n\n    // avoid showing duplicates\n    const contentItems = getContentItems(item);\n\n    const primaryText = contentItem => {\n        const deleteButton = (\n            <IconButton\n                style={{\n                    verticalAlign: 'text-bottom',\n                    padding: '0 12px',\n                    height: 20,\n                }}\n                iconStyle={{\n                    width: 20,\n                    height: 20,\n                    fill: colors.red,\n                }}\n                onClick={removeContent(\n                    tRemoveListItemContent,\n                    item,\n                    contentItem\n                )}\n            >\n                <DeleteIcon />\n            </IconButton>\n        );\n\n        return (\n            <div>\n                <a\n                    style={{ textDecoration: 'none' }}\n                    href={getItemUrl(item.type, contentItem, context.d2)}\n                >\n                    {contentItem.name}\n                </a>\n                {editMode ? deleteButton : null}\n            </div>\n        );\n    };\n\n    const ItemIcon = getItemIcon(item.type);\n\n    return (\n        <Fragment>\n            <ItemHeader title={getItemTitle(item)} />\n            <Line />\n            <List className=\"dashboard-item-content\">\n                {contentItems.map(contentItem => (\n                    <MUIListItem\n                        key={contentItem.id}\n                        primaryText={primaryText(contentItem)}\n                        leftIcon={<ItemIcon style={{ margin: 0 }} />}\n                        disabled={true}\n                        innerDivStyle={{ padding: '4px 4px 4px 32px' }}\n                    />\n                ))}\n            </List>\n        </Fragment>\n    );\n};\n\nListItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nconst ListItemContainer = connect(\n    null,\n    {\n        tRemoveListItemContent,\n    }\n)(ListItem);\n\nexport default ListItemContainer;\n","import {\n    acUpdateDashboardItem,\n    acRemoveDashboardItem,\n} from '../../../actions/editDashboard';\nimport { itemTypeMap } from '../../../modules/itemTypes';\n\nexport const tRemoveListItemContent = (dashboardItem, content) => dispatch => {\n    const listItemType = itemTypeMap[dashboardItem.type].propName;\n\n    const newContent = dashboardItem[listItemType].filter(\n        item => item.id !== content.id\n    );\n\n    if (newContent.length) {\n        dashboardItem[listItemType] = newContent;\n        dispatch(acUpdateDashboardItem(dashboardItem));\n    } else {\n        dispatch(acRemoveDashboardItem(dashboardItem));\n    }\n};\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport TextField from 'd2-ui/lib/text-field/TextField';\n\nimport { acUpdateDashboardItem } from '../../../actions/editDashboard';\nimport { sGetEditDashboardItems } from '../../../reducers/editDashboard';\nimport { sGetDashboardItems } from '../../../reducers/dashboards';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nconst style = {\n    textDiv: {\n        padding: '10px',\n        whiteSpace: 'pre-line',\n        lineHeight: '20px',\n    },\n    textField: {\n        fontSize: '14px',\n        fontStretch: 'normal',\n        width: '90%',\n        margin: '0 auto',\n        display: 'block',\n    },\n    container: {\n        marginBottom: '20px',\n        marginTop: '20px',\n    },\n};\n\nconst TextItem = props => {\n    const { item, editMode, text, acUpdateDashboardItem } = props;\n\n    const onChangeText = text => {\n        const updatedItem = {\n            ...item,\n            text,\n        };\n\n        acUpdateDashboardItem(updatedItem);\n    };\n\n    const viewItem = () => {\n        const textDivStyle = Object.assign({}, style.textField, style.textDiv);\n        return (\n            <div className=\"dashboard-item-content\" style={style.container}>\n                <div style={textDivStyle}>{text}</div>\n            </div>\n        );\n    };\n\n    const editItem = () => {\n        return (\n            <Fragment>\n                <ItemHeader title={i18n.t('Text item')} />\n                <Line />\n                <div className=\"dashboard-item-content\">\n                    <TextField\n                        value={text}\n                        multiline\n                        rows={1}\n                        rowsMax={8}\n                        fullWidth\n                        style={style.textField}\n                        placeholder={i18n.t('Add text here')}\n                        onChange={onChangeText}\n                    />\n                </div>\n            </Fragment>\n        );\n    };\n\n    return <Fragment>{editMode ? editItem() : viewItem()}</Fragment>;\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    const items = ownProps.editMode\n        ? sGetEditDashboardItems(state)\n        : sGetDashboardItems(state);\n\n    const item = items.find(item => item.id === ownProps.item.id);\n\n    return {\n        text: item ? item.text : '',\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        acUpdateDashboardItem,\n    }\n)(TextItem);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nimport { FILTER_USER_ORG_UNIT } from '../../../actions/itemFilter';\nimport { sGetItemFilterRoot } from '../../../reducers/itemFilter';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nconst getIframeSrc = (appDetails, item, itemFilter) => {\n    let iframeSrc = `${appDetails.launchUrl}?dashboardItemId=${item.id}`;\n\n    if (\n        itemFilter &&\n        itemFilter[FILTER_USER_ORG_UNIT] &&\n        itemFilter[FILTER_USER_ORG_UNIT].length\n    ) {\n        const ouIds = itemFilter[FILTER_USER_ORG_UNIT].map(\n            ouPath => ouPath.split('/').slice(-1)[0]\n        );\n\n        iframeSrc += `&userOrgUnit=${ouIds.join(',')}`;\n    }\n\n    return iframeSrc;\n};\n\nconst AppItem = ({ item, itemFilter }, context) => {\n    let appDetails;\n\n    const appKey = item.appKey;\n\n    if (appKey) {\n        appDetails = context.d2.system.installedApps.find(\n            app => app.key === appKey\n        );\n    }\n\n    return appDetails && appDetails.name && appDetails.launchUrl ? (\n        <Fragment>\n            <ItemHeader title={appDetails.name} />\n            <Line />\n            <iframe\n                title={appDetails.name}\n                src={getIframeSrc(appDetails, item, itemFilter)}\n                className=\"dashboard-item-content\"\n                style={{ border: 'none' }}\n            />\n        </Fragment>\n    ) : (\n        <Fragment>\n            <ItemHeader title={`${appKey} app not found`} />\n            <Line />\n            <div\n                className=\"dashboard-item-content\"\n                style={{\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    height: '90%',\n                }}\n            >\n                <NotInterestedIcon\n                    color=\"disabled\"\n                    disabled\n                    style={{ width: 100, height: 100, align: 'center' }}\n                />\n            </div>\n        </Fragment>\n    );\n};\n\nAppItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nconst mapStateToProps = state => ({\n    itemFilter: sGetItemFilterRoot(state),\n});\n\nexport default connect(mapStateToProps)(AppItem);\n","import React, { Fragment } from 'react';\nimport i18n from '@dhis2/d2-i18n';\n\nimport { colors } from '../../../modules/colors';\nimport ItemHeader from '../ItemHeader';\n\nconst style = {\n    margin: '21px 28px',\n    fontSize: '14px',\n    lineHeight: '18px',\n    color: colors.charcoalGrey,\n};\n\nconst SpacerItem = () => {\n    return (\n        <Fragment>\n            <ItemHeader title={i18n.t('Spacer')} />\n            <p style={style}>\n                {i18n.t(\n                    'Use a spacer to create empty vertical space between other dashboard items.'\n                )}\n            </p>\n        </Fragment>\n    );\n};\n\nexport default SpacerItem;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash/debounce';\n\nconst defaultDebounceMs = 100;\nconst defaultBufferFactor = 0.25;\n\nclass ProgressiveLoadingContainer extends Component {\n    static propTypes = {\n        children: PropTypes.node.isRequired,\n        debounceMs: PropTypes.number,\n        bufferFactor: PropTypes.number,\n    };\n    static defaultProps = {\n        debounceMs: defaultDebounceMs,\n        bufferFactor: defaultBufferFactor,\n    };\n\n    state = {\n        shouldLoad: false,\n    };\n    containerRef = null;\n    shouldLoadHandler = null;\n\n    checkShouldLoad() {\n        const bufferPx = this.props.bufferFactor * window.innerHeight;\n\n        if (!this.containerRef) {\n            return;\n        }\n\n        const rect = this.containerRef.getBoundingClientRect();\n        if (\n            rect.bottom > -bufferPx &&\n            rect.top < window.innerHeight + bufferPx\n        ) {\n            this.setState({\n                shouldLoad: true,\n            });\n\n            this.removeHandler();\n        }\n    }\n\n    registerHandler() {\n        this.shouldLoadHandler = debounce(\n            () => this.checkShouldLoad(),\n            this.props.debounceMs\n        );\n\n        window.addEventListener('scroll', this.shouldLoadHandler);\n    }\n    removeHandler() {\n        window.removeEventListener('scroll', this.shouldLoadHandler);\n    }\n\n    componentDidMount() {\n        this.registerHandler();\n        this.checkShouldLoad();\n    }\n\n    componentWillUnmount() {\n        this.removeHandler();\n    }\n\n    render() {\n        const { children, debounceMs, bufferFactor, ...props } = this.props;\n        const { shouldLoad } = this.state;\n\n        return (\n            <div ref={ref => (this.containerRef = ref)} {...props}>\n                {shouldLoad && children}\n            </div>\n        );\n    }\n}\n\nexport default ProgressiveLoadingContainer;\n","import React from 'react';\n\nimport VisualizationItem from './VisualizationItem/Item';\nimport MessagesItem from './MessagesItem/Item';\nimport NotSupportedItem from './NotSupportedItem/Item';\nimport ListItem from './ListItem/Item';\nimport TextItem from './TextItem/Item';\nimport AppItem from './AppItem/Item';\nimport SpacerItem from './SpacerItem/Item';\nimport ProgressiveLoadingContainer from './ProgressiveLoadingContainer';\nimport {\n    APP,\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_CHART,\n    EVENT_REPORT,\n    MESSAGES,\n    REPORTS,\n    RESOURCES,\n    USERS,\n    TEXT,\n    SPACER,\n} from '../../modules/itemTypes';\nimport { DEFAULT_STATE_ITEM_FILTER } from '../../reducers/itemFilter';\n\nconst getGridItem = type => {\n    switch (type) {\n        case REPORT_TABLE:\n        case CHART:\n        case MAP:\n        case EVENT_CHART:\n        case EVENT_REPORT:\n            return VisualizationItem;\n        case MESSAGES:\n            return MessagesItem;\n        case REPORTS:\n        case RESOURCES:\n        case USERS:\n            return ListItem;\n        case TEXT:\n            return TextItem;\n        case SPACER:\n            return SpacerItem;\n        case APP:\n            return AppItem;\n        default:\n            return NotSupportedItem;\n    }\n};\n\nexport const Item = props => {\n    const GridItem = getGridItem(props.item.type);\n\n    return (\n        <ProgressiveLoadingContainer>\n            <GridItem\n                item={props.item}\n                editMode={props.editMode}\n                itemFilter={\n                    props.editMode\n                        ? DEFAULT_STATE_ITEM_FILTER\n                        : props.itemFilter\n                }\n                onToggleItemExpanded={props.onToggleItemExpanded}\n            />\n        </ProgressiveLoadingContainer>\n    );\n};\n","import React from 'react';\nimport ItemHeaderButton from '../Item/ItemHeaderButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { colors } from '../../modules/colors';\n\nconst style = {\n    button: {\n        position: 'absolute',\n        top: '7px',\n        right: '7px',\n        zIndex: '1000',\n    },\n    icon: {\n        fill: colors.red,\n    },\n};\n\nconst DeleteItemHeaderButton = ({ onClick }) => (\n    <ItemHeaderButton onClick={onClick} style={style.button}>\n        <DeleteIcon style={style.icon} />\n    </ItemHeaderButton>\n);\n\nexport default DeleteItemHeaderButton;\n","import React from 'react';\nimport LoadingMask from 'd2-ui/lib/loading-mask/LoadingMask.component';\n\nconst styles = {\n    modal: {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        width: '100%',\n        height: '100%',\n        zIndex: 999999998,\n        pointerEvents: 'none',\n    },\n    dark: {\n        backgroundColor: '#000000',\n        opacity: 0.2,\n        zIndex: 999999999,\n    },\n};\n\nconst ModalLoadingMask = ({ isLoading }) => {\n    if (!isLoading) {\n        return null;\n    }\n\n    return (\n        <div className=\"loading-mask-wrapper\">\n            <div style={styles.modal}>\n                <LoadingMask />\n            </div>\n            <div\n                style={{\n                    ...styles.modal,\n                    ...styles.dark,\n                }}\n            />\n        </div>\n    );\n};\n\nexport default ModalLoadingMask;\n","import React from 'react';\nimport { colors } from '../modules/colors';\n\nexport const NoContentMessage = ({ text }) => (\n    <div\n        style={{\n            padding: '50px 10px',\n            textAlign: 'center',\n            fontSize: '15px',\n            fontWeight: 500,\n            color: colors.charcoalGrey,\n        }}\n    >\n        {text}\n    </div>\n);\n\nexport default NoContentMessage;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ReactGridLayout from 'react-grid-layout';\n\nimport {\n    acUpdateDashboardLayout,\n    acRemoveDashboardItem,\n} from '../../actions/editDashboard';\nimport { Item } from '../Item/Item';\nimport { resize as pluginResize } from '../Item/VisualizationItem/plugin';\nimport { isPluginType } from '../../modules/itemTypes';\nimport {\n    GRID_ROW_HEIGHT,\n    GRID_COMPACT_TYPE,\n    ITEM_MIN_HEIGHT,\n    MARGIN,\n    getGridColumns,\n    hasShape,\n    onItemResize,\n} from './gridUtil';\nimport { orArray } from '../../modules/util';\nimport DeleteItemButton from './DeleteItemButton';\nimport ModalLoadingMask from '../../widgets/ModalLoadingMask';\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\n\nimport './ItemGrid.css';\nimport { sGetSelectedId, sGetSelectedIsLoading } from '../../reducers/selected';\nimport {\n    sGetEditDashboardRoot,\n    sGetEditDashboardItems,\n} from '../../reducers/editDashboard';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n} from '../../reducers/dashboards';\n\n// Component\n\nconst EXPANDED_HEIGHT = 17;\n\nexport class ItemGrid extends Component {\n    state = {\n        expandedItems: {},\n    };\n\n    NO_ITEMS_MESSAGE = i18n.t('There are no items on this dashboard');\n\n    onToggleItemExpanded = clickedId => {\n        const isExpanded =\n            typeof this.state.expandedItems[clickedId] === 'boolean'\n                ? this.state.expandedItems[clickedId]\n                : false;\n\n        const expandedItems = { ...this.state.expandedItems };\n        expandedItems[clickedId] = !isExpanded;\n        this.setState({ expandedItems });\n    };\n\n    onRemoveItem = clickedId => {\n        this.props.acRemoveDashboardItem(clickedId);\n    };\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.edit) {\n            this.setState({ expandedItems: {} });\n        }\n    }\n\n    onLayoutChange = newLayout => {\n        if (this.props.edit) {\n            this.props.acUpdateDashboardLayout(newLayout);\n        }\n    };\n\n    onResizeStop = (layout, oldItem, newItem) => {\n        onItemResize(newItem.i);\n\n        const dashboardItem = this.props.dashboardItems.find(\n            item => item.id === newItem.i\n        );\n\n        // call resize on the item component if it's a plugin type\n        if (dashboardItem && isPluginType(dashboardItem)) {\n            pluginResize(dashboardItem);\n        }\n    };\n\n    onRemoveItemWrapper = id => () => this.onRemoveItem(id);\n\n    render() {\n        const { edit, isLoading, dashboardItems } = this.props;\n\n        if (!isLoading && !dashboardItems.length) {\n            return <NoContentMessage text={this.NO_ITEMS_MESSAGE} />;\n        }\n\n        const items = dashboardItems.map((item, index) => {\n            const expandedItem = this.state.expandedItems[item.id];\n            let hProp = { h: item.h };\n\n            if (expandedItem && expandedItem === true) {\n                hProp.h = item.h + EXPANDED_HEIGHT;\n            }\n\n            return Object.assign({}, item, hProp, {\n                i: item.id,\n                minH: ITEM_MIN_HEIGHT,\n            });\n        });\n\n        return (\n            <div className=\"grid-wrapper\">\n                <ModalLoadingMask isLoading={isLoading} />\n                <ReactGridLayout\n                    onLayoutChange={this.onLayoutChange}\n                    onResizeStop={this.onResizeStop}\n                    className=\"layout\"\n                    layout={items}\n                    margin={MARGIN}\n                    cols={getGridColumns()}\n                    rowHeight={GRID_ROW_HEIGHT}\n                    width={window.innerWidth}\n                    compactType={GRID_COMPACT_TYPE}\n                    isDraggable={edit}\n                    isResizable={edit}\n                    draggableCancel=\"input,textarea\"\n                >\n                    {items.map(item => {\n                        const itemClassNames = [\n                            item.type,\n                            edit ? 'edit' : 'view',\n                        ].join(' ');\n\n                        return (\n                            <div key={item.i} className={itemClassNames}>\n                                {edit ? (\n                                    <DeleteItemButton\n                                        onClick={this.onRemoveItemWrapper(\n                                            item.id\n                                        )}\n                                    />\n                                ) : null}\n                                <Item\n                                    item={item}\n                                    editMode={edit}\n                                    onToggleItemExpanded={\n                                        this.onToggleItemExpanded\n                                    }\n                                />\n                            </div>\n                        );\n                    })}\n                </ReactGridLayout>\n            </div>\n        );\n    }\n}\n\nItemGrid.propTypes = {\n    dashboardItems: PropTypes.array,\n};\n\nItemGrid.defaultProps = {\n    dashboardItems: [],\n};\n\n// Container\n\nconst mapStateToProps = (state, ownProps) => {\n    const selectedDashboard = ownProps.edit\n        ? sGetEditDashboardRoot(state)\n        : sGetDashboardById(state, sGetSelectedId(state));\n\n    const dashboardItems = ownProps.edit\n        ? sGetEditDashboardItems(state)\n        : sGetDashboardItems(state);\n\n    return {\n        isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n        dashboardItems,\n    };\n};\n\nconst mapDispatchToProps = {\n    acUpdateDashboardLayout,\n    acRemoveDashboardItem,\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const validItems = orArray(stateProps.dashboardItems).filter(hasShape);\n\n    return {\n        ...dispatchProps,\n        edit: ownProps.edit,\n        isLoading: stateProps.isLoading,\n        dashboardItems: validItems,\n        onItemResize,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n    mergeProps\n)(ItemGrid);\n","import React, { Fragment } from 'react';\nimport TitleBar from '../TitleBar/TitleBar';\nimport ItemGrid from '../ItemGrid/ItemGrid';\n\nexport const DashboardContent = props => (\n    <Fragment>\n        <TitleBar edit={props.editMode} />\n        <ItemGrid edit={props.editMode} />\n    </Fragment>\n);\n\nexport default DashboardContent;\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport isEmpty from 'lodash/isEmpty';\nimport i18n from '@dhis2/d2-i18n';\n\nimport {\n    sGetAllDashboards,\n    sDashboardsIsFetching,\n} from '../../reducers/dashboards';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport DashboardsBar from '../ControlBar/DashboardsBar';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport DashboardContent from './DashboardContent';\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nexport const Content = ({ hasDashboardContent, dashboardsIsEmpty }) => {\n    const msg = dashboardsIsEmpty\n        ? i18n.t(\n              'No dashboards found. Use the + button to create a new dashboard.'\n          )\n        : i18n.t('Requested dashboard not found');\n\n    return hasDashboardContent ? (\n        <DashboardContent editMode={false} />\n    ) : (\n        <NoContentMessage text={msg} />\n    );\n};\n\nexport const ViewDashboard = ({ id, dashboardsIsEmpty, dashboardsLoaded }) => {\n    const hasDashboardContent = id && !dashboardsIsEmpty;\n    const contentNotReady = !dashboardsLoaded || id === null;\n\n    return (\n        <Fragment>\n            <DashboardsBar />\n            <DashboardVerticalOffset />\n            <div className=\"dashboard-wrapper\">\n                {contentNotReady ? null : (\n                    <Content\n                        hasDashboardContent={hasDashboardContent}\n                        dashboardsIsEmpty={dashboardsIsEmpty}\n                    />\n                )}\n            </div>\n        </Fragment>\n    );\n};\n\nconst mapStateToProps = state => {\n    const dashboards = sGetAllDashboards(state);\n\n    return {\n        id: sGetSelectedId(state),\n        dashboardsIsEmpty: isEmpty(dashboards),\n        dashboardsLoaded: !sDashboardsIsFetching(state),\n    };\n};\n\nexport default connect(mapStateToProps)(ViewDashboard);\n","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport Dialog from 'material-ui/Dialog';\n\nimport FlatButton from '../../widgets/FlatButton';\nimport PrimaryButton from '../../widgets/PrimaryButton';\n\nexport const ConfirmDeleteDialog = ({\n    dashboardName,\n    onDeleteConfirmed,\n    onContinueEditing,\n    open,\n}) => {\n    const actions = [\n        <FlatButton onClick={onDeleteConfirmed}>{i18n.t('Delete')}</FlatButton>,\n        <PrimaryButton onClick={onContinueEditing}>\n            {i18n.t('Continue editing')}\n        </PrimaryButton>,\n    ];\n\n    return (\n        <Dialog\n            title={i18n.t('Confirm delete dashboard')}\n            actions={actions}\n            modal={true}\n            open={open}\n        >\n            {i18n.t(\n                'Are you sure you want to delete dashboard \"{{ dashboardName }}\"?',\n                { dashboardName }\n            )}\n        </Dialog>\n    );\n};\n\nexport default ConfirmDeleteDialog;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport ControlBar from '@dhis2/d2-ui-core/control-bar/ControlBar';\nimport TranslationDialog from '@dhis2/d2-ui-translation-dialog';\n\nimport PrimaryButton from '../../widgets/PrimaryButton';\nimport FlatButton from '../../widgets/FlatButton';\nimport ConfirmDeleteDialog from './ConfirmDeleteDialog';\nimport {\n    tSaveDashboard,\n    acClearEditDashboard,\n} from '../../actions/editDashboard';\nimport {\n    tDeleteDashboard,\n    acSetDashboardDisplayName,\n} from '../../actions/dashboards';\nimport {\n    sGetEditDashboardRoot,\n    sGetIsNewDashboard,\n} from '../../reducers/editDashboard';\nimport {\n    CONTROL_BAR_ROW_HEIGHT,\n    MIN_ROW_COUNT,\n    getControlBarHeight,\n} from './controlBarDimensions';\nimport { apiFetchDashboard } from '../../api/dashboards';\n\nimport './ControlBar.css';\n\nconst buttonBarStyle = {\n    height: CONTROL_BAR_ROW_HEIGHT,\n    paddingTop: '15px',\n    marginLeft: '15px',\n    marginRight: '15px',\n};\n\nexport class EditBar extends Component {\n    state = {\n        translationDialogIsOpen: false,\n        dashboardModel: undefined,\n        confirmDeleteDialogOpen: false,\n        redirectUrl: undefined,\n    };\n\n    onConfirmDelete = () => {\n        this.setState({ confirmDeleteDialogOpen: true });\n    };\n\n    onSave = () => {\n        this.props.onSave().then(newId => {\n            this.setState({ redirectUrl: `/${newId}` });\n        });\n    };\n\n    onDiscard = () => {\n        this.props.onDiscardChanges();\n        const redirectUrl = this.props.dashboardId\n            ? `/${this.props.dashboardId}`\n            : '/';\n        this.setState({ redirectUrl });\n    };\n\n    onContinueEditing = () => {\n        this.setState({ confirmDeleteDialogOpen: false });\n    };\n\n    onDeleteConfirmed = () => {\n        this.setState({ confirmDeleteDialogOpen: false });\n        this.props.onDelete(this.props.dashboardId).then(() => {\n            this.setState({ redirectUrl: '/' });\n        });\n    };\n\n    onTranslationsSaved = async translations => {\n        if (translations && translations.length) {\n            const dbLocale = await this.context.d2.currentUser.userSettings.get(\n                'keyDbLocale'\n            );\n\n            const translation = translations.find(\n                t => t.locale === dbLocale && t.property === 'NAME'\n            );\n\n            if (translation && translation.value) {\n                this.props.onTranslate(\n                    this.props.dashboardId,\n                    translation.value\n                );\n            }\n        }\n    };\n\n    fetchDashboardModel = () => {\n        if (this.props.dashboardId && !this.state.dashboardModel) {\n            apiFetchDashboard(this.props.dashboardId).then(dashboardModel =>\n                this.setState({ dashboardModel })\n            );\n        }\n    };\n\n    componentDidMount() {\n        this.fetchDashboardModel();\n    }\n\n    componentDidUpdate() {\n        this.fetchDashboardModel();\n    }\n\n    toggleTranslationDialog = () => {\n        this.setState({\n            translationDialogIsOpen: !this.state.translationDialogIsOpen,\n        });\n    };\n\n    confirmDeleteDialog = () =>\n        this.props.deleteAccess && this.props.dashboardId ? (\n            <ConfirmDeleteDialog\n                dashboardName={this.props.dashboardName}\n                onDeleteConfirmed={this.onDeleteConfirmed}\n                onContinueEditing={this.onContinueEditing}\n                open={this.state.confirmDeleteDialogOpen}\n            />\n        ) : null;\n\n    translationDialog = () =>\n        this.state.dashboardModel && this.state.dashboardModel.id ? (\n            <TranslationDialog\n                className=\"translation-dialog\"\n                d2={this.context.d2}\n                open={this.state.translationDialogIsOpen}\n                onRequestClose={this.toggleTranslationDialog}\n                objectToTranslate={this.state.dashboardModel}\n                fieldsToTranslate={['name', 'description']}\n                // TODO handle messages in snackbar\n                onTranslationSaved={this.onTranslationsSaved}\n                onTranslationError={err =>\n                    console.log('translation update error', err)\n                }\n            />\n        ) : null;\n\n    render() {\n        if (this.state.redirectUrl) {\n            return <Redirect to={this.state.redirectUrl} />;\n        }\n\n        const { dashboardId, deleteAccess, updateAccess } = this.props;\n        const controlBarHeight = getControlBarHeight(MIN_ROW_COUNT, false);\n\n        const discardBtnText = updateAccess\n            ? i18n.t('Exit without saving')\n            : i18n.t('Go to dashboards');\n\n        return (\n            <Fragment>\n                <ControlBar\n                    height={controlBarHeight}\n                    editMode={true}\n                    expandable={false}\n                >\n                    <div style={buttonBarStyle}>\n                        {updateAccess ? (\n                            <div className=\"left-controls\">\n                                <span style={{ marginRight: '15px' }}>\n                                    <PrimaryButton\n                                        className=\"save-button\"\n                                        onClick={this.onSave}\n                                    >\n                                        {i18n.t('Save changes')}\n                                    </PrimaryButton>\n                                </span>\n                                {dashboardId && deleteAccess ? (\n                                    <FlatButton\n                                        className=\"delete-button\"\n                                        onClick={this.onConfirmDelete}\n                                    >\n                                        {i18n.t('Delete')}\n                                    </FlatButton>\n                                ) : null}\n                                {dashboardId ? (\n                                    <FlatButton\n                                        className=\"translate-button\"\n                                        onClick={this.toggleTranslationDialog}\n                                    >\n                                        {i18n.t('Translate')}\n                                    </FlatButton>\n                                ) : null}\n                            </div>\n                        ) : null}\n\n                        <div className=\"right-controls\">\n                            <FlatButton\n                                className=\"discard-button\"\n                                onClick={this.onDiscard}\n                            >\n                                {discardBtnText}\n                            </FlatButton>\n                        </div>\n                    </div>\n                </ControlBar>\n                {this.translationDialog()}\n                {this.confirmDeleteDialog()}\n            </Fragment>\n        );\n    }\n}\n\nEditBar.contextTypes = {\n    d2: PropTypes.object,\n};\n\nconst mapStateToProps = state => {\n    const dashboard = sGetEditDashboardRoot(state);\n\n    let deleteAccess;\n    let updateAccess;\n    if (sGetIsNewDashboard(state)) {\n        deleteAccess = true;\n        updateAccess = true;\n    } else {\n        updateAccess = dashboard.access ? dashboard.access.update : false;\n        deleteAccess = dashboard.access ? dashboard.access.delete : false;\n    }\n\n    return {\n        dashboardId: dashboard.id,\n        dashboardName: dashboard.name,\n        deleteAccess,\n        updateAccess,\n    };\n};\n\nconst mapDispatchToProps = dispatch => ({\n    onSave: () => dispatch(tSaveDashboard()).then(id => id),\n    onDelete: id => dispatch(tDeleteDashboard(id)),\n    onDiscardChanges: () => dispatch(acClearEditDashboard()),\n    onTranslate: (id, value) => dispatch(acSetDashboardDisplayName(id, value)),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(EditBar);\n","import React, { Fragment, Component } from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\n\nimport { acSetEditDashboard } from '../../actions/editDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n    sDashboardsIsFetching,\n} from '../../reducers/dashboards';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport DashboardContent from './DashboardContent';\nimport EditBar from '../ControlBar/EditBar';\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nexport const Content = ({ updateAccess }) => {\n    return updateAccess ? (\n        <DashboardContent editMode={true} />\n    ) : (\n        <NoContentMessage text={i18n.t('No access')} />\n    );\n};\nexport class EditDashboard extends Component {\n    state = {\n        initialized: false,\n    };\n\n    initEditDashboard = () => {\n        if (this.props.dashboard) {\n            this.setState({ initialized: true });\n            this.props.setEditDashboard(this.props.dashboard, this.props.items);\n        }\n    };\n\n    componentDidMount() {\n        this.initEditDashboard();\n    }\n\n    componentDidUpdate() {\n        if (!this.state.initialized) {\n            this.initEditDashboard();\n        }\n    }\n\n    getDashboardContent = () => {\n        const contentNotReady =\n            !this.props.dashboardsLoaded || this.props.id === null;\n\n        return (\n            <div className=\"dashboard-wrapper\">\n                {contentNotReady ? null : (\n                    <Content updateAccess={this.props.updateAccess} />\n                )}\n            </div>\n        );\n    };\n\n    render() {\n        return (\n            <Fragment>\n                <EditBar />\n                <DashboardVerticalOffset editMode={true} />\n                {this.getDashboardContent()}\n            </Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    const id = sGetSelectedId(state);\n    const dashboard = id ? sGetDashboardById(state, id) : null;\n\n    const updateAccess =\n        dashboard && dashboard.access ? dashboard.access.update : false;\n\n    return {\n        dashboard,\n        id,\n        updateAccess,\n        items: sGetDashboardItems(state),\n        dashboardsLoaded: !sDashboardsIsFetching(state),\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        setEditDashboard: acSetEditDashboard,\n    }\n)(EditDashboard);\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\n\nimport { acSetEditNewDashboard } from '../../actions/editDashboard';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport EditBar from '../ControlBar/EditBar';\nimport DashboardContent from './DashboardContent';\n\nclass NewDashboard extends Component {\n    componentDidMount() {\n        this.props.setNewDashboard();\n    }\n\n    render() {\n        return (\n            <Fragment>\n                <EditBar />\n                <DashboardVerticalOffset editMode={true} />\n                <div className=\"dashboard-wrapper\">\n                    <DashboardContent editMode={true} />\n                </div>\n            </Fragment>\n        );\n    }\n}\n\nexport default connect(\n    null,\n    {\n        setNewDashboard: acSetEditNewDashboard,\n    }\n)(NewDashboard);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { tSelectDashboard } from '../../actions/dashboards';\nimport { sDashboardsIsFetching } from '../../reducers/dashboards';\nimport { EDIT, NEW } from './dashboardModes';\nimport ViewDashboard from './ViewDashboard';\nimport EditDashboard from './EditDashboard';\nimport NewDashboard from './NewDashboard';\n\nclass Dashboard extends Component {\n    setDashboard = () => {\n        if (this.props.dashboardsLoaded) {\n            const id = this.props.match.params.dashboardId || null;\n            this.props.selectDashboard(id);\n        }\n    };\n\n    componentDidMount() {\n        this.setDashboard();\n    }\n\n    componentDidUpdate() {\n        this.setDashboard();\n    }\n\n    render() {\n        switch (this.props.mode) {\n            case EDIT:\n                return <EditDashboard />;\n            case NEW:\n                return <NewDashboard />;\n            default:\n                return <ViewDashboard />;\n        }\n    }\n}\n\nconst mapStateToProps = state => {\n    return { dashboardsLoaded: !sDashboardsIsFetching(state) };\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        selectDashboard: tSelectDashboard,\n    }\n)(Dashboard);\n","export const EDIT = 'edit';\nexport const NEW = 'new';\nexport const VIEW = 'view';\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport HeaderBar from '@dhis2/ui/widgets/HeaderBar';\n\nimport { EDIT, VIEW, NEW } from './Dashboard/dashboardModes';\nimport { acReceivedUser } from '../actions/user';\nimport { tFetchDashboards } from '../actions/dashboards';\nimport { tSetControlBarRows } from '../actions/controlBar';\nimport Dashboard from './Dashboard/Dashboard';\nimport SnackbarMessage from './SnackbarMessage/SnackbarMessage';\n\nimport 'typeface-roboto';\nimport './App.css';\n\nexport class App extends Component {\n    componentDidMount() {\n        this.props.setCurrentUser(this.props.d2.currentUser);\n        this.props.fetchDashboards();\n        this.props.setControlBarRows();\n    }\n\n    getChildContext() {\n        return { baseUrl: this.props.baseUrl, i18n, d2: this.props.d2 };\n    }\n\n    render() {\n        return (\n            <div className=\"app-wrapper\">\n                <div className=\"dashboard-header-bar\">\n                    <HeaderBar appName={i18n.t('Dashboard')} />\n                </div>\n                <Router>\n                    <Switch>\n                        <Route\n                            exact\n                            path=\"/\"\n                            render={props => (\n                                <Dashboard {...props} mode={VIEW} />\n                            )}\n                        />\n                        <Route\n                            exact\n                            path=\"/new\"\n                            render={props => (\n                                <Dashboard {...props} mode={NEW} />\n                            )}\n                        />\n                        <Route\n                            exact\n                            path=\"/:dashboardId\"\n                            render={props => (\n                                <Dashboard {...props} mode={VIEW} />\n                            )}\n                        />\n                        <Route\n                            exact\n                            path=\"/:dashboardId/edit\"\n                            render={props => (\n                                <Dashboard {...props} mode={EDIT} />\n                            )}\n                        />\n                    </Switch>\n                </Router>\n                <SnackbarMessage />\n            </div>\n        );\n    }\n}\n\nApp.childContextTypes = {\n    baseUrl: PropTypes.string,\n    i18n: PropTypes.object,\n    d2: PropTypes.object,\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setCurrentUser: currentUser => dispatch(acReceivedUser(currentUser)),\n        fetchDashboards: () => dispatch(tFetchDashboards()),\n        setControlBarRows: () => dispatch(tSetControlBarRows()),\n    };\n};\n\nexport default connect(\n    null,\n    mapDispatchToProps\n)(App);\n","import { RECEIVED_USER } from '../reducers/user';\n\nexport const acReceivedUser = value => ({\n    type: RECEIVED_USER,\n    value,\n});\n","//------------------------------------------------------------------------------\n// <auto-generated>\n// This code was generated by d2-i18n-generate.\n//\n// Changes to this file may cause incorrect behavior and will be lost if\n// the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\nimport i18n from '@dhis2/d2-i18n';\nimport moment from 'moment';\nimport 'moment/locale/lo';\nimport 'moment/locale/sv';\nimport 'moment/locale/ur';\nimport 'moment/locale/vi';\n\nimport enTranslations from './en/translations.json';\nimport loTranslations from './lo/translations.json';\nimport svTranslations from './sv/translations.json';\nimport urTranslations from './ur/translations.json';\nimport viTranslations from './vi/translations.json';\n\nconst namespace = 'dashboards-app';\nmoment.locale('en');\n\ni18n.addResources('en', namespace, enTranslations);\ni18n.addResources('lo', namespace, loTranslations);\ni18n.addResources('sv', namespace, svTranslations);\ni18n.addResources('ur', namespace, urTranslations);\ni18n.addResources('vi', namespace, viTranslations);\n\ni18n.setDefaultNamespace(namespace);\ni18n.changeLanguage('en');\n\nexport default i18n;\n","/** @module reducers/selected */\nimport { validateReducer } from '../modules/util';\n\nexport const SET_STYLE = 'SET_STYLE';\n\nexport const DEFAULT_STATE_STYLE = 'LIST';\n\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\nconst style = (state = DEFAULT_STATE_STYLE, action) => {\n    switch (action.type) {\n        case SET_STYLE:\n            return validateReducer(action.value, DEFAULT_STATE_STYLE);\n        default:\n            return state;\n    }\n};\n\nexport default style;\n\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\nexport const sGetStyleRoot = state => state.style;\n","import { combineReducers } from 'redux';\nimport arraySort from 'd2-utilizr/lib/arraySort';\n\nimport dashboards, { sGetDashboardsRoot } from './dashboards';\nimport selected from './selected';\nimport dashboardsFilter, {\n    ownerData,\n    sGetFilterName,\n    sGetFilterOrder,\n    sGetFilterOwner,\n} from './dashboardsFilter';\nimport controlBar from './controlBar';\nimport visualizations from './visualizations';\nimport editDashboard from './editDashboard';\nimport messages from './messages';\nimport user from './user';\nimport snackbar from './snackbar';\nimport itemFilter from './itemFilter';\nimport style from './style';\n\nconst USER = 'system';\n\n// Reducers\n\nexport default combineReducers({\n    dashboards,\n    selected,\n    dashboardsFilter,\n    controlBar,\n    visualizations,\n    messages,\n    user,\n    editDashboard,\n    itemFilter,\n    style,\n    snackbar,\n});\n\n// Map constants to data\nconst mapConstToData = {\n    NAME: 'name',\n    ITEMS: 'numberOfItems',\n    CREATED: 'created',\n    OWNER: 'owner',\n};\n\n// Selectors\n\n// Filter dashboards by name\nexport const sFilterDashboardsByName = (dashboards, filter) =>\n    dashboards.filter(d =>\n        d.displayName.toLowerCase().includes(filter.toLowerCase())\n    );\n\n// Filter dashboards by owner, TODO FIXME\nexport const sFilterDashboardsByOwner = (dashboards, filter) => {\n    const ME = ownerData[1]; // TODO\n    const OTHERS = ownerData[2]; // TODO\n\n    switch (filter) {\n        case ME:\n            return dashboards.filter(d => d.owner === USER);\n        case OTHERS:\n            return dashboards.filter(d => d.owner !== USER);\n        default:\n            return dashboards;\n    }\n};\n\n// Filter dashboards by order\nexport const sFilterDashboardsByOrder = (dashboards, filter) => {\n    const filterValues = filter.split(':');\n\n    const key = filterValues[0];\n    const direction = filterValues[1];\n\n    return arraySort(dashboards, direction, mapConstToData[key]);\n};\n\n// Selectors dependency level 2\n\n// Get filtered dashboards\nexport const sGetFilteredDashboards = state => {\n    const dashboards = sGetDashboardsRoot(state);\n\n    const nameFilter = sGetFilterName(state);\n    const ownerFilter = sGetFilterOwner(state);\n    const orderFilter = sGetFilterOrder(state);\n\n    return sFilterDashboardsByOrder(\n        sFilterDashboardsByName(\n            sFilterDashboardsByOwner(dashboards, ownerFilter),\n            nameFilter\n        ),\n        orderFilter\n    );\n};\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport reducer from './reducers';\n\nconst configureStore = () => {\n    const middleware = [thunk];\n\n    // Enable Redux devtools if extension is installed instead of redux-logger\n    const composeEnhancers =\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n    if (\n        !window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ &&\n        process.env.NODE_ENV !== 'production'\n    ) {\n        middleware.push(createLogger());\n    }\n\n    return createStore(\n        reducer,\n        composeEnhancers(applyMiddleware(...middleware))\n    );\n};\n\nexport default configureStore;\n","import getMuiTheme from 'material-ui/styles/getMuiTheme';\n\nimport { colors } from './colors';\n\nexport const muiTheme = () => {\n    const raisedButton = {\n        primaryColor: colors.royalBlue,\n        disabledColor: colors.paleBlue,\n        disabledTextColor: colors.lightMediumGrey,\n    };\n\n    const theme = getMuiTheme({ raisedButton });\n\n    return theme;\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport { MuiThemeProvider as V0MuiThemeProvider } from 'material-ui';\nimport { init as d2Init, config, getManifest, getUserSettings } from 'd2';\nimport dhis2theme from '@dhis2/d2-ui-core/theme/mui3.theme';\n\n// temporary workaround until new ui headerbar is ready\nimport 'material-design-icons/iconfont/material-icons.css';\nimport './reset.css';\n\nimport App from './components/App';\nimport './index.css';\nimport i18n from './locales';\nimport configureStore from './configureStore';\nimport { muiTheme } from './modules/theme';\n\nconst v1Theme = () => createMuiTheme({ ...dhis2theme });\n\nconst configI18n = userSettings => {\n    const uiLocale = userSettings.keyUiLocale;\n\n    if (uiLocale && uiLocale !== 'en') {\n        config.i18n.sources.add(`./i18n/i18n_module_${uiLocale}.properties`);\n    }\n\n    config.i18n.sources.add('./i18n/i18n_module_en.properties');\n    i18n.changeLanguage(uiLocale);\n};\n\nconst init = async () => {\n    const manifest = await getManifest('./manifest.webapp');\n\n    // log app info\n    console.info(\n        `Dashboards app, v${manifest.version}, ${\n            manifest.manifest_generated_at\n        }`\n    );\n\n    const isProd = process.env.NODE_ENV === 'production';\n\n    if (\n        !isProd &&\n        (!process.env.REACT_APP_DHIS2_BASE_URL ||\n            !process.env.REACT_APP_DHIS2_AUTHORIZATION)\n    ) {\n        throw new Error(\n            'Missing env variables REACT_APP_DHIS2_BASE_URL and REACT_APP_DHIS2_AUTHORIZATION'\n        );\n    }\n\n    // api config\n    const baseUrl = isProd\n        ? manifest.activities.dhis.href\n        : process.env.REACT_APP_DHIS2_BASE_URL;\n    const authorization = process.env.REACT_APP_DHIS2_AUTHORIZATION;\n\n    config.baseUrl = `${baseUrl}/api/${manifest.dhis2.apiVersion}`;\n    config.headers = isProd ? null : { Authorization: authorization };\n    config.schemas = [\n        'chart',\n        'map',\n        'report',\n        'reportTable',\n        'eventChart',\n        'eventReport',\n        'dashboard',\n        'organisationUnit',\n        'userGroup',\n    ];\n\n    getUserSettings()\n        .then(configI18n)\n        .then(() => d2Init(config))\n        .then(initializedD2 => {\n            ReactDOM.render(\n                <Provider store={configureStore()}>\n                    <MuiThemeProvider theme={v1Theme()}>\n                        <V0MuiThemeProvider muiTheme={muiTheme()}>\n                            <App baseUrl={baseUrl} d2={initializedD2} />\n                        </V0MuiThemeProvider>\n                    </MuiThemeProvider>\n                </Provider>,\n                document.getElementById('root')\n            );\n        });\n};\n\ninit();\n","import isObject from 'lodash/isObject';\n\n// validation\nexport function orNull(param) {\n    return param === undefined ? null : param;\n}\n\nexport function orArray(param) {\n    return Array.isArray(param) ? param : [];\n}\n\nexport function orObject(param) {\n    return isObject(param) ? param : {};\n}\n\n// array\nexport function arrayGetById(array, id) {\n    return array.find(item => item.id === id);\n}\n\n// object\nexport function arrayToIdMap(array) {\n    return array.reduce((obj, item) => {\n        obj[item.id] = item;\n        return obj;\n    }, {});\n}\n\n// date\nexport function getDate() {\n    const y = Math.floor(Math.random() * 3) + 2015;\n    const M = Math.floor(Math.random() * 12) + 1;\n    const d = Math.floor(Math.random() * 28) + 1;\n    // const h = Math.floor(Math.random() * 23) + 1;\n    // const m = Math.floor(Math.random() * 59) + 1;\n    // const s = Math.floor(Math.random() * 59) + 1;\n\n    return new Date(`${y}-${M}-${d}`)\n        .toJSON()\n        .replace('T', ' ')\n        .substr(0, 10);\n}\n\nexport const formatDate = (value, uiLocale) => {\n    if (typeof global.Intl !== 'undefined' && Intl.DateTimeFormat) {\n        const locale = uiLocale || 'en';\n        return new Intl.DateTimeFormat(locale, {\n            year: 'numeric',\n            month: 'short',\n            day: 'numeric',\n        }).format(new Date(value));\n    }\n\n    return value.substr(0, 19).replace('T', ' ');\n};\n\n/**\n * Sorts an array of objects based on provided date property\n *\n * @param {Array} items Array of objects\n * @param {String} dateProp Name of the date property to be used for sorting\n * @param {Boolean} ascending Whether to sort ascending or descending\n */\nexport const sortByDate = (items, dateProp, ascending = true) => {\n    const values = Object.values(items);\n\n    values.sort((a, b) => {\n        const aDate = new Date(a[dateProp]);\n        const bDate = new Date(b[dateProp]);\n\n        return ascending ? aDate - bDate : bDate - aDate;\n    });\n\n    return values;\n};\n\n// reducer validator\nexport const validateReducer = (value, defaultValue) =>\n    value === undefined || value === null ? defaultValue : value;\n\nexport const getBaseUrl = d2 => {\n    const api = d2.Api.getApi();\n    const idx = api.baseUrl.indexOf('/api');\n    return idx > -1 ? api.baseUrl.slice(0, idx) : api.baseUrl;\n};\n\nexport const getWithoutId = object => ({\n    ...object,\n    id: undefined,\n});\n"],"sourceRoot":""}
{"version":3,"sources":["modules/itemTypes.js","components/Item/ListItem/Item.module.css","modules/util.js","reducers/user.js","reducers/dashboards.js","reducers/selected.js","reducers/visualizations.js","api/metadata.js","api/index.js","api/dashboards.js","components/ItemGrid/gridUtil.js","reducers/messages.js","api/messages.js","reducers/snackbar.js","actions/snackbar.js","components/SnackbarMessage/SnackbarMessage.js","components/Item/VisualizationItem/plugin.js","actions/selected.js","api/localStorage.js","components/Item/MessagesItem/actions.js","reducers/editDashboard.js","reducers/editItemFilters.js","reducers/itemFilters.js","actions/itemFilters.js","actions/editItemFilters.js","api/editDashboard.js","actions/editDashboard.js","actions/dashboards.js","reducers/controlBar.js","api/controlBar.js","actions/controlBar.js","reducers/dimensions.js","reducers/settings.js","actions/dimensions.js","components/ControlBar/ShowMoreButton.js","components/ControlBar/controlBarDimensions.js","components/ControlBar/ControlBar.js","icons/Star.js","api/dataStatistics.js","components/ControlBar/DashboardItemChip.js","icons/AddCircle.js","icons/Clear.js","components/ControlBar/ClearButton.js","reducers/dashboardsFilter.js","components/ControlBar/Filter.js","components/ControlBar/DashboardsBar.js","actions/dashboardsFilter.js","components/Dashboard/DashboardVerticalOffset.js","components/ItemSelector/HeaderMenuItem.js","icons/Launch.js","components/ItemSelector/ContentMenuItem.js","components/ItemSelector/selectableItems.js","components/ItemSelector/CategorizedMenuGroup.js","components/ItemSelector/actions.js","components/ItemSelector/SinglesMenuGroup.js","components/ItemSelector/ItemSelector.js","components/TitleBar/EditTitleBar.js","components/ItemFilter/FilterDialog.js","reducers/activeModalDimension.js","actions/activeModalDimension.js","components/ItemFilter/FilterSelector.js","components/TitleBar/Info.js","components/TitleBar/ViewTitleBar.js","components/TitleBar/TitleBar.js","components/Item/VisualizationItem/DefaultPlugin.js","components/Item/ItemHeader.js","components/Item/VisualizationItem/ItemFooter.js","components/Item/ItemHeaderButton.js","components/Item/VisualizationItem/ItemHeaderButtons.js","modules/memoizeOne.js","components/Item/VisualizationItem/Item.js","widgets/Line.js","components/Item/MessagesItem/Item.js","components/Item/NotSupportedItem/Item.js","icons/Description.js","icons/Delete.js","components/Item/ListItem/Item.js","components/Item/ListItem/actions.js","components/Item/TextItem/Item.js","components/Item/AppItem/Item.js","components/Item/SpacerItem/Item.js","components/Item/Item.js","components/ItemGrid/DeleteItemButton.js","widgets/NoContentMessage.js","components/Item/ProgressiveLoadingContainer.js","components/ItemGrid/ItemGrid.js","components/FilterBar/FilterBadge.js","components/FilterBar/FilterBar.js","components/Dashboard/DashboardContent.js","components/Dashboard/ViewDashboard.js","components/ControlBar/ConfirmDeleteDialog.js","components/ControlBar/EditBar.js","components/Dashboard/EditDashboard.js","components/Dashboard/NewDashboard.js","components/Dashboard/Dashboard.js","components/Dashboard/dashboardModes.js","components/App.js","actions/user.js","locales/index.js","reducers/style.js","reducers/index.js","configureStore.js","index.js","components/ControlBar/styles/DashboardsBar.module.css","components/ItemSelector/styles/ContentMenuItem.module.css","components/ControlBar/styles/ControlBar.module.css","components/ControlBar/styles/ClearButton.module.css","components/ItemSelector/styles/CategorizedMenuGroup.module.css"],"names":["REPORT_TABLE","CHART","MAP","EVENT_REPORT","EVENT_CHART","APP","REPORTS","RESOURCES","USERS","MESSAGES","TEXT","SPACER","DOMAIN_TYPE_AGGREGATE","VISUALIZATION_TYPE_TABLE","VISUALIZATION_TYPE_CHART","VISUALIZATION_TYPE_MAP","CHART_TYPE_SINGLE_VALUE","spacerContent","emptyTextItemContent","isSpacerType","item","type","text","isTextType","isPluginType","itemTypeMap","hasOwnProperty","getPlugin","pluginName","plugin","global","_itemTypeMap","Object","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","id","endPointName","propName","pluralTitle","i18n","t","domainType","visualizationType","appUrl","concat","appName","getEndPointName","getItemUrl","d2","url","launchUrl","getBaseUrl","getItemIcon","TableIcon","ChartIcon","MapIcon","ExtensionIcon","DescriptionIcon","PersonIcon","FontDownloadIcon","EmailIcon","CropFreeIcon","NotInterestedIcon","module","exports","list","itemicon","link","deleteicon","deletebutton","orArray","param","Array","isArray","orObject","isObject","arrayToIdMap","array","reduce","obj","formatDate","value","uiLocale","Intl","DateTimeFormat","locale","year","month","day","format","Date","substr","replace","validateReducer","defaultValue","undefined","api","Api","getApi","idx","baseUrl","indexOf","slice","getWithoutId","object","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","DEFAULT_STATE_USER","username","isSuperuser","sGetUserUsername","state","user","DEFAULT_STATE_DASHBOARDS","byId","items","updateDashboardProp","dashboardId","prop","objectSpread","defineProperty","sGetDashboardsRoot","dashboards","sGetDashboardById","sDashboardsIsFetching","sGetAllDashboards","sGetDashboardItems","sGetStarredDashboards","values","filter","dashboard","starred","sGetUnstarredDashboards","sGetDashboardsSortedByStarred","toConsumableArray","arraySort","getCustomDashboards","data","arrayFrom","map","d","index","name","displayName","description","displayDescription","favorite","owner","created","split","join","lastUpdated","access","numberOfItems","dashboardItems","length","combineReducers","arguments","action","isLoading","showDescription","sGetSelectedRoot","selected","sGetSelectedId","sGetSelectedIsLoading","sGetSelectedShowDescription","DEFAULT_STATE_VISUALIZATIONS","isEmpty","p","sGetVisualization","visualizations","sGetVisualizationsRoot","getIdNameFields","rename","getDimensionFields","_ref2","withItems","arrayClean","getAxesFields","_ref3","getFavoriteFields","_ref4","withDimensions","withOptions","getFavoritesFields","_ref5","apiFetchFavorite","_ref6","fields","getInstance","then","get","onError","error","console","log","getDashboardItemsFields","withFavorite","getDashboardFields","apiFetchDashboard","models","catch","apiStarDashboard","isStarred","post","delete","apiDeleteDashboard","MARGIN","NEW_ITEM_SHAPE","x","y","w","h","isNonNegativeInteger","Number","isInteger","hasShape","withShape","itemWithShape","assign","i","Error","col","row","Math","floor","itemWidth","GRID_ROW_HEIGHT","getShape","originalHeight","round","max","getOriginalHeight","getGridItemDomId","onItemResize","el","document","querySelector","isFunction","setViewportSize","setTimeout","clientWidth","clientHeight","sGetMessagesRoot","messages","getMessages","DEFAULT_STATE_SNACKBAR","message","duration","open","acCloseSnackbar","loadingDashboardMsg","SnackbarMessageContent","_ref","react_default","a","createElement","style","fontWeight","connect","_sGetSnackbar","snackbar","sGetSnackbar","snackbarOpen","snackbarMessage","snackbarDuration","onCloseSnackbar","props","Snackbar_default","zIndex","SnackbarMessage_SnackbarMessageContent","autoHideDuration","onClose","pluginIsAvailable","activeType","extractFavorite","reportTable","chart","eventReport","eventChart","loadPlugin","config","credentials","load","loadingIndicator","auth","getId","getName","getLink","asyncToGenerator","regenerator_default","mark","_callee","visualization","_args","wrap","_context","prev","next","stop","_x","_x2","_x3","_x4","apply","this","fetch","_callee2","fetchedFavorite","_context2","sent","abrupt","_x5","resize","unmount","getVisualizationConfig","originalType","extractedMapView","mapViews","find","mv","layer","includes","acSetSelectedId","acSetSelectedIsLoading","acReceivedVisualization","tLoadDashboard","dispatch","getState","dash","acAppendDashboards","Promise","resolve","t0","tSetSelectedDashboardById","snackbarTimeout","onSuccess","dashboardName","customDashboard","acSetDashboardItems","localStorage","setItem","forEach","messageConversations","clearTimeout","DEFAULT_STATE_EDIT_DASHBOARD","NEW_DASHBOARD_STATE","sGetEditDashboardRoot","editDashboard","sGetIsEditing","sGetEditDashboardItems","DEFAULT_STATE_EDIT_ITEM_FILTERS","sGetEditItemFiltersRoot","editItemFilters","DEFAULT_STATE_ITEM_FILTERS","sGetItemFiltersRoot","itemFilters","sGetFiltersKeys","keys","acRemoveItemFilter","acRemoveEditItemFilter","saveDashboard","width","height","save","msg","response","uid","updateDashboard","postDashboard","create","acAddDashboardItem","itemPropName","generateUid","content","acUpdateDashboardItem","acRemoveDashboardItem","acSetDashboardStarred","tFetchDashboards","collection","paging","toArray","userRows","sGetControlBarUserRows","controlBar","sGetControlBarRoot","KEY","hasNamespace","currentUser","dataStore","has","getNamespace","apiGetControlBarRows","_callee3","namespace","_context3","t1","t2","key","apiPostControlBarRows","_callee4","rows","_context4","set","acSetControlBarUserRows","DEFAULT_DIMENSIONS","pe","FIXED_DIMENSIONS","ou","sGetDimensions","dimensions","DEFAULT_SETTINGS","keyDateFormat","keyAnalysisRelativePeriod","keyAnalysisDigitGroupSeparator","displayNameProperty","rootOrganisationUnit","sGetSettings","settings","sGetSettingsDisplayNameProperty","acSetDimensions","keyBy","sortBy","toLowerCase","styles","showMore","color","colors","grey700","cursor","fontSize","paddingTop","&:hover","textDecoration","disabled","grey500","withStyles","onClick","isMaxHeight","classes","textAlign","className","MIN_ROW_COUNT","getRowsHeight","getNumRowsFromHeight","FIRST_ROW_PADDING_HEIGHT","getTopOffset","getControlBarHeight","ControlBar","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onStartDrag","setState","dragging","window","addEventListener","onDrag","onEndDrag","event","preventDefault","stopPropagation","newHeight","clientY","onChangeHeight","requestAnimationFrame","removeEventListener","draghandle","onMouseDown","rootStyle","top","backgroundColor","editMode","yellow050","white","paddingBottom","transition","root","children","renderDragHandle","React","Component","defaultProps","StarIcon","xmlns","viewBox","fill","apiPostDataStatistics","eventType","chip","margin","grey600","display","verticalAlign","icon","marginTop","unselected","label","chipProps","selectedState","Star","Link","to","debounce","Chip","AddCircleIcon","teal600","ClearIcon","grey800","ClearButton","onClear","button","Clear","ownerData","DEFAULT_STATE_DASHBOARDS_FILTER_NAME","DEFAULT_STATE_DASHBOARDS_FILTER_OWNER","order","sGetDashboardsFilterRoot","dashboardsFilter","sGetFilterName","KEYCODE_ENTER","KEYCODE_ESCAPE","filterField","searchIcon","Filter","_Component","setFilterValue","onChangeName","target","handleKeyUp","keyCode","onKeypressEnter","inherits","createClass","nextProps","_this$props","startAdornment","InputAdornment_default","position","Search_default","endAdornment","ControlBar_ClearButton","Input_default","placeholder","onChange","onKeyUp","Function","prototype","MAX_ROW_COUNT","DashboardsBar","_getPrototypeOf2","_len","args","_key","setInitialDashboardState","adjustedHeight","newRows","newRowCount","min","onToggleMaxHeight","onSelectDashboard","history","push","selectedId","onChangeFilterName","rowCount","controlBarHeight","contentWrapperStyle","padding","overflowY","components_ControlBar_ControlBar","leftControls","marginRight","AddCircle","ControlBar_Filter","ControlBar_DashboardItemChip","ControlBar_ShowMoreButton","mapDispatchToProps","withRouter","stateProps","dispatchProps","ownProps","displayDashboards","HeaderMenuItem","title","MenuItem","dense","LaunchIcon","LaunchLink","e","launchLink","rel","href","Launch","InsertButton","buttonInsert","ContentMenuItem","onInsert","ItemIcon","menuItem","ContentMenuItem_LaunchLink","ContentMenuItem_InsertButton","singleItems","header","categorizedItems","listItemTypes","CategorizedMenuGroup","addItem","tAddListItemContent","newItem","toggleSeeMore","seeMore","onChangeItemsLimit","_this2","_this$props2","hasMore","react","ItemSelector_HeaderMenuItem","itemUrl","context","ItemSelector_ContentMenuItem","showMoreButton","Divider","contextTypes","PropTypes","isRequired","dashboardItem","listItemType","dashboardItemIndex","findIndex","category","addToDashboard","ItemSearchField","InputField","filled","onFocus","ItemSelector","closeList","openList","fetchItems","anchorEl","currentTarget","setFilter","getCategorizedMenuGroups","itemType","allItems","maxOptions","ItemSelector_CategorizedMenuGroup","getSinglesMenuGroups","ItemSelector_SinglesMenuGroup","getMenuGroups","queryString","add","Set","ItemSelector_ItemSearchField","Popover_default","anchorOrigin","horizontal","vertical","transformOrigin","PaperProps","disableAutoFocus","disableRestoreFocus","Menu","EditTitleBar","onChangeTitle","onChangeDescription","section","titleDescription","TextField_default","variant","multiline","InputProps","input","underline","itemSelector","components_ItemSelector_ItemSelector","selectedDashboard","justifyContent","flex","clear","&::before","borderBottom","&:hover::before","borderRadius","peId","ouId","FilterDialog","onConfirm","dimension","selectedItems","dialogId","commonProps","onSelect","onDeselect","onReorder","build","selectedPeriods","ouItems","dialogTitle","Dialog_default","maxWidth","disableEnforceFocus","dialogContent","DialogActions_default","Button","kind","DEFAULT_STATE_ACTIVE_MODAL_DIMENSION","sGetActiveModalDimension","activeModalDimension","acSetActiveModalDimension","FilterSelector","openPanel","closePanel","closeDialog","clearActiveModalDimension","selectDimension","setActiveModalDimension","onSelectItems","dimensionId","setEditItemFilters","onDeselectItems","itemIdsToRemove","newList","removeEditItemFilter","onReorderItems","itemIds","oldList","reorderedList","saveFilter","filterItems","addItemFilter","removeItemFilter","theme","selectedDimensions","ArrowDropDown_default","Boolean","fontFamily","typography","onDimensionClick","selectedIds","ItemFilter_FilterDialog","filters","withTheme","Info","show","toggle","InfoOutlined_default","NO_DESCRIPTION","actions","alignItems","marginLeft","starIcon","textButton","minWidth","editLink","titleBar","titleBarIcon","ViewTitleBar","toggleSharingDialog","sharingDialogIsOpen","onStarClick","onInfoClick","titleStyle","userSelect","StarBorder","TitleBar_Info","update","manage","ItemFilter_FilterSelector","d2_ui_sharing_dialog_default","onRequestClose","tStarDashboard","black","TitleBar","edit","TitleBar_EditTitleBar","TitleBar_ViewTitleBar","DefaultPlugin","pluginCredentials","shouldPluginReload","prevProps","reloadAllowed","filtersChanged","vis","prevVis","visChanged","reloadPlugin","pluginManager","currentVis","useActiveType","getActiveType","defaultHeaders","Authorization","textDiv","HEADER_HEIGHT","ItemHeader","actionButtons","scrollContainer","line","border","grey100","ItemFooter","objectId","d2_ui_interpretations_default","ItemHeaderButton","iconBase","buttonBase","buttonDisabled","opacity","toggleFooterPadding","grey200","baseStyle","container","disabledStyle","activeStyle","primary800","primary100","inactiveStyle","getItemTypeId","VisualizationItemHeaderButtons","activeFooter","onToggleFooter","toggleFooterBase","toggleFooter","components_Item_ItemHeaderButton","Message_default","chartType","onSelectVisualization","match","tableButtonStyle","tableBtnStyle","chartButtonStyle","chartBtnStyle","mapButtonStyle","mapBtnStyle","ViewList_default","InsertChart_default","Public_default","renderInterpretationButton","renderVisualizationButtons","memoizeOne","fn","lastArgs","lastValue","every","arg","overflow","textOverflow","whiteSpace","fontStretch","lineHeight","applyFilters","visRows","visColumns","columns","visFilters","dimensionFound","dimensionObjects","Item","showFooter","configLoaded","getUniqueKey","uniqueId","getPluginComponent","getContentStyle","data_visualizer_plugin_build","forDashboard","VisualizationItem_DefaultPlugin","onToggleItemExpanded","getTitle","itemName","Launch_default","getActionButtons","ItemHeaderButtons","contentRef","offsetHeight","createRef","_componentDidMount","onVisualizationLoaded","_this$props3","Item_ItemHeader","ref","VisualizationItem_ItemFooter","acReceivedActiveVisualization","Line","PRIVATE","messageTypes","_messageTypes","listStyleType","paddingLeft","seeAll","marginBottom","sender","snippet","maxHeight","MessagesItem","getMessageHref","msgIdentifier","messageType","getMessageSender","latestMsg","getMessageItems","editClass","readClass","read","msgDate","location","messageCount","userSettings","widgets_Line","string","MessagesContainer","NotSupportedItem","NotInterested_default","align","DeleteIcon","red500","getItemTitle","removeContent","handler","contentToRemove","ListItem","tRemoveListItemContent","contentItems","getContentItems","contentItem","Description","deleteButton","Delete","grey900","newContent","textField","onChangeText","updatedItem","d2_ui_rich_text","onEdit","fullWidth","textDivStyle","viewItem","getIframeSrc","appDetails","iframeSrc","ouIds","ouPath","AppItem","appKey","system","installedApps","app","src","SpacerItem","GridItem","VisualizationItem","TextItem","getGridItem","right","DeleteItemHeaderButton","Delete_default","NoContentMessage","ProgressiveLoadingContainer","shouldLoad","containerRef","shouldLoadHandler","bufferPx","bufferFactor","innerHeight","rect","getBoundingClientRect","bottom","removeHandler","checkShouldLoad","debounceMs","registerHandler","_this3","objectWithoutProperties","ItemGrid","expandedItems","clickedId","isExpanded","onRemoveItem","onLayoutChange","newLayout","acUpdateDashboardLayout","onResizeStop","layout","oldItem","pluginResize","onRemoveItemWrapper","widgets_NoContentMessage","expandedItem","hProp","minH","ScreenCover","CircularProgress","react_grid_layout_default","cols","rowHeight","innerWidth","compactType","isDraggable","isResizable","draggableCancel","itemClassNames","Item_ProgressiveLoadingContainer","DeleteItemButton","Item_Item_Item","validItems","badgeContainer","badge","badgeRemove","FilterBadge","onRemove","count","FilterBar","onBadgeRemove","onBadgeClick","bar","FilterBar_FilterBadge","removeItemFIlter","filtersSelector","createSelector","arr","flexWrap","DashboardContent","components_TitleBar_TitleBar","components_FilterBar_FilterBar","components_ItemGrid_ItemGrid","Content","hasDashboardContent","dashboardsIsEmpty","Dashboard_DashboardContent","dashboardsLoaded","contentNotReady","ControlBar_DashboardsBar","Dashboard_DashboardVerticalOffset","ViewDashboard_Content","ConfirmDeleteDialog","onDeleteConfirmed","onContinueEditing","secondary","destructive","DialogTitle_default","DialogContent_default","DialogContentText_default","buttonBarStyle","EditBar","translationDialogIsOpen","dashboardModel","confirmDeleteDialogOpen","redirectUrl","onConfirmDelete","onSave","newId","onDiscard","onDiscardChanges","onDelete","onTranslationsSaved","translations","dbLocale","translation","property","onTranslate","fetchDashboardModel","toggleTranslationDialog","confirmDeleteDialog","deleteAccess","ControlBar_ConfirmDeleteDialog","translationDialog","d2_ui_translation_dialog_default","objectToTranslate","fieldsToTranslate","onTranslationSaved","onTranslationError","err","Redirect","updateAccess","discardBtnText","primary","rightControls","sGetIsNewDashboard","dashboardToSave","_x6","_x7","tDeleteDashboard","acSetDashboardDisplayName","EditDashboard","initialized","initEditDashboard","setEditDashboard","getDashboardContent","EditDashboard_Content","ControlBar_EditBar","NewDashboard","setNewDashboard","Dashboard","setDashboard","params","selectDashboard","scrollToTop","scrollTo","mode","Dashboard_EditDashboard","Dashboard_NewDashboard","Dashboard_ViewDashboard","dashboardToSelect","preferredId","getItem","App","setCurrentUser","fetchDashboards","setControlBarRows","setDimensions","HeaderBar_default","HashRouter","Switch","Route","exact","path","render","components_Dashboard_Dashboard","components_SnackbarMessage_SnackbarMessage","childContextTypes","controlBarRows","displayNameProp","filteredDimensions","apiFetchDimensions","dim","dimensionType","dataDimensionType","tSetDimensions","moment","addResources","arTranslations","daTranslations","enTranslations","esTranslations","frTranslations","idTranslations","kmTranslations","loTranslations","myTranslations","prsTranslations","psTranslations","ptTranslations","pt_BRTranslations","ruTranslations","svTranslations","tetTranslations","tgTranslations","ukTranslations","urTranslations","viTranslations","zhTranslations","setDefaultNamespace","changeLanguage","objectClean","conversations","$merge","d2Object","keyUiLocale","authorities","newState","k","$unshift","idToRemove","$splice","stateItems","newStateItems","stateItem","si","$set","configureStore","middleware","thunk","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducer","applyMiddleware","dhis2theme","palette","dark","configI18n","sources","manifest","isProd","getManifest","info","version","manifest_generated_at","process","activities","dhis","dhis2","apiVersion","headers","schemas","getUserSettings","d2Init","initializedD2","ReactDOM","es","store","createMuiTheme","src_components_App","getElementById","init"],"mappings":"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","file":"static/js/main.6313eb4a.chunk.js","sourcesContent":["import i18n from '@dhis2/d2-i18n';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\nimport ExtensionIcon from '@material-ui/icons/Extension';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport PersonIcon from '@material-ui/icons/Person';\nimport FontDownloadIcon from '@material-ui/icons/FontDownload';\nimport EmailIcon from '@material-ui/icons/Email';\nimport CropFreeIcon from '@material-ui/icons/CropFree';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nimport { getBaseUrl } from './util';\n\n// Item types\nexport const REPORT_TABLE = 'REPORT_TABLE';\nexport const CHART = 'CHART';\nexport const MAP = 'MAP';\nexport const EVENT_REPORT = 'EVENT_REPORT';\nexport const EVENT_CHART = 'EVENT_CHART';\nexport const APP = 'APP';\nexport const REPORTS = 'REPORTS';\nexport const RESOURCES = 'RESOURCES';\nexport const USERS = 'USERS';\nexport const MESSAGES = 'MESSAGES';\nexport const TEXT = 'TEXT';\nexport const SPACER = 'SPACER';\n\n// Domain types\nexport const DOMAIN_TYPE_AGGREGATE = 'AGGREGATE';\nexport const DOMAIN_TYPE_TRACKER = 'TRACKER';\n\n// Visualization types\nexport const VISUALIZATION_TYPE_TABLE = 'TABLE';\nexport const VISUALIZATION_TYPE_CHART = 'CHART';\nexport const VISUALIZATION_TYPE_MAP = 'MAP';\n\n// TODO: Import this from @dhis2/analytics when available\nexport const CHART_TYPE_SINGLE_VALUE = 'SINGLE_VALUE';\n\n// Dashboard helpers\nexport const spacerContent = 'SPACER_ITEM_FOR_DASHBOARD_LAYOUT_CONVENIENCE';\nexport const emptyTextItemContent = 'TEXT_ITEM_WITH_NO_CONTENT';\nexport const isSpacerType = item =>\n    item.type === TEXT && item.text === spacerContent;\nexport const isTextType = item =>\n    item.type === TEXT && item.text !== spacerContent;\nexport const isPluginType = item =>\n    itemTypeMap[item.type].hasOwnProperty('plugin');\n\nexport const getPlugin = type => {\n    const pluginName = itemTypeMap[type].plugin;\n\n    if (type === CHART) {\n        return true;\n    }\n\n    return global[pluginName];\n};\n\n// Item type map\nexport const itemTypeMap = {\n    [REPORT_TABLE]: {\n        id: REPORT_TABLE,\n        endPointName: 'reportTables',\n        propName: 'reportTable',\n        pluralTitle: i18n.t('Pivot tables'),\n        plugin: 'reportTablePlugin',\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        visualizationType: VISUALIZATION_TYPE_TABLE,\n        appUrl: id => `dhis-web-pivot/?id=${id}`,\n        appName: i18n.t('Pivot Tables'),\n    },\n    [CHART]: {\n        id: CHART,\n        endPointName: 'charts',\n        propName: 'chart',\n        pluralTitle: i18n.t('Charts'),\n        plugin: 'chartPlugin',\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        visualizationType: VISUALIZATION_TYPE_CHART,\n        appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n        appName: i18n.t('Visualizer'),\n    },\n    [MAP]: {\n        id: MAP,\n        endPointName: 'maps',\n        propName: 'map',\n        pluralTitle: i18n.t('Maps'),\n        plugin: 'mapPlugin',\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        visualizationType: VISUALIZATION_TYPE_MAP,\n        appUrl: id => `dhis-web-maps/?id=${id}`,\n        appName: i18n.t('Maps'),\n    },\n    [EVENT_REPORT]: {\n        id: EVENT_REPORT,\n        endPointName: 'eventReports',\n        propName: 'eventReport',\n        pluralTitle: i18n.t('Event reports'),\n        plugin: 'eventReportPlugin',\n        domainType: DOMAIN_TYPE_TRACKER,\n        visualizationType: VISUALIZATION_TYPE_TABLE,\n        appUrl: id => `dhis-web-event-reports/?id=${id}`,\n        appName: i18n.t('Event Reports'),\n    },\n    [EVENT_CHART]: {\n        id: EVENT_CHART,\n        endPointName: 'eventCharts',\n        propName: 'eventChart',\n        pluralTitle: i18n.t('Event charts'),\n        plugin: 'eventChartPlugin',\n        domainType: DOMAIN_TYPE_TRACKER,\n        visualizationType: VISUALIZATION_TYPE_CHART,\n        appUrl: id => `dhis-web-event-visualizer/?id=${id}`,\n        appName: i18n.t('Event Visualizer'),\n    },\n    [APP]: {\n        endPointName: 'apps',\n        propName: 'appKey',\n        pluralTitle: i18n.t('Apps'),\n    },\n    [REPORTS]: {\n        id: REPORTS,\n        endPointName: 'reports',\n        propName: 'reports',\n        pluralTitle: i18n.t('Reports'),\n        appUrl: id =>\n            `dhis-web-reporting/getReportParams.action?mode=report&uid=${id}`,\n    },\n    [RESOURCES]: {\n        id: RESOURCES,\n        endPointName: 'resources',\n        propName: 'resources',\n        pluralTitle: i18n.t('Resources'),\n        appUrl: id => `api/documents/${id}/data`,\n    },\n    [USERS]: {\n        id: USERS,\n        endPointName: 'users',\n        propName: 'users',\n        pluralTitle: i18n.t('Users'),\n        appUrl: id => `dhis-web-dashboard-integration/profile.action?id=${id}`,\n    },\n    [TEXT]: {\n        id: TEXT,\n        propName: 'text',\n    },\n    [MESSAGES]: {\n        propName: 'messages',\n    },\n    [SPACER]: {\n        propName: 'text',\n    },\n};\n\nexport const getEndPointName = type => itemTypeMap[type].endPointName;\n\nexport const getItemUrl = (type, item, d2) => {\n    let url;\n\n    if (type === APP) {\n        url = item.launchUrl;\n    }\n\n    if (itemTypeMap[type] && itemTypeMap[type].appUrl) {\n        url = `${getBaseUrl(d2)}/${itemTypeMap[type].appUrl(item.id)}`;\n    }\n\n    return url;\n};\n\nexport const getItemIcon = type => {\n    switch (type) {\n        case REPORT_TABLE:\n        case EVENT_REPORT:\n        case REPORTS:\n            return TableIcon;\n        case CHART:\n        case EVENT_CHART:\n            return ChartIcon;\n        case MAP:\n            return MapIcon;\n        case APP:\n            return ExtensionIcon;\n        case RESOURCES:\n            return DescriptionIcon;\n        case USERS:\n            return PersonIcon;\n        case TEXT:\n            return FontDownloadIcon;\n        case MESSAGES:\n            return EmailIcon;\n        case SPACER:\n            return CropFreeIcon;\n        default:\n            return NotInterestedIcon;\n    }\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Item_list__2oHc1\",\"item\":\"Item_item__lO40M\",\"itemicon\":\"Item_itemicon__dv5ah\",\"link\":\"Item_link__2gULT\",\"deleteicon\":\"Item_deleteicon__3c7bl\",\"deletebutton\":\"Item_deletebutton__1DfY5\"};","import isObject from 'lodash/isObject';\n\n// validation\nexport function orNull(param) {\n    return param === undefined ? null : param;\n}\n\nexport function orArray(param) {\n    return Array.isArray(param) ? param : [];\n}\n\nexport function orObject(param) {\n    return isObject(param) ? param : {};\n}\n\n// array\nexport function arrayGetById(array, id) {\n    return array.find(item => item.id === id);\n}\n\n// object\nexport function arrayToIdMap(array) {\n    return array.reduce((obj, item) => {\n        obj[item.id] = item;\n        return obj;\n    }, {});\n}\n\n// date\nexport function getDate() {\n    const y = Math.floor(Math.random() * 3) + 2015;\n    const M = Math.floor(Math.random() * 12) + 1;\n    const d = Math.floor(Math.random() * 28) + 1;\n    // const h = Math.floor(Math.random() * 23) + 1;\n    // const m = Math.floor(Math.random() * 59) + 1;\n    // const s = Math.floor(Math.random() * 59) + 1;\n\n    return new Date(`${y}-${M}-${d}`)\n        .toJSON()\n        .replace('T', ' ')\n        .substr(0, 10);\n}\n\nexport const formatDate = (value, uiLocale) => {\n    if (typeof global.Intl !== 'undefined' && Intl.DateTimeFormat) {\n        const locale = uiLocale || 'en';\n        return new Intl.DateTimeFormat(locale, {\n            year: 'numeric',\n            month: 'short',\n            day: 'numeric',\n        }).format(new Date(value));\n    }\n\n    return value.substr(0, 19).replace('T', ' ');\n};\n\n/**\n * Sorts an array of objects based on provided date property\n *\n * @param {Array} items Array of objects\n * @param {String} dateProp Name of the date property to be used for sorting\n * @param {Boolean} ascending Whether to sort ascending or descending\n */\nexport const sortByDate = (items, dateProp, ascending = true) => {\n    const values = Object.values(items);\n\n    values.sort((a, b) => {\n        const aDate = new Date(a[dateProp]);\n        const bDate = new Date(b[dateProp]);\n\n        return ascending ? aDate - bDate : bDate - aDate;\n    });\n\n    return values;\n};\n\n// reducer validator\nexport const validateReducer = (value, defaultValue) =>\n    value === undefined || value === null ? defaultValue : value;\n\nexport const getBaseUrl = d2 => {\n    const api = d2.Api.getApi();\n    const idx = api.baseUrl.indexOf('/api');\n    return idx > -1 ? api.baseUrl.slice(0, idx) : api.baseUrl;\n};\n\nexport const getWithoutId = object => ({\n    ...object,\n    id: undefined,\n});\n","export const RECEIVED_USER = 'RECEIVED_USER';\n\nexport const DEFAULT_STATE_USER = {\n    id: '',\n    username: '',\n    uiLocale: '',\n    isSuperuser: false,\n};\n\nexport default (state = DEFAULT_STATE_USER, action) => {\n    switch (action.type) {\n        case RECEIVED_USER: {\n            return fromD2ToUserObj(action.value);\n        }\n        default:\n            return state;\n    }\n};\n\nfunction fromD2ToUserObj(d2Object) {\n    return {\n        id: d2Object.id,\n        username: d2Object.username,\n        uiLocale: d2Object.settings.keyUiLocale,\n        isSuperuser: d2Object.authorities.has('ALL'),\n    };\n}\n\n// selectors\n\nexport const sGetUserId = state => state.user.id;\nexport const sGetUserUsername = state => state.user.username;\nexport const sGetIsSuperuser = state => state.user.isSuperuser;\nexport const sGetUiLocale = state => state.user.uiLocale;\n","/** @module reducers/dashboards */\n\nimport arrayFrom from 'd2-utilizr/lib/arrayFrom';\nimport arraySort from 'd2-utilizr/lib/arraySort';\n\nimport { orArray, orObject } from '../modules/util';\nimport {\n    SPACER,\n    isSpacerType,\n    isTextType,\n    emptyTextItemContent,\n} from '../modules/itemTypes';\n\nexport const SET_DASHBOARDS = 'SET_DASHBOARDS';\nexport const ADD_DASHBOARDS = 'ADD_DASHBOARDS';\nexport const SET_DASHBOARD_STARRED = 'SET_DASHBOARD_STARRED';\nexport const SET_DASHBOARD_DISPLAY_NAME = 'SET_DASHBOARD_DISPLAY_NAME';\nexport const SET_DASHBOARD_ITEMS = 'SET_DASHBOARD_ITEMS';\n\nexport const DEFAULT_STATE_DASHBOARDS = {\n    byId: null,\n    items: [],\n};\n\n// reducer helper functions\n\nconst updateDashboardProp = (state, dashboardId, prop, value) => ({\n    byId: {\n        ...state.byId,\n        [dashboardId]: {\n            ...state.byId[dashboardId],\n            [prop]: value,\n        },\n    },\n    items: state.items,\n});\n\n/**\n * Reducer that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n * @returns {Object}\n */\nexport default (state = DEFAULT_STATE_DASHBOARDS, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS: {\n            return {\n                byId: action.value,\n                items: [],\n            };\n        }\n        case ADD_DASHBOARDS: {\n            return {\n                ...state,\n                byId: {\n                    ...state.byId,\n                    ...action.value,\n                },\n            };\n        }\n        case SET_DASHBOARD_STARRED: {\n            return updateDashboardProp(\n                state,\n                action.dashboardId,\n                'starred',\n                action.value\n            );\n        }\n        case SET_DASHBOARD_DISPLAY_NAME: {\n            return updateDashboardProp(\n                state,\n                action.dashboardId,\n                'displayName',\n                action.value\n            );\n        }\n        case SET_DASHBOARD_ITEMS: {\n            return {\n                ...state,\n                items: action.value,\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// root selector\n\nexport const sGetDashboardsRoot = state => state.dashboards;\n\n// selector level 1\n\n/**\n * Selector which returns a dashboard by id from the state object\n * If no matching dashboard is found it returns undefined\n * If dashboards.byId is null, then the dashboards api request\n * has not yet completed. If dashboards.byId is an empty object\n * then the dashboards api request is complete, but no dashboards\n * were returned\n *\n * @function\n * @param {Object} state The current state\n * @param {Number} id The id of the dashboard\n * @returns {Object | undefined}\n */\nexport const sGetDashboardById = (state, id) =>\n    orObject(sGetDashboardsRoot(state).byId)[id];\n\nexport const sDashboardsIsFetching = state => {\n    return sGetDashboardsRoot(state).byId === null;\n};\n\n/**\n * Selector which returns all dashboards (the byId object)\n *\n * @function\n * @param {Object} state The current state\n * @returns {Object | undefined}\n */\nexport const sGetAllDashboards = state =>\n    orObject(sGetDashboardsRoot(state).byId);\n\n/**\n * Selector which returns the current dashboard items\n *\n * @function\n * @param {Object} state The current state\n * @returns {Array}\n */\nexport const sGetDashboardItems = state => sGetDashboardsRoot(state).items;\n\n// selector level 2\n\nexport const sGetStarredDashboards = state =>\n    Object.values(sGetAllDashboards(state)).filter(\n        dashboard => dashboard.starred === true\n    );\n\nexport const sGetUnstarredDashboards = state =>\n    Object.values(sGetAllDashboards(state)).filter(\n        dashboard => dashboard.starred === false\n    );\n\n// selector level 3\n\nexport const sGetStarredDashboardIds = state => {\n    return sGetStarredDashboards(state).map(dashboard => dashboard.id);\n};\n\nexport const sGetUnstarredDashboardIds = state =>\n    sGetUnstarredDashboards(state).map(dashboard => dashboard.id);\n\nexport const sGetDashboardsSortedByStarred = state => [\n    ...arraySort(sGetStarredDashboards(state), 'ASC', 'displayName'),\n    ...arraySort(sGetUnstarredDashboards(state), 'ASC', 'displayName'),\n];\n\n// utils\n\n/**\n * Returns the array of dashboards, customized for ui\n * @function\n * @param {Array} data The original dashboard list\n * @returns {Array}\n */\nexport const getCustomDashboards = data => {\n    const uiItems = items =>\n        items.map(item => {\n            const type = isSpacerType(item) ? SPACER : item.type;\n            const text = isTextType(item)\n                ? item.text === emptyTextItemContent\n                    ? ''\n                    : item.text\n                : null;\n\n            return {\n                ...item,\n                ...(text !== null ? { text } : {}),\n                type,\n            };\n        });\n\n    return arrayFrom(data).map((d, index) => ({\n        id: d.id,\n        name: d.name,\n        displayName: d.displayName,\n        description: d.description,\n        displayDescription: d.displayDescription,\n        starred: d.favorite,\n        owner: d.user.name,\n        created: d.created\n            .split('T')\n            .join(' ')\n            .substr(0, 16),\n        lastUpdated: d.lastUpdated\n            .split('T')\n            .join(' ')\n            .substr(0, 16),\n        access: d.access,\n        numberOfItems: orArray(d.dashboardItems).length,\n        dashboardItems: uiItems(d.dashboardItems),\n    }));\n};\n","/** @module reducers/selected */\nimport { combineReducers } from 'redux';\n\nimport { validateReducer } from '../modules/util';\n\nexport const SET_SELECTED_ID = 'SET_SELECTED_ID';\nexport const SET_SELECTED_ISLOADING = 'SET_SELECTED_ISLOADING';\nexport const SET_SELECTED_SHOWDESCRIPTION = 'SET_SELECTED_SHOWDESCRIPTION';\n\nexport const DEFAULT_STATE_SELECTED_ID = null;\nexport const DEFAULT_STATE_SELECTED_ISLOADING = false;\nexport const DEFAULT_STATE_SELECTED_SHOWDESCRIPTION = false;\n\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\nconst id = (state = DEFAULT_STATE_SELECTED_ID, action) => {\n    switch (action.type) {\n        case SET_SELECTED_ID:\n            return validateReducer(action.value, DEFAULT_STATE_SELECTED_ID);\n        default:\n            return state;\n    }\n};\n\nconst isLoading = (state = DEFAULT_STATE_SELECTED_ISLOADING, action) => {\n    switch (action.type) {\n        case SET_SELECTED_ISLOADING:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_SELECTED_ISLOADING\n            );\n        default:\n            return state;\n    }\n};\n\nconst showDescription = (\n    state = DEFAULT_STATE_SELECTED_SHOWDESCRIPTION,\n    action\n) => {\n    switch (action.type) {\n        case SET_SELECTED_SHOWDESCRIPTION:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_SELECTED_SHOWDESCRIPTION\n            );\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    id,\n    isLoading,\n    showDescription,\n});\n\n// Selectors\n\nexport const sGetSelectedRoot = state => state.selected;\n\nexport const sGetSelectedId = state => sGetSelectedRoot(state).id;\n\nexport const sGetSelectedIsLoading = state => sGetSelectedRoot(state).isLoading;\n\nexport const sGetSelectedShowDescription = state =>\n    sGetSelectedRoot(state).showDescription;\n","import { orObject } from '../modules/util';\nimport objectClean from 'd2-utilizr/lib/objectClean';\n\n/** @module reducers/visualizations */\n\nexport const RECEIVED_VISUALIZATION = 'RECEIVED_VISUALIZATION';\nexport const RECEIVED_ACTIVE_VISUALIZATION = 'RECEIVED_ACTIVE_VISUALIZATION';\n\nexport const DEFAULT_STATE_VISUALIZATIONS = {};\n\nconst isEmpty = p => p === undefined || p === null;\n\nexport default (state = DEFAULT_STATE_VISUALIZATIONS, action) => {\n    switch (action.type) {\n        case RECEIVED_VISUALIZATION: {\n            return {\n                ...state,\n                [action.value.id]: objectClean(\n                    {\n                        ...orObject(state[action.value.id]),\n                        ...action.value,\n                    },\n                    isEmpty\n                ),\n            };\n        }\n        case RECEIVED_ACTIVE_VISUALIZATION: {\n            return {\n                ...state,\n                [action.id]: objectClean(\n                    {\n                        ...orObject(state[action.id]),\n                        activeType: action.activeType,\n                    },\n                    isEmpty\n                ),\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// root selector\nexport const sGetVisualizationsRoot = state => state.visualizations;\n\n// selectors level 1\nexport const sGetVisualization = (state, id) => {\n    return sGetVisualizationsRoot(state)[id];\n};\n","import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\n\nimport { getEndPointName } from '../modules/itemTypes';\n\n// Id, name\nexport const getIdNameFields = ({ rename } = {}) => [\n    'id',\n    `${rename ? 'displayName~rename(name)' : 'name,displayName'}`,\n];\n\n// Item\nexport const getItemFields = () => [\n    'dimensionItem~rename(id)',\n    'displayName~rename(name)',\n    'dimensionItemType',\n];\n\n// Dimension\nexport const getDimensionFields = ({ withItems }) =>\n    arrayClean([\n        'dimension',\n        'legendSet[id]',\n        'filter',\n        'programStage',\n        withItems ? `items[${getItemFields().join(',')}]` : ``,\n    ]);\n\n// Axis\nexport const getAxesFields = ({ withItems }) => [\n    `columns[${getDimensionFields({ withItems }).join(',')}]`,\n    `rows[${getDimensionFields({ withItems }).join(',')}]`,\n    `filters[${getDimensionFields({ withItems }).join(',')}]`,\n];\n\n// Favorite\nexport const getFavoriteFields = ({ withDimensions, withOptions }) => {\n    return arrayClean([\n        `${getIdNameFields({ rename: true }).join(',')}`,\n        'displayDescription~rename(description)',\n        withDimensions ? `${getAxesFields({ withItems: true }).join(',')}` : ``,\n        withOptions\n            ? [\n                  '*',\n                  '!attributeDimensions',\n                  '!attributeValues',\n                  '!category',\n                  '!categoryDimensions',\n                  '!categoryOptionGroupSetDimensions',\n                  '!columnDimensions',\n                  '!dataDimensionItems',\n                  '!dataElementDimensions',\n                  '!dataElementGroupSetDimensions',\n                  '!filterDimensions',\n                  '!itemOrganisationUnitGroups',\n                  '!lastUpdatedBy',\n                  '!organisationUnitGroupSetDimensions',\n                  '!organisationUnitLevels',\n                  '!organisationUnits',\n                  '!programIndicatorDimensions',\n                  '!relativePeriods',\n                  '!reportParams',\n                  '!rowDimensions',\n                  '!series',\n                  '!translations',\n                  '!userOrganisationUnit',\n                  '!userOrganisationUnitChildren',\n                  '!userOrganisationUnitGrandChildren',\n              ].join(',')\n            : '',\n    ]);\n};\n\nexport const getFavoritesFields = ({ withDimensions, withOptions }) => [\n    `reportTable[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `chart[${['type', ...getFavoriteFields({ withDimensions })].join(',')}]`,\n    `map[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `eventReport[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `eventChart[${getFavoriteFields({ withDimensions }).join(',')}]`,\n];\n\n// List item\nexport const getListItemFields = () => [\n    `reports[${getIdNameFields({ rename: true }).join(',')}]`,\n    `resources[${getIdNameFields({ rename: true }).join(',')}]`,\n    `users[${getIdNameFields({ rename: true }).join(',')}]`,\n];\n\n// Map\nexport const getMapFields = () => [\n    `${getIdNameFields({ rename: true }).join(',')}`,\n    'user,longitude,latitude,zoom,basemap',\n    `mapViews[${getFavoriteFields({\n        withDimensions: true,\n        withOptions: true,\n    })}]`,\n];\n\n// Api\n\n// Get more info about the favorite of a dashboard item\nexport const apiFetchFavorite = (id, type, { fields }) =>\n    getInstance().then(d2 =>\n        d2.Api.getApi().get(`${getEndPointName(type)}/${id}`, {\n            fields:\n                fields ||\n                getFavoriteFields({\n                    withDimensions: true,\n                    withOptions: true,\n                }),\n        })\n    );\n","import arrayClean from 'd2-utilizr/lib/arrayClean';\nimport {\n    getListItemFields,\n    getFavoritesFields,\n    getIdNameFields,\n} from './metadata';\n\n// Helper functions\n\nexport const onError = error => console.log('Error: ', error);\n\n// Dashboard item\nexport const getDashboardItemsFields = ({ withFavorite } = {}) =>\n    arrayClean([\n        'id',\n        'type',\n        'shape',\n        'x',\n        'y',\n        'width~rename(w)',\n        'height~rename(h)',\n        'messages',\n        'text',\n        'appKey',\n        `${getListItemFields().join(',')}`,\n        withFavorite\n            ? `${getFavoritesFields({\n                  withDimensions: withFavorite.withDimensions,\n              }).join(',')}`\n            : ``,\n    ]);\n\n// Dashboard\nexport const getDashboardFields = ({ withItems, withFavorite } = {}) =>\n    arrayClean([\n        `${getIdNameFields().join(',')}`,\n        'description',\n        'displayDescription',\n        'favorite',\n        `user[${getIdNameFields({ rename: true }).join(',')}]`,\n        'created',\n        'lastUpdated',\n        'access',\n        withItems\n            ? `dashboardItems[${getDashboardItemsFields({\n                  withFavorite,\n              }).join(',')}]`\n            : ``,\n    ]);\n","import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { onError, getDashboardFields } from './index';\n\n// Get \"all\" dashboards on startup\nexport const apiFetchDashboards = () =>\n    getInstance()\n        .then(d2 =>\n            d2.models.dashboard.list({\n                fields: [\n                    getDashboardFields().join(','),\n                    'dashboardItems[id]',\n                ].join(','),\n                paging: 'false',\n            })\n        )\n        .catch(onError);\n\n// Get more info about selected dashboard\nexport const apiFetchDashboard = id =>\n    getInstance()\n        .then(d2 =>\n            d2.models.dashboard.get(id, {\n                fields: arrayClean(\n                    getDashboardFields({\n                        withItems: true,\n                        withFavorite: { withDimensions: false },\n                    })\n                ).join(','),\n            })\n        )\n        .catch(onError);\n\n// Star dashboard\nexport const apiStarDashboard = (id, isStarred) => {\n    const url = `dashboards/${id}/favorite`;\n\n    getInstance().then(d2 => {\n        if (isStarred) {\n            d2.Api.getApi().post(url);\n        } else {\n            d2.Api.getApi().delete(url);\n        }\n    });\n};\n\nexport const apiDeleteDashboard = id => {\n    return getInstance()\n        .then(d2 => {\n            return d2.models.dashboards\n                .get(id)\n                .then(dashboard => dashboard.delete());\n        })\n        .catch(onError);\n};\n","import isFunction from 'd2-utilizr/lib/isFunction';\n\nimport { orObject } from '../../modules/util';\n\n// Dimensions for the react-grid-layout\n\nexport const GRID_COMPACT_TYPE = 'vertical'; // vertical | horizonal | null\nexport const GRID_ROW_HEIGHT = 10;\nconst GRID_COLUMN_WIDTH_PX = 20;\nconst GRID_LAYOUT = 'FLEXIBLE'; // FIXED | FLEXIBLE\nexport const MARGIN = [10, 10];\n\nexport const NEW_ITEM_SHAPE = { x: 0, y: 0, w: 20, h: 29 };\nexport const ITEM_MIN_HEIGHT = 4;\n\n// Dimensions for getShape\n\nconst NUMBER_OF_ITEM_COLS = 2;\nconst GRID_COLUMNS = 60;\n\nexport const getGridColumns = () => {\n    switch (GRID_LAYOUT) {\n        case 'FLEXIBLE':\n            return GRID_COLUMNS;\n        case 'FIXED':\n            return Math.floor((window.innerWidth - 20) / GRID_COLUMN_WIDTH_PX);\n        default:\n            return GRID_COLUMNS;\n    }\n};\n\n// isNonNegativeInteger\n\nconst isNonNegativeInteger = x => Number.isInteger(x) && x >= 0;\n\n// Does the item have all the shape properties?\n\nexport const hasShape = item =>\n    isNonNegativeInteger(item.x) &&\n    isNonNegativeInteger(item.y) &&\n    isNonNegativeInteger(item.w) &&\n    isNonNegativeInteger(item.h);\n\n// returns a rectangular grid block dimensioned with x, y, w, h in grid units.\n// based on a grid with 3 items across\nexport const getShape = i => {\n    if (!isNonNegativeInteger(i)) {\n        throw new Error('Invalid grid block number');\n    }\n\n    const col = i % NUMBER_OF_ITEM_COLS;\n    const row = Math.floor(i / NUMBER_OF_ITEM_COLS);\n    const itemWidth = Math.floor((GRID_COLUMNS - 1) / NUMBER_OF_ITEM_COLS);\n    const itemHeight = GRID_ROW_HEIGHT * 2;\n\n    return {\n        x: col * itemWidth,\n        y: row * itemHeight,\n        w: itemWidth,\n        h: itemHeight,\n    };\n};\n\n/**\n * Calculates the grid item's original height in pixels based\n * on the height in grid units. This calculation\n * is copied directly from react-grid-layout GridItem.js (calcPosition)\n *\n * @param {Object} item item containing shape (x, y, w, h)\n */\nconst getOriginalHeight = item => {\n    const originalHeight = Math.round(\n        GRID_ROW_HEIGHT * item.h + Math.max(0, item.h - 1) * MARGIN[1]\n    );\n\n    return { originalHeight };\n};\n\n/**\n * Returns an array of items containing the x, y, w, h dimensions\n * and the item's originalheight in pixels\n * @function\n * @param {Array} items\n * @returns {Array}\n */\n\nexport const withShape = items =>\n    items.map((item, index) => {\n        const itemWithShape = hasShape(item)\n            ? item\n            : Object.assign({}, item, getShape(index));\n\n        return Object.assign(\n            {},\n            itemWithShape,\n            getOriginalHeight(itemWithShape)\n        );\n    });\n\nexport const getGridItemDomId = id => `item-${id}`;\n\nexport function onItemResize(id) {\n    const el = orObject(document.querySelector(`#${getGridItemDomId(id)}`));\n    if (isFunction(el.setViewportSize))\n        setTimeout(\n            () => el.setViewportSize(el.clientWidth - 5, el.clientHeight - 5),\n            10\n        );\n}\n","import update from 'immutability-helper';\nimport { arrayToIdMap } from '../modules/util';\n\nexport const RECEIVED_MESSAGES = 'RECEIVED_MESSAGES';\n\nexport default (state = {}, action) => {\n    switch (action.type) {\n        case RECEIVED_MESSAGES: {\n            const conversations = arrayToIdMap(action.value);\n\n            const newState = update(state, { $merge: conversations });\n\n            return newState;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetMessagesRoot = state => state.messages;\n","import { getInstance } from 'd2';\n\nexport const getMessages = () => {\n    const fields =\n        'id,messageCount,lastUpdated,messageType,displayName,read,messages[id,read,sender[id,displayName],text,lastUpdated]';\n    const url = `/messageConversations?fields=${fields}&order=read:asc&pageSize=200`;\n    return getInstance()\n        .then(d2 => d2.Api.getApi().get(url))\n        .catch(error => console.log('Error:', error));\n};\n","export const RECEIVED_SNACKBAR_MESSAGE = 'RECEIVED_SNACKBAR_MESSAGE';\nexport const CLOSE_SNACKBAR = 'CLOSE_SNACKBAR';\n\nexport const DEFAULT_STATE_SNACKBAR = {\n    message: {},\n    duration: null,\n    open: false,\n};\n\nexport default (state = DEFAULT_STATE_SNACKBAR, action) => {\n    switch (action.type) {\n        case RECEIVED_SNACKBAR_MESSAGE: {\n            return { ...state, ...action.value };\n        }\n        case CLOSE_SNACKBAR: {\n            return DEFAULT_STATE_SNACKBAR;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetSnackbar = state => state.snackbar || DEFAULT_STATE_SNACKBAR;\n","import {\n    RECEIVED_SNACKBAR_MESSAGE,\n    CLOSE_SNACKBAR,\n} from '../reducers/snackbar';\n\nexport const acReceivedSnackbarMessage = value => ({\n    type: RECEIVED_SNACKBAR_MESSAGE,\n    value,\n});\n\nexport const acCloseSnackbar = () => ({\n    type: CLOSE_SNACKBAR,\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nimport { sGetSnackbar } from '../../reducers/snackbar';\nimport { acCloseSnackbar } from '../../actions/snackbar';\n\nconst LOADING_DASHBOARD = 'LOADING_DASHBOARD';\nexport const loadingDashboardMsg = { name: '', type: LOADING_DASHBOARD };\n\nconst SnackbarMessageContent = ({ message }) => {\n    if (typeof message === 'object') {\n        //future message types:  switch(message.type)\n        return (\n            <span>\n                Loading <span style={{ fontWeight: 800 }}>{message.name}</span>{' '}\n                dashboard\n            </span>\n        );\n    }\n    return message;\n};\n\nexport const SnackbarMessage = props => {\n    return (\n        <Snackbar\n            style={{ zIndex: 10001 }}\n            open={props.snackbarOpen}\n            message={<SnackbarMessageContent message={props.snackbarMessage} />}\n            autoHideDuration={props.snackbarDuration}\n            onClose={props.onCloseSnackbar}\n        />\n    );\n};\n\nconst mapStateToProps = state => {\n    const { message, duration, open } = sGetSnackbar(state);\n    return {\n        snackbarOpen: open,\n        snackbarMessage: message,\n        snackbarDuration: duration,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        onCloseSnackbar: acCloseSnackbar,\n    }\n)(SnackbarMessage);\n","import isObject from 'lodash/isObject';\nimport { apiFetchFavorite, getMapFields } from '../../../api/metadata';\nimport {\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_REPORT,\n    EVENT_CHART,\n    itemTypeMap,\n    getPlugin,\n} from '../../../modules/itemTypes';\nimport { getBaseUrl, getWithoutId } from '../../../modules/util';\nimport { getGridItemDomId } from '../../ItemGrid/gridUtil';\n\nexport const THEMATIC_LAYER = 'thematic';\n\nexport const pluginIsAvailable = (item = {}, visualization = {}) => {\n    const type = visualization.activeType || item.type;\n\n    return !!getPlugin(type);\n};\n\nexport const extractFavorite = item => {\n    if (!isObject(item)) {\n        return null;\n    }\n\n    switch (item.type) {\n        case REPORT_TABLE:\n            return item.reportTable;\n        case CHART:\n            return item.chart;\n        case MAP:\n            return item.map;\n        case EVENT_REPORT:\n            return item.eventReport;\n        case EVENT_CHART:\n            return item.eventChart;\n        default:\n            return (\n                item.reportTable ||\n                item.chart ||\n                item.map ||\n                item.eventReport ||\n                item.eventChart ||\n                {}\n            );\n    }\n};\n\nexport const extractMapView = map =>\n    map.mapViews && map.mapViews.find(mv => mv.layer.includes(THEMATIC_LAYER));\n\nexport const loadPlugin = (plugin, config, credentials) => {\n    if (!(plugin && plugin.load)) {\n        return;\n    }\n\n    plugin.url = credentials.baseUrl;\n    plugin.loadingIndicator = true;\n    plugin.dashboard = true;\n    if (credentials.auth) {\n        plugin.auth = credentials.auth;\n    }\n    plugin.load(config);\n};\n\nexport const getId = item => extractFavorite(item).id;\nexport const getName = item => extractFavorite(item).name;\nexport const getDescription = item => extractFavorite(item).description;\nexport const getLink = (item, d2) => {\n    const baseUrl = getBaseUrl(d2);\n    const appUrl = itemTypeMap[item.type].appUrl(getId(item));\n\n    return `${baseUrl}/${appUrl}`;\n};\n\nexport const load = async (\n    item,\n    visualization,\n    credentials,\n    activeType,\n    filter = {}\n) => {\n    const config = {\n        ...visualization,\n        el: getGridItemDomId(item.id),\n    };\n\n    const type = activeType || item.type;\n    const plugin = getPlugin(type);\n\n    loadPlugin(plugin, config, credentials);\n};\n\nexport const fetch = async item => {\n    const fetchedFavorite = await apiFetchFavorite(getId(item), item.type, {\n        fields: item.type === MAP ? getMapFields() : null,\n    });\n\n    return fetchedFavorite;\n};\n\nexport const resize = item => {\n    const plugin = getPlugin(item.type);\n\n    if (plugin && plugin.resize) {\n        plugin.resize(getGridItemDomId(item.id));\n    }\n};\n\nexport const unmount = (item, activeType) => {\n    const plugin = getPlugin(activeType);\n\n    if (plugin && plugin.unmount) {\n        plugin.unmount(getGridItemDomId(item.id));\n    }\n};\n\nexport const getVisualizationConfig = (\n    visualization,\n    originalType,\n    activeType\n) => {\n    if (originalType === MAP && originalType !== activeType) {\n        const extractedMapView = extractMapView(visualization);\n\n        if (extractedMapView === undefined) {\n            return null;\n        }\n\n        return getWithoutId({\n            ...visualization,\n            ...extractedMapView,\n            mapViews: undefined,\n        });\n    }\n\n    return getWithoutId(visualization);\n};\n","import {\n    SET_SELECTED_ID,\n    SET_SELECTED_ISLOADING,\n    SET_SELECTED_SHOWDESCRIPTION,\n} from '../reducers/selected';\nimport {\n    RECEIVED_VISUALIZATION,\n    RECEIVED_ACTIVE_VISUALIZATION,\n} from '../reducers/visualizations';\nimport { sGetSelectedIsLoading } from '../reducers/selected';\nimport { sGetUserUsername } from '../reducers/user';\nimport { getCustomDashboards, sGetDashboardById } from '../reducers/dashboards';\nimport { apiFetchDashboard } from '../api/dashboards';\nimport { acSetDashboardItems, acAppendDashboards } from './dashboards';\nimport { withShape } from '../components/ItemGrid/gridUtil';\nimport { tGetMessages } from '../components/Item/MessagesItem/actions';\nimport { acReceivedSnackbarMessage, acCloseSnackbar } from './snackbar';\nimport { storePreferredDashboardId } from '../api/localStorage';\nimport { loadingDashboardMsg } from '../components/SnackbarMessage/SnackbarMessage';\nimport {\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_REPORT,\n    EVENT_CHART,\n    MESSAGES,\n} from '../modules/itemTypes';\nimport { extractFavorite } from '../components/Item/VisualizationItem/plugin';\nimport { orObject } from '../modules/util';\n\n// actions\n\nexport const acSetSelectedId = value => ({\n    type: SET_SELECTED_ID,\n    value,\n});\n\nexport const acSetSelectedIsLoading = value => ({\n    type: SET_SELECTED_ISLOADING,\n    value,\n});\n\nexport const acSetSelectedShowDescription = value => ({\n    type: SET_SELECTED_SHOWDESCRIPTION,\n    value,\n});\n\nexport const acReceivedVisualization = value => ({\n    type: RECEIVED_VISUALIZATION,\n    value,\n});\n\nexport const acReceivedActiveVisualization = (id, type, activeType) => {\n    const action = {\n        type: RECEIVED_ACTIVE_VISUALIZATION,\n        id,\n    };\n\n    if (activeType !== type) {\n        action.activeType = activeType;\n    }\n\n    return action;\n};\n\nexport const tLoadDashboard = id => async (dispatch, getState) => {\n    try {\n        const dash = await apiFetchDashboard(id);\n        dispatch(acAppendDashboards(dash));\n\n        return Promise.resolve(dash);\n    } catch (err) {\n        console.log('Error: ', err);\n        return err;\n    }\n};\n\n// thunks\nexport const tSetSelectedDashboardById = id => async (dispatch, getState) => {\n    dispatch(acSetSelectedIsLoading(true));\n\n    const snackbarTimeout = setTimeout(() => {\n        const dashboardName = orObject(sGetDashboardById(getState(), id))\n            .displayName;\n        if (sGetSelectedIsLoading(getState()) && dashboardName) {\n            loadingDashboardMsg.name = dashboardName;\n\n            dispatch(\n                acReceivedSnackbarMessage({\n                    message: loadingDashboardMsg,\n                    open: true,\n                })\n            );\n        }\n    }, 500);\n\n    const onSuccess = selected => {\n        const customDashboard = getCustomDashboards(selected)[0];\n\n        dispatch(\n            acSetDashboardItems(withShape(customDashboard.dashboardItems))\n        );\n\n        storePreferredDashboardId(sGetUserUsername(getState()), id);\n\n        // add visualizations to store\n        customDashboard.dashboardItems.forEach(item => {\n            switch (item.type) {\n                case REPORT_TABLE:\n                case CHART:\n                case MAP:\n                case EVENT_REPORT:\n                case EVENT_CHART:\n                    dispatch(acReceivedVisualization(extractFavorite(item)));\n                    break;\n                case MESSAGES:\n                    dispatch(tGetMessages(id));\n                    break;\n                default:\n                    break;\n            }\n        });\n\n        dispatch(acSetSelectedId(id));\n\n        dispatch(acSetSelectedIsLoading(false));\n\n        clearTimeout(snackbarTimeout);\n\n        dispatch(acCloseSnackbar());\n\n        return selected;\n    };\n\n    const onError = error => {\n        console.log('Error: ', error);\n        return error;\n    };\n\n    try {\n        const selected = await dispatch(tLoadDashboard(id));\n\n        return onSuccess(selected);\n    } catch (err) {\n        return onError(err);\n    }\n};\n","export const getPreferredDashboardId = username =>\n    localStorage.getItem(`dhis2.dashboard.current.${username}`) || undefined;\n\nexport const storePreferredDashboardId = (username, dashboardId) => {\n    localStorage.setItem(`dhis2.dashboard.current.${username}`, dashboardId);\n};\n","import { RECEIVED_MESSAGES } from '../../../reducers/messages';\nimport { getMessages } from '../../../api/messages';\n\nconst onError = (action, error) => {\n    console.log(`Error in action ${action}: ${error}`);\n    return error;\n};\n\nexport const receivedMessages = value => ({\n    type: RECEIVED_MESSAGES,\n    value,\n});\n\nexport const tGetMessages = dashboardItemId => async dispatch => {\n    try {\n        const messages = await getMessages();\n        const { messageConversations } = messages;\n\n        return dispatch(receivedMessages(messageConversations));\n    } catch (err) {\n        return onError('Get Messages', err);\n    }\n};\n","/** @module reducers/editDashboard */\nimport update from 'immutability-helper';\nimport isEmpty from 'lodash/isEmpty';\nimport { orArray, orObject } from '../modules/util';\n\nexport const RECEIVED_EDIT_DASHBOARD = 'RECEIVED_EDIT_DASHBOARD';\nexport const RECEIVED_NOT_EDITING = 'RECEIVED_NOT_EDITING';\nexport const START_NEW_DASHBOARD = 'START_NEW_DASHBOARD';\nexport const RECEIVED_TITLE = 'RECEIVED_TITLE';\nexport const RECEIVED_DESCRIPTION = 'RECEIVED_DESCRIPTION';\nexport const ADD_DASHBOARD_ITEM = 'ADD_DASHBOARD_ITEM';\nexport const REMOVE_DASHBOARD_ITEM = 'REMOVE_DASHBOARD_ITEM';\nexport const UPDATE_DASHBOARD_ITEM = 'UPDATE_DASHBOARD_ITEM';\nexport const RECEIVED_DASHBOARD_LAYOUT = 'RECEIVED_DASHBOARD_LAYOUT';\n\nexport const DEFAULT_STATE_EDIT_DASHBOARD = {};\nexport const NEW_DASHBOARD_STATE = {\n    id: '',\n    name: '',\n    access: {},\n    description: '',\n    dashboardItems: [],\n};\n\nexport default (state = DEFAULT_STATE_EDIT_DASHBOARD, action) => {\n    switch (action.type) {\n        case RECEIVED_EDIT_DASHBOARD:\n            const newState = {};\n            Object.keys(NEW_DASHBOARD_STATE).map(\n                k => (newState[k] = action.value[k])\n            );\n            return newState;\n        case RECEIVED_NOT_EDITING:\n            return DEFAULT_STATE_EDIT_DASHBOARD;\n        case START_NEW_DASHBOARD:\n            return NEW_DASHBOARD_STATE;\n        case RECEIVED_TITLE: {\n            return Object.assign({}, state, { name: action.value });\n        }\n        case RECEIVED_DESCRIPTION: {\n            return Object.assign({}, state, {\n                description: action.value,\n            });\n        }\n        case ADD_DASHBOARD_ITEM:\n            return update(state, {\n                dashboardItems: { $unshift: [action.value] },\n            });\n        case REMOVE_DASHBOARD_ITEM: {\n            const idToRemove = action.value;\n\n            const dashboardItemIndex = state.dashboardItems.findIndex(\n                item => item.id === idToRemove\n            );\n\n            if (dashboardItemIndex > -1) {\n                return update(state, {\n                    dashboardItems: {\n                        $splice: [[dashboardItemIndex, 1]],\n                    },\n                });\n            }\n\n            return state;\n        }\n        case RECEIVED_DASHBOARD_LAYOUT: {\n            const stateItems = orArray(state.dashboardItems);\n\n            const newStateItems = action.value.map(({ x, y, w, h, i }) => {\n                const stateItem = stateItems.find(si => si.id === i);\n\n                return Object.assign({}, stateItem, { w, h, x, y });\n            });\n\n            return update(state, {\n                dashboardItems: { $set: newStateItems },\n            });\n        }\n        case UPDATE_DASHBOARD_ITEM: {\n            const dashboardItem = action.value;\n\n            const dashboardItemIndex = state.dashboardItems.findIndex(\n                item => item.id === dashboardItem.id\n            );\n\n            if (dashboardItemIndex > -1) {\n                const newState = update(state, {\n                    dashboardItems: {\n                        $splice: [[dashboardItemIndex, 1, dashboardItem]],\n                    },\n                });\n\n                return newState;\n            }\n\n            return state;\n        }\n        default:\n            return state;\n    }\n};\n\n// root selector\n\nexport const sGetEditDashboardRoot = state => state.editDashboard;\n\n// selectors\n\nexport const sGetIsEditing = state => !isEmpty(state.editDashboard);\n\nexport const sGetIsNewDashboard = state => {\n    return (\n        !isEmpty(state.editDashboard) && sGetEditDashboardRoot(state).id === ''\n    );\n};\n\nexport const sGetEditDashboardItems = state =>\n    orObject(sGetEditDashboardRoot(state)).dashboardItems;\n","export const CLEAR_EDIT_ITEM_FILTERS = 'CLEAR_EDIT_ITEM_FILTERS';\nexport const REMOVE_EDIT_ITEM_FILTER = 'REMOVE_EDIT_ITEM_FILTER';\nexport const SET_EDIT_ITEM_FILTERS = 'SET_EDIT_ITEM_FILTERS';\n\nexport const DEFAULT_STATE_EDIT_ITEM_FILTERS = {};\n\nexport default (state = DEFAULT_STATE_EDIT_ITEM_FILTERS, action) => {\n    switch (action.type) {\n        case REMOVE_EDIT_ITEM_FILTER: {\n            const newState = { ...state };\n\n            delete newState[action.id];\n\n            return newState;\n        }\n        case SET_EDIT_ITEM_FILTERS: {\n            return action.filters;\n        }\n        case CLEAR_EDIT_ITEM_FILTERS: {\n            return DEFAULT_STATE_EDIT_ITEM_FILTERS;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetEditItemFiltersRoot = state => state.editItemFilters;\n\nexport const sGetEditFiltersKeys = state =>\n    Object.keys(sGetEditItemFiltersRoot(state));\n","export const CLEAR_ITEM_FILTERS = 'CLEAR_ITEM_FILTERS';\nexport const SET_ITEM_FILTERS = 'SET_ITEM_FILTERS';\nexport const ADD_ITEM_FILTER = 'ADD_ITEM_FILTER';\nexport const REMOVE_ITEM_FILTER = 'REMOVE_ITEM_FILTER';\n\nexport const DEFAULT_STATE_ITEM_FILTERS = {};\n\nexport default (state = DEFAULT_STATE_ITEM_FILTERS, action) => {\n    switch (action.type) {\n        case ADD_ITEM_FILTER: {\n            return {\n                ...state,\n                [action.filter.id]: action.filter.value,\n            };\n        }\n        case REMOVE_ITEM_FILTER: {\n            const newState = { ...state };\n\n            delete newState[action.id];\n\n            return newState;\n        }\n        case SET_ITEM_FILTERS: {\n            return action.filters;\n        }\n        case CLEAR_ITEM_FILTERS: {\n            return DEFAULT_STATE_ITEM_FILTERS;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetItemFiltersRoot = state => state.itemFilters;\n\nexport const sGetFiltersKeys = state => Object.keys(sGetItemFiltersRoot(state));\n","import {\n    ADD_ITEM_FILTER,\n    REMOVE_ITEM_FILTER,\n    SET_ITEM_FILTERS,\n    CLEAR_ITEM_FILTERS,\n} from '../reducers/itemFilters';\n\nexport const FILTER_ORG_UNIT = 'ou';\n\n// actions\n\nexport const acAddItemFilter = filter => ({\n    type: ADD_ITEM_FILTER,\n    filter,\n});\n\nexport const acRemoveItemFilter = id => ({\n    type: REMOVE_ITEM_FILTER,\n    id,\n});\n\nexport const acClearItemFilters = () => ({\n    type: CLEAR_ITEM_FILTERS,\n});\n\nexport const acSetItemFilters = filters => ({\n    type: SET_ITEM_FILTERS,\n    filters,\n});\n","import {\n    REMOVE_EDIT_ITEM_FILTER,\n    SET_EDIT_ITEM_FILTERS,\n    CLEAR_EDIT_ITEM_FILTERS,\n} from '../reducers/editItemFilters';\n\n// actions\n\nexport const acRemoveEditItemFilter = id => ({\n    type: REMOVE_EDIT_ITEM_FILTER,\n    id,\n});\n\nexport const acClearEditItemFilters = () => ({\n    type: CLEAR_EDIT_ITEM_FILTERS,\n});\n\nexport const acSetEditItemFilters = filters => ({\n    type: SET_EDIT_ITEM_FILTERS,\n    filters,\n});\n","import { getInstance } from 'd2';\n\nconst onError = error => console.log('Error: ', error);\n\nconst saveDashboard = (dashboard, data) => {\n    const { name, description, dashboardItems } = data;\n\n    dashboard.name = name;\n    dashboard.description = description;\n    dashboard.dashboardItems = dashboardItems.map(item =>\n        Object.assign({}, item, { width: item.w, height: item.h })\n    );\n\n    return dashboard.save().then(msg => msg.response.uid);\n};\n\nexport const updateDashboard = data => {\n    return getInstance()\n        .then(d2 => {\n            return d2.models.dashboards\n                .get(data.id)\n                .then(dashboard => saveDashboard(dashboard, data));\n        })\n        .catch(onError);\n};\n\nexport const postDashboard = data => {\n    return getInstance().then(d2 => {\n        const dashboard = d2.models.dashboards.create();\n\n        return saveDashboard(dashboard, data);\n    });\n};\n","import { generateUid } from 'd2/uid';\n\nimport {\n    RECEIVED_EDIT_DASHBOARD,\n    START_NEW_DASHBOARD,\n    RECEIVED_NOT_EDITING,\n    RECEIVED_TITLE,\n    RECEIVED_DESCRIPTION,\n    RECEIVED_DASHBOARD_LAYOUT,\n    ADD_DASHBOARD_ITEM,\n    UPDATE_DASHBOARD_ITEM,\n    REMOVE_DASHBOARD_ITEM,\n} from '../reducers/editDashboard';\nimport { sGetEditDashboardRoot } from '../reducers/editDashboard';\nimport { updateDashboard, postDashboard } from '../api/editDashboard';\nimport { tSetSelectedDashboardById } from '../actions/selected';\nimport { NEW_ITEM_SHAPE } from '../components/ItemGrid/gridUtil';\nimport {\n    itemTypeMap,\n    isSpacerType,\n    TEXT,\n    emptyTextItemContent,\n    isTextType,\n} from '../modules/itemTypes';\n\nconst onError = error => {\n    console.log('Error (Saving Dashboard): ', error);\n    return error;\n};\n\n// actions\n\nexport const acSetEditDashboard = (dashboard, items) => {\n    const val = {\n        ...dashboard,\n        dashboardItems: items,\n    };\n\n    return {\n        type: RECEIVED_EDIT_DASHBOARD,\n        value: val,\n    };\n};\n\nexport const acSetEditNewDashboard = () => ({\n    type: START_NEW_DASHBOARD,\n});\n\nexport const acClearEditDashboard = () => ({\n    type: RECEIVED_NOT_EDITING,\n});\n\nexport const acSetDashboardTitle = value => ({\n    type: RECEIVED_TITLE,\n    value,\n});\n\nexport const acSetDashboardDescription = value => ({\n    type: RECEIVED_DESCRIPTION,\n    value,\n});\n\nexport const acUpdateDashboardLayout = value => ({\n    type: RECEIVED_DASHBOARD_LAYOUT,\n    value,\n});\n\nexport const acAddDashboardItem = item => {\n    const type = item.type;\n    delete item.type;\n    const itemPropName = itemTypeMap[type].propName;\n\n    return {\n        type: ADD_DASHBOARD_ITEM,\n        value: {\n            id: generateUid(),\n            type,\n            [itemPropName]: item.content,\n            ...NEW_ITEM_SHAPE,\n        },\n    };\n};\n\nexport const acUpdateDashboardItem = item => ({\n    type: UPDATE_DASHBOARD_ITEM,\n    value: item,\n});\n\nexport const acRemoveDashboardItem = value => ({\n    type: REMOVE_DASHBOARD_ITEM,\n    value,\n});\n\n// thunks\n\nexport const tSaveDashboard = () => async (dispatch, getState) => {\n    const dashboard = sGetEditDashboardRoot(getState());\n\n    const dashboardItems = dashboard.dashboardItems.map(item => {\n        const text = isTextType(item)\n            ? item.text || emptyTextItemContent\n            : null;\n\n        const type = isSpacerType(item) ? TEXT : item.type;\n\n        return {\n            ...item,\n            ...(text ? { text } : {}),\n            type,\n        };\n    });\n\n    const dashboardToSave = {\n        ...dashboard,\n        dashboardItems,\n    };\n\n    try {\n        const dashboardId = dashboardToSave.id\n            ? await updateDashboard(dashboardToSave)\n            : await postDashboard(dashboardToSave);\n\n        dispatch(acClearEditDashboard());\n        await dispatch(tSetSelectedDashboardById(dashboardId));\n\n        return Promise.resolve(dashboardId);\n    } catch (error) {\n        onError(error);\n    }\n};\n","import {\n    SET_DASHBOARDS,\n    ADD_DASHBOARDS,\n    SET_DASHBOARD_STARRED,\n    SET_DASHBOARD_DISPLAY_NAME,\n    SET_DASHBOARD_ITEMS,\n} from '../reducers/dashboards';\nimport {\n    getCustomDashboards,\n    sGetDashboardById,\n    sGetDashboardsSortedByStarred,\n} from '../reducers/dashboards';\nimport { sGetUserUsername } from '../reducers/user';\nimport { tSetSelectedDashboardById, acSetSelectedId } from './selected';\nimport { sGetSelectedId } from '../reducers/selected';\nimport { sGetIsEditing } from '../reducers/editDashboard';\nimport { sGetEditItemFiltersRoot } from '../reducers/editItemFilters';\nimport { acSetItemFilters, acClearItemFilters } from './itemFilters';\nimport { acClearEditItemFilters } from './editItemFilters';\nimport { acClearEditDashboard } from './editDashboard';\nimport {\n    apiFetchDashboards,\n    apiStarDashboard,\n    apiDeleteDashboard,\n} from '../api/dashboards';\nimport { getPreferredDashboardId } from '../api/localStorage';\nimport { arrayToIdMap } from '../modules/util';\n\n// actions\n\nexport const acSetDashboards = dashboards => ({\n    type: SET_DASHBOARDS,\n    value: arrayToIdMap(getCustomDashboards(dashboards)),\n});\n\nexport const acAppendDashboards = dashboards => ({\n    type: ADD_DASHBOARDS,\n    value: arrayToIdMap(getCustomDashboards(dashboards)),\n});\n\nexport const acSetDashboardStarred = (dashboardId, isStarred) => ({\n    type: SET_DASHBOARD_STARRED,\n    dashboardId: dashboardId,\n    value: isStarred,\n});\n\nexport const acSetDashboardDisplayName = (dashboardId, value) => ({\n    type: SET_DASHBOARD_DISPLAY_NAME,\n    dashboardId,\n    value,\n});\n\nexport const acSetDashboardItems = value => ({\n    type: SET_DASHBOARD_ITEMS,\n    value,\n});\n\n// thunks\n\nexport const tFetchDashboards = () => async dispatch => {\n    const collection = await apiFetchDashboards();\n    dispatch(acSetDashboards(collection.toArray()));\n};\n\nexport const tSelectDashboard = id => async (dispatch, getState) => {\n    const onError = error => {\n        console.log('Error (apiFetchDashboards): ', error);\n        return error;\n    };\n\n    try {\n        const state = getState();\n\n        let dashboardToSelect = null;\n        if (id) {\n            dashboardToSelect = sGetDashboardById(state, id) || null;\n        } else {\n            const preferredId = getPreferredDashboardId(\n                sGetUserUsername(state)\n            );\n            const dash = sGetDashboardById(state, preferredId);\n            dashboardToSelect =\n                preferredId && dash\n                    ? dash\n                    : sGetDashboardsSortedByStarred(state)[0];\n        }\n\n        if (dashboardToSelect) {\n            dispatch(tSetSelectedDashboardById(dashboardToSelect.id));\n\n            if (dashboardToSelect.id === sGetSelectedId(state)) {\n                if (sGetIsEditing(state)) {\n                    // disable filters when switching to edit mode\n                    dispatch(acClearItemFilters());\n                } else {\n                    // enable filters when switching to view mode\n                    dispatch(acSetItemFilters(sGetEditItemFiltersRoot(state)));\n                }\n            } else {\n                // clear filters when switching dashboard\n                dispatch(acClearEditItemFilters());\n                dispatch(acClearItemFilters());\n            }\n        } else {\n            dispatch(acSetSelectedId(false));\n        }\n    } catch (err) {\n        return onError(err);\n    }\n};\n\nexport const tStarDashboard = (id, isStarred) => async (dispatch, getState) => {\n    const onSuccess = id => {\n        dispatch(acSetDashboardStarred(id, isStarred));\n        return id;\n    };\n\n    const onError = error => {\n        console.log('Error (apiStarDashboard): ', error);\n        return error;\n    };\n    try {\n        await apiStarDashboard(id, isStarred);\n        return onSuccess(id);\n    } catch (err) {\n        return onError(err);\n    }\n};\n\nexport const tDeleteDashboard = id => async (dispatch, getState) => {\n    try {\n        await apiDeleteDashboard(id);\n        dispatch(acClearEditDashboard());\n        dispatch(acSetSelectedId());\n        dispatch(acSetDashboardItems([]));\n\n        await dispatch(tFetchDashboards());\n\n        return Promise.resolve();\n    } catch (err) {\n        console.log('Error (deleteDashboard): ', err);\n        return err;\n    }\n};\n","/** @module reducers/controlBar */\nimport { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\n\nexport const SET_CONTROLBAR_USER_ROWS = 'SET_CONTROLBAR_USER_ROWS';\n\nexport const DEFAULT_STATE_CONTROLBAR_ROWS = 1;\n\nconst userRows = (state = DEFAULT_STATE_CONTROLBAR_ROWS, action) => {\n    switch (action.type) {\n        case SET_CONTROLBAR_USER_ROWS:\n            return validateReducer(action.value, DEFAULT_STATE_CONTROLBAR_ROWS);\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    userRows,\n});\n\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\nexport const sGetControlBarRoot = state => state.controlBar;\n\n// Selector dependency level 2\n\nexport const sGetControlBarUserRows = state =>\n    sGetControlBarRoot(state).userRows;\n","import { getInstance } from 'd2';\nimport { DEFAULT_STATE_CONTROLBAR_ROWS } from '../reducers/controlBar';\n\nconst NAMESPACE = 'dashboard';\nconst KEY = 'controlBarRows';\n\nconst hasNamespace = async d2 => await d2.currentUser.dataStore.has(NAMESPACE);\n\nconst getNamespace = async (d2, hasNamespace) =>\n    hasNamespace\n        ? await d2.currentUser.dataStore.get(NAMESPACE)\n        : await d2.currentUser.dataStore.create(NAMESPACE);\n\nexport const apiGetControlBarRows = async () => {\n    const d2 = await getInstance();\n    const namespace = await getNamespace(d2, await hasNamespace(d2));\n    const hasKey = namespace.keys && namespace.keys.find(key => key === KEY);\n\n    if (hasKey) {\n        return await namespace.get(KEY);\n    } else {\n        await apiPostControlBarRows(DEFAULT_STATE_CONTROLBAR_ROWS, namespace);\n        console.log(\n            '(These errors to /userDataStore/dashboard can be ignored)'\n        );\n        return DEFAULT_STATE_CONTROLBAR_ROWS;\n    }\n};\n\nexport const apiPostControlBarRows = async (rows, namespace) => {\n    const d2 = await getInstance();\n    const ns = namespace || (await getNamespace(d2, hasNamespace));\n\n    ns.set(KEY, rows);\n};\n","import { SET_CONTROLBAR_USER_ROWS } from '../reducers/controlBar';\nimport { apiGetControlBarRows } from '../api/controlBar';\n\n// actions\n\nexport const acSetControlBarUserRows = rows => ({\n    type: SET_CONTROLBAR_USER_ROWS,\n    value: rows,\n});\n\n// thunks\n\nexport const tSetControlBarRows = () => async (dispatch, getState) => {\n    const onSuccess = rows => {\n        dispatch(acSetControlBarUserRows(rows));\n    };\n\n    const onError = error => {\n        console.log('Error (apiGetControlBarRows): ', error);\n        return error;\n    };\n\n    try {\n        const controlBarRows = await apiGetControlBarRows();\n        return onSuccess(controlBarRows);\n    } catch (err) {\n        return onError(err);\n    }\n};\n","import { FIXED_DIMENSIONS } from '@dhis2/analytics';\n\nexport const SET_DIMENSIONS = 'SET_DIMENSIONS';\nexport const DEFAULT_DIMENSIONS = {\n    pe: FIXED_DIMENSIONS.pe,\n    ou: FIXED_DIMENSIONS.ou,\n};\n\nexport default (state = DEFAULT_DIMENSIONS, action) => {\n    switch (action.type) {\n        case SET_DIMENSIONS: {\n            return {\n                ...DEFAULT_DIMENSIONS,\n                ...action.value,\n            };\n        }\n        default:\n            return state;\n    }\n};\n\nexport const sGetDimensions = state => state.dimensions;\n","export const SET_SETTINGS = 'SET_SETTINGS';\nexport const ADD_SETTINGS = 'ADD_SETTINGS';\n\nexport const DEFAULT_SETTINGS = {\n    keyDateFormat: 'yyyy-MM-dd',\n    keyAnalysisRelativePeriod: 'LAST_12_MONTHS',\n    keyAnalysisDigitGroupSeparator: 'SPACE',\n    displayNameProperty: 'displayName',\n    uiLocale: 'en',\n    rootOrganisationUnit: {},\n};\n\nexport default (state = DEFAULT_SETTINGS, action) => {\n    switch (action.type) {\n        case SET_SETTINGS: {\n            return Object.assign({}, action.value);\n        }\n        case ADD_SETTINGS: {\n            return {\n                ...state,\n                ...action.value,\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// Selectors\n\nexport const sGetSettings = state => state.settings;\n\nexport const sGetSettingsDisplayNameProperty = state =>\n    sGetSettings(state).displayNameProperty;\n\nexport const sGetRootOrgUnit = state =>\n    sGetSettings(state).rootOrganisationUnit;\n\nexport const sGetRelativePeriod = state =>\n    sGetSettings(state).keyAnalysisRelativePeriod;\n\nexport const sGetUiLocale = state => sGetSettings(state).uiLocale;\n","import keyBy from 'lodash/keyBy';\nimport sortBy from 'lodash/sortBy';\nimport { SET_DIMENSIONS } from '../reducers/dimensions';\nimport { apiFetchDimensions } from '@dhis2/analytics';\nimport { sGetSettingsDisplayNameProperty } from '../reducers/settings';\n\nexport const acSetDimensions = dimensions => ({\n    type: SET_DIMENSIONS,\n    value: keyBy(sortBy(dimensions, [d => d.name.toLowerCase()]), 'id'),\n});\n\nexport const tSetDimensions = d2 => async (dispatch, getState) => {\n    const onSuccess = dimensions => {\n        dispatch(acSetDimensions(dimensions));\n    };\n\n    const onError = error => {\n        console.log('Error (apiFetchDimensions): ', error);\n        return error;\n    };\n\n    try {\n        const displayNameProp = sGetSettingsDisplayNameProperty(getState());\n        const dimensions = await apiFetchDimensions(d2, displayNameProp);\n\n        // filter out CATEGORY that are not of type ATTRIBUTE\n        const filteredDimensions = dimensions.filter(\n            dim =>\n                dim.dimensionType !== 'CATEGORY' ||\n                (dim.dimensionType === 'CATEGORY' &&\n                    dim.dataDimensionType === 'ATTRIBUTE')\n        );\n        return onSuccess(filteredDimensions);\n    } catch (err) {\n        return onError(err);\n    }\n};\n","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { colors } from '@dhis2/ui-core';\nimport { withStyles } from '@material-ui/core/styles';\n\nexport const SHOWMORE_BAR_HEIGHT = 16;\n\nconst styles = {\n    showMore: {\n        color: colors.grey700,\n        cursor: 'pointer',\n        fontSize: 11,\n        paddingTop: 5,\n        '&:hover': {\n            textDecoration: 'underline',\n        },\n    },\n    disabled: {\n        paddingTop: 5,\n        color: colors.grey500,\n        fontSize: 11,\n        cursor: 'not-allowed',\n    },\n};\n\nexport const ShowMoreButton = ({ onClick, isMaxHeight, classes, disabled }) => {\n    return (\n        <div style={{ textAlign: 'center' }}>\n            {disabled ? (\n                <div className={classes.disabled}>{i18n.t('Show more')}</div>\n            ) : (\n                <div className={classes.showMore} onClick={onClick}>\n                    {isMaxHeight ? i18n.t('Show less') : i18n.t('Show more')}\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default withStyles(styles)(ShowMoreButton);\n","import { SHOWMORE_BAR_HEIGHT } from './ShowMoreButton';\n\nexport const CONTROL_BAR_ROW_HEIGHT = 40;\nexport const FIRST_ROW_PADDING_HEIGHT = 10;\nexport const MIN_ROW_COUNT = 1;\n\nexport const HEADERBAR_HEIGHT = 48;\n\nconst CONTROL_BAR_OUTER_HEIGHT_DIFF =\n    FIRST_ROW_PADDING_HEIGHT + SHOWMORE_BAR_HEIGHT - 2; // 2 pixel \"adjustment\"\n\nexport const getRowsHeight = rows => {\n    return rows * CONTROL_BAR_ROW_HEIGHT;\n};\n\nexport const getNumRowsFromHeight = height => {\n    return Math.floor(\n        (height - CONTROL_BAR_OUTER_HEIGHT_DIFF) / CONTROL_BAR_ROW_HEIGHT\n    );\n};\n\nexport const getTopOffset = rows => {\n    return HEADERBAR_HEIGHT + getControlBarHeight(rows, false);\n};\n\nexport const getControlBarHeight = rows => {\n    return getRowsHeight(rows) + CONTROL_BAR_OUTER_HEIGHT_DIFF;\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { colors } from '@dhis2/ui-core';\nimport { HEADERBAR_HEIGHT } from './controlBarDimensions';\n\nimport classes from './styles/ControlBar.module.css';\n\nconst DRAG_HANDLE_HEIGHT = 7;\n\nclass ControlBar extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            dragging: false,\n        };\n    }\n\n    onStartDrag = () => {\n        this.setState({ dragging: true });\n        window.addEventListener('mousemove', this.onDrag);\n        window.addEventListener('mouseup', this.onEndDrag);\n    };\n\n    onDrag = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const newHeight = event.clientY;\n\n        if (\n            this.props.onChangeHeight &&\n            newHeight !== this.props.height &&\n            newHeight > 0\n        ) {\n            requestAnimationFrame(() => {\n                this.props.onChangeHeight(newHeight);\n            });\n        }\n    };\n\n    onEndDrag = () => {\n        this.setState({ dragging: false });\n        window.removeEventListener('mousemove', this.onDrag);\n        window.removeEventListener('mouseup', this.onEndDrag);\n\n        if (this.props.onEndDrag) {\n            this.props.onEndDrag();\n        }\n    };\n\n    renderDragHandle() {\n        return typeof this.props.onChangeHeight === 'function' ? (\n            <div\n                className={classes.draghandle}\n                style={{ height: DRAG_HANDLE_HEIGHT }}\n                onMouseDown={this.onStartDrag}\n            />\n        ) : null;\n    }\n\n    render() {\n        const height = Math.max(this.props.height, 0) + DRAG_HANDLE_HEIGHT;\n\n        const rootStyle = Object.assign(\n            {\n                height,\n                top: HEADERBAR_HEIGHT,\n                backgroundColor: this.props.editMode\n                    ? colors.yellow050\n                    : colors.white,\n                paddingBottom: DRAG_HANDLE_HEIGHT,\n            },\n            // Disable animations while dragging\n            this.state.dragging ? { transition: 'none' } : {}\n        );\n\n        return (\n            <div style={rootStyle} className={classes.root}>\n                <div className={classes.content}>{this.props.children}</div>\n                {this.renderDragHandle()}\n            </div>\n        );\n    }\n}\n\nControlBar.propTypes = {\n    /**\n     * The height of the control bar in number of lines. Must be a positive integer.\n     */\n    height: PropTypes.number.isRequired,\n\n    /**\n     * If true, the background color of the control bar changes to indicate that edit mode is active.\n     */\n    editMode: PropTypes.bool.isRequired,\n\n    /**\n     * Callback function that is called when the control bar is resized.\n     * The callback receives one argument: The new height in pixels.\n     *\n     * If no callback is specified the control bar will not have a drag handle.\n     */\n    onChangeHeight: PropTypes.func,\n\n    /**\n     * Callback function that is called when the control bar is dropped after being dragged.\n     * The callback receives one argument: The new height in pixels.\n     *\n     * Ignored if no \"onChangeHeight\" function is provided.\n     */\n    onEndDrag: PropTypes.func,\n\n    /**\n     * The contents of the control bar.\n     */\n    children: PropTypes.node.isRequired,\n};\n\nControlBar.defaultProps = {\n    onChangeHeight: null,\n    onEndDrag: null,\n};\n\nexport default ControlBar;\n","import React from 'react';\n\nconst StarIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>\n);\n\nexport default StarIcon;\n","import { getInstance } from 'd2';\n\nexport const apiPostDataStatistics = async (eventType, id) => {\n    const d2 = await getInstance();\n    const url = `dataStatistics?eventType=${eventType}&favorite=${id}`;\n\n    d2.Api.getApi().post(url);\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Chip, colors } from '@dhis2/ui-core';\nimport { Link } from 'react-router-dom';\nimport debounce from 'lodash/debounce';\n\nimport StarIcon from '../../icons/Star';\nimport { apiPostDataStatistics } from '../../api/dataStatistics';\n\nconst styles = {\n    chip: {\n        margin: '3px',\n    },\n    link: {\n        color: colors.grey600,\n        display: 'inline-block',\n        textDecoration: 'none',\n        verticalAlign: 'top',\n    },\n    icon: {\n        height: '20px',\n        marginTop: '2px',\n        width: '20px',\n    },\n    selected: {\n        fill: colors.white,\n    },\n    unselected: {\n        fill: colors.grey700,\n    },\n};\n\nexport const DashboardItemChip = ({\n    starred,\n    selected,\n    label,\n    dashboardId,\n    classes,\n}) => {\n    const chipProps = {\n        selected,\n        className: classes.chip,\n    };\n\n    if (starred) {\n        const selectedState = selected ? classes.selected : classes.unselected;\n        chipProps.icon = (\n            <StarIcon className={`${classes.icon} ${selectedState}`} />\n        );\n    }\n\n    return (\n        <Link\n            className={classes.link}\n            to={`/${dashboardId}`}\n            onClick={debounce(\n                () => apiPostDataStatistics('DASHBOARD_VIEW', dashboardId),\n                500\n            )}\n        >\n            <Chip {...chipProps}>{label}</Chip>\n        </Link>\n    );\n};\n\nDashboardItemChip.propTypes = {\n    starred: PropTypes.bool.isRequired,\n    selected: PropTypes.bool.isRequired,\n    label: PropTypes.string.isRequired,\n    dashboardId: PropTypes.string.isRequired,\n};\n\nexport default withStyles(styles)(DashboardItemChip);\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\n\nconst AddCircleIcon = () => (\n    <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"32\"\n        height=\"32\"\n        fill={colors.teal600}\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm4 11h-3v3c0 .55-.45 1-1 1s-1-.45-1-1v-3H8c-.55 0-1-.45-1-1s.45-1 1-1h3V8c0-.55.45-1 1-1s1 .45 1 1v3h3c.55 0 1 .45 1 1s-.45 1-1 1z\" />\n    </svg>\n);\n\nexport default AddCircleIcon;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\n\nconst ClearIcon = ({ className }) => (\n    <svg\n        className={className}\n        fill={colors.grey800}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>\n);\n\nexport default ClearIcon;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ClearIcon from '../../icons/Clear';\n\nimport classes from './styles/ClearButton.module.css';\n\nexport const ClearButton = ({ onClear }) => (\n    <button className={classes.button} onClick={onClear}>\n        <span>\n            <ClearIcon className={classes.icon} color=\"action\" />\n        </span>\n    </button>\n);\n\nClearButton.propTypes = {\n    onClear: PropTypes.func.isRequired,\n};\n\nexport default ClearButton;\n","import { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\n\nexport const SET_DASHBOARDS_FILTER_NAME = 'SET_DASHBOARDS_FILTER_NAME';\nexport const SET_DASHBOARDS_FILTER_OWNER = 'SET_DASHBOARDS_FILTER_OWNER';\nexport const SET_DASHBOARDS_FILTER_ORDER = 'SET_DASHBOARDS_FILTER_ORDER';\n\nexport const ownerData = [\n    { id: 'ALL', value: 'All users' },\n    { id: 'ME', value: 'Created by me' },\n    { id: 'OTHERS', value: 'Created by others' },\n];\n\nexport const orderData = [\n    { id: 'NAME:ASC', value: 'Name (asc)' },\n    { id: 'NAME:ASC', value: 'Name (desc)' },\n    { id: 'ITEMS:ASC', value: 'Number of items (asc)' },\n    { id: 'ITEMS:ASC', value: 'Number of items (desc)' },\n    { id: 'CREATED:ASC', value: 'Created date (asc)' },\n    { id: 'CREATED:ASC', value: 'Created date (desc)' },\n];\n\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_NAME = '';\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_OWNER = ownerData[0].id;\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_ORDER = orderData[0].id;\n\nconst name = (state = DEFAULT_STATE_DASHBOARDS_FILTER_NAME, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_NAME:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_NAME\n            );\n        default:\n            return state;\n    }\n};\n\nconst owner = (state = DEFAULT_STATE_DASHBOARDS_FILTER_OWNER, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_OWNER:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_NAME\n            );\n        default:\n            return state;\n    }\n};\n\nconst order = (state = DEFAULT_STATE_DASHBOARDS_FILTER_ORDER, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_ORDER:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_ORDER\n            );\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    name,\n    owner,\n    order,\n});\n\n// selectors\n\nexport const sGetDashboardsFilterRoot = state => state.dashboardsFilter;\n\n// selector dependency level 2\n\nexport const sGetFilterName = state => sGetDashboardsFilterRoot(state).name;\nexport const sGetFilterOwner = state => sGetDashboardsFilterRoot(state).owner;\nexport const sGetFilterOrder = state => sGetDashboardsFilterRoot(state).order;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport i18n from '@dhis2/d2-i18n';\nimport InputField from '@material-ui/core/Input';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { colors } from '@dhis2/ui-core';\n\nimport ClearButton from './ClearButton';\nimport { DEFAULT_STATE_DASHBOARDS_FILTER_NAME } from '../../reducers/dashboardsFilter';\n\nexport const KEYCODE_ENTER = 13;\nexport const KEYCODE_ESCAPE = 27;\n\nconst styles = {\n    filterField: {\n        fontSize: '14px',\n        width: '200px',\n        height: '30px',\n        top: '-4px',\n    },\n    searchIcon: {\n        color: colors.grey700,\n        width: '20px',\n        height: '20px',\n    },\n};\n\nexport class Filter extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            value: DEFAULT_STATE_DASHBOARDS_FILTER_NAME,\n        };\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setState({\n            value: nextProps.name,\n        });\n    }\n\n    setFilterValue = event => {\n        event.preventDefault();\n\n        this.props.onChangeName(event.target.value);\n    };\n\n    handleKeyUp = event => {\n        switch (event.keyCode) {\n            case KEYCODE_ENTER:\n                this.props.onKeypressEnter();\n                break;\n            case KEYCODE_ESCAPE:\n                this.props.onChangeName();\n                break;\n            default:\n                break;\n        }\n    };\n\n    render() {\n        const { classes, name, onChangeName } = this.props;\n\n        const startAdornment = (\n            <InputAdornment position=\"start\">\n                <SearchIcon className={classes.searchIcon} />\n            </InputAdornment>\n        );\n\n        const endAdornment =\n            name !== '' && name !== null ? (\n                <InputAdornment position=\"end\">\n                    <ClearButton onClear={() => onChangeName()} />\n                </InputAdornment>\n            ) : null;\n\n        return (\n            <InputField\n                className={classes.filterField}\n                placeholder={i18n.t('Search for a dashboard')}\n                startAdornment={startAdornment}\n                endAdornment={endAdornment}\n                value={this.state.value}\n                onChange={this.setFilterValue}\n                onKeyUp={this.handleKeyUp}\n            />\n        );\n    }\n}\n\nFilter.propTypes = {\n    name: PropTypes.string,\n    onChangeName: PropTypes.func,\n};\n\nFilter.defaultProps = {\n    name: '',\n    onChangeName: Function.prototype,\n};\n\nexport default withStyles(styles)(Filter);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport ControlBar from './ControlBar';\nimport arraySort from 'd2-utilizr/lib/arraySort';\n\nimport Chip from './DashboardItemChip';\nimport AddCircleIcon from '../../icons/AddCircle';\nimport Filter from './Filter';\nimport ShowMoreButton from './ShowMoreButton';\nimport {\n    FIRST_ROW_PADDING_HEIGHT,\n    MIN_ROW_COUNT,\n    getRowsHeight,\n    getControlBarHeight,\n    getNumRowsFromHeight,\n} from './controlBarDimensions';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { sGetAllDashboards } from '../../reducers/dashboards';\nimport { sGetFilterName } from '../../reducers/dashboardsFilter';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { acSetControlBarUserRows } from '../../actions/controlBar';\nimport { acSetFilterName } from '../../actions/dashboardsFilter';\nimport { orObject, orArray } from '../../modules/util';\nimport { apiPostControlBarRows } from '../../api/controlBar';\n\nimport classes from './styles/DashboardsBar.module.css';\n\nexport const MAX_ROW_COUNT = 10;\n\nexport class DashboardsBar extends Component {\n    state = {\n        rows: MIN_ROW_COUNT,\n    };\n\n    setInitialDashboardState = rows => {\n        this.setState({ rows, isMaxHeight: rows === MAX_ROW_COUNT });\n    };\n\n    componentDidMount() {\n        this.setInitialDashboardState(this.props.userRows);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setInitialDashboardState(nextProps.userRows);\n    }\n\n    onChangeHeight = newHeight => {\n        const adjustedHeight = newHeight - 52; // don't rush the transition to a bigger row count\n        const newRows = Math.max(\n            MIN_ROW_COUNT,\n            getNumRowsFromHeight(adjustedHeight)\n        );\n\n        if (newRows !== this.state.rows) {\n            const newRowCount = Math.min(newRows, MAX_ROW_COUNT);\n\n            this.props.onChangeHeight(newRowCount);\n        }\n    };\n\n    onEndDrag = () => {\n        return apiPostControlBarRows(this.state.rows);\n    };\n\n    onToggleMaxHeight = () => {\n        const rows =\n            this.state.rows === MAX_ROW_COUNT\n                ? this.props.userRows\n                : MAX_ROW_COUNT;\n\n        this.setState({ rows, isMaxHeight: !this.state.isMaxHeight });\n    };\n\n    onSelectDashboard = () => {\n        this.props.history.push(`/${this.props.dashboards[0].id}`);\n    };\n\n    render() {\n        const { dashboards, name, selectedId, onChangeFilterName } = this.props;\n\n        const rowCount = this.state.isMaxHeight\n            ? MAX_ROW_COUNT\n            : this.state.rows;\n        const controlBarHeight = getControlBarHeight(rowCount);\n        const contentWrapperStyle = {\n            padding: `${FIRST_ROW_PADDING_HEIGHT}px 6px 0 6px`,\n            overflowY: this.state.isMaxHeight ? 'auto' : 'hidden',\n            height: getRowsHeight(rowCount) + FIRST_ROW_PADDING_HEIGHT,\n        };\n\n        return (\n            <ControlBar\n                height={controlBarHeight}\n                onChangeHeight={this.onChangeHeight}\n                onEndDrag={this.onEndDrag}\n                editMode={false}\n            >\n                <div style={contentWrapperStyle}>\n                    <div className={classes.leftControls}>\n                        <Link\n                            style={{\n                                display: 'inline-block',\n                                textDecoration: 'none',\n                                marginRight: 10,\n                                position: 'relative',\n                                top: '2px',\n                            }}\n                            to={'/new'}\n                        >\n                            <AddCircleIcon />\n                        </Link>\n                        <Filter\n                            name={name}\n                            onChangeName={onChangeFilterName}\n                            onKeypressEnter={this.onSelectDashboard}\n                        />\n                    </div>\n                    {orArray(dashboards).map(dashboard => (\n                        <Chip\n                            key={dashboard.id}\n                            label={dashboard.displayName}\n                            starred={dashboard.starred}\n                            dashboardId={dashboard.id}\n                            selected={dashboard.id === selectedId}\n                        />\n                    ))}\n                </div>\n                <ShowMoreButton\n                    onClick={this.onToggleMaxHeight}\n                    isMaxHeight={this.state.isMaxHeight}\n                    disabled={this.props.userRows === MAX_ROW_COUNT}\n                />\n            </ControlBar>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    dashboards: sGetAllDashboards(state),\n    name: sGetFilterName(state),\n    userRows: sGetControlBarUserRows(state),\n    selectedId: sGetSelectedId(state),\n});\n\nconst mapDispatchToProps = {\n    onChangeHeight: acSetControlBarUserRows,\n    onChangeFilterName: acSetFilterName,\n};\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const dashboards = Object.values(orObject(stateProps.dashboards));\n    const displayDashboards = arraySort(\n        dashboards.filter(d =>\n            d.displayName.toLowerCase().includes(stateProps.name.toLowerCase())\n        ),\n        'ASC',\n        'displayName'\n    );\n\n    return {\n        ...stateProps,\n        ...ownProps,\n        ...dispatchProps,\n        dashboards: [\n            ...displayDashboards.filter(d => d.starred),\n            ...displayDashboards.filter(d => !d.starred),\n        ],\n    };\n};\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps,\n        mergeProps\n    )(DashboardsBar)\n);\n","import {\n    SET_DASHBOARDS_FILTER_NAME,\n    SET_DASHBOARDS_FILTER_OWNER,\n    SET_DASHBOARDS_FILTER_ORDER,\n} from '../reducers/dashboardsFilter';\n\n// actions\n\nexport const acSetFilterName = value => ({\n    type: SET_DASHBOARDS_FILTER_NAME,\n    value,\n});\n\nexport const acSetFilterOwner = value => ({\n    type: SET_DASHBOARDS_FILTER_OWNER,\n    value,\n});\n\nexport const acSetFilterOrder = value => ({\n    type: SET_DASHBOARDS_FILTER_ORDER,\n    value,\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport {\n    getTopOffset,\n    MIN_ROW_COUNT,\n} from '../ControlBar/controlBarDimensions';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\n\nconst DashboardVerticalOffset = props => {\n    const rows = props.editMode ? MIN_ROW_COUNT : props.userRows;\n    const marginTop = getTopOffset(rows);\n\n    return <div className=\"page-container-top-margin\" style={{ marginTop }} />;\n};\n\nconst mapStateToProps = state => ({\n    userRows: sGetControlBarUserRows(state),\n});\n\nexport default connect(mapStateToProps)(DashboardVerticalOffset);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { MenuItem, colors } from '@dhis2/ui-core';\n\nconst HeaderMenuItem = ({ title }) => (\n    <MenuItem\n        dense\n        key={title}\n        disabled\n        label={\n            <p style={{ color: colors.grey800, fontWeight: '600' }}>{title}</p>\n        }\n    />\n);\n\nHeaderMenuItem.propTypes = {\n    title: PropTypes.string.isRequired,\n};\n\nexport default HeaderMenuItem;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\n\nconst LaunchIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"12\"\n        height=\"12\"\n        fill={colors.grey600}\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z\" />\n    </svg>\n);\n\nexport default LaunchIcon;\n","import React from 'react';\nimport { MenuItem, colors } from '@dhis2/ui-core';\nimport i18n from '@dhis2/d2-i18n';\n\nimport { getItemIcon } from '../../modules/itemTypes';\nimport LaunchIcon from '../../icons/Launch';\n\nimport classes from './styles/ContentMenuItem.module.css';\n\nconst LaunchLink = ({ url }) => (\n    <a\n        onClick={e => e.stopPropagation()}\n        className={classes.launchLink}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        href={url}\n    >\n        <LaunchIcon />\n    </a>\n);\n\nconst InsertButton = () => (\n    <button className={classes.buttonInsert}>{i18n.t('Insert')}</button>\n);\n\nconst ContentMenuItem = ({ type, name, onInsert, url }) => {\n    const ItemIcon = getItemIcon(type);\n\n    return (\n        <MenuItem\n            dense\n            onClick={onInsert}\n            label={\n                <div className={classes.menuItem}>\n                    <div className={classes.label}>\n                        <ItemIcon\n                            style={{ margin: '6px', fill: colors.grey600 }}\n                        />\n                        <span>{name}</span>\n                        {url ? <LaunchLink url={url} /> : null}\n                    </div>\n                    <InsertButton />\n                </div>\n            }\n        />\n    );\n};\n\nexport default ContentMenuItem;\n","import i18n from '@dhis2/d2-i18n';\nimport {\n    spacerContent,\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_CHART,\n    EVENT_REPORT,\n    USERS,\n    REPORTS,\n    RESOURCES,\n    APP,\n    MESSAGES,\n    TEXT,\n    SPACER,\n} from '../../modules/itemTypes';\n\nexport const singleItems = [\n    {\n        id: 'additional',\n        header: i18n.t('Additional items'),\n        items: [\n            {\n                type: TEXT,\n                name: i18n.t('Text box'),\n                content: '',\n            },\n            {\n                type: MESSAGES,\n                name: i18n.t('Messages'),\n                content: 'true',\n            },\n            {\n                type: SPACER,\n                name: i18n.t('Spacer'),\n                content: spacerContent,\n            },\n        ],\n    },\n];\n\n// categorizedItems are grouped in the item selector menu\nexport const categorizedItems = [\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_REPORT,\n    EVENT_CHART,\n    USERS,\n    REPORTS,\n    RESOURCES,\n    APP,\n];\n\n// listItemTypes are included in a single dashboard item\nexport const listItemTypes = [REPORTS, RESOURCES, USERS];\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { MenuItem, Divider } from '@dhis2/ui-core';\n\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\n\nimport { tAddListItemContent } from './actions';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\nimport { getItemUrl, APP } from '../../modules/itemTypes';\nimport { categorizedItems, listItemTypes } from './selectableItems';\n\nimport classes from './styles/CategorizedMenuGroup.module.css';\n\nclass CategorizedMenuGroup extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seeMore: false,\n        };\n    }\n\n    addItem = item => () => {\n        const { type, acAddDashboardItem, tAddListItemContent } = this.props;\n\n        if (type === APP) {\n            acAddDashboardItem({ type, content: item.key });\n        } else {\n            const newItem = {\n                id: item.id,\n                name: item.displayName || item.name,\n            };\n\n            if (listItemTypes.includes(type)) {\n                tAddListItemContent(type, newItem);\n            } else {\n                acAddDashboardItem({ type, content: newItem });\n            }\n        }\n    };\n\n    toggleSeeMore = () => {\n        this.setState({ seeMore: !this.state.seeMore });\n\n        this.props.onChangeItemsLimit(this.props.type);\n    };\n\n    render() {\n        const { title, type, items, hasMore } = this.props;\n        return (\n            <Fragment>\n                <HeaderMenuItem title={title} />\n                {items.map(item => {\n                    const itemUrl = getItemUrl(type, item, this.context.d2);\n                    return (\n                        <ContentMenuItem\n                            key={item.id || item.key}\n                            type={type}\n                            name={item.displayName || item.name}\n                            onInsert={this.addItem(item)}\n                            url={itemUrl}\n                        />\n                    );\n                })}\n                {hasMore ? (\n                    <MenuItem\n                        dense\n                        key={`showmore${title}`}\n                        onClick={this.toggleSeeMore}\n                        label={\n                            <button className={classes.showMoreButton}>\n                                {this.state.seeMore\n                                    ? i18n.t('Show fewer')\n                                    : i18n.t('Show more')}\n                            </button>\n                        }\n                    />\n                ) : null}\n                <Divider margin=\"8px 0px\" />\n            </Fragment>\n        );\n    }\n}\n\nCategorizedMenuGroup.propTypes = {\n    type: PropTypes.oneOf(categorizedItems).isRequired,\n    title: PropTypes.string.isRequired,\n    items: PropTypes.array.isRequired,\n    onChangeItemsLimit: PropTypes.func.isRequired,\n};\n\nCategorizedMenuGroup.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nexport default connect(\n    null,\n    {\n        acAddDashboardItem,\n        tAddListItemContent,\n    }\n)(CategorizedMenuGroup);\n","import { sGetEditDashboardRoot } from '../../reducers/editDashboard';\nimport { itemTypeMap } from '../../modules/itemTypes';\nimport {\n    acAddDashboardItem,\n    acUpdateDashboardItem,\n} from '../../actions/editDashboard';\n\nexport const tAddListItemContent = (type, content) => (dispatch, getState) => {\n    const state = getState();\n    const listItemType = itemTypeMap[type].propName;\n    const dashboardItems = sGetEditDashboardRoot(state).dashboardItems;\n    const dashboardItemIndex = dashboardItems.findIndex(\n        item => item.type === type\n    );\n    let dashboardItem;\n\n    // Reports/Resources/Users dashboard item type already present in dashboard\n    if (dashboardItemIndex > -1) {\n        dashboardItem = dashboardItems[dashboardItemIndex];\n        dashboardItem[listItemType].push(content);\n\n        dispatch(acUpdateDashboardItem(dashboardItem));\n    } else {\n        dashboardItem = {\n            type: type,\n            content: [content],\n        };\n\n        dispatch(acAddDashboardItem(dashboardItem));\n    }\n};\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\n\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\n\nexport const SinglesMenuGroup = ({ acAddDashboardItem, category }) => {\n    const addToDashboard = ({ type, content }) => () => {\n        acAddDashboardItem({ type, content });\n    };\n\n    return (\n        <Fragment>\n            <HeaderMenuItem title={category.header} />\n            {category.items.map(item => (\n                <ContentMenuItem\n                    key={item.type}\n                    type={item.type}\n                    name={item.name}\n                    onInsert={addToDashboard(item)}\n                />\n            ))}\n        </Fragment>\n    );\n};\n\nexport default connect(\n    null,\n    { acAddDashboardItem }\n)(SinglesMenuGroup);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport Popover from '@material-ui/core/Popover';\nimport { InputField, Menu } from '@dhis2/ui-core';\n\nimport CategorizedMenuGroup from './CategorizedMenuGroup';\nimport SinglesMenuGroup from './SinglesMenuGroup';\nimport { singleItems, categorizedItems } from './selectableItems';\nimport { itemTypeMap } from '../../modules/itemTypes';\n\nimport './styles/ItemSelector.css';\n\nconst ItemSearchField = props => (\n    <InputField\n        filled\n        name=\"Dashboard item search\"\n        label={i18n.t('Search for items to add to this dashboard')}\n        type=\"text\"\n        onChange={props.onChange}\n        onFocus={props.onFocus}\n        value={props.value}\n    />\n);\n\nclass ItemSelector extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n            open: false,\n            maxOptions: new Set(),\n            items: undefined,\n            filter: '',\n        };\n    }\n\n    closeList = () => {\n        this.setState({ open: false, filter: '' });\n    };\n\n    openList = event => {\n        this.fetchItems();\n\n        this.setState({\n            anchorEl: event.currentTarget,\n            open: true,\n        });\n    };\n\n    setFilter = event => {\n        this.setState({ filter: event.target.value }, this.fetchItems);\n    };\n\n    getCategorizedMenuGroups = () =>\n        categorizedItems\n            .filter(type => {\n                const itemType = itemTypeMap[type];\n                return (\n                    this.state.items && this.state.items[itemType.endPointName]\n                );\n            })\n            .map(type => {\n                const itemType = itemTypeMap[type];\n                const allItems = this.state.items[itemType.endPointName];\n                const hasMore = allItems.length > 5;\n                const items = this.state.maxOptions.has(itemType.id)\n                    ? allItems\n                    : allItems.slice(0, 5);\n\n                return (\n                    <CategorizedMenuGroup\n                        key={type}\n                        type={type}\n                        title={itemType.pluralTitle}\n                        items={items}\n                        onChangeItemsLimit={this.fetchItems}\n                        hasMore={hasMore}\n                    />\n                );\n            });\n\n    getSinglesMenuGroups = () =>\n        singleItems.map(category => (\n            <SinglesMenuGroup key={category.id} category={category} />\n        ));\n\n    getMenuGroups = () =>\n        this.getCategorizedMenuGroups().concat(this.getSinglesMenuGroups());\n\n    fetchItems = async type => {\n        if (type) {\n            const maxOptions = this.state.maxOptions;\n\n            if (maxOptions.has(type)) {\n                maxOptions.delete(type);\n            } else {\n                maxOptions.add(type);\n            }\n\n            this.setState({ maxOptions });\n        } else {\n            this.setState({\n                maxOptions: new Set(),\n            });\n        }\n\n        let queryString = '?count=6';\n        if ([...this.state.maxOptions.values()].length) {\n            queryString +=\n                '&max=' + [...this.state.maxOptions.values()].join('&max=');\n        }\n\n        const filter = this.state.filter ? `/${this.state.filter}` : '';\n\n        this.context.d2.Api.getApi()\n            .get(`dashboards/q${filter}${queryString}`)\n            .then(response => this.setState({ items: response }))\n            .catch(console.error);\n    };\n\n    render() {\n        return (\n            <Fragment>\n                <ItemSearchField\n                    value={this.state.filter}\n                    onChange={this.setFilter}\n                    onFocus={this.openList}\n                />\n                <Popover\n                    className=\"dashboard-item-selector\"\n                    open={this.state.open}\n                    onClose={this.closeList}\n                    anchorEl={this.state.anchorEl}\n                    anchorOrigin={{ horizontal: 'left', vertical: 'bottom' }}\n                    transformOrigin={{ horizontal: 'left', vertical: 'top' }}\n                    style={{ height: '70vh' }}\n                    PaperProps={{ style: { width: '700px' } }}\n                    disableAutoFocus={true}\n                    disableRestoreFocus={true}\n                >\n                    <Menu>{this.getMenuGroups()}</Menu>\n                </Popover>\n            </Fragment>\n        );\n    }\n}\n\nItemSelector.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nexport default ItemSelector;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport i18n from '@dhis2/d2-i18n';\nimport MuiInputField from '@material-ui/core/TextField';\nimport { InputField } from '@dhis2/ui-core';\n\nimport ItemSelector from '../ItemSelector/ItemSelector';\nimport {\n    acSetDashboardTitle,\n    acSetDashboardDescription,\n} from '../../actions/editDashboard';\nimport { orObject } from '../../modules/util';\nimport { sGetEditDashboardRoot } from '../../reducers/editDashboard';\n\nconst styles = {\n    section: { display: 'flex', justifyContent: 'space-between' },\n    titleDescription: {\n        flex: '3',\n        marginRight: '50px',\n    },\n    title: {\n        display: 'block',\n        clear: 'both',\n    },\n    description: {\n        display: 'block',\n        clear: 'both',\n        marginTop: '15px',\n    },\n    underline: {\n        '&::before': {\n            borderBottom: `none`,\n        },\n        '&:hover::before': {\n            borderBottom: `none!important`,\n        },\n    },\n    input: {\n        backgroundColor: 'rgba(0, 0, 10, 0.05)',\n        borderRadius: '4px',\n        width: '100%',\n        '&:hover': {\n            backgroundColor: 'rgba(0, 0, 10, 0.08)',\n        },\n    },\n    itemSelector: {\n        flex: '2',\n        position: 'relative',\n    },\n};\n\nexport const EditTitleBar = ({\n    name,\n    description,\n    onChangeTitle,\n    onChangeDescription,\n    classes,\n}) => {\n    const updateTitle = e => {\n        onChangeTitle(e.target.value);\n    };\n\n    const updateDescription = e => {\n        onChangeDescription(e.target.value);\n    };\n\n    return (\n        <section className={classes.section}>\n            <div className={classes.titleDescription}>\n                <InputField\n                    className={classes.title}\n                    filled\n                    name=\"Dashboard title input\"\n                    label={i18n.t('Dashboard title')}\n                    type=\"text\"\n                    onChange={updateTitle}\n                    value={name}\n                />\n                <MuiInputField\n                    className={classes.description}\n                    name=\"Dashboard description input\"\n                    label={i18n.t('Dashboard description')}\n                    onChange={updateDescription}\n                    value={description}\n                    variant=\"filled\"\n                    multiline\n                    InputProps={{\n                        classes: {\n                            root: classes.input,\n                            underline: classes.underline,\n                        },\n                    }}\n                />\n            </div>\n            <div className={classes.itemSelector}>\n                <ItemSelector />\n            </div>\n        </section>\n    );\n};\n\nconst mapStateToProps = state => {\n    const selectedDashboard = orObject(sGetEditDashboardRoot(state));\n\n    return {\n        name: selectedDashboard.name,\n        description: selectedDashboard.description,\n    };\n};\n\nconst mapDispatchToProps = {\n    onChangeTitle: acSetDashboardTitle,\n    onChangeDescription: acSetDashboardDescription,\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(EditTitleBar));\n\nEditTitleBar.propTypes = {\n    name: PropTypes.string,\n    description: PropTypes.string,\n    onChangeTitle: PropTypes.func.isRequired,\n    onChangeDescription: PropTypes.func.isRequired,\n};\n\nEditTitleBar.defaultProps = {\n    name: '',\n    description: '',\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Button } from '@dhis2/ui-core';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport i18n from '@dhis2/d2-i18n';\n\nimport {\n    PeriodDimension,\n    DynamicDimension,\n    OrgUnitDimension,\n    FIXED_DIMENSIONS,\n} from '@dhis2/analytics';\n\nconst peId = FIXED_DIMENSIONS.pe.id;\nconst ouId = FIXED_DIMENSIONS.ou.id;\n\nclass FilterDialog extends Component {\n    onConfirm = id => () => this.props.onConfirm(id);\n\n    dialogContent() {\n        const { displayNameProperty, dimension, selectedItems } = this.props;\n        const dialogId = dimension.id;\n\n        const commonProps = {\n            d2: this.context.d2,\n            onSelect: this.props.onSelect,\n            onDeselect: this.props.onDeselect,\n            onReorder: this.props.onReorder,\n        };\n\n        switch (dialogId) {\n            case peId: {\n                return (\n                    <PeriodDimension\n                        selectedPeriods={selectedItems}\n                        {...commonProps}\n                    />\n                );\n            }\n            case ouId:\n                return (\n                    <OrgUnitDimension\n                        displayNameProperty={displayNameProperty}\n                        ouItems={selectedItems}\n                        {...commonProps}\n                    />\n                );\n            default:\n                return (\n                    <DynamicDimension\n                        selectedItems={selectedItems}\n                        dialogId={dialogId}\n                        dialogTitle={dimension.name}\n                        {...commonProps}\n                    />\n                );\n        }\n    }\n\n    render() {\n        const { dimension, onClose } = this.props;\n        const dialogId = dimension.id;\n\n        return (\n            <Dialog\n                open={!!dialogId}\n                maxWidth=\"lg\"\n                disableEnforceFocus\n                onClose={onClose}\n            >\n                {dialogId && this.dialogContent()}\n                <DialogActions>\n                    <Button kind=\"secondary\" onClick={onClose}>\n                        {i18n.t('Cancel')}\n                    </Button>\n                    <Button kind=\"primary\" onClick={this.onConfirm(dialogId)}>\n                        {i18n.t('Confirm')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nFilterDialog.propTypes = {\n    displayNameProperty: PropTypes.string,\n    dimension: PropTypes.object,\n    selectedItems: PropTypes.array,\n    onSelect: PropTypes.func,\n    onDeselect: PropTypes.func,\n    onReorder: PropTypes.func,\n    onClose: PropTypes.func,\n    onConfirm: PropTypes.func,\n};\n\nFilterDialog.contextTypes = {\n    d2: PropTypes.object,\n};\n\nexport default FilterDialog;\n","export const SET_ACTIVE_MODAL_DIMENSION = 'SET_ACTIVE_MODAL_DIMENSION';\nexport const CLEAR_ACTIVE_MODAL_DIMENSION = 'CLEAR_ACTIVE_MODAL_DIMENSION';\n\nexport const DEFAULT_STATE_ACTIVE_MODAL_DIMENSION = {};\n\nexport default (state = DEFAULT_STATE_ACTIVE_MODAL_DIMENSION, action) => {\n    switch (action.type) {\n        case SET_ACTIVE_MODAL_DIMENSION: {\n            return action.value;\n        }\n        case CLEAR_ACTIVE_MODAL_DIMENSION: {\n            return DEFAULT_STATE_ACTIVE_MODAL_DIMENSION;\n        }\n        default:\n            return state;\n    }\n};\n\nexport const sGetActiveModalDimension = state => state.activeModalDimension;\n","import {\n    SET_ACTIVE_MODAL_DIMENSION,\n    CLEAR_ACTIVE_MODAL_DIMENSION,\n} from '../reducers/activeModalDimension';\n\nexport const acSetActiveModalDimension = value => ({\n    type: SET_ACTIVE_MODAL_DIMENSION,\n    value,\n});\n\nexport const acClearActiveModalDimension = () => ({\n    type: CLEAR_ACTIVE_MODAL_DIMENSION,\n});\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport Popover from '@material-ui/core/Popover';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport { withTheme } from '@material-ui/core/styles';\n\nimport i18n from '@dhis2/d2-i18n';\nimport { DimensionsPanel } from '@dhis2/analytics';\n\nimport { Button } from '@dhis2/ui-core';\nimport FilterDialog from './FilterDialog';\n\nimport { sGetSettingsDisplayNameProperty } from '../../reducers/settings';\nimport { sGetActiveModalDimension } from '../../reducers/activeModalDimension';\nimport { sGetDimensions } from '../../reducers/dimensions';\nimport { sGetFiltersKeys } from '../../reducers/itemFilters';\nimport { sGetEditItemFiltersRoot } from '../../reducers/editItemFilters';\nimport { acAddItemFilter, acRemoveItemFilter } from '../../actions/itemFilters';\nimport {\n    acRemoveEditItemFilter,\n    acSetEditItemFilters,\n} from '../../actions/editItemFilters';\nimport {\n    acClearActiveModalDimension,\n    acSetActiveModalDimension,\n} from '../../actions/activeModalDimension';\n\nclass FilterSelector extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n        };\n    }\n\n    openPanel = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    closePanel = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    closeDialog = () => {\n        this.setState({ anchorEl: null });\n\n        this.props.clearActiveModalDimension();\n    };\n\n    selectDimension = id => {\n        this.props.setActiveModalDimension({\n            id,\n            name: this.props.dimensions[id].name,\n        });\n    };\n\n    onSelectItems = ({ dimensionId, items }) => {\n        this.props.setEditItemFilters({\n            ...this.props.selectedItems,\n            [dimensionId]: items,\n        });\n    };\n\n    onDeselectItems = ({ dimensionId, itemIdsToRemove }) => {\n        const oldList = this.props.selectedItems[dimensionId] || [];\n        const newList = oldList.filter(\n            item => !itemIdsToRemove.includes(item.id)\n        );\n\n        if (newList.length) {\n            this.props.setEditItemFilters({\n                ...this.props.selectedItems,\n                [dimensionId]: newList,\n            });\n        } else {\n            this.props.removeEditItemFilter(dimensionId);\n        }\n    };\n\n    onReorderItems = ({ dimensionId, itemIds }) => {\n        const oldList = this.props.selectedItems[dimensionId] || [];\n        const reorderedList = itemIds.map(id =>\n            oldList.find(item => item.id === id)\n        );\n\n        this.props.setEditItemFilters({\n            ...this.props.selectedItems,\n            [dimensionId]: reorderedList,\n        });\n    };\n\n    saveFilter = id => {\n        const filterItems = this.props.selectedItems[id];\n\n        if (filterItems && filterItems.length) {\n            this.props.addItemFilter({\n                id,\n                value: [...filterItems],\n            });\n        } else {\n            this.props.removeItemFilter(id);\n        }\n\n        this.closeDialog();\n    };\n\n    render() {\n        const {\n            theme,\n            displayNameProperty,\n            dimension,\n            dimensions,\n            selectedDimensions,\n            selectedItems,\n        } = this.props;\n\n        return (\n            <Fragment>\n                <Button onClick={this.openPanel}>\n                    {i18n.t('Add filter')}\n                    <ArrowDropDownIcon />\n                </Button>\n                <Popover\n                    open={Boolean(this.state.anchorEl)}\n                    anchorEl={this.state.anchorEl}\n                    anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\n                    onClose={this.closePanel}\n                    style={{\n                        height: '100%',\n                        fontFamily: theme.typography.fontFamily,\n                    }}\n                >\n                    <DimensionsPanel\n                        dimensions={dimensions}\n                        onDimensionClick={this.selectDimension}\n                        selectedIds={selectedDimensions}\n                    />\n                </Popover>\n                {dimension ? (\n                    <FilterDialog\n                        displayNameProperty={displayNameProperty}\n                        dimension={dimension}\n                        selectedItems={selectedItems[dimension.id] || []}\n                        onSelect={this.onSelectItems}\n                        onDeselect={this.onDeselectItems}\n                        onReorder={this.onReorderItems}\n                        onClose={this.closeDialog}\n                        onConfirm={this.saveFilter}\n                    />\n                ) : null}\n            </Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    displayNameProperty: sGetSettingsDisplayNameProperty(state),\n    dimension: sGetActiveModalDimension(state),\n    dimensions: sGetDimensions(state),\n    selectedDimensions: sGetFiltersKeys(state),\n    selectedItems: sGetEditItemFiltersRoot(state),\n});\n\nexport default connect(\n    mapStateToProps,\n    {\n        clearActiveModalDimension: acClearActiveModalDimension,\n        setActiveModalDimension: acSetActiveModalDimension,\n        addItemFilter: acAddItemFilter,\n        removeItemFilter: acRemoveItemFilter,\n        removeEditItemFilter: acRemoveEditItemFilter,\n        setEditItemFilters: acSetEditItemFilters,\n    }\n)(withTheme()(FilterSelector));\n","import React, { Component } from 'react';\nimport InfoOutlineIcon from '@material-ui/icons/InfoOutlined';\nimport { colors } from '@dhis2/ui-core';\n\nclass Info extends Component {\n    show = false;\n\n    toggle() {\n        this.show = !this.show;\n        return this.show;\n    }\n\n    render() {\n        return (\n            <div onClick={() => this.props.onClick(this.toggle())}>\n                <InfoOutlineIcon style={{ fill: colors.grey600 }} />\n            </div>\n        );\n    }\n}\n\nexport default Info;\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport SharingDialog from '@dhis2/d2-ui-sharing-dialog';\nimport Star from '@material-ui/icons/Star';\nimport StarBorder from '@material-ui/icons/StarBorder';\n\nimport { orObject } from '../../modules/util';\nimport { tStarDashboard } from '../../actions/dashboards';\nimport { acSetSelectedShowDescription } from '../../actions/selected';\nimport FilterSelector from '../ItemFilter/FilterSelector';\nimport { Button } from '@dhis2/ui-core';\nimport Info from './Info';\nimport {\n    sGetSelectedId,\n    sGetSelectedShowDescription,\n} from '../../reducers/selected';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n} from '../../reducers/dashboards';\nimport { colors } from '@dhis2/ui-core';\n\nconst NO_DESCRIPTION = i18n.t('No description');\n\nconst styles = {\n    actions: {\n        display: 'flex',\n        alignItems: 'center',\n        marginLeft: '20px',\n    },\n    starIcon: {\n        fill: colors.grey600,\n    },\n    textButton: {\n        minWidth: '30px',\n        top: '1px',\n    },\n    editLink: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        textDecoration: 'none',\n        marginRight: '4px',\n    },\n    titleBar: {\n        display: 'flex',\n        alignItems: 'flex-start',\n    },\n    titleBarIcon: {\n        marginLeft: 5,\n        position: 'relative',\n        top: 1,\n        cursor: 'pointer',\n    },\n};\n\nclass ViewTitleBar extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            sharingDialogIsOpen: false,\n        };\n    }\n\n    toggleSharingDialog = () =>\n        this.setState({ sharingDialogIsOpen: !this.state.sharingDialogIsOpen });\n\n    render() {\n        const {\n            id,\n            name,\n            description,\n            access,\n            style,\n            showDescription,\n            starred,\n            onStarClick,\n            onInfoClick,\n            classes,\n        } = this.props;\n\n        const titleStyle = Object.assign({}, style.title, {\n            cursor: 'default',\n            userSelect: 'text',\n            top: '7px',\n        });\n\n        const StarIcon = starred ? Star : StarBorder;\n\n        return (\n            <Fragment>\n                <div className={classes.titleBar}>\n                    <span style={titleStyle}>{name}</span>\n                    <div className={classes.actions}>\n                        <div\n                            className={classes.titleBarIcon}\n                            onClick={onStarClick}\n                        >\n                            <StarIcon className={classes.starIcon} />\n                        </div>\n                        <div className={classes.titleBarIcon}>\n                            <Info onClick={onInfoClick} />\n                        </div>\n                        <div style={{ marginLeft: '10px' }}>\n                            {access.update ? (\n                                <Link\n                                    className={classes.editLink}\n                                    to={`/${id}/edit`}\n                                >\n                                    <Button>{i18n.t('Edit')}</Button>\n                                </Link>\n                            ) : null}\n                            {access.manage ? (\n                                <span style={{ marginRight: '4px' }}>\n                                    <Button onClick={this.toggleSharingDialog}>\n                                        {i18n.t('Share')}\n                                    </Button>\n                                </span>\n                            ) : null}\n                            <span style={{ marginRight: '4px' }}>\n                                <FilterSelector />\n                            </span>\n                        </div>\n                    </div>\n                </div>\n                {showDescription ? (\n                    <div\n                        className=\"dashboard-description\"\n                        style={Object.assign(\n                            { paddingTop: '5px', paddingBottom: '5px' },\n                            style.description,\n                            !description ? { color: '#888' } : {}\n                        )}\n                    >\n                        {description || NO_DESCRIPTION}\n                    </div>\n                ) : null}\n                {id ? (\n                    <SharingDialog\n                        d2={this.context.d2}\n                        id={id}\n                        type=\"dashboard\"\n                        open={this.state.sharingDialogIsOpen}\n                        onRequestClose={this.toggleSharingDialog}\n                    />\n                ) : null}\n            </Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    const id = sGetSelectedId(state);\n    const dashboard = orObject(sGetDashboardById(state, id));\n\n    return {\n        id,\n        name: dashboard.displayName,\n        description: dashboard.displayDescription,\n        dashboardItems: sGetDashboardItems(state),\n        showDescription: sGetSelectedShowDescription(state),\n        starred: dashboard.starred,\n        access: orObject(dashboard.access),\n    };\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const { id, starred, showDescription } = stateProps;\n    const { dispatch } = dispatchProps;\n\n    return {\n        ...stateProps,\n        ...ownProps,\n        onStarClick: () => dispatch(tStarDashboard(id, !starred)),\n        onInfoClick: () =>\n            dispatch(acSetSelectedShowDescription(!showDescription)),\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    null,\n    mergeProps\n)(withStyles(styles)(ViewTitleBar));\n\nViewTitleBar.propTypes = {\n    id: PropTypes.string,\n    name: PropTypes.string,\n    description: PropTypes.string,\n    starred: PropTypes.bool,\n    showDescription: PropTypes.bool,\n    onInfoClick: PropTypes.func,\n};\n\nViewTitleBar.defaultProps = {\n    name: '',\n    description: '',\n    starred: false,\n    showDescription: false,\n    onInfoClick: null,\n};\n\nViewTitleBar.contextTypes = {\n    d2: PropTypes.object,\n};\n","import React from 'react';\n\nimport { colors } from '@dhis2/ui-core';\nimport EditTitleBar from './EditTitleBar';\nimport ViewTitleBar from './ViewTitleBar';\n\nimport './TitleBar.css';\n\nconst style = {\n    title: {\n        position: 'relative',\n        fontSize: 21,\n        fontWeight: 500,\n        color: colors.black,\n        minWidth: 50,\n    },\n    description: {\n        fontSize: 14,\n        color: colors.grey800,\n    },\n};\n\nconst TitleBar = ({ edit }) => {\n    return (\n        <div\n            className=\"titlebar-wrapper\"\n            style={{\n                padding: '20px 15px 5px 10px',\n            }}\n        >\n            {edit ? (\n                <EditTitleBar style={style} />\n            ) : (\n                <ViewTitleBar style={style} />\n            )}\n        </div>\n    );\n};\n\nexport default TitleBar;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport i18n from '@dhis2/d2-i18n';\n\nimport * as pluginManager from './plugin';\nimport { getBaseUrl, orObject } from '../../../modules/util';\nimport { getGridItemDomId } from '../../ItemGrid/gridUtil';\n\nconst pluginCredentials = d2 => {\n    return {\n        baseUrl: getBaseUrl(d2),\n        auth: d2.Api.getApi().defaultHeaders.Authorization,\n    };\n};\n\nclass DefaultPlugin extends Component {\n    pluginCredentials = null;\n\n    constructor(props, context) {\n        super(props);\n\n        this.d2 = context.d2;\n    }\n\n    shouldPluginReload = prevProps => {\n        // TODO - fix this hack, to handle bug with multiple\n        // rerendering while switching between dashboards.\n        //\n        // To determine if the rendering is happening because of a\n        // dashboard switch, check if the item reference has changed.\n        const reloadAllowed = this.props.item === prevProps.item;\n\n        const filtersChanged = prevProps.itemFilters !== this.props.itemFilters;\n        const vis = orObject(this.props.visualization);\n        const prevVis = orObject(prevProps.visualization);\n        const visChanged =\n            vis.id !== prevVis.id || vis.activeType !== prevVis.activeType;\n\n        return reloadAllowed && (visChanged || filtersChanged);\n    };\n\n    reloadPlugin = prevProps => {\n        if (\n            pluginManager.pluginIsAvailable(\n                this.props.item,\n                this.props.visualization\n            ) &&\n            this.shouldPluginReload(prevProps)\n        ) {\n            const prevVis = orObject(prevProps.visualization);\n            const currentVis = this.props.visualization;\n\n            const useActiveType =\n                currentVis.activeType !== prevVis.activeType ||\n                currentVis.activeType !== this.props.item.type;\n\n            if (\n                useActiveType ||\n                this.props.itemFilters !== prevProps.itemFilters\n            ) {\n                pluginManager.unmount(\n                    this.props.item,\n                    prevVis.activeType || this.props.item.type\n                );\n\n                pluginManager.load(\n                    this.props.item,\n                    this.props.visualization,\n                    this.pluginCredentials,\n                    useActiveType ? currentVis.activeType : null\n                );\n            }\n        }\n    };\n\n    componentDidMount() {\n        this.pluginCredentials = pluginCredentials(this.d2);\n\n        if (\n            pluginManager.pluginIsAvailable(\n                this.props.item,\n                this.props.visualization\n            )\n        ) {\n            pluginManager.load(\n                this.props.item,\n                this.props.visualization,\n                this.pluginCredentials,\n                !this.props.editMode ? this.getActiveType() : null\n            );\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        this.reloadPlugin(prevProps);\n    }\n\n    getActiveType = () =>\n        this.props.visualization.activeType || this.props.item.type;\n\n    render() {\n        const { classes, item, visualization, style } = this.props;\n        const pluginIsAvailable = pluginManager.pluginIsAvailable(\n            item,\n            visualization\n        );\n\n        return pluginIsAvailable ? (\n            <div id={getGridItemDomId(item.id)} style={style} />\n        ) : (\n            <div className={classes.textDiv}>\n                {i18n.t('Unable to load the plugin for this item')}\n            </div>\n        );\n    }\n}\n\nDefaultPlugin.contextTypes = {\n    d2: PropTypes.object,\n};\n\nDefaultPlugin.propTypes = {\n    style: PropTypes.object,\n    item: PropTypes.object,\n    itemFilters: PropTypes.object,\n    visualization: PropTypes.object,\n};\n\nDefaultPlugin.defaultProps = {\n    style: {},\n    item: {},\n    itemFilters: {},\n    visualization: {},\n};\n\nexport default DefaultPlugin;\n","import React from 'react';\n\nexport const HEADER_HEIGHT = 45;\n\nconst ItemHeader = props => {\n    const { title, actionButtons, editMode } = props;\n\n    return (\n        <div className=\"dashboard-item-header\">\n            <div\n                className=\"dashboard-item-header-title\"\n                style={{ userSelect: editMode ? 'none' : 'text' }}\n            >\n                {title}\n            </div>\n            {actionButtons}\n        </div>\n    );\n};\n\nexport default ItemHeader;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { colors } from '@dhis2/ui-core';\nimport { getId } from './plugin';\nimport InterpretationsComponent from '@dhis2/d2-ui-interpretations';\n\nconst style = {\n    scrollContainer: {\n        overflowY: 'auto',\n        height: '340px',\n    },\n    line: {\n        margin: '-1px 0px 0px',\n        height: '1px',\n        border: 'none',\n        backgroundColor: colors.grey100,\n    },\n};\n\nclass ItemFooter extends Component {\n    render() {\n        const objectId = getId(this.props.item);\n\n        return (\n            <div className=\"dashboard-item-footer\">\n                <hr style={style.line} />\n                <div style={style.scrollContainer}>\n                    <InterpretationsComponent\n                        d2={this.context.d2}\n                        item={this.props.item}\n                        type={this.props.item.type.toLowerCase()}\n                        id={objectId}\n                        appName=\"dashboard\"\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nItemFooter.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nItemFooter.propTypes = {\n    item: PropTypes.object.isRequired,\n};\n\nexport default ItemFooter;\n","import React from 'react';\n\nimport './ItemHeaderButton.css';\n\nconst ItemHeaderButton = ({ disabled, onClick, children, style }) => {\n    return (\n        <button\n            disabled={disabled}\n            type=\"button\"\n            className=\"item-action-button\"\n            style={style}\n            onClick={onClick}\n        >\n            {children}\n        </button>\n    );\n};\n\nexport default ItemHeaderButton;\n","import React, { Component, Fragment } from 'react';\nimport MessageIcon from '@material-ui/icons/Message';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\n\nimport { extractFavorite } from './plugin';\nimport ItemHeaderButton from '../ItemHeaderButton';\nimport {\n    VISUALIZATION_TYPE_TABLE,\n    VISUALIZATION_TYPE_CHART,\n    VISUALIZATION_TYPE_MAP,\n    itemTypeMap,\n    CHART,\n    MAP,\n    REPORT_TABLE,\n    EVENT_CHART,\n    EVENT_REPORT,\n    DOMAIN_TYPE_AGGREGATE,\n    CHART_TYPE_SINGLE_VALUE,\n} from '../../../modules/itemTypes';\nimport { colors, theme } from '@dhis2/ui-core';\n\nconst style = {\n    iconBase: {\n        width: '24px',\n        height: '24px',\n        fill: colors.grey500,\n    },\n    buttonBase: {\n        padding: '5px 6px 3px 6px',\n    },\n    buttonDisabled: {\n        padding: '5px 6px 3px 6px',\n        opacity: 0.5,\n        cursor: 'unset',\n    },\n    toggleFooterPadding: {\n        padding: '7px 6px 1px 6px',\n    },\n    border: {\n        borderRadius: '2px',\n        border: `1px solid ${colors.grey200}`,\n    },\n};\n\nconst baseStyle = {\n    icon: style.iconBase,\n    container: style.buttonBase,\n};\n\nconst disabledStyle = {\n    icon: style.iconBase,\n    container: style.buttonDisabled,\n};\n\nconst activeStyle = {\n    icon: { ...style.iconBase, fill: theme.primary800 },\n    container: {\n        ...style.buttonBase,\n        backgroundColor: theme.primary100,\n    },\n};\n\nconst inactiveStyle = disabled => (disabled ? disabledStyle : baseStyle);\n\nconst tableBtnStyle = (activeType, disabled) =>\n    [REPORT_TABLE, EVENT_REPORT].includes(activeType)\n        ? activeStyle\n        : inactiveStyle(disabled);\n\nconst chartBtnStyle = (activeType, disabled) =>\n    [CHART, EVENT_CHART].includes(activeType)\n        ? activeStyle\n        : inactiveStyle(disabled);\n\nconst mapBtnStyle = (activeType, disabled) =>\n    [MAP].includes(activeType) ? activeStyle : inactiveStyle(disabled);\n\nexport const getItemTypeId = (itemTypeMap, visualizationType, domainType) => {\n    const item = Object.values(itemTypeMap).find(\n        item =>\n            item.visualizationType === visualizationType &&\n            item.domainType === domainType\n    );\n    return item.id;\n};\n\n// TODO: Import this from @dhis2/analytics when available\nconst isSingleValue = (itemType, chartType) =>\n    itemType === VISUALIZATION_TYPE_CHART &&\n    chartType === CHART_TYPE_SINGLE_VALUE;\n\nclass VisualizationItemHeaderButtons extends Component {\n    renderInterpretationButton() {\n        const { activeFooter, onToggleFooter } = this.props;\n\n        const toggleFooterBase = activeFooter ? activeStyle : baseStyle;\n\n        const toggleFooter = {\n            ...toggleFooterBase,\n            container: {\n                ...toggleFooterBase.container,\n                ...style.toggleFooterPadding,\n                ...style.border,\n            },\n        };\n\n        return (\n            <Fragment>\n                <ItemHeaderButton\n                    style={toggleFooter.container}\n                    onClick={onToggleFooter}\n                >\n                    <MessageIcon style={toggleFooter.icon} />\n                </ItemHeaderButton>\n            </Fragment>\n        );\n    }\n\n    renderVisualizationButtons() {\n        const {\n            item,\n            visualization,\n            onSelectVisualization,\n            activeType,\n        } = this.props;\n\n        if (isSingleValue(item.type, visualization.type)) {\n            return null;\n        }\n\n        const domainType = itemTypeMap[item.type].domainType;\n\n        const onViewTable = () =>\n            onSelectVisualization(\n                getItemTypeId(itemTypeMap, VISUALIZATION_TYPE_TABLE, domainType)\n            );\n\n        const onViewChart = () =>\n            onSelectVisualization(\n                getItemTypeId(itemTypeMap, VISUALIZATION_TYPE_CHART, domainType)\n            );\n\n        const onViewMap = () =>\n            onSelectVisualization(\n                getItemTypeId(itemTypeMap, VISUALIZATION_TYPE_MAP, domainType)\n            );\n\n        // disable toggle buttons\n        let disabled = false;\n\n        if (item.type === VISUALIZATION_TYPE_CHART) {\n            if (extractFavorite(item).type.match(/^YEAR_OVER_YEAR/)) {\n                disabled = true;\n            }\n        }\n\n        const tableButtonStyle = tableBtnStyle(activeType, disabled);\n        const chartButtonStyle = chartBtnStyle(activeType, disabled);\n        const mapButtonStyle = mapBtnStyle(activeType, disabled);\n\n        return (\n            <div style={{ marginLeft: 10 }}>\n                <div style={style.border}>\n                    <ItemHeaderButton\n                        disabled={disabled}\n                        style={tableButtonStyle.container}\n                        onClick={onViewTable}\n                    >\n                        <TableIcon style={tableButtonStyle.icon} />\n                    </ItemHeaderButton>\n                    <ItemHeaderButton\n                        disabled={disabled}\n                        style={chartButtonStyle.container}\n                        onClick={onViewChart}\n                    >\n                        <ChartIcon style={chartButtonStyle.icon} />\n                    </ItemHeaderButton>\n                    {domainType === DOMAIN_TYPE_AGGREGATE ? (\n                        <ItemHeaderButton\n                            disabled={disabled}\n                            style={mapButtonStyle.container}\n                            onClick={onViewMap}\n                        >\n                            <MapIcon style={mapButtonStyle.icon} />\n                        </ItemHeaderButton>\n                    ) : null}\n                </div>\n            </div>\n        );\n    }\n\n    render() {\n        return (\n            <Fragment>\n                {this.renderInterpretationButton()}\n                {this.renderVisualizationButtons()}\n            </Fragment>\n        );\n    }\n}\n\nexport default VisualizationItemHeaderButtons;\n","// Note that this ignores discrepancies in 'this', so shouldn't be used with bound functions\n// This is useful instead of lodash/memoize when we only need to memoize a single value\n// Inspiration: https://github.com/alexreardon/memoize-one\n\nconst memoizeOne = fn => {\n    let lastArgs = undefined;\n    let lastValue = undefined;\n\n    return (...args) => {\n        if (\n            lastArgs &&\n            args.length === lastArgs.length &&\n            args.every((arg, i) => arg === lastArgs[i])\n        ) {\n            return lastValue;\n        }\n        lastArgs = args;\n        lastValue = fn(...args);\n        return lastValue;\n    };\n};\n\nexport default memoizeOne;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport ChartPlugin from '@dhis2/data-visualizer-plugin';\n\nimport i18n from '@dhis2/d2-i18n';\nimport uniqueId from 'lodash/uniqueId';\n\nimport DefaultPlugin from './DefaultPlugin';\nimport ItemHeader, { HEADER_HEIGHT } from '../ItemHeader';\nimport ItemFooter from './ItemFooter';\nimport VisualizationItemHeaderButtons from './ItemHeaderButtons';\nimport * as pluginManager from './plugin';\nimport { sGetVisualization } from '../../../reducers/visualizations';\nimport { sGetItemFiltersRoot } from '../../../reducers/itemFilters';\nimport {\n    acReceivedVisualization,\n    acReceivedActiveVisualization,\n} from '../../../actions/selected';\nimport { CHART, MAP, itemTypeMap } from '../../../modules/itemTypes';\nimport { colors } from '@dhis2/ui-core';\nimport memoizeOne from '../../../modules/memoizeOne';\nimport { getVisualizationConfig } from './plugin';\n\nconst styles = {\n    icon: {\n        width: 16,\n        height: 16,\n        marginLeft: 3,\n        cursor: 'pointer',\n        fill: colors.grey600,\n    },\n    title: {\n        overflow: 'hidden',\n        maxWidth: '85%',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n    },\n    textDiv: {\n        fontSize: '14px',\n        fontStretch: 'normal',\n        padding: '10px',\n        lineHeight: '20px',\n    },\n};\n\nconst applyFilters = (visualization, filters) => {\n    if (!Object.keys(filters).length) {\n        return visualization;\n    }\n\n    // deep clone objects in filters to avoid changing the visualization in the Redux store\n    const visRows = visualization.rows.map(obj => ({ ...obj }));\n    const visColumns = visualization.columns.map(obj => ({ ...obj }));\n    const visFilters = visualization.filters.map(obj => ({ ...obj }));\n\n    Object.keys(filters).forEach(dimensionId => {\n        if (filters[dimensionId]) {\n            let dimensionFound = false;\n\n            [visRows, visColumns, visFilters].forEach(dimensionObjects =>\n                dimensionObjects\n                    .filter(obj => obj.dimension === dimensionId)\n                    .forEach(obj => {\n                        dimensionFound = true;\n                        obj.items = filters[dimensionId];\n                    })\n            );\n\n            // add dimension to filters if not already present elsewhere\n            if (!dimensionFound) {\n                visFilters.push({\n                    dimension: dimensionId,\n                    items: filters[dimensionId],\n                });\n            }\n        }\n    });\n\n    return {\n        ...visualization,\n        rows: visRows,\n        columns: visColumns,\n        filters: visFilters,\n    };\n};\n\nexport class Item extends Component {\n    state = {\n        showFooter: false,\n        configLoaded: false,\n    };\n\n    constructor(props, context) {\n        super(props);\n\n        this.d2 = context.d2;\n\n        this.contentRef = React.createRef();\n    }\n\n    async componentDidMount() {\n        this.props.onVisualizationLoaded(\n            // TODO do not call fetch on the pluginManager, do it here as the manager will eventually be removed...\n            await pluginManager.fetch(this.props.item)\n        );\n\n        this.setState({\n            configLoaded: true,\n        });\n    }\n\n    getUniqueKey = memoizeOne(() => uniqueId());\n\n    pluginCredentials = null;\n\n    getPluginComponent = () => {\n        const visualization = getVisualizationConfig(\n            this.props.visualization,\n            this.props.item.type,\n            this.getActiveType()\n        );\n\n        if (!visualization) {\n            return (\n                <div className={this.props.classes.textDiv}>\n                    {i18n.t('No data to display')}\n                </div>\n            );\n        }\n\n        const props = {\n            ...this.props,\n            visualization,\n            style: this.getContentStyle(),\n        };\n\n        switch (this.getActiveType()) {\n            case CHART: {\n                return (\n                    <ChartPlugin\n                        d2={this.d2}\n                        config={applyFilters(\n                            props.visualization,\n                            props.itemFilters\n                        )}\n                        forDashboard={true}\n                        style={props.style}\n                    />\n                );\n            }\n            case MAP: {\n                if (props.item.type === MAP) {\n                    // apply filters only to thematic and event layers\n                    // for maps AO\n                    const mapViews = props.visualization.mapViews.map(obj => {\n                        if (\n                            obj.layer.includes('thematic') ||\n                            obj.layer.includes('event')\n                        ) {\n                            return applyFilters(obj, props.itemFilters);\n                        }\n\n                        return obj;\n                    });\n\n                    props.visualization = {\n                        ...props.visualization,\n                        mapViews,\n                    };\n                } else {\n                    // this is the case of a non map AO passed to the maps plugin\n                    // due to a visualization type switch in dashboard item\n                    // maps plugin takes care of converting the AO to a suitable format\n                    props.visualization = applyFilters(\n                        props.visualization,\n                        props.itemFilters\n                    );\n                }\n\n                return <DefaultPlugin {...props} />;\n            }\n            default: {\n                props.visualization = applyFilters(\n                    props.visualization,\n                    props.itemFilters\n                );\n\n                return <DefaultPlugin {...props} />;\n            }\n        }\n    };\n\n    onToggleFooter = () => {\n        this.setState(\n            { showFooter: !this.state.showFooter },\n            this.props.onToggleItemExpanded(this.props.item.id)\n        );\n    };\n\n    onSelectVisualization = activeType => {\n        // Cancel request if type is already active\n        if (activeType === this.getActiveType()) {\n            return;\n        }\n\n        pluginManager.unmount(this.props.item, this.getActiveType());\n\n        this.props.onSelectVisualization(\n            this.props.visualization.id,\n            this.props.item.type,\n            activeType\n        );\n    };\n\n    getActiveType = () =>\n        this.props.visualization.activeType || this.props.item.type;\n\n    pluginIsAvailable = () =>\n        pluginManager.pluginIsAvailable(\n            this.props.item,\n            this.props.visualization\n        );\n\n    getTitle = () => {\n        const { item, editMode, classes } = this.props;\n        const itemName = pluginManager.getName(item);\n\n        return (\n            <div style={{ display: 'flex' }}>\n                <span className={classes.title} title={itemName}>\n                    {itemName}\n                </span>\n                {!editMode && this.pluginIsAvailable() ? (\n                    <a\n                        href={pluginManager.getLink(this.props.item, this.d2)}\n                        style={{ height: 16 }}\n                        title={`View in ${\n                            itemTypeMap[this.props.item.type].appName\n                        } app`}\n                    >\n                        <LaunchIcon className={classes.icon} />\n                    </a>\n                ) : null}\n            </div>\n        );\n    };\n\n    getActionButtons = () =>\n        pluginManager.pluginIsAvailable(\n            this.props.item,\n            this.props.visualization\n        ) && !this.props.editMode ? (\n            <VisualizationItemHeaderButtons\n                item={this.props.item}\n                visualization={this.props.visualization}\n                activeFooter={this.state.showFooter}\n                activeType={this.getActiveType()}\n                onSelectVisualization={this.onSelectVisualization}\n                onToggleFooter={this.onToggleFooter}\n            />\n        ) : null;\n\n    getContentStyle = () => {\n        const { item, editMode } = this.props;\n        const PADDING_BOTTOM = 4;\n\n        return !editMode\n            ? {\n                  height: item.originalHeight - HEADER_HEIGHT - PADDING_BOTTOM,\n              }\n            : { height: this.contentRef.offsetHeight };\n    };\n\n    render() {\n        const { item, editMode, itemFilters } = this.props;\n        const { showFooter } = this.state;\n\n        return (\n            <Fragment>\n                <ItemHeader\n                    title={this.getTitle()}\n                    actionButtons={this.getActionButtons()}\n                    editMode={editMode}\n                />\n                <div\n                    key={this.getUniqueKey(itemFilters)}\n                    className=\"dashboard-item-content\"\n                    ref={ref => (this.contentRef = ref)}\n                >\n                    {this.state.configLoaded && this.getPluginComponent()}\n                </div>\n                {!editMode && showFooter ? <ItemFooter item={item} /> : null}\n            </Fragment>\n        );\n    }\n}\n\nItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nItem.propTypes = {\n    item: PropTypes.object,\n    editMode: PropTypes.bool,\n    onToggleItemExpanded: PropTypes.func,\n    itemFilters: PropTypes.object,\n    visualization: PropTypes.object,\n};\n\nItem.defaultProps = {\n    item: {},\n    editMode: false,\n    onToggleItemExpanded: Function.prototype,\n    itemFilters: {},\n    visualization: {},\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n    itemFilters: sGetItemFiltersRoot(state),\n    visualization: sGetVisualization(\n        state,\n        pluginManager.extractFavorite(ownProps.item).id\n    ),\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onVisualizationLoaded: visualization =>\n        dispatch(acReceivedVisualization(visualization)),\n    onSelectVisualization: (id, type, activeType) =>\n        dispatch(acReceivedActiveVisualization(id, type, activeType)),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(Item));\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\n\nconst style = {\n    backgroundColor: colors.grey200,\n    border: 'none',\n    height: '1px',\n    margin: '0px 0px 5px 0px',\n};\n\nconst Line = props => <hr style={style} />;\n\nexport default Line;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\n\nimport { sGetMessagesRoot } from '../../../reducers/messages';\nimport { formatDate } from '../../../modules/util';\nimport { colors } from '@dhis2/ui-core';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nimport './MessagesItem.css';\n\nconst PRIVATE = 'PRIVATE';\n\nconst messageTypes = {\n    [PRIVATE]: 'Private',\n    VALIDATION_RESULT: 'Validation',\n    TICKET: 'Ticket',\n    SYSTEM: 'System',\n};\n\nconst style = {\n    list: {\n        listStyleType: 'none',\n        paddingLeft: '0px',\n    },\n    seeAll: {\n        textAlign: 'center',\n        fontSize: '13px',\n        marginBottom: '5px',\n    },\n    sender: {\n        fontSize: '13px',\n        lineHeight: '15px',\n        margin: 0,\n        color: colors.grey800,\n    },\n    snippet: {\n        color: colors.grey800,\n        fontSize: '13px',\n        lineHeight: '15px',\n        maxHeight: '30px',\n        overflow: 'hidden',\n    },\n};\n\nclass MessagesItem extends Component {\n    state = {\n        uiLocale: '',\n    };\n\n    async componentDidMount() {\n        const uiLocale = await this.context.d2.currentUser.userSettings.get(\n            'keyUiLocale'\n        );\n\n        this.setState({ uiLocale });\n    }\n\n    getMessageHref = msg => {\n        const msgIdentifier = msg ? `#/${msg.messageType}/${msg.id}` : '';\n        return `${this.context.baseUrl}/dhis-web-messaging/${msgIdentifier}`;\n    };\n\n    getMessageSender = msg => {\n        const latestMsg = msg.messages.slice(-1)[0];\n        return latestMsg.sender ? latestMsg.sender.displayName : '';\n    };\n\n    getMessageItems = () => {\n        const editClass = !this.props.editMode ? 'view' : null;\n\n        return this.props.messages.map(msg => {\n            const redirectToMsg = () => {\n                if (!this.props.editMode) {\n                    document.location.href = this.getMessageHref(msg);\n                }\n            };\n\n            const sender =\n                msg.messageType === PRIVATE\n                    ? this.getMessageSender(msg)\n                    : messageTypes[msg.messageType];\n\n            const readClass = !msg.read ? 'unread' : null;\n            const latestMsg = msg.messages.slice(-1)[0];\n            const msgDate = latestMsg.lastUpdated;\n\n            return (\n                <li\n                    className={`message-item ${editClass}`}\n                    key={msg.id}\n                    onClick={redirectToMsg}\n                >\n                    <p className={`message-title ${readClass}`}>\n                        {msg.displayName} ({msg.messageCount})\n                    </p>\n                    <p style={style.sender}>\n                        {sender} - {formatDate(msgDate, this.state.uiLocale)}\n                    </p>\n                    <p style={style.snippet}>{latestMsg.text}</p>\n                </li>\n            );\n        });\n    };\n\n    render() {\n        return (\n            <Fragment>\n                <ItemHeader title={i18n.t('Messages')} />\n                <Line />\n                {this.props.messages.length > 0 && (\n                    <div className=\"dashboard-item-content\">\n                        <ul style={style.list}>{this.getMessageItems()}</ul>\n                        <div style={style.seeAll}>\n                            <a href={this.getMessageHref()}>\n                                {i18n.t('See all messages')}\n                            </a>\n                        </div>\n                    </div>\n                )}\n            </Fragment>\n        );\n    }\n}\n\nMessagesItem.contextTypes = {\n    d2: PropTypes.object,\n    baseUrl: PropTypes.string,\n};\n\nconst mapStateToProps = state => {\n    return {\n        messages: Object.values(sGetMessagesRoot(state)),\n    };\n};\n\nconst MessagesContainer = connect(\n    mapStateToProps,\n    null\n)(MessagesItem);\n\nexport default MessagesContainer;\n","import React, { Fragment } from 'react';\nimport ItemHeader from '../ItemHeader';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nconst NotSupportedItem = props => (\n    <Fragment>\n        <ItemHeader title={`Item type not supported: ${props.item.type}`} />\n        <div\n            style={{\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center',\n                height: '90%',\n            }}\n        >\n            <NotInterestedIcon\n                style={{ width: 100, height: 100, align: 'center' }}\n                color=\"disabled\"\n            />\n        </div>\n    </Fragment>\n);\n\nexport default NotSupportedItem;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\n\nconst DescriptionIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n        fill={colors.grey500}\n    >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M14 2H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6zm2 16H8v-2h8v2zm0-4H8v-2h8v2zm-3-5V3.5L18.5 9H13z\" />\n    </svg>\n);\n\nexport default DescriptionIcon;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\n\nconst DeleteIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"18\"\n        height=\"18\"\n        viewBox=\"0 0 24 24\"\n        fill={colors.red500}\n    >\n        <path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>\n);\n\nexport default DeleteIcon;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { colors } from '@dhis2/ui-core';\nimport DescriptionIcon from '../../../icons/Description';\n\nimport DeleteIcon from '../../../icons/Delete';\nimport Line from '../../../widgets/Line';\nimport { itemTypeMap, getItemUrl } from '../../../modules/itemTypes';\nimport { orArray } from '../../../modules/util';\nimport { tRemoveListItemContent } from './actions';\nimport ItemHeader from '../ItemHeader';\nimport classes from './Item.module.css';\n\nconst getItemTitle = item => itemTypeMap[item.type].pluralTitle;\n\nconst getContentItems = item =>\n    orArray(item[itemTypeMap[item.type].propName]).filter(\n        (item, index, array) =>\n            array.findIndex(el => el.id === item.id) === index\n    );\n\nconst removeContent = (handler, item, contentToRemove) => () => {\n    handler(item, contentToRemove);\n};\n\nconst ListItem = (props, context) => {\n    const { item, editMode, tRemoveListItemContent } = props;\n    const contentItems = getContentItems(item);\n\n    const getLink = contentItem => {\n        const deleteButton = (\n            <button\n                className={classes.deletebutton}\n                onClick={removeContent(\n                    tRemoveListItemContent,\n                    item,\n                    contentItem\n                )}\n            >\n                <DeleteIcon className={classes.deleteicon} />\n            </button>\n        );\n\n        return (\n            <Fragment>\n                <a\n                    className={classes.link}\n                    style={{ color: colors.grey900 }}\n                    href={getItemUrl(item.type, contentItem, context.d2)}\n                >\n                    {contentItem.name}\n                </a>\n                {editMode ? deleteButton : null}\n            </Fragment>\n        );\n    };\n\n    return (\n        <Fragment>\n            <ItemHeader title={getItemTitle(item)} />\n            <Line />\n            <div className=\"dashboard-item-content\">\n                <ul className={classes.list}>\n                    {contentItems.map(contentItem => (\n                        <li className={classes.item} key={contentItem.id}>\n                            <DescriptionIcon className={classes.itemicon} />\n                            {getLink(contentItem)}\n                        </li>\n                    ))}\n                </ul>\n            </div>\n        </Fragment>\n    );\n};\n\nListItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nexport default connect(\n    null,\n    {\n        tRemoveListItemContent,\n    }\n)(ListItem);\n","import {\n    acUpdateDashboardItem,\n    acRemoveDashboardItem,\n} from '../../../actions/editDashboard';\nimport { itemTypeMap } from '../../../modules/itemTypes';\n\nexport const tRemoveListItemContent = (dashboardItem, content) => dispatch => {\n    const listItemType = itemTypeMap[dashboardItem.type].propName;\n\n    const newContent = dashboardItem[listItemType].filter(\n        item => item.id !== content.id\n    );\n\n    if (newContent.length) {\n        dashboardItem[listItemType] = newContent;\n        dispatch(acUpdateDashboardItem(dashboardItem));\n    } else {\n        dispatch(acRemoveDashboardItem(dashboardItem));\n    }\n};\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport Input from '@material-ui/core/Input';\nimport {\n    Parser as RichTextParser,\n    Editor as RichTextEditor,\n} from '@dhis2/d2-ui-rich-text';\n\nimport { acUpdateDashboardItem } from '../../../actions/editDashboard';\nimport { sGetEditDashboardItems } from '../../../reducers/editDashboard';\nimport { sGetDashboardItems } from '../../../reducers/dashboards';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nconst style = {\n    textDiv: {\n        padding: '10px',\n        whiteSpace: 'pre-line',\n        lineHeight: '20px',\n    },\n    textField: {\n        fontSize: '14px',\n        fontStretch: 'normal',\n        width: '90%',\n        margin: '0 auto',\n        display: 'block',\n        lineHeight: '24px',\n    },\n    container: {\n        marginBottom: '20px',\n        marginTop: '20px',\n    },\n};\n\nconst TextItem = props => {\n    const { item, editMode, text, acUpdateDashboardItem } = props;\n\n    const onChangeText = event => {\n        const updatedItem = {\n            ...item,\n            text: event.target.value,\n        };\n\n        acUpdateDashboardItem(updatedItem);\n    };\n\n    const viewItem = () => {\n        const textDivStyle = Object.assign({}, style.textField, style.textDiv);\n        return (\n            <div className=\"dashboard-item-content\" style={style.container}>\n                <RichTextParser style={textDivStyle}>{text}</RichTextParser>\n            </div>\n        );\n    };\n\n    const editItem = () => {\n        return (\n            <Fragment>\n                <ItemHeader title={i18n.t('Text item')} />\n                <Line />\n                <div className=\"dashboard-item-content\">\n                    <RichTextEditor onEdit={onChangeText}>\n                        <Input\n                            value={text}\n                            multiline\n                            fullWidth\n                            style={style.textField}\n                            placeholder={i18n.t('Add text here')}\n                            onChange={onChangeText}\n                        />\n                    </RichTextEditor>\n                </div>\n            </Fragment>\n        );\n    };\n\n    return <Fragment>{editMode ? editItem() : viewItem()}</Fragment>;\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    const items = ownProps.editMode\n        ? sGetEditDashboardItems(state)\n        : sGetDashboardItems(state);\n\n    const item = items.find(item => item.id === ownProps.item.id);\n\n    return {\n        text: item ? item.text : '',\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        acUpdateDashboardItem,\n    }\n)(TextItem);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nimport { FILTER_ORG_UNIT } from '../../../actions/itemFilters';\nimport { sGetItemFiltersRoot } from '../../../reducers/itemFilters';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nconst getIframeSrc = (appDetails, item, itemFilters) => {\n    let iframeSrc = `${appDetails.launchUrl}?dashboardItemId=${item.id}`;\n\n    if (\n        itemFilters &&\n        itemFilters[FILTER_ORG_UNIT] &&\n        itemFilters[FILTER_ORG_UNIT].length\n    ) {\n        const ouIds = itemFilters[FILTER_ORG_UNIT].map(\n            ouPath => ouPath.split('/').slice(-1)[0]\n        );\n\n        iframeSrc += `&userOrgUnit=${ouIds.join(',')}`;\n    }\n\n    return iframeSrc;\n};\n\nconst AppItem = ({ item, itemFilters }, context) => {\n    let appDetails;\n\n    const appKey = item.appKey;\n\n    if (appKey) {\n        appDetails = context.d2.system.installedApps.find(\n            app => app.key === appKey\n        );\n    }\n\n    return appDetails && appDetails.name && appDetails.launchUrl ? (\n        <Fragment>\n            <ItemHeader title={appDetails.name} />\n            <Line />\n            <iframe\n                title={appDetails.name}\n                src={getIframeSrc(appDetails, item, itemFilters)}\n                className=\"dashboard-item-content\"\n                style={{ border: 'none' }}\n            />\n        </Fragment>\n    ) : (\n        <Fragment>\n            <ItemHeader title={`${appKey} app not found`} />\n            <Line />\n            <div\n                className=\"dashboard-item-content\"\n                style={{\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    height: '90%',\n                }}\n            >\n                <NotInterestedIcon\n                    color=\"disabled\"\n                    disabled\n                    style={{ width: 100, height: 100, align: 'center' }}\n                />\n            </div>\n        </Fragment>\n    );\n};\n\nAppItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nconst mapStateToProps = state => ({\n    itemFilters: sGetItemFiltersRoot(state),\n});\n\nexport default connect(mapStateToProps)(AppItem);\n","import React, { Fragment } from 'react';\nimport i18n from '@dhis2/d2-i18n';\n\nimport { colors } from '@dhis2/ui-core';\nimport ItemHeader from '../ItemHeader';\n\nconst style = {\n    margin: '21px 28px',\n    fontSize: '14px',\n    lineHeight: '18px',\n    color: colors.grey600,\n};\n\nconst SpacerItem = () => {\n    return (\n        <Fragment>\n            <ItemHeader title={i18n.t('Spacer')} />\n            <p style={style}>\n                {i18n.t(\n                    'Use a spacer to create empty vertical space between other dashboard items.'\n                )}\n            </p>\n        </Fragment>\n    );\n};\n\nexport default SpacerItem;\n","import React from 'react';\n\nimport VisualizationItem from './VisualizationItem/Item';\nimport MessagesItem from './MessagesItem/Item';\nimport NotSupportedItem from './NotSupportedItem/Item';\nimport ListItem from './ListItem/Item';\nimport TextItem from './TextItem/Item';\nimport AppItem from './AppItem/Item';\nimport SpacerItem from './SpacerItem/Item';\nimport {\n    APP,\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_CHART,\n    EVENT_REPORT,\n    MESSAGES,\n    REPORTS,\n    RESOURCES,\n    USERS,\n    TEXT,\n    SPACER,\n} from '../../modules/itemTypes';\nimport { DEFAULT_STATE_ITEM_FILTERS } from '../../reducers/itemFilters';\n\nconst getGridItem = type => {\n    switch (type) {\n        case REPORT_TABLE:\n        case CHART:\n        case MAP:\n        case EVENT_CHART:\n        case EVENT_REPORT:\n            return VisualizationItem;\n        case MESSAGES:\n            return MessagesItem;\n        case REPORTS:\n        case RESOURCES:\n        case USERS:\n            return ListItem;\n        case TEXT:\n            return TextItem;\n        case SPACER:\n            return SpacerItem;\n        case APP:\n            return AppItem;\n        default:\n            return NotSupportedItem;\n    }\n};\n\nexport const Item = props => {\n    const GridItem = getGridItem(props.item.type);\n\n    return (\n        <GridItem\n            item={props.item}\n            editMode={props.editMode}\n            itemFilters={\n                props.editMode ? DEFAULT_STATE_ITEM_FILTERS : props.itemFilters\n            }\n            onToggleItemExpanded={props.onToggleItemExpanded}\n        />\n    );\n};\n","import React from 'react';\nimport ItemHeaderButton from '../Item/ItemHeaderButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { colors } from '@dhis2/ui-core';\n\nconst style = {\n    button: {\n        position: 'absolute',\n        top: '7px',\n        right: '7px',\n        zIndex: '1000',\n    },\n    icon: {\n        fill: colors.red500,\n    },\n};\n\nconst DeleteItemHeaderButton = ({ onClick }) => (\n    <ItemHeaderButton onClick={onClick} style={style.button}>\n        <DeleteIcon style={style.icon} />\n    </ItemHeaderButton>\n);\n\nexport default DeleteItemHeaderButton;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\n\nexport const NoContentMessage = ({ text }) => (\n    <div\n        style={{\n            padding: '50px 10px',\n            textAlign: 'center',\n            fontSize: '15px',\n            fontWeight: 500,\n            color: colors.grey600,\n        }}\n    >\n        {text}\n    </div>\n);\n\nexport default NoContentMessage;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash/debounce';\n\nconst defaultDebounceMs = 100;\nconst defaultBufferFactor = 0.25;\n\nclass ProgressiveLoadingContainer extends Component {\n    static propTypes = {\n        children: PropTypes.node.isRequired,\n        debounceMs: PropTypes.number,\n        bufferFactor: PropTypes.number,\n    };\n    static defaultProps = {\n        debounceMs: defaultDebounceMs,\n        bufferFactor: defaultBufferFactor,\n    };\n\n    state = {\n        shouldLoad: false,\n    };\n    containerRef = null;\n    shouldLoadHandler = null;\n\n    checkShouldLoad() {\n        const bufferPx = this.props.bufferFactor * window.innerHeight;\n\n        if (!this.containerRef) {\n            return;\n        }\n\n        const rect = this.containerRef.getBoundingClientRect();\n        if (\n            rect.bottom > -bufferPx &&\n            rect.top < window.innerHeight + bufferPx\n        ) {\n            this.setState({\n                shouldLoad: true,\n            });\n\n            this.removeHandler();\n        }\n    }\n\n    registerHandler() {\n        this.shouldLoadHandler = debounce(\n            () => this.checkShouldLoad(),\n            this.props.debounceMs\n        );\n\n        window.addEventListener('scroll', this.shouldLoadHandler);\n    }\n    removeHandler() {\n        window.removeEventListener('scroll', this.shouldLoadHandler);\n    }\n\n    componentDidMount() {\n        this.registerHandler();\n        this.checkShouldLoad();\n    }\n\n    componentWillUnmount() {\n        this.removeHandler();\n    }\n\n    render() {\n        const { children, debounceMs, bufferFactor, ...props } = this.props;\n        const { shouldLoad } = this.state;\n\n        return (\n            <div ref={ref => (this.containerRef = ref)} {...props}>\n                {shouldLoad && children}\n            </div>\n        );\n    }\n}\n\nexport default ProgressiveLoadingContainer;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ReactGridLayout from 'react-grid-layout';\nimport { CircularProgress, ScreenCover } from '@dhis2/ui-core';\n\nimport {\n    acUpdateDashboardLayout,\n    acRemoveDashboardItem,\n} from '../../actions/editDashboard';\nimport { Item } from '../Item/Item';\nimport { resize as pluginResize } from '../Item/VisualizationItem/plugin';\nimport { isPluginType } from '../../modules/itemTypes';\nimport {\n    GRID_ROW_HEIGHT,\n    GRID_COMPACT_TYPE,\n    ITEM_MIN_HEIGHT,\n    MARGIN,\n    getGridColumns,\n    hasShape,\n    onItemResize,\n} from './gridUtil';\nimport { orArray } from '../../modules/util';\nimport DeleteItemButton from './DeleteItemButton';\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\n\nimport './ItemGrid.css';\nimport { sGetSelectedId, sGetSelectedIsLoading } from '../../reducers/selected';\nimport {\n    sGetEditDashboardRoot,\n    sGetEditDashboardItems,\n} from '../../reducers/editDashboard';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n} from '../../reducers/dashboards';\nimport ProgressiveLoadingContainer from '../Item/ProgressiveLoadingContainer';\n\n// Component\n\nconst EXPANDED_HEIGHT = 17;\n\nexport class ItemGrid extends Component {\n    state = {\n        expandedItems: {},\n    };\n\n    onToggleItemExpanded = clickedId => {\n        const isExpanded =\n            typeof this.state.expandedItems[clickedId] === 'boolean'\n                ? this.state.expandedItems[clickedId]\n                : false;\n\n        const expandedItems = { ...this.state.expandedItems };\n        expandedItems[clickedId] = !isExpanded;\n        this.setState({ expandedItems });\n    };\n\n    onRemoveItem = clickedId => {\n        this.props.acRemoveDashboardItem(clickedId);\n    };\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.edit) {\n            this.setState({ expandedItems: {} });\n        }\n    }\n\n    onLayoutChange = newLayout => {\n        if (this.props.edit) {\n            this.props.acUpdateDashboardLayout(newLayout);\n        }\n    };\n\n    onResizeStop = (layout, oldItem, newItem) => {\n        onItemResize(newItem.i);\n\n        const dashboardItem = this.props.dashboardItems.find(\n            item => item.id === newItem.i\n        );\n\n        // call resize on the item component if it's a plugin type\n        if (dashboardItem && isPluginType(dashboardItem)) {\n            pluginResize(dashboardItem);\n        }\n    };\n\n    onRemoveItemWrapper = id => () => this.onRemoveItem(id);\n\n    render() {\n        const { edit, isLoading, dashboardItems } = this.props;\n\n        if (!isLoading && !dashboardItems.length) {\n            return (\n                <NoContentMessage\n                    text={i18n.t('There are no items on this dashboard')}\n                />\n            );\n        }\n\n        const items = dashboardItems.map(item => {\n            const expandedItem = this.state.expandedItems[item.id];\n            let hProp = { h: item.h };\n\n            if (expandedItem && expandedItem === true) {\n                hProp.h = item.h + EXPANDED_HEIGHT;\n            }\n\n            return Object.assign({}, item, hProp, {\n                i: item.id,\n                minH: ITEM_MIN_HEIGHT,\n            });\n        });\n\n        return (\n            <div className=\"grid-wrapper\">\n                {isLoading ? (\n                    <ScreenCover>\n                        <CircularProgress />\n                    </ScreenCover>\n                ) : null}\n                <ReactGridLayout\n                    onLayoutChange={this.onLayoutChange}\n                    onResizeStop={this.onResizeStop}\n                    className=\"layout\"\n                    layout={items}\n                    margin={MARGIN}\n                    cols={getGridColumns()}\n                    rowHeight={GRID_ROW_HEIGHT}\n                    width={window.innerWidth}\n                    compactType={GRID_COMPACT_TYPE}\n                    isDraggable={edit}\n                    isResizable={edit}\n                    draggableCancel=\"input,textarea\"\n                >\n                    {items.map(item => {\n                        const itemClassNames = [\n                            item.type,\n                            edit ? 'edit' : 'view',\n                        ].join(' ');\n\n                        return (\n                            <ProgressiveLoadingContainer\n                                key={item.i}\n                                className={itemClassNames}\n                            >\n                                {edit ? (\n                                    <DeleteItemButton\n                                        onClick={this.onRemoveItemWrapper(\n                                            item.id\n                                        )}\n                                    />\n                                ) : null}\n                                <Item\n                                    item={item}\n                                    editMode={edit}\n                                    onToggleItemExpanded={\n                                        this.onToggleItemExpanded\n                                    }\n                                />\n                            </ProgressiveLoadingContainer>\n                        );\n                    })}\n                </ReactGridLayout>\n            </div>\n        );\n    }\n}\n\nItemGrid.propTypes = {\n    dashboardItems: PropTypes.array,\n};\n\nItemGrid.defaultProps = {\n    dashboardItems: [],\n};\n\n// Container\n\nconst mapStateToProps = (state, ownProps) => {\n    const selectedDashboard = ownProps.edit\n        ? sGetEditDashboardRoot(state)\n        : sGetDashboardById(state, sGetSelectedId(state));\n\n    const dashboardItems = ownProps.edit\n        ? sGetEditDashboardItems(state)\n        : sGetDashboardItems(state);\n\n    return {\n        isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n        dashboardItems,\n    };\n};\n\nconst mapDispatchToProps = {\n    acUpdateDashboardLayout,\n    acRemoveDashboardItem,\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const validItems = orArray(stateProps.dashboardItems).filter(hasShape);\n\n    return {\n        ...dispatchProps,\n        edit: ownProps.edit,\n        isLoading: stateProps.isLoading,\n        dashboardItems: validItems,\n        onItemResize,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n    mergeProps\n)(ItemGrid);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport i18n from '@dhis2/d2-i18n';\n\nimport { colors } from '@dhis2/ui-core';\n\nconst styles = {\n    badgeContainer: {\n        margin: '2px',\n        padding: '0 16px',\n        borderRadius: '4px',\n        color: colors.white,\n        backgroundColor: '#212934',\n        height: 36,\n        display: 'flex',\n        alignItems: 'center',\n    },\n    badge: {\n        fontSize: '13px',\n        cursor: 'pointer',\n        whiteSpace: 'nowrap',\n    },\n    badgeRemove: {\n        fontSize: '12px',\n        textDecoration: 'underline',\n        marginLeft: '24px',\n        cursor: 'pointer',\n    },\n};\n\nclass FilterBadge extends Component {\n    onClick = id => () => this.props.onClick(id);\n    onRemove = id => () => this.props.onRemove(id);\n\n    render() {\n        const { data } = this.props;\n\n        return (\n            <div style={styles.badgeContainer}>\n                <span style={styles.badge} onClick={this.onClick(data.id)}>\n                    {`${data.name}: ${\n                        data.values.length > 1\n                            ? i18n.t('{{count}} selected', {\n                                  count: data.values.length,\n                              })\n                            : data.values[0].name\n                    }`}\n                </span>\n                <span\n                    style={styles.badgeRemove}\n                    onClick={this.onRemove(data.id)}\n                >\n                    {i18n.t('Remove')}\n                </span>\n            </div>\n        );\n    }\n}\n\nFilterBadge.propTypes = {\n    data: PropTypes.object.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onRemove: PropTypes.func.isRequired,\n};\n\nFilterBadge.defaultProps = {\n    onClick: Function.prototype,\n    onRemove: Function.prototype,\n};\n\nexport default FilterBadge;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { createSelector } from 'reselect';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport { sGetDimensions } from '../../reducers/dimensions';\nimport { sGetItemFiltersRoot } from '../../reducers/itemFilters';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { getTopOffset } from '../ControlBar/controlBarDimensions';\nimport { acRemoveItemFilter } from '../../actions/itemFilters';\nimport { acRemoveEditItemFilter } from '../../actions/editItemFilters';\nimport { acSetActiveModalDimension } from '../../actions/activeModalDimension';\n\nimport FilterBadge from './FilterBadge';\n\nconst styles = {\n    bar: {\n        position: 'sticky',\n        zIndex: 7,\n        padding: '8px 0',\n        display: 'flex',\n        justifyContent: 'center',\n        flexWrap: 'wrap',\n    },\n};\n\nexport class FilterBar extends Component {\n    onBadgeRemove = id => {\n        this.props.removeItemFilter(id);\n        this.props.removeEditItemFilter(id);\n    };\n\n    onBadgeClick = id => {\n        this.props.setActiveModalDimension({\n            id,\n            name: this.props.filters.find(item => item.id === id).name,\n        });\n    };\n\n    render() {\n        const { filters, userRows, classes } = this.props;\n        const top = getTopOffset(userRows) + 10;\n\n        return filters.length ? (\n            <div className={classes.bar} style={{ top }}>\n                {filters.map(filter => (\n                    <FilterBadge\n                        key={filter.id}\n                        data={filter}\n                        onClick={this.onBadgeClick}\n                        onRemove={this.onBadgeRemove}\n                    />\n                ))}\n            </div>\n        ) : null;\n    }\n}\n\nFilterBar.propTypes = {\n    filters: PropTypes.array.isRequired,\n    removeItemFilter: PropTypes.func.isRequired,\n    removeEditItemFilter: PropTypes.func.isRequired,\n};\n\nFilterBar.defaultProps = {\n    filters: [],\n    removeItemFIlter: Function.prototype,\n    removeEditItemFilter: Function.prototype,\n};\n\n// simplify the filters structure to:\n// [{ id: 'pe', name: 'Period', values: [{ id: 2019: name: '2019' }, {id: 'LAST_MONTH', name: 'Last month' }]}, ...]\nconst filtersSelector = createSelector(\n    [sGetItemFiltersRoot, sGetDimensions],\n    (filters, dimensions) =>\n        Object.keys(filters).reduce((arr, id) => {\n            arr.push({\n                id: id,\n                name: dimensions[id].name,\n                values: filters[id].map(value => ({\n                    id: value.id,\n                    name: value.displayName || value.name,\n                })),\n            });\n\n            return arr;\n        }, [])\n);\n\nconst mapStateToProps = state => ({\n    filters: filtersSelector(state),\n    userRows: sGetControlBarUserRows(state),\n});\n\nexport default connect(\n    mapStateToProps,\n    {\n        setActiveModalDimension: acSetActiveModalDimension,\n        removeItemFilter: acRemoveItemFilter,\n        removeEditItemFilter: acRemoveEditItemFilter,\n    }\n)(withStyles(styles)(FilterBar));\n","import React, { Fragment } from 'react';\nimport TitleBar from '../TitleBar/TitleBar';\nimport ItemGrid from '../ItemGrid/ItemGrid';\nimport FilterBar from '../FilterBar/FilterBar';\n\nexport const DashboardContent = props => (\n    <Fragment>\n        <TitleBar edit={props.editMode} />\n        <FilterBar />\n        <ItemGrid edit={props.editMode} />\n    </Fragment>\n);\n\nexport default DashboardContent;\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport isEmpty from 'lodash/isEmpty';\nimport i18n from '@dhis2/d2-i18n';\n\nimport {\n    sGetAllDashboards,\n    sDashboardsIsFetching,\n} from '../../reducers/dashboards';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport DashboardsBar from '../ControlBar/DashboardsBar';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport DashboardContent from './DashboardContent';\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nexport const Content = ({ hasDashboardContent, dashboardsIsEmpty }) => {\n    const msg = dashboardsIsEmpty\n        ? i18n.t(\n              'No dashboards found. Use the + button to create a new dashboard.'\n          )\n        : i18n.t('Requested dashboard not found');\n\n    return hasDashboardContent ? (\n        <DashboardContent editMode={false} />\n    ) : (\n        <NoContentMessage text={msg} />\n    );\n};\n\nexport const ViewDashboard = ({ id, dashboardsIsEmpty, dashboardsLoaded }) => {\n    const hasDashboardContent = id && !dashboardsIsEmpty;\n    const contentNotReady = !dashboardsLoaded || id === null;\n\n    return (\n        <Fragment>\n            <DashboardsBar />\n            <DashboardVerticalOffset />\n            <div className=\"dashboard-wrapper\">\n                {contentNotReady ? null : (\n                    <Content\n                        hasDashboardContent={hasDashboardContent}\n                        dashboardsIsEmpty={dashboardsIsEmpty}\n                    />\n                )}\n            </div>\n        </Fragment>\n    );\n};\n\nconst mapStateToProps = state => {\n    const dashboards = sGetAllDashboards(state);\n\n    return {\n        id: sGetSelectedId(state),\n        dashboardsIsEmpty: isEmpty(dashboards),\n        dashboardsLoaded: !sDashboardsIsFetching(state),\n    };\n};\n\nexport default connect(mapStateToProps)(ViewDashboard);\n","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport { Button } from '@dhis2/ui-core';\n\nexport const ConfirmDeleteDialog = ({\n    dashboardName,\n    onDeleteConfirmed,\n    onContinueEditing,\n    open,\n}) => {\n    const actions = [\n        <Button key=\"cancel\" secondary onClick={onContinueEditing}>\n            {i18n.t('Cancel')}\n        </Button>,\n        <Button key=\"delete\" destructive onClick={onDeleteConfirmed}>\n            {i18n.t('Delete')}\n        </Button>,\n    ];\n\n    return (\n        <Dialog open={open} onClose={onContinueEditing}>\n            <DialogTitle style={{ fontSize: '1.25rem', fontWeight: '450' }}>\n                {i18n.t('Delete dashboard')}\n            </DialogTitle>\n            <DialogContent>\n                <DialogContentText style={{ fontSize: '0.875rem' }}>\n                    {i18n.t(\n                        'Deleting dashboard \"{{ dashboardName }}\" will remove it for all users. This action cannot be undone. Are you sure you want to permanently delete this dashboard?',\n                        { dashboardName }\n                    )}\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>{actions}</DialogActions>\n        </Dialog>\n    );\n};\n\nexport default ConfirmDeleteDialog;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport ControlBar from './ControlBar';\nimport TranslationDialog from '@dhis2/d2-ui-translation-dialog';\nimport { Button } from '@dhis2/ui-core';\n\nimport ConfirmDeleteDialog from './ConfirmDeleteDialog';\nimport {\n    tSaveDashboard,\n    acClearEditDashboard,\n} from '../../actions/editDashboard';\nimport {\n    tDeleteDashboard,\n    acSetDashboardDisplayName,\n} from '../../actions/dashboards';\nimport {\n    sGetEditDashboardRoot,\n    sGetIsNewDashboard,\n} from '../../reducers/editDashboard';\nimport {\n    CONTROL_BAR_ROW_HEIGHT,\n    MIN_ROW_COUNT,\n    getControlBarHeight,\n} from './controlBarDimensions';\nimport { apiFetchDashboard } from '../../api/dashboards';\n\nimport classes from './styles/DashboardsBar.module.css';\n\nconst buttonBarStyle = {\n    height: CONTROL_BAR_ROW_HEIGHT,\n    paddingTop: '15px',\n    marginLeft: '15px',\n    marginRight: '15px',\n};\n\nexport class EditBar extends Component {\n    state = {\n        translationDialogIsOpen: false,\n        dashboardModel: undefined,\n        confirmDeleteDialogOpen: false,\n        redirectUrl: undefined,\n    };\n\n    onConfirmDelete = () => {\n        this.setState({ confirmDeleteDialogOpen: true });\n    };\n\n    onSave = () => {\n        this.props.onSave().then(newId => {\n            this.setState({ redirectUrl: `/${newId}` });\n        });\n    };\n\n    onDiscard = () => {\n        this.props.onDiscardChanges();\n        const redirectUrl = this.props.dashboardId\n            ? `/${this.props.dashboardId}`\n            : '/';\n        this.setState({ redirectUrl });\n    };\n\n    onContinueEditing = () => {\n        this.setState({ confirmDeleteDialogOpen: false });\n    };\n\n    onDeleteConfirmed = () => {\n        this.setState({ confirmDeleteDialogOpen: false });\n        this.props.onDelete(this.props.dashboardId).then(() => {\n            this.setState({ redirectUrl: '/' });\n        });\n    };\n\n    onTranslationsSaved = async translations => {\n        if (translations && translations.length) {\n            const dbLocale = await this.context.d2.currentUser.userSettings.get(\n                'keyDbLocale'\n            );\n\n            const translation = translations.find(\n                t => t.locale === dbLocale && t.property === 'NAME'\n            );\n\n            if (translation && translation.value) {\n                this.props.onTranslate(\n                    this.props.dashboardId,\n                    translation.value\n                );\n            }\n        }\n    };\n\n    fetchDashboardModel = () => {\n        if (this.props.dashboardId && !this.state.dashboardModel) {\n            apiFetchDashboard(this.props.dashboardId).then(dashboardModel =>\n                this.setState({ dashboardModel })\n            );\n        }\n    };\n\n    componentDidMount() {\n        this.fetchDashboardModel();\n    }\n\n    componentDidUpdate() {\n        this.fetchDashboardModel();\n    }\n\n    toggleTranslationDialog = () => {\n        this.setState({\n            translationDialogIsOpen: !this.state.translationDialogIsOpen,\n        });\n    };\n\n    confirmDeleteDialog = () =>\n        this.props.deleteAccess && this.props.dashboardId ? (\n            <ConfirmDeleteDialog\n                dashboardName={this.props.dashboardName}\n                onDeleteConfirmed={this.onDeleteConfirmed}\n                onContinueEditing={this.onContinueEditing}\n                open={this.state.confirmDeleteDialogOpen}\n            />\n        ) : null;\n\n    translationDialog = () =>\n        this.state.dashboardModel && this.state.dashboardModel.id ? (\n            <TranslationDialog\n                className=\"translation-dialog\"\n                d2={this.context.d2}\n                open={this.state.translationDialogIsOpen}\n                onRequestClose={this.toggleTranslationDialog}\n                objectToTranslate={this.state.dashboardModel}\n                fieldsToTranslate={['name', 'description']}\n                // TODO handle messages in snackbar\n                onTranslationSaved={this.onTranslationsSaved}\n                onTranslationError={err =>\n                    console.log('translation update error', err)\n                }\n            />\n        ) : null;\n\n    render() {\n        if (this.state.redirectUrl) {\n            return <Redirect to={this.state.redirectUrl} />;\n        }\n\n        const { dashboardId, deleteAccess, updateAccess } = this.props;\n        const controlBarHeight = getControlBarHeight(MIN_ROW_COUNT);\n\n        const discardBtnText = updateAccess\n            ? i18n.t('Exit without saving')\n            : i18n.t('Go to dashboards');\n\n        return (\n            <Fragment>\n                <ControlBar height={controlBarHeight} editMode={true}>\n                    <div style={buttonBarStyle}>\n                        {updateAccess ? (\n                            <div className={classes.leftControls}>\n                                <span style={{ marginRight: '15px' }}>\n                                    <Button primary onClick={this.onSave}>\n                                        {i18n.t('Save changes')}\n                                    </Button>\n                                </span>\n\n                                {dashboardId ? (\n                                    <span style={{ marginRight: '15px' }}>\n                                        <Button\n                                            onClick={\n                                                this.toggleTranslationDialog\n                                            }\n                                        >\n                                            {i18n.t('Translate')}\n                                        </Button>\n                                    </span>\n                                ) : null}\n                                {dashboardId && deleteAccess ? (\n                                    <Button onClick={this.onConfirmDelete}>\n                                        {i18n.t('Delete')}\n                                    </Button>\n                                ) : null}\n                            </div>\n                        ) : null}\n\n                        <div className={classes.rightControls}>\n                            <Button secondary onClick={this.onDiscard}>\n                                {discardBtnText}\n                            </Button>\n                        </div>\n                    </div>\n                </ControlBar>\n                {this.translationDialog()}\n                {this.confirmDeleteDialog()}\n            </Fragment>\n        );\n    }\n}\n\nEditBar.contextTypes = {\n    d2: PropTypes.object,\n};\n\nconst mapStateToProps = state => {\n    const dashboard = sGetEditDashboardRoot(state);\n\n    let deleteAccess;\n    let updateAccess;\n    if (sGetIsNewDashboard(state)) {\n        deleteAccess = true;\n        updateAccess = true;\n    } else {\n        updateAccess = dashboard.access ? dashboard.access.update : false;\n        deleteAccess = dashboard.access ? dashboard.access.delete : false;\n    }\n\n    return {\n        dashboardId: dashboard.id,\n        dashboardName: dashboard.name,\n        deleteAccess,\n        updateAccess,\n    };\n};\n\nconst mapDispatchToProps = dispatch => ({\n    onSave: () => dispatch(tSaveDashboard()).then(id => id),\n    onDelete: id => dispatch(tDeleteDashboard(id)),\n    onDiscardChanges: () => dispatch(acClearEditDashboard()),\n    onTranslate: (id, value) => dispatch(acSetDashboardDisplayName(id, value)),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(EditBar);\n","import React, { Fragment, Component } from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\n\nimport { acSetEditDashboard } from '../../actions/editDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n    sDashboardsIsFetching,\n} from '../../reducers/dashboards';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport DashboardContent from './DashboardContent';\nimport EditBar from '../ControlBar/EditBar';\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nexport const Content = ({ updateAccess }) => {\n    return updateAccess ? (\n        <DashboardContent editMode={true} />\n    ) : (\n        <NoContentMessage text={i18n.t('No access')} />\n    );\n};\nexport class EditDashboard extends Component {\n    state = {\n        initialized: false,\n    };\n\n    initEditDashboard = () => {\n        if (this.props.dashboard) {\n            this.setState({ initialized: true });\n            this.props.setEditDashboard(this.props.dashboard, this.props.items);\n        }\n    };\n\n    componentDidMount() {\n        this.initEditDashboard();\n    }\n\n    componentDidUpdate() {\n        if (!this.state.initialized) {\n            this.initEditDashboard();\n        }\n    }\n\n    getDashboardContent = () => {\n        const contentNotReady =\n            !this.props.dashboardsLoaded || this.props.id === null;\n\n        return (\n            <div className=\"dashboard-wrapper\">\n                {contentNotReady ? null : (\n                    <Content updateAccess={this.props.updateAccess} />\n                )}\n            </div>\n        );\n    };\n\n    render() {\n        return (\n            <Fragment>\n                <EditBar />\n                <DashboardVerticalOffset editMode={true} />\n                {this.getDashboardContent()}\n            </Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    const id = sGetSelectedId(state);\n    const dashboard = id ? sGetDashboardById(state, id) : null;\n\n    const updateAccess =\n        dashboard && dashboard.access ? dashboard.access.update : false;\n\n    return {\n        dashboard,\n        id,\n        updateAccess,\n        items: sGetDashboardItems(state),\n        dashboardsLoaded: !sDashboardsIsFetching(state),\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        setEditDashboard: acSetEditDashboard,\n    }\n)(EditDashboard);\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\n\nimport { acSetEditNewDashboard } from '../../actions/editDashboard';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport EditBar from '../ControlBar/EditBar';\nimport DashboardContent from './DashboardContent';\n\nclass NewDashboard extends Component {\n    componentDidMount() {\n        this.props.setNewDashboard();\n    }\n\n    render() {\n        return (\n            <Fragment>\n                <EditBar />\n                <DashboardVerticalOffset editMode={true} />\n                <div className=\"dashboard-wrapper\">\n                    <DashboardContent editMode={true} />\n                </div>\n            </Fragment>\n        );\n    }\n}\n\nexport default connect(\n    null,\n    {\n        setNewDashboard: acSetEditNewDashboard,\n    }\n)(NewDashboard);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { tSelectDashboard } from '../../actions/dashboards';\nimport { sDashboardsIsFetching } from '../../reducers/dashboards';\nimport { EDIT, NEW } from './dashboardModes';\nimport ViewDashboard from './ViewDashboard';\nimport EditDashboard from './EditDashboard';\nimport NewDashboard from './NewDashboard';\n\nclass Dashboard extends Component {\n    setDashboard = () => {\n        if (this.props.dashboardsLoaded) {\n            const id = this.props.match.params.dashboardId || null;\n\n            this.props.selectDashboard(id);\n\n            this.scrollToTop();\n        }\n    };\n\n    scrollToTop = () => {\n        window.scrollTo(0, 0);\n    };\n\n    componentDidMount() {\n        this.setDashboard();\n    }\n\n    componentDidUpdate() {\n        this.setDashboard();\n    }\n\n    render() {\n        switch (this.props.mode) {\n            case EDIT:\n                return <EditDashboard />;\n            case NEW:\n                return <NewDashboard />;\n            default:\n                return <ViewDashboard />;\n        }\n    }\n}\n\nconst mapStateToProps = state => {\n    return { dashboardsLoaded: !sDashboardsIsFetching(state) };\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        selectDashboard: tSelectDashboard,\n    }\n)(Dashboard);\n","export const EDIT = 'edit';\nexport const NEW = 'new';\nexport const VIEW = 'view';\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport HeaderBar from '@dhis2/ui/widgets/HeaderBar';\n\nimport { EDIT, VIEW, NEW } from './Dashboard/dashboardModes';\nimport { acReceivedUser } from '../actions/user';\nimport { tFetchDashboards } from '../actions/dashboards';\nimport { tSetControlBarRows } from '../actions/controlBar';\nimport { tSetDimensions } from '../actions/dimensions';\nimport Dashboard from './Dashboard/Dashboard';\nimport SnackbarMessage from './SnackbarMessage/SnackbarMessage';\n\nimport 'typeface-roboto';\nimport './App.css';\n\nexport class App extends Component {\n    componentDidMount() {\n        this.props.setCurrentUser(this.props.d2.currentUser);\n        this.props.fetchDashboards();\n        this.props.setControlBarRows();\n        this.props.setDimensions(this.props.d2);\n    }\n\n    getChildContext() {\n        return { baseUrl: this.props.baseUrl, i18n, d2: this.props.d2 };\n    }\n\n    render() {\n        return (\n            <div className=\"app-wrapper\">\n                <div className=\"dashboard-header-bar\">\n                    <HeaderBar appName={i18n.t('Dashboard')} />\n                </div>\n                <Router>\n                    <Switch>\n                        <Route\n                            exact\n                            path=\"/\"\n                            render={props => (\n                                <Dashboard {...props} mode={VIEW} />\n                            )}\n                        />\n                        <Route\n                            exact\n                            path=\"/new\"\n                            render={props => (\n                                <Dashboard {...props} mode={NEW} />\n                            )}\n                        />\n                        <Route\n                            exact\n                            path=\"/:dashboardId\"\n                            render={props => (\n                                <Dashboard {...props} mode={VIEW} />\n                            )}\n                        />\n                        <Route\n                            exact\n                            path=\"/:dashboardId/edit\"\n                            render={props => (\n                                <Dashboard {...props} mode={EDIT} />\n                            )}\n                        />\n                    </Switch>\n                </Router>\n                <SnackbarMessage />\n            </div>\n        );\n    }\n}\n\nApp.childContextTypes = {\n    baseUrl: PropTypes.string,\n    i18n: PropTypes.object,\n    d2: PropTypes.object,\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setCurrentUser: currentUser => dispatch(acReceivedUser(currentUser)),\n        fetchDashboards: () => dispatch(tFetchDashboards()),\n        setControlBarRows: () => dispatch(tSetControlBarRows()),\n        setDimensions: d2 => dispatch(tSetDimensions(d2)),\n    };\n};\n\nexport default connect(\n    null,\n    mapDispatchToProps\n)(App);\n","import { RECEIVED_USER } from '../reducers/user';\n\nexport const acReceivedUser = value => ({\n    type: RECEIVED_USER,\n    value,\n});\n","//------------------------------------------------------------------------------\n// <auto-generated>\n// This code was generated by d2-i18n-generate.\n//\n// Changes to this file may cause incorrect behavior and will be lost if\n// the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\nimport i18n from '@dhis2/d2-i18n';\nimport moment from 'moment';\nimport 'moment/locale/ar';\nimport 'moment/locale/es';\nimport 'moment/locale/fr';\nimport 'moment/locale/lo';\nimport 'moment/locale/pt';\nimport 'moment/locale/ru';\nimport 'moment/locale/sv';\nimport 'moment/locale/tg';\nimport 'moment/locale/uk';\nimport 'moment/locale/ur';\nimport 'moment/locale/vi';\nimport 'moment/locale/zh-cn';\n\nimport arTranslations from './ar/translations.json';\nimport daTranslations from './da/translations.json';\nimport enTranslations from './en/translations.json';\nimport esTranslations from './es/translations.json';\nimport frTranslations from './fr/translations.json';\nimport idTranslations from './id/translations.json';\nimport kmTranslations from './km/translations.json';\nimport loTranslations from './lo/translations.json';\nimport myTranslations from './my/translations.json';\nimport prsTranslations from './prs/translations.json';\nimport psTranslations from './ps/translations.json';\nimport ptTranslations from './pt/translations.json';\nimport pt_BRTranslations from './pt_BR/translations.json';\nimport ruTranslations from './ru/translations.json';\nimport svTranslations from './sv/translations.json';\nimport tetTranslations from './tet/translations.json';\nimport tgTranslations from './tg/translations.json';\nimport ukTranslations from './uk/translations.json';\nimport urTranslations from './ur/translations.json';\nimport viTranslations from './vi/translations.json';\nimport zhTranslations from './zh/translations.json';\n\nconst namespace = 'dashboards-app';\nmoment.locale('en');\n\ni18n.addResources('ar', namespace, arTranslations);\ni18n.addResources('da', namespace, daTranslations);\ni18n.addResources('en', namespace, enTranslations);\ni18n.addResources('es', namespace, esTranslations);\ni18n.addResources('fr', namespace, frTranslations);\ni18n.addResources('id', namespace, idTranslations);\ni18n.addResources('km', namespace, kmTranslations);\ni18n.addResources('lo', namespace, loTranslations);\ni18n.addResources('my', namespace, myTranslations);\ni18n.addResources('prs', namespace, prsTranslations);\ni18n.addResources('ps', namespace, psTranslations);\ni18n.addResources('pt', namespace, ptTranslations);\ni18n.addResources('pt_BR', namespace, pt_BRTranslations);\ni18n.addResources('ru', namespace, ruTranslations);\ni18n.addResources('sv', namespace, svTranslations);\ni18n.addResources('tet', namespace, tetTranslations);\ni18n.addResources('tg', namespace, tgTranslations);\ni18n.addResources('uk', namespace, ukTranslations);\ni18n.addResources('ur', namespace, urTranslations);\ni18n.addResources('vi', namespace, viTranslations);\ni18n.addResources('zh', namespace, zhTranslations);\n\ni18n.setDefaultNamespace(namespace);\ni18n.changeLanguage('en');\n\nexport default i18n;\n","/** @module reducers/selected */\nimport { validateReducer } from '../modules/util';\n\nexport const SET_STYLE = 'SET_STYLE';\n\nexport const DEFAULT_STATE_STYLE = 'LIST';\n\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\nconst style = (state = DEFAULT_STATE_STYLE, action) => {\n    switch (action.type) {\n        case SET_STYLE:\n            return validateReducer(action.value, DEFAULT_STATE_STYLE);\n        default:\n            return state;\n    }\n};\n\nexport default style;\n\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\nexport const sGetStyleRoot = state => state.style;\n","import { combineReducers } from 'redux';\nimport arraySort from 'd2-utilizr/lib/arraySort';\n\nimport dashboards, { sGetDashboardsRoot } from './dashboards';\nimport selected from './selected';\nimport dashboardsFilter, {\n    ownerData,\n    sGetFilterName,\n    sGetFilterOrder,\n    sGetFilterOwner,\n} from './dashboardsFilter';\nimport controlBar from './controlBar';\nimport visualizations from './visualizations';\nimport editDashboard from './editDashboard';\nimport messages from './messages';\nimport user from './user';\nimport snackbar from './snackbar';\nimport itemFilters from './itemFilters';\nimport editItemFilters from './editItemFilters';\nimport style from './style';\nimport dimensions from './dimensions';\nimport settings from './settings';\nimport activeModalDimension from './activeModalDimension';\n\nconst USER = 'system';\n\n// Reducers\n\nexport default combineReducers({\n    dashboards,\n    selected,\n    dashboardsFilter,\n    controlBar,\n    visualizations,\n    messages,\n    user,\n    editDashboard,\n    itemFilters,\n    editItemFilters,\n    style,\n    snackbar,\n    dimensions,\n    settings,\n    activeModalDimension,\n});\n\n// Map constants to data\nconst mapConstToData = {\n    NAME: 'name',\n    ITEMS: 'numberOfItems',\n    CREATED: 'created',\n    OWNER: 'owner',\n};\n\n// Selectors\n\n// Filter dashboards by name\nexport const sFilterDashboardsByName = (dashboards, filter) =>\n    dashboards.filter(d =>\n        d.displayName.toLowerCase().includes(filter.toLowerCase())\n    );\n\n// Filter dashboards by owner, TODO FIXME\nexport const sFilterDashboardsByOwner = (dashboards, filter) => {\n    const ME = ownerData[1]; // TODO\n    const OTHERS = ownerData[2]; // TODO\n\n    switch (filter) {\n        case ME:\n            return dashboards.filter(d => d.owner === USER);\n        case OTHERS:\n            return dashboards.filter(d => d.owner !== USER);\n        default:\n            return dashboards;\n    }\n};\n\n// Filter dashboards by order\nexport const sFilterDashboardsByOrder = (dashboards, filter) => {\n    const filterValues = filter.split(':');\n\n    const key = filterValues[0];\n    const direction = filterValues[1];\n\n    return arraySort(dashboards, direction, mapConstToData[key]);\n};\n\n// Selectors dependency level 2\n\n// Get filtered dashboards\nexport const sGetFilteredDashboards = state => {\n    const dashboards = sGetDashboardsRoot(state);\n\n    const nameFilter = sGetFilterName(state);\n    const ownerFilter = sGetFilterOwner(state);\n    const orderFilter = sGetFilterOrder(state);\n\n    return sFilterDashboardsByOrder(\n        sFilterDashboardsByName(\n            sFilterDashboardsByOwner(dashboards, ownerFilter),\n            nameFilter\n        ),\n        orderFilter\n    );\n};\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport reducer from './reducers';\n\nconst configureStore = () => {\n    const middleware = [thunk];\n\n    // Enable Redux devtools if extension is installed instead of redux-logger\n    const composeEnhancers =\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n    if (\n        !window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ &&\n        process.env.NODE_ENV !== 'production'\n    ) {\n        middleware.push(createLogger());\n    }\n\n    return createStore(\n        reducer,\n        composeEnhancers(applyMiddleware(...middleware))\n    );\n};\n\nexport default configureStore;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport { init as d2Init, config, getManifest, getUserSettings } from 'd2';\nimport dhis2theme from '@dhis2/d2-ui-core/theme/mui3.theme';\nimport { colors } from '@dhis2/ui-core';\n\n// temporary workaround until new ui headerbar is ready\nimport 'material-design-icons/iconfont/material-icons.css';\nimport './reset.css';\n\nimport App from './components/App';\nimport './index.css';\nimport i18n from './locales';\nimport configureStore from './configureStore';\n\n// small workaround until ui-core textarea is ready\ndhis2theme.palette.primary.dark = colors.teal600;\n\nconst muiTheme = () => createMuiTheme(dhis2theme);\n\nconst configI18n = userSettings => {\n    const uiLocale = userSettings.keyUiLocale;\n\n    if (uiLocale && uiLocale !== 'en') {\n        config.i18n.sources.add(`./i18n/i18n_module_${uiLocale}.properties`);\n    }\n\n    config.i18n.sources.add('./i18n/i18n_module_en.properties');\n    i18n.changeLanguage(uiLocale);\n};\n\nconst init = async () => {\n    const manifest = await getManifest('./manifest.webapp');\n\n    // log app info\n    console.info(\n        `Dashboards app, v${manifest.version}, ${\n            manifest.manifest_generated_at\n        }`\n    );\n\n    const isProd = process.env.NODE_ENV === 'production';\n\n    if (\n        !isProd &&\n        (!process.env.REACT_APP_DHIS2_BASE_URL ||\n            !process.env.REACT_APP_DHIS2_AUTHORIZATION)\n    ) {\n        throw new Error(\n            'Missing env variables REACT_APP_DHIS2_BASE_URL and REACT_APP_DHIS2_AUTHORIZATION'\n        );\n    }\n\n    // api config\n    const baseUrl = isProd\n        ? manifest.activities.dhis.href\n        : process.env.REACT_APP_DHIS2_BASE_URL;\n    const authorization = process.env.REACT_APP_DHIS2_AUTHORIZATION;\n\n    config.baseUrl = `${baseUrl}/api/${manifest.dhis2.apiVersion}`;\n    config.headers = isProd ? null : { Authorization: authorization };\n    config.schemas = [\n        'chart',\n        'map',\n        'report',\n        'reportTable',\n        'eventChart',\n        'eventReport',\n        'dashboard',\n        'organisationUnit',\n        'userGroup',\n    ];\n\n    getUserSettings()\n        .then(configI18n)\n        .then(() => d2Init(config))\n        .then(initializedD2 => {\n            ReactDOM.render(\n                <Provider store={configureStore()}>\n                    <MuiThemeProvider theme={muiTheme()}>\n                        <App baseUrl={baseUrl} d2={initializedD2} />\n                    </MuiThemeProvider>\n                </Provider>,\n                document.getElementById('root')\n            );\n        });\n};\n\ninit();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"leftControls\":\"DashboardsBar_leftControls__2kr14\",\"rightControls\":\"DashboardsBar_rightControls__2l1lT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuItem\":\"ContentMenuItem_menuItem__2DIcB\",\"launchLink\":\"ContentMenuItem_launchLink__MRANR\",\"label\":\"ContentMenuItem_label__2pIfq\",\"buttonInsert\":\"ContentMenuItem_buttonInsert__1GlZy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ControlBar_root__3LaTt\",\"content\":\"ControlBar_content__1r98-\",\"draghandle\":\"ControlBar_draghandle__1VWa0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ClearButton_button__2yjcV\",\"icon\":\"ClearButton_icon__1fqj8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"showMoreButton\":\"CategorizedMenuGroup_showMoreButton__3-0Wa\"};"],"sourceRoot":""}
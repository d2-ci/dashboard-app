{"version":3,"sources":["modules/itemTypes.js","api/metadata.js","modules/util.js","components/Item/ListItem/Item.module.css","components/ControlBar/styles/DashboardItemChip.module.css","components/TitleBar/styles/EditTitleBar.module.css","components/TitleBar/styles/ViewTitleBar.module.css","reducers/user.js","reducers/dashboards.js","reducers/editDashboard.js","reducers/editItemFilters.js","reducers/selected.js","actions/editItemFilters.js","reducers/itemFilters.js","actions/itemFilters.js","reducers/messages.js","api/messages.js","reducers/snackbar.js","actions/snackbar.js","reducers/visualizations.js","actions/visualizations.js","api/index.js","api/dashboards.js","components/SnackbarMessage/SnackbarMessage.js","actions/selected.js","api/localStorage.js","components/Item/MessagesItem/actions.js","api/editDashboard.js","actions/editDashboard.js","actions/dashboards.js","reducers/controlBar.js","api/controlBar.js","actions/controlBar.js","reducers/dimensions.js","reducers/settings.js","actions/dimensions.js","components/ControlBar/ShowMoreButton.js","components/ControlBar/controlBarDimensions.js","components/ControlBar/ControlBar.js","icons/Star.js","api/dataStatistics.js","components/ControlBar/DashboardItemChip.js","icons/AddCircle.js","icons/Clear.js","components/ControlBar/ClearButton.js","reducers/dashboardsFilter.js","components/ControlBar/Filter.js","components/ControlBar/DashboardsBar.js","actions/dashboardsFilter.js","components/Dashboard/DashboardVerticalOffset.js","components/ItemSelector/HeaderMenuItem.js","icons/Launch.js","components/ItemSelector/ContentMenuItem.js","components/ItemSelector/selectableItems.js","components/ItemSelector/CategorizedMenuGroup.js","components/ItemSelector/actions.js","components/ItemSelector/SinglesMenuGroup.js","components/ItemSelector/ItemSelector.js","components/TitleBar/EditTitleBar.js","components/ItemFilter/FilterDialog.js","reducers/activeModalDimension.js","actions/activeModalDimension.js","components/ItemFilter/FilterSelector.js","components/TitleBar/Info.js","components/TitleBar/ViewTitleBar.js","components/TitleBar/TitleBar.js","components/Item/VisualizationItem/DefaultPlugin.js","components/Item/VisualizationItem/assets/icons.js","components/Item/VisualizationItem/FatalErrorBoundary.js","components/Item/DeleteItemButton.js","components/Item/ItemHeader.js","components/Item/VisualizationItem/ItemHeaderButtons.js","components/Item/VisualizationItem/ItemFooter.js","modules/memoizeOne.js","components/Item/VisualizationItem/LoadingMask.js","components/Item/VisualizationItem/Item.js","widgets/Line.js","components/Item/MessagesItem/Item.js","components/Item/NotSupportedItem/Item.js","icons/Description.js","icons/Delete.js","components/Item/ListItem/Item.js","components/Item/ListItem/actions.js","components/Item/TextItem/Item.js","components/Item/AppItem/Item.js","components/Item/SpacerItem/Item.js","components/Item/Item.js","widgets/NoContentMessage.js","components/Item/ProgressiveLoadingContainer.js","components/ItemGrid/ItemGrid.js","components/FilterBar/FilterBadge.js","components/FilterBar/FilterBar.js","components/Dashboard/DashboardContent.js","components/Dashboard/ViewDashboard.js","components/ControlBar/ConfirmDeleteDialog.js","components/ControlBar/EditBar.js","components/Dashboard/EditDashboard.js","components/Dashboard/NewDashboard.js","components/Dashboard/Dashboard.js","components/Dashboard/dashboardModes.js","components/App.js","actions/user.js","locales/index.js","reducers/style.js","reducers/index.js","configureStore.js","index.js","components/ControlBar/styles/DashboardsBar.module.css","components/ItemSelector/styles/ContentMenuItem.module.css","components/Item/styles/ItemHeader.module.css","components/ControlBar/styles/ControlBar.module.css","components/Item/VisualizationItem/styles/FatalErrorBoundary.module.css","components/ControlBar/styles/ShowMoreButton.module.css","components/ControlBar/styles/ClearButton.module.css","components/ControlBar/styles/Filter.module.css","components/Item/VisualizationItem/styles/LoadingMask.module.css","components/Item/VisualizationItem/styles/Item.module.css","components/Item/VisualizationItem/plugin.js","components/ItemGrid/gridUtil.js","components/ItemSelector/styles/CategorizedMenuGroup.module.css","components/Item/styles/DeleteItemButton.module.css","components/FilterBar/styles/FilterBar.module.css"],"names":["VISUALIZATION","REPORT_TABLE","CHART","MAP","EVENT_REPORT","EVENT_CHART","APP","REPORTS","RESOURCES","USERS","MESSAGES","TEXT","SPACER","spacerContent","emptyTextItemContent","isSpacerType","item","type","text","isTextType","isVisualizationType","itemTypeMap","hasMapView","itemType","domainType","isTrackerDomainType","getDefaultItemCount","defaultItemCount","getAppName","appName","_itemTypeMap","Object","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","id","endPointName","propName","pluralTitle","i18n","t","appUrl","concat","getEndPointName","getItemUrl","d2","url","launchUrl","getBaseUrl","getItemIcon","TableIcon","ChartIcon","MapIcon","ExtensionIcon","DescriptionIcon","PersonIcon","FontDownloadIcon","EmailIcon","CropFreeIcon","NotInterestedIcon","getIdNameFields","rename","arguments","length","undefined","getDimensionFields","_ref2","withItems","arrayClean","join","getAxesFields","_ref3","getFavoriteFields","_ref4","withDimensions","withOptions","getFavoritesFields","_ref5","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","getListItemFields","getMapFields","apiFetchFavorite","_ref6","fields","getInstance","then","Api","getApi","get","orArray","param","Array","isArray","orObject","isObject","arrayToIdMap","array","reduce","obj","formatDate","value","uiLocale","global","Intl","DateTimeFormat","locale","year","month","day","format","Date","substr","replace","validateReducer","defaultValue","api","idx","baseUrl","indexOf","slice","getWithoutId","object","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","module","exports","list","itemicon","link","deleteicon","deletebutton","chip","icon","selected","unselected","section","titleDescription","title","description","itemSelector","actions","editLink","titleBar","titleBarIcon","DEFAULT_STATE_USER","username","isSuperuser","sGetUserUsername","state","user","DEFAULT_STATE_DASHBOARDS","byId","items","updateDashboardProp","_ref","dashboardId","prop","objectSpread","defineProperty","sGetDashboardsRoot","dashboards","sGetDashboardById","sDashboardsIsFetching","sGetAllDashboards","sGetDashboardItems","sGetStarredDashboards","values","filter","dashboard","starred","sGetUnstarredDashboards","sGetDashboardsSortedByStarred","toConsumableArray","arraySort","getCustomDashboards","data","arrayFrom","map","d","name","displayName","displayDescription","favorite","owner","created","split","lastUpdated","access","numberOfItems","dashboardItems","reportTable","chart","DEFAULT_STATE_EDIT_DASHBOARD","NEW_DASHBOARD_STATE","sGetEditDashboardRoot","editDashboard","sGetIsEditing","isEmpty","sGetEditDashboardItems","DEFAULT_STATE_EDIT_ITEM_FILTERS","sGetEditItemFiltersRoot","editItemFilters","combineReducers","action","isLoading","showDescription","sGetSelectedRoot","sGetSelectedId","sGetSelectedIsLoading","sGetSelectedShowDescription","acRemoveEditItemFilter","DEFAULT_STATE_ITEM_FILTERS","sGetItemFiltersRoot","itemFilters","sGetFiltersKeys","keys","acRemoveItemFilter","sGetMessagesRoot","messages","getMessages","catch","error","console","log","DEFAULT_STATE_SNACKBAR","message","duration","open","acCloseSnackbar","DEFAULT_STATE_VISUALIZATIONS","p","sGetVisualization","visualizations","sGetVisualizationsRoot","acAddVisualization","onError","getDashboardItemsFields","withFavorite","getDashboardFields","apiFetchDashboard","models","apiStarDashboard","isStarred","post","delete","apiDeleteDashboard","loadingDashboardMsg","SnackbarMessageContent","react_default","a","createElement","style","fontWeight","connect","_sGetSnackbar","snackbar","sGetSnackbar","snackbarOpen","snackbarMessage","snackbarDuration","onCloseSnackbar","props","Snackbar_default","zIndex","SnackbarMessage_SnackbarMessageContent","autoHideDuration","onClose","acSetSelectedId","acSetSelectedIsLoading","tLoadDashboard","asyncToGenerator","regenerator_default","mark","_callee","dispatch","dash","wrap","_context","prev","next","sent","acAppendDashboards","abrupt","Promise","resolve","t0","stop","_x","apply","this","tSetSelectedDashboardById","_callee2","getState","snackbarTimeout","onSuccess","_context2","setTimeout","dashboardName","customDashboard","acSetDashboardItems","withShape","localStorage","setItem","forEach","extractFavorite","messageConversations","filters","clearTimeout","_x2","_x3","saveDashboard","assign","width","w","height","h","save","msg","response","uid","updateDashboard","postDashboard","create","acAddDashboardItem","itemPropName","generateUid","content","NEW_ITEM_SHAPE","acUpdateDashboardItem","acRemoveDashboardItem","acSetDashboardStarred","tFetchDashboards","collection","paging","toArray","userRows","sGetControlBarUserRows","controlBar","sGetControlBarRoot","KEY","hasNamespace","currentUser","dataStore","has","getNamespace","apiGetControlBarRows","_callee3","namespace","_context3","t1","t2","find","key","apiPostControlBarRows","_callee4","rows","_context4","set","_x4","_x5","acSetControlBarUserRows","DEFAULT_DIMENSIONS","getDimensionById","DIMENSION_ID_PERIOD","DIMENSION_ID_ORGUNIT","sGetDimensions","dimensions","DEFAULT_SETTINGS","keyDateFormat","keyAnalysisRelativePeriod","keyAnalysisDigitGroupSeparator","displayNameProperty","rootOrganisationUnit","sGetSettings","settings","sGetSettingsDisplayNameProperty","acSetDimensions","ShowMoreButton","onClick","isMaxHeight","disabled","textAlign","className","classes","showMore","MIN_ROW_COUNT","getRowsHeight","getNumRowsFromHeight","Math","floor","FIRST_ROW_PADDING_HEIGHT","getTopOffset","getControlBarHeight","ControlBar","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onStartDrag","setState","dragging","window","addEventListener","onDrag","onEndDrag","event","preventDefault","stopPropagation","newHeight","clientY","onChangeHeight","requestAnimationFrame","removeEventListener","draghandle","onMouseDown","max","rootStyle","top","backgroundColor","editMode","colors","yellow050","white","paddingBottom","transition","root","children","renderDragHandle","React","Component","defaultProps","StarIcon","xmlns","viewBox","fill","apiPostDataStatistics","eventType","DashboardItemChip","label","chipProps","selectedState","Star","Link","to","debounce","lib","AddCircleIcon","teal600","ClearIcon","grey800","ClearButton","onClear","button","Clear","color","ownerData","DEFAULT_STATE_DASHBOARDS_FILTER_NAME","DEFAULT_STATE_DASHBOARDS_FILTER_OWNER","order","sGetDashboardsFilterRoot","dashboardsFilter","sGetFilterName","KEYCODE_ENTER","KEYCODE_ESCAPE","Filter","_Component","setFilterValue","onChangeName","target","handleKeyUp","keyCode","onKeypressEnter","inherits","createClass","nextProps","_this$props","startAdornment","InputAdornment_default","position","Search_default","searchIcon","endAdornment","ControlBar_ClearButton","Input_default","filterField","placeholder","onChange","onKeyUp","Function","prototype","MAX_ROW_COUNT","DashboardsBar","_getPrototypeOf2","_len","args","_key","setInitialDashboardState","adjustedHeight","newRows","newRowCount","min","onToggleMaxHeight","onSelectDashboard","history","push","selectedId","onChangeFilterName","rowCount","controlBarHeight","contentWrapperStyle","padding","overflowY","components_ControlBar_ControlBar","leftControls","display","textDecoration","marginRight","AddCircle","ControlBar_Filter","ControlBar_DashboardItemChip","ControlBar_ShowMoreButton","mapDispatchToProps","withRouter","stateProps","dispatchProps","ownProps","displayDashboards","toLowerCase","includes","marginTop","HeaderMenuItem","dense","LaunchIcon","grey600","LaunchLink","e","launchLink","rel","href","Launch","InsertButton","buttonInsert","ContentMenuItem","onInsert","visType","ItemIcon","renderedItemIcon","visTypeIcons","menuItem","margin","ContentMenuItem_LaunchLink","ContentMenuItem_InsertButton","singleItems","header","categorizedItems","listItemTypes","CategorizedMenuGroup","addItem","tAddListItemContent","newItem","toggleSeeMore","seeMore","onChangeItemsLimit","_this2","_this$props2","hasMore","Fragment","ItemSelector_HeaderMenuItem","itemUrl","context","ItemSelector_ContentMenuItem","showMoreButton","contextTypes","PropTypes","isRequired","dashboardItem","listItemType","dashboardItemIndex","findIndex","category","addToDashboard","ItemSearchField","onFocus","ItemSelector","closeList","openList","_","fetchItems","anchorEl","currentTarget","setFilter","getCategorizedMenuGroups","itemCount","allItems","maxOptions","ItemSelector_CategorizedMenuGroup","getSinglesMenuGroups","ItemSelector_SinglesMenuGroup","getMenuGroups","queryString","add","Set","ItemSelector_ItemSearchField","Popover_default","anchorOrigin","horizontal","vertical","transformOrigin","PaperProps","disableAutoFocus","disableRestoreFocus","EditTitleBar","onChangeTitle","onChangeDescription","components_ItemSelector_ItemSelector","selectedDashboard","peId","ouId","FilterDialog","onConfirm","dimension","selectedItems","dialogId","commonProps","onSelect","onDeselect","onReorder","build","selectedPeriods","ouItems","dialogTitle","Dialog_default","maxWidth","disableEnforceFocus","dialogContent","DialogActions_default","kind","DEFAULT_STATE_ACTIVE_MODAL_DIMENSION","sGetActiveModalDimension","activeModalDimension","acSetActiveModalDimension","FilterSelector","openPanel","closePanel","closeDialog","clearActiveModalDimension","selectDimension","setActiveModalDimension","onSelectItems","dimensionId","setEditItemFilters","onDeselectItems","itemIdsToRemove","newList","removeEditItemFilter","onReorderItems","itemIds","oldList","reorderedList","saveFilter","filterItems","addItemFilter","removeItemFilter","theme","selectedDimensions","ArrowDropDown_default","Boolean","fontFamily","typography","onDimensionClick","selectedIds","ItemFilter_FilterDialog","withTheme","Info","show","toggle","InfoOutlined_default","NO_DESCRIPTION","ViewTitleBar","toggleSharingDialog","sharingDialogIsOpen","onStarClick","onInfoClick","titleStyle","cursor","userSelect","StarBorder","TitleBar_Info","marginLeft","update","manage","ItemFilter_FilterSelector","paddingTop","d2_ui_sharing_dialog_default","onRequestClose","tStarDashboard","fontSize","black","minWidth","TitleBar","edit","TitleBar_EditTitleBar","TitleBar_ViewTitleBar","DefaultPlugin","pluginCredentials","shouldPluginReload","prevProps","reloadAllowed","filtersChanged","vis","visualization","prevVis","visChanged","activeType","reloadPlugin","pluginManager","currentVis","useActiveType","credentials","getActiveType","auth","defaultHeaders","Authorization","getGridItemDomId","textDiv","ThreeDots","SpeechBubble","fillRule","transform","Warning","FatalErrorBoundary","errorFound","info","container","icons_Warning","DeleteItemButton","deleteItemButton","Delete_default","red500","HEADER_MARGIN_HEIGHT","ItemHeader","actionButtons","itemId","forwardedRef","itemHeaderWrap","ref","itemTitle","itemActionsWrap","Item_DeleteItemButton","ConnectedItemHeader","forwardRef","iconFill","ItemHeaderButtons","_useState","useState","_useState2","slicedToArray","setAnchorEl","onSelectActiveType","isTrackerType","onViewTable","handleClose","onViewChart","onViewMap","canViewAs","isSingleValue","isYearOverYear","VIS_TYPE_GAUGE","VIS_TYPE_PIE","interpretationMenuLabel","activeFooter","pluginIsAvailable","small","secondary","icons_ThreeDots","InsertChart_default","ViewList_default","Public_default","Launch_default","getLink","icons_SpeechBubble","onToggleFooter","scrollContainer","line","border","grey100","ItemFooter","objectId","getId","d2_ui_interpretations_default","memoizeOne","fn","lastArgs","lastValue","every","arg","i","CircularIndeterminate","outer","CircularProgress_default","progress","Item","showFooter","configLoaded","pluginIsLoaded","applyFilters","visRows","visColumns","columns","visFilters","dimensionFound","dimensionObjects","getUniqueKey","uniqueId","getPluginComponent","memoizedGetVisualizationConfig","calculatedHeight","originalHeight","headerRef","current","clientHeight","ITEM_CONTENT_PADDING_BOTTOM","memoizedGetContentStyle","contentRef","offsetHeight","loadingCover","LoadingMask","es_lib","memoizedApplyFilters","onLoadingComplete","forDashboard","mapViews","layer","VisualizationItem_DefaultPlugin","onToggleItemExpanded","getContentStyle","measuredHeight","createRef","getVisualizationConfig","_componentDidMount","onVisualizationLoaded","prevState","VisualizationItem_ItemHeaderButtons","Item_ItemHeader","VisualizationItem_FatalErrorBoundary","VisualizationItem_ItemFooter","acSetActiveVisualizationType","grey200","Line","PRIVATE","messageTypes","_messageTypes","listStyleType","paddingLeft","seeAll","marginBottom","sender","lineHeight","snippet","maxHeight","overflow","MessagesItem","getMessageHref","msgIdentifier","messageType","getMessageSender","latestMsg","getMessageItems","editClass","readClass","read","msgDate","document","location","messageCount","userSettings","widgets_Line","string","MessagesContainer","NotSupportedItem","justifyContent","alignItems","NotInterested_default","align","grey500","DeleteIcon","getItemTitle","ListItem","tRemoveListItemContent","contentItems","index","el","getContentItems","contentItem","Description","deleteButton","icons_Delete","grey900","newContent","whiteSpace","textField","fontStretch","onChangeText","updatedItem","d2_ui_rich_text","onEdit","multiline","fullWidth","textDivStyle","viewItem","getIframeSrc","appDetails","iframeSrc","ouIds","ouPath","AppItem","appKey","system","installedApps","app","src","SpacerItem","GridItem","VisualizationItem","TextItem","getGridItem","NoContentMessage","ProgressiveLoadingContainer","shouldLoad","containerRef","shouldLoadHandler","bufferPx","bufferFactor","innerHeight","rect","getBoundingClientRect","bottom","removeHandler","checkShouldLoad","debounceMs","registerHandler","_this3","objectWithoutProperties","eventProps","pick","EXPANDED_HEIGHT","ItemGrid","expandedItems","clickedId","isExpanded","onRemoveItem","onLayoutChange","newLayout","acUpdateDashboardLayout","onResizeStop","layout","oldItem","onItemResize","pluginResize","onRemoveItemWrapper","getItem","expandedItem","hProp","minH","ITEM_MIN_HEIGHT","randomNumber","random","getItems","getMemoizedItem","getItemComponent","itemClassNames","Item_ProgressiveLoadingContainer","Item_Item_Item","getItemComponents","memoize","widgets_NoContentMessage","react_grid_layout_default","MARGIN","cols","getGridColumns","rowHeight","GRID_ROW_HEIGHT","innerWidth","compactType","GRID_COMPACT_TYPE","isDraggable","isResizable","draggableCancel","validItems","hasShape","styles","badgeContainer","borderRadius","badge","badgeRemove","FilterBadge","onRemove","count","FilterBar","onBadgeRemove","onBadgeClick","bar","FilterBar_FilterBadge","removeItemFIlter","filtersSelector","createSelector","arr","DashboardContent","components_TitleBar_TitleBar","components_FilterBar_FilterBar","components_ItemGrid_ItemGrid","Content","hasDashboardContent","dashboardsIsEmpty","Dashboard_DashboardContent","dashboardsLoaded","contentNotReady","ControlBar_DashboardsBar","Dashboard_DashboardVerticalOffset","ViewDashboard_Content","ConfirmDeleteDialog","onDeleteConfirmed","onContinueEditing","destructive","DialogTitle_default","DialogContent_default","DialogContentText_default","buttonBarStyle","EditBar","translationDialogIsOpen","dashboardModel","confirmDeleteDialogOpen","redirectUrl","onConfirmDelete","onSave","newId","onDiscard","onDiscardChanges","onDelete","onTranslationsSaved","translations","dbLocale","translation","property","onTranslate","fetchDashboardModel","toggleTranslationDialog","confirmDeleteDialog","deleteAccess","ControlBar_ConfirmDeleteDialog","translationDialog","d2_ui_translation_dialog_default","objectToTranslate","fieldsToTranslate","onTranslationSaved","onTranslationError","err","Redirect","updateAccess","discardBtnText","primary","rightControls","sGetIsNewDashboard","dashboardToSave","tDeleteDashboard","acSetDashboardDisplayName","EditDashboard","initialized","initEditDashboard","setEditDashboard","getDashboardContent","EditDashboard_Content","ControlBar_EditBar","NewDashboard","setNewDashboard","Dashboard","setDashboard","match","params","selectDashboard","scrollToTop","scrollTo","mode","Dashboard_EditDashboard","Dashboard_NewDashboard","Dashboard_ViewDashboard","dashboardToSelect","preferredId","App","setCurrentUser","fetchDashboards","setControlBarRows","setDimensions","spacers","HeaderBar","HashRouter","Switch","Route","exact","path","render","components_Dashboard_Dashboard","components_SnackbarMessage_SnackbarMessage","childContextTypes","controlBarRows","displayNameProp","filteredDimensions","apiFetchDimensions","dim","dimensionType","dataDimensionType","tSetDimensions","moment","addResources","arTranslations","daTranslations","enTranslations","esTranslations","frTranslations","idTranslations","kmTranslations","loTranslations","myTranslations","prsTranslations","psTranslations","ptTranslations","pt_BRTranslations","ruTranslations","svTranslations","tetTranslations","tgTranslations","ukTranslations","urTranslations","viTranslations","zhTranslations","zh_CNTranslations","setDefaultNamespace","changeLanguage","objectClean","conversations","$merge","d2Object","keyUiLocale","authorities","newState","k","$unshift","idToRemove","$splice","stateItems","layoutHasChanged","newStateItems","x","y","stateItem","si","configureStore","middleware","thunk","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducer","applyMiddleware","configI18n","config","sources","manifest","isProd","getManifest","version","manifest_generated_at","process","activities","dhis","dhis2","apiVersion","headers","schemas","getUserSettings","d2Init","initializedD2","ReactDOM","build_es","es","store","createMuiTheme","dhis2theme","src_components_App","getElementById","init","itemWrap","itemTypeToExternalPlugin","_itemTypeToExternalPl","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_3__","getPlugin","hasIntegratedPlugin","eventReport","eventChart","loadPlugin","plugin","load","loadingIndicator","getName","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","fetch","fetchedFavorite","resize","unmount","originalType","extractedMapView","mv","VIS_TYPE_COLUMN","VIS_TYPE_PIVOT_TABLE","__webpack_require__","__webpack_exports__","d2_utilizr_lib_isFunction__WEBPACK_IMPORTED_MODULE_0__","d2_utilizr_lib_isFunction__WEBPACK_IMPORTED_MODULE_0___default","n","_modules_util__WEBPACK_IMPORTED_MODULE_1__","isNonNegativeInteger","Number","isInteger","itemWithShape","Error","col","row","itemWidth","itemHeight","getShape","round","getOriginalHeight","querySelector","isFunction","setViewportSize","clientWidth"],"mappings":"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","file":"static/js/main.9a18ac4d.chunk.js","sourcesContent":["import i18n from '@dhis2/d2-i18n';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\nimport ExtensionIcon from '@material-ui/icons/Extension';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport PersonIcon from '@material-ui/icons/Person';\nimport FontDownloadIcon from '@material-ui/icons/FontDownload';\nimport EmailIcon from '@material-ui/icons/Email';\nimport CropFreeIcon from '@material-ui/icons/CropFree';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nimport { getBaseUrl } from './util';\n\n// Item types\nexport const VISUALIZATION = 'VISUALIZATION';\nexport const REPORT_TABLE = 'REPORT_TABLE';\nexport const CHART = 'CHART';\nexport const MAP = 'MAP';\nexport const EVENT_REPORT = 'EVENT_REPORT';\nexport const EVENT_CHART = 'EVENT_CHART';\nexport const APP = 'APP';\nexport const REPORTS = 'REPORTS';\nexport const RESOURCES = 'RESOURCES';\nexport const USERS = 'USERS';\nexport const MESSAGES = 'MESSAGES';\nexport const TEXT = 'TEXT';\nexport const SPACER = 'SPACER';\n\nconst DOMAIN_TYPE_AGGREGATE = 'AGGREGATE';\nconst DOMAIN_TYPE_TRACKER = 'TRACKER';\n\n// Dashboard helpers\nexport const spacerContent = 'SPACER_ITEM_FOR_DASHBOARD_LAYOUT_CONVENIENCE';\nexport const emptyTextItemContent = 'TEXT_ITEM_WITH_NO_CONTENT';\nexport const isSpacerType = item =>\n    item.type === TEXT && item.text === spacerContent;\nexport const isTextType = item =>\n    item.type === TEXT && item.text !== spacerContent;\nexport const isVisualizationType = item =>\n    !!itemTypeMap[item.type].isVisualizationType;\nexport const hasMapView = itemType =>\n    itemTypeMap[itemType].domainType === DOMAIN_TYPE_AGGREGATE;\nexport const isTrackerDomainType = itemType =>\n    itemTypeMap[itemType].domainType === DOMAIN_TYPE_TRACKER;\nexport const getDefaultItemCount = itemType =>\n    itemTypeMap[itemType].defaultItemCount || 5;\nexport const getAppName = itemType => itemTypeMap[itemType].appName || '';\n\n// Item type map\nexport const itemTypeMap = {\n    [VISUALIZATION]: {\n        id: VISUALIZATION,\n        endPointName: 'visualizations',\n        propName: 'visualization',\n        pluralTitle: i18n.t('Visualizations'),\n        appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n        appName: 'Data Visualizer',\n        defaultItemCount: 10,\n    },\n    [REPORT_TABLE]: {\n        id: REPORT_TABLE,\n        endPointName: 'visualizations',\n        propName: 'visualization',\n        pluralTitle: i18n.t('Pivot tables'),\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n        appName: 'Data Visualizer',\n    },\n    [CHART]: {\n        id: CHART,\n        endPointName: 'visualizations',\n        propName: 'visualization',\n        pluralTitle: i18n.t('Charts'),\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n        appName: 'Data Visualizer',\n    },\n    [MAP]: {\n        id: MAP,\n        endPointName: 'maps',\n        propName: 'map',\n        pluralTitle: i18n.t('Maps'),\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-maps/?id=${id}`,\n        appName: 'Maps',\n    },\n    [EVENT_REPORT]: {\n        id: EVENT_REPORT,\n        endPointName: 'eventReports',\n        propName: 'eventReport',\n        pluralTitle: i18n.t('Event reports'),\n        domainType: DOMAIN_TYPE_TRACKER,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-event-reports/?id=${id}`,\n        appName: 'Event Reports',\n    },\n    [EVENT_CHART]: {\n        id: EVENT_CHART,\n        endPointName: 'eventCharts',\n        propName: 'eventChart',\n        pluralTitle: i18n.t('Event charts'),\n        domainType: DOMAIN_TYPE_TRACKER,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-event-visualizer/?id=${id}`,\n        appName: 'Event Visualizer',\n    },\n    [APP]: {\n        endPointName: 'apps',\n        propName: 'appKey',\n        pluralTitle: i18n.t('Apps'),\n    },\n    [REPORTS]: {\n        id: REPORTS,\n        endPointName: 'reports',\n        propName: 'reports',\n        pluralTitle: i18n.t('Reports'),\n        appUrl: id =>\n            `dhis-web-reporting/getReportParams.action?mode=report&uid=${id}`,\n    },\n    [RESOURCES]: {\n        id: RESOURCES,\n        endPointName: 'resources',\n        propName: 'resources',\n        pluralTitle: i18n.t('Resources'),\n        appUrl: id => `api/documents/${id}/data`,\n    },\n    [USERS]: {\n        id: USERS,\n        endPointName: 'users',\n        propName: 'users',\n        pluralTitle: i18n.t('Users'),\n        appUrl: id => `dhis-web-dashboard-integration/profile.action?id=${id}`,\n    },\n    [TEXT]: {\n        id: TEXT,\n        propName: 'text',\n    },\n    [MESSAGES]: {\n        propName: 'messages',\n    },\n    [SPACER]: {\n        propName: 'text',\n    },\n};\n\nexport const getEndPointName = type => itemTypeMap[type].endPointName;\n\nexport const getItemUrl = (type, item, d2) => {\n    let url;\n\n    if (type === APP) {\n        url = item.launchUrl;\n    }\n\n    if (itemTypeMap[type] && itemTypeMap[type].appUrl) {\n        url = `${getBaseUrl(d2)}/${itemTypeMap[type].appUrl(item.id)}`;\n    }\n\n    return url;\n};\n\nexport const getItemIcon = type => {\n    switch (type) {\n        case REPORT_TABLE:\n        case EVENT_REPORT:\n        case REPORTS:\n            return TableIcon;\n        case CHART:\n        case EVENT_CHART:\n            return ChartIcon;\n        case MAP:\n            return MapIcon;\n        case APP:\n            return ExtensionIcon;\n        case RESOURCES:\n            return DescriptionIcon;\n        case USERS:\n            return PersonIcon;\n        case TEXT:\n            return FontDownloadIcon;\n        case MESSAGES:\n            return EmailIcon;\n        case SPACER:\n            return CropFreeIcon;\n        default:\n            return NotInterestedIcon;\n    }\n};\n","import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\n\nimport { getEndPointName } from '../modules/itemTypes';\n\n// Id, name\nexport const getIdNameFields = ({ rename } = {}) => [\n    'id',\n    `${rename ? 'displayName~rename(name)' : 'name,displayName'}`,\n];\n\n// Item\nexport const getItemFields = () => [\n    'dimensionItem~rename(id)',\n    'displayName~rename(name)',\n    'dimensionItemType',\n];\n\n// Dimension\nexport const getDimensionFields = ({ withItems }) =>\n    arrayClean([\n        'dimension',\n        'legendSet[id]',\n        'filter',\n        'programStage',\n        withItems ? `items[${getItemFields().join(',')}]` : ``,\n    ]);\n\n// Axis\nexport const getAxesFields = ({ withItems }) => [\n    `columns[${getDimensionFields({ withItems }).join(',')}]`,\n    `rows[${getDimensionFields({ withItems }).join(',')}]`,\n    `filters[${getDimensionFields({ withItems }).join(',')}]`,\n];\n\n// Favorite\nexport const getFavoriteFields = ({ withDimensions, withOptions }) => {\n    return arrayClean([\n        `${getIdNameFields({ rename: true }).join(',')}`,\n        'displayDescription~rename(description)',\n        withDimensions ? `${getAxesFields({ withItems: true }).join(',')}` : ``,\n        withOptions\n            ? [\n                  '*',\n                  '!attributeDimensions',\n                  '!attributeValues',\n                  '!category',\n                  '!categoryDimensions',\n                  '!categoryOptionGroupSetDimensions',\n                  '!columnDimensions',\n                  '!dataDimensionItems',\n                  '!dataElementDimensions',\n                  '!dataElementGroupSetDimensions',\n                  '!filterDimensions',\n                  '!itemOrganisationUnitGroups',\n                  '!lastUpdatedBy',\n                  '!organisationUnitGroupSetDimensions',\n                  '!organisationUnitLevels',\n                  '!organisationUnits',\n                  '!programIndicatorDimensions',\n                  '!relativePeriods',\n                  '!reportParams',\n                  '!rowDimensions',\n                  '!series',\n                  '!translations',\n                  '!userOrganisationUnit',\n                  '!userOrganisationUnitChildren',\n                  '!userOrganisationUnitGrandChildren',\n              ].join(',')\n            : '',\n    ]);\n};\n\nexport const getFavoritesFields = ({ withDimensions }) => [\n    `reportTable[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `chart[${['type', ...getFavoriteFields({ withDimensions })].join(',')}]`,\n    `map[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `eventReport[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `eventChart[${getFavoriteFields({ withDimensions }).join(',')}]`,\n];\n\n// List item\nexport const getListItemFields = () => [\n    `reports[${getIdNameFields({ rename: true }).join(',')}]`,\n    `resources[${getIdNameFields({ rename: true }).join(',')}]`,\n    `users[${getIdNameFields({ rename: true }).join(',')}]`,\n];\n\n// Map\nexport const getMapFields = () => [\n    `${getIdNameFields({ rename: true }).join(',')}`,\n    'user,longitude,latitude,zoom,basemap',\n    `mapViews[${getFavoriteFields({\n        withDimensions: true,\n        withOptions: true,\n    })}]`,\n];\n\n// Api\n\n// Get more info about the favorite of a dashboard item\nexport const apiFetchFavorite = (id, type, { fields }) =>\n    getInstance().then(d2 =>\n        d2.Api.getApi().get(`${getEndPointName(type)}/${id}`, {\n            fields:\n                fields ||\n                getFavoriteFields({\n                    withDimensions: true,\n                    withOptions: true,\n                }),\n        })\n    );\n","import isObject from 'lodash/isObject';\n\n// validation\nexport function orNull(param) {\n    return param === undefined ? null : param;\n}\n\nexport function orArray(param) {\n    return Array.isArray(param) ? param : [];\n}\n\nexport function orObject(param) {\n    return isObject(param) ? param : {};\n}\n\n// array\nexport function arrayGetById(array, id) {\n    return array.find(item => item.id === id);\n}\n\n// object\nexport function arrayToIdMap(array) {\n    return array.reduce((obj, item) => {\n        obj[item.id] = item;\n        return obj;\n    }, {});\n}\n\n// date\nexport function getDate() {\n    const y = Math.floor(Math.random() * 3) + 2015;\n    const M = Math.floor(Math.random() * 12) + 1;\n    const d = Math.floor(Math.random() * 28) + 1;\n    // const h = Math.floor(Math.random() * 23) + 1;\n    // const m = Math.floor(Math.random() * 59) + 1;\n    // const s = Math.floor(Math.random() * 59) + 1;\n\n    return new Date(`${y}-${M}-${d}`)\n        .toJSON()\n        .replace('T', ' ')\n        .substr(0, 10);\n}\n\nexport const formatDate = (value, uiLocale) => {\n    if (typeof global.Intl !== 'undefined' && Intl.DateTimeFormat) {\n        const locale = uiLocale || 'en';\n        return new Intl.DateTimeFormat(locale, {\n            year: 'numeric',\n            month: 'short',\n            day: 'numeric',\n        }).format(new Date(value));\n    }\n\n    return value.substr(0, 19).replace('T', ' ');\n};\n\n/**\n * Sorts an array of objects based on provided date property\n *\n * @param {Array} items Array of objects\n * @param {String} dateProp Name of the date property to be used for sorting\n * @param {Boolean} ascending Whether to sort ascending or descending\n */\nexport const sortByDate = (items, dateProp, ascending = true) => {\n    const values = Object.values(items);\n\n    values.sort((a, b) => {\n        const aDate = new Date(a[dateProp]);\n        const bDate = new Date(b[dateProp]);\n\n        return ascending ? aDate - bDate : bDate - aDate;\n    });\n\n    return values;\n};\n\n// reducer validator\nexport const validateReducer = (value, defaultValue) =>\n    value === undefined || value === null ? defaultValue : value;\n\nexport const getBaseUrl = d2 => {\n    const api = d2.Api.getApi();\n    const idx = api.baseUrl.indexOf('/api');\n    return idx > -1 ? api.baseUrl.slice(0, idx) : api.baseUrl;\n};\n\nexport const getWithoutId = object => ({\n    ...object,\n    id: undefined,\n});\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Item_list__2oHc1\",\"item\":\"Item_item__lO40M\",\"itemicon\":\"Item_itemicon__dv5ah\",\"link\":\"Item_link__2gULT\",\"deleteicon\":\"Item_deleteicon__3c7bl\",\"deletebutton\":\"Item_deletebutton__1DfY5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chip\":\"DashboardItemChip_chip__3znxp\",\"link\":\"DashboardItemChip_link__1b7Z_\",\"icon\":\"DashboardItemChip_icon__1zOaG\",\"selected\":\"DashboardItemChip_selected__36Qak\",\"unselected\":\"DashboardItemChip_unselected__3dm-X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"EditTitleBar_section__2sBzn\",\"titleDescription\":\"EditTitleBar_titleDescription__1-pfK\",\"title\":\"EditTitleBar_title__2fOQP\",\"description\":\"EditTitleBar_description__fKEX6\",\"itemSelector\":\"EditTitleBar_itemSelector__PWJdH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"actions\":\"ViewTitleBar_actions__1kGtw\",\"editLink\":\"ViewTitleBar_editLink__1HKr0\",\"titleBar\":\"ViewTitleBar_titleBar__1K-pW\",\"titleBarIcon\":\"ViewTitleBar_titleBarIcon__2spKM\"};","export const RECEIVED_USER = 'RECEIVED_USER';\n\nexport const DEFAULT_STATE_USER = {\n    id: '',\n    username: '',\n    uiLocale: '',\n    isSuperuser: false,\n};\n\nexport default (state = DEFAULT_STATE_USER, action) => {\n    switch (action.type) {\n        case RECEIVED_USER: {\n            return fromD2ToUserObj(action.value);\n        }\n        default:\n            return state;\n    }\n};\n\nfunction fromD2ToUserObj(d2Object) {\n    return {\n        id: d2Object.id,\n        username: d2Object.username,\n        uiLocale: d2Object.settings.keyUiLocale,\n        isSuperuser: d2Object.authorities.has('ALL'),\n    };\n}\n\n// selectors\n\nexport const sGetUserId = state => state.user.id;\nexport const sGetUserUsername = state => state.user.username;\nexport const sGetIsSuperuser = state => state.user.isSuperuser;\nexport const sGetUiLocale = state => state.user.uiLocale;\n","/** @module reducers/dashboards */\n\nimport arrayFrom from 'd2-utilizr/lib/arrayFrom';\nimport arraySort from 'd2-utilizr/lib/arraySort';\n\nimport { orArray, orObject } from '../modules/util';\nimport {\n    SPACER,\n    isSpacerType,\n    isTextType,\n    emptyTextItemContent,\n    REPORT_TABLE,\n    CHART,\n    VISUALIZATION,\n} from '../modules/itemTypes';\n\nexport const SET_DASHBOARDS = 'SET_DASHBOARDS';\nexport const ADD_DASHBOARDS = 'ADD_DASHBOARDS';\nexport const SET_DASHBOARD_STARRED = 'SET_DASHBOARD_STARRED';\nexport const SET_DASHBOARD_DISPLAY_NAME = 'SET_DASHBOARD_DISPLAY_NAME';\nexport const SET_DASHBOARD_ITEMS = 'SET_DASHBOARD_ITEMS';\n\nexport const DEFAULT_STATE_DASHBOARDS = {\n    byId: null,\n    items: [],\n};\n\n// reducer helper functions\n\nconst updateDashboardProp = ({ state, dashboardId, prop, value }) => ({\n    byId: {\n        ...state.byId,\n        [dashboardId]: {\n            ...state.byId[dashboardId],\n            [prop]: value,\n        },\n    },\n    items: state.items,\n});\n\n/**\n * Reducer that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n * @returns {Object}\n */\nexport default (state = DEFAULT_STATE_DASHBOARDS, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS: {\n            return {\n                byId: action.value,\n                items: [],\n            };\n        }\n        case ADD_DASHBOARDS: {\n            return {\n                ...state,\n                byId: {\n                    ...state.byId,\n                    ...action.value,\n                },\n            };\n        }\n        case SET_DASHBOARD_STARRED: {\n            return updateDashboardProp({\n                state,\n                dashboardId: action.dashboardId,\n                prop: 'starred',\n                value: action.value,\n            });\n        }\n        case SET_DASHBOARD_DISPLAY_NAME: {\n            return updateDashboardProp({\n                state,\n                dashboardId: action.dashboardId,\n                prop: 'displayName',\n                value: action.value,\n            });\n        }\n        case SET_DASHBOARD_ITEMS: {\n            return {\n                ...state,\n                items: action.value,\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// root selector\n\nexport const sGetDashboardsRoot = state => state.dashboards;\n\n// selector level 1\n\n/**\n * Selector which returns a dashboard by id from the state object\n * If no matching dashboard is found it returns undefined\n * If dashboards.byId is null, then the dashboards api request\n * has not yet completed. If dashboards.byId is an empty object\n * then the dashboards api request is complete, but no dashboards\n * were returned\n *\n * @function\n * @param {Object} state The current state\n * @param {Number} id The id of the dashboard\n * @returns {Object | undefined}\n */\nexport const sGetDashboardById = (state, id) =>\n    orObject(sGetDashboardsRoot(state).byId)[id];\n\nexport const sDashboardsIsFetching = state => {\n    return sGetDashboardsRoot(state).byId === null;\n};\n\n/**\n * Selector which returns all dashboards (the byId object)\n *\n * @function\n * @param {Object} state The current state\n * @returns {Object | undefined}\n */\nexport const sGetAllDashboards = state =>\n    orObject(sGetDashboardsRoot(state).byId);\n\n/**\n * Selector which returns the current dashboard items\n *\n * @function\n * @param {Object} state The current state\n * @returns {Array}\n */\nexport const sGetDashboardItems = state => sGetDashboardsRoot(state).items;\n\n// selector level 2\n\nexport const sGetStarredDashboards = state =>\n    Object.values(sGetAllDashboards(state)).filter(\n        dashboard => dashboard.starred === true\n    );\n\nexport const sGetUnstarredDashboards = state =>\n    Object.values(sGetAllDashboards(state)).filter(\n        dashboard => dashboard.starred === false\n    );\n\n// selector level 3\n\nexport const sGetStarredDashboardIds = state => {\n    return sGetStarredDashboards(state).map(dashboard => dashboard.id);\n};\n\nexport const sGetUnstarredDashboardIds = state =>\n    sGetUnstarredDashboards(state).map(dashboard => dashboard.id);\n\nexport const sGetDashboardsSortedByStarred = state => [\n    ...arraySort(sGetStarredDashboards(state), 'ASC', 'displayName'),\n    ...arraySort(sGetUnstarredDashboards(state), 'ASC', 'displayName'),\n];\n\n// utils\n\n/**\n * Returns the array of dashboards, customized for ui\n * @function\n * @param {Array} data The original dashboard list\n * @returns {Array}\n */\nexport const getCustomDashboards = data => {\n    const uiItems = items =>\n        items.map(item => {\n            let type = isSpacerType(item) ? SPACER : item.type;\n\n            // TODO: temporary fix before 2.34 epic branch is merged\n            // if \"VISUALIZATION\", reset to \"REPORT_TABLE\" or \"CHART\"\n            if (type === VISUALIZATION) {\n                type = item.reportTable\n                    ? REPORT_TABLE\n                    : item.chart\n                    ? CHART\n                    : type;\n            }\n\n            const text = isTextType(item)\n                ? item.text === emptyTextItemContent\n                    ? ''\n                    : item.text\n                : null;\n\n            return {\n                ...item,\n                ...(text !== null ? { text } : {}),\n                type,\n            };\n        });\n\n    return arrayFrom(data).map(d => ({\n        id: d.id,\n        name: d.name,\n        displayName: d.displayName,\n        description: d.description,\n        displayDescription: d.displayDescription,\n        starred: d.favorite,\n        owner: d.user.name,\n        created: d.created\n            .split('T')\n            .join(' ')\n            .substr(0, 16),\n        lastUpdated: d.lastUpdated\n            .split('T')\n            .join(' ')\n            .substr(0, 16),\n        access: d.access,\n        numberOfItems: orArray(d.dashboardItems).length,\n        dashboardItems: uiItems(d.dashboardItems),\n    }));\n};\n","/** @module reducers/editDashboard */\nimport update from 'immutability-helper';\nimport isEmpty from 'lodash/isEmpty';\nimport { orArray, orObject } from '../modules/util';\n\nexport const RECEIVED_EDIT_DASHBOARD = 'RECEIVED_EDIT_DASHBOARD';\nexport const RECEIVED_NOT_EDITING = 'RECEIVED_NOT_EDITING';\nexport const START_NEW_DASHBOARD = 'START_NEW_DASHBOARD';\nexport const RECEIVED_TITLE = 'RECEIVED_TITLE';\nexport const RECEIVED_DESCRIPTION = 'RECEIVED_DESCRIPTION';\nexport const ADD_DASHBOARD_ITEM = 'ADD_DASHBOARD_ITEM';\nexport const REMOVE_DASHBOARD_ITEM = 'REMOVE_DASHBOARD_ITEM';\nexport const UPDATE_DASHBOARD_ITEM = 'UPDATE_DASHBOARD_ITEM';\nexport const RECEIVED_DASHBOARD_LAYOUT = 'RECEIVED_DASHBOARD_LAYOUT';\n\nexport const DEFAULT_STATE_EDIT_DASHBOARD = {};\nexport const NEW_DASHBOARD_STATE = {\n    id: '',\n    name: '',\n    access: {},\n    description: '',\n    dashboardItems: [],\n};\n\nexport default (state = DEFAULT_STATE_EDIT_DASHBOARD, action) => {\n    switch (action.type) {\n        case RECEIVED_EDIT_DASHBOARD: {\n            const newState = {};\n            Object.keys(NEW_DASHBOARD_STATE).map(\n                k => (newState[k] = action.value[k])\n            );\n            return newState;\n        }\n        case RECEIVED_NOT_EDITING:\n            return DEFAULT_STATE_EDIT_DASHBOARD;\n        case START_NEW_DASHBOARD:\n            return NEW_DASHBOARD_STATE;\n        case RECEIVED_TITLE: {\n            return Object.assign({}, state, { name: action.value });\n        }\n        case RECEIVED_DESCRIPTION: {\n            return Object.assign({}, state, {\n                description: action.value,\n            });\n        }\n        case ADD_DASHBOARD_ITEM:\n            return update(state, {\n                dashboardItems: { $unshift: [action.value] },\n            });\n        case REMOVE_DASHBOARD_ITEM: {\n            const idToRemove = action.value;\n\n            const dashboardItemIndex = state.dashboardItems.findIndex(\n                item => item.id === idToRemove\n            );\n\n            if (dashboardItemIndex > -1) {\n                return update(state, {\n                    dashboardItems: {\n                        $splice: [[dashboardItemIndex, 1]],\n                    },\n                });\n            }\n\n            return state;\n        }\n        case RECEIVED_DASHBOARD_LAYOUT: {\n            const stateItems = orArray(state.dashboardItems);\n            let layoutHasChanged = false;\n\n            const newStateItems = action.value.map(({ x, y, w, h, i }) => {\n                const stateItem = stateItems.find(si => si.id === i);\n\n                if (\n                    !(\n                        stateItem.x === x &&\n                        stateItem.y === y &&\n                        stateItem.w === w &&\n                        stateItem.h === h\n                    )\n                ) {\n                    layoutHasChanged = true;\n                    return Object.assign({}, stateItem, { w, h, x, y });\n                }\n\n                return stateItem;\n            });\n\n            return layoutHasChanged\n                ? {\n                      ...state,\n                      dashboardItems: newStateItems,\n                  }\n                : state;\n        }\n        case UPDATE_DASHBOARD_ITEM: {\n            const dashboardItem = action.value;\n\n            const dashboardItemIndex = state.dashboardItems.findIndex(\n                item => item.id === dashboardItem.id\n            );\n\n            if (dashboardItemIndex > -1) {\n                const newState = update(state, {\n                    dashboardItems: {\n                        $splice: [[dashboardItemIndex, 1, dashboardItem]],\n                    },\n                });\n\n                return newState;\n            }\n\n            return state;\n        }\n        default:\n            return state;\n    }\n};\n\n// root selector\n\nexport const sGetEditDashboardRoot = state => state.editDashboard;\n\n// selectors\n\nexport const sGetIsEditing = state => !isEmpty(state.editDashboard);\n\nexport const sGetIsNewDashboard = state => {\n    return (\n        !isEmpty(state.editDashboard) && sGetEditDashboardRoot(state).id === ''\n    );\n};\n\nexport const sGetEditDashboardItems = state =>\n    orObject(sGetEditDashboardRoot(state)).dashboardItems;\n","export const CLEAR_EDIT_ITEM_FILTERS = 'CLEAR_EDIT_ITEM_FILTERS';\nexport const REMOVE_EDIT_ITEM_FILTER = 'REMOVE_EDIT_ITEM_FILTER';\nexport const SET_EDIT_ITEM_FILTERS = 'SET_EDIT_ITEM_FILTERS';\n\nexport const DEFAULT_STATE_EDIT_ITEM_FILTERS = {};\n\nexport default (state = DEFAULT_STATE_EDIT_ITEM_FILTERS, action) => {\n    switch (action.type) {\n        case REMOVE_EDIT_ITEM_FILTER: {\n            const newState = { ...state };\n\n            delete newState[action.id];\n\n            return newState;\n        }\n        case SET_EDIT_ITEM_FILTERS: {\n            return action.filters;\n        }\n        case CLEAR_EDIT_ITEM_FILTERS: {\n            return DEFAULT_STATE_EDIT_ITEM_FILTERS;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetEditItemFiltersRoot = state => state.editItemFilters;\n\nexport const sGetEditFiltersKeys = state =>\n    Object.keys(sGetEditItemFiltersRoot(state));\n","/** @module reducers/selected */\nimport { combineReducers } from 'redux';\n\nimport { validateReducer } from '../modules/util';\n\nexport const SET_SELECTED_ID = 'SET_SELECTED_ID';\nexport const SET_SELECTED_ISLOADING = 'SET_SELECTED_ISLOADING';\nexport const SET_SELECTED_SHOWDESCRIPTION = 'SET_SELECTED_SHOWDESCRIPTION';\n\nexport const DEFAULT_STATE_SELECTED_ID = null;\nexport const DEFAULT_STATE_SELECTED_ISLOADING = false;\nexport const DEFAULT_STATE_SELECTED_SHOWDESCRIPTION = false;\n\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\nconst id = (state = DEFAULT_STATE_SELECTED_ID, action) => {\n    switch (action.type) {\n        case SET_SELECTED_ID:\n            return validateReducer(action.value, DEFAULT_STATE_SELECTED_ID);\n        default:\n            return state;\n    }\n};\n\nconst isLoading = (state = DEFAULT_STATE_SELECTED_ISLOADING, action) => {\n    switch (action.type) {\n        case SET_SELECTED_ISLOADING:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_SELECTED_ISLOADING\n            );\n        default:\n            return state;\n    }\n};\n\nconst showDescription = (\n    state = DEFAULT_STATE_SELECTED_SHOWDESCRIPTION,\n    action\n) => {\n    switch (action.type) {\n        case SET_SELECTED_SHOWDESCRIPTION:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_SELECTED_SHOWDESCRIPTION\n            );\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    id,\n    isLoading,\n    showDescription,\n});\n\n// Selectors\n\nexport const sGetSelectedRoot = state => state.selected;\n\nexport const sGetSelectedId = state => sGetSelectedRoot(state).id;\n\nexport const sGetSelectedIsLoading = state => sGetSelectedRoot(state).isLoading;\n\nexport const sGetSelectedShowDescription = state =>\n    sGetSelectedRoot(state).showDescription;\n","import {\n    REMOVE_EDIT_ITEM_FILTER,\n    SET_EDIT_ITEM_FILTERS,\n    CLEAR_EDIT_ITEM_FILTERS,\n} from '../reducers/editItemFilters';\n\n// actions\n\nexport const acRemoveEditItemFilter = id => ({\n    type: REMOVE_EDIT_ITEM_FILTER,\n    id,\n});\n\nexport const acClearEditItemFilters = () => ({\n    type: CLEAR_EDIT_ITEM_FILTERS,\n});\n\nexport const acSetEditItemFilters = filters => ({\n    type: SET_EDIT_ITEM_FILTERS,\n    filters,\n});\n","export const CLEAR_ITEM_FILTERS = 'CLEAR_ITEM_FILTERS';\nexport const SET_ITEM_FILTERS = 'SET_ITEM_FILTERS';\nexport const ADD_ITEM_FILTER = 'ADD_ITEM_FILTER';\nexport const REMOVE_ITEM_FILTER = 'REMOVE_ITEM_FILTER';\n\nexport const DEFAULT_STATE_ITEM_FILTERS = {};\n\nexport default (state = DEFAULT_STATE_ITEM_FILTERS, action) => {\n    switch (action.type) {\n        case ADD_ITEM_FILTER: {\n            return {\n                ...state,\n                [action.filter.id]: action.filter.value,\n            };\n        }\n        case REMOVE_ITEM_FILTER: {\n            const newState = { ...state };\n\n            delete newState[action.id];\n\n            return newState;\n        }\n        case SET_ITEM_FILTERS: {\n            return action.filters;\n        }\n        case CLEAR_ITEM_FILTERS: {\n            return DEFAULT_STATE_ITEM_FILTERS;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetItemFiltersRoot = state => state.itemFilters;\n\nexport const sGetFiltersKeys = state => Object.keys(sGetItemFiltersRoot(state));\n","import {\n    ADD_ITEM_FILTER,\n    REMOVE_ITEM_FILTER,\n    SET_ITEM_FILTERS,\n    CLEAR_ITEM_FILTERS,\n} from '../reducers/itemFilters';\n\nexport const FILTER_ORG_UNIT = 'ou';\n\n// actions\n\nexport const acAddItemFilter = filter => ({\n    type: ADD_ITEM_FILTER,\n    filter,\n});\n\nexport const acRemoveItemFilter = id => ({\n    type: REMOVE_ITEM_FILTER,\n    id,\n});\n\nexport const acClearItemFilters = () => ({\n    type: CLEAR_ITEM_FILTERS,\n});\n\nexport const acSetItemFilters = filters => ({\n    type: SET_ITEM_FILTERS,\n    filters,\n});\n","import update from 'immutability-helper';\nimport { arrayToIdMap } from '../modules/util';\n\nexport const RECEIVED_MESSAGES = 'RECEIVED_MESSAGES';\n\nexport default (state = {}, action) => {\n    switch (action.type) {\n        case RECEIVED_MESSAGES: {\n            const conversations = arrayToIdMap(action.value);\n\n            const newState = update(state, { $merge: conversations });\n\n            return newState;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetMessagesRoot = state => state.messages;\n","import { getInstance } from 'd2';\n\nexport const getMessages = () => {\n    const fields =\n        'id,messageCount,lastUpdated,messageType,displayName,read,messages[id,read,sender[id,displayName],text,lastUpdated]';\n    const url = `/messageConversations?fields=${fields}&order=read:asc&pageSize=200`;\n    return getInstance()\n        .then(d2 => d2.Api.getApi().get(url))\n        .catch(error => console.log('Error:', error));\n};\n","export const RECEIVED_SNACKBAR_MESSAGE = 'RECEIVED_SNACKBAR_MESSAGE';\nexport const CLOSE_SNACKBAR = 'CLOSE_SNACKBAR';\n\nexport const DEFAULT_STATE_SNACKBAR = {\n    message: {},\n    duration: null,\n    open: false,\n};\n\nexport default (state = DEFAULT_STATE_SNACKBAR, action) => {\n    switch (action.type) {\n        case RECEIVED_SNACKBAR_MESSAGE: {\n            return { ...state, ...action.value };\n        }\n        case CLOSE_SNACKBAR: {\n            return DEFAULT_STATE_SNACKBAR;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetSnackbar = state => state.snackbar || DEFAULT_STATE_SNACKBAR;\n","import {\n    RECEIVED_SNACKBAR_MESSAGE,\n    CLOSE_SNACKBAR,\n} from '../reducers/snackbar';\n\nexport const acReceivedSnackbarMessage = value => ({\n    type: RECEIVED_SNACKBAR_MESSAGE,\n    value,\n});\n\nexport const acCloseSnackbar = () => ({\n    type: CLOSE_SNACKBAR,\n});\n","import { orObject } from '../modules/util';\nimport objectClean from 'd2-utilizr/lib/objectClean';\n\n/** @module reducers/visualizations */\n\nexport const ADD_VISUALIZATION = 'ADD_VISUALIZATION';\nexport const SET_ACTIVE_VISUALIZATION_TYPE = 'SET_ACTIVE_VISUALIZATION_TYPE';\n\nexport const DEFAULT_STATE_VISUALIZATIONS = {};\n\nconst isEmpty = p => p === undefined || p === null;\n\nexport default (state = DEFAULT_STATE_VISUALIZATIONS, action) => {\n    switch (action.type) {\n        case ADD_VISUALIZATION: {\n            return {\n                ...state,\n                [action.value.id]: objectClean(\n                    {\n                        ...orObject(state[action.value.id]),\n                        ...action.value,\n                    },\n                    isEmpty\n                ),\n            };\n        }\n        case SET_ACTIVE_VISUALIZATION_TYPE: {\n            return {\n                ...state,\n                [action.id]: objectClean(\n                    {\n                        ...orObject(state[action.id]),\n                        activeType: action.activeType,\n                    },\n                    isEmpty\n                ),\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// root selector\nexport const sGetVisualizationsRoot = state => state.visualizations;\n\n// selectors level 1\nexport const sGetVisualization = (state, id) => {\n    return sGetVisualizationsRoot(state)[id];\n};\n","import {\n    ADD_VISUALIZATION,\n    SET_ACTIVE_VISUALIZATION_TYPE,\n} from '../reducers/visualizations';\n\nexport const acAddVisualization = value => ({\n    type: ADD_VISUALIZATION,\n    value,\n});\n\nexport const acSetActiveVisualizationType = (id, activeType) => {\n    const action = {\n        type: SET_ACTIVE_VISUALIZATION_TYPE,\n        id,\n        activeType,\n    };\n\n    return action;\n};\n","import arrayClean from 'd2-utilizr/lib/arrayClean';\nimport {\n    getListItemFields,\n    getFavoritesFields,\n    getIdNameFields,\n} from './metadata';\n\n// Helper functions\n\nexport const onError = error => console.log('Error: ', error);\n\n// Dashboard item\nexport const getDashboardItemsFields = ({ withFavorite } = {}) =>\n    arrayClean([\n        'id',\n        'type',\n        'shape',\n        'x',\n        'y',\n        'width~rename(w)',\n        'height~rename(h)',\n        'messages',\n        'text',\n        'appKey',\n        `${getListItemFields().join(',')}`,\n        withFavorite\n            ? `${getFavoritesFields({\n                  withDimensions: withFavorite.withDimensions,\n              }).join(',')}`\n            : ``,\n    ]);\n\n// Dashboard\nexport const getDashboardFields = ({ withItems, withFavorite } = {}) =>\n    arrayClean([\n        `${getIdNameFields().join(',')}`,\n        'description',\n        'displayDescription',\n        'favorite',\n        `user[${getIdNameFields({ rename: true }).join(',')}]`,\n        'created',\n        'lastUpdated',\n        'access',\n        withItems\n            ? `dashboardItems[${getDashboardItemsFields({\n                  withFavorite,\n              }).join(',')}]`\n            : ``,\n    ]);\n","import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { onError, getDashboardFields } from './index';\n\n// Get \"all\" dashboards on startup\nexport const apiFetchDashboards = () =>\n    getInstance()\n        .then(d2 =>\n            d2.models.dashboard.list({\n                fields: [\n                    getDashboardFields().join(','),\n                    'dashboardItems[id]',\n                ].join(','),\n                paging: 'false',\n            })\n        )\n        .catch(onError);\n\n// Get more info about selected dashboard\nexport const apiFetchDashboard = id =>\n    getInstance()\n        .then(d2 =>\n            d2.models.dashboard.get(id, {\n                fields: arrayClean(\n                    getDashboardFields({\n                        withItems: true,\n                        withFavorite: { withDimensions: false },\n                    })\n                ).join(','),\n            })\n        )\n        .catch(onError);\n\n// Star dashboard\nexport const apiStarDashboard = (id, isStarred) => {\n    const url = `dashboards/${id}/favorite`;\n\n    getInstance().then(d2 => {\n        if (isStarred) {\n            d2.Api.getApi().post(url);\n        } else {\n            d2.Api.getApi().delete(url);\n        }\n    });\n};\n\nexport const apiDeleteDashboard = id => {\n    return getInstance()\n        .then(d2 => {\n            return d2.models.dashboards\n                .get(id)\n                .then(dashboard => dashboard.delete());\n        })\n        .catch(onError);\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport PropTypes from 'prop-types';\n\nimport { sGetSnackbar } from '../../reducers/snackbar';\nimport { acCloseSnackbar } from '../../actions/snackbar';\n\nconst LOADING_DASHBOARD = 'LOADING_DASHBOARD';\nexport const loadingDashboardMsg = { name: '', type: LOADING_DASHBOARD };\n\nconst SnackbarMessageContent = ({ message }) => {\n    if (typeof message === 'object') {\n        //future message types:  switch(message.type)\n        return (\n            <span>\n                Loading <span style={{ fontWeight: 800 }}>{message.name}</span>{' '}\n                dashboard\n            </span>\n        );\n    }\n    return message;\n};\n\nexport const SnackbarMessage = props => {\n    return (\n        <Snackbar\n            style={{ zIndex: 10001 }}\n            open={props.snackbarOpen}\n            message={<SnackbarMessageContent message={props.snackbarMessage} />}\n            autoHideDuration={props.snackbarDuration}\n            onClose={props.onCloseSnackbar}\n        />\n    );\n};\n\nconst mapStateToProps = state => {\n    const { message, duration, open } = sGetSnackbar(state);\n    return {\n        snackbarOpen: open,\n        snackbarMessage: message,\n        snackbarDuration: duration,\n    };\n};\n\nSnackbarMessage.propTypes = {\n    snackbarDuration: PropTypes.string,\n    snackbarMessage: PropTypes.object,\n    snackbarOpen: PropTypes.bool,\n    onCloseSnackbar: PropTypes.func,\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        onCloseSnackbar: acCloseSnackbar,\n    }\n)(SnackbarMessage);\n","import { getCustomDashboards, sGetDashboardById } from '../reducers/dashboards';\nimport { sGetIsEditing } from '../reducers/editDashboard';\nimport { sGetEditItemFiltersRoot } from '../reducers/editItemFilters';\nimport {\n    SET_SELECTED_ID,\n    SET_SELECTED_ISLOADING,\n    SET_SELECTED_SHOWDESCRIPTION,\n    sGetSelectedIsLoading,\n    sGetSelectedId,\n} from '../reducers/selected';\nimport { sGetUserUsername } from '../reducers/user';\n\nimport { acSetDashboardItems, acAppendDashboards } from './dashboards';\nimport { acClearEditItemFilters } from './editItemFilters';\nimport { acClearItemFilters, acSetItemFilters } from './itemFilters';\nimport { tGetMessages } from '../components/Item/MessagesItem/actions';\nimport { acReceivedSnackbarMessage, acCloseSnackbar } from './snackbar';\nimport { acAddVisualization } from './visualizations';\n\nimport { apiFetchDashboard } from '../api/dashboards';\nimport { storePreferredDashboardId } from '../api/localStorage';\n\nimport { withShape } from '../components/ItemGrid/gridUtil';\nimport { loadingDashboardMsg } from '../components/SnackbarMessage/SnackbarMessage';\nimport { extractFavorite } from '../components/Item/VisualizationItem/plugin';\n\nimport {\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_REPORT,\n    EVENT_CHART,\n    MESSAGES,\n} from '../modules/itemTypes';\nimport { orObject } from '../modules/util';\n\n// actions\n\nexport const acSetSelectedId = value => ({\n    type: SET_SELECTED_ID,\n    value,\n});\n\nexport const acSetSelectedIsLoading = value => ({\n    type: SET_SELECTED_ISLOADING,\n    value,\n});\n\nexport const acSetSelectedShowDescription = value => ({\n    type: SET_SELECTED_SHOWDESCRIPTION,\n    value,\n});\n\nexport const tLoadDashboard = id => async dispatch => {\n    try {\n        const dash = await apiFetchDashboard(id);\n\n        dispatch(acAppendDashboards(dash));\n\n        return Promise.resolve(dash);\n    } catch (err) {\n        console.log('Error: ', err);\n        return err;\n    }\n};\n\n// thunks\nexport const tSetSelectedDashboardById = id => async (dispatch, getState) => {\n    dispatch(acSetSelectedIsLoading(true));\n\n    const snackbarTimeout = setTimeout(() => {\n        const dashboardName = orObject(sGetDashboardById(getState(), id))\n            .displayName;\n        if (sGetSelectedIsLoading(getState()) && dashboardName) {\n            loadingDashboardMsg.name = dashboardName;\n\n            dispatch(\n                acReceivedSnackbarMessage({\n                    message: loadingDashboardMsg,\n                    open: true,\n                })\n            );\n        }\n    }, 500);\n\n    const onSuccess = selected => {\n        const customDashboard = getCustomDashboards(selected)[0];\n\n        dispatch(\n            acSetDashboardItems(withShape(customDashboard.dashboardItems))\n        );\n\n        storePreferredDashboardId(sGetUserUsername(getState()), id);\n\n        // add visualizations to store\n        customDashboard.dashboardItems.forEach(item => {\n            switch (item.type) {\n                case REPORT_TABLE:\n                case CHART:\n                case MAP:\n                case EVENT_REPORT:\n                case EVENT_CHART:\n                    dispatch(acAddVisualization(extractFavorite(item)));\n                    break;\n                case MESSAGES:\n                    dispatch(tGetMessages(id));\n                    break;\n                default:\n                    break;\n            }\n        });\n\n        const state = getState();\n        if (id === sGetSelectedId(state)) {\n            if (sGetIsEditing(state)) {\n                // disable filters when switching to edit mode\n                dispatch(acClearItemFilters());\n            } else {\n                // enable filters when switching to view mode\n                dispatch(acSetItemFilters(sGetEditItemFiltersRoot(state)));\n            }\n        } else {\n            // clear filters when switching dashboard\n            dispatch(acClearEditItemFilters());\n            dispatch(acClearItemFilters());\n        }\n\n        dispatch(acSetSelectedId(id));\n\n        dispatch(acSetSelectedIsLoading(false));\n\n        clearTimeout(snackbarTimeout);\n\n        dispatch(acCloseSnackbar());\n\n        return selected;\n    };\n\n    const onError = error => {\n        console.log('Error: ', error);\n        return error;\n    };\n\n    try {\n        const selected = await dispatch(tLoadDashboard(id));\n\n        return onSuccess(selected);\n    } catch (err) {\n        return onError(err);\n    }\n};\n","export const getPreferredDashboardId = username =>\n    localStorage.getItem(`dhis2.dashboard.current.${username}`) || undefined;\n\nexport const storePreferredDashboardId = (username, dashboardId) => {\n    localStorage.setItem(`dhis2.dashboard.current.${username}`, dashboardId);\n};\n","import { RECEIVED_MESSAGES } from '../../../reducers/messages';\nimport { getMessages } from '../../../api/messages';\n\nconst onError = (action, error) => {\n    console.log(`Error in action ${action}: ${error}`);\n    return error;\n};\n\nexport const receivedMessages = value => ({\n    type: RECEIVED_MESSAGES,\n    value,\n});\n\nexport const tGetMessages = () => async dispatch => {\n    try {\n        const messages = await getMessages();\n        const { messageConversations } = messages;\n\n        return dispatch(receivedMessages(messageConversations));\n    } catch (err) {\n        return onError('Get Messages', err);\n    }\n};\n","import { getInstance } from 'd2';\n\nconst onError = error => console.log('Error: ', error);\n\nconst saveDashboard = (dashboard, data) => {\n    const { name, description, dashboardItems } = data;\n\n    dashboard.name = name;\n    dashboard.description = description;\n    dashboard.dashboardItems = dashboardItems.map(item =>\n        Object.assign({}, item, { width: item.w, height: item.h })\n    );\n\n    return dashboard.save().then(msg => msg.response.uid);\n};\n\nexport const updateDashboard = data => {\n    return getInstance()\n        .then(d2 => {\n            return d2.models.dashboards\n                .get(data.id)\n                .then(dashboard => saveDashboard(dashboard, data));\n        })\n        .catch(onError);\n};\n\nexport const postDashboard = data => {\n    return getInstance().then(d2 => {\n        const dashboard = d2.models.dashboards.create();\n\n        return saveDashboard(dashboard, data);\n    });\n};\n","import { generateUid } from 'd2/uid';\n\nimport {\n    RECEIVED_EDIT_DASHBOARD,\n    START_NEW_DASHBOARD,\n    RECEIVED_NOT_EDITING,\n    RECEIVED_TITLE,\n    RECEIVED_DESCRIPTION,\n    RECEIVED_DASHBOARD_LAYOUT,\n    ADD_DASHBOARD_ITEM,\n    UPDATE_DASHBOARD_ITEM,\n    REMOVE_DASHBOARD_ITEM,\n} from '../reducers/editDashboard';\nimport { sGetEditDashboardRoot } from '../reducers/editDashboard';\nimport { updateDashboard, postDashboard } from '../api/editDashboard';\nimport { tSetSelectedDashboardById } from '../actions/selected';\nimport { NEW_ITEM_SHAPE } from '../components/ItemGrid/gridUtil';\nimport {\n    itemTypeMap,\n    isSpacerType,\n    TEXT,\n    emptyTextItemContent,\n    isTextType,\n} from '../modules/itemTypes';\n\nconst onError = error => {\n    console.log('Error (Saving Dashboard): ', error);\n    return error;\n};\n\n// actions\n\nexport const acSetEditDashboard = (dashboard, items) => {\n    const val = {\n        ...dashboard,\n        dashboardItems: items,\n    };\n\n    return {\n        type: RECEIVED_EDIT_DASHBOARD,\n        value: val,\n    };\n};\n\nexport const acSetEditNewDashboard = () => ({\n    type: START_NEW_DASHBOARD,\n});\n\nexport const acClearEditDashboard = () => ({\n    type: RECEIVED_NOT_EDITING,\n});\n\nexport const acSetDashboardTitle = value => ({\n    type: RECEIVED_TITLE,\n    value,\n});\n\nexport const acSetDashboardDescription = value => ({\n    type: RECEIVED_DESCRIPTION,\n    value,\n});\n\nexport const acUpdateDashboardLayout = value => ({\n    type: RECEIVED_DASHBOARD_LAYOUT,\n    value,\n});\n\nexport const acAddDashboardItem = item => {\n    const type = item.type;\n    delete item.type;\n    const itemPropName = itemTypeMap[type].propName;\n\n    return {\n        type: ADD_DASHBOARD_ITEM,\n        value: {\n            id: generateUid(),\n            type,\n            [itemPropName]: item.content,\n            ...NEW_ITEM_SHAPE,\n        },\n    };\n};\n\nexport const acUpdateDashboardItem = item => ({\n    type: UPDATE_DASHBOARD_ITEM,\n    value: item,\n});\n\nexport const acRemoveDashboardItem = value => ({\n    type: REMOVE_DASHBOARD_ITEM,\n    value,\n});\n\n// thunks\n\nexport const tSaveDashboard = () => async (dispatch, getState) => {\n    const dashboard = sGetEditDashboardRoot(getState());\n\n    const dashboardItems = dashboard.dashboardItems.map(item => {\n        const text = isTextType(item)\n            ? item.text || emptyTextItemContent\n            : null;\n\n        const type = isSpacerType(item) ? TEXT : item.type;\n\n        return {\n            ...item,\n            ...(text ? { text } : {}),\n            type,\n        };\n    });\n\n    const dashboardToSave = {\n        ...dashboard,\n        dashboardItems,\n    };\n\n    try {\n        const dashboardId = dashboardToSave.id\n            ? await updateDashboard(dashboardToSave)\n            : await postDashboard(dashboardToSave);\n\n        dispatch(acClearEditDashboard());\n        await dispatch(tSetSelectedDashboardById(dashboardId));\n\n        return Promise.resolve(dashboardId);\n    } catch (error) {\n        onError(error);\n    }\n};\n","import {\n    SET_DASHBOARDS,\n    ADD_DASHBOARDS,\n    SET_DASHBOARD_STARRED,\n    SET_DASHBOARD_DISPLAY_NAME,\n    SET_DASHBOARD_ITEMS,\n} from '../reducers/dashboards';\nimport {\n    getCustomDashboards,\n    sGetDashboardById,\n    sGetDashboardsSortedByStarred,\n} from '../reducers/dashboards';\nimport { sGetUserUsername } from '../reducers/user';\nimport { tSetSelectedDashboardById, acSetSelectedId } from './selected';\nimport { acClearEditDashboard } from './editDashboard';\nimport {\n    apiFetchDashboards,\n    apiStarDashboard,\n    apiDeleteDashboard,\n} from '../api/dashboards';\nimport { getPreferredDashboardId } from '../api/localStorage';\nimport { arrayToIdMap } from '../modules/util';\n\n// actions\n\nexport const acSetDashboards = dashboards => ({\n    type: SET_DASHBOARDS,\n    value: arrayToIdMap(getCustomDashboards(dashboards)),\n});\n\nexport const acAppendDashboards = dashboards => ({\n    type: ADD_DASHBOARDS,\n    value: arrayToIdMap(getCustomDashboards(dashboards)),\n});\n\nexport const acSetDashboardStarred = (dashboardId, isStarred) => ({\n    type: SET_DASHBOARD_STARRED,\n    dashboardId: dashboardId,\n    value: isStarred,\n});\n\nexport const acSetDashboardDisplayName = (dashboardId, value) => ({\n    type: SET_DASHBOARD_DISPLAY_NAME,\n    dashboardId,\n    value,\n});\n\nexport const acSetDashboardItems = value => ({\n    type: SET_DASHBOARD_ITEMS,\n    value,\n});\n\n// thunks\n\nexport const tFetchDashboards = () => async dispatch => {\n    const collection = await apiFetchDashboards();\n    dispatch(acSetDashboards(collection.toArray()));\n};\n\nexport const tSelectDashboard = id => async (dispatch, getState) => {\n    const onError = error => {\n        console.log('Error (apiFetchDashboards): ', error);\n        return error;\n    };\n\n    try {\n        const state = getState();\n\n        let dashboardToSelect = null;\n        if (id) {\n            dashboardToSelect = sGetDashboardById(state, id) || null;\n        } else {\n            const preferredId = getPreferredDashboardId(\n                sGetUserUsername(state)\n            );\n            const dash = sGetDashboardById(state, preferredId);\n            dashboardToSelect =\n                preferredId && dash\n                    ? dash\n                    : sGetDashboardsSortedByStarred(state)[0];\n        }\n\n        if (dashboardToSelect) {\n            dispatch(tSetSelectedDashboardById(dashboardToSelect.id));\n        } else {\n            dispatch(acSetSelectedId());\n        }\n    } catch (err) {\n        return onError(err);\n    }\n};\n\nexport const tStarDashboard = (id, isStarred) => async dispatch => {\n    const onSuccess = id => {\n        dispatch(acSetDashboardStarred(id, isStarred));\n        return id;\n    };\n\n    const onError = error => {\n        console.log('Error (apiStarDashboard): ', error);\n        return error;\n    };\n    try {\n        await apiStarDashboard(id, isStarred);\n        return onSuccess(id);\n    } catch (err) {\n        return onError(err);\n    }\n};\n\nexport const tDeleteDashboard = id => async dispatch => {\n    try {\n        await apiDeleteDashboard(id);\n        dispatch(acClearEditDashboard());\n        dispatch(acSetSelectedId());\n        dispatch(acSetDashboardItems([]));\n\n        await dispatch(tFetchDashboards());\n\n        return Promise.resolve();\n    } catch (err) {\n        console.log('Error (deleteDashboard): ', err);\n        return err;\n    }\n};\n","/** @module reducers/controlBar */\nimport { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\n\nexport const SET_CONTROLBAR_USER_ROWS = 'SET_CONTROLBAR_USER_ROWS';\n\nexport const DEFAULT_STATE_CONTROLBAR_ROWS = 1;\n\nconst userRows = (state = DEFAULT_STATE_CONTROLBAR_ROWS, action) => {\n    switch (action.type) {\n        case SET_CONTROLBAR_USER_ROWS:\n            return validateReducer(action.value, DEFAULT_STATE_CONTROLBAR_ROWS);\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    userRows,\n});\n\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\nexport const sGetControlBarRoot = state => state.controlBar;\n\n// Selector dependency level 2\n\nexport const sGetControlBarUserRows = state =>\n    sGetControlBarRoot(state).userRows;\n","import { getInstance } from 'd2';\nimport { DEFAULT_STATE_CONTROLBAR_ROWS } from '../reducers/controlBar';\n\nconst NAMESPACE = 'dashboard';\nconst KEY = 'controlBarRows';\n\nconst hasNamespace = async d2 => await d2.currentUser.dataStore.has(NAMESPACE);\n\nconst getNamespace = async (d2, hasNamespace) =>\n    hasNamespace\n        ? await d2.currentUser.dataStore.get(NAMESPACE)\n        : await d2.currentUser.dataStore.create(NAMESPACE);\n\nexport const apiGetControlBarRows = async () => {\n    const d2 = await getInstance();\n    const namespace = await getNamespace(d2, await hasNamespace(d2));\n    const hasKey = namespace.keys && namespace.keys.find(key => key === KEY);\n\n    if (hasKey) {\n        return await namespace.get(KEY);\n    } else {\n        await apiPostControlBarRows(DEFAULT_STATE_CONTROLBAR_ROWS, namespace);\n        console.log(\n            '(These errors to /userDataStore/dashboard can be ignored)'\n        );\n        return DEFAULT_STATE_CONTROLBAR_ROWS;\n    }\n};\n\nexport const apiPostControlBarRows = async (rows, namespace) => {\n    const d2 = await getInstance();\n    const ns = namespace || (await getNamespace(d2, hasNamespace));\n\n    ns.set(KEY, rows);\n};\n","import { SET_CONTROLBAR_USER_ROWS } from '../reducers/controlBar';\nimport { apiGetControlBarRows } from '../api/controlBar';\n\n// actions\n\nexport const acSetControlBarUserRows = rows => ({\n    type: SET_CONTROLBAR_USER_ROWS,\n    value: rows,\n});\n\n// thunks\n\nexport const tSetControlBarRows = () => async dispatch => {\n    const onSuccess = rows => {\n        dispatch(acSetControlBarUserRows(rows));\n    };\n\n    const onError = error => {\n        console.log('Error (apiGetControlBarRows): ', error);\n        return error;\n    };\n\n    try {\n        const controlBarRows = await apiGetControlBarRows();\n        return onSuccess(controlBarRows);\n    } catch (err) {\n        return onError(err);\n    }\n};\n","import {\n    getDimensionById,\n    DIMENSION_ID_PERIOD,\n    DIMENSION_ID_ORGUNIT,\n} from '@dhis2/analytics';\n\nexport const SET_DIMENSIONS = 'SET_DIMENSIONS';\nexport const DEFAULT_DIMENSIONS = [\n    getDimensionById(DIMENSION_ID_PERIOD),\n    getDimensionById(DIMENSION_ID_ORGUNIT),\n];\n\nexport default (state = DEFAULT_DIMENSIONS, action) => {\n    switch (action.type) {\n        case SET_DIMENSIONS: {\n            return [...DEFAULT_DIMENSIONS, ...action.value];\n        }\n        default:\n            return state;\n    }\n};\n\nexport const sGetDimensions = state => state.dimensions;\n","export const SET_SETTINGS = 'SET_SETTINGS';\nexport const ADD_SETTINGS = 'ADD_SETTINGS';\n\nexport const DEFAULT_SETTINGS = {\n    keyDateFormat: 'yyyy-MM-dd',\n    keyAnalysisRelativePeriod: 'LAST_12_MONTHS',\n    keyAnalysisDigitGroupSeparator: 'SPACE',\n    displayNameProperty: 'displayName',\n    uiLocale: 'en',\n    rootOrganisationUnit: {},\n};\n\nexport default (state = DEFAULT_SETTINGS, action) => {\n    switch (action.type) {\n        case SET_SETTINGS: {\n            return Object.assign({}, action.value);\n        }\n        case ADD_SETTINGS: {\n            return {\n                ...state,\n                ...action.value,\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// Selectors\n\nexport const sGetSettings = state => state.settings;\n\nexport const sGetSettingsDisplayNameProperty = state =>\n    sGetSettings(state).displayNameProperty;\n\nexport const sGetRootOrgUnit = state =>\n    sGetSettings(state).rootOrganisationUnit;\n\nexport const sGetRelativePeriod = state =>\n    sGetSettings(state).keyAnalysisRelativePeriod;\n\nexport const sGetUiLocale = state => sGetSettings(state).uiLocale;\n","import { SET_DIMENSIONS } from '../reducers/dimensions';\nimport { apiFetchDimensions } from '@dhis2/analytics';\nimport { sGetSettingsDisplayNameProperty } from '../reducers/settings';\n\nexport const acSetDimensions = dimensions => ({\n    type: SET_DIMENSIONS,\n    value: dimensions,\n});\n\nexport const tSetDimensions = d2 => async (dispatch, getState) => {\n    const onSuccess = dimensions => {\n        dispatch(acSetDimensions(dimensions));\n    };\n\n    const onError = error => {\n        console.log('Error (apiFetchDimensions): ', error);\n        return error;\n    };\n\n    try {\n        const displayNameProp = sGetSettingsDisplayNameProperty(getState());\n        const dimensions = await apiFetchDimensions(d2, displayNameProp);\n\n        // filter out CATEGORY that are not of type ATTRIBUTE\n        const filteredDimensions = dimensions.filter(\n            dim =>\n                dim.dimensionType !== 'CATEGORY' ||\n                (dim.dimensionType === 'CATEGORY' &&\n                    dim.dataDimensionType === 'ATTRIBUTE')\n        );\n        return onSuccess(filteredDimensions);\n    } catch (err) {\n        return onError(err);\n    }\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\n\nimport classes from './styles/ShowMoreButton.module.css';\n\nexport const SHOWMORE_BAR_HEIGHT = 16;\n\nexport const ShowMoreButton = ({ onClick, isMaxHeight, disabled }) => {\n    return (\n        <div style={{ textAlign: 'center' }}>\n            {disabled ? (\n                <div className={classes.disabled}>{i18n.t('Show more')}</div>\n            ) : (\n                <div className={classes.showMore} onClick={onClick}>\n                    {isMaxHeight ? i18n.t('Show less') : i18n.t('Show more')}\n                </div>\n            )}\n        </div>\n    );\n};\n\nShowMoreButton.propTypes = {\n    disabled: PropTypes.bool,\n    isMaxHeight: PropTypes.bool,\n    onClick: PropTypes.func,\n};\n\nexport default ShowMoreButton;\n","import { SHOWMORE_BAR_HEIGHT } from './ShowMoreButton';\n\nexport const CONTROL_BAR_ROW_HEIGHT = 40;\nexport const FIRST_ROW_PADDING_HEIGHT = 10;\nexport const MIN_ROW_COUNT = 1;\n\nexport const HEADERBAR_HEIGHT = 48;\n\nconst CONTROL_BAR_OUTER_HEIGHT_DIFF =\n    FIRST_ROW_PADDING_HEIGHT + SHOWMORE_BAR_HEIGHT - 2; // 2 pixel \"adjustment\"\n\nexport const getRowsHeight = rows => {\n    return rows * CONTROL_BAR_ROW_HEIGHT;\n};\n\nexport const getNumRowsFromHeight = height => {\n    return Math.floor(\n        (height - CONTROL_BAR_OUTER_HEIGHT_DIFF) / CONTROL_BAR_ROW_HEIGHT\n    );\n};\n\nexport const getTopOffset = rows => {\n    return HEADERBAR_HEIGHT + getControlBarHeight(rows, false);\n};\n\nexport const getControlBarHeight = rows => {\n    return getRowsHeight(rows) + CONTROL_BAR_OUTER_HEIGHT_DIFF;\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { colors } from '@dhis2/ui-core';\nimport { HEADERBAR_HEIGHT } from './controlBarDimensions';\n\nimport classes from './styles/ControlBar.module.css';\n\nconst DRAG_HANDLE_HEIGHT = 7;\n\nclass ControlBar extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            dragging: false,\n        };\n    }\n\n    onStartDrag = () => {\n        this.setState({ dragging: true });\n        window.addEventListener('mousemove', this.onDrag);\n        window.addEventListener('mouseup', this.onEndDrag);\n    };\n\n    onDrag = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const newHeight = event.clientY;\n\n        if (\n            this.props.onChangeHeight &&\n            newHeight !== this.props.height &&\n            newHeight > 0\n        ) {\n            requestAnimationFrame(() => {\n                this.props.onChangeHeight(newHeight);\n            });\n        }\n    };\n\n    onEndDrag = () => {\n        this.setState({ dragging: false });\n        window.removeEventListener('mousemove', this.onDrag);\n        window.removeEventListener('mouseup', this.onEndDrag);\n\n        if (this.props.onEndDrag) {\n            this.props.onEndDrag();\n        }\n    };\n\n    renderDragHandle() {\n        return typeof this.props.onChangeHeight === 'function' ? (\n            <div\n                className={classes.draghandle}\n                style={{ height: DRAG_HANDLE_HEIGHT }}\n                onMouseDown={this.onStartDrag}\n            />\n        ) : null;\n    }\n\n    render() {\n        const height = Math.max(this.props.height, 0) + DRAG_HANDLE_HEIGHT;\n\n        const rootStyle = Object.assign(\n            {\n                height,\n                top: HEADERBAR_HEIGHT,\n                backgroundColor: this.props.editMode\n                    ? colors.yellow050\n                    : colors.white,\n                paddingBottom: DRAG_HANDLE_HEIGHT,\n            },\n            // Disable animations while dragging\n            this.state.dragging ? { transition: 'none' } : {}\n        );\n\n        return (\n            <div style={rootStyle} className={classes.root}>\n                <div className={classes.content}>{this.props.children}</div>\n                {this.renderDragHandle()}\n            </div>\n        );\n    }\n}\n\nControlBar.propTypes = {\n    /**\n     * The height of the control bar in number of lines. Must be a positive integer.\n     */\n    children: PropTypes.node.isRequired,\n\n    /**\n     * If true, the background color of the control bar changes to indicate that edit mode is active.\n     */\n    editMode: PropTypes.bool.isRequired,\n\n    /**\n     * Callback function that is called when the control bar is resized.\n     * The callback receives one argument: The new height in pixels.\n     *\n     * If no callback is specified the control bar will not have a drag handle.\n     */\n    height: PropTypes.number.isRequired,\n\n    /**\n     * Callback function that is called when the control bar is dropped after being dragged.\n     * The callback receives one argument: The new height in pixels.\n     *\n     * Ignored if no \"onChangeHeight\" function is provided.\n     */\n    onChangeHeight: PropTypes.func,\n\n    /**\n     * The contents of the control bar.\n     */\n    onEndDrag: PropTypes.func,\n};\n\nControlBar.defaultProps = {\n    onChangeHeight: null,\n    onEndDrag: null,\n};\n\nexport default ControlBar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst StarIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>\n);\n\nStarIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default StarIcon;\n","import { getInstance } from 'd2';\n\nexport const apiPostDataStatistics = async (eventType, id) => {\n    const d2 = await getInstance();\n    const url = `dataStatistics?eventType=${eventType}&favorite=${id}`;\n\n    d2.Api.getApi().post(url);\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Chip } from '@dhis2/ui-core';\nimport { Link } from 'react-router-dom';\nimport debounce from 'lodash/debounce';\n\nimport StarIcon from '../../icons/Star';\nimport { apiPostDataStatistics } from '../../api/dataStatistics';\n\nimport classes from './styles/DashboardItemChip.module.css';\n\nexport const DashboardItemChip = ({\n    starred,\n    selected,\n    label,\n    dashboardId,\n}) => {\n    const chipProps = {\n        selected,\n        className: classes.chip,\n    };\n\n    if (starred) {\n        const selectedState = selected ? classes.selected : classes.unselected;\n        chipProps.icon = (\n            <StarIcon className={`${classes.icon} ${selectedState}`} />\n        );\n    }\n\n    return (\n        <Link\n            className={classes.link}\n            to={`/${dashboardId}`}\n            onClick={debounce(\n                () => apiPostDataStatistics('DASHBOARD_VIEW', dashboardId),\n                500\n            )}\n        >\n            <Chip {...chipProps}>{label}</Chip>\n        </Link>\n    );\n};\n\nDashboardItemChip.propTypes = {\n    dashboardId: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    selected: PropTypes.bool.isRequired,\n    starred: PropTypes.bool.isRequired,\n    classes: PropTypes.object,\n};\n\nexport default DashboardItemChip;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\n\nconst AddCircleIcon = () => (\n    <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"32\"\n        height=\"32\"\n        fill={colors.teal600}\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm4 11h-3v3c0 .55-.45 1-1 1s-1-.45-1-1v-3H8c-.55 0-1-.45-1-1s.45-1 1-1h3V8c0-.55.45-1 1-1s1 .45 1 1v3h3c.55 0 1 .45 1 1s-.45 1-1 1z\" />\n    </svg>\n);\n\nexport default AddCircleIcon;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nconst ClearIcon = ({ className }) => (\n    <svg\n        className={className}\n        fill={colors.grey800}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>\n);\n\nClearIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default ClearIcon;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ClearIcon from '../../icons/Clear';\n\nimport classes from './styles/ClearButton.module.css';\n\nexport const ClearButton = ({ onClear }) => (\n    <button className={classes.button} onClick={onClear}>\n        <span>\n            <ClearIcon className={classes.icon} color=\"action\" />\n        </span>\n    </button>\n);\n\nClearButton.propTypes = {\n    onClear: PropTypes.func.isRequired,\n};\n\nexport default ClearButton;\n","import { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\n\nexport const SET_DASHBOARDS_FILTER_NAME = 'SET_DASHBOARDS_FILTER_NAME';\nexport const SET_DASHBOARDS_FILTER_OWNER = 'SET_DASHBOARDS_FILTER_OWNER';\nexport const SET_DASHBOARDS_FILTER_ORDER = 'SET_DASHBOARDS_FILTER_ORDER';\n\nexport const ownerData = [\n    { id: 'ALL', value: 'All users' },\n    { id: 'ME', value: 'Created by me' },\n    { id: 'OTHERS', value: 'Created by others' },\n];\n\nexport const orderData = [\n    { id: 'NAME:ASC', value: 'Name (asc)' },\n    { id: 'NAME:ASC', value: 'Name (desc)' },\n    { id: 'ITEMS:ASC', value: 'Number of items (asc)' },\n    { id: 'ITEMS:ASC', value: 'Number of items (desc)' },\n    { id: 'CREATED:ASC', value: 'Created date (asc)' },\n    { id: 'CREATED:ASC', value: 'Created date (desc)' },\n];\n\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_NAME = '';\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_OWNER = ownerData[0].id;\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_ORDER = orderData[0].id;\n\nconst name = (state = DEFAULT_STATE_DASHBOARDS_FILTER_NAME, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_NAME:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_NAME\n            );\n        default:\n            return state;\n    }\n};\n\nconst owner = (state = DEFAULT_STATE_DASHBOARDS_FILTER_OWNER, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_OWNER:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_NAME\n            );\n        default:\n            return state;\n    }\n};\n\nconst order = (state = DEFAULT_STATE_DASHBOARDS_FILTER_ORDER, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_ORDER:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_ORDER\n            );\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    name,\n    owner,\n    order,\n});\n\n// selectors\n\nexport const sGetDashboardsFilterRoot = state => state.dashboardsFilter;\n\n// selector dependency level 2\n\nexport const sGetFilterName = state => sGetDashboardsFilterRoot(state).name;\nexport const sGetFilterOwner = state => sGetDashboardsFilterRoot(state).owner;\nexport const sGetFilterOrder = state => sGetDashboardsFilterRoot(state).order;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport InputField from '@material-ui/core/Input';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport SearchIcon from '@material-ui/icons/Search';\n\nimport ClearButton from './ClearButton';\nimport { DEFAULT_STATE_DASHBOARDS_FILTER_NAME } from '../../reducers/dashboardsFilter';\n\nimport classes from './styles/Filter.module.css';\n\nexport const KEYCODE_ENTER = 13;\nexport const KEYCODE_ESCAPE = 27;\n\nexport class Filter extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            value: DEFAULT_STATE_DASHBOARDS_FILTER_NAME,\n        };\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setState({\n            value: nextProps.name,\n        });\n    }\n\n    setFilterValue = event => {\n        event.preventDefault();\n\n        this.props.onChangeName(event.target.value);\n    };\n\n    handleKeyUp = event => {\n        switch (event.keyCode) {\n            case KEYCODE_ENTER:\n                this.props.onKeypressEnter();\n                break;\n            case KEYCODE_ESCAPE:\n                this.props.onChangeName();\n                break;\n            default:\n                break;\n        }\n    };\n\n    render() {\n        const { name, onChangeName } = this.props;\n\n        const startAdornment = (\n            <InputAdornment position=\"start\">\n                <SearchIcon className={classes.searchIcon} />\n            </InputAdornment>\n        );\n\n        const endAdornment =\n            name !== '' && name !== null ? (\n                <InputAdornment position=\"end\">\n                    <ClearButton onClear={() => onChangeName()} />\n                </InputAdornment>\n            ) : null;\n\n        return (\n            <InputField\n                className={classes.filterField}\n                placeholder={i18n.t('Search for a dashboard')}\n                startAdornment={startAdornment}\n                endAdornment={endAdornment}\n                value={this.state.value}\n                onChange={this.setFilterValue}\n                onKeyUp={this.handleKeyUp}\n            />\n        );\n    }\n}\n\nFilter.propTypes = {\n    name: PropTypes.string,\n    onChangeName: PropTypes.func,\n    onKeypressEnter: PropTypes.func,\n};\n\nFilter.defaultProps = {\n    name: '',\n    onChangeName: Function.prototype,\n};\n\nexport default Filter;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport ControlBar from './ControlBar';\nimport arraySort from 'd2-utilizr/lib/arraySort';\nimport PropTypes from 'prop-types';\n\nimport Chip from './DashboardItemChip';\nimport AddCircleIcon from '../../icons/AddCircle';\nimport Filter from './Filter';\nimport ShowMoreButton from './ShowMoreButton';\nimport {\n    FIRST_ROW_PADDING_HEIGHT,\n    MIN_ROW_COUNT,\n    getRowsHeight,\n    getControlBarHeight,\n    getNumRowsFromHeight,\n} from './controlBarDimensions';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { sGetAllDashboards } from '../../reducers/dashboards';\nimport { sGetFilterName } from '../../reducers/dashboardsFilter';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { acSetControlBarUserRows } from '../../actions/controlBar';\nimport { acSetFilterName } from '../../actions/dashboardsFilter';\nimport { orObject, orArray } from '../../modules/util';\nimport { apiPostControlBarRows } from '../../api/controlBar';\n\nimport classes from './styles/DashboardsBar.module.css';\n\nexport const MAX_ROW_COUNT = 10;\n\nexport class DashboardsBar extends Component {\n    state = {\n        rows: MIN_ROW_COUNT,\n    };\n\n    setInitialDashboardState = rows => {\n        this.setState({ rows, isMaxHeight: rows === MAX_ROW_COUNT });\n    };\n\n    componentDidMount() {\n        this.setInitialDashboardState(this.props.userRows);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setInitialDashboardState(nextProps.userRows);\n    }\n\n    onChangeHeight = newHeight => {\n        const adjustedHeight = newHeight - 52; // don't rush the transition to a bigger row count\n        const newRows = Math.max(\n            MIN_ROW_COUNT,\n            getNumRowsFromHeight(adjustedHeight)\n        );\n\n        if (newRows !== this.state.rows) {\n            const newRowCount = Math.min(newRows, MAX_ROW_COUNT);\n\n            this.props.onChangeHeight(newRowCount);\n        }\n    };\n\n    onEndDrag = () => {\n        return apiPostControlBarRows(this.state.rows);\n    };\n\n    onToggleMaxHeight = () => {\n        const rows =\n            this.state.rows === MAX_ROW_COUNT\n                ? this.props.userRows\n                : MAX_ROW_COUNT;\n\n        this.setState({ rows, isMaxHeight: !this.state.isMaxHeight });\n    };\n\n    onSelectDashboard = () => {\n        this.props.history.push(`/${this.props.dashboards[0].id}`);\n    };\n\n    render() {\n        const { dashboards, name, selectedId, onChangeFilterName } = this.props;\n\n        const rowCount = this.state.isMaxHeight\n            ? MAX_ROW_COUNT\n            : this.state.rows;\n        const controlBarHeight = getControlBarHeight(rowCount);\n        const contentWrapperStyle = {\n            padding: `${FIRST_ROW_PADDING_HEIGHT}px 6px 0 6px`,\n            overflowY: this.state.isMaxHeight ? 'auto' : 'hidden',\n            height: getRowsHeight(rowCount) + FIRST_ROW_PADDING_HEIGHT,\n        };\n\n        return (\n            <ControlBar\n                height={controlBarHeight}\n                onChangeHeight={this.onChangeHeight}\n                onEndDrag={this.onEndDrag}\n                editMode={false}\n            >\n                <div style={contentWrapperStyle}>\n                    <div className={classes.leftControls}>\n                        <Link\n                            style={{\n                                display: 'inline-block',\n                                textDecoration: 'none',\n                                marginRight: 10,\n                                position: 'relative',\n                                top: '2px',\n                            }}\n                            to={'/new'}\n                        >\n                            <AddCircleIcon />\n                        </Link>\n                        <Filter\n                            name={name}\n                            onChangeName={onChangeFilterName}\n                            onKeypressEnter={this.onSelectDashboard}\n                        />\n                    </div>\n                    {orArray(dashboards).map(dashboard => (\n                        <Chip\n                            key={dashboard.id}\n                            label={dashboard.displayName}\n                            starred={dashboard.starred}\n                            dashboardId={dashboard.id}\n                            selected={dashboard.id === selectedId}\n                        />\n                    ))}\n                </div>\n                <ShowMoreButton\n                    onClick={this.onToggleMaxHeight}\n                    isMaxHeight={this.state.isMaxHeight}\n                    disabled={this.props.userRows === MAX_ROW_COUNT}\n                />\n            </ControlBar>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    dashboards: sGetAllDashboards(state),\n    name: sGetFilterName(state),\n    userRows: sGetControlBarUserRows(state),\n    selectedId: sGetSelectedId(state),\n});\n\nconst mapDispatchToProps = {\n    onChangeHeight: acSetControlBarUserRows,\n    onChangeFilterName: acSetFilterName,\n};\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const dashboards = Object.values(orObject(stateProps.dashboards));\n    const displayDashboards = arraySort(\n        dashboards.filter(d =>\n            d.displayName.toLowerCase().includes(stateProps.name.toLowerCase())\n        ),\n        'ASC',\n        'displayName'\n    );\n\n    return {\n        ...stateProps,\n        ...ownProps,\n        ...dispatchProps,\n        dashboards: [\n            ...displayDashboards.filter(d => d.starred),\n            ...displayDashboards.filter(d => !d.starred),\n        ],\n    };\n};\n\nDashboardsBar.propTypes = {\n    dashboards: PropTypes.array,\n    history: PropTypes.object,\n    name: PropTypes.string,\n    selectedId: PropTypes.string,\n    userRows: PropTypes.number,\n    onChangeFilterName: PropTypes.func,\n    onChangeHeight: PropTypes.func,\n};\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps,\n        mergeProps\n    )(DashboardsBar)\n);\n","import {\n    SET_DASHBOARDS_FILTER_NAME,\n    SET_DASHBOARDS_FILTER_OWNER,\n    SET_DASHBOARDS_FILTER_ORDER,\n} from '../reducers/dashboardsFilter';\n\n// actions\n\nexport const acSetFilterName = value => ({\n    type: SET_DASHBOARDS_FILTER_NAME,\n    value,\n});\n\nexport const acSetFilterOwner = value => ({\n    type: SET_DASHBOARDS_FILTER_OWNER,\n    value,\n});\n\nexport const acSetFilterOrder = value => ({\n    type: SET_DASHBOARDS_FILTER_ORDER,\n    value,\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport {\n    getTopOffset,\n    MIN_ROW_COUNT,\n} from '../ControlBar/controlBarDimensions';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\n\nconst DashboardVerticalOffset = props => {\n    const rows = props.editMode ? MIN_ROW_COUNT : props.userRows;\n    const marginTop = getTopOffset(rows);\n\n    return <div className=\"page-container-top-margin\" style={{ marginTop }} />;\n};\n\nconst mapStateToProps = state => ({\n    userRows: sGetControlBarUserRows(state),\n});\n\nDashboardVerticalOffset.propTypes = {\n    editMode: PropTypes.bool,\n    userRows: PropTypes.number,\n};\n\nexport default connect(mapStateToProps)(DashboardVerticalOffset);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { MenuItem, colors } from '@dhis2/ui-core';\n\nconst HeaderMenuItem = ({ title }) => (\n    <MenuItem\n        dense\n        key={title}\n        disabled\n        label={\n            <p style={{ color: colors.grey800, fontWeight: '600' }}>{title}</p>\n        }\n    />\n);\n\nHeaderMenuItem.propTypes = {\n    title: PropTypes.string.isRequired,\n};\n\nexport default HeaderMenuItem;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nconst LaunchIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"12\"\n        height=\"12\"\n        fill={colors.grey600}\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z\" />\n    </svg>\n);\n\nLaunchIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default LaunchIcon;\n","import React from 'react';\nimport { MenuItem, colors } from '@dhis2/ui-core';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport { visTypeIcons } from '@dhis2/analytics';\n\nimport { getItemIcon, VISUALIZATION } from '../../modules/itemTypes';\nimport LaunchIcon from '../../icons/Launch';\n\nimport classes from './styles/ContentMenuItem.module.css';\n\nconst LaunchLink = ({ url }) => (\n    <a\n        onClick={e => e.stopPropagation()}\n        className={classes.launchLink}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        href={url}\n    >\n        <LaunchIcon />\n    </a>\n);\n\nLaunchLink.propTypes = {\n    url: PropTypes.string,\n};\n\nconst InsertButton = () => (\n    <button className={classes.buttonInsert}>{i18n.t('Insert')}</button>\n);\n\nconst ContentMenuItem = ({ type, name, onInsert, url, visType }) => {\n    const ItemIcon = getItemIcon(type);\n\n    const renderedItemIcon =\n        type === VISUALIZATION ? (\n            visTypeIcons[visType]\n        ) : (\n            <ItemIcon style={{ fill: colors.grey600 }} />\n        );\n\n    return (\n        <MenuItem\n            dense\n            onClick={onInsert}\n            label={\n                <div className={classes.menuItem}>\n                    <div className={classes.label}>\n                        <span style={{ margin: '6px' }}>\n                            {renderedItemIcon}\n                        </span>\n                        <span>{name}</span>\n                        {url ? <LaunchLink url={url} /> : null}\n                    </div>\n                    <InsertButton />\n                </div>\n            }\n        />\n    );\n};\n\nContentMenuItem.propTypes = {\n    name: PropTypes.string,\n    type: PropTypes.string,\n    url: PropTypes.string,\n    visType: PropTypes.string,\n    onInsert: PropTypes.func,\n};\n\nexport default ContentMenuItem;\n","import i18n from '@dhis2/d2-i18n';\nimport {\n    spacerContent,\n    VISUALIZATION,\n    MAP,\n    EVENT_CHART,\n    EVENT_REPORT,\n    USERS,\n    REPORTS,\n    RESOURCES,\n    APP,\n    MESSAGES,\n    TEXT,\n    SPACER,\n} from '../../modules/itemTypes';\n\nexport const singleItems = [\n    {\n        id: 'additional',\n        header: i18n.t('Additional items'),\n        items: [\n            {\n                type: TEXT,\n                name: i18n.t('Text box'),\n                content: '',\n            },\n            {\n                type: MESSAGES,\n                name: i18n.t('Messages'),\n                content: 'true',\n            },\n            {\n                type: SPACER,\n                name: i18n.t('Spacer'),\n                content: spacerContent,\n            },\n        ],\n    },\n];\n\n// categorizedItems are grouped in the item selector menu\nexport const categorizedItems = [\n    VISUALIZATION,\n    MAP,\n    EVENT_REPORT,\n    EVENT_CHART,\n    USERS,\n    REPORTS,\n    RESOURCES,\n    APP,\n];\n\n// listItemTypes are included in a single dashboard item\nexport const listItemTypes = [REPORTS, RESOURCES, USERS];\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { MenuItem, Divider } from '@dhis2/ui-core';\n\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\n\nimport { tAddListItemContent } from './actions';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\nimport { getItemUrl, APP, VISUALIZATION } from '../../modules/itemTypes';\nimport { categorizedItems, listItemTypes } from './selectableItems';\n\nimport classes from './styles/CategorizedMenuGroup.module.css';\n\nclass CategorizedMenuGroup extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seeMore: false,\n        };\n    }\n\n    addItem = item => () => {\n        const { type, acAddDashboardItem, tAddListItemContent } = this.props;\n\n        if (type === APP) {\n            acAddDashboardItem({ type, content: item.key });\n        } else {\n            const newItem = {\n                id: item.id,\n                name: item.displayName || item.name,\n            };\n\n            if (listItemTypes.includes(type)) {\n                tAddListItemContent(type, newItem);\n            } else {\n                acAddDashboardItem({ type, content: newItem });\n            }\n        }\n    };\n\n    toggleSeeMore = () => {\n        this.setState({ seeMore: !this.state.seeMore });\n\n        this.props.onChangeItemsLimit(this.props.type);\n    };\n\n    render() {\n        const { title, type, items, hasMore } = this.props;\n        return (\n            <>\n                <HeaderMenuItem title={title} />\n                {items.map(item => {\n                    const itemUrl = getItemUrl(type, item, this.context.d2);\n                    return (\n                        <ContentMenuItem\n                            key={item.id || item.key}\n                            type={type}\n                            visType={type === VISUALIZATION ? item.type : type}\n                            name={item.displayName || item.name}\n                            onInsert={this.addItem(item)}\n                            url={itemUrl}\n                        />\n                    );\n                })}\n                {hasMore ? (\n                    <MenuItem\n                        dense\n                        key={`showmore${title}`}\n                        onClick={this.toggleSeeMore}\n                        label={\n                            <button className={classes.showMoreButton}>\n                                {this.state.seeMore\n                                    ? i18n.t('Show fewer')\n                                    : i18n.t('Show more')}\n                            </button>\n                        }\n                    />\n                ) : null}\n                <Divider margin=\"8px 0px\" />\n            </>\n        );\n    }\n}\n\nCategorizedMenuGroup.propTypes = {\n    items: PropTypes.array.isRequired,\n    title: PropTypes.string.isRequired,\n    type: PropTypes.oneOf(categorizedItems).isRequired,\n    onChangeItemsLimit: PropTypes.func.isRequired,\n    acAddDashboardItem: PropTypes.func,\n    hasMore: PropTypes.bool,\n    tAddListItemContent: PropTypes.func,\n};\n\nCategorizedMenuGroup.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nexport default connect(\n    null,\n    {\n        acAddDashboardItem,\n        tAddListItemContent,\n    }\n)(CategorizedMenuGroup);\n","import { sGetEditDashboardRoot } from '../../reducers/editDashboard';\nimport { itemTypeMap } from '../../modules/itemTypes';\nimport {\n    acAddDashboardItem,\n    acUpdateDashboardItem,\n} from '../../actions/editDashboard';\n\nexport const tAddListItemContent = (type, content) => (dispatch, getState) => {\n    const state = getState();\n    const listItemType = itemTypeMap[type].propName;\n    const dashboardItems = sGetEditDashboardRoot(state).dashboardItems;\n    const dashboardItemIndex = dashboardItems.findIndex(\n        item => item.type === type\n    );\n    let dashboardItem;\n\n    // Reports/Resources/Users dashboard item type already present in dashboard\n    if (dashboardItemIndex > -1) {\n        dashboardItem = dashboardItems[dashboardItemIndex];\n        dashboardItem[listItemType].push(content);\n\n        dispatch(acUpdateDashboardItem(dashboardItem));\n    } else {\n        dashboardItem = {\n            type: type,\n            content: [content],\n        };\n\n        dispatch(acAddDashboardItem(dashboardItem));\n    }\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\n\nexport const SinglesMenuGroup = ({ acAddDashboardItem, category }) => {\n    const addToDashboard = ({ type, content }) => () => {\n        acAddDashboardItem({ type, content });\n    };\n\n    return (\n        <>\n            <HeaderMenuItem title={category.header} />\n            {category.items.map(item => (\n                <ContentMenuItem\n                    key={item.type}\n                    type={item.type}\n                    name={item.name}\n                    onInsert={addToDashboard(item)}\n                />\n            ))}\n        </>\n    );\n};\n\nSinglesMenuGroup.propTypes = {\n    acAddDashboardItem: PropTypes.func,\n    category: PropTypes.object,\n};\n\nexport default connect(\n    null,\n    { acAddDashboardItem }\n)(SinglesMenuGroup);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport Popover from '@material-ui/core/Popover';\nimport { InputField, Menu } from '@dhis2/ui-core';\n\nimport CategorizedMenuGroup from './CategorizedMenuGroup';\nimport SinglesMenuGroup from './SinglesMenuGroup';\nimport { singleItems, categorizedItems } from './selectableItems';\nimport { itemTypeMap, getDefaultItemCount } from '../../modules/itemTypes';\n\nimport './styles/ItemSelector.css';\n\nconst ItemSearchField = props => (\n    <InputField\n        name=\"Dashboard item search\"\n        label={i18n.t('Search for items to add to this dashboard')}\n        type=\"text\"\n        onChange={props.onChange}\n        onFocus={props.onFocus}\n        value={props.value}\n    />\n);\n\nclass ItemSelector extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n            open: false,\n            maxOptions: new Set(),\n            items: undefined,\n            filter: '',\n        };\n    }\n\n    closeList = () => {\n        this.setState({ open: false, filter: '' });\n    };\n\n    openList = (_, event) => {\n        this.fetchItems();\n\n        this.setState({\n            anchorEl: event.currentTarget,\n            open: true,\n        });\n    };\n\n    setFilter = (_, event) => {\n        this.setState({ filter: event.target.value }, this.fetchItems);\n    };\n\n    getCategorizedMenuGroups = () =>\n        categorizedItems\n            .filter(type => {\n                const itemType = itemTypeMap[type];\n                return (\n                    this.state.items && this.state.items[itemType.endPointName]\n                );\n            })\n            .map(type => {\n                const itemType = itemTypeMap[type];\n                const itemCount = getDefaultItemCount(type);\n                const allItems = this.state.items[itemType.endPointName];\n                const hasMore = allItems.length > itemCount;\n                const items = this.state.maxOptions.has(itemType.id)\n                    ? allItems\n                    : allItems.slice(0, itemCount);\n\n                return (\n                    <CategorizedMenuGroup\n                        key={type}\n                        type={type}\n                        title={itemType.pluralTitle}\n                        items={items}\n                        onChangeItemsLimit={this.fetchItems}\n                        hasMore={hasMore}\n                    />\n                );\n            });\n\n    getSinglesMenuGroups = () =>\n        singleItems.map(category => (\n            <SinglesMenuGroup key={category.id} category={category} />\n        ));\n\n    getMenuGroups = () =>\n        this.getCategorizedMenuGroups().concat(this.getSinglesMenuGroups());\n\n    fetchItems = async type => {\n        if (type) {\n            const maxOptions = this.state.maxOptions;\n\n            if (maxOptions.has(type)) {\n                maxOptions.delete(type);\n            } else {\n                maxOptions.add(type);\n            }\n\n            this.setState({ maxOptions });\n        } else {\n            this.setState({\n                maxOptions: new Set(),\n            });\n        }\n\n        let queryString = '?count=11';\n        if ([...this.state.maxOptions.values()].length) {\n            queryString +=\n                '&max=' + [...this.state.maxOptions.values()].join('&max=');\n        }\n\n        const filter = this.state.filter ? `/${this.state.filter}` : '';\n\n        this.context.d2.Api.getApi()\n            .get(`dashboards/q${filter}${queryString}`)\n            .then(response => this.setState({ items: response }))\n            .catch(console.error);\n    };\n\n    render() {\n        return (\n            <>\n                <ItemSearchField\n                    value={this.state.filter}\n                    onChange={this.setFilter}\n                    onFocus={this.openList}\n                />\n                <Popover\n                    className=\"dashboard-item-selector\"\n                    open={this.state.open}\n                    onClose={this.closeList}\n                    anchorEl={this.state.anchorEl}\n                    anchorOrigin={{ horizontal: 'left', vertical: 'bottom' }}\n                    transformOrigin={{ horizontal: 'left', vertical: 'top' }}\n                    style={{ height: '70vh' }}\n                    PaperProps={{ style: { width: '700px' } }}\n                    disableAutoFocus={true}\n                    disableRestoreFocus={true}\n                >\n                    <Menu>{this.getMenuGroups()}</Menu>\n                </Popover>\n            </>\n        );\n    }\n}\n\nItemSearchField.propTypes = {\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n    onFocus: PropTypes.func,\n};\n\nItemSelector.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nexport default ItemSelector;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { InputField, TextAreaField } from '@dhis2/ui-core';\n\nimport ItemSelector from '../ItemSelector/ItemSelector';\nimport {\n    acSetDashboardTitle,\n    acSetDashboardDescription,\n} from '../../actions/editDashboard';\nimport { orObject } from '../../modules/util';\nimport { sGetEditDashboardRoot } from '../../reducers/editDashboard';\n\nimport classes from './styles/EditTitleBar.module.css';\n\nexport const EditTitleBar = ({\n    name,\n    description,\n    onChangeTitle,\n    onChangeDescription,\n}) => {\n    const updateTitle = (_, e) => {\n        onChangeTitle(e.target.value);\n    };\n\n    const updateDescription = (_, e) => {\n        onChangeDescription(e.target.value);\n    };\n\n    return (\n        <section className={classes.section}>\n            <div className={classes.titleDescription}>\n                <InputField\n                    className={classes.title}\n                    name=\"Dashboard title input\"\n                    label={i18n.t('Dashboard title')}\n                    type=\"text\"\n                    onChange={updateTitle}\n                    value={name}\n                />\n                <TextAreaField\n                    className={classes.description}\n                    name=\"Dashboard description input\"\n                    label={i18n.t('Dashboard description')}\n                    onChange={updateDescription}\n                    value={description}\n                />\n            </div>\n            <div className={classes.itemSelector}>\n                <ItemSelector />\n            </div>\n        </section>\n    );\n};\n\nEditTitleBar.propTypes = {\n    onChangeDescription: PropTypes.func.isRequired,\n    onChangeTitle: PropTypes.func.isRequired,\n    description: PropTypes.string,\n    name: PropTypes.string,\n};\n\nEditTitleBar.defaultProps = {\n    name: '',\n    description: '',\n};\n\nconst mapStateToProps = state => {\n    const selectedDashboard = orObject(sGetEditDashboardRoot(state));\n\n    return {\n        name: selectedDashboard.name,\n        description: selectedDashboard.description,\n    };\n};\n\nconst mapDispatchToProps = {\n    onChangeTitle: acSetDashboardTitle,\n    onChangeDescription: acSetDashboardDescription,\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(EditTitleBar);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Button } from '@dhis2/ui-core';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport i18n from '@dhis2/d2-i18n';\n\nimport {\n    PeriodDimension,\n    DynamicDimension,\n    OrgUnitDimension,\n    DIMENSION_ID_PERIOD,\n    DIMENSION_ID_ORGUNIT,\n} from '@dhis2/analytics';\n\nconst peId = DIMENSION_ID_PERIOD;\nconst ouId = DIMENSION_ID_ORGUNIT;\n\nclass FilterDialog extends Component {\n    onConfirm = id => () => this.props.onConfirm(id);\n\n    dialogContent() {\n        const { displayNameProperty, dimension, selectedItems } = this.props;\n        const dialogId = dimension.id;\n\n        const commonProps = {\n            d2: this.context.d2,\n            onSelect: this.props.onSelect,\n            onDeselect: this.props.onDeselect,\n            onReorder: this.props.onReorder,\n        };\n\n        switch (dialogId) {\n            case peId: {\n                return (\n                    <PeriodDimension\n                        selectedPeriods={selectedItems}\n                        {...commonProps}\n                    />\n                );\n            }\n            case ouId:\n                return (\n                    <OrgUnitDimension\n                        displayNameProperty={displayNameProperty}\n                        ouItems={selectedItems}\n                        {...commonProps}\n                    />\n                );\n            default:\n                return (\n                    <DynamicDimension\n                        selectedItems={selectedItems}\n                        dialogId={dialogId}\n                        dialogTitle={dimension.name}\n                        {...commonProps}\n                    />\n                );\n        }\n    }\n\n    render() {\n        const { dimension, onClose } = this.props;\n        const dialogId = dimension.id;\n\n        return (\n            <Dialog\n                open={!!dialogId}\n                maxWidth=\"lg\"\n                disableEnforceFocus\n                onClose={onClose}\n            >\n                {dialogId && this.dialogContent()}\n                <DialogActions>\n                    <Button kind=\"secondary\" onClick={onClose}>\n                        {i18n.t('Cancel')}\n                    </Button>\n                    <Button kind=\"primary\" onClick={this.onConfirm(dialogId)}>\n                        {i18n.t('Confirm')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nFilterDialog.propTypes = {\n    dimension: PropTypes.object,\n    displayNameProperty: PropTypes.string,\n    selectedItems: PropTypes.array,\n    onClose: PropTypes.func,\n    onConfirm: PropTypes.func,\n    onDeselect: PropTypes.func,\n    onReorder: PropTypes.func,\n    onSelect: PropTypes.func,\n};\n\nFilterDialog.contextTypes = {\n    d2: PropTypes.object,\n};\n\nexport default FilterDialog;\n","export const SET_ACTIVE_MODAL_DIMENSION = 'SET_ACTIVE_MODAL_DIMENSION';\nexport const CLEAR_ACTIVE_MODAL_DIMENSION = 'CLEAR_ACTIVE_MODAL_DIMENSION';\n\nexport const DEFAULT_STATE_ACTIVE_MODAL_DIMENSION = {};\n\nexport default (state = DEFAULT_STATE_ACTIVE_MODAL_DIMENSION, action) => {\n    switch (action.type) {\n        case SET_ACTIVE_MODAL_DIMENSION: {\n            return action.value;\n        }\n        case CLEAR_ACTIVE_MODAL_DIMENSION: {\n            return DEFAULT_STATE_ACTIVE_MODAL_DIMENSION;\n        }\n        default:\n            return state;\n    }\n};\n\nexport const sGetActiveModalDimension = state => state.activeModalDimension;\n","import {\n    SET_ACTIVE_MODAL_DIMENSION,\n    CLEAR_ACTIVE_MODAL_DIMENSION,\n} from '../reducers/activeModalDimension';\n\nexport const acSetActiveModalDimension = value => ({\n    type: SET_ACTIVE_MODAL_DIMENSION,\n    value,\n});\n\nexport const acClearActiveModalDimension = () => ({\n    type: CLEAR_ACTIVE_MODAL_DIMENSION,\n});\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Popover from '@material-ui/core/Popover';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport { withTheme } from '@material-ui/core/styles';\n\nimport i18n from '@dhis2/d2-i18n';\nimport { DimensionsPanel } from '@dhis2/analytics';\n\nimport { Button } from '@dhis2/ui-core';\nimport FilterDialog from './FilterDialog';\n\nimport { sGetSettingsDisplayNameProperty } from '../../reducers/settings';\nimport { sGetActiveModalDimension } from '../../reducers/activeModalDimension';\nimport { sGetDimensions } from '../../reducers/dimensions';\nimport { sGetFiltersKeys } from '../../reducers/itemFilters';\nimport { sGetEditItemFiltersRoot } from '../../reducers/editItemFilters';\nimport { acAddItemFilter, acRemoveItemFilter } from '../../actions/itemFilters';\nimport {\n    acRemoveEditItemFilter,\n    acSetEditItemFilters,\n} from '../../actions/editItemFilters';\nimport {\n    acClearActiveModalDimension,\n    acSetActiveModalDimension,\n} from '../../actions/activeModalDimension';\n\nclass FilterSelector extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n        };\n    }\n\n    openPanel = (_, event) => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    closePanel = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    closeDialog = () => {\n        this.setState({ anchorEl: null });\n\n        this.props.clearActiveModalDimension();\n    };\n\n    selectDimension = id => {\n        this.props.setActiveModalDimension(\n            this.props.dimensions.find(dimension => dimension.id === id)\n        );\n    };\n\n    onSelectItems = ({ dimensionId, items }) => {\n        this.props.setEditItemFilters({\n            ...this.props.selectedItems,\n            [dimensionId]: items,\n        });\n    };\n\n    onDeselectItems = ({ dimensionId, itemIdsToRemove }) => {\n        const oldList = this.props.selectedItems[dimensionId] || [];\n        const newList = oldList.filter(\n            item => !itemIdsToRemove.includes(item.id)\n        );\n\n        if (newList.length) {\n            this.props.setEditItemFilters({\n                ...this.props.selectedItems,\n                [dimensionId]: newList,\n            });\n        } else {\n            this.props.removeEditItemFilter(dimensionId);\n        }\n    };\n\n    onReorderItems = ({ dimensionId, itemIds }) => {\n        const oldList = this.props.selectedItems[dimensionId] || [];\n        const reorderedList = itemIds.map(id =>\n            oldList.find(item => item.id === id)\n        );\n\n        this.props.setEditItemFilters({\n            ...this.props.selectedItems,\n            [dimensionId]: reorderedList,\n        });\n    };\n\n    saveFilter = id => {\n        const filterItems = this.props.selectedItems[id];\n\n        if (filterItems && filterItems.length) {\n            this.props.addItemFilter({\n                id,\n                value: [...filterItems],\n            });\n        } else {\n            this.props.removeItemFilter(id);\n        }\n\n        this.closeDialog();\n    };\n\n    render() {\n        const {\n            theme,\n            displayNameProperty,\n            dimension,\n            dimensions,\n            selectedDimensions,\n            selectedItems,\n        } = this.props;\n\n        return (\n            <>\n                <Button onClick={this.openPanel}>\n                    {i18n.t('Add filter')}\n                    <ArrowDropDownIcon />\n                </Button>\n                <Popover\n                    open={Boolean(this.state.anchorEl)}\n                    anchorEl={this.state.anchorEl}\n                    anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\n                    onClose={this.closePanel}\n                    style={{\n                        height: '100%',\n                        fontFamily: theme.typography.fontFamily,\n                    }}\n                >\n                    <DimensionsPanel\n                        style={{ width: '320px' }}\n                        dimensions={dimensions}\n                        onDimensionClick={this.selectDimension}\n                        selectedIds={selectedDimensions}\n                    />\n                </Popover>\n                {dimension ? (\n                    <FilterDialog\n                        displayNameProperty={displayNameProperty}\n                        dimension={dimension}\n                        selectedItems={selectedItems[dimension.id] || []}\n                        onSelect={this.onSelectItems}\n                        onDeselect={this.onDeselectItems}\n                        onReorder={this.onReorderItems}\n                        onClose={this.closeDialog}\n                        onConfirm={this.saveFilter}\n                    />\n                ) : null}\n            </>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    displayNameProperty: sGetSettingsDisplayNameProperty(state),\n    dimension: sGetActiveModalDimension(state),\n    dimensions: sGetDimensions(state),\n    selectedDimensions: sGetFiltersKeys(state),\n    selectedItems: sGetEditItemFiltersRoot(state),\n});\n\nFilterSelector.propTypes = {\n    addItemFilter: PropTypes.func,\n    clearActiveModalDimension: PropTypes.func,\n    dimension: PropTypes.object,\n    dimensions: PropTypes.array,\n    displayNameProperty: PropTypes.string,\n    removeEditItemFilter: PropTypes.func,\n    removeItemFilter: PropTypes.func,\n    selectedDimensions: PropTypes.array,\n    selectedItems: PropTypes.object,\n    setActiveModalDimension: PropTypes.func,\n    setEditItemFilters: PropTypes.func,\n    theme: PropTypes.object,\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        clearActiveModalDimension: acClearActiveModalDimension,\n        setActiveModalDimension: acSetActiveModalDimension,\n        addItemFilter: acAddItemFilter,\n        removeItemFilter: acRemoveItemFilter,\n        removeEditItemFilter: acRemoveEditItemFilter,\n        setEditItemFilters: acSetEditItemFilters,\n    }\n)(withTheme()(FilterSelector));\n","import React, { Component } from 'react';\nimport InfoOutlineIcon from '@material-ui/icons/InfoOutlined';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nclass Info extends Component {\n    show = false;\n\n    toggle() {\n        this.show = !this.show;\n        return this.show;\n    }\n\n    render() {\n        return (\n            <div onClick={() => this.props.onClick(this.toggle())}>\n                <InfoOutlineIcon style={{ fill: colors.grey600 }} />\n            </div>\n        );\n    }\n}\n\nInfo.propTypes = {\n    onClick: PropTypes.func,\n};\n\nexport default Info;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport SharingDialog from '@dhis2/d2-ui-sharing-dialog';\nimport Star from '@material-ui/icons/Star';\nimport StarBorder from '@material-ui/icons/StarBorder';\n\nimport { orObject } from '../../modules/util';\nimport { tStarDashboard } from '../../actions/dashboards';\nimport { acSetSelectedShowDescription } from '../../actions/selected';\nimport FilterSelector from '../ItemFilter/FilterSelector';\nimport { Button, colors } from '@dhis2/ui-core';\nimport Info from './Info';\nimport {\n    sGetSelectedId,\n    sGetSelectedShowDescription,\n} from '../../reducers/selected';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n} from '../../reducers/dashboards';\n\nimport classes from './styles/ViewTitleBar.module.css';\n\nconst NO_DESCRIPTION = i18n.t('No description');\n\nclass ViewTitleBar extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            sharingDialogIsOpen: false,\n        };\n    }\n\n    toggleSharingDialog = () =>\n        this.setState({ sharingDialogIsOpen: !this.state.sharingDialogIsOpen });\n\n    render() {\n        const {\n            id,\n            name,\n            description,\n            access,\n            style,\n            showDescription,\n            starred,\n            onStarClick,\n            onInfoClick,\n        } = this.props;\n\n        const titleStyle = Object.assign({}, style.title, {\n            cursor: 'default',\n            userSelect: 'text',\n            top: '7px',\n        });\n\n        const StarIcon = starred ? Star : StarBorder;\n\n        return (\n            <>\n                <div className={classes.titleBar}>\n                    <span style={titleStyle}>{name}</span>\n                    <div className={classes.actions}>\n                        <div\n                            className={classes.titleBarIcon}\n                            onClick={onStarClick}\n                        >\n                            <StarIcon style={{ fill: colors.grey600 }} />\n                        </div>\n                        <div className={classes.titleBarIcon}>\n                            <Info onClick={onInfoClick} />\n                        </div>\n                        <div style={{ marginLeft: '10px' }}>\n                            {access.update ? (\n                                <Link\n                                    className={classes.editLink}\n                                    to={`/${id}/edit`}\n                                >\n                                    <Button>{i18n.t('Edit')}</Button>\n                                </Link>\n                            ) : null}\n                            {access.manage ? (\n                                <span style={{ marginRight: '4px' }}>\n                                    <Button onClick={this.toggleSharingDialog}>\n                                        {i18n.t('Share')}\n                                    </Button>\n                                </span>\n                            ) : null}\n                            <span style={{ marginRight: '4px' }}>\n                                <FilterSelector />\n                            </span>\n                        </div>\n                    </div>\n                </div>\n                {showDescription ? (\n                    <div\n                        className=\"dashboard-description\"\n                        style={Object.assign(\n                            { paddingTop: '5px', paddingBottom: '5px' },\n                            style.description,\n                            !description ? { color: '#888' } : {}\n                        )}\n                    >\n                        {description || NO_DESCRIPTION}\n                    </div>\n                ) : null}\n                {id ? (\n                    <SharingDialog\n                        d2={this.context.d2}\n                        id={id}\n                        type=\"dashboard\"\n                        open={this.state.sharingDialogIsOpen}\n                        onRequestClose={this.toggleSharingDialog}\n                    />\n                ) : null}\n            </>\n        );\n    }\n}\n\nViewTitleBar.propTypes = {\n    access: PropTypes.object,\n    description: PropTypes.string,\n    id: PropTypes.string,\n    name: PropTypes.string,\n    showDescription: PropTypes.bool,\n    starred: PropTypes.bool,\n    style: PropTypes.object,\n    onInfoClick: PropTypes.func,\n    onStarClick: PropTypes.func,\n};\n\nViewTitleBar.defaultProps = {\n    name: '',\n    description: '',\n    starred: false,\n    showDescription: false,\n    onInfoClick: null,\n};\n\nViewTitleBar.contextTypes = {\n    d2: PropTypes.object,\n};\n\nconst mapStateToProps = state => {\n    const id = sGetSelectedId(state);\n    const dashboard = orObject(sGetDashboardById(state, id));\n\n    return {\n        id,\n        name: dashboard.displayName,\n        description: dashboard.displayDescription,\n        dashboardItems: sGetDashboardItems(state),\n        showDescription: sGetSelectedShowDescription(state),\n        starred: dashboard.starred,\n        access: orObject(dashboard.access),\n    };\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const { id, starred, showDescription } = stateProps;\n    const { dispatch } = dispatchProps;\n\n    return {\n        ...stateProps,\n        ...ownProps,\n        onStarClick: () => dispatch(tStarDashboard(id, !starred)),\n        onInfoClick: () =>\n            dispatch(acSetSelectedShowDescription(!showDescription)),\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    null,\n    mergeProps\n)(ViewTitleBar);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { colors } from '@dhis2/ui-core';\nimport EditTitleBar from './EditTitleBar';\nimport ViewTitleBar from './ViewTitleBar';\n\nimport './TitleBar.css';\n\nconst style = {\n    title: {\n        position: 'relative',\n        fontSize: 21,\n        fontWeight: 500,\n        color: colors.black,\n        minWidth: 50,\n    },\n    description: {\n        fontSize: 14,\n        color: colors.grey800,\n    },\n};\n\nconst TitleBar = ({ edit }) => {\n    return (\n        <div\n            className=\"titlebar-wrapper\"\n            style={{\n                padding: '20px 15px 5px 10px',\n            }}\n        >\n            {edit ? (\n                <EditTitleBar style={style} />\n            ) : (\n                <ViewTitleBar style={style} />\n            )}\n        </div>\n    );\n};\n\nTitleBar.propTypes = {\n    edit: PropTypes.bool,\n};\n\nexport default TitleBar;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport i18n from '@dhis2/d2-i18n';\n\nimport * as pluginManager from './plugin';\nimport { getBaseUrl, orObject } from '../../../modules/util';\nimport { getGridItemDomId } from '../../ItemGrid/gridUtil';\n\nconst pluginCredentials = d2 => {\n    return {\n        baseUrl: getBaseUrl(d2),\n        auth: d2.Api.getApi().defaultHeaders.Authorization,\n    };\n};\n\nclass DefaultPlugin extends Component {\n    pluginCredentials = null;\n\n    constructor(props, context) {\n        super(props);\n\n        this.d2 = context.d2;\n    }\n\n    shouldPluginReload = prevProps => {\n        // TODO - fix this hack, to handle bug with multiple\n        // rerendering while switching between dashboards.\n        //\n        // To determine if the rendering is happening because of a\n        // dashboard switch, check if the item reference has changed.\n        const reloadAllowed = this.props.item === prevProps.item;\n\n        const filtersChanged = prevProps.itemFilters !== this.props.itemFilters;\n        const vis = orObject(this.props.visualization);\n        const prevVis = orObject(prevProps.visualization);\n        const visChanged =\n            vis.id !== prevVis.id || vis.activeType !== prevVis.activeType;\n\n        return reloadAllowed && (visChanged || filtersChanged);\n    };\n\n    reloadPlugin = prevProps => {\n        if (\n            pluginManager.pluginIsAvailable(\n                this.props.item,\n                this.props.visualization\n            ) &&\n            this.shouldPluginReload(prevProps)\n        ) {\n            const prevVis = orObject(prevProps.visualization);\n            const currentVis = this.props.visualization;\n\n            const useActiveType =\n                currentVis.activeType !== prevVis.activeType ||\n                currentVis.activeType !== this.props.item.type;\n\n            if (\n                useActiveType ||\n                this.props.itemFilters !== prevProps.itemFilters\n            ) {\n                pluginManager.unmount(\n                    this.props.item,\n                    prevVis.activeType || this.props.item.type\n                );\n\n                pluginManager.load(this.props.item, this.props.visualization, {\n                    credentials: this.pluginCredentials,\n                    activeType: useActiveType ? currentVis.activeType : null,\n                });\n            }\n        }\n    };\n\n    componentDidMount() {\n        this.pluginCredentials = pluginCredentials(this.d2);\n\n        if (\n            pluginManager.pluginIsAvailable(\n                this.props.item,\n                this.props.visualization\n            )\n        ) {\n            pluginManager.load(this.props.item, this.props.visualization, {\n                credentials: this.pluginCredentials,\n                activeType: !this.props.editMode ? this.getActiveType() : null,\n            });\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        this.reloadPlugin(prevProps);\n    }\n\n    getActiveType = () =>\n        this.props.visualization.activeType || this.props.item.type;\n\n    render() {\n        const { classes, item, visualization, style } = this.props;\n        const pluginIsAvailable = pluginManager.pluginIsAvailable(\n            item,\n            visualization\n        );\n\n        return pluginIsAvailable ? (\n            <div id={getGridItemDomId(item.id)} style={style} />\n        ) : (\n            <div className={classes.textDiv}>\n                {i18n.t('Unable to load the plugin for this item')}\n            </div>\n        );\n    }\n}\n\nDefaultPlugin.contextTypes = {\n    d2: PropTypes.object,\n};\n\nDefaultPlugin.propTypes = {\n    classes: PropTypes.object,\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    itemFilters: PropTypes.object,\n    style: PropTypes.object,\n    visualization: PropTypes.object,\n};\n\nDefaultPlugin.defaultProps = {\n    style: {},\n    item: {},\n    itemFilters: {},\n    visualization: {},\n};\n\nexport default DefaultPlugin;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\n\nexport const ThreeDots = () => (\n    <svg\n        height=\"18\"\n        viewBox=\"0 0 18 18\"\n        width=\"18\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n    >\n        <path\n            d=\"m4 7.5c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm10 0c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm-5 0c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5z\"\n            fill=\"#6e7a8a\"\n        />\n    </svg>\n);\n\nexport const SpeechBubble = () => (\n    <svg\n        height=\"20\"\n        viewBox=\"0 0 20 20\"\n        width=\"20\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        style={{ margin: '3px 2px 0 2px' }} // Temporary fix for the misaligned icon, should be removed once the icon is replaced\n    >\n        <path\n            d=\"m20 2h-16c-1.1 0-1.99.9-1.99 2l-.01 18 4-4h14c1.1 0 2-.9 2-2v-12c0-1.1-.9-2-2-2zm-2 12h-12v-2h12zm0-3h-12v-2h12zm0-3h-12v-2h12z\"\n            fill=\"#6e7a8a\"\n            fillRule=\"evenodd\"\n            transform=\"translate(-2 -2)\"\n        />\n    </svg>\n);\n\nexport const Warning = () => (\n    <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        height=\"24\"\n        viewBox=\"0 0 24 24\"\n        width=\"24\"\n        fill={colors.grey600}\n    >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z\" />\n    </svg>\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Warning } from './assets/icons';\n\nimport classes from './styles/FatalErrorBoundary.module.css';\n\nclass FatalErrorBoundary extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            errorFound: false,\n        };\n    }\n    componentDidCatch(error, info) {\n        this.setState({\n            errorFound: true,\n        });\n        console.log('error: ', error);\n        console.log('info: ', info);\n    }\n    render() {\n        if (this.state.errorFound) {\n            return (\n                <p className={classes.container}>\n                    <span className={classes.icon}>\n                        <Warning />\n                    </span>\n                    <span className={classes.message}>\n                        {i18n.t(\n                            'There was a problem loading this dashboard item'\n                        )}\n                    </span>\n                </p>\n            );\n        }\n        return this.props.children;\n    }\n}\n\nFatalErrorBoundary.propTypes = {\n    children: PropTypes.node,\n};\n\nexport default FatalErrorBoundary;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { colors } from '@dhis2/ui-core';\n\nimport classes from './styles/DeleteItemButton.module.css';\n\nconst DeleteItemButton = ({ onClick }) => (\n    <button\n        type=\"button\"\n        className={classes.deleteItemButton}\n        onClick={onClick}\n        title={i18n.t(`Delete item`)}\n    >\n        <DeleteIcon style={{ fill: colors.red500 }} />\n    </button>\n);\n\nDeleteItemButton.propTypes = {\n    onClick: PropTypes.func,\n};\n\nexport default DeleteItemButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { sGetIsEditing } from '../../reducers/editDashboard';\nimport { acRemoveDashboardItem } from '../../actions/editDashboard';\nimport DeleteItemButton from './DeleteItemButton';\n\nimport classes from './styles/ItemHeader.module.css';\n\n// This is the margin-top + margin-bottom defined in the css file\nexport const HEADER_MARGIN_HEIGHT = 12;\n\nconst ItemHeader = props => {\n    const {\n        title,\n        editMode,\n        actionButtons,\n        itemId,\n        acRemoveDashboardItem,\n        forwardedRef,\n    } = props;\n\n    const handleDeleteItem = () => acRemoveDashboardItem(itemId);\n\n    return (\n        <div className={classes.itemHeaderWrap} ref={forwardedRef}>\n            <p className={classes.itemTitle}>{title}</p>\n            {editMode ? (\n                <div className={classes.itemActionsWrap}>\n                    <DeleteItemButton onClick={handleDeleteItem} />\n                </div>\n            ) : (\n                actionButtons && (\n                    <div className={classes.itemActionsWrap}>\n                        {actionButtons}\n                    </div>\n                )\n            )}\n        </div>\n    );\n};\n\nItemHeader.propTypes = {\n    acRemoveDashboardItem: PropTypes.func,\n    actionButtons: PropTypes.node,\n    editMode: PropTypes.bool,\n    forwardedRef: PropTypes.object,\n    itemId: PropTypes.string,\n    title: PropTypes.string,\n};\n\nItemHeader.defaultProps = {\n    forwardedRef: {},\n};\n\nconst mapStateToProps = state => ({\n    editMode: sGetIsEditing(state),\n});\n\nconst mapDispatchToProps = {\n    acRemoveDashboardItem,\n};\n\nconst ConnectedItemHeader = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ItemHeader);\n\n// TODO this is a false positive that is fixed in eslint-plugin-react v7.15\n// github.com/yannickcr/eslint-plugin-react/blob/master/CHANGELOG.md\n/* eslint-disable react/display-name */\nexport default React.forwardRef((props, ref) => (\n    <ConnectedItemHeader {...props} forwardedRef={ref} />\n));\n/* eslint-enable react/display-name */\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n    isSingleValue,\n    isYearOverYear,\n    VIS_TYPE_GAUGE,\n    VIS_TYPE_PIE,\n} from '@dhis2/analytics';\nimport { Button, Menu, MenuItem, Divider, colors } from '@dhis2/ui-core';\nimport i18n from '@dhis2/d2-i18n';\nimport Popover from '@material-ui/core/Popover';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\nimport LaunchIcon from '@material-ui/icons/Launch';\n\nimport { ThreeDots, SpeechBubble } from './assets/icons';\nimport { pluginIsAvailable, getLink } from './plugin';\nimport {\n    CHART,\n    MAP,\n    REPORT_TABLE,\n    EVENT_CHART,\n    EVENT_REPORT,\n    isTrackerDomainType,\n    hasMapView,\n    getAppName,\n} from '../../../modules/itemTypes';\n\nconst iconFill = { fill: colors.grey600 };\n\nconst ItemHeaderButtons = props => {\n    const [anchorEl, setAnchorEl] = useState(null);\n\n    const { item, visualization, onSelectActiveType, d2, activeType } = props;\n\n    const isTrackerType = isTrackerDomainType(item.type);\n\n    const onViewTable = () => {\n        handleClose();\n        onSelectActiveType(isTrackerType ? EVENT_REPORT : REPORT_TABLE);\n    };\n\n    const onViewChart = () => {\n        handleClose();\n        onSelectActiveType(isTrackerType ? EVENT_CHART : CHART);\n    };\n\n    const onViewMap = () => {\n        handleClose();\n        onSelectActiveType(MAP);\n    };\n\n    const itemHasMapView = () => hasMapView(item.type);\n\n    const handleMenuClick = (_, event) => setAnchorEl(event.currentTarget);\n\n    const handleInterpretationClick = () => {\n        props.onToggleFooter();\n        if (anchorEl !== null) {\n            handleClose();\n        }\n    };\n\n    const handleClose = () => setAnchorEl(null);\n\n    const type = visualization.type || item.type;\n    const canViewAs =\n        !isSingleValue(type) &&\n        !isYearOverYear(type) &&\n        type !== VIS_TYPE_GAUGE &&\n        type !== VIS_TYPE_PIE;\n\n    const interpretationMenuLabel = props.activeFooter\n        ? i18n.t(`Hide interpretations and details`)\n        : i18n.t(`Show interpretations and details`);\n\n    const ViewAsMenuItems = () => (\n        <>\n            {activeType !== CHART && activeType !== EVENT_CHART && (\n                <MenuItem\n                    dense\n                    label={i18n.t('View as Chart')}\n                    onClick={onViewChart}\n                    icon={<ChartIcon style={iconFill} />}\n                />\n            )}\n            {activeType !== REPORT_TABLE && activeType !== EVENT_REPORT && (\n                <MenuItem\n                    dense\n                    label={i18n.t('View as Table')}\n                    onClick={onViewTable}\n                    icon={<TableIcon style={iconFill} />}\n                />\n            )}\n            {itemHasMapView() && activeType !== MAP && (\n                <MenuItem\n                    dense\n                    label={i18n.t('View as Map')}\n                    onClick={onViewMap}\n                    icon={<MapIcon style={iconFill} />}\n                />\n            )}\n        </>\n    );\n\n    return pluginIsAvailable(item, visualization) ? (\n        <>\n            <Button small secondary onClick={handleMenuClick}>\n                <ThreeDots />\n            </Button>\n            {anchorEl && (\n                <Popover\n                    open={Boolean(anchorEl)}\n                    onClose={handleClose}\n                    anchorEl={anchorEl}\n                >\n                    <Menu>\n                        {canViewAs && (\n                            <>\n                                <ViewAsMenuItems />\n                                <Divider />\n                            </>\n                        )}\n                        <MenuItem\n                            dense\n                            icon={<LaunchIcon style={{ fill: '#6e7a8a' }} />}\n                            label={i18n.t('Open in {{appName}} app', {\n                                appName: getAppName(item.type),\n                            })}\n                            href={getLink(item, d2)}\n                            target=\"_blank\"\n                        />\n                        <MenuItem\n                            dense\n                            icon={<SpeechBubble />}\n                            label={interpretationMenuLabel}\n                            onClick={handleInterpretationClick}\n                        />\n                    </Menu>\n                </Popover>\n            )}\n        </>\n    ) : null;\n};\n\nItemHeaderButtons.propTypes = {\n    activeFooter: PropTypes.bool,\n    activeType: PropTypes.string,\n    d2: PropTypes.object,\n    item: PropTypes.object,\n    visualization: PropTypes.object,\n    onSelectActiveType: PropTypes.func,\n    onToggleFooter: PropTypes.func,\n};\n\nexport default ItemHeaderButtons;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { colors } from '@dhis2/ui-core';\nimport { getId } from './plugin';\nimport InterpretationsComponent from '@dhis2/d2-ui-interpretations';\n\nconst style = {\n    scrollContainer: {\n        overflowY: 'auto',\n        height: '340px',\n    },\n    line: {\n        margin: '-1px 0px 0px',\n        height: '1px',\n        border: 'none',\n        backgroundColor: colors.grey100,\n    },\n};\n\nclass ItemFooter extends Component {\n    render() {\n        const objectId = getId(this.props.item);\n\n        return (\n            <div className=\"dashboard-item-footer\">\n                <hr style={style.line} />\n                <div style={style.scrollContainer}>\n                    <InterpretationsComponent\n                        d2={this.context.d2}\n                        item={this.props.item}\n                        type={this.props.item.type.toLowerCase()}\n                        id={objectId}\n                        appName=\"dashboard\"\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nItemFooter.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nItemFooter.propTypes = {\n    item: PropTypes.object.isRequired,\n};\n\nexport default ItemFooter;\n","// Note that this ignores discrepancies in 'this', so shouldn't be used with bound functions\n// This is useful instead of lodash/memoize when we only need to memoize a single value\n// Inspiration: https://github.com/alexreardon/memoize-one\n\nconst memoizeOne = fn => {\n    let lastArgs = undefined;\n    let lastValue = undefined;\n\n    return (...args) => {\n        if (\n            lastArgs &&\n            args.length === lastArgs.length &&\n            args.every((arg, i) => arg === lastArgs[i])\n        ) {\n            return lastValue;\n        }\n        lastArgs = args;\n        lastValue = fn(...args);\n        return lastValue;\n    };\n};\n\nexport default memoizeOne;\n","import React from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport classes from './styles/LoadingMask.module.css';\n\nfunction CircularIndeterminate() {\n    return (\n        <div className={classes.outer}>\n            <CircularProgress className={classes.progress} />\n        </div>\n    );\n}\n\nexport default CircularIndeterminate;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport uniqueId from 'lodash/uniqueId';\nimport VisualizationPlugin from '@dhis2/data-visualizer-plugin';\nimport i18n from '@dhis2/d2-i18n';\n\nimport DefaultPlugin from './DefaultPlugin';\nimport FatalErrorBoundary from './FatalErrorBoundary';\nimport ItemHeader, { HEADER_MARGIN_HEIGHT } from '../ItemHeader';\nimport ItemHeaderButtons from './ItemHeaderButtons';\nimport ItemFooter from './ItemFooter';\nimport * as pluginManager from './plugin';\nimport { sGetVisualization } from '../../../reducers/visualizations';\nimport { sGetItemFiltersRoot } from '../../../reducers/itemFilters';\nimport {\n    acAddVisualization,\n    acSetActiveVisualizationType,\n} from '../../../actions/visualizations';\nimport {\n    VISUALIZATION,\n    MAP,\n    CHART,\n    REPORT_TABLE,\n} from '../../../modules/itemTypes';\nimport memoizeOne from '../../../modules/memoizeOne';\n\nimport { getVisualizationConfig } from './plugin';\nimport LoadingMask from './LoadingMask';\nimport { ITEM_CONTENT_PADDING_BOTTOM } from '../../ItemGrid/ItemGrid';\n\nimport classes from './styles/Item.module.css';\n\nexport class Item extends Component {\n    state = {\n        showFooter: false,\n        configLoaded: false,\n        pluginIsLoaded: false,\n    };\n\n    constructor(props, context) {\n        super(props);\n\n        this.d2 = context.d2;\n\n        this.contentRef = React.createRef();\n        this.headerRef = React.createRef();\n\n        this.memoizedApplyFilters = memoizeOne(this.applyFilters);\n\n        this.memoizedGetVisualizationConfig = memoizeOne(\n            getVisualizationConfig\n        );\n\n        this.memoizedGetContentStyle = memoizeOne(this.getContentStyle);\n    }\n\n    async componentDidMount() {\n        this.props.onVisualizationLoaded(\n            // TODO do not call fetch on the pluginManager, do it here as the manager will eventually be removed...\n            await pluginManager.fetch(this.props.item)\n        );\n\n        this.setState({\n            configLoaded: true,\n        });\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (\n            prevState.pluginIsLoaded &&\n            (prevProps.visualization !== this.props.visualization ||\n                prevProps.itemFilters !== this.props.itemFilters)\n        ) {\n            this.setState({\n                pluginIsLoaded: false,\n            });\n        }\n    }\n\n    applyFilters = (visualization, filters) => {\n        if (!Object.keys(filters).length) {\n            return visualization;\n        }\n\n        // deep clone objects in filters to avoid changing the visualization in the Redux store\n        const visRows = visualization.rows.map(obj => ({ ...obj }));\n        const visColumns = visualization.columns.map(obj => ({ ...obj }));\n        const visFilters = visualization.filters.map(obj => ({ ...obj }));\n\n        Object.keys(filters).forEach(dimensionId => {\n            if (filters[dimensionId]) {\n                let dimensionFound = false;\n\n                [visRows, visColumns, visFilters].forEach(dimensionObjects =>\n                    dimensionObjects\n                        .filter(obj => obj.dimension === dimensionId)\n                        .forEach(obj => {\n                            dimensionFound = true;\n                            obj.items = filters[dimensionId];\n                        })\n                );\n\n                // add dimension to filters if not already present elsewhere\n                if (!dimensionFound) {\n                    visFilters.push({\n                        dimension: dimensionId,\n                        items: filters[dimensionId],\n                    });\n                }\n            }\n        });\n\n        return {\n            ...visualization,\n            rows: visRows,\n            columns: visColumns,\n            filters: visFilters,\n        };\n    };\n\n    getUniqueKey = memoizeOne(() => uniqueId());\n\n    pluginCredentials = null;\n\n    getPluginComponent = () => {\n        const activeType = this.getActiveType();\n        const visualization = this.memoizedGetVisualizationConfig(\n            this.props.visualization,\n            this.props.item.type,\n            activeType\n        );\n\n        if (!visualization) {\n            return (\n                <div className={classes.textDiv}>\n                    {i18n.t('No data to display')}\n                </div>\n            );\n        }\n\n        const calculatedHeight =\n            this.props.item.originalHeight -\n            this.headerRef.current.clientHeight -\n            HEADER_MARGIN_HEIGHT -\n            ITEM_CONTENT_PADDING_BOTTOM;\n\n        const props = {\n            ...this.props,\n            visualization,\n            style: this.memoizedGetContentStyle(\n                calculatedHeight,\n                this.contentRef ? this.contentRef.offsetHeight : null,\n                this.props.editMode\n            ),\n        };\n\n        switch (activeType) {\n            case VISUALIZATION:\n            case CHART:\n            case REPORT_TABLE: {\n                return (\n                    <>\n                        {!this.state.pluginIsLoaded ? (\n                            <div className={classes.loadingCover}>\n                                <LoadingMask />\n                            </div>\n                        ) : null}\n                        <VisualizationPlugin\n                            d2={this.d2}\n                            visualization={this.memoizedApplyFilters(\n                                visualization,\n                                props.itemFilters\n                            )}\n                            onLoadingComplete={this.onLoadingComplete}\n                            forDashboard={true}\n                            style={props.style}\n                        />\n                    </>\n                );\n            }\n            case MAP: {\n                if (props.item.type === MAP) {\n                    // apply filters only to thematic and event layers\n                    // for maps AO\n                    const mapViews = props.visualization.mapViews.map(obj => {\n                        if (\n                            obj.layer.includes('thematic') ||\n                            obj.layer.includes('event')\n                        ) {\n                            return this.memoizedApplyFilters(\n                                obj,\n                                props.itemFilters\n                            );\n                        }\n\n                        return obj;\n                    });\n\n                    props.visualization = {\n                        ...props.visualization,\n                        mapViews,\n                    };\n                } else {\n                    // this is the case of a non map AO passed to the maps plugin\n                    // due to a visualization type switch in dashboard item\n                    // maps plugin takes care of converting the AO to a suitable format\n                    props.visualization = this.memoizedApplyFilters(\n                        props.visualization,\n                        props.itemFilters\n                    );\n                }\n\n                return <DefaultPlugin {...props} />;\n            }\n            default: {\n                props.visualization = this.memoizedApplyFilters(\n                    props.visualization,\n                    props.itemFilters\n                );\n\n                return <DefaultPlugin {...props} />;\n            }\n        }\n    };\n\n    onLoadingComplete = () => {\n        this.setState({\n            pluginIsLoaded: true,\n        });\n    };\n\n    onToggleFooter = () => {\n        this.setState(\n            { showFooter: !this.state.showFooter },\n            this.props.onToggleItemExpanded(this.props.item.id)\n        );\n    };\n\n    onSelectActiveType = type => {\n        if (type === this.getActiveType()) {\n            return;\n        }\n\n        pluginManager.unmount(this.props.item, this.getActiveType());\n\n        this.props.onSelectActiveType(this.props.visualization.id, type);\n    };\n\n    getActiveType = () =>\n        this.props.visualization.activeType || this.props.item.type;\n\n    pluginIsAvailable = () =>\n        pluginManager.pluginIsAvailable(\n            this.props.item,\n            this.props.visualization\n        );\n\n    getContentStyle = (calculatedHeight, measuredHeight, editMode) => {\n        const height = editMode\n            ? measuredHeight || calculatedHeight\n            : calculatedHeight;\n\n        return { height };\n    };\n\n    render() {\n        const { item, editMode, itemFilters } = this.props;\n        const { showFooter } = this.state;\n\n        const actionButtons = (\n            <ItemHeaderButtons\n                item={item}\n                visualization={this.props.visualization}\n                onSelectActiveType={this.onSelectActiveType}\n                onToggleFooter={this.onToggleFooter}\n                d2={this.d2}\n                activeType={this.getActiveType()}\n                activeFooter={this.state.showFooter}\n            />\n        );\n\n        return (\n            <>\n                <ItemHeader\n                    title={pluginManager.getName(item)}\n                    itemId={item.id}\n                    actionButtons={actionButtons}\n                    ref={this.headerRef}\n                />\n                <FatalErrorBoundary>\n                    <div\n                        key={this.getUniqueKey(itemFilters)}\n                        className=\"dashboard-item-content\"\n                        ref={ref => (this.contentRef = ref)}\n                    >\n                        {this.state.configLoaded && this.getPluginComponent()}\n                    </div>\n                </FatalErrorBoundary>\n                {!editMode && showFooter ? <ItemFooter item={item} /> : null}\n            </>\n        );\n    }\n}\n\nItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nItem.propTypes = {\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    itemFilters: PropTypes.object,\n    visualization: PropTypes.object,\n    onSelectActiveType: PropTypes.func,\n    onToggleItemExpanded: PropTypes.func,\n    onVisualizationLoaded: PropTypes.func,\n};\n\nItem.defaultProps = {\n    item: {},\n    editMode: false,\n    onToggleItemExpanded: Function.prototype,\n    itemFilters: {},\n    visualization: {},\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n    itemFilters: sGetItemFiltersRoot(state),\n    visualization: sGetVisualization(\n        state,\n        pluginManager.extractFavorite(ownProps.item).id\n    ),\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onVisualizationLoaded: visualization =>\n        dispatch(acAddVisualization(visualization)),\n    onSelectActiveType: (id, type, activeType) =>\n        dispatch(acSetActiveVisualizationType(id, type, activeType)),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Item);\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\n\nconst style = {\n    backgroundColor: colors.grey200,\n    border: 'none',\n    height: '1px',\n    margin: '0px 0px 5px 0px',\n};\n\nconst Line = () => <hr style={style} />;\n\nexport default Line;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\n\nimport { sGetMessagesRoot } from '../../../reducers/messages';\nimport { formatDate } from '../../../modules/util';\nimport { colors } from '@dhis2/ui-core';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nimport './MessagesItem.css';\n\nconst PRIVATE = 'PRIVATE';\n\nconst messageTypes = {\n    [PRIVATE]: 'Private',\n    VALIDATION_RESULT: 'Validation',\n    TICKET: 'Ticket',\n    SYSTEM: 'System',\n};\n\nconst style = {\n    list: {\n        listStyleType: 'none',\n        paddingLeft: '0px',\n    },\n    seeAll: {\n        textAlign: 'center',\n        fontSize: '13px',\n        marginBottom: '5px',\n    },\n    sender: {\n        fontSize: '13px',\n        lineHeight: '15px',\n        margin: 0,\n        color: colors.grey800,\n    },\n    snippet: {\n        color: colors.grey800,\n        fontSize: '13px',\n        lineHeight: '15px',\n        maxHeight: '30px',\n        overflow: 'hidden',\n    },\n};\n\nclass MessagesItem extends Component {\n    state = {\n        uiLocale: '',\n    };\n\n    async componentDidMount() {\n        const uiLocale = await this.context.d2.currentUser.userSettings.get(\n            'keyUiLocale'\n        );\n\n        this.setState({ uiLocale });\n    }\n\n    getMessageHref = msg => {\n        const msgIdentifier = msg ? `#/${msg.messageType}/${msg.id}` : '';\n        return `${this.context.baseUrl}/dhis-web-messaging/${msgIdentifier}`;\n    };\n\n    getMessageSender = msg => {\n        const latestMsg = msg.messages.slice(-1)[0];\n        return latestMsg.sender ? latestMsg.sender.displayName : '';\n    };\n\n    getMessageItems = () => {\n        const editClass = !this.props.editMode ? 'view' : null;\n\n        return this.props.messages.map(msg => {\n            const redirectToMsg = () => {\n                if (!this.props.editMode) {\n                    document.location.href = this.getMessageHref(msg);\n                }\n            };\n\n            const sender =\n                msg.messageType === PRIVATE\n                    ? this.getMessageSender(msg)\n                    : messageTypes[msg.messageType];\n\n            const readClass = !msg.read ? 'unread' : null;\n            const latestMsg = msg.messages.slice(-1)[0];\n            const msgDate = latestMsg.lastUpdated;\n\n            return (\n                <li\n                    className={`message-item ${editClass}`}\n                    key={msg.id}\n                    onClick={redirectToMsg}\n                >\n                    <p className={`message-title ${readClass}`}>\n                        {msg.displayName} ({msg.messageCount})\n                    </p>\n                    <p style={style.sender}>\n                        {sender} - {formatDate(msgDate, this.state.uiLocale)}\n                    </p>\n                    <p style={style.snippet}>{latestMsg.text}</p>\n                </li>\n            );\n        });\n    };\n\n    render() {\n        return (\n            <>\n                <ItemHeader\n                    title={i18n.t('Messages')}\n                    itemId={this.props.item.id}\n                />\n                <Line />\n                {this.props.messages.length > 0 && (\n                    <div className=\"dashboard-item-content\">\n                        <ul style={style.list}>{this.getMessageItems()}</ul>\n                        <div style={style.seeAll}>\n                            <a href={this.getMessageHref()}>\n                                {i18n.t('See all messages')}\n                            </a>\n                        </div>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nMessagesItem.propTypes = {\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    messages: PropTypes.array,\n};\n\nMessagesItem.contextTypes = {\n    d2: PropTypes.object,\n    baseUrl: PropTypes.string,\n};\n\nconst mapStateToProps = state => {\n    return {\n        messages: Object.values(sGetMessagesRoot(state)),\n    };\n};\n\nconst MessagesContainer = connect(\n    mapStateToProps,\n    null\n)(MessagesItem);\n\nexport default MessagesContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ItemHeader from '../ItemHeader';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nconst NotSupportedItem = props => (\n    <>\n        <ItemHeader\n            title={i18n.t('Item type \"{{type}}\" not supported', {\n                type: props.item.type,\n            })}\n            itemId={props.item.id}\n        />\n        <div\n            style={{\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center',\n                height: '90%',\n            }}\n        >\n            <NotInterestedIcon\n                style={{ width: 100, height: 100, align: 'center' }}\n                color=\"disabled\"\n            />\n        </div>\n    </>\n);\n\nNotSupportedItem.propTypes = {\n    item: PropTypes.object,\n};\n\nexport default NotSupportedItem;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nconst DescriptionIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n        fill={colors.grey500}\n    >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M14 2H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6zm2 16H8v-2h8v2zm0-4H8v-2h8v2zm-3-5V3.5L18.5 9H13z\" />\n    </svg>\n);\n\nDescriptionIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default DescriptionIcon;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nconst DeleteIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"18\"\n        height=\"18\"\n        viewBox=\"0 0 24 24\"\n        fill={colors.red500}\n    >\n        <path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>\n);\n\nDeleteIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default DeleteIcon;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { colors } from '@dhis2/ui-core';\nimport DescriptionIcon from '../../../icons/Description';\n\nimport DeleteIcon from '../../../icons/Delete';\nimport Line from '../../../widgets/Line';\nimport { itemTypeMap, getItemUrl } from '../../../modules/itemTypes';\nimport { orArray } from '../../../modules/util';\nimport { tRemoveListItemContent } from './actions';\nimport ItemHeader from '../ItemHeader';\nimport classes from './Item.module.css';\n\nconst getItemTitle = item => itemTypeMap[item.type].pluralTitle;\n\nconst getContentItems = item =>\n    orArray(item[itemTypeMap[item.type].propName]).filter(\n        (item, index, array) =>\n            array.findIndex(el => el.id === item.id) === index\n    );\n\nconst ListItem = (props, context) => {\n    const { item, editMode, tRemoveListItemContent } = props;\n    const contentItems = getContentItems(item);\n\n    const getLink = contentItem => {\n        const deleteButton = (\n            <button\n                className={classes.deletebutton}\n                onClick={() => tRemoveListItemContent(item, contentItem)}\n            >\n                <DeleteIcon className={classes.deleteicon} />\n            </button>\n        );\n\n        return (\n            <>\n                <a\n                    className={classes.link}\n                    style={{ color: colors.grey900 }}\n                    href={getItemUrl(item.type, contentItem, context.d2)}\n                >\n                    {contentItem.name}\n                </a>\n                {editMode ? deleteButton : null}\n            </>\n        );\n    };\n\n    return (\n        <>\n            <ItemHeader title={getItemTitle(item)} itemId={item.id} />\n            <Line />\n            <div className=\"dashboard-item-content\">\n                <ul className={classes.list}>\n                    {contentItems.map(contentItem => (\n                        <li className={classes.item} key={contentItem.id}>\n                            <DescriptionIcon className={classes.itemicon} />\n                            {getLink(contentItem)}\n                        </li>\n                    ))}\n                </ul>\n            </div>\n        </>\n    );\n};\n\nListItem.propTypes = {\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    tRemoveListItemContent: PropTypes.func,\n};\n\nListItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nexport default connect(\n    null,\n    {\n        tRemoveListItemContent,\n    }\n)(ListItem);\n","import {\n    acUpdateDashboardItem,\n    acRemoveDashboardItem,\n} from '../../../actions/editDashboard';\nimport { itemTypeMap } from '../../../modules/itemTypes';\n\nexport const tRemoveListItemContent = (dashboardItem, content) => dispatch => {\n    const listItemType = itemTypeMap[dashboardItem.type].propName;\n\n    const newContent = dashboardItem[listItemType].filter(\n        item => item.id !== content.id\n    );\n\n    if (newContent.length) {\n        dashboardItem[listItemType] = newContent;\n        dispatch(acUpdateDashboardItem(dashboardItem));\n    } else {\n        dispatch(acRemoveDashboardItem(dashboardItem));\n    }\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\n\nimport Input from '@material-ui/core/Input';\nimport {\n    Parser as RichTextParser,\n    Editor as RichTextEditor,\n} from '@dhis2/d2-ui-rich-text';\n\nimport { acUpdateDashboardItem } from '../../../actions/editDashboard';\nimport { sGetEditDashboardItems } from '../../../reducers/editDashboard';\nimport { sGetDashboardItems } from '../../../reducers/dashboards';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nconst style = {\n    textDiv: {\n        padding: '10px',\n        whiteSpace: 'pre-line',\n        lineHeight: '20px',\n    },\n    textField: {\n        fontSize: '14px',\n        fontStretch: 'normal',\n        width: '90%',\n        margin: '0 auto',\n        display: 'block',\n        lineHeight: '24px',\n    },\n    container: {\n        marginBottom: '20px',\n        marginTop: '20px',\n    },\n};\n\nconst TextItem = props => {\n    const { item, editMode, text, acUpdateDashboardItem } = props;\n\n    const onChangeText = event => {\n        const updatedItem = {\n            ...item,\n            text: event.target.value,\n        };\n\n        acUpdateDashboardItem(updatedItem);\n    };\n\n    const viewItem = () => {\n        const textDivStyle = Object.assign({}, style.textField, style.textDiv);\n        return (\n            <div className=\"dashboard-item-content\" style={style.container}>\n                <RichTextParser style={textDivStyle}>{text}</RichTextParser>\n            </div>\n        );\n    };\n\n    const editItem = () => {\n        return (\n            <>\n                <ItemHeader title={i18n.t('Text item')} itemId={item.id} />\n                <Line />\n                <div className=\"dashboard-item-content\">\n                    <RichTextEditor onEdit={onChangeText}>\n                        <Input\n                            value={text}\n                            multiline\n                            fullWidth\n                            style={style.textField}\n                            placeholder={i18n.t('Add text here')}\n                            onChange={onChangeText}\n                        />\n                    </RichTextEditor>\n                </div>\n            </>\n        );\n    };\n\n    return <>{editMode ? editItem() : viewItem()}</>;\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    const items = ownProps.editMode\n        ? sGetEditDashboardItems(state)\n        : sGetDashboardItems(state);\n\n    const item = items.find(item => item.id === ownProps.item.id);\n\n    return {\n        text: item ? item.text : '',\n    };\n};\n\nTextItem.propTypes = {\n    acUpdateDashboardItem: PropTypes.func,\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    text: PropTypes.string,\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        acUpdateDashboardItem,\n    }\n)(TextItem);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nimport { FILTER_ORG_UNIT } from '../../../actions/itemFilters';\nimport { sGetItemFiltersRoot } from '../../../reducers/itemFilters';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nconst getIframeSrc = (appDetails, item, itemFilters) => {\n    let iframeSrc = `${appDetails.launchUrl}?dashboardItemId=${item.id}`;\n\n    if (\n        itemFilters &&\n        itemFilters[FILTER_ORG_UNIT] &&\n        itemFilters[FILTER_ORG_UNIT].length\n    ) {\n        const ouIds = itemFilters[FILTER_ORG_UNIT].map(\n            ouPath => ouPath.split('/').slice(-1)[0]\n        );\n\n        iframeSrc += `&userOrgUnit=${ouIds.join(',')}`;\n    }\n\n    return iframeSrc;\n};\n\nconst AppItem = ({ item, itemFilters }, context) => {\n    let appDetails;\n\n    const appKey = item.appKey;\n\n    if (appKey) {\n        appDetails = context.d2.system.installedApps.find(\n            app => app.key === appKey\n        );\n    }\n\n    return appDetails && appDetails.name && appDetails.launchUrl ? (\n        <>\n            <ItemHeader title={appDetails.name} itemId={item.id} />\n            <Line />\n            <iframe\n                title={appDetails.name}\n                src={getIframeSrc(appDetails, item, itemFilters)}\n                className=\"dashboard-item-content\"\n                style={{ border: 'none' }}\n            />\n        </>\n    ) : (\n        <>\n            <ItemHeader title={`${appKey} app not found`} />\n            <Line />\n            <div\n                className=\"dashboard-item-content\"\n                style={{\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    height: '90%',\n                }}\n            >\n                <NotInterestedIcon\n                    color=\"disabled\"\n                    disabled\n                    style={{ width: 100, height: 100, align: 'center' }}\n                />\n            </div>\n        </>\n    );\n};\n\nAppItem.propTypes = {\n    item: PropTypes.object,\n    itemFilters: PropTypes.object,\n};\n\nAppItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nconst mapStateToProps = state => ({\n    itemFilters: sGetItemFiltersRoot(state),\n});\n\nexport default connect(mapStateToProps)(AppItem);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\n\nimport { colors } from '@dhis2/ui-core';\nimport ItemHeader from '../ItemHeader';\n\nconst style = {\n    margin: '21px 28px',\n    fontSize: '14px',\n    lineHeight: '18px',\n    color: colors.grey600,\n};\n\nconst SpacerItem = props => {\n    return (\n        <>\n            <ItemHeader title={i18n.t('Spacer')} itemId={props.item.id} />\n            <p style={style}>\n                {i18n.t(\n                    'Use a spacer to create empty vertical space between other dashboard items.'\n                )}\n            </p>\n        </>\n    );\n};\n\nSpacerItem.propTypes = {\n    item: PropTypes.object,\n};\n\nexport default SpacerItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport VisualizationItem from './VisualizationItem/Item';\nimport MessagesItem from './MessagesItem/Item';\nimport NotSupportedItem from './NotSupportedItem/Item';\nimport ListItem from './ListItem/Item';\nimport TextItem from './TextItem/Item';\nimport AppItem from './AppItem/Item';\nimport SpacerItem from './SpacerItem/Item';\nimport {\n    APP,\n    VISUALIZATION,\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_CHART,\n    EVENT_REPORT,\n    MESSAGES,\n    REPORTS,\n    RESOURCES,\n    USERS,\n    TEXT,\n    SPACER,\n} from '../../modules/itemTypes';\nimport { DEFAULT_STATE_ITEM_FILTERS } from '../../reducers/itemFilters';\n\nconst getGridItem = type => {\n    switch (type) {\n        case VISUALIZATION:\n        case REPORT_TABLE:\n        case CHART:\n        case MAP:\n        case EVENT_CHART:\n        case EVENT_REPORT:\n            return VisualizationItem;\n        case MESSAGES:\n            return MessagesItem;\n        case REPORTS:\n        case RESOURCES:\n        case USERS:\n            return ListItem;\n        case TEXT:\n            return TextItem;\n        case SPACER:\n            return SpacerItem;\n        case APP:\n            return AppItem;\n        default:\n            return NotSupportedItem;\n    }\n};\n\nexport const Item = props => {\n    const GridItem = getGridItem(props.item.type);\n\n    return (\n        <GridItem\n            item={props.item}\n            editMode={props.editMode}\n            itemFilters={\n                props.editMode ? DEFAULT_STATE_ITEM_FILTERS : props.itemFilters\n            }\n            onToggleItemExpanded={props.onToggleItemExpanded}\n        />\n    );\n};\n\nItem.propTypes = {\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    itemFilters: PropTypes.object,\n    onToggleItemExpanded: PropTypes.func,\n};\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nexport const NoContentMessage = ({ text }) => (\n    <div\n        style={{\n            padding: '50px 10px',\n            textAlign: 'center',\n            fontSize: '15px',\n            fontWeight: 500,\n            color: colors.grey600,\n        }}\n    >\n        {text}\n    </div>\n);\n\nNoContentMessage.propTypes = {\n    text: PropTypes.string,\n};\n\nexport default NoContentMessage;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash/debounce';\nimport pick from 'lodash/pick';\n\nconst defaultDebounceMs = 100;\nconst defaultBufferFactor = 0.25;\n\nclass ProgressiveLoadingContainer extends Component {\n    static propTypes = {\n        children: PropTypes.node.isRequired,\n        bufferFactor: PropTypes.number,\n        className: PropTypes.string,\n        debounceMs: PropTypes.number,\n        style: PropTypes.object,\n    };\n    static defaultProps = {\n        debounceMs: defaultDebounceMs,\n        bufferFactor: defaultBufferFactor,\n    };\n\n    state = {\n        shouldLoad: false,\n    };\n    containerRef = null;\n    shouldLoadHandler = null;\n\n    checkShouldLoad() {\n        const bufferPx = this.props.bufferFactor * window.innerHeight;\n\n        if (!this.containerRef) {\n            return;\n        }\n\n        const rect = this.containerRef.getBoundingClientRect();\n        if (\n            rect.bottom > -bufferPx &&\n            rect.top < window.innerHeight + bufferPx\n        ) {\n            this.setState({\n                shouldLoad: true,\n            });\n\n            this.removeHandler();\n        }\n    }\n\n    registerHandler() {\n        this.shouldLoadHandler = debounce(\n            () => this.checkShouldLoad(),\n            this.props.debounceMs\n        );\n\n        window.addEventListener('scroll', this.shouldLoadHandler);\n    }\n    removeHandler() {\n        window.removeEventListener('scroll', this.shouldLoadHandler);\n    }\n\n    componentDidMount() {\n        this.registerHandler();\n        this.checkShouldLoad();\n    }\n\n    componentWillUnmount() {\n        this.removeHandler();\n    }\n\n    render() {\n        const { children, className, style, ...props } = this.props;\n        const { shouldLoad } = this.state;\n\n        const eventProps = pick(props, [\n            'onMouseDown',\n            'onTouchStart',\n            'onMouseUp',\n            'onTouchEnd',\n        ]);\n\n        return (\n            <div\n                ref={ref => (this.containerRef = ref)}\n                style={style}\n                className={className}\n                {...eventProps}\n            >\n                {shouldLoad && children}\n            </div>\n        );\n    }\n}\n\nexport default ProgressiveLoadingContainer;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport memoize from 'lodash/memoize';\nimport i18n from '@dhis2/d2-i18n';\nimport ReactGridLayout from 'react-grid-layout';\nimport { CircularLoader, ScreenCover } from '@dhis2/ui-core';\n\nimport {\n    acUpdateDashboardLayout,\n    acRemoveDashboardItem,\n} from '../../actions/editDashboard';\nimport { Item } from '../Item/Item';\nimport { resize as pluginResize } from '../Item/VisualizationItem/plugin';\nimport { isVisualizationType } from '../../modules/itemTypes';\nimport {\n    GRID_ROW_HEIGHT,\n    GRID_COMPACT_TYPE,\n    ITEM_MIN_HEIGHT,\n    MARGIN,\n    getGridColumns,\n    hasShape,\n    onItemResize,\n} from './gridUtil';\nimport { orArray } from '../../modules/util';\n\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\n\nimport './ItemGrid.css';\nimport { sGetSelectedId, sGetSelectedIsLoading } from '../../reducers/selected';\nimport {\n    sGetEditDashboardRoot,\n    sGetEditDashboardItems,\n} from '../../reducers/editDashboard';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n} from '../../reducers/dashboards';\nimport ProgressiveLoadingContainer from '../Item/ProgressiveLoadingContainer';\n\n// Component\n\nconst EXPANDED_HEIGHT = 17;\n// this is set in the .dashboard-item-content css\nexport const ITEM_CONTENT_PADDING_BOTTOM = 4;\n\nexport class ItemGrid extends Component {\n    state = {\n        expandedItems: {},\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.getMemoizedItem = memoize(this.getItem);\n    }\n\n    onToggleItemExpanded = clickedId => {\n        const isExpanded =\n            typeof this.state.expandedItems[clickedId] === 'boolean'\n                ? this.state.expandedItems[clickedId]\n                : false;\n\n        const expandedItems = { ...this.state.expandedItems };\n        expandedItems[clickedId] = !isExpanded;\n        this.setState({ expandedItems });\n    };\n\n    onRemoveItem = clickedId => {\n        this.props.acRemoveDashboardItem(clickedId);\n    };\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.edit) {\n            this.setState({ expandedItems: {} });\n        }\n    }\n\n    onLayoutChange = newLayout => {\n        if (this.props.edit) {\n            this.props.acUpdateDashboardLayout(newLayout);\n        }\n    };\n\n    onResizeStop = (layout, oldItem, newItem) => {\n        onItemResize(newItem.i);\n\n        const dashboardItem = this.props.dashboardItems.find(\n            item => item.id === newItem.i\n        );\n\n        // call resize on the item component if it's a plugin type\n        if (dashboardItem && isVisualizationType(dashboardItem)) {\n            pluginResize(dashboardItem);\n        }\n    };\n\n    onRemoveItemWrapper = id => () => this.onRemoveItem(id);\n\n    getItem = dashboardItem => {\n        const expandedItem = this.state.expandedItems[dashboardItem.id];\n        const hProp = { h: dashboardItem.h };\n\n        if (expandedItem && expandedItem === true) {\n            hProp.h = dashboardItem.h + EXPANDED_HEIGHT;\n        }\n\n        return Object.assign({}, dashboardItem, hProp, {\n            i: dashboardItem.id,\n            minH: ITEM_MIN_HEIGHT,\n            randomNumber: Math.random(),\n        });\n    };\n\n    getItems = dashboardItems =>\n        dashboardItems.map(item => this.getMemoizedItem(item));\n\n    getItemComponent = item => {\n        const itemClassNames = [\n            item.type,\n            this.props.edit ? 'edit' : 'view',\n        ].join(' ');\n\n        return (\n            <ProgressiveLoadingContainer\n                key={item.i}\n                className={itemClassNames}\n            >\n                <Item\n                    item={item}\n                    editMode={this.props.edit}\n                    onToggleItemExpanded={this.onToggleItemExpanded}\n                />\n            </ProgressiveLoadingContainer>\n        );\n    };\n\n    getItemComponents = items => items.map(item => this.getItemComponent(item));\n\n    render() {\n        const { edit, isLoading, dashboardItems } = this.props;\n\n        if (!isLoading && !dashboardItems.length) {\n            return (\n                <NoContentMessage\n                    text={i18n.t('There are no items on this dashboard')}\n                />\n            );\n        }\n\n        const items = edit\n            ? this.getItems(dashboardItems)\n            : dashboardItems.map(this.getItem);\n\n        return (\n            <div className=\"grid-wrapper\">\n                {isLoading ? (\n                    <ScreenCover>\n                        <CircularLoader />\n                    </ScreenCover>\n                ) : null}\n                <ReactGridLayout\n                    onLayoutChange={this.onLayoutChange}\n                    onResizeStop={this.onResizeStop}\n                    className=\"layout\"\n                    layout={items}\n                    margin={MARGIN}\n                    cols={getGridColumns()}\n                    rowHeight={GRID_ROW_HEIGHT}\n                    width={window.innerWidth}\n                    compactType={GRID_COMPACT_TYPE}\n                    isDraggable={edit}\n                    isResizable={edit}\n                    draggableCancel=\"input,textarea\"\n                >\n                    {this.getItemComponents(items)}\n                </ReactGridLayout>\n            </div>\n        );\n    }\n}\n\nItemGrid.propTypes = {\n    acRemoveDashboardItem: PropTypes.func,\n    acUpdateDashboardLayout: PropTypes.func,\n    dashboardItems: PropTypes.array,\n    edit: PropTypes.bool,\n    isLoading: PropTypes.bool,\n};\n\nItemGrid.defaultProps = {\n    dashboardItems: [],\n};\n\n// Container\n\nconst mapStateToProps = (state, ownProps) => {\n    const selectedDashboard = ownProps.edit\n        ? sGetEditDashboardRoot(state)\n        : sGetDashboardById(state, sGetSelectedId(state));\n\n    const dashboardItems = ownProps.edit\n        ? sGetEditDashboardItems(state)\n        : sGetDashboardItems(state);\n\n    return {\n        isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n        dashboardItems,\n    };\n};\n\nconst mapDispatchToProps = {\n    acUpdateDashboardLayout,\n    acRemoveDashboardItem,\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const validItems = orArray(stateProps.dashboardItems).filter(hasShape);\n\n    return {\n        ...dispatchProps,\n        edit: ownProps.edit,\n        isLoading: stateProps.isLoading,\n        dashboardItems: validItems,\n        onItemResize,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n    mergeProps\n)(ItemGrid);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport i18n from '@dhis2/d2-i18n';\n\nimport { colors } from '@dhis2/ui-core';\n\nconst styles = {\n    badgeContainer: {\n        margin: '2px',\n        padding: '0 16px',\n        borderRadius: '4px',\n        color: colors.white,\n        backgroundColor: '#212934',\n        height: 36,\n        display: 'flex',\n        alignItems: 'center',\n    },\n    badge: {\n        fontSize: '13px',\n        cursor: 'pointer',\n        whiteSpace: 'nowrap',\n    },\n    badgeRemove: {\n        fontSize: '12px',\n        textDecoration: 'underline',\n        marginLeft: '24px',\n        cursor: 'pointer',\n    },\n};\n\nclass FilterBadge extends Component {\n    onClick = id => () => this.props.onClick(id);\n    onRemove = id => () => this.props.onRemove(id);\n\n    render() {\n        const { data } = this.props;\n\n        return (\n            <div style={styles.badgeContainer}>\n                <span style={styles.badge} onClick={this.onClick(data.id)}>\n                    {`${data.name}: ${\n                        data.values.length > 1\n                            ? i18n.t('{{count}} selected', {\n                                  count: data.values.length,\n                              })\n                            : data.values[0].name\n                    }`}\n                </span>\n                <span\n                    style={styles.badgeRemove}\n                    onClick={this.onRemove(data.id)}\n                >\n                    {i18n.t('Remove')}\n                </span>\n            </div>\n        );\n    }\n}\n\nFilterBadge.propTypes = {\n    data: PropTypes.object.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onRemove: PropTypes.func.isRequired,\n};\n\nFilterBadge.defaultProps = {\n    onClick: Function.prototype,\n    onRemove: Function.prototype,\n};\n\nexport default FilterBadge;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { createSelector } from 'reselect';\n\nimport { sGetDimensions } from '../../reducers/dimensions';\nimport { sGetItemFiltersRoot } from '../../reducers/itemFilters';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { getTopOffset } from '../ControlBar/controlBarDimensions';\nimport { acRemoveItemFilter } from '../../actions/itemFilters';\nimport { acRemoveEditItemFilter } from '../../actions/editItemFilters';\nimport { acSetActiveModalDimension } from '../../actions/activeModalDimension';\n\nimport FilterBadge from './FilterBadge';\n\nimport classes from './styles/FilterBar.module.css';\n\nexport class FilterBar extends Component {\n    onBadgeRemove = id => {\n        this.props.removeItemFilter(id);\n        this.props.removeEditItemFilter(id);\n    };\n\n    onBadgeClick = id => {\n        this.props.setActiveModalDimension({\n            id,\n            name: this.props.filters.find(item => item.id === id).name,\n        });\n    };\n\n    render() {\n        const { filters, userRows } = this.props;\n        const top = getTopOffset(userRows) + 10;\n\n        return filters.length ? (\n            <div className={classes.bar} style={{ top }}>\n                {filters.map(filter => (\n                    <FilterBadge\n                        key={filter.id}\n                        data={filter}\n                        onClick={this.onBadgeClick}\n                        onRemove={this.onBadgeRemove}\n                    />\n                ))}\n            </div>\n        ) : null;\n    }\n}\n\nFilterBar.propTypes = {\n    filters: PropTypes.array.isRequired,\n    removeEditItemFilter: PropTypes.func.isRequired,\n    removeItemFilter: PropTypes.func.isRequired,\n    setActiveModalDimension: PropTypes.func,\n    userRows: PropTypes.number,\n};\n\nFilterBar.defaultProps = {\n    filters: [],\n    removeItemFIlter: Function.prototype,\n    removeEditItemFilter: Function.prototype,\n};\n\n// simplify the filters structure to:\n// [{ id: 'pe', name: 'Period', values: [{ id: 2019: name: '2019' }, {id: 'LAST_MONTH', name: 'Last month' }]}, ...]\nconst filtersSelector = createSelector(\n    [sGetItemFiltersRoot, sGetDimensions],\n    (filters, dimensions) =>\n        Object.keys(filters).reduce((arr, id) => {\n            arr.push({\n                id: id,\n                name: dimensions.find(dimension => dimension.id === id).name,\n                values: filters[id].map(value => ({\n                    id: value.id,\n                    name: value.displayName || value.name,\n                })),\n            });\n\n            return arr;\n        }, [])\n);\n\nconst mapStateToProps = state => ({\n    filters: filtersSelector(state),\n    userRows: sGetControlBarUserRows(state),\n});\n\nexport default connect(\n    mapStateToProps,\n    {\n        setActiveModalDimension: acSetActiveModalDimension,\n        removeItemFilter: acRemoveItemFilter,\n        removeEditItemFilter: acRemoveEditItemFilter,\n    }\n)(FilterBar);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TitleBar from '../TitleBar/TitleBar';\nimport ItemGrid from '../ItemGrid/ItemGrid';\nimport FilterBar from '../FilterBar/FilterBar';\n\nexport const DashboardContent = props => (\n    <>\n        <TitleBar edit={props.editMode} />\n        <FilterBar />\n        <ItemGrid edit={props.editMode} />\n    </>\n);\n\nDashboardContent.propTypes = {\n    editMode: PropTypes.bool,\n};\n\nexport default DashboardContent;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport isEmpty from 'lodash/isEmpty';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\n\nimport {\n    sGetAllDashboards,\n    sDashboardsIsFetching,\n} from '../../reducers/dashboards';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport DashboardsBar from '../ControlBar/DashboardsBar';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport DashboardContent from './DashboardContent';\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nexport const Content = ({ hasDashboardContent, dashboardsIsEmpty }) => {\n    const msg = dashboardsIsEmpty\n        ? i18n.t(\n              'No dashboards found. Use the + button to create a new dashboard.'\n          )\n        : i18n.t('Requested dashboard not found');\n\n    return hasDashboardContent ? (\n        <DashboardContent editMode={false} />\n    ) : (\n        <NoContentMessage text={msg} />\n    );\n};\n\nContent.propTypes = {\n    dashboardsIsEmpty: PropTypes.bool,\n    hasDashboardContent: PropTypes.bool,\n};\n\nexport const ViewDashboard = ({ id, dashboardsIsEmpty, dashboardsLoaded }) => {\n    const hasDashboardContent = id && !dashboardsIsEmpty;\n    const contentNotReady = !dashboardsLoaded || id === null;\n\n    return (\n        <>\n            <DashboardsBar />\n            <DashboardVerticalOffset />\n            <div className=\"dashboard-wrapper\">\n                {contentNotReady ? null : (\n                    <Content\n                        hasDashboardContent={hasDashboardContent}\n                        dashboardsIsEmpty={dashboardsIsEmpty}\n                    />\n                )}\n            </div>\n        </>\n    );\n};\n\nViewDashboard.propTypes = {\n    dashboardsIsEmpty: PropTypes.bool,\n    dashboardsLoaded: PropTypes.bool,\n    id: PropTypes.string,\n};\n\nconst mapStateToProps = state => {\n    const dashboards = sGetAllDashboards(state);\n\n    return {\n        id: sGetSelectedId(state),\n        dashboardsIsEmpty: isEmpty(dashboards),\n        dashboardsLoaded: !sDashboardsIsFetching(state),\n    };\n};\n\nexport default connect(mapStateToProps)(ViewDashboard);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport { Button } from '@dhis2/ui-core';\n\nexport const ConfirmDeleteDialog = ({\n    dashboardName,\n    onDeleteConfirmed,\n    onContinueEditing,\n    open,\n}) => {\n    const actions = [\n        <Button key=\"cancel\" secondary onClick={onContinueEditing}>\n            {i18n.t('Cancel')}\n        </Button>,\n        <Button key=\"delete\" destructive onClick={onDeleteConfirmed}>\n            {i18n.t('Delete')}\n        </Button>,\n    ];\n\n    return (\n        <Dialog open={open} onClose={onContinueEditing}>\n            <DialogTitle style={{ fontSize: '1.25rem', fontWeight: '450' }}>\n                {i18n.t('Delete dashboard')}\n            </DialogTitle>\n            <DialogContent>\n                <DialogContentText style={{ fontSize: '0.875rem' }}>\n                    {i18n.t(\n                        'Deleting dashboard \"{{ dashboardName }}\" will remove it for all users. This action cannot be undone. Are you sure you want to permanently delete this dashboard?',\n                        { dashboardName }\n                    )}\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>{actions}</DialogActions>\n        </Dialog>\n    );\n};\n\nConfirmDeleteDialog.propTypes = {\n    dashboardName: PropTypes.string,\n    open: PropTypes.bool,\n    onContinueEditing: PropTypes.func,\n    onDeleteConfirmed: PropTypes.func,\n};\n\nexport default ConfirmDeleteDialog;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport ControlBar from './ControlBar';\nimport TranslationDialog from '@dhis2/d2-ui-translation-dialog';\nimport { Button } from '@dhis2/ui-core';\n\nimport ConfirmDeleteDialog from './ConfirmDeleteDialog';\nimport {\n    tSaveDashboard,\n    acClearEditDashboard,\n} from '../../actions/editDashboard';\nimport {\n    tDeleteDashboard,\n    acSetDashboardDisplayName,\n} from '../../actions/dashboards';\nimport {\n    sGetEditDashboardRoot,\n    sGetIsNewDashboard,\n} from '../../reducers/editDashboard';\nimport {\n    CONTROL_BAR_ROW_HEIGHT,\n    MIN_ROW_COUNT,\n    getControlBarHeight,\n} from './controlBarDimensions';\nimport { apiFetchDashboard } from '../../api/dashboards';\n\nimport classes from './styles/DashboardsBar.module.css';\n\nconst buttonBarStyle = {\n    height: CONTROL_BAR_ROW_HEIGHT,\n    paddingTop: '15px',\n    marginLeft: '15px',\n    marginRight: '15px',\n};\n\nexport class EditBar extends Component {\n    state = {\n        translationDialogIsOpen: false,\n        dashboardModel: undefined,\n        confirmDeleteDialogOpen: false,\n        redirectUrl: undefined,\n    };\n\n    onConfirmDelete = () => {\n        this.setState({ confirmDeleteDialogOpen: true });\n    };\n\n    onSave = () => {\n        this.props.onSave().then(newId => {\n            this.setState({ redirectUrl: `/${newId}` });\n        });\n    };\n\n    onDiscard = () => {\n        this.props.onDiscardChanges();\n        const redirectUrl = this.props.dashboardId\n            ? `/${this.props.dashboardId}`\n            : '/';\n        this.setState({ redirectUrl });\n    };\n\n    onContinueEditing = () => {\n        this.setState({ confirmDeleteDialogOpen: false });\n    };\n\n    onDeleteConfirmed = () => {\n        this.setState({ confirmDeleteDialogOpen: false });\n        this.props.onDelete(this.props.dashboardId).then(() => {\n            this.setState({ redirectUrl: '/' });\n        });\n    };\n\n    onTranslationsSaved = async translations => {\n        if (translations && translations.length) {\n            const dbLocale = await this.context.d2.currentUser.userSettings.get(\n                'keyDbLocale'\n            );\n\n            const translation = translations.find(\n                t => t.locale === dbLocale && t.property === 'NAME'\n            );\n\n            if (translation && translation.value) {\n                this.props.onTranslate(\n                    this.props.dashboardId,\n                    translation.value\n                );\n            }\n        }\n    };\n\n    fetchDashboardModel = () => {\n        if (this.props.dashboardId && !this.state.dashboardModel) {\n            apiFetchDashboard(this.props.dashboardId).then(dashboardModel =>\n                this.setState({ dashboardModel })\n            );\n        }\n    };\n\n    componentDidMount() {\n        this.fetchDashboardModel();\n    }\n\n    componentDidUpdate() {\n        this.fetchDashboardModel();\n    }\n\n    toggleTranslationDialog = () => {\n        this.setState({\n            translationDialogIsOpen: !this.state.translationDialogIsOpen,\n        });\n    };\n\n    confirmDeleteDialog = () =>\n        this.props.deleteAccess && this.props.dashboardId ? (\n            <ConfirmDeleteDialog\n                dashboardName={this.props.dashboardName}\n                onDeleteConfirmed={this.onDeleteConfirmed}\n                onContinueEditing={this.onContinueEditing}\n                open={this.state.confirmDeleteDialogOpen}\n            />\n        ) : null;\n\n    translationDialog = () =>\n        this.state.dashboardModel && this.state.dashboardModel.id ? (\n            <TranslationDialog\n                className=\"translation-dialog\"\n                d2={this.context.d2}\n                open={this.state.translationDialogIsOpen}\n                onRequestClose={this.toggleTranslationDialog}\n                objectToTranslate={this.state.dashboardModel}\n                fieldsToTranslate={['name', 'description']}\n                // TODO handle messages in snackbar\n                onTranslationSaved={this.onTranslationsSaved}\n                onTranslationError={err =>\n                    console.log('translation update error', err)\n                }\n            />\n        ) : null;\n\n    render() {\n        if (this.state.redirectUrl) {\n            return <Redirect to={this.state.redirectUrl} />;\n        }\n\n        const { dashboardId, deleteAccess, updateAccess } = this.props;\n        const controlBarHeight = getControlBarHeight(MIN_ROW_COUNT);\n\n        const discardBtnText = updateAccess\n            ? i18n.t('Exit without saving')\n            : i18n.t('Go to dashboards');\n\n        return (\n            <>\n                <ControlBar height={controlBarHeight} editMode={true}>\n                    <div style={buttonBarStyle}>\n                        {updateAccess ? (\n                            <div className={classes.leftControls}>\n                                <span style={{ marginRight: '15px' }}>\n                                    <Button primary onClick={this.onSave}>\n                                        {i18n.t('Save changes')}\n                                    </Button>\n                                </span>\n\n                                {dashboardId ? (\n                                    <span style={{ marginRight: '15px' }}>\n                                        <Button\n                                            onClick={\n                                                this.toggleTranslationDialog\n                                            }\n                                        >\n                                            {i18n.t('Translate')}\n                                        </Button>\n                                    </span>\n                                ) : null}\n                                {dashboardId && deleteAccess ? (\n                                    <Button onClick={this.onConfirmDelete}>\n                                        {i18n.t('Delete')}\n                                    </Button>\n                                ) : null}\n                            </div>\n                        ) : null}\n\n                        <div className={classes.rightControls}>\n                            <Button secondary onClick={this.onDiscard}>\n                                {discardBtnText}\n                            </Button>\n                        </div>\n                    </div>\n                </ControlBar>\n                {this.translationDialog()}\n                {this.confirmDeleteDialog()}\n            </>\n        );\n    }\n}\n\nEditBar.propTypes = {\n    dashboardId: PropTypes.string,\n    dashboardName: PropTypes.string,\n    deleteAccess: PropTypes.bool,\n    updateAccess: PropTypes.bool,\n    onDelete: PropTypes.func,\n    onDiscardChanges: PropTypes.func,\n    onSave: PropTypes.func,\n    onTranslate: PropTypes.func,\n};\n\nEditBar.contextTypes = {\n    d2: PropTypes.object,\n};\n\nconst mapStateToProps = state => {\n    const dashboard = sGetEditDashboardRoot(state);\n\n    let deleteAccess;\n    let updateAccess;\n    if (sGetIsNewDashboard(state)) {\n        deleteAccess = true;\n        updateAccess = true;\n    } else {\n        updateAccess = dashboard.access ? dashboard.access.update : false;\n        deleteAccess = dashboard.access ? dashboard.access.delete : false;\n    }\n\n    return {\n        dashboardId: dashboard.id,\n        dashboardName: dashboard.name,\n        deleteAccess,\n        updateAccess,\n    };\n};\n\nconst mapDispatchToProps = dispatch => ({\n    onSave: () => dispatch(tSaveDashboard()).then(id => id),\n    onDelete: id => dispatch(tDeleteDashboard(id)),\n    onDiscardChanges: () => dispatch(acClearEditDashboard()),\n    onTranslate: (id, value) => dispatch(acSetDashboardDisplayName(id, value)),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(EditBar);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\n\nimport { acSetEditDashboard } from '../../actions/editDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n    sDashboardsIsFetching,\n} from '../../reducers/dashboards';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport DashboardContent from './DashboardContent';\nimport EditBar from '../ControlBar/EditBar';\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nexport const Content = ({ updateAccess }) => {\n    return updateAccess ? (\n        <DashboardContent editMode={true} />\n    ) : (\n        <NoContentMessage text={i18n.t('No access')} />\n    );\n};\n\nContent.propTypes = {\n    updateAccess: PropTypes.bool,\n};\nexport class EditDashboard extends Component {\n    state = {\n        initialized: false,\n    };\n\n    initEditDashboard = () => {\n        if (this.props.dashboard) {\n            this.setState({ initialized: true });\n            this.props.setEditDashboard(this.props.dashboard, this.props.items);\n        }\n    };\n\n    componentDidMount() {\n        this.initEditDashboard();\n    }\n\n    componentDidUpdate() {\n        if (!this.state.initialized) {\n            this.initEditDashboard();\n        }\n    }\n\n    getDashboardContent = () => {\n        const contentNotReady =\n            !this.props.dashboardsLoaded || this.props.id === null;\n\n        return (\n            <div className=\"dashboard-wrapper\">\n                {contentNotReady ? null : (\n                    <Content updateAccess={this.props.updateAccess} />\n                )}\n            </div>\n        );\n    };\n\n    render() {\n        return (\n            <>\n                <EditBar />\n                <DashboardVerticalOffset editMode={true} />\n                {this.getDashboardContent()}\n            </>\n        );\n    }\n}\n\nEditDashboard.propTypes = {\n    dashboard: PropTypes.object,\n    dashboardsLoaded: PropTypes.bool,\n    id: PropTypes.string,\n    items: PropTypes.array,\n    setEditDashboard: PropTypes.func,\n    updateAccess: PropTypes.bool,\n};\n\nconst mapStateToProps = state => {\n    const id = sGetSelectedId(state);\n    const dashboard = id ? sGetDashboardById(state, id) : null;\n\n    const updateAccess =\n        dashboard && dashboard.access ? dashboard.access.update : false;\n\n    return {\n        dashboard,\n        id,\n        updateAccess,\n        items: sGetDashboardItems(state),\n        dashboardsLoaded: !sDashboardsIsFetching(state),\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        setEditDashboard: acSetEditDashboard,\n    }\n)(EditDashboard);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { acSetEditNewDashboard } from '../../actions/editDashboard';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport EditBar from '../ControlBar/EditBar';\nimport DashboardContent from './DashboardContent';\n\nclass NewDashboard extends Component {\n    componentDidMount() {\n        this.props.setNewDashboard();\n    }\n\n    render() {\n        return (\n            <>\n                <EditBar />\n                <DashboardVerticalOffset editMode={true} />\n                <div className=\"dashboard-wrapper\">\n                    <DashboardContent editMode={true} />\n                </div>\n            </>\n        );\n    }\n}\n\nNewDashboard.propTypes = {\n    setNewDashboard: PropTypes.func,\n};\n\nexport default connect(\n    null,\n    {\n        setNewDashboard: acSetEditNewDashboard,\n    }\n)(NewDashboard);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { tSelectDashboard } from '../../actions/dashboards';\nimport { sDashboardsIsFetching } from '../../reducers/dashboards';\nimport { EDIT, NEW } from './dashboardModes';\nimport ViewDashboard from './ViewDashboard';\nimport EditDashboard from './EditDashboard';\nimport NewDashboard from './NewDashboard';\n\nclass Dashboard extends Component {\n    setDashboard = () => {\n        if (this.props.dashboardsLoaded) {\n            const id = this.props.match.params.dashboardId || null;\n\n            this.props.selectDashboard(id);\n\n            this.scrollToTop();\n        }\n    };\n\n    scrollToTop = () => {\n        window.scrollTo(0, 0);\n    };\n\n    componentDidMount() {\n        this.setDashboard();\n    }\n\n    componentDidUpdate() {\n        this.setDashboard();\n    }\n\n    render() {\n        switch (this.props.mode) {\n            case EDIT:\n                return <EditDashboard />;\n            case NEW:\n                return <NewDashboard />;\n            default:\n                return <ViewDashboard />;\n        }\n    }\n}\n\nDashboard.propTypes = {\n    dashboardsLoaded: PropTypes.bool,\n    match: PropTypes.object,\n    mode: PropTypes.string,\n    selectDashboard: PropTypes.func,\n};\n\nconst mapStateToProps = state => {\n    return { dashboardsLoaded: !sDashboardsIsFetching(state) };\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        selectDashboard: tSelectDashboard,\n    }\n)(Dashboard);\n","export const EDIT = 'edit';\nexport const NEW = 'new';\nexport const VIEW = 'view';\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { HeaderBar } from '@dhis2/ui-widgets';\nimport { CssVariables } from '@dhis2/ui-core';\n\nimport { EDIT, VIEW, NEW } from './Dashboard/dashboardModes';\nimport { acReceivedUser } from '../actions/user';\nimport { tFetchDashboards } from '../actions/dashboards';\nimport { tSetControlBarRows } from '../actions/controlBar';\nimport { tSetDimensions } from '../actions/dimensions';\nimport Dashboard from './Dashboard/Dashboard';\nimport SnackbarMessage from './SnackbarMessage/SnackbarMessage';\n\nimport 'typeface-roboto';\nimport './App.css';\n\nexport class App extends Component {\n    componentDidMount() {\n        this.props.setCurrentUser(this.props.d2.currentUser);\n        this.props.fetchDashboards();\n        this.props.setControlBarRows();\n        this.props.setDimensions(this.props.d2);\n    }\n\n    getChildContext() {\n        return { baseUrl: this.props.baseUrl, i18n, d2: this.props.d2 };\n    }\n\n    render() {\n        return (\n            <>\n                <CssVariables colors spacers />\n                <div className=\"app-wrapper\">\n                    <div className=\"dashboard-header-bar\">\n                        <HeaderBar appName={i18n.t('Dashboard')} />\n                    </div>\n                    <Router>\n                        <Switch>\n                            <Route\n                                exact\n                                path=\"/\"\n                                render={props => (\n                                    <Dashboard {...props} mode={VIEW} />\n                                )}\n                            />\n                            <Route\n                                exact\n                                path=\"/new\"\n                                render={props => (\n                                    <Dashboard {...props} mode={NEW} />\n                                )}\n                            />\n                            <Route\n                                exact\n                                path=\"/:dashboardId\"\n                                render={props => (\n                                    <Dashboard {...props} mode={VIEW} />\n                                )}\n                            />\n                            <Route\n                                exact\n                                path=\"/:dashboardId/edit\"\n                                render={props => (\n                                    <Dashboard {...props} mode={EDIT} />\n                                )}\n                            />\n                        </Switch>\n                    </Router>\n                    <SnackbarMessage />\n                </div>\n            </>\n        );\n    }\n}\n\nApp.propTypes = {\n    fetchDashboards: PropTypes.func.isRequired,\n    setControlBarRows: PropTypes.func.isRequired,\n    setCurrentUser: PropTypes.func.isRequired,\n    setDimensions: PropTypes.func.isRequired,\n    baseUrl: PropTypes.string,\n    d2: PropTypes.object,\n};\n\nApp.childContextTypes = {\n    baseUrl: PropTypes.string,\n    i18n: PropTypes.object,\n    d2: PropTypes.object,\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setCurrentUser: currentUser => dispatch(acReceivedUser(currentUser)),\n        fetchDashboards: () => dispatch(tFetchDashboards()),\n        setControlBarRows: () => dispatch(tSetControlBarRows()),\n        setDimensions: d2 => dispatch(tSetDimensions(d2)),\n    };\n};\n\nexport default connect(\n    null,\n    mapDispatchToProps\n)(App);\n","import { RECEIVED_USER } from '../reducers/user';\n\nexport const acReceivedUser = value => ({\n    type: RECEIVED_USER,\n    value,\n});\n","//------------------------------------------------------------------------------\n// <auto-generated>\n// This code was generated by d2-i18n-generate.\n//\n// Changes to this file may cause incorrect behavior and will be lost if\n// the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\nimport i18n from '@dhis2/d2-i18n';\nimport moment from 'moment';\nimport 'moment/locale/ar';\nimport 'moment/locale/es';\nimport 'moment/locale/fr';\nimport 'moment/locale/lo';\nimport 'moment/locale/pt';\nimport 'moment/locale/ru';\nimport 'moment/locale/sv';\nimport 'moment/locale/tg';\nimport 'moment/locale/uk';\nimport 'moment/locale/ur';\nimport 'moment/locale/vi';\nimport 'moment/locale/zh-cn';\n\nimport arTranslations from './ar/translations.json';\nimport daTranslations from './da/translations.json';\nimport enTranslations from './en/translations.json';\nimport esTranslations from './es/translations.json';\nimport frTranslations from './fr/translations.json';\nimport idTranslations from './id/translations.json';\nimport kmTranslations from './km/translations.json';\nimport loTranslations from './lo/translations.json';\nimport myTranslations from './my/translations.json';\nimport prsTranslations from './prs/translations.json';\nimport psTranslations from './ps/translations.json';\nimport ptTranslations from './pt/translations.json';\nimport pt_BRTranslations from './pt_BR/translations.json';\nimport ruTranslations from './ru/translations.json';\nimport svTranslations from './sv/translations.json';\nimport tetTranslations from './tet/translations.json';\nimport tgTranslations from './tg/translations.json';\nimport ukTranslations from './uk/translations.json';\nimport urTranslations from './ur/translations.json';\nimport viTranslations from './vi/translations.json';\nimport zhTranslations from './zh/translations.json';\nimport zh_CNTranslations from './zh_CN/translations.json';\n\nconst namespace = 'dashboards-app';\nmoment.locale('en');\n\ni18n.addResources('ar', namespace, arTranslations);\ni18n.addResources('da', namespace, daTranslations);\ni18n.addResources('en', namespace, enTranslations);\ni18n.addResources('es', namespace, esTranslations);\ni18n.addResources('fr', namespace, frTranslations);\ni18n.addResources('id', namespace, idTranslations);\ni18n.addResources('km', namespace, kmTranslations);\ni18n.addResources('lo', namespace, loTranslations);\ni18n.addResources('my', namespace, myTranslations);\ni18n.addResources('prs', namespace, prsTranslations);\ni18n.addResources('ps', namespace, psTranslations);\ni18n.addResources('pt', namespace, ptTranslations);\ni18n.addResources('pt_BR', namespace, pt_BRTranslations);\ni18n.addResources('ru', namespace, ruTranslations);\ni18n.addResources('sv', namespace, svTranslations);\ni18n.addResources('tet', namespace, tetTranslations);\ni18n.addResources('tg', namespace, tgTranslations);\ni18n.addResources('uk', namespace, ukTranslations);\ni18n.addResources('ur', namespace, urTranslations);\ni18n.addResources('vi', namespace, viTranslations);\ni18n.addResources('zh', namespace, zhTranslations);\ni18n.addResources('zh_CN', namespace, zh_CNTranslations);\n\ni18n.setDefaultNamespace(namespace);\ni18n.changeLanguage('en');\n\nexport default i18n;\n","/** @module reducers/selected */\nimport { validateReducer } from '../modules/util';\n\nexport const SET_STYLE = 'SET_STYLE';\n\nexport const DEFAULT_STATE_STYLE = 'LIST';\n\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\nconst style = (state = DEFAULT_STATE_STYLE, action) => {\n    switch (action.type) {\n        case SET_STYLE:\n            return validateReducer(action.value, DEFAULT_STATE_STYLE);\n        default:\n            return state;\n    }\n};\n\nexport default style;\n\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\nexport const sGetStyleRoot = state => state.style;\n","import { combineReducers } from 'redux';\nimport arraySort from 'd2-utilizr/lib/arraySort';\n\nimport dashboards, { sGetDashboardsRoot } from './dashboards';\nimport selected from './selected';\nimport dashboardsFilter, {\n    ownerData,\n    sGetFilterName,\n    sGetFilterOrder,\n    sGetFilterOwner,\n} from './dashboardsFilter';\nimport controlBar from './controlBar';\nimport visualizations from './visualizations';\nimport editDashboard from './editDashboard';\nimport messages from './messages';\nimport user from './user';\nimport snackbar from './snackbar';\nimport itemFilters from './itemFilters';\nimport editItemFilters from './editItemFilters';\nimport style from './style';\nimport dimensions from './dimensions';\nimport settings from './settings';\nimport activeModalDimension from './activeModalDimension';\n\nconst USER = 'system';\n\n// Reducers\n\nexport default combineReducers({\n    dashboards,\n    selected,\n    dashboardsFilter,\n    controlBar,\n    visualizations,\n    messages,\n    user,\n    editDashboard,\n    itemFilters,\n    editItemFilters,\n    style,\n    snackbar,\n    dimensions,\n    settings,\n    activeModalDimension,\n});\n\n// Map constants to data\nconst mapConstToData = {\n    NAME: 'name',\n    ITEMS: 'numberOfItems',\n    CREATED: 'created',\n    OWNER: 'owner',\n};\n\n// Selectors\n\n// Filter dashboards by name\nexport const sFilterDashboardsByName = (dashboards, filter) =>\n    dashboards.filter(d =>\n        d.displayName.toLowerCase().includes(filter.toLowerCase())\n    );\n\n// Filter dashboards by owner, TODO FIXME\nexport const sFilterDashboardsByOwner = (dashboards, filter) => {\n    const ME = ownerData[1]; // TODO\n    const OTHERS = ownerData[2]; // TODO\n\n    switch (filter) {\n        case ME:\n            return dashboards.filter(d => d.owner === USER);\n        case OTHERS:\n            return dashboards.filter(d => d.owner !== USER);\n        default:\n            return dashboards;\n    }\n};\n\n// Filter dashboards by order\nexport const sFilterDashboardsByOrder = (dashboards, filter) => {\n    const filterValues = filter.split(':');\n\n    const key = filterValues[0];\n    const direction = filterValues[1];\n\n    return arraySort(dashboards, direction, mapConstToData[key]);\n};\n\n// Selectors dependency level 2\n\n// Get filtered dashboards\nexport const sGetFilteredDashboards = state => {\n    const dashboards = sGetDashboardsRoot(state);\n\n    const nameFilter = sGetFilterName(state);\n    const ownerFilter = sGetFilterOwner(state);\n    const orderFilter = sGetFilterOrder(state);\n\n    return sFilterDashboardsByOrder(\n        sFilterDashboardsByName(\n            sFilterDashboardsByOwner(dashboards, ownerFilter),\n            nameFilter\n        ),\n        orderFilter\n    );\n};\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport reducer from './reducers';\n\nconst configureStore = () => {\n    const middleware = [thunk];\n\n    // Enable Redux devtools if extension is installed instead of redux-logger\n    const composeEnhancers =\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n    if (\n        !window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ &&\n        process.env.NODE_ENV !== 'production'\n    ) {\n        middleware.push(createLogger());\n    }\n\n    return createStore(\n        reducer,\n        composeEnhancers(applyMiddleware(...middleware))\n    );\n};\n\nexport default configureStore;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport { init as d2Init, config, getManifest, getUserSettings } from 'd2';\nimport dhis2theme from '@dhis2/d2-ui-core/theme/mui3.theme';\n\nimport { Provider as RuntimeProvider } from '@dhis2/app-runtime';\nimport { CssReset } from '@dhis2/ui-core';\n\nimport App from './components/App';\nimport './index.css';\nimport i18n from './locales';\nimport configureStore from './configureStore';\n\nconst muiTheme = () => createMuiTheme(dhis2theme);\n\nconst configI18n = userSettings => {\n    const uiLocale = userSettings.keyUiLocale;\n\n    if (uiLocale && uiLocale !== 'en') {\n        config.i18n.sources.add(`./i18n/i18n_module_${uiLocale}.properties`);\n    }\n\n    config.i18n.sources.add('./i18n/i18n_module_en.properties');\n    i18n.changeLanguage(uiLocale);\n};\n\nconst init = async () => {\n    const manifest = await getManifest('./manifest.webapp');\n\n    // log app info\n    console.info(\n        `Dashboards app, v${manifest.version}, ${\n            manifest.manifest_generated_at\n        }`\n    );\n\n    const isProd = process.env.NODE_ENV === 'production';\n\n    if (\n        !isProd &&\n        (!process.env.REACT_APP_DHIS2_BASE_URL ||\n            !process.env.REACT_APP_DHIS2_AUTHORIZATION)\n    ) {\n        throw new Error(\n            'Missing env variables REACT_APP_DHIS2_BASE_URL and REACT_APP_DHIS2_AUTHORIZATION'\n        );\n    }\n\n    // api config\n    const baseUrl = isProd\n        ? manifest.activities.dhis.href\n        : process.env.REACT_APP_DHIS2_BASE_URL;\n    const authorization = process.env.REACT_APP_DHIS2_AUTHORIZATION;\n\n    config.baseUrl = `${baseUrl}/api/${manifest.dhis2.apiVersion}`;\n    config.headers = isProd ? null : { Authorization: authorization };\n    config.schemas = [\n        'chart',\n        'map',\n        'report',\n        'reportTable',\n        'eventChart',\n        'eventReport',\n        'dashboard',\n        'organisationUnit',\n        'userGroup',\n    ];\n\n    getUserSettings()\n        .then(configI18n)\n        .then(() => d2Init(config))\n        .then(initializedD2 => {\n            ReactDOM.render(\n                <RuntimeProvider\n                    config={{\n                        baseUrl: baseUrl,\n                        apiVersion: manifest.dhis2.apiVersion,\n                    }}\n                >\n                    <CssReset />\n                    <Provider store={configureStore()}>\n                        <MuiThemeProvider theme={muiTheme()}>\n                            <App baseUrl={baseUrl} d2={initializedD2} />\n                        </MuiThemeProvider>\n                    </Provider>\n                </RuntimeProvider>,\n                document.getElementById('root')\n            );\n        });\n};\n\ninit();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"leftControls\":\"DashboardsBar_leftControls__2kr14\",\"rightControls\":\"DashboardsBar_rightControls__2l1lT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuItem\":\"ContentMenuItem_menuItem__2DIcB\",\"launchLink\":\"ContentMenuItem_launchLink__MRANR\",\"label\":\"ContentMenuItem_label__2pIfq\",\"buttonInsert\":\"ContentMenuItem_buttonInsert__1GlZy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemWrap\":\"ItemHeader_itemWrap__3gJiQ\",\"itemHeaderWrap\":\"ItemHeader_itemHeaderWrap__xEKwZ\",\"itemTitle\":\"ItemHeader_itemTitle__3LmXp\",\"itemActionsWrap\":\"ItemHeader_itemActionsWrap__1U5Ex\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ControlBar_root__3LaTt\",\"content\":\"ControlBar_content__1r98-\",\"draghandle\":\"ControlBar_draghandle__1VWa0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FatalErrorBoundary_container__x6zhd\",\"icon\":\"FatalErrorBoundary_icon__2XjC2\",\"message\":\"FatalErrorBoundary_message__2p9y8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"showMore\":\"ShowMoreButton_showMore__rWqw9\",\"disabled\":\"ShowMoreButton_disabled__2oX7G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ClearButton_button__2yjcV\",\"icon\":\"ClearButton_icon__1fqj8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterField\":\"Filter_filterField__23cD5\",\"searchIcon\":\"Filter_searchIcon__2cHsm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"progress\":\"LoadingMask_progress__NsmGX\",\"outer\":\"LoadingMask_outer__2Nb9y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textDiv\":\"Item_textDiv__2b-T5\",\"loadingCover\":\"Item_loadingCover__fhJgG\"};","import isObject from 'lodash/isObject';\nimport { VIS_TYPE_COLUMN, VIS_TYPE_PIVOT_TABLE } from '@dhis2/analytics';\nimport { apiFetchFavorite, getMapFields } from '../../../api/metadata';\nimport {\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_REPORT,\n    EVENT_CHART,\n    itemTypeMap,\n} from '../../../modules/itemTypes';\nimport { getBaseUrl, getWithoutId } from '../../../modules/util';\nimport { getGridItemDomId } from '../../ItemGrid/gridUtil';\n\n//external plugins\nconst itemTypeToExternalPlugin = {\n    [MAP]: 'mapPlugin',\n    [EVENT_REPORT]: 'eventReportPlugin',\n    [EVENT_CHART]: 'eventChartPlugin',\n};\nconst hasIntegratedPlugin = type => [CHART, REPORT_TABLE].includes(type);\n\nconst getPlugin = type => {\n    if (hasIntegratedPlugin(type)) {\n        return true;\n    }\n    const pluginName = itemTypeToExternalPlugin[type];\n\n    return global[pluginName];\n};\n\nexport const THEMATIC_LAYER = 'thematic';\n\nexport const pluginIsAvailable = (item = {}, visualization = {}) => {\n    const type = visualization.activeType || item.type;\n\n    return !!getPlugin(type);\n};\n\nexport const extractFavorite = item => {\n    if (!isObject(item)) {\n        return null;\n    }\n\n    const propName = itemTypeMap[item.type].propName;\n\n    return (\n        item[propName] ||\n        (item.reportTable ||\n            item.chart ||\n            item.map ||\n            item.eventReport ||\n            item.eventChart ||\n            {})\n    );\n};\n\nexport const extractMapView = map =>\n    map.mapViews && map.mapViews.find(mv => mv.layer.includes(THEMATIC_LAYER));\n\nexport const loadPlugin = (plugin, config, credentials) => {\n    if (!(plugin && plugin.load)) {\n        return;\n    }\n\n    plugin.url = credentials.baseUrl;\n    plugin.loadingIndicator = true;\n    plugin.dashboard = true;\n    if (credentials.auth) {\n        plugin.auth = credentials.auth;\n    }\n    plugin.load(config);\n};\n\nexport const getId = item => extractFavorite(item).id;\nexport const getName = item => extractFavorite(item).name;\nexport const getDescription = item => extractFavorite(item).description;\nexport const getLink = (item, d2) => {\n    const baseUrl = getBaseUrl(d2);\n    const appUrl = itemTypeMap[item.type].appUrl(getId(item));\n\n    return `${baseUrl}/${appUrl}`;\n};\n\nexport const load = async (\n    item,\n    visualization,\n    { credentials, activeType }\n) => {\n    const config = {\n        ...visualization,\n        el: getGridItemDomId(item.id),\n    };\n\n    const type = activeType || item.type;\n    const plugin = getPlugin(type);\n\n    loadPlugin(plugin, config, credentials);\n};\n\nexport const fetch = async item => {\n    const fetchedFavorite = await apiFetchFavorite(getId(item), item.type, {\n        fields: item.type === MAP ? getMapFields() : null,\n    });\n\n    return fetchedFavorite;\n};\n\nexport const resize = item => {\n    const plugin = getPlugin(item.type);\n\n    if (plugin && plugin.resize) {\n        plugin.resize(getGridItemDomId(item.id));\n    }\n};\n\nexport const unmount = (item, activeType) => {\n    const plugin = getPlugin(activeType);\n\n    if (plugin && plugin.unmount) {\n        plugin.unmount(getGridItemDomId(item.id));\n    }\n};\n\nexport const getVisualizationConfig = (\n    visualization,\n    originalType,\n    activeType\n) => {\n    if (originalType === MAP && originalType !== activeType) {\n        const extractedMapView = extractMapView(visualization);\n\n        if (extractedMapView === undefined) {\n            return null;\n        }\n\n        return getWithoutId({\n            ...visualization,\n            ...extractedMapView,\n            mapViews: undefined,\n            type: activeType === CHART ? VIS_TYPE_COLUMN : VIS_TYPE_PIVOT_TABLE,\n        });\n    } else if (originalType === REPORT_TABLE && activeType === CHART) {\n        return getWithoutId({ ...visualization, type: VIS_TYPE_COLUMN });\n    } else if (originalType === CHART && activeType === REPORT_TABLE) {\n        return getWithoutId({\n            ...visualization,\n            type: VIS_TYPE_PIVOT_TABLE,\n        });\n    }\n\n    return getWithoutId(visualization);\n};\n","import isFunction from 'd2-utilizr/lib/isFunction';\n\nimport { orObject } from '../../modules/util';\n\n// Dimensions for the react-grid-layout\n\nexport const GRID_COMPACT_TYPE = 'vertical'; // vertical | horizonal | null\nexport const GRID_ROW_HEIGHT = 10;\nconst GRID_COLUMN_WIDTH_PX = 20;\nconst GRID_LAYOUT = 'FLEXIBLE'; // FIXED | FLEXIBLE\nexport const MARGIN = [10, 10];\n\nexport const NEW_ITEM_SHAPE = { x: 0, y: 0, w: 20, h: 29 };\nexport const ITEM_MIN_HEIGHT = 4;\n\n// Dimensions for getShape\n\nconst NUMBER_OF_ITEM_COLS = 2;\nconst GRID_COLUMNS = 60;\n\nexport const getGridColumns = () => {\n    switch (GRID_LAYOUT) {\n        case 'FLEXIBLE':\n            return GRID_COLUMNS;\n        case 'FIXED':\n            return Math.floor((window.innerWidth - 20) / GRID_COLUMN_WIDTH_PX);\n        default:\n            return GRID_COLUMNS;\n    }\n};\n\n// isNonNegativeInteger\n\nconst isNonNegativeInteger = x => Number.isInteger(x) && x >= 0;\n\n// Does the item have all the shape properties?\n\nexport const hasShape = item =>\n    isNonNegativeInteger(item.x) &&\n    isNonNegativeInteger(item.y) &&\n    isNonNegativeInteger(item.w) &&\n    isNonNegativeInteger(item.h);\n\n// returns a rectangular grid block dimensioned with x, y, w, h in grid units.\n// based on a grid with 3 items across\nexport const getShape = i => {\n    if (!isNonNegativeInteger(i)) {\n        throw new Error('Invalid grid block number');\n    }\n\n    const col = i % NUMBER_OF_ITEM_COLS;\n    const row = Math.floor(i / NUMBER_OF_ITEM_COLS);\n    const itemWidth = Math.floor((GRID_COLUMNS - 1) / NUMBER_OF_ITEM_COLS);\n    const itemHeight = GRID_ROW_HEIGHT * 2;\n\n    return {\n        x: col * itemWidth,\n        y: row * itemHeight,\n        w: itemWidth,\n        h: itemHeight,\n    };\n};\n\n/**\n * Calculates the grid item's original height in pixels based\n * on the height in grid units. This calculation\n * is copied directly from react-grid-layout GridItem.js (calcPosition)\n *\n * @param {Object} item item containing shape (x, y, w, h)\n */\nconst getOriginalHeight = item => {\n    const originalHeight = Math.round(\n        GRID_ROW_HEIGHT * item.h + Math.max(0, item.h - 1) * MARGIN[1]\n    );\n\n    return { originalHeight };\n};\n\n/**\n * Returns an array of items containing the x, y, w, h dimensions\n * and the item's originalheight in pixels\n * @function\n * @param {Array} items\n * @returns {Array}\n */\n\nexport const withShape = items =>\n    items.map((item, index) => {\n        const itemWithShape = hasShape(item)\n            ? item\n            : Object.assign({}, item, getShape(index));\n\n        return Object.assign(\n            {},\n            itemWithShape,\n            getOriginalHeight(itemWithShape)\n        );\n    });\n\nexport const getGridItemDomId = id => `item-${id}`;\n\nexport function onItemResize(id) {\n    const el = orObject(document.querySelector(`#${getGridItemDomId(id)}`));\n    if (isFunction(el.setViewportSize))\n        setTimeout(\n            () => el.setViewportSize(el.clientWidth - 5, el.clientHeight - 5),\n            10\n        );\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"showMoreButton\":\"CategorizedMenuGroup_showMoreButton__3-0Wa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"deleteItemButton\":\"DeleteItemButton_deleteItemButton__4YLrM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bar\":\"FilterBar_bar__2mF3Z\"};"],"sourceRoot":""}
{"version":3,"sources":["D2App/components/ControlBar/styles/ControlBar.module.css","D2App/components/ControlBar/styles/DashboardItemChip.module.css","D2App/components/ControlBar/styles/ClearButton.module.css","D2App/components/ControlBar/styles/Filter.module.css","D2App/components/ControlBar/styles/ShowMoreButton.module.css","D2App/components/ControlBar/styles/DashboardsBar.module.css","D2App/components/ItemFilter/styles/FilterSelector.module.css","D2App/components/TitleBar/styles/ViewTitleBar.module.css","D2App/components/Item/VisualizationItem/Visualization/styles/NoVisualizationMessage.module.css","D2App/components/Item/VisualizationItem/Visualization/styles/LoadingMask.module.css","D2App/components/Item/VisualizationItem/styles/FatalErrorBoundary.module.css","D2App/components/Item/ItemHeader/styles/DeleteItemButton.module.css","D2App/components/Item/ItemHeader/styles/PrintItemInfo.module.css","D2App/components/Item/VisualizationItem/styles/ItemFooter.module.css","D2App/components/Item/ListItem/Item.module.css","D2App/components/Item/PrintTitlePageItem/styles/Item.module.css","D2App/components/FilterBar/styles/FilterBar.module.css","D2App/components/ItemSelector/styles/HeaderMenuItem.module.css","D2App/components/ItemSelector/styles/ContentMenuItem.module.css","D2App/components/ItemSelector/styles/CategorizedMenuGroup.module.css","D2App/components/ItemSelector/styles/ItemSelector.module.css","D2App/components/TitleBar/styles/EditTitleBar.module.css","D2App/modules/itemTypes.js","D2App/modules/util.js","D2App/components/ControlBar/styles/ConfirmDeleteDialog.module.css","D2App/components/ControlBar/styles/EditBar.module.css","D2App/components/Dashboard/styles/NotSupportedNotice.module.css","D2App/components/Dashboard/styles/PrintInfo.module.css","D2App/components/Dashboard/styles/PrintActionsBar.module.css","D2App/components/Dashboard/styles/PrintLayoutDashboard.module.css","D2App/components/Dashboard/styles/PrintDashboard.module.css","D2App/components/WindowDimensionsProvider.js","D2App/api/settings.js","D2App/components/SystemSettingsProvider.js","D2App/components/ControlBar/ControlBar.js","D2App/icons/Star.js","D2App/api/dataStatistics.js","D2App/components/ControlBar/DashboardItemChip.js","D2App/icons/AddCircle.js","D2App/icons/Search.js","D2App/icons/Clear.js","D2App/components/ControlBar/ClearButton.js","D2App/reducers/dashboardsFilter.js","D2App/modules/gridUtil.js","D2App/modules/smallScreen.js","D2App/components/ControlBar/Filter.js","D2App/actions/dashboardsFilter.js","D2App/components/ControlBar/assets/icons.js","D2App/components/ControlBar/ShowMoreButton.js","D2App/components/ControlBar/controlBarDimensions.js","D2App/reducers/controlBar.js","D2App/modules/uiBackendItemConverter.js","D2App/reducers/dashboards.js","D2App/reducers/selected.js","D2App/api/userDataStore.js","D2App/api/controlBar.js","D2App/actions/controlBar.js","D2App/components/ControlBar/DashboardsBar.js","D2App/widgets/NoContentMessage.js","D2App/components/Item/VisualizationItem/assets/icons.js","D2App/reducers/user.js","D2App/reducers/dimensions.js","D2App/reducers/itemFilters.js","D2App/actions/itemFilters.js","D2App/reducers/messages.js","D2App/api/messages.js","D2App/components/Item/MessagesItem/actions.js","D2App/reducers/alert.js","D2App/actions/alert.js","D2App/reducers/visualizations.js","D2App/actions/visualizations.js","D2App/api/metadata.js","D2App/api/index.js","D2App/api/dashboards.js","D2App/api/description.js","D2App/actions/selected.js","D2App/api/localStorage.js","D2App/actions/dashboards.js","D2App/components/ItemFilter/FilterDialog.js","D2App/reducers/activeModalDimension.js","D2App/actions/activeModalDimension.js","D2App/components/ItemFilter/FilterSelector.js","D2App/components/TitleBar/ViewTitleBar.js","D2App/components/Item/VisualizationItem/Visualization/DefaultPlugin.js","D2App/components/Item/VisualizationItem/Visualization/NoVisualizationMessage.js","D2App/components/Item/VisualizationItem/Visualization/MapPlugin.js","D2App/components/Item/VisualizationItem/Visualization/LoadingMask.js","D2App/components/Item/VisualizationItem/Visualization/getFilteredVisualization.js","D2App/components/Item/VisualizationItem/Visualization/getVisualizationConfig.js","D2App/modules/memoizeOne.js","D2App/components/Item/VisualizationItem/Visualization/Visualization.js","D2App/components/Item/VisualizationItem/FatalErrorBoundary.js","D2App/components/Item/ItemHeader/ViewItemActions.js","D2App/components/Item/ItemHeader/DeleteItemButton.js","D2App/reducers/editDashboard.js","D2App/api/editDashboard.js","D2App/actions/editDashboard.js","D2App/components/Item/ItemHeader/EditItemActions.js","D2App/icons/Info.js","D2App/components/Item/ItemHeader/PrintItemInfo.js","D2App/components/Dashboard/dashboardModes.js","D2App/components/Item/ItemHeader/ItemHeader.js","D2App/components/Item/VisualizationItem/ItemHeaderButtons.js","D2App/components/Item/VisualizationItem/ItemFooter.js","D2App/components/Item/VisualizationItem/Item.js","D2App/widgets/Line.js","D2App/components/Item/MessagesItem/Item.js","D2App/components/Item/NotSupportedItem/Item.js","D2App/icons/Description.js","D2App/icons/Delete.js","D2App/components/Item/ListItem/Item.js","D2App/components/Item/ListItem/actions.js","D2App/reducers/printDashboard.js","D2App/components/Item/TextItem/Item.js","D2App/components/Item/AppItem/Item.js","D2App/components/Item/SpacerItem/Item.js","D2App/components/Item/PageBreakItem/Item.js","D2App/components/Item/PrintTitlePageItem/Item.js","D2App/components/Item/Item.js","D2App/components/Item/ProgressiveLoadingContainer.js","D2App/components/ItemGrid/ViewItemGrid.js","D2App/components/FilterBar/FilterBadge.js","D2App/components/FilterBar/FilterBar.js","D2App/actions/printDashboard.js","D2App/components/Dashboard/ViewDashboard.js","D2App/components/ItemSelector/ItemSearchField.js","D2App/components/ItemSelector/HeaderMenuItem.js","D2App/icons/Launch.js","D2App/components/ItemSelector/ContentMenuItem.js","D2App/components/ItemSelector/actions.js","D2App/components/ItemSelector/selectableItems.js","D2App/components/ItemSelector/CategorizedMenuGroup.js","D2App/components/ItemSelector/SinglesMenuGroup.js","D2App/components/ItemSelector/ItemSelector.js","D2App/components/TitleBar/EditTitleBar.js","D2App/components/ItemGrid/EditItemGrid.js","D2App/components/ControlBar/ConfirmDeleteDialog.js","D2App/components/ControlBar/EditBar.js","D2App/components/Dashboard/NotSupportedNotice.js","D2App/components/Dashboard/PrintInfo.js","D2App/icons/LessHorizontal.js","D2App/components/Dashboard/PrintActionsBar.js","D2App/modules/printUtils.js","D2App/components/ItemGrid/StaticGrid.js","D2App/components/ItemGrid/PrintLayoutItemGrid.js","D2App/components/Dashboard/PrintLayoutDashboard.js","D2App/components/Dashboard/EditDashboard.js","D2App/components/Dashboard/NewDashboard.js","D2App/components/ItemGrid/PrintItemGrid.js","D2App/components/Dashboard/PrintDashboard.js","D2App/components/Dashboard/Dashboard.js","D2App/components/AlertBar/AlertBar.js","D2App/modules/getFilteredDimensions.js","D2App/components/App.js","D2App/actions/user.js","D2App/actions/dimensions.js","D2App/reducers/style.js","D2App/reducers/index.js","D2App/configureStore.js","D2App/locales/index.js","D2App/AppWrapper.js","D2App/modules/item.js","D2App/components/Item/VisualizationItem/Visualization/plugin.js","D2App/modules/getGridItemDomId.js","D2App/components/Item/ItemHeader/styles/ItemHeader.module.css"],"names":["module","exports","VISUALIZATION","REPORT_TABLE","CHART","MAP","EVENT_REPORT","EVENT_CHART","APP","REPORTS","RESOURCES","USERS","MESSAGES","TEXT","SPACER","PAGEBREAK","PRINT_TITLE_PAGE","DOMAIN_TYPE_AGGREGATE","DOMAIN_TYPE_TRACKER","isVisualizationType","item","itemTypeMap","type","hasMapView","itemType","domainType","isTrackerDomainType","getDefaultItemCount","defaultItemCount","getAppName","appName","id","endPointName","propName","pluralTitle","i18n","t","appUrl","dataStatisticsName","Date","getTime","getEndPointName","getDataStatisticsName","getItemUrl","baseUrl","url","launchUrl","getItemIcon","TableIcon","ChartIcon","MapIcon","ExtensionIcon","DescriptionIcon","PersonIcon","FontDownloadIcon","EmailIcon","CropFreeIcon","NotInterestedIcon","orArray","param","Array","isArray","orObject","isObject","arrayToIdMap","array","reduce","obj","formatDate","value","uiLocale","global","Intl","DateTimeFormat","locale","year","month","day","format","substr","replace","validateReducer","defaultValue","undefined","WindowDimensionsCtx","createContext","windowDims","height","window","innerHeight","width","innerWidth","WindowDimensionsProvider","children","dimensions","setDimensions","useState","useEffect","handleResize","debounce","addEventListener","removeEventListener","Provider","useWindowDimensions","useContext","query","systemSettings","resource","map","s","join","DEFAULT_SETTINGS","displayNameProperty","keyGatherAnalyticalObjectStatisticsInDashboardViews","SystemSettingsCtx","SystemSettingsProvider","engine","settings","setSettings","async","settingsQuery","Object","assign","fetchData","useSystemSettings","ControlBar","React","Component","constructor","props","super","onStartDrag","this","setState","dragging","onDrag","onEndDrag","event","preventDefault","stopPropagation","newHeight","clientY","onChangeHeight","requestAnimationFrame","renderDragHandle","className","classes","draghandle","onMouseDown","data-testid","state","render","Math","max","rootClass","cx","root","style","content","defaultProps","StarIcon","xmlns","viewBox","d","fill","apiPostDataStatistics","eventType","d2","getInstance","Api","getApi","post","DashboardItemChip","starred","selected","label","dashboardId","onClick","chipProps","selectedState","unselected","icon","Star","debouncedPostStatistics","link","to","data-test","AddCircleIcon","colors","teal600","SearchIcon","small","ClearIcon","grey800","ClearButton","onClear","button","Clear","color","SET_DASHBOARDS_FILTER","CLEAR_DASHBOARDS_FILTER","sGetDashboardsFilter","dashboardsFilter","GRID_COMPACT_TYPE","GRID_ROW_HEIGHT_PX","MARGIN_PX","MARGIN_SM_PX","GRID_PADDING_PX","NEW_ITEM_SHAPE","x","y","w","h","isNonNegativeInteger","Number","isInteger","hasShape","withShape","items","i","col","row","floor","itemWidth","MAX_ITEM_GRID_WIDTH","getShape","originalH","getGridWidth","windowWidthPx","getGridUnitsForSmFromPx","hPx","gridUnitHeightPx","round","getProportionalHeight","wPx","getItemWHPx","ratioWH","newWPx","newHPx","getGridItemProperties","itemId","minH","getPageBreakItemShape","yPos","isStatic","GRID_COLUMNS","static","getPrintTitlePageItemShape","isOneItemPerPage","gridUnits","colOrRowSize","marginPx","isSmallScreen","mapDispatchToProps","setDashboardsFilter","clearDashboardsFilter","connect","filterText","isMaxHeight","onKeypressEnter","onToggleMaxHeight","focusedClassName","setFocusedClassName","inputFocused","setInputFocus","searchButton","Search","searchIcon","container","onFocus","focused","onBlur","searchIconContainer","input","placeholder","onChange","target","onKeyUp","keyCode","ref","focus","clearButtonContainer","ChevronDown","ChevronUp","ShowMoreButton","disabled","containerRef","useRef","buttonLabel","onButtonClicked","buttonEl","current","MouseEvent","bubbles","cancelable","dispatchEvent","placement","onMouseOver","onMouseOut","showMore","aria-label","getRowsHeight","rows","getControlBarHeight","FIRST_ROW_PADDING_HEIGHT","CONTROL_BAR","CONTROL_BAR_CONTAINER","CHIPS_CONTAINER","CONTROL_BAR_COLLAPSED","getControlBarHeightSmallDevice","controlBarHeight","SEARCH_BAR_HEIGHT_SMALL","SET_CONTROLBAR_USER_ROWS","combineReducers","userRows","action","sGetControlBarUserRows","controlBar","sGetControlBarRoot","spacerContent","emptyTextItemContent","isTextType","text","convertUiItemsToBackend","isUiSpacerType","convertBackendItemsToUi","isBackendSpacerType","gridProperties","SET_DASHBOARDS","ADD_DASHBOARDS","SET_DASHBOARD_STARRED","SET_DASHBOARD_DISPLAY_NAME","SET_DASHBOARD_ITEMS","DEFAULT_STATE_DASHBOARDS","byId","EMPTY_DASHBOARD","updateDashboardProp","prop","sGetDashboardsRoot","dashboards","sGetDashboardById","sDashboardsIsFetching","sGetAllDashboards","sGetDashboardItems","sGetStarredDashboards","values","filter","dashboard","sGetUnstarredDashboards","getCustomDashboards","data","arrayFrom","name","displayName","description","displayDescription","favorite","owner","user","created","split","lastUpdated","access","numberOfItems","dashboardItems","length","SET_SELECTED_ID","SET_SELECTED_ISLOADING","SET_SELECTED_SHOWDESCRIPTION","SET_SELECTED_ITEM_ACTIVE_TYPE","CLEAR_SELECTED_ITEM_ACTIVE_TYPES","DEFAULT_STATE_SELECTED_SHOWDESCRIPTION","DEFAULT_STATE_SELECTED_ITEM_ACTIVE_TYPES","isLoading","showDescription","itemActiveTypes","activeType","sGetSelectedRoot","sGetSelectedId","sGetSelectedIsLoading","sGetSelectedShowDescription","sGetSelectedItemActiveType","NAMESPACE","hasNamespace","currentUser","dataStore","has","getNamespace","get","create","apiPostUserDataStoreValue","key","set","apiGetUserDataStoreValue","namespace","keys","find","k","console","log","KEY_CONTROLBAR_ROWS","acSetControlBarUserRows","isDashboardBarMaxHeight","withRouter","selectedId","history","setRows","createRef","scrollToTop","scroll","toggleMaxHeight","newRows","cancelMaxHeight","getFilteredDashboards","filteredDashboards","arraySort","toLowerCase","includes","viewableRows","getContainerHeight","containerClass","expanded","collapsed","getNumRowsFromHeight","min","apiPostControlBarRows","controls","newLink","AddCircle","Filter","push","chips","chipContainerClasses","chipContainer","getDashboardChips","marginTop","NoContentMessage","padding","textAlign","fontSize","fontWeight","grey600","ThreeDots","SpeechBubble","margin","fillRule","transform","Warning","Fullscreen","ExitFullscreen","RECEIVED_USER","DEFAULT_STATE_USER","username","isSuperuser","sGetUserUsername","SET_DIMENSIONS","DEFAULT_DIMENSIONS","getDimensionById","DIMENSION_ID_PERIOD","DIMENSION_ID_ORGUNIT","sGetDimensions","CLEAR_ITEM_FILTERS","SET_ITEM_FILTERS","ADD_ITEM_FILTER","REMOVE_ITEM_FILTER","DEFAULT_STATE_ITEM_FILTERS","sGetItemFiltersRoot","itemFilters","sGetNamedItemFilters","createSelector","filters","arr","dimension","acRemoveItemFilter","RECEIVED_MESSAGES","sGetMessagesRoot","messages","messageConversationsQuery","params","fields","order","pageSize","tGetMessages","dataEngine","messageConversations","error","getMessages","dispatch","err","SET_ALERT_MESSAGE","CLEAR_ALERT_MESSAGE","sGetAlertMessage","alert","acClearAlertMessage","ADD_VISUALIZATION","CLEAR_VISUALIZATIONS","DEFAULT_STATE_VISUALIZATIONS","isEmpty","p","sGetVisualization","visualizations","sGetVisualizationsRoot","acAddVisualization","getIdNameFields","rename","getDimensionFields","withItems","arrayClean","getAxesFields","getFavoriteFields","withDimensions","withOptions","getFavoritesFields","apiFetchVisualization","getVisualizationId","onError","getDashboardItemsFields","withFavorite","getDashboardFields","dashboardsQuery","paging","dashboardQuery","starDashboardMutation","unstarDashboardMutation","deleteDashboardMutation","apiFetchDashboard","variables","KEY_SHOW_DESCRIPTION","acSetSelectedId","acSetSelectedIsLoading","acSetSelectedShowDescription","tSetSelectedDashboardById","getState","alertTimeout","setTimeout","onSuccess","acAppendDashboards","customDashboard","acSetDashboardItems","localStorage","setItem","forEach","getVisualizationFromItem","clearTimeout","tUpdateShowDescription","apiPostShowDescription","tFetchDashboards","acSetDashboards","apiFetchDashboards","tStarDashboard","isStarred","acSetDashboardStarred","mutate","apiStarDashboard","tDeleteDashboard","apiDeleteDashboard","Promise","resolve","initiallySelectedItems","addItemFilter","removeItemFilter","onClose","setFilters","useD2","onSelectItems","dimensionId","onDeselectItems","itemIdsToRemove","newList","onReorderItems","itemIds","oldList","reorderedList","dataTest","position","large","commonProps","onSelect","onDeselect","onReorder","selectedItems","selectedPeriods","ouItems","renderDialogContent","secondary","primary","filterItems","SET_ACTIVE_MODAL_DIMENSION","CLEAR_ACTIVE_MODAL_DIMENSION","DEFAULT_STATE_ACTIVE_MODAL_DIMENSION","sGetActiveModalDimension","activeModalDimension","acSetActiveModalDimension","clearActiveModalDimension","setActiveModalDimension","showPopover","setShowPopover","onCloseDialog","buttonContainer","onClickOutside","reference","arrow","onDimensionClick","selectedIds","ViewTitleBar","moreOptionsIsOpen","setMoreOptionsIsOpen","sharingDialogIsOpen","setSharingDialogIsOpen","redirectUrl","setRedirectUrl","onToggleStarredDashboard","onShowHideDescription","toggleSharingDialog","toggleMoreOptions","StarBorder","showHideDescriptionLabel","toggleStarredDashboardLabel","buttonRef","userAccess","descriptionClasses","descContainer","desc","noDesc","getMoreButton","useSmall","moreText","titleBar","title","actions","titleBarIcon","strip","update","editLink","manage","shareButton","moreButton","moreButtonSmall","dense","open","onRequestClose","stateProps","dispatchProps","ownProps","DefaultPlugin","visualization","options","useConfig","credentials","auth","defaultHeaders","Authorization","prevItem","prevActiveType","load","unmount","shouldPluginReload","reloadAllowed","visChanged","getGridItemDomId","NoVisualizationMessage","message","MapPlugin","applyFilters","mapViews","mapView","layer","pluginIsAvailable","hideTitle","LoadingMask","center","getFilteredVisualization","visRows","visColumns","columns","visFilters","dimensionFound","dimensionObjects","getWithoutId","object","getVisualizationConfig","originalType","extractedMapView","mv","VIS_TYPE_COLUMN","VIS_TYPE_PIVOT_TABLE","layout","getAdaptedUiLayoutByType","memoizeOne","fn","lastArgs","lastValue","args","every","arg","Visualization","pluginLoaded","onLoadingComplete","memoizedGetFilteredVisualization","memoizedGetVisualizationConfig","availableHeight","availableWidth","pluginProps","d2Config","forDashboard","FatalErrorBoundary","errorFound","componentDidCatch","info","ViewItemActions","actionButtons","itemActionsWrap","DeleteItemButton","deleteItemButton","red500","RECEIVED_EDIT_DASHBOARD","RECEIVED_NOT_EDITING","START_NEW_DASHBOARD","RECEIVED_TITLE","RECEIVED_DESCRIPTION","ADD_DASHBOARD_ITEM","REMOVE_DASHBOARD_ITEM","UPDATE_DASHBOARD_ITEM","RECEIVED_DASHBOARD_LAYOUT","SET_PRINT_PREVIEW_VIEW","CLEAR_PRINT_PREVIEW_VIEW","DEFAULT_STATE_EDIT_DASHBOARD","NEW_DASHBOARD_STATE","printPreviewView","sGetEditDashboardRoot","editDashboard","sGetIsEditing","sGetIsPrintPreviewView","sGetEditDashboardItems","createDashboardMutation","updateDashboardMutation","generatePayload","acClearEditDashboard","acAddDashboardItem","itemPropName","generateUid","gridItemProperties","shape","acUpdateDashboardItem","acRemoveDashboardItem","tSaveDashboard","dashboardToSave","response","uid","updateDashboard","postDashboard","WarningIcon","PrintWarning","warning","Info","EDIT","NEW","VIEW","PRINT","PRINT_LAYOUT","isEditMode","mode","isPrintMode","isViewMode","ItemHeader","forwardRef","dashboardMode","isShortened","rest","Actions","EditItemActions","PrintItemInfo","getItemActionsMap","itemHeaderWrap","itemTitle","iconFill","ItemHeaderButtons","menuIsOpen","setMenuIsOpen","onSelectActiveType","isTrackerType","onViewTable","closeMenu","onViewChart","onViewMap","canViewAs","isSingleValue","isYearOverYear","VIS_TYPE_GAUGE","VIS_TYPE_PIE","interpretationMenuLabel","activeFooter","ViewAsMenuItems","isFullscreen","onToggleFullscreen","href","getLink","onToggleFooter","fullscreenSupported","ItemFooter","line","scrollContainer","Item","showFooter","configLoaded","isFullscreenSupported","el","document","querySelector","itemDomElSelector","requestFullscreen","webkitRequestFullscreen","handleFullscreenChange","fullscreenElement","webkitFullscreenElement","pluginResize","exitFullscreen","webkitExitFullscreen","getUniqueKey","uniqueId","onToggleItemExpanded","setActiveType","getActiveType","isEditing","getAvailableHeight","calculatedHeight","smallOriginalH","getItemHeightPx","headerRef","clientHeight","memoizedGetContentHeight","contentRef","offsetHeight","getAvailableWidth","rect","getBoundingClientRect","ITEM_CONTENT_PADDING","measuredHeight","preferMeasured","updateVisualization","e","onfullscreenchange","onwebkitfullscreenchange","componentWillUnmount","componentDidUpdate","prevProps","gridWidth","setViewportSize","clientWidth","getVisualizationName","shortened","Consumer","Function","prototype","backgroundColor","grey200","border","Line","PRIVATE","messageTypes","VALIDATION_RESULT","TICKET","SYSTEM","list","listStyleType","paddingLeft","seeAll","marginBottom","sender","lineHeight","snippet","maxHeight","overflow","MessagesContainer","setUiLocale","userSettings","getUiLocale","getMessageHref","msg","msgIdentifier","messageType","modeClass","latestMsg","slice","getMessageSender","readClass","read","msgDate","location","messageCount","getMessageItems","NotSupportedItem","display","justifyContent","alignItems","align","grey500","DeleteIcon","getItemTitle","tRemoveListItemContent","dashboardItem","listItemType","newContent","contentItems","index","findIndex","getContentItems","contentItem","deleteButton","deletebutton","deleteicon","grey900","Description","itemicon","SET_PRINT_DASHBOARD","CLEAR_PRINT_DASHBOARD","ADD_PRINT_DASHBOARD_ITEM","SET_PRINT_DASHBOARD_LAYOUT","REMOVE_PRINT_DASHBOARD_ITEM","UPDATE_PRINT_DASHBOARD_ITEM","DEFAULT_STATE_PRINT_DASHBOARD","DEFAULT_DASHBOARD_ITEMS","NEW_PRINT_DASHBOARD_STATE","sGetPrintDashboardRoot","printDashboard","sGetIsPrinting","sGetPrintDashboardItems","textDiv","whiteSpace","textField","fontStretch","onChangeText","updatedItem","viewItem","textDivStyle","editItem","onEdit","multiline","fullWidth","printItem","textItem","getIframeSrc","appDetails","iframeSrc","ouIds","ouFilter","path","appKey","system","installedApps","app","dashboardWidget","src","SpacerItem","PageBreakItem","PrintTitlePageItem","titlePage","filterTitle","listItems","filterListItem","val","filterList","getItemFilterList","viewDashboard","sGetPrintDashboardName","sGetPrintDashboardDescription","GridItem","VisualizationItem","MessagesItem","ListItem","TextItem","AppItem","getGridItem","ProgressiveLoadingContainer","shouldLoad","shouldLoadHandler","handlerOptions","passive","checkShouldLoad","bufferPx","bufferFactor","bottom","top","removeHandler","registerHandler","debounceMs","getElementsByClassName","componentDidMount","eventProps","pick","selectedDashboard","expandedItems","setExpandedItems","displayItems","setDisplayItems","layoutSm","setLayoutSm","setGridWidth","getItemsWithAdjustedHeight","sortBy","clickedId","isExpanded","newExpandedItems","expandedItem","expandedHeight","translucent","rowHeight","cols","lg","sm","breakpoints","SMALL_SCREEN_BREAKPOINT","layouts","compactType","containerPadding","isDraggable","isResizable","draggableCancel","onWidthChange","containerWidth","getItemComponent","styles","badgeContainer","borderRadius","white","badge","cursor","badgeRemove","textDecoration","marginLeft","FilterBadge","onRemove","count","FilterBar","onBadgeRemove","onBadgeClick","bar","removeItemFIlter","acSetPrintDashboard","acClearPrintDashboard","acAddPrintDashboardItem","acUpdatePrintDashboardItem","dashboardIsEditing","dashboardIsPrinting","controlBarRows","clearEditDashboard","clearPrintDashboard","dashboardHeight","ViewItemGrid","ItemSearchField","HeaderMenuItem","LaunchIcon","LaunchLink","launchLink","rel","InsertButton","buttonInsert","ContentMenuItem","onInsert","visType","ItemIcon","renderedItemIcon","visTypeIcons","menuItem","marginRight","singleItems","header","categorizedItems","listItemTypes","tAddListItemContent","dashboardItemIndex","hasMore","onChangeItemsLimit","seeMore","setSeeMore","addItem","newItem","itemUrl","showMoreButton","category","addToDashboard","ItemSelector","isOpen","setIsOpen","setFilter","setItems","maxOptions","setMaxOptions","Set","queryString","filterStr","then","catch","updateMaxOptions","delete","add","inputRef","maxWidth","menu","itemCount","allItems","concat","EditTitleBar","onChangeTitle","onChangeDescription","section","titleDescription","_","itemSelector","acUpdateDashboardLayout","onLayoutChange","newLayout","onResizeStop","oldItem","ConfirmDeleteDialog","dashboardName","onDeleteConfirmed","onContinueEditing","destructive","saveFailedMessage","deleteAccess","updateAccess","sGetIsNewDashboard","isPrintPreviewView","clearPrintPreview","saveDashboard","onDelete","onDiscardChanges","onTranslate","acSetDashboardDisplayName","showPrintPreview","useDataEngine","translationDlgIsOpen","setTranslationDlgIsOpen","setDashboard","confirmDeleteDlgIsOpen","setConfirmDeleteDlgIsOpen","failureAlert","useAlert","critical","dboard","onConfirmDelete","onSave","newId","show","onPrintPreview","onTranslationsSaved","translations","dbLocale","translation","property","toggleTranslationDialog","discardBtnText","editBar","objectToTranslate","modelDefinition","fieldsToTranslate","onTranslationSaved","onTranslationError","NotSupportedNotice","noticeContainer","PrintInfo","isLayout","layoutStyle","printSuggestions","divider","LessHorizontalIcon","PrintActionsBar","isSmall","inner","LessHorizontal","print","topMargin","getTransformYPx","elStyle","transformY","match","parseInt","isLeapPage","n","getMultiple","factor","multiple","StaticGrid","PrintLayoutItemGrid","updateDashboardLayout","isFirstPageBreak","pageBreaks","sortedPageBreaks","itemClassNames","getItemComponents","hideExtraPageBreaks","sortedElements","elements","types","elementsWithBoundingRect","from","classList","indexOf","bottomY","getDomGridItemsSortedByYPos","querySelectorAll","pageBreakBottom","lastItemBottom","foundNonPageBreak","thisItemBottom","gridElement","firstBreak","scrollArea","EDIT_BAR_HEIGHT","addPageBreaks","addDashboardItem","yPosList","pageNum","getPageBreakPositions","fromEdit","setPrintDashboard","updateDashboardItem","actionBarHeight","wrapper","paddingTop","spacers","dp24","pageOuter","setEditDashboard","renderGrid","setNewDashboard","removeDashboardItem","sortedItems","spacerCount","dashboardMap","dashboardsIsEmpty","dashboardsLoaded","routeId","selectDashboard","dashboardToSelect","preferredId","getItem","dash","sGetDashboardsSortedByStarred","getElementsByTagName","remove","setHeaderbarVisibility","onHidden","permanent","filteredDimensions","dim","dimensionType","dataDimensionType","fetchDashboards","setControlBarRows","apiGetControlBarRows","setCurrentUser","setShowDescription","apiGetShowDescription","apiFetchDimensions","getFilteredDimensions","fetchDimensions","exact","AlertBar","DEFAULT_STATE_STYLE","objectClean","conversations","$merge","d2Object","keyUiLocale","authorities","newState","$splice","$unshift","idToRemove","stateItems","layoutHasChanged","newStateItems","stateItem","si","configureStore","middleware","thunk","withExtraArgument","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducer","applyMiddleware","addResources","arTranslations","ar_IQTranslations","ckbTranslations","csTranslations","daTranslations","enTranslations","esTranslations","frTranslations","idTranslations","kmTranslations","loTranslations","myTranslations","nbTranslations","prsTranslations","psTranslations","ptTranslations","pt_BRTranslations","ruTranslations","svTranslations","tetTranslations","tgTranslations","ukTranslations","urTranslations","uzTranslations","uz_CyrlTranslations","uz_LatnTranslations","viTranslations","zhTranslations","zh_CNTranslations","schemas","authorization","process","REACT_APP_DHIS2_AUTHORIZATION","headers","AppWrapper","store","theme","createMuiTheme","dhis2theme","i18nRoot","reportTable","chart","eventReport","eventChart","itemTypeToExternalPlugin","getPlugin","hasIntegratedPlugin","config","plugin","loadingIndicator","loadPlugin","resize"],"mappings":"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","file":"static/js/app.668c418f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ControlBar_root__iikeX\",\"dragging\":\"ControlBar_dragging__3lq79\",\"content\":\"ControlBar_content__26Z33\",\"draghandle\":\"ControlBar_draghandle__27zum\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"DashboardItemChip_link__21drZ\",\"icon\":\"DashboardItemChip_icon__2hcIR\",\"selected\":\"DashboardItemChip_selected__r00uP\",\"unselected\":\"DashboardItemChip_unselected__2H9l2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ClearButton_button__33ZbK\",\"icon\":\"ClearButton_icon__vTJm3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Filter_container__1Vxdh\",\"input\":\"Filter_input__14lhU\",\"focused\":\"Filter_focused__Lvyz3\",\"searchIcon\":\"Filter_searchIcon__2ojUp\",\"searchButton\":\"Filter_searchButton__1tMTB\",\"searchIconContainer\":\"Filter_searchIconContainer__2luF5\",\"clearButtonContainer\":\"Filter_clearButtonContainer__pt2SM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ShowMoreButton_container__riJz_\",\"showMore\":\"ShowMoreButton_showMore__3S3He\",\"disabled\":\"ShowMoreButton_disabled__2FQNA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"DashboardsBar_container__1xuCo\",\"expanded\":\"DashboardsBar_expanded__3lVl8\",\"controls\":\"DashboardsBar_controls__3PhmY\",\"newLink\":\"DashboardsBar_newLink__2PkLQ\",\"collapsed\":\"DashboardsBar_collapsed__3CY9n\",\"chipContainer\":\"DashboardsBar_chipContainer__IRxuN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonContainer\":\"FilterSelector_buttonContainer__O_amY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ViewTitleBar_container__VivO0\",\"actions\":\"ViewTitleBar_actions__2UTRz\",\"editLink\":\"ViewTitleBar_editLink__d_HzW\",\"titleBar\":\"ViewTitleBar_titleBar__eiwJS\",\"titleBarIcon\":\"ViewTitleBar_titleBarIcon__2cBxv\",\"strip\":\"ViewTitleBar_strip__3xR4U\",\"title\":\"ViewTitleBar_title__2GhTR\",\"descContainer\":\"ViewTitleBar_descContainer__3rF10\",\"desc\":\"ViewTitleBar_desc__3QW6Z\",\"noDesc\":\"ViewTitleBar_noDesc__Jettc\",\"moreText\":\"ViewTitleBar_moreText__3yHR0\",\"moreButtonSmall\":\"ViewTitleBar_moreButtonSmall__1ajrf\",\"shareButton\":\"ViewTitleBar_shareButton__3yEKR\",\"moreButton\":\"ViewTitleBar_moreButton__1HduK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"NoVisualizationMessage_message__22IPi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"center\":\"LoadingMask_center__KHIYy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FatalErrorBoundary_container__3SViR\",\"icon\":\"FatalErrorBoundary_icon__2UbeP\",\"message\":\"FatalErrorBoundary_message__3FzrY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"deleteItemButton\":\"DeleteItemButton_deleteItemButton__3TJm9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"warning\":\"PrintItemInfo_warning__123PK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"line\":\"ItemFooter_line__3Ko0R\",\"scrollContainer\":\"ItemFooter_scrollContainer__tuq4P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Item_list__1_nkQ\",\"item\":\"Item_item__3-6QE\",\"itemicon\":\"Item_itemicon__QlouX\",\"link\":\"Item_link___3c_q\",\"deleteicon\":\"Item_deleteicon__3usrl\",\"deletebutton\":\"Item_deletebutton__1DpBW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"titlePage\":\"Item_titlePage__18CNQ\",\"name\":\"Item_name__3nuTV\",\"description\":\"Item_description__1gFQd\",\"filterTitle\":\"Item_filterTitle__2p7TQ\",\"filterList\":\"Item_filterList__qc_G3\",\"filterListItem\":\"Item_filterListItem__sPbBY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bar\":\"FilterBar_bar__1Ma3p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"HeaderMenuItem_item__313hC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuItem\":\"ContentMenuItem_menuItem__vbKn3\",\"launchLink\":\"ContentMenuItem_launchLink__2Nql9\",\"label\":\"ContentMenuItem_label__ANfH1\",\"buttonInsert\":\"ContentMenuItem_buttonInsert__1joHg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"showMoreButton\":\"CategorizedMenuGroup_showMoreButton__2RbRp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"ItemSelector_menu__2VYae\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"EditTitleBar_section__LIaIC\",\"titleDescription\":\"EditTitleBar_titleDescription__1YsU6\",\"title\":\"EditTitleBar_title__3mUbt\",\"description\":\"EditTitleBar_description__24U5X\",\"itemSelector\":\"EditTitleBar_itemSelector__1cFEp\"};","import i18n from '@dhis2/d2-i18n';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\nimport ExtensionIcon from '@material-ui/icons/Extension';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport PersonIcon from '@material-ui/icons/Person';\nimport FontDownloadIcon from '@material-ui/icons/FontDownload';\nimport EmailIcon from '@material-ui/icons/Email';\nimport CropFreeIcon from '@material-ui/icons/CropFree';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested'; // Item types\n\nexport const VISUALIZATION = 'VISUALIZATION';\nexport const REPORT_TABLE = 'REPORT_TABLE';\nexport const CHART = 'CHART';\nexport const MAP = 'MAP';\nexport const EVENT_REPORT = 'EVENT_REPORT';\nexport const EVENT_CHART = 'EVENT_CHART';\nexport const APP = 'APP';\nexport const REPORTS = 'REPORTS';\nexport const RESOURCES = 'RESOURCES';\nexport const USERS = 'USERS';\nexport const MESSAGES = 'MESSAGES';\nexport const TEXT = 'TEXT';\nexport const SPACER = 'SPACER';\nexport const PAGEBREAK = 'PAGEBREAK';\nexport const PRINT_TITLE_PAGE = 'PRINT_TITLE_PAGE';\nconst DOMAIN_TYPE_AGGREGATE = 'AGGREGATE';\nconst DOMAIN_TYPE_TRACKER = 'TRACKER'; // Dashboard helpers\n\nexport const isVisualizationType = item => !!itemTypeMap[item.type].isVisualizationType;\nexport const hasMapView = itemType => itemTypeMap[itemType].domainType === DOMAIN_TYPE_AGGREGATE;\nexport const isTrackerDomainType = itemType => itemTypeMap[itemType].domainType === DOMAIN_TYPE_TRACKER;\nexport const getDefaultItemCount = itemType => itemTypeMap[itemType].defaultItemCount || 5;\nexport const getAppName = itemType => itemTypeMap[itemType].appName || ''; // Item type map\n\nexport const itemTypeMap = {\n  [VISUALIZATION]: {\n    id: VISUALIZATION,\n    endPointName: 'visualizations',\n    propName: 'visualization',\n    pluralTitle: i18n.t('Visualizations'),\n    appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n    appName: 'Data Visualizer',\n    defaultItemCount: 10\n  },\n  [REPORT_TABLE]: {\n    id: REPORT_TABLE,\n    endPointName: 'visualizations',\n    dataStatisticsName: 'REPORT_TABLE_VIEW',\n    propName: 'visualization',\n    pluralTitle: i18n.t('Pivot tables'),\n    domainType: DOMAIN_TYPE_AGGREGATE,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n    appName: 'Data Visualizer'\n  },\n  [CHART]: {\n    id: CHART,\n    endPointName: 'visualizations',\n    propName: 'visualization',\n    dataStatisticsName: 'CHART_VIEW',\n    pluralTitle: i18n.t('Charts'),\n    domainType: DOMAIN_TYPE_AGGREGATE,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n    appName: 'Data Visualizer'\n  },\n  [MAP]: {\n    id: MAP,\n    endPointName: 'maps',\n    dataStatisticsName: 'MAP_VIEW',\n    propName: 'map',\n    pluralTitle: i18n.t('Maps'),\n    domainType: DOMAIN_TYPE_AGGREGATE,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-maps/?id=${id}`,\n    appName: 'Maps'\n  },\n  [EVENT_REPORT]: {\n    id: EVENT_REPORT,\n    endPointName: 'eventReports',\n    propName: 'eventReport',\n    pluralTitle: i18n.t('Event reports'),\n    domainType: DOMAIN_TYPE_TRACKER,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-event-reports/?id=${id}`,\n    appName: 'Event Reports'\n  },\n  [EVENT_CHART]: {\n    id: EVENT_CHART,\n    endPointName: 'eventCharts',\n    propName: 'eventChart',\n    pluralTitle: i18n.t('Event charts'),\n    domainType: DOMAIN_TYPE_TRACKER,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-event-visualizer/?id=${id}`,\n    appName: 'Event Visualizer'\n  },\n  [APP]: {\n    endPointName: 'apps',\n    propName: 'appKey',\n    pluralTitle: i18n.t('Apps')\n  },\n  [REPORTS]: {\n    id: REPORTS,\n    endPointName: 'reports',\n    propName: 'reports',\n    pluralTitle: i18n.t('Reports'),\n    appUrl: (id, type) => {\n      switch (type) {\n        case 'HTML':\n          return `dhis-web-reports/#/standard-report/view/${id}`;\n\n        case 'JASPER_REPORT_TABLE':\n        case 'JASPER_JDBC':\n        default:\n          return `api/reports/${id}/data.pdf?t=${new Date().getTime()}`;\n      }\n    }\n  },\n  [RESOURCES]: {\n    id: RESOURCES,\n    endPointName: 'resources',\n    propName: 'resources',\n    pluralTitle: i18n.t('Resources'),\n    appUrl: id => `api/documents/${id}/data`\n  },\n  [USERS]: {\n    id: USERS,\n    endPointName: 'users',\n    propName: 'users',\n    pluralTitle: i18n.t('Users'),\n    appUrl: id => `dhis-web-dashboard-integration/profile.action?id=${id}`\n  },\n  [TEXT]: {\n    id: TEXT,\n    propName: 'text'\n  },\n  [MESSAGES]: {\n    propName: 'messages'\n  },\n  [SPACER]: {\n    propName: 'text'\n  },\n  [PAGEBREAK]: {\n    propName: 'text'\n  },\n  [PRINT_TITLE_PAGE]: {\n    propName: 'text'\n  }\n};\nexport const getEndPointName = type => itemTypeMap[type].endPointName;\nexport const getDataStatisticsName = type => itemTypeMap[type].dataStatisticsName || null;\nexport const getItemUrl = (type, item, baseUrl) => {\n  let url;\n\n  if (type === APP) {\n    url = item.launchUrl;\n  }\n\n  if (itemTypeMap[type] && itemTypeMap[type].appUrl) {\n    url = `${baseUrl}/${itemTypeMap[type].appUrl(item.id, item.type)}`;\n  }\n\n  return url;\n};\nexport const getItemIcon = type => {\n  switch (type) {\n    case REPORT_TABLE:\n    case EVENT_REPORT:\n    case REPORTS:\n      return TableIcon;\n\n    case CHART:\n    case EVENT_CHART:\n      return ChartIcon;\n\n    case MAP:\n      return MapIcon;\n\n    case APP:\n      return ExtensionIcon;\n\n    case RESOURCES:\n      return DescriptionIcon;\n\n    case USERS:\n      return PersonIcon;\n\n    case TEXT:\n      return FontDownloadIcon;\n\n    case MESSAGES:\n      return EmailIcon;\n\n    case SPACER:\n      return CropFreeIcon;\n\n    default:\n      return NotInterestedIcon;\n  }\n};","import isObject from 'lodash/isObject'; // validation\n\nexport function orNull(param) {\n  return param === undefined ? null : param;\n}\nexport function orArray(param) {\n  return Array.isArray(param) ? param : [];\n}\nexport function orObject(param) {\n  return isObject(param) ? param : {};\n} // array\n\nexport function arrayGetById(array, id) {\n  return array.find(item => item.id === id);\n} // object\n\nexport function arrayToIdMap(array) {\n  return array.reduce((obj, item) => {\n    obj[item.id] = item;\n    return obj;\n  }, {});\n} // date\n\nexport function getDate() {\n  const y = Math.floor(Math.random() * 3) + 2015;\n  const M = Math.floor(Math.random() * 12) + 1;\n  const d = Math.floor(Math.random() * 28) + 1; // const h = Math.floor(Math.random() * 23) + 1;\n  // const m = Math.floor(Math.random() * 59) + 1;\n  // const s = Math.floor(Math.random() * 59) + 1;\n\n  return new Date(`${y}-${M}-${d}`).toJSON().replace('T', ' ').substr(0, 10);\n}\nexport const formatDate = (value, uiLocale) => {\n  if (typeof global.Intl !== 'undefined' && Intl.DateTimeFormat) {\n    const locale = uiLocale || 'en';\n    return new Intl.DateTimeFormat(locale, {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    }).format(new Date(value));\n  }\n\n  return value.substr(0, 19).replace('T', ' ');\n};\n/**\n * Sorts an array of objects based on provided date property\n *\n * @param {Array} items Array of objects\n * @param {String} dateProp Name of the date property to be used for sorting\n * @param {Boolean} ascending Whether to sort ascending or descending\n */\n\nexport const sortByDate = (items, dateProp, ascending = true) => {\n  const values = Object.values(items);\n  values.sort((a, b) => {\n    const aDate = new Date(a[dateProp]);\n    const bDate = new Date(b[dateProp]);\n    return ascending ? aDate - bDate : bDate - aDate;\n  });\n  return values;\n}; // reducer validator\n\nexport const validateReducer = (value, defaultValue) => value === undefined || value === null ? defaultValue : value;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ConfirmDeleteDialog_content__EqswE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editBar\":\"EditBar_editBar__1d1xM\",\"controls\":\"EditBar_controls__1t0nO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noticeContainer\":\"NotSupportedNotice_noticeContainer__3z9Up\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PrintInfo_container__9gH0b\",\"title\":\"PrintInfo_title__2_VZd\",\"printSuggestions\":\"PrintInfo_printSuggestions__30tcU\",\"divider\":\"PrintInfo_divider__3wzx9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PrintActionsBar_container__2iQp7\",\"topMargin\":\"PrintActionsBar_topMargin__OpYDN\",\"inner\":\"PrintActionsBar_inner__uBqU7\",\"link\":\"PrintActionsBar_link__lFUmI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"PrintLayoutDashboard_wrapper__1WDh4\",\"pageOuter\":\"PrintLayoutDashboard_pageOuter__22acI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"PrintDashboard_wrapper__1O3s_\",\"pageOuter\":\"PrintDashboard_pageOuter__fl9tw\"};","import React, { createContext, useContext, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash/debounce';\nexport const WindowDimensionsCtx = createContext(null);\n\nconst windowDims = () => ({\n  height: window.innerHeight,\n  width: window.innerWidth\n});\n\nconst WindowDimensionsProvider = ({\n  children\n}) => {\n  const [dimensions, setDimensions] = useState(windowDims());\n  useEffect(() => {\n    const handleResize = debounce(() => {\n      setDimensions(windowDims());\n    }, 200);\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n  return <WindowDimensionsCtx.Provider value={dimensions}>\n            {children}\n        </WindowDimensionsCtx.Provider>;\n};\n\nWindowDimensionsProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};\nexport default WindowDimensionsProvider;\nexport const useWindowDimensions = () => {\n  return useContext(WindowDimensionsCtx);\n};","const SYSTEM_SETTINGS = ['keyGatherAnalyticalObjectStatisticsInDashboardViews'];\nconst query = {\n  systemSettings: {\n    resource: `systemSettings?${SYSTEM_SETTINGS.map(s => `key=${s}`).join('&')}`\n  }\n};\nexport default query;","import React, { useContext, useState, useEffect, createContext } from 'react';\nimport PropTypes from 'prop-types';\nimport settingsQuery from '../api/settings';\nexport const DEFAULT_SETTINGS = {\n  displayNameProperty: 'displayName',\n  keyGatherAnalyticalObjectStatisticsInDashboardViews: false\n};\nexport const SystemSettingsCtx = createContext({});\n\nconst SystemSettingsProvider = ({\n  engine,\n  children\n}) => {\n  const [settings, setSettings] = useState([]);\n  useEffect(() => {\n    async function fetchData() {\n      const {\n        systemSettings\n      } = await engine.query(settingsQuery);\n      setSettings(Object.assign({}, DEFAULT_SETTINGS, systemSettings));\n    }\n\n    fetchData();\n  }, []);\n  return <SystemSettingsCtx.Provider value={{\n    settings\n  }}>\n            {children}\n        </SystemSettingsCtx.Provider>;\n};\n\nSystemSettingsProvider.propTypes = {\n  children: PropTypes.node,\n  engine: PropTypes.object\n};\nexport default SystemSettingsProvider;\nexport const useSystemSettings = () => useContext(SystemSettingsCtx);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport classes from './styles/ControlBar.module.css'; //Matches the height of .dragHandle in ControlBar.module.css\n\nexport const DRAG_HANDLE_HEIGHT = 7;\n\nclass ControlBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dragging: false\n    };\n  }\n\n  onStartDrag = () => {\n    this.setState({\n      dragging: true\n    });\n    window.addEventListener('mousemove', this.onDrag);\n    window.addEventListener('mouseup', this.onEndDrag);\n  };\n  onDrag = event => {\n    event.preventDefault();\n    event.stopPropagation();\n    const newHeight = event.clientY;\n\n    if (this.props.onChangeHeight && newHeight !== this.props.height && newHeight > 0) {\n      requestAnimationFrame(() => {\n        this.props.onChangeHeight(newHeight);\n      });\n    }\n  };\n  onEndDrag = () => {\n    this.setState({\n      dragging: false\n    });\n    window.removeEventListener('mousemove', this.onDrag);\n    window.removeEventListener('mouseup', this.onEndDrag);\n\n    if (this.props.onEndDrag) {\n      this.props.onEndDrag();\n    }\n  };\n  renderDragHandle = () => typeof this.props.onChangeHeight === 'function' && <div className={classes.draghandle} onMouseDown={this.onStartDrag} data-testid=\"controlbar-drag-handle\" />;\n\n  render() {\n    const height = Math.max(this.props.height, 0) + DRAG_HANDLE_HEIGHT;\n    const rootClass = cx(classes.root, this.state.dragging && classes.dragging);\n    return <div style={{\n      height\n    }} className={rootClass}>\n                <div className={classes.content}>{this.props.children}</div>\n                {this.renderDragHandle()}\n            </div>;\n  }\n\n}\n\nControlBar.propTypes = {\n  /**\n   * The height of the control bar in number of lines. Must be a positive integer.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Callback function that is called when the control bar is resized.\n   * The callback receives one argument: The new height in pixels.\n   *\n   * If no callback is specified the control bar will not have a drag handle.\n   */\n  height: PropTypes.number.isRequired,\n\n  /**\n   * Callback function that is called when the control bar is dropped after being dragged.\n   * The callback receives one argument: The new height in pixels.\n   *\n   * Ignored if no \"onChangeHeight\" function is provided.\n   */\n  onChangeHeight: PropTypes.func,\n\n  /**\n   * The contents of the control bar.\n   */\n  onEndDrag: PropTypes.func\n};\nControlBar.defaultProps = {\n  onChangeHeight: null,\n  onEndDrag: null\n};\nexport default ControlBar;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst StarIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>;\n\nStarIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default StarIcon;","import { getInstance } from 'd2';\nexport const apiPostDataStatistics = async (eventType, id) => {\n  const d2 = await getInstance();\n  const url = `dataStatistics?eventType=${eventType}&favorite=${id}`;\n  d2.Api.getApi().post(url);\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Chip } from '@dhis2/ui';\nimport { Link } from 'react-router-dom';\nimport debounce from 'lodash/debounce';\nimport StarIcon from '../../icons/Star';\nimport { apiPostDataStatistics } from '../../api/dataStatistics';\nimport classes from './styles/DashboardItemChip.module.css';\nexport const DashboardItemChip = ({\n  starred,\n  selected,\n  label,\n  dashboardId,\n  onClick\n}) => {\n  const chipProps = {\n    selected\n  };\n\n  if (starred) {\n    const selectedState = selected ? classes.selected : classes.unselected;\n    chipProps.icon = <StarIcon className={`${classes.icon} ${selectedState}`} />;\n  }\n\n  const debouncedPostStatistics = debounce(() => apiPostDataStatistics('DASHBOARD_VIEW', dashboardId), 500);\n\n  const handleClick = () => {\n    debouncedPostStatistics();\n    onClick();\n  };\n\n  return <Link className={classes.link} to={`/${dashboardId}`} onClick={handleClick} data-test=\"dashboard-chip\">\n            <Chip {...chipProps}>{label}</Chip>\n        </Link>;\n};\nDashboardItemChip.propTypes = {\n  dashboardId: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  selected: PropTypes.bool.isRequired,\n  starred: PropTypes.bool.isRequired,\n  onClick: PropTypes.func.isRequired,\n  classes: PropTypes.object\n};\nexport default DashboardItemChip;","import React from 'react';\nimport { colors } from '@dhis2/ui';\n\nconst AddCircleIcon = () => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" fill={colors.teal600} viewBox=\"0 0 24 24\">\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm4 11h-3v3c0 .55-.45 1-1 1s-1-.45-1-1v-3H8c-.55 0-1-.45-1-1s.45-1 1-1h3V8c0-.55.45-1 1-1s1 .45 1 1v3h3c.55 0 1 .45 1 1s-.45 1-1 1z\" />\n    </svg>;\n\nexport default AddCircleIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst SearchIcon = ({\n  className,\n  small\n}) => small ? <svg className={className} height=\"16\" viewBox=\"0 0 16 16\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"m6 1c2.76142375 0 5 2.23857625 5 5 0 1.20065927-.4231997 2.30247496-1.12856994 3.16441794l4.48212334 4.48202866-.7071068.7071068-4.48202866-4.48212334c-.86194298.70537024-1.96375867 1.12856994-3.16441794 1.12856994-2.76142375 0-5-2.23857625-5-5s2.23857625-5 5-5zm0 1c-2.209139 0-4 1.790861-4 4s1.790861 4 4 4 4-1.790861 4-4-1.790861-4-4-4z\" fill=\"#010101\" />\n        </svg> : <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n            <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n            <path d=\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\" />\n        </svg>;\n\nSearchIcon.propTypes = {\n  className: PropTypes.string,\n  small: PropTypes.bool\n};\nexport default SearchIcon;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst ClearIcon = ({\n  className\n}) => <svg className={className} fill={colors.grey800} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n        <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>;\n\nClearIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default ClearIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ClearIcon from '../../icons/Clear';\nimport classes from './styles/ClearButton.module.css';\nexport const ClearButton = ({\n  onClear\n}) => <button className={classes.button} onClick={onClear}>\n        <span>\n            <ClearIcon className={classes.icon} color=\"action\" />\n        </span>\n    </button>;\nClearButton.propTypes = {\n  onClear: PropTypes.func.isRequired\n};\nexport default ClearButton;","import { validateReducer } from '../modules/util';\nexport const SET_DASHBOARDS_FILTER = 'SET_DASHBOARDS_FILTER';\nexport const CLEAR_DASHBOARDS_FILTER = 'CLEAR_DASHBOARDS_FILTER';\nexport const DEFAULT_STATE_DASHBOARDS_FILTER = '';\nexport default ((state = DEFAULT_STATE_DASHBOARDS_FILTER, action) => {\n  switch (action.type) {\n    case SET_DASHBOARDS_FILTER:\n      {\n        return validateReducer(action.value, DEFAULT_STATE_DASHBOARDS_FILTER);\n      }\n\n    case CLEAR_DASHBOARDS_FILTER:\n      {\n        return DEFAULT_STATE_DASHBOARDS_FILTER;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetDashboardsFilter = state => state.dashboardsFilter;","// Dimensions for the react-grid-layout\nimport sortBy from 'lodash/sortBy';\nimport { isVisualizationType } from './itemTypes';\nimport { isSmallScreen } from './smallScreen';\nexport const GRID_COMPACT_TYPE = 'vertical'; // vertical | horizonal | null\n\nexport const GRID_ROW_HEIGHT_PX = 10;\nexport const MARGIN_PX = [10, 10];\nconst SM_SCREEN_MIN_ITEM_GRID_HEIGHT = 13; // minimum of ~320px\n\nexport const SM_SCREEN_GRID_COLUMNS = 1;\nexport const MARGIN_SM_PX = [0, 16];\nexport const GRID_PADDING_PX = [0, 0]; // sum of left+right padding of dashboard-wrapper (App.css)\n\nexport const DASHBOARD_WRAPPER_LR_MARGIN_PX = 32; // make an assumption about the original item w/h ratio\n// assumes grid width of ~1200px at time dashboard was created\n\nconst GRID_COL_WIDTH_PX = 10;\nexport const GRID_COLUMNS = 60; // Dimensions for getShape\n\nexport const NEW_ITEM_SHAPE = {\n  x: 0,\n  y: 0,\n  w: 20,\n  h: 29\n};\nconst NUMBER_OF_ITEM_COLS = 2;\nconst MAX_ITEM_GRID_WIDTH = GRID_COLUMNS - 1;\nexport const MAX_ITEM_GRID_HEIGHT = 34;\nexport const MAX_ITEM_GRID_HEIGHT_OIPP = 35;\nexport const MAX_ITEM_GRID_WIDTH_OIPP = 56;\nconst MIN_ITEM_GRID_HEIGHT = 4; // isNonNegativeInteger\n\nconst isNonNegativeInteger = x => Number.isInteger(x) && x >= 0; // Does the item have all the shape properties?\n\n\nexport const hasShape = item => isNonNegativeInteger(item.x) && isNonNegativeInteger(item.y) && isNonNegativeInteger(item.w) && isNonNegativeInteger(item.h); // returns a rectangular grid block dimensioned with x, y, w, h in grid units.\n// based on a grid with 3 items across\n\nconst getShape = i => {\n  const col = i % NUMBER_OF_ITEM_COLS;\n  const row = Math.floor(i / NUMBER_OF_ITEM_COLS);\n  const itemWidth = Math.floor(MAX_ITEM_GRID_WIDTH / NUMBER_OF_ITEM_COLS);\n  const itemHeight = GRID_ROW_HEIGHT_PX * 2;\n  return {\n    x: col * itemWidth,\n    y: row * itemHeight,\n    w: itemWidth,\n    h: itemHeight\n  };\n};\n/**\n * Returns an array of items containing the x, y, w, h dimensions\n * and the item's originalheight in pixels\n * and dimensions to create the small layout (x, y, w, h)\n * @function\n * @param {Array} items\n * @returns {Array}\n */\n\n\nexport const withShape = (items = []) => {\n  const itemsWithShape = items.map((item, i) => hasShape(item) ? item : Object.assign({}, item, getShape(i)));\n  return itemsWithShape.map(item => Object.assign({}, item, {\n    originalH: item.h\n  }));\n};\nexport const getGridWidth = windowWidthPx => windowWidthPx - DASHBOARD_WRAPPER_LR_MARGIN_PX;\n\nconst getGridUnitsForSmFromPx = hPx => {\n  const gridUnitHeightPx = GRID_ROW_HEIGHT_PX + MARGIN_SM_PX[1];\n  return Math.round((hPx + MARGIN_SM_PX[1]) / gridUnitHeightPx);\n};\n\nexport const getProportionalHeight = (item, windowWidthPx) => {\n  // get w/h ratio of the original item\n  const wPx = getItemWHPx(item.w, GRID_COL_WIDTH_PX, MARGIN_PX[0]);\n  const hPx = getItemWHPx(item.h, GRID_ROW_HEIGHT_PX, MARGIN_PX[1]);\n  const ratioWH = wPx / hPx;\n\n  if (!isVisualizationType(item)) {\n    return getGridUnitsForSmFromPx(hPx);\n  }\n\n  const gridWidthPx = getGridWidth(windowWidthPx); // get new height in px based on the ratio\n\n  const newColWidthPx = (gridWidthPx - MARGIN_SM_PX[0] * (SM_SCREEN_GRID_COLUMNS - 1) - GRID_PADDING_PX[0] * 2) / SM_SCREEN_GRID_COLUMNS;\n  const newWPx = newColWidthPx * SM_SCREEN_GRID_COLUMNS;\n  const newHPx = Math.round(newWPx / ratioWH); //convert height in px back to grid units\n\n  const h = getGridUnitsForSmFromPx(newHPx); // item must be at least the set minimum\n\n  return h < SM_SCREEN_MIN_ITEM_GRID_HEIGHT ? SM_SCREEN_MIN_ITEM_GRID_HEIGHT : h;\n};\nexport const getSmallLayout = (items, windowWidthPx) => sortBy(items, ['y', 'x']).map((item, i) => Object.assign({}, item, {\n  x: 0,\n  y: i,\n  w: SM_SCREEN_GRID_COLUMNS,\n  h: getProportionalHeight(item, windowWidthPx)\n}));\nexport const getGridItemProperties = itemId => {\n  return {\n    i: itemId,\n    minH: MIN_ITEM_GRID_HEIGHT\n  };\n};\nexport const getPageBreakItemShape = (yPos, isStatic = true) => {\n  return {\n    x: 0,\n    y: yPos,\n    w: MAX_ITEM_GRID_WIDTH,\n    h: 5,\n    static: !!isStatic,\n    minH: 1\n  };\n};\nexport const getPrintTitlePageItemShape = isOneItemPerPage => {\n  return {\n    x: 0,\n    y: 0,\n    w: isOneItemPerPage ? MAX_ITEM_GRID_WIDTH_OIPP : MAX_ITEM_GRID_WIDTH,\n    h: MAX_ITEM_GRID_HEIGHT,\n    static: true,\n    minH: 1\n  };\n};\n/**\n * Calculates the grid item's height in pixels based\n * on the height in grid units. This calculation\n * is copied directly from react-grid-layout\n * calculateUtils.js (calcGridItemWHPx)\n *\n * Each row's px height is the sum of the GRID_ROW_HEIGHT_PX + MARGIN-Y\n * So the calculation is:\n * GRID_ROW_HEIGHT_PX * Number of rows\n * +\n * yMargin * Number of rows-1\n *\n * @param {Object} item item containing shape (x, y, w, h)\n */\n\nexport const getItemHeightPx = (item, windowWidthPx) => {\n  if (isSmallScreen(windowWidthPx)) {\n    const h = item.smallOriginalH ? item.smallOriginalH : getProportionalHeight(item, windowWidthPx);\n    return getItemWHPx(h, GRID_ROW_HEIGHT_PX, MARGIN_SM_PX[1]);\n  }\n\n  return getItemWHPx(item.originalH, GRID_ROW_HEIGHT_PX, MARGIN_PX[1]);\n};\n\nconst getItemWHPx = (gridUnits, colOrRowSize, marginPx) => Math.round(colOrRowSize * gridUnits + Math.max(0, gridUnits - 1) * marginPx);","import { DASHBOARD_WRAPPER_LR_MARGIN_PX } from './gridUtil';\nconst SMALL_SCREEN_BREAKPOINT = 480;\nexport const isSmallScreen = width => width <= SMALL_SCREEN_BREAKPOINT;\nexport const getBreakpoint = () => SMALL_SCREEN_BREAKPOINT - DASHBOARD_WRAPPER_LR_MARGIN_PX;","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport cx from 'classnames';\nimport SearchIcon from '../../icons/Search';\nimport ClearButton from './ClearButton';\nimport { useWindowDimensions } from '../WindowDimensionsProvider';\nimport { acSetDashboardsFilter, acClearDashboardsFilter } from '../../actions/dashboardsFilter';\nimport { sGetDashboardsFilter } from '../../reducers/dashboardsFilter';\nimport { isSmallScreen } from '../../modules/smallScreen';\nimport classes from './styles/Filter.module.css';\nexport const KEYCODE_ENTER = 13;\nexport const KEYCODE_ESCAPE = 27;\nexport const FilterUnconnected = ({\n  clearDashboardsFilter,\n  filterText,\n  isMaxHeight,\n  setDashboardsFilter,\n  onKeypressEnter,\n  onToggleMaxHeight\n}) => {\n  const [focusedClassName, setFocusedClassName] = useState('');\n  const [inputFocused, setInputFocus] = useState(false);\n  const {\n    width\n  } = useWindowDimensions();\n\n  const setFilterValue = event => {\n    event.preventDefault();\n    setDashboardsFilter(event.target.value);\n  };\n\n  const onKeyUp = event => {\n    switch (event.keyCode) {\n      case KEYCODE_ENTER:\n        onKeypressEnter();\n        clearDashboardsFilter();\n        break;\n\n      case KEYCODE_ESCAPE:\n        clearDashboardsFilter();\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const onFocus = event => {\n    event.preventDefault();\n    setFocusedClassName(classes.focused);\n  };\n\n  const onBlur = event => {\n    event.preventDefault();\n    setFocusedClassName('');\n  };\n\n  const onFocusInput = input => {\n    if (input && inputFocused && isSmallScreen(width)) {\n      return input.focus();\n    }\n  };\n\n  const toggleMaxHeight = () => {\n    onToggleMaxHeight();\n    setInputFocus(true);\n  };\n\n  return isSmallScreen(width) && !isMaxHeight ? <button className={classes.searchButton} onClick={toggleMaxHeight}>\n            <SearchIcon className={classes.searchIcon} />\n        </button> : <div className={cx(classes.container, `${focusedClassName}`)} onFocus={onFocus} onBlur={onBlur}>\n            <div className={classes.searchIconContainer}>\n                <SearchIcon className={classes.searchIcon} small={isSmallScreen(width) && isMaxHeight} />\n            </div>\n            <input className={classes.input} type=\"text\" placeholder={i18n.t('Search for a dashboard')} onChange={setFilterValue} onKeyUp={onKeyUp} value={filterText} data-test=\"search-dashboard-input\" ref={onFocusInput} />\n            {filterText && <div className={classes.clearButtonContainer}>\n                    <ClearButton onClear={clearDashboardsFilter} />\n                </div>}\n        </div>;\n};\nFilterUnconnected.propTypes = {\n  clearDashboardsFilter: PropTypes.func,\n  filterText: PropTypes.string,\n  isMaxHeight: PropTypes.bool,\n  setDashboardsFilter: PropTypes.func,\n  onKeypressEnter: PropTypes.func,\n  onToggleMaxHeight: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  filterText: sGetDashboardsFilter(state)\n});\n\nconst mapDispatchToProps = {\n  setDashboardsFilter: acSetDashboardsFilter,\n  clearDashboardsFilter: acClearDashboardsFilter\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterUnconnected);","import { SET_DASHBOARDS_FILTER, CLEAR_DASHBOARDS_FILTER } from '../reducers/dashboardsFilter'; // actions\n\nexport const acSetDashboardsFilter = value => ({\n  type: SET_DASHBOARDS_FILTER,\n  value\n});\nexport const acClearDashboardsFilter = () => ({\n  type: CLEAR_DASHBOARDS_FILTER\n});","import React from 'react';\nexport const ChevronDown = () => <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"m11.29289 15.7071c.39053.3905 1.02369.3905 1.41422 0l4.99999-4.99999c.3905-.39053.3905-1.02369 0-1.41422-.3905-.39052-1.0237-.39052-1.4142 0l-4.2929 4.2929-4.29289-4.2929c-.39053-.39052-1.02369-.39052-1.41422 0-.39052.39053-.39052 1.02369 0 1.41422z\" fill=\"#a0adba\" />\n    </svg>;\nexport const ChevronUp = () => <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"m11.2928932 8.29289322c.360484-.36048396.927715-.3882135 1.3200062-.08318861l.0942074.08318861 5 4.99999998c.3905243.3905243.3905243 1.0236893 0 1.4142136-.360484.3604839-.927715.3882135-1.3200062.0831886l-.0942074-.0831886-4.2928932-4.2921068-4.29289322 4.2921068c-.36048396.3604839-.92771502.3882135-1.32000622.0831886l-.09420734-.0831886c-.36048396-.360484-.3882135-.927715-.08318861-1.3200062l.08318861-.0942074z\" fill=\"#a0adba\" />\n    </svg>;","import React, { useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Tooltip } from '@dhis2/ui';\nimport { ChevronDown, ChevronUp } from './assets/icons';\nimport classes from './styles/ShowMoreButton.module.css';\nexport const SHOWMORE_BAR_HEIGHT = 16;\n\nconst ShowMoreButton = ({\n  onClick,\n  isMaxHeight,\n  disabled\n}) => {\n  const containerRef = useRef(null);\n  const buttonLabel = isMaxHeight ? i18n.t('Show fewer dashboards') : i18n.t('Show more dashboards');\n\n  const onButtonClicked = () => {\n    // The click may happen on the svg or path\n    // element of the button icon.\n    // In that case it is necessary to trigger\n    // the mouseout on the button element\n    // to ensure that the tooltip is removed\n    const buttonEl = containerRef.current.children[0];\n    const event = new MouseEvent('mouseout', {\n      bubbles: true,\n      cancelable: false\n    });\n    onClick();\n    buttonEl.dispatchEvent(event);\n  };\n\n  return <div className={classes.container} ref={containerRef}>\n            {disabled ? <div className={classes.disabled}>\n                    <ChevronDown />\n                </div> : <Tooltip content={buttonLabel} placement=\"bottom\">\n                    {({\n        onMouseOver,\n        onMouseOut,\n        ref\n      }) => <button className={classes.showMore} onClick={onButtonClicked} data-test=\"showmore-button\" aria-label={buttonLabel} ref={ref} onMouseOver={onMouseOver} onMouseOut={onMouseOut}>\n                            {isMaxHeight ? <ChevronUp /> : <ChevronDown />}\n                        </button>}\n                </Tooltip>}\n        </div>;\n};\n\nShowMoreButton.propTypes = {\n  disabled: PropTypes.bool,\n  isMaxHeight: PropTypes.bool,\n  onClick: PropTypes.func\n};\nexport default ShowMoreButton;","import { SHOWMORE_BAR_HEIGHT } from './ShowMoreButton';\nimport { DRAG_HANDLE_HEIGHT } from './ControlBar';\nexport const CONTROL_BAR_ROW_HEIGHT = 40;\nexport const FIRST_ROW_PADDING_HEIGHT = 10;\nexport const MIN_ROW_COUNT = 1;\nexport const HEADERBAR_HEIGHT = 48;\nexport const CONTROL_BAR_MARGIN_BOTTOM_SMALL = 32;\nexport const SEARCH_BAR_HEIGHT_SMALL = 40; // height (24px) + padding top and bottom (8px)\n// show more button\n\nexport const CONTROL_BAR_OUTER_HEIGHT_DIFF = FIRST_ROW_PADDING_HEIGHT + SHOWMORE_BAR_HEIGHT - 2; // 2 pixel \"adjustment\"\n\nexport const getRowsHeight = rows => {\n  return rows * CONTROL_BAR_ROW_HEIGHT;\n};\nexport const getNumRowsFromHeight = height => {\n  return Math.floor((height - CONTROL_BAR_OUTER_HEIGHT_DIFF) / CONTROL_BAR_ROW_HEIGHT);\n};\nexport const getControlBarHeight = rows => {\n  return getRowsHeight(rows) + CONTROL_BAR_OUTER_HEIGHT_DIFF;\n};\nexport const CONTROL_BAR = 'controlBar';\nexport const CONTROL_BAR_CONTAINER = 'controlBarContainer';\nexport const CHIPS_CONTAINER = 'chipsContainer';\nexport const CONTROL_BAR_COLLAPSED = 'controlBarCollapsed';\nexport const getControlBarHeightSmallDevice = (type, height) => {\n  const controlBarHeight = height - HEADERBAR_HEIGHT - CONTROL_BAR_MARGIN_BOTTOM_SMALL;\n\n  switch (type) {\n    // control bar height should be 100vh -32px\n    case CONTROL_BAR:\n      return controlBarHeight - DRAG_HANDLE_HEIGHT;\n\n    case CONTROL_BAR_CONTAINER:\n      return controlBarHeight - CONTROL_BAR_OUTER_HEIGHT_DIFF;\n\n    case CHIPS_CONTAINER:\n      return controlBarHeight - SEARCH_BAR_HEIGHT_SMALL - CONTROL_BAR_OUTER_HEIGHT_DIFF;\n\n    case CONTROL_BAR_COLLAPSED:\n    default:\n      return SEARCH_BAR_HEIGHT_SMALL + CONTROL_BAR_OUTER_HEIGHT_DIFF + DRAG_HANDLE_HEIGHT;\n  }\n};","/** @module reducers/controlBar */\nimport { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\nexport const SET_CONTROLBAR_USER_ROWS = 'SET_CONTROLBAR_USER_ROWS';\nexport const DEFAULT_STATE_CONTROLBAR_ROWS = 1;\n\nconst userRows = (state = DEFAULT_STATE_CONTROLBAR_ROWS, action) => {\n  switch (action.type) {\n    case SET_CONTROLBAR_USER_ROWS:\n      return validateReducer(action.value, DEFAULT_STATE_CONTROLBAR_ROWS);\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  userRows\n});\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\n\nexport const sGetControlBarRoot = state => state.controlBar; // Selector dependency level 2\n\nexport const sGetControlBarUserRows = state => sGetControlBarRoot(state).userRows;","import { TEXT, SPACER } from './itemTypes';\nimport { getGridItemProperties } from './gridUtil';\nexport const spacerContent = 'SPACER_ITEM_FOR_DASHBOARD_LAYOUT_CONVENIENCE';\nexport const emptyTextItemContent = 'TEXT_ITEM_WITH_NO_CONTENT';\n\nconst isBackendSpacerType = item => item.type === TEXT && item.text === spacerContent;\n\nconst isUiSpacerType = item => item.type === SPACER;\n\nconst isTextType = item => item.type === TEXT && item.text !== spacerContent;\n\nexport const convertUiItemsToBackend = items => items.map(item => {\n  let text = null;\n\n  if (isUiSpacerType(item)) {\n    text = spacerContent;\n  } else if (isTextType(item)) {\n    text = item.text || emptyTextItemContent;\n  }\n\n  return { ...item,\n    ...(text ? {\n      text\n    } : {})\n  };\n});\nexport const convertBackendItemsToUi = items => items.map(item => {\n  const type = isBackendSpacerType(item) ? SPACER : item.type;\n  const gridProperties = getGridItemProperties(item.id);\n  const text = isTextType(item) ? item.text === emptyTextItemContent ? '' : item.text : null;\n  return { ...item,\n    ...(text !== null ? {\n      text\n    } : {}),\n    type,\n    ...gridProperties\n  };\n});","/** @module reducers/dashboards */\nimport arrayFrom from 'd2-utilizr/lib/arrayFrom';\nimport arraySort from 'd2-utilizr/lib/arraySort';\nimport { orArray, orObject } from '../modules/util';\nimport { convertBackendItemsToUi } from '../modules/uiBackendItemConverter';\nexport const SET_DASHBOARDS = 'SET_DASHBOARDS';\nexport const ADD_DASHBOARDS = 'ADD_DASHBOARDS';\nexport const SET_DASHBOARD_STARRED = 'SET_DASHBOARD_STARRED';\nexport const SET_DASHBOARD_DISPLAY_NAME = 'SET_DASHBOARD_DISPLAY_NAME';\nexport const SET_DASHBOARD_ITEMS = 'SET_DASHBOARD_ITEMS';\nexport const DEFAULT_STATE_DASHBOARDS = {\n  byId: null,\n  items: []\n};\nexport const EMPTY_DASHBOARD = {}; // reducer helper functions\n\nconst updateDashboardProp = ({\n  state,\n  dashboardId,\n  prop,\n  value\n}) => ({\n  byId: { ...state.byId,\n    [dashboardId]: { ...state.byId[dashboardId],\n      [prop]: value\n    }\n  },\n  items: state.items\n});\n/**\n * Reducer that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n * @returns {Object}\n */\n\n\nexport default ((state = DEFAULT_STATE_DASHBOARDS, action) => {\n  switch (action.type) {\n    case SET_DASHBOARDS:\n      {\n        return {\n          byId: action.value,\n          items: []\n        };\n      }\n\n    case ADD_DASHBOARDS:\n      {\n        return { ...state,\n          byId: { ...state.byId,\n            ...action.value\n          }\n        };\n      }\n\n    case SET_DASHBOARD_STARRED:\n      {\n        return updateDashboardProp({\n          state,\n          dashboardId: action.dashboardId,\n          prop: 'starred',\n          value: action.value\n        });\n      }\n\n    case SET_DASHBOARD_DISPLAY_NAME:\n      {\n        return updateDashboardProp({\n          state,\n          dashboardId: action.dashboardId,\n          prop: 'displayName',\n          value: action.value\n        });\n      }\n\n    case SET_DASHBOARD_ITEMS:\n      {\n        return { ...state,\n          items: action.value\n        };\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetDashboardsRoot = state => state.dashboards; // selector level 1\n\n/**\n * Selector which returns a dashboard by id from the state object\n * If no matching dashboard is found it returns undefined\n * If dashboards.byId is null, then the dashboards api request\n * has not yet completed. If dashboards.byId is an empty object\n * then the dashboards api request is complete, but no dashboards\n * were returned\n *\n * @function\n * @param {Object} state The current state\n * @param {Number} id The id of the dashboard\n * @returns {Object | undefined}\n */\n\nexport const sGetDashboardById = (state, id) => orObject(sGetDashboardsRoot(state).byId)[id];\nexport const sDashboardsIsFetching = state => {\n  return sGetDashboardsRoot(state).byId === null;\n};\n/**\n * Selector which returns all dashboards (the byId object)\n *\n * @function\n * @param {Object} state The current state\n * @returns {Object | undefined}\n */\n\nexport const sGetAllDashboards = state => orObject(sGetDashboardsRoot(state).byId);\n/**\n * Selector which returns the current dashboard items\n *\n * @function\n * @param {Object} state The current state\n * @returns {Array}\n */\n\nexport const sGetDashboardItems = state => sGetDashboardsRoot(state).items; // selector level 2\n\nexport const sGetStarredDashboards = state => Object.values(sGetAllDashboards(state)).filter(dashboard => dashboard.starred === true);\nexport const sGetUnstarredDashboards = state => Object.values(sGetAllDashboards(state)).filter(dashboard => dashboard.starred === false); // selector level 3\n\nexport const sGetStarredDashboardIds = state => {\n  return sGetStarredDashboards(state).map(dashboard => dashboard.id);\n};\nexport const sGetUnstarredDashboardIds = state => sGetUnstarredDashboards(state).map(dashboard => dashboard.id);\nexport const sGetDashboardsSortedByStarred = state => [...arraySort(sGetStarredDashboards(state), 'ASC', 'displayName'), ...arraySort(sGetUnstarredDashboards(state), 'ASC', 'displayName')]; // utils\n\n/**\n * Returns the array of dashboards, customized for ui\n * @function\n * @param {Array} data The original dashboard list\n * @returns {Array}\n */\n\nexport const getCustomDashboards = data => arrayFrom(data).map(d => ({\n  id: d.id,\n  name: d.name,\n  displayName: d.displayName,\n  description: d.description,\n  displayDescription: d.displayDescription,\n  starred: d.favorite,\n  owner: d.user.name,\n  created: d.created.split('T').join(' ').substr(0, 16),\n  lastUpdated: d.lastUpdated.split('T').join(' ').substr(0, 16),\n  access: d.access,\n  numberOfItems: orArray(d.dashboardItems).length,\n  dashboardItems: convertBackendItemsToUi(d.dashboardItems)\n}));","/** @module reducers/selected */\nimport { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\nexport const SET_SELECTED_ID = 'SET_SELECTED_ID';\nexport const SET_SELECTED_ISLOADING = 'SET_SELECTED_ISLOADING';\nexport const SET_SELECTED_SHOWDESCRIPTION = 'SET_SELECTED_SHOWDESCRIPTION';\nexport const SET_SELECTED_ITEM_ACTIVE_TYPE = 'SET_SELECTED_ITEM_ACTIVE_TYPE';\nexport const CLEAR_SELECTED_ITEM_ACTIVE_TYPES = 'CLEAR_SELECTED_ITEM_ACTIVE_TYPES';\nexport const DEFAULT_STATE_SELECTED_ID = null;\nexport const DEFAULT_STATE_SELECTED_ISLOADING = false;\nexport const DEFAULT_STATE_SELECTED_SHOWDESCRIPTION = false;\nexport const DEFAULT_STATE_SELECTED_ITEM_ACTIVE_TYPES = {};\nexport const NON_EXISTING_DASHBOARD_ID = '0';\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\n\nconst id = (state = DEFAULT_STATE_SELECTED_ID, action) => {\n  switch (action.type) {\n    case SET_SELECTED_ID:\n      return validateReducer(action.value, DEFAULT_STATE_SELECTED_ID);\n\n    default:\n      return state;\n  }\n};\n\nconst isLoading = (state = DEFAULT_STATE_SELECTED_ISLOADING, action) => {\n  switch (action.type) {\n    case SET_SELECTED_ISLOADING:\n      return validateReducer(action.value, DEFAULT_STATE_SELECTED_ISLOADING);\n\n    default:\n      return state;\n  }\n};\n\nconst showDescription = (state = DEFAULT_STATE_SELECTED_SHOWDESCRIPTION, action) => {\n  switch (action.type) {\n    case SET_SELECTED_SHOWDESCRIPTION:\n      return validateReducer(action.value, DEFAULT_STATE_SELECTED_SHOWDESCRIPTION);\n\n    default:\n      return state;\n  }\n};\n\nconst itemActiveTypes = (state = DEFAULT_STATE_SELECTED_ITEM_ACTIVE_TYPES, action) => {\n  switch (action.type) {\n    case SET_SELECTED_ITEM_ACTIVE_TYPE:\n      {\n        return { ...state,\n          [action.id]: action.activeType\n        };\n      }\n\n    case CLEAR_SELECTED_ITEM_ACTIVE_TYPES:\n      {\n        return DEFAULT_STATE_SELECTED_ITEM_ACTIVE_TYPES;\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  id,\n  isLoading,\n  showDescription,\n  itemActiveTypes\n}); // Selectors\n\nexport const sGetSelectedRoot = state => state.selected;\nexport const sGetSelectedId = state => sGetSelectedRoot(state).id;\nexport const sGetSelectedIsLoading = state => sGetSelectedRoot(state).isLoading;\nexport const sGetSelectedShowDescription = state => sGetSelectedRoot(state).showDescription;\nexport const sGetSelectedItemActiveType = (state, id) => sGetSelectedRoot(state).itemActiveTypes[id];","import { getInstance } from 'd2';\nexport const NAMESPACE = 'dashboard';\nexport const hasNamespace = async (d2) => await d2.currentUser.dataStore.has(NAMESPACE);\nexport const getNamespace = async (d2, hasNamespace) => hasNamespace ? await d2.currentUser.dataStore.get(NAMESPACE) : await d2.currentUser.dataStore.create(NAMESPACE);\nexport const apiPostUserDataStoreValue = async (key, value) => {\n  const d2 = await getInstance();\n  const ns = await getNamespace(d2, hasNamespace);\n  ns.set(key, value);\n};\nexport const apiGetUserDataStoreValue = async (key, defaultValue) => {\n  const d2 = await getInstance();\n  const namespace = await getNamespace(d2, await hasNamespace(d2));\n  const hasKey = namespace?.keys?.find(k => k === key);\n\n  if (hasKey) {\n    return await namespace.get(key);\n  } else {\n    await apiPostUserDataStoreValue(key, defaultValue, namespace);\n    console.log('(These errors to /userDataStore can be ignored)');\n    return defaultValue;\n  }\n};","import { apiGetUserDataStoreValue, apiPostUserDataStoreValue } from './userDataStore';\nimport { DEFAULT_STATE_CONTROLBAR_ROWS } from '../reducers/controlBar';\nconst KEY_CONTROLBAR_ROWS = 'controlBarRows';\nexport const apiGetControlBarRows = async () => await apiGetUserDataStoreValue(KEY_CONTROLBAR_ROWS, DEFAULT_STATE_CONTROLBAR_ROWS);\nexport const apiPostControlBarRows = async (value) => await apiPostUserDataStoreValue(KEY_CONTROLBAR_ROWS, value);","import { SET_CONTROLBAR_USER_ROWS } from '../reducers/controlBar';\nimport { apiGetControlBarRows } from '../api/controlBar'; // actions\n\nexport const acSetControlBarUserRows = rows => ({\n  type: SET_CONTROLBAR_USER_ROWS,\n  value: rows\n}); // thunks\n\nexport const tSetControlBarRows = () => async dispatch => {\n  const onSuccess = rows => {\n    dispatch(acSetControlBarUserRows(rows));\n  };\n\n  const onError = error => {\n    console.log('Error (apiGetControlBarRows): ', error);\n    return error;\n  };\n\n  try {\n    const controlBarRows = await apiGetControlBarRows();\n    return onSuccess(controlBarRows);\n  } catch (err) {\n    return onError(err);\n  }\n};","import React, { useState, useEffect, createRef } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport cx from 'classnames';\nimport arraySort from 'd2-utilizr/lib/arraySort';\nimport PropTypes from 'prop-types';\nimport ControlBar, { DRAG_HANDLE_HEIGHT } from './ControlBar';\nimport Chip from './DashboardItemChip';\nimport AddCircleIcon from '../../icons/AddCircle';\nimport Filter from './Filter';\nimport ShowMoreButton from './ShowMoreButton';\nimport { FIRST_ROW_PADDING_HEIGHT, MIN_ROW_COUNT, getRowsHeight, getControlBarHeight, getNumRowsFromHeight, getControlBarHeightSmallDevice, CONTROL_BAR, CONTROL_BAR_CONTAINER, CHIPS_CONTAINER } from './controlBarDimensions';\nimport { useWindowDimensions } from '../WindowDimensionsProvider';\nimport { sGetDashboardsFilter } from '../../reducers/dashboardsFilter';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { sGetAllDashboards } from '../../reducers/dashboards';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { acSetControlBarUserRows } from '../../actions/controlBar';\nimport { apiPostControlBarRows } from '../../api/controlBar';\nimport { isSmallScreen } from '../../modules/smallScreen';\nimport classes from './styles/DashboardsBar.module.css';\nexport const MAX_ROW_COUNT = 10;\nexport const isDashboardBarMaxHeight = rows => rows === MAX_ROW_COUNT;\n\nconst DashboardsBar = ({\n  userRows,\n  onChangeHeight,\n  history,\n  dashboards,\n  selectedId,\n  filterText\n}) => {\n  const [rows, setRows] = useState(userRows);\n  const {\n    width,\n    height\n  } = useWindowDimensions();\n  const ref = createRef();\n  useEffect(() => {\n    setRows(userRows);\n  }, [userRows]);\n\n  const isMaxHeight = () => isDashboardBarMaxHeight(rows);\n\n  const adjustHeight = newHeight => {\n    const newRows = Math.max(MIN_ROW_COUNT, getNumRowsFromHeight(newHeight - 52) // don't rush the transition to a bigger row count\n    );\n\n    if (newRows !== rows) {\n      onChangeHeight(Math.min(newRows, MAX_ROW_COUNT));\n    }\n  };\n\n  const onEndDrag = () => apiPostControlBarRows(rows);\n\n  const scrollToTop = () => {\n    if (isMaxHeight()) {\n      ref.current.scroll(0, 0);\n    }\n  };\n\n  const toggleMaxHeight = () => {\n    const newRows = isMaxHeight() ? userRows : MAX_ROW_COUNT;\n    scrollToTop();\n    setRows(newRows);\n  };\n\n  const cancelMaxHeight = () => {\n    scrollToTop();\n    setRows(userRows);\n  };\n\n  const onSelectDashboard = () => {\n    const id = getFilteredDashboards()[0]?.id;\n\n    if (id) {\n      history.push(id);\n    }\n  };\n\n  const getFilteredDashboards = () => {\n    const filteredDashboards = arraySort(Object.values(dashboards).filter(d => d.displayName.toLowerCase().includes(filterText.toLowerCase())), 'ASC', 'displayName');\n    return [...filteredDashboards.filter(d => d.starred), ...filteredDashboards.filter(d => !d.starred)];\n  };\n\n  const viewableRows = isSmallScreen(width) && !isMaxHeight() ? MIN_ROW_COUNT : rows;\n\n  const getHeight = () => {\n    if (isSmallScreen(width) && isMaxHeight()) {\n      return getControlBarHeightSmallDevice(CONTROL_BAR, height);\n    }\n\n    return getControlBarHeight(viewableRows);\n  };\n\n  const getContainerHeight = container => {\n    if (isSmallScreen(width) && isMaxHeight()) {\n      return getControlBarHeightSmallDevice(container ? CONTROL_BAR_CONTAINER : CHIPS_CONTAINER, height);\n    }\n\n    return getRowsHeight(viewableRows) + FIRST_ROW_PADDING_HEIGHT;\n  };\n\n  const getDashboardChips = () => {\n    const chips = getFilteredDashboards().map(dashboard => <Chip key={dashboard.id} label={dashboard.displayName} starred={dashboard.starred} dashboardId={dashboard.id} selected={dashboard.id === selectedId} onClick={cancelMaxHeight} />);\n\n    if (isSmallScreen(width)) {\n      const chipContainerClasses = cx(classes.chipContainer, isMaxHeight() ? classes.expanded : classes.collapsed);\n      return <div className={chipContainerClasses} style={{\n        height: getContainerHeight()\n      }}>\n                    {chips}\n                </div>;\n    } else {\n      return chips;\n    }\n  };\n\n  const containerClass = cx(classes.container, isMaxHeight() ? classes.expanded : classes.collapsed);\n  return <>\n            <ControlBar height={getHeight()} onChangeHeight={!isSmallScreen(width) ? adjustHeight : null} onEndDrag={onEndDrag}>\n                <div className={containerClass} ref={ref} style={{\n        height: getContainerHeight(CONTROL_BAR_CONTAINER)\n      }}>\n                    <div className={classes.controls}>\n                        <Link className={classes.newLink} to={'/new'} data-test=\"link-new-dashboard\">\n                            <AddCircleIcon />\n                        </Link>\n                        <Filter onKeypressEnter={onSelectDashboard} onToggleMaxHeight={toggleMaxHeight} isMaxHeight={isMaxHeight()} />\n                    </div>\n                    {getDashboardChips()}\n                </div>\n                <ShowMoreButton onClick={toggleMaxHeight} isMaxHeight={isMaxHeight()} disabled={userRows === MAX_ROW_COUNT} />\n            </ControlBar>\n            <div style={{\n      marginTop: getControlBarHeight(isSmallScreen(width) ? MIN_ROW_COUNT : userRows) + DRAG_HANDLE_HEIGHT\n    }} />\n        </>;\n};\n\nDashboardsBar.propTypes = {\n  dashboards: PropTypes.object,\n  filterText: PropTypes.string,\n  history: PropTypes.object,\n  selectedId: PropTypes.string,\n  userRows: PropTypes.number,\n  onChangeHeight: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  dashboards: sGetAllDashboards(state),\n  filterText: sGetDashboardsFilter(state),\n  selectedId: sGetSelectedId(state),\n  userRows: sGetControlBarUserRows(state)\n});\n\nconst mapDispatchToProps = {\n  onChangeHeight: acSetControlBarUserRows\n};\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(DashboardsBar));","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst NoContentMessage = ({\n  text\n}) => <div style={{\n  padding: '50px 10px',\n  textAlign: 'center',\n  fontSize: '15px',\n  fontWeight: 500,\n  color: colors.grey600\n}}>\n        {text}\n    </div>;\n\nNoContentMessage.propTypes = {\n  text: PropTypes.string\n};\nexport default NoContentMessage;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nexport const ThreeDots = () => <svg height=\"18\" viewBox=\"0 0 18 18\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"m4 7.5c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm10 0c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm-5 0c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5z\" fill=\"#6e7a8a\" />\n    </svg>;\nexport const SpeechBubble = () => <svg height=\"20\" viewBox=\"0 0 20 20\" width=\"20\" xmlns=\"http://www.w3.org/2000/svg\" style={{\n  margin: '3px 2px 0 2px'\n}} // Temporary fix for the misaligned icon, should be removed once the icon is replaced\n>\n        <path d=\"m20 2h-16c-1.1 0-1.99.9-1.99 2l-.01 18 4-4h14c1.1 0 2-.9 2-2v-12c0-1.1-.9-2-2-2zm-2 12h-12v-2h12zm0-3h-12v-2h12zm0-3h-12v-2h12z\" fill=\"#6e7a8a\" fillRule=\"evenodd\" transform=\"translate(-2 -2)\" />\n    </svg>;\nexport const Warning = () => <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" fill={colors.grey600}>\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z\" />\n    </svg>;\nexport const Fullscreen = () => <svg height=\"16\" viewBox=\"0 0 16 16\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"m6.85355339 9.14644661c.17356635.17356635.1928515.44299075.05785545.63785889l-.05785545.06924789-4.14755339 4.14644661h2.794c.24545989 0 .44960837.1768752.49194433.4101244l.00805567.0898756c0 .2454599-.17687516.4496084-.41012437.4919443l-.08987563.0080557h-4c-.24545989 0-.44960837-.1768752-.49194433-.4101244l-.00805567-.0898756v-4c0-.2761424.22385763-.5.5-.5.24545989 0 .44960837.1768752.49194433.4101244l.00805567.0898756v2.792l4.14644661-4.14555339c.19526215-.19526215.51184463-.19526215.70710678 0zm6.14644661-2.14644661v6h-6v-1h5v-5zm-4-4v1h-5v5h-1v-6zm5.5-2c.2454599 0 .4496084.17687516.4919443.41012437l.0080557.08987563v4c0 .27614237-.2238576.5-.5.5-.2454599 0-.4496084-.17687516-.4919443-.41012437l-.0080557-.08987563v-2.794l-4.14644661 4.14755339c-.19526215.19526215-.51184463.19526215-.70710678 0-.17356635-.17356635-.1928515-.44299075-.05785545-.63785889l.05785545-.06924789 4.14655339-4.14744661-2.793.001c-.2454599 0-.4496084-.17687516-.4919443-.41012437l-.0080557-.08987563c0-.24545989.1768752-.44960837.4101244-.49194433l.0898756-.00805567z\" fill=\"inherit\" />\n    </svg>;\nexport const ExitFullscreen = () => <svg height=\"16\" viewBox=\"0 0 16 16\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"m6.5 9c.24545989 0 .44960837.17687516.49194433.41012437l.00805567.08987563v4c0 .2761424-.22385763.5-.5.5-.24545989 0-.44960837-.1768752-.49194433-.4101244l-.00805567-.0898756v-2.794l-3.64644661 3.6475534c-.19526215.1952621-.51184463.1952621-.70710678 0-.17356635-.1735664-.1928515-.4429908-.05785545-.6378589l.05785545-.0692479 3.64555339-3.6464466h-2.792c-.24545989 0-.44960837-.17687516-.49194433-.41012437l-.00805567-.08987563c0-.24545989.17687516-.44960837.41012437-.49194433l.08987563-.00805567zm7.5-.5v5.5h-5.5v-1h4.5v-4.5zm-6.5-6.5v1h-4.5v4.5h-1v-5.5zm6.8535534-.35355339c.1735663.17356635.1928515.44299075.0578554.63785889l-.0578554.06924789-3.6475534 3.64644661h2.794c.2454599 0 .4496084.17687516.4919443.41012437l.0080557.08987563c0 .24545989-.1768752.44960837-.4101244.49194433l-.0898756.00805567h-4c-.24545989 0-.44960837-.17687516-.49194433-.41012437l-.00805567-.08987563v-4c0-.27614237.22385763-.5.5-.5.24545989 0 .44960837.17687516.49194433.41012437l.00805567.08987563v2.792l3.6464466-3.64555339c.1952622-.19526215.5118446-.19526215.7071068 0z\" fill=\"inherit\" />\n    </svg>;","export const RECEIVED_USER = 'RECEIVED_USER';\nexport const DEFAULT_STATE_USER = {\n  id: '',\n  username: '',\n  uiLocale: '',\n  isSuperuser: false\n};\nexport default ((state = DEFAULT_STATE_USER, action) => {\n  switch (action.type) {\n    case RECEIVED_USER:\n      {\n        return fromD2ToUserObj(action.value);\n      }\n\n    default:\n      return state;\n  }\n});\n\nfunction fromD2ToUserObj(d2Object) {\n  return {\n    id: d2Object.id,\n    username: d2Object.username,\n    uiLocale: d2Object.settings.keyUiLocale,\n    isSuperuser: d2Object.authorities.has('ALL')\n  };\n} // selectors\n\n\nexport const sGetUserId = state => state.user.id;\nexport const sGetUserUsername = state => state.user.username;\nexport const sGetIsSuperuser = state => state.user.isSuperuser;\nexport const sGetUiLocale = state => state.user.uiLocale;","import { getDimensionById, DIMENSION_ID_PERIOD, DIMENSION_ID_ORGUNIT } from '@dhis2/analytics';\nexport const SET_DIMENSIONS = 'SET_DIMENSIONS';\nexport const DEFAULT_DIMENSIONS = [getDimensionById(DIMENSION_ID_PERIOD), getDimensionById(DIMENSION_ID_ORGUNIT)];\nexport default ((state = DEFAULT_DIMENSIONS, action) => {\n  switch (action.type) {\n    case SET_DIMENSIONS:\n      {\n        return [...DEFAULT_DIMENSIONS, ...action.value];\n      }\n\n    default:\n      return state;\n  }\n});\nexport const sGetDimensions = state => state.dimensions;","import { sGetDimensions } from './dimensions';\nimport { createSelector } from 'reselect';\nexport const CLEAR_ITEM_FILTERS = 'CLEAR_ITEM_FILTERS';\nexport const SET_ITEM_FILTERS = 'SET_ITEM_FILTERS';\nexport const ADD_ITEM_FILTER = 'ADD_ITEM_FILTER';\nexport const REMOVE_ITEM_FILTER = 'REMOVE_ITEM_FILTER';\nexport const DEFAULT_STATE_ITEM_FILTERS = {};\nexport default ((state = DEFAULT_STATE_ITEM_FILTERS, action) => {\n  switch (action.type) {\n    case ADD_ITEM_FILTER:\n      {\n        return { ...state,\n          [action.filter.id]: action.filter.value\n        };\n      }\n\n    case REMOVE_ITEM_FILTER:\n      {\n        const newState = { ...state\n        };\n        delete newState[action.id];\n        return newState;\n      }\n\n    case SET_ITEM_FILTERS:\n      {\n        return action.filters;\n      }\n\n    case CLEAR_ITEM_FILTERS:\n      {\n        return DEFAULT_STATE_ITEM_FILTERS;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetItemFiltersRoot = state => state.itemFilters; // simplify the filters structure to:\n// [{ id: 'pe', name: 'Period', values: [{ id: 2019: name: '2019' }, {id: 'LAST_MONTH', name: 'Last month' }]}, ...]\n\nexport const sGetNamedItemFilters = createSelector([sGetItemFiltersRoot, sGetDimensions], (filters, dimensions) => Object.keys(filters).reduce((arr, id) => {\n  arr.push({\n    id: id,\n    name: dimensions.find(dimension => dimension.id === id).name,\n    values: filters[id].map(value => ({\n      id: value.id,\n      name: value.displayName || value.name\n    }))\n  });\n  return arr;\n}, []));","import { ADD_ITEM_FILTER, REMOVE_ITEM_FILTER, SET_ITEM_FILTERS, CLEAR_ITEM_FILTERS } from '../reducers/itemFilters';\nexport const FILTER_ORG_UNIT = 'ou'; // actions\n\nexport const acAddItemFilter = filter => ({\n  type: ADD_ITEM_FILTER,\n  filter\n});\nexport const acRemoveItemFilter = id => ({\n  type: REMOVE_ITEM_FILTER,\n  id\n});\nexport const acClearItemFilters = () => ({\n  type: CLEAR_ITEM_FILTERS\n});\nexport const acSetItemFilters = filters => ({\n  type: SET_ITEM_FILTERS,\n  filters\n});","import update from 'immutability-helper';\nimport { arrayToIdMap } from '../modules/util';\nexport const RECEIVED_MESSAGES = 'RECEIVED_MESSAGES';\nexport default ((state = {}, action) => {\n  switch (action.type) {\n    case RECEIVED_MESSAGES:\n      {\n        const conversations = arrayToIdMap(action.value);\n        const newState = update(state, {\n          $merge: conversations\n        });\n        return newState;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetMessagesRoot = state => state.messages;","export const messageConversationsQuery = {\n  resource: 'messageConversations',\n  params: {\n    fields: 'id,messageCount,lastUpdated,messageType,displayName,read,messages[id,read,sender[id,displayName],text,lastUpdated]',\n    order: 'read:asc',\n    pageSize: 200\n  }\n};\nexport const getMessages = async dataEngine => {\n  try {\n    const {\n      messageConversations\n    } = await dataEngine.query({\n      messageConversations: messageConversationsQuery\n    });\n    return messageConversations.messageConversations;\n  } catch (error) {\n    console.log('Error:', error);\n  }\n};","import { RECEIVED_MESSAGES } from '../../../reducers/messages';\nimport { getMessages } from '../../../api/messages';\n\nconst onError = (action, error) => {\n  console.log(`Error in action ${action}: ${error}`);\n  return error;\n};\n\nexport const receivedMessages = value => ({\n  type: RECEIVED_MESSAGES,\n  value\n});\nexport const tGetMessages = dataEngine => async dispatch => {\n  try {\n    const messageConversations = await getMessages(dataEngine);\n    return dispatch(receivedMessages(messageConversations));\n  } catch (err) {\n    return onError('Get Messages', err);\n  }\n};","export const SET_ALERT_MESSAGE = 'SET_ALERT_MESSAGE';\nexport const CLEAR_ALERT_MESSAGE = 'CLEAR_ALERT_MESSAGE';\nexport const DEFAULT_STATE_ALERT = null;\nexport default ((state = DEFAULT_STATE_ALERT, action) => {\n  switch (action.type) {\n    case SET_ALERT_MESSAGE:\n      {\n        return action.value;\n      }\n\n    case CLEAR_ALERT_MESSAGE:\n      {\n        return DEFAULT_STATE_ALERT;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetAlertMessage = state => state.alert;","import { SET_ALERT_MESSAGE, CLEAR_ALERT_MESSAGE } from '../reducers/alert';\nexport const acSetAlertMessage = value => ({\n  type: SET_ALERT_MESSAGE,\n  value\n});\nexport const acClearAlertMessage = () => ({\n  type: CLEAR_ALERT_MESSAGE\n});","import { orObject } from '../modules/util';\nimport objectClean from 'd2-utilizr/lib/objectClean';\n/** @module reducers/visualizations */\n\nexport const ADD_VISUALIZATION = 'ADD_VISUALIZATION';\nexport const SET_ACTIVE_VISUALIZATION_TYPE = 'SET_ACTIVE_VISUALIZATION_TYPE';\nexport const CLEAR_VISUALIZATIONS = 'CLEAR_VISUALIZATIONS';\nexport const DEFAULT_STATE_VISUALIZATIONS = {};\n\nconst isEmpty = p => p === undefined || p === null;\n\nexport default ((state = DEFAULT_STATE_VISUALIZATIONS, action) => {\n  switch (action.type) {\n    case ADD_VISUALIZATION:\n      {\n        return { ...state,\n          [action.value.id]: objectClean({ ...orObject(state[action.value.id]),\n            ...action.value\n          }, isEmpty)\n        };\n      }\n\n    case CLEAR_VISUALIZATIONS:\n      {\n        return DEFAULT_STATE_VISUALIZATIONS;\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetVisualizationsRoot = state => state.visualizations; // selectors level 1\n\nexport const sGetVisualization = (state, id) => {\n  return sGetVisualizationsRoot(state)[id];\n};","import { ADD_VISUALIZATION, CLEAR_VISUALIZATIONS } from '../reducers/visualizations';\nexport const acAddVisualization = value => ({\n  type: ADD_VISUALIZATION,\n  value\n});\nexport const acClearVisualizations = () => ({\n  type: CLEAR_VISUALIZATIONS\n});","import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { getEndPointName, MAP } from '../modules/itemTypes';\nimport { getVisualizationId } from '../modules/item'; // Id, name\n\nexport const getIdNameFields = ({\n  rename\n} = {}) => ['id', `${rename ? 'displayName~rename(name)' : 'name,displayName'}`]; // Item\n\nexport const getItemFields = () => ['dimensionItem~rename(id)', 'displayName~rename(name)', 'dimensionItemType']; // Dimension\n\nexport const getDimensionFields = ({\n  withItems\n}) => arrayClean(['dimension', 'legendSet[id]', 'filter', 'programStage', withItems ? `items[${getItemFields().join(',')}]` : ``]); // Axis\n\nexport const getAxesFields = ({\n  withItems\n}) => [`columns[${getDimensionFields({\n  withItems\n}).join(',')}]`, `rows[${getDimensionFields({\n  withItems\n}).join(',')}]`, `filters[${getDimensionFields({\n  withItems\n}).join(',')}]`]; // Favorite\n\nexport const getFavoriteFields = ({\n  withDimensions,\n  withOptions\n}) => {\n  return arrayClean([`${getIdNameFields({\n    rename: true\n  }).join(',')}`, 'displayDescription~rename(description)', withDimensions ? `${getAxesFields({\n    withItems: true\n  }).join(',')}` : ``, withOptions ? ['*', '!attributeDimensions', '!attributeValues', '!category', '!categoryDimensions', '!categoryOptionGroupSetDimensions', '!columnDimensions', '!dataDimensionItems', '!dataElementDimensions', '!dataElementGroupSetDimensions', '!filterDimensions', '!itemOrganisationUnitGroups', '!lastUpdatedBy', '!organisationUnitGroupSetDimensions', '!organisationUnitLevels', '!organisationUnits', '!programIndicatorDimensions', '!relativePeriods', '!reportParams', '!rowDimensions', '!translations', '!userOrganisationUnit', '!userOrganisationUnitChildren', '!userOrganisationUnitGrandChildren'].join(',') : '']);\n};\nexport const getFavoritesFields = ({\n  withDimensions\n}) => [`reportTable[${getFavoriteFields({\n  withDimensions\n}).join(',')}]`, `chart[${['type', ...getFavoriteFields({\n  withDimensions\n})].join(',')}]`, `map[${getFavoriteFields({\n  withDimensions\n}).join(',')}]`, `eventReport[${getFavoriteFields({\n  withDimensions\n}).join(',')}]`, `eventChart[${getFavoriteFields({\n  withDimensions\n}).join(',')}]`]; // List item\n\nexport const getListItemFields = () => [`reports[${['type', ...getIdNameFields({\n  rename: true\n})].join(',')}]`, `resources[${getIdNameFields({\n  rename: true\n}).join(',')}]`, `users[${getIdNameFields({\n  rename: true\n}).join(',')}]`]; // Map\n\nexport const getMapFields = () => [`${getIdNameFields({\n  rename: true\n}).join(',')}`, 'user,longitude,latitude,zoom,basemap', `mapViews[${getFavoriteFields({\n  withDimensions: true,\n  withOptions: true\n})}]`]; // Api\n\nexport const apiFetchVisualization = async item => {\n  const id = getVisualizationId(item);\n  const fields = item.type === MAP ? getMapFields() : getFavoriteFields({\n    withDimensions: true,\n    withOptions: true\n  });\n  const d2 = await getInstance();\n  return await d2.Api.getApi().get(`${getEndPointName(item.type)}/${id}`, {\n    fields\n  });\n};","import arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { getListItemFields, getFavoritesFields, getIdNameFields } from './metadata'; // Helper functions\n\nexport const onError = error => console.log('Error: ', error); // Dashboard item\n\nexport const getDashboardItemsFields = ({\n  withFavorite\n} = {}) => arrayClean(['id', 'type', 'shape', 'x', 'y', 'width~rename(w)', 'height~rename(h)', 'messages', 'text', 'appKey', `${getListItemFields().join(',')}`, withFavorite ? `${getFavoritesFields({\n  withDimensions: withFavorite.withDimensions\n}).join(',')}` : ``]); // Dashboard\n\nexport const getDashboardFields = ({\n  withItems,\n  withFavorite\n} = {}) => arrayClean([`${getIdNameFields().join(',')}`, 'description', 'displayDescription', 'favorite', `user[${getIdNameFields({\n  rename: true\n}).join(',')}]`, 'created', 'lastUpdated', 'access', 'href', // needed for d2-ui-translations-dialog, since we don't pass a d2 Model anymore\nwithItems ? `dashboardItems[${getDashboardItemsFields({\n  withFavorite\n}).join(',')}]` : ``]);","import arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { onError, getDashboardFields } from './index';\nexport const dashboardsQuery = {\n  resource: 'dashboards',\n  params: {\n    fields: [getDashboardFields(), 'dashboardItems[id]'].join(','),\n    paging: false\n  }\n};\nexport const dashboardQuery = {\n  resource: 'dashboards',\n  id: ({\n    id\n  }) => id,\n  params: {\n    fields: arrayClean(getDashboardFields({\n      withItems: true,\n      withFavorite: {\n        withDimensions: false\n      }\n    })).join(',')\n  }\n};\nexport const starDashboardMutation = {\n  type: 'create',\n  resource: 'dashboards',\n  // TODO create mutation does not accept the id function\n  // we must use a workaround until dataEngine supports dynamic resource/path\n  id: ({\n    id\n  }) => `${id}/favorite`\n};\nexport const unstarDashboardMutation = {\n  type: 'delete',\n  resource: 'dashboards',\n  id: ({\n    id\n  }) => `${id}/favorite`\n};\nexport const deleteDashboardMutation = {\n  type: 'delete',\n  resource: 'dashboards',\n  id: ({\n    id\n  }) => id\n}; // Get \"all\" dashboards on startup\n\nexport const apiFetchDashboards = async dataEngine => {\n  try {\n    const dashboardsData = await dataEngine.query({\n      dashboards: dashboardsQuery\n    });\n    return dashboardsData.dashboards.dashboards;\n  } catch (error) {\n    onError(error);\n  }\n}; // Get more info about selected dashboard\n\nexport const apiFetchDashboard = async (dataEngine, id) => {\n  try {\n    const dashboardData = await dataEngine.query({\n      dashboard: dashboardQuery\n    }, {\n      variables: {\n        id\n      }\n    });\n    return dashboardData.dashboard;\n  } catch (error) {\n    onError(error);\n  }\n}; // Star dashboard\n\nexport const apiStarDashboard = async (dataEngine, id, isStarred) => {\n  try {\n    if (isStarred) {\n      await dataEngine.mutate(starDashboardMutation, {\n        variables: {\n          id\n        }\n      });\n    } else {\n      await dataEngine.mutate(unstarDashboardMutation, {\n        variables: {\n          id\n        }\n      });\n    }\n  } catch (error) {\n    onError(error);\n  }\n};\nexport const apiDeleteDashboard = async (dataEngine, id) => {\n  try {\n    await dataEngine.mutate(deleteDashboardMutation, {\n      variables: {\n        id\n      }\n    });\n  } catch (error) {\n    onError(error);\n  }\n};","import { apiGetUserDataStoreValue, apiPostUserDataStoreValue } from './userDataStore';\nimport { DEFAULT_STATE_SELECTED_SHOWDESCRIPTION } from '../reducers/selected';\nconst KEY_SHOW_DESCRIPTION = 'showDescription';\nexport const apiGetShowDescription = async () => await apiGetUserDataStoreValue(KEY_SHOW_DESCRIPTION, DEFAULT_STATE_SELECTED_SHOWDESCRIPTION);\nexport const apiPostShowDescription = async (value) => await apiPostUserDataStoreValue(KEY_SHOW_DESCRIPTION, value);","import i18n from '@dhis2/d2-i18n';\nimport { getCustomDashboards, sGetDashboardById } from '../reducers/dashboards';\nimport { SET_SELECTED_ID, SET_SELECTED_ISLOADING, SET_SELECTED_SHOWDESCRIPTION, SET_SELECTED_ITEM_ACTIVE_TYPE, CLEAR_SELECTED_ITEM_ACTIVE_TYPES, sGetSelectedIsLoading, sGetSelectedId } from '../reducers/selected';\nimport { sGetUserUsername } from '../reducers/user';\nimport { acSetDashboardItems, acAppendDashboards } from './dashboards';\nimport { acClearItemFilters } from './itemFilters';\nimport { tGetMessages } from '../components/Item/MessagesItem/actions';\nimport { acSetAlertMessage, acClearAlertMessage } from './alert';\nimport { acAddVisualization, acClearVisualizations } from './visualizations';\nimport { apiFetchDashboard } from '../api/dashboards';\nimport { storePreferredDashboardId } from '../api/localStorage';\nimport { apiGetShowDescription, apiPostShowDescription } from '../api/description';\nimport { withShape } from '../modules/gridUtil';\nimport { getVisualizationFromItem } from '../modules/item';\nimport { REPORT_TABLE, CHART, MAP, EVENT_REPORT, EVENT_CHART, MESSAGES } from '../modules/itemTypes'; // actions\n\nexport const acSetSelectedId = value => ({\n  type: SET_SELECTED_ID,\n  value\n});\nexport const acSetSelectedIsLoading = value => ({\n  type: SET_SELECTED_ISLOADING,\n  value\n});\nexport const acSetSelectedShowDescription = value => ({\n  type: SET_SELECTED_SHOWDESCRIPTION,\n  value\n});\nexport const acSetSelectedItemActiveType = (id, activeType) => {\n  const action = {\n    type: SET_SELECTED_ITEM_ACTIVE_TYPE,\n    id,\n    activeType\n  };\n  return action;\n};\nexport const acClearSelectedItemActiveTypes = () => ({\n  type: CLEAR_SELECTED_ITEM_ACTIVE_TYPES\n}); // thunks\n\nexport const tSetSelectedDashboardById = id => async (dispatch, getState, dataEngine) => {\n  dispatch(acSetSelectedIsLoading(true));\n  const alertTimeout = setTimeout(() => {\n    const name = sGetDashboardById(getState(), id)?.displayName;\n\n    if (sGetSelectedIsLoading(getState()) && name) {\n      dispatch(acSetAlertMessage(i18n.t('Loading dashboard – {{name}}', {\n        name\n      })));\n    }\n  }, 500);\n\n  const onSuccess = selected => {\n    dispatch(acAppendDashboards(selected));\n    const customDashboard = getCustomDashboards(selected)[0];\n    dispatch(acSetDashboardItems(withShape(customDashboard.dashboardItems)));\n    storePreferredDashboardId(sGetUserUsername(getState()), id);\n\n    if (id !== sGetSelectedId(getState())) {\n      dispatch(acClearItemFilters());\n      dispatch(acClearVisualizations());\n      dispatch(acClearSelectedItemActiveTypes());\n    }\n\n    customDashboard.dashboardItems.forEach(item => {\n      switch (item.type) {\n        case REPORT_TABLE:\n        case CHART:\n        case MAP:\n        case EVENT_REPORT:\n        case EVENT_CHART:\n          dispatch(acAddVisualization(getVisualizationFromItem(item)));\n          break;\n\n        case MESSAGES:\n          dispatch(tGetMessages(dataEngine));\n          break;\n\n        default:\n          break;\n      }\n    });\n    dispatch(acSetSelectedId(id));\n    dispatch(acSetSelectedIsLoading(false));\n    clearTimeout(alertTimeout);\n    dispatch(acClearAlertMessage());\n    return selected;\n  };\n\n  try {\n    const dashboard = await apiFetchDashboard(dataEngine, id);\n    return onSuccess(dashboard);\n  } catch (err) {\n    console.error('Error: ', err);\n    return err;\n  }\n};\nexport const tSetShowDescription = () => async dispatch => {\n  const onSuccess = value => {\n    dispatch(acSetSelectedShowDescription(value));\n  };\n\n  try {\n    const showDescription = await apiGetShowDescription();\n    return onSuccess(showDescription);\n  } catch (err) {\n    console.error('Error (apiGetShowDescription): ', err);\n    return err;\n  }\n};\nexport const tUpdateShowDescription = value => async dispatch => {\n  const onSuccess = () => {\n    dispatch(acSetSelectedShowDescription(value));\n  };\n\n  try {\n    await apiPostShowDescription(value);\n    return onSuccess();\n  } catch (err) {\n    console.error('Error (apiGetShowDescription): ', err);\n    return err;\n  }\n};","export const getPreferredDashboardId = username => localStorage.getItem(`dhis2.dashboard.current.${username}`) || undefined;\nexport const storePreferredDashboardId = (username, dashboardId) => {\n  localStorage.setItem(`dhis2.dashboard.current.${username}`, dashboardId);\n};","import { SET_DASHBOARDS, ADD_DASHBOARDS, SET_DASHBOARD_STARRED, SET_DASHBOARD_DISPLAY_NAME, SET_DASHBOARD_ITEMS, getCustomDashboards, sGetDashboardById, sGetDashboardsSortedByStarred } from '../reducers/dashboards';\nimport { NON_EXISTING_DASHBOARD_ID } from '../reducers/selected';\nimport { sGetUserUsername } from '../reducers/user';\nimport { tSetSelectedDashboardById, acSetSelectedId } from './selected';\nimport { apiFetchDashboards, apiStarDashboard, apiDeleteDashboard } from '../api/dashboards';\nimport { getPreferredDashboardId } from '../api/localStorage';\nimport { arrayToIdMap } from '../modules/util'; // actions\n\nexport const acSetDashboards = dashboards => ({\n  type: SET_DASHBOARDS,\n  value: arrayToIdMap(getCustomDashboards(dashboards))\n});\nexport const acAppendDashboards = dashboards => ({\n  type: ADD_DASHBOARDS,\n  value: arrayToIdMap(getCustomDashboards(dashboards))\n});\nexport const acSetDashboardStarred = (dashboardId, isStarred) => ({\n  type: SET_DASHBOARD_STARRED,\n  dashboardId: dashboardId,\n  value: isStarred\n});\nexport const acSetDashboardDisplayName = (dashboardId, value) => ({\n  type: SET_DASHBOARD_DISPLAY_NAME,\n  dashboardId,\n  value\n});\nexport const acSetDashboardItems = value => ({\n  type: SET_DASHBOARD_ITEMS,\n  value\n}); // thunks\n\nexport const tFetchDashboards = () => async (dispatch, getState, dataEngine) => {\n  const dashboards = await apiFetchDashboards(dataEngine);\n  dispatch(acSetDashboards(dashboards));\n};\nexport const tSelectDashboard = id => async (dispatch, getState) => {\n  try {\n    const state = getState();\n    let dashboardToSelect = null;\n\n    if (id) {\n      dashboardToSelect = sGetDashboardById(state, id) || null;\n    } else {\n      const preferredId = getPreferredDashboardId(sGetUserUsername(state));\n      const dash = sGetDashboardById(state, preferredId);\n      dashboardToSelect = preferredId && dash ? dash : sGetDashboardsSortedByStarred(state)[0];\n    }\n\n    if (dashboardToSelect) {\n      dispatch(tSetSelectedDashboardById(dashboardToSelect.id));\n    } else {\n      dispatch(acSetSelectedId(NON_EXISTING_DASHBOARD_ID));\n    }\n  } catch (err) {\n    console.error('Error (apiFetchDashboards): ', err);\n    return err;\n  }\n};\nexport const tStarDashboard = (id, isStarred) => async (dispatch, getState, dataEngine) => {\n  const onSuccess = id => {\n    dispatch(acSetDashboardStarred(id, isStarred));\n    return id;\n  };\n\n  try {\n    await apiStarDashboard(dataEngine, id, isStarred);\n    return onSuccess(id);\n  } catch (err) {\n    console.error('Error (apiStarDashboard): ', err);\n    return err;\n  }\n};\nexport const tDeleteDashboard = id => async (dispatch, getState, dataEngine) => {\n  try {\n    await apiDeleteDashboard(dataEngine, id);\n    await dispatch(tFetchDashboards());\n    return Promise.resolve();\n  } catch (err) {\n    console.error('Error (deleteDashboard): ', err);\n    return err;\n  }\n};","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { useD2 } from '@dhis2/app-runtime-adapter-d2';\nimport { Button, Modal, ModalTitle, ModalContent, ModalActions, ButtonStrip } from '@dhis2/ui';\nimport { PeriodDimension, DynamicDimension, OrgUnitDimension, DIMENSION_ID_PERIOD, DIMENSION_ID_ORGUNIT } from '@dhis2/analytics';\nimport { acAddItemFilter, acRemoveItemFilter } from '../../actions/itemFilters';\nimport { sGetItemFiltersRoot } from '../../reducers/itemFilters';\nimport { useSystemSettings } from '../SystemSettingsProvider';\n\nconst FilterDialog = ({\n  dimension,\n  initiallySelectedItems,\n  addItemFilter,\n  removeItemFilter,\n  onClose\n}) => {\n  const [filters, setFilters] = useState(initiallySelectedItems);\n  const {\n    d2\n  } = useD2({});\n  const {\n    settings\n  } = useSystemSettings();\n\n  const onSelectItems = ({\n    dimensionId,\n    items\n  }) => {\n    setFilters({\n      [dimensionId]: items\n    });\n  };\n\n  const onDeselectItems = ({\n    dimensionId,\n    itemIdsToRemove\n  }) => {\n    const oldList = filters[dimensionId] || [];\n    const newList = oldList.filter(item => !itemIdsToRemove.includes(item.id));\n    setFilters({ ...filters,\n      [dimensionId]: newList\n    });\n  };\n\n  const onReorderItems = ({\n    dimensionId,\n    itemIds\n  }) => {\n    const oldList = filters[dimensionId] || [];\n    const reorderedList = itemIds.map(id => oldList.find(item => item.id === id));\n    setFilters({ ...filters,\n      [dimensionId]: reorderedList\n    });\n  };\n\n  const saveFilter = () => {\n    const id = dimension.id;\n    const filterItems = filters[id];\n\n    if (filterItems && filterItems.length) {\n      addItemFilter({\n        id,\n        value: [...filterItems]\n      });\n    } else {\n      removeItemFilter(id);\n    }\n\n    onClose(id);\n  };\n\n  const renderDialogContent = () => {\n    const commonProps = {\n      d2,\n      onSelect: onSelectItems,\n      onDeselect: onDeselectItems,\n      onReorder: onReorderItems\n    };\n    const selectedItems = filters[dimension.id] || [];\n\n    switch (dimension.id) {\n      case DIMENSION_ID_PERIOD:\n        {\n          return <PeriodDimension selectedPeriods={selectedItems} onSelect={commonProps.onSelect} />;\n        }\n\n      case DIMENSION_ID_ORGUNIT:\n        return <OrgUnitDimension displayNameProperty={settings.displayNameProperty} ouItems={selectedItems} {...commonProps} />;\n\n      default:\n        return <DynamicDimension selectedItems={selectedItems} dimensionId={dimension.id} onSelect={commonProps.onSelect} />;\n    }\n  };\n\n  return <>\n            {dimension.id && <Modal dataTest={`${dimension.id}-dimension-modal`} onClose={onClose} position=\"top\" large>\n                    <ModalTitle>{dimension.name}</ModalTitle>\n                    <ModalContent>{renderDialogContent()}</ModalContent>\n                    <ModalActions>\n                        <ButtonStrip>\n                            <Button secondary onClick={onClose}>\n                                {i18n.t('Cancel')}\n                            </Button>\n                            <Button primary onClick={saveFilter}>\n                                {i18n.t('Confirm')}\n                            </Button>\n                        </ButtonStrip>\n                    </ModalActions>\n                </Modal>}\n        </>;\n};\n\nFilterDialog.propTypes = {\n  addItemFilter: PropTypes.func,\n  dimension: PropTypes.object,\n  initiallySelectedItems: PropTypes.object,\n  removeItemFilter: PropTypes.func,\n  onClose: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  initiallySelectedItems: sGetItemFiltersRoot(state)\n});\n\nexport default connect(mapStateToProps, {\n  addItemFilter: acAddItemFilter,\n  removeItemFilter: acRemoveItemFilter\n})(FilterDialog);","export const SET_ACTIVE_MODAL_DIMENSION = 'SET_ACTIVE_MODAL_DIMENSION';\nexport const CLEAR_ACTIVE_MODAL_DIMENSION = 'CLEAR_ACTIVE_MODAL_DIMENSION';\nexport const DEFAULT_STATE_ACTIVE_MODAL_DIMENSION = {};\nexport default ((state = DEFAULT_STATE_ACTIVE_MODAL_DIMENSION, action) => {\n  switch (action.type) {\n    case SET_ACTIVE_MODAL_DIMENSION:\n      {\n        return action.value;\n      }\n\n    case CLEAR_ACTIVE_MODAL_DIMENSION:\n      {\n        return DEFAULT_STATE_ACTIVE_MODAL_DIMENSION;\n      }\n\n    default:\n      return state;\n  }\n});\nexport const sGetActiveModalDimension = state => state.activeModalDimension;","import { SET_ACTIVE_MODAL_DIMENSION, CLEAR_ACTIVE_MODAL_DIMENSION } from '../reducers/activeModalDimension';\nexport const acSetActiveModalDimension = value => ({\n  type: SET_ACTIVE_MODAL_DIMENSION,\n  value\n});\nexport const acClearActiveModalDimension = () => ({\n  type: CLEAR_ACTIVE_MODAL_DIMENSION\n});","import React, { useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport isEmpty from 'lodash/isEmpty';\nimport i18n from '@dhis2/d2-i18n';\nimport { DimensionsPanel } from '@dhis2/analytics';\nimport { Button, Popover } from '@dhis2/ui';\nimport FilterDialog from './FilterDialog';\nimport { sGetActiveModalDimension } from '../../reducers/activeModalDimension';\nimport { sGetDimensions } from '../../reducers/dimensions';\nimport { sGetItemFiltersRoot } from '../../reducers/itemFilters';\nimport { acClearActiveModalDimension, acSetActiveModalDimension } from '../../actions/activeModalDimension';\nimport classes from './styles/FilterSelector.module.css';\n\nconst FilterSelector = props => {\n  const [showPopover, setShowPopover] = useState(false);\n  const ref = useRef(null);\n\n  const onCloseDialog = () => {\n    setShowPopover(false);\n    props.clearActiveModalDimension();\n  };\n\n  const selectDimension = id => {\n    props.setActiveModalDimension(props.dimensions.find(dimension => dimension.id === id));\n  };\n\n  return <>\n            <span className={classes.buttonContainer} ref={ref}>\n                <Button onClick={() => setShowPopover(true)}>\n                    {i18n.t('Add filter')}\n                    <ArrowDropDownIcon />\n                </Button>\n            </span>\n            {showPopover && <Popover onClickOutside={onCloseDialog} reference={ref} arrow={true} placement=\"bottom-start\" dataTest=\"dashboard-filter-popover\">\n                    <DimensionsPanel style={{\n        width: '320px'\n      }} dimensions={props.dimensions} onDimensionClick={selectDimension} selectedIds={Object.keys(props.initiallySelectedItems)} />\n                </Popover>}\n            {!isEmpty(props.dimension) ? <FilterDialog dimension={props.dimension} onClose={onCloseDialog} /> : null}\n        </>;\n};\n\nconst mapStateToProps = state => ({\n  dimension: sGetActiveModalDimension(state),\n  dimensions: sGetDimensions(state),\n  initiallySelectedItems: sGetItemFiltersRoot(state)\n});\n\nFilterSelector.propTypes = {\n  clearActiveModalDimension: PropTypes.func,\n  dimension: PropTypes.object,\n  dimensions: PropTypes.array,\n  initiallySelectedItems: PropTypes.object,\n  setActiveModalDimension: PropTypes.func\n};\nexport default connect(mapStateToProps, {\n  clearActiveModalDimension: acClearActiveModalDimension,\n  setActiveModalDimension: acSetActiveModalDimension\n})(FilterSelector);","import React, { useState, createRef } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { Link, Redirect } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport SharingDialog from '@dhis2/d2-ui-sharing-dialog';\nimport Star from '@material-ui/icons/Star';\nimport StarBorder from '@material-ui/icons/StarBorder';\nimport { Button, FlyoutMenu, Popover, MenuItem, colors } from '@dhis2/ui';\nimport { useD2 } from '@dhis2/app-runtime-adapter-d2';\nimport { ThreeDots } from '../Item/VisualizationItem/assets/icons';\nimport { orObject } from '../../modules/util';\nimport { tStarDashboard } from '../../actions/dashboards';\nimport { tUpdateShowDescription } from '../../actions/selected';\nimport FilterSelector from '../ItemFilter/FilterSelector';\nimport { sGetSelectedId, sGetSelectedShowDescription } from '../../reducers/selected';\nimport { sGetDashboardById, sGetDashboardItems, EMPTY_DASHBOARD } from '../../reducers/dashboards';\nimport classes from './styles/ViewTitleBar.module.css';\n\nconst ViewTitleBar = props => {\n  const [moreOptionsIsOpen, setMoreOptionsIsOpen] = useState(false);\n  const [sharingDialogIsOpen, setSharingDialogIsOpen] = useState(false);\n  const [redirectUrl, setRedirectUrl] = useState(null);\n  const {\n    d2\n  } = useD2({});\n  const {\n    id,\n    name,\n    description,\n    access,\n    showDescription,\n    starred,\n    onToggleStarredDashboard,\n    onShowHideDescription\n  } = props;\n\n  const toggleSharingDialog = () => setSharingDialogIsOpen(!sharingDialogIsOpen);\n\n  const toggleMoreOptions = () => setMoreOptionsIsOpen(!moreOptionsIsOpen);\n\n  const printLayout = () => setRedirectUrl(`${id}/printlayout`);\n\n  const printOipp = () => setRedirectUrl(`${id}/printoipp`);\n\n  const StarIcon = starred ? Star : StarBorder;\n\n  if (redirectUrl) {\n    return <Redirect to={redirectUrl} />;\n  }\n\n  const showHideDescriptionLabel = showDescription ? i18n.t('Hide description') : i18n.t('Show description');\n\n  const showHideDescription = () => {\n    onShowHideDescription();\n    toggleMoreOptions();\n  };\n\n  const toggleStarredDashboardLabel = starred ? i18n.t('Unstar dashboard') : i18n.t('Star dashboard');\n\n  const toggleStarredDashboard = () => {\n    // TODO use dataQuery directly here with create/delete mutations ?!\n    onToggleStarredDashboard();\n    toggleMoreOptions();\n  };\n\n  const buttonRef = createRef();\n  const userAccess = orObject(access);\n  const descriptionClasses = cx(classes.descContainer, description ? classes.desc : classes.noDesc);\n\n  const getMoreButton = (className, useSmall) => <Button className={className} small={useSmall} onClick={toggleMoreOptions}>\n            <ThreeDots />\n            <span className={classes.moreText}>{i18n.t('More')}</span>\n        </Button>;\n\n  return <>\n            <div className={classes.container}>\n                <div className={classes.titleBar}>\n                    <span className={classes.title} data-test=\"view-dashboard-title\">\n                        {name}\n                    </span>\n                    <div className={classes.actions}>\n                        <div className={classes.titleBarIcon} onClick={onToggleStarredDashboard}>\n                            <StarIcon style={{\n              fill: colors.grey600\n            }} />\n                        </div>\n                        <div className={classes.strip}>\n                            {userAccess.update ? <Link className={classes.editLink} to={`/${id}/edit`} data-test=\"link-edit-dashboard\">\n                                    <Button>{i18n.t('Edit')}</Button>\n                                </Link> : null}\n                            {userAccess.manage ? <Button className={classes.shareButton} onClick={toggleSharingDialog}>\n                                    {i18n.t('Share')}\n                                </Button> : null}\n                            <FilterSelector />\n                            <span ref={buttonRef}>\n                                {getMoreButton(classes.moreButton, false)}\n                                {getMoreButton(classes.moreButtonSmall, true)}\n                            </span>\n                        </div>\n                        {moreOptionsIsOpen && <Popover reference={buttonRef} placement=\"bottom-start\" onClickOutside={toggleMoreOptions}>\n                                <FlyoutMenu>\n                                    <MenuItem dense label={toggleStarredDashboardLabel} onClick={toggleStarredDashboard} />\n                                    <MenuItem dense label={showHideDescriptionLabel} onClick={showHideDescription} />\n                                    <MenuItem dense label={i18n.t('Print')} dataTest=\"print-menu-item\">\n                                        <MenuItem dense label={i18n.t('Dashboard layout')} onClick={printLayout} dataTest=\"print-layout-menu-item\" />\n                                        <MenuItem dense label={i18n.t('One item per page')} onClick={printOipp} dataTest=\"print-oipp-menu-item\" />\n                                    </MenuItem>\n                                </FlyoutMenu>\n                            </Popover>}\n                    </div>\n                </div>\n                {showDescription && <div className={descriptionClasses}>\n                        {description || i18n.t('No description')}\n                    </div>}\n            </div>\n            {id && <SharingDialog d2={d2} id={id} type=\"dashboard\" open={sharingDialogIsOpen} onRequestClose={toggleSharingDialog} />}\n        </>;\n};\n\nViewTitleBar.propTypes = {\n  access: PropTypes.object,\n  description: PropTypes.string,\n  id: PropTypes.string,\n  name: PropTypes.string,\n  showDescription: PropTypes.bool,\n  starred: PropTypes.bool,\n  onShowHideDescription: PropTypes.func,\n  onToggleStarredDashboard: PropTypes.func\n};\nViewTitleBar.defaultProps = {\n  name: '',\n  description: '',\n  starred: false,\n  showDescription: false\n};\n\nconst mapStateToProps = state => {\n  const id = sGetSelectedId(state);\n  const dashboard = sGetDashboardById(state, id) || EMPTY_DASHBOARD;\n  return {\n    id,\n    name: dashboard.displayName,\n    description: dashboard.displayDescription,\n    dashboardItems: sGetDashboardItems(state),\n    showDescription: sGetSelectedShowDescription(state),\n    starred: dashboard.starred,\n    access: dashboard.access\n  };\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n  const {\n    id,\n    starred,\n    showDescription\n  } = stateProps;\n  const {\n    dispatch\n  } = dispatchProps;\n  return { ...stateProps,\n    ...ownProps,\n    onToggleStarredDashboard: () => dispatch(tStarDashboard(id, !starred)),\n    onShowHideDescription: () => dispatch(tUpdateShowDescription(!showDescription))\n  };\n};\n\nexport default connect(mapStateToProps, null, mergeProps)(ViewTitleBar);","import React, { useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { useD2 } from '@dhis2/app-runtime-adapter-d2';\nimport { useConfig } from '@dhis2/app-runtime';\nimport { load, unmount } from './plugin';\nimport getGridItemDomId from '../../../../modules/getGridItemDomId';\n\nconst DefaultPlugin = ({\n  item,\n  activeType,\n  visualization,\n  options,\n  style\n}) => {\n  const {\n    d2\n  } = useD2({});\n  const {\n    baseUrl\n  } = useConfig();\n  const credentials = {\n    baseUrl,\n    auth: d2.Api.getApi().defaultHeaders.Authorization\n  };\n  const prevItem = useRef();\n  const prevActiveType = useRef();\n  useEffect(() => {\n    load(item, visualization, {\n      credentials,\n      activeType,\n      options\n    });\n    prevItem.current = item;\n    prevActiveType.current = activeType;\n    return () => unmount(item, activeType);\n  }, []);\n  useEffect(() => {\n    if (shouldPluginReload()) {\n      unmount(item, prevActiveType.current);\n      load(item, visualization, {\n        credentials,\n        activeType\n      });\n    }\n\n    prevItem.current = item;\n    prevActiveType.current = activeType;\n  }, [item, visualization, activeType]);\n  /**\n   * Prevent unnecessary re-rendering\n   * TODO: fix this hack\n   */\n\n  const shouldPluginReload = () => {\n    const reloadAllowed = prevItem.current === item;\n    const visChanged = prevActiveType.current !== activeType;\n    return reloadAllowed && visChanged;\n  };\n\n  return <div id={getGridItemDomId(item.id)} style={style} />;\n};\n\nDefaultPlugin.propTypes = {\n  activeType: PropTypes.string,\n  item: PropTypes.object,\n  options: PropTypes.object,\n  style: PropTypes.object,\n  visualization: PropTypes.object\n};\nDefaultPlugin.defaultProps = {\n  style: {},\n  item: {},\n  options: {},\n  visualization: {}\n};\nexport default DefaultPlugin;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classes from './styles/NoVisualizationMessage.module.css';\n\nconst NoVisualizationMessage = ({\n  message\n}) => {\n  return <div className={classes.message}>{message}</div>;\n};\n\nNoVisualizationMessage.propTypes = {\n  message: PropTypes.string\n};\nexport default NoVisualizationMessage;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport DefaultPlugin from './DefaultPlugin';\nimport { MAP } from '../../../../modules/itemTypes';\nimport { pluginIsAvailable } from './plugin';\nimport NoVisualizationMessage from './NoVisualizationMessage';\n\nconst MapPlugin = ({\n  applyFilters,\n  ...props\n}) => {\n  if (props.item.type === MAP) {\n    // apply filters only to thematic and event layers\n    // for maps AO\n    const mapViews = props.visualization.mapViews.map(mapView => {\n      if (mapView.layer.includes('thematic') || mapView.layer.includes('event')) {\n        return applyFilters(mapView, props.itemFilters);\n      }\n\n      return mapView;\n    });\n    props.visualization = { ...props.visualization,\n      mapViews\n    };\n  } else {\n    // this is the case of a non map AO passed to the maps plugin\n    // due to a visualization type switch in dashboard item\n    // maps plugin takes care of converting the AO to a suitable format\n    props.visualization = applyFilters(props.visualization, props.itemFilters);\n  }\n\n  return pluginIsAvailable(props.activeType || props.item.type) ? <DefaultPlugin options={{\n    hideTitle: true\n  }} {...props} /> : <NoVisualizationMessage message={i18n.t('Unable to load the plugin for this item')} />;\n};\n\nMapPlugin.propTypes = {\n  activeType: PropTypes.string,\n  applyFilters: PropTypes.func,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object,\n  visualization: PropTypes.object\n};\nexport default MapPlugin;","import React from 'react';\nimport { CircularLoader } from '@dhis2/ui';\nimport classes from './styles/LoadingMask.module.css';\n\nconst LoadingMask = () => {\n  return <div className={classes.center}>\n            <CircularLoader />\n        </div>;\n};\n\nexport default LoadingMask;","const getFilteredVisualization = (visualization, filters) => {\n  if (!Object.keys(filters).length) {\n    return visualization;\n  } // deep clone objects in filters to avoid changing the visualization in the Redux store\n\n\n  const visRows = visualization.rows.map(obj => ({ ...obj\n  }));\n  const visColumns = visualization.columns.map(obj => ({ ...obj\n  }));\n  const visFilters = visualization.filters.map(obj => ({ ...obj\n  }));\n  Object.keys(filters).forEach(dimensionId => {\n    if (filters[dimensionId]) {\n      let dimensionFound = false;\n      [visRows, visColumns, visFilters].forEach(dimensionObjects => dimensionObjects.filter(obj => obj.dimension === dimensionId).forEach(obj => {\n        dimensionFound = true;\n        obj.items = filters[dimensionId];\n      })); // add dimension to filters if not already present elsewhere\n\n      if (!dimensionFound) {\n        visFilters.push({\n          dimension: dimensionId,\n          items: filters[dimensionId]\n        });\n      }\n    }\n  });\n  return { ...visualization,\n    rows: visRows,\n    columns: visColumns,\n    filters: visFilters\n  };\n};\n\nexport default getFilteredVisualization;","import { VIS_TYPE_COLUMN, VIS_TYPE_PIVOT_TABLE, getAdaptedUiLayoutByType } from '@dhis2/analytics';\nimport { REPORT_TABLE, CHART, MAP } from '../../../../modules/itemTypes';\nexport const THEMATIC_LAYER = 'thematic';\n\nconst extractMapView = map => map.mapViews && map.mapViews.find(mv => mv.layer.includes(THEMATIC_LAYER));\n\nconst getWithoutId = object => ({ ...object,\n  id: undefined\n});\n\nconst getVisualizationConfig = (visualization, originalType, activeType) => {\n  if (originalType === MAP && originalType !== activeType) {\n    const extractedMapView = extractMapView(visualization);\n\n    if (extractedMapView === undefined) {\n      return null;\n    }\n\n    return getWithoutId({ ...visualization,\n      ...extractedMapView,\n      mapViews: undefined,\n      type: activeType === CHART ? VIS_TYPE_COLUMN : VIS_TYPE_PIVOT_TABLE\n    });\n  } else if (originalType === REPORT_TABLE && activeType === CHART) {\n    const layout = getAdaptedUiLayoutByType(visualization, VIS_TYPE_COLUMN);\n    return getWithoutId({ ...visualization,\n      ...layout,\n      type: VIS_TYPE_COLUMN\n    });\n  } else if (originalType === CHART && activeType === REPORT_TABLE) {\n    const layout = getAdaptedUiLayoutByType(visualization, VIS_TYPE_PIVOT_TABLE);\n    return getWithoutId({ ...visualization,\n      ...layout,\n      type: VIS_TYPE_PIVOT_TABLE\n    });\n  }\n\n  return getWithoutId(visualization);\n};\n\nexport default getVisualizationConfig;","// Note that this ignores discrepancies in 'this', so shouldn't be used with bound functions\n// This is useful instead of lodash/memoize when we only need to memoize a single value\n// Inspiration: https://github.com/alexreardon/memoize-one\nconst memoizeOne = fn => {\n  let lastArgs = undefined;\n  let lastValue = undefined;\n  return (...args) => {\n    if (lastArgs && args.length === lastArgs.length && args.every((arg, i) => arg === lastArgs[i])) {\n      return lastValue;\n    }\n\n    lastArgs = args;\n    lastValue = fn(...args);\n    return lastValue;\n  };\n};\n\nexport default memoizeOne;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport VisualizationPlugin from '@dhis2/data-visualizer-plugin';\nimport i18n from '@dhis2/d2-i18n';\nimport { D2Shim } from '@dhis2/app-runtime-adapter-d2';\nimport DefaultPlugin from './DefaultPlugin';\nimport MapPlugin from './MapPlugin';\nimport LoadingMask from './LoadingMask';\nimport NoVisualizationMessage from './NoVisualizationMessage';\nimport getFilteredVisualization from './getFilteredVisualization';\nimport getVisualizationConfig from './getVisualizationConfig';\nimport { VISUALIZATION, MAP, CHART, REPORT_TABLE } from '../../../../modules/itemTypes';\nimport { getVisualizationId } from '../../../../modules/item';\nimport memoizeOne from '../../../../modules/memoizeOne';\nimport { sGetVisualization } from '../../../../reducers/visualizations';\nimport { pluginIsAvailable } from './plugin';\n\nclass Visualization extends React.Component {\n  state = {\n    pluginLoaded: false\n  };\n\n  constructor(props) {\n    super(props);\n    this.memoizedGetFilteredVisualization = memoizeOne(getFilteredVisualization);\n    this.memoizedGetVisualizationConfig = memoizeOne(getVisualizationConfig);\n  }\n\n  onLoadingComplete = () => {\n    this.setState({\n      pluginLoaded: true\n    });\n  };\n\n  render() {\n    const {\n      visualization,\n      activeType,\n      item,\n      itemFilters,\n      availableHeight,\n      availableWidth\n    } = this.props;\n\n    if (!visualization) {\n      return <NoVisualizationMessage message={i18n.t('No data to display')} />;\n    }\n\n    const style = {\n      height: availableHeight\n    };\n\n    if (availableWidth) {\n      style.width = availableWidth;\n    }\n\n    const pluginProps = {\n      item,\n      itemFilters,\n      activeType,\n      style,\n      visualization: this.memoizedGetVisualizationConfig(visualization, item.type, activeType)\n    };\n\n    switch (activeType) {\n      case VISUALIZATION:\n      case CHART:\n      case REPORT_TABLE:\n        {\n          return <>\n                        {!this.state.pluginLoaded && <div style={pluginProps.style}>\n                                <LoadingMask />\n                            </div>}\n                        <D2Shim d2Config={{}}>\n                            {({\n                d2\n              }) => <VisualizationPlugin d2={d2} visualization={this.memoizedGetFilteredVisualization(pluginProps.visualization, pluginProps.itemFilters)} onLoadingComplete={this.onLoadingComplete} forDashboard={true} style={pluginProps.style} />}\n                        </D2Shim>\n                    </>;\n        }\n\n      case MAP:\n        {\n          return <MapPlugin applyFilters={this.memoizedGetFilteredVisualization} {...pluginProps} />;\n        }\n\n      default:\n        {\n          pluginProps.visualization = this.memoizedGetFilteredVisualization(pluginProps.visualization, pluginProps.itemFilters);\n          return pluginIsAvailable(pluginProps.activeType || pluginProps.item.type) ? <DefaultPlugin {...pluginProps} /> : <NoVisualizationMessage message={i18n.t('Unable to load the plugin for this item')} />;\n        }\n    }\n  }\n\n}\n\nVisualization.propTypes = {\n  activeType: PropTypes.string,\n  availableHeight: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  availableWidth: PropTypes.number,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object,\n  visualization: PropTypes.object\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    visualization: sGetVisualization(state, getVisualizationId(ownProps.item))\n  };\n};\n\nexport default connect(mapStateToProps)(Visualization);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Warning } from './assets/icons';\nimport classes from './styles/FatalErrorBoundary.module.css';\n\nclass FatalErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      errorFound: false\n    };\n  }\n\n  componentDidCatch(error, info) {\n    this.setState({\n      errorFound: true\n    });\n    console.log('error: ', error);\n    console.log('info: ', info);\n  }\n\n  render() {\n    if (this.state.errorFound) {\n      return <p className={classes.container}>\n                    <span className={classes.icon}>\n                        <Warning />\n                    </span>\n                    <span className={classes.message}>\n                        {i18n.t('There was a problem loading this dashboard item')}\n                    </span>\n                </p>;\n    }\n\n    return this.props.children;\n  }\n\n}\n\nFatalErrorBoundary.propTypes = {\n  children: PropTypes.node\n};\nexport default FatalErrorBoundary;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classes from './styles/ItemHeader.module.css';\n\nconst ViewItemActions = ({\n  actionButtons\n}) => {\n  return actionButtons ? <div className={classes.itemActionsWrap}>{actionButtons}</div> : null;\n};\n\nViewItemActions.propTypes = {\n  actionButtons: PropTypes.node\n};\nexport default ViewItemActions;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { colors } from '@dhis2/ui';\nimport classes from './styles/DeleteItemButton.module.css';\n\nconst DeleteItemButton = ({\n  onClick\n}) => <button type=\"button\" className={classes.deleteItemButton} onClick={onClick} title={i18n.t(`Delete item`)}>\n        <DeleteIcon style={{\n    fill: colors.red500\n  }} />\n    </button>;\n\nDeleteItemButton.propTypes = {\n  onClick: PropTypes.func\n};\nexport default DeleteItemButton;","/** @module reducers/editDashboard */\nimport update from 'immutability-helper';\nimport isEmpty from 'lodash/isEmpty';\nimport { orArray, orObject } from '../modules/util';\nexport const RECEIVED_EDIT_DASHBOARD = 'RECEIVED_EDIT_DASHBOARD';\nexport const RECEIVED_NOT_EDITING = 'RECEIVED_NOT_EDITING';\nexport const START_NEW_DASHBOARD = 'START_NEW_DASHBOARD';\nexport const RECEIVED_TITLE = 'RECEIVED_TITLE';\nexport const RECEIVED_DESCRIPTION = 'RECEIVED_DESCRIPTION';\nexport const ADD_DASHBOARD_ITEM = 'ADD_DASHBOARD_ITEM';\nexport const REMOVE_DASHBOARD_ITEM = 'REMOVE_DASHBOARD_ITEM';\nexport const UPDATE_DASHBOARD_ITEM = 'UPDATE_DASHBOARD_ITEM';\nexport const RECEIVED_DASHBOARD_LAYOUT = 'RECEIVED_DASHBOARD_LAYOUT';\nexport const SET_PRINT_PREVIEW_VIEW = 'SET_PRINT_PREVIEW_VIEW';\nexport const CLEAR_PRINT_PREVIEW_VIEW = 'CLEAR_PRINT_PREVIEW_VIEW';\nexport const DEFAULT_STATE_EDIT_DASHBOARD = {};\nexport const NEW_DASHBOARD_STATE = {\n  id: '',\n  name: '',\n  access: {},\n  description: '',\n  dashboardItems: [],\n  printPreviewView: false\n};\nexport default ((state = DEFAULT_STATE_EDIT_DASHBOARD, action) => {\n  switch (action.type) {\n    case RECEIVED_EDIT_DASHBOARD:\n      {\n        const newState = {};\n        Object.keys(NEW_DASHBOARD_STATE).map(k => newState[k] = action.value[k]);\n        newState.printPreviewView = false;\n        return newState;\n      }\n\n    case RECEIVED_NOT_EDITING:\n      return DEFAULT_STATE_EDIT_DASHBOARD;\n\n    case SET_PRINT_PREVIEW_VIEW:\n      return Object.assign({}, state, {\n        printPreviewView: true\n      });\n\n    case CLEAR_PRINT_PREVIEW_VIEW:\n      return Object.assign({}, state, {\n        printPreviewView: false\n      });\n\n    case START_NEW_DASHBOARD:\n      return NEW_DASHBOARD_STATE;\n\n    case RECEIVED_TITLE:\n      {\n        return Object.assign({}, state, {\n          name: action.value\n        });\n      }\n\n    case RECEIVED_DESCRIPTION:\n      {\n        return Object.assign({}, state, {\n          description: action.value\n        });\n      }\n\n    case ADD_DASHBOARD_ITEM:\n      if (!action.value.position) {\n        return update(state, {\n          dashboardItems: {\n            $unshift: [action.value]\n          }\n        });\n      }\n\n      return update(state, {\n        dashboardItems: {\n          $splice: [[parseInt(action.value.position), 0, action.value]]\n        }\n      });\n\n    case REMOVE_DASHBOARD_ITEM:\n      {\n        const idToRemove = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === idToRemove);\n\n        if (dashboardItemIndex > -1) {\n          return update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1]]\n            }\n          });\n        }\n\n        return state;\n      }\n\n    case RECEIVED_DASHBOARD_LAYOUT:\n      {\n        const stateItems = orArray(state.dashboardItems);\n        let layoutHasChanged = false;\n        const newStateItems = action.value.map(({\n          x,\n          y,\n          w,\n          h,\n          i\n        }) => {\n          const stateItem = stateItems.find(si => si.id === i);\n\n          if (!(stateItem.x === x && stateItem.y === y && stateItem.w === w && stateItem.h === h)) {\n            layoutHasChanged = true;\n            return Object.assign({}, stateItem, {\n              w,\n              h,\n              x,\n              y\n            });\n          }\n\n          return stateItem;\n        });\n        return layoutHasChanged ? { ...state,\n          dashboardItems: newStateItems\n        } : state;\n      }\n\n    case UPDATE_DASHBOARD_ITEM:\n      {\n        const dashboardItem = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === dashboardItem.id);\n\n        if (dashboardItemIndex > -1) {\n          const newState = update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1, Object.assign({}, dashboardItem)]]\n            }\n          });\n          return newState;\n        }\n\n        return state;\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetEditDashboardRoot = state => state.editDashboard; // selectors\n\nexport const sGetIsEditing = state => !isEmpty(state.editDashboard);\nexport const sGetIsPrintPreviewView = state => sGetEditDashboardRoot(state).printPreviewView;\nexport const sGetIsNewDashboard = state => {\n  return !isEmpty(state.editDashboard) && sGetEditDashboardRoot(state).id === '';\n};\nexport const sGetEditDashboardName = state => sGetEditDashboardRoot(state).name;\nexport const sGetEditDashboardDescription = state => sGetEditDashboardRoot(state).description;\nexport const sGetEditDashboardItems = state => orObject(sGetEditDashboardRoot(state)).dashboardItems;","import { apiFetchDashboard } from './dashboards';\nexport const createDashboardMutation = {\n  resource: 'dashboards',\n  type: 'create',\n  data: ({\n    data\n  }) => data\n};\nexport const updateDashboardMutation = {\n  resource: 'dashboards',\n  type: 'update',\n  id: ({\n    id\n  }) => id,\n  data: ({\n    data\n  }) => data\n};\n\nconst generatePayload = (dashboard = {}, data) => {\n  return { ...dashboard,\n    name: data.name,\n    description: data.description,\n    dashboardItems: data.dashboardItems.map(item => ({ ...item,\n      width: item.w,\n      height: item.h\n    }))\n  };\n};\n\nexport const updateDashboard = async (dataEngine, data) => {\n  const dashboard = await apiFetchDashboard(dataEngine, data.id);\n  const {\n    response\n  } = await dataEngine.mutate(updateDashboardMutation, {\n    variables: {\n      id: data.id,\n      data: generatePayload(dashboard, data)\n    }\n  });\n  return response.uid;\n};\nexport const postDashboard = async (dataEngine, data) => {\n  const {\n    response\n  } = await dataEngine.mutate(createDashboardMutation, {\n    variables: {\n      data: generatePayload({}, data)\n    }\n  });\n  return response.uid;\n};","import { generateUid } from 'd2/uid';\nimport i18n from '@dhis2/d2-i18n';\nimport { RECEIVED_EDIT_DASHBOARD, START_NEW_DASHBOARD, RECEIVED_NOT_EDITING, RECEIVED_TITLE, RECEIVED_DESCRIPTION, RECEIVED_DASHBOARD_LAYOUT, ADD_DASHBOARD_ITEM, UPDATE_DASHBOARD_ITEM, REMOVE_DASHBOARD_ITEM, SET_PRINT_PREVIEW_VIEW, CLEAR_PRINT_PREVIEW_VIEW, sGetEditDashboardRoot } from '../reducers/editDashboard';\nimport { tFetchDashboards } from './dashboards';\nimport { updateDashboard, postDashboard } from '../api/editDashboard';\nimport { NEW_ITEM_SHAPE, getGridItemProperties, getPageBreakItemShape, getPrintTitlePageItemShape } from '../modules/gridUtil';\nimport { itemTypeMap, PAGEBREAK, PRINT_TITLE_PAGE } from '../modules/itemTypes';\nimport { convertUiItemsToBackend } from '../modules/uiBackendItemConverter'; // actions\n\nexport const acSetEditDashboard = (dashboard, items) => {\n  const val = { ...dashboard,\n    dashboardItems: items\n  };\n  return {\n    type: RECEIVED_EDIT_DASHBOARD,\n    value: val\n  };\n};\nexport const acSetEditNewDashboard = () => ({\n  type: START_NEW_DASHBOARD\n});\nexport const acClearEditDashboard = () => ({\n  type: RECEIVED_NOT_EDITING\n});\nexport const acSetPrintPreviewView = () => ({\n  type: SET_PRINT_PREVIEW_VIEW\n});\nexport const acClearPrintPreviewView = () => ({\n  type: CLEAR_PRINT_PREVIEW_VIEW\n});\nexport const acSetDashboardTitle = value => ({\n  type: RECEIVED_TITLE,\n  value\n});\nexport const acSetDashboardDescription = value => ({\n  type: RECEIVED_DESCRIPTION,\n  value\n});\nexport const acUpdateDashboardLayout = value => ({\n  type: RECEIVED_DASHBOARD_LAYOUT,\n  value\n});\nexport const acAddDashboardItem = item => {\n  const type = item.type;\n  delete item.type;\n  const itemPropName = itemTypeMap[type].propName;\n  const id = generateUid();\n  const gridItemProperties = getGridItemProperties(id);\n  let shape;\n\n  if (type === PAGEBREAK) {\n    const yPos = item.yPos || 0;\n    shape = getPageBreakItemShape(yPos, item.isStatic);\n  } else if (type === PRINT_TITLE_PAGE) {\n    shape = getPrintTitlePageItemShape();\n  } else {\n    shape = NEW_ITEM_SHAPE;\n  }\n\n  return {\n    type: ADD_DASHBOARD_ITEM,\n    value: {\n      id,\n      type,\n      position: item.position || null,\n      [itemPropName]: item.content,\n      ...NEW_ITEM_SHAPE,\n      ...gridItemProperties,\n      ...shape\n    }\n  };\n};\nexport const acUpdateDashboardItem = item => ({\n  type: UPDATE_DASHBOARD_ITEM,\n  value: item\n});\nexport const acRemoveDashboardItem = value => ({\n  type: REMOVE_DASHBOARD_ITEM,\n  value\n}); // thunks\n\nexport const tSaveDashboard = () => async (dispatch, getState, dataEngine) => {\n  const dashboard = sGetEditDashboardRoot(getState());\n  const dashboardToSave = { ...dashboard,\n    dashboardItems: convertUiItemsToBackend(dashboard.dashboardItems),\n    name: dashboard.name || i18n.t('Untitled dashboard')\n  };\n  const dashboardId = dashboardToSave.id ? await updateDashboard(dataEngine, dashboardToSave) : await postDashboard(dataEngine, dashboardToSave); // update the dashboard list\n\n  await dispatch(tFetchDashboards());\n  return Promise.resolve(dashboardId);\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport DeleteItemButton from './DeleteItemButton';\nimport { acRemoveDashboardItem } from '../../../actions/editDashboard';\nimport classes from './styles/ItemHeader.module.css';\n\nconst EditItemActions = ({\n  itemId,\n  acRemoveDashboardItem\n}) => {\n  const handleDeleteItem = () => acRemoveDashboardItem(itemId);\n\n  return <div className={classes.itemActionsWrap}>\n            <DeleteItemButton onClick={handleDeleteItem} />\n        </div>;\n};\n\nEditItemActions.propTypes = {\n  acRemoveDashboardItem: PropTypes.func,\n  itemId: PropTypes.string\n};\nconst mapDispatchToProps = {\n  acRemoveDashboardItem\n};\nexport default connect(null, mapDispatchToProps)(EditItemActions);","import React from 'react';\nimport { colors } from '@dhis2/ui';\n\nconst WarningIcon = () => <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" fill={colors.grey600}>\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z\" />\n    </svg>;\n\nexport default WarningIcon;","import React from 'react';\nimport { Tooltip } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport InfoIcon from '../../../icons/Info';\nimport classes from './styles/PrintItemInfo.module.css';\n\nconst PrintWarning = () => <div className={classes.warning}>\n        <Tooltip content={i18n.t('This item has been shortened to fit on one page')} placement=\"bottom\">\n            <InfoIcon />\n        </Tooltip>\n    </div>;\n\nexport default PrintWarning;","export const EDIT = 'edit';\nexport const NEW = 'new';\nexport const VIEW = 'view';\nexport const PRINT = 'print';\nexport const PRINT_LAYOUT = 'print-layout';\nexport const isEditMode = mode => [EDIT, NEW].includes(mode);\nexport const isPrintMode = mode => [PRINT, PRINT_LAYOUT].includes(mode);\nexport const isViewMode = mode => mode === VIEW;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ViewItemActions from './ViewItemActions';\nimport EditItemActions from './EditItemActions';\nimport PrintItemInfo from './PrintItemInfo';\nimport { VIEW, EDIT, PRINT_LAYOUT } from '../../Dashboard/dashboardModes';\nimport classes from './styles/ItemHeader.module.css';\n\nconst getItemActionsMap = isShortened => {\n  return {\n    [VIEW]: ViewItemActions,\n    [EDIT]: EditItemActions,\n    [PRINT_LAYOUT]: isShortened ? PrintItemInfo : null\n  };\n}; // This is the margin-top + margin-bottom defined in the css file\n\n\nexport const HEADER_MARGIN_HEIGHT = 12;\nconst ItemHeader = React.forwardRef(({\n  dashboardMode,\n  title,\n  isShortened,\n  ...rest\n}, ref) => {\n  const Actions = getItemActionsMap(isShortened)[dashboardMode];\n  return <div className={classes.itemHeaderWrap} ref={ref}>\n                <p className={classes.itemTitle}>{title}</p>\n                {Actions ? <Actions {...rest} /> : null}\n            </div>;\n});\nItemHeader.displayName = 'ItemHeader';\nItemHeader.propTypes = {\n  dashboardMode: PropTypes.string,\n  isShortened: PropTypes.bool,\n  title: PropTypes.string\n};\nexport default connect(null, null, null, {\n  forwardRef: true\n})(ItemHeader);","import React, { useState, createRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { useConfig } from '@dhis2/app-runtime';\nimport { isSingleValue, isYearOverYear, VIS_TYPE_GAUGE, VIS_TYPE_PIE } from '@dhis2/analytics';\nimport { Button, Menu, Popover, MenuItem, Divider, colors } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport { ThreeDots, SpeechBubble, Fullscreen, ExitFullscreen } from './assets/icons';\nimport { getLink } from './Visualization/plugin';\nimport { CHART, MAP, REPORT_TABLE, EVENT_CHART, EVENT_REPORT, isTrackerDomainType, hasMapView, getAppName } from '../../../modules/itemTypes';\nconst iconFill = {\n  fill: colors.grey600\n};\n\nconst ItemHeaderButtons = props => {\n  const [menuIsOpen, setMenuIsOpen] = useState(null);\n  const {\n    baseUrl\n  } = useConfig();\n  const {\n    item,\n    visualization,\n    onSelectActiveType,\n    activeType\n  } = props;\n  const isTrackerType = isTrackerDomainType(item.type);\n\n  const onViewTable = () => {\n    closeMenu();\n    onSelectActiveType(isTrackerType ? EVENT_REPORT : REPORT_TABLE);\n  };\n\n  const onViewChart = () => {\n    closeMenu();\n    onSelectActiveType(isTrackerType ? EVENT_CHART : CHART);\n  };\n\n  const onViewMap = () => {\n    closeMenu();\n    onSelectActiveType(MAP);\n  };\n\n  const itemHasMapView = () => hasMapView(item.type);\n\n  const handleInterpretationClick = () => {\n    props.onToggleFooter();\n\n    if (menuIsOpen) {\n      closeMenu();\n    }\n  };\n\n  const handleToggleFullscreenClick = () => {\n    props.onToggleFullscreen();\n    closeMenu();\n  };\n\n  const openMenu = () => setMenuIsOpen(true);\n\n  const closeMenu = () => setMenuIsOpen(false);\n\n  const type = visualization.type || item.type;\n  const canViewAs = !isSingleValue(type) && !isYearOverYear(type) && type !== VIS_TYPE_GAUGE && type !== VIS_TYPE_PIE;\n  const interpretationMenuLabel = props.activeFooter ? i18n.t(`Hide interpretations and details`) : i18n.t(`Show interpretations and details`);\n\n  const ViewAsMenuItems = () => <>\n            {activeType !== CHART && activeType !== EVENT_CHART && <MenuItem dense label={i18n.t('View as Chart')} onClick={onViewChart} icon={<ChartIcon style={iconFill} />} />}\n            {activeType !== REPORT_TABLE && activeType !== EVENT_REPORT && <MenuItem dense label={i18n.t('View as Table')} onClick={onViewTable} icon={<TableIcon style={iconFill} />} />}\n            {itemHasMapView() && activeType !== MAP && <MenuItem dense label={i18n.t('View as Map')} onClick={onViewMap} icon={<MapIcon style={iconFill} />} />}\n        </>;\n\n  const buttonRef = createRef();\n  return props.isFullscreen ? <Button small secondary onClick={props.onToggleFullscreen}>\n            <ExitFullscreen />\n        </Button> : <>\n            <div ref={buttonRef}>\n                <Button small secondary onClick={openMenu} dataTest=\"dashboarditem-menu-button\">\n                    <ThreeDots />\n                </Button>\n            </div>\n            {menuIsOpen && <Popover reference={buttonRef} placement=\"auto-start\" arrow={false} onClickOutside={closeMenu}>\n                    <Menu>\n                        {canViewAs && <>\n                                <ViewAsMenuItems />\n                                <Divider />\n                            </>}\n                        <MenuItem dense icon={<LaunchIcon style={{\n          fill: '#6e7a8a'\n        }} />} label={i18n.t('Open in {{appName}} app', {\n          appName: getAppName(item.type)\n        })} href={getLink(item, baseUrl)} target=\"_blank\" />\n                        <MenuItem dense icon={<SpeechBubble />} label={interpretationMenuLabel} onClick={handleInterpretationClick} />\n                        {props.fullscreenSupported && <MenuItem dense icon={<Fullscreen />} label={i18n.t('View fullscreen')} onClick={handleToggleFullscreenClick} />}\n                    </Menu>\n                </Popover>}\n        </>;\n};\n\nItemHeaderButtons.propTypes = {\n  activeFooter: PropTypes.bool,\n  activeType: PropTypes.string,\n  fullscreenSupported: PropTypes.bool,\n  isFullscreen: PropTypes.bool,\n  item: PropTypes.object,\n  visualization: PropTypes.object,\n  onSelectActiveType: PropTypes.func,\n  onToggleFooter: PropTypes.func,\n  onToggleFullscreen: PropTypes.func\n};\nexport default ItemHeaderButtons;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getVisualizationId } from '../../../modules/item';\nimport InterpretationsComponent from '@dhis2/d2-ui-interpretations';\nimport { useD2 } from '@dhis2/app-runtime-adapter-d2';\nimport classes from './styles/ItemFooter.module.css';\n\nconst ItemFooter = props => {\n  const {\n    d2\n  } = useD2({});\n  return <div data-test=\"dashboarditem-footer\">\n            <hr className={classes.line} />\n            <div className={classes.scrollContainer}>\n                <InterpretationsComponent d2={d2} item={props.item} type={props.item.type.toLowerCase()} id={getVisualizationId(props.item)} appName=\"dashboard\" />\n            </div>\n        </div>;\n};\n\nItemFooter.propTypes = {\n  item: PropTypes.object.isRequired\n};\nexport default ItemFooter;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport uniqueId from 'lodash/uniqueId';\nimport Visualization from './Visualization/Visualization';\nimport FatalErrorBoundary from './FatalErrorBoundary';\nimport ItemHeader, { HEADER_MARGIN_HEIGHT } from '../ItemHeader/ItemHeader';\nimport ItemHeaderButtons from './ItemHeaderButtons';\nimport ItemFooter from './ItemFooter';\nimport { WindowDimensionsCtx } from '../../WindowDimensionsProvider';\nimport { SystemSettingsCtx } from '../../SystemSettingsProvider';\nimport { apiPostDataStatistics } from '../../../api/dataStatistics';\nimport { apiFetchVisualization } from '../../../api/metadata';\nimport { sGetVisualization } from '../../../reducers/visualizations';\nimport { sGetSelectedItemActiveType } from '../../../reducers/selected';\nimport { sGetIsEditing } from '../../../reducers/editDashboard';\nimport { sGetItemFiltersRoot, DEFAULT_STATE_ITEM_FILTERS } from '../../../reducers/itemFilters';\nimport { acAddVisualization } from '../../../actions/visualizations';\nimport { acSetSelectedItemActiveType } from '../../../actions/selected';\nimport { pluginIsAvailable, resize as pluginResize } from './Visualization/plugin';\nimport { getDataStatisticsName } from '../../../modules/itemTypes';\nimport { getVisualizationId, getVisualizationName } from '../../../modules/item';\nimport memoizeOne from '../../../modules/memoizeOne';\nimport { isEditMode, isPrintMode, isViewMode } from '../../Dashboard/dashboardModes';\nimport { getItemHeightPx } from '../../../modules/gridUtil';\nimport getGridItemDomId from '../../../modules/getGridItemDomId'; // this is set in the .dashboard-item-content css\n\nconst ITEM_CONTENT_PADDING = 4;\nexport class Item extends Component {\n  state = {\n    showFooter: false,\n    configLoaded: false,\n    isFullscreen: false\n  };\n\n  constructor(props) {\n    super(props);\n    this.contentRef = React.createRef();\n    this.headerRef = React.createRef();\n    this.itemDomElSelector = `.reactgriditem-${this.props.item.id}`;\n    this.memoizedGetContentHeight = memoizeOne((calculatedHeight, measuredHeight, preferMeasured) => preferMeasured ? measuredHeight || calculatedHeight : calculatedHeight);\n  }\n\n  async componentDidMount() {\n    this.props.updateVisualization(await apiFetchVisualization(this.props.item));\n\n    try {\n      if (this.props.settings.keyGatherAnalyticalObjectStatisticsInDashboardViews && isViewMode(this.props.dashboardMode)) {\n        await apiPostDataStatistics(getDataStatisticsName(this.props.item.type), getVisualizationId(this.props.item));\n      }\n    } catch (e) {\n      console.log(e);\n    }\n\n    this.setState({\n      configLoaded: true\n    });\n    const el = document.querySelector(this.itemDomElSelector);\n\n    if (el?.requestFullscreen) {\n      el.onfullscreenchange = this.handleFullscreenChange;\n    } else if (el?.webkitRequestFullscreen) {\n      el.onwebkitfullscreenchange = this.handleFullscreenChange;\n    }\n  }\n\n  componentWillUnmount() {\n    const el = document.querySelector(this.itemDomElSelector);\n\n    if (el?.onfullscreenchange) {\n      el.removeEventListener('onfullscreenchange', this.handleFullscreenChange);\n    } else if (el?.onwebkitfullscreenchange) {\n      el.removeEventListener('onwebkitfullscreenchange', this.handleFullscreenChange);\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.gridWidth !== this.props.gridWidth) {\n      const el = document.querySelector(`#${getGridItemDomId(this.props.item.id)}`);\n\n      if (typeof el?.setViewportSize === 'function') {\n        setTimeout(() => el.setViewportSize(el.clientWidth - 5, el.clientHeight - 5), 10);\n      } // call resize on Map item\n\n\n      pluginResize(this.props.item, this.state.isFullscreen);\n    }\n  }\n\n  isFullscreenSupported = () => {\n    const el = document.querySelector(this.itemDomElSelector);\n    return !!(el?.requestFullscreen || el?.webkitRequestFullscreen);\n  };\n  handleFullscreenChange = () => {\n    this.setState({\n      isFullscreen: !!document.fullscreenElement || !!document.webkitFullscreenElement\n    }, () => pluginResize(this.props.item, this.state.isFullscreen));\n  };\n  onToggleFullscreen = () => {\n    if (!this.state.isFullscreen) {\n      const el = document.querySelector(this.itemDomElSelector);\n\n      if (el?.requestFullscreen) {\n        el.requestFullscreen();\n      } else if (el?.webkitRequestFullscreen) {\n        el.webkitRequestFullscreen();\n      }\n    } else {\n      document.exitFullscreen ? document.exitFullscreen() : document.webkitExitFullscreen();\n    }\n  };\n  getUniqueKey = memoizeOne(() => uniqueId());\n  onToggleFooter = () => {\n    this.setState({\n      showFooter: !this.state.showFooter\n    }, this.props.onToggleItemExpanded(this.props.item.id));\n  };\n  setActiveType = type => {\n    type !== this.getActiveType() && this.props.setActiveType(this.props.item.id, type);\n  };\n  getActiveType = () => {\n    if (this.props.isEditing) {\n      return this.props.item.type;\n    }\n\n    return this.props.activeType || this.props.item.type;\n  };\n  getAvailableHeight = width => {\n    if (this.state.isFullscreen) {\n      return '95vh';\n    }\n\n    const calculatedHeight = getItemHeightPx(this.props.item, width) - this.headerRef.current.clientHeight - HEADER_MARGIN_HEIGHT - ITEM_CONTENT_PADDING;\n    return this.memoizedGetContentHeight(calculatedHeight, this.contentRef ? this.contentRef.offsetHeight : null, isEditMode(this.props.dashboardMode) || isPrintMode(this.props.dashboardMode));\n  };\n  getAvailableWidth = () => {\n    const rect = document.querySelector(this.itemDomElSelector)?.getBoundingClientRect();\n    return rect && rect.width - ITEM_CONTENT_PADDING * 2;\n  };\n\n  render() {\n    const {\n      item,\n      dashboardMode,\n      itemFilters\n    } = this.props;\n    const {\n      showFooter\n    } = this.state;\n    const activeType = this.getActiveType();\n    const actionButtons = pluginIsAvailable(activeType || item.type) ? <ItemHeaderButtons item={item} visualization={this.props.visualization} onSelectActiveType={this.setActiveType} onToggleFooter={this.onToggleFooter} onToggleFullscreen={this.onToggleFullscreen} activeType={activeType} activeFooter={showFooter} isFullscreen={this.state.isFullscreen} fullscreenSupported={this.isFullscreenSupported()} /> : null;\n    return <>\n                <ItemHeader title={getVisualizationName(item)} itemId={item.id} actionButtons={actionButtons} ref={this.headerRef} dashboardMode={dashboardMode} isShortened={item.shortened} />\n                <FatalErrorBoundary>\n                    <div key={this.getUniqueKey(itemFilters)} className=\"dashboard-item-content\" ref={ref => this.contentRef = ref}>\n                        {this.state.configLoaded && <WindowDimensionsCtx.Consumer>\n                                {dimensions => <Visualization item={item} activeType={activeType} itemFilters={itemFilters} availableHeight={this.getAvailableHeight(dimensions.width)} availableWidth={this.getAvailableWidth()} />}\n                            </WindowDimensionsCtx.Consumer>}\n                    </div>\n                </FatalErrorBoundary>\n                {isViewMode(dashboardMode) && showFooter ? <ItemFooter item={item} /> : null}\n            </>;\n  }\n\n}\nItem.propTypes = {\n  activeType: PropTypes.string,\n  dashboardMode: PropTypes.string,\n  gridWidth: PropTypes.number,\n  isEditing: PropTypes.bool,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object,\n  setActiveType: PropTypes.func,\n  settings: PropTypes.object,\n  updateVisualization: PropTypes.func,\n  visualization: PropTypes.object,\n  onToggleItemExpanded: PropTypes.func\n};\nItem.defaultProps = {\n  item: {},\n  onToggleItemExpanded: Function.prototype,\n  visualization: {}\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const itemFilters = !isEditMode(ownProps.dashboardMode) ? sGetItemFiltersRoot(state) : DEFAULT_STATE_ITEM_FILTERS;\n  return {\n    activeType: sGetSelectedItemActiveType(state, ownProps.item?.id),\n    isEditing: sGetIsEditing(state),\n    itemFilters,\n    visualization: sGetVisualization(state, getVisualizationId(ownProps.item))\n  };\n};\n\nconst mapDispatchToProps = {\n  setActiveType: acSetSelectedItemActiveType,\n  updateVisualization: acAddVisualization\n};\n\nconst ItemWithSettings = props => <SystemSettingsCtx.Consumer>\n        {({\n    settings\n  }) => <Item settings={settings} {...props} />}\n    </SystemSettingsCtx.Consumer>;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ItemWithSettings);","import React from 'react';\nimport { colors } from '@dhis2/ui';\nconst style = {\n  backgroundColor: colors.grey200,\n  border: 'none',\n  height: '1px',\n  margin: '0px 0px 5px 0px'\n};\n\nconst Line = () => <hr style={style} />;\n\nexport default Line;","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { colors } from '@dhis2/ui';\nimport { useConfig } from '@dhis2/app-runtime';\nimport { useD2 } from '@dhis2/app-runtime-adapter-d2';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport Line from '../../../widgets/Line';\nimport { sGetMessagesRoot } from '../../../reducers/messages';\nimport { formatDate } from '../../../modules/util';\nimport { isViewMode } from '../../Dashboard/dashboardModes';\nimport './MessagesItem.css';\nconst PRIVATE = 'PRIVATE';\nconst messageTypes = {\n  [PRIVATE]: 'Private',\n  VALIDATION_RESULT: 'Validation',\n  TICKET: 'Ticket',\n  SYSTEM: 'System'\n};\nconst style = {\n  list: {\n    listStyleType: 'none',\n    paddingLeft: '0px'\n  },\n  seeAll: {\n    textAlign: 'center',\n    fontSize: '13px',\n    marginBottom: '5px'\n  },\n  sender: {\n    fontSize: '13px',\n    lineHeight: '15px',\n    margin: 0,\n    color: colors.grey800\n  },\n  snippet: {\n    color: colors.grey800,\n    fontSize: '13px',\n    lineHeight: '15px',\n    maxHeight: '30px',\n    overflow: 'hidden'\n  }\n};\n\nconst MessagesItem = ({\n  messages,\n  item,\n  dashboardMode\n}) => {\n  const [uiLocale, setUiLocale] = useState('');\n  const {\n    d2\n  } = useD2({});\n  const {\n    baseUrl\n  } = useConfig();\n  useEffect(() => {\n    const getUiLocale = async () => {\n      const uiLocale = await d2.currentUser.userSettings.get('keyUiLocale');\n      setUiLocale(uiLocale);\n    };\n\n    getUiLocale();\n  }, []);\n\n  const getMessageHref = msg => {\n    const msgIdentifier = msg ? `#/${msg.messageType}/${msg.id}` : '';\n    return `${baseUrl}/dhis-web-messaging/${msgIdentifier}`;\n  };\n\n  const getMessageSender = msg => {\n    const latestMsg = msg.messages.slice(-1)[0];\n    return latestMsg.sender ? latestMsg.sender.displayName : '';\n  };\n\n  const getMessageItems = () => {\n    const modeClass = isViewMode(dashboardMode) ? 'view' : null;\n    return messages.map(msg => {\n      const redirectToMsg = () => {\n        if (isViewMode(dashboardMode)) {\n          document.location.href = getMessageHref(msg);\n        }\n      };\n\n      const sender = msg.messageType === PRIVATE ? getMessageSender(msg) : messageTypes[msg.messageType];\n      const readClass = !msg.read ? 'unread' : null;\n      const latestMsg = msg.messages.slice(-1)[0];\n      const msgDate = latestMsg.lastUpdated;\n      return <li className={`message-item ${modeClass}`} key={msg.id} onClick={redirectToMsg}>\n                    <p className={`message-title ${readClass}`}>\n                        {msg.displayName} ({msg.messageCount})\n                    </p>\n                    <p style={style.sender}>\n                        {sender} - {formatDate(msgDate, uiLocale)}\n                    </p>\n                    <p style={style.snippet}>{latestMsg.text}</p>\n                </li>;\n    });\n  };\n\n  return <>\n            <ItemHeader title={i18n.t('Messages')} itemId={item.id} dashboardMode={dashboardMode} isShortened={item.shortened} />\n            <Line />\n            {messages.length > 0 && <div className=\"dashboard-item-content\">\n                    <ul style={style.list}>{getMessageItems()}</ul>\n                    <div style={style.seeAll}>\n                        <a href={getMessageHref()}>\n                            {i18n.t('See all messages')}\n                        </a>\n                    </div>\n                </div>}\n        </>;\n};\n\nMessagesItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  messages: PropTypes.array\n};\n\nconst mapStateToProps = state => {\n  return {\n    messages: Object.values(sGetMessagesRoot(state))\n  };\n};\n\nconst MessagesContainer = connect(mapStateToProps, null)(MessagesItem);\nexport default MessagesContainer;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nconst NotSupportedItem = props => <>\n        <ItemHeader title={i18n.t('Item type \"{{type}}\" not supported', {\n    type: props.item.type\n  })} itemId={props.item.id} dashboardMode={props.dashboardMode} isShortened={props.item.shortened} />\n        <div style={{\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '90%'\n  }}>\n            <NotInterestedIcon style={{\n      width: 100,\n      height: 100,\n      align: 'center'\n    }} color=\"disabled\" />\n        </div>\n    </>;\n\nNotSupportedItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object\n};\nexport default NotSupportedItem;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst DescriptionIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill={colors.grey500}>\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M14 2H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6zm2 16H8v-2h8v2zm0-4H8v-2h8v2zm-3-5V3.5L18.5 9H13z\" />\n    </svg>;\n\nDescriptionIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default DescriptionIcon;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst DeleteIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill={colors.red500}>\n        <path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>;\n\nDeleteIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default DeleteIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { colors } from '@dhis2/ui';\nimport { useConfig } from '@dhis2/app-runtime';\nimport DescriptionIcon from '../../../icons/Description';\nimport DeleteIcon from '../../../icons/Delete';\nimport Line from '../../../widgets/Line';\nimport { itemTypeMap, getItemUrl } from '../../../modules/itemTypes';\nimport { orArray } from '../../../modules/util';\nimport { tRemoveListItemContent } from './actions';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport { isEditMode } from '../../Dashboard/dashboardModes';\nimport classes from './Item.module.css';\n\nconst getItemTitle = item => itemTypeMap[item.type].pluralTitle;\n\nconst getContentItems = item => orArray(item[itemTypeMap[item.type].propName]).filter((item, index, array) => array.findIndex(el => el.id === item.id) === index);\n\nconst ListItem = ({\n  item,\n  dashboardMode,\n  tRemoveListItemContent\n}) => {\n  const {\n    baseUrl\n  } = useConfig();\n  const contentItems = getContentItems(item);\n\n  const getLink = contentItem => {\n    const deleteButton = <button className={classes.deletebutton} onClick={() => tRemoveListItemContent(item, contentItem)}>\n                <DeleteIcon className={classes.deleteicon} />\n            </button>;\n    return <>\n                <a className={classes.link} style={{\n        color: colors.grey900\n      }} href={getItemUrl(item.type, contentItem, baseUrl)}>\n                    {contentItem.name}\n                </a>\n                {isEditMode(dashboardMode) ? deleteButton : null}\n            </>;\n  };\n\n  return <>\n            <ItemHeader title={getItemTitle(item)} itemId={item.id} dashboardMode={dashboardMode} isShortened={item.shortened} />\n            <Line />\n            <div className=\"dashboard-item-content\">\n                <ul className={classes.list}>\n                    {contentItems.map(contentItem => <li className={classes.item} key={contentItem.id}>\n                            <DescriptionIcon className={classes.itemicon} />\n                            {getLink(contentItem)}\n                        </li>)}\n                </ul>\n            </div>\n        </>;\n};\n\nListItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  tRemoveListItemContent: PropTypes.func\n};\nexport default connect(null, {\n  tRemoveListItemContent\n})(ListItem);","import { acUpdateDashboardItem, acRemoveDashboardItem } from '../../../actions/editDashboard';\nimport { itemTypeMap } from '../../../modules/itemTypes';\nexport const tRemoveListItemContent = (dashboardItem, content) => dispatch => {\n  const listItemType = itemTypeMap[dashboardItem.type].propName;\n  const newContent = dashboardItem[listItemType].filter(item => item.id !== content.id);\n\n  if (newContent.length) {\n    dashboardItem[listItemType] = newContent;\n    dispatch(acUpdateDashboardItem(dashboardItem));\n  } else {\n    dispatch(acRemoveDashboardItem(dashboardItem));\n  }\n};","/** @module reducers/editDashboard */\nimport update from 'immutability-helper';\nimport isEmpty from 'lodash/isEmpty';\nimport { orArray } from '../modules/util';\nexport const SET_PRINT_DASHBOARD = 'SET_PRINT_DASHBOARD';\nexport const CLEAR_PRINT_DASHBOARD = 'CLEAR_PRINT_DASHBOARD';\nexport const ADD_PRINT_DASHBOARD_ITEM = 'ADD_PRINT_DASHBOARD_ITEM';\nexport const SET_PRINT_DASHBOARD_LAYOUT = 'SET_PRINT_DASHBOARD_LAYOUT';\nexport const REMOVE_PRINT_DASHBOARD_ITEM = 'REMOVE_PRINT_DASHBOARD_ITEM';\nexport const UPDATE_PRINT_DASHBOARD_ITEM = 'UPDATE_PRINT_DASHBOARD_ITEM';\nexport const DEFAULT_STATE_PRINT_DASHBOARD = {};\nconst DEFAULT_DASHBOARD_ITEMS = [];\nexport const NEW_PRINT_DASHBOARD_STATE = {\n  id: '',\n  name: '',\n  access: {},\n  description: '',\n  dashboardItems: DEFAULT_DASHBOARD_ITEMS\n};\nexport default ((state = DEFAULT_STATE_PRINT_DASHBOARD, action) => {\n  switch (action.type) {\n    case SET_PRINT_DASHBOARD:\n      {\n        const newState = {};\n        Object.keys(NEW_PRINT_DASHBOARD_STATE).map(k => newState[k] = action.value[k]);\n        return newState;\n      }\n\n    case CLEAR_PRINT_DASHBOARD:\n      return DEFAULT_STATE_PRINT_DASHBOARD;\n\n    case ADD_PRINT_DASHBOARD_ITEM:\n      if (!action.value.position) {\n        return update(state, {\n          dashboardItems: {\n            $unshift: [action.value]\n          }\n        });\n      }\n\n      return update(state, {\n        dashboardItems: {\n          $splice: [[parseInt(action.value.position), 0, action.value]]\n        }\n      });\n\n    case REMOVE_PRINT_DASHBOARD_ITEM:\n      {\n        const idToRemove = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === idToRemove);\n\n        if (dashboardItemIndex > -1) {\n          return update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1]]\n            }\n          });\n        }\n\n        return state;\n      }\n\n    case UPDATE_PRINT_DASHBOARD_ITEM:\n      {\n        const dashboardItem = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === dashboardItem.id);\n\n        if (dashboardItemIndex > -1) {\n          const newState = update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1, Object.assign({}, dashboardItem)]]\n            }\n          });\n          return newState;\n        }\n\n        return state;\n      }\n\n    case SET_PRINT_DASHBOARD_LAYOUT:\n      {\n        const stateItems = orArray(state.dashboardItems);\n        let layoutHasChanged = false;\n        const newStateItems = action.value.map(({\n          x,\n          y,\n          w,\n          h,\n          i\n        }) => {\n          const stateItem = stateItems.find(si => si.id === i);\n\n          if (!(stateItem.x === x && stateItem.y === y && stateItem.w === w && stateItem.h === h)) {\n            layoutHasChanged = true;\n            return Object.assign({}, stateItem, {\n              w,\n              h,\n              x,\n              y\n            });\n          }\n\n          return stateItem;\n        });\n        return layoutHasChanged ? { ...state,\n          dashboardItems: newStateItems\n        } : state;\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetPrintDashboardRoot = state => state.printDashboard; // selectors\n\nexport const sGetIsPrinting = state => !isEmpty(state.printDashboard);\nexport const sGetPrintDashboardName = state => sGetPrintDashboardRoot(state).name;\nexport const sGetPrintDashboardDescription = state => sGetPrintDashboardRoot(state).description;\nexport const sGetPrintDashboardItems = state => {\n  return sGetPrintDashboardRoot(state)?.dashboardItems || DEFAULT_DASHBOARD_ITEMS;\n};","import React from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport Input from '@material-ui/core/Input';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport PrintItemInfo from '../ItemHeader/PrintItemInfo';\nimport Line from '../../../widgets/Line';\nimport { Parser as RichTextParser, Editor as RichTextEditor } from '@dhis2/d2-ui-rich-text';\nimport { acUpdateDashboardItem } from '../../../actions/editDashboard';\nimport { sGetEditDashboardItems } from '../../../reducers/editDashboard';\nimport { sGetDashboardItems } from '../../../reducers/dashboards';\nimport { sGetIsPrinting, sGetPrintDashboardItems } from '../../../reducers/printDashboard';\nimport { isEditMode, PRINT_LAYOUT } from '../../Dashboard/dashboardModes';\nconst style = {\n  textDiv: {\n    padding: '10px',\n    whiteSpace: 'pre-line',\n    lineHeight: '20px'\n  },\n  textField: {\n    fontSize: '14px',\n    fontStretch: 'normal',\n    width: '90%',\n    margin: '0 auto',\n    display: 'block',\n    lineHeight: '24px'\n  },\n  container: {\n    marginBottom: '20px',\n    marginTop: '20px'\n  }\n};\n\nconst TextItem = props => {\n  const {\n    item,\n    dashboardMode,\n    text,\n    acUpdateDashboardItem\n  } = props;\n\n  const onChangeText = event => {\n    const updatedItem = { ...item,\n      text: event.target.value\n    };\n    acUpdateDashboardItem(updatedItem);\n  };\n\n  const viewItem = () => {\n    const textDivStyle = Object.assign({}, style.textField, style.textDiv);\n    return <div className=\"dashboard-item-content\" style={style.container}>\n                <RichTextParser style={textDivStyle}>{text}</RichTextParser>\n            </div>;\n  };\n\n  const editItem = () => {\n    return <>\n                <ItemHeader title={i18n.t('Text item')} itemId={item.id} dashboardMode={dashboardMode} />\n                <Line />\n                <div className=\"dashboard-item-content\">\n                    <RichTextEditor onEdit={onChangeText}>\n                        <Input value={text} multiline fullWidth style={style.textField} placeholder={i18n.t('Add text here')} onChange={onChangeText} />\n                    </RichTextEditor>\n                </div>\n            </>;\n  };\n\n  const printItem = () => {\n    const textDivStyle = Object.assign({}, style.textField, style.textDiv);\n    return <>\n                {props.item.shortened ? <PrintItemInfo /> : null}\n                <div className=\"dashboard-item-content\" style={style.container}>\n                    <RichTextParser style={textDivStyle}>{text}</RichTextParser>\n                </div>\n            </>;\n  };\n\n  let textItem;\n\n  if (isEditMode(dashboardMode)) {\n    textItem = editItem;\n  } else if (dashboardMode === PRINT_LAYOUT) {\n    textItem = printItem;\n  } else {\n    textItem = viewItem;\n  }\n\n  return <>{textItem()}</>;\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const isPrintPreview = sGetIsPrinting(state);\n  let items;\n\n  if (isPrintPreview) {\n    items = sGetPrintDashboardItems(state);\n  } else if (isEditMode(ownProps.dashboardMode)) {\n    items = sGetEditDashboardItems(state);\n  } else {\n    items = sGetDashboardItems(state);\n  }\n\n  const item = items.find(item => item.id === ownProps.item.id);\n  return {\n    text: item ? item.text : ''\n  };\n};\n\nTextItem.propTypes = {\n  acUpdateDashboardItem: PropTypes.func,\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  text: PropTypes.string\n};\nexport default connect(mapStateToProps, {\n  acUpdateDashboardItem\n})(TextItem);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\nimport { useD2 } from '@dhis2/app-runtime-adapter-d2';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport Line from '../../../widgets/Line';\nimport { FILTER_ORG_UNIT } from '../../../actions/itemFilters';\nimport { sGetItemFiltersRoot, DEFAULT_STATE_ITEM_FILTERS } from '../../../reducers/itemFilters';\nimport { EDIT, isEditMode } from '../../Dashboard/dashboardModes';\n\nconst getIframeSrc = (appDetails, item, itemFilters) => {\n  let iframeSrc = `${appDetails.launchUrl}?dashboardItemId=${item.id}`;\n\n  if (itemFilters[FILTER_ORG_UNIT] && itemFilters[FILTER_ORG_UNIT].length) {\n    const ouIds = itemFilters[FILTER_ORG_UNIT].map(ouFilter => ouFilter.path.split('/').slice(-1)[0]);\n    iframeSrc += `&userOrgUnit=${ouIds.join(',')}`;\n  }\n\n  return iframeSrc;\n};\n\nconst AppItem = ({\n  dashboardMode,\n  item,\n  itemFilters\n}) => {\n  const {\n    d2\n  } = useD2({});\n  let appDetails;\n  const appKey = item.appKey;\n\n  if (appKey) {\n    appDetails = d2.system.installedApps.find(app => app.key === appKey);\n  }\n\n  const hideTitle = appDetails?.settings?.dashboardWidget?.hideTitle && dashboardMode !== EDIT;\n  return appDetails && appDetails.name && appDetails.launchUrl ? <>\n            {!hideTitle && <>\n                    <ItemHeader title={appDetails.name} itemId={item.id} dashboardMode={dashboardMode} isShortened={item.shortened} />\n                    <Line />\n                </>}\n            <iframe title={appDetails.name} src={getIframeSrc(appDetails, item, itemFilters)} className={!hideTitle ? 'dashboard-item-content' : 'dashboard-item-content-hidden-title'} style={{\n      border: 'none'\n    }} />\n        </> : <>\n            <ItemHeader title={`${appKey} app not found`} />\n            <Line />\n            <div className=\"dashboard-item-content\" style={{\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      height: '90%'\n    }}>\n                <NotInterestedIcon color=\"disabled\" disabled style={{\n        width: 100,\n        height: 100,\n        align: 'center'\n      }} />\n            </div>\n        </>;\n};\n\nAppItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const itemFilters = !isEditMode(ownProps.dashboardMode) ? sGetItemFiltersRoot(state) : DEFAULT_STATE_ITEM_FILTERS;\n  return {\n    itemFilters\n  };\n};\n\nexport default connect(mapStateToProps)(AppItem);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { colors } from '@dhis2/ui';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nconst style = {\n  margin: '21px 28px',\n  fontSize: '14px',\n  lineHeight: '18px',\n  color: colors.grey600\n};\n\nconst SpacerItem = props => {\n  return <>\n            <ItemHeader title={i18n.t('Spacer')} itemId={props.item.id} dashboardMode={props.dashboardMode} isShortened={props.item.shortened} />\n            <p style={style}>\n                {i18n.t('Use a spacer to create empty vertical space between other dashboard items.')}\n            </p>\n        </>;\n};\n\nSpacerItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object\n};\nexport default SpacerItem;","import React from 'react';\n\nconst PageBreakItem = () => <div />;\n\nexport default PageBreakItem;","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { sGetSelectedId, sGetSelectedShowDescription } from '../../../reducers/selected';\nimport { sGetDashboardById, EMPTY_DASHBOARD } from '../../../reducers/dashboards';\nimport { sGetNamedItemFilters } from '../../../reducers/itemFilters';\nimport { sGetIsEditing } from '../../../reducers/editDashboard';\nimport { sGetPrintDashboardName, sGetPrintDashboardDescription } from '../../../reducers/printDashboard';\nimport classes from './styles/Item.module.css';\n\nconst PrintTitlePageItem = ({\n  name,\n  description,\n  itemFilters,\n  showDescription\n}) => {\n  const getItemFilterList = () => {\n    const listItems = itemFilters.map(({\n      name,\n      values\n    }) => <li className={classes.filterListItem} key={name}>\n                {name}: {values.map(val => val.name).join(', ')}\n            </li>);\n    return <ul className={classes.filterList}>{listItems}</ul>;\n  };\n\n  return <div className={classes.titlePage}>\n            <p className={classes.name}>{name}</p>\n            {showDescription && description && <p className={classes.description}>{description}</p>}\n            {itemFilters.length > 0 && <>\n                    <p className={classes.filterTitle}>\n                        {i18n.t('Filters applied')}\n                    </p>\n                    {getItemFilterList()}\n                </>}\n        </div>;\n};\n\nPrintTitlePageItem.propTypes = {\n  description: PropTypes.string,\n  itemFilters: PropTypes.array,\n  name: PropTypes.string,\n  showDescription: PropTypes.bool\n};\nPrintTitlePageItem.defaultProps = {\n  description: '',\n  name: '',\n  showDescription: false\n};\n\nconst mapStateToProps = state => {\n  const id = sGetSelectedId(state);\n  const isEditMode = sGetIsEditing(state);\n  const viewDashboard = sGetDashboardById(state, id) || EMPTY_DASHBOARD;\n  const name = isEditMode ? sGetPrintDashboardName(state) || i18n.t('Untitled dashboard') : viewDashboard.displayName;\n  const description = isEditMode ? sGetPrintDashboardDescription(state) : viewDashboard.displayDescription;\n  return {\n    name,\n    description,\n    itemFilters: sGetNamedItemFilters(state),\n    showDescription: sGetSelectedShowDescription(state)\n  };\n};\n\nexport default connect(mapStateToProps)(PrintTitlePageItem);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport VisualizationItem from './VisualizationItem/Item';\nimport MessagesItem from './MessagesItem/Item';\nimport NotSupportedItem from './NotSupportedItem/Item';\nimport ListItem from './ListItem/Item';\nimport TextItem from './TextItem/Item';\nimport AppItem from './AppItem/Item';\nimport SpacerItem from './SpacerItem/Item';\nimport PageBreakItem from './PageBreakItem/Item';\nimport PrintTitlePageItem from './PrintTitlePageItem/Item';\nimport { APP, VISUALIZATION, REPORT_TABLE, CHART, MAP, EVENT_CHART, EVENT_REPORT, MESSAGES, REPORTS, RESOURCES, USERS, TEXT, SPACER, PAGEBREAK, PRINT_TITLE_PAGE } from '../../modules/itemTypes';\n\nconst getGridItem = type => {\n  switch (type) {\n    case VISUALIZATION:\n    case REPORT_TABLE:\n    case CHART:\n    case MAP:\n    case EVENT_CHART:\n    case EVENT_REPORT:\n      return VisualizationItem;\n\n    case MESSAGES:\n      return MessagesItem;\n\n    case REPORTS:\n    case RESOURCES:\n    case USERS:\n      return ListItem;\n\n    case TEXT:\n      return TextItem;\n\n    case SPACER:\n      return SpacerItem;\n\n    case APP:\n      return AppItem;\n\n    case PAGEBREAK:\n      return PageBreakItem;\n\n    case PRINT_TITLE_PAGE:\n      return PrintTitlePageItem;\n\n    default:\n      return NotSupportedItem;\n  }\n};\n\nexport const Item = props => {\n  const GridItem = getGridItem(props.item.type);\n  return <GridItem item={props.item} gridWidth={props.gridWidth} dashboardMode={props.dashboardMode} onToggleItemExpanded={props.onToggleItemExpanded} />;\n};\nItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  gridWidth: PropTypes.number,\n  item: PropTypes.object,\n  onToggleItemExpanded: PropTypes.func\n};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash/debounce';\nimport pick from 'lodash/pick';\nconst defaultDebounceMs = 100;\nconst defaultBufferFactor = 0.25;\n\nclass ProgressiveLoadingContainer extends Component {\n  static propTypes = {\n    children: PropTypes.node.isRequired,\n    bufferFactor: PropTypes.number,\n    className: PropTypes.string,\n    debounceMs: PropTypes.number,\n    style: PropTypes.object\n  };\n  static defaultProps = {\n    debounceMs: defaultDebounceMs,\n    bufferFactor: defaultBufferFactor\n  };\n  state = {\n    shouldLoad: false\n  };\n  containerRef = null;\n  shouldLoadHandler = null;\n  handlerOptions = {\n    passive: true\n  };\n\n  checkShouldLoad() {\n    if (!this.containerRef) {\n      return;\n    }\n\n    const bufferPx = this.props.bufferFactor * window.innerHeight;\n    const rect = this.containerRef.getBoundingClientRect();\n\n    if (rect.bottom > -bufferPx && rect.top < window.innerHeight + bufferPx) {\n      this.setState({\n        shouldLoad: true\n      });\n      this.removeHandler();\n    }\n  }\n\n  registerHandler() {\n    this.shouldLoadHandler = debounce(() => this.checkShouldLoad(), this.props.debounceMs);\n    document.getElementsByClassName('dashboard-wrapper')[0]?.addEventListener('scroll', this.shouldLoadHandler, this.handlerOptions);\n  }\n\n  removeHandler() {\n    document.getElementsByClassName('dashboard-wrapper')[0]?.removeEventListener('scroll', this.shouldLoadHandler, this.handlerOptions);\n  }\n\n  componentDidMount() {\n    this.registerHandler();\n    this.checkShouldLoad();\n  }\n\n  componentWillUnmount() {\n    this.removeHandler();\n  }\n\n  render() {\n    const {\n      children,\n      className,\n      style,\n      ...props\n    } = this.props;\n    const {\n      shouldLoad\n    } = this.state;\n    const eventProps = pick(props, ['onMouseDown', 'onTouchStart', 'onMouseUp', 'onTouchEnd']);\n    return <div ref={ref => this.containerRef = ref} style={style} className={className} data-test={`dashboarditem-${props.itemId}`} {...eventProps}>\n                {shouldLoad && children}\n            </div>;\n  }\n\n}\n\nexport default ProgressiveLoadingContainer;","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport cx from 'classnames';\nimport { Responsive as ResponsiveReactGridLayout } from 'react-grid-layout';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport { useWindowDimensions } from '../WindowDimensionsProvider';\nimport { Item } from '../Item/Item';\nimport { GRID_ROW_HEIGHT_PX, SM_SCREEN_GRID_COLUMNS, GRID_COMPACT_TYPE, GRID_PADDING_PX, MARGIN_PX, MARGIN_SM_PX, hasShape, GRID_COLUMNS, getSmallLayout, getGridWidth, getProportionalHeight } from '../../modules/gridUtil';\nimport { orArray } from '../../modules/util';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport { sGetSelectedId, sGetSelectedIsLoading } from '../../reducers/selected';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport ProgressiveLoadingContainer from '../Item/ProgressiveLoadingContainer';\nimport { VIEW } from '../Dashboard/dashboardModes';\nimport { getBreakpoint, isSmallScreen } from '../../modules/smallScreen';\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\nimport './styles/ItemGrid.css';\nconst EXPANDED_HEIGHT = 17;\nconst EXPANDED_HEIGHT_SM = 13;\n\nconst ResponsiveItemGrid = ({\n  isLoading,\n  dashboardItems\n}) => {\n  const {\n    width\n  } = useWindowDimensions();\n  const [expandedItems, setExpandedItems] = useState({});\n  const [displayItems, setDisplayItems] = useState(dashboardItems);\n  const [layoutSm, setLayoutSm] = useState([]);\n  const [gridWidth, setGridWidth] = useState(0);\n  useEffect(() => {\n    if (isSmallScreen(width)) {\n      setLayoutSm(getItemsWithAdjustedHeight(getSmallLayout(dashboardItems, width)));\n    }\n\n    setDisplayItems(getItemsWithAdjustedHeight(dashboardItems));\n  }, [expandedItems, width, dashboardItems]);\n\n  const onToggleItemExpanded = clickedId => {\n    const isExpanded = typeof expandedItems[clickedId] === 'boolean' ? expandedItems[clickedId] : false;\n    const newExpandedItems = { ...expandedItems\n    };\n    newExpandedItems[clickedId] = !isExpanded;\n    setExpandedItems(newExpandedItems);\n  };\n\n  const getItemsWithAdjustedHeight = items => items.map(item => {\n    const expandedItem = expandedItems[item.id];\n\n    if (expandedItem && expandedItem === true) {\n      const expandedHeight = isSmallScreen(width) ? EXPANDED_HEIGHT_SM : EXPANDED_HEIGHT;\n      return Object.assign({}, item, {\n        h: item.h + expandedHeight,\n        smallOriginalH: getProportionalHeight(item, width)\n      });\n    }\n\n    return item;\n  });\n\n  const getItemComponent = item => <ProgressiveLoadingContainer key={item.i} className={cx(item.type, 'view', `reactgriditem-${item.id}`)} itemId={item.id}>\n            <Item item={item} gridWidth={gridWidth} dashboardMode={VIEW} onToggleItemExpanded={onToggleItemExpanded} />\n        </ProgressiveLoadingContainer>;\n\n  const getItemComponents = items => items.map(item => getItemComponent(item));\n\n  const onWidthChanged = containerWidth => {\n    setTimeout(() => {\n      setGridWidth(containerWidth);\n    }, 200);\n  };\n\n  if (!isLoading && !dashboardItems.length) {\n    return <NoContentMessage text={i18n.t('There are no items on this dashboard')} />;\n  }\n\n  return <>\n            {isLoading ? <Layer translucent>\n                    <CenteredContent>\n                        <CircularLoader />\n                    </CenteredContent>\n                </Layer> : null}\n            <ResponsiveReactGridLayout rowHeight={GRID_ROW_HEIGHT_PX} width={getGridWidth(width)} cols={{\n      lg: GRID_COLUMNS,\n      sm: SM_SCREEN_GRID_COLUMNS\n    }} breakpoints={{\n      lg: getBreakpoint(),\n      sm: 0\n    }} layouts={{\n      lg: displayItems,\n      sm: layoutSm\n    }} compactType={GRID_COMPACT_TYPE} margin={isSmallScreen(width) ? MARGIN_SM_PX : MARGIN_PX} containerPadding={{\n      lg: GRID_PADDING_PX,\n      sm: GRID_PADDING_PX\n    }} isDraggable={false} isResizable={false} draggableCancel=\"input,textarea\" onWidthChange={onWidthChanged}>\n                {getItemComponents(displayItems)}\n            </ResponsiveReactGridLayout>\n        </>;\n};\n\nResponsiveItemGrid.propTypes = {\n  dashboardItems: PropTypes.array,\n  isLoading: PropTypes.bool\n};\n\nconst mapStateToProps = state => {\n  const selectedDashboard = sGetDashboardById(state, sGetSelectedId(state));\n  const dashboardItems = orArray(sGetDashboardItems(state)).filter(hasShape);\n  return {\n    isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n    dashboardItems\n  };\n};\n\nexport default connect(mapStateToProps)(ResponsiveItemGrid);","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { colors } from '@dhis2/ui';\nconst styles = {\n  badgeContainer: {\n    margin: '2px',\n    padding: '0 16px',\n    borderRadius: '4px',\n    color: colors.white,\n    backgroundColor: '#212934',\n    height: 36,\n    display: 'flex',\n    alignItems: 'center'\n  },\n  badge: {\n    fontSize: '13px',\n    cursor: 'pointer',\n    whiteSpace: 'nowrap'\n  },\n  badgeRemove: {\n    fontSize: '12px',\n    textDecoration: 'underline',\n    marginLeft: '24px',\n    cursor: 'pointer'\n  }\n};\n\nclass FilterBadge extends Component {\n  onClick = id => () => this.props.onClick(id);\n  onRemove = id => () => this.props.onRemove(id);\n\n  render() {\n    const {\n      data\n    } = this.props;\n    return <div style={styles.badgeContainer} data-test=\"dashboard-filter-badge\">\n                <span style={styles.badge} onClick={this.onClick(data.id)}>\n                    {`${data.name}: ${data.values.length > 1 ? i18n.t('{{count}} selected', {\n          count: data.values.length\n        }) : data.values[0].name}`}\n                </span>\n                <span style={styles.badgeRemove} onClick={this.onRemove(data.id)}>\n                    {i18n.t('Remove')}\n                </span>\n            </div>;\n  }\n\n}\n\nFilterBadge.propTypes = {\n  data: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired,\n  onRemove: PropTypes.func.isRequired\n};\nFilterBadge.defaultProps = {\n  onClick: Function.prototype,\n  onRemove: Function.prototype\n};\nexport default FilterBadge;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport FilterBadge from './FilterBadge';\nimport { sGetNamedItemFilters } from '../../reducers/itemFilters';\nimport { acRemoveItemFilter } from '../../actions/itemFilters';\nimport { acSetActiveModalDimension } from '../../actions/activeModalDimension';\nimport classes from './styles/FilterBar.module.css';\nexport class FilterBar extends Component {\n  onBadgeRemove = id => {\n    this.props.removeItemFilter(id);\n  };\n  onBadgeClick = id => {\n    this.props.setActiveModalDimension({\n      id,\n      name: this.props.filters.find(item => item.id === id).name\n    });\n  };\n\n  render() {\n    const {\n      filters\n    } = this.props;\n    return filters.length ? // the 3 is calculated so that the FilterBar has the same vertical position as the TitleBar in relation to the ControlBar\n    <div className={classes.bar} style={{\n      top: 3\n    }}>\n                {filters.map(filter => <FilterBadge key={filter.id} data={filter} onClick={this.onBadgeClick} onRemove={this.onBadgeRemove} />)}\n            </div> : null;\n  }\n\n}\nFilterBar.propTypes = {\n  filters: PropTypes.array.isRequired,\n  removeItemFilter: PropTypes.func.isRequired,\n  setActiveModalDimension: PropTypes.func\n};\nFilterBar.defaultProps = {\n  filters: [],\n  removeItemFIlter: Function.prototype\n};\n\nconst mapStateToProps = state => ({\n  filters: sGetNamedItemFilters(state)\n});\n\nexport default connect(mapStateToProps, {\n  setActiveModalDimension: acSetActiveModalDimension,\n  removeItemFilter: acRemoveItemFilter\n})(FilterBar);","import { generateUid } from 'd2/uid';\nimport { SET_PRINT_DASHBOARD, CLEAR_PRINT_DASHBOARD, SET_PRINT_DASHBOARD_LAYOUT, ADD_PRINT_DASHBOARD_ITEM, REMOVE_PRINT_DASHBOARD_ITEM, UPDATE_PRINT_DASHBOARD_ITEM } from '../reducers/printDashboard';\nimport { NEW_ITEM_SHAPE, getGridItemProperties, getPageBreakItemShape, getPrintTitlePageItemShape } from '../modules/gridUtil';\nimport { itemTypeMap, PAGEBREAK } from '../modules/itemTypes'; // actions\n\nexport const acSetPrintDashboard = (dashboard, items) => {\n  const val = { ...dashboard,\n    dashboardItems: items\n  };\n  return {\n    type: SET_PRINT_DASHBOARD,\n    value: val\n  };\n};\nexport const acClearPrintDashboard = () => ({\n  type: CLEAR_PRINT_DASHBOARD\n});\nexport const acUpdatePrintDashboardLayout = value => ({\n  type: SET_PRINT_DASHBOARD_LAYOUT,\n  value\n});\nexport const acAddPrintDashboardItem = item => {\n  const type = item.type;\n  delete item.type;\n  const itemPropName = itemTypeMap[type].propName;\n  const id = generateUid();\n  const gridItemProperties = getGridItemProperties(id);\n  let shape;\n\n  if (type === PAGEBREAK) {\n    const yPos = item.yPos || 0;\n    shape = getPageBreakItemShape(yPos, item.isStatic);\n  } else {\n    shape = getPrintTitlePageItemShape(item.isOneItemPerPage);\n  }\n\n  return {\n    type: ADD_PRINT_DASHBOARD_ITEM,\n    value: {\n      id,\n      type,\n      position: item.position || null,\n      [itemPropName]: item.content,\n      ...NEW_ITEM_SHAPE,\n      ...gridItemProperties,\n      ...shape\n    }\n  };\n};\nexport const acRemovePrintDashboardItem = value => ({\n  type: REMOVE_PRINT_DASHBOARD_ITEM,\n  value\n});\nexport const acUpdatePrintDashboardItem = item => ({\n  type: UPDATE_PRINT_DASHBOARD_ITEM,\n  value: item\n});","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport ViewTitleBar from '../TitleBar/ViewTitleBar';\nimport ViewItemGrid from '../ItemGrid/ViewItemGrid';\nimport FilterBar from '../FilterBar/FilterBar';\nimport DashboardsBar, { isDashboardBarMaxHeight } from '../ControlBar/DashboardsBar';\nimport { sGetIsEditing } from '../../reducers/editDashboard';\nimport { sGetIsPrinting } from '../../reducers/printDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { acClearEditDashboard } from '../../actions/editDashboard';\nimport { acClearPrintDashboard } from '../../actions/printDashboard';\nimport { CONTROL_BAR_COLLAPSED, getControlBarHeight, getControlBarHeightSmallDevice, HEADERBAR_HEIGHT } from '../ControlBar/controlBarDimensions';\nimport { useWindowDimensions } from '../WindowDimensionsProvider';\nimport { isSmallScreen } from '../../modules/smallScreen';\nexport const ViewDashboard = props => {\n  const {\n    width,\n    height\n  } = useWindowDimensions();\n  useEffect(() => {\n    if (props.dashboardIsEditing) {\n      props.clearEditDashboard();\n    } else if (props.dashboardIsPrinting) {\n      props.clearPrintDashboard();\n    }\n  }, [props.dashboardIsEditing, props.dashboardIsPrinting]);\n  useEffect(() => {\n    document.querySelector('.dashboard-wrapper')?.scroll(0, 0);\n  }, [props.selectedId]);\n  const dashboardHeight = height - HEADERBAR_HEIGHT - (isSmallScreen(width) && !isDashboardBarMaxHeight(props.controlBarRows) ? getControlBarHeightSmallDevice(CONTROL_BAR_COLLAPSED) : getControlBarHeight(props.controlBarRows));\n  return <>\n            <DashboardsBar />\n            <div className=\"dashboard-wrapper\" style={{\n      height: dashboardHeight\n    }}>\n                <ViewTitleBar />\n                <FilterBar />\n                <ViewItemGrid />\n            </div>\n        </>;\n};\nViewDashboard.propTypes = {\n  clearEditDashboard: PropTypes.func,\n  clearPrintDashboard: PropTypes.func,\n  controlBarRows: PropTypes.number,\n  dashboardIsEditing: PropTypes.bool,\n  dashboardIsPrinting: PropTypes.bool,\n  selectedId: PropTypes.string\n};\n\nconst mapStateToProps = state => {\n  return {\n    dashboardIsEditing: sGetIsEditing(state),\n    dashboardIsPrinting: sGetIsPrinting(state),\n    controlBarRows: sGetControlBarUserRows(state),\n    selectedId: sGetSelectedId(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  clearEditDashboard: acClearEditDashboard,\n  clearPrintDashboard: acClearPrintDashboard\n})(ViewDashboard);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { InputField } from '@dhis2/ui';\n\nconst ItemSearchField = props => <InputField name=\"Dashboard item search\" label={i18n.t('Search for items to add to this dashboard')} type=\"text\" onChange={props.onChange} onFocus={props.onFocus} value={props.value} dataTest=\"item-search\" />;\n\nItemSearchField.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n  onFocus: PropTypes.func\n};\nexport default ItemSearchField;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { MenuItem, colors } from '@dhis2/ui';\nimport classes from './styles/HeaderMenuItem.module.css';\n\nconst HeaderMenuItem = ({\n  title\n}) => <MenuItem className={classes.item} dense key={title} disabled label={<span style={{\n  color: colors.grey800,\n  fontWeight: '600'\n}}>\n                {title}\n            </span>} />;\n\nHeaderMenuItem.propTypes = {\n  title: PropTypes.string.isRequired\n};\nexport default HeaderMenuItem;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst LaunchIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\" fill={colors.grey600} viewBox=\"0 0 24 24\">\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z\" />\n    </svg>;\n\nLaunchIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default LaunchIcon;","import React from 'react';\nimport { MenuItem, colors } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport { visTypeIcons } from '@dhis2/analytics';\nimport { getItemIcon, VISUALIZATION } from '../../modules/itemTypes';\nimport LaunchIcon from '../../icons/Launch';\nimport classes from './styles/ContentMenuItem.module.css';\n\nconst LaunchLink = ({\n  url\n}) => <a onClick={e => e.stopPropagation()} className={classes.launchLink} target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n        <LaunchIcon />\n    </a>;\n\nLaunchLink.propTypes = {\n  url: PropTypes.string\n};\n\nconst InsertButton = () => <button className={classes.buttonInsert}>{i18n.t('Insert')}</button>;\n\nconst ContentMenuItem = ({\n  type,\n  name,\n  onInsert,\n  url,\n  visType\n}) => {\n  const ItemIcon = getItemIcon(type);\n  const renderedItemIcon = type === VISUALIZATION ? visTypeIcons[visType] : <ItemIcon style={{\n    fill: colors.grey600\n  }} />;\n  return <MenuItem dense onClick={onInsert} label={<div className={classes.menuItem}>\n                    <div className={classes.label}>\n                        <span style={{\n        marginRight: '6px'\n      }}>\n                            {renderedItemIcon}\n                        </span>\n                        <span>{name}</span>\n                        {url ? <LaunchLink url={url} /> : null}\n                    </div>\n                    <InsertButton />\n                </div>} dataTest={`menu-item-${name}`} />;\n};\n\nContentMenuItem.propTypes = {\n  name: PropTypes.string,\n  type: PropTypes.string,\n  url: PropTypes.string,\n  visType: PropTypes.string,\n  onInsert: PropTypes.func\n};\nexport default ContentMenuItem;","import { sGetEditDashboardRoot } from '../../reducers/editDashboard';\nimport { itemTypeMap } from '../../modules/itemTypes';\nimport { acAddDashboardItem, acUpdateDashboardItem } from '../../actions/editDashboard';\nexport const tAddListItemContent = (type, content) => (dispatch, getState) => {\n  const state = getState();\n  const listItemType = itemTypeMap[type].propName;\n  const dashboardItems = sGetEditDashboardRoot(state).dashboardItems;\n  const dashboardItemIndex = dashboardItems.findIndex(item => item.type === type);\n  let dashboardItem; // Reports/Resources/Users dashboard item type already present in dashboard\n\n  if (dashboardItemIndex > -1) {\n    dashboardItem = dashboardItems[dashboardItemIndex];\n    dashboardItem[listItemType].push(content);\n    dispatch(acUpdateDashboardItem(dashboardItem));\n  } else {\n    dashboardItem = {\n      type: type,\n      content: [content]\n    };\n    dispatch(acAddDashboardItem(dashboardItem));\n  }\n};","import i18n from '@dhis2/d2-i18n';\nimport { VISUALIZATION, MAP, EVENT_CHART, EVENT_REPORT, USERS, REPORTS, RESOURCES, APP, MESSAGES, TEXT, SPACER } from '../../modules/itemTypes';\nexport const singleItems = [{\n  id: 'additional',\n  header: i18n.t('Additional items'),\n  items: [{\n    type: TEXT,\n    name: i18n.t('Text box'),\n    content: ''\n  }, {\n    type: MESSAGES,\n    name: i18n.t('Messages'),\n    content: 'true'\n  }, {\n    type: SPACER,\n    name: i18n.t('Spacer'),\n    content: ''\n  }]\n}]; // categorizedItems are grouped in the item selector menu\n\nexport const categorizedItems = [VISUALIZATION, MAP, EVENT_REPORT, EVENT_CHART, USERS, REPORTS, RESOURCES, APP]; // listItemTypes are included in a single dashboard item\n\nexport const listItemTypes = [REPORTS, RESOURCES, USERS];","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { MenuItem, Divider } from '@dhis2/ui';\nimport { useConfig } from '@dhis2/app-runtime';\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\nimport { tAddListItemContent } from './actions';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\nimport { getItemUrl, APP, VISUALIZATION } from '../../modules/itemTypes';\nimport { categorizedItems, listItemTypes } from './selectableItems';\nimport classes from './styles/CategorizedMenuGroup.module.css';\n\nconst CategorizedMenuGroup = ({\n  type,\n  title,\n  items,\n  hasMore,\n  acAddDashboardItem,\n  tAddListItemContent,\n  onChangeItemsLimit\n}) => {\n  const {\n    baseUrl\n  } = useConfig();\n  const [seeMore, setSeeMore] = useState(false);\n\n  const addItem = item => () => {\n    if (type === APP) {\n      acAddDashboardItem({\n        type,\n        content: item.key\n      });\n    } else {\n      const newItem = {\n        id: item.id,\n        name: item.displayName || item.name\n      };\n\n      if (listItemTypes.includes(type)) {\n        tAddListItemContent(type, newItem);\n      } else {\n        acAddDashboardItem({\n          type,\n          content: newItem\n        });\n      }\n    }\n  };\n\n  const toggleSeeMore = () => {\n    setSeeMore(!seeMore);\n    onChangeItemsLimit(type);\n  };\n\n  return <>\n            <HeaderMenuItem title={title} />\n            {items.map(item => {\n      const itemUrl = getItemUrl(type, item, baseUrl);\n      return <ContentMenuItem key={item.id || item.key} type={type} visType={type === VISUALIZATION ? item.type : type} name={item.displayName || item.name} onInsert={addItem(item)} url={itemUrl} />;\n    })}\n            {hasMore ? <MenuItem dense key={`showmore${title}`} onClick={toggleSeeMore} label={<button className={classes.showMoreButton}>\n                            {seeMore ? i18n.t('Show fewer') : i18n.t('Show more')}\n                        </button>} /> : null}\n            <Divider margin=\"8px 0px\" />\n        </>;\n};\n\nCategorizedMenuGroup.propTypes = {\n  items: PropTypes.array.isRequired,\n  title: PropTypes.string.isRequired,\n  type: PropTypes.oneOf(categorizedItems).isRequired,\n  onChangeItemsLimit: PropTypes.func.isRequired,\n  acAddDashboardItem: PropTypes.func,\n  hasMore: PropTypes.bool,\n  tAddListItemContent: PropTypes.func\n};\nexport default connect(null, {\n  acAddDashboardItem,\n  tAddListItemContent\n})(CategorizedMenuGroup);","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\nexport const SinglesMenuGroup = ({\n  acAddDashboardItem,\n  category\n}) => {\n  const addToDashboard = ({\n    type,\n    content\n  }) => () => {\n    acAddDashboardItem({\n      type,\n      content\n    });\n  };\n\n  return <>\n            <HeaderMenuItem title={category.header} />\n            {category.items.map(item => <ContentMenuItem key={item.type} type={item.type} name={item.name} onInsert={addToDashboard(item)} />)}\n        </>;\n};\nSinglesMenuGroup.propTypes = {\n  acAddDashboardItem: PropTypes.func,\n  category: PropTypes.object\n};\nexport default connect(null, {\n  acAddDashboardItem\n})(SinglesMenuGroup);","import React, { useState, useEffect, createRef } from 'react';\nimport { Popover, FlyoutMenu } from '@dhis2/ui';\nimport { useD2 } from '@dhis2/app-runtime-adapter-d2';\nimport ItemSearchField from './ItemSearchField';\nimport CategorizedMenuGroup from './CategorizedMenuGroup';\nimport SinglesMenuGroup from './SinglesMenuGroup';\nimport { singleItems, categorizedItems } from './selectableItems';\nimport { itemTypeMap, getDefaultItemCount } from '../../modules/itemTypes';\nimport classes from './styles/ItemSelector.module.css';\n\nconst ItemSelector = () => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [filter, setFilter] = useState('');\n  const [items, setItems] = useState(null);\n  const [maxOptions, setMaxOptions] = useState(new Set());\n  const {\n    d2\n  } = useD2({});\n  useEffect(() => {\n    let queryString = '?count=11';\n\n    if ([...maxOptions.values()].length) {\n      queryString += '&max=' + [...maxOptions.values()].join('&max=');\n    }\n\n    const filterStr = filter ? `/${filter}` : '';\n    d2.Api.getApi().get(`dashboards/q${filterStr}${queryString}`).then(response => setItems(response)).catch(console.error);\n  }, [filter, maxOptions]);\n\n  const closeMenu = () => {\n    setIsOpen(false);\n    setFilter('');\n    setMaxOptions(new Set());\n  };\n\n  const openMenu = () => setIsOpen(true);\n\n  const getCategorizedMenuGroups = () => {\n    return categorizedItems.filter(type => {\n      const itemType = itemTypeMap[type];\n      return items && items[itemType.endPointName];\n    }).map(type => {\n      const itemType = itemTypeMap[type];\n      const itemCount = getDefaultItemCount(type);\n      const allItems = items[itemType.endPointName];\n      const hasMore = allItems.length > itemCount;\n      const displayItems = maxOptions.has(itemType.id) ? allItems : allItems.slice(0, itemCount);\n      return <CategorizedMenuGroup key={type} type={type} title={itemType.pluralTitle} items={displayItems} onChangeItemsLimit={updateMaxOptions} hasMore={hasMore} />;\n    });\n  };\n\n  const getSinglesMenuGroups = () => singleItems.map(category => <SinglesMenuGroup key={category.id} category={category} />);\n\n  const getMenuGroups = () => getCategorizedMenuGroups().concat(getSinglesMenuGroups());\n\n  const updateMaxOptions = type => {\n    if (type) {\n      const options = new Set(maxOptions);\n      options.has(type) ? options.delete(type) : options.add(type);\n      setMaxOptions(options);\n    } else {\n      setMaxOptions(new Set());\n    }\n  };\n\n  const updateFilter = ({\n    value\n  }) => setFilter(value);\n\n  const inputRef = createRef();\n  return <>\n            <span ref={inputRef}>\n                <ItemSearchField value={filter} onChange={updateFilter} onFocus={openMenu} />\n            </span>\n            {isOpen && <Popover reference={inputRef} placement=\"bottom-start\" onClickOutside={closeMenu} arrow={false} maxWidth={700}>\n                    <FlyoutMenu className={classes.menu} dataTest=\"item-menu\" maxWidth=\"700px\">\n                        {getMenuGroups()}\n                    </FlyoutMenu>\n                </Popover>}\n        </>;\n};\n\nexport default ItemSelector;","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { InputField, TextAreaField } from '@dhis2/ui';\nimport ItemSelector from '../ItemSelector/ItemSelector';\nimport { acSetDashboardTitle, acSetDashboardDescription } from '../../actions/editDashboard';\nimport { orObject } from '../../modules/util';\nimport { sGetEditDashboardRoot } from '../../reducers/editDashboard';\nimport classes from './styles/EditTitleBar.module.css';\nexport const EditTitleBar = ({\n  name,\n  description,\n  onChangeTitle,\n  onChangeDescription\n}) => {\n  const updateTitle = (_, e) => {\n    onChangeTitle(e.target.value);\n  };\n\n  const updateDescription = (_, e) => {\n    onChangeDescription(e.target.value);\n  };\n\n  return <section className={classes.section}>\n            <div className={classes.titleDescription}>\n                <InputField className={classes.title} name=\"Dashboard title input\" label={i18n.t('Dashboard title')} type=\"text\" onChange={updateTitle} value={name} placeholder={i18n.t('Untitled dashboard')} dataTest=\"dashboard-title-input\" />\n                <TextAreaField className={classes.description} name=\"Dashboard description input\" label={i18n.t('Dashboard description')} onChange={updateDescription} value={description} dataTest=\"dashboard-description-input\" />\n            </div>\n            <div className={classes.itemSelector}>\n                <ItemSelector />\n            </div>\n        </section>;\n};\nEditTitleBar.propTypes = {\n  onChangeDescription: PropTypes.func.isRequired,\n  onChangeTitle: PropTypes.func.isRequired,\n  description: PropTypes.string,\n  name: PropTypes.string\n};\nEditTitleBar.defaultProps = {\n  name: '',\n  description: ''\n};\n\nconst mapStateToProps = state => {\n  const selectedDashboard = orObject(sGetEditDashboardRoot(state));\n  return {\n    name: selectedDashboard.name,\n    description: selectedDashboard.description\n  };\n};\n\nconst mapDispatchToProps = {\n  onChangeTitle: acSetDashboardTitle,\n  onChangeDescription: acSetDashboardDescription\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(EditTitleBar);","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Responsive as ResponsiveReactGridLayout } from 'react-grid-layout';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport cx from 'classnames';\nimport { acUpdateDashboardLayout } from '../../actions/editDashboard';\nimport { Item } from '../Item/Item';\nimport { resize as pluginResize } from '../Item/VisualizationItem/Visualization/plugin';\nimport { isVisualizationType } from '../../modules/itemTypes';\nimport { GRID_ROW_HEIGHT_PX, GRID_COMPACT_TYPE, MARGIN_PX, GRID_PADDING_PX, GRID_COLUMNS, hasShape, getGridWidth } from '../../modules/gridUtil';\nimport { getBreakpoint } from '../../modules/smallScreen';\nimport getGridItemDomId from '../../modules/getGridItemDomId';\nimport { orArray } from '../../modules/util';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport { sGetSelectedIsLoading } from '../../reducers/selected';\nimport { sGetEditDashboardRoot, sGetEditDashboardItems } from '../../reducers/editDashboard';\nimport ProgressiveLoadingContainer from '../Item/ProgressiveLoadingContainer';\nimport { EDIT } from '../Dashboard/dashboardModes';\nimport { useWindowDimensions } from '../WindowDimensionsProvider';\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\nimport './styles/ItemGrid.css';\n\nconst EditItemGrid = ({\n  isLoading,\n  dashboardItems,\n  acUpdateDashboardLayout\n}) => {\n  const [gridWidth, setGridWidth] = useState(0);\n  const {\n    width\n  } = useWindowDimensions();\n\n  const onLayoutChange = newLayout => {\n    acUpdateDashboardLayout(newLayout);\n  };\n\n  const onResizeStop = (layout, oldItem, newItem) => {\n    const el = document.querySelector(`#${getGridItemDomId(newItem.i)}`) || {};\n    if (typeof el.setViewportSize === 'function') setTimeout(() => el.setViewportSize(el.clientWidth - 5, el.clientHeight - 5), 10);\n    const dashboardItem = dashboardItems.find(item => item.id === newItem.i); // call resize on the item component if it's a plugin type\n\n    if (dashboardItem && isVisualizationType(dashboardItem)) {\n      pluginResize(dashboardItem);\n    }\n  };\n\n  const getItemComponent = item => <ProgressiveLoadingContainer key={item.i} className={cx(item.type, 'edit')} itemId={item.id}>\n            <Item item={item} gridWidth={gridWidth} dashboardMode={EDIT} />\n        </ProgressiveLoadingContainer>;\n\n  const getItemComponents = items => items.map(item => getItemComponent(item));\n\n  const onWidthChanged = containerWidth => {\n    setTimeout(() => {\n      setGridWidth(containerWidth);\n    }, 200);\n  };\n\n  if (!isLoading && !dashboardItems.length) {\n    return <NoContentMessage text={i18n.t('There are no items on this dashboard')} />;\n  }\n\n  return <>\n            {isLoading ? <Layer translucent>\n                    <CenteredContent>\n                        <CircularLoader />\n                    </CenteredContent>\n                </Layer> : null}\n            <ResponsiveReactGridLayout rowHeight={GRID_ROW_HEIGHT_PX} width={getGridWidth(width)} cols={{\n      lg: GRID_COLUMNS\n    }} breakpoints={{\n      lg: getBreakpoint()\n    }} layouts={{\n      lg: dashboardItems\n    }} compactType={GRID_COMPACT_TYPE} margin={MARGIN_PX} containerPadding={{\n      lg: GRID_PADDING_PX\n    }} onLayoutChange={onLayoutChange} onResizeStop={onResizeStop} onWidthChange={onWidthChanged} isDraggable={true} isResizable={true} draggableCancel=\"input,textarea\">\n                {getItemComponents(dashboardItems)}\n            </ResponsiveReactGridLayout>\n        </>;\n};\n\nEditItemGrid.propTypes = {\n  acUpdateDashboardLayout: PropTypes.func,\n  dashboardItems: PropTypes.array,\n  isLoading: PropTypes.bool\n}; // Container\n\nconst mapStateToProps = state => {\n  const selectedDashboard = sGetEditDashboardRoot(state);\n  const dashboardItems = orArray(sGetEditDashboardItems(state)).filter(hasShape);\n  return {\n    isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n    dashboardItems\n  };\n};\n\nconst mapDispatchToProps = {\n  acUpdateDashboardLayout\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(EditItemGrid);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Button, Modal, ModalContent, ModalActions, ButtonStrip, ModalTitle } from '@dhis2/ui';\nimport classes from './styles/ConfirmDeleteDialog.module.css';\nexport const ConfirmDeleteDialog = ({\n  dashboardName,\n  onDeleteConfirmed,\n  onContinueEditing,\n  open\n}) => {\n  const actions = [<Button key=\"cancel\" secondary onClick={onContinueEditing} dataTest=\"cancel-delete-dashboard\">\n            {i18n.t('Cancel')}\n        </Button>, <Button key=\"delete\" destructive onClick={onDeleteConfirmed} dataTest=\"confirm-delete-dashboard\">\n            {i18n.t('Delete')}\n        </Button>];\n  return open && <Modal onClose={onContinueEditing} small position=\"middle\">\n                <ModalTitle>{i18n.t('Delete dashboard')}</ModalTitle>\n                <ModalContent>\n                    <span className={classes.content}>\n                        {i18n.t('Deleting dashboard \"{{ dashboardName }}\" will remove it for all users. This action cannot be undone. Are you sure you want to permanently delete this dashboard?', {\n          dashboardName\n        })}\n                    </span>\n                </ModalContent>\n                <ModalActions>\n                    <ButtonStrip>{actions}</ButtonStrip>\n                </ModalActions>\n            </Modal>;\n};\nConfirmDeleteDialog.propTypes = {\n  dashboardName: PropTypes.string,\n  open: PropTypes.bool,\n  onContinueEditing: PropTypes.func,\n  onDeleteConfirmed: PropTypes.func\n};\nexport default ConfirmDeleteDialog;","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport TranslationDialog from '@dhis2/d2-ui-translation-dialog';\nimport { Button, ButtonStrip } from '@dhis2/ui';\nimport { useDataEngine, useAlert } from '@dhis2/app-runtime';\nimport { useD2 } from '@dhis2/app-runtime-adapter-d2';\nimport ConfirmDeleteDialog from './ConfirmDeleteDialog';\nimport { tSaveDashboard, acClearEditDashboard, acSetPrintPreviewView, acClearPrintPreviewView } from '../../actions/editDashboard';\nimport { acClearPrintDashboard } from '../../actions/printDashboard';\nimport { tDeleteDashboard, acSetDashboardDisplayName } from '../../actions/dashboards';\nimport { sGetEditDashboardRoot, sGetIsNewDashboard, sGetIsPrintPreviewView } from '../../reducers/editDashboard';\nimport { apiFetchDashboard } from '../../api/dashboards';\nimport classes from './styles/EditBar.module.css';\nconst saveFailedMessage = i18n.t('Failed to save dashboard. You might be offline or not have access to edit this dashboard.');\n\nconst EditBar = props => {\n  const {\n    d2\n  } = useD2({});\n  const dataEngine = useDataEngine();\n  const [translationDlgIsOpen, setTranslationDlgIsOpen] = useState(false);\n  const [dashboard, setDashboard] = useState(undefined);\n  const [confirmDeleteDlgIsOpen, setConfirmDeleteDlgIsOpen] = useState(false);\n  const [redirectUrl, setRedirectUrl] = useState(undefined);\n  const failureAlert = useAlert(saveFailedMessage, {\n    critical: true\n  });\n  useEffect(() => {\n    if (props.dashboardId && !dashboard) {\n      apiFetchDashboard(dataEngine, props.dashboardId).then(dboard => setDashboard(dboard));\n    }\n  }, [props.dashboardId, dashboard]);\n\n  const onConfirmDelete = () => {\n    setConfirmDeleteDlgIsOpen(true);\n  };\n\n  const onSave = () => {\n    props.saveDashboard().then(newId => {\n      setRedirectUrl(`/${newId}`);\n    }).catch(() => failureAlert.show());\n  };\n\n  const onPrintPreview = () => {\n    if (props.isPrintPreviewView) {\n      props.clearPrintPreview();\n      props.clearPrintDashboard();\n    } else {\n      props.showPrintPreview();\n    }\n  };\n\n  const onDiscard = () => {\n    props.onDiscardChanges();\n    const redirectUrl = props.dashboardId ? `/${props.dashboardId}` : '/';\n    setRedirectUrl(redirectUrl);\n  };\n\n  const onContinueEditing = () => {\n    setConfirmDeleteDlgIsOpen(false);\n  };\n\n  const onDeleteConfirmed = () => {\n    setConfirmDeleteDlgIsOpen(false);\n    props.onDelete(props.dashboardId).then(() => {\n      setRedirectUrl('/');\n    });\n  };\n\n  const onTranslationsSaved = async translations => {\n    if (translations && translations.length) {\n      const dbLocale = await d2.currentUser.userSettings.get('keyDbLocale');\n      const translation = translations.find(t => t.locale === dbLocale && t.property === 'NAME');\n\n      if (translation && translation.value) {\n        props.onTranslate(props.dashboardId, translation.value);\n      }\n    }\n  };\n\n  const toggleTranslationDialog = () => setTranslationDlgIsOpen(!translationDlgIsOpen);\n\n  const confirmDeleteDialog = () => props.deleteAccess && props.dashboardId ? <ConfirmDeleteDialog dashboardName={props.dashboardName} onDeleteConfirmed={onDeleteConfirmed} onContinueEditing={onContinueEditing} open={confirmDeleteDlgIsOpen} /> : null;\n\n  const translationDialog = () => dashboard && dashboard.id ? <TranslationDialog className=\"translation-dialog\" d2={d2} open={translationDlgIsOpen} onRequestClose={toggleTranslationDialog} objectToTranslate={{ ...dashboard,\n    modelDefinition: {\n      name: 'dashboard'\n    }\n  }} fieldsToTranslate={['name', 'description']} onTranslationSaved={onTranslationsSaved} onTranslationError={err => console.log('translation update error', err)} /> : null;\n\n  const renderActionButtons = () => <ButtonStrip>\n            <Button primary onClick={onSave} dataTest=\"save-dashboard-button\">\n                {i18n.t('Save changes')}\n            </Button>\n            <Button onClick={onPrintPreview}>\n                {props.isPrintPreviewView ? i18n.t('Exit Print preview') : i18n.t('Print preview')}\n            </Button>\n\n            {props.dashboardId && <Button onClick={toggleTranslationDialog}>\n                    {i18n.t('Translate')}\n                </Button>}\n            {props.dashboardId && props.deleteAccess && <Button onClick={onConfirmDelete} dataTest=\"delete-dashboard-button\">\n                    {i18n.t('Delete')}\n                </Button>}\n        </ButtonStrip>;\n\n  if (redirectUrl) {\n    return <Redirect to={redirectUrl} />;\n  }\n\n  const {\n    updateAccess\n  } = props;\n  const discardBtnText = updateAccess ? i18n.t('Exit without saving') : i18n.t('Go to dashboards');\n  return <>\n            <div className={classes.editBar}>\n                <div className={classes.controls}>\n                    {updateAccess ? renderActionButtons() : null}\n                    <Button secondary onClick={onDiscard}>\n                        {discardBtnText}\n                    </Button>\n                </div>\n            </div>\n            {translationDialog()}\n            {confirmDeleteDialog()}\n        </>;\n};\n\nEditBar.propTypes = {\n  clearPrintDashboard: PropTypes.func,\n  clearPrintPreview: PropTypes.func,\n  dashboardId: PropTypes.string,\n  dashboardName: PropTypes.string,\n  deleteAccess: PropTypes.bool,\n  isPrintPreviewView: PropTypes.bool,\n  saveDashboard: PropTypes.func,\n  showPrintPreview: PropTypes.func,\n  updateAccess: PropTypes.bool,\n  onDelete: PropTypes.func,\n  onDiscardChanges: PropTypes.func,\n  onTranslate: PropTypes.func\n};\n\nconst mapStateToProps = state => {\n  const dashboard = sGetEditDashboardRoot(state);\n  let deleteAccess;\n  let updateAccess;\n\n  if (sGetIsNewDashboard(state)) {\n    deleteAccess = true;\n    updateAccess = true;\n  } else {\n    updateAccess = dashboard.access ? dashboard.access.update : false;\n    deleteAccess = dashboard.access ? dashboard.access.delete : false;\n  }\n\n  return {\n    dashboardId: dashboard.id,\n    dashboardName: dashboard.name,\n    deleteAccess,\n    isPrintPreviewView: sGetIsPrintPreviewView(state),\n    updateAccess\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  clearPrintDashboard: () => dispatch(acClearPrintDashboard()),\n  clearPrintPreview: () => dispatch(acClearPrintPreviewView()),\n  saveDashboard: () => dispatch(tSaveDashboard()).then(id => id),\n  onDelete: id => dispatch(tDeleteDashboard(id)),\n  onDiscardChanges: () => dispatch(acClearEditDashboard()),\n  onTranslate: (id, value) => dispatch(acSetDashboardDisplayName(id, value)),\n  showPrintPreview: () => dispatch(acSetPrintPreviewView())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditBar);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { NoticeBox, CenteredContent } from '@dhis2/ui';\nimport classes from './styles/NotSupportedNotice.module.css';\n\nconst NotSupportedNotice = ({\n  message\n}) => <CenteredContent position=\"top\">\n        <div className={classes.noticeContainer}>\n            <NoticeBox title={i18n.t('Not supported')} warning>\n                {message}\n            </NoticeBox>\n        </div>\n    </CenteredContent>;\n\nNotSupportedNotice.propTypes = {\n  message: PropTypes.string\n};\nexport default NotSupportedNotice;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport classes from './styles/PrintInfo.module.css';\n\nconst PrintInfo = ({\n  isLayout\n}) => {\n  const layoutStyle = isLayout ? i18n.t('dashboard layout') : i18n.t('one item per page');\n  return <div className={classes.container}>\n            <p className={classes.title}>\n                {`${i18n.t('Print Preview')}: ${layoutStyle}`}\n            </p>\n            <div className={classes.printSuggestions}>\n                <p>{`${i18n.t('For best print results')}:`}</p>\n                <ul>\n                    <li>{i18n.t('Use Chrome or Edge web browser')}</li>\n                    <li>\n                        {i18n.t('Wait for all dashboard items to load before printing')}\n                    </li>\n                    <li>\n                        {i18n.t('Use A4 landscape paper size and default margin settings in the browser print dialog')}\n                    </li>\n                </ul>\n            </div>\n            <hr className={classes.divider} />\n        </div>;\n};\n\nPrintInfo.propTypes = {\n  isLayout: PropTypes.bool\n};\nexport default PrintInfo;","import React from 'react';\nimport { colors } from '@dhis2/ui';\n\nconst LessHorizontalIcon = () => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill={colors.grey600} viewBox=\"0 0 24 24\">\n        <path d=\"m13.2928932 6.29289322c.3905243-.39052429 1.0236893-.39052429 1.4142136 0 .3604839.36048396.3882135.92771502.0831886 1.32000622l-.0831886.09420734-4.2921068 4.29289322 4.2921068 4.2928932c.3604839.360484.3882135.927715.0831886 1.3200062l-.0831886.0942074c-.360484.3604839-.927715.3882135-1.3200062.0831886l-.0942074-.0831886-4.99999998-5c-.36048396-.360484-.3882135-.927715-.08318861-1.3200062l.08318861-.0942074z\" />\n    </svg>;\n\nexport default LessHorizontalIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Button } from '@dhis2/ui';\nimport { Link } from 'react-router-dom';\nimport LessHorizontalIcon from '../../icons/LessHorizontal';\nimport { useWindowDimensions } from '../WindowDimensionsProvider';\nimport { isSmallScreen } from '../../modules/smallScreen';\nimport classes from './styles/PrintActionsBar.module.css'; // set in PrintActionsBar.module.css\n\nexport const PRINT_ACTIONS_BAR_HEIGHT = 44;\nexport const PRINT_ACTIONS_BAR_HEIGHT_SM = 36;\n\nconst PrintActionsBar = ({\n  id\n}) => {\n  const {\n    width\n  } = useWindowDimensions();\n  const isSmall = isSmallScreen(width);\n  return <>\n            <div className={classes.container}>\n                <div className={classes.inner}>\n                    <Link className={classes.link} to={`/${id}`}>\n                        <Button small={isSmall}>\n                            <LessHorizontalIcon />\n                            {i18n.t('Exit print preview')}\n                        </Button>\n                    </Link>\n                    <Button small={isSmall} onClick={window.print}>\n                        {i18n.t('Print')}\n                    </Button>\n                </div>\n            </div>\n            <div className={classes.topMargin} />\n        </>;\n};\n\nPrintActionsBar.propTypes = {\n  id: PropTypes.string\n};\nexport default PrintActionsBar;","import sortBy from 'lodash/sortBy';\nimport { orArray } from './util';\nimport { itemTypeMap } from './itemTypes'; // for A4 landscape (297x210mm)\n// 794 px = (21cm / 2.54) * 96 pixels/inch\n// 1122 px = 29.7 /2.54 * 96 pixels/inch\n// const a4LandscapeHeightPx = 794\n\nexport const A4_LANDSCAPE_WIDTH_PX = 1102;\nexport const getTransformYPx = elStyle => {\n  if (!elStyle || !elStyle.transform) {\n    return null;\n  } // find valid transforms - those with y pixels\n  // the code is expecting the transform prop to\n  // look like:  translate(10px, 300px)\n\n\n  const transformY = elStyle.transform.split(' ')[1]?.match(/(\\d+)px/);\n\n  if (transformY) {\n    return parseInt(transformY[1]);\n  } else {\n    return null;\n  }\n};\nexport const getDomGridItemsSortedByYPos = elements => {\n  const types = Object.keys(itemTypeMap);\n  const elementsWithBoundingRect = orArray(elements).map(el => {\n    const type = Array.from(el.classList).find(className => types.indexOf(className) > -1);\n    const rect = el.getBoundingClientRect();\n    const y = getTransformYPx(el.style) || parseInt(rect.y);\n    return {\n      type,\n      classList: el.classList,\n      bottomY: y + parseInt(rect.height),\n      el\n    };\n  });\n  return sortBy(elementsWithBoundingRect, ['bottomY']);\n};\n\nconst isLeapPage = n => {\n  // pages 5,9,13,17,21,25,29... are leap pages\n  let x = 0;\n  const startPage = 1;\n\n  const getMultiple = factor => startPage + 4 * factor;\n\n  let multiple = getMultiple(0);\n  let isLeapPage = false;\n\n  while (multiple < n) {\n    multiple = getMultiple(x);\n    ++x;\n\n    if (multiple === n) {\n      isLeapPage = true;\n      break;\n    }\n  }\n\n  return isLeapPage;\n};\n\nexport const getPageBreakPositions = items => {\n  // add enough page breaks so that each item could\n  // be put on its own page. Due to the react-grid-layout\n  // unit system, we have to estimate roughly the size of each\n  // page. At regular intervals add a unit, like a leap year\n  const yPosList = [];\n  let yPos = 0;\n\n  for (let pageNum = 1; pageNum <= items.length; ++pageNum) {\n    if (pageNum === 1) {\n      yPos += 35;\n    } else if (isLeapPage(pageNum)) {\n      yPos += 40;\n    } else {\n      yPos += 39;\n    }\n\n    yPosList.push(yPos);\n  }\n\n  return yPosList;\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport ReactGridLayout from 'react-grid-layout';\nimport i18n from '@dhis2/d2-i18n';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport { GRID_ROW_HEIGHT_PX, GRID_COMPACT_TYPE, MARGIN_PX, GRID_COLUMNS } from '../../modules/gridUtil';\nimport { A4_LANDSCAPE_WIDTH_PX } from '../../modules/printUtils';\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\nimport './styles/ItemGrid.css';\n\nconst StaticGrid = ({\n  layout,\n  children,\n  onLayoutChange,\n  className,\n  isLoading\n}) => {\n  if (!isLoading && !layout.length) {\n    return <NoContentMessage text={i18n.t('There are no items on this dashboard')} />;\n  }\n\n  return <>\n            {isLoading ? <Layer translucent>\n                    <CenteredContent>\n                        <CircularLoader />\n                    </CenteredContent>\n                </Layer> : null}\n            <ReactGridLayout margin={MARGIN_PX} cols={GRID_COLUMNS} rowHeight={GRID_ROW_HEIGHT_PX} width={A4_LANDSCAPE_WIDTH_PX} compactType={GRID_COMPACT_TYPE} isDraggable={false} isResizable={false} draggableCancel=\"input,textarea\" className={cx('layout', className)} layout={layout} onLayoutChange={onLayoutChange}>\n                {children}\n            </ReactGridLayout>\n        </>;\n};\n\nStaticGrid.defaultProps = {\n  onLayoutChange: Function.prototype\n};\nStaticGrid.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  isLoading: PropTypes.bool,\n  layout: PropTypes.array,\n  onLayoutChange: PropTypes.func\n};\nexport default StaticGrid;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport sortBy from 'lodash/sortBy';\nimport cx from 'classnames';\nimport StaticGrid from './StaticGrid';\nimport { Item } from '../Item/Item';\nimport { acUpdatePrintDashboardLayout } from '../../actions/printDashboard';\nimport { sGetSelectedIsLoading } from '../../reducers/selected';\nimport { sGetPrintDashboardRoot, sGetPrintDashboardItems } from '../../reducers/printDashboard';\nimport { sGetIsEditing } from '../../reducers/editDashboard';\nimport { hasShape } from '../../modules/gridUtil';\nimport { getDomGridItemsSortedByYPos, getTransformYPx } from '../../modules/printUtils';\nimport { PRINT_LAYOUT } from '../Dashboard/dashboardModes';\nimport { PAGEBREAK } from '../../modules/itemTypes';\nexport class PrintLayoutItemGrid extends Component {\n  onLayoutChange = newLayout => {\n    this.props.updateDashboardLayout(newLayout);\n  };\n  isFirstPageBreak = item => {\n    if (item.type !== PAGEBREAK) {\n      return false;\n    }\n\n    const pageBreaks = this.props.dashboardItems.filter(i => i.type === PAGEBREAK);\n    const sortedPageBreaks = sortBy(pageBreaks, ['y']);\n    return item.y === sortedPageBreaks[0].y;\n  };\n  getItemComponent = item => {\n    // the first-page-break class is used in Edit print preview\n    const itemClassNames = cx('print', 'layout', `${item.type}`, {\n      'first-page-break': this.props.isEditing && this.isFirstPageBreak(item),\n      shortened: !!item.shortened\n    });\n    return <div key={item.i} className={itemClassNames}>\n                <Item item={item} dashboardMode={PRINT_LAYOUT} />\n            </div>;\n  };\n  getItemComponents = items => items.map(item => this.getItemComponent(item));\n\n  hideExtraPageBreaks() {\n    const sortedElements = getDomGridItemsSortedByYPos(Array.from(document.querySelectorAll('.react-grid-item')));\n    let pageBreakBottom = 0;\n    let lastItemBottom = 0;\n    let foundNonPageBreak = false;\n\n    for (let i = sortedElements.length - 1; i >= 0; --i) {\n      const item = sortedElements[i];\n\n      if (item.type === PAGEBREAK) {\n        if (!foundNonPageBreak) {\n          item.el.classList.add('removed');\n        } else {\n          pageBreakBottom = item.bottomY;\n          break;\n        }\n      } else {\n        foundNonPageBreak = true;\n        const thisItemBottom = item.bottomY;\n\n        if (thisItemBottom > lastItemBottom) {\n          lastItemBottom = thisItemBottom;\n        }\n      }\n    }\n\n    const pageHeight = 720;\n    const gridElement = document.querySelector('.react-grid-layout'); // the last page break is before the last item(s) so\n    // maxHeight is one page beyond the last page break\n\n    const maxHeight = pageBreakBottom + pageHeight;\n\n    if (gridElement) {\n      gridElement.style.height = `${maxHeight}px`;\n    }\n\n    if (this.props.isEditing) {\n      //scroll to below the title page - which is middle of the first pagebreak\n      const firstBreak = document.querySelector('.first-page-break');\n\n      if (firstBreak && firstBreak.style && firstBreak.style.transform) {\n        const yPos = getTransformYPx(firstBreak.style);\n        const scrollArea = document.querySelector('.scroll-area');\n        scrollArea && scrollArea.scroll(0, yPos + 50);\n      }\n    }\n  }\n\n  componentDidMount() {\n    this.hideExtraPageBreaks();\n  }\n\n  componentDidUpdate() {\n    this.hideExtraPageBreaks();\n  }\n\n  render() {\n    const {\n      isLoading,\n      dashboardItems\n    } = this.props;\n    return <StaticGrid isLoading={isLoading} layout={dashboardItems} onLayoutChange={this.onLayoutChange}>\n                {this.getItemComponents(dashboardItems)}\n            </StaticGrid>;\n  }\n\n}\nPrintLayoutItemGrid.propTypes = {\n  dashboardItems: PropTypes.array,\n  isEditing: PropTypes.bool,\n  isLoading: PropTypes.bool,\n  updateDashboardLayout: PropTypes.func\n};\nPrintLayoutItemGrid.defaultProps = {\n  dashboardItems: []\n};\n\nconst mapStateToProps = state => {\n  const selectedDashboard = sGetPrintDashboardRoot(state);\n  return {\n    isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n    dashboardItems: sGetPrintDashboardItems(state).filter(hasShape),\n    isEditing: sGetIsEditing(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  updateDashboardLayout: acUpdatePrintDashboardLayout\n})(PrintLayoutItemGrid);","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { spacers } from '@dhis2/ui';\nimport cx from 'classnames';\nimport PrintInfo from './PrintInfo';\nimport PrintActionsBar, { PRINT_ACTIONS_BAR_HEIGHT, PRINT_ACTIONS_BAR_HEIGHT_SM } from './PrintActionsBar';\nimport PrintLayoutItemGrid from '../ItemGrid/PrintLayoutItemGrid';\nimport { acSetPrintDashboard, acAddPrintDashboardItem, acUpdatePrintDashboardItem } from '../../actions/printDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { sGetEditDashboardRoot, sGetEditDashboardItems } from '../../reducers/editDashboard';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport { PAGEBREAK, PRINT_TITLE_PAGE } from '../../modules/itemTypes';\nimport { MAX_ITEM_GRID_HEIGHT } from '../../modules/gridUtil';\nimport { getControlBarHeight, HEADERBAR_HEIGHT } from '../ControlBar/controlBarDimensions';\nimport { DRAG_HANDLE_HEIGHT } from '../ControlBar/ControlBar';\nimport { useWindowDimensions } from '../WindowDimensionsProvider';\nimport { isSmallScreen } from '../../modules/smallScreen';\nimport { getPageBreakPositions } from '../../modules/printUtils';\nimport classes from './styles/PrintLayoutDashboard.module.css';\nimport './styles/print.css';\nimport './styles/print-layout.css';\nconst EDIT_BAR_HEIGHT = getControlBarHeight(1) + DRAG_HANDLE_HEIGHT;\n\nconst addPageBreaks = (items, addDashboardItem) => {\n  const yPosList = getPageBreakPositions(items);\n\n  for (let i = 0; i < items.length; ++i) {\n    addDashboardItem({\n      type: PAGEBREAK,\n      yPos: yPosList[i]\n    });\n  }\n};\n\nconst PrintLayoutDashboard = ({\n  dashboard,\n  items,\n  setPrintDashboard,\n  addDashboardItem,\n  updateDashboardItem,\n  fromEdit\n}) => {\n  const {\n    width,\n    height\n  } = useWindowDimensions();\n  const actionBarHeight = isSmallScreen(width) ? PRINT_ACTIONS_BAR_HEIGHT_SM : PRINT_ACTIONS_BAR_HEIGHT;\n  useEffect(() => {\n    if (dashboard) {\n      setPrintDashboard(dashboard, items); // If any items are taller than one page, reduce it to one\n      // page (react-grid-layout units)\n\n      items.forEach(item => {\n        if (item.h > MAX_ITEM_GRID_HEIGHT) {\n          item.shortened = true;\n          updateDashboardItem(Object.assign({}, item, {\n            h: MAX_ITEM_GRID_HEIGHT\n          }));\n        }\n      });\n      addPageBreaks(items, addDashboardItem);\n      addDashboardItem({\n        type: PRINT_TITLE_PAGE,\n        isOneItemPerPage: false\n      });\n    }\n  }, [dashboard, items]);\n\n  const getWrapperStyle = () => {\n    return fromEdit ? {\n      paddingTop: spacers.dp24,\n      height: height - EDIT_BAR_HEIGHT - HEADERBAR_HEIGHT\n    } : {\n      height: height - actionBarHeight\n    };\n  };\n\n  return <>\n            {!fromEdit && <PrintActionsBar id={dashboard.id} />}\n            <div className={cx(classes.wrapper, 'scroll-area')} style={getWrapperStyle()}>\n                {!fromEdit && <PrintInfo isLayout={true} />}\n                <div className={classes.pageOuter} data-test=\"print-layout-page\">\n                    <PrintLayoutItemGrid />\n                </div>\n            </div>\n        </>;\n};\n\nPrintLayoutDashboard.propTypes = {\n  addDashboardItem: PropTypes.func,\n  dashboard: PropTypes.object,\n  fromEdit: PropTypes.bool,\n  items: PropTypes.array,\n  setPrintDashboard: PropTypes.func,\n  updateDashboardItem: PropTypes.func\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const id = sGetSelectedId(state);\n\n  if (ownProps.fromEdit) {\n    const dashboard = sGetEditDashboardRoot(state);\n    return {\n      dashboard,\n      id,\n      items: sGetEditDashboardItems(state)\n    };\n  }\n\n  const dashboard = id ? sGetDashboardById(state, id) : null;\n  return {\n    dashboard,\n    id,\n    items: sGetDashboardItems(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setPrintDashboard: acSetPrintDashboard,\n  addDashboardItem: acAddPrintDashboardItem,\n  updateDashboardItem: acUpdatePrintDashboardItem\n})(PrintLayoutDashboard);","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport EditTitleBar from '../TitleBar/EditTitleBar';\nimport EditItemGrid from '../ItemGrid/EditItemGrid';\nimport EditBar from '../ControlBar/EditBar';\nimport NotSupportedNotice from './NotSupportedNotice';\nimport { useWindowDimensions } from '../WindowDimensionsProvider';\nimport LayoutPrintPreview from './PrintLayoutDashboard';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport { acSetEditDashboard } from '../../actions/editDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport { sGetIsPrintPreviewView } from '../../reducers/editDashboard';\nimport { getControlBarHeight, HEADERBAR_HEIGHT } from '../ControlBar/controlBarDimensions';\nimport { isSmallScreen } from '../../modules/smallScreen';\n\nconst EditDashboard = props => {\n  const {\n    width,\n    height\n  } = useWindowDimensions();\n  useEffect(() => {\n    if (props.dashboard) {\n      props.setEditDashboard(props.dashboard, props.items);\n    }\n  }, [props.dashboard]);\n\n  const renderGrid = () => {\n    if (props.isPrintPreviewView) {\n      return <LayoutPrintPreview fromEdit={true} />;\n    }\n\n    const dashboardHeight = height - HEADERBAR_HEIGHT - getControlBarHeight(1);\n    return <div className=\"dashboard-wrapper\" style={{\n      height: dashboardHeight\n    }}>\n                <EditTitleBar />\n                <EditItemGrid />\n            </div>;\n  };\n\n  const renderEditView = () => <>\n            <EditBar />\n            {props.updateAccess ? renderGrid() : <NoContentMessage text={i18n.t('No access')} />}\n        </>;\n\n  return <>\n            {isSmallScreen(width) ? <NotSupportedNotice message={i18n.t('Editing dashboards on small screens is not supported. Resize your screen to return to edit mode.')} /> : renderEditView()}\n        </>;\n};\n\nEditDashboard.propTypes = {\n  dashboard: PropTypes.object,\n  isPrintPreviewView: PropTypes.bool,\n  items: PropTypes.array,\n  setEditDashboard: PropTypes.func,\n  updateAccess: PropTypes.bool\n};\n\nconst mapStateToProps = state => {\n  const id = sGetSelectedId(state);\n  const dashboard = id ? sGetDashboardById(state, id) : null;\n  const updateAccess = dashboard && dashboard.access ? dashboard.access.update : false;\n  return {\n    dashboard,\n    updateAccess,\n    items: sGetDashboardItems(state),\n    isPrintPreviewView: sGetIsPrintPreviewView(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setEditDashboard: acSetEditDashboard\n})(EditDashboard);","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport EditBar from '../ControlBar/EditBar';\nimport EditTitleBar from '../TitleBar/EditTitleBar';\nimport EditItemGrid from '../ItemGrid/EditItemGrid';\nimport LayoutPrintPreview from './PrintLayoutDashboard';\nimport NotSupportedNotice from './NotSupportedNotice';\nimport { acSetEditNewDashboard } from '../../actions/editDashboard';\nimport { sGetIsPrintPreviewView } from '../../reducers/editDashboard';\nimport { getControlBarHeight, HEADERBAR_HEIGHT } from '../ControlBar/controlBarDimensions';\nimport { useWindowDimensions } from '../WindowDimensionsProvider';\nimport { isSmallScreen } from '../../modules/smallScreen';\n\nconst NewDashboard = props => {\n  const {\n    width,\n    height\n  } = useWindowDimensions();\n  useEffect(() => {\n    props.setNewDashboard();\n  }, []);\n  const dashboardHeight = height - HEADERBAR_HEIGHT - getControlBarHeight(1);\n\n  const renderNewView = () => <>\n            <EditBar />\n            {props.isPrintPreviewView ? <LayoutPrintPreview fromEdit={true} /> : <div className=\"dashboard-wrapper\" style={{\n      height: dashboardHeight\n    }}>\n                    <EditTitleBar />\n                    <EditItemGrid />\n                </div>}\n        </>;\n\n  return <>\n            {isSmallScreen(width) ? <NotSupportedNotice message={i18n.t('Creating dashboards on small screens is not supported. Resize your screen to return to create mode.')} /> : renderNewView()}\n        </>;\n};\n\nNewDashboard.propTypes = {\n  isPrintPreviewView: PropTypes.bool,\n  setNewDashboard: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  isPrintPreviewView: sGetIsPrintPreviewView(state)\n});\n\nexport default connect(mapStateToProps, {\n  setNewDashboard: acSetEditNewDashboard\n})(NewDashboard);","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport StaticGrid from './StaticGrid';\nimport { Item } from '../Item/Item';\nimport { hasShape } from '../../modules/gridUtil';\nimport { PRINT } from '../Dashboard/dashboardModes';\nimport { sGetSelectedIsLoading } from '../../reducers/selected';\nimport { sGetPrintDashboardRoot, sGetPrintDashboardItems } from '../../reducers/printDashboard';\nimport { orArray } from '../../modules/util';\n\nconst PrintItemGrid = ({\n  isLoading,\n  dashboardItems\n}) => {\n  const getItemComponent = item => <div key={item.i} className={cx(item.type, 'print', 'oipp')}>\n            <Item item={item} dashboardMode={PRINT} />\n        </div>;\n\n  const getItemComponents = items => items.map(item => getItemComponent(item));\n\n  return <StaticGrid isLoading={isLoading} className=\"print\" layout={dashboardItems}>\n            {getItemComponents(dashboardItems)}\n        </StaticGrid>;\n};\n\nPrintItemGrid.propTypes = {\n  dashboardItems: PropTypes.array,\n  isLoading: PropTypes.bool\n};\n\nconst mapStateToProps = state => {\n  const selectedDashboard = sGetPrintDashboardRoot(state);\n  return {\n    isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n    dashboardItems: orArray(sGetPrintDashboardItems(state)).filter(hasShape)\n  };\n};\n\nexport default connect(mapStateToProps)(PrintItemGrid);","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport sortBy from 'lodash/sortBy';\nimport PrintInfo from './PrintInfo';\nimport PrintActionsBar, { PRINT_ACTIONS_BAR_HEIGHT, PRINT_ACTIONS_BAR_HEIGHT_SM } from './PrintActionsBar';\nimport PrintItemGrid from '../ItemGrid/PrintItemGrid';\nimport { acSetPrintDashboard, acAddPrintDashboardItem, acRemovePrintDashboardItem, acUpdatePrintDashboardItem } from '../../actions/printDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport { PAGEBREAK, PRINT_TITLE_PAGE, SPACER } from '../../modules/itemTypes';\nimport { MAX_ITEM_GRID_HEIGHT_OIPP, MAX_ITEM_GRID_WIDTH_OIPP } from '../../modules/gridUtil';\nimport { useWindowDimensions } from '../WindowDimensionsProvider';\nimport { isSmallScreen } from '../../modules/smallScreen';\nimport classes from './styles/PrintDashboard.module.css';\nimport './styles/print.css';\nimport './styles/print-oipp.css';\n\nconst PrintDashboard = ({\n  dashboard,\n  items,\n  setPrintDashboard,\n  addDashboardItem,\n  updateDashboardItem,\n  removeDashboardItem\n}) => {\n  useEffect(() => {\n    if (dashboard) {\n      //sort the items by Y pos so they print in order of top to bottom\n      const sortedItems = sortBy(items, ['y', 'x']);\n      setPrintDashboard(dashboard, sortedItems); // remove spacers - don't want empty pages\n\n      let spacerCount = 0;\n      items.forEach(item => {\n        if (item.type === SPACER) {\n          spacerCount += 1;\n          removeDashboardItem(item.id);\n        }\n      }); // Resize the items to the full page size\n\n      items.forEach(item => {\n        updateDashboardItem(Object.assign({}, item, {\n          w: MAX_ITEM_GRID_WIDTH_OIPP,\n          h: MAX_ITEM_GRID_HEIGHT_OIPP\n        }));\n      }); // insert page breaks into the document flow to create the \"pages\"\n      // when previewing the print\n\n      for (let i = 0; i < (items.length - spacerCount) * 2; i += 2) {\n        addDashboardItem({\n          type: PAGEBREAK,\n          position: i,\n          isStatic: false\n        });\n      }\n\n      addDashboardItem({\n        type: PRINT_TITLE_PAGE,\n        isOneItemPerPage: true\n      });\n    }\n  }, [dashboard, items]);\n  const {\n    width,\n    height\n  } = useWindowDimensions();\n  const availableHeight = height - (isSmallScreen(width) ? PRINT_ACTIONS_BAR_HEIGHT_SM : PRINT_ACTIONS_BAR_HEIGHT);\n  return <>\n            <PrintActionsBar id={dashboard.id} />\n            <div className={classes.wrapper} style={{\n      height: availableHeight\n    }}>\n                <PrintInfo isLayout={false} />\n                <div className={classes.pageOuter} data-test=\"print-oipp-page\">\n                    <PrintItemGrid />\n                </div>\n            </div>\n        </>;\n};\n\nPrintDashboard.propTypes = {\n  addDashboardItem: PropTypes.func,\n  dashboard: PropTypes.object,\n  items: PropTypes.array,\n  removeDashboardItem: PropTypes.func,\n  setPrintDashboard: PropTypes.func,\n  updateDashboardItem: PropTypes.func\n};\n\nconst mapStateToProps = state => {\n  const id = sGetSelectedId(state);\n  const dashboard = id ? sGetDashboardById(state, id) : null;\n  return {\n    dashboard,\n    id,\n    items: sGetDashboardItems(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setPrintDashboard: acSetPrintDashboard,\n  addDashboardItem: acAddPrintDashboardItem,\n  removeDashboardItem: acRemovePrintDashboardItem,\n  updateDashboardItem: acUpdatePrintDashboardItem\n})(PrintDashboard);","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport isEmpty from 'lodash/isEmpty';\nimport i18n from '@dhis2/d2-i18n';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport { Redirect } from 'react-router-dom';\nimport DashboardsBar from '../ControlBar/DashboardsBar';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport ViewDashboard from './ViewDashboard';\nimport EditDashboard from './EditDashboard';\nimport NewDashboard from './NewDashboard';\nimport PrintDashboard from './PrintDashboard';\nimport PrintLayoutDashboard from './PrintLayoutDashboard';\nimport { tSelectDashboard } from '../../actions/dashboards';\nimport { acClearEditDashboard } from '../../actions/editDashboard';\nimport { sDashboardsIsFetching, sGetAllDashboards } from '../../reducers/dashboards';\nimport { sGetSelectedId, NON_EXISTING_DASHBOARD_ID } from '../../reducers/selected';\nimport { EDIT, NEW, VIEW, PRINT, PRINT_LAYOUT, isPrintMode, isEditMode } from './dashboardModes';\nimport { useWindowDimensions } from '../WindowDimensionsProvider';\nimport { isSmallScreen } from '../../modules/smallScreen';\n\nconst setHeaderbarVisibility = mode => {\n  const header = document.getElementsByTagName('header')[0];\n\n  if (isPrintMode(mode)) {\n    header.classList.add('hidden');\n  } else {\n    header.classList.remove('hidden');\n  }\n};\n\nconst dashboardMap = {\n  [VIEW]: <ViewDashboard />,\n  [EDIT]: <EditDashboard />,\n  [NEW]: <NewDashboard />,\n  [PRINT]: <PrintDashboard />,\n  [PRINT_LAYOUT]: <PrintLayoutDashboard />\n};\n\nconst Dashboard = ({\n  id,\n  mode,\n  dashboardsLoaded,\n  dashboardsIsEmpty,\n  routeId,\n  selectDashboard,\n  clearEditDashboard\n}) => {\n  const {\n    width\n  } = useWindowDimensions();\n  const [redirectUrl, setRedirectUrl] = useState(null);\n  useEffect(() => {\n    setHeaderbarVisibility(mode);\n  }, [mode]);\n  useEffect(() => {\n    if (isSmallScreen(width) && isEditMode(mode)) {\n      const redirectUrl = routeId ? `/${routeId}` : '/';\n      setRedirectUrl(redirectUrl);\n    } else {\n      setRedirectUrl(null);\n    }\n  }, [mode]);\n  useEffect(() => {\n    if (!isEditMode(mode)) {\n      clearEditDashboard();\n    }\n  }, [mode]);\n  useEffect(() => {\n    if (dashboardsLoaded && !dashboardsIsEmpty) {\n      selectDashboard(routeId);\n    }\n  }, [dashboardsLoaded, dashboardsIsEmpty, routeId, mode]);\n\n  if (!dashboardsLoaded) {\n    return <Layer translucent>\n                <CenteredContent>\n                    <CircularLoader />\n                </CenteredContent>\n            </Layer>;\n  }\n\n  if (redirectUrl) {\n    return <Redirect to={redirectUrl} />;\n  }\n\n  if (mode === NEW) {\n    return dashboardMap[mode];\n  }\n\n  if (dashboardsIsEmpty) {\n    return <>\n                <DashboardsBar />\n                <NoContentMessage text={i18n.t('No dashboards found. Use the + button to create a new dashboard.')} />\n            </>;\n  }\n\n  if (id === NON_EXISTING_DASHBOARD_ID) {\n    return <>\n                <DashboardsBar />\n                <NoContentMessage text={i18n.t('Requested dashboard not found')} />\n            </>;\n  }\n\n  if (id === null) {\n    return <Layer translucent>\n                <CenteredContent>\n                    <CircularLoader />\n                </CenteredContent>\n            </Layer>;\n  }\n\n  return dashboardMap[mode];\n};\n\nDashboard.propTypes = {\n  dashboardsIsEmpty: PropTypes.bool,\n  dashboardsLoaded: PropTypes.bool,\n  id: PropTypes.string,\n  match: PropTypes.object,\n  // provided by the react-router-dom\n  mode: PropTypes.string,\n  routeId: PropTypes.string,\n  selectDashboard: PropTypes.func\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const dashboards = sGetAllDashboards(state);\n  return {\n    dashboardsIsEmpty: isEmpty(dashboards),\n    dashboardsLoaded: !sDashboardsIsFetching(state),\n    id: sGetSelectedId(state),\n    routeId: ownProps.match?.params?.dashboardId || null\n  };\n};\n\nexport default connect(mapStateToProps, {\n  selectDashboard: tSelectDashboard,\n  clearEditDashboard: acClearEditDashboard\n})(Dashboard);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { AlertBar, AlertStack } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport { sGetAlertMessage } from '../../reducers/alert';\nimport { acClearAlertMessage } from '../../actions/alert';\nexport const Alert = ({\n  message,\n  onClose\n}) => message ? <AlertStack>\n            <AlertBar onHidden={onClose} permanent>\n                {message}\n            </AlertBar>\n        </AlertStack> : null;\nAlert.propTypes = {\n  message: PropTypes.string,\n  onClose: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  message: sGetAlertMessage(state)\n});\n\nexport default connect(mapStateToProps, {\n  onClose: acClearAlertMessage\n})(Alert);","// filter out CATEGORY that are not of type ATTRIBUTE\nconst filteredDimensions = dimensions => dimensions.filter(dim => dim.dimensionType !== 'CATEGORY' || dim.dimensionType === 'CATEGORY' && dim.dataDimensionType === 'ATTRIBUTE');\n\nexport default filteredDimensions;","import React, { useEffect } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { CssVariables } from '@dhis2/ui';\nimport { useD2 } from '@dhis2/app-runtime-adapter-d2';\nimport { apiFetchDimensions } from '@dhis2/analytics';\nimport { useDataEngine } from '@dhis2/app-runtime';\nimport Dashboard from './Dashboard/Dashboard';\nimport AlertBar from './AlertBar/AlertBar';\nimport { useSystemSettings } from './SystemSettingsProvider';\nimport { acReceivedUser } from '../actions/user';\nimport { tFetchDashboards } from '../actions/dashboards';\nimport { tSetControlBarRows } from '../actions/controlBar';\nimport { tSetShowDescription } from '../actions/selected';\nimport { acSetDimensions } from '../actions/dimensions';\nimport getFilteredDimensions from '../modules/getFilteredDimensions';\nimport { EDIT, VIEW, NEW, PRINT, PRINT_LAYOUT } from './Dashboard/dashboardModes';\nimport './App.css';\n\nconst App = props => {\n  const {\n    d2\n  } = useD2({});\n  const dataEngine = useDataEngine();\n  const {\n    settings\n  } = useSystemSettings();\n  useEffect(() => {\n    props.setCurrentUser(d2.currentUser);\n    props.fetchDashboards();\n    props.setControlBarRows();\n    props.setShowDescription();\n  }, []);\n  useEffect(() => {\n    const fetchDimensions = async () => {\n      try {\n        const dimensions = await apiFetchDimensions(dataEngine, settings.displayNameProperty);\n        props.setDimensions(getFilteredDimensions(dimensions));\n      } catch (e) {\n        console.error(e);\n      }\n    };\n\n    if (settings.displayNameProperty) {\n      fetchDimensions();\n    }\n  }, [settings]);\n  return <>\n            <CssVariables colors spacers />\n            <Router>\n                <Switch>\n                    <Route exact path=\"/\" render={props => <Dashboard {...props} mode={VIEW} />} />\n                    <Route exact path=\"/new\" render={props => <Dashboard {...props} mode={NEW} />} />\n                    <Route exact path=\"/:dashboardId\" render={props => <Dashboard {...props} mode={VIEW} />} />\n                    <Route exact path=\"/:dashboardId/edit\" render={props => <Dashboard {...props} mode={EDIT} />} />\n                    <Route exact path=\"/:dashboardId/printoipp\" render={props => <Dashboard {...props} mode={PRINT} />} />\n                    <Route exact path=\"/:dashboardId/printlayout\" render={props => <Dashboard {...props} mode={PRINT_LAYOUT} />} />\n                </Switch>\n            </Router>\n            <AlertBar />\n        </>;\n};\n\nApp.propTypes = {\n  fetchDashboards: PropTypes.func.isRequired,\n  setControlBarRows: PropTypes.func.isRequired,\n  setCurrentUser: PropTypes.func.isRequired,\n  setDimensions: PropTypes.func.isRequired,\n  setShowDescription: PropTypes.func.isRequired\n};\nconst mapDispatchToProps = {\n  fetchDashboards: tFetchDashboards,\n  setControlBarRows: tSetControlBarRows,\n  setCurrentUser: acReceivedUser,\n  setDimensions: acSetDimensions,\n  setShowDescription: tSetShowDescription\n};\nexport default connect(null, mapDispatchToProps)(App);","import { RECEIVED_USER } from '../reducers/user';\nexport const acReceivedUser = value => ({\n  type: RECEIVED_USER,\n  value\n});","import { SET_DIMENSIONS } from '../reducers/dimensions';\nexport const acSetDimensions = dimensions => ({\n  type: SET_DIMENSIONS,\n  value: dimensions\n});","/** @module reducers/selected */\nimport { validateReducer } from '../modules/util';\nexport const SET_STYLE = 'SET_STYLE';\nexport const DEFAULT_STATE_STYLE = 'LIST';\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\n\nconst style = (state = DEFAULT_STATE_STYLE, action) => {\n  switch (action.type) {\n    case SET_STYLE:\n      return validateReducer(action.value, DEFAULT_STATE_STYLE);\n\n    default:\n      return state;\n  }\n};\n\nexport default style;\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\n\nexport const sGetStyleRoot = state => state.style;","import { combineReducers } from 'redux';\nimport dashboards from './dashboards';\nimport selected from './selected';\nimport dashboardsFilter from './dashboardsFilter';\nimport controlBar from './controlBar';\nimport visualizations from './visualizations';\nimport editDashboard from './editDashboard';\nimport printDashboard from './printDashboard';\nimport messages from './messages';\nimport user from './user';\nimport alert from './alert';\nimport itemFilters from './itemFilters';\nimport style from './style';\nimport dimensions from './dimensions';\nimport activeModalDimension from './activeModalDimension';\nexport default combineReducers({\n  dashboards,\n  selected,\n  dashboardsFilter,\n  controlBar,\n  visualizations,\n  messages,\n  user,\n  editDashboard,\n  printDashboard,\n  itemFilters,\n  style,\n  alert,\n  dimensions,\n  activeModalDimension\n});","import { createStore, applyMiddleware, compose } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport reducer from './reducers';\n\nconst configureStore = dataEngine => {\n  const middleware = [thunk.withExtraArgument(dataEngine)]; // Enable Redux devtools if extension is installed instead of redux-logger\n\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n  if (!window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ && process.env.NODE_ENV !== 'production') {\n    middleware.push(createLogger());\n  }\n\n  return createStore(reducer, composeEnhancers(applyMiddleware(...middleware)));\n};\n\nexport default configureStore;","//------------------------------------------------------------------------------\n// <auto-generated>\n// This code was generated by d2-i18n-generate.\n//\n// Changes to this file may cause incorrect behavior and will be lost if\n// the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\nimport i18n from '@dhis2/d2-i18n';\nimport arTranslations from './ar/translations.json';\nimport ar_IQTranslations from './ar_IQ/translations.json';\nimport ckbTranslations from './ckb/translations.json';\nimport csTranslations from './cs/translations.json';\nimport daTranslations from './da/translations.json';\nimport enTranslations from './en/translations.json';\nimport esTranslations from './es/translations.json';\nimport frTranslations from './fr/translations.json';\nimport idTranslations from './id/translations.json';\nimport kmTranslations from './km/translations.json';\nimport loTranslations from './lo/translations.json';\nimport myTranslations from './my/translations.json';\nimport nbTranslations from './nb/translations.json';\nimport prsTranslations from './prs/translations.json';\nimport psTranslations from './ps/translations.json';\nimport ptTranslations from './pt/translations.json';\nimport pt_BRTranslations from './pt_BR/translations.json';\nimport ruTranslations from './ru/translations.json';\nimport svTranslations from './sv/translations.json';\nimport tetTranslations from './tet/translations.json';\nimport tgTranslations from './tg/translations.json';\nimport ukTranslations from './uk/translations.json';\nimport urTranslations from './ur/translations.json';\nimport uzTranslations from './uz/translations.json';\nimport uz_CyrlTranslations from './uz_Cyrl/translations.json';\nimport uz_LatnTranslations from './uz_Latn/translations.json';\nimport viTranslations from './vi/translations.json';\nimport zhTranslations from './zh/translations.json';\nimport zh_CNTranslations from './zh_CN/translations.json';\nconst namespace = 'default';\ni18n.addResources('ar', namespace, arTranslations);\ni18n.addResources('ar_IQ', namespace, ar_IQTranslations);\ni18n.addResources('ckb', namespace, ckbTranslations);\ni18n.addResources('cs', namespace, csTranslations);\ni18n.addResources('da', namespace, daTranslations);\ni18n.addResources('en', namespace, enTranslations);\ni18n.addResources('es', namespace, esTranslations);\ni18n.addResources('fr', namespace, frTranslations);\ni18n.addResources('id', namespace, idTranslations);\ni18n.addResources('km', namespace, kmTranslations);\ni18n.addResources('lo', namespace, loTranslations);\ni18n.addResources('my', namespace, myTranslations);\ni18n.addResources('nb', namespace, nbTranslations);\ni18n.addResources('prs', namespace, prsTranslations);\ni18n.addResources('ps', namespace, psTranslations);\ni18n.addResources('pt', namespace, ptTranslations);\ni18n.addResources('pt_BR', namespace, pt_BRTranslations);\ni18n.addResources('ru', namespace, ruTranslations);\ni18n.addResources('sv', namespace, svTranslations);\ni18n.addResources('tet', namespace, tetTranslations);\ni18n.addResources('tg', namespace, tgTranslations);\ni18n.addResources('uk', namespace, ukTranslations);\ni18n.addResources('ur', namespace, urTranslations);\ni18n.addResources('uz', namespace, uzTranslations);\ni18n.addResources('uz_Cyrl', namespace, uz_CyrlTranslations);\ni18n.addResources('uz_Latn', namespace, uz_LatnTranslations);\ni18n.addResources('vi', namespace, viTranslations);\ni18n.addResources('zh', namespace, zhTranslations);\ni18n.addResources('zh_CN', namespace, zh_CNTranslations);\nexport default i18n;","import React from 'react';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport dhis2theme from '@dhis2/d2-ui-core/theme/mui3.theme';\nimport { Provider as ReduxProvider } from 'react-redux';\nimport { D2Shim } from '@dhis2/app-runtime-adapter-d2';\nimport { useDataEngine } from '@dhis2/app-runtime';\nimport WindowDimensionsProvider from './components/WindowDimensionsProvider';\nimport SystemSettingsProvider from './components/SystemSettingsProvider';\nimport App from './components/App';\nimport configureStore from './configureStore';\nimport './AppWrapper.css';\nimport './locales';\n\nconst muiTheme = () => createMuiTheme(dhis2theme);\n\nconst d2Config = {\n  schemas: ['chart', 'map', 'report', 'reportTable', 'eventChart', 'eventReport', 'dashboard', 'organisationUnit', 'userGroup']\n}; // TODO: ER and EV plugins require the auth header in development mode.\n// Remove this when these plugins are rewritten\n\nconst authorization = process.env.REACT_APP_DHIS2_AUTHORIZATION || null;\n\nif (authorization) {\n  d2Config.headers = {\n    Authorization: authorization\n  };\n}\n\nconst AppWrapper = () => {\n  const dataEngine = useDataEngine();\n  return <ReduxProvider store={configureStore(dataEngine)}>\n            <MuiThemeProvider theme={muiTheme()}>\n                <D2Shim d2Config={d2Config} i18nRoot=\"./i18n\">\n                    {({\n          d2\n        }) => {\n          if (!d2) {\n            // TODO: Handle errors in d2 initialization\n            return null;\n          }\n\n          return <SystemSettingsProvider engine={dataEngine}>\n                                <WindowDimensionsProvider>\n                                    <App />\n                                </WindowDimensionsProvider>\n                            </SystemSettingsProvider>;\n        }}\n                </D2Shim>\n            </MuiThemeProvider>\n        </ReduxProvider>;\n};\n\nexport default AppWrapper;","import isObject from 'lodash/isObject';\nimport { itemTypeMap } from './itemTypes';\nexport const getVisualizationFromItem = item => {\n  if (!isObject(item)) {\n    return null;\n  }\n\n  const propName = itemTypeMap[item.type]?.propName;\n  return item[propName] || item.reportTable || item.chart || item.map || item.eventReport || item.eventChart || {};\n};\nexport const getVisualizationId = item => getVisualizationFromItem(item).id;\nexport const getVisualizationName = item => getVisualizationFromItem(item).name;","import { REPORT_TABLE, CHART, MAP, EVENT_REPORT, EVENT_CHART, itemTypeMap } from '../../../../modules/itemTypes';\nimport { getVisualizationId } from '../../../../modules/item';\nimport getGridItemDomId from '../../../../modules/getGridItemDomId'; //external plugins\n\nconst itemTypeToExternalPlugin = {\n  [MAP]: 'mapPlugin',\n  [EVENT_REPORT]: 'eventReportPlugin',\n  [EVENT_CHART]: 'eventChartPlugin'\n};\n\nconst hasIntegratedPlugin = type => [CHART, REPORT_TABLE].includes(type);\n\nconst getPlugin = type => {\n  if (hasIntegratedPlugin(type)) {\n    return true;\n  }\n\n  const pluginName = itemTypeToExternalPlugin[type];\n  return global[pluginName];\n};\n\nexport const pluginIsAvailable = type => !!getPlugin(type);\nexport const loadPlugin = (plugin, config, credentials) => {\n  if (!(plugin && plugin.load)) {\n    return;\n  }\n\n  plugin.url = credentials.baseUrl;\n  plugin.loadingIndicator = true;\n  plugin.dashboard = true;\n\n  if (credentials.auth) {\n    plugin.auth = credentials.auth;\n  }\n\n  plugin.load(config);\n};\nexport const getLink = (item, baseUrl) => {\n  const appUrl = itemTypeMap[item.type].appUrl(getVisualizationId(item));\n  return `${baseUrl}/${appUrl}`;\n};\nexport const load = async (item, visualization, {\n  credentials,\n  activeType,\n  options = {}\n}) => {\n  const config = { ...visualization,\n    ...options,\n    el: getGridItemDomId(item.id)\n  };\n  const type = activeType || item.type;\n  const plugin = getPlugin(type);\n  loadPlugin(plugin, config, credentials);\n};\nexport const resize = (item, isFullscreen) => {\n  const plugin = getPlugin(item.type);\n\n  if (plugin && plugin.resize) {\n    plugin.resize(getGridItemDomId(item.id), isFullscreen);\n  }\n};\nexport const unmount = (item, activeType) => {\n  const plugin = getPlugin(activeType);\n\n  if (plugin && plugin.unmount) {\n    plugin.unmount(getGridItemDomId(item.id));\n  }\n};","const getGridItemDomId = id => `item-${id}`;\n\nexport default getGridItemDomId;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemHeaderWrap\":\"ItemHeader_itemHeaderWrap__JcBP7\",\"itemTitle\":\"ItemHeader_itemTitle__34rHa\",\"itemActionsWrap\":\"ItemHeader_itemActionsWrap__Gx3D9\"};"],"sourceRoot":""}
{"version":3,"sources":["D2App/components/ItemSelector/styles/CategorizedMenuGroup.module.css","D2App/components/TitleBar/styles/EditTitleBar.module.css","D2App/components/TitleBar/styles/ViewTitleBar.module.css","D2App/components/Item/VisualizationItem/styles/FatalErrorBoundary.module.css","D2App/components/Item/ItemHeader/styles/DeleteItemButton.module.css","D2App/components/Item/ItemHeader/styles/PrintItemInfo.module.css","D2App/components/Item/VisualizationItem/styles/LoadingMask.module.css","D2App/components/Item/VisualizationItem/styles/Item.module.css","D2App/components/Item/ListItem/Item.module.css","D2App/components/Item/PrintTitlePageItem/styles/Item.module.css","D2App/components/FilterBar/styles/FilterBar.module.css","D2App/components/ControlBar/styles/ConfirmDeleteDialog.module.css","D2App/components/Dashboard/styles/PrintInfo.module.css","D2App/components/Dashboard/styles/PrintActionsBar.module.css","D2App/components/Dashboard/styles/PrintLayoutDashboard.module.css","D2App/components/Dashboard/styles/PrintDashboard.module.css","D2App/components/ControlBar/ControlBar.js","D2App/icons/Star.js","D2App/components/ControlBar/DashboardItemChip.js","D2App/api/dataStatistics.js","D2App/icons/AddCircle.js","D2App/icons/Clear.js","D2App/components/ControlBar/ClearButton.js","D2App/reducers/dashboardsFilter.js","D2App/components/ControlBar/Filter.js","D2App/components/ControlBar/ShowMoreButton.js","D2App/components/ControlBar/controlBarDimensions.js","D2App/reducers/controlBar.js","D2App/modules/uiBackendItemConverter.js","D2App/reducers/dashboards.js","D2App/reducers/selected.js","D2App/api/userDataStore.js","D2App/actions/controlBar.js","D2App/api/controlBar.js","D2App/components/ControlBar/DashboardsBar.js","D2App/actions/dashboardsFilter.js","D2App/components/Dashboard/DashboardVerticalOffset.js","D2App/widgets/NoContentMessage.js","D2App/components/ItemSelector/HeaderMenuItem.js","D2App/icons/Launch.js","D2App/components/ItemSelector/ContentMenuItem.js","D2App/reducers/editDashboard.js","D2App/api/editDashboard.js","D2App/reducers/user.js","D2App/api/index.js","D2App/api/dashboards.js","D2App/actions/dashboards.js","D2App/reducers/dimensions.js","D2App/reducers/itemFilters.js","D2App/actions/itemFilters.js","D2App/reducers/messages.js","D2App/components/Item/MessagesItem/actions.js","D2App/api/messages.js","D2App/reducers/alert.js","D2App/actions/alert.js","D2App/reducers/visualizations.js","D2App/actions/visualizations.js","D2App/actions/selected.js","D2App/api/localStorage.js","D2App/api/description.js","D2App/actions/editDashboard.js","D2App/components/ItemSelector/selectableItems.js","D2App/components/ItemSelector/CategorizedMenuGroup.js","D2App/components/ItemSelector/actions.js","D2App/components/ItemSelector/SinglesMenuGroup.js","D2App/components/ItemSelector/ItemSelector.js","D2App/components/TitleBar/EditTitleBar.js","D2App/components/Item/VisualizationItem/assets/icons.js","D2App/components/ItemFilter/FilterDialog.js","D2App/reducers/settings.js","D2App/reducers/activeModalDimension.js","D2App/actions/activeModalDimension.js","D2App/components/ItemFilter/FilterSelector.js","D2App/components/TitleBar/ViewTitleBar.js","D2App/components/TitleBar/TitleBar.js","D2App/components/Item/VisualizationItem/DefaultPlugin.js","D2App/components/Item/VisualizationItem/FatalErrorBoundary.js","D2App/components/Item/ItemHeader/ViewItemActions.js","D2App/components/Item/ItemHeader/DeleteItemButton.js","D2App/components/Item/ItemHeader/EditItemActions.js","D2App/icons/Info.js","D2App/components/Item/ItemHeader/PrintItemInfo.js","D2App/components/Dashboard/dashboardModes.js","D2App/components/Item/ItemHeader/ItemHeader.js","D2App/components/Item/VisualizationItem/ItemHeaderButtons.js","D2App/components/Item/VisualizationItem/ItemFooter.js","D2App/components/Item/VisualizationItem/LoadingMask.js","D2App/modules/memoizeOne.js","D2App/components/Item/VisualizationItem/Item.js","D2App/widgets/Line.js","D2App/components/Item/MessagesItem/Item.js","D2App/components/Item/NotSupportedItem/Item.js","D2App/icons/Description.js","D2App/icons/Delete.js","D2App/components/Item/ListItem/Item.js","D2App/components/Item/ListItem/actions.js","D2App/reducers/printDashboard.js","D2App/components/Item/TextItem/Item.js","D2App/components/Item/AppItem/Item.js","D2App/components/Item/SpacerItem/Item.js","D2App/components/Item/PageBreakItem/Item.js","D2App/components/Item/PrintTitlePageItem/Item.js","D2App/components/Item/Item.js","D2App/components/Item/ProgressiveLoadingContainer.js","D2App/components/ItemGrid/ItemGrid.js","D2App/components/FilterBar/FilterBadge.js","D2App/components/FilterBar/FilterBar.js","D2App/reducers/windowHeight.js","D2App/actions/printDashboard.js","D2App/components/Dashboard/ViewDashboard.js","D2App/components/ControlBar/ConfirmDeleteDialog.js","D2App/components/ControlBar/EditBar.js","D2App/components/Dashboard/PrintInfo.js","D2App/icons/LessHorizontal.js","D2App/components/Dashboard/PrintActionsBar.js","D2App/modules/printUtils.js","D2App/components/ItemGrid/PrintLayoutItemGrid.js","D2App/components/Dashboard/PrintLayoutDashboard.js","D2App/components/Dashboard/EditDashboard.js","D2App/components/Dashboard/NewDashboard.js","D2App/components/ItemGrid/PrintItemGrid.js","D2App/components/Dashboard/PrintDashboard.js","D2App/actions/windowHeight.js","D2App/components/Dashboard/Dashboard.js","D2App/components/AlertBar/AlertBar.js","D2App/actions/user.js","D2App/actions/dimensions.js","D2App/components/App.js","D2App/reducers/style.js","D2App/reducers/index.js","D2App/configureStore.js","D2App/locales/index.js","D2App/AppWrapper.js","D2App/modules/util.js","D2App/modules/itemTypes.js","D2App/components/ItemGrid/gridUtil.js","D2App/components/Item/VisualizationItem/plugin.js","D2App/components/Item/ItemHeader/styles/ItemHeader.module.css","D2App/components/ControlBar/styles/DashboardsBar.module.css","D2App/api/metadata.js","D2App/components/ControlBar/styles/ControlBar.module.css","D2App/components/ControlBar/styles/DashboardItemChip.module.css","D2App/components/ControlBar/styles/ClearButton.module.css","D2App/components/ControlBar/styles/ShowMoreButton.module.css","D2App/components/ItemSelector/styles/ContentMenuItem.module.css"],"names":["module","exports","ControlBar","React","Component","constructor","props","super","onStartDrag","this","setState","dragging","window","addEventListener","onDrag","onEndDrag","event","preventDefault","stopPropagation","newHeight","clientY","onChangeHeight","height","requestAnimationFrame","removeEventListener","state","renderDragHandle","className","classes","draghandle","style","onMouseDown","render","Math","max","rootStyle","Object","assign","backgroundColor","editMode","colors","yellow050","white","paddingBottom","transition","root","content","children","defaultProps","StarIcon","xmlns","viewBox","d","fill","DashboardItemChip","starred","selected","label","dashboardId","chipProps","selectedState","unselected","icon","Star","link","to","onClick","debounce","async","eventType","id","d2","getInstance","url","Api","getApi","post","apiPostDataStatistics","AddCircleIcon","width","teal600","ClearIcon","grey800","ClearButton","onClear","button","Clear","color","ownerData","value","DEFAULT_STATE_DASHBOARDS_FILTER_OWNER","combineReducers","name","action","type","validateReducer","owner","order","sGetDashboardsFilterRoot","dashboardsFilter","sGetFilterName","styles","filterField","fontSize","top","searchIcon","grey700","Filter","setFilterValue","onChangeName","target","handleKeyUp","keyCode","onKeypressEnter","componentWillReceiveProps","nextProps","startAdornment","position","endAdornment","placeholder","i18n","t","onChange","onKeyUp","Function","prototype","withStyles","ShowMoreButton","isMaxHeight","disabled","textAlign","showMore","getRowsHeight","rows","getControlBarHeight","FIRST_ROW_PADDING_HEIGHT","userRows","sGetControlBarUserRows","controlBar","sGetControlBarRoot","spacerContent","isTextType","item","TEXT","text","convertUiItemsToBackend","items","map","SPACER","isUiSpacerType","convertBackendItemsToUi","isBackendSpacerType","gridProperties","getGridItemProperties","DEFAULT_STATE_DASHBOARDS","byId","EMPTY_DASHBOARD","updateDashboardProp","prop","sGetDashboardsRoot","dashboards","sGetDashboardById","orObject","sDashboardsIsFetching","sGetAllDashboards","sGetDashboardItems","sGetStarredDashboards","values","filter","dashboard","sGetUnstarredDashboards","getCustomDashboards","data","arrayFrom","displayName","description","displayDescription","favorite","user","created","split","join","substr","lastUpdated","access","numberOfItems","orArray","dashboardItems","length","DEFAULT_STATE_SELECTED_ITEM_ACTIVE_TYPES","isLoading","showDescription","itemActiveTypes","activeType","sGetSelectedRoot","sGetSelectedId","sGetSelectedIsLoading","sGetSelectedShowDescription","sGetSelectedItemActiveType","hasNamespace","currentUser","dataStore","has","getNamespace","get","create","apiPostUserDataStoreValue","key","set","apiGetUserDataStoreValue","defaultValue","namespace","keys","find","k","console","log","acSetControlBarUserRows","tSetControlBarRows","controlBarRows","apiGetControlBarRows","dispatch","err","error","DashboardsBar","setInitialDashboardState","adjustedHeight","newRows","floor","newRowCount","min","apiPostControlBarRows","onToggleMaxHeight","onSelectDashboard","history","push","componentDidMount","selectedId","onChangeFilterName","rowCount","controlBarHeight","contentWrapperStyle","padding","overflowY","leftControls","display","textDecoration","marginRight","AddCircle","mapDispatchToProps","withRouter","connect","stateProps","dispatchProps","ownProps","displayDashboards","arraySort","toLowerCase","includes","marginTop","NoContentMessage","fontWeight","grey600","HeaderMenuItem","title","dense","LaunchIcon","LaunchLink","e","launchLink","rel","href","Launch","InsertButton","buttonInsert","ContentMenuItem","onInsert","visType","ItemIcon","getItemIcon","renderedItemIcon","VISUALIZATION","visTypeIcons","menuItem","DEFAULT_STATE_EDIT_DASHBOARD","NEW_DASHBOARD_STATE","printPreviewView","sGetEditDashboardRoot","editDashboard","sGetIsEditing","isEmpty","sGetIsPrintPreviewView","sGetEditDashboardItems","onError","saveDashboard","w","h","save","then","msg","response","uid","DEFAULT_STATE_USER","username","uiLocale","isSuperuser","sGetUserUsername","getDashboardItemsFields","withFavorite","arrayClean","getListItemFields","getFavoritesFields","withDimensions","getDashboardFields","withItems","getIdNameFields","rename","apiFetchDashboard","models","fields","catch","tFetchDashboards","collection","list","paging","toArray","arrayToIdMap","tStarDashboard","isStarred","delete","apiStarDashboard","acSetDashboardStarred","onSuccess","tDeleteDashboard","apiDeleteDashboard","Promise","resolve","DEFAULT_DIMENSIONS","getDimensionById","DIMENSION_ID_PERIOD","DIMENSION_ID_ORGUNIT","sGetDimensions","dimensions","DEFAULT_STATE_ITEM_FILTERS","sGetItemFiltersRoot","itemFilters","sGetNamedItemFilters","createSelector","filters","reduce","arr","dimension","acRemoveItemFilter","sGetMessagesRoot","messages","tGetMessages","getMessages","messageConversations","sGetAlertMessage","alert","acClearAlertMessage","DEFAULT_STATE_VISUALIZATIONS","p","undefined","sGetVisualization","visualizations","sGetVisualizationsRoot","acAddVisualization","acSetSelectedId","acSetSelectedIsLoading","acSetSelectedShowDescription","tSetSelectedDashboardById","getState","alertTimeout","setTimeout","customDashboard","withShape","localStorage","setItem","forEach","REPORT_TABLE","CHART","MAP","EVENT_REPORT","EVENT_CHART","extractFavorite","MESSAGES","clearTimeout","tSetShowDescription","apiGetShowDescription","tUpdateShowDescription","apiPostShowDescription","acClearEditDashboard","acAddDashboardItem","itemPropName","itemTypeMap","propName","generateUid","gridItemProperties","shape","PAGEBREAK","yPos","getPageBreakItemShape","isStatic","PRINT_TITLE_PAGE","getPrintTitlePageItemShape","NEW_ITEM_SHAPE","acUpdateDashboardItem","acRemoveDashboardItem","tSaveDashboard","dashboardToSave","postDashboard","singleItems","header","categorizedItems","USERS","REPORTS","RESOURCES","APP","listItemTypes","CategorizedMenuGroup","addItem","tAddListItemContent","newItem","toggleSeeMore","seeMore","onChangeItemsLimit","hasMore","itemUrl","getItemUrl","context","showMoreButton","margin","contextTypes","PropTypes","object","isRequired","listItemType","dashboardItemIndex","findIndex","dashboardItem","category","addToDashboard","ItemSearchField","onFocus","ItemSelector","closeList","open","openList","_","fetchItems","anchorEl","currentTarget","setFilter","getCategorizedMenuGroups","itemType","endPointName","itemCount","getDefaultItemCount","allItems","maxOptions","slice","pluralTitle","getSinglesMenuGroups","getMenuGroups","concat","add","Set","queryString","onClose","anchorOrigin","horizontal","vertical","transformOrigin","PaperProps","disableAutoFocus","disableEnforceFocus","disableRestoreFocus","maxWidth","EditTitleBar","onChangeTitle","onChangeDescription","section","titleDescription","itemSelector","selectedDashboard","ThreeDots","SpeechBubble","fillRule","transform","Warning","FilterDialog","displayNameProperty","initiallySelectedItems","addItemFilter","removeItemFilter","setFilters","useState","onSelectItems","dimensionId","onDeselectItems","itemIdsToRemove","newList","onReorderItems","itemIds","oldList","reorderedList","large","commonProps","onSelect","onDeselect","onReorder","selectedItems","selectedPeriods","ouItems","renderDialogContent","secondary","primary","filterItems","DEFAULT_SETTINGS","keyDateFormat","keyAnalysisRelativePeriod","keyAnalysisDigitGroupSeparator","rootOrganisationUnit","sGetSettings","settings","sGetSettingsDisplayNameProperty","DEFAULT_STATE_ACTIVE_MODAL_DIMENSION","sGetActiveModalDimension","activeModalDimension","acSetActiveModalDimension","clearActiveModalDimension","setActiveModalDimension","showPopover","setShowPopover","ref","useRef","onCloseDialog","onClickOutside","reference","arrow","placement","onDimensionClick","selectedIds","ViewTitleBar","moreOptionsIsOpen","setMoreOptionsIsOpen","sharingDialogIsOpen","setSharingDialogIsOpen","redirectUrl","setRedirectUrl","onToggleStarredDashboard","onShowHideDescription","toggleSharingDialog","toggleMoreOptions","titleStyle","cursor","userSelect","StarBorder","showHideDescriptionLabel","toggleStarredDashboardLabel","buttonRef","createRef","userAccess","titleBar","actions","titleBarIcon","strip","update","editLink","manage","marginLeft","paddingTop","onRequestClose","black","minWidth","TitleBar","edit","DefaultPlugin","pluginCredentials","shouldPluginReload","prevProps","reloadAllowed","filtersChanged","vis","visualization","prevVis","visChanged","reloadPlugin","pluginManager","credentials","baseUrl","getBaseUrl","auth","defaultHeaders","Authorization","options","componentDidUpdate","componentWillUnmount","getGridItemDomId","textDiv","FatalErrorBoundary","errorFound","componentDidCatch","info","container","message","ViewItemActions","actionButtons","itemActionsWrap","DeleteItemButton","deleteItemButton","red500","itemId","WarningIcon","PrintWarning","warning","Info","EDIT","NEW","PRINT","PRINT_LAYOUT","isEditMode","mode","isPrintMode","isViewMode","ItemHeader","forwardRef","dashboardMode","isShortened","rest","Actions","EditItemActions","PrintItemInfo","getItemActionsMap","itemHeaderWrap","itemTitle","iconFill","ItemHeaderButtons","setAnchorEl","onSelectActiveType","isTrackerType","isTrackerDomainType","onViewTable","handleClose","onViewChart","onViewMap","canViewAs","isSingleValue","isYearOverYear","VIS_TYPE_GAUGE","VIS_TYPE_PIE","interpretationMenuLabel","activeFooter","ViewAsMenuItems","hasMapView","pluginIsAvailable","small","Boolean","appName","getAppName","getLink","onToggleFooter","scrollContainer","line","border","grey100","ItemFooter","objectId","getId","LoadingMask","center","memoizeOne","fn","lastArgs","lastValue","args","every","arg","i","Item","showFooter","configLoaded","pluginIsLoaded","applyFilters","visRows","obj","visColumns","columns","visFilters","dimensionFound","dimensionObjects","getUniqueKey","uniqueId","getPluginComponent","getActiveType","memoizedGetVisualizationConfig","calculatedHeight","originalHeight","headerRef","current","clientHeight","ITEM_CONTENT_PADDING_BOTTOM","memoizedGetContentStyle","contentRef","offsetHeight","memoizedApplyFilters","onLoadingComplete","forDashboard","mapViews","layer","hideTitle","onToggleItemExpanded","selectActiveType","isEditing","getContentStyle","measuredHeight","preferMeasured","updateVisualization","prevState","shortened","grey200","Line","messageTypes","VALIDATION_RESULT","TICKET","SYSTEM","listStyleType","paddingLeft","seeAll","marginBottom","sender","lineHeight","snippet","maxHeight","overflow","MessagesItem","getMessageHref","msgIdentifier","messageType","getMessageSender","latestMsg","getMessageItems","modeClass","readClass","read","msgDate","document","location","messageCount","formatDate","userSettings","string","MessagesContainer","NotSupportedItem","justifyContent","alignItems","align","DescriptionIcon","grey500","DeleteIcon","getItemTitle","ListItem","tRemoveListItemContent","contentItems","index","array","el","getContentItems","contentItem","Description","itemicon","deleteButton","deletebutton","deleteicon","grey900","newContent","DEFAULT_STATE_PRINT_DASHBOARD","DEFAULT_DASHBOARD_ITEMS","NEW_PRINT_DASHBOARD_STATE","sGetPrintDashboardRoot","printDashboard","sGetIsPrinting","sGetPrintDashboardItems","whiteSpace","textField","fontStretch","onChangeText","updatedItem","viewItem","textDivStyle","editItem","onEdit","multiline","fullWidth","printItem","textItem","getIframeSrc","appDetails","iframeSrc","launchUrl","ouIds","ouFilter","path","AppItem","appKey","system","installedApps","app","src","SpacerItem","PageBreakItem","PrintTitlePageItem","titlePage","filterTitle","listItems","filterListItem","val","filterList","getItemFilterList","viewDashboard","sGetPrintDashboardName","sGetPrintDashboardDescription","GridItem","VisualizationItem","TextItem","getGridItem","ProgressiveLoadingContainer","shouldLoad","containerRef","shouldLoadHandler","handlerOptions","passive","checkShouldLoad","bufferPx","bufferFactor","innerHeight","rect","getBoundingClientRect","bottom","removeHandler","registerHandler","debounceMs","getElementsByClassName","eventProps","pick","ItemGrid","expandedItems","clickedId","isExpanded","onLayoutChange","newLayout","acUpdateDashboardLayout","onResizeStop","layout","oldItem","onItemResize","isVisualizationType","pluginResize","adjustHeightForExpanded","expandedItem","getItemComponent","itemClassNames","getItemComponents","translucent","MARGIN","cols","getGridColumns","rowHeight","GRID_ROW_HEIGHT","innerWidth","compactType","GRID_COMPACT_TYPE","isDraggable","isResizable","draggableCancel","validItems","hasShape","badgeContainer","borderRadius","badge","badgeRemove","FilterBadge","onRemove","count","FilterBar","onBadgeRemove","onBadgeClick","bar","removeItemFIlter","DEFAULT_STATE_WINDOW_HEIGHT","sGetWindowHeight","windowHeight","acSetPrintDashboard","acClearPrintDashboard","acAddPrintDashboardItem","isOneItemPerPage","acUpdatePrintDashboardItem","dashboardIsEditing","dashboardIsPrinting","clearEditDashboard","clearPrintDashboard","useEffect","querySelector","scroll","ConfirmDeleteDialog","dashboardName","onDeleteConfirmed","onContinueEditing","destructive","buttonBarStyle","EditBar","translationDialogIsOpen","dashboardModel","confirmDeleteDialogOpen","onConfirmDelete","onSave","newId","onPrintPreview","isPrintPreviewView","clearPrintPreview","showPrintPreview","onDiscard","onDiscardChanges","onDelete","onTranslationsSaved","translations","dbLocale","translation","locale","property","onTranslate","fetchDashboardModel","toggleTranslationDialog","confirmDeleteDialog","deleteAccess","translationDialog","objectToTranslate","fieldsToTranslate","onTranslationSaved","onTranslationError","renderActionButtons","printPreviewText","updateAccess","discardBtnText","rightControls","topMargin","sGetIsNewDashboard","acSetDashboardDisplayName","PrintInfo","isLayout","a4LandscapeWidthPx","infoHeader","infoWrapper","infoList","divider","LessHorizontalIcon","PrintActionsBar","inner","LessHorizontal","print","getTransformYPx","elStyle","transformY","match","parseInt","PrintLayoutItemGrid","updateDashboardLayout","isFirstPageBreak","pageBreaks","sortedPageBreaks","sortBy","y","cx","hideExtraPageBreaks","sortedElements","elements","types","elementsWithBoundingRect","Array","from","classList","indexOf","bottomY","getDomGridItemsSortedByYPos","querySelectorAll","pageBreakBottom","lastItemBottom","foundNonPageBreak","thisItemBottom","gridElement","firstBreak","scrollArea","EDIT_BAR_HEIGHT","isLeapPage","n","x","getMultiple","factor","multiple","PrintLayoutDashboard","initialized","initPrintLayoutDashboard","setPrintDashboard","MAX_ITEM_GRID_HEIGHT","updateDashboardItem","addDashboardItem","yPosList","pageNum","addPageBreaks","getWrapperStyle","fromEdit","spacers","dp24","wrapper","pageOuter","EditDashboard","initEditDashboard","setEditDashboard","renderGrid","NewDashboard","setNewDashboard","PrintItemGrid","PrintDashboard","initPrintDashboard","sortedItems","spacerCount","removeDashboardItem","MAX_ITEM_GRID_WIDTH_OIPP","MAX_ITEM_GRID_HEIGHT_OIPP","dashboardMap","dashboardsIsEmpty","dashboardsLoaded","routeId","params","selectDashboard","dashboardToSelect","preferredId","getItem","dash","sGetDashboardsSortedByStarred","setWindowHeight","getElementsByTagName","remove","setHeaderbarVisibility","onResize","onHidden","permanent","tSetDimensions","displayNameProp","apiFetchDimensions","acSetDimensions","dim","dimensionType","dataDimensionType","App","setCurrentUser","fetchDashboards","setControlBarRows","setShowDescription","setDimensions","getChildContext","exact","AlertBar","childContextTypes","objectClean","conversations","$merge","d2Object","keyUiLocale","authorities","newState","$splice","$unshift","idToRemove","stateItems","layoutHasChanged","newStateItems","stateItem","si","configureStore","middleware","thunk","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducer","applyMiddleware","addResources","arTranslations","ar_IQTranslations","ckbTranslations","csTranslations","daTranslations","enTranslations","esTranslations","frTranslations","idTranslations","kmTranslations","loTranslations","myTranslations","nbTranslations","prsTranslations","psTranslations","ptTranslations","pt_BRTranslations","ruTranslations","svTranslations","tetTranslations","tgTranslations","ukTranslations","urTranslations","uzTranslations","uz_CyrlTranslations","viTranslations","zhTranslations","zh_CNTranslations","d2Config","schemas","authorization","process","REACT_APP_DHIS2_AUTHORIZATION","headers","AppWrapper","store","theme","createMuiTheme","dhis2theme","i18nRoot","param","isArray","isObject","global","Intl","DateTimeFormat","year","month","day","format","Date","replace","api","idx","getWithoutId","domainType","defaultItemCount","appUrl","getTime","getEndPointName","TableIcon","ChartIcon","MapIcon","ExtensionIcon","PersonIcon","FontDownloadIcon","EmailIcon","CropFreeIcon","NotInterestedIcon","isNonNegativeInteger","Number","isInteger","minH","GRID_COLUMNS","static","itemWithShape","Error","col","row","itemWidth","MAX_ITEM_GRID_WIDTH","itemHeight","getShape","round","getOriginalHeight","isFunction","setViewportSize","clientWidth","itemTypeToExternalPlugin","getPlugin","hasIntegratedPlugin","reportTable","chart","eventReport","eventChart","getName","load","config","plugin","loadingIndicator","loadPlugin","fetch","apiFetchFavorite","getMapFields","resize","unmount","getVisualizationConfig","originalType","extractedMapView","mv","VIS_TYPE_COLUMN","VIS_TYPE_PIVOT_TABLE","getDimensionFields","getAxesFields","getFavoriteFields","withOptions"],"mappings":"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","file":"static/js/app.0ca68776.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"showMoreButton\":\"CategorizedMenuGroup_showMoreButton__2RbRp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"EditTitleBar_section__LIaIC\",\"titleDescription\":\"EditTitleBar_titleDescription__1YsU6\",\"title\":\"EditTitleBar_title__3mUbt\",\"description\":\"EditTitleBar_description__24U5X\",\"itemSelector\":\"EditTitleBar_itemSelector__1cFEp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"actions\":\"ViewTitleBar_actions__2UTRz\",\"editLink\":\"ViewTitleBar_editLink__d_HzW\",\"titleBar\":\"ViewTitleBar_titleBar__eiwJS\",\"titleBarIcon\":\"ViewTitleBar_titleBarIcon__2cBxv\",\"strip\":\"ViewTitleBar_strip__3xR4U\",\"backdrop\":\"ViewTitleBar_backdrop__2Cpm8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FatalErrorBoundary_container__3SViR\",\"icon\":\"FatalErrorBoundary_icon__2UbeP\",\"message\":\"FatalErrorBoundary_message__3FzrY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"deleteItemButton\":\"DeleteItemButton_deleteItemButton__3TJm9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"warning\":\"PrintItemInfo_warning__123PK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"center\":\"LoadingMask_center__2SFwS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textDiv\":\"Item_textDiv__1U7zV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Item_list__1_nkQ\",\"item\":\"Item_item__3-6QE\",\"itemicon\":\"Item_itemicon__QlouX\",\"link\":\"Item_link___3c_q\",\"deleteicon\":\"Item_deleteicon__3usrl\",\"deletebutton\":\"Item_deletebutton__1DpBW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"titlePage\":\"Item_titlePage__18CNQ\",\"name\":\"Item_name__3nuTV\",\"description\":\"Item_description__1gFQd\",\"filterTitle\":\"Item_filterTitle__2p7TQ\",\"filterList\":\"Item_filterList__qc_G3\",\"filterListItem\":\"Item_filterListItem__sPbBY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bar\":\"FilterBar_bar__1Ma3p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ConfirmDeleteDialog_content__EqswE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"infoWrapper\":\"PrintInfo_infoWrapper__3m2lt\",\"infoHeader\":\"PrintInfo_infoHeader__KyW8I\",\"info\":\"PrintInfo_info__13oXZ\",\"infoList\":\"PrintInfo_infoList__Iu9MC\",\"divider\":\"PrintInfo_divider__3wzx9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PrintActionsBar_container__2iQp7\",\"topMargin\":\"PrintActionsBar_topMargin__OpYDN\",\"inner\":\"PrintActionsBar_inner__uBqU7\",\"link\":\"PrintActionsBar_link__lFUmI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"PrintLayoutDashboard_wrapper__1WDh4\",\"pageOuter\":\"PrintLayoutDashboard_pageOuter__22acI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"PrintDashboard_wrapper__1O3s_\",\"pageOuter\":\"PrintDashboard_pageOuter__fl9tw\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { colors } from '@dhis2/ui';\nimport classes from './styles/ControlBar.module.css';\nexport const DRAG_HANDLE_HEIGHT = 7;\n\nclass ControlBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dragging: false\n    };\n  }\n\n  onStartDrag = () => {\n    this.setState({\n      dragging: true\n    });\n    window.addEventListener('mousemove', this.onDrag);\n    window.addEventListener('mouseup', this.onEndDrag);\n  };\n  onDrag = event => {\n    event.preventDefault();\n    event.stopPropagation();\n    const newHeight = event.clientY;\n\n    if (this.props.onChangeHeight && newHeight !== this.props.height && newHeight > 0) {\n      requestAnimationFrame(() => {\n        this.props.onChangeHeight(newHeight);\n      });\n    }\n  };\n  onEndDrag = () => {\n    this.setState({\n      dragging: false\n    });\n    window.removeEventListener('mousemove', this.onDrag);\n    window.removeEventListener('mouseup', this.onEndDrag);\n\n    if (this.props.onEndDrag) {\n      this.props.onEndDrag();\n    }\n  };\n\n  renderDragHandle() {\n    return typeof this.props.onChangeHeight === 'function' ? <div className={classes.draghandle} style={{\n      height: DRAG_HANDLE_HEIGHT\n    }} onMouseDown={this.onStartDrag} /> : null;\n  }\n\n  render() {\n    const height = Math.max(this.props.height, 0) + DRAG_HANDLE_HEIGHT;\n    const rootStyle = Object.assign({\n      height,\n      backgroundColor: this.props.editMode ? colors.yellow050 : colors.white,\n      paddingBottom: DRAG_HANDLE_HEIGHT\n    }, // Disable animations while dragging\n    this.state.dragging ? {\n      transition: 'none'\n    } : {});\n    return <div style={rootStyle} className={classes.root}>\n                <div className={classes.content}>{this.props.children}</div>\n                {this.renderDragHandle()}\n            </div>;\n  }\n\n}\n\nControlBar.propTypes = {\n  /**\n   * The height of the control bar in number of lines. Must be a positive integer.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * If true, the background color of the control bar changes to indicate that edit mode is active.\n   */\n  editMode: PropTypes.bool.isRequired,\n\n  /**\n   * Callback function that is called when the control bar is resized.\n   * The callback receives one argument: The new height in pixels.\n   *\n   * If no callback is specified the control bar will not have a drag handle.\n   */\n  height: PropTypes.number.isRequired,\n\n  /**\n   * Callback function that is called when the control bar is dropped after being dragged.\n   * The callback receives one argument: The new height in pixels.\n   *\n   * Ignored if no \"onChangeHeight\" function is provided.\n   */\n  onChangeHeight: PropTypes.func,\n\n  /**\n   * The contents of the control bar.\n   */\n  onEndDrag: PropTypes.func\n};\nControlBar.defaultProps = {\n  onChangeHeight: null,\n  onEndDrag: null\n};\nexport default ControlBar;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst StarIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>;\n\nStarIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default StarIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Chip } from '@dhis2/ui';\nimport { Link } from 'react-router-dom';\nimport debounce from 'lodash/debounce';\nimport StarIcon from '../../icons/Star';\nimport { apiPostDataStatistics } from '../../api/dataStatistics';\nimport classes from './styles/DashboardItemChip.module.css';\nexport const DashboardItemChip = ({\n  starred,\n  selected,\n  label,\n  dashboardId\n}) => {\n  const chipProps = {\n    selected\n  };\n\n  if (starred) {\n    const selectedState = selected ? classes.selected : classes.unselected;\n    chipProps.icon = <StarIcon className={`${classes.icon} ${selectedState}`} />;\n  }\n\n  return <Link className={classes.link} to={`/${dashboardId}`} onClick={debounce(() => apiPostDataStatistics('DASHBOARD_VIEW', dashboardId), 500)}>\n            <Chip {...chipProps}>{label}</Chip>\n        </Link>;\n};\nDashboardItemChip.propTypes = {\n  dashboardId: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  selected: PropTypes.bool.isRequired,\n  starred: PropTypes.bool.isRequired,\n  classes: PropTypes.object\n};\nexport default DashboardItemChip;","import { getInstance } from 'd2';\nexport const apiPostDataStatistics = async (eventType, id) => {\n  const d2 = await getInstance();\n  const url = `dataStatistics?eventType=${eventType}&favorite=${id}`;\n  d2.Api.getApi().post(url);\n};","import React from 'react';\nimport { colors } from '@dhis2/ui';\n\nconst AddCircleIcon = () => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" fill={colors.teal600} viewBox=\"0 0 24 24\">\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm4 11h-3v3c0 .55-.45 1-1 1s-1-.45-1-1v-3H8c-.55 0-1-.45-1-1s.45-1 1-1h3V8c0-.55.45-1 1-1s1 .45 1 1v3h3c.55 0 1 .45 1 1s-.45 1-1 1z\" />\n    </svg>;\n\nexport default AddCircleIcon;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst ClearIcon = ({\n  className\n}) => <svg className={className} fill={colors.grey800} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n        <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>;\n\nClearIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default ClearIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ClearIcon from '../../icons/Clear';\nimport classes from './styles/ClearButton.module.css';\nexport const ClearButton = ({\n  onClear\n}) => <button className={classes.button} onClick={onClear}>\n        <span>\n            <ClearIcon className={classes.icon} color=\"action\" />\n        </span>\n    </button>;\nClearButton.propTypes = {\n  onClear: PropTypes.func.isRequired\n};\nexport default ClearButton;","import { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\nexport const SET_DASHBOARDS_FILTER_NAME = 'SET_DASHBOARDS_FILTER_NAME';\nexport const SET_DASHBOARDS_FILTER_OWNER = 'SET_DASHBOARDS_FILTER_OWNER';\nexport const SET_DASHBOARDS_FILTER_ORDER = 'SET_DASHBOARDS_FILTER_ORDER';\nexport const ownerData = [{\n  id: 'ALL',\n  value: 'All users'\n}, {\n  id: 'ME',\n  value: 'Created by me'\n}, {\n  id: 'OTHERS',\n  value: 'Created by others'\n}];\nexport const orderData = [{\n  id: 'NAME:ASC',\n  value: 'Name (asc)'\n}, {\n  id: 'NAME:ASC',\n  value: 'Name (desc)'\n}, {\n  id: 'ITEMS:ASC',\n  value: 'Number of items (asc)'\n}, {\n  id: 'ITEMS:ASC',\n  value: 'Number of items (desc)'\n}, {\n  id: 'CREATED:ASC',\n  value: 'Created date (asc)'\n}, {\n  id: 'CREATED:ASC',\n  value: 'Created date (desc)'\n}];\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_NAME = '';\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_OWNER = ownerData[0].id;\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_ORDER = orderData[0].id;\n\nconst name = (state = DEFAULT_STATE_DASHBOARDS_FILTER_NAME, action) => {\n  switch (action.type) {\n    case SET_DASHBOARDS_FILTER_NAME:\n      return validateReducer(action.value, DEFAULT_STATE_DASHBOARDS_FILTER_NAME);\n\n    default:\n      return state;\n  }\n};\n\nconst owner = (state = DEFAULT_STATE_DASHBOARDS_FILTER_OWNER, action) => {\n  switch (action.type) {\n    case SET_DASHBOARDS_FILTER_OWNER:\n      return validateReducer(action.value, DEFAULT_STATE_DASHBOARDS_FILTER_NAME);\n\n    default:\n      return state;\n  }\n};\n\nconst order = (state = DEFAULT_STATE_DASHBOARDS_FILTER_ORDER, action) => {\n  switch (action.type) {\n    case SET_DASHBOARDS_FILTER_ORDER:\n      return validateReducer(action.value, DEFAULT_STATE_DASHBOARDS_FILTER_ORDER);\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  name,\n  owner,\n  order\n}); // selectors\n\nexport const sGetDashboardsFilterRoot = state => state.dashboardsFilter; // selector dependency level 2\n\nexport const sGetFilterName = state => sGetDashboardsFilterRoot(state).name;\nexport const sGetFilterOwner = state => sGetDashboardsFilterRoot(state).owner;\nexport const sGetFilterOrder = state => sGetDashboardsFilterRoot(state).order;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { withStyles } from '@material-ui/core/styles';\nimport InputField from '@material-ui/core/Input';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { colors } from '@dhis2/ui';\nimport ClearButton from './ClearButton';\nimport { DEFAULT_STATE_DASHBOARDS_FILTER_NAME } from '../../reducers/dashboardsFilter';\nconst styles = {\n  filterField: {\n    fontSize: '14px',\n    width: '200px',\n    height: '30px',\n    top: '-4px'\n  },\n  searchIcon: {\n    color: colors.grey700,\n    width: '20px',\n    height: '20px'\n  }\n};\nexport const KEYCODE_ENTER = 13;\nexport const KEYCODE_ESCAPE = 27;\nexport class Filter extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: DEFAULT_STATE_DASHBOARDS_FILTER_NAME\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      value: nextProps.name\n    });\n  }\n\n  setFilterValue = event => {\n    event.preventDefault();\n    this.props.onChangeName(event.target.value);\n  };\n  handleKeyUp = event => {\n    switch (event.keyCode) {\n      case KEYCODE_ENTER:\n        this.props.onKeypressEnter();\n        break;\n\n      case KEYCODE_ESCAPE:\n        this.props.onChangeName();\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  render() {\n    const {\n      classes,\n      name,\n      onChangeName\n    } = this.props;\n    const startAdornment = <InputAdornment position=\"start\">\n                <SearchIcon className={classes.searchIcon} />\n            </InputAdornment>;\n    const endAdornment = name !== '' && name !== null ? <InputAdornment position=\"end\">\n                    <ClearButton onClear={() => onChangeName()} />\n                </InputAdornment> : null;\n    return <InputField className={classes.filterField} placeholder={i18n.t('Search for a dashboard')} startAdornment={startAdornment} endAdornment={endAdornment} value={this.state.value} onChange={this.setFilterValue} onKeyUp={this.handleKeyUp} />;\n  }\n\n}\nFilter.propTypes = {\n  classes: PropTypes.object,\n  name: PropTypes.string,\n  onChangeName: PropTypes.func,\n  onKeypressEnter: PropTypes.func\n};\nFilter.defaultProps = {\n  name: '',\n  onChangeName: Function.prototype\n};\nexport default withStyles(styles)(Filter);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport classes from './styles/ShowMoreButton.module.css';\nexport const SHOWMORE_BAR_HEIGHT = 16;\nexport const ShowMoreButton = ({\n  onClick,\n  isMaxHeight,\n  disabled\n}) => {\n  return <div style={{\n    textAlign: 'center'\n  }}>\n            {disabled ? <div className={classes.disabled}>{i18n.t('Show more')}</div> : <div className={classes.showMore} onClick={onClick}>\n                    {isMaxHeight ? i18n.t('Show less') : i18n.t('Show more')}\n                </div>}\n        </div>;\n};\nShowMoreButton.propTypes = {\n  disabled: PropTypes.bool,\n  isMaxHeight: PropTypes.bool,\n  onClick: PropTypes.func\n};\nexport default ShowMoreButton;","import { SHOWMORE_BAR_HEIGHT } from './ShowMoreButton';\nexport const CONTROL_BAR_ROW_HEIGHT = 40;\nexport const FIRST_ROW_PADDING_HEIGHT = 10;\nexport const MIN_ROW_COUNT = 1;\nexport const HEADERBAR_HEIGHT = 48;\nconst CONTROL_BAR_OUTER_HEIGHT_DIFF = FIRST_ROW_PADDING_HEIGHT + SHOWMORE_BAR_HEIGHT - 2; // 2 pixel \"adjustment\"\n\nexport const getRowsHeight = rows => {\n  return rows * CONTROL_BAR_ROW_HEIGHT;\n};\nexport const getNumRowsFromHeight = height => {\n  return Math.floor((height - CONTROL_BAR_OUTER_HEIGHT_DIFF) / CONTROL_BAR_ROW_HEIGHT);\n};\nexport const getControlBarHeight = rows => {\n  return getRowsHeight(rows) + CONTROL_BAR_OUTER_HEIGHT_DIFF;\n};","/** @module reducers/controlBar */\nimport { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\nexport const SET_CONTROLBAR_USER_ROWS = 'SET_CONTROLBAR_USER_ROWS';\nexport const DEFAULT_STATE_CONTROLBAR_ROWS = 1;\n\nconst userRows = (state = DEFAULT_STATE_CONTROLBAR_ROWS, action) => {\n  switch (action.type) {\n    case SET_CONTROLBAR_USER_ROWS:\n      return validateReducer(action.value, DEFAULT_STATE_CONTROLBAR_ROWS);\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  userRows\n});\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\n\nexport const sGetControlBarRoot = state => state.controlBar; // Selector dependency level 2\n\nexport const sGetControlBarUserRows = state => sGetControlBarRoot(state).userRows;","import { TEXT, SPACER } from './itemTypes';\nimport { getGridItemProperties } from '../components/ItemGrid/gridUtil';\nexport const spacerContent = 'SPACER_ITEM_FOR_DASHBOARD_LAYOUT_CONVENIENCE';\nexport const emptyTextItemContent = 'TEXT_ITEM_WITH_NO_CONTENT';\n\nconst isBackendSpacerType = item => item.type === TEXT && item.text === spacerContent;\n\nconst isUiSpacerType = item => item.type === SPACER;\n\nconst isTextType = item => item.type === TEXT && item.text !== spacerContent;\n\nexport const convertUiItemsToBackend = items => items.map(item => {\n  let text = null;\n\n  if (isUiSpacerType(item)) {\n    text = spacerContent;\n  } else if (isTextType(item)) {\n    text = item.text || emptyTextItemContent;\n  }\n\n  return { ...item,\n    ...(text ? {\n      text\n    } : {})\n  };\n});\nexport const convertBackendItemsToUi = items => items.map(item => {\n  const type = isBackendSpacerType(item) ? SPACER : item.type;\n  const gridProperties = getGridItemProperties(item.id);\n  const text = isTextType(item) ? item.text === emptyTextItemContent ? '' : item.text : null;\n  return { ...item,\n    ...(text !== null ? {\n      text\n    } : {}),\n    type,\n    ...gridProperties\n  };\n});","/** @module reducers/dashboards */\nimport arrayFrom from 'd2-utilizr/lib/arrayFrom';\nimport arraySort from 'd2-utilizr/lib/arraySort';\nimport { orArray, orObject } from '../modules/util';\nimport { convertBackendItemsToUi } from '../modules/uiBackendItemConverter';\nexport const SET_DASHBOARDS = 'SET_DASHBOARDS';\nexport const ADD_DASHBOARDS = 'ADD_DASHBOARDS';\nexport const SET_DASHBOARD_STARRED = 'SET_DASHBOARD_STARRED';\nexport const SET_DASHBOARD_DISPLAY_NAME = 'SET_DASHBOARD_DISPLAY_NAME';\nexport const SET_DASHBOARD_ITEMS = 'SET_DASHBOARD_ITEMS';\nexport const DEFAULT_STATE_DASHBOARDS = {\n  byId: null,\n  items: []\n};\nexport const EMPTY_DASHBOARD = {}; // reducer helper functions\n\nconst updateDashboardProp = ({\n  state,\n  dashboardId,\n  prop,\n  value\n}) => ({\n  byId: { ...state.byId,\n    [dashboardId]: { ...state.byId[dashboardId],\n      [prop]: value\n    }\n  },\n  items: state.items\n});\n/**\n * Reducer that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n * @returns {Object}\n */\n\n\nexport default ((state = DEFAULT_STATE_DASHBOARDS, action) => {\n  switch (action.type) {\n    case SET_DASHBOARDS:\n      {\n        return {\n          byId: action.value,\n          items: []\n        };\n      }\n\n    case ADD_DASHBOARDS:\n      {\n        return { ...state,\n          byId: { ...state.byId,\n            ...action.value\n          }\n        };\n      }\n\n    case SET_DASHBOARD_STARRED:\n      {\n        return updateDashboardProp({\n          state,\n          dashboardId: action.dashboardId,\n          prop: 'starred',\n          value: action.value\n        });\n      }\n\n    case SET_DASHBOARD_DISPLAY_NAME:\n      {\n        return updateDashboardProp({\n          state,\n          dashboardId: action.dashboardId,\n          prop: 'displayName',\n          value: action.value\n        });\n      }\n\n    case SET_DASHBOARD_ITEMS:\n      {\n        return { ...state,\n          items: action.value\n        };\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetDashboardsRoot = state => state.dashboards; // selector level 1\n\n/**\n * Selector which returns a dashboard by id from the state object\n * If no matching dashboard is found it returns undefined\n * If dashboards.byId is null, then the dashboards api request\n * has not yet completed. If dashboards.byId is an empty object\n * then the dashboards api request is complete, but no dashboards\n * were returned\n *\n * @function\n * @param {Object} state The current state\n * @param {Number} id The id of the dashboard\n * @returns {Object | undefined}\n */\n\nexport const sGetDashboardById = (state, id) => orObject(sGetDashboardsRoot(state).byId)[id];\nexport const sDashboardsIsFetching = state => {\n  return sGetDashboardsRoot(state).byId === null;\n};\n/**\n * Selector which returns all dashboards (the byId object)\n *\n * @function\n * @param {Object} state The current state\n * @returns {Object | undefined}\n */\n\nexport const sGetAllDashboards = state => orObject(sGetDashboardsRoot(state).byId);\n/**\n * Selector which returns the current dashboard items\n *\n * @function\n * @param {Object} state The current state\n * @returns {Array}\n */\n\nexport const sGetDashboardItems = state => sGetDashboardsRoot(state).items; // selector level 2\n\nexport const sGetStarredDashboards = state => Object.values(sGetAllDashboards(state)).filter(dashboard => dashboard.starred === true);\nexport const sGetUnstarredDashboards = state => Object.values(sGetAllDashboards(state)).filter(dashboard => dashboard.starred === false); // selector level 3\n\nexport const sGetStarredDashboardIds = state => {\n  return sGetStarredDashboards(state).map(dashboard => dashboard.id);\n};\nexport const sGetUnstarredDashboardIds = state => sGetUnstarredDashboards(state).map(dashboard => dashboard.id);\nexport const sGetDashboardsSortedByStarred = state => [...arraySort(sGetStarredDashboards(state), 'ASC', 'displayName'), ...arraySort(sGetUnstarredDashboards(state), 'ASC', 'displayName')]; // utils\n\n/**\n * Returns the array of dashboards, customized for ui\n * @function\n * @param {Array} data The original dashboard list\n * @returns {Array}\n */\n\nexport const getCustomDashboards = data => arrayFrom(data).map(d => ({\n  id: d.id,\n  name: d.name,\n  displayName: d.displayName,\n  description: d.description,\n  displayDescription: d.displayDescription,\n  starred: d.favorite,\n  owner: d.user.name,\n  created: d.created.split('T').join(' ').substr(0, 16),\n  lastUpdated: d.lastUpdated.split('T').join(' ').substr(0, 16),\n  access: d.access,\n  numberOfItems: orArray(d.dashboardItems).length,\n  dashboardItems: convertBackendItemsToUi(d.dashboardItems)\n}));","/** @module reducers/selected */\nimport { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\nexport const SET_SELECTED_ID = 'SET_SELECTED_ID';\nexport const SET_SELECTED_ISLOADING = 'SET_SELECTED_ISLOADING';\nexport const SET_SELECTED_SHOWDESCRIPTION = 'SET_SELECTED_SHOWDESCRIPTION';\nexport const SET_SELECTED_ITEM_ACTIVE_TYPE = 'SET_SELECTED_ITEM_ACTIVE_TYPE';\nexport const CLEAR_SELECTED_ITEM_ACTIVE_TYPES = 'CLEAR_SELECTED_ITEM_ACTIVE_TYPES';\nexport const DEFAULT_STATE_SELECTED_ID = null;\nexport const DEFAULT_STATE_SELECTED_ISLOADING = false;\nexport const DEFAULT_STATE_SELECTED_SHOWDESCRIPTION = false;\nexport const DEFAULT_STATE_SELECTED_ITEM_ACTIVE_TYPES = {};\nexport const NON_EXISTING_DASHBOARD_ID = '0';\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\n\nconst id = (state = DEFAULT_STATE_SELECTED_ID, action) => {\n  switch (action.type) {\n    case SET_SELECTED_ID:\n      return validateReducer(action.value, DEFAULT_STATE_SELECTED_ID);\n\n    default:\n      return state;\n  }\n};\n\nconst isLoading = (state = DEFAULT_STATE_SELECTED_ISLOADING, action) => {\n  switch (action.type) {\n    case SET_SELECTED_ISLOADING:\n      return validateReducer(action.value, DEFAULT_STATE_SELECTED_ISLOADING);\n\n    default:\n      return state;\n  }\n};\n\nconst showDescription = (state = DEFAULT_STATE_SELECTED_SHOWDESCRIPTION, action) => {\n  switch (action.type) {\n    case SET_SELECTED_SHOWDESCRIPTION:\n      return validateReducer(action.value, DEFAULT_STATE_SELECTED_SHOWDESCRIPTION);\n\n    default:\n      return state;\n  }\n};\n\nconst itemActiveTypes = (state = DEFAULT_STATE_SELECTED_ITEM_ACTIVE_TYPES, action) => {\n  switch (action.type) {\n    case SET_SELECTED_ITEM_ACTIVE_TYPE:\n      {\n        return { ...state,\n          [action.id]: action.activeType\n        };\n      }\n\n    case CLEAR_SELECTED_ITEM_ACTIVE_TYPES:\n      {\n        return DEFAULT_STATE_SELECTED_ITEM_ACTIVE_TYPES;\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  id,\n  isLoading,\n  showDescription,\n  itemActiveTypes\n}); // Selectors\n\nexport const sGetSelectedRoot = state => state.selected;\nexport const sGetSelectedId = state => sGetSelectedRoot(state).id;\nexport const sGetSelectedIsLoading = state => sGetSelectedRoot(state).isLoading;\nexport const sGetSelectedShowDescription = state => sGetSelectedRoot(state).showDescription;\nexport const sGetSelectedItemActiveType = (state, id) => sGetSelectedRoot(state).itemActiveTypes[id];","import { getInstance } from 'd2';\nexport const NAMESPACE = 'dashboard';\nexport const hasNamespace = async (d2) => await d2.currentUser.dataStore.has(NAMESPACE);\nexport const getNamespace = async (d2, hasNamespace) => hasNamespace ? await d2.currentUser.dataStore.get(NAMESPACE) : await d2.currentUser.dataStore.create(NAMESPACE);\nexport const apiPostUserDataStoreValue = async (key, value) => {\n  const d2 = await getInstance();\n  const ns = await getNamespace(d2, hasNamespace);\n  ns.set(key, value);\n};\nexport const apiGetUserDataStoreValue = async (key, defaultValue) => {\n  const d2 = await getInstance();\n  const namespace = await getNamespace(d2, await hasNamespace(d2));\n  const hasKey = namespace?.keys?.find(k => k === key);\n\n  if (hasKey) {\n    return await namespace.get(key);\n  } else {\n    await apiPostUserDataStoreValue(key, defaultValue, namespace);\n    console.log('(These errors to /userDataStore can be ignored)');\n    return defaultValue;\n  }\n};","import { SET_CONTROLBAR_USER_ROWS } from '../reducers/controlBar';\nimport { apiGetControlBarRows } from '../api/controlBar'; // actions\n\nexport const acSetControlBarUserRows = rows => ({\n  type: SET_CONTROLBAR_USER_ROWS,\n  value: rows\n}); // thunks\n\nexport const tSetControlBarRows = () => async dispatch => {\n  const onSuccess = rows => {\n    dispatch(acSetControlBarUserRows(rows));\n  };\n\n  const onError = error => {\n    console.log('Error (apiGetControlBarRows): ', error);\n    return error;\n  };\n\n  try {\n    const controlBarRows = await apiGetControlBarRows();\n    return onSuccess(controlBarRows);\n  } catch (err) {\n    return onError(err);\n  }\n};","import { apiGetUserDataStoreValue, apiPostUserDataStoreValue } from './userDataStore';\nimport { DEFAULT_STATE_CONTROLBAR_ROWS } from '../reducers/controlBar';\nconst KEY_CONTROLBAR_ROWS = 'controlBarRows';\nexport const apiGetControlBarRows = async () => await apiGetUserDataStoreValue(KEY_CONTROLBAR_ROWS, DEFAULT_STATE_CONTROLBAR_ROWS);\nexport const apiPostControlBarRows = async (value) => await apiPostUserDataStoreValue(KEY_CONTROLBAR_ROWS, value);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport ControlBar from './ControlBar';\nimport arraySort from 'd2-utilizr/lib/arraySort';\nimport PropTypes from 'prop-types';\nimport Chip from './DashboardItemChip';\nimport AddCircleIcon from '../../icons/AddCircle';\nimport Filter from './Filter';\nimport ShowMoreButton from './ShowMoreButton';\nimport { FIRST_ROW_PADDING_HEIGHT, MIN_ROW_COUNT, getRowsHeight, getControlBarHeight, getNumRowsFromHeight } from './controlBarDimensions';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { sGetAllDashboards } from '../../reducers/dashboards';\nimport { sGetFilterName } from '../../reducers/dashboardsFilter';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { acSetControlBarUserRows } from '../../actions/controlBar';\nimport { acSetFilterName } from '../../actions/dashboardsFilter';\nimport { orObject, orArray } from '../../modules/util';\nimport { apiPostControlBarRows } from '../../api/controlBar';\nimport classes from './styles/DashboardsBar.module.css';\nexport const MAX_ROW_COUNT = 10;\nexport class DashboardsBar extends Component {\n  state = {\n    rows: MIN_ROW_COUNT\n  };\n  setInitialDashboardState = rows => {\n    this.setState({\n      rows,\n      isMaxHeight: rows === MAX_ROW_COUNT\n    });\n  };\n\n  componentDidMount() {\n    this.setInitialDashboardState(this.props.userRows);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setInitialDashboardState(nextProps.userRows);\n  }\n\n  onChangeHeight = newHeight => {\n    const adjustedHeight = newHeight - 52; // don't rush the transition to a bigger row count\n\n    const newRows = Math.max(MIN_ROW_COUNT, getNumRowsFromHeight(adjustedHeight));\n\n    if (newRows !== this.state.rows) {\n      const newRowCount = Math.min(newRows, MAX_ROW_COUNT);\n      this.props.onChangeHeight(newRowCount);\n    }\n  };\n  onEndDrag = () => {\n    return apiPostControlBarRows(this.state.rows);\n  };\n  onToggleMaxHeight = () => {\n    const rows = this.state.rows === MAX_ROW_COUNT ? this.props.userRows : MAX_ROW_COUNT;\n    this.setState({\n      rows,\n      isMaxHeight: !this.state.isMaxHeight\n    });\n  };\n  onSelectDashboard = () => {\n    this.props.history.push(`/${this.props.dashboards[0].id}`);\n  };\n\n  render() {\n    const {\n      dashboards,\n      name,\n      selectedId,\n      onChangeFilterName\n    } = this.props;\n    const rowCount = this.state.isMaxHeight ? MAX_ROW_COUNT : this.state.rows;\n    const controlBarHeight = getControlBarHeight(rowCount);\n    const contentWrapperStyle = {\n      padding: `${FIRST_ROW_PADDING_HEIGHT}px 6px 0 6px`,\n      overflowY: this.state.isMaxHeight ? 'auto' : 'hidden',\n      height: getRowsHeight(rowCount) + FIRST_ROW_PADDING_HEIGHT\n    };\n    return <ControlBar height={controlBarHeight} onChangeHeight={this.onChangeHeight} onEndDrag={this.onEndDrag} editMode={false}>\n                <div style={contentWrapperStyle}>\n                    <div className={classes.leftControls}>\n                        <Link style={{\n            display: 'inline-block',\n            textDecoration: 'none',\n            marginRight: 10,\n            position: 'relative',\n            top: '2px'\n          }} to={'/new'}>\n                            <AddCircleIcon />\n                        </Link>\n                        <Filter name={name} onChangeName={onChangeFilterName} onKeypressEnter={this.onSelectDashboard} />\n                    </div>\n                    {orArray(dashboards).map(dashboard => <Chip key={dashboard.id} label={dashboard.displayName} starred={dashboard.starred} dashboardId={dashboard.id} selected={dashboard.id === selectedId} />)}\n                </div>\n                <ShowMoreButton onClick={this.onToggleMaxHeight} isMaxHeight={this.state.isMaxHeight} disabled={this.props.userRows === MAX_ROW_COUNT} />\n            </ControlBar>;\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  dashboards: sGetAllDashboards(state),\n  name: sGetFilterName(state),\n  userRows: sGetControlBarUserRows(state),\n  selectedId: sGetSelectedId(state)\n});\n\nconst mapDispatchToProps = {\n  onChangeHeight: acSetControlBarUserRows,\n  onChangeFilterName: acSetFilterName\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n  const dashboards = Object.values(orObject(stateProps.dashboards));\n  const displayDashboards = arraySort(dashboards.filter(d => d.displayName.toLowerCase().includes(stateProps.name.toLowerCase())), 'ASC', 'displayName');\n  return { ...stateProps,\n    ...ownProps,\n    ...dispatchProps,\n    dashboards: [...displayDashboards.filter(d => d.starred), ...displayDashboards.filter(d => !d.starred)]\n  };\n};\n\nDashboardsBar.propTypes = {\n  dashboards: PropTypes.array,\n  history: PropTypes.object,\n  name: PropTypes.string,\n  selectedId: PropTypes.string,\n  userRows: PropTypes.number,\n  onChangeFilterName: PropTypes.func,\n  onChangeHeight: PropTypes.func\n};\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps, mergeProps)(DashboardsBar));","import { SET_DASHBOARDS_FILTER_NAME, SET_DASHBOARDS_FILTER_OWNER, SET_DASHBOARDS_FILTER_ORDER } from '../reducers/dashboardsFilter'; // actions\n\nexport const acSetFilterName = value => ({\n  type: SET_DASHBOARDS_FILTER_NAME,\n  value\n});\nexport const acSetFilterOwner = value => ({\n  type: SET_DASHBOARDS_FILTER_OWNER,\n  value\n});\nexport const acSetFilterOrder = value => ({\n  type: SET_DASHBOARDS_FILTER_ORDER,\n  value\n});","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { getControlBarHeight, MIN_ROW_COUNT } from '../ControlBar/controlBarDimensions';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { DRAG_HANDLE_HEIGHT } from '../ControlBar/ControlBar';\n\nconst DashboardVerticalOffset = props => {\n  const rows = props.editMode ? MIN_ROW_COUNT : props.userRows;\n  const marginTop = getControlBarHeight(rows) + DRAG_HANDLE_HEIGHT;\n  return <div className=\"page-container-top-margin\" style={{\n    marginTop\n  }} />;\n};\n\nconst mapStateToProps = state => ({\n  userRows: sGetControlBarUserRows(state)\n});\n\nDashboardVerticalOffset.propTypes = {\n  editMode: PropTypes.bool,\n  userRows: PropTypes.number\n};\nexport default connect(mapStateToProps)(DashboardVerticalOffset);","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nexport const NoContentMessage = ({\n  text\n}) => <div style={{\n  padding: '50px 10px',\n  textAlign: 'center',\n  fontSize: '15px',\n  fontWeight: 500,\n  color: colors.grey600\n}}>\n        {text}\n    </div>;\nNoContentMessage.propTypes = {\n  text: PropTypes.string\n};\nexport default NoContentMessage;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { MenuItem, colors } from '@dhis2/ui';\n\nconst HeaderMenuItem = ({\n  title\n}) => <MenuItem dense key={title} disabled label={<span style={{\n  color: colors.grey800,\n  fontWeight: '600'\n}}>\n                {title}\n            </span>} />;\n\nHeaderMenuItem.propTypes = {\n  title: PropTypes.string.isRequired\n};\nexport default HeaderMenuItem;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst LaunchIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\" fill={colors.grey600} viewBox=\"0 0 24 24\">\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z\" />\n    </svg>;\n\nLaunchIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default LaunchIcon;","import React from 'react';\nimport { MenuItem, colors } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport { visTypeIcons } from '@dhis2/analytics';\nimport { getItemIcon, VISUALIZATION } from '../../modules/itemTypes';\nimport LaunchIcon from '../../icons/Launch';\nimport classes from './styles/ContentMenuItem.module.css';\n\nconst LaunchLink = ({\n  url\n}) => <a onClick={e => e.stopPropagation()} className={classes.launchLink} target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n        <LaunchIcon />\n    </a>;\n\nLaunchLink.propTypes = {\n  url: PropTypes.string\n};\n\nconst InsertButton = () => <button className={classes.buttonInsert}>{i18n.t('Insert')}</button>;\n\nconst ContentMenuItem = ({\n  type,\n  name,\n  onInsert,\n  url,\n  visType\n}) => {\n  const ItemIcon = getItemIcon(type);\n  const renderedItemIcon = type === VISUALIZATION ? visTypeIcons[visType] : <ItemIcon style={{\n    fill: colors.grey600\n  }} />;\n  return <MenuItem dense onClick={onInsert} label={<div className={classes.menuItem}>\n                    <div className={classes.label}>\n                        <span style={{\n        marginRight: '6px'\n      }}>\n                            {renderedItemIcon}\n                        </span>\n                        <span>{name}</span>\n                        {url ? <LaunchLink url={url} /> : null}\n                    </div>\n                    <InsertButton />\n                </div>} />;\n};\n\nContentMenuItem.propTypes = {\n  name: PropTypes.string,\n  type: PropTypes.string,\n  url: PropTypes.string,\n  visType: PropTypes.string,\n  onInsert: PropTypes.func\n};\nexport default ContentMenuItem;","/** @module reducers/editDashboard */\nimport update from 'immutability-helper';\nimport isEmpty from 'lodash/isEmpty';\nimport { orArray, orObject } from '../modules/util';\nexport const RECEIVED_EDIT_DASHBOARD = 'RECEIVED_EDIT_DASHBOARD';\nexport const RECEIVED_NOT_EDITING = 'RECEIVED_NOT_EDITING';\nexport const START_NEW_DASHBOARD = 'START_NEW_DASHBOARD';\nexport const RECEIVED_TITLE = 'RECEIVED_TITLE';\nexport const RECEIVED_DESCRIPTION = 'RECEIVED_DESCRIPTION';\nexport const ADD_DASHBOARD_ITEM = 'ADD_DASHBOARD_ITEM';\nexport const REMOVE_DASHBOARD_ITEM = 'REMOVE_DASHBOARD_ITEM';\nexport const UPDATE_DASHBOARD_ITEM = 'UPDATE_DASHBOARD_ITEM';\nexport const RECEIVED_DASHBOARD_LAYOUT = 'RECEIVED_DASHBOARD_LAYOUT';\nexport const SET_PRINT_PREVIEW_VIEW = 'SET_PRINT_PREVIEW_VIEW';\nexport const CLEAR_PRINT_PREVIEW_VIEW = 'CLEAR_PRINT_PREVIEW_VIEW';\nexport const DEFAULT_STATE_EDIT_DASHBOARD = {};\nexport const NEW_DASHBOARD_STATE = {\n  id: '',\n  name: '',\n  access: {},\n  description: '',\n  dashboardItems: [],\n  printPreviewView: false\n};\nexport default ((state = DEFAULT_STATE_EDIT_DASHBOARD, action) => {\n  switch (action.type) {\n    case RECEIVED_EDIT_DASHBOARD:\n      {\n        const newState = {};\n        Object.keys(NEW_DASHBOARD_STATE).map(k => newState[k] = action.value[k]);\n        newState.printPreviewView = false;\n        return newState;\n      }\n\n    case RECEIVED_NOT_EDITING:\n      return DEFAULT_STATE_EDIT_DASHBOARD;\n\n    case SET_PRINT_PREVIEW_VIEW:\n      return Object.assign({}, state, {\n        printPreviewView: true\n      });\n\n    case CLEAR_PRINT_PREVIEW_VIEW:\n      return Object.assign({}, state, {\n        printPreviewView: false\n      });\n\n    case START_NEW_DASHBOARD:\n      return NEW_DASHBOARD_STATE;\n\n    case RECEIVED_TITLE:\n      {\n        return Object.assign({}, state, {\n          name: action.value\n        });\n      }\n\n    case RECEIVED_DESCRIPTION:\n      {\n        return Object.assign({}, state, {\n          description: action.value\n        });\n      }\n\n    case ADD_DASHBOARD_ITEM:\n      if (!action.value.position) {\n        return update(state, {\n          dashboardItems: {\n            $unshift: [action.value]\n          }\n        });\n      }\n\n      return update(state, {\n        dashboardItems: {\n          $splice: [[parseInt(action.value.position), 0, action.value]]\n        }\n      });\n\n    case REMOVE_DASHBOARD_ITEM:\n      {\n        const idToRemove = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === idToRemove);\n\n        if (dashboardItemIndex > -1) {\n          return update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1]]\n            }\n          });\n        }\n\n        return state;\n      }\n\n    case RECEIVED_DASHBOARD_LAYOUT:\n      {\n        const stateItems = orArray(state.dashboardItems);\n        let layoutHasChanged = false;\n        const newStateItems = action.value.map(({\n          x,\n          y,\n          w,\n          h,\n          i\n        }) => {\n          const stateItem = stateItems.find(si => si.id === i);\n\n          if (!(stateItem.x === x && stateItem.y === y && stateItem.w === w && stateItem.h === h)) {\n            layoutHasChanged = true;\n            return Object.assign({}, stateItem, {\n              w,\n              h,\n              x,\n              y\n            });\n          }\n\n          return stateItem;\n        });\n        return layoutHasChanged ? { ...state,\n          dashboardItems: newStateItems\n        } : state;\n      }\n\n    case UPDATE_DASHBOARD_ITEM:\n      {\n        const dashboardItem = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === dashboardItem.id);\n\n        if (dashboardItemIndex > -1) {\n          const newState = update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1, Object.assign({}, dashboardItem)]]\n            }\n          });\n          return newState;\n        }\n\n        return state;\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetEditDashboardRoot = state => state.editDashboard; // selectors\n\nexport const sGetIsEditing = state => !isEmpty(state.editDashboard);\nexport const sGetIsPrintPreviewView = state => sGetEditDashboardRoot(state).printPreviewView;\nexport const sGetIsNewDashboard = state => {\n  return !isEmpty(state.editDashboard) && sGetEditDashboardRoot(state).id === '';\n};\nexport const sGetEditDashboardName = state => sGetEditDashboardRoot(state).name;\nexport const sGetEditDashboardDescription = state => sGetEditDashboardRoot(state).description;\nexport const sGetEditDashboardItems = state => orObject(sGetEditDashboardRoot(state)).dashboardItems;","import { getInstance } from 'd2';\n\nconst onError = error => console.log('Error: ', error);\n\nconst saveDashboard = (dashboard, data) => {\n  const {\n    name,\n    description,\n    dashboardItems\n  } = data;\n  dashboard.name = name;\n  dashboard.description = description;\n  dashboard.dashboardItems = dashboardItems.map(item => Object.assign({}, item, {\n    width: item.w,\n    height: item.h\n  }));\n  return dashboard.save().then(msg => msg.response.uid);\n};\n\nexport const updateDashboard = data => {\n  return getInstance().then(d2 => {\n    return d2.models.dashboards.get(data.id).then(dashboard => saveDashboard(dashboard, data));\n  }).catch(onError);\n};\nexport const postDashboard = data => {\n  return getInstance().then(d2 => {\n    const dashboard = d2.models.dashboards.create();\n    return saveDashboard(dashboard, data);\n  });\n};","export const RECEIVED_USER = 'RECEIVED_USER';\nexport const DEFAULT_STATE_USER = {\n  id: '',\n  username: '',\n  uiLocale: '',\n  isSuperuser: false\n};\nexport default ((state = DEFAULT_STATE_USER, action) => {\n  switch (action.type) {\n    case RECEIVED_USER:\n      {\n        return fromD2ToUserObj(action.value);\n      }\n\n    default:\n      return state;\n  }\n});\n\nfunction fromD2ToUserObj(d2Object) {\n  return {\n    id: d2Object.id,\n    username: d2Object.username,\n    uiLocale: d2Object.settings.keyUiLocale,\n    isSuperuser: d2Object.authorities.has('ALL')\n  };\n} // selectors\n\n\nexport const sGetUserId = state => state.user.id;\nexport const sGetUserUsername = state => state.user.username;\nexport const sGetIsSuperuser = state => state.user.isSuperuser;\nexport const sGetUiLocale = state => state.user.uiLocale;","import arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { getListItemFields, getFavoritesFields, getIdNameFields } from './metadata'; // Helper functions\n\nexport const onError = error => console.log('Error: ', error); // Dashboard item\n\nexport const getDashboardItemsFields = ({\n  withFavorite\n} = {}) => arrayClean(['id', 'type', 'shape', 'x', 'y', 'width~rename(w)', 'height~rename(h)', 'messages', 'text', 'appKey', `${getListItemFields().join(',')}`, withFavorite ? `${getFavoritesFields({\n  withDimensions: withFavorite.withDimensions\n}).join(',')}` : ``]); // Dashboard\n\nexport const getDashboardFields = ({\n  withItems,\n  withFavorite\n} = {}) => arrayClean([`${getIdNameFields().join(',')}`, 'description', 'displayDescription', 'favorite', `user[${getIdNameFields({\n  rename: true\n}).join(',')}]`, 'created', 'lastUpdated', 'access', withItems ? `dashboardItems[${getDashboardItemsFields({\n  withFavorite\n}).join(',')}]` : ``]);","import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { onError, getDashboardFields } from './index'; // Get \"all\" dashboards on startup\n\nexport const apiFetchDashboards = () => getInstance().then(d2 => d2.models.dashboard.list({\n  fields: [getDashboardFields().join(','), 'dashboardItems[id]'].join(','),\n  paging: 'false'\n})).catch(onError); // Get more info about selected dashboard\n\nexport const apiFetchDashboard = id => getInstance().then(d2 => d2.models.dashboard.get(id, {\n  fields: arrayClean(getDashboardFields({\n    withItems: true,\n    withFavorite: {\n      withDimensions: false\n    }\n  })).join(',')\n})).catch(onError); // Star dashboard\n\nexport const apiStarDashboard = (id, isStarred) => {\n  const url = `dashboards/${id}/favorite`;\n  getInstance().then(d2 => {\n    if (isStarred) {\n      d2.Api.getApi().post(url);\n    } else {\n      d2.Api.getApi().delete(url);\n    }\n  });\n};\nexport const apiDeleteDashboard = id => {\n  return getInstance().then(d2 => {\n    return d2.models.dashboards.get(id).then(dashboard => dashboard.delete());\n  }).catch(onError);\n};","import { SET_DASHBOARDS, ADD_DASHBOARDS, SET_DASHBOARD_STARRED, SET_DASHBOARD_DISPLAY_NAME, SET_DASHBOARD_ITEMS } from '../reducers/dashboards';\nimport { getCustomDashboards, sGetDashboardById, sGetDashboardsSortedByStarred } from '../reducers/dashboards';\nimport { NON_EXISTING_DASHBOARD_ID } from '../reducers/selected';\nimport { sGetUserUsername } from '../reducers/user';\nimport { tSetSelectedDashboardById, acSetSelectedId } from './selected';\nimport { apiFetchDashboards, apiStarDashboard, apiDeleteDashboard } from '../api/dashboards';\nimport { getPreferredDashboardId } from '../api/localStorage';\nimport { arrayToIdMap } from '../modules/util'; // actions\n\nexport const acSetDashboards = dashboards => ({\n  type: SET_DASHBOARDS,\n  value: arrayToIdMap(getCustomDashboards(dashboards))\n});\nexport const acAppendDashboards = dashboards => ({\n  type: ADD_DASHBOARDS,\n  value: arrayToIdMap(getCustomDashboards(dashboards))\n});\nexport const acSetDashboardStarred = (dashboardId, isStarred) => ({\n  type: SET_DASHBOARD_STARRED,\n  dashboardId: dashboardId,\n  value: isStarred\n});\nexport const acSetDashboardDisplayName = (dashboardId, value) => ({\n  type: SET_DASHBOARD_DISPLAY_NAME,\n  dashboardId,\n  value\n});\nexport const acSetDashboardItems = value => ({\n  type: SET_DASHBOARD_ITEMS,\n  value\n}); // thunks\n\nexport const tFetchDashboards = () => async dispatch => {\n  const collection = await apiFetchDashboards();\n  dispatch(acSetDashboards(collection.toArray()));\n};\nexport const tSelectDashboard = id => async (dispatch, getState) => {\n  const onError = error => {\n    console.log('Error (apiFetchDashboards): ', error);\n    return error;\n  };\n\n  try {\n    const state = getState();\n    let dashboardToSelect = null;\n\n    if (id) {\n      dashboardToSelect = sGetDashboardById(state, id) || null;\n    } else {\n      const preferredId = getPreferredDashboardId(sGetUserUsername(state));\n      const dash = sGetDashboardById(state, preferredId);\n      dashboardToSelect = preferredId && dash ? dash : sGetDashboardsSortedByStarred(state)[0];\n    }\n\n    if (dashboardToSelect) {\n      dispatch(tSetSelectedDashboardById(dashboardToSelect.id));\n    } else {\n      dispatch(acSetSelectedId(NON_EXISTING_DASHBOARD_ID));\n    }\n  } catch (err) {\n    return onError(err);\n  }\n};\nexport const tStarDashboard = (id, isStarred) => async dispatch => {\n  const onSuccess = id => {\n    dispatch(acSetDashboardStarred(id, isStarred));\n    return id;\n  };\n\n  const onError = error => {\n    console.log('Error (apiStarDashboard): ', error);\n    return error;\n  };\n\n  try {\n    await apiStarDashboard(id, isStarred);\n    return onSuccess(id);\n  } catch (err) {\n    return onError(err);\n  }\n};\nexport const tDeleteDashboard = id => async dispatch => {\n  try {\n    await apiDeleteDashboard(id);\n    await dispatch(tFetchDashboards());\n    return Promise.resolve();\n  } catch (err) {\n    console.log('Error (deleteDashboard): ', err);\n    return err;\n  }\n};","import { getDimensionById, DIMENSION_ID_PERIOD, DIMENSION_ID_ORGUNIT } from '@dhis2/analytics';\nexport const SET_DIMENSIONS = 'SET_DIMENSIONS';\nexport const DEFAULT_DIMENSIONS = [getDimensionById(DIMENSION_ID_PERIOD), getDimensionById(DIMENSION_ID_ORGUNIT)];\nexport default ((state = DEFAULT_DIMENSIONS, action) => {\n  switch (action.type) {\n    case SET_DIMENSIONS:\n      {\n        return [...DEFAULT_DIMENSIONS, ...action.value];\n      }\n\n    default:\n      return state;\n  }\n});\nexport const sGetDimensions = state => state.dimensions;","import { sGetDimensions } from './dimensions';\nimport { createSelector } from 'reselect';\nexport const CLEAR_ITEM_FILTERS = 'CLEAR_ITEM_FILTERS';\nexport const SET_ITEM_FILTERS = 'SET_ITEM_FILTERS';\nexport const ADD_ITEM_FILTER = 'ADD_ITEM_FILTER';\nexport const REMOVE_ITEM_FILTER = 'REMOVE_ITEM_FILTER';\nexport const DEFAULT_STATE_ITEM_FILTERS = {};\nexport default ((state = DEFAULT_STATE_ITEM_FILTERS, action) => {\n  switch (action.type) {\n    case ADD_ITEM_FILTER:\n      {\n        return { ...state,\n          [action.filter.id]: action.filter.value\n        };\n      }\n\n    case REMOVE_ITEM_FILTER:\n      {\n        const newState = { ...state\n        };\n        delete newState[action.id];\n        return newState;\n      }\n\n    case SET_ITEM_FILTERS:\n      {\n        return action.filters;\n      }\n\n    case CLEAR_ITEM_FILTERS:\n      {\n        return DEFAULT_STATE_ITEM_FILTERS;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetItemFiltersRoot = state => state.itemFilters; // simplify the filters structure to:\n// [{ id: 'pe', name: 'Period', values: [{ id: 2019: name: '2019' }, {id: 'LAST_MONTH', name: 'Last month' }]}, ...]\n\nexport const sGetNamedItemFilters = createSelector([sGetItemFiltersRoot, sGetDimensions], (filters, dimensions) => Object.keys(filters).reduce((arr, id) => {\n  arr.push({\n    id: id,\n    name: dimensions.find(dimension => dimension.id === id).name,\n    values: filters[id].map(value => ({\n      id: value.id,\n      name: value.displayName || value.name\n    }))\n  });\n  return arr;\n}, []));","import { ADD_ITEM_FILTER, REMOVE_ITEM_FILTER, SET_ITEM_FILTERS, CLEAR_ITEM_FILTERS } from '../reducers/itemFilters';\nexport const FILTER_ORG_UNIT = 'ou'; // actions\n\nexport const acAddItemFilter = filter => ({\n  type: ADD_ITEM_FILTER,\n  filter\n});\nexport const acRemoveItemFilter = id => ({\n  type: REMOVE_ITEM_FILTER,\n  id\n});\nexport const acClearItemFilters = () => ({\n  type: CLEAR_ITEM_FILTERS\n});\nexport const acSetItemFilters = filters => ({\n  type: SET_ITEM_FILTERS,\n  filters\n});","import update from 'immutability-helper';\nimport { arrayToIdMap } from '../modules/util';\nexport const RECEIVED_MESSAGES = 'RECEIVED_MESSAGES';\nexport default ((state = {}, action) => {\n  switch (action.type) {\n    case RECEIVED_MESSAGES:\n      {\n        const conversations = arrayToIdMap(action.value);\n        const newState = update(state, {\n          $merge: conversations\n        });\n        return newState;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetMessagesRoot = state => state.messages;","import { RECEIVED_MESSAGES } from '../../../reducers/messages';\nimport { getMessages } from '../../../api/messages';\n\nconst onError = (action, error) => {\n  console.log(`Error in action ${action}: ${error}`);\n  return error;\n};\n\nexport const receivedMessages = value => ({\n  type: RECEIVED_MESSAGES,\n  value\n});\nexport const tGetMessages = () => async dispatch => {\n  try {\n    const messages = await getMessages();\n    const {\n      messageConversations\n    } = messages;\n    return dispatch(receivedMessages(messageConversations));\n  } catch (err) {\n    return onError('Get Messages', err);\n  }\n};","import { getInstance } from 'd2';\nexport const getMessages = () => {\n  const fields = 'id,messageCount,lastUpdated,messageType,displayName,read,messages[id,read,sender[id,displayName],text,lastUpdated]';\n  const url = `/messageConversations?fields=${fields}&order=read:asc&pageSize=200`;\n  return getInstance().then(d2 => d2.Api.getApi().get(url)).catch(error => console.log('Error:', error));\n};","export const SET_ALERT_MESSAGE = 'SET_ALERT_MESSAGE';\nexport const CLEAR_ALERT_MESSAGE = 'CLEAR_ALERT_MESSAGE';\nexport const DEFAULT_STATE_ALERT = null;\nexport default ((state = DEFAULT_STATE_ALERT, action) => {\n  switch (action.type) {\n    case SET_ALERT_MESSAGE:\n      {\n        return action.value;\n      }\n\n    case CLEAR_ALERT_MESSAGE:\n      {\n        return DEFAULT_STATE_ALERT;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetAlertMessage = state => state.alert;","import { SET_ALERT_MESSAGE, CLEAR_ALERT_MESSAGE } from '../reducers/alert';\nexport const acSetAlertMessage = value => ({\n  type: SET_ALERT_MESSAGE,\n  value\n});\nexport const acClearAlertMessage = () => ({\n  type: CLEAR_ALERT_MESSAGE\n});","import { orObject } from '../modules/util';\nimport objectClean from 'd2-utilizr/lib/objectClean';\n/** @module reducers/visualizations */\n\nexport const ADD_VISUALIZATION = 'ADD_VISUALIZATION';\nexport const SET_ACTIVE_VISUALIZATION_TYPE = 'SET_ACTIVE_VISUALIZATION_TYPE';\nexport const CLEAR_VISUALIZATIONS = 'CLEAR_VISUALIZATIONS';\nexport const DEFAULT_STATE_VISUALIZATIONS = {};\n\nconst isEmpty = p => p === undefined || p === null;\n\nexport default ((state = DEFAULT_STATE_VISUALIZATIONS, action) => {\n  switch (action.type) {\n    case ADD_VISUALIZATION:\n      {\n        return { ...state,\n          [action.value.id]: objectClean({ ...orObject(state[action.value.id]),\n            ...action.value\n          }, isEmpty)\n        };\n      }\n\n    case CLEAR_VISUALIZATIONS:\n      {\n        return DEFAULT_STATE_VISUALIZATIONS;\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetVisualizationsRoot = state => state.visualizations; // selectors level 1\n\nexport const sGetVisualization = (state, id) => {\n  return sGetVisualizationsRoot(state)[id];\n};","import { ADD_VISUALIZATION, CLEAR_VISUALIZATIONS } from '../reducers/visualizations';\nexport const acAddVisualization = value => ({\n  type: ADD_VISUALIZATION,\n  value\n});\nexport const acClearVisualizations = () => ({\n  type: CLEAR_VISUALIZATIONS\n});","import i18n from '@dhis2/d2-i18n';\nimport { getCustomDashboards, sGetDashboardById } from '../reducers/dashboards';\nimport { SET_SELECTED_ID, SET_SELECTED_ISLOADING, SET_SELECTED_SHOWDESCRIPTION, SET_SELECTED_ITEM_ACTIVE_TYPE, CLEAR_SELECTED_ITEM_ACTIVE_TYPES, sGetSelectedIsLoading, sGetSelectedId } from '../reducers/selected';\nimport { sGetUserUsername } from '../reducers/user';\nimport { acSetDashboardItems, acAppendDashboards } from './dashboards';\nimport { acClearItemFilters } from './itemFilters';\nimport { tGetMessages } from '../components/Item/MessagesItem/actions';\nimport { acSetAlertMessage, acClearAlertMessage } from './alert';\nimport { acAddVisualization, acClearVisualizations } from './visualizations';\nimport { apiFetchDashboard } from '../api/dashboards';\nimport { storePreferredDashboardId } from '../api/localStorage';\nimport { apiGetShowDescription, apiPostShowDescription } from '../api/description';\nimport { withShape } from '../components/ItemGrid/gridUtil';\nimport { extractFavorite } from '../components/Item/VisualizationItem/plugin';\nimport { REPORT_TABLE, CHART, MAP, EVENT_REPORT, EVENT_CHART, MESSAGES } from '../modules/itemTypes'; // actions\n\nexport const acSetSelectedId = value => ({\n  type: SET_SELECTED_ID,\n  value\n});\nexport const acSetSelectedIsLoading = value => ({\n  type: SET_SELECTED_ISLOADING,\n  value\n});\nexport const acSetSelectedShowDescription = value => ({\n  type: SET_SELECTED_SHOWDESCRIPTION,\n  value\n});\nexport const acSetSelectedItemActiveType = (id, activeType) => {\n  const action = {\n    type: SET_SELECTED_ITEM_ACTIVE_TYPE,\n    id,\n    activeType\n  };\n  return action;\n};\nexport const acClearSelectedItemActiveTypes = () => ({\n  type: CLEAR_SELECTED_ITEM_ACTIVE_TYPES\n}); // thunks\n\nexport const tSetSelectedDashboardById = id => async (dispatch, getState) => {\n  dispatch(acSetSelectedIsLoading(true));\n  const alertTimeout = setTimeout(() => {\n    const name = sGetDashboardById(getState(), id)?.displayName;\n\n    if (sGetSelectedIsLoading(getState()) && name) {\n      dispatch(acSetAlertMessage(i18n.t('Loading dashboard – {{name}}', {\n        name\n      })));\n    }\n  }, 500);\n\n  const onSuccess = selected => {\n    dispatch(acAppendDashboards(selected));\n    const customDashboard = getCustomDashboards(selected)[0];\n    dispatch(acSetDashboardItems(withShape(customDashboard.dashboardItems)));\n    storePreferredDashboardId(sGetUserUsername(getState()), id);\n\n    if (id !== sGetSelectedId(getState())) {\n      dispatch(acClearItemFilters());\n      dispatch(acClearVisualizations());\n      dispatch(acClearSelectedItemActiveTypes());\n    }\n\n    customDashboard.dashboardItems.forEach(item => {\n      switch (item.type) {\n        case REPORT_TABLE:\n        case CHART:\n        case MAP:\n        case EVENT_REPORT:\n        case EVENT_CHART:\n          dispatch(acAddVisualization(extractFavorite(item)));\n          break;\n\n        case MESSAGES:\n          dispatch(tGetMessages(id));\n          break;\n\n        default:\n          break;\n      }\n    });\n    dispatch(acSetSelectedId(id));\n    dispatch(acSetSelectedIsLoading(false));\n    clearTimeout(alertTimeout);\n    dispatch(acClearAlertMessage());\n    return selected;\n  };\n\n  const onError = error => {\n    console.log('Error: ', error);\n    return error;\n  };\n\n  try {\n    const dashboard = await apiFetchDashboard(id);\n    return onSuccess(dashboard);\n  } catch (err) {\n    return onError(err);\n  }\n};\nexport const tSetShowDescription = () => async dispatch => {\n  const onSuccess = value => {\n    dispatch(acSetSelectedShowDescription(value));\n  };\n\n  const onError = error => {\n    console.log('Error (apiGetShowDescription): ', error);\n    return error;\n  };\n\n  try {\n    const showDescription = await apiGetShowDescription();\n    return onSuccess(showDescription);\n  } catch (err) {\n    return onError(err);\n  }\n};\nexport const tUpdateShowDescription = value => async dispatch => {\n  const onSuccess = () => {\n    dispatch(acSetSelectedShowDescription(value));\n  };\n\n  const onError = error => {\n    console.log('Error (apiGetShowDescription): ', error);\n    return error;\n  };\n\n  try {\n    await apiPostShowDescription(value);\n    return onSuccess();\n  } catch (err) {\n    return onError(err);\n  }\n};","export const getPreferredDashboardId = username => localStorage.getItem(`dhis2.dashboard.current.${username}`) || undefined;\nexport const storePreferredDashboardId = (username, dashboardId) => {\n  localStorage.setItem(`dhis2.dashboard.current.${username}`, dashboardId);\n};","import { apiGetUserDataStoreValue, apiPostUserDataStoreValue } from './userDataStore';\nimport { DEFAULT_STATE_SELECTED_SHOWDESCRIPTION } from '../reducers/selected';\nconst KEY_SHOW_DESCRIPTION = 'showDescription';\nexport const apiGetShowDescription = async () => await apiGetUserDataStoreValue(KEY_SHOW_DESCRIPTION, DEFAULT_STATE_SELECTED_SHOWDESCRIPTION);\nexport const apiPostShowDescription = async (value) => await apiPostUserDataStoreValue(KEY_SHOW_DESCRIPTION, value);","import { generateUid } from 'd2/uid';\nimport i18n from '@dhis2/d2-i18n';\nimport { RECEIVED_EDIT_DASHBOARD, START_NEW_DASHBOARD, RECEIVED_NOT_EDITING, RECEIVED_TITLE, RECEIVED_DESCRIPTION, RECEIVED_DASHBOARD_LAYOUT, ADD_DASHBOARD_ITEM, UPDATE_DASHBOARD_ITEM, REMOVE_DASHBOARD_ITEM, SET_PRINT_PREVIEW_VIEW, CLEAR_PRINT_PREVIEW_VIEW } from '../reducers/editDashboard';\nimport { sGetEditDashboardRoot } from '../reducers/editDashboard';\nimport { updateDashboard, postDashboard } from '../api/editDashboard';\nimport { tSetSelectedDashboardById } from '../actions/selected';\nimport { NEW_ITEM_SHAPE, getGridItemProperties, getPageBreakItemShape, getPrintTitlePageItemShape } from '../components/ItemGrid/gridUtil';\nimport { itemTypeMap, PAGEBREAK, PRINT_TITLE_PAGE } from '../modules/itemTypes';\nimport { convertUiItemsToBackend } from '../modules/uiBackendItemConverter';\n\nconst onError = error => {\n  console.log('Error (Saving Dashboard): ', error);\n  return error;\n}; // actions\n\n\nexport const acSetEditDashboard = (dashboard, items) => {\n  const val = { ...dashboard,\n    dashboardItems: items\n  };\n  return {\n    type: RECEIVED_EDIT_DASHBOARD,\n    value: val\n  };\n};\nexport const acSetEditNewDashboard = () => ({\n  type: START_NEW_DASHBOARD\n});\nexport const acClearEditDashboard = () => ({\n  type: RECEIVED_NOT_EDITING\n});\nexport const acSetPrintPreviewView = () => ({\n  type: SET_PRINT_PREVIEW_VIEW\n});\nexport const acClearPrintPreviewView = () => ({\n  type: CLEAR_PRINT_PREVIEW_VIEW\n});\nexport const acSetDashboardTitle = value => ({\n  type: RECEIVED_TITLE,\n  value\n});\nexport const acSetDashboardDescription = value => ({\n  type: RECEIVED_DESCRIPTION,\n  value\n});\nexport const acUpdateDashboardLayout = value => ({\n  type: RECEIVED_DASHBOARD_LAYOUT,\n  value\n});\nexport const acAddDashboardItem = item => {\n  const type = item.type;\n  delete item.type;\n  const itemPropName = itemTypeMap[type].propName;\n  const id = generateUid();\n  const gridItemProperties = getGridItemProperties(id);\n  let shape;\n\n  if (type === PAGEBREAK) {\n    const yPos = item.yPos || 0;\n    shape = getPageBreakItemShape(yPos, item.isStatic);\n  } else if (type === PRINT_TITLE_PAGE) {\n    shape = getPrintTitlePageItemShape();\n  } else {\n    shape = NEW_ITEM_SHAPE;\n  }\n\n  return {\n    type: ADD_DASHBOARD_ITEM,\n    value: {\n      id,\n      type,\n      position: item.position || null,\n      [itemPropName]: item.content,\n      ...NEW_ITEM_SHAPE,\n      ...gridItemProperties,\n      ...shape\n    }\n  };\n};\nexport const acUpdateDashboardItem = item => ({\n  type: UPDATE_DASHBOARD_ITEM,\n  value: item\n});\nexport const acRemoveDashboardItem = value => ({\n  type: REMOVE_DASHBOARD_ITEM,\n  value\n}); // thunks\n\nexport const tSaveDashboard = () => async (dispatch, getState) => {\n  const dashboard = sGetEditDashboardRoot(getState());\n  const dashboardToSave = { ...dashboard,\n    dashboardItems: convertUiItemsToBackend(dashboard.dashboardItems),\n    name: dashboard.name || i18n.t('Untitled dashboard')\n  };\n\n  try {\n    const dashboardId = dashboardToSave.id ? await updateDashboard(dashboardToSave) : await postDashboard(dashboardToSave);\n    dispatch(acClearEditDashboard());\n    await dispatch(tSetSelectedDashboardById(dashboardId));\n    return Promise.resolve(dashboardId);\n  } catch (error) {\n    onError(error);\n  }\n};","import i18n from '@dhis2/d2-i18n';\nimport { VISUALIZATION, MAP, EVENT_CHART, EVENT_REPORT, USERS, REPORTS, RESOURCES, APP, MESSAGES, TEXT, SPACER } from '../../modules/itemTypes';\nexport const singleItems = [{\n  id: 'additional',\n  header: i18n.t('Additional items'),\n  items: [{\n    type: TEXT,\n    name: i18n.t('Text box'),\n    content: ''\n  }, {\n    type: MESSAGES,\n    name: i18n.t('Messages'),\n    content: 'true'\n  }, {\n    type: SPACER,\n    name: i18n.t('Spacer'),\n    content: ''\n  }]\n}]; // categorizedItems are grouped in the item selector menu\n\nexport const categorizedItems = [VISUALIZATION, MAP, EVENT_REPORT, EVENT_CHART, USERS, REPORTS, RESOURCES, APP]; // listItemTypes are included in a single dashboard item\n\nexport const listItemTypes = [REPORTS, RESOURCES, USERS];","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { MenuItem, Divider } from '@dhis2/ui';\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\nimport { tAddListItemContent } from './actions';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\nimport { getItemUrl, APP, VISUALIZATION } from '../../modules/itemTypes';\nimport { categorizedItems, listItemTypes } from './selectableItems';\nimport classes from './styles/CategorizedMenuGroup.module.css';\n\nclass CategorizedMenuGroup extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      seeMore: false\n    };\n  }\n\n  addItem = item => () => {\n    const {\n      type,\n      acAddDashboardItem,\n      tAddListItemContent\n    } = this.props;\n\n    if (type === APP) {\n      acAddDashboardItem({\n        type,\n        content: item.key\n      });\n    } else {\n      const newItem = {\n        id: item.id,\n        name: item.displayName || item.name\n      };\n\n      if (listItemTypes.includes(type)) {\n        tAddListItemContent(type, newItem);\n      } else {\n        acAddDashboardItem({\n          type,\n          content: newItem\n        });\n      }\n    }\n  };\n  toggleSeeMore = () => {\n    this.setState({\n      seeMore: !this.state.seeMore\n    });\n    this.props.onChangeItemsLimit(this.props.type);\n  };\n\n  render() {\n    const {\n      title,\n      type,\n      items,\n      hasMore\n    } = this.props;\n    return <>\n                <HeaderMenuItem title={title} />\n                {items.map(item => {\n        const itemUrl = getItemUrl(type, item, this.context.d2);\n        return <ContentMenuItem key={item.id || item.key} type={type} visType={type === VISUALIZATION ? item.type : type} name={item.displayName || item.name} onInsert={this.addItem(item)} url={itemUrl} />;\n      })}\n                {hasMore ? <MenuItem dense key={`showmore${title}`} onClick={this.toggleSeeMore} label={<button className={classes.showMoreButton}>\n                                {this.state.seeMore ? i18n.t('Show fewer') : i18n.t('Show more')}\n                            </button>} /> : null}\n                <Divider margin=\"8px 0px\" />\n            </>;\n  }\n\n}\n\nCategorizedMenuGroup.propTypes = {\n  items: PropTypes.array.isRequired,\n  title: PropTypes.string.isRequired,\n  type: PropTypes.oneOf(categorizedItems).isRequired,\n  onChangeItemsLimit: PropTypes.func.isRequired,\n  acAddDashboardItem: PropTypes.func,\n  hasMore: PropTypes.bool,\n  tAddListItemContent: PropTypes.func\n};\nCategorizedMenuGroup.contextTypes = {\n  d2: PropTypes.object.isRequired\n};\nexport default connect(null, {\n  acAddDashboardItem,\n  tAddListItemContent\n})(CategorizedMenuGroup);","import { sGetEditDashboardRoot } from '../../reducers/editDashboard';\nimport { itemTypeMap } from '../../modules/itemTypes';\nimport { acAddDashboardItem, acUpdateDashboardItem } from '../../actions/editDashboard';\nexport const tAddListItemContent = (type, content) => (dispatch, getState) => {\n  const state = getState();\n  const listItemType = itemTypeMap[type].propName;\n  const dashboardItems = sGetEditDashboardRoot(state).dashboardItems;\n  const dashboardItemIndex = dashboardItems.findIndex(item => item.type === type);\n  let dashboardItem; // Reports/Resources/Users dashboard item type already present in dashboard\n\n  if (dashboardItemIndex > -1) {\n    dashboardItem = dashboardItems[dashboardItemIndex];\n    dashboardItem[listItemType].push(content);\n    dispatch(acUpdateDashboardItem(dashboardItem));\n  } else {\n    dashboardItem = {\n      type: type,\n      content: [content]\n    };\n    dispatch(acAddDashboardItem(dashboardItem));\n  }\n};","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\nexport const SinglesMenuGroup = ({\n  acAddDashboardItem,\n  category\n}) => {\n  const addToDashboard = ({\n    type,\n    content\n  }) => () => {\n    acAddDashboardItem({\n      type,\n      content\n    });\n  };\n\n  return <>\n            <HeaderMenuItem title={category.header} />\n            {category.items.map(item => <ContentMenuItem key={item.type} type={item.type} name={item.name} onInsert={addToDashboard(item)} />)}\n        </>;\n};\nSinglesMenuGroup.propTypes = {\n  acAddDashboardItem: PropTypes.func,\n  category: PropTypes.object\n};\nexport default connect(null, {\n  acAddDashboardItem\n})(SinglesMenuGroup);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport Popover from '@material-ui/core/Popover';\nimport { InputField, Menu } from '@dhis2/ui';\nimport CategorizedMenuGroup from './CategorizedMenuGroup';\nimport SinglesMenuGroup from './SinglesMenuGroup';\nimport { singleItems, categorizedItems } from './selectableItems';\nimport { itemTypeMap, getDefaultItemCount } from '../../modules/itemTypes';\nimport './styles/ItemSelector.css';\n\nconst ItemSearchField = props => <InputField name=\"Dashboard item search\" label={i18n.t('Search for items to add to this dashboard')} type=\"text\" onChange={props.onChange} onFocus={props.onFocus} value={props.value} />;\n\nclass ItemSelector extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      anchorEl: null,\n      open: false,\n      maxOptions: new Set(),\n      items: undefined,\n      filter: ''\n    };\n  }\n\n  closeList = () => {\n    this.setState({\n      open: false,\n      filter: ''\n    });\n  };\n  openList = (_, event) => {\n    this.fetchItems();\n    this.setState({\n      anchorEl: event.currentTarget,\n      open: true\n    });\n  };\n  setFilter = (_, event) => {\n    this.setState({\n      filter: event.target.value\n    }, this.fetchItems);\n  };\n  getCategorizedMenuGroups = () => categorizedItems.filter(type => {\n    const itemType = itemTypeMap[type];\n    return this.state.items && this.state.items[itemType.endPointName];\n  }).map(type => {\n    const itemType = itemTypeMap[type];\n    const itemCount = getDefaultItemCount(type);\n    const allItems = this.state.items[itemType.endPointName];\n    const hasMore = allItems.length > itemCount;\n    const items = this.state.maxOptions.has(itemType.id) ? allItems : allItems.slice(0, itemCount);\n    return <CategorizedMenuGroup key={type} type={type} title={itemType.pluralTitle} items={items} onChangeItemsLimit={this.fetchItems} hasMore={hasMore} />;\n  });\n  getSinglesMenuGroups = () => singleItems.map(category => <SinglesMenuGroup key={category.id} category={category} />);\n  getMenuGroups = () => this.getCategorizedMenuGroups().concat(this.getSinglesMenuGroups());\n  fetchItems = async type => {\n    if (type) {\n      const maxOptions = this.state.maxOptions;\n\n      if (maxOptions.has(type)) {\n        maxOptions.delete(type);\n      } else {\n        maxOptions.add(type);\n      }\n\n      this.setState({\n        maxOptions\n      });\n    } else {\n      this.setState({\n        maxOptions: new Set()\n      });\n    }\n\n    let queryString = '?count=11';\n\n    if ([...this.state.maxOptions.values()].length) {\n      queryString += '&max=' + [...this.state.maxOptions.values()].join('&max=');\n    }\n\n    const filter = this.state.filter ? `/${this.state.filter}` : '';\n    this.context.d2.Api.getApi().get(`dashboards/q${filter}${queryString}`).then(response => this.setState({\n      items: response\n    })).catch(console.error);\n  };\n\n  render() {\n    return <>\n                <ItemSearchField value={this.state.filter} onChange={this.setFilter} onFocus={this.openList} />\n                <Popover className=\"dashboard-item-selector\" open={this.state.open} onClose={this.closeList} anchorEl={this.state.anchorEl} anchorOrigin={{\n        horizontal: 'left',\n        vertical: 'bottom'\n      }} transformOrigin={{\n        horizontal: 'left',\n        vertical: 'top'\n      }} style={{\n        height: '70vh'\n      }} PaperProps={{\n        style: {\n          width: '700px'\n        }\n      }} disableAutoFocus={true} disableEnforceFocus={true} disableRestoreFocus={true}>\n                    <Menu maxWidth={'700px'}>{this.getMenuGroups()}</Menu>\n                </Popover>\n            </>;\n  }\n\n}\n\nItemSearchField.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n  onFocus: PropTypes.func\n};\nItemSelector.contextTypes = {\n  d2: PropTypes.object.isRequired\n};\nexport default ItemSelector;","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { InputField, TextAreaField } from '@dhis2/ui';\nimport ItemSelector from '../ItemSelector/ItemSelector';\nimport { acSetDashboardTitle, acSetDashboardDescription } from '../../actions/editDashboard';\nimport { orObject } from '../../modules/util';\nimport { sGetEditDashboardRoot } from '../../reducers/editDashboard';\nimport classes from './styles/EditTitleBar.module.css';\nexport const EditTitleBar = ({\n  name,\n  description,\n  onChangeTitle,\n  onChangeDescription\n}) => {\n  const updateTitle = (_, e) => {\n    onChangeTitle(e.target.value);\n  };\n\n  const updateDescription = (_, e) => {\n    onChangeDescription(e.target.value);\n  };\n\n  return <section className={classes.section}>\n            <div className={classes.titleDescription}>\n                <InputField className={classes.title} name=\"Dashboard title input\" label={i18n.t('Dashboard title')} type=\"text\" onChange={updateTitle} value={name} placeholder={i18n.t('Untitled dashboard')} />\n                <TextAreaField className={classes.description} name=\"Dashboard description input\" label={i18n.t('Dashboard description')} onChange={updateDescription} value={description} />\n            </div>\n            <div className={classes.itemSelector}>\n                <ItemSelector />\n            </div>\n        </section>;\n};\nEditTitleBar.propTypes = {\n  onChangeDescription: PropTypes.func.isRequired,\n  onChangeTitle: PropTypes.func.isRequired,\n  description: PropTypes.string,\n  name: PropTypes.string\n};\nEditTitleBar.defaultProps = {\n  name: '',\n  description: ''\n};\n\nconst mapStateToProps = state => {\n  const selectedDashboard = orObject(sGetEditDashboardRoot(state));\n  return {\n    name: selectedDashboard.name,\n    description: selectedDashboard.description\n  };\n};\n\nconst mapDispatchToProps = {\n  onChangeTitle: acSetDashboardTitle,\n  onChangeDescription: acSetDashboardDescription\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(EditTitleBar);","import React from 'react';\nimport { colors } from '@dhis2/ui';\nexport const ThreeDots = () => <svg height=\"18\" viewBox=\"0 0 18 18\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"m4 7.5c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm10 0c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm-5 0c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5z\" fill=\"#6e7a8a\" />\n    </svg>;\nexport const SpeechBubble = () => <svg height=\"20\" viewBox=\"0 0 20 20\" width=\"20\" xmlns=\"http://www.w3.org/2000/svg\" style={{\n  margin: '3px 2px 0 2px'\n}} // Temporary fix for the misaligned icon, should be removed once the icon is replaced\n>\n        <path d=\"m20 2h-16c-1.1 0-1.99.9-1.99 2l-.01 18 4-4h14c1.1 0 2-.9 2-2v-12c0-1.1-.9-2-2-2zm-2 12h-12v-2h12zm0-3h-12v-2h12zm0-3h-12v-2h12z\" fill=\"#6e7a8a\" fillRule=\"evenodd\" transform=\"translate(-2 -2)\" />\n    </svg>;\nexport const Warning = () => <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" fill={colors.grey600}>\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z\" />\n    </svg>;","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { Button, Modal, ModalTitle, ModalContent, ModalActions, ButtonStrip } from '@dhis2/ui';\nimport { PeriodDimension, DynamicDimension, OrgUnitDimension, DIMENSION_ID_PERIOD, DIMENSION_ID_ORGUNIT } from '@dhis2/analytics';\nimport { acAddItemFilter, acRemoveItemFilter } from '../../actions/itemFilters';\nimport { sGetItemFiltersRoot } from '../../reducers/itemFilters';\n\nconst FilterDialog = ({\n  displayNameProperty,\n  dimension,\n  initiallySelectedItems,\n  addItemFilter,\n  removeItemFilter,\n  onClose\n}, context) => {\n  const [filters, setFilters] = useState(initiallySelectedItems);\n\n  const onSelectItems = ({\n    dimensionId,\n    items\n  }) => {\n    setFilters({\n      [dimensionId]: items\n    });\n  };\n\n  const onDeselectItems = ({\n    dimensionId,\n    itemIdsToRemove\n  }) => {\n    const oldList = filters[dimensionId] || [];\n    const newList = oldList.filter(item => !itemIdsToRemove.includes(item.id));\n    setFilters({ ...filters,\n      [dimensionId]: newList\n    });\n  };\n\n  const onReorderItems = ({\n    dimensionId,\n    itemIds\n  }) => {\n    const oldList = filters[dimensionId] || [];\n    const reorderedList = itemIds.map(id => oldList.find(item => item.id === id));\n    setFilters({ ...filters,\n      [dimensionId]: reorderedList\n    });\n  };\n\n  const saveFilter = () => {\n    const id = dimension.id;\n    const filterItems = filters[id];\n\n    if (filterItems && filterItems.length) {\n      addItemFilter({\n        id,\n        value: [...filterItems]\n      });\n    } else {\n      removeItemFilter(id);\n    }\n\n    onClose(id);\n  };\n\n  const renderDialogContent = () => {\n    const commonProps = {\n      d2: context.d2,\n      onSelect: onSelectItems,\n      onDeselect: onDeselectItems,\n      onReorder: onReorderItems\n    };\n    const selectedItems = filters[dimension.id] || [];\n\n    switch (dimension.id) {\n      case DIMENSION_ID_PERIOD:\n        {\n          return <PeriodDimension selectedPeriods={selectedItems} onSelect={commonProps.onSelect} />;\n        }\n\n      case DIMENSION_ID_ORGUNIT:\n        return <OrgUnitDimension displayNameProperty={displayNameProperty} ouItems={selectedItems} {...commonProps} />;\n\n      default:\n        return <DynamicDimension selectedItems={selectedItems} dimensionId={dimension.id} onSelect={commonProps.onSelect} context={commonProps.d2} />;\n    }\n  };\n\n  return <>\n            {dimension.id && <Modal onClose={onClose} position=\"top\" large>\n                    <ModalTitle>{dimension.name}</ModalTitle>\n                    <ModalContent>{renderDialogContent()}</ModalContent>\n                    <ModalActions>\n                        <ButtonStrip>\n                            <Button secondary onClick={onClose}>\n                                {i18n.t('Cancel')}\n                            </Button>\n                            <Button primary onClick={saveFilter}>\n                                {i18n.t('Confirm')}\n                            </Button>\n                        </ButtonStrip>\n                    </ModalActions>\n                </Modal>}\n        </>;\n};\n\nFilterDialog.propTypes = {\n  addItemFilter: PropTypes.func,\n  dimension: PropTypes.object,\n  displayNameProperty: PropTypes.string,\n  initiallySelectedItems: PropTypes.object,\n  removeItemFilter: PropTypes.func,\n  onClose: PropTypes.func\n};\nFilterDialog.contextTypes = {\n  d2: PropTypes.object\n};\n\nconst mapStateToProps = state => ({\n  initiallySelectedItems: sGetItemFiltersRoot(state)\n});\n\nexport default connect(mapStateToProps, {\n  addItemFilter: acAddItemFilter,\n  removeItemFilter: acRemoveItemFilter\n})(FilterDialog);","export const SET_SETTINGS = 'SET_SETTINGS';\nexport const ADD_SETTINGS = 'ADD_SETTINGS';\nexport const DEFAULT_SETTINGS = {\n  keyDateFormat: 'yyyy-MM-dd',\n  keyAnalysisRelativePeriod: 'LAST_12_MONTHS',\n  keyAnalysisDigitGroupSeparator: 'SPACE',\n  displayNameProperty: 'displayName',\n  uiLocale: 'en',\n  rootOrganisationUnit: {}\n};\nexport default ((state = DEFAULT_SETTINGS, action) => {\n  switch (action.type) {\n    case SET_SETTINGS:\n      {\n        return Object.assign({}, action.value);\n      }\n\n    case ADD_SETTINGS:\n      {\n        return { ...state,\n          ...action.value\n        };\n      }\n\n    default:\n      return state;\n  }\n}); // Selectors\n\nexport const sGetSettings = state => state.settings;\nexport const sGetSettingsDisplayNameProperty = state => sGetSettings(state).displayNameProperty;\nexport const sGetRootOrgUnit = state => sGetSettings(state).rootOrganisationUnit;\nexport const sGetRelativePeriod = state => sGetSettings(state).keyAnalysisRelativePeriod;\nexport const sGetUiLocale = state => sGetSettings(state).uiLocale;","export const SET_ACTIVE_MODAL_DIMENSION = 'SET_ACTIVE_MODAL_DIMENSION';\nexport const CLEAR_ACTIVE_MODAL_DIMENSION = 'CLEAR_ACTIVE_MODAL_DIMENSION';\nexport const DEFAULT_STATE_ACTIVE_MODAL_DIMENSION = {};\nexport default ((state = DEFAULT_STATE_ACTIVE_MODAL_DIMENSION, action) => {\n  switch (action.type) {\n    case SET_ACTIVE_MODAL_DIMENSION:\n      {\n        return action.value;\n      }\n\n    case CLEAR_ACTIVE_MODAL_DIMENSION:\n      {\n        return DEFAULT_STATE_ACTIVE_MODAL_DIMENSION;\n      }\n\n    default:\n      return state;\n  }\n});\nexport const sGetActiveModalDimension = state => state.activeModalDimension;","import { SET_ACTIVE_MODAL_DIMENSION, CLEAR_ACTIVE_MODAL_DIMENSION } from '../reducers/activeModalDimension';\nexport const acSetActiveModalDimension = value => ({\n  type: SET_ACTIVE_MODAL_DIMENSION,\n  value\n});\nexport const acClearActiveModalDimension = () => ({\n  type: CLEAR_ACTIVE_MODAL_DIMENSION\n});","import React, { useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport isEmpty from 'lodash/isEmpty';\nimport i18n from '@dhis2/d2-i18n';\nimport { DimensionsPanel } from '@dhis2/analytics';\nimport { Button, Popover } from '@dhis2/ui';\nimport FilterDialog from './FilterDialog';\nimport { sGetSettingsDisplayNameProperty } from '../../reducers/settings';\nimport { sGetActiveModalDimension } from '../../reducers/activeModalDimension';\nimport { sGetDimensions } from '../../reducers/dimensions';\nimport { sGetItemFiltersRoot } from '../../reducers/itemFilters';\nimport { acClearActiveModalDimension, acSetActiveModalDimension } from '../../actions/activeModalDimension';\n\nconst FilterSelector = props => {\n  const [showPopover, setShowPopover] = useState(false);\n  const ref = useRef(null);\n\n  const onCloseDialog = () => {\n    setShowPopover(false);\n    props.clearActiveModalDimension();\n  };\n\n  const selectDimension = id => {\n    props.setActiveModalDimension(props.dimensions.find(dimension => dimension.id === id));\n  };\n\n  return <>\n            <span ref={ref}>\n                <Button onClick={() => setShowPopover(true)}>\n                    {i18n.t('Add filter')}\n                    <ArrowDropDownIcon />\n                </Button>\n            </span>\n            {showPopover && <Popover onClickOutside={onCloseDialog} reference={ref} arrow={true} placement=\"bottom-start\">\n                    <DimensionsPanel style={{\n        width: '320px'\n      }} dimensions={props.dimensions} onDimensionClick={selectDimension} selectedIds={Object.keys(props.initiallySelectedItems)} />\n                </Popover>}\n            {!isEmpty(props.dimension) ? <FilterDialog displayNameProperty={props.displayNameProperty} dimension={props.dimension} onClose={onCloseDialog} /> : null}\n        </>;\n};\n\nconst mapStateToProps = state => ({\n  displayNameProperty: sGetSettingsDisplayNameProperty(state),\n  dimension: sGetActiveModalDimension(state),\n  dimensions: sGetDimensions(state),\n  initiallySelectedItems: sGetItemFiltersRoot(state)\n});\n\nFilterSelector.propTypes = {\n  clearActiveModalDimension: PropTypes.func,\n  dimension: PropTypes.object,\n  dimensions: PropTypes.array,\n  displayNameProperty: PropTypes.string,\n  initiallySelectedItems: PropTypes.object,\n  setActiveModalDimension: PropTypes.func\n};\nexport default connect(mapStateToProps, {\n  clearActiveModalDimension: acClearActiveModalDimension,\n  setActiveModalDimension: acSetActiveModalDimension\n})(FilterSelector);","import React, { useState, createRef } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport { Redirect } from 'react-router-dom';\nimport SharingDialog from '@dhis2/d2-ui-sharing-dialog';\nimport Star from '@material-ui/icons/Star';\nimport StarBorder from '@material-ui/icons/StarBorder';\nimport { Button, FlyoutMenu, Popover, MenuItem, colors } from '@dhis2/ui';\nimport { ThreeDots } from '../Item/VisualizationItem/assets/icons';\nimport { orObject } from '../../modules/util';\nimport { tStarDashboard } from '../../actions/dashboards';\nimport { tUpdateShowDescription } from '../../actions/selected';\nimport FilterSelector from '../ItemFilter/FilterSelector';\nimport { sGetSelectedId, sGetSelectedShowDescription } from '../../reducers/selected';\nimport { sGetDashboardById, sGetDashboardItems, EMPTY_DASHBOARD } from '../../reducers/dashboards';\nimport classes from './styles/ViewTitleBar.module.css';\n\nconst ViewTitleBar = (props, context) => {\n  const [moreOptionsIsOpen, setMoreOptionsIsOpen] = useState(false);\n  const [sharingDialogIsOpen, setSharingDialogIsOpen] = useState(false);\n  const [redirectUrl, setRedirectUrl] = useState(null);\n  const {\n    id,\n    name,\n    description,\n    access,\n    style,\n    showDescription,\n    starred,\n    onToggleStarredDashboard,\n    onShowHideDescription\n  } = props;\n\n  const toggleSharingDialog = () => setSharingDialogIsOpen(!sharingDialogIsOpen);\n\n  const toggleMoreOptions = () => setMoreOptionsIsOpen(!moreOptionsIsOpen);\n\n  const printLayout = () => setRedirectUrl(`${id}/printlayout`);\n\n  const printOipp = () => setRedirectUrl(`${id}/printoipp`);\n\n  const titleStyle = Object.assign({}, style.title, {\n    cursor: 'default',\n    userSelect: 'text',\n    top: '7px'\n  });\n  const StarIcon = starred ? Star : StarBorder;\n\n  if (redirectUrl) {\n    return <Redirect to={redirectUrl} />;\n  }\n\n  const showHideDescriptionLabel = showDescription ? i18n.t('Hide description') : i18n.t('Show description');\n\n  const showHideDescription = () => {\n    onShowHideDescription();\n    toggleMoreOptions();\n  };\n\n  const toggleStarredDashboardLabel = starred ? i18n.t('Unstar dashboard') : i18n.t('Star dashboard');\n\n  const toggleStarredDashboard = () => {\n    onToggleStarredDashboard();\n    toggleMoreOptions();\n  };\n\n  const buttonRef = createRef();\n  const userAccess = orObject(access);\n  return <>\n            <div className={classes.titleBar}>\n                <span style={titleStyle}>{name}</span>\n                <div className={classes.actions}>\n                    <div className={classes.titleBarIcon} onClick={onToggleStarredDashboard}>\n                        <StarIcon style={{\n            fill: colors.grey600\n          }} />\n                    </div>\n                    <div className={classes.strip}>\n                        {userAccess.update ? <Link className={classes.editLink} to={`/${id}/edit`}>\n                                <Button>{i18n.t('Edit')}</Button>\n                            </Link> : null}\n                        {userAccess.manage ? <Button onClick={toggleSharingDialog}>\n                                {i18n.t('Share')}\n                            </Button> : null}\n                        <FilterSelector />\n                        <span ref={buttonRef}>\n                            <Button onClick={toggleMoreOptions}>\n                                <ThreeDots />\n                                <span style={{\n                marginLeft: '5px'\n              }}>\n                                    {i18n.t('More')}\n                                </span>\n                            </Button>\n                        </span>\n                    </div>\n                    {moreOptionsIsOpen && <Popover reference={buttonRef} placement=\"bottom-start\" onClickOutside={toggleMoreOptions}>\n                            <FlyoutMenu>\n                                <MenuItem dense label={toggleStarredDashboardLabel} onClick={toggleStarredDashboard} />\n                                <MenuItem dense label={showHideDescriptionLabel} onClick={showHideDescription} />\n                                <MenuItem dense label={i18n.t('Print')}>\n                                    <MenuItem dense label={i18n.t('Dashboard layout')} onClick={printLayout} />\n                                    <MenuItem dense label={i18n.t('One item per page')} onClick={printOipp} />\n                                </MenuItem>\n                            </FlyoutMenu>\n                        </Popover>}\n                </div>\n            </div>\n            {showDescription ? <div className=\"dashboard-description\" style={Object.assign({\n      paddingTop: '5px',\n      paddingBottom: '5px'\n    }, style.description, !description ? {\n      color: '#888'\n    } : {})}>\n                    {description || i18n.t('No description')}\n                </div> : null}\n            {id ? <SharingDialog d2={context.d2} id={id} type=\"dashboard\" open={sharingDialogIsOpen} onRequestClose={toggleSharingDialog} /> : null}\n        </>;\n};\n\nViewTitleBar.propTypes = {\n  access: PropTypes.object,\n  description: PropTypes.string,\n  id: PropTypes.string,\n  name: PropTypes.string,\n  showDescription: PropTypes.bool,\n  starred: PropTypes.bool,\n  style: PropTypes.object,\n  onShowHideDescription: PropTypes.func,\n  onToggleStarredDashboard: PropTypes.func\n};\nViewTitleBar.defaultProps = {\n  name: '',\n  description: '',\n  starred: false,\n  showDescription: false\n};\nViewTitleBar.contextTypes = {\n  d2: PropTypes.object\n};\n\nconst mapStateToProps = state => {\n  const id = sGetSelectedId(state);\n  const dashboard = sGetDashboardById(state, id) || EMPTY_DASHBOARD;\n  return {\n    id,\n    name: dashboard.displayName,\n    description: dashboard.displayDescription,\n    dashboardItems: sGetDashboardItems(state),\n    showDescription: sGetSelectedShowDescription(state),\n    starred: dashboard.starred,\n    access: dashboard.access\n  };\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n  const {\n    id,\n    starred,\n    showDescription\n  } = stateProps;\n  const {\n    dispatch\n  } = dispatchProps;\n  return { ...stateProps,\n    ...ownProps,\n    onToggleStarredDashboard: () => dispatch(tStarDashboard(id, !starred)),\n    onShowHideDescription: () => dispatch(tUpdateShowDescription(!showDescription))\n  };\n};\n\nexport default connect(mapStateToProps, null, mergeProps)(ViewTitleBar);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { colors } from '@dhis2/ui';\nimport EditTitleBar from './EditTitleBar';\nimport ViewTitleBar from './ViewTitleBar';\nimport './TitleBar.css';\nconst style = {\n  title: {\n    position: 'relative',\n    fontSize: 21,\n    fontWeight: 500,\n    color: colors.black,\n    minWidth: 50\n  },\n  description: {\n    fontSize: 14,\n    color: colors.grey800\n  }\n};\n\nconst TitleBar = ({\n  edit\n}) => {\n  return <div className=\"titlebar-wrapper\" style={{\n    padding: '13px 15px 5px 10px'\n  }}>\n            {edit ? <EditTitleBar style={style} /> : <ViewTitleBar style={style} />}\n        </div>;\n};\n\nTitleBar.propTypes = {\n  edit: PropTypes.bool\n};\nexport default TitleBar;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport * as pluginManager from './plugin';\nimport { getBaseUrl, orObject } from '../../../modules/util';\nimport { getGridItemDomId } from '../../ItemGrid/gridUtil';\n\nconst pluginCredentials = d2 => {\n  return {\n    baseUrl: getBaseUrl(d2),\n    auth: d2.Api.getApi().defaultHeaders.Authorization\n  };\n};\n\nclass DefaultPlugin extends Component {\n  pluginCredentials = null;\n\n  constructor(props, context) {\n    super(props);\n    this.d2 = context.d2;\n  }\n\n  shouldPluginReload = prevProps => {\n    // TODO - fix this hack, to handle bug with multiple\n    // rerendering while switching between dashboards.\n    //\n    // To determine if the rendering is happening because of a\n    // dashboard switch, check if the item reference has changed.\n    const reloadAllowed = this.props.item === prevProps.item;\n    const filtersChanged = prevProps.itemFilters !== this.props.itemFilters;\n    const vis = orObject(this.props.visualization);\n    const prevVis = orObject(prevProps.visualization);\n    const visChanged = vis.id !== prevVis.id || vis.activeType !== prevVis.activeType;\n    return reloadAllowed && (visChanged || filtersChanged);\n  };\n  reloadPlugin = prevProps => {\n    if (pluginManager.pluginIsAvailable(this.props.item, this.props.visualization) && this.shouldPluginReload(prevProps)) {\n      if (this.props.activeType !== prevProps.activeType || this.props.itemFilters !== prevProps.itemFilters) {\n        pluginManager.unmount(this.props.item, prevProps.activeType);\n        pluginManager.load(this.props.item, this.props.visualization, {\n          credentials: this.pluginCredentials,\n          activeType: this.props.activeType\n        });\n      }\n    }\n  };\n\n  componentDidMount() {\n    this.pluginCredentials = pluginCredentials(this.d2);\n\n    if (pluginManager.pluginIsAvailable(this.props.item, this.props.visualization)) {\n      pluginManager.load(this.props.item, this.props.visualization, {\n        credentials: this.pluginCredentials,\n        activeType: this.props.activeType,\n        options: this.props.options\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    this.reloadPlugin(prevProps);\n  }\n\n  componentWillUnmount() {\n    if (pluginManager.pluginIsAvailable(this.props.item, this.props.visualization)) {\n      pluginManager.unmount(this.props.item, this.props.activeType);\n    }\n  }\n\n  render() {\n    const {\n      classes,\n      item,\n      visualization,\n      style\n    } = this.props;\n    const pluginIsAvailable = pluginManager.pluginIsAvailable(item, visualization);\n    return pluginIsAvailable ? <div id={getGridItemDomId(item.id)} style={style} /> : <div className={classes.textDiv}>\n                {i18n.t('Unable to load the plugin for this item')}\n            </div>;\n  }\n\n}\n\nDefaultPlugin.contextTypes = {\n  d2: PropTypes.object\n};\nDefaultPlugin.propTypes = {\n  activeType: PropTypes.string,\n  classes: PropTypes.object,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object,\n  options: PropTypes.object,\n  style: PropTypes.object,\n  visualization: PropTypes.object\n};\nDefaultPlugin.defaultProps = {\n  style: {},\n  item: {},\n  itemFilters: {},\n  options: {},\n  visualization: {}\n};\nexport default DefaultPlugin;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Warning } from './assets/icons';\nimport classes from './styles/FatalErrorBoundary.module.css';\n\nclass FatalErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      errorFound: false\n    };\n  }\n\n  componentDidCatch(error, info) {\n    this.setState({\n      errorFound: true\n    });\n    console.log('error: ', error);\n    console.log('info: ', info);\n  }\n\n  render() {\n    if (this.state.errorFound) {\n      return <p className={classes.container}>\n                    <span className={classes.icon}>\n                        <Warning />\n                    </span>\n                    <span className={classes.message}>\n                        {i18n.t('There was a problem loading this dashboard item')}\n                    </span>\n                </p>;\n    }\n\n    return this.props.children;\n  }\n\n}\n\nFatalErrorBoundary.propTypes = {\n  children: PropTypes.node\n};\nexport default FatalErrorBoundary;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classes from './styles/ItemHeader.module.css';\n\nconst ViewItemActions = ({\n  actionButtons\n}) => {\n  return actionButtons ? <div className={classes.itemActionsWrap}>{actionButtons}</div> : null;\n};\n\nViewItemActions.propTypes = {\n  actionButtons: PropTypes.node\n};\nexport default ViewItemActions;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { colors } from '@dhis2/ui';\nimport classes from './styles/DeleteItemButton.module.css';\n\nconst DeleteItemButton = ({\n  onClick\n}) => <button type=\"button\" className={classes.deleteItemButton} onClick={onClick} title={i18n.t(`Delete item`)}>\n        <DeleteIcon style={{\n    fill: colors.red500\n  }} />\n    </button>;\n\nDeleteItemButton.propTypes = {\n  onClick: PropTypes.func\n};\nexport default DeleteItemButton;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport DeleteItemButton from './DeleteItemButton';\nimport { acRemoveDashboardItem } from '../../../actions/editDashboard';\nimport classes from './styles/ItemHeader.module.css';\n\nconst EditItemActions = ({\n  itemId,\n  acRemoveDashboardItem\n}) => {\n  const handleDeleteItem = () => acRemoveDashboardItem(itemId);\n\n  return <div className={classes.itemActionsWrap}>\n            <DeleteItemButton onClick={handleDeleteItem} />\n        </div>;\n};\n\nEditItemActions.propTypes = {\n  acRemoveDashboardItem: PropTypes.func,\n  itemId: PropTypes.string\n};\nconst mapDispatchToProps = {\n  acRemoveDashboardItem\n};\nexport default connect(null, mapDispatchToProps)(EditItemActions);","import React from 'react';\nimport { colors } from '@dhis2/ui';\n\nconst WarningIcon = () => <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" fill={colors.grey600}>\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z\" />\n    </svg>;\n\nexport default WarningIcon;","import React from 'react';\nimport { Tooltip } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport InfoIcon from '../../../icons/Info';\nimport classes from './styles/PrintItemInfo.module.css';\n\nconst PrintWarning = () => <div className={classes.warning}>\n        <Tooltip content={i18n.t('This item has been shortened to fit on one page')} placement=\"bottom\">\n            <InfoIcon />\n        </Tooltip>\n    </div>;\n\nexport default PrintWarning;","export const EDIT = 'edit';\nexport const NEW = 'new';\nexport const VIEW = 'view';\nexport const PRINT = 'print';\nexport const PRINT_LAYOUT = 'print-layout';\nexport const isEditMode = mode => [EDIT, NEW].includes(mode);\nexport const isPrintMode = mode => [PRINT, PRINT_LAYOUT].includes(mode);\nexport const isViewMode = mode => mode === VIEW;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ViewItemActions from './ViewItemActions';\nimport EditItemActions from './EditItemActions';\nimport PrintItemInfo from './PrintItemInfo';\nimport { VIEW, EDIT, PRINT_LAYOUT } from '../../Dashboard/dashboardModes';\nimport classes from './styles/ItemHeader.module.css';\n\nconst getItemActionsMap = isShortened => {\n  return {\n    [VIEW]: ViewItemActions,\n    [EDIT]: EditItemActions,\n    [PRINT_LAYOUT]: isShortened ? PrintItemInfo : null\n  };\n}; // This is the margin-top + margin-bottom defined in the css file\n\n\nexport const HEADER_MARGIN_HEIGHT = 12;\nconst ItemHeader = React.forwardRef(({\n  dashboardMode,\n  title,\n  isShortened,\n  ...rest\n}, ref) => {\n  const Actions = getItemActionsMap(isShortened)[dashboardMode];\n  return <div className={classes.itemHeaderWrap} ref={ref}>\n                <p className={classes.itemTitle}>{title}</p>\n                {Actions ? <Actions {...rest} /> : null}\n            </div>;\n});\nItemHeader.displayName = 'ItemHeader';\nItemHeader.propTypes = {\n  dashboardMode: PropTypes.string,\n  isShortened: PropTypes.bool,\n  title: PropTypes.string\n};\nexport default connect(null, null, null, {\n  forwardRef: true\n})(ItemHeader);","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { isSingleValue, isYearOverYear, VIS_TYPE_GAUGE, VIS_TYPE_PIE } from '@dhis2/analytics';\nimport { Button, Menu, MenuItem, Divider, colors } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport Popover from '@material-ui/core/Popover';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport { ThreeDots, SpeechBubble } from './assets/icons';\nimport { pluginIsAvailable, getLink } from './plugin';\nimport { CHART, MAP, REPORT_TABLE, EVENT_CHART, EVENT_REPORT, isTrackerDomainType, hasMapView, getAppName } from '../../../modules/itemTypes';\nconst iconFill = {\n  fill: colors.grey600\n};\n\nconst ItemHeaderButtons = props => {\n  const [anchorEl, setAnchorEl] = useState(null);\n  const {\n    item,\n    visualization,\n    onSelectActiveType,\n    d2,\n    activeType\n  } = props;\n  const isTrackerType = isTrackerDomainType(item.type);\n\n  const onViewTable = () => {\n    handleClose();\n    onSelectActiveType(isTrackerType ? EVENT_REPORT : REPORT_TABLE);\n  };\n\n  const onViewChart = () => {\n    handleClose();\n    onSelectActiveType(isTrackerType ? EVENT_CHART : CHART);\n  };\n\n  const onViewMap = () => {\n    handleClose();\n    onSelectActiveType(MAP);\n  };\n\n  const itemHasMapView = () => hasMapView(item.type);\n\n  const handleMenuClick = (_, event) => setAnchorEl(event.currentTarget);\n\n  const handleInterpretationClick = () => {\n    props.onToggleFooter();\n\n    if (anchorEl !== null) {\n      handleClose();\n    }\n  };\n\n  const handleClose = () => setAnchorEl(null);\n\n  const type = visualization.type || item.type;\n  const canViewAs = !isSingleValue(type) && !isYearOverYear(type) && type !== VIS_TYPE_GAUGE && type !== VIS_TYPE_PIE;\n  const interpretationMenuLabel = props.activeFooter ? i18n.t(`Hide interpretations and details`) : i18n.t(`Show interpretations and details`);\n\n  const ViewAsMenuItems = () => <>\n            {activeType !== CHART && activeType !== EVENT_CHART && <MenuItem dense label={i18n.t('View as Chart')} onClick={onViewChart} icon={<ChartIcon style={iconFill} />} />}\n            {activeType !== REPORT_TABLE && activeType !== EVENT_REPORT && <MenuItem dense label={i18n.t('View as Table')} onClick={onViewTable} icon={<TableIcon style={iconFill} />} />}\n            {itemHasMapView() && activeType !== MAP && <MenuItem dense label={i18n.t('View as Map')} onClick={onViewMap} icon={<MapIcon style={iconFill} />} />}\n        </>;\n\n  return pluginIsAvailable(item, visualization) ? <>\n            <Button small secondary onClick={handleMenuClick}>\n                <ThreeDots />\n            </Button>\n            {anchorEl && <Popover open={Boolean(anchorEl)} onClose={handleClose} anchorEl={anchorEl}>\n                    <Menu>\n                        {canViewAs && <>\n                                <ViewAsMenuItems />\n                                <Divider />\n                            </>}\n                        <MenuItem dense icon={<LaunchIcon style={{\n          fill: '#6e7a8a'\n        }} />} label={i18n.t('Open in {{appName}} app', {\n          appName: getAppName(item.type)\n        })} href={getLink(item, d2)} target=\"_blank\" />\n                        <MenuItem dense icon={<SpeechBubble />} label={interpretationMenuLabel} onClick={handleInterpretationClick} />\n                    </Menu>\n                </Popover>}\n        </> : null;\n};\n\nItemHeaderButtons.propTypes = {\n  activeFooter: PropTypes.bool,\n  activeType: PropTypes.string,\n  d2: PropTypes.object,\n  item: PropTypes.object,\n  visualization: PropTypes.object,\n  onSelectActiveType: PropTypes.func,\n  onToggleFooter: PropTypes.func\n};\nexport default ItemHeaderButtons;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { colors } from '@dhis2/ui';\nimport { getId } from './plugin';\nimport InterpretationsComponent from '@dhis2/d2-ui-interpretations';\nconst style = {\n  scrollContainer: {\n    overflowY: 'auto',\n    height: '340px'\n  },\n  line: {\n    margin: '-1px 0px 0px',\n    height: '1px',\n    border: 'none',\n    backgroundColor: colors.grey100\n  }\n};\n\nclass ItemFooter extends Component {\n  render() {\n    const objectId = getId(this.props.item);\n    return <div className=\"dashboard-item-footer\">\n                <hr style={style.line} />\n                <div style={style.scrollContainer}>\n                    <InterpretationsComponent d2={this.context.d2} item={this.props.item} type={this.props.item.type.toLowerCase()} id={objectId} appName=\"dashboard\" />\n                </div>\n            </div>;\n  }\n\n}\n\nItemFooter.contextTypes = {\n  d2: PropTypes.object.isRequired\n};\nItemFooter.propTypes = {\n  item: PropTypes.object.isRequired\n};\nexport default ItemFooter;","import React from 'react';\nimport { CircularLoader } from '@dhis2/ui';\nimport classes from './styles/LoadingMask.module.css';\n\nconst LoadingMask = () => {\n  return <div className={classes.center}>\n            <CircularLoader />\n        </div>;\n};\n\nexport default LoadingMask;","// Note that this ignores discrepancies in 'this', so shouldn't be used with bound functions\n// This is useful instead of lodash/memoize when we only need to memoize a single value\n// Inspiration: https://github.com/alexreardon/memoize-one\nconst memoizeOne = fn => {\n  let lastArgs = undefined;\n  let lastValue = undefined;\n  return (...args) => {\n    if (lastArgs && args.length === lastArgs.length && args.every((arg, i) => arg === lastArgs[i])) {\n      return lastValue;\n    }\n\n    lastArgs = args;\n    lastValue = fn(...args);\n    return lastValue;\n  };\n};\n\nexport default memoizeOne;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport uniqueId from 'lodash/uniqueId';\nimport VisualizationPlugin from '@dhis2/data-visualizer-plugin';\nimport i18n from '@dhis2/d2-i18n';\nimport DefaultPlugin from './DefaultPlugin';\nimport FatalErrorBoundary from './FatalErrorBoundary';\nimport ItemHeader, { HEADER_MARGIN_HEIGHT } from '../ItemHeader/ItemHeader';\nimport ItemHeaderButtons from './ItemHeaderButtons';\nimport ItemFooter from './ItemFooter';\nimport LoadingMask from './LoadingMask';\nimport * as pluginManager from './plugin';\nimport { sGetVisualization } from '../../../reducers/visualizations';\nimport { sGetSelectedItemActiveType } from '../../../reducers/selected';\nimport { sGetIsEditing } from '../../../reducers/editDashboard';\nimport { sGetItemFiltersRoot, DEFAULT_STATE_ITEM_FILTERS } from '../../../reducers/itemFilters';\nimport { acAddVisualization } from '../../../actions/visualizations';\nimport { acSetSelectedItemActiveType } from '../../../actions/selected';\nimport { VISUALIZATION, MAP, CHART, REPORT_TABLE } from '../../../modules/itemTypes';\nimport memoizeOne from '../../../modules/memoizeOne';\nimport { isEditMode, isPrintMode, isViewMode } from '../../Dashboard/dashboardModes';\nimport { ITEM_CONTENT_PADDING_BOTTOM } from '../../ItemGrid/ItemGrid';\nimport classes from './styles/Item.module.css';\nexport class Item extends Component {\n  state = {\n    showFooter: false,\n    configLoaded: false,\n    pluginIsLoaded: false\n  };\n\n  constructor(props, context) {\n    super(props);\n    this.d2 = context.d2;\n    this.contentRef = React.createRef();\n    this.headerRef = React.createRef();\n    this.memoizedApplyFilters = memoizeOne(this.applyFilters);\n    this.memoizedGetVisualizationConfig = memoizeOne(pluginManager.getVisualizationConfig);\n    this.memoizedGetContentStyle = memoizeOne(this.getContentStyle);\n  }\n\n  async componentDidMount() {\n    this.props.updateVisualization( // TODO do not call fetch on the pluginManager, do it here as the manager will eventually be removed...\n    await pluginManager.fetch(this.props.item));\n    this.setState({\n      configLoaded: true\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.pluginIsLoaded && (prevProps.visualization !== this.props.visualization || prevProps.itemFilters !== this.props.itemFilters)) {\n      this.setState({\n        pluginIsLoaded: false\n      });\n    }\n  }\n\n  applyFilters = (visualization, filters) => {\n    if (!Object.keys(filters).length) {\n      return visualization;\n    } // deep clone objects in filters to avoid changing the visualization in the Redux store\n\n\n    const visRows = visualization.rows.map(obj => ({ ...obj\n    }));\n    const visColumns = visualization.columns.map(obj => ({ ...obj\n    }));\n    const visFilters = visualization.filters.map(obj => ({ ...obj\n    }));\n    Object.keys(filters).forEach(dimensionId => {\n      if (filters[dimensionId]) {\n        let dimensionFound = false;\n        [visRows, visColumns, visFilters].forEach(dimensionObjects => dimensionObjects.filter(obj => obj.dimension === dimensionId).forEach(obj => {\n          dimensionFound = true;\n          obj.items = filters[dimensionId];\n        })); // add dimension to filters if not already present elsewhere\n\n        if (!dimensionFound) {\n          visFilters.push({\n            dimension: dimensionId,\n            items: filters[dimensionId]\n          });\n        }\n      }\n    });\n    return { ...visualization,\n      rows: visRows,\n      columns: visColumns,\n      filters: visFilters\n    };\n  };\n  getUniqueKey = memoizeOne(() => uniqueId());\n  pluginCredentials = null;\n  getPluginComponent = () => {\n    const activeType = this.getActiveType();\n    const visualization = this.memoizedGetVisualizationConfig(this.props.visualization, this.props.item.type, activeType);\n\n    if (!visualization) {\n      return <div className={classes.textDiv}>\n                    {i18n.t('No data to display')}\n                </div>;\n    }\n\n    const calculatedHeight = this.props.item.originalHeight - this.headerRef.current.clientHeight - HEADER_MARGIN_HEIGHT - ITEM_CONTENT_PADDING_BOTTOM;\n    const props = { ...this.props,\n      activeType,\n      visualization,\n      classes,\n      style: this.memoizedGetContentStyle(calculatedHeight, this.contentRef ? this.contentRef.offsetHeight : null, isEditMode(this.props.dashboardMode) || isPrintMode(this.props.dashboardMode))\n    };\n\n    switch (activeType) {\n      case VISUALIZATION:\n      case CHART:\n      case REPORT_TABLE:\n        {\n          return <>\n                        {!this.state.pluginIsLoaded && <div style={props.style}>\n                                <LoadingMask />\n                            </div>}\n                        <VisualizationPlugin d2={this.d2} visualization={this.memoizedApplyFilters(visualization, props.itemFilters)} onLoadingComplete={this.onLoadingComplete} forDashboard={true} style={props.style} />\n                    </>;\n        }\n\n      case MAP:\n        {\n          if (props.item.type === MAP) {\n            // apply filters only to thematic and event layers\n            // for maps AO\n            const mapViews = props.visualization.mapViews.map(obj => {\n              if (obj.layer.includes('thematic') || obj.layer.includes('event')) {\n                return this.memoizedApplyFilters(obj, props.itemFilters);\n              }\n\n              return obj;\n            });\n            props.visualization = { ...props.visualization,\n              mapViews\n            };\n          } else {\n            // this is the case of a non map AO passed to the maps plugin\n            // due to a visualization type switch in dashboard item\n            // maps plugin takes care of converting the AO to a suitable format\n            props.visualization = this.memoizedApplyFilters(props.visualization, props.itemFilters);\n          }\n\n          props.options = { ...props.options,\n            hideTitle: true\n          };\n          return <DefaultPlugin {...props} />;\n        }\n\n      default:\n        {\n          props.visualization = this.memoizedApplyFilters(props.visualization, props.itemFilters);\n          return <DefaultPlugin {...props} />;\n        }\n    }\n  };\n  onLoadingComplete = () => {\n    this.setState({\n      pluginIsLoaded: true\n    });\n  };\n  onToggleFooter = () => {\n    this.setState({\n      showFooter: !this.state.showFooter\n    }, this.props.onToggleItemExpanded(this.props.item.id));\n  };\n  selectActiveType = type => {\n    type !== this.getActiveType() && this.props.selectActiveType(this.props.item.id, type);\n  };\n  getActiveType = () => {\n    if (this.props.isEditing) {\n      return this.props.item.type;\n    }\n\n    return this.props.activeType || this.props.item.type;\n  };\n  pluginIsAvailable = () => pluginManager.pluginIsAvailable(this.props.item, this.props.visualization);\n  getContentStyle = (calculatedHeight, measuredHeight, preferMeasured) => {\n    const height = preferMeasured ? measuredHeight || calculatedHeight : calculatedHeight;\n    return {\n      height\n    };\n  };\n\n  render() {\n    const {\n      item,\n      dashboardMode,\n      itemFilters\n    } = this.props;\n    const {\n      showFooter\n    } = this.state;\n    const actionButtons = <ItemHeaderButtons item={item} visualization={this.props.visualization} onSelectActiveType={this.selectActiveType} onToggleFooter={this.onToggleFooter} d2={this.d2} activeType={this.getActiveType()} activeFooter={this.state.showFooter} />;\n    return <>\n                <ItemHeader title={pluginManager.getName(item)} itemId={item.id} actionButtons={actionButtons} ref={this.headerRef} dashboardMode={dashboardMode} isShortened={item.shortened} />\n                <FatalErrorBoundary>\n                    <div key={this.getUniqueKey(itemFilters)} className=\"dashboard-item-content\" ref={ref => this.contentRef = ref}>\n                        {this.state.configLoaded && this.getPluginComponent()}\n                    </div>\n                </FatalErrorBoundary>\n                {isViewMode(dashboardMode) && showFooter ? <ItemFooter item={item} /> : null}\n            </>;\n  }\n\n}\nItem.contextTypes = {\n  d2: PropTypes.object\n};\nItem.propTypes = {\n  activeType: PropTypes.string,\n  dashboardMode: PropTypes.string,\n  isEditing: PropTypes.bool,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object,\n  selectActiveType: PropTypes.func,\n  updateVisualization: PropTypes.func,\n  visualization: PropTypes.object,\n  onToggleItemExpanded: PropTypes.func\n};\nItem.defaultProps = {\n  item: {},\n  onToggleItemExpanded: Function.prototype,\n  visualization: {}\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const itemFilters = !isEditMode(ownProps.dashboardMode) ? sGetItemFiltersRoot(state) : DEFAULT_STATE_ITEM_FILTERS;\n  return {\n    activeType: sGetSelectedItemActiveType(state, ownProps.item?.id),\n    isEditing: sGetIsEditing(state),\n    itemFilters,\n    visualization: sGetVisualization(state, pluginManager.extractFavorite(ownProps.item).id)\n  };\n};\n\nconst mapDispatchToProps = {\n  selectActiveType: acSetSelectedItemActiveType,\n  updateVisualization: acAddVisualization\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Item);","import React from 'react';\nimport { colors } from '@dhis2/ui';\nconst style = {\n  backgroundColor: colors.grey200,\n  border: 'none',\n  height: '1px',\n  margin: '0px 0px 5px 0px'\n};\n\nconst Line = () => <hr style={style} />;\n\nexport default Line;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { colors } from '@dhis2/ui';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport Line from '../../../widgets/Line';\nimport { sGetMessagesRoot } from '../../../reducers/messages';\nimport { formatDate } from '../../../modules/util';\nimport { isViewMode } from '../../Dashboard/dashboardModes';\nimport './MessagesItem.css';\nconst PRIVATE = 'PRIVATE';\nconst messageTypes = {\n  [PRIVATE]: 'Private',\n  VALIDATION_RESULT: 'Validation',\n  TICKET: 'Ticket',\n  SYSTEM: 'System'\n};\nconst style = {\n  list: {\n    listStyleType: 'none',\n    paddingLeft: '0px'\n  },\n  seeAll: {\n    textAlign: 'center',\n    fontSize: '13px',\n    marginBottom: '5px'\n  },\n  sender: {\n    fontSize: '13px',\n    lineHeight: '15px',\n    margin: 0,\n    color: colors.grey800\n  },\n  snippet: {\n    color: colors.grey800,\n    fontSize: '13px',\n    lineHeight: '15px',\n    maxHeight: '30px',\n    overflow: 'hidden'\n  }\n};\n\nclass MessagesItem extends Component {\n  state = {\n    uiLocale: ''\n  };\n\n  async componentDidMount() {\n    const uiLocale = await this.context.d2.currentUser.userSettings.get('keyUiLocale');\n    this.setState({\n      uiLocale\n    });\n  }\n\n  getMessageHref = msg => {\n    const msgIdentifier = msg ? `#/${msg.messageType}/${msg.id}` : '';\n    return `${this.context.baseUrl}/dhis-web-messaging/${msgIdentifier}`;\n  };\n  getMessageSender = msg => {\n    const latestMsg = msg.messages.slice(-1)[0];\n    return latestMsg.sender ? latestMsg.sender.displayName : '';\n  };\n  getMessageItems = () => {\n    const modeClass = isViewMode(this.props.dashboardMode) ? 'view' : null;\n    return this.props.messages.map(msg => {\n      const redirectToMsg = () => {\n        if (isViewMode(this.props.dashboardMode)) {\n          document.location.href = this.getMessageHref(msg);\n        }\n      };\n\n      const sender = msg.messageType === PRIVATE ? this.getMessageSender(msg) : messageTypes[msg.messageType];\n      const readClass = !msg.read ? 'unread' : null;\n      const latestMsg = msg.messages.slice(-1)[0];\n      const msgDate = latestMsg.lastUpdated;\n      return <li className={`message-item ${modeClass}`} key={msg.id} onClick={redirectToMsg}>\n                    <p className={`message-title ${readClass}`}>\n                        {msg.displayName} ({msg.messageCount})\n                    </p>\n                    <p style={style.sender}>\n                        {sender} - {formatDate(msgDate, this.state.uiLocale)}\n                    </p>\n                    <p style={style.snippet}>{latestMsg.text}</p>\n                </li>;\n    });\n  };\n\n  render() {\n    return <>\n                <ItemHeader title={i18n.t('Messages')} itemId={this.props.item.id} dashboardMode={this.props.dashboardMode} isShortened={this.props.item.shortened} />\n                <Line />\n                {this.props.messages.length > 0 && <div className=\"dashboard-item-content\">\n                        <ul style={style.list}>{this.getMessageItems()}</ul>\n                        <div style={style.seeAll}>\n                            <a href={this.getMessageHref()}>\n                                {i18n.t('See all messages')}\n                            </a>\n                        </div>\n                    </div>}\n            </>;\n  }\n\n}\n\nMessagesItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  messages: PropTypes.array\n};\nMessagesItem.contextTypes = {\n  d2: PropTypes.object,\n  baseUrl: PropTypes.string\n};\n\nconst mapStateToProps = state => {\n  return {\n    messages: Object.values(sGetMessagesRoot(state))\n  };\n};\n\nconst MessagesContainer = connect(mapStateToProps, null)(MessagesItem);\nexport default MessagesContainer;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nconst NotSupportedItem = props => <>\n        <ItemHeader title={i18n.t('Item type \"{{type}}\" not supported', {\n    type: props.item.type\n  })} itemId={props.item.id} dashboardMode={props.dashboardMode} isShortened={props.item.shortened} />\n        <div style={{\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '90%'\n  }}>\n            <NotInterestedIcon style={{\n      width: 100,\n      height: 100,\n      align: 'center'\n    }} color=\"disabled\" />\n        </div>\n    </>;\n\nNotSupportedItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object\n};\nexport default NotSupportedItem;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst DescriptionIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill={colors.grey500}>\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M14 2H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6zm2 16H8v-2h8v2zm0-4H8v-2h8v2zm-3-5V3.5L18.5 9H13z\" />\n    </svg>;\n\nDescriptionIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default DescriptionIcon;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst DeleteIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill={colors.red500}>\n        <path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>;\n\nDeleteIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default DeleteIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { colors } from '@dhis2/ui';\nimport DescriptionIcon from '../../../icons/Description';\nimport DeleteIcon from '../../../icons/Delete';\nimport Line from '../../../widgets/Line';\nimport { itemTypeMap, getItemUrl } from '../../../modules/itemTypes';\nimport { orArray } from '../../../modules/util';\nimport { tRemoveListItemContent } from './actions';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport { isEditMode } from '../../Dashboard/dashboardModes';\nimport classes from './Item.module.css';\n\nconst getItemTitle = item => itemTypeMap[item.type].pluralTitle;\n\nconst getContentItems = item => orArray(item[itemTypeMap[item.type].propName]).filter((item, index, array) => array.findIndex(el => el.id === item.id) === index);\n\nconst ListItem = (props, context) => {\n  const {\n    item,\n    dashboardMode,\n    tRemoveListItemContent\n  } = props;\n  const contentItems = getContentItems(item);\n\n  const getLink = contentItem => {\n    const deleteButton = <button className={classes.deletebutton} onClick={() => tRemoveListItemContent(item, contentItem)}>\n                <DeleteIcon className={classes.deleteicon} />\n            </button>;\n    return <>\n                <a className={classes.link} style={{\n        color: colors.grey900\n      }} href={getItemUrl(item.type, contentItem, context.d2)}>\n                    {contentItem.name}\n                </a>\n                {isEditMode(dashboardMode) ? deleteButton : null}\n            </>;\n  };\n\n  return <>\n            <ItemHeader title={getItemTitle(item)} itemId={item.id} dashboardMode={dashboardMode} isShortened={item.shortened} />\n            <Line />\n            <div className=\"dashboard-item-content\">\n                <ul className={classes.list}>\n                    {contentItems.map(contentItem => <li className={classes.item} key={contentItem.id}>\n                            <DescriptionIcon className={classes.itemicon} />\n                            {getLink(contentItem)}\n                        </li>)}\n                </ul>\n            </div>\n        </>;\n};\n\nListItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  tRemoveListItemContent: PropTypes.func\n};\nListItem.contextTypes = {\n  d2: PropTypes.object\n};\nexport default connect(null, {\n  tRemoveListItemContent\n})(ListItem);","import { acUpdateDashboardItem, acRemoveDashboardItem } from '../../../actions/editDashboard';\nimport { itemTypeMap } from '../../../modules/itemTypes';\nexport const tRemoveListItemContent = (dashboardItem, content) => dispatch => {\n  const listItemType = itemTypeMap[dashboardItem.type].propName;\n  const newContent = dashboardItem[listItemType].filter(item => item.id !== content.id);\n\n  if (newContent.length) {\n    dashboardItem[listItemType] = newContent;\n    dispatch(acUpdateDashboardItem(dashboardItem));\n  } else {\n    dispatch(acRemoveDashboardItem(dashboardItem));\n  }\n};","/** @module reducers/editDashboard */\nimport update from 'immutability-helper';\nimport isEmpty from 'lodash/isEmpty';\nimport { orArray } from '../modules/util';\nexport const SET_PRINT_DASHBOARD = 'SET_PRINT_DASHBOARD';\nexport const CLEAR_PRINT_DASHBOARD = 'CLEAR_PRINT_DASHBOARD';\nexport const ADD_PRINT_DASHBOARD_ITEM = 'ADD_PRINT_DASHBOARD_ITEM';\nexport const SET_PRINT_DASHBOARD_LAYOUT = 'SET_PRINT_DASHBOARD_LAYOUT';\nexport const REMOVE_PRINT_DASHBOARD_ITEM = 'REMOVE_PRINT_DASHBOARD_ITEM';\nexport const UPDATE_PRINT_DASHBOARD_ITEM = 'UPDATE_PRINT_DASHBOARD_ITEM';\nexport const DEFAULT_STATE_PRINT_DASHBOARD = {};\nconst DEFAULT_DASHBOARD_ITEMS = [];\nexport const NEW_PRINT_DASHBOARD_STATE = {\n  id: '',\n  name: '',\n  access: {},\n  description: '',\n  dashboardItems: DEFAULT_DASHBOARD_ITEMS\n};\nexport default ((state = DEFAULT_STATE_PRINT_DASHBOARD, action) => {\n  switch (action.type) {\n    case SET_PRINT_DASHBOARD:\n      {\n        const newState = {};\n        Object.keys(NEW_PRINT_DASHBOARD_STATE).map(k => newState[k] = action.value[k]);\n        return newState;\n      }\n\n    case CLEAR_PRINT_DASHBOARD:\n      return DEFAULT_STATE_PRINT_DASHBOARD;\n\n    case ADD_PRINT_DASHBOARD_ITEM:\n      if (!action.value.position) {\n        return update(state, {\n          dashboardItems: {\n            $unshift: [action.value]\n          }\n        });\n      }\n\n      return update(state, {\n        dashboardItems: {\n          $splice: [[parseInt(action.value.position), 0, action.value]]\n        }\n      });\n\n    case REMOVE_PRINT_DASHBOARD_ITEM:\n      {\n        const idToRemove = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === idToRemove);\n\n        if (dashboardItemIndex > -1) {\n          return update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1]]\n            }\n          });\n        }\n\n        return state;\n      }\n\n    case UPDATE_PRINT_DASHBOARD_ITEM:\n      {\n        const dashboardItem = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === dashboardItem.id);\n\n        if (dashboardItemIndex > -1) {\n          const newState = update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1, Object.assign({}, dashboardItem)]]\n            }\n          });\n          return newState;\n        }\n\n        return state;\n      }\n\n    case SET_PRINT_DASHBOARD_LAYOUT:\n      {\n        const stateItems = orArray(state.dashboardItems);\n        let layoutHasChanged = false;\n        const newStateItems = action.value.map(({\n          x,\n          y,\n          w,\n          h,\n          i\n        }) => {\n          const stateItem = stateItems.find(si => si.id === i);\n\n          if (!(stateItem.x === x && stateItem.y === y && stateItem.w === w && stateItem.h === h)) {\n            layoutHasChanged = true;\n            return Object.assign({}, stateItem, {\n              w,\n              h,\n              x,\n              y\n            });\n          }\n\n          return stateItem;\n        });\n        return layoutHasChanged ? { ...state,\n          dashboardItems: newStateItems\n        } : state;\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetPrintDashboardRoot = state => state.printDashboard; // selectors\n\nexport const sGetIsPrinting = state => !isEmpty(state.printDashboard);\nexport const sGetPrintDashboardName = state => sGetPrintDashboardRoot(state).name;\nexport const sGetPrintDashboardDescription = state => sGetPrintDashboardRoot(state).description;\nexport const sGetPrintDashboardItems = state => {\n  return sGetPrintDashboardRoot(state)?.dashboardItems || DEFAULT_DASHBOARD_ITEMS;\n};","import React from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport Input from '@material-ui/core/Input';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport PrintItemInfo from '../ItemHeader/PrintItemInfo';\nimport Line from '../../../widgets/Line';\nimport { Parser as RichTextParser, Editor as RichTextEditor } from '@dhis2/d2-ui-rich-text';\nimport { acUpdateDashboardItem } from '../../../actions/editDashboard';\nimport { sGetEditDashboardItems } from '../../../reducers/editDashboard';\nimport { sGetDashboardItems } from '../../../reducers/dashboards';\nimport { sGetIsPrinting, sGetPrintDashboardItems } from '../../../reducers/printDashboard';\nimport { isEditMode, PRINT_LAYOUT } from '../../Dashboard/dashboardModes';\nconst style = {\n  textDiv: {\n    padding: '10px',\n    whiteSpace: 'pre-line',\n    lineHeight: '20px'\n  },\n  textField: {\n    fontSize: '14px',\n    fontStretch: 'normal',\n    width: '90%',\n    margin: '0 auto',\n    display: 'block',\n    lineHeight: '24px'\n  },\n  container: {\n    marginBottom: '20px',\n    marginTop: '20px'\n  }\n};\n\nconst TextItem = props => {\n  const {\n    item,\n    dashboardMode,\n    text,\n    acUpdateDashboardItem\n  } = props;\n\n  const onChangeText = event => {\n    const updatedItem = { ...item,\n      text: event.target.value\n    };\n    acUpdateDashboardItem(updatedItem);\n  };\n\n  const viewItem = () => {\n    const textDivStyle = Object.assign({}, style.textField, style.textDiv);\n    return <div className=\"dashboard-item-content\" style={style.container}>\n                <RichTextParser style={textDivStyle}>{text}</RichTextParser>\n            </div>;\n  };\n\n  const editItem = () => {\n    return <>\n                <ItemHeader title={i18n.t('Text item')} itemId={item.id} dashboardMode={dashboardMode} />\n                <Line />\n                <div className=\"dashboard-item-content\">\n                    <RichTextEditor onEdit={onChangeText}>\n                        <Input value={text} multiline fullWidth style={style.textField} placeholder={i18n.t('Add text here')} onChange={onChangeText} />\n                    </RichTextEditor>\n                </div>\n            </>;\n  };\n\n  const printItem = () => {\n    const textDivStyle = Object.assign({}, style.textField, style.textDiv);\n    return <>\n                {props.item.shortened ? <PrintItemInfo /> : null}\n                <div className=\"dashboard-item-content\" style={style.container}>\n                    <RichTextParser style={textDivStyle}>{text}</RichTextParser>\n                </div>\n            </>;\n  };\n\n  let textItem;\n\n  if (isEditMode(dashboardMode)) {\n    textItem = editItem;\n  } else if (dashboardMode === PRINT_LAYOUT) {\n    textItem = printItem;\n  } else {\n    textItem = viewItem;\n  }\n\n  return <>{textItem()}</>;\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const isPrintPreview = sGetIsPrinting(state);\n  let items;\n\n  if (isPrintPreview) {\n    items = sGetPrintDashboardItems(state);\n  } else if (isEditMode(ownProps.dashboardMode)) {\n    items = sGetEditDashboardItems(state);\n  } else {\n    items = sGetDashboardItems(state);\n  }\n\n  const item = items.find(item => item.id === ownProps.item.id);\n  return {\n    text: item ? item.text : ''\n  };\n};\n\nTextItem.propTypes = {\n  acUpdateDashboardItem: PropTypes.func,\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  text: PropTypes.string\n};\nexport default connect(mapStateToProps, {\n  acUpdateDashboardItem\n})(TextItem);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport Line from '../../../widgets/Line';\nimport { FILTER_ORG_UNIT } from '../../../actions/itemFilters';\nimport { sGetItemFiltersRoot, DEFAULT_STATE_ITEM_FILTERS } from '../../../reducers/itemFilters';\nimport { isEditMode } from '../../Dashboard/dashboardModes';\n\nconst getIframeSrc = (appDetails, item, itemFilters) => {\n  let iframeSrc = `${appDetails.launchUrl}?dashboardItemId=${item.id}`;\n\n  if (itemFilters[FILTER_ORG_UNIT] && itemFilters[FILTER_ORG_UNIT].length) {\n    const ouIds = itemFilters[FILTER_ORG_UNIT].map(ouFilter => ouFilter.path.split('/').slice(-1)[0]);\n    iframeSrc += `&userOrgUnit=${ouIds.join(',')}`;\n  }\n\n  return iframeSrc;\n};\n\nconst AppItem = ({\n  dashboardMode,\n  item,\n  itemFilters\n}, context) => {\n  let appDetails;\n  const appKey = item.appKey;\n\n  if (appKey) {\n    appDetails = context.d2.system.installedApps.find(app => app.key === appKey);\n  }\n\n  return appDetails && appDetails.name && appDetails.launchUrl ? <>\n            <ItemHeader title={appDetails.name} itemId={item.id} dashboardMode={dashboardMode} isShortened={item.shortened} />\n            <Line />\n            <iframe title={appDetails.name} src={getIframeSrc(appDetails, item, itemFilters)} className=\"dashboard-item-content\" style={{\n      border: 'none'\n    }} />\n        </> : <>\n            <ItemHeader title={`${appKey} app not found`} />\n            <Line />\n            <div className=\"dashboard-item-content\" style={{\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      height: '90%'\n    }}>\n                <NotInterestedIcon color=\"disabled\" disabled style={{\n        width: 100,\n        height: 100,\n        align: 'center'\n      }} />\n            </div>\n        </>;\n};\n\nAppItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object\n};\nAppItem.contextTypes = {\n  d2: PropTypes.object\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const itemFilters = !isEditMode(ownProps.dashboardMode) ? sGetItemFiltersRoot(state) : DEFAULT_STATE_ITEM_FILTERS;\n  return {\n    itemFilters\n  };\n};\n\nexport default connect(mapStateToProps)(AppItem);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { colors } from '@dhis2/ui';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nconst style = {\n  margin: '21px 28px',\n  fontSize: '14px',\n  lineHeight: '18px',\n  color: colors.grey600\n};\n\nconst SpacerItem = props => {\n  return <>\n            <ItemHeader title={i18n.t('Spacer')} itemId={props.item.id} dashboardMode={props.dashboardMode} isShortened={props.item.shortened} />\n            <p style={style}>\n                {i18n.t('Use a spacer to create empty vertical space between other dashboard items.')}\n            </p>\n        </>;\n};\n\nSpacerItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object\n};\nexport default SpacerItem;","import React from 'react';\n\nconst PageBreakItem = () => <div />;\n\nexport default PageBreakItem;","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { sGetSelectedId, sGetSelectedShowDescription } from '../../../reducers/selected';\nimport { sGetDashboardById, EMPTY_DASHBOARD } from '../../../reducers/dashboards';\nimport { sGetNamedItemFilters } from '../../../reducers/itemFilters';\nimport { sGetIsEditing } from '../../../reducers/editDashboard';\nimport { sGetPrintDashboardName, sGetPrintDashboardDescription } from '../../../reducers/printDashboard';\nimport classes from './styles/Item.module.css';\n\nconst PrintTitlePageItem = ({\n  name,\n  description,\n  itemFilters,\n  showDescription\n}) => {\n  const getItemFilterList = () => {\n    const listItems = itemFilters.map(({\n      name,\n      values\n    }) => <li className={classes.filterListItem} key={name}>\n                {name}: {values.map(val => val.name).join(', ')}\n            </li>);\n    return <ul className={classes.filterList}>{listItems}</ul>;\n  };\n\n  return <div className={classes.titlePage}>\n            <p className={classes.name}>{name}</p>\n            {showDescription && description && <p className={classes.description}>{description}</p>}\n            {itemFilters.length > 0 && <>\n                    <p className={classes.filterTitle}>\n                        {i18n.t('Filters applied')}\n                    </p>\n                    {getItemFilterList()}\n                </>}\n        </div>;\n};\n\nPrintTitlePageItem.propTypes = {\n  description: PropTypes.string,\n  itemFilters: PropTypes.array,\n  name: PropTypes.string,\n  showDescription: PropTypes.bool\n};\nPrintTitlePageItem.defaultProps = {\n  description: '',\n  name: '',\n  showDescription: false\n};\n\nconst mapStateToProps = state => {\n  const id = sGetSelectedId(state);\n  const isEditMode = sGetIsEditing(state);\n  const viewDashboard = sGetDashboardById(state, id) || EMPTY_DASHBOARD;\n  const name = isEditMode ? sGetPrintDashboardName(state) || i18n.t('Untitled dashboard') : viewDashboard.displayName;\n  const description = isEditMode ? sGetPrintDashboardDescription(state) : viewDashboard.displayDescription;\n  return {\n    name,\n    description,\n    itemFilters: sGetNamedItemFilters(state),\n    showDescription: sGetSelectedShowDescription(state)\n  };\n};\n\nexport default connect(mapStateToProps)(PrintTitlePageItem);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport VisualizationItem from './VisualizationItem/Item';\nimport MessagesItem from './MessagesItem/Item';\nimport NotSupportedItem from './NotSupportedItem/Item';\nimport ListItem from './ListItem/Item';\nimport TextItem from './TextItem/Item';\nimport AppItem from './AppItem/Item';\nimport SpacerItem from './SpacerItem/Item';\nimport PageBreakItem from './PageBreakItem/Item';\nimport PrintTitlePageItem from './PrintTitlePageItem/Item';\nimport { APP, VISUALIZATION, REPORT_TABLE, CHART, MAP, EVENT_CHART, EVENT_REPORT, MESSAGES, REPORTS, RESOURCES, USERS, TEXT, SPACER, PAGEBREAK, PRINT_TITLE_PAGE } from '../../modules/itemTypes';\n\nconst getGridItem = type => {\n  switch (type) {\n    case VISUALIZATION:\n    case REPORT_TABLE:\n    case CHART:\n    case MAP:\n    case EVENT_CHART:\n    case EVENT_REPORT:\n      return VisualizationItem;\n\n    case MESSAGES:\n      return MessagesItem;\n\n    case REPORTS:\n    case RESOURCES:\n    case USERS:\n      return ListItem;\n\n    case TEXT:\n      return TextItem;\n\n    case SPACER:\n      return SpacerItem;\n\n    case APP:\n      return AppItem;\n\n    case PAGEBREAK:\n      return PageBreakItem;\n\n    case PRINT_TITLE_PAGE:\n      return PrintTitlePageItem;\n\n    default:\n      return NotSupportedItem;\n  }\n};\n\nexport const Item = props => {\n  const GridItem = getGridItem(props.item.type);\n  return <GridItem item={props.item} dashboardMode={props.dashboardMode} onToggleItemExpanded={props.onToggleItemExpanded} />;\n};\nItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  onToggleItemExpanded: PropTypes.func\n};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash/debounce';\nimport pick from 'lodash/pick';\nconst defaultDebounceMs = 100;\nconst defaultBufferFactor = 0.25;\n\nclass ProgressiveLoadingContainer extends Component {\n  static propTypes = {\n    children: PropTypes.node.isRequired,\n    bufferFactor: PropTypes.number,\n    className: PropTypes.string,\n    debounceMs: PropTypes.number,\n    style: PropTypes.object\n  };\n  static defaultProps = {\n    debounceMs: defaultDebounceMs,\n    bufferFactor: defaultBufferFactor\n  };\n  state = {\n    shouldLoad: false\n  };\n  containerRef = null;\n  shouldLoadHandler = null;\n  handlerOptions = {\n    passive: true\n  };\n\n  checkShouldLoad() {\n    if (!this.containerRef) {\n      return;\n    }\n\n    const bufferPx = this.props.bufferFactor * window.innerHeight;\n    const rect = this.containerRef.getBoundingClientRect();\n\n    if (rect.bottom > -bufferPx && rect.top < window.innerHeight + bufferPx) {\n      this.setState({\n        shouldLoad: true\n      });\n      this.removeHandler();\n    }\n  }\n\n  registerHandler() {\n    this.shouldLoadHandler = debounce(() => this.checkShouldLoad(), this.props.debounceMs);\n    document.getElementsByClassName('dashboard-wrapper')[0]?.addEventListener('scroll', this.shouldLoadHandler, this.handlerOptions);\n  }\n\n  removeHandler() {\n    document.getElementsByClassName('dashboard-wrapper')[0]?.removeEventListener('scroll', this.shouldLoadHandler, this.handlerOptions);\n  }\n\n  componentDidMount() {\n    this.registerHandler();\n    this.checkShouldLoad();\n  }\n\n  componentWillUnmount() {\n    this.removeHandler();\n  }\n\n  render() {\n    const {\n      children,\n      className,\n      style,\n      ...props\n    } = this.props;\n    const {\n      shouldLoad\n    } = this.state;\n    const eventProps = pick(props, ['onMouseDown', 'onTouchStart', 'onMouseUp', 'onTouchEnd']);\n    return <div ref={ref => this.containerRef = ref} style={style} className={className} {...eventProps}>\n                {shouldLoad && children}\n            </div>;\n  }\n\n}\n\nexport default ProgressiveLoadingContainer;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ReactGridLayout from 'react-grid-layout';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport { acUpdateDashboardLayout } from '../../actions/editDashboard';\nimport { Item } from '../Item/Item';\nimport { resize as pluginResize } from '../Item/VisualizationItem/plugin';\nimport { isVisualizationType } from '../../modules/itemTypes';\nimport { GRID_ROW_HEIGHT, GRID_COMPACT_TYPE, MARGIN, getGridColumns, hasShape, onItemResize } from './gridUtil';\nimport { orArray } from '../../modules/util';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\nimport './ItemGrid.css';\nimport { sGetSelectedId, sGetSelectedIsLoading } from '../../reducers/selected';\nimport { sGetEditDashboardRoot, sGetEditDashboardItems } from '../../reducers/editDashboard';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport ProgressiveLoadingContainer from '../Item/ProgressiveLoadingContainer';\nimport { VIEW, EDIT } from '../Dashboard/dashboardModes'; // Component\n\nconst EXPANDED_HEIGHT = 17; // this is set in the .dashboard-item-content css\n\nexport const ITEM_CONTENT_PADDING_BOTTOM = 4;\nexport class ItemGrid extends Component {\n  state = {\n    expandedItems: {}\n  };\n  onToggleItemExpanded = clickedId => {\n    const isExpanded = typeof this.state.expandedItems[clickedId] === 'boolean' ? this.state.expandedItems[clickedId] : false;\n    const expandedItems = { ...this.state.expandedItems\n    };\n    expandedItems[clickedId] = !isExpanded;\n    this.setState({\n      expandedItems\n    });\n  };\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.edit) {\n      this.setState({\n        expandedItems: {}\n      });\n    }\n  }\n\n  onLayoutChange = newLayout => {\n    if (this.props.edit) {\n      this.props.acUpdateDashboardLayout(newLayout);\n    }\n  };\n  onResizeStop = (layout, oldItem, newItem) => {\n    onItemResize(newItem.i);\n    const dashboardItem = this.props.dashboardItems.find(item => item.id === newItem.i); // call resize on the item component if it's a plugin type\n\n    if (dashboardItem && isVisualizationType(dashboardItem)) {\n      pluginResize(dashboardItem);\n    }\n  };\n  adjustHeightForExpanded = dashboardItem => {\n    const expandedItem = this.state.expandedItems[dashboardItem.id];\n\n    if (expandedItem && expandedItem === true) {\n      return Object.assign({}, dashboardItem, {\n        h: dashboardItem.h + EXPANDED_HEIGHT\n      });\n    }\n\n    return dashboardItem;\n  };\n  getItemComponent = item => {\n    const itemClassNames = [item.type, this.props.edit ? 'edit' : 'view'].join(' ');\n    return <ProgressiveLoadingContainer key={item.i} className={itemClassNames}>\n                <Item item={item} dashboardMode={this.props.edit ? EDIT : VIEW} onToggleItemExpanded={this.onToggleItemExpanded} />\n            </ProgressiveLoadingContainer>;\n  };\n  getItemComponents = items => items.map(item => this.getItemComponent(item));\n\n  render() {\n    const {\n      edit,\n      isLoading,\n      dashboardItems\n    } = this.props;\n\n    if (!isLoading && !dashboardItems.length) {\n      return <NoContentMessage text={i18n.t('There are no items on this dashboard')} />;\n    }\n\n    const items = edit ? dashboardItems : dashboardItems.map(this.adjustHeightForExpanded);\n    return <div className=\"grid-wrapper\">\n                {isLoading ? <Layer translucent>\n                        <CenteredContent>\n                            <CircularLoader />\n                        </CenteredContent>\n                    </Layer> : null}\n                <ReactGridLayout onLayoutChange={this.onLayoutChange} onResizeStop={this.onResizeStop} className=\"layout\" layout={items} margin={MARGIN} cols={getGridColumns()} rowHeight={GRID_ROW_HEIGHT} width={window.innerWidth} compactType={GRID_COMPACT_TYPE} isDraggable={edit} isResizable={edit} draggableCancel=\"input,textarea\">\n                    {this.getItemComponents(items)}\n                </ReactGridLayout>\n            </div>;\n  }\n\n}\nItemGrid.propTypes = {\n  acUpdateDashboardLayout: PropTypes.func,\n  dashboardItems: PropTypes.array,\n  edit: PropTypes.bool,\n  isLoading: PropTypes.bool\n};\nItemGrid.defaultProps = {\n  dashboardItems: []\n}; // Container\n\nconst mapStateToProps = (state, ownProps) => {\n  const selectedDashboard = ownProps.edit ? sGetEditDashboardRoot(state) : sGetDashboardById(state, sGetSelectedId(state));\n  const dashboardItems = ownProps.edit ? sGetEditDashboardItems(state) : sGetDashboardItems(state);\n  return {\n    isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n    dashboardItems\n  };\n};\n\nconst mapDispatchToProps = {\n  acUpdateDashboardLayout\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n  const validItems = orArray(stateProps.dashboardItems).filter(hasShape);\n  return { ...dispatchProps,\n    edit: ownProps.edit,\n    isLoading: stateProps.isLoading,\n    dashboardItems: validItems,\n    onItemResize\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps, mergeProps)(ItemGrid);","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { colors } from '@dhis2/ui';\nconst styles = {\n  badgeContainer: {\n    margin: '2px',\n    padding: '0 16px',\n    borderRadius: '4px',\n    color: colors.white,\n    backgroundColor: '#212934',\n    height: 36,\n    display: 'flex',\n    alignItems: 'center'\n  },\n  badge: {\n    fontSize: '13px',\n    cursor: 'pointer',\n    whiteSpace: 'nowrap'\n  },\n  badgeRemove: {\n    fontSize: '12px',\n    textDecoration: 'underline',\n    marginLeft: '24px',\n    cursor: 'pointer'\n  }\n};\n\nclass FilterBadge extends Component {\n  onClick = id => () => this.props.onClick(id);\n  onRemove = id => () => this.props.onRemove(id);\n\n  render() {\n    const {\n      data\n    } = this.props;\n    return <div style={styles.badgeContainer}>\n                <span style={styles.badge} onClick={this.onClick(data.id)}>\n                    {`${data.name}: ${data.values.length > 1 ? i18n.t('{{count}} selected', {\n          count: data.values.length\n        }) : data.values[0].name}`}\n                </span>\n                <span style={styles.badgeRemove} onClick={this.onRemove(data.id)}>\n                    {i18n.t('Remove')}\n                </span>\n            </div>;\n  }\n\n}\n\nFilterBadge.propTypes = {\n  data: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired,\n  onRemove: PropTypes.func.isRequired\n};\nFilterBadge.defaultProps = {\n  onClick: Function.prototype,\n  onRemove: Function.prototype\n};\nexport default FilterBadge;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport FilterBadge from './FilterBadge';\nimport { sGetNamedItemFilters } from '../../reducers/itemFilters';\nimport { acRemoveItemFilter } from '../../actions/itemFilters';\nimport { acSetActiveModalDimension } from '../../actions/activeModalDimension';\nimport classes from './styles/FilterBar.module.css';\nexport class FilterBar extends Component {\n  onBadgeRemove = id => {\n    this.props.removeItemFilter(id);\n  };\n  onBadgeClick = id => {\n    this.props.setActiveModalDimension({\n      id,\n      name: this.props.filters.find(item => item.id === id).name\n    });\n  };\n\n  render() {\n    const {\n      filters\n    } = this.props;\n    return filters.length ? // the 3 is calculated so that the FilterBar has the same vertical position as the TitleBar in relation to the ControlBar\n    <div className={classes.bar} style={{\n      top: 3\n    }}>\n                {filters.map(filter => <FilterBadge key={filter.id} data={filter} onClick={this.onBadgeClick} onRemove={this.onBadgeRemove} />)}\n            </div> : null;\n  }\n\n}\nFilterBar.propTypes = {\n  filters: PropTypes.array.isRequired,\n  removeItemFilter: PropTypes.func.isRequired,\n  setActiveModalDimension: PropTypes.func\n};\nFilterBar.defaultProps = {\n  filters: [],\n  removeItemFIlter: Function.prototype\n};\n\nconst mapStateToProps = state => ({\n  filters: sGetNamedItemFilters(state)\n});\n\nexport default connect(mapStateToProps, {\n  setActiveModalDimension: acSetActiveModalDimension,\n  removeItemFilter: acRemoveItemFilter\n})(FilterBar);","export const SET_WINDOW_HEIGHT = 'SET_WINDOW_HEIGHT';\nexport const DEFAULT_STATE_WINDOW_HEIGHT = window.innerHeight;\nexport default ((state = DEFAULT_STATE_WINDOW_HEIGHT, action) => {\n  switch (action.type) {\n    case SET_WINDOW_HEIGHT:\n      {\n        return action.value;\n      }\n\n    default:\n      return state;\n  }\n});\nexport const sGetWindowHeight = state => state.windowHeight;","import { generateUid } from 'd2/uid';\nimport { SET_PRINT_DASHBOARD, CLEAR_PRINT_DASHBOARD, SET_PRINT_DASHBOARD_LAYOUT, ADD_PRINT_DASHBOARD_ITEM, REMOVE_PRINT_DASHBOARD_ITEM, UPDATE_PRINT_DASHBOARD_ITEM } from '../reducers/printDashboard';\nimport { NEW_ITEM_SHAPE, getGridItemProperties, getPageBreakItemShape, getPrintTitlePageItemShape } from '../components/ItemGrid/gridUtil';\nimport { itemTypeMap, PAGEBREAK } from '../modules/itemTypes'; // actions\n\nexport const acSetPrintDashboard = (dashboard, items) => {\n  const val = { ...dashboard,\n    dashboardItems: items\n  };\n  return {\n    type: SET_PRINT_DASHBOARD,\n    value: val\n  };\n};\nexport const acClearPrintDashboard = () => ({\n  type: CLEAR_PRINT_DASHBOARD\n});\nexport const acUpdatePrintDashboardLayout = value => ({\n  type: SET_PRINT_DASHBOARD_LAYOUT,\n  value\n});\nexport const acAddPrintDashboardItem = item => {\n  const type = item.type;\n  delete item.type;\n  const itemPropName = itemTypeMap[type].propName;\n  const id = generateUid();\n  const gridItemProperties = getGridItemProperties(id);\n  let shape;\n\n  if (type === PAGEBREAK) {\n    const yPos = item.yPos || 0;\n    shape = getPageBreakItemShape(yPos, item.isStatic);\n  } else {\n    shape = getPrintTitlePageItemShape(item.isOneItemPerPage);\n  }\n\n  return {\n    type: ADD_PRINT_DASHBOARD_ITEM,\n    value: {\n      id,\n      type,\n      position: item.position || null,\n      [itemPropName]: item.content,\n      ...NEW_ITEM_SHAPE,\n      ...gridItemProperties,\n      ...shape\n    }\n  };\n};\nexport const acRemovePrintDashboardItem = value => ({\n  type: REMOVE_PRINT_DASHBOARD_ITEM,\n  value\n});\nexport const acUpdatePrintDashboardItem = item => ({\n  type: UPDATE_PRINT_DASHBOARD_ITEM,\n  value: item\n});","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport TitleBar from '../TitleBar/TitleBar';\nimport ItemGrid from '../ItemGrid/ItemGrid';\nimport FilterBar from '../FilterBar/FilterBar';\nimport DashboardsBar from '../ControlBar/DashboardsBar';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport { sGetIsEditing } from '../../reducers/editDashboard';\nimport { sGetIsPrinting } from '../../reducers/printDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { sGetWindowHeight } from '../../reducers/windowHeight';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { acClearEditDashboard } from '../../actions/editDashboard';\nimport { acClearPrintDashboard } from '../../actions/printDashboard';\nimport { getControlBarHeight, HEADERBAR_HEIGHT } from '../ControlBar/controlBarDimensions';\nexport const ViewDashboard = props => {\n  useEffect(() => {\n    if (props.dashboardIsEditing) {\n      props.clearEditDashboard();\n    } else if (props.dashboardIsPrinting) {\n      props.clearPrintDashboard();\n    }\n  }, [props.dashboardIsEditing, props.dashboardIsPrinting]);\n  useEffect(() => {\n    document.querySelector('.dashboard-wrapper')?.scroll(0, 0);\n  }, [props.selectedId]);\n  const height = props.windowHeight - HEADERBAR_HEIGHT - getControlBarHeight(props.controlBarRows);\n  return <>\n            <DashboardsBar />\n            <DashboardVerticalOffset />\n            <div className=\"dashboard-wrapper\" style={{\n      height\n    }}>\n                <TitleBar edit={false} />\n                <FilterBar />\n                <ItemGrid edit={false} />\n            </div>\n        </>;\n};\nViewDashboard.propTypes = {\n  clearEditDashboard: PropTypes.func,\n  clearPrintDashboard: PropTypes.func,\n  controlBarRows: PropTypes.number,\n  dashboardIsEditing: PropTypes.bool,\n  dashboardIsPrinting: PropTypes.bool,\n  selectedId: PropTypes.string,\n  windowHeight: PropTypes.number\n};\n\nconst mapStateToProps = state => {\n  return {\n    dashboardIsEditing: sGetIsEditing(state),\n    dashboardIsPrinting: sGetIsPrinting(state),\n    controlBarRows: sGetControlBarUserRows(state),\n    selectedId: sGetSelectedId(state),\n    windowHeight: sGetWindowHeight(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  clearEditDashboard: acClearEditDashboard,\n  clearPrintDashboard: acClearPrintDashboard\n})(ViewDashboard);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Button, Modal, ModalContent, ModalActions, ButtonStrip, ModalTitle } from '@dhis2/ui';\nimport classes from './styles/ConfirmDeleteDialog.module.css';\nexport const ConfirmDeleteDialog = ({\n  dashboardName,\n  onDeleteConfirmed,\n  onContinueEditing,\n  open\n}) => {\n  const actions = [<Button key=\"cancel\" secondary onClick={onContinueEditing}>\n            {i18n.t('Cancel')}\n        </Button>, <Button key=\"delete\" destructive onClick={onDeleteConfirmed}>\n            {i18n.t('Delete')}\n        </Button>];\n  return open && <Modal onClose={onContinueEditing} small position=\"middle\">\n                <ModalTitle>{i18n.t('Delete dashboard')}</ModalTitle>\n                <ModalContent>\n                    <span className={classes.content}>\n                        {i18n.t('Deleting dashboard \"{{ dashboardName }}\" will remove it for all users. This action cannot be undone. Are you sure you want to permanently delete this dashboard?', {\n          dashboardName\n        })}\n                    </span>\n                </ModalContent>\n                <ModalActions>\n                    <ButtonStrip>{actions}</ButtonStrip>\n                </ModalActions>\n            </Modal>;\n};\nConfirmDeleteDialog.propTypes = {\n  dashboardName: PropTypes.string,\n  open: PropTypes.bool,\n  onContinueEditing: PropTypes.func,\n  onDeleteConfirmed: PropTypes.func\n};\nexport default ConfirmDeleteDialog;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport ControlBar from './ControlBar';\nimport TranslationDialog from '@dhis2/d2-ui-translation-dialog';\nimport { Button, ButtonStrip } from '@dhis2/ui';\nimport ConfirmDeleteDialog from './ConfirmDeleteDialog';\nimport { tSaveDashboard, acClearEditDashboard } from '../../actions/editDashboard';\nimport { acClearPrintDashboard } from '../../actions/printDashboard';\nimport { tDeleteDashboard, acSetDashboardDisplayName } from '../../actions/dashboards';\nimport { sGetEditDashboardRoot, sGetIsNewDashboard, sGetIsPrintPreviewView } from '../../reducers/editDashboard';\nimport { acSetPrintPreviewView, acClearPrintPreviewView } from '../../actions/editDashboard';\nimport { CONTROL_BAR_ROW_HEIGHT, MIN_ROW_COUNT, getControlBarHeight } from './controlBarDimensions';\nimport { apiFetchDashboard } from '../../api/dashboards';\nimport classes from './styles/DashboardsBar.module.css';\nconst buttonBarStyle = {\n  height: CONTROL_BAR_ROW_HEIGHT,\n  paddingTop: '15px',\n  marginLeft: '15px',\n  marginRight: '15px'\n};\nexport class EditBar extends Component {\n  state = {\n    translationDialogIsOpen: false,\n    dashboardModel: undefined,\n    confirmDeleteDialogOpen: false,\n    redirectUrl: undefined\n  };\n  onConfirmDelete = () => {\n    this.setState({\n      confirmDeleteDialogOpen: true\n    });\n  };\n  onSave = () => {\n    this.props.onSave().then(newId => {\n      this.setState({\n        redirectUrl: `/${newId}`\n      });\n    });\n  };\n  onPrintPreview = () => {\n    if (this.props.isPrintPreviewView) {\n      this.props.clearPrintPreview();\n      this.props.clearPrintDashboard();\n    } else {\n      this.props.showPrintPreview();\n    }\n  };\n  onDiscard = () => {\n    this.props.onDiscardChanges();\n    const redirectUrl = this.props.dashboardId ? `/${this.props.dashboardId}` : '/';\n    this.setState({\n      redirectUrl\n    });\n  };\n  onContinueEditing = () => {\n    this.setState({\n      confirmDeleteDialogOpen: false\n    });\n  };\n  onDeleteConfirmed = () => {\n    this.setState({\n      confirmDeleteDialogOpen: false\n    });\n    this.props.onDelete(this.props.dashboardId).then(() => {\n      this.setState({\n        redirectUrl: '/'\n      });\n    });\n  };\n  onTranslationsSaved = async translations => {\n    if (translations && translations.length) {\n      const dbLocale = await this.context.d2.currentUser.userSettings.get('keyDbLocale');\n      const translation = translations.find(t => t.locale === dbLocale && t.property === 'NAME');\n\n      if (translation && translation.value) {\n        this.props.onTranslate(this.props.dashboardId, translation.value);\n      }\n    }\n  };\n  fetchDashboardModel = () => {\n    if (this.props.dashboardId && !this.state.dashboardModel) {\n      apiFetchDashboard(this.props.dashboardId).then(dashboardModel => this.setState({\n        dashboardModel\n      }));\n    }\n  };\n\n  componentDidMount() {\n    this.fetchDashboardModel();\n  }\n\n  componentDidUpdate() {\n    this.fetchDashboardModel();\n  }\n\n  toggleTranslationDialog = () => {\n    this.setState({\n      translationDialogIsOpen: !this.state.translationDialogIsOpen\n    });\n  };\n  confirmDeleteDialog = () => this.props.deleteAccess && this.props.dashboardId ? <ConfirmDeleteDialog dashboardName={this.props.dashboardName} onDeleteConfirmed={this.onDeleteConfirmed} onContinueEditing={this.onContinueEditing} open={this.state.confirmDeleteDialogOpen} /> : null;\n  translationDialog = () => this.state.dashboardModel && this.state.dashboardModel.id ? <TranslationDialog className=\"translation-dialog\" d2={this.context.d2} open={this.state.translationDialogIsOpen} onRequestClose={this.toggleTranslationDialog} objectToTranslate={this.state.dashboardModel} fieldsToTranslate={['name', 'description']} onTranslationSaved={this.onTranslationsSaved} onTranslationError={err => console.log('translation update error', err)} /> : null;\n  renderActionButtons = () => {\n    const printPreviewText = this.props.isPrintPreviewView ? i18n.t('Exit Print preview') : i18n.t('Print preview');\n    return <div className={classes.leftControls}>\n                <ButtonStrip>\n                    <Button primary onClick={this.onSave}>\n                        {i18n.t('Save changes')}\n                    </Button>\n                    <Button onClick={this.onPrintPreview}>\n                        {printPreviewText}\n                    </Button>\n\n                    {this.props.dashboardId ? <Button onClick={this.toggleTranslationDialog}>\n                            {i18n.t('Translate')}\n                        </Button> : null}\n                    {this.props.dashboardId && this.props.deleteAccess ? <Button onClick={this.onConfirmDelete}>\n                            {i18n.t('Delete')}\n                        </Button> : null}\n                </ButtonStrip>\n            </div>;\n  };\n\n  render() {\n    if (this.state.redirectUrl) {\n      return <Redirect to={this.state.redirectUrl} />;\n    }\n\n    const {\n      updateAccess\n    } = this.props;\n    const controlBarHeight = getControlBarHeight(MIN_ROW_COUNT);\n    const discardBtnText = updateAccess ? i18n.t('Exit without saving') : i18n.t('Go to dashboards');\n    return <>\n                <ControlBar height={controlBarHeight} editMode={true}>\n                    <div style={buttonBarStyle}>\n                        {updateAccess ? this.renderActionButtons() : null}\n\n                        <div className={classes.rightControls}>\n                            <Button secondary onClick={this.onDiscard}>\n                                {discardBtnText}\n                            </Button>\n                        </div>\n                    </div>\n                </ControlBar>\n                <div className={classes.topMargin} />\n                {this.translationDialog()}\n                {this.confirmDeleteDialog()}\n            </>;\n  }\n\n}\nEditBar.propTypes = {\n  clearPrintDashboard: PropTypes.func,\n  clearPrintPreview: PropTypes.func,\n  dashboardId: PropTypes.string,\n  dashboardName: PropTypes.string,\n  deleteAccess: PropTypes.bool,\n  isPrintPreviewView: PropTypes.bool,\n  showPrintPreview: PropTypes.func,\n  updateAccess: PropTypes.bool,\n  onDelete: PropTypes.func,\n  onDiscardChanges: PropTypes.func,\n  onSave: PropTypes.func,\n  onTranslate: PropTypes.func\n};\nEditBar.contextTypes = {\n  d2: PropTypes.object\n};\n\nconst mapStateToProps = state => {\n  const dashboard = sGetEditDashboardRoot(state);\n  let deleteAccess;\n  let updateAccess;\n\n  if (sGetIsNewDashboard(state)) {\n    deleteAccess = true;\n    updateAccess = true;\n  } else {\n    updateAccess = dashboard.access ? dashboard.access.update : false;\n    deleteAccess = dashboard.access ? dashboard.access.delete : false;\n  }\n\n  return {\n    dashboardId: dashboard.id,\n    dashboardName: dashboard.name,\n    deleteAccess,\n    isPrintPreviewView: sGetIsPrintPreviewView(state),\n    updateAccess\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  clearPrintDashboard: () => dispatch(acClearPrintDashboard()),\n  clearPrintPreview: () => dispatch(acClearPrintPreviewView()),\n  onSave: () => dispatch(tSaveDashboard()).then(id => id),\n  onDelete: id => dispatch(tDeleteDashboard(id)),\n  onDiscardChanges: () => dispatch(acClearEditDashboard()),\n  onTranslate: (id, value) => dispatch(acSetDashboardDisplayName(id, value)),\n  showPrintPreview: () => dispatch(acSetPrintPreviewView())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditBar);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { a4LandscapeWidthPx } from '../ItemGrid/gridUtil';\nimport classes from './styles/PrintInfo.module.css';\n\nconst PrintInfo = ({\n  isLayout\n}) => {\n  const maxWidth = a4LandscapeWidthPx < window.innerWidth ? a4LandscapeWidthPx : window.innerWidth;\n  const infoHeader = isLayout ? i18n.t('dashboard layout') : i18n.t('one item per page');\n  return <div className={classes.infoWrapper}>\n            <p className={classes.infoHeader}>\n                {`${i18n.t('Print Preview')}: ${infoHeader}`}\n            </p>\n            <div style={{\n      maxWidth\n    }}>\n                <p className={classes.info}>\n                    {`${i18n.t('For best print results')}:`}\n                </p>\n                <div className={classes.info}>\n                    <ul className={classes.infoList}>\n                        <li>{i18n.t('Use Chrome or Edge web browser')}</li>\n                        <li>\n                            {i18n.t('Wait for all dashboard items to load before printing')}\n                        </li>\n                        <li>\n                            {i18n.t('Use A4 landscape paper size and default margin settings in the browser print dialog')}\n                        </li>\n                    </ul>\n                </div>\n            </div>\n            <hr className={classes.divider} />\n        </div>;\n};\n\nPrintInfo.propTypes = {\n  isLayout: PropTypes.bool\n};\nexport default PrintInfo;","import React from 'react';\nimport { colors } from '@dhis2/ui';\n\nconst LessHorizontalIcon = () => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill={colors.grey600} viewBox=\"0 0 24 24\">\n        <path d=\"m13.2928932 6.29289322c.3905243-.39052429 1.0236893-.39052429 1.4142136 0 .3604839.36048396.3882135.92771502.0831886 1.32000622l-.0831886.09420734-4.2921068 4.29289322 4.2921068 4.2928932c.3604839.360484.3882135.927715.0831886 1.3200062l-.0831886.0942074c-.360484.3604839-.927715.3882135-1.3200062.0831886l-.0942074-.0831886-4.99999998-5c-.36048396-.360484-.3882135-.927715-.08318861-1.3200062l.08318861-.0942074z\" />\n    </svg>;\n\nexport default LessHorizontalIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Button } from '@dhis2/ui';\nimport { Link } from 'react-router-dom';\nimport LessHorizontalIcon from '../../icons/LessHorizontal';\nimport { a4LandscapeWidthPx } from '../ItemGrid/gridUtil';\nimport classes from './styles/PrintActionsBar.module.css'; // 42px set in the module css file\n\nexport const PRINT_ACTIONS_BAR_HEIGHT = 42;\n\nconst PrintActionsBar = ({\n  id\n}) => {\n  const width = a4LandscapeWidthPx < window.innerWidth ? a4LandscapeWidthPx : window.innerWidth;\n  return <>\n            <div className={classes.container}>\n                <div className={classes.inner} style={{\n        width\n      }}>\n                    <Link className={classes.link} to={`/${id}`}>\n                        <Button>\n                            <LessHorizontalIcon />\n                            {i18n.t('Exit print preview')}\n                        </Button>\n                    </Link>\n                    <Button onClick={window.print}>{i18n.t('Print')}</Button>\n                </div>\n            </div>\n            <div className={classes.topMargin} />\n        </>;\n};\n\nPrintActionsBar.propTypes = {\n  id: PropTypes.string\n};\nexport default PrintActionsBar;","import sortBy from 'lodash/sortBy';\nimport { orArray } from './util';\nimport { itemTypeMap } from './itemTypes';\nexport const getTransformYPx = elStyle => {\n  if (!elStyle || !elStyle.transform) {\n    return null;\n  } // find valid transforms - those with y pixels\n  // the code is expecting the transform prop to\n  // look like:  translate(10px, 300px)\n\n\n  const transformY = elStyle.transform.split(' ')[1]?.match(/(\\d+)px/);\n\n  if (transformY) {\n    return parseInt(transformY[1]);\n  } else {\n    return null;\n  }\n};\nexport const getDomGridItemsSortedByYPos = elements => {\n  const types = Object.keys(itemTypeMap);\n  const elementsWithBoundingRect = orArray(elements).map(el => {\n    const type = Array.from(el.classList).find(className => types.indexOf(className) > -1);\n    const rect = el.getBoundingClientRect();\n    const y = getTransformYPx(el.style) || parseInt(rect.y);\n    return {\n      type,\n      classList: el.classList,\n      bottomY: y + parseInt(rect.height),\n      el\n    };\n  });\n  return sortBy(elementsWithBoundingRect, ['bottomY']);\n};","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport sortBy from 'lodash/sortBy';\nimport ReactGridLayout from 'react-grid-layout';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport cx from 'classnames';\nimport { Item } from '../Item/Item';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport { acUpdatePrintDashboardLayout } from '../../actions/printDashboard';\nimport { sGetSelectedIsLoading } from '../../reducers/selected';\nimport { sGetPrintDashboardRoot, sGetPrintDashboardItems } from '../../reducers/printDashboard';\nimport { sGetIsEditing } from '../../reducers/editDashboard';\nimport { GRID_ROW_HEIGHT, GRID_COMPACT_TYPE, MARGIN, getGridColumns, hasShape, a4LandscapeWidthPx } from './gridUtil';\nimport { getDomGridItemsSortedByYPos, getTransformYPx } from '../../modules/printUtils';\nimport { PRINT_LAYOUT } from '../Dashboard/dashboardModes';\nimport { PAGEBREAK } from '../../modules/itemTypes';\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\nimport './ItemGrid.css'; // this is set in the .dashboard-item-content css\n\nexport const ITEM_CONTENT_PADDING_BOTTOM = 4;\nexport class PrintLayoutItemGrid extends Component {\n  onLayoutChange = newLayout => {\n    this.props.updateDashboardLayout(newLayout);\n  };\n  isFirstPageBreak = item => {\n    if (item.type !== PAGEBREAK) {\n      return false;\n    }\n\n    const pageBreaks = this.props.dashboardItems.filter(i => i.type === PAGEBREAK);\n    const sortedPageBreaks = sortBy(pageBreaks, ['y']);\n    return item.y === sortedPageBreaks[0].y;\n  };\n  getItemComponent = item => {\n    // the first-page-break class is used in Edit print preview\n    const itemClassNames = cx('print', 'layout', `${item.type}`, {\n      'first-page-break': this.props.isEditing && this.isFirstPageBreak(item),\n      shortened: !!item.shortened\n    });\n    return <div key={item.i} className={itemClassNames}>\n                <Item item={item} dashboardMode={PRINT_LAYOUT} />\n            </div>;\n  };\n  getItemComponents = items => items.map(item => this.getItemComponent(item));\n\n  hideExtraPageBreaks() {\n    const sortedElements = getDomGridItemsSortedByYPos(Array.from(document.querySelectorAll('.react-grid-item')));\n    let pageBreakBottom = 0;\n    let lastItemBottom = 0;\n    let foundNonPageBreak = false;\n\n    for (let i = sortedElements.length - 1; i >= 0; --i) {\n      const item = sortedElements[i];\n\n      if (item.type === PAGEBREAK) {\n        if (!foundNonPageBreak) {\n          item.el.classList.add('removed');\n        } else {\n          pageBreakBottom = item.bottomY;\n          break;\n        }\n      } else {\n        foundNonPageBreak = true;\n        const thisItemBottom = item.bottomY;\n\n        if (thisItemBottom > lastItemBottom) {\n          lastItemBottom = thisItemBottom;\n        }\n      }\n    }\n\n    const pageHeight = 720;\n    const gridElement = document.querySelector('.react-grid-layout'); // the last page break is before the last item(s) so\n    // maxHeight is one page beyond the last page break\n\n    const maxHeight = pageBreakBottom + pageHeight;\n\n    if (gridElement) {\n      gridElement.style.height = `${maxHeight}px`;\n    }\n\n    if (this.props.isEditing) {\n      //scroll to below the title page - which is middle of the first pagebreak\n      const firstBreak = document.querySelector('.first-page-break');\n\n      if (firstBreak && firstBreak.style && firstBreak.style.transform) {\n        const yPos = getTransformYPx(firstBreak.style);\n        const scrollArea = document.querySelector('.scroll-area');\n        scrollArea && scrollArea.scroll(0, yPos + 50);\n      }\n    }\n  }\n\n  componentDidMount() {\n    this.hideExtraPageBreaks();\n  }\n\n  componentDidUpdate() {\n    this.hideExtraPageBreaks();\n  }\n\n  render() {\n    const {\n      isLoading,\n      dashboardItems\n    } = this.props;\n\n    if (!isLoading && !dashboardItems.length) {\n      return <NoContentMessage text={i18n.t('There are no items on this dashboard')} />;\n    }\n\n    const width = a4LandscapeWidthPx < window.innerWidth ? a4LandscapeWidthPx : window.innerWidth;\n    return <div className=\"grid-wrapper\">\n                {isLoading ? <Layer translucent>\n                        <CenteredContent>\n                            <CircularLoader />\n                        </CenteredContent>\n                    </Layer> : null}\n                <ReactGridLayout onLayoutChange={this.onLayoutChange} className=\"layout\" layout={dashboardItems} margin={MARGIN} cols={getGridColumns()} rowHeight={GRID_ROW_HEIGHT} width={width} compactType={GRID_COMPACT_TYPE} isDraggable={false} isResizable={false} draggableCancel=\"input,textarea\">\n                    {this.getItemComponents(dashboardItems)}\n                </ReactGridLayout>\n            </div>;\n  }\n\n}\nPrintLayoutItemGrid.propTypes = {\n  dashboardItems: PropTypes.array,\n  isEditing: PropTypes.bool,\n  isLoading: PropTypes.bool,\n  updateDashboardLayout: PropTypes.func\n};\nPrintLayoutItemGrid.defaultProps = {\n  dashboardItems: []\n};\n\nconst mapStateToProps = state => {\n  const selectedDashboard = sGetPrintDashboardRoot(state);\n  return {\n    isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n    dashboardItems: sGetPrintDashboardItems(state).filter(hasShape),\n    isEditing: sGetIsEditing(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  updateDashboardLayout: acUpdatePrintDashboardLayout\n})(PrintLayoutItemGrid);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { spacers } from '@dhis2/ui';\nimport cx from 'classnames';\nimport PrintInfo from './PrintInfo';\nimport PrintActionsBar from './PrintActionsBar';\nimport PrintLayoutItemGrid from '../ItemGrid/PrintLayoutItemGrid';\nimport { acSetPrintDashboard, acAddPrintDashboardItem, acUpdatePrintDashboardItem } from '../../actions/printDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { sGetWindowHeight } from '../../reducers/windowHeight';\nimport { sGetEditDashboardRoot, sGetEditDashboardItems } from '../../reducers/editDashboard';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport { PAGEBREAK, PRINT_TITLE_PAGE } from '../../modules/itemTypes';\nimport { a4LandscapeWidthPx, MAX_ITEM_GRID_HEIGHT } from '../ItemGrid/gridUtil';\nimport { getControlBarHeight, HEADERBAR_HEIGHT } from '../ControlBar/controlBarDimensions';\nimport { PRINT_ACTIONS_BAR_HEIGHT } from './PrintActionsBar';\nimport { DRAG_HANDLE_HEIGHT } from '../ControlBar/ControlBar';\nimport classes from './styles/PrintLayoutDashboard.module.css';\nimport './styles/print.css';\nimport './styles/print-layout.css';\nconst EDIT_BAR_HEIGHT = getControlBarHeight(1) + DRAG_HANDLE_HEIGHT;\n\nconst isLeapPage = n => {\n  // pages 5,9,13,17,21,25,29... are leap pages\n  let x = 0;\n  const startPage = 1;\n\n  const getMultiple = factor => startPage + 4 * factor;\n\n  let multiple = getMultiple(0);\n  let isLeapPage = false;\n\n  while (multiple < n) {\n    multiple = getMultiple(x);\n    ++x;\n\n    if (multiple === n) {\n      isLeapPage = true;\n      break;\n    }\n  }\n\n  return isLeapPage;\n};\n\nconst addPageBreaks = ({\n  items,\n  addDashboardItem\n}) => {\n  // add enough page breaks so that each item could\n  // be put on its own page. Due to the react-grid-layout\n  // unit system, we have to estimate roughly the size of each\n  // page. At regular intervals add a unit, like a leap year\n  let yPos = 0;\n  const yPosList = [];\n\n  for (let pageNum = 1; pageNum <= items.length; ++pageNum) {\n    if (pageNum === 1) {\n      yPos += 35;\n    } else if (isLeapPage(pageNum)) {\n      yPos += 40;\n    } else {\n      yPos += 39;\n    }\n\n    yPosList.push(yPos);\n  }\n\n  for (let i = 0; i < items.length; ++i) {\n    addDashboardItem({\n      type: PAGEBREAK,\n      yPos: yPosList[i]\n    });\n  }\n};\n\nexport class PrintLayoutDashboard extends Component {\n  state = {\n    initialized: false\n  };\n  initPrintLayoutDashboard = () => {\n    if (this.props.dashboard) {\n      this.setState({\n        initialized: true\n      });\n      this.props.setPrintDashboard(this.props.dashboard, this.props.items); // If any items are taller than one page, reduce it to one\n      // page (react-grid-layout units)\n\n      this.props.items.forEach(item => {\n        if (item.h > MAX_ITEM_GRID_HEIGHT) {\n          item.shortened = true;\n          this.props.updateDashboardItem(Object.assign({}, item, {\n            h: MAX_ITEM_GRID_HEIGHT\n          }));\n        }\n      });\n      addPageBreaks(this.props);\n      this.props.addDashboardItem({\n        type: PRINT_TITLE_PAGE,\n        isOneItemPerPage: false\n      });\n    }\n  };\n\n  componentDidMount() {\n    this.initPrintLayoutDashboard();\n  }\n\n  componentDidUpdate() {\n    if (!this.state.initialized) {\n      this.initPrintLayoutDashboard();\n    }\n  }\n\n  getWrapperStyle = () => {\n    return this.props.fromEdit ? {\n      paddingTop: spacers.dp24,\n      height: this.props.windowHeight - EDIT_BAR_HEIGHT - HEADERBAR_HEIGHT\n    } : {\n      height: this.props.windowHeight - PRINT_ACTIONS_BAR_HEIGHT\n    };\n  };\n\n  render() {\n    return <>\n                {!this.props.fromEdit && <PrintActionsBar id={this.props.dashboard.id} />}\n                <div className={cx(classes.wrapper, 'scroll-area')} style={this.getWrapperStyle()}>\n                    {!this.props.fromEdit && <PrintInfo isLayout={true} />}\n                    <div className={classes.pageOuter} style={{\n          width: a4LandscapeWidthPx\n        }}>\n                        <PrintLayoutItemGrid />\n                    </div>\n                </div>\n            </>;\n  }\n\n}\nPrintLayoutDashboard.propTypes = {\n  addDashboardItem: PropTypes.func,\n  dashboard: PropTypes.object,\n  fromEdit: PropTypes.bool,\n  items: PropTypes.array,\n  setPrintDashboard: PropTypes.func,\n  updateDashboardItem: PropTypes.func,\n  windowHeight: PropTypes.number\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const id = sGetSelectedId(state);\n\n  if (ownProps.fromEdit) {\n    const dashboard = sGetEditDashboardRoot(state);\n    return {\n      dashboard,\n      id,\n      items: sGetEditDashboardItems(state),\n      windowHeight: sGetWindowHeight(state)\n    };\n  }\n\n  const dashboard = id ? sGetDashboardById(state, id) : null;\n  return {\n    dashboard,\n    id,\n    items: sGetDashboardItems(state),\n    windowHeight: sGetWindowHeight(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setPrintDashboard: acSetPrintDashboard,\n  addDashboardItem: acAddPrintDashboardItem,\n  updateDashboardItem: acUpdatePrintDashboardItem\n})(PrintLayoutDashboard);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport TitleBar from '../TitleBar/TitleBar';\nimport ItemGrid from '../ItemGrid/ItemGrid';\nimport EditBar from '../ControlBar/EditBar';\nimport LayoutPrintPreview from './PrintLayoutDashboard';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport { acSetEditDashboard } from '../../actions/editDashboard';\nimport { sGetWindowHeight } from '../../reducers/windowHeight';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport { sGetIsPrintPreviewView } from '../../reducers/editDashboard';\nimport { getControlBarHeight, HEADERBAR_HEIGHT } from '../ControlBar/controlBarDimensions';\nexport class EditDashboard extends Component {\n  state = {\n    initialized: false\n  };\n  initEditDashboard = () => {\n    if (this.props.dashboard) {\n      this.setState({\n        initialized: true\n      });\n      this.props.setEditDashboard(this.props.dashboard, this.props.items);\n    }\n  };\n\n  componentDidMount() {\n    this.initEditDashboard();\n  }\n\n  componentDidUpdate() {\n    if (!this.state.initialized) {\n      this.initEditDashboard();\n    }\n  }\n\n  renderGrid = () => {\n    if (this.props.isPrintPreviewView) {\n      return <LayoutPrintPreview fromEdit={true} />;\n    }\n\n    const height = this.props.windowHeight - HEADERBAR_HEIGHT - getControlBarHeight(1);\n    return <div className=\"dashboard-wrapper\" style={{\n      height\n    }}>\n                <TitleBar edit={true} />\n                <ItemGrid edit={true} />\n            </div>;\n  };\n\n  render() {\n    return <>\n                <EditBar />\n                {this.props.updateAccess ? this.renderGrid() : <NoContentMessage text={i18n.t('No access')} />}\n            </>;\n  }\n\n}\nEditDashboard.propTypes = {\n  dashboard: PropTypes.object,\n  isPrintPreviewView: PropTypes.bool,\n  items: PropTypes.array,\n  setEditDashboard: PropTypes.func,\n  updateAccess: PropTypes.bool,\n  windowHeight: PropTypes.number\n};\n\nconst mapStateToProps = state => {\n  const id = sGetSelectedId(state);\n  const dashboard = id ? sGetDashboardById(state, id) : null;\n  const updateAccess = dashboard && dashboard.access ? dashboard.access.update : false;\n  return {\n    dashboard,\n    updateAccess,\n    items: sGetDashboardItems(state),\n    isPrintPreviewView: sGetIsPrintPreviewView(state),\n    windowHeight: sGetWindowHeight(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setEditDashboard: acSetEditDashboard\n})(EditDashboard);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport EditBar from '../ControlBar/EditBar';\nimport TitleBar from '../TitleBar/TitleBar';\nimport ItemGrid from '../ItemGrid/ItemGrid';\nimport LayoutPrintPreview from './PrintLayoutDashboard';\nimport { acSetEditNewDashboard } from '../../actions/editDashboard';\nimport { sGetIsPrintPreviewView } from '../../reducers/editDashboard';\nimport { sGetWindowHeight } from '../../reducers/windowHeight';\nimport { getControlBarHeight, HEADERBAR_HEIGHT } from '../ControlBar/controlBarDimensions';\n\nclass NewDashboard extends Component {\n  componentDidMount() {\n    this.props.setNewDashboard();\n  }\n\n  render() {\n    const height = this.props.windowHeight - HEADERBAR_HEIGHT - getControlBarHeight(1);\n    return <>\n                <EditBar />\n                {this.props.isPrintPreviewView ? <LayoutPrintPreview fromEdit={true} /> : <div className=\"dashboard-wrapper\" style={{\n        height\n      }}>\n                        <TitleBar edit={true} />\n                        <ItemGrid edit={true} />\n                    </div>}\n            </>;\n  }\n\n}\n\nNewDashboard.propTypes = {\n  isPrintPreviewView: PropTypes.bool,\n  setNewDashboard: PropTypes.func,\n  windowHeight: PropTypes.number\n};\n\nconst mapStateToProps = state => ({\n  isPrintPreviewView: sGetIsPrintPreviewView(state),\n  windowHeight: sGetWindowHeight(state)\n});\n\nexport default connect(mapStateToProps, {\n  setNewDashboard: acSetEditNewDashboard\n})(NewDashboard);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ReactGridLayout from 'react-grid-layout';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport cx from 'classnames';\nimport { Item } from '../Item/Item';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport { PRINT } from '../Dashboard/dashboardModes';\nimport { sGetSelectedIsLoading } from '../../reducers/selected';\nimport { sGetPrintDashboardRoot, sGetPrintDashboardItems } from '../../reducers/printDashboard';\nimport { GRID_ROW_HEIGHT, GRID_COMPACT_TYPE, MARGIN, getGridColumns, hasShape, a4LandscapeWidthPx } from './gridUtil';\nimport { orArray } from '../../modules/util';\nimport 'react-grid-layout/css/styles.css';\nimport './ItemGrid.css';\nexport class PrintItemGrid extends Component {\n  getItemComponent = item => <div key={item.i} className={cx(item.type, 'print', 'oipp')}>\n            <Item item={item} dashboardMode={PRINT} />\n        </div>;\n  getItemComponents = items => items.map(item => this.getItemComponent(item));\n\n  render() {\n    const {\n      isLoading,\n      dashboardItems\n    } = this.props;\n\n    if (!isLoading && !dashboardItems.length) {\n      return <NoContentMessage text={i18n.t('There are no items on this dashboard')} />;\n    }\n\n    const width = a4LandscapeWidthPx < window.innerWidth ? a4LandscapeWidthPx : window.innerWidth;\n    return <>\n                {isLoading ? <Layer translucent>\n                        <CenteredContent>\n                            <CircularLoader />\n                        </CenteredContent>\n                    </Layer> : null}\n                <ReactGridLayout className=\"layout print\" layout={dashboardItems} margin={MARGIN} cols={getGridColumns()} rowHeight={GRID_ROW_HEIGHT} width={width} compactType={GRID_COMPACT_TYPE} isDraggable={false} isResizable={false} draggableCancel=\"input,textarea\">\n                    {this.getItemComponents(dashboardItems)}\n                </ReactGridLayout>\n            </>;\n  }\n\n}\nPrintItemGrid.propTypes = {\n  dashboardItems: PropTypes.array,\n  isLoading: PropTypes.bool\n};\nPrintItemGrid.defaultProps = {\n  dashboardItems: []\n};\n\nconst mapStateToProps = state => {\n  const selectedDashboard = sGetPrintDashboardRoot(state);\n  return {\n    isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n    dashboardItems: orArray(sGetPrintDashboardItems(state)).filter(hasShape)\n  };\n};\n\nexport default connect(mapStateToProps)(PrintItemGrid);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport sortBy from 'lodash/sortBy';\nimport PrintInfo from './PrintInfo';\nimport PrintActionsBar from './PrintActionsBar';\nimport PrintItemGrid from '../ItemGrid/PrintItemGrid';\nimport { acSetPrintDashboard, acAddPrintDashboardItem, acRemovePrintDashboardItem, acUpdatePrintDashboardItem } from '../../actions/printDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { sGetWindowHeight } from '../../reducers/windowHeight';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport { PAGEBREAK, PRINT_TITLE_PAGE, SPACER } from '../../modules/itemTypes';\nimport { a4LandscapeWidthPx, MAX_ITEM_GRID_HEIGHT_OIPP, MAX_ITEM_GRID_WIDTH_OIPP } from '../ItemGrid/gridUtil';\nimport { PRINT_ACTIONS_BAR_HEIGHT } from './PrintActionsBar';\nimport classes from './styles/PrintDashboard.module.css';\nimport './styles/print.css';\nimport './styles/print-oipp.css';\nexport class PrintDashboard extends Component {\n  state = {\n    initialized: false\n  };\n  initPrintDashboard = () => {\n    if (this.props.dashboard) {\n      this.setState({\n        initialized: true\n      }); //sort the items by Y pos so they print in order of top to bottom\n\n      const sortedItems = sortBy(this.props.items, ['y', 'x']);\n      this.props.setPrintDashboard(this.props.dashboard, sortedItems); // remove spacers - don't want empty pages\n\n      let spacerCount = 0;\n      this.props.items.forEach(item => {\n        if (item.type === SPACER) {\n          spacerCount += 1;\n          this.props.removeDashboardItem(item.id);\n        }\n      }); // Resize the items to the full page size\n\n      this.props.items.forEach(item => {\n        this.props.updateDashboardItem(Object.assign({}, item, {\n          w: MAX_ITEM_GRID_WIDTH_OIPP,\n          h: MAX_ITEM_GRID_HEIGHT_OIPP\n        }));\n      }); // insert page breaks into the document flow to create the \"pages\"\n      // when previewing the print\n\n      for (let i = 0; i < (this.props.items.length - spacerCount) * 2; i += 2) {\n        this.props.addDashboardItem({\n          type: PAGEBREAK,\n          position: i,\n          isStatic: false\n        });\n      }\n\n      this.props.addDashboardItem({\n        type: PRINT_TITLE_PAGE,\n        isOneItemPerPage: true\n      });\n    }\n  };\n\n  componentDidMount() {\n    this.initPrintDashboard();\n  }\n\n  componentDidUpdate() {\n    if (!this.state.initialized) {\n      this.initPrintDashboard();\n    }\n  }\n\n  render() {\n    const height = this.props.windowHeight - PRINT_ACTIONS_BAR_HEIGHT;\n    return <>\n                <PrintActionsBar id={this.props.dashboard.id} />\n                <div className={classes.wrapper} style={{\n        height\n      }}>\n                    <PrintInfo isLayout={false} />\n                    <div className={classes.pageOuter} style={{\n          width: a4LandscapeWidthPx\n        }}>\n                        <PrintItemGrid />\n                    </div>\n                </div>\n            </>;\n  }\n\n}\nPrintDashboard.propTypes = {\n  addDashboardItem: PropTypes.func,\n  dashboard: PropTypes.object,\n  items: PropTypes.array,\n  removeDashboardItem: PropTypes.func,\n  setPrintDashboard: PropTypes.func,\n  updateDashboardItem: PropTypes.func,\n  windowHeight: PropTypes.number\n};\n\nconst mapStateToProps = state => {\n  const id = sGetSelectedId(state);\n  const dashboard = id ? sGetDashboardById(state, id) : null;\n  return {\n    dashboard,\n    id,\n    items: sGetDashboardItems(state),\n    windowHeight: sGetWindowHeight(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setPrintDashboard: acSetPrintDashboard,\n  addDashboardItem: acAddPrintDashboardItem,\n  removeDashboardItem: acRemovePrintDashboardItem,\n  updateDashboardItem: acUpdatePrintDashboardItem\n})(PrintDashboard);","import { SET_WINDOW_HEIGHT } from '../reducers/windowHeight';\nexport const acSetWindowHeight = value => ({\n  type: SET_WINDOW_HEIGHT,\n  value\n});","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport isEmpty from 'lodash/isEmpty';\nimport i18n from '@dhis2/d2-i18n';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport debounce from 'lodash/debounce';\nimport DashboardsBar from '../ControlBar/DashboardsBar';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport ViewDashboard from './ViewDashboard';\nimport EditDashboard from './EditDashboard';\nimport NewDashboard from './NewDashboard';\nimport PrintDashboard from './PrintDashboard';\nimport PrintLayoutDashboard from './PrintLayoutDashboard';\nimport { tSelectDashboard } from '../../actions/dashboards';\nimport { acSetWindowHeight } from '../../actions/windowHeight';\nimport { sDashboardsIsFetching, sGetAllDashboards } from '../../reducers/dashboards';\nimport { sGetSelectedId, NON_EXISTING_DASHBOARD_ID } from '../../reducers/selected';\nimport { EDIT, NEW, VIEW, PRINT, PRINT_LAYOUT, isPrintMode } from './dashboardModes';\n\nconst setHeaderbarVisibility = mode => {\n  const header = document.getElementsByTagName('header')[0];\n\n  if (isPrintMode(mode)) {\n    header.classList.add('hidden');\n  } else {\n    header.classList.remove('hidden');\n  }\n};\n\nconst dashboardMap = {\n  [VIEW]: <ViewDashboard />,\n  [EDIT]: <EditDashboard />,\n  [NEW]: <NewDashboard />,\n  [PRINT]: <PrintDashboard />,\n  [PRINT_LAYOUT]: <PrintLayoutDashboard />\n};\nexport const Dashboard = ({\n  id,\n  mode,\n  dashboardsLoaded,\n  dashboardsIsEmpty,\n  routeId,\n  selectDashboard,\n  setWindowHeight\n}) => {\n  useEffect(() => {\n    setHeaderbarVisibility(mode);\n  }, [mode]);\n  useEffect(() => {\n    if (dashboardsLoaded && !dashboardsIsEmpty) {\n      selectDashboard(routeId);\n    }\n  }, [dashboardsLoaded, dashboardsIsEmpty, routeId]);\n  useEffect(() => {\n    const onResize = debounce(() => setWindowHeight(window.innerHeight), 300);\n    window.addEventListener('resize', onResize);\n    return () => {\n      window.removeEventListener('resize', onResize);\n    };\n  }, []);\n\n  if (!dashboardsLoaded) {\n    return <Layer translucent>\n                <CenteredContent>\n                    <CircularLoader />\n                </CenteredContent>\n            </Layer>;\n  }\n\n  if (mode === NEW) {\n    return dashboardMap[mode];\n  }\n\n  if (dashboardsIsEmpty) {\n    return <>\n                <DashboardsBar />\n                <DashboardVerticalOffset />\n                <NoContentMessage text={i18n.t('No dashboards found. Use the + button to create a new dashboard.')} />\n            </>;\n  }\n\n  if (id === NON_EXISTING_DASHBOARD_ID) {\n    return <>\n                <DashboardsBar />\n                <DashboardVerticalOffset />\n                <NoContentMessage text={i18n.t('Requested dashboard not found')} />\n            </>;\n  }\n\n  if (id === null) {\n    return <Layer translucent>\n                <CenteredContent>\n                    <CircularLoader />\n                </CenteredContent>\n            </Layer>;\n  }\n\n  return dashboardMap[mode];\n};\nDashboard.propTypes = {\n  dashboardsIsEmpty: PropTypes.bool,\n  dashboardsLoaded: PropTypes.bool,\n  id: PropTypes.string,\n  match: PropTypes.object,\n  // provided by the react-router-dom\n  mode: PropTypes.string,\n  routeId: PropTypes.string,\n  selectDashboard: PropTypes.func,\n  setWindowHeight: PropTypes.func\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const dashboards = sGetAllDashboards(state);\n  return {\n    dashboardsIsEmpty: isEmpty(dashboards),\n    dashboardsLoaded: !sDashboardsIsFetching(state),\n    id: sGetSelectedId(state),\n    routeId: ownProps.match?.params?.dashboardId || null\n  };\n};\n\nexport default connect(mapStateToProps, {\n  selectDashboard: tSelectDashboard,\n  setWindowHeight: acSetWindowHeight\n})(Dashboard);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { AlertBar, AlertStack } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport { sGetAlertMessage } from '../../reducers/alert';\nimport { acClearAlertMessage } from '../../actions/alert';\nexport const Alert = ({\n  message,\n  onClose\n}) => message ? <AlertStack>\n            <AlertBar onHidden={onClose} permanent>\n                {message}\n            </AlertBar>\n        </AlertStack> : null;\nAlert.propTypes = {\n  message: PropTypes.string,\n  onClose: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  message: sGetAlertMessage(state)\n});\n\nexport default connect(mapStateToProps, {\n  onClose: acClearAlertMessage\n})(Alert);","import { RECEIVED_USER } from '../reducers/user';\nexport const acReceivedUser = value => ({\n  type: RECEIVED_USER,\n  value\n});","import { SET_DIMENSIONS } from '../reducers/dimensions';\nimport { apiFetchDimensions } from '@dhis2/analytics';\nimport { sGetSettingsDisplayNameProperty } from '../reducers/settings';\nexport const acSetDimensions = dimensions => ({\n  type: SET_DIMENSIONS,\n  value: dimensions\n});\nexport const tSetDimensions = d2 => async (dispatch, getState) => {\n  const onSuccess = dimensions => {\n    dispatch(acSetDimensions(dimensions));\n  };\n\n  const onError = error => {\n    console.log('Error (apiFetchDimensions): ', error);\n    return error;\n  };\n\n  try {\n    const displayNameProp = sGetSettingsDisplayNameProperty(getState());\n    const dimensions = await apiFetchDimensions(d2, displayNameProp); // filter out CATEGORY that are not of type ATTRIBUTE\n\n    const filteredDimensions = dimensions.filter(dim => dim.dimensionType !== 'CATEGORY' || dim.dimensionType === 'CATEGORY' && dim.dataDimensionType === 'ATTRIBUTE');\n    return onSuccess(filteredDimensions);\n  } catch (err) {\n    return onError(err);\n  }\n};","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { CssVariables } from '@dhis2/ui';\nimport Dashboard from './Dashboard/Dashboard';\nimport AlertBar from './AlertBar/AlertBar';\nimport { acReceivedUser } from '../actions/user';\nimport { tFetchDashboards } from '../actions/dashboards';\nimport { tSetControlBarRows } from '../actions/controlBar';\nimport { tSetShowDescription } from '../actions/selected';\nimport { tSetDimensions } from '../actions/dimensions';\nimport { EDIT, VIEW, NEW, PRINT, PRINT_LAYOUT } from './Dashboard/dashboardModes';\nimport './App.css';\nexport class App extends Component {\n  componentDidMount() {\n    this.props.setCurrentUser(this.props.d2.currentUser);\n    this.props.fetchDashboards();\n    this.props.setControlBarRows();\n    this.props.setShowDescription();\n    this.props.setDimensions(this.props.d2);\n  }\n\n  getChildContext() {\n    return {\n      baseUrl: this.props.baseUrl,\n      i18n,\n      d2: this.props.d2\n    };\n  }\n\n  render() {\n    return <>\n                <CssVariables colors spacers />\n                <Router>\n                    <Switch>\n                        <Route exact path=\"/\" render={props => <Dashboard {...props} mode={VIEW} />} />\n                        <Route exact path=\"/new\" render={props => <Dashboard {...props} mode={NEW} />} />\n                        <Route exact path=\"/:dashboardId\" render={props => <Dashboard {...props} mode={VIEW} />} />\n                        <Route exact path=\"/:dashboardId/edit\" render={props => <Dashboard {...props} mode={EDIT} />} />\n                        <Route exact path=\"/:dashboardId/printoipp\" render={props => <Dashboard {...props} mode={PRINT} />} />\n                        <Route exact path=\"/:dashboardId/printlayout\" render={props => <Dashboard {...props} mode={PRINT_LAYOUT} />} />\n                    </Switch>\n                </Router>\n                <AlertBar />\n            </>;\n  }\n\n}\nApp.propTypes = {\n  fetchDashboards: PropTypes.func.isRequired,\n  setControlBarRows: PropTypes.func.isRequired,\n  setCurrentUser: PropTypes.func.isRequired,\n  setDimensions: PropTypes.func.isRequired,\n  setShowDescription: PropTypes.func.isRequired,\n  baseUrl: PropTypes.string,\n  d2: PropTypes.object\n};\nApp.childContextTypes = {\n  baseUrl: PropTypes.string,\n  i18n: PropTypes.object,\n  d2: PropTypes.object\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchDashboards: () => dispatch(tFetchDashboards()),\n    setControlBarRows: () => dispatch(tSetControlBarRows()),\n    setCurrentUser: currentUser => dispatch(acReceivedUser(currentUser)),\n    setDimensions: d2 => dispatch(tSetDimensions(d2)),\n    setShowDescription: () => dispatch(tSetShowDescription())\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(App);","/** @module reducers/selected */\nimport { validateReducer } from '../modules/util';\nexport const SET_STYLE = 'SET_STYLE';\nexport const DEFAULT_STATE_STYLE = 'LIST';\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\n\nconst style = (state = DEFAULT_STATE_STYLE, action) => {\n  switch (action.type) {\n    case SET_STYLE:\n      return validateReducer(action.value, DEFAULT_STATE_STYLE);\n\n    default:\n      return state;\n  }\n};\n\nexport default style;\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\n\nexport const sGetStyleRoot = state => state.style;","import { combineReducers } from 'redux';\nimport arraySort from 'd2-utilizr/lib/arraySort';\nimport dashboards, { sGetDashboardsRoot } from './dashboards';\nimport selected from './selected';\nimport dashboardsFilter, { ownerData, sGetFilterName, sGetFilterOrder, sGetFilterOwner } from './dashboardsFilter';\nimport controlBar from './controlBar';\nimport visualizations from './visualizations';\nimport editDashboard from './editDashboard';\nimport printDashboard from './printDashboard';\nimport messages from './messages';\nimport user from './user';\nimport alert from './alert';\nimport itemFilters from './itemFilters';\nimport style from './style';\nimport dimensions from './dimensions';\nimport settings from './settings';\nimport activeModalDimension from './activeModalDimension';\nimport windowHeight from './windowHeight';\nconst USER = 'system'; // Reducers\n\nexport default combineReducers({\n  dashboards,\n  selected,\n  dashboardsFilter,\n  controlBar,\n  visualizations,\n  messages,\n  user,\n  editDashboard,\n  printDashboard,\n  itemFilters,\n  style,\n  alert,\n  dimensions,\n  settings,\n  activeModalDimension,\n  windowHeight\n}); // Map constants to data\n\nconst mapConstToData = {\n  NAME: 'name',\n  ITEMS: 'numberOfItems',\n  CREATED: 'created',\n  OWNER: 'owner'\n}; // Selectors\n// Filter dashboards by name\n\nexport const sFilterDashboardsByName = (dashboards, filter) => dashboards.filter(d => d.displayName.toLowerCase().includes(filter.toLowerCase())); // Filter dashboards by owner, TODO FIXME\n\nexport const sFilterDashboardsByOwner = (dashboards, filter) => {\n  const ME = ownerData[1]; // TODO\n\n  const OTHERS = ownerData[2]; // TODO\n\n  switch (filter) {\n    case ME:\n      return dashboards.filter(d => d.owner === USER);\n\n    case OTHERS:\n      return dashboards.filter(d => d.owner !== USER);\n\n    default:\n      return dashboards;\n  }\n}; // Filter dashboards by order\n\nexport const sFilterDashboardsByOrder = (dashboards, filter) => {\n  const filterValues = filter.split(':');\n  const key = filterValues[0];\n  const direction = filterValues[1];\n  return arraySort(dashboards, direction, mapConstToData[key]);\n}; // Selectors dependency level 2\n// Get filtered dashboards\n\nexport const sGetFilteredDashboards = state => {\n  const dashboards = sGetDashboardsRoot(state);\n  const nameFilter = sGetFilterName(state);\n  const ownerFilter = sGetFilterOwner(state);\n  const orderFilter = sGetFilterOrder(state);\n  return sFilterDashboardsByOrder(sFilterDashboardsByName(sFilterDashboardsByOwner(dashboards, ownerFilter), nameFilter), orderFilter);\n};","import { createStore, applyMiddleware, compose } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport reducer from './reducers';\n\nconst configureStore = () => {\n  const middleware = [thunk]; // Enable Redux devtools if extension is installed instead of redux-logger\n\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n  if (!window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ && process.env.NODE_ENV !== 'production') {\n    middleware.push(createLogger());\n  }\n\n  return createStore(reducer, composeEnhancers(applyMiddleware(...middleware)));\n};\n\nexport default configureStore;","//------------------------------------------------------------------------------\n// <auto-generated>\n// This code was generated by d2-i18n-generate.\n//\n// Changes to this file may cause incorrect behavior and will be lost if\n// the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\nimport i18n from '@dhis2/d2-i18n';\nimport arTranslations from './ar/translations.json';\nimport ar_IQTranslations from './ar_IQ/translations.json';\nimport ckbTranslations from './ckb/translations.json';\nimport csTranslations from './cs/translations.json';\nimport daTranslations from './da/translations.json';\nimport enTranslations from './en/translations.json';\nimport esTranslations from './es/translations.json';\nimport frTranslations from './fr/translations.json';\nimport idTranslations from './id/translations.json';\nimport kmTranslations from './km/translations.json';\nimport loTranslations from './lo/translations.json';\nimport myTranslations from './my/translations.json';\nimport nbTranslations from './nb/translations.json';\nimport prsTranslations from './prs/translations.json';\nimport psTranslations from './ps/translations.json';\nimport ptTranslations from './pt/translations.json';\nimport pt_BRTranslations from './pt_BR/translations.json';\nimport ruTranslations from './ru/translations.json';\nimport svTranslations from './sv/translations.json';\nimport tetTranslations from './tet/translations.json';\nimport tgTranslations from './tg/translations.json';\nimport ukTranslations from './uk/translations.json';\nimport urTranslations from './ur/translations.json';\nimport uzTranslations from './uz/translations.json';\nimport uz_CyrlTranslations from './uz_Cyrl/translations.json';\nimport viTranslations from './vi/translations.json';\nimport zhTranslations from './zh/translations.json';\nimport zh_CNTranslations from './zh_CN/translations.json';\nconst namespace = 'default';\ni18n.addResources('ar', namespace, arTranslations);\ni18n.addResources('ar_IQ', namespace, ar_IQTranslations);\ni18n.addResources('ckb', namespace, ckbTranslations);\ni18n.addResources('cs', namespace, csTranslations);\ni18n.addResources('da', namespace, daTranslations);\ni18n.addResources('en', namespace, enTranslations);\ni18n.addResources('es', namespace, esTranslations);\ni18n.addResources('fr', namespace, frTranslations);\ni18n.addResources('id', namespace, idTranslations);\ni18n.addResources('km', namespace, kmTranslations);\ni18n.addResources('lo', namespace, loTranslations);\ni18n.addResources('my', namespace, myTranslations);\ni18n.addResources('nb', namespace, nbTranslations);\ni18n.addResources('prs', namespace, prsTranslations);\ni18n.addResources('ps', namespace, psTranslations);\ni18n.addResources('pt', namespace, ptTranslations);\ni18n.addResources('pt_BR', namespace, pt_BRTranslations);\ni18n.addResources('ru', namespace, ruTranslations);\ni18n.addResources('sv', namespace, svTranslations);\ni18n.addResources('tet', namespace, tetTranslations);\ni18n.addResources('tg', namespace, tgTranslations);\ni18n.addResources('uk', namespace, ukTranslations);\ni18n.addResources('ur', namespace, urTranslations);\ni18n.addResources('uz', namespace, uzTranslations);\ni18n.addResources('uz_Cyrl', namespace, uz_CyrlTranslations);\ni18n.addResources('vi', namespace, viTranslations);\ni18n.addResources('zh', namespace, zhTranslations);\ni18n.addResources('zh_CN', namespace, zh_CNTranslations);\nexport default i18n;","import React from 'react';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport dhis2theme from '@dhis2/d2-ui-core/theme/mui3.theme';\nimport { Provider as ReduxProvider } from 'react-redux';\nimport { D2Shim } from '@dhis2/app-runtime-adapter-d2';\nimport App from './components/App';\nimport configureStore from './configureStore';\nimport './AppWrapper.css';\nimport './locales';\n\nconst muiTheme = () => createMuiTheme(dhis2theme);\n\nconst d2Config = {\n  schemas: ['dashboard']\n}; // TODO: ER and EV plugins require the auth header in development mode.\n// Remove this when these plugins are rewritten\n\nconst authorization = process.env.REACT_APP_DHIS2_AUTHORIZATION || null;\n\nif (authorization) {\n  d2Config.headers = {\n    Authorization: authorization\n  };\n}\n\nconst AppWrapper = () => {\n  return <ReduxProvider store={configureStore()}>\n            <MuiThemeProvider theme={muiTheme()}>\n                <D2Shim d2Config={d2Config} i18nRoot=\"./i18n\">\n                    {({\n          d2\n        }) => {\n          if (!d2) {\n            // TODO: Handle errors in d2 initialization\n            return null;\n          }\n\n          return <App d2={d2} />;\n        }}\n                </D2Shim>\n            </MuiThemeProvider>\n        </ReduxProvider>;\n};\n\nexport default AppWrapper;","import isObject from 'lodash/isObject'; // validation\n\nexport function orNull(param) {\n  return param === undefined ? null : param;\n}\nexport function orArray(param) {\n  return Array.isArray(param) ? param : [];\n}\nexport function orObject(param) {\n  return isObject(param) ? param : {};\n} // array\n\nexport function arrayGetById(array, id) {\n  return array.find(item => item.id === id);\n} // object\n\nexport function arrayToIdMap(array) {\n  return array.reduce((obj, item) => {\n    obj[item.id] = item;\n    return obj;\n  }, {});\n} // date\n\nexport function getDate() {\n  const y = Math.floor(Math.random() * 3) + 2015;\n  const M = Math.floor(Math.random() * 12) + 1;\n  const d = Math.floor(Math.random() * 28) + 1; // const h = Math.floor(Math.random() * 23) + 1;\n  // const m = Math.floor(Math.random() * 59) + 1;\n  // const s = Math.floor(Math.random() * 59) + 1;\n\n  return new Date(`${y}-${M}-${d}`).toJSON().replace('T', ' ').substr(0, 10);\n}\nexport const formatDate = (value, uiLocale) => {\n  if (typeof global.Intl !== 'undefined' && Intl.DateTimeFormat) {\n    const locale = uiLocale || 'en';\n    return new Intl.DateTimeFormat(locale, {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    }).format(new Date(value));\n  }\n\n  return value.substr(0, 19).replace('T', ' ');\n};\n/**\n * Sorts an array of objects based on provided date property\n *\n * @param {Array} items Array of objects\n * @param {String} dateProp Name of the date property to be used for sorting\n * @param {Boolean} ascending Whether to sort ascending or descending\n */\n\nexport const sortByDate = (items, dateProp, ascending = true) => {\n  const values = Object.values(items);\n  values.sort((a, b) => {\n    const aDate = new Date(a[dateProp]);\n    const bDate = new Date(b[dateProp]);\n    return ascending ? aDate - bDate : bDate - aDate;\n  });\n  return values;\n}; // reducer validator\n\nexport const validateReducer = (value, defaultValue) => value === undefined || value === null ? defaultValue : value;\nexport const getBaseUrl = d2 => {\n  const api = d2.Api.getApi();\n  const idx = api.baseUrl.indexOf('/api');\n  return idx > -1 ? api.baseUrl.slice(0, idx) : api.baseUrl;\n};\nexport const getWithoutId = object => ({ ...object,\n  id: undefined\n});","import i18n from '@dhis2/d2-i18n';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\nimport ExtensionIcon from '@material-ui/icons/Extension';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport PersonIcon from '@material-ui/icons/Person';\nimport FontDownloadIcon from '@material-ui/icons/FontDownload';\nimport EmailIcon from '@material-ui/icons/Email';\nimport CropFreeIcon from '@material-ui/icons/CropFree';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\nimport { getBaseUrl } from './util'; // Item types\n\nexport const VISUALIZATION = 'VISUALIZATION';\nexport const REPORT_TABLE = 'REPORT_TABLE';\nexport const CHART = 'CHART';\nexport const MAP = 'MAP';\nexport const EVENT_REPORT = 'EVENT_REPORT';\nexport const EVENT_CHART = 'EVENT_CHART';\nexport const APP = 'APP';\nexport const REPORTS = 'REPORTS';\nexport const RESOURCES = 'RESOURCES';\nexport const USERS = 'USERS';\nexport const MESSAGES = 'MESSAGES';\nexport const TEXT = 'TEXT';\nexport const SPACER = 'SPACER';\nexport const PAGEBREAK = 'PAGEBREAK';\nexport const PRINT_TITLE_PAGE = 'PRINT_TITLE_PAGE';\nconst DOMAIN_TYPE_AGGREGATE = 'AGGREGATE';\nconst DOMAIN_TYPE_TRACKER = 'TRACKER'; // Dashboard helpers\n\nexport const isVisualizationType = item => !!itemTypeMap[item.type].isVisualizationType;\nexport const hasMapView = itemType => itemTypeMap[itemType].domainType === DOMAIN_TYPE_AGGREGATE;\nexport const isTrackerDomainType = itemType => itemTypeMap[itemType].domainType === DOMAIN_TYPE_TRACKER;\nexport const getDefaultItemCount = itemType => itemTypeMap[itemType].defaultItemCount || 5;\nexport const getAppName = itemType => itemTypeMap[itemType].appName || ''; // Item type map\n\nexport const itemTypeMap = {\n  [VISUALIZATION]: {\n    id: VISUALIZATION,\n    endPointName: 'visualizations',\n    propName: 'visualization',\n    pluralTitle: i18n.t('Visualizations'),\n    appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n    appName: 'Data Visualizer',\n    defaultItemCount: 10\n  },\n  [REPORT_TABLE]: {\n    id: REPORT_TABLE,\n    endPointName: 'visualizations',\n    propName: 'visualization',\n    pluralTitle: i18n.t('Pivot tables'),\n    domainType: DOMAIN_TYPE_AGGREGATE,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n    appName: 'Data Visualizer'\n  },\n  [CHART]: {\n    id: CHART,\n    endPointName: 'visualizations',\n    propName: 'visualization',\n    pluralTitle: i18n.t('Charts'),\n    domainType: DOMAIN_TYPE_AGGREGATE,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n    appName: 'Data Visualizer'\n  },\n  [MAP]: {\n    id: MAP,\n    endPointName: 'maps',\n    propName: 'map',\n    pluralTitle: i18n.t('Maps'),\n    domainType: DOMAIN_TYPE_AGGREGATE,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-maps/?id=${id}`,\n    appName: 'Maps'\n  },\n  [EVENT_REPORT]: {\n    id: EVENT_REPORT,\n    endPointName: 'eventReports',\n    propName: 'eventReport',\n    pluralTitle: i18n.t('Event reports'),\n    domainType: DOMAIN_TYPE_TRACKER,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-event-reports/?id=${id}`,\n    appName: 'Event Reports'\n  },\n  [EVENT_CHART]: {\n    id: EVENT_CHART,\n    endPointName: 'eventCharts',\n    propName: 'eventChart',\n    pluralTitle: i18n.t('Event charts'),\n    domainType: DOMAIN_TYPE_TRACKER,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-event-visualizer/?id=${id}`,\n    appName: 'Event Visualizer'\n  },\n  [APP]: {\n    endPointName: 'apps',\n    propName: 'appKey',\n    pluralTitle: i18n.t('Apps')\n  },\n  [REPORTS]: {\n    id: REPORTS,\n    endPointName: 'reports',\n    propName: 'reports',\n    pluralTitle: i18n.t('Reports'),\n    appUrl: (id, type) => {\n      switch (type) {\n        case 'HTML':\n          return `dhis-web-reports/#/standard-report/view/${id}`;\n\n        case 'JASPER_REPORT_TABLE':\n        case 'JASPER_JDBC':\n        default:\n          return `api/reports/${id}/data.pdf?t=${new Date().getTime()}`;\n      }\n    }\n  },\n  [RESOURCES]: {\n    id: RESOURCES,\n    endPointName: 'resources',\n    propName: 'resources',\n    pluralTitle: i18n.t('Resources'),\n    appUrl: id => `api/documents/${id}/data`\n  },\n  [USERS]: {\n    id: USERS,\n    endPointName: 'users',\n    propName: 'users',\n    pluralTitle: i18n.t('Users'),\n    appUrl: id => `dhis-web-dashboard-integration/profile.action?id=${id}`\n  },\n  [TEXT]: {\n    id: TEXT,\n    propName: 'text'\n  },\n  [MESSAGES]: {\n    propName: 'messages'\n  },\n  [SPACER]: {\n    propName: 'text'\n  },\n  [PAGEBREAK]: {\n    propName: 'text'\n  },\n  [PRINT_TITLE_PAGE]: {\n    propName: 'text'\n  }\n};\nexport const getEndPointName = type => itemTypeMap[type].endPointName;\nexport const getItemUrl = (type, item, d2) => {\n  let url;\n\n  if (type === APP) {\n    url = item.launchUrl;\n  }\n\n  if (itemTypeMap[type] && itemTypeMap[type].appUrl) {\n    url = `${getBaseUrl(d2)}/${itemTypeMap[type].appUrl(item.id, item.type)}`;\n  }\n\n  return url;\n};\nexport const getItemIcon = type => {\n  switch (type) {\n    case REPORT_TABLE:\n    case EVENT_REPORT:\n    case REPORTS:\n      return TableIcon;\n\n    case CHART:\n    case EVENT_CHART:\n      return ChartIcon;\n\n    case MAP:\n      return MapIcon;\n\n    case APP:\n      return ExtensionIcon;\n\n    case RESOURCES:\n      return DescriptionIcon;\n\n    case USERS:\n      return PersonIcon;\n\n    case TEXT:\n      return FontDownloadIcon;\n\n    case MESSAGES:\n      return EmailIcon;\n\n    case SPACER:\n      return CropFreeIcon;\n\n    default:\n      return NotInterestedIcon;\n  }\n};","import isFunction from 'd2-utilizr/lib/isFunction';\nimport { orObject } from '../../modules/util'; // Dimensions for the react-grid-layout\n\nexport const GRID_COMPACT_TYPE = 'vertical'; // vertical | horizonal | null\n\nexport const GRID_ROW_HEIGHT = 10;\nconst GRID_COLUMN_WIDTH_PX = 20;\nconst GRID_LAYOUT = 'FLEXIBLE'; // FIXED | FLEXIBLE\n\nexport const MARGIN = [10, 10];\nexport const NEW_ITEM_SHAPE = {\n  x: 0,\n  y: 0,\n  w: 20,\n  h: 29\n}; // Dimensions for getShape\n\nconst NUMBER_OF_ITEM_COLS = 2;\nconst GRID_COLUMNS = 60;\nconst MAX_ITEM_GRID_WIDTH = GRID_COLUMNS - 1;\nexport const MAX_ITEM_GRID_HEIGHT = 34;\nexport const MAX_ITEM_GRID_HEIGHT_OIPP = 35;\nexport const MAX_ITEM_GRID_WIDTH_OIPP = 56; // for A4 landscape (297x210mm)\n// 794 px = (21cm / 2.54) * 96 pixels/inch\n// 1122 px = 29.7 /2.54 * 96 pixels/inch\n// const a4LandscapeHeightPx = 794\n\nexport const a4LandscapeWidthPx = 1102;\nexport const getGridColumns = () => {\n  switch (GRID_LAYOUT) {\n    case 'FLEXIBLE':\n      return GRID_COLUMNS;\n\n    case 'FIXED':\n      return Math.floor((window.innerWidth - 20) / GRID_COLUMN_WIDTH_PX);\n\n    default:\n      return GRID_COLUMNS;\n  }\n}; // isNonNegativeInteger\n\nconst isNonNegativeInteger = x => Number.isInteger(x) && x >= 0; // Does the item have all the shape properties?\n\n\nexport const hasShape = item => isNonNegativeInteger(item.x) && isNonNegativeInteger(item.y) && isNonNegativeInteger(item.w) && isNonNegativeInteger(item.h); // returns a rectangular grid block dimensioned with x, y, w, h in grid units.\n// based on a grid with 3 items across\n\nexport const getShape = i => {\n  if (!isNonNegativeInteger(i)) {\n    throw new Error('Invalid grid block number');\n  }\n\n  const col = i % NUMBER_OF_ITEM_COLS;\n  const row = Math.floor(i / NUMBER_OF_ITEM_COLS);\n  const itemWidth = Math.floor(MAX_ITEM_GRID_WIDTH / NUMBER_OF_ITEM_COLS);\n  const itemHeight = GRID_ROW_HEIGHT * 2;\n  return {\n    x: col * itemWidth,\n    y: row * itemHeight,\n    w: itemWidth,\n    h: itemHeight\n  };\n};\nexport const getGridItemProperties = itemId => {\n  return {\n    i: itemId,\n    minH: 4 // minimum height for item\n\n  };\n};\nexport const getPageBreakItemShape = (yPos, isStatic = true) => {\n  return {\n    x: 0,\n    y: yPos,\n    w: MAX_ITEM_GRID_WIDTH,\n    h: 5,\n    static: !!isStatic,\n    minH: 1\n  };\n};\nexport const getPrintTitlePageItemShape = isOneItemPerPage => {\n  return {\n    x: 0,\n    y: 0,\n    w: isOneItemPerPage ? MAX_ITEM_GRID_WIDTH_OIPP : MAX_ITEM_GRID_WIDTH,\n    h: MAX_ITEM_GRID_HEIGHT,\n    static: true,\n    minH: 1\n  };\n};\n/**\n * Calculates the grid item's original height in pixels based\n * on the height in grid units. This calculation\n * is copied directly from react-grid-layout GridItem.js (calcPosition)\n *\n * @param {Object} item item containing shape (x, y, w, h)\n */\n\nexport const getOriginalHeight = item => {\n  const originalHeight = Math.round(GRID_ROW_HEIGHT * item.h + Math.max(0, item.h - 1) * MARGIN[1]);\n  return {\n    originalHeight\n  };\n};\n/**\n * Returns an array of items containing the x, y, w, h dimensions\n * and the item's originalheight in pixels\n * @function\n * @param {Array} items\n * @returns {Array}\n */\n\nexport const withShape = items => items.map((item, index) => {\n  const itemWithShape = hasShape(item) ? item : Object.assign({}, item, getShape(index));\n  return Object.assign({}, itemWithShape, getOriginalHeight(itemWithShape));\n});\nexport const getGridItemDomId = id => `item-${id}`;\nexport function onItemResize(id) {\n  const el = orObject(document.querySelector(`#${getGridItemDomId(id)}`));\n  if (isFunction(el.setViewportSize)) setTimeout(() => el.setViewportSize(el.clientWidth - 5, el.clientHeight - 5), 10);\n}","import isObject from 'lodash/isObject';\nimport { VIS_TYPE_COLUMN, VIS_TYPE_PIVOT_TABLE } from '@dhis2/analytics';\nimport { apiFetchFavorite, getMapFields } from '../../../api/metadata';\nimport { REPORT_TABLE, CHART, MAP, EVENT_REPORT, EVENT_CHART, itemTypeMap } from '../../../modules/itemTypes';\nimport { getBaseUrl, getWithoutId } from '../../../modules/util';\nimport { getGridItemDomId } from '../../ItemGrid/gridUtil'; //external plugins\n\nconst itemTypeToExternalPlugin = {\n  [MAP]: 'mapPlugin',\n  [EVENT_REPORT]: 'eventReportPlugin',\n  [EVENT_CHART]: 'eventChartPlugin'\n};\n\nconst hasIntegratedPlugin = type => [CHART, REPORT_TABLE].includes(type);\n\nconst getPlugin = type => {\n  if (hasIntegratedPlugin(type)) {\n    return true;\n  }\n\n  const pluginName = itemTypeToExternalPlugin[type];\n  return global[pluginName];\n};\n\nexport const THEMATIC_LAYER = 'thematic';\nexport const pluginIsAvailable = (item = {}, visualization = {}) => {\n  const type = visualization.activeType || item.type;\n  return !!getPlugin(type);\n};\nexport const extractFavorite = item => {\n  if (!isObject(item)) {\n    return null;\n  }\n\n  const propName = itemTypeMap[item.type].propName;\n  return item[propName] || item.reportTable || item.chart || item.map || item.eventReport || item.eventChart || {};\n};\nexport const extractMapView = map => map.mapViews && map.mapViews.find(mv => mv.layer.includes(THEMATIC_LAYER));\nexport const loadPlugin = (plugin, config, credentials) => {\n  if (!(plugin && plugin.load)) {\n    return;\n  }\n\n  plugin.url = credentials.baseUrl;\n  plugin.loadingIndicator = true;\n  plugin.dashboard = true;\n\n  if (credentials.auth) {\n    plugin.auth = credentials.auth;\n  }\n\n  plugin.load(config);\n};\nexport const getId = item => extractFavorite(item).id;\nexport const getName = item => extractFavorite(item).name;\nexport const getDescription = item => extractFavorite(item).description;\nexport const getLink = (item, d2) => {\n  const baseUrl = getBaseUrl(d2);\n  const appUrl = itemTypeMap[item.type].appUrl(getId(item));\n  return `${baseUrl}/${appUrl}`;\n};\nexport const load = async (item, visualization, {\n  credentials,\n  activeType,\n  options = {}\n}) => {\n  const config = { ...visualization,\n    ...options,\n    el: getGridItemDomId(item.id)\n  };\n  const type = activeType || item.type;\n  const plugin = getPlugin(type);\n  loadPlugin(plugin, config, credentials);\n};\nexport const fetch = async item => {\n  const fetchedFavorite = await apiFetchFavorite(getId(item), item.type, {\n    fields: item.type === MAP ? getMapFields() : null\n  });\n  return fetchedFavorite;\n};\nexport const resize = item => {\n  const plugin = getPlugin(item.type);\n\n  if (plugin && plugin.resize) {\n    plugin.resize(getGridItemDomId(item.id));\n  }\n};\nexport const unmount = (item, activeType) => {\n  const plugin = getPlugin(activeType);\n\n  if (plugin && plugin.unmount) {\n    plugin.unmount(getGridItemDomId(item.id));\n  }\n};\nexport const getVisualizationConfig = (visualization, originalType, activeType) => {\n  if (originalType === MAP && originalType !== activeType) {\n    const extractedMapView = extractMapView(visualization);\n\n    if (extractedMapView === undefined) {\n      return null;\n    }\n\n    return getWithoutId({ ...visualization,\n      ...extractedMapView,\n      mapViews: undefined,\n      type: activeType === CHART ? VIS_TYPE_COLUMN : VIS_TYPE_PIVOT_TABLE\n    });\n  } else if (originalType === REPORT_TABLE && activeType === CHART) {\n    return getWithoutId({ ...visualization,\n      type: VIS_TYPE_COLUMN\n    });\n  } else if (originalType === CHART && activeType === REPORT_TABLE) {\n    return getWithoutId({ ...visualization,\n      type: VIS_TYPE_PIVOT_TABLE\n    });\n  }\n\n  return getWithoutId(visualization);\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemHeaderWrap\":\"ItemHeader_itemHeaderWrap__JcBP7\",\"itemTitle\":\"ItemHeader_itemTitle__34rHa\",\"itemActionsWrap\":\"ItemHeader_itemActionsWrap__Gx3D9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"leftControls\":\"DashboardsBar_leftControls__k-Y57\",\"rightControls\":\"DashboardsBar_rightControls__1cyr1\",\"topMargin\":\"DashboardsBar_topMargin__FKGgr\"};","import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { getEndPointName } from '../modules/itemTypes'; // Id, name\n\nexport const getIdNameFields = ({\n  rename\n} = {}) => ['id', `${rename ? 'displayName~rename(name)' : 'name,displayName'}`]; // Item\n\nexport const getItemFields = () => ['dimensionItem~rename(id)', 'displayName~rename(name)', 'dimensionItemType']; // Dimension\n\nexport const getDimensionFields = ({\n  withItems\n}) => arrayClean(['dimension', 'legendSet[id]', 'filter', 'programStage', withItems ? `items[${getItemFields().join(',')}]` : ``]); // Axis\n\nexport const getAxesFields = ({\n  withItems\n}) => [`columns[${getDimensionFields({\n  withItems\n}).join(',')}]`, `rows[${getDimensionFields({\n  withItems\n}).join(',')}]`, `filters[${getDimensionFields({\n  withItems\n}).join(',')}]`]; // Favorite\n\nexport const getFavoriteFields = ({\n  withDimensions,\n  withOptions\n}) => {\n  return arrayClean([`${getIdNameFields({\n    rename: true\n  }).join(',')}`, 'displayDescription~rename(description)', withDimensions ? `${getAxesFields({\n    withItems: true\n  }).join(',')}` : ``, withOptions ? ['*', '!attributeDimensions', '!attributeValues', '!category', '!categoryDimensions', '!categoryOptionGroupSetDimensions', '!columnDimensions', '!dataDimensionItems', '!dataElementDimensions', '!dataElementGroupSetDimensions', '!filterDimensions', '!itemOrganisationUnitGroups', '!lastUpdatedBy', '!organisationUnitGroupSetDimensions', '!organisationUnitLevels', '!organisationUnits', '!programIndicatorDimensions', '!relativePeriods', '!reportParams', '!rowDimensions', '!translations', '!userOrganisationUnit', '!userOrganisationUnitChildren', '!userOrganisationUnitGrandChildren'].join(',') : '']);\n};\nexport const getFavoritesFields = ({\n  withDimensions\n}) => [`reportTable[${getFavoriteFields({\n  withDimensions\n}).join(',')}]`, `chart[${['type', ...getFavoriteFields({\n  withDimensions\n})].join(',')}]`, `map[${getFavoriteFields({\n  withDimensions\n}).join(',')}]`, `eventReport[${getFavoriteFields({\n  withDimensions\n}).join(',')}]`, `eventChart[${getFavoriteFields({\n  withDimensions\n}).join(',')}]`]; // List item\n\nexport const getListItemFields = () => [`reports[${['type', ...getIdNameFields({\n  rename: true\n})].join(',')}]`, `resources[${getIdNameFields({\n  rename: true\n}).join(',')}]`, `users[${getIdNameFields({\n  rename: true\n}).join(',')}]`]; // Map\n\nexport const getMapFields = () => [`${getIdNameFields({\n  rename: true\n}).join(',')}`, 'user,longitude,latitude,zoom,basemap', `mapViews[${getFavoriteFields({\n  withDimensions: true,\n  withOptions: true\n})}]`]; // Api\n// Get more info about the favorite of a dashboard item\n\nexport const apiFetchFavorite = (id, type, {\n  fields\n}) => getInstance().then(d2 => d2.Api.getApi().get(`${getEndPointName(type)}/${id}`, {\n  fields: fields || getFavoriteFields({\n    withDimensions: true,\n    withOptions: true\n  })\n}));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ControlBar_root__iikeX\",\"content\":\"ControlBar_content__26Z33\",\"draghandle\":\"ControlBar_draghandle__27zum\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"DashboardItemChip_link__21drZ\",\"icon\":\"DashboardItemChip_icon__2hcIR\",\"selected\":\"DashboardItemChip_selected__r00uP\",\"unselected\":\"DashboardItemChip_unselected__2H9l2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ClearButton_button__33ZbK\",\"icon\":\"ClearButton_icon__vTJm3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"showMore\":\"ShowMoreButton_showMore__3S3He\",\"disabled\":\"ShowMoreButton_disabled__2FQNA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuItem\":\"ContentMenuItem_menuItem__vbKn3\",\"launchLink\":\"ContentMenuItem_launchLink__2Nql9\",\"label\":\"ContentMenuItem_label__ANfH1\",\"buttonInsert\":\"ContentMenuItem_buttonInsert__1joHg\"};"],"sourceRoot":""}
{"version":3,"sources":["modules/itemTypes.js","components/Item/ListItem/Item.module.css","reducers/user.js","reducers/dashboards.js","reducers/selected.js","reducers/visualizations.js","api/metadata.js","api/index.js","api/dashboards.js","components/ItemGrid/gridUtil.js","reducers/messages.js","api/messages.js","reducers/snackbar.js","actions/snackbar.js","components/SnackbarMessage/SnackbarMessage.js","components/Item/VisualizationItem/plugin.js","actions/selected.js","api/localStorage.js","components/Item/MessagesItem/actions.js","reducers/editDashboard.js","reducers/editItemFilters.js","reducers/itemFilters.js","actions/itemFilters.js","actions/editItemFilters.js","api/editDashboard.js","actions/editDashboard.js","actions/dashboards.js","reducers/controlBar.js","api/controlBar.js","actions/controlBar.js","reducers/dimensions.js","reducers/settings.js","actions/dimensions.js","components/ControlBar/ShowMoreButton.js","components/ControlBar/controlBarDimensions.js","components/ControlBar/ControlBar.js","icons/Star.js","api/dataStatistics.js","components/ControlBar/DashboardItemChip.js","icons/AddCircle.js","icons/Clear.js","components/ControlBar/ClearButton.js","reducers/dashboardsFilter.js","components/ControlBar/Filter.js","components/ControlBar/DashboardsBar.js","actions/dashboardsFilter.js","components/Dashboard/DashboardVerticalOffset.js","components/ItemSelector/HeaderMenuItem.js","icons/Launch.js","components/ItemSelector/ContentMenuItem.js","components/ItemSelector/selectableItems.js","components/ItemSelector/CategorizedMenuGroup.js","components/ItemSelector/actions.js","components/ItemSelector/SinglesMenuGroup.js","components/ItemSelector/ItemSelector.js","components/TitleBar/EditTitleBar.js","components/ItemFilter/FilterDialog.js","reducers/activeModalDimension.js","actions/activeModalDimension.js","components/ItemFilter/FilterSelector.js","components/TitleBar/Info.js","components/TitleBar/ViewTitleBar.js","components/TitleBar/TitleBar.js","components/Item/VisualizationItem/DefaultPlugin.js","components/Item/ItemHeader.js","components/Item/VisualizationItem/ItemFooter.js","components/Item/ItemHeaderButton.js","components/Item/VisualizationItem/ItemHeaderButtons.js","modules/memoizeOne.js","components/Item/VisualizationItem/Item.js","widgets/Line.js","components/Item/MessagesItem/Item.js","components/Item/NotSupportedItem/Item.js","icons/Description.js","icons/Delete.js","components/Item/ListItem/Item.js","components/Item/ListItem/actions.js","components/Item/TextItem/Item.js","components/Item/AppItem/Item.js","components/Item/SpacerItem/Item.js","components/Item/Item.js","components/ItemGrid/DeleteItemButton.js","widgets/NoContentMessage.js","components/Item/ProgressiveLoadingContainer.js","components/ItemGrid/ItemGrid.js","components/FilterBar/FilterBadge.js","components/FilterBar/FilterBar.js","components/Dashboard/DashboardContent.js","components/Dashboard/ViewDashboard.js","components/ControlBar/ConfirmDeleteDialog.js","components/ControlBar/EditBar.js","components/Dashboard/EditDashboard.js","components/Dashboard/NewDashboard.js","components/Dashboard/Dashboard.js","components/Dashboard/dashboardModes.js","components/App.js","actions/user.js","locales/index.js","reducers/style.js","reducers/index.js","configureStore.js","index.js","components/ControlBar/styles/DashboardsBar.module.css","components/ItemSelector/styles/ContentMenuItem.module.css","modules/util.js","components/ControlBar/styles/ControlBar.module.css","components/ControlBar/styles/ClearButton.module.css","components/ItemSelector/styles/CategorizedMenuGroup.module.css"],"names":["REPORT_TABLE","CHART","MAP","EVENT_REPORT","EVENT_CHART","APP","REPORTS","RESOURCES","USERS","MESSAGES","TEXT","SPACER","DOMAIN_TYPE_AGGREGATE","VISUALIZATION_TYPE_TABLE","VISUALIZATION_TYPE_CHART","VISUALIZATION_TYPE_MAP","spacerContent","emptyTextItemContent","isSpacerType","item","type","text","isTextType","isPluginType","itemTypeMap","getPlugin","pluginName","plugin","global","_itemTypeMap","Object","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","id","endPointName","propName","pluralTitle","i18n","t","domainType","visualizationType","appUrl","concat","appName","getEndPointName","getItemUrl","d2","url","launchUrl","getBaseUrl","getItemIcon","TableIcon","ChartIcon","MapIcon","ExtensionIcon","DescriptionIcon","PersonIcon","FontDownloadIcon","EmailIcon","CropFreeIcon","NotInterestedIcon","module","exports","list","itemicon","link","deleteicon","deletebutton","DEFAULT_STATE_USER","username","uiLocale","isSuperuser","sGetUserUsername","state","user","DEFAULT_STATE_DASHBOARDS","byId","items","updateDashboardProp","_ref","dashboardId","prop","value","objectSpread","defineProperty","sGetDashboardsRoot","dashboards","sGetDashboardById","orObject","sDashboardsIsFetching","sGetAllDashboards","sGetDashboardItems","sGetStarredDashboards","values","filter","dashboard","starred","sGetUnstarredDashboards","sGetDashboardsSortedByStarred","toConsumableArray","arraySort","getCustomDashboards","data","arrayFrom","map","d","name","displayName","description","displayDescription","favorite","owner","created","split","join","substr","lastUpdated","access","numberOfItems","orArray","dashboardItems","length","combineReducers","arguments","undefined","action","validateReducer","isLoading","showDescription","sGetSelectedRoot","selected","sGetSelectedId","sGetSelectedIsLoading","sGetSelectedShowDescription","DEFAULT_STATE_VISUALIZATIONS","isEmpty","p","sGetVisualization","visualizations","sGetVisualizationsRoot","getIdNameFields","rename","getDimensionFields","_ref2","withItems","arrayClean","getAxesFields","_ref3","getFavoriteFields","_ref4","withDimensions","withOptions","getFavoritesFields","_ref5","apiFetchFavorite","_ref6","fields","getInstance","then","Api","getApi","get","onError","error","console","log","getDashboardItemsFields","withFavorite","getDashboardFields","apiFetchDashboard","models","catch","apiStarDashboard","isStarred","post","delete","apiDeleteDashboard","MARGIN","NEW_ITEM_SHAPE","x","y","w","h","isNonNegativeInteger","Number","isInteger","hasShape","withShape","index","itemWithShape","assign","i","Error","col","row","Math","floor","itemWidth","GRID_ROW_HEIGHT","getShape","originalHeight","round","max","getOriginalHeight","getGridItemDomId","onItemResize","el","document","querySelector","isFunction","setViewportSize","setTimeout","clientWidth","clientHeight","sGetMessagesRoot","messages","getMessages","DEFAULT_STATE_SNACKBAR","message","duration","open","acCloseSnackbar","loadingDashboardMsg","SnackbarMessageContent","react_default","a","createElement","style","fontWeight","connect","_sGetSnackbar","snackbar","sGetSnackbar","snackbarOpen","snackbarMessage","snackbarDuration","onCloseSnackbar","props","Snackbar_default","zIndex","SnackbarMessage_SnackbarMessageContent","autoHideDuration","onClose","pluginIsAvailable","activeType","extractFavorite","isObject","reportTable","chart","eventReport","eventChart","loadPlugin","config","credentials","load","baseUrl","loadingIndicator","auth","getId","getName","getLink","asyncToGenerator","regenerator_default","mark","_callee","visualization","wrap","_context","prev","next","stop","_x","_x2","_x3","apply","this","fetch","_callee2","fetchedFavorite","_context2","sent","abrupt","_x4","resize","unmount","getVisualizationConfig","originalType","extractedMapView","mapViews","find","mv","layer","includes","getWithoutId","acSetSelectedId","acSetSelectedIsLoading","acReceivedVisualization","tLoadDashboard","dispatch","dash","acAppendDashboards","Promise","resolve","t0","tSetSelectedDashboardById","getState","snackbarTimeout","onSuccess","dashboardName","customDashboard","acSetDashboardItems","localStorage","setItem","forEach","messageConversations","clearTimeout","DEFAULT_STATE_EDIT_DASHBOARD","NEW_DASHBOARD_STATE","sGetEditDashboardRoot","editDashboard","sGetIsEditing","sGetEditDashboardItems","DEFAULT_STATE_EDIT_ITEM_FILTERS","sGetEditItemFiltersRoot","editItemFilters","DEFAULT_STATE_ITEM_FILTERS","sGetItemFiltersRoot","itemFilters","sGetFiltersKeys","keys","acRemoveItemFilter","acRemoveEditItemFilter","saveDashboard","width","height","save","msg","response","uid","updateDashboard","postDashboard","create","acAddDashboardItem","itemPropName","generateUid","content","acUpdateDashboardItem","acRemoveDashboardItem","arrayToIdMap","acSetDashboardStarred","tFetchDashboards","collection","paging","toArray","userRows","sGetControlBarUserRows","controlBar","sGetControlBarRoot","KEY","hasNamespace","currentUser","dataStore","has","getNamespace","apiGetControlBarRows","_callee3","namespace","_context3","t1","t2","key","apiPostControlBarRows","_callee4","rows","_context4","set","_x5","acSetControlBarUserRows","DEFAULT_DIMENSIONS","pe","FIXED_DIMENSIONS","ou","sGetDimensions","dimensions","DEFAULT_SETTINGS","keyDateFormat","keyAnalysisRelativePeriod","keyAnalysisDigitGroupSeparator","displayNameProperty","rootOrganisationUnit","sGetSettings","settings","sGetSettingsDisplayNameProperty","acSetDimensions","keyBy","sortBy","toLowerCase","styles","showMore","color","colors","grey700","cursor","fontSize","paddingTop","&:hover","textDecoration","disabled","grey500","withStyles","onClick","isMaxHeight","classes","textAlign","className","MIN_ROW_COUNT","getRowsHeight","getNumRowsFromHeight","FIRST_ROW_PADDING_HEIGHT","getTopOffset","getControlBarHeight","ControlBar","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onStartDrag","setState","dragging","window","addEventListener","onDrag","onEndDrag","event","preventDefault","stopPropagation","newHeight","clientY","onChangeHeight","requestAnimationFrame","removeEventListener","draghandle","onMouseDown","rootStyle","top","backgroundColor","editMode","yellow050","white","paddingBottom","transition","root","children","renderDragHandle","React","Component","defaultProps","StarIcon","xmlns","viewBox","fill","apiPostDataStatistics","eventType","chip","margin","grey600","display","verticalAlign","icon","marginTop","unselected","label","chipProps","selectedState","Star","Link","to","debounce","Chip","AddCircleIcon","teal600","ClearIcon","grey800","ClearButton","onClear","button","Clear","ownerData","DEFAULT_STATE_DASHBOARDS_FILTER_NAME","DEFAULT_STATE_DASHBOARDS_FILTER_OWNER","order","sGetDashboardsFilterRoot","dashboardsFilter","sGetFilterName","KEYCODE_ENTER","KEYCODE_ESCAPE","filterField","searchIcon","Filter","_Component","setFilterValue","onChangeName","target","handleKeyUp","keyCode","onKeypressEnter","inherits","createClass","nextProps","_this$props","startAdornment","InputAdornment_default","position","Search_default","endAdornment","ControlBar_ClearButton","Input_default","placeholder","onChange","onKeyUp","Function","prototype","MAX_ROW_COUNT","DashboardsBar","_getPrototypeOf2","_len","args","Array","_key","setInitialDashboardState","adjustedHeight","newRows","newRowCount","min","onToggleMaxHeight","onSelectDashboard","history","push","selectedId","onChangeFilterName","rowCount","controlBarHeight","contentWrapperStyle","padding","overflowY","components_ControlBar_ControlBar","leftControls","marginRight","AddCircle","ControlBar_Filter","ControlBar_DashboardItemChip","ControlBar_ShowMoreButton","mapDispatchToProps","withRouter","stateProps","dispatchProps","ownProps","displayDashboards","HeaderMenuItem","title","MenuItem","dense","LaunchIcon","LaunchLink","e","launchLink","rel","href","Launch","InsertButton","buttonInsert","ContentMenuItem","onInsert","ItemIcon","menuItem","ContentMenuItem_LaunchLink","ContentMenuItem_InsertButton","singleItems","header","categorizedItems","listItemTypes","CategorizedMenuGroup","addItem","tAddListItemContent","newItem","toggleSeeMore","seeMore","onChangeItemsLimit","_this2","_this$props2","hasMore","react","ItemSelector_HeaderMenuItem","itemUrl","context","ItemSelector_ContentMenuItem","showMoreButton","Divider","contextTypes","PropTypes","object","isRequired","dashboardItem","listItemType","dashboardItemIndex","findIndex","category","addToDashboard","ItemSearchField","InputField","onFocus","ItemSelector","closeList","openList","_","fetchItems","anchorEl","currentTarget","setFilter","getCategorizedMenuGroups","itemType","allItems","maxOptions","slice","ItemSelector_CategorizedMenuGroup","getSinglesMenuGroups","ItemSelector_SinglesMenuGroup","getMenuGroups","queryString","add","Set","ItemSelector_ItemSearchField","Popover_default","anchorOrigin","horizontal","vertical","transformOrigin","PaperProps","disableAutoFocus","disableRestoreFocus","Menu","EditTitleBar","onChangeTitle","onChangeDescription","section","titleDescription","TextAreaField","itemSelector","components_ItemSelector_ItemSelector","selectedDashboard","justifyContent","flex","clear","underline","&::before","borderBottom","&:hover::before","input","borderRadius","peId","ouId","FilterDialog","onConfirm","dimension","selectedItems","dialogId","commonProps","onSelect","onDeselect","onReorder","build","selectedPeriods","ouItems","dialogTitle","Dialog_default","maxWidth","disableEnforceFocus","dialogContent","DialogActions_default","Button","kind","DEFAULT_STATE_ACTIVE_MODAL_DIMENSION","sGetActiveModalDimension","activeModalDimension","acSetActiveModalDimension","FilterSelector","openPanel","closePanel","closeDialog","clearActiveModalDimension","selectDimension","setActiveModalDimension","onSelectItems","dimensionId","setEditItemFilters","onDeselectItems","itemIdsToRemove","newList","removeEditItemFilter","onReorderItems","itemIds","oldList","reorderedList","saveFilter","filterItems","addItemFilter","removeItemFilter","theme","selectedDimensions","ArrowDropDown_default","Boolean","fontFamily","typography","onDimensionClick","selectedIds","ItemFilter_FilterDialog","filters","withTheme","Info","show","toggle","InfoOutlined_default","NO_DESCRIPTION","actions","alignItems","marginLeft","starIcon","textButton","minWidth","editLink","titleBar","titleBarIcon","ViewTitleBar","toggleSharingDialog","sharingDialogIsOpen","onStarClick","onInfoClick","titleStyle","userSelect","StarBorder","TitleBar_Info","update","manage","ItemFilter_FilterSelector","d2_ui_sharing_dialog_default","onRequestClose","tStarDashboard","black","TitleBar","edit","TitleBar_EditTitleBar","TitleBar_ViewTitleBar","DefaultPlugin","pluginCredentials","shouldPluginReload","prevProps","reloadAllowed","filtersChanged","vis","prevVis","visChanged","reloadPlugin","pluginManager","currentVis","useActiveType","getActiveType","defaultHeaders","Authorization","textDiv","HEADER_HEIGHT","ItemHeader","actionButtons","scrollContainer","line","border","grey100","ItemFooter","objectId","d2_ui_interpretations_default","ItemHeaderButton","iconBase","buttonBase","buttonDisabled","opacity","toggleFooterPadding","grey200","baseStyle","container","disabledStyle","activeStyle","primary800","primary100","inactiveStyle","getItemTypeId","VisualizationItemHeaderButtons","activeFooter","onToggleFooter","toggleFooterBase","toggleFooter","components_Item_ItemHeaderButton","Message_default","onSelectVisualization","isSingleValue","match","tableButtonStyle","tableBtnStyle","chartButtonStyle","chartBtnStyle","mapButtonStyle","mapBtnStyle","ViewList_default","InsertChart_default","Public_default","renderInterpretationButton","renderVisualizationButtons","memoizeOne","fn","lastArgs","lastValue","every","arg","overflow","textOverflow","whiteSpace","fontStretch","lineHeight","applyFilters","visRows","obj","visColumns","columns","visFilters","dimensionFound","dimensionObjects","Item","showFooter","configLoaded","getUniqueKey","uniqueId","getPluginComponent","getContentStyle","data_visualizer_plugin_build","forDashboard","VisualizationItem_DefaultPlugin","onToggleItemExpanded","getTitle","itemName","Launch_default","getActionButtons","ItemHeaderButtons","contentRef","offsetHeight","createRef","_componentDidMount","onVisualizationLoaded","_this$props3","Item_ItemHeader","ref","VisualizationItem_ItemFooter","acReceivedActiveVisualization","Line","PRIVATE","messageTypes","_messageTypes","listStyleType","paddingLeft","seeAll","marginBottom","sender","snippet","maxHeight","MessagesItem","getMessageHref","msgIdentifier","messageType","getMessageSender","latestMsg","getMessageItems","editClass","readClass","read","msgDate","location","messageCount","formatDate","userSettings","widgets_Line","string","MessagesContainer","NotSupportedItem","NotInterested_default","align","DeleteIcon","red500","getItemTitle","ListItem","tRemoveListItemContent","contentItems","array","getContentItems","contentItem","Description","deleteButton","Delete","grey900","newContent","textField","onChangeText","updatedItem","d2_ui_rich_text","onEdit","multiline","fullWidth","textDivStyle","viewItem","getIframeSrc","appDetails","iframeSrc","ouIds","ouPath","AppItem","appKey","system","installedApps","app","src","SpacerItem","GridItem","VisualizationItem","TextItem","getGridItem","right","DeleteItemHeaderButton","Delete_default","NoContentMessage","ProgressiveLoadingContainer","shouldLoad","containerRef","shouldLoadHandler","bufferPx","bufferFactor","innerHeight","rect","getBoundingClientRect","bottom","removeHandler","checkShouldLoad","debounceMs","registerHandler","_this3","objectWithoutProperties","eventProps","pick","ItemGrid","expandedItems","clickedId","isExpanded","onRemoveItem","onLayoutChange","newLayout","acUpdateDashboardLayout","onResizeStop","layout","oldItem","pluginResize","onRemoveItemWrapper","widgets_NoContentMessage","expandedItem","hProp","minH","ScreenCover","CircularLoader","react_grid_layout_default","cols","rowHeight","innerWidth","compactType","isDraggable","isResizable","draggableCancel","itemClassNames","Item_ProgressiveLoadingContainer","DeleteItemButton","Item_Item_Item","validItems","badgeContainer","badge","badgeRemove","FilterBadge","onRemove","count","FilterBar","onBadgeRemove","onBadgeClick","bar","FilterBar_FilterBadge","removeItemFIlter","filtersSelector","createSelector","reduce","arr","flexWrap","DashboardContent","components_TitleBar_TitleBar","components_FilterBar_FilterBar","components_ItemGrid_ItemGrid","Content","hasDashboardContent","dashboardsIsEmpty","Dashboard_DashboardContent","dashboardsLoaded","contentNotReady","ControlBar_DashboardsBar","Dashboard_DashboardVerticalOffset","ViewDashboard_Content","ConfirmDeleteDialog","onDeleteConfirmed","onContinueEditing","secondary","destructive","DialogTitle_default","DialogContent_default","DialogContentText_default","buttonBarStyle","EditBar","translationDialogIsOpen","dashboardModel","confirmDeleteDialogOpen","redirectUrl","onConfirmDelete","onSave","newId","onDiscard","onDiscardChanges","onDelete","onTranslationsSaved","translations","dbLocale","translation","locale","property","onTranslate","fetchDashboardModel","toggleTranslationDialog","confirmDeleteDialog","deleteAccess","ControlBar_ConfirmDeleteDialog","translationDialog","d2_ui_translation_dialog_default","objectToTranslate","fieldsToTranslate","onTranslationSaved","onTranslationError","err","Redirect","updateAccess","discardBtnText","primary","rightControls","sGetIsNewDashboard","dashboardToSave","tDeleteDashboard","acSetDashboardDisplayName","EditDashboard","initialized","initEditDashboard","setEditDashboard","getDashboardContent","EditDashboard_Content","ControlBar_EditBar","NewDashboard","setNewDashboard","Dashboard","setDashboard","params","selectDashboard","scrollToTop","scrollTo","mode","Dashboard_EditDashboard","Dashboard_NewDashboard","Dashboard_ViewDashboard","dashboardToSelect","preferredId","getItem","App","setCurrentUser","fetchDashboards","setControlBarRows","setDimensions","HeaderBar","HashRouter","Switch","Route","exact","path","render","components_Dashboard_Dashboard","components_SnackbarMessage_SnackbarMessage","childContextTypes","controlBarRows","displayNameProp","filteredDimensions","apiFetchDimensions","dim","dimensionType","dataDimensionType","tSetDimensions","moment","addResources","arTranslations","daTranslations","enTranslations","esTranslations","frTranslations","idTranslations","kmTranslations","loTranslations","myTranslations","prsTranslations","psTranslations","ptTranslations","pt_BRTranslations","ruTranslations","svTranslations","tetTranslations","tgTranslations","ukTranslations","urTranslations","viTranslations","zhTranslations","setDefaultNamespace","changeLanguage","objectClean","conversations","$merge","d2Object","keyUiLocale","authorities","newState","k","$unshift","idToRemove","$splice","stateItems","newStateItems","stateItem","si","$set","configureStore","middleware","thunk","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducer","applyMiddleware","configI18n","sources","manifest","isProd","getManifest","info","version","manifest_generated_at","process","activities","dhis","dhis2","apiVersion","headers","schemas","getUserSettings","d2Init","initializedD2","ReactDOM","build_es","CssReset","es","store","createMuiTheme","dhis2theme","src_components_App","getElementById","init","param","isArray","Intl","DateTimeFormat","year","month","day","format","Date","replace","defaultValue","api","idx","indexOf","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__"],"mappings":"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","file":"static/js/main.b33da26f.chunk.js","sourcesContent":["import i18n from '@dhis2/d2-i18n';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\nimport ExtensionIcon from '@material-ui/icons/Extension';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport PersonIcon from '@material-ui/icons/Person';\nimport FontDownloadIcon from '@material-ui/icons/FontDownload';\nimport EmailIcon from '@material-ui/icons/Email';\nimport CropFreeIcon from '@material-ui/icons/CropFree';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nimport { getBaseUrl } from './util';\n\n// Item types\nexport const REPORT_TABLE = 'REPORT_TABLE';\nexport const CHART = 'CHART';\nexport const MAP = 'MAP';\nexport const EVENT_REPORT = 'EVENT_REPORT';\nexport const EVENT_CHART = 'EVENT_CHART';\nexport const APP = 'APP';\nexport const REPORTS = 'REPORTS';\nexport const RESOURCES = 'RESOURCES';\nexport const USERS = 'USERS';\nexport const MESSAGES = 'MESSAGES';\nexport const TEXT = 'TEXT';\nexport const SPACER = 'SPACER';\n\n// Domain types\nexport const DOMAIN_TYPE_AGGREGATE = 'AGGREGATE';\nexport const DOMAIN_TYPE_TRACKER = 'TRACKER';\n\n// Visualization types\nexport const VISUALIZATION_TYPE_TABLE = 'TABLE';\nexport const VISUALIZATION_TYPE_CHART = 'CHART';\nexport const VISUALIZATION_TYPE_MAP = 'MAP';\n\n// Dashboard helpers\nexport const spacerContent = 'SPACER_ITEM_FOR_DASHBOARD_LAYOUT_CONVENIENCE';\nexport const emptyTextItemContent = 'TEXT_ITEM_WITH_NO_CONTENT';\nexport const isSpacerType = item =>\n    item.type === TEXT && item.text === spacerContent;\nexport const isTextType = item =>\n    item.type === TEXT && item.text !== spacerContent;\nexport const isPluginType = item => 'plugin' in itemTypeMap[item.type];\n\nexport const getPlugin = type => {\n    const pluginName = itemTypeMap[type].plugin;\n\n    if (type === CHART) {\n        return true;\n    }\n\n    return global[pluginName];\n};\n\n// Item type map\nexport const itemTypeMap = {\n    [REPORT_TABLE]: {\n        id: REPORT_TABLE,\n        endPointName: 'reportTables',\n        propName: 'reportTable',\n        pluralTitle: i18n.t('Pivot tables'),\n        plugin: 'reportTablePlugin',\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        visualizationType: VISUALIZATION_TYPE_TABLE,\n        appUrl: id => `dhis-web-pivot/?id=${id}`,\n        appName: i18n.t('Pivot Tables'),\n    },\n    [CHART]: {\n        id: CHART,\n        endPointName: 'charts',\n        propName: 'chart',\n        pluralTitle: i18n.t('Charts'),\n        plugin: 'chartPlugin',\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        visualizationType: VISUALIZATION_TYPE_CHART,\n        appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n        appName: i18n.t('Visualizer'),\n    },\n    [MAP]: {\n        id: MAP,\n        endPointName: 'maps',\n        propName: 'map',\n        pluralTitle: i18n.t('Maps'),\n        plugin: 'mapPlugin',\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        visualizationType: VISUALIZATION_TYPE_MAP,\n        appUrl: id => `dhis-web-maps/?id=${id}`,\n        appName: i18n.t('Maps'),\n    },\n    [EVENT_REPORT]: {\n        id: EVENT_REPORT,\n        endPointName: 'eventReports',\n        propName: 'eventReport',\n        pluralTitle: i18n.t('Event reports'),\n        plugin: 'eventReportPlugin',\n        domainType: DOMAIN_TYPE_TRACKER,\n        visualizationType: VISUALIZATION_TYPE_TABLE,\n        appUrl: id => `dhis-web-event-reports/?id=${id}`,\n        appName: i18n.t('Event Reports'),\n    },\n    [EVENT_CHART]: {\n        id: EVENT_CHART,\n        endPointName: 'eventCharts',\n        propName: 'eventChart',\n        pluralTitle: i18n.t('Event charts'),\n        plugin: 'eventChartPlugin',\n        domainType: DOMAIN_TYPE_TRACKER,\n        visualizationType: VISUALIZATION_TYPE_CHART,\n        appUrl: id => `dhis-web-event-visualizer/?id=${id}`,\n        appName: i18n.t('Event Visualizer'),\n    },\n    [APP]: {\n        endPointName: 'apps',\n        propName: 'appKey',\n        pluralTitle: i18n.t('Apps'),\n    },\n    [REPORTS]: {\n        id: REPORTS,\n        endPointName: 'reports',\n        propName: 'reports',\n        pluralTitle: i18n.t('Reports'),\n        appUrl: id =>\n            `dhis-web-reporting/getReportParams.action?mode=report&uid=${id}`,\n    },\n    [RESOURCES]: {\n        id: RESOURCES,\n        endPointName: 'resources',\n        propName: 'resources',\n        pluralTitle: i18n.t('Resources'),\n        appUrl: id => `api/documents/${id}/data`,\n    },\n    [USERS]: {\n        id: USERS,\n        endPointName: 'users',\n        propName: 'users',\n        pluralTitle: i18n.t('Users'),\n        appUrl: id => `dhis-web-dashboard-integration/profile.action?id=${id}`,\n    },\n    [TEXT]: {\n        id: TEXT,\n        propName: 'text',\n    },\n    [MESSAGES]: {\n        propName: 'messages',\n    },\n    [SPACER]: {\n        propName: 'text',\n    },\n};\n\nexport const getEndPointName = type => itemTypeMap[type].endPointName;\n\nexport const getItemUrl = (type, item, d2) => {\n    let url;\n\n    if (type === APP) {\n        url = item.launchUrl;\n    }\n\n    if (itemTypeMap[type] && itemTypeMap[type].appUrl) {\n        url = `${getBaseUrl(d2)}/${itemTypeMap[type].appUrl(item.id)}`;\n    }\n\n    return url;\n};\n\nexport const getItemIcon = type => {\n    switch (type) {\n        case REPORT_TABLE:\n        case EVENT_REPORT:\n        case REPORTS:\n            return TableIcon;\n        case CHART:\n        case EVENT_CHART:\n            return ChartIcon;\n        case MAP:\n            return MapIcon;\n        case APP:\n            return ExtensionIcon;\n        case RESOURCES:\n            return DescriptionIcon;\n        case USERS:\n            return PersonIcon;\n        case TEXT:\n            return FontDownloadIcon;\n        case MESSAGES:\n            return EmailIcon;\n        case SPACER:\n            return CropFreeIcon;\n        default:\n            return NotInterestedIcon;\n    }\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Item_list__2oHc1\",\"item\":\"Item_item__lO40M\",\"itemicon\":\"Item_itemicon__dv5ah\",\"link\":\"Item_link__2gULT\",\"deleteicon\":\"Item_deleteicon__3c7bl\",\"deletebutton\":\"Item_deletebutton__1DfY5\"};","export const RECEIVED_USER = 'RECEIVED_USER';\n\nexport const DEFAULT_STATE_USER = {\n    id: '',\n    username: '',\n    uiLocale: '',\n    isSuperuser: false,\n};\n\nexport default (state = DEFAULT_STATE_USER, action) => {\n    switch (action.type) {\n        case RECEIVED_USER: {\n            return fromD2ToUserObj(action.value);\n        }\n        default:\n            return state;\n    }\n};\n\nfunction fromD2ToUserObj(d2Object) {\n    return {\n        id: d2Object.id,\n        username: d2Object.username,\n        uiLocale: d2Object.settings.keyUiLocale,\n        isSuperuser: d2Object.authorities.has('ALL'),\n    };\n}\n\n// selectors\n\nexport const sGetUserId = state => state.user.id;\nexport const sGetUserUsername = state => state.user.username;\nexport const sGetIsSuperuser = state => state.user.isSuperuser;\nexport const sGetUiLocale = state => state.user.uiLocale;\n","/** @module reducers/dashboards */\n\nimport arrayFrom from 'd2-utilizr/lib/arrayFrom';\nimport arraySort from 'd2-utilizr/lib/arraySort';\n\nimport { orArray, orObject } from '../modules/util';\nimport {\n    SPACER,\n    isSpacerType,\n    isTextType,\n    emptyTextItemContent,\n} from '../modules/itemTypes';\n\nexport const SET_DASHBOARDS = 'SET_DASHBOARDS';\nexport const ADD_DASHBOARDS = 'ADD_DASHBOARDS';\nexport const SET_DASHBOARD_STARRED = 'SET_DASHBOARD_STARRED';\nexport const SET_DASHBOARD_DISPLAY_NAME = 'SET_DASHBOARD_DISPLAY_NAME';\nexport const SET_DASHBOARD_ITEMS = 'SET_DASHBOARD_ITEMS';\n\nexport const DEFAULT_STATE_DASHBOARDS = {\n    byId: null,\n    items: [],\n};\n\n// reducer helper functions\n\nconst updateDashboardProp = ({ state, dashboardId, prop, value }) => ({\n    byId: {\n        ...state.byId,\n        [dashboardId]: {\n            ...state.byId[dashboardId],\n            [prop]: value,\n        },\n    },\n    items: state.items,\n});\n\n/**\n * Reducer that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n * @returns {Object}\n */\nexport default (state = DEFAULT_STATE_DASHBOARDS, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS: {\n            return {\n                byId: action.value,\n                items: [],\n            };\n        }\n        case ADD_DASHBOARDS: {\n            return {\n                ...state,\n                byId: {\n                    ...state.byId,\n                    ...action.value,\n                },\n            };\n        }\n        case SET_DASHBOARD_STARRED: {\n            return updateDashboardProp({\n                state,\n                dashboardId: action.dashboardId,\n                prop: 'starred',\n                value: action.value,\n            });\n        }\n        case SET_DASHBOARD_DISPLAY_NAME: {\n            return updateDashboardProp({\n                state,\n                dashboardId: action.dashboardId,\n                prop: 'displayName',\n                value: action.value,\n            });\n        }\n        case SET_DASHBOARD_ITEMS: {\n            return {\n                ...state,\n                items: action.value,\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// root selector\n\nexport const sGetDashboardsRoot = state => state.dashboards;\n\n// selector level 1\n\n/**\n * Selector which returns a dashboard by id from the state object\n * If no matching dashboard is found it returns undefined\n * If dashboards.byId is null, then the dashboards api request\n * has not yet completed. If dashboards.byId is an empty object\n * then the dashboards api request is complete, but no dashboards\n * were returned\n *\n * @function\n * @param {Object} state The current state\n * @param {Number} id The id of the dashboard\n * @returns {Object | undefined}\n */\nexport const sGetDashboardById = (state, id) =>\n    orObject(sGetDashboardsRoot(state).byId)[id];\n\nexport const sDashboardsIsFetching = state => {\n    return sGetDashboardsRoot(state).byId === null;\n};\n\n/**\n * Selector which returns all dashboards (the byId object)\n *\n * @function\n * @param {Object} state The current state\n * @returns {Object | undefined}\n */\nexport const sGetAllDashboards = state =>\n    orObject(sGetDashboardsRoot(state).byId);\n\n/**\n * Selector which returns the current dashboard items\n *\n * @function\n * @param {Object} state The current state\n * @returns {Array}\n */\nexport const sGetDashboardItems = state => sGetDashboardsRoot(state).items;\n\n// selector level 2\n\nexport const sGetStarredDashboards = state =>\n    Object.values(sGetAllDashboards(state)).filter(\n        dashboard => dashboard.starred === true\n    );\n\nexport const sGetUnstarredDashboards = state =>\n    Object.values(sGetAllDashboards(state)).filter(\n        dashboard => dashboard.starred === false\n    );\n\n// selector level 3\n\nexport const sGetStarredDashboardIds = state => {\n    return sGetStarredDashboards(state).map(dashboard => dashboard.id);\n};\n\nexport const sGetUnstarredDashboardIds = state =>\n    sGetUnstarredDashboards(state).map(dashboard => dashboard.id);\n\nexport const sGetDashboardsSortedByStarred = state => [\n    ...arraySort(sGetStarredDashboards(state), 'ASC', 'displayName'),\n    ...arraySort(sGetUnstarredDashboards(state), 'ASC', 'displayName'),\n];\n\n// utils\n\n/**\n * Returns the array of dashboards, customized for ui\n * @function\n * @param {Array} data The original dashboard list\n * @returns {Array}\n */\nexport const getCustomDashboards = data => {\n    const uiItems = items =>\n        items.map(item => {\n            const type = isSpacerType(item) ? SPACER : item.type;\n            const text = isTextType(item)\n                ? item.text === emptyTextItemContent\n                    ? ''\n                    : item.text\n                : null;\n\n            return {\n                ...item,\n                ...(text !== null ? { text } : {}),\n                type,\n            };\n        });\n\n    return arrayFrom(data).map(d => ({\n        id: d.id,\n        name: d.name,\n        displayName: d.displayName,\n        description: d.description,\n        displayDescription: d.displayDescription,\n        starred: d.favorite,\n        owner: d.user.name,\n        created: d.created\n            .split('T')\n            .join(' ')\n            .substr(0, 16),\n        lastUpdated: d.lastUpdated\n            .split('T')\n            .join(' ')\n            .substr(0, 16),\n        access: d.access,\n        numberOfItems: orArray(d.dashboardItems).length,\n        dashboardItems: uiItems(d.dashboardItems),\n    }));\n};\n","/** @module reducers/selected */\nimport { combineReducers } from 'redux';\n\nimport { validateReducer } from '../modules/util';\n\nexport const SET_SELECTED_ID = 'SET_SELECTED_ID';\nexport const SET_SELECTED_ISLOADING = 'SET_SELECTED_ISLOADING';\nexport const SET_SELECTED_SHOWDESCRIPTION = 'SET_SELECTED_SHOWDESCRIPTION';\n\nexport const DEFAULT_STATE_SELECTED_ID = null;\nexport const DEFAULT_STATE_SELECTED_ISLOADING = false;\nexport const DEFAULT_STATE_SELECTED_SHOWDESCRIPTION = false;\n\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\nconst id = (state = DEFAULT_STATE_SELECTED_ID, action) => {\n    switch (action.type) {\n        case SET_SELECTED_ID:\n            return validateReducer(action.value, DEFAULT_STATE_SELECTED_ID);\n        default:\n            return state;\n    }\n};\n\nconst isLoading = (state = DEFAULT_STATE_SELECTED_ISLOADING, action) => {\n    switch (action.type) {\n        case SET_SELECTED_ISLOADING:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_SELECTED_ISLOADING\n            );\n        default:\n            return state;\n    }\n};\n\nconst showDescription = (\n    state = DEFAULT_STATE_SELECTED_SHOWDESCRIPTION,\n    action\n) => {\n    switch (action.type) {\n        case SET_SELECTED_SHOWDESCRIPTION:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_SELECTED_SHOWDESCRIPTION\n            );\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    id,\n    isLoading,\n    showDescription,\n});\n\n// Selectors\n\nexport const sGetSelectedRoot = state => state.selected;\n\nexport const sGetSelectedId = state => sGetSelectedRoot(state).id;\n\nexport const sGetSelectedIsLoading = state => sGetSelectedRoot(state).isLoading;\n\nexport const sGetSelectedShowDescription = state =>\n    sGetSelectedRoot(state).showDescription;\n","import { orObject } from '../modules/util';\nimport objectClean from 'd2-utilizr/lib/objectClean';\n\n/** @module reducers/visualizations */\n\nexport const RECEIVED_VISUALIZATION = 'RECEIVED_VISUALIZATION';\nexport const RECEIVED_ACTIVE_VISUALIZATION = 'RECEIVED_ACTIVE_VISUALIZATION';\n\nexport const DEFAULT_STATE_VISUALIZATIONS = {};\n\nconst isEmpty = p => p === undefined || p === null;\n\nexport default (state = DEFAULT_STATE_VISUALIZATIONS, action) => {\n    switch (action.type) {\n        case RECEIVED_VISUALIZATION: {\n            return {\n                ...state,\n                [action.value.id]: objectClean(\n                    {\n                        ...orObject(state[action.value.id]),\n                        ...action.value,\n                    },\n                    isEmpty\n                ),\n            };\n        }\n        case RECEIVED_ACTIVE_VISUALIZATION: {\n            return {\n                ...state,\n                [action.id]: objectClean(\n                    {\n                        ...orObject(state[action.id]),\n                        activeType: action.activeType,\n                    },\n                    isEmpty\n                ),\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// root selector\nexport const sGetVisualizationsRoot = state => state.visualizations;\n\n// selectors level 1\nexport const sGetVisualization = (state, id) => {\n    return sGetVisualizationsRoot(state)[id];\n};\n","import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\n\nimport { getEndPointName } from '../modules/itemTypes';\n\n// Id, name\nexport const getIdNameFields = ({ rename } = {}) => [\n    'id',\n    `${rename ? 'displayName~rename(name)' : 'name,displayName'}`,\n];\n\n// Item\nexport const getItemFields = () => [\n    'dimensionItem~rename(id)',\n    'displayName~rename(name)',\n    'dimensionItemType',\n];\n\n// Dimension\nexport const getDimensionFields = ({ withItems }) =>\n    arrayClean([\n        'dimension',\n        'legendSet[id]',\n        'filter',\n        'programStage',\n        withItems ? `items[${getItemFields().join(',')}]` : ``,\n    ]);\n\n// Axis\nexport const getAxesFields = ({ withItems }) => [\n    `columns[${getDimensionFields({ withItems }).join(',')}]`,\n    `rows[${getDimensionFields({ withItems }).join(',')}]`,\n    `filters[${getDimensionFields({ withItems }).join(',')}]`,\n];\n\n// Favorite\nexport const getFavoriteFields = ({ withDimensions, withOptions }) => {\n    return arrayClean([\n        `${getIdNameFields({ rename: true }).join(',')}`,\n        'displayDescription~rename(description)',\n        withDimensions ? `${getAxesFields({ withItems: true }).join(',')}` : ``,\n        withOptions\n            ? [\n                  '*',\n                  '!attributeDimensions',\n                  '!attributeValues',\n                  '!category',\n                  '!categoryDimensions',\n                  '!categoryOptionGroupSetDimensions',\n                  '!columnDimensions',\n                  '!dataDimensionItems',\n                  '!dataElementDimensions',\n                  '!dataElementGroupSetDimensions',\n                  '!filterDimensions',\n                  '!itemOrganisationUnitGroups',\n                  '!lastUpdatedBy',\n                  '!organisationUnitGroupSetDimensions',\n                  '!organisationUnitLevels',\n                  '!organisationUnits',\n                  '!programIndicatorDimensions',\n                  '!relativePeriods',\n                  '!reportParams',\n                  '!rowDimensions',\n                  '!series',\n                  '!translations',\n                  '!userOrganisationUnit',\n                  '!userOrganisationUnitChildren',\n                  '!userOrganisationUnitGrandChildren',\n              ].join(',')\n            : '',\n    ]);\n};\n\nexport const getFavoritesFields = ({ withDimensions }) => [\n    `reportTable[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `chart[${['type', ...getFavoriteFields({ withDimensions })].join(',')}]`,\n    `map[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `eventReport[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `eventChart[${getFavoriteFields({ withDimensions }).join(',')}]`,\n];\n\n// List item\nexport const getListItemFields = () => [\n    `reports[${getIdNameFields({ rename: true }).join(',')}]`,\n    `resources[${getIdNameFields({ rename: true }).join(',')}]`,\n    `users[${getIdNameFields({ rename: true }).join(',')}]`,\n];\n\n// Map\nexport const getMapFields = () => [\n    `${getIdNameFields({ rename: true }).join(',')}`,\n    'user,longitude,latitude,zoom,basemap',\n    `mapViews[${getFavoriteFields({\n        withDimensions: true,\n        withOptions: true,\n    })}]`,\n];\n\n// Api\n\n// Get more info about the favorite of a dashboard item\nexport const apiFetchFavorite = (id, type, { fields }) =>\n    getInstance().then(d2 =>\n        d2.Api.getApi().get(`${getEndPointName(type)}/${id}`, {\n            fields:\n                fields ||\n                getFavoriteFields({\n                    withDimensions: true,\n                    withOptions: true,\n                }),\n        })\n    );\n","import arrayClean from 'd2-utilizr/lib/arrayClean';\nimport {\n    getListItemFields,\n    getFavoritesFields,\n    getIdNameFields,\n} from './metadata';\n\n// Helper functions\n\nexport const onError = error => console.log('Error: ', error);\n\n// Dashboard item\nexport const getDashboardItemsFields = ({ withFavorite } = {}) =>\n    arrayClean([\n        'id',\n        'type',\n        'shape',\n        'x',\n        'y',\n        'width~rename(w)',\n        'height~rename(h)',\n        'messages',\n        'text',\n        'appKey',\n        `${getListItemFields().join(',')}`,\n        withFavorite\n            ? `${getFavoritesFields({\n                  withDimensions: withFavorite.withDimensions,\n              }).join(',')}`\n            : ``,\n    ]);\n\n// Dashboard\nexport const getDashboardFields = ({ withItems, withFavorite } = {}) =>\n    arrayClean([\n        `${getIdNameFields().join(',')}`,\n        'description',\n        'displayDescription',\n        'favorite',\n        `user[${getIdNameFields({ rename: true }).join(',')}]`,\n        'created',\n        'lastUpdated',\n        'access',\n        withItems\n            ? `dashboardItems[${getDashboardItemsFields({\n                  withFavorite,\n              }).join(',')}]`\n            : ``,\n    ]);\n","import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { onError, getDashboardFields } from './index';\n\n// Get \"all\" dashboards on startup\nexport const apiFetchDashboards = () =>\n    getInstance()\n        .then(d2 =>\n            d2.models.dashboard.list({\n                fields: [\n                    getDashboardFields().join(','),\n                    'dashboardItems[id]',\n                ].join(','),\n                paging: 'false',\n            })\n        )\n        .catch(onError);\n\n// Get more info about selected dashboard\nexport const apiFetchDashboard = id =>\n    getInstance()\n        .then(d2 =>\n            d2.models.dashboard.get(id, {\n                fields: arrayClean(\n                    getDashboardFields({\n                        withItems: true,\n                        withFavorite: { withDimensions: false },\n                    })\n                ).join(','),\n            })\n        )\n        .catch(onError);\n\n// Star dashboard\nexport const apiStarDashboard = (id, isStarred) => {\n    const url = `dashboards/${id}/favorite`;\n\n    getInstance().then(d2 => {\n        if (isStarred) {\n            d2.Api.getApi().post(url);\n        } else {\n            d2.Api.getApi().delete(url);\n        }\n    });\n};\n\nexport const apiDeleteDashboard = id => {\n    return getInstance()\n        .then(d2 => {\n            return d2.models.dashboards\n                .get(id)\n                .then(dashboard => dashboard.delete());\n        })\n        .catch(onError);\n};\n","import isFunction from 'd2-utilizr/lib/isFunction';\n\nimport { orObject } from '../../modules/util';\n\n// Dimensions for the react-grid-layout\n\nexport const GRID_COMPACT_TYPE = 'vertical'; // vertical | horizonal | null\nexport const GRID_ROW_HEIGHT = 10;\nconst GRID_COLUMN_WIDTH_PX = 20;\nconst GRID_LAYOUT = 'FLEXIBLE'; // FIXED | FLEXIBLE\nexport const MARGIN = [10, 10];\n\nexport const NEW_ITEM_SHAPE = { x: 0, y: 0, w: 20, h: 29 };\nexport const ITEM_MIN_HEIGHT = 4;\n\n// Dimensions for getShape\n\nconst NUMBER_OF_ITEM_COLS = 2;\nconst GRID_COLUMNS = 60;\n\nexport const getGridColumns = () => {\n    switch (GRID_LAYOUT) {\n        case 'FLEXIBLE':\n            return GRID_COLUMNS;\n        case 'FIXED':\n            return Math.floor((window.innerWidth - 20) / GRID_COLUMN_WIDTH_PX);\n        default:\n            return GRID_COLUMNS;\n    }\n};\n\n// isNonNegativeInteger\n\nconst isNonNegativeInteger = x => Number.isInteger(x) && x >= 0;\n\n// Does the item have all the shape properties?\n\nexport const hasShape = item =>\n    isNonNegativeInteger(item.x) &&\n    isNonNegativeInteger(item.y) &&\n    isNonNegativeInteger(item.w) &&\n    isNonNegativeInteger(item.h);\n\n// returns a rectangular grid block dimensioned with x, y, w, h in grid units.\n// based on a grid with 3 items across\nexport const getShape = i => {\n    if (!isNonNegativeInteger(i)) {\n        throw new Error('Invalid grid block number');\n    }\n\n    const col = i % NUMBER_OF_ITEM_COLS;\n    const row = Math.floor(i / NUMBER_OF_ITEM_COLS);\n    const itemWidth = Math.floor((GRID_COLUMNS - 1) / NUMBER_OF_ITEM_COLS);\n    const itemHeight = GRID_ROW_HEIGHT * 2;\n\n    return {\n        x: col * itemWidth,\n        y: row * itemHeight,\n        w: itemWidth,\n        h: itemHeight,\n    };\n};\n\n/**\n * Calculates the grid item's original height in pixels based\n * on the height in grid units. This calculation\n * is copied directly from react-grid-layout GridItem.js (calcPosition)\n *\n * @param {Object} item item containing shape (x, y, w, h)\n */\nconst getOriginalHeight = item => {\n    const originalHeight = Math.round(\n        GRID_ROW_HEIGHT * item.h + Math.max(0, item.h - 1) * MARGIN[1]\n    );\n\n    return { originalHeight };\n};\n\n/**\n * Returns an array of items containing the x, y, w, h dimensions\n * and the item's originalheight in pixels\n * @function\n * @param {Array} items\n * @returns {Array}\n */\n\nexport const withShape = items =>\n    items.map((item, index) => {\n        const itemWithShape = hasShape(item)\n            ? item\n            : Object.assign({}, item, getShape(index));\n\n        return Object.assign(\n            {},\n            itemWithShape,\n            getOriginalHeight(itemWithShape)\n        );\n    });\n\nexport const getGridItemDomId = id => `item-${id}`;\n\nexport function onItemResize(id) {\n    const el = orObject(document.querySelector(`#${getGridItemDomId(id)}`));\n    if (isFunction(el.setViewportSize))\n        setTimeout(\n            () => el.setViewportSize(el.clientWidth - 5, el.clientHeight - 5),\n            10\n        );\n}\n","import update from 'immutability-helper';\nimport { arrayToIdMap } from '../modules/util';\n\nexport const RECEIVED_MESSAGES = 'RECEIVED_MESSAGES';\n\nexport default (state = {}, action) => {\n    switch (action.type) {\n        case RECEIVED_MESSAGES: {\n            const conversations = arrayToIdMap(action.value);\n\n            const newState = update(state, { $merge: conversations });\n\n            return newState;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetMessagesRoot = state => state.messages;\n","import { getInstance } from 'd2';\n\nexport const getMessages = () => {\n    const fields =\n        'id,messageCount,lastUpdated,messageType,displayName,read,messages[id,read,sender[id,displayName],text,lastUpdated]';\n    const url = `/messageConversations?fields=${fields}&order=read:asc&pageSize=200`;\n    return getInstance()\n        .then(d2 => d2.Api.getApi().get(url))\n        .catch(error => console.log('Error:', error));\n};\n","export const RECEIVED_SNACKBAR_MESSAGE = 'RECEIVED_SNACKBAR_MESSAGE';\nexport const CLOSE_SNACKBAR = 'CLOSE_SNACKBAR';\n\nexport const DEFAULT_STATE_SNACKBAR = {\n    message: {},\n    duration: null,\n    open: false,\n};\n\nexport default (state = DEFAULT_STATE_SNACKBAR, action) => {\n    switch (action.type) {\n        case RECEIVED_SNACKBAR_MESSAGE: {\n            return { ...state, ...action.value };\n        }\n        case CLOSE_SNACKBAR: {\n            return DEFAULT_STATE_SNACKBAR;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetSnackbar = state => state.snackbar || DEFAULT_STATE_SNACKBAR;\n","import {\n    RECEIVED_SNACKBAR_MESSAGE,\n    CLOSE_SNACKBAR,\n} from '../reducers/snackbar';\n\nexport const acReceivedSnackbarMessage = value => ({\n    type: RECEIVED_SNACKBAR_MESSAGE,\n    value,\n});\n\nexport const acCloseSnackbar = () => ({\n    type: CLOSE_SNACKBAR,\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport PropTypes from 'prop-types';\n\nimport { sGetSnackbar } from '../../reducers/snackbar';\nimport { acCloseSnackbar } from '../../actions/snackbar';\n\nconst LOADING_DASHBOARD = 'LOADING_DASHBOARD';\nexport const loadingDashboardMsg = { name: '', type: LOADING_DASHBOARD };\n\nconst SnackbarMessageContent = ({ message }) => {\n    if (typeof message === 'object') {\n        //future message types:  switch(message.type)\n        return (\n            <span>\n                Loading <span style={{ fontWeight: 800 }}>{message.name}</span>{' '}\n                dashboard\n            </span>\n        );\n    }\n    return message;\n};\n\nexport const SnackbarMessage = props => {\n    return (\n        <Snackbar\n            style={{ zIndex: 10001 }}\n            open={props.snackbarOpen}\n            message={<SnackbarMessageContent message={props.snackbarMessage} />}\n            autoHideDuration={props.snackbarDuration}\n            onClose={props.onCloseSnackbar}\n        />\n    );\n};\n\nconst mapStateToProps = state => {\n    const { message, duration, open } = sGetSnackbar(state);\n    return {\n        snackbarOpen: open,\n        snackbarMessage: message,\n        snackbarDuration: duration,\n    };\n};\n\nSnackbarMessage.propTypes = {\n    snackbarDuration: PropTypes.string,\n    snackbarMessage: PropTypes.object,\n    snackbarOpen: PropTypes.bool,\n    onCloseSnackbar: PropTypes.func,\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        onCloseSnackbar: acCloseSnackbar,\n    }\n)(SnackbarMessage);\n","import isObject from 'lodash/isObject';\nimport { apiFetchFavorite, getMapFields } from '../../../api/metadata';\nimport {\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_REPORT,\n    EVENT_CHART,\n    itemTypeMap,\n    getPlugin,\n} from '../../../modules/itemTypes';\nimport { getBaseUrl, getWithoutId } from '../../../modules/util';\nimport { getGridItemDomId } from '../../ItemGrid/gridUtil';\n\nexport const THEMATIC_LAYER = 'thematic';\n\nexport const pluginIsAvailable = (item = {}, visualization = {}) => {\n    const type = visualization.activeType || item.type;\n\n    return !!getPlugin(type);\n};\n\nexport const extractFavorite = item => {\n    if (!isObject(item)) {\n        return null;\n    }\n\n    switch (item.type) {\n        case REPORT_TABLE:\n            return item.reportTable;\n        case CHART:\n            return item.chart;\n        case MAP:\n            return item.map;\n        case EVENT_REPORT:\n            return item.eventReport;\n        case EVENT_CHART:\n            return item.eventChart;\n        default:\n            return (\n                item.reportTable ||\n                item.chart ||\n                item.map ||\n                item.eventReport ||\n                item.eventChart ||\n                {}\n            );\n    }\n};\n\nexport const extractMapView = map =>\n    map.mapViews && map.mapViews.find(mv => mv.layer.includes(THEMATIC_LAYER));\n\nexport const loadPlugin = (plugin, config, credentials) => {\n    if (!(plugin && plugin.load)) {\n        return;\n    }\n\n    plugin.url = credentials.baseUrl;\n    plugin.loadingIndicator = true;\n    plugin.dashboard = true;\n    if (credentials.auth) {\n        plugin.auth = credentials.auth;\n    }\n    plugin.load(config);\n};\n\nexport const getId = item => extractFavorite(item).id;\nexport const getName = item => extractFavorite(item).name;\nexport const getDescription = item => extractFavorite(item).description;\nexport const getLink = (item, d2) => {\n    const baseUrl = getBaseUrl(d2);\n    const appUrl = itemTypeMap[item.type].appUrl(getId(item));\n\n    return `${baseUrl}/${appUrl}`;\n};\n\nexport const load = async (\n    item,\n    visualization,\n    { credentials, activeType }\n) => {\n    const config = {\n        ...visualization,\n        el: getGridItemDomId(item.id),\n    };\n\n    const type = activeType || item.type;\n    const plugin = getPlugin(type);\n\n    loadPlugin(plugin, config, credentials);\n};\n\nexport const fetch = async item => {\n    const fetchedFavorite = await apiFetchFavorite(getId(item), item.type, {\n        fields: item.type === MAP ? getMapFields() : null,\n    });\n\n    return fetchedFavorite;\n};\n\nexport const resize = item => {\n    const plugin = getPlugin(item.type);\n\n    if (plugin && plugin.resize) {\n        plugin.resize(getGridItemDomId(item.id));\n    }\n};\n\nexport const unmount = (item, activeType) => {\n    const plugin = getPlugin(activeType);\n\n    if (plugin && plugin.unmount) {\n        plugin.unmount(getGridItemDomId(item.id));\n    }\n};\n\nexport const getVisualizationConfig = (\n    visualization,\n    originalType,\n    activeType\n) => {\n    if (originalType === MAP && originalType !== activeType) {\n        const extractedMapView = extractMapView(visualization);\n\n        if (extractedMapView === undefined) {\n            return null;\n        }\n\n        return getWithoutId({\n            ...visualization,\n            ...extractedMapView,\n            mapViews: undefined,\n        });\n    }\n\n    return getWithoutId(visualization);\n};\n","import {\n    SET_SELECTED_ID,\n    SET_SELECTED_ISLOADING,\n    SET_SELECTED_SHOWDESCRIPTION,\n} from '../reducers/selected';\nimport {\n    RECEIVED_VISUALIZATION,\n    RECEIVED_ACTIVE_VISUALIZATION,\n} from '../reducers/visualizations';\nimport { sGetSelectedIsLoading } from '../reducers/selected';\nimport { sGetUserUsername } from '../reducers/user';\nimport { getCustomDashboards, sGetDashboardById } from '../reducers/dashboards';\nimport { apiFetchDashboard } from '../api/dashboards';\nimport { acSetDashboardItems, acAppendDashboards } from './dashboards';\nimport { withShape } from '../components/ItemGrid/gridUtil';\nimport { tGetMessages } from '../components/Item/MessagesItem/actions';\nimport { acReceivedSnackbarMessage, acCloseSnackbar } from './snackbar';\nimport { storePreferredDashboardId } from '../api/localStorage';\nimport { loadingDashboardMsg } from '../components/SnackbarMessage/SnackbarMessage';\nimport {\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_REPORT,\n    EVENT_CHART,\n    MESSAGES,\n} from '../modules/itemTypes';\nimport { extractFavorite } from '../components/Item/VisualizationItem/plugin';\nimport { orObject } from '../modules/util';\n\n// actions\n\nexport const acSetSelectedId = value => ({\n    type: SET_SELECTED_ID,\n    value,\n});\n\nexport const acSetSelectedIsLoading = value => ({\n    type: SET_SELECTED_ISLOADING,\n    value,\n});\n\nexport const acSetSelectedShowDescription = value => ({\n    type: SET_SELECTED_SHOWDESCRIPTION,\n    value,\n});\n\nexport const acReceivedVisualization = value => ({\n    type: RECEIVED_VISUALIZATION,\n    value,\n});\n\nexport const acReceivedActiveVisualization = (id, type, activeType) => {\n    const action = {\n        type: RECEIVED_ACTIVE_VISUALIZATION,\n        id,\n    };\n\n    if (activeType !== type) {\n        action.activeType = activeType;\n    }\n\n    return action;\n};\n\nexport const tLoadDashboard = id => async dispatch => {\n    try {\n        const dash = await apiFetchDashboard(id);\n        dispatch(acAppendDashboards(dash));\n\n        return Promise.resolve(dash);\n    } catch (err) {\n        console.log('Error: ', err);\n        return err;\n    }\n};\n\n// thunks\nexport const tSetSelectedDashboardById = id => async (dispatch, getState) => {\n    dispatch(acSetSelectedIsLoading(true));\n\n    const snackbarTimeout = setTimeout(() => {\n        const dashboardName = orObject(sGetDashboardById(getState(), id))\n            .displayName;\n        if (sGetSelectedIsLoading(getState()) && dashboardName) {\n            loadingDashboardMsg.name = dashboardName;\n\n            dispatch(\n                acReceivedSnackbarMessage({\n                    message: loadingDashboardMsg,\n                    open: true,\n                })\n            );\n        }\n    }, 500);\n\n    const onSuccess = selected => {\n        const customDashboard = getCustomDashboards(selected)[0];\n\n        dispatch(\n            acSetDashboardItems(withShape(customDashboard.dashboardItems))\n        );\n\n        storePreferredDashboardId(sGetUserUsername(getState()), id);\n\n        // add visualizations to store\n        customDashboard.dashboardItems.forEach(item => {\n            switch (item.type) {\n                case REPORT_TABLE:\n                case CHART:\n                case MAP:\n                case EVENT_REPORT:\n                case EVENT_CHART:\n                    dispatch(acReceivedVisualization(extractFavorite(item)));\n                    break;\n                case MESSAGES:\n                    dispatch(tGetMessages(id));\n                    break;\n                default:\n                    break;\n            }\n        });\n\n        dispatch(acSetSelectedId(id));\n\n        dispatch(acSetSelectedIsLoading(false));\n\n        clearTimeout(snackbarTimeout);\n\n        dispatch(acCloseSnackbar());\n\n        return selected;\n    };\n\n    const onError = error => {\n        console.log('Error: ', error);\n        return error;\n    };\n\n    try {\n        const selected = await dispatch(tLoadDashboard(id));\n\n        return onSuccess(selected);\n    } catch (err) {\n        return onError(err);\n    }\n};\n","export const getPreferredDashboardId = username =>\n    localStorage.getItem(`dhis2.dashboard.current.${username}`) || undefined;\n\nexport const storePreferredDashboardId = (username, dashboardId) => {\n    localStorage.setItem(`dhis2.dashboard.current.${username}`, dashboardId);\n};\n","import { RECEIVED_MESSAGES } from '../../../reducers/messages';\nimport { getMessages } from '../../../api/messages';\n\nconst onError = (action, error) => {\n    console.log(`Error in action ${action}: ${error}`);\n    return error;\n};\n\nexport const receivedMessages = value => ({\n    type: RECEIVED_MESSAGES,\n    value,\n});\n\nexport const tGetMessages = () => async dispatch => {\n    try {\n        const messages = await getMessages();\n        const { messageConversations } = messages;\n\n        return dispatch(receivedMessages(messageConversations));\n    } catch (err) {\n        return onError('Get Messages', err);\n    }\n};\n","/** @module reducers/editDashboard */\nimport update from 'immutability-helper';\nimport isEmpty from 'lodash/isEmpty';\nimport { orArray, orObject } from '../modules/util';\n\nexport const RECEIVED_EDIT_DASHBOARD = 'RECEIVED_EDIT_DASHBOARD';\nexport const RECEIVED_NOT_EDITING = 'RECEIVED_NOT_EDITING';\nexport const START_NEW_DASHBOARD = 'START_NEW_DASHBOARD';\nexport const RECEIVED_TITLE = 'RECEIVED_TITLE';\nexport const RECEIVED_DESCRIPTION = 'RECEIVED_DESCRIPTION';\nexport const ADD_DASHBOARD_ITEM = 'ADD_DASHBOARD_ITEM';\nexport const REMOVE_DASHBOARD_ITEM = 'REMOVE_DASHBOARD_ITEM';\nexport const UPDATE_DASHBOARD_ITEM = 'UPDATE_DASHBOARD_ITEM';\nexport const RECEIVED_DASHBOARD_LAYOUT = 'RECEIVED_DASHBOARD_LAYOUT';\n\nexport const DEFAULT_STATE_EDIT_DASHBOARD = {};\nexport const NEW_DASHBOARD_STATE = {\n    id: '',\n    name: '',\n    access: {},\n    description: '',\n    dashboardItems: [],\n};\n\nexport default (state = DEFAULT_STATE_EDIT_DASHBOARD, action) => {\n    switch (action.type) {\n        case RECEIVED_EDIT_DASHBOARD: {\n            const newState = {};\n            Object.keys(NEW_DASHBOARD_STATE).map(\n                k => (newState[k] = action.value[k])\n            );\n            return newState;\n        }\n        case RECEIVED_NOT_EDITING:\n            return DEFAULT_STATE_EDIT_DASHBOARD;\n        case START_NEW_DASHBOARD:\n            return NEW_DASHBOARD_STATE;\n        case RECEIVED_TITLE: {\n            return Object.assign({}, state, { name: action.value });\n        }\n        case RECEIVED_DESCRIPTION: {\n            return Object.assign({}, state, {\n                description: action.value,\n            });\n        }\n        case ADD_DASHBOARD_ITEM:\n            return update(state, {\n                dashboardItems: { $unshift: [action.value] },\n            });\n        case REMOVE_DASHBOARD_ITEM: {\n            const idToRemove = action.value;\n\n            const dashboardItemIndex = state.dashboardItems.findIndex(\n                item => item.id === idToRemove\n            );\n\n            if (dashboardItemIndex > -1) {\n                return update(state, {\n                    dashboardItems: {\n                        $splice: [[dashboardItemIndex, 1]],\n                    },\n                });\n            }\n\n            return state;\n        }\n        case RECEIVED_DASHBOARD_LAYOUT: {\n            const stateItems = orArray(state.dashboardItems);\n\n            const newStateItems = action.value.map(({ x, y, w, h, i }) => {\n                const stateItem = stateItems.find(si => si.id === i);\n\n                return Object.assign({}, stateItem, { w, h, x, y });\n            });\n\n            return update(state, {\n                dashboardItems: { $set: newStateItems },\n            });\n        }\n        case UPDATE_DASHBOARD_ITEM: {\n            const dashboardItem = action.value;\n\n            const dashboardItemIndex = state.dashboardItems.findIndex(\n                item => item.id === dashboardItem.id\n            );\n\n            if (dashboardItemIndex > -1) {\n                const newState = update(state, {\n                    dashboardItems: {\n                        $splice: [[dashboardItemIndex, 1, dashboardItem]],\n                    },\n                });\n\n                return newState;\n            }\n\n            return state;\n        }\n        default:\n            return state;\n    }\n};\n\n// root selector\n\nexport const sGetEditDashboardRoot = state => state.editDashboard;\n\n// selectors\n\nexport const sGetIsEditing = state => !isEmpty(state.editDashboard);\n\nexport const sGetIsNewDashboard = state => {\n    return (\n        !isEmpty(state.editDashboard) && sGetEditDashboardRoot(state).id === ''\n    );\n};\n\nexport const sGetEditDashboardItems = state =>\n    orObject(sGetEditDashboardRoot(state)).dashboardItems;\n","export const CLEAR_EDIT_ITEM_FILTERS = 'CLEAR_EDIT_ITEM_FILTERS';\nexport const REMOVE_EDIT_ITEM_FILTER = 'REMOVE_EDIT_ITEM_FILTER';\nexport const SET_EDIT_ITEM_FILTERS = 'SET_EDIT_ITEM_FILTERS';\n\nexport const DEFAULT_STATE_EDIT_ITEM_FILTERS = {};\n\nexport default (state = DEFAULT_STATE_EDIT_ITEM_FILTERS, action) => {\n    switch (action.type) {\n        case REMOVE_EDIT_ITEM_FILTER: {\n            const newState = { ...state };\n\n            delete newState[action.id];\n\n            return newState;\n        }\n        case SET_EDIT_ITEM_FILTERS: {\n            return action.filters;\n        }\n        case CLEAR_EDIT_ITEM_FILTERS: {\n            return DEFAULT_STATE_EDIT_ITEM_FILTERS;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetEditItemFiltersRoot = state => state.editItemFilters;\n\nexport const sGetEditFiltersKeys = state =>\n    Object.keys(sGetEditItemFiltersRoot(state));\n","export const CLEAR_ITEM_FILTERS = 'CLEAR_ITEM_FILTERS';\nexport const SET_ITEM_FILTERS = 'SET_ITEM_FILTERS';\nexport const ADD_ITEM_FILTER = 'ADD_ITEM_FILTER';\nexport const REMOVE_ITEM_FILTER = 'REMOVE_ITEM_FILTER';\n\nexport const DEFAULT_STATE_ITEM_FILTERS = {};\n\nexport default (state = DEFAULT_STATE_ITEM_FILTERS, action) => {\n    switch (action.type) {\n        case ADD_ITEM_FILTER: {\n            return {\n                ...state,\n                [action.filter.id]: action.filter.value,\n            };\n        }\n        case REMOVE_ITEM_FILTER: {\n            const newState = { ...state };\n\n            delete newState[action.id];\n\n            return newState;\n        }\n        case SET_ITEM_FILTERS: {\n            return action.filters;\n        }\n        case CLEAR_ITEM_FILTERS: {\n            return DEFAULT_STATE_ITEM_FILTERS;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetItemFiltersRoot = state => state.itemFilters;\n\nexport const sGetFiltersKeys = state => Object.keys(sGetItemFiltersRoot(state));\n","import {\n    ADD_ITEM_FILTER,\n    REMOVE_ITEM_FILTER,\n    SET_ITEM_FILTERS,\n    CLEAR_ITEM_FILTERS,\n} from '../reducers/itemFilters';\n\nexport const FILTER_ORG_UNIT = 'ou';\n\n// actions\n\nexport const acAddItemFilter = filter => ({\n    type: ADD_ITEM_FILTER,\n    filter,\n});\n\nexport const acRemoveItemFilter = id => ({\n    type: REMOVE_ITEM_FILTER,\n    id,\n});\n\nexport const acClearItemFilters = () => ({\n    type: CLEAR_ITEM_FILTERS,\n});\n\nexport const acSetItemFilters = filters => ({\n    type: SET_ITEM_FILTERS,\n    filters,\n});\n","import {\n    REMOVE_EDIT_ITEM_FILTER,\n    SET_EDIT_ITEM_FILTERS,\n    CLEAR_EDIT_ITEM_FILTERS,\n} from '../reducers/editItemFilters';\n\n// actions\n\nexport const acRemoveEditItemFilter = id => ({\n    type: REMOVE_EDIT_ITEM_FILTER,\n    id,\n});\n\nexport const acClearEditItemFilters = () => ({\n    type: CLEAR_EDIT_ITEM_FILTERS,\n});\n\nexport const acSetEditItemFilters = filters => ({\n    type: SET_EDIT_ITEM_FILTERS,\n    filters,\n});\n","import { getInstance } from 'd2';\n\nconst onError = error => console.log('Error: ', error);\n\nconst saveDashboard = (dashboard, data) => {\n    const { name, description, dashboardItems } = data;\n\n    dashboard.name = name;\n    dashboard.description = description;\n    dashboard.dashboardItems = dashboardItems.map(item =>\n        Object.assign({}, item, { width: item.w, height: item.h })\n    );\n\n    return dashboard.save().then(msg => msg.response.uid);\n};\n\nexport const updateDashboard = data => {\n    return getInstance()\n        .then(d2 => {\n            return d2.models.dashboards\n                .get(data.id)\n                .then(dashboard => saveDashboard(dashboard, data));\n        })\n        .catch(onError);\n};\n\nexport const postDashboard = data => {\n    return getInstance().then(d2 => {\n        const dashboard = d2.models.dashboards.create();\n\n        return saveDashboard(dashboard, data);\n    });\n};\n","import { generateUid } from 'd2/uid';\n\nimport {\n    RECEIVED_EDIT_DASHBOARD,\n    START_NEW_DASHBOARD,\n    RECEIVED_NOT_EDITING,\n    RECEIVED_TITLE,\n    RECEIVED_DESCRIPTION,\n    RECEIVED_DASHBOARD_LAYOUT,\n    ADD_DASHBOARD_ITEM,\n    UPDATE_DASHBOARD_ITEM,\n    REMOVE_DASHBOARD_ITEM,\n} from '../reducers/editDashboard';\nimport { sGetEditDashboardRoot } from '../reducers/editDashboard';\nimport { updateDashboard, postDashboard } from '../api/editDashboard';\nimport { tSetSelectedDashboardById } from '../actions/selected';\nimport { NEW_ITEM_SHAPE } from '../components/ItemGrid/gridUtil';\nimport {\n    itemTypeMap,\n    isSpacerType,\n    TEXT,\n    emptyTextItemContent,\n    isTextType,\n} from '../modules/itemTypes';\n\nconst onError = error => {\n    console.log('Error (Saving Dashboard): ', error);\n    return error;\n};\n\n// actions\n\nexport const acSetEditDashboard = (dashboard, items) => {\n    const val = {\n        ...dashboard,\n        dashboardItems: items,\n    };\n\n    return {\n        type: RECEIVED_EDIT_DASHBOARD,\n        value: val,\n    };\n};\n\nexport const acSetEditNewDashboard = () => ({\n    type: START_NEW_DASHBOARD,\n});\n\nexport const acClearEditDashboard = () => ({\n    type: RECEIVED_NOT_EDITING,\n});\n\nexport const acSetDashboardTitle = value => ({\n    type: RECEIVED_TITLE,\n    value,\n});\n\nexport const acSetDashboardDescription = value => ({\n    type: RECEIVED_DESCRIPTION,\n    value,\n});\n\nexport const acUpdateDashboardLayout = value => ({\n    type: RECEIVED_DASHBOARD_LAYOUT,\n    value,\n});\n\nexport const acAddDashboardItem = item => {\n    const type = item.type;\n    delete item.type;\n    const itemPropName = itemTypeMap[type].propName;\n\n    return {\n        type: ADD_DASHBOARD_ITEM,\n        value: {\n            id: generateUid(),\n            type,\n            [itemPropName]: item.content,\n            ...NEW_ITEM_SHAPE,\n        },\n    };\n};\n\nexport const acUpdateDashboardItem = item => ({\n    type: UPDATE_DASHBOARD_ITEM,\n    value: item,\n});\n\nexport const acRemoveDashboardItem = value => ({\n    type: REMOVE_DASHBOARD_ITEM,\n    value,\n});\n\n// thunks\n\nexport const tSaveDashboard = () => async (dispatch, getState) => {\n    const dashboard = sGetEditDashboardRoot(getState());\n\n    const dashboardItems = dashboard.dashboardItems.map(item => {\n        const text = isTextType(item)\n            ? item.text || emptyTextItemContent\n            : null;\n\n        const type = isSpacerType(item) ? TEXT : item.type;\n\n        return {\n            ...item,\n            ...(text ? { text } : {}),\n            type,\n        };\n    });\n\n    const dashboardToSave = {\n        ...dashboard,\n        dashboardItems,\n    };\n\n    try {\n        const dashboardId = dashboardToSave.id\n            ? await updateDashboard(dashboardToSave)\n            : await postDashboard(dashboardToSave);\n\n        dispatch(acClearEditDashboard());\n        await dispatch(tSetSelectedDashboardById(dashboardId));\n\n        return Promise.resolve(dashboardId);\n    } catch (error) {\n        onError(error);\n    }\n};\n","import {\n    SET_DASHBOARDS,\n    ADD_DASHBOARDS,\n    SET_DASHBOARD_STARRED,\n    SET_DASHBOARD_DISPLAY_NAME,\n    SET_DASHBOARD_ITEMS,\n} from '../reducers/dashboards';\nimport {\n    getCustomDashboards,\n    sGetDashboardById,\n    sGetDashboardsSortedByStarred,\n} from '../reducers/dashboards';\nimport { sGetUserUsername } from '../reducers/user';\nimport { tSetSelectedDashboardById, acSetSelectedId } from './selected';\nimport { sGetSelectedId } from '../reducers/selected';\nimport { sGetIsEditing } from '../reducers/editDashboard';\nimport { sGetEditItemFiltersRoot } from '../reducers/editItemFilters';\nimport { acSetItemFilters, acClearItemFilters } from './itemFilters';\nimport { acClearEditItemFilters } from './editItemFilters';\nimport { acClearEditDashboard } from './editDashboard';\nimport {\n    apiFetchDashboards,\n    apiStarDashboard,\n    apiDeleteDashboard,\n} from '../api/dashboards';\nimport { getPreferredDashboardId } from '../api/localStorage';\nimport { arrayToIdMap } from '../modules/util';\n\n// actions\n\nexport const acSetDashboards = dashboards => ({\n    type: SET_DASHBOARDS,\n    value: arrayToIdMap(getCustomDashboards(dashboards)),\n});\n\nexport const acAppendDashboards = dashboards => ({\n    type: ADD_DASHBOARDS,\n    value: arrayToIdMap(getCustomDashboards(dashboards)),\n});\n\nexport const acSetDashboardStarred = (dashboardId, isStarred) => ({\n    type: SET_DASHBOARD_STARRED,\n    dashboardId: dashboardId,\n    value: isStarred,\n});\n\nexport const acSetDashboardDisplayName = (dashboardId, value) => ({\n    type: SET_DASHBOARD_DISPLAY_NAME,\n    dashboardId,\n    value,\n});\n\nexport const acSetDashboardItems = value => ({\n    type: SET_DASHBOARD_ITEMS,\n    value,\n});\n\n// thunks\n\nexport const tFetchDashboards = () => async dispatch => {\n    const collection = await apiFetchDashboards();\n    dispatch(acSetDashboards(collection.toArray()));\n};\n\nexport const tSelectDashboard = id => async (dispatch, getState) => {\n    const onError = error => {\n        console.log('Error (apiFetchDashboards): ', error);\n        return error;\n    };\n\n    try {\n        const state = getState();\n\n        let dashboardToSelect = null;\n        if (id) {\n            dashboardToSelect = sGetDashboardById(state, id) || null;\n        } else {\n            const preferredId = getPreferredDashboardId(\n                sGetUserUsername(state)\n            );\n            const dash = sGetDashboardById(state, preferredId);\n            dashboardToSelect =\n                preferredId && dash\n                    ? dash\n                    : sGetDashboardsSortedByStarred(state)[0];\n        }\n\n        if (dashboardToSelect) {\n            dispatch(tSetSelectedDashboardById(dashboardToSelect.id));\n\n            if (dashboardToSelect.id === sGetSelectedId(state)) {\n                if (sGetIsEditing(state)) {\n                    // disable filters when switching to edit mode\n                    dispatch(acClearItemFilters());\n                } else {\n                    // enable filters when switching to view mode\n                    dispatch(acSetItemFilters(sGetEditItemFiltersRoot(state)));\n                }\n            } else {\n                // clear filters when switching dashboard\n                dispatch(acClearEditItemFilters());\n                dispatch(acClearItemFilters());\n            }\n        } else {\n            dispatch(acSetSelectedId(false));\n        }\n    } catch (err) {\n        return onError(err);\n    }\n};\n\nexport const tStarDashboard = (id, isStarred) => async dispatch => {\n    const onSuccess = id => {\n        dispatch(acSetDashboardStarred(id, isStarred));\n        return id;\n    };\n\n    const onError = error => {\n        console.log('Error (apiStarDashboard): ', error);\n        return error;\n    };\n    try {\n        await apiStarDashboard(id, isStarred);\n        return onSuccess(id);\n    } catch (err) {\n        return onError(err);\n    }\n};\n\nexport const tDeleteDashboard = id => async dispatch => {\n    try {\n        await apiDeleteDashboard(id);\n        dispatch(acClearEditDashboard());\n        dispatch(acSetSelectedId());\n        dispatch(acSetDashboardItems([]));\n\n        await dispatch(tFetchDashboards());\n\n        return Promise.resolve();\n    } catch (err) {\n        console.log('Error (deleteDashboard): ', err);\n        return err;\n    }\n};\n","/** @module reducers/controlBar */\nimport { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\n\nexport const SET_CONTROLBAR_USER_ROWS = 'SET_CONTROLBAR_USER_ROWS';\n\nexport const DEFAULT_STATE_CONTROLBAR_ROWS = 1;\n\nconst userRows = (state = DEFAULT_STATE_CONTROLBAR_ROWS, action) => {\n    switch (action.type) {\n        case SET_CONTROLBAR_USER_ROWS:\n            return validateReducer(action.value, DEFAULT_STATE_CONTROLBAR_ROWS);\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    userRows,\n});\n\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\nexport const sGetControlBarRoot = state => state.controlBar;\n\n// Selector dependency level 2\n\nexport const sGetControlBarUserRows = state =>\n    sGetControlBarRoot(state).userRows;\n","import { getInstance } from 'd2';\nimport { DEFAULT_STATE_CONTROLBAR_ROWS } from '../reducers/controlBar';\n\nconst NAMESPACE = 'dashboard';\nconst KEY = 'controlBarRows';\n\nconst hasNamespace = async d2 => await d2.currentUser.dataStore.has(NAMESPACE);\n\nconst getNamespace = async (d2, hasNamespace) =>\n    hasNamespace\n        ? await d2.currentUser.dataStore.get(NAMESPACE)\n        : await d2.currentUser.dataStore.create(NAMESPACE);\n\nexport const apiGetControlBarRows = async () => {\n    const d2 = await getInstance();\n    const namespace = await getNamespace(d2, await hasNamespace(d2));\n    const hasKey = namespace.keys && namespace.keys.find(key => key === KEY);\n\n    if (hasKey) {\n        return await namespace.get(KEY);\n    } else {\n        await apiPostControlBarRows(DEFAULT_STATE_CONTROLBAR_ROWS, namespace);\n        console.log(\n            '(These errors to /userDataStore/dashboard can be ignored)'\n        );\n        return DEFAULT_STATE_CONTROLBAR_ROWS;\n    }\n};\n\nexport const apiPostControlBarRows = async (rows, namespace) => {\n    const d2 = await getInstance();\n    const ns = namespace || (await getNamespace(d2, hasNamespace));\n\n    ns.set(KEY, rows);\n};\n","import { SET_CONTROLBAR_USER_ROWS } from '../reducers/controlBar';\nimport { apiGetControlBarRows } from '../api/controlBar';\n\n// actions\n\nexport const acSetControlBarUserRows = rows => ({\n    type: SET_CONTROLBAR_USER_ROWS,\n    value: rows,\n});\n\n// thunks\n\nexport const tSetControlBarRows = () => async dispatch => {\n    const onSuccess = rows => {\n        dispatch(acSetControlBarUserRows(rows));\n    };\n\n    const onError = error => {\n        console.log('Error (apiGetControlBarRows): ', error);\n        return error;\n    };\n\n    try {\n        const controlBarRows = await apiGetControlBarRows();\n        return onSuccess(controlBarRows);\n    } catch (err) {\n        return onError(err);\n    }\n};\n","import { FIXED_DIMENSIONS } from '@dhis2/analytics';\n\nexport const SET_DIMENSIONS = 'SET_DIMENSIONS';\nexport const DEFAULT_DIMENSIONS = {\n    pe: FIXED_DIMENSIONS.pe,\n    ou: FIXED_DIMENSIONS.ou,\n};\n\nexport default (state = DEFAULT_DIMENSIONS, action) => {\n    switch (action.type) {\n        case SET_DIMENSIONS: {\n            return {\n                ...DEFAULT_DIMENSIONS,\n                ...action.value,\n            };\n        }\n        default:\n            return state;\n    }\n};\n\nexport const sGetDimensions = state => state.dimensions;\n","export const SET_SETTINGS = 'SET_SETTINGS';\nexport const ADD_SETTINGS = 'ADD_SETTINGS';\n\nexport const DEFAULT_SETTINGS = {\n    keyDateFormat: 'yyyy-MM-dd',\n    keyAnalysisRelativePeriod: 'LAST_12_MONTHS',\n    keyAnalysisDigitGroupSeparator: 'SPACE',\n    displayNameProperty: 'displayName',\n    uiLocale: 'en',\n    rootOrganisationUnit: {},\n};\n\nexport default (state = DEFAULT_SETTINGS, action) => {\n    switch (action.type) {\n        case SET_SETTINGS: {\n            return Object.assign({}, action.value);\n        }\n        case ADD_SETTINGS: {\n            return {\n                ...state,\n                ...action.value,\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// Selectors\n\nexport const sGetSettings = state => state.settings;\n\nexport const sGetSettingsDisplayNameProperty = state =>\n    sGetSettings(state).displayNameProperty;\n\nexport const sGetRootOrgUnit = state =>\n    sGetSettings(state).rootOrganisationUnit;\n\nexport const sGetRelativePeriod = state =>\n    sGetSettings(state).keyAnalysisRelativePeriod;\n\nexport const sGetUiLocale = state => sGetSettings(state).uiLocale;\n","import keyBy from 'lodash/keyBy';\nimport sortBy from 'lodash/sortBy';\nimport { SET_DIMENSIONS } from '../reducers/dimensions';\nimport { apiFetchDimensions } from '@dhis2/analytics';\nimport { sGetSettingsDisplayNameProperty } from '../reducers/settings';\n\nexport const acSetDimensions = dimensions => ({\n    type: SET_DIMENSIONS,\n    value: keyBy(sortBy(dimensions, [d => d.name.toLowerCase()]), 'id'),\n});\n\nexport const tSetDimensions = d2 => async (dispatch, getState) => {\n    const onSuccess = dimensions => {\n        dispatch(acSetDimensions(dimensions));\n    };\n\n    const onError = error => {\n        console.log('Error (apiFetchDimensions): ', error);\n        return error;\n    };\n\n    try {\n        const displayNameProp = sGetSettingsDisplayNameProperty(getState());\n        const dimensions = await apiFetchDimensions(d2, displayNameProp);\n\n        // filter out CATEGORY that are not of type ATTRIBUTE\n        const filteredDimensions = dimensions.filter(\n            dim =>\n                dim.dimensionType !== 'CATEGORY' ||\n                (dim.dimensionType === 'CATEGORY' &&\n                    dim.dataDimensionType === 'ATTRIBUTE')\n        );\n        return onSuccess(filteredDimensions);\n    } catch (err) {\n        return onError(err);\n    }\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { colors } from '@dhis2/ui-core';\nimport { withStyles } from '@material-ui/core/styles';\n\nexport const SHOWMORE_BAR_HEIGHT = 16;\n\nconst styles = {\n    showMore: {\n        color: colors.grey700,\n        cursor: 'pointer',\n        fontSize: 11,\n        paddingTop: 5,\n        '&:hover': {\n            textDecoration: 'underline',\n        },\n    },\n    disabled: {\n        paddingTop: 5,\n        color: colors.grey500,\n        fontSize: 11,\n        cursor: 'not-allowed',\n    },\n};\n\nexport const ShowMoreButton = ({ onClick, isMaxHeight, classes, disabled }) => {\n    return (\n        <div style={{ textAlign: 'center' }}>\n            {disabled ? (\n                <div className={classes.disabled}>{i18n.t('Show more')}</div>\n            ) : (\n                <div className={classes.showMore} onClick={onClick}>\n                    {isMaxHeight ? i18n.t('Show less') : i18n.t('Show more')}\n                </div>\n            )}\n        </div>\n    );\n};\n\nShowMoreButton.propTypes = {\n    classes: PropTypes.object,\n    disabled: PropTypes.bool,\n    isMaxHeight: PropTypes.bool,\n    onClick: PropTypes.func,\n};\n\nexport default withStyles(styles)(ShowMoreButton);\n","import { SHOWMORE_BAR_HEIGHT } from './ShowMoreButton';\n\nexport const CONTROL_BAR_ROW_HEIGHT = 40;\nexport const FIRST_ROW_PADDING_HEIGHT = 10;\nexport const MIN_ROW_COUNT = 1;\n\nexport const HEADERBAR_HEIGHT = 48;\n\nconst CONTROL_BAR_OUTER_HEIGHT_DIFF =\n    FIRST_ROW_PADDING_HEIGHT + SHOWMORE_BAR_HEIGHT - 2; // 2 pixel \"adjustment\"\n\nexport const getRowsHeight = rows => {\n    return rows * CONTROL_BAR_ROW_HEIGHT;\n};\n\nexport const getNumRowsFromHeight = height => {\n    return Math.floor(\n        (height - CONTROL_BAR_OUTER_HEIGHT_DIFF) / CONTROL_BAR_ROW_HEIGHT\n    );\n};\n\nexport const getTopOffset = rows => {\n    return HEADERBAR_HEIGHT + getControlBarHeight(rows, false);\n};\n\nexport const getControlBarHeight = rows => {\n    return getRowsHeight(rows) + CONTROL_BAR_OUTER_HEIGHT_DIFF;\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { colors } from '@dhis2/ui-core';\nimport { HEADERBAR_HEIGHT } from './controlBarDimensions';\n\nimport classes from './styles/ControlBar.module.css';\n\nconst DRAG_HANDLE_HEIGHT = 7;\n\nclass ControlBar extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            dragging: false,\n        };\n    }\n\n    onStartDrag = () => {\n        this.setState({ dragging: true });\n        window.addEventListener('mousemove', this.onDrag);\n        window.addEventListener('mouseup', this.onEndDrag);\n    };\n\n    onDrag = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const newHeight = event.clientY;\n\n        if (\n            this.props.onChangeHeight &&\n            newHeight !== this.props.height &&\n            newHeight > 0\n        ) {\n            requestAnimationFrame(() => {\n                this.props.onChangeHeight(newHeight);\n            });\n        }\n    };\n\n    onEndDrag = () => {\n        this.setState({ dragging: false });\n        window.removeEventListener('mousemove', this.onDrag);\n        window.removeEventListener('mouseup', this.onEndDrag);\n\n        if (this.props.onEndDrag) {\n            this.props.onEndDrag();\n        }\n    };\n\n    renderDragHandle() {\n        return typeof this.props.onChangeHeight === 'function' ? (\n            <div\n                className={classes.draghandle}\n                style={{ height: DRAG_HANDLE_HEIGHT }}\n                onMouseDown={this.onStartDrag}\n            />\n        ) : null;\n    }\n\n    render() {\n        const height = Math.max(this.props.height, 0) + DRAG_HANDLE_HEIGHT;\n\n        const rootStyle = Object.assign(\n            {\n                height,\n                top: HEADERBAR_HEIGHT,\n                backgroundColor: this.props.editMode\n                    ? colors.yellow050\n                    : colors.white,\n                paddingBottom: DRAG_HANDLE_HEIGHT,\n            },\n            // Disable animations while dragging\n            this.state.dragging ? { transition: 'none' } : {}\n        );\n\n        return (\n            <div style={rootStyle} className={classes.root}>\n                <div className={classes.content}>{this.props.children}</div>\n                {this.renderDragHandle()}\n            </div>\n        );\n    }\n}\n\nControlBar.propTypes = {\n    /**\n     * The height of the control bar in number of lines. Must be a positive integer.\n     */\n    children: PropTypes.node.isRequired,\n\n    /**\n     * If true, the background color of the control bar changes to indicate that edit mode is active.\n     */\n    editMode: PropTypes.bool.isRequired,\n\n    /**\n     * Callback function that is called when the control bar is resized.\n     * The callback receives one argument: The new height in pixels.\n     *\n     * If no callback is specified the control bar will not have a drag handle.\n     */\n    height: PropTypes.number.isRequired,\n\n    /**\n     * Callback function that is called when the control bar is dropped after being dragged.\n     * The callback receives one argument: The new height in pixels.\n     *\n     * Ignored if no \"onChangeHeight\" function is provided.\n     */\n    onChangeHeight: PropTypes.func,\n\n    /**\n     * The contents of the control bar.\n     */\n    onEndDrag: PropTypes.func,\n};\n\nControlBar.defaultProps = {\n    onChangeHeight: null,\n    onEndDrag: null,\n};\n\nexport default ControlBar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst StarIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>\n);\n\nStarIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default StarIcon;\n","import { getInstance } from 'd2';\n\nexport const apiPostDataStatistics = async (eventType, id) => {\n    const d2 = await getInstance();\n    const url = `dataStatistics?eventType=${eventType}&favorite=${id}`;\n\n    d2.Api.getApi().post(url);\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Chip, colors } from '@dhis2/ui-core';\nimport { Link } from 'react-router-dom';\nimport debounce from 'lodash/debounce';\n\nimport StarIcon from '../../icons/Star';\nimport { apiPostDataStatistics } from '../../api/dataStatistics';\n\nconst styles = {\n    chip: {\n        margin: '3px',\n    },\n    link: {\n        color: colors.grey600,\n        display: 'inline-block',\n        textDecoration: 'none',\n        verticalAlign: 'top',\n    },\n    icon: {\n        height: '20px',\n        marginTop: '2px',\n        width: '20px',\n    },\n    selected: {\n        fill: colors.white,\n    },\n    unselected: {\n        fill: colors.grey700,\n    },\n};\n\nexport const DashboardItemChip = ({\n    starred,\n    selected,\n    label,\n    dashboardId,\n    classes,\n}) => {\n    const chipProps = {\n        selected,\n        className: classes.chip,\n    };\n\n    if (starred) {\n        const selectedState = selected ? classes.selected : classes.unselected;\n        chipProps.icon = (\n            <StarIcon className={`${classes.icon} ${selectedState}`} />\n        );\n    }\n\n    return (\n        <Link\n            className={classes.link}\n            to={`/${dashboardId}`}\n            onClick={debounce(\n                () => apiPostDataStatistics('DASHBOARD_VIEW', dashboardId),\n                500\n            )}\n        >\n            <Chip {...chipProps}>{label}</Chip>\n        </Link>\n    );\n};\n\nDashboardItemChip.propTypes = {\n    dashboardId: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    selected: PropTypes.bool.isRequired,\n    starred: PropTypes.bool.isRequired,\n    classes: PropTypes.object,\n};\n\nexport default withStyles(styles)(DashboardItemChip);\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\n\nconst AddCircleIcon = () => (\n    <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"32\"\n        height=\"32\"\n        fill={colors.teal600}\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm4 11h-3v3c0 .55-.45 1-1 1s-1-.45-1-1v-3H8c-.55 0-1-.45-1-1s.45-1 1-1h3V8c0-.55.45-1 1-1s1 .45 1 1v3h3c.55 0 1 .45 1 1s-.45 1-1 1z\" />\n    </svg>\n);\n\nexport default AddCircleIcon;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nconst ClearIcon = ({ className }) => (\n    <svg\n        className={className}\n        fill={colors.grey800}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>\n);\n\nClearIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default ClearIcon;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ClearIcon from '../../icons/Clear';\n\nimport classes from './styles/ClearButton.module.css';\n\nexport const ClearButton = ({ onClear }) => (\n    <button className={classes.button} onClick={onClear}>\n        <span>\n            <ClearIcon className={classes.icon} color=\"action\" />\n        </span>\n    </button>\n);\n\nClearButton.propTypes = {\n    onClear: PropTypes.func.isRequired,\n};\n\nexport default ClearButton;\n","import { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\n\nexport const SET_DASHBOARDS_FILTER_NAME = 'SET_DASHBOARDS_FILTER_NAME';\nexport const SET_DASHBOARDS_FILTER_OWNER = 'SET_DASHBOARDS_FILTER_OWNER';\nexport const SET_DASHBOARDS_FILTER_ORDER = 'SET_DASHBOARDS_FILTER_ORDER';\n\nexport const ownerData = [\n    { id: 'ALL', value: 'All users' },\n    { id: 'ME', value: 'Created by me' },\n    { id: 'OTHERS', value: 'Created by others' },\n];\n\nexport const orderData = [\n    { id: 'NAME:ASC', value: 'Name (asc)' },\n    { id: 'NAME:ASC', value: 'Name (desc)' },\n    { id: 'ITEMS:ASC', value: 'Number of items (asc)' },\n    { id: 'ITEMS:ASC', value: 'Number of items (desc)' },\n    { id: 'CREATED:ASC', value: 'Created date (asc)' },\n    { id: 'CREATED:ASC', value: 'Created date (desc)' },\n];\n\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_NAME = '';\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_OWNER = ownerData[0].id;\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_ORDER = orderData[0].id;\n\nconst name = (state = DEFAULT_STATE_DASHBOARDS_FILTER_NAME, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_NAME:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_NAME\n            );\n        default:\n            return state;\n    }\n};\n\nconst owner = (state = DEFAULT_STATE_DASHBOARDS_FILTER_OWNER, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_OWNER:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_NAME\n            );\n        default:\n            return state;\n    }\n};\n\nconst order = (state = DEFAULT_STATE_DASHBOARDS_FILTER_ORDER, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_ORDER:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_ORDER\n            );\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    name,\n    owner,\n    order,\n});\n\n// selectors\n\nexport const sGetDashboardsFilterRoot = state => state.dashboardsFilter;\n\n// selector dependency level 2\n\nexport const sGetFilterName = state => sGetDashboardsFilterRoot(state).name;\nexport const sGetFilterOwner = state => sGetDashboardsFilterRoot(state).owner;\nexport const sGetFilterOrder = state => sGetDashboardsFilterRoot(state).order;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport i18n from '@dhis2/d2-i18n';\nimport InputField from '@material-ui/core/Input';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { colors } from '@dhis2/ui-core';\n\nimport ClearButton from './ClearButton';\nimport { DEFAULT_STATE_DASHBOARDS_FILTER_NAME } from '../../reducers/dashboardsFilter';\n\nexport const KEYCODE_ENTER = 13;\nexport const KEYCODE_ESCAPE = 27;\n\nconst styles = {\n    filterField: {\n        fontSize: '14px',\n        width: '200px',\n        height: '30px',\n        top: '-4px',\n    },\n    searchIcon: {\n        color: colors.grey700,\n        width: '20px',\n        height: '20px',\n    },\n};\n\nexport class Filter extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            value: DEFAULT_STATE_DASHBOARDS_FILTER_NAME,\n        };\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setState({\n            value: nextProps.name,\n        });\n    }\n\n    setFilterValue = event => {\n        event.preventDefault();\n\n        this.props.onChangeName(event.target.value);\n    };\n\n    handleKeyUp = event => {\n        switch (event.keyCode) {\n            case KEYCODE_ENTER:\n                this.props.onKeypressEnter();\n                break;\n            case KEYCODE_ESCAPE:\n                this.props.onChangeName();\n                break;\n            default:\n                break;\n        }\n    };\n\n    render() {\n        const { classes, name, onChangeName } = this.props;\n\n        const startAdornment = (\n            <InputAdornment position=\"start\">\n                <SearchIcon className={classes.searchIcon} />\n            </InputAdornment>\n        );\n\n        const endAdornment =\n            name !== '' && name !== null ? (\n                <InputAdornment position=\"end\">\n                    <ClearButton onClear={() => onChangeName()} />\n                </InputAdornment>\n            ) : null;\n\n        return (\n            <InputField\n                className={classes.filterField}\n                placeholder={i18n.t('Search for a dashboard')}\n                startAdornment={startAdornment}\n                endAdornment={endAdornment}\n                value={this.state.value}\n                onChange={this.setFilterValue}\n                onKeyUp={this.handleKeyUp}\n            />\n        );\n    }\n}\n\nFilter.propTypes = {\n    classes: PropTypes.object,\n    name: PropTypes.string,\n    onChangeName: PropTypes.func,\n    onKeypressEnter: PropTypes.func,\n};\n\nFilter.defaultProps = {\n    name: '',\n    onChangeName: Function.prototype,\n};\n\nexport default withStyles(styles)(Filter);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport ControlBar from './ControlBar';\nimport arraySort from 'd2-utilizr/lib/arraySort';\nimport PropTypes from 'prop-types';\n\nimport Chip from './DashboardItemChip';\nimport AddCircleIcon from '../../icons/AddCircle';\nimport Filter from './Filter';\nimport ShowMoreButton from './ShowMoreButton';\nimport {\n    FIRST_ROW_PADDING_HEIGHT,\n    MIN_ROW_COUNT,\n    getRowsHeight,\n    getControlBarHeight,\n    getNumRowsFromHeight,\n} from './controlBarDimensions';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { sGetAllDashboards } from '../../reducers/dashboards';\nimport { sGetFilterName } from '../../reducers/dashboardsFilter';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { acSetControlBarUserRows } from '../../actions/controlBar';\nimport { acSetFilterName } from '../../actions/dashboardsFilter';\nimport { orObject, orArray } from '../../modules/util';\nimport { apiPostControlBarRows } from '../../api/controlBar';\n\nimport classes from './styles/DashboardsBar.module.css';\n\nexport const MAX_ROW_COUNT = 10;\n\nexport class DashboardsBar extends Component {\n    state = {\n        rows: MIN_ROW_COUNT,\n    };\n\n    setInitialDashboardState = rows => {\n        this.setState({ rows, isMaxHeight: rows === MAX_ROW_COUNT });\n    };\n\n    componentDidMount() {\n        this.setInitialDashboardState(this.props.userRows);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setInitialDashboardState(nextProps.userRows);\n    }\n\n    onChangeHeight = newHeight => {\n        const adjustedHeight = newHeight - 52; // don't rush the transition to a bigger row count\n        const newRows = Math.max(\n            MIN_ROW_COUNT,\n            getNumRowsFromHeight(adjustedHeight)\n        );\n\n        if (newRows !== this.state.rows) {\n            const newRowCount = Math.min(newRows, MAX_ROW_COUNT);\n\n            this.props.onChangeHeight(newRowCount);\n        }\n    };\n\n    onEndDrag = () => {\n        return apiPostControlBarRows(this.state.rows);\n    };\n\n    onToggleMaxHeight = () => {\n        const rows =\n            this.state.rows === MAX_ROW_COUNT\n                ? this.props.userRows\n                : MAX_ROW_COUNT;\n\n        this.setState({ rows, isMaxHeight: !this.state.isMaxHeight });\n    };\n\n    onSelectDashboard = () => {\n        this.props.history.push(`/${this.props.dashboards[0].id}`);\n    };\n\n    render() {\n        const { dashboards, name, selectedId, onChangeFilterName } = this.props;\n\n        const rowCount = this.state.isMaxHeight\n            ? MAX_ROW_COUNT\n            : this.state.rows;\n        const controlBarHeight = getControlBarHeight(rowCount);\n        const contentWrapperStyle = {\n            padding: `${FIRST_ROW_PADDING_HEIGHT}px 6px 0 6px`,\n            overflowY: this.state.isMaxHeight ? 'auto' : 'hidden',\n            height: getRowsHeight(rowCount) + FIRST_ROW_PADDING_HEIGHT,\n        };\n\n        return (\n            <ControlBar\n                height={controlBarHeight}\n                onChangeHeight={this.onChangeHeight}\n                onEndDrag={this.onEndDrag}\n                editMode={false}\n            >\n                <div style={contentWrapperStyle}>\n                    <div className={classes.leftControls}>\n                        <Link\n                            style={{\n                                display: 'inline-block',\n                                textDecoration: 'none',\n                                marginRight: 10,\n                                position: 'relative',\n                                top: '2px',\n                            }}\n                            to={'/new'}\n                        >\n                            <AddCircleIcon />\n                        </Link>\n                        <Filter\n                            name={name}\n                            onChangeName={onChangeFilterName}\n                            onKeypressEnter={this.onSelectDashboard}\n                        />\n                    </div>\n                    {orArray(dashboards).map(dashboard => (\n                        <Chip\n                            key={dashboard.id}\n                            label={dashboard.displayName}\n                            starred={dashboard.starred}\n                            dashboardId={dashboard.id}\n                            selected={dashboard.id === selectedId}\n                        />\n                    ))}\n                </div>\n                <ShowMoreButton\n                    onClick={this.onToggleMaxHeight}\n                    isMaxHeight={this.state.isMaxHeight}\n                    disabled={this.props.userRows === MAX_ROW_COUNT}\n                />\n            </ControlBar>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    dashboards: sGetAllDashboards(state),\n    name: sGetFilterName(state),\n    userRows: sGetControlBarUserRows(state),\n    selectedId: sGetSelectedId(state),\n});\n\nconst mapDispatchToProps = {\n    onChangeHeight: acSetControlBarUserRows,\n    onChangeFilterName: acSetFilterName,\n};\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const dashboards = Object.values(orObject(stateProps.dashboards));\n    const displayDashboards = arraySort(\n        dashboards.filter(d =>\n            d.displayName.toLowerCase().includes(stateProps.name.toLowerCase())\n        ),\n        'ASC',\n        'displayName'\n    );\n\n    return {\n        ...stateProps,\n        ...ownProps,\n        ...dispatchProps,\n        dashboards: [\n            ...displayDashboards.filter(d => d.starred),\n            ...displayDashboards.filter(d => !d.starred),\n        ],\n    };\n};\n\nDashboardsBar.propTypes = {\n    dashboards: PropTypes.array,\n    history: PropTypes.object,\n    name: PropTypes.string,\n    selectedId: PropTypes.string,\n    userRows: PropTypes.number,\n    onChangeFilterName: PropTypes.func,\n    onChangeHeight: PropTypes.func,\n};\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps,\n        mergeProps\n    )(DashboardsBar)\n);\n","import {\n    SET_DASHBOARDS_FILTER_NAME,\n    SET_DASHBOARDS_FILTER_OWNER,\n    SET_DASHBOARDS_FILTER_ORDER,\n} from '../reducers/dashboardsFilter';\n\n// actions\n\nexport const acSetFilterName = value => ({\n    type: SET_DASHBOARDS_FILTER_NAME,\n    value,\n});\n\nexport const acSetFilterOwner = value => ({\n    type: SET_DASHBOARDS_FILTER_OWNER,\n    value,\n});\n\nexport const acSetFilterOrder = value => ({\n    type: SET_DASHBOARDS_FILTER_ORDER,\n    value,\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport {\n    getTopOffset,\n    MIN_ROW_COUNT,\n} from '../ControlBar/controlBarDimensions';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\n\nconst DashboardVerticalOffset = props => {\n    const rows = props.editMode ? MIN_ROW_COUNT : props.userRows;\n    const marginTop = getTopOffset(rows);\n\n    return <div className=\"page-container-top-margin\" style={{ marginTop }} />;\n};\n\nconst mapStateToProps = state => ({\n    userRows: sGetControlBarUserRows(state),\n});\n\nDashboardVerticalOffset.propTypes = {\n    editMode: PropTypes.bool,\n    userRows: PropTypes.number,\n};\n\nexport default connect(mapStateToProps)(DashboardVerticalOffset);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { MenuItem, colors } from '@dhis2/ui-core';\n\nconst HeaderMenuItem = ({ title }) => (\n    <MenuItem\n        dense\n        key={title}\n        disabled\n        label={\n            <p style={{ color: colors.grey800, fontWeight: '600' }}>{title}</p>\n        }\n    />\n);\n\nHeaderMenuItem.propTypes = {\n    title: PropTypes.string.isRequired,\n};\n\nexport default HeaderMenuItem;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nconst LaunchIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"12\"\n        height=\"12\"\n        fill={colors.grey600}\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z\" />\n    </svg>\n);\n\nLaunchIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default LaunchIcon;\n","import React from 'react';\nimport { MenuItem, colors } from '@dhis2/ui-core';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\n\nimport { getItemIcon } from '../../modules/itemTypes';\nimport LaunchIcon from '../../icons/Launch';\n\nimport classes from './styles/ContentMenuItem.module.css';\n\nconst LaunchLink = ({ url }) => (\n    <a\n        onClick={e => e.stopPropagation()}\n        className={classes.launchLink}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        href={url}\n    >\n        <LaunchIcon />\n    </a>\n);\n\nLaunchLink.propTypes = {\n    url: PropTypes.string,\n};\n\nconst InsertButton = () => (\n    <button className={classes.buttonInsert}>{i18n.t('Insert')}</button>\n);\n\nconst ContentMenuItem = ({ type, name, onInsert, url }) => {\n    const ItemIcon = getItemIcon(type);\n\n    return (\n        <MenuItem\n            dense\n            onClick={onInsert}\n            label={\n                <div className={classes.menuItem}>\n                    <div className={classes.label}>\n                        <ItemIcon\n                            style={{ margin: '6px', fill: colors.grey600 }}\n                        />\n                        <span>{name}</span>\n                        {url ? <LaunchLink url={url} /> : null}\n                    </div>\n                    <InsertButton />\n                </div>\n            }\n        />\n    );\n};\n\nContentMenuItem.propTypes = {\n    name: PropTypes.string,\n    type: PropTypes.string,\n    url: PropTypes.string,\n    onInsert: PropTypes.func,\n};\n\nexport default ContentMenuItem;\n","import i18n from '@dhis2/d2-i18n';\nimport {\n    spacerContent,\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_CHART,\n    EVENT_REPORT,\n    USERS,\n    REPORTS,\n    RESOURCES,\n    APP,\n    MESSAGES,\n    TEXT,\n    SPACER,\n} from '../../modules/itemTypes';\n\nexport const singleItems = [\n    {\n        id: 'additional',\n        header: i18n.t('Additional items'),\n        items: [\n            {\n                type: TEXT,\n                name: i18n.t('Text box'),\n                content: '',\n            },\n            {\n                type: MESSAGES,\n                name: i18n.t('Messages'),\n                content: 'true',\n            },\n            {\n                type: SPACER,\n                name: i18n.t('Spacer'),\n                content: spacerContent,\n            },\n        ],\n    },\n];\n\n// categorizedItems are grouped in the item selector menu\nexport const categorizedItems = [\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_REPORT,\n    EVENT_CHART,\n    USERS,\n    REPORTS,\n    RESOURCES,\n    APP,\n];\n\n// listItemTypes are included in a single dashboard item\nexport const listItemTypes = [REPORTS, RESOURCES, USERS];\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { MenuItem, Divider } from '@dhis2/ui-core';\n\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\n\nimport { tAddListItemContent } from './actions';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\nimport { getItemUrl, APP } from '../../modules/itemTypes';\nimport { categorizedItems, listItemTypes } from './selectableItems';\n\nimport classes from './styles/CategorizedMenuGroup.module.css';\n\nclass CategorizedMenuGroup extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seeMore: false,\n        };\n    }\n\n    addItem = item => () => {\n        const { type, acAddDashboardItem, tAddListItemContent } = this.props;\n\n        if (type === APP) {\n            acAddDashboardItem({ type, content: item.key });\n        } else {\n            const newItem = {\n                id: item.id,\n                name: item.displayName || item.name,\n            };\n\n            if (listItemTypes.includes(type)) {\n                tAddListItemContent(type, newItem);\n            } else {\n                acAddDashboardItem({ type, content: newItem });\n            }\n        }\n    };\n\n    toggleSeeMore = () => {\n        this.setState({ seeMore: !this.state.seeMore });\n\n        this.props.onChangeItemsLimit(this.props.type);\n    };\n\n    render() {\n        const { title, type, items, hasMore } = this.props;\n        return (\n            <Fragment>\n                <HeaderMenuItem title={title} />\n                {items.map(item => {\n                    const itemUrl = getItemUrl(type, item, this.context.d2);\n                    return (\n                        <ContentMenuItem\n                            key={item.id || item.key}\n                            type={type}\n                            name={item.displayName || item.name}\n                            onInsert={this.addItem(item)}\n                            url={itemUrl}\n                        />\n                    );\n                })}\n                {hasMore ? (\n                    <MenuItem\n                        dense\n                        key={`showmore${title}`}\n                        onClick={this.toggleSeeMore}\n                        label={\n                            <button className={classes.showMoreButton}>\n                                {this.state.seeMore\n                                    ? i18n.t('Show fewer')\n                                    : i18n.t('Show more')}\n                            </button>\n                        }\n                    />\n                ) : null}\n                <Divider margin=\"8px 0px\" />\n            </Fragment>\n        );\n    }\n}\n\nCategorizedMenuGroup.propTypes = {\n    items: PropTypes.array.isRequired,\n    title: PropTypes.string.isRequired,\n    type: PropTypes.oneOf(categorizedItems).isRequired,\n    onChangeItemsLimit: PropTypes.func.isRequired,\n    acAddDashboardItem: PropTypes.func,\n    hasMore: PropTypes.bool,\n    tAddListItemContent: PropTypes.func,\n};\n\nCategorizedMenuGroup.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nexport default connect(\n    null,\n    {\n        acAddDashboardItem,\n        tAddListItemContent,\n    }\n)(CategorizedMenuGroup);\n","import { sGetEditDashboardRoot } from '../../reducers/editDashboard';\nimport { itemTypeMap } from '../../modules/itemTypes';\nimport {\n    acAddDashboardItem,\n    acUpdateDashboardItem,\n} from '../../actions/editDashboard';\n\nexport const tAddListItemContent = (type, content) => (dispatch, getState) => {\n    const state = getState();\n    const listItemType = itemTypeMap[type].propName;\n    const dashboardItems = sGetEditDashboardRoot(state).dashboardItems;\n    const dashboardItemIndex = dashboardItems.findIndex(\n        item => item.type === type\n    );\n    let dashboardItem;\n\n    // Reports/Resources/Users dashboard item type already present in dashboard\n    if (dashboardItemIndex > -1) {\n        dashboardItem = dashboardItems[dashboardItemIndex];\n        dashboardItem[listItemType].push(content);\n\n        dispatch(acUpdateDashboardItem(dashboardItem));\n    } else {\n        dashboardItem = {\n            type: type,\n            content: [content],\n        };\n\n        dispatch(acAddDashboardItem(dashboardItem));\n    }\n};\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\n\nexport const SinglesMenuGroup = ({ acAddDashboardItem, category }) => {\n    const addToDashboard = ({ type, content }) => () => {\n        acAddDashboardItem({ type, content });\n    };\n\n    return (\n        <Fragment>\n            <HeaderMenuItem title={category.header} />\n            {category.items.map(item => (\n                <ContentMenuItem\n                    key={item.type}\n                    type={item.type}\n                    name={item.name}\n                    onInsert={addToDashboard(item)}\n                />\n            ))}\n        </Fragment>\n    );\n};\n\nSinglesMenuGroup.propTypes = {\n    acAddDashboardItem: PropTypes.func,\n    category: PropTypes.object,\n};\n\nexport default connect(\n    null,\n    { acAddDashboardItem }\n)(SinglesMenuGroup);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport Popover from '@material-ui/core/Popover';\nimport { InputField, Menu } from '@dhis2/ui-core';\n\nimport CategorizedMenuGroup from './CategorizedMenuGroup';\nimport SinglesMenuGroup from './SinglesMenuGroup';\nimport { singleItems, categorizedItems } from './selectableItems';\nimport { itemTypeMap } from '../../modules/itemTypes';\n\nimport './styles/ItemSelector.css';\n\nconst ItemSearchField = props => (\n    <InputField\n        name=\"Dashboard item search\"\n        label={i18n.t('Search for items to add to this dashboard')}\n        type=\"text\"\n        onChange={props.onChange}\n        onFocus={props.onFocus}\n        value={props.value}\n    />\n);\n\nclass ItemSelector extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n            open: false,\n            maxOptions: new Set(),\n            items: undefined,\n            filter: '',\n        };\n    }\n\n    closeList = () => {\n        this.setState({ open: false, filter: '' });\n    };\n\n    openList = (_, event) => {\n        this.fetchItems();\n\n        this.setState({\n            anchorEl: event.currentTarget,\n            open: true,\n        });\n    };\n\n    setFilter = (_, event) => {\n        this.setState({ filter: event.target.value }, this.fetchItems);\n    };\n\n    getCategorizedMenuGroups = () =>\n        categorizedItems\n            .filter(type => {\n                const itemType = itemTypeMap[type];\n                return (\n                    this.state.items && this.state.items[itemType.endPointName]\n                );\n            })\n            .map(type => {\n                const itemType = itemTypeMap[type];\n                const allItems = this.state.items[itemType.endPointName];\n                const hasMore = allItems.length > 5;\n                const items = this.state.maxOptions.has(itemType.id)\n                    ? allItems\n                    : allItems.slice(0, 5);\n\n                return (\n                    <CategorizedMenuGroup\n                        key={type}\n                        type={type}\n                        title={itemType.pluralTitle}\n                        items={items}\n                        onChangeItemsLimit={this.fetchItems}\n                        hasMore={hasMore}\n                    />\n                );\n            });\n\n    getSinglesMenuGroups = () =>\n        singleItems.map(category => (\n            <SinglesMenuGroup key={category.id} category={category} />\n        ));\n\n    getMenuGroups = () =>\n        this.getCategorizedMenuGroups().concat(this.getSinglesMenuGroups());\n\n    fetchItems = async type => {\n        if (type) {\n            const maxOptions = this.state.maxOptions;\n\n            if (maxOptions.has(type)) {\n                maxOptions.delete(type);\n            } else {\n                maxOptions.add(type);\n            }\n\n            this.setState({ maxOptions });\n        } else {\n            this.setState({\n                maxOptions: new Set(),\n            });\n        }\n\n        let queryString = '?count=6';\n        if ([...this.state.maxOptions.values()].length) {\n            queryString +=\n                '&max=' + [...this.state.maxOptions.values()].join('&max=');\n        }\n\n        const filter = this.state.filter ? `/${this.state.filter}` : '';\n\n        this.context.d2.Api.getApi()\n            .get(`dashboards/q${filter}${queryString}`)\n            .then(response => this.setState({ items: response }))\n            .catch(console.error);\n    };\n\n    render() {\n        return (\n            <Fragment>\n                <ItemSearchField\n                    value={this.state.filter}\n                    onChange={this.setFilter}\n                    onFocus={this.openList}\n                />\n                <Popover\n                    className=\"dashboard-item-selector\"\n                    open={this.state.open}\n                    onClose={this.closeList}\n                    anchorEl={this.state.anchorEl}\n                    anchorOrigin={{ horizontal: 'left', vertical: 'bottom' }}\n                    transformOrigin={{ horizontal: 'left', vertical: 'top' }}\n                    style={{ height: '70vh' }}\n                    PaperProps={{ style: { width: '700px' } }}\n                    disableAutoFocus={true}\n                    disableRestoreFocus={true}\n                >\n                    <Menu>{this.getMenuGroups()}</Menu>\n                </Popover>\n            </Fragment>\n        );\n    }\n}\n\nItemSearchField.propTypes = {\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n    onFocus: PropTypes.func,\n};\n\nItemSelector.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nexport default ItemSelector;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport i18n from '@dhis2/d2-i18n';\nimport { InputField, TextAreaField } from '@dhis2/ui-core';\n\nimport ItemSelector from '../ItemSelector/ItemSelector';\nimport {\n    acSetDashboardTitle,\n    acSetDashboardDescription,\n} from '../../actions/editDashboard';\nimport { orObject } from '../../modules/util';\nimport { sGetEditDashboardRoot } from '../../reducers/editDashboard';\n\nconst styles = {\n    section: { display: 'flex', justifyContent: 'space-between' },\n    titleDescription: {\n        flex: '3',\n        marginRight: '50px',\n    },\n    title: {\n        display: 'block',\n        clear: 'both',\n    },\n    description: {\n        display: 'block',\n        clear: 'both',\n        marginTop: '15px',\n    },\n    underline: {\n        '&::before': {\n            borderBottom: `none`,\n        },\n        '&:hover::before': {\n            borderBottom: `none!important`,\n        },\n    },\n    input: {\n        backgroundColor: 'rgba(0, 0, 10, 0.05)',\n        borderRadius: '4px',\n        width: '100%',\n        '&:hover': {\n            backgroundColor: 'rgba(0, 0, 10, 0.08)',\n        },\n    },\n    itemSelector: {\n        flex: '2',\n        position: 'relative',\n    },\n};\n\nexport const EditTitleBar = ({\n    name,\n    description,\n    onChangeTitle,\n    onChangeDescription,\n    classes,\n}) => {\n    const updateTitle = (_, e) => {\n        onChangeTitle(e.target.value);\n    };\n\n    const updateDescription = (_, e) => {\n        onChangeDescription(e.target.value);\n    };\n\n    return (\n        <section className={classes.section}>\n            <div className={classes.titleDescription}>\n                <InputField\n                    className={classes.title}\n                    name=\"Dashboard title input\"\n                    label={i18n.t('Dashboard title')}\n                    type=\"text\"\n                    onChange={updateTitle}\n                    value={name}\n                />\n                <TextAreaField\n                    className={classes.description}\n                    name=\"Dashboard description input\"\n                    label={i18n.t('Dashboard description')}\n                    onChange={updateDescription}\n                    value={description}\n                />\n            </div>\n            <div className={classes.itemSelector}>\n                <ItemSelector />\n            </div>\n        </section>\n    );\n};\n\nconst mapStateToProps = state => {\n    const selectedDashboard = orObject(sGetEditDashboardRoot(state));\n\n    return {\n        name: selectedDashboard.name,\n        description: selectedDashboard.description,\n    };\n};\n\nconst mapDispatchToProps = {\n    onChangeTitle: acSetDashboardTitle,\n    onChangeDescription: acSetDashboardDescription,\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(EditTitleBar));\n\nEditTitleBar.propTypes = {\n    onChangeDescription: PropTypes.func.isRequired,\n    onChangeTitle: PropTypes.func.isRequired,\n    classes: PropTypes.object,\n    description: PropTypes.string,\n    name: PropTypes.string,\n};\n\nEditTitleBar.defaultProps = {\n    name: '',\n    description: '',\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Button } from '@dhis2/ui-core';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport i18n from '@dhis2/d2-i18n';\n\nimport {\n    PeriodDimension,\n    DynamicDimension,\n    OrgUnitDimension,\n    FIXED_DIMENSIONS,\n} from '@dhis2/analytics';\n\nconst peId = FIXED_DIMENSIONS.pe.id;\nconst ouId = FIXED_DIMENSIONS.ou.id;\n\nclass FilterDialog extends Component {\n    onConfirm = id => () => this.props.onConfirm(id);\n\n    dialogContent() {\n        const { displayNameProperty, dimension, selectedItems } = this.props;\n        const dialogId = dimension.id;\n\n        const commonProps = {\n            d2: this.context.d2,\n            onSelect: this.props.onSelect,\n            onDeselect: this.props.onDeselect,\n            onReorder: this.props.onReorder,\n        };\n\n        switch (dialogId) {\n            case peId: {\n                return (\n                    <PeriodDimension\n                        selectedPeriods={selectedItems}\n                        {...commonProps}\n                    />\n                );\n            }\n            case ouId:\n                return (\n                    <OrgUnitDimension\n                        displayNameProperty={displayNameProperty}\n                        ouItems={selectedItems}\n                        {...commonProps}\n                    />\n                );\n            default:\n                return (\n                    <DynamicDimension\n                        selectedItems={selectedItems}\n                        dialogId={dialogId}\n                        dialogTitle={dimension.name}\n                        {...commonProps}\n                    />\n                );\n        }\n    }\n\n    render() {\n        const { dimension, onClose } = this.props;\n        const dialogId = dimension.id;\n\n        return (\n            <Dialog\n                open={!!dialogId}\n                maxWidth=\"lg\"\n                disableEnforceFocus\n                onClose={onClose}\n            >\n                {dialogId && this.dialogContent()}\n                <DialogActions>\n                    <Button kind=\"secondary\" onClick={onClose}>\n                        {i18n.t('Cancel')}\n                    </Button>\n                    <Button kind=\"primary\" onClick={this.onConfirm(dialogId)}>\n                        {i18n.t('Confirm')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nFilterDialog.propTypes = {\n    dimension: PropTypes.object,\n    displayNameProperty: PropTypes.string,\n    selectedItems: PropTypes.array,\n    onClose: PropTypes.func,\n    onConfirm: PropTypes.func,\n    onDeselect: PropTypes.func,\n    onReorder: PropTypes.func,\n    onSelect: PropTypes.func,\n};\n\nFilterDialog.contextTypes = {\n    d2: PropTypes.object,\n};\n\nexport default FilterDialog;\n","export const SET_ACTIVE_MODAL_DIMENSION = 'SET_ACTIVE_MODAL_DIMENSION';\nexport const CLEAR_ACTIVE_MODAL_DIMENSION = 'CLEAR_ACTIVE_MODAL_DIMENSION';\n\nexport const DEFAULT_STATE_ACTIVE_MODAL_DIMENSION = {};\n\nexport default (state = DEFAULT_STATE_ACTIVE_MODAL_DIMENSION, action) => {\n    switch (action.type) {\n        case SET_ACTIVE_MODAL_DIMENSION: {\n            return action.value;\n        }\n        case CLEAR_ACTIVE_MODAL_DIMENSION: {\n            return DEFAULT_STATE_ACTIVE_MODAL_DIMENSION;\n        }\n        default:\n            return state;\n    }\n};\n\nexport const sGetActiveModalDimension = state => state.activeModalDimension;\n","import {\n    SET_ACTIVE_MODAL_DIMENSION,\n    CLEAR_ACTIVE_MODAL_DIMENSION,\n} from '../reducers/activeModalDimension';\n\nexport const acSetActiveModalDimension = value => ({\n    type: SET_ACTIVE_MODAL_DIMENSION,\n    value,\n});\n\nexport const acClearActiveModalDimension = () => ({\n    type: CLEAR_ACTIVE_MODAL_DIMENSION,\n});\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Popover from '@material-ui/core/Popover';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport { withTheme } from '@material-ui/core/styles';\n\nimport i18n from '@dhis2/d2-i18n';\nimport { DimensionsPanel } from '@dhis2/analytics';\n\nimport { Button } from '@dhis2/ui-core';\nimport FilterDialog from './FilterDialog';\n\nimport { sGetSettingsDisplayNameProperty } from '../../reducers/settings';\nimport { sGetActiveModalDimension } from '../../reducers/activeModalDimension';\nimport { sGetDimensions } from '../../reducers/dimensions';\nimport { sGetFiltersKeys } from '../../reducers/itemFilters';\nimport { sGetEditItemFiltersRoot } from '../../reducers/editItemFilters';\nimport { acAddItemFilter, acRemoveItemFilter } from '../../actions/itemFilters';\nimport {\n    acRemoveEditItemFilter,\n    acSetEditItemFilters,\n} from '../../actions/editItemFilters';\nimport {\n    acClearActiveModalDimension,\n    acSetActiveModalDimension,\n} from '../../actions/activeModalDimension';\n\nclass FilterSelector extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n        };\n    }\n\n    openPanel = (_, event) => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    closePanel = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    closeDialog = () => {\n        this.setState({ anchorEl: null });\n\n        this.props.clearActiveModalDimension();\n    };\n\n    selectDimension = id => {\n        this.props.setActiveModalDimension({\n            id,\n            name: this.props.dimensions[id].name,\n        });\n    };\n\n    onSelectItems = ({ dimensionId, items }) => {\n        this.props.setEditItemFilters({\n            ...this.props.selectedItems,\n            [dimensionId]: items,\n        });\n    };\n\n    onDeselectItems = ({ dimensionId, itemIdsToRemove }) => {\n        const oldList = this.props.selectedItems[dimensionId] || [];\n        const newList = oldList.filter(\n            item => !itemIdsToRemove.includes(item.id)\n        );\n\n        if (newList.length) {\n            this.props.setEditItemFilters({\n                ...this.props.selectedItems,\n                [dimensionId]: newList,\n            });\n        } else {\n            this.props.removeEditItemFilter(dimensionId);\n        }\n    };\n\n    onReorderItems = ({ dimensionId, itemIds }) => {\n        const oldList = this.props.selectedItems[dimensionId] || [];\n        const reorderedList = itemIds.map(id =>\n            oldList.find(item => item.id === id)\n        );\n\n        this.props.setEditItemFilters({\n            ...this.props.selectedItems,\n            [dimensionId]: reorderedList,\n        });\n    };\n\n    saveFilter = id => {\n        const filterItems = this.props.selectedItems[id];\n\n        if (filterItems && filterItems.length) {\n            this.props.addItemFilter({\n                id,\n                value: [...filterItems],\n            });\n        } else {\n            this.props.removeItemFilter(id);\n        }\n\n        this.closeDialog();\n    };\n\n    render() {\n        const {\n            theme,\n            displayNameProperty,\n            dimension,\n            dimensions,\n            selectedDimensions,\n            selectedItems,\n        } = this.props;\n\n        return (\n            <Fragment>\n                <Button onClick={this.openPanel}>\n                    {i18n.t('Add filter')}\n                    <ArrowDropDownIcon />\n                </Button>\n                <Popover\n                    open={Boolean(this.state.anchorEl)}\n                    anchorEl={this.state.anchorEl}\n                    anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\n                    onClose={this.closePanel}\n                    style={{\n                        height: '100%',\n                        fontFamily: theme.typography.fontFamily,\n                    }}\n                >\n                    <DimensionsPanel\n                        dimensions={dimensions}\n                        onDimensionClick={this.selectDimension}\n                        selectedIds={selectedDimensions}\n                    />\n                </Popover>\n                {dimension ? (\n                    <FilterDialog\n                        displayNameProperty={displayNameProperty}\n                        dimension={dimension}\n                        selectedItems={selectedItems[dimension.id] || []}\n                        onSelect={this.onSelectItems}\n                        onDeselect={this.onDeselectItems}\n                        onReorder={this.onReorderItems}\n                        onClose={this.closeDialog}\n                        onConfirm={this.saveFilter}\n                    />\n                ) : null}\n            </Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    displayNameProperty: sGetSettingsDisplayNameProperty(state),\n    dimension: sGetActiveModalDimension(state),\n    dimensions: sGetDimensions(state),\n    selectedDimensions: sGetFiltersKeys(state),\n    selectedItems: sGetEditItemFiltersRoot(state),\n});\n\nFilterSelector.propTypes = {\n    addItemFilter: PropTypes.func,\n    clearActiveModalDimension: PropTypes.func,\n    dimension: PropTypes.object,\n    dimensions: PropTypes.object,\n    displayNameProperty: PropTypes.string,\n    removeEditItemFilter: PropTypes.func,\n    removeItemFilter: PropTypes.func,\n    selectedDimensions: PropTypes.array,\n    selectedItems: PropTypes.object,\n    setActiveModalDimension: PropTypes.func,\n    setEditItemFilters: PropTypes.func,\n    theme: PropTypes.object,\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        clearActiveModalDimension: acClearActiveModalDimension,\n        setActiveModalDimension: acSetActiveModalDimension,\n        addItemFilter: acAddItemFilter,\n        removeItemFilter: acRemoveItemFilter,\n        removeEditItemFilter: acRemoveEditItemFilter,\n        setEditItemFilters: acSetEditItemFilters,\n    }\n)(withTheme()(FilterSelector));\n","import React, { Component } from 'react';\nimport InfoOutlineIcon from '@material-ui/icons/InfoOutlined';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nclass Info extends Component {\n    show = false;\n\n    toggle() {\n        this.show = !this.show;\n        return this.show;\n    }\n\n    render() {\n        return (\n            <div onClick={() => this.props.onClick(this.toggle())}>\n                <InfoOutlineIcon style={{ fill: colors.grey600 }} />\n            </div>\n        );\n    }\n}\n\nInfo.propTypes = {\n    onClick: PropTypes.func,\n};\n\nexport default Info;\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport SharingDialog from '@dhis2/d2-ui-sharing-dialog';\nimport Star from '@material-ui/icons/Star';\nimport StarBorder from '@material-ui/icons/StarBorder';\n\nimport { orObject } from '../../modules/util';\nimport { tStarDashboard } from '../../actions/dashboards';\nimport { acSetSelectedShowDescription } from '../../actions/selected';\nimport FilterSelector from '../ItemFilter/FilterSelector';\nimport { Button } from '@dhis2/ui-core';\nimport Info from './Info';\nimport {\n    sGetSelectedId,\n    sGetSelectedShowDescription,\n} from '../../reducers/selected';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n} from '../../reducers/dashboards';\nimport { colors } from '@dhis2/ui-core';\n\nconst NO_DESCRIPTION = i18n.t('No description');\n\nconst styles = {\n    actions: {\n        display: 'flex',\n        alignItems: 'center',\n        marginLeft: '20px',\n    },\n    starIcon: {\n        fill: colors.grey600,\n    },\n    textButton: {\n        minWidth: '30px',\n        top: '1px',\n    },\n    editLink: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        textDecoration: 'none',\n        marginRight: '4px',\n    },\n    titleBar: {\n        display: 'flex',\n        alignItems: 'flex-start',\n    },\n    titleBarIcon: {\n        marginLeft: 5,\n        position: 'relative',\n        top: 1,\n        cursor: 'pointer',\n    },\n};\n\nclass ViewTitleBar extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            sharingDialogIsOpen: false,\n        };\n    }\n\n    toggleSharingDialog = () =>\n        this.setState({ sharingDialogIsOpen: !this.state.sharingDialogIsOpen });\n\n    render() {\n        const {\n            id,\n            name,\n            description,\n            access,\n            style,\n            showDescription,\n            starred,\n            onStarClick,\n            onInfoClick,\n            classes,\n        } = this.props;\n\n        const titleStyle = Object.assign({}, style.title, {\n            cursor: 'default',\n            userSelect: 'text',\n            top: '7px',\n        });\n\n        const StarIcon = starred ? Star : StarBorder;\n\n        return (\n            <Fragment>\n                <div className={classes.titleBar}>\n                    <span style={titleStyle}>{name}</span>\n                    <div className={classes.actions}>\n                        <div\n                            className={classes.titleBarIcon}\n                            onClick={onStarClick}\n                        >\n                            <StarIcon className={classes.starIcon} />\n                        </div>\n                        <div className={classes.titleBarIcon}>\n                            <Info onClick={onInfoClick} />\n                        </div>\n                        <div style={{ marginLeft: '10px' }}>\n                            {access.update ? (\n                                <Link\n                                    className={classes.editLink}\n                                    to={`/${id}/edit`}\n                                >\n                                    <Button>{i18n.t('Edit')}</Button>\n                                </Link>\n                            ) : null}\n                            {access.manage ? (\n                                <span style={{ marginRight: '4px' }}>\n                                    <Button onClick={this.toggleSharingDialog}>\n                                        {i18n.t('Share')}\n                                    </Button>\n                                </span>\n                            ) : null}\n                            <span style={{ marginRight: '4px' }}>\n                                <FilterSelector />\n                            </span>\n                        </div>\n                    </div>\n                </div>\n                {showDescription ? (\n                    <div\n                        className=\"dashboard-description\"\n                        style={Object.assign(\n                            { paddingTop: '5px', paddingBottom: '5px' },\n                            style.description,\n                            !description ? { color: '#888' } : {}\n                        )}\n                    >\n                        {description || NO_DESCRIPTION}\n                    </div>\n                ) : null}\n                {id ? (\n                    <SharingDialog\n                        d2={this.context.d2}\n                        id={id}\n                        type=\"dashboard\"\n                        open={this.state.sharingDialogIsOpen}\n                        onRequestClose={this.toggleSharingDialog}\n                    />\n                ) : null}\n            </Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    const id = sGetSelectedId(state);\n    const dashboard = orObject(sGetDashboardById(state, id));\n\n    return {\n        id,\n        name: dashboard.displayName,\n        description: dashboard.displayDescription,\n        dashboardItems: sGetDashboardItems(state),\n        showDescription: sGetSelectedShowDescription(state),\n        starred: dashboard.starred,\n        access: orObject(dashboard.access),\n    };\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const { id, starred, showDescription } = stateProps;\n    const { dispatch } = dispatchProps;\n\n    return {\n        ...stateProps,\n        ...ownProps,\n        onStarClick: () => dispatch(tStarDashboard(id, !starred)),\n        onInfoClick: () =>\n            dispatch(acSetSelectedShowDescription(!showDescription)),\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    null,\n    mergeProps\n)(withStyles(styles)(ViewTitleBar));\n\nViewTitleBar.propTypes = {\n    access: PropTypes.object,\n    classes: PropTypes.object,\n    description: PropTypes.string,\n    id: PropTypes.string,\n    name: PropTypes.string,\n    showDescription: PropTypes.bool,\n    starred: PropTypes.bool,\n    style: PropTypes.object,\n    onInfoClick: PropTypes.func,\n    onStarClick: PropTypes.func,\n};\n\nViewTitleBar.defaultProps = {\n    name: '',\n    description: '',\n    starred: false,\n    showDescription: false,\n    onInfoClick: null,\n};\n\nViewTitleBar.contextTypes = {\n    d2: PropTypes.object,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { colors } from '@dhis2/ui-core';\nimport EditTitleBar from './EditTitleBar';\nimport ViewTitleBar from './ViewTitleBar';\n\nimport './TitleBar.css';\n\nconst style = {\n    title: {\n        position: 'relative',\n        fontSize: 21,\n        fontWeight: 500,\n        color: colors.black,\n        minWidth: 50,\n    },\n    description: {\n        fontSize: 14,\n        color: colors.grey800,\n    },\n};\n\nconst TitleBar = ({ edit }) => {\n    return (\n        <div\n            className=\"titlebar-wrapper\"\n            style={{\n                padding: '20px 15px 5px 10px',\n            }}\n        >\n            {edit ? (\n                <EditTitleBar style={style} />\n            ) : (\n                <ViewTitleBar style={style} />\n            )}\n        </div>\n    );\n};\n\nTitleBar.propTypes = {\n    edit: PropTypes.bool,\n};\n\nexport default TitleBar;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport i18n from '@dhis2/d2-i18n';\n\nimport * as pluginManager from './plugin';\nimport { getBaseUrl, orObject } from '../../../modules/util';\nimport { getGridItemDomId } from '../../ItemGrid/gridUtil';\n\nconst pluginCredentials = d2 => {\n    return {\n        baseUrl: getBaseUrl(d2),\n        auth: d2.Api.getApi().defaultHeaders.Authorization,\n    };\n};\n\nclass DefaultPlugin extends Component {\n    pluginCredentials = null;\n\n    constructor(props, context) {\n        super(props);\n\n        this.d2 = context.d2;\n    }\n\n    shouldPluginReload = prevProps => {\n        // TODO - fix this hack, to handle bug with multiple\n        // rerendering while switching between dashboards.\n        //\n        // To determine if the rendering is happening because of a\n        // dashboard switch, check if the item reference has changed.\n        const reloadAllowed = this.props.item === prevProps.item;\n\n        const filtersChanged = prevProps.itemFilters !== this.props.itemFilters;\n        const vis = orObject(this.props.visualization);\n        const prevVis = orObject(prevProps.visualization);\n        const visChanged =\n            vis.id !== prevVis.id || vis.activeType !== prevVis.activeType;\n\n        return reloadAllowed && (visChanged || filtersChanged);\n    };\n\n    reloadPlugin = prevProps => {\n        if (\n            pluginManager.pluginIsAvailable(\n                this.props.item,\n                this.props.visualization\n            ) &&\n            this.shouldPluginReload(prevProps)\n        ) {\n            const prevVis = orObject(prevProps.visualization);\n            const currentVis = this.props.visualization;\n\n            const useActiveType =\n                currentVis.activeType !== prevVis.activeType ||\n                currentVis.activeType !== this.props.item.type;\n\n            if (\n                useActiveType ||\n                this.props.itemFilters !== prevProps.itemFilters\n            ) {\n                pluginManager.unmount(\n                    this.props.item,\n                    prevVis.activeType || this.props.item.type\n                );\n\n                pluginManager.load(this.props.item, this.props.visualization, {\n                    credentials: this.pluginCredentials,\n                    activeType: useActiveType ? currentVis.activeType : null,\n                });\n            }\n        }\n    };\n\n    componentDidMount() {\n        this.pluginCredentials = pluginCredentials(this.d2);\n\n        if (\n            pluginManager.pluginIsAvailable(\n                this.props.item,\n                this.props.visualization\n            )\n        ) {\n            pluginManager.load(this.props.item, this.props.visualization, {\n                credentials: this.pluginCredentials,\n                activeType: !this.props.editMode ? this.getActiveType() : null,\n            });\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        this.reloadPlugin(prevProps);\n    }\n\n    getActiveType = () =>\n        this.props.visualization.activeType || this.props.item.type;\n\n    render() {\n        const { classes, item, visualization, style } = this.props;\n        const pluginIsAvailable = pluginManager.pluginIsAvailable(\n            item,\n            visualization\n        );\n\n        return pluginIsAvailable ? (\n            <div id={getGridItemDomId(item.id)} style={style} />\n        ) : (\n            <div className={classes.textDiv}>\n                {i18n.t('Unable to load the plugin for this item')}\n            </div>\n        );\n    }\n}\n\nDefaultPlugin.contextTypes = {\n    d2: PropTypes.object,\n};\n\nDefaultPlugin.propTypes = {\n    classes: PropTypes.object,\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    itemFilters: PropTypes.object,\n    style: PropTypes.object,\n    visualization: PropTypes.object,\n};\n\nDefaultPlugin.defaultProps = {\n    style: {},\n    item: {},\n    itemFilters: {},\n    visualization: {},\n};\n\nexport default DefaultPlugin;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const HEADER_HEIGHT = 45;\n\nconst ItemHeader = props => {\n    const { title, actionButtons, editMode } = props;\n\n    return (\n        <div className=\"dashboard-item-header\">\n            <div\n                className=\"dashboard-item-header-title\"\n                style={{ userSelect: editMode ? 'none' : 'text' }}\n            >\n                {title}\n            </div>\n            {actionButtons}\n        </div>\n    );\n};\n\nItemHeader.propTypes = {\n    actionButtons: PropTypes.node,\n    editMode: PropTypes.bool,\n    title: PropTypes.object,\n};\n\nexport default ItemHeader;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { colors } from '@dhis2/ui-core';\nimport { getId } from './plugin';\nimport InterpretationsComponent from '@dhis2/d2-ui-interpretations';\n\nconst style = {\n    scrollContainer: {\n        overflowY: 'auto',\n        height: '340px',\n    },\n    line: {\n        margin: '-1px 0px 0px',\n        height: '1px',\n        border: 'none',\n        backgroundColor: colors.grey100,\n    },\n};\n\nclass ItemFooter extends Component {\n    render() {\n        const objectId = getId(this.props.item);\n\n        return (\n            <div className=\"dashboard-item-footer\">\n                <hr style={style.line} />\n                <div style={style.scrollContainer}>\n                    <InterpretationsComponent\n                        d2={this.context.d2}\n                        item={this.props.item}\n                        type={this.props.item.type.toLowerCase()}\n                        id={objectId}\n                        appName=\"dashboard\"\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nItemFooter.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nItemFooter.propTypes = {\n    item: PropTypes.object.isRequired,\n};\n\nexport default ItemFooter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './ItemHeaderButton.css';\n\nconst ItemHeaderButton = ({ disabled, onClick, children, style }) => {\n    return (\n        <button\n            disabled={disabled}\n            type=\"button\"\n            className=\"item-action-button\"\n            style={style}\n            onClick={onClick}\n        >\n            {children}\n        </button>\n    );\n};\n\nItemHeaderButton.propTypes = {\n    children: PropTypes.node,\n    disabled: PropTypes.bool,\n    style: PropTypes.object,\n    onClick: PropTypes.func,\n};\n\nexport default ItemHeaderButton;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport MessageIcon from '@material-ui/icons/Message';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\n\nimport { extractFavorite } from './plugin';\nimport ItemHeaderButton from '../ItemHeaderButton';\nimport {\n    VISUALIZATION_TYPE_TABLE,\n    VISUALIZATION_TYPE_CHART,\n    VISUALIZATION_TYPE_MAP,\n    itemTypeMap,\n    CHART,\n    MAP,\n    REPORT_TABLE,\n    EVENT_CHART,\n    EVENT_REPORT,\n    DOMAIN_TYPE_AGGREGATE,\n} from '../../../modules/itemTypes';\nimport { colors, theme } from '@dhis2/ui-core';\nimport { isSingleValue } from '@dhis2/analytics';\n\nconst style = {\n    iconBase: {\n        width: '24px',\n        height: '24px',\n        fill: colors.grey500,\n    },\n    buttonBase: {\n        padding: '5px 6px 3px 6px',\n    },\n    buttonDisabled: {\n        padding: '5px 6px 3px 6px',\n        opacity: 0.5,\n        cursor: 'unset',\n    },\n    toggleFooterPadding: {\n        padding: '7px 6px 1px 6px',\n    },\n    border: {\n        borderRadius: '2px',\n        border: `1px solid ${colors.grey200}`,\n    },\n};\n\nconst baseStyle = {\n    icon: style.iconBase,\n    container: style.buttonBase,\n};\n\nconst disabledStyle = {\n    icon: style.iconBase,\n    container: style.buttonDisabled,\n};\n\nconst activeStyle = {\n    icon: { ...style.iconBase, fill: theme.primary800 },\n    container: {\n        ...style.buttonBase,\n        backgroundColor: theme.primary100,\n    },\n};\n\nconst inactiveStyle = disabled => (disabled ? disabledStyle : baseStyle);\n\nconst tableBtnStyle = (activeType, disabled) =>\n    [REPORT_TABLE, EVENT_REPORT].includes(activeType)\n        ? activeStyle\n        : inactiveStyle(disabled);\n\nconst chartBtnStyle = (activeType, disabled) =>\n    [CHART, EVENT_CHART].includes(activeType)\n        ? activeStyle\n        : inactiveStyle(disabled);\n\nconst mapBtnStyle = (activeType, disabled) =>\n    [MAP].includes(activeType) ? activeStyle : inactiveStyle(disabled);\n\nexport const getItemTypeId = (itemTypeMap, visualizationType, domainType) => {\n    const item = Object.values(itemTypeMap).find(\n        item =>\n            item.visualizationType === visualizationType &&\n            item.domainType === domainType\n    );\n    return item.id;\n};\n\nclass VisualizationItemHeaderButtons extends Component {\n    renderInterpretationButton() {\n        const { activeFooter, onToggleFooter } = this.props;\n\n        const toggleFooterBase = activeFooter ? activeStyle : baseStyle;\n\n        const toggleFooter = {\n            ...toggleFooterBase,\n            container: {\n                ...toggleFooterBase.container,\n                ...style.toggleFooterPadding,\n                ...style.border,\n            },\n        };\n\n        return (\n            <Fragment>\n                <ItemHeaderButton\n                    style={toggleFooter.container}\n                    onClick={onToggleFooter}\n                >\n                    <MessageIcon style={toggleFooter.icon} />\n                </ItemHeaderButton>\n            </Fragment>\n        );\n    }\n\n    renderVisualizationButtons() {\n        const {\n            item,\n            visualization,\n            onSelectVisualization,\n            activeType,\n        } = this.props;\n\n        if (isSingleValue(visualization.type)) {\n            return null;\n        }\n\n        const domainType = itemTypeMap[item.type].domainType;\n\n        const onViewTable = () =>\n            onSelectVisualization(\n                getItemTypeId(itemTypeMap, VISUALIZATION_TYPE_TABLE, domainType)\n            );\n\n        const onViewChart = () =>\n            onSelectVisualization(\n                getItemTypeId(itemTypeMap, VISUALIZATION_TYPE_CHART, domainType)\n            );\n\n        const onViewMap = () =>\n            onSelectVisualization(\n                getItemTypeId(itemTypeMap, VISUALIZATION_TYPE_MAP, domainType)\n            );\n\n        // disable toggle buttons\n        let disabled = false;\n\n        if (item.type === VISUALIZATION_TYPE_CHART) {\n            if (extractFavorite(item).type.match(/^YEAR_OVER_YEAR/)) {\n                disabled = true;\n            }\n        }\n\n        const tableButtonStyle = tableBtnStyle(activeType, disabled);\n        const chartButtonStyle = chartBtnStyle(activeType, disabled);\n        const mapButtonStyle = mapBtnStyle(activeType, disabled);\n\n        return (\n            <div style={{ marginLeft: 10 }}>\n                <div style={style.border}>\n                    <ItemHeaderButton\n                        disabled={disabled}\n                        style={tableButtonStyle.container}\n                        onClick={onViewTable}\n                    >\n                        <TableIcon style={tableButtonStyle.icon} />\n                    </ItemHeaderButton>\n                    <ItemHeaderButton\n                        disabled={disabled}\n                        style={chartButtonStyle.container}\n                        onClick={onViewChart}\n                    >\n                        <ChartIcon style={chartButtonStyle.icon} />\n                    </ItemHeaderButton>\n                    {domainType === DOMAIN_TYPE_AGGREGATE ? (\n                        <ItemHeaderButton\n                            disabled={disabled}\n                            style={mapButtonStyle.container}\n                            onClick={onViewMap}\n                        >\n                            <MapIcon style={mapButtonStyle.icon} />\n                        </ItemHeaderButton>\n                    ) : null}\n                </div>\n            </div>\n        );\n    }\n\n    render() {\n        return (\n            <Fragment>\n                {this.renderInterpretationButton()}\n                {this.renderVisualizationButtons()}\n            </Fragment>\n        );\n    }\n}\n\nVisualizationItemHeaderButtons.propTypes = {\n    activeFooter: PropTypes.bool,\n    activeType: PropTypes.string,\n    item: PropTypes.object,\n    visualization: PropTypes.object,\n    onSelectVisualization: PropTypes.func,\n    onToggleFooter: PropTypes.func,\n};\n\nexport default VisualizationItemHeaderButtons;\n","// Note that this ignores discrepancies in 'this', so shouldn't be used with bound functions\n// This is useful instead of lodash/memoize when we only need to memoize a single value\n// Inspiration: https://github.com/alexreardon/memoize-one\n\nconst memoizeOne = fn => {\n    let lastArgs = undefined;\n    let lastValue = undefined;\n\n    return (...args) => {\n        if (\n            lastArgs &&\n            args.length === lastArgs.length &&\n            args.every((arg, i) => arg === lastArgs[i])\n        ) {\n            return lastValue;\n        }\n        lastArgs = args;\n        lastValue = fn(...args);\n        return lastValue;\n    };\n};\n\nexport default memoizeOne;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport ChartPlugin from '@dhis2/data-visualizer-plugin';\n\nimport i18n from '@dhis2/d2-i18n';\nimport uniqueId from 'lodash/uniqueId';\n\nimport DefaultPlugin from './DefaultPlugin';\nimport ItemHeader, { HEADER_HEIGHT } from '../ItemHeader';\nimport ItemFooter from './ItemFooter';\nimport VisualizationItemHeaderButtons from './ItemHeaderButtons';\nimport * as pluginManager from './plugin';\nimport { sGetVisualization } from '../../../reducers/visualizations';\nimport { sGetItemFiltersRoot } from '../../../reducers/itemFilters';\nimport {\n    acReceivedVisualization,\n    acReceivedActiveVisualization,\n} from '../../../actions/selected';\nimport { CHART, MAP, itemTypeMap } from '../../../modules/itemTypes';\nimport { colors } from '@dhis2/ui-core';\nimport memoizeOne from '../../../modules/memoizeOne';\nimport { getVisualizationConfig } from './plugin';\n\nconst styles = {\n    icon: {\n        width: 16,\n        height: 16,\n        marginLeft: 3,\n        cursor: 'pointer',\n        fill: colors.grey600,\n    },\n    title: {\n        overflow: 'hidden',\n        maxWidth: '85%',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n    },\n    textDiv: {\n        fontSize: '14px',\n        fontStretch: 'normal',\n        padding: '10px',\n        lineHeight: '20px',\n    },\n};\n\nconst applyFilters = (visualization, filters) => {\n    if (!Object.keys(filters).length) {\n        return visualization;\n    }\n\n    // deep clone objects in filters to avoid changing the visualization in the Redux store\n    const visRows = visualization.rows.map(obj => ({ ...obj }));\n    const visColumns = visualization.columns.map(obj => ({ ...obj }));\n    const visFilters = visualization.filters.map(obj => ({ ...obj }));\n\n    Object.keys(filters).forEach(dimensionId => {\n        if (filters[dimensionId]) {\n            let dimensionFound = false;\n\n            [visRows, visColumns, visFilters].forEach(dimensionObjects =>\n                dimensionObjects\n                    .filter(obj => obj.dimension === dimensionId)\n                    .forEach(obj => {\n                        dimensionFound = true;\n                        obj.items = filters[dimensionId];\n                    })\n            );\n\n            // add dimension to filters if not already present elsewhere\n            if (!dimensionFound) {\n                visFilters.push({\n                    dimension: dimensionId,\n                    items: filters[dimensionId],\n                });\n            }\n        }\n    });\n\n    return {\n        ...visualization,\n        rows: visRows,\n        columns: visColumns,\n        filters: visFilters,\n    };\n};\n\nexport class Item extends Component {\n    state = {\n        showFooter: false,\n        configLoaded: false,\n    };\n\n    constructor(props, context) {\n        super(props);\n\n        this.d2 = context.d2;\n\n        this.contentRef = React.createRef();\n    }\n\n    async componentDidMount() {\n        this.props.onVisualizationLoaded(\n            // TODO do not call fetch on the pluginManager, do it here as the manager will eventually be removed...\n            await pluginManager.fetch(this.props.item)\n        );\n\n        this.setState({\n            configLoaded: true,\n        });\n    }\n\n    getUniqueKey = memoizeOne(() => uniqueId());\n\n    pluginCredentials = null;\n\n    getPluginComponent = () => {\n        const visualization = getVisualizationConfig(\n            this.props.visualization,\n            this.props.item.type,\n            this.getActiveType()\n        );\n\n        if (!visualization) {\n            return (\n                <div className={this.props.classes.textDiv}>\n                    {i18n.t('No data to display')}\n                </div>\n            );\n        }\n\n        const props = {\n            ...this.props,\n            visualization,\n            style: this.getContentStyle(),\n        };\n\n        switch (this.getActiveType()) {\n            case CHART: {\n                return (\n                    <ChartPlugin\n                        d2={this.d2}\n                        config={applyFilters(\n                            props.visualization,\n                            props.itemFilters\n                        )}\n                        forDashboard={true}\n                        style={props.style}\n                    />\n                );\n            }\n            case MAP: {\n                if (props.item.type === MAP) {\n                    // apply filters only to thematic and event layers\n                    // for maps AO\n                    const mapViews = props.visualization.mapViews.map(obj => {\n                        if (\n                            obj.layer.includes('thematic') ||\n                            obj.layer.includes('event')\n                        ) {\n                            return applyFilters(obj, props.itemFilters);\n                        }\n\n                        return obj;\n                    });\n\n                    props.visualization = {\n                        ...props.visualization,\n                        mapViews,\n                    };\n                } else {\n                    // this is the case of a non map AO passed to the maps plugin\n                    // due to a visualization type switch in dashboard item\n                    // maps plugin takes care of converting the AO to a suitable format\n                    props.visualization = applyFilters(\n                        props.visualization,\n                        props.itemFilters\n                    );\n                }\n\n                return <DefaultPlugin {...props} />;\n            }\n            default: {\n                props.visualization = applyFilters(\n                    props.visualization,\n                    props.itemFilters\n                );\n\n                return <DefaultPlugin {...props} />;\n            }\n        }\n    };\n\n    onToggleFooter = () => {\n        this.setState(\n            { showFooter: !this.state.showFooter },\n            this.props.onToggleItemExpanded(this.props.item.id)\n        );\n    };\n\n    onSelectVisualization = activeType => {\n        // Cancel request if type is already active\n        if (activeType === this.getActiveType()) {\n            return;\n        }\n\n        pluginManager.unmount(this.props.item, this.getActiveType());\n\n        this.props.onSelectVisualization(\n            this.props.visualization.id,\n            this.props.item.type,\n            activeType\n        );\n    };\n\n    getActiveType = () =>\n        this.props.visualization.activeType || this.props.item.type;\n\n    pluginIsAvailable = () =>\n        pluginManager.pluginIsAvailable(\n            this.props.item,\n            this.props.visualization\n        );\n\n    getTitle = () => {\n        const { item, editMode, classes } = this.props;\n        const itemName = pluginManager.getName(item);\n\n        return (\n            <div style={{ display: 'flex' }}>\n                <span className={classes.title} title={itemName}>\n                    {itemName}\n                </span>\n                {!editMode && this.pluginIsAvailable() ? (\n                    <a\n                        href={pluginManager.getLink(this.props.item, this.d2)}\n                        style={{ height: 16 }}\n                        title={`View in ${\n                            itemTypeMap[this.props.item.type].appName\n                        } app`}\n                    >\n                        <LaunchIcon className={classes.icon} />\n                    </a>\n                ) : null}\n            </div>\n        );\n    };\n\n    getActionButtons = () =>\n        pluginManager.pluginIsAvailable(\n            this.props.item,\n            this.props.visualization\n        ) && !this.props.editMode ? (\n            <VisualizationItemHeaderButtons\n                item={this.props.item}\n                visualization={this.props.visualization}\n                activeFooter={this.state.showFooter}\n                activeType={this.getActiveType()}\n                onSelectVisualization={this.onSelectVisualization}\n                onToggleFooter={this.onToggleFooter}\n            />\n        ) : null;\n\n    getContentStyle = () => {\n        const { item, editMode } = this.props;\n        const PADDING_BOTTOM = 4;\n\n        return !editMode\n            ? {\n                  height: item.originalHeight - HEADER_HEIGHT - PADDING_BOTTOM,\n              }\n            : { height: this.contentRef.offsetHeight };\n    };\n\n    render() {\n        const { item, editMode, itemFilters } = this.props;\n        const { showFooter } = this.state;\n\n        return (\n            <Fragment>\n                <ItemHeader\n                    title={this.getTitle()}\n                    actionButtons={this.getActionButtons()}\n                    editMode={editMode}\n                />\n                <div\n                    key={this.getUniqueKey(itemFilters)}\n                    className=\"dashboard-item-content\"\n                    ref={ref => (this.contentRef = ref)}\n                >\n                    {this.state.configLoaded && this.getPluginComponent()}\n                </div>\n                {!editMode && showFooter ? <ItemFooter item={item} /> : null}\n            </Fragment>\n        );\n    }\n}\n\nItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nItem.propTypes = {\n    classes: PropTypes.object,\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    itemFilters: PropTypes.object,\n    visualization: PropTypes.object,\n    onSelectVisualization: PropTypes.func,\n    onToggleItemExpanded: PropTypes.func,\n    onVisualizationLoaded: PropTypes.func,\n};\n\nItem.defaultProps = {\n    item: {},\n    editMode: false,\n    onToggleItemExpanded: Function.prototype,\n    itemFilters: {},\n    visualization: {},\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n    itemFilters: sGetItemFiltersRoot(state),\n    visualization: sGetVisualization(\n        state,\n        pluginManager.extractFavorite(ownProps.item).id\n    ),\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onVisualizationLoaded: visualization =>\n        dispatch(acReceivedVisualization(visualization)),\n    onSelectVisualization: (id, type, activeType) =>\n        dispatch(acReceivedActiveVisualization(id, type, activeType)),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(Item));\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\n\nconst style = {\n    backgroundColor: colors.grey200,\n    border: 'none',\n    height: '1px',\n    margin: '0px 0px 5px 0px',\n};\n\nconst Line = () => <hr style={style} />;\n\nexport default Line;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\n\nimport { sGetMessagesRoot } from '../../../reducers/messages';\nimport { formatDate } from '../../../modules/util';\nimport { colors } from '@dhis2/ui-core';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nimport './MessagesItem.css';\n\nconst PRIVATE = 'PRIVATE';\n\nconst messageTypes = {\n    [PRIVATE]: 'Private',\n    VALIDATION_RESULT: 'Validation',\n    TICKET: 'Ticket',\n    SYSTEM: 'System',\n};\n\nconst style = {\n    list: {\n        listStyleType: 'none',\n        paddingLeft: '0px',\n    },\n    seeAll: {\n        textAlign: 'center',\n        fontSize: '13px',\n        marginBottom: '5px',\n    },\n    sender: {\n        fontSize: '13px',\n        lineHeight: '15px',\n        margin: 0,\n        color: colors.grey800,\n    },\n    snippet: {\n        color: colors.grey800,\n        fontSize: '13px',\n        lineHeight: '15px',\n        maxHeight: '30px',\n        overflow: 'hidden',\n    },\n};\n\nclass MessagesItem extends Component {\n    state = {\n        uiLocale: '',\n    };\n\n    async componentDidMount() {\n        const uiLocale = await this.context.d2.currentUser.userSettings.get(\n            'keyUiLocale'\n        );\n\n        this.setState({ uiLocale });\n    }\n\n    getMessageHref = msg => {\n        const msgIdentifier = msg ? `#/${msg.messageType}/${msg.id}` : '';\n        return `${this.context.baseUrl}/dhis-web-messaging/${msgIdentifier}`;\n    };\n\n    getMessageSender = msg => {\n        const latestMsg = msg.messages.slice(-1)[0];\n        return latestMsg.sender ? latestMsg.sender.displayName : '';\n    };\n\n    getMessageItems = () => {\n        const editClass = !this.props.editMode ? 'view' : null;\n\n        return this.props.messages.map(msg => {\n            const redirectToMsg = () => {\n                if (!this.props.editMode) {\n                    document.location.href = this.getMessageHref(msg);\n                }\n            };\n\n            const sender =\n                msg.messageType === PRIVATE\n                    ? this.getMessageSender(msg)\n                    : messageTypes[msg.messageType];\n\n            const readClass = !msg.read ? 'unread' : null;\n            const latestMsg = msg.messages.slice(-1)[0];\n            const msgDate = latestMsg.lastUpdated;\n\n            return (\n                <li\n                    className={`message-item ${editClass}`}\n                    key={msg.id}\n                    onClick={redirectToMsg}\n                >\n                    <p className={`message-title ${readClass}`}>\n                        {msg.displayName} ({msg.messageCount})\n                    </p>\n                    <p style={style.sender}>\n                        {sender} - {formatDate(msgDate, this.state.uiLocale)}\n                    </p>\n                    <p style={style.snippet}>{latestMsg.text}</p>\n                </li>\n            );\n        });\n    };\n\n    render() {\n        return (\n            <Fragment>\n                <ItemHeader title={i18n.t('Messages')} />\n                <Line />\n                {this.props.messages.length > 0 && (\n                    <div className=\"dashboard-item-content\">\n                        <ul style={style.list}>{this.getMessageItems()}</ul>\n                        <div style={style.seeAll}>\n                            <a href={this.getMessageHref()}>\n                                {i18n.t('See all messages')}\n                            </a>\n                        </div>\n                    </div>\n                )}\n            </Fragment>\n        );\n    }\n}\n\nMessagesItem.propTypes = {\n    editMode: PropTypes.bool,\n    messages: PropTypes.array,\n};\n\nMessagesItem.contextTypes = {\n    d2: PropTypes.object,\n    baseUrl: PropTypes.string,\n};\n\nconst mapStateToProps = state => {\n    return {\n        messages: Object.values(sGetMessagesRoot(state)),\n    };\n};\n\nconst MessagesContainer = connect(\n    mapStateToProps,\n    null\n)(MessagesItem);\n\nexport default MessagesContainer;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport ItemHeader from '../ItemHeader';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nconst NotSupportedItem = props => (\n    <Fragment>\n        <ItemHeader title={`Item type not supported: ${props.item.type}`} />\n        <div\n            style={{\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center',\n                height: '90%',\n            }}\n        >\n            <NotInterestedIcon\n                style={{ width: 100, height: 100, align: 'center' }}\n                color=\"disabled\"\n            />\n        </div>\n    </Fragment>\n);\n\nNotSupportedItem.propTypes = {\n    item: PropTypes.object,\n};\n\nexport default NotSupportedItem;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nconst DescriptionIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n        fill={colors.grey500}\n    >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M14 2H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6zm2 16H8v-2h8v2zm0-4H8v-2h8v2zm-3-5V3.5L18.5 9H13z\" />\n    </svg>\n);\n\nDescriptionIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default DescriptionIcon;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nconst DeleteIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"18\"\n        height=\"18\"\n        viewBox=\"0 0 24 24\"\n        fill={colors.red500}\n    >\n        <path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>\n);\n\nDeleteIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default DeleteIcon;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { colors } from '@dhis2/ui-core';\nimport DescriptionIcon from '../../../icons/Description';\n\nimport DeleteIcon from '../../../icons/Delete';\nimport Line from '../../../widgets/Line';\nimport { itemTypeMap, getItemUrl } from '../../../modules/itemTypes';\nimport { orArray } from '../../../modules/util';\nimport { tRemoveListItemContent } from './actions';\nimport ItemHeader from '../ItemHeader';\nimport classes from './Item.module.css';\n\nconst getItemTitle = item => itemTypeMap[item.type].pluralTitle;\n\nconst getContentItems = item =>\n    orArray(item[itemTypeMap[item.type].propName]).filter(\n        (item, index, array) =>\n            array.findIndex(el => el.id === item.id) === index\n    );\n\nconst ListItem = (props, context) => {\n    const { item, editMode, tRemoveListItemContent } = props;\n    const contentItems = getContentItems(item);\n\n    const getLink = contentItem => {\n        const deleteButton = (\n            <button\n                className={classes.deletebutton}\n                onClick={() => tRemoveListItemContent(item, contentItem)}\n            >\n                <DeleteIcon className={classes.deleteicon} />\n            </button>\n        );\n\n        return (\n            <Fragment>\n                <a\n                    className={classes.link}\n                    style={{ color: colors.grey900 }}\n                    href={getItemUrl(item.type, contentItem, context.d2)}\n                >\n                    {contentItem.name}\n                </a>\n                {editMode ? deleteButton : null}\n            </Fragment>\n        );\n    };\n\n    return (\n        <Fragment>\n            <ItemHeader title={getItemTitle(item)} />\n            <Line />\n            <div className=\"dashboard-item-content\">\n                <ul className={classes.list}>\n                    {contentItems.map(contentItem => (\n                        <li className={classes.item} key={contentItem.id}>\n                            <DescriptionIcon className={classes.itemicon} />\n                            {getLink(contentItem)}\n                        </li>\n                    ))}\n                </ul>\n            </div>\n        </Fragment>\n    );\n};\n\nListItem.propTypes = {\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    tRemoveListItemContent: PropTypes.func,\n};\n\nListItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nexport default connect(\n    null,\n    {\n        tRemoveListItemContent,\n    }\n)(ListItem);\n","import {\n    acUpdateDashboardItem,\n    acRemoveDashboardItem,\n} from '../../../actions/editDashboard';\nimport { itemTypeMap } from '../../../modules/itemTypes';\n\nexport const tRemoveListItemContent = (dashboardItem, content) => dispatch => {\n    const listItemType = itemTypeMap[dashboardItem.type].propName;\n\n    const newContent = dashboardItem[listItemType].filter(\n        item => item.id !== content.id\n    );\n\n    if (newContent.length) {\n        dashboardItem[listItemType] = newContent;\n        dispatch(acUpdateDashboardItem(dashboardItem));\n    } else {\n        dispatch(acRemoveDashboardItem(dashboardItem));\n    }\n};\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\n\nimport Input from '@material-ui/core/Input';\nimport {\n    Parser as RichTextParser,\n    Editor as RichTextEditor,\n} from '@dhis2/d2-ui-rich-text';\n\nimport { acUpdateDashboardItem } from '../../../actions/editDashboard';\nimport { sGetEditDashboardItems } from '../../../reducers/editDashboard';\nimport { sGetDashboardItems } from '../../../reducers/dashboards';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nconst style = {\n    textDiv: {\n        padding: '10px',\n        whiteSpace: 'pre-line',\n        lineHeight: '20px',\n    },\n    textField: {\n        fontSize: '14px',\n        fontStretch: 'normal',\n        width: '90%',\n        margin: '0 auto',\n        display: 'block',\n        lineHeight: '24px',\n    },\n    container: {\n        marginBottom: '20px',\n        marginTop: '20px',\n    },\n};\n\nconst TextItem = props => {\n    const { item, editMode, text, acUpdateDashboardItem } = props;\n\n    const onChangeText = event => {\n        const updatedItem = {\n            ...item,\n            text: event.target.value,\n        };\n\n        acUpdateDashboardItem(updatedItem);\n    };\n\n    const viewItem = () => {\n        const textDivStyle = Object.assign({}, style.textField, style.textDiv);\n        return (\n            <div className=\"dashboard-item-content\" style={style.container}>\n                <RichTextParser style={textDivStyle}>{text}</RichTextParser>\n            </div>\n        );\n    };\n\n    const editItem = () => {\n        return (\n            <Fragment>\n                <ItemHeader title={i18n.t('Text item')} />\n                <Line />\n                <div className=\"dashboard-item-content\">\n                    <RichTextEditor onEdit={onChangeText}>\n                        <Input\n                            value={text}\n                            multiline\n                            fullWidth\n                            style={style.textField}\n                            placeholder={i18n.t('Add text here')}\n                            onChange={onChangeText}\n                        />\n                    </RichTextEditor>\n                </div>\n            </Fragment>\n        );\n    };\n\n    return <Fragment>{editMode ? editItem() : viewItem()}</Fragment>;\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    const items = ownProps.editMode\n        ? sGetEditDashboardItems(state)\n        : sGetDashboardItems(state);\n\n    const item = items.find(item => item.id === ownProps.item.id);\n\n    return {\n        text: item ? item.text : '',\n    };\n};\n\nTextItem.propTypes = {\n    acUpdateDashboardItem: PropTypes.func,\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    text: PropTypes.string,\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        acUpdateDashboardItem,\n    }\n)(TextItem);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nimport { FILTER_ORG_UNIT } from '../../../actions/itemFilters';\nimport { sGetItemFiltersRoot } from '../../../reducers/itemFilters';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nconst getIframeSrc = (appDetails, item, itemFilters) => {\n    let iframeSrc = `${appDetails.launchUrl}?dashboardItemId=${item.id}`;\n\n    if (\n        itemFilters &&\n        itemFilters[FILTER_ORG_UNIT] &&\n        itemFilters[FILTER_ORG_UNIT].length\n    ) {\n        const ouIds = itemFilters[FILTER_ORG_UNIT].map(\n            ouPath => ouPath.split('/').slice(-1)[0]\n        );\n\n        iframeSrc += `&userOrgUnit=${ouIds.join(',')}`;\n    }\n\n    return iframeSrc;\n};\n\nconst AppItem = ({ item, itemFilters }, context) => {\n    let appDetails;\n\n    const appKey = item.appKey;\n\n    if (appKey) {\n        appDetails = context.d2.system.installedApps.find(\n            app => app.key === appKey\n        );\n    }\n\n    return appDetails && appDetails.name && appDetails.launchUrl ? (\n        <Fragment>\n            <ItemHeader title={appDetails.name} />\n            <Line />\n            <iframe\n                title={appDetails.name}\n                src={getIframeSrc(appDetails, item, itemFilters)}\n                className=\"dashboard-item-content\"\n                style={{ border: 'none' }}\n            />\n        </Fragment>\n    ) : (\n        <Fragment>\n            <ItemHeader title={`${appKey} app not found`} />\n            <Line />\n            <div\n                className=\"dashboard-item-content\"\n                style={{\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    height: '90%',\n                }}\n            >\n                <NotInterestedIcon\n                    color=\"disabled\"\n                    disabled\n                    style={{ width: 100, height: 100, align: 'center' }}\n                />\n            </div>\n        </Fragment>\n    );\n};\n\nAppItem.propTypes = {\n    item: PropTypes.object,\n    itemFilters: PropTypes.object,\n};\n\nAppItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nconst mapStateToProps = state => ({\n    itemFilters: sGetItemFiltersRoot(state),\n});\n\nexport default connect(mapStateToProps)(AppItem);\n","import React, { Fragment } from 'react';\nimport i18n from '@dhis2/d2-i18n';\n\nimport { colors } from '@dhis2/ui-core';\nimport ItemHeader from '../ItemHeader';\n\nconst style = {\n    margin: '21px 28px',\n    fontSize: '14px',\n    lineHeight: '18px',\n    color: colors.grey600,\n};\n\nconst SpacerItem = () => {\n    return (\n        <Fragment>\n            <ItemHeader title={i18n.t('Spacer')} />\n            <p style={style}>\n                {i18n.t(\n                    'Use a spacer to create empty vertical space between other dashboard items.'\n                )}\n            </p>\n        </Fragment>\n    );\n};\n\nexport default SpacerItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport VisualizationItem from './VisualizationItem/Item';\nimport MessagesItem from './MessagesItem/Item';\nimport NotSupportedItem from './NotSupportedItem/Item';\nimport ListItem from './ListItem/Item';\nimport TextItem from './TextItem/Item';\nimport AppItem from './AppItem/Item';\nimport SpacerItem from './SpacerItem/Item';\nimport {\n    APP,\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_CHART,\n    EVENT_REPORT,\n    MESSAGES,\n    REPORTS,\n    RESOURCES,\n    USERS,\n    TEXT,\n    SPACER,\n} from '../../modules/itemTypes';\nimport { DEFAULT_STATE_ITEM_FILTERS } from '../../reducers/itemFilters';\n\nconst getGridItem = type => {\n    switch (type) {\n        case REPORT_TABLE:\n        case CHART:\n        case MAP:\n        case EVENT_CHART:\n        case EVENT_REPORT:\n            return VisualizationItem;\n        case MESSAGES:\n            return MessagesItem;\n        case REPORTS:\n        case RESOURCES:\n        case USERS:\n            return ListItem;\n        case TEXT:\n            return TextItem;\n        case SPACER:\n            return SpacerItem;\n        case APP:\n            return AppItem;\n        default:\n            return NotSupportedItem;\n    }\n};\n\nexport const Item = props => {\n    const GridItem = getGridItem(props.item.type);\n\n    return (\n        <GridItem\n            item={props.item}\n            editMode={props.editMode}\n            itemFilters={\n                props.editMode ? DEFAULT_STATE_ITEM_FILTERS : props.itemFilters\n            }\n            onToggleItemExpanded={props.onToggleItemExpanded}\n        />\n    );\n};\n\nItem.propTypes = {\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    itemFilters: PropTypes.object,\n    onToggleItemExpanded: PropTypes.func,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ItemHeaderButton from '../Item/ItemHeaderButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { colors } from '@dhis2/ui-core';\n\nconst style = {\n    button: {\n        position: 'absolute',\n        top: '7px',\n        right: '7px',\n        zIndex: '1000',\n    },\n    icon: {\n        fill: colors.red500,\n    },\n};\n\nconst DeleteItemHeaderButton = ({ onClick }) => (\n    <ItemHeaderButton onClick={onClick} style={style.button}>\n        <DeleteIcon style={style.icon} />\n    </ItemHeaderButton>\n);\n\nDeleteItemHeaderButton.propTypes = {\n    onClick: PropTypes.func,\n};\n\nexport default DeleteItemHeaderButton;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nexport const NoContentMessage = ({ text }) => (\n    <div\n        style={{\n            padding: '50px 10px',\n            textAlign: 'center',\n            fontSize: '15px',\n            fontWeight: 500,\n            color: colors.grey600,\n        }}\n    >\n        {text}\n    </div>\n);\n\nNoContentMessage.propTypes = {\n    text: PropTypes.string,\n};\n\nexport default NoContentMessage;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash/debounce';\nimport pick from 'lodash/pick';\n\nconst defaultDebounceMs = 100;\nconst defaultBufferFactor = 0.25;\n\nclass ProgressiveLoadingContainer extends Component {\n    static propTypes = {\n        children: PropTypes.node.isRequired,\n        bufferFactor: PropTypes.number,\n        className: PropTypes.string,\n        debounceMs: PropTypes.number,\n        style: PropTypes.object,\n    };\n    static defaultProps = {\n        debounceMs: defaultDebounceMs,\n        bufferFactor: defaultBufferFactor,\n    };\n\n    state = {\n        shouldLoad: false,\n    };\n    containerRef = null;\n    shouldLoadHandler = null;\n\n    checkShouldLoad() {\n        const bufferPx = this.props.bufferFactor * window.innerHeight;\n\n        if (!this.containerRef) {\n            return;\n        }\n\n        const rect = this.containerRef.getBoundingClientRect();\n        if (\n            rect.bottom > -bufferPx &&\n            rect.top < window.innerHeight + bufferPx\n        ) {\n            this.setState({\n                shouldLoad: true,\n            });\n\n            this.removeHandler();\n        }\n    }\n\n    registerHandler() {\n        this.shouldLoadHandler = debounce(\n            () => this.checkShouldLoad(),\n            this.props.debounceMs\n        );\n\n        window.addEventListener('scroll', this.shouldLoadHandler);\n    }\n    removeHandler() {\n        window.removeEventListener('scroll', this.shouldLoadHandler);\n    }\n\n    componentDidMount() {\n        this.registerHandler();\n        this.checkShouldLoad();\n    }\n\n    componentWillUnmount() {\n        this.removeHandler();\n    }\n\n    render() {\n        const { children, className, style, ...props } = this.props;\n        const { shouldLoad } = this.state;\n\n        const eventProps = pick(props, [\n            'onMouseDown',\n            'onTouchStart',\n            'onMouseUp',\n            'onTouchEnd',\n        ]);\n\n        return (\n            <div\n                ref={ref => (this.containerRef = ref)}\n                style={style}\n                className={className}\n                {...eventProps}\n            >\n                {shouldLoad && children}\n            </div>\n        );\n    }\n}\n\nexport default ProgressiveLoadingContainer;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ReactGridLayout from 'react-grid-layout';\nimport { CircularLoader, ScreenCover } from '@dhis2/ui-core';\n\nimport {\n    acUpdateDashboardLayout,\n    acRemoveDashboardItem,\n} from '../../actions/editDashboard';\nimport { Item } from '../Item/Item';\nimport { resize as pluginResize } from '../Item/VisualizationItem/plugin';\nimport { isPluginType } from '../../modules/itemTypes';\nimport {\n    GRID_ROW_HEIGHT,\n    GRID_COMPACT_TYPE,\n    ITEM_MIN_HEIGHT,\n    MARGIN,\n    getGridColumns,\n    hasShape,\n    onItemResize,\n} from './gridUtil';\nimport { orArray } from '../../modules/util';\nimport DeleteItemButton from './DeleteItemButton';\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\n\nimport './ItemGrid.css';\nimport { sGetSelectedId, sGetSelectedIsLoading } from '../../reducers/selected';\nimport {\n    sGetEditDashboardRoot,\n    sGetEditDashboardItems,\n} from '../../reducers/editDashboard';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n} from '../../reducers/dashboards';\nimport ProgressiveLoadingContainer from '../Item/ProgressiveLoadingContainer';\n\n// Component\n\nconst EXPANDED_HEIGHT = 17;\n\nexport class ItemGrid extends Component {\n    state = {\n        expandedItems: {},\n    };\n\n    onToggleItemExpanded = clickedId => {\n        const isExpanded =\n            typeof this.state.expandedItems[clickedId] === 'boolean'\n                ? this.state.expandedItems[clickedId]\n                : false;\n\n        const expandedItems = { ...this.state.expandedItems };\n        expandedItems[clickedId] = !isExpanded;\n        this.setState({ expandedItems });\n    };\n\n    onRemoveItem = clickedId => {\n        this.props.acRemoveDashboardItem(clickedId);\n    };\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.edit) {\n            this.setState({ expandedItems: {} });\n        }\n    }\n\n    onLayoutChange = newLayout => {\n        if (this.props.edit) {\n            this.props.acUpdateDashboardLayout(newLayout);\n        }\n    };\n\n    onResizeStop = (layout, oldItem, newItem) => {\n        onItemResize(newItem.i);\n\n        const dashboardItem = this.props.dashboardItems.find(\n            item => item.id === newItem.i\n        );\n\n        // call resize on the item component if it's a plugin type\n        if (dashboardItem && isPluginType(dashboardItem)) {\n            pluginResize(dashboardItem);\n        }\n    };\n\n    onRemoveItemWrapper = id => () => this.onRemoveItem(id);\n\n    render() {\n        const { edit, isLoading, dashboardItems } = this.props;\n\n        if (!isLoading && !dashboardItems.length) {\n            return (\n                <NoContentMessage\n                    text={i18n.t('There are no items on this dashboard')}\n                />\n            );\n        }\n\n        const items = dashboardItems.map(item => {\n            const expandedItem = this.state.expandedItems[item.id];\n            const hProp = { h: item.h };\n\n            if (expandedItem && expandedItem === true) {\n                hProp.h = item.h + EXPANDED_HEIGHT;\n            }\n\n            return Object.assign({}, item, hProp, {\n                i: item.id,\n                minH: ITEM_MIN_HEIGHT,\n            });\n        });\n\n        return (\n            <div className=\"grid-wrapper\">\n                {isLoading ? (\n                    <ScreenCover>\n                        <CircularLoader />\n                    </ScreenCover>\n                ) : null}\n                <ReactGridLayout\n                    onLayoutChange={this.onLayoutChange}\n                    onResizeStop={this.onResizeStop}\n                    className=\"layout\"\n                    layout={items}\n                    margin={MARGIN}\n                    cols={getGridColumns()}\n                    rowHeight={GRID_ROW_HEIGHT}\n                    width={window.innerWidth}\n                    compactType={GRID_COMPACT_TYPE}\n                    isDraggable={edit}\n                    isResizable={edit}\n                    draggableCancel=\"input,textarea\"\n                >\n                    {items.map(item => {\n                        const itemClassNames = [\n                            item.type,\n                            edit ? 'edit' : 'view',\n                        ].join(' ');\n\n                        return (\n                            <ProgressiveLoadingContainer\n                                key={item.i}\n                                className={itemClassNames}\n                            >\n                                {edit ? (\n                                    <DeleteItemButton\n                                        onClick={this.onRemoveItemWrapper(\n                                            item.id\n                                        )}\n                                    />\n                                ) : null}\n                                <Item\n                                    item={item}\n                                    editMode={edit}\n                                    onToggleItemExpanded={\n                                        this.onToggleItemExpanded\n                                    }\n                                />\n                            </ProgressiveLoadingContainer>\n                        );\n                    })}\n                </ReactGridLayout>\n            </div>\n        );\n    }\n}\n\nItemGrid.propTypes = {\n    acRemoveDashboardItem: PropTypes.func,\n    acUpdateDashboardLayout: PropTypes.func,\n    dashboardItems: PropTypes.array,\n    edit: PropTypes.bool,\n    isLoading: PropTypes.bool,\n};\n\nItemGrid.defaultProps = {\n    dashboardItems: [],\n};\n\n// Container\n\nconst mapStateToProps = (state, ownProps) => {\n    const selectedDashboard = ownProps.edit\n        ? sGetEditDashboardRoot(state)\n        : sGetDashboardById(state, sGetSelectedId(state));\n\n    const dashboardItems = ownProps.edit\n        ? sGetEditDashboardItems(state)\n        : sGetDashboardItems(state);\n\n    return {\n        isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n        dashboardItems,\n    };\n};\n\nconst mapDispatchToProps = {\n    acUpdateDashboardLayout,\n    acRemoveDashboardItem,\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const validItems = orArray(stateProps.dashboardItems).filter(hasShape);\n\n    return {\n        ...dispatchProps,\n        edit: ownProps.edit,\n        isLoading: stateProps.isLoading,\n        dashboardItems: validItems,\n        onItemResize,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n    mergeProps\n)(ItemGrid);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport i18n from '@dhis2/d2-i18n';\n\nimport { colors } from '@dhis2/ui-core';\n\nconst styles = {\n    badgeContainer: {\n        margin: '2px',\n        padding: '0 16px',\n        borderRadius: '4px',\n        color: colors.white,\n        backgroundColor: '#212934',\n        height: 36,\n        display: 'flex',\n        alignItems: 'center',\n    },\n    badge: {\n        fontSize: '13px',\n        cursor: 'pointer',\n        whiteSpace: 'nowrap',\n    },\n    badgeRemove: {\n        fontSize: '12px',\n        textDecoration: 'underline',\n        marginLeft: '24px',\n        cursor: 'pointer',\n    },\n};\n\nclass FilterBadge extends Component {\n    onClick = id => () => this.props.onClick(id);\n    onRemove = id => () => this.props.onRemove(id);\n\n    render() {\n        const { data } = this.props;\n\n        return (\n            <div style={styles.badgeContainer}>\n                <span style={styles.badge} onClick={this.onClick(data.id)}>\n                    {`${data.name}: ${\n                        data.values.length > 1\n                            ? i18n.t('{{count}} selected', {\n                                  count: data.values.length,\n                              })\n                            : data.values[0].name\n                    }`}\n                </span>\n                <span\n                    style={styles.badgeRemove}\n                    onClick={this.onRemove(data.id)}\n                >\n                    {i18n.t('Remove')}\n                </span>\n            </div>\n        );\n    }\n}\n\nFilterBadge.propTypes = {\n    data: PropTypes.object.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onRemove: PropTypes.func.isRequired,\n};\n\nFilterBadge.defaultProps = {\n    onClick: Function.prototype,\n    onRemove: Function.prototype,\n};\n\nexport default FilterBadge;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { createSelector } from 'reselect';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport { sGetDimensions } from '../../reducers/dimensions';\nimport { sGetItemFiltersRoot } from '../../reducers/itemFilters';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { getTopOffset } from '../ControlBar/controlBarDimensions';\nimport { acRemoveItemFilter } from '../../actions/itemFilters';\nimport { acRemoveEditItemFilter } from '../../actions/editItemFilters';\nimport { acSetActiveModalDimension } from '../../actions/activeModalDimension';\n\nimport FilterBadge from './FilterBadge';\n\nconst styles = {\n    bar: {\n        position: 'sticky',\n        zIndex: 7,\n        padding: '8px 0',\n        display: 'flex',\n        justifyContent: 'center',\n        flexWrap: 'wrap',\n    },\n};\n\nexport class FilterBar extends Component {\n    onBadgeRemove = id => {\n        this.props.removeItemFilter(id);\n        this.props.removeEditItemFilter(id);\n    };\n\n    onBadgeClick = id => {\n        this.props.setActiveModalDimension({\n            id,\n            name: this.props.filters.find(item => item.id === id).name,\n        });\n    };\n\n    render() {\n        const { filters, userRows, classes } = this.props;\n        const top = getTopOffset(userRows) + 10;\n\n        return filters.length ? (\n            <div className={classes.bar} style={{ top }}>\n                {filters.map(filter => (\n                    <FilterBadge\n                        key={filter.id}\n                        data={filter}\n                        onClick={this.onBadgeClick}\n                        onRemove={this.onBadgeRemove}\n                    />\n                ))}\n            </div>\n        ) : null;\n    }\n}\n\nFilterBar.propTypes = {\n    filters: PropTypes.array.isRequired,\n    removeEditItemFilter: PropTypes.func.isRequired,\n    removeItemFilter: PropTypes.func.isRequired,\n    classes: PropTypes.object,\n    setActiveModalDimension: PropTypes.func,\n    userRows: PropTypes.number,\n};\n\nFilterBar.defaultProps = {\n    filters: [],\n    removeItemFIlter: Function.prototype,\n    removeEditItemFilter: Function.prototype,\n};\n\n// simplify the filters structure to:\n// [{ id: 'pe', name: 'Period', values: [{ id: 2019: name: '2019' }, {id: 'LAST_MONTH', name: 'Last month' }]}, ...]\nconst filtersSelector = createSelector(\n    [sGetItemFiltersRoot, sGetDimensions],\n    (filters, dimensions) =>\n        Object.keys(filters).reduce((arr, id) => {\n            arr.push({\n                id: id,\n                name: dimensions[id].name,\n                values: filters[id].map(value => ({\n                    id: value.id,\n                    name: value.displayName || value.name,\n                })),\n            });\n\n            return arr;\n        }, [])\n);\n\nconst mapStateToProps = state => ({\n    filters: filtersSelector(state),\n    userRows: sGetControlBarUserRows(state),\n});\n\nexport default connect(\n    mapStateToProps,\n    {\n        setActiveModalDimension: acSetActiveModalDimension,\n        removeItemFilter: acRemoveItemFilter,\n        removeEditItemFilter: acRemoveEditItemFilter,\n    }\n)(withStyles(styles)(FilterBar));\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport TitleBar from '../TitleBar/TitleBar';\nimport ItemGrid from '../ItemGrid/ItemGrid';\nimport FilterBar from '../FilterBar/FilterBar';\n\nexport const DashboardContent = props => (\n    <Fragment>\n        <TitleBar edit={props.editMode} />\n        <FilterBar />\n        <ItemGrid edit={props.editMode} />\n    </Fragment>\n);\n\nDashboardContent.propTypes = {\n    editMode: PropTypes.bool,\n};\n\nexport default DashboardContent;\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport isEmpty from 'lodash/isEmpty';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\n\nimport {\n    sGetAllDashboards,\n    sDashboardsIsFetching,\n} from '../../reducers/dashboards';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport DashboardsBar from '../ControlBar/DashboardsBar';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport DashboardContent from './DashboardContent';\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nexport const Content = ({ hasDashboardContent, dashboardsIsEmpty }) => {\n    const msg = dashboardsIsEmpty\n        ? i18n.t(\n              'No dashboards found. Use the + button to create a new dashboard.'\n          )\n        : i18n.t('Requested dashboard not found');\n\n    return hasDashboardContent ? (\n        <DashboardContent editMode={false} />\n    ) : (\n        <NoContentMessage text={msg} />\n    );\n};\n\nContent.propTypes = {\n    dashboardsIsEmpty: PropTypes.bool,\n    hasDashboardContent: PropTypes.bool,\n};\n\nexport const ViewDashboard = ({ id, dashboardsIsEmpty, dashboardsLoaded }) => {\n    const hasDashboardContent = id && !dashboardsIsEmpty;\n    const contentNotReady = !dashboardsLoaded || id === null;\n\n    return (\n        <Fragment>\n            <DashboardsBar />\n            <DashboardVerticalOffset />\n            <div className=\"dashboard-wrapper\">\n                {contentNotReady ? null : (\n                    <Content\n                        hasDashboardContent={hasDashboardContent}\n                        dashboardsIsEmpty={dashboardsIsEmpty}\n                    />\n                )}\n            </div>\n        </Fragment>\n    );\n};\n\nViewDashboard.propTypes = {\n    dashboardsIsEmpty: PropTypes.bool,\n    dashboardsLoaded: PropTypes.bool,\n    id: PropTypes.string,\n};\n\nconst mapStateToProps = state => {\n    const dashboards = sGetAllDashboards(state);\n\n    return {\n        id: sGetSelectedId(state),\n        dashboardsIsEmpty: isEmpty(dashboards),\n        dashboardsLoaded: !sDashboardsIsFetching(state),\n    };\n};\n\nexport default connect(mapStateToProps)(ViewDashboard);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport { Button } from '@dhis2/ui-core';\n\nexport const ConfirmDeleteDialog = ({\n    dashboardName,\n    onDeleteConfirmed,\n    onContinueEditing,\n    open,\n}) => {\n    const actions = [\n        <Button key=\"cancel\" secondary onClick={onContinueEditing}>\n            {i18n.t('Cancel')}\n        </Button>,\n        <Button key=\"delete\" destructive onClick={onDeleteConfirmed}>\n            {i18n.t('Delete')}\n        </Button>,\n    ];\n\n    return (\n        <Dialog open={open} onClose={onContinueEditing}>\n            <DialogTitle style={{ fontSize: '1.25rem', fontWeight: '450' }}>\n                {i18n.t('Delete dashboard')}\n            </DialogTitle>\n            <DialogContent>\n                <DialogContentText style={{ fontSize: '0.875rem' }}>\n                    {i18n.t(\n                        'Deleting dashboard \"{{ dashboardName }}\" will remove it for all users. This action cannot be undone. Are you sure you want to permanently delete this dashboard?',\n                        { dashboardName }\n                    )}\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>{actions}</DialogActions>\n        </Dialog>\n    );\n};\n\nConfirmDeleteDialog.propTypes = {\n    dashboardName: PropTypes.string,\n    open: PropTypes.bool,\n    onContinueEditing: PropTypes.func,\n    onDeleteConfirmed: PropTypes.func,\n};\n\nexport default ConfirmDeleteDialog;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport ControlBar from './ControlBar';\nimport TranslationDialog from '@dhis2/d2-ui-translation-dialog';\nimport { Button } from '@dhis2/ui-core';\n\nimport ConfirmDeleteDialog from './ConfirmDeleteDialog';\nimport {\n    tSaveDashboard,\n    acClearEditDashboard,\n} from '../../actions/editDashboard';\nimport {\n    tDeleteDashboard,\n    acSetDashboardDisplayName,\n} from '../../actions/dashboards';\nimport {\n    sGetEditDashboardRoot,\n    sGetIsNewDashboard,\n} from '../../reducers/editDashboard';\nimport {\n    CONTROL_BAR_ROW_HEIGHT,\n    MIN_ROW_COUNT,\n    getControlBarHeight,\n} from './controlBarDimensions';\nimport { apiFetchDashboard } from '../../api/dashboards';\n\nimport classes from './styles/DashboardsBar.module.css';\n\nconst buttonBarStyle = {\n    height: CONTROL_BAR_ROW_HEIGHT,\n    paddingTop: '15px',\n    marginLeft: '15px',\n    marginRight: '15px',\n};\n\nexport class EditBar extends Component {\n    state = {\n        translationDialogIsOpen: false,\n        dashboardModel: undefined,\n        confirmDeleteDialogOpen: false,\n        redirectUrl: undefined,\n    };\n\n    onConfirmDelete = () => {\n        this.setState({ confirmDeleteDialogOpen: true });\n    };\n\n    onSave = () => {\n        this.props.onSave().then(newId => {\n            this.setState({ redirectUrl: `/${newId}` });\n        });\n    };\n\n    onDiscard = () => {\n        this.props.onDiscardChanges();\n        const redirectUrl = this.props.dashboardId\n            ? `/${this.props.dashboardId}`\n            : '/';\n        this.setState({ redirectUrl });\n    };\n\n    onContinueEditing = () => {\n        this.setState({ confirmDeleteDialogOpen: false });\n    };\n\n    onDeleteConfirmed = () => {\n        this.setState({ confirmDeleteDialogOpen: false });\n        this.props.onDelete(this.props.dashboardId).then(() => {\n            this.setState({ redirectUrl: '/' });\n        });\n    };\n\n    onTranslationsSaved = async translations => {\n        if (translations && translations.length) {\n            const dbLocale = await this.context.d2.currentUser.userSettings.get(\n                'keyDbLocale'\n            );\n\n            const translation = translations.find(\n                t => t.locale === dbLocale && t.property === 'NAME'\n            );\n\n            if (translation && translation.value) {\n                this.props.onTranslate(\n                    this.props.dashboardId,\n                    translation.value\n                );\n            }\n        }\n    };\n\n    fetchDashboardModel = () => {\n        if (this.props.dashboardId && !this.state.dashboardModel) {\n            apiFetchDashboard(this.props.dashboardId).then(dashboardModel =>\n                this.setState({ dashboardModel })\n            );\n        }\n    };\n\n    componentDidMount() {\n        this.fetchDashboardModel();\n    }\n\n    componentDidUpdate() {\n        this.fetchDashboardModel();\n    }\n\n    toggleTranslationDialog = () => {\n        this.setState({\n            translationDialogIsOpen: !this.state.translationDialogIsOpen,\n        });\n    };\n\n    confirmDeleteDialog = () =>\n        this.props.deleteAccess && this.props.dashboardId ? (\n            <ConfirmDeleteDialog\n                dashboardName={this.props.dashboardName}\n                onDeleteConfirmed={this.onDeleteConfirmed}\n                onContinueEditing={this.onContinueEditing}\n                open={this.state.confirmDeleteDialogOpen}\n            />\n        ) : null;\n\n    translationDialog = () =>\n        this.state.dashboardModel && this.state.dashboardModel.id ? (\n            <TranslationDialog\n                className=\"translation-dialog\"\n                d2={this.context.d2}\n                open={this.state.translationDialogIsOpen}\n                onRequestClose={this.toggleTranslationDialog}\n                objectToTranslate={this.state.dashboardModel}\n                fieldsToTranslate={['name', 'description']}\n                // TODO handle messages in snackbar\n                onTranslationSaved={this.onTranslationsSaved}\n                onTranslationError={err =>\n                    console.log('translation update error', err)\n                }\n            />\n        ) : null;\n\n    render() {\n        if (this.state.redirectUrl) {\n            return <Redirect to={this.state.redirectUrl} />;\n        }\n\n        const { dashboardId, deleteAccess, updateAccess } = this.props;\n        const controlBarHeight = getControlBarHeight(MIN_ROW_COUNT);\n\n        const discardBtnText = updateAccess\n            ? i18n.t('Exit without saving')\n            : i18n.t('Go to dashboards');\n\n        return (\n            <Fragment>\n                <ControlBar height={controlBarHeight} editMode={true}>\n                    <div style={buttonBarStyle}>\n                        {updateAccess ? (\n                            <div className={classes.leftControls}>\n                                <span style={{ marginRight: '15px' }}>\n                                    <Button primary onClick={this.onSave}>\n                                        {i18n.t('Save changes')}\n                                    </Button>\n                                </span>\n\n                                {dashboardId ? (\n                                    <span style={{ marginRight: '15px' }}>\n                                        <Button\n                                            onClick={\n                                                this.toggleTranslationDialog\n                                            }\n                                        >\n                                            {i18n.t('Translate')}\n                                        </Button>\n                                    </span>\n                                ) : null}\n                                {dashboardId && deleteAccess ? (\n                                    <Button onClick={this.onConfirmDelete}>\n                                        {i18n.t('Delete')}\n                                    </Button>\n                                ) : null}\n                            </div>\n                        ) : null}\n\n                        <div className={classes.rightControls}>\n                            <Button secondary onClick={this.onDiscard}>\n                                {discardBtnText}\n                            </Button>\n                        </div>\n                    </div>\n                </ControlBar>\n                {this.translationDialog()}\n                {this.confirmDeleteDialog()}\n            </Fragment>\n        );\n    }\n}\n\nEditBar.propTypes = {\n    dashboardId: PropTypes.string,\n    dashboardName: PropTypes.string,\n    deleteAccess: PropTypes.bool,\n    updateAccess: PropTypes.bool,\n    onDelete: PropTypes.func,\n    onDiscardChanges: PropTypes.func,\n    onSave: PropTypes.func,\n    onTranslate: PropTypes.func,\n};\n\nEditBar.contextTypes = {\n    d2: PropTypes.object,\n};\n\nconst mapStateToProps = state => {\n    const dashboard = sGetEditDashboardRoot(state);\n\n    let deleteAccess;\n    let updateAccess;\n    if (sGetIsNewDashboard(state)) {\n        deleteAccess = true;\n        updateAccess = true;\n    } else {\n        updateAccess = dashboard.access ? dashboard.access.update : false;\n        deleteAccess = dashboard.access ? dashboard.access.delete : false;\n    }\n\n    return {\n        dashboardId: dashboard.id,\n        dashboardName: dashboard.name,\n        deleteAccess,\n        updateAccess,\n    };\n};\n\nconst mapDispatchToProps = dispatch => ({\n    onSave: () => dispatch(tSaveDashboard()).then(id => id),\n    onDelete: id => dispatch(tDeleteDashboard(id)),\n    onDiscardChanges: () => dispatch(acClearEditDashboard()),\n    onTranslate: (id, value) => dispatch(acSetDashboardDisplayName(id, value)),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(EditBar);\n","import React, { Fragment, Component } from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\n\nimport { acSetEditDashboard } from '../../actions/editDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n    sDashboardsIsFetching,\n} from '../../reducers/dashboards';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport DashboardContent from './DashboardContent';\nimport EditBar from '../ControlBar/EditBar';\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nexport const Content = ({ updateAccess }) => {\n    return updateAccess ? (\n        <DashboardContent editMode={true} />\n    ) : (\n        <NoContentMessage text={i18n.t('No access')} />\n    );\n};\n\nContent.propTypes = {\n    updateAccess: PropTypes.bool,\n};\nexport class EditDashboard extends Component {\n    state = {\n        initialized: false,\n    };\n\n    initEditDashboard = () => {\n        if (this.props.dashboard) {\n            this.setState({ initialized: true });\n            this.props.setEditDashboard(this.props.dashboard, this.props.items);\n        }\n    };\n\n    componentDidMount() {\n        this.initEditDashboard();\n    }\n\n    componentDidUpdate() {\n        if (!this.state.initialized) {\n            this.initEditDashboard();\n        }\n    }\n\n    getDashboardContent = () => {\n        const contentNotReady =\n            !this.props.dashboardsLoaded || this.props.id === null;\n\n        return (\n            <div className=\"dashboard-wrapper\">\n                {contentNotReady ? null : (\n                    <Content updateAccess={this.props.updateAccess} />\n                )}\n            </div>\n        );\n    };\n\n    render() {\n        return (\n            <Fragment>\n                <EditBar />\n                <DashboardVerticalOffset editMode={true} />\n                {this.getDashboardContent()}\n            </Fragment>\n        );\n    }\n}\n\nEditDashboard.propTypes = {\n    dashboard: PropTypes.object,\n    dashboardsLoaded: PropTypes.bool,\n    id: PropTypes.string,\n    items: PropTypes.array,\n    setEditDashboard: PropTypes.func,\n    updateAccess: PropTypes.bool,\n};\n\nconst mapStateToProps = state => {\n    const id = sGetSelectedId(state);\n    const dashboard = id ? sGetDashboardById(state, id) : null;\n\n    const updateAccess =\n        dashboard && dashboard.access ? dashboard.access.update : false;\n\n    return {\n        dashboard,\n        id,\n        updateAccess,\n        items: sGetDashboardItems(state),\n        dashboardsLoaded: !sDashboardsIsFetching(state),\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        setEditDashboard: acSetEditDashboard,\n    }\n)(EditDashboard);\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { acSetEditNewDashboard } from '../../actions/editDashboard';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport EditBar from '../ControlBar/EditBar';\nimport DashboardContent from './DashboardContent';\n\nclass NewDashboard extends Component {\n    componentDidMount() {\n        this.props.setNewDashboard();\n    }\n\n    render() {\n        return (\n            <Fragment>\n                <EditBar />\n                <DashboardVerticalOffset editMode={true} />\n                <div className=\"dashboard-wrapper\">\n                    <DashboardContent editMode={true} />\n                </div>\n            </Fragment>\n        );\n    }\n}\n\nNewDashboard.propTypes = {\n    setNewDashboard: PropTypes.func,\n};\n\nexport default connect(\n    null,\n    {\n        setNewDashboard: acSetEditNewDashboard,\n    }\n)(NewDashboard);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { tSelectDashboard } from '../../actions/dashboards';\nimport { sDashboardsIsFetching } from '../../reducers/dashboards';\nimport { EDIT, NEW } from './dashboardModes';\nimport ViewDashboard from './ViewDashboard';\nimport EditDashboard from './EditDashboard';\nimport NewDashboard from './NewDashboard';\n\nclass Dashboard extends Component {\n    setDashboard = () => {\n        if (this.props.dashboardsLoaded) {\n            const id = this.props.match.params.dashboardId || null;\n\n            this.props.selectDashboard(id);\n\n            this.scrollToTop();\n        }\n    };\n\n    scrollToTop = () => {\n        window.scrollTo(0, 0);\n    };\n\n    componentDidMount() {\n        this.setDashboard();\n    }\n\n    componentDidUpdate() {\n        this.setDashboard();\n    }\n\n    render() {\n        switch (this.props.mode) {\n            case EDIT:\n                return <EditDashboard />;\n            case NEW:\n                return <NewDashboard />;\n            default:\n                return <ViewDashboard />;\n        }\n    }\n}\n\nDashboard.propTypes = {\n    dashboardsLoaded: PropTypes.bool,\n    match: PropTypes.object,\n    mode: PropTypes.string,\n    selectDashboard: PropTypes.func,\n};\n\nconst mapStateToProps = state => {\n    return { dashboardsLoaded: !sDashboardsIsFetching(state) };\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        selectDashboard: tSelectDashboard,\n    }\n)(Dashboard);\n","export const EDIT = 'edit';\nexport const NEW = 'new';\nexport const VIEW = 'view';\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { HeaderBar } from '@dhis2/ui-widgets';\n\nimport { EDIT, VIEW, NEW } from './Dashboard/dashboardModes';\nimport { acReceivedUser } from '../actions/user';\nimport { tFetchDashboards } from '../actions/dashboards';\nimport { tSetControlBarRows } from '../actions/controlBar';\nimport { tSetDimensions } from '../actions/dimensions';\nimport Dashboard from './Dashboard/Dashboard';\nimport SnackbarMessage from './SnackbarMessage/SnackbarMessage';\n\nimport 'typeface-roboto';\nimport './App.css';\n\nexport class App extends Component {\n    componentDidMount() {\n        this.props.setCurrentUser(this.props.d2.currentUser);\n        this.props.fetchDashboards();\n        this.props.setControlBarRows();\n        this.props.setDimensions(this.props.d2);\n    }\n\n    getChildContext() {\n        return { baseUrl: this.props.baseUrl, i18n, d2: this.props.d2 };\n    }\n\n    render() {\n        return (\n            <div className=\"app-wrapper\">\n                <div className=\"dashboard-header-bar\">\n                    <HeaderBar appName={i18n.t('Dashboard')} />\n                </div>\n                <Router>\n                    <Switch>\n                        <Route\n                            exact\n                            path=\"/\"\n                            render={props => (\n                                <Dashboard {...props} mode={VIEW} />\n                            )}\n                        />\n                        <Route\n                            exact\n                            path=\"/new\"\n                            render={props => (\n                                <Dashboard {...props} mode={NEW} />\n                            )}\n                        />\n                        <Route\n                            exact\n                            path=\"/:dashboardId\"\n                            render={props => (\n                                <Dashboard {...props} mode={VIEW} />\n                            )}\n                        />\n                        <Route\n                            exact\n                            path=\"/:dashboardId/edit\"\n                            render={props => (\n                                <Dashboard {...props} mode={EDIT} />\n                            )}\n                        />\n                    </Switch>\n                </Router>\n                <SnackbarMessage />\n            </div>\n        );\n    }\n}\n\nApp.propTypes = {\n    fetchDashboards: PropTypes.func.isRequired,\n    setControlBarRows: PropTypes.func.isRequired,\n    setCurrentUser: PropTypes.func.isRequired,\n    setDimensions: PropTypes.func.isRequired,\n    baseUrl: PropTypes.string,\n    d2: PropTypes.object,\n};\n\nApp.childContextTypes = {\n    baseUrl: PropTypes.string,\n    i18n: PropTypes.object,\n    d2: PropTypes.object,\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setCurrentUser: currentUser => dispatch(acReceivedUser(currentUser)),\n        fetchDashboards: () => dispatch(tFetchDashboards()),\n        setControlBarRows: () => dispatch(tSetControlBarRows()),\n        setDimensions: d2 => dispatch(tSetDimensions(d2)),\n    };\n};\n\nexport default connect(\n    null,\n    mapDispatchToProps\n)(App);\n","import { RECEIVED_USER } from '../reducers/user';\n\nexport const acReceivedUser = value => ({\n    type: RECEIVED_USER,\n    value,\n});\n","//------------------------------------------------------------------------------\n// <auto-generated>\n// This code was generated by d2-i18n-generate.\n//\n// Changes to this file may cause incorrect behavior and will be lost if\n// the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\nimport i18n from '@dhis2/d2-i18n';\nimport moment from 'moment';\nimport 'moment/locale/ar';\nimport 'moment/locale/es';\nimport 'moment/locale/fr';\nimport 'moment/locale/lo';\nimport 'moment/locale/pt';\nimport 'moment/locale/ru';\nimport 'moment/locale/sv';\nimport 'moment/locale/tg';\nimport 'moment/locale/uk';\nimport 'moment/locale/ur';\nimport 'moment/locale/vi';\nimport 'moment/locale/zh-cn';\n\nimport arTranslations from './ar/translations.json';\nimport daTranslations from './da/translations.json';\nimport enTranslations from './en/translations.json';\nimport esTranslations from './es/translations.json';\nimport frTranslations from './fr/translations.json';\nimport idTranslations from './id/translations.json';\nimport kmTranslations from './km/translations.json';\nimport loTranslations from './lo/translations.json';\nimport myTranslations from './my/translations.json';\nimport prsTranslations from './prs/translations.json';\nimport psTranslations from './ps/translations.json';\nimport ptTranslations from './pt/translations.json';\nimport pt_BRTranslations from './pt_BR/translations.json';\nimport ruTranslations from './ru/translations.json';\nimport svTranslations from './sv/translations.json';\nimport tetTranslations from './tet/translations.json';\nimport tgTranslations from './tg/translations.json';\nimport ukTranslations from './uk/translations.json';\nimport urTranslations from './ur/translations.json';\nimport viTranslations from './vi/translations.json';\nimport zhTranslations from './zh/translations.json';\n\nconst namespace = 'dashboards-app';\nmoment.locale('en');\n\ni18n.addResources('ar', namespace, arTranslations);\ni18n.addResources('da', namespace, daTranslations);\ni18n.addResources('en', namespace, enTranslations);\ni18n.addResources('es', namespace, esTranslations);\ni18n.addResources('fr', namespace, frTranslations);\ni18n.addResources('id', namespace, idTranslations);\ni18n.addResources('km', namespace, kmTranslations);\ni18n.addResources('lo', namespace, loTranslations);\ni18n.addResources('my', namespace, myTranslations);\ni18n.addResources('prs', namespace, prsTranslations);\ni18n.addResources('ps', namespace, psTranslations);\ni18n.addResources('pt', namespace, ptTranslations);\ni18n.addResources('pt_BR', namespace, pt_BRTranslations);\ni18n.addResources('ru', namespace, ruTranslations);\ni18n.addResources('sv', namespace, svTranslations);\ni18n.addResources('tet', namespace, tetTranslations);\ni18n.addResources('tg', namespace, tgTranslations);\ni18n.addResources('uk', namespace, ukTranslations);\ni18n.addResources('ur', namespace, urTranslations);\ni18n.addResources('vi', namespace, viTranslations);\ni18n.addResources('zh', namespace, zhTranslations);\n\ni18n.setDefaultNamespace(namespace);\ni18n.changeLanguage('en');\n\nexport default i18n;\n","/** @module reducers/selected */\nimport { validateReducer } from '../modules/util';\n\nexport const SET_STYLE = 'SET_STYLE';\n\nexport const DEFAULT_STATE_STYLE = 'LIST';\n\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\nconst style = (state = DEFAULT_STATE_STYLE, action) => {\n    switch (action.type) {\n        case SET_STYLE:\n            return validateReducer(action.value, DEFAULT_STATE_STYLE);\n        default:\n            return state;\n    }\n};\n\nexport default style;\n\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\nexport const sGetStyleRoot = state => state.style;\n","import { combineReducers } from 'redux';\nimport arraySort from 'd2-utilizr/lib/arraySort';\n\nimport dashboards, { sGetDashboardsRoot } from './dashboards';\nimport selected from './selected';\nimport dashboardsFilter, {\n    ownerData,\n    sGetFilterName,\n    sGetFilterOrder,\n    sGetFilterOwner,\n} from './dashboardsFilter';\nimport controlBar from './controlBar';\nimport visualizations from './visualizations';\nimport editDashboard from './editDashboard';\nimport messages from './messages';\nimport user from './user';\nimport snackbar from './snackbar';\nimport itemFilters from './itemFilters';\nimport editItemFilters from './editItemFilters';\nimport style from './style';\nimport dimensions from './dimensions';\nimport settings from './settings';\nimport activeModalDimension from './activeModalDimension';\n\nconst USER = 'system';\n\n// Reducers\n\nexport default combineReducers({\n    dashboards,\n    selected,\n    dashboardsFilter,\n    controlBar,\n    visualizations,\n    messages,\n    user,\n    editDashboard,\n    itemFilters,\n    editItemFilters,\n    style,\n    snackbar,\n    dimensions,\n    settings,\n    activeModalDimension,\n});\n\n// Map constants to data\nconst mapConstToData = {\n    NAME: 'name',\n    ITEMS: 'numberOfItems',\n    CREATED: 'created',\n    OWNER: 'owner',\n};\n\n// Selectors\n\n// Filter dashboards by name\nexport const sFilterDashboardsByName = (dashboards, filter) =>\n    dashboards.filter(d =>\n        d.displayName.toLowerCase().includes(filter.toLowerCase())\n    );\n\n// Filter dashboards by owner, TODO FIXME\nexport const sFilterDashboardsByOwner = (dashboards, filter) => {\n    const ME = ownerData[1]; // TODO\n    const OTHERS = ownerData[2]; // TODO\n\n    switch (filter) {\n        case ME:\n            return dashboards.filter(d => d.owner === USER);\n        case OTHERS:\n            return dashboards.filter(d => d.owner !== USER);\n        default:\n            return dashboards;\n    }\n};\n\n// Filter dashboards by order\nexport const sFilterDashboardsByOrder = (dashboards, filter) => {\n    const filterValues = filter.split(':');\n\n    const key = filterValues[0];\n    const direction = filterValues[1];\n\n    return arraySort(dashboards, direction, mapConstToData[key]);\n};\n\n// Selectors dependency level 2\n\n// Get filtered dashboards\nexport const sGetFilteredDashboards = state => {\n    const dashboards = sGetDashboardsRoot(state);\n\n    const nameFilter = sGetFilterName(state);\n    const ownerFilter = sGetFilterOwner(state);\n    const orderFilter = sGetFilterOrder(state);\n\n    return sFilterDashboardsByOrder(\n        sFilterDashboardsByName(\n            sFilterDashboardsByOwner(dashboards, ownerFilter),\n            nameFilter\n        ),\n        orderFilter\n    );\n};\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport reducer from './reducers';\n\nconst configureStore = () => {\n    const middleware = [thunk];\n\n    // Enable Redux devtools if extension is installed instead of redux-logger\n    const composeEnhancers =\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n    if (\n        !window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ &&\n        process.env.NODE_ENV !== 'production'\n    ) {\n        middleware.push(createLogger());\n    }\n\n    return createStore(\n        reducer,\n        composeEnhancers(applyMiddleware(...middleware))\n    );\n};\n\nexport default configureStore;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport { init as d2Init, config, getManifest, getUserSettings } from 'd2';\nimport dhis2theme from '@dhis2/d2-ui-core/theme/mui3.theme';\n\nimport { Provider as RuntimeProvider } from '@dhis2/app-runtime';\nimport { CssReset } from '@dhis2/ui-core';\n\nimport App from './components/App';\nimport './index.css';\nimport i18n from './locales';\nimport configureStore from './configureStore';\n\nconst muiTheme = () => createMuiTheme(dhis2theme);\n\nconst configI18n = userSettings => {\n    const uiLocale = userSettings.keyUiLocale;\n\n    if (uiLocale && uiLocale !== 'en') {\n        config.i18n.sources.add(`./i18n/i18n_module_${uiLocale}.properties`);\n    }\n\n    config.i18n.sources.add('./i18n/i18n_module_en.properties');\n    i18n.changeLanguage(uiLocale);\n};\n\nconst init = async () => {\n    const manifest = await getManifest('./manifest.webapp');\n\n    // log app info\n    console.info(\n        `Dashboards app, v${manifest.version}, ${\n            manifest.manifest_generated_at\n        }`\n    );\n\n    const isProd = process.env.NODE_ENV === 'production';\n\n    if (\n        !isProd &&\n        (!process.env.REACT_APP_DHIS2_BASE_URL ||\n            !process.env.REACT_APP_DHIS2_AUTHORIZATION)\n    ) {\n        throw new Error(\n            'Missing env variables REACT_APP_DHIS2_BASE_URL and REACT_APP_DHIS2_AUTHORIZATION'\n        );\n    }\n\n    // api config\n    const baseUrl = isProd\n        ? manifest.activities.dhis.href\n        : process.env.REACT_APP_DHIS2_BASE_URL;\n    const authorization = process.env.REACT_APP_DHIS2_AUTHORIZATION;\n\n    config.baseUrl = `${baseUrl}/api/${manifest.dhis2.apiVersion}`;\n    config.headers = isProd ? null : { Authorization: authorization };\n    config.schemas = [\n        'chart',\n        'map',\n        'report',\n        'reportTable',\n        'eventChart',\n        'eventReport',\n        'dashboard',\n        'organisationUnit',\n        'userGroup',\n    ];\n\n    getUserSettings()\n        .then(configI18n)\n        .then(() => d2Init(config))\n        .then(initializedD2 => {\n            ReactDOM.render(\n                <RuntimeProvider\n                    config={{\n                        baseUrl: baseUrl,\n                        apiVersion: manifest.dhis2.apiVersion,\n                    }}\n                >\n                    <CssReset />\n                    <Provider store={configureStore()}>\n                        <MuiThemeProvider theme={muiTheme()}>\n                            <App baseUrl={baseUrl} d2={initializedD2} />\n                        </MuiThemeProvider>\n                    </Provider>\n                </RuntimeProvider>,\n                document.getElementById('root')\n            );\n        });\n};\n\ninit();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"leftControls\":\"DashboardsBar_leftControls__2kr14\",\"rightControls\":\"DashboardsBar_rightControls__2l1lT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuItem\":\"ContentMenuItem_menuItem__2DIcB\",\"launchLink\":\"ContentMenuItem_launchLink__MRANR\",\"label\":\"ContentMenuItem_label__2pIfq\",\"buttonInsert\":\"ContentMenuItem_buttonInsert__1GlZy\"};","import isObject from 'lodash/isObject';\n\n// validation\nexport function orNull(param) {\n    return param === undefined ? null : param;\n}\n\nexport function orArray(param) {\n    return Array.isArray(param) ? param : [];\n}\n\nexport function orObject(param) {\n    return isObject(param) ? param : {};\n}\n\n// array\nexport function arrayGetById(array, id) {\n    return array.find(item => item.id === id);\n}\n\n// object\nexport function arrayToIdMap(array) {\n    return array.reduce((obj, item) => {\n        obj[item.id] = item;\n        return obj;\n    }, {});\n}\n\n// date\nexport function getDate() {\n    const y = Math.floor(Math.random() * 3) + 2015;\n    const M = Math.floor(Math.random() * 12) + 1;\n    const d = Math.floor(Math.random() * 28) + 1;\n    // const h = Math.floor(Math.random() * 23) + 1;\n    // const m = Math.floor(Math.random() * 59) + 1;\n    // const s = Math.floor(Math.random() * 59) + 1;\n\n    return new Date(`${y}-${M}-${d}`)\n        .toJSON()\n        .replace('T', ' ')\n        .substr(0, 10);\n}\n\nexport const formatDate = (value, uiLocale) => {\n    if (typeof global.Intl !== 'undefined' && Intl.DateTimeFormat) {\n        const locale = uiLocale || 'en';\n        return new Intl.DateTimeFormat(locale, {\n            year: 'numeric',\n            month: 'short',\n            day: 'numeric',\n        }).format(new Date(value));\n    }\n\n    return value.substr(0, 19).replace('T', ' ');\n};\n\n/**\n * Sorts an array of objects based on provided date property\n *\n * @param {Array} items Array of objects\n * @param {String} dateProp Name of the date property to be used for sorting\n * @param {Boolean} ascending Whether to sort ascending or descending\n */\nexport const sortByDate = (items, dateProp, ascending = true) => {\n    const values = Object.values(items);\n\n    values.sort((a, b) => {\n        const aDate = new Date(a[dateProp]);\n        const bDate = new Date(b[dateProp]);\n\n        return ascending ? aDate - bDate : bDate - aDate;\n    });\n\n    return values;\n};\n\n// reducer validator\nexport const validateReducer = (value, defaultValue) =>\n    value === undefined || value === null ? defaultValue : value;\n\nexport const getBaseUrl = d2 => {\n    const api = d2.Api.getApi();\n    const idx = api.baseUrl.indexOf('/api');\n    return idx > -1 ? api.baseUrl.slice(0, idx) : api.baseUrl;\n};\n\nexport const getWithoutId = object => ({\n    ...object,\n    id: undefined,\n});\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ControlBar_root__3LaTt\",\"content\":\"ControlBar_content__1r98-\",\"draghandle\":\"ControlBar_draghandle__1VWa0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ClearButton_button__2yjcV\",\"icon\":\"ClearButton_icon__1fqj8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"showMoreButton\":\"CategorizedMenuGroup_showMoreButton__3-0Wa\"};"],"sourceRoot":""}
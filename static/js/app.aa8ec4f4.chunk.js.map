{"version":3,"sources":["D2App/components/ControlBar/styles/ControlBar.module.css","D2App/components/ControlBar/styles/DashboardItemChip.module.css","D2App/components/ControlBar/styles/ClearButton.module.css","D2App/components/ControlBar/styles/ShowMoreButton.module.css","D2App/components/ItemSelector/styles/ContentMenuItem.module.css","D2App/components/ItemSelector/styles/CategorizedMenuGroup.module.css","D2App/components/TitleBar/styles/EditTitleBar.module.css","D2App/components/TitleBar/styles/ViewTitleBar.module.css","D2App/components/Item/VisualizationItem/styles/FatalErrorBoundary.module.css","D2App/components/Item/ItemHeader/styles/DeleteItemButton.module.css","D2App/components/Item/ItemHeader/styles/PrintItemInfo.module.css","D2App/components/Item/VisualizationItem/styles/LoadingMask.module.css","D2App/components/Item/VisualizationItem/styles/Item.module.css","D2App/components/Item/ListItem/Item.module.css","D2App/components/Item/PrintTitlePageItem/styles/Item.module.css","D2App/components/FilterBar/styles/FilterBar.module.css","D2App/components/ControlBar/styles/ConfirmDeleteDialog.module.css","D2App/components/Dashboard/styles/PrintInfo.module.css","D2App/components/Dashboard/styles/PrintActionsBar.module.css","D2App/components/Dashboard/styles/PrintLayoutDashboard.module.css","D2App/components/Dashboard/styles/PrintDashboard.module.css","D2App/components/Dashboard/dashboardModes.js","D2App/reducers/user.js","D2App/modules/uiBackendItemConverter.js","D2App/reducers/dashboards.js","D2App/reducers/selected.js","D2App/reducers/dimensions.js","D2App/reducers/itemFilters.js","D2App/actions/itemFilters.js","D2App/reducers/messages.js","D2App/api/messages.js","D2App/components/Item/MessagesItem/actions.js","D2App/reducers/snackbar.js","D2App/actions/snackbar.js","D2App/reducers/visualizations.js","D2App/actions/visualizations.js","D2App/api/index.js","D2App/api/dashboards.js","D2App/api/userDataStore.js","D2App/components/SnackbarMessage/SnackbarMessage.js","D2App/actions/selected.js","D2App/api/localStorage.js","D2App/api/description.js","D2App/actions/dashboards.js","D2App/reducers/controlBar.js","D2App/actions/controlBar.js","D2App/api/controlBar.js","D2App/reducers/settings.js","D2App/actions/dimensions.js","D2App/components/ControlBar/ControlBar.js","D2App/icons/Star.js","D2App/components/ControlBar/DashboardItemChip.js","D2App/api/dataStatistics.js","D2App/icons/AddCircle.js","D2App/icons/Clear.js","D2App/components/ControlBar/ClearButton.js","D2App/reducers/dashboardsFilter.js","D2App/components/ControlBar/Filter.js","D2App/components/ControlBar/ShowMoreButton.js","D2App/components/ControlBar/controlBarDimensions.js","D2App/components/ControlBar/DashboardsBar.js","D2App/actions/dashboardsFilter.js","D2App/components/Dashboard/DashboardVerticalOffset.js","D2App/widgets/NoContentMessage.js","D2App/components/ItemSelector/HeaderMenuItem.js","D2App/icons/Launch.js","D2App/components/ItemSelector/ContentMenuItem.js","D2App/reducers/editDashboard.js","D2App/api/editDashboard.js","D2App/actions/editDashboard.js","D2App/components/ItemSelector/selectableItems.js","D2App/components/ItemSelector/CategorizedMenuGroup.js","D2App/components/ItemSelector/actions.js","D2App/components/ItemSelector/SinglesMenuGroup.js","D2App/components/ItemSelector/ItemSelector.js","D2App/components/TitleBar/EditTitleBar.js","D2App/components/Item/VisualizationItem/assets/icons.js","D2App/components/ItemFilter/FilterDialog.js","D2App/reducers/activeModalDimension.js","D2App/actions/activeModalDimension.js","D2App/components/ItemFilter/FilterSelector.js","D2App/components/TitleBar/ViewTitleBar.js","D2App/components/TitleBar/TitleBar.js","D2App/components/Item/VisualizationItem/DefaultPlugin.js","D2App/components/Item/VisualizationItem/FatalErrorBoundary.js","D2App/components/Item/ItemHeader/ViewItemActions.js","D2App/components/Item/ItemHeader/DeleteItemButton.js","D2App/components/Item/ItemHeader/EditItemActions.js","D2App/icons/Info.js","D2App/components/Item/ItemHeader/PrintItemInfo.js","D2App/components/Item/ItemHeader/ItemHeader.js","D2App/components/Item/VisualizationItem/ItemHeaderButtons.js","D2App/components/Item/VisualizationItem/ItemFooter.js","D2App/components/Item/VisualizationItem/LoadingMask.js","D2App/modules/memoizeOne.js","D2App/components/Item/VisualizationItem/Item.js","D2App/widgets/Line.js","D2App/components/Item/MessagesItem/Item.js","D2App/components/Item/NotSupportedItem/Item.js","D2App/icons/Description.js","D2App/icons/Delete.js","D2App/components/Item/ListItem/Item.js","D2App/components/Item/ListItem/actions.js","D2App/reducers/printDashboard.js","D2App/components/Item/TextItem/Item.js","D2App/components/Item/AppItem/Item.js","D2App/components/Item/SpacerItem/Item.js","D2App/components/Item/PageBreakItem/Item.js","D2App/components/Item/PrintTitlePageItem/Item.js","D2App/components/Item/Item.js","D2App/components/Item/ProgressiveLoadingContainer.js","D2App/components/ItemGrid/ItemGrid.js","D2App/components/FilterBar/FilterBadge.js","D2App/components/FilterBar/FilterBar.js","D2App/reducers/windowHeight.js","D2App/actions/printDashboard.js","D2App/components/Dashboard/ViewDashboard.js","D2App/components/ControlBar/ConfirmDeleteDialog.js","D2App/components/ControlBar/EditBar.js","D2App/components/Dashboard/PrintInfo.js","D2App/icons/LessHorizontal.js","D2App/components/Dashboard/PrintActionsBar.js","D2App/modules/printUtils.js","D2App/components/ItemGrid/PrintLayoutItemGrid.js","D2App/components/Dashboard/PrintLayoutDashboard.js","D2App/components/Dashboard/EditDashboard.js","D2App/components/Dashboard/NewDashboard.js","D2App/components/ItemGrid/PrintItemGrid.js","D2App/components/Dashboard/PrintDashboard.js","D2App/actions/windowHeight.js","D2App/components/Dashboard/Dashboard.js","D2App/components/App.js","D2App/actions/user.js","D2App/reducers/style.js","D2App/reducers/index.js","D2App/configureStore.js","D2App/locales/index.js","D2App/AppWrapper.js","D2App/modules/util.js","D2App/modules/itemTypes.js","D2App/components/ItemGrid/gridUtil.js","D2App/components/Item/VisualizationItem/plugin.js","D2App/components/Item/ItemHeader/styles/ItemHeader.module.css","D2App/api/metadata.js","D2App/components/ControlBar/styles/DashboardsBar.module.css"],"names":["module","exports","EDIT","NEW","PRINT","PRINT_LAYOUT","isEditMode","mode","includes","isPrintMode","isViewMode","DEFAULT_STATE_USER","id","username","uiLocale","isSuperuser","sGetUserUsername","state","user","spacerContent","isTextType","item","type","TEXT","text","convertUiItemsToBackend","items","map","SPACER","isUiSpacerType","convertBackendItemsToUi","isBackendSpacerType","gridProperties","getGridItemProperties","DEFAULT_STATE_DASHBOARDS","byId","EMPTY_DASHBOARD","updateDashboardProp","dashboardId","prop","value","sGetDashboardsRoot","dashboards","sGetDashboardById","orObject","sDashboardsIsFetching","sGetAllDashboards","sGetDashboardItems","sGetStarredDashboards","Object","values","filter","dashboard","starred","sGetUnstarredDashboards","getCustomDashboards","data","arrayFrom","d","name","displayName","description","displayDescription","favorite","owner","created","split","join","substr","lastUpdated","access","numberOfItems","orArray","dashboardItems","length","combineReducers","action","validateReducer","isLoading","showDescription","sGetSelectedRoot","selected","sGetSelectedId","sGetSelectedIsLoading","sGetSelectedShowDescription","DEFAULT_DIMENSIONS","getDimensionById","DIMENSION_ID_PERIOD","DIMENSION_ID_ORGUNIT","sGetDimensions","dimensions","DEFAULT_STATE_ITEM_FILTERS","sGetItemFiltersRoot","itemFilters","sGetNamedItemFilters","createSelector","filters","keys","reduce","arr","push","find","dimension","acRemoveItemFilter","sGetMessagesRoot","messages","tGetMessages","async","url","getInstance","then","d2","Api","getApi","get","catch","error","console","log","getMessages","messageConversations","dispatch","err","DEFAULT_STATE_SNACKBAR","message","duration","open","acCloseSnackbar","DEFAULT_STATE_VISUALIZATIONS","isEmpty","p","undefined","sGetVisualization","visualizations","sGetVisualizationsRoot","acAddVisualization","onError","getDashboardItemsFields","withFavorite","arrayClean","getListItemFields","getFavoritesFields","withDimensions","getDashboardFields","withItems","getIdNameFields","rename","apiFetchDashboard","models","fields","hasNamespace","currentUser","dataStore","has","getNamespace","create","apiPostUserDataStoreValue","key","set","apiGetUserDataStoreValue","defaultValue","namespace","k","loadingDashboardMsg","SnackbarMessageContent","style","fontWeight","connect","snackbar","sGetSnackbar","snackbarOpen","snackbarMessage","snackbarDuration","onCloseSnackbar","props","zIndex","autoHideDuration","onClose","acSetSelectedId","acSetSelectedIsLoading","acSetSelectedShowDescription","tSetSelectedDashboardById","getState","snackbarTimeout","setTimeout","dashboardName","onSuccess","acAppendDashboards","customDashboard","acSetDashboardItems","withShape","localStorage","setItem","forEach","REPORT_TABLE","CHART","MAP","EVENT_REPORT","EVENT_CHART","extractFavorite","MESSAGES","clearTimeout","tSetShowDescription","apiGetShowDescription","tUpdateShowDescription","apiPostShowDescription","arrayToIdMap","tFetchDashboards","collection","list","paging","toArray","tStarDashboard","isStarred","post","delete","apiStarDashboard","acSetDashboardStarred","tDeleteDashboard","apiDeleteDashboard","Promise","resolve","userRows","sGetControlBarUserRows","controlBar","sGetControlBarRoot","acSetControlBarUserRows","rows","tSetControlBarRows","controlBarRows","apiGetControlBarRows","DEFAULT_SETTINGS","keyDateFormat","keyAnalysisRelativePeriod","keyAnalysisDigitGroupSeparator","displayNameProperty","rootOrganisationUnit","sGetSettings","settings","sGetSettingsDisplayNameProperty","tSetDimensions","displayNameProp","apiFetchDimensions","acSetDimensions","dim","dimensionType","dataDimensionType","ControlBar","React","Component","constructor","super","onStartDrag","this","setState","dragging","window","addEventListener","onDrag","onEndDrag","event","preventDefault","stopPropagation","newHeight","clientY","onChangeHeight","height","requestAnimationFrame","removeEventListener","renderDragHandle","className","classes","draghandle","onMouseDown","render","Math","max","rootStyle","assign","backgroundColor","editMode","colors","yellow050","white","paddingBottom","transition","root","content","children","defaultProps","StarIcon","xmlns","viewBox","fill","DashboardItemChip","label","chipProps","selectedState","unselected","icon","Star","link","to","onClick","debounce","eventType","apiPostDataStatistics","AddCircleIcon","width","teal600","ClearIcon","grey800","ClearButton","onClear","button","Clear","color","ownerData","DEFAULT_STATE_DASHBOARDS_FILTER_OWNER","order","sGetDashboardsFilterRoot","dashboardsFilter","sGetFilterName","styles","filterField","fontSize","top","searchIcon","grey700","Filter","setFilterValue","onChangeName","target","handleKeyUp","keyCode","onKeypressEnter","componentWillReceiveProps","nextProps","startAdornment","position","endAdornment","placeholder","i18n","t","onChange","onKeyUp","Function","prototype","withStyles","ShowMoreButton","isMaxHeight","disabled","textAlign","showMore","getRowsHeight","getControlBarHeight","FIRST_ROW_PADDING_HEIGHT","DashboardsBar","setInitialDashboardState","adjustedHeight","newRows","floor","newRowCount","min","apiPostControlBarRows","onToggleMaxHeight","onSelectDashboard","history","componentDidMount","selectedId","onChangeFilterName","rowCount","controlBarHeight","contentWrapperStyle","padding","overflowY","leftControls","display","textDecoration","marginRight","AddCircle","mapDispatchToProps","withRouter","stateProps","dispatchProps","ownProps","displayDashboards","arraySort","toLowerCase","marginTop","NoContentMessage","grey600","HeaderMenuItem","title","dense","LaunchIcon","LaunchLink","e","launchLink","rel","href","Launch","InsertButton","buttonInsert","ContentMenuItem","onInsert","visType","ItemIcon","getItemIcon","renderedItemIcon","VISUALIZATION","visTypeIcons","menuItem","DEFAULT_STATE_EDIT_DASHBOARD","NEW_DASHBOARD_STATE","printPreviewView","sGetEditDashboardRoot","editDashboard","sGetIsEditing","sGetIsPrintPreviewView","sGetEditDashboardItems","saveDashboard","w","h","save","msg","response","uid","acClearEditDashboard","acAddDashboardItem","itemPropName","itemTypeMap","propName","generateUid","gridItemProperties","shape","PAGEBREAK","yPos","getPageBreakItemShape","isStatic","PRINT_TITLE_PAGE","getPrintTitlePageItemShape","NEW_ITEM_SHAPE","acUpdateDashboardItem","acRemoveDashboardItem","tSaveDashboard","dashboardToSave","postDashboard","singleItems","header","categorizedItems","USERS","REPORTS","RESOURCES","APP","listItemTypes","CategorizedMenuGroup","addItem","tAddListItemContent","newItem","toggleSeeMore","seeMore","onChangeItemsLimit","hasMore","itemUrl","getItemUrl","context","showMoreButton","margin","contextTypes","PropTypes","object","isRequired","listItemType","dashboardItemIndex","findIndex","dashboardItem","category","addToDashboard","ItemSearchField","onFocus","ItemSelector","closeList","openList","_","fetchItems","anchorEl","currentTarget","updateDebouncedFilterText","debouncedFilter","setFilter","getCategorizedMenuGroups","itemType","endPointName","itemCount","getDefaultItemCount","allItems","maxOptions","slice","pluralTitle","getSinglesMenuGroups","getMenuGroups","concat","add","Set","queryString","anchorOrigin","horizontal","vertical","transformOrigin","PaperProps","disableAutoFocus","disableEnforceFocus","disableRestoreFocus","maxWidth","EditTitleBar","onChangeTitle","onChangeDescription","section","titleDescription","itemSelector","selectedDashboard","ThreeDots","SpeechBubble","fillRule","transform","Warning","FilterDialog","initiallySelectedItems","addItemFilter","removeItemFilter","setFilters","useState","onSelectItems","dimensionId","onDeselectItems","itemIdsToRemove","newList","onReorderItems","itemIds","oldList","reorderedList","large","commonProps","onSelect","onDeselect","onReorder","selectedItems","selectedPeriods","ouItems","renderDialogContent","secondary","primary","filterItems","DEFAULT_STATE_ACTIVE_MODAL_DIMENSION","sGetActiveModalDimension","activeModalDimension","acSetActiveModalDimension","clearActiveModalDimension","setActiveModalDimension","showPopover","setShowPopover","ref","useRef","onCloseDialog","onClickOutside","reference","arrow","placement","onDimensionClick","selectedIds","ViewTitleBar","moreOptionsIsOpen","setMoreOptionsIsOpen","sharingDialogIsOpen","setSharingDialogIsOpen","redirectUrl","setRedirectUrl","onToggleStarredDashboard","onShowHideDescription","toggleSharingDialog","toggleMoreOptions","titleStyle","cursor","userSelect","StarBorder","showHideDescriptionLabel","toggleStarredDashboardLabel","buttonRef","createRef","userAccess","titleBar","actions","titleBarIcon","strip","update","editLink","manage","marginLeft","paddingTop","onRequestClose","black","minWidth","TitleBar","edit","DefaultPlugin","pluginCredentials","shouldPluginReload","prevProps","reloadAllowed","filtersChanged","vis","visualization","prevVis","visChanged","activeType","reloadPlugin","pluginManager","currentVis","useActiveType","credentials","getActiveType","baseUrl","getBaseUrl","auth","defaultHeaders","Authorization","options","componentDidUpdate","componentWillUnmount","getGridItemDomId","textDiv","FatalErrorBoundary","errorFound","componentDidCatch","info","container","ViewItemActions","actionButtons","itemActionsWrap","DeleteItemButton","deleteItemButton","red500","itemId","WarningIcon","PrintWarning","warning","Info","ItemHeader","forwardRef","dashboardMode","isShortened","rest","Actions","EditItemActions","PrintItemInfo","getItemActionsMap","itemHeaderWrap","itemTitle","iconFill","ItemHeaderButtons","setAnchorEl","onSelectActiveType","isTrackerType","isTrackerDomainType","onViewTable","handleClose","onViewChart","onViewMap","canViewAs","isSingleValue","isYearOverYear","VIS_TYPE_GAUGE","VIS_TYPE_PIE","interpretationMenuLabel","activeFooter","ViewAsMenuItems","hasMapView","pluginIsAvailable","small","Boolean","appName","getAppName","getLink","onToggleFooter","scrollContainer","line","border","grey100","ItemFooter","objectId","getId","LoadingMask","center","memoizeOne","fn","lastArgs","lastValue","args","every","arg","i","Item","showFooter","configLoaded","pluginIsLoaded","applyFilters","visRows","obj","visColumns","columns","visFilters","dimensionFound","dimensionObjects","getUniqueKey","uniqueId","getPluginComponent","memoizedGetVisualizationConfig","calculatedHeight","originalHeight","headerRef","current","clientHeight","ITEM_CONTENT_PADDING_BOTTOM","memoizedGetContentStyle","contentRef","offsetHeight","memoizedApplyFilters","onLoadingComplete","forDashboard","mapViews","layer","hideTitle","onToggleItemExpanded","getContentStyle","measuredHeight","preferMeasured","onVisualizationLoaded","prevState","shortened","acSetActiveVisualizationType","grey200","Line","messageTypes","VALIDATION_RESULT","TICKET","SYSTEM","listStyleType","paddingLeft","seeAll","marginBottom","sender","lineHeight","snippet","maxHeight","overflow","MessagesItem","getMessageHref","msgIdentifier","messageType","getMessageSender","latestMsg","getMessageItems","modeClass","readClass","read","msgDate","document","location","messageCount","formatDate","userSettings","string","MessagesContainer","NotSupportedItem","justifyContent","alignItems","align","DescriptionIcon","grey500","DeleteIcon","getItemTitle","ListItem","tRemoveListItemContent","contentItems","index","array","el","getContentItems","contentItem","Description","itemicon","deleteButton","deletebutton","deleteicon","grey900","newContent","DEFAULT_STATE_PRINT_DASHBOARD","DEFAULT_DASHBOARD_ITEMS","NEW_PRINT_DASHBOARD_STATE","sGetPrintDashboardRoot","printDashboard","sGetIsPrinting","sGetPrintDashboardItems","whiteSpace","textField","fontStretch","onChangeText","updatedItem","viewItem","textDivStyle","editItem","onEdit","multiline","fullWidth","printItem","textItem","getIframeSrc","appDetails","iframeSrc","launchUrl","ouIds","ouFilter","path","AppItem","appKey","system","installedApps","app","src","SpacerItem","PageBreakItem","PrintTitlePageItem","titlePage","filterTitle","listItems","filterListItem","val","filterList","getItemFilterList","viewDashboard","sGetPrintDashboardName","sGetPrintDashboardDescription","GridItem","VisualizationItem","TextItem","getGridItem","ProgressiveLoadingContainer","shouldLoad","containerRef","shouldLoadHandler","handlerOptions","passive","checkShouldLoad","bufferPx","bufferFactor","innerHeight","rect","getBoundingClientRect","bottom","removeHandler","registerHandler","debounceMs","getElementsByClassName","eventProps","pick","ItemGrid","expandedItems","clickedId","isExpanded","onLayoutChange","newLayout","acUpdateDashboardLayout","onResizeStop","layout","oldItem","onItemResize","isVisualizationType","pluginResize","adjustHeightForExpanded","expandedItem","getItemComponent","itemClassNames","getItemComponents","translucent","MARGIN","cols","getGridColumns","rowHeight","GRID_ROW_HEIGHT","innerWidth","compactType","GRID_COMPACT_TYPE","isDraggable","isResizable","draggableCancel","validItems","hasShape","badgeContainer","borderRadius","badge","badgeRemove","FilterBadge","onRemove","count","FilterBar","onBadgeRemove","onBadgeClick","bar","removeItemFIlter","DEFAULT_STATE_WINDOW_HEIGHT","sGetWindowHeight","windowHeight","acSetPrintDashboard","acClearPrintDashboard","acAddPrintDashboardItem","isOneItemPerPage","acUpdatePrintDashboardItem","dashboardIsEditing","dashboardIsPrinting","clearEditDashboard","clearPrintDashboard","useEffect","querySelector","scroll","ConfirmDeleteDialog","onDeleteConfirmed","onContinueEditing","destructive","buttonBarStyle","EditBar","translationDialogIsOpen","dashboardModel","confirmDeleteDialogOpen","onConfirmDelete","onSave","newId","onPrintPreview","isPrintPreviewView","clearPrintPreview","showPrintPreview","onDiscard","onDiscardChanges","onDelete","onTranslationsSaved","translations","dbLocale","translation","locale","property","onTranslate","fetchDashboardModel","toggleTranslationDialog","confirmDeleteDialog","deleteAccess","translationDialog","objectToTranslate","fieldsToTranslate","onTranslationSaved","onTranslationError","renderActionButtons","printPreviewText","updateAccess","discardBtnText","rightControls","topMargin","sGetIsNewDashboard","acSetDashboardDisplayName","PrintInfo","isLayout","a4LandscapeWidthPx","infoHeader","infoWrapper","infoList","divider","LessHorizontalIcon","PrintActionsBar","inner","LessHorizontal","print","getTransformYPx","elStyle","transformY","match","parseInt","PrintLayoutItemGrid","updateDashboardLayout","isFirstPageBreak","pageBreaks","sortedPageBreaks","sortBy","y","cx","isEditing","hideExtraPageBreaks","sortedElements","elements","types","elementsWithBoundingRect","Array","from","classList","indexOf","bottomY","getDomGridItemsSortedByYPos","querySelectorAll","pageBreakBottom","lastItemBottom","foundNonPageBreak","thisItemBottom","gridElement","firstBreak","scrollArea","EDIT_BAR_HEIGHT","isLeapPage","n","x","getMultiple","factor","multiple","PrintLayoutDashboard","initialized","initPrintLayoutDashboard","setPrintDashboard","MAX_ITEM_GRID_HEIGHT","updateDashboardItem","addDashboardItem","yPosList","pageNum","addPageBreaks","getWrapperStyle","fromEdit","spacers","dp24","wrapper","pageOuter","EditDashboard","initEditDashboard","setEditDashboard","renderGrid","NewDashboard","setNewDashboard","PrintItemGrid","PrintDashboard","initPrintDashboard","sortedItems","spacerCount","removeDashboardItem","MAX_ITEM_GRID_WIDTH_OIPP","MAX_ITEM_GRID_HEIGHT_OIPP","dashboardMap","dashboardsIsEmpty","dashboardsLoaded","routeId","params","selectDashboard","dashboardToSelect","preferredId","getItem","dash","sGetDashboardsSortedByStarred","setWindowHeight","getElementsByTagName","remove","setHeaderbarVisibility","onResize","App","setCurrentUser","fetchDashboards","setControlBarRows","setShowDescription","setDimensions","getChildContext","exact","childContextTypes","objectClean","conversations","$merge","d2Object","keyUiLocale","authorities","newState","$splice","$unshift","idToRemove","stateItems","layoutHasChanged","newStateItems","stateItem","si","configureStore","middleware","thunk","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducer","applyMiddleware","addResources","arTranslations","ar_IQTranslations","ckbTranslations","csTranslations","daTranslations","enTranslations","esTranslations","frTranslations","idTranslations","kmTranslations","loTranslations","myTranslations","nbTranslations","prsTranslations","psTranslations","ptTranslations","pt_BRTranslations","ruTranslations","svTranslations","tetTranslations","tgTranslations","ukTranslations","urTranslations","uzTranslations","uz_LatnTranslations","viTranslations","zhTranslations","zh_CNTranslations","d2Config","schemas","authorization","process","REACT_APP_DHIS2_AUTHORIZATION","headers","AppWrapper","store","theme","createMuiTheme","dhis2theme","i18nRoot","param","isArray","isObject","global","Intl","DateTimeFormat","year","month","day","format","Date","replace","api","idx","getWithoutId","domainType","defaultItemCount","appUrl","getTime","getEndPointName","TableIcon","ChartIcon","MapIcon","ExtensionIcon","PersonIcon","FontDownloadIcon","EmailIcon","CropFreeIcon","NotInterestedIcon","isNonNegativeInteger","Number","isInteger","minH","GRID_COLUMNS","static","itemWithShape","Error","col","row","itemWidth","MAX_ITEM_GRID_WIDTH","itemHeight","getShape","round","getOriginalHeight","isFunction","setViewportSize","clientWidth","itemTypeToExternalPlugin","getPlugin","hasIntegratedPlugin","reportTable","chart","eventReport","eventChart","getName","load","config","plugin","loadingIndicator","loadPlugin","fetch","apiFetchFavorite","getMapFields","resize","unmount","getVisualizationConfig","originalType","extractedMapView","mv","VIS_TYPE_COLUMN","VIS_TYPE_PIVOT_TABLE","AXIS_ID_COLUMNS","AXIS_ID_ROWS","splice","shift","AXIS_ID_FILTERS","getDimensionFields","getAxesFields","getFavoriteFields","withOptions"],"mappings":"kHACAA,EAAOC,QAAU,CAAC,KAAO,yBAAyB,QAAU,4BAA4B,WAAa,iC,qBCArGD,EAAOC,QAAU,CAAC,KAAO,gCAAgC,KAAO,gCAAgC,SAAW,oCAAoC,WAAa,wC,qBCA5JD,EAAOC,QAAU,CAAC,OAAS,4BAA4B,KAAO,4B,qBCA9DD,EAAOC,QAAU,CAAC,SAAW,iCAAiC,SAAW,mC,qBCAzED,EAAOC,QAAU,CAAC,SAAW,kCAAkC,WAAa,oCAAoC,MAAQ,+BAA+B,aAAe,wC,qBCAtKD,EAAOC,QAAU,CAAC,eAAiB,+C,4CCAnCD,EAAOC,QAAU,CAAC,QAAU,8BAA8B,iBAAmB,uCAAuC,MAAQ,4BAA4B,YAAc,kCAAkC,aAAe,qC,qBCAvND,EAAOC,QAAU,CAAC,QAAU,8BAA8B,SAAW,+BAA+B,SAAW,+BAA+B,aAAe,mCAAmC,MAAQ,4BAA4B,SAAW,iC,4CCA/OD,EAAOC,QAAU,CAAC,UAAY,sCAAsC,KAAO,iCAAiC,QAAU,sC,qBCAtHD,EAAOC,QAAU,CAAC,iBAAmB,6C,qBCArCD,EAAOC,QAAU,CAAC,QAAU,iC,qBCA5BD,EAAOC,QAAU,CAAC,OAAS,8B,qBCA3BD,EAAOC,QAAU,CAAC,QAAU,wB,4CCA5BD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,KAAO,mBAAmB,SAAW,uBAAuB,KAAO,mBAAmB,WAAa,yBAAyB,aAAe,6B,qBCAvLD,EAAOC,QAAU,CAAC,UAAY,wBAAwB,KAAO,mBAAmB,YAAc,0BAA0B,YAAc,0BAA0B,WAAa,yBAAyB,eAAiB,+B,qBCAvND,EAAOC,QAAU,CAAC,IAAM,yB,qBCAxBD,EAAOC,QAAU,CAAC,QAAU,uC,qBCA5BD,EAAOC,QAAU,CAAC,YAAc,+BAA+B,WAAa,8BAA8B,KAAO,wBAAwB,SAAW,4BAA4B,QAAU,6B,qBCA1LD,EAAOC,QAAU,CAAC,UAAY,mCAAmC,UAAY,mCAAmC,MAAQ,+BAA+B,KAAO,gC,qBCA9JD,EAAOC,QAAU,CAAC,QAAU,sCAAsC,UAAY,0C,4CCA9ED,EAAOC,QAAU,CAAC,QAAU,gCAAgC,UAAY,oC,qkuHCDjE,MAAMC,EAAO,OACPC,EAAM,MAENC,EAAQ,QACRC,EAAe,eACfC,EAAaC,GAAQ,CAACL,EAAMC,GAAKK,SAASD,GAC1CE,EAAcF,GAAQ,CAACH,EAAOC,GAAcG,SAASD,GACrDG,EAAaH,GALN,SAKcA,ECNrBI,EAAqB,CAChCC,GAAI,GACJC,SAAU,GACVC,SAAU,GACVC,aAAa,GAwBR,MACMC,EAAmBC,GAASA,EAAMC,KAAKL,S,2EC5B7C,MAAMM,EAAgB,+CAOvBC,EAAaC,GAAQA,EAAKC,OAASC,KAAQF,EAAKG,OAASL,EAElDM,EAA0BC,GAASA,EAAMC,IAAIN,IACxD,IAAIG,EAAO,KAQX,MAbqBH,IAAQA,EAAKC,OAASM,IAOvCC,CAAeR,GACjBG,EAAOL,EACEC,EAAWC,KACpBG,EAAOH,EAAKG,MAdoB,6BAiB3B,2BAAKH,GACNG,EAAO,CACTA,QACE,MAGKM,EAA0BJ,GAASA,EAAMC,IAAIN,IACxD,MAAMC,EAtBoBD,IAAQA,EAAKC,OAASC,KAAQF,EAAKG,OAASL,EAsBzDY,CAAoBV,GAAQO,IAASP,EAAKC,KACjDU,EAAiBC,YAAsBZ,EAAKT,IAC5CY,EAAOJ,EAAWC,GA1BU,8BA0BFA,EAAKG,KAAgC,GAAKH,EAAKG,KAAO,KACtF,OAAO,uCAAKH,GACG,OAATG,EAAgB,CAClBA,QACE,IAHN,IAIEF,QACGU,KCzBME,EAA2B,CACtCC,KAAM,KACNT,MAAO,IAEIU,EAAkB,GAEzBC,EAAsB,EAC1BpB,QACAqB,cACAC,OACAC,YAJ0B,CAM1BL,KAAK,2BAAMlB,EAAMkB,MAAb,IACF,CAACG,GAAD,2BAAoBrB,EAAMkB,KAAKG,IAA/B,IACE,CAACC,GAAOC,MAGZd,MAAOT,EAAMS,QA8DR,MAAMe,EAAqBxB,GAASA,EAAMyB,WAgBpCC,EAAoB,CAAC1B,EAAOL,IAAOgC,YAASH,EAAmBxB,GAAOkB,MAAMvB,GAC5EiC,EAAwB5B,GACO,OAAnCwB,EAAmBxB,GAAOkB,KAUtBW,EAAoB7B,GAAS2B,YAASH,EAAmBxB,GAAOkB,MAShEY,EAAqB9B,GAASwB,EAAmBxB,GAAOS,MAExDsB,EAAwB/B,GAASgC,OAAOC,OAAOJ,EAAkB7B,IAAQkC,OAAOC,IAAmC,IAAtBA,EAAUC,SACvGC,EAA0BrC,GAASgC,OAAOC,OAAOJ,EAAkB7B,IAAQkC,OAAOC,IAAmC,IAAtBA,EAAUC,SAezGE,EAAsBC,GAAQC,IAAUD,GAAM7B,IAAI+B,IAAC,CAC9D9C,GAAI8C,EAAE9C,GACN+C,KAAMD,EAAEC,KACRC,YAAaF,EAAEE,YACfC,YAAaH,EAAEG,YACfC,mBAAoBJ,EAAEI,mBACtBT,QAASK,EAAEK,SACXC,MAAON,EAAExC,KAAKyC,KACdM,QAASP,EAAEO,QAAQC,MAAM,KAAKC,KAAK,KAAKC,OAAO,EAAG,IAClDC,YAAaX,EAAEW,YAAYH,MAAM,KAAKC,KAAK,KAAKC,OAAO,EAAG,IAC1DE,OAAQZ,EAAEY,OACVC,cAAeC,YAAQd,EAAEe,gBAAgBC,OACzCD,eAAgB3C,EAAwB4B,EAAEe,mB,aC7G7BE,kBAAgB,CAC7B/D,GA/BS,CAACK,EAX6B,KAWM2D,KAC7C,OAAQA,EAAOtD,MACb,IAhB2B,kBAiBzB,OAAOuD,YAAgBD,EAAOpC,MAdK,MAgBrC,QACE,OAAOvB,IA0BX6D,UAtBgB,CAAC7D,GApB6B,EAoBa2D,KAC3D,OAAQA,EAAOtD,MACb,IAzBkC,yBA0BhC,OAAOuD,YAAgBD,EAAOpC,OAvBY,GAyB5C,QACE,OAAOvB,IAiBX8D,gBAbsB,CAAC9D,GA7B6B,EA6BmB2D,KACvE,OAAQA,EAAOtD,MACb,IAlCwC,+BAmCtC,OAAOuD,YAAgBD,EAAOpC,OAhCkB,GAkClD,QACE,OAAOvB,MAUN,MAAM+D,EAAmB/D,GAASA,EAAMgE,SAClCC,EAAiBjE,GAAS+D,EAAiB/D,GAAOL,GAClDuE,EAAwBlE,GAAS+D,EAAiB/D,GAAO6D,UACzDM,GAA8BnE,GAAS+D,EAAiB/D,GAAO8D,gB,cCvDrE,MACMM,GAAqB,CAACC,aAAiBC,MAAsBD,aAAiBE,OAYpF,MAAMC,GAAiBxE,GAASA,EAAMyE,W,eCZtC,MAIMC,GAA6B,GAiCnC,MAAMC,GAAsB3E,GAASA,EAAM4E,YAGrCC,GAAuBC,aAAe,CAACH,GAAqBH,IAAiB,CAACO,EAASN,IAAezC,OAAOgD,KAAKD,GAASE,OAAO,CAACC,EAAKvF,KACnJuF,EAAIC,KAAK,CACPxF,GAAIA,EACJ+C,KAAM+B,EAAWW,KAAKC,GAAaA,EAAU1F,KAAOA,GAAI+C,KACxDT,OAAQ8C,EAAQpF,GAAIe,IAAIa,IAAK,CAC3B5B,GAAI4B,EAAM5B,GACV+C,KAAMnB,EAAMoB,aAAepB,EAAMmB,UAG9BwC,GACN,KC7CUI,GAAqB3F,IAAE,CAClCU,KDHgC,qBCIhCV,O,yBCUK,MAAM4F,GAAmBvF,GAASA,EAAMwF,S,cClBxC,MCWMC,GAAe,IAAMC,UAChC,IACE,MAAMF,ODbiB,MACzB,MACMG,EAAG,uCADM,qHACN,gCACT,OAAOC,yBAAcC,KAAKC,GAAMA,EAAGC,IAAIC,SAASC,IAAIN,IAAMO,MAAMC,GAASC,QAAQC,IAAI,SAAUF,KCUtEG,IACjB,qBACJC,GACEf,EACJ,OAAOgB,EAV0B,CACnCnG,KFP+B,oBEQ/BkB,MAQmCgF,IACjC,MAAOE,GACP,OAjBa9C,EAiBE,eAjBMwC,EAiBUM,EAhBjCL,QAAQC,IAAR,0BAA+B1C,EAA/B,aAA0CwC,IACnCA,EAFO,IAACxC,EAAQwC,GCDZO,GAAyB,CACpCC,QAAS,GACTC,SAAU,KACVC,MAAM,GAqBD,MCrBMC,GAAkB,MAC7BzG,KDL4B,mB,yBEGvB,MAEM0G,GAA+B,GAEtCC,GAAUC,QAAWC,IAAND,GAAyB,OAANA,EA2BjC,MAEME,GAAoB,CAACnH,EAAOL,IAFHK,IAASA,EAAMoH,eAG5CC,CAAuBrH,GAAOL,GCrC1B2H,GAAqB/F,IAAK,CACrClB,KDE+B,oBCD/BkB,U,mCCAK,MAAMgG,GAAUpB,GAASC,QAAQC,IAAI,UAAWF,GAE1CqB,GAA0B,EACrCC,gBACE,KAAOC,KAAW,CAAC,KAAM,OAAQ,QAAS,IAAK,IAAK,kBAAmB,mBAAoB,WAAY,OAAQ,SAA7F,UAA0GC,eAAoBzE,KAAK,MAAQuE,EAAY,UAAMG,aAAmB,CACpMC,eAAgBJ,EAAaI,iBAC5B3E,KAAK,MAFqK,KAIhK4E,GAAqB,EAChCC,YACAN,gBACE,KAAOC,KAAW,CAAC,GAAD,OAAIM,eAAkB9E,KAAK,MAAQ,cAAe,qBAAsB,WAAxE,eAA4F8E,aAAgB,CAChIC,QAAQ,IACP/E,KAAK,KAFc,KAEL,UAAW,cAAe,SAAU6E,EAAS,yBAAqBP,GAAwB,CACzGC,iBACCvE,KAAK,KAFsD,UCPjDgF,GAAoBvI,GAAMiG,yBAAcC,KAAKC,GAAMA,EAAGqC,OAAOhG,UAAU8D,IAAItG,EAAI,CAC1FyI,OAAQV,KAAWI,GAAmB,CACpCC,WAAW,EACXN,aAAc,CACZI,gBAAgB,MAEhB3E,KAAK,QACPgD,MAAMqB,ICdGc,GAAe3C,eAAoBI,EAAGwC,YAAYC,UAAUC,IADhD,aAEZC,GAAe/C,MAAOI,EAAIuC,IAAiBA,QAAqBvC,EAAGwC,YAAYC,UAAUtC,IAF7E,mBAEoGH,EAAGwC,YAAYC,UAAUG,OAF7H,aAGZC,GAA4BjD,MAAOkD,EAAKrH,KACnD,MAAMuE,QAAWF,gCACA6C,GAAa3C,EAAIuC,KAC/BQ,IAAID,EAAKrH,IAEDuH,GAA2BpD,MAAOkD,EAAKG,KAAkB,IAAD,EACnE,MAAMjD,QAAWF,yBACXoD,QAAkBP,GAAa3C,QAAUuC,GAAavC,IAG5D,OAFY,OAAGkD,QAAH,IAAGA,GAAH,UAAGA,EAAWhE,YAAd,aAAG,EAAiBI,KAAK6D,GAAKA,IAAML,UAGjCI,EAAU/C,IAAI2C,UAErBD,GAA0BC,EAAKG,GACrC3C,QAAQC,IAAI,mDACL0C,I,yBCbX,MACaG,GAAsB,CACjCxG,KAAM,GACNrC,KAHwB,qBAMpB8I,GAAyB,EAC7BxC,aAEuB,kBAAZA,EAEF,yCACa,0BAAMyC,MAAO,CAC7BC,WAAY,MACV1C,EAAQjE,MAAa,IAHpB,aAQFiE,EA4BM2C,mBAnBStJ,IACtB,MAAM,QACJ2G,EADI,SAEJC,EAFI,KAGJC,GPZwB7G,IAASA,EAAMuJ,UAAY7C,GOajD8C,CAAaxJ,GACjB,MAAO,CACLyJ,aAAc5C,EACd6C,gBAAiB/C,EACjBgD,iBAAkB/C,IAUkB,CACtCgD,gBAAiB9C,IADJwC,CAzBgBO,GACtB,kBAAC,KAAD,CAAUT,MAAO,CACtBU,OAAQ,OACPjD,KAAMgD,EAAMJ,aAAc9C,QAAS,kBAACwC,GAAD,CAAwBxC,QAASkD,EAAMH,kBAAqBK,iBAAkBF,EAAMF,iBAAkBK,QAASH,EAAMD,mB,UCftJ,MAAMK,GAAkB1I,IAAK,CAClClB,Kfd6B,kBee7BkB,UAEW2I,GAAyB3I,IAAK,CACzClB,KfjBoC,yBekBpCkB,UAEW4I,GAA+B5I,IAAK,CAC/ClB,KfpB0C,+BeqB1CkB,UAGW6I,GAA4BzK,GAAM+F,MAAOc,EAAU6D,KAC9D7D,EAAS0D,IAAuB,IAChC,MAAMI,EAAkBC,WAAW,KACjC,MAAMC,GAAiB9I,EAAkB2I,IAAY1K,IAAOwB,GAAiBwB,YAEzEuB,EAAsBmG,MAAeG,IACvCtB,GAAoBxG,KAAO8H,EAC3BhE,EPnCwC,CAC5CnG,KDFuC,4BCGvCkB,MOiCuC,CACjCoF,QAASuC,GACTrC,MAAM,OAGT,KAEG4D,EAAYzG,IAChBwC,EAASkE,GAAmB1G,IAC5B,MAAM2G,EAAkBrI,EAAoB0B,GAAU,GC5CjB,IAACpE,EAAUyB,ED0EhD,OA7BAmF,EAASoE,GAAoBC,YAAUF,EAAgBnH,kBC7CjB5D,ED8CZG,EAAiBsK,KC9CKhJ,ED8CQ1B,EC7C1DmL,aAAaC,QAAb,kCAAgDnL,GAAYyB,GD8C1DsJ,EAAgBnH,eAAewH,QAAQ5K,IACrC,OAAQA,EAAKC,MACX,KAAK4K,IACL,KAAKC,IACL,KAAKC,IACL,KAAKC,IACL,KAAKC,IACH7E,EAASc,GAAmBgE,aAAgBlL,KAC5C,MAEF,KAAKmL,IACH/E,EAASf,SAQX9F,IAAOsE,EAAeoG,MACxB7D,EZzD4B,CAChCnG,KDVgC,uBaqE9BmG,EAASyD,GAAgBtK,IACzB6G,EAAS0D,IAAuB,IAChCsB,aAAalB,GACb9D,EPrE2B,CAC7BnG,KDL4B,mBQ0EnB2D,GAQT,IAEE,OAAOyG,QADiBvC,GAAkBvI,IAE1C,MAAO8G,GACP,OATcN,EASCM,EARfL,QAAQC,IAAI,UAAWF,GAChBA,EAFOA,OAYLsF,GAAsB,IAAM/F,UAUvC,IACE,MAAM5B,OElG2B4B,gBAAkBoD,GAD1B,mBjBMyB,Ge6FpB4C,GAC9B,YAVAlF,EAAS2D,GAUQrG,IACjB,MAAO2C,GACP,OATcN,EASCM,EARfL,QAAQC,IAAI,kCAAmCF,GACxCA,EAFOA,OAYLwF,GAAyBpK,GAASmE,UAU7C,IAEE,YEnHkCA,gBAAuBiD,GAFhC,kBAEgFpH,GFkHnGqK,CAAuBrK,QAT7BiF,EAAS2D,GAA6B5I,IAWtC,MAAOkF,GACP,OATcN,EASCM,EARfL,QAAQC,IAAI,kCAAmCF,GACxCA,EAFOA,OGnGLuE,GAAqBjJ,IAAU,CAC1CpB,KnBR4B,iBmBS5BkB,MAAOsK,YAAavJ,EAAoBb,MAY7BmJ,GAAsBrJ,IAAK,CACtClB,KnBnBiC,sBmBoBjCkB,UAGWuK,GAAmB,IAAMpG,UACpC,MAAMqG,QN7BgCnG,yBAAcC,KAAKC,GAAMA,EAAGqC,OAAOhG,UAAU6J,KAAK,CACxF5D,OAAQ,CAACN,KAAqB5E,KAAK,KAAM,sBAAsBA,KAAK,KACpE+I,OAAQ,WACN/F,MAAMqB,IMEqB9F,MAyB7B+E,GAzB6B/E,EAyBJsK,EAAWG,UAzBG,CACvC7L,KnBL4B,iBmBM5BkB,MAAOsK,YAAavJ,EAAoBb,QAoD7B0K,GAAiB,CAACxM,EAAIyM,IAAc1G,UAW/C,IAEE,YN1D4B,EAAC/F,EAAIyM,KACnC,MAAMzG,EAAG,qBAAiBhG,EAAjB,aACTiG,yBAAcC,KAAKC,IACbsG,EACFtG,EAAGC,IAAIC,SAASqG,KAAK1G,GAErBG,EAAGC,IAAIC,SAASsG,OAAO3G,MMmDnB4G,CAAiB5M,EAAIyM,GAXXzM,KAChB6G,EAhDiC,EAACnF,EAAa+K,KAAd,CACnC/L,KnBXmC,wBmBYnCgB,YAAaA,EACbE,MAAO6K,IA6CII,CAAsB7M,EAAIyM,IAC5BzM,GAUA8K,CAAU9K,GACjB,MAAO8G,GACP,OATcN,EASCM,EARfL,QAAQC,IAAI,6BAA8BF,GACnCA,EAFOA,OAYLsG,GAAmB9M,GAAM+F,UACpC,IAGE,YNzD8B/F,IACzBiG,yBAAcC,KAAKC,GACjBA,EAAGqC,OAAO1G,WAAWwE,IAAItG,GAAIkG,KAAK1D,GAAaA,EAAUmK,WAC/DpG,MAAMqB,IMoDDmF,CAAmB/M,SACnB6G,EAASsF,MACRa,QAAQC,UACf,MAAOnG,GAEP,OADAL,QAAQC,IAAI,4BAA6BI,GAClCA,ICxEI/C,mBAAgB,CAC7BmJ,SAXe,CAAC7M,EAF2B,EAEY2D,KACvD,OAAQA,EAAOtD,MACb,IALoC,2BAMlC,OAAOuD,YAAgBD,EAAOpC,MALS,GAOzC,QACE,OAAOvB,MAcN,MAEM8M,GAAyB9M,GAFJA,IAASA,EAAM+M,WAEFC,CAAmBhN,GAAO6M,SCzB5DI,GAA0BC,IAAI,CACzC7M,KDDsC,2BCEtCkB,MAAO2L,IAGIC,GAAqB,IAAMzH,UAUtC,IACE,MAAM0H,OChB0B1H,gBAAkBoD,GAD1B,iBFEiB,GCeZuE,GAC7B,YAVA7G,EAASyG,GAUQG,IACjB,MAAO3G,GACP,OATcN,EASCM,EARfL,QAAQC,IAAI,iCAAkCF,GACvCA,EAFOA,OEXLmH,GAAmB,CAC9BC,cAAe,aACfC,0BAA2B,iBAC3BC,+BAAgC,QAChCC,oBAAqB,cACrB7N,SAAU,KACV8N,qBAAsB,IAqBjB,MAAMC,GAAe5N,GAASA,EAAM6N,SAC9BC,GAAkC9N,GAAS4N,GAAa5N,GAAO0N,oBCvB/DK,GAAiBjI,GAAMJ,MAAOc,EAAU6D,KAUnD,IACE,MAAM2D,EAAkBF,GAAgCzD,KAClD5F,QAAmBwJ,aAAmBnI,EAAIkI,GAGhD,MAdgBvJ,KAChB+B,EAN2B/B,KAAU,CACvCpE,KtBH4B,iBsBI5BkB,MAAOkD,IAIIyJ,CAAgBzJ,KAalBgG,CADoBhG,EAAWvC,OAAOiM,GAA6B,aAAtBA,EAAIC,eAAsD,aAAtBD,EAAIC,eAA0D,cAA1BD,EAAIE,oBAEhI,MAAO5H,GACP,OAZcN,EAYCM,EAXfL,QAAQC,IAAI,+BAAgCF,GACrCA,EAFOA,O,oECNlB,MAAMmI,WAAmBC,IAAMC,UAC7BC,YAAY5E,GACV6E,MAAM7E,GADW,KAOnB8E,YAAc,KACZC,KAAKC,SAAS,CACZC,UAAU,IAEZC,OAAOC,iBAAiB,YAAaJ,KAAKK,QAC1CF,OAAOC,iBAAiB,UAAWJ,KAAKM,YAZvB,KAcnBD,OAASE,IACPA,EAAMC,iBACND,EAAME,kBACN,MAAMC,EAAYH,EAAMI,QAEpBX,KAAK/E,MAAM2F,gBAAkBF,IAAcV,KAAK/E,MAAM4F,QAAUH,EAAY,GAC9EI,sBAAsB,KACpBd,KAAK/E,MAAM2F,eAAeF,MArBb,KAyBnBJ,UAAY,KACVN,KAAKC,SAAS,CACZC,UAAU,IAEZC,OAAOY,oBAAoB,YAAaf,KAAKK,QAC7CF,OAAOY,oBAAoB,UAAWf,KAAKM,WAEvCN,KAAK/E,MAAMqF,WACbN,KAAK/E,MAAMqF,aA/BbN,KAAK5O,MAAQ,CACX8O,UAAU,GAkCdc,mBACE,MAA4C,oBAA9BhB,KAAK/E,MAAM2F,eAAgC,yBAAKK,UAAWC,KAAQC,WAAY3G,MAAO,CAClGqG,OA1C4B,GA2C3BO,YAAapB,KAAKD,cAAkB,KAGzCsB,SACE,MAAMR,EAASS,KAAKC,IAAIvB,KAAK/E,MAAM4F,OAAQ,GA/Cb,EAgDxBW,EAAYpO,OAAOqO,OAAO,CAC9BZ,SACAa,gBAAiB1B,KAAK/E,MAAM0G,SAAWC,IAAOC,UAAYD,IAAOE,MACjEC,cAnD4B,GAqD9B/B,KAAK5O,MAAM8O,SAAW,CACpB8B,WAAY,QACV,IACJ,OAAO,yBAAKxH,MAAOgH,EAAWP,UAAWC,KAAQe,MACrC,yBAAKhB,UAAWC,KAAQgB,SAAUlC,KAAK/E,MAAMkH,UAC5CnC,KAAKgB,qBAsCtBtB,GAAW0C,aAAe,CACxBxB,eAAgB,KAChBN,UAAW,MAEEZ,UC1FA2C,OAXE,EACfpB,eACI,yBAAKA,UAAWA,EAAWqB,MAAM,6BAA6BC,QAAQ,aACpE,0BAAM1O,EAAE,gBAAgB2O,KAAK,SAC7B,0BAAM3O,EAAE,6FACR,0BAAMA,EAAE,gBAAgB2O,KAAK,U,0BC0BtBC,OA1BkB,EAC/BjP,UACA4B,WACAsN,QACAjQ,kBAEA,MAAMkQ,EAAY,CAChBvN,YAGF,GAAI5B,EAAS,CACX,MAAMoP,EAAgBxN,EAAW8L,KAAQ9L,SAAW8L,KAAQ2B,WAC5DF,EAAUG,KAAO,kBAACC,GAAD,CAAU9B,UAAS,UAAKC,KAAQ4B,KAAb,YAAqBF,KAG3D,OAAO,kBAAC,IAAD,CAAM3B,UAAWC,KAAQ8B,KAAMC,GAAE,WAAMxQ,GAAeyQ,QAASC,KAAS,ICtB5CrM,OAAOsM,EAAWrS,KACrD,MAAMmG,QAAWF,yBACXD,EAAG,mCAA+BqM,EAA/B,qBAAqDrS,GAC9DmG,EAAGC,IAAIC,SAASqG,KAAK1G,IDmBgEsM,CAAsB,iBAAkB5Q,GAAc,MACjI,kBAAC,IAASkQ,EAAYD,KEjBnBY,OAJO,IAAM,yBAAKhB,MAAM,6BAA6BiB,MAAM,KAAK1C,OAAO,KAAK2B,KAAMZ,IAAO4B,QAASjB,QAAQ,aACjH,0BAAM1O,EAAE,0M,iECUD4P,OAVG,EAChBxC,eACI,yBAAKA,UAAWA,EAAWuB,KAAMZ,IAAO8B,QAASpB,MAAM,6BAA6BC,QAAQ,aAC1F,0BAAM1O,EAAE,0GACR,0BAAMA,EAAE,gBAAgB2O,KAAK,U,sBCMtBmB,OAVY,EACzBC,aACI,4BAAQ3C,UAAWC,KAAQ2C,OAAQX,QAASU,GAC1C,8BACI,kBAACE,GAAD,CAAW7C,UAAWC,KAAQ4B,KAAMiB,MAAM,aCN/C,MAGMC,GAAY,CAAC,CACxBjT,GAAI,MACJ4B,MAAO,aACN,CACD5B,GAAI,KACJ4B,MAAO,iBACN,CACD5B,GAAI,SACJ4B,MAAO,sBAsBIsR,GAAwCD,GAAU,GAAGjT,GAiCnD+D,mBAAgB,CAC7BhB,KA/BW,CAAC1C,EAJsC,GAIQ2D,KAC1D,OAAQA,EAAOtD,MACb,IAtCsC,6BAuCpC,OAAOuD,YAAgBD,EAAOpC,MAPgB,IAShD,QACE,OAAOvB,IA0BX+C,MAtBY,CAAC/C,EAAQ6S,GAAuClP,KAC5D,OAAQA,EAAOtD,MACb,IA/CuC,8BAgDrC,OAAOuD,YAAgBD,EAAOpC,MAjBgB,IAmBhD,QACE,OAAOvB,IAiBX8S,MAbY,CAAC9S,EA1CT,WA0CwD2D,KAC5D,OAAQA,EAAOtD,MACb,IAxDuC,8BAyDrC,OAAOuD,YAAgBD,EAAOpC,MA7C9B,YA+CF,QACE,OAAOvB,MAUN,MAAM+S,GAA2B/S,GAASA,EAAMgT,iBAE1CC,GAAiBjT,GAAS+S,GAAyB/S,GAAO0C,KClEjEwQ,GAAS,CACbC,YAAa,CACXC,SAAU,OACVjB,MAAO,QACP1C,OAAQ,OACR4D,IAAK,QAEPC,WAAY,CACVX,MAAOnC,IAAO+C,QACdpB,MAAO,OACP1C,OAAQ,SAKL,MAAM+D,WAAehF,YAC1BC,YAAY5E,GACV6E,MAAM7E,GADW,KAanB4J,eAAiBtE,IACfA,EAAMC,iBACNR,KAAK/E,MAAM6J,aAAavE,EAAMwE,OAAOpS,QAfpB,KAiBnBqS,YAAczE,IACZ,OAAQA,EAAM0E,SACZ,KAtBuB,GAuBrBjF,KAAK/E,MAAMiK,kBACX,MAEF,KAzBwB,GA0BtBlF,KAAK/E,MAAM6J,iBAtBf9E,KAAK5O,MAAQ,CACXuB,MDK8C,ICDlDwS,0BAA0BC,GACxBpF,KAAKC,SAAS,CACZtN,MAAOyS,EAAUtR,OAuBrBuN,SACE,MAAM,QACJH,EADI,KAEJpN,EAFI,aAGJgR,GACE9E,KAAK/E,MACHoK,EAAiB,kBAAC,KAAD,CAAgBC,SAAS,SACpC,kBAAC,KAAD,CAAYrE,UAAWC,EAAQwD,cAErCa,EAAwB,KAATzR,GAAwB,OAATA,EAAgB,kBAAC,KAAD,CAAgBwR,SAAS,OAC7D,kBAAC,GAAD,CAAa1B,QAAS,IAAMkB,OACZ,KAChC,OAAO,kBAAC,KAAD,CAAY7D,UAAWC,EAAQqD,YAAaiB,YAAaC,IAAKC,EAAE,0BAA2BL,eAAgBA,EAAgBE,aAAcA,EAAc5S,MAAOqN,KAAK5O,MAAMuB,MAAOgT,SAAU3F,KAAK6E,eAAgBe,QAAS5F,KAAKgF,eAUxOJ,GAAOxC,aAAe,CACpBtO,KAAM,GACNgR,aAAce,SAASC,WAEVC,4BAAWzB,GAAXyB,CAAmBnB,I,sBC7DnBoB,OAlBe,EAC5B9C,UACA+C,cACAC,cAEO,yBAAK1L,MAAO,CACjB2L,UAAW,WAEFD,EAAW,yBAAKjF,UAAWC,KAAQgF,UAAWT,IAAKC,EAAE,cAAsB,yBAAKzE,UAAWC,KAAQkF,SAAUlD,QAASA,GAC9G+C,EAAcR,IAAKC,EAAE,aAAeD,IAAKC,EAAE,eCbzD,MAMMW,GAAgB/H,GANS,GAO7BA,EAKIgI,GAAsBhI,GAC1B+H,GAAc/H,GATeiI,G,yBCgB/B,MAAMC,WAAsB5G,YAAW,eAAD,oBAC3CxO,MAAQ,CACNkN,KDpByB,GCkBgB,KAI3CmI,yBAA2BnI,IACzB0B,KAAKC,SAAS,CACZ3B,OACA2H,YARuB,KAQV3H,KAP0B,KAmB3CsC,eAAiBF,IACf,MAAMgG,EAAiBhG,EAAY,GAE7BiG,EAAUrF,KAAKC,IDxCI,GAOOV,ECiC6B6F,EDhCxDpF,KAAKsF,OAAO/F,EANiB0F,IAJA,MASF1F,MCmChC,GAAI8F,IAAY3G,KAAK5O,MAAMkN,KAAM,CAC/B,MAAMuI,EAAcvF,KAAKwF,IAAIH,EA1BN,IA2BvB3G,KAAK/E,MAAM2F,eAAeiG,KA1Ba,KA6B3CvG,UAAY,Id9CuBxJ,gBAAuBiD,GAFhC,iBAE+EpH,Gc+ChGoU,CAAsB/G,KAAK5O,MAAMkN,MA9BC,KAgC3C0I,kBAAoB,KAClB,MAAM1I,EAlCmB,KAkCZ0B,KAAK5O,MAAMkN,KAAyB0B,KAAK/E,MAAMgD,SAlCnC,GAmCzB+B,KAAKC,SAAS,CACZ3B,OACA2H,aAAcjG,KAAK5O,MAAM6U,eApCc,KAuC3CgB,kBAAoB,KAClBjH,KAAK/E,MAAMiM,QAAQ3Q,KAAnB,WAA4ByJ,KAAK/E,MAAMpI,WAAW,GAAG9B,MA7BvDoW,oBACEnH,KAAKyG,yBAAyBzG,KAAK/E,MAAMgD,UAG3CkH,0BAA0BC,GACxBpF,KAAKyG,yBAAyBrB,EAAUnH,UA2B1CoD,SACE,MAAM,WACJxO,EADI,KAEJiB,EAFI,WAGJsT,EAHI,mBAIJC,GACErH,KAAK/E,MACHqM,EAAWtH,KAAK5O,MAAM6U,YAnDH,GAmDiCjG,KAAK5O,MAAMkN,KAC/DiJ,EAAmBjB,GAAoBgB,GACvCE,EAAsB,CAC1BC,QAAQ,GAAD,ODxE2B,GCwE3B,gBACPC,UAAW1H,KAAK5O,MAAM6U,YAAc,OAAS,SAC7CpF,OAAQwF,GAAciB,GD1EY,IC4EpC,OAAO,kBAAC,GAAD,CAAYzG,OAAQ0G,EAAkB3G,eAAgBZ,KAAKY,eAAgBN,UAAWN,KAAKM,UAAWqB,UAAU,GAC3G,yBAAKnH,MAAOgN,GACR,yBAAKvG,UAAWC,KAAQyG,cACpB,kBAAC,IAAD,CAAMnN,MAAO,CACzBoN,QAAS,eACTC,eAAgB,OAChBC,YAAa,GACbxC,SAAU,WACVb,IAAK,OACJxB,GAAI,QACW,kBAAC8E,GAAD,OAEJ,kBAAC,GAAD,CAAQjU,KAAMA,EAAMgR,aAAcuC,EAAoBnC,gBAAiBlF,KAAKiH,qBAE/EtS,YAAQ9B,GAAYf,IAAIyB,GAAa,kBAAC,GAAD,CAAMyG,IAAKzG,EAAUxC,GAAI2R,MAAOnP,EAAUQ,YAAaP,QAASD,EAAUC,QAASf,YAAac,EAAUxC,GAAIqE,SAAU7B,EAAUxC,KAAOqW,MAEnL,kBAAC,GAAD,CAAgBlE,QAASlD,KAAKgH,kBAAmBf,YAAajG,KAAK5O,MAAM6U,YAAaC,SA1EzE,KA0EmFlG,KAAK/E,MAAMgD,aAM3H,MAOM+J,GAAqB,CACzBpH,eAAgBvC,GAChBgJ,mBC3G6B1U,IAAK,CAClClB,KLDwC,6BKExCkB,WD+HasV,mBAAWvN,YA/BFtJ,IAAK,CAC3ByB,WAAYI,EAAkB7B,GAC9B0C,KAAMuQ,GAAejT,GACrB6M,SAAUC,GAAuB9M,GACjCgW,WAAY/R,EAAejE,KA2BsB4W,GAnBhC,CAACE,EAAYC,EAAeC,KAC7C,MAAMvV,EAAaO,OAAOC,OAAON,YAASmV,EAAWrV,aAC/CwV,EAAoBC,IAAUzV,EAAWS,OAAOO,GAAKA,EAAEE,YAAYwU,cAAc5X,SAASuX,EAAWpU,KAAKyU,gBAAiB,MAAO,eACxI,OAAO,mDAAKL,GACPE,GACAD,GAFL,IAGEtV,WAAY,IAAIwV,EAAkB/U,OAAOO,GAAKA,EAAEL,YAAa6U,EAAkB/U,OAAOO,IAAMA,EAAEL,aAaxEkH,CAAyD8L,KE5GpE9L,mBARStJ,IAAK,CAC3B6M,SAAUC,GAAuB9M,KAOpBsJ,CAhBiBO,IAC9B,MAAMqD,EAAOrD,EAAM0G,SHLQ,EGKmB1G,EAAMgD,SAC9CuK,EAAYlC,GAAoBhI,GbLN,EaMhC,OAAO,yBAAK2C,UAAU,4BAA4BzG,MAAO,CACvDgO,iBCMWC,OAdiB,EAC9B9W,UACI,yBAAK6I,MAAO,CAChBiN,QAAS,YACTtB,UAAW,SACX3B,SAAU,OACV/J,WAAY,IACZsJ,MAAOnC,IAAO8G,UAEP/W,G,qBCIMgX,OAZQ,EACrBC,WACI,kBAAC,IAAD,CAAUC,OAAK,EAAC7O,IAAK4O,EAAO1C,UAAQ,EAACxD,MAAO,0BAAMlI,MAAO,CAC7DuJ,MAAOnC,IAAO8B,QACdjJ,WAAY,QAEGmO,KCIFE,OAVI,EACjB7H,eACI,yBAAKA,UAAWA,EAAWqB,MAAM,6BAA6BiB,MAAM,KAAK1C,OAAO,KAAK2B,KAAMZ,IAAO8G,QAASnG,QAAQ,aACjH,0BAAM1O,EAAE,gBAAgB2O,KAAK,SAC7B,0BAAM3O,EAAE,wI,sBCChB,MAAMkV,GAAa,EACjBhS,SACI,uBAAGmM,QAAS8F,GAAKA,EAAEvI,kBAAmBQ,UAAWC,KAAQ+H,WAAYlE,OAAO,SAASmE,IAAI,sBAAsBC,KAAMpS,GACnH,kBAACqS,GAAD,OAOFC,GAAe,IAAM,4BAAQpI,UAAWC,KAAQoI,cAAe7D,IAAKC,EAAE,WAkC7D6D,OAhCS,EACtB9X,OACAqC,OACA0V,WACAzS,MACA0S,cAEA,MAAMC,EAAWC,YAAYlY,GACvBmY,EAAmBnY,IAASoY,IAAgBC,KAAaL,GAAW,kBAACC,EAAD,CAAUlP,MAAO,CACzFgI,KAAMZ,IAAO8G,WAEf,OAAO,kBAAC,IAAD,CAAUG,OAAK,EAAC3F,QAASsG,EAAU9G,MAAO,yBAAKzB,UAAWC,KAAQ6I,UACvD,yBAAK9I,UAAWC,KAAQwB,OACpB,0BAAMlI,MAAO,CAC7BsN,YAAa,QAEQ8B,GAEL,8BAAO9V,GACNiD,EAAM,kBAACgS,GAAD,CAAYhS,IAAKA,IAAU,MAEtC,kBAACsS,GAAD,UCtCb,MAWMW,GAA+B,GAC/BC,GAAsB,CACjClZ,GAAI,GACJ+C,KAAM,GACNW,OAAQ,GACRT,YAAa,GACbY,eAAgB,GAChBsV,kBAAkB,GA6Hb,MAAMC,GAAwB/Y,GAASA,EAAMgZ,cAEvCC,GAAgBjZ,IAAUgH,KAAQhH,EAAMgZ,eACxCE,GAAyBlZ,GAAS+Y,GAAsB/Y,GAAO8Y,iBAM/DK,GAAyBnZ,GAAS2B,YAASoX,GAAsB/Y,IAAQwD,e,cC1JtF,MAAM+D,GAAUpB,GAASC,QAAQC,IAAI,UAAWF,GAE1CiT,GAAgB,CAACjX,EAAWI,KAChC,MAAM,KACJG,EADI,YAEJE,EAFI,eAGJY,GACEjB,EAOJ,OANAJ,EAAUO,KAAOA,EACjBP,EAAUS,YAAcA,EACxBT,EAAUqB,eAAiBA,EAAe9C,IAAIN,GAAQ4B,OAAOqO,OAAO,GAAIjQ,EAAM,CAC5E+R,MAAO/R,EAAKiZ,EACZ5J,OAAQrP,EAAKkZ,KAERnX,EAAUoX,OAAO1T,KAAK2T,GAAOA,EAAIC,SAASC,MCYtCC,GAAuB,MAClCtZ,KFxBkC,yBE4CvBuZ,GAAqBxZ,IAChC,MAAMC,EAAOD,EAAKC,YACXD,EAAKC,KACZ,MAAMwZ,EAAeC,IAAYzZ,GAAM0Z,SACjCpa,EAAKqa,yBACLC,EAAqBjZ,YAAsBrB,GACjD,IAAIua,EAEJ,GAAI7Z,IAAS8Z,IAAW,CACtB,MAAMC,EAAOha,EAAKga,MAAQ,EAC1BF,EAAQG,YAAsBD,EAAMha,EAAKka,eAEzCJ,EADS7Z,IAASka,IACVC,cAEAC,IAGV,MAAO,CACLpa,KF1D8B,qBE2D9BkB,MAAM,qCACJ5B,KACAU,OACA6T,SAAU9T,EAAK8T,UAAY,KAC3B,CAAC2F,GAAezZ,EAAK0Q,SAClB2J,KACAR,GACAC,KAIIQ,GAAwBta,IAAI,CACvCC,KFrEmC,wBEsEnCkB,MAAOnB,IAEIua,GAAwBpZ,IAAK,CACxClB,KF1EmC,wBE2EnCkB,UAGWqZ,GAAiB,IAAMlV,MAAOc,EAAU6D,KACnD,MAAMlI,EAAY4W,GAAsB1O,KAClCwQ,EAAe,2BAAQ1Y,GAAR,IACnBqB,eAAgBhD,EAAwB2B,EAAUqB,gBAClDd,KAAMP,EAAUO,MAAQ2R,IAAKC,EAAE,wBAGjC,IACE,MAAMjT,EAAcwZ,EAAgBlb,SD7ET4C,EC6EoCsY,ED5E1DjV,yBAAcC,KAAKC,GACjBA,EAAGqC,OAAO1G,WAAWwE,IAAI1D,EAAK5C,IAAIkG,KAAK1D,GAAaiX,GAAcjX,EAAWI,KACnF2D,MAAMqB,UAEkBhF,IACpBqD,yBAAcC,KAAKC,IACxB,MAAM3D,EAAY2D,EAAGqC,OAAO1G,WAAWiH,SACvC,OAAO0Q,GAAcjX,EAAWI,KCqEwDuY,CAAcD,GAGtG,OAFArU,EArEgC,CAClCnG,KFxBkC,+BE6F1BmG,EAAS4D,GAA0B/I,IAClCsL,QAAQC,QAAQvL,GACvB,MAAO8E,GA1FKA,KACdC,QAAQC,IAAI,6BAA8BF,IA0FxCoB,CAAQpB,GDlFmB5D,OEjBlBwY,GAAc,CAAC,CAC1Bpb,GAAI,aACJqb,OAAQ3G,IAAKC,EAAE,oBACf7T,MAAO,CAAC,CACNJ,KAAMC,IACNoC,KAAM2R,IAAKC,EAAE,YACbxD,QAAS,IACR,CACDzQ,KAAMkL,IACN7I,KAAM2R,IAAKC,EAAE,YACbxD,QAAS,QACR,CACDzQ,KAAMM,IACN+B,KAAM2R,IAAKC,EAAE,UACbxD,QAAS,OAIAmK,GAAmB,CAACxC,IAAetN,IAAKC,IAAcC,IAAa6P,IAAOC,IAASC,IAAWC,KAE9FC,GAAgB,CAACH,IAASC,IAAWF,K,0BCTlD,MAAMK,WAA6B/M,YACjCC,YAAY5E,GACV6E,MAAM7E,GADW,KAOnB2R,QAAUpb,GAAQ,KAChB,MAAM,KACJC,EADI,mBAEJuZ,EAFI,oBAGJ6B,GACE7M,KAAK/E,MAET,GAAIxJ,IAASgb,IACXzB,EAAmB,CACjBvZ,OACAyQ,QAAS1Q,EAAKwI,UAEX,CACL,MAAM8S,EAAU,CACd/b,GAAIS,EAAKT,GACT+C,KAAMtC,EAAKuC,aAAevC,EAAKsC,MAG7B4Y,GAAc/b,SAASc,GACzBob,EAAoBpb,EAAMqb,GAE1B9B,EAAmB,CACjBvZ,OACAyQ,QAAS4K,MA9BE,KAmCnBC,cAAgB,KACd/M,KAAKC,SAAS,CACZ+M,SAAUhN,KAAK5O,MAAM4b,UAEvBhN,KAAK/E,MAAMgS,mBAAmBjN,KAAK/E,MAAMxJ,OArCzCuO,KAAK5O,MAAQ,CACX4b,SAAS,GAuCb3L,SACE,MAAM,MACJuH,EADI,KAEJnX,EAFI,MAGJI,EAHI,QAIJqb,GACElN,KAAK/E,MACT,OAAO,oCACK,kBAAC,GAAD,CAAgB2N,MAAOA,IACtB/W,EAAMC,IAAIN,IACnB,MAAM2b,EAAUC,YAAW3b,EAAMD,EAAMwO,KAAKqN,QAAQnW,IACpD,OAAO,kBAAC,GAAD,CAAiB8C,IAAKxI,EAAKT,IAAMS,EAAKwI,IAAKvI,KAAMA,EAAMgY,QAAShY,IAASoY,IAAgBrY,EAAKC,KAAOA,EAAMqC,KAAMtC,EAAKuC,aAAevC,EAAKsC,KAAM0V,SAAUxJ,KAAK4M,QAAQpb,GAAOuF,IAAKoW,MAEjLD,EAAU,kBAAC,IAAD,CAAUrE,OAAK,EAAC7O,IAAG,kBAAa4O,GAAS1F,QAASlD,KAAK+M,cAAerK,MAAO,4BAAQzB,UAAWC,KAAQoM,gBAClGtN,KAAK5O,MAAM4b,QAAUvH,IAAKC,EAAE,cAAgBD,IAAKC,EAAE,gBACxC,KAC5B,kBAAC,IAAD,CAAS6H,OAAO,cAehCZ,GAAqBa,aAAe,CAClCtW,GAAIuW,IAAUC,OAAOC,YAERjT,mBAAQ,KAAM,CAC3BsQ,sBACA6B,oBCzFiC,CAACpb,EAAMyQ,IAAY,CAACtK,EAAU6D,KAC/D,MAAMrK,EAAQqK,IACRmS,EAAe1C,IAAYzZ,GAAM0Z,SACjCvW,EAAiBuV,GAAsB/Y,GAAOwD,eAC9CiZ,EAAqBjZ,EAAekZ,UAAUtc,GAAQA,EAAKC,OAASA,GAC1E,IAAIsc,EAEAF,GAAsB,GACxBE,EAAgBnZ,EAAeiZ,GAC/BE,EAAcH,GAAcrX,KAAK2L,GACjCtK,EAASkU,GAAsBiC,MAE/BA,EAAgB,CACdtc,KAAMA,EACNyQ,QAAS,CAACA,IAEZtK,EAASoT,GAAmB+C,ODuEjBrT,CAGZiS,IEhEYjS,mBAAQ,KAAM,CAC3BsQ,uBADatQ,CAvBiB,EAC9BsQ,qBACAgD,eAEA,MAAMC,EAAiB,EACrBxc,OACAyQ,aACI,KACJ8I,EAAmB,CACjBvZ,OACAyQ,aAIJ,OAAO,oCACG,kBAAC,GAAD,CAAgB0G,MAAOoF,EAAS5B,SAC/B4B,EAASnc,MAAMC,IAAIN,GAAQ,kBAAC,GAAD,CAAiBwI,IAAKxI,EAAKC,KAAMA,KAAMD,EAAKC,KAAMqC,KAAMtC,EAAKsC,KAAM0V,SAAUyE,EAAezc,S,QCVpI,MAAM0c,GAAkBjT,GAAS,kBAAC,IAAD,CAAYnH,KAAK,wBAAwB4O,MAAO+C,IAAKC,EAAE,6CAA8CjU,KAAK,OAAOkU,SAAU1K,EAAM0K,SAAUwI,QAASlT,EAAMkT,QAASxb,MAAOsI,EAAMtI,QAEjN,MAAMyb,WAAqBzO,IAAMC,UAC/BC,YAAY5E,GACV6E,MAAM7E,GADW,KAYnBoT,UAAY,KACVrO,KAAKC,SAAS,CACZhI,MAAM,EACN3E,OAAQ,MAfO,KAkBnBgb,SAAW,CAACC,EAAGhO,KACbP,KAAKwO,aACLxO,KAAKC,SAAS,CACZwO,SAAUlO,EAAMmO,cAChBzW,MAAM,KAtBS,KAyBnB0W,0BAA4BxL,KAAS,KACnCnD,KAAKC,SAAS,CACZ2O,gBAAiB5O,KAAK5O,MAAMkC,QAC3B0M,KAAKwO,aACP,KA7BgB,KA8BnBK,UAAY,CAACN,EAAGhO,KACdP,KAAKC,SAAS,CACZ3M,OAAQiN,EAAMwE,OAAOpS,OACpBqN,KAAK2O,4BAjCS,KAmCnBG,yBAA2B,IAAMzC,GAAiB/Y,OAAO7B,IACvD,MAAMsd,EAAW7D,IAAYzZ,GAC7B,OAAOuO,KAAK5O,MAAMS,OAASmO,KAAK5O,MAAMS,MAAMkd,EAASC,gBACpDld,IAAIL,IACL,MAAMsd,EAAW7D,IAAYzZ,GACvBwd,EAAYC,YAAoBzd,GAChC0d,EAAWnP,KAAK5O,MAAMS,MAAMkd,EAASC,cACrC9B,EAAUiC,EAASta,OAASoa,EAC5Bpd,EAAQmO,KAAK5O,MAAMge,WAAWxV,IAAImV,EAAShe,IAAMoe,EAAWA,EAASE,MAAM,EAAGJ,GACpF,OAAO,kBAAC,GAAD,CAAsBjV,IAAKvI,EAAMA,KAAMA,EAAMmX,MAAOmG,EAASO,YAAazd,MAAOA,EAAOob,mBAAoBjN,KAAKwO,WAAYtB,QAASA,MA5C5H,KA8CnBqC,qBAAuB,IAAMpD,GAAYra,IAAIkc,GAAY,kBAAC,GAAD,CAAkBhU,IAAKgU,EAASjd,GAAIid,SAAUA,KA9CpF,KA+CnBwB,cAAgB,IAAMxP,KAAK8O,2BAA2BW,OAAOzP,KAAKuP,wBA/C/C,KAgDnBf,WAAa1X,UACX,GAAIrF,EAAM,CACR,MAAM2d,EAAapP,KAAK5O,MAAMge,WAE1BA,EAAWxV,IAAInI,GACjB2d,EAAW1R,OAAOjM,GAElB2d,EAAWM,IAAIje,GAGjBuO,KAAKC,SAAS,CACZmP,oBAGFpP,KAAKC,SAAS,CACZmP,WAAY,IAAIO,MAIpB,IAAIC,EAAc,YAEd,IAAI5P,KAAK5O,MAAMge,WAAW/b,UAAUwB,SACtC+a,GAAe,QAAU,IAAI5P,KAAK5O,MAAMge,WAAW/b,UAAUiB,KAAK,UAGpE,MAAMhB,EAAS0M,KAAK5O,MAAMwd,gBAAX,WAAiC5O,KAAK5O,MAAMwd,iBAAoB,GAC/E5O,KAAKqN,QAAQnW,GAAGC,IAAIC,SAASC,IAA7B,sBAAgD/D,GAAhD,OAAyDsc,IAAe3Y,KAAK4T,GAAY7K,KAAKC,SAAS,CACrGpO,MAAOgZ,KACLvT,MAAME,QAAQD,QA1ElByI,KAAK5O,MAAQ,CACXqd,SAAU,KACVxW,MAAM,EACNmX,WAAY,IAAIO,IAChB9d,WAAOyG,EACPhF,OAAQ,GACRsb,gBAAiB,IAuErBvN,SACE,OAAO,oCACK,kBAAC6M,GAAD,CAAiBvb,MAAOqN,KAAK5O,MAAMkC,OAAQqS,SAAU3F,KAAK6O,UAAWV,QAASnO,KAAKsO,WACnF,kBAAC,KAAD,CAASrN,UAAU,0BAA0BhJ,KAAM+H,KAAK5O,MAAM6G,KAAMmD,QAAS4E,KAAKqO,UAAWI,SAAUzO,KAAK5O,MAAMqd,SAAUoB,aAAc,CAClJC,WAAY,OACZC,SAAU,UACTC,gBAAiB,CAClBF,WAAY,OACZC,SAAU,OACTvV,MAAO,CACRqG,OAAQ,QACPoP,WAAY,CACbzV,MAAO,CACL+I,MAAO,UAER2M,kBAAkB,EAAMC,qBAAqB,EAAMC,qBAAqB,GAC7D,kBAAC,IAAD,CAAMC,SAAU,SAAUrQ,KAAKwP,oBAYnDpB,GAAaZ,aAAe,CAC1BtW,GAAIuW,IAAUC,OAAOC,YAERS,U,sBCnHR,MAAMkC,GAAe,EAC1Bxc,OACAE,cACAuc,gBACAC,yBAUO,6BAASvP,UAAWC,KAAQuP,SACzB,yBAAKxP,UAAWC,KAAQwP,kBACpB,kBAAC,IAAD,CAAYzP,UAAWC,KAAQ0H,MAAO9U,KAAK,wBAAwB4O,MAAO+C,IAAKC,EAAE,mBAAoBjU,KAAK,OAAOkU,SAV3G,CAAC4I,EAAGvF,KACtBuH,EAAcvH,EAAEjE,OAAOpS,QAS6HA,MAAOmB,EAAM0R,YAAaC,IAAKC,EAAE,wBACzK,kBAAC,IAAD,CAAezE,UAAWC,KAAQlN,YAAaF,KAAK,8BAA8B4O,MAAO+C,IAAKC,EAAE,yBAA0BC,SAP9G,CAAC4I,EAAGvF,KAC5BwH,EAAoBxH,EAAEjE,OAAOpS,QAMsIA,MAAOqB,KAElK,yBAAKiN,UAAWC,KAAQyP,cACpB,kBAAC,GAAD,QAUhBL,GAAalO,aAAe,CAC1BtO,KAAM,GACNE,YAAa,IAGf,MAQMgU,GAAqB,CACzBuI,cNjBiC5d,IAAK,CACtClB,KF/B4B,iBEgC5BkB,UMgBA6d,oBNduC7d,IAAK,CAC5ClB,KFlCkC,uBEmClCkB,WMca+H,mBAZStJ,IACtB,MAAMwf,EAAoB7d,YAASoX,GAAsB/Y,IACzD,MAAO,CACL0C,KAAM8c,EAAkB9c,KACxBE,YAAa4c,EAAkB5c,cAQKgU,GAAzBtN,CAA6C4V,I,iECvDrD,MAAMO,GAAY,IAAM,yBAAKhQ,OAAO,KAAK0B,QAAQ,YAAYgB,MAAM,KAAKjB,MAAM,8BAC7E,0BAAMzO,EAAE,wOAAwO2O,KAAK,aAEhPsO,GAAe,IAAM,yBAAKjQ,OAAO,KAAK0B,QAAQ,YAAYgB,MAAM,KAAKjB,MAAM,6BAA6B9H,MAAO,CAC1H+S,OAAQ,kBAGF,0BAAM1Z,EAAE,kIAAkI2O,KAAK,UAAUuO,SAAS,UAAUC,UAAU,sBAEjLC,GAAU,IAAM,yBAAK3O,MAAM,6BAA6BzB,OAAO,KAAK0B,QAAQ,YAAYgB,MAAM,KAAKf,KAAMZ,IAAO8G,SACrH,0BAAM7U,EAAE,gBAAgB2O,KAAK,SAC7B,0BAAM3O,EAAE,wD,0BCJhB,MAAMqd,GAAe,EACnBpS,sBACArI,YACA0a,yBACAC,gBACAC,mBACAjW,WACCiS,KACD,MAAOlX,EAASmb,GAAcC,mBAASJ,GAEjCK,EAAgB,EACpBC,cACA5f,YAEAyf,EAAW,CACT,CAACG,GAAc5f,KAIb6f,EAAkB,EACtBD,cACAE,sBAEA,MACMC,GADUzb,EAAQsb,IAAgB,IAChBne,OAAO9B,IAASmgB,EAAgBhhB,SAASa,EAAKT,KACtEugB,EAAW,2BAAKnb,GAAN,IACR,CAACsb,GAAcG,MAIbC,EAAiB,EACrBJ,cACAK,cAEA,MAAMC,EAAU5b,EAAQsb,IAAgB,GAClCO,EAAgBF,EAAQhgB,IAAIf,GAAMghB,EAAQvb,KAAKhF,GAAQA,EAAKT,KAAOA,IACzEugB,EAAW,2BAAKnb,GAAN,IACR,CAACsb,GAAcO,MA2CnB,OAAO,oCACIvb,EAAU1F,IAAM,kBAAC,IAAD,CAAOqK,QAASA,EAASkK,SAAS,MAAM2M,OAAK,GACtD,kBAAC,IAAD,KAAaxb,EAAU3C,MACvB,kBAAC,IAAD,KA1BU,MAC1B,MAAMoe,EAAc,CAClBhb,GAAImW,EAAQnW,GACZib,SAAUX,EACVY,WAAYV,EACZW,UAAWR,GAEPS,EAAgBnc,EAAQM,EAAU1F,KAAO,GAE/C,OAAQ0F,EAAU1F,IAChB,KAAK2E,KAED,OAAO,kBAAC,KAAD,CAAiB6c,gBAAiBD,EAAeH,SAAUD,EAAYC,WAGlF,KAAKxc,KACH,OAAO,kBAAC,KAAD,eAAkBmJ,oBAAqBA,EAAqB0T,QAASF,GAAmBJ,IAEjG,QACE,OAAO,kBAAC,KAAD,CAAkBI,cAAeA,EAAeb,YAAahb,EAAU1F,GAAIohB,SAAUD,EAAYC,SAAU9E,QAAS6E,EAAYhb,OAO5Gub,IACf,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQC,WAAS,EAACxP,QAAS9H,GACtBqK,IAAKC,EAAE,WAEZ,kBAAC,IAAD,CAAQiN,SAAO,EAACzP,QAhDvB,KACjB,MAAMnS,EAAK0F,EAAU1F,GACf6hB,EAAczc,EAAQpF,GAExB6hB,GAAeA,EAAY/d,OAC7Buc,EAAc,CACZrgB,KACA4B,MAAO,IAAIigB,KAGbvB,EAAiBtgB,GAGnBqK,EAAQrK,KAoCqB0U,IAAKC,EAAE,iBAgBxCwL,GAAa1D,aAAe,CAC1BtW,GAAIuW,IAAUC,QAODhT,mBAJStJ,IAAK,CAC3B+f,uBAAwBpb,GAAoB3E,KAGN,CACtCggB,cjDzH6B9d,IAAM,CACnC7B,KDA6B,kBCC7B6B,WiDwHA+d,iBAAkB3a,IAFLgE,CAGZwW,IC9HI,MAEM2B,GAAuC,GAiB7C,MAAMC,GAA2B1hB,GAASA,EAAM2hB,qBClB1CC,GAA4BrgB,IAAK,CAC5ClB,KDFwC,6BCGxCkB,UCwDa+H,mBAfStJ,IAAK,CAC3B0N,oBAAqBI,GAAgC9N,GACrDqF,UAAWqc,GAAyB1hB,GACpCyE,WAAYD,GAAexE,GAC3B+f,uBAAwBpb,GAAoB3E,KAWN,CACtC6hB,0BDvDyC,MACzCxhB,KDL0C,iCE4D1CyhB,wBAAyBF,IAFZtY,CA5CQO,IACrB,MAAOkY,EAAaC,GAAkB7B,oBAAS,GACzC8B,EAAMC,iBAAO,MAEbC,EAAgB,KACpBH,GAAe,GACfnY,EAAMgY,6BAOR,OAAO,oCACG,0BAAMI,IAAKA,GACP,kBAAC,IAAD,CAAQnQ,QAAS,IAAMkQ,GAAe,IACjC3N,IAAKC,EAAE,cACR,kBAAC,KAAD,QAGPyN,GAAe,kBAAC,IAAD,CAASK,eAAgBD,EAAeE,UAAWJ,EAAKK,OAAO,EAAMC,UAAU,gBACvF,kBAAC,KAAD,CAAiBnZ,MAAO,CACpC+I,MAAO,SACN1N,WAAYoF,EAAMpF,WAAY+d,iBAdb7iB,IACtBkK,EAAMiY,wBAAwBjY,EAAMpF,WAAWW,KAAKC,GAAaA,EAAU1F,KAAOA,KAaZ8iB,YAAazgB,OAAOgD,KAAK6E,EAAMkW,2BAE3F/Y,KAAQ6C,EAAMxE,WAAoI,KAAvH,kBAAC,GAAD,CAAcqI,oBAAqB7D,EAAM6D,oBAAqBrI,UAAWwE,EAAMxE,UAAW2E,QAASmY,O,sBCrB5I,MAAMO,GAAe,CAAC7Y,EAAOoS,KAC3B,MAAO0G,EAAmBC,GAAwBzC,oBAAS,IACpD0C,EAAqBC,GAA0B3C,oBAAS,IACxD4C,EAAaC,GAAkB7C,mBAAS,OACzC,GACJxgB,EADI,KAEJ+C,EAFI,YAGJE,EAHI,OAIJS,EAJI,MAKJ+F,EALI,gBAMJtF,EANI,QAOJ1B,EAPI,yBAQJ6gB,EARI,sBASJC,GACErZ,EAEEsZ,EAAsB,IAAML,GAAwBD,GAEpDO,EAAoB,IAAMR,GAAsBD,GAMhDU,EAAarhB,OAAOqO,OAAO,GAAIjH,EAAMoO,MAAO,CAChD8L,OAAQ,UACRC,WAAY,OACZlQ,IAAK,QAEDpC,EAAW7O,EAAUuP,KAAO6R,KAElC,GAAIT,EACF,OAAO,kBAAC,IAAD,CAAUlR,GAAIkR,IAGvB,MAAMU,EAA2B3f,EAAkBuQ,IAAKC,EAAE,oBAAsBD,IAAKC,EAAE,oBAOjFoP,EAA8BthB,EAAUiS,IAAKC,EAAE,oBAAsBD,IAAKC,EAAE,kBAO5EqP,EAAYC,sBACZC,EAAaliB,YAAS0B,GAC5B,OAAO,oCACG,yBAAKwM,UAAWC,KAAQgU,UACpB,0BAAM1a,MAAOia,GAAa3gB,GAC1B,yBAAKmN,UAAWC,KAAQiU,SACpB,yBAAKlU,UAAWC,KAAQkU,aAAclS,QAASmR,GAC3C,kBAAChS,EAAD,CAAU7H,MAAO,CAC7BgI,KAAMZ,IAAO8G,YAGL,yBAAKzH,UAAWC,KAAQmU,OACnBJ,EAAWK,OAAS,kBAAC,IAAD,CAAMrU,UAAWC,KAAQqU,SAAUtS,GAAE,WAAMlS,EAAN,UAClD,kBAAC,IAAD,KAAS0U,IAAKC,EAAE,UACV,KACbuP,EAAWO,OAAS,kBAAC,IAAD,CAAQtS,QAASqR,GAC7B9O,IAAKC,EAAE,UACA,KAChB,kBAAC,GAAD,MACA,0BAAM2N,IAAK0B,GACP,kBAAC,IAAD,CAAQ7R,QAASsR,GACb,kBAAC3D,GAAD,MACA,0BAAMrW,MAAO,CAC7Bib,WAAY,QAEShQ,IAAKC,EAAE,YAKvBqO,GAAqB,kBAAC,IAAD,CAASN,UAAWsB,EAAWpB,UAAU,eAAeH,eAAgBgB,GACtF,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAU3L,OAAK,EAACnG,MAAOoS,EAA6B5R,QArCnD,KAC7BmR,IACAG,OAoC4B,kBAAC,IAAD,CAAU3L,OAAK,EAACnG,MAAOmS,EAA0B3R,QA7CnD,KAC1BoR,IACAE,OA4C4B,kBAAC,IAAD,CAAU3L,OAAK,EAACnG,MAAO+C,IAAKC,EAAE,UAC1B,kBAAC,IAAD,CAAUmD,OAAK,EAACnG,MAAO+C,IAAKC,EAAE,oBAAqBxC,QAhEjE,IAAMkR,EAAe,GAAD,OAAIrjB,EAAJ,mBAiEN,kBAAC,IAAD,CAAU8X,OAAK,EAACnG,MAAO+C,IAAKC,EAAE,qBAAsBxC,QA/DpE,IAAMkR,EAAe,GAAD,OAAIrjB,EAAJ,sBAqE3BmE,EAAkB,yBAAK+L,UAAU,wBAAwBzG,MAAOpH,OAAOqO,OAAO,CACrFiU,WAAY,MACZ3T,cAAe,OACdvH,EAAMxG,YAAcA,EAEnB,GAFiC,CACnC+P,MAAO,UAEQ/P,GAAeyR,IAAKC,EAAE,mBAClB,KACZ3U,EAAK,kBAAC,KAAD,CAAemG,GAAImW,EAAQnW,GAAInG,GAAIA,EAAIU,KAAK,YAAYwG,KAAMgc,EAAqB0B,eAAgBpB,IAA0B,OAe/IT,GAAa1R,aAAe,CAC1BtO,KAAM,GACNE,YAAa,GACbR,SAAS,EACT0B,iBAAiB,GAEnB4e,GAAatG,aAAe,CAC1BtW,GAAIuW,IAAUC,QAiCDhT,mBA9BStJ,IACtB,MAAML,EAAKsE,EAAejE,GACpBmC,EAAYT,EAAkB1B,EAAOL,IAAOwB,EAClD,MAAO,CACLxB,KACA+C,KAAMP,EAAUQ,YAChBC,YAAaT,EAAUU,mBACvBW,eAAgB1B,EAAmB9B,GACnC8D,gBAAiBK,GAA4BnE,GAC7CoC,QAASD,EAAUC,QACnBiB,OAAQlB,EAAUkB,SAoBkB,KAhBrB,CAACyT,EAAYC,EAAeC,KAC7C,MAAM,GACJrX,EADI,QAEJyC,EAFI,gBAGJ0B,GACEgT,GACE,SACJtQ,GACEuQ,EACJ,OAAO,uCAAKD,GACPE,GADL,IAEEiM,yBAA0B,IAAMzc,EAAS2F,GAAexM,GAAKyC,IAC7D8gB,sBAAuB,IAAM1c,EAASmF,IAAwB7H,OAInDwF,CAA2CoZ,I,QCvK1D,MAAMtZ,GAAQ,CACZoO,MAAO,CACLtD,SAAU,WACVd,SAAU,GACV/J,WAAY,IACZsJ,MAAOnC,IAAOgU,MACdC,SAAU,IAEZ7hB,YAAa,CACXwQ,SAAU,GACVT,MAAOnC,IAAO8B,UAiBHoS,OAbE,EACfC,UAEO,yBAAK9U,UAAU,mBAAmBzG,MAAO,CAC9CiN,QAAS,uBAEAsO,EAAO,kBAAC,GAAD,CAAcvb,MAAOA,KAAY,kBAAC,GAAD,CAAcA,MAAOA,M,sDCZ1E,MAAMwb,WAAsBpW,YAG1BC,YAAY5E,EAAOoS,GACjBvN,MAAM7E,GADoB,KAF5Bgb,kBAAoB,KAEQ,KAK5BC,mBAAqBC,IAMnB,MAAMC,EAAgBpW,KAAK/E,MAAMzJ,OAAS2kB,EAAU3kB,KAC9C6kB,EAAiBF,EAAUngB,cAAgBgK,KAAK/E,MAAMjF,YACtDsgB,EAAMvjB,YAASiN,KAAK/E,MAAMsb,eAC1BC,EAAUzjB,YAASojB,EAAUI,eAC7BE,EAAaH,EAAIvlB,KAAOylB,EAAQzlB,IAAMulB,EAAII,aAAeF,EAAQE,WACvE,OAAON,IAAkBK,GAAcJ,IAhBb,KAkB5BM,aAAeR,IACb,GAAIS,KAAgC5W,KAAK/E,MAAMzJ,KAAMwO,KAAK/E,MAAMsb,gBAAkBvW,KAAKkW,mBAAmBC,GAAY,CACpH,MAAMK,EAAUzjB,YAASojB,EAAUI,eAC7BM,EAAa7W,KAAK/E,MAAMsb,cACxBO,EAAgBD,EAAWH,aAAeF,EAAQE,YAAcG,EAAWH,aAAe1W,KAAK/E,MAAMzJ,KAAKC,MAE5GqlB,GAAiB9W,KAAK/E,MAAMjF,cAAgBmgB,EAAUngB,eACxD4gB,KAAsB5W,KAAK/E,MAAMzJ,KAAMglB,EAAQE,YAAc1W,KAAK/E,MAAMzJ,KAAKC,MAC7EmlB,KAAmB5W,KAAK/E,MAAMzJ,KAAMwO,KAAK/E,MAAMsb,cAAe,CAC5DQ,YAAa/W,KAAKiW,kBAClBS,WAAYI,EAAgBD,EAAWH,WAAa,UA5BhC,KAwD5BM,cAAgB,IAAMhX,KAAK/E,MAAMsb,cAAcG,YAAc1W,KAAK/E,MAAMzJ,KAAKC,KAtD3EuO,KAAK9I,GAAKmW,EAAQnW,GAgCpBiQ,oBA5CwBjQ,MA6CtB8I,KAAKiW,mBA7CiB/e,EA6CqB8I,KAAK9I,GA5C3C,CACL+f,QAASC,YAAWhgB,GACpBigB,KAAMjgB,EAAGC,IAAIC,SAASggB,eAAeC,gBA4CjCT,KAAgC5W,KAAK/E,MAAMzJ,KAAMwO,KAAK/E,MAAMsb,gBAC9DK,KAAmB5W,KAAK/E,MAAMzJ,KAAMwO,KAAK/E,MAAMsb,cAAe,CAC5DQ,YAAa/W,KAAKiW,kBAClBS,WAAY1W,KAAK/E,MAAM6b,cAAgB9W,KAAKgX,gBAAkB,KAC9DM,QAAStX,KAAK/E,MAAMqc,UAK1BC,mBAAmBpB,GACjBnW,KAAK2W,aAAaR,GAGpBqB,uBACMZ,KAAgC5W,KAAK/E,MAAMzJ,KAAMwO,KAAK/E,MAAMsb,gBAC9DK,KAAsB5W,KAAK/E,MAAMzJ,KAAMwO,KAAKgX,iBAMhD3V,SACE,MAAM,QACJH,EADI,KAEJ1P,EAFI,cAGJ+kB,EAHI,MAIJ/b,GACEwF,KAAK/E,MAET,OAD0B2b,KAAgCplB,EAAM+kB,GACrC,yBAAKxlB,GAAI0mB,YAAiBjmB,EAAKT,IAAKyJ,MAAOA,IAAY,yBAAKyG,UAAWC,EAAQwW,SAC7FjS,IAAKC,EAAE,6CAMxBsQ,GAAcxI,aAAe,CAC3BtW,GAAIuW,IAAUC,QAWhBsI,GAAc5T,aAAe,CAC3B5H,MAAO,GACPhJ,KAAM,GACNwE,YAAa,GACbshB,QAAS,GACTf,cAAe,IAEFP,U,sBCvGf,MAAM2B,WAA2BhY,IAAMC,UACrCC,YAAY5E,GACV6E,MAAM7E,GACN+E,KAAK5O,MAAQ,CACXwmB,YAAY,GAIhBC,kBAAkBtgB,EAAOugB,GACvB9X,KAAKC,SAAS,CACZ2X,YAAY,IAEdpgB,QAAQC,IAAI,UAAWF,GACvBC,QAAQC,IAAI,SAAUqgB,GAGxBzW,SACE,OAAIrB,KAAK5O,MAAMwmB,WACN,uBAAG3W,UAAWC,KAAQ6W,WACf,0BAAM9W,UAAWC,KAAQ4B,MACrB,kBAACmO,GAAD,OAEJ,0BAAMhQ,UAAWC,KAAQnJ,SACpB0N,IAAKC,EAAE,qDAKrB1F,KAAK/E,MAAMkH,UAQPwV,U,+BC7BAK,OATS,EACtBC,mBAEOA,EAAgB,yBAAKhX,UAAWC,KAAQgX,iBAAkBD,GAAuB,K,4CCW3EE,OAXU,EACvBjV,aACI,4BAAQzR,KAAK,SAASwP,UAAWC,KAAQkX,iBAAkBlV,QAASA,EAAS0F,MAAOnD,IAAKC,EAAL,gBAClF,kBAAC,KAAD,CAAYlL,MAAO,CACvBgI,KAAMZ,IAAOyW,WCJjB,MAeMrQ,GAAqB,CACzB+D,0BAEarR,mBAAQ,KAAMsN,GAAdtN,CAlBS,EACtB4d,SACAvM,2BAIO,yBAAK9K,UAAWC,KAAQgX,iBACrB,kBAAC,GAAD,CAAkBhV,QAHH,IAAM6I,EAAsBuM,OCHxCC,OALK,IAAM,yBAAKjW,MAAM,6BAA6BzB,OAAO,KAAK0B,QAAQ,YAAYgB,MAAM,KAAKf,KAAMZ,IAAO8G,SAClH,0BAAM7U,EAAE,gBAAgB2O,KAAK,SAC7B,0BAAM3O,EAAE,sG,sBCOD2kB,OANM,IAAM,yBAAKvX,UAAWC,KAAQuX,SAC3C,kBAAC,IAAD,CAASvW,QAASuD,IAAKC,EAAE,mDAAoDiO,UAAU,UACnF,kBAAC+E,GAAD,QCCZ,MAUMC,GAAahZ,IAAMiZ,WAAW,CAAC,EAKlCvF,KAAS,IALyB,cACnCwF,EADmC,MAEnCjQ,EAFmC,YAGnCkQ,GAES,EADNC,EACM,wDACT,MAAMC,EAhBkBF,KACjB,CACL,KAAQd,GACR,CAAC3nB,GAAO4oB,GACR,CAACzoB,GAAesoB,EAAcI,GAAgB,OAYhCC,CAAkBL,GAAaD,GAC/C,OAAO,yBAAK5X,UAAWC,KAAQkY,eAAgB/F,IAAKA,GACtC,uBAAGpS,UAAWC,KAAQmY,WAAYzQ,GACjCoQ,EAAU,kBAACA,EAAYD,GAAW,QAGnDJ,GAAW5kB,YAAc,aAMV2G,mBAAQ,KAAM,KAAM,KAAM,CACvCke,YAAY,GADCle,CAEZie,I,qFC1BH,MAAMW,GAAW,CACf9W,KAAMZ,IAAO8G,SAmFA6Q,OAhFWte,IACxB,MAAOwT,EAAU+K,GAAejI,mBAAS,OACnC,KACJ/f,EADI,cAEJ+kB,EAFI,mBAGJkD,EAHI,GAIJviB,EAJI,WAKJwf,GACEzb,EACEye,EAAgBC,YAAoBnoB,EAAKC,MAEzCmoB,EAAc,KAClBC,IACAJ,EAAmBC,EAAgBld,IAAeH,MAG9Cyd,EAAc,KAClBD,IACAJ,EAAmBC,EAAgBjd,IAAcH,MAG7Cyd,EAAY,KAChBF,IACAJ,EAAmBld,MAefsd,EAAc,IAAML,EAAY,MAEhC/nB,EAAO8kB,EAAc9kB,MAAQD,EAAKC,KAClCuoB,GAAaC,aAAcxoB,KAAUyoB,aAAezoB,IAASA,IAAS0oB,MAAkB1oB,IAAS2oB,KACjGC,EAA0Bpf,EAAMqf,aAAe7U,IAAKC,EAAL,oCAA6CD,IAAKC,EAAL,oCAE5F6U,EAAkB,IAAM,oCACnB7D,IAAepa,KAASoa,IAAeja,KAAe,kBAAC,IAAD,CAAUoM,OAAK,EAACnG,MAAO+C,IAAKC,EAAE,iBAAkBxC,QAAS4W,EAAahX,KAAM,kBAAC,KAAD,CAAWtI,MAAO8e,OACpJ5C,IAAera,KAAgBqa,IAAela,KAAgB,kBAAC,IAAD,CAAUqM,OAAK,EAACnG,MAAO+C,IAAKC,EAAE,iBAAkBxC,QAAS0W,EAAa9W,KAAM,kBAAC,KAAD,CAAWtI,MAAO8e,OApB1IkB,YAAWhpB,EAAKC,OAqBdilB,IAAena,KAAO,kBAAC,IAAD,CAAUsM,OAAK,EAACnG,MAAO+C,IAAKC,EAAE,eAAgBxC,QAAS6W,EAAWjX,KAAM,kBAAC,KAAD,CAAStI,MAAO8e,QAG7I,OAAOmB,aAAkBjpB,EAAM+kB,GAAiB,oCACtC,kBAAC,IAAD,CAAQmE,OAAK,EAAChI,WAAS,EAACxP,QAvBV,CAACqL,EAAGhO,IAAUiZ,EAAYjZ,EAAMmO,gBAwB1C,kBAACmC,GAAD,OAEHpC,GAAY,kBAAC,KAAD,CAASxW,KAAM0iB,QAAQlM,GAAWrT,QAASye,EAAapL,SAAUA,GACvE,kBAAC,IAAD,KACKuL,GAAa,oCACN,kBAACO,EAAD,MACA,kBAAC,IAAD,OAER,kBAAC,IAAD,CAAU1R,OAAK,EAAC/F,KAAM,kBAAC,KAAD,CAAYtI,MAAO,CACvDgI,KAAM,aACDE,MAAO+C,IAAKC,EAAE,0BAA2B,CAC9CkV,QAASC,YAAWrpB,EAAKC,QACvB0X,KAAM2R,aAAQtpB,EAAM0F,GAAK6N,OAAO,WACpB,kBAAC,IAAD,CAAU8D,OAAK,EAAC/F,KAAM,kBAACgO,GAAD,MAAkBpO,MAAO2X,EAAyBnX,QAnC5D,KAChCjI,EAAM8f,iBAEW,OAAbtM,GACFoL,UAkCQ,M,sBChFd,MAAMrf,GAAQ,CACZwgB,gBAAiB,CACftT,UAAW,OACX7G,OAAQ,SAEVoa,KAAM,CACJ1N,OAAQ,eACR1M,OAAQ,MACRqa,OAAQ,OACRxZ,gBAAiBE,IAAOuZ,UAI5B,MAAMC,WAAmBxb,YACvByB,SACE,MAAMga,EAAWC,aAAMtb,KAAK/E,MAAMzJ,MAClC,OAAO,yBAAKyP,UAAU,yBACV,wBAAIzG,MAAOA,GAAMygB,OACjB,yBAAKzgB,MAAOA,GAAMwgB,iBACd,kBAAC,KAAD,CAA0B9jB,GAAI8I,KAAKqN,QAAQnW,GAAI1F,KAAMwO,KAAK/E,MAAMzJ,KAAMC,KAAMuO,KAAK/E,MAAMzJ,KAAKC,KAAK8W,cAAexX,GAAIsqB,EAAUT,QAAQ,iBAO1JQ,GAAW5N,aAAe,CACxBtW,GAAIuW,IAAUC,OAAOC,YAKRyN,U,sBC3BAG,OANK,IACX,yBAAKta,UAAWC,KAAQsa,QACrB,kBAAC,IAAD,OCWGC,OAdIC,IACjB,IAAIC,OAAWrjB,EACXsjB,OAAYtjB,EAChB,MAAO,IAAIujB,KACLF,GAAYE,EAAKhnB,SAAW8mB,EAAS9mB,QAAUgnB,EAAKC,MAAM,CAACC,EAAKC,IAAMD,IAAQJ,EAASK,MAI3FL,EAAWE,EACXD,EAAYF,KAAMG,IAJTD,I,sBCaN,MAAMK,WAAarc,YAOxBC,YAAY5E,EAAOoS,GACjBvN,MAAM7E,GADoB,KAN5B7J,MAAQ,CACN8qB,YAAY,EACZC,cAAc,EACdC,gBAAgB,GAGU,KA0B5BC,aAAe,CAAC9F,EAAepgB,KAC7B,IAAK/C,OAAOgD,KAAKD,GAAStB,OACxB,OAAO0hB,EAIT,MAAM+F,EAAU/F,EAAcjY,KAAKxM,IAAIyqB,GAAG,eAAUA,IAE9CC,EAAajG,EAAckG,QAAQ3qB,IAAIyqB,GAAG,eAAUA,IAEpDG,EAAanG,EAAcpgB,QAAQrE,IAAIyqB,GAAG,eAAUA,IAkB1D,OAhBAnpB,OAAOgD,KAAKD,GAASiG,QAAQqV,IAC3B,GAAItb,EAAQsb,GAAc,CACxB,IAAIkL,GAAiB,EACrB,CAACL,EAASE,EAAYE,GAAYtgB,QAAQwgB,GAAoBA,EAAiBtpB,OAAOipB,GAAOA,EAAI9lB,YAAcgb,GAAarV,QAAQmgB,IAClII,GAAiB,EACjBJ,EAAI1qB,MAAQsE,EAAQsb,MAGjBkL,GACHD,EAAWnmB,KAAK,CACdE,UAAWgb,EACX5f,MAAOsE,EAAQsb,QAKhB,2BAAK8E,GAAZ,IACEjY,KAAMge,EACNG,QAASD,EACTrmB,QAASumB,KAzDe,KA4D5BG,aAAepB,GAAW,IAAMqB,QA5DJ,KA6D5B7G,kBAAoB,KA7DQ,KA8D5B8G,mBAAqB,KACnB,MAAMrG,EAAa1W,KAAKgX,gBAClBT,EAAgBvW,KAAKgd,+BAA+Bhd,KAAK/E,MAAMsb,cAAevW,KAAK/E,MAAMzJ,KAAKC,KAAMilB,GAE1G,IAAKH,EACH,OAAO,yBAAKtV,UAAWC,KAAQwW,SAChBjS,IAAKC,EAAE,uBAIxB,MAAMuX,EAAmBjd,KAAK/E,MAAMzJ,KAAK0rB,eAAiBld,KAAKmd,UAAUC,QAAQC,aLlFjD,GKkFuFC,GACjHriB,EAAK,2BAAQ+E,KAAK/E,OAAb,IACT6b,eAAgBrmB,EAAWuP,KAAK/E,MAAM4d,eACtCtC,gBACArV,aACA1G,MAAOwF,KAAKud,wBAAwBN,EAAkBjd,KAAKwd,WAAaxd,KAAKwd,WAAWC,aAAe,KAAMhtB,EAAWuP,KAAK/E,MAAM4d,gBAAkBjoB,EAAYoP,KAAK/E,MAAM4d,kBAG9K,OAAQnC,GACN,KAAK7M,IACL,KAAKvN,IACL,KAAKD,IAED,OAAO,qCACS2D,KAAK5O,MAAMgrB,gBAAkB,yBAAK5hB,MAAOS,EAAMT,OACzC,kBAAC,GAAD,OAER,kBAAC,KAAD,CAAqBtD,GAAI8I,KAAK9I,GAAIqf,cAAevW,KAAK0d,qBAAqBnH,EAAetb,EAAMjF,aAAc2nB,kBAAmB3d,KAAK2d,kBAAmBC,cAAc,EAAMpjB,MAAOS,EAAMT,SAI5M,KAAK+B,IAED,GAAItB,EAAMzJ,KAAKC,OAAS8K,IAAK,CAG3B,MAAMshB,EAAW5iB,EAAMsb,cAAcsH,SAAS/rB,IAAIyqB,GAC5CA,EAAIuB,MAAMntB,SAAS,aAAe4rB,EAAIuB,MAAMntB,SAAS,SAChDqP,KAAK0d,qBAAqBnB,EAAKthB,EAAMjF,aAGvCumB,GAETthB,EAAMsb,cAAN,2BAA2Btb,EAAMsb,eAAjC,IACEsH,kBAMF5iB,EAAMsb,cAAgBvW,KAAK0d,qBAAqBziB,EAAMsb,cAAetb,EAAMjF,aAM7E,OAHAiF,EAAMqc,QAAN,2BAAqBrc,EAAMqc,SAA3B,IACEyG,WAAW,IAEN,kBAAC,GAAkB9iB,GAG9B,QAGI,OADAA,EAAMsb,cAAgBvW,KAAK0d,qBAAqBziB,EAAMsb,cAAetb,EAAMjF,aACpE,kBAAC,GAAkBiF,KA5HN,KAgI5B0iB,kBAAoB,KAClB3d,KAAKC,SAAS,CACZmc,gBAAgB,KAlIQ,KAqI5BrB,eAAiB,KACf/a,KAAKC,SAAS,CACZic,YAAalc,KAAK5O,MAAM8qB,YACvBlc,KAAK/E,MAAM+iB,qBAAqBhe,KAAK/E,MAAMzJ,KAAKT,MAxIzB,KA0I5B0oB,mBAAqBhoB,IACnBA,IAASuO,KAAKgX,iBAAmBhX,KAAK/E,MAAMwe,mBAAmBzZ,KAAK/E,MAAMsb,cAAcxlB,GAAIU,IA3IlE,KA6I5BulB,cAAgB,IAAMhX,KAAK/E,MAAMsb,cAAcG,YAAc1W,KAAK/E,MAAMzJ,KAAKC,KA7IjD,KA8I5BgpB,kBAAoB,IAAM7D,KAAgC5W,KAAK/E,MAAMzJ,KAAMwO,KAAK/E,MAAMsb,eA9I1D,KA+I5B0H,gBAAkB,CAAChB,EAAkBiB,EAAgBC,KAE5C,CACLtd,OAFasd,GAAiBD,GAAqCjB,IA9IrEjd,KAAK9I,GAAKmW,EAAQnW,GAClB8I,KAAKwd,WAAa7d,IAAMqV,YACxBhV,KAAKmd,UAAYxd,IAAMqV,YACvBhV,KAAK0d,qBAAuBjC,GAAWzb,KAAKqc,cAC5Crc,KAAKgd,+BAAiCvB,GAAW7E,MACjD5W,KAAKud,wBAA0B9B,GAAWzb,KAAKie,iBAGjD,0BACEje,KAAK/E,MAAMmjB,4BACLxH,KAAoB5W,KAAK/E,MAAMzJ,OACrCwO,KAAKC,SAAS,CACZkc,cAAc,IAIlB5E,mBAAmBpB,EAAWkI,IACxBA,EAAUjC,gBAAmBjG,EAAUI,gBAAkBvW,KAAK/E,MAAMsb,eAAiBJ,EAAUngB,cAAgBgK,KAAK/E,MAAMjF,aAC5HgK,KAAKC,SAAS,CACZmc,gBAAgB,IAiItB/a,SACE,MAAM,KACJ7P,EADI,cAEJqnB,EAFI,YAGJ7iB,GACEgK,KAAK/E,OACH,WACJihB,GACElc,KAAK5O,MACH6mB,EAAgB,kBAAC,GAAD,CAAmBzmB,KAAMA,EAAM+kB,cAAevW,KAAK/E,MAAMsb,cAAekD,mBAAoBzZ,KAAKyZ,mBAAoBsB,eAAgB/a,KAAK+a,eAAgB7jB,GAAI8I,KAAK9I,GAAIwf,WAAY1W,KAAKgX,gBAAiBsD,aAActa,KAAK5O,MAAM8qB,aACxP,OAAO,oCACK,kBAAC,GAAD,CAAYtT,MAAOgO,KAAsBplB,GAAO8mB,OAAQ9mB,EAAKT,GAAIknB,cAAeA,EAAe5E,IAAKrT,KAAKmd,UAAWtE,cAAeA,EAAeC,YAAatnB,EAAK8sB,YACpK,kBAAC,GAAD,KACI,yBAAKtkB,IAAKgG,KAAK6c,aAAa7mB,GAAciL,UAAU,yBAAyBoS,IAAKA,GAAOrT,KAAKwd,WAAanK,GACtGrT,KAAK5O,MAAM+qB,cAAgBnc,KAAK+c,uBAGxClsB,EAAWgoB,IAAkBqD,EAAa,kBAAC,GAAD,CAAY1qB,KAAMA,IAAW,OAKxFyqB,GAAKzO,aAAe,CAClBtW,GAAIuW,IAAUC,QAWhBuO,GAAK7Z,aAAe,CAClB5Q,KAAM,GACNwsB,qBAAsBnY,SAASC,UAC/ByQ,cAAe,IAgBF7b,mBAbS,CAACtJ,EAAOgX,KAEvB,CACLpS,YAFmBvF,EAAW2X,EAASyQ,eAA8C/iB,GAA7BC,GAAoB3E,GAG5EmlB,cAAehe,GAAkBnH,EAAOwlB,KAA8BxO,EAAS5W,MAAMT,MAI9D6G,IAAQ,CACjCwmB,sBAAuB7H,GAAiB3e,EAASc,GAAmB6d,IACpEkD,mBAAoB,CAAC1oB,EAAIU,EAAMilB,IAAe9e,E5D/NJ,EAAC7G,EAAI2lB,KAChC,CACbjlB,KDFyC,gCCGzCV,KACA2lB,e4D2NqD6H,CAA6BxtB,EAAIU,MAG3EiJ,CAA6CuhB,ICrO5D,MAAMzhB,GAAQ,CACZkH,gBAAiBE,IAAO4c,QACxBtD,OAAQ,OACRra,OAAQ,MACR0M,OAAQ,mBAKKkR,OAFF,IAAM,wBAAIjkB,MAAOA,K,QCE9B,MACMkkB,GAAe,CACnB,QAAW,UACXC,kBAAmB,aACnBC,OAAQ,SACRC,OAAQ,UAEJrkB,GAAQ,CACZ4C,KAAM,CACJ0hB,cAAe,OACfC,YAAa,OAEfC,OAAQ,CACN7Y,UAAW,SACX3B,SAAU,OACVya,aAAc,OAEhBC,OAAQ,CACN1a,SAAU,OACV2a,WAAY,OACZ5R,OAAQ,EACRxJ,MAAOnC,IAAO8B,SAEhB0b,QAAS,CACPrb,MAAOnC,IAAO8B,QACdc,SAAU,OACV2a,WAAY,OACZE,UAAW,OACXC,SAAU,WAId,MAAMC,WAAqB3f,YAAW,eAAD,oBACnCxO,MAAQ,CACNH,SAAU,IAFuB,KAYnCuuB,eAAiB5U,IACf,MAAM6U,EAAgB7U,EAAG,YAAQA,EAAI8U,YAAZ,YAA2B9U,EAAI7Z,IAAO,GAC/D,MAAM,GAAN,OAAUiP,KAAKqN,QAAQ4J,QAAvB,+BAAqDwI,IAdpB,KAgBnCE,iBAAmB/U,IACjB,MAAMgV,EAAYhV,EAAIhU,SAASyY,OAAO,GAAG,GACzC,OAAOuQ,EAAUV,OAASU,EAAUV,OAAOnrB,YAAc,IAlBxB,KAoBnC8rB,gBAAkB,KAChB,MAAMC,EAAYjvB,EAAWmP,KAAK/E,MAAM4d,eAAiB,OAAS,KAClE,OAAO7Y,KAAK/E,MAAMrE,SAAS9E,IAAI8Y,IAC7B,MAMMsU,EA7DI,YA6DKtU,EAAI8U,YAA0B1f,KAAK2f,iBAAiB/U,GAAO8T,GAAa9T,EAAI8U,aACrFK,EAAanV,EAAIoV,KAAkB,KAAX,SACxBJ,EAAYhV,EAAIhU,SAASyY,OAAO,GAAG,GACnC4Q,EAAUL,EAAUprB,YAC1B,OAAO,wBAAIyM,UAAS,uBAAkB6e,GAAa9lB,IAAK4Q,EAAI7Z,GAAImS,QAV1C,KAChBrS,EAAWmP,KAAK/E,MAAM4d,iBACxBqH,SAASC,SAAShX,KAAOnJ,KAAKwf,eAAe5U,MASnC,uBAAG3J,UAAS,wBAAmB8e,IAC1BnV,EAAI7W,YADT,KACwB6W,EAAIwV,aAD5B,KAGA,uBAAG5lB,MAAOA,GAAM0kB,QACXA,EADL,MACgBmB,YAAWJ,EAASjgB,KAAK5O,MAAMH,WAE/C,uBAAGuJ,MAAOA,GAAM4kB,SAAUQ,EAAUjuB,UAnCtD,0BACE,MAAMV,QAAiB+O,KAAKqN,QAAQnW,GAAGwC,YAAY4mB,aAAajpB,IAAI,eACpE2I,KAAKC,SAAS,CACZhP,aAqCJoQ,SACE,OAAO,oCACK,kBAAC,GAAD,CAAYuH,MAAOnD,IAAKC,EAAE,YAAa4S,OAAQtY,KAAK/E,MAAMzJ,KAAKT,GAAI8nB,cAAe7Y,KAAK/E,MAAM4d,cAAeC,YAAa9Y,KAAK/E,MAAMzJ,KAAK8sB,YACzI,kBAAC,GAAD,MACCte,KAAK/E,MAAMrE,SAAS/B,OAAS,GAAK,yBAAKoM,UAAU,0BAC1C,wBAAIzG,MAAOA,GAAM4C,MAAO4C,KAAK6f,mBAC7B,yBAAKrlB,MAAOA,GAAMwkB,QACd,uBAAG7V,KAAMnJ,KAAKwf,kBACT/Z,IAAKC,EAAE,yBAcxC6Z,GAAa/R,aAAe,CAC1BtW,GAAIuW,IAAUC,OACduJ,QAASxJ,IAAU8S,QAUNC,OADW9lB,YANFtJ,IACf,CACLwF,SAAUxD,OAAOC,OAAOsD,GAAiBvF,MAIM,KAAzBsJ,CAA+B6kB,I,qBC7F1CkB,OAtBUxlB,GAAS,oCAC1B,kBAAC,GAAD,CAAY2N,MAAOnD,IAAKC,EAAE,qCAAsC,CACpEjU,KAAMwJ,EAAMzJ,KAAKC,OACf6mB,OAAQrd,EAAMzJ,KAAKT,GAAI8nB,cAAe5d,EAAM4d,cAAeC,YAAa7d,EAAMzJ,KAAK8sB,YACjF,yBAAK9jB,MAAO,CAChBoN,QAAS,OACT8Y,eAAgB,SAChBC,WAAY,SACZ9f,OAAQ,QAEA,kBAAC,KAAD,CAAmBrG,MAAO,CAChC+I,MAAO,IACP1C,OAAQ,IACR+f,MAAO,UACN7c,MAAM,eCNE8c,OAVS,EACtB5f,eACI,yBAAKA,UAAWA,EAAWqB,MAAM,6BAA6BC,QAAQ,YAAYC,KAAMZ,IAAOkf,SAC7F,0BAAMjtB,EAAE,gBAAgB2O,KAAK,SAC7B,0BAAM3O,EAAE,oICMDktB,OAVI,EACjB9f,eACI,yBAAKA,UAAWA,EAAWqB,MAAM,6BAA6BiB,MAAM,KAAK1C,OAAO,KAAK0B,QAAQ,YAAYC,KAAMZ,IAAOyW,QACpH,0BAAMxkB,EAAE,kFACR,0BAAMA,EAAE,gBAAgB2O,KAAK,U,0BCMrC,MAAMwe,GAAexvB,GAAQ0Z,IAAY1Z,EAAKC,MAAM6d,YAI9C2R,GAAW,CAAChmB,EAAOoS,KACvB,MAAM,KACJ7b,EADI,cAEJqnB,EAFI,uBAGJqI,GACEjmB,EACEkmB,EARgB3vB,IAAQmD,YAAQnD,EAAK0Z,IAAY1Z,EAAKC,MAAM0Z,WAAW7X,OAAO,CAAC9B,EAAM4vB,EAAOC,IAAUA,EAAMvT,UAAUwT,GAAMA,EAAGvwB,KAAOS,EAAKT,MAAQqwB,GAQpIG,CAAgB/vB,GAgBrC,OAAO,oCACG,kBAAC,GAAD,CAAYoX,MAAOoY,GAAaxvB,GAAO8mB,OAAQ9mB,EAAKT,GAAI8nB,cAAeA,EAAeC,YAAatnB,EAAK8sB,YACxG,kBAAC,GAAD,MACA,yBAAKrd,UAAU,0BACX,wBAAIA,UAAWC,KAAQ9D,MAClB+jB,EAAarvB,IAAI0vB,GAAe,wBAAIvgB,UAAWC,KAAQ1P,KAAMwI,IAAKwnB,EAAYzwB,IACvE,kBAAC0wB,GAAD,CAAiBxgB,UAAWC,KAAQwgB,WApB9CF,KACd,MAAMG,EAAe,4BAAQ1gB,UAAWC,KAAQ0gB,aAAc1e,QAAS,IAAMge,EAAuB1vB,EAAMgwB,IAC9F,kBAAC,GAAD,CAAYvgB,UAAWC,KAAQ2gB,cAE3C,OAAO,oCACK,uBAAG5gB,UAAWC,KAAQ8B,KAAMxI,MAAO,CAC3CuJ,MAAOnC,IAAOkgB,SACb3Y,KAAMiE,YAAW5b,EAAKC,KAAM+vB,EAAanU,EAAQnW,KACrCsqB,EAAY1tB,MAEhBrD,EAAWooB,GAAiB8I,EAAe,OAW/B7G,CAAQ0G,SAYrCP,GAASzT,aAAe,CACtBtW,GAAIuW,IAAUC,QAEDhT,mBAAQ,KAAM,CAC3BwmB,uBC7DoC,CAACnT,EAAe7L,IAAYtK,IAChE,MAAMgW,EAAe1C,IAAY6C,EAActc,MAAM0Z,SAC/C4W,EAAahU,EAAcH,GAActa,OAAO9B,GAAQA,EAAKT,KAAOmR,EAAQnR,IAE9EgxB,EAAWltB,QACbkZ,EAAcH,GAAgBmU,EAC9BnqB,EAASkU,GAAsBiC,KAE/BnW,EAASmU,GAAsBgC,MDoDpBrT,CAEZumB,I,UE5DI,MAMMe,GAAgC,GACvCC,GAA0B,GACnBC,GAA4B,CACvCnxB,GAAI,GACJ+C,KAAM,GACNW,OAAQ,GACRT,YAAa,GACbY,eAAgBqtB,IAiGX,MAAME,GAAyB/wB,GAASA,EAAMgxB,eAExCC,GAAiBjxB,IAAUgH,KAAQhH,EAAMgxB,gBAGzCE,GAA0BlxB,IAAU,IAAD,EAC9C,OAAO,UAAA+wB,GAAuB/wB,UAAvB,eAA+BwD,iBAAkBqtB,IC1GpDznB,GAAQ,CACZkd,QAAS,CACPjQ,QAAS,OACT8a,WAAY,WACZpD,WAAY,QAEdqD,UAAW,CACThe,SAAU,OACVie,YAAa,SACblf,MAAO,MACPgK,OAAQ,SACR3F,QAAS,QACTuX,WAAY,QAEdpH,UAAW,CACTkH,aAAc,OACdzW,UAAW,SAqFA9N,mBAxBS,CAACtJ,EAAOgX,KAE9B,IAAIvW,EAGFA,EAJqBwwB,GAAejxB,GAI5BkxB,GAAwBlxB,GACvBX,EAAW2X,EAASyQ,eACrBtO,GAAuBnZ,GAEvB8B,EAAmB9B,GAG7B,MAAMI,EAAOK,EAAM2E,KAAKhF,GAAQA,EAAKT,KAAOqX,EAAS5W,KAAKT,IAC1D,MAAO,CACLY,KAAMH,EAAOA,EAAKG,KAAO,KAUW,CACtCma,0BADapR,CAjFEO,IACf,MAAM,KACJzJ,EADI,cAEJqnB,EAFI,KAGJlnB,EAHI,sBAIJma,GACE7Q,EAEEynB,EAAeniB,IACnB,MAAMoiB,EAAW,2BAAQnxB,GAAR,IACfG,KAAM4O,EAAMwE,OAAOpS,QAErBmZ,EAAsB6W,IAGlBC,EAAW,KACf,MAAMC,EAAezvB,OAAOqO,OAAO,GAAIjH,GAAMgoB,UAAWhoB,GAAMkd,SAC9D,OAAO,yBAAKzW,UAAU,yBAAyBzG,MAAOA,GAAMud,WAChD,kBAAC,UAAD,CAAgBvd,MAAOqoB,GAAelxB,KAI9CmxB,EAAW,IACR,oCACK,kBAAC,GAAD,CAAYla,MAAOnD,IAAKC,EAAE,aAAc4S,OAAQ9mB,EAAKT,GAAI8nB,cAAeA,IACxE,kBAAC,GAAD,MACA,yBAAK5X,UAAU,0BACX,kBAAC,UAAD,CAAgB8hB,OAAQL,GACpB,kBAAC,KAAD,CAAO/vB,MAAOhB,EAAMqxB,WAAS,EAACC,WAAS,EAACzoB,MAAOA,GAAMgoB,UAAWhd,YAAaC,IAAKC,EAAE,iBAAkBC,SAAU+c,OAMhIQ,EAAY,KAChB,MAAML,EAAezvB,OAAOqO,OAAO,GAAIjH,GAAMgoB,UAAWhoB,GAAMkd,SAC9D,OAAO,oCACMzc,EAAMzJ,KAAK8sB,UAAY,kBAACpF,GAAD,MAAoB,KAC5C,yBAAKjY,UAAU,yBAAyBzG,MAAOA,GAAMud,WACjD,kBAAC,UAAD,CAAgBvd,MAAOqoB,GAAelxB,MAKxD,IAAIwxB,EAUJ,OAPEA,EADE1yB,EAAWooB,GACFiK,EACFjK,IAAkBroB,EAChB0yB,EAEAN,EAGN,oCAAGO,OC9EZ,MAAMC,GAAe,CAACC,EAAY7xB,EAAMwE,KACtC,IAAIstB,EAAS,UAAMD,EAAWE,UAAjB,4BAA8C/xB,EAAKT,IAEhE,GAAIiF,GAAeA,EAAW,IAAqBA,EAAW,GAAkBnB,OAAQ,CACtF,MAAM2uB,EAAQxtB,EAAW,GAAkBlE,IAAI2xB,GAAYA,EAASC,KAAKrvB,MAAM,KAAKgb,OAAO,GAAG,IAC9FiU,GAAS,uBAAoBE,EAAMlvB,KAAK,MAG1C,OAAOgvB,GAGHK,GAAU,EACd9K,gBACArnB,OACAwE,eACCqX,KACD,IAAIgW,EACJ,MAAMO,EAASpyB,EAAKoyB,OAMpB,OAJIA,IACFP,EAAahW,EAAQnW,GAAG2sB,OAAOC,cAActtB,KAAKutB,GAAOA,EAAI/pB,MAAQ4pB,IAGhEP,GAAcA,EAAWvvB,MAAQuvB,EAAWE,UAAY,oCACrD,kBAAC,GAAD,CAAY3a,MAAOya,EAAWvvB,KAAMwkB,OAAQ9mB,EAAKT,GAAI8nB,cAAeA,EAAeC,YAAatnB,EAAK8sB,YACrG,kBAAC,GAAD,MACA,4BAAQ1V,MAAOya,EAAWvvB,KAAMkwB,IAAKZ,GAAaC,EAAY7xB,EAAMwE,GAAciL,UAAU,yBAAyBzG,MAAO,CAClI0gB,OAAQ,WAEA,oCACF,kBAAC,GAAD,CAAYtS,MAAK,UAAKgb,EAAL,oBACjB,kBAAC,GAAD,MACA,yBAAK3iB,UAAU,yBAAyBzG,MAAO,CACrDoN,QAAS,OACT8Y,eAAgB,SAChBC,WAAY,SACZ9f,OAAQ,QAEE,kBAAC,KAAD,CAAmBkD,MAAM,WAAWmC,UAAQ,EAAC1L,MAAO,CAC5D+I,MAAO,IACP1C,OAAQ,IACR+f,MAAO,eAWf+C,GAAQnW,aAAe,CACrBtW,GAAIuW,IAAUC,QAUDhT,mBAPS,CAACtJ,EAAOgX,KAEvB,CACLpS,YAFmBvF,EAAW2X,EAASyQ,eAA8C/iB,GAA7BC,GAAoB3E,KAMjEsJ,CAAyBipB,ICpExC,MAAMnpB,GAAQ,CACZ+S,OAAQ,YACR/I,SAAU,OACV2a,WAAY,OACZpb,MAAOnC,IAAO8G,SAgBDub,OAbIhpB,GACV,oCACG,kBAAC,GAAD,CAAY2N,MAAOnD,IAAKC,EAAE,UAAW4S,OAAQrd,EAAMzJ,KAAKT,GAAI8nB,cAAe5d,EAAM4d,cAAeC,YAAa7d,EAAMzJ,KAAK8sB,YACxH,uBAAG9jB,MAAOA,IACLiL,IAAKC,EAAE,gFCZTwe,OAFO,IAAM,8B,sBCS5B,MAAMC,GAAqB,EACzBrwB,OACAE,cACAgC,cACAd,qBAYO,yBAAK+L,UAAWC,KAAQkjB,WACrB,uBAAGnjB,UAAWC,KAAQpN,MAAOA,GAC5BoB,GAAmBlB,GAAe,uBAAGiN,UAAWC,KAAQlN,aAAcA,GACtEgC,EAAYnB,OAAS,GAAK,oCACnB,uBAAGoM,UAAWC,KAAQmjB,aACjB5e,IAAKC,EAAE,oBAfJ,MACxB,MAAM4e,EAAYtuB,EAAYlE,IAAI,EAChCgC,OACAT,YACI,wBAAI4N,UAAWC,KAAQqjB,eAAgBvqB,IAAKlG,GACrCA,EADP,KACeT,EAAOvB,IAAI0yB,GAAOA,EAAI1wB,MAAMQ,KAAK,QAEtD,OAAO,wBAAI2M,UAAWC,KAAQujB,YAAaH,IAU1BI,KAWrBP,GAAmB/hB,aAAe,CAChCpO,YAAa,GACbF,KAAM,GACNoB,iBAAiB,GAiBJwF,mBAdStJ,IACtB,MAAML,EAAKsE,EAAejE,GACpBX,EAAa4Z,GAAcjZ,GAC3BuzB,EAAgB7xB,EAAkB1B,EAAOL,IAAOwB,EAGtD,MAAO,CACLuB,KAHWrD,EL8DuBW,IAAS+wB,GAAuB/wB,GAAO0C,KK9DjD8wB,CAAuBxzB,IAAUqU,IAAKC,EAAE,sBAAwBif,EAAc5wB,YAItGC,YAHkBvD,EL8DuBW,IAAS+wB,GAAuB/wB,GAAO4C,YK9DjD6wB,CAA8BzzB,GAASuzB,EAAc1wB,mBAIpF+B,YAAaC,GAAqB7E,GAClC8D,gBAAiBK,GAA4BnE,KAIlCsJ,CAAyBypB,ICpDxC,MAsCalI,GAAOhhB,IAClB,MAAM6pB,EAvCYrzB,KAClB,OAAQA,GACN,KAAKoY,IACL,KAAKxN,IACL,KAAKC,IACL,KAAKC,IACL,KAAKE,IACL,KAAKD,IACH,OAAOuoB,GAET,KAAKpoB,IACH,OAAO4iB,GAET,KAAKhT,IACL,KAAKC,IACL,KAAKF,IACH,OAAO2U,GAET,KAAKvvB,IACH,OAAOszB,GAET,KAAKjzB,IACH,OAAOkyB,GAET,KAAKxX,IACH,OAAOkX,GAET,KAAKpY,IACH,OAAO2Y,GAET,KAAKvY,IACH,OAAOwY,GAET,QACE,OAAO1D,KAKMwE,CAAYhqB,EAAMzJ,KAAKC,MACxC,OAAO,kBAACqzB,EAAD,CAAUtzB,KAAMyJ,EAAMzJ,KAAMqnB,cAAe5d,EAAM4d,cAAemF,qBAAsB/iB,EAAM+iB,wB,8CC9CrG,MAAMkH,WAAoCtlB,YAAW,eAAD,oBAYlDxO,MAAQ,CACN+zB,YAAY,GAboC,KAelDC,aAAe,KAfmC,KAgBlDC,kBAAoB,KAhB8B,KAiBlDC,eAAiB,CACfC,SAAS,GAGXC,kBACE,IAAKxlB,KAAKolB,aACR,OAGF,MAAMK,EAAWzlB,KAAK/E,MAAMyqB,aAAevlB,OAAOwlB,YAC5CC,EAAO5lB,KAAKolB,aAAaS,wBAE3BD,EAAKE,QAAUL,GAAYG,EAAKnhB,IAAMtE,OAAOwlB,YAAcF,IAC7DzlB,KAAKC,SAAS,CACZklB,YAAY,IAEdnlB,KAAK+lB,iBAITC,kBAAmB,IAAD,EAChBhmB,KAAKqlB,kBAAoBliB,KAAS,IAAMnD,KAAKwlB,kBAAmBxlB,KAAK/E,MAAMgrB,YAC3E,UAAA/F,SAASgG,uBAAuB,qBAAqB,UAArD,SAAyD9lB,iBAAiB,SAAUJ,KAAKqlB,kBAAmBrlB,KAAKslB,gBAGnHS,gBAAiB,IAAD,EACd,UAAA7F,SAASgG,uBAAuB,qBAAqB,UAArD,SAAyDnlB,oBAAoB,SAAUf,KAAKqlB,kBAAmBrlB,KAAKslB,gBAGtHne,oBACEnH,KAAKgmB,kBACLhmB,KAAKwlB,kBAGPhO,uBACExX,KAAK+lB,gBAGP1kB,SACE,MAAM,EAKFrB,KAAK/E,OALH,SACJkH,EADI,UAEJlB,EAFI,MAGJzG,GAHF,EAIKS,EAJL,kDAMM,WACJkqB,GACEnlB,KAAK5O,MACH+0B,EAAaC,KAAKnrB,EAAO,CAAC,cAAe,eAAgB,YAAa,eAC5E,OAAO,uCAAKoY,IAAKA,GAAOrT,KAAKolB,aAAe/R,EAAK7Y,MAAOA,EAAOyG,UAAWA,GAAeklB,GAC5EhB,GAAchjB,IAnEzB+iB,GAQG9iB,aAAe,CACpB6jB,WAZsB,IAatBP,aAZwB,KA2EbR,UC1Df,MAEa5H,GAA8B,EACpC,MAAM+I,WAAiBzmB,YAAW,eAAD,oBACtCxO,MAAQ,CACNk1B,cAAe,IAFqB,KAItCtI,qBAAuBuI,IACrB,MAAMC,EAA4D,mBAAxCxmB,KAAK5O,MAAMk1B,cAAcC,IAA2BvmB,KAAK5O,MAAMk1B,cAAcC,GACjGD,EAAa,eAAQtmB,KAAK5O,MAAMk1B,eAEtCA,EAAcC,IAAcC,EAC5BxmB,KAAKC,SAAS,CACZqmB,mBAVkC,KAsBtCG,eAAiBC,IACX1mB,KAAK/E,MAAM8a,MACb/V,KAAK/E,MAAM0rB,wBAAwBD,IAxBD,KA2BtCE,aAAe,CAACC,EAAQC,EAASha,KAC/Bia,YAAaja,EAAQkP,GACrB,MAAMjO,EAAgB/N,KAAK/E,MAAMrG,eAAe4B,KAAKhF,GAAQA,EAAKT,KAAO+b,EAAQkP,GAE7EjO,GAAiBiZ,YAAoBjZ,IACvCkZ,aAAalZ,IAhCqB,KAmCtCmZ,wBAA0BnZ,IACxB,MAAMoZ,EAAennB,KAAK5O,MAAMk1B,cAAcvY,EAAchd,IAE5D,OAAIo2B,IAAiC,IAAjBA,EACX/zB,OAAOqO,OAAO,GAAIsM,EAAe,CACtCrD,EAAGqD,EAAcrD,EA3CD,KA+CbqD,GA5C6B,KA8CtCqZ,iBAAmB51B,IACjB,MAAM61B,EAAiB,CAAC71B,EAAKC,KAAMuO,KAAK/E,MAAM8a,KAAO,OAAS,QAAQzhB,KAAK,KAC3E,OAAO,kBAAC,GAAD,CAA6B0F,IAAKxI,EAAKwqB,EAAG/a,UAAWomB,GAChD,kBAAC,GAAD,CAAM71B,KAAMA,EAAMqnB,cAAe7Y,KAAK/E,MAAM8a,KAAO1lB,E1FxE/C,O0FwE4D2tB,qBAAsBhe,KAAKge,yBAjDnE,KAoDtCsJ,kBAAoBz1B,GAASA,EAAMC,IAAIN,GAAQwO,KAAKonB,iBAAiB51B,IAtCrE2T,0BAA0BC,GACpBA,EAAU2Q,MACZ/V,KAAKC,SAAS,CACZqmB,cAAe,KAqCrBjlB,SACE,MAAM,KACJ0U,EADI,UAEJ9gB,EAFI,eAGJL,GACEoL,KAAK/E,MAET,IAAKhG,IAAcL,EAAeC,OAChC,OAAO,kBAAC,GAAD,CAAkBlD,KAAM8T,IAAKC,EAAE,0CAGxC,MAAM7T,EAAQkkB,EAAOnhB,EAAiBA,EAAe9C,IAAIkO,KAAKknB,yBAC9D,OAAO,yBAAKjmB,UAAU,gBACThM,EAAY,kBAAC,IAAD,CAAOsyB,aAAW,GACvB,kBAAC,IAAD,KACI,kBAAC,IAAD,QAEG,KACf,kBAAC,KAAD,CAAiBd,eAAgBzmB,KAAKymB,eAAgBG,aAAc5mB,KAAK4mB,aAAc3lB,UAAU,SAAS4lB,OAAQh1B,EAAO0b,OAAQia,IAAQC,KAAMC,cAAkBC,UAAWC,IAAiBrkB,MAAOpD,OAAO0nB,WAAYC,YAAaC,IAAmBC,YAAajS,EAAMkS,YAAalS,EAAMmS,gBAAgB,kBACxSloB,KAAKsnB,kBAAkBz1B,MAY5Cw0B,GAASjkB,aAAe,CACtBxN,eAAgB,IAGlB,MASMoT,GAAqB,CACzB2e,wB1C/EqCh0B,IAAK,CAC1ClB,KFlCuC,4BEmCvCkB,W0C0Fa+H,mBAvBS,CAACtJ,EAAOgX,KAC9B,MAAMwI,EAAoBxI,EAAS2N,KAAO5L,GAAsB/Y,GAAS0B,EAAkB1B,EAAOiE,EAAejE,IAC3GwD,EAAiBwT,EAAS2N,KAAOxL,GAAuBnZ,GAAS8B,EAAmB9B,GAC1F,MAAO,CACL6D,UAAWK,EAAsBlE,KAAWwf,EAC5Chc,mBAkBoCoT,GAVrB,CAACE,EAAYC,EAAeC,KAC7C,MAAM+f,EAAaxzB,YAAQuT,EAAWtT,gBAAgBtB,OAAO80B,KAC7D,OAAO,2BAAKjgB,GAAZ,IACE4N,KAAM3N,EAAS2N,KACf9gB,UAAWiT,EAAWjT,UACtBL,eAAgBuzB,EAChBpB,oBAIWrsB,CAAyD2rB,ICrIxE,MAAM/hB,GAAS,CACb+jB,eAAgB,CACd9a,OAAQ,MACR9F,QAAS,SACT6gB,aAAc,MACdvkB,MAAOnC,IAAOE,MACdJ,gBAAiB,UACjBb,OAAQ,GACR+G,QAAS,OACT+Y,WAAY,UAEd4H,MAAO,CACL/jB,SAAU,OACVkQ,OAAQ,UACR6N,WAAY,UAEdiG,YAAa,CACXhkB,SAAU,OACVqD,eAAgB,YAChB4N,WAAY,OACZf,OAAQ,YAIZ,MAAM+T,WAAoB7oB,YAAW,eAAD,oBAClCsD,QAAUnS,GAAM,IAAMiP,KAAK/E,MAAMiI,QAAQnS,GADP,KAElC23B,SAAW33B,GAAM,IAAMiP,KAAK/E,MAAMytB,SAAS33B,GAE3CsQ,SACE,MAAM,KACJ1N,GACEqM,KAAK/E,MACT,OAAO,yBAAKT,MAAO8J,GAAO+jB,gBACd,0BAAM7tB,MAAO8J,GAAOikB,MAAOrlB,QAASlD,KAAKkD,QAAQvP,EAAK5C,KAAtD,UACQ4C,EAAKG,KADb,aACsBH,EAAKN,OAAOwB,OAAS,EAAI4Q,IAAKC,EAAE,qBAAsB,CAClFijB,MAAOh1B,EAAKN,OAAOwB,SAChBlB,EAAKN,OAAO,GAAGS,OAEZ,0BAAM0G,MAAO8J,GAAOkkB,YAAatlB,QAASlD,KAAK0oB,SAAS/0B,EAAK5C,KACxD0U,IAAKC,EAAE,aAY5B+iB,GAAYrmB,aAAe,CACzBc,QAAS2C,SAASC,UAClB4iB,SAAU7iB,SAASC,WAEN2iB,U,sBCnDR,MAAMG,WAAkBhpB,YAAW,eAAD,oBACvCipB,cAAgB93B,IACdiP,KAAK/E,MAAMoW,iBAAiBtgB,IAFS,KAIvC+3B,aAAe/3B,IACbiP,KAAK/E,MAAMiY,wBAAwB,CACjCniB,KACA+C,KAAMkM,KAAK/E,MAAM9E,QAAQK,KAAKhF,GAAQA,EAAKT,KAAOA,GAAI+C,QAI1DuN,SACE,MAAM,QACJlL,GACE6J,KAAK/E,MACT,OAAO9E,EAAQtB,OACf,yBAAKoM,UAAWC,KAAQ6nB,IAAKvuB,MAAO,CAClCiK,IAAK,IAEMtO,EAAQrE,IAAIwB,GAAU,kBAAC,GAAD,CAAa0G,IAAK1G,EAAOvC,GAAI4C,KAAML,EAAQ4P,QAASlD,KAAK8oB,aAAcJ,SAAU1oB,KAAK6oB,kBACxG,MASrBD,GAAUxmB,aAAe,CACvBjM,QAAS,GACT6yB,iBAAkBnjB,SAASC,WAOdpL,mBAJStJ,IAAK,CAC3B+E,QAASF,GAAqB7E,KAGQ,CACtC8hB,wBAAyBF,GACzB3B,iBAAkB3a,IAFLgE,CAGZkuB,ICjDI,MACMK,GAA8B9oB,OAAOwlB,YAY3C,MAAMuD,GAAmB93B,GAASA,EAAM+3B,aCRlCC,GAAsB,CAAC71B,EAAW1B,KAItC,CACLJ,KZN+B,sBYO/BkB,MALO,2BAAQY,GAAR,IACPqB,eAAgB/C,MAOPw3B,GAAwB,MACnC53B,KZVmC,0BYgBxB63B,GAA0B93B,IACrC,MAAMC,EAAOD,EAAKC,YACXD,EAAKC,KACZ,MAAMwZ,EAAeC,IAAYzZ,GAAM0Z,SACjCpa,EAAKqa,yBACLC,EAAqBjZ,YAAsBrB,GACjD,IAAIua,EAEJ,GAAI7Z,IAAS8Z,IAAW,CACtB,MAAMC,EAAOha,EAAKga,MAAQ,EAC1BF,EAAQG,YAAsBD,EAAMha,EAAKka,eAEzCJ,EAAQM,YAA2Bpa,EAAK+3B,kBAG1C,MAAO,CACL93B,KZ/BoC,2BYgCpCkB,MAAM,qCACJ5B,KACAU,OACA6T,SAAU9T,EAAK8T,UAAY,KAC3B,CAAC2F,GAAezZ,EAAK0Q,SAClB2J,KACAR,GACAC,KAQIke,GAA6Bh4B,IAAI,CAC5CC,KZ7CyC,8BY8CzCkB,MAAOnB,ICKMkJ,mBAVStJ,IACf,CACLq4B,mBAAoBpf,GAAcjZ,GAClCs4B,oBAAqBrH,GAAejxB,GACpCoN,eAAgBN,GAAuB9M,GACvCgW,WAAY/R,EAAejE,GAC3B+3B,aAAcD,GAAiB93B,KAIK,CACtCu4B,mBAAoB5e,GACpB6e,oBAAqBP,IAFR3uB,CA5CcO,IAC3B4uB,oBAAU,KACJ5uB,EAAMwuB,mBACRxuB,EAAM0uB,qBACG1uB,EAAMyuB,qBACfzuB,EAAM2uB,uBAEP,CAAC3uB,EAAMwuB,mBAAoBxuB,EAAMyuB,sBACpCG,oBAAU,KAAO,IAAD,EACd,UAAA3J,SAAS4J,cAAc,6BAAvB,SAA8CC,OAAO,EAAG,IACvD,CAAC9uB,EAAMmM,aACV,MAAMvG,EAAS5F,EAAMkuB,azDvBS,GyDuByB7iB,GAAoBrL,EAAMuD,gBACjF,OAAO,oCACG,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,yBAAKyC,UAAU,oBAAoBzG,MAAO,CAChDqG,WAEU,kBAAC,GAAD,CAAUkV,MAAM,IAChB,kBAAC,GAAD,MACA,kBAAC,GAAD,CAAUA,MAAM,Q,4CCAjBiU,OA/BoB,EACjCpuB,gBACAquB,oBACAC,oBACAjyB,WAEA,MAAMkd,EAAU,CAAC,kBAAC,IAAD,CAAQnb,IAAI,SAAS0Y,WAAS,EAACxP,QAASgnB,GAC9CzkB,IAAKC,EAAE,WACD,kBAAC,IAAD,CAAQ1L,IAAI,SAASmwB,aAAW,EAACjnB,QAAS+mB,GAChDxkB,IAAKC,EAAE,YAElB,OAAOzN,GAAQ,kBAAC,IAAD,CAAOmD,QAAS8uB,EAAmBxP,OAAK,EAACpV,SAAS,UACnD,kBAAC,IAAD,KAAaG,IAAKC,EAAE,qBACpB,kBAAC,IAAD,KACI,0BAAMzE,UAAWC,KAAQgB,SACpBuD,IAAKC,EAAE,mKAAoK,CAC1L9J,oBAIM,kBAAC,IAAD,KACI,kBAAC,IAAD,KAAcuZ,MCTlC,MAAMiV,GAAiB,CACrBvpB,O3DjBoC,G2DkBpC6U,WAAY,OACZD,WAAY,OACZ3N,YAAa,QAER,MAAMuiB,WAAgBzqB,YAAW,eAAD,oBACrCxO,MAAQ,CACNk5B,yBAAyB,EACzBC,oBAAgBjyB,EAChBkyB,yBAAyB,EACzBrW,iBAAa7b,GALsB,KAOrCmyB,gBAAkB,KAChBzqB,KAAKC,SAAS,CACZuqB,yBAAyB,KATQ,KAYrCE,OAAS,KACP1qB,KAAK/E,MAAMyvB,SAASzzB,KAAK0zB,IACvB3qB,KAAKC,SAAS,CACZkU,YAAY,IAAD,OAAMwW,QAfc,KAmBrCC,eAAiB,KACX5qB,KAAK/E,MAAM4vB,oBACb7qB,KAAK/E,MAAM6vB,oBACX9qB,KAAK/E,MAAM2uB,uBAEX5pB,KAAK/E,MAAM8vB,oBAxBsB,KA2BrCC,UAAY,KACVhrB,KAAK/E,MAAMgwB,mBACX,MAAM9W,EAAcnU,KAAK/E,MAAMxI,YAAX,WAA6BuN,KAAK/E,MAAMxI,aAAgB,IAC5EuN,KAAKC,SAAS,CACZkU,iBA/BiC,KAkCrC+V,kBAAoB,KAClBlqB,KAAKC,SAAS,CACZuqB,yBAAyB,KApCQ,KAuCrCP,kBAAoB,KAClBjqB,KAAKC,SAAS,CACZuqB,yBAAyB,IAE3BxqB,KAAK/E,MAAMiwB,SAASlrB,KAAK/E,MAAMxI,aAAawE,KAAK,KAC/C+I,KAAKC,SAAS,CACZkU,YAAa,SA7CkB,KAiDrCgX,oBAAsBr0B,UACpB,GAAIs0B,GAAgBA,EAAav2B,OAAQ,CACvC,MAAMw2B,QAAiBrrB,KAAKqN,QAAQnW,GAAGwC,YAAY4mB,aAAajpB,IAAI,eAC9Di0B,EAAcF,EAAa50B,KAAKkP,GAAKA,EAAE6lB,SAAWF,GAA2B,SAAf3lB,EAAE8lB,UAElEF,GAAeA,EAAY34B,OAC7BqN,KAAK/E,MAAMwwB,YAAYzrB,KAAK/E,MAAMxI,YAAa64B,EAAY34B,SAvD5B,KA2DrC+4B,oBAAsB,KAChB1rB,KAAK/E,MAAMxI,cAAgBuN,KAAK5O,MAAMm5B,gBACxCjxB,GAAkB0G,KAAK/E,MAAMxI,aAAawE,KAAKszB,GAAkBvqB,KAAKC,SAAS,CAC7EsqB,qBA9D+B,KA2ErCoB,wBAA0B,KACxB3rB,KAAKC,SAAS,CACZqqB,yBAA0BtqB,KAAK5O,MAAMk5B,2BA7EJ,KAgFrCsB,oBAAsB,IAAM5rB,KAAK/E,MAAM4wB,cAAgB7rB,KAAK/E,MAAMxI,YAAc,kBAAC,GAAD,CAAqBmJ,cAAeoE,KAAK/E,MAAMW,cAAequB,kBAAmBjqB,KAAKiqB,kBAAmBC,kBAAmBlqB,KAAKkqB,kBAAmBjyB,KAAM+H,KAAK5O,MAAMo5B,0BAA8B,KAhF9O,KAiFrCsB,kBAAoB,IAAM9rB,KAAK5O,MAAMm5B,gBAAkBvqB,KAAK5O,MAAMm5B,eAAex5B,GAAK,kBAAC,KAAD,CAAmBkQ,UAAU,qBAAqB/J,GAAI8I,KAAKqN,QAAQnW,GAAIe,KAAM+H,KAAK5O,MAAMk5B,wBAAyB3U,eAAgB3V,KAAK2rB,wBAAyBI,kBAAmB/rB,KAAK5O,MAAMm5B,eAAgByB,kBAAmB,CAAC,OAAQ,eAC/TC,mBAAoBjsB,KAAKmrB,oBAAqBe,mBAAoBr0B,GAAOL,QAAQC,IAAI,2BAA4BI,KAAW,KAlFvF,KAmFrCs0B,oBAAsB,KACpB,MAAMC,EAAmBpsB,KAAK/E,MAAM4vB,mBAAqBplB,IAAKC,EAAE,sBAAwBD,IAAKC,EAAE,iBAC/F,OAAO,yBAAKzE,UAAWC,KAAQyG,cACnB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQgL,SAAO,EAACzP,QAASlD,KAAK0qB,QACzBjlB,IAAKC,EAAE,iBAEZ,kBAAC,IAAD,CAAQxC,QAASlD,KAAK4qB,gBACjBwB,GAGJpsB,KAAK/E,MAAMxI,YAAc,kBAAC,IAAD,CAAQyQ,QAASlD,KAAK2rB,yBACvClmB,IAAKC,EAAE,cACA,KACf1F,KAAK/E,MAAMxI,aAAeuN,KAAK/E,MAAM4wB,aAAe,kBAAC,IAAD,CAAQ3oB,QAASlD,KAAKyqB,iBAClEhlB,IAAKC,EAAE,WACA,QAhClCyB,oBACEnH,KAAK0rB,sBAGPnU,qBACEvX,KAAK0rB,sBAgCPrqB,SACE,GAAIrB,KAAK5O,MAAM+iB,YACb,OAAO,kBAAC,IAAD,CAAUlR,GAAIjD,KAAK5O,MAAM+iB,cAGlC,MAAM,aACJkY,GACErsB,KAAK/E,MACHsM,EAAmBjB,G3DpIA,G2DqInBgmB,EAAiBD,EAAe5mB,IAAKC,EAAE,uBAAyBD,IAAKC,EAAE,oBAC7E,OAAO,oCACK,kBAAC,GAAD,CAAY7E,OAAQ0G,EAAkB5F,UAAU,GAC5C,yBAAKnH,MAAO4vB,IACPiC,EAAersB,KAAKmsB,sBAAwB,KAE7C,yBAAKlrB,UAAWC,KAAQqrB,eACpB,kBAAC,IAAD,CAAQ7Z,WAAS,EAACxP,QAASlD,KAAKgrB,WAC3BsB,MAKjB,yBAAKrrB,UAAWC,KAAQsrB,YACvBxsB,KAAK8rB,oBACL9rB,KAAK4rB,wBAmBtBvB,GAAQ7c,aAAe,CACrBtW,GAAIuW,IAAUC,QAmCDhT,mBAhCStJ,IACtB,MAAMmC,EAAY4W,GAAsB/Y,GACxC,IAAIy6B,EACAQ,EAUJ,MnDpCgCj7B,KACxBgH,KAAQhH,EAAMgZ,gBAAsD,KAApCD,GAAsB/Y,GAAOL,GmD2BjE07B,CAAmBr7B,IACrBy6B,GAAe,EACfQ,GAAe,IAEfA,IAAe94B,EAAUkB,QAASlB,EAAUkB,OAAO6gB,OACnDuW,IAAet4B,EAAUkB,QAASlB,EAAUkB,OAAOiJ,QAG9C,CACLjL,YAAac,EAAUxC,GACvB6K,cAAerI,EAAUO,KACzB+3B,eACAhB,mBAAoBvgB,GAAuBlZ,GAC3Ci7B,iBAIuBz0B,IAAQ,CACjCgyB,oBAAqB,IAAMhyB,EHvLQ,CACnCnG,KZVmC,0BeiMnCq5B,kBAAmB,IAAMlzB,EjDpKY,CACrCnG,KFrBsC,6BmDyLtCi5B,OAAQ,IAAM9yB,EAASoU,MAAkB/U,KAAKlG,GAAMA,GACpDm6B,SAAUn6B,GAAM6G,EAASiG,GAAiB9M,IAC1Ck6B,iBAAkB,IAAMrzB,EjD7KU,CAClCnG,KFxBkC,yBmDqMlCg6B,YAAa,CAAC16B,EAAI4B,IAAUiF,E3EpLW,EAACnF,EAAaE,KAAd,CACvClB,KnBfwC,6BmBgBxCgB,cACAE,U2EiLqC+5B,CAA0B37B,EAAI4B,IACnEo4B,iBAAkB,IAAMnzB,EjD5KW,CACnCnG,KFnBoC,6BmDiMvBiJ,CAA6C2vB,I,yCCtK7CsC,OAlCG,EAChBC,eAEA,MAAMvc,EAAWwc,IAAqB1sB,OAAO0nB,WAAagF,IAAqB1sB,OAAO0nB,WAChFiF,EAAaF,EAAWnnB,IAAKC,EAAE,oBAAsBD,IAAKC,EAAE,qBAClE,OAAO,yBAAKzE,UAAWC,KAAQ6rB,aACrB,uBAAG9rB,UAAWC,KAAQ4rB,YAAtB,UACQrnB,IAAKC,EAAE,iBADf,aACoConB,IAEpC,yBAAKtyB,MAAO,CAClB6V,aAEU,uBAAGpP,UAAWC,KAAQ4W,MAAtB,UACQrS,IAAKC,EAAE,0BADf,MAGA,yBAAKzE,UAAWC,KAAQ4W,MACpB,wBAAI7W,UAAWC,KAAQ8rB,UACnB,4BAAKvnB,IAAKC,EAAE,mCACZ,4BACKD,IAAKC,EAAE,yDAEZ,4BACKD,IAAKC,EAAE,2FAKxB,wBAAIzE,UAAWC,KAAQ+rB,YC1BpBC,OAJY,IAAM,yBAAK5qB,MAAM,6BAA6BiB,MAAM,KAAK1C,OAAO,KAAK2B,KAAMZ,IAAO8G,QAASnG,QAAQ,aACtH,0BAAM1O,EAAE,ma,sBCgCDs5B,OAzBS,EACtBp8B,SAEA,MAAMwS,EAAQspB,IAAqB1sB,OAAO0nB,WAAagF,IAAqB1sB,OAAO0nB,WACnF,OAAO,oCACG,yBAAK5mB,UAAWC,KAAQ6W,WACpB,yBAAK9W,UAAWC,KAAQksB,MAAO5yB,MAAO,CAC9C+I,UAEY,kBAAC,IAAD,CAAMtC,UAAWC,KAAQ8B,KAAMC,GAAE,WAAMlS,IACnC,kBAAC,IAAD,KACI,kBAACs8B,GAAD,MACC5nB,IAAKC,EAAE,wBAGhB,kBAAC,IAAD,CAAQxC,QAAS/C,OAAOmtB,OAAQ7nB,IAAKC,EAAE,YAG/C,yBAAKzE,UAAWC,KAAQsrB,c,qBC1B7B,MAAMe,GAAkBC,IAAY,IAAD,EACxC,IAAKA,IAAYA,EAAQxc,UACvB,OAAO,KAMT,MAAMyc,EAAU,UAAGD,EAAQxc,UAAU3c,MAAM,KAAK,UAAhC,aAAG,EAAiCq5B,MAAM,WAE1D,OAAID,EACKE,SAASF,EAAW,IAEpB,MCOJ,MAAMG,WAA4BhuB,YAAW,eAAD,oBACjD6mB,eAAiBC,IACf1mB,KAAK/E,MAAM4yB,sBAAsBnH,IAFc,KAIjDoH,iBAAmBt8B,IACjB,GAAIA,EAAKC,OAAS8Z,IAChB,OAAO,EAGT,MAAMwiB,EAAa/tB,KAAK/E,MAAMrG,eAAetB,OAAO0oB,GAAKA,EAAEvqB,OAAS8Z,KAC9DyiB,EAAmBC,KAAOF,EAAY,CAAC,MAC7C,OAAOv8B,EAAK08B,IAAMF,EAAiB,GAAGE,GAXS,KAajD9G,iBAAmB51B,IAEjB,MAAM61B,EAAiB8G,KAAG,QAAS,SAAV,UAAuB38B,EAAKC,MAAQ,CAC3D,mBAAoBuO,KAAK/E,MAAMmzB,WAAapuB,KAAK8tB,iBAAiBt8B,GAClE8sB,YAAa9sB,EAAK8sB,YAEpB,OAAO,yBAAKtkB,IAAKxI,EAAKwqB,EAAG/a,UAAWomB,GACxB,kBAAC,GAAD,CAAM71B,KAAMA,EAAMqnB,cAAeroB,MApBE,KAuBjD82B,kBAAoBz1B,GAASA,EAAMC,IAAIN,GAAQwO,KAAKonB,iBAAiB51B,IAErE68B,sBACE,MAAMC,ED9BiCC,KACzC,MAAMC,EAAQp7B,OAAOgD,KAAK8U,KACpBujB,EAA2B95B,YAAQ45B,GAAUz8B,IAAIwvB,IACrD,MAAM7vB,EAAOi9B,MAAMC,KAAKrN,EAAGsN,WAAWp4B,KAAKyK,GAAautB,EAAMK,QAAQ5tB,IAAc,GAC9E2kB,EAAOtE,EAAGuE,wBACVqI,EAAIX,GAAgBjM,EAAG9mB,QAAUmzB,SAAS/H,EAAKsI,GACrD,MAAO,CACLz8B,OACAm9B,UAAWtN,EAAGsN,UACdE,QAASZ,EAAIP,SAAS/H,EAAK/kB,QAC3BygB,QAGJ,OAAO2M,KAAOQ,EAA0B,CAAC,aCiBhBM,CAA4BL,MAAMC,KAAKzO,SAAS8O,iBAAiB,sBACxF,IAAIC,EAAkB,EAClBC,EAAiB,EACjBC,GAAoB,EAExB,IAAK,IAAInT,EAAIsS,EAAez5B,OAAS,EAAGmnB,GAAK,IAAKA,EAAG,CACnD,MAAMxqB,EAAO88B,EAAetS,GAE5B,GAAIxqB,EAAKC,OAAS8Z,IAAW,CAC3B,GAAK4jB,EAEE,CACLF,EAAkBz9B,EAAKs9B,QACvB,MAHAt9B,EAAK8vB,GAAGsN,UAAUlf,IAAI,eAKnB,CACLyf,GAAoB,EACpB,MAAMC,EAAiB59B,EAAKs9B,QAExBM,EAAiBF,IACnBA,EAAiBE,IAKvB,MACMC,EAAcnP,SAAS4J,cAAc,sBAGrCzK,EAAY4P,EAJC,IAUnB,GAJII,IACFA,EAAY70B,MAAMqG,OAAlB,UAA8Bwe,EAA9B,OAGErf,KAAK/E,MAAMmzB,UAAW,CAExB,MAAMkB,EAAapP,SAAS4J,cAAc,qBAE1C,GAAIwF,GAAcA,EAAW90B,OAAS80B,EAAW90B,MAAMwW,UAAW,CAChE,MAAMxF,EAAO+hB,GAAgB+B,EAAW90B,OAClC+0B,EAAarP,SAAS4J,cAAc,gBAC1CyF,GAAcA,EAAWxF,OAAO,EAAGve,EAAO,MAKhDrE,oBACEnH,KAAKquB,sBAGP9W,qBACEvX,KAAKquB,sBAGPhtB,SACE,MAAM,UACJpM,EADI,eAEJL,GACEoL,KAAK/E,MAET,IAAKhG,IAAcL,EAAeC,OAChC,OAAO,kBAAC,GAAD,CAAkBlD,KAAM8T,IAAKC,EAAE,0CAGxC,MAAMnC,EAAQspB,IAAqB1sB,OAAO0nB,WAAagF,IAAqB1sB,OAAO0nB,WACnF,OAAO,yBAAK5mB,UAAU,gBACThM,EAAY,kBAAC,IAAD,CAAOsyB,aAAW,GACvB,kBAAC,IAAD,KACI,kBAAC,IAAD,QAEG,KACf,kBAAC,KAAD,CAAiBd,eAAgBzmB,KAAKymB,eAAgBxlB,UAAU,SAAS4lB,OAAQjyB,EAAgB2Y,OAAQia,IAAQC,KAAMC,cAAkBC,UAAWC,IAAiBrkB,MAAOA,EAAOukB,YAAaC,IAAmBC,aAAa,EAAOC,aAAa,EAAOC,gBAAgB,kBACtQloB,KAAKsnB,kBAAkB1yB,MAY5Cg5B,GAAoBxrB,aAAe,CACjCxN,eAAgB,IAYH8F,mBATStJ,IACtB,MAAMwf,EAAoBuR,GAAuB/wB,GACjD,MAAO,CACL6D,UAAWK,EAAsBlE,KAAWwf,EAC5Chc,eAAgB0tB,GAAwBlxB,GAAOkC,OAAO80B,KACtDgG,UAAW/jB,GAAcjZ,KAIW,CACtCy8B,sBRnI0Cl7B,IAAK,CAC/ClB,KZXwC,6BYYxCkB,WQgIa+H,CAEZkzB,I,qCChIH,MAAM4B,GAAkBlpB,GAAoB,G3EjBV,E2EmB5BmpB,GAAaC,IAEjB,IAAIC,EAAI,EACR,MAEMC,EAAcC,GAFF,EAEwB,EAAIA,EAE9C,IAAIC,EAAWF,EAAY,GACvBH,GAAa,EAEjB,KAAOK,EAAWJ,GAIhB,GAHAI,EAAWF,EAAYD,KACrBA,EAEEG,IAAaJ,EAAG,CAClBD,GAAa,EACb,MAIJ,OAAOA,GAkCF,MAAMM,WAA6BnwB,YAAW,eAAD,oBAClDxO,MAAQ,CACN4+B,aAAa,GAFmC,KAIlDC,yBAA2B,KACrBjwB,KAAK/E,MAAM1H,YACbyM,KAAKC,SAAS,CACZ+vB,aAAa,IAEfhwB,KAAK/E,MAAMi1B,kBAAkBlwB,KAAK/E,MAAM1H,UAAWyM,KAAK/E,MAAMpJ,OAG9DmO,KAAK/E,MAAMpJ,MAAMuK,QAAQ5K,IACnBA,EAAKkZ,EAAIylB,MACX3+B,EAAK8sB,WAAY,EACjBte,KAAK/E,MAAMm1B,oBAAoBh9B,OAAOqO,OAAO,GAAIjQ,EAAM,CACrDkZ,EAAGylB,UA/CO,GACpBt+B,QACAw+B,uBAMA,IAAI7kB,EAAO,EACX,MAAM8kB,EAAW,GAEjB,IAAK,IAAIC,EAAU,EAAGA,GAAW1+B,EAAMgD,SAAU07B,EAC/B,IAAZA,EACF/kB,GAAQ,GACCikB,GAAWc,GACpB/kB,GAAQ,GAERA,GAAQ,GAGV8kB,EAAS/5B,KAAKiV,GAGhB,IAAK,IAAIwQ,EAAI,EAAGA,EAAInqB,EAAMgD,SAAUmnB,EAClCqU,EAAiB,CACf5+B,KAAM8Z,IACNC,KAAM8kB,EAAStU,MAyBfwU,CAAcxwB,KAAK/E,OACnB+E,KAAK/E,MAAMo1B,iBAAiB,CAC1B5+B,KAAMka,IACN4d,kBAAkB,MAvB0B,KAsClDkH,gBAAkB,IACTzwB,KAAK/E,MAAMy1B,SAAW,CAC3Bhb,WAAYib,IAAQC,KACpB/vB,OAAQb,KAAK/E,MAAMkuB,aAAeqG,GjElHR,IiEmHxB,CACF3uB,OAAQb,KAAK/E,MAAMkuB,aH/Ge,IGgGtChiB,oBACEnH,KAAKiwB,2BAGP1Y,qBACOvX,KAAK5O,MAAM4+B,aACdhwB,KAAKiwB,2BAaT5uB,SACE,OAAO,qCACOrB,KAAK/E,MAAMy1B,UAAY,kBAAC,GAAD,CAAiB3/B,GAAIiP,KAAK/E,MAAM1H,UAAUxC,KACnE,yBAAKkQ,UAAWktB,KAAGjtB,KAAQ2vB,QAAS,eAAgBr2B,MAAOwF,KAAKywB,oBAC1DzwB,KAAK/E,MAAMy1B,UAAY,kBAAC,GAAD,CAAW9D,UAAU,IAC9C,yBAAK3rB,UAAWC,KAAQ4vB,UAAWt2B,MAAO,CACpD+I,MAAOspB,MAEO,kBAAC,GAAD,UAuCTnyB,mBAtBS,CAACtJ,EAAOgX,KAC9B,MAAMrX,EAAKsE,EAAejE,GAE1B,GAAIgX,EAASsoB,SAAU,CAErB,MAAO,CACLn9B,UAFgB4W,GAAsB/Y,GAGtCL,KACAc,MAAO0Y,GAAuBnZ,GAC9B+3B,aAAcD,GAAiB93B,IAKnC,MAAO,CACLmC,UAFgBxC,EAAK+B,EAAkB1B,EAAOL,GAAM,KAGpDA,KACAc,MAAOqB,EAAmB9B,GAC1B+3B,aAAcD,GAAiB93B,KAIK,CACtC8+B,kBAAmB9G,GACnBiH,iBAAkB/G,GAClB8G,oBAAqB5G,IAHR9uB,CAIZq1B,IChKI,MAAMgB,WAAsBnxB,YAAW,eAAD,oBAC3CxO,MAAQ,CACN4+B,aAAa,GAF4B,KAI3CgB,kBAAoB,KACdhxB,KAAK/E,MAAM1H,YACbyM,KAAKC,SAAS,CACZ+vB,aAAa,IAEfhwB,KAAK/E,MAAMg2B,iBAAiBjxB,KAAK/E,MAAM1H,UAAWyM,KAAK/E,MAAMpJ,SATtB,KAuB3Cq/B,WAAa,KACX,GAAIlxB,KAAK/E,MAAM4vB,mBACb,OAAO,kBAAC,GAAD,CAAoB6F,UAAU,IAGvC,MAAM7vB,EAASb,KAAK/E,MAAMkuB,alEvCE,GkEuCgC7iB,GAAoB,GAChF,OAAO,yBAAKrF,UAAU,oBAAoBzG,MAAO,CAC/CqG,WAEU,kBAAC,GAAD,CAAUkV,MAAM,IAChB,kBAAC,GAAD,CAAUA,MAAM,MApB9B5O,oBACEnH,KAAKgxB,oBAGPzZ,qBACOvX,KAAK5O,MAAM4+B,aACdhwB,KAAKgxB,oBAkBT3vB,SACE,OAAO,oCACK,kBAAC,GAAD,MACCrB,KAAK/E,MAAMoxB,aAAersB,KAAKkxB,aAAe,kBAAC,GAAD,CAAkBv/B,KAAM8T,IAAKC,EAAE,iBA2B/EhL,mBAbStJ,IACtB,MAAML,EAAKsE,EAAejE,GACpBmC,EAAYxC,EAAK+B,EAAkB1B,EAAOL,GAAM,KAEtD,MAAO,CACLwC,YACA84B,gBAHmB94B,IAAaA,EAAUkB,SAASlB,EAAUkB,OAAO6gB,OAIpEzjB,MAAOqB,EAAmB9B,GAC1By5B,mBAAoBvgB,GAAuBlZ,GAC3C+3B,aAAcD,GAAiB93B,KAIK,CACtC6/B,iBxDnEgC,CAAC19B,EAAW1B,KAIrC,CACLJ,KFjBmC,0BEkBnCkB,MALO,2BAAQY,GAAR,IACPqB,eAAgB/C,OwDgEL6I,CAEZq2B,ICxEH,MAAMI,WAAqBvxB,YACzBuH,oBACEnH,KAAK/E,MAAMm2B,kBAGb/vB,SACE,MAAMR,EAASb,KAAK/E,MAAMkuB,anEdE,GmEcgC7iB,GAAoB,GAChF,OAAO,oCACK,kBAAC,GAAD,MACCtG,KAAK/E,MAAM4vB,mBAAqB,kBAAC,GAAD,CAAoB6F,UAAU,IAAW,yBAAKzvB,UAAU,oBAAoBzG,MAAO,CAC5HqG,WAEgB,kBAAC,GAAD,CAAUkV,MAAM,IAChB,kBAAC,GAAD,CAAUA,MAAM,OAkBzBrb,mBALStJ,IAAK,CAC3By5B,mBAAoBvgB,GAAuBlZ,GAC3C+3B,aAAcD,GAAiB93B,KAGO,CACtCggC,gBzDnBmC,MACnC3/B,KFpBiC,yB2DqCpBiJ,CAEZy2B,IC7BI,MAAME,WAAsBzxB,YAAW,eAAD,oBAC3CwnB,iBAAmB51B,GAAQ,yBAAKwI,IAAKxI,EAAKwqB,EAAG/a,UAAWktB,KAAG38B,EAAKC,KAAM,QAAS,SACrE,kBAAC,GAAD,CAAMD,KAAMA,EAAMqnB,cAAetoB,KAFA,KAI3C+2B,kBAAoBz1B,GAASA,EAAMC,IAAIN,GAAQwO,KAAKonB,iBAAiB51B,IAErE6P,SACE,MAAM,UACJpM,EADI,eAEJL,GACEoL,KAAK/E,MAET,IAAKhG,IAAcL,EAAeC,OAChC,OAAO,kBAAC,GAAD,CAAkBlD,KAAM8T,IAAKC,EAAE,0CAGxC,MAAMnC,EAAQspB,IAAqB1sB,OAAO0nB,WAAagF,IAAqB1sB,OAAO0nB,WACnF,OAAO,oCACM5yB,EAAY,kBAAC,IAAD,CAAOsyB,aAAW,GACvB,kBAAC,IAAD,KACI,kBAAC,IAAD,QAEG,KACf,kBAAC,KAAD,CAAiBtmB,UAAU,eAAe4lB,OAAQjyB,EAAgB2Y,OAAQia,IAAQC,KAAMC,cAAkBC,UAAWC,IAAiBrkB,MAAOA,EAAOukB,YAAaC,IAAmBC,aAAa,EAAOC,aAAa,EAAOC,gBAAgB,kBACvOloB,KAAKsnB,kBAAkB1yB,MAU5Cy8B,GAAcjvB,aAAe,CAC3BxN,eAAgB,IAWH8F,mBARStJ,IACtB,MAAMwf,EAAoBuR,GAAuB/wB,GACjD,MAAO,CACL6D,UAAWK,EAAsBlE,KAAWwf,EAC5Chc,eAAgBD,YAAQ2tB,GAAwBlxB,IAAQkC,OAAO80B,OAIpD1tB,CAAyB22B,I,8BC7CjC,MAAMC,WAAuB1xB,YAAW,eAAD,oBAC5CxO,MAAQ,CACN4+B,aAAa,GAF6B,KAI5CuB,mBAAqB,KACnB,GAAIvxB,KAAK/E,MAAM1H,UAAW,CACxByM,KAAKC,SAAS,CACZ+vB,aAAa,IAGf,MAAMwB,EAAcvD,KAAOjuB,KAAK/E,MAAMpJ,MAAO,CAAC,IAAK,MACnDmO,KAAK/E,MAAMi1B,kBAAkBlwB,KAAK/E,MAAM1H,UAAWi+B,GAEnD,IAAIC,EAAc,EAClBzxB,KAAK/E,MAAMpJ,MAAMuK,QAAQ5K,IACnBA,EAAKC,OAASM,MAChB0/B,GAAe,EACfzxB,KAAK/E,MAAMy2B,oBAAoBlgC,EAAKT,OAIxCiP,KAAK/E,MAAMpJ,MAAMuK,QAAQ5K,IACvBwO,KAAK/E,MAAMm1B,oBAAoBh9B,OAAOqO,OAAO,GAAIjQ,EAAM,CACrDiZ,EAAGknB,IACHjnB,EAAGknB,SAKP,IAAK,IAAI5V,EAAI,EAAGA,EAA8C,GAAzChc,KAAK/E,MAAMpJ,MAAMgD,OAAS48B,GAAkBzV,GAAK,EACpEhc,KAAK/E,MAAMo1B,iBAAiB,CAC1B5+B,KAAM8Z,IACNjG,SAAU0W,EACVtQ,UAAU,IAId1L,KAAK/E,MAAMo1B,iBAAiB,CAC1B5+B,KAAMka,IACN4d,kBAAkB,MAKxBpiB,oBACEnH,KAAKuxB,qBAGPha,qBACOvX,KAAK5O,MAAM4+B,aACdhwB,KAAKuxB,qBAITlwB,SACE,MAAMR,EAASb,KAAK/E,MAAMkuB,aP/DU,GOgEpC,OAAO,oCACK,kBAAC,GAAD,CAAiBp4B,GAAIiP,KAAK/E,MAAM1H,UAAUxC,KAC1C,yBAAKkQ,UAAWC,KAAQ2vB,QAASr2B,MAAO,CAChDqG,WAEY,kBAAC,GAAD,CAAW+rB,UAAU,IACrB,yBAAK3rB,UAAWC,KAAQ4vB,UAAWt2B,MAAO,CACpD+I,MAAOspB,MAEO,kBAAC,GAAD,UA4BTnyB,mBAXStJ,IACtB,MAAML,EAAKsE,EAAejE,GAE1B,MAAO,CACLmC,UAFgBxC,EAAK+B,EAAkB1B,EAAOL,GAAM,KAGpDA,KACAc,MAAOqB,EAAmB9B,GAC1B+3B,aAAcD,GAAiB93B,KAIK,CACtC8+B,kBAAmB9G,GACnBiH,iBAAkB/G,GAClBoI,oBbhEwC/+B,IAAK,CAC7ClB,KZ1CyC,8BY2CzCkB,Ua+DAy9B,oBAAqB5G,IAJR9uB,CAKZ42B,IClHI,MC8BDO,GAAe,CACnB,KAAQ,kBAAC,GAAD,MACR,CAACxhC,GAAO,kBAAC,GAAD,MACR,CAACC,GAAM,kBAAC,GAAD,MACP,CAACC,GAAQ,kBAAC,GAAD,MACT,CAACC,GAAe,kBAAC,GAAD,OAuFHkK,mBAVS,CAACtJ,EAAOgX,KAAc,IAAD,IAC3C,MAAMvV,EAAaI,EAAkB7B,GACrC,MAAO,CACL0gC,kBAAmB15B,KAAQvF,GAC3Bk/B,kBAAmB/+B,EAAsB5B,GACzCL,GAAIsE,EAAejE,GACnB4gC,SAAS,UAAA5pB,EAASslB,aAAT,mBAAgBuE,cAAhB,eAAwBx/B,cAAe,OAIZ,CACtCy/B,gBvFxF8BnhC,GAAM+F,MAAOc,EAAU6D,KAMrD,IACE,MAAMrK,EAAQqK,IACd,IAAI02B,EAAoB,KAExB,GAAIphC,EACFohC,EAAoBr/B,EAAkB1B,EAAOL,IAAO,SAC/C,CACL,MAAMqhC,GFjD2BphC,EEiDWG,EAAiBC,GFjDhB8K,aAAam2B,QAAb,kCAAgDrhC,UAAesH,GEkDtGg6B,EAAOx/B,EAAkB1B,EAAOghC,GACtCD,EAAoBC,GAAeE,EAAOA,EnBoFHlhC,IAAS,IAAIkX,IAAUnV,EAAsB/B,GAAQ,MAAO,kBAAmBkX,IAAU7U,EAAwBrC,GAAQ,MAAO,gBmBpFtHmhC,CAA8BnhC,GAAO,GAItFwG,EADEu6B,EACO32B,GAA0B22B,EAAkBphC,IAE5CsK,GlBhD0B,MkBkDrC,MAAOxD,GACP,OAvBcN,EAuBCM,EAtBfL,QAAQC,IAAI,+BAAgCF,GACrCA,EAFOA,MFrCqBvG,GyF6HrCwhC,gBD5H+B7/B,IAAK,CACpClB,KfF+B,oBeG/BkB,WCwHa+H,CArFU,EACvB3J,KACAL,OACAqhC,mBACAD,oBACAE,UACAE,kBACAM,sBAEA3I,oBAAU,KA1BmBn5B,KAC7B,MAAM0b,EAAS8T,SAASuS,qBAAqB,UAAU,GAEnD7hC,EAAYF,GACd0b,EAAOwiB,UAAUlf,IAAI,UAErBtD,EAAOwiB,UAAU8D,OAAO,WAqBxBC,CAAuBjiC,IACtB,CAACA,IACJm5B,oBAAU,KACJkI,IAAqBD,GACvBI,EAAgBF,IAEjB,CAACD,EAAkBD,EAAmBE,IACzCnI,oBAAU,KACR,MAAM+I,EAAWzvB,KAAS,IAAMqvB,EAAgBryB,OAAOwlB,aAAc,KAErE,OADAxlB,OAAOC,iBAAiB,SAAUwyB,GAC3B,KACLzyB,OAAOY,oBAAoB,SAAU6xB,KAEtC,IAEEb,EAQDrhC,IAASJ,EACJuhC,GAAanhC,GAGlBohC,EACK,oCACK,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,CAAkBngC,KAAM8T,IAAKC,EAAE,uEzGtEN,MyG0EnC3U,EACK,oCACK,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,CAAkBY,KAAM8T,IAAKC,EAAE,oCAIlC,OAAP3U,EACK,kBAAC,IAAD,CAAOw2B,aAAW,GACb,kBAAC,IAAD,KACI,kBAAC,IAAD,QAKXsK,GAAanhC,GAnCX,kBAAC,IAAD,CAAO62B,aAAW,GACb,kBAAC,IAAD,KACI,kBAAC,IAAD,U,QCnDb,MAAMsL,WAAYjzB,YACvBuH,oBACEnH,KAAK/E,MAAM63B,eAAe9yB,KAAK/E,MAAM/D,GAAGwC,aACxCsG,KAAK/E,MAAM83B,kBACX/yB,KAAK/E,MAAM+3B,oBACXhzB,KAAK/E,MAAMg4B,qBACXjzB,KAAK/E,MAAMi4B,cAAclzB,KAAK/E,MAAM/D,IAGtCi8B,kBACE,MAAO,CACLlc,QAASjX,KAAK/E,MAAMgc,QACpBxR,SACAvO,GAAI8I,KAAK/E,MAAM/D,IAInBmK,SACE,OAAO,oCACK,kBAAC,IAAD,CAAcO,QAAM,EAAC+uB,SAAO,IAC5B,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOyC,OAAK,EAAC1P,KAAK,IAAIriB,OAAQpG,GAAS,kBAAC,GAAD,iBAAeA,EAAf,CAAsBvK,K9GnCjE,Y8GoCI,kBAAC,IAAD,CAAO0iC,OAAK,EAAC1P,KAAK,OAAOriB,OAAQpG,GAAS,kBAAC,GAAD,iBAAeA,EAAf,CAAsBvK,KAAMJ,OACtE,kBAAC,IAAD,CAAO8iC,OAAK,EAAC1P,KAAK,gBAAgBriB,OAAQpG,GAAS,kBAAC,GAAD,iBAAeA,EAAf,CAAsBvK,K9GrC7E,Y8GsCI,kBAAC,IAAD,CAAO0iC,OAAK,EAAC1P,KAAK,qBAAqBriB,OAAQpG,GAAS,kBAAC,GAAD,iBAAeA,EAAf,CAAsBvK,KAAML,OACpF,kBAAC,IAAD,CAAO+iC,OAAK,EAAC1P,KAAK,0BAA0BriB,OAAQpG,GAAS,kBAAC,GAAD,iBAAeA,EAAf,CAAsBvK,KAAMH,OACzF,kBAAC,IAAD,CAAO6iC,OAAK,EAAC1P,KAAK,4BAA4BriB,OAAQpG,GAAS,kBAAC,GAAD,iBAAeA,EAAf,CAAsBvK,KAAMF,SAGnG,kBAAC,GAAD,QAchBqiC,GAAIQ,kBAAoB,CACtBpc,QAASxJ,IAAU8S,OACnB9a,KAAMgI,IAAUC,OAChBxW,GAAIuW,IAAUC,QAaDhT,mBAAQ,KAVI9C,IAClB,CACLm7B,gBAAiB,IAAMn7B,EAASsF,MAChC81B,kBAAmB,IAAMp7B,EAAS2G,MAClCu0B,eAAgBp5B,GAAe9B,ECpEA,CACjCnG,K9GF2B,gB8GG3BkB,MDkEyD+G,IACvDw5B,cAAeh8B,GAAMU,EAASuH,GAAejI,IAC7C+7B,mBAAoB,IAAMr7B,EAASiF,QAIxBnC,CAAkCm4B,I,qBEtDlCr4B,OAVD,CAACpJ,EARoB,OAQS2D,KAC1C,OAAQA,EAAOtD,MACb,IAXqB,YAYnB,OAAOuD,YAAgBD,EAAOpC,MAXD,QAa/B,QACE,OAAOvB,ICGE0D,mBAAgB,CAC7BjC,W9GiBc,CAACzB,EAAQiB,EAA0B0C,KACjD,OAAQA,EAAOtD,MACb,IAnC0B,iBAqCtB,MAAO,CACLa,KAAMyC,EAAOpC,MACbd,MAAO,IAIb,IA1C0B,iBA4CtB,OAAO,2BAAKT,GAAZ,IACEkB,KAAK,2BAAMlB,EAAMkB,MACZyC,EAAOpC,SAKlB,IAlDiC,wBAoD7B,OAAOH,EAAoB,CACzBpB,QACAqB,YAAasC,EAAOtC,YACpBC,KAAM,UACNC,MAAOoC,EAAOpC,QAIpB,IA3DsC,6BA6DlC,OAAOH,EAAoB,CACzBpB,QACAqB,YAAasC,EAAOtC,YACpBC,KAAM,cACNC,MAAOoC,EAAOpC,QAIpB,IApE+B,sBAsE3B,OAAO,2BAAKvB,GAAZ,IACES,MAAOkD,EAAOpC,QAIpB,QACE,OAAOvB,I8G/DXgE,WACAgP,oBACAjG,cACA3F,epGfc,CAACpH,EAAQ+G,GAA8BpD,KACrD,OAAQA,EAAOtD,MACb,IAR6B,oBAUzB,OAAO,2BAAKL,GAAZ,IACE,CAAC2D,EAAOpC,MAAM5B,IAAKuiC,KAAY,2BAAKvgC,YAAS3B,EAAM2D,EAAOpC,MAAM5B,MAC3DgE,EAAOpC,OACTyF,MAIT,IAhByC,gCAkBrC,OAAO,2BAAKhH,GAAZ,IACE,CAAC2D,EAAOhE,IAAKuiC,KAAY,2BAAKvgC,YAAS3B,EAAM2D,EAAOhE,MAA5B,IACtB2lB,WAAY3hB,EAAO2hB,aAClBte,MAIT,QACE,OAAOhH,IoGLXwF,SzGvBc,CAACxF,EAAQ,GAAI2D,KAC3B,OAAQA,EAAOtD,MACb,IAH6B,oBAI3B,CACE,MAAM8hC,EAAgBt2B,YAAalI,EAAOpC,OAI1C,OAHiB2iB,KAAOlkB,EAAO,CAC7BoiC,OAAQD,IAKd,QACE,OAAOniC,IyGYXC,KhHpBc,CAACD,EAAQN,EAAoBiE,KAC3C,OAAQA,EAAOtD,MACb,IATyB,gBAWrB,MASC,CACLV,IAFqB0iC,EARM1+B,EAAOpC,OAUrB5B,GACbC,SAAUyiC,EAASziC,SACnBC,SAAUwiC,EAASx0B,SAASy0B,YAC5BxiC,YAAauiC,EAASE,YAAY/5B,IAAI,QAVtC,QACE,OAAOxI,EAIb,IAAyBqiC,GgHSvBrpB,cnEJc,CAAChZ,EAAQ4Y,GAA8BjV,KACrD,OAAQA,EAAOtD,MACb,IAtBmC,0BAuBjC,CACE,MAAMmiC,EAAW,GAGjB,OAFAxgC,OAAOgD,KAAK6T,IAAqBnY,IAAIuI,GAAKu5B,EAASv5B,GAAKtF,EAAOpC,MAAM0H,IACrEu5B,EAAS1pB,kBAAmB,EACrB0pB,EAGX,IA7BgC,uBA8B9B,OAAO5pB,GAET,IAxBkC,yBAyBhC,OAAO5W,OAAOqO,OAAO,GAAIrQ,EAAO,CAC9B8Y,kBAAkB,IAGtB,IA5BoC,2BA6BlC,OAAO9W,OAAOqO,OAAO,GAAIrQ,EAAO,CAC9B8Y,kBAAkB,IAGtB,IAzC+B,sBA0C7B,OAAOD,GAET,IA3C0B,iBA6CtB,OAAO7W,OAAOqO,OAAO,GAAIrQ,EAAO,CAC9B0C,KAAMiB,EAAOpC,QAInB,IAjDgC,uBAmD5B,OAAOS,OAAOqO,OAAO,GAAIrQ,EAAO,CAC9B4C,YAAae,EAAOpC,QAI1B,IAvD8B,qBAwD5B,OAAKoC,EAAOpC,MAAM2S,SAQXgQ,KAAOlkB,EAAO,CACnBwD,eAAgB,CACdi/B,QAAS,CAAC,CAAClG,SAAS54B,EAAOpC,MAAM2S,UAAW,EAAGvQ,EAAOpC,WATjD2iB,KAAOlkB,EAAO,CACnBwD,eAAgB,CACdk/B,SAAU,CAAC/+B,EAAOpC,UAW1B,IArEiC,wBAsE/B,CACE,MAAMohC,EAAah/B,EAAOpC,MACpBkb,EAAqBzc,EAAMwD,eAAekZ,UAAUtc,GAAQA,EAAKT,KAAOgjC,GAE9E,OAAIlmB,GAAsB,EACjByH,KAAOlkB,EAAO,CACnBwD,eAAgB,CACdi/B,QAAS,CAAC,CAAChmB,EAAoB,OAK9Bzc,EAGX,IAnFqC,4BAoFnC,CACE,MAAM4iC,EAAar/B,YAAQvD,EAAMwD,gBACjC,IAAIq/B,GAAmB,EACvB,MAAMC,EAAgBn/B,EAAOpC,MAAMb,IAAI,EACrC69B,IACAzB,IACAzjB,IACAC,IACAsR,QAEA,MAAMmY,EAAYH,EAAWx9B,KAAK49B,GAAMA,EAAGrjC,KAAOirB,GAElD,OAAMmY,EAAUxE,IAAMA,GAAKwE,EAAUjG,IAAMA,GAAKiG,EAAU1pB,IAAMA,GAAK0pB,EAAUzpB,IAAMA,GACnFupB,GAAmB,EACZ7gC,OAAOqO,OAAO,GAAI0yB,EAAW,CAClC1pB,IACAC,IACAilB,IACAzB,OAIGiG,IAET,OAAOF,EAAgB,2BAAQ7iC,GAAR,IACrBwD,eAAgBs/B,IACd9iC,EAGR,IAlHiC,wBAmH/B,CACE,MAAM2c,EAAgBhZ,EAAOpC,MACvBkb,EAAqBzc,EAAMwD,eAAekZ,UAAUtc,GAAQA,EAAKT,KAAOgd,EAAchd,IAE5F,GAAI8c,GAAsB,EAAG,CAM3B,OALiByH,KAAOlkB,EAAO,CAC7BwD,eAAgB,CACdi/B,QAAS,CAAC,CAAChmB,EAAoB,EAAGza,OAAOqO,OAAO,GAAIsM,QAM1D,OAAO3c,EAGX,QACE,OAAOA,ImElHXgxB,e/BVc,CAAChxB,EAAQ4wB,GAA+BjtB,KACtD,OAAQA,EAAOtD,MACb,IAjB+B,sBAkB7B,CACE,MAAMmiC,EAAW,GAEjB,OADAxgC,OAAOgD,KAAK8rB,IAA2BpwB,IAAIuI,GAAKu5B,EAASv5B,GAAKtF,EAAOpC,MAAM0H,IACpEu5B,EAGX,IAvBiC,wBAwB/B,OAAO5R,GAET,IAzBoC,2BA0BlC,OAAKjtB,EAAOpC,MAAM2S,SAQXgQ,KAAOlkB,EAAO,CACnBwD,eAAgB,CACdi/B,QAAS,CAAC,CAAClG,SAAS54B,EAAOpC,MAAM2S,UAAW,EAAGvQ,EAAOpC,WATjD2iB,KAAOlkB,EAAO,CACnBwD,eAAgB,CACdk/B,SAAU,CAAC/+B,EAAOpC,UAW1B,IAtCuC,8BAuCrC,CACE,MAAMohC,EAAah/B,EAAOpC,MACpBkb,EAAqBzc,EAAMwD,eAAekZ,UAAUtc,GAAQA,EAAKT,KAAOgjC,GAE9E,OAAIlmB,GAAsB,EACjByH,KAAOlkB,EAAO,CACnBwD,eAAgB,CACdi/B,QAAS,CAAC,CAAChmB,EAAoB,OAK9Bzc,EAGX,IArDuC,8BAsDrC,CACE,MAAM2c,EAAgBhZ,EAAOpC,MACvBkb,EAAqBzc,EAAMwD,eAAekZ,UAAUtc,GAAQA,EAAKT,KAAOgd,EAAchd,IAE5F,GAAI8c,GAAsB,EAAG,CAM3B,OALiByH,KAAOlkB,EAAO,CAC7BwD,eAAgB,CACdi/B,QAAS,CAAC,CAAChmB,EAAoB,EAAGza,OAAOqO,OAAO,GAAIsM,QAM1D,OAAO3c,EAGX,IAxEsC,6BAyEpC,CACE,MAAM4iC,EAAar/B,YAAQvD,EAAMwD,gBACjC,IAAIq/B,GAAmB,EACvB,MAAMC,EAAgBn/B,EAAOpC,MAAMb,IAAI,EACrC69B,IACAzB,IACAzjB,IACAC,IACAsR,QAEA,MAAMmY,EAAYH,EAAWx9B,KAAK49B,GAAMA,EAAGrjC,KAAOirB,GAElD,OAAMmY,EAAUxE,IAAMA,GAAKwE,EAAUjG,IAAMA,GAAKiG,EAAU1pB,IAAMA,GAAK0pB,EAAUzpB,IAAMA,GACnFupB,GAAmB,EACZ7gC,OAAOqO,OAAO,GAAI0yB,EAAW,CAClC1pB,IACAC,IACAilB,IACAzB,OAIGiG,IAET,OAAOF,EAAgB,2BAAQ7iC,GAAR,IACrBwD,eAAgBs/B,IACd9iC,EAGR,QACE,OAAOA,I+BhFX4E,Y3GvBc,CAAC5E,EAAQ0E,GAA4Bf,KACnD,OAAQA,EAAOtD,MACb,IAL2B,kBAOvB,OAAO,2BAAKL,GAAZ,IACE,CAAC2D,EAAOzB,OAAOvC,IAAKgE,EAAOzB,OAAOX,QAIxC,IAX8B,qBAY5B,CACE,MAAMihC,EAAQ,eAAQxiC,GAGtB,cADOwiC,EAAS7+B,EAAOhE,IAChB6iC,EAGX,IArB4B,mBAuBxB,OAAO7+B,EAAOoB,QAGlB,IA3B8B,qBA6B1B,OAAOL,GAGX,QACE,OAAO1E,I2GJXoJ,SACAG,StGzBc,CAACvJ,EAAQ0G,GAAwB/C,KAC/C,OAAQA,EAAOtD,MACb,IATqC,4BAWjC,OAAO,2BAAKL,GACP2D,EAAOpC,OAIhB,IAf0B,iBAiBtB,OAAOmF,GAGX,QACE,OAAO1G,IsGWXyE,W5G9Bc,CAACzE,EAAQoE,GAAoBT,KAC3C,OAAQA,EAAOtD,MACb,IAJ0B,iBAMtB,MAAO,IAAI+D,MAAuBT,EAAOpC,OAG7C,QACE,OAAOvB,I4GuBX6N,SvFxBc,CAAC7N,EAAQsN,GAAkB3J,KACzC,OAAQA,EAAOtD,MACb,IAZwB,eAcpB,OAAO2B,OAAOqO,OAAO,GAAI1M,EAAOpC,OAGpC,IAhBwB,eAkBpB,OAAO,2BAAKvB,GACP2D,EAAOpC,OAIhB,QACE,OAAOvB,IuFUX2hB,qBxDhCc,CAAC3hB,EAAQyhB,GAAsC9d,KAC7D,OAAQA,EAAOtD,MACb,IALsC,6BAOlC,OAAOsD,EAAOpC,MAGlB,IATwC,+BAWpC,OAAOkgB,GAGX,QACE,OAAOzhB,IwDoBX+3B,apBlCc,CAAC/3B,EAAQ63B,GAA6Bl0B,KACpD,OAAQA,EAAOtD,MACb,IAJ6B,oBAMzB,OAAOsD,EAAOpC,MAGlB,QACE,OAAOvB,MqBOEijC,OAZQ,KACrB,MAAMC,EAAa,CAACC,MAEdC,EAAmBr0B,OAAOs0B,sCAAwCC,IAMxE,OAJKv0B,OAAOs0B,qCAILE,YAAYC,GAASJ,EAAiBK,eAAmBP,M,8TCwBlE7uB,IAAKqvB,aAAa,KADA,UACiBC,IACnCtvB,IAAKqvB,aAAa,QAFA,UAEoBE,IACtCvvB,IAAKqvB,aAAa,MAHA,UAGkBG,IACpCxvB,IAAKqvB,aAAa,KAJA,UAIiBI,IACnCzvB,IAAKqvB,aAAa,KALA,UAKiBK,IACnC1vB,IAAKqvB,aAAa,KANA,UAMiBM,IACnC3vB,IAAKqvB,aAAa,KAPA,UAOiBO,IACnC5vB,IAAKqvB,aAAa,KARA,UAQiBQ,IACnC7vB,IAAKqvB,aAAa,KATA,UASiBS,IACnC9vB,IAAKqvB,aAAa,KAVA,UAUiBU,IACnC/vB,IAAKqvB,aAAa,KAXA,UAWiBW,IACnChwB,IAAKqvB,aAAa,KAZA,UAYiBY,IACnCjwB,IAAKqvB,aAAa,KAbA,UAaiBa,IACnClwB,IAAKqvB,aAAa,MAdA,UAckBc,IACpCnwB,IAAKqvB,aAAa,KAfA,UAeiBe,IACnCpwB,IAAKqvB,aAAa,KAhBA,UAgBiBgB,IACnCrwB,IAAKqvB,aAAa,QAjBA,UAiBoBiB,IACtCtwB,IAAKqvB,aAAa,KAlBA,UAkBiBkB,IACnCvwB,IAAKqvB,aAAa,KAnBA,UAmBiBmB,IACnCxwB,IAAKqvB,aAAa,MApBA,UAoBkBoB,IACpCzwB,IAAKqvB,aAAa,KArBA,UAqBiBqB,IACnC1wB,IAAKqvB,aAAa,KAtBA,UAsBiBsB,IACnC3wB,IAAKqvB,aAAa,KAvBA,UAuBiBuB,IACnC5wB,IAAKqvB,aAAa,KAxBA,UAwBiBwB,IACnC7wB,IAAKqvB,aAAa,UAzBA,UAyBsByB,IACxC9wB,IAAKqvB,aAAa,KA1BA,UA0BiB0B,IACnC/wB,IAAKqvB,aAAa,KA3BA,UA2BiB2B,IACnChxB,IAAKqvB,aAAa,QA5BA,UA4BoB4B,IACvBjxB,EAAf,ECxDA,MAEMkxB,GAAW,CACfC,QAAS,CAAC,QAAS,MAAO,SAAU,cAAe,aAAc,cAAe,YAAa,mBAAoB,cAI7GC,GAAgBC,uLAAYC,+BAAiC,KAE/DF,KACFF,GAASK,QAAU,CACjB3f,cAAewf,KAuBJI,UAnBI,IACV,kBAAC,IAAD,CAAeC,MAAO7C,MACnB,kBAAC,mBAAD,CAAkB8C,MAjBPC,yBAAeC,MAkBtB,kBAAC,IAAD,CAAQV,SAAUA,GAAUW,SAAS,UAChC,EACXpgC,QAEKA,EAKE,kBAAC,GAAD,CAAKA,GAAIA,IAHP,S,0TC7BZ,SAASvC,EAAQ4iC,GACtB,OAAO7I,MAAM8I,QAAQD,GAASA,EAAQ,GAEjC,SAASxkC,EAASwkC,GACvB,OAAOE,IAASF,GAASA,EAAQ,GAO5B,SAASt6B,EAAaokB,GAC3B,OAAOA,EAAMhrB,OAAO,CAACkmB,EAAK/qB,KACxB+qB,EAAI/qB,EAAKT,IAAMS,EACR+qB,GACN,IAYE,MAAM8D,EAAa,CAAC1tB,EAAO1B,KAChC,GAA2B,qBAAhBymC,EAAOC,MAAwBA,KAAKC,eAAgB,CAC7D,MAAMrM,EAASt6B,GAAY,KAC3B,OAAO,IAAI0mC,KAAKC,eAAerM,EAAQ,CACrCsM,KAAM,UACNC,MAAO,QACPC,IAAK,YACJC,OAAO,IAAIC,KAAKtlC,IAGrB,OAAOA,EAAM4B,OAAO,EAAG,IAAI2jC,QAAQ,IAAK,MAoB7BljC,EAAkB,CAACrC,EAAOwH,SAA2B7B,IAAV3F,GAAiC,OAAVA,EAAiBwH,EAAexH,EAClGukB,EAAahgB,IACxB,MAAMihC,EAAMjhC,EAAGC,IAAIC,SACbghC,EAAMD,EAAIlhB,QAAQ4X,QAAQ,QAChC,OAAOuJ,GAAO,EAAID,EAAIlhB,QAAQ5H,MAAM,EAAG+oB,GAAOD,EAAIlhB,SAEvCohB,EAAe3qB,GAAM,2BAAUA,GAAV,IAChC3c,QAAIuH,M,mDCrEN,igCAaO,MAAMuR,EAAgB,gBAChBxN,EAAe,eACfC,EAAQ,QACRC,EAAM,MACNC,EAAe,eACfC,EAAc,cACdgQ,EAAM,MACNF,EAAU,UACVC,EAAY,YACZF,EAAQ,QACR3P,EAAW,WACXjL,EAAO,OACPK,EAAS,SACTwZ,EAAY,YACZI,EAAmB,mBAInBqb,EAAsBx1B,KAAU0Z,EAAY1Z,EAAKC,MAAMu1B,oBACvDxM,EAAazL,GAJI,cAIQ7D,EAAY6D,GAAUupB,WAC/C3e,EAAsB5K,GAJP,YAImB7D,EAAY6D,GAAUupB,WACxDppB,EAAsBH,GAAY7D,EAAY6D,GAAUwpB,kBAAoB,EAC5E1d,EAAa9L,GAAY7D,EAAY6D,GAAU6L,SAAW,GAE1D1P,EAAc,CACzB,CAACrB,GAAgB,CACf9Y,GAAI8Y,EACJmF,aAAc,iBACd7D,SAAU,gBACVmE,YAAa7J,IAAKC,EAAE,kBACpB8yB,OAAQznC,GAAE,qCAAkCA,GAC5C6pB,QAAS,kBACT2d,iBAAkB,IAEpB,CAACl8B,GAAe,CACdtL,GAAIsL,EACJ2S,aAAc,iBACd7D,SAAU,gBACVmE,YAAa7J,IAAKC,EAAE,gBACpB4yB,WAxB0B,YAyB1BtR,qBAAqB,EACrBwR,OAAQznC,GAAE,qCAAkCA,GAC5C6pB,QAAS,mBAEX,CAACte,GAAQ,CACPvL,GAAIuL,EACJ0S,aAAc,iBACd7D,SAAU,gBACVmE,YAAa7J,IAAKC,EAAE,UACpB4yB,WAlC0B,YAmC1BtR,qBAAqB,EACrBwR,OAAQznC,GAAE,qCAAkCA,GAC5C6pB,QAAS,mBAEX,CAACre,GAAM,CACLxL,GAAIwL,EACJyS,aAAc,OACd7D,SAAU,MACVmE,YAAa7J,IAAKC,EAAE,QACpB4yB,WA5C0B,YA6C1BtR,qBAAqB,EACrBwR,OAAQznC,GAAE,4BAAyBA,GACnC6pB,QAAS,QAEX,CAACpe,GAAe,CACdzL,GAAIyL,EACJwS,aAAc,eACd7D,SAAU,cACVmE,YAAa7J,IAAKC,EAAE,iBACpB4yB,WArDwB,UAsDxBtR,qBAAqB,EACrBwR,OAAQznC,GAAE,qCAAkCA,GAC5C6pB,QAAS,iBAEX,CAACne,GAAc,CACb1L,GAAI0L,EACJuS,aAAc,cACd7D,SAAU,aACVmE,YAAa7J,IAAKC,EAAE,gBACpB4yB,WA/DwB,UAgExBtR,qBAAqB,EACrBwR,OAAQznC,GAAE,wCAAqCA,GAC/C6pB,QAAS,oBAEX,CAACnO,GAAM,CACLuC,aAAc,OACd7D,SAAU,SACVmE,YAAa7J,IAAKC,EAAE,SAEtB,CAAC6G,GAAU,CACTxb,GAAIwb,EACJyC,aAAc,UACd7D,SAAU,UACVmE,YAAa7J,IAAKC,EAAE,WACpB8yB,OAAQ,CAACznC,EAAIU,KACX,OAAQA,GACN,IAAK,OACH,MAAM,2CAAN,OAAkDV,GAEpD,IAAK,sBACL,IAAK,cACL,QACE,MAAM,eAAN,OAAsBA,EAAtB,wBAAuC,IAAIknC,MAAOQ,cAI1D,CAACjsB,GAAY,CACXzb,GAAIyb,EACJwC,aAAc,YACd7D,SAAU,YACVmE,YAAa7J,IAAKC,EAAE,aACpB8yB,OAAQznC,GAAE,wBAAqBA,EAArB,UAEZ,CAACub,GAAQ,CACPvb,GAAIub,EACJ0C,aAAc,QACd7D,SAAU,QACVmE,YAAa7J,IAAKC,EAAE,SACpB8yB,OAAQznC,GAAE,2DAAwDA,IAEpE,CAACW,GAAO,CACNX,GAAIW,EACJyZ,SAAU,QAEZ,CAACxO,GAAW,CACVwO,SAAU,YAEZ,CAACpZ,GAAS,CACRoZ,SAAU,QAEZ,CAACI,GAAY,CACXJ,SAAU,QAEZ,CAACQ,GAAmB,CAClBR,SAAU,SAGDutB,EAAkBjnC,GAAQyZ,EAAYzZ,GAAMud,aAC5C5B,EAAa,CAAC3b,EAAMD,EAAM0F,KACrC,IAAIH,EAUJ,OARItF,IAASgb,IACX1V,EAAMvF,EAAK+xB,WAGTrY,EAAYzZ,IAASyZ,EAAYzZ,GAAM+mC,SACzCzhC,EAAG,UAAMmgB,YAAWhgB,GAAjB,YAAwBgU,EAAYzZ,GAAM+mC,OAAOhnC,EAAKT,GAAIS,EAAKC,QAG7DsF,GAEI4S,EAAclY,IACzB,OAAQA,GACN,KAAK4K,EACL,KAAKG,EACL,KAAK+P,EACH,OAAOosB,IAET,KAAKr8B,EACL,KAAKG,EACH,OAAOm8B,IAET,KAAKr8B,EACH,OAAOs8B,IAET,KAAKpsB,EACH,OAAOqsB,IAET,KAAKtsB,EACH,OAAOqU,IAET,KAAKvU,EACH,OAAOysB,IAET,KAAKrnC,EACH,OAAOsnC,IAET,KAAKr8B,EACH,OAAOs8B,IAET,KAAKlnC,EACH,OAAOmnC,IAET,QACE,OAAOC,O,iCCrMb,+jBAGO,MAAMpR,EAAoB,WAEpBH,EAAkB,GAIlBJ,EAAS,CAAC,GAAI,IACd3b,EAAiB,CAC5B8jB,EAAG,EACHzB,EAAG,EACHzjB,EAAG,GACHC,EAAG,IAMQylB,EAAuB,GACvByB,EAA4B,GAC5BD,EAA2B,GAK3B9E,EAAqB,KACrBnF,EAAiB,IAVT,GAuBf0R,EAAuBzJ,GAAK0J,OAAOC,UAAU3J,IAAMA,GAAK,EAGjDvH,EAAW52B,GAAQ4nC,EAAqB5nC,EAAKm+B,IAAMyJ,EAAqB5nC,EAAK08B,IAAMkL,EAAqB5nC,EAAKiZ,IAAM2uB,EAAqB5nC,EAAKkZ,GAmB7ItY,EAAwBkmB,IAC5B,CACL0D,EAAG1D,EACHihB,KAAM,IAIG9tB,EAAwB,CAACD,EAAME,GAAW,KAC9C,CACLikB,EAAG,EACHzB,EAAG1iB,EACHf,EAvDwB+uB,GAwDxB9uB,EAAG,EACH+uB,SAAU/tB,EACV6tB,KAAM,IAGG3tB,EAA6B2d,IACjC,CACLoG,EAAG,EACHzB,EAAG,EACHzjB,EAAG8e,EAAmBoI,EAjEE6H,GAkExB9uB,EAAGylB,EACHsJ,QAAQ,EACRF,KAAM,IAyBGt9B,EAAYpK,GAASA,EAAMC,IAAI,CAACN,EAAM4vB,KACjD,MAAMsY,EAAgBtR,EAAS52B,GAAQA,EAAO4B,OAAOqO,OAAO,GAAIjQ,EAlE1CwqB,KACtB,IAAKod,EAAqBpd,GACxB,MAAM,IAAI2d,MAAM,6BAGlB,MAAMC,EAAM5d,EAnCc,EAoCpB6d,EAAMv4B,KAAKsF,MAAMoV,EApCG,GAqCpB8d,EAAYx4B,KAAKsF,MAAMmzB,MACvBC,EAA+B,EAAlBpS,EACnB,MAAO,CACL+H,EAAGiK,EAAME,EACT5L,EAAG2L,EAAMG,EACTvvB,EAAGqvB,EACHpvB,EAAGsvB,IAqDiEC,CAAS7Y,IAC/E,OAAOhuB,OAAOqO,OAAO,GAAIi4B,EAhBMloC,KAExB,CACL0rB,eAFqB5b,KAAK44B,MAAMtS,EAAkBp2B,EAAKkZ,EAAIpJ,KAAKC,IAAI,EAAG/P,EAAKkZ,EAAI,GAAK8c,EAAO,MAetD2S,CAAkBT,MAE/CjiB,EAAmB1mB,GAAE,eAAYA,GACvC,SAASg2B,EAAah2B,GAC3B,MAAMuwB,EAAKvuB,YAASmtB,SAAS4J,cAAT,WAA2BrS,EAAiB1mB,MAC5DqpC,IAAW9Y,EAAG+Y,kBAAkB1+B,WAAW,IAAM2lB,EAAG+Y,gBAAgB/Y,EAAGgZ,YAAc,EAAGhZ,EAAGjE,aAAe,GAAI,M,6cChHpH,MAAMkd,EAA2B,CAC/B,CAACh+B,KAAM,YACP,CAACC,KAAe,oBAChB,CAACC,KAAc,oBAKX+9B,EAAY/oC,IAChB,GAH0BA,IAAQ,CAAC6K,IAAOD,KAAc1L,SAASc,GAG7DgpC,CAAoBhpC,GACtB,OAAO,EAIT,OAAOimC,EADY6C,EAAyB9oC,KAKjCgpB,EAAoB,CAACjpB,EAAO,GAAI+kB,EAAgB,MAC3D,MAAM9kB,EAAO8kB,EAAcG,YAAcllB,EAAKC,KAC9C,QAAS+oC,EAAU/oC,IAERiL,EAAkBlL,IAC7B,IAAKimC,IAASjmC,GACZ,OAAO,KAIT,OAAOA,EADU0Z,IAAY1Z,EAAKC,MAAM0Z,WACf3Z,EAAKkpC,aAAelpC,EAAKmpC,OAASnpC,EAAKM,KAAON,EAAKopC,aAAeppC,EAAKqpC,YAAc,IAkBnGvf,EAAQ9pB,GAAQkL,EAAgBlL,GAAMT,GACtC+pC,EAAUtpC,GAAQkL,EAAgBlL,GAAMsC,KAExCgnB,EAAU,CAACtpB,EAAM0F,KAC5B,MAAM+f,EAAUC,YAAWhgB,GACrBshC,EAASttB,IAAY1Z,EAAKC,MAAM+mC,OAAOld,EAAM9pB,IACnD,MAAM,GAAN,OAAUylB,EAAV,YAAqBuhB,IAEVuC,EAAOjkC,MAAOtF,EAAM+kB,GAC/BQ,cACAL,aACAY,UAAU,OAEV,MAAM0jB,EAAM,uCAAQzkB,GACfe,GADO,IAEVgK,GAAI7J,YAAiBjmB,EAAKT,MAEtBU,EAAOilB,GAAcllB,EAAKC,KAhCR,EAACwpC,EAAQD,EAAQjkB,KACnCkkB,GAAUA,EAAOF,OAIvBE,EAAOlkC,IAAMggB,EAAYE,QACzBgkB,EAAOC,kBAAmB,EAC1BD,EAAO1nC,WAAY,EAEfwjB,EAAYI,OACd8jB,EAAO9jB,KAAOJ,EAAYI,MAG5B8jB,EAAOF,KAAKC,KAqBZG,CADeX,EAAU/oC,GACNupC,EAAQjkB,IAEhBqkB,EAAQtkC,eACWukC,YAAiB/f,EAAM9pB,GAAOA,EAAKC,KAAM,CACrE+H,OAAQhI,EAAKC,OAAS8K,IAAM++B,cAAiB,OAIpCC,EAAS/pC,IACpB,MAAMypC,EAAST,EAAUhpC,EAAKC,MAE1BwpC,GAAUA,EAAOM,QACnBN,EAAOM,OAAO9jB,YAAiBjmB,EAAKT,MAG3ByqC,EAAU,CAAChqC,EAAMklB,KAC5B,MAAMukB,EAAST,EAAU9jB,GAErBukB,GAAUA,EAAOO,SACnBP,EAAOO,QAAQ/jB,YAAiBjmB,EAAKT,MAG5B0qC,EAAyB,CAACllB,EAAemlB,EAAchlB,KAClE,GAAIglB,IAAiBn/B,KAAOm/B,IAAiBhlB,EAAY,CACvD,MAAMilB,GA3DoB7pC,EA2DcykB,GA3DHsH,UAAY/rB,EAAI+rB,SAASrnB,KAAKolC,GAAMA,EAAG9d,MAAMntB,SAbxD,aA0E1B,YAAyB2H,IAArBqjC,EACK,KAGFtD,YAAa,uCAAK9hB,GACpBolB,GADc,IAEjB9d,cAAUvlB,EACV7G,KAAMilB,IAAepa,IAAQu/B,IAAkBC,OAE5C,GAAIJ,IAAiBr/B,KAAgBqa,IAAepa,IAAO,CAChE,MAAMmgB,EAAUlG,EAAcwlB,KAAiB1sB,QACzC/Q,EAAOiY,EAAcylB,KAAc3sB,QACnCwX,EAAS,GAUf,OARItQ,EAAcjY,KAAKzJ,OAAS,EAC9BgyB,EAAOmV,KAAgB19B,EAAKzJ,OAAS,EAAIyJ,EAAK29B,OAAO,EAAG,GAAK39B,EAAK29B,OAAO,EAAG39B,EAAKzJ,QAEjFgyB,EAAOmV,KAAgB19B,EAAKzJ,OAAS,CAACyJ,EAAK49B,SAAW59B,EAGxDuoB,EAAOkV,KAAmBtf,EAAQ5nB,OAAS,CAAC4nB,EAAQyf,SAAWzf,EAC/DoK,EAAOsV,KAAmB,IAAI5lB,EAAc4lB,QAAqB1f,KAAYne,GACtE+5B,YAAa,uCAAK9hB,GACpBsQ,GADc,IAEjBp1B,KAAMoqC,OAEH,OAAIH,IAAiBp/B,KAASoa,IAAera,IAC3Cg8B,YAAa,2BAAK9hB,GAAN,IACjB9kB,KAAMqqC,OAIHzD,YAAa9hB,GA7FQzkB,S,sCCpC9B3B,EAAOC,QAAU,CAAC,eAAiB,mCAAmC,UAAY,8BAA8B,gBAAkB,sC,uDCDlI,kNAIO,MAAMgJ,EAAkB,EAC7BC,UACE,KAAO,CAAC,KAAD,UAAUA,EAAS,2BAA6B,qBAI9C+iC,EAAqB,EAChCjjC,eACIL,IAAW,CAAC,YAAa,gBAAiB,SAAU,eAAgBK,EAAS,gBAJhD,CAAC,2BAA4B,2BAA4B,qBAImB7E,KAAK,KAAjC,UAEtE+nC,EAAgB,EAC3BljC,eACI,CAAC,WAAD,OAAYijC,EAAmB,CACnCjjC,cACC7E,KAAK,KAFF,oBAEmB8nC,EAAmB,CAC1CjjC,cACC7E,KAAK,KAJF,uBAIsB8nC,EAAmB,CAC7CjjC,cACC7E,KAAK,KANF,MAQOgoC,EAAoB,EAC/BrjC,iBACAsjC,iBAEOzjC,IAAW,CAAC,GAAD,OAAIM,EAAgB,CACpCC,QAAQ,IACP/E,KAAK,MAAQ,yCAA0C2E,EAAc,UAAMojC,EAAc,CAC1FljC,WAAW,IACV7E,KAAK,MAFgE,GAEnDioC,EAAc,CAAC,IAAK,uBAAwB,mBAAoB,YAAa,sBAAuB,oCAAqC,oBAAqB,sBAAuB,yBAA0B,iCAAkC,oBAAqB,8BAA+B,iBAAkB,sCAAuC,0BAA2B,qBAAsB,8BAA+B,mBAAoB,gBAAiB,iBAAkB,gBAAiB,wBAAyB,gCAAiC,sCAAsCjoC,KAAK,KAAO,KAE5mB0E,EAAqB,EAChCC,oBACI,CAAC,eAAD,OAAgBqjC,EAAkB,CACtCrjC,mBACC3E,KAAK,KAFF,qBAEoB,CAAC,UAAWgoC,EAAkB,CACtDrjC,oBACE3E,KAAK,KAJH,mBAImBgoC,EAAkB,CACzCrjC,mBACC3E,KAAK,KANF,2BAM0BgoC,EAAkB,CAChDrjC,mBACC3E,KAAK,KARF,0BAQyBgoC,EAAkB,CAC/CrjC,mBACC3E,KAAK,KAVF,MAYOyE,EAAoB,IAAM,CAAC,WAAD,OAAY,CAAC,UAAWK,EAAgB,CAC7EC,QAAQ,KACN/E,KAAK,KAF8B,yBAER8E,EAAgB,CAC7CC,QAAQ,IACP/E,KAAK,KAJ+B,qBAIb8E,EAAgB,CACxCC,QAAQ,IACP/E,KAAK,KAN+B,MAQ1BgnC,EAAe,IAAM,CAAC,GAAD,OAAIliC,EAAgB,CACpDC,QAAQ,IACP/E,KAAK,MAAQ,uCAFkB,mBAEkCgoC,EAAkB,CACpFrjC,gBAAgB,EAChBsjC,aAAa,IAJmB,MAQrBlB,EAAmB,CAACtqC,EAAIU,GACnC+H,YACIxC,wBAAcC,KAAKC,GAAMA,EAAGC,IAAIC,SAASC,IAAhB,UAAuBqhC,YAAgBjnC,GAAvC,YAAgDV,GAAM,CACnFyI,OAAQA,GAAU8iC,EAAkB,CAClCrjC,gBAAgB,EAChBsjC,aAAa,Q,oBCpEjBpsC,EAAOC,QAAU,CAAC,aAAe,oCAAoC,cAAgB,qCAAqC,UAAY,mC","file":"static/js/app.aa8ec4f4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ControlBar_root__iikeX\",\"content\":\"ControlBar_content__26Z33\",\"draghandle\":\"ControlBar_draghandle__27zum\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"DashboardItemChip_link__21drZ\",\"icon\":\"DashboardItemChip_icon__2hcIR\",\"selected\":\"DashboardItemChip_selected__r00uP\",\"unselected\":\"DashboardItemChip_unselected__2H9l2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ClearButton_button__33ZbK\",\"icon\":\"ClearButton_icon__vTJm3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"showMore\":\"ShowMoreButton_showMore__3S3He\",\"disabled\":\"ShowMoreButton_disabled__2FQNA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuItem\":\"ContentMenuItem_menuItem__vbKn3\",\"launchLink\":\"ContentMenuItem_launchLink__2Nql9\",\"label\":\"ContentMenuItem_label__ANfH1\",\"buttonInsert\":\"ContentMenuItem_buttonInsert__1joHg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"showMoreButton\":\"CategorizedMenuGroup_showMoreButton__2RbRp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"EditTitleBar_section__LIaIC\",\"titleDescription\":\"EditTitleBar_titleDescription__1YsU6\",\"title\":\"EditTitleBar_title__3mUbt\",\"description\":\"EditTitleBar_description__24U5X\",\"itemSelector\":\"EditTitleBar_itemSelector__1cFEp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"actions\":\"ViewTitleBar_actions__2UTRz\",\"editLink\":\"ViewTitleBar_editLink__d_HzW\",\"titleBar\":\"ViewTitleBar_titleBar__eiwJS\",\"titleBarIcon\":\"ViewTitleBar_titleBarIcon__2cBxv\",\"strip\":\"ViewTitleBar_strip__3xR4U\",\"backdrop\":\"ViewTitleBar_backdrop__2Cpm8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FatalErrorBoundary_container__3SViR\",\"icon\":\"FatalErrorBoundary_icon__2UbeP\",\"message\":\"FatalErrorBoundary_message__3FzrY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"deleteItemButton\":\"DeleteItemButton_deleteItemButton__3TJm9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"warning\":\"PrintItemInfo_warning__123PK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"center\":\"LoadingMask_center__2SFwS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textDiv\":\"Item_textDiv__1U7zV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Item_list__1_nkQ\",\"item\":\"Item_item__3-6QE\",\"itemicon\":\"Item_itemicon__QlouX\",\"link\":\"Item_link___3c_q\",\"deleteicon\":\"Item_deleteicon__3usrl\",\"deletebutton\":\"Item_deletebutton__1DpBW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"titlePage\":\"Item_titlePage__18CNQ\",\"name\":\"Item_name__3nuTV\",\"description\":\"Item_description__1gFQd\",\"filterTitle\":\"Item_filterTitle__2p7TQ\",\"filterList\":\"Item_filterList__qc_G3\",\"filterListItem\":\"Item_filterListItem__sPbBY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bar\":\"FilterBar_bar__1Ma3p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ConfirmDeleteDialog_content__EqswE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"infoWrapper\":\"PrintInfo_infoWrapper__3m2lt\",\"infoHeader\":\"PrintInfo_infoHeader__KyW8I\",\"info\":\"PrintInfo_info__13oXZ\",\"infoList\":\"PrintInfo_infoList__Iu9MC\",\"divider\":\"PrintInfo_divider__3wzx9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PrintActionsBar_container__2iQp7\",\"topMargin\":\"PrintActionsBar_topMargin__OpYDN\",\"inner\":\"PrintActionsBar_inner__uBqU7\",\"link\":\"PrintActionsBar_link__lFUmI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"PrintLayoutDashboard_wrapper__1WDh4\",\"pageOuter\":\"PrintLayoutDashboard_pageOuter__22acI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"PrintDashboard_wrapper__1O3s_\",\"pageOuter\":\"PrintDashboard_pageOuter__fl9tw\"};","export const EDIT = 'edit';\nexport const NEW = 'new';\nexport const VIEW = 'view';\nexport const PRINT = 'print';\nexport const PRINT_LAYOUT = 'print-layout';\nexport const isEditMode = mode => [EDIT, NEW].includes(mode);\nexport const isPrintMode = mode => [PRINT, PRINT_LAYOUT].includes(mode);\nexport const isViewMode = mode => mode === VIEW;","export const RECEIVED_USER = 'RECEIVED_USER';\nexport const DEFAULT_STATE_USER = {\n  id: '',\n  username: '',\n  uiLocale: '',\n  isSuperuser: false\n};\nexport default ((state = DEFAULT_STATE_USER, action) => {\n  switch (action.type) {\n    case RECEIVED_USER:\n      {\n        return fromD2ToUserObj(action.value);\n      }\n\n    default:\n      return state;\n  }\n});\n\nfunction fromD2ToUserObj(d2Object) {\n  return {\n    id: d2Object.id,\n    username: d2Object.username,\n    uiLocale: d2Object.settings.keyUiLocale,\n    isSuperuser: d2Object.authorities.has('ALL')\n  };\n} // selectors\n\n\nexport const sGetUserId = state => state.user.id;\nexport const sGetUserUsername = state => state.user.username;\nexport const sGetIsSuperuser = state => state.user.isSuperuser;\nexport const sGetUiLocale = state => state.user.uiLocale;","import { TEXT, SPACER } from './itemTypes';\nimport { getGridItemProperties } from '../components/ItemGrid/gridUtil';\nexport const spacerContent = 'SPACER_ITEM_FOR_DASHBOARD_LAYOUT_CONVENIENCE';\nexport const emptyTextItemContent = 'TEXT_ITEM_WITH_NO_CONTENT';\n\nconst isBackendSpacerType = item => item.type === TEXT && item.text === spacerContent;\n\nconst isUiSpacerType = item => item.type === SPACER;\n\nconst isTextType = item => item.type === TEXT && item.text !== spacerContent;\n\nexport const convertUiItemsToBackend = items => items.map(item => {\n  let text = null;\n\n  if (isUiSpacerType(item)) {\n    text = spacerContent;\n  } else if (isTextType(item)) {\n    text = item.text || emptyTextItemContent;\n  }\n\n  return { ...item,\n    ...(text ? {\n      text\n    } : {})\n  };\n});\nexport const convertBackendItemsToUi = items => items.map(item => {\n  const type = isBackendSpacerType(item) ? SPACER : item.type;\n  const gridProperties = getGridItemProperties(item.id);\n  const text = isTextType(item) ? item.text === emptyTextItemContent ? '' : item.text : null;\n  return { ...item,\n    ...(text !== null ? {\n      text\n    } : {}),\n    type,\n    ...gridProperties\n  };\n});","/** @module reducers/dashboards */\nimport arrayFrom from 'd2-utilizr/lib/arrayFrom';\nimport arraySort from 'd2-utilizr/lib/arraySort';\nimport { orArray, orObject } from '../modules/util';\nimport { convertBackendItemsToUi } from '../modules/uiBackendItemConverter';\nexport const SET_DASHBOARDS = 'SET_DASHBOARDS';\nexport const ADD_DASHBOARDS = 'ADD_DASHBOARDS';\nexport const SET_DASHBOARD_STARRED = 'SET_DASHBOARD_STARRED';\nexport const SET_DASHBOARD_DISPLAY_NAME = 'SET_DASHBOARD_DISPLAY_NAME';\nexport const SET_DASHBOARD_ITEMS = 'SET_DASHBOARD_ITEMS';\nexport const DEFAULT_STATE_DASHBOARDS = {\n  byId: null,\n  items: []\n};\nexport const EMPTY_DASHBOARD = {}; // reducer helper functions\n\nconst updateDashboardProp = ({\n  state,\n  dashboardId,\n  prop,\n  value\n}) => ({\n  byId: { ...state.byId,\n    [dashboardId]: { ...state.byId[dashboardId],\n      [prop]: value\n    }\n  },\n  items: state.items\n});\n/**\n * Reducer that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n * @returns {Object}\n */\n\n\nexport default ((state = DEFAULT_STATE_DASHBOARDS, action) => {\n  switch (action.type) {\n    case SET_DASHBOARDS:\n      {\n        return {\n          byId: action.value,\n          items: []\n        };\n      }\n\n    case ADD_DASHBOARDS:\n      {\n        return { ...state,\n          byId: { ...state.byId,\n            ...action.value\n          }\n        };\n      }\n\n    case SET_DASHBOARD_STARRED:\n      {\n        return updateDashboardProp({\n          state,\n          dashboardId: action.dashboardId,\n          prop: 'starred',\n          value: action.value\n        });\n      }\n\n    case SET_DASHBOARD_DISPLAY_NAME:\n      {\n        return updateDashboardProp({\n          state,\n          dashboardId: action.dashboardId,\n          prop: 'displayName',\n          value: action.value\n        });\n      }\n\n    case SET_DASHBOARD_ITEMS:\n      {\n        return { ...state,\n          items: action.value\n        };\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetDashboardsRoot = state => state.dashboards; // selector level 1\n\n/**\n * Selector which returns a dashboard by id from the state object\n * If no matching dashboard is found it returns undefined\n * If dashboards.byId is null, then the dashboards api request\n * has not yet completed. If dashboards.byId is an empty object\n * then the dashboards api request is complete, but no dashboards\n * were returned\n *\n * @function\n * @param {Object} state The current state\n * @param {Number} id The id of the dashboard\n * @returns {Object | undefined}\n */\n\nexport const sGetDashboardById = (state, id) => orObject(sGetDashboardsRoot(state).byId)[id];\nexport const sDashboardsIsFetching = state => {\n  return sGetDashboardsRoot(state).byId === null;\n};\n/**\n * Selector which returns all dashboards (the byId object)\n *\n * @function\n * @param {Object} state The current state\n * @returns {Object | undefined}\n */\n\nexport const sGetAllDashboards = state => orObject(sGetDashboardsRoot(state).byId);\n/**\n * Selector which returns the current dashboard items\n *\n * @function\n * @param {Object} state The current state\n * @returns {Array}\n */\n\nexport const sGetDashboardItems = state => sGetDashboardsRoot(state).items; // selector level 2\n\nexport const sGetStarredDashboards = state => Object.values(sGetAllDashboards(state)).filter(dashboard => dashboard.starred === true);\nexport const sGetUnstarredDashboards = state => Object.values(sGetAllDashboards(state)).filter(dashboard => dashboard.starred === false); // selector level 3\n\nexport const sGetStarredDashboardIds = state => {\n  return sGetStarredDashboards(state).map(dashboard => dashboard.id);\n};\nexport const sGetUnstarredDashboardIds = state => sGetUnstarredDashboards(state).map(dashboard => dashboard.id);\nexport const sGetDashboardsSortedByStarred = state => [...arraySort(sGetStarredDashboards(state), 'ASC', 'displayName'), ...arraySort(sGetUnstarredDashboards(state), 'ASC', 'displayName')]; // utils\n\n/**\n * Returns the array of dashboards, customized for ui\n * @function\n * @param {Array} data The original dashboard list\n * @returns {Array}\n */\n\nexport const getCustomDashboards = data => arrayFrom(data).map(d => ({\n  id: d.id,\n  name: d.name,\n  displayName: d.displayName,\n  description: d.description,\n  displayDescription: d.displayDescription,\n  starred: d.favorite,\n  owner: d.user.name,\n  created: d.created.split('T').join(' ').substr(0, 16),\n  lastUpdated: d.lastUpdated.split('T').join(' ').substr(0, 16),\n  access: d.access,\n  numberOfItems: orArray(d.dashboardItems).length,\n  dashboardItems: convertBackendItemsToUi(d.dashboardItems)\n}));","/** @module reducers/selected */\nimport { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\nexport const SET_SELECTED_ID = 'SET_SELECTED_ID';\nexport const SET_SELECTED_ISLOADING = 'SET_SELECTED_ISLOADING';\nexport const SET_SELECTED_SHOWDESCRIPTION = 'SET_SELECTED_SHOWDESCRIPTION';\nexport const DEFAULT_STATE_SELECTED_ID = null;\nexport const DEFAULT_STATE_SELECTED_ISLOADING = false;\nexport const DEFAULT_STATE_SELECTED_SHOWDESCRIPTION = false;\nexport const NON_EXISTING_DASHBOARD_ID = '0';\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\n\nconst id = (state = DEFAULT_STATE_SELECTED_ID, action) => {\n  switch (action.type) {\n    case SET_SELECTED_ID:\n      return validateReducer(action.value, DEFAULT_STATE_SELECTED_ID);\n\n    default:\n      return state;\n  }\n};\n\nconst isLoading = (state = DEFAULT_STATE_SELECTED_ISLOADING, action) => {\n  switch (action.type) {\n    case SET_SELECTED_ISLOADING:\n      return validateReducer(action.value, DEFAULT_STATE_SELECTED_ISLOADING);\n\n    default:\n      return state;\n  }\n};\n\nconst showDescription = (state = DEFAULT_STATE_SELECTED_SHOWDESCRIPTION, action) => {\n  switch (action.type) {\n    case SET_SELECTED_SHOWDESCRIPTION:\n      return validateReducer(action.value, DEFAULT_STATE_SELECTED_SHOWDESCRIPTION);\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  id,\n  isLoading,\n  showDescription\n}); // Selectors\n\nexport const sGetSelectedRoot = state => state.selected;\nexport const sGetSelectedId = state => sGetSelectedRoot(state).id;\nexport const sGetSelectedIsLoading = state => sGetSelectedRoot(state).isLoading;\nexport const sGetSelectedShowDescription = state => sGetSelectedRoot(state).showDescription;","import { getDimensionById, DIMENSION_ID_PERIOD, DIMENSION_ID_ORGUNIT } from '@dhis2/analytics';\nexport const SET_DIMENSIONS = 'SET_DIMENSIONS';\nexport const DEFAULT_DIMENSIONS = [getDimensionById(DIMENSION_ID_PERIOD), getDimensionById(DIMENSION_ID_ORGUNIT)];\nexport default ((state = DEFAULT_DIMENSIONS, action) => {\n  switch (action.type) {\n    case SET_DIMENSIONS:\n      {\n        return [...DEFAULT_DIMENSIONS, ...action.value];\n      }\n\n    default:\n      return state;\n  }\n});\nexport const sGetDimensions = state => state.dimensions;","import { sGetDimensions } from './dimensions';\nimport { createSelector } from 'reselect';\nexport const CLEAR_ITEM_FILTERS = 'CLEAR_ITEM_FILTERS';\nexport const SET_ITEM_FILTERS = 'SET_ITEM_FILTERS';\nexport const ADD_ITEM_FILTER = 'ADD_ITEM_FILTER';\nexport const REMOVE_ITEM_FILTER = 'REMOVE_ITEM_FILTER';\nexport const DEFAULT_STATE_ITEM_FILTERS = {};\nexport default ((state = DEFAULT_STATE_ITEM_FILTERS, action) => {\n  switch (action.type) {\n    case ADD_ITEM_FILTER:\n      {\n        return { ...state,\n          [action.filter.id]: action.filter.value\n        };\n      }\n\n    case REMOVE_ITEM_FILTER:\n      {\n        const newState = { ...state\n        };\n        delete newState[action.id];\n        return newState;\n      }\n\n    case SET_ITEM_FILTERS:\n      {\n        return action.filters;\n      }\n\n    case CLEAR_ITEM_FILTERS:\n      {\n        return DEFAULT_STATE_ITEM_FILTERS;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetItemFiltersRoot = state => state.itemFilters; // simplify the filters structure to:\n// [{ id: 'pe', name: 'Period', values: [{ id: 2019: name: '2019' }, {id: 'LAST_MONTH', name: 'Last month' }]}, ...]\n\nexport const sGetNamedItemFilters = createSelector([sGetItemFiltersRoot, sGetDimensions], (filters, dimensions) => Object.keys(filters).reduce((arr, id) => {\n  arr.push({\n    id: id,\n    name: dimensions.find(dimension => dimension.id === id).name,\n    values: filters[id].map(value => ({\n      id: value.id,\n      name: value.displayName || value.name\n    }))\n  });\n  return arr;\n}, []));","import { ADD_ITEM_FILTER, REMOVE_ITEM_FILTER, SET_ITEM_FILTERS, CLEAR_ITEM_FILTERS } from '../reducers/itemFilters';\nexport const FILTER_ORG_UNIT = 'ou'; // actions\n\nexport const acAddItemFilter = filter => ({\n  type: ADD_ITEM_FILTER,\n  filter\n});\nexport const acRemoveItemFilter = id => ({\n  type: REMOVE_ITEM_FILTER,\n  id\n});\nexport const acClearItemFilters = () => ({\n  type: CLEAR_ITEM_FILTERS\n});\nexport const acSetItemFilters = filters => ({\n  type: SET_ITEM_FILTERS,\n  filters\n});","import update from 'immutability-helper';\nimport { arrayToIdMap } from '../modules/util';\nexport const RECEIVED_MESSAGES = 'RECEIVED_MESSAGES';\nexport default ((state = {}, action) => {\n  switch (action.type) {\n    case RECEIVED_MESSAGES:\n      {\n        const conversations = arrayToIdMap(action.value);\n        const newState = update(state, {\n          $merge: conversations\n        });\n        return newState;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetMessagesRoot = state => state.messages;","import { getInstance } from 'd2';\nexport const getMessages = () => {\n  const fields = 'id,messageCount,lastUpdated,messageType,displayName,read,messages[id,read,sender[id,displayName],text,lastUpdated]';\n  const url = `/messageConversations?fields=${fields}&order=read:asc&pageSize=200`;\n  return getInstance().then(d2 => d2.Api.getApi().get(url)).catch(error => console.log('Error:', error));\n};","import { RECEIVED_MESSAGES } from '../../../reducers/messages';\nimport { getMessages } from '../../../api/messages';\n\nconst onError = (action, error) => {\n  console.log(`Error in action ${action}: ${error}`);\n  return error;\n};\n\nexport const receivedMessages = value => ({\n  type: RECEIVED_MESSAGES,\n  value\n});\nexport const tGetMessages = () => async dispatch => {\n  try {\n    const messages = await getMessages();\n    const {\n      messageConversations\n    } = messages;\n    return dispatch(receivedMessages(messageConversations));\n  } catch (err) {\n    return onError('Get Messages', err);\n  }\n};","export const RECEIVED_SNACKBAR_MESSAGE = 'RECEIVED_SNACKBAR_MESSAGE';\nexport const CLOSE_SNACKBAR = 'CLOSE_SNACKBAR';\nexport const DEFAULT_STATE_SNACKBAR = {\n  message: {},\n  duration: null,\n  open: false\n};\nexport default ((state = DEFAULT_STATE_SNACKBAR, action) => {\n  switch (action.type) {\n    case RECEIVED_SNACKBAR_MESSAGE:\n      {\n        return { ...state,\n          ...action.value\n        };\n      }\n\n    case CLOSE_SNACKBAR:\n      {\n        return DEFAULT_STATE_SNACKBAR;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetSnackbar = state => state.snackbar || DEFAULT_STATE_SNACKBAR;","import { RECEIVED_SNACKBAR_MESSAGE, CLOSE_SNACKBAR } from '../reducers/snackbar';\nexport const acReceivedSnackbarMessage = value => ({\n  type: RECEIVED_SNACKBAR_MESSAGE,\n  value\n});\nexport const acCloseSnackbar = () => ({\n  type: CLOSE_SNACKBAR\n});","import { orObject } from '../modules/util';\nimport objectClean from 'd2-utilizr/lib/objectClean';\n/** @module reducers/visualizations */\n\nexport const ADD_VISUALIZATION = 'ADD_VISUALIZATION';\nexport const SET_ACTIVE_VISUALIZATION_TYPE = 'SET_ACTIVE_VISUALIZATION_TYPE';\nexport const DEFAULT_STATE_VISUALIZATIONS = {};\n\nconst isEmpty = p => p === undefined || p === null;\n\nexport default ((state = DEFAULT_STATE_VISUALIZATIONS, action) => {\n  switch (action.type) {\n    case ADD_VISUALIZATION:\n      {\n        return { ...state,\n          [action.value.id]: objectClean({ ...orObject(state[action.value.id]),\n            ...action.value\n          }, isEmpty)\n        };\n      }\n\n    case SET_ACTIVE_VISUALIZATION_TYPE:\n      {\n        return { ...state,\n          [action.id]: objectClean({ ...orObject(state[action.id]),\n            activeType: action.activeType\n          }, isEmpty)\n        };\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetVisualizationsRoot = state => state.visualizations; // selectors level 1\n\nexport const sGetVisualization = (state, id) => {\n  return sGetVisualizationsRoot(state)[id];\n};","import { ADD_VISUALIZATION, SET_ACTIVE_VISUALIZATION_TYPE } from '../reducers/visualizations';\nexport const acAddVisualization = value => ({\n  type: ADD_VISUALIZATION,\n  value\n});\nexport const acSetActiveVisualizationType = (id, activeType) => {\n  const action = {\n    type: SET_ACTIVE_VISUALIZATION_TYPE,\n    id,\n    activeType\n  };\n  return action;\n};","import arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { getListItemFields, getFavoritesFields, getIdNameFields } from './metadata'; // Helper functions\n\nexport const onError = error => console.log('Error: ', error); // Dashboard item\n\nexport const getDashboardItemsFields = ({\n  withFavorite\n} = {}) => arrayClean(['id', 'type', 'shape', 'x', 'y', 'width~rename(w)', 'height~rename(h)', 'messages', 'text', 'appKey', `${getListItemFields().join(',')}`, withFavorite ? `${getFavoritesFields({\n  withDimensions: withFavorite.withDimensions\n}).join(',')}` : ``]); // Dashboard\n\nexport const getDashboardFields = ({\n  withItems,\n  withFavorite\n} = {}) => arrayClean([`${getIdNameFields().join(',')}`, 'description', 'displayDescription', 'favorite', `user[${getIdNameFields({\n  rename: true\n}).join(',')}]`, 'created', 'lastUpdated', 'access', withItems ? `dashboardItems[${getDashboardItemsFields({\n  withFavorite\n}).join(',')}]` : ``]);","import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { onError, getDashboardFields } from './index'; // Get \"all\" dashboards on startup\n\nexport const apiFetchDashboards = () => getInstance().then(d2 => d2.models.dashboard.list({\n  fields: [getDashboardFields().join(','), 'dashboardItems[id]'].join(','),\n  paging: 'false'\n})).catch(onError); // Get more info about selected dashboard\n\nexport const apiFetchDashboard = id => getInstance().then(d2 => d2.models.dashboard.get(id, {\n  fields: arrayClean(getDashboardFields({\n    withItems: true,\n    withFavorite: {\n      withDimensions: false\n    }\n  })).join(',')\n})).catch(onError); // Star dashboard\n\nexport const apiStarDashboard = (id, isStarred) => {\n  const url = `dashboards/${id}/favorite`;\n  getInstance().then(d2 => {\n    if (isStarred) {\n      d2.Api.getApi().post(url);\n    } else {\n      d2.Api.getApi().delete(url);\n    }\n  });\n};\nexport const apiDeleteDashboard = id => {\n  return getInstance().then(d2 => {\n    return d2.models.dashboards.get(id).then(dashboard => dashboard.delete());\n  }).catch(onError);\n};","import { getInstance } from 'd2';\nexport const NAMESPACE = 'dashboard';\nexport const hasNamespace = async (d2) => await d2.currentUser.dataStore.has(NAMESPACE);\nexport const getNamespace = async (d2, hasNamespace) => hasNamespace ? await d2.currentUser.dataStore.get(NAMESPACE) : await d2.currentUser.dataStore.create(NAMESPACE);\nexport const apiPostUserDataStoreValue = async (key, value) => {\n  const d2 = await getInstance();\n  const ns = await getNamespace(d2, hasNamespace);\n  ns.set(key, value);\n};\nexport const apiGetUserDataStoreValue = async (key, defaultValue) => {\n  const d2 = await getInstance();\n  const namespace = await getNamespace(d2, await hasNamespace(d2));\n  const hasKey = namespace?.keys?.find(k => k === key);\n\n  if (hasKey) {\n    return await namespace.get(key);\n  } else {\n    await apiPostUserDataStoreValue(key, defaultValue, namespace);\n    console.log('(These errors to /userDataStore can be ignored)');\n    return defaultValue;\n  }\n};","import React from 'react';\nimport { connect } from 'react-redux';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport PropTypes from 'prop-types';\nimport { sGetSnackbar } from '../../reducers/snackbar';\nimport { acCloseSnackbar } from '../../actions/snackbar';\nconst LOADING_DASHBOARD = 'LOADING_DASHBOARD';\nexport const loadingDashboardMsg = {\n  name: '',\n  type: LOADING_DASHBOARD\n};\n\nconst SnackbarMessageContent = ({\n  message\n}) => {\n  if (typeof message === 'object') {\n    //future message types:  switch(message.type)\n    return <span>\n                Loading <span style={{\n        fontWeight: 800\n      }}>{message.name}</span>{' '}\n                dashboard\n            </span>;\n  }\n\n  return message;\n};\n\nexport const SnackbarMessage = props => {\n  return <Snackbar style={{\n    zIndex: 10001\n  }} open={props.snackbarOpen} message={<SnackbarMessageContent message={props.snackbarMessage} />} autoHideDuration={props.snackbarDuration} onClose={props.onCloseSnackbar} />;\n};\n\nconst mapStateToProps = state => {\n  const {\n    message,\n    duration,\n    open\n  } = sGetSnackbar(state);\n  return {\n    snackbarOpen: open,\n    snackbarMessage: message,\n    snackbarDuration: duration\n  };\n};\n\nSnackbarMessage.propTypes = {\n  snackbarDuration: PropTypes.string,\n  snackbarMessage: PropTypes.object,\n  snackbarOpen: PropTypes.bool,\n  onCloseSnackbar: PropTypes.func\n};\nexport default connect(mapStateToProps, {\n  onCloseSnackbar: acCloseSnackbar\n})(SnackbarMessage);","import { getCustomDashboards, sGetDashboardById, EMPTY_DASHBOARD } from '../reducers/dashboards';\nimport { SET_SELECTED_ID, SET_SELECTED_ISLOADING, SET_SELECTED_SHOWDESCRIPTION, sGetSelectedIsLoading, sGetSelectedId } from '../reducers/selected';\nimport { sGetUserUsername } from '../reducers/user';\nimport { acSetDashboardItems, acAppendDashboards } from './dashboards';\nimport { acClearItemFilters } from './itemFilters';\nimport { tGetMessages } from '../components/Item/MessagesItem/actions';\nimport { acReceivedSnackbarMessage, acCloseSnackbar } from './snackbar';\nimport { acAddVisualization } from './visualizations';\nimport { apiFetchDashboard } from '../api/dashboards';\nimport { storePreferredDashboardId } from '../api/localStorage';\nimport { apiGetShowDescription, apiPostShowDescription } from '../api/description';\nimport { withShape } from '../components/ItemGrid/gridUtil';\nimport { loadingDashboardMsg } from '../components/SnackbarMessage/SnackbarMessage';\nimport { extractFavorite } from '../components/Item/VisualizationItem/plugin';\nimport { REPORT_TABLE, CHART, MAP, EVENT_REPORT, EVENT_CHART, MESSAGES } from '../modules/itemTypes'; // actions\n\nexport const acSetSelectedId = value => ({\n  type: SET_SELECTED_ID,\n  value\n});\nexport const acSetSelectedIsLoading = value => ({\n  type: SET_SELECTED_ISLOADING,\n  value\n});\nexport const acSetSelectedShowDescription = value => ({\n  type: SET_SELECTED_SHOWDESCRIPTION,\n  value\n}); // thunks\n\nexport const tSetSelectedDashboardById = id => async (dispatch, getState) => {\n  dispatch(acSetSelectedIsLoading(true));\n  const snackbarTimeout = setTimeout(() => {\n    const dashboardName = (sGetDashboardById(getState(), id) || EMPTY_DASHBOARD).displayName;\n\n    if (sGetSelectedIsLoading(getState()) && dashboardName) {\n      loadingDashboardMsg.name = dashboardName;\n      dispatch(acReceivedSnackbarMessage({\n        message: loadingDashboardMsg,\n        open: true\n      }));\n    }\n  }, 500);\n\n  const onSuccess = selected => {\n    dispatch(acAppendDashboards(selected));\n    const customDashboard = getCustomDashboards(selected)[0];\n    dispatch(acSetDashboardItems(withShape(customDashboard.dashboardItems)));\n    storePreferredDashboardId(sGetUserUsername(getState()), id);\n    customDashboard.dashboardItems.forEach(item => {\n      switch (item.type) {\n        case REPORT_TABLE:\n        case CHART:\n        case MAP:\n        case EVENT_REPORT:\n        case EVENT_CHART:\n          dispatch(acAddVisualization(extractFavorite(item)));\n          break;\n\n        case MESSAGES:\n          dispatch(tGetMessages(id));\n          break;\n\n        default:\n          break;\n      }\n    });\n\n    if (id !== sGetSelectedId(getState())) {\n      dispatch(acClearItemFilters());\n    }\n\n    dispatch(acSetSelectedId(id));\n    dispatch(acSetSelectedIsLoading(false));\n    clearTimeout(snackbarTimeout);\n    dispatch(acCloseSnackbar());\n    return selected;\n  };\n\n  const onError = error => {\n    console.log('Error: ', error);\n    return error;\n  };\n\n  try {\n    const dashboard = await apiFetchDashboard(id);\n    return onSuccess(dashboard);\n  } catch (err) {\n    return onError(err);\n  }\n};\nexport const tSetShowDescription = () => async dispatch => {\n  const onSuccess = value => {\n    dispatch(acSetSelectedShowDescription(value));\n  };\n\n  const onError = error => {\n    console.log('Error (apiGetShowDescription): ', error);\n    return error;\n  };\n\n  try {\n    const showDescription = await apiGetShowDescription();\n    return onSuccess(showDescription);\n  } catch (err) {\n    return onError(err);\n  }\n};\nexport const tUpdateShowDescription = value => async dispatch => {\n  const onSuccess = () => {\n    dispatch(acSetSelectedShowDescription(value));\n  };\n\n  const onError = error => {\n    console.log('Error (apiGetShowDescription): ', error);\n    return error;\n  };\n\n  try {\n    await apiPostShowDescription(value);\n    return onSuccess();\n  } catch (err) {\n    return onError(err);\n  }\n};","export const getPreferredDashboardId = username => localStorage.getItem(`dhis2.dashboard.current.${username}`) || undefined;\nexport const storePreferredDashboardId = (username, dashboardId) => {\n  localStorage.setItem(`dhis2.dashboard.current.${username}`, dashboardId);\n};","import { apiGetUserDataStoreValue, apiPostUserDataStoreValue } from './userDataStore';\nimport { DEFAULT_STATE_SELECTED_SHOWDESCRIPTION } from '../reducers/selected';\nconst KEY_SHOW_DESCRIPTION = 'showDescription';\nexport const apiGetShowDescription = async () => await apiGetUserDataStoreValue(KEY_SHOW_DESCRIPTION, DEFAULT_STATE_SELECTED_SHOWDESCRIPTION);\nexport const apiPostShowDescription = async (value) => await apiPostUserDataStoreValue(KEY_SHOW_DESCRIPTION, value);","import { SET_DASHBOARDS, ADD_DASHBOARDS, SET_DASHBOARD_STARRED, SET_DASHBOARD_DISPLAY_NAME, SET_DASHBOARD_ITEMS } from '../reducers/dashboards';\nimport { getCustomDashboards, sGetDashboardById, sGetDashboardsSortedByStarred } from '../reducers/dashboards';\nimport { NON_EXISTING_DASHBOARD_ID } from '../reducers/selected';\nimport { sGetUserUsername } from '../reducers/user';\nimport { tSetSelectedDashboardById, acSetSelectedId } from './selected';\nimport { apiFetchDashboards, apiStarDashboard, apiDeleteDashboard } from '../api/dashboards';\nimport { getPreferredDashboardId } from '../api/localStorage';\nimport { arrayToIdMap } from '../modules/util'; // actions\n\nexport const acSetDashboards = dashboards => ({\n  type: SET_DASHBOARDS,\n  value: arrayToIdMap(getCustomDashboards(dashboards))\n});\nexport const acAppendDashboards = dashboards => ({\n  type: ADD_DASHBOARDS,\n  value: arrayToIdMap(getCustomDashboards(dashboards))\n});\nexport const acSetDashboardStarred = (dashboardId, isStarred) => ({\n  type: SET_DASHBOARD_STARRED,\n  dashboardId: dashboardId,\n  value: isStarred\n});\nexport const acSetDashboardDisplayName = (dashboardId, value) => ({\n  type: SET_DASHBOARD_DISPLAY_NAME,\n  dashboardId,\n  value\n});\nexport const acSetDashboardItems = value => ({\n  type: SET_DASHBOARD_ITEMS,\n  value\n}); // thunks\n\nexport const tFetchDashboards = () => async dispatch => {\n  const collection = await apiFetchDashboards();\n  dispatch(acSetDashboards(collection.toArray()));\n};\nexport const tSelectDashboard = id => async (dispatch, getState) => {\n  const onError = error => {\n    console.log('Error (apiFetchDashboards): ', error);\n    return error;\n  };\n\n  try {\n    const state = getState();\n    let dashboardToSelect = null;\n\n    if (id) {\n      dashboardToSelect = sGetDashboardById(state, id) || null;\n    } else {\n      const preferredId = getPreferredDashboardId(sGetUserUsername(state));\n      const dash = sGetDashboardById(state, preferredId);\n      dashboardToSelect = preferredId && dash ? dash : sGetDashboardsSortedByStarred(state)[0];\n    }\n\n    if (dashboardToSelect) {\n      dispatch(tSetSelectedDashboardById(dashboardToSelect.id));\n    } else {\n      dispatch(acSetSelectedId(NON_EXISTING_DASHBOARD_ID));\n    }\n  } catch (err) {\n    return onError(err);\n  }\n};\nexport const tStarDashboard = (id, isStarred) => async dispatch => {\n  const onSuccess = id => {\n    dispatch(acSetDashboardStarred(id, isStarred));\n    return id;\n  };\n\n  const onError = error => {\n    console.log('Error (apiStarDashboard): ', error);\n    return error;\n  };\n\n  try {\n    await apiStarDashboard(id, isStarred);\n    return onSuccess(id);\n  } catch (err) {\n    return onError(err);\n  }\n};\nexport const tDeleteDashboard = id => async dispatch => {\n  try {\n    await apiDeleteDashboard(id);\n    await dispatch(tFetchDashboards());\n    return Promise.resolve();\n  } catch (err) {\n    console.log('Error (deleteDashboard): ', err);\n    return err;\n  }\n};","/** @module reducers/controlBar */\nimport { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\nexport const SET_CONTROLBAR_USER_ROWS = 'SET_CONTROLBAR_USER_ROWS';\nexport const DEFAULT_STATE_CONTROLBAR_ROWS = 1;\n\nconst userRows = (state = DEFAULT_STATE_CONTROLBAR_ROWS, action) => {\n  switch (action.type) {\n    case SET_CONTROLBAR_USER_ROWS:\n      return validateReducer(action.value, DEFAULT_STATE_CONTROLBAR_ROWS);\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  userRows\n});\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\n\nexport const sGetControlBarRoot = state => state.controlBar; // Selector dependency level 2\n\nexport const sGetControlBarUserRows = state => sGetControlBarRoot(state).userRows;","import { SET_CONTROLBAR_USER_ROWS } from '../reducers/controlBar';\nimport { apiGetControlBarRows } from '../api/controlBar'; // actions\n\nexport const acSetControlBarUserRows = rows => ({\n  type: SET_CONTROLBAR_USER_ROWS,\n  value: rows\n}); // thunks\n\nexport const tSetControlBarRows = () => async dispatch => {\n  const onSuccess = rows => {\n    dispatch(acSetControlBarUserRows(rows));\n  };\n\n  const onError = error => {\n    console.log('Error (apiGetControlBarRows): ', error);\n    return error;\n  };\n\n  try {\n    const controlBarRows = await apiGetControlBarRows();\n    return onSuccess(controlBarRows);\n  } catch (err) {\n    return onError(err);\n  }\n};","import { apiGetUserDataStoreValue, apiPostUserDataStoreValue } from './userDataStore';\nimport { DEFAULT_STATE_CONTROLBAR_ROWS } from '../reducers/controlBar';\nconst KEY_CONTROLBAR_ROWS = 'controlBarRows';\nexport const apiGetControlBarRows = async () => await apiGetUserDataStoreValue(KEY_CONTROLBAR_ROWS, DEFAULT_STATE_CONTROLBAR_ROWS);\nexport const apiPostControlBarRows = async (value) => await apiPostUserDataStoreValue(KEY_CONTROLBAR_ROWS, value);","export const SET_SETTINGS = 'SET_SETTINGS';\nexport const ADD_SETTINGS = 'ADD_SETTINGS';\nexport const DEFAULT_SETTINGS = {\n  keyDateFormat: 'yyyy-MM-dd',\n  keyAnalysisRelativePeriod: 'LAST_12_MONTHS',\n  keyAnalysisDigitGroupSeparator: 'SPACE',\n  displayNameProperty: 'displayName',\n  uiLocale: 'en',\n  rootOrganisationUnit: {}\n};\nexport default ((state = DEFAULT_SETTINGS, action) => {\n  switch (action.type) {\n    case SET_SETTINGS:\n      {\n        return Object.assign({}, action.value);\n      }\n\n    case ADD_SETTINGS:\n      {\n        return { ...state,\n          ...action.value\n        };\n      }\n\n    default:\n      return state;\n  }\n}); // Selectors\n\nexport const sGetSettings = state => state.settings;\nexport const sGetSettingsDisplayNameProperty = state => sGetSettings(state).displayNameProperty;\nexport const sGetRootOrgUnit = state => sGetSettings(state).rootOrganisationUnit;\nexport const sGetRelativePeriod = state => sGetSettings(state).keyAnalysisRelativePeriod;\nexport const sGetUiLocale = state => sGetSettings(state).uiLocale;","import { SET_DIMENSIONS } from '../reducers/dimensions';\nimport { apiFetchDimensions } from '@dhis2/analytics';\nimport { sGetSettingsDisplayNameProperty } from '../reducers/settings';\nexport const acSetDimensions = dimensions => ({\n  type: SET_DIMENSIONS,\n  value: dimensions\n});\nexport const tSetDimensions = d2 => async (dispatch, getState) => {\n  const onSuccess = dimensions => {\n    dispatch(acSetDimensions(dimensions));\n  };\n\n  const onError = error => {\n    console.log('Error (apiFetchDimensions): ', error);\n    return error;\n  };\n\n  try {\n    const displayNameProp = sGetSettingsDisplayNameProperty(getState());\n    const dimensions = await apiFetchDimensions(d2, displayNameProp); // filter out CATEGORY that are not of type ATTRIBUTE\n\n    const filteredDimensions = dimensions.filter(dim => dim.dimensionType !== 'CATEGORY' || dim.dimensionType === 'CATEGORY' && dim.dataDimensionType === 'ATTRIBUTE');\n    return onSuccess(filteredDimensions);\n  } catch (err) {\n    return onError(err);\n  }\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { colors } from '@dhis2/ui';\nimport classes from './styles/ControlBar.module.css';\nexport const DRAG_HANDLE_HEIGHT = 7;\n\nclass ControlBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dragging: false\n    };\n  }\n\n  onStartDrag = () => {\n    this.setState({\n      dragging: true\n    });\n    window.addEventListener('mousemove', this.onDrag);\n    window.addEventListener('mouseup', this.onEndDrag);\n  };\n  onDrag = event => {\n    event.preventDefault();\n    event.stopPropagation();\n    const newHeight = event.clientY;\n\n    if (this.props.onChangeHeight && newHeight !== this.props.height && newHeight > 0) {\n      requestAnimationFrame(() => {\n        this.props.onChangeHeight(newHeight);\n      });\n    }\n  };\n  onEndDrag = () => {\n    this.setState({\n      dragging: false\n    });\n    window.removeEventListener('mousemove', this.onDrag);\n    window.removeEventListener('mouseup', this.onEndDrag);\n\n    if (this.props.onEndDrag) {\n      this.props.onEndDrag();\n    }\n  };\n\n  renderDragHandle() {\n    return typeof this.props.onChangeHeight === 'function' ? <div className={classes.draghandle} style={{\n      height: DRAG_HANDLE_HEIGHT\n    }} onMouseDown={this.onStartDrag} /> : null;\n  }\n\n  render() {\n    const height = Math.max(this.props.height, 0) + DRAG_HANDLE_HEIGHT;\n    const rootStyle = Object.assign({\n      height,\n      backgroundColor: this.props.editMode ? colors.yellow050 : colors.white,\n      paddingBottom: DRAG_HANDLE_HEIGHT\n    }, // Disable animations while dragging\n    this.state.dragging ? {\n      transition: 'none'\n    } : {});\n    return <div style={rootStyle} className={classes.root}>\n                <div className={classes.content}>{this.props.children}</div>\n                {this.renderDragHandle()}\n            </div>;\n  }\n\n}\n\nControlBar.propTypes = {\n  /**\n   * The height of the control bar in number of lines. Must be a positive integer.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * If true, the background color of the control bar changes to indicate that edit mode is active.\n   */\n  editMode: PropTypes.bool.isRequired,\n\n  /**\n   * Callback function that is called when the control bar is resized.\n   * The callback receives one argument: The new height in pixels.\n   *\n   * If no callback is specified the control bar will not have a drag handle.\n   */\n  height: PropTypes.number.isRequired,\n\n  /**\n   * Callback function that is called when the control bar is dropped after being dragged.\n   * The callback receives one argument: The new height in pixels.\n   *\n   * Ignored if no \"onChangeHeight\" function is provided.\n   */\n  onChangeHeight: PropTypes.func,\n\n  /**\n   * The contents of the control bar.\n   */\n  onEndDrag: PropTypes.func\n};\nControlBar.defaultProps = {\n  onChangeHeight: null,\n  onEndDrag: null\n};\nexport default ControlBar;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst StarIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>;\n\nStarIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default StarIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Chip } from '@dhis2/ui';\nimport { Link } from 'react-router-dom';\nimport debounce from 'lodash/debounce';\nimport StarIcon from '../../icons/Star';\nimport { apiPostDataStatistics } from '../../api/dataStatistics';\nimport classes from './styles/DashboardItemChip.module.css';\nexport const DashboardItemChip = ({\n  starred,\n  selected,\n  label,\n  dashboardId\n}) => {\n  const chipProps = {\n    selected\n  };\n\n  if (starred) {\n    const selectedState = selected ? classes.selected : classes.unselected;\n    chipProps.icon = <StarIcon className={`${classes.icon} ${selectedState}`} />;\n  }\n\n  return <Link className={classes.link} to={`/${dashboardId}`} onClick={debounce(() => apiPostDataStatistics('DASHBOARD_VIEW', dashboardId), 500)}>\n            <Chip {...chipProps}>{label}</Chip>\n        </Link>;\n};\nDashboardItemChip.propTypes = {\n  dashboardId: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  selected: PropTypes.bool.isRequired,\n  starred: PropTypes.bool.isRequired,\n  classes: PropTypes.object\n};\nexport default DashboardItemChip;","import { getInstance } from 'd2';\nexport const apiPostDataStatistics = async (eventType, id) => {\n  const d2 = await getInstance();\n  const url = `dataStatistics?eventType=${eventType}&favorite=${id}`;\n  d2.Api.getApi().post(url);\n};","import React from 'react';\nimport { colors } from '@dhis2/ui';\n\nconst AddCircleIcon = () => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" fill={colors.teal600} viewBox=\"0 0 24 24\">\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm4 11h-3v3c0 .55-.45 1-1 1s-1-.45-1-1v-3H8c-.55 0-1-.45-1-1s.45-1 1-1h3V8c0-.55.45-1 1-1s1 .45 1 1v3h3c.55 0 1 .45 1 1s-.45 1-1 1z\" />\n    </svg>;\n\nexport default AddCircleIcon;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst ClearIcon = ({\n  className\n}) => <svg className={className} fill={colors.grey800} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n        <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>;\n\nClearIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default ClearIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ClearIcon from '../../icons/Clear';\nimport classes from './styles/ClearButton.module.css';\nexport const ClearButton = ({\n  onClear\n}) => <button className={classes.button} onClick={onClear}>\n        <span>\n            <ClearIcon className={classes.icon} color=\"action\" />\n        </span>\n    </button>;\nClearButton.propTypes = {\n  onClear: PropTypes.func.isRequired\n};\nexport default ClearButton;","import { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\nexport const SET_DASHBOARDS_FILTER_NAME = 'SET_DASHBOARDS_FILTER_NAME';\nexport const SET_DASHBOARDS_FILTER_OWNER = 'SET_DASHBOARDS_FILTER_OWNER';\nexport const SET_DASHBOARDS_FILTER_ORDER = 'SET_DASHBOARDS_FILTER_ORDER';\nexport const ownerData = [{\n  id: 'ALL',\n  value: 'All users'\n}, {\n  id: 'ME',\n  value: 'Created by me'\n}, {\n  id: 'OTHERS',\n  value: 'Created by others'\n}];\nexport const orderData = [{\n  id: 'NAME:ASC',\n  value: 'Name (asc)'\n}, {\n  id: 'NAME:ASC',\n  value: 'Name (desc)'\n}, {\n  id: 'ITEMS:ASC',\n  value: 'Number of items (asc)'\n}, {\n  id: 'ITEMS:ASC',\n  value: 'Number of items (desc)'\n}, {\n  id: 'CREATED:ASC',\n  value: 'Created date (asc)'\n}, {\n  id: 'CREATED:ASC',\n  value: 'Created date (desc)'\n}];\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_NAME = '';\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_OWNER = ownerData[0].id;\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_ORDER = orderData[0].id;\n\nconst name = (state = DEFAULT_STATE_DASHBOARDS_FILTER_NAME, action) => {\n  switch (action.type) {\n    case SET_DASHBOARDS_FILTER_NAME:\n      return validateReducer(action.value, DEFAULT_STATE_DASHBOARDS_FILTER_NAME);\n\n    default:\n      return state;\n  }\n};\n\nconst owner = (state = DEFAULT_STATE_DASHBOARDS_FILTER_OWNER, action) => {\n  switch (action.type) {\n    case SET_DASHBOARDS_FILTER_OWNER:\n      return validateReducer(action.value, DEFAULT_STATE_DASHBOARDS_FILTER_NAME);\n\n    default:\n      return state;\n  }\n};\n\nconst order = (state = DEFAULT_STATE_DASHBOARDS_FILTER_ORDER, action) => {\n  switch (action.type) {\n    case SET_DASHBOARDS_FILTER_ORDER:\n      return validateReducer(action.value, DEFAULT_STATE_DASHBOARDS_FILTER_ORDER);\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  name,\n  owner,\n  order\n}); // selectors\n\nexport const sGetDashboardsFilterRoot = state => state.dashboardsFilter; // selector dependency level 2\n\nexport const sGetFilterName = state => sGetDashboardsFilterRoot(state).name;\nexport const sGetFilterOwner = state => sGetDashboardsFilterRoot(state).owner;\nexport const sGetFilterOrder = state => sGetDashboardsFilterRoot(state).order;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { withStyles } from '@material-ui/core/styles';\nimport InputField from '@material-ui/core/Input';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { colors } from '@dhis2/ui';\nimport ClearButton from './ClearButton';\nimport { DEFAULT_STATE_DASHBOARDS_FILTER_NAME } from '../../reducers/dashboardsFilter';\nconst styles = {\n  filterField: {\n    fontSize: '14px',\n    width: '200px',\n    height: '30px',\n    top: '-4px'\n  },\n  searchIcon: {\n    color: colors.grey700,\n    width: '20px',\n    height: '20px'\n  }\n};\nexport const KEYCODE_ENTER = 13;\nexport const KEYCODE_ESCAPE = 27;\nexport class Filter extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: DEFAULT_STATE_DASHBOARDS_FILTER_NAME\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      value: nextProps.name\n    });\n  }\n\n  setFilterValue = event => {\n    event.preventDefault();\n    this.props.onChangeName(event.target.value);\n  };\n  handleKeyUp = event => {\n    switch (event.keyCode) {\n      case KEYCODE_ENTER:\n        this.props.onKeypressEnter();\n        break;\n\n      case KEYCODE_ESCAPE:\n        this.props.onChangeName();\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  render() {\n    const {\n      classes,\n      name,\n      onChangeName\n    } = this.props;\n    const startAdornment = <InputAdornment position=\"start\">\n                <SearchIcon className={classes.searchIcon} />\n            </InputAdornment>;\n    const endAdornment = name !== '' && name !== null ? <InputAdornment position=\"end\">\n                    <ClearButton onClear={() => onChangeName()} />\n                </InputAdornment> : null;\n    return <InputField className={classes.filterField} placeholder={i18n.t('Search for a dashboard')} startAdornment={startAdornment} endAdornment={endAdornment} value={this.state.value} onChange={this.setFilterValue} onKeyUp={this.handleKeyUp} />;\n  }\n\n}\nFilter.propTypes = {\n  classes: PropTypes.object,\n  name: PropTypes.string,\n  onChangeName: PropTypes.func,\n  onKeypressEnter: PropTypes.func\n};\nFilter.defaultProps = {\n  name: '',\n  onChangeName: Function.prototype\n};\nexport default withStyles(styles)(Filter);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport classes from './styles/ShowMoreButton.module.css';\nexport const SHOWMORE_BAR_HEIGHT = 16;\nexport const ShowMoreButton = ({\n  onClick,\n  isMaxHeight,\n  disabled\n}) => {\n  return <div style={{\n    textAlign: 'center'\n  }}>\n            {disabled ? <div className={classes.disabled}>{i18n.t('Show more')}</div> : <div className={classes.showMore} onClick={onClick}>\n                    {isMaxHeight ? i18n.t('Show less') : i18n.t('Show more')}\n                </div>}\n        </div>;\n};\nShowMoreButton.propTypes = {\n  disabled: PropTypes.bool,\n  isMaxHeight: PropTypes.bool,\n  onClick: PropTypes.func\n};\nexport default ShowMoreButton;","import { SHOWMORE_BAR_HEIGHT } from './ShowMoreButton';\nexport const CONTROL_BAR_ROW_HEIGHT = 40;\nexport const FIRST_ROW_PADDING_HEIGHT = 10;\nexport const MIN_ROW_COUNT = 1;\nexport const HEADERBAR_HEIGHT = 48;\nconst CONTROL_BAR_OUTER_HEIGHT_DIFF = FIRST_ROW_PADDING_HEIGHT + SHOWMORE_BAR_HEIGHT - 2; // 2 pixel \"adjustment\"\n\nexport const getRowsHeight = rows => {\n  return rows * CONTROL_BAR_ROW_HEIGHT;\n};\nexport const getNumRowsFromHeight = height => {\n  return Math.floor((height - CONTROL_BAR_OUTER_HEIGHT_DIFF) / CONTROL_BAR_ROW_HEIGHT);\n};\nexport const getControlBarHeight = rows => {\n  return getRowsHeight(rows) + CONTROL_BAR_OUTER_HEIGHT_DIFF;\n};","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport ControlBar from './ControlBar';\nimport arraySort from 'd2-utilizr/lib/arraySort';\nimport PropTypes from 'prop-types';\nimport Chip from './DashboardItemChip';\nimport AddCircleIcon from '../../icons/AddCircle';\nimport Filter from './Filter';\nimport ShowMoreButton from './ShowMoreButton';\nimport { FIRST_ROW_PADDING_HEIGHT, MIN_ROW_COUNT, getRowsHeight, getControlBarHeight, getNumRowsFromHeight } from './controlBarDimensions';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { sGetAllDashboards } from '../../reducers/dashboards';\nimport { sGetFilterName } from '../../reducers/dashboardsFilter';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { acSetControlBarUserRows } from '../../actions/controlBar';\nimport { acSetFilterName } from '../../actions/dashboardsFilter';\nimport { orObject, orArray } from '../../modules/util';\nimport { apiPostControlBarRows } from '../../api/controlBar';\nimport classes from './styles/DashboardsBar.module.css';\nexport const MAX_ROW_COUNT = 10;\nexport class DashboardsBar extends Component {\n  state = {\n    rows: MIN_ROW_COUNT\n  };\n  setInitialDashboardState = rows => {\n    this.setState({\n      rows,\n      isMaxHeight: rows === MAX_ROW_COUNT\n    });\n  };\n\n  componentDidMount() {\n    this.setInitialDashboardState(this.props.userRows);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setInitialDashboardState(nextProps.userRows);\n  }\n\n  onChangeHeight = newHeight => {\n    const adjustedHeight = newHeight - 52; // don't rush the transition to a bigger row count\n\n    const newRows = Math.max(MIN_ROW_COUNT, getNumRowsFromHeight(adjustedHeight));\n\n    if (newRows !== this.state.rows) {\n      const newRowCount = Math.min(newRows, MAX_ROW_COUNT);\n      this.props.onChangeHeight(newRowCount);\n    }\n  };\n  onEndDrag = () => {\n    return apiPostControlBarRows(this.state.rows);\n  };\n  onToggleMaxHeight = () => {\n    const rows = this.state.rows === MAX_ROW_COUNT ? this.props.userRows : MAX_ROW_COUNT;\n    this.setState({\n      rows,\n      isMaxHeight: !this.state.isMaxHeight\n    });\n  };\n  onSelectDashboard = () => {\n    this.props.history.push(`/${this.props.dashboards[0].id}`);\n  };\n\n  render() {\n    const {\n      dashboards,\n      name,\n      selectedId,\n      onChangeFilterName\n    } = this.props;\n    const rowCount = this.state.isMaxHeight ? MAX_ROW_COUNT : this.state.rows;\n    const controlBarHeight = getControlBarHeight(rowCount);\n    const contentWrapperStyle = {\n      padding: `${FIRST_ROW_PADDING_HEIGHT}px 6px 0 6px`,\n      overflowY: this.state.isMaxHeight ? 'auto' : 'hidden',\n      height: getRowsHeight(rowCount) + FIRST_ROW_PADDING_HEIGHT\n    };\n    return <ControlBar height={controlBarHeight} onChangeHeight={this.onChangeHeight} onEndDrag={this.onEndDrag} editMode={false}>\n                <div style={contentWrapperStyle}>\n                    <div className={classes.leftControls}>\n                        <Link style={{\n            display: 'inline-block',\n            textDecoration: 'none',\n            marginRight: 10,\n            position: 'relative',\n            top: '2px'\n          }} to={'/new'}>\n                            <AddCircleIcon />\n                        </Link>\n                        <Filter name={name} onChangeName={onChangeFilterName} onKeypressEnter={this.onSelectDashboard} />\n                    </div>\n                    {orArray(dashboards).map(dashboard => <Chip key={dashboard.id} label={dashboard.displayName} starred={dashboard.starred} dashboardId={dashboard.id} selected={dashboard.id === selectedId} />)}\n                </div>\n                <ShowMoreButton onClick={this.onToggleMaxHeight} isMaxHeight={this.state.isMaxHeight} disabled={this.props.userRows === MAX_ROW_COUNT} />\n            </ControlBar>;\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  dashboards: sGetAllDashboards(state),\n  name: sGetFilterName(state),\n  userRows: sGetControlBarUserRows(state),\n  selectedId: sGetSelectedId(state)\n});\n\nconst mapDispatchToProps = {\n  onChangeHeight: acSetControlBarUserRows,\n  onChangeFilterName: acSetFilterName\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n  const dashboards = Object.values(orObject(stateProps.dashboards));\n  const displayDashboards = arraySort(dashboards.filter(d => d.displayName.toLowerCase().includes(stateProps.name.toLowerCase())), 'ASC', 'displayName');\n  return { ...stateProps,\n    ...ownProps,\n    ...dispatchProps,\n    dashboards: [...displayDashboards.filter(d => d.starred), ...displayDashboards.filter(d => !d.starred)]\n  };\n};\n\nDashboardsBar.propTypes = {\n  dashboards: PropTypes.array,\n  history: PropTypes.object,\n  name: PropTypes.string,\n  selectedId: PropTypes.string,\n  userRows: PropTypes.number,\n  onChangeFilterName: PropTypes.func,\n  onChangeHeight: PropTypes.func\n};\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps, mergeProps)(DashboardsBar));","import { SET_DASHBOARDS_FILTER_NAME, SET_DASHBOARDS_FILTER_OWNER, SET_DASHBOARDS_FILTER_ORDER } from '../reducers/dashboardsFilter'; // actions\n\nexport const acSetFilterName = value => ({\n  type: SET_DASHBOARDS_FILTER_NAME,\n  value\n});\nexport const acSetFilterOwner = value => ({\n  type: SET_DASHBOARDS_FILTER_OWNER,\n  value\n});\nexport const acSetFilterOrder = value => ({\n  type: SET_DASHBOARDS_FILTER_ORDER,\n  value\n});","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { getControlBarHeight, MIN_ROW_COUNT } from '../ControlBar/controlBarDimensions';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { DRAG_HANDLE_HEIGHT } from '../ControlBar/ControlBar';\n\nconst DashboardVerticalOffset = props => {\n  const rows = props.editMode ? MIN_ROW_COUNT : props.userRows;\n  const marginTop = getControlBarHeight(rows) + DRAG_HANDLE_HEIGHT;\n  return <div className=\"page-container-top-margin\" style={{\n    marginTop\n  }} />;\n};\n\nconst mapStateToProps = state => ({\n  userRows: sGetControlBarUserRows(state)\n});\n\nDashboardVerticalOffset.propTypes = {\n  editMode: PropTypes.bool,\n  userRows: PropTypes.number\n};\nexport default connect(mapStateToProps)(DashboardVerticalOffset);","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nexport const NoContentMessage = ({\n  text\n}) => <div style={{\n  padding: '50px 10px',\n  textAlign: 'center',\n  fontSize: '15px',\n  fontWeight: 500,\n  color: colors.grey600\n}}>\n        {text}\n    </div>;\nNoContentMessage.propTypes = {\n  text: PropTypes.string\n};\nexport default NoContentMessage;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { MenuItem, colors } from '@dhis2/ui';\n\nconst HeaderMenuItem = ({\n  title\n}) => <MenuItem dense key={title} disabled label={<span style={{\n  color: colors.grey800,\n  fontWeight: '600'\n}}>\n                {title}\n            </span>} />;\n\nHeaderMenuItem.propTypes = {\n  title: PropTypes.string.isRequired\n};\nexport default HeaderMenuItem;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst LaunchIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\" fill={colors.grey600} viewBox=\"0 0 24 24\">\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z\" />\n    </svg>;\n\nLaunchIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default LaunchIcon;","import React from 'react';\nimport { MenuItem, colors } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport { visTypeIcons } from '@dhis2/analytics';\nimport { getItemIcon, VISUALIZATION } from '../../modules/itemTypes';\nimport LaunchIcon from '../../icons/Launch';\nimport classes from './styles/ContentMenuItem.module.css';\n\nconst LaunchLink = ({\n  url\n}) => <a onClick={e => e.stopPropagation()} className={classes.launchLink} target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n        <LaunchIcon />\n    </a>;\n\nLaunchLink.propTypes = {\n  url: PropTypes.string\n};\n\nconst InsertButton = () => <button className={classes.buttonInsert}>{i18n.t('Insert')}</button>;\n\nconst ContentMenuItem = ({\n  type,\n  name,\n  onInsert,\n  url,\n  visType\n}) => {\n  const ItemIcon = getItemIcon(type);\n  const renderedItemIcon = type === VISUALIZATION ? visTypeIcons[visType] : <ItemIcon style={{\n    fill: colors.grey600\n  }} />;\n  return <MenuItem dense onClick={onInsert} label={<div className={classes.menuItem}>\n                    <div className={classes.label}>\n                        <span style={{\n        marginRight: '6px'\n      }}>\n                            {renderedItemIcon}\n                        </span>\n                        <span>{name}</span>\n                        {url ? <LaunchLink url={url} /> : null}\n                    </div>\n                    <InsertButton />\n                </div>} />;\n};\n\nContentMenuItem.propTypes = {\n  name: PropTypes.string,\n  type: PropTypes.string,\n  url: PropTypes.string,\n  visType: PropTypes.string,\n  onInsert: PropTypes.func\n};\nexport default ContentMenuItem;","/** @module reducers/editDashboard */\nimport update from 'immutability-helper';\nimport isEmpty from 'lodash/isEmpty';\nimport { orArray, orObject } from '../modules/util';\nexport const RECEIVED_EDIT_DASHBOARD = 'RECEIVED_EDIT_DASHBOARD';\nexport const RECEIVED_NOT_EDITING = 'RECEIVED_NOT_EDITING';\nexport const START_NEW_DASHBOARD = 'START_NEW_DASHBOARD';\nexport const RECEIVED_TITLE = 'RECEIVED_TITLE';\nexport const RECEIVED_DESCRIPTION = 'RECEIVED_DESCRIPTION';\nexport const ADD_DASHBOARD_ITEM = 'ADD_DASHBOARD_ITEM';\nexport const REMOVE_DASHBOARD_ITEM = 'REMOVE_DASHBOARD_ITEM';\nexport const UPDATE_DASHBOARD_ITEM = 'UPDATE_DASHBOARD_ITEM';\nexport const RECEIVED_DASHBOARD_LAYOUT = 'RECEIVED_DASHBOARD_LAYOUT';\nexport const SET_PRINT_PREVIEW_VIEW = 'SET_PRINT_PREVIEW_VIEW';\nexport const CLEAR_PRINT_PREVIEW_VIEW = 'CLEAR_PRINT_PREVIEW_VIEW';\nexport const DEFAULT_STATE_EDIT_DASHBOARD = {};\nexport const NEW_DASHBOARD_STATE = {\n  id: '',\n  name: '',\n  access: {},\n  description: '',\n  dashboardItems: [],\n  printPreviewView: false\n};\nexport default ((state = DEFAULT_STATE_EDIT_DASHBOARD, action) => {\n  switch (action.type) {\n    case RECEIVED_EDIT_DASHBOARD:\n      {\n        const newState = {};\n        Object.keys(NEW_DASHBOARD_STATE).map(k => newState[k] = action.value[k]);\n        newState.printPreviewView = false;\n        return newState;\n      }\n\n    case RECEIVED_NOT_EDITING:\n      return DEFAULT_STATE_EDIT_DASHBOARD;\n\n    case SET_PRINT_PREVIEW_VIEW:\n      return Object.assign({}, state, {\n        printPreviewView: true\n      });\n\n    case CLEAR_PRINT_PREVIEW_VIEW:\n      return Object.assign({}, state, {\n        printPreviewView: false\n      });\n\n    case START_NEW_DASHBOARD:\n      return NEW_DASHBOARD_STATE;\n\n    case RECEIVED_TITLE:\n      {\n        return Object.assign({}, state, {\n          name: action.value\n        });\n      }\n\n    case RECEIVED_DESCRIPTION:\n      {\n        return Object.assign({}, state, {\n          description: action.value\n        });\n      }\n\n    case ADD_DASHBOARD_ITEM:\n      if (!action.value.position) {\n        return update(state, {\n          dashboardItems: {\n            $unshift: [action.value]\n          }\n        });\n      }\n\n      return update(state, {\n        dashboardItems: {\n          $splice: [[parseInt(action.value.position), 0, action.value]]\n        }\n      });\n\n    case REMOVE_DASHBOARD_ITEM:\n      {\n        const idToRemove = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === idToRemove);\n\n        if (dashboardItemIndex > -1) {\n          return update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1]]\n            }\n          });\n        }\n\n        return state;\n      }\n\n    case RECEIVED_DASHBOARD_LAYOUT:\n      {\n        const stateItems = orArray(state.dashboardItems);\n        let layoutHasChanged = false;\n        const newStateItems = action.value.map(({\n          x,\n          y,\n          w,\n          h,\n          i\n        }) => {\n          const stateItem = stateItems.find(si => si.id === i);\n\n          if (!(stateItem.x === x && stateItem.y === y && stateItem.w === w && stateItem.h === h)) {\n            layoutHasChanged = true;\n            return Object.assign({}, stateItem, {\n              w,\n              h,\n              x,\n              y\n            });\n          }\n\n          return stateItem;\n        });\n        return layoutHasChanged ? { ...state,\n          dashboardItems: newStateItems\n        } : state;\n      }\n\n    case UPDATE_DASHBOARD_ITEM:\n      {\n        const dashboardItem = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === dashboardItem.id);\n\n        if (dashboardItemIndex > -1) {\n          const newState = update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1, Object.assign({}, dashboardItem)]]\n            }\n          });\n          return newState;\n        }\n\n        return state;\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetEditDashboardRoot = state => state.editDashboard; // selectors\n\nexport const sGetIsEditing = state => !isEmpty(state.editDashboard);\nexport const sGetIsPrintPreviewView = state => sGetEditDashboardRoot(state).printPreviewView;\nexport const sGetIsNewDashboard = state => {\n  return !isEmpty(state.editDashboard) && sGetEditDashboardRoot(state).id === '';\n};\nexport const sGetEditDashboardName = state => sGetEditDashboardRoot(state).name;\nexport const sGetEditDashboardDescription = state => sGetEditDashboardRoot(state).description;\nexport const sGetEditDashboardItems = state => orObject(sGetEditDashboardRoot(state)).dashboardItems;","import { getInstance } from 'd2';\n\nconst onError = error => console.log('Error: ', error);\n\nconst saveDashboard = (dashboard, data) => {\n  const {\n    name,\n    description,\n    dashboardItems\n  } = data;\n  dashboard.name = name;\n  dashboard.description = description;\n  dashboard.dashboardItems = dashboardItems.map(item => Object.assign({}, item, {\n    width: item.w,\n    height: item.h\n  }));\n  return dashboard.save().then(msg => msg.response.uid);\n};\n\nexport const updateDashboard = data => {\n  return getInstance().then(d2 => {\n    return d2.models.dashboards.get(data.id).then(dashboard => saveDashboard(dashboard, data));\n  }).catch(onError);\n};\nexport const postDashboard = data => {\n  return getInstance().then(d2 => {\n    const dashboard = d2.models.dashboards.create();\n    return saveDashboard(dashboard, data);\n  });\n};","import { generateUid } from 'd2/uid';\nimport i18n from '@dhis2/d2-i18n';\nimport { RECEIVED_EDIT_DASHBOARD, START_NEW_DASHBOARD, RECEIVED_NOT_EDITING, RECEIVED_TITLE, RECEIVED_DESCRIPTION, RECEIVED_DASHBOARD_LAYOUT, ADD_DASHBOARD_ITEM, UPDATE_DASHBOARD_ITEM, REMOVE_DASHBOARD_ITEM, SET_PRINT_PREVIEW_VIEW, CLEAR_PRINT_PREVIEW_VIEW } from '../reducers/editDashboard';\nimport { sGetEditDashboardRoot } from '../reducers/editDashboard';\nimport { updateDashboard, postDashboard } from '../api/editDashboard';\nimport { tSetSelectedDashboardById } from '../actions/selected';\nimport { NEW_ITEM_SHAPE, getGridItemProperties, getPageBreakItemShape, getPrintTitlePageItemShape } from '../components/ItemGrid/gridUtil';\nimport { itemTypeMap, PAGEBREAK, PRINT_TITLE_PAGE } from '../modules/itemTypes';\nimport { convertUiItemsToBackend } from '../modules/uiBackendItemConverter';\n\nconst onError = error => {\n  console.log('Error (Saving Dashboard): ', error);\n  return error;\n}; // actions\n\n\nexport const acSetEditDashboard = (dashboard, items) => {\n  const val = { ...dashboard,\n    dashboardItems: items\n  };\n  return {\n    type: RECEIVED_EDIT_DASHBOARD,\n    value: val\n  };\n};\nexport const acSetEditNewDashboard = () => ({\n  type: START_NEW_DASHBOARD\n});\nexport const acClearEditDashboard = () => ({\n  type: RECEIVED_NOT_EDITING\n});\nexport const acSetPrintPreviewView = () => ({\n  type: SET_PRINT_PREVIEW_VIEW\n});\nexport const acClearPrintPreviewView = () => ({\n  type: CLEAR_PRINT_PREVIEW_VIEW\n});\nexport const acSetDashboardTitle = value => ({\n  type: RECEIVED_TITLE,\n  value\n});\nexport const acSetDashboardDescription = value => ({\n  type: RECEIVED_DESCRIPTION,\n  value\n});\nexport const acUpdateDashboardLayout = value => ({\n  type: RECEIVED_DASHBOARD_LAYOUT,\n  value\n});\nexport const acAddDashboardItem = item => {\n  const type = item.type;\n  delete item.type;\n  const itemPropName = itemTypeMap[type].propName;\n  const id = generateUid();\n  const gridItemProperties = getGridItemProperties(id);\n  let shape;\n\n  if (type === PAGEBREAK) {\n    const yPos = item.yPos || 0;\n    shape = getPageBreakItemShape(yPos, item.isStatic);\n  } else if (type === PRINT_TITLE_PAGE) {\n    shape = getPrintTitlePageItemShape();\n  } else {\n    shape = NEW_ITEM_SHAPE;\n  }\n\n  return {\n    type: ADD_DASHBOARD_ITEM,\n    value: {\n      id,\n      type,\n      position: item.position || null,\n      [itemPropName]: item.content,\n      ...NEW_ITEM_SHAPE,\n      ...gridItemProperties,\n      ...shape\n    }\n  };\n};\nexport const acUpdateDashboardItem = item => ({\n  type: UPDATE_DASHBOARD_ITEM,\n  value: item\n});\nexport const acRemoveDashboardItem = value => ({\n  type: REMOVE_DASHBOARD_ITEM,\n  value\n}); // thunks\n\nexport const tSaveDashboard = () => async (dispatch, getState) => {\n  const dashboard = sGetEditDashboardRoot(getState());\n  const dashboardToSave = { ...dashboard,\n    dashboardItems: convertUiItemsToBackend(dashboard.dashboardItems),\n    name: dashboard.name || i18n.t('Untitled dashboard')\n  };\n\n  try {\n    const dashboardId = dashboardToSave.id ? await updateDashboard(dashboardToSave) : await postDashboard(dashboardToSave);\n    dispatch(acClearEditDashboard());\n    await dispatch(tSetSelectedDashboardById(dashboardId));\n    return Promise.resolve(dashboardId);\n  } catch (error) {\n    onError(error);\n  }\n};","import i18n from '@dhis2/d2-i18n';\nimport { VISUALIZATION, MAP, EVENT_CHART, EVENT_REPORT, USERS, REPORTS, RESOURCES, APP, MESSAGES, TEXT, SPACER } from '../../modules/itemTypes';\nexport const singleItems = [{\n  id: 'additional',\n  header: i18n.t('Additional items'),\n  items: [{\n    type: TEXT,\n    name: i18n.t('Text box'),\n    content: ''\n  }, {\n    type: MESSAGES,\n    name: i18n.t('Messages'),\n    content: 'true'\n  }, {\n    type: SPACER,\n    name: i18n.t('Spacer'),\n    content: ''\n  }]\n}]; // categorizedItems are grouped in the item selector menu\n\nexport const categorizedItems = [VISUALIZATION, MAP, EVENT_REPORT, EVENT_CHART, USERS, REPORTS, RESOURCES, APP]; // listItemTypes are included in a single dashboard item\n\nexport const listItemTypes = [REPORTS, RESOURCES, USERS];","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { MenuItem, Divider } from '@dhis2/ui';\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\nimport { tAddListItemContent } from './actions';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\nimport { getItemUrl, APP, VISUALIZATION } from '../../modules/itemTypes';\nimport { categorizedItems, listItemTypes } from './selectableItems';\nimport classes from './styles/CategorizedMenuGroup.module.css';\n\nclass CategorizedMenuGroup extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      seeMore: false\n    };\n  }\n\n  addItem = item => () => {\n    const {\n      type,\n      acAddDashboardItem,\n      tAddListItemContent\n    } = this.props;\n\n    if (type === APP) {\n      acAddDashboardItem({\n        type,\n        content: item.key\n      });\n    } else {\n      const newItem = {\n        id: item.id,\n        name: item.displayName || item.name\n      };\n\n      if (listItemTypes.includes(type)) {\n        tAddListItemContent(type, newItem);\n      } else {\n        acAddDashboardItem({\n          type,\n          content: newItem\n        });\n      }\n    }\n  };\n  toggleSeeMore = () => {\n    this.setState({\n      seeMore: !this.state.seeMore\n    });\n    this.props.onChangeItemsLimit(this.props.type);\n  };\n\n  render() {\n    const {\n      title,\n      type,\n      items,\n      hasMore\n    } = this.props;\n    return <>\n                <HeaderMenuItem title={title} />\n                {items.map(item => {\n        const itemUrl = getItemUrl(type, item, this.context.d2);\n        return <ContentMenuItem key={item.id || item.key} type={type} visType={type === VISUALIZATION ? item.type : type} name={item.displayName || item.name} onInsert={this.addItem(item)} url={itemUrl} />;\n      })}\n                {hasMore ? <MenuItem dense key={`showmore${title}`} onClick={this.toggleSeeMore} label={<button className={classes.showMoreButton}>\n                                {this.state.seeMore ? i18n.t('Show fewer') : i18n.t('Show more')}\n                            </button>} /> : null}\n                <Divider margin=\"8px 0px\" />\n            </>;\n  }\n\n}\n\nCategorizedMenuGroup.propTypes = {\n  items: PropTypes.array.isRequired,\n  title: PropTypes.string.isRequired,\n  type: PropTypes.oneOf(categorizedItems).isRequired,\n  onChangeItemsLimit: PropTypes.func.isRequired,\n  acAddDashboardItem: PropTypes.func,\n  hasMore: PropTypes.bool,\n  tAddListItemContent: PropTypes.func\n};\nCategorizedMenuGroup.contextTypes = {\n  d2: PropTypes.object.isRequired\n};\nexport default connect(null, {\n  acAddDashboardItem,\n  tAddListItemContent\n})(CategorizedMenuGroup);","import { sGetEditDashboardRoot } from '../../reducers/editDashboard';\nimport { itemTypeMap } from '../../modules/itemTypes';\nimport { acAddDashboardItem, acUpdateDashboardItem } from '../../actions/editDashboard';\nexport const tAddListItemContent = (type, content) => (dispatch, getState) => {\n  const state = getState();\n  const listItemType = itemTypeMap[type].propName;\n  const dashboardItems = sGetEditDashboardRoot(state).dashboardItems;\n  const dashboardItemIndex = dashboardItems.findIndex(item => item.type === type);\n  let dashboardItem; // Reports/Resources/Users dashboard item type already present in dashboard\n\n  if (dashboardItemIndex > -1) {\n    dashboardItem = dashboardItems[dashboardItemIndex];\n    dashboardItem[listItemType].push(content);\n    dispatch(acUpdateDashboardItem(dashboardItem));\n  } else {\n    dashboardItem = {\n      type: type,\n      content: [content]\n    };\n    dispatch(acAddDashboardItem(dashboardItem));\n  }\n};","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\nexport const SinglesMenuGroup = ({\n  acAddDashboardItem,\n  category\n}) => {\n  const addToDashboard = ({\n    type,\n    content\n  }) => () => {\n    acAddDashboardItem({\n      type,\n      content\n    });\n  };\n\n  return <>\n            <HeaderMenuItem title={category.header} />\n            {category.items.map(item => <ContentMenuItem key={item.type} type={item.type} name={item.name} onInsert={addToDashboard(item)} />)}\n        </>;\n};\nSinglesMenuGroup.propTypes = {\n  acAddDashboardItem: PropTypes.func,\n  category: PropTypes.object\n};\nexport default connect(null, {\n  acAddDashboardItem\n})(SinglesMenuGroup);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport Popover from '@material-ui/core/Popover';\nimport { InputField, Menu } from '@dhis2/ui';\nimport debounce from 'lodash/debounce';\nimport CategorizedMenuGroup from './CategorizedMenuGroup';\nimport SinglesMenuGroup from './SinglesMenuGroup';\nimport { singleItems, categorizedItems } from './selectableItems';\nimport { itemTypeMap, getDefaultItemCount } from '../../modules/itemTypes';\nimport './styles/ItemSelector.css';\n\nconst ItemSearchField = props => <InputField name=\"Dashboard item search\" label={i18n.t('Search for items to add to this dashboard')} type=\"text\" onChange={props.onChange} onFocus={props.onFocus} value={props.value} />;\n\nclass ItemSelector extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      anchorEl: null,\n      open: false,\n      maxOptions: new Set(),\n      items: undefined,\n      filter: '',\n      debouncedFilter: ''\n    };\n  }\n\n  closeList = () => {\n    this.setState({\n      open: false,\n      filter: ''\n    });\n  };\n  openList = (_, event) => {\n    this.fetchItems();\n    this.setState({\n      anchorEl: event.currentTarget,\n      open: true\n    });\n  };\n  updateDebouncedFilterText = debounce(() => {\n    this.setState({\n      debouncedFilter: this.state.filter\n    }, this.fetchItems);\n  }, 350);\n  setFilter = (_, event) => {\n    this.setState({\n      filter: event.target.value\n    }, this.updateDebouncedFilterText);\n  };\n  getCategorizedMenuGroups = () => categorizedItems.filter(type => {\n    const itemType = itemTypeMap[type];\n    return this.state.items && this.state.items[itemType.endPointName];\n  }).map(type => {\n    const itemType = itemTypeMap[type];\n    const itemCount = getDefaultItemCount(type);\n    const allItems = this.state.items[itemType.endPointName];\n    const hasMore = allItems.length > itemCount;\n    const items = this.state.maxOptions.has(itemType.id) ? allItems : allItems.slice(0, itemCount);\n    return <CategorizedMenuGroup key={type} type={type} title={itemType.pluralTitle} items={items} onChangeItemsLimit={this.fetchItems} hasMore={hasMore} />;\n  });\n  getSinglesMenuGroups = () => singleItems.map(category => <SinglesMenuGroup key={category.id} category={category} />);\n  getMenuGroups = () => this.getCategorizedMenuGroups().concat(this.getSinglesMenuGroups());\n  fetchItems = async type => {\n    if (type) {\n      const maxOptions = this.state.maxOptions;\n\n      if (maxOptions.has(type)) {\n        maxOptions.delete(type);\n      } else {\n        maxOptions.add(type);\n      }\n\n      this.setState({\n        maxOptions\n      });\n    } else {\n      this.setState({\n        maxOptions: new Set()\n      });\n    }\n\n    let queryString = '?count=11';\n\n    if ([...this.state.maxOptions.values()].length) {\n      queryString += '&max=' + [...this.state.maxOptions.values()].join('&max=');\n    }\n\n    const filter = this.state.debouncedFilter ? `/${this.state.debouncedFilter}` : '';\n    this.context.d2.Api.getApi().get(`dashboards/q${filter}${queryString}`).then(response => this.setState({\n      items: response\n    })).catch(console.error);\n  };\n\n  render() {\n    return <>\n                <ItemSearchField value={this.state.filter} onChange={this.setFilter} onFocus={this.openList} />\n                <Popover className=\"dashboard-item-selector\" open={this.state.open} onClose={this.closeList} anchorEl={this.state.anchorEl} anchorOrigin={{\n        horizontal: 'left',\n        vertical: 'bottom'\n      }} transformOrigin={{\n        horizontal: 'left',\n        vertical: 'top'\n      }} style={{\n        height: '70vh'\n      }} PaperProps={{\n        style: {\n          width: '700px'\n        }\n      }} disableAutoFocus={true} disableEnforceFocus={true} disableRestoreFocus={true}>\n                    <Menu maxWidth={'700px'}>{this.getMenuGroups()}</Menu>\n                </Popover>\n            </>;\n  }\n\n}\n\nItemSearchField.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n  onFocus: PropTypes.func\n};\nItemSelector.contextTypes = {\n  d2: PropTypes.object.isRequired\n};\nexport default ItemSelector;","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { InputField, TextAreaField } from '@dhis2/ui';\nimport ItemSelector from '../ItemSelector/ItemSelector';\nimport { acSetDashboardTitle, acSetDashboardDescription } from '../../actions/editDashboard';\nimport { orObject } from '../../modules/util';\nimport { sGetEditDashboardRoot } from '../../reducers/editDashboard';\nimport classes from './styles/EditTitleBar.module.css';\nexport const EditTitleBar = ({\n  name,\n  description,\n  onChangeTitle,\n  onChangeDescription\n}) => {\n  const updateTitle = (_, e) => {\n    onChangeTitle(e.target.value);\n  };\n\n  const updateDescription = (_, e) => {\n    onChangeDescription(e.target.value);\n  };\n\n  return <section className={classes.section}>\n            <div className={classes.titleDescription}>\n                <InputField className={classes.title} name=\"Dashboard title input\" label={i18n.t('Dashboard title')} type=\"text\" onChange={updateTitle} value={name} placeholder={i18n.t('Untitled dashboard')} />\n                <TextAreaField className={classes.description} name=\"Dashboard description input\" label={i18n.t('Dashboard description')} onChange={updateDescription} value={description} />\n            </div>\n            <div className={classes.itemSelector}>\n                <ItemSelector />\n            </div>\n        </section>;\n};\nEditTitleBar.propTypes = {\n  onChangeDescription: PropTypes.func.isRequired,\n  onChangeTitle: PropTypes.func.isRequired,\n  description: PropTypes.string,\n  name: PropTypes.string\n};\nEditTitleBar.defaultProps = {\n  name: '',\n  description: ''\n};\n\nconst mapStateToProps = state => {\n  const selectedDashboard = orObject(sGetEditDashboardRoot(state));\n  return {\n    name: selectedDashboard.name,\n    description: selectedDashboard.description\n  };\n};\n\nconst mapDispatchToProps = {\n  onChangeTitle: acSetDashboardTitle,\n  onChangeDescription: acSetDashboardDescription\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(EditTitleBar);","import React from 'react';\nimport { colors } from '@dhis2/ui';\nexport const ThreeDots = () => <svg height=\"18\" viewBox=\"0 0 18 18\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"m4 7.5c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm10 0c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm-5 0c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5z\" fill=\"#6e7a8a\" />\n    </svg>;\nexport const SpeechBubble = () => <svg height=\"20\" viewBox=\"0 0 20 20\" width=\"20\" xmlns=\"http://www.w3.org/2000/svg\" style={{\n  margin: '3px 2px 0 2px'\n}} // Temporary fix for the misaligned icon, should be removed once the icon is replaced\n>\n        <path d=\"m20 2h-16c-1.1 0-1.99.9-1.99 2l-.01 18 4-4h14c1.1 0 2-.9 2-2v-12c0-1.1-.9-2-2-2zm-2 12h-12v-2h12zm0-3h-12v-2h12zm0-3h-12v-2h12z\" fill=\"#6e7a8a\" fillRule=\"evenodd\" transform=\"translate(-2 -2)\" />\n    </svg>;\nexport const Warning = () => <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" fill={colors.grey600}>\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z\" />\n    </svg>;","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { Button, Modal, ModalTitle, ModalContent, ModalActions, ButtonStrip } from '@dhis2/ui';\nimport { PeriodDimension, DynamicDimension, OrgUnitDimension, DIMENSION_ID_PERIOD, DIMENSION_ID_ORGUNIT } from '@dhis2/analytics';\nimport { acAddItemFilter, acRemoveItemFilter } from '../../actions/itemFilters';\nimport { sGetItemFiltersRoot } from '../../reducers/itemFilters';\n\nconst FilterDialog = ({\n  displayNameProperty,\n  dimension,\n  initiallySelectedItems,\n  addItemFilter,\n  removeItemFilter,\n  onClose\n}, context) => {\n  const [filters, setFilters] = useState(initiallySelectedItems);\n\n  const onSelectItems = ({\n    dimensionId,\n    items\n  }) => {\n    setFilters({\n      [dimensionId]: items\n    });\n  };\n\n  const onDeselectItems = ({\n    dimensionId,\n    itemIdsToRemove\n  }) => {\n    const oldList = filters[dimensionId] || [];\n    const newList = oldList.filter(item => !itemIdsToRemove.includes(item.id));\n    setFilters({ ...filters,\n      [dimensionId]: newList\n    });\n  };\n\n  const onReorderItems = ({\n    dimensionId,\n    itemIds\n  }) => {\n    const oldList = filters[dimensionId] || [];\n    const reorderedList = itemIds.map(id => oldList.find(item => item.id === id));\n    setFilters({ ...filters,\n      [dimensionId]: reorderedList\n    });\n  };\n\n  const saveFilter = () => {\n    const id = dimension.id;\n    const filterItems = filters[id];\n\n    if (filterItems && filterItems.length) {\n      addItemFilter({\n        id,\n        value: [...filterItems]\n      });\n    } else {\n      removeItemFilter(id);\n    }\n\n    onClose(id);\n  };\n\n  const renderDialogContent = () => {\n    const commonProps = {\n      d2: context.d2,\n      onSelect: onSelectItems,\n      onDeselect: onDeselectItems,\n      onReorder: onReorderItems\n    };\n    const selectedItems = filters[dimension.id] || [];\n\n    switch (dimension.id) {\n      case DIMENSION_ID_PERIOD:\n        {\n          return <PeriodDimension selectedPeriods={selectedItems} onSelect={commonProps.onSelect} />;\n        }\n\n      case DIMENSION_ID_ORGUNIT:\n        return <OrgUnitDimension displayNameProperty={displayNameProperty} ouItems={selectedItems} {...commonProps} />;\n\n      default:\n        return <DynamicDimension selectedItems={selectedItems} dimensionId={dimension.id} onSelect={commonProps.onSelect} context={commonProps.d2} />;\n    }\n  };\n\n  return <>\n            {dimension.id && <Modal onClose={onClose} position=\"top\" large>\n                    <ModalTitle>{dimension.name}</ModalTitle>\n                    <ModalContent>{renderDialogContent()}</ModalContent>\n                    <ModalActions>\n                        <ButtonStrip>\n                            <Button secondary onClick={onClose}>\n                                {i18n.t('Cancel')}\n                            </Button>\n                            <Button primary onClick={saveFilter}>\n                                {i18n.t('Confirm')}\n                            </Button>\n                        </ButtonStrip>\n                    </ModalActions>\n                </Modal>}\n        </>;\n};\n\nFilterDialog.propTypes = {\n  addItemFilter: PropTypes.func,\n  dimension: PropTypes.object,\n  displayNameProperty: PropTypes.string,\n  initiallySelectedItems: PropTypes.object,\n  removeItemFilter: PropTypes.func,\n  onClose: PropTypes.func\n};\nFilterDialog.contextTypes = {\n  d2: PropTypes.object\n};\n\nconst mapStateToProps = state => ({\n  initiallySelectedItems: sGetItemFiltersRoot(state)\n});\n\nexport default connect(mapStateToProps, {\n  addItemFilter: acAddItemFilter,\n  removeItemFilter: acRemoveItemFilter\n})(FilterDialog);","export const SET_ACTIVE_MODAL_DIMENSION = 'SET_ACTIVE_MODAL_DIMENSION';\nexport const CLEAR_ACTIVE_MODAL_DIMENSION = 'CLEAR_ACTIVE_MODAL_DIMENSION';\nexport const DEFAULT_STATE_ACTIVE_MODAL_DIMENSION = {};\nexport default ((state = DEFAULT_STATE_ACTIVE_MODAL_DIMENSION, action) => {\n  switch (action.type) {\n    case SET_ACTIVE_MODAL_DIMENSION:\n      {\n        return action.value;\n      }\n\n    case CLEAR_ACTIVE_MODAL_DIMENSION:\n      {\n        return DEFAULT_STATE_ACTIVE_MODAL_DIMENSION;\n      }\n\n    default:\n      return state;\n  }\n});\nexport const sGetActiveModalDimension = state => state.activeModalDimension;","import { SET_ACTIVE_MODAL_DIMENSION, CLEAR_ACTIVE_MODAL_DIMENSION } from '../reducers/activeModalDimension';\nexport const acSetActiveModalDimension = value => ({\n  type: SET_ACTIVE_MODAL_DIMENSION,\n  value\n});\nexport const acClearActiveModalDimension = () => ({\n  type: CLEAR_ACTIVE_MODAL_DIMENSION\n});","import React, { useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport isEmpty from 'lodash/isEmpty';\nimport i18n from '@dhis2/d2-i18n';\nimport { DimensionsPanel } from '@dhis2/analytics';\nimport { Button, Popover } from '@dhis2/ui';\nimport FilterDialog from './FilterDialog';\nimport { sGetSettingsDisplayNameProperty } from '../../reducers/settings';\nimport { sGetActiveModalDimension } from '../../reducers/activeModalDimension';\nimport { sGetDimensions } from '../../reducers/dimensions';\nimport { sGetItemFiltersRoot } from '../../reducers/itemFilters';\nimport { acClearActiveModalDimension, acSetActiveModalDimension } from '../../actions/activeModalDimension';\n\nconst FilterSelector = props => {\n  const [showPopover, setShowPopover] = useState(false);\n  const ref = useRef(null);\n\n  const onCloseDialog = () => {\n    setShowPopover(false);\n    props.clearActiveModalDimension();\n  };\n\n  const selectDimension = id => {\n    props.setActiveModalDimension(props.dimensions.find(dimension => dimension.id === id));\n  };\n\n  return <>\n            <span ref={ref}>\n                <Button onClick={() => setShowPopover(true)}>\n                    {i18n.t('Add filter')}\n                    <ArrowDropDownIcon />\n                </Button>\n            </span>\n            {showPopover && <Popover onClickOutside={onCloseDialog} reference={ref} arrow={true} placement=\"bottom-start\">\n                    <DimensionsPanel style={{\n        width: '320px'\n      }} dimensions={props.dimensions} onDimensionClick={selectDimension} selectedIds={Object.keys(props.initiallySelectedItems)} />\n                </Popover>}\n            {!isEmpty(props.dimension) ? <FilterDialog displayNameProperty={props.displayNameProperty} dimension={props.dimension} onClose={onCloseDialog} /> : null}\n        </>;\n};\n\nconst mapStateToProps = state => ({\n  displayNameProperty: sGetSettingsDisplayNameProperty(state),\n  dimension: sGetActiveModalDimension(state),\n  dimensions: sGetDimensions(state),\n  initiallySelectedItems: sGetItemFiltersRoot(state)\n});\n\nFilterSelector.propTypes = {\n  clearActiveModalDimension: PropTypes.func,\n  dimension: PropTypes.object,\n  dimensions: PropTypes.array,\n  displayNameProperty: PropTypes.string,\n  initiallySelectedItems: PropTypes.object,\n  setActiveModalDimension: PropTypes.func\n};\nexport default connect(mapStateToProps, {\n  clearActiveModalDimension: acClearActiveModalDimension,\n  setActiveModalDimension: acSetActiveModalDimension\n})(FilterSelector);","import React, { useState, createRef } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport { Redirect } from 'react-router-dom';\nimport SharingDialog from '@dhis2/d2-ui-sharing-dialog';\nimport Star from '@material-ui/icons/Star';\nimport StarBorder from '@material-ui/icons/StarBorder';\nimport { Button, FlyoutMenu, Popover, MenuItem, colors } from '@dhis2/ui';\nimport { ThreeDots } from '../Item/VisualizationItem/assets/icons';\nimport { orObject } from '../../modules/util';\nimport { tStarDashboard } from '../../actions/dashboards';\nimport { tUpdateShowDescription } from '../../actions/selected';\nimport FilterSelector from '../ItemFilter/FilterSelector';\nimport { sGetSelectedId, sGetSelectedShowDescription } from '../../reducers/selected';\nimport { sGetDashboardById, sGetDashboardItems, EMPTY_DASHBOARD } from '../../reducers/dashboards';\nimport classes from './styles/ViewTitleBar.module.css';\n\nconst ViewTitleBar = (props, context) => {\n  const [moreOptionsIsOpen, setMoreOptionsIsOpen] = useState(false);\n  const [sharingDialogIsOpen, setSharingDialogIsOpen] = useState(false);\n  const [redirectUrl, setRedirectUrl] = useState(null);\n  const {\n    id,\n    name,\n    description,\n    access,\n    style,\n    showDescription,\n    starred,\n    onToggleStarredDashboard,\n    onShowHideDescription\n  } = props;\n\n  const toggleSharingDialog = () => setSharingDialogIsOpen(!sharingDialogIsOpen);\n\n  const toggleMoreOptions = () => setMoreOptionsIsOpen(!moreOptionsIsOpen);\n\n  const printLayout = () => setRedirectUrl(`${id}/printlayout`);\n\n  const printOipp = () => setRedirectUrl(`${id}/printoipp`);\n\n  const titleStyle = Object.assign({}, style.title, {\n    cursor: 'default',\n    userSelect: 'text',\n    top: '7px'\n  });\n  const StarIcon = starred ? Star : StarBorder;\n\n  if (redirectUrl) {\n    return <Redirect to={redirectUrl} />;\n  }\n\n  const showHideDescriptionLabel = showDescription ? i18n.t('Hide description') : i18n.t('Show description');\n\n  const showHideDescription = () => {\n    onShowHideDescription();\n    toggleMoreOptions();\n  };\n\n  const toggleStarredDashboardLabel = starred ? i18n.t('Unstar dashboard') : i18n.t('Star dashboard');\n\n  const toggleStarredDashboard = () => {\n    onToggleStarredDashboard();\n    toggleMoreOptions();\n  };\n\n  const buttonRef = createRef();\n  const userAccess = orObject(access);\n  return <>\n            <div className={classes.titleBar}>\n                <span style={titleStyle}>{name}</span>\n                <div className={classes.actions}>\n                    <div className={classes.titleBarIcon} onClick={onToggleStarredDashboard}>\n                        <StarIcon style={{\n            fill: colors.grey600\n          }} />\n                    </div>\n                    <div className={classes.strip}>\n                        {userAccess.update ? <Link className={classes.editLink} to={`/${id}/edit`}>\n                                <Button>{i18n.t('Edit')}</Button>\n                            </Link> : null}\n                        {userAccess.manage ? <Button onClick={toggleSharingDialog}>\n                                {i18n.t('Share')}\n                            </Button> : null}\n                        <FilterSelector />\n                        <span ref={buttonRef}>\n                            <Button onClick={toggleMoreOptions}>\n                                <ThreeDots />\n                                <span style={{\n                marginLeft: '5px'\n              }}>\n                                    {i18n.t('More')}\n                                </span>\n                            </Button>\n                        </span>\n                    </div>\n                    {moreOptionsIsOpen && <Popover reference={buttonRef} placement=\"bottom-start\" onClickOutside={toggleMoreOptions}>\n                            <FlyoutMenu>\n                                <MenuItem dense label={toggleStarredDashboardLabel} onClick={toggleStarredDashboard} />\n                                <MenuItem dense label={showHideDescriptionLabel} onClick={showHideDescription} />\n                                <MenuItem dense label={i18n.t('Print')}>\n                                    <MenuItem dense label={i18n.t('Dashboard layout')} onClick={printLayout} />\n                                    <MenuItem dense label={i18n.t('One item per page')} onClick={printOipp} />\n                                </MenuItem>\n                            </FlyoutMenu>\n                        </Popover>}\n                </div>\n            </div>\n            {showDescription ? <div className=\"dashboard-description\" style={Object.assign({\n      paddingTop: '5px',\n      paddingBottom: '5px'\n    }, style.description, !description ? {\n      color: '#888'\n    } : {})}>\n                    {description || i18n.t('No description')}\n                </div> : null}\n            {id ? <SharingDialog d2={context.d2} id={id} type=\"dashboard\" open={sharingDialogIsOpen} onRequestClose={toggleSharingDialog} /> : null}\n        </>;\n};\n\nViewTitleBar.propTypes = {\n  access: PropTypes.object,\n  description: PropTypes.string,\n  id: PropTypes.string,\n  name: PropTypes.string,\n  showDescription: PropTypes.bool,\n  starred: PropTypes.bool,\n  style: PropTypes.object,\n  onShowHideDescription: PropTypes.func,\n  onToggleStarredDashboard: PropTypes.func\n};\nViewTitleBar.defaultProps = {\n  name: '',\n  description: '',\n  starred: false,\n  showDescription: false\n};\nViewTitleBar.contextTypes = {\n  d2: PropTypes.object\n};\n\nconst mapStateToProps = state => {\n  const id = sGetSelectedId(state);\n  const dashboard = sGetDashboardById(state, id) || EMPTY_DASHBOARD;\n  return {\n    id,\n    name: dashboard.displayName,\n    description: dashboard.displayDescription,\n    dashboardItems: sGetDashboardItems(state),\n    showDescription: sGetSelectedShowDescription(state),\n    starred: dashboard.starred,\n    access: dashboard.access\n  };\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n  const {\n    id,\n    starred,\n    showDescription\n  } = stateProps;\n  const {\n    dispatch\n  } = dispatchProps;\n  return { ...stateProps,\n    ...ownProps,\n    onToggleStarredDashboard: () => dispatch(tStarDashboard(id, !starred)),\n    onShowHideDescription: () => dispatch(tUpdateShowDescription(!showDescription))\n  };\n};\n\nexport default connect(mapStateToProps, null, mergeProps)(ViewTitleBar);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { colors } from '@dhis2/ui';\nimport EditTitleBar from './EditTitleBar';\nimport ViewTitleBar from './ViewTitleBar';\nimport './TitleBar.css';\nconst style = {\n  title: {\n    position: 'relative',\n    fontSize: 21,\n    fontWeight: 500,\n    color: colors.black,\n    minWidth: 50\n  },\n  description: {\n    fontSize: 14,\n    color: colors.grey800\n  }\n};\n\nconst TitleBar = ({\n  edit\n}) => {\n  return <div className=\"titlebar-wrapper\" style={{\n    padding: '13px 15px 5px 10px'\n  }}>\n            {edit ? <EditTitleBar style={style} /> : <ViewTitleBar style={style} />}\n        </div>;\n};\n\nTitleBar.propTypes = {\n  edit: PropTypes.bool\n};\nexport default TitleBar;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport * as pluginManager from './plugin';\nimport { getBaseUrl, orObject } from '../../../modules/util';\nimport { getGridItemDomId } from '../../ItemGrid/gridUtil';\n\nconst pluginCredentials = d2 => {\n  return {\n    baseUrl: getBaseUrl(d2),\n    auth: d2.Api.getApi().defaultHeaders.Authorization\n  };\n};\n\nclass DefaultPlugin extends Component {\n  pluginCredentials = null;\n\n  constructor(props, context) {\n    super(props);\n    this.d2 = context.d2;\n  }\n\n  shouldPluginReload = prevProps => {\n    // TODO - fix this hack, to handle bug with multiple\n    // rerendering while switching between dashboards.\n    //\n    // To determine if the rendering is happening because of a\n    // dashboard switch, check if the item reference has changed.\n    const reloadAllowed = this.props.item === prevProps.item;\n    const filtersChanged = prevProps.itemFilters !== this.props.itemFilters;\n    const vis = orObject(this.props.visualization);\n    const prevVis = orObject(prevProps.visualization);\n    const visChanged = vis.id !== prevVis.id || vis.activeType !== prevVis.activeType;\n    return reloadAllowed && (visChanged || filtersChanged);\n  };\n  reloadPlugin = prevProps => {\n    if (pluginManager.pluginIsAvailable(this.props.item, this.props.visualization) && this.shouldPluginReload(prevProps)) {\n      const prevVis = orObject(prevProps.visualization);\n      const currentVis = this.props.visualization;\n      const useActiveType = currentVis.activeType !== prevVis.activeType || currentVis.activeType !== this.props.item.type;\n\n      if (useActiveType || this.props.itemFilters !== prevProps.itemFilters) {\n        pluginManager.unmount(this.props.item, prevVis.activeType || this.props.item.type);\n        pluginManager.load(this.props.item, this.props.visualization, {\n          credentials: this.pluginCredentials,\n          activeType: useActiveType ? currentVis.activeType : null\n        });\n      }\n    }\n  };\n\n  componentDidMount() {\n    this.pluginCredentials = pluginCredentials(this.d2);\n\n    if (pluginManager.pluginIsAvailable(this.props.item, this.props.visualization)) {\n      pluginManager.load(this.props.item, this.props.visualization, {\n        credentials: this.pluginCredentials,\n        activeType: this.props.useActiveType ? this.getActiveType() : null,\n        options: this.props.options\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    this.reloadPlugin(prevProps);\n  }\n\n  componentWillUnmount() {\n    if (pluginManager.pluginIsAvailable(this.props.item, this.props.visualization)) {\n      pluginManager.unmount(this.props.item, this.getActiveType());\n    }\n  }\n\n  getActiveType = () => this.props.visualization.activeType || this.props.item.type;\n\n  render() {\n    const {\n      classes,\n      item,\n      visualization,\n      style\n    } = this.props;\n    const pluginIsAvailable = pluginManager.pluginIsAvailable(item, visualization);\n    return pluginIsAvailable ? <div id={getGridItemDomId(item.id)} style={style} /> : <div className={classes.textDiv}>\n                {i18n.t('Unable to load the plugin for this item')}\n            </div>;\n  }\n\n}\n\nDefaultPlugin.contextTypes = {\n  d2: PropTypes.object\n};\nDefaultPlugin.propTypes = {\n  classes: PropTypes.object,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object,\n  options: PropTypes.object,\n  style: PropTypes.object,\n  useActiveType: PropTypes.bool,\n  visualization: PropTypes.object\n};\nDefaultPlugin.defaultProps = {\n  style: {},\n  item: {},\n  itemFilters: {},\n  options: {},\n  visualization: {}\n};\nexport default DefaultPlugin;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Warning } from './assets/icons';\nimport classes from './styles/FatalErrorBoundary.module.css';\n\nclass FatalErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      errorFound: false\n    };\n  }\n\n  componentDidCatch(error, info) {\n    this.setState({\n      errorFound: true\n    });\n    console.log('error: ', error);\n    console.log('info: ', info);\n  }\n\n  render() {\n    if (this.state.errorFound) {\n      return <p className={classes.container}>\n                    <span className={classes.icon}>\n                        <Warning />\n                    </span>\n                    <span className={classes.message}>\n                        {i18n.t('There was a problem loading this dashboard item')}\n                    </span>\n                </p>;\n    }\n\n    return this.props.children;\n  }\n\n}\n\nFatalErrorBoundary.propTypes = {\n  children: PropTypes.node\n};\nexport default FatalErrorBoundary;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classes from './styles/ItemHeader.module.css';\n\nconst ViewItemActions = ({\n  actionButtons\n}) => {\n  return actionButtons ? <div className={classes.itemActionsWrap}>{actionButtons}</div> : null;\n};\n\nViewItemActions.propTypes = {\n  actionButtons: PropTypes.node\n};\nexport default ViewItemActions;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { colors } from '@dhis2/ui';\nimport classes from './styles/DeleteItemButton.module.css';\n\nconst DeleteItemButton = ({\n  onClick\n}) => <button type=\"button\" className={classes.deleteItemButton} onClick={onClick} title={i18n.t(`Delete item`)}>\n        <DeleteIcon style={{\n    fill: colors.red500\n  }} />\n    </button>;\n\nDeleteItemButton.propTypes = {\n  onClick: PropTypes.func\n};\nexport default DeleteItemButton;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport DeleteItemButton from './DeleteItemButton';\nimport { acRemoveDashboardItem } from '../../../actions/editDashboard';\nimport classes from './styles/ItemHeader.module.css';\n\nconst EditItemActions = ({\n  itemId,\n  acRemoveDashboardItem\n}) => {\n  const handleDeleteItem = () => acRemoveDashboardItem(itemId);\n\n  return <div className={classes.itemActionsWrap}>\n            <DeleteItemButton onClick={handleDeleteItem} />\n        </div>;\n};\n\nEditItemActions.propTypes = {\n  acRemoveDashboardItem: PropTypes.func,\n  itemId: PropTypes.string\n};\nconst mapDispatchToProps = {\n  acRemoveDashboardItem\n};\nexport default connect(null, mapDispatchToProps)(EditItemActions);","import React from 'react';\nimport { colors } from '@dhis2/ui';\n\nconst WarningIcon = () => <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" fill={colors.grey600}>\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z\" />\n    </svg>;\n\nexport default WarningIcon;","import React from 'react';\nimport { Tooltip } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport InfoIcon from '../../../icons/Info';\nimport classes from './styles/PrintItemInfo.module.css';\n\nconst PrintWarning = () => <div className={classes.warning}>\n        <Tooltip content={i18n.t('This item has been shortened to fit on one page')} placement=\"bottom\">\n            <InfoIcon />\n        </Tooltip>\n    </div>;\n\nexport default PrintWarning;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ViewItemActions from './ViewItemActions';\nimport EditItemActions from './EditItemActions';\nimport PrintItemInfo from './PrintItemInfo';\nimport { VIEW, EDIT, PRINT_LAYOUT } from '../../Dashboard/dashboardModes';\nimport classes from './styles/ItemHeader.module.css';\n\nconst getItemActionsMap = isShortened => {\n  return {\n    [VIEW]: ViewItemActions,\n    [EDIT]: EditItemActions,\n    [PRINT_LAYOUT]: isShortened ? PrintItemInfo : null\n  };\n}; // This is the margin-top + margin-bottom defined in the css file\n\n\nexport const HEADER_MARGIN_HEIGHT = 12;\nconst ItemHeader = React.forwardRef(({\n  dashboardMode,\n  title,\n  isShortened,\n  ...rest\n}, ref) => {\n  const Actions = getItemActionsMap(isShortened)[dashboardMode];\n  return <div className={classes.itemHeaderWrap} ref={ref}>\n                <p className={classes.itemTitle}>{title}</p>\n                {Actions ? <Actions {...rest} /> : null}\n            </div>;\n});\nItemHeader.displayName = 'ItemHeader';\nItemHeader.propTypes = {\n  dashboardMode: PropTypes.string,\n  isShortened: PropTypes.bool,\n  title: PropTypes.string\n};\nexport default connect(null, null, null, {\n  forwardRef: true\n})(ItemHeader);","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { isSingleValue, isYearOverYear, VIS_TYPE_GAUGE, VIS_TYPE_PIE } from '@dhis2/analytics';\nimport { Button, Menu, MenuItem, Divider, colors } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport Popover from '@material-ui/core/Popover';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport { ThreeDots, SpeechBubble } from './assets/icons';\nimport { pluginIsAvailable, getLink } from './plugin';\nimport { CHART, MAP, REPORT_TABLE, EVENT_CHART, EVENT_REPORT, isTrackerDomainType, hasMapView, getAppName } from '../../../modules/itemTypes';\nconst iconFill = {\n  fill: colors.grey600\n};\n\nconst ItemHeaderButtons = props => {\n  const [anchorEl, setAnchorEl] = useState(null);\n  const {\n    item,\n    visualization,\n    onSelectActiveType,\n    d2,\n    activeType\n  } = props;\n  const isTrackerType = isTrackerDomainType(item.type);\n\n  const onViewTable = () => {\n    handleClose();\n    onSelectActiveType(isTrackerType ? EVENT_REPORT : REPORT_TABLE);\n  };\n\n  const onViewChart = () => {\n    handleClose();\n    onSelectActiveType(isTrackerType ? EVENT_CHART : CHART);\n  };\n\n  const onViewMap = () => {\n    handleClose();\n    onSelectActiveType(MAP);\n  };\n\n  const itemHasMapView = () => hasMapView(item.type);\n\n  const handleMenuClick = (_, event) => setAnchorEl(event.currentTarget);\n\n  const handleInterpretationClick = () => {\n    props.onToggleFooter();\n\n    if (anchorEl !== null) {\n      handleClose();\n    }\n  };\n\n  const handleClose = () => setAnchorEl(null);\n\n  const type = visualization.type || item.type;\n  const canViewAs = !isSingleValue(type) && !isYearOverYear(type) && type !== VIS_TYPE_GAUGE && type !== VIS_TYPE_PIE;\n  const interpretationMenuLabel = props.activeFooter ? i18n.t(`Hide interpretations and details`) : i18n.t(`Show interpretations and details`);\n\n  const ViewAsMenuItems = () => <>\n            {activeType !== CHART && activeType !== EVENT_CHART && <MenuItem dense label={i18n.t('View as Chart')} onClick={onViewChart} icon={<ChartIcon style={iconFill} />} />}\n            {activeType !== REPORT_TABLE && activeType !== EVENT_REPORT && <MenuItem dense label={i18n.t('View as Table')} onClick={onViewTable} icon={<TableIcon style={iconFill} />} />}\n            {itemHasMapView() && activeType !== MAP && <MenuItem dense label={i18n.t('View as Map')} onClick={onViewMap} icon={<MapIcon style={iconFill} />} />}\n        </>;\n\n  return pluginIsAvailable(item, visualization) ? <>\n            <Button small secondary onClick={handleMenuClick}>\n                <ThreeDots />\n            </Button>\n            {anchorEl && <Popover open={Boolean(anchorEl)} onClose={handleClose} anchorEl={anchorEl}>\n                    <Menu>\n                        {canViewAs && <>\n                                <ViewAsMenuItems />\n                                <Divider />\n                            </>}\n                        <MenuItem dense icon={<LaunchIcon style={{\n          fill: '#6e7a8a'\n        }} />} label={i18n.t('Open in {{appName}} app', {\n          appName: getAppName(item.type)\n        })} href={getLink(item, d2)} target=\"_blank\" />\n                        <MenuItem dense icon={<SpeechBubble />} label={interpretationMenuLabel} onClick={handleInterpretationClick} />\n                    </Menu>\n                </Popover>}\n        </> : null;\n};\n\nItemHeaderButtons.propTypes = {\n  activeFooter: PropTypes.bool,\n  activeType: PropTypes.string,\n  d2: PropTypes.object,\n  item: PropTypes.object,\n  visualization: PropTypes.object,\n  onSelectActiveType: PropTypes.func,\n  onToggleFooter: PropTypes.func\n};\nexport default ItemHeaderButtons;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { colors } from '@dhis2/ui';\nimport { getId } from './plugin';\nimport InterpretationsComponent from '@dhis2/d2-ui-interpretations';\nconst style = {\n  scrollContainer: {\n    overflowY: 'auto',\n    height: '340px'\n  },\n  line: {\n    margin: '-1px 0px 0px',\n    height: '1px',\n    border: 'none',\n    backgroundColor: colors.grey100\n  }\n};\n\nclass ItemFooter extends Component {\n  render() {\n    const objectId = getId(this.props.item);\n    return <div className=\"dashboard-item-footer\">\n                <hr style={style.line} />\n                <div style={style.scrollContainer}>\n                    <InterpretationsComponent d2={this.context.d2} item={this.props.item} type={this.props.item.type.toLowerCase()} id={objectId} appName=\"dashboard\" />\n                </div>\n            </div>;\n  }\n\n}\n\nItemFooter.contextTypes = {\n  d2: PropTypes.object.isRequired\n};\nItemFooter.propTypes = {\n  item: PropTypes.object.isRequired\n};\nexport default ItemFooter;","import React from 'react';\nimport { CircularLoader } from '@dhis2/ui';\nimport classes from './styles/LoadingMask.module.css';\n\nconst LoadingMask = () => {\n  return <div className={classes.center}>\n            <CircularLoader />\n        </div>;\n};\n\nexport default LoadingMask;","// Note that this ignores discrepancies in 'this', so shouldn't be used with bound functions\n// This is useful instead of lodash/memoize when we only need to memoize a single value\n// Inspiration: https://github.com/alexreardon/memoize-one\nconst memoizeOne = fn => {\n  let lastArgs = undefined;\n  let lastValue = undefined;\n  return (...args) => {\n    if (lastArgs && args.length === lastArgs.length && args.every((arg, i) => arg === lastArgs[i])) {\n      return lastValue;\n    }\n\n    lastArgs = args;\n    lastValue = fn(...args);\n    return lastValue;\n  };\n};\n\nexport default memoizeOne;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport uniqueId from 'lodash/uniqueId';\nimport VisualizationPlugin from '@dhis2/data-visualizer-plugin';\nimport i18n from '@dhis2/d2-i18n';\nimport DefaultPlugin from './DefaultPlugin';\nimport FatalErrorBoundary from './FatalErrorBoundary';\nimport ItemHeader, { HEADER_MARGIN_HEIGHT } from '../ItemHeader/ItemHeader';\nimport ItemHeaderButtons from './ItemHeaderButtons';\nimport ItemFooter from './ItemFooter';\nimport LoadingMask from './LoadingMask';\nimport * as pluginManager from './plugin';\nimport { sGetVisualization } from '../../../reducers/visualizations';\nimport { sGetItemFiltersRoot, DEFAULT_STATE_ITEM_FILTERS } from '../../../reducers/itemFilters';\nimport { acAddVisualization, acSetActiveVisualizationType } from '../../../actions/visualizations';\nimport { VISUALIZATION, MAP, CHART, REPORT_TABLE } from '../../../modules/itemTypes';\nimport memoizeOne from '../../../modules/memoizeOne';\nimport { isEditMode, isPrintMode, isViewMode } from '../../Dashboard/dashboardModes';\nimport { ITEM_CONTENT_PADDING_BOTTOM } from '../../ItemGrid/ItemGrid';\nimport classes from './styles/Item.module.css';\nexport class Item extends Component {\n  state = {\n    showFooter: false,\n    configLoaded: false,\n    pluginIsLoaded: false\n  };\n\n  constructor(props, context) {\n    super(props);\n    this.d2 = context.d2;\n    this.contentRef = React.createRef();\n    this.headerRef = React.createRef();\n    this.memoizedApplyFilters = memoizeOne(this.applyFilters);\n    this.memoizedGetVisualizationConfig = memoizeOne(pluginManager.getVisualizationConfig);\n    this.memoizedGetContentStyle = memoizeOne(this.getContentStyle);\n  }\n\n  async componentDidMount() {\n    this.props.onVisualizationLoaded( // TODO do not call fetch on the pluginManager, do it here as the manager will eventually be removed...\n    await pluginManager.fetch(this.props.item));\n    this.setState({\n      configLoaded: true\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.pluginIsLoaded && (prevProps.visualization !== this.props.visualization || prevProps.itemFilters !== this.props.itemFilters)) {\n      this.setState({\n        pluginIsLoaded: false\n      });\n    }\n  }\n\n  applyFilters = (visualization, filters) => {\n    if (!Object.keys(filters).length) {\n      return visualization;\n    } // deep clone objects in filters to avoid changing the visualization in the Redux store\n\n\n    const visRows = visualization.rows.map(obj => ({ ...obj\n    }));\n    const visColumns = visualization.columns.map(obj => ({ ...obj\n    }));\n    const visFilters = visualization.filters.map(obj => ({ ...obj\n    }));\n    Object.keys(filters).forEach(dimensionId => {\n      if (filters[dimensionId]) {\n        let dimensionFound = false;\n        [visRows, visColumns, visFilters].forEach(dimensionObjects => dimensionObjects.filter(obj => obj.dimension === dimensionId).forEach(obj => {\n          dimensionFound = true;\n          obj.items = filters[dimensionId];\n        })); // add dimension to filters if not already present elsewhere\n\n        if (!dimensionFound) {\n          visFilters.push({\n            dimension: dimensionId,\n            items: filters[dimensionId]\n          });\n        }\n      }\n    });\n    return { ...visualization,\n      rows: visRows,\n      columns: visColumns,\n      filters: visFilters\n    };\n  };\n  getUniqueKey = memoizeOne(() => uniqueId());\n  pluginCredentials = null;\n  getPluginComponent = () => {\n    const activeType = this.getActiveType();\n    const visualization = this.memoizedGetVisualizationConfig(this.props.visualization, this.props.item.type, activeType);\n\n    if (!visualization) {\n      return <div className={classes.textDiv}>\n                    {i18n.t('No data to display')}\n                </div>;\n    }\n\n    const calculatedHeight = this.props.item.originalHeight - this.headerRef.current.clientHeight - HEADER_MARGIN_HEIGHT - ITEM_CONTENT_PADDING_BOTTOM;\n    const props = { ...this.props,\n      useActiveType: !isEditMode(this.props.dashboardMode),\n      visualization,\n      classes,\n      style: this.memoizedGetContentStyle(calculatedHeight, this.contentRef ? this.contentRef.offsetHeight : null, isEditMode(this.props.dashboardMode) || isPrintMode(this.props.dashboardMode))\n    };\n\n    switch (activeType) {\n      case VISUALIZATION:\n      case CHART:\n      case REPORT_TABLE:\n        {\n          return <>\n                        {!this.state.pluginIsLoaded && <div style={props.style}>\n                                <LoadingMask />\n                            </div>}\n                        <VisualizationPlugin d2={this.d2} visualization={this.memoizedApplyFilters(visualization, props.itemFilters)} onLoadingComplete={this.onLoadingComplete} forDashboard={true} style={props.style} />\n                    </>;\n        }\n\n      case MAP:\n        {\n          if (props.item.type === MAP) {\n            // apply filters only to thematic and event layers\n            // for maps AO\n            const mapViews = props.visualization.mapViews.map(obj => {\n              if (obj.layer.includes('thematic') || obj.layer.includes('event')) {\n                return this.memoizedApplyFilters(obj, props.itemFilters);\n              }\n\n              return obj;\n            });\n            props.visualization = { ...props.visualization,\n              mapViews\n            };\n          } else {\n            // this is the case of a non map AO passed to the maps plugin\n            // due to a visualization type switch in dashboard item\n            // maps plugin takes care of converting the AO to a suitable format\n            props.visualization = this.memoizedApplyFilters(props.visualization, props.itemFilters);\n          }\n\n          props.options = { ...props.options,\n            hideTitle: true\n          };\n          return <DefaultPlugin {...props} />;\n        }\n\n      default:\n        {\n          props.visualization = this.memoizedApplyFilters(props.visualization, props.itemFilters);\n          return <DefaultPlugin {...props} />;\n        }\n    }\n  };\n  onLoadingComplete = () => {\n    this.setState({\n      pluginIsLoaded: true\n    });\n  };\n  onToggleFooter = () => {\n    this.setState({\n      showFooter: !this.state.showFooter\n    }, this.props.onToggleItemExpanded(this.props.item.id));\n  };\n  onSelectActiveType = type => {\n    type !== this.getActiveType() && this.props.onSelectActiveType(this.props.visualization.id, type);\n  };\n  getActiveType = () => this.props.visualization.activeType || this.props.item.type;\n  pluginIsAvailable = () => pluginManager.pluginIsAvailable(this.props.item, this.props.visualization);\n  getContentStyle = (calculatedHeight, measuredHeight, preferMeasured) => {\n    const height = preferMeasured ? measuredHeight || calculatedHeight : calculatedHeight;\n    return {\n      height\n    };\n  };\n\n  render() {\n    const {\n      item,\n      dashboardMode,\n      itemFilters\n    } = this.props;\n    const {\n      showFooter\n    } = this.state;\n    const actionButtons = <ItemHeaderButtons item={item} visualization={this.props.visualization} onSelectActiveType={this.onSelectActiveType} onToggleFooter={this.onToggleFooter} d2={this.d2} activeType={this.getActiveType()} activeFooter={this.state.showFooter} />;\n    return <>\n                <ItemHeader title={pluginManager.getName(item)} itemId={item.id} actionButtons={actionButtons} ref={this.headerRef} dashboardMode={dashboardMode} isShortened={item.shortened} />\n                <FatalErrorBoundary>\n                    <div key={this.getUniqueKey(itemFilters)} className=\"dashboard-item-content\" ref={ref => this.contentRef = ref}>\n                        {this.state.configLoaded && this.getPluginComponent()}\n                    </div>\n                </FatalErrorBoundary>\n                {isViewMode(dashboardMode) && showFooter ? <ItemFooter item={item} /> : null}\n            </>;\n  }\n\n}\nItem.contextTypes = {\n  d2: PropTypes.object\n};\nItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object,\n  visualization: PropTypes.object,\n  onSelectActiveType: PropTypes.func,\n  onToggleItemExpanded: PropTypes.func,\n  onVisualizationLoaded: PropTypes.func\n};\nItem.defaultProps = {\n  item: {},\n  onToggleItemExpanded: Function.prototype,\n  visualization: {}\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const itemFilters = !isEditMode(ownProps.dashboardMode) ? sGetItemFiltersRoot(state) : DEFAULT_STATE_ITEM_FILTERS;\n  return {\n    itemFilters,\n    visualization: sGetVisualization(state, pluginManager.extractFavorite(ownProps.item).id)\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  onVisualizationLoaded: visualization => dispatch(acAddVisualization(visualization)),\n  onSelectActiveType: (id, type, activeType) => dispatch(acSetActiveVisualizationType(id, type, activeType))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Item);","import React from 'react';\nimport { colors } from '@dhis2/ui';\nconst style = {\n  backgroundColor: colors.grey200,\n  border: 'none',\n  height: '1px',\n  margin: '0px 0px 5px 0px'\n};\n\nconst Line = () => <hr style={style} />;\n\nexport default Line;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { colors } from '@dhis2/ui';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport Line from '../../../widgets/Line';\nimport { sGetMessagesRoot } from '../../../reducers/messages';\nimport { formatDate } from '../../../modules/util';\nimport { isViewMode } from '../../Dashboard/dashboardModes';\nimport './MessagesItem.css';\nconst PRIVATE = 'PRIVATE';\nconst messageTypes = {\n  [PRIVATE]: 'Private',\n  VALIDATION_RESULT: 'Validation',\n  TICKET: 'Ticket',\n  SYSTEM: 'System'\n};\nconst style = {\n  list: {\n    listStyleType: 'none',\n    paddingLeft: '0px'\n  },\n  seeAll: {\n    textAlign: 'center',\n    fontSize: '13px',\n    marginBottom: '5px'\n  },\n  sender: {\n    fontSize: '13px',\n    lineHeight: '15px',\n    margin: 0,\n    color: colors.grey800\n  },\n  snippet: {\n    color: colors.grey800,\n    fontSize: '13px',\n    lineHeight: '15px',\n    maxHeight: '30px',\n    overflow: 'hidden'\n  }\n};\n\nclass MessagesItem extends Component {\n  state = {\n    uiLocale: ''\n  };\n\n  async componentDidMount() {\n    const uiLocale = await this.context.d2.currentUser.userSettings.get('keyUiLocale');\n    this.setState({\n      uiLocale\n    });\n  }\n\n  getMessageHref = msg => {\n    const msgIdentifier = msg ? `#/${msg.messageType}/${msg.id}` : '';\n    return `${this.context.baseUrl}/dhis-web-messaging/${msgIdentifier}`;\n  };\n  getMessageSender = msg => {\n    const latestMsg = msg.messages.slice(-1)[0];\n    return latestMsg.sender ? latestMsg.sender.displayName : '';\n  };\n  getMessageItems = () => {\n    const modeClass = isViewMode(this.props.dashboardMode) ? 'view' : null;\n    return this.props.messages.map(msg => {\n      const redirectToMsg = () => {\n        if (isViewMode(this.props.dashboardMode)) {\n          document.location.href = this.getMessageHref(msg);\n        }\n      };\n\n      const sender = msg.messageType === PRIVATE ? this.getMessageSender(msg) : messageTypes[msg.messageType];\n      const readClass = !msg.read ? 'unread' : null;\n      const latestMsg = msg.messages.slice(-1)[0];\n      const msgDate = latestMsg.lastUpdated;\n      return <li className={`message-item ${modeClass}`} key={msg.id} onClick={redirectToMsg}>\n                    <p className={`message-title ${readClass}`}>\n                        {msg.displayName} ({msg.messageCount})\n                    </p>\n                    <p style={style.sender}>\n                        {sender} - {formatDate(msgDate, this.state.uiLocale)}\n                    </p>\n                    <p style={style.snippet}>{latestMsg.text}</p>\n                </li>;\n    });\n  };\n\n  render() {\n    return <>\n                <ItemHeader title={i18n.t('Messages')} itemId={this.props.item.id} dashboardMode={this.props.dashboardMode} isShortened={this.props.item.shortened} />\n                <Line />\n                {this.props.messages.length > 0 && <div className=\"dashboard-item-content\">\n                        <ul style={style.list}>{this.getMessageItems()}</ul>\n                        <div style={style.seeAll}>\n                            <a href={this.getMessageHref()}>\n                                {i18n.t('See all messages')}\n                            </a>\n                        </div>\n                    </div>}\n            </>;\n  }\n\n}\n\nMessagesItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  messages: PropTypes.array\n};\nMessagesItem.contextTypes = {\n  d2: PropTypes.object,\n  baseUrl: PropTypes.string\n};\n\nconst mapStateToProps = state => {\n  return {\n    messages: Object.values(sGetMessagesRoot(state))\n  };\n};\n\nconst MessagesContainer = connect(mapStateToProps, null)(MessagesItem);\nexport default MessagesContainer;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nconst NotSupportedItem = props => <>\n        <ItemHeader title={i18n.t('Item type \"{{type}}\" not supported', {\n    type: props.item.type\n  })} itemId={props.item.id} dashboardMode={props.dashboardMode} isShortened={props.item.shortened} />\n        <div style={{\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '90%'\n  }}>\n            <NotInterestedIcon style={{\n      width: 100,\n      height: 100,\n      align: 'center'\n    }} color=\"disabled\" />\n        </div>\n    </>;\n\nNotSupportedItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object\n};\nexport default NotSupportedItem;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst DescriptionIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill={colors.grey500}>\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M14 2H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6zm2 16H8v-2h8v2zm0-4H8v-2h8v2zm-3-5V3.5L18.5 9H13z\" />\n    </svg>;\n\nDescriptionIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default DescriptionIcon;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst DeleteIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill={colors.red500}>\n        <path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>;\n\nDeleteIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default DeleteIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { colors } from '@dhis2/ui';\nimport DescriptionIcon from '../../../icons/Description';\nimport DeleteIcon from '../../../icons/Delete';\nimport Line from '../../../widgets/Line';\nimport { itemTypeMap, getItemUrl } from '../../../modules/itemTypes';\nimport { orArray } from '../../../modules/util';\nimport { tRemoveListItemContent } from './actions';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport { isEditMode } from '../../Dashboard/dashboardModes';\nimport classes from './Item.module.css';\n\nconst getItemTitle = item => itemTypeMap[item.type].pluralTitle;\n\nconst getContentItems = item => orArray(item[itemTypeMap[item.type].propName]).filter((item, index, array) => array.findIndex(el => el.id === item.id) === index);\n\nconst ListItem = (props, context) => {\n  const {\n    item,\n    dashboardMode,\n    tRemoveListItemContent\n  } = props;\n  const contentItems = getContentItems(item);\n\n  const getLink = contentItem => {\n    const deleteButton = <button className={classes.deletebutton} onClick={() => tRemoveListItemContent(item, contentItem)}>\n                <DeleteIcon className={classes.deleteicon} />\n            </button>;\n    return <>\n                <a className={classes.link} style={{\n        color: colors.grey900\n      }} href={getItemUrl(item.type, contentItem, context.d2)}>\n                    {contentItem.name}\n                </a>\n                {isEditMode(dashboardMode) ? deleteButton : null}\n            </>;\n  };\n\n  return <>\n            <ItemHeader title={getItemTitle(item)} itemId={item.id} dashboardMode={dashboardMode} isShortened={item.shortened} />\n            <Line />\n            <div className=\"dashboard-item-content\">\n                <ul className={classes.list}>\n                    {contentItems.map(contentItem => <li className={classes.item} key={contentItem.id}>\n                            <DescriptionIcon className={classes.itemicon} />\n                            {getLink(contentItem)}\n                        </li>)}\n                </ul>\n            </div>\n        </>;\n};\n\nListItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  tRemoveListItemContent: PropTypes.func\n};\nListItem.contextTypes = {\n  d2: PropTypes.object\n};\nexport default connect(null, {\n  tRemoveListItemContent\n})(ListItem);","import { acUpdateDashboardItem, acRemoveDashboardItem } from '../../../actions/editDashboard';\nimport { itemTypeMap } from '../../../modules/itemTypes';\nexport const tRemoveListItemContent = (dashboardItem, content) => dispatch => {\n  const listItemType = itemTypeMap[dashboardItem.type].propName;\n  const newContent = dashboardItem[listItemType].filter(item => item.id !== content.id);\n\n  if (newContent.length) {\n    dashboardItem[listItemType] = newContent;\n    dispatch(acUpdateDashboardItem(dashboardItem));\n  } else {\n    dispatch(acRemoveDashboardItem(dashboardItem));\n  }\n};","/** @module reducers/editDashboard */\nimport update from 'immutability-helper';\nimport isEmpty from 'lodash/isEmpty';\nimport { orArray } from '../modules/util';\nexport const SET_PRINT_DASHBOARD = 'SET_PRINT_DASHBOARD';\nexport const CLEAR_PRINT_DASHBOARD = 'CLEAR_PRINT_DASHBOARD';\nexport const ADD_PRINT_DASHBOARD_ITEM = 'ADD_PRINT_DASHBOARD_ITEM';\nexport const SET_PRINT_DASHBOARD_LAYOUT = 'SET_PRINT_DASHBOARD_LAYOUT';\nexport const REMOVE_PRINT_DASHBOARD_ITEM = 'REMOVE_PRINT_DASHBOARD_ITEM';\nexport const UPDATE_PRINT_DASHBOARD_ITEM = 'UPDATE_PRINT_DASHBOARD_ITEM';\nexport const DEFAULT_STATE_PRINT_DASHBOARD = {};\nconst DEFAULT_DASHBOARD_ITEMS = [];\nexport const NEW_PRINT_DASHBOARD_STATE = {\n  id: '',\n  name: '',\n  access: {},\n  description: '',\n  dashboardItems: DEFAULT_DASHBOARD_ITEMS\n};\nexport default ((state = DEFAULT_STATE_PRINT_DASHBOARD, action) => {\n  switch (action.type) {\n    case SET_PRINT_DASHBOARD:\n      {\n        const newState = {};\n        Object.keys(NEW_PRINT_DASHBOARD_STATE).map(k => newState[k] = action.value[k]);\n        return newState;\n      }\n\n    case CLEAR_PRINT_DASHBOARD:\n      return DEFAULT_STATE_PRINT_DASHBOARD;\n\n    case ADD_PRINT_DASHBOARD_ITEM:\n      if (!action.value.position) {\n        return update(state, {\n          dashboardItems: {\n            $unshift: [action.value]\n          }\n        });\n      }\n\n      return update(state, {\n        dashboardItems: {\n          $splice: [[parseInt(action.value.position), 0, action.value]]\n        }\n      });\n\n    case REMOVE_PRINT_DASHBOARD_ITEM:\n      {\n        const idToRemove = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === idToRemove);\n\n        if (dashboardItemIndex > -1) {\n          return update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1]]\n            }\n          });\n        }\n\n        return state;\n      }\n\n    case UPDATE_PRINT_DASHBOARD_ITEM:\n      {\n        const dashboardItem = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === dashboardItem.id);\n\n        if (dashboardItemIndex > -1) {\n          const newState = update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1, Object.assign({}, dashboardItem)]]\n            }\n          });\n          return newState;\n        }\n\n        return state;\n      }\n\n    case SET_PRINT_DASHBOARD_LAYOUT:\n      {\n        const stateItems = orArray(state.dashboardItems);\n        let layoutHasChanged = false;\n        const newStateItems = action.value.map(({\n          x,\n          y,\n          w,\n          h,\n          i\n        }) => {\n          const stateItem = stateItems.find(si => si.id === i);\n\n          if (!(stateItem.x === x && stateItem.y === y && stateItem.w === w && stateItem.h === h)) {\n            layoutHasChanged = true;\n            return Object.assign({}, stateItem, {\n              w,\n              h,\n              x,\n              y\n            });\n          }\n\n          return stateItem;\n        });\n        return layoutHasChanged ? { ...state,\n          dashboardItems: newStateItems\n        } : state;\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetPrintDashboardRoot = state => state.printDashboard; // selectors\n\nexport const sGetIsPrinting = state => !isEmpty(state.printDashboard);\nexport const sGetPrintDashboardName = state => sGetPrintDashboardRoot(state).name;\nexport const sGetPrintDashboardDescription = state => sGetPrintDashboardRoot(state).description;\nexport const sGetPrintDashboardItems = state => {\n  return sGetPrintDashboardRoot(state)?.dashboardItems || DEFAULT_DASHBOARD_ITEMS;\n};","import React from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport Input from '@material-ui/core/Input';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport PrintItemInfo from '../ItemHeader/PrintItemInfo';\nimport Line from '../../../widgets/Line';\nimport { Parser as RichTextParser, Editor as RichTextEditor } from '@dhis2/d2-ui-rich-text';\nimport { acUpdateDashboardItem } from '../../../actions/editDashboard';\nimport { sGetEditDashboardItems } from '../../../reducers/editDashboard';\nimport { sGetDashboardItems } from '../../../reducers/dashboards';\nimport { sGetIsPrinting, sGetPrintDashboardItems } from '../../../reducers/printDashboard';\nimport { isEditMode, PRINT_LAYOUT } from '../../Dashboard/dashboardModes';\nconst style = {\n  textDiv: {\n    padding: '10px',\n    whiteSpace: 'pre-line',\n    lineHeight: '20px'\n  },\n  textField: {\n    fontSize: '14px',\n    fontStretch: 'normal',\n    width: '90%',\n    margin: '0 auto',\n    display: 'block',\n    lineHeight: '24px'\n  },\n  container: {\n    marginBottom: '20px',\n    marginTop: '20px'\n  }\n};\n\nconst TextItem = props => {\n  const {\n    item,\n    dashboardMode,\n    text,\n    acUpdateDashboardItem\n  } = props;\n\n  const onChangeText = event => {\n    const updatedItem = { ...item,\n      text: event.target.value\n    };\n    acUpdateDashboardItem(updatedItem);\n  };\n\n  const viewItem = () => {\n    const textDivStyle = Object.assign({}, style.textField, style.textDiv);\n    return <div className=\"dashboard-item-content\" style={style.container}>\n                <RichTextParser style={textDivStyle}>{text}</RichTextParser>\n            </div>;\n  };\n\n  const editItem = () => {\n    return <>\n                <ItemHeader title={i18n.t('Text item')} itemId={item.id} dashboardMode={dashboardMode} />\n                <Line />\n                <div className=\"dashboard-item-content\">\n                    <RichTextEditor onEdit={onChangeText}>\n                        <Input value={text} multiline fullWidth style={style.textField} placeholder={i18n.t('Add text here')} onChange={onChangeText} />\n                    </RichTextEditor>\n                </div>\n            </>;\n  };\n\n  const printItem = () => {\n    const textDivStyle = Object.assign({}, style.textField, style.textDiv);\n    return <>\n                {props.item.shortened ? <PrintItemInfo /> : null}\n                <div className=\"dashboard-item-content\" style={style.container}>\n                    <RichTextParser style={textDivStyle}>{text}</RichTextParser>\n                </div>\n            </>;\n  };\n\n  let textItem;\n\n  if (isEditMode(dashboardMode)) {\n    textItem = editItem;\n  } else if (dashboardMode === PRINT_LAYOUT) {\n    textItem = printItem;\n  } else {\n    textItem = viewItem;\n  }\n\n  return <>{textItem()}</>;\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const isPrintPreview = sGetIsPrinting(state);\n  let items;\n\n  if (isPrintPreview) {\n    items = sGetPrintDashboardItems(state);\n  } else if (isEditMode(ownProps.dashboardMode)) {\n    items = sGetEditDashboardItems(state);\n  } else {\n    items = sGetDashboardItems(state);\n  }\n\n  const item = items.find(item => item.id === ownProps.item.id);\n  return {\n    text: item ? item.text : ''\n  };\n};\n\nTextItem.propTypes = {\n  acUpdateDashboardItem: PropTypes.func,\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  text: PropTypes.string\n};\nexport default connect(mapStateToProps, {\n  acUpdateDashboardItem\n})(TextItem);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport Line from '../../../widgets/Line';\nimport { FILTER_ORG_UNIT } from '../../../actions/itemFilters';\nimport { sGetItemFiltersRoot, DEFAULT_STATE_ITEM_FILTERS } from '../../../reducers/itemFilters';\nimport { isEditMode } from '../../Dashboard/dashboardModes';\n\nconst getIframeSrc = (appDetails, item, itemFilters) => {\n  let iframeSrc = `${appDetails.launchUrl}?dashboardItemId=${item.id}`;\n\n  if (itemFilters && itemFilters[FILTER_ORG_UNIT] && itemFilters[FILTER_ORG_UNIT].length) {\n    const ouIds = itemFilters[FILTER_ORG_UNIT].map(ouFilter => ouFilter.path.split('/').slice(-1)[0]);\n    iframeSrc += `&userOrgUnit=${ouIds.join(',')}`;\n  }\n\n  return iframeSrc;\n};\n\nconst AppItem = ({\n  dashboardMode,\n  item,\n  itemFilters\n}, context) => {\n  let appDetails;\n  const appKey = item.appKey;\n\n  if (appKey) {\n    appDetails = context.d2.system.installedApps.find(app => app.key === appKey);\n  }\n\n  return appDetails && appDetails.name && appDetails.launchUrl ? <>\n            <ItemHeader title={appDetails.name} itemId={item.id} dashboardMode={dashboardMode} isShortened={item.shortened} />\n            <Line />\n            <iframe title={appDetails.name} src={getIframeSrc(appDetails, item, itemFilters)} className=\"dashboard-item-content\" style={{\n      border: 'none'\n    }} />\n        </> : <>\n            <ItemHeader title={`${appKey} app not found`} />\n            <Line />\n            <div className=\"dashboard-item-content\" style={{\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      height: '90%'\n    }}>\n                <NotInterestedIcon color=\"disabled\" disabled style={{\n        width: 100,\n        height: 100,\n        align: 'center'\n      }} />\n            </div>\n        </>;\n};\n\nAppItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object\n};\nAppItem.contextTypes = {\n  d2: PropTypes.object\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const itemFilters = !isEditMode(ownProps.dashboardMode) ? sGetItemFiltersRoot(state) : DEFAULT_STATE_ITEM_FILTERS;\n  return {\n    itemFilters\n  };\n};\n\nexport default connect(mapStateToProps)(AppItem);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { colors } from '@dhis2/ui';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nconst style = {\n  margin: '21px 28px',\n  fontSize: '14px',\n  lineHeight: '18px',\n  color: colors.grey600\n};\n\nconst SpacerItem = props => {\n  return <>\n            <ItemHeader title={i18n.t('Spacer')} itemId={props.item.id} dashboardMode={props.dashboardMode} isShortened={props.item.shortened} />\n            <p style={style}>\n                {i18n.t('Use a spacer to create empty vertical space between other dashboard items.')}\n            </p>\n        </>;\n};\n\nSpacerItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object\n};\nexport default SpacerItem;","import React from 'react';\n\nconst PageBreakItem = () => <div />;\n\nexport default PageBreakItem;","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { sGetSelectedId, sGetSelectedShowDescription } from '../../../reducers/selected';\nimport { sGetDashboardById, EMPTY_DASHBOARD } from '../../../reducers/dashboards';\nimport { sGetNamedItemFilters } from '../../../reducers/itemFilters';\nimport { sGetIsEditing } from '../../../reducers/editDashboard';\nimport { sGetPrintDashboardName, sGetPrintDashboardDescription } from '../../../reducers/printDashboard';\nimport classes from './styles/Item.module.css';\n\nconst PrintTitlePageItem = ({\n  name,\n  description,\n  itemFilters,\n  showDescription\n}) => {\n  const getItemFilterList = () => {\n    const listItems = itemFilters.map(({\n      name,\n      values\n    }) => <li className={classes.filterListItem} key={name}>\n                {name}: {values.map(val => val.name).join(', ')}\n            </li>);\n    return <ul className={classes.filterList}>{listItems}</ul>;\n  };\n\n  return <div className={classes.titlePage}>\n            <p className={classes.name}>{name}</p>\n            {showDescription && description && <p className={classes.description}>{description}</p>}\n            {itemFilters.length > 0 && <>\n                    <p className={classes.filterTitle}>\n                        {i18n.t('Filters applied')}\n                    </p>\n                    {getItemFilterList()}\n                </>}\n        </div>;\n};\n\nPrintTitlePageItem.propTypes = {\n  description: PropTypes.string,\n  itemFilters: PropTypes.array,\n  name: PropTypes.string,\n  showDescription: PropTypes.bool\n};\nPrintTitlePageItem.defaultProps = {\n  description: '',\n  name: '',\n  showDescription: false\n};\n\nconst mapStateToProps = state => {\n  const id = sGetSelectedId(state);\n  const isEditMode = sGetIsEditing(state);\n  const viewDashboard = sGetDashboardById(state, id) || EMPTY_DASHBOARD;\n  const name = isEditMode ? sGetPrintDashboardName(state) || i18n.t('Untitled dashboard') : viewDashboard.displayName;\n  const description = isEditMode ? sGetPrintDashboardDescription(state) : viewDashboard.displayDescription;\n  return {\n    name,\n    description,\n    itemFilters: sGetNamedItemFilters(state),\n    showDescription: sGetSelectedShowDescription(state)\n  };\n};\n\nexport default connect(mapStateToProps)(PrintTitlePageItem);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport VisualizationItem from './VisualizationItem/Item';\nimport MessagesItem from './MessagesItem/Item';\nimport NotSupportedItem from './NotSupportedItem/Item';\nimport ListItem from './ListItem/Item';\nimport TextItem from './TextItem/Item';\nimport AppItem from './AppItem/Item';\nimport SpacerItem from './SpacerItem/Item';\nimport PageBreakItem from './PageBreakItem/Item';\nimport PrintTitlePageItem from './PrintTitlePageItem/Item';\nimport { APP, VISUALIZATION, REPORT_TABLE, CHART, MAP, EVENT_CHART, EVENT_REPORT, MESSAGES, REPORTS, RESOURCES, USERS, TEXT, SPACER, PAGEBREAK, PRINT_TITLE_PAGE } from '../../modules/itemTypes';\n\nconst getGridItem = type => {\n  switch (type) {\n    case VISUALIZATION:\n    case REPORT_TABLE:\n    case CHART:\n    case MAP:\n    case EVENT_CHART:\n    case EVENT_REPORT:\n      return VisualizationItem;\n\n    case MESSAGES:\n      return MessagesItem;\n\n    case REPORTS:\n    case RESOURCES:\n    case USERS:\n      return ListItem;\n\n    case TEXT:\n      return TextItem;\n\n    case SPACER:\n      return SpacerItem;\n\n    case APP:\n      return AppItem;\n\n    case PAGEBREAK:\n      return PageBreakItem;\n\n    case PRINT_TITLE_PAGE:\n      return PrintTitlePageItem;\n\n    default:\n      return NotSupportedItem;\n  }\n};\n\nexport const Item = props => {\n  const GridItem = getGridItem(props.item.type);\n  return <GridItem item={props.item} dashboardMode={props.dashboardMode} onToggleItemExpanded={props.onToggleItemExpanded} />;\n};\nItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  onToggleItemExpanded: PropTypes.func\n};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash/debounce';\nimport pick from 'lodash/pick';\nconst defaultDebounceMs = 100;\nconst defaultBufferFactor = 0.25;\n\nclass ProgressiveLoadingContainer extends Component {\n  static propTypes = {\n    children: PropTypes.node.isRequired,\n    bufferFactor: PropTypes.number,\n    className: PropTypes.string,\n    debounceMs: PropTypes.number,\n    style: PropTypes.object\n  };\n  static defaultProps = {\n    debounceMs: defaultDebounceMs,\n    bufferFactor: defaultBufferFactor\n  };\n  state = {\n    shouldLoad: false\n  };\n  containerRef = null;\n  shouldLoadHandler = null;\n  handlerOptions = {\n    passive: true\n  };\n\n  checkShouldLoad() {\n    if (!this.containerRef) {\n      return;\n    }\n\n    const bufferPx = this.props.bufferFactor * window.innerHeight;\n    const rect = this.containerRef.getBoundingClientRect();\n\n    if (rect.bottom > -bufferPx && rect.top < window.innerHeight + bufferPx) {\n      this.setState({\n        shouldLoad: true\n      });\n      this.removeHandler();\n    }\n  }\n\n  registerHandler() {\n    this.shouldLoadHandler = debounce(() => this.checkShouldLoad(), this.props.debounceMs);\n    document.getElementsByClassName('dashboard-wrapper')[0]?.addEventListener('scroll', this.shouldLoadHandler, this.handlerOptions);\n  }\n\n  removeHandler() {\n    document.getElementsByClassName('dashboard-wrapper')[0]?.removeEventListener('scroll', this.shouldLoadHandler, this.handlerOptions);\n  }\n\n  componentDidMount() {\n    this.registerHandler();\n    this.checkShouldLoad();\n  }\n\n  componentWillUnmount() {\n    this.removeHandler();\n  }\n\n  render() {\n    const {\n      children,\n      className,\n      style,\n      ...props\n    } = this.props;\n    const {\n      shouldLoad\n    } = this.state;\n    const eventProps = pick(props, ['onMouseDown', 'onTouchStart', 'onMouseUp', 'onTouchEnd']);\n    return <div ref={ref => this.containerRef = ref} style={style} className={className} {...eventProps}>\n                {shouldLoad && children}\n            </div>;\n  }\n\n}\n\nexport default ProgressiveLoadingContainer;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ReactGridLayout from 'react-grid-layout';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport { acUpdateDashboardLayout } from '../../actions/editDashboard';\nimport { Item } from '../Item/Item';\nimport { resize as pluginResize } from '../Item/VisualizationItem/plugin';\nimport { isVisualizationType } from '../../modules/itemTypes';\nimport { GRID_ROW_HEIGHT, GRID_COMPACT_TYPE, MARGIN, getGridColumns, hasShape, onItemResize } from './gridUtil';\nimport { orArray } from '../../modules/util';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\nimport './ItemGrid.css';\nimport { sGetSelectedId, sGetSelectedIsLoading } from '../../reducers/selected';\nimport { sGetEditDashboardRoot, sGetEditDashboardItems } from '../../reducers/editDashboard';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport ProgressiveLoadingContainer from '../Item/ProgressiveLoadingContainer';\nimport { VIEW, EDIT } from '../Dashboard/dashboardModes'; // Component\n\nconst EXPANDED_HEIGHT = 17; // this is set in the .dashboard-item-content css\n\nexport const ITEM_CONTENT_PADDING_BOTTOM = 4;\nexport class ItemGrid extends Component {\n  state = {\n    expandedItems: {}\n  };\n  onToggleItemExpanded = clickedId => {\n    const isExpanded = typeof this.state.expandedItems[clickedId] === 'boolean' ? this.state.expandedItems[clickedId] : false;\n    const expandedItems = { ...this.state.expandedItems\n    };\n    expandedItems[clickedId] = !isExpanded;\n    this.setState({\n      expandedItems\n    });\n  };\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.edit) {\n      this.setState({\n        expandedItems: {}\n      });\n    }\n  }\n\n  onLayoutChange = newLayout => {\n    if (this.props.edit) {\n      this.props.acUpdateDashboardLayout(newLayout);\n    }\n  };\n  onResizeStop = (layout, oldItem, newItem) => {\n    onItemResize(newItem.i);\n    const dashboardItem = this.props.dashboardItems.find(item => item.id === newItem.i); // call resize on the item component if it's a plugin type\n\n    if (dashboardItem && isVisualizationType(dashboardItem)) {\n      pluginResize(dashboardItem);\n    }\n  };\n  adjustHeightForExpanded = dashboardItem => {\n    const expandedItem = this.state.expandedItems[dashboardItem.id];\n\n    if (expandedItem && expandedItem === true) {\n      return Object.assign({}, dashboardItem, {\n        h: dashboardItem.h + EXPANDED_HEIGHT\n      });\n    }\n\n    return dashboardItem;\n  };\n  getItemComponent = item => {\n    const itemClassNames = [item.type, this.props.edit ? 'edit' : 'view'].join(' ');\n    return <ProgressiveLoadingContainer key={item.i} className={itemClassNames}>\n                <Item item={item} dashboardMode={this.props.edit ? EDIT : VIEW} onToggleItemExpanded={this.onToggleItemExpanded} />\n            </ProgressiveLoadingContainer>;\n  };\n  getItemComponents = items => items.map(item => this.getItemComponent(item));\n\n  render() {\n    const {\n      edit,\n      isLoading,\n      dashboardItems\n    } = this.props;\n\n    if (!isLoading && !dashboardItems.length) {\n      return <NoContentMessage text={i18n.t('There are no items on this dashboard')} />;\n    }\n\n    const items = edit ? dashboardItems : dashboardItems.map(this.adjustHeightForExpanded);\n    return <div className=\"grid-wrapper\">\n                {isLoading ? <Layer translucent>\n                        <CenteredContent>\n                            <CircularLoader />\n                        </CenteredContent>\n                    </Layer> : null}\n                <ReactGridLayout onLayoutChange={this.onLayoutChange} onResizeStop={this.onResizeStop} className=\"layout\" layout={items} margin={MARGIN} cols={getGridColumns()} rowHeight={GRID_ROW_HEIGHT} width={window.innerWidth} compactType={GRID_COMPACT_TYPE} isDraggable={edit} isResizable={edit} draggableCancel=\"input,textarea\">\n                    {this.getItemComponents(items)}\n                </ReactGridLayout>\n            </div>;\n  }\n\n}\nItemGrid.propTypes = {\n  acUpdateDashboardLayout: PropTypes.func,\n  dashboardItems: PropTypes.array,\n  edit: PropTypes.bool,\n  isLoading: PropTypes.bool\n};\nItemGrid.defaultProps = {\n  dashboardItems: []\n}; // Container\n\nconst mapStateToProps = (state, ownProps) => {\n  const selectedDashboard = ownProps.edit ? sGetEditDashboardRoot(state) : sGetDashboardById(state, sGetSelectedId(state));\n  const dashboardItems = ownProps.edit ? sGetEditDashboardItems(state) : sGetDashboardItems(state);\n  return {\n    isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n    dashboardItems\n  };\n};\n\nconst mapDispatchToProps = {\n  acUpdateDashboardLayout\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n  const validItems = orArray(stateProps.dashboardItems).filter(hasShape);\n  return { ...dispatchProps,\n    edit: ownProps.edit,\n    isLoading: stateProps.isLoading,\n    dashboardItems: validItems,\n    onItemResize\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps, mergeProps)(ItemGrid);","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { colors } from '@dhis2/ui';\nconst styles = {\n  badgeContainer: {\n    margin: '2px',\n    padding: '0 16px',\n    borderRadius: '4px',\n    color: colors.white,\n    backgroundColor: '#212934',\n    height: 36,\n    display: 'flex',\n    alignItems: 'center'\n  },\n  badge: {\n    fontSize: '13px',\n    cursor: 'pointer',\n    whiteSpace: 'nowrap'\n  },\n  badgeRemove: {\n    fontSize: '12px',\n    textDecoration: 'underline',\n    marginLeft: '24px',\n    cursor: 'pointer'\n  }\n};\n\nclass FilterBadge extends Component {\n  onClick = id => () => this.props.onClick(id);\n  onRemove = id => () => this.props.onRemove(id);\n\n  render() {\n    const {\n      data\n    } = this.props;\n    return <div style={styles.badgeContainer}>\n                <span style={styles.badge} onClick={this.onClick(data.id)}>\n                    {`${data.name}: ${data.values.length > 1 ? i18n.t('{{count}} selected', {\n          count: data.values.length\n        }) : data.values[0].name}`}\n                </span>\n                <span style={styles.badgeRemove} onClick={this.onRemove(data.id)}>\n                    {i18n.t('Remove')}\n                </span>\n            </div>;\n  }\n\n}\n\nFilterBadge.propTypes = {\n  data: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired,\n  onRemove: PropTypes.func.isRequired\n};\nFilterBadge.defaultProps = {\n  onClick: Function.prototype,\n  onRemove: Function.prototype\n};\nexport default FilterBadge;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport FilterBadge from './FilterBadge';\nimport { sGetNamedItemFilters } from '../../reducers/itemFilters';\nimport { acRemoveItemFilter } from '../../actions/itemFilters';\nimport { acSetActiveModalDimension } from '../../actions/activeModalDimension';\nimport classes from './styles/FilterBar.module.css';\nexport class FilterBar extends Component {\n  onBadgeRemove = id => {\n    this.props.removeItemFilter(id);\n  };\n  onBadgeClick = id => {\n    this.props.setActiveModalDimension({\n      id,\n      name: this.props.filters.find(item => item.id === id).name\n    });\n  };\n\n  render() {\n    const {\n      filters\n    } = this.props;\n    return filters.length ? // the 3 is calculated so that the FilterBar has the same vertical position as the TitleBar in relation to the ControlBar\n    <div className={classes.bar} style={{\n      top: 3\n    }}>\n                {filters.map(filter => <FilterBadge key={filter.id} data={filter} onClick={this.onBadgeClick} onRemove={this.onBadgeRemove} />)}\n            </div> : null;\n  }\n\n}\nFilterBar.propTypes = {\n  filters: PropTypes.array.isRequired,\n  removeItemFilter: PropTypes.func.isRequired,\n  setActiveModalDimension: PropTypes.func\n};\nFilterBar.defaultProps = {\n  filters: [],\n  removeItemFIlter: Function.prototype\n};\n\nconst mapStateToProps = state => ({\n  filters: sGetNamedItemFilters(state)\n});\n\nexport default connect(mapStateToProps, {\n  setActiveModalDimension: acSetActiveModalDimension,\n  removeItemFilter: acRemoveItemFilter\n})(FilterBar);","export const SET_WINDOW_HEIGHT = 'SET_WINDOW_HEIGHT';\nexport const DEFAULT_STATE_WINDOW_HEIGHT = window.innerHeight;\nexport default ((state = DEFAULT_STATE_WINDOW_HEIGHT, action) => {\n  switch (action.type) {\n    case SET_WINDOW_HEIGHT:\n      {\n        return action.value;\n      }\n\n    default:\n      return state;\n  }\n});\nexport const sGetWindowHeight = state => state.windowHeight;","import { generateUid } from 'd2/uid';\nimport { SET_PRINT_DASHBOARD, CLEAR_PRINT_DASHBOARD, SET_PRINT_DASHBOARD_LAYOUT, ADD_PRINT_DASHBOARD_ITEM, REMOVE_PRINT_DASHBOARD_ITEM, UPDATE_PRINT_DASHBOARD_ITEM } from '../reducers/printDashboard';\nimport { NEW_ITEM_SHAPE, getGridItemProperties, getPageBreakItemShape, getPrintTitlePageItemShape } from '../components/ItemGrid/gridUtil';\nimport { itemTypeMap, PAGEBREAK } from '../modules/itemTypes'; // actions\n\nexport const acSetPrintDashboard = (dashboard, items) => {\n  const val = { ...dashboard,\n    dashboardItems: items\n  };\n  return {\n    type: SET_PRINT_DASHBOARD,\n    value: val\n  };\n};\nexport const acClearPrintDashboard = () => ({\n  type: CLEAR_PRINT_DASHBOARD\n});\nexport const acUpdatePrintDashboardLayout = value => ({\n  type: SET_PRINT_DASHBOARD_LAYOUT,\n  value\n});\nexport const acAddPrintDashboardItem = item => {\n  const type = item.type;\n  delete item.type;\n  const itemPropName = itemTypeMap[type].propName;\n  const id = generateUid();\n  const gridItemProperties = getGridItemProperties(id);\n  let shape;\n\n  if (type === PAGEBREAK) {\n    const yPos = item.yPos || 0;\n    shape = getPageBreakItemShape(yPos, item.isStatic);\n  } else {\n    shape = getPrintTitlePageItemShape(item.isOneItemPerPage);\n  }\n\n  return {\n    type: ADD_PRINT_DASHBOARD_ITEM,\n    value: {\n      id,\n      type,\n      position: item.position || null,\n      [itemPropName]: item.content,\n      ...NEW_ITEM_SHAPE,\n      ...gridItemProperties,\n      ...shape\n    }\n  };\n};\nexport const acRemovePrintDashboardItem = value => ({\n  type: REMOVE_PRINT_DASHBOARD_ITEM,\n  value\n});\nexport const acUpdatePrintDashboardItem = item => ({\n  type: UPDATE_PRINT_DASHBOARD_ITEM,\n  value: item\n});","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport TitleBar from '../TitleBar/TitleBar';\nimport ItemGrid from '../ItemGrid/ItemGrid';\nimport FilterBar from '../FilterBar/FilterBar';\nimport DashboardsBar from '../ControlBar/DashboardsBar';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport { sGetIsEditing } from '../../reducers/editDashboard';\nimport { sGetIsPrinting } from '../../reducers/printDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { sGetWindowHeight } from '../../reducers/windowHeight';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { acClearEditDashboard } from '../../actions/editDashboard';\nimport { acClearPrintDashboard } from '../../actions/printDashboard';\nimport { getControlBarHeight, HEADERBAR_HEIGHT } from '../ControlBar/controlBarDimensions';\nexport const ViewDashboard = props => {\n  useEffect(() => {\n    if (props.dashboardIsEditing) {\n      props.clearEditDashboard();\n    } else if (props.dashboardIsPrinting) {\n      props.clearPrintDashboard();\n    }\n  }, [props.dashboardIsEditing, props.dashboardIsPrinting]);\n  useEffect(() => {\n    document.querySelector('.dashboard-wrapper')?.scroll(0, 0);\n  }, [props.selectedId]);\n  const height = props.windowHeight - HEADERBAR_HEIGHT - getControlBarHeight(props.controlBarRows);\n  return <>\n            <DashboardsBar />\n            <DashboardVerticalOffset />\n            <div className=\"dashboard-wrapper\" style={{\n      height\n    }}>\n                <TitleBar edit={false} />\n                <FilterBar />\n                <ItemGrid edit={false} />\n            </div>\n        </>;\n};\nViewDashboard.propTypes = {\n  clearEditDashboard: PropTypes.func,\n  clearPrintDashboard: PropTypes.func,\n  controlBarRows: PropTypes.number,\n  dashboardIsEditing: PropTypes.bool,\n  dashboardIsPrinting: PropTypes.bool,\n  selectedId: PropTypes.string,\n  windowHeight: PropTypes.number\n};\n\nconst mapStateToProps = state => {\n  return {\n    dashboardIsEditing: sGetIsEditing(state),\n    dashboardIsPrinting: sGetIsPrinting(state),\n    controlBarRows: sGetControlBarUserRows(state),\n    selectedId: sGetSelectedId(state),\n    windowHeight: sGetWindowHeight(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  clearEditDashboard: acClearEditDashboard,\n  clearPrintDashboard: acClearPrintDashboard\n})(ViewDashboard);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Button, Modal, ModalContent, ModalActions, ButtonStrip, ModalTitle } from '@dhis2/ui';\nimport classes from './styles/ConfirmDeleteDialog.module.css';\nexport const ConfirmDeleteDialog = ({\n  dashboardName,\n  onDeleteConfirmed,\n  onContinueEditing,\n  open\n}) => {\n  const actions = [<Button key=\"cancel\" secondary onClick={onContinueEditing}>\n            {i18n.t('Cancel')}\n        </Button>, <Button key=\"delete\" destructive onClick={onDeleteConfirmed}>\n            {i18n.t('Delete')}\n        </Button>];\n  return open && <Modal onClose={onContinueEditing} small position=\"middle\">\n                <ModalTitle>{i18n.t('Delete dashboard')}</ModalTitle>\n                <ModalContent>\n                    <span className={classes.content}>\n                        {i18n.t('Deleting dashboard \"{{ dashboardName }}\" will remove it for all users. This action cannot be undone. Are you sure you want to permanently delete this dashboard?', {\n          dashboardName\n        })}\n                    </span>\n                </ModalContent>\n                <ModalActions>\n                    <ButtonStrip>{actions}</ButtonStrip>\n                </ModalActions>\n            </Modal>;\n};\nConfirmDeleteDialog.propTypes = {\n  dashboardName: PropTypes.string,\n  open: PropTypes.bool,\n  onContinueEditing: PropTypes.func,\n  onDeleteConfirmed: PropTypes.func\n};\nexport default ConfirmDeleteDialog;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport ControlBar from './ControlBar';\nimport TranslationDialog from '@dhis2/d2-ui-translation-dialog';\nimport { Button, ButtonStrip } from '@dhis2/ui';\nimport ConfirmDeleteDialog from './ConfirmDeleteDialog';\nimport { tSaveDashboard, acClearEditDashboard } from '../../actions/editDashboard';\nimport { acClearPrintDashboard } from '../../actions/printDashboard';\nimport { tDeleteDashboard, acSetDashboardDisplayName } from '../../actions/dashboards';\nimport { sGetEditDashboardRoot, sGetIsNewDashboard, sGetIsPrintPreviewView } from '../../reducers/editDashboard';\nimport { acSetPrintPreviewView, acClearPrintPreviewView } from '../../actions/editDashboard';\nimport { CONTROL_BAR_ROW_HEIGHT, MIN_ROW_COUNT, getControlBarHeight } from './controlBarDimensions';\nimport { apiFetchDashboard } from '../../api/dashboards';\nimport classes from './styles/DashboardsBar.module.css';\nconst buttonBarStyle = {\n  height: CONTROL_BAR_ROW_HEIGHT,\n  paddingTop: '15px',\n  marginLeft: '15px',\n  marginRight: '15px'\n};\nexport class EditBar extends Component {\n  state = {\n    translationDialogIsOpen: false,\n    dashboardModel: undefined,\n    confirmDeleteDialogOpen: false,\n    redirectUrl: undefined\n  };\n  onConfirmDelete = () => {\n    this.setState({\n      confirmDeleteDialogOpen: true\n    });\n  };\n  onSave = () => {\n    this.props.onSave().then(newId => {\n      this.setState({\n        redirectUrl: `/${newId}`\n      });\n    });\n  };\n  onPrintPreview = () => {\n    if (this.props.isPrintPreviewView) {\n      this.props.clearPrintPreview();\n      this.props.clearPrintDashboard();\n    } else {\n      this.props.showPrintPreview();\n    }\n  };\n  onDiscard = () => {\n    this.props.onDiscardChanges();\n    const redirectUrl = this.props.dashboardId ? `/${this.props.dashboardId}` : '/';\n    this.setState({\n      redirectUrl\n    });\n  };\n  onContinueEditing = () => {\n    this.setState({\n      confirmDeleteDialogOpen: false\n    });\n  };\n  onDeleteConfirmed = () => {\n    this.setState({\n      confirmDeleteDialogOpen: false\n    });\n    this.props.onDelete(this.props.dashboardId).then(() => {\n      this.setState({\n        redirectUrl: '/'\n      });\n    });\n  };\n  onTranslationsSaved = async translations => {\n    if (translations && translations.length) {\n      const dbLocale = await this.context.d2.currentUser.userSettings.get('keyDbLocale');\n      const translation = translations.find(t => t.locale === dbLocale && t.property === 'NAME');\n\n      if (translation && translation.value) {\n        this.props.onTranslate(this.props.dashboardId, translation.value);\n      }\n    }\n  };\n  fetchDashboardModel = () => {\n    if (this.props.dashboardId && !this.state.dashboardModel) {\n      apiFetchDashboard(this.props.dashboardId).then(dashboardModel => this.setState({\n        dashboardModel\n      }));\n    }\n  };\n\n  componentDidMount() {\n    this.fetchDashboardModel();\n  }\n\n  componentDidUpdate() {\n    this.fetchDashboardModel();\n  }\n\n  toggleTranslationDialog = () => {\n    this.setState({\n      translationDialogIsOpen: !this.state.translationDialogIsOpen\n    });\n  };\n  confirmDeleteDialog = () => this.props.deleteAccess && this.props.dashboardId ? <ConfirmDeleteDialog dashboardName={this.props.dashboardName} onDeleteConfirmed={this.onDeleteConfirmed} onContinueEditing={this.onContinueEditing} open={this.state.confirmDeleteDialogOpen} /> : null;\n  translationDialog = () => this.state.dashboardModel && this.state.dashboardModel.id ? <TranslationDialog className=\"translation-dialog\" d2={this.context.d2} open={this.state.translationDialogIsOpen} onRequestClose={this.toggleTranslationDialog} objectToTranslate={this.state.dashboardModel} fieldsToTranslate={['name', 'description']} // TODO handle messages in snackbar\n  onTranslationSaved={this.onTranslationsSaved} onTranslationError={err => console.log('translation update error', err)} /> : null;\n  renderActionButtons = () => {\n    const printPreviewText = this.props.isPrintPreviewView ? i18n.t('Exit Print preview') : i18n.t('Print preview');\n    return <div className={classes.leftControls}>\n                <ButtonStrip>\n                    <Button primary onClick={this.onSave}>\n                        {i18n.t('Save changes')}\n                    </Button>\n                    <Button onClick={this.onPrintPreview}>\n                        {printPreviewText}\n                    </Button>\n\n                    {this.props.dashboardId ? <Button onClick={this.toggleTranslationDialog}>\n                            {i18n.t('Translate')}\n                        </Button> : null}\n                    {this.props.dashboardId && this.props.deleteAccess ? <Button onClick={this.onConfirmDelete}>\n                            {i18n.t('Delete')}\n                        </Button> : null}\n                </ButtonStrip>\n            </div>;\n  };\n\n  render() {\n    if (this.state.redirectUrl) {\n      return <Redirect to={this.state.redirectUrl} />;\n    }\n\n    const {\n      updateAccess\n    } = this.props;\n    const controlBarHeight = getControlBarHeight(MIN_ROW_COUNT);\n    const discardBtnText = updateAccess ? i18n.t('Exit without saving') : i18n.t('Go to dashboards');\n    return <>\n                <ControlBar height={controlBarHeight} editMode={true}>\n                    <div style={buttonBarStyle}>\n                        {updateAccess ? this.renderActionButtons() : null}\n\n                        <div className={classes.rightControls}>\n                            <Button secondary onClick={this.onDiscard}>\n                                {discardBtnText}\n                            </Button>\n                        </div>\n                    </div>\n                </ControlBar>\n                <div className={classes.topMargin} />\n                {this.translationDialog()}\n                {this.confirmDeleteDialog()}\n            </>;\n  }\n\n}\nEditBar.propTypes = {\n  clearPrintDashboard: PropTypes.func,\n  clearPrintPreview: PropTypes.func,\n  dashboardId: PropTypes.string,\n  dashboardName: PropTypes.string,\n  deleteAccess: PropTypes.bool,\n  isPrintPreviewView: PropTypes.bool,\n  showPrintPreview: PropTypes.func,\n  updateAccess: PropTypes.bool,\n  onDelete: PropTypes.func,\n  onDiscardChanges: PropTypes.func,\n  onSave: PropTypes.func,\n  onTranslate: PropTypes.func\n};\nEditBar.contextTypes = {\n  d2: PropTypes.object\n};\n\nconst mapStateToProps = state => {\n  const dashboard = sGetEditDashboardRoot(state);\n  let deleteAccess;\n  let updateAccess;\n\n  if (sGetIsNewDashboard(state)) {\n    deleteAccess = true;\n    updateAccess = true;\n  } else {\n    updateAccess = dashboard.access ? dashboard.access.update : false;\n    deleteAccess = dashboard.access ? dashboard.access.delete : false;\n  }\n\n  return {\n    dashboardId: dashboard.id,\n    dashboardName: dashboard.name,\n    deleteAccess,\n    isPrintPreviewView: sGetIsPrintPreviewView(state),\n    updateAccess\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  clearPrintDashboard: () => dispatch(acClearPrintDashboard()),\n  clearPrintPreview: () => dispatch(acClearPrintPreviewView()),\n  onSave: () => dispatch(tSaveDashboard()).then(id => id),\n  onDelete: id => dispatch(tDeleteDashboard(id)),\n  onDiscardChanges: () => dispatch(acClearEditDashboard()),\n  onTranslate: (id, value) => dispatch(acSetDashboardDisplayName(id, value)),\n  showPrintPreview: () => dispatch(acSetPrintPreviewView())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditBar);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { a4LandscapeWidthPx } from '../ItemGrid/gridUtil';\nimport classes from './styles/PrintInfo.module.css';\n\nconst PrintInfo = ({\n  isLayout\n}) => {\n  const maxWidth = a4LandscapeWidthPx < window.innerWidth ? a4LandscapeWidthPx : window.innerWidth;\n  const infoHeader = isLayout ? i18n.t('dashboard layout') : i18n.t('one item per page');\n  return <div className={classes.infoWrapper}>\n            <p className={classes.infoHeader}>\n                {`${i18n.t('Print Preview')}: ${infoHeader}`}\n            </p>\n            <div style={{\n      maxWidth\n    }}>\n                <p className={classes.info}>\n                    {`${i18n.t('For best print results')}:`}\n                </p>\n                <div className={classes.info}>\n                    <ul className={classes.infoList}>\n                        <li>{i18n.t('Use Chrome or Edge web browser')}</li>\n                        <li>\n                            {i18n.t('Wait for all dashboard items to load before printing')}\n                        </li>\n                        <li>\n                            {i18n.t('Use A4 landscape paper size and default margin settings in the browser print dialog')}\n                        </li>\n                    </ul>\n                </div>\n            </div>\n            <hr className={classes.divider} />\n        </div>;\n};\n\nPrintInfo.propTypes = {\n  isLayout: PropTypes.bool\n};\nexport default PrintInfo;","import React from 'react';\nimport { colors } from '@dhis2/ui';\n\nconst LessHorizontalIcon = () => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill={colors.grey600} viewBox=\"0 0 24 24\">\n        <path d=\"m13.2928932 6.29289322c.3905243-.39052429 1.0236893-.39052429 1.4142136 0 .3604839.36048396.3882135.92771502.0831886 1.32000622l-.0831886.09420734-4.2921068 4.29289322 4.2921068 4.2928932c.3604839.360484.3882135.927715.0831886 1.3200062l-.0831886.0942074c-.360484.3604839-.927715.3882135-1.3200062.0831886l-.0942074-.0831886-4.99999998-5c-.36048396-.360484-.3882135-.927715-.08318861-1.3200062l.08318861-.0942074z\" />\n    </svg>;\n\nexport default LessHorizontalIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Button } from '@dhis2/ui';\nimport { Link } from 'react-router-dom';\nimport LessHorizontalIcon from '../../icons/LessHorizontal';\nimport { a4LandscapeWidthPx } from '../ItemGrid/gridUtil';\nimport classes from './styles/PrintActionsBar.module.css'; // 42px set in the module css file\n\nexport const PRINT_ACTIONS_BAR_HEIGHT = 42;\n\nconst PrintActionsBar = ({\n  id\n}) => {\n  const width = a4LandscapeWidthPx < window.innerWidth ? a4LandscapeWidthPx : window.innerWidth;\n  return <>\n            <div className={classes.container}>\n                <div className={classes.inner} style={{\n        width\n      }}>\n                    <Link className={classes.link} to={`/${id}`}>\n                        <Button>\n                            <LessHorizontalIcon />\n                            {i18n.t('Exit print preview')}\n                        </Button>\n                    </Link>\n                    <Button onClick={window.print}>{i18n.t('Print')}</Button>\n                </div>\n            </div>\n            <div className={classes.topMargin} />\n        </>;\n};\n\nPrintActionsBar.propTypes = {\n  id: PropTypes.string\n};\nexport default PrintActionsBar;","import sortBy from 'lodash/sortBy';\nimport { orArray } from './util';\nimport { itemTypeMap } from './itemTypes';\nexport const getTransformYPx = elStyle => {\n  if (!elStyle || !elStyle.transform) {\n    return null;\n  } // find valid transforms - those with y pixels\n  // the code is expecting the transform prop to\n  // look like:  translate(10px, 300px)\n\n\n  const transformY = elStyle.transform.split(' ')[1]?.match(/(\\d+)px/);\n\n  if (transformY) {\n    return parseInt(transformY[1]);\n  } else {\n    return null;\n  }\n};\nexport const getDomGridItemsSortedByYPos = elements => {\n  const types = Object.keys(itemTypeMap);\n  const elementsWithBoundingRect = orArray(elements).map(el => {\n    const type = Array.from(el.classList).find(className => types.indexOf(className) > -1);\n    const rect = el.getBoundingClientRect();\n    const y = getTransformYPx(el.style) || parseInt(rect.y);\n    return {\n      type,\n      classList: el.classList,\n      bottomY: y + parseInt(rect.height),\n      el\n    };\n  });\n  return sortBy(elementsWithBoundingRect, ['bottomY']);\n};","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport sortBy from 'lodash/sortBy';\nimport ReactGridLayout from 'react-grid-layout';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport cx from 'classnames';\nimport { Item } from '../Item/Item';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport { acUpdatePrintDashboardLayout } from '../../actions/printDashboard';\nimport { sGetSelectedIsLoading } from '../../reducers/selected';\nimport { sGetPrintDashboardRoot, sGetPrintDashboardItems } from '../../reducers/printDashboard';\nimport { sGetIsEditing } from '../../reducers/editDashboard';\nimport { GRID_ROW_HEIGHT, GRID_COMPACT_TYPE, MARGIN, getGridColumns, hasShape, a4LandscapeWidthPx } from './gridUtil';\nimport { getDomGridItemsSortedByYPos, getTransformYPx } from '../../modules/printUtils';\nimport { PRINT_LAYOUT } from '../Dashboard/dashboardModes';\nimport { PAGEBREAK } from '../../modules/itemTypes';\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\nimport './ItemGrid.css'; // this is set in the .dashboard-item-content css\n\nexport const ITEM_CONTENT_PADDING_BOTTOM = 4;\nexport class PrintLayoutItemGrid extends Component {\n  onLayoutChange = newLayout => {\n    this.props.updateDashboardLayout(newLayout);\n  };\n  isFirstPageBreak = item => {\n    if (item.type !== PAGEBREAK) {\n      return false;\n    }\n\n    const pageBreaks = this.props.dashboardItems.filter(i => i.type === PAGEBREAK);\n    const sortedPageBreaks = sortBy(pageBreaks, ['y']);\n    return item.y === sortedPageBreaks[0].y;\n  };\n  getItemComponent = item => {\n    // the first-page-break class is used in Edit print preview\n    const itemClassNames = cx('print', 'layout', `${item.type}`, {\n      'first-page-break': this.props.isEditing && this.isFirstPageBreak(item),\n      shortened: !!item.shortened\n    });\n    return <div key={item.i} className={itemClassNames}>\n                <Item item={item} dashboardMode={PRINT_LAYOUT} />\n            </div>;\n  };\n  getItemComponents = items => items.map(item => this.getItemComponent(item));\n\n  hideExtraPageBreaks() {\n    const sortedElements = getDomGridItemsSortedByYPos(Array.from(document.querySelectorAll('.react-grid-item')));\n    let pageBreakBottom = 0;\n    let lastItemBottom = 0;\n    let foundNonPageBreak = false;\n\n    for (let i = sortedElements.length - 1; i >= 0; --i) {\n      const item = sortedElements[i];\n\n      if (item.type === PAGEBREAK) {\n        if (!foundNonPageBreak) {\n          item.el.classList.add('removed');\n        } else {\n          pageBreakBottom = item.bottomY;\n          break;\n        }\n      } else {\n        foundNonPageBreak = true;\n        const thisItemBottom = item.bottomY;\n\n        if (thisItemBottom > lastItemBottom) {\n          lastItemBottom = thisItemBottom;\n        }\n      }\n    }\n\n    const pageHeight = 720;\n    const gridElement = document.querySelector('.react-grid-layout'); // the last page break is before the last item(s) so\n    // maxHeight is one page beyond the last page break\n\n    const maxHeight = pageBreakBottom + pageHeight;\n\n    if (gridElement) {\n      gridElement.style.height = `${maxHeight}px`;\n    }\n\n    if (this.props.isEditing) {\n      //scroll to below the title page - which is middle of the first pagebreak\n      const firstBreak = document.querySelector('.first-page-break');\n\n      if (firstBreak && firstBreak.style && firstBreak.style.transform) {\n        const yPos = getTransformYPx(firstBreak.style);\n        const scrollArea = document.querySelector('.scroll-area');\n        scrollArea && scrollArea.scroll(0, yPos + 50);\n      }\n    }\n  }\n\n  componentDidMount() {\n    this.hideExtraPageBreaks();\n  }\n\n  componentDidUpdate() {\n    this.hideExtraPageBreaks();\n  }\n\n  render() {\n    const {\n      isLoading,\n      dashboardItems\n    } = this.props;\n\n    if (!isLoading && !dashboardItems.length) {\n      return <NoContentMessage text={i18n.t('There are no items on this dashboard')} />;\n    }\n\n    const width = a4LandscapeWidthPx < window.innerWidth ? a4LandscapeWidthPx : window.innerWidth;\n    return <div className=\"grid-wrapper\">\n                {isLoading ? <Layer translucent>\n                        <CenteredContent>\n                            <CircularLoader />\n                        </CenteredContent>\n                    </Layer> : null}\n                <ReactGridLayout onLayoutChange={this.onLayoutChange} className=\"layout\" layout={dashboardItems} margin={MARGIN} cols={getGridColumns()} rowHeight={GRID_ROW_HEIGHT} width={width} compactType={GRID_COMPACT_TYPE} isDraggable={false} isResizable={false} draggableCancel=\"input,textarea\">\n                    {this.getItemComponents(dashboardItems)}\n                </ReactGridLayout>\n            </div>;\n  }\n\n}\nPrintLayoutItemGrid.propTypes = {\n  dashboardItems: PropTypes.array,\n  isEditing: PropTypes.bool,\n  isLoading: PropTypes.bool,\n  updateDashboardLayout: PropTypes.func\n};\nPrintLayoutItemGrid.defaultProps = {\n  dashboardItems: []\n};\n\nconst mapStateToProps = state => {\n  const selectedDashboard = sGetPrintDashboardRoot(state);\n  return {\n    isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n    dashboardItems: sGetPrintDashboardItems(state).filter(hasShape),\n    isEditing: sGetIsEditing(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  updateDashboardLayout: acUpdatePrintDashboardLayout\n})(PrintLayoutItemGrid);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { spacers } from '@dhis2/ui';\nimport cx from 'classnames';\nimport PrintInfo from './PrintInfo';\nimport PrintActionsBar from './PrintActionsBar';\nimport PrintLayoutItemGrid from '../ItemGrid/PrintLayoutItemGrid';\nimport { acSetPrintDashboard, acAddPrintDashboardItem, acUpdatePrintDashboardItem } from '../../actions/printDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { sGetWindowHeight } from '../../reducers/windowHeight';\nimport { sGetEditDashboardRoot, sGetEditDashboardItems } from '../../reducers/editDashboard';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport { PAGEBREAK, PRINT_TITLE_PAGE } from '../../modules/itemTypes';\nimport { a4LandscapeWidthPx, MAX_ITEM_GRID_HEIGHT } from '../ItemGrid/gridUtil';\nimport { getControlBarHeight, HEADERBAR_HEIGHT } from '../ControlBar/controlBarDimensions';\nimport { PRINT_ACTIONS_BAR_HEIGHT } from './PrintActionsBar';\nimport { DRAG_HANDLE_HEIGHT } from '../ControlBar/ControlBar';\nimport classes from './styles/PrintLayoutDashboard.module.css';\nimport './styles/print.css';\nimport './styles/print-layout.css';\nconst EDIT_BAR_HEIGHT = getControlBarHeight(1) + DRAG_HANDLE_HEIGHT;\n\nconst isLeapPage = n => {\n  // pages 5,9,13,17,21,25,29... are leap pages\n  let x = 0;\n  const startPage = 1;\n\n  const getMultiple = factor => startPage + 4 * factor;\n\n  let multiple = getMultiple(0);\n  let isLeapPage = false;\n\n  while (multiple < n) {\n    multiple = getMultiple(x);\n    ++x;\n\n    if (multiple === n) {\n      isLeapPage = true;\n      break;\n    }\n  }\n\n  return isLeapPage;\n};\n\nconst addPageBreaks = ({\n  items,\n  addDashboardItem\n}) => {\n  // add enough page breaks so that each item could\n  // be put on its own page. Due to the react-grid-layout\n  // unit system, we have to estimate roughly the size of each\n  // page. At regular intervals add a unit, like a leap year\n  let yPos = 0;\n  const yPosList = [];\n\n  for (let pageNum = 1; pageNum <= items.length; ++pageNum) {\n    if (pageNum === 1) {\n      yPos += 35;\n    } else if (isLeapPage(pageNum)) {\n      yPos += 40;\n    } else {\n      yPos += 39;\n    }\n\n    yPosList.push(yPos);\n  }\n\n  for (let i = 0; i < items.length; ++i) {\n    addDashboardItem({\n      type: PAGEBREAK,\n      yPos: yPosList[i]\n    });\n  }\n};\n\nexport class PrintLayoutDashboard extends Component {\n  state = {\n    initialized: false\n  };\n  initPrintLayoutDashboard = () => {\n    if (this.props.dashboard) {\n      this.setState({\n        initialized: true\n      });\n      this.props.setPrintDashboard(this.props.dashboard, this.props.items); // If any items are taller than one page, reduce it to one\n      // page (react-grid-layout units)\n\n      this.props.items.forEach(item => {\n        if (item.h > MAX_ITEM_GRID_HEIGHT) {\n          item.shortened = true;\n          this.props.updateDashboardItem(Object.assign({}, item, {\n            h: MAX_ITEM_GRID_HEIGHT\n          }));\n        }\n      });\n      addPageBreaks(this.props);\n      this.props.addDashboardItem({\n        type: PRINT_TITLE_PAGE,\n        isOneItemPerPage: false\n      });\n    }\n  };\n\n  componentDidMount() {\n    this.initPrintLayoutDashboard();\n  }\n\n  componentDidUpdate() {\n    if (!this.state.initialized) {\n      this.initPrintLayoutDashboard();\n    }\n  }\n\n  getWrapperStyle = () => {\n    return this.props.fromEdit ? {\n      paddingTop: spacers.dp24,\n      height: this.props.windowHeight - EDIT_BAR_HEIGHT - HEADERBAR_HEIGHT\n    } : {\n      height: this.props.windowHeight - PRINT_ACTIONS_BAR_HEIGHT\n    };\n  };\n\n  render() {\n    return <>\n                {!this.props.fromEdit && <PrintActionsBar id={this.props.dashboard.id} />}\n                <div className={cx(classes.wrapper, 'scroll-area')} style={this.getWrapperStyle()}>\n                    {!this.props.fromEdit && <PrintInfo isLayout={true} />}\n                    <div className={classes.pageOuter} style={{\n          width: a4LandscapeWidthPx\n        }}>\n                        <PrintLayoutItemGrid />\n                    </div>\n                </div>\n            </>;\n  }\n\n}\nPrintLayoutDashboard.propTypes = {\n  addDashboardItem: PropTypes.func,\n  dashboard: PropTypes.object,\n  fromEdit: PropTypes.bool,\n  items: PropTypes.array,\n  setPrintDashboard: PropTypes.func,\n  updateDashboardItem: PropTypes.func,\n  windowHeight: PropTypes.number\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const id = sGetSelectedId(state);\n\n  if (ownProps.fromEdit) {\n    const dashboard = sGetEditDashboardRoot(state);\n    return {\n      dashboard,\n      id,\n      items: sGetEditDashboardItems(state),\n      windowHeight: sGetWindowHeight(state)\n    };\n  }\n\n  const dashboard = id ? sGetDashboardById(state, id) : null;\n  return {\n    dashboard,\n    id,\n    items: sGetDashboardItems(state),\n    windowHeight: sGetWindowHeight(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setPrintDashboard: acSetPrintDashboard,\n  addDashboardItem: acAddPrintDashboardItem,\n  updateDashboardItem: acUpdatePrintDashboardItem\n})(PrintLayoutDashboard);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport TitleBar from '../TitleBar/TitleBar';\nimport ItemGrid from '../ItemGrid/ItemGrid';\nimport EditBar from '../ControlBar/EditBar';\nimport LayoutPrintPreview from './PrintLayoutDashboard';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport { acSetEditDashboard } from '../../actions/editDashboard';\nimport { sGetWindowHeight } from '../../reducers/windowHeight';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport { sGetIsPrintPreviewView } from '../../reducers/editDashboard';\nimport { getControlBarHeight, HEADERBAR_HEIGHT } from '../ControlBar/controlBarDimensions';\nexport class EditDashboard extends Component {\n  state = {\n    initialized: false\n  };\n  initEditDashboard = () => {\n    if (this.props.dashboard) {\n      this.setState({\n        initialized: true\n      });\n      this.props.setEditDashboard(this.props.dashboard, this.props.items);\n    }\n  };\n\n  componentDidMount() {\n    this.initEditDashboard();\n  }\n\n  componentDidUpdate() {\n    if (!this.state.initialized) {\n      this.initEditDashboard();\n    }\n  }\n\n  renderGrid = () => {\n    if (this.props.isPrintPreviewView) {\n      return <LayoutPrintPreview fromEdit={true} />;\n    }\n\n    const height = this.props.windowHeight - HEADERBAR_HEIGHT - getControlBarHeight(1);\n    return <div className=\"dashboard-wrapper\" style={{\n      height\n    }}>\n                <TitleBar edit={true} />\n                <ItemGrid edit={true} />\n            </div>;\n  };\n\n  render() {\n    return <>\n                <EditBar />\n                {this.props.updateAccess ? this.renderGrid() : <NoContentMessage text={i18n.t('No access')} />}\n            </>;\n  }\n\n}\nEditDashboard.propTypes = {\n  dashboard: PropTypes.object,\n  isPrintPreviewView: PropTypes.bool,\n  items: PropTypes.array,\n  setEditDashboard: PropTypes.func,\n  updateAccess: PropTypes.bool,\n  windowHeight: PropTypes.number\n};\n\nconst mapStateToProps = state => {\n  const id = sGetSelectedId(state);\n  const dashboard = id ? sGetDashboardById(state, id) : null;\n  const updateAccess = dashboard && dashboard.access ? dashboard.access.update : false;\n  return {\n    dashboard,\n    updateAccess,\n    items: sGetDashboardItems(state),\n    isPrintPreviewView: sGetIsPrintPreviewView(state),\n    windowHeight: sGetWindowHeight(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setEditDashboard: acSetEditDashboard\n})(EditDashboard);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport EditBar from '../ControlBar/EditBar';\nimport TitleBar from '../TitleBar/TitleBar';\nimport ItemGrid from '../ItemGrid/ItemGrid';\nimport LayoutPrintPreview from './PrintLayoutDashboard';\nimport { acSetEditNewDashboard } from '../../actions/editDashboard';\nimport { sGetIsPrintPreviewView } from '../../reducers/editDashboard';\nimport { sGetWindowHeight } from '../../reducers/windowHeight';\nimport { getControlBarHeight, HEADERBAR_HEIGHT } from '../ControlBar/controlBarDimensions';\n\nclass NewDashboard extends Component {\n  componentDidMount() {\n    this.props.setNewDashboard();\n  }\n\n  render() {\n    const height = this.props.windowHeight - HEADERBAR_HEIGHT - getControlBarHeight(1);\n    return <>\n                <EditBar />\n                {this.props.isPrintPreviewView ? <LayoutPrintPreview fromEdit={true} /> : <div className=\"dashboard-wrapper\" style={{\n        height\n      }}>\n                        <TitleBar edit={true} />\n                        <ItemGrid edit={true} />\n                    </div>}\n            </>;\n  }\n\n}\n\nNewDashboard.propTypes = {\n  isPrintPreviewView: PropTypes.bool,\n  setNewDashboard: PropTypes.func,\n  windowHeight: PropTypes.number\n};\n\nconst mapStateToProps = state => ({\n  isPrintPreviewView: sGetIsPrintPreviewView(state),\n  windowHeight: sGetWindowHeight(state)\n});\n\nexport default connect(mapStateToProps, {\n  setNewDashboard: acSetEditNewDashboard\n})(NewDashboard);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ReactGridLayout from 'react-grid-layout';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport cx from 'classnames';\nimport { Item } from '../Item/Item';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport { PRINT } from '../Dashboard/dashboardModes';\nimport { sGetSelectedIsLoading } from '../../reducers/selected';\nimport { sGetPrintDashboardRoot, sGetPrintDashboardItems } from '../../reducers/printDashboard';\nimport { GRID_ROW_HEIGHT, GRID_COMPACT_TYPE, MARGIN, getGridColumns, hasShape, a4LandscapeWidthPx } from './gridUtil';\nimport { orArray } from '../../modules/util';\nimport 'react-grid-layout/css/styles.css';\nimport './ItemGrid.css';\nexport class PrintItemGrid extends Component {\n  getItemComponent = item => <div key={item.i} className={cx(item.type, 'print', 'oipp')}>\n            <Item item={item} dashboardMode={PRINT} />\n        </div>;\n  getItemComponents = items => items.map(item => this.getItemComponent(item));\n\n  render() {\n    const {\n      isLoading,\n      dashboardItems\n    } = this.props;\n\n    if (!isLoading && !dashboardItems.length) {\n      return <NoContentMessage text={i18n.t('There are no items on this dashboard')} />;\n    }\n\n    const width = a4LandscapeWidthPx < window.innerWidth ? a4LandscapeWidthPx : window.innerWidth;\n    return <>\n                {isLoading ? <Layer translucent>\n                        <CenteredContent>\n                            <CircularLoader />\n                        </CenteredContent>\n                    </Layer> : null}\n                <ReactGridLayout className=\"layout print\" layout={dashboardItems} margin={MARGIN} cols={getGridColumns()} rowHeight={GRID_ROW_HEIGHT} width={width} compactType={GRID_COMPACT_TYPE} isDraggable={false} isResizable={false} draggableCancel=\"input,textarea\">\n                    {this.getItemComponents(dashboardItems)}\n                </ReactGridLayout>\n            </>;\n  }\n\n}\nPrintItemGrid.propTypes = {\n  dashboardItems: PropTypes.array,\n  isLoading: PropTypes.bool\n};\nPrintItemGrid.defaultProps = {\n  dashboardItems: []\n};\n\nconst mapStateToProps = state => {\n  const selectedDashboard = sGetPrintDashboardRoot(state);\n  return {\n    isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n    dashboardItems: orArray(sGetPrintDashboardItems(state)).filter(hasShape)\n  };\n};\n\nexport default connect(mapStateToProps)(PrintItemGrid);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport sortBy from 'lodash/sortBy';\nimport PrintInfo from './PrintInfo';\nimport PrintActionsBar from './PrintActionsBar';\nimport PrintItemGrid from '../ItemGrid/PrintItemGrid';\nimport { acSetPrintDashboard, acAddPrintDashboardItem, acRemovePrintDashboardItem, acUpdatePrintDashboardItem } from '../../actions/printDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { sGetWindowHeight } from '../../reducers/windowHeight';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport { PAGEBREAK, PRINT_TITLE_PAGE, SPACER } from '../../modules/itemTypes';\nimport { a4LandscapeWidthPx, MAX_ITEM_GRID_HEIGHT_OIPP, MAX_ITEM_GRID_WIDTH_OIPP } from '../ItemGrid/gridUtil';\nimport { PRINT_ACTIONS_BAR_HEIGHT } from './PrintActionsBar';\nimport classes from './styles/PrintDashboard.module.css';\nimport './styles/print.css';\nimport './styles/print-oipp.css';\nexport class PrintDashboard extends Component {\n  state = {\n    initialized: false\n  };\n  initPrintDashboard = () => {\n    if (this.props.dashboard) {\n      this.setState({\n        initialized: true\n      }); //sort the items by Y pos so they print in order of top to bottom\n\n      const sortedItems = sortBy(this.props.items, ['y', 'x']);\n      this.props.setPrintDashboard(this.props.dashboard, sortedItems); // remove spacers - don't want empty pages\n\n      let spacerCount = 0;\n      this.props.items.forEach(item => {\n        if (item.type === SPACER) {\n          spacerCount += 1;\n          this.props.removeDashboardItem(item.id);\n        }\n      }); // Resize the items to the full page size\n\n      this.props.items.forEach(item => {\n        this.props.updateDashboardItem(Object.assign({}, item, {\n          w: MAX_ITEM_GRID_WIDTH_OIPP,\n          h: MAX_ITEM_GRID_HEIGHT_OIPP\n        }));\n      }); // insert page breaks into the document flow to create the \"pages\"\n      // when previewing the print\n\n      for (let i = 0; i < (this.props.items.length - spacerCount) * 2; i += 2) {\n        this.props.addDashboardItem({\n          type: PAGEBREAK,\n          position: i,\n          isStatic: false\n        });\n      }\n\n      this.props.addDashboardItem({\n        type: PRINT_TITLE_PAGE,\n        isOneItemPerPage: true\n      });\n    }\n  };\n\n  componentDidMount() {\n    this.initPrintDashboard();\n  }\n\n  componentDidUpdate() {\n    if (!this.state.initialized) {\n      this.initPrintDashboard();\n    }\n  }\n\n  render() {\n    const height = this.props.windowHeight - PRINT_ACTIONS_BAR_HEIGHT;\n    return <>\n                <PrintActionsBar id={this.props.dashboard.id} />\n                <div className={classes.wrapper} style={{\n        height\n      }}>\n                    <PrintInfo isLayout={false} />\n                    <div className={classes.pageOuter} style={{\n          width: a4LandscapeWidthPx\n        }}>\n                        <PrintItemGrid />\n                    </div>\n                </div>\n            </>;\n  }\n\n}\nPrintDashboard.propTypes = {\n  addDashboardItem: PropTypes.func,\n  dashboard: PropTypes.object,\n  items: PropTypes.array,\n  removeDashboardItem: PropTypes.func,\n  setPrintDashboard: PropTypes.func,\n  updateDashboardItem: PropTypes.func,\n  windowHeight: PropTypes.number\n};\n\nconst mapStateToProps = state => {\n  const id = sGetSelectedId(state);\n  const dashboard = id ? sGetDashboardById(state, id) : null;\n  return {\n    dashboard,\n    id,\n    items: sGetDashboardItems(state),\n    windowHeight: sGetWindowHeight(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setPrintDashboard: acSetPrintDashboard,\n  addDashboardItem: acAddPrintDashboardItem,\n  removeDashboardItem: acRemovePrintDashboardItem,\n  updateDashboardItem: acUpdatePrintDashboardItem\n})(PrintDashboard);","import { SET_WINDOW_HEIGHT } from '../reducers/windowHeight';\nexport const acSetWindowHeight = value => ({\n  type: SET_WINDOW_HEIGHT,\n  value\n});","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport isEmpty from 'lodash/isEmpty';\nimport i18n from '@dhis2/d2-i18n';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport debounce from 'lodash/debounce';\nimport DashboardsBar from '../ControlBar/DashboardsBar';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport ViewDashboard from './ViewDashboard';\nimport EditDashboard from './EditDashboard';\nimport NewDashboard from './NewDashboard';\nimport PrintDashboard from './PrintDashboard';\nimport PrintLayoutDashboard from './PrintLayoutDashboard';\nimport { tSelectDashboard } from '../../actions/dashboards';\nimport { acSetWindowHeight } from '../../actions/windowHeight';\nimport { sDashboardsIsFetching, sGetAllDashboards } from '../../reducers/dashboards';\nimport { sGetSelectedId, NON_EXISTING_DASHBOARD_ID } from '../../reducers/selected';\nimport { EDIT, NEW, VIEW, PRINT, PRINT_LAYOUT, isPrintMode } from './dashboardModes';\n\nconst setHeaderbarVisibility = mode => {\n  const header = document.getElementsByTagName('header')[0];\n\n  if (isPrintMode(mode)) {\n    header.classList.add('hidden');\n  } else {\n    header.classList.remove('hidden');\n  }\n};\n\nconst dashboardMap = {\n  [VIEW]: <ViewDashboard />,\n  [EDIT]: <EditDashboard />,\n  [NEW]: <NewDashboard />,\n  [PRINT]: <PrintDashboard />,\n  [PRINT_LAYOUT]: <PrintLayoutDashboard />\n};\nexport const Dashboard = ({\n  id,\n  mode,\n  dashboardsLoaded,\n  dashboardsIsEmpty,\n  routeId,\n  selectDashboard,\n  setWindowHeight\n}) => {\n  useEffect(() => {\n    setHeaderbarVisibility(mode);\n  }, [mode]);\n  useEffect(() => {\n    if (dashboardsLoaded && !dashboardsIsEmpty) {\n      selectDashboard(routeId);\n    }\n  }, [dashboardsLoaded, dashboardsIsEmpty, routeId]);\n  useEffect(() => {\n    const onResize = debounce(() => setWindowHeight(window.innerHeight), 300);\n    window.addEventListener('resize', onResize);\n    return () => {\n      window.removeEventListener('resize', onResize);\n    };\n  }, []);\n\n  if (!dashboardsLoaded) {\n    return <Layer translucent>\n                <CenteredContent>\n                    <CircularLoader />\n                </CenteredContent>\n            </Layer>;\n  }\n\n  if (mode === NEW) {\n    return dashboardMap[mode];\n  }\n\n  if (dashboardsIsEmpty) {\n    return <>\n                <DashboardsBar />\n                <DashboardVerticalOffset />\n                <NoContentMessage text={i18n.t('No dashboards found. Use the + button to create a new dashboard.')} />\n            </>;\n  }\n\n  if (id === NON_EXISTING_DASHBOARD_ID) {\n    return <>\n                <DashboardsBar />\n                <DashboardVerticalOffset />\n                <NoContentMessage text={i18n.t('Requested dashboard not found')} />\n            </>;\n  }\n\n  if (id === null) {\n    return <Layer translucent>\n                <CenteredContent>\n                    <CircularLoader />\n                </CenteredContent>\n            </Layer>;\n  }\n\n  return dashboardMap[mode];\n};\nDashboard.propTypes = {\n  dashboardsIsEmpty: PropTypes.bool,\n  dashboardsLoaded: PropTypes.bool,\n  id: PropTypes.string,\n  match: PropTypes.object,\n  // provided by the react-router-dom\n  mode: PropTypes.string,\n  routeId: PropTypes.string,\n  selectDashboard: PropTypes.func,\n  setWindowHeight: PropTypes.func\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const dashboards = sGetAllDashboards(state);\n  return {\n    dashboardsIsEmpty: isEmpty(dashboards),\n    dashboardsLoaded: !sDashboardsIsFetching(state),\n    id: sGetSelectedId(state),\n    routeId: ownProps.match?.params?.dashboardId || null\n  };\n};\n\nexport default connect(mapStateToProps, {\n  selectDashboard: tSelectDashboard,\n  setWindowHeight: acSetWindowHeight\n})(Dashboard);","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { CssVariables } from '@dhis2/ui';\nimport { EDIT, VIEW, NEW, PRINT, PRINT_LAYOUT } from './Dashboard/dashboardModes';\nimport { acReceivedUser } from '../actions/user';\nimport { tFetchDashboards } from '../actions/dashboards';\nimport { tSetControlBarRows } from '../actions/controlBar';\nimport { tSetShowDescription } from '../actions/selected';\nimport { tSetDimensions } from '../actions/dimensions';\nimport Dashboard from './Dashboard/Dashboard';\nimport SnackbarMessage from './SnackbarMessage/SnackbarMessage';\nimport './App.css';\nexport class App extends Component {\n  componentDidMount() {\n    this.props.setCurrentUser(this.props.d2.currentUser);\n    this.props.fetchDashboards();\n    this.props.setControlBarRows();\n    this.props.setShowDescription();\n    this.props.setDimensions(this.props.d2);\n  }\n\n  getChildContext() {\n    return {\n      baseUrl: this.props.baseUrl,\n      i18n,\n      d2: this.props.d2\n    };\n  }\n\n  render() {\n    return <>\n                <CssVariables colors spacers />\n                <Router>\n                    <Switch>\n                        <Route exact path=\"/\" render={props => <Dashboard {...props} mode={VIEW} />} />\n                        <Route exact path=\"/new\" render={props => <Dashboard {...props} mode={NEW} />} />\n                        <Route exact path=\"/:dashboardId\" render={props => <Dashboard {...props} mode={VIEW} />} />\n                        <Route exact path=\"/:dashboardId/edit\" render={props => <Dashboard {...props} mode={EDIT} />} />\n                        <Route exact path=\"/:dashboardId/printoipp\" render={props => <Dashboard {...props} mode={PRINT} />} />\n                        <Route exact path=\"/:dashboardId/printlayout\" render={props => <Dashboard {...props} mode={PRINT_LAYOUT} />} />\n                    </Switch>\n                </Router>\n                <SnackbarMessage />\n            </>;\n  }\n\n}\nApp.propTypes = {\n  fetchDashboards: PropTypes.func.isRequired,\n  setControlBarRows: PropTypes.func.isRequired,\n  setCurrentUser: PropTypes.func.isRequired,\n  setDimensions: PropTypes.func.isRequired,\n  setShowDescription: PropTypes.func.isRequired,\n  baseUrl: PropTypes.string,\n  d2: PropTypes.object\n};\nApp.childContextTypes = {\n  baseUrl: PropTypes.string,\n  i18n: PropTypes.object,\n  d2: PropTypes.object\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchDashboards: () => dispatch(tFetchDashboards()),\n    setControlBarRows: () => dispatch(tSetControlBarRows()),\n    setCurrentUser: currentUser => dispatch(acReceivedUser(currentUser)),\n    setDimensions: d2 => dispatch(tSetDimensions(d2)),\n    setShowDescription: () => dispatch(tSetShowDescription())\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(App);","import { RECEIVED_USER } from '../reducers/user';\nexport const acReceivedUser = value => ({\n  type: RECEIVED_USER,\n  value\n});","/** @module reducers/selected */\nimport { validateReducer } from '../modules/util';\nexport const SET_STYLE = 'SET_STYLE';\nexport const DEFAULT_STATE_STYLE = 'LIST';\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\n\nconst style = (state = DEFAULT_STATE_STYLE, action) => {\n  switch (action.type) {\n    case SET_STYLE:\n      return validateReducer(action.value, DEFAULT_STATE_STYLE);\n\n    default:\n      return state;\n  }\n};\n\nexport default style;\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\n\nexport const sGetStyleRoot = state => state.style;","import { combineReducers } from 'redux';\nimport arraySort from 'd2-utilizr/lib/arraySort';\nimport dashboards, { sGetDashboardsRoot } from './dashboards';\nimport selected from './selected';\nimport dashboardsFilter, { ownerData, sGetFilterName, sGetFilterOrder, sGetFilterOwner } from './dashboardsFilter';\nimport controlBar from './controlBar';\nimport visualizations from './visualizations';\nimport editDashboard from './editDashboard';\nimport printDashboard from './printDashboard';\nimport messages from './messages';\nimport user from './user';\nimport snackbar from './snackbar';\nimport itemFilters from './itemFilters';\nimport style from './style';\nimport dimensions from './dimensions';\nimport settings from './settings';\nimport activeModalDimension from './activeModalDimension';\nimport windowHeight from './windowHeight';\nconst USER = 'system'; // Reducers\n\nexport default combineReducers({\n  dashboards,\n  selected,\n  dashboardsFilter,\n  controlBar,\n  visualizations,\n  messages,\n  user,\n  editDashboard,\n  printDashboard,\n  itemFilters,\n  style,\n  snackbar,\n  dimensions,\n  settings,\n  activeModalDimension,\n  windowHeight\n}); // Map constants to data\n\nconst mapConstToData = {\n  NAME: 'name',\n  ITEMS: 'numberOfItems',\n  CREATED: 'created',\n  OWNER: 'owner'\n}; // Selectors\n// Filter dashboards by name\n\nexport const sFilterDashboardsByName = (dashboards, filter) => dashboards.filter(d => d.displayName.toLowerCase().includes(filter.toLowerCase())); // Filter dashboards by owner, TODO FIXME\n\nexport const sFilterDashboardsByOwner = (dashboards, filter) => {\n  const ME = ownerData[1]; // TODO\n\n  const OTHERS = ownerData[2]; // TODO\n\n  switch (filter) {\n    case ME:\n      return dashboards.filter(d => d.owner === USER);\n\n    case OTHERS:\n      return dashboards.filter(d => d.owner !== USER);\n\n    default:\n      return dashboards;\n  }\n}; // Filter dashboards by order\n\nexport const sFilterDashboardsByOrder = (dashboards, filter) => {\n  const filterValues = filter.split(':');\n  const key = filterValues[0];\n  const direction = filterValues[1];\n  return arraySort(dashboards, direction, mapConstToData[key]);\n}; // Selectors dependency level 2\n// Get filtered dashboards\n\nexport const sGetFilteredDashboards = state => {\n  const dashboards = sGetDashboardsRoot(state);\n  const nameFilter = sGetFilterName(state);\n  const ownerFilter = sGetFilterOwner(state);\n  const orderFilter = sGetFilterOrder(state);\n  return sFilterDashboardsByOrder(sFilterDashboardsByName(sFilterDashboardsByOwner(dashboards, ownerFilter), nameFilter), orderFilter);\n};","import { createStore, applyMiddleware, compose } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport reducer from './reducers';\n\nconst configureStore = () => {\n  const middleware = [thunk]; // Enable Redux devtools if extension is installed instead of redux-logger\n\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n  if (!window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ && process.env.NODE_ENV !== 'production') {\n    middleware.push(createLogger());\n  }\n\n  return createStore(reducer, composeEnhancers(applyMiddleware(...middleware)));\n};\n\nexport default configureStore;","//------------------------------------------------------------------------------\n// <auto-generated>\n// This code was generated by d2-i18n-generate.\n//\n// Changes to this file may cause incorrect behavior and will be lost if\n// the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\nimport i18n from '@dhis2/d2-i18n';\nimport arTranslations from './ar/translations.json';\nimport ar_IQTranslations from './ar_IQ/translations.json';\nimport ckbTranslations from './ckb/translations.json';\nimport csTranslations from './cs/translations.json';\nimport daTranslations from './da/translations.json';\nimport enTranslations from './en/translations.json';\nimport esTranslations from './es/translations.json';\nimport frTranslations from './fr/translations.json';\nimport idTranslations from './id/translations.json';\nimport kmTranslations from './km/translations.json';\nimport loTranslations from './lo/translations.json';\nimport myTranslations from './my/translations.json';\nimport nbTranslations from './nb/translations.json';\nimport prsTranslations from './prs/translations.json';\nimport psTranslations from './ps/translations.json';\nimport ptTranslations from './pt/translations.json';\nimport pt_BRTranslations from './pt_BR/translations.json';\nimport ruTranslations from './ru/translations.json';\nimport svTranslations from './sv/translations.json';\nimport tetTranslations from './tet/translations.json';\nimport tgTranslations from './tg/translations.json';\nimport ukTranslations from './uk/translations.json';\nimport urTranslations from './ur/translations.json';\nimport uzTranslations from './uz/translations.json';\nimport uz_LatnTranslations from './uz_Latn/translations.json';\nimport viTranslations from './vi/translations.json';\nimport zhTranslations from './zh/translations.json';\nimport zh_CNTranslations from './zh_CN/translations.json';\nconst namespace = 'default';\ni18n.addResources('ar', namespace, arTranslations);\ni18n.addResources('ar_IQ', namespace, ar_IQTranslations);\ni18n.addResources('ckb', namespace, ckbTranslations);\ni18n.addResources('cs', namespace, csTranslations);\ni18n.addResources('da', namespace, daTranslations);\ni18n.addResources('en', namespace, enTranslations);\ni18n.addResources('es', namespace, esTranslations);\ni18n.addResources('fr', namespace, frTranslations);\ni18n.addResources('id', namespace, idTranslations);\ni18n.addResources('km', namespace, kmTranslations);\ni18n.addResources('lo', namespace, loTranslations);\ni18n.addResources('my', namespace, myTranslations);\ni18n.addResources('nb', namespace, nbTranslations);\ni18n.addResources('prs', namespace, prsTranslations);\ni18n.addResources('ps', namespace, psTranslations);\ni18n.addResources('pt', namespace, ptTranslations);\ni18n.addResources('pt_BR', namespace, pt_BRTranslations);\ni18n.addResources('ru', namespace, ruTranslations);\ni18n.addResources('sv', namespace, svTranslations);\ni18n.addResources('tet', namespace, tetTranslations);\ni18n.addResources('tg', namespace, tgTranslations);\ni18n.addResources('uk', namespace, ukTranslations);\ni18n.addResources('ur', namespace, urTranslations);\ni18n.addResources('uz', namespace, uzTranslations);\ni18n.addResources('uz_Latn', namespace, uz_LatnTranslations);\ni18n.addResources('vi', namespace, viTranslations);\ni18n.addResources('zh', namespace, zhTranslations);\ni18n.addResources('zh_CN', namespace, zh_CNTranslations);\nexport default i18n;","import React from 'react';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport dhis2theme from '@dhis2/d2-ui-core/theme/mui3.theme';\nimport { Provider as ReduxProvider } from 'react-redux';\nimport { D2Shim } from '@dhis2/app-runtime-adapter-d2';\nimport App from './components/App';\nimport configureStore from './configureStore';\nimport './AppWrapper.css';\nimport './locales';\n\nconst muiTheme = () => createMuiTheme(dhis2theme);\n\nconst d2Config = {\n  schemas: ['chart', 'map', 'report', 'reportTable', 'eventChart', 'eventReport', 'dashboard', 'organisationUnit', 'userGroup']\n}; // TODO: ER and EV plugins require the auth header in development mode.\n// Remove this when these plugins are rewritten\n\nconst authorization = process.env.REACT_APP_DHIS2_AUTHORIZATION || null;\n\nif (authorization) {\n  d2Config.headers = {\n    Authorization: authorization\n  };\n}\n\nconst AppWrapper = () => {\n  return <ReduxProvider store={configureStore()}>\n            <MuiThemeProvider theme={muiTheme()}>\n                <D2Shim d2Config={d2Config} i18nRoot=\"./i18n\">\n                    {({\n          d2\n        }) => {\n          if (!d2) {\n            // TODO: Handle errors in d2 initialization\n            return null;\n          }\n\n          return <App d2={d2} />;\n        }}\n                </D2Shim>\n            </MuiThemeProvider>\n        </ReduxProvider>;\n};\n\nexport default AppWrapper;","import isObject from 'lodash/isObject'; // validation\n\nexport function orNull(param) {\n  return param === undefined ? null : param;\n}\nexport function orArray(param) {\n  return Array.isArray(param) ? param : [];\n}\nexport function orObject(param) {\n  return isObject(param) ? param : {};\n} // array\n\nexport function arrayGetById(array, id) {\n  return array.find(item => item.id === id);\n} // object\n\nexport function arrayToIdMap(array) {\n  return array.reduce((obj, item) => {\n    obj[item.id] = item;\n    return obj;\n  }, {});\n} // date\n\nexport function getDate() {\n  const y = Math.floor(Math.random() * 3) + 2015;\n  const M = Math.floor(Math.random() * 12) + 1;\n  const d = Math.floor(Math.random() * 28) + 1; // const h = Math.floor(Math.random() * 23) + 1;\n  // const m = Math.floor(Math.random() * 59) + 1;\n  // const s = Math.floor(Math.random() * 59) + 1;\n\n  return new Date(`${y}-${M}-${d}`).toJSON().replace('T', ' ').substr(0, 10);\n}\nexport const formatDate = (value, uiLocale) => {\n  if (typeof global.Intl !== 'undefined' && Intl.DateTimeFormat) {\n    const locale = uiLocale || 'en';\n    return new Intl.DateTimeFormat(locale, {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    }).format(new Date(value));\n  }\n\n  return value.substr(0, 19).replace('T', ' ');\n};\n/**\n * Sorts an array of objects based on provided date property\n *\n * @param {Array} items Array of objects\n * @param {String} dateProp Name of the date property to be used for sorting\n * @param {Boolean} ascending Whether to sort ascending or descending\n */\n\nexport const sortByDate = (items, dateProp, ascending = true) => {\n  const values = Object.values(items);\n  values.sort((a, b) => {\n    const aDate = new Date(a[dateProp]);\n    const bDate = new Date(b[dateProp]);\n    return ascending ? aDate - bDate : bDate - aDate;\n  });\n  return values;\n}; // reducer validator\n\nexport const validateReducer = (value, defaultValue) => value === undefined || value === null ? defaultValue : value;\nexport const getBaseUrl = d2 => {\n  const api = d2.Api.getApi();\n  const idx = api.baseUrl.indexOf('/api');\n  return idx > -1 ? api.baseUrl.slice(0, idx) : api.baseUrl;\n};\nexport const getWithoutId = object => ({ ...object,\n  id: undefined\n});","import i18n from '@dhis2/d2-i18n';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\nimport ExtensionIcon from '@material-ui/icons/Extension';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport PersonIcon from '@material-ui/icons/Person';\nimport FontDownloadIcon from '@material-ui/icons/FontDownload';\nimport EmailIcon from '@material-ui/icons/Email';\nimport CropFreeIcon from '@material-ui/icons/CropFree';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\nimport { getBaseUrl } from './util'; // Item types\n\nexport const VISUALIZATION = 'VISUALIZATION';\nexport const REPORT_TABLE = 'REPORT_TABLE';\nexport const CHART = 'CHART';\nexport const MAP = 'MAP';\nexport const EVENT_REPORT = 'EVENT_REPORT';\nexport const EVENT_CHART = 'EVENT_CHART';\nexport const APP = 'APP';\nexport const REPORTS = 'REPORTS';\nexport const RESOURCES = 'RESOURCES';\nexport const USERS = 'USERS';\nexport const MESSAGES = 'MESSAGES';\nexport const TEXT = 'TEXT';\nexport const SPACER = 'SPACER';\nexport const PAGEBREAK = 'PAGEBREAK';\nexport const PRINT_TITLE_PAGE = 'PRINT_TITLE_PAGE';\nconst DOMAIN_TYPE_AGGREGATE = 'AGGREGATE';\nconst DOMAIN_TYPE_TRACKER = 'TRACKER'; // Dashboard helpers\n\nexport const isVisualizationType = item => !!itemTypeMap[item.type].isVisualizationType;\nexport const hasMapView = itemType => itemTypeMap[itemType].domainType === DOMAIN_TYPE_AGGREGATE;\nexport const isTrackerDomainType = itemType => itemTypeMap[itemType].domainType === DOMAIN_TYPE_TRACKER;\nexport const getDefaultItemCount = itemType => itemTypeMap[itemType].defaultItemCount || 5;\nexport const getAppName = itemType => itemTypeMap[itemType].appName || ''; // Item type map\n\nexport const itemTypeMap = {\n  [VISUALIZATION]: {\n    id: VISUALIZATION,\n    endPointName: 'visualizations',\n    propName: 'visualization',\n    pluralTitle: i18n.t('Visualizations'),\n    appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n    appName: 'Data Visualizer',\n    defaultItemCount: 10\n  },\n  [REPORT_TABLE]: {\n    id: REPORT_TABLE,\n    endPointName: 'visualizations',\n    propName: 'visualization',\n    pluralTitle: i18n.t('Pivot tables'),\n    domainType: DOMAIN_TYPE_AGGREGATE,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n    appName: 'Data Visualizer'\n  },\n  [CHART]: {\n    id: CHART,\n    endPointName: 'visualizations',\n    propName: 'visualization',\n    pluralTitle: i18n.t('Charts'),\n    domainType: DOMAIN_TYPE_AGGREGATE,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n    appName: 'Data Visualizer'\n  },\n  [MAP]: {\n    id: MAP,\n    endPointName: 'maps',\n    propName: 'map',\n    pluralTitle: i18n.t('Maps'),\n    domainType: DOMAIN_TYPE_AGGREGATE,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-maps/?id=${id}`,\n    appName: 'Maps'\n  },\n  [EVENT_REPORT]: {\n    id: EVENT_REPORT,\n    endPointName: 'eventReports',\n    propName: 'eventReport',\n    pluralTitle: i18n.t('Event reports'),\n    domainType: DOMAIN_TYPE_TRACKER,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-event-reports/?id=${id}`,\n    appName: 'Event Reports'\n  },\n  [EVENT_CHART]: {\n    id: EVENT_CHART,\n    endPointName: 'eventCharts',\n    propName: 'eventChart',\n    pluralTitle: i18n.t('Event charts'),\n    domainType: DOMAIN_TYPE_TRACKER,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-event-visualizer/?id=${id}`,\n    appName: 'Event Visualizer'\n  },\n  [APP]: {\n    endPointName: 'apps',\n    propName: 'appKey',\n    pluralTitle: i18n.t('Apps')\n  },\n  [REPORTS]: {\n    id: REPORTS,\n    endPointName: 'reports',\n    propName: 'reports',\n    pluralTitle: i18n.t('Reports'),\n    appUrl: (id, type) => {\n      switch (type) {\n        case 'HTML':\n          return `dhis-web-reports/#/standard-report/view/${id}`;\n\n        case 'JASPER_REPORT_TABLE':\n        case 'JASPER_JDBC':\n        default:\n          return `api/reports/${id}/data.pdf?t=${new Date().getTime()}`;\n      }\n    }\n  },\n  [RESOURCES]: {\n    id: RESOURCES,\n    endPointName: 'resources',\n    propName: 'resources',\n    pluralTitle: i18n.t('Resources'),\n    appUrl: id => `api/documents/${id}/data`\n  },\n  [USERS]: {\n    id: USERS,\n    endPointName: 'users',\n    propName: 'users',\n    pluralTitle: i18n.t('Users'),\n    appUrl: id => `dhis-web-dashboard-integration/profile.action?id=${id}`\n  },\n  [TEXT]: {\n    id: TEXT,\n    propName: 'text'\n  },\n  [MESSAGES]: {\n    propName: 'messages'\n  },\n  [SPACER]: {\n    propName: 'text'\n  },\n  [PAGEBREAK]: {\n    propName: 'text'\n  },\n  [PRINT_TITLE_PAGE]: {\n    propName: 'text'\n  }\n};\nexport const getEndPointName = type => itemTypeMap[type].endPointName;\nexport const getItemUrl = (type, item, d2) => {\n  let url;\n\n  if (type === APP) {\n    url = item.launchUrl;\n  }\n\n  if (itemTypeMap[type] && itemTypeMap[type].appUrl) {\n    url = `${getBaseUrl(d2)}/${itemTypeMap[type].appUrl(item.id, item.type)}`;\n  }\n\n  return url;\n};\nexport const getItemIcon = type => {\n  switch (type) {\n    case REPORT_TABLE:\n    case EVENT_REPORT:\n    case REPORTS:\n      return TableIcon;\n\n    case CHART:\n    case EVENT_CHART:\n      return ChartIcon;\n\n    case MAP:\n      return MapIcon;\n\n    case APP:\n      return ExtensionIcon;\n\n    case RESOURCES:\n      return DescriptionIcon;\n\n    case USERS:\n      return PersonIcon;\n\n    case TEXT:\n      return FontDownloadIcon;\n\n    case MESSAGES:\n      return EmailIcon;\n\n    case SPACER:\n      return CropFreeIcon;\n\n    default:\n      return NotInterestedIcon;\n  }\n};","import isFunction from 'd2-utilizr/lib/isFunction';\nimport { orObject } from '../../modules/util'; // Dimensions for the react-grid-layout\n\nexport const GRID_COMPACT_TYPE = 'vertical'; // vertical | horizonal | null\n\nexport const GRID_ROW_HEIGHT = 10;\nconst GRID_COLUMN_WIDTH_PX = 20;\nconst GRID_LAYOUT = 'FLEXIBLE'; // FIXED | FLEXIBLE\n\nexport const MARGIN = [10, 10];\nexport const NEW_ITEM_SHAPE = {\n  x: 0,\n  y: 0,\n  w: 20,\n  h: 29\n}; // Dimensions for getShape\n\nconst NUMBER_OF_ITEM_COLS = 2;\nconst GRID_COLUMNS = 60;\nconst MAX_ITEM_GRID_WIDTH = GRID_COLUMNS - 1;\nexport const MAX_ITEM_GRID_HEIGHT = 34;\nexport const MAX_ITEM_GRID_HEIGHT_OIPP = 35;\nexport const MAX_ITEM_GRID_WIDTH_OIPP = 56; // for A4 landscape (297x210mm)\n// 794 px = (21cm / 2.54) * 96 pixels/inch\n// 1122 px = 29.7 /2.54 * 96 pixels/inch\n// const a4LandscapeHeightPx = 794\n\nexport const a4LandscapeWidthPx = 1102;\nexport const getGridColumns = () => {\n  switch (GRID_LAYOUT) {\n    case 'FLEXIBLE':\n      return GRID_COLUMNS;\n\n    case 'FIXED':\n      return Math.floor((window.innerWidth - 20) / GRID_COLUMN_WIDTH_PX);\n\n    default:\n      return GRID_COLUMNS;\n  }\n}; // isNonNegativeInteger\n\nconst isNonNegativeInteger = x => Number.isInteger(x) && x >= 0; // Does the item have all the shape properties?\n\n\nexport const hasShape = item => isNonNegativeInteger(item.x) && isNonNegativeInteger(item.y) && isNonNegativeInteger(item.w) && isNonNegativeInteger(item.h); // returns a rectangular grid block dimensioned with x, y, w, h in grid units.\n// based on a grid with 3 items across\n\nexport const getShape = i => {\n  if (!isNonNegativeInteger(i)) {\n    throw new Error('Invalid grid block number');\n  }\n\n  const col = i % NUMBER_OF_ITEM_COLS;\n  const row = Math.floor(i / NUMBER_OF_ITEM_COLS);\n  const itemWidth = Math.floor(MAX_ITEM_GRID_WIDTH / NUMBER_OF_ITEM_COLS);\n  const itemHeight = GRID_ROW_HEIGHT * 2;\n  return {\n    x: col * itemWidth,\n    y: row * itemHeight,\n    w: itemWidth,\n    h: itemHeight\n  };\n};\nexport const getGridItemProperties = itemId => {\n  return {\n    i: itemId,\n    minH: 4 // minimum height for item\n\n  };\n};\nexport const getPageBreakItemShape = (yPos, isStatic = true) => {\n  return {\n    x: 0,\n    y: yPos,\n    w: MAX_ITEM_GRID_WIDTH,\n    h: 5,\n    static: !!isStatic,\n    minH: 1\n  };\n};\nexport const getPrintTitlePageItemShape = isOneItemPerPage => {\n  return {\n    x: 0,\n    y: 0,\n    w: isOneItemPerPage ? MAX_ITEM_GRID_WIDTH_OIPP : MAX_ITEM_GRID_WIDTH,\n    h: MAX_ITEM_GRID_HEIGHT,\n    static: true,\n    minH: 1\n  };\n};\n/**\n * Calculates the grid item's original height in pixels based\n * on the height in grid units. This calculation\n * is copied directly from react-grid-layout GridItem.js (calcPosition)\n *\n * @param {Object} item item containing shape (x, y, w, h)\n */\n\nexport const getOriginalHeight = item => {\n  const originalHeight = Math.round(GRID_ROW_HEIGHT * item.h + Math.max(0, item.h - 1) * MARGIN[1]);\n  return {\n    originalHeight\n  };\n};\n/**\n * Returns an array of items containing the x, y, w, h dimensions\n * and the item's originalheight in pixels\n * @function\n * @param {Array} items\n * @returns {Array}\n */\n\nexport const withShape = items => items.map((item, index) => {\n  const itemWithShape = hasShape(item) ? item : Object.assign({}, item, getShape(index));\n  return Object.assign({}, itemWithShape, getOriginalHeight(itemWithShape));\n});\nexport const getGridItemDomId = id => `item-${id}`;\nexport function onItemResize(id) {\n  const el = orObject(document.querySelector(`#${getGridItemDomId(id)}`));\n  if (isFunction(el.setViewportSize)) setTimeout(() => el.setViewportSize(el.clientWidth - 5, el.clientHeight - 5), 10);\n}","import isObject from 'lodash/isObject';\nimport { VIS_TYPE_COLUMN, VIS_TYPE_PIVOT_TABLE, AXIS_ID_ROWS, AXIS_ID_COLUMNS, AXIS_ID_FILTERS } from '@dhis2/analytics';\nimport { apiFetchFavorite, getMapFields } from '../../../api/metadata';\nimport { REPORT_TABLE, CHART, MAP, EVENT_REPORT, EVENT_CHART, itemTypeMap } from '../../../modules/itemTypes';\nimport { getBaseUrl, getWithoutId } from '../../../modules/util';\nimport { getGridItemDomId } from '../../ItemGrid/gridUtil'; //external plugins\n\nconst itemTypeToExternalPlugin = {\n  [MAP]: 'mapPlugin',\n  [EVENT_REPORT]: 'eventReportPlugin',\n  [EVENT_CHART]: 'eventChartPlugin'\n};\n\nconst hasIntegratedPlugin = type => [CHART, REPORT_TABLE].includes(type);\n\nconst getPlugin = type => {\n  if (hasIntegratedPlugin(type)) {\n    return true;\n  }\n\n  const pluginName = itemTypeToExternalPlugin[type];\n  return global[pluginName];\n};\n\nexport const THEMATIC_LAYER = 'thematic';\nexport const pluginIsAvailable = (item = {}, visualization = {}) => {\n  const type = visualization.activeType || item.type;\n  return !!getPlugin(type);\n};\nexport const extractFavorite = item => {\n  if (!isObject(item)) {\n    return null;\n  }\n\n  const propName = itemTypeMap[item.type].propName;\n  return item[propName] || item.reportTable || item.chart || item.map || item.eventReport || item.eventChart || {};\n};\nexport const extractMapView = map => map.mapViews && map.mapViews.find(mv => mv.layer.includes(THEMATIC_LAYER));\nexport const loadPlugin = (plugin, config, credentials) => {\n  if (!(plugin && plugin.load)) {\n    return;\n  }\n\n  plugin.url = credentials.baseUrl;\n  plugin.loadingIndicator = true;\n  plugin.dashboard = true;\n\n  if (credentials.auth) {\n    plugin.auth = credentials.auth;\n  }\n\n  plugin.load(config);\n};\nexport const getId = item => extractFavorite(item).id;\nexport const getName = item => extractFavorite(item).name;\nexport const getDescription = item => extractFavorite(item).description;\nexport const getLink = (item, d2) => {\n  const baseUrl = getBaseUrl(d2);\n  const appUrl = itemTypeMap[item.type].appUrl(getId(item));\n  return `${baseUrl}/${appUrl}`;\n};\nexport const load = async (item, visualization, {\n  credentials,\n  activeType,\n  options = {}\n}) => {\n  const config = { ...visualization,\n    ...options,\n    el: getGridItemDomId(item.id)\n  };\n  const type = activeType || item.type;\n  const plugin = getPlugin(type);\n  loadPlugin(plugin, config, credentials);\n};\nexport const fetch = async item => {\n  const fetchedFavorite = await apiFetchFavorite(getId(item), item.type, {\n    fields: item.type === MAP ? getMapFields() : null\n  });\n  return fetchedFavorite;\n};\nexport const resize = item => {\n  const plugin = getPlugin(item.type);\n\n  if (plugin && plugin.resize) {\n    plugin.resize(getGridItemDomId(item.id));\n  }\n};\nexport const unmount = (item, activeType) => {\n  const plugin = getPlugin(activeType);\n\n  if (plugin && plugin.unmount) {\n    plugin.unmount(getGridItemDomId(item.id));\n  }\n};\nexport const getVisualizationConfig = (visualization, originalType, activeType) => {\n  if (originalType === MAP && originalType !== activeType) {\n    const extractedMapView = extractMapView(visualization);\n\n    if (extractedMapView === undefined) {\n      return null;\n    }\n\n    return getWithoutId({ ...visualization,\n      ...extractedMapView,\n      mapViews: undefined,\n      type: activeType === CHART ? VIS_TYPE_COLUMN : VIS_TYPE_PIVOT_TABLE\n    });\n  } else if (originalType === REPORT_TABLE && activeType === CHART) {\n    const columns = visualization[AXIS_ID_COLUMNS].slice();\n    const rows = visualization[AXIS_ID_ROWS].slice();\n    const layout = {};\n\n    if (visualization.rows.length > 1) {\n      layout[AXIS_ID_ROWS] = rows.length > 2 ? rows.splice(0, 2) : rows.splice(0, rows.length);\n    } else {\n      layout[AXIS_ID_ROWS] = rows.length ? [rows.shift()] : rows;\n    }\n\n    layout[AXIS_ID_COLUMNS] = columns.length ? [columns.shift()] : columns;\n    layout[AXIS_ID_FILTERS] = [...visualization[AXIS_ID_FILTERS], ...columns, ...rows];\n    return getWithoutId({ ...visualization,\n      ...layout,\n      type: VIS_TYPE_COLUMN\n    });\n  } else if (originalType === CHART && activeType === REPORT_TABLE) {\n    return getWithoutId({ ...visualization,\n      type: VIS_TYPE_PIVOT_TABLE\n    });\n  }\n\n  return getWithoutId(visualization);\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemHeaderWrap\":\"ItemHeader_itemHeaderWrap__JcBP7\",\"itemTitle\":\"ItemHeader_itemTitle__34rHa\",\"itemActionsWrap\":\"ItemHeader_itemActionsWrap__Gx3D9\"};","import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { getEndPointName } from '../modules/itemTypes'; // Id, name\n\nexport const getIdNameFields = ({\n  rename\n} = {}) => ['id', `${rename ? 'displayName~rename(name)' : 'name,displayName'}`]; // Item\n\nexport const getItemFields = () => ['dimensionItem~rename(id)', 'displayName~rename(name)', 'dimensionItemType']; // Dimension\n\nexport const getDimensionFields = ({\n  withItems\n}) => arrayClean(['dimension', 'legendSet[id]', 'filter', 'programStage', withItems ? `items[${getItemFields().join(',')}]` : ``]); // Axis\n\nexport const getAxesFields = ({\n  withItems\n}) => [`columns[${getDimensionFields({\n  withItems\n}).join(',')}]`, `rows[${getDimensionFields({\n  withItems\n}).join(',')}]`, `filters[${getDimensionFields({\n  withItems\n}).join(',')}]`]; // Favorite\n\nexport const getFavoriteFields = ({\n  withDimensions,\n  withOptions\n}) => {\n  return arrayClean([`${getIdNameFields({\n    rename: true\n  }).join(',')}`, 'displayDescription~rename(description)', withDimensions ? `${getAxesFields({\n    withItems: true\n  }).join(',')}` : ``, withOptions ? ['*', '!attributeDimensions', '!attributeValues', '!category', '!categoryDimensions', '!categoryOptionGroupSetDimensions', '!columnDimensions', '!dataDimensionItems', '!dataElementDimensions', '!dataElementGroupSetDimensions', '!filterDimensions', '!itemOrganisationUnitGroups', '!lastUpdatedBy', '!organisationUnitGroupSetDimensions', '!organisationUnitLevels', '!organisationUnits', '!programIndicatorDimensions', '!relativePeriods', '!reportParams', '!rowDimensions', '!translations', '!userOrganisationUnit', '!userOrganisationUnitChildren', '!userOrganisationUnitGrandChildren'].join(',') : '']);\n};\nexport const getFavoritesFields = ({\n  withDimensions\n}) => [`reportTable[${getFavoriteFields({\n  withDimensions\n}).join(',')}]`, `chart[${['type', ...getFavoriteFields({\n  withDimensions\n})].join(',')}]`, `map[${getFavoriteFields({\n  withDimensions\n}).join(',')}]`, `eventReport[${getFavoriteFields({\n  withDimensions\n}).join(',')}]`, `eventChart[${getFavoriteFields({\n  withDimensions\n}).join(',')}]`]; // List item\n\nexport const getListItemFields = () => [`reports[${['type', ...getIdNameFields({\n  rename: true\n})].join(',')}]`, `resources[${getIdNameFields({\n  rename: true\n}).join(',')}]`, `users[${getIdNameFields({\n  rename: true\n}).join(',')}]`]; // Map\n\nexport const getMapFields = () => [`${getIdNameFields({\n  rename: true\n}).join(',')}`, 'user,longitude,latitude,zoom,basemap', `mapViews[${getFavoriteFields({\n  withDimensions: true,\n  withOptions: true\n})}]`]; // Api\n// Get more info about the favorite of a dashboard item\n\nexport const apiFetchFavorite = (id, type, {\n  fields\n}) => getInstance().then(d2 => d2.Api.getApi().get(`${getEndPointName(type)}/${id}`, {\n  fields: fields || getFavoriteFields({\n    withDimensions: true,\n    withOptions: true\n  })\n}));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"leftControls\":\"DashboardsBar_leftControls__k-Y57\",\"rightControls\":\"DashboardsBar_rightControls__1cyr1\",\"topMargin\":\"DashboardsBar_topMargin__FKGgr\"};"],"sourceRoot":""}
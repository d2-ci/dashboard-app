{"version":3,"sources":["D2App/components/ControlBar/styles/ControlBar.module.css","D2App/components/ControlBar/styles/DashboardItemChip.module.css","D2App/components/ControlBar/styles/ClearButton.module.css","D2App/components/ControlBar/styles/Filter.module.css","D2App/components/ControlBar/styles/ShowMoreButton.module.css","D2App/components/ItemSelector/styles/ContentMenuItem.module.css","D2App/components/ItemSelector/styles/CategorizedMenuGroup.module.css","D2App/components/TitleBar/styles/EditTitleBar.module.css","D2App/components/TitleBar/styles/ViewTitleBar.module.css","D2App/components/Item/VisualizationItem/styles/FatalErrorBoundary.module.css","D2App/components/Item/ItemHeader/styles/DeleteItemButton.module.css","D2App/components/Item/ItemHeader/styles/PrintItemInfo.module.css","D2App/components/Item/VisualizationItem/styles/LoadingMask.module.css","D2App/components/Item/VisualizationItem/styles/Item.module.css","D2App/components/Item/ListItem/Item.module.css","D2App/components/Item/PrintTitlePageItem/styles/Item.module.css","D2App/components/FilterBar/styles/FilterBar.module.css","D2App/components/ControlBar/styles/ConfirmDeleteDialog.module.css","D2App/components/Dashboard/styles/PrintInfo.module.css","D2App/components/Dashboard/styles/PrintActionsBar.module.css","D2App/components/Dashboard/styles/PrintLayoutDashboard.module.css","D2App/components/Dashboard/styles/PrintDashboard.module.css","D2App/components/Dashboard/dashboardModes.js","D2App/reducers/user.js","D2App/modules/uiBackendItemConverter.js","D2App/reducers/dashboards.js","D2App/reducers/selected.js","D2App/reducers/dimensions.js","D2App/reducers/itemFilters.js","D2App/actions/itemFilters.js","D2App/reducers/messages.js","D2App/api/messages.js","D2App/components/Item/MessagesItem/actions.js","D2App/reducers/snackbar.js","D2App/actions/snackbar.js","D2App/reducers/visualizations.js","D2App/actions/visualizations.js","D2App/api/index.js","D2App/api/dashboards.js","D2App/api/userDataStore.js","D2App/components/SnackbarMessage/SnackbarMessage.js","D2App/actions/selected.js","D2App/api/localStorage.js","D2App/api/description.js","D2App/actions/dashboards.js","D2App/reducers/controlBar.js","D2App/actions/controlBar.js","D2App/api/controlBar.js","D2App/reducers/settings.js","D2App/actions/dimensions.js","D2App/components/ControlBar/ControlBar.js","D2App/icons/Star.js","D2App/components/ControlBar/DashboardItemChip.js","D2App/api/dataStatistics.js","D2App/icons/AddCircle.js","D2App/icons/Search.js","D2App/icons/Clear.js","D2App/components/ControlBar/ClearButton.js","D2App/reducers/dashboardsFilter.js","D2App/components/ControlBar/Filter.js","D2App/actions/dashboardsFilter.js","D2App/components/ControlBar/ShowMoreButton.js","D2App/components/ControlBar/controlBarDimensions.js","D2App/components/ControlBar/DashboardsBar.js","D2App/components/Dashboard/DashboardVerticalOffset.js","D2App/widgets/NoContentMessage.js","D2App/components/ItemSelector/HeaderMenuItem.js","D2App/icons/Launch.js","D2App/components/ItemSelector/ContentMenuItem.js","D2App/reducers/editDashboard.js","D2App/api/editDashboard.js","D2App/actions/editDashboard.js","D2App/components/ItemSelector/selectableItems.js","D2App/components/ItemSelector/CategorizedMenuGroup.js","D2App/components/ItemSelector/actions.js","D2App/components/ItemSelector/SinglesMenuGroup.js","D2App/components/ItemSelector/ItemSelector.js","D2App/components/TitleBar/EditTitleBar.js","D2App/components/Item/VisualizationItem/assets/icons.js","D2App/components/ItemFilter/FilterDialog.js","D2App/reducers/activeModalDimension.js","D2App/actions/activeModalDimension.js","D2App/components/ItemFilter/FilterSelector.js","D2App/components/TitleBar/ViewTitleBar.js","D2App/components/TitleBar/TitleBar.js","D2App/components/Item/VisualizationItem/DefaultPlugin.js","D2App/components/Item/VisualizationItem/FatalErrorBoundary.js","D2App/components/Item/ItemHeader/ViewItemActions.js","D2App/components/Item/ItemHeader/DeleteItemButton.js","D2App/components/Item/ItemHeader/EditItemActions.js","D2App/icons/Info.js","D2App/components/Item/ItemHeader/PrintItemInfo.js","D2App/components/Item/ItemHeader/ItemHeader.js","D2App/components/Item/VisualizationItem/ItemHeaderButtons.js","D2App/components/Item/VisualizationItem/ItemFooter.js","D2App/components/Item/VisualizationItem/LoadingMask.js","D2App/modules/memoizeOne.js","D2App/components/Item/VisualizationItem/Item.js","D2App/widgets/Line.js","D2App/components/Item/MessagesItem/Item.js","D2App/components/Item/NotSupportedItem/Item.js","D2App/icons/Description.js","D2App/icons/Delete.js","D2App/components/Item/ListItem/Item.js","D2App/components/Item/ListItem/actions.js","D2App/reducers/printDashboard.js","D2App/components/Item/TextItem/Item.js","D2App/components/Item/AppItem/Item.js","D2App/components/Item/SpacerItem/Item.js","D2App/components/Item/PageBreakItem/Item.js","D2App/components/Item/PrintTitlePageItem/Item.js","D2App/components/Item/Item.js","D2App/components/Item/ProgressiveLoadingContainer.js","D2App/components/ItemGrid/ItemGrid.js","D2App/components/FilterBar/FilterBadge.js","D2App/components/FilterBar/FilterBar.js","D2App/reducers/windowHeight.js","D2App/actions/printDashboard.js","D2App/components/Dashboard/ViewDashboard.js","D2App/components/ControlBar/ConfirmDeleteDialog.js","D2App/components/ControlBar/EditBar.js","D2App/components/Dashboard/PrintInfo.js","D2App/icons/LessHorizontal.js","D2App/components/Dashboard/PrintActionsBar.js","D2App/modules/printUtils.js","D2App/components/ItemGrid/PrintLayoutItemGrid.js","D2App/components/Dashboard/PrintLayoutDashboard.js","D2App/components/Dashboard/EditDashboard.js","D2App/components/Dashboard/NewDashboard.js","D2App/components/ItemGrid/PrintItemGrid.js","D2App/components/Dashboard/PrintDashboard.js","D2App/actions/windowHeight.js","D2App/components/Dashboard/Dashboard.js","D2App/components/App.js","D2App/actions/user.js","D2App/reducers/style.js","D2App/reducers/index.js","D2App/configureStore.js","D2App/locales/index.js","D2App/AppWrapper.js","D2App/modules/util.js","D2App/modules/itemTypes.js","D2App/components/ItemGrid/gridUtil.js","D2App/components/Item/VisualizationItem/plugin.js","D2App/components/Item/ItemHeader/styles/ItemHeader.module.css","D2App/api/metadata.js","D2App/components/ControlBar/styles/DashboardsBar.module.css"],"names":["module","exports","EDIT","NEW","PRINT","PRINT_LAYOUT","isEditMode","mode","includes","isPrintMode","isViewMode","DEFAULT_STATE_USER","id","username","uiLocale","isSuperuser","sGetUserUsername","state","user","spacerContent","isTextType","item","type","TEXT","text","convertUiItemsToBackend","items","map","SPACER","isUiSpacerType","convertBackendItemsToUi","isBackendSpacerType","gridProperties","getGridItemProperties","DEFAULT_STATE_DASHBOARDS","byId","EMPTY_DASHBOARD","updateDashboardProp","dashboardId","prop","value","sGetDashboardsRoot","dashboards","sGetDashboardById","orObject","sDashboardsIsFetching","sGetAllDashboards","sGetDashboardItems","sGetStarredDashboards","Object","values","filter","dashboard","starred","sGetUnstarredDashboards","getCustomDashboards","data","arrayFrom","d","name","displayName","description","displayDescription","favorite","owner","created","split","join","substr","lastUpdated","access","numberOfItems","orArray","dashboardItems","length","DEFAULT_STATE_SELECTED_ITEM_ACTIVE_TYPES","combineReducers","action","validateReducer","isLoading","showDescription","itemActiveTypes","activeType","sGetSelectedRoot","selected","sGetSelectedId","sGetSelectedIsLoading","sGetSelectedShowDescription","sGetSelectedItemActiveType","DEFAULT_DIMENSIONS","getDimensionById","DIMENSION_ID_PERIOD","DIMENSION_ID_ORGUNIT","sGetDimensions","dimensions","DEFAULT_STATE_ITEM_FILTERS","sGetItemFiltersRoot","itemFilters","sGetNamedItemFilters","createSelector","filters","keys","reduce","arr","push","find","dimension","acRemoveItemFilter","sGetMessagesRoot","messages","tGetMessages","async","url","getInstance","then","d2","Api","getApi","get","catch","error","console","log","getMessages","messageConversations","dispatch","err","DEFAULT_STATE_SNACKBAR","message","duration","open","acCloseSnackbar","DEFAULT_STATE_VISUALIZATIONS","isEmpty","p","undefined","sGetVisualization","visualizations","sGetVisualizationsRoot","acAddVisualization","onError","getDashboardItemsFields","withFavorite","arrayClean","getListItemFields","getFavoritesFields","withDimensions","getDashboardFields","withItems","getIdNameFields","rename","apiFetchDashboard","models","fields","hasNamespace","currentUser","dataStore","has","getNamespace","create","apiPostUserDataStoreValue","key","set","apiGetUserDataStoreValue","defaultValue","namespace","k","loadingDashboardMsg","SnackbarMessageContent","style","fontWeight","connect","snackbar","sGetSnackbar","snackbarOpen","snackbarMessage","snackbarDuration","onCloseSnackbar","props","zIndex","autoHideDuration","onClose","acSetSelectedId","acSetSelectedIsLoading","acSetSelectedShowDescription","tSetSelectedDashboardById","getState","snackbarTimeout","setTimeout","dashboardName","onSuccess","acAppendDashboards","customDashboard","acSetDashboardItems","withShape","localStorage","setItem","forEach","REPORT_TABLE","CHART","MAP","EVENT_REPORT","EVENT_CHART","extractFavorite","MESSAGES","clearTimeout","tSetShowDescription","apiGetShowDescription","tUpdateShowDescription","apiPostShowDescription","arrayToIdMap","tFetchDashboards","collection","list","paging","toArray","tStarDashboard","isStarred","post","delete","apiStarDashboard","acSetDashboardStarred","tDeleteDashboard","apiDeleteDashboard","Promise","resolve","userRows","sGetControlBarUserRows","controlBar","sGetControlBarRoot","acSetControlBarUserRows","rows","tSetControlBarRows","controlBarRows","apiGetControlBarRows","DEFAULT_SETTINGS","keyDateFormat","keyAnalysisRelativePeriod","keyAnalysisDigitGroupSeparator","displayNameProperty","rootOrganisationUnit","sGetSettings","settings","sGetSettingsDisplayNameProperty","tSetDimensions","displayNameProp","apiFetchDimensions","acSetDimensions","dim","dimensionType","dataDimensionType","ControlBar","React","Component","constructor","super","onStartDrag","this","setState","dragging","window","addEventListener","onDrag","onEndDrag","event","preventDefault","stopPropagation","newHeight","clientY","onChangeHeight","height","requestAnimationFrame","removeEventListener","renderDragHandle","className","classes","draghandle","onMouseDown","render","Math","max","rootStyle","assign","backgroundColor","editMode","colors","yellow050","white","paddingBottom","transition","root","content","children","defaultProps","StarIcon","xmlns","viewBox","fill","DashboardItemChip","label","chipProps","selectedState","unselected","icon","Star","link","to","onClick","debounce","eventType","apiPostDataStatistics","AddCircleIcon","width","teal600","SearchIcon","ClearIcon","grey800","ClearButton","onClear","button","Clear","color","ownerData","DEFAULT_STATE_DASHBOARDS_FILTER_OWNER","order","sGetDashboardsFilterRoot","dashboardsFilter","sGetFilterName","mapDispatchToProps","onChangeFilterText","filterText","onKeypressEnter","focusedClassName","setFocusedClassName","useState","clearFilterText","cx","container","onFocus","focused","onBlur","Search","searchIcon","input","placeholder","i18n","t","onChange","target","onKeyUp","keyCode","ShowMoreButton","isMaxHeight","disabled","showMore","getRowsHeight","getControlBarHeight","FIRST_ROW_PADDING_HEIGHT","withRouter","selectedId","history","setRows","useEffect","getFilteredDashboards","filteredDashboards","arraySort","toLowerCase","overflowYClass","overflowYAuto","overflowYHidden","newRows","floor","min","apiPostControlBarRows","leftControls","newLink","AddCircle","marginTop","NoContentMessage","padding","textAlign","fontSize","grey600","HeaderMenuItem","title","dense","LaunchIcon","LaunchLink","e","launchLink","rel","href","Launch","InsertButton","buttonInsert","ContentMenuItem","onInsert","visType","ItemIcon","getItemIcon","renderedItemIcon","VISUALIZATION","visTypeIcons","menuItem","marginRight","DEFAULT_STATE_EDIT_DASHBOARD","NEW_DASHBOARD_STATE","printPreviewView","sGetEditDashboardRoot","editDashboard","sGetIsEditing","sGetIsPrintPreviewView","sGetEditDashboardItems","saveDashboard","w","h","save","msg","response","uid","acClearEditDashboard","acAddDashboardItem","itemPropName","itemTypeMap","propName","generateUid","gridItemProperties","shape","PAGEBREAK","yPos","getPageBreakItemShape","isStatic","PRINT_TITLE_PAGE","getPrintTitlePageItemShape","NEW_ITEM_SHAPE","position","acUpdateDashboardItem","acRemoveDashboardItem","tSaveDashboard","dashboardToSave","postDashboard","singleItems","header","categorizedItems","USERS","REPORTS","RESOURCES","APP","listItemTypes","CategorizedMenuGroup","addItem","tAddListItemContent","newItem","toggleSeeMore","seeMore","onChangeItemsLimit","hasMore","itemUrl","getItemUrl","context","showMoreButton","margin","contextTypes","PropTypes","object","isRequired","listItemType","dashboardItemIndex","findIndex","dashboardItem","category","addToDashboard","ItemSearchField","ItemSelector","closeList","openList","_","fetchItems","anchorEl","currentTarget","setFilter","getCategorizedMenuGroups","itemType","endPointName","itemCount","getDefaultItemCount","allItems","maxOptions","slice","pluralTitle","getSinglesMenuGroups","getMenuGroups","concat","add","Set","queryString","anchorOrigin","horizontal","vertical","transformOrigin","PaperProps","disableAutoFocus","disableEnforceFocus","disableRestoreFocus","maxWidth","EditTitleBar","onChangeTitle","onChangeDescription","section","titleDescription","itemSelector","selectedDashboard","ThreeDots","SpeechBubble","fillRule","transform","Warning","FilterDialog","initiallySelectedItems","addItemFilter","removeItemFilter","setFilters","onSelectItems","dimensionId","onDeselectItems","itemIdsToRemove","newList","onReorderItems","itemIds","oldList","reorderedList","large","commonProps","onSelect","onDeselect","onReorder","selectedItems","selectedPeriods","ouItems","renderDialogContent","secondary","primary","filterItems","DEFAULT_STATE_ACTIVE_MODAL_DIMENSION","sGetActiveModalDimension","activeModalDimension","acSetActiveModalDimension","clearActiveModalDimension","setActiveModalDimension","showPopover","setShowPopover","ref","useRef","onCloseDialog","onClickOutside","reference","arrow","placement","onDimensionClick","selectedIds","ViewTitleBar","moreOptionsIsOpen","setMoreOptionsIsOpen","sharingDialogIsOpen","setSharingDialogIsOpen","redirectUrl","setRedirectUrl","onToggleStarredDashboard","onShowHideDescription","toggleSharingDialog","toggleMoreOptions","titleStyle","cursor","userSelect","top","StarBorder","showHideDescriptionLabel","toggleStarredDashboardLabel","buttonRef","createRef","userAccess","titleBar","actions","titleBarIcon","strip","update","editLink","manage","marginLeft","paddingTop","onRequestClose","stateProps","dispatchProps","ownProps","black","minWidth","TitleBar","edit","DefaultPlugin","pluginCredentials","shouldPluginReload","prevProps","reloadAllowed","filtersChanged","vis","visualization","prevVis","visChanged","reloadPlugin","pluginManager","credentials","componentDidMount","baseUrl","getBaseUrl","auth","defaultHeaders","Authorization","options","componentDidUpdate","componentWillUnmount","getGridItemDomId","textDiv","FatalErrorBoundary","errorFound","componentDidCatch","info","ViewItemActions","actionButtons","itemActionsWrap","DeleteItemButton","deleteItemButton","red500","itemId","WarningIcon","PrintWarning","warning","Info","ItemHeader","forwardRef","dashboardMode","isShortened","rest","Actions","EditItemActions","PrintItemInfo","getItemActionsMap","itemHeaderWrap","itemTitle","iconFill","ItemHeaderButtons","setAnchorEl","onSelectActiveType","isTrackerType","isTrackerDomainType","onViewTable","handleClose","onViewChart","onViewMap","canViewAs","isSingleValue","isYearOverYear","VIS_TYPE_GAUGE","VIS_TYPE_PIE","interpretationMenuLabel","activeFooter","ViewAsMenuItems","hasMapView","pluginIsAvailable","small","Boolean","appName","getAppName","getLink","onToggleFooter","scrollContainer","overflowY","line","border","grey100","ItemFooter","objectId","getId","LoadingMask","center","memoizeOne","fn","lastArgs","lastValue","args","every","arg","i","Item","showFooter","configLoaded","pluginIsLoaded","applyFilters","visRows","obj","visColumns","columns","visFilters","dimensionFound","dimensionObjects","getUniqueKey","uniqueId","getPluginComponent","getActiveType","memoizedGetVisualizationConfig","calculatedHeight","originalHeight","headerRef","current","clientHeight","ITEM_CONTENT_PADDING_BOTTOM","memoizedGetContentStyle","contentRef","offsetHeight","memoizedApplyFilters","onLoadingComplete","forDashboard","mapViews","layer","hideTitle","onToggleItemExpanded","selectActiveType","isEditing","getContentStyle","measuredHeight","preferMeasured","updateVisualization","prevState","shortened","Function","prototype","grey200","Line","messageTypes","VALIDATION_RESULT","TICKET","SYSTEM","listStyleType","paddingLeft","seeAll","marginBottom","sender","lineHeight","snippet","maxHeight","overflow","MessagesItem","getMessageHref","msgIdentifier","messageType","getMessageSender","latestMsg","getMessageItems","modeClass","readClass","read","msgDate","document","location","messageCount","formatDate","userSettings","string","MessagesContainer","NotSupportedItem","display","justifyContent","alignItems","align","DescriptionIcon","grey500","DeleteIcon","getItemTitle","ListItem","tRemoveListItemContent","contentItems","index","array","el","getContentItems","contentItem","Description","itemicon","deleteButton","deletebutton","deleteicon","grey900","newContent","DEFAULT_STATE_PRINT_DASHBOARD","DEFAULT_DASHBOARD_ITEMS","NEW_PRINT_DASHBOARD_STATE","sGetPrintDashboardRoot","printDashboard","sGetIsPrinting","sGetPrintDashboardItems","whiteSpace","textField","fontStretch","onChangeText","updatedItem","viewItem","textDivStyle","editItem","onEdit","multiline","fullWidth","printItem","textItem","getIframeSrc","appDetails","iframeSrc","launchUrl","ouIds","ouPath","AppItem","appKey","system","installedApps","app","src","SpacerItem","PageBreakItem","PrintTitlePageItem","titlePage","filterTitle","listItems","filterListItem","val","filterList","getItemFilterList","viewDashboard","sGetPrintDashboardName","sGetPrintDashboardDescription","GridItem","VisualizationItem","TextItem","getGridItem","ProgressiveLoadingContainer","shouldLoad","containerRef","shouldLoadHandler","handlerOptions","passive","checkShouldLoad","bufferPx","bufferFactor","innerHeight","rect","getBoundingClientRect","bottom","removeHandler","registerHandler","debounceMs","getElementsByClassName","eventProps","pick","ItemGrid","expandedItems","clickedId","isExpanded","onLayoutChange","newLayout","acUpdateDashboardLayout","onResizeStop","layout","oldItem","onItemResize","isVisualizationType","pluginResize","adjustHeightForExpanded","expandedItem","getItemComponent","itemClassNames","getItemComponents","componentWillReceiveProps","nextProps","translucent","MARGIN","cols","getGridColumns","rowHeight","GRID_ROW_HEIGHT","innerWidth","compactType","GRID_COMPACT_TYPE","isDraggable","isResizable","draggableCancel","validItems","hasShape","styles","badgeContainer","borderRadius","badge","badgeRemove","textDecoration","FilterBadge","onRemove","count","FilterBar","onBadgeRemove","onBadgeClick","bar","removeItemFIlter","DEFAULT_STATE_WINDOW_HEIGHT","sGetWindowHeight","windowHeight","acSetPrintDashboard","acClearPrintDashboard","acAddPrintDashboardItem","isOneItemPerPage","acUpdatePrintDashboardItem","dashboardIsEditing","dashboardIsPrinting","clearEditDashboard","clearPrintDashboard","querySelector","scroll","ConfirmDeleteDialog","onDeleteConfirmed","onContinueEditing","destructive","buttonBarStyle","EditBar","translationDialogIsOpen","dashboardModel","confirmDeleteDialogOpen","onConfirmDelete","onSave","newId","onPrintPreview","isPrintPreviewView","clearPrintPreview","showPrintPreview","onDiscard","onDiscardChanges","onDelete","onTranslationsSaved","translations","dbLocale","translation","locale","property","onTranslate","fetchDashboardModel","toggleTranslationDialog","confirmDeleteDialog","deleteAccess","translationDialog","objectToTranslate","fieldsToTranslate","onTranslationSaved","onTranslationError","renderActionButtons","printPreviewText","updateAccess","controlBarHeight","discardBtnText","rightControls","topMargin","sGetIsNewDashboard","acSetDashboardDisplayName","PrintInfo","isLayout","a4LandscapeWidthPx","infoHeader","infoWrapper","infoList","divider","LessHorizontalIcon","PrintActionsBar","inner","LessHorizontal","print","getTransformYPx","elStyle","transformY","match","parseInt","PrintLayoutItemGrid","updateDashboardLayout","isFirstPageBreak","pageBreaks","sortedPageBreaks","sortBy","y","hideExtraPageBreaks","sortedElements","elements","types","elementsWithBoundingRect","Array","from","classList","indexOf","bottomY","getDomGridItemsSortedByYPos","querySelectorAll","pageBreakBottom","lastItemBottom","foundNonPageBreak","thisItemBottom","gridElement","firstBreak","scrollArea","EDIT_BAR_HEIGHT","isLeapPage","n","x","getMultiple","factor","multiple","PrintLayoutDashboard","initialized","initPrintLayoutDashboard","setPrintDashboard","MAX_ITEM_GRID_HEIGHT","updateDashboardItem","addDashboardItem","yPosList","pageNum","addPageBreaks","getWrapperStyle","fromEdit","spacers","dp24","wrapper","pageOuter","EditDashboard","initEditDashboard","setEditDashboard","renderGrid","NewDashboard","setNewDashboard","PrintItemGrid","PrintDashboard","initPrintDashboard","sortedItems","spacerCount","removeDashboardItem","MAX_ITEM_GRID_WIDTH_OIPP","MAX_ITEM_GRID_HEIGHT_OIPP","dashboardMap","dashboardsIsEmpty","dashboardsLoaded","routeId","params","selectDashboard","dashboardToSelect","preferredId","getItem","dash","sGetDashboardsSortedByStarred","setWindowHeight","getElementsByTagName","remove","setHeaderbarVisibility","onResize","App","setCurrentUser","fetchDashboards","setControlBarRows","setShowDescription","setDimensions","getChildContext","exact","path","childContextTypes","objectClean","conversations","$merge","d2Object","keyUiLocale","authorities","newState","$splice","$unshift","idToRemove","stateItems","layoutHasChanged","newStateItems","stateItem","si","configureStore","middleware","thunk","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducer","applyMiddleware","addResources","arTranslations","ar_IQTranslations","daTranslations","enTranslations","esTranslations","frTranslations","idTranslations","kmTranslations","loTranslations","myTranslations","nbTranslations","prsTranslations","psTranslations","ptTranslations","pt_BRTranslations","ruTranslations","svTranslations","tetTranslations","tgTranslations","ukTranslations","urTranslations","uz_CyrlTranslations","viTranslations","zhTranslations","zh_CNTranslations","appConfig","schemas","authorization","process","REACT_APP_DHIS2_AUTHORIZATION","headers","AppWrapper","store","theme","createMuiTheme","dhis2theme","i18nRoot","param","isArray","isObject","global","Intl","DateTimeFormat","year","month","day","format","Date","replace","api","idx","getWithoutId","domainType","defaultItemCount","appUrl","getTime","getEndPointName","TableIcon","ChartIcon","MapIcon","ExtensionIcon","PersonIcon","FontDownloadIcon","EmailIcon","CropFreeIcon","NotInterestedIcon","isNonNegativeInteger","Number","isInteger","minH","GRID_COLUMNS","static","itemWithShape","Error","col","row","itemWidth","MAX_ITEM_GRID_WIDTH","itemHeight","getShape","round","getOriginalHeight","isFunction","setViewportSize","clientWidth","itemTypeToExternalPlugin","getPlugin","hasIntegratedPlugin","reportTable","chart","eventReport","eventChart","getName","load","config","plugin","loadingIndicator","loadPlugin","fetch","apiFetchFavorite","getMapFields","resize","unmount","getVisualizationConfig","originalType","extractedMapView","mv","VIS_TYPE_COLUMN","VIS_TYPE_PIVOT_TABLE","getDimensionFields","getAxesFields","getFavoriteFields","withOptions"],"mappings":"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","file":"static/js/app.8e7b555c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ControlBar_root__iikeX\",\"content\":\"ControlBar_content__26Z33\",\"draghandle\":\"ControlBar_draghandle__27zum\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"DashboardItemChip_link__21drZ\",\"icon\":\"DashboardItemChip_icon__2hcIR\",\"selected\":\"DashboardItemChip_selected__r00uP\",\"unselected\":\"DashboardItemChip_unselected__2H9l2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ClearButton_button__33ZbK\",\"icon\":\"ClearButton_icon__vTJm3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Filter_container__1Vxdh\",\"input\":\"Filter_input__14lhU\",\"focused\":\"Filter_focused__Lvyz3\",\"searchIcon\":\"Filter_searchIcon__2ojUp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ShowMoreButton_container__riJz_\",\"showMore\":\"ShowMoreButton_showMore__3S3He\",\"disabled\":\"ShowMoreButton_disabled__2FQNA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuItem\":\"ContentMenuItem_menuItem__vbKn3\",\"launchLink\":\"ContentMenuItem_launchLink__2Nql9\",\"label\":\"ContentMenuItem_label__ANfH1\",\"buttonInsert\":\"ContentMenuItem_buttonInsert__1joHg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"showMoreButton\":\"CategorizedMenuGroup_showMoreButton__2RbRp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"EditTitleBar_section__LIaIC\",\"titleDescription\":\"EditTitleBar_titleDescription__1YsU6\",\"title\":\"EditTitleBar_title__3mUbt\",\"description\":\"EditTitleBar_description__24U5X\",\"itemSelector\":\"EditTitleBar_itemSelector__1cFEp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"actions\":\"ViewTitleBar_actions__2UTRz\",\"editLink\":\"ViewTitleBar_editLink__d_HzW\",\"titleBar\":\"ViewTitleBar_titleBar__eiwJS\",\"titleBarIcon\":\"ViewTitleBar_titleBarIcon__2cBxv\",\"strip\":\"ViewTitleBar_strip__3xR4U\",\"backdrop\":\"ViewTitleBar_backdrop__2Cpm8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FatalErrorBoundary_container__3SViR\",\"icon\":\"FatalErrorBoundary_icon__2UbeP\",\"message\":\"FatalErrorBoundary_message__3FzrY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"deleteItemButton\":\"DeleteItemButton_deleteItemButton__3TJm9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"warning\":\"PrintItemInfo_warning__123PK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"center\":\"LoadingMask_center__2SFwS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textDiv\":\"Item_textDiv__1U7zV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Item_list__1_nkQ\",\"item\":\"Item_item__3-6QE\",\"itemicon\":\"Item_itemicon__QlouX\",\"link\":\"Item_link___3c_q\",\"deleteicon\":\"Item_deleteicon__3usrl\",\"deletebutton\":\"Item_deletebutton__1DpBW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"titlePage\":\"Item_titlePage__18CNQ\",\"name\":\"Item_name__3nuTV\",\"description\":\"Item_description__1gFQd\",\"filterTitle\":\"Item_filterTitle__2p7TQ\",\"filterList\":\"Item_filterList__qc_G3\",\"filterListItem\":\"Item_filterListItem__sPbBY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bar\":\"FilterBar_bar__1Ma3p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ConfirmDeleteDialog_content__EqswE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"infoWrapper\":\"PrintInfo_infoWrapper__3m2lt\",\"infoHeader\":\"PrintInfo_infoHeader__KyW8I\",\"info\":\"PrintInfo_info__13oXZ\",\"infoList\":\"PrintInfo_infoList__Iu9MC\",\"divider\":\"PrintInfo_divider__3wzx9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PrintActionsBar_container__2iQp7\",\"topMargin\":\"PrintActionsBar_topMargin__OpYDN\",\"inner\":\"PrintActionsBar_inner__uBqU7\",\"link\":\"PrintActionsBar_link__lFUmI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"PrintLayoutDashboard_wrapper__1WDh4\",\"pageOuter\":\"PrintLayoutDashboard_pageOuter__22acI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"PrintDashboard_wrapper__1O3s_\",\"pageOuter\":\"PrintDashboard_pageOuter__fl9tw\"};","export const EDIT = 'edit';\nexport const NEW = 'new';\nexport const VIEW = 'view';\nexport const PRINT = 'print';\nexport const PRINT_LAYOUT = 'print-layout';\nexport const isEditMode = mode => [EDIT, NEW].includes(mode);\nexport const isPrintMode = mode => [PRINT, PRINT_LAYOUT].includes(mode);\nexport const isViewMode = mode => mode === VIEW;","export const RECEIVED_USER = 'RECEIVED_USER';\nexport const DEFAULT_STATE_USER = {\n  id: '',\n  username: '',\n  uiLocale: '',\n  isSuperuser: false\n};\nexport default ((state = DEFAULT_STATE_USER, action) => {\n  switch (action.type) {\n    case RECEIVED_USER:\n      {\n        return fromD2ToUserObj(action.value);\n      }\n\n    default:\n      return state;\n  }\n});\n\nfunction fromD2ToUserObj(d2Object) {\n  return {\n    id: d2Object.id,\n    username: d2Object.username,\n    uiLocale: d2Object.settings.keyUiLocale,\n    isSuperuser: d2Object.authorities.has('ALL')\n  };\n} // selectors\n\n\nexport const sGetUserId = state => state.user.id;\nexport const sGetUserUsername = state => state.user.username;\nexport const sGetIsSuperuser = state => state.user.isSuperuser;\nexport const sGetUiLocale = state => state.user.uiLocale;","import { TEXT, SPACER } from './itemTypes';\nimport { getGridItemProperties } from '../components/ItemGrid/gridUtil';\nexport const spacerContent = 'SPACER_ITEM_FOR_DASHBOARD_LAYOUT_CONVENIENCE';\nexport const emptyTextItemContent = 'TEXT_ITEM_WITH_NO_CONTENT';\n\nconst isBackendSpacerType = item => item.type === TEXT && item.text === spacerContent;\n\nconst isUiSpacerType = item => item.type === SPACER;\n\nconst isTextType = item => item.type === TEXT && item.text !== spacerContent;\n\nexport const convertUiItemsToBackend = items => items.map(item => {\n  let text = null;\n\n  if (isUiSpacerType(item)) {\n    text = spacerContent;\n  } else if (isTextType(item)) {\n    text = item.text || emptyTextItemContent;\n  }\n\n  return { ...item,\n    ...(text ? {\n      text\n    } : {})\n  };\n});\nexport const convertBackendItemsToUi = items => items.map(item => {\n  const type = isBackendSpacerType(item) ? SPACER : item.type;\n  const gridProperties = getGridItemProperties(item.id);\n  const text = isTextType(item) ? item.text === emptyTextItemContent ? '' : item.text : null;\n  return { ...item,\n    ...(text !== null ? {\n      text\n    } : {}),\n    type,\n    ...gridProperties\n  };\n});","/** @module reducers/dashboards */\nimport arrayFrom from 'd2-utilizr/lib/arrayFrom';\nimport arraySort from 'd2-utilizr/lib/arraySort';\nimport { orArray, orObject } from '../modules/util';\nimport { convertBackendItemsToUi } from '../modules/uiBackendItemConverter';\nexport const SET_DASHBOARDS = 'SET_DASHBOARDS';\nexport const ADD_DASHBOARDS = 'ADD_DASHBOARDS';\nexport const SET_DASHBOARD_STARRED = 'SET_DASHBOARD_STARRED';\nexport const SET_DASHBOARD_DISPLAY_NAME = 'SET_DASHBOARD_DISPLAY_NAME';\nexport const SET_DASHBOARD_ITEMS = 'SET_DASHBOARD_ITEMS';\nexport const DEFAULT_STATE_DASHBOARDS = {\n  byId: null,\n  items: []\n};\nexport const EMPTY_DASHBOARD = {}; // reducer helper functions\n\nconst updateDashboardProp = ({\n  state,\n  dashboardId,\n  prop,\n  value\n}) => ({\n  byId: { ...state.byId,\n    [dashboardId]: { ...state.byId[dashboardId],\n      [prop]: value\n    }\n  },\n  items: state.items\n});\n/**\n * Reducer that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n * @returns {Object}\n */\n\n\nexport default ((state = DEFAULT_STATE_DASHBOARDS, action) => {\n  switch (action.type) {\n    case SET_DASHBOARDS:\n      {\n        return {\n          byId: action.value,\n          items: []\n        };\n      }\n\n    case ADD_DASHBOARDS:\n      {\n        return { ...state,\n          byId: { ...state.byId,\n            ...action.value\n          }\n        };\n      }\n\n    case SET_DASHBOARD_STARRED:\n      {\n        return updateDashboardProp({\n          state,\n          dashboardId: action.dashboardId,\n          prop: 'starred',\n          value: action.value\n        });\n      }\n\n    case SET_DASHBOARD_DISPLAY_NAME:\n      {\n        return updateDashboardProp({\n          state,\n          dashboardId: action.dashboardId,\n          prop: 'displayName',\n          value: action.value\n        });\n      }\n\n    case SET_DASHBOARD_ITEMS:\n      {\n        return { ...state,\n          items: action.value\n        };\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetDashboardsRoot = state => state.dashboards; // selector level 1\n\n/**\n * Selector which returns a dashboard by id from the state object\n * If no matching dashboard is found it returns undefined\n * If dashboards.byId is null, then the dashboards api request\n * has not yet completed. If dashboards.byId is an empty object\n * then the dashboards api request is complete, but no dashboards\n * were returned\n *\n * @function\n * @param {Object} state The current state\n * @param {Number} id The id of the dashboard\n * @returns {Object | undefined}\n */\n\nexport const sGetDashboardById = (state, id) => orObject(sGetDashboardsRoot(state).byId)[id];\nexport const sDashboardsIsFetching = state => {\n  return sGetDashboardsRoot(state).byId === null;\n};\n/**\n * Selector which returns all dashboards (the byId object)\n *\n * @function\n * @param {Object} state The current state\n * @returns {Object | undefined}\n */\n\nexport const sGetAllDashboards = state => orObject(sGetDashboardsRoot(state).byId);\n/**\n * Selector which returns the current dashboard items\n *\n * @function\n * @param {Object} state The current state\n * @returns {Array}\n */\n\nexport const sGetDashboardItems = state => sGetDashboardsRoot(state).items; // selector level 2\n\nexport const sGetStarredDashboards = state => Object.values(sGetAllDashboards(state)).filter(dashboard => dashboard.starred === true);\nexport const sGetUnstarredDashboards = state => Object.values(sGetAllDashboards(state)).filter(dashboard => dashboard.starred === false); // selector level 3\n\nexport const sGetStarredDashboardIds = state => {\n  return sGetStarredDashboards(state).map(dashboard => dashboard.id);\n};\nexport const sGetUnstarredDashboardIds = state => sGetUnstarredDashboards(state).map(dashboard => dashboard.id);\nexport const sGetDashboardsSortedByStarred = state => [...arraySort(sGetStarredDashboards(state), 'ASC', 'displayName'), ...arraySort(sGetUnstarredDashboards(state), 'ASC', 'displayName')]; // utils\n\n/**\n * Returns the array of dashboards, customized for ui\n * @function\n * @param {Array} data The original dashboard list\n * @returns {Array}\n */\n\nexport const getCustomDashboards = data => arrayFrom(data).map(d => ({\n  id: d.id,\n  name: d.name,\n  displayName: d.displayName,\n  description: d.description,\n  displayDescription: d.displayDescription,\n  starred: d.favorite,\n  owner: d.user.name,\n  created: d.created.split('T').join(' ').substr(0, 16),\n  lastUpdated: d.lastUpdated.split('T').join(' ').substr(0, 16),\n  access: d.access,\n  numberOfItems: orArray(d.dashboardItems).length,\n  dashboardItems: convertBackendItemsToUi(d.dashboardItems)\n}));","/** @module reducers/selected */\nimport { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\nexport const SET_SELECTED_ID = 'SET_SELECTED_ID';\nexport const SET_SELECTED_ISLOADING = 'SET_SELECTED_ISLOADING';\nexport const SET_SELECTED_SHOWDESCRIPTION = 'SET_SELECTED_SHOWDESCRIPTION';\nexport const SET_SELECTED_ITEM_ACTIVE_TYPE = 'SET_SELECTED_ITEM_ACTIVE_TYPE';\nexport const CLEAR_SELECTED_ITEM_ACTIVE_TYPES = 'CLEAR_SELECTED_ITEM_ACTIVE_TYPES';\nexport const DEFAULT_STATE_SELECTED_ID = null;\nexport const DEFAULT_STATE_SELECTED_ISLOADING = false;\nexport const DEFAULT_STATE_SELECTED_SHOWDESCRIPTION = false;\nexport const DEFAULT_STATE_SELECTED_ITEM_ACTIVE_TYPES = {};\nexport const NON_EXISTING_DASHBOARD_ID = '0';\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\n\nconst id = (state = DEFAULT_STATE_SELECTED_ID, action) => {\n  switch (action.type) {\n    case SET_SELECTED_ID:\n      return validateReducer(action.value, DEFAULT_STATE_SELECTED_ID);\n\n    default:\n      return state;\n  }\n};\n\nconst isLoading = (state = DEFAULT_STATE_SELECTED_ISLOADING, action) => {\n  switch (action.type) {\n    case SET_SELECTED_ISLOADING:\n      return validateReducer(action.value, DEFAULT_STATE_SELECTED_ISLOADING);\n\n    default:\n      return state;\n  }\n};\n\nconst showDescription = (state = DEFAULT_STATE_SELECTED_SHOWDESCRIPTION, action) => {\n  switch (action.type) {\n    case SET_SELECTED_SHOWDESCRIPTION:\n      return validateReducer(action.value, DEFAULT_STATE_SELECTED_SHOWDESCRIPTION);\n\n    default:\n      return state;\n  }\n};\n\nconst itemActiveTypes = (state = DEFAULT_STATE_SELECTED_ITEM_ACTIVE_TYPES, action) => {\n  switch (action.type) {\n    case SET_SELECTED_ITEM_ACTIVE_TYPE:\n      {\n        return { ...state,\n          [action.id]: action.activeType\n        };\n      }\n\n    case CLEAR_SELECTED_ITEM_ACTIVE_TYPES:\n      {\n        return DEFAULT_STATE_SELECTED_ITEM_ACTIVE_TYPES;\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  id,\n  isLoading,\n  showDescription,\n  itemActiveTypes\n}); // Selectors\n\nexport const sGetSelectedRoot = state => state.selected;\nexport const sGetSelectedId = state => sGetSelectedRoot(state).id;\nexport const sGetSelectedIsLoading = state => sGetSelectedRoot(state).isLoading;\nexport const sGetSelectedShowDescription = state => sGetSelectedRoot(state).showDescription;\nexport const sGetSelectedItemActiveType = (state, id) => sGetSelectedRoot(state).itemActiveTypes[id];","import { getDimensionById, DIMENSION_ID_PERIOD, DIMENSION_ID_ORGUNIT } from '@dhis2/analytics';\nexport const SET_DIMENSIONS = 'SET_DIMENSIONS';\nexport const DEFAULT_DIMENSIONS = [getDimensionById(DIMENSION_ID_PERIOD), getDimensionById(DIMENSION_ID_ORGUNIT)];\nexport default ((state = DEFAULT_DIMENSIONS, action) => {\n  switch (action.type) {\n    case SET_DIMENSIONS:\n      {\n        return [...DEFAULT_DIMENSIONS, ...action.value];\n      }\n\n    default:\n      return state;\n  }\n});\nexport const sGetDimensions = state => state.dimensions;","import { sGetDimensions } from './dimensions';\nimport { createSelector } from 'reselect';\nexport const CLEAR_ITEM_FILTERS = 'CLEAR_ITEM_FILTERS';\nexport const SET_ITEM_FILTERS = 'SET_ITEM_FILTERS';\nexport const ADD_ITEM_FILTER = 'ADD_ITEM_FILTER';\nexport const REMOVE_ITEM_FILTER = 'REMOVE_ITEM_FILTER';\nexport const DEFAULT_STATE_ITEM_FILTERS = {};\nexport default ((state = DEFAULT_STATE_ITEM_FILTERS, action) => {\n  switch (action.type) {\n    case ADD_ITEM_FILTER:\n      {\n        return { ...state,\n          [action.filter.id]: action.filter.value\n        };\n      }\n\n    case REMOVE_ITEM_FILTER:\n      {\n        const newState = { ...state\n        };\n        delete newState[action.id];\n        return newState;\n      }\n\n    case SET_ITEM_FILTERS:\n      {\n        return action.filters;\n      }\n\n    case CLEAR_ITEM_FILTERS:\n      {\n        return DEFAULT_STATE_ITEM_FILTERS;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetItemFiltersRoot = state => state.itemFilters; // simplify the filters structure to:\n// [{ id: 'pe', name: 'Period', values: [{ id: 2019: name: '2019' }, {id: 'LAST_MONTH', name: 'Last month' }]}, ...]\n\nexport const sGetNamedItemFilters = createSelector([sGetItemFiltersRoot, sGetDimensions], (filters, dimensions) => Object.keys(filters).reduce((arr, id) => {\n  arr.push({\n    id: id,\n    name: dimensions.find(dimension => dimension.id === id).name,\n    values: filters[id].map(value => ({\n      id: value.id,\n      name: value.displayName || value.name\n    }))\n  });\n  return arr;\n}, []));","import { ADD_ITEM_FILTER, REMOVE_ITEM_FILTER, SET_ITEM_FILTERS, CLEAR_ITEM_FILTERS } from '../reducers/itemFilters';\nexport const FILTER_ORG_UNIT = 'ou'; // actions\n\nexport const acAddItemFilter = filter => ({\n  type: ADD_ITEM_FILTER,\n  filter\n});\nexport const acRemoveItemFilter = id => ({\n  type: REMOVE_ITEM_FILTER,\n  id\n});\nexport const acClearItemFilters = () => ({\n  type: CLEAR_ITEM_FILTERS\n});\nexport const acSetItemFilters = filters => ({\n  type: SET_ITEM_FILTERS,\n  filters\n});","import update from 'immutability-helper';\nimport { arrayToIdMap } from '../modules/util';\nexport const RECEIVED_MESSAGES = 'RECEIVED_MESSAGES';\nexport default ((state = {}, action) => {\n  switch (action.type) {\n    case RECEIVED_MESSAGES:\n      {\n        const conversations = arrayToIdMap(action.value);\n        const newState = update(state, {\n          $merge: conversations\n        });\n        return newState;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetMessagesRoot = state => state.messages;","import { getInstance } from 'd2';\nexport const getMessages = () => {\n  const fields = 'id,messageCount,lastUpdated,messageType,displayName,read,messages[id,read,sender[id,displayName],text,lastUpdated]';\n  const url = `/messageConversations?fields=${fields}&order=read:asc&pageSize=200`;\n  return getInstance().then(d2 => d2.Api.getApi().get(url)).catch(error => console.log('Error:', error));\n};","import { RECEIVED_MESSAGES } from '../../../reducers/messages';\nimport { getMessages } from '../../../api/messages';\n\nconst onError = (action, error) => {\n  console.log(`Error in action ${action}: ${error}`);\n  return error;\n};\n\nexport const receivedMessages = value => ({\n  type: RECEIVED_MESSAGES,\n  value\n});\nexport const tGetMessages = () => async dispatch => {\n  try {\n    const messages = await getMessages();\n    const {\n      messageConversations\n    } = messages;\n    return dispatch(receivedMessages(messageConversations));\n  } catch (err) {\n    return onError('Get Messages', err);\n  }\n};","export const RECEIVED_SNACKBAR_MESSAGE = 'RECEIVED_SNACKBAR_MESSAGE';\nexport const CLOSE_SNACKBAR = 'CLOSE_SNACKBAR';\nexport const DEFAULT_STATE_SNACKBAR = {\n  message: {},\n  duration: null,\n  open: false\n};\nexport default ((state = DEFAULT_STATE_SNACKBAR, action) => {\n  switch (action.type) {\n    case RECEIVED_SNACKBAR_MESSAGE:\n      {\n        return { ...state,\n          ...action.value\n        };\n      }\n\n    case CLOSE_SNACKBAR:\n      {\n        return DEFAULT_STATE_SNACKBAR;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetSnackbar = state => state.snackbar || DEFAULT_STATE_SNACKBAR;","import { RECEIVED_SNACKBAR_MESSAGE, CLOSE_SNACKBAR } from '../reducers/snackbar';\nexport const acReceivedSnackbarMessage = value => ({\n  type: RECEIVED_SNACKBAR_MESSAGE,\n  value\n});\nexport const acCloseSnackbar = () => ({\n  type: CLOSE_SNACKBAR\n});","import { orObject } from '../modules/util';\nimport objectClean from 'd2-utilizr/lib/objectClean';\n/** @module reducers/visualizations */\n\nexport const ADD_VISUALIZATION = 'ADD_VISUALIZATION';\nexport const SET_ACTIVE_VISUALIZATION_TYPE = 'SET_ACTIVE_VISUALIZATION_TYPE';\nexport const CLEAR_VISUALIZATIONS = 'CLEAR_VISUALIZATIONS';\nexport const DEFAULT_STATE_VISUALIZATIONS = {};\n\nconst isEmpty = p => p === undefined || p === null;\n\nexport default ((state = DEFAULT_STATE_VISUALIZATIONS, action) => {\n  switch (action.type) {\n    case ADD_VISUALIZATION:\n      {\n        return { ...state,\n          [action.value.id]: objectClean({ ...orObject(state[action.value.id]),\n            ...action.value\n          }, isEmpty)\n        };\n      }\n\n    case CLEAR_VISUALIZATIONS:\n      {\n        return DEFAULT_STATE_VISUALIZATIONS;\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetVisualizationsRoot = state => state.visualizations; // selectors level 1\n\nexport const sGetVisualization = (state, id) => {\n  return sGetVisualizationsRoot(state)[id];\n};","import { ADD_VISUALIZATION, CLEAR_VISUALIZATIONS } from '../reducers/visualizations';\nexport const acAddVisualization = value => ({\n  type: ADD_VISUALIZATION,\n  value\n});\nexport const acClearVisualizations = () => ({\n  type: CLEAR_VISUALIZATIONS\n});","import arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { getListItemFields, getFavoritesFields, getIdNameFields } from './metadata'; // Helper functions\n\nexport const onError = error => console.log('Error: ', error); // Dashboard item\n\nexport const getDashboardItemsFields = ({\n  withFavorite\n} = {}) => arrayClean(['id', 'type', 'shape', 'x', 'y', 'width~rename(w)', 'height~rename(h)', 'messages', 'text', 'appKey', `${getListItemFields().join(',')}`, withFavorite ? `${getFavoritesFields({\n  withDimensions: withFavorite.withDimensions\n}).join(',')}` : ``]); // Dashboard\n\nexport const getDashboardFields = ({\n  withItems,\n  withFavorite\n} = {}) => arrayClean([`${getIdNameFields().join(',')}`, 'description', 'displayDescription', 'favorite', `user[${getIdNameFields({\n  rename: true\n}).join(',')}]`, 'created', 'lastUpdated', 'access', withItems ? `dashboardItems[${getDashboardItemsFields({\n  withFavorite\n}).join(',')}]` : ``]);","import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { onError, getDashboardFields } from './index'; // Get \"all\" dashboards on startup\n\nexport const apiFetchDashboards = () => getInstance().then(d2 => d2.models.dashboard.list({\n  fields: [getDashboardFields().join(','), 'dashboardItems[id]'].join(','),\n  paging: 'false'\n})).catch(onError); // Get more info about selected dashboard\n\nexport const apiFetchDashboard = id => getInstance().then(d2 => d2.models.dashboard.get(id, {\n  fields: arrayClean(getDashboardFields({\n    withItems: true,\n    withFavorite: {\n      withDimensions: false\n    }\n  })).join(',')\n})).catch(onError); // Star dashboard\n\nexport const apiStarDashboard = (id, isStarred) => {\n  const url = `dashboards/${id}/favorite`;\n  getInstance().then(d2 => {\n    if (isStarred) {\n      d2.Api.getApi().post(url);\n    } else {\n      d2.Api.getApi().delete(url);\n    }\n  });\n};\nexport const apiDeleteDashboard = id => {\n  return getInstance().then(d2 => {\n    return d2.models.dashboards.get(id).then(dashboard => dashboard.delete());\n  }).catch(onError);\n};","import { getInstance } from 'd2';\nexport const NAMESPACE = 'dashboard';\nexport const hasNamespace = async (d2) => await d2.currentUser.dataStore.has(NAMESPACE);\nexport const getNamespace = async (d2, hasNamespace) => hasNamespace ? await d2.currentUser.dataStore.get(NAMESPACE) : await d2.currentUser.dataStore.create(NAMESPACE);\nexport const apiPostUserDataStoreValue = async (key, value) => {\n  const d2 = await getInstance();\n  const ns = await getNamespace(d2, hasNamespace);\n  ns.set(key, value);\n};\nexport const apiGetUserDataStoreValue = async (key, defaultValue) => {\n  const d2 = await getInstance();\n  const namespace = await getNamespace(d2, await hasNamespace(d2));\n  const hasKey = namespace?.keys?.find(k => k === key);\n\n  if (hasKey) {\n    return await namespace.get(key);\n  } else {\n    await apiPostUserDataStoreValue(key, defaultValue, namespace);\n    console.log('(These errors to /userDataStore can be ignored)');\n    return defaultValue;\n  }\n};","import React from 'react';\nimport { connect } from 'react-redux';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport PropTypes from 'prop-types';\nimport { sGetSnackbar } from '../../reducers/snackbar';\nimport { acCloseSnackbar } from '../../actions/snackbar';\nconst LOADING_DASHBOARD = 'LOADING_DASHBOARD';\nexport const loadingDashboardMsg = {\n  name: '',\n  type: LOADING_DASHBOARD\n};\n\nconst SnackbarMessageContent = ({\n  message\n}) => {\n  if (typeof message === 'object') {\n    //future message types:  switch(message.type)\n    return <span>\n                Loading <span style={{\n        fontWeight: 800\n      }}>{message.name}</span>{' '}\n                dashboard\n            </span>;\n  }\n\n  return message;\n};\n\nexport const SnackbarMessage = props => {\n  return <Snackbar style={{\n    zIndex: 10001\n  }} open={props.snackbarOpen} message={<SnackbarMessageContent message={props.snackbarMessage} />} autoHideDuration={props.snackbarDuration} onClose={props.onCloseSnackbar} />;\n};\n\nconst mapStateToProps = state => {\n  const {\n    message,\n    duration,\n    open\n  } = sGetSnackbar(state);\n  return {\n    snackbarOpen: open,\n    snackbarMessage: message,\n    snackbarDuration: duration\n  };\n};\n\nSnackbarMessage.propTypes = {\n  snackbarDuration: PropTypes.string,\n  snackbarMessage: PropTypes.object,\n  snackbarOpen: PropTypes.bool,\n  onCloseSnackbar: PropTypes.func\n};\nexport default connect(mapStateToProps, {\n  onCloseSnackbar: acCloseSnackbar\n})(SnackbarMessage);","import { getCustomDashboards, sGetDashboardById, EMPTY_DASHBOARD } from '../reducers/dashboards';\nimport { SET_SELECTED_ID, SET_SELECTED_ISLOADING, SET_SELECTED_SHOWDESCRIPTION, SET_SELECTED_ITEM_ACTIVE_TYPE, CLEAR_SELECTED_ITEM_ACTIVE_TYPES, sGetSelectedIsLoading, sGetSelectedId } from '../reducers/selected';\nimport { sGetUserUsername } from '../reducers/user';\nimport { acSetDashboardItems, acAppendDashboards } from './dashboards';\nimport { acClearItemFilters } from './itemFilters';\nimport { tGetMessages } from '../components/Item/MessagesItem/actions';\nimport { acReceivedSnackbarMessage, acCloseSnackbar } from './snackbar';\nimport { acAddVisualization, acClearVisualizations } from './visualizations';\nimport { apiFetchDashboard } from '../api/dashboards';\nimport { storePreferredDashboardId } from '../api/localStorage';\nimport { apiGetShowDescription, apiPostShowDescription } from '../api/description';\nimport { withShape } from '../components/ItemGrid/gridUtil';\nimport { loadingDashboardMsg } from '../components/SnackbarMessage/SnackbarMessage';\nimport { extractFavorite } from '../components/Item/VisualizationItem/plugin';\nimport { REPORT_TABLE, CHART, MAP, EVENT_REPORT, EVENT_CHART, MESSAGES } from '../modules/itemTypes'; // actions\n\nexport const acSetSelectedId = value => ({\n  type: SET_SELECTED_ID,\n  value\n});\nexport const acSetSelectedIsLoading = value => ({\n  type: SET_SELECTED_ISLOADING,\n  value\n});\nexport const acSetSelectedShowDescription = value => ({\n  type: SET_SELECTED_SHOWDESCRIPTION,\n  value\n});\nexport const acSetSelectedItemActiveType = (id, activeType) => {\n  const action = {\n    type: SET_SELECTED_ITEM_ACTIVE_TYPE,\n    id,\n    activeType\n  };\n  return action;\n};\nexport const acClearSelectedItemActiveTypes = () => ({\n  type: CLEAR_SELECTED_ITEM_ACTIVE_TYPES\n}); // thunks\n\nexport const tSetSelectedDashboardById = id => async (dispatch, getState) => {\n  dispatch(acSetSelectedIsLoading(true));\n  const snackbarTimeout = setTimeout(() => {\n    const dashboardName = (sGetDashboardById(getState(), id) || EMPTY_DASHBOARD).displayName;\n\n    if (sGetSelectedIsLoading(getState()) && dashboardName) {\n      loadingDashboardMsg.name = dashboardName;\n      dispatch(acReceivedSnackbarMessage({\n        message: loadingDashboardMsg,\n        open: true\n      }));\n    }\n  }, 500);\n\n  const onSuccess = selected => {\n    dispatch(acAppendDashboards(selected));\n    const customDashboard = getCustomDashboards(selected)[0];\n    dispatch(acSetDashboardItems(withShape(customDashboard.dashboardItems)));\n    storePreferredDashboardId(sGetUserUsername(getState()), id);\n\n    if (id !== sGetSelectedId(getState())) {\n      dispatch(acClearItemFilters());\n      dispatch(acClearVisualizations());\n      dispatch(acClearSelectedItemActiveTypes());\n    }\n\n    customDashboard.dashboardItems.forEach(item => {\n      switch (item.type) {\n        case REPORT_TABLE:\n        case CHART:\n        case MAP:\n        case EVENT_REPORT:\n        case EVENT_CHART:\n          dispatch(acAddVisualization(extractFavorite(item)));\n          break;\n\n        case MESSAGES:\n          dispatch(tGetMessages(id));\n          break;\n\n        default:\n          break;\n      }\n    });\n    dispatch(acSetSelectedId(id));\n    dispatch(acSetSelectedIsLoading(false));\n    clearTimeout(snackbarTimeout);\n    dispatch(acCloseSnackbar());\n    return selected;\n  };\n\n  const onError = error => {\n    console.log('Error: ', error);\n    return error;\n  };\n\n  try {\n    const dashboard = await apiFetchDashboard(id);\n    return onSuccess(dashboard);\n  } catch (err) {\n    return onError(err);\n  }\n};\nexport const tSetShowDescription = () => async dispatch => {\n  const onSuccess = value => {\n    dispatch(acSetSelectedShowDescription(value));\n  };\n\n  const onError = error => {\n    console.log('Error (apiGetShowDescription): ', error);\n    return error;\n  };\n\n  try {\n    const showDescription = await apiGetShowDescription();\n    return onSuccess(showDescription);\n  } catch (err) {\n    return onError(err);\n  }\n};\nexport const tUpdateShowDescription = value => async dispatch => {\n  const onSuccess = () => {\n    dispatch(acSetSelectedShowDescription(value));\n  };\n\n  const onError = error => {\n    console.log('Error (apiGetShowDescription): ', error);\n    return error;\n  };\n\n  try {\n    await apiPostShowDescription(value);\n    return onSuccess();\n  } catch (err) {\n    return onError(err);\n  }\n};","export const getPreferredDashboardId = username => localStorage.getItem(`dhis2.dashboard.current.${username}`) || undefined;\nexport const storePreferredDashboardId = (username, dashboardId) => {\n  localStorage.setItem(`dhis2.dashboard.current.${username}`, dashboardId);\n};","import { apiGetUserDataStoreValue, apiPostUserDataStoreValue } from './userDataStore';\nimport { DEFAULT_STATE_SELECTED_SHOWDESCRIPTION } from '../reducers/selected';\nconst KEY_SHOW_DESCRIPTION = 'showDescription';\nexport const apiGetShowDescription = async () => await apiGetUserDataStoreValue(KEY_SHOW_DESCRIPTION, DEFAULT_STATE_SELECTED_SHOWDESCRIPTION);\nexport const apiPostShowDescription = async (value) => await apiPostUserDataStoreValue(KEY_SHOW_DESCRIPTION, value);","import { SET_DASHBOARDS, ADD_DASHBOARDS, SET_DASHBOARD_STARRED, SET_DASHBOARD_DISPLAY_NAME, SET_DASHBOARD_ITEMS } from '../reducers/dashboards';\nimport { getCustomDashboards, sGetDashboardById, sGetDashboardsSortedByStarred } from '../reducers/dashboards';\nimport { NON_EXISTING_DASHBOARD_ID } from '../reducers/selected';\nimport { sGetUserUsername } from '../reducers/user';\nimport { tSetSelectedDashboardById, acSetSelectedId } from './selected';\nimport { apiFetchDashboards, apiStarDashboard, apiDeleteDashboard } from '../api/dashboards';\nimport { getPreferredDashboardId } from '../api/localStorage';\nimport { arrayToIdMap } from '../modules/util'; // actions\n\nexport const acSetDashboards = dashboards => ({\n  type: SET_DASHBOARDS,\n  value: arrayToIdMap(getCustomDashboards(dashboards))\n});\nexport const acAppendDashboards = dashboards => ({\n  type: ADD_DASHBOARDS,\n  value: arrayToIdMap(getCustomDashboards(dashboards))\n});\nexport const acSetDashboardStarred = (dashboardId, isStarred) => ({\n  type: SET_DASHBOARD_STARRED,\n  dashboardId: dashboardId,\n  value: isStarred\n});\nexport const acSetDashboardDisplayName = (dashboardId, value) => ({\n  type: SET_DASHBOARD_DISPLAY_NAME,\n  dashboardId,\n  value\n});\nexport const acSetDashboardItems = value => ({\n  type: SET_DASHBOARD_ITEMS,\n  value\n}); // thunks\n\nexport const tFetchDashboards = () => async dispatch => {\n  const collection = await apiFetchDashboards();\n  dispatch(acSetDashboards(collection.toArray()));\n};\nexport const tSelectDashboard = id => async (dispatch, getState) => {\n  const onError = error => {\n    console.log('Error (apiFetchDashboards): ', error);\n    return error;\n  };\n\n  try {\n    const state = getState();\n    let dashboardToSelect = null;\n\n    if (id) {\n      dashboardToSelect = sGetDashboardById(state, id) || null;\n    } else {\n      const preferredId = getPreferredDashboardId(sGetUserUsername(state));\n      const dash = sGetDashboardById(state, preferredId);\n      dashboardToSelect = preferredId && dash ? dash : sGetDashboardsSortedByStarred(state)[0];\n    }\n\n    if (dashboardToSelect) {\n      dispatch(tSetSelectedDashboardById(dashboardToSelect.id));\n    } else {\n      dispatch(acSetSelectedId(NON_EXISTING_DASHBOARD_ID));\n    }\n  } catch (err) {\n    return onError(err);\n  }\n};\nexport const tStarDashboard = (id, isStarred) => async dispatch => {\n  const onSuccess = id => {\n    dispatch(acSetDashboardStarred(id, isStarred));\n    return id;\n  };\n\n  const onError = error => {\n    console.log('Error (apiStarDashboard): ', error);\n    return error;\n  };\n\n  try {\n    await apiStarDashboard(id, isStarred);\n    return onSuccess(id);\n  } catch (err) {\n    return onError(err);\n  }\n};\nexport const tDeleteDashboard = id => async dispatch => {\n  try {\n    await apiDeleteDashboard(id);\n    await dispatch(tFetchDashboards());\n    return Promise.resolve();\n  } catch (err) {\n    console.log('Error (deleteDashboard): ', err);\n    return err;\n  }\n};","/** @module reducers/controlBar */\nimport { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\nexport const SET_CONTROLBAR_USER_ROWS = 'SET_CONTROLBAR_USER_ROWS';\nexport const DEFAULT_STATE_CONTROLBAR_ROWS = 1;\n\nconst userRows = (state = DEFAULT_STATE_CONTROLBAR_ROWS, action) => {\n  switch (action.type) {\n    case SET_CONTROLBAR_USER_ROWS:\n      return validateReducer(action.value, DEFAULT_STATE_CONTROLBAR_ROWS);\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  userRows\n});\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\n\nexport const sGetControlBarRoot = state => state.controlBar; // Selector dependency level 2\n\nexport const sGetControlBarUserRows = state => sGetControlBarRoot(state).userRows;","import { SET_CONTROLBAR_USER_ROWS } from '../reducers/controlBar';\nimport { apiGetControlBarRows } from '../api/controlBar'; // actions\n\nexport const acSetControlBarUserRows = rows => ({\n  type: SET_CONTROLBAR_USER_ROWS,\n  value: rows\n}); // thunks\n\nexport const tSetControlBarRows = () => async dispatch => {\n  const onSuccess = rows => {\n    dispatch(acSetControlBarUserRows(rows));\n  };\n\n  const onError = error => {\n    console.log('Error (apiGetControlBarRows): ', error);\n    return error;\n  };\n\n  try {\n    const controlBarRows = await apiGetControlBarRows();\n    return onSuccess(controlBarRows);\n  } catch (err) {\n    return onError(err);\n  }\n};","import { apiGetUserDataStoreValue, apiPostUserDataStoreValue } from './userDataStore';\nimport { DEFAULT_STATE_CONTROLBAR_ROWS } from '../reducers/controlBar';\nconst KEY_CONTROLBAR_ROWS = 'controlBarRows';\nexport const apiGetControlBarRows = async () => await apiGetUserDataStoreValue(KEY_CONTROLBAR_ROWS, DEFAULT_STATE_CONTROLBAR_ROWS);\nexport const apiPostControlBarRows = async (value) => await apiPostUserDataStoreValue(KEY_CONTROLBAR_ROWS, value);","export const SET_SETTINGS = 'SET_SETTINGS';\nexport const ADD_SETTINGS = 'ADD_SETTINGS';\nexport const DEFAULT_SETTINGS = {\n  keyDateFormat: 'yyyy-MM-dd',\n  keyAnalysisRelativePeriod: 'LAST_12_MONTHS',\n  keyAnalysisDigitGroupSeparator: 'SPACE',\n  displayNameProperty: 'displayName',\n  uiLocale: 'en',\n  rootOrganisationUnit: {}\n};\nexport default ((state = DEFAULT_SETTINGS, action) => {\n  switch (action.type) {\n    case SET_SETTINGS:\n      {\n        return Object.assign({}, action.value);\n      }\n\n    case ADD_SETTINGS:\n      {\n        return { ...state,\n          ...action.value\n        };\n      }\n\n    default:\n      return state;\n  }\n}); // Selectors\n\nexport const sGetSettings = state => state.settings;\nexport const sGetSettingsDisplayNameProperty = state => sGetSettings(state).displayNameProperty;\nexport const sGetRootOrgUnit = state => sGetSettings(state).rootOrganisationUnit;\nexport const sGetRelativePeriod = state => sGetSettings(state).keyAnalysisRelativePeriod;\nexport const sGetUiLocale = state => sGetSettings(state).uiLocale;","import { SET_DIMENSIONS } from '../reducers/dimensions';\nimport { apiFetchDimensions } from '@dhis2/analytics';\nimport { sGetSettingsDisplayNameProperty } from '../reducers/settings';\nexport const acSetDimensions = dimensions => ({\n  type: SET_DIMENSIONS,\n  value: dimensions\n});\nexport const tSetDimensions = d2 => async (dispatch, getState) => {\n  const onSuccess = dimensions => {\n    dispatch(acSetDimensions(dimensions));\n  };\n\n  const onError = error => {\n    console.log('Error (apiFetchDimensions): ', error);\n    return error;\n  };\n\n  try {\n    const displayNameProp = sGetSettingsDisplayNameProperty(getState());\n    const dimensions = await apiFetchDimensions(d2, displayNameProp); // filter out CATEGORY that are not of type ATTRIBUTE\n\n    const filteredDimensions = dimensions.filter(dim => dim.dimensionType !== 'CATEGORY' || dim.dimensionType === 'CATEGORY' && dim.dataDimensionType === 'ATTRIBUTE');\n    return onSuccess(filteredDimensions);\n  } catch (err) {\n    return onError(err);\n  }\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { colors } from '@dhis2/ui';\nimport classes from './styles/ControlBar.module.css';\nexport const DRAG_HANDLE_HEIGHT = 7;\n\nclass ControlBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dragging: false\n    };\n  }\n\n  onStartDrag = () => {\n    this.setState({\n      dragging: true\n    });\n    window.addEventListener('mousemove', this.onDrag);\n    window.addEventListener('mouseup', this.onEndDrag);\n  };\n  onDrag = event => {\n    event.preventDefault();\n    event.stopPropagation();\n    const newHeight = event.clientY;\n\n    if (this.props.onChangeHeight && newHeight !== this.props.height && newHeight > 0) {\n      requestAnimationFrame(() => {\n        this.props.onChangeHeight(newHeight);\n      });\n    }\n  };\n  onEndDrag = () => {\n    this.setState({\n      dragging: false\n    });\n    window.removeEventListener('mousemove', this.onDrag);\n    window.removeEventListener('mouseup', this.onEndDrag);\n\n    if (this.props.onEndDrag) {\n      this.props.onEndDrag();\n    }\n  };\n\n  renderDragHandle() {\n    return typeof this.props.onChangeHeight === 'function' ? <div className={classes.draghandle} style={{\n      height: DRAG_HANDLE_HEIGHT\n    }} onMouseDown={this.onStartDrag} /> : null;\n  }\n\n  render() {\n    const height = Math.max(this.props.height, 0) + DRAG_HANDLE_HEIGHT;\n    const rootStyle = Object.assign({\n      height,\n      backgroundColor: this.props.editMode ? colors.yellow050 : colors.white,\n      paddingBottom: DRAG_HANDLE_HEIGHT\n    }, // Disable animations while dragging\n    this.state.dragging ? {\n      transition: 'none'\n    } : {});\n    return <div style={rootStyle} className={classes.root}>\n                <div className={classes.content}>{this.props.children}</div>\n                {this.renderDragHandle()}\n            </div>;\n  }\n\n}\n\nControlBar.propTypes = {\n  /**\n   * The height of the control bar in number of lines. Must be a positive integer.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * If true, the background color of the control bar changes to indicate that edit mode is active.\n   */\n  editMode: PropTypes.bool.isRequired,\n\n  /**\n   * Callback function that is called when the control bar is resized.\n   * The callback receives one argument: The new height in pixels.\n   *\n   * If no callback is specified the control bar will not have a drag handle.\n   */\n  height: PropTypes.number.isRequired,\n\n  /**\n   * Callback function that is called when the control bar is dropped after being dragged.\n   * The callback receives one argument: The new height in pixels.\n   *\n   * Ignored if no \"onChangeHeight\" function is provided.\n   */\n  onChangeHeight: PropTypes.func,\n\n  /**\n   * The contents of the control bar.\n   */\n  onEndDrag: PropTypes.func\n};\nControlBar.defaultProps = {\n  onChangeHeight: null,\n  onEndDrag: null\n};\nexport default ControlBar;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst StarIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>;\n\nStarIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default StarIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Chip } from '@dhis2/ui';\nimport { Link } from 'react-router-dom';\nimport debounce from 'lodash/debounce';\nimport StarIcon from '../../icons/Star';\nimport { apiPostDataStatistics } from '../../api/dataStatistics';\nimport classes from './styles/DashboardItemChip.module.css';\nexport const DashboardItemChip = ({\n  starred,\n  selected,\n  label,\n  dashboardId\n}) => {\n  const chipProps = {\n    selected\n  };\n\n  if (starred) {\n    const selectedState = selected ? classes.selected : classes.unselected;\n    chipProps.icon = <StarIcon className={`${classes.icon} ${selectedState}`} />;\n  }\n\n  return <Link className={classes.link} to={`/${dashboardId}`} onClick={debounce(() => apiPostDataStatistics('DASHBOARD_VIEW', dashboardId), 500)}>\n            <Chip {...chipProps}>{label}</Chip>\n        </Link>;\n};\nDashboardItemChip.propTypes = {\n  dashboardId: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  selected: PropTypes.bool.isRequired,\n  starred: PropTypes.bool.isRequired,\n  classes: PropTypes.object\n};\nexport default DashboardItemChip;","import { getInstance } from 'd2';\nexport const apiPostDataStatistics = async (eventType, id) => {\n  const d2 = await getInstance();\n  const url = `dataStatistics?eventType=${eventType}&favorite=${id}`;\n  d2.Api.getApi().post(url);\n};","import React from 'react';\nimport { colors } from '@dhis2/ui';\n\nconst AddCircleIcon = () => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" fill={colors.teal600} viewBox=\"0 0 24 24\">\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm4 11h-3v3c0 .55-.45 1-1 1s-1-.45-1-1v-3H8c-.55 0-1-.45-1-1s.45-1 1-1h3V8c0-.55.45-1 1-1s1 .45 1 1v3h3c.55 0 1 .45 1 1s-.45 1-1 1z\" />\n    </svg>;\n\nexport default AddCircleIcon;","import React from 'react';\n\nconst SearchIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\" />\n    </svg>;\n\nexport default SearchIcon;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst ClearIcon = ({\n  className\n}) => <svg className={className} fill={colors.grey800} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n        <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>;\n\nClearIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default ClearIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ClearIcon from '../../icons/Clear';\nimport classes from './styles/ClearButton.module.css';\nexport const ClearButton = ({\n  onClear\n}) => <button className={classes.button} onClick={onClear}>\n        <span>\n            <ClearIcon className={classes.icon} color=\"action\" />\n        </span>\n    </button>;\nClearButton.propTypes = {\n  onClear: PropTypes.func.isRequired\n};\nexport default ClearButton;","import { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\nexport const SET_DASHBOARDS_FILTER_NAME = 'SET_DASHBOARDS_FILTER_NAME';\nexport const SET_DASHBOARDS_FILTER_OWNER = 'SET_DASHBOARDS_FILTER_OWNER';\nexport const SET_DASHBOARDS_FILTER_ORDER = 'SET_DASHBOARDS_FILTER_ORDER';\nexport const CLEAR_DASHBOARDS_FILTER_NAME = 'CLEAR_DASHBOARDS_FILTER_NAME';\nexport const ownerData = [{\n  id: 'ALL',\n  value: 'All users'\n}, {\n  id: 'ME',\n  value: 'Created by me'\n}, {\n  id: 'OTHERS',\n  value: 'Created by others'\n}];\nexport const orderData = [{\n  id: 'NAME:ASC',\n  value: 'Name (asc)'\n}, {\n  id: 'NAME:ASC',\n  value: 'Name (desc)'\n}, {\n  id: 'ITEMS:ASC',\n  value: 'Number of items (asc)'\n}, {\n  id: 'ITEMS:ASC',\n  value: 'Number of items (desc)'\n}, {\n  id: 'CREATED:ASC',\n  value: 'Created date (asc)'\n}, {\n  id: 'CREATED:ASC',\n  value: 'Created date (desc)'\n}];\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_NAME = '';\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_OWNER = ownerData[0].id;\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_ORDER = orderData[0].id;\n\nconst name = (state = DEFAULT_STATE_DASHBOARDS_FILTER_NAME, action) => {\n  switch (action.type) {\n    case SET_DASHBOARDS_FILTER_NAME:\n      return validateReducer(action.value, DEFAULT_STATE_DASHBOARDS_FILTER_NAME);\n\n    case CLEAR_DASHBOARDS_FILTER_NAME:\n      return DEFAULT_STATE_DASHBOARDS_FILTER_NAME;\n\n    default:\n      return state;\n  }\n};\n\nconst owner = (state = DEFAULT_STATE_DASHBOARDS_FILTER_OWNER, action) => {\n  switch (action.type) {\n    case SET_DASHBOARDS_FILTER_OWNER:\n      return validateReducer(action.value, DEFAULT_STATE_DASHBOARDS_FILTER_NAME);\n\n    default:\n      return state;\n  }\n};\n\nconst order = (state = DEFAULT_STATE_DASHBOARDS_FILTER_ORDER, action) => {\n  switch (action.type) {\n    case SET_DASHBOARDS_FILTER_ORDER:\n      return validateReducer(action.value, DEFAULT_STATE_DASHBOARDS_FILTER_ORDER);\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  name,\n  owner,\n  order\n}); // selectors\n\nexport const sGetDashboardsFilterRoot = state => state.dashboardsFilter; // selector dependency level 2\n\nexport const sGetFilterName = state => sGetDashboardsFilterRoot(state).name;\nexport const sGetFilterOwner = state => sGetDashboardsFilterRoot(state).owner;\nexport const sGetFilterOrder = state => sGetDashboardsFilterRoot(state).order;","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport cx from 'classnames';\nimport SearchIcon from '../../icons/Search';\nimport ClearButton from './ClearButton';\nimport { acSetFilterName } from '../../actions/dashboardsFilter';\nimport { sGetFilterName } from '../../reducers/dashboardsFilter';\nimport classes from './styles/Filter.module.css';\nexport const KEYCODE_ENTER = 13;\nexport const KEYCODE_ESCAPE = 27;\nexport const Filter = ({\n  filterText,\n  onChangeFilterText,\n  onKeypressEnter\n}) => {\n  const [focusedClassName, setFocusedClassName] = useState(null);\n\n  const setFilterValue = event => {\n    event.preventDefault();\n    onChangeFilterText(event.target.value);\n  };\n\n  const clearFilterText = () => {\n    onChangeFilterText();\n  };\n\n  const onKeyUp = event => {\n    switch (event.keyCode) {\n      case KEYCODE_ENTER:\n        onKeypressEnter();\n        clearFilterText();\n        break;\n\n      case KEYCODE_ESCAPE:\n        clearFilterText();\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const onFocus = event => {\n    event.preventDefault();\n    setFocusedClassName(classes.focused);\n  };\n\n  const onBlur = event => {\n    event.preventDefault();\n    setFocusedClassName(null);\n  };\n\n  return <div className={cx(classes.container, `${focusedClassName}`)} onFocus={onFocus} onBlur={onBlur}>\n            <SearchIcon className={classes.searchIcon} />\n            <input className={classes.input} type=\"text\" placeholder={i18n.t('Search for a dashboard')} onChange={setFilterValue} onKeyUp={onKeyUp} value={filterText} />\n            {filterText && <ClearButton onClear={() => clearFilterText()} />}\n        </div>;\n};\nFilter.propTypes = {\n  filterText: PropTypes.string,\n  onChangeFilterText: PropTypes.func,\n  onKeypressEnter: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  filterText: sGetFilterName(state)\n});\n\nconst mapDispatchToProps = {\n  onChangeFilterText: acSetFilterName\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);","import { SET_DASHBOARDS_FILTER_NAME, SET_DASHBOARDS_FILTER_OWNER, SET_DASHBOARDS_FILTER_ORDER, CLEAR_DASHBOARDS_FILTER_NAME } from '../reducers/dashboardsFilter'; // actions\n\nexport const acSetFilterName = value => ({\n  type: SET_DASHBOARDS_FILTER_NAME,\n  value\n});\nexport const acClearFilterName = () => ({\n  type: CLEAR_DASHBOARDS_FILTER_NAME\n});\nexport const acSetFilterOwner = value => ({\n  type: SET_DASHBOARDS_FILTER_OWNER,\n  value\n});\nexport const acSetFilterOrder = value => ({\n  type: SET_DASHBOARDS_FILTER_ORDER,\n  value\n});","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport classes from './styles/ShowMoreButton.module.css';\nexport const SHOWMORE_BAR_HEIGHT = 16;\nexport const ShowMoreButton = ({\n  onClick,\n  isMaxHeight,\n  disabled\n}) => {\n  return <div className={classes.container}>\n            {disabled ? <div className={classes.disabled}>{i18n.t('Show more')}</div> : <div className={classes.showMore} onClick={onClick}>\n                    {isMaxHeight ? i18n.t('Show less') : i18n.t('Show more')}\n                </div>}\n        </div>;\n};\nShowMoreButton.propTypes = {\n  disabled: PropTypes.bool,\n  isMaxHeight: PropTypes.bool,\n  onClick: PropTypes.func\n};\nexport default ShowMoreButton;","import { SHOWMORE_BAR_HEIGHT } from './ShowMoreButton';\nexport const CONTROL_BAR_ROW_HEIGHT = 40;\nexport const FIRST_ROW_PADDING_HEIGHT = 10;\nexport const MIN_ROW_COUNT = 1;\nexport const HEADERBAR_HEIGHT = 48;\nconst CONTROL_BAR_OUTER_HEIGHT_DIFF = FIRST_ROW_PADDING_HEIGHT + SHOWMORE_BAR_HEIGHT - 2; // 2 pixel \"adjustment\"\n\nexport const getRowsHeight = rows => {\n  return rows * CONTROL_BAR_ROW_HEIGHT;\n};\nexport const getNumRowsFromHeight = height => {\n  return Math.floor((height - CONTROL_BAR_OUTER_HEIGHT_DIFF) / CONTROL_BAR_ROW_HEIGHT);\n};\nexport const getControlBarHeight = rows => {\n  return getRowsHeight(rows) + CONTROL_BAR_OUTER_HEIGHT_DIFF;\n};","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport cx from 'classnames';\nimport arraySort from 'd2-utilizr/lib/arraySort';\nimport PropTypes from 'prop-types';\nimport ControlBar from './ControlBar';\nimport Chip from './DashboardItemChip';\nimport AddCircleIcon from '../../icons/AddCircle';\nimport Filter from './Filter';\nimport ShowMoreButton from './ShowMoreButton';\nimport { FIRST_ROW_PADDING_HEIGHT, MIN_ROW_COUNT, getRowsHeight, getControlBarHeight, getNumRowsFromHeight } from './controlBarDimensions';\nimport { sGetFilterName } from '../../reducers/dashboardsFilter';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { sGetAllDashboards } from '../../reducers/dashboards';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { acSetControlBarUserRows } from '../../actions/controlBar';\nimport { apiPostControlBarRows } from '../../api/controlBar';\nimport classes from './styles/DashboardsBar.module.css';\nexport const MAX_ROW_COUNT = 10;\nexport const DashboardsBar = ({\n  userRows,\n  onChangeHeight,\n  history,\n  dashboards,\n  selectedId,\n  filterText\n}) => {\n  const [rows, setRows] = useState(MIN_ROW_COUNT);\n  useEffect(() => {\n    setRows(userRows);\n  }, [userRows]);\n\n  const isMaxHeight = () => rows === MAX_ROW_COUNT;\n\n  const adjustHeight = newHeight => {\n    const newRows = Math.max(MIN_ROW_COUNT, getNumRowsFromHeight(newHeight - 52) // don't rush the transition to a bigger row count\n    );\n\n    if (newRows !== rows) {\n      onChangeHeight(Math.min(newRows, MAX_ROW_COUNT));\n    }\n  };\n\n  const onEndDrag = () => apiPostControlBarRows(rows);\n\n  const toggleMaxHeight = () => {\n    const newRows = isMaxHeight() ? userRows : MAX_ROW_COUNT;\n    setRows(newRows);\n  };\n\n  const onSelectDashboard = () => {\n    const id = getFilteredDashboards()[0].id;\n    history.push(id);\n  };\n\n  const getFilteredDashboards = () => {\n    const filteredDashboards = arraySort(Object.values(dashboards).filter(d => d.displayName.toLowerCase().includes(filterText.toLowerCase())), 'ASC', 'displayName');\n    return [...filteredDashboards.filter(d => d.starred), ...filteredDashboards.filter(d => !d.starred)];\n  };\n\n  const overflowYClass = isMaxHeight() ? classes.overflowYAuto : classes.overflowYHidden;\n  return <ControlBar height={getControlBarHeight(rows)} onChangeHeight={adjustHeight} onEndDrag={onEndDrag} editMode={false}>\n            <div className={cx(classes.container, overflowYClass)} style={{\n      height: getRowsHeight(rows) + FIRST_ROW_PADDING_HEIGHT\n    }}>\n                <div className={classes.leftControls}>\n                    <Link className={classes.newLink} to={'/new'}>\n                        <AddCircleIcon />\n                    </Link>\n                    <Filter onKeypressEnter={onSelectDashboard} />\n                </div>\n                {getFilteredDashboards().map(dashboard => <Chip key={dashboard.id} label={dashboard.displayName} starred={dashboard.starred} dashboardId={dashboard.id} selected={dashboard.id === selectedId} />)}\n            </div>\n            <ShowMoreButton onClick={toggleMaxHeight} isMaxHeight={isMaxHeight()} disabled={userRows === MAX_ROW_COUNT} />\n        </ControlBar>;\n};\nDashboardsBar.propTypes = {\n  dashboards: PropTypes.object,\n  filterText: PropTypes.string,\n  history: PropTypes.object,\n  selectedId: PropTypes.string,\n  userRows: PropTypes.number,\n  onChangeHeight: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  dashboards: sGetAllDashboards(state),\n  filterText: sGetFilterName(state),\n  selectedId: sGetSelectedId(state),\n  userRows: sGetControlBarUserRows(state)\n});\n\nconst mapDispatchToProps = {\n  onChangeHeight: acSetControlBarUserRows\n};\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(DashboardsBar));","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { getControlBarHeight, MIN_ROW_COUNT } from '../ControlBar/controlBarDimensions';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { DRAG_HANDLE_HEIGHT } from '../ControlBar/ControlBar';\n\nconst DashboardVerticalOffset = props => {\n  const rows = props.editMode ? MIN_ROW_COUNT : props.userRows;\n  const marginTop = getControlBarHeight(rows) + DRAG_HANDLE_HEIGHT;\n  return <div className=\"page-container-top-margin\" style={{\n    marginTop\n  }} />;\n};\n\nconst mapStateToProps = state => ({\n  userRows: sGetControlBarUserRows(state)\n});\n\nDashboardVerticalOffset.propTypes = {\n  editMode: PropTypes.bool,\n  userRows: PropTypes.number\n};\nexport default connect(mapStateToProps)(DashboardVerticalOffset);","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nexport const NoContentMessage = ({\n  text\n}) => <div style={{\n  padding: '50px 10px',\n  textAlign: 'center',\n  fontSize: '15px',\n  fontWeight: 500,\n  color: colors.grey600\n}}>\n        {text}\n    </div>;\nNoContentMessage.propTypes = {\n  text: PropTypes.string\n};\nexport default NoContentMessage;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { MenuItem, colors } from '@dhis2/ui';\n\nconst HeaderMenuItem = ({\n  title\n}) => <MenuItem dense key={title} disabled label={<span style={{\n  color: colors.grey800,\n  fontWeight: '600'\n}}>\n                {title}\n            </span>} />;\n\nHeaderMenuItem.propTypes = {\n  title: PropTypes.string.isRequired\n};\nexport default HeaderMenuItem;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst LaunchIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\" fill={colors.grey600} viewBox=\"0 0 24 24\">\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z\" />\n    </svg>;\n\nLaunchIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default LaunchIcon;","import React from 'react';\nimport { MenuItem, colors } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport { visTypeIcons } from '@dhis2/analytics';\nimport { getItemIcon, VISUALIZATION } from '../../modules/itemTypes';\nimport LaunchIcon from '../../icons/Launch';\nimport classes from './styles/ContentMenuItem.module.css';\n\nconst LaunchLink = ({\n  url\n}) => <a onClick={e => e.stopPropagation()} className={classes.launchLink} target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n        <LaunchIcon />\n    </a>;\n\nLaunchLink.propTypes = {\n  url: PropTypes.string\n};\n\nconst InsertButton = () => <button className={classes.buttonInsert}>{i18n.t('Insert')}</button>;\n\nconst ContentMenuItem = ({\n  type,\n  name,\n  onInsert,\n  url,\n  visType\n}) => {\n  const ItemIcon = getItemIcon(type);\n  const renderedItemIcon = type === VISUALIZATION ? visTypeIcons[visType] : <ItemIcon style={{\n    fill: colors.grey600\n  }} />;\n  return <MenuItem dense onClick={onInsert} label={<div className={classes.menuItem}>\n                    <div className={classes.label}>\n                        <span style={{\n        marginRight: '6px'\n      }}>\n                            {renderedItemIcon}\n                        </span>\n                        <span>{name}</span>\n                        {url ? <LaunchLink url={url} /> : null}\n                    </div>\n                    <InsertButton />\n                </div>} />;\n};\n\nContentMenuItem.propTypes = {\n  name: PropTypes.string,\n  type: PropTypes.string,\n  url: PropTypes.string,\n  visType: PropTypes.string,\n  onInsert: PropTypes.func\n};\nexport default ContentMenuItem;","/** @module reducers/editDashboard */\nimport update from 'immutability-helper';\nimport isEmpty from 'lodash/isEmpty';\nimport { orArray, orObject } from '../modules/util';\nexport const RECEIVED_EDIT_DASHBOARD = 'RECEIVED_EDIT_DASHBOARD';\nexport const RECEIVED_NOT_EDITING = 'RECEIVED_NOT_EDITING';\nexport const START_NEW_DASHBOARD = 'START_NEW_DASHBOARD';\nexport const RECEIVED_TITLE = 'RECEIVED_TITLE';\nexport const RECEIVED_DESCRIPTION = 'RECEIVED_DESCRIPTION';\nexport const ADD_DASHBOARD_ITEM = 'ADD_DASHBOARD_ITEM';\nexport const REMOVE_DASHBOARD_ITEM = 'REMOVE_DASHBOARD_ITEM';\nexport const UPDATE_DASHBOARD_ITEM = 'UPDATE_DASHBOARD_ITEM';\nexport const RECEIVED_DASHBOARD_LAYOUT = 'RECEIVED_DASHBOARD_LAYOUT';\nexport const SET_PRINT_PREVIEW_VIEW = 'SET_PRINT_PREVIEW_VIEW';\nexport const CLEAR_PRINT_PREVIEW_VIEW = 'CLEAR_PRINT_PREVIEW_VIEW';\nexport const DEFAULT_STATE_EDIT_DASHBOARD = {};\nexport const NEW_DASHBOARD_STATE = {\n  id: '',\n  name: '',\n  access: {},\n  description: '',\n  dashboardItems: [],\n  printPreviewView: false\n};\nexport default ((state = DEFAULT_STATE_EDIT_DASHBOARD, action) => {\n  switch (action.type) {\n    case RECEIVED_EDIT_DASHBOARD:\n      {\n        const newState = {};\n        Object.keys(NEW_DASHBOARD_STATE).map(k => newState[k] = action.value[k]);\n        newState.printPreviewView = false;\n        return newState;\n      }\n\n    case RECEIVED_NOT_EDITING:\n      return DEFAULT_STATE_EDIT_DASHBOARD;\n\n    case SET_PRINT_PREVIEW_VIEW:\n      return Object.assign({}, state, {\n        printPreviewView: true\n      });\n\n    case CLEAR_PRINT_PREVIEW_VIEW:\n      return Object.assign({}, state, {\n        printPreviewView: false\n      });\n\n    case START_NEW_DASHBOARD:\n      return NEW_DASHBOARD_STATE;\n\n    case RECEIVED_TITLE:\n      {\n        return Object.assign({}, state, {\n          name: action.value\n        });\n      }\n\n    case RECEIVED_DESCRIPTION:\n      {\n        return Object.assign({}, state, {\n          description: action.value\n        });\n      }\n\n    case ADD_DASHBOARD_ITEM:\n      if (!action.value.position) {\n        return update(state, {\n          dashboardItems: {\n            $unshift: [action.value]\n          }\n        });\n      }\n\n      return update(state, {\n        dashboardItems: {\n          $splice: [[parseInt(action.value.position), 0, action.value]]\n        }\n      });\n\n    case REMOVE_DASHBOARD_ITEM:\n      {\n        const idToRemove = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === idToRemove);\n\n        if (dashboardItemIndex > -1) {\n          return update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1]]\n            }\n          });\n        }\n\n        return state;\n      }\n\n    case RECEIVED_DASHBOARD_LAYOUT:\n      {\n        const stateItems = orArray(state.dashboardItems);\n        let layoutHasChanged = false;\n        const newStateItems = action.value.map(({\n          x,\n          y,\n          w,\n          h,\n          i\n        }) => {\n          const stateItem = stateItems.find(si => si.id === i);\n\n          if (!(stateItem.x === x && stateItem.y === y && stateItem.w === w && stateItem.h === h)) {\n            layoutHasChanged = true;\n            return Object.assign({}, stateItem, {\n              w,\n              h,\n              x,\n              y\n            });\n          }\n\n          return stateItem;\n        });\n        return layoutHasChanged ? { ...state,\n          dashboardItems: newStateItems\n        } : state;\n      }\n\n    case UPDATE_DASHBOARD_ITEM:\n      {\n        const dashboardItem = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === dashboardItem.id);\n\n        if (dashboardItemIndex > -1) {\n          const newState = update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1, Object.assign({}, dashboardItem)]]\n            }\n          });\n          return newState;\n        }\n\n        return state;\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetEditDashboardRoot = state => state.editDashboard; // selectors\n\nexport const sGetIsEditing = state => !isEmpty(state.editDashboard);\nexport const sGetIsPrintPreviewView = state => sGetEditDashboardRoot(state).printPreviewView;\nexport const sGetIsNewDashboard = state => {\n  return !isEmpty(state.editDashboard) && sGetEditDashboardRoot(state).id === '';\n};\nexport const sGetEditDashboardName = state => sGetEditDashboardRoot(state).name;\nexport const sGetEditDashboardDescription = state => sGetEditDashboardRoot(state).description;\nexport const sGetEditDashboardItems = state => orObject(sGetEditDashboardRoot(state)).dashboardItems;","import { getInstance } from 'd2';\n\nconst onError = error => console.log('Error: ', error);\n\nconst saveDashboard = (dashboard, data) => {\n  const {\n    name,\n    description,\n    dashboardItems\n  } = data;\n  dashboard.name = name;\n  dashboard.description = description;\n  dashboard.dashboardItems = dashboardItems.map(item => Object.assign({}, item, {\n    width: item.w,\n    height: item.h\n  }));\n  return dashboard.save().then(msg => msg.response.uid);\n};\n\nexport const updateDashboard = data => {\n  return getInstance().then(d2 => {\n    return d2.models.dashboards.get(data.id).then(dashboard => saveDashboard(dashboard, data));\n  }).catch(onError);\n};\nexport const postDashboard = data => {\n  return getInstance().then(d2 => {\n    const dashboard = d2.models.dashboards.create();\n    return saveDashboard(dashboard, data);\n  });\n};","import { generateUid } from 'd2/uid';\nimport i18n from '@dhis2/d2-i18n';\nimport { RECEIVED_EDIT_DASHBOARD, START_NEW_DASHBOARD, RECEIVED_NOT_EDITING, RECEIVED_TITLE, RECEIVED_DESCRIPTION, RECEIVED_DASHBOARD_LAYOUT, ADD_DASHBOARD_ITEM, UPDATE_DASHBOARD_ITEM, REMOVE_DASHBOARD_ITEM, SET_PRINT_PREVIEW_VIEW, CLEAR_PRINT_PREVIEW_VIEW } from '../reducers/editDashboard';\nimport { sGetEditDashboardRoot } from '../reducers/editDashboard';\nimport { updateDashboard, postDashboard } from '../api/editDashboard';\nimport { tSetSelectedDashboardById } from '../actions/selected';\nimport { NEW_ITEM_SHAPE, getGridItemProperties, getPageBreakItemShape, getPrintTitlePageItemShape } from '../components/ItemGrid/gridUtil';\nimport { itemTypeMap, PAGEBREAK, PRINT_TITLE_PAGE } from '../modules/itemTypes';\nimport { convertUiItemsToBackend } from '../modules/uiBackendItemConverter';\n\nconst onError = error => {\n  console.log('Error (Saving Dashboard): ', error);\n  return error;\n}; // actions\n\n\nexport const acSetEditDashboard = (dashboard, items) => {\n  const val = { ...dashboard,\n    dashboardItems: items\n  };\n  return {\n    type: RECEIVED_EDIT_DASHBOARD,\n    value: val\n  };\n};\nexport const acSetEditNewDashboard = () => ({\n  type: START_NEW_DASHBOARD\n});\nexport const acClearEditDashboard = () => ({\n  type: RECEIVED_NOT_EDITING\n});\nexport const acSetPrintPreviewView = () => ({\n  type: SET_PRINT_PREVIEW_VIEW\n});\nexport const acClearPrintPreviewView = () => ({\n  type: CLEAR_PRINT_PREVIEW_VIEW\n});\nexport const acSetDashboardTitle = value => ({\n  type: RECEIVED_TITLE,\n  value\n});\nexport const acSetDashboardDescription = value => ({\n  type: RECEIVED_DESCRIPTION,\n  value\n});\nexport const acUpdateDashboardLayout = value => ({\n  type: RECEIVED_DASHBOARD_LAYOUT,\n  value\n});\nexport const acAddDashboardItem = item => {\n  const type = item.type;\n  delete item.type;\n  const itemPropName = itemTypeMap[type].propName;\n  const id = generateUid();\n  const gridItemProperties = getGridItemProperties(id);\n  let shape;\n\n  if (type === PAGEBREAK) {\n    const yPos = item.yPos || 0;\n    shape = getPageBreakItemShape(yPos, item.isStatic);\n  } else if (type === PRINT_TITLE_PAGE) {\n    shape = getPrintTitlePageItemShape();\n  } else {\n    shape = NEW_ITEM_SHAPE;\n  }\n\n  return {\n    type: ADD_DASHBOARD_ITEM,\n    value: {\n      id,\n      type,\n      position: item.position || null,\n      [itemPropName]: item.content,\n      ...NEW_ITEM_SHAPE,\n      ...gridItemProperties,\n      ...shape\n    }\n  };\n};\nexport const acUpdateDashboardItem = item => ({\n  type: UPDATE_DASHBOARD_ITEM,\n  value: item\n});\nexport const acRemoveDashboardItem = value => ({\n  type: REMOVE_DASHBOARD_ITEM,\n  value\n}); // thunks\n\nexport const tSaveDashboard = () => async (dispatch, getState) => {\n  const dashboard = sGetEditDashboardRoot(getState());\n  const dashboardToSave = { ...dashboard,\n    dashboardItems: convertUiItemsToBackend(dashboard.dashboardItems),\n    name: dashboard.name || i18n.t('Untitled dashboard')\n  };\n\n  try {\n    const dashboardId = dashboardToSave.id ? await updateDashboard(dashboardToSave) : await postDashboard(dashboardToSave);\n    dispatch(acClearEditDashboard());\n    await dispatch(tSetSelectedDashboardById(dashboardId));\n    return Promise.resolve(dashboardId);\n  } catch (error) {\n    onError(error);\n  }\n};","import i18n from '@dhis2/d2-i18n';\nimport { VISUALIZATION, MAP, EVENT_CHART, EVENT_REPORT, USERS, REPORTS, RESOURCES, APP, MESSAGES, TEXT, SPACER } from '../../modules/itemTypes';\nexport const singleItems = [{\n  id: 'additional',\n  header: i18n.t('Additional items'),\n  items: [{\n    type: TEXT,\n    name: i18n.t('Text box'),\n    content: ''\n  }, {\n    type: MESSAGES,\n    name: i18n.t('Messages'),\n    content: 'true'\n  }, {\n    type: SPACER,\n    name: i18n.t('Spacer'),\n    content: ''\n  }]\n}]; // categorizedItems are grouped in the item selector menu\n\nexport const categorizedItems = [VISUALIZATION, MAP, EVENT_REPORT, EVENT_CHART, USERS, REPORTS, RESOURCES, APP]; // listItemTypes are included in a single dashboard item\n\nexport const listItemTypes = [REPORTS, RESOURCES, USERS];","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { MenuItem, Divider } from '@dhis2/ui';\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\nimport { tAddListItemContent } from './actions';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\nimport { getItemUrl, APP, VISUALIZATION } from '../../modules/itemTypes';\nimport { categorizedItems, listItemTypes } from './selectableItems';\nimport classes from './styles/CategorizedMenuGroup.module.css';\n\nclass CategorizedMenuGroup extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      seeMore: false\n    };\n  }\n\n  addItem = item => () => {\n    const {\n      type,\n      acAddDashboardItem,\n      tAddListItemContent\n    } = this.props;\n\n    if (type === APP) {\n      acAddDashboardItem({\n        type,\n        content: item.key\n      });\n    } else {\n      const newItem = {\n        id: item.id,\n        name: item.displayName || item.name\n      };\n\n      if (listItemTypes.includes(type)) {\n        tAddListItemContent(type, newItem);\n      } else {\n        acAddDashboardItem({\n          type,\n          content: newItem\n        });\n      }\n    }\n  };\n  toggleSeeMore = () => {\n    this.setState({\n      seeMore: !this.state.seeMore\n    });\n    this.props.onChangeItemsLimit(this.props.type);\n  };\n\n  render() {\n    const {\n      title,\n      type,\n      items,\n      hasMore\n    } = this.props;\n    return <>\n                <HeaderMenuItem title={title} />\n                {items.map(item => {\n        const itemUrl = getItemUrl(type, item, this.context.d2);\n        return <ContentMenuItem key={item.id || item.key} type={type} visType={type === VISUALIZATION ? item.type : type} name={item.displayName || item.name} onInsert={this.addItem(item)} url={itemUrl} />;\n      })}\n                {hasMore ? <MenuItem dense key={`showmore${title}`} onClick={this.toggleSeeMore} label={<button className={classes.showMoreButton}>\n                                {this.state.seeMore ? i18n.t('Show fewer') : i18n.t('Show more')}\n                            </button>} /> : null}\n                <Divider margin=\"8px 0px\" />\n            </>;\n  }\n\n}\n\nCategorizedMenuGroup.propTypes = {\n  items: PropTypes.array.isRequired,\n  title: PropTypes.string.isRequired,\n  type: PropTypes.oneOf(categorizedItems).isRequired,\n  onChangeItemsLimit: PropTypes.func.isRequired,\n  acAddDashboardItem: PropTypes.func,\n  hasMore: PropTypes.bool,\n  tAddListItemContent: PropTypes.func\n};\nCategorizedMenuGroup.contextTypes = {\n  d2: PropTypes.object.isRequired\n};\nexport default connect(null, {\n  acAddDashboardItem,\n  tAddListItemContent\n})(CategorizedMenuGroup);","import { sGetEditDashboardRoot } from '../../reducers/editDashboard';\nimport { itemTypeMap } from '../../modules/itemTypes';\nimport { acAddDashboardItem, acUpdateDashboardItem } from '../../actions/editDashboard';\nexport const tAddListItemContent = (type, content) => (dispatch, getState) => {\n  const state = getState();\n  const listItemType = itemTypeMap[type].propName;\n  const dashboardItems = sGetEditDashboardRoot(state).dashboardItems;\n  const dashboardItemIndex = dashboardItems.findIndex(item => item.type === type);\n  let dashboardItem; // Reports/Resources/Users dashboard item type already present in dashboard\n\n  if (dashboardItemIndex > -1) {\n    dashboardItem = dashboardItems[dashboardItemIndex];\n    dashboardItem[listItemType].push(content);\n    dispatch(acUpdateDashboardItem(dashboardItem));\n  } else {\n    dashboardItem = {\n      type: type,\n      content: [content]\n    };\n    dispatch(acAddDashboardItem(dashboardItem));\n  }\n};","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\nexport const SinglesMenuGroup = ({\n  acAddDashboardItem,\n  category\n}) => {\n  const addToDashboard = ({\n    type,\n    content\n  }) => () => {\n    acAddDashboardItem({\n      type,\n      content\n    });\n  };\n\n  return <>\n            <HeaderMenuItem title={category.header} />\n            {category.items.map(item => <ContentMenuItem key={item.type} type={item.type} name={item.name} onInsert={addToDashboard(item)} />)}\n        </>;\n};\nSinglesMenuGroup.propTypes = {\n  acAddDashboardItem: PropTypes.func,\n  category: PropTypes.object\n};\nexport default connect(null, {\n  acAddDashboardItem\n})(SinglesMenuGroup);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport Popover from '@material-ui/core/Popover';\nimport { InputField, Menu } from '@dhis2/ui';\nimport CategorizedMenuGroup from './CategorizedMenuGroup';\nimport SinglesMenuGroup from './SinglesMenuGroup';\nimport { singleItems, categorizedItems } from './selectableItems';\nimport { itemTypeMap, getDefaultItemCount } from '../../modules/itemTypes';\nimport './styles/ItemSelector.css';\n\nconst ItemSearchField = props => <InputField name=\"Dashboard item search\" label={i18n.t('Search for items to add to this dashboard')} type=\"text\" onChange={props.onChange} onFocus={props.onFocus} value={props.value} />;\n\nclass ItemSelector extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      anchorEl: null,\n      open: false,\n      maxOptions: new Set(),\n      items: undefined,\n      filter: ''\n    };\n  }\n\n  closeList = () => {\n    this.setState({\n      open: false,\n      filter: ''\n    });\n  };\n  openList = (_, event) => {\n    this.fetchItems();\n    this.setState({\n      anchorEl: event.currentTarget,\n      open: true\n    });\n  };\n  setFilter = (_, event) => {\n    this.setState({\n      filter: event.target.value\n    }, this.fetchItems);\n  };\n  getCategorizedMenuGroups = () => categorizedItems.filter(type => {\n    const itemType = itemTypeMap[type];\n    return this.state.items && this.state.items[itemType.endPointName];\n  }).map(type => {\n    const itemType = itemTypeMap[type];\n    const itemCount = getDefaultItemCount(type);\n    const allItems = this.state.items[itemType.endPointName];\n    const hasMore = allItems.length > itemCount;\n    const items = this.state.maxOptions.has(itemType.id) ? allItems : allItems.slice(0, itemCount);\n    return <CategorizedMenuGroup key={type} type={type} title={itemType.pluralTitle} items={items} onChangeItemsLimit={this.fetchItems} hasMore={hasMore} />;\n  });\n  getSinglesMenuGroups = () => singleItems.map(category => <SinglesMenuGroup key={category.id} category={category} />);\n  getMenuGroups = () => this.getCategorizedMenuGroups().concat(this.getSinglesMenuGroups());\n  fetchItems = async type => {\n    if (type) {\n      const maxOptions = this.state.maxOptions;\n\n      if (maxOptions.has(type)) {\n        maxOptions.delete(type);\n      } else {\n        maxOptions.add(type);\n      }\n\n      this.setState({\n        maxOptions\n      });\n    } else {\n      this.setState({\n        maxOptions: new Set()\n      });\n    }\n\n    let queryString = '?count=11';\n\n    if ([...this.state.maxOptions.values()].length) {\n      queryString += '&max=' + [...this.state.maxOptions.values()].join('&max=');\n    }\n\n    const filter = this.state.filter ? `/${this.state.filter}` : '';\n    this.context.d2.Api.getApi().get(`dashboards/q${filter}${queryString}`).then(response => this.setState({\n      items: response\n    })).catch(console.error);\n  };\n\n  render() {\n    return <>\n                <ItemSearchField value={this.state.filter} onChange={this.setFilter} onFocus={this.openList} />\n                <Popover className=\"dashboard-item-selector\" open={this.state.open} onClose={this.closeList} anchorEl={this.state.anchorEl} anchorOrigin={{\n        horizontal: 'left',\n        vertical: 'bottom'\n      }} transformOrigin={{\n        horizontal: 'left',\n        vertical: 'top'\n      }} style={{\n        height: '70vh'\n      }} PaperProps={{\n        style: {\n          width: '700px'\n        }\n      }} disableAutoFocus={true} disableEnforceFocus={true} disableRestoreFocus={true}>\n                    <Menu maxWidth={'700px'}>{this.getMenuGroups()}</Menu>\n                </Popover>\n            </>;\n  }\n\n}\n\nItemSearchField.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n  onFocus: PropTypes.func\n};\nItemSelector.contextTypes = {\n  d2: PropTypes.object.isRequired\n};\nexport default ItemSelector;","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { InputField, TextAreaField } from '@dhis2/ui';\nimport ItemSelector from '../ItemSelector/ItemSelector';\nimport { acSetDashboardTitle, acSetDashboardDescription } from '../../actions/editDashboard';\nimport { orObject } from '../../modules/util';\nimport { sGetEditDashboardRoot } from '../../reducers/editDashboard';\nimport classes from './styles/EditTitleBar.module.css';\nexport const EditTitleBar = ({\n  name,\n  description,\n  onChangeTitle,\n  onChangeDescription\n}) => {\n  const updateTitle = (_, e) => {\n    onChangeTitle(e.target.value);\n  };\n\n  const updateDescription = (_, e) => {\n    onChangeDescription(e.target.value);\n  };\n\n  return <section className={classes.section}>\n            <div className={classes.titleDescription}>\n                <InputField className={classes.title} name=\"Dashboard title input\" label={i18n.t('Dashboard title')} type=\"text\" onChange={updateTitle} value={name} placeholder={i18n.t('Untitled dashboard')} />\n                <TextAreaField className={classes.description} name=\"Dashboard description input\" label={i18n.t('Dashboard description')} onChange={updateDescription} value={description} />\n            </div>\n            <div className={classes.itemSelector}>\n                <ItemSelector />\n            </div>\n        </section>;\n};\nEditTitleBar.propTypes = {\n  onChangeDescription: PropTypes.func.isRequired,\n  onChangeTitle: PropTypes.func.isRequired,\n  description: PropTypes.string,\n  name: PropTypes.string\n};\nEditTitleBar.defaultProps = {\n  name: '',\n  description: ''\n};\n\nconst mapStateToProps = state => {\n  const selectedDashboard = orObject(sGetEditDashboardRoot(state));\n  return {\n    name: selectedDashboard.name,\n    description: selectedDashboard.description\n  };\n};\n\nconst mapDispatchToProps = {\n  onChangeTitle: acSetDashboardTitle,\n  onChangeDescription: acSetDashboardDescription\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(EditTitleBar);","import React from 'react';\nimport { colors } from '@dhis2/ui';\nexport const ThreeDots = () => <svg height=\"18\" viewBox=\"0 0 18 18\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"m4 7.5c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm10 0c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm-5 0c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5z\" fill=\"#6e7a8a\" />\n    </svg>;\nexport const SpeechBubble = () => <svg height=\"20\" viewBox=\"0 0 20 20\" width=\"20\" xmlns=\"http://www.w3.org/2000/svg\" style={{\n  margin: '3px 2px 0 2px'\n}} // Temporary fix for the misaligned icon, should be removed once the icon is replaced\n>\n        <path d=\"m20 2h-16c-1.1 0-1.99.9-1.99 2l-.01 18 4-4h14c1.1 0 2-.9 2-2v-12c0-1.1-.9-2-2-2zm-2 12h-12v-2h12zm0-3h-12v-2h12zm0-3h-12v-2h12z\" fill=\"#6e7a8a\" fillRule=\"evenodd\" transform=\"translate(-2 -2)\" />\n    </svg>;\nexport const Warning = () => <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" fill={colors.grey600}>\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z\" />\n    </svg>;","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { Button, Modal, ModalTitle, ModalContent, ModalActions, ButtonStrip } from '@dhis2/ui';\nimport { PeriodDimension, DynamicDimension, OrgUnitDimension, DIMENSION_ID_PERIOD, DIMENSION_ID_ORGUNIT } from '@dhis2/analytics';\nimport { acAddItemFilter, acRemoveItemFilter } from '../../actions/itemFilters';\nimport { sGetItemFiltersRoot } from '../../reducers/itemFilters';\n\nconst FilterDialog = ({\n  displayNameProperty,\n  dimension,\n  initiallySelectedItems,\n  addItemFilter,\n  removeItemFilter,\n  onClose\n}, context) => {\n  const [filters, setFilters] = useState(initiallySelectedItems);\n\n  const onSelectItems = ({\n    dimensionId,\n    items\n  }) => {\n    setFilters({\n      [dimensionId]: items\n    });\n  };\n\n  const onDeselectItems = ({\n    dimensionId,\n    itemIdsToRemove\n  }) => {\n    const oldList = filters[dimensionId] || [];\n    const newList = oldList.filter(item => !itemIdsToRemove.includes(item.id));\n    setFilters({ ...filters,\n      [dimensionId]: newList\n    });\n  };\n\n  const onReorderItems = ({\n    dimensionId,\n    itemIds\n  }) => {\n    const oldList = filters[dimensionId] || [];\n    const reorderedList = itemIds.map(id => oldList.find(item => item.id === id));\n    setFilters({ ...filters,\n      [dimensionId]: reorderedList\n    });\n  };\n\n  const saveFilter = () => {\n    const id = dimension.id;\n    const filterItems = filters[id];\n\n    if (filterItems && filterItems.length) {\n      addItemFilter({\n        id,\n        value: [...filterItems]\n      });\n    } else {\n      removeItemFilter(id);\n    }\n\n    onClose(id);\n  };\n\n  const renderDialogContent = () => {\n    const commonProps = {\n      d2: context.d2,\n      onSelect: onSelectItems,\n      onDeselect: onDeselectItems,\n      onReorder: onReorderItems\n    };\n    const selectedItems = filters[dimension.id] || [];\n\n    switch (dimension.id) {\n      case DIMENSION_ID_PERIOD:\n        {\n          return <PeriodDimension selectedPeriods={selectedItems} onSelect={commonProps.onSelect} />;\n        }\n\n      case DIMENSION_ID_ORGUNIT:\n        return <OrgUnitDimension displayNameProperty={displayNameProperty} ouItems={selectedItems} {...commonProps} />;\n\n      default:\n        return <DynamicDimension selectedItems={selectedItems} dimensionId={dimension.id} onSelect={commonProps.onSelect} context={commonProps.d2} />;\n    }\n  };\n\n  return <>\n            {dimension.id && <Modal onClose={onClose} position=\"top\" large>\n                    <ModalTitle>{dimension.name}</ModalTitle>\n                    <ModalContent>{renderDialogContent()}</ModalContent>\n                    <ModalActions>\n                        <ButtonStrip>\n                            <Button secondary onClick={onClose}>\n                                {i18n.t('Cancel')}\n                            </Button>\n                            <Button primary onClick={saveFilter}>\n                                {i18n.t('Confirm')}\n                            </Button>\n                        </ButtonStrip>\n                    </ModalActions>\n                </Modal>}\n        </>;\n};\n\nFilterDialog.propTypes = {\n  addItemFilter: PropTypes.func,\n  dimension: PropTypes.object,\n  displayNameProperty: PropTypes.string,\n  initiallySelectedItems: PropTypes.object,\n  removeItemFilter: PropTypes.func,\n  onClose: PropTypes.func\n};\nFilterDialog.contextTypes = {\n  d2: PropTypes.object\n};\n\nconst mapStateToProps = state => ({\n  initiallySelectedItems: sGetItemFiltersRoot(state)\n});\n\nexport default connect(mapStateToProps, {\n  addItemFilter: acAddItemFilter,\n  removeItemFilter: acRemoveItemFilter\n})(FilterDialog);","export const SET_ACTIVE_MODAL_DIMENSION = 'SET_ACTIVE_MODAL_DIMENSION';\nexport const CLEAR_ACTIVE_MODAL_DIMENSION = 'CLEAR_ACTIVE_MODAL_DIMENSION';\nexport const DEFAULT_STATE_ACTIVE_MODAL_DIMENSION = {};\nexport default ((state = DEFAULT_STATE_ACTIVE_MODAL_DIMENSION, action) => {\n  switch (action.type) {\n    case SET_ACTIVE_MODAL_DIMENSION:\n      {\n        return action.value;\n      }\n\n    case CLEAR_ACTIVE_MODAL_DIMENSION:\n      {\n        return DEFAULT_STATE_ACTIVE_MODAL_DIMENSION;\n      }\n\n    default:\n      return state;\n  }\n});\nexport const sGetActiveModalDimension = state => state.activeModalDimension;","import { SET_ACTIVE_MODAL_DIMENSION, CLEAR_ACTIVE_MODAL_DIMENSION } from '../reducers/activeModalDimension';\nexport const acSetActiveModalDimension = value => ({\n  type: SET_ACTIVE_MODAL_DIMENSION,\n  value\n});\nexport const acClearActiveModalDimension = () => ({\n  type: CLEAR_ACTIVE_MODAL_DIMENSION\n});","import React, { useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport isEmpty from 'lodash/isEmpty';\nimport i18n from '@dhis2/d2-i18n';\nimport { DimensionsPanel } from '@dhis2/analytics';\nimport { Button, Popover } from '@dhis2/ui';\nimport FilterDialog from './FilterDialog';\nimport { sGetSettingsDisplayNameProperty } from '../../reducers/settings';\nimport { sGetActiveModalDimension } from '../../reducers/activeModalDimension';\nimport { sGetDimensions } from '../../reducers/dimensions';\nimport { sGetItemFiltersRoot } from '../../reducers/itemFilters';\nimport { acClearActiveModalDimension, acSetActiveModalDimension } from '../../actions/activeModalDimension';\n\nconst FilterSelector = props => {\n  const [showPopover, setShowPopover] = useState(false);\n  const ref = useRef(null);\n\n  const onCloseDialog = () => {\n    setShowPopover(false);\n    props.clearActiveModalDimension();\n  };\n\n  const selectDimension = id => {\n    props.setActiveModalDimension(props.dimensions.find(dimension => dimension.id === id));\n  };\n\n  return <>\n            <span ref={ref}>\n                <Button onClick={() => setShowPopover(true)}>\n                    {i18n.t('Add filter')}\n                    <ArrowDropDownIcon />\n                </Button>\n            </span>\n            {showPopover && <Popover onClickOutside={onCloseDialog} reference={ref} arrow={true} placement=\"bottom-start\">\n                    <DimensionsPanel style={{\n        width: '320px'\n      }} dimensions={props.dimensions} onDimensionClick={selectDimension} selectedIds={Object.keys(props.initiallySelectedItems)} />\n                </Popover>}\n            {!isEmpty(props.dimension) ? <FilterDialog displayNameProperty={props.displayNameProperty} dimension={props.dimension} onClose={onCloseDialog} /> : null}\n        </>;\n};\n\nconst mapStateToProps = state => ({\n  displayNameProperty: sGetSettingsDisplayNameProperty(state),\n  dimension: sGetActiveModalDimension(state),\n  dimensions: sGetDimensions(state),\n  initiallySelectedItems: sGetItemFiltersRoot(state)\n});\n\nFilterSelector.propTypes = {\n  clearActiveModalDimension: PropTypes.func,\n  dimension: PropTypes.object,\n  dimensions: PropTypes.array,\n  displayNameProperty: PropTypes.string,\n  initiallySelectedItems: PropTypes.object,\n  setActiveModalDimension: PropTypes.func\n};\nexport default connect(mapStateToProps, {\n  clearActiveModalDimension: acClearActiveModalDimension,\n  setActiveModalDimension: acSetActiveModalDimension\n})(FilterSelector);","import React, { useState, createRef } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport { Redirect } from 'react-router-dom';\nimport SharingDialog from '@dhis2/d2-ui-sharing-dialog';\nimport Star from '@material-ui/icons/Star';\nimport StarBorder from '@material-ui/icons/StarBorder';\nimport { Button, FlyoutMenu, Popover, MenuItem, colors } from '@dhis2/ui';\nimport { ThreeDots } from '../Item/VisualizationItem/assets/icons';\nimport { orObject } from '../../modules/util';\nimport { tStarDashboard } from '../../actions/dashboards';\nimport { tUpdateShowDescription } from '../../actions/selected';\nimport FilterSelector from '../ItemFilter/FilterSelector';\nimport { sGetSelectedId, sGetSelectedShowDescription } from '../../reducers/selected';\nimport { sGetDashboardById, sGetDashboardItems, EMPTY_DASHBOARD } from '../../reducers/dashboards';\nimport classes from './styles/ViewTitleBar.module.css';\n\nconst ViewTitleBar = (props, context) => {\n  const [moreOptionsIsOpen, setMoreOptionsIsOpen] = useState(false);\n  const [sharingDialogIsOpen, setSharingDialogIsOpen] = useState(false);\n  const [redirectUrl, setRedirectUrl] = useState(null);\n  const {\n    id,\n    name,\n    description,\n    access,\n    style,\n    showDescription,\n    starred,\n    onToggleStarredDashboard,\n    onShowHideDescription\n  } = props;\n\n  const toggleSharingDialog = () => setSharingDialogIsOpen(!sharingDialogIsOpen);\n\n  const toggleMoreOptions = () => setMoreOptionsIsOpen(!moreOptionsIsOpen);\n\n  const printLayout = () => setRedirectUrl(`${id}/printlayout`);\n\n  const printOipp = () => setRedirectUrl(`${id}/printoipp`);\n\n  const titleStyle = Object.assign({}, style.title, {\n    cursor: 'default',\n    userSelect: 'text',\n    top: '7px'\n  });\n  const StarIcon = starred ? Star : StarBorder;\n\n  if (redirectUrl) {\n    return <Redirect to={redirectUrl} />;\n  }\n\n  const showHideDescriptionLabel = showDescription ? i18n.t('Hide description') : i18n.t('Show description');\n\n  const showHideDescription = () => {\n    onShowHideDescription();\n    toggleMoreOptions();\n  };\n\n  const toggleStarredDashboardLabel = starred ? i18n.t('Unstar dashboard') : i18n.t('Star dashboard');\n\n  const toggleStarredDashboard = () => {\n    onToggleStarredDashboard();\n    toggleMoreOptions();\n  };\n\n  const buttonRef = createRef();\n  const userAccess = orObject(access);\n  return <>\n            <div className={classes.titleBar}>\n                <span style={titleStyle}>{name}</span>\n                <div className={classes.actions}>\n                    <div className={classes.titleBarIcon} onClick={onToggleStarredDashboard}>\n                        <StarIcon style={{\n            fill: colors.grey600\n          }} />\n                    </div>\n                    <div className={classes.strip}>\n                        {userAccess.update ? <Link className={classes.editLink} to={`/${id}/edit`}>\n                                <Button>{i18n.t('Edit')}</Button>\n                            </Link> : null}\n                        {userAccess.manage ? <Button onClick={toggleSharingDialog}>\n                                {i18n.t('Share')}\n                            </Button> : null}\n                        <FilterSelector />\n                        <span ref={buttonRef}>\n                            <Button onClick={toggleMoreOptions}>\n                                <ThreeDots />\n                                <span style={{\n                marginLeft: '5px'\n              }}>\n                                    {i18n.t('More')}\n                                </span>\n                            </Button>\n                        </span>\n                    </div>\n                    {moreOptionsIsOpen && <Popover reference={buttonRef} placement=\"bottom-start\" onClickOutside={toggleMoreOptions}>\n                            <FlyoutMenu>\n                                <MenuItem dense label={toggleStarredDashboardLabel} onClick={toggleStarredDashboard} />\n                                <MenuItem dense label={showHideDescriptionLabel} onClick={showHideDescription} />\n                                <MenuItem dense label={i18n.t('Print')}>\n                                    <MenuItem dense label={i18n.t('Dashboard layout')} onClick={printLayout} />\n                                    <MenuItem dense label={i18n.t('One item per page')} onClick={printOipp} />\n                                </MenuItem>\n                            </FlyoutMenu>\n                        </Popover>}\n                </div>\n            </div>\n            {showDescription ? <div className=\"dashboard-description\" style={Object.assign({\n      paddingTop: '5px',\n      paddingBottom: '5px'\n    }, style.description, !description ? {\n      color: '#888'\n    } : {})}>\n                    {description || i18n.t('No description')}\n                </div> : null}\n            {id ? <SharingDialog d2={context.d2} id={id} type=\"dashboard\" open={sharingDialogIsOpen} onRequestClose={toggleSharingDialog} /> : null}\n        </>;\n};\n\nViewTitleBar.propTypes = {\n  access: PropTypes.object,\n  description: PropTypes.string,\n  id: PropTypes.string,\n  name: PropTypes.string,\n  showDescription: PropTypes.bool,\n  starred: PropTypes.bool,\n  style: PropTypes.object,\n  onShowHideDescription: PropTypes.func,\n  onToggleStarredDashboard: PropTypes.func\n};\nViewTitleBar.defaultProps = {\n  name: '',\n  description: '',\n  starred: false,\n  showDescription: false\n};\nViewTitleBar.contextTypes = {\n  d2: PropTypes.object\n};\n\nconst mapStateToProps = state => {\n  const id = sGetSelectedId(state);\n  const dashboard = sGetDashboardById(state, id) || EMPTY_DASHBOARD;\n  return {\n    id,\n    name: dashboard.displayName,\n    description: dashboard.displayDescription,\n    dashboardItems: sGetDashboardItems(state),\n    showDescription: sGetSelectedShowDescription(state),\n    starred: dashboard.starred,\n    access: dashboard.access\n  };\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n  const {\n    id,\n    starred,\n    showDescription\n  } = stateProps;\n  const {\n    dispatch\n  } = dispatchProps;\n  return { ...stateProps,\n    ...ownProps,\n    onToggleStarredDashboard: () => dispatch(tStarDashboard(id, !starred)),\n    onShowHideDescription: () => dispatch(tUpdateShowDescription(!showDescription))\n  };\n};\n\nexport default connect(mapStateToProps, null, mergeProps)(ViewTitleBar);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { colors } from '@dhis2/ui';\nimport EditTitleBar from './EditTitleBar';\nimport ViewTitleBar from './ViewTitleBar';\nimport './TitleBar.css';\nconst style = {\n  title: {\n    position: 'relative',\n    fontSize: 21,\n    fontWeight: 500,\n    color: colors.black,\n    minWidth: 50\n  },\n  description: {\n    fontSize: 14,\n    color: colors.grey800\n  }\n};\n\nconst TitleBar = ({\n  edit\n}) => {\n  return <div className=\"titlebar-wrapper\" style={{\n    padding: '13px 15px 5px 10px'\n  }}>\n            {edit ? <EditTitleBar style={style} /> : <ViewTitleBar style={style} />}\n        </div>;\n};\n\nTitleBar.propTypes = {\n  edit: PropTypes.bool\n};\nexport default TitleBar;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport * as pluginManager from './plugin';\nimport { getBaseUrl, orObject } from '../../../modules/util';\nimport { getGridItemDomId } from '../../ItemGrid/gridUtil';\n\nconst pluginCredentials = d2 => {\n  return {\n    baseUrl: getBaseUrl(d2),\n    auth: d2.Api.getApi().defaultHeaders.Authorization\n  };\n};\n\nclass DefaultPlugin extends Component {\n  pluginCredentials = null;\n\n  constructor(props, context) {\n    super(props);\n    this.d2 = context.d2;\n  }\n\n  shouldPluginReload = prevProps => {\n    // TODO - fix this hack, to handle bug with multiple\n    // rerendering while switching between dashboards.\n    //\n    // To determine if the rendering is happening because of a\n    // dashboard switch, check if the item reference has changed.\n    const reloadAllowed = this.props.item === prevProps.item;\n    const filtersChanged = prevProps.itemFilters !== this.props.itemFilters;\n    const vis = orObject(this.props.visualization);\n    const prevVis = orObject(prevProps.visualization);\n    const visChanged = vis.id !== prevVis.id || vis.activeType !== prevVis.activeType;\n    return reloadAllowed && (visChanged || filtersChanged);\n  };\n  reloadPlugin = prevProps => {\n    if (pluginManager.pluginIsAvailable(this.props.item, this.props.visualization) && this.shouldPluginReload(prevProps)) {\n      if (this.props.activeType !== prevProps.activeType || this.props.itemFilters !== prevProps.itemFilters) {\n        pluginManager.unmount(this.props.item, prevProps.activeType);\n        pluginManager.load(this.props.item, this.props.visualization, {\n          credentials: this.pluginCredentials,\n          activeType: this.props.activeType\n        });\n      }\n    }\n  };\n\n  componentDidMount() {\n    this.pluginCredentials = pluginCredentials(this.d2);\n\n    if (pluginManager.pluginIsAvailable(this.props.item, this.props.visualization)) {\n      pluginManager.load(this.props.item, this.props.visualization, {\n        credentials: this.pluginCredentials,\n        activeType: this.props.activeType,\n        options: this.props.options\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    this.reloadPlugin(prevProps);\n  }\n\n  componentWillUnmount() {\n    if (pluginManager.pluginIsAvailable(this.props.item, this.props.visualization)) {\n      pluginManager.unmount(this.props.item, this.props.activeType);\n    }\n  }\n\n  render() {\n    const {\n      classes,\n      item,\n      visualization,\n      style\n    } = this.props;\n    const pluginIsAvailable = pluginManager.pluginIsAvailable(item, visualization);\n    return pluginIsAvailable ? <div id={getGridItemDomId(item.id)} style={style} /> : <div className={classes.textDiv}>\n                {i18n.t('Unable to load the plugin for this item')}\n            </div>;\n  }\n\n}\n\nDefaultPlugin.contextTypes = {\n  d2: PropTypes.object\n};\nDefaultPlugin.propTypes = {\n  activeType: PropTypes.string,\n  classes: PropTypes.object,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object,\n  options: PropTypes.object,\n  style: PropTypes.object,\n  visualization: PropTypes.object\n};\nDefaultPlugin.defaultProps = {\n  style: {},\n  item: {},\n  itemFilters: {},\n  options: {},\n  visualization: {}\n};\nexport default DefaultPlugin;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Warning } from './assets/icons';\nimport classes from './styles/FatalErrorBoundary.module.css';\n\nclass FatalErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      errorFound: false\n    };\n  }\n\n  componentDidCatch(error, info) {\n    this.setState({\n      errorFound: true\n    });\n    console.log('error: ', error);\n    console.log('info: ', info);\n  }\n\n  render() {\n    if (this.state.errorFound) {\n      return <p className={classes.container}>\n                    <span className={classes.icon}>\n                        <Warning />\n                    </span>\n                    <span className={classes.message}>\n                        {i18n.t('There was a problem loading this dashboard item')}\n                    </span>\n                </p>;\n    }\n\n    return this.props.children;\n  }\n\n}\n\nFatalErrorBoundary.propTypes = {\n  children: PropTypes.node\n};\nexport default FatalErrorBoundary;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classes from './styles/ItemHeader.module.css';\n\nconst ViewItemActions = ({\n  actionButtons\n}) => {\n  return actionButtons ? <div className={classes.itemActionsWrap}>{actionButtons}</div> : null;\n};\n\nViewItemActions.propTypes = {\n  actionButtons: PropTypes.node\n};\nexport default ViewItemActions;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { colors } from '@dhis2/ui';\nimport classes from './styles/DeleteItemButton.module.css';\n\nconst DeleteItemButton = ({\n  onClick\n}) => <button type=\"button\" className={classes.deleteItemButton} onClick={onClick} title={i18n.t(`Delete item`)}>\n        <DeleteIcon style={{\n    fill: colors.red500\n  }} />\n    </button>;\n\nDeleteItemButton.propTypes = {\n  onClick: PropTypes.func\n};\nexport default DeleteItemButton;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport DeleteItemButton from './DeleteItemButton';\nimport { acRemoveDashboardItem } from '../../../actions/editDashboard';\nimport classes from './styles/ItemHeader.module.css';\n\nconst EditItemActions = ({\n  itemId,\n  acRemoveDashboardItem\n}) => {\n  const handleDeleteItem = () => acRemoveDashboardItem(itemId);\n\n  return <div className={classes.itemActionsWrap}>\n            <DeleteItemButton onClick={handleDeleteItem} />\n        </div>;\n};\n\nEditItemActions.propTypes = {\n  acRemoveDashboardItem: PropTypes.func,\n  itemId: PropTypes.string\n};\nconst mapDispatchToProps = {\n  acRemoveDashboardItem\n};\nexport default connect(null, mapDispatchToProps)(EditItemActions);","import React from 'react';\nimport { colors } from '@dhis2/ui';\n\nconst WarningIcon = () => <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" fill={colors.grey600}>\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z\" />\n    </svg>;\n\nexport default WarningIcon;","import React from 'react';\nimport { Tooltip } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport InfoIcon from '../../../icons/Info';\nimport classes from './styles/PrintItemInfo.module.css';\n\nconst PrintWarning = () => <div className={classes.warning}>\n        <Tooltip content={i18n.t('This item has been shortened to fit on one page')} placement=\"bottom\">\n            <InfoIcon />\n        </Tooltip>\n    </div>;\n\nexport default PrintWarning;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ViewItemActions from './ViewItemActions';\nimport EditItemActions from './EditItemActions';\nimport PrintItemInfo from './PrintItemInfo';\nimport { VIEW, EDIT, PRINT_LAYOUT } from '../../Dashboard/dashboardModes';\nimport classes from './styles/ItemHeader.module.css';\n\nconst getItemActionsMap = isShortened => {\n  return {\n    [VIEW]: ViewItemActions,\n    [EDIT]: EditItemActions,\n    [PRINT_LAYOUT]: isShortened ? PrintItemInfo : null\n  };\n}; // This is the margin-top + margin-bottom defined in the css file\n\n\nexport const HEADER_MARGIN_HEIGHT = 12;\nconst ItemHeader = React.forwardRef(({\n  dashboardMode,\n  title,\n  isShortened,\n  ...rest\n}, ref) => {\n  const Actions = getItemActionsMap(isShortened)[dashboardMode];\n  return <div className={classes.itemHeaderWrap} ref={ref}>\n                <p className={classes.itemTitle}>{title}</p>\n                {Actions ? <Actions {...rest} /> : null}\n            </div>;\n});\nItemHeader.displayName = 'ItemHeader';\nItemHeader.propTypes = {\n  dashboardMode: PropTypes.string,\n  isShortened: PropTypes.bool,\n  title: PropTypes.string\n};\nexport default connect(null, null, null, {\n  forwardRef: true\n})(ItemHeader);","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { isSingleValue, isYearOverYear, VIS_TYPE_GAUGE, VIS_TYPE_PIE } from '@dhis2/analytics';\nimport { Button, Menu, MenuItem, Divider, colors } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport Popover from '@material-ui/core/Popover';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport { ThreeDots, SpeechBubble } from './assets/icons';\nimport { pluginIsAvailable, getLink } from './plugin';\nimport { CHART, MAP, REPORT_TABLE, EVENT_CHART, EVENT_REPORT, isTrackerDomainType, hasMapView, getAppName } from '../../../modules/itemTypes';\nconst iconFill = {\n  fill: colors.grey600\n};\n\nconst ItemHeaderButtons = props => {\n  const [anchorEl, setAnchorEl] = useState(null);\n  const {\n    item,\n    visualization,\n    onSelectActiveType,\n    d2,\n    activeType\n  } = props;\n  const isTrackerType = isTrackerDomainType(item.type);\n\n  const onViewTable = () => {\n    handleClose();\n    onSelectActiveType(isTrackerType ? EVENT_REPORT : REPORT_TABLE);\n  };\n\n  const onViewChart = () => {\n    handleClose();\n    onSelectActiveType(isTrackerType ? EVENT_CHART : CHART);\n  };\n\n  const onViewMap = () => {\n    handleClose();\n    onSelectActiveType(MAP);\n  };\n\n  const itemHasMapView = () => hasMapView(item.type);\n\n  const handleMenuClick = (_, event) => setAnchorEl(event.currentTarget);\n\n  const handleInterpretationClick = () => {\n    props.onToggleFooter();\n\n    if (anchorEl !== null) {\n      handleClose();\n    }\n  };\n\n  const handleClose = () => setAnchorEl(null);\n\n  const type = visualization.type || item.type;\n  const canViewAs = !isSingleValue(type) && !isYearOverYear(type) && type !== VIS_TYPE_GAUGE && type !== VIS_TYPE_PIE;\n  const interpretationMenuLabel = props.activeFooter ? i18n.t(`Hide interpretations and details`) : i18n.t(`Show interpretations and details`);\n\n  const ViewAsMenuItems = () => <>\n            {activeType !== CHART && activeType !== EVENT_CHART && <MenuItem dense label={i18n.t('View as Chart')} onClick={onViewChart} icon={<ChartIcon style={iconFill} />} />}\n            {activeType !== REPORT_TABLE && activeType !== EVENT_REPORT && <MenuItem dense label={i18n.t('View as Table')} onClick={onViewTable} icon={<TableIcon style={iconFill} />} />}\n            {itemHasMapView() && activeType !== MAP && <MenuItem dense label={i18n.t('View as Map')} onClick={onViewMap} icon={<MapIcon style={iconFill} />} />}\n        </>;\n\n  return pluginIsAvailable(item, visualization) ? <>\n            <Button small secondary onClick={handleMenuClick}>\n                <ThreeDots />\n            </Button>\n            {anchorEl && <Popover open={Boolean(anchorEl)} onClose={handleClose} anchorEl={anchorEl}>\n                    <Menu>\n                        {canViewAs && <>\n                                <ViewAsMenuItems />\n                                <Divider />\n                            </>}\n                        <MenuItem dense icon={<LaunchIcon style={{\n          fill: '#6e7a8a'\n        }} />} label={i18n.t('Open in {{appName}} app', {\n          appName: getAppName(item.type)\n        })} href={getLink(item, d2)} target=\"_blank\" />\n                        <MenuItem dense icon={<SpeechBubble />} label={interpretationMenuLabel} onClick={handleInterpretationClick} />\n                    </Menu>\n                </Popover>}\n        </> : null;\n};\n\nItemHeaderButtons.propTypes = {\n  activeFooter: PropTypes.bool,\n  activeType: PropTypes.string,\n  d2: PropTypes.object,\n  item: PropTypes.object,\n  visualization: PropTypes.object,\n  onSelectActiveType: PropTypes.func,\n  onToggleFooter: PropTypes.func\n};\nexport default ItemHeaderButtons;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { colors } from '@dhis2/ui';\nimport { getId } from './plugin';\nimport InterpretationsComponent from '@dhis2/d2-ui-interpretations';\nconst style = {\n  scrollContainer: {\n    overflowY: 'auto',\n    height: '340px'\n  },\n  line: {\n    margin: '-1px 0px 0px',\n    height: '1px',\n    border: 'none',\n    backgroundColor: colors.grey100\n  }\n};\n\nclass ItemFooter extends Component {\n  render() {\n    const objectId = getId(this.props.item);\n    return <div className=\"dashboard-item-footer\">\n                <hr style={style.line} />\n                <div style={style.scrollContainer}>\n                    <InterpretationsComponent d2={this.context.d2} item={this.props.item} type={this.props.item.type.toLowerCase()} id={objectId} appName=\"dashboard\" />\n                </div>\n            </div>;\n  }\n\n}\n\nItemFooter.contextTypes = {\n  d2: PropTypes.object.isRequired\n};\nItemFooter.propTypes = {\n  item: PropTypes.object.isRequired\n};\nexport default ItemFooter;","import React from 'react';\nimport { CircularLoader } from '@dhis2/ui';\nimport classes from './styles/LoadingMask.module.css';\n\nconst LoadingMask = () => {\n  return <div className={classes.center}>\n            <CircularLoader />\n        </div>;\n};\n\nexport default LoadingMask;","// Note that this ignores discrepancies in 'this', so shouldn't be used with bound functions\n// This is useful instead of lodash/memoize when we only need to memoize a single value\n// Inspiration: https://github.com/alexreardon/memoize-one\nconst memoizeOne = fn => {\n  let lastArgs = undefined;\n  let lastValue = undefined;\n  return (...args) => {\n    if (lastArgs && args.length === lastArgs.length && args.every((arg, i) => arg === lastArgs[i])) {\n      return lastValue;\n    }\n\n    lastArgs = args;\n    lastValue = fn(...args);\n    return lastValue;\n  };\n};\n\nexport default memoizeOne;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport uniqueId from 'lodash/uniqueId';\nimport VisualizationPlugin from '@dhis2/data-visualizer-plugin';\nimport i18n from '@dhis2/d2-i18n';\nimport DefaultPlugin from './DefaultPlugin';\nimport FatalErrorBoundary from './FatalErrorBoundary';\nimport ItemHeader, { HEADER_MARGIN_HEIGHT } from '../ItemHeader/ItemHeader';\nimport ItemHeaderButtons from './ItemHeaderButtons';\nimport ItemFooter from './ItemFooter';\nimport LoadingMask from './LoadingMask';\nimport * as pluginManager from './plugin';\nimport { sGetVisualization } from '../../../reducers/visualizations';\nimport { sGetSelectedItemActiveType } from '../../../reducers/selected';\nimport { sGetIsEditing } from '../../../reducers/editDashboard';\nimport { sGetItemFiltersRoot, DEFAULT_STATE_ITEM_FILTERS } from '../../../reducers/itemFilters';\nimport { acAddVisualization } from '../../../actions/visualizations';\nimport { acSetSelectedItemActiveType } from '../../../actions/selected';\nimport { VISUALIZATION, MAP, CHART, REPORT_TABLE } from '../../../modules/itemTypes';\nimport memoizeOne from '../../../modules/memoizeOne';\nimport { isEditMode, isPrintMode, isViewMode } from '../../Dashboard/dashboardModes';\nimport { ITEM_CONTENT_PADDING_BOTTOM } from '../../ItemGrid/ItemGrid';\nimport classes from './styles/Item.module.css';\nexport class Item extends Component {\n  state = {\n    showFooter: false,\n    configLoaded: false,\n    pluginIsLoaded: false\n  };\n\n  constructor(props, context) {\n    super(props);\n    this.d2 = context.d2;\n    this.contentRef = React.createRef();\n    this.headerRef = React.createRef();\n    this.memoizedApplyFilters = memoizeOne(this.applyFilters);\n    this.memoizedGetVisualizationConfig = memoizeOne(pluginManager.getVisualizationConfig);\n    this.memoizedGetContentStyle = memoizeOne(this.getContentStyle);\n  }\n\n  async componentDidMount() {\n    this.props.updateVisualization( // TODO do not call fetch on the pluginManager, do it here as the manager will eventually be removed...\n    await pluginManager.fetch(this.props.item));\n    this.setState({\n      configLoaded: true\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.pluginIsLoaded && (prevProps.visualization !== this.props.visualization || prevProps.itemFilters !== this.props.itemFilters)) {\n      this.setState({\n        pluginIsLoaded: false\n      });\n    }\n  }\n\n  applyFilters = (visualization, filters) => {\n    if (!Object.keys(filters).length) {\n      return visualization;\n    } // deep clone objects in filters to avoid changing the visualization in the Redux store\n\n\n    const visRows = visualization.rows.map(obj => ({ ...obj\n    }));\n    const visColumns = visualization.columns.map(obj => ({ ...obj\n    }));\n    const visFilters = visualization.filters.map(obj => ({ ...obj\n    }));\n    Object.keys(filters).forEach(dimensionId => {\n      if (filters[dimensionId]) {\n        let dimensionFound = false;\n        [visRows, visColumns, visFilters].forEach(dimensionObjects => dimensionObjects.filter(obj => obj.dimension === dimensionId).forEach(obj => {\n          dimensionFound = true;\n          obj.items = filters[dimensionId];\n        })); // add dimension to filters if not already present elsewhere\n\n        if (!dimensionFound) {\n          visFilters.push({\n            dimension: dimensionId,\n            items: filters[dimensionId]\n          });\n        }\n      }\n    });\n    return { ...visualization,\n      rows: visRows,\n      columns: visColumns,\n      filters: visFilters\n    };\n  };\n  getUniqueKey = memoizeOne(() => uniqueId());\n  pluginCredentials = null;\n  getPluginComponent = () => {\n    const activeType = this.getActiveType();\n    const visualization = this.memoizedGetVisualizationConfig(this.props.visualization, this.props.item.type, activeType);\n\n    if (!visualization) {\n      return <div className={classes.textDiv}>\n                    {i18n.t('No data to display')}\n                </div>;\n    }\n\n    const calculatedHeight = this.props.item.originalHeight - this.headerRef.current.clientHeight - HEADER_MARGIN_HEIGHT - ITEM_CONTENT_PADDING_BOTTOM;\n    const props = { ...this.props,\n      activeType,\n      visualization,\n      classes,\n      style: this.memoizedGetContentStyle(calculatedHeight, this.contentRef ? this.contentRef.offsetHeight : null, isEditMode(this.props.dashboardMode) || isPrintMode(this.props.dashboardMode))\n    };\n\n    switch (activeType) {\n      case VISUALIZATION:\n      case CHART:\n      case REPORT_TABLE:\n        {\n          return <>\n                        {!this.state.pluginIsLoaded && <div style={props.style}>\n                                <LoadingMask />\n                            </div>}\n                        <VisualizationPlugin d2={this.d2} visualization={this.memoizedApplyFilters(visualization, props.itemFilters)} onLoadingComplete={this.onLoadingComplete} forDashboard={true} style={props.style} />\n                    </>;\n        }\n\n      case MAP:\n        {\n          if (props.item.type === MAP) {\n            // apply filters only to thematic and event layers\n            // for maps AO\n            const mapViews = props.visualization.mapViews.map(obj => {\n              if (obj.layer.includes('thematic') || obj.layer.includes('event')) {\n                return this.memoizedApplyFilters(obj, props.itemFilters);\n              }\n\n              return obj;\n            });\n            props.visualization = { ...props.visualization,\n              mapViews\n            };\n          } else {\n            // this is the case of a non map AO passed to the maps plugin\n            // due to a visualization type switch in dashboard item\n            // maps plugin takes care of converting the AO to a suitable format\n            props.visualization = this.memoizedApplyFilters(props.visualization, props.itemFilters);\n          }\n\n          props.options = { ...props.options,\n            hideTitle: true\n          };\n          return <DefaultPlugin {...props} />;\n        }\n\n      default:\n        {\n          props.visualization = this.memoizedApplyFilters(props.visualization, props.itemFilters);\n          return <DefaultPlugin {...props} />;\n        }\n    }\n  };\n  onLoadingComplete = () => {\n    this.setState({\n      pluginIsLoaded: true\n    });\n  };\n  onToggleFooter = () => {\n    this.setState({\n      showFooter: !this.state.showFooter\n    }, this.props.onToggleItemExpanded(this.props.item.id));\n  };\n  selectActiveType = type => {\n    type !== this.getActiveType() && this.props.selectActiveType(this.props.item.id, type);\n  };\n  getActiveType = () => {\n    if (this.props.isEditing) {\n      return this.props.item.type;\n    }\n\n    return this.props.activeType || this.props.item.type;\n  };\n  pluginIsAvailable = () => pluginManager.pluginIsAvailable(this.props.item, this.props.visualization);\n  getContentStyle = (calculatedHeight, measuredHeight, preferMeasured) => {\n    const height = preferMeasured ? measuredHeight || calculatedHeight : calculatedHeight;\n    return {\n      height\n    };\n  };\n\n  render() {\n    const {\n      item,\n      dashboardMode,\n      itemFilters\n    } = this.props;\n    const {\n      showFooter\n    } = this.state;\n    const actionButtons = <ItemHeaderButtons item={item} visualization={this.props.visualization} onSelectActiveType={this.selectActiveType} onToggleFooter={this.onToggleFooter} d2={this.d2} activeType={this.getActiveType()} activeFooter={this.state.showFooter} />;\n    return <>\n                <ItemHeader title={pluginManager.getName(item)} itemId={item.id} actionButtons={actionButtons} ref={this.headerRef} dashboardMode={dashboardMode} isShortened={item.shortened} />\n                <FatalErrorBoundary>\n                    <div key={this.getUniqueKey(itemFilters)} className=\"dashboard-item-content\" ref={ref => this.contentRef = ref}>\n                        {this.state.configLoaded && this.getPluginComponent()}\n                    </div>\n                </FatalErrorBoundary>\n                {isViewMode(dashboardMode) && showFooter ? <ItemFooter item={item} /> : null}\n            </>;\n  }\n\n}\nItem.contextTypes = {\n  d2: PropTypes.object\n};\nItem.propTypes = {\n  activeType: PropTypes.string,\n  dashboardMode: PropTypes.string,\n  isEditing: PropTypes.bool,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object,\n  selectActiveType: PropTypes.func,\n  updateVisualization: PropTypes.func,\n  visualization: PropTypes.object,\n  onToggleItemExpanded: PropTypes.func\n};\nItem.defaultProps = {\n  item: {},\n  onToggleItemExpanded: Function.prototype,\n  visualization: {}\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const itemFilters = !isEditMode(ownProps.dashboardMode) ? sGetItemFiltersRoot(state) : DEFAULT_STATE_ITEM_FILTERS;\n  return {\n    activeType: sGetSelectedItemActiveType(state, ownProps.item?.id),\n    isEditing: sGetIsEditing(state),\n    itemFilters,\n    visualization: sGetVisualization(state, pluginManager.extractFavorite(ownProps.item).id)\n  };\n};\n\nconst mapDispatchToProps = {\n  selectActiveType: acSetSelectedItemActiveType,\n  updateVisualization: acAddVisualization\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Item);","import React from 'react';\nimport { colors } from '@dhis2/ui';\nconst style = {\n  backgroundColor: colors.grey200,\n  border: 'none',\n  height: '1px',\n  margin: '0px 0px 5px 0px'\n};\n\nconst Line = () => <hr style={style} />;\n\nexport default Line;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { colors } from '@dhis2/ui';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport Line from '../../../widgets/Line';\nimport { sGetMessagesRoot } from '../../../reducers/messages';\nimport { formatDate } from '../../../modules/util';\nimport { isViewMode } from '../../Dashboard/dashboardModes';\nimport './MessagesItem.css';\nconst PRIVATE = 'PRIVATE';\nconst messageTypes = {\n  [PRIVATE]: 'Private',\n  VALIDATION_RESULT: 'Validation',\n  TICKET: 'Ticket',\n  SYSTEM: 'System'\n};\nconst style = {\n  list: {\n    listStyleType: 'none',\n    paddingLeft: '0px'\n  },\n  seeAll: {\n    textAlign: 'center',\n    fontSize: '13px',\n    marginBottom: '5px'\n  },\n  sender: {\n    fontSize: '13px',\n    lineHeight: '15px',\n    margin: 0,\n    color: colors.grey800\n  },\n  snippet: {\n    color: colors.grey800,\n    fontSize: '13px',\n    lineHeight: '15px',\n    maxHeight: '30px',\n    overflow: 'hidden'\n  }\n};\n\nclass MessagesItem extends Component {\n  state = {\n    uiLocale: ''\n  };\n\n  async componentDidMount() {\n    const uiLocale = await this.context.d2.currentUser.userSettings.get('keyUiLocale');\n    this.setState({\n      uiLocale\n    });\n  }\n\n  getMessageHref = msg => {\n    const msgIdentifier = msg ? `#/${msg.messageType}/${msg.id}` : '';\n    return `${this.context.baseUrl}/dhis-web-messaging/${msgIdentifier}`;\n  };\n  getMessageSender = msg => {\n    const latestMsg = msg.messages.slice(-1)[0];\n    return latestMsg.sender ? latestMsg.sender.displayName : '';\n  };\n  getMessageItems = () => {\n    const modeClass = isViewMode(this.props.dashboardMode) ? 'view' : null;\n    return this.props.messages.map(msg => {\n      const redirectToMsg = () => {\n        if (isViewMode(this.props.dashboardMode)) {\n          document.location.href = this.getMessageHref(msg);\n        }\n      };\n\n      const sender = msg.messageType === PRIVATE ? this.getMessageSender(msg) : messageTypes[msg.messageType];\n      const readClass = !msg.read ? 'unread' : null;\n      const latestMsg = msg.messages.slice(-1)[0];\n      const msgDate = latestMsg.lastUpdated;\n      return <li className={`message-item ${modeClass}`} key={msg.id} onClick={redirectToMsg}>\n                    <p className={`message-title ${readClass}`}>\n                        {msg.displayName} ({msg.messageCount})\n                    </p>\n                    <p style={style.sender}>\n                        {sender} - {formatDate(msgDate, this.state.uiLocale)}\n                    </p>\n                    <p style={style.snippet}>{latestMsg.text}</p>\n                </li>;\n    });\n  };\n\n  render() {\n    return <>\n                <ItemHeader title={i18n.t('Messages')} itemId={this.props.item.id} dashboardMode={this.props.dashboardMode} isShortened={this.props.item.shortened} />\n                <Line />\n                {this.props.messages.length > 0 && <div className=\"dashboard-item-content\">\n                        <ul style={style.list}>{this.getMessageItems()}</ul>\n                        <div style={style.seeAll}>\n                            <a href={this.getMessageHref()}>\n                                {i18n.t('See all messages')}\n                            </a>\n                        </div>\n                    </div>}\n            </>;\n  }\n\n}\n\nMessagesItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  messages: PropTypes.array\n};\nMessagesItem.contextTypes = {\n  d2: PropTypes.object,\n  baseUrl: PropTypes.string\n};\n\nconst mapStateToProps = state => {\n  return {\n    messages: Object.values(sGetMessagesRoot(state))\n  };\n};\n\nconst MessagesContainer = connect(mapStateToProps, null)(MessagesItem);\nexport default MessagesContainer;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nconst NotSupportedItem = props => <>\n        <ItemHeader title={i18n.t('Item type \"{{type}}\" not supported', {\n    type: props.item.type\n  })} itemId={props.item.id} dashboardMode={props.dashboardMode} isShortened={props.item.shortened} />\n        <div style={{\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '90%'\n  }}>\n            <NotInterestedIcon style={{\n      width: 100,\n      height: 100,\n      align: 'center'\n    }} color=\"disabled\" />\n        </div>\n    </>;\n\nNotSupportedItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object\n};\nexport default NotSupportedItem;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst DescriptionIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill={colors.grey500}>\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M14 2H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6zm2 16H8v-2h8v2zm0-4H8v-2h8v2zm-3-5V3.5L18.5 9H13z\" />\n    </svg>;\n\nDescriptionIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default DescriptionIcon;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst DeleteIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill={colors.red500}>\n        <path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>;\n\nDeleteIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default DeleteIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { colors } from '@dhis2/ui';\nimport DescriptionIcon from '../../../icons/Description';\nimport DeleteIcon from '../../../icons/Delete';\nimport Line from '../../../widgets/Line';\nimport { itemTypeMap, getItemUrl } from '../../../modules/itemTypes';\nimport { orArray } from '../../../modules/util';\nimport { tRemoveListItemContent } from './actions';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport { isEditMode } from '../../Dashboard/dashboardModes';\nimport classes from './Item.module.css';\n\nconst getItemTitle = item => itemTypeMap[item.type].pluralTitle;\n\nconst getContentItems = item => orArray(item[itemTypeMap[item.type].propName]).filter((item, index, array) => array.findIndex(el => el.id === item.id) === index);\n\nconst ListItem = (props, context) => {\n  const {\n    item,\n    dashboardMode,\n    tRemoveListItemContent\n  } = props;\n  const contentItems = getContentItems(item);\n\n  const getLink = contentItem => {\n    const deleteButton = <button className={classes.deletebutton} onClick={() => tRemoveListItemContent(item, contentItem)}>\n                <DeleteIcon className={classes.deleteicon} />\n            </button>;\n    return <>\n                <a className={classes.link} style={{\n        color: colors.grey900\n      }} href={getItemUrl(item.type, contentItem, context.d2)}>\n                    {contentItem.name}\n                </a>\n                {isEditMode(dashboardMode) ? deleteButton : null}\n            </>;\n  };\n\n  return <>\n            <ItemHeader title={getItemTitle(item)} itemId={item.id} dashboardMode={dashboardMode} isShortened={item.shortened} />\n            <Line />\n            <div className=\"dashboard-item-content\">\n                <ul className={classes.list}>\n                    {contentItems.map(contentItem => <li className={classes.item} key={contentItem.id}>\n                            <DescriptionIcon className={classes.itemicon} />\n                            {getLink(contentItem)}\n                        </li>)}\n                </ul>\n            </div>\n        </>;\n};\n\nListItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  tRemoveListItemContent: PropTypes.func\n};\nListItem.contextTypes = {\n  d2: PropTypes.object\n};\nexport default connect(null, {\n  tRemoveListItemContent\n})(ListItem);","import { acUpdateDashboardItem, acRemoveDashboardItem } from '../../../actions/editDashboard';\nimport { itemTypeMap } from '../../../modules/itemTypes';\nexport const tRemoveListItemContent = (dashboardItem, content) => dispatch => {\n  const listItemType = itemTypeMap[dashboardItem.type].propName;\n  const newContent = dashboardItem[listItemType].filter(item => item.id !== content.id);\n\n  if (newContent.length) {\n    dashboardItem[listItemType] = newContent;\n    dispatch(acUpdateDashboardItem(dashboardItem));\n  } else {\n    dispatch(acRemoveDashboardItem(dashboardItem));\n  }\n};","/** @module reducers/editDashboard */\nimport update from 'immutability-helper';\nimport isEmpty from 'lodash/isEmpty';\nimport { orArray } from '../modules/util';\nexport const SET_PRINT_DASHBOARD = 'SET_PRINT_DASHBOARD';\nexport const CLEAR_PRINT_DASHBOARD = 'CLEAR_PRINT_DASHBOARD';\nexport const ADD_PRINT_DASHBOARD_ITEM = 'ADD_PRINT_DASHBOARD_ITEM';\nexport const SET_PRINT_DASHBOARD_LAYOUT = 'SET_PRINT_DASHBOARD_LAYOUT';\nexport const REMOVE_PRINT_DASHBOARD_ITEM = 'REMOVE_PRINT_DASHBOARD_ITEM';\nexport const UPDATE_PRINT_DASHBOARD_ITEM = 'UPDATE_PRINT_DASHBOARD_ITEM';\nexport const DEFAULT_STATE_PRINT_DASHBOARD = {};\nconst DEFAULT_DASHBOARD_ITEMS = [];\nexport const NEW_PRINT_DASHBOARD_STATE = {\n  id: '',\n  name: '',\n  access: {},\n  description: '',\n  dashboardItems: DEFAULT_DASHBOARD_ITEMS\n};\nexport default ((state = DEFAULT_STATE_PRINT_DASHBOARD, action) => {\n  switch (action.type) {\n    case SET_PRINT_DASHBOARD:\n      {\n        const newState = {};\n        Object.keys(NEW_PRINT_DASHBOARD_STATE).map(k => newState[k] = action.value[k]);\n        return newState;\n      }\n\n    case CLEAR_PRINT_DASHBOARD:\n      return DEFAULT_STATE_PRINT_DASHBOARD;\n\n    case ADD_PRINT_DASHBOARD_ITEM:\n      if (!action.value.position) {\n        return update(state, {\n          dashboardItems: {\n            $unshift: [action.value]\n          }\n        });\n      }\n\n      return update(state, {\n        dashboardItems: {\n          $splice: [[parseInt(action.value.position), 0, action.value]]\n        }\n      });\n\n    case REMOVE_PRINT_DASHBOARD_ITEM:\n      {\n        const idToRemove = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === idToRemove);\n\n        if (dashboardItemIndex > -1) {\n          return update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1]]\n            }\n          });\n        }\n\n        return state;\n      }\n\n    case UPDATE_PRINT_DASHBOARD_ITEM:\n      {\n        const dashboardItem = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === dashboardItem.id);\n\n        if (dashboardItemIndex > -1) {\n          const newState = update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1, Object.assign({}, dashboardItem)]]\n            }\n          });\n          return newState;\n        }\n\n        return state;\n      }\n\n    case SET_PRINT_DASHBOARD_LAYOUT:\n      {\n        const stateItems = orArray(state.dashboardItems);\n        let layoutHasChanged = false;\n        const newStateItems = action.value.map(({\n          x,\n          y,\n          w,\n          h,\n          i\n        }) => {\n          const stateItem = stateItems.find(si => si.id === i);\n\n          if (!(stateItem.x === x && stateItem.y === y && stateItem.w === w && stateItem.h === h)) {\n            layoutHasChanged = true;\n            return Object.assign({}, stateItem, {\n              w,\n              h,\n              x,\n              y\n            });\n          }\n\n          return stateItem;\n        });\n        return layoutHasChanged ? { ...state,\n          dashboardItems: newStateItems\n        } : state;\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetPrintDashboardRoot = state => state.printDashboard; // selectors\n\nexport const sGetIsPrinting = state => !isEmpty(state.printDashboard);\nexport const sGetPrintDashboardName = state => sGetPrintDashboardRoot(state).name;\nexport const sGetPrintDashboardDescription = state => sGetPrintDashboardRoot(state).description;\nexport const sGetPrintDashboardItems = state => {\n  return sGetPrintDashboardRoot(state)?.dashboardItems || DEFAULT_DASHBOARD_ITEMS;\n};","import React from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport Input from '@material-ui/core/Input';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport PrintItemInfo from '../ItemHeader/PrintItemInfo';\nimport Line from '../../../widgets/Line';\nimport { Parser as RichTextParser, Editor as RichTextEditor } from '@dhis2/d2-ui-rich-text';\nimport { acUpdateDashboardItem } from '../../../actions/editDashboard';\nimport { sGetEditDashboardItems } from '../../../reducers/editDashboard';\nimport { sGetDashboardItems } from '../../../reducers/dashboards';\nimport { sGetIsPrinting, sGetPrintDashboardItems } from '../../../reducers/printDashboard';\nimport { isEditMode, PRINT_LAYOUT } from '../../Dashboard/dashboardModes';\nconst style = {\n  textDiv: {\n    padding: '10px',\n    whiteSpace: 'pre-line',\n    lineHeight: '20px'\n  },\n  textField: {\n    fontSize: '14px',\n    fontStretch: 'normal',\n    width: '90%',\n    margin: '0 auto',\n    display: 'block',\n    lineHeight: '24px'\n  },\n  container: {\n    marginBottom: '20px',\n    marginTop: '20px'\n  }\n};\n\nconst TextItem = props => {\n  const {\n    item,\n    dashboardMode,\n    text,\n    acUpdateDashboardItem\n  } = props;\n\n  const onChangeText = event => {\n    const updatedItem = { ...item,\n      text: event.target.value\n    };\n    acUpdateDashboardItem(updatedItem);\n  };\n\n  const viewItem = () => {\n    const textDivStyle = Object.assign({}, style.textField, style.textDiv);\n    return <div className=\"dashboard-item-content\" style={style.container}>\n                <RichTextParser style={textDivStyle}>{text}</RichTextParser>\n            </div>;\n  };\n\n  const editItem = () => {\n    return <>\n                <ItemHeader title={i18n.t('Text item')} itemId={item.id} dashboardMode={dashboardMode} />\n                <Line />\n                <div className=\"dashboard-item-content\">\n                    <RichTextEditor onEdit={onChangeText}>\n                        <Input value={text} multiline fullWidth style={style.textField} placeholder={i18n.t('Add text here')} onChange={onChangeText} />\n                    </RichTextEditor>\n                </div>\n            </>;\n  };\n\n  const printItem = () => {\n    const textDivStyle = Object.assign({}, style.textField, style.textDiv);\n    return <>\n                {props.item.shortened ? <PrintItemInfo /> : null}\n                <div className=\"dashboard-item-content\" style={style.container}>\n                    <RichTextParser style={textDivStyle}>{text}</RichTextParser>\n                </div>\n            </>;\n  };\n\n  let textItem;\n\n  if (isEditMode(dashboardMode)) {\n    textItem = editItem;\n  } else if (dashboardMode === PRINT_LAYOUT) {\n    textItem = printItem;\n  } else {\n    textItem = viewItem;\n  }\n\n  return <>{textItem()}</>;\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const isPrintPreview = sGetIsPrinting(state);\n  let items;\n\n  if (isPrintPreview) {\n    items = sGetPrintDashboardItems(state);\n  } else if (isEditMode(ownProps.dashboardMode)) {\n    items = sGetEditDashboardItems(state);\n  } else {\n    items = sGetDashboardItems(state);\n  }\n\n  const item = items.find(item => item.id === ownProps.item.id);\n  return {\n    text: item ? item.text : ''\n  };\n};\n\nTextItem.propTypes = {\n  acUpdateDashboardItem: PropTypes.func,\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  text: PropTypes.string\n};\nexport default connect(mapStateToProps, {\n  acUpdateDashboardItem\n})(TextItem);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\nimport { FILTER_ORG_UNIT } from '../../../actions/itemFilters';\nimport { sGetItemFiltersRoot, DEFAULT_STATE_ITEM_FILTERS } from '../../../reducers/itemFilters';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport Line from '../../../widgets/Line';\nimport { isEditMode } from '../../Dashboard/dashboardModes';\n\nconst getIframeSrc = (appDetails, item, itemFilters) => {\n  let iframeSrc = `${appDetails.launchUrl}?dashboardItemId=${item.id}`;\n\n  if (itemFilters && itemFilters[FILTER_ORG_UNIT] && itemFilters[FILTER_ORG_UNIT].length) {\n    const ouIds = itemFilters[FILTER_ORG_UNIT].map(ouPath => ouPath.split('/').slice(-1)[0]);\n    iframeSrc += `&userOrgUnit=${ouIds.join(',')}`;\n  }\n\n  return iframeSrc;\n};\n\nconst AppItem = ({\n  dashboardMode,\n  item,\n  itemFilters\n}, context) => {\n  let appDetails;\n  const appKey = item.appKey;\n\n  if (appKey) {\n    appDetails = context.d2.system.installedApps.find(app => app.key === appKey);\n  }\n\n  return appDetails && appDetails.name && appDetails.launchUrl ? <>\n            <ItemHeader title={appDetails.name} itemId={item.id} dashboardMode={dashboardMode} isShortened={item.shortened} />\n            <Line />\n            <iframe title={appDetails.name} src={getIframeSrc(appDetails, item, itemFilters)} className=\"dashboard-item-content\" style={{\n      border: 'none'\n    }} />\n        </> : <>\n            <ItemHeader title={`${appKey} app not found`} />\n            <Line />\n            <div className=\"dashboard-item-content\" style={{\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      height: '90%'\n    }}>\n                <NotInterestedIcon color=\"disabled\" disabled style={{\n        width: 100,\n        height: 100,\n        align: 'center'\n      }} />\n            </div>\n        </>;\n};\n\nAppItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object\n};\nAppItem.contextTypes = {\n  d2: PropTypes.object\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const itemFilters = !isEditMode(ownProps.dashboardMode) ? sGetItemFiltersRoot(state) : DEFAULT_STATE_ITEM_FILTERS;\n  return {\n    itemFilters\n  };\n};\n\nexport default connect(mapStateToProps)(AppItem);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { colors } from '@dhis2/ui';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nconst style = {\n  margin: '21px 28px',\n  fontSize: '14px',\n  lineHeight: '18px',\n  color: colors.grey600\n};\n\nconst SpacerItem = props => {\n  return <>\n            <ItemHeader title={i18n.t('Spacer')} itemId={props.item.id} dashboardMode={props.dashboardMode} isShortened={props.item.shortened} />\n            <p style={style}>\n                {i18n.t('Use a spacer to create empty vertical space between other dashboard items.')}\n            </p>\n        </>;\n};\n\nSpacerItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object\n};\nexport default SpacerItem;","import React from 'react';\n\nconst PageBreakItem = () => <div />;\n\nexport default PageBreakItem;","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { sGetSelectedId, sGetSelectedShowDescription } from '../../../reducers/selected';\nimport { sGetDashboardById, EMPTY_DASHBOARD } from '../../../reducers/dashboards';\nimport { sGetNamedItemFilters } from '../../../reducers/itemFilters';\nimport { sGetIsEditing } from '../../../reducers/editDashboard';\nimport { sGetPrintDashboardName, sGetPrintDashboardDescription } from '../../../reducers/printDashboard';\nimport classes from './styles/Item.module.css';\n\nconst PrintTitlePageItem = ({\n  name,\n  description,\n  itemFilters,\n  showDescription\n}) => {\n  const getItemFilterList = () => {\n    const listItems = itemFilters.map(({\n      name,\n      values\n    }) => <li className={classes.filterListItem} key={name}>\n                {name}: {values.map(val => val.name).join(', ')}\n            </li>);\n    return <ul className={classes.filterList}>{listItems}</ul>;\n  };\n\n  return <div className={classes.titlePage}>\n            <p className={classes.name}>{name}</p>\n            {showDescription && description && <p className={classes.description}>{description}</p>}\n            {itemFilters.length > 0 && <>\n                    <p className={classes.filterTitle}>\n                        {i18n.t('Filters applied')}\n                    </p>\n                    {getItemFilterList()}\n                </>}\n        </div>;\n};\n\nPrintTitlePageItem.propTypes = {\n  description: PropTypes.string,\n  itemFilters: PropTypes.array,\n  name: PropTypes.string,\n  showDescription: PropTypes.bool\n};\nPrintTitlePageItem.defaultProps = {\n  description: '',\n  name: '',\n  showDescription: false\n};\n\nconst mapStateToProps = state => {\n  const id = sGetSelectedId(state);\n  const isEditMode = sGetIsEditing(state);\n  const viewDashboard = sGetDashboardById(state, id) || EMPTY_DASHBOARD;\n  const name = isEditMode ? sGetPrintDashboardName(state) || i18n.t('Untitled dashboard') : viewDashboard.displayName;\n  const description = isEditMode ? sGetPrintDashboardDescription(state) : viewDashboard.displayDescription;\n  return {\n    name,\n    description,\n    itemFilters: sGetNamedItemFilters(state),\n    showDescription: sGetSelectedShowDescription(state)\n  };\n};\n\nexport default connect(mapStateToProps)(PrintTitlePageItem);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport VisualizationItem from './VisualizationItem/Item';\nimport MessagesItem from './MessagesItem/Item';\nimport NotSupportedItem from './NotSupportedItem/Item';\nimport ListItem from './ListItem/Item';\nimport TextItem from './TextItem/Item';\nimport AppItem from './AppItem/Item';\nimport SpacerItem from './SpacerItem/Item';\nimport PageBreakItem from './PageBreakItem/Item';\nimport PrintTitlePageItem from './PrintTitlePageItem/Item';\nimport { APP, VISUALIZATION, REPORT_TABLE, CHART, MAP, EVENT_CHART, EVENT_REPORT, MESSAGES, REPORTS, RESOURCES, USERS, TEXT, SPACER, PAGEBREAK, PRINT_TITLE_PAGE } from '../../modules/itemTypes';\n\nconst getGridItem = type => {\n  switch (type) {\n    case VISUALIZATION:\n    case REPORT_TABLE:\n    case CHART:\n    case MAP:\n    case EVENT_CHART:\n    case EVENT_REPORT:\n      return VisualizationItem;\n\n    case MESSAGES:\n      return MessagesItem;\n\n    case REPORTS:\n    case RESOURCES:\n    case USERS:\n      return ListItem;\n\n    case TEXT:\n      return TextItem;\n\n    case SPACER:\n      return SpacerItem;\n\n    case APP:\n      return AppItem;\n\n    case PAGEBREAK:\n      return PageBreakItem;\n\n    case PRINT_TITLE_PAGE:\n      return PrintTitlePageItem;\n\n    default:\n      return NotSupportedItem;\n  }\n};\n\nexport const Item = props => {\n  const GridItem = getGridItem(props.item.type);\n  return <GridItem item={props.item} dashboardMode={props.dashboardMode} onToggleItemExpanded={props.onToggleItemExpanded} />;\n};\nItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  onToggleItemExpanded: PropTypes.func\n};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash/debounce';\nimport pick from 'lodash/pick';\nconst defaultDebounceMs = 100;\nconst defaultBufferFactor = 0.25;\n\nclass ProgressiveLoadingContainer extends Component {\n  static propTypes = {\n    children: PropTypes.node.isRequired,\n    bufferFactor: PropTypes.number,\n    className: PropTypes.string,\n    debounceMs: PropTypes.number,\n    style: PropTypes.object\n  };\n  static defaultProps = {\n    debounceMs: defaultDebounceMs,\n    bufferFactor: defaultBufferFactor\n  };\n  state = {\n    shouldLoad: false\n  };\n  containerRef = null;\n  shouldLoadHandler = null;\n  handlerOptions = {\n    passive: true\n  };\n\n  checkShouldLoad() {\n    if (!this.containerRef) {\n      return;\n    }\n\n    const bufferPx = this.props.bufferFactor * window.innerHeight;\n    const rect = this.containerRef.getBoundingClientRect();\n\n    if (rect.bottom > -bufferPx && rect.top < window.innerHeight + bufferPx) {\n      this.setState({\n        shouldLoad: true\n      });\n      this.removeHandler();\n    }\n  }\n\n  registerHandler() {\n    this.shouldLoadHandler = debounce(() => this.checkShouldLoad(), this.props.debounceMs);\n    document.getElementsByClassName('dashboard-wrapper')[0]?.addEventListener('scroll', this.shouldLoadHandler, this.handlerOptions);\n  }\n\n  removeHandler() {\n    document.getElementsByClassName('dashboard-wrapper')[0]?.removeEventListener('scroll', this.shouldLoadHandler, this.handlerOptions);\n  }\n\n  componentDidMount() {\n    this.registerHandler();\n    this.checkShouldLoad();\n  }\n\n  componentWillUnmount() {\n    this.removeHandler();\n  }\n\n  render() {\n    const {\n      children,\n      className,\n      style,\n      ...props\n    } = this.props;\n    const {\n      shouldLoad\n    } = this.state;\n    const eventProps = pick(props, ['onMouseDown', 'onTouchStart', 'onMouseUp', 'onTouchEnd']);\n    return <div ref={ref => this.containerRef = ref} style={style} className={className} {...eventProps}>\n                {shouldLoad && children}\n            </div>;\n  }\n\n}\n\nexport default ProgressiveLoadingContainer;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ReactGridLayout from 'react-grid-layout';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport { acUpdateDashboardLayout } from '../../actions/editDashboard';\nimport { Item } from '../Item/Item';\nimport { resize as pluginResize } from '../Item/VisualizationItem/plugin';\nimport { isVisualizationType } from '../../modules/itemTypes';\nimport { GRID_ROW_HEIGHT, GRID_COMPACT_TYPE, MARGIN, getGridColumns, hasShape, onItemResize } from './gridUtil';\nimport { orArray } from '../../modules/util';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\nimport './ItemGrid.css';\nimport { sGetSelectedId, sGetSelectedIsLoading } from '../../reducers/selected';\nimport { sGetEditDashboardRoot, sGetEditDashboardItems } from '../../reducers/editDashboard';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport ProgressiveLoadingContainer from '../Item/ProgressiveLoadingContainer';\nimport { VIEW, EDIT } from '../Dashboard/dashboardModes'; // Component\n\nconst EXPANDED_HEIGHT = 17; // this is set in the .dashboard-item-content css\n\nexport const ITEM_CONTENT_PADDING_BOTTOM = 4;\nexport class ItemGrid extends Component {\n  state = {\n    expandedItems: {}\n  };\n  onToggleItemExpanded = clickedId => {\n    const isExpanded = typeof this.state.expandedItems[clickedId] === 'boolean' ? this.state.expandedItems[clickedId] : false;\n    const expandedItems = { ...this.state.expandedItems\n    };\n    expandedItems[clickedId] = !isExpanded;\n    this.setState({\n      expandedItems\n    });\n  };\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.edit) {\n      this.setState({\n        expandedItems: {}\n      });\n    }\n  }\n\n  onLayoutChange = newLayout => {\n    if (this.props.edit) {\n      this.props.acUpdateDashboardLayout(newLayout);\n    }\n  };\n  onResizeStop = (layout, oldItem, newItem) => {\n    onItemResize(newItem.i);\n    const dashboardItem = this.props.dashboardItems.find(item => item.id === newItem.i); // call resize on the item component if it's a plugin type\n\n    if (dashboardItem && isVisualizationType(dashboardItem)) {\n      pluginResize(dashboardItem);\n    }\n  };\n  adjustHeightForExpanded = dashboardItem => {\n    const expandedItem = this.state.expandedItems[dashboardItem.id];\n\n    if (expandedItem && expandedItem === true) {\n      return Object.assign({}, dashboardItem, {\n        h: dashboardItem.h + EXPANDED_HEIGHT\n      });\n    }\n\n    return dashboardItem;\n  };\n  getItemComponent = item => {\n    const itemClassNames = [item.type, this.props.edit ? 'edit' : 'view'].join(' ');\n    return <ProgressiveLoadingContainer key={item.i} className={itemClassNames}>\n                <Item item={item} dashboardMode={this.props.edit ? EDIT : VIEW} onToggleItemExpanded={this.onToggleItemExpanded} />\n            </ProgressiveLoadingContainer>;\n  };\n  getItemComponents = items => items.map(item => this.getItemComponent(item));\n\n  render() {\n    const {\n      edit,\n      isLoading,\n      dashboardItems\n    } = this.props;\n\n    if (!isLoading && !dashboardItems.length) {\n      return <NoContentMessage text={i18n.t('There are no items on this dashboard')} />;\n    }\n\n    const items = edit ? dashboardItems : dashboardItems.map(this.adjustHeightForExpanded);\n    return <div className=\"grid-wrapper\">\n                {isLoading ? <Layer translucent>\n                        <CenteredContent>\n                            <CircularLoader />\n                        </CenteredContent>\n                    </Layer> : null}\n                <ReactGridLayout onLayoutChange={this.onLayoutChange} onResizeStop={this.onResizeStop} className=\"layout\" layout={items} margin={MARGIN} cols={getGridColumns()} rowHeight={GRID_ROW_HEIGHT} width={window.innerWidth} compactType={GRID_COMPACT_TYPE} isDraggable={edit} isResizable={edit} draggableCancel=\"input,textarea\">\n                    {this.getItemComponents(items)}\n                </ReactGridLayout>\n            </div>;\n  }\n\n}\nItemGrid.propTypes = {\n  acUpdateDashboardLayout: PropTypes.func,\n  dashboardItems: PropTypes.array,\n  edit: PropTypes.bool,\n  isLoading: PropTypes.bool\n};\nItemGrid.defaultProps = {\n  dashboardItems: []\n}; // Container\n\nconst mapStateToProps = (state, ownProps) => {\n  const selectedDashboard = ownProps.edit ? sGetEditDashboardRoot(state) : sGetDashboardById(state, sGetSelectedId(state));\n  const dashboardItems = ownProps.edit ? sGetEditDashboardItems(state) : sGetDashboardItems(state);\n  return {\n    isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n    dashboardItems\n  };\n};\n\nconst mapDispatchToProps = {\n  acUpdateDashboardLayout\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n  const validItems = orArray(stateProps.dashboardItems).filter(hasShape);\n  return { ...dispatchProps,\n    edit: ownProps.edit,\n    isLoading: stateProps.isLoading,\n    dashboardItems: validItems,\n    onItemResize\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps, mergeProps)(ItemGrid);","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { colors } from '@dhis2/ui';\nconst styles = {\n  badgeContainer: {\n    margin: '2px',\n    padding: '0 16px',\n    borderRadius: '4px',\n    color: colors.white,\n    backgroundColor: '#212934',\n    height: 36,\n    display: 'flex',\n    alignItems: 'center'\n  },\n  badge: {\n    fontSize: '13px',\n    cursor: 'pointer',\n    whiteSpace: 'nowrap'\n  },\n  badgeRemove: {\n    fontSize: '12px',\n    textDecoration: 'underline',\n    marginLeft: '24px',\n    cursor: 'pointer'\n  }\n};\n\nclass FilterBadge extends Component {\n  onClick = id => () => this.props.onClick(id);\n  onRemove = id => () => this.props.onRemove(id);\n\n  render() {\n    const {\n      data\n    } = this.props;\n    return <div style={styles.badgeContainer}>\n                <span style={styles.badge} onClick={this.onClick(data.id)}>\n                    {`${data.name}: ${data.values.length > 1 ? i18n.t('{{count}} selected', {\n          count: data.values.length\n        }) : data.values[0].name}`}\n                </span>\n                <span style={styles.badgeRemove} onClick={this.onRemove(data.id)}>\n                    {i18n.t('Remove')}\n                </span>\n            </div>;\n  }\n\n}\n\nFilterBadge.propTypes = {\n  data: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired,\n  onRemove: PropTypes.func.isRequired\n};\nFilterBadge.defaultProps = {\n  onClick: Function.prototype,\n  onRemove: Function.prototype\n};\nexport default FilterBadge;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport FilterBadge from './FilterBadge';\nimport { sGetNamedItemFilters } from '../../reducers/itemFilters';\nimport { acRemoveItemFilter } from '../../actions/itemFilters';\nimport { acSetActiveModalDimension } from '../../actions/activeModalDimension';\nimport classes from './styles/FilterBar.module.css';\nexport class FilterBar extends Component {\n  onBadgeRemove = id => {\n    this.props.removeItemFilter(id);\n  };\n  onBadgeClick = id => {\n    this.props.setActiveModalDimension({\n      id,\n      name: this.props.filters.find(item => item.id === id).name\n    });\n  };\n\n  render() {\n    const {\n      filters\n    } = this.props;\n    return filters.length ? // the 3 is calculated so that the FilterBar has the same vertical position as the TitleBar in relation to the ControlBar\n    <div className={classes.bar} style={{\n      top: 3\n    }}>\n                {filters.map(filter => <FilterBadge key={filter.id} data={filter} onClick={this.onBadgeClick} onRemove={this.onBadgeRemove} />)}\n            </div> : null;\n  }\n\n}\nFilterBar.propTypes = {\n  filters: PropTypes.array.isRequired,\n  removeItemFilter: PropTypes.func.isRequired,\n  setActiveModalDimension: PropTypes.func\n};\nFilterBar.defaultProps = {\n  filters: [],\n  removeItemFIlter: Function.prototype\n};\n\nconst mapStateToProps = state => ({\n  filters: sGetNamedItemFilters(state)\n});\n\nexport default connect(mapStateToProps, {\n  setActiveModalDimension: acSetActiveModalDimension,\n  removeItemFilter: acRemoveItemFilter\n})(FilterBar);","export const SET_WINDOW_HEIGHT = 'SET_WINDOW_HEIGHT';\nexport const DEFAULT_STATE_WINDOW_HEIGHT = window.innerHeight;\nexport default ((state = DEFAULT_STATE_WINDOW_HEIGHT, action) => {\n  switch (action.type) {\n    case SET_WINDOW_HEIGHT:\n      {\n        return action.value;\n      }\n\n    default:\n      return state;\n  }\n});\nexport const sGetWindowHeight = state => state.windowHeight;","import { generateUid } from 'd2/uid';\nimport { SET_PRINT_DASHBOARD, CLEAR_PRINT_DASHBOARD, SET_PRINT_DASHBOARD_LAYOUT, ADD_PRINT_DASHBOARD_ITEM, REMOVE_PRINT_DASHBOARD_ITEM, UPDATE_PRINT_DASHBOARD_ITEM } from '../reducers/printDashboard';\nimport { NEW_ITEM_SHAPE, getGridItemProperties, getPageBreakItemShape, getPrintTitlePageItemShape } from '../components/ItemGrid/gridUtil';\nimport { itemTypeMap, PAGEBREAK } from '../modules/itemTypes'; // actions\n\nexport const acSetPrintDashboard = (dashboard, items) => {\n  const val = { ...dashboard,\n    dashboardItems: items\n  };\n  return {\n    type: SET_PRINT_DASHBOARD,\n    value: val\n  };\n};\nexport const acClearPrintDashboard = () => ({\n  type: CLEAR_PRINT_DASHBOARD\n});\nexport const acUpdatePrintDashboardLayout = value => ({\n  type: SET_PRINT_DASHBOARD_LAYOUT,\n  value\n});\nexport const acAddPrintDashboardItem = item => {\n  const type = item.type;\n  delete item.type;\n  const itemPropName = itemTypeMap[type].propName;\n  const id = generateUid();\n  const gridItemProperties = getGridItemProperties(id);\n  let shape;\n\n  if (type === PAGEBREAK) {\n    const yPos = item.yPos || 0;\n    shape = getPageBreakItemShape(yPos, item.isStatic);\n  } else {\n    shape = getPrintTitlePageItemShape(item.isOneItemPerPage);\n  }\n\n  return {\n    type: ADD_PRINT_DASHBOARD_ITEM,\n    value: {\n      id,\n      type,\n      position: item.position || null,\n      [itemPropName]: item.content,\n      ...NEW_ITEM_SHAPE,\n      ...gridItemProperties,\n      ...shape\n    }\n  };\n};\nexport const acRemovePrintDashboardItem = value => ({\n  type: REMOVE_PRINT_DASHBOARD_ITEM,\n  value\n});\nexport const acUpdatePrintDashboardItem = item => ({\n  type: UPDATE_PRINT_DASHBOARD_ITEM,\n  value: item\n});","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport TitleBar from '../TitleBar/TitleBar';\nimport ItemGrid from '../ItemGrid/ItemGrid';\nimport FilterBar from '../FilterBar/FilterBar';\nimport DashboardsBar from '../ControlBar/DashboardsBar';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport { sGetIsEditing } from '../../reducers/editDashboard';\nimport { sGetIsPrinting } from '../../reducers/printDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { sGetWindowHeight } from '../../reducers/windowHeight';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { acClearEditDashboard } from '../../actions/editDashboard';\nimport { acClearPrintDashboard } from '../../actions/printDashboard';\nimport { getControlBarHeight, HEADERBAR_HEIGHT } from '../ControlBar/controlBarDimensions';\nexport const ViewDashboard = props => {\n  useEffect(() => {\n    if (props.dashboardIsEditing) {\n      props.clearEditDashboard();\n    } else if (props.dashboardIsPrinting) {\n      props.clearPrintDashboard();\n    }\n  }, [props.dashboardIsEditing, props.dashboardIsPrinting]);\n  useEffect(() => {\n    document.querySelector('.dashboard-wrapper')?.scroll(0, 0);\n  }, [props.selectedId]);\n  const height = props.windowHeight - HEADERBAR_HEIGHT - getControlBarHeight(props.controlBarRows);\n  return <>\n            <DashboardsBar />\n            <DashboardVerticalOffset />\n            <div className=\"dashboard-wrapper\" style={{\n      height\n    }}>\n                <TitleBar edit={false} />\n                <FilterBar />\n                <ItemGrid edit={false} />\n            </div>\n        </>;\n};\nViewDashboard.propTypes = {\n  clearEditDashboard: PropTypes.func,\n  clearPrintDashboard: PropTypes.func,\n  controlBarRows: PropTypes.number,\n  dashboardIsEditing: PropTypes.bool,\n  dashboardIsPrinting: PropTypes.bool,\n  selectedId: PropTypes.string,\n  windowHeight: PropTypes.number\n};\n\nconst mapStateToProps = state => {\n  return {\n    dashboardIsEditing: sGetIsEditing(state),\n    dashboardIsPrinting: sGetIsPrinting(state),\n    controlBarRows: sGetControlBarUserRows(state),\n    selectedId: sGetSelectedId(state),\n    windowHeight: sGetWindowHeight(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  clearEditDashboard: acClearEditDashboard,\n  clearPrintDashboard: acClearPrintDashboard\n})(ViewDashboard);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Button, Modal, ModalContent, ModalActions, ButtonStrip, ModalTitle } from '@dhis2/ui';\nimport classes from './styles/ConfirmDeleteDialog.module.css';\nexport const ConfirmDeleteDialog = ({\n  dashboardName,\n  onDeleteConfirmed,\n  onContinueEditing,\n  open\n}) => {\n  const actions = [<Button key=\"cancel\" secondary onClick={onContinueEditing}>\n            {i18n.t('Cancel')}\n        </Button>, <Button key=\"delete\" destructive onClick={onDeleteConfirmed}>\n            {i18n.t('Delete')}\n        </Button>];\n  return open && <Modal onClose={onContinueEditing} small position=\"middle\">\n                <ModalTitle>{i18n.t('Delete dashboard')}</ModalTitle>\n                <ModalContent>\n                    <span className={classes.content}>\n                        {i18n.t('Deleting dashboard \"{{ dashboardName }}\" will remove it for all users. This action cannot be undone. Are you sure you want to permanently delete this dashboard?', {\n          dashboardName\n        })}\n                    </span>\n                </ModalContent>\n                <ModalActions>\n                    <ButtonStrip>{actions}</ButtonStrip>\n                </ModalActions>\n            </Modal>;\n};\nConfirmDeleteDialog.propTypes = {\n  dashboardName: PropTypes.string,\n  open: PropTypes.bool,\n  onContinueEditing: PropTypes.func,\n  onDeleteConfirmed: PropTypes.func\n};\nexport default ConfirmDeleteDialog;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport ControlBar from './ControlBar';\nimport TranslationDialog from '@dhis2/d2-ui-translation-dialog';\nimport { Button, ButtonStrip } from '@dhis2/ui';\nimport ConfirmDeleteDialog from './ConfirmDeleteDialog';\nimport { tSaveDashboard, acClearEditDashboard } from '../../actions/editDashboard';\nimport { acClearPrintDashboard } from '../../actions/printDashboard';\nimport { tDeleteDashboard, acSetDashboardDisplayName } from '../../actions/dashboards';\nimport { sGetEditDashboardRoot, sGetIsNewDashboard, sGetIsPrintPreviewView } from '../../reducers/editDashboard';\nimport { acSetPrintPreviewView, acClearPrintPreviewView } from '../../actions/editDashboard';\nimport { CONTROL_BAR_ROW_HEIGHT, MIN_ROW_COUNT, getControlBarHeight } from './controlBarDimensions';\nimport { apiFetchDashboard } from '../../api/dashboards';\nimport classes from './styles/DashboardsBar.module.css';\nconst buttonBarStyle = {\n  height: CONTROL_BAR_ROW_HEIGHT,\n  paddingTop: '15px',\n  marginLeft: '15px',\n  marginRight: '15px'\n};\nexport class EditBar extends Component {\n  state = {\n    translationDialogIsOpen: false,\n    dashboardModel: undefined,\n    confirmDeleteDialogOpen: false,\n    redirectUrl: undefined\n  };\n  onConfirmDelete = () => {\n    this.setState({\n      confirmDeleteDialogOpen: true\n    });\n  };\n  onSave = () => {\n    this.props.onSave().then(newId => {\n      this.setState({\n        redirectUrl: `/${newId}`\n      });\n    });\n  };\n  onPrintPreview = () => {\n    if (this.props.isPrintPreviewView) {\n      this.props.clearPrintPreview();\n      this.props.clearPrintDashboard();\n    } else {\n      this.props.showPrintPreview();\n    }\n  };\n  onDiscard = () => {\n    this.props.onDiscardChanges();\n    const redirectUrl = this.props.dashboardId ? `/${this.props.dashboardId}` : '/';\n    this.setState({\n      redirectUrl\n    });\n  };\n  onContinueEditing = () => {\n    this.setState({\n      confirmDeleteDialogOpen: false\n    });\n  };\n  onDeleteConfirmed = () => {\n    this.setState({\n      confirmDeleteDialogOpen: false\n    });\n    this.props.onDelete(this.props.dashboardId).then(() => {\n      this.setState({\n        redirectUrl: '/'\n      });\n    });\n  };\n  onTranslationsSaved = async translations => {\n    if (translations && translations.length) {\n      const dbLocale = await this.context.d2.currentUser.userSettings.get('keyDbLocale');\n      const translation = translations.find(t => t.locale === dbLocale && t.property === 'NAME');\n\n      if (translation && translation.value) {\n        this.props.onTranslate(this.props.dashboardId, translation.value);\n      }\n    }\n  };\n  fetchDashboardModel = () => {\n    if (this.props.dashboardId && !this.state.dashboardModel) {\n      apiFetchDashboard(this.props.dashboardId).then(dashboardModel => this.setState({\n        dashboardModel\n      }));\n    }\n  };\n\n  componentDidMount() {\n    this.fetchDashboardModel();\n  }\n\n  componentDidUpdate() {\n    this.fetchDashboardModel();\n  }\n\n  toggleTranslationDialog = () => {\n    this.setState({\n      translationDialogIsOpen: !this.state.translationDialogIsOpen\n    });\n  };\n  confirmDeleteDialog = () => this.props.deleteAccess && this.props.dashboardId ? <ConfirmDeleteDialog dashboardName={this.props.dashboardName} onDeleteConfirmed={this.onDeleteConfirmed} onContinueEditing={this.onContinueEditing} open={this.state.confirmDeleteDialogOpen} /> : null;\n  translationDialog = () => this.state.dashboardModel && this.state.dashboardModel.id ? <TranslationDialog className=\"translation-dialog\" d2={this.context.d2} open={this.state.translationDialogIsOpen} onRequestClose={this.toggleTranslationDialog} objectToTranslate={this.state.dashboardModel} fieldsToTranslate={['name', 'description']} // TODO handle messages in snackbar\n  onTranslationSaved={this.onTranslationsSaved} onTranslationError={err => console.log('translation update error', err)} /> : null;\n  renderActionButtons = () => {\n    const printPreviewText = this.props.isPrintPreviewView ? i18n.t('Exit Print preview') : i18n.t('Print preview');\n    return <div className={classes.leftControls}>\n                <ButtonStrip>\n                    <Button primary onClick={this.onSave}>\n                        {i18n.t('Save changes')}\n                    </Button>\n                    <Button onClick={this.onPrintPreview}>\n                        {printPreviewText}\n                    </Button>\n\n                    {this.props.dashboardId ? <Button onClick={this.toggleTranslationDialog}>\n                            {i18n.t('Translate')}\n                        </Button> : null}\n                    {this.props.dashboardId && this.props.deleteAccess ? <Button onClick={this.onConfirmDelete}>\n                            {i18n.t('Delete')}\n                        </Button> : null}\n                </ButtonStrip>\n            </div>;\n  };\n\n  render() {\n    if (this.state.redirectUrl) {\n      return <Redirect to={this.state.redirectUrl} />;\n    }\n\n    const {\n      updateAccess\n    } = this.props;\n    const controlBarHeight = getControlBarHeight(MIN_ROW_COUNT);\n    const discardBtnText = updateAccess ? i18n.t('Exit without saving') : i18n.t('Go to dashboards');\n    return <>\n                <ControlBar height={controlBarHeight} editMode={true}>\n                    <div style={buttonBarStyle}>\n                        {updateAccess ? this.renderActionButtons() : null}\n\n                        <div className={classes.rightControls}>\n                            <Button secondary onClick={this.onDiscard}>\n                                {discardBtnText}\n                            </Button>\n                        </div>\n                    </div>\n                </ControlBar>\n                <div className={classes.topMargin} />\n                {this.translationDialog()}\n                {this.confirmDeleteDialog()}\n            </>;\n  }\n\n}\nEditBar.propTypes = {\n  clearPrintDashboard: PropTypes.func,\n  clearPrintPreview: PropTypes.func,\n  dashboardId: PropTypes.string,\n  dashboardName: PropTypes.string,\n  deleteAccess: PropTypes.bool,\n  isPrintPreviewView: PropTypes.bool,\n  showPrintPreview: PropTypes.func,\n  updateAccess: PropTypes.bool,\n  onDelete: PropTypes.func,\n  onDiscardChanges: PropTypes.func,\n  onSave: PropTypes.func,\n  onTranslate: PropTypes.func\n};\nEditBar.contextTypes = {\n  d2: PropTypes.object\n};\n\nconst mapStateToProps = state => {\n  const dashboard = sGetEditDashboardRoot(state);\n  let deleteAccess;\n  let updateAccess;\n\n  if (sGetIsNewDashboard(state)) {\n    deleteAccess = true;\n    updateAccess = true;\n  } else {\n    updateAccess = dashboard.access ? dashboard.access.update : false;\n    deleteAccess = dashboard.access ? dashboard.access.delete : false;\n  }\n\n  return {\n    dashboardId: dashboard.id,\n    dashboardName: dashboard.name,\n    deleteAccess,\n    isPrintPreviewView: sGetIsPrintPreviewView(state),\n    updateAccess\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  clearPrintDashboard: () => dispatch(acClearPrintDashboard()),\n  clearPrintPreview: () => dispatch(acClearPrintPreviewView()),\n  onSave: () => dispatch(tSaveDashboard()).then(id => id),\n  onDelete: id => dispatch(tDeleteDashboard(id)),\n  onDiscardChanges: () => dispatch(acClearEditDashboard()),\n  onTranslate: (id, value) => dispatch(acSetDashboardDisplayName(id, value)),\n  showPrintPreview: () => dispatch(acSetPrintPreviewView())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditBar);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { a4LandscapeWidthPx } from '../ItemGrid/gridUtil';\nimport classes from './styles/PrintInfo.module.css';\n\nconst PrintInfo = ({\n  isLayout\n}) => {\n  const maxWidth = a4LandscapeWidthPx < window.innerWidth ? a4LandscapeWidthPx : window.innerWidth;\n  const infoHeader = isLayout ? i18n.t('dashboard layout') : i18n.t('one item per page');\n  return <div className={classes.infoWrapper}>\n            <p className={classes.infoHeader}>\n                {`${i18n.t('Print Preview')}: ${infoHeader}`}\n            </p>\n            <div style={{\n      maxWidth\n    }}>\n                <p className={classes.info}>\n                    {`${i18n.t('For best print results')}:`}\n                </p>\n                <div className={classes.info}>\n                    <ul className={classes.infoList}>\n                        <li>{i18n.t('Use Chrome or Edge web browser')}</li>\n                        <li>\n                            {i18n.t('Wait for all dashboard items to load before printing')}\n                        </li>\n                        <li>\n                            {i18n.t('Use A4 landscape paper size and default margin settings in the browser print dialog')}\n                        </li>\n                    </ul>\n                </div>\n            </div>\n            <hr className={classes.divider} />\n        </div>;\n};\n\nPrintInfo.propTypes = {\n  isLayout: PropTypes.bool\n};\nexport default PrintInfo;","import React from 'react';\nimport { colors } from '@dhis2/ui';\n\nconst LessHorizontalIcon = () => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill={colors.grey600} viewBox=\"0 0 24 24\">\n        <path d=\"m13.2928932 6.29289322c.3905243-.39052429 1.0236893-.39052429 1.4142136 0 .3604839.36048396.3882135.92771502.0831886 1.32000622l-.0831886.09420734-4.2921068 4.29289322 4.2921068 4.2928932c.3604839.360484.3882135.927715.0831886 1.3200062l-.0831886.0942074c-.360484.3604839-.927715.3882135-1.3200062.0831886l-.0942074-.0831886-4.99999998-5c-.36048396-.360484-.3882135-.927715-.08318861-1.3200062l.08318861-.0942074z\" />\n    </svg>;\n\nexport default LessHorizontalIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Button } from '@dhis2/ui';\nimport { Link } from 'react-router-dom';\nimport LessHorizontalIcon from '../../icons/LessHorizontal';\nimport { a4LandscapeWidthPx } from '../ItemGrid/gridUtil';\nimport classes from './styles/PrintActionsBar.module.css'; // 42px set in the module css file\n\nexport const PRINT_ACTIONS_BAR_HEIGHT = 42;\n\nconst PrintActionsBar = ({\n  id\n}) => {\n  const width = a4LandscapeWidthPx < window.innerWidth ? a4LandscapeWidthPx : window.innerWidth;\n  return <>\n            <div className={classes.container}>\n                <div className={classes.inner} style={{\n        width\n      }}>\n                    <Link className={classes.link} to={`/${id}`}>\n                        <Button>\n                            <LessHorizontalIcon />\n                            {i18n.t('Exit print preview')}\n                        </Button>\n                    </Link>\n                    <Button onClick={window.print}>{i18n.t('Print')}</Button>\n                </div>\n            </div>\n            <div className={classes.topMargin} />\n        </>;\n};\n\nPrintActionsBar.propTypes = {\n  id: PropTypes.string\n};\nexport default PrintActionsBar;","import sortBy from 'lodash/sortBy';\nimport { orArray } from './util';\nimport { itemTypeMap } from './itemTypes';\nexport const getTransformYPx = elStyle => {\n  if (!elStyle || !elStyle.transform) {\n    return null;\n  } // find valid transforms - those with y pixels\n  // the code is expecting the transform prop to\n  // look like:  translate(10px, 300px)\n\n\n  const transformY = elStyle.transform.split(' ')[1]?.match(/(\\d+)px/);\n\n  if (transformY) {\n    return parseInt(transformY[1]);\n  } else {\n    return null;\n  }\n};\nexport const getDomGridItemsSortedByYPos = elements => {\n  const types = Object.keys(itemTypeMap);\n  const elementsWithBoundingRect = orArray(elements).map(el => {\n    const type = Array.from(el.classList).find(className => types.indexOf(className) > -1);\n    const rect = el.getBoundingClientRect();\n    const y = getTransformYPx(el.style) || parseInt(rect.y);\n    return {\n      type,\n      classList: el.classList,\n      bottomY: y + parseInt(rect.height),\n      el\n    };\n  });\n  return sortBy(elementsWithBoundingRect, ['bottomY']);\n};","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport sortBy from 'lodash/sortBy';\nimport ReactGridLayout from 'react-grid-layout';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport cx from 'classnames';\nimport { Item } from '../Item/Item';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport { acUpdatePrintDashboardLayout } from '../../actions/printDashboard';\nimport { sGetSelectedIsLoading } from '../../reducers/selected';\nimport { sGetPrintDashboardRoot, sGetPrintDashboardItems } from '../../reducers/printDashboard';\nimport { sGetIsEditing } from '../../reducers/editDashboard';\nimport { GRID_ROW_HEIGHT, GRID_COMPACT_TYPE, MARGIN, getGridColumns, hasShape, a4LandscapeWidthPx } from './gridUtil';\nimport { getDomGridItemsSortedByYPos, getTransformYPx } from '../../modules/printUtils';\nimport { PRINT_LAYOUT } from '../Dashboard/dashboardModes';\nimport { PAGEBREAK } from '../../modules/itemTypes';\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\nimport './ItemGrid.css'; // this is set in the .dashboard-item-content css\n\nexport const ITEM_CONTENT_PADDING_BOTTOM = 4;\nexport class PrintLayoutItemGrid extends Component {\n  onLayoutChange = newLayout => {\n    this.props.updateDashboardLayout(newLayout);\n  };\n  isFirstPageBreak = item => {\n    if (item.type !== PAGEBREAK) {\n      return false;\n    }\n\n    const pageBreaks = this.props.dashboardItems.filter(i => i.type === PAGEBREAK);\n    const sortedPageBreaks = sortBy(pageBreaks, ['y']);\n    return item.y === sortedPageBreaks[0].y;\n  };\n  getItemComponent = item => {\n    // the first-page-break class is used in Edit print preview\n    const itemClassNames = cx('print', 'layout', `${item.type}`, {\n      'first-page-break': this.props.isEditing && this.isFirstPageBreak(item),\n      shortened: !!item.shortened\n    });\n    return <div key={item.i} className={itemClassNames}>\n                <Item item={item} dashboardMode={PRINT_LAYOUT} />\n            </div>;\n  };\n  getItemComponents = items => items.map(item => this.getItemComponent(item));\n\n  hideExtraPageBreaks() {\n    const sortedElements = getDomGridItemsSortedByYPos(Array.from(document.querySelectorAll('.react-grid-item')));\n    let pageBreakBottom = 0;\n    let lastItemBottom = 0;\n    let foundNonPageBreak = false;\n\n    for (let i = sortedElements.length - 1; i >= 0; --i) {\n      const item = sortedElements[i];\n\n      if (item.type === PAGEBREAK) {\n        if (!foundNonPageBreak) {\n          item.el.classList.add('removed');\n        } else {\n          pageBreakBottom = item.bottomY;\n          break;\n        }\n      } else {\n        foundNonPageBreak = true;\n        const thisItemBottom = item.bottomY;\n\n        if (thisItemBottom > lastItemBottom) {\n          lastItemBottom = thisItemBottom;\n        }\n      }\n    }\n\n    const pageHeight = 720;\n    const gridElement = document.querySelector('.react-grid-layout'); // the last page break is before the last item(s) so\n    // maxHeight is one page beyond the last page break\n\n    const maxHeight = pageBreakBottom + pageHeight;\n\n    if (gridElement) {\n      gridElement.style.height = `${maxHeight}px`;\n    }\n\n    if (this.props.isEditing) {\n      //scroll to below the title page - which is middle of the first pagebreak\n      const firstBreak = document.querySelector('.first-page-break');\n\n      if (firstBreak && firstBreak.style && firstBreak.style.transform) {\n        const yPos = getTransformYPx(firstBreak.style);\n        const scrollArea = document.querySelector('.scroll-area');\n        scrollArea && scrollArea.scroll(0, yPos + 50);\n      }\n    }\n  }\n\n  componentDidMount() {\n    this.hideExtraPageBreaks();\n  }\n\n  componentDidUpdate() {\n    this.hideExtraPageBreaks();\n  }\n\n  render() {\n    const {\n      isLoading,\n      dashboardItems\n    } = this.props;\n\n    if (!isLoading && !dashboardItems.length) {\n      return <NoContentMessage text={i18n.t('There are no items on this dashboard')} />;\n    }\n\n    const width = a4LandscapeWidthPx < window.innerWidth ? a4LandscapeWidthPx : window.innerWidth;\n    return <div className=\"grid-wrapper\">\n                {isLoading ? <Layer translucent>\n                        <CenteredContent>\n                            <CircularLoader />\n                        </CenteredContent>\n                    </Layer> : null}\n                <ReactGridLayout onLayoutChange={this.onLayoutChange} className=\"layout\" layout={dashboardItems} margin={MARGIN} cols={getGridColumns()} rowHeight={GRID_ROW_HEIGHT} width={width} compactType={GRID_COMPACT_TYPE} isDraggable={false} isResizable={false} draggableCancel=\"input,textarea\">\n                    {this.getItemComponents(dashboardItems)}\n                </ReactGridLayout>\n            </div>;\n  }\n\n}\nPrintLayoutItemGrid.propTypes = {\n  dashboardItems: PropTypes.array,\n  isEditing: PropTypes.bool,\n  isLoading: PropTypes.bool,\n  updateDashboardLayout: PropTypes.func\n};\nPrintLayoutItemGrid.defaultProps = {\n  dashboardItems: []\n};\n\nconst mapStateToProps = state => {\n  const selectedDashboard = sGetPrintDashboardRoot(state);\n  return {\n    isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n    dashboardItems: sGetPrintDashboardItems(state).filter(hasShape),\n    isEditing: sGetIsEditing(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  updateDashboardLayout: acUpdatePrintDashboardLayout\n})(PrintLayoutItemGrid);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { spacers } from '@dhis2/ui';\nimport cx from 'classnames';\nimport PrintInfo from './PrintInfo';\nimport PrintActionsBar from './PrintActionsBar';\nimport PrintLayoutItemGrid from '../ItemGrid/PrintLayoutItemGrid';\nimport { acSetPrintDashboard, acAddPrintDashboardItem, acUpdatePrintDashboardItem } from '../../actions/printDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { sGetWindowHeight } from '../../reducers/windowHeight';\nimport { sGetEditDashboardRoot, sGetEditDashboardItems } from '../../reducers/editDashboard';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport { PAGEBREAK, PRINT_TITLE_PAGE } from '../../modules/itemTypes';\nimport { a4LandscapeWidthPx, MAX_ITEM_GRID_HEIGHT } from '../ItemGrid/gridUtil';\nimport { getControlBarHeight, HEADERBAR_HEIGHT } from '../ControlBar/controlBarDimensions';\nimport { PRINT_ACTIONS_BAR_HEIGHT } from './PrintActionsBar';\nimport { DRAG_HANDLE_HEIGHT } from '../ControlBar/ControlBar';\nimport classes from './styles/PrintLayoutDashboard.module.css';\nimport './styles/print.css';\nimport './styles/print-layout.css';\nconst EDIT_BAR_HEIGHT = getControlBarHeight(1) + DRAG_HANDLE_HEIGHT;\n\nconst isLeapPage = n => {\n  // pages 5,9,13,17,21,25,29... are leap pages\n  let x = 0;\n  const startPage = 1;\n\n  const getMultiple = factor => startPage + 4 * factor;\n\n  let multiple = getMultiple(0);\n  let isLeapPage = false;\n\n  while (multiple < n) {\n    multiple = getMultiple(x);\n    ++x;\n\n    if (multiple === n) {\n      isLeapPage = true;\n      break;\n    }\n  }\n\n  return isLeapPage;\n};\n\nconst addPageBreaks = ({\n  items,\n  addDashboardItem\n}) => {\n  // add enough page breaks so that each item could\n  // be put on its own page. Due to the react-grid-layout\n  // unit system, we have to estimate roughly the size of each\n  // page. At regular intervals add a unit, like a leap year\n  let yPos = 0;\n  const yPosList = [];\n\n  for (let pageNum = 1; pageNum <= items.length; ++pageNum) {\n    if (pageNum === 1) {\n      yPos += 35;\n    } else if (isLeapPage(pageNum)) {\n      yPos += 40;\n    } else {\n      yPos += 39;\n    }\n\n    yPosList.push(yPos);\n  }\n\n  for (let i = 0; i < items.length; ++i) {\n    addDashboardItem({\n      type: PAGEBREAK,\n      yPos: yPosList[i]\n    });\n  }\n};\n\nexport class PrintLayoutDashboard extends Component {\n  state = {\n    initialized: false\n  };\n  initPrintLayoutDashboard = () => {\n    if (this.props.dashboard) {\n      this.setState({\n        initialized: true\n      });\n      this.props.setPrintDashboard(this.props.dashboard, this.props.items); // If any items are taller than one page, reduce it to one\n      // page (react-grid-layout units)\n\n      this.props.items.forEach(item => {\n        if (item.h > MAX_ITEM_GRID_HEIGHT) {\n          item.shortened = true;\n          this.props.updateDashboardItem(Object.assign({}, item, {\n            h: MAX_ITEM_GRID_HEIGHT\n          }));\n        }\n      });\n      addPageBreaks(this.props);\n      this.props.addDashboardItem({\n        type: PRINT_TITLE_PAGE,\n        isOneItemPerPage: false\n      });\n    }\n  };\n\n  componentDidMount() {\n    this.initPrintLayoutDashboard();\n  }\n\n  componentDidUpdate() {\n    if (!this.state.initialized) {\n      this.initPrintLayoutDashboard();\n    }\n  }\n\n  getWrapperStyle = () => {\n    return this.props.fromEdit ? {\n      paddingTop: spacers.dp24,\n      height: this.props.windowHeight - EDIT_BAR_HEIGHT - HEADERBAR_HEIGHT\n    } : {\n      height: this.props.windowHeight - PRINT_ACTIONS_BAR_HEIGHT\n    };\n  };\n\n  render() {\n    return <>\n                {!this.props.fromEdit && <PrintActionsBar id={this.props.dashboard.id} />}\n                <div className={cx(classes.wrapper, 'scroll-area')} style={this.getWrapperStyle()}>\n                    {!this.props.fromEdit && <PrintInfo isLayout={true} />}\n                    <div className={classes.pageOuter} style={{\n          width: a4LandscapeWidthPx\n        }}>\n                        <PrintLayoutItemGrid />\n                    </div>\n                </div>\n            </>;\n  }\n\n}\nPrintLayoutDashboard.propTypes = {\n  addDashboardItem: PropTypes.func,\n  dashboard: PropTypes.object,\n  fromEdit: PropTypes.bool,\n  items: PropTypes.array,\n  setPrintDashboard: PropTypes.func,\n  updateDashboardItem: PropTypes.func,\n  windowHeight: PropTypes.number\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const id = sGetSelectedId(state);\n\n  if (ownProps.fromEdit) {\n    const dashboard = sGetEditDashboardRoot(state);\n    return {\n      dashboard,\n      id,\n      items: sGetEditDashboardItems(state),\n      windowHeight: sGetWindowHeight(state)\n    };\n  }\n\n  const dashboard = id ? sGetDashboardById(state, id) : null;\n  return {\n    dashboard,\n    id,\n    items: sGetDashboardItems(state),\n    windowHeight: sGetWindowHeight(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setPrintDashboard: acSetPrintDashboard,\n  addDashboardItem: acAddPrintDashboardItem,\n  updateDashboardItem: acUpdatePrintDashboardItem\n})(PrintLayoutDashboard);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport TitleBar from '../TitleBar/TitleBar';\nimport ItemGrid from '../ItemGrid/ItemGrid';\nimport EditBar from '../ControlBar/EditBar';\nimport LayoutPrintPreview from './PrintLayoutDashboard';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport { acSetEditDashboard } from '../../actions/editDashboard';\nimport { sGetWindowHeight } from '../../reducers/windowHeight';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport { sGetIsPrintPreviewView } from '../../reducers/editDashboard';\nimport { getControlBarHeight, HEADERBAR_HEIGHT } from '../ControlBar/controlBarDimensions';\nexport class EditDashboard extends Component {\n  state = {\n    initialized: false\n  };\n  initEditDashboard = () => {\n    if (this.props.dashboard) {\n      this.setState({\n        initialized: true\n      });\n      this.props.setEditDashboard(this.props.dashboard, this.props.items);\n    }\n  };\n\n  componentDidMount() {\n    this.initEditDashboard();\n  }\n\n  componentDidUpdate() {\n    if (!this.state.initialized) {\n      this.initEditDashboard();\n    }\n  }\n\n  renderGrid = () => {\n    if (this.props.isPrintPreviewView) {\n      return <LayoutPrintPreview fromEdit={true} />;\n    }\n\n    const height = this.props.windowHeight - HEADERBAR_HEIGHT - getControlBarHeight(1);\n    return <div className=\"dashboard-wrapper\" style={{\n      height\n    }}>\n                <TitleBar edit={true} />\n                <ItemGrid edit={true} />\n            </div>;\n  };\n\n  render() {\n    return <>\n                <EditBar />\n                {this.props.updateAccess ? this.renderGrid() : <NoContentMessage text={i18n.t('No access')} />}\n            </>;\n  }\n\n}\nEditDashboard.propTypes = {\n  dashboard: PropTypes.object,\n  isPrintPreviewView: PropTypes.bool,\n  items: PropTypes.array,\n  setEditDashboard: PropTypes.func,\n  updateAccess: PropTypes.bool,\n  windowHeight: PropTypes.number\n};\n\nconst mapStateToProps = state => {\n  const id = sGetSelectedId(state);\n  const dashboard = id ? sGetDashboardById(state, id) : null;\n  const updateAccess = dashboard && dashboard.access ? dashboard.access.update : false;\n  return {\n    dashboard,\n    updateAccess,\n    items: sGetDashboardItems(state),\n    isPrintPreviewView: sGetIsPrintPreviewView(state),\n    windowHeight: sGetWindowHeight(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setEditDashboard: acSetEditDashboard\n})(EditDashboard);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport EditBar from '../ControlBar/EditBar';\nimport TitleBar from '../TitleBar/TitleBar';\nimport ItemGrid from '../ItemGrid/ItemGrid';\nimport LayoutPrintPreview from './PrintLayoutDashboard';\nimport { acSetEditNewDashboard } from '../../actions/editDashboard';\nimport { sGetIsPrintPreviewView } from '../../reducers/editDashboard';\nimport { sGetWindowHeight } from '../../reducers/windowHeight';\nimport { getControlBarHeight, HEADERBAR_HEIGHT } from '../ControlBar/controlBarDimensions';\n\nclass NewDashboard extends Component {\n  componentDidMount() {\n    this.props.setNewDashboard();\n  }\n\n  render() {\n    const height = this.props.windowHeight - HEADERBAR_HEIGHT - getControlBarHeight(1);\n    return <>\n                <EditBar />\n                {this.props.isPrintPreviewView ? <LayoutPrintPreview fromEdit={true} /> : <div className=\"dashboard-wrapper\" style={{\n        height\n      }}>\n                        <TitleBar edit={true} />\n                        <ItemGrid edit={true} />\n                    </div>}\n            </>;\n  }\n\n}\n\nNewDashboard.propTypes = {\n  isPrintPreviewView: PropTypes.bool,\n  setNewDashboard: PropTypes.func,\n  windowHeight: PropTypes.number\n};\n\nconst mapStateToProps = state => ({\n  isPrintPreviewView: sGetIsPrintPreviewView(state),\n  windowHeight: sGetWindowHeight(state)\n});\n\nexport default connect(mapStateToProps, {\n  setNewDashboard: acSetEditNewDashboard\n})(NewDashboard);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ReactGridLayout from 'react-grid-layout';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport cx from 'classnames';\nimport { Item } from '../Item/Item';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport { PRINT } from '../Dashboard/dashboardModes';\nimport { sGetSelectedIsLoading } from '../../reducers/selected';\nimport { sGetPrintDashboardRoot, sGetPrintDashboardItems } from '../../reducers/printDashboard';\nimport { GRID_ROW_HEIGHT, GRID_COMPACT_TYPE, MARGIN, getGridColumns, hasShape, a4LandscapeWidthPx } from './gridUtil';\nimport { orArray } from '../../modules/util';\nimport 'react-grid-layout/css/styles.css';\nimport './ItemGrid.css';\nexport class PrintItemGrid extends Component {\n  getItemComponent = item => <div key={item.i} className={cx(item.type, 'print', 'oipp')}>\n            <Item item={item} dashboardMode={PRINT} />\n        </div>;\n  getItemComponents = items => items.map(item => this.getItemComponent(item));\n\n  render() {\n    const {\n      isLoading,\n      dashboardItems\n    } = this.props;\n\n    if (!isLoading && !dashboardItems.length) {\n      return <NoContentMessage text={i18n.t('There are no items on this dashboard')} />;\n    }\n\n    const width = a4LandscapeWidthPx < window.innerWidth ? a4LandscapeWidthPx : window.innerWidth;\n    return <>\n                {isLoading ? <Layer translucent>\n                        <CenteredContent>\n                            <CircularLoader />\n                        </CenteredContent>\n                    </Layer> : null}\n                <ReactGridLayout className=\"layout print\" layout={dashboardItems} margin={MARGIN} cols={getGridColumns()} rowHeight={GRID_ROW_HEIGHT} width={width} compactType={GRID_COMPACT_TYPE} isDraggable={false} isResizable={false} draggableCancel=\"input,textarea\">\n                    {this.getItemComponents(dashboardItems)}\n                </ReactGridLayout>\n            </>;\n  }\n\n}\nPrintItemGrid.propTypes = {\n  dashboardItems: PropTypes.array,\n  isLoading: PropTypes.bool\n};\nPrintItemGrid.defaultProps = {\n  dashboardItems: []\n};\n\nconst mapStateToProps = state => {\n  const selectedDashboard = sGetPrintDashboardRoot(state);\n  return {\n    isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n    dashboardItems: orArray(sGetPrintDashboardItems(state)).filter(hasShape)\n  };\n};\n\nexport default connect(mapStateToProps)(PrintItemGrid);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport sortBy from 'lodash/sortBy';\nimport PrintInfo from './PrintInfo';\nimport PrintActionsBar from './PrintActionsBar';\nimport PrintItemGrid from '../ItemGrid/PrintItemGrid';\nimport { acSetPrintDashboard, acAddPrintDashboardItem, acRemovePrintDashboardItem, acUpdatePrintDashboardItem } from '../../actions/printDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { sGetWindowHeight } from '../../reducers/windowHeight';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport { PAGEBREAK, PRINT_TITLE_PAGE, SPACER } from '../../modules/itemTypes';\nimport { a4LandscapeWidthPx, MAX_ITEM_GRID_HEIGHT_OIPP, MAX_ITEM_GRID_WIDTH_OIPP } from '../ItemGrid/gridUtil';\nimport { PRINT_ACTIONS_BAR_HEIGHT } from './PrintActionsBar';\nimport classes from './styles/PrintDashboard.module.css';\nimport './styles/print.css';\nimport './styles/print-oipp.css';\nexport class PrintDashboard extends Component {\n  state = {\n    initialized: false\n  };\n  initPrintDashboard = () => {\n    if (this.props.dashboard) {\n      this.setState({\n        initialized: true\n      }); //sort the items by Y pos so they print in order of top to bottom\n\n      const sortedItems = sortBy(this.props.items, ['y', 'x']);\n      this.props.setPrintDashboard(this.props.dashboard, sortedItems); // remove spacers - don't want empty pages\n\n      let spacerCount = 0;\n      this.props.items.forEach(item => {\n        if (item.type === SPACER) {\n          spacerCount += 1;\n          this.props.removeDashboardItem(item.id);\n        }\n      }); // Resize the items to the full page size\n\n      this.props.items.forEach(item => {\n        this.props.updateDashboardItem(Object.assign({}, item, {\n          w: MAX_ITEM_GRID_WIDTH_OIPP,\n          h: MAX_ITEM_GRID_HEIGHT_OIPP\n        }));\n      }); // insert page breaks into the document flow to create the \"pages\"\n      // when previewing the print\n\n      for (let i = 0; i < (this.props.items.length - spacerCount) * 2; i += 2) {\n        this.props.addDashboardItem({\n          type: PAGEBREAK,\n          position: i,\n          isStatic: false\n        });\n      }\n\n      this.props.addDashboardItem({\n        type: PRINT_TITLE_PAGE,\n        isOneItemPerPage: true\n      });\n    }\n  };\n\n  componentDidMount() {\n    this.initPrintDashboard();\n  }\n\n  componentDidUpdate() {\n    if (!this.state.initialized) {\n      this.initPrintDashboard();\n    }\n  }\n\n  render() {\n    const height = this.props.windowHeight - PRINT_ACTIONS_BAR_HEIGHT;\n    return <>\n                <PrintActionsBar id={this.props.dashboard.id} />\n                <div className={classes.wrapper} style={{\n        height\n      }}>\n                    <PrintInfo isLayout={false} />\n                    <div className={classes.pageOuter} style={{\n          width: a4LandscapeWidthPx\n        }}>\n                        <PrintItemGrid />\n                    </div>\n                </div>\n            </>;\n  }\n\n}\nPrintDashboard.propTypes = {\n  addDashboardItem: PropTypes.func,\n  dashboard: PropTypes.object,\n  items: PropTypes.array,\n  removeDashboardItem: PropTypes.func,\n  setPrintDashboard: PropTypes.func,\n  updateDashboardItem: PropTypes.func,\n  windowHeight: PropTypes.number\n};\n\nconst mapStateToProps = state => {\n  const id = sGetSelectedId(state);\n  const dashboard = id ? sGetDashboardById(state, id) : null;\n  return {\n    dashboard,\n    id,\n    items: sGetDashboardItems(state),\n    windowHeight: sGetWindowHeight(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setPrintDashboard: acSetPrintDashboard,\n  addDashboardItem: acAddPrintDashboardItem,\n  removeDashboardItem: acRemovePrintDashboardItem,\n  updateDashboardItem: acUpdatePrintDashboardItem\n})(PrintDashboard);","import { SET_WINDOW_HEIGHT } from '../reducers/windowHeight';\nexport const acSetWindowHeight = value => ({\n  type: SET_WINDOW_HEIGHT,\n  value\n});","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport isEmpty from 'lodash/isEmpty';\nimport i18n from '@dhis2/d2-i18n';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport debounce from 'lodash/debounce';\nimport DashboardsBar from '../ControlBar/DashboardsBar';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport ViewDashboard from './ViewDashboard';\nimport EditDashboard from './EditDashboard';\nimport NewDashboard from './NewDashboard';\nimport PrintDashboard from './PrintDashboard';\nimport PrintLayoutDashboard from './PrintLayoutDashboard';\nimport { tSelectDashboard } from '../../actions/dashboards';\nimport { acSetWindowHeight } from '../../actions/windowHeight';\nimport { sDashboardsIsFetching, sGetAllDashboards } from '../../reducers/dashboards';\nimport { sGetSelectedId, NON_EXISTING_DASHBOARD_ID } from '../../reducers/selected';\nimport { EDIT, NEW, VIEW, PRINT, PRINT_LAYOUT, isPrintMode } from './dashboardModes';\n\nconst setHeaderbarVisibility = mode => {\n  const header = document.getElementsByTagName('header')[0];\n\n  if (isPrintMode(mode)) {\n    header.classList.add('hidden');\n  } else {\n    header.classList.remove('hidden');\n  }\n};\n\nconst dashboardMap = {\n  [VIEW]: <ViewDashboard />,\n  [EDIT]: <EditDashboard />,\n  [NEW]: <NewDashboard />,\n  [PRINT]: <PrintDashboard />,\n  [PRINT_LAYOUT]: <PrintLayoutDashboard />\n};\nexport const Dashboard = ({\n  id,\n  mode,\n  dashboardsLoaded,\n  dashboardsIsEmpty,\n  routeId,\n  selectDashboard,\n  setWindowHeight\n}) => {\n  useEffect(() => {\n    setHeaderbarVisibility(mode);\n  }, [mode]);\n  useEffect(() => {\n    if (dashboardsLoaded && !dashboardsIsEmpty) {\n      selectDashboard(routeId);\n    }\n  }, [dashboardsLoaded, dashboardsIsEmpty, routeId]);\n  useEffect(() => {\n    const onResize = debounce(() => setWindowHeight(window.innerHeight), 300);\n    window.addEventListener('resize', onResize);\n    return () => {\n      window.removeEventListener('resize', onResize);\n    };\n  }, []);\n\n  if (!dashboardsLoaded || id === null) {\n    return <Layer translucent>\n                <CenteredContent>\n                    <CircularLoader />\n                </CenteredContent>\n            </Layer>;\n  }\n\n  if (mode === NEW) {\n    return dashboardMap[mode];\n  }\n\n  if (dashboardsIsEmpty) {\n    return <>\n                <DashboardsBar />\n                <DashboardVerticalOffset />\n                <NoContentMessage text={i18n.t('No dashboards found. Use the + button to create a new dashboard.')} />\n            </>;\n  }\n\n  if (id === NON_EXISTING_DASHBOARD_ID) {\n    return <>\n                <DashboardsBar />\n                <DashboardVerticalOffset />\n                <NoContentMessage text={i18n.t('Requested dashboard not found')} />\n            </>;\n  }\n\n  return dashboardMap[mode];\n};\nDashboard.propTypes = {\n  dashboardsIsEmpty: PropTypes.bool,\n  dashboardsLoaded: PropTypes.bool,\n  id: PropTypes.string,\n  match: PropTypes.object,\n  // provided by the react-router-dom\n  mode: PropTypes.string,\n  routeId: PropTypes.string,\n  selectDashboard: PropTypes.func,\n  setWindowHeight: PropTypes.func\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const dashboards = sGetAllDashboards(state);\n  return {\n    dashboardsIsEmpty: isEmpty(dashboards),\n    dashboardsLoaded: !sDashboardsIsFetching(state),\n    id: sGetSelectedId(state),\n    routeId: ownProps.match?.params?.dashboardId || null\n  };\n};\n\nexport default connect(mapStateToProps, {\n  selectDashboard: tSelectDashboard,\n  setWindowHeight: acSetWindowHeight\n})(Dashboard);","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { CssVariables } from '@dhis2/ui';\nimport { EDIT, VIEW, NEW, PRINT, PRINT_LAYOUT } from './Dashboard/dashboardModes';\nimport { acReceivedUser } from '../actions/user';\nimport { tFetchDashboards } from '../actions/dashboards';\nimport { tSetControlBarRows } from '../actions/controlBar';\nimport { tSetShowDescription } from '../actions/selected';\nimport { tSetDimensions } from '../actions/dimensions';\nimport Dashboard from './Dashboard/Dashboard';\nimport SnackbarMessage from './SnackbarMessage/SnackbarMessage';\nimport './App.css';\nexport class App extends Component {\n  componentDidMount() {\n    this.props.setCurrentUser(this.props.d2.currentUser);\n    this.props.fetchDashboards();\n    this.props.setControlBarRows();\n    this.props.setShowDescription();\n    this.props.setDimensions(this.props.d2);\n  }\n\n  getChildContext() {\n    return {\n      baseUrl: this.props.baseUrl,\n      i18n,\n      d2: this.props.d2\n    };\n  }\n\n  render() {\n    return <>\n                <CssVariables colors spacers />\n                <Router>\n                    <Switch>\n                        <Route exact path=\"/\" render={props => <Dashboard {...props} mode={VIEW} />} />\n                        <Route exact path=\"/new\" render={props => <Dashboard {...props} mode={NEW} />} />\n                        <Route exact path=\"/:dashboardId\" render={props => <Dashboard {...props} mode={VIEW} />} />\n                        <Route exact path=\"/:dashboardId/edit\" render={props => <Dashboard {...props} mode={EDIT} />} />\n                        <Route exact path=\"/:dashboardId/printoipp\" render={props => <Dashboard {...props} mode={PRINT} />} />\n                        <Route exact path=\"/:dashboardId/printlayout\" render={props => <Dashboard {...props} mode={PRINT_LAYOUT} />} />\n                    </Switch>\n                </Router>\n                <SnackbarMessage />\n            </>;\n  }\n\n}\nApp.propTypes = {\n  fetchDashboards: PropTypes.func.isRequired,\n  setControlBarRows: PropTypes.func.isRequired,\n  setCurrentUser: PropTypes.func.isRequired,\n  setDimensions: PropTypes.func.isRequired,\n  setShowDescription: PropTypes.func.isRequired,\n  baseUrl: PropTypes.string,\n  d2: PropTypes.object\n};\nApp.childContextTypes = {\n  baseUrl: PropTypes.string,\n  i18n: PropTypes.object,\n  d2: PropTypes.object\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchDashboards: () => dispatch(tFetchDashboards()),\n    setControlBarRows: () => dispatch(tSetControlBarRows()),\n    setCurrentUser: currentUser => dispatch(acReceivedUser(currentUser)),\n    setDimensions: d2 => dispatch(tSetDimensions(d2)),\n    setShowDescription: () => dispatch(tSetShowDescription())\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(App);","import { RECEIVED_USER } from '../reducers/user';\nexport const acReceivedUser = value => ({\n  type: RECEIVED_USER,\n  value\n});","/** @module reducers/selected */\nimport { validateReducer } from '../modules/util';\nexport const SET_STYLE = 'SET_STYLE';\nexport const DEFAULT_STATE_STYLE = 'LIST';\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\n\nconst style = (state = DEFAULT_STATE_STYLE, action) => {\n  switch (action.type) {\n    case SET_STYLE:\n      return validateReducer(action.value, DEFAULT_STATE_STYLE);\n\n    default:\n      return state;\n  }\n};\n\nexport default style;\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\n\nexport const sGetStyleRoot = state => state.style;","import { combineReducers } from 'redux';\nimport arraySort from 'd2-utilizr/lib/arraySort';\nimport dashboards, { sGetDashboardsRoot } from './dashboards';\nimport selected from './selected';\nimport dashboardsFilter, { ownerData, sGetFilterName, sGetFilterOrder, sGetFilterOwner } from './dashboardsFilter';\nimport controlBar from './controlBar';\nimport visualizations from './visualizations';\nimport editDashboard from './editDashboard';\nimport printDashboard from './printDashboard';\nimport messages from './messages';\nimport user from './user';\nimport snackbar from './snackbar';\nimport itemFilters from './itemFilters';\nimport style from './style';\nimport dimensions from './dimensions';\nimport settings from './settings';\nimport activeModalDimension from './activeModalDimension';\nimport windowHeight from './windowHeight';\nconst USER = 'system'; // Reducers\n\nexport default combineReducers({\n  dashboards,\n  selected,\n  dashboardsFilter,\n  controlBar,\n  visualizations,\n  messages,\n  user,\n  editDashboard,\n  printDashboard,\n  itemFilters,\n  style,\n  snackbar,\n  dimensions,\n  settings,\n  activeModalDimension,\n  windowHeight\n}); // Map constants to data\n\nconst mapConstToData = {\n  NAME: 'name',\n  ITEMS: 'numberOfItems',\n  CREATED: 'created',\n  OWNER: 'owner'\n}; // Selectors\n// Filter dashboards by name\n\nexport const sFilterDashboardsByName = (dashboards, filter) => dashboards.filter(d => d.displayName.toLowerCase().includes(filter.toLowerCase())); // Filter dashboards by owner, TODO FIXME\n\nexport const sFilterDashboardsByOwner = (dashboards, filter) => {\n  const ME = ownerData[1]; // TODO\n\n  const OTHERS = ownerData[2]; // TODO\n\n  switch (filter) {\n    case ME:\n      return dashboards.filter(d => d.owner === USER);\n\n    case OTHERS:\n      return dashboards.filter(d => d.owner !== USER);\n\n    default:\n      return dashboards;\n  }\n}; // Filter dashboards by order\n\nexport const sFilterDashboardsByOrder = (dashboards, filter) => {\n  const filterValues = filter.split(':');\n  const key = filterValues[0];\n  const direction = filterValues[1];\n  return arraySort(dashboards, direction, mapConstToData[key]);\n}; // Selectors dependency level 2\n// Get filtered dashboards\n\nexport const sGetFilteredDashboards = state => {\n  const dashboards = sGetDashboardsRoot(state);\n  const nameFilter = sGetFilterName(state);\n  const ownerFilter = sGetFilterOwner(state);\n  const orderFilter = sGetFilterOrder(state);\n  return sFilterDashboardsByOrder(sFilterDashboardsByName(sFilterDashboardsByOwner(dashboards, ownerFilter), nameFilter), orderFilter);\n};","import { createStore, applyMiddleware, compose } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport reducer from './reducers';\n\nconst configureStore = () => {\n  const middleware = [thunk]; // Enable Redux devtools if extension is installed instead of redux-logger\n\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n  if (!window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ && process.env.NODE_ENV !== 'production') {\n    middleware.push(createLogger());\n  }\n\n  return createStore(reducer, composeEnhancers(applyMiddleware(...middleware)));\n};\n\nexport default configureStore;","//------------------------------------------------------------------------------\n// <auto-generated>\n// This code was generated by d2-i18n-generate.\n//\n// Changes to this file may cause incorrect behavior and will be lost if\n// the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\nimport i18n from '@dhis2/d2-i18n';\nimport arTranslations from './ar/translations.json';\nimport ar_IQTranslations from './ar_IQ/translations.json';\nimport daTranslations from './da/translations.json';\nimport enTranslations from './en/translations.json';\nimport esTranslations from './es/translations.json';\nimport frTranslations from './fr/translations.json';\nimport idTranslations from './id/translations.json';\nimport kmTranslations from './km/translations.json';\nimport loTranslations from './lo/translations.json';\nimport myTranslations from './my/translations.json';\nimport nbTranslations from './nb/translations.json';\nimport prsTranslations from './prs/translations.json';\nimport psTranslations from './ps/translations.json';\nimport ptTranslations from './pt/translations.json';\nimport pt_BRTranslations from './pt_BR/translations.json';\nimport ruTranslations from './ru/translations.json';\nimport svTranslations from './sv/translations.json';\nimport tetTranslations from './tet/translations.json';\nimport tgTranslations from './tg/translations.json';\nimport ukTranslations from './uk/translations.json';\nimport urTranslations from './ur/translations.json';\nimport uz_CyrlTranslations from './uz_Cyrl/translations.json';\nimport viTranslations from './vi/translations.json';\nimport zhTranslations from './zh/translations.json';\nimport zh_CNTranslations from './zh_CN/translations.json';\nconst namespace = 'default';\ni18n.addResources('ar', namespace, arTranslations);\ni18n.addResources('ar_IQ', namespace, ar_IQTranslations);\ni18n.addResources('da', namespace, daTranslations);\ni18n.addResources('en', namespace, enTranslations);\ni18n.addResources('es', namespace, esTranslations);\ni18n.addResources('fr', namespace, frTranslations);\ni18n.addResources('id', namespace, idTranslations);\ni18n.addResources('km', namespace, kmTranslations);\ni18n.addResources('lo', namespace, loTranslations);\ni18n.addResources('my', namespace, myTranslations);\ni18n.addResources('nb', namespace, nbTranslations);\ni18n.addResources('prs', namespace, prsTranslations);\ni18n.addResources('ps', namespace, psTranslations);\ni18n.addResources('pt', namespace, ptTranslations);\ni18n.addResources('pt_BR', namespace, pt_BRTranslations);\ni18n.addResources('ru', namespace, ruTranslations);\ni18n.addResources('sv', namespace, svTranslations);\ni18n.addResources('tet', namespace, tetTranslations);\ni18n.addResources('tg', namespace, tgTranslations);\ni18n.addResources('uk', namespace, ukTranslations);\ni18n.addResources('ur', namespace, urTranslations);\ni18n.addResources('uz_Cyrl', namespace, uz_CyrlTranslations);\ni18n.addResources('vi', namespace, viTranslations);\ni18n.addResources('zh', namespace, zhTranslations);\ni18n.addResources('zh_CN', namespace, zh_CNTranslations);\nexport default i18n;","import React from 'react';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport dhis2theme from '@dhis2/d2-ui-core/theme/mui3.theme';\nimport { Provider as ReduxProvider } from 'react-redux';\nimport { D2Shim } from '@dhis2/app-runtime-adapter-d2';\nimport App from './components/App';\nimport configureStore from './configureStore';\nimport './AppWrapper.css';\nimport './locales';\n\nconst muiTheme = () => createMuiTheme(dhis2theme);\n\nconst schemas = ['chart', 'map', 'report', 'reportTable', 'eventChart', 'eventReport', 'dashboard', 'organisationUnit', 'userGroup'];\nconst appConfig = {\n  schemas\n};\nconst authorization = process.env.REACT_APP_DHIS2_AUTHORIZATION || null; // TODO: ER and EV plugins require the auth header in development mode.\n// Remove this when these plugins are rewritten\n\nif (authorization) {\n  appConfig.headers = {\n    Authorization: authorization\n  };\n}\n\nconst AppWrapper = () => {\n  return <ReduxProvider store={configureStore()}>\n            <MuiThemeProvider theme={muiTheme()}>\n                <D2Shim appConfig={appConfig} i18nRoot=\"./i18n\">\n                    {({\n          d2\n        }) => {\n          if (!d2) {\n            // TODO: Handle errors in d2 initialization\n            return null;\n          }\n\n          return <App d2={d2} />;\n        }}\n                </D2Shim>\n            </MuiThemeProvider>\n        </ReduxProvider>;\n};\n\nexport default AppWrapper;","import isObject from 'lodash/isObject'; // validation\n\nexport function orNull(param) {\n  return param === undefined ? null : param;\n}\nexport function orArray(param) {\n  return Array.isArray(param) ? param : [];\n}\nexport function orObject(param) {\n  return isObject(param) ? param : {};\n} // array\n\nexport function arrayGetById(array, id) {\n  return array.find(item => item.id === id);\n} // object\n\nexport function arrayToIdMap(array) {\n  return array.reduce((obj, item) => {\n    obj[item.id] = item;\n    return obj;\n  }, {});\n} // date\n\nexport function getDate() {\n  const y = Math.floor(Math.random() * 3) + 2015;\n  const M = Math.floor(Math.random() * 12) + 1;\n  const d = Math.floor(Math.random() * 28) + 1; // const h = Math.floor(Math.random() * 23) + 1;\n  // const m = Math.floor(Math.random() * 59) + 1;\n  // const s = Math.floor(Math.random() * 59) + 1;\n\n  return new Date(`${y}-${M}-${d}`).toJSON().replace('T', ' ').substr(0, 10);\n}\nexport const formatDate = (value, uiLocale) => {\n  if (typeof global.Intl !== 'undefined' && Intl.DateTimeFormat) {\n    const locale = uiLocale || 'en';\n    return new Intl.DateTimeFormat(locale, {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    }).format(new Date(value));\n  }\n\n  return value.substr(0, 19).replace('T', ' ');\n};\n/**\n * Sorts an array of objects based on provided date property\n *\n * @param {Array} items Array of objects\n * @param {String} dateProp Name of the date property to be used for sorting\n * @param {Boolean} ascending Whether to sort ascending or descending\n */\n\nexport const sortByDate = (items, dateProp, ascending = true) => {\n  const values = Object.values(items);\n  values.sort((a, b) => {\n    const aDate = new Date(a[dateProp]);\n    const bDate = new Date(b[dateProp]);\n    return ascending ? aDate - bDate : bDate - aDate;\n  });\n  return values;\n}; // reducer validator\n\nexport const validateReducer = (value, defaultValue) => value === undefined || value === null ? defaultValue : value;\nexport const getBaseUrl = d2 => {\n  const api = d2.Api.getApi();\n  const idx = api.baseUrl.indexOf('/api');\n  return idx > -1 ? api.baseUrl.slice(0, idx) : api.baseUrl;\n};\nexport const getWithoutId = object => ({ ...object,\n  id: undefined\n});","import i18n from '@dhis2/d2-i18n';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\nimport ExtensionIcon from '@material-ui/icons/Extension';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport PersonIcon from '@material-ui/icons/Person';\nimport FontDownloadIcon from '@material-ui/icons/FontDownload';\nimport EmailIcon from '@material-ui/icons/Email';\nimport CropFreeIcon from '@material-ui/icons/CropFree';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\nimport { getBaseUrl } from './util'; // Item types\n\nexport const VISUALIZATION = 'VISUALIZATION';\nexport const REPORT_TABLE = 'REPORT_TABLE';\nexport const CHART = 'CHART';\nexport const MAP = 'MAP';\nexport const EVENT_REPORT = 'EVENT_REPORT';\nexport const EVENT_CHART = 'EVENT_CHART';\nexport const APP = 'APP';\nexport const REPORTS = 'REPORTS';\nexport const RESOURCES = 'RESOURCES';\nexport const USERS = 'USERS';\nexport const MESSAGES = 'MESSAGES';\nexport const TEXT = 'TEXT';\nexport const SPACER = 'SPACER';\nexport const PAGEBREAK = 'PAGEBREAK';\nexport const PRINT_TITLE_PAGE = 'PRINT_TITLE_PAGE';\nconst DOMAIN_TYPE_AGGREGATE = 'AGGREGATE';\nconst DOMAIN_TYPE_TRACKER = 'TRACKER'; // Dashboard helpers\n\nexport const isVisualizationType = item => !!itemTypeMap[item.type].isVisualizationType;\nexport const hasMapView = itemType => itemTypeMap[itemType].domainType === DOMAIN_TYPE_AGGREGATE;\nexport const isTrackerDomainType = itemType => itemTypeMap[itemType].domainType === DOMAIN_TYPE_TRACKER;\nexport const getDefaultItemCount = itemType => itemTypeMap[itemType].defaultItemCount || 5;\nexport const getAppName = itemType => itemTypeMap[itemType].appName || ''; // Item type map\n\nexport const itemTypeMap = {\n  [VISUALIZATION]: {\n    id: VISUALIZATION,\n    endPointName: 'visualizations',\n    propName: 'visualization',\n    pluralTitle: i18n.t('Visualizations'),\n    appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n    appName: 'Data Visualizer',\n    defaultItemCount: 10\n  },\n  [REPORT_TABLE]: {\n    id: REPORT_TABLE,\n    endPointName: 'visualizations',\n    propName: 'visualization',\n    pluralTitle: i18n.t('Pivot tables'),\n    domainType: DOMAIN_TYPE_AGGREGATE,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n    appName: 'Data Visualizer'\n  },\n  [CHART]: {\n    id: CHART,\n    endPointName: 'visualizations',\n    propName: 'visualization',\n    pluralTitle: i18n.t('Charts'),\n    domainType: DOMAIN_TYPE_AGGREGATE,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n    appName: 'Data Visualizer'\n  },\n  [MAP]: {\n    id: MAP,\n    endPointName: 'maps',\n    propName: 'map',\n    pluralTitle: i18n.t('Maps'),\n    domainType: DOMAIN_TYPE_AGGREGATE,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-maps/?id=${id}`,\n    appName: 'Maps'\n  },\n  [EVENT_REPORT]: {\n    id: EVENT_REPORT,\n    endPointName: 'eventReports',\n    propName: 'eventReport',\n    pluralTitle: i18n.t('Event reports'),\n    domainType: DOMAIN_TYPE_TRACKER,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-event-reports/?id=${id}`,\n    appName: 'Event Reports'\n  },\n  [EVENT_CHART]: {\n    id: EVENT_CHART,\n    endPointName: 'eventCharts',\n    propName: 'eventChart',\n    pluralTitle: i18n.t('Event charts'),\n    domainType: DOMAIN_TYPE_TRACKER,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-event-visualizer/?id=${id}`,\n    appName: 'Event Visualizer'\n  },\n  [APP]: {\n    endPointName: 'apps',\n    propName: 'appKey',\n    pluralTitle: i18n.t('Apps')\n  },\n  [REPORTS]: {\n    id: REPORTS,\n    endPointName: 'reports',\n    propName: 'reports',\n    pluralTitle: i18n.t('Reports'),\n    appUrl: (id, type) => {\n      switch (type) {\n        case 'HTML':\n          return `dhis-web-reports/#/standard-report/view/${id}`;\n\n        case 'JASPER_REPORT_TABLE':\n        case 'JASPER_JDBC':\n        default:\n          return `api/reports/${id}/data.pdf?t=${new Date().getTime()}`;\n      }\n    }\n  },\n  [RESOURCES]: {\n    id: RESOURCES,\n    endPointName: 'resources',\n    propName: 'resources',\n    pluralTitle: i18n.t('Resources'),\n    appUrl: id => `api/documents/${id}/data`\n  },\n  [USERS]: {\n    id: USERS,\n    endPointName: 'users',\n    propName: 'users',\n    pluralTitle: i18n.t('Users'),\n    appUrl: id => `dhis-web-dashboard-integration/profile.action?id=${id}`\n  },\n  [TEXT]: {\n    id: TEXT,\n    propName: 'text'\n  },\n  [MESSAGES]: {\n    propName: 'messages'\n  },\n  [SPACER]: {\n    propName: 'text'\n  },\n  [PAGEBREAK]: {\n    propName: 'text'\n  },\n  [PRINT_TITLE_PAGE]: {\n    propName: 'text'\n  }\n};\nexport const getEndPointName = type => itemTypeMap[type].endPointName;\nexport const getItemUrl = (type, item, d2) => {\n  let url;\n\n  if (type === APP) {\n    url = item.launchUrl;\n  }\n\n  if (itemTypeMap[type] && itemTypeMap[type].appUrl) {\n    url = `${getBaseUrl(d2)}/${itemTypeMap[type].appUrl(item.id, item.type)}`;\n  }\n\n  return url;\n};\nexport const getItemIcon = type => {\n  switch (type) {\n    case REPORT_TABLE:\n    case EVENT_REPORT:\n    case REPORTS:\n      return TableIcon;\n\n    case CHART:\n    case EVENT_CHART:\n      return ChartIcon;\n\n    case MAP:\n      return MapIcon;\n\n    case APP:\n      return ExtensionIcon;\n\n    case RESOURCES:\n      return DescriptionIcon;\n\n    case USERS:\n      return PersonIcon;\n\n    case TEXT:\n      return FontDownloadIcon;\n\n    case MESSAGES:\n      return EmailIcon;\n\n    case SPACER:\n      return CropFreeIcon;\n\n    default:\n      return NotInterestedIcon;\n  }\n};","import isFunction from 'd2-utilizr/lib/isFunction';\nimport { orObject } from '../../modules/util'; // Dimensions for the react-grid-layout\n\nexport const GRID_COMPACT_TYPE = 'vertical'; // vertical | horizonal | null\n\nexport const GRID_ROW_HEIGHT = 10;\nconst GRID_COLUMN_WIDTH_PX = 20;\nconst GRID_LAYOUT = 'FLEXIBLE'; // FIXED | FLEXIBLE\n\nexport const MARGIN = [10, 10];\nexport const NEW_ITEM_SHAPE = {\n  x: 0,\n  y: 0,\n  w: 20,\n  h: 29\n}; // Dimensions for getShape\n\nconst NUMBER_OF_ITEM_COLS = 2;\nconst GRID_COLUMNS = 60;\nconst MAX_ITEM_GRID_WIDTH = GRID_COLUMNS - 1;\nexport const MAX_ITEM_GRID_HEIGHT = 34;\nexport const MAX_ITEM_GRID_HEIGHT_OIPP = 35;\nexport const MAX_ITEM_GRID_WIDTH_OIPP = 56; // for A4 landscape (297x210mm)\n// 794 px = (21cm / 2.54) * 96 pixels/inch\n// 1122 px = 29.7 /2.54 * 96 pixels/inch\n// const a4LandscapeHeightPx = 794\n\nexport const a4LandscapeWidthPx = 1102;\nexport const getGridColumns = () => {\n  switch (GRID_LAYOUT) {\n    case 'FLEXIBLE':\n      return GRID_COLUMNS;\n\n    case 'FIXED':\n      return Math.floor((window.innerWidth - 20) / GRID_COLUMN_WIDTH_PX);\n\n    default:\n      return GRID_COLUMNS;\n  }\n}; // isNonNegativeInteger\n\nconst isNonNegativeInteger = x => Number.isInteger(x) && x >= 0; // Does the item have all the shape properties?\n\n\nexport const hasShape = item => isNonNegativeInteger(item.x) && isNonNegativeInteger(item.y) && isNonNegativeInteger(item.w) && isNonNegativeInteger(item.h); // returns a rectangular grid block dimensioned with x, y, w, h in grid units.\n// based on a grid with 3 items across\n\nexport const getShape = i => {\n  if (!isNonNegativeInteger(i)) {\n    throw new Error('Invalid grid block number');\n  }\n\n  const col = i % NUMBER_OF_ITEM_COLS;\n  const row = Math.floor(i / NUMBER_OF_ITEM_COLS);\n  const itemWidth = Math.floor(MAX_ITEM_GRID_WIDTH / NUMBER_OF_ITEM_COLS);\n  const itemHeight = GRID_ROW_HEIGHT * 2;\n  return {\n    x: col * itemWidth,\n    y: row * itemHeight,\n    w: itemWidth,\n    h: itemHeight\n  };\n};\nexport const getGridItemProperties = itemId => {\n  return {\n    i: itemId,\n    minH: 4 // minimum height for item\n\n  };\n};\nexport const getPageBreakItemShape = (yPos, isStatic = true) => {\n  return {\n    x: 0,\n    y: yPos,\n    w: MAX_ITEM_GRID_WIDTH,\n    h: 5,\n    static: !!isStatic,\n    minH: 1\n  };\n};\nexport const getPrintTitlePageItemShape = isOneItemPerPage => {\n  return {\n    x: 0,\n    y: 0,\n    w: isOneItemPerPage ? MAX_ITEM_GRID_WIDTH_OIPP : MAX_ITEM_GRID_WIDTH,\n    h: MAX_ITEM_GRID_HEIGHT,\n    static: true,\n    minH: 1\n  };\n};\n/**\n * Calculates the grid item's original height in pixels based\n * on the height in grid units. This calculation\n * is copied directly from react-grid-layout GridItem.js (calcPosition)\n *\n * @param {Object} item item containing shape (x, y, w, h)\n */\n\nexport const getOriginalHeight = item => {\n  const originalHeight = Math.round(GRID_ROW_HEIGHT * item.h + Math.max(0, item.h - 1) * MARGIN[1]);\n  return {\n    originalHeight\n  };\n};\n/**\n * Returns an array of items containing the x, y, w, h dimensions\n * and the item's originalheight in pixels\n * @function\n * @param {Array} items\n * @returns {Array}\n */\n\nexport const withShape = items => items.map((item, index) => {\n  const itemWithShape = hasShape(item) ? item : Object.assign({}, item, getShape(index));\n  return Object.assign({}, itemWithShape, getOriginalHeight(itemWithShape));\n});\nexport const getGridItemDomId = id => `item-${id}`;\nexport function onItemResize(id) {\n  const el = orObject(document.querySelector(`#${getGridItemDomId(id)}`));\n  if (isFunction(el.setViewportSize)) setTimeout(() => el.setViewportSize(el.clientWidth - 5, el.clientHeight - 5), 10);\n}","import isObject from 'lodash/isObject';\nimport { VIS_TYPE_COLUMN, VIS_TYPE_PIVOT_TABLE } from '@dhis2/analytics';\nimport { apiFetchFavorite, getMapFields } from '../../../api/metadata';\nimport { REPORT_TABLE, CHART, MAP, EVENT_REPORT, EVENT_CHART, itemTypeMap } from '../../../modules/itemTypes';\nimport { getBaseUrl, getWithoutId } from '../../../modules/util';\nimport { getGridItemDomId } from '../../ItemGrid/gridUtil'; //external plugins\n\nconst itemTypeToExternalPlugin = {\n  [MAP]: 'mapPlugin',\n  [EVENT_REPORT]: 'eventReportPlugin',\n  [EVENT_CHART]: 'eventChartPlugin'\n};\n\nconst hasIntegratedPlugin = type => [CHART, REPORT_TABLE].includes(type);\n\nconst getPlugin = type => {\n  if (hasIntegratedPlugin(type)) {\n    return true;\n  }\n\n  const pluginName = itemTypeToExternalPlugin[type];\n  return global[pluginName];\n};\n\nexport const THEMATIC_LAYER = 'thematic';\nexport const pluginIsAvailable = (item = {}, visualization = {}) => {\n  const type = visualization.activeType || item.type;\n  return !!getPlugin(type);\n};\nexport const extractFavorite = item => {\n  if (!isObject(item)) {\n    return null;\n  }\n\n  const propName = itemTypeMap[item.type].propName;\n  return item[propName] || item.reportTable || item.chart || item.map || item.eventReport || item.eventChart || {};\n};\nexport const extractMapView = map => map.mapViews && map.mapViews.find(mv => mv.layer.includes(THEMATIC_LAYER));\nexport const loadPlugin = (plugin, config, credentials) => {\n  if (!(plugin && plugin.load)) {\n    return;\n  }\n\n  plugin.url = credentials.baseUrl;\n  plugin.loadingIndicator = true;\n  plugin.dashboard = true;\n\n  if (credentials.auth) {\n    plugin.auth = credentials.auth;\n  }\n\n  plugin.load(config);\n};\nexport const getId = item => extractFavorite(item).id;\nexport const getName = item => extractFavorite(item).name;\nexport const getDescription = item => extractFavorite(item).description;\nexport const getLink = (item, d2) => {\n  const baseUrl = getBaseUrl(d2);\n  const appUrl = itemTypeMap[item.type].appUrl(getId(item));\n  return `${baseUrl}/${appUrl}`;\n};\nexport const load = async (item, visualization, {\n  credentials,\n  activeType,\n  options = {}\n}) => {\n  const config = { ...visualization,\n    ...options,\n    el: getGridItemDomId(item.id)\n  };\n  const type = activeType || item.type;\n  const plugin = getPlugin(type);\n  loadPlugin(plugin, config, credentials);\n};\nexport const fetch = async item => {\n  const fetchedFavorite = await apiFetchFavorite(getId(item), item.type, {\n    fields: item.type === MAP ? getMapFields() : null\n  });\n  return fetchedFavorite;\n};\nexport const resize = item => {\n  const plugin = getPlugin(item.type);\n\n  if (plugin && plugin.resize) {\n    plugin.resize(getGridItemDomId(item.id));\n  }\n};\nexport const unmount = (item, activeType) => {\n  const plugin = getPlugin(activeType);\n\n  if (plugin && plugin.unmount) {\n    plugin.unmount(getGridItemDomId(item.id));\n  }\n};\nexport const getVisualizationConfig = (visualization, originalType, activeType) => {\n  if (originalType === MAP && originalType !== activeType) {\n    const extractedMapView = extractMapView(visualization);\n\n    if (extractedMapView === undefined) {\n      return null;\n    }\n\n    return getWithoutId({ ...visualization,\n      ...extractedMapView,\n      mapViews: undefined,\n      type: activeType === CHART ? VIS_TYPE_COLUMN : VIS_TYPE_PIVOT_TABLE\n    });\n  } else if (originalType === REPORT_TABLE && activeType === CHART) {\n    return getWithoutId({ ...visualization,\n      type: VIS_TYPE_COLUMN\n    });\n  } else if (originalType === CHART && activeType === REPORT_TABLE) {\n    return getWithoutId({ ...visualization,\n      type: VIS_TYPE_PIVOT_TABLE\n    });\n  }\n\n  return getWithoutId(visualization);\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemHeaderWrap\":\"ItemHeader_itemHeaderWrap__JcBP7\",\"itemTitle\":\"ItemHeader_itemTitle__34rHa\",\"itemActionsWrap\":\"ItemHeader_itemActionsWrap__Gx3D9\"};","import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { getEndPointName } from '../modules/itemTypes'; // Id, name\n\nexport const getIdNameFields = ({\n  rename\n} = {}) => ['id', `${rename ? 'displayName~rename(name)' : 'name,displayName'}`]; // Item\n\nexport const getItemFields = () => ['dimensionItem~rename(id)', 'displayName~rename(name)', 'dimensionItemType']; // Dimension\n\nexport const getDimensionFields = ({\n  withItems\n}) => arrayClean(['dimension', 'legendSet[id]', 'filter', 'programStage', withItems ? `items[${getItemFields().join(',')}]` : ``]); // Axis\n\nexport const getAxesFields = ({\n  withItems\n}) => [`columns[${getDimensionFields({\n  withItems\n}).join(',')}]`, `rows[${getDimensionFields({\n  withItems\n}).join(',')}]`, `filters[${getDimensionFields({\n  withItems\n}).join(',')}]`]; // Favorite\n\nexport const getFavoriteFields = ({\n  withDimensions,\n  withOptions\n}) => {\n  return arrayClean([`${getIdNameFields({\n    rename: true\n  }).join(',')}`, 'displayDescription~rename(description)', withDimensions ? `${getAxesFields({\n    withItems: true\n  }).join(',')}` : ``, withOptions ? ['*', '!attributeDimensions', '!attributeValues', '!category', '!categoryDimensions', '!categoryOptionGroupSetDimensions', '!columnDimensions', '!dataDimensionItems', '!dataElementDimensions', '!dataElementGroupSetDimensions', '!filterDimensions', '!itemOrganisationUnitGroups', '!lastUpdatedBy', '!organisationUnitGroupSetDimensions', '!organisationUnitLevels', '!organisationUnits', '!programIndicatorDimensions', '!relativePeriods', '!reportParams', '!rowDimensions', '!translations', '!userOrganisationUnit', '!userOrganisationUnitChildren', '!userOrganisationUnitGrandChildren'].join(',') : '']);\n};\nexport const getFavoritesFields = ({\n  withDimensions\n}) => [`reportTable[${getFavoriteFields({\n  withDimensions\n}).join(',')}]`, `chart[${['type', ...getFavoriteFields({\n  withDimensions\n})].join(',')}]`, `map[${getFavoriteFields({\n  withDimensions\n}).join(',')}]`, `eventReport[${getFavoriteFields({\n  withDimensions\n}).join(',')}]`, `eventChart[${getFavoriteFields({\n  withDimensions\n}).join(',')}]`]; // List item\n\nexport const getListItemFields = () => [`reports[${['type', ...getIdNameFields({\n  rename: true\n})].join(',')}]`, `resources[${getIdNameFields({\n  rename: true\n}).join(',')}]`, `users[${getIdNameFields({\n  rename: true\n}).join(',')}]`]; // Map\n\nexport const getMapFields = () => [`${getIdNameFields({\n  rename: true\n}).join(',')}`, 'user,longitude,latitude,zoom,basemap', `mapViews[${getFavoriteFields({\n  withDimensions: true,\n  withOptions: true\n})}]`]; // Api\n// Get more info about the favorite of a dashboard item\n\nexport const apiFetchFavorite = (id, type, {\n  fields\n}) => getInstance().then(d2 => d2.Api.getApi().get(`${getEndPointName(type)}/${id}`, {\n  fields: fields || getFavoriteFields({\n    withDimensions: true,\n    withOptions: true\n  })\n}));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"DashboardsBar_container__1xuCo\",\"overflowYAuto\":\"DashboardsBar_overflowYAuto__2mKmg\",\"overflowYHidden\":\"DashboardsBar_overflowYHidden__24dgC\",\"leftControls\":\"DashboardsBar_leftControls__k-Y57\",\"newLink\":\"DashboardsBar_newLink__2PkLQ\",\"rightControls\":\"DashboardsBar_rightControls__1cyr1\",\"topMargin\":\"DashboardsBar_topMargin__FKGgr\"};"],"sourceRoot":""}
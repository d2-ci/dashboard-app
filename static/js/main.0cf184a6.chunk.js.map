{"version":3,"sources":["api/metadata.js","modules/util.js","components/Item/ListItem/Item.module.css","components/ControlBar/styles/DashboardsBar.module.css","reducers/user.js","reducers/dashboards.js","reducers/editDashboard.js","reducers/editItemFilters.js","reducers/selected.js","actions/editItemFilters.js","reducers/itemFilters.js","actions/itemFilters.js","reducers/messages.js","api/messages.js","reducers/snackbar.js","actions/snackbar.js","reducers/visualizations.js","actions/visualizations.js","api/index.js","api/dashboards.js","components/SnackbarMessage/SnackbarMessage.js","actions/selected.js","api/localStorage.js","components/Item/MessagesItem/actions.js","api/editDashboard.js","actions/editDashboard.js","actions/dashboards.js","reducers/controlBar.js","api/controlBar.js","actions/controlBar.js","reducers/dimensions.js","reducers/settings.js","actions/dimensions.js","components/ControlBar/ShowMoreButton.js","components/ControlBar/controlBarDimensions.js","components/ControlBar/ControlBar.js","icons/Star.js","api/dataStatistics.js","components/ControlBar/DashboardItemChip.js","icons/AddCircle.js","icons/Clear.js","components/ControlBar/ClearButton.js","reducers/dashboardsFilter.js","components/ControlBar/Filter.js","components/ControlBar/DashboardsBar.js","actions/dashboardsFilter.js","components/Dashboard/DashboardVerticalOffset.js","components/ItemSelector/HeaderMenuItem.js","icons/Launch.js","components/ItemSelector/ContentMenuItem.js","components/ItemSelector/selectableItems.js","components/ItemSelector/CategorizedMenuGroup.js","components/ItemSelector/actions.js","components/ItemSelector/SinglesMenuGroup.js","components/ItemSelector/ItemSelector.js","components/TitleBar/EditTitleBar.js","components/ItemFilter/FilterDialog.js","reducers/activeModalDimension.js","actions/activeModalDimension.js","components/ItemFilter/FilterSelector.js","components/TitleBar/Info.js","components/TitleBar/ViewTitleBar.js","components/TitleBar/TitleBar.js","components/Item/VisualizationItem/DefaultPlugin.js","components/Item/VisualizationItem/assets/icons.js","components/Item/VisualizationItem/FatalErrorBoundary.js","components/Item/DeleteItemButton.js","components/Item/ItemHeader.js","components/Item/VisualizationItem/ItemHeaderButtons.js","components/Item/VisualizationItem/ItemFooter.js","modules/memoizeOne.js","components/Item/VisualizationItem/LoadingMask.js","components/Item/VisualizationItem/Item.js","widgets/Line.js","components/Item/MessagesItem/Item.js","components/Item/NotSupportedItem/Item.js","icons/Description.js","icons/Delete.js","components/Item/ListItem/Item.js","components/Item/ListItem/actions.js","components/Item/TextItem/Item.js","components/Item/AppItem/Item.js","components/Item/SpacerItem/Item.js","components/Item/Item.js","widgets/NoContentMessage.js","components/Item/ProgressiveLoadingContainer.js","components/ItemGrid/ItemGrid.js","components/FilterBar/FilterBadge.js","components/FilterBar/FilterBar.js","components/Dashboard/DashboardContent.js","components/Dashboard/ViewDashboard.js","components/ControlBar/ConfirmDeleteDialog.js","components/ControlBar/EditBar.js","components/Dashboard/EditDashboard.js","components/Dashboard/NewDashboard.js","components/Dashboard/Dashboard.js","components/Dashboard/dashboardModes.js","components/App.js","actions/user.js","locales/index.js","reducers/style.js","reducers/index.js","configureStore.js","index.js","components/ItemSelector/styles/ContentMenuItem.module.css","components/Item/styles/ItemHeader.module.css","components/ControlBar/styles/ControlBar.module.css","components/Item/VisualizationItem/styles/FatalErrorBoundary.module.css","components/ControlBar/styles/ClearButton.module.css","components/Item/VisualizationItem/plugin.js","components/ItemGrid/gridUtil.js","modules/itemTypes.js","components/ItemSelector/styles/CategorizedMenuGroup.module.css","components/Item/styles/DeleteItemButton.module.css"],"names":["getIdNameFields","rename","arguments","length","undefined","concat","getDimensionFields","_ref2","withItems","arrayClean","join","getAxesFields","_ref3","getFavoriteFields","_ref4","withDimensions","withOptions","getFavoritesFields","_ref5","Object","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","getListItemFields","getMapFields","apiFetchFavorite","id","type","_ref6","fields","getInstance","then","d2","Api","getApi","get","getEndPointName","orArray","param","Array","isArray","orObject","isObject","arrayToIdMap","array","reduce","obj","item","formatDate","value","uiLocale","global","Intl","DateTimeFormat","locale","year","month","day","format","Date","substr","replace","validateReducer","defaultValue","getBaseUrl","api","idx","baseUrl","indexOf","slice","getWithoutId","object","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","module","exports","list","itemicon","link","deleteicon","deletebutton","leftControls","rightControls","DEFAULT_STATE_USER","username","isSuperuser","sGetUserUsername","state","user","DEFAULT_STATE_DASHBOARDS","byId","items","updateDashboardProp","_ref","dashboardId","prop","objectSpread","defineProperty","sGetDashboardsRoot","dashboards","sGetDashboardById","sDashboardsIsFetching","sGetAllDashboards","sGetDashboardItems","sGetStarredDashboards","values","filter","dashboard","starred","sGetUnstarredDashboards","sGetDashboardsSortedByStarred","toConsumableArray","arraySort","getCustomDashboards","data","arrayFrom","map","d","name","displayName","description","displayDescription","favorite","owner","created","split","lastUpdated","access","numberOfItems","dashboardItems","isSpacerType","SPACER","VISUALIZATION","reportTable","REPORT_TABLE","chart","CHART","text","isTextType","emptyTextItemContent","DEFAULT_STATE_EDIT_DASHBOARD","NEW_DASHBOARD_STATE","sGetEditDashboardRoot","editDashboard","sGetIsEditing","isEmpty","sGetEditDashboardItems","DEFAULT_STATE_EDIT_ITEM_FILTERS","sGetEditItemFiltersRoot","editItemFilters","combineReducers","action","isLoading","showDescription","sGetSelectedRoot","selected","sGetSelectedId","sGetSelectedIsLoading","sGetSelectedShowDescription","acRemoveEditItemFilter","DEFAULT_STATE_ITEM_FILTERS","sGetItemFiltersRoot","itemFilters","sGetFiltersKeys","keys","acRemoveItemFilter","sGetMessagesRoot","messages","getMessages","url","catch","error","console","log","DEFAULT_STATE_SNACKBAR","message","duration","open","acCloseSnackbar","DEFAULT_STATE_VISUALIZATIONS","p","sGetVisualization","visualizations","sGetVisualizationsRoot","acAddVisualization","onError","getDashboardItemsFields","withFavorite","getDashboardFields","apiFetchDashboard","models","apiStarDashboard","isStarred","post","delete","apiDeleteDashboard","loadingDashboardMsg","SnackbarMessageContent","react_default","a","createElement","style","fontWeight","connect","_sGetSnackbar","snackbar","sGetSnackbar","snackbarOpen","snackbarMessage","snackbarDuration","onCloseSnackbar","props","Snackbar_default","zIndex","SnackbarMessage_SnackbarMessageContent","autoHideDuration","onClose","acSetSelectedId","acSetSelectedIsLoading","tLoadDashboard","asyncToGenerator","regenerator_default","mark","_callee","dispatch","dash","wrap","_context","prev","next","sent","acAppendDashboards","abrupt","Promise","resolve","t0","stop","_x","apply","this","tSetSelectedDashboardById","_callee2","getState","snackbarTimeout","onSuccess","_context2","setTimeout","dashboardName","customDashboard","acSetDashboardItems","withShape","localStorage","setItem","forEach","MAP","EVENT_REPORT","EVENT_CHART","extractFavorite","MESSAGES","messageConversations","filters","clearTimeout","_x2","_x3","saveDashboard","assign","width","w","height","h","save","msg","response","uid","updateDashboard","postDashboard","create","acAddDashboardItem","itemPropName","itemTypeMap","propName","generateUid","content","NEW_ITEM_SHAPE","acUpdateDashboardItem","acRemoveDashboardItem","acSetDashboardStarred","tFetchDashboards","collection","paging","toArray","userRows","sGetControlBarUserRows","controlBar","sGetControlBarRoot","KEY","hasNamespace","currentUser","dataStore","has","getNamespace","apiGetControlBarRows","_callee3","namespace","_context3","t1","t2","find","key","apiPostControlBarRows","_callee4","rows","_context4","set","_x4","_x5","acSetControlBarUserRows","DEFAULT_DIMENSIONS","getDimensionById","DIMENSION_ID_PERIOD","DIMENSION_ID_ORGUNIT","sGetDimensions","dimensions","DEFAULT_SETTINGS","keyDateFormat","keyAnalysisRelativePeriod","keyAnalysisDigitGroupSeparator","displayNameProperty","rootOrganisationUnit","sGetSettings","settings","sGetSettingsDisplayNameProperty","acSetDimensions","styles","showMore","color","colors","grey700","cursor","fontSize","paddingTop","&:hover","textDecoration","disabled","grey500","withStyles","onClick","isMaxHeight","classes","textAlign","className","i18n","t","MIN_ROW_COUNT","getRowsHeight","getNumRowsFromHeight","Math","floor","FIRST_ROW_PADDING_HEIGHT","getTopOffset","getControlBarHeight","ControlBar","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onStartDrag","setState","dragging","window","addEventListener","onDrag","onEndDrag","event","preventDefault","stopPropagation","newHeight","clientY","onChangeHeight","requestAnimationFrame","removeEventListener","draghandle","onMouseDown","max","rootStyle","top","backgroundColor","editMode","yellow050","white","paddingBottom","transition","root","children","renderDragHandle","React","Component","defaultProps","StarIcon","xmlns","viewBox","fill","apiPostDataStatistics","eventType","chip","margin","grey600","display","verticalAlign","icon","marginTop","unselected","label","chipProps","selectedState","Star","Link","to","debounce","lib","AddCircleIcon","teal600","ClearIcon","grey800","ClearButton","onClear","button","Clear","ownerData","DEFAULT_STATE_DASHBOARDS_FILTER_NAME","DEFAULT_STATE_DASHBOARDS_FILTER_OWNER","order","sGetDashboardsFilterRoot","dashboardsFilter","sGetFilterName","KEYCODE_ENTER","KEYCODE_ESCAPE","filterField","searchIcon","Filter","_Component","setFilterValue","onChangeName","target","handleKeyUp","keyCode","onKeypressEnter","inherits","createClass","nextProps","_this$props","startAdornment","InputAdornment_default","position","Search_default","endAdornment","ControlBar_ClearButton","Input_default","placeholder","onChange","onKeyUp","Function","prototype","MAX_ROW_COUNT","DashboardsBar","_getPrototypeOf2","_len","args","_key","setInitialDashboardState","adjustedHeight","newRows","newRowCount","min","onToggleMaxHeight","onSelectDashboard","history","push","selectedId","onChangeFilterName","rowCount","controlBarHeight","contentWrapperStyle","padding","overflowY","components_ControlBar_ControlBar","marginRight","AddCircle","ControlBar_Filter","ControlBar_DashboardItemChip","ControlBar_ShowMoreButton","mapDispatchToProps","withRouter","stateProps","dispatchProps","ownProps","displayDashboards","toLowerCase","includes","HeaderMenuItem","title","dense","LaunchIcon","LaunchLink","e","launchLink","rel","href","Launch","InsertButton","buttonInsert","ContentMenuItem","onInsert","visType","ItemIcon","getItemIcon","renderedItemIcon","visTypeIcons","menuItem","ContentMenuItem_LaunchLink","ContentMenuItem_InsertButton","singleItems","header","TEXT","spacerContent","categorizedItems","USERS","REPORTS","RESOURCES","APP","listItemTypes","CategorizedMenuGroup","addItem","tAddListItemContent","newItem","toggleSeeMore","seeMore","onChangeItemsLimit","_this2","_this$props2","hasMore","react","ItemSelector_HeaderMenuItem","itemUrl","getItemUrl","context","ItemSelector_ContentMenuItem","showMoreButton","contextTypes","PropTypes","isRequired","dashboardItem","listItemType","dashboardItemIndex","findIndex","category","addToDashboard","ItemSearchField","onFocus","ItemSelector","closeList","openList","_","fetchItems","anchorEl","currentTarget","setFilter","getCategorizedMenuGroups","itemType","endPointName","itemCount","getDefaultItemCount","allItems","maxOptions","ItemSelector_CategorizedMenuGroup","pluralTitle","getSinglesMenuGroups","ItemSelector_SinglesMenuGroup","getMenuGroups","queryString","add","Set","ItemSelector_ItemSearchField","Popover_default","anchorOrigin","horizontal","vertical","transformOrigin","PaperProps","disableAutoFocus","disableRestoreFocus","EditTitleBar","onChangeTitle","onChangeDescription","section","titleDescription","itemSelector","components_ItemSelector_ItemSelector","selectedDashboard","justifyContent","flex","clear","underline","&::before","borderBottom","&:hover::before","input","borderRadius","peId","ouId","FilterDialog","onConfirm","dimension","selectedItems","dialogId","commonProps","onSelect","onDeselect","onReorder","build","selectedPeriods","ouItems","dialogTitle","Dialog_default","maxWidth","disableEnforceFocus","dialogContent","DialogActions_default","kind","DEFAULT_STATE_ACTIVE_MODAL_DIMENSION","sGetActiveModalDimension","activeModalDimension","acSetActiveModalDimension","FilterSelector","openPanel","closePanel","closeDialog","clearActiveModalDimension","selectDimension","setActiveModalDimension","onSelectItems","dimensionId","setEditItemFilters","onDeselectItems","itemIdsToRemove","newList","removeEditItemFilter","onReorderItems","itemIds","oldList","reorderedList","saveFilter","filterItems","addItemFilter","removeItemFilter","theme","selectedDimensions","ArrowDropDown_default","Boolean","fontFamily","typography","onDimensionClick","selectedIds","ItemFilter_FilterDialog","withTheme","Info","show","toggle","InfoOutlined_default","NO_DESCRIPTION","actions","alignItems","marginLeft","starIcon","textButton","minWidth","editLink","titleBar","titleBarIcon","ViewTitleBar","toggleSharingDialog","sharingDialogIsOpen","onStarClick","onInfoClick","titleStyle","userSelect","StarBorder","TitleBar_Info","update","manage","ItemFilter_FilterSelector","d2_ui_sharing_dialog_default","onRequestClose","tStarDashboard","black","TitleBar","edit","TitleBar_EditTitleBar","TitleBar_ViewTitleBar","DefaultPlugin","pluginCredentials","shouldPluginReload","prevProps","reloadAllowed","filtersChanged","vis","visualization","prevVis","visChanged","activeType","reloadPlugin","pluginManager","currentVis","useActiveType","credentials","getActiveType","auth","defaultHeaders","Authorization","getGridItemDomId","textDiv","ThreeDots","SpeechBubble","fillRule","transform","Warning","FatalErrorBoundary","errorFound","info","container","icons_Warning","DeleteItemButton","deleteItemButton","Delete_default","red500","HEADER_MARGIN_HEIGHT","ItemHeader","actionButtons","itemId","forwardedRef","itemHeaderWrap","ref","itemTitle","itemActionsWrap","Item_DeleteItemButton","ConnectedItemHeader","forwardRef","iconFill","ItemHeaderButtons","_useState","useState","_useState2","slicedToArray","setAnchorEl","onSelectActiveType","isTrackerType","isTrackerDomainType","onViewTable","handleClose","onViewChart","onViewMap","canViewAs","isSingleValue","isYearOverYear","VIS_TYPE_GAUGE","VIS_TYPE_PIE","interpretationMenuLabel","activeFooter","pluginIsAvailable","Fragment","small","secondary","icons_ThreeDots","InsertChart_default","ViewList_default","hasMapView","Public_default","Launch_default","appName","getAppName","getLink","icons_SpeechBubble","onToggleFooter","scrollContainer","line","border","grey100","ItemFooter","objectId","getId","d2_ui_interpretations_default","memoizeOne","fn","lastArgs","lastValue","every","arg","i","progress","spacing","unit","alignSelf","outer","CircularProgress_default","overflow","textOverflow","whiteSpace","fontStretch","lineHeight","loadingCover","left","background","Item","showFooter","configLoaded","pluginIsLoaded","applyFilters","visRows","visColumns","columns","visFilters","dimensionFound","dimensionObjects","getUniqueKey","uniqueId","getPluginComponent","memoizedGetVisualizationConfig","memoizedGetContentStyle","originalHeight","headerRef","current","clientHeight","contentRef","offsetHeight","LoadingMask","es_lib","memoizedApplyFilters","onLoadingComplete","forDashboard","mapViews","layer","VisualizationItem_DefaultPlugin","onToggleItemExpanded","getContentStyle","headerHeight","measuredHeight","createRef","getVisualizationConfig","_componentDidMount","onVisualizationLoaded","prevState","VisualizationItem_ItemHeaderButtons","Item_ItemHeader","VisualizationItem_FatalErrorBoundary","VisualizationItem_ItemFooter","acSetActiveVisualizationType","grey200","Line","PRIVATE","messageTypes","_messageTypes","listStyleType","paddingLeft","seeAll","marginBottom","sender","snippet","maxHeight","MessagesItem","getMessageHref","msgIdentifier","messageType","getMessageSender","latestMsg","getMessageItems","editClass","readClass","read","msgDate","document","location","messageCount","userSettings","widgets_Line","string","MessagesContainer","NotSupportedItem","NotInterested_default","align","DescriptionIcon","DeleteIcon","getItemTitle","ListItem","tRemoveListItemContent","contentItems","index","el","getContentItems","contentItem","Description","deleteButton","icons_Delete","grey900","newContent","textField","onChangeText","updatedItem","d2_ui_rich_text","onEdit","multiline","fullWidth","textDivStyle","viewItem","getIframeSrc","appDetails","iframeSrc","launchUrl","ouIds","ouPath","AppItem","appKey","system","installedApps","app","src","SpacerItem","GridItem","VisualizationItem","TextItem","getGridItem","NoContentMessage","ProgressiveLoadingContainer","shouldLoad","containerRef","shouldLoadHandler","bufferPx","bufferFactor","innerHeight","rect","getBoundingClientRect","bottom","removeHandler","checkShouldLoad","debounceMs","registerHandler","_this3","objectWithoutProperties","eventProps","pick","EXPANDED_HEIGHT","ItemGrid","expandedItems","clickedId","isExpanded","onRemoveItem","onLayoutChange","newLayout","acUpdateDashboardLayout","onResizeStop","layout","oldItem","onItemResize","isVisualizationType","pluginResize","onRemoveItemWrapper","getItem","expandedItem","hProp","minH","ITEM_MIN_HEIGHT","randomNumber","random","getItems","getMemoizedItem","getItemComponent","itemClassNames","Item_ProgressiveLoadingContainer","Item_Item_Item","getItemComponents","memoize","widgets_NoContentMessage","react_grid_layout_default","MARGIN","cols","getGridColumns","rowHeight","GRID_ROW_HEIGHT","innerWidth","compactType","GRID_COMPACT_TYPE","isDraggable","isResizable","draggableCancel","validItems","hasShape","badgeContainer","badge","badgeRemove","FilterBadge","onRemove","count","FilterBar","onBadgeRemove","onBadgeClick","bar","FilterBar_FilterBadge","removeItemFIlter","filtersSelector","createSelector","arr","flexWrap","DashboardContent","components_TitleBar_TitleBar","components_FilterBar_FilterBar","components_ItemGrid_ItemGrid","Content","hasDashboardContent","dashboardsIsEmpty","Dashboard_DashboardContent","dashboardsLoaded","contentNotReady","ControlBar_DashboardsBar","Dashboard_DashboardVerticalOffset","ViewDashboard_Content","ConfirmDeleteDialog","onDeleteConfirmed","onContinueEditing","destructive","DialogTitle_default","DialogContent_default","DialogContentText_default","buttonBarStyle","EditBar","translationDialogIsOpen","dashboardModel","confirmDeleteDialogOpen","redirectUrl","onConfirmDelete","onSave","newId","onDiscard","onDiscardChanges","onDelete","onTranslationsSaved","translations","dbLocale","translation","property","onTranslate","fetchDashboardModel","toggleTranslationDialog","confirmDeleteDialog","deleteAccess","ControlBar_ConfirmDeleteDialog","translationDialog","d2_ui_translation_dialog_default","objectToTranslate","fieldsToTranslate","onTranslationSaved","onTranslationError","err","Redirect","updateAccess","discardBtnText","primary","sGetIsNewDashboard","dashboardToSave","tDeleteDashboard","acSetDashboardDisplayName","EditDashboard","initialized","initEditDashboard","setEditDashboard","getDashboardContent","EditDashboard_Content","ControlBar_EditBar","NewDashboard","setNewDashboard","Dashboard","setDashboard","match","params","selectDashboard","scrollToTop","scrollTo","mode","Dashboard_EditDashboard","Dashboard_NewDashboard","Dashboard_ViewDashboard","dashboardToSelect","preferredId","App","setCurrentUser","fetchDashboards","setControlBarRows","setDimensions","spacers","HeaderBar","HashRouter","Switch","Route","exact","path","render","components_Dashboard_Dashboard","components_SnackbarMessage_SnackbarMessage","childContextTypes","controlBarRows","displayNameProp","filteredDimensions","apiFetchDimensions","dim","dimensionType","dataDimensionType","tSetDimensions","moment","addResources","arTranslations","daTranslations","enTranslations","esTranslations","frTranslations","idTranslations","kmTranslations","loTranslations","myTranslations","prsTranslations","psTranslations","ptTranslations","pt_BRTranslations","ruTranslations","svTranslations","tetTranslations","tgTranslations","ukTranslations","urTranslations","viTranslations","zhTranslations","zh_CNTranslations","setDefaultNamespace","changeLanguage","objectClean","conversations","$merge","d2Object","keyUiLocale","authorities","newState","k","$unshift","idToRemove","$splice","stateItems","layoutHasChanged","newStateItems","x","y","stateItem","si","configureStore","middleware","thunk","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducer","applyMiddleware","configI18n","config","sources","manifest","isProd","getManifest","version","manifest_generated_at","process","activities","dhis","dhis2","apiVersion","headers","schemas","getUserSettings","d2Init","initializedD2","ReactDOM","build_es","es","store","createMuiTheme","dhis2theme","src_components_App","getElementById","init","itemWrap","itemTypeToExternalPlugin","_itemTypeToExternalPl","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_3__","getPlugin","hasIntegratedPlugin","eventReport","eventChart","loadPlugin","plugin","load","loadingIndicator","getName","appUrl","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","fetch","fetchedFavorite","resize","unmount","originalType","extractedMapView","mv","VIS_TYPE_COLUMN","VIS_TYPE_PIVOT_TABLE","__webpack_require__","__webpack_exports__","d2_utilizr_lib_isFunction__WEBPACK_IMPORTED_MODULE_0__","d2_utilizr_lib_isFunction__WEBPACK_IMPORTED_MODULE_0___default","n","_modules_util__WEBPACK_IMPORTED_MODULE_1__","isNonNegativeInteger","Number","isInteger","itemWithShape","Error","col","row","itemWidth","itemHeight","getShape","round","getOriginalHeight","querySelector","isFunction","setViewportSize","clientWidth","domainType","defaultItemCount","_itemTypeMap","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","TableIcon","ChartIcon","MapIcon","ExtensionIcon","PersonIcon","FontDownloadIcon","EmailIcon","CropFreeIcon","NotInterestedIcon"],"mappings":"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","file":"static/js/main.0cf184a6.chunk.js","sourcesContent":["import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\n\nimport { getEndPointName } from '../modules/itemTypes';\n\n// Id, name\nexport const getIdNameFields = ({ rename } = {}) => [\n    'id',\n    `${rename ? 'displayName~rename(name)' : 'name,displayName'}`,\n];\n\n// Item\nexport const getItemFields = () => [\n    'dimensionItem~rename(id)',\n    'displayName~rename(name)',\n    'dimensionItemType',\n];\n\n// Dimension\nexport const getDimensionFields = ({ withItems }) =>\n    arrayClean([\n        'dimension',\n        'legendSet[id]',\n        'filter',\n        'programStage',\n        withItems ? `items[${getItemFields().join(',')}]` : ``,\n    ]);\n\n// Axis\nexport const getAxesFields = ({ withItems }) => [\n    `columns[${getDimensionFields({ withItems }).join(',')}]`,\n    `rows[${getDimensionFields({ withItems }).join(',')}]`,\n    `filters[${getDimensionFields({ withItems }).join(',')}]`,\n];\n\n// Favorite\nexport const getFavoriteFields = ({ withDimensions, withOptions }) => {\n    return arrayClean([\n        `${getIdNameFields({ rename: true }).join(',')}`,\n        'displayDescription~rename(description)',\n        withDimensions ? `${getAxesFields({ withItems: true }).join(',')}` : ``,\n        withOptions\n            ? [\n                  '*',\n                  '!attributeDimensions',\n                  '!attributeValues',\n                  '!category',\n                  '!categoryDimensions',\n                  '!categoryOptionGroupSetDimensions',\n                  '!columnDimensions',\n                  '!dataDimensionItems',\n                  '!dataElementDimensions',\n                  '!dataElementGroupSetDimensions',\n                  '!filterDimensions',\n                  '!itemOrganisationUnitGroups',\n                  '!lastUpdatedBy',\n                  '!organisationUnitGroupSetDimensions',\n                  '!organisationUnitLevels',\n                  '!organisationUnits',\n                  '!programIndicatorDimensions',\n                  '!relativePeriods',\n                  '!reportParams',\n                  '!rowDimensions',\n                  '!series',\n                  '!translations',\n                  '!userOrganisationUnit',\n                  '!userOrganisationUnitChildren',\n                  '!userOrganisationUnitGrandChildren',\n              ].join(',')\n            : '',\n    ]);\n};\n\nexport const getFavoritesFields = ({ withDimensions }) => [\n    `reportTable[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `chart[${['type', ...getFavoriteFields({ withDimensions })].join(',')}]`,\n    `map[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `eventReport[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `eventChart[${getFavoriteFields({ withDimensions }).join(',')}]`,\n];\n\n// List item\nexport const getListItemFields = () => [\n    `reports[${getIdNameFields({ rename: true }).join(',')}]`,\n    `resources[${getIdNameFields({ rename: true }).join(',')}]`,\n    `users[${getIdNameFields({ rename: true }).join(',')}]`,\n];\n\n// Map\nexport const getMapFields = () => [\n    `${getIdNameFields({ rename: true }).join(',')}`,\n    'user,longitude,latitude,zoom,basemap',\n    `mapViews[${getFavoriteFields({\n        withDimensions: true,\n        withOptions: true,\n    })}]`,\n];\n\n// Api\n\n// Get more info about the favorite of a dashboard item\nexport const apiFetchFavorite = (id, type, { fields }) =>\n    getInstance().then(d2 =>\n        d2.Api.getApi().get(`${getEndPointName(type)}/${id}`, {\n            fields:\n                fields ||\n                getFavoriteFields({\n                    withDimensions: true,\n                    withOptions: true,\n                }),\n        })\n    );\n","import isObject from 'lodash/isObject';\n\n// validation\nexport function orNull(param) {\n    return param === undefined ? null : param;\n}\n\nexport function orArray(param) {\n    return Array.isArray(param) ? param : [];\n}\n\nexport function orObject(param) {\n    return isObject(param) ? param : {};\n}\n\n// array\nexport function arrayGetById(array, id) {\n    return array.find(item => item.id === id);\n}\n\n// object\nexport function arrayToIdMap(array) {\n    return array.reduce((obj, item) => {\n        obj[item.id] = item;\n        return obj;\n    }, {});\n}\n\n// date\nexport function getDate() {\n    const y = Math.floor(Math.random() * 3) + 2015;\n    const M = Math.floor(Math.random() * 12) + 1;\n    const d = Math.floor(Math.random() * 28) + 1;\n    // const h = Math.floor(Math.random() * 23) + 1;\n    // const m = Math.floor(Math.random() * 59) + 1;\n    // const s = Math.floor(Math.random() * 59) + 1;\n\n    return new Date(`${y}-${M}-${d}`)\n        .toJSON()\n        .replace('T', ' ')\n        .substr(0, 10);\n}\n\nexport const formatDate = (value, uiLocale) => {\n    if (typeof global.Intl !== 'undefined' && Intl.DateTimeFormat) {\n        const locale = uiLocale || 'en';\n        return new Intl.DateTimeFormat(locale, {\n            year: 'numeric',\n            month: 'short',\n            day: 'numeric',\n        }).format(new Date(value));\n    }\n\n    return value.substr(0, 19).replace('T', ' ');\n};\n\n/**\n * Sorts an array of objects based on provided date property\n *\n * @param {Array} items Array of objects\n * @param {String} dateProp Name of the date property to be used for sorting\n * @param {Boolean} ascending Whether to sort ascending or descending\n */\nexport const sortByDate = (items, dateProp, ascending = true) => {\n    const values = Object.values(items);\n\n    values.sort((a, b) => {\n        const aDate = new Date(a[dateProp]);\n        const bDate = new Date(b[dateProp]);\n\n        return ascending ? aDate - bDate : bDate - aDate;\n    });\n\n    return values;\n};\n\n// reducer validator\nexport const validateReducer = (value, defaultValue) =>\n    value === undefined || value === null ? defaultValue : value;\n\nexport const getBaseUrl = d2 => {\n    const api = d2.Api.getApi();\n    const idx = api.baseUrl.indexOf('/api');\n    return idx > -1 ? api.baseUrl.slice(0, idx) : api.baseUrl;\n};\n\nexport const getWithoutId = object => ({\n    ...object,\n    id: undefined,\n});\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Item_list__2oHc1\",\"item\":\"Item_item__lO40M\",\"itemicon\":\"Item_itemicon__dv5ah\",\"link\":\"Item_link__2gULT\",\"deleteicon\":\"Item_deleteicon__3c7bl\",\"deletebutton\":\"Item_deletebutton__1DfY5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"leftControls\":\"DashboardsBar_leftControls__2kr14\",\"rightControls\":\"DashboardsBar_rightControls__2l1lT\"};","export const RECEIVED_USER = 'RECEIVED_USER';\n\nexport const DEFAULT_STATE_USER = {\n    id: '',\n    username: '',\n    uiLocale: '',\n    isSuperuser: false,\n};\n\nexport default (state = DEFAULT_STATE_USER, action) => {\n    switch (action.type) {\n        case RECEIVED_USER: {\n            return fromD2ToUserObj(action.value);\n        }\n        default:\n            return state;\n    }\n};\n\nfunction fromD2ToUserObj(d2Object) {\n    return {\n        id: d2Object.id,\n        username: d2Object.username,\n        uiLocale: d2Object.settings.keyUiLocale,\n        isSuperuser: d2Object.authorities.has('ALL'),\n    };\n}\n\n// selectors\n\nexport const sGetUserId = state => state.user.id;\nexport const sGetUserUsername = state => state.user.username;\nexport const sGetIsSuperuser = state => state.user.isSuperuser;\nexport const sGetUiLocale = state => state.user.uiLocale;\n","/** @module reducers/dashboards */\n\nimport arrayFrom from 'd2-utilizr/lib/arrayFrom';\nimport arraySort from 'd2-utilizr/lib/arraySort';\n\nimport { orArray, orObject } from '../modules/util';\nimport {\n    SPACER,\n    isSpacerType,\n    isTextType,\n    emptyTextItemContent,\n    REPORT_TABLE,\n    CHART,\n    VISUALIZATION,\n} from '../modules/itemTypes';\n\nexport const SET_DASHBOARDS = 'SET_DASHBOARDS';\nexport const ADD_DASHBOARDS = 'ADD_DASHBOARDS';\nexport const SET_DASHBOARD_STARRED = 'SET_DASHBOARD_STARRED';\nexport const SET_DASHBOARD_DISPLAY_NAME = 'SET_DASHBOARD_DISPLAY_NAME';\nexport const SET_DASHBOARD_ITEMS = 'SET_DASHBOARD_ITEMS';\n\nexport const DEFAULT_STATE_DASHBOARDS = {\n    byId: null,\n    items: [],\n};\n\n// reducer helper functions\n\nconst updateDashboardProp = ({ state, dashboardId, prop, value }) => ({\n    byId: {\n        ...state.byId,\n        [dashboardId]: {\n            ...state.byId[dashboardId],\n            [prop]: value,\n        },\n    },\n    items: state.items,\n});\n\n/**\n * Reducer that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n * @returns {Object}\n */\nexport default (state = DEFAULT_STATE_DASHBOARDS, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS: {\n            return {\n                byId: action.value,\n                items: [],\n            };\n        }\n        case ADD_DASHBOARDS: {\n            return {\n                ...state,\n                byId: {\n                    ...state.byId,\n                    ...action.value,\n                },\n            };\n        }\n        case SET_DASHBOARD_STARRED: {\n            return updateDashboardProp({\n                state,\n                dashboardId: action.dashboardId,\n                prop: 'starred',\n                value: action.value,\n            });\n        }\n        case SET_DASHBOARD_DISPLAY_NAME: {\n            return updateDashboardProp({\n                state,\n                dashboardId: action.dashboardId,\n                prop: 'displayName',\n                value: action.value,\n            });\n        }\n        case SET_DASHBOARD_ITEMS: {\n            return {\n                ...state,\n                items: action.value,\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// root selector\n\nexport const sGetDashboardsRoot = state => state.dashboards;\n\n// selector level 1\n\n/**\n * Selector which returns a dashboard by id from the state object\n * If no matching dashboard is found it returns undefined\n * If dashboards.byId is null, then the dashboards api request\n * has not yet completed. If dashboards.byId is an empty object\n * then the dashboards api request is complete, but no dashboards\n * were returned\n *\n * @function\n * @param {Object} state The current state\n * @param {Number} id The id of the dashboard\n * @returns {Object | undefined}\n */\nexport const sGetDashboardById = (state, id) =>\n    orObject(sGetDashboardsRoot(state).byId)[id];\n\nexport const sDashboardsIsFetching = state => {\n    return sGetDashboardsRoot(state).byId === null;\n};\n\n/**\n * Selector which returns all dashboards (the byId object)\n *\n * @function\n * @param {Object} state The current state\n * @returns {Object | undefined}\n */\nexport const sGetAllDashboards = state =>\n    orObject(sGetDashboardsRoot(state).byId);\n\n/**\n * Selector which returns the current dashboard items\n *\n * @function\n * @param {Object} state The current state\n * @returns {Array}\n */\nexport const sGetDashboardItems = state => sGetDashboardsRoot(state).items;\n\n// selector level 2\n\nexport const sGetStarredDashboards = state =>\n    Object.values(sGetAllDashboards(state)).filter(\n        dashboard => dashboard.starred === true\n    );\n\nexport const sGetUnstarredDashboards = state =>\n    Object.values(sGetAllDashboards(state)).filter(\n        dashboard => dashboard.starred === false\n    );\n\n// selector level 3\n\nexport const sGetStarredDashboardIds = state => {\n    return sGetStarredDashboards(state).map(dashboard => dashboard.id);\n};\n\nexport const sGetUnstarredDashboardIds = state =>\n    sGetUnstarredDashboards(state).map(dashboard => dashboard.id);\n\nexport const sGetDashboardsSortedByStarred = state => [\n    ...arraySort(sGetStarredDashboards(state), 'ASC', 'displayName'),\n    ...arraySort(sGetUnstarredDashboards(state), 'ASC', 'displayName'),\n];\n\n// utils\n\n/**\n * Returns the array of dashboards, customized for ui\n * @function\n * @param {Array} data The original dashboard list\n * @returns {Array}\n */\nexport const getCustomDashboards = data => {\n    const uiItems = items =>\n        items.map(item => {\n            let type = isSpacerType(item) ? SPACER : item.type;\n\n            // TODO: temporary fix before 2.34 epic branch is merged\n            // if \"VISUALIZATION\", reset to \"REPORT_TABLE\" or \"CHART\"\n            if (type === VISUALIZATION) {\n                type = item.reportTable\n                    ? REPORT_TABLE\n                    : item.chart\n                    ? CHART\n                    : type;\n            }\n\n            const text = isTextType(item)\n                ? item.text === emptyTextItemContent\n                    ? ''\n                    : item.text\n                : null;\n\n            return {\n                ...item,\n                ...(text !== null ? { text } : {}),\n                type,\n            };\n        });\n\n    return arrayFrom(data).map(d => ({\n        id: d.id,\n        name: d.name,\n        displayName: d.displayName,\n        description: d.description,\n        displayDescription: d.displayDescription,\n        starred: d.favorite,\n        owner: d.user.name,\n        created: d.created\n            .split('T')\n            .join(' ')\n            .substr(0, 16),\n        lastUpdated: d.lastUpdated\n            .split('T')\n            .join(' ')\n            .substr(0, 16),\n        access: d.access,\n        numberOfItems: orArray(d.dashboardItems).length,\n        dashboardItems: uiItems(d.dashboardItems),\n    }));\n};\n","/** @module reducers/editDashboard */\nimport update from 'immutability-helper';\nimport isEmpty from 'lodash/isEmpty';\nimport { orArray, orObject } from '../modules/util';\n\nexport const RECEIVED_EDIT_DASHBOARD = 'RECEIVED_EDIT_DASHBOARD';\nexport const RECEIVED_NOT_EDITING = 'RECEIVED_NOT_EDITING';\nexport const START_NEW_DASHBOARD = 'START_NEW_DASHBOARD';\nexport const RECEIVED_TITLE = 'RECEIVED_TITLE';\nexport const RECEIVED_DESCRIPTION = 'RECEIVED_DESCRIPTION';\nexport const ADD_DASHBOARD_ITEM = 'ADD_DASHBOARD_ITEM';\nexport const REMOVE_DASHBOARD_ITEM = 'REMOVE_DASHBOARD_ITEM';\nexport const UPDATE_DASHBOARD_ITEM = 'UPDATE_DASHBOARD_ITEM';\nexport const RECEIVED_DASHBOARD_LAYOUT = 'RECEIVED_DASHBOARD_LAYOUT';\n\nexport const DEFAULT_STATE_EDIT_DASHBOARD = {};\nexport const NEW_DASHBOARD_STATE = {\n    id: '',\n    name: '',\n    access: {},\n    description: '',\n    dashboardItems: [],\n};\n\nexport default (state = DEFAULT_STATE_EDIT_DASHBOARD, action) => {\n    switch (action.type) {\n        case RECEIVED_EDIT_DASHBOARD: {\n            const newState = {};\n            Object.keys(NEW_DASHBOARD_STATE).map(\n                k => (newState[k] = action.value[k])\n            );\n            return newState;\n        }\n        case RECEIVED_NOT_EDITING:\n            return DEFAULT_STATE_EDIT_DASHBOARD;\n        case START_NEW_DASHBOARD:\n            return NEW_DASHBOARD_STATE;\n        case RECEIVED_TITLE: {\n            return Object.assign({}, state, { name: action.value });\n        }\n        case RECEIVED_DESCRIPTION: {\n            return Object.assign({}, state, {\n                description: action.value,\n            });\n        }\n        case ADD_DASHBOARD_ITEM:\n            return update(state, {\n                dashboardItems: { $unshift: [action.value] },\n            });\n        case REMOVE_DASHBOARD_ITEM: {\n            const idToRemove = action.value;\n\n            const dashboardItemIndex = state.dashboardItems.findIndex(\n                item => item.id === idToRemove\n            );\n\n            if (dashboardItemIndex > -1) {\n                return update(state, {\n                    dashboardItems: {\n                        $splice: [[dashboardItemIndex, 1]],\n                    },\n                });\n            }\n\n            return state;\n        }\n        case RECEIVED_DASHBOARD_LAYOUT: {\n            const stateItems = orArray(state.dashboardItems);\n            let layoutHasChanged = false;\n\n            const newStateItems = action.value.map(({ x, y, w, h, i }) => {\n                const stateItem = stateItems.find(si => si.id === i);\n\n                if (\n                    !(\n                        stateItem.x === x &&\n                        stateItem.y === y &&\n                        stateItem.w === w &&\n                        stateItem.h === h\n                    )\n                ) {\n                    layoutHasChanged = true;\n                    return Object.assign({}, stateItem, { w, h, x, y });\n                }\n\n                return stateItem;\n            });\n\n            return layoutHasChanged\n                ? {\n                      ...state,\n                      dashboardItems: newStateItems,\n                  }\n                : state;\n        }\n        case UPDATE_DASHBOARD_ITEM: {\n            const dashboardItem = action.value;\n\n            const dashboardItemIndex = state.dashboardItems.findIndex(\n                item => item.id === dashboardItem.id\n            );\n\n            if (dashboardItemIndex > -1) {\n                const newState = update(state, {\n                    dashboardItems: {\n                        $splice: [[dashboardItemIndex, 1, dashboardItem]],\n                    },\n                });\n\n                return newState;\n            }\n\n            return state;\n        }\n        default:\n            return state;\n    }\n};\n\n// root selector\n\nexport const sGetEditDashboardRoot = state => state.editDashboard;\n\n// selectors\n\nexport const sGetIsEditing = state => !isEmpty(state.editDashboard);\n\nexport const sGetIsNewDashboard = state => {\n    return (\n        !isEmpty(state.editDashboard) && sGetEditDashboardRoot(state).id === ''\n    );\n};\n\nexport const sGetEditDashboardItems = state =>\n    orObject(sGetEditDashboardRoot(state)).dashboardItems;\n","export const CLEAR_EDIT_ITEM_FILTERS = 'CLEAR_EDIT_ITEM_FILTERS';\nexport const REMOVE_EDIT_ITEM_FILTER = 'REMOVE_EDIT_ITEM_FILTER';\nexport const SET_EDIT_ITEM_FILTERS = 'SET_EDIT_ITEM_FILTERS';\n\nexport const DEFAULT_STATE_EDIT_ITEM_FILTERS = {};\n\nexport default (state = DEFAULT_STATE_EDIT_ITEM_FILTERS, action) => {\n    switch (action.type) {\n        case REMOVE_EDIT_ITEM_FILTER: {\n            const newState = { ...state };\n\n            delete newState[action.id];\n\n            return newState;\n        }\n        case SET_EDIT_ITEM_FILTERS: {\n            return action.filters;\n        }\n        case CLEAR_EDIT_ITEM_FILTERS: {\n            return DEFAULT_STATE_EDIT_ITEM_FILTERS;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetEditItemFiltersRoot = state => state.editItemFilters;\n\nexport const sGetEditFiltersKeys = state =>\n    Object.keys(sGetEditItemFiltersRoot(state));\n","/** @module reducers/selected */\nimport { combineReducers } from 'redux';\n\nimport { validateReducer } from '../modules/util';\n\nexport const SET_SELECTED_ID = 'SET_SELECTED_ID';\nexport const SET_SELECTED_ISLOADING = 'SET_SELECTED_ISLOADING';\nexport const SET_SELECTED_SHOWDESCRIPTION = 'SET_SELECTED_SHOWDESCRIPTION';\n\nexport const DEFAULT_STATE_SELECTED_ID = null;\nexport const DEFAULT_STATE_SELECTED_ISLOADING = false;\nexport const DEFAULT_STATE_SELECTED_SHOWDESCRIPTION = false;\n\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\nconst id = (state = DEFAULT_STATE_SELECTED_ID, action) => {\n    switch (action.type) {\n        case SET_SELECTED_ID:\n            return validateReducer(action.value, DEFAULT_STATE_SELECTED_ID);\n        default:\n            return state;\n    }\n};\n\nconst isLoading = (state = DEFAULT_STATE_SELECTED_ISLOADING, action) => {\n    switch (action.type) {\n        case SET_SELECTED_ISLOADING:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_SELECTED_ISLOADING\n            );\n        default:\n            return state;\n    }\n};\n\nconst showDescription = (\n    state = DEFAULT_STATE_SELECTED_SHOWDESCRIPTION,\n    action\n) => {\n    switch (action.type) {\n        case SET_SELECTED_SHOWDESCRIPTION:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_SELECTED_SHOWDESCRIPTION\n            );\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    id,\n    isLoading,\n    showDescription,\n});\n\n// Selectors\n\nexport const sGetSelectedRoot = state => state.selected;\n\nexport const sGetSelectedId = state => sGetSelectedRoot(state).id;\n\nexport const sGetSelectedIsLoading = state => sGetSelectedRoot(state).isLoading;\n\nexport const sGetSelectedShowDescription = state =>\n    sGetSelectedRoot(state).showDescription;\n","import {\n    REMOVE_EDIT_ITEM_FILTER,\n    SET_EDIT_ITEM_FILTERS,\n    CLEAR_EDIT_ITEM_FILTERS,\n} from '../reducers/editItemFilters';\n\n// actions\n\nexport const acRemoveEditItemFilter = id => ({\n    type: REMOVE_EDIT_ITEM_FILTER,\n    id,\n});\n\nexport const acClearEditItemFilters = () => ({\n    type: CLEAR_EDIT_ITEM_FILTERS,\n});\n\nexport const acSetEditItemFilters = filters => ({\n    type: SET_EDIT_ITEM_FILTERS,\n    filters,\n});\n","export const CLEAR_ITEM_FILTERS = 'CLEAR_ITEM_FILTERS';\nexport const SET_ITEM_FILTERS = 'SET_ITEM_FILTERS';\nexport const ADD_ITEM_FILTER = 'ADD_ITEM_FILTER';\nexport const REMOVE_ITEM_FILTER = 'REMOVE_ITEM_FILTER';\n\nexport const DEFAULT_STATE_ITEM_FILTERS = {};\n\nexport default (state = DEFAULT_STATE_ITEM_FILTERS, action) => {\n    switch (action.type) {\n        case ADD_ITEM_FILTER: {\n            return {\n                ...state,\n                [action.filter.id]: action.filter.value,\n            };\n        }\n        case REMOVE_ITEM_FILTER: {\n            const newState = { ...state };\n\n            delete newState[action.id];\n\n            return newState;\n        }\n        case SET_ITEM_FILTERS: {\n            return action.filters;\n        }\n        case CLEAR_ITEM_FILTERS: {\n            return DEFAULT_STATE_ITEM_FILTERS;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetItemFiltersRoot = state => state.itemFilters;\n\nexport const sGetFiltersKeys = state => Object.keys(sGetItemFiltersRoot(state));\n","import {\n    ADD_ITEM_FILTER,\n    REMOVE_ITEM_FILTER,\n    SET_ITEM_FILTERS,\n    CLEAR_ITEM_FILTERS,\n} from '../reducers/itemFilters';\n\nexport const FILTER_ORG_UNIT = 'ou';\n\n// actions\n\nexport const acAddItemFilter = filter => ({\n    type: ADD_ITEM_FILTER,\n    filter,\n});\n\nexport const acRemoveItemFilter = id => ({\n    type: REMOVE_ITEM_FILTER,\n    id,\n});\n\nexport const acClearItemFilters = () => ({\n    type: CLEAR_ITEM_FILTERS,\n});\n\nexport const acSetItemFilters = filters => ({\n    type: SET_ITEM_FILTERS,\n    filters,\n});\n","import update from 'immutability-helper';\nimport { arrayToIdMap } from '../modules/util';\n\nexport const RECEIVED_MESSAGES = 'RECEIVED_MESSAGES';\n\nexport default (state = {}, action) => {\n    switch (action.type) {\n        case RECEIVED_MESSAGES: {\n            const conversations = arrayToIdMap(action.value);\n\n            const newState = update(state, { $merge: conversations });\n\n            return newState;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetMessagesRoot = state => state.messages;\n","import { getInstance } from 'd2';\n\nexport const getMessages = () => {\n    const fields =\n        'id,messageCount,lastUpdated,messageType,displayName,read,messages[id,read,sender[id,displayName],text,lastUpdated]';\n    const url = `/messageConversations?fields=${fields}&order=read:asc&pageSize=200`;\n    return getInstance()\n        .then(d2 => d2.Api.getApi().get(url))\n        .catch(error => console.log('Error:', error));\n};\n","export const RECEIVED_SNACKBAR_MESSAGE = 'RECEIVED_SNACKBAR_MESSAGE';\nexport const CLOSE_SNACKBAR = 'CLOSE_SNACKBAR';\n\nexport const DEFAULT_STATE_SNACKBAR = {\n    message: {},\n    duration: null,\n    open: false,\n};\n\nexport default (state = DEFAULT_STATE_SNACKBAR, action) => {\n    switch (action.type) {\n        case RECEIVED_SNACKBAR_MESSAGE: {\n            return { ...state, ...action.value };\n        }\n        case CLOSE_SNACKBAR: {\n            return DEFAULT_STATE_SNACKBAR;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetSnackbar = state => state.snackbar || DEFAULT_STATE_SNACKBAR;\n","import {\n    RECEIVED_SNACKBAR_MESSAGE,\n    CLOSE_SNACKBAR,\n} from '../reducers/snackbar';\n\nexport const acReceivedSnackbarMessage = value => ({\n    type: RECEIVED_SNACKBAR_MESSAGE,\n    value,\n});\n\nexport const acCloseSnackbar = () => ({\n    type: CLOSE_SNACKBAR,\n});\n","import { orObject } from '../modules/util';\nimport objectClean from 'd2-utilizr/lib/objectClean';\n\n/** @module reducers/visualizations */\n\nexport const ADD_VISUALIZATION = 'ADD_VISUALIZATION';\nexport const SET_ACTIVE_VISUALIZATION_TYPE = 'SET_ACTIVE_VISUALIZATION_TYPE';\n\nexport const DEFAULT_STATE_VISUALIZATIONS = {};\n\nconst isEmpty = p => p === undefined || p === null;\n\nexport default (state = DEFAULT_STATE_VISUALIZATIONS, action) => {\n    switch (action.type) {\n        case ADD_VISUALIZATION: {\n            return {\n                ...state,\n                [action.value.id]: objectClean(\n                    {\n                        ...orObject(state[action.value.id]),\n                        ...action.value,\n                    },\n                    isEmpty\n                ),\n            };\n        }\n        case SET_ACTIVE_VISUALIZATION_TYPE: {\n            return {\n                ...state,\n                [action.id]: objectClean(\n                    {\n                        ...orObject(state[action.id]),\n                        activeType: action.activeType,\n                    },\n                    isEmpty\n                ),\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// root selector\nexport const sGetVisualizationsRoot = state => state.visualizations;\n\n// selectors level 1\nexport const sGetVisualization = (state, id) => {\n    return sGetVisualizationsRoot(state)[id];\n};\n","import {\n    ADD_VISUALIZATION,\n    SET_ACTIVE_VISUALIZATION_TYPE,\n} from '../reducers/visualizations';\n\nexport const acAddVisualization = value => ({\n    type: ADD_VISUALIZATION,\n    value,\n});\n\nexport const acSetActiveVisualizationType = (id, activeType) => {\n    const action = {\n        type: SET_ACTIVE_VISUALIZATION_TYPE,\n        id,\n        activeType,\n    };\n\n    return action;\n};\n","import arrayClean from 'd2-utilizr/lib/arrayClean';\nimport {\n    getListItemFields,\n    getFavoritesFields,\n    getIdNameFields,\n} from './metadata';\n\n// Helper functions\n\nexport const onError = error => console.log('Error: ', error);\n\n// Dashboard item\nexport const getDashboardItemsFields = ({ withFavorite } = {}) =>\n    arrayClean([\n        'id',\n        'type',\n        'shape',\n        'x',\n        'y',\n        'width~rename(w)',\n        'height~rename(h)',\n        'messages',\n        'text',\n        'appKey',\n        `${getListItemFields().join(',')}`,\n        withFavorite\n            ? `${getFavoritesFields({\n                  withDimensions: withFavorite.withDimensions,\n              }).join(',')}`\n            : ``,\n    ]);\n\n// Dashboard\nexport const getDashboardFields = ({ withItems, withFavorite } = {}) =>\n    arrayClean([\n        `${getIdNameFields().join(',')}`,\n        'description',\n        'displayDescription',\n        'favorite',\n        `user[${getIdNameFields({ rename: true }).join(',')}]`,\n        'created',\n        'lastUpdated',\n        'access',\n        withItems\n            ? `dashboardItems[${getDashboardItemsFields({\n                  withFavorite,\n              }).join(',')}]`\n            : ``,\n    ]);\n","import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { onError, getDashboardFields } from './index';\n\n// Get \"all\" dashboards on startup\nexport const apiFetchDashboards = () =>\n    getInstance()\n        .then(d2 =>\n            d2.models.dashboard.list({\n                fields: [\n                    getDashboardFields().join(','),\n                    'dashboardItems[id]',\n                ].join(','),\n                paging: 'false',\n            })\n        )\n        .catch(onError);\n\n// Get more info about selected dashboard\nexport const apiFetchDashboard = id =>\n    getInstance()\n        .then(d2 =>\n            d2.models.dashboard.get(id, {\n                fields: arrayClean(\n                    getDashboardFields({\n                        withItems: true,\n                        withFavorite: { withDimensions: false },\n                    })\n                ).join(','),\n            })\n        )\n        .catch(onError);\n\n// Star dashboard\nexport const apiStarDashboard = (id, isStarred) => {\n    const url = `dashboards/${id}/favorite`;\n\n    getInstance().then(d2 => {\n        if (isStarred) {\n            d2.Api.getApi().post(url);\n        } else {\n            d2.Api.getApi().delete(url);\n        }\n    });\n};\n\nexport const apiDeleteDashboard = id => {\n    return getInstance()\n        .then(d2 => {\n            return d2.models.dashboards\n                .get(id)\n                .then(dashboard => dashboard.delete());\n        })\n        .catch(onError);\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport PropTypes from 'prop-types';\n\nimport { sGetSnackbar } from '../../reducers/snackbar';\nimport { acCloseSnackbar } from '../../actions/snackbar';\n\nconst LOADING_DASHBOARD = 'LOADING_DASHBOARD';\nexport const loadingDashboardMsg = { name: '', type: LOADING_DASHBOARD };\n\nconst SnackbarMessageContent = ({ message }) => {\n    if (typeof message === 'object') {\n        //future message types:  switch(message.type)\n        return (\n            <span>\n                Loading <span style={{ fontWeight: 800 }}>{message.name}</span>{' '}\n                dashboard\n            </span>\n        );\n    }\n    return message;\n};\n\nexport const SnackbarMessage = props => {\n    return (\n        <Snackbar\n            style={{ zIndex: 10001 }}\n            open={props.snackbarOpen}\n            message={<SnackbarMessageContent message={props.snackbarMessage} />}\n            autoHideDuration={props.snackbarDuration}\n            onClose={props.onCloseSnackbar}\n        />\n    );\n};\n\nconst mapStateToProps = state => {\n    const { message, duration, open } = sGetSnackbar(state);\n    return {\n        snackbarOpen: open,\n        snackbarMessage: message,\n        snackbarDuration: duration,\n    };\n};\n\nSnackbarMessage.propTypes = {\n    snackbarDuration: PropTypes.string,\n    snackbarMessage: PropTypes.object,\n    snackbarOpen: PropTypes.bool,\n    onCloseSnackbar: PropTypes.func,\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        onCloseSnackbar: acCloseSnackbar,\n    }\n)(SnackbarMessage);\n","import { getCustomDashboards, sGetDashboardById } from '../reducers/dashboards';\nimport { sGetIsEditing } from '../reducers/editDashboard';\nimport { sGetEditItemFiltersRoot } from '../reducers/editItemFilters';\nimport {\n    SET_SELECTED_ID,\n    SET_SELECTED_ISLOADING,\n    SET_SELECTED_SHOWDESCRIPTION,\n    sGetSelectedIsLoading,\n    sGetSelectedId,\n} from '../reducers/selected';\nimport { sGetUserUsername } from '../reducers/user';\n\nimport { acSetDashboardItems, acAppendDashboards } from './dashboards';\nimport { acClearEditItemFilters } from './editItemFilters';\nimport { acClearItemFilters, acSetItemFilters } from './itemFilters';\nimport { tGetMessages } from '../components/Item/MessagesItem/actions';\nimport { acReceivedSnackbarMessage, acCloseSnackbar } from './snackbar';\nimport { acAddVisualization } from './visualizations';\n\nimport { apiFetchDashboard } from '../api/dashboards';\nimport { storePreferredDashboardId } from '../api/localStorage';\n\nimport { withShape } from '../components/ItemGrid/gridUtil';\nimport { loadingDashboardMsg } from '../components/SnackbarMessage/SnackbarMessage';\nimport { extractFavorite } from '../components/Item/VisualizationItem/plugin';\n\nimport {\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_REPORT,\n    EVENT_CHART,\n    MESSAGES,\n} from '../modules/itemTypes';\nimport { orObject } from '../modules/util';\n\n// actions\n\nexport const acSetSelectedId = value => ({\n    type: SET_SELECTED_ID,\n    value,\n});\n\nexport const acSetSelectedIsLoading = value => ({\n    type: SET_SELECTED_ISLOADING,\n    value,\n});\n\nexport const acSetSelectedShowDescription = value => ({\n    type: SET_SELECTED_SHOWDESCRIPTION,\n    value,\n});\n\nexport const tLoadDashboard = id => async dispatch => {\n    try {\n        const dash = await apiFetchDashboard(id);\n\n        dispatch(acAppendDashboards(dash));\n\n        return Promise.resolve(dash);\n    } catch (err) {\n        console.log('Error: ', err);\n        return err;\n    }\n};\n\n// thunks\nexport const tSetSelectedDashboardById = id => async (dispatch, getState) => {\n    dispatch(acSetSelectedIsLoading(true));\n\n    const snackbarTimeout = setTimeout(() => {\n        const dashboardName = orObject(sGetDashboardById(getState(), id))\n            .displayName;\n        if (sGetSelectedIsLoading(getState()) && dashboardName) {\n            loadingDashboardMsg.name = dashboardName;\n\n            dispatch(\n                acReceivedSnackbarMessage({\n                    message: loadingDashboardMsg,\n                    open: true,\n                })\n            );\n        }\n    }, 500);\n\n    const onSuccess = selected => {\n        const customDashboard = getCustomDashboards(selected)[0];\n\n        dispatch(\n            acSetDashboardItems(withShape(customDashboard.dashboardItems))\n        );\n\n        storePreferredDashboardId(sGetUserUsername(getState()), id);\n\n        // add visualizations to store\n        customDashboard.dashboardItems.forEach(item => {\n            switch (item.type) {\n                case REPORT_TABLE:\n                case CHART:\n                case MAP:\n                case EVENT_REPORT:\n                case EVENT_CHART:\n                    dispatch(acAddVisualization(extractFavorite(item)));\n                    break;\n                case MESSAGES:\n                    dispatch(tGetMessages(id));\n                    break;\n                default:\n                    break;\n            }\n        });\n\n        const state = getState();\n        if (id === sGetSelectedId(state)) {\n            if (sGetIsEditing(state)) {\n                // disable filters when switching to edit mode\n                dispatch(acClearItemFilters());\n            } else {\n                // enable filters when switching to view mode\n                dispatch(acSetItemFilters(sGetEditItemFiltersRoot(state)));\n            }\n        } else {\n            // clear filters when switching dashboard\n            dispatch(acClearEditItemFilters());\n            dispatch(acClearItemFilters());\n        }\n\n        dispatch(acSetSelectedId(id));\n\n        dispatch(acSetSelectedIsLoading(false));\n\n        clearTimeout(snackbarTimeout);\n\n        dispatch(acCloseSnackbar());\n\n        return selected;\n    };\n\n    const onError = error => {\n        console.log('Error: ', error);\n        return error;\n    };\n\n    try {\n        const selected = await dispatch(tLoadDashboard(id));\n\n        return onSuccess(selected);\n    } catch (err) {\n        return onError(err);\n    }\n};\n","export const getPreferredDashboardId = username =>\n    localStorage.getItem(`dhis2.dashboard.current.${username}`) || undefined;\n\nexport const storePreferredDashboardId = (username, dashboardId) => {\n    localStorage.setItem(`dhis2.dashboard.current.${username}`, dashboardId);\n};\n","import { RECEIVED_MESSAGES } from '../../../reducers/messages';\nimport { getMessages } from '../../../api/messages';\n\nconst onError = (action, error) => {\n    console.log(`Error in action ${action}: ${error}`);\n    return error;\n};\n\nexport const receivedMessages = value => ({\n    type: RECEIVED_MESSAGES,\n    value,\n});\n\nexport const tGetMessages = () => async dispatch => {\n    try {\n        const messages = await getMessages();\n        const { messageConversations } = messages;\n\n        return dispatch(receivedMessages(messageConversations));\n    } catch (err) {\n        return onError('Get Messages', err);\n    }\n};\n","import { getInstance } from 'd2';\n\nconst onError = error => console.log('Error: ', error);\n\nconst saveDashboard = (dashboard, data) => {\n    const { name, description, dashboardItems } = data;\n\n    dashboard.name = name;\n    dashboard.description = description;\n    dashboard.dashboardItems = dashboardItems.map(item =>\n        Object.assign({}, item, { width: item.w, height: item.h })\n    );\n\n    return dashboard.save().then(msg => msg.response.uid);\n};\n\nexport const updateDashboard = data => {\n    return getInstance()\n        .then(d2 => {\n            return d2.models.dashboards\n                .get(data.id)\n                .then(dashboard => saveDashboard(dashboard, data));\n        })\n        .catch(onError);\n};\n\nexport const postDashboard = data => {\n    return getInstance().then(d2 => {\n        const dashboard = d2.models.dashboards.create();\n\n        return saveDashboard(dashboard, data);\n    });\n};\n","import { generateUid } from 'd2/uid';\n\nimport {\n    RECEIVED_EDIT_DASHBOARD,\n    START_NEW_DASHBOARD,\n    RECEIVED_NOT_EDITING,\n    RECEIVED_TITLE,\n    RECEIVED_DESCRIPTION,\n    RECEIVED_DASHBOARD_LAYOUT,\n    ADD_DASHBOARD_ITEM,\n    UPDATE_DASHBOARD_ITEM,\n    REMOVE_DASHBOARD_ITEM,\n} from '../reducers/editDashboard';\nimport { sGetEditDashboardRoot } from '../reducers/editDashboard';\nimport { updateDashboard, postDashboard } from '../api/editDashboard';\nimport { tSetSelectedDashboardById } from '../actions/selected';\nimport { NEW_ITEM_SHAPE } from '../components/ItemGrid/gridUtil';\nimport {\n    itemTypeMap,\n    isSpacerType,\n    TEXT,\n    emptyTextItemContent,\n    isTextType,\n} from '../modules/itemTypes';\n\nconst onError = error => {\n    console.log('Error (Saving Dashboard): ', error);\n    return error;\n};\n\n// actions\n\nexport const acSetEditDashboard = (dashboard, items) => {\n    const val = {\n        ...dashboard,\n        dashboardItems: items,\n    };\n\n    return {\n        type: RECEIVED_EDIT_DASHBOARD,\n        value: val,\n    };\n};\n\nexport const acSetEditNewDashboard = () => ({\n    type: START_NEW_DASHBOARD,\n});\n\nexport const acClearEditDashboard = () => ({\n    type: RECEIVED_NOT_EDITING,\n});\n\nexport const acSetDashboardTitle = value => ({\n    type: RECEIVED_TITLE,\n    value,\n});\n\nexport const acSetDashboardDescription = value => ({\n    type: RECEIVED_DESCRIPTION,\n    value,\n});\n\nexport const acUpdateDashboardLayout = value => ({\n    type: RECEIVED_DASHBOARD_LAYOUT,\n    value,\n});\n\nexport const acAddDashboardItem = item => {\n    const type = item.type;\n    delete item.type;\n    const itemPropName = itemTypeMap[type].propName;\n\n    return {\n        type: ADD_DASHBOARD_ITEM,\n        value: {\n            id: generateUid(),\n            type,\n            [itemPropName]: item.content,\n            ...NEW_ITEM_SHAPE,\n        },\n    };\n};\n\nexport const acUpdateDashboardItem = item => ({\n    type: UPDATE_DASHBOARD_ITEM,\n    value: item,\n});\n\nexport const acRemoveDashboardItem = value => ({\n    type: REMOVE_DASHBOARD_ITEM,\n    value,\n});\n\n// thunks\n\nexport const tSaveDashboard = () => async (dispatch, getState) => {\n    const dashboard = sGetEditDashboardRoot(getState());\n\n    const dashboardItems = dashboard.dashboardItems.map(item => {\n        const text = isTextType(item)\n            ? item.text || emptyTextItemContent\n            : null;\n\n        const type = isSpacerType(item) ? TEXT : item.type;\n\n        return {\n            ...item,\n            ...(text ? { text } : {}),\n            type,\n        };\n    });\n\n    const dashboardToSave = {\n        ...dashboard,\n        dashboardItems,\n    };\n\n    try {\n        const dashboardId = dashboardToSave.id\n            ? await updateDashboard(dashboardToSave)\n            : await postDashboard(dashboardToSave);\n\n        dispatch(acClearEditDashboard());\n        await dispatch(tSetSelectedDashboardById(dashboardId));\n\n        return Promise.resolve(dashboardId);\n    } catch (error) {\n        onError(error);\n    }\n};\n","import {\n    SET_DASHBOARDS,\n    ADD_DASHBOARDS,\n    SET_DASHBOARD_STARRED,\n    SET_DASHBOARD_DISPLAY_NAME,\n    SET_DASHBOARD_ITEMS,\n} from '../reducers/dashboards';\nimport {\n    getCustomDashboards,\n    sGetDashboardById,\n    sGetDashboardsSortedByStarred,\n} from '../reducers/dashboards';\nimport { sGetUserUsername } from '../reducers/user';\nimport { tSetSelectedDashboardById, acSetSelectedId } from './selected';\nimport { acClearEditDashboard } from './editDashboard';\nimport {\n    apiFetchDashboards,\n    apiStarDashboard,\n    apiDeleteDashboard,\n} from '../api/dashboards';\nimport { getPreferredDashboardId } from '../api/localStorage';\nimport { arrayToIdMap } from '../modules/util';\n\n// actions\n\nexport const acSetDashboards = dashboards => ({\n    type: SET_DASHBOARDS,\n    value: arrayToIdMap(getCustomDashboards(dashboards)),\n});\n\nexport const acAppendDashboards = dashboards => ({\n    type: ADD_DASHBOARDS,\n    value: arrayToIdMap(getCustomDashboards(dashboards)),\n});\n\nexport const acSetDashboardStarred = (dashboardId, isStarred) => ({\n    type: SET_DASHBOARD_STARRED,\n    dashboardId: dashboardId,\n    value: isStarred,\n});\n\nexport const acSetDashboardDisplayName = (dashboardId, value) => ({\n    type: SET_DASHBOARD_DISPLAY_NAME,\n    dashboardId,\n    value,\n});\n\nexport const acSetDashboardItems = value => ({\n    type: SET_DASHBOARD_ITEMS,\n    value,\n});\n\n// thunks\n\nexport const tFetchDashboards = () => async dispatch => {\n    const collection = await apiFetchDashboards();\n    dispatch(acSetDashboards(collection.toArray()));\n};\n\nexport const tSelectDashboard = id => async (dispatch, getState) => {\n    const onError = error => {\n        console.log('Error (apiFetchDashboards): ', error);\n        return error;\n    };\n\n    try {\n        const state = getState();\n\n        let dashboardToSelect = null;\n        if (id) {\n            dashboardToSelect = sGetDashboardById(state, id) || null;\n        } else {\n            const preferredId = getPreferredDashboardId(\n                sGetUserUsername(state)\n            );\n            const dash = sGetDashboardById(state, preferredId);\n            dashboardToSelect =\n                preferredId && dash\n                    ? dash\n                    : sGetDashboardsSortedByStarred(state)[0];\n        }\n\n        if (dashboardToSelect) {\n            dispatch(tSetSelectedDashboardById(dashboardToSelect.id));\n        } else {\n            dispatch(acSetSelectedId());\n        }\n    } catch (err) {\n        return onError(err);\n    }\n};\n\nexport const tStarDashboard = (id, isStarred) => async dispatch => {\n    const onSuccess = id => {\n        dispatch(acSetDashboardStarred(id, isStarred));\n        return id;\n    };\n\n    const onError = error => {\n        console.log('Error (apiStarDashboard): ', error);\n        return error;\n    };\n    try {\n        await apiStarDashboard(id, isStarred);\n        return onSuccess(id);\n    } catch (err) {\n        return onError(err);\n    }\n};\n\nexport const tDeleteDashboard = id => async dispatch => {\n    try {\n        await apiDeleteDashboard(id);\n        dispatch(acClearEditDashboard());\n        dispatch(acSetSelectedId());\n        dispatch(acSetDashboardItems([]));\n\n        await dispatch(tFetchDashboards());\n\n        return Promise.resolve();\n    } catch (err) {\n        console.log('Error (deleteDashboard): ', err);\n        return err;\n    }\n};\n","/** @module reducers/controlBar */\nimport { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\n\nexport const SET_CONTROLBAR_USER_ROWS = 'SET_CONTROLBAR_USER_ROWS';\n\nexport const DEFAULT_STATE_CONTROLBAR_ROWS = 1;\n\nconst userRows = (state = DEFAULT_STATE_CONTROLBAR_ROWS, action) => {\n    switch (action.type) {\n        case SET_CONTROLBAR_USER_ROWS:\n            return validateReducer(action.value, DEFAULT_STATE_CONTROLBAR_ROWS);\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    userRows,\n});\n\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\nexport const sGetControlBarRoot = state => state.controlBar;\n\n// Selector dependency level 2\n\nexport const sGetControlBarUserRows = state =>\n    sGetControlBarRoot(state).userRows;\n","import { getInstance } from 'd2';\nimport { DEFAULT_STATE_CONTROLBAR_ROWS } from '../reducers/controlBar';\n\nconst NAMESPACE = 'dashboard';\nconst KEY = 'controlBarRows';\n\nconst hasNamespace = async d2 => await d2.currentUser.dataStore.has(NAMESPACE);\n\nconst getNamespace = async (d2, hasNamespace) =>\n    hasNamespace\n        ? await d2.currentUser.dataStore.get(NAMESPACE)\n        : await d2.currentUser.dataStore.create(NAMESPACE);\n\nexport const apiGetControlBarRows = async () => {\n    const d2 = await getInstance();\n    const namespace = await getNamespace(d2, await hasNamespace(d2));\n    const hasKey = namespace.keys && namespace.keys.find(key => key === KEY);\n\n    if (hasKey) {\n        return await namespace.get(KEY);\n    } else {\n        await apiPostControlBarRows(DEFAULT_STATE_CONTROLBAR_ROWS, namespace);\n        console.log(\n            '(These errors to /userDataStore/dashboard can be ignored)'\n        );\n        return DEFAULT_STATE_CONTROLBAR_ROWS;\n    }\n};\n\nexport const apiPostControlBarRows = async (rows, namespace) => {\n    const d2 = await getInstance();\n    const ns = namespace || (await getNamespace(d2, hasNamespace));\n\n    ns.set(KEY, rows);\n};\n","import { SET_CONTROLBAR_USER_ROWS } from '../reducers/controlBar';\nimport { apiGetControlBarRows } from '../api/controlBar';\n\n// actions\n\nexport const acSetControlBarUserRows = rows => ({\n    type: SET_CONTROLBAR_USER_ROWS,\n    value: rows,\n});\n\n// thunks\n\nexport const tSetControlBarRows = () => async dispatch => {\n    const onSuccess = rows => {\n        dispatch(acSetControlBarUserRows(rows));\n    };\n\n    const onError = error => {\n        console.log('Error (apiGetControlBarRows): ', error);\n        return error;\n    };\n\n    try {\n        const controlBarRows = await apiGetControlBarRows();\n        return onSuccess(controlBarRows);\n    } catch (err) {\n        return onError(err);\n    }\n};\n","import {\n    getDimensionById,\n    DIMENSION_ID_PERIOD,\n    DIMENSION_ID_ORGUNIT,\n} from '@dhis2/analytics';\n\nexport const SET_DIMENSIONS = 'SET_DIMENSIONS';\nexport const DEFAULT_DIMENSIONS = [\n    getDimensionById(DIMENSION_ID_PERIOD),\n    getDimensionById(DIMENSION_ID_ORGUNIT),\n];\n\nexport default (state = DEFAULT_DIMENSIONS, action) => {\n    switch (action.type) {\n        case SET_DIMENSIONS: {\n            return [...DEFAULT_DIMENSIONS, ...action.value];\n        }\n        default:\n            return state;\n    }\n};\n\nexport const sGetDimensions = state => state.dimensions;\n","export const SET_SETTINGS = 'SET_SETTINGS';\nexport const ADD_SETTINGS = 'ADD_SETTINGS';\n\nexport const DEFAULT_SETTINGS = {\n    keyDateFormat: 'yyyy-MM-dd',\n    keyAnalysisRelativePeriod: 'LAST_12_MONTHS',\n    keyAnalysisDigitGroupSeparator: 'SPACE',\n    displayNameProperty: 'displayName',\n    uiLocale: 'en',\n    rootOrganisationUnit: {},\n};\n\nexport default (state = DEFAULT_SETTINGS, action) => {\n    switch (action.type) {\n        case SET_SETTINGS: {\n            return Object.assign({}, action.value);\n        }\n        case ADD_SETTINGS: {\n            return {\n                ...state,\n                ...action.value,\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// Selectors\n\nexport const sGetSettings = state => state.settings;\n\nexport const sGetSettingsDisplayNameProperty = state =>\n    sGetSettings(state).displayNameProperty;\n\nexport const sGetRootOrgUnit = state =>\n    sGetSettings(state).rootOrganisationUnit;\n\nexport const sGetRelativePeriod = state =>\n    sGetSettings(state).keyAnalysisRelativePeriod;\n\nexport const sGetUiLocale = state => sGetSettings(state).uiLocale;\n","import { SET_DIMENSIONS } from '../reducers/dimensions';\nimport { apiFetchDimensions } from '@dhis2/analytics';\nimport { sGetSettingsDisplayNameProperty } from '../reducers/settings';\n\nexport const acSetDimensions = dimensions => ({\n    type: SET_DIMENSIONS,\n    value: dimensions,\n});\n\nexport const tSetDimensions = d2 => async (dispatch, getState) => {\n    const onSuccess = dimensions => {\n        dispatch(acSetDimensions(dimensions));\n    };\n\n    const onError = error => {\n        console.log('Error (apiFetchDimensions): ', error);\n        return error;\n    };\n\n    try {\n        const displayNameProp = sGetSettingsDisplayNameProperty(getState());\n        const dimensions = await apiFetchDimensions(d2, displayNameProp);\n\n        // filter out CATEGORY that are not of type ATTRIBUTE\n        const filteredDimensions = dimensions.filter(\n            dim =>\n                dim.dimensionType !== 'CATEGORY' ||\n                (dim.dimensionType === 'CATEGORY' &&\n                    dim.dataDimensionType === 'ATTRIBUTE')\n        );\n        return onSuccess(filteredDimensions);\n    } catch (err) {\n        return onError(err);\n    }\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { colors } from '@dhis2/ui-core';\nimport { withStyles } from '@material-ui/core/styles';\n\nexport const SHOWMORE_BAR_HEIGHT = 16;\n\nconst styles = {\n    showMore: {\n        color: colors.grey700,\n        cursor: 'pointer',\n        fontSize: 11,\n        paddingTop: 5,\n        '&:hover': {\n            textDecoration: 'underline',\n        },\n    },\n    disabled: {\n        paddingTop: 5,\n        color: colors.grey500,\n        fontSize: 11,\n        cursor: 'not-allowed',\n    },\n};\n\nexport const ShowMoreButton = ({ onClick, isMaxHeight, classes, disabled }) => {\n    return (\n        <div style={{ textAlign: 'center' }}>\n            {disabled ? (\n                <div className={classes.disabled}>{i18n.t('Show more')}</div>\n            ) : (\n                <div className={classes.showMore} onClick={onClick}>\n                    {isMaxHeight ? i18n.t('Show less') : i18n.t('Show more')}\n                </div>\n            )}\n        </div>\n    );\n};\n\nShowMoreButton.propTypes = {\n    classes: PropTypes.object,\n    disabled: PropTypes.bool,\n    isMaxHeight: PropTypes.bool,\n    onClick: PropTypes.func,\n};\n\nexport default withStyles(styles)(ShowMoreButton);\n","import { SHOWMORE_BAR_HEIGHT } from './ShowMoreButton';\n\nexport const CONTROL_BAR_ROW_HEIGHT = 40;\nexport const FIRST_ROW_PADDING_HEIGHT = 10;\nexport const MIN_ROW_COUNT = 1;\n\nexport const HEADERBAR_HEIGHT = 48;\n\nconst CONTROL_BAR_OUTER_HEIGHT_DIFF =\n    FIRST_ROW_PADDING_HEIGHT + SHOWMORE_BAR_HEIGHT - 2; // 2 pixel \"adjustment\"\n\nexport const getRowsHeight = rows => {\n    return rows * CONTROL_BAR_ROW_HEIGHT;\n};\n\nexport const getNumRowsFromHeight = height => {\n    return Math.floor(\n        (height - CONTROL_BAR_OUTER_HEIGHT_DIFF) / CONTROL_BAR_ROW_HEIGHT\n    );\n};\n\nexport const getTopOffset = rows => {\n    return HEADERBAR_HEIGHT + getControlBarHeight(rows, false);\n};\n\nexport const getControlBarHeight = rows => {\n    return getRowsHeight(rows) + CONTROL_BAR_OUTER_HEIGHT_DIFF;\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { colors } from '@dhis2/ui-core';\nimport { HEADERBAR_HEIGHT } from './controlBarDimensions';\n\nimport classes from './styles/ControlBar.module.css';\n\nconst DRAG_HANDLE_HEIGHT = 7;\n\nclass ControlBar extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            dragging: false,\n        };\n    }\n\n    onStartDrag = () => {\n        this.setState({ dragging: true });\n        window.addEventListener('mousemove', this.onDrag);\n        window.addEventListener('mouseup', this.onEndDrag);\n    };\n\n    onDrag = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const newHeight = event.clientY;\n\n        if (\n            this.props.onChangeHeight &&\n            newHeight !== this.props.height &&\n            newHeight > 0\n        ) {\n            requestAnimationFrame(() => {\n                this.props.onChangeHeight(newHeight);\n            });\n        }\n    };\n\n    onEndDrag = () => {\n        this.setState({ dragging: false });\n        window.removeEventListener('mousemove', this.onDrag);\n        window.removeEventListener('mouseup', this.onEndDrag);\n\n        if (this.props.onEndDrag) {\n            this.props.onEndDrag();\n        }\n    };\n\n    renderDragHandle() {\n        return typeof this.props.onChangeHeight === 'function' ? (\n            <div\n                className={classes.draghandle}\n                style={{ height: DRAG_HANDLE_HEIGHT }}\n                onMouseDown={this.onStartDrag}\n            />\n        ) : null;\n    }\n\n    render() {\n        const height = Math.max(this.props.height, 0) + DRAG_HANDLE_HEIGHT;\n\n        const rootStyle = Object.assign(\n            {\n                height,\n                top: HEADERBAR_HEIGHT,\n                backgroundColor: this.props.editMode\n                    ? colors.yellow050\n                    : colors.white,\n                paddingBottom: DRAG_HANDLE_HEIGHT,\n            },\n            // Disable animations while dragging\n            this.state.dragging ? { transition: 'none' } : {}\n        );\n\n        return (\n            <div style={rootStyle} className={classes.root}>\n                <div className={classes.content}>{this.props.children}</div>\n                {this.renderDragHandle()}\n            </div>\n        );\n    }\n}\n\nControlBar.propTypes = {\n    /**\n     * The height of the control bar in number of lines. Must be a positive integer.\n     */\n    children: PropTypes.node.isRequired,\n\n    /**\n     * If true, the background color of the control bar changes to indicate that edit mode is active.\n     */\n    editMode: PropTypes.bool.isRequired,\n\n    /**\n     * Callback function that is called when the control bar is resized.\n     * The callback receives one argument: The new height in pixels.\n     *\n     * If no callback is specified the control bar will not have a drag handle.\n     */\n    height: PropTypes.number.isRequired,\n\n    /**\n     * Callback function that is called when the control bar is dropped after being dragged.\n     * The callback receives one argument: The new height in pixels.\n     *\n     * Ignored if no \"onChangeHeight\" function is provided.\n     */\n    onChangeHeight: PropTypes.func,\n\n    /**\n     * The contents of the control bar.\n     */\n    onEndDrag: PropTypes.func,\n};\n\nControlBar.defaultProps = {\n    onChangeHeight: null,\n    onEndDrag: null,\n};\n\nexport default ControlBar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst StarIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>\n);\n\nStarIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default StarIcon;\n","import { getInstance } from 'd2';\n\nexport const apiPostDataStatistics = async (eventType, id) => {\n    const d2 = await getInstance();\n    const url = `dataStatistics?eventType=${eventType}&favorite=${id}`;\n\n    d2.Api.getApi().post(url);\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Chip, colors } from '@dhis2/ui-core';\nimport { Link } from 'react-router-dom';\nimport debounce from 'lodash/debounce';\n\nimport StarIcon from '../../icons/Star';\nimport { apiPostDataStatistics } from '../../api/dataStatistics';\n\nconst styles = {\n    chip: {\n        margin: '3px',\n    },\n    link: {\n        color: colors.grey600,\n        display: 'inline-block',\n        textDecoration: 'none',\n        verticalAlign: 'top',\n    },\n    icon: {\n        height: '20px',\n        marginTop: '2px',\n        width: '20px',\n    },\n    selected: {\n        fill: colors.white,\n    },\n    unselected: {\n        fill: colors.grey700,\n    },\n};\n\nexport const DashboardItemChip = ({\n    starred,\n    selected,\n    label,\n    dashboardId,\n    classes,\n}) => {\n    const chipProps = {\n        selected,\n        className: classes.chip,\n    };\n\n    if (starred) {\n        const selectedState = selected ? classes.selected : classes.unselected;\n        chipProps.icon = (\n            <StarIcon className={`${classes.icon} ${selectedState}`} />\n        );\n    }\n\n    return (\n        <Link\n            className={classes.link}\n            to={`/${dashboardId}`}\n            onClick={debounce(\n                () => apiPostDataStatistics('DASHBOARD_VIEW', dashboardId),\n                500\n            )}\n        >\n            <Chip {...chipProps}>{label}</Chip>\n        </Link>\n    );\n};\n\nDashboardItemChip.propTypes = {\n    dashboardId: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    selected: PropTypes.bool.isRequired,\n    starred: PropTypes.bool.isRequired,\n    classes: PropTypes.object,\n};\n\nexport default withStyles(styles)(DashboardItemChip);\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\n\nconst AddCircleIcon = () => (\n    <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"32\"\n        height=\"32\"\n        fill={colors.teal600}\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm4 11h-3v3c0 .55-.45 1-1 1s-1-.45-1-1v-3H8c-.55 0-1-.45-1-1s.45-1 1-1h3V8c0-.55.45-1 1-1s1 .45 1 1v3h3c.55 0 1 .45 1 1s-.45 1-1 1z\" />\n    </svg>\n);\n\nexport default AddCircleIcon;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nconst ClearIcon = ({ className }) => (\n    <svg\n        className={className}\n        fill={colors.grey800}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>\n);\n\nClearIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default ClearIcon;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ClearIcon from '../../icons/Clear';\n\nimport classes from './styles/ClearButton.module.css';\n\nexport const ClearButton = ({ onClear }) => (\n    <button className={classes.button} onClick={onClear}>\n        <span>\n            <ClearIcon className={classes.icon} color=\"action\" />\n        </span>\n    </button>\n);\n\nClearButton.propTypes = {\n    onClear: PropTypes.func.isRequired,\n};\n\nexport default ClearButton;\n","import { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\n\nexport const SET_DASHBOARDS_FILTER_NAME = 'SET_DASHBOARDS_FILTER_NAME';\nexport const SET_DASHBOARDS_FILTER_OWNER = 'SET_DASHBOARDS_FILTER_OWNER';\nexport const SET_DASHBOARDS_FILTER_ORDER = 'SET_DASHBOARDS_FILTER_ORDER';\n\nexport const ownerData = [\n    { id: 'ALL', value: 'All users' },\n    { id: 'ME', value: 'Created by me' },\n    { id: 'OTHERS', value: 'Created by others' },\n];\n\nexport const orderData = [\n    { id: 'NAME:ASC', value: 'Name (asc)' },\n    { id: 'NAME:ASC', value: 'Name (desc)' },\n    { id: 'ITEMS:ASC', value: 'Number of items (asc)' },\n    { id: 'ITEMS:ASC', value: 'Number of items (desc)' },\n    { id: 'CREATED:ASC', value: 'Created date (asc)' },\n    { id: 'CREATED:ASC', value: 'Created date (desc)' },\n];\n\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_NAME = '';\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_OWNER = ownerData[0].id;\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_ORDER = orderData[0].id;\n\nconst name = (state = DEFAULT_STATE_DASHBOARDS_FILTER_NAME, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_NAME:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_NAME\n            );\n        default:\n            return state;\n    }\n};\n\nconst owner = (state = DEFAULT_STATE_DASHBOARDS_FILTER_OWNER, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_OWNER:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_NAME\n            );\n        default:\n            return state;\n    }\n};\n\nconst order = (state = DEFAULT_STATE_DASHBOARDS_FILTER_ORDER, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_ORDER:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_ORDER\n            );\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    name,\n    owner,\n    order,\n});\n\n// selectors\n\nexport const sGetDashboardsFilterRoot = state => state.dashboardsFilter;\n\n// selector dependency level 2\n\nexport const sGetFilterName = state => sGetDashboardsFilterRoot(state).name;\nexport const sGetFilterOwner = state => sGetDashboardsFilterRoot(state).owner;\nexport const sGetFilterOrder = state => sGetDashboardsFilterRoot(state).order;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport i18n from '@dhis2/d2-i18n';\nimport InputField from '@material-ui/core/Input';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { colors } from '@dhis2/ui-core';\n\nimport ClearButton from './ClearButton';\nimport { DEFAULT_STATE_DASHBOARDS_FILTER_NAME } from '../../reducers/dashboardsFilter';\n\nexport const KEYCODE_ENTER = 13;\nexport const KEYCODE_ESCAPE = 27;\n\nconst styles = {\n    filterField: {\n        fontSize: '14px',\n        width: '200px',\n        height: '30px',\n        top: '-4px',\n    },\n    searchIcon: {\n        color: colors.grey700,\n        width: '20px',\n        height: '20px',\n    },\n};\n\nexport class Filter extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            value: DEFAULT_STATE_DASHBOARDS_FILTER_NAME,\n        };\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setState({\n            value: nextProps.name,\n        });\n    }\n\n    setFilterValue = event => {\n        event.preventDefault();\n\n        this.props.onChangeName(event.target.value);\n    };\n\n    handleKeyUp = event => {\n        switch (event.keyCode) {\n            case KEYCODE_ENTER:\n                this.props.onKeypressEnter();\n                break;\n            case KEYCODE_ESCAPE:\n                this.props.onChangeName();\n                break;\n            default:\n                break;\n        }\n    };\n\n    render() {\n        const { classes, name, onChangeName } = this.props;\n\n        const startAdornment = (\n            <InputAdornment position=\"start\">\n                <SearchIcon className={classes.searchIcon} />\n            </InputAdornment>\n        );\n\n        const endAdornment =\n            name !== '' && name !== null ? (\n                <InputAdornment position=\"end\">\n                    <ClearButton onClear={() => onChangeName()} />\n                </InputAdornment>\n            ) : null;\n\n        return (\n            <InputField\n                className={classes.filterField}\n                placeholder={i18n.t('Search for a dashboard')}\n                startAdornment={startAdornment}\n                endAdornment={endAdornment}\n                value={this.state.value}\n                onChange={this.setFilterValue}\n                onKeyUp={this.handleKeyUp}\n            />\n        );\n    }\n}\n\nFilter.propTypes = {\n    classes: PropTypes.object,\n    name: PropTypes.string,\n    onChangeName: PropTypes.func,\n    onKeypressEnter: PropTypes.func,\n};\n\nFilter.defaultProps = {\n    name: '',\n    onChangeName: Function.prototype,\n};\n\nexport default withStyles(styles)(Filter);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport ControlBar from './ControlBar';\nimport arraySort from 'd2-utilizr/lib/arraySort';\nimport PropTypes from 'prop-types';\n\nimport Chip from './DashboardItemChip';\nimport AddCircleIcon from '../../icons/AddCircle';\nimport Filter from './Filter';\nimport ShowMoreButton from './ShowMoreButton';\nimport {\n    FIRST_ROW_PADDING_HEIGHT,\n    MIN_ROW_COUNT,\n    getRowsHeight,\n    getControlBarHeight,\n    getNumRowsFromHeight,\n} from './controlBarDimensions';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { sGetAllDashboards } from '../../reducers/dashboards';\nimport { sGetFilterName } from '../../reducers/dashboardsFilter';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { acSetControlBarUserRows } from '../../actions/controlBar';\nimport { acSetFilterName } from '../../actions/dashboardsFilter';\nimport { orObject, orArray } from '../../modules/util';\nimport { apiPostControlBarRows } from '../../api/controlBar';\n\nimport classes from './styles/DashboardsBar.module.css';\n\nexport const MAX_ROW_COUNT = 10;\n\nexport class DashboardsBar extends Component {\n    state = {\n        rows: MIN_ROW_COUNT,\n    };\n\n    setInitialDashboardState = rows => {\n        this.setState({ rows, isMaxHeight: rows === MAX_ROW_COUNT });\n    };\n\n    componentDidMount() {\n        this.setInitialDashboardState(this.props.userRows);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setInitialDashboardState(nextProps.userRows);\n    }\n\n    onChangeHeight = newHeight => {\n        const adjustedHeight = newHeight - 52; // don't rush the transition to a bigger row count\n        const newRows = Math.max(\n            MIN_ROW_COUNT,\n            getNumRowsFromHeight(adjustedHeight)\n        );\n\n        if (newRows !== this.state.rows) {\n            const newRowCount = Math.min(newRows, MAX_ROW_COUNT);\n\n            this.props.onChangeHeight(newRowCount);\n        }\n    };\n\n    onEndDrag = () => {\n        return apiPostControlBarRows(this.state.rows);\n    };\n\n    onToggleMaxHeight = () => {\n        const rows =\n            this.state.rows === MAX_ROW_COUNT\n                ? this.props.userRows\n                : MAX_ROW_COUNT;\n\n        this.setState({ rows, isMaxHeight: !this.state.isMaxHeight });\n    };\n\n    onSelectDashboard = () => {\n        this.props.history.push(`/${this.props.dashboards[0].id}`);\n    };\n\n    render() {\n        const { dashboards, name, selectedId, onChangeFilterName } = this.props;\n\n        const rowCount = this.state.isMaxHeight\n            ? MAX_ROW_COUNT\n            : this.state.rows;\n        const controlBarHeight = getControlBarHeight(rowCount);\n        const contentWrapperStyle = {\n            padding: `${FIRST_ROW_PADDING_HEIGHT}px 6px 0 6px`,\n            overflowY: this.state.isMaxHeight ? 'auto' : 'hidden',\n            height: getRowsHeight(rowCount) + FIRST_ROW_PADDING_HEIGHT,\n        };\n\n        return (\n            <ControlBar\n                height={controlBarHeight}\n                onChangeHeight={this.onChangeHeight}\n                onEndDrag={this.onEndDrag}\n                editMode={false}\n            >\n                <div style={contentWrapperStyle}>\n                    <div className={classes.leftControls}>\n                        <Link\n                            style={{\n                                display: 'inline-block',\n                                textDecoration: 'none',\n                                marginRight: 10,\n                                position: 'relative',\n                                top: '2px',\n                            }}\n                            to={'/new'}\n                        >\n                            <AddCircleIcon />\n                        </Link>\n                        <Filter\n                            name={name}\n                            onChangeName={onChangeFilterName}\n                            onKeypressEnter={this.onSelectDashboard}\n                        />\n                    </div>\n                    {orArray(dashboards).map(dashboard => (\n                        <Chip\n                            key={dashboard.id}\n                            label={dashboard.displayName}\n                            starred={dashboard.starred}\n                            dashboardId={dashboard.id}\n                            selected={dashboard.id === selectedId}\n                        />\n                    ))}\n                </div>\n                <ShowMoreButton\n                    onClick={this.onToggleMaxHeight}\n                    isMaxHeight={this.state.isMaxHeight}\n                    disabled={this.props.userRows === MAX_ROW_COUNT}\n                />\n            </ControlBar>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    dashboards: sGetAllDashboards(state),\n    name: sGetFilterName(state),\n    userRows: sGetControlBarUserRows(state),\n    selectedId: sGetSelectedId(state),\n});\n\nconst mapDispatchToProps = {\n    onChangeHeight: acSetControlBarUserRows,\n    onChangeFilterName: acSetFilterName,\n};\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const dashboards = Object.values(orObject(stateProps.dashboards));\n    const displayDashboards = arraySort(\n        dashboards.filter(d =>\n            d.displayName.toLowerCase().includes(stateProps.name.toLowerCase())\n        ),\n        'ASC',\n        'displayName'\n    );\n\n    return {\n        ...stateProps,\n        ...ownProps,\n        ...dispatchProps,\n        dashboards: [\n            ...displayDashboards.filter(d => d.starred),\n            ...displayDashboards.filter(d => !d.starred),\n        ],\n    };\n};\n\nDashboardsBar.propTypes = {\n    dashboards: PropTypes.array,\n    history: PropTypes.object,\n    name: PropTypes.string,\n    selectedId: PropTypes.string,\n    userRows: PropTypes.number,\n    onChangeFilterName: PropTypes.func,\n    onChangeHeight: PropTypes.func,\n};\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps,\n        mergeProps\n    )(DashboardsBar)\n);\n","import {\n    SET_DASHBOARDS_FILTER_NAME,\n    SET_DASHBOARDS_FILTER_OWNER,\n    SET_DASHBOARDS_FILTER_ORDER,\n} from '../reducers/dashboardsFilter';\n\n// actions\n\nexport const acSetFilterName = value => ({\n    type: SET_DASHBOARDS_FILTER_NAME,\n    value,\n});\n\nexport const acSetFilterOwner = value => ({\n    type: SET_DASHBOARDS_FILTER_OWNER,\n    value,\n});\n\nexport const acSetFilterOrder = value => ({\n    type: SET_DASHBOARDS_FILTER_ORDER,\n    value,\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport {\n    getTopOffset,\n    MIN_ROW_COUNT,\n} from '../ControlBar/controlBarDimensions';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\n\nconst DashboardVerticalOffset = props => {\n    const rows = props.editMode ? MIN_ROW_COUNT : props.userRows;\n    const marginTop = getTopOffset(rows);\n\n    return <div className=\"page-container-top-margin\" style={{ marginTop }} />;\n};\n\nconst mapStateToProps = state => ({\n    userRows: sGetControlBarUserRows(state),\n});\n\nDashboardVerticalOffset.propTypes = {\n    editMode: PropTypes.bool,\n    userRows: PropTypes.number,\n};\n\nexport default connect(mapStateToProps)(DashboardVerticalOffset);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { MenuItem, colors } from '@dhis2/ui-core';\n\nconst HeaderMenuItem = ({ title }) => (\n    <MenuItem\n        dense\n        key={title}\n        disabled\n        label={\n            <p style={{ color: colors.grey800, fontWeight: '600' }}>{title}</p>\n        }\n    />\n);\n\nHeaderMenuItem.propTypes = {\n    title: PropTypes.string.isRequired,\n};\n\nexport default HeaderMenuItem;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nconst LaunchIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"12\"\n        height=\"12\"\n        fill={colors.grey600}\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z\" />\n    </svg>\n);\n\nLaunchIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default LaunchIcon;\n","import React from 'react';\nimport { MenuItem, colors } from '@dhis2/ui-core';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport { visTypeIcons } from '@dhis2/analytics';\n\nimport { getItemIcon, VISUALIZATION } from '../../modules/itemTypes';\nimport LaunchIcon from '../../icons/Launch';\n\nimport classes from './styles/ContentMenuItem.module.css';\n\nconst LaunchLink = ({ url }) => (\n    <a\n        onClick={e => e.stopPropagation()}\n        className={classes.launchLink}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        href={url}\n    >\n        <LaunchIcon />\n    </a>\n);\n\nLaunchLink.propTypes = {\n    url: PropTypes.string,\n};\n\nconst InsertButton = () => (\n    <button className={classes.buttonInsert}>{i18n.t('Insert')}</button>\n);\n\nconst ContentMenuItem = ({ type, name, onInsert, url, visType }) => {\n    const ItemIcon = getItemIcon(type);\n\n    const renderedItemIcon =\n        type === VISUALIZATION ? (\n            visTypeIcons[visType]\n        ) : (\n            <ItemIcon style={{ fill: colors.grey600 }} />\n        );\n\n    return (\n        <MenuItem\n            dense\n            onClick={onInsert}\n            label={\n                <div className={classes.menuItem}>\n                    <div className={classes.label}>\n                        <span style={{ margin: '6px' }}>\n                            {renderedItemIcon}\n                        </span>\n                        <span>{name}</span>\n                        {url ? <LaunchLink url={url} /> : null}\n                    </div>\n                    <InsertButton />\n                </div>\n            }\n        />\n    );\n};\n\nContentMenuItem.propTypes = {\n    name: PropTypes.string,\n    type: PropTypes.string,\n    url: PropTypes.string,\n    visType: PropTypes.string,\n    onInsert: PropTypes.func,\n};\n\nexport default ContentMenuItem;\n","import i18n from '@dhis2/d2-i18n';\nimport {\n    spacerContent,\n    VISUALIZATION,\n    MAP,\n    EVENT_CHART,\n    EVENT_REPORT,\n    USERS,\n    REPORTS,\n    RESOURCES,\n    APP,\n    MESSAGES,\n    TEXT,\n    SPACER,\n} from '../../modules/itemTypes';\n\nexport const singleItems = [\n    {\n        id: 'additional',\n        header: i18n.t('Additional items'),\n        items: [\n            {\n                type: TEXT,\n                name: i18n.t('Text box'),\n                content: '',\n            },\n            {\n                type: MESSAGES,\n                name: i18n.t('Messages'),\n                content: 'true',\n            },\n            {\n                type: SPACER,\n                name: i18n.t('Spacer'),\n                content: spacerContent,\n            },\n        ],\n    },\n];\n\n// categorizedItems are grouped in the item selector menu\nexport const categorizedItems = [\n    VISUALIZATION,\n    MAP,\n    EVENT_REPORT,\n    EVENT_CHART,\n    USERS,\n    REPORTS,\n    RESOURCES,\n    APP,\n];\n\n// listItemTypes are included in a single dashboard item\nexport const listItemTypes = [REPORTS, RESOURCES, USERS];\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { MenuItem, Divider } from '@dhis2/ui-core';\n\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\n\nimport { tAddListItemContent } from './actions';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\nimport { getItemUrl, APP, VISUALIZATION } from '../../modules/itemTypes';\nimport { categorizedItems, listItemTypes } from './selectableItems';\n\nimport classes from './styles/CategorizedMenuGroup.module.css';\n\nclass CategorizedMenuGroup extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seeMore: false,\n        };\n    }\n\n    addItem = item => () => {\n        const { type, acAddDashboardItem, tAddListItemContent } = this.props;\n\n        if (type === APP) {\n            acAddDashboardItem({ type, content: item.key });\n        } else {\n            const newItem = {\n                id: item.id,\n                name: item.displayName || item.name,\n            };\n\n            if (listItemTypes.includes(type)) {\n                tAddListItemContent(type, newItem);\n            } else {\n                acAddDashboardItem({ type, content: newItem });\n            }\n        }\n    };\n\n    toggleSeeMore = () => {\n        this.setState({ seeMore: !this.state.seeMore });\n\n        this.props.onChangeItemsLimit(this.props.type);\n    };\n\n    render() {\n        const { title, type, items, hasMore } = this.props;\n        return (\n            <Fragment>\n                <HeaderMenuItem title={title} />\n                {items.map(item => {\n                    const itemUrl = getItemUrl(type, item, this.context.d2);\n                    return (\n                        <ContentMenuItem\n                            key={item.id || item.key}\n                            type={type}\n                            visType={type === VISUALIZATION ? item.type : type}\n                            name={item.displayName || item.name}\n                            onInsert={this.addItem(item)}\n                            url={itemUrl}\n                        />\n                    );\n                })}\n                {hasMore ? (\n                    <MenuItem\n                        dense\n                        key={`showmore${title}`}\n                        onClick={this.toggleSeeMore}\n                        label={\n                            <button className={classes.showMoreButton}>\n                                {this.state.seeMore\n                                    ? i18n.t('Show fewer')\n                                    : i18n.t('Show more')}\n                            </button>\n                        }\n                    />\n                ) : null}\n                <Divider margin=\"8px 0px\" />\n            </Fragment>\n        );\n    }\n}\n\nCategorizedMenuGroup.propTypes = {\n    items: PropTypes.array.isRequired,\n    title: PropTypes.string.isRequired,\n    type: PropTypes.oneOf(categorizedItems).isRequired,\n    onChangeItemsLimit: PropTypes.func.isRequired,\n    acAddDashboardItem: PropTypes.func,\n    hasMore: PropTypes.bool,\n    tAddListItemContent: PropTypes.func,\n};\n\nCategorizedMenuGroup.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nexport default connect(\n    null,\n    {\n        acAddDashboardItem,\n        tAddListItemContent,\n    }\n)(CategorizedMenuGroup);\n","import { sGetEditDashboardRoot } from '../../reducers/editDashboard';\nimport { itemTypeMap } from '../../modules/itemTypes';\nimport {\n    acAddDashboardItem,\n    acUpdateDashboardItem,\n} from '../../actions/editDashboard';\n\nexport const tAddListItemContent = (type, content) => (dispatch, getState) => {\n    const state = getState();\n    const listItemType = itemTypeMap[type].propName;\n    const dashboardItems = sGetEditDashboardRoot(state).dashboardItems;\n    const dashboardItemIndex = dashboardItems.findIndex(\n        item => item.type === type\n    );\n    let dashboardItem;\n\n    // Reports/Resources/Users dashboard item type already present in dashboard\n    if (dashboardItemIndex > -1) {\n        dashboardItem = dashboardItems[dashboardItemIndex];\n        dashboardItem[listItemType].push(content);\n\n        dispatch(acUpdateDashboardItem(dashboardItem));\n    } else {\n        dashboardItem = {\n            type: type,\n            content: [content],\n        };\n\n        dispatch(acAddDashboardItem(dashboardItem));\n    }\n};\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\n\nexport const SinglesMenuGroup = ({ acAddDashboardItem, category }) => {\n    const addToDashboard = ({ type, content }) => () => {\n        acAddDashboardItem({ type, content });\n    };\n\n    return (\n        <Fragment>\n            <HeaderMenuItem title={category.header} />\n            {category.items.map(item => (\n                <ContentMenuItem\n                    key={item.type}\n                    type={item.type}\n                    name={item.name}\n                    onInsert={addToDashboard(item)}\n                />\n            ))}\n        </Fragment>\n    );\n};\n\nSinglesMenuGroup.propTypes = {\n    acAddDashboardItem: PropTypes.func,\n    category: PropTypes.object,\n};\n\nexport default connect(\n    null,\n    { acAddDashboardItem }\n)(SinglesMenuGroup);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport Popover from '@material-ui/core/Popover';\nimport { InputField, Menu } from '@dhis2/ui-core';\n\nimport CategorizedMenuGroup from './CategorizedMenuGroup';\nimport SinglesMenuGroup from './SinglesMenuGroup';\nimport { singleItems, categorizedItems } from './selectableItems';\nimport { itemTypeMap, getDefaultItemCount } from '../../modules/itemTypes';\n\nimport './styles/ItemSelector.css';\n\nconst ItemSearchField = props => (\n    <InputField\n        name=\"Dashboard item search\"\n        label={i18n.t('Search for items to add to this dashboard')}\n        type=\"text\"\n        onChange={props.onChange}\n        onFocus={props.onFocus}\n        value={props.value}\n    />\n);\n\nclass ItemSelector extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n            open: false,\n            maxOptions: new Set(),\n            items: undefined,\n            filter: '',\n        };\n    }\n\n    closeList = () => {\n        this.setState({ open: false, filter: '' });\n    };\n\n    openList = (_, event) => {\n        this.fetchItems();\n\n        this.setState({\n            anchorEl: event.currentTarget,\n            open: true,\n        });\n    };\n\n    setFilter = (_, event) => {\n        this.setState({ filter: event.target.value }, this.fetchItems);\n    };\n\n    getCategorizedMenuGroups = () =>\n        categorizedItems\n            .filter(type => {\n                const itemType = itemTypeMap[type];\n                return (\n                    this.state.items && this.state.items[itemType.endPointName]\n                );\n            })\n            .map(type => {\n                const itemType = itemTypeMap[type];\n                const itemCount = getDefaultItemCount(type);\n                const allItems = this.state.items[itemType.endPointName];\n                const hasMore = allItems.length > itemCount;\n                const items = this.state.maxOptions.has(itemType.id)\n                    ? allItems\n                    : allItems.slice(0, itemCount);\n\n                return (\n                    <CategorizedMenuGroup\n                        key={type}\n                        type={type}\n                        title={itemType.pluralTitle}\n                        items={items}\n                        onChangeItemsLimit={this.fetchItems}\n                        hasMore={hasMore}\n                    />\n                );\n            });\n\n    getSinglesMenuGroups = () =>\n        singleItems.map(category => (\n            <SinglesMenuGroup key={category.id} category={category} />\n        ));\n\n    getMenuGroups = () =>\n        this.getCategorizedMenuGroups().concat(this.getSinglesMenuGroups());\n\n    fetchItems = async type => {\n        if (type) {\n            const maxOptions = this.state.maxOptions;\n\n            if (maxOptions.has(type)) {\n                maxOptions.delete(type);\n            } else {\n                maxOptions.add(type);\n            }\n\n            this.setState({ maxOptions });\n        } else {\n            this.setState({\n                maxOptions: new Set(),\n            });\n        }\n\n        let queryString = '?count=11';\n        if ([...this.state.maxOptions.values()].length) {\n            queryString +=\n                '&max=' + [...this.state.maxOptions.values()].join('&max=');\n        }\n\n        const filter = this.state.filter ? `/${this.state.filter}` : '';\n\n        this.context.d2.Api.getApi()\n            .get(`dashboards/q${filter}${queryString}`)\n            .then(response => this.setState({ items: response }))\n            .catch(console.error);\n    };\n\n    render() {\n        return (\n            <Fragment>\n                <ItemSearchField\n                    value={this.state.filter}\n                    onChange={this.setFilter}\n                    onFocus={this.openList}\n                />\n                <Popover\n                    className=\"dashboard-item-selector\"\n                    open={this.state.open}\n                    onClose={this.closeList}\n                    anchorEl={this.state.anchorEl}\n                    anchorOrigin={{ horizontal: 'left', vertical: 'bottom' }}\n                    transformOrigin={{ horizontal: 'left', vertical: 'top' }}\n                    style={{ height: '70vh' }}\n                    PaperProps={{ style: { width: '700px' } }}\n                    disableAutoFocus={true}\n                    disableRestoreFocus={true}\n                >\n                    <Menu>{this.getMenuGroups()}</Menu>\n                </Popover>\n            </Fragment>\n        );\n    }\n}\n\nItemSearchField.propTypes = {\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n    onFocus: PropTypes.func,\n};\n\nItemSelector.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nexport default ItemSelector;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport i18n from '@dhis2/d2-i18n';\nimport { InputField, TextAreaField } from '@dhis2/ui-core';\n\nimport ItemSelector from '../ItemSelector/ItemSelector';\nimport {\n    acSetDashboardTitle,\n    acSetDashboardDescription,\n} from '../../actions/editDashboard';\nimport { orObject } from '../../modules/util';\nimport { sGetEditDashboardRoot } from '../../reducers/editDashboard';\n\nconst styles = {\n    section: { display: 'flex', justifyContent: 'space-between' },\n    titleDescription: {\n        flex: '3',\n        marginRight: '50px',\n    },\n    title: {\n        display: 'block',\n        clear: 'both',\n    },\n    description: {\n        display: 'block',\n        clear: 'both',\n        marginTop: '15px',\n    },\n    underline: {\n        '&::before': {\n            borderBottom: `none`,\n        },\n        '&:hover::before': {\n            borderBottom: `none!important`,\n        },\n    },\n    input: {\n        backgroundColor: 'rgba(0, 0, 10, 0.05)',\n        borderRadius: '4px',\n        width: '100%',\n        '&:hover': {\n            backgroundColor: 'rgba(0, 0, 10, 0.08)',\n        },\n    },\n    itemSelector: {\n        flex: '2',\n        position: 'relative',\n    },\n};\n\nexport const EditTitleBar = ({\n    name,\n    description,\n    onChangeTitle,\n    onChangeDescription,\n    classes,\n}) => {\n    const updateTitle = (_, e) => {\n        onChangeTitle(e.target.value);\n    };\n\n    const updateDescription = (_, e) => {\n        onChangeDescription(e.target.value);\n    };\n\n    return (\n        <section className={classes.section}>\n            <div className={classes.titleDescription}>\n                <InputField\n                    className={classes.title}\n                    name=\"Dashboard title input\"\n                    label={i18n.t('Dashboard title')}\n                    type=\"text\"\n                    onChange={updateTitle}\n                    value={name}\n                />\n                <TextAreaField\n                    className={classes.description}\n                    name=\"Dashboard description input\"\n                    label={i18n.t('Dashboard description')}\n                    onChange={updateDescription}\n                    value={description}\n                />\n            </div>\n            <div className={classes.itemSelector}>\n                <ItemSelector />\n            </div>\n        </section>\n    );\n};\n\nconst mapStateToProps = state => {\n    const selectedDashboard = orObject(sGetEditDashboardRoot(state));\n\n    return {\n        name: selectedDashboard.name,\n        description: selectedDashboard.description,\n    };\n};\n\nconst mapDispatchToProps = {\n    onChangeTitle: acSetDashboardTitle,\n    onChangeDescription: acSetDashboardDescription,\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(EditTitleBar));\n\nEditTitleBar.propTypes = {\n    onChangeDescription: PropTypes.func.isRequired,\n    onChangeTitle: PropTypes.func.isRequired,\n    classes: PropTypes.object,\n    description: PropTypes.string,\n    name: PropTypes.string,\n};\n\nEditTitleBar.defaultProps = {\n    name: '',\n    description: '',\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Button } from '@dhis2/ui-core';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport i18n from '@dhis2/d2-i18n';\n\nimport {\n    PeriodDimension,\n    DynamicDimension,\n    OrgUnitDimension,\n    DIMENSION_ID_PERIOD,\n    DIMENSION_ID_ORGUNIT,\n} from '@dhis2/analytics';\n\nconst peId = DIMENSION_ID_PERIOD;\nconst ouId = DIMENSION_ID_ORGUNIT;\n\nclass FilterDialog extends Component {\n    onConfirm = id => () => this.props.onConfirm(id);\n\n    dialogContent() {\n        const { displayNameProperty, dimension, selectedItems } = this.props;\n        const dialogId = dimension.id;\n\n        const commonProps = {\n            d2: this.context.d2,\n            onSelect: this.props.onSelect,\n            onDeselect: this.props.onDeselect,\n            onReorder: this.props.onReorder,\n        };\n\n        switch (dialogId) {\n            case peId: {\n                return (\n                    <PeriodDimension\n                        selectedPeriods={selectedItems}\n                        {...commonProps}\n                    />\n                );\n            }\n            case ouId:\n                return (\n                    <OrgUnitDimension\n                        displayNameProperty={displayNameProperty}\n                        ouItems={selectedItems}\n                        {...commonProps}\n                    />\n                );\n            default:\n                return (\n                    <DynamicDimension\n                        selectedItems={selectedItems}\n                        dialogId={dialogId}\n                        dialogTitle={dimension.name}\n                        {...commonProps}\n                    />\n                );\n        }\n    }\n\n    render() {\n        const { dimension, onClose } = this.props;\n        const dialogId = dimension.id;\n\n        return (\n            <Dialog\n                open={!!dialogId}\n                maxWidth=\"lg\"\n                disableEnforceFocus\n                onClose={onClose}\n            >\n                {dialogId && this.dialogContent()}\n                <DialogActions>\n                    <Button kind=\"secondary\" onClick={onClose}>\n                        {i18n.t('Cancel')}\n                    </Button>\n                    <Button kind=\"primary\" onClick={this.onConfirm(dialogId)}>\n                        {i18n.t('Confirm')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nFilterDialog.propTypes = {\n    dimension: PropTypes.object,\n    displayNameProperty: PropTypes.string,\n    selectedItems: PropTypes.array,\n    onClose: PropTypes.func,\n    onConfirm: PropTypes.func,\n    onDeselect: PropTypes.func,\n    onReorder: PropTypes.func,\n    onSelect: PropTypes.func,\n};\n\nFilterDialog.contextTypes = {\n    d2: PropTypes.object,\n};\n\nexport default FilterDialog;\n","export const SET_ACTIVE_MODAL_DIMENSION = 'SET_ACTIVE_MODAL_DIMENSION';\nexport const CLEAR_ACTIVE_MODAL_DIMENSION = 'CLEAR_ACTIVE_MODAL_DIMENSION';\n\nexport const DEFAULT_STATE_ACTIVE_MODAL_DIMENSION = {};\n\nexport default (state = DEFAULT_STATE_ACTIVE_MODAL_DIMENSION, action) => {\n    switch (action.type) {\n        case SET_ACTIVE_MODAL_DIMENSION: {\n            return action.value;\n        }\n        case CLEAR_ACTIVE_MODAL_DIMENSION: {\n            return DEFAULT_STATE_ACTIVE_MODAL_DIMENSION;\n        }\n        default:\n            return state;\n    }\n};\n\nexport const sGetActiveModalDimension = state => state.activeModalDimension;\n","import {\n    SET_ACTIVE_MODAL_DIMENSION,\n    CLEAR_ACTIVE_MODAL_DIMENSION,\n} from '../reducers/activeModalDimension';\n\nexport const acSetActiveModalDimension = value => ({\n    type: SET_ACTIVE_MODAL_DIMENSION,\n    value,\n});\n\nexport const acClearActiveModalDimension = () => ({\n    type: CLEAR_ACTIVE_MODAL_DIMENSION,\n});\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Popover from '@material-ui/core/Popover';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport { withTheme } from '@material-ui/core/styles';\n\nimport i18n from '@dhis2/d2-i18n';\nimport { DimensionsPanel } from '@dhis2/analytics';\n\nimport { Button } from '@dhis2/ui-core';\nimport FilterDialog from './FilterDialog';\n\nimport { sGetSettingsDisplayNameProperty } from '../../reducers/settings';\nimport { sGetActiveModalDimension } from '../../reducers/activeModalDimension';\nimport { sGetDimensions } from '../../reducers/dimensions';\nimport { sGetFiltersKeys } from '../../reducers/itemFilters';\nimport { sGetEditItemFiltersRoot } from '../../reducers/editItemFilters';\nimport { acAddItemFilter, acRemoveItemFilter } from '../../actions/itemFilters';\nimport {\n    acRemoveEditItemFilter,\n    acSetEditItemFilters,\n} from '../../actions/editItemFilters';\nimport {\n    acClearActiveModalDimension,\n    acSetActiveModalDimension,\n} from '../../actions/activeModalDimension';\n\nclass FilterSelector extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n        };\n    }\n\n    openPanel = (_, event) => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    closePanel = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    closeDialog = () => {\n        this.setState({ anchorEl: null });\n\n        this.props.clearActiveModalDimension();\n    };\n\n    selectDimension = id => {\n        this.props.setActiveModalDimension(\n            this.props.dimensions.find(dimension => dimension.id === id)\n        );\n    };\n\n    onSelectItems = ({ dimensionId, items }) => {\n        this.props.setEditItemFilters({\n            ...this.props.selectedItems,\n            [dimensionId]: items,\n        });\n    };\n\n    onDeselectItems = ({ dimensionId, itemIdsToRemove }) => {\n        const oldList = this.props.selectedItems[dimensionId] || [];\n        const newList = oldList.filter(\n            item => !itemIdsToRemove.includes(item.id)\n        );\n\n        if (newList.length) {\n            this.props.setEditItemFilters({\n                ...this.props.selectedItems,\n                [dimensionId]: newList,\n            });\n        } else {\n            this.props.removeEditItemFilter(dimensionId);\n        }\n    };\n\n    onReorderItems = ({ dimensionId, itemIds }) => {\n        const oldList = this.props.selectedItems[dimensionId] || [];\n        const reorderedList = itemIds.map(id =>\n            oldList.find(item => item.id === id)\n        );\n\n        this.props.setEditItemFilters({\n            ...this.props.selectedItems,\n            [dimensionId]: reorderedList,\n        });\n    };\n\n    saveFilter = id => {\n        const filterItems = this.props.selectedItems[id];\n\n        if (filterItems && filterItems.length) {\n            this.props.addItemFilter({\n                id,\n                value: [...filterItems],\n            });\n        } else {\n            this.props.removeItemFilter(id);\n        }\n\n        this.closeDialog();\n    };\n\n    render() {\n        const {\n            theme,\n            displayNameProperty,\n            dimension,\n            dimensions,\n            selectedDimensions,\n            selectedItems,\n        } = this.props;\n\n        return (\n            <Fragment>\n                <Button onClick={this.openPanel}>\n                    {i18n.t('Add filter')}\n                    <ArrowDropDownIcon />\n                </Button>\n                <Popover\n                    open={Boolean(this.state.anchorEl)}\n                    anchorEl={this.state.anchorEl}\n                    anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\n                    onClose={this.closePanel}\n                    style={{\n                        height: '100%',\n                        fontFamily: theme.typography.fontFamily,\n                    }}\n                >\n                    <DimensionsPanel\n                        style={{ width: '320px' }}\n                        dimensions={dimensions}\n                        onDimensionClick={this.selectDimension}\n                        selectedIds={selectedDimensions}\n                    />\n                </Popover>\n                {dimension ? (\n                    <FilterDialog\n                        displayNameProperty={displayNameProperty}\n                        dimension={dimension}\n                        selectedItems={selectedItems[dimension.id] || []}\n                        onSelect={this.onSelectItems}\n                        onDeselect={this.onDeselectItems}\n                        onReorder={this.onReorderItems}\n                        onClose={this.closeDialog}\n                        onConfirm={this.saveFilter}\n                    />\n                ) : null}\n            </Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    displayNameProperty: sGetSettingsDisplayNameProperty(state),\n    dimension: sGetActiveModalDimension(state),\n    dimensions: sGetDimensions(state),\n    selectedDimensions: sGetFiltersKeys(state),\n    selectedItems: sGetEditItemFiltersRoot(state),\n});\n\nFilterSelector.propTypes = {\n    addItemFilter: PropTypes.func,\n    clearActiveModalDimension: PropTypes.func,\n    dimension: PropTypes.object,\n    dimensions: PropTypes.array,\n    displayNameProperty: PropTypes.string,\n    removeEditItemFilter: PropTypes.func,\n    removeItemFilter: PropTypes.func,\n    selectedDimensions: PropTypes.array,\n    selectedItems: PropTypes.object,\n    setActiveModalDimension: PropTypes.func,\n    setEditItemFilters: PropTypes.func,\n    theme: PropTypes.object,\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        clearActiveModalDimension: acClearActiveModalDimension,\n        setActiveModalDimension: acSetActiveModalDimension,\n        addItemFilter: acAddItemFilter,\n        removeItemFilter: acRemoveItemFilter,\n        removeEditItemFilter: acRemoveEditItemFilter,\n        setEditItemFilters: acSetEditItemFilters,\n    }\n)(withTheme()(FilterSelector));\n","import React, { Component } from 'react';\nimport InfoOutlineIcon from '@material-ui/icons/InfoOutlined';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nclass Info extends Component {\n    show = false;\n\n    toggle() {\n        this.show = !this.show;\n        return this.show;\n    }\n\n    render() {\n        return (\n            <div onClick={() => this.props.onClick(this.toggle())}>\n                <InfoOutlineIcon style={{ fill: colors.grey600 }} />\n            </div>\n        );\n    }\n}\n\nInfo.propTypes = {\n    onClick: PropTypes.func,\n};\n\nexport default Info;\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport SharingDialog from '@dhis2/d2-ui-sharing-dialog';\nimport Star from '@material-ui/icons/Star';\nimport StarBorder from '@material-ui/icons/StarBorder';\n\nimport { orObject } from '../../modules/util';\nimport { tStarDashboard } from '../../actions/dashboards';\nimport { acSetSelectedShowDescription } from '../../actions/selected';\nimport FilterSelector from '../ItemFilter/FilterSelector';\nimport { Button } from '@dhis2/ui-core';\nimport Info from './Info';\nimport {\n    sGetSelectedId,\n    sGetSelectedShowDescription,\n} from '../../reducers/selected';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n} from '../../reducers/dashboards';\nimport { colors } from '@dhis2/ui-core';\n\nconst NO_DESCRIPTION = i18n.t('No description');\n\nconst styles = {\n    actions: {\n        display: 'flex',\n        alignItems: 'center',\n        marginLeft: '20px',\n    },\n    starIcon: {\n        fill: colors.grey600,\n    },\n    textButton: {\n        minWidth: '30px',\n        top: '1px',\n    },\n    editLink: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        textDecoration: 'none',\n        marginRight: '4px',\n    },\n    titleBar: {\n        display: 'flex',\n        alignItems: 'flex-start',\n    },\n    titleBarIcon: {\n        marginLeft: 5,\n        position: 'relative',\n        top: 1,\n        cursor: 'pointer',\n    },\n};\n\nclass ViewTitleBar extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            sharingDialogIsOpen: false,\n        };\n    }\n\n    toggleSharingDialog = () =>\n        this.setState({ sharingDialogIsOpen: !this.state.sharingDialogIsOpen });\n\n    render() {\n        const {\n            id,\n            name,\n            description,\n            access,\n            style,\n            showDescription,\n            starred,\n            onStarClick,\n            onInfoClick,\n            classes,\n        } = this.props;\n\n        const titleStyle = Object.assign({}, style.title, {\n            cursor: 'default',\n            userSelect: 'text',\n            top: '7px',\n        });\n\n        const StarIcon = starred ? Star : StarBorder;\n\n        return (\n            <Fragment>\n                <div className={classes.titleBar}>\n                    <span style={titleStyle}>{name}</span>\n                    <div className={classes.actions}>\n                        <div\n                            className={classes.titleBarIcon}\n                            onClick={onStarClick}\n                        >\n                            <StarIcon className={classes.starIcon} />\n                        </div>\n                        <div className={classes.titleBarIcon}>\n                            <Info onClick={onInfoClick} />\n                        </div>\n                        <div style={{ marginLeft: '10px' }}>\n                            {access.update ? (\n                                <Link\n                                    className={classes.editLink}\n                                    to={`/${id}/edit`}\n                                >\n                                    <Button>{i18n.t('Edit')}</Button>\n                                </Link>\n                            ) : null}\n                            {access.manage ? (\n                                <span style={{ marginRight: '4px' }}>\n                                    <Button onClick={this.toggleSharingDialog}>\n                                        {i18n.t('Share')}\n                                    </Button>\n                                </span>\n                            ) : null}\n                            <span style={{ marginRight: '4px' }}>\n                                <FilterSelector />\n                            </span>\n                        </div>\n                    </div>\n                </div>\n                {showDescription ? (\n                    <div\n                        className=\"dashboard-description\"\n                        style={Object.assign(\n                            { paddingTop: '5px', paddingBottom: '5px' },\n                            style.description,\n                            !description ? { color: '#888' } : {}\n                        )}\n                    >\n                        {description || NO_DESCRIPTION}\n                    </div>\n                ) : null}\n                {id ? (\n                    <SharingDialog\n                        d2={this.context.d2}\n                        id={id}\n                        type=\"dashboard\"\n                        open={this.state.sharingDialogIsOpen}\n                        onRequestClose={this.toggleSharingDialog}\n                    />\n                ) : null}\n            </Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    const id = sGetSelectedId(state);\n    const dashboard = orObject(sGetDashboardById(state, id));\n\n    return {\n        id,\n        name: dashboard.displayName,\n        description: dashboard.displayDescription,\n        dashboardItems: sGetDashboardItems(state),\n        showDescription: sGetSelectedShowDescription(state),\n        starred: dashboard.starred,\n        access: orObject(dashboard.access),\n    };\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const { id, starred, showDescription } = stateProps;\n    const { dispatch } = dispatchProps;\n\n    return {\n        ...stateProps,\n        ...ownProps,\n        onStarClick: () => dispatch(tStarDashboard(id, !starred)),\n        onInfoClick: () =>\n            dispatch(acSetSelectedShowDescription(!showDescription)),\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    null,\n    mergeProps\n)(withStyles(styles)(ViewTitleBar));\n\nViewTitleBar.propTypes = {\n    access: PropTypes.object,\n    classes: PropTypes.object,\n    description: PropTypes.string,\n    id: PropTypes.string,\n    name: PropTypes.string,\n    showDescription: PropTypes.bool,\n    starred: PropTypes.bool,\n    style: PropTypes.object,\n    onInfoClick: PropTypes.func,\n    onStarClick: PropTypes.func,\n};\n\nViewTitleBar.defaultProps = {\n    name: '',\n    description: '',\n    starred: false,\n    showDescription: false,\n    onInfoClick: null,\n};\n\nViewTitleBar.contextTypes = {\n    d2: PropTypes.object,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { colors } from '@dhis2/ui-core';\nimport EditTitleBar from './EditTitleBar';\nimport ViewTitleBar from './ViewTitleBar';\n\nimport './TitleBar.css';\n\nconst style = {\n    title: {\n        position: 'relative',\n        fontSize: 21,\n        fontWeight: 500,\n        color: colors.black,\n        minWidth: 50,\n    },\n    description: {\n        fontSize: 14,\n        color: colors.grey800,\n    },\n};\n\nconst TitleBar = ({ edit }) => {\n    return (\n        <div\n            className=\"titlebar-wrapper\"\n            style={{\n                padding: '20px 15px 5px 10px',\n            }}\n        >\n            {edit ? (\n                <EditTitleBar style={style} />\n            ) : (\n                <ViewTitleBar style={style} />\n            )}\n        </div>\n    );\n};\n\nTitleBar.propTypes = {\n    edit: PropTypes.bool,\n};\n\nexport default TitleBar;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport i18n from '@dhis2/d2-i18n';\n\nimport * as pluginManager from './plugin';\nimport { getBaseUrl, orObject } from '../../../modules/util';\nimport { getGridItemDomId } from '../../ItemGrid/gridUtil';\n\nconst pluginCredentials = d2 => {\n    return {\n        baseUrl: getBaseUrl(d2),\n        auth: d2.Api.getApi().defaultHeaders.Authorization,\n    };\n};\n\nclass DefaultPlugin extends Component {\n    pluginCredentials = null;\n\n    constructor(props, context) {\n        super(props);\n\n        this.d2 = context.d2;\n    }\n\n    shouldPluginReload = prevProps => {\n        // TODO - fix this hack, to handle bug with multiple\n        // rerendering while switching between dashboards.\n        //\n        // To determine if the rendering is happening because of a\n        // dashboard switch, check if the item reference has changed.\n        const reloadAllowed = this.props.item === prevProps.item;\n\n        const filtersChanged = prevProps.itemFilters !== this.props.itemFilters;\n        const vis = orObject(this.props.visualization);\n        const prevVis = orObject(prevProps.visualization);\n        const visChanged =\n            vis.id !== prevVis.id || vis.activeType !== prevVis.activeType;\n\n        return reloadAllowed && (visChanged || filtersChanged);\n    };\n\n    reloadPlugin = prevProps => {\n        if (\n            pluginManager.pluginIsAvailable(\n                this.props.item,\n                this.props.visualization\n            ) &&\n            this.shouldPluginReload(prevProps)\n        ) {\n            const prevVis = orObject(prevProps.visualization);\n            const currentVis = this.props.visualization;\n\n            const useActiveType =\n                currentVis.activeType !== prevVis.activeType ||\n                currentVis.activeType !== this.props.item.type;\n\n            if (\n                useActiveType ||\n                this.props.itemFilters !== prevProps.itemFilters\n            ) {\n                pluginManager.unmount(\n                    this.props.item,\n                    prevVis.activeType || this.props.item.type\n                );\n\n                pluginManager.load(this.props.item, this.props.visualization, {\n                    credentials: this.pluginCredentials,\n                    activeType: useActiveType ? currentVis.activeType : null,\n                });\n            }\n        }\n    };\n\n    componentDidMount() {\n        this.pluginCredentials = pluginCredentials(this.d2);\n\n        if (\n            pluginManager.pluginIsAvailable(\n                this.props.item,\n                this.props.visualization\n            )\n        ) {\n            pluginManager.load(this.props.item, this.props.visualization, {\n                credentials: this.pluginCredentials,\n                activeType: !this.props.editMode ? this.getActiveType() : null,\n            });\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        this.reloadPlugin(prevProps);\n    }\n\n    getActiveType = () =>\n        this.props.visualization.activeType || this.props.item.type;\n\n    render() {\n        const { classes, item, visualization, style } = this.props;\n        const pluginIsAvailable = pluginManager.pluginIsAvailable(\n            item,\n            visualization\n        );\n\n        return pluginIsAvailable ? (\n            <div id={getGridItemDomId(item.id)} style={style} />\n        ) : (\n            <div className={classes.textDiv}>\n                {i18n.t('Unable to load the plugin for this item')}\n            </div>\n        );\n    }\n}\n\nDefaultPlugin.contextTypes = {\n    d2: PropTypes.object,\n};\n\nDefaultPlugin.propTypes = {\n    classes: PropTypes.object,\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    itemFilters: PropTypes.object,\n    style: PropTypes.object,\n    visualization: PropTypes.object,\n};\n\nDefaultPlugin.defaultProps = {\n    style: {},\n    item: {},\n    itemFilters: {},\n    visualization: {},\n};\n\nexport default DefaultPlugin;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\n\nexport const ThreeDots = () => (\n    <svg\n        height=\"18\"\n        viewBox=\"0 0 18 18\"\n        width=\"18\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n    >\n        <path\n            d=\"m4 7.5c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm10 0c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm-5 0c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5z\"\n            fill=\"#6e7a8a\"\n        />\n    </svg>\n);\n\nexport const SpeechBubble = () => (\n    <svg\n        height=\"20\"\n        viewBox=\"0 0 20 20\"\n        width=\"20\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        style={{ margin: '3px 2px 0 2px' }} // Temporary fix for the misaligned icon, should be removed once the icon is replaced\n    >\n        <path\n            d=\"m20 2h-16c-1.1 0-1.99.9-1.99 2l-.01 18 4-4h14c1.1 0 2-.9 2-2v-12c0-1.1-.9-2-2-2zm-2 12h-12v-2h12zm0-3h-12v-2h12zm0-3h-12v-2h12z\"\n            fill=\"#6e7a8a\"\n            fillRule=\"evenodd\"\n            transform=\"translate(-2 -2)\"\n        />\n    </svg>\n);\n\nexport const Warning = () => (\n    <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        height=\"24\"\n        viewBox=\"0 0 24 24\"\n        width=\"24\"\n        fill={colors.grey600}\n    >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z\" />\n    </svg>\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Warning } from './assets/icons';\n\nimport classes from './styles/FatalErrorBoundary.module.css';\n\nclass FatalErrorBoundary extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            errorFound: false,\n        };\n    }\n    componentDidCatch(error, info) {\n        this.setState({\n            errorFound: true,\n        });\n        console.log('error: ', error);\n        console.log('info: ', info);\n    }\n    render() {\n        if (this.state.errorFound) {\n            return (\n                <p className={classes.container}>\n                    <span className={classes.icon}>\n                        <Warning />\n                    </span>\n                    <span className={classes.message}>\n                        {i18n.t(\n                            'There was a problem loading this dashboard item'\n                        )}\n                    </span>\n                </p>\n            );\n        }\n        return this.props.children;\n    }\n}\n\nFatalErrorBoundary.propTypes = {\n    children: PropTypes.node,\n};\n\nexport default FatalErrorBoundary;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { colors } from '@dhis2/ui-core';\n\nimport classes from './styles/DeleteItemButton.module.css';\n\nconst DeleteItemButton = ({ onClick }) => (\n    <button\n        type=\"button\"\n        className={classes.deleteItemButton}\n        onClick={onClick}\n        title={i18n.t(`Delete item`)}\n    >\n        <DeleteIcon style={{ fill: colors.red500 }} />\n    </button>\n);\n\nDeleteItemButton.propTypes = {\n    onClick: PropTypes.func,\n};\n\nexport default DeleteItemButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { sGetIsEditing } from '../../reducers/editDashboard';\nimport { acRemoveDashboardItem } from '../../actions/editDashboard';\nimport DeleteItemButton from './DeleteItemButton';\n\nimport classes from './styles/ItemHeader.module.css';\n\n// This is the margin-top + margin-bottom defined in the css file\nexport const HEADER_MARGIN_HEIGHT = 12;\n\nconst ItemHeader = props => {\n    const {\n        title,\n        editMode,\n        actionButtons,\n        itemId,\n        acRemoveDashboardItem,\n        forwardedRef,\n    } = props;\n\n    const handleDeleteItem = () => acRemoveDashboardItem(itemId);\n\n    return (\n        <div className={classes.itemHeaderWrap} ref={forwardedRef}>\n            <p className={classes.itemTitle}>{title}</p>\n            {editMode ? (\n                <div className={classes.itemActionsWrap}>\n                    <DeleteItemButton onClick={handleDeleteItem} />\n                </div>\n            ) : (\n                actionButtons && (\n                    <div className={classes.itemActionsWrap}>\n                        {actionButtons}\n                    </div>\n                )\n            )}\n        </div>\n    );\n};\n\nItemHeader.propTypes = {\n    acRemoveDashboardItem: PropTypes.func,\n    actionButtons: PropTypes.node,\n    editMode: PropTypes.bool,\n    forwardedRef: PropTypes.object,\n    itemId: PropTypes.string,\n    title: PropTypes.string,\n};\n\nItemHeader.defaultProps = {\n    forwardedRef: {},\n};\n\nconst mapStateToProps = state => ({\n    editMode: sGetIsEditing(state),\n});\n\nconst mapDispatchToProps = {\n    acRemoveDashboardItem,\n};\n\nconst ConnectedItemHeader = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ItemHeader);\n\n// TODO this is a false positive that is fixed in eslint-plugin-react v7.15\n// github.com/yannickcr/eslint-plugin-react/blob/master/CHANGELOG.md\n/* eslint-disable react/display-name */\nexport default React.forwardRef((props, ref) => (\n    <ConnectedItemHeader {...props} forwardedRef={ref} />\n));\n/* eslint-enable react/display-name */\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n    isSingleValue,\n    isYearOverYear,\n    VIS_TYPE_GAUGE,\n    VIS_TYPE_PIE,\n} from '@dhis2/analytics';\nimport { Button, Menu, MenuItem, Divider, colors } from '@dhis2/ui-core';\nimport i18n from '@dhis2/d2-i18n';\nimport Popover from '@material-ui/core/Popover';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\nimport LaunchIcon from '@material-ui/icons/Launch';\n\nimport { ThreeDots, SpeechBubble } from './assets/icons';\nimport { pluginIsAvailable, getLink } from './plugin';\nimport {\n    CHART,\n    MAP,\n    REPORT_TABLE,\n    EVENT_CHART,\n    EVENT_REPORT,\n    isTrackerDomainType,\n    hasMapView,\n    getAppName,\n} from '../../../modules/itemTypes';\n\nconst iconFill = { fill: colors.grey600 };\n\nconst ItemHeaderButtons = props => {\n    const [anchorEl, setAnchorEl] = useState(null);\n\n    const { item, visualization, onSelectActiveType, d2, activeType } = props;\n\n    const isTrackerType = isTrackerDomainType(item.type);\n\n    const onViewTable = () => {\n        handleClose();\n        onSelectActiveType(isTrackerType ? EVENT_REPORT : REPORT_TABLE);\n    };\n\n    const onViewChart = () => {\n        handleClose();\n        onSelectActiveType(isTrackerType ? EVENT_CHART : CHART);\n    };\n\n    const onViewMap = () => {\n        handleClose();\n        onSelectActiveType(MAP);\n    };\n\n    const itemHasMapView = () => hasMapView(item.type);\n\n    const handleMenuClick = (_, event) => setAnchorEl(event.currentTarget);\n\n    const handleInterpretationClick = () => {\n        props.onToggleFooter();\n        if (anchorEl !== null) {\n            handleClose();\n        }\n    };\n\n    const handleClose = () => setAnchorEl(null);\n\n    const type = visualization.type || item.type;\n    const canViewAs =\n        !isSingleValue(type) &&\n        !isYearOverYear(type) &&\n        type !== VIS_TYPE_GAUGE &&\n        type !== VIS_TYPE_PIE;\n\n    const interpretationMenuLabel = props.activeFooter\n        ? i18n.t(`Hide interpretations and details`)\n        : i18n.t(`Show interpretations and details`);\n\n    const ViewAsMenuItems = () => (\n        <>\n            {activeType !== CHART && activeType !== EVENT_CHART && (\n                <MenuItem\n                    dense\n                    label={i18n.t('View as Chart')}\n                    onClick={onViewChart}\n                    icon={<ChartIcon style={iconFill} />}\n                />\n            )}\n            {activeType !== REPORT_TABLE && activeType !== EVENT_REPORT && (\n                <MenuItem\n                    dense\n                    label={i18n.t('View as Table')}\n                    onClick={onViewTable}\n                    icon={<TableIcon style={iconFill} />}\n                />\n            )}\n            {itemHasMapView() && activeType !== MAP && (\n                <MenuItem\n                    dense\n                    label={i18n.t('View as Map')}\n                    onClick={onViewMap}\n                    icon={<MapIcon style={iconFill} />}\n                />\n            )}\n        </>\n    );\n\n    return pluginIsAvailable(item, visualization) ? (\n        <>\n            <Button small secondary onClick={handleMenuClick}>\n                <ThreeDots />\n            </Button>\n            {anchorEl && (\n                <Popover\n                    open={Boolean(anchorEl)}\n                    onClose={handleClose}\n                    anchorEl={anchorEl}\n                >\n                    <Menu>\n                        {canViewAs && (\n                            <>\n                                <ViewAsMenuItems />\n                                <Divider />\n                            </>\n                        )}\n                        <MenuItem\n                            dense\n                            icon={<LaunchIcon style={{ fill: '#6e7a8a' }} />}\n                            label={i18n.t('Open in {{appName}} app', {\n                                appName: getAppName(item.type),\n                            })}\n                            href={getLink(item, d2)}\n                            target=\"_blank\"\n                        />\n                        <MenuItem\n                            dense\n                            icon={<SpeechBubble />}\n                            label={interpretationMenuLabel}\n                            onClick={handleInterpretationClick}\n                        />\n                    </Menu>\n                </Popover>\n            )}\n        </>\n    ) : null;\n};\n\nItemHeaderButtons.propTypes = {\n    activeFooter: PropTypes.bool,\n    activeType: PropTypes.string,\n    d2: PropTypes.object,\n    item: PropTypes.object,\n    visualization: PropTypes.object,\n    onSelectActiveType: PropTypes.func,\n    onToggleFooter: PropTypes.func,\n};\n\nexport default ItemHeaderButtons;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { colors } from '@dhis2/ui-core';\nimport { getId } from './plugin';\nimport InterpretationsComponent from '@dhis2/d2-ui-interpretations';\n\nconst style = {\n    scrollContainer: {\n        overflowY: 'auto',\n        height: '340px',\n    },\n    line: {\n        margin: '-1px 0px 0px',\n        height: '1px',\n        border: 'none',\n        backgroundColor: colors.grey100,\n    },\n};\n\nclass ItemFooter extends Component {\n    render() {\n        const objectId = getId(this.props.item);\n\n        return (\n            <div className=\"dashboard-item-footer\">\n                <hr style={style.line} />\n                <div style={style.scrollContainer}>\n                    <InterpretationsComponent\n                        d2={this.context.d2}\n                        item={this.props.item}\n                        type={this.props.item.type.toLowerCase()}\n                        id={objectId}\n                        appName=\"dashboard\"\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nItemFooter.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nItemFooter.propTypes = {\n    item: PropTypes.object.isRequired,\n};\n\nexport default ItemFooter;\n","// Note that this ignores discrepancies in 'this', so shouldn't be used with bound functions\n// This is useful instead of lodash/memoize when we only need to memoize a single value\n// Inspiration: https://github.com/alexreardon/memoize-one\n\nconst memoizeOne = fn => {\n    let lastArgs = undefined;\n    let lastValue = undefined;\n\n    return (...args) => {\n        if (\n            lastArgs &&\n            args.length === lastArgs.length &&\n            args.every((arg, i) => arg === lastArgs[i])\n        ) {\n            return lastValue;\n        }\n        lastArgs = args;\n        lastValue = fn(...args);\n        return lastValue;\n    };\n};\n\nexport default memoizeOne;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst styles = theme => ({\n    progress: {\n        margin: theme.spacing.unit * 2,\n        maxWidth: 200,\n        textAlign: 'center',\n        alignSelf: 'center',\n    },\n    outer: {\n        display: 'flex',\n        justifyContent: 'center',\n        height: '100%',\n    },\n});\n\nfunction CircularIndeterminate(props) {\n    const { classes } = props;\n    return (\n        <div className={classes.outer}>\n            <CircularProgress className={classes.progress} />\n        </div>\n    );\n}\n\nCircularIndeterminate.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(CircularIndeterminate);\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport uniqueId from 'lodash/uniqueId';\nimport VisualizationPlugin from '@dhis2/data-visualizer-plugin';\nimport i18n from '@dhis2/d2-i18n';\n\nimport DefaultPlugin from './DefaultPlugin';\nimport FatalErrorBoundary from './FatalErrorBoundary';\nimport ItemHeader, { HEADER_MARGIN_HEIGHT } from '../ItemHeader';\nimport ItemHeaderButtons from './ItemHeaderButtons';\nimport ItemFooter from './ItemFooter';\nimport * as pluginManager from './plugin';\nimport { sGetVisualization } from '../../../reducers/visualizations';\nimport { sGetItemFiltersRoot } from '../../../reducers/itemFilters';\nimport {\n    acAddVisualization,\n    acSetActiveVisualizationType,\n} from '../../../actions/visualizations';\nimport {\n    VISUALIZATION,\n    MAP,\n    CHART,\n    REPORT_TABLE,\n} from '../../../modules/itemTypes';\nimport memoizeOne from '../../../modules/memoizeOne';\n\nimport { colors } from '@dhis2/ui-core';\nimport { getVisualizationConfig } from './plugin';\nimport LoadingMask from './LoadingMask';\n\nconst styles = {\n    icon: {\n        width: 16,\n        height: 16,\n        marginLeft: 3,\n        cursor: 'pointer',\n        fill: colors.grey600,\n    },\n    title: {\n        overflow: 'hidden',\n        maxWidth: '85%',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n    },\n    textDiv: {\n        fontSize: '14px',\n        fontStretch: 'normal',\n        padding: '10px',\n        lineHeight: '20px',\n    },\n    loadingCover: {\n        position: 'absolute',\n        height: '100%',\n        width: '100%',\n        left: 0,\n        top: 0,\n        zIndex: 100,\n        background: '#ffffffab',\n    },\n};\n\nexport class Item extends Component {\n    state = {\n        showFooter: false,\n        configLoaded: false,\n        pluginIsLoaded: false,\n    };\n\n    constructor(props, context) {\n        super(props);\n\n        this.d2 = context.d2;\n\n        this.contentRef = React.createRef();\n        this.headerRef = React.createRef();\n\n        this.memoizedApplyFilters = memoizeOne(this.applyFilters);\n\n        this.memoizedGetVisualizationConfig = memoizeOne(\n            getVisualizationConfig\n        );\n\n        this.memoizedGetContentStyle = memoizeOne(this.getContentStyle);\n    }\n\n    async componentDidMount() {\n        this.props.onVisualizationLoaded(\n            // TODO do not call fetch on the pluginManager, do it here as the manager will eventually be removed...\n            await pluginManager.fetch(this.props.item)\n        );\n\n        this.setState({\n            configLoaded: true,\n        });\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (\n            prevState.pluginIsLoaded &&\n            (prevProps.visualization !== this.props.visualization ||\n                prevProps.itemFilters !== this.props.itemFilters)\n        ) {\n            this.setState({\n                pluginIsLoaded: false,\n            });\n        }\n    }\n\n    applyFilters = (visualization, filters) => {\n        if (!Object.keys(filters).length) {\n            return visualization;\n        }\n\n        // deep clone objects in filters to avoid changing the visualization in the Redux store\n        const visRows = visualization.rows.map(obj => ({ ...obj }));\n        const visColumns = visualization.columns.map(obj => ({ ...obj }));\n        const visFilters = visualization.filters.map(obj => ({ ...obj }));\n\n        Object.keys(filters).forEach(dimensionId => {\n            if (filters[dimensionId]) {\n                let dimensionFound = false;\n\n                [visRows, visColumns, visFilters].forEach(dimensionObjects =>\n                    dimensionObjects\n                        .filter(obj => obj.dimension === dimensionId)\n                        .forEach(obj => {\n                            dimensionFound = true;\n                            obj.items = filters[dimensionId];\n                        })\n                );\n\n                // add dimension to filters if not already present elsewhere\n                if (!dimensionFound) {\n                    visFilters.push({\n                        dimension: dimensionId,\n                        items: filters[dimensionId],\n                    });\n                }\n            }\n        });\n\n        return {\n            ...visualization,\n            rows: visRows,\n            columns: visColumns,\n            filters: visFilters,\n        };\n    };\n\n    getUniqueKey = memoizeOne(() => uniqueId());\n\n    pluginCredentials = null;\n\n    getPluginComponent = () => {\n        const activeType = this.getActiveType();\n        const visualization = this.memoizedGetVisualizationConfig(\n            this.props.visualization,\n            this.props.item.type,\n            activeType\n        );\n\n        if (!visualization) {\n            return (\n                <div className={this.props.classes.textDiv}>\n                    {i18n.t('No data to display')}\n                </div>\n            );\n        }\n\n        const props = {\n            ...this.props,\n            visualization,\n            style: this.memoizedGetContentStyle(\n                this.props.item.originalHeight,\n                this.headerRef.current.clientHeight,\n                this.contentRef ? this.contentRef.offsetHeight : null\n            ),\n        };\n\n        switch (activeType) {\n            case VISUALIZATION:\n            case CHART:\n            case REPORT_TABLE: {\n                return (\n                    <Fragment>\n                        {!this.state.pluginIsLoaded ? (\n                            <div style={styles.loadingCover}>\n                                <LoadingMask />\n                            </div>\n                        ) : null}\n                        <VisualizationPlugin\n                            d2={this.d2}\n                            visualization={this.memoizedApplyFilters(\n                                visualization,\n                                props.itemFilters\n                            )}\n                            onLoadingComplete={this.onLoadingComplete}\n                            forDashboard={true}\n                            style={props.style}\n                        />\n                    </Fragment>\n                );\n            }\n            case MAP: {\n                if (props.item.type === MAP) {\n                    // apply filters only to thematic and event layers\n                    // for maps AO\n                    const mapViews = props.visualization.mapViews.map(obj => {\n                        if (\n                            obj.layer.includes('thematic') ||\n                            obj.layer.includes('event')\n                        ) {\n                            return this.memoizedApplyFilters(\n                                obj,\n                                props.itemFilters\n                            );\n                        }\n\n                        return obj;\n                    });\n\n                    props.visualization = {\n                        ...props.visualization,\n                        mapViews,\n                    };\n                } else {\n                    // this is the case of a non map AO passed to the maps plugin\n                    // due to a visualization type switch in dashboard item\n                    // maps plugin takes care of converting the AO to a suitable format\n                    props.visualization = this.memoizedApplyFilters(\n                        props.visualization,\n                        props.itemFilters\n                    );\n                }\n\n                return <DefaultPlugin {...props} />;\n            }\n            default: {\n                props.visualization = this.memoizedApplyFilters(\n                    props.visualization,\n                    props.itemFilters\n                );\n\n                return <DefaultPlugin {...props} />;\n            }\n        }\n    };\n\n    onLoadingComplete = () => {\n        this.setState({\n            pluginIsLoaded: true,\n        });\n    };\n\n    onToggleFooter = () => {\n        this.setState(\n            { showFooter: !this.state.showFooter },\n            this.props.onToggleItemExpanded(this.props.item.id)\n        );\n    };\n\n    onSelectActiveType = type => {\n        if (type === this.getActiveType()) {\n            return;\n        }\n\n        pluginManager.unmount(this.props.item, this.getActiveType());\n\n        this.props.onSelectActiveType(this.props.visualization.id, type);\n    };\n\n    getActiveType = () =>\n        this.props.visualization.activeType || this.props.item.type;\n\n    pluginIsAvailable = () =>\n        pluginManager.pluginIsAvailable(\n            this.props.item,\n            this.props.visualization\n        );\n\n    getContentStyle = (originalHeight, headerHeight, measuredHeight) => {\n        const calculatedHeight =\n            originalHeight - headerHeight - HEADER_MARGIN_HEIGHT;\n\n        return {\n            height: measuredHeight || calculatedHeight,\n        };\n    };\n\n    render() {\n        const { item, editMode, itemFilters } = this.props;\n        const { showFooter } = this.state;\n\n        const actionButtons = (\n            <ItemHeaderButtons\n                item={item}\n                visualization={this.props.visualization}\n                onSelectActiveType={this.onSelectActiveType}\n                onToggleFooter={this.onToggleFooter}\n                d2={this.d2}\n                activeType={this.getActiveType()}\n                activeFooter={this.state.showFooter}\n            />\n        );\n\n        return (\n            <>\n                <ItemHeader\n                    title={pluginManager.getName(item)}\n                    itemId={item.id}\n                    actionButtons={actionButtons}\n                    ref={this.headerRef}\n                />\n                <FatalErrorBoundary>\n                    <div\n                        key={this.getUniqueKey(itemFilters)}\n                        className=\"dashboard-item-content\"\n                        ref={ref => (this.contentRef = ref)}\n                    >\n                        {this.state.configLoaded && this.getPluginComponent()}\n                    </div>\n                </FatalErrorBoundary>\n                {!editMode && showFooter ? <ItemFooter item={item} /> : null}\n            </>\n        );\n    }\n}\n\nItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nItem.propTypes = {\n    classes: PropTypes.object,\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    itemFilters: PropTypes.object,\n    visualization: PropTypes.object,\n    onSelectActiveType: PropTypes.func,\n    onToggleItemExpanded: PropTypes.func,\n    onVisualizationLoaded: PropTypes.func,\n};\n\nItem.defaultProps = {\n    item: {},\n    editMode: false,\n    onToggleItemExpanded: Function.prototype,\n    itemFilters: {},\n    visualization: {},\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n    itemFilters: sGetItemFiltersRoot(state),\n    visualization: sGetVisualization(\n        state,\n        pluginManager.extractFavorite(ownProps.item).id\n    ),\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onVisualizationLoaded: visualization =>\n        dispatch(acAddVisualization(visualization)),\n    onSelectActiveType: (id, type, activeType) =>\n        dispatch(acSetActiveVisualizationType(id, type, activeType)),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(Item));\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\n\nconst style = {\n    backgroundColor: colors.grey200,\n    border: 'none',\n    height: '1px',\n    margin: '0px 0px 5px 0px',\n};\n\nconst Line = () => <hr style={style} />;\n\nexport default Line;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\n\nimport { sGetMessagesRoot } from '../../../reducers/messages';\nimport { formatDate } from '../../../modules/util';\nimport { colors } from '@dhis2/ui-core';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nimport './MessagesItem.css';\n\nconst PRIVATE = 'PRIVATE';\n\nconst messageTypes = {\n    [PRIVATE]: 'Private',\n    VALIDATION_RESULT: 'Validation',\n    TICKET: 'Ticket',\n    SYSTEM: 'System',\n};\n\nconst style = {\n    list: {\n        listStyleType: 'none',\n        paddingLeft: '0px',\n    },\n    seeAll: {\n        textAlign: 'center',\n        fontSize: '13px',\n        marginBottom: '5px',\n    },\n    sender: {\n        fontSize: '13px',\n        lineHeight: '15px',\n        margin: 0,\n        color: colors.grey800,\n    },\n    snippet: {\n        color: colors.grey800,\n        fontSize: '13px',\n        lineHeight: '15px',\n        maxHeight: '30px',\n        overflow: 'hidden',\n    },\n};\n\nclass MessagesItem extends Component {\n    state = {\n        uiLocale: '',\n    };\n\n    async componentDidMount() {\n        const uiLocale = await this.context.d2.currentUser.userSettings.get(\n            'keyUiLocale'\n        );\n\n        this.setState({ uiLocale });\n    }\n\n    getMessageHref = msg => {\n        const msgIdentifier = msg ? `#/${msg.messageType}/${msg.id}` : '';\n        return `${this.context.baseUrl}/dhis-web-messaging/${msgIdentifier}`;\n    };\n\n    getMessageSender = msg => {\n        const latestMsg = msg.messages.slice(-1)[0];\n        return latestMsg.sender ? latestMsg.sender.displayName : '';\n    };\n\n    getMessageItems = () => {\n        const editClass = !this.props.editMode ? 'view' : null;\n\n        return this.props.messages.map(msg => {\n            const redirectToMsg = () => {\n                if (!this.props.editMode) {\n                    document.location.href = this.getMessageHref(msg);\n                }\n            };\n\n            const sender =\n                msg.messageType === PRIVATE\n                    ? this.getMessageSender(msg)\n                    : messageTypes[msg.messageType];\n\n            const readClass = !msg.read ? 'unread' : null;\n            const latestMsg = msg.messages.slice(-1)[0];\n            const msgDate = latestMsg.lastUpdated;\n\n            return (\n                <li\n                    className={`message-item ${editClass}`}\n                    key={msg.id}\n                    onClick={redirectToMsg}\n                >\n                    <p className={`message-title ${readClass}`}>\n                        {msg.displayName} ({msg.messageCount})\n                    </p>\n                    <p style={style.sender}>\n                        {sender} - {formatDate(msgDate, this.state.uiLocale)}\n                    </p>\n                    <p style={style.snippet}>{latestMsg.text}</p>\n                </li>\n            );\n        });\n    };\n\n    render() {\n        return (\n            <Fragment>\n                <ItemHeader\n                    title={i18n.t('Messages')}\n                    itemId={this.props.item.id}\n                />\n                <Line />\n                {this.props.messages.length > 0 && (\n                    <div className=\"dashboard-item-content\">\n                        <ul style={style.list}>{this.getMessageItems()}</ul>\n                        <div style={style.seeAll}>\n                            <a href={this.getMessageHref()}>\n                                {i18n.t('See all messages')}\n                            </a>\n                        </div>\n                    </div>\n                )}\n            </Fragment>\n        );\n    }\n}\n\nMessagesItem.propTypes = {\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    messages: PropTypes.array,\n};\n\nMessagesItem.contextTypes = {\n    d2: PropTypes.object,\n    baseUrl: PropTypes.string,\n};\n\nconst mapStateToProps = state => {\n    return {\n        messages: Object.values(sGetMessagesRoot(state)),\n    };\n};\n\nconst MessagesContainer = connect(\n    mapStateToProps,\n    null\n)(MessagesItem);\n\nexport default MessagesContainer;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ItemHeader from '../ItemHeader';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nconst NotSupportedItem = props => (\n    <Fragment>\n        <ItemHeader\n            title={i18n.t('Item type \"{{type}}\" not supported', {\n                type: props.item.type,\n            })}\n            itemId={props.item.id}\n        />\n        <div\n            style={{\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center',\n                height: '90%',\n            }}\n        >\n            <NotInterestedIcon\n                style={{ width: 100, height: 100, align: 'center' }}\n                color=\"disabled\"\n            />\n        </div>\n    </Fragment>\n);\n\nNotSupportedItem.propTypes = {\n    item: PropTypes.object,\n};\n\nexport default NotSupportedItem;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nconst DescriptionIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n        fill={colors.grey500}\n    >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M14 2H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6zm2 16H8v-2h8v2zm0-4H8v-2h8v2zm-3-5V3.5L18.5 9H13z\" />\n    </svg>\n);\n\nDescriptionIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default DescriptionIcon;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nconst DeleteIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"18\"\n        height=\"18\"\n        viewBox=\"0 0 24 24\"\n        fill={colors.red500}\n    >\n        <path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>\n);\n\nDeleteIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default DeleteIcon;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { colors } from '@dhis2/ui-core';\nimport DescriptionIcon from '../../../icons/Description';\n\nimport DeleteIcon from '../../../icons/Delete';\nimport Line from '../../../widgets/Line';\nimport { itemTypeMap, getItemUrl } from '../../../modules/itemTypes';\nimport { orArray } from '../../../modules/util';\nimport { tRemoveListItemContent } from './actions';\nimport ItemHeader from '../ItemHeader';\nimport classes from './Item.module.css';\n\nconst getItemTitle = item => itemTypeMap[item.type].pluralTitle;\n\nconst getContentItems = item =>\n    orArray(item[itemTypeMap[item.type].propName]).filter(\n        (item, index, array) =>\n            array.findIndex(el => el.id === item.id) === index\n    );\n\nconst ListItem = (props, context) => {\n    const { item, editMode, tRemoveListItemContent } = props;\n    const contentItems = getContentItems(item);\n\n    const getLink = contentItem => {\n        const deleteButton = (\n            <button\n                className={classes.deletebutton}\n                onClick={() => tRemoveListItemContent(item, contentItem)}\n            >\n                <DeleteIcon className={classes.deleteicon} />\n            </button>\n        );\n\n        return (\n            <Fragment>\n                <a\n                    className={classes.link}\n                    style={{ color: colors.grey900 }}\n                    href={getItemUrl(item.type, contentItem, context.d2)}\n                >\n                    {contentItem.name}\n                </a>\n                {editMode ? deleteButton : null}\n            </Fragment>\n        );\n    };\n\n    return (\n        <Fragment>\n            <ItemHeader title={getItemTitle(item)} itemId={item.id} />\n            <Line />\n            <div className=\"dashboard-item-content\">\n                <ul className={classes.list}>\n                    {contentItems.map(contentItem => (\n                        <li className={classes.item} key={contentItem.id}>\n                            <DescriptionIcon className={classes.itemicon} />\n                            {getLink(contentItem)}\n                        </li>\n                    ))}\n                </ul>\n            </div>\n        </Fragment>\n    );\n};\n\nListItem.propTypes = {\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    tRemoveListItemContent: PropTypes.func,\n};\n\nListItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nexport default connect(\n    null,\n    {\n        tRemoveListItemContent,\n    }\n)(ListItem);\n","import {\n    acUpdateDashboardItem,\n    acRemoveDashboardItem,\n} from '../../../actions/editDashboard';\nimport { itemTypeMap } from '../../../modules/itemTypes';\n\nexport const tRemoveListItemContent = (dashboardItem, content) => dispatch => {\n    const listItemType = itemTypeMap[dashboardItem.type].propName;\n\n    const newContent = dashboardItem[listItemType].filter(\n        item => item.id !== content.id\n    );\n\n    if (newContent.length) {\n        dashboardItem[listItemType] = newContent;\n        dispatch(acUpdateDashboardItem(dashboardItem));\n    } else {\n        dispatch(acRemoveDashboardItem(dashboardItem));\n    }\n};\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\n\nimport Input from '@material-ui/core/Input';\nimport {\n    Parser as RichTextParser,\n    Editor as RichTextEditor,\n} from '@dhis2/d2-ui-rich-text';\n\nimport { acUpdateDashboardItem } from '../../../actions/editDashboard';\nimport { sGetEditDashboardItems } from '../../../reducers/editDashboard';\nimport { sGetDashboardItems } from '../../../reducers/dashboards';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nconst style = {\n    textDiv: {\n        padding: '10px',\n        whiteSpace: 'pre-line',\n        lineHeight: '20px',\n    },\n    textField: {\n        fontSize: '14px',\n        fontStretch: 'normal',\n        width: '90%',\n        margin: '0 auto',\n        display: 'block',\n        lineHeight: '24px',\n    },\n    container: {\n        marginBottom: '20px',\n        marginTop: '20px',\n    },\n};\n\nconst TextItem = props => {\n    const { item, editMode, text, acUpdateDashboardItem } = props;\n\n    const onChangeText = event => {\n        const updatedItem = {\n            ...item,\n            text: event.target.value,\n        };\n\n        acUpdateDashboardItem(updatedItem);\n    };\n\n    const viewItem = () => {\n        const textDivStyle = Object.assign({}, style.textField, style.textDiv);\n        return (\n            <div className=\"dashboard-item-content\" style={style.container}>\n                <RichTextParser style={textDivStyle}>{text}</RichTextParser>\n            </div>\n        );\n    };\n\n    const editItem = () => {\n        return (\n            <Fragment>\n                <ItemHeader title={i18n.t('Text item')} itemId={item.id} />\n                <Line />\n                <div className=\"dashboard-item-content\">\n                    <RichTextEditor onEdit={onChangeText}>\n                        <Input\n                            value={text}\n                            multiline\n                            fullWidth\n                            style={style.textField}\n                            placeholder={i18n.t('Add text here')}\n                            onChange={onChangeText}\n                        />\n                    </RichTextEditor>\n                </div>\n            </Fragment>\n        );\n    };\n\n    return <Fragment>{editMode ? editItem() : viewItem()}</Fragment>;\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    const items = ownProps.editMode\n        ? sGetEditDashboardItems(state)\n        : sGetDashboardItems(state);\n\n    const item = items.find(item => item.id === ownProps.item.id);\n\n    return {\n        text: item ? item.text : '',\n    };\n};\n\nTextItem.propTypes = {\n    acUpdateDashboardItem: PropTypes.func,\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    text: PropTypes.string,\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        acUpdateDashboardItem,\n    }\n)(TextItem);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nimport { FILTER_ORG_UNIT } from '../../../actions/itemFilters';\nimport { sGetItemFiltersRoot } from '../../../reducers/itemFilters';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nconst getIframeSrc = (appDetails, item, itemFilters) => {\n    let iframeSrc = `${appDetails.launchUrl}?dashboardItemId=${item.id}`;\n\n    if (\n        itemFilters &&\n        itemFilters[FILTER_ORG_UNIT] &&\n        itemFilters[FILTER_ORG_UNIT].length\n    ) {\n        const ouIds = itemFilters[FILTER_ORG_UNIT].map(\n            ouPath => ouPath.split('/').slice(-1)[0]\n        );\n\n        iframeSrc += `&userOrgUnit=${ouIds.join(',')}`;\n    }\n\n    return iframeSrc;\n};\n\nconst AppItem = ({ item, itemFilters }, context) => {\n    let appDetails;\n\n    const appKey = item.appKey;\n\n    if (appKey) {\n        appDetails = context.d2.system.installedApps.find(\n            app => app.key === appKey\n        );\n    }\n\n    return appDetails && appDetails.name && appDetails.launchUrl ? (\n        <Fragment>\n            <ItemHeader title={appDetails.name} itemId={item.id} />\n            <Line />\n            <iframe\n                title={appDetails.name}\n                src={getIframeSrc(appDetails, item, itemFilters)}\n                className=\"dashboard-item-content\"\n                style={{ border: 'none' }}\n            />\n        </Fragment>\n    ) : (\n        <Fragment>\n            <ItemHeader title={`${appKey} app not found`} />\n            <Line />\n            <div\n                className=\"dashboard-item-content\"\n                style={{\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    height: '90%',\n                }}\n            >\n                <NotInterestedIcon\n                    color=\"disabled\"\n                    disabled\n                    style={{ width: 100, height: 100, align: 'center' }}\n                />\n            </div>\n        </Fragment>\n    );\n};\n\nAppItem.propTypes = {\n    item: PropTypes.object,\n    itemFilters: PropTypes.object,\n};\n\nAppItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nconst mapStateToProps = state => ({\n    itemFilters: sGetItemFiltersRoot(state),\n});\n\nexport default connect(mapStateToProps)(AppItem);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\n\nimport { colors } from '@dhis2/ui-core';\nimport ItemHeader from '../ItemHeader';\n\nconst style = {\n    margin: '21px 28px',\n    fontSize: '14px',\n    lineHeight: '18px',\n    color: colors.grey600,\n};\n\nconst SpacerItem = props => {\n    return (\n        <Fragment>\n            <ItemHeader title={i18n.t('Spacer')} itemId={props.item.id} />\n            <p style={style}>\n                {i18n.t(\n                    'Use a spacer to create empty vertical space between other dashboard items.'\n                )}\n            </p>\n        </Fragment>\n    );\n};\n\nSpacerItem.propTypes = {\n    item: PropTypes.object,\n};\n\nexport default SpacerItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport VisualizationItem from './VisualizationItem/Item';\nimport MessagesItem from './MessagesItem/Item';\nimport NotSupportedItem from './NotSupportedItem/Item';\nimport ListItem from './ListItem/Item';\nimport TextItem from './TextItem/Item';\nimport AppItem from './AppItem/Item';\nimport SpacerItem from './SpacerItem/Item';\nimport {\n    APP,\n    VISUALIZATION,\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_CHART,\n    EVENT_REPORT,\n    MESSAGES,\n    REPORTS,\n    RESOURCES,\n    USERS,\n    TEXT,\n    SPACER,\n} from '../../modules/itemTypes';\nimport { DEFAULT_STATE_ITEM_FILTERS } from '../../reducers/itemFilters';\n\nconst getGridItem = type => {\n    switch (type) {\n        case VISUALIZATION:\n        case REPORT_TABLE:\n        case CHART:\n        case MAP:\n        case EVENT_CHART:\n        case EVENT_REPORT:\n            return VisualizationItem;\n        case MESSAGES:\n            return MessagesItem;\n        case REPORTS:\n        case RESOURCES:\n        case USERS:\n            return ListItem;\n        case TEXT:\n            return TextItem;\n        case SPACER:\n            return SpacerItem;\n        case APP:\n            return AppItem;\n        default:\n            return NotSupportedItem;\n    }\n};\n\nexport const Item = props => {\n    const GridItem = getGridItem(props.item.type);\n\n    return (\n        <GridItem\n            item={props.item}\n            editMode={props.editMode}\n            itemFilters={\n                props.editMode ? DEFAULT_STATE_ITEM_FILTERS : props.itemFilters\n            }\n            onToggleItemExpanded={props.onToggleItemExpanded}\n        />\n    );\n};\n\nItem.propTypes = {\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    itemFilters: PropTypes.object,\n    onToggleItemExpanded: PropTypes.func,\n};\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nexport const NoContentMessage = ({ text }) => (\n    <div\n        style={{\n            padding: '50px 10px',\n            textAlign: 'center',\n            fontSize: '15px',\n            fontWeight: 500,\n            color: colors.grey600,\n        }}\n    >\n        {text}\n    </div>\n);\n\nNoContentMessage.propTypes = {\n    text: PropTypes.string,\n};\n\nexport default NoContentMessage;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash/debounce';\nimport pick from 'lodash/pick';\n\nconst defaultDebounceMs = 100;\nconst defaultBufferFactor = 0.25;\n\nclass ProgressiveLoadingContainer extends Component {\n    static propTypes = {\n        children: PropTypes.node.isRequired,\n        bufferFactor: PropTypes.number,\n        className: PropTypes.string,\n        debounceMs: PropTypes.number,\n        style: PropTypes.object,\n    };\n    static defaultProps = {\n        debounceMs: defaultDebounceMs,\n        bufferFactor: defaultBufferFactor,\n    };\n\n    state = {\n        shouldLoad: false,\n    };\n    containerRef = null;\n    shouldLoadHandler = null;\n\n    checkShouldLoad() {\n        const bufferPx = this.props.bufferFactor * window.innerHeight;\n\n        if (!this.containerRef) {\n            return;\n        }\n\n        const rect = this.containerRef.getBoundingClientRect();\n        if (\n            rect.bottom > -bufferPx &&\n            rect.top < window.innerHeight + bufferPx\n        ) {\n            this.setState({\n                shouldLoad: true,\n            });\n\n            this.removeHandler();\n        }\n    }\n\n    registerHandler() {\n        this.shouldLoadHandler = debounce(\n            () => this.checkShouldLoad(),\n            this.props.debounceMs\n        );\n\n        window.addEventListener('scroll', this.shouldLoadHandler);\n    }\n    removeHandler() {\n        window.removeEventListener('scroll', this.shouldLoadHandler);\n    }\n\n    componentDidMount() {\n        this.registerHandler();\n        this.checkShouldLoad();\n    }\n\n    componentWillUnmount() {\n        this.removeHandler();\n    }\n\n    render() {\n        const { children, className, style, ...props } = this.props;\n        const { shouldLoad } = this.state;\n\n        const eventProps = pick(props, [\n            'onMouseDown',\n            'onTouchStart',\n            'onMouseUp',\n            'onTouchEnd',\n        ]);\n\n        return (\n            <div\n                ref={ref => (this.containerRef = ref)}\n                style={style}\n                className={className}\n                {...eventProps}\n            >\n                {shouldLoad && children}\n            </div>\n        );\n    }\n}\n\nexport default ProgressiveLoadingContainer;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport memoize from 'lodash/memoize';\nimport i18n from '@dhis2/d2-i18n';\nimport ReactGridLayout from 'react-grid-layout';\nimport { CircularLoader, ScreenCover } from '@dhis2/ui-core';\n\nimport {\n    acUpdateDashboardLayout,\n    acRemoveDashboardItem,\n} from '../../actions/editDashboard';\nimport { Item } from '../Item/Item';\nimport { resize as pluginResize } from '../Item/VisualizationItem/plugin';\nimport { isVisualizationType } from '../../modules/itemTypes';\nimport {\n    GRID_ROW_HEIGHT,\n    GRID_COMPACT_TYPE,\n    ITEM_MIN_HEIGHT,\n    MARGIN,\n    getGridColumns,\n    hasShape,\n    onItemResize,\n} from './gridUtil';\nimport { orArray } from '../../modules/util';\n\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\n\nimport './ItemGrid.css';\nimport { sGetSelectedId, sGetSelectedIsLoading } from '../../reducers/selected';\nimport {\n    sGetEditDashboardRoot,\n    sGetEditDashboardItems,\n} from '../../reducers/editDashboard';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n} from '../../reducers/dashboards';\nimport ProgressiveLoadingContainer from '../Item/ProgressiveLoadingContainer';\n\n// Component\n\nconst EXPANDED_HEIGHT = 17;\n\nexport class ItemGrid extends Component {\n    state = {\n        expandedItems: {},\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.getMemoizedItem = memoize(this.getItem);\n    }\n\n    onToggleItemExpanded = clickedId => {\n        const isExpanded =\n            typeof this.state.expandedItems[clickedId] === 'boolean'\n                ? this.state.expandedItems[clickedId]\n                : false;\n\n        const expandedItems = { ...this.state.expandedItems };\n        expandedItems[clickedId] = !isExpanded;\n        this.setState({ expandedItems });\n    };\n\n    onRemoveItem = clickedId => {\n        this.props.acRemoveDashboardItem(clickedId);\n    };\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.edit) {\n            this.setState({ expandedItems: {} });\n        }\n    }\n\n    onLayoutChange = newLayout => {\n        if (this.props.edit) {\n            this.props.acUpdateDashboardLayout(newLayout);\n        }\n    };\n\n    onResizeStop = (layout, oldItem, newItem) => {\n        onItemResize(newItem.i);\n\n        const dashboardItem = this.props.dashboardItems.find(\n            item => item.id === newItem.i\n        );\n\n        // call resize on the item component if it's a plugin type\n        if (dashboardItem && isVisualizationType(dashboardItem)) {\n            pluginResize(dashboardItem);\n        }\n    };\n\n    onRemoveItemWrapper = id => () => this.onRemoveItem(id);\n\n    getItem = dashboardItem => {\n        const expandedItem = this.state.expandedItems[dashboardItem.id];\n        const hProp = { h: dashboardItem.h };\n\n        if (expandedItem && expandedItem === true) {\n            hProp.h = dashboardItem.h + EXPANDED_HEIGHT;\n        }\n\n        return Object.assign({}, dashboardItem, hProp, {\n            i: dashboardItem.id,\n            minH: ITEM_MIN_HEIGHT,\n            randomNumber: Math.random(),\n        });\n    };\n\n    getItems = dashboardItems =>\n        dashboardItems.map(item => this.getMemoizedItem(item));\n\n    getItemComponent = item => {\n        const itemClassNames = [\n            item.type,\n            this.props.edit ? 'edit' : 'view',\n        ].join(' ');\n\n        return (\n            <ProgressiveLoadingContainer\n                key={item.i}\n                className={itemClassNames}\n            >\n                <Item\n                    item={item}\n                    editMode={this.props.edit}\n                    onToggleItemExpanded={this.onToggleItemExpanded}\n                />\n            </ProgressiveLoadingContainer>\n        );\n    };\n\n    getItemComponents = items => items.map(item => this.getItemComponent(item));\n\n    render() {\n        const { edit, isLoading, dashboardItems } = this.props;\n\n        if (!isLoading && !dashboardItems.length) {\n            return (\n                <NoContentMessage\n                    text={i18n.t('There are no items on this dashboard')}\n                />\n            );\n        }\n\n        const items = edit\n            ? this.getItems(dashboardItems)\n            : dashboardItems.map(this.getItem);\n\n        return (\n            <div className=\"grid-wrapper\">\n                {isLoading ? (\n                    <ScreenCover>\n                        <CircularLoader />\n                    </ScreenCover>\n                ) : null}\n                <ReactGridLayout\n                    onLayoutChange={this.onLayoutChange}\n                    onResizeStop={this.onResizeStop}\n                    className=\"layout\"\n                    layout={items}\n                    margin={MARGIN}\n                    cols={getGridColumns()}\n                    rowHeight={GRID_ROW_HEIGHT}\n                    width={window.innerWidth}\n                    compactType={GRID_COMPACT_TYPE}\n                    isDraggable={edit}\n                    isResizable={edit}\n                    draggableCancel=\"input,textarea\"\n                >\n                    {this.getItemComponents(items)}\n                </ReactGridLayout>\n            </div>\n        );\n    }\n}\n\nItemGrid.propTypes = {\n    acRemoveDashboardItem: PropTypes.func,\n    acUpdateDashboardLayout: PropTypes.func,\n    dashboardItems: PropTypes.array,\n    edit: PropTypes.bool,\n    isLoading: PropTypes.bool,\n};\n\nItemGrid.defaultProps = {\n    dashboardItems: [],\n};\n\n// Container\n\nconst mapStateToProps = (state, ownProps) => {\n    const selectedDashboard = ownProps.edit\n        ? sGetEditDashboardRoot(state)\n        : sGetDashboardById(state, sGetSelectedId(state));\n\n    const dashboardItems = ownProps.edit\n        ? sGetEditDashboardItems(state)\n        : sGetDashboardItems(state);\n\n    return {\n        isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n        dashboardItems,\n    };\n};\n\nconst mapDispatchToProps = {\n    acUpdateDashboardLayout,\n    acRemoveDashboardItem,\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const validItems = orArray(stateProps.dashboardItems).filter(hasShape);\n\n    return {\n        ...dispatchProps,\n        edit: ownProps.edit,\n        isLoading: stateProps.isLoading,\n        dashboardItems: validItems,\n        onItemResize,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n    mergeProps\n)(ItemGrid);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport i18n from '@dhis2/d2-i18n';\n\nimport { colors } from '@dhis2/ui-core';\n\nconst styles = {\n    badgeContainer: {\n        margin: '2px',\n        padding: '0 16px',\n        borderRadius: '4px',\n        color: colors.white,\n        backgroundColor: '#212934',\n        height: 36,\n        display: 'flex',\n        alignItems: 'center',\n    },\n    badge: {\n        fontSize: '13px',\n        cursor: 'pointer',\n        whiteSpace: 'nowrap',\n    },\n    badgeRemove: {\n        fontSize: '12px',\n        textDecoration: 'underline',\n        marginLeft: '24px',\n        cursor: 'pointer',\n    },\n};\n\nclass FilterBadge extends Component {\n    onClick = id => () => this.props.onClick(id);\n    onRemove = id => () => this.props.onRemove(id);\n\n    render() {\n        const { data } = this.props;\n\n        return (\n            <div style={styles.badgeContainer}>\n                <span style={styles.badge} onClick={this.onClick(data.id)}>\n                    {`${data.name}: ${\n                        data.values.length > 1\n                            ? i18n.t('{{count}} selected', {\n                                  count: data.values.length,\n                              })\n                            : data.values[0].name\n                    }`}\n                </span>\n                <span\n                    style={styles.badgeRemove}\n                    onClick={this.onRemove(data.id)}\n                >\n                    {i18n.t('Remove')}\n                </span>\n            </div>\n        );\n    }\n}\n\nFilterBadge.propTypes = {\n    data: PropTypes.object.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onRemove: PropTypes.func.isRequired,\n};\n\nFilterBadge.defaultProps = {\n    onClick: Function.prototype,\n    onRemove: Function.prototype,\n};\n\nexport default FilterBadge;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { createSelector } from 'reselect';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport { sGetDimensions } from '../../reducers/dimensions';\nimport { sGetItemFiltersRoot } from '../../reducers/itemFilters';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { getTopOffset } from '../ControlBar/controlBarDimensions';\nimport { acRemoveItemFilter } from '../../actions/itemFilters';\nimport { acRemoveEditItemFilter } from '../../actions/editItemFilters';\nimport { acSetActiveModalDimension } from '../../actions/activeModalDimension';\n\nimport FilterBadge from './FilterBadge';\n\nconst styles = {\n    bar: {\n        position: 'sticky',\n        zIndex: 7,\n        padding: '8px 0',\n        display: 'flex',\n        justifyContent: 'center',\n        flexWrap: 'wrap',\n    },\n};\n\nexport class FilterBar extends Component {\n    onBadgeRemove = id => {\n        this.props.removeItemFilter(id);\n        this.props.removeEditItemFilter(id);\n    };\n\n    onBadgeClick = id => {\n        this.props.setActiveModalDimension({\n            id,\n            name: this.props.filters.find(item => item.id === id).name,\n        });\n    };\n\n    render() {\n        const { filters, userRows, classes } = this.props;\n        const top = getTopOffset(userRows) + 10;\n\n        return filters.length ? (\n            <div className={classes.bar} style={{ top }}>\n                {filters.map(filter => (\n                    <FilterBadge\n                        key={filter.id}\n                        data={filter}\n                        onClick={this.onBadgeClick}\n                        onRemove={this.onBadgeRemove}\n                    />\n                ))}\n            </div>\n        ) : null;\n    }\n}\n\nFilterBar.propTypes = {\n    filters: PropTypes.array.isRequired,\n    removeEditItemFilter: PropTypes.func.isRequired,\n    removeItemFilter: PropTypes.func.isRequired,\n    classes: PropTypes.object,\n    setActiveModalDimension: PropTypes.func,\n    userRows: PropTypes.number,\n};\n\nFilterBar.defaultProps = {\n    filters: [],\n    removeItemFIlter: Function.prototype,\n    removeEditItemFilter: Function.prototype,\n};\n\n// simplify the filters structure to:\n// [{ id: 'pe', name: 'Period', values: [{ id: 2019: name: '2019' }, {id: 'LAST_MONTH', name: 'Last month' }]}, ...]\nconst filtersSelector = createSelector(\n    [sGetItemFiltersRoot, sGetDimensions],\n    (filters, dimensions) =>\n        Object.keys(filters).reduce((arr, id) => {\n            arr.push({\n                id: id,\n                name: dimensions.find(dimension => dimension.id === id).name,\n                values: filters[id].map(value => ({\n                    id: value.id,\n                    name: value.displayName || value.name,\n                })),\n            });\n\n            return arr;\n        }, [])\n);\n\nconst mapStateToProps = state => ({\n    filters: filtersSelector(state),\n    userRows: sGetControlBarUserRows(state),\n});\n\nexport default connect(\n    mapStateToProps,\n    {\n        setActiveModalDimension: acSetActiveModalDimension,\n        removeItemFilter: acRemoveItemFilter,\n        removeEditItemFilter: acRemoveEditItemFilter,\n    }\n)(withStyles(styles)(FilterBar));\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport TitleBar from '../TitleBar/TitleBar';\nimport ItemGrid from '../ItemGrid/ItemGrid';\nimport FilterBar from '../FilterBar/FilterBar';\n\nexport const DashboardContent = props => (\n    <Fragment>\n        <TitleBar edit={props.editMode} />\n        <FilterBar />\n        <ItemGrid edit={props.editMode} />\n    </Fragment>\n);\n\nDashboardContent.propTypes = {\n    editMode: PropTypes.bool,\n};\n\nexport default DashboardContent;\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport isEmpty from 'lodash/isEmpty';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\n\nimport {\n    sGetAllDashboards,\n    sDashboardsIsFetching,\n} from '../../reducers/dashboards';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport DashboardsBar from '../ControlBar/DashboardsBar';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport DashboardContent from './DashboardContent';\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nexport const Content = ({ hasDashboardContent, dashboardsIsEmpty }) => {\n    const msg = dashboardsIsEmpty\n        ? i18n.t(\n              'No dashboards found. Use the + button to create a new dashboard.'\n          )\n        : i18n.t('Requested dashboard not found');\n\n    return hasDashboardContent ? (\n        <DashboardContent editMode={false} />\n    ) : (\n        <NoContentMessage text={msg} />\n    );\n};\n\nContent.propTypes = {\n    dashboardsIsEmpty: PropTypes.bool,\n    hasDashboardContent: PropTypes.bool,\n};\n\nexport const ViewDashboard = ({ id, dashboardsIsEmpty, dashboardsLoaded }) => {\n    const hasDashboardContent = id && !dashboardsIsEmpty;\n    const contentNotReady = !dashboardsLoaded || id === null;\n\n    return (\n        <Fragment>\n            <DashboardsBar />\n            <DashboardVerticalOffset />\n            <div className=\"dashboard-wrapper\">\n                {contentNotReady ? null : (\n                    <Content\n                        hasDashboardContent={hasDashboardContent}\n                        dashboardsIsEmpty={dashboardsIsEmpty}\n                    />\n                )}\n            </div>\n        </Fragment>\n    );\n};\n\nViewDashboard.propTypes = {\n    dashboardsIsEmpty: PropTypes.bool,\n    dashboardsLoaded: PropTypes.bool,\n    id: PropTypes.string,\n};\n\nconst mapStateToProps = state => {\n    const dashboards = sGetAllDashboards(state);\n\n    return {\n        id: sGetSelectedId(state),\n        dashboardsIsEmpty: isEmpty(dashboards),\n        dashboardsLoaded: !sDashboardsIsFetching(state),\n    };\n};\n\nexport default connect(mapStateToProps)(ViewDashboard);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport { Button } from '@dhis2/ui-core';\n\nexport const ConfirmDeleteDialog = ({\n    dashboardName,\n    onDeleteConfirmed,\n    onContinueEditing,\n    open,\n}) => {\n    const actions = [\n        <Button key=\"cancel\" secondary onClick={onContinueEditing}>\n            {i18n.t('Cancel')}\n        </Button>,\n        <Button key=\"delete\" destructive onClick={onDeleteConfirmed}>\n            {i18n.t('Delete')}\n        </Button>,\n    ];\n\n    return (\n        <Dialog open={open} onClose={onContinueEditing}>\n            <DialogTitle style={{ fontSize: '1.25rem', fontWeight: '450' }}>\n                {i18n.t('Delete dashboard')}\n            </DialogTitle>\n            <DialogContent>\n                <DialogContentText style={{ fontSize: '0.875rem' }}>\n                    {i18n.t(\n                        'Deleting dashboard \"{{ dashboardName }}\" will remove it for all users. This action cannot be undone. Are you sure you want to permanently delete this dashboard?',\n                        { dashboardName }\n                    )}\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>{actions}</DialogActions>\n        </Dialog>\n    );\n};\n\nConfirmDeleteDialog.propTypes = {\n    dashboardName: PropTypes.string,\n    open: PropTypes.bool,\n    onContinueEditing: PropTypes.func,\n    onDeleteConfirmed: PropTypes.func,\n};\n\nexport default ConfirmDeleteDialog;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport ControlBar from './ControlBar';\nimport TranslationDialog from '@dhis2/d2-ui-translation-dialog';\nimport { Button } from '@dhis2/ui-core';\n\nimport ConfirmDeleteDialog from './ConfirmDeleteDialog';\nimport {\n    tSaveDashboard,\n    acClearEditDashboard,\n} from '../../actions/editDashboard';\nimport {\n    tDeleteDashboard,\n    acSetDashboardDisplayName,\n} from '../../actions/dashboards';\nimport {\n    sGetEditDashboardRoot,\n    sGetIsNewDashboard,\n} from '../../reducers/editDashboard';\nimport {\n    CONTROL_BAR_ROW_HEIGHT,\n    MIN_ROW_COUNT,\n    getControlBarHeight,\n} from './controlBarDimensions';\nimport { apiFetchDashboard } from '../../api/dashboards';\n\nimport classes from './styles/DashboardsBar.module.css';\n\nconst buttonBarStyle = {\n    height: CONTROL_BAR_ROW_HEIGHT,\n    paddingTop: '15px',\n    marginLeft: '15px',\n    marginRight: '15px',\n};\n\nexport class EditBar extends Component {\n    state = {\n        translationDialogIsOpen: false,\n        dashboardModel: undefined,\n        confirmDeleteDialogOpen: false,\n        redirectUrl: undefined,\n    };\n\n    onConfirmDelete = () => {\n        this.setState({ confirmDeleteDialogOpen: true });\n    };\n\n    onSave = () => {\n        this.props.onSave().then(newId => {\n            this.setState({ redirectUrl: `/${newId}` });\n        });\n    };\n\n    onDiscard = () => {\n        this.props.onDiscardChanges();\n        const redirectUrl = this.props.dashboardId\n            ? `/${this.props.dashboardId}`\n            : '/';\n        this.setState({ redirectUrl });\n    };\n\n    onContinueEditing = () => {\n        this.setState({ confirmDeleteDialogOpen: false });\n    };\n\n    onDeleteConfirmed = () => {\n        this.setState({ confirmDeleteDialogOpen: false });\n        this.props.onDelete(this.props.dashboardId).then(() => {\n            this.setState({ redirectUrl: '/' });\n        });\n    };\n\n    onTranslationsSaved = async translations => {\n        if (translations && translations.length) {\n            const dbLocale = await this.context.d2.currentUser.userSettings.get(\n                'keyDbLocale'\n            );\n\n            const translation = translations.find(\n                t => t.locale === dbLocale && t.property === 'NAME'\n            );\n\n            if (translation && translation.value) {\n                this.props.onTranslate(\n                    this.props.dashboardId,\n                    translation.value\n                );\n            }\n        }\n    };\n\n    fetchDashboardModel = () => {\n        if (this.props.dashboardId && !this.state.dashboardModel) {\n            apiFetchDashboard(this.props.dashboardId).then(dashboardModel =>\n                this.setState({ dashboardModel })\n            );\n        }\n    };\n\n    componentDidMount() {\n        this.fetchDashboardModel();\n    }\n\n    componentDidUpdate() {\n        this.fetchDashboardModel();\n    }\n\n    toggleTranslationDialog = () => {\n        this.setState({\n            translationDialogIsOpen: !this.state.translationDialogIsOpen,\n        });\n    };\n\n    confirmDeleteDialog = () =>\n        this.props.deleteAccess && this.props.dashboardId ? (\n            <ConfirmDeleteDialog\n                dashboardName={this.props.dashboardName}\n                onDeleteConfirmed={this.onDeleteConfirmed}\n                onContinueEditing={this.onContinueEditing}\n                open={this.state.confirmDeleteDialogOpen}\n            />\n        ) : null;\n\n    translationDialog = () =>\n        this.state.dashboardModel && this.state.dashboardModel.id ? (\n            <TranslationDialog\n                className=\"translation-dialog\"\n                d2={this.context.d2}\n                open={this.state.translationDialogIsOpen}\n                onRequestClose={this.toggleTranslationDialog}\n                objectToTranslate={this.state.dashboardModel}\n                fieldsToTranslate={['name', 'description']}\n                // TODO handle messages in snackbar\n                onTranslationSaved={this.onTranslationsSaved}\n                onTranslationError={err =>\n                    console.log('translation update error', err)\n                }\n            />\n        ) : null;\n\n    render() {\n        if (this.state.redirectUrl) {\n            return <Redirect to={this.state.redirectUrl} />;\n        }\n\n        const { dashboardId, deleteAccess, updateAccess } = this.props;\n        const controlBarHeight = getControlBarHeight(MIN_ROW_COUNT);\n\n        const discardBtnText = updateAccess\n            ? i18n.t('Exit without saving')\n            : i18n.t('Go to dashboards');\n\n        return (\n            <Fragment>\n                <ControlBar height={controlBarHeight} editMode={true}>\n                    <div style={buttonBarStyle}>\n                        {updateAccess ? (\n                            <div className={classes.leftControls}>\n                                <span style={{ marginRight: '15px' }}>\n                                    <Button primary onClick={this.onSave}>\n                                        {i18n.t('Save changes')}\n                                    </Button>\n                                </span>\n\n                                {dashboardId ? (\n                                    <span style={{ marginRight: '15px' }}>\n                                        <Button\n                                            onClick={\n                                                this.toggleTranslationDialog\n                                            }\n                                        >\n                                            {i18n.t('Translate')}\n                                        </Button>\n                                    </span>\n                                ) : null}\n                                {dashboardId && deleteAccess ? (\n                                    <Button onClick={this.onConfirmDelete}>\n                                        {i18n.t('Delete')}\n                                    </Button>\n                                ) : null}\n                            </div>\n                        ) : null}\n\n                        <div className={classes.rightControls}>\n                            <Button secondary onClick={this.onDiscard}>\n                                {discardBtnText}\n                            </Button>\n                        </div>\n                    </div>\n                </ControlBar>\n                {this.translationDialog()}\n                {this.confirmDeleteDialog()}\n            </Fragment>\n        );\n    }\n}\n\nEditBar.propTypes = {\n    dashboardId: PropTypes.string,\n    dashboardName: PropTypes.string,\n    deleteAccess: PropTypes.bool,\n    updateAccess: PropTypes.bool,\n    onDelete: PropTypes.func,\n    onDiscardChanges: PropTypes.func,\n    onSave: PropTypes.func,\n    onTranslate: PropTypes.func,\n};\n\nEditBar.contextTypes = {\n    d2: PropTypes.object,\n};\n\nconst mapStateToProps = state => {\n    const dashboard = sGetEditDashboardRoot(state);\n\n    let deleteAccess;\n    let updateAccess;\n    if (sGetIsNewDashboard(state)) {\n        deleteAccess = true;\n        updateAccess = true;\n    } else {\n        updateAccess = dashboard.access ? dashboard.access.update : false;\n        deleteAccess = dashboard.access ? dashboard.access.delete : false;\n    }\n\n    return {\n        dashboardId: dashboard.id,\n        dashboardName: dashboard.name,\n        deleteAccess,\n        updateAccess,\n    };\n};\n\nconst mapDispatchToProps = dispatch => ({\n    onSave: () => dispatch(tSaveDashboard()).then(id => id),\n    onDelete: id => dispatch(tDeleteDashboard(id)),\n    onDiscardChanges: () => dispatch(acClearEditDashboard()),\n    onTranslate: (id, value) => dispatch(acSetDashboardDisplayName(id, value)),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(EditBar);\n","import React, { Fragment, Component } from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\n\nimport { acSetEditDashboard } from '../../actions/editDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n    sDashboardsIsFetching,\n} from '../../reducers/dashboards';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport DashboardContent from './DashboardContent';\nimport EditBar from '../ControlBar/EditBar';\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nexport const Content = ({ updateAccess }) => {\n    return updateAccess ? (\n        <DashboardContent editMode={true} />\n    ) : (\n        <NoContentMessage text={i18n.t('No access')} />\n    );\n};\n\nContent.propTypes = {\n    updateAccess: PropTypes.bool,\n};\nexport class EditDashboard extends Component {\n    state = {\n        initialized: false,\n    };\n\n    initEditDashboard = () => {\n        if (this.props.dashboard) {\n            this.setState({ initialized: true });\n            this.props.setEditDashboard(this.props.dashboard, this.props.items);\n        }\n    };\n\n    componentDidMount() {\n        this.initEditDashboard();\n    }\n\n    componentDidUpdate() {\n        if (!this.state.initialized) {\n            this.initEditDashboard();\n        }\n    }\n\n    getDashboardContent = () => {\n        const contentNotReady =\n            !this.props.dashboardsLoaded || this.props.id === null;\n\n        return (\n            <div className=\"dashboard-wrapper\">\n                {contentNotReady ? null : (\n                    <Content updateAccess={this.props.updateAccess} />\n                )}\n            </div>\n        );\n    };\n\n    render() {\n        return (\n            <Fragment>\n                <EditBar />\n                <DashboardVerticalOffset editMode={true} />\n                {this.getDashboardContent()}\n            </Fragment>\n        );\n    }\n}\n\nEditDashboard.propTypes = {\n    dashboard: PropTypes.object,\n    dashboardsLoaded: PropTypes.bool,\n    id: PropTypes.string,\n    items: PropTypes.array,\n    setEditDashboard: PropTypes.func,\n    updateAccess: PropTypes.bool,\n};\n\nconst mapStateToProps = state => {\n    const id = sGetSelectedId(state);\n    const dashboard = id ? sGetDashboardById(state, id) : null;\n\n    const updateAccess =\n        dashboard && dashboard.access ? dashboard.access.update : false;\n\n    return {\n        dashboard,\n        id,\n        updateAccess,\n        items: sGetDashboardItems(state),\n        dashboardsLoaded: !sDashboardsIsFetching(state),\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        setEditDashboard: acSetEditDashboard,\n    }\n)(EditDashboard);\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { acSetEditNewDashboard } from '../../actions/editDashboard';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport EditBar from '../ControlBar/EditBar';\nimport DashboardContent from './DashboardContent';\n\nclass NewDashboard extends Component {\n    componentDidMount() {\n        this.props.setNewDashboard();\n    }\n\n    render() {\n        return (\n            <Fragment>\n                <EditBar />\n                <DashboardVerticalOffset editMode={true} />\n                <div className=\"dashboard-wrapper\">\n                    <DashboardContent editMode={true} />\n                </div>\n            </Fragment>\n        );\n    }\n}\n\nNewDashboard.propTypes = {\n    setNewDashboard: PropTypes.func,\n};\n\nexport default connect(\n    null,\n    {\n        setNewDashboard: acSetEditNewDashboard,\n    }\n)(NewDashboard);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { tSelectDashboard } from '../../actions/dashboards';\nimport { sDashboardsIsFetching } from '../../reducers/dashboards';\nimport { EDIT, NEW } from './dashboardModes';\nimport ViewDashboard from './ViewDashboard';\nimport EditDashboard from './EditDashboard';\nimport NewDashboard from './NewDashboard';\n\nclass Dashboard extends Component {\n    setDashboard = () => {\n        if (this.props.dashboardsLoaded) {\n            const id = this.props.match.params.dashboardId || null;\n\n            this.props.selectDashboard(id);\n\n            this.scrollToTop();\n        }\n    };\n\n    scrollToTop = () => {\n        window.scrollTo(0, 0);\n    };\n\n    componentDidMount() {\n        this.setDashboard();\n    }\n\n    componentDidUpdate() {\n        this.setDashboard();\n    }\n\n    render() {\n        switch (this.props.mode) {\n            case EDIT:\n                return <EditDashboard />;\n            case NEW:\n                return <NewDashboard />;\n            default:\n                return <ViewDashboard />;\n        }\n    }\n}\n\nDashboard.propTypes = {\n    dashboardsLoaded: PropTypes.bool,\n    match: PropTypes.object,\n    mode: PropTypes.string,\n    selectDashboard: PropTypes.func,\n};\n\nconst mapStateToProps = state => {\n    return { dashboardsLoaded: !sDashboardsIsFetching(state) };\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        selectDashboard: tSelectDashboard,\n    }\n)(Dashboard);\n","export const EDIT = 'edit';\nexport const NEW = 'new';\nexport const VIEW = 'view';\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { HeaderBar } from '@dhis2/ui-widgets';\nimport { CssVariables } from '@dhis2/ui-core';\n\nimport { EDIT, VIEW, NEW } from './Dashboard/dashboardModes';\nimport { acReceivedUser } from '../actions/user';\nimport { tFetchDashboards } from '../actions/dashboards';\nimport { tSetControlBarRows } from '../actions/controlBar';\nimport { tSetDimensions } from '../actions/dimensions';\nimport Dashboard from './Dashboard/Dashboard';\nimport SnackbarMessage from './SnackbarMessage/SnackbarMessage';\n\nimport 'typeface-roboto';\nimport './App.css';\n\nexport class App extends Component {\n    componentDidMount() {\n        this.props.setCurrentUser(this.props.d2.currentUser);\n        this.props.fetchDashboards();\n        this.props.setControlBarRows();\n        this.props.setDimensions(this.props.d2);\n    }\n\n    getChildContext() {\n        return { baseUrl: this.props.baseUrl, i18n, d2: this.props.d2 };\n    }\n\n    render() {\n        return (\n            <>\n                <CssVariables colors spacers />\n                <div className=\"app-wrapper\">\n                    <div className=\"dashboard-header-bar\">\n                        <HeaderBar appName={i18n.t('Dashboard')} />\n                    </div>\n                    <Router>\n                        <Switch>\n                            <Route\n                                exact\n                                path=\"/\"\n                                render={props => (\n                                    <Dashboard {...props} mode={VIEW} />\n                                )}\n                            />\n                            <Route\n                                exact\n                                path=\"/new\"\n                                render={props => (\n                                    <Dashboard {...props} mode={NEW} />\n                                )}\n                            />\n                            <Route\n                                exact\n                                path=\"/:dashboardId\"\n                                render={props => (\n                                    <Dashboard {...props} mode={VIEW} />\n                                )}\n                            />\n                            <Route\n                                exact\n                                path=\"/:dashboardId/edit\"\n                                render={props => (\n                                    <Dashboard {...props} mode={EDIT} />\n                                )}\n                            />\n                        </Switch>\n                    </Router>\n                    <SnackbarMessage />\n                </div>\n            </>\n        );\n    }\n}\n\nApp.propTypes = {\n    fetchDashboards: PropTypes.func.isRequired,\n    setControlBarRows: PropTypes.func.isRequired,\n    setCurrentUser: PropTypes.func.isRequired,\n    setDimensions: PropTypes.func.isRequired,\n    baseUrl: PropTypes.string,\n    d2: PropTypes.object,\n};\n\nApp.childContextTypes = {\n    baseUrl: PropTypes.string,\n    i18n: PropTypes.object,\n    d2: PropTypes.object,\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setCurrentUser: currentUser => dispatch(acReceivedUser(currentUser)),\n        fetchDashboards: () => dispatch(tFetchDashboards()),\n        setControlBarRows: () => dispatch(tSetControlBarRows()),\n        setDimensions: d2 => dispatch(tSetDimensions(d2)),\n    };\n};\n\nexport default connect(\n    null,\n    mapDispatchToProps\n)(App);\n","import { RECEIVED_USER } from '../reducers/user';\n\nexport const acReceivedUser = value => ({\n    type: RECEIVED_USER,\n    value,\n});\n","//------------------------------------------------------------------------------\n// <auto-generated>\n// This code was generated by d2-i18n-generate.\n//\n// Changes to this file may cause incorrect behavior and will be lost if\n// the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\nimport i18n from '@dhis2/d2-i18n';\nimport moment from 'moment';\nimport 'moment/locale/ar';\nimport 'moment/locale/es';\nimport 'moment/locale/fr';\nimport 'moment/locale/lo';\nimport 'moment/locale/pt';\nimport 'moment/locale/ru';\nimport 'moment/locale/sv';\nimport 'moment/locale/tg';\nimport 'moment/locale/uk';\nimport 'moment/locale/ur';\nimport 'moment/locale/vi';\nimport 'moment/locale/zh-cn';\n\nimport arTranslations from './ar/translations.json';\nimport daTranslations from './da/translations.json';\nimport enTranslations from './en/translations.json';\nimport esTranslations from './es/translations.json';\nimport frTranslations from './fr/translations.json';\nimport idTranslations from './id/translations.json';\nimport kmTranslations from './km/translations.json';\nimport loTranslations from './lo/translations.json';\nimport myTranslations from './my/translations.json';\nimport prsTranslations from './prs/translations.json';\nimport psTranslations from './ps/translations.json';\nimport ptTranslations from './pt/translations.json';\nimport pt_BRTranslations from './pt_BR/translations.json';\nimport ruTranslations from './ru/translations.json';\nimport svTranslations from './sv/translations.json';\nimport tetTranslations from './tet/translations.json';\nimport tgTranslations from './tg/translations.json';\nimport ukTranslations from './uk/translations.json';\nimport urTranslations from './ur/translations.json';\nimport viTranslations from './vi/translations.json';\nimport zhTranslations from './zh/translations.json';\nimport zh_CNTranslations from './zh_CN/translations.json';\n\nconst namespace = 'dashboards-app';\nmoment.locale('en');\n\ni18n.addResources('ar', namespace, arTranslations);\ni18n.addResources('da', namespace, daTranslations);\ni18n.addResources('en', namespace, enTranslations);\ni18n.addResources('es', namespace, esTranslations);\ni18n.addResources('fr', namespace, frTranslations);\ni18n.addResources('id', namespace, idTranslations);\ni18n.addResources('km', namespace, kmTranslations);\ni18n.addResources('lo', namespace, loTranslations);\ni18n.addResources('my', namespace, myTranslations);\ni18n.addResources('prs', namespace, prsTranslations);\ni18n.addResources('ps', namespace, psTranslations);\ni18n.addResources('pt', namespace, ptTranslations);\ni18n.addResources('pt_BR', namespace, pt_BRTranslations);\ni18n.addResources('ru', namespace, ruTranslations);\ni18n.addResources('sv', namespace, svTranslations);\ni18n.addResources('tet', namespace, tetTranslations);\ni18n.addResources('tg', namespace, tgTranslations);\ni18n.addResources('uk', namespace, ukTranslations);\ni18n.addResources('ur', namespace, urTranslations);\ni18n.addResources('vi', namespace, viTranslations);\ni18n.addResources('zh', namespace, zhTranslations);\ni18n.addResources('zh_CN', namespace, zh_CNTranslations);\n\ni18n.setDefaultNamespace(namespace);\ni18n.changeLanguage('en');\n\nexport default i18n;\n","/** @module reducers/selected */\nimport { validateReducer } from '../modules/util';\n\nexport const SET_STYLE = 'SET_STYLE';\n\nexport const DEFAULT_STATE_STYLE = 'LIST';\n\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\nconst style = (state = DEFAULT_STATE_STYLE, action) => {\n    switch (action.type) {\n        case SET_STYLE:\n            return validateReducer(action.value, DEFAULT_STATE_STYLE);\n        default:\n            return state;\n    }\n};\n\nexport default style;\n\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\nexport const sGetStyleRoot = state => state.style;\n","import { combineReducers } from 'redux';\nimport arraySort from 'd2-utilizr/lib/arraySort';\n\nimport dashboards, { sGetDashboardsRoot } from './dashboards';\nimport selected from './selected';\nimport dashboardsFilter, {\n    ownerData,\n    sGetFilterName,\n    sGetFilterOrder,\n    sGetFilterOwner,\n} from './dashboardsFilter';\nimport controlBar from './controlBar';\nimport visualizations from './visualizations';\nimport editDashboard from './editDashboard';\nimport messages from './messages';\nimport user from './user';\nimport snackbar from './snackbar';\nimport itemFilters from './itemFilters';\nimport editItemFilters from './editItemFilters';\nimport style from './style';\nimport dimensions from './dimensions';\nimport settings from './settings';\nimport activeModalDimension from './activeModalDimension';\n\nconst USER = 'system';\n\n// Reducers\n\nexport default combineReducers({\n    dashboards,\n    selected,\n    dashboardsFilter,\n    controlBar,\n    visualizations,\n    messages,\n    user,\n    editDashboard,\n    itemFilters,\n    editItemFilters,\n    style,\n    snackbar,\n    dimensions,\n    settings,\n    activeModalDimension,\n});\n\n// Map constants to data\nconst mapConstToData = {\n    NAME: 'name',\n    ITEMS: 'numberOfItems',\n    CREATED: 'created',\n    OWNER: 'owner',\n};\n\n// Selectors\n\n// Filter dashboards by name\nexport const sFilterDashboardsByName = (dashboards, filter) =>\n    dashboards.filter(d =>\n        d.displayName.toLowerCase().includes(filter.toLowerCase())\n    );\n\n// Filter dashboards by owner, TODO FIXME\nexport const sFilterDashboardsByOwner = (dashboards, filter) => {\n    const ME = ownerData[1]; // TODO\n    const OTHERS = ownerData[2]; // TODO\n\n    switch (filter) {\n        case ME:\n            return dashboards.filter(d => d.owner === USER);\n        case OTHERS:\n            return dashboards.filter(d => d.owner !== USER);\n        default:\n            return dashboards;\n    }\n};\n\n// Filter dashboards by order\nexport const sFilterDashboardsByOrder = (dashboards, filter) => {\n    const filterValues = filter.split(':');\n\n    const key = filterValues[0];\n    const direction = filterValues[1];\n\n    return arraySort(dashboards, direction, mapConstToData[key]);\n};\n\n// Selectors dependency level 2\n\n// Get filtered dashboards\nexport const sGetFilteredDashboards = state => {\n    const dashboards = sGetDashboardsRoot(state);\n\n    const nameFilter = sGetFilterName(state);\n    const ownerFilter = sGetFilterOwner(state);\n    const orderFilter = sGetFilterOrder(state);\n\n    return sFilterDashboardsByOrder(\n        sFilterDashboardsByName(\n            sFilterDashboardsByOwner(dashboards, ownerFilter),\n            nameFilter\n        ),\n        orderFilter\n    );\n};\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport reducer from './reducers';\n\nconst configureStore = () => {\n    const middleware = [thunk];\n\n    // Enable Redux devtools if extension is installed instead of redux-logger\n    const composeEnhancers =\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n    if (\n        !window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ &&\n        process.env.NODE_ENV !== 'production'\n    ) {\n        middleware.push(createLogger());\n    }\n\n    return createStore(\n        reducer,\n        composeEnhancers(applyMiddleware(...middleware))\n    );\n};\n\nexport default configureStore;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport { init as d2Init, config, getManifest, getUserSettings } from 'd2';\nimport dhis2theme from '@dhis2/d2-ui-core/theme/mui3.theme';\n\nimport { Provider as RuntimeProvider } from '@dhis2/app-runtime';\nimport { CssReset } from '@dhis2/ui-core';\n\nimport App from './components/App';\nimport './index.css';\nimport i18n from './locales';\nimport configureStore from './configureStore';\n\nconst muiTheme = () => createMuiTheme(dhis2theme);\n\nconst configI18n = userSettings => {\n    const uiLocale = userSettings.keyUiLocale;\n\n    if (uiLocale && uiLocale !== 'en') {\n        config.i18n.sources.add(`./i18n/i18n_module_${uiLocale}.properties`);\n    }\n\n    config.i18n.sources.add('./i18n/i18n_module_en.properties');\n    i18n.changeLanguage(uiLocale);\n};\n\nconst init = async () => {\n    const manifest = await getManifest('./manifest.webapp');\n\n    // log app info\n    console.info(\n        `Dashboards app, v${manifest.version}, ${\n            manifest.manifest_generated_at\n        }`\n    );\n\n    const isProd = process.env.NODE_ENV === 'production';\n\n    if (\n        !isProd &&\n        (!process.env.REACT_APP_DHIS2_BASE_URL ||\n            !process.env.REACT_APP_DHIS2_AUTHORIZATION)\n    ) {\n        throw new Error(\n            'Missing env variables REACT_APP_DHIS2_BASE_URL and REACT_APP_DHIS2_AUTHORIZATION'\n        );\n    }\n\n    // api config\n    const baseUrl = isProd\n        ? manifest.activities.dhis.href\n        : process.env.REACT_APP_DHIS2_BASE_URL;\n    const authorization = process.env.REACT_APP_DHIS2_AUTHORIZATION;\n\n    config.baseUrl = `${baseUrl}/api/${manifest.dhis2.apiVersion}`;\n    config.headers = isProd ? null : { Authorization: authorization };\n    config.schemas = [\n        'chart',\n        'map',\n        'report',\n        'reportTable',\n        'eventChart',\n        'eventReport',\n        'dashboard',\n        'organisationUnit',\n        'userGroup',\n    ];\n\n    getUserSettings()\n        .then(configI18n)\n        .then(() => d2Init(config))\n        .then(initializedD2 => {\n            ReactDOM.render(\n                <RuntimeProvider\n                    config={{\n                        baseUrl: baseUrl,\n                        apiVersion: manifest.dhis2.apiVersion,\n                    }}\n                >\n                    <CssReset />\n                    <Provider store={configureStore()}>\n                        <MuiThemeProvider theme={muiTheme()}>\n                            <App baseUrl={baseUrl} d2={initializedD2} />\n                        </MuiThemeProvider>\n                    </Provider>\n                </RuntimeProvider>,\n                document.getElementById('root')\n            );\n        });\n};\n\ninit();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuItem\":\"ContentMenuItem_menuItem__2DIcB\",\"launchLink\":\"ContentMenuItem_launchLink__MRANR\",\"label\":\"ContentMenuItem_label__2pIfq\",\"buttonInsert\":\"ContentMenuItem_buttonInsert__1GlZy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemWrap\":\"ItemHeader_itemWrap__3gJiQ\",\"itemHeaderWrap\":\"ItemHeader_itemHeaderWrap__xEKwZ\",\"itemTitle\":\"ItemHeader_itemTitle__3LmXp\",\"itemActionsWrap\":\"ItemHeader_itemActionsWrap__1U5Ex\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ControlBar_root__3LaTt\",\"content\":\"ControlBar_content__1r98-\",\"draghandle\":\"ControlBar_draghandle__1VWa0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FatalErrorBoundary_container__x6zhd\",\"icon\":\"FatalErrorBoundary_icon__2XjC2\",\"message\":\"FatalErrorBoundary_message__2p9y8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ClearButton_button__2yjcV\",\"icon\":\"ClearButton_icon__1fqj8\"};","import isObject from 'lodash/isObject';\nimport { VIS_TYPE_COLUMN, VIS_TYPE_PIVOT_TABLE } from '@dhis2/analytics';\nimport { apiFetchFavorite, getMapFields } from '../../../api/metadata';\nimport {\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_REPORT,\n    EVENT_CHART,\n    itemTypeMap,\n} from '../../../modules/itemTypes';\nimport { getBaseUrl, getWithoutId } from '../../../modules/util';\nimport { getGridItemDomId } from '../../ItemGrid/gridUtil';\n\n//external plugins\nconst itemTypeToExternalPlugin = {\n    [MAP]: 'mapPlugin',\n    [EVENT_REPORT]: 'eventReportPlugin',\n    [EVENT_CHART]: 'eventChartPlugin',\n};\nconst hasIntegratedPlugin = type => [CHART, REPORT_TABLE].includes(type);\n\nconst getPlugin = type => {\n    if (hasIntegratedPlugin(type)) {\n        return true;\n    }\n    const pluginName = itemTypeToExternalPlugin[type];\n\n    return global[pluginName];\n};\n\nexport const THEMATIC_LAYER = 'thematic';\n\nexport const pluginIsAvailable = (item = {}, visualization = {}) => {\n    const type = visualization.activeType || item.type;\n\n    return !!getPlugin(type);\n};\n\nexport const extractFavorite = item => {\n    if (!isObject(item)) {\n        return null;\n    }\n\n    const propName = itemTypeMap[item.type].propName;\n\n    return (\n        item[propName] ||\n        (item.reportTable ||\n            item.chart ||\n            item.map ||\n            item.eventReport ||\n            item.eventChart ||\n            {})\n    );\n};\n\nexport const extractMapView = map =>\n    map.mapViews && map.mapViews.find(mv => mv.layer.includes(THEMATIC_LAYER));\n\nexport const loadPlugin = (plugin, config, credentials) => {\n    if (!(plugin && plugin.load)) {\n        return;\n    }\n\n    plugin.url = credentials.baseUrl;\n    plugin.loadingIndicator = true;\n    plugin.dashboard = true;\n    if (credentials.auth) {\n        plugin.auth = credentials.auth;\n    }\n    plugin.load(config);\n};\n\nexport const getId = item => extractFavorite(item).id;\nexport const getName = item => extractFavorite(item).name;\nexport const getDescription = item => extractFavorite(item).description;\nexport const getLink = (item, d2) => {\n    const baseUrl = getBaseUrl(d2);\n    const appUrl = itemTypeMap[item.type].appUrl(getId(item));\n\n    return `${baseUrl}/${appUrl}`;\n};\n\nexport const load = async (\n    item,\n    visualization,\n    { credentials, activeType }\n) => {\n    const config = {\n        ...visualization,\n        el: getGridItemDomId(item.id),\n    };\n\n    const type = activeType || item.type;\n    const plugin = getPlugin(type);\n\n    loadPlugin(plugin, config, credentials);\n};\n\nexport const fetch = async item => {\n    const fetchedFavorite = await apiFetchFavorite(getId(item), item.type, {\n        fields: item.type === MAP ? getMapFields() : null,\n    });\n\n    return fetchedFavorite;\n};\n\nexport const resize = item => {\n    const plugin = getPlugin(item.type);\n\n    if (plugin && plugin.resize) {\n        plugin.resize(getGridItemDomId(item.id));\n    }\n};\n\nexport const unmount = (item, activeType) => {\n    const plugin = getPlugin(activeType);\n\n    if (plugin && plugin.unmount) {\n        plugin.unmount(getGridItemDomId(item.id));\n    }\n};\n\nexport const getVisualizationConfig = (\n    visualization,\n    originalType,\n    activeType\n) => {\n    if (originalType === MAP && originalType !== activeType) {\n        const extractedMapView = extractMapView(visualization);\n\n        if (extractedMapView === undefined) {\n            return null;\n        }\n\n        return getWithoutId({\n            ...visualization,\n            ...extractedMapView,\n            mapViews: undefined,\n            type: activeType === CHART ? VIS_TYPE_COLUMN : VIS_TYPE_PIVOT_TABLE,\n        });\n    } else if (originalType === REPORT_TABLE && activeType === CHART) {\n        return getWithoutId({ ...visualization, type: VIS_TYPE_COLUMN });\n    } else if (originalType === CHART && activeType === REPORT_TABLE) {\n        return getWithoutId({\n            ...visualization,\n            type: VIS_TYPE_PIVOT_TABLE,\n        });\n    }\n\n    return getWithoutId(visualization);\n};\n","import isFunction from 'd2-utilizr/lib/isFunction';\n\nimport { orObject } from '../../modules/util';\n\n// Dimensions for the react-grid-layout\n\nexport const GRID_COMPACT_TYPE = 'vertical'; // vertical | horizonal | null\nexport const GRID_ROW_HEIGHT = 10;\nconst GRID_COLUMN_WIDTH_PX = 20;\nconst GRID_LAYOUT = 'FLEXIBLE'; // FIXED | FLEXIBLE\nexport const MARGIN = [10, 10];\n\nexport const NEW_ITEM_SHAPE = { x: 0, y: 0, w: 20, h: 29 };\nexport const ITEM_MIN_HEIGHT = 4;\n\n// Dimensions for getShape\n\nconst NUMBER_OF_ITEM_COLS = 2;\nconst GRID_COLUMNS = 60;\n\nexport const getGridColumns = () => {\n    switch (GRID_LAYOUT) {\n        case 'FLEXIBLE':\n            return GRID_COLUMNS;\n        case 'FIXED':\n            return Math.floor((window.innerWidth - 20) / GRID_COLUMN_WIDTH_PX);\n        default:\n            return GRID_COLUMNS;\n    }\n};\n\n// isNonNegativeInteger\n\nconst isNonNegativeInteger = x => Number.isInteger(x) && x >= 0;\n\n// Does the item have all the shape properties?\n\nexport const hasShape = item =>\n    isNonNegativeInteger(item.x) &&\n    isNonNegativeInteger(item.y) &&\n    isNonNegativeInteger(item.w) &&\n    isNonNegativeInteger(item.h);\n\n// returns a rectangular grid block dimensioned with x, y, w, h in grid units.\n// based on a grid with 3 items across\nexport const getShape = i => {\n    if (!isNonNegativeInteger(i)) {\n        throw new Error('Invalid grid block number');\n    }\n\n    const col = i % NUMBER_OF_ITEM_COLS;\n    const row = Math.floor(i / NUMBER_OF_ITEM_COLS);\n    const itemWidth = Math.floor((GRID_COLUMNS - 1) / NUMBER_OF_ITEM_COLS);\n    const itemHeight = GRID_ROW_HEIGHT * 2;\n\n    return {\n        x: col * itemWidth,\n        y: row * itemHeight,\n        w: itemWidth,\n        h: itemHeight,\n    };\n};\n\n/**\n * Calculates the grid item's original height in pixels based\n * on the height in grid units. This calculation\n * is copied directly from react-grid-layout GridItem.js (calcPosition)\n *\n * @param {Object} item item containing shape (x, y, w, h)\n */\nconst getOriginalHeight = item => {\n    const originalHeight = Math.round(\n        GRID_ROW_HEIGHT * item.h + Math.max(0, item.h - 1) * MARGIN[1]\n    );\n\n    return { originalHeight };\n};\n\n/**\n * Returns an array of items containing the x, y, w, h dimensions\n * and the item's originalheight in pixels\n * @function\n * @param {Array} items\n * @returns {Array}\n */\n\nexport const withShape = items =>\n    items.map((item, index) => {\n        const itemWithShape = hasShape(item)\n            ? item\n            : Object.assign({}, item, getShape(index));\n\n        return Object.assign(\n            {},\n            itemWithShape,\n            getOriginalHeight(itemWithShape)\n        );\n    });\n\nexport const getGridItemDomId = id => `item-${id}`;\n\nexport function onItemResize(id) {\n    const el = orObject(document.querySelector(`#${getGridItemDomId(id)}`));\n    if (isFunction(el.setViewportSize))\n        setTimeout(\n            () => el.setViewportSize(el.clientWidth - 5, el.clientHeight - 5),\n            10\n        );\n}\n","import i18n from '@dhis2/d2-i18n';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\nimport ExtensionIcon from '@material-ui/icons/Extension';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport PersonIcon from '@material-ui/icons/Person';\nimport FontDownloadIcon from '@material-ui/icons/FontDownload';\nimport EmailIcon from '@material-ui/icons/Email';\nimport CropFreeIcon from '@material-ui/icons/CropFree';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nimport { getBaseUrl } from './util';\n\n// Item types\nexport const VISUALIZATION = 'VISUALIZATION';\nexport const REPORT_TABLE = 'REPORT_TABLE';\nexport const CHART = 'CHART';\nexport const MAP = 'MAP';\nexport const EVENT_REPORT = 'EVENT_REPORT';\nexport const EVENT_CHART = 'EVENT_CHART';\nexport const APP = 'APP';\nexport const REPORTS = 'REPORTS';\nexport const RESOURCES = 'RESOURCES';\nexport const USERS = 'USERS';\nexport const MESSAGES = 'MESSAGES';\nexport const TEXT = 'TEXT';\nexport const SPACER = 'SPACER';\n\nconst DOMAIN_TYPE_AGGREGATE = 'AGGREGATE';\nconst DOMAIN_TYPE_TRACKER = 'TRACKER';\n\n// Dashboard helpers\nexport const spacerContent = 'SPACER_ITEM_FOR_DASHBOARD_LAYOUT_CONVENIENCE';\nexport const emptyTextItemContent = 'TEXT_ITEM_WITH_NO_CONTENT';\nexport const isSpacerType = item =>\n    item.type === TEXT && item.text === spacerContent;\nexport const isTextType = item =>\n    item.type === TEXT && item.text !== spacerContent;\nexport const isVisualizationType = item =>\n    !!itemTypeMap[item.type].isVisualizationType;\nexport const hasMapView = itemType =>\n    itemTypeMap[itemType].domainType === DOMAIN_TYPE_AGGREGATE;\nexport const isTrackerDomainType = itemType =>\n    itemTypeMap[itemType].domainType === DOMAIN_TYPE_TRACKER;\nexport const getDefaultItemCount = itemType =>\n    itemTypeMap[itemType].defaultItemCount || 5;\nexport const getAppName = itemType => itemTypeMap[itemType].appName || '';\n\n// Item type map\nexport const itemTypeMap = {\n    [VISUALIZATION]: {\n        id: VISUALIZATION,\n        endPointName: 'visualizations',\n        propName: 'visualization',\n        pluralTitle: i18n.t('Visualizations'),\n        appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n        appName: 'Data Visualizer',\n        defaultItemCount: 10,\n    },\n    [REPORT_TABLE]: {\n        id: REPORT_TABLE,\n        endPointName: 'visualizations',\n        propName: 'visualization',\n        pluralTitle: i18n.t('Pivot tables'),\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n        appName: 'Data Visualizer',\n    },\n    [CHART]: {\n        id: CHART,\n        endPointName: 'visualizations',\n        propName: 'visualization',\n        pluralTitle: i18n.t('Charts'),\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n        appName: 'Data Visualizer',\n    },\n    [MAP]: {\n        id: MAP,\n        endPointName: 'maps',\n        propName: 'map',\n        pluralTitle: i18n.t('Maps'),\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-maps/?id=${id}`,\n        appName: 'Maps',\n    },\n    [EVENT_REPORT]: {\n        id: EVENT_REPORT,\n        endPointName: 'eventReports',\n        propName: 'eventReport',\n        pluralTitle: i18n.t('Event reports'),\n        domainType: DOMAIN_TYPE_TRACKER,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-event-reports/?id=${id}`,\n        appName: 'Event Reports',\n    },\n    [EVENT_CHART]: {\n        id: EVENT_CHART,\n        endPointName: 'eventCharts',\n        propName: 'eventChart',\n        pluralTitle: i18n.t('Event charts'),\n        domainType: DOMAIN_TYPE_TRACKER,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-event-visualizer/?id=${id}`,\n        appName: 'Event Visualizer',\n    },\n    [APP]: {\n        endPointName: 'apps',\n        propName: 'appKey',\n        pluralTitle: i18n.t('Apps'),\n    },\n    [REPORTS]: {\n        id: REPORTS,\n        endPointName: 'reports',\n        propName: 'reports',\n        pluralTitle: i18n.t('Reports'),\n        appUrl: id =>\n            `dhis-web-reporting/getReportParams.action?mode=report&uid=${id}`,\n    },\n    [RESOURCES]: {\n        id: RESOURCES,\n        endPointName: 'resources',\n        propName: 'resources',\n        pluralTitle: i18n.t('Resources'),\n        appUrl: id => `api/documents/${id}/data`,\n    },\n    [USERS]: {\n        id: USERS,\n        endPointName: 'users',\n        propName: 'users',\n        pluralTitle: i18n.t('Users'),\n        appUrl: id => `dhis-web-dashboard-integration/profile.action?id=${id}`,\n    },\n    [TEXT]: {\n        id: TEXT,\n        propName: 'text',\n    },\n    [MESSAGES]: {\n        propName: 'messages',\n    },\n    [SPACER]: {\n        propName: 'text',\n    },\n};\n\nexport const getEndPointName = type => itemTypeMap[type].endPointName;\n\nexport const getItemUrl = (type, item, d2) => {\n    let url;\n\n    if (type === APP) {\n        url = item.launchUrl;\n    }\n\n    if (itemTypeMap[type] && itemTypeMap[type].appUrl) {\n        url = `${getBaseUrl(d2)}/${itemTypeMap[type].appUrl(item.id)}`;\n    }\n\n    return url;\n};\n\nexport const getItemIcon = type => {\n    switch (type) {\n        case REPORT_TABLE:\n        case EVENT_REPORT:\n        case REPORTS:\n            return TableIcon;\n        case CHART:\n        case EVENT_CHART:\n            return ChartIcon;\n        case MAP:\n            return MapIcon;\n        case APP:\n            return ExtensionIcon;\n        case RESOURCES:\n            return DescriptionIcon;\n        case USERS:\n            return PersonIcon;\n        case TEXT:\n            return FontDownloadIcon;\n        case MESSAGES:\n            return EmailIcon;\n        case SPACER:\n            return CropFreeIcon;\n        default:\n            return NotInterestedIcon;\n    }\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"showMoreButton\":\"CategorizedMenuGroup_showMoreButton__3-0Wa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"deleteItemButton\":\"DeleteItemButton_deleteItemButton__4YLrM\"};"],"sourceRoot":""}
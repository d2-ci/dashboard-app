{"version":3,"sources":["D2App/components/ControlBar/styles/ControlBar.module.css","D2App/components/ControlBar/styles/DashboardItemChip.module.css","D2App/components/ControlBar/styles/ClearButton.module.css","D2App/components/ControlBar/styles/Filter.module.css","D2App/components/ControlBar/styles/ShowMoreButton.module.css","D2App/components/ControlBar/styles/DashboardsBar.module.css","D2App/modules/itemTypes.js","D2App/modules/util.js","D2App/components/ItemFilter/styles/FilterSelector.module.css","D2App/components/TitleBar/styles/ViewTitleBar.module.css","D2App/components/Item/VisualizationItem/Visualization/styles/NoVisualizationMessage.module.css","D2App/components/Item/VisualizationItem/Visualization/styles/LoadingMask.module.css","D2App/components/Item/VisualizationItem/styles/FatalErrorBoundary.module.css","D2App/components/Item/ItemHeader/styles/DeleteItemButton.module.css","D2App/components/Item/ItemHeader/styles/PrintItemInfo.module.css","D2App/components/Item/VisualizationItem/styles/ItemFooter.module.css","D2App/components/Item/ListItem/Item.module.css","D2App/components/Item/PrintTitlePageItem/styles/Item.module.css","D2App/components/FilterBar/styles/FilterBar.module.css","D2App/components/ItemSelector/styles/HeaderMenuItem.module.css","D2App/components/ItemSelector/styles/ContentMenuItem.module.css","D2App/components/ItemSelector/styles/CategorizedMenuGroup.module.css","D2App/components/ItemSelector/styles/ItemSelector.module.css","D2App/components/TitleBar/styles/EditTitleBar.module.css","D2App/components/ControlBar/styles/ConfirmDeleteDialog.module.css","D2App/components/ControlBar/styles/EditBar.module.css","D2App/components/Dashboard/styles/NotSupportedNotice.module.css","D2App/components/Dashboard/styles/PrintInfo.module.css","D2App/components/Dashboard/styles/PrintActionsBar.module.css","D2App/components/Dashboard/styles/PrintLayoutDashboard.module.css","D2App/components/Dashboard/styles/PrintDashboard.module.css","D2App/components/WindowDimensionsProvider.js","D2App/api/settings.js","D2App/components/SystemSettingsProvider.js","D2App/components/ControlBar/ControlBar.js","D2App/icons/Star.js","D2App/api/dataStatistics.js","D2App/components/ControlBar/DashboardItemChip.js","D2App/icons/AddCircle.js","D2App/icons/Search.js","D2App/icons/Clear.js","D2App/components/ControlBar/ClearButton.js","D2App/reducers/dashboardsFilter.js","D2App/modules/gridUtil.js","D2App/modules/smallScreen.js","D2App/components/ControlBar/Filter.js","D2App/actions/dashboardsFilter.js","D2App/components/ControlBar/assets/icons.js","D2App/components/ControlBar/ShowMoreButton.js","D2App/components/ControlBar/controlBarDimensions.js","D2App/reducers/controlBar.js","D2App/modules/uiBackendItemConverter.js","D2App/reducers/dashboards.js","D2App/reducers/selected.js","D2App/api/userDataStore.js","D2App/api/controlBar.js","D2App/actions/controlBar.js","D2App/components/ControlBar/DashboardsBar.js","D2App/widgets/NoContentMessage.js","D2App/components/Item/VisualizationItem/assets/icons.js","D2App/api/description.js","D2App/reducers/user.js","D2App/reducers/dimensions.js","D2App/reducers/itemFilters.js","D2App/actions/itemFilters.js","D2App/reducers/messages.js","D2App/api/messages.js","D2App/components/Item/MessagesItem/actions.js","D2App/reducers/alert.js","D2App/actions/alert.js","D2App/reducers/visualizations.js","D2App/actions/visualizations.js","D2App/api/metadata.js","D2App/api/index.js","D2App/api/dashboards.js","D2App/actions/selected.js","D2App/api/localStorage.js","D2App/actions/dashboards.js","D2App/components/ItemFilter/FilterDialog.js","D2App/reducers/activeModalDimension.js","D2App/actions/activeModalDimension.js","D2App/components/ItemFilter/FilterSelector.js","D2App/components/TitleBar/ViewTitleBar.js","D2App/api/starDashboard.js","D2App/components/Item/VisualizationItem/Visualization/DefaultPlugin.js","D2App/components/Item/VisualizationItem/Visualization/NoVisualizationMessage.js","D2App/components/Item/VisualizationItem/Visualization/MapPlugin.js","D2App/components/Item/VisualizationItem/Visualization/LoadingMask.js","D2App/components/Item/VisualizationItem/Visualization/getFilteredVisualization.js","D2App/components/Item/VisualizationItem/Visualization/getVisualizationConfig.js","D2App/modules/memoizeOne.js","D2App/components/Item/VisualizationItem/Visualization/Visualization.js","D2App/components/Item/VisualizationItem/FatalErrorBoundary.js","D2App/components/Item/ItemHeader/ViewItemActions.js","D2App/components/Item/ItemHeader/DeleteItemButton.js","D2App/reducers/editDashboard.js","D2App/api/editDashboard.js","D2App/actions/editDashboard.js","D2App/components/Item/ItemHeader/EditItemActions.js","D2App/icons/Info.js","D2App/components/Item/ItemHeader/PrintItemInfo.js","D2App/components/Dashboard/dashboardModes.js","D2App/components/Item/ItemHeader/ItemHeader.js","D2App/components/Item/VisualizationItem/ItemHeaderButtons.js","D2App/components/Item/VisualizationItem/ItemFooter.js","D2App/components/Item/VisualizationItem/Item.js","D2App/widgets/Line.js","D2App/components/Item/MessagesItem/Item.js","D2App/components/Item/NotSupportedItem/Item.js","D2App/icons/Description.js","D2App/icons/Delete.js","D2App/components/Item/ListItem/Item.js","D2App/components/Item/ListItem/actions.js","D2App/reducers/printDashboard.js","D2App/components/Item/TextItem/Item.js","D2App/components/Item/AppItem/Item.js","D2App/components/Item/SpacerItem/Item.js","D2App/components/Item/PageBreakItem/Item.js","D2App/components/Item/PrintTitlePageItem/Item.js","D2App/components/Item/Item.js","D2App/components/Item/ProgressiveLoadingContainer.js","D2App/components/ItemGrid/ViewItemGrid.js","D2App/components/FilterBar/FilterBadge.js","D2App/components/FilterBar/FilterBar.js","D2App/actions/printDashboard.js","D2App/components/Dashboard/ViewDashboard.js","D2App/components/ItemSelector/ItemSearchField.js","D2App/components/ItemSelector/HeaderMenuItem.js","D2App/icons/Launch.js","D2App/components/ItemSelector/ContentMenuItem.js","D2App/components/ItemSelector/actions.js","D2App/components/ItemSelector/selectableItems.js","D2App/components/ItemSelector/CategorizedMenuGroup.js","D2App/components/ItemSelector/SinglesMenuGroup.js","D2App/components/ItemSelector/ItemSelector.js","D2App/components/TitleBar/EditTitleBar.js","D2App/components/ItemGrid/EditItemGrid.js","D2App/components/ControlBar/ConfirmDeleteDialog.js","D2App/components/ControlBar/EditBar.js","D2App/components/Dashboard/NotSupportedNotice.js","D2App/components/Dashboard/PrintInfo.js","D2App/icons/LessHorizontal.js","D2App/components/Dashboard/PrintActionsBar.js","D2App/modules/printUtils.js","D2App/components/ItemGrid/StaticGrid.js","D2App/components/ItemGrid/PrintLayoutItemGrid.js","D2App/components/Dashboard/PrintLayoutDashboard.js","D2App/components/Dashboard/EditDashboard.js","D2App/components/Dashboard/NewDashboard.js","D2App/components/ItemGrid/PrintItemGrid.js","D2App/components/Dashboard/PrintDashboard.js","D2App/components/Dashboard/Dashboard.js","D2App/components/AlertBar/AlertBar.js","D2App/modules/getFilteredDimensions.js","D2App/components/App.js","D2App/actions/user.js","D2App/actions/dimensions.js","D2App/reducers/style.js","D2App/reducers/index.js","D2App/configureStore.js","D2App/locales/index.js","D2App/AppWrapper.js","D2App/modules/item.js","D2App/components/Item/VisualizationItem/Visualization/plugin.js","D2App/modules/getGridItemDomId.js","D2App/components/Item/ItemHeader/styles/ItemHeader.module.css"],"names":["module","exports","VISUALIZATION","REPORT_TABLE","CHART","MAP","EVENT_REPORT","EVENT_CHART","APP","REPORTS","RESOURCES","USERS","MESSAGES","TEXT","SPACER","PAGEBREAK","PRINT_TITLE_PAGE","DOMAIN_TYPE_AGGREGATE","DOMAIN_TYPE_TRACKER","isVisualizationType","item","itemTypeMap","type","hasMapView","itemType","domainType","isTrackerDomainType","getDefaultItemCount","defaultItemCount","getAppName","appName","id","endPointName","propName","pluralTitle","i18n","t","appUrl","dataStatisticsName","Date","getTime","getEndPointName","getDataStatisticsName","getItemUrl","baseUrl","url","launchUrl","getItemIcon","TableIcon","ChartIcon","MapIcon","ExtensionIcon","DescriptionIcon","PersonIcon","FontDownloadIcon","EmailIcon","CropFreeIcon","NotInterestedIcon","orArray","param","Array","isArray","orObject","isObject","arrayToIdMap","array","reduce","obj","formatDate","value","uiLocale","global","Intl","DateTimeFormat","locale","year","month","day","format","substr","replace","validateReducer","defaultValue","undefined","WindowDimensionsCtx","createContext","windowDims","height","window","innerHeight","width","innerWidth","WindowDimensionsProvider","children","dimensions","setDimensions","useState","useEffect","handleResize","debounce","addEventListener","removeEventListener","Provider","useWindowDimensions","useContext","DEFAULT_SETTINGS","displayNameProperty","keyDashboardContextMenuItemOpenInRelevantApp","keyDashboardContextMenuItemShowInterpretationsAndDetails","keyDashboardContextMenuItemSwitchViewType","keyDashboardContextMenuItemViewFullscreen","keyGatherAnalyticalObjectStatisticsInDashboardViews","SYSTEM_SETTINGS_REMAPPINGS","renameSystemSettings","settings","Object","keys","mapped","key","query","resource","params","SystemSettingsCtx","SystemSettingsProvider","setSettings","engine","useDataEngine","async","systemSettings","settingsQuery","assign","fetchData","useSystemSettings","ControlBar","React","Component","constructor","props","super","onStartDrag","this","setState","dragging","onDrag","onEndDrag","event","preventDefault","stopPropagation","newHeight","clientY","onChangeHeight","requestAnimationFrame","renderDragHandle","className","classes","draghandle","onMouseDown","data-testid","state","render","Math","max","rootClass","cx","root","isMaxHeight","expanded","style","content","defaultProps","StarIcon","xmlns","viewBox","d","fill","apiPostDataStatistics","eventType","d2","getInstance","Api","getApi","post","DashboardItemChip","starred","selected","label","dashboardId","onClick","chipProps","selectedState","unselected","icon","Star","debouncedPostStatistics","link","to","data-test","AddCircleIcon","colors","teal600","SearchIcon","small","ClearIcon","grey800","ClearButton","onClear","button","Clear","color","SET_DASHBOARDS_FILTER","CLEAR_DASHBOARDS_FILTER","sGetDashboardsFilter","dashboardsFilter","GRID_COMPACT_TYPE","GRID_ROW_HEIGHT_PX","MARGIN_PX","MARGIN_SM_PX","GRID_PADDING_PX","NEW_ITEM_SHAPE","x","y","w","h","isNonNegativeInteger","Number","isInteger","hasShape","withShape","items","map","i","col","row","floor","itemWidth","MAX_ITEM_GRID_WIDTH","getShape","originalH","getGridWidth","windowWidthPx","getGridUnitsForSmFromPx","hPx","gridUnitHeightPx","round","getProportionalHeight","wPx","getItemWHPx","ratioWH","newWPx","newHPx","getGridItemProperties","itemId","minH","getPageBreakItemShape","yPos","isStatic","GRID_COLUMNS","static","getPrintTitlePageItemShape","isOneItemPerPage","gridUnits","colOrRowSize","marginPx","isSmallScreen","mapDispatchToProps","setDashboardsFilter","clearDashboardsFilter","connect","filterText","onKeypressEnter","onToggleMaxHeight","focusedClassName","setFocusedClassName","inputFocused","setInputFocus","searchButton","Search","searchIcon","container","onFocus","focused","onBlur","searchIconContainer","input","placeholder","onChange","target","onKeyUp","keyCode","ref","focus","clearButtonContainer","ChevronDown","ChevronUp","ShowMoreButton","disabled","containerRef","useRef","buttonLabel","onButtonClicked","buttonEl","current","MouseEvent","bubbles","cancelable","dispatchEvent","placement","onMouseOver","onMouseOut","showMore","aria-label","getRowsHeight","rows","getControlBarHeight","FIRST_ROW_PADDING_HEIGHT","CONTROL_BAR_COLLAPSED","SET_CONTROLBAR_USER_ROWS","combineReducers","userRows","action","sGetControlBarUserRows","controlBar","sGetControlBarRoot","spacerContent","emptyTextItemContent","isTextType","text","convertUiItemsToBackend","isUiSpacerType","convertBackendItemsToUi","isBackendSpacerType","gridProperties","SET_DASHBOARDS","ADD_DASHBOARDS","SET_DASHBOARD_STARRED","SET_DASHBOARD_DISPLAY_NAME","SET_DASHBOARD_ITEMS","DEFAULT_STATE_DASHBOARDS","byId","EMPTY_DASHBOARD","updateDashboardProp","prop","sGetDashboardsRoot","dashboards","sGetDashboardById","sDashboardsIsFetching","sGetAllDashboards","sGetDashboardItems","sGetStarredDashboards","values","filter","dashboard","sGetUnstarredDashboards","getCustomDashboards","data","arrayFrom","name","displayName","description","displayDescription","favorite","owner","user","created","split","join","lastUpdated","access","numberOfItems","dashboardItems","length","SET_SELECTED_ID","SET_SELECTED_ISLOADING","SET_SELECTED_SHOWDESCRIPTION","SET_SELECTED_ITEM_ACTIVE_TYPE","CLEAR_SELECTED_ITEM_ACTIVE_TYPES","DEFAULT_STATE_SELECTED_SHOWDESCRIPTION","DEFAULT_STATE_SELECTED_ITEM_ACTIVE_TYPES","isLoading","showDescription","itemActiveTypes","activeType","sGetSelectedRoot","sGetSelectedId","sGetSelectedIsLoading","sGetSelectedShowDescription","sGetSelectedItemActiveType","NAMESPACE","hasNamespace","currentUser","dataStore","has","getNamespace","get","create","apiPostUserDataStoreValue","set","apiGetUserDataStoreValue","namespace","find","k","console","log","KEY_CONTROLBAR_ROWS","acSetControlBarUserRows","isDashboardBarMaxHeight","withRouter","selectedId","history","setRows","createRef","scrollToTop","scroll","toggleMaxHeight","newRows","cancelMaxHeight","getFilteredDashboards","filteredDashboards","arraySort","toLowerCase","includes","viewableRows","rowHeightProp","containerClass","collapsed","min","apiPostControlBarRows","controls","newLink","AddCircle","Filter","push","chips","chipContainerClasses","chipContainer","getDashboardChips","marginTop","NoContentMessage","padding","textAlign","fontSize","fontWeight","grey600","ThreeDots","SpeechBubble","margin","fillRule","transform","Warning","Fullscreen","ExitFullscreen","KEY_SHOW_DESCRIPTION","RECEIVED_USER","DEFAULT_STATE_USER","username","isSuperuser","sGetUserUsername","SET_DIMENSIONS","DEFAULT_DIMENSIONS","getDimensionById","DIMENSION_ID_PERIOD","DIMENSION_ID_ORGUNIT","sGetDimensions","CLEAR_ITEM_FILTERS","SET_ITEM_FILTERS","ADD_ITEM_FILTER","REMOVE_ITEM_FILTER","DEFAULT_STATE_ITEM_FILTERS","sGetItemFiltersRoot","itemFilters","sGetNamedItemFilters","createSelector","filters","arr","dimension","acRemoveItemFilter","RECEIVED_MESSAGES","sGetMessagesRoot","messages","messageConversationsQuery","fields","order","pageSize","tGetMessages","dataEngine","messageConversations","error","getMessages","dispatch","err","SET_ALERT_MESSAGE","CLEAR_ALERT_MESSAGE","sGetAlertMessage","alert","acClearAlertMessage","ADD_VISUALIZATION","CLEAR_VISUALIZATIONS","DEFAULT_STATE_VISUALIZATIONS","isEmpty","p","sGetVisualization","visualizations","sGetVisualizationsRoot","acAddVisualization","getIdNameFields","rename","getDimensionFields","withItems","arrayClean","getAxesFields","getFavoriteFields","withDimensions","withOptions","getFavoritesFields","apiFetchVisualization","getVisualizationId","onError","getDashboardItemsFields","withFavorite","getDashboardFields","dashboardsQuery","paging","dashboardQuery","deleteDashboardMutation","apiFetchDashboard","variables","acSetSelectedId","acSetSelectedIsLoading","acSetSelectedShowDescription","tSetSelectedDashboardById","getState","alertTimeout","setTimeout","onSuccess","acAppendDashboards","customDashboard","acSetDashboardItems","localStorage","setItem","forEach","getVisualizationFromItem","clearTimeout","tFetchDashboards","acSetDashboards","apiFetchDashboards","tDeleteDashboard","mutate","apiDeleteDashboard","Promise","resolve","initiallySelectedItems","addItemFilter","removeItemFilter","onClose","setFilters","useD2","onSelectItems","dimensionId","onDeselectItems","itemIdsToRemove","newList","onReorderItems","itemIds","oldList","reorderedList","dataTest","position","large","commonProps","onSelect","onDeselect","onReorder","selectedItems","selectedPeriods","ouItems","renderDialogContent","secondary","primary","filterItems","SET_ACTIVE_MODAL_DIMENSION","CLEAR_ACTIVE_MODAL_DIMENSION","DEFAULT_STATE_ACTIVE_MODAL_DIMENSION","sGetActiveModalDimension","activeModalDimension","acSetActiveModalDimension","clearActiveModalDimension","setActiveModalDimension","showPopover","setShowPopover","onCloseDialog","buttonContainer","onClickOutside","reference","arrow","onDimensionClick","selectedIds","ViewTitleBar","setDashboardStarred","updateShowDescription","moreOptionsIsOpen","setMoreOptionsIsOpen","sharingDialogIsOpen","setSharingDialogIsOpen","redirectUrl","setRedirectUrl","warningAlert","useAlert","msg","warning","toggleSharingDialog","toggleMoreOptions","StarBorder","showHideDescriptionLabel","toggleStarredDashboardLabel","onToggleStarredDashboard","isStarred","mutation","getStarDashboardMutation","getUnstarDashboardMutation","apiStarDashboard","then","catch","show","buttonRef","userAccess","descriptionClasses","descContainer","desc","noDesc","getMoreButton","useSmall","moreText","titleBar","title","actions","star","strip","update","editLink","manage","shareButton","moreButton","moreButtonSmall","dense","apiPostShowDescription","open","onRequestClose","DefaultPlugin","visualization","options","useConfig","credentials","auth","defaultHeaders","Authorization","prevItem","prevActiveType","load","unmount","shouldPluginReload","reloadAllowed","visChanged","getGridItemDomId","NoVisualizationMessage","message","MapPlugin","applyFilters","mapViews","mapView","layer","pluginIsAvailable","hideTitle","LoadingMask","center","getFilteredVisualization","visRows","visColumns","columns","visFilters","dimensionFound","dimensionObjects","getWithoutId","object","getVisualizationConfig","originalType","extractedMapView","mv","VIS_TYPE_COLUMN","VIS_TYPE_PIVOT_TABLE","layout","getAdaptedUiLayoutByType","memoizeOne","fn","lastArgs","lastValue","args","every","arg","Visualization","pluginLoaded","onLoadingComplete","memoizedGetFilteredVisualization","memoizedGetVisualizationConfig","availableHeight","availableWidth","pluginProps","d2Config","forDashboard","ownProps","FatalErrorBoundary","errorFound","componentDidCatch","info","ViewItemActions","actionButtons","itemActionsWrap","DeleteItemButton","deleteItemButton","red500","RECEIVED_EDIT_DASHBOARD","RECEIVED_NOT_EDITING","START_NEW_DASHBOARD","RECEIVED_TITLE","RECEIVED_DESCRIPTION","ADD_DASHBOARD_ITEM","REMOVE_DASHBOARD_ITEM","UPDATE_DASHBOARD_ITEM","RECEIVED_DASHBOARD_LAYOUT","SET_PRINT_PREVIEW_VIEW","CLEAR_PRINT_PREVIEW_VIEW","DEFAULT_STATE_EDIT_DASHBOARD","NEW_DASHBOARD_STATE","printPreviewView","sGetEditDashboardRoot","editDashboard","sGetIsEditing","sGetIsPrintPreviewView","sGetEditDashboardItems","createDashboardMutation","updateDashboardMutation","generatePayload","acClearEditDashboard","acAddDashboardItem","itemPropName","generateUid","gridItemProperties","shape","acUpdateDashboardItem","acRemoveDashboardItem","tSaveDashboard","dashboardToSave","response","uid","updateDashboard","postDashboard","WarningIcon","PrintWarning","Info","EDIT","NEW","VIEW","PRINT","PRINT_LAYOUT","isEditMode","mode","isPrintMode","isViewMode","ItemHeader","forwardRef","dashboardMode","isShortened","rest","Actions","EditItemActions","PrintItemInfo","getItemActionsMap","itemHeaderWrap","itemTitle","iconFill","ItemHeaderButtons","menuIsOpen","setMenuIsOpen","isOpen","onSelectActiveType","openInRelevantApp","showInterpretationsAndDetails","switchViewType","fullscreenAllowedInSettings","isTrackerType","onViewTable","closeMenu","onViewChart","onViewMap","canViewAs","isSingleValue","isYearOverYear","VIS_TYPE_GAUGE","VIS_TYPE_PIE","interpretationMenuLabel","activeFooter","ViewAsMenuItems","fullscreenAllowed","fullscreenSupported","isFullscreen","onToggleFullscreen","href","getLink","onToggleFooter","ItemFooter","line","scrollContainer","Item","showFooter","configLoaded","isFullscreenSupported","el","document","querySelector","itemDomElSelector","requestFullscreen","webkitRequestFullscreen","handleFullscreenChange","fullscreenElement","webkitFullscreenElement","pluginResize","exitFullscreen","webkitExitFullscreen","getUniqueKey","uniqueId","onToggleItemExpanded","setActiveType","getActiveType","isEditing","getAvailableHeight","calculatedHeight","smallOriginalH","getItemHeightPx","headerRef","clientHeight","memoizedGetContentHeight","contentRef","offsetHeight","getAvailableWidth","rect","getBoundingClientRect","ITEM_CONTENT_PADDING","measuredHeight","preferMeasured","updateVisualization","e","onfullscreenchange","onwebkitfullscreenchange","componentWillUnmount","componentDidUpdate","prevProps","gridWidth","setViewportSize","clientWidth","getVisualizationName","shortened","Consumer","Function","prototype","backgroundColor","grey200","border","Line","PRIVATE","messageTypes","VALIDATION_RESULT","TICKET","SYSTEM","list","listStyleType","paddingLeft","seeAll","marginBottom","sender","lineHeight","snippet","maxHeight","overflow","MessagesContainer","setUiLocale","userSettings","getUiLocale","getMessageHref","msgIdentifier","messageType","modeClass","latestMsg","slice","getMessageSender","readClass","read","msgDate","location","messageCount","getMessageItems","NotSupportedItem","display","justifyContent","alignItems","align","grey500","DeleteIcon","getItemTitle","tRemoveListItemContent","dashboardItem","listItemType","newContent","contentItems","index","findIndex","getContentItems","contentItem","deleteButton","deletebutton","deleteicon","grey900","Description","itemicon","SET_PRINT_DASHBOARD","CLEAR_PRINT_DASHBOARD","ADD_PRINT_DASHBOARD_ITEM","SET_PRINT_DASHBOARD_LAYOUT","REMOVE_PRINT_DASHBOARD_ITEM","UPDATE_PRINT_DASHBOARD_ITEM","DEFAULT_STATE_PRINT_DASHBOARD","DEFAULT_DASHBOARD_ITEMS","NEW_PRINT_DASHBOARD_STATE","sGetPrintDashboardRoot","printDashboard","sGetIsPrinting","sGetPrintDashboardItems","textDiv","whiteSpace","textField","fontStretch","onChangeText","updatedItem","viewItem","textDivStyle","editItem","onEdit","multiline","fullWidth","printItem","textItem","getIframeSrc","appDetails","iframeSrc","ouIds","ouFilter","path","appKey","system","installedApps","app","dashboardWidget","src","SpacerItem","PageBreakItem","PrintTitlePageItem","titlePage","filterTitle","listItems","filterListItem","val","filterList","getItemFilterList","viewDashboard","sGetPrintDashboardName","sGetPrintDashboardDescription","GridItem","VisualizationItem","MessagesItem","ListItem","TextItem","AppItem","getGridItem","ProgressiveLoadingContainer","shouldLoad","shouldLoadHandler","handlerOptions","passive","checkShouldLoad","bufferPx","bufferFactor","bottom","top","removeHandler","registerHandler","debounceMs","getElementsByClassName","componentDidMount","eventProps","pick","selectedDashboard","expandedItems","setExpandedItems","displayItems","setDisplayItems","layoutSm","setLayoutSm","setGridWidth","isMobileLandscape","getItemsWithAdjustedHeight","sortBy","clickedId","isExpanded","newExpandedItems","expandedItem","expandedHeight","translucent","rowHeight","cols","lg","md","sm","breakpoints","SMALL_SCREEN_BREAKPOINT","layouts","compactType","containerPadding","isDraggable","isResizable","draggableCancel","onWidthChange","containerWidth","getItemComponent","styles","badgeContainer","borderRadius","white","badge","cursor","badgeRemove","textDecoration","marginLeft","FilterBadge","onRemove","count","FilterBar","onBadgeRemove","onBadgeClick","bar","removeItemFIlter","acSetPrintDashboard","acClearPrintDashboard","acAddPrintDashboardItem","acUpdatePrintDashboardItem","dashboardIsEditing","dashboardIsPrinting","controlBarRows","clearEditDashboard","clearPrintDashboard","dashboardHeight","controlBarHeight","SEARCH_BAR_HEIGHT_SMALL","getControlBarHeightSmallDevice","ViewItemGrid","ItemSearchField","HeaderMenuItem","LaunchIcon","LaunchLink","launchLink","rel","InsertButton","buttonInsert","ContentMenuItem","onInsert","visType","ItemIcon","renderedItemIcon","visTypeIcons","menuItem","marginRight","singleItems","header","categorizedItems","listItemTypes","tAddListItemContent","dashboardItemIndex","hasMore","onChangeItemsLimit","seeMore","setSeeMore","addItem","newItem","itemUrl","showMoreButton","category","addToDashboard","ItemSelector","setIsOpen","setFilter","setItems","maxOptions","setMaxOptions","Set","queryString","filterStr","updateMaxOptions","delete","add","inputRef","maxWidth","menu","itemCount","allItems","concat","EditTitleBar","onChangeTitle","onChangeDescription","section","titleDescription","_","itemSelector","acUpdateDashboardLayout","onLayoutChange","newLayout","onResizeStop","oldItem","ConfirmDeleteDialog","dashboardName","onDeleteConfirmed","onContinueEditing","destructive","saveFailedMessage","deleteAccess","updateAccess","sGetIsNewDashboard","isPrintPreviewView","clearPrintPreview","saveDashboard","onDelete","onDiscardChanges","onTranslate","acSetDashboardDisplayName","showPrintPreview","translationDlgIsOpen","setTranslationDlgIsOpen","setDashboard","confirmDeleteDlgIsOpen","setConfirmDeleteDlgIsOpen","failureAlert","critical","dboard","onConfirmDelete","onSave","newId","onPrintPreview","onTranslationsSaved","translations","dbLocale","translation","property","toggleTranslationDialog","discardBtnText","editBar","objectToTranslate","modelDefinition","fieldsToTranslate","onTranslationSaved","onTranslationError","NotSupportedNotice","noticeContainer","PrintInfo","isLayout","layoutStyle","printSuggestions","divider","LessHorizontalIcon","PrintActionsBar","getExitPrintButton","isSmall","buttonSmall","buttonLarge","LessHorizontal","getPrintButton","print","getTransformYPx","elStyle","transformY","match","parseInt","isLeapPage","n","getMultiple","factor","multiple","StaticGrid","PrintLayoutItemGrid","updateDashboardLayout","isFirstPageBreak","pageBreaks","sortedPageBreaks","itemClassNames","getItemComponents","hideExtraPageBreaks","sortedElements","elements","types","elementsWithBoundingRect","from","classList","indexOf","bottomY","getDomGridItemsSortedByYPos","querySelectorAll","pageBreakBottom","lastItemBottom","foundNonPageBreak","thisItemBottom","gridElement","firstBreak","scrollArea","EDIT_BAR_HEIGHT","addPageBreaks","addDashboardItem","yPosList","pageNum","getPageBreakPositions","fromEdit","setPrintDashboard","updateDashboardItem","actionBarHeight","paddingTop","spacers","dp24","pageOuter","setEditDashboard","renderGrid","setNewDashboard","removeDashboardItem","sortedItems","spacerCount","dashboardMap","dashboardsIsEmpty","dashboardsLoaded","routeId","selectDashboard","dashboardToSelect","preferredId","getItem","dash","sGetDashboardsSortedByStarred","getElementsByTagName","remove","setHeaderbarVisibility","onHidden","permanent","filteredDimensions","dim","dimensionType","dataDimensionType","fetchDashboards","setControlBarRows","apiGetControlBarRows","setCurrentUser","setShowDescription","apiGetShowDescription","apiFetchDimensions","getFilteredDimensions","fetchDimensions","exact","AlertBar","DEFAULT_STATE_STYLE","objectClean","conversations","$merge","d2Object","keyUiLocale","authorities","newState","$splice","$unshift","idToRemove","stateItems","layoutHasChanged","newStateItems","stateItem","si","configureStore","middleware","thunk","withExtraArgument","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducer","applyMiddleware","addResources","arTranslations","ar_IQTranslations","ckbTranslations","csTranslations","daTranslations","enTranslations","esTranslations","frTranslations","idTranslations","kmTranslations","loTranslations","myTranslations","nbTranslations","prsTranslations","psTranslations","ptTranslations","pt_BRTranslations","ruTranslations","svTranslations","tetTranslations","tgTranslations","ukTranslations","urTranslations","uzTranslations","uz_CyrlTranslations","uz_LatnTranslations","viTranslations","zhTranslations","zh_CNTranslations","schemas","authorization","process","REACT_APP_DHIS2_AUTHORIZATION","headers","AppWrapper","store","theme","createMuiTheme","dhis2theme","i18nRoot","reportTable","chart","eventReport","eventChart","itemTypeToExternalPlugin","getPlugin","hasIntegratedPlugin","config","plugin","loadingIndicator","loadPlugin","resize"],"mappings":"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","file":"static/js/app.79341339.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ControlBar_root__iikeX\",\"dragging\":\"ControlBar_dragging__3lq79\",\"content\":\"ControlBar_content__26Z33\",\"draghandle\":\"ControlBar_draghandle__27zum\",\"expanded\":\"ControlBar_expanded__LhLRj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"DashboardItemChip_link__21drZ\",\"icon\":\"DashboardItemChip_icon__2hcIR\",\"selected\":\"DashboardItemChip_selected__r00uP\",\"unselected\":\"DashboardItemChip_unselected__2H9l2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ClearButton_button__33ZbK\",\"icon\":\"ClearButton_icon__vTJm3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Filter_container__1Vxdh\",\"input\":\"Filter_input__14lhU\",\"focused\":\"Filter_focused__Lvyz3\",\"searchIcon\":\"Filter_searchIcon__2ojUp\",\"searchButton\":\"Filter_searchButton__1tMTB\",\"searchIconContainer\":\"Filter_searchIconContainer__2luF5\",\"clearButtonContainer\":\"Filter_clearButtonContainer__pt2SM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ShowMoreButton_container__riJz_\",\"showMore\":\"ShowMoreButton_showMore__3S3He\",\"disabled\":\"ShowMoreButton_disabled__2FQNA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"DashboardsBar_container__1xuCo\",\"expanded\":\"DashboardsBar_expanded__3lVl8\",\"controls\":\"DashboardsBar_controls__3PhmY\",\"newLink\":\"DashboardsBar_newLink__2PkLQ\",\"collapsed\":\"DashboardsBar_collapsed__3CY9n\",\"chipContainer\":\"DashboardsBar_chipContainer__IRxuN\"};","import i18n from '@dhis2/d2-i18n';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\nimport ExtensionIcon from '@material-ui/icons/Extension';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport PersonIcon from '@material-ui/icons/Person';\nimport FontDownloadIcon from '@material-ui/icons/FontDownload';\nimport EmailIcon from '@material-ui/icons/Email';\nimport CropFreeIcon from '@material-ui/icons/CropFree';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested'; // Item types\n\nexport const VISUALIZATION = 'VISUALIZATION';\nexport const REPORT_TABLE = 'REPORT_TABLE';\nexport const CHART = 'CHART';\nexport const MAP = 'MAP';\nexport const EVENT_REPORT = 'EVENT_REPORT';\nexport const EVENT_CHART = 'EVENT_CHART';\nexport const APP = 'APP';\nexport const REPORTS = 'REPORTS';\nexport const RESOURCES = 'RESOURCES';\nexport const USERS = 'USERS';\nexport const MESSAGES = 'MESSAGES';\nexport const TEXT = 'TEXT';\nexport const SPACER = 'SPACER';\nexport const PAGEBREAK = 'PAGEBREAK';\nexport const PRINT_TITLE_PAGE = 'PRINT_TITLE_PAGE';\nconst DOMAIN_TYPE_AGGREGATE = 'AGGREGATE';\nconst DOMAIN_TYPE_TRACKER = 'TRACKER'; // Dashboard helpers\n\nexport const isVisualizationType = item => !!itemTypeMap[item.type].isVisualizationType;\nexport const hasMapView = itemType => itemTypeMap[itemType].domainType === DOMAIN_TYPE_AGGREGATE;\nexport const isTrackerDomainType = itemType => itemTypeMap[itemType].domainType === DOMAIN_TYPE_TRACKER;\nexport const getDefaultItemCount = itemType => itemTypeMap[itemType].defaultItemCount || 5;\nexport const getAppName = itemType => itemTypeMap[itemType].appName || ''; // Item type map\n\nexport const itemTypeMap = {\n  [VISUALIZATION]: {\n    id: VISUALIZATION,\n    endPointName: 'visualizations',\n    propName: 'visualization',\n    pluralTitle: i18n.t('Visualizations'),\n    appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n    appName: 'Data Visualizer',\n    defaultItemCount: 10\n  },\n  [REPORT_TABLE]: {\n    id: REPORT_TABLE,\n    endPointName: 'visualizations',\n    dataStatisticsName: 'REPORT_TABLE_VIEW',\n    propName: 'visualization',\n    pluralTitle: i18n.t('Pivot tables'),\n    domainType: DOMAIN_TYPE_AGGREGATE,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n    appName: 'Data Visualizer'\n  },\n  [CHART]: {\n    id: CHART,\n    endPointName: 'visualizations',\n    propName: 'visualization',\n    dataStatisticsName: 'CHART_VIEW',\n    pluralTitle: i18n.t('Charts'),\n    domainType: DOMAIN_TYPE_AGGREGATE,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n    appName: 'Data Visualizer'\n  },\n  [MAP]: {\n    id: MAP,\n    endPointName: 'maps',\n    dataStatisticsName: 'MAP_VIEW',\n    propName: 'map',\n    pluralTitle: i18n.t('Maps'),\n    domainType: DOMAIN_TYPE_AGGREGATE,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-maps/?id=${id}`,\n    appName: 'Maps'\n  },\n  [EVENT_REPORT]: {\n    id: EVENT_REPORT,\n    endPointName: 'eventReports',\n    propName: 'eventReport',\n    pluralTitle: i18n.t('Event reports'),\n    domainType: DOMAIN_TYPE_TRACKER,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-event-reports/?id=${id}`,\n    appName: 'Event Reports'\n  },\n  [EVENT_CHART]: {\n    id: EVENT_CHART,\n    endPointName: 'eventCharts',\n    propName: 'eventChart',\n    pluralTitle: i18n.t('Event charts'),\n    domainType: DOMAIN_TYPE_TRACKER,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-event-visualizer/?id=${id}`,\n    appName: 'Event Visualizer'\n  },\n  [APP]: {\n    endPointName: 'apps',\n    propName: 'appKey',\n    pluralTitle: i18n.t('Apps')\n  },\n  [REPORTS]: {\n    id: REPORTS,\n    endPointName: 'reports',\n    propName: 'reports',\n    pluralTitle: i18n.t('Reports'),\n    appUrl: (id, type) => {\n      switch (type) {\n        case 'HTML':\n          return `dhis-web-reports/#/standard-report/view/${id}`;\n\n        case 'JASPER_REPORT_TABLE':\n        case 'JASPER_JDBC':\n        default:\n          return `api/reports/${id}/data.pdf?t=${new Date().getTime()}`;\n      }\n    }\n  },\n  [RESOURCES]: {\n    id: RESOURCES,\n    endPointName: 'resources',\n    propName: 'resources',\n    pluralTitle: i18n.t('Resources'),\n    appUrl: id => `api/documents/${id}/data`\n  },\n  [USERS]: {\n    id: USERS,\n    endPointName: 'users',\n    propName: 'users',\n    pluralTitle: i18n.t('Users'),\n    appUrl: id => `dhis-web-dashboard-integration/profile.action?id=${id}`\n  },\n  [TEXT]: {\n    id: TEXT,\n    propName: 'text'\n  },\n  [MESSAGES]: {\n    propName: 'messages'\n  },\n  [SPACER]: {\n    propName: 'text'\n  },\n  [PAGEBREAK]: {\n    propName: 'text'\n  },\n  [PRINT_TITLE_PAGE]: {\n    propName: 'text'\n  }\n};\nexport const getEndPointName = type => itemTypeMap[type].endPointName;\nexport const getDataStatisticsName = type => itemTypeMap[type].dataStatisticsName || null;\nexport const getItemUrl = (type, item, baseUrl) => {\n  let url;\n\n  if (type === APP) {\n    url = item.launchUrl;\n  }\n\n  if (itemTypeMap[type] && itemTypeMap[type].appUrl) {\n    url = `${baseUrl}/${itemTypeMap[type].appUrl(item.id, item.type)}`;\n  }\n\n  return url;\n};\nexport const getItemIcon = type => {\n  switch (type) {\n    case REPORT_TABLE:\n    case EVENT_REPORT:\n    case REPORTS:\n      return TableIcon;\n\n    case CHART:\n    case EVENT_CHART:\n      return ChartIcon;\n\n    case MAP:\n      return MapIcon;\n\n    case APP:\n      return ExtensionIcon;\n\n    case RESOURCES:\n      return DescriptionIcon;\n\n    case USERS:\n      return PersonIcon;\n\n    case TEXT:\n      return FontDownloadIcon;\n\n    case MESSAGES:\n      return EmailIcon;\n\n    case SPACER:\n      return CropFreeIcon;\n\n    default:\n      return NotInterestedIcon;\n  }\n};","import isObject from 'lodash/isObject'; // validation\n\nexport function orNull(param) {\n  return param === undefined ? null : param;\n}\nexport function orArray(param) {\n  return Array.isArray(param) ? param : [];\n}\nexport function orObject(param) {\n  return isObject(param) ? param : {};\n} // array\n\nexport function arrayGetById(array, id) {\n  return array.find(item => item.id === id);\n} // object\n\nexport function arrayToIdMap(array) {\n  return array.reduce((obj, item) => {\n    obj[item.id] = item;\n    return obj;\n  }, {});\n} // date\n\nexport function getDate() {\n  const y = Math.floor(Math.random() * 3) + 2015;\n  const M = Math.floor(Math.random() * 12) + 1;\n  const d = Math.floor(Math.random() * 28) + 1; // const h = Math.floor(Math.random() * 23) + 1;\n  // const m = Math.floor(Math.random() * 59) + 1;\n  // const s = Math.floor(Math.random() * 59) + 1;\n\n  return new Date(`${y}-${M}-${d}`).toJSON().replace('T', ' ').substr(0, 10);\n}\nexport const formatDate = (value, uiLocale) => {\n  if (typeof global.Intl !== 'undefined' && Intl.DateTimeFormat) {\n    const locale = uiLocale || 'en';\n    return new Intl.DateTimeFormat(locale, {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    }).format(new Date(value));\n  }\n\n  return value.substr(0, 19).replace('T', ' ');\n};\n/**\n * Sorts an array of objects based on provided date property\n *\n * @param {Array} items Array of objects\n * @param {String} dateProp Name of the date property to be used for sorting\n * @param {Boolean} ascending Whether to sort ascending or descending\n */\n\nexport const sortByDate = (items, dateProp, ascending = true) => {\n  const values = Object.values(items);\n  values.sort((a, b) => {\n    const aDate = new Date(a[dateProp]);\n    const bDate = new Date(b[dateProp]);\n    return ascending ? aDate - bDate : bDate - aDate;\n  });\n  return values;\n}; // reducer validator\n\nexport const validateReducer = (value, defaultValue) => value === undefined || value === null ? defaultValue : value;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonContainer\":\"FilterSelector_buttonContainer__O_amY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ViewTitleBar_container__VivO0\",\"actions\":\"ViewTitleBar_actions__2UTRz\",\"editLink\":\"ViewTitleBar_editLink__d_HzW\",\"titleBar\":\"ViewTitleBar_titleBar__eiwJS\",\"star\":\"ViewTitleBar_star__26YmT\",\"strip\":\"ViewTitleBar_strip__3xR4U\",\"title\":\"ViewTitleBar_title__2GhTR\",\"descContainer\":\"ViewTitleBar_descContainer__3rF10\",\"desc\":\"ViewTitleBar_desc__3QW6Z\",\"noDesc\":\"ViewTitleBar_noDesc__Jettc\",\"moreText\":\"ViewTitleBar_moreText__3yHR0\",\"moreButtonSmall\":\"ViewTitleBar_moreButtonSmall__1ajrf\",\"shareButton\":\"ViewTitleBar_shareButton__3yEKR\",\"moreButton\":\"ViewTitleBar_moreButton__1HduK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"NoVisualizationMessage_message__22IPi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"center\":\"LoadingMask_center__KHIYy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FatalErrorBoundary_container__3SViR\",\"icon\":\"FatalErrorBoundary_icon__2UbeP\",\"message\":\"FatalErrorBoundary_message__3FzrY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"deleteItemButton\":\"DeleteItemButton_deleteItemButton__3TJm9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"warning\":\"PrintItemInfo_warning__123PK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"line\":\"ItemFooter_line__3Ko0R\",\"scrollContainer\":\"ItemFooter_scrollContainer__tuq4P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Item_list__1_nkQ\",\"item\":\"Item_item__3-6QE\",\"itemicon\":\"Item_itemicon__QlouX\",\"link\":\"Item_link___3c_q\",\"deleteicon\":\"Item_deleteicon__3usrl\",\"deletebutton\":\"Item_deletebutton__1DpBW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"titlePage\":\"Item_titlePage__18CNQ\",\"name\":\"Item_name__3nuTV\",\"description\":\"Item_description__1gFQd\",\"filterTitle\":\"Item_filterTitle__2p7TQ\",\"filterList\":\"Item_filterList__qc_G3\",\"filterListItem\":\"Item_filterListItem__sPbBY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bar\":\"FilterBar_bar__1Ma3p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"HeaderMenuItem_item__313hC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuItem\":\"ContentMenuItem_menuItem__vbKn3\",\"launchLink\":\"ContentMenuItem_launchLink__2Nql9\",\"label\":\"ContentMenuItem_label__ANfH1\",\"buttonInsert\":\"ContentMenuItem_buttonInsert__1joHg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"showMoreButton\":\"CategorizedMenuGroup_showMoreButton__2RbRp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"ItemSelector_menu__2VYae\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"EditTitleBar_section__LIaIC\",\"titleDescription\":\"EditTitleBar_titleDescription__1YsU6\",\"title\":\"EditTitleBar_title__3mUbt\",\"description\":\"EditTitleBar_description__24U5X\",\"itemSelector\":\"EditTitleBar_itemSelector__1cFEp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ConfirmDeleteDialog_content__EqswE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editBar\":\"EditBar_editBar__1d1xM\",\"controls\":\"EditBar_controls__1t0nO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noticeContainer\":\"NotSupportedNotice_noticeContainer__3z9Up\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PrintInfo_container__9gH0b\",\"title\":\"PrintInfo_title__2_VZd\",\"printSuggestions\":\"PrintInfo_printSuggestions__30tcU\",\"divider\":\"PrintInfo_divider__3wzx9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PrintActionsBar_container__2iQp7\",\"actions\":\"PrintActionsBar_actions__2I2I0\",\"link\":\"PrintActionsBar_link__lFUmI\",\"buttonSmall\":\"PrintActionsBar_buttonSmall__27sFq\",\"buttonLarge\":\"PrintActionsBar_buttonLarge__QcrPj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PrintLayoutDashboard_container__3eIY-\",\"pageOuter\":\"PrintLayoutDashboard_pageOuter__22acI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PrintDashboard_container__2KgcY\",\"pageOuter\":\"PrintDashboard_pageOuter__fl9tw\"};","import React, { createContext, useContext, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash/debounce';\nexport const WindowDimensionsCtx = createContext(null);\n\nconst windowDims = () => ({\n  height: window.innerHeight,\n  width: window.innerWidth\n});\n\nconst WindowDimensionsProvider = ({\n  children\n}) => {\n  const [dimensions, setDimensions] = useState(windowDims());\n  useEffect(() => {\n    const handleResize = debounce(() => {\n      setDimensions(windowDims());\n    }, 200);\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n  return <WindowDimensionsCtx.Provider value={dimensions}>\n            {children}\n        </WindowDimensionsCtx.Provider>;\n};\n\nWindowDimensionsProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};\nexport default WindowDimensionsProvider;\nexport const useWindowDimensions = () => {\n  return useContext(WindowDimensionsCtx);\n};","export const DEFAULT_SETTINGS = {\n  displayNameProperty: 'displayName',\n  keyDashboardContextMenuItemOpenInRelevantApp: true,\n  keyDashboardContextMenuItemShowInterpretationsAndDetails: true,\n  keyDashboardContextMenuItemSwitchViewType: true,\n  keyDashboardContextMenuItemViewFullscreen: true,\n  keyGatherAnalyticalObjectStatisticsInDashboardViews: false\n};\nconst SYSTEM_SETTINGS = ['keyDashboardContextMenuItemOpenInRelevantApp', 'keyDashboardContextMenuItemShowInterpretationsAndDetails', 'keyDashboardContextMenuItemSwitchViewType', 'keyDashboardContextMenuItemViewFullscreen', 'keyGatherAnalyticalObjectStatisticsInDashboardViews'];\nconst SYSTEM_SETTINGS_REMAPPINGS = {\n  keyDashboardContextMenuItemOpenInRelevantApp: 'openInRelevantApp',\n  keyDashboardContextMenuItemShowInterpretationsAndDetails: 'showInterpretationsAndDetails',\n  keyDashboardContextMenuItemSwitchViewType: 'switchViewType',\n  keyDashboardContextMenuItemViewFullscreen: 'fullscreenAllowedInSettings'\n};\nexport const renameSystemSettings = settings => {\n  return Object.keys(settings).reduce((mapped, key) => {\n    mapped[SYSTEM_SETTINGS_REMAPPINGS[key] || key] = settings[key];\n    return mapped;\n  }, {});\n};\nconst query = {\n  resource: 'systemSettings',\n  params: {\n    key: SYSTEM_SETTINGS\n  }\n};\nexport default query;","import React, { useContext, useState, useEffect, createContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDataEngine } from '@dhis2/app-runtime';\nimport settingsQuery, { renameSystemSettings, DEFAULT_SETTINGS } from '../api/settings';\nexport const SystemSettingsCtx = createContext({});\n\nconst SystemSettingsProvider = ({\n  children\n}) => {\n  const [settings, setSettings] = useState([]);\n  const engine = useDataEngine();\n  useEffect(() => {\n    async function fetchData() {\n      const {\n        systemSettings\n      } = await engine.query({\n        systemSettings: settingsQuery\n      });\n      setSettings(Object.assign({}, renameSystemSettings(DEFAULT_SETTINGS), renameSystemSettings(systemSettings)));\n    }\n\n    fetchData();\n  }, []);\n  return <SystemSettingsCtx.Provider value={{\n    settings\n  }}>\n            {children}\n        </SystemSettingsCtx.Provider>;\n};\n\nSystemSettingsProvider.propTypes = {\n  children: PropTypes.node\n};\nexport default SystemSettingsProvider;\nexport const useSystemSettings = () => useContext(SystemSettingsCtx);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport classes from './styles/ControlBar.module.css'; //Matches the height of .dragHandle in ControlBar.module.css\n\nexport const DRAG_HANDLE_HEIGHT = 7;\n\nclass ControlBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dragging: false\n    };\n  }\n\n  onStartDrag = () => {\n    this.setState({\n      dragging: true\n    });\n    window.addEventListener('mousemove', this.onDrag);\n    window.addEventListener('mouseup', this.onEndDrag);\n  };\n  onDrag = event => {\n    event.preventDefault();\n    event.stopPropagation();\n    const newHeight = event.clientY;\n\n    if (this.props.onChangeHeight && newHeight !== this.props.height && newHeight > 0) {\n      requestAnimationFrame(() => {\n        this.props.onChangeHeight(newHeight);\n      });\n    }\n  };\n  onEndDrag = () => {\n    this.setState({\n      dragging: false\n    });\n    window.removeEventListener('mousemove', this.onDrag);\n    window.removeEventListener('mouseup', this.onEndDrag);\n\n    if (this.props.onEndDrag) {\n      this.props.onEndDrag();\n    }\n  };\n  renderDragHandle = () => typeof this.props.onChangeHeight === 'function' && <div className={classes.draghandle} onMouseDown={this.onStartDrag} data-testid=\"controlbar-drag-handle\" />;\n\n  render() {\n    const height = Math.max(this.props.height, 0) + DRAG_HANDLE_HEIGHT;\n    const rootClass = cx(classes.root, this.state.dragging && classes.dragging, this.props.isMaxHeight && classes.expanded);\n    return <div style={{\n      height\n    }} className={rootClass}>\n                <div className={classes.content}>{this.props.children}</div>\n                {this.renderDragHandle()}\n            </div>;\n  }\n\n}\n\nControlBar.propTypes = {\n  /**\n   * The height of the control bar in number of lines. Must be a positive integer.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Callback function that is called when the control bar is resized.\n   * The callback receives one argument: The new height in pixels.\n   *\n   * If no callback is specified the control bar will not have a drag handle.\n   */\n  height: PropTypes.number.isRequired,\n\n  /**\n   * Control bar is expanded or is in its max height.\n   * */\n  isMaxHeight: PropTypes.bool,\n\n  /**\n   * Callback function that is called when the control bar is dropped after being dragged.\n   * The callback receives one argument: The new height in pixels.\n   *\n   * Ignored if no \"onChangeHeight\" function is provided.\n   */\n  onChangeHeight: PropTypes.func,\n\n  /**\n   * The contents of the control bar.\n   */\n  onEndDrag: PropTypes.func\n};\nControlBar.defaultProps = {\n  onChangeHeight: null,\n  onEndDrag: null\n};\nexport default ControlBar;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst StarIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>;\n\nStarIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default StarIcon;","import { getInstance } from 'd2';\nexport const apiPostDataStatistics = async (eventType, id) => {\n  const d2 = await getInstance();\n  const url = `dataStatistics?eventType=${eventType}&favorite=${id}`;\n  d2.Api.getApi().post(url);\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Chip } from '@dhis2/ui';\nimport { Link } from 'react-router-dom';\nimport debounce from 'lodash/debounce';\nimport StarIcon from '../../icons/Star';\nimport { apiPostDataStatistics } from '../../api/dataStatistics';\nimport classes from './styles/DashboardItemChip.module.css';\nexport const DashboardItemChip = ({\n  starred,\n  selected,\n  label,\n  dashboardId,\n  onClick\n}) => {\n  const chipProps = {\n    selected\n  };\n\n  if (starred) {\n    const selectedState = selected ? classes.selected : classes.unselected;\n    chipProps.icon = <StarIcon className={`${classes.icon} ${selectedState}`} />;\n  }\n\n  const debouncedPostStatistics = debounce(() => apiPostDataStatistics('DASHBOARD_VIEW', dashboardId), 500);\n\n  const handleClick = () => {\n    debouncedPostStatistics();\n    onClick();\n  };\n\n  return <Link className={classes.link} to={`/${dashboardId}`} onClick={handleClick} data-test=\"dashboard-chip\">\n            <Chip {...chipProps}>{label}</Chip>\n        </Link>;\n};\nDashboardItemChip.propTypes = {\n  dashboardId: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  selected: PropTypes.bool.isRequired,\n  starred: PropTypes.bool.isRequired,\n  onClick: PropTypes.func.isRequired,\n  classes: PropTypes.object\n};\nexport default DashboardItemChip;","import React from 'react';\nimport { colors } from '@dhis2/ui';\n\nconst AddCircleIcon = () => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" fill={colors.teal600} viewBox=\"0 0 24 24\">\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm4 11h-3v3c0 .55-.45 1-1 1s-1-.45-1-1v-3H8c-.55 0-1-.45-1-1s.45-1 1-1h3V8c0-.55.45-1 1-1s1 .45 1 1v3h3c.55 0 1 .45 1 1s-.45 1-1 1z\" />\n    </svg>;\n\nexport default AddCircleIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst SearchIcon = ({\n  className,\n  small\n}) => small ? <svg className={className} height=\"16\" viewBox=\"0 0 16 16\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"m6 1c2.76142375 0 5 2.23857625 5 5 0 1.20065927-.4231997 2.30247496-1.12856994 3.16441794l4.48212334 4.48202866-.7071068.7071068-4.48202866-4.48212334c-.86194298.70537024-1.96375867 1.12856994-3.16441794 1.12856994-2.76142375 0-5-2.23857625-5-5s2.23857625-5 5-5zm0 1c-2.209139 0-4 1.790861-4 4s1.790861 4 4 4 4-1.790861 4-4-1.790861-4-4-4z\" fill=\"#010101\" />\n        </svg> : <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n            <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n            <path d=\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\" />\n        </svg>;\n\nSearchIcon.propTypes = {\n  className: PropTypes.string,\n  small: PropTypes.bool\n};\nexport default SearchIcon;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst ClearIcon = ({\n  className\n}) => <svg className={className} fill={colors.grey800} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n        <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>;\n\nClearIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default ClearIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ClearIcon from '../../icons/Clear';\nimport classes from './styles/ClearButton.module.css';\nexport const ClearButton = ({\n  onClear\n}) => <button className={classes.button} onClick={onClear}>\n        <span>\n            <ClearIcon className={classes.icon} color=\"action\" />\n        </span>\n    </button>;\nClearButton.propTypes = {\n  onClear: PropTypes.func.isRequired\n};\nexport default ClearButton;","import { validateReducer } from '../modules/util';\nexport const SET_DASHBOARDS_FILTER = 'SET_DASHBOARDS_FILTER';\nexport const CLEAR_DASHBOARDS_FILTER = 'CLEAR_DASHBOARDS_FILTER';\nexport const DEFAULT_STATE_DASHBOARDS_FILTER = '';\nexport default ((state = DEFAULT_STATE_DASHBOARDS_FILTER, action) => {\n  switch (action.type) {\n    case SET_DASHBOARDS_FILTER:\n      {\n        return validateReducer(action.value, DEFAULT_STATE_DASHBOARDS_FILTER);\n      }\n\n    case CLEAR_DASHBOARDS_FILTER:\n      {\n        return DEFAULT_STATE_DASHBOARDS_FILTER;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetDashboardsFilter = state => state.dashboardsFilter;","// Dimensions for the react-grid-layout\nimport sortBy from 'lodash/sortBy';\nimport { isVisualizationType } from './itemTypes';\nimport { isSmallScreen } from './smallScreen';\nexport const GRID_COMPACT_TYPE = 'vertical'; // vertical | horizonal | null\n\nexport const GRID_ROW_HEIGHT_PX = 10;\nexport const MARGIN_PX = [10, 10];\nconst SM_SCREEN_MIN_ITEM_GRID_HEIGHT = 13; // minimum of ~320px\n\nexport const SM_SCREEN_GRID_COLUMNS = 1;\nexport const MARGIN_SM_PX = [0, 16];\nexport const GRID_PADDING_PX = [0, 0]; // sum of left+right padding of dashboard-wrapper (App.css)\n\nexport const DASHBOARD_WRAPPER_LR_MARGIN_PX = 32; // make an assumption about the original item w/h ratio\n// assumes grid width of ~1200px at time dashboard was created\n\nconst GRID_COL_WIDTH_PX = 10;\nexport const GRID_COLUMNS = 60; // Dimensions for getShape\n\nexport const NEW_ITEM_SHAPE = {\n  x: 0,\n  y: 0,\n  w: 20,\n  h: 29\n};\nconst NUMBER_OF_ITEM_COLS = 2;\nconst MAX_ITEM_GRID_WIDTH = GRID_COLUMNS - 1;\nexport const MAX_ITEM_GRID_HEIGHT = 34;\nexport const MAX_ITEM_GRID_HEIGHT_OIPP = 35;\nexport const MAX_ITEM_GRID_WIDTH_OIPP = 56;\nconst MIN_ITEM_GRID_HEIGHT = 4; // isNonNegativeInteger\n\nconst isNonNegativeInteger = x => Number.isInteger(x) && x >= 0; // Does the item have all the shape properties?\n\n\nexport const hasShape = item => isNonNegativeInteger(item.x) && isNonNegativeInteger(item.y) && isNonNegativeInteger(item.w) && isNonNegativeInteger(item.h); // returns a rectangular grid block dimensioned with x, y, w, h in grid units.\n// based on a grid with 3 items across\n\nconst getShape = i => {\n  const col = i % NUMBER_OF_ITEM_COLS;\n  const row = Math.floor(i / NUMBER_OF_ITEM_COLS);\n  const itemWidth = Math.floor(MAX_ITEM_GRID_WIDTH / NUMBER_OF_ITEM_COLS);\n  const itemHeight = GRID_ROW_HEIGHT_PX * 2;\n  return {\n    x: col * itemWidth,\n    y: row * itemHeight,\n    w: itemWidth,\n    h: itemHeight\n  };\n};\n/**\n * Returns an array of items containing the x, y, w, h dimensions\n * and the item's originalheight in pixels\n * and dimensions to create the small layout (x, y, w, h)\n * @function\n * @param {Array} items\n * @returns {Array}\n */\n\n\nexport const withShape = (items = []) => {\n  const itemsWithShape = items.map((item, i) => hasShape(item) ? item : Object.assign({}, item, getShape(i)));\n  return itemsWithShape.map(item => Object.assign({}, item, {\n    originalH: item.h\n  }));\n};\nexport const getGridWidth = windowWidthPx => windowWidthPx - DASHBOARD_WRAPPER_LR_MARGIN_PX;\n\nconst getGridUnitsForSmFromPx = hPx => {\n  const gridUnitHeightPx = GRID_ROW_HEIGHT_PX + MARGIN_SM_PX[1];\n  return Math.round((hPx + MARGIN_SM_PX[1]) / gridUnitHeightPx);\n};\n\nexport const getProportionalHeight = (item, windowWidthPx) => {\n  // get w/h ratio of the original item\n  const wPx = getItemWHPx(item.w, GRID_COL_WIDTH_PX, MARGIN_PX[0]);\n  const hPx = getItemWHPx(item.h, GRID_ROW_HEIGHT_PX, MARGIN_PX[1]);\n  const ratioWH = wPx / hPx;\n\n  if (!isVisualizationType(item)) {\n    return getGridUnitsForSmFromPx(hPx);\n  }\n\n  const gridWidthPx = getGridWidth(windowWidthPx); // get new height in px based on the ratio\n\n  const newColWidthPx = (gridWidthPx - MARGIN_SM_PX[0] * (SM_SCREEN_GRID_COLUMNS - 1) - GRID_PADDING_PX[0] * 2) / SM_SCREEN_GRID_COLUMNS;\n  const newWPx = newColWidthPx * SM_SCREEN_GRID_COLUMNS;\n  const newHPx = Math.round(newWPx / ratioWH); //convert height in px back to grid units\n\n  const h = getGridUnitsForSmFromPx(newHPx); // item must be at least the set minimum\n\n  return h < SM_SCREEN_MIN_ITEM_GRID_HEIGHT ? SM_SCREEN_MIN_ITEM_GRID_HEIGHT : h;\n};\nexport const getSmallLayout = (items, windowWidthPx) => sortBy(items, ['y', 'x']).map((item, i) => Object.assign({}, item, {\n  x: 0,\n  y: i,\n  w: SM_SCREEN_GRID_COLUMNS,\n  h: getProportionalHeight(item, windowWidthPx)\n}));\nexport const getGridItemProperties = itemId => {\n  return {\n    i: itemId,\n    minH: MIN_ITEM_GRID_HEIGHT\n  };\n};\nexport const getPageBreakItemShape = (yPos, isStatic = true) => {\n  return {\n    x: 0,\n    y: yPos,\n    w: MAX_ITEM_GRID_WIDTH,\n    h: 5,\n    static: !!isStatic,\n    minH: 1\n  };\n};\nexport const getPrintTitlePageItemShape = isOneItemPerPage => {\n  return {\n    x: 0,\n    y: 0,\n    w: isOneItemPerPage ? MAX_ITEM_GRID_WIDTH_OIPP : MAX_ITEM_GRID_WIDTH,\n    h: MAX_ITEM_GRID_HEIGHT,\n    static: true,\n    minH: 1\n  };\n};\n/**\n * Calculates the grid item's height in pixels based\n * on the height in grid units. This calculation\n * is copied directly from react-grid-layout\n * calculateUtils.js (calcGridItemWHPx)\n *\n * Each row's px height is the sum of the GRID_ROW_HEIGHT_PX + MARGIN-Y\n * So the calculation is:\n * GRID_ROW_HEIGHT_PX * Number of rows\n * +\n * yMargin * Number of rows-1\n *\n * @param {Object} item item containing shape (x, y, w, h)\n */\n\nexport const getItemHeightPx = (item, windowWidthPx) => {\n  if (isSmallScreen(windowWidthPx)) {\n    const h = item.smallOriginalH ? item.smallOriginalH : getProportionalHeight(item, windowWidthPx);\n    return getItemWHPx(h, GRID_ROW_HEIGHT_PX, MARGIN_SM_PX[1]);\n  }\n\n  return getItemWHPx(item.originalH, GRID_ROW_HEIGHT_PX, MARGIN_PX[1]);\n};\n\nconst getItemWHPx = (gridUnits, colOrRowSize, marginPx) => Math.round(colOrRowSize * gridUnits + Math.max(0, gridUnits - 1) * marginPx);","import { DASHBOARD_WRAPPER_LR_MARGIN_PX } from './gridUtil';\nconst SMALL_SCREEN_BREAKPOINT = 480;\nexport const isSmallScreen = width => width <= SMALL_SCREEN_BREAKPOINT;\nexport const getBreakpoint = () => SMALL_SCREEN_BREAKPOINT - DASHBOARD_WRAPPER_LR_MARGIN_PX;","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport cx from 'classnames';\nimport SearchIcon from '../../icons/Search';\nimport ClearButton from './ClearButton';\nimport { useWindowDimensions } from '../WindowDimensionsProvider';\nimport { acSetDashboardsFilter, acClearDashboardsFilter } from '../../actions/dashboardsFilter';\nimport { sGetDashboardsFilter } from '../../reducers/dashboardsFilter';\nimport { isSmallScreen } from '../../modules/smallScreen';\nimport classes from './styles/Filter.module.css';\nexport const KEYCODE_ENTER = 13;\nexport const KEYCODE_ESCAPE = 27;\nexport const FilterUnconnected = ({\n  clearDashboardsFilter,\n  filterText,\n  isMaxHeight,\n  setDashboardsFilter,\n  onKeypressEnter,\n  onToggleMaxHeight\n}) => {\n  const [focusedClassName, setFocusedClassName] = useState('');\n  const [inputFocused, setInputFocus] = useState(false);\n  const {\n    width\n  } = useWindowDimensions();\n\n  const setFilterValue = event => {\n    event.preventDefault();\n    setDashboardsFilter(event.target.value);\n  };\n\n  const onKeyUp = event => {\n    switch (event.keyCode) {\n      case KEYCODE_ENTER:\n        onKeypressEnter();\n        clearDashboardsFilter();\n        break;\n\n      case KEYCODE_ESCAPE:\n        clearDashboardsFilter();\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const onFocus = event => {\n    event.preventDefault();\n    setFocusedClassName(classes.focused);\n  };\n\n  const onBlur = event => {\n    event.preventDefault();\n    setFocusedClassName('');\n  };\n\n  const onFocusInput = input => {\n    if (input && inputFocused && isSmallScreen(width)) {\n      return input.focus();\n    }\n  };\n\n  const toggleMaxHeight = () => {\n    onToggleMaxHeight();\n    setInputFocus(true);\n  };\n\n  return isSmallScreen(width) && !isMaxHeight ? <button className={classes.searchButton} onClick={toggleMaxHeight}>\n            <SearchIcon className={classes.searchIcon} />\n        </button> : <div className={cx(classes.container, `${focusedClassName}`)} onFocus={onFocus} onBlur={onBlur}>\n            <div className={classes.searchIconContainer}>\n                <SearchIcon className={classes.searchIcon} small={isSmallScreen(width) && isMaxHeight} />\n            </div>\n            <input className={classes.input} type=\"text\" placeholder={i18n.t('Search for a dashboard')} onChange={setFilterValue} onKeyUp={onKeyUp} value={filterText} data-test=\"search-dashboard-input\" ref={onFocusInput} />\n            {filterText && <div className={classes.clearButtonContainer}>\n                    <ClearButton onClear={clearDashboardsFilter} />\n                </div>}\n        </div>;\n};\nFilterUnconnected.propTypes = {\n  clearDashboardsFilter: PropTypes.func,\n  filterText: PropTypes.string,\n  isMaxHeight: PropTypes.bool,\n  setDashboardsFilter: PropTypes.func,\n  onKeypressEnter: PropTypes.func,\n  onToggleMaxHeight: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  filterText: sGetDashboardsFilter(state)\n});\n\nconst mapDispatchToProps = {\n  setDashboardsFilter: acSetDashboardsFilter,\n  clearDashboardsFilter: acClearDashboardsFilter\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterUnconnected);","import { SET_DASHBOARDS_FILTER, CLEAR_DASHBOARDS_FILTER } from '../reducers/dashboardsFilter'; // actions\n\nexport const acSetDashboardsFilter = value => ({\n  type: SET_DASHBOARDS_FILTER,\n  value\n});\nexport const acClearDashboardsFilter = () => ({\n  type: CLEAR_DASHBOARDS_FILTER\n});","import React from 'react';\nexport const ChevronDown = () => <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"m11.29289 15.7071c.39053.3905 1.02369.3905 1.41422 0l4.99999-4.99999c.3905-.39053.3905-1.02369 0-1.41422-.3905-.39052-1.0237-.39052-1.4142 0l-4.2929 4.2929-4.29289-4.2929c-.39053-.39052-1.02369-.39052-1.41422 0-.39052.39053-.39052 1.02369 0 1.41422z\" fill=\"#a0adba\" />\n    </svg>;\nexport const ChevronUp = () => <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"m11.2928932 8.29289322c.360484-.36048396.927715-.3882135 1.3200062-.08318861l.0942074.08318861 5 4.99999998c.3905243.3905243.3905243 1.0236893 0 1.4142136-.360484.3604839-.927715.3882135-1.3200062.0831886l-.0942074-.0831886-4.2928932-4.2921068-4.29289322 4.2921068c-.36048396.3604839-.92771502.3882135-1.32000622.0831886l-.09420734-.0831886c-.36048396-.360484-.3882135-.927715-.08318861-1.3200062l.08318861-.0942074z\" fill=\"#a0adba\" />\n    </svg>;","import React, { useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Tooltip } from '@dhis2/ui';\nimport { ChevronDown, ChevronUp } from './assets/icons';\nimport classes from './styles/ShowMoreButton.module.css';\nexport const SHOWMORE_BAR_HEIGHT = 16;\n\nconst ShowMoreButton = ({\n  onClick,\n  isMaxHeight,\n  disabled\n}) => {\n  const containerRef = useRef(null);\n  const buttonLabel = isMaxHeight ? i18n.t('Show fewer dashboards') : i18n.t('Show more dashboards');\n\n  const onButtonClicked = () => {\n    // The click may happen on the svg or path\n    // element of the button icon.\n    // In that case it is necessary to trigger\n    // the mouseout on the button element\n    // to ensure that the tooltip is removed\n    const buttonEl = containerRef.current.children[0];\n    const event = new MouseEvent('mouseout', {\n      bubbles: true,\n      cancelable: false\n    });\n    onClick();\n    buttonEl.dispatchEvent(event);\n  };\n\n  return <div className={classes.container} ref={containerRef}>\n            {disabled ? <div className={classes.disabled}>\n                    <ChevronDown />\n                </div> : <Tooltip content={buttonLabel} placement=\"bottom\">\n                    {({\n        onMouseOver,\n        onMouseOut,\n        ref\n      }) => <button className={classes.showMore} onClick={onButtonClicked} data-test=\"showmore-button\" aria-label={buttonLabel} ref={ref} onMouseOver={onMouseOver} onMouseOut={onMouseOut}>\n                            {isMaxHeight ? <ChevronUp /> : <ChevronDown />}\n                        </button>}\n                </Tooltip>}\n        </div>;\n};\n\nShowMoreButton.propTypes = {\n  disabled: PropTypes.bool,\n  isMaxHeight: PropTypes.bool,\n  onClick: PropTypes.func\n};\nexport default ShowMoreButton;","import { SHOWMORE_BAR_HEIGHT } from './ShowMoreButton';\nimport { DRAG_HANDLE_HEIGHT } from './ControlBar';\nexport const CONTROL_BAR_ROW_HEIGHT = 40;\nexport const FIRST_ROW_PADDING_HEIGHT = 10;\nexport const MIN_ROW_COUNT = 1;\nexport const HEADERBAR_HEIGHT = 48;\nexport const CONTROL_BAR_MARGIN_BOTTOM_SMALL = 32;\nexport const SEARCH_BAR_HEIGHT_SMALL = 40; // height (24px) + padding top and bottom (8px)\n// show more button\n\nexport const CONTROL_BAR_OUTER_HEIGHT_DIFF = FIRST_ROW_PADDING_HEIGHT + SHOWMORE_BAR_HEIGHT - 2; // 2 pixel \"adjustment\"\n\nexport const getRowsHeight = rows => {\n  return rows * CONTROL_BAR_ROW_HEIGHT;\n};\nexport const getNumRowsFromHeight = height => {\n  return Math.floor((height - CONTROL_BAR_OUTER_HEIGHT_DIFF) / CONTROL_BAR_ROW_HEIGHT);\n};\nexport const getControlBarHeight = rows => {\n  return getRowsHeight(rows) + CONTROL_BAR_OUTER_HEIGHT_DIFF;\n};\nexport const CONTROL_BAR = 'controlBar';\nexport const CONTROL_BAR_CONTAINER = 'controlBarContainer';\nexport const CHIPS_CONTAINER = 'chipsContainer';\nexport const CONTROL_BAR_COLLAPSED = 'controlBarCollapsed';\nexport const getControlBarHeightSmallDevice = (type, height) => {\n  const controlBarHeight = height - HEADERBAR_HEIGHT - CONTROL_BAR_MARGIN_BOTTOM_SMALL;\n\n  switch (type) {\n    // control bar height should be 100vh -32px\n    case CONTROL_BAR:\n      return controlBarHeight - DRAG_HANDLE_HEIGHT;\n\n    case CONTROL_BAR_CONTAINER:\n      return controlBarHeight - CONTROL_BAR_OUTER_HEIGHT_DIFF;\n\n    case CHIPS_CONTAINER:\n      return controlBarHeight - SEARCH_BAR_HEIGHT_SMALL - CONTROL_BAR_OUTER_HEIGHT_DIFF;\n\n    case CONTROL_BAR_COLLAPSED:\n    default:\n      return SEARCH_BAR_HEIGHT_SMALL + CONTROL_BAR_OUTER_HEIGHT_DIFF + DRAG_HANDLE_HEIGHT;\n  }\n};","/** @module reducers/controlBar */\nimport { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\nexport const SET_CONTROLBAR_USER_ROWS = 'SET_CONTROLBAR_USER_ROWS';\nexport const DEFAULT_STATE_CONTROLBAR_ROWS = 1;\n\nconst userRows = (state = DEFAULT_STATE_CONTROLBAR_ROWS, action) => {\n  switch (action.type) {\n    case SET_CONTROLBAR_USER_ROWS:\n      return validateReducer(action.value, DEFAULT_STATE_CONTROLBAR_ROWS);\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  userRows\n});\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\n\nexport const sGetControlBarRoot = state => state.controlBar; // Selector dependency level 2\n\nexport const sGetControlBarUserRows = state => sGetControlBarRoot(state).userRows;","import { TEXT, SPACER } from './itemTypes';\nimport { getGridItemProperties } from './gridUtil';\nexport const spacerContent = 'SPACER_ITEM_FOR_DASHBOARD_LAYOUT_CONVENIENCE';\nexport const emptyTextItemContent = 'TEXT_ITEM_WITH_NO_CONTENT';\n\nconst isBackendSpacerType = item => item.type === TEXT && item.text === spacerContent;\n\nconst isUiSpacerType = item => item.type === SPACER;\n\nconst isTextType = item => item.type === TEXT && item.text !== spacerContent;\n\nexport const convertUiItemsToBackend = items => items.map(item => {\n  let text = null;\n\n  if (isUiSpacerType(item)) {\n    text = spacerContent;\n  } else if (isTextType(item)) {\n    text = item.text || emptyTextItemContent;\n  }\n\n  return { ...item,\n    ...(text ? {\n      text\n    } : {})\n  };\n});\nexport const convertBackendItemsToUi = items => items.map(item => {\n  const type = isBackendSpacerType(item) ? SPACER : item.type;\n  const gridProperties = getGridItemProperties(item.id);\n  const text = isTextType(item) ? item.text === emptyTextItemContent ? '' : item.text : null;\n  return { ...item,\n    ...(text !== null ? {\n      text\n    } : {}),\n    type,\n    ...gridProperties\n  };\n});","/** @module reducers/dashboards */\nimport arrayFrom from 'd2-utilizr/lib/arrayFrom';\nimport arraySort from 'd2-utilizr/lib/arraySort';\nimport { orArray, orObject } from '../modules/util';\nimport { convertBackendItemsToUi } from '../modules/uiBackendItemConverter';\nexport const SET_DASHBOARDS = 'SET_DASHBOARDS';\nexport const ADD_DASHBOARDS = 'ADD_DASHBOARDS';\nexport const SET_DASHBOARD_STARRED = 'SET_DASHBOARD_STARRED';\nexport const SET_DASHBOARD_DISPLAY_NAME = 'SET_DASHBOARD_DISPLAY_NAME';\nexport const SET_DASHBOARD_ITEMS = 'SET_DASHBOARD_ITEMS';\nexport const DEFAULT_STATE_DASHBOARDS = {\n  byId: null,\n  items: []\n};\nexport const EMPTY_DASHBOARD = {}; // reducer helper functions\n\nconst updateDashboardProp = ({\n  state,\n  dashboardId,\n  prop,\n  value\n}) => ({\n  byId: { ...state.byId,\n    [dashboardId]: { ...state.byId[dashboardId],\n      [prop]: value\n    }\n  },\n  items: state.items\n});\n/**\n * Reducer that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n * @returns {Object}\n */\n\n\nexport default ((state = DEFAULT_STATE_DASHBOARDS, action) => {\n  switch (action.type) {\n    case SET_DASHBOARDS:\n      {\n        return {\n          byId: action.value,\n          items: []\n        };\n      }\n\n    case ADD_DASHBOARDS:\n      {\n        return { ...state,\n          byId: { ...state.byId,\n            ...action.value\n          }\n        };\n      }\n\n    case SET_DASHBOARD_STARRED:\n      {\n        return updateDashboardProp({\n          state,\n          dashboardId: action.dashboardId,\n          prop: 'starred',\n          value: action.value\n        });\n      }\n\n    case SET_DASHBOARD_DISPLAY_NAME:\n      {\n        return updateDashboardProp({\n          state,\n          dashboardId: action.dashboardId,\n          prop: 'displayName',\n          value: action.value\n        });\n      }\n\n    case SET_DASHBOARD_ITEMS:\n      {\n        return { ...state,\n          items: action.value\n        };\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetDashboardsRoot = state => state.dashboards; // selector level 1\n\n/**\n * Selector which returns a dashboard by id from the state object\n * If no matching dashboard is found it returns undefined\n * If dashboards.byId is null, then the dashboards api request\n * has not yet completed. If dashboards.byId is an empty object\n * then the dashboards api request is complete, but no dashboards\n * were returned\n *\n * @function\n * @param {Object} state The current state\n * @param {Number} id The id of the dashboard\n * @returns {Object | undefined}\n */\n\nexport const sGetDashboardById = (state, id) => orObject(sGetDashboardsRoot(state).byId)[id];\nexport const sDashboardsIsFetching = state => {\n  return sGetDashboardsRoot(state).byId === null;\n};\n/**\n * Selector which returns all dashboards (the byId object)\n *\n * @function\n * @param {Object} state The current state\n * @returns {Object | undefined}\n */\n\nexport const sGetAllDashboards = state => orObject(sGetDashboardsRoot(state).byId);\n/**\n * Selector which returns the current dashboard items\n *\n * @function\n * @param {Object} state The current state\n * @returns {Array}\n */\n\nexport const sGetDashboardItems = state => sGetDashboardsRoot(state).items; // selector level 2\n\nexport const sGetStarredDashboards = state => Object.values(sGetAllDashboards(state)).filter(dashboard => dashboard.starred === true);\nexport const sGetUnstarredDashboards = state => Object.values(sGetAllDashboards(state)).filter(dashboard => dashboard.starred === false); // selector level 3\n\nexport const sGetStarredDashboardIds = state => {\n  return sGetStarredDashboards(state).map(dashboard => dashboard.id);\n};\nexport const sGetUnstarredDashboardIds = state => sGetUnstarredDashboards(state).map(dashboard => dashboard.id);\nexport const sGetDashboardsSortedByStarred = state => [...arraySort(sGetStarredDashboards(state), 'ASC', 'displayName'), ...arraySort(sGetUnstarredDashboards(state), 'ASC', 'displayName')]; // utils\n\n/**\n * Returns the array of dashboards, customized for ui\n * @function\n * @param {Array} data The original dashboard list\n * @returns {Array}\n */\n\nexport const getCustomDashboards = data => arrayFrom(data).map(d => ({\n  id: d.id,\n  name: d.name,\n  displayName: d.displayName,\n  description: d.description,\n  displayDescription: d.displayDescription,\n  starred: d.favorite,\n  owner: d.user.name,\n  created: d.created.split('T').join(' ').substr(0, 16),\n  lastUpdated: d.lastUpdated.split('T').join(' ').substr(0, 16),\n  access: d.access,\n  numberOfItems: orArray(d.dashboardItems).length,\n  dashboardItems: convertBackendItemsToUi(d.dashboardItems)\n}));","/** @module reducers/selected */\nimport { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\nexport const SET_SELECTED_ID = 'SET_SELECTED_ID';\nexport const SET_SELECTED_ISLOADING = 'SET_SELECTED_ISLOADING';\nexport const SET_SELECTED_SHOWDESCRIPTION = 'SET_SELECTED_SHOWDESCRIPTION';\nexport const SET_SELECTED_ITEM_ACTIVE_TYPE = 'SET_SELECTED_ITEM_ACTIVE_TYPE';\nexport const CLEAR_SELECTED_ITEM_ACTIVE_TYPES = 'CLEAR_SELECTED_ITEM_ACTIVE_TYPES';\nexport const DEFAULT_STATE_SELECTED_ID = null;\nexport const DEFAULT_STATE_SELECTED_ISLOADING = false;\nexport const DEFAULT_STATE_SELECTED_SHOWDESCRIPTION = false;\nexport const DEFAULT_STATE_SELECTED_ITEM_ACTIVE_TYPES = {};\nexport const NON_EXISTING_DASHBOARD_ID = '0';\n\nconst id = (state = DEFAULT_STATE_SELECTED_ID, action) => {\n  switch (action.type) {\n    case SET_SELECTED_ID:\n      return validateReducer(action.value, DEFAULT_STATE_SELECTED_ID);\n\n    default:\n      return state;\n  }\n};\n\nconst isLoading = (state = DEFAULT_STATE_SELECTED_ISLOADING, action) => {\n  switch (action.type) {\n    case SET_SELECTED_ISLOADING:\n      return validateReducer(action.value, DEFAULT_STATE_SELECTED_ISLOADING);\n\n    default:\n      return state;\n  }\n};\n\nconst showDescription = (state = DEFAULT_STATE_SELECTED_SHOWDESCRIPTION, action) => {\n  switch (action.type) {\n    case SET_SELECTED_SHOWDESCRIPTION:\n      return validateReducer(action.value, DEFAULT_STATE_SELECTED_SHOWDESCRIPTION);\n\n    default:\n      return state;\n  }\n};\n\nconst itemActiveTypes = (state = DEFAULT_STATE_SELECTED_ITEM_ACTIVE_TYPES, action) => {\n  switch (action.type) {\n    case SET_SELECTED_ITEM_ACTIVE_TYPE:\n      {\n        return { ...state,\n          [action.id]: action.activeType\n        };\n      }\n\n    case CLEAR_SELECTED_ITEM_ACTIVE_TYPES:\n      {\n        return DEFAULT_STATE_SELECTED_ITEM_ACTIVE_TYPES;\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  id,\n  isLoading,\n  showDescription,\n  itemActiveTypes\n}); // Selectors\n\nexport const sGetSelectedRoot = state => state.selected;\nexport const sGetSelectedId = state => sGetSelectedRoot(state).id;\nexport const sGetSelectedIsLoading = state => sGetSelectedRoot(state).isLoading;\nexport const sGetSelectedShowDescription = state => sGetSelectedRoot(state).showDescription;\nexport const sGetSelectedItemActiveType = (state, id) => sGetSelectedRoot(state).itemActiveTypes[id];","import { getInstance } from 'd2';\nexport const NAMESPACE = 'dashboard';\nexport const hasNamespace = async (d2) => await d2.currentUser.dataStore.has(NAMESPACE);\nexport const getNamespace = async (d2, hasNamespace) => hasNamespace ? await d2.currentUser.dataStore.get(NAMESPACE) : await d2.currentUser.dataStore.create(NAMESPACE);\nexport const apiPostUserDataStoreValue = async (key, value) => {\n  const d2 = await getInstance();\n  const ns = await getNamespace(d2, hasNamespace);\n  return ns.set(key, value);\n};\nexport const apiGetUserDataStoreValue = async (key, defaultValue) => {\n  const d2 = await getInstance();\n  const namespace = await getNamespace(d2, await hasNamespace(d2));\n  const hasKey = namespace?.keys?.find(k => k === key);\n\n  if (hasKey) {\n    return await namespace.get(key);\n  } else {\n    await apiPostUserDataStoreValue(key, defaultValue, namespace);\n    console.log('(These errors to /userDataStore can be ignored)');\n    return defaultValue;\n  }\n};","import { apiGetUserDataStoreValue, apiPostUserDataStoreValue } from './userDataStore';\nimport { DEFAULT_STATE_CONTROLBAR_ROWS } from '../reducers/controlBar';\nconst KEY_CONTROLBAR_ROWS = 'controlBarRows';\nexport const apiGetControlBarRows = async () => await apiGetUserDataStoreValue(KEY_CONTROLBAR_ROWS, DEFAULT_STATE_CONTROLBAR_ROWS);\nexport const apiPostControlBarRows = async (value) => await apiPostUserDataStoreValue(KEY_CONTROLBAR_ROWS, value);","import { SET_CONTROLBAR_USER_ROWS } from '../reducers/controlBar';\nimport { apiGetControlBarRows } from '../api/controlBar'; // actions\n\nexport const acSetControlBarUserRows = rows => ({\n  type: SET_CONTROLBAR_USER_ROWS,\n  value: rows\n}); // thunks\n\nexport const tSetControlBarRows = () => async dispatch => {\n  const onSuccess = rows => {\n    dispatch(acSetControlBarUserRows(rows));\n  };\n\n  const onError = error => {\n    console.log('Error (apiGetControlBarRows): ', error);\n    return error;\n  };\n\n  try {\n    const controlBarRows = await apiGetControlBarRows();\n    return onSuccess(controlBarRows);\n  } catch (err) {\n    return onError(err);\n  }\n};","import React, { useState, useEffect, createRef } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport cx from 'classnames';\nimport arraySort from 'd2-utilizr/lib/arraySort';\nimport PropTypes from 'prop-types';\nimport ControlBar, { DRAG_HANDLE_HEIGHT } from './ControlBar';\nimport Chip from './DashboardItemChip';\nimport AddCircleIcon from '../../icons/AddCircle';\nimport Filter from './Filter';\nimport ShowMoreButton from './ShowMoreButton';\nimport { FIRST_ROW_PADDING_HEIGHT, MIN_ROW_COUNT, getRowsHeight, getControlBarHeight, getNumRowsFromHeight } from './controlBarDimensions';\nimport { useWindowDimensions } from '../WindowDimensionsProvider';\nimport { sGetDashboardsFilter } from '../../reducers/dashboardsFilter';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { sGetAllDashboards } from '../../reducers/dashboards';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { acSetControlBarUserRows } from '../../actions/controlBar';\nimport { apiPostControlBarRows } from '../../api/controlBar';\nimport { isSmallScreen } from '../../modules/smallScreen';\nimport classes from './styles/DashboardsBar.module.css';\nexport const MAX_ROW_COUNT = 10;\nexport const isDashboardBarMaxHeight = rows => rows === MAX_ROW_COUNT;\n\nconst DashboardsBar = ({\n  userRows,\n  onChangeHeight,\n  history,\n  dashboards,\n  selectedId,\n  filterText\n}) => {\n  const [rows, setRows] = useState(userRows);\n  const {\n    width\n  } = useWindowDimensions();\n  const ref = createRef();\n  useEffect(() => {\n    setRows(userRows);\n  }, [userRows]);\n\n  const isMaxHeight = () => isDashboardBarMaxHeight(rows);\n\n  const adjustHeight = newHeight => {\n    const newRows = Math.max(MIN_ROW_COUNT, getNumRowsFromHeight(newHeight - 52) // don't rush the transition to a bigger row count\n    );\n\n    if (newRows !== rows) {\n      onChangeHeight(Math.min(newRows, MAX_ROW_COUNT));\n    }\n  };\n\n  const onEndDrag = () => apiPostControlBarRows(rows);\n\n  const scrollToTop = () => {\n    if (isMaxHeight()) {\n      ref.current.scroll(0, 0);\n    }\n  };\n\n  const toggleMaxHeight = () => {\n    const newRows = isMaxHeight() ? userRows : MAX_ROW_COUNT;\n    scrollToTop();\n    setRows(newRows);\n  };\n\n  const cancelMaxHeight = () => {\n    scrollToTop();\n    setRows(userRows);\n  };\n\n  const onSelectDashboard = () => {\n    const id = getFilteredDashboards()[0]?.id;\n\n    if (id) {\n      history.push(id);\n    }\n  };\n\n  const getFilteredDashboards = () => {\n    const filteredDashboards = arraySort(Object.values(dashboards).filter(d => d.displayName.toLowerCase().includes(filterText.toLowerCase())), 'ASC', 'displayName');\n    return [...filteredDashboards.filter(d => d.starred), ...filteredDashboards.filter(d => !d.starred)];\n  };\n\n  const viewableRows = isSmallScreen(width) && !isMaxHeight() ? MIN_ROW_COUNT : rows;\n  const rowHeightProp = {\n    height: getRowsHeight(viewableRows) + FIRST_ROW_PADDING_HEIGHT\n  };\n\n  const getDashboardChips = () => {\n    const chips = getFilteredDashboards().map(dashboard => <Chip key={dashboard.id} label={dashboard.displayName} starred={dashboard.starred} dashboardId={dashboard.id} selected={dashboard.id === selectedId} onClick={cancelMaxHeight} />);\n\n    if (isSmallScreen(width)) {\n      const chipContainerClasses = cx(classes.chipContainer, isMaxHeight() ? classes.expanded : classes.collapsed);\n      return <div className={chipContainerClasses} style={rowHeightProp}>\n                    {chips}\n                </div>;\n    } else {\n      return chips;\n    }\n  };\n\n  const containerClass = cx(classes.container, isMaxHeight() ? classes.expanded : classes.collapsed);\n  return <>\n            <ControlBar height={getControlBarHeight(viewableRows)} onChangeHeight={!isSmallScreen(width) ? adjustHeight : null} onEndDrag={onEndDrag} isMaxHeight={isMaxHeight()}>\n                <div className={containerClass} ref={ref} style={rowHeightProp}>\n                    <div className={classes.controls}>\n                        <Link className={classes.newLink} to={'/new'} data-test=\"link-new-dashboard\">\n                            <AddCircleIcon />\n                        </Link>\n                        <Filter onKeypressEnter={onSelectDashboard} onToggleMaxHeight={toggleMaxHeight} isMaxHeight={isMaxHeight()} />\n                    </div>\n                    {getDashboardChips()}\n                </div>\n                <ShowMoreButton onClick={toggleMaxHeight} isMaxHeight={isMaxHeight()} disabled={userRows === MAX_ROW_COUNT} />\n            </ControlBar>\n            <div style={{\n      marginTop: getControlBarHeight(isSmallScreen(width) ? MIN_ROW_COUNT : userRows) + DRAG_HANDLE_HEIGHT\n    }} />\n        </>;\n};\n\nDashboardsBar.propTypes = {\n  dashboards: PropTypes.object,\n  filterText: PropTypes.string,\n  history: PropTypes.object,\n  selectedId: PropTypes.string,\n  userRows: PropTypes.number,\n  onChangeHeight: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  dashboards: sGetAllDashboards(state),\n  filterText: sGetDashboardsFilter(state),\n  selectedId: sGetSelectedId(state),\n  userRows: sGetControlBarUserRows(state)\n});\n\nconst mapDispatchToProps = {\n  onChangeHeight: acSetControlBarUserRows\n};\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(DashboardsBar));","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst NoContentMessage = ({\n  text\n}) => <div style={{\n  padding: '50px 10px',\n  textAlign: 'center',\n  fontSize: '15px',\n  fontWeight: 500,\n  color: colors.grey600\n}}>\n        {text}\n    </div>;\n\nNoContentMessage.propTypes = {\n  text: PropTypes.string\n};\nexport default NoContentMessage;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nexport const ThreeDots = () => <svg height=\"18\" viewBox=\"0 0 18 18\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"m4 7.5c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm10 0c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm-5 0c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5z\" fill=\"#6e7a8a\" />\n    </svg>;\nexport const SpeechBubble = () => <svg height=\"20\" viewBox=\"0 0 20 20\" width=\"20\" xmlns=\"http://www.w3.org/2000/svg\" style={{\n  margin: '3px 2px 0 2px'\n}} // Temporary fix for the misaligned icon, should be removed once the icon is replaced\n>\n        <path d=\"m20 2h-16c-1.1 0-1.99.9-1.99 2l-.01 18 4-4h14c1.1 0 2-.9 2-2v-12c0-1.1-.9-2-2-2zm-2 12h-12v-2h12zm0-3h-12v-2h12zm0-3h-12v-2h12z\" fill=\"#6e7a8a\" fillRule=\"evenodd\" transform=\"translate(-2 -2)\" />\n    </svg>;\nexport const Warning = () => <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" fill={colors.grey600}>\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z\" />\n    </svg>;\nexport const Fullscreen = () => <svg height=\"16\" viewBox=\"0 0 16 16\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"m6.85355339 9.14644661c.17356635.17356635.1928515.44299075.05785545.63785889l-.05785545.06924789-4.14755339 4.14644661h2.794c.24545989 0 .44960837.1768752.49194433.4101244l.00805567.0898756c0 .2454599-.17687516.4496084-.41012437.4919443l-.08987563.0080557h-4c-.24545989 0-.44960837-.1768752-.49194433-.4101244l-.00805567-.0898756v-4c0-.2761424.22385763-.5.5-.5.24545989 0 .44960837.1768752.49194433.4101244l.00805567.0898756v2.792l4.14644661-4.14555339c.19526215-.19526215.51184463-.19526215.70710678 0zm6.14644661-2.14644661v6h-6v-1h5v-5zm-4-4v1h-5v5h-1v-6zm5.5-2c.2454599 0 .4496084.17687516.4919443.41012437l.0080557.08987563v4c0 .27614237-.2238576.5-.5.5-.2454599 0-.4496084-.17687516-.4919443-.41012437l-.0080557-.08987563v-2.794l-4.14644661 4.14755339c-.19526215.19526215-.51184463.19526215-.70710678 0-.17356635-.17356635-.1928515-.44299075-.05785545-.63785889l.05785545-.06924789 4.14655339-4.14744661-2.793.001c-.2454599 0-.4496084-.17687516-.4919443-.41012437l-.0080557-.08987563c0-.24545989.1768752-.44960837.4101244-.49194433l.0898756-.00805567z\" fill=\"inherit\" />\n    </svg>;\nexport const ExitFullscreen = () => <svg height=\"16\" viewBox=\"0 0 16 16\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"m6.5 9c.24545989 0 .44960837.17687516.49194433.41012437l.00805567.08987563v4c0 .2761424-.22385763.5-.5.5-.24545989 0-.44960837-.1768752-.49194433-.4101244l-.00805567-.0898756v-2.794l-3.64644661 3.6475534c-.19526215.1952621-.51184463.1952621-.70710678 0-.17356635-.1735664-.1928515-.4429908-.05785545-.6378589l.05785545-.0692479 3.64555339-3.6464466h-2.792c-.24545989 0-.44960837-.17687516-.49194433-.41012437l-.00805567-.08987563c0-.24545989.17687516-.44960837.41012437-.49194433l.08987563-.00805567zm7.5-.5v5.5h-5.5v-1h4.5v-4.5zm-6.5-6.5v1h-4.5v4.5h-1v-5.5zm6.8535534-.35355339c.1735663.17356635.1928515.44299075.0578554.63785889l-.0578554.06924789-3.6475534 3.64644661h2.794c.2454599 0 .4496084.17687516.4919443.41012437l.0080557.08987563c0 .24545989-.1768752.44960837-.4101244.49194433l-.0898756.00805567h-4c-.24545989 0-.44960837-.17687516-.49194433-.41012437l-.00805567-.08987563v-4c0-.27614237.22385763-.5.5-.5.24545989 0 .44960837.17687516.49194433.41012437l.00805567.08987563v2.792l3.6464466-3.64555339c.1952622-.19526215.5118446-.19526215.7071068 0z\" fill=\"inherit\" />\n    </svg>;","import { apiGetUserDataStoreValue, apiPostUserDataStoreValue } from './userDataStore';\nimport { DEFAULT_STATE_SELECTED_SHOWDESCRIPTION } from '../reducers/selected';\nconst KEY_SHOW_DESCRIPTION = 'showDescription';\nexport const apiGetShowDescription = async () => await apiGetUserDataStoreValue(KEY_SHOW_DESCRIPTION, DEFAULT_STATE_SELECTED_SHOWDESCRIPTION);\nexport const apiPostShowDescription = value => apiPostUserDataStoreValue(KEY_SHOW_DESCRIPTION, value);","export const RECEIVED_USER = 'RECEIVED_USER';\nexport const DEFAULT_STATE_USER = {\n  id: '',\n  username: '',\n  uiLocale: '',\n  isSuperuser: false\n};\nexport default ((state = DEFAULT_STATE_USER, action) => {\n  switch (action.type) {\n    case RECEIVED_USER:\n      {\n        return fromD2ToUserObj(action.value);\n      }\n\n    default:\n      return state;\n  }\n});\n\nfunction fromD2ToUserObj(d2Object) {\n  return {\n    id: d2Object.id,\n    username: d2Object.username,\n    uiLocale: d2Object.settings.keyUiLocale,\n    isSuperuser: d2Object.authorities.has('ALL')\n  };\n} // selectors\n\n\nexport const sGetUserId = state => state.user.id;\nexport const sGetUserUsername = state => state.user.username;\nexport const sGetIsSuperuser = state => state.user.isSuperuser;\nexport const sGetUiLocale = state => state.user.uiLocale;","import { getDimensionById, DIMENSION_ID_PERIOD, DIMENSION_ID_ORGUNIT } from '@dhis2/analytics';\nexport const SET_DIMENSIONS = 'SET_DIMENSIONS';\nexport const DEFAULT_DIMENSIONS = [getDimensionById(DIMENSION_ID_PERIOD), getDimensionById(DIMENSION_ID_ORGUNIT)];\nexport default ((state = DEFAULT_DIMENSIONS, action) => {\n  switch (action.type) {\n    case SET_DIMENSIONS:\n      {\n        return [...DEFAULT_DIMENSIONS, ...action.value];\n      }\n\n    default:\n      return state;\n  }\n});\nexport const sGetDimensions = state => state.dimensions;","import { sGetDimensions } from './dimensions';\nimport { createSelector } from 'reselect';\nexport const CLEAR_ITEM_FILTERS = 'CLEAR_ITEM_FILTERS';\nexport const SET_ITEM_FILTERS = 'SET_ITEM_FILTERS';\nexport const ADD_ITEM_FILTER = 'ADD_ITEM_FILTER';\nexport const REMOVE_ITEM_FILTER = 'REMOVE_ITEM_FILTER';\nexport const DEFAULT_STATE_ITEM_FILTERS = {};\nexport default ((state = DEFAULT_STATE_ITEM_FILTERS, action) => {\n  switch (action.type) {\n    case ADD_ITEM_FILTER:\n      {\n        return { ...state,\n          [action.filter.id]: action.filter.value\n        };\n      }\n\n    case REMOVE_ITEM_FILTER:\n      {\n        const newState = { ...state\n        };\n        delete newState[action.id];\n        return newState;\n      }\n\n    case SET_ITEM_FILTERS:\n      {\n        return action.filters;\n      }\n\n    case CLEAR_ITEM_FILTERS:\n      {\n        return DEFAULT_STATE_ITEM_FILTERS;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetItemFiltersRoot = state => state.itemFilters; // simplify the filters structure to:\n// [{ id: 'pe', name: 'Period', values: [{ id: 2019: name: '2019' }, {id: 'LAST_MONTH', name: 'Last month' }]}, ...]\n\nexport const sGetNamedItemFilters = createSelector([sGetItemFiltersRoot, sGetDimensions], (filters, dimensions) => Object.keys(filters).reduce((arr, id) => {\n  arr.push({\n    id: id,\n    name: dimensions.find(dimension => dimension.id === id).name,\n    values: filters[id].map(value => ({\n      id: value.id,\n      name: value.displayName || value.name\n    }))\n  });\n  return arr;\n}, []));","import { ADD_ITEM_FILTER, REMOVE_ITEM_FILTER, SET_ITEM_FILTERS, CLEAR_ITEM_FILTERS } from '../reducers/itemFilters';\nexport const FILTER_ORG_UNIT = 'ou'; // actions\n\nexport const acAddItemFilter = filter => ({\n  type: ADD_ITEM_FILTER,\n  filter\n});\nexport const acRemoveItemFilter = id => ({\n  type: REMOVE_ITEM_FILTER,\n  id\n});\nexport const acClearItemFilters = () => ({\n  type: CLEAR_ITEM_FILTERS\n});\nexport const acSetItemFilters = filters => ({\n  type: SET_ITEM_FILTERS,\n  filters\n});","import update from 'immutability-helper';\nimport { arrayToIdMap } from '../modules/util';\nexport const RECEIVED_MESSAGES = 'RECEIVED_MESSAGES';\nexport default ((state = {}, action) => {\n  switch (action.type) {\n    case RECEIVED_MESSAGES:\n      {\n        const conversations = arrayToIdMap(action.value);\n        const newState = update(state, {\n          $merge: conversations\n        });\n        return newState;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetMessagesRoot = state => state.messages;","export const messageConversationsQuery = {\n  resource: 'messageConversations',\n  params: {\n    fields: 'id,messageCount,lastUpdated,messageType,displayName,read,messages[id,read,sender[id,displayName],text,lastUpdated]',\n    order: 'read:asc',\n    pageSize: 200\n  }\n};\nexport const getMessages = async dataEngine => {\n  try {\n    const {\n      messageConversations\n    } = await dataEngine.query({\n      messageConversations: messageConversationsQuery\n    });\n    return messageConversations.messageConversations;\n  } catch (error) {\n    console.log('Error:', error);\n  }\n};","import { RECEIVED_MESSAGES } from '../../../reducers/messages';\nimport { getMessages } from '../../../api/messages';\n\nconst onError = (action, error) => {\n  console.log(`Error in action ${action}: ${error}`);\n  return error;\n};\n\nexport const receivedMessages = value => ({\n  type: RECEIVED_MESSAGES,\n  value\n});\nexport const tGetMessages = dataEngine => async dispatch => {\n  try {\n    const messageConversations = await getMessages(dataEngine);\n    return dispatch(receivedMessages(messageConversations));\n  } catch (err) {\n    return onError('Get Messages', err);\n  }\n};","export const SET_ALERT_MESSAGE = 'SET_ALERT_MESSAGE';\nexport const CLEAR_ALERT_MESSAGE = 'CLEAR_ALERT_MESSAGE';\nexport const DEFAULT_STATE_ALERT = null;\nexport default ((state = DEFAULT_STATE_ALERT, action) => {\n  switch (action.type) {\n    case SET_ALERT_MESSAGE:\n      {\n        return action.value;\n      }\n\n    case CLEAR_ALERT_MESSAGE:\n      {\n        return DEFAULT_STATE_ALERT;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetAlertMessage = state => state.alert;","import { SET_ALERT_MESSAGE, CLEAR_ALERT_MESSAGE } from '../reducers/alert';\nexport const acSetAlertMessage = value => ({\n  type: SET_ALERT_MESSAGE,\n  value\n});\nexport const acClearAlertMessage = () => ({\n  type: CLEAR_ALERT_MESSAGE\n});","import { orObject } from '../modules/util';\nimport objectClean from 'd2-utilizr/lib/objectClean';\n/** @module reducers/visualizations */\n\nexport const ADD_VISUALIZATION = 'ADD_VISUALIZATION';\nexport const SET_ACTIVE_VISUALIZATION_TYPE = 'SET_ACTIVE_VISUALIZATION_TYPE';\nexport const CLEAR_VISUALIZATIONS = 'CLEAR_VISUALIZATIONS';\nexport const DEFAULT_STATE_VISUALIZATIONS = {};\n\nconst isEmpty = p => p === undefined || p === null;\n\nexport default ((state = DEFAULT_STATE_VISUALIZATIONS, action) => {\n  switch (action.type) {\n    case ADD_VISUALIZATION:\n      {\n        return { ...state,\n          [action.value.id]: objectClean({ ...orObject(state[action.value.id]),\n            ...action.value\n          }, isEmpty)\n        };\n      }\n\n    case CLEAR_VISUALIZATIONS:\n      {\n        return DEFAULT_STATE_VISUALIZATIONS;\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetVisualizationsRoot = state => state.visualizations; // selectors level 1\n\nexport const sGetVisualization = (state, id) => {\n  return sGetVisualizationsRoot(state)[id];\n};","import { ADD_VISUALIZATION, CLEAR_VISUALIZATIONS } from '../reducers/visualizations';\nexport const acAddVisualization = value => ({\n  type: ADD_VISUALIZATION,\n  value\n});\nexport const acClearVisualizations = () => ({\n  type: CLEAR_VISUALIZATIONS\n});","import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { getEndPointName, MAP } from '../modules/itemTypes';\nimport { getVisualizationId } from '../modules/item'; // Id, name\n\nexport const getIdNameFields = ({\n  rename\n} = {}) => ['id', `${rename ? 'displayName~rename(name)' : 'name,displayName'}`]; // Item\n\nexport const getItemFields = () => ['dimensionItem~rename(id)', 'displayName~rename(name)', 'dimensionItemType']; // Dimension\n\nexport const getDimensionFields = ({\n  withItems\n}) => arrayClean(['dimension', 'legendSet[id]', 'filter', 'programStage', withItems ? `items[${getItemFields().join(',')}]` : ``]); // Axis\n\nexport const getAxesFields = ({\n  withItems\n}) => [`columns[${getDimensionFields({\n  withItems\n}).join(',')}]`, `rows[${getDimensionFields({\n  withItems\n}).join(',')}]`, `filters[${getDimensionFields({\n  withItems\n}).join(',')}]`]; // Favorite\n\nexport const getFavoriteFields = ({\n  withDimensions,\n  withOptions\n}) => {\n  return arrayClean([`${getIdNameFields({\n    rename: true\n  }).join(',')}`, 'displayDescription~rename(description)', withDimensions ? `${getAxesFields({\n    withItems: true\n  }).join(',')}` : ``, withOptions ? ['*', '!attributeDimensions', '!attributeValues', '!category', '!categoryDimensions', '!categoryOptionGroupSetDimensions', '!columnDimensions', '!dataDimensionItems', '!dataElementDimensions', '!dataElementGroupSetDimensions', '!filterDimensions', '!itemOrganisationUnitGroups', '!lastUpdatedBy', '!organisationUnitGroupSetDimensions', '!organisationUnitLevels', '!organisationUnits', '!programIndicatorDimensions', '!relativePeriods', '!reportParams', '!rowDimensions', '!translations', '!userOrganisationUnit', '!userOrganisationUnitChildren', '!userOrganisationUnitGrandChildren'].join(',') : '']);\n};\nexport const getFavoritesFields = ({\n  withDimensions\n}) => [`reportTable[${getFavoriteFields({\n  withDimensions\n}).join(',')}]`, `chart[${['type', ...getFavoriteFields({\n  withDimensions\n})].join(',')}]`, `map[${getFavoriteFields({\n  withDimensions\n}).join(',')}]`, `eventReport[${getFavoriteFields({\n  withDimensions\n}).join(',')}]`, `eventChart[${getFavoriteFields({\n  withDimensions\n}).join(',')}]`]; // List item\n\nexport const getListItemFields = () => [`reports[${['type', ...getIdNameFields({\n  rename: true\n})].join(',')}]`, `resources[${getIdNameFields({\n  rename: true\n}).join(',')}]`, `users[${getIdNameFields({\n  rename: true\n}).join(',')}]`]; // Map\n\nexport const getMapFields = () => [`${getIdNameFields({\n  rename: true\n}).join(',')}`, 'user,longitude,latitude,zoom,basemap', `mapViews[${getFavoriteFields({\n  withDimensions: true,\n  withOptions: true\n})}]`]; // Api\n\nexport const apiFetchVisualization = async item => {\n  const id = getVisualizationId(item);\n  const fields = item.type === MAP ? getMapFields() : getFavoriteFields({\n    withDimensions: true,\n    withOptions: true\n  });\n  const d2 = await getInstance();\n  return await d2.Api.getApi().get(`${getEndPointName(item.type)}/${id}`, {\n    fields\n  });\n};","import arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { getListItemFields, getFavoritesFields, getIdNameFields } from './metadata'; // Helper functions\n\nexport const onError = error => console.log('Error: ', error); // Dashboard item\n\nexport const getDashboardItemsFields = ({\n  withFavorite\n} = {}) => arrayClean(['id', 'type', 'shape', 'x', 'y', 'width~rename(w)', 'height~rename(h)', 'messages', 'text', 'appKey', `${getListItemFields().join(',')}`, withFavorite ? `${getFavoritesFields({\n  withDimensions: withFavorite.withDimensions\n}).join(',')}` : ``]); // Dashboard\n\nexport const getDashboardFields = ({\n  withItems,\n  withFavorite\n} = {}) => arrayClean([`${getIdNameFields().join(',')}`, 'description', 'displayDescription', 'favorite', `user[${getIdNameFields({\n  rename: true\n}).join(',')}]`, 'created', 'lastUpdated', 'access', 'href', // needed for d2-ui-translations-dialog, since we don't pass a d2 Model anymore\nwithItems ? `dashboardItems[${getDashboardItemsFields({\n  withFavorite\n}).join(',')}]` : ``]);","import arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { onError, getDashboardFields } from './index';\nexport const dashboardsQuery = {\n  resource: 'dashboards',\n  params: {\n    fields: [getDashboardFields(), 'dashboardItems[id]'].join(','),\n    paging: false\n  }\n};\nexport const dashboardQuery = {\n  resource: 'dashboards',\n  id: ({\n    id\n  }) => id,\n  params: {\n    fields: arrayClean(getDashboardFields({\n      withItems: true,\n      withFavorite: {\n        withDimensions: false\n      }\n    })).join(',')\n  }\n};\nexport const deleteDashboardMutation = {\n  type: 'delete',\n  resource: 'dashboards',\n  id: ({\n    id\n  }) => id\n}; // Get \"all\" dashboards on startup\n\nexport const apiFetchDashboards = async dataEngine => {\n  try {\n    const dashboardsData = await dataEngine.query({\n      dashboards: dashboardsQuery\n    });\n    return dashboardsData.dashboards.dashboards;\n  } catch (error) {\n    onError(error);\n  }\n}; // Get more info about selected dashboard\n\nexport const apiFetchDashboard = async (dataEngine, id) => {\n  try {\n    const dashboardData = await dataEngine.query({\n      dashboard: dashboardQuery\n    }, {\n      variables: {\n        id\n      }\n    });\n    return dashboardData.dashboard;\n  } catch (error) {\n    onError(error);\n  }\n};\nexport const apiDeleteDashboard = async (dataEngine, id) => {\n  try {\n    await dataEngine.mutate(deleteDashboardMutation, {\n      variables: {\n        id\n      }\n    });\n  } catch (error) {\n    onError(error);\n  }\n};","import i18n from '@dhis2/d2-i18n';\nimport { getCustomDashboards, sGetDashboardById } from '../reducers/dashboards';\nimport { SET_SELECTED_ID, SET_SELECTED_ISLOADING, SET_SELECTED_SHOWDESCRIPTION, SET_SELECTED_ITEM_ACTIVE_TYPE, CLEAR_SELECTED_ITEM_ACTIVE_TYPES, sGetSelectedIsLoading, sGetSelectedId } from '../reducers/selected';\nimport { sGetUserUsername } from '../reducers/user';\nimport { acSetDashboardItems, acAppendDashboards } from './dashboards';\nimport { acClearItemFilters } from './itemFilters';\nimport { tGetMessages } from '../components/Item/MessagesItem/actions';\nimport { acSetAlertMessage, acClearAlertMessage } from './alert';\nimport { acAddVisualization, acClearVisualizations } from './visualizations';\nimport { apiFetchDashboard } from '../api/dashboards';\nimport { storePreferredDashboardId } from '../api/localStorage';\nimport { apiGetShowDescription } from '../api/description';\nimport { withShape } from '../modules/gridUtil';\nimport { getVisualizationFromItem } from '../modules/item';\nimport { REPORT_TABLE, CHART, MAP, EVENT_REPORT, EVENT_CHART, MESSAGES } from '../modules/itemTypes'; // actions\n\nexport const acSetSelectedId = value => ({\n  type: SET_SELECTED_ID,\n  value\n});\nexport const acSetSelectedIsLoading = value => ({\n  type: SET_SELECTED_ISLOADING,\n  value\n});\nexport const acSetSelectedShowDescription = value => ({\n  type: SET_SELECTED_SHOWDESCRIPTION,\n  value\n});\nexport const acSetSelectedItemActiveType = (id, activeType) => {\n  const action = {\n    type: SET_SELECTED_ITEM_ACTIVE_TYPE,\n    id,\n    activeType\n  };\n  return action;\n};\nexport const acClearSelectedItemActiveTypes = () => ({\n  type: CLEAR_SELECTED_ITEM_ACTIVE_TYPES\n}); // thunks\n\nexport const tSetSelectedDashboardById = id => async (dispatch, getState, dataEngine) => {\n  dispatch(acSetSelectedIsLoading(true));\n  const alertTimeout = setTimeout(() => {\n    const name = sGetDashboardById(getState(), id)?.displayName;\n\n    if (sGetSelectedIsLoading(getState()) && name) {\n      dispatch(acSetAlertMessage(i18n.t('Loading dashboard – {{name}}', {\n        name\n      })));\n    }\n  }, 500);\n\n  const onSuccess = selected => {\n    dispatch(acAppendDashboards(selected));\n    const customDashboard = getCustomDashboards(selected)[0];\n    dispatch(acSetDashboardItems(withShape(customDashboard.dashboardItems)));\n    storePreferredDashboardId(sGetUserUsername(getState()), id);\n\n    if (id !== sGetSelectedId(getState())) {\n      dispatch(acClearItemFilters());\n      dispatch(acClearVisualizations());\n      dispatch(acClearSelectedItemActiveTypes());\n    }\n\n    customDashboard.dashboardItems.forEach(item => {\n      switch (item.type) {\n        case REPORT_TABLE:\n        case CHART:\n        case MAP:\n        case EVENT_REPORT:\n        case EVENT_CHART:\n          dispatch(acAddVisualization(getVisualizationFromItem(item)));\n          break;\n\n        case MESSAGES:\n          dispatch(tGetMessages(dataEngine));\n          break;\n\n        default:\n          break;\n      }\n    });\n    dispatch(acSetSelectedId(id));\n    dispatch(acSetSelectedIsLoading(false));\n    clearTimeout(alertTimeout);\n    dispatch(acClearAlertMessage());\n    return selected;\n  };\n\n  try {\n    const dashboard = await apiFetchDashboard(dataEngine, id);\n    return onSuccess(dashboard);\n  } catch (err) {\n    console.error('Error: ', err);\n    return err;\n  }\n};\nexport const tSetShowDescription = () => async dispatch => {\n  const onSuccess = value => {\n    dispatch(acSetSelectedShowDescription(value));\n  };\n\n  try {\n    const showDescription = await apiGetShowDescription();\n    return onSuccess(showDescription);\n  } catch (err) {\n    console.error('Error (apiGetShowDescription): ', err);\n    return err;\n  }\n};","export const getPreferredDashboardId = username => localStorage.getItem(`dhis2.dashboard.current.${username}`) || undefined;\nexport const storePreferredDashboardId = (username, dashboardId) => {\n  localStorage.setItem(`dhis2.dashboard.current.${username}`, dashboardId);\n};","import { SET_DASHBOARDS, ADD_DASHBOARDS, SET_DASHBOARD_STARRED, SET_DASHBOARD_DISPLAY_NAME, SET_DASHBOARD_ITEMS, getCustomDashboards, sGetDashboardById, sGetDashboardsSortedByStarred } from '../reducers/dashboards';\nimport { NON_EXISTING_DASHBOARD_ID } from '../reducers/selected';\nimport { sGetUserUsername } from '../reducers/user';\nimport { tSetSelectedDashboardById, acSetSelectedId } from './selected';\nimport { apiFetchDashboards, apiDeleteDashboard } from '../api/dashboards';\nimport { getPreferredDashboardId } from '../api/localStorage';\nimport { arrayToIdMap } from '../modules/util'; // actions\n\nexport const acSetDashboards = dashboards => ({\n  type: SET_DASHBOARDS,\n  value: arrayToIdMap(getCustomDashboards(dashboards))\n});\nexport const acAppendDashboards = dashboards => ({\n  type: ADD_DASHBOARDS,\n  value: arrayToIdMap(getCustomDashboards(dashboards))\n});\nexport const acSetDashboardStarred = (dashboardId, isStarred) => ({\n  type: SET_DASHBOARD_STARRED,\n  dashboardId: dashboardId,\n  value: isStarred\n});\nexport const acSetDashboardDisplayName = (dashboardId, value) => ({\n  type: SET_DASHBOARD_DISPLAY_NAME,\n  dashboardId,\n  value\n});\nexport const acSetDashboardItems = value => ({\n  type: SET_DASHBOARD_ITEMS,\n  value\n}); // thunks\n\nexport const tFetchDashboards = () => async (dispatch, getState, dataEngine) => {\n  const dashboards = await apiFetchDashboards(dataEngine);\n  dispatch(acSetDashboards(dashboards));\n};\nexport const tSelectDashboard = id => async (dispatch, getState) => {\n  try {\n    const state = getState();\n    let dashboardToSelect = null;\n\n    if (id) {\n      dashboardToSelect = sGetDashboardById(state, id) || null;\n    } else {\n      const preferredId = getPreferredDashboardId(sGetUserUsername(state));\n      const dash = sGetDashboardById(state, preferredId);\n      dashboardToSelect = preferredId && dash ? dash : sGetDashboardsSortedByStarred(state)[0];\n    }\n\n    if (dashboardToSelect) {\n      dispatch(tSetSelectedDashboardById(dashboardToSelect.id));\n    } else {\n      dispatch(acSetSelectedId(NON_EXISTING_DASHBOARD_ID));\n    }\n  } catch (err) {\n    console.error('Error (apiFetchDashboards): ', err);\n    return err;\n  }\n};\nexport const tDeleteDashboard = id => async (dispatch, getState, dataEngine) => {\n  try {\n    await apiDeleteDashboard(dataEngine, id);\n    await dispatch(tFetchDashboards());\n    return Promise.resolve();\n  } catch (err) {\n    console.error('Error (deleteDashboard): ', err);\n    return err;\n  }\n};","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { useD2 } from '@dhis2/app-runtime-adapter-d2';\nimport { Button, Modal, ModalTitle, ModalContent, ModalActions, ButtonStrip } from '@dhis2/ui';\nimport { PeriodDimension, DynamicDimension, OrgUnitDimension, DIMENSION_ID_PERIOD, DIMENSION_ID_ORGUNIT } from '@dhis2/analytics';\nimport { acAddItemFilter, acRemoveItemFilter } from '../../actions/itemFilters';\nimport { sGetItemFiltersRoot } from '../../reducers/itemFilters';\nimport { useSystemSettings } from '../SystemSettingsProvider';\n\nconst FilterDialog = ({\n  dimension,\n  initiallySelectedItems,\n  addItemFilter,\n  removeItemFilter,\n  onClose\n}) => {\n  const [filters, setFilters] = useState(initiallySelectedItems);\n  const {\n    d2\n  } = useD2({});\n  const {\n    settings\n  } = useSystemSettings();\n\n  const onSelectItems = ({\n    dimensionId,\n    items\n  }) => {\n    setFilters({\n      [dimensionId]: items\n    });\n  };\n\n  const onDeselectItems = ({\n    dimensionId,\n    itemIdsToRemove\n  }) => {\n    const oldList = filters[dimensionId] || [];\n    const newList = oldList.filter(item => !itemIdsToRemove.includes(item.id));\n    setFilters({ ...filters,\n      [dimensionId]: newList\n    });\n  };\n\n  const onReorderItems = ({\n    dimensionId,\n    itemIds\n  }) => {\n    const oldList = filters[dimensionId] || [];\n    const reorderedList = itemIds.map(id => oldList.find(item => item.id === id));\n    setFilters({ ...filters,\n      [dimensionId]: reorderedList\n    });\n  };\n\n  const saveFilter = () => {\n    const id = dimension.id;\n    const filterItems = filters[id];\n\n    if (filterItems && filterItems.length) {\n      addItemFilter({\n        id,\n        value: [...filterItems]\n      });\n    } else {\n      removeItemFilter(id);\n    }\n\n    onClose(id);\n  };\n\n  const renderDialogContent = () => {\n    const commonProps = {\n      d2,\n      onSelect: onSelectItems,\n      onDeselect: onDeselectItems,\n      onReorder: onReorderItems\n    };\n    const selectedItems = filters[dimension.id] || [];\n\n    switch (dimension.id) {\n      case DIMENSION_ID_PERIOD:\n        {\n          return <PeriodDimension selectedPeriods={selectedItems} onSelect={commonProps.onSelect} />;\n        }\n\n      case DIMENSION_ID_ORGUNIT:\n        return <OrgUnitDimension displayNameProperty={settings.displayNameProperty} ouItems={selectedItems} {...commonProps} />;\n\n      default:\n        return <DynamicDimension selectedItems={selectedItems} dimensionId={dimension.id} onSelect={commonProps.onSelect} />;\n    }\n  };\n\n  return <>\n            {dimension.id && <Modal dataTest={`${dimension.id}-dimension-modal`} onClose={onClose} position=\"top\" large>\n                    <ModalTitle>{dimension.name}</ModalTitle>\n                    <ModalContent>{renderDialogContent()}</ModalContent>\n                    <ModalActions>\n                        <ButtonStrip>\n                            <Button secondary onClick={onClose}>\n                                {i18n.t('Cancel')}\n                            </Button>\n                            <Button primary onClick={saveFilter}>\n                                {i18n.t('Confirm')}\n                            </Button>\n                        </ButtonStrip>\n                    </ModalActions>\n                </Modal>}\n        </>;\n};\n\nFilterDialog.propTypes = {\n  addItemFilter: PropTypes.func,\n  dimension: PropTypes.object,\n  initiallySelectedItems: PropTypes.object,\n  removeItemFilter: PropTypes.func,\n  onClose: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  initiallySelectedItems: sGetItemFiltersRoot(state)\n});\n\nexport default connect(mapStateToProps, {\n  addItemFilter: acAddItemFilter,\n  removeItemFilter: acRemoveItemFilter\n})(FilterDialog);","export const SET_ACTIVE_MODAL_DIMENSION = 'SET_ACTIVE_MODAL_DIMENSION';\nexport const CLEAR_ACTIVE_MODAL_DIMENSION = 'CLEAR_ACTIVE_MODAL_DIMENSION';\nexport const DEFAULT_STATE_ACTIVE_MODAL_DIMENSION = {};\nexport default ((state = DEFAULT_STATE_ACTIVE_MODAL_DIMENSION, action) => {\n  switch (action.type) {\n    case SET_ACTIVE_MODAL_DIMENSION:\n      {\n        return action.value;\n      }\n\n    case CLEAR_ACTIVE_MODAL_DIMENSION:\n      {\n        return DEFAULT_STATE_ACTIVE_MODAL_DIMENSION;\n      }\n\n    default:\n      return state;\n  }\n});\nexport const sGetActiveModalDimension = state => state.activeModalDimension;","import { SET_ACTIVE_MODAL_DIMENSION, CLEAR_ACTIVE_MODAL_DIMENSION } from '../reducers/activeModalDimension';\nexport const acSetActiveModalDimension = value => ({\n  type: SET_ACTIVE_MODAL_DIMENSION,\n  value\n});\nexport const acClearActiveModalDimension = () => ({\n  type: CLEAR_ACTIVE_MODAL_DIMENSION\n});","import React, { useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport isEmpty from 'lodash/isEmpty';\nimport i18n from '@dhis2/d2-i18n';\nimport { DimensionsPanel } from '@dhis2/analytics';\nimport { Button, Popover } from '@dhis2/ui';\nimport FilterDialog from './FilterDialog';\nimport { sGetActiveModalDimension } from '../../reducers/activeModalDimension';\nimport { sGetDimensions } from '../../reducers/dimensions';\nimport { sGetItemFiltersRoot } from '../../reducers/itemFilters';\nimport { acClearActiveModalDimension, acSetActiveModalDimension } from '../../actions/activeModalDimension';\nimport classes from './styles/FilterSelector.module.css';\n\nconst FilterSelector = props => {\n  const [showPopover, setShowPopover] = useState(false);\n  const ref = useRef(null);\n\n  const onCloseDialog = () => {\n    setShowPopover(false);\n    props.clearActiveModalDimension();\n  };\n\n  const selectDimension = id => {\n    props.setActiveModalDimension(props.dimensions.find(dimension => dimension.id === id));\n  };\n\n  return <>\n            <span className={classes.buttonContainer} ref={ref}>\n                <Button onClick={() => setShowPopover(true)}>\n                    {i18n.t('Add filter')}\n                    <ArrowDropDownIcon />\n                </Button>\n            </span>\n            {showPopover && <Popover onClickOutside={onCloseDialog} reference={ref} arrow={true} placement=\"bottom-start\" dataTest=\"dashboard-filter-popover\">\n                    <DimensionsPanel style={{\n        width: '320px'\n      }} dimensions={props.dimensions} onDimensionClick={selectDimension} selectedIds={Object.keys(props.initiallySelectedItems)} />\n                </Popover>}\n            {!isEmpty(props.dimension) ? <FilterDialog dimension={props.dimension} onClose={onCloseDialog} /> : null}\n        </>;\n};\n\nconst mapStateToProps = state => ({\n  dimension: sGetActiveModalDimension(state),\n  dimensions: sGetDimensions(state),\n  initiallySelectedItems: sGetItemFiltersRoot(state)\n});\n\nFilterSelector.propTypes = {\n  clearActiveModalDimension: PropTypes.func,\n  dimension: PropTypes.object,\n  dimensions: PropTypes.array,\n  initiallySelectedItems: PropTypes.object,\n  setActiveModalDimension: PropTypes.func\n};\nexport default connect(mapStateToProps, {\n  clearActiveModalDimension: acClearActiveModalDimension,\n  setActiveModalDimension: acSetActiveModalDimension\n})(FilterSelector);","import React, { useState, createRef } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { Link, Redirect } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport SharingDialog from '@dhis2/d2-ui-sharing-dialog';\nimport { useDataEngine, useAlert } from '@dhis2/app-runtime';\nimport Star from '@material-ui/icons/Star';\nimport StarBorder from '@material-ui/icons/StarBorder';\nimport { Button, FlyoutMenu, Popover, MenuItem, colors } from '@dhis2/ui';\nimport { useD2 } from '@dhis2/app-runtime-adapter-d2';\nimport { ThreeDots } from '../Item/VisualizationItem/assets/icons';\nimport { orObject } from '../../modules/util';\nimport { apiStarDashboard } from '../../api/starDashboard';\nimport { apiPostShowDescription } from '../../api/description';\nimport { acSetDashboardStarred } from '../../actions/dashboards';\nimport { acSetSelectedShowDescription } from '../../actions/selected';\nimport FilterSelector from '../ItemFilter/FilterSelector';\nimport { sGetSelectedId, sGetSelectedShowDescription } from '../../reducers/selected';\nimport { sGetDashboardById, sGetDashboardItems, EMPTY_DASHBOARD } from '../../reducers/dashboards';\nimport classes from './styles/ViewTitleBar.module.css';\n\nconst ViewTitleBar = ({\n  id,\n  name,\n  description,\n  access,\n  showDescription,\n  starred,\n  setDashboardStarred,\n  updateShowDescription\n}) => {\n  const [moreOptionsIsOpen, setMoreOptionsIsOpen] = useState(false);\n  const [sharingDialogIsOpen, setSharingDialogIsOpen] = useState(false);\n  const [redirectUrl, setRedirectUrl] = useState(null);\n  const {\n    d2\n  } = useD2({});\n  const dataEngine = useDataEngine();\n  const warningAlert = useAlert(({\n    msg\n  }) => msg, {\n    warning: true\n  });\n\n  const toggleSharingDialog = () => setSharingDialogIsOpen(!sharingDialogIsOpen);\n\n  const toggleMoreOptions = () => setMoreOptionsIsOpen(!moreOptionsIsOpen);\n\n  const printLayout = () => setRedirectUrl(`${id}/printlayout`);\n\n  const printOipp = () => setRedirectUrl(`${id}/printoipp`);\n\n  const StarIcon = starred ? Star : StarBorder;\n\n  if (redirectUrl) {\n    return <Redirect to={redirectUrl} />;\n  }\n\n  const showHideDescriptionLabel = showDescription ? i18n.t('Hide description') : i18n.t('Show description');\n\n  const onToggleShowDescription = () => apiPostShowDescription(!showDescription).then(() => {\n    updateShowDescription(!showDescription);\n    toggleMoreOptions();\n  }).catch(() => {\n    const msg = showDescription ? i18n.t('Failed to hide description') : i18n.t('Failed to show description');\n    warningAlert.show({\n      msg\n    });\n  });\n\n  const toggleStarredDashboardLabel = starred ? i18n.t('Unstar dashboard') : i18n.t('Star dashboard');\n\n  const onToggleStarredDashboard = () => apiStarDashboard(dataEngine, id, !starred).then(() => {\n    setDashboardStarred(id, !starred);\n\n    if (moreOptionsIsOpen) {\n      toggleMoreOptions();\n    }\n  }).catch(() => {\n    const msg = starred ? i18n.t('Failed to unstar the dashboard') : i18n.t('Failed to star the dashboard');\n    warningAlert.show({\n      msg\n    });\n  });\n\n  const buttonRef = createRef();\n  const userAccess = orObject(access);\n  const descriptionClasses = cx(classes.descContainer, description ? classes.desc : classes.noDesc);\n\n  const getMoreButton = (className, useSmall) => <Button className={className} small={useSmall} onClick={toggleMoreOptions}>\n            <ThreeDots />\n            <span className={classes.moreText}>{i18n.t('More')}</span>\n        </Button>;\n\n  return <>\n            <div className={classes.container}>\n                <div className={classes.titleBar}>\n                    <span className={classes.title} data-test=\"view-dashboard-title\">\n                        {name}\n                    </span>\n                    <div className={classes.actions}>\n                        <div className={classes.star} onClick={onToggleStarredDashboard} data-test=\"button-star-dashboard\">\n                            <StarIcon style={{\n              fill: colors.grey600\n            }} data-test={starred ? 'dashboard-starred' : 'dashboard-unstarred'} />\n                        </div>\n                        <div className={classes.strip}>\n                            {userAccess.update ? <Link className={classes.editLink} to={`/${id}/edit`} data-test=\"link-edit-dashboard\">\n                                    <Button>{i18n.t('Edit')}</Button>\n                                </Link> : null}\n                            {userAccess.manage ? <Button className={classes.shareButton} onClick={toggleSharingDialog}>\n                                    {i18n.t('Share')}\n                                </Button> : null}\n                            <FilterSelector />\n                            <span ref={buttonRef}>\n                                {getMoreButton(classes.moreButton, false)}\n                                {getMoreButton(classes.moreButtonSmall, true)}\n                            </span>\n                        </div>\n                        {moreOptionsIsOpen && <Popover reference={buttonRef} placement=\"bottom-start\" onClickOutside={toggleMoreOptions}>\n                                <FlyoutMenu>\n                                    <MenuItem dense label={toggleStarredDashboardLabel} onClick={onToggleStarredDashboard} />\n                                    <MenuItem dense label={showHideDescriptionLabel} onClick={onToggleShowDescription} />\n                                    <MenuItem dense label={i18n.t('Print')} dataTest=\"print-menu-item\">\n                                        <MenuItem dense label={i18n.t('Dashboard layout')} onClick={printLayout} dataTest=\"print-layout-menu-item\" />\n                                        <MenuItem dense label={i18n.t('One item per page')} onClick={printOipp} dataTest=\"print-oipp-menu-item\" />\n                                    </MenuItem>\n                                </FlyoutMenu>\n                            </Popover>}\n                    </div>\n                </div>\n                {showDescription && <div className={descriptionClasses} data-test=\"dashboard-description\">\n                        {description || i18n.t('No description')}\n                    </div>}\n            </div>\n            {id && <SharingDialog d2={d2} id={id} type=\"dashboard\" open={sharingDialogIsOpen} onRequestClose={toggleSharingDialog} />}\n        </>;\n};\n\nViewTitleBar.propTypes = {\n  access: PropTypes.object,\n  description: PropTypes.string,\n  id: PropTypes.string,\n  name: PropTypes.string,\n  setDashboardStarred: PropTypes.func,\n  showDescription: PropTypes.bool,\n  starred: PropTypes.bool,\n  updateShowDescription: PropTypes.func\n};\nViewTitleBar.defaultProps = {\n  name: '',\n  description: '',\n  starred: false,\n  showDescription: false\n};\n\nconst mapStateToProps = state => {\n  const id = sGetSelectedId(state);\n  const dashboard = sGetDashboardById(state, id) || EMPTY_DASHBOARD;\n  return {\n    id,\n    name: dashboard.displayName,\n    description: dashboard.displayDescription,\n    dashboardItems: sGetDashboardItems(state),\n    showDescription: sGetSelectedShowDescription(state),\n    starred: dashboard.starred,\n    access: dashboard.access\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setDashboardStarred: acSetDashboardStarred,\n  updateShowDescription: acSetSelectedShowDescription\n})(ViewTitleBar);","export const getStarDashboardMutation = id => ({\n  type: 'create',\n  resource: `dashboards/${id}/favorite`\n});\nexport const getUnstarDashboardMutation = id => ({\n  type: 'delete',\n  resource: `dashboards/${id}/favorite`\n});\nexport const apiStarDashboard = (dataEngine, id, isStarred) => {\n  const mutation = isStarred ? getStarDashboardMutation(id) : getUnstarDashboardMutation(id);\n  return dataEngine.mutate(mutation);\n};","import React, { useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { useD2 } from '@dhis2/app-runtime-adapter-d2';\nimport { useConfig } from '@dhis2/app-runtime';\nimport { load, unmount } from './plugin';\nimport getGridItemDomId from '../../../../modules/getGridItemDomId';\n\nconst DefaultPlugin = ({\n  item,\n  activeType,\n  visualization,\n  options,\n  style\n}) => {\n  const {\n    d2\n  } = useD2({});\n  const {\n    baseUrl\n  } = useConfig();\n  const credentials = {\n    baseUrl,\n    auth: d2.Api.getApi().defaultHeaders.Authorization\n  };\n  const prevItem = useRef();\n  const prevActiveType = useRef();\n  useEffect(() => {\n    load(item, visualization, {\n      credentials,\n      activeType,\n      options\n    });\n    prevItem.current = item;\n    prevActiveType.current = activeType;\n    return () => unmount(item, activeType);\n  }, []);\n  useEffect(() => {\n    if (shouldPluginReload()) {\n      unmount(item, prevActiveType.current);\n      load(item, visualization, {\n        credentials,\n        activeType\n      });\n    }\n\n    prevItem.current = item;\n    prevActiveType.current = activeType;\n  }, [item, visualization, activeType]);\n  /**\n   * Prevent unnecessary re-rendering\n   * TODO: fix this hack\n   */\n\n  const shouldPluginReload = () => {\n    const reloadAllowed = prevItem.current === item;\n    const visChanged = prevActiveType.current !== activeType;\n    return reloadAllowed && visChanged;\n  };\n\n  return <div id={getGridItemDomId(item.id)} style={style} />;\n};\n\nDefaultPlugin.propTypes = {\n  activeType: PropTypes.string,\n  item: PropTypes.object,\n  options: PropTypes.object,\n  style: PropTypes.object,\n  visualization: PropTypes.object\n};\nDefaultPlugin.defaultProps = {\n  style: {},\n  item: {},\n  options: {},\n  visualization: {}\n};\nexport default DefaultPlugin;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classes from './styles/NoVisualizationMessage.module.css';\n\nconst NoVisualizationMessage = ({\n  message\n}) => {\n  return <div className={classes.message}>{message}</div>;\n};\n\nNoVisualizationMessage.propTypes = {\n  message: PropTypes.string\n};\nexport default NoVisualizationMessage;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport DefaultPlugin from './DefaultPlugin';\nimport { MAP } from '../../../../modules/itemTypes';\nimport { pluginIsAvailable } from './plugin';\nimport NoVisualizationMessage from './NoVisualizationMessage';\n\nconst MapPlugin = ({\n  applyFilters,\n  ...props\n}) => {\n  if (props.item.type === MAP) {\n    // apply filters only to thematic and event layers\n    // for maps AO\n    const mapViews = props.visualization.mapViews.map(mapView => {\n      if (mapView.layer.includes('thematic') || mapView.layer.includes('event')) {\n        return applyFilters(mapView, props.itemFilters);\n      }\n\n      return mapView;\n    });\n    props.visualization = { ...props.visualization,\n      mapViews\n    };\n  } else {\n    // this is the case of a non map AO passed to the maps plugin\n    // due to a visualization type switch in dashboard item\n    // maps plugin takes care of converting the AO to a suitable format\n    props.visualization = applyFilters(props.visualization, props.itemFilters);\n  }\n\n  return pluginIsAvailable(props.activeType || props.item.type) ? <DefaultPlugin options={{\n    hideTitle: true\n  }} {...props} /> : <NoVisualizationMessage message={i18n.t('Unable to load the plugin for this item')} />;\n};\n\nMapPlugin.propTypes = {\n  activeType: PropTypes.string,\n  applyFilters: PropTypes.func,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object,\n  visualization: PropTypes.object\n};\nexport default MapPlugin;","import React from 'react';\nimport { CircularLoader } from '@dhis2/ui';\nimport classes from './styles/LoadingMask.module.css';\n\nconst LoadingMask = () => {\n  return <div className={classes.center}>\n            <CircularLoader />\n        </div>;\n};\n\nexport default LoadingMask;","const getFilteredVisualization = (visualization, filters) => {\n  if (!Object.keys(filters).length) {\n    return visualization;\n  } // deep clone objects in filters to avoid changing the visualization in the Redux store\n\n\n  const visRows = visualization.rows.map(obj => ({ ...obj\n  }));\n  const visColumns = visualization.columns.map(obj => ({ ...obj\n  }));\n  const visFilters = visualization.filters.map(obj => ({ ...obj\n  }));\n  Object.keys(filters).forEach(dimensionId => {\n    if (filters[dimensionId]) {\n      let dimensionFound = false;\n      [visRows, visColumns, visFilters].forEach(dimensionObjects => dimensionObjects.filter(obj => obj.dimension === dimensionId).forEach(obj => {\n        dimensionFound = true;\n        obj.items = filters[dimensionId];\n      })); // add dimension to filters if not already present elsewhere\n\n      if (!dimensionFound) {\n        visFilters.push({\n          dimension: dimensionId,\n          items: filters[dimensionId]\n        });\n      }\n    }\n  });\n  return { ...visualization,\n    rows: visRows,\n    columns: visColumns,\n    filters: visFilters\n  };\n};\n\nexport default getFilteredVisualization;","import { VIS_TYPE_COLUMN, VIS_TYPE_PIVOT_TABLE, getAdaptedUiLayoutByType } from '@dhis2/analytics';\nimport { REPORT_TABLE, CHART, MAP } from '../../../../modules/itemTypes';\nexport const THEMATIC_LAYER = 'thematic';\n\nconst extractMapView = map => map.mapViews && map.mapViews.find(mv => mv.layer.includes(THEMATIC_LAYER));\n\nconst getWithoutId = object => ({ ...object,\n  id: undefined\n});\n\nconst getVisualizationConfig = (visualization, originalType, activeType) => {\n  if (originalType === MAP && originalType !== activeType) {\n    const extractedMapView = extractMapView(visualization);\n\n    if (extractedMapView === undefined) {\n      return null;\n    }\n\n    return getWithoutId({ ...visualization,\n      ...extractedMapView,\n      mapViews: undefined,\n      type: activeType === CHART ? VIS_TYPE_COLUMN : VIS_TYPE_PIVOT_TABLE\n    });\n  } else if (originalType === REPORT_TABLE && activeType === CHART) {\n    const layout = getAdaptedUiLayoutByType(visualization, VIS_TYPE_COLUMN);\n    return getWithoutId({ ...visualization,\n      ...layout,\n      type: VIS_TYPE_COLUMN\n    });\n  } else if (originalType === CHART && activeType === REPORT_TABLE) {\n    const layout = getAdaptedUiLayoutByType(visualization, VIS_TYPE_PIVOT_TABLE);\n    return getWithoutId({ ...visualization,\n      ...layout,\n      type: VIS_TYPE_PIVOT_TABLE\n    });\n  }\n\n  return getWithoutId(visualization);\n};\n\nexport default getVisualizationConfig;","// Note that this ignores discrepancies in 'this', so shouldn't be used with bound functions\n// This is useful instead of lodash/memoize when we only need to memoize a single value\n// Inspiration: https://github.com/alexreardon/memoize-one\nconst memoizeOne = fn => {\n  let lastArgs = undefined;\n  let lastValue = undefined;\n  return (...args) => {\n    if (lastArgs && args.length === lastArgs.length && args.every((arg, i) => arg === lastArgs[i])) {\n      return lastValue;\n    }\n\n    lastArgs = args;\n    lastValue = fn(...args);\n    return lastValue;\n  };\n};\n\nexport default memoizeOne;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport VisualizationPlugin from '@dhis2/data-visualizer-plugin';\nimport i18n from '@dhis2/d2-i18n';\nimport { D2Shim } from '@dhis2/app-runtime-adapter-d2';\nimport DefaultPlugin from './DefaultPlugin';\nimport MapPlugin from './MapPlugin';\nimport LoadingMask from './LoadingMask';\nimport NoVisualizationMessage from './NoVisualizationMessage';\nimport getFilteredVisualization from './getFilteredVisualization';\nimport getVisualizationConfig from './getVisualizationConfig';\nimport { VISUALIZATION, MAP, CHART, REPORT_TABLE } from '../../../../modules/itemTypes';\nimport { getVisualizationId } from '../../../../modules/item';\nimport memoizeOne from '../../../../modules/memoizeOne';\nimport { sGetVisualization } from '../../../../reducers/visualizations';\nimport { pluginIsAvailable } from './plugin';\n\nclass Visualization extends React.Component {\n  state = {\n    pluginLoaded: false\n  };\n\n  constructor(props) {\n    super(props);\n    this.memoizedGetFilteredVisualization = memoizeOne(getFilteredVisualization);\n    this.memoizedGetVisualizationConfig = memoizeOne(getVisualizationConfig);\n  }\n\n  onLoadingComplete = () => {\n    this.setState({\n      pluginLoaded: true\n    });\n  };\n\n  render() {\n    const {\n      visualization,\n      activeType,\n      item,\n      itemFilters,\n      availableHeight,\n      availableWidth\n    } = this.props;\n\n    if (!visualization) {\n      return <NoVisualizationMessage message={i18n.t('No data to display')} />;\n    }\n\n    const style = {\n      height: availableHeight\n    };\n\n    if (availableWidth) {\n      style.width = availableWidth;\n    }\n\n    const pluginProps = {\n      item,\n      itemFilters,\n      activeType,\n      style,\n      visualization: this.memoizedGetVisualizationConfig(visualization, item.type, activeType)\n    };\n\n    switch (activeType) {\n      case VISUALIZATION:\n      case CHART:\n      case REPORT_TABLE:\n        {\n          return <>\n                        {!this.state.pluginLoaded && <div style={pluginProps.style}>\n                                <LoadingMask />\n                            </div>}\n                        <D2Shim d2Config={{}}>\n                            {({\n                d2\n              }) => <VisualizationPlugin d2={d2} visualization={this.memoizedGetFilteredVisualization(pluginProps.visualization, pluginProps.itemFilters)} onLoadingComplete={this.onLoadingComplete} forDashboard={true} style={pluginProps.style} />}\n                        </D2Shim>\n                    </>;\n        }\n\n      case MAP:\n        {\n          return <MapPlugin applyFilters={this.memoizedGetFilteredVisualization} {...pluginProps} />;\n        }\n\n      default:\n        {\n          pluginProps.visualization = this.memoizedGetFilteredVisualization(pluginProps.visualization, pluginProps.itemFilters);\n          return pluginIsAvailable(pluginProps.activeType || pluginProps.item.type) ? <DefaultPlugin {...pluginProps} /> : <NoVisualizationMessage message={i18n.t('Unable to load the plugin for this item')} />;\n        }\n    }\n  }\n\n}\n\nVisualization.propTypes = {\n  activeType: PropTypes.string,\n  availableHeight: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  availableWidth: PropTypes.number,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object,\n  visualization: PropTypes.object\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    visualization: sGetVisualization(state, getVisualizationId(ownProps.item))\n  };\n};\n\nexport default connect(mapStateToProps)(Visualization);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Warning } from './assets/icons';\nimport classes from './styles/FatalErrorBoundary.module.css';\n\nclass FatalErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      errorFound: false\n    };\n  }\n\n  componentDidCatch(error, info) {\n    this.setState({\n      errorFound: true\n    });\n    console.log('error: ', error);\n    console.log('info: ', info);\n  }\n\n  render() {\n    if (this.state.errorFound) {\n      return <p className={classes.container}>\n                    <span className={classes.icon}>\n                        <Warning />\n                    </span>\n                    <span className={classes.message}>\n                        {i18n.t('There was a problem loading this dashboard item')}\n                    </span>\n                </p>;\n    }\n\n    return this.props.children;\n  }\n\n}\n\nFatalErrorBoundary.propTypes = {\n  children: PropTypes.node\n};\nexport default FatalErrorBoundary;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classes from './styles/ItemHeader.module.css';\n\nconst ViewItemActions = ({\n  actionButtons\n}) => {\n  return actionButtons ? <div className={classes.itemActionsWrap}>{actionButtons}</div> : null;\n};\n\nViewItemActions.propTypes = {\n  actionButtons: PropTypes.node\n};\nexport default ViewItemActions;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { colors } from '@dhis2/ui';\nimport classes from './styles/DeleteItemButton.module.css';\n\nconst DeleteItemButton = ({\n  onClick\n}) => <button type=\"button\" className={classes.deleteItemButton} onClick={onClick} title={i18n.t(`Delete item`)}>\n        <DeleteIcon style={{\n    fill: colors.red500\n  }} />\n    </button>;\n\nDeleteItemButton.propTypes = {\n  onClick: PropTypes.func\n};\nexport default DeleteItemButton;","/** @module reducers/editDashboard */\nimport update from 'immutability-helper';\nimport isEmpty from 'lodash/isEmpty';\nimport { orArray, orObject } from '../modules/util';\nexport const RECEIVED_EDIT_DASHBOARD = 'RECEIVED_EDIT_DASHBOARD';\nexport const RECEIVED_NOT_EDITING = 'RECEIVED_NOT_EDITING';\nexport const START_NEW_DASHBOARD = 'START_NEW_DASHBOARD';\nexport const RECEIVED_TITLE = 'RECEIVED_TITLE';\nexport const RECEIVED_DESCRIPTION = 'RECEIVED_DESCRIPTION';\nexport const ADD_DASHBOARD_ITEM = 'ADD_DASHBOARD_ITEM';\nexport const REMOVE_DASHBOARD_ITEM = 'REMOVE_DASHBOARD_ITEM';\nexport const UPDATE_DASHBOARD_ITEM = 'UPDATE_DASHBOARD_ITEM';\nexport const RECEIVED_DASHBOARD_LAYOUT = 'RECEIVED_DASHBOARD_LAYOUT';\nexport const SET_PRINT_PREVIEW_VIEW = 'SET_PRINT_PREVIEW_VIEW';\nexport const CLEAR_PRINT_PREVIEW_VIEW = 'CLEAR_PRINT_PREVIEW_VIEW';\nexport const DEFAULT_STATE_EDIT_DASHBOARD = {};\nexport const NEW_DASHBOARD_STATE = {\n  id: '',\n  name: '',\n  access: {},\n  description: '',\n  dashboardItems: [],\n  printPreviewView: false\n};\nexport default ((state = DEFAULT_STATE_EDIT_DASHBOARD, action) => {\n  switch (action.type) {\n    case RECEIVED_EDIT_DASHBOARD:\n      {\n        const newState = {};\n        Object.keys(NEW_DASHBOARD_STATE).map(k => newState[k] = action.value[k]);\n        newState.printPreviewView = false;\n        return newState;\n      }\n\n    case RECEIVED_NOT_EDITING:\n      return DEFAULT_STATE_EDIT_DASHBOARD;\n\n    case SET_PRINT_PREVIEW_VIEW:\n      return Object.assign({}, state, {\n        printPreviewView: true\n      });\n\n    case CLEAR_PRINT_PREVIEW_VIEW:\n      return Object.assign({}, state, {\n        printPreviewView: false\n      });\n\n    case START_NEW_DASHBOARD:\n      return NEW_DASHBOARD_STATE;\n\n    case RECEIVED_TITLE:\n      {\n        return Object.assign({}, state, {\n          name: action.value\n        });\n      }\n\n    case RECEIVED_DESCRIPTION:\n      {\n        return Object.assign({}, state, {\n          description: action.value\n        });\n      }\n\n    case ADD_DASHBOARD_ITEM:\n      if (!action.value.position) {\n        return update(state, {\n          dashboardItems: {\n            $unshift: [action.value]\n          }\n        });\n      }\n\n      return update(state, {\n        dashboardItems: {\n          $splice: [[parseInt(action.value.position), 0, action.value]]\n        }\n      });\n\n    case REMOVE_DASHBOARD_ITEM:\n      {\n        const idToRemove = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === idToRemove);\n\n        if (dashboardItemIndex > -1) {\n          return update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1]]\n            }\n          });\n        }\n\n        return state;\n      }\n\n    case RECEIVED_DASHBOARD_LAYOUT:\n      {\n        const stateItems = orArray(state.dashboardItems);\n        let layoutHasChanged = false;\n        const newStateItems = action.value.map(({\n          x,\n          y,\n          w,\n          h,\n          i\n        }) => {\n          const stateItem = stateItems.find(si => si.id === i);\n\n          if (!(stateItem.x === x && stateItem.y === y && stateItem.w === w && stateItem.h === h)) {\n            layoutHasChanged = true;\n            return Object.assign({}, stateItem, {\n              w,\n              h,\n              x,\n              y\n            });\n          }\n\n          return stateItem;\n        });\n        return layoutHasChanged ? { ...state,\n          dashboardItems: newStateItems\n        } : state;\n      }\n\n    case UPDATE_DASHBOARD_ITEM:\n      {\n        const dashboardItem = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === dashboardItem.id);\n\n        if (dashboardItemIndex > -1) {\n          const newState = update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1, Object.assign({}, dashboardItem)]]\n            }\n          });\n          return newState;\n        }\n\n        return state;\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetEditDashboardRoot = state => state.editDashboard; // selectors\n\nexport const sGetIsEditing = state => !isEmpty(state.editDashboard);\nexport const sGetIsPrintPreviewView = state => sGetEditDashboardRoot(state).printPreviewView;\nexport const sGetIsNewDashboard = state => {\n  return !isEmpty(state.editDashboard) && sGetEditDashboardRoot(state).id === '';\n};\nexport const sGetEditDashboardName = state => sGetEditDashboardRoot(state).name;\nexport const sGetEditDashboardDescription = state => sGetEditDashboardRoot(state).description;\nexport const sGetEditDashboardItems = state => orObject(sGetEditDashboardRoot(state)).dashboardItems;","import { apiFetchDashboard } from './dashboards';\nexport const createDashboardMutation = {\n  resource: 'dashboards',\n  type: 'create',\n  data: ({\n    data\n  }) => data\n};\nexport const updateDashboardMutation = {\n  resource: 'dashboards',\n  type: 'update',\n  id: ({\n    id\n  }) => id,\n  data: ({\n    data\n  }) => data\n};\n\nconst generatePayload = (dashboard = {}, data) => {\n  return { ...dashboard,\n    name: data.name,\n    description: data.description,\n    dashboardItems: data.dashboardItems.map(item => ({ ...item,\n      width: item.w,\n      height: item.h\n    }))\n  };\n};\n\nexport const updateDashboard = async (dataEngine, data) => {\n  const dashboard = await apiFetchDashboard(dataEngine, data.id);\n  const {\n    response\n  } = await dataEngine.mutate(updateDashboardMutation, {\n    variables: {\n      id: data.id,\n      data: generatePayload(dashboard, data)\n    }\n  });\n  return response.uid;\n};\nexport const postDashboard = async (dataEngine, data) => {\n  const {\n    response\n  } = await dataEngine.mutate(createDashboardMutation, {\n    variables: {\n      data: generatePayload({}, data)\n    }\n  });\n  return response.uid;\n};","import { generateUid } from 'd2/uid';\nimport i18n from '@dhis2/d2-i18n';\nimport { RECEIVED_EDIT_DASHBOARD, START_NEW_DASHBOARD, RECEIVED_NOT_EDITING, RECEIVED_TITLE, RECEIVED_DESCRIPTION, RECEIVED_DASHBOARD_LAYOUT, ADD_DASHBOARD_ITEM, UPDATE_DASHBOARD_ITEM, REMOVE_DASHBOARD_ITEM, SET_PRINT_PREVIEW_VIEW, CLEAR_PRINT_PREVIEW_VIEW, sGetEditDashboardRoot } from '../reducers/editDashboard';\nimport { tFetchDashboards } from './dashboards';\nimport { updateDashboard, postDashboard } from '../api/editDashboard';\nimport { NEW_ITEM_SHAPE, getGridItemProperties, getPageBreakItemShape, getPrintTitlePageItemShape } from '../modules/gridUtil';\nimport { itemTypeMap, PAGEBREAK, PRINT_TITLE_PAGE } from '../modules/itemTypes';\nimport { convertUiItemsToBackend } from '../modules/uiBackendItemConverter'; // actions\n\nexport const acSetEditDashboard = (dashboard, items) => {\n  const val = { ...dashboard,\n    dashboardItems: items\n  };\n  return {\n    type: RECEIVED_EDIT_DASHBOARD,\n    value: val\n  };\n};\nexport const acSetEditNewDashboard = () => ({\n  type: START_NEW_DASHBOARD\n});\nexport const acClearEditDashboard = () => ({\n  type: RECEIVED_NOT_EDITING\n});\nexport const acSetPrintPreviewView = () => ({\n  type: SET_PRINT_PREVIEW_VIEW\n});\nexport const acClearPrintPreviewView = () => ({\n  type: CLEAR_PRINT_PREVIEW_VIEW\n});\nexport const acSetDashboardTitle = value => ({\n  type: RECEIVED_TITLE,\n  value\n});\nexport const acSetDashboardDescription = value => ({\n  type: RECEIVED_DESCRIPTION,\n  value\n});\nexport const acUpdateDashboardLayout = value => ({\n  type: RECEIVED_DASHBOARD_LAYOUT,\n  value\n});\nexport const acAddDashboardItem = item => {\n  const type = item.type;\n  delete item.type;\n  const itemPropName = itemTypeMap[type].propName;\n  const id = generateUid();\n  const gridItemProperties = getGridItemProperties(id);\n  let shape;\n\n  if (type === PAGEBREAK) {\n    const yPos = item.yPos || 0;\n    shape = getPageBreakItemShape(yPos, item.isStatic);\n  } else if (type === PRINT_TITLE_PAGE) {\n    shape = getPrintTitlePageItemShape();\n  } else {\n    shape = NEW_ITEM_SHAPE;\n  }\n\n  return {\n    type: ADD_DASHBOARD_ITEM,\n    value: {\n      id,\n      type,\n      position: item.position || null,\n      [itemPropName]: item.content,\n      ...NEW_ITEM_SHAPE,\n      ...gridItemProperties,\n      ...shape\n    }\n  };\n};\nexport const acUpdateDashboardItem = item => ({\n  type: UPDATE_DASHBOARD_ITEM,\n  value: item\n});\nexport const acRemoveDashboardItem = value => ({\n  type: REMOVE_DASHBOARD_ITEM,\n  value\n}); // thunks\n\nexport const tSaveDashboard = () => async (dispatch, getState, dataEngine) => {\n  const dashboard = sGetEditDashboardRoot(getState());\n  const dashboardToSave = { ...dashboard,\n    dashboardItems: convertUiItemsToBackend(dashboard.dashboardItems),\n    name: dashboard.name || i18n.t('Untitled dashboard')\n  };\n  const dashboardId = dashboardToSave.id ? await updateDashboard(dataEngine, dashboardToSave) : await postDashboard(dataEngine, dashboardToSave); // update the dashboard list\n\n  await dispatch(tFetchDashboards());\n  return Promise.resolve(dashboardId);\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport DeleteItemButton from './DeleteItemButton';\nimport { acRemoveDashboardItem } from '../../../actions/editDashboard';\nimport classes from './styles/ItemHeader.module.css';\n\nconst EditItemActions = ({\n  itemId,\n  acRemoveDashboardItem\n}) => {\n  const handleDeleteItem = () => acRemoveDashboardItem(itemId);\n\n  return <div className={classes.itemActionsWrap}>\n            <DeleteItemButton onClick={handleDeleteItem} />\n        </div>;\n};\n\nEditItemActions.propTypes = {\n  acRemoveDashboardItem: PropTypes.func,\n  itemId: PropTypes.string\n};\nconst mapDispatchToProps = {\n  acRemoveDashboardItem\n};\nexport default connect(null, mapDispatchToProps)(EditItemActions);","import React from 'react';\nimport { colors } from '@dhis2/ui';\n\nconst WarningIcon = () => <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" fill={colors.grey600}>\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z\" />\n    </svg>;\n\nexport default WarningIcon;","import React from 'react';\nimport { Tooltip } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport InfoIcon from '../../../icons/Info';\nimport classes from './styles/PrintItemInfo.module.css';\n\nconst PrintWarning = () => <div className={classes.warning}>\n        <Tooltip content={i18n.t('This item has been shortened to fit on one page')} placement=\"bottom\">\n            <InfoIcon />\n        </Tooltip>\n    </div>;\n\nexport default PrintWarning;","export const EDIT = 'edit';\nexport const NEW = 'new';\nexport const VIEW = 'view';\nexport const PRINT = 'print';\nexport const PRINT_LAYOUT = 'print-layout';\nexport const isEditMode = mode => [EDIT, NEW].includes(mode);\nexport const isPrintMode = mode => [PRINT, PRINT_LAYOUT].includes(mode);\nexport const isViewMode = mode => mode === VIEW;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ViewItemActions from './ViewItemActions';\nimport EditItemActions from './EditItemActions';\nimport PrintItemInfo from './PrintItemInfo';\nimport { VIEW, EDIT, PRINT_LAYOUT } from '../../Dashboard/dashboardModes';\nimport classes from './styles/ItemHeader.module.css';\n\nconst getItemActionsMap = isShortened => {\n  return {\n    [VIEW]: ViewItemActions,\n    [EDIT]: EditItemActions,\n    [PRINT_LAYOUT]: isShortened ? PrintItemInfo : null\n  };\n}; // This is the margin-top + margin-bottom defined in the css file\n\n\nexport const HEADER_MARGIN_HEIGHT = 12;\nconst ItemHeader = React.forwardRef(({\n  dashboardMode,\n  title,\n  isShortened,\n  ...rest\n}, ref) => {\n  const Actions = getItemActionsMap(isShortened)[dashboardMode];\n  return <div className={classes.itemHeaderWrap} ref={ref}>\n                <p className={classes.itemTitle}>{title}</p>\n                {Actions ? <Actions {...rest} /> : null}\n            </div>;\n});\nItemHeader.displayName = 'ItemHeader';\nItemHeader.propTypes = {\n  dashboardMode: PropTypes.string,\n  isShortened: PropTypes.bool,\n  title: PropTypes.string\n};\nexport default connect(null, null, null, {\n  forwardRef: true\n})(ItemHeader);","import React, { useState, createRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { useConfig } from '@dhis2/app-runtime';\nimport { isSingleValue, isYearOverYear, VIS_TYPE_GAUGE, VIS_TYPE_PIE } from '@dhis2/analytics';\nimport { Button, Menu, Popover, MenuItem, Divider, colors } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport { ThreeDots, SpeechBubble, Fullscreen, ExitFullscreen } from './assets/icons';\nimport { getLink } from './Visualization/plugin';\nimport { CHART, MAP, REPORT_TABLE, EVENT_CHART, EVENT_REPORT, isTrackerDomainType, hasMapView, getAppName } from '../../../modules/itemTypes';\nimport { useSystemSettings } from '../../SystemSettingsProvider';\nconst iconFill = {\n  fill: colors.grey600\n};\n\nconst ItemHeaderButtons = props => {\n  const [menuIsOpen, setMenuIsOpen] = useState(props.isOpen);\n  const {\n    baseUrl\n  } = useConfig();\n  const {\n    item,\n    visualization,\n    onSelectActiveType,\n    activeType\n  } = props;\n  const {\n    openInRelevantApp,\n    showInterpretationsAndDetails,\n    switchViewType,\n    fullscreenAllowedInSettings\n  } = useSystemSettings().settings;\n  const isTrackerType = isTrackerDomainType(item.type);\n\n  const onViewTable = () => {\n    closeMenu();\n    onSelectActiveType(isTrackerType ? EVENT_REPORT : REPORT_TABLE);\n  };\n\n  const onViewChart = () => {\n    closeMenu();\n    onSelectActiveType(isTrackerType ? EVENT_CHART : CHART);\n  };\n\n  const onViewMap = () => {\n    closeMenu();\n    onSelectActiveType(MAP);\n  };\n\n  const itemHasMapView = () => hasMapView(item.type);\n\n  const handleInterpretationClick = () => {\n    props.onToggleFooter();\n\n    if (menuIsOpen) {\n      closeMenu();\n    }\n  };\n\n  const handleToggleFullscreenClick = () => {\n    props.onToggleFullscreen();\n    closeMenu();\n  };\n\n  const openMenu = () => setMenuIsOpen(true);\n\n  const closeMenu = () => setMenuIsOpen(false);\n\n  const type = visualization.type || item.type;\n  const canViewAs = switchViewType && !isSingleValue(type) && !isYearOverYear(type) && type !== VIS_TYPE_GAUGE && type !== VIS_TYPE_PIE;\n  const interpretationMenuLabel = props.activeFooter ? i18n.t(`Hide interpretations and details`) : i18n.t(`Show interpretations and details`);\n\n  const ViewAsMenuItems = () => <>\n            {activeType !== CHART && activeType !== EVENT_CHART && <MenuItem dense label={i18n.t('View as Chart')} onClick={onViewChart} icon={<ChartIcon style={iconFill} />} />}\n            {activeType !== REPORT_TABLE && activeType !== EVENT_REPORT && <MenuItem dense label={i18n.t('View as Table')} onClick={onViewTable} icon={<TableIcon style={iconFill} />} />}\n            {itemHasMapView() && activeType !== MAP && <MenuItem dense label={i18n.t('View as Map')} onClick={onViewMap} icon={<MapIcon style={iconFill} />} />}\n        </>;\n\n  const buttonRef = createRef();\n  const fullscreenAllowed = props.fullscreenSupported && fullscreenAllowedInSettings;\n\n  if (!openInRelevantApp && !showInterpretationsAndDetails && !switchViewType && !fullscreenAllowed) {\n    return null;\n  }\n\n  return props.isFullscreen ? <Button small secondary onClick={props.onToggleFullscreen}>\n            <ExitFullscreen />\n        </Button> : <>\n            <div ref={buttonRef}>\n                <Button small secondary onClick={openMenu} dataTest=\"dashboarditem-menu-button\">\n                    <ThreeDots />\n                </Button>\n            </div>\n            {menuIsOpen && <Popover reference={buttonRef} placement=\"auto-start\" arrow={false} onClickOutside={closeMenu}>\n                    <Menu>\n                        {canViewAs && <>\n                                <ViewAsMenuItems />\n                                {(showInterpretationsAndDetails || openInRelevantApp || fullscreenAllowed) && <Divider />}\n                            </>}\n                        {openInRelevantApp && <MenuItem dense icon={<LaunchIcon style={{\n          fill: '#6e7a8a'\n        }} />} label={i18n.t('Open in {{appName}} app', {\n          appName: getAppName(item.type)\n        })} href={getLink(item, baseUrl)} target=\"_blank\" />}\n                        {showInterpretationsAndDetails && <MenuItem dense icon={<SpeechBubble />} label={interpretationMenuLabel} onClick={handleInterpretationClick} />}\n                        {fullscreenAllowed && <MenuItem dense icon={<Fullscreen />} label={i18n.t('View fullscreen')} onClick={handleToggleFullscreenClick} />}\n                    </Menu>\n                </Popover>}\n        </>;\n};\n\nItemHeaderButtons.propTypes = {\n  activeFooter: PropTypes.bool,\n  activeType: PropTypes.string,\n  fullscreenSupported: PropTypes.bool,\n  isFullscreen: PropTypes.bool,\n  isOpen: PropTypes.bool,\n  item: PropTypes.object,\n  visualization: PropTypes.object,\n  onSelectActiveType: PropTypes.func,\n  onToggleFooter: PropTypes.func,\n  onToggleFullscreen: PropTypes.func\n};\nexport default ItemHeaderButtons;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getVisualizationId } from '../../../modules/item';\nimport InterpretationsComponent from '@dhis2/d2-ui-interpretations';\nimport { useD2 } from '@dhis2/app-runtime-adapter-d2';\nimport classes from './styles/ItemFooter.module.css';\n\nconst ItemFooter = props => {\n  const {\n    d2\n  } = useD2({});\n  return <div data-test=\"dashboarditem-footer\">\n            <hr className={classes.line} />\n            <div className={classes.scrollContainer}>\n                <InterpretationsComponent d2={d2} item={props.item} type={props.item.type.toLowerCase()} id={getVisualizationId(props.item)} appName=\"dashboard\" />\n            </div>\n        </div>;\n};\n\nItemFooter.propTypes = {\n  item: PropTypes.object.isRequired\n};\nexport default ItemFooter;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport uniqueId from 'lodash/uniqueId';\nimport Visualization from './Visualization/Visualization';\nimport FatalErrorBoundary from './FatalErrorBoundary';\nimport ItemHeader, { HEADER_MARGIN_HEIGHT } from '../ItemHeader/ItemHeader';\nimport ItemHeaderButtons from './ItemHeaderButtons';\nimport ItemFooter from './ItemFooter';\nimport { WindowDimensionsCtx } from '../../WindowDimensionsProvider';\nimport { SystemSettingsCtx } from '../../SystemSettingsProvider';\nimport { apiPostDataStatistics } from '../../../api/dataStatistics';\nimport { apiFetchVisualization } from '../../../api/metadata';\nimport { sGetVisualization } from '../../../reducers/visualizations';\nimport { sGetSelectedItemActiveType } from '../../../reducers/selected';\nimport { sGetIsEditing } from '../../../reducers/editDashboard';\nimport { sGetItemFiltersRoot, DEFAULT_STATE_ITEM_FILTERS } from '../../../reducers/itemFilters';\nimport { acAddVisualization } from '../../../actions/visualizations';\nimport { acSetSelectedItemActiveType } from '../../../actions/selected';\nimport { pluginIsAvailable, resize as pluginResize } from './Visualization/plugin';\nimport { getDataStatisticsName } from '../../../modules/itemTypes';\nimport { getVisualizationId, getVisualizationName } from '../../../modules/item';\nimport memoizeOne from '../../../modules/memoizeOne';\nimport { isEditMode, isPrintMode, isViewMode } from '../../Dashboard/dashboardModes';\nimport { getItemHeightPx } from '../../../modules/gridUtil';\nimport getGridItemDomId from '../../../modules/getGridItemDomId'; // this is set in the .dashboard-item-content css\n\nconst ITEM_CONTENT_PADDING = 4;\nexport class Item extends Component {\n  state = {\n    showFooter: false,\n    configLoaded: false,\n    isFullscreen: false\n  };\n\n  constructor(props) {\n    super(props);\n    this.contentRef = React.createRef();\n    this.headerRef = React.createRef();\n    this.itemDomElSelector = `.reactgriditem-${this.props.item.id}`;\n    this.memoizedGetContentHeight = memoizeOne((calculatedHeight, measuredHeight, preferMeasured) => preferMeasured ? measuredHeight || calculatedHeight : calculatedHeight);\n  }\n\n  async componentDidMount() {\n    this.props.updateVisualization(await apiFetchVisualization(this.props.item));\n\n    try {\n      if (this.props.settings.keyGatherAnalyticalObjectStatisticsInDashboardViews && isViewMode(this.props.dashboardMode)) {\n        await apiPostDataStatistics(getDataStatisticsName(this.props.item.type), getVisualizationId(this.props.item));\n      }\n    } catch (e) {\n      console.log(e);\n    }\n\n    this.setState({\n      configLoaded: true\n    });\n    const el = document.querySelector(this.itemDomElSelector);\n\n    if (el?.requestFullscreen) {\n      el.onfullscreenchange = this.handleFullscreenChange;\n    } else if (el?.webkitRequestFullscreen) {\n      el.onwebkitfullscreenchange = this.handleFullscreenChange;\n    }\n  }\n\n  componentWillUnmount() {\n    const el = document.querySelector(this.itemDomElSelector);\n\n    if (el?.onfullscreenchange) {\n      el.removeEventListener('onfullscreenchange', this.handleFullscreenChange);\n    } else if (el?.onwebkitfullscreenchange) {\n      el.removeEventListener('onwebkitfullscreenchange', this.handleFullscreenChange);\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.gridWidth !== this.props.gridWidth) {\n      const el = document.querySelector(`#${getGridItemDomId(this.props.item.id)}`);\n\n      if (typeof el?.setViewportSize === 'function') {\n        setTimeout(() => el.setViewportSize(el.clientWidth - 5, el.clientHeight - 5), 10);\n      } // call resize on Map item\n\n\n      pluginResize(this.props.item, this.state.isFullscreen);\n    }\n  }\n\n  isFullscreenSupported = () => {\n    const el = document.querySelector(this.itemDomElSelector);\n    return !!(el?.requestFullscreen || el?.webkitRequestFullscreen);\n  };\n  handleFullscreenChange = () => {\n    this.setState({\n      isFullscreen: !!document.fullscreenElement || !!document.webkitFullscreenElement\n    }, () => pluginResize(this.props.item, this.state.isFullscreen));\n  };\n  onToggleFullscreen = () => {\n    if (!this.state.isFullscreen) {\n      const el = document.querySelector(this.itemDomElSelector);\n\n      if (el?.requestFullscreen) {\n        el.requestFullscreen();\n      } else if (el?.webkitRequestFullscreen) {\n        el.webkitRequestFullscreen();\n      }\n    } else {\n      document.exitFullscreen ? document.exitFullscreen() : document.webkitExitFullscreen();\n    }\n  };\n  getUniqueKey = memoizeOne(() => uniqueId());\n  onToggleFooter = () => {\n    this.setState({\n      showFooter: !this.state.showFooter\n    }, this.props.onToggleItemExpanded(this.props.item.id));\n  };\n  setActiveType = type => {\n    type !== this.getActiveType() && this.props.setActiveType(this.props.item.id, type);\n  };\n  getActiveType = () => {\n    if (this.props.isEditing) {\n      return this.props.item.type;\n    }\n\n    return this.props.activeType || this.props.item.type;\n  };\n  getAvailableHeight = width => {\n    if (this.state.isFullscreen) {\n      return '95vh';\n    }\n\n    const calculatedHeight = getItemHeightPx(this.props.item, width) - this.headerRef.current.clientHeight - HEADER_MARGIN_HEIGHT - ITEM_CONTENT_PADDING;\n    return this.memoizedGetContentHeight(calculatedHeight, this.contentRef ? this.contentRef.offsetHeight : null, isEditMode(this.props.dashboardMode) || isPrintMode(this.props.dashboardMode));\n  };\n  getAvailableWidth = () => {\n    const rect = document.querySelector(this.itemDomElSelector)?.getBoundingClientRect();\n    return rect && rect.width - ITEM_CONTENT_PADDING * 2;\n  };\n\n  render() {\n    const {\n      item,\n      dashboardMode,\n      itemFilters\n    } = this.props;\n    const {\n      showFooter\n    } = this.state;\n    const activeType = this.getActiveType();\n    const actionButtons = pluginIsAvailable(activeType || item.type) ? <ItemHeaderButtons item={item} visualization={this.props.visualization} onSelectActiveType={this.setActiveType} onToggleFooter={this.onToggleFooter} onToggleFullscreen={this.onToggleFullscreen} activeType={activeType} activeFooter={showFooter} isFullscreen={this.state.isFullscreen} fullscreenSupported={this.isFullscreenSupported()} /> : null;\n    return <>\n                <ItemHeader title={getVisualizationName(item)} itemId={item.id} actionButtons={actionButtons} ref={this.headerRef} dashboardMode={dashboardMode} isShortened={item.shortened} />\n                <FatalErrorBoundary>\n                    <div key={this.getUniqueKey(itemFilters)} className=\"dashboard-item-content\" ref={ref => this.contentRef = ref}>\n                        {this.state.configLoaded && <WindowDimensionsCtx.Consumer>\n                                {dimensions => <Visualization item={item} activeType={activeType} itemFilters={itemFilters} availableHeight={this.getAvailableHeight(dimensions.width)} availableWidth={this.getAvailableWidth()} />}\n                            </WindowDimensionsCtx.Consumer>}\n                    </div>\n                </FatalErrorBoundary>\n                {isViewMode(dashboardMode) && showFooter ? <ItemFooter item={item} /> : null}\n            </>;\n  }\n\n}\nItem.propTypes = {\n  activeType: PropTypes.string,\n  dashboardMode: PropTypes.string,\n  gridWidth: PropTypes.number,\n  isEditing: PropTypes.bool,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object,\n  setActiveType: PropTypes.func,\n  settings: PropTypes.object,\n  updateVisualization: PropTypes.func,\n  visualization: PropTypes.object,\n  onToggleItemExpanded: PropTypes.func\n};\nItem.defaultProps = {\n  item: {},\n  onToggleItemExpanded: Function.prototype,\n  visualization: {}\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const itemFilters = !isEditMode(ownProps.dashboardMode) ? sGetItemFiltersRoot(state) : DEFAULT_STATE_ITEM_FILTERS;\n  return {\n    activeType: sGetSelectedItemActiveType(state, ownProps.item?.id),\n    isEditing: sGetIsEditing(state),\n    itemFilters,\n    visualization: sGetVisualization(state, getVisualizationId(ownProps.item))\n  };\n};\n\nconst mapDispatchToProps = {\n  setActiveType: acSetSelectedItemActiveType,\n  updateVisualization: acAddVisualization\n};\n\nconst ItemWithSettings = props => <SystemSettingsCtx.Consumer>\n        {({\n    settings\n  }) => <Item settings={settings} {...props} />}\n    </SystemSettingsCtx.Consumer>;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ItemWithSettings);","import React from 'react';\nimport { colors } from '@dhis2/ui';\nconst style = {\n  backgroundColor: colors.grey200,\n  border: 'none',\n  height: '1px',\n  margin: '0px 0px 5px 0px'\n};\n\nconst Line = () => <hr style={style} />;\n\nexport default Line;","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { colors } from '@dhis2/ui';\nimport { useConfig } from '@dhis2/app-runtime';\nimport { useD2 } from '@dhis2/app-runtime-adapter-d2';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport Line from '../../../widgets/Line';\nimport { sGetMessagesRoot } from '../../../reducers/messages';\nimport { formatDate } from '../../../modules/util';\nimport { isViewMode } from '../../Dashboard/dashboardModes';\nimport './MessagesItem.css';\nconst PRIVATE = 'PRIVATE';\nconst messageTypes = {\n  [PRIVATE]: 'Private',\n  VALIDATION_RESULT: 'Validation',\n  TICKET: 'Ticket',\n  SYSTEM: 'System'\n};\nconst style = {\n  list: {\n    listStyleType: 'none',\n    paddingLeft: '0px'\n  },\n  seeAll: {\n    textAlign: 'center',\n    fontSize: '13px',\n    marginBottom: '5px'\n  },\n  sender: {\n    fontSize: '13px',\n    lineHeight: '15px',\n    margin: 0,\n    color: colors.grey800\n  },\n  snippet: {\n    color: colors.grey800,\n    fontSize: '13px',\n    lineHeight: '15px',\n    maxHeight: '30px',\n    overflow: 'hidden'\n  }\n};\n\nconst MessagesItem = ({\n  messages,\n  item,\n  dashboardMode\n}) => {\n  const [uiLocale, setUiLocale] = useState('');\n  const {\n    d2\n  } = useD2({});\n  const {\n    baseUrl\n  } = useConfig();\n  useEffect(() => {\n    const getUiLocale = async () => {\n      const uiLocale = await d2.currentUser.userSettings.get('keyUiLocale');\n      setUiLocale(uiLocale);\n    };\n\n    getUiLocale();\n  }, []);\n\n  const getMessageHref = msg => {\n    const msgIdentifier = msg ? `#/${msg.messageType}/${msg.id}` : '';\n    return `${baseUrl}/dhis-web-messaging/${msgIdentifier}`;\n  };\n\n  const getMessageSender = msg => {\n    const latestMsg = msg.messages.slice(-1)[0];\n    return latestMsg.sender ? latestMsg.sender.displayName : '';\n  };\n\n  const getMessageItems = () => {\n    const modeClass = isViewMode(dashboardMode) ? 'view' : null;\n    return messages.map(msg => {\n      const redirectToMsg = () => {\n        if (isViewMode(dashboardMode)) {\n          document.location.href = getMessageHref(msg);\n        }\n      };\n\n      const sender = msg.messageType === PRIVATE ? getMessageSender(msg) : messageTypes[msg.messageType];\n      const readClass = !msg.read ? 'unread' : null;\n      const latestMsg = msg.messages.slice(-1)[0];\n      const msgDate = latestMsg.lastUpdated;\n      return <li className={`message-item ${modeClass}`} key={msg.id} onClick={redirectToMsg}>\n                    <p className={`message-title ${readClass}`}>\n                        {msg.displayName} ({msg.messageCount})\n                    </p>\n                    <p style={style.sender}>\n                        {sender} - {formatDate(msgDate, uiLocale)}\n                    </p>\n                    <p style={style.snippet}>{latestMsg.text}</p>\n                </li>;\n    });\n  };\n\n  return <>\n            <ItemHeader title={i18n.t('Messages')} itemId={item.id} dashboardMode={dashboardMode} isShortened={item.shortened} />\n            <Line />\n            {messages.length > 0 && <div className=\"dashboard-item-content\">\n                    <ul style={style.list}>{getMessageItems()}</ul>\n                    <div style={style.seeAll}>\n                        <a href={getMessageHref()}>\n                            {i18n.t('See all messages')}\n                        </a>\n                    </div>\n                </div>}\n        </>;\n};\n\nMessagesItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  messages: PropTypes.array\n};\n\nconst mapStateToProps = state => {\n  return {\n    messages: Object.values(sGetMessagesRoot(state))\n  };\n};\n\nconst MessagesContainer = connect(mapStateToProps, null)(MessagesItem);\nexport default MessagesContainer;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nconst NotSupportedItem = props => <>\n        <ItemHeader title={i18n.t('Item type \"{{type}}\" not supported', {\n    type: props.item.type\n  })} itemId={props.item.id} dashboardMode={props.dashboardMode} isShortened={props.item.shortened} />\n        <div style={{\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '90%'\n  }}>\n            <NotInterestedIcon style={{\n      width: 100,\n      height: 100,\n      align: 'center'\n    }} color=\"disabled\" />\n        </div>\n    </>;\n\nNotSupportedItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object\n};\nexport default NotSupportedItem;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst DescriptionIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill={colors.grey500}>\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M14 2H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6zm2 16H8v-2h8v2zm0-4H8v-2h8v2zm-3-5V3.5L18.5 9H13z\" />\n    </svg>;\n\nDescriptionIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default DescriptionIcon;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst DeleteIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill={colors.red500}>\n        <path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>;\n\nDeleteIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default DeleteIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { colors } from '@dhis2/ui';\nimport { useConfig } from '@dhis2/app-runtime';\nimport DescriptionIcon from '../../../icons/Description';\nimport DeleteIcon from '../../../icons/Delete';\nimport Line from '../../../widgets/Line';\nimport { itemTypeMap, getItemUrl } from '../../../modules/itemTypes';\nimport { orArray } from '../../../modules/util';\nimport { tRemoveListItemContent } from './actions';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport { isEditMode } from '../../Dashboard/dashboardModes';\nimport classes from './Item.module.css';\n\nconst getItemTitle = item => itemTypeMap[item.type].pluralTitle;\n\nconst getContentItems = item => orArray(item[itemTypeMap[item.type].propName]).filter((item, index, array) => array.findIndex(el => el.id === item.id) === index);\n\nconst ListItem = ({\n  item,\n  dashboardMode,\n  tRemoveListItemContent\n}) => {\n  const {\n    baseUrl\n  } = useConfig();\n  const contentItems = getContentItems(item);\n\n  const getLink = contentItem => {\n    const deleteButton = <button className={classes.deletebutton} onClick={() => tRemoveListItemContent(item, contentItem)}>\n                <DeleteIcon className={classes.deleteicon} />\n            </button>;\n    return <>\n                <a className={classes.link} style={{\n        color: colors.grey900\n      }} href={getItemUrl(item.type, contentItem, baseUrl)}>\n                    {contentItem.name}\n                </a>\n                {isEditMode(dashboardMode) ? deleteButton : null}\n            </>;\n  };\n\n  return <>\n            <ItemHeader title={getItemTitle(item)} itemId={item.id} dashboardMode={dashboardMode} isShortened={item.shortened} />\n            <Line />\n            <div className=\"dashboard-item-content\">\n                <ul className={classes.list}>\n                    {contentItems.map(contentItem => <li className={classes.item} key={contentItem.id}>\n                            <DescriptionIcon className={classes.itemicon} />\n                            {getLink(contentItem)}\n                        </li>)}\n                </ul>\n            </div>\n        </>;\n};\n\nListItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  tRemoveListItemContent: PropTypes.func\n};\nexport default connect(null, {\n  tRemoveListItemContent\n})(ListItem);","import { acUpdateDashboardItem, acRemoveDashboardItem } from '../../../actions/editDashboard';\nimport { itemTypeMap } from '../../../modules/itemTypes';\nexport const tRemoveListItemContent = (dashboardItem, content) => dispatch => {\n  const listItemType = itemTypeMap[dashboardItem.type].propName;\n  const newContent = dashboardItem[listItemType].filter(item => item.id !== content.id);\n\n  if (newContent.length) {\n    dashboardItem[listItemType] = newContent;\n    dispatch(acUpdateDashboardItem(dashboardItem));\n  } else {\n    dispatch(acRemoveDashboardItem(dashboardItem));\n  }\n};","/** @module reducers/editDashboard */\nimport update from 'immutability-helper';\nimport isEmpty from 'lodash/isEmpty';\nimport { orArray } from '../modules/util';\nexport const SET_PRINT_DASHBOARD = 'SET_PRINT_DASHBOARD';\nexport const CLEAR_PRINT_DASHBOARD = 'CLEAR_PRINT_DASHBOARD';\nexport const ADD_PRINT_DASHBOARD_ITEM = 'ADD_PRINT_DASHBOARD_ITEM';\nexport const SET_PRINT_DASHBOARD_LAYOUT = 'SET_PRINT_DASHBOARD_LAYOUT';\nexport const REMOVE_PRINT_DASHBOARD_ITEM = 'REMOVE_PRINT_DASHBOARD_ITEM';\nexport const UPDATE_PRINT_DASHBOARD_ITEM = 'UPDATE_PRINT_DASHBOARD_ITEM';\nexport const DEFAULT_STATE_PRINT_DASHBOARD = {};\nconst DEFAULT_DASHBOARD_ITEMS = [];\nexport const NEW_PRINT_DASHBOARD_STATE = {\n  id: '',\n  name: '',\n  access: {},\n  description: '',\n  dashboardItems: DEFAULT_DASHBOARD_ITEMS\n};\nexport default ((state = DEFAULT_STATE_PRINT_DASHBOARD, action) => {\n  switch (action.type) {\n    case SET_PRINT_DASHBOARD:\n      {\n        const newState = {};\n        Object.keys(NEW_PRINT_DASHBOARD_STATE).map(k => newState[k] = action.value[k]);\n        return newState;\n      }\n\n    case CLEAR_PRINT_DASHBOARD:\n      return DEFAULT_STATE_PRINT_DASHBOARD;\n\n    case ADD_PRINT_DASHBOARD_ITEM:\n      if (!action.value.position) {\n        return update(state, {\n          dashboardItems: {\n            $unshift: [action.value]\n          }\n        });\n      }\n\n      return update(state, {\n        dashboardItems: {\n          $splice: [[parseInt(action.value.position), 0, action.value]]\n        }\n      });\n\n    case REMOVE_PRINT_DASHBOARD_ITEM:\n      {\n        const idToRemove = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === idToRemove);\n\n        if (dashboardItemIndex > -1) {\n          return update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1]]\n            }\n          });\n        }\n\n        return state;\n      }\n\n    case UPDATE_PRINT_DASHBOARD_ITEM:\n      {\n        const dashboardItem = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === dashboardItem.id);\n\n        if (dashboardItemIndex > -1) {\n          const newState = update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1, Object.assign({}, dashboardItem)]]\n            }\n          });\n          return newState;\n        }\n\n        return state;\n      }\n\n    case SET_PRINT_DASHBOARD_LAYOUT:\n      {\n        const stateItems = orArray(state.dashboardItems);\n        let layoutHasChanged = false;\n        const newStateItems = action.value.map(({\n          x,\n          y,\n          w,\n          h,\n          i\n        }) => {\n          const stateItem = stateItems.find(si => si.id === i);\n\n          if (!(stateItem.x === x && stateItem.y === y && stateItem.w === w && stateItem.h === h)) {\n            layoutHasChanged = true;\n            return Object.assign({}, stateItem, {\n              w,\n              h,\n              x,\n              y\n            });\n          }\n\n          return stateItem;\n        });\n        return layoutHasChanged ? { ...state,\n          dashboardItems: newStateItems\n        } : state;\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetPrintDashboardRoot = state => state.printDashboard; // selectors\n\nexport const sGetIsPrinting = state => !isEmpty(state.printDashboard);\nexport const sGetPrintDashboardName = state => sGetPrintDashboardRoot(state).name;\nexport const sGetPrintDashboardDescription = state => sGetPrintDashboardRoot(state).description;\nexport const sGetPrintDashboardItems = state => {\n  return sGetPrintDashboardRoot(state)?.dashboardItems || DEFAULT_DASHBOARD_ITEMS;\n};","import React from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport Input from '@material-ui/core/Input';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport PrintItemInfo from '../ItemHeader/PrintItemInfo';\nimport Line from '../../../widgets/Line';\nimport { Parser as RichTextParser, Editor as RichTextEditor } from '@dhis2/d2-ui-rich-text';\nimport { acUpdateDashboardItem } from '../../../actions/editDashboard';\nimport { sGetEditDashboardItems } from '../../../reducers/editDashboard';\nimport { sGetDashboardItems } from '../../../reducers/dashboards';\nimport { sGetIsPrinting, sGetPrintDashboardItems } from '../../../reducers/printDashboard';\nimport { isEditMode, PRINT_LAYOUT } from '../../Dashboard/dashboardModes';\nconst style = {\n  textDiv: {\n    padding: '10px',\n    whiteSpace: 'pre-line',\n    lineHeight: '20px'\n  },\n  textField: {\n    fontSize: '14px',\n    fontStretch: 'normal',\n    width: '90%',\n    margin: '0 auto',\n    display: 'block',\n    lineHeight: '24px'\n  },\n  container: {\n    marginBottom: '20px',\n    marginTop: '20px'\n  }\n};\n\nconst TextItem = props => {\n  const {\n    item,\n    dashboardMode,\n    text,\n    acUpdateDashboardItem\n  } = props;\n\n  const onChangeText = event => {\n    const updatedItem = { ...item,\n      text: event.target.value\n    };\n    acUpdateDashboardItem(updatedItem);\n  };\n\n  const viewItem = () => {\n    const textDivStyle = Object.assign({}, style.textField, style.textDiv);\n    return <div className=\"dashboard-item-content\" style={style.container}>\n                <RichTextParser style={textDivStyle}>{text}</RichTextParser>\n            </div>;\n  };\n\n  const editItem = () => {\n    return <>\n                <ItemHeader title={i18n.t('Text item')} itemId={item.id} dashboardMode={dashboardMode} />\n                <Line />\n                <div className=\"dashboard-item-content\">\n                    <RichTextEditor onEdit={onChangeText}>\n                        <Input value={text} multiline fullWidth style={style.textField} placeholder={i18n.t('Add text here')} onChange={onChangeText} />\n                    </RichTextEditor>\n                </div>\n            </>;\n  };\n\n  const printItem = () => {\n    const textDivStyle = Object.assign({}, style.textField, style.textDiv);\n    return <>\n                {props.item.shortened ? <PrintItemInfo /> : null}\n                <div className=\"dashboard-item-content\" style={style.container}>\n                    <RichTextParser style={textDivStyle}>{text}</RichTextParser>\n                </div>\n            </>;\n  };\n\n  let textItem;\n\n  if (isEditMode(dashboardMode)) {\n    textItem = editItem;\n  } else if (dashboardMode === PRINT_LAYOUT) {\n    textItem = printItem;\n  } else {\n    textItem = viewItem;\n  }\n\n  return <>{textItem()}</>;\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const isPrintPreview = sGetIsPrinting(state);\n  let items;\n\n  if (isPrintPreview) {\n    items = sGetPrintDashboardItems(state);\n  } else if (isEditMode(ownProps.dashboardMode)) {\n    items = sGetEditDashboardItems(state);\n  } else {\n    items = sGetDashboardItems(state);\n  }\n\n  const item = items.find(item => item.id === ownProps.item.id);\n  return {\n    text: item ? item.text : ''\n  };\n};\n\nTextItem.propTypes = {\n  acUpdateDashboardItem: PropTypes.func,\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  text: PropTypes.string\n};\nexport default connect(mapStateToProps, {\n  acUpdateDashboardItem\n})(TextItem);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\nimport { useD2 } from '@dhis2/app-runtime-adapter-d2';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport Line from '../../../widgets/Line';\nimport { FILTER_ORG_UNIT } from '../../../actions/itemFilters';\nimport { sGetItemFiltersRoot, DEFAULT_STATE_ITEM_FILTERS } from '../../../reducers/itemFilters';\nimport { EDIT, isEditMode } from '../../Dashboard/dashboardModes';\n\nconst getIframeSrc = (appDetails, item, itemFilters) => {\n  let iframeSrc = `${appDetails.launchUrl}?dashboardItemId=${item.id}`;\n\n  if (itemFilters[FILTER_ORG_UNIT] && itemFilters[FILTER_ORG_UNIT].length) {\n    const ouIds = itemFilters[FILTER_ORG_UNIT].map(ouFilter => ouFilter.path.split('/').slice(-1)[0]);\n    iframeSrc += `&userOrgUnit=${ouIds.join(',')}`;\n  }\n\n  return iframeSrc;\n};\n\nconst AppItem = ({\n  dashboardMode,\n  item,\n  itemFilters\n}) => {\n  const {\n    d2\n  } = useD2({});\n  let appDetails;\n  const appKey = item.appKey;\n\n  if (appKey) {\n    appDetails = d2.system.installedApps.find(app => app.key === appKey);\n  }\n\n  const hideTitle = appDetails?.settings?.dashboardWidget?.hideTitle && dashboardMode !== EDIT;\n  return appDetails && appDetails.name && appDetails.launchUrl ? <>\n            {!hideTitle && <>\n                    <ItemHeader title={appDetails.name} itemId={item.id} dashboardMode={dashboardMode} isShortened={item.shortened} />\n                    <Line />\n                </>}\n            <iframe title={appDetails.name} src={getIframeSrc(appDetails, item, itemFilters)} className={!hideTitle ? 'dashboard-item-content' : 'dashboard-item-content-hidden-title'} style={{\n      border: 'none'\n    }} />\n        </> : <>\n            <ItemHeader title={`${appKey} app not found`} />\n            <Line />\n            <div className=\"dashboard-item-content\" style={{\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      height: '90%'\n    }}>\n                <NotInterestedIcon color=\"disabled\" disabled style={{\n        width: 100,\n        height: 100,\n        align: 'center'\n      }} />\n            </div>\n        </>;\n};\n\nAppItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const itemFilters = !isEditMode(ownProps.dashboardMode) ? sGetItemFiltersRoot(state) : DEFAULT_STATE_ITEM_FILTERS;\n  return {\n    itemFilters\n  };\n};\n\nexport default connect(mapStateToProps)(AppItem);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { colors } from '@dhis2/ui';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nconst style = {\n  margin: '21px 28px',\n  fontSize: '14px',\n  lineHeight: '18px',\n  color: colors.grey600\n};\n\nconst SpacerItem = props => {\n  return <>\n            <ItemHeader title={i18n.t('Spacer')} itemId={props.item.id} dashboardMode={props.dashboardMode} isShortened={props.item.shortened} />\n            <p style={style}>\n                {i18n.t('Use a spacer to create empty vertical space between other dashboard items.')}\n            </p>\n        </>;\n};\n\nSpacerItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object\n};\nexport default SpacerItem;","import React from 'react';\n\nconst PageBreakItem = () => <div />;\n\nexport default PageBreakItem;","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { sGetSelectedId, sGetSelectedShowDescription } from '../../../reducers/selected';\nimport { sGetDashboardById, EMPTY_DASHBOARD } from '../../../reducers/dashboards';\nimport { sGetNamedItemFilters } from '../../../reducers/itemFilters';\nimport { sGetIsEditing } from '../../../reducers/editDashboard';\nimport { sGetPrintDashboardName, sGetPrintDashboardDescription } from '../../../reducers/printDashboard';\nimport classes from './styles/Item.module.css';\n\nconst PrintTitlePageItem = ({\n  name,\n  description,\n  itemFilters,\n  showDescription\n}) => {\n  const getItemFilterList = () => {\n    const listItems = itemFilters.map(({\n      name,\n      values\n    }) => <li className={classes.filterListItem} key={name}>\n                {name}: {values.map(val => val.name).join(', ')}\n            </li>);\n    return <ul className={classes.filterList}>{listItems}</ul>;\n  };\n\n  return <div className={classes.titlePage}>\n            <p className={classes.name}>{name}</p>\n            {showDescription && description && <p className={classes.description}>{description}</p>}\n            {itemFilters.length > 0 && <>\n                    <p className={classes.filterTitle}>\n                        {i18n.t('Filters applied')}\n                    </p>\n                    {getItemFilterList()}\n                </>}\n        </div>;\n};\n\nPrintTitlePageItem.propTypes = {\n  description: PropTypes.string,\n  itemFilters: PropTypes.array,\n  name: PropTypes.string,\n  showDescription: PropTypes.bool\n};\nPrintTitlePageItem.defaultProps = {\n  description: '',\n  name: '',\n  showDescription: false\n};\n\nconst mapStateToProps = state => {\n  const id = sGetSelectedId(state);\n  const isEditMode = sGetIsEditing(state);\n  const viewDashboard = sGetDashboardById(state, id) || EMPTY_DASHBOARD;\n  const name = isEditMode ? sGetPrintDashboardName(state) || i18n.t('Untitled dashboard') : viewDashboard.displayName;\n  const description = isEditMode ? sGetPrintDashboardDescription(state) : viewDashboard.displayDescription;\n  return {\n    name,\n    description,\n    itemFilters: sGetNamedItemFilters(state),\n    showDescription: sGetSelectedShowDescription(state)\n  };\n};\n\nexport default connect(mapStateToProps)(PrintTitlePageItem);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport VisualizationItem from './VisualizationItem/Item';\nimport MessagesItem from './MessagesItem/Item';\nimport NotSupportedItem from './NotSupportedItem/Item';\nimport ListItem from './ListItem/Item';\nimport TextItem from './TextItem/Item';\nimport AppItem from './AppItem/Item';\nimport SpacerItem from './SpacerItem/Item';\nimport PageBreakItem from './PageBreakItem/Item';\nimport PrintTitlePageItem from './PrintTitlePageItem/Item';\nimport { APP, VISUALIZATION, REPORT_TABLE, CHART, MAP, EVENT_CHART, EVENT_REPORT, MESSAGES, REPORTS, RESOURCES, USERS, TEXT, SPACER, PAGEBREAK, PRINT_TITLE_PAGE } from '../../modules/itemTypes';\n\nconst getGridItem = type => {\n  switch (type) {\n    case VISUALIZATION:\n    case REPORT_TABLE:\n    case CHART:\n    case MAP:\n    case EVENT_CHART:\n    case EVENT_REPORT:\n      return VisualizationItem;\n\n    case MESSAGES:\n      return MessagesItem;\n\n    case REPORTS:\n    case RESOURCES:\n    case USERS:\n      return ListItem;\n\n    case TEXT:\n      return TextItem;\n\n    case SPACER:\n      return SpacerItem;\n\n    case APP:\n      return AppItem;\n\n    case PAGEBREAK:\n      return PageBreakItem;\n\n    case PRINT_TITLE_PAGE:\n      return PrintTitlePageItem;\n\n    default:\n      return NotSupportedItem;\n  }\n};\n\nexport const Item = props => {\n  const GridItem = getGridItem(props.item.type);\n  return <GridItem item={props.item} gridWidth={props.gridWidth} dashboardMode={props.dashboardMode} onToggleItemExpanded={props.onToggleItemExpanded} />;\n};\nItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  gridWidth: PropTypes.number,\n  item: PropTypes.object,\n  onToggleItemExpanded: PropTypes.func\n};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash/debounce';\nimport pick from 'lodash/pick';\nconst defaultDebounceMs = 100;\nconst defaultBufferFactor = 0.25;\n\nclass ProgressiveLoadingContainer extends Component {\n  static propTypes = {\n    children: PropTypes.node.isRequired,\n    bufferFactor: PropTypes.number,\n    className: PropTypes.string,\n    debounceMs: PropTypes.number,\n    style: PropTypes.object\n  };\n  static defaultProps = {\n    debounceMs: defaultDebounceMs,\n    bufferFactor: defaultBufferFactor\n  };\n  state = {\n    shouldLoad: false\n  };\n  containerRef = null;\n  shouldLoadHandler = null;\n  handlerOptions = {\n    passive: true\n  };\n\n  checkShouldLoad() {\n    if (!this.containerRef) {\n      return;\n    }\n\n    const bufferPx = this.props.bufferFactor * window.innerHeight;\n    const rect = this.containerRef.getBoundingClientRect();\n\n    if (rect.bottom > -bufferPx && rect.top < window.innerHeight + bufferPx) {\n      this.setState({\n        shouldLoad: true\n      });\n      this.removeHandler();\n    }\n  }\n\n  registerHandler() {\n    this.shouldLoadHandler = debounce(() => this.checkShouldLoad(), this.props.debounceMs);\n    document.getElementsByClassName('dashboard-wrapper')[0]?.addEventListener('scroll', this.shouldLoadHandler, this.handlerOptions);\n  }\n\n  removeHandler() {\n    document.getElementsByClassName('dashboard-wrapper')[0]?.removeEventListener('scroll', this.shouldLoadHandler, this.handlerOptions);\n  }\n\n  componentDidMount() {\n    this.registerHandler();\n    this.checkShouldLoad();\n  }\n\n  componentWillUnmount() {\n    this.removeHandler();\n  }\n\n  render() {\n    const {\n      children,\n      className,\n      style,\n      ...props\n    } = this.props;\n    const {\n      shouldLoad\n    } = this.state;\n    const eventProps = pick(props, ['onMouseDown', 'onTouchStart', 'onMouseUp', 'onTouchEnd']);\n    return <div ref={ref => this.containerRef = ref} style={style} className={className} data-test={`dashboarditem-${props.itemId}`} {...eventProps}>\n                {shouldLoad && children}\n            </div>;\n  }\n\n}\n\nexport default ProgressiveLoadingContainer;","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport cx from 'classnames';\nimport { Responsive as ResponsiveReactGridLayout } from 'react-grid-layout';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport { useWindowDimensions } from '../WindowDimensionsProvider';\nimport { Item } from '../Item/Item';\nimport { GRID_ROW_HEIGHT_PX, SM_SCREEN_GRID_COLUMNS, GRID_COMPACT_TYPE, GRID_PADDING_PX, MARGIN_PX, MARGIN_SM_PX, hasShape, GRID_COLUMNS, getSmallLayout, getGridWidth, getProportionalHeight } from '../../modules/gridUtil';\nimport { orArray } from '../../modules/util';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport { sGetSelectedId, sGetSelectedIsLoading } from '../../reducers/selected';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport ProgressiveLoadingContainer from '../Item/ProgressiveLoadingContainer';\nimport { VIEW } from '../Dashboard/dashboardModes';\nimport { getBreakpoint, isSmallScreen } from '../../modules/smallScreen';\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\nimport './styles/ItemGrid.css';\nconst EXPANDED_HEIGHT = 17;\nconst EXPANDED_HEIGHT_SM = 13;\n\nconst ResponsiveItemGrid = ({\n  isLoading,\n  dashboardItems\n}) => {\n  const {\n    width,\n    height\n  } = useWindowDimensions();\n  const [expandedItems, setExpandedItems] = useState({});\n  const [displayItems, setDisplayItems] = useState(dashboardItems);\n  const [layoutSm, setLayoutSm] = useState([]);\n  const [gridWidth, setGridWidth] = useState(0);\n\n  const isMobileLandscape = () => height <= 480;\n\n  useEffect(() => {\n    if (isSmallScreen(width) || isMobileLandscape()) {\n      setLayoutSm(getItemsWithAdjustedHeight(getSmallLayout(dashboardItems, width)));\n    }\n\n    setDisplayItems(getItemsWithAdjustedHeight(dashboardItems));\n  }, [expandedItems, width, dashboardItems]);\n\n  const onToggleItemExpanded = clickedId => {\n    const isExpanded = typeof expandedItems[clickedId] === 'boolean' ? expandedItems[clickedId] : false;\n    const newExpandedItems = { ...expandedItems\n    };\n    newExpandedItems[clickedId] = !isExpanded;\n    setExpandedItems(newExpandedItems);\n  };\n\n  const getItemsWithAdjustedHeight = items => items.map(item => {\n    const expandedItem = expandedItems[item.id];\n\n    if (expandedItem && expandedItem === true) {\n      const expandedHeight = isSmallScreen(width) ? EXPANDED_HEIGHT_SM : EXPANDED_HEIGHT;\n      return Object.assign({}, item, {\n        h: item.h + expandedHeight,\n        smallOriginalH: getProportionalHeight(item, width)\n      });\n    }\n\n    return item;\n  });\n\n  const getItemComponent = item => <ProgressiveLoadingContainer key={item.i} className={cx(item.type, 'view', `reactgriditem-${item.id}`)} itemId={item.id}>\n            <Item item={item} gridWidth={gridWidth} dashboardMode={VIEW} onToggleItemExpanded={onToggleItemExpanded} />\n        </ProgressiveLoadingContainer>;\n\n  const getItemComponents = items => items.map(item => getItemComponent(item));\n\n  const onWidthChanged = containerWidth => {\n    setTimeout(() => {\n      setGridWidth(containerWidth);\n    }, 200);\n  };\n\n  if (!isLoading && !dashboardItems.length) {\n    return <NoContentMessage text={i18n.t('There are no items on this dashboard')} />;\n  }\n\n  return <>\n            {isLoading ? <Layer translucent>\n                    <CenteredContent>\n                        <CircularLoader />\n                    </CenteredContent>\n                </Layer> : null}\n            <ResponsiveReactGridLayout rowHeight={GRID_ROW_HEIGHT_PX} width={getGridWidth(width)} cols={{\n      lg: GRID_COLUMNS,\n      md: isMobileLandscape() ? SM_SCREEN_GRID_COLUMNS : GRID_COLUMNS,\n      sm: SM_SCREEN_GRID_COLUMNS\n    }} breakpoints={{\n      lg: getBreakpoint(),\n      md: isMobileLandscape() ? getBreakpoint() : 0,\n      sm: 0\n    }} layouts={{\n      lg: displayItems,\n      md: isMobileLandscape() ? layoutSm : displayItems,\n      sm: layoutSm\n    }} compactType={GRID_COMPACT_TYPE} margin={isSmallScreen(width) ? MARGIN_SM_PX : MARGIN_PX} containerPadding={{\n      lg: GRID_PADDING_PX,\n      sm: GRID_PADDING_PX\n    }} isDraggable={false} isResizable={false} draggableCancel=\"input,textarea\" onWidthChange={onWidthChanged}>\n                {getItemComponents(displayItems)}\n            </ResponsiveReactGridLayout>\n        </>;\n};\n\nResponsiveItemGrid.propTypes = {\n  dashboardItems: PropTypes.array,\n  isLoading: PropTypes.bool\n};\n\nconst mapStateToProps = state => {\n  const selectedDashboard = sGetDashboardById(state, sGetSelectedId(state));\n  const dashboardItems = orArray(sGetDashboardItems(state)).filter(hasShape);\n  return {\n    isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n    dashboardItems\n  };\n};\n\nexport default connect(mapStateToProps)(ResponsiveItemGrid);","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { colors } from '@dhis2/ui';\nconst styles = {\n  badgeContainer: {\n    margin: '2px',\n    padding: '0 16px',\n    borderRadius: '4px',\n    color: colors.white,\n    backgroundColor: '#212934',\n    height: 36,\n    display: 'flex',\n    alignItems: 'center'\n  },\n  badge: {\n    fontSize: '13px',\n    cursor: 'pointer',\n    whiteSpace: 'nowrap'\n  },\n  badgeRemove: {\n    fontSize: '12px',\n    textDecoration: 'underline',\n    marginLeft: '24px',\n    cursor: 'pointer'\n  }\n};\n\nclass FilterBadge extends Component {\n  onClick = id => () => this.props.onClick(id);\n  onRemove = id => () => this.props.onRemove(id);\n\n  render() {\n    const {\n      data\n    } = this.props;\n    return <div style={styles.badgeContainer} data-test=\"dashboard-filter-badge\">\n                <span style={styles.badge} onClick={this.onClick(data.id)}>\n                    {`${data.name}: ${data.values.length > 1 ? i18n.t('{{count}} selected', {\n          count: data.values.length\n        }) : data.values[0].name}`}\n                </span>\n                <span style={styles.badgeRemove} onClick={this.onRemove(data.id)}>\n                    {i18n.t('Remove')}\n                </span>\n            </div>;\n  }\n\n}\n\nFilterBadge.propTypes = {\n  data: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired,\n  onRemove: PropTypes.func.isRequired\n};\nFilterBadge.defaultProps = {\n  onClick: Function.prototype,\n  onRemove: Function.prototype\n};\nexport default FilterBadge;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport FilterBadge from './FilterBadge';\nimport { sGetNamedItemFilters } from '../../reducers/itemFilters';\nimport { acRemoveItemFilter } from '../../actions/itemFilters';\nimport { acSetActiveModalDimension } from '../../actions/activeModalDimension';\nimport classes from './styles/FilterBar.module.css';\nexport class FilterBar extends Component {\n  onBadgeRemove = id => {\n    this.props.removeItemFilter(id);\n  };\n  onBadgeClick = id => {\n    this.props.setActiveModalDimension({\n      id,\n      name: this.props.filters.find(item => item.id === id).name\n    });\n  };\n\n  render() {\n    const {\n      filters\n    } = this.props;\n    return filters.length ? // the 3 is calculated so that the FilterBar has the same vertical position as the TitleBar in relation to the ControlBar\n    <div className={classes.bar} style={{\n      top: 3\n    }}>\n                {filters.map(filter => <FilterBadge key={filter.id} data={filter} onClick={this.onBadgeClick} onRemove={this.onBadgeRemove} />)}\n            </div> : null;\n  }\n\n}\nFilterBar.propTypes = {\n  filters: PropTypes.array.isRequired,\n  removeItemFilter: PropTypes.func.isRequired,\n  setActiveModalDimension: PropTypes.func\n};\nFilterBar.defaultProps = {\n  filters: [],\n  removeItemFIlter: Function.prototype\n};\n\nconst mapStateToProps = state => ({\n  filters: sGetNamedItemFilters(state)\n});\n\nexport default connect(mapStateToProps, {\n  setActiveModalDimension: acSetActiveModalDimension,\n  removeItemFilter: acRemoveItemFilter\n})(FilterBar);","import { generateUid } from 'd2/uid';\nimport { SET_PRINT_DASHBOARD, CLEAR_PRINT_DASHBOARD, SET_PRINT_DASHBOARD_LAYOUT, ADD_PRINT_DASHBOARD_ITEM, REMOVE_PRINT_DASHBOARD_ITEM, UPDATE_PRINT_DASHBOARD_ITEM } from '../reducers/printDashboard';\nimport { NEW_ITEM_SHAPE, getGridItemProperties, getPageBreakItemShape, getPrintTitlePageItemShape } from '../modules/gridUtil';\nimport { itemTypeMap, PAGEBREAK } from '../modules/itemTypes'; // actions\n\nexport const acSetPrintDashboard = (dashboard, items) => {\n  const val = { ...dashboard,\n    dashboardItems: items\n  };\n  return {\n    type: SET_PRINT_DASHBOARD,\n    value: val\n  };\n};\nexport const acClearPrintDashboard = () => ({\n  type: CLEAR_PRINT_DASHBOARD\n});\nexport const acUpdatePrintDashboardLayout = value => ({\n  type: SET_PRINT_DASHBOARD_LAYOUT,\n  value\n});\nexport const acAddPrintDashboardItem = item => {\n  const type = item.type;\n  delete item.type;\n  const itemPropName = itemTypeMap[type].propName;\n  const id = generateUid();\n  const gridItemProperties = getGridItemProperties(id);\n  let shape;\n\n  if (type === PAGEBREAK) {\n    const yPos = item.yPos || 0;\n    shape = getPageBreakItemShape(yPos, item.isStatic);\n  } else {\n    shape = getPrintTitlePageItemShape(item.isOneItemPerPage);\n  }\n\n  return {\n    type: ADD_PRINT_DASHBOARD_ITEM,\n    value: {\n      id,\n      type,\n      position: item.position || null,\n      [itemPropName]: item.content,\n      ...NEW_ITEM_SHAPE,\n      ...gridItemProperties,\n      ...shape\n    }\n  };\n};\nexport const acRemovePrintDashboardItem = value => ({\n  type: REMOVE_PRINT_DASHBOARD_ITEM,\n  value\n});\nexport const acUpdatePrintDashboardItem = item => ({\n  type: UPDATE_PRINT_DASHBOARD_ITEM,\n  value: item\n});","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport ViewTitleBar from '../TitleBar/ViewTitleBar';\nimport ViewItemGrid from '../ItemGrid/ViewItemGrid';\nimport FilterBar from '../FilterBar/FilterBar';\nimport DashboardsBar, { isDashboardBarMaxHeight } from '../ControlBar/DashboardsBar';\nimport { sGetIsEditing } from '../../reducers/editDashboard';\nimport { sGetIsPrinting } from '../../reducers/printDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { acClearEditDashboard } from '../../actions/editDashboard';\nimport { acClearPrintDashboard } from '../../actions/printDashboard';\nimport { CONTROL_BAR_COLLAPSED, getControlBarHeight, getControlBarHeightSmallDevice, HEADERBAR_HEIGHT } from '../ControlBar/controlBarDimensions';\nimport { useWindowDimensions } from '../WindowDimensionsProvider';\nimport { isSmallScreen } from '../../modules/smallScreen';\nexport const ViewDashboard = props => {\n  const {\n    width,\n    height\n  } = useWindowDimensions();\n  useEffect(() => {\n    if (props.dashboardIsEditing) {\n      props.clearEditDashboard();\n    } else if (props.dashboardIsPrinting) {\n      props.clearPrintDashboard();\n    }\n  }, [props.dashboardIsEditing, props.dashboardIsPrinting]);\n  useEffect(() => {\n    document.querySelector('.dashboard-wrapper')?.scroll(0, 0);\n  }, [props.selectedId]);\n  const dashboardHeight = height - HEADERBAR_HEIGHT - (isSmallScreen(width) && !isDashboardBarMaxHeight(props.controlBarRows) ? getControlBarHeightSmallDevice(CONTROL_BAR_COLLAPSED) : getControlBarHeight(props.controlBarRows));\n  return <>\n            <DashboardsBar />\n            <div className=\"dashboard-wrapper\" style={{\n      height: dashboardHeight\n    }}>\n                <ViewTitleBar />\n                <FilterBar />\n                <ViewItemGrid />\n            </div>\n        </>;\n};\nViewDashboard.propTypes = {\n  clearEditDashboard: PropTypes.func,\n  clearPrintDashboard: PropTypes.func,\n  controlBarRows: PropTypes.number,\n  dashboardIsEditing: PropTypes.bool,\n  dashboardIsPrinting: PropTypes.bool,\n  selectedId: PropTypes.string\n};\n\nconst mapStateToProps = state => {\n  return {\n    dashboardIsEditing: sGetIsEditing(state),\n    dashboardIsPrinting: sGetIsPrinting(state),\n    controlBarRows: sGetControlBarUserRows(state),\n    selectedId: sGetSelectedId(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  clearEditDashboard: acClearEditDashboard,\n  clearPrintDashboard: acClearPrintDashboard\n})(ViewDashboard);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { InputField } from '@dhis2/ui';\n\nconst ItemSearchField = props => <InputField name=\"Dashboard item search\" label={i18n.t('Search for items to add to this dashboard')} type=\"text\" onChange={props.onChange} onFocus={props.onFocus} value={props.value} dataTest=\"item-search\" />;\n\nItemSearchField.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n  onFocus: PropTypes.func\n};\nexport default ItemSearchField;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { MenuItem, colors } from '@dhis2/ui';\nimport classes from './styles/HeaderMenuItem.module.css';\n\nconst HeaderMenuItem = ({\n  title\n}) => <MenuItem className={classes.item} dense key={title} disabled label={<span style={{\n  color: colors.grey800,\n  fontWeight: '600'\n}}>\n                {title}\n            </span>} />;\n\nHeaderMenuItem.propTypes = {\n  title: PropTypes.string.isRequired\n};\nexport default HeaderMenuItem;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst LaunchIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\" fill={colors.grey600} viewBox=\"0 0 24 24\">\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z\" />\n    </svg>;\n\nLaunchIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default LaunchIcon;","import React from 'react';\nimport { MenuItem, colors } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport { visTypeIcons } from '@dhis2/analytics';\nimport { getItemIcon, VISUALIZATION } from '../../modules/itemTypes';\nimport LaunchIcon from '../../icons/Launch';\nimport classes from './styles/ContentMenuItem.module.css';\n\nconst LaunchLink = ({\n  url\n}) => <a onClick={e => e.stopPropagation()} className={classes.launchLink} target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n        <LaunchIcon />\n    </a>;\n\nLaunchLink.propTypes = {\n  url: PropTypes.string\n};\n\nconst InsertButton = () => <button className={classes.buttonInsert}>{i18n.t('Insert')}</button>;\n\nconst ContentMenuItem = ({\n  type,\n  name,\n  onInsert,\n  url,\n  visType\n}) => {\n  const ItemIcon = getItemIcon(type);\n  const renderedItemIcon = type === VISUALIZATION ? visTypeIcons[visType] : <ItemIcon style={{\n    fill: colors.grey600\n  }} />;\n  return <MenuItem dense onClick={onInsert} label={<div className={classes.menuItem}>\n                    <div className={classes.label}>\n                        <span style={{\n        marginRight: '6px'\n      }}>\n                            {renderedItemIcon}\n                        </span>\n                        <span>{name}</span>\n                        {url ? <LaunchLink url={url} /> : null}\n                    </div>\n                    <InsertButton />\n                </div>} dataTest={`menu-item-${name}`} />;\n};\n\nContentMenuItem.propTypes = {\n  name: PropTypes.string,\n  type: PropTypes.string,\n  url: PropTypes.string,\n  visType: PropTypes.string,\n  onInsert: PropTypes.func\n};\nexport default ContentMenuItem;","import { sGetEditDashboardRoot } from '../../reducers/editDashboard';\nimport { itemTypeMap } from '../../modules/itemTypes';\nimport { acAddDashboardItem, acUpdateDashboardItem } from '../../actions/editDashboard';\nexport const tAddListItemContent = (type, content) => (dispatch, getState) => {\n  const state = getState();\n  const listItemType = itemTypeMap[type].propName;\n  const dashboardItems = sGetEditDashboardRoot(state).dashboardItems;\n  const dashboardItemIndex = dashboardItems.findIndex(item => item.type === type);\n  let dashboardItem; // Reports/Resources/Users dashboard item type already present in dashboard\n\n  if (dashboardItemIndex > -1) {\n    dashboardItem = dashboardItems[dashboardItemIndex];\n    dashboardItem[listItemType].push(content);\n    dispatch(acUpdateDashboardItem(dashboardItem));\n  } else {\n    dashboardItem = {\n      type: type,\n      content: [content]\n    };\n    dispatch(acAddDashboardItem(dashboardItem));\n  }\n};","import i18n from '@dhis2/d2-i18n';\nimport { VISUALIZATION, MAP, EVENT_CHART, EVENT_REPORT, USERS, REPORTS, RESOURCES, APP, MESSAGES, TEXT, SPACER } from '../../modules/itemTypes';\nexport const singleItems = [{\n  id: 'additional',\n  header: i18n.t('Additional items'),\n  items: [{\n    type: TEXT,\n    name: i18n.t('Text box'),\n    content: ''\n  }, {\n    type: MESSAGES,\n    name: i18n.t('Messages'),\n    content: 'true'\n  }, {\n    type: SPACER,\n    name: i18n.t('Spacer'),\n    content: ''\n  }]\n}]; // categorizedItems are grouped in the item selector menu\n\nexport const categorizedItems = [VISUALIZATION, MAP, EVENT_REPORT, EVENT_CHART, USERS, REPORTS, RESOURCES, APP]; // listItemTypes are included in a single dashboard item\n\nexport const listItemTypes = [REPORTS, RESOURCES, USERS];","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { MenuItem, Divider } from '@dhis2/ui';\nimport { useConfig } from '@dhis2/app-runtime';\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\nimport { tAddListItemContent } from './actions';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\nimport { getItemUrl, APP, VISUALIZATION } from '../../modules/itemTypes';\nimport { categorizedItems, listItemTypes } from './selectableItems';\nimport classes from './styles/CategorizedMenuGroup.module.css';\n\nconst CategorizedMenuGroup = ({\n  type,\n  title,\n  items,\n  hasMore,\n  acAddDashboardItem,\n  tAddListItemContent,\n  onChangeItemsLimit\n}) => {\n  const {\n    baseUrl\n  } = useConfig();\n  const [seeMore, setSeeMore] = useState(false);\n\n  const addItem = item => () => {\n    if (type === APP) {\n      acAddDashboardItem({\n        type,\n        content: item.key\n      });\n    } else {\n      const newItem = {\n        id: item.id,\n        name: item.displayName || item.name\n      };\n\n      if (listItemTypes.includes(type)) {\n        tAddListItemContent(type, newItem);\n      } else {\n        acAddDashboardItem({\n          type,\n          content: newItem\n        });\n      }\n    }\n  };\n\n  const toggleSeeMore = () => {\n    setSeeMore(!seeMore);\n    onChangeItemsLimit(type);\n  };\n\n  return <>\n            <HeaderMenuItem title={title} />\n            {items.map(item => {\n      const itemUrl = getItemUrl(type, item, baseUrl);\n      return <ContentMenuItem key={item.id || item.key} type={type} visType={type === VISUALIZATION ? item.type : type} name={item.displayName || item.name} onInsert={addItem(item)} url={itemUrl} />;\n    })}\n            {hasMore ? <MenuItem dense key={`showmore${title}`} onClick={toggleSeeMore} label={<button className={classes.showMoreButton}>\n                            {seeMore ? i18n.t('Show fewer') : i18n.t('Show more')}\n                        </button>} /> : null}\n            <Divider margin=\"8px 0px\" />\n        </>;\n};\n\nCategorizedMenuGroup.propTypes = {\n  items: PropTypes.array.isRequired,\n  title: PropTypes.string.isRequired,\n  type: PropTypes.oneOf(categorizedItems).isRequired,\n  onChangeItemsLimit: PropTypes.func.isRequired,\n  acAddDashboardItem: PropTypes.func,\n  hasMore: PropTypes.bool,\n  tAddListItemContent: PropTypes.func\n};\nexport default connect(null, {\n  acAddDashboardItem,\n  tAddListItemContent\n})(CategorizedMenuGroup);","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\nexport const SinglesMenuGroup = ({\n  acAddDashboardItem,\n  category\n}) => {\n  const addToDashboard = ({\n    type,\n    content\n  }) => () => {\n    acAddDashboardItem({\n      type,\n      content\n    });\n  };\n\n  return <>\n            <HeaderMenuItem title={category.header} />\n            {category.items.map(item => <ContentMenuItem key={item.type} type={item.type} name={item.name} onInsert={addToDashboard(item)} />)}\n        </>;\n};\nSinglesMenuGroup.propTypes = {\n  acAddDashboardItem: PropTypes.func,\n  category: PropTypes.object\n};\nexport default connect(null, {\n  acAddDashboardItem\n})(SinglesMenuGroup);","import React, { useState, useEffect, createRef } from 'react';\nimport { Popover, FlyoutMenu } from '@dhis2/ui';\nimport { useD2 } from '@dhis2/app-runtime-adapter-d2';\nimport ItemSearchField from './ItemSearchField';\nimport CategorizedMenuGroup from './CategorizedMenuGroup';\nimport SinglesMenuGroup from './SinglesMenuGroup';\nimport { singleItems, categorizedItems } from './selectableItems';\nimport { itemTypeMap, getDefaultItemCount } from '../../modules/itemTypes';\nimport classes from './styles/ItemSelector.module.css';\n\nconst ItemSelector = () => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [filter, setFilter] = useState('');\n  const [items, setItems] = useState(null);\n  const [maxOptions, setMaxOptions] = useState(new Set());\n  const {\n    d2\n  } = useD2({});\n  useEffect(() => {\n    let queryString = '?count=11';\n\n    if ([...maxOptions.values()].length) {\n      queryString += '&max=' + [...maxOptions.values()].join('&max=');\n    }\n\n    const filterStr = filter ? `/${filter}` : '';\n    d2.Api.getApi().get(`dashboards/q${filterStr}${queryString}`).then(response => setItems(response)).catch(console.error);\n  }, [filter, maxOptions]);\n\n  const closeMenu = () => {\n    setIsOpen(false);\n    setFilter('');\n    setMaxOptions(new Set());\n  };\n\n  const openMenu = () => setIsOpen(true);\n\n  const getCategorizedMenuGroups = () => {\n    return categorizedItems.filter(type => {\n      const itemType = itemTypeMap[type];\n      return items && items[itemType.endPointName];\n    }).map(type => {\n      const itemType = itemTypeMap[type];\n      const itemCount = getDefaultItemCount(type);\n      const allItems = items[itemType.endPointName];\n      const hasMore = allItems.length > itemCount;\n      const displayItems = maxOptions.has(itemType.id) ? allItems : allItems.slice(0, itemCount);\n      return <CategorizedMenuGroup key={type} type={type} title={itemType.pluralTitle} items={displayItems} onChangeItemsLimit={updateMaxOptions} hasMore={hasMore} />;\n    });\n  };\n\n  const getSinglesMenuGroups = () => singleItems.map(category => <SinglesMenuGroup key={category.id} category={category} />);\n\n  const getMenuGroups = () => getCategorizedMenuGroups().concat(getSinglesMenuGroups());\n\n  const updateMaxOptions = type => {\n    if (type) {\n      const options = new Set(maxOptions);\n      options.has(type) ? options.delete(type) : options.add(type);\n      setMaxOptions(options);\n    } else {\n      setMaxOptions(new Set());\n    }\n  };\n\n  const updateFilter = ({\n    value\n  }) => setFilter(value);\n\n  const inputRef = createRef();\n  return <>\n            <span ref={inputRef}>\n                <ItemSearchField value={filter} onChange={updateFilter} onFocus={openMenu} />\n            </span>\n            {isOpen && <Popover reference={inputRef} placement=\"bottom-start\" onClickOutside={closeMenu} arrow={false} maxWidth={700}>\n                    <FlyoutMenu className={classes.menu} dataTest=\"item-menu\" maxWidth=\"700px\">\n                        {getMenuGroups()}\n                    </FlyoutMenu>\n                </Popover>}\n        </>;\n};\n\nexport default ItemSelector;","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { InputField, TextAreaField } from '@dhis2/ui';\nimport ItemSelector from '../ItemSelector/ItemSelector';\nimport { acSetDashboardTitle, acSetDashboardDescription } from '../../actions/editDashboard';\nimport { orObject } from '../../modules/util';\nimport { sGetEditDashboardRoot } from '../../reducers/editDashboard';\nimport classes from './styles/EditTitleBar.module.css';\nexport const EditTitleBar = ({\n  name,\n  description,\n  onChangeTitle,\n  onChangeDescription\n}) => {\n  const updateTitle = (_, e) => {\n    onChangeTitle(e.target.value);\n  };\n\n  const updateDescription = (_, e) => {\n    onChangeDescription(e.target.value);\n  };\n\n  return <section className={classes.section}>\n            <div className={classes.titleDescription}>\n                <InputField className={classes.title} name=\"Dashboard title input\" label={i18n.t('Dashboard title')} type=\"text\" onChange={updateTitle} value={name} placeholder={i18n.t('Untitled dashboard')} dataTest=\"dashboard-title-input\" />\n                <TextAreaField className={classes.description} name=\"Dashboard description input\" label={i18n.t('Dashboard description')} onChange={updateDescription} value={description} dataTest=\"dashboard-description-input\" />\n            </div>\n            <div className={classes.itemSelector}>\n                <ItemSelector />\n            </div>\n        </section>;\n};\nEditTitleBar.propTypes = {\n  onChangeDescription: PropTypes.func.isRequired,\n  onChangeTitle: PropTypes.func.isRequired,\n  description: PropTypes.string,\n  name: PropTypes.string\n};\nEditTitleBar.defaultProps = {\n  name: '',\n  description: ''\n};\n\nconst mapStateToProps = state => {\n  const selectedDashboard = orObject(sGetEditDashboardRoot(state));\n  return {\n    name: selectedDashboard.name,\n    description: selectedDashboard.description\n  };\n};\n\nconst mapDispatchToProps = {\n  onChangeTitle: acSetDashboardTitle,\n  onChangeDescription: acSetDashboardDescription\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(EditTitleBar);","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Responsive as ResponsiveReactGridLayout } from 'react-grid-layout';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport cx from 'classnames';\nimport { acUpdateDashboardLayout } from '../../actions/editDashboard';\nimport { Item } from '../Item/Item';\nimport { resize as pluginResize } from '../Item/VisualizationItem/Visualization/plugin';\nimport { isVisualizationType } from '../../modules/itemTypes';\nimport { GRID_ROW_HEIGHT_PX, GRID_COMPACT_TYPE, MARGIN_PX, GRID_PADDING_PX, GRID_COLUMNS, hasShape, getGridWidth } from '../../modules/gridUtil';\nimport { getBreakpoint } from '../../modules/smallScreen';\nimport getGridItemDomId from '../../modules/getGridItemDomId';\nimport { orArray } from '../../modules/util';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport { sGetSelectedIsLoading } from '../../reducers/selected';\nimport { sGetEditDashboardRoot, sGetEditDashboardItems } from '../../reducers/editDashboard';\nimport ProgressiveLoadingContainer from '../Item/ProgressiveLoadingContainer';\nimport { EDIT } from '../Dashboard/dashboardModes';\nimport { useWindowDimensions } from '../WindowDimensionsProvider';\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\nimport './styles/ItemGrid.css';\n\nconst EditItemGrid = ({\n  isLoading,\n  dashboardItems,\n  acUpdateDashboardLayout\n}) => {\n  const [gridWidth, setGridWidth] = useState(0);\n  const {\n    width\n  } = useWindowDimensions();\n\n  const onLayoutChange = newLayout => {\n    acUpdateDashboardLayout(newLayout);\n  };\n\n  const onResizeStop = (layout, oldItem, newItem) => {\n    const el = document.querySelector(`#${getGridItemDomId(newItem.i)}`) || {};\n    if (typeof el.setViewportSize === 'function') setTimeout(() => el.setViewportSize(el.clientWidth - 5, el.clientHeight - 5), 10);\n    const dashboardItem = dashboardItems.find(item => item.id === newItem.i); // call resize on the item component if it's a plugin type\n\n    if (dashboardItem && isVisualizationType(dashboardItem)) {\n      pluginResize(dashboardItem);\n    }\n  };\n\n  const getItemComponent = item => <ProgressiveLoadingContainer key={item.i} className={cx(item.type, 'edit')} itemId={item.id}>\n            <Item item={item} gridWidth={gridWidth} dashboardMode={EDIT} />\n        </ProgressiveLoadingContainer>;\n\n  const getItemComponents = items => items.map(item => getItemComponent(item));\n\n  const onWidthChanged = containerWidth => {\n    setTimeout(() => {\n      setGridWidth(containerWidth);\n    }, 200);\n  };\n\n  if (!isLoading && !dashboardItems.length) {\n    return <NoContentMessage text={i18n.t('There are no items on this dashboard')} />;\n  }\n\n  return <>\n            {isLoading ? <Layer translucent>\n                    <CenteredContent>\n                        <CircularLoader />\n                    </CenteredContent>\n                </Layer> : null}\n            <ResponsiveReactGridLayout rowHeight={GRID_ROW_HEIGHT_PX} width={getGridWidth(width)} cols={{\n      lg: GRID_COLUMNS\n    }} breakpoints={{\n      lg: getBreakpoint()\n    }} layouts={{\n      lg: dashboardItems\n    }} compactType={GRID_COMPACT_TYPE} margin={MARGIN_PX} containerPadding={{\n      lg: GRID_PADDING_PX\n    }} onLayoutChange={onLayoutChange} onResizeStop={onResizeStop} onWidthChange={onWidthChanged} isDraggable={true} isResizable={true} draggableCancel=\"input,textarea\">\n                {getItemComponents(dashboardItems)}\n            </ResponsiveReactGridLayout>\n        </>;\n};\n\nEditItemGrid.propTypes = {\n  acUpdateDashboardLayout: PropTypes.func,\n  dashboardItems: PropTypes.array,\n  isLoading: PropTypes.bool\n}; // Container\n\nconst mapStateToProps = state => {\n  const selectedDashboard = sGetEditDashboardRoot(state);\n  const dashboardItems = orArray(sGetEditDashboardItems(state)).filter(hasShape);\n  return {\n    isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n    dashboardItems\n  };\n};\n\nconst mapDispatchToProps = {\n  acUpdateDashboardLayout\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(EditItemGrid);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Button, Modal, ModalContent, ModalActions, ButtonStrip, ModalTitle } from '@dhis2/ui';\nimport classes from './styles/ConfirmDeleteDialog.module.css';\nexport const ConfirmDeleteDialog = ({\n  dashboardName,\n  onDeleteConfirmed,\n  onContinueEditing,\n  open\n}) => {\n  const actions = [<Button key=\"cancel\" secondary onClick={onContinueEditing} dataTest=\"cancel-delete-dashboard\">\n            {i18n.t('Cancel')}\n        </Button>, <Button key=\"delete\" destructive onClick={onDeleteConfirmed} dataTest=\"confirm-delete-dashboard\">\n            {i18n.t('Delete')}\n        </Button>];\n  return open && <Modal onClose={onContinueEditing} small position=\"middle\">\n                <ModalTitle>{i18n.t('Delete dashboard')}</ModalTitle>\n                <ModalContent>\n                    <span className={classes.content}>\n                        {i18n.t('Deleting dashboard \"{{ dashboardName }}\" will remove it for all users. This action cannot be undone. Are you sure you want to permanently delete this dashboard?', {\n          dashboardName\n        })}\n                    </span>\n                </ModalContent>\n                <ModalActions>\n                    <ButtonStrip>{actions}</ButtonStrip>\n                </ModalActions>\n            </Modal>;\n};\nConfirmDeleteDialog.propTypes = {\n  dashboardName: PropTypes.string,\n  open: PropTypes.bool,\n  onContinueEditing: PropTypes.func,\n  onDeleteConfirmed: PropTypes.func\n};\nexport default ConfirmDeleteDialog;","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport TranslationDialog from '@dhis2/d2-ui-translation-dialog';\nimport { Button, ButtonStrip } from '@dhis2/ui';\nimport { useDataEngine, useAlert } from '@dhis2/app-runtime';\nimport { useD2 } from '@dhis2/app-runtime-adapter-d2';\nimport ConfirmDeleteDialog from './ConfirmDeleteDialog';\nimport { tSaveDashboard, acClearEditDashboard, acSetPrintPreviewView, acClearPrintPreviewView } from '../../actions/editDashboard';\nimport { acClearPrintDashboard } from '../../actions/printDashboard';\nimport { tDeleteDashboard, acSetDashboardDisplayName } from '../../actions/dashboards';\nimport { sGetEditDashboardRoot, sGetIsNewDashboard, sGetIsPrintPreviewView } from '../../reducers/editDashboard';\nimport { apiFetchDashboard } from '../../api/dashboards';\nimport classes from './styles/EditBar.module.css';\nconst saveFailedMessage = i18n.t('Failed to save dashboard. You might be offline or not have access to edit this dashboard.');\n\nconst EditBar = props => {\n  const {\n    d2\n  } = useD2({});\n  const dataEngine = useDataEngine();\n  const [translationDlgIsOpen, setTranslationDlgIsOpen] = useState(false);\n  const [dashboard, setDashboard] = useState(undefined);\n  const [confirmDeleteDlgIsOpen, setConfirmDeleteDlgIsOpen] = useState(false);\n  const [redirectUrl, setRedirectUrl] = useState(undefined);\n  const failureAlert = useAlert(saveFailedMessage, {\n    critical: true\n  });\n  useEffect(() => {\n    if (props.dashboardId && !dashboard) {\n      apiFetchDashboard(dataEngine, props.dashboardId).then(dboard => setDashboard(dboard));\n    }\n  }, [props.dashboardId, dashboard]);\n\n  const onConfirmDelete = () => {\n    setConfirmDeleteDlgIsOpen(true);\n  };\n\n  const onSave = () => {\n    props.saveDashboard().then(newId => {\n      setRedirectUrl(`/${newId}`);\n    }).catch(() => failureAlert.show());\n  };\n\n  const onPrintPreview = () => {\n    if (props.isPrintPreviewView) {\n      props.clearPrintPreview();\n      props.clearPrintDashboard();\n    } else {\n      props.showPrintPreview();\n    }\n  };\n\n  const onDiscard = () => {\n    props.onDiscardChanges();\n    const redirectUrl = props.dashboardId ? `/${props.dashboardId}` : '/';\n    setRedirectUrl(redirectUrl);\n  };\n\n  const onContinueEditing = () => {\n    setConfirmDeleteDlgIsOpen(false);\n  };\n\n  const onDeleteConfirmed = () => {\n    setConfirmDeleteDlgIsOpen(false);\n    props.onDelete(props.dashboardId).then(() => {\n      setRedirectUrl('/');\n    });\n  };\n\n  const onTranslationsSaved = async translations => {\n    if (translations && translations.length) {\n      const dbLocale = await d2.currentUser.userSettings.get('keyDbLocale');\n      const translation = translations.find(t => t.locale === dbLocale && t.property === 'NAME');\n\n      if (translation && translation.value) {\n        props.onTranslate(props.dashboardId, translation.value);\n      }\n    }\n  };\n\n  const toggleTranslationDialog = () => setTranslationDlgIsOpen(!translationDlgIsOpen);\n\n  const confirmDeleteDialog = () => props.deleteAccess && props.dashboardId ? <ConfirmDeleteDialog dashboardName={props.dashboardName} onDeleteConfirmed={onDeleteConfirmed} onContinueEditing={onContinueEditing} open={confirmDeleteDlgIsOpen} /> : null;\n\n  const translationDialog = () => dashboard && dashboard.id ? <TranslationDialog className=\"translation-dialog\" d2={d2} open={translationDlgIsOpen} onRequestClose={toggleTranslationDialog} objectToTranslate={{ ...dashboard,\n    modelDefinition: {\n      name: 'dashboard'\n    }\n  }} fieldsToTranslate={['name', 'description']} onTranslationSaved={onTranslationsSaved} onTranslationError={err => console.log('translation update error', err)} /> : null;\n\n  const renderActionButtons = () => <ButtonStrip>\n            <Button primary onClick={onSave} dataTest=\"save-dashboard-button\">\n                {i18n.t('Save changes')}\n            </Button>\n            <Button onClick={onPrintPreview}>\n                {props.isPrintPreviewView ? i18n.t('Exit Print preview') : i18n.t('Print preview')}\n            </Button>\n\n            {props.dashboardId && <Button onClick={toggleTranslationDialog}>\n                    {i18n.t('Translate')}\n                </Button>}\n            {props.dashboardId && props.deleteAccess && <Button onClick={onConfirmDelete} dataTest=\"delete-dashboard-button\">\n                    {i18n.t('Delete')}\n                </Button>}\n        </ButtonStrip>;\n\n  if (redirectUrl) {\n    return <Redirect to={redirectUrl} />;\n  }\n\n  const {\n    updateAccess\n  } = props;\n  const discardBtnText = updateAccess ? i18n.t('Exit without saving') : i18n.t('Go to dashboards');\n  return <>\n            <div className={classes.editBar}>\n                <div className={classes.controls}>\n                    {updateAccess ? renderActionButtons() : null}\n                    <Button secondary onClick={onDiscard}>\n                        {discardBtnText}\n                    </Button>\n                </div>\n            </div>\n            {translationDialog()}\n            {confirmDeleteDialog()}\n        </>;\n};\n\nEditBar.propTypes = {\n  clearPrintDashboard: PropTypes.func,\n  clearPrintPreview: PropTypes.func,\n  dashboardId: PropTypes.string,\n  dashboardName: PropTypes.string,\n  deleteAccess: PropTypes.bool,\n  isPrintPreviewView: PropTypes.bool,\n  saveDashboard: PropTypes.func,\n  showPrintPreview: PropTypes.func,\n  updateAccess: PropTypes.bool,\n  onDelete: PropTypes.func,\n  onDiscardChanges: PropTypes.func,\n  onTranslate: PropTypes.func\n};\n\nconst mapStateToProps = state => {\n  const dashboard = sGetEditDashboardRoot(state);\n  let deleteAccess;\n  let updateAccess;\n\n  if (sGetIsNewDashboard(state)) {\n    deleteAccess = true;\n    updateAccess = true;\n  } else {\n    updateAccess = dashboard.access ? dashboard.access.update : false;\n    deleteAccess = dashboard.access ? dashboard.access.delete : false;\n  }\n\n  return {\n    dashboardId: dashboard.id,\n    dashboardName: dashboard.name,\n    deleteAccess,\n    isPrintPreviewView: sGetIsPrintPreviewView(state),\n    updateAccess\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  clearPrintDashboard: () => dispatch(acClearPrintDashboard()),\n  clearPrintPreview: () => dispatch(acClearPrintPreviewView()),\n  saveDashboard: () => dispatch(tSaveDashboard()).then(id => id),\n  onDelete: id => dispatch(tDeleteDashboard(id)),\n  onDiscardChanges: () => dispatch(acClearEditDashboard()),\n  onTranslate: (id, value) => dispatch(acSetDashboardDisplayName(id, value)),\n  showPrintPreview: () => dispatch(acSetPrintPreviewView())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditBar);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { NoticeBox, CenteredContent } from '@dhis2/ui';\nimport classes from './styles/NotSupportedNotice.module.css';\n\nconst NotSupportedNotice = ({\n  message\n}) => <CenteredContent position=\"top\">\n        <div className={classes.noticeContainer}>\n            <NoticeBox title={i18n.t('Not supported')} warning>\n                {message}\n            </NoticeBox>\n        </div>\n    </CenteredContent>;\n\nNotSupportedNotice.propTypes = {\n  message: PropTypes.string\n};\nexport default NotSupportedNotice;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport classes from './styles/PrintInfo.module.css';\n\nconst PrintInfo = ({\n  isLayout\n}) => {\n  const layoutStyle = isLayout ? i18n.t('dashboard layout') : i18n.t('one item per page');\n  return <div className={classes.container}>\n            <p className={classes.title}>\n                {`${i18n.t('Print Preview')}: ${layoutStyle}`}\n            </p>\n            <div className={classes.printSuggestions}>\n                <p>{`${i18n.t('For best print results')}:`}</p>\n                <ul>\n                    <li>{i18n.t('Use Chrome or Edge web browser')}</li>\n                    <li>\n                        {i18n.t('Wait for all dashboard items to load before printing')}\n                    </li>\n                    <li>\n                        {i18n.t('Use A4 landscape paper size and default margin settings in the browser print dialog')}\n                    </li>\n                </ul>\n            </div>\n            <hr className={classes.divider} />\n        </div>;\n};\n\nPrintInfo.propTypes = {\n  isLayout: PropTypes.bool\n};\nexport default PrintInfo;","import React from 'react';\nimport { colors } from '@dhis2/ui';\n\nconst LessHorizontalIcon = () => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill={colors.grey600} viewBox=\"0 0 24 24\">\n        <path d=\"m13.2928932 6.29289322c.3905243-.39052429 1.0236893-.39052429 1.4142136 0 .3604839.36048396.3882135.92771502.0831886 1.32000622l-.0831886.09420734-4.2921068 4.29289322 4.2921068 4.2928932c.3604839.360484.3882135.927715.0831886 1.3200062l-.0831886.0942074c-.360484.3604839-.927715.3882135-1.3200062.0831886l-.0942074-.0831886-4.99999998-5c-.36048396-.360484-.3882135-.927715-.08318861-1.3200062l.08318861-.0942074z\" />\n    </svg>;\n\nexport default LessHorizontalIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Button } from '@dhis2/ui';\nimport { Link } from 'react-router-dom';\nimport LessHorizontalIcon from '../../icons/LessHorizontal';\nimport classes from './styles/PrintActionsBar.module.css'; // set in PrintActionsBar.module.css\n\nexport const PRINT_ACTIONS_BAR_HEIGHT = 44;\nexport const PRINT_ACTIONS_BAR_HEIGHT_SM = 36;\n\nconst PrintActionsBar = ({\n  id\n}) => {\n  const getExitPrintButton = isSmall => <Button className={isSmall ? classes.buttonSmall : classes.buttonLarge} small={isSmall}>\n            <LessHorizontalIcon />\n            {i18n.t('Exit print preview')}\n        </Button>;\n\n  const getPrintButton = isSmall => <Button className={isSmall ? classes.buttonSmall : classes.buttonLarge} small={isSmall} onClick={window.print}>\n            {i18n.t('Print')}\n        </Button>;\n\n  return <>\n            <div className={classes.container}>\n                <div className={classes.actions}>\n                    <Link className={classes.link} to={`/${id}`}>\n                        {getExitPrintButton(true)}\n                        {getExitPrintButton(false)}\n                    </Link>\n                    {getPrintButton(true)}\n                    {getPrintButton(false)}\n                </div>\n            </div>\n        </>;\n};\n\nPrintActionsBar.propTypes = {\n  id: PropTypes.string\n};\nexport default PrintActionsBar;","import sortBy from 'lodash/sortBy';\nimport { orArray } from './util';\nimport { itemTypeMap } from './itemTypes'; // for A4 landscape (297x210mm)\n// 794 px = (21cm / 2.54) * 96 pixels/inch\n// 1122 px = 29.7 /2.54 * 96 pixels/inch\n// const a4LandscapeHeightPx = 794\n\nexport const A4_LANDSCAPE_WIDTH_PX = 1102;\nexport const getTransformYPx = elStyle => {\n  if (!elStyle || !elStyle.transform) {\n    return null;\n  } // find valid transforms - those with y pixels\n  // the code is expecting the transform prop to\n  // look like:  translate(10px, 300px)\n\n\n  const transformY = elStyle.transform.split(' ')[1]?.match(/(\\d+)px/);\n\n  if (transformY) {\n    return parseInt(transformY[1]);\n  } else {\n    return null;\n  }\n};\nexport const getDomGridItemsSortedByYPos = elements => {\n  const types = Object.keys(itemTypeMap);\n  const elementsWithBoundingRect = orArray(elements).map(el => {\n    const type = Array.from(el.classList).find(className => types.indexOf(className) > -1);\n    const rect = el.getBoundingClientRect();\n    const y = getTransformYPx(el.style) || parseInt(rect.y);\n    return {\n      type,\n      classList: el.classList,\n      bottomY: y + parseInt(rect.height),\n      el\n    };\n  });\n  return sortBy(elementsWithBoundingRect, ['bottomY']);\n};\n\nconst isLeapPage = n => {\n  // pages 5,9,13,17,21,25,29... are leap pages\n  let x = 0;\n  const startPage = 1;\n\n  const getMultiple = factor => startPage + 4 * factor;\n\n  let multiple = getMultiple(0);\n  let isLeapPage = false;\n\n  while (multiple < n) {\n    multiple = getMultiple(x);\n    ++x;\n\n    if (multiple === n) {\n      isLeapPage = true;\n      break;\n    }\n  }\n\n  return isLeapPage;\n};\n\nexport const getPageBreakPositions = items => {\n  // add enough page breaks so that each item could\n  // be put on its own page. Due to the react-grid-layout\n  // unit system, we have to estimate roughly the size of each\n  // page. At regular intervals add a unit, like a leap year\n  const yPosList = [];\n  let yPos = 0;\n\n  for (let pageNum = 1; pageNum <= items.length; ++pageNum) {\n    if (pageNum === 1) {\n      yPos += 35;\n    } else if (isLeapPage(pageNum)) {\n      yPos += 40;\n    } else {\n      yPos += 39;\n    }\n\n    yPosList.push(yPos);\n  }\n\n  return yPosList;\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport ReactGridLayout from 'react-grid-layout';\nimport i18n from '@dhis2/d2-i18n';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport { GRID_ROW_HEIGHT_PX, GRID_COMPACT_TYPE, MARGIN_PX, GRID_COLUMNS } from '../../modules/gridUtil';\nimport { A4_LANDSCAPE_WIDTH_PX } from '../../modules/printUtils';\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\nimport './styles/ItemGrid.css';\n\nconst StaticGrid = ({\n  layout,\n  children,\n  onLayoutChange,\n  className,\n  isLoading\n}) => {\n  if (!isLoading && !layout.length) {\n    return <NoContentMessage text={i18n.t('There are no items on this dashboard')} />;\n  }\n\n  return <>\n            {isLoading ? <Layer translucent>\n                    <CenteredContent>\n                        <CircularLoader />\n                    </CenteredContent>\n                </Layer> : null}\n            <ReactGridLayout margin={MARGIN_PX} cols={GRID_COLUMNS} rowHeight={GRID_ROW_HEIGHT_PX} width={A4_LANDSCAPE_WIDTH_PX} compactType={GRID_COMPACT_TYPE} isDraggable={false} isResizable={false} draggableCancel=\"input,textarea\" className={cx('layout', className)} layout={layout} onLayoutChange={onLayoutChange}>\n                {children}\n            </ReactGridLayout>\n        </>;\n};\n\nStaticGrid.defaultProps = {\n  onLayoutChange: Function.prototype\n};\nStaticGrid.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  isLoading: PropTypes.bool,\n  layout: PropTypes.array,\n  onLayoutChange: PropTypes.func\n};\nexport default StaticGrid;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport sortBy from 'lodash/sortBy';\nimport cx from 'classnames';\nimport StaticGrid from './StaticGrid';\nimport { Item } from '../Item/Item';\nimport { acUpdatePrintDashboardLayout } from '../../actions/printDashboard';\nimport { sGetSelectedIsLoading } from '../../reducers/selected';\nimport { sGetPrintDashboardRoot, sGetPrintDashboardItems } from '../../reducers/printDashboard';\nimport { sGetIsEditing } from '../../reducers/editDashboard';\nimport { hasShape } from '../../modules/gridUtil';\nimport { getDomGridItemsSortedByYPos, getTransformYPx } from '../../modules/printUtils';\nimport { PRINT_LAYOUT } from '../Dashboard/dashboardModes';\nimport { PAGEBREAK } from '../../modules/itemTypes';\nexport class PrintLayoutItemGrid extends Component {\n  onLayoutChange = newLayout => {\n    this.props.updateDashboardLayout(newLayout);\n  };\n  isFirstPageBreak = item => {\n    if (item.type !== PAGEBREAK) {\n      return false;\n    }\n\n    const pageBreaks = this.props.dashboardItems.filter(i => i.type === PAGEBREAK);\n    const sortedPageBreaks = sortBy(pageBreaks, ['y']);\n    return item.y === sortedPageBreaks[0].y;\n  };\n  getItemComponent = item => {\n    // the first-page-break class is used in Edit print preview\n    const itemClassNames = cx('print', 'layout', `${item.type}`, {\n      'first-page-break': this.props.isEditing && this.isFirstPageBreak(item),\n      shortened: !!item.shortened\n    });\n    return <div key={item.i} className={itemClassNames}>\n                <Item item={item} dashboardMode={PRINT_LAYOUT} />\n            </div>;\n  };\n  getItemComponents = items => items.map(item => this.getItemComponent(item));\n\n  hideExtraPageBreaks() {\n    const sortedElements = getDomGridItemsSortedByYPos(Array.from(document.querySelectorAll('.react-grid-item')));\n    let pageBreakBottom = 0;\n    let lastItemBottom = 0;\n    let foundNonPageBreak = false;\n\n    for (let i = sortedElements.length - 1; i >= 0; --i) {\n      const item = sortedElements[i];\n\n      if (item.type === PAGEBREAK) {\n        if (!foundNonPageBreak) {\n          item.el.classList.add('removed');\n        } else {\n          pageBreakBottom = item.bottomY;\n          break;\n        }\n      } else {\n        foundNonPageBreak = true;\n        const thisItemBottom = item.bottomY;\n\n        if (thisItemBottom > lastItemBottom) {\n          lastItemBottom = thisItemBottom;\n        }\n      }\n    }\n\n    const pageHeight = 720;\n    const gridElement = document.querySelector('.react-grid-layout'); // the last page break is before the last item(s) so\n    // maxHeight is one page beyond the last page break\n\n    const maxHeight = pageBreakBottom + pageHeight;\n\n    if (gridElement) {\n      gridElement.style.height = `${maxHeight}px`;\n    }\n\n    if (this.props.isEditing) {\n      //scroll to below the title page - which is middle of the first pagebreak\n      const firstBreak = document.querySelector('.first-page-break');\n\n      if (firstBreak && firstBreak.style && firstBreak.style.transform) {\n        const yPos = getTransformYPx(firstBreak.style);\n        const scrollArea = document.querySelector('.scroll-area');\n        scrollArea && scrollArea.scroll(0, yPos + 50);\n      }\n    }\n  }\n\n  componentDidMount() {\n    this.hideExtraPageBreaks();\n  }\n\n  componentDidUpdate() {\n    this.hideExtraPageBreaks();\n  }\n\n  render() {\n    const {\n      isLoading,\n      dashboardItems\n    } = this.props;\n    return <StaticGrid isLoading={isLoading} layout={dashboardItems} onLayoutChange={this.onLayoutChange}>\n                {this.getItemComponents(dashboardItems)}\n            </StaticGrid>;\n  }\n\n}\nPrintLayoutItemGrid.propTypes = {\n  dashboardItems: PropTypes.array,\n  isEditing: PropTypes.bool,\n  isLoading: PropTypes.bool,\n  updateDashboardLayout: PropTypes.func\n};\nPrintLayoutItemGrid.defaultProps = {\n  dashboardItems: []\n};\n\nconst mapStateToProps = state => {\n  const selectedDashboard = sGetPrintDashboardRoot(state);\n  return {\n    isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n    dashboardItems: sGetPrintDashboardItems(state).filter(hasShape),\n    isEditing: sGetIsEditing(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  updateDashboardLayout: acUpdatePrintDashboardLayout\n})(PrintLayoutItemGrid);","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { spacers } from '@dhis2/ui';\nimport cx from 'classnames';\nimport PrintInfo from './PrintInfo';\nimport PrintActionsBar, { PRINT_ACTIONS_BAR_HEIGHT, PRINT_ACTIONS_BAR_HEIGHT_SM } from './PrintActionsBar';\nimport PrintLayoutItemGrid from '../ItemGrid/PrintLayoutItemGrid';\nimport { acSetPrintDashboard, acAddPrintDashboardItem, acUpdatePrintDashboardItem } from '../../actions/printDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { sGetEditDashboardRoot, sGetEditDashboardItems } from '../../reducers/editDashboard';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport { PAGEBREAK, PRINT_TITLE_PAGE } from '../../modules/itemTypes';\nimport { MAX_ITEM_GRID_HEIGHT } from '../../modules/gridUtil';\nimport { getControlBarHeight, HEADERBAR_HEIGHT } from '../ControlBar/controlBarDimensions';\nimport { DRAG_HANDLE_HEIGHT } from '../ControlBar/ControlBar';\nimport { useWindowDimensions } from '../WindowDimensionsProvider';\nimport { isSmallScreen } from '../../modules/smallScreen';\nimport { getPageBreakPositions } from '../../modules/printUtils';\nimport classes from './styles/PrintLayoutDashboard.module.css';\nimport './styles/print.css';\nimport './styles/print-layout.css';\nconst EDIT_BAR_HEIGHT = getControlBarHeight(1) + DRAG_HANDLE_HEIGHT;\n\nconst addPageBreaks = (items, addDashboardItem) => {\n  const yPosList = getPageBreakPositions(items);\n\n  for (let i = 0; i < items.length; ++i) {\n    addDashboardItem({\n      type: PAGEBREAK,\n      yPos: yPosList[i]\n    });\n  }\n};\n\nconst PrintLayoutDashboard = ({\n  dashboard,\n  items,\n  setPrintDashboard,\n  addDashboardItem,\n  updateDashboardItem,\n  fromEdit\n}) => {\n  const {\n    width,\n    height\n  } = useWindowDimensions();\n  const actionBarHeight = isSmallScreen(width) ? PRINT_ACTIONS_BAR_HEIGHT_SM : PRINT_ACTIONS_BAR_HEIGHT;\n  useEffect(() => {\n    if (dashboard) {\n      setPrintDashboard(dashboard, items); // If any items are taller than one page, reduce it to one\n      // page (react-grid-layout units)\n\n      items.forEach(item => {\n        if (item.h > MAX_ITEM_GRID_HEIGHT) {\n          item.shortened = true;\n          updateDashboardItem(Object.assign({}, item, {\n            h: MAX_ITEM_GRID_HEIGHT\n          }));\n        }\n      });\n      addPageBreaks(items, addDashboardItem);\n      addDashboardItem({\n        type: PRINT_TITLE_PAGE,\n        isOneItemPerPage: false\n      });\n    }\n  }, [dashboard, items]);\n\n  const getContainerStyle = () => {\n    return fromEdit ? {\n      paddingTop: spacers.dp24,\n      height: height - EDIT_BAR_HEIGHT - HEADERBAR_HEIGHT\n    } : {\n      height: height - actionBarHeight\n    };\n  };\n\n  return <>\n            {!fromEdit && <PrintActionsBar id={dashboard.id} />}\n            <div className={cx(classes.container, 'scroll-area')} style={getContainerStyle()}>\n                {!fromEdit && <PrintInfo isLayout={true} />}\n                <div className={classes.pageOuter} data-test=\"print-layout-page\">\n                    <PrintLayoutItemGrid />\n                </div>\n            </div>\n        </>;\n};\n\nPrintLayoutDashboard.propTypes = {\n  addDashboardItem: PropTypes.func,\n  dashboard: PropTypes.object,\n  fromEdit: PropTypes.bool,\n  items: PropTypes.array,\n  setPrintDashboard: PropTypes.func,\n  updateDashboardItem: PropTypes.func\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const id = sGetSelectedId(state);\n\n  if (ownProps.fromEdit) {\n    const dashboard = sGetEditDashboardRoot(state);\n    return {\n      dashboard,\n      id,\n      items: sGetEditDashboardItems(state)\n    };\n  }\n\n  const dashboard = id ? sGetDashboardById(state, id) : null;\n  return {\n    dashboard,\n    id,\n    items: sGetDashboardItems(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setPrintDashboard: acSetPrintDashboard,\n  addDashboardItem: acAddPrintDashboardItem,\n  updateDashboardItem: acUpdatePrintDashboardItem\n})(PrintLayoutDashboard);","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport EditTitleBar from '../TitleBar/EditTitleBar';\nimport EditItemGrid from '../ItemGrid/EditItemGrid';\nimport EditBar from '../ControlBar/EditBar';\nimport NotSupportedNotice from './NotSupportedNotice';\nimport { useWindowDimensions } from '../WindowDimensionsProvider';\nimport LayoutPrintPreview from './PrintLayoutDashboard';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport { acSetEditDashboard } from '../../actions/editDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport { sGetIsPrintPreviewView } from '../../reducers/editDashboard';\nimport { getControlBarHeight, HEADERBAR_HEIGHT } from '../ControlBar/controlBarDimensions';\nimport { isSmallScreen } from '../../modules/smallScreen';\n\nconst EditDashboard = props => {\n  const {\n    width,\n    height\n  } = useWindowDimensions();\n  useEffect(() => {\n    if (props.dashboard) {\n      props.setEditDashboard(props.dashboard, props.items);\n    }\n  }, [props.dashboard]);\n\n  const renderGrid = () => {\n    if (props.isPrintPreviewView) {\n      return <LayoutPrintPreview fromEdit={true} />;\n    }\n\n    const dashboardHeight = height - HEADERBAR_HEIGHT - getControlBarHeight(1);\n    return <div className=\"dashboard-wrapper\" style={{\n      height: dashboardHeight\n    }}>\n                <EditTitleBar />\n                <EditItemGrid />\n            </div>;\n  };\n\n  const renderEditView = () => <>\n            <EditBar />\n            {props.updateAccess ? renderGrid() : <NoContentMessage text={i18n.t('No access')} />}\n        </>;\n\n  return <>\n            {isSmallScreen(width) ? <NotSupportedNotice message={i18n.t('Editing dashboards on small screens is not supported. Resize your screen to return to edit mode.')} /> : renderEditView()}\n        </>;\n};\n\nEditDashboard.propTypes = {\n  dashboard: PropTypes.object,\n  isPrintPreviewView: PropTypes.bool,\n  items: PropTypes.array,\n  setEditDashboard: PropTypes.func,\n  updateAccess: PropTypes.bool\n};\n\nconst mapStateToProps = state => {\n  const id = sGetSelectedId(state);\n  const dashboard = id ? sGetDashboardById(state, id) : null;\n  const updateAccess = dashboard && dashboard.access ? dashboard.access.update : false;\n  return {\n    dashboard,\n    updateAccess,\n    items: sGetDashboardItems(state),\n    isPrintPreviewView: sGetIsPrintPreviewView(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setEditDashboard: acSetEditDashboard\n})(EditDashboard);","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport EditBar from '../ControlBar/EditBar';\nimport EditTitleBar from '../TitleBar/EditTitleBar';\nimport EditItemGrid from '../ItemGrid/EditItemGrid';\nimport LayoutPrintPreview from './PrintLayoutDashboard';\nimport NotSupportedNotice from './NotSupportedNotice';\nimport { acSetEditNewDashboard } from '../../actions/editDashboard';\nimport { sGetIsPrintPreviewView } from '../../reducers/editDashboard';\nimport { getControlBarHeight, HEADERBAR_HEIGHT } from '../ControlBar/controlBarDimensions';\nimport { useWindowDimensions } from '../WindowDimensionsProvider';\nimport { isSmallScreen } from '../../modules/smallScreen';\n\nconst NewDashboard = props => {\n  const {\n    width,\n    height\n  } = useWindowDimensions();\n  useEffect(() => {\n    props.setNewDashboard();\n  }, []);\n  const dashboardHeight = height - HEADERBAR_HEIGHT - getControlBarHeight(1);\n\n  const renderNewView = () => <>\n            <EditBar />\n            {props.isPrintPreviewView ? <LayoutPrintPreview fromEdit={true} /> : <div className=\"dashboard-wrapper\" style={{\n      height: dashboardHeight\n    }}>\n                    <EditTitleBar />\n                    <EditItemGrid />\n                </div>}\n        </>;\n\n  return <>\n            {isSmallScreen(width) ? <NotSupportedNotice message={i18n.t('Creating dashboards on small screens is not supported. Resize your screen to return to create mode.')} /> : renderNewView()}\n        </>;\n};\n\nNewDashboard.propTypes = {\n  isPrintPreviewView: PropTypes.bool,\n  setNewDashboard: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  isPrintPreviewView: sGetIsPrintPreviewView(state)\n});\n\nexport default connect(mapStateToProps, {\n  setNewDashboard: acSetEditNewDashboard\n})(NewDashboard);","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport StaticGrid from './StaticGrid';\nimport { Item } from '../Item/Item';\nimport { hasShape } from '../../modules/gridUtil';\nimport { PRINT } from '../Dashboard/dashboardModes';\nimport { sGetSelectedIsLoading } from '../../reducers/selected';\nimport { sGetPrintDashboardRoot, sGetPrintDashboardItems } from '../../reducers/printDashboard';\nimport { orArray } from '../../modules/util';\n\nconst PrintItemGrid = ({\n  isLoading,\n  dashboardItems\n}) => {\n  const getItemComponent = item => <div key={item.i} className={cx(item.type, 'print', 'oipp')}>\n            <Item item={item} dashboardMode={PRINT} />\n        </div>;\n\n  const getItemComponents = items => items.map(item => getItemComponent(item));\n\n  return <StaticGrid isLoading={isLoading} className=\"print\" layout={dashboardItems}>\n            {getItemComponents(dashboardItems)}\n        </StaticGrid>;\n};\n\nPrintItemGrid.propTypes = {\n  dashboardItems: PropTypes.array,\n  isLoading: PropTypes.bool\n};\n\nconst mapStateToProps = state => {\n  const selectedDashboard = sGetPrintDashboardRoot(state);\n  return {\n    isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n    dashboardItems: orArray(sGetPrintDashboardItems(state)).filter(hasShape)\n  };\n};\n\nexport default connect(mapStateToProps)(PrintItemGrid);","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport sortBy from 'lodash/sortBy';\nimport PrintInfo from './PrintInfo';\nimport PrintActionsBar, { PRINT_ACTIONS_BAR_HEIGHT, PRINT_ACTIONS_BAR_HEIGHT_SM } from './PrintActionsBar';\nimport PrintItemGrid from '../ItemGrid/PrintItemGrid';\nimport { acSetPrintDashboard, acAddPrintDashboardItem, acRemovePrintDashboardItem, acUpdatePrintDashboardItem } from '../../actions/printDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport { PAGEBREAK, PRINT_TITLE_PAGE, SPACER } from '../../modules/itemTypes';\nimport { MAX_ITEM_GRID_HEIGHT_OIPP, MAX_ITEM_GRID_WIDTH_OIPP } from '../../modules/gridUtil';\nimport { useWindowDimensions } from '../WindowDimensionsProvider';\nimport { isSmallScreen } from '../../modules/smallScreen';\nimport classes from './styles/PrintDashboard.module.css';\nimport './styles/print.css';\nimport './styles/print-oipp.css';\n\nconst PrintDashboard = ({\n  dashboard,\n  items,\n  setPrintDashboard,\n  addDashboardItem,\n  updateDashboardItem,\n  removeDashboardItem\n}) => {\n  useEffect(() => {\n    if (dashboard) {\n      //sort the items by Y pos so they print in order of top to bottom\n      const sortedItems = sortBy(items, ['y', 'x']);\n      setPrintDashboard(dashboard, sortedItems); // remove spacers - don't want empty pages\n\n      let spacerCount = 0;\n      items.forEach(item => {\n        if (item.type === SPACER) {\n          spacerCount += 1;\n          removeDashboardItem(item.id);\n        }\n      }); // Resize the items to the full page size\n\n      items.forEach(item => {\n        updateDashboardItem(Object.assign({}, item, {\n          w: MAX_ITEM_GRID_WIDTH_OIPP,\n          h: MAX_ITEM_GRID_HEIGHT_OIPP\n        }));\n      }); // insert page breaks into the document flow to create the \"pages\"\n      // when previewing the print\n\n      for (let i = 0; i < (items.length - spacerCount) * 2; i += 2) {\n        addDashboardItem({\n          type: PAGEBREAK,\n          position: i,\n          isStatic: false\n        });\n      }\n\n      addDashboardItem({\n        type: PRINT_TITLE_PAGE,\n        isOneItemPerPage: true\n      });\n    }\n  }, [dashboard, items]);\n  const {\n    width,\n    height\n  } = useWindowDimensions();\n  const availableHeight = height - (isSmallScreen(width) ? PRINT_ACTIONS_BAR_HEIGHT_SM : PRINT_ACTIONS_BAR_HEIGHT);\n  return <>\n            <PrintActionsBar id={dashboard.id} />\n            <div className={classes.container} style={{\n      height: availableHeight\n    }}>\n                <PrintInfo isLayout={false} />\n                <div className={classes.pageOuter} data-test=\"print-oipp-page\">\n                    <PrintItemGrid />\n                </div>\n            </div>\n        </>;\n};\n\nPrintDashboard.propTypes = {\n  addDashboardItem: PropTypes.func,\n  dashboard: PropTypes.object,\n  items: PropTypes.array,\n  removeDashboardItem: PropTypes.func,\n  setPrintDashboard: PropTypes.func,\n  updateDashboardItem: PropTypes.func\n};\n\nconst mapStateToProps = state => {\n  const id = sGetSelectedId(state);\n  const dashboard = id ? sGetDashboardById(state, id) : null;\n  return {\n    dashboard,\n    id,\n    items: sGetDashboardItems(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setPrintDashboard: acSetPrintDashboard,\n  addDashboardItem: acAddPrintDashboardItem,\n  removeDashboardItem: acRemovePrintDashboardItem,\n  updateDashboardItem: acUpdatePrintDashboardItem\n})(PrintDashboard);","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport isEmpty from 'lodash/isEmpty';\nimport i18n from '@dhis2/d2-i18n';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport { Redirect } from 'react-router-dom';\nimport DashboardsBar from '../ControlBar/DashboardsBar';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport ViewDashboard from './ViewDashboard';\nimport EditDashboard from './EditDashboard';\nimport NewDashboard from './NewDashboard';\nimport PrintDashboard from './PrintDashboard';\nimport PrintLayoutDashboard from './PrintLayoutDashboard';\nimport { tSelectDashboard } from '../../actions/dashboards';\nimport { acClearEditDashboard } from '../../actions/editDashboard';\nimport { sDashboardsIsFetching, sGetAllDashboards } from '../../reducers/dashboards';\nimport { sGetSelectedId, NON_EXISTING_DASHBOARD_ID } from '../../reducers/selected';\nimport { EDIT, NEW, VIEW, PRINT, PRINT_LAYOUT, isPrintMode, isEditMode } from './dashboardModes';\nimport { useWindowDimensions } from '../WindowDimensionsProvider';\nimport { isSmallScreen } from '../../modules/smallScreen';\n\nconst setHeaderbarVisibility = mode => {\n  const header = document.getElementsByTagName('header')[0];\n\n  if (isPrintMode(mode)) {\n    header.classList.add('hidden');\n  } else {\n    header.classList.remove('hidden');\n  }\n};\n\nconst dashboardMap = {\n  [VIEW]: <ViewDashboard />,\n  [EDIT]: <EditDashboard />,\n  [NEW]: <NewDashboard />,\n  [PRINT]: <PrintDashboard />,\n  [PRINT_LAYOUT]: <PrintLayoutDashboard />\n};\n\nconst Dashboard = ({\n  id,\n  mode,\n  dashboardsLoaded,\n  dashboardsIsEmpty,\n  routeId,\n  selectDashboard,\n  clearEditDashboard\n}) => {\n  const {\n    width\n  } = useWindowDimensions();\n  const [redirectUrl, setRedirectUrl] = useState(null);\n  useEffect(() => {\n    setHeaderbarVisibility(mode);\n  }, [mode]);\n  useEffect(() => {\n    if (isSmallScreen(width) && isEditMode(mode)) {\n      const redirectUrl = routeId ? `/${routeId}` : '/';\n      setRedirectUrl(redirectUrl);\n    } else {\n      setRedirectUrl(null);\n    }\n  }, [mode]);\n  useEffect(() => {\n    if (!isEditMode(mode)) {\n      clearEditDashboard();\n    }\n  }, [mode]);\n  useEffect(() => {\n    if (dashboardsLoaded && !dashboardsIsEmpty) {\n      selectDashboard(routeId);\n    }\n  }, [dashboardsLoaded, dashboardsIsEmpty, routeId, mode]);\n\n  if (!dashboardsLoaded) {\n    return <Layer translucent>\n                <CenteredContent>\n                    <CircularLoader />\n                </CenteredContent>\n            </Layer>;\n  }\n\n  if (redirectUrl) {\n    return <Redirect to={redirectUrl} />;\n  }\n\n  if (mode === NEW) {\n    return dashboardMap[mode];\n  }\n\n  if (dashboardsIsEmpty) {\n    return <>\n                <DashboardsBar />\n                <NoContentMessage text={i18n.t('No dashboards found. Use the + button to create a new dashboard.')} />\n            </>;\n  }\n\n  if (id === NON_EXISTING_DASHBOARD_ID) {\n    return <>\n                <DashboardsBar />\n                <NoContentMessage text={i18n.t('Requested dashboard not found')} />\n            </>;\n  }\n\n  if (id === null) {\n    return <Layer translucent>\n                <CenteredContent>\n                    <CircularLoader />\n                </CenteredContent>\n            </Layer>;\n  }\n\n  return dashboardMap[mode];\n};\n\nDashboard.propTypes = {\n  dashboardsIsEmpty: PropTypes.bool,\n  dashboardsLoaded: PropTypes.bool,\n  id: PropTypes.string,\n  match: PropTypes.object,\n  // provided by the react-router-dom\n  mode: PropTypes.string,\n  routeId: PropTypes.string,\n  selectDashboard: PropTypes.func\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const dashboards = sGetAllDashboards(state);\n  return {\n    dashboardsIsEmpty: isEmpty(dashboards),\n    dashboardsLoaded: !sDashboardsIsFetching(state),\n    id: sGetSelectedId(state),\n    routeId: ownProps.match?.params?.dashboardId || null\n  };\n};\n\nexport default connect(mapStateToProps, {\n  selectDashboard: tSelectDashboard,\n  clearEditDashboard: acClearEditDashboard\n})(Dashboard);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { AlertBar, AlertStack } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport { sGetAlertMessage } from '../../reducers/alert';\nimport { acClearAlertMessage } from '../../actions/alert';\nexport const Alert = ({\n  message,\n  onClose\n}) => message ? <AlertStack>\n            <AlertBar onHidden={onClose} permanent>\n                {message}\n            </AlertBar>\n        </AlertStack> : null;\nAlert.propTypes = {\n  message: PropTypes.string,\n  onClose: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  message: sGetAlertMessage(state)\n});\n\nexport default connect(mapStateToProps, {\n  onClose: acClearAlertMessage\n})(Alert);","// filter out CATEGORY that are not of type ATTRIBUTE\nconst filteredDimensions = dimensions => dimensions.filter(dim => dim.dimensionType !== 'CATEGORY' || dim.dimensionType === 'CATEGORY' && dim.dataDimensionType === 'ATTRIBUTE');\n\nexport default filteredDimensions;","import React, { useEffect } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { CssVariables } from '@dhis2/ui';\nimport { useD2 } from '@dhis2/app-runtime-adapter-d2';\nimport { apiFetchDimensions } from '@dhis2/analytics';\nimport { useDataEngine } from '@dhis2/app-runtime';\nimport Dashboard from './Dashboard/Dashboard';\nimport AlertBar from './AlertBar/AlertBar';\nimport { useSystemSettings } from './SystemSettingsProvider';\nimport { acReceivedUser } from '../actions/user';\nimport { tFetchDashboards } from '../actions/dashboards';\nimport { tSetControlBarRows } from '../actions/controlBar';\nimport { tSetShowDescription } from '../actions/selected';\nimport { acSetDimensions } from '../actions/dimensions';\nimport getFilteredDimensions from '../modules/getFilteredDimensions';\nimport { EDIT, VIEW, NEW, PRINT, PRINT_LAYOUT } from './Dashboard/dashboardModes';\nimport './App.css';\n\nconst App = props => {\n  const {\n    d2\n  } = useD2({});\n  const dataEngine = useDataEngine();\n  const {\n    settings\n  } = useSystemSettings();\n  useEffect(() => {\n    props.setCurrentUser(d2.currentUser);\n    props.fetchDashboards();\n    props.setControlBarRows();\n    props.setShowDescription();\n  }, []);\n  useEffect(() => {\n    const fetchDimensions = async () => {\n      try {\n        const dimensions = await apiFetchDimensions(dataEngine, settings.displayNameProperty);\n        props.setDimensions(getFilteredDimensions(dimensions));\n      } catch (e) {\n        console.error(e);\n      }\n    };\n\n    if (settings.displayNameProperty) {\n      fetchDimensions();\n    }\n  }, [settings]);\n  return <>\n            <CssVariables colors spacers />\n            <Router>\n                <Switch>\n                    <Route exact path=\"/\" render={props => <Dashboard {...props} mode={VIEW} />} />\n                    <Route exact path=\"/new\" render={props => <Dashboard {...props} mode={NEW} />} />\n                    <Route exact path=\"/:dashboardId\" render={props => <Dashboard {...props} mode={VIEW} />} />\n                    <Route exact path=\"/:dashboardId/edit\" render={props => <Dashboard {...props} mode={EDIT} />} />\n                    <Route exact path=\"/:dashboardId/printoipp\" render={props => <Dashboard {...props} mode={PRINT} />} />\n                    <Route exact path=\"/:dashboardId/printlayout\" render={props => <Dashboard {...props} mode={PRINT_LAYOUT} />} />\n                </Switch>\n            </Router>\n            <AlertBar />\n        </>;\n};\n\nApp.propTypes = {\n  fetchDashboards: PropTypes.func.isRequired,\n  setControlBarRows: PropTypes.func.isRequired,\n  setCurrentUser: PropTypes.func.isRequired,\n  setDimensions: PropTypes.func.isRequired,\n  setShowDescription: PropTypes.func.isRequired\n};\nconst mapDispatchToProps = {\n  fetchDashboards: tFetchDashboards,\n  setControlBarRows: tSetControlBarRows,\n  setCurrentUser: acReceivedUser,\n  setDimensions: acSetDimensions,\n  setShowDescription: tSetShowDescription\n};\nexport default connect(null, mapDispatchToProps)(App);","import { RECEIVED_USER } from '../reducers/user';\nexport const acReceivedUser = value => ({\n  type: RECEIVED_USER,\n  value\n});","import { SET_DIMENSIONS } from '../reducers/dimensions';\nexport const acSetDimensions = dimensions => ({\n  type: SET_DIMENSIONS,\n  value: dimensions\n});","/** @module reducers/selected */\nimport { validateReducer } from '../modules/util';\nexport const SET_STYLE = 'SET_STYLE';\nexport const DEFAULT_STATE_STYLE = 'LIST';\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\n\nconst style = (state = DEFAULT_STATE_STYLE, action) => {\n  switch (action.type) {\n    case SET_STYLE:\n      return validateReducer(action.value, DEFAULT_STATE_STYLE);\n\n    default:\n      return state;\n  }\n};\n\nexport default style;\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\n\nexport const sGetStyleRoot = state => state.style;","import { combineReducers } from 'redux';\nimport dashboards from './dashboards';\nimport selected from './selected';\nimport dashboardsFilter from './dashboardsFilter';\nimport controlBar from './controlBar';\nimport visualizations from './visualizations';\nimport editDashboard from './editDashboard';\nimport printDashboard from './printDashboard';\nimport messages from './messages';\nimport user from './user';\nimport alert from './alert';\nimport itemFilters from './itemFilters';\nimport style from './style';\nimport dimensions from './dimensions';\nimport activeModalDimension from './activeModalDimension';\nexport default combineReducers({\n  dashboards,\n  selected,\n  dashboardsFilter,\n  controlBar,\n  visualizations,\n  messages,\n  user,\n  editDashboard,\n  printDashboard,\n  itemFilters,\n  style,\n  alert,\n  dimensions,\n  activeModalDimension\n});","import { createStore, applyMiddleware, compose } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport reducer from './reducers';\n\nconst configureStore = dataEngine => {\n  const middleware = [thunk.withExtraArgument(dataEngine)]; // Enable Redux devtools if extension is installed instead of redux-logger\n\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n  if (!window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ && process.env.NODE_ENV !== 'production') {\n    middleware.push(createLogger());\n  }\n\n  return createStore(reducer, composeEnhancers(applyMiddleware(...middleware)));\n};\n\nexport default configureStore;","//------------------------------------------------------------------------------\n// <auto-generated>\n// This code was generated by d2-i18n-generate.\n//\n// Changes to this file may cause incorrect behavior and will be lost if\n// the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\nimport i18n from '@dhis2/d2-i18n';\nimport arTranslations from './ar/translations.json';\nimport ar_IQTranslations from './ar_IQ/translations.json';\nimport ckbTranslations from './ckb/translations.json';\nimport csTranslations from './cs/translations.json';\nimport daTranslations from './da/translations.json';\nimport enTranslations from './en/translations.json';\nimport esTranslations from './es/translations.json';\nimport frTranslations from './fr/translations.json';\nimport idTranslations from './id/translations.json';\nimport kmTranslations from './km/translations.json';\nimport loTranslations from './lo/translations.json';\nimport myTranslations from './my/translations.json';\nimport nbTranslations from './nb/translations.json';\nimport prsTranslations from './prs/translations.json';\nimport psTranslations from './ps/translations.json';\nimport ptTranslations from './pt/translations.json';\nimport pt_BRTranslations from './pt_BR/translations.json';\nimport ruTranslations from './ru/translations.json';\nimport svTranslations from './sv/translations.json';\nimport tetTranslations from './tet/translations.json';\nimport tgTranslations from './tg/translations.json';\nimport ukTranslations from './uk/translations.json';\nimport urTranslations from './ur/translations.json';\nimport uzTranslations from './uz/translations.json';\nimport uz_CyrlTranslations from './uz_Cyrl/translations.json';\nimport uz_LatnTranslations from './uz_Latn/translations.json';\nimport viTranslations from './vi/translations.json';\nimport zhTranslations from './zh/translations.json';\nimport zh_CNTranslations from './zh_CN/translations.json';\nconst namespace = 'default';\ni18n.addResources('ar', namespace, arTranslations);\ni18n.addResources('ar_IQ', namespace, ar_IQTranslations);\ni18n.addResources('ckb', namespace, ckbTranslations);\ni18n.addResources('cs', namespace, csTranslations);\ni18n.addResources('da', namespace, daTranslations);\ni18n.addResources('en', namespace, enTranslations);\ni18n.addResources('es', namespace, esTranslations);\ni18n.addResources('fr', namespace, frTranslations);\ni18n.addResources('id', namespace, idTranslations);\ni18n.addResources('km', namespace, kmTranslations);\ni18n.addResources('lo', namespace, loTranslations);\ni18n.addResources('my', namespace, myTranslations);\ni18n.addResources('nb', namespace, nbTranslations);\ni18n.addResources('prs', namespace, prsTranslations);\ni18n.addResources('ps', namespace, psTranslations);\ni18n.addResources('pt', namespace, ptTranslations);\ni18n.addResources('pt_BR', namespace, pt_BRTranslations);\ni18n.addResources('ru', namespace, ruTranslations);\ni18n.addResources('sv', namespace, svTranslations);\ni18n.addResources('tet', namespace, tetTranslations);\ni18n.addResources('tg', namespace, tgTranslations);\ni18n.addResources('uk', namespace, ukTranslations);\ni18n.addResources('ur', namespace, urTranslations);\ni18n.addResources('uz', namespace, uzTranslations);\ni18n.addResources('uz_Cyrl', namespace, uz_CyrlTranslations);\ni18n.addResources('uz_Latn', namespace, uz_LatnTranslations);\ni18n.addResources('vi', namespace, viTranslations);\ni18n.addResources('zh', namespace, zhTranslations);\ni18n.addResources('zh_CN', namespace, zh_CNTranslations);\nexport default i18n;","import React from 'react';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport dhis2theme from '@dhis2/d2-ui-core/theme/mui3.theme';\nimport { Provider as ReduxProvider } from 'react-redux';\nimport { D2Shim } from '@dhis2/app-runtime-adapter-d2';\nimport { useDataEngine } from '@dhis2/app-runtime';\nimport WindowDimensionsProvider from './components/WindowDimensionsProvider';\nimport SystemSettingsProvider from './components/SystemSettingsProvider';\nimport App from './components/App';\nimport configureStore from './configureStore';\nimport './AppWrapper.css';\nimport './locales';\n\nconst muiTheme = () => createMuiTheme(dhis2theme);\n\nconst d2Config = {\n  schemas: ['chart', 'map', 'report', 'reportTable', 'eventChart', 'eventReport', 'dashboard', 'organisationUnit', 'userGroup']\n}; // TODO: ER and EV plugins require the auth header in development mode.\n// Remove this when these plugins are rewritten\n\nconst authorization = process.env.REACT_APP_DHIS2_AUTHORIZATION || null;\n\nif (authorization) {\n  d2Config.headers = {\n    Authorization: authorization\n  };\n}\n\nconst AppWrapper = () => {\n  const dataEngine = useDataEngine();\n  return <ReduxProvider store={configureStore(dataEngine)}>\n            <MuiThemeProvider theme={muiTheme()}>\n                <D2Shim d2Config={d2Config} i18nRoot=\"./i18n\">\n                    {({\n          d2\n        }) => {\n          if (!d2) {\n            // TODO: Handle errors in d2 initialization\n            return null;\n          }\n\n          return <SystemSettingsProvider>\n                                <WindowDimensionsProvider>\n                                    <App />\n                                </WindowDimensionsProvider>\n                            </SystemSettingsProvider>;\n        }}\n                </D2Shim>\n            </MuiThemeProvider>\n        </ReduxProvider>;\n};\n\nexport default AppWrapper;","import isObject from 'lodash/isObject';\nimport { itemTypeMap } from './itemTypes';\nexport const getVisualizationFromItem = item => {\n  if (!isObject(item)) {\n    return null;\n  }\n\n  const propName = itemTypeMap[item.type]?.propName;\n  return item[propName] || item.reportTable || item.chart || item.map || item.eventReport || item.eventChart || {};\n};\nexport const getVisualizationId = item => getVisualizationFromItem(item).id;\nexport const getVisualizationName = item => getVisualizationFromItem(item).name;","import { REPORT_TABLE, CHART, MAP, EVENT_REPORT, EVENT_CHART, itemTypeMap } from '../../../../modules/itemTypes';\nimport { getVisualizationId } from '../../../../modules/item';\nimport getGridItemDomId from '../../../../modules/getGridItemDomId'; //external plugins\n\nconst itemTypeToExternalPlugin = {\n  [MAP]: 'mapPlugin',\n  [EVENT_REPORT]: 'eventReportPlugin',\n  [EVENT_CHART]: 'eventChartPlugin'\n};\n\nconst hasIntegratedPlugin = type => [CHART, REPORT_TABLE].includes(type);\n\nconst getPlugin = type => {\n  if (hasIntegratedPlugin(type)) {\n    return true;\n  }\n\n  const pluginName = itemTypeToExternalPlugin[type];\n  return global[pluginName];\n};\n\nexport const pluginIsAvailable = type => !!getPlugin(type);\nexport const loadPlugin = (plugin, config, credentials) => {\n  if (!(plugin && plugin.load)) {\n    return;\n  }\n\n  plugin.url = credentials.baseUrl;\n  plugin.loadingIndicator = true;\n  plugin.dashboard = true;\n\n  if (credentials.auth) {\n    plugin.auth = credentials.auth;\n  }\n\n  plugin.load(config);\n};\nexport const getLink = (item, baseUrl) => {\n  const appUrl = itemTypeMap[item.type].appUrl(getVisualizationId(item));\n  return `${baseUrl}/${appUrl}`;\n};\nexport const load = async (item, visualization, {\n  credentials,\n  activeType,\n  options = {}\n}) => {\n  const config = { ...visualization,\n    ...options,\n    el: getGridItemDomId(item.id)\n  };\n  const type = activeType || item.type;\n  const plugin = getPlugin(type);\n  loadPlugin(plugin, config, credentials);\n};\nexport const resize = (item, isFullscreen) => {\n  const plugin = getPlugin(item.type);\n\n  if (plugin && plugin.resize) {\n    plugin.resize(getGridItemDomId(item.id), isFullscreen);\n  }\n};\nexport const unmount = (item, activeType) => {\n  const plugin = getPlugin(activeType);\n\n  if (plugin && plugin.unmount) {\n    plugin.unmount(getGridItemDomId(item.id));\n  }\n};","const getGridItemDomId = id => `item-${id}`;\n\nexport default getGridItemDomId;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemHeaderWrap\":\"ItemHeader_itemHeaderWrap__JcBP7\",\"itemTitle\":\"ItemHeader_itemTitle__34rHa\",\"itemActionsWrap\":\"ItemHeader_itemActionsWrap__Gx3D9\"};"],"sourceRoot":""}
{"version":3,"sources":["components/ItemSelector/styles/CategorizedMenuGroup.module.css","components/Item/styles/DeleteItemButton.module.css","modules/itemTypes.js","api/metadata.js","components/Item/ListItem/Item.module.css","modules/util.js","reducers/user.js","reducers/dashboards.js","reducers/editDashboard.js","reducers/editItemFilters.js","reducers/selected.js","actions/editItemFilters.js","reducers/itemFilters.js","actions/itemFilters.js","reducers/messages.js","api/messages.js","reducers/snackbar.js","actions/snackbar.js","reducers/visualizations.js","actions/visualizations.js","api/index.js","api/dashboards.js","components/SnackbarMessage/SnackbarMessage.js","actions/selected.js","api/localStorage.js","components/Item/MessagesItem/actions.js","api/editDashboard.js","actions/editDashboard.js","actions/dashboards.js","reducers/controlBar.js","api/controlBar.js","actions/controlBar.js","reducers/dimensions.js","reducers/settings.js","actions/dimensions.js","components/ControlBar/ShowMoreButton.js","components/ControlBar/controlBarDimensions.js","components/ControlBar/ControlBar.js","icons/Star.js","api/dataStatistics.js","components/ControlBar/DashboardItemChip.js","icons/AddCircle.js","icons/Clear.js","components/ControlBar/ClearButton.js","reducers/dashboardsFilter.js","components/ControlBar/Filter.js","components/ControlBar/DashboardsBar.js","actions/dashboardsFilter.js","components/Dashboard/DashboardVerticalOffset.js","components/ItemSelector/HeaderMenuItem.js","icons/Launch.js","components/ItemSelector/ContentMenuItem.js","components/ItemSelector/selectableItems.js","components/ItemSelector/CategorizedMenuGroup.js","components/ItemSelector/actions.js","components/ItemSelector/SinglesMenuGroup.js","components/ItemSelector/ItemSelector.js","components/TitleBar/EditTitleBar.js","components/ItemFilter/FilterDialog.js","reducers/activeModalDimension.js","actions/activeModalDimension.js","components/ItemFilter/FilterSelector.js","components/TitleBar/Info.js","components/TitleBar/ViewTitleBar.js","components/TitleBar/TitleBar.js","components/Item/VisualizationItem/DefaultPlugin.js","components/Item/VisualizationItem/assets/icons.js","components/Item/VisualizationItem/FatalErrorBoundary.js","components/Item/DeleteItemButton.js","components/Item/ItemHeader.js","components/Item/VisualizationItem/ItemHeaderButtons.js","components/Item/VisualizationItem/ItemFooter.js","modules/memoizeOne.js","components/Item/VisualizationItem/LoadingMask.js","components/Item/VisualizationItem/Item.js","widgets/Line.js","components/Item/MessagesItem/Item.js","components/Item/NotSupportedItem/Item.js","icons/Description.js","icons/Delete.js","components/Item/ListItem/Item.js","components/Item/ListItem/actions.js","components/Item/TextItem/Item.js","components/Item/AppItem/Item.js","components/Item/SpacerItem/Item.js","components/Item/Item.js","widgets/NoContentMessage.js","components/Item/ProgressiveLoadingContainer.js","components/ItemGrid/ItemGrid.js","components/FilterBar/FilterBadge.js","components/FilterBar/FilterBar.js","components/Dashboard/DashboardContent.js","components/Dashboard/ViewDashboard.js","components/ControlBar/ConfirmDeleteDialog.js","components/ControlBar/EditBar.js","components/Dashboard/EditDashboard.js","components/Dashboard/NewDashboard.js","components/Dashboard/Dashboard.js","components/Dashboard/dashboardModes.js","components/App.js","actions/user.js","locales/index.js","reducers/style.js","reducers/index.js","configureStore.js","index.js","components/ControlBar/styles/DashboardsBar.module.css","components/ItemSelector/styles/ContentMenuItem.module.css","components/Item/styles/ItemHeader.module.css","components/ControlBar/styles/ControlBar.module.css","components/Item/VisualizationItem/styles/FatalErrorBoundary.module.css","components/ControlBar/styles/ClearButton.module.css","components/Item/VisualizationItem/plugin.js","components/ItemGrid/gridUtil.js"],"names":["module","exports","showMoreButton","deleteItemButton","VISUALIZATION","REPORT_TABLE","CHART","MAP","EVENT_REPORT","EVENT_CHART","APP","REPORTS","RESOURCES","USERS","MESSAGES","TEXT","SPACER","spacerContent","emptyTextItemContent","isSpacerType","item","type","text","isTextType","isVisualizationType","itemTypeMap","hasMapView","itemType","domainType","isTrackerDomainType","getDefaultItemCount","defaultItemCount","getAppName","appName","_itemTypeMap","Object","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","id","endPointName","propName","pluralTitle","i18n","t","appUrl","concat","getEndPointName","getItemUrl","d2","url","launchUrl","getBaseUrl","getItemIcon","TableIcon","ChartIcon","MapIcon","ExtensionIcon","DescriptionIcon","PersonIcon","FontDownloadIcon","EmailIcon","CropFreeIcon","NotInterestedIcon","getIdNameFields","rename","arguments","length","undefined","getDimensionFields","_ref2","withItems","arrayClean","join","getAxesFields","_ref3","getFavoriteFields","_ref4","withDimensions","withOptions","getFavoritesFields","_ref5","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","getListItemFields","getMapFields","apiFetchFavorite","_ref6","fields","getInstance","then","Api","getApi","get","list","itemicon","link","deleteicon","deletebutton","orArray","param","Array","isArray","orObject","isObject","arrayToIdMap","array","reduce","obj","formatDate","value","uiLocale","global","Intl","DateTimeFormat","locale","year","month","day","format","Date","substr","replace","validateReducer","defaultValue","api","idx","baseUrl","indexOf","slice","getWithoutId","object","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","DEFAULT_STATE_USER","username","isSuperuser","sGetUserUsername","state","user","DEFAULT_STATE_DASHBOARDS","byId","items","updateDashboardProp","_ref","dashboardId","prop","objectSpread","defineProperty","sGetDashboardsRoot","dashboards","sGetDashboardById","sDashboardsIsFetching","sGetAllDashboards","sGetDashboardItems","sGetStarredDashboards","values","filter","dashboard","starred","sGetUnstarredDashboards","sGetDashboardsSortedByStarred","toConsumableArray","arraySort","getCustomDashboards","data","arrayFrom","map","d","name","displayName","description","displayDescription","favorite","owner","created","split","lastUpdated","access","numberOfItems","dashboardItems","reportTable","chart","DEFAULT_STATE_EDIT_DASHBOARD","NEW_DASHBOARD_STATE","sGetEditDashboardRoot","editDashboard","sGetIsEditing","isEmpty","sGetEditDashboardItems","DEFAULT_STATE_EDIT_ITEM_FILTERS","sGetEditItemFiltersRoot","editItemFilters","combineReducers","action","isLoading","showDescription","sGetSelectedRoot","selected","sGetSelectedId","sGetSelectedIsLoading","sGetSelectedShowDescription","acRemoveEditItemFilter","DEFAULT_STATE_ITEM_FILTERS","sGetItemFiltersRoot","itemFilters","sGetFiltersKeys","keys","acRemoveItemFilter","sGetMessagesRoot","messages","getMessages","catch","error","console","log","DEFAULT_STATE_SNACKBAR","message","duration","open","acCloseSnackbar","DEFAULT_STATE_VISUALIZATIONS","p","sGetVisualization","visualizations","sGetVisualizationsRoot","acAddVisualization","onError","getDashboardItemsFields","withFavorite","getDashboardFields","apiFetchDashboard","models","apiStarDashboard","isStarred","post","delete","apiDeleteDashboard","loadingDashboardMsg","SnackbarMessageContent","react_default","a","createElement","style","fontWeight","connect","_sGetSnackbar","snackbar","sGetSnackbar","snackbarOpen","snackbarMessage","snackbarDuration","onCloseSnackbar","props","Snackbar_default","zIndex","SnackbarMessage_SnackbarMessageContent","autoHideDuration","onClose","acSetSelectedId","acSetSelectedIsLoading","tLoadDashboard","asyncToGenerator","regenerator_default","mark","_callee","dispatch","dash","wrap","_context","prev","next","sent","acAppendDashboards","abrupt","Promise","resolve","t0","stop","_x","apply","this","tSetSelectedDashboardById","_callee2","getState","snackbarTimeout","onSuccess","_context2","setTimeout","dashboardName","customDashboard","acSetDashboardItems","withShape","localStorage","setItem","forEach","extractFavorite","messageConversations","filters","clearTimeout","_x2","_x3","saveDashboard","assign","width","w","height","h","save","msg","response","uid","updateDashboard","postDashboard","create","acAddDashboardItem","itemPropName","generateUid","content","NEW_ITEM_SHAPE","acUpdateDashboardItem","acRemoveDashboardItem","acSetDashboardStarred","tFetchDashboards","collection","paging","toArray","userRows","sGetControlBarUserRows","controlBar","sGetControlBarRoot","KEY","hasNamespace","currentUser","dataStore","has","getNamespace","apiGetControlBarRows","_callee3","namespace","_context3","t1","t2","find","key","apiPostControlBarRows","_callee4","rows","_context4","set","_x4","_x5","acSetControlBarUserRows","DEFAULT_DIMENSIONS","getDimensionById","DIMENSION_ID_PERIOD","DIMENSION_ID_ORGUNIT","sGetDimensions","dimensions","DEFAULT_SETTINGS","keyDateFormat","keyAnalysisRelativePeriod","keyAnalysisDigitGroupSeparator","displayNameProperty","rootOrganisationUnit","sGetSettings","settings","sGetSettingsDisplayNameProperty","acSetDimensions","styles","showMore","color","colors","grey700","cursor","fontSize","paddingTop","&:hover","textDecoration","disabled","grey500","withStyles","onClick","isMaxHeight","classes","textAlign","className","MIN_ROW_COUNT","getRowsHeight","getNumRowsFromHeight","Math","floor","FIRST_ROW_PADDING_HEIGHT","getTopOffset","getControlBarHeight","ControlBar","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onStartDrag","setState","dragging","window","addEventListener","onDrag","onEndDrag","event","preventDefault","stopPropagation","newHeight","clientY","onChangeHeight","requestAnimationFrame","removeEventListener","draghandle","onMouseDown","max","rootStyle","top","backgroundColor","editMode","yellow050","white","paddingBottom","transition","root","children","renderDragHandle","React","Component","defaultProps","StarIcon","xmlns","viewBox","fill","apiPostDataStatistics","eventType","chip","margin","grey600","display","verticalAlign","icon","marginTop","unselected","label","chipProps","selectedState","Star","react_router_dom","to","debounce","lib","AddCircleIcon","teal600","ClearIcon","grey800","ClearButton","onClear","button","Clear","ownerData","DEFAULT_STATE_DASHBOARDS_FILTER_NAME","DEFAULT_STATE_DASHBOARDS_FILTER_OWNER","order","sGetDashboardsFilterRoot","dashboardsFilter","sGetFilterName","KEYCODE_ENTER","KEYCODE_ESCAPE","filterField","searchIcon","Filter","_Component","setFilterValue","onChangeName","target","handleKeyUp","keyCode","onKeypressEnter","inherits","createClass","nextProps","_this$props","startAdornment","InputAdornment_default","position","Search_default","endAdornment","ControlBar_ClearButton","Input_default","placeholder","onChange","onKeyUp","Function","prototype","MAX_ROW_COUNT","DashboardsBar","_getPrototypeOf2","_len","args","_key","setInitialDashboardState","adjustedHeight","newRows","newRowCount","min","onToggleMaxHeight","onSelectDashboard","history","push","selectedId","onChangeFilterName","rowCount","controlBarHeight","contentWrapperStyle","padding","overflowY","components_ControlBar_ControlBar","leftControls","marginRight","AddCircle","ControlBar_Filter","ControlBar_DashboardItemChip","ControlBar_ShowMoreButton","mapDispatchToProps","withRouter","stateProps","dispatchProps","ownProps","displayDashboards","toLowerCase","includes","HeaderMenuItem","title","dense","LaunchIcon","LaunchLink","e","launchLink","rel","href","Launch","InsertButton","buttonInsert","ContentMenuItem","onInsert","visType","ItemIcon","renderedItemIcon","visTypeIcons","menuItem","ContentMenuItem_LaunchLink","ContentMenuItem_InsertButton","singleItems","header","categorizedItems","listItemTypes","CategorizedMenuGroup","addItem","tAddListItemContent","newItem","toggleSeeMore","seeMore","onChangeItemsLimit","_this2","_this$props2","hasMore","react","ItemSelector_HeaderMenuItem","itemUrl","context","ItemSelector_ContentMenuItem","contextTypes","PropTypes","isRequired","dashboardItem","listItemType","dashboardItemIndex","findIndex","category","addToDashboard","ItemSearchField","onFocus","ItemSelector","closeList","openList","_","fetchItems","anchorEl","currentTarget","setFilter","getCategorizedMenuGroups","itemCount","allItems","maxOptions","ItemSelector_CategorizedMenuGroup","getSinglesMenuGroups","ItemSelector_SinglesMenuGroup","getMenuGroups","queryString","add","Set","ItemSelector_ItemSearchField","Popover_default","anchorOrigin","horizontal","vertical","transformOrigin","PaperProps","disableAutoFocus","disableEnforceFocus","disableRestoreFocus","maxWidth","EditTitleBar","onChangeTitle","onChangeDescription","section","titleDescription","itemSelector","components_ItemSelector_ItemSelector","selectedDashboard","justifyContent","flex","clear","underline","&::before","borderBottom","&:hover::before","input","borderRadius","peId","ouId","FilterDialog","onConfirm","dimension","selectedItems","dialogId","commonProps","onSelect","onDeselect","onReorder","build_es_lib","selectedPeriods","ouItems","dialogTitle","Dialog_default","dialogContent","DialogActions_default","kind","DEFAULT_STATE_ACTIVE_MODAL_DIMENSION","sGetActiveModalDimension","activeModalDimension","acSetActiveModalDimension","FilterSelector","openPanel","closePanel","closeDialog","clearActiveModalDimension","selectDimension","setActiveModalDimension","onSelectItems","dimensionId","setEditItemFilters","onDeselectItems","itemIdsToRemove","newList","removeEditItemFilter","onReorderItems","itemIds","oldList","reorderedList","saveFilter","filterItems","addItemFilter","removeItemFilter","selectedDimensions","ArrowDropDown_default","Boolean","onDimensionClick","selectedIds","ItemFilter_FilterDialog","Info","show","toggle","InfoOutlined_default","NO_DESCRIPTION","actions","alignItems","marginLeft","starIcon","textButton","minWidth","editLink","titleBar","titleBarIcon","ViewTitleBar","toggleSharingDialog","sharingDialogIsOpen","onStarClick","onInfoClick","titleStyle","userSelect","StarBorder","TitleBar_Info","update","manage","ItemFilter_FilterSelector","d2_ui_sharing_dialog_default","onRequestClose","tStarDashboard","black","TitleBar","edit","TitleBar_EditTitleBar","TitleBar_ViewTitleBar","DefaultPlugin","pluginCredentials","shouldPluginReload","prevProps","reloadAllowed","filtersChanged","vis","visualization","prevVis","visChanged","activeType","reloadPlugin","pluginManager","currentVis","useActiveType","credentials","getActiveType","auth","defaultHeaders","Authorization","getGridItemDomId","textDiv","ThreeDots","SpeechBubble","fillRule","transform","Warning","FatalErrorBoundary","errorFound","info","container","icons_Warning","DeleteItemButton","Delete_default","red500","HEADER_MARGIN_HEIGHT","ItemHeader","forwardRef","ref","itemId","actionButtons","itemHeaderWrap","itemTitle","itemActionsWrap","Item_DeleteItemButton","iconFill","ItemHeaderButtons","_useState","useState","_useState2","slicedToArray","setAnchorEl","onSelectActiveType","isTrackerType","onViewTable","handleClose","onViewChart","onViewMap","canViewAs","isSingleValue","isYearOverYear","VIS_TYPE_GAUGE","VIS_TYPE_PIE","interpretationMenuLabel","activeFooter","pluginIsAvailable","Fragment","small","secondary","icons_ThreeDots","InsertChart_default","ViewList_default","Public_default","Launch_default","getLink","icons_SpeechBubble","onToggleFooter","scrollContainer","line","border","grey100","ItemFooter","objectId","getId","d2_ui_interpretations_default","memoizeOne","fn","lastArgs","lastValue","every","arg","i","progress","alignSelf","outer","CircularProgress_default","overflow","textOverflow","whiteSpace","fontStretch","lineHeight","loadingCover","left","background","Item","showFooter","configLoaded","pluginIsLoaded","applyFilters","visRows","visColumns","columns","visFilters","dimensionFound","dimensionObjects","getUniqueKey","uniqueId","getPluginComponent","memoizedGetVisualizationConfig","calculatedHeight","originalHeight","headerRef","current","clientHeight","ITEM_CONTENT_PADDING_BOTTOM","memoizedGetContentStyle","contentRef","offsetHeight","LoadingMask","data_visualizer_plugin_build_es_lib","memoizedApplyFilters","onLoadingComplete","forDashboard","mapViews","layer","VisualizationItem_DefaultPlugin","onToggleItemExpanded","getContentStyle","measuredHeight","createRef","getVisualizationConfig","_componentDidMount","onVisualizationLoaded","prevState","VisualizationItem_ItemHeaderButtons","Item_ItemHeader","VisualizationItem_FatalErrorBoundary","VisualizationItem_ItemFooter","acSetActiveVisualizationType","grey200","Line","PRIVATE","messageTypes","_messageTypes","listStyleType","paddingLeft","seeAll","marginBottom","sender","snippet","maxHeight","MessagesItem","getMessageHref","msgIdentifier","messageType","getMessageSender","latestMsg","getMessageItems","editClass","readClass","read","msgDate","document","location","messageCount","userSettings","widgets_Line","string","MessagesContainer","NotSupportedItem","NotInterested_default","align","DeleteIcon","getItemTitle","ListItem","tRemoveListItemContent","contentItems","index","el","getContentItems","contentItem","Description","deleteButton","icons_Delete","grey900","newContent","textField","onChangeText","updatedItem","d2_ui_rich_text","onEdit","multiline","fullWidth","textDivStyle","viewItem","getIframeSrc","appDetails","iframeSrc","ouIds","ouPath","AppItem","appKey","system","installedApps","app","src","SpacerItem","GridItem","VisualizationItem","TextItem","getGridItem","NoContentMessage","ProgressiveLoadingContainer","shouldLoad","containerRef","shouldLoadHandler","bufferPx","bufferFactor","innerHeight","rect","getBoundingClientRect","bottom","removeHandler","checkShouldLoad","debounceMs","registerHandler","_this3","objectWithoutProperties","eventProps","pick","EXPANDED_HEIGHT","ItemGrid","expandedItems","clickedId","isExpanded","onRemoveItem","onLayoutChange","newLayout","acUpdateDashboardLayout","onResizeStop","layout","oldItem","onItemResize","pluginResize","onRemoveItemWrapper","getItem","expandedItem","hProp","minH","ITEM_MIN_HEIGHT","randomNumber","random","getItems","getMemoizedItem","getItemComponent","itemClassNames","Item_ProgressiveLoadingContainer","Item_Item_Item","getItemComponents","memoize","widgets_NoContentMessage","react_grid_layout_default","MARGIN","cols","getGridColumns","rowHeight","GRID_ROW_HEIGHT","innerWidth","compactType","GRID_COMPACT_TYPE","isDraggable","isResizable","draggableCancel","validItems","hasShape","badgeContainer","badge","badgeRemove","FilterBadge","onRemove","count","FilterBar","onBadgeRemove","onBadgeClick","bar","FilterBar_FilterBadge","removeItemFIlter","filtersSelector","createSelector","arr","flexWrap","DashboardContent","components_TitleBar_TitleBar","components_FilterBar_FilterBar","components_ItemGrid_ItemGrid","Content","hasDashboardContent","dashboardsIsEmpty","Dashboard_DashboardContent","dashboardsLoaded","contentNotReady","ControlBar_DashboardsBar","Dashboard_DashboardVerticalOffset","ViewDashboard_Content","ConfirmDeleteDialog","onDeleteConfirmed","onContinueEditing","destructive","DialogTitle_default","DialogContent_default","DialogContentText_default","buttonBarStyle","EditBar","translationDialogIsOpen","dashboardModel","confirmDeleteDialogOpen","redirectUrl","onConfirmDelete","onSave","newId","onDiscard","onDiscardChanges","onDelete","onTranslationsSaved","translations","dbLocale","translation","property","onTranslate","fetchDashboardModel","toggleTranslationDialog","confirmDeleteDialog","deleteAccess","ControlBar_ConfirmDeleteDialog","translationDialog","d2_ui_translation_dialog_default","objectToTranslate","fieldsToTranslate","onTranslationSaved","onTranslationError","err","react_router","updateAccess","discardBtnText","primary","rightControls","sGetIsNewDashboard","dashboardToSave","tDeleteDashboard","acSetDashboardDisplayName","EditDashboard","initialized","initEditDashboard","setEditDashboard","getDashboardContent","EditDashboard_Content","ControlBar_EditBar","NewDashboard","setNewDashboard","Dashboard","setDashboard","match","params","selectDashboard","scrollToTop","scrollTo","mode","Dashboard_EditDashboard","Dashboard_NewDashboard","Dashboard_ViewDashboard","dashboardToSelect","preferredId","App","setCurrentUser","fetchDashboards","setControlBarRows","setDimensions","spacers","es_lib","exact","path","render","components_Dashboard_Dashboard","components_SnackbarMessage_SnackbarMessage","childContextTypes","controlBarRows","displayNameProp","filteredDimensions","apiFetchDimensions","dim","dimensionType","dataDimensionType","tSetDimensions","moment","addResources","arTranslations","daTranslations","enTranslations","esTranslations","frTranslations","idTranslations","kmTranslations","loTranslations","myTranslations","prsTranslations","psTranslations","ptTranslations","pt_BRTranslations","ruTranslations","svTranslations","tetTranslations","tgTranslations","ukTranslations","urTranslations","viTranslations","zhTranslations","zh_CNTranslations","setDefaultNamespace","changeLanguage","objectClean","conversations","$merge","d2Object","keyUiLocale","authorities","newState","k","$unshift","idToRemove","$splice","stateItems","layoutHasChanged","newStateItems","x","y","stateItem","si","configureStore","middleware","thunk","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducer","applyMiddleware","configI18n","config","sources","manifest","isProd","getManifest","version","manifest_generated_at","process","activities","dhis","dhis2","apiVersion","headers","schemas","getUserSettings","d2Init","initializedD2","ReactDOM","build_es","es","store","theme","createMuiTheme","dhis2theme","src_components_App","getElementById","init","itemWrap","itemTypeToExternalPlugin","_itemTypeToExternalPl","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_3__","getPlugin","hasIntegratedPlugin","eventReport","eventChart","loadPlugin","plugin","load","loadingIndicator","getName","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","fetch","fetchedFavorite","resize","unmount","originalType","extractedMapView","mv","VIS_TYPE_COLUMN","VIS_TYPE_PIVOT_TABLE","__webpack_require__","__webpack_exports__","d2_utilizr_lib_isFunction__WEBPACK_IMPORTED_MODULE_0__","d2_utilizr_lib_isFunction__WEBPACK_IMPORTED_MODULE_0___default","n","_modules_util__WEBPACK_IMPORTED_MODULE_1__","isNonNegativeInteger","Number","isInteger","itemWithShape","Error","col","row","itemWidth","itemHeight","getShape","round","getOriginalHeight","querySelector","isFunction","setViewportSize","clientWidth"],"mappings":"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","file":"static/js/main.1f511f39.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"showMoreButton\":\"CategorizedMenuGroup_showMoreButton__3-0Wa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"deleteItemButton\":\"DeleteItemButton_deleteItemButton__4YLrM\"};","import i18n from '@dhis2/d2-i18n';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\nimport ExtensionIcon from '@material-ui/icons/Extension';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport PersonIcon from '@material-ui/icons/Person';\nimport FontDownloadIcon from '@material-ui/icons/FontDownload';\nimport EmailIcon from '@material-ui/icons/Email';\nimport CropFreeIcon from '@material-ui/icons/CropFree';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nimport { getBaseUrl } from './util';\n\n// Item types\nexport const VISUALIZATION = 'VISUALIZATION';\nexport const REPORT_TABLE = 'REPORT_TABLE';\nexport const CHART = 'CHART';\nexport const MAP = 'MAP';\nexport const EVENT_REPORT = 'EVENT_REPORT';\nexport const EVENT_CHART = 'EVENT_CHART';\nexport const APP = 'APP';\nexport const REPORTS = 'REPORTS';\nexport const RESOURCES = 'RESOURCES';\nexport const USERS = 'USERS';\nexport const MESSAGES = 'MESSAGES';\nexport const TEXT = 'TEXT';\nexport const SPACER = 'SPACER';\n\nconst DOMAIN_TYPE_AGGREGATE = 'AGGREGATE';\nconst DOMAIN_TYPE_TRACKER = 'TRACKER';\n\n// Dashboard helpers\nexport const spacerContent = 'SPACER_ITEM_FOR_DASHBOARD_LAYOUT_CONVENIENCE';\nexport const emptyTextItemContent = 'TEXT_ITEM_WITH_NO_CONTENT';\nexport const isSpacerType = item =>\n    item.type === TEXT && item.text === spacerContent;\nexport const isTextType = item =>\n    item.type === TEXT && item.text !== spacerContent;\nexport const isVisualizationType = item =>\n    !!itemTypeMap[item.type].isVisualizationType;\nexport const hasMapView = itemType =>\n    itemTypeMap[itemType].domainType === DOMAIN_TYPE_AGGREGATE;\nexport const isTrackerDomainType = itemType =>\n    itemTypeMap[itemType].domainType === DOMAIN_TYPE_TRACKER;\nexport const getDefaultItemCount = itemType =>\n    itemTypeMap[itemType].defaultItemCount || 5;\nexport const getAppName = itemType => itemTypeMap[itemType].appName || '';\n\n// Item type map\nexport const itemTypeMap = {\n    [VISUALIZATION]: {\n        id: VISUALIZATION,\n        endPointName: 'visualizations',\n        propName: 'visualization',\n        pluralTitle: i18n.t('Visualizations'),\n        appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n        appName: 'Data Visualizer',\n        defaultItemCount: 10,\n    },\n    [REPORT_TABLE]: {\n        id: REPORT_TABLE,\n        endPointName: 'visualizations',\n        propName: 'visualization',\n        pluralTitle: i18n.t('Pivot tables'),\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n        appName: 'Data Visualizer',\n    },\n    [CHART]: {\n        id: CHART,\n        endPointName: 'visualizations',\n        propName: 'visualization',\n        pluralTitle: i18n.t('Charts'),\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n        appName: 'Data Visualizer',\n    },\n    [MAP]: {\n        id: MAP,\n        endPointName: 'maps',\n        propName: 'map',\n        pluralTitle: i18n.t('Maps'),\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-maps/?id=${id}`,\n        appName: 'Maps',\n    },\n    [EVENT_REPORT]: {\n        id: EVENT_REPORT,\n        endPointName: 'eventReports',\n        propName: 'eventReport',\n        pluralTitle: i18n.t('Event reports'),\n        domainType: DOMAIN_TYPE_TRACKER,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-event-reports/?id=${id}`,\n        appName: 'Event Reports',\n    },\n    [EVENT_CHART]: {\n        id: EVENT_CHART,\n        endPointName: 'eventCharts',\n        propName: 'eventChart',\n        pluralTitle: i18n.t('Event charts'),\n        domainType: DOMAIN_TYPE_TRACKER,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-event-visualizer/?id=${id}`,\n        appName: 'Event Visualizer',\n    },\n    [APP]: {\n        endPointName: 'apps',\n        propName: 'appKey',\n        pluralTitle: i18n.t('Apps'),\n    },\n    [REPORTS]: {\n        id: REPORTS,\n        endPointName: 'reports',\n        propName: 'reports',\n        pluralTitle: i18n.t('Reports'),\n        appUrl: id =>\n            `dhis-web-reporting/getReportParams.action?mode=report&uid=${id}`,\n    },\n    [RESOURCES]: {\n        id: RESOURCES,\n        endPointName: 'resources',\n        propName: 'resources',\n        pluralTitle: i18n.t('Resources'),\n        appUrl: id => `api/documents/${id}/data`,\n    },\n    [USERS]: {\n        id: USERS,\n        endPointName: 'users',\n        propName: 'users',\n        pluralTitle: i18n.t('Users'),\n        appUrl: id => `dhis-web-dashboard-integration/profile.action?id=${id}`,\n    },\n    [TEXT]: {\n        id: TEXT,\n        propName: 'text',\n    },\n    [MESSAGES]: {\n        propName: 'messages',\n    },\n    [SPACER]: {\n        propName: 'text',\n    },\n};\n\nexport const getEndPointName = type => itemTypeMap[type].endPointName;\n\nexport const getItemUrl = (type, item, d2) => {\n    let url;\n\n    if (type === APP) {\n        url = item.launchUrl;\n    }\n\n    if (itemTypeMap[type] && itemTypeMap[type].appUrl) {\n        url = `${getBaseUrl(d2)}/${itemTypeMap[type].appUrl(item.id)}`;\n    }\n\n    return url;\n};\n\nexport const getItemIcon = type => {\n    switch (type) {\n        case REPORT_TABLE:\n        case EVENT_REPORT:\n        case REPORTS:\n            return TableIcon;\n        case CHART:\n        case EVENT_CHART:\n            return ChartIcon;\n        case MAP:\n            return MapIcon;\n        case APP:\n            return ExtensionIcon;\n        case RESOURCES:\n            return DescriptionIcon;\n        case USERS:\n            return PersonIcon;\n        case TEXT:\n            return FontDownloadIcon;\n        case MESSAGES:\n            return EmailIcon;\n        case SPACER:\n            return CropFreeIcon;\n        default:\n            return NotInterestedIcon;\n    }\n};\n","import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\n\nimport { getEndPointName } from '../modules/itemTypes';\n\n// Id, name\nexport const getIdNameFields = ({ rename } = {}) => [\n    'id',\n    `${rename ? 'displayName~rename(name)' : 'name,displayName'}`,\n];\n\n// Item\nexport const getItemFields = () => [\n    'dimensionItem~rename(id)',\n    'displayName~rename(name)',\n    'dimensionItemType',\n];\n\n// Dimension\nexport const getDimensionFields = ({ withItems }) =>\n    arrayClean([\n        'dimension',\n        'legendSet[id]',\n        'filter',\n        'programStage',\n        withItems ? `items[${getItemFields().join(',')}]` : ``,\n    ]);\n\n// Axis\nexport const getAxesFields = ({ withItems }) => [\n    `columns[${getDimensionFields({ withItems }).join(',')}]`,\n    `rows[${getDimensionFields({ withItems }).join(',')}]`,\n    `filters[${getDimensionFields({ withItems }).join(',')}]`,\n];\n\n// Favorite\nexport const getFavoriteFields = ({ withDimensions, withOptions }) => {\n    return arrayClean([\n        `${getIdNameFields({ rename: true }).join(',')}`,\n        'displayDescription~rename(description)',\n        withDimensions ? `${getAxesFields({ withItems: true }).join(',')}` : ``,\n        withOptions\n            ? [\n                  '*',\n                  '!attributeDimensions',\n                  '!attributeValues',\n                  '!category',\n                  '!categoryDimensions',\n                  '!categoryOptionGroupSetDimensions',\n                  '!columnDimensions',\n                  '!dataDimensionItems',\n                  '!dataElementDimensions',\n                  '!dataElementGroupSetDimensions',\n                  '!filterDimensions',\n                  '!itemOrganisationUnitGroups',\n                  '!lastUpdatedBy',\n                  '!organisationUnitGroupSetDimensions',\n                  '!organisationUnitLevels',\n                  '!organisationUnits',\n                  '!programIndicatorDimensions',\n                  '!relativePeriods',\n                  '!reportParams',\n                  '!rowDimensions',\n                  '!series',\n                  '!translations',\n                  '!userOrganisationUnit',\n                  '!userOrganisationUnitChildren',\n                  '!userOrganisationUnitGrandChildren',\n              ].join(',')\n            : '',\n    ]);\n};\n\nexport const getFavoritesFields = ({ withDimensions }) => [\n    `reportTable[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `chart[${['type', ...getFavoriteFields({ withDimensions })].join(',')}]`,\n    `map[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `eventReport[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `eventChart[${getFavoriteFields({ withDimensions }).join(',')}]`,\n];\n\n// List item\nexport const getListItemFields = () => [\n    `reports[${getIdNameFields({ rename: true }).join(',')}]`,\n    `resources[${getIdNameFields({ rename: true }).join(',')}]`,\n    `users[${getIdNameFields({ rename: true }).join(',')}]`,\n];\n\n// Map\nexport const getMapFields = () => [\n    `${getIdNameFields({ rename: true }).join(',')}`,\n    'user,longitude,latitude,zoom,basemap',\n    `mapViews[${getFavoriteFields({\n        withDimensions: true,\n        withOptions: true,\n    })}]`,\n];\n\n// Api\n\n// Get more info about the favorite of a dashboard item\nexport const apiFetchFavorite = (id, type, { fields }) =>\n    getInstance().then(d2 =>\n        d2.Api.getApi().get(`${getEndPointName(type)}/${id}`, {\n            fields:\n                fields ||\n                getFavoriteFields({\n                    withDimensions: true,\n                    withOptions: true,\n                }),\n        })\n    );\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Item_list__2oHc1\",\"item\":\"Item_item__lO40M\",\"itemicon\":\"Item_itemicon__dv5ah\",\"link\":\"Item_link__2gULT\",\"deleteicon\":\"Item_deleteicon__3c7bl\",\"deletebutton\":\"Item_deletebutton__1DfY5\"};","import isObject from 'lodash/isObject';\n\n// validation\nexport function orNull(param) {\n    return param === undefined ? null : param;\n}\n\nexport function orArray(param) {\n    return Array.isArray(param) ? param : [];\n}\n\nexport function orObject(param) {\n    return isObject(param) ? param : {};\n}\n\n// array\nexport function arrayGetById(array, id) {\n    return array.find(item => item.id === id);\n}\n\n// object\nexport function arrayToIdMap(array) {\n    return array.reduce((obj, item) => {\n        obj[item.id] = item;\n        return obj;\n    }, {});\n}\n\n// date\nexport function getDate() {\n    const y = Math.floor(Math.random() * 3) + 2015;\n    const M = Math.floor(Math.random() * 12) + 1;\n    const d = Math.floor(Math.random() * 28) + 1;\n    // const h = Math.floor(Math.random() * 23) + 1;\n    // const m = Math.floor(Math.random() * 59) + 1;\n    // const s = Math.floor(Math.random() * 59) + 1;\n\n    return new Date(`${y}-${M}-${d}`)\n        .toJSON()\n        .replace('T', ' ')\n        .substr(0, 10);\n}\n\nexport const formatDate = (value, uiLocale) => {\n    if (typeof global.Intl !== 'undefined' && Intl.DateTimeFormat) {\n        const locale = uiLocale || 'en';\n        return new Intl.DateTimeFormat(locale, {\n            year: 'numeric',\n            month: 'short',\n            day: 'numeric',\n        }).format(new Date(value));\n    }\n\n    return value.substr(0, 19).replace('T', ' ');\n};\n\n/**\n * Sorts an array of objects based on provided date property\n *\n * @param {Array} items Array of objects\n * @param {String} dateProp Name of the date property to be used for sorting\n * @param {Boolean} ascending Whether to sort ascending or descending\n */\nexport const sortByDate = (items, dateProp, ascending = true) => {\n    const values = Object.values(items);\n\n    values.sort((a, b) => {\n        const aDate = new Date(a[dateProp]);\n        const bDate = new Date(b[dateProp]);\n\n        return ascending ? aDate - bDate : bDate - aDate;\n    });\n\n    return values;\n};\n\n// reducer validator\nexport const validateReducer = (value, defaultValue) =>\n    value === undefined || value === null ? defaultValue : value;\n\nexport const getBaseUrl = d2 => {\n    const api = d2.Api.getApi();\n    const idx = api.baseUrl.indexOf('/api');\n    return idx > -1 ? api.baseUrl.slice(0, idx) : api.baseUrl;\n};\n\nexport const getWithoutId = object => ({\n    ...object,\n    id: undefined,\n});\n","export const RECEIVED_USER = 'RECEIVED_USER';\n\nexport const DEFAULT_STATE_USER = {\n    id: '',\n    username: '',\n    uiLocale: '',\n    isSuperuser: false,\n};\n\nexport default (state = DEFAULT_STATE_USER, action) => {\n    switch (action.type) {\n        case RECEIVED_USER: {\n            return fromD2ToUserObj(action.value);\n        }\n        default:\n            return state;\n    }\n};\n\nfunction fromD2ToUserObj(d2Object) {\n    return {\n        id: d2Object.id,\n        username: d2Object.username,\n        uiLocale: d2Object.settings.keyUiLocale,\n        isSuperuser: d2Object.authorities.has('ALL'),\n    };\n}\n\n// selectors\n\nexport const sGetUserId = state => state.user.id;\nexport const sGetUserUsername = state => state.user.username;\nexport const sGetIsSuperuser = state => state.user.isSuperuser;\nexport const sGetUiLocale = state => state.user.uiLocale;\n","/** @module reducers/dashboards */\n\nimport arrayFrom from 'd2-utilizr/lib/arrayFrom';\nimport arraySort from 'd2-utilizr/lib/arraySort';\n\nimport { orArray, orObject } from '../modules/util';\nimport {\n    SPACER,\n    isSpacerType,\n    isTextType,\n    emptyTextItemContent,\n    REPORT_TABLE,\n    CHART,\n    VISUALIZATION,\n} from '../modules/itemTypes';\n\nexport const SET_DASHBOARDS = 'SET_DASHBOARDS';\nexport const ADD_DASHBOARDS = 'ADD_DASHBOARDS';\nexport const SET_DASHBOARD_STARRED = 'SET_DASHBOARD_STARRED';\nexport const SET_DASHBOARD_DISPLAY_NAME = 'SET_DASHBOARD_DISPLAY_NAME';\nexport const SET_DASHBOARD_ITEMS = 'SET_DASHBOARD_ITEMS';\n\nexport const DEFAULT_STATE_DASHBOARDS = {\n    byId: null,\n    items: [],\n};\n\n// reducer helper functions\n\nconst updateDashboardProp = ({ state, dashboardId, prop, value }) => ({\n    byId: {\n        ...state.byId,\n        [dashboardId]: {\n            ...state.byId[dashboardId],\n            [prop]: value,\n        },\n    },\n    items: state.items,\n});\n\n/**\n * Reducer that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n * @returns {Object}\n */\nexport default (state = DEFAULT_STATE_DASHBOARDS, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS: {\n            return {\n                byId: action.value,\n                items: [],\n            };\n        }\n        case ADD_DASHBOARDS: {\n            return {\n                ...state,\n                byId: {\n                    ...state.byId,\n                    ...action.value,\n                },\n            };\n        }\n        case SET_DASHBOARD_STARRED: {\n            return updateDashboardProp({\n                state,\n                dashboardId: action.dashboardId,\n                prop: 'starred',\n                value: action.value,\n            });\n        }\n        case SET_DASHBOARD_DISPLAY_NAME: {\n            return updateDashboardProp({\n                state,\n                dashboardId: action.dashboardId,\n                prop: 'displayName',\n                value: action.value,\n            });\n        }\n        case SET_DASHBOARD_ITEMS: {\n            return {\n                ...state,\n                items: action.value,\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// root selector\n\nexport const sGetDashboardsRoot = state => state.dashboards;\n\n// selector level 1\n\n/**\n * Selector which returns a dashboard by id from the state object\n * If no matching dashboard is found it returns undefined\n * If dashboards.byId is null, then the dashboards api request\n * has not yet completed. If dashboards.byId is an empty object\n * then the dashboards api request is complete, but no dashboards\n * were returned\n *\n * @function\n * @param {Object} state The current state\n * @param {Number} id The id of the dashboard\n * @returns {Object | undefined}\n */\nexport const sGetDashboardById = (state, id) =>\n    orObject(sGetDashboardsRoot(state).byId)[id];\n\nexport const sDashboardsIsFetching = state => {\n    return sGetDashboardsRoot(state).byId === null;\n};\n\n/**\n * Selector which returns all dashboards (the byId object)\n *\n * @function\n * @param {Object} state The current state\n * @returns {Object | undefined}\n */\nexport const sGetAllDashboards = state =>\n    orObject(sGetDashboardsRoot(state).byId);\n\n/**\n * Selector which returns the current dashboard items\n *\n * @function\n * @param {Object} state The current state\n * @returns {Array}\n */\nexport const sGetDashboardItems = state => sGetDashboardsRoot(state).items;\n\n// selector level 2\n\nexport const sGetStarredDashboards = state =>\n    Object.values(sGetAllDashboards(state)).filter(\n        dashboard => dashboard.starred === true\n    );\n\nexport const sGetUnstarredDashboards = state =>\n    Object.values(sGetAllDashboards(state)).filter(\n        dashboard => dashboard.starred === false\n    );\n\n// selector level 3\n\nexport const sGetStarredDashboardIds = state => {\n    return sGetStarredDashboards(state).map(dashboard => dashboard.id);\n};\n\nexport const sGetUnstarredDashboardIds = state =>\n    sGetUnstarredDashboards(state).map(dashboard => dashboard.id);\n\nexport const sGetDashboardsSortedByStarred = state => [\n    ...arraySort(sGetStarredDashboards(state), 'ASC', 'displayName'),\n    ...arraySort(sGetUnstarredDashboards(state), 'ASC', 'displayName'),\n];\n\n// utils\n\n/**\n * Returns the array of dashboards, customized for ui\n * @function\n * @param {Array} data The original dashboard list\n * @returns {Array}\n */\nexport const getCustomDashboards = data => {\n    const uiItems = items =>\n        items.map(item => {\n            let type = isSpacerType(item) ? SPACER : item.type;\n\n            // TODO: temporary fix before 2.34 epic branch is merged\n            // if \"VISUALIZATION\", reset to \"REPORT_TABLE\" or \"CHART\"\n            if (type === VISUALIZATION) {\n                type = item.reportTable\n                    ? REPORT_TABLE\n                    : item.chart\n                    ? CHART\n                    : type;\n            }\n\n            const text = isTextType(item)\n                ? item.text === emptyTextItemContent\n                    ? ''\n                    : item.text\n                : null;\n\n            return {\n                ...item,\n                ...(text !== null ? { text } : {}),\n                type,\n            };\n        });\n\n    return arrayFrom(data).map(d => ({\n        id: d.id,\n        name: d.name,\n        displayName: d.displayName,\n        description: d.description,\n        displayDescription: d.displayDescription,\n        starred: d.favorite,\n        owner: d.user.name,\n        created: d.created\n            .split('T')\n            .join(' ')\n            .substr(0, 16),\n        lastUpdated: d.lastUpdated\n            .split('T')\n            .join(' ')\n            .substr(0, 16),\n        access: d.access,\n        numberOfItems: orArray(d.dashboardItems).length,\n        dashboardItems: uiItems(d.dashboardItems),\n    }));\n};\n","/** @module reducers/editDashboard */\nimport update from 'immutability-helper';\nimport isEmpty from 'lodash/isEmpty';\nimport { orArray, orObject } from '../modules/util';\n\nexport const RECEIVED_EDIT_DASHBOARD = 'RECEIVED_EDIT_DASHBOARD';\nexport const RECEIVED_NOT_EDITING = 'RECEIVED_NOT_EDITING';\nexport const START_NEW_DASHBOARD = 'START_NEW_DASHBOARD';\nexport const RECEIVED_TITLE = 'RECEIVED_TITLE';\nexport const RECEIVED_DESCRIPTION = 'RECEIVED_DESCRIPTION';\nexport const ADD_DASHBOARD_ITEM = 'ADD_DASHBOARD_ITEM';\nexport const REMOVE_DASHBOARD_ITEM = 'REMOVE_DASHBOARD_ITEM';\nexport const UPDATE_DASHBOARD_ITEM = 'UPDATE_DASHBOARD_ITEM';\nexport const RECEIVED_DASHBOARD_LAYOUT = 'RECEIVED_DASHBOARD_LAYOUT';\n\nexport const DEFAULT_STATE_EDIT_DASHBOARD = {};\nexport const NEW_DASHBOARD_STATE = {\n    id: '',\n    name: '',\n    access: {},\n    description: '',\n    dashboardItems: [],\n};\n\nexport default (state = DEFAULT_STATE_EDIT_DASHBOARD, action) => {\n    switch (action.type) {\n        case RECEIVED_EDIT_DASHBOARD: {\n            const newState = {};\n            Object.keys(NEW_DASHBOARD_STATE).map(\n                k => (newState[k] = action.value[k])\n            );\n            return newState;\n        }\n        case RECEIVED_NOT_EDITING:\n            return DEFAULT_STATE_EDIT_DASHBOARD;\n        case START_NEW_DASHBOARD:\n            return NEW_DASHBOARD_STATE;\n        case RECEIVED_TITLE: {\n            return Object.assign({}, state, { name: action.value });\n        }\n        case RECEIVED_DESCRIPTION: {\n            return Object.assign({}, state, {\n                description: action.value,\n            });\n        }\n        case ADD_DASHBOARD_ITEM:\n            return update(state, {\n                dashboardItems: { $unshift: [action.value] },\n            });\n        case REMOVE_DASHBOARD_ITEM: {\n            const idToRemove = action.value;\n\n            const dashboardItemIndex = state.dashboardItems.findIndex(\n                item => item.id === idToRemove\n            );\n\n            if (dashboardItemIndex > -1) {\n                return update(state, {\n                    dashboardItems: {\n                        $splice: [[dashboardItemIndex, 1]],\n                    },\n                });\n            }\n\n            return state;\n        }\n        case RECEIVED_DASHBOARD_LAYOUT: {\n            const stateItems = orArray(state.dashboardItems);\n            let layoutHasChanged = false;\n\n            const newStateItems = action.value.map(({ x, y, w, h, i }) => {\n                const stateItem = stateItems.find(si => si.id === i);\n\n                if (\n                    !(\n                        stateItem.x === x &&\n                        stateItem.y === y &&\n                        stateItem.w === w &&\n                        stateItem.h === h\n                    )\n                ) {\n                    layoutHasChanged = true;\n                    return Object.assign({}, stateItem, { w, h, x, y });\n                }\n\n                return stateItem;\n            });\n\n            return layoutHasChanged\n                ? {\n                      ...state,\n                      dashboardItems: newStateItems,\n                  }\n                : state;\n        }\n        case UPDATE_DASHBOARD_ITEM: {\n            const dashboardItem = action.value;\n\n            const dashboardItemIndex = state.dashboardItems.findIndex(\n                item => item.id === dashboardItem.id\n            );\n\n            if (dashboardItemIndex > -1) {\n                const newState = update(state, {\n                    dashboardItems: {\n                        $splice: [[dashboardItemIndex, 1, dashboardItem]],\n                    },\n                });\n\n                return newState;\n            }\n\n            return state;\n        }\n        default:\n            return state;\n    }\n};\n\n// root selector\n\nexport const sGetEditDashboardRoot = state => state.editDashboard;\n\n// selectors\n\nexport const sGetIsEditing = state => !isEmpty(state.editDashboard);\n\nexport const sGetIsNewDashboard = state => {\n    return (\n        !isEmpty(state.editDashboard) && sGetEditDashboardRoot(state).id === ''\n    );\n};\n\nexport const sGetEditDashboardItems = state =>\n    orObject(sGetEditDashboardRoot(state)).dashboardItems;\n","export const CLEAR_EDIT_ITEM_FILTERS = 'CLEAR_EDIT_ITEM_FILTERS';\nexport const REMOVE_EDIT_ITEM_FILTER = 'REMOVE_EDIT_ITEM_FILTER';\nexport const SET_EDIT_ITEM_FILTERS = 'SET_EDIT_ITEM_FILTERS';\n\nexport const DEFAULT_STATE_EDIT_ITEM_FILTERS = {};\n\nexport default (state = DEFAULT_STATE_EDIT_ITEM_FILTERS, action) => {\n    switch (action.type) {\n        case REMOVE_EDIT_ITEM_FILTER: {\n            const newState = { ...state };\n\n            delete newState[action.id];\n\n            return newState;\n        }\n        case SET_EDIT_ITEM_FILTERS: {\n            return action.filters;\n        }\n        case CLEAR_EDIT_ITEM_FILTERS: {\n            return DEFAULT_STATE_EDIT_ITEM_FILTERS;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetEditItemFiltersRoot = state => state.editItemFilters;\n\nexport const sGetEditFiltersKeys = state =>\n    Object.keys(sGetEditItemFiltersRoot(state));\n","/** @module reducers/selected */\nimport { combineReducers } from 'redux';\n\nimport { validateReducer } from '../modules/util';\n\nexport const SET_SELECTED_ID = 'SET_SELECTED_ID';\nexport const SET_SELECTED_ISLOADING = 'SET_SELECTED_ISLOADING';\nexport const SET_SELECTED_SHOWDESCRIPTION = 'SET_SELECTED_SHOWDESCRIPTION';\n\nexport const DEFAULT_STATE_SELECTED_ID = null;\nexport const DEFAULT_STATE_SELECTED_ISLOADING = false;\nexport const DEFAULT_STATE_SELECTED_SHOWDESCRIPTION = false;\n\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\nconst id = (state = DEFAULT_STATE_SELECTED_ID, action) => {\n    switch (action.type) {\n        case SET_SELECTED_ID:\n            return validateReducer(action.value, DEFAULT_STATE_SELECTED_ID);\n        default:\n            return state;\n    }\n};\n\nconst isLoading = (state = DEFAULT_STATE_SELECTED_ISLOADING, action) => {\n    switch (action.type) {\n        case SET_SELECTED_ISLOADING:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_SELECTED_ISLOADING\n            );\n        default:\n            return state;\n    }\n};\n\nconst showDescription = (\n    state = DEFAULT_STATE_SELECTED_SHOWDESCRIPTION,\n    action\n) => {\n    switch (action.type) {\n        case SET_SELECTED_SHOWDESCRIPTION:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_SELECTED_SHOWDESCRIPTION\n            );\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    id,\n    isLoading,\n    showDescription,\n});\n\n// Selectors\n\nexport const sGetSelectedRoot = state => state.selected;\n\nexport const sGetSelectedId = state => sGetSelectedRoot(state).id;\n\nexport const sGetSelectedIsLoading = state => sGetSelectedRoot(state).isLoading;\n\nexport const sGetSelectedShowDescription = state =>\n    sGetSelectedRoot(state).showDescription;\n","import {\n    REMOVE_EDIT_ITEM_FILTER,\n    SET_EDIT_ITEM_FILTERS,\n    CLEAR_EDIT_ITEM_FILTERS,\n} from '../reducers/editItemFilters';\n\n// actions\n\nexport const acRemoveEditItemFilter = id => ({\n    type: REMOVE_EDIT_ITEM_FILTER,\n    id,\n});\n\nexport const acClearEditItemFilters = () => ({\n    type: CLEAR_EDIT_ITEM_FILTERS,\n});\n\nexport const acSetEditItemFilters = filters => ({\n    type: SET_EDIT_ITEM_FILTERS,\n    filters,\n});\n","export const CLEAR_ITEM_FILTERS = 'CLEAR_ITEM_FILTERS';\nexport const SET_ITEM_FILTERS = 'SET_ITEM_FILTERS';\nexport const ADD_ITEM_FILTER = 'ADD_ITEM_FILTER';\nexport const REMOVE_ITEM_FILTER = 'REMOVE_ITEM_FILTER';\n\nexport const DEFAULT_STATE_ITEM_FILTERS = {};\n\nexport default (state = DEFAULT_STATE_ITEM_FILTERS, action) => {\n    switch (action.type) {\n        case ADD_ITEM_FILTER: {\n            return {\n                ...state,\n                [action.filter.id]: action.filter.value,\n            };\n        }\n        case REMOVE_ITEM_FILTER: {\n            const newState = { ...state };\n\n            delete newState[action.id];\n\n            return newState;\n        }\n        case SET_ITEM_FILTERS: {\n            return action.filters;\n        }\n        case CLEAR_ITEM_FILTERS: {\n            return DEFAULT_STATE_ITEM_FILTERS;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetItemFiltersRoot = state => state.itemFilters;\n\nexport const sGetFiltersKeys = state => Object.keys(sGetItemFiltersRoot(state));\n","import {\n    ADD_ITEM_FILTER,\n    REMOVE_ITEM_FILTER,\n    SET_ITEM_FILTERS,\n    CLEAR_ITEM_FILTERS,\n} from '../reducers/itemFilters';\n\nexport const FILTER_ORG_UNIT = 'ou';\n\n// actions\n\nexport const acAddItemFilter = filter => ({\n    type: ADD_ITEM_FILTER,\n    filter,\n});\n\nexport const acRemoveItemFilter = id => ({\n    type: REMOVE_ITEM_FILTER,\n    id,\n});\n\nexport const acClearItemFilters = () => ({\n    type: CLEAR_ITEM_FILTERS,\n});\n\nexport const acSetItemFilters = filters => ({\n    type: SET_ITEM_FILTERS,\n    filters,\n});\n","import update from 'immutability-helper';\nimport { arrayToIdMap } from '../modules/util';\n\nexport const RECEIVED_MESSAGES = 'RECEIVED_MESSAGES';\n\nexport default (state = {}, action) => {\n    switch (action.type) {\n        case RECEIVED_MESSAGES: {\n            const conversations = arrayToIdMap(action.value);\n\n            const newState = update(state, { $merge: conversations });\n\n            return newState;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetMessagesRoot = state => state.messages;\n","import { getInstance } from 'd2';\n\nexport const getMessages = () => {\n    const fields =\n        'id,messageCount,lastUpdated,messageType,displayName,read,messages[id,read,sender[id,displayName],text,lastUpdated]';\n    const url = `/messageConversations?fields=${fields}&order=read:asc&pageSize=200`;\n    return getInstance()\n        .then(d2 => d2.Api.getApi().get(url))\n        .catch(error => console.log('Error:', error));\n};\n","export const RECEIVED_SNACKBAR_MESSAGE = 'RECEIVED_SNACKBAR_MESSAGE';\nexport const CLOSE_SNACKBAR = 'CLOSE_SNACKBAR';\n\nexport const DEFAULT_STATE_SNACKBAR = {\n    message: {},\n    duration: null,\n    open: false,\n};\n\nexport default (state = DEFAULT_STATE_SNACKBAR, action) => {\n    switch (action.type) {\n        case RECEIVED_SNACKBAR_MESSAGE: {\n            return { ...state, ...action.value };\n        }\n        case CLOSE_SNACKBAR: {\n            return DEFAULT_STATE_SNACKBAR;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetSnackbar = state => state.snackbar || DEFAULT_STATE_SNACKBAR;\n","import {\n    RECEIVED_SNACKBAR_MESSAGE,\n    CLOSE_SNACKBAR,\n} from '../reducers/snackbar';\n\nexport const acReceivedSnackbarMessage = value => ({\n    type: RECEIVED_SNACKBAR_MESSAGE,\n    value,\n});\n\nexport const acCloseSnackbar = () => ({\n    type: CLOSE_SNACKBAR,\n});\n","import { orObject } from '../modules/util';\nimport objectClean from 'd2-utilizr/lib/objectClean';\n\n/** @module reducers/visualizations */\n\nexport const ADD_VISUALIZATION = 'ADD_VISUALIZATION';\nexport const SET_ACTIVE_VISUALIZATION_TYPE = 'SET_ACTIVE_VISUALIZATION_TYPE';\n\nexport const DEFAULT_STATE_VISUALIZATIONS = {};\n\nconst isEmpty = p => p === undefined || p === null;\n\nexport default (state = DEFAULT_STATE_VISUALIZATIONS, action) => {\n    switch (action.type) {\n        case ADD_VISUALIZATION: {\n            return {\n                ...state,\n                [action.value.id]: objectClean(\n                    {\n                        ...orObject(state[action.value.id]),\n                        ...action.value,\n                    },\n                    isEmpty\n                ),\n            };\n        }\n        case SET_ACTIVE_VISUALIZATION_TYPE: {\n            return {\n                ...state,\n                [action.id]: objectClean(\n                    {\n                        ...orObject(state[action.id]),\n                        activeType: action.activeType,\n                    },\n                    isEmpty\n                ),\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// root selector\nexport const sGetVisualizationsRoot = state => state.visualizations;\n\n// selectors level 1\nexport const sGetVisualization = (state, id) => {\n    return sGetVisualizationsRoot(state)[id];\n};\n","import {\n    ADD_VISUALIZATION,\n    SET_ACTIVE_VISUALIZATION_TYPE,\n} from '../reducers/visualizations';\n\nexport const acAddVisualization = value => ({\n    type: ADD_VISUALIZATION,\n    value,\n});\n\nexport const acSetActiveVisualizationType = (id, activeType) => {\n    const action = {\n        type: SET_ACTIVE_VISUALIZATION_TYPE,\n        id,\n        activeType,\n    };\n\n    return action;\n};\n","import arrayClean from 'd2-utilizr/lib/arrayClean';\nimport {\n    getListItemFields,\n    getFavoritesFields,\n    getIdNameFields,\n} from './metadata';\n\n// Helper functions\n\nexport const onError = error => console.log('Error: ', error);\n\n// Dashboard item\nexport const getDashboardItemsFields = ({ withFavorite } = {}) =>\n    arrayClean([\n        'id',\n        'type',\n        'shape',\n        'x',\n        'y',\n        'width~rename(w)',\n        'height~rename(h)',\n        'messages',\n        'text',\n        'appKey',\n        `${getListItemFields().join(',')}`,\n        withFavorite\n            ? `${getFavoritesFields({\n                  withDimensions: withFavorite.withDimensions,\n              }).join(',')}`\n            : ``,\n    ]);\n\n// Dashboard\nexport const getDashboardFields = ({ withItems, withFavorite } = {}) =>\n    arrayClean([\n        `${getIdNameFields().join(',')}`,\n        'description',\n        'displayDescription',\n        'favorite',\n        `user[${getIdNameFields({ rename: true }).join(',')}]`,\n        'created',\n        'lastUpdated',\n        'access',\n        withItems\n            ? `dashboardItems[${getDashboardItemsFields({\n                  withFavorite,\n              }).join(',')}]`\n            : ``,\n    ]);\n","import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { onError, getDashboardFields } from './index';\n\n// Get \"all\" dashboards on startup\nexport const apiFetchDashboards = () =>\n    getInstance()\n        .then(d2 =>\n            d2.models.dashboard.list({\n                fields: [\n                    getDashboardFields().join(','),\n                    'dashboardItems[id]',\n                ].join(','),\n                paging: 'false',\n            })\n        )\n        .catch(onError);\n\n// Get more info about selected dashboard\nexport const apiFetchDashboard = id =>\n    getInstance()\n        .then(d2 =>\n            d2.models.dashboard.get(id, {\n                fields: arrayClean(\n                    getDashboardFields({\n                        withItems: true,\n                        withFavorite: { withDimensions: false },\n                    })\n                ).join(','),\n            })\n        )\n        .catch(onError);\n\n// Star dashboard\nexport const apiStarDashboard = (id, isStarred) => {\n    const url = `dashboards/${id}/favorite`;\n\n    getInstance().then(d2 => {\n        if (isStarred) {\n            d2.Api.getApi().post(url);\n        } else {\n            d2.Api.getApi().delete(url);\n        }\n    });\n};\n\nexport const apiDeleteDashboard = id => {\n    return getInstance()\n        .then(d2 => {\n            return d2.models.dashboards\n                .get(id)\n                .then(dashboard => dashboard.delete());\n        })\n        .catch(onError);\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport PropTypes from 'prop-types';\n\nimport { sGetSnackbar } from '../../reducers/snackbar';\nimport { acCloseSnackbar } from '../../actions/snackbar';\n\nconst LOADING_DASHBOARD = 'LOADING_DASHBOARD';\nexport const loadingDashboardMsg = { name: '', type: LOADING_DASHBOARD };\n\nconst SnackbarMessageContent = ({ message }) => {\n    if (typeof message === 'object') {\n        //future message types:  switch(message.type)\n        return (\n            <span>\n                Loading <span style={{ fontWeight: 800 }}>{message.name}</span>{' '}\n                dashboard\n            </span>\n        );\n    }\n    return message;\n};\n\nexport const SnackbarMessage = props => {\n    return (\n        <Snackbar\n            style={{ zIndex: 10001 }}\n            open={props.snackbarOpen}\n            message={<SnackbarMessageContent message={props.snackbarMessage} />}\n            autoHideDuration={props.snackbarDuration}\n            onClose={props.onCloseSnackbar}\n        />\n    );\n};\n\nconst mapStateToProps = state => {\n    const { message, duration, open } = sGetSnackbar(state);\n    return {\n        snackbarOpen: open,\n        snackbarMessage: message,\n        snackbarDuration: duration,\n    };\n};\n\nSnackbarMessage.propTypes = {\n    snackbarDuration: PropTypes.string,\n    snackbarMessage: PropTypes.object,\n    snackbarOpen: PropTypes.bool,\n    onCloseSnackbar: PropTypes.func,\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        onCloseSnackbar: acCloseSnackbar,\n    }\n)(SnackbarMessage);\n","import { getCustomDashboards, sGetDashboardById } from '../reducers/dashboards';\nimport { sGetIsEditing } from '../reducers/editDashboard';\nimport { sGetEditItemFiltersRoot } from '../reducers/editItemFilters';\nimport {\n    SET_SELECTED_ID,\n    SET_SELECTED_ISLOADING,\n    SET_SELECTED_SHOWDESCRIPTION,\n    sGetSelectedIsLoading,\n    sGetSelectedId,\n} from '../reducers/selected';\nimport { sGetUserUsername } from '../reducers/user';\n\nimport { acSetDashboardItems, acAppendDashboards } from './dashboards';\nimport { acClearEditItemFilters } from './editItemFilters';\nimport { acClearItemFilters, acSetItemFilters } from './itemFilters';\nimport { tGetMessages } from '../components/Item/MessagesItem/actions';\nimport { acReceivedSnackbarMessage, acCloseSnackbar } from './snackbar';\nimport { acAddVisualization } from './visualizations';\n\nimport { apiFetchDashboard } from '../api/dashboards';\nimport { storePreferredDashboardId } from '../api/localStorage';\n\nimport { withShape } from '../components/ItemGrid/gridUtil';\nimport { loadingDashboardMsg } from '../components/SnackbarMessage/SnackbarMessage';\nimport { extractFavorite } from '../components/Item/VisualizationItem/plugin';\n\nimport {\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_REPORT,\n    EVENT_CHART,\n    MESSAGES,\n} from '../modules/itemTypes';\nimport { orObject } from '../modules/util';\n\n// actions\n\nexport const acSetSelectedId = value => ({\n    type: SET_SELECTED_ID,\n    value,\n});\n\nexport const acSetSelectedIsLoading = value => ({\n    type: SET_SELECTED_ISLOADING,\n    value,\n});\n\nexport const acSetSelectedShowDescription = value => ({\n    type: SET_SELECTED_SHOWDESCRIPTION,\n    value,\n});\n\nexport const tLoadDashboard = id => async dispatch => {\n    try {\n        const dash = await apiFetchDashboard(id);\n\n        dispatch(acAppendDashboards(dash));\n\n        return Promise.resolve(dash);\n    } catch (err) {\n        console.log('Error: ', err);\n        return err;\n    }\n};\n\n// thunks\nexport const tSetSelectedDashboardById = id => async (dispatch, getState) => {\n    dispatch(acSetSelectedIsLoading(true));\n\n    const snackbarTimeout = setTimeout(() => {\n        const dashboardName = orObject(sGetDashboardById(getState(), id))\n            .displayName;\n        if (sGetSelectedIsLoading(getState()) && dashboardName) {\n            loadingDashboardMsg.name = dashboardName;\n\n            dispatch(\n                acReceivedSnackbarMessage({\n                    message: loadingDashboardMsg,\n                    open: true,\n                })\n            );\n        }\n    }, 500);\n\n    const onSuccess = selected => {\n        const customDashboard = getCustomDashboards(selected)[0];\n\n        dispatch(\n            acSetDashboardItems(withShape(customDashboard.dashboardItems))\n        );\n\n        storePreferredDashboardId(sGetUserUsername(getState()), id);\n\n        // add visualizations to store\n        customDashboard.dashboardItems.forEach(item => {\n            switch (item.type) {\n                case REPORT_TABLE:\n                case CHART:\n                case MAP:\n                case EVENT_REPORT:\n                case EVENT_CHART:\n                    dispatch(acAddVisualization(extractFavorite(item)));\n                    break;\n                case MESSAGES:\n                    dispatch(tGetMessages(id));\n                    break;\n                default:\n                    break;\n            }\n        });\n\n        const state = getState();\n        if (id === sGetSelectedId(state)) {\n            if (sGetIsEditing(state)) {\n                // disable filters when switching to edit mode\n                dispatch(acClearItemFilters());\n            } else {\n                // enable filters when switching to view mode\n                dispatch(acSetItemFilters(sGetEditItemFiltersRoot(state)));\n            }\n        } else {\n            // clear filters when switching dashboard\n            dispatch(acClearEditItemFilters());\n            dispatch(acClearItemFilters());\n        }\n\n        dispatch(acSetSelectedId(id));\n\n        dispatch(acSetSelectedIsLoading(false));\n\n        clearTimeout(snackbarTimeout);\n\n        dispatch(acCloseSnackbar());\n\n        return selected;\n    };\n\n    const onError = error => {\n        console.log('Error: ', error);\n        return error;\n    };\n\n    try {\n        const selected = await dispatch(tLoadDashboard(id));\n\n        return onSuccess(selected);\n    } catch (err) {\n        return onError(err);\n    }\n};\n","export const getPreferredDashboardId = username =>\n    localStorage.getItem(`dhis2.dashboard.current.${username}`) || undefined;\n\nexport const storePreferredDashboardId = (username, dashboardId) => {\n    localStorage.setItem(`dhis2.dashboard.current.${username}`, dashboardId);\n};\n","import { RECEIVED_MESSAGES } from '../../../reducers/messages';\nimport { getMessages } from '../../../api/messages';\n\nconst onError = (action, error) => {\n    console.log(`Error in action ${action}: ${error}`);\n    return error;\n};\n\nexport const receivedMessages = value => ({\n    type: RECEIVED_MESSAGES,\n    value,\n});\n\nexport const tGetMessages = () => async dispatch => {\n    try {\n        const messages = await getMessages();\n        const { messageConversations } = messages;\n\n        return dispatch(receivedMessages(messageConversations));\n    } catch (err) {\n        return onError('Get Messages', err);\n    }\n};\n","import { getInstance } from 'd2';\n\nconst onError = error => console.log('Error: ', error);\n\nconst saveDashboard = (dashboard, data) => {\n    const { name, description, dashboardItems } = data;\n\n    dashboard.name = name;\n    dashboard.description = description;\n    dashboard.dashboardItems = dashboardItems.map(item =>\n        Object.assign({}, item, { width: item.w, height: item.h })\n    );\n\n    return dashboard.save().then(msg => msg.response.uid);\n};\n\nexport const updateDashboard = data => {\n    return getInstance()\n        .then(d2 => {\n            return d2.models.dashboards\n                .get(data.id)\n                .then(dashboard => saveDashboard(dashboard, data));\n        })\n        .catch(onError);\n};\n\nexport const postDashboard = data => {\n    return getInstance().then(d2 => {\n        const dashboard = d2.models.dashboards.create();\n\n        return saveDashboard(dashboard, data);\n    });\n};\n","import { generateUid } from 'd2/uid';\n\nimport {\n    RECEIVED_EDIT_DASHBOARD,\n    START_NEW_DASHBOARD,\n    RECEIVED_NOT_EDITING,\n    RECEIVED_TITLE,\n    RECEIVED_DESCRIPTION,\n    RECEIVED_DASHBOARD_LAYOUT,\n    ADD_DASHBOARD_ITEM,\n    UPDATE_DASHBOARD_ITEM,\n    REMOVE_DASHBOARD_ITEM,\n} from '../reducers/editDashboard';\nimport { sGetEditDashboardRoot } from '../reducers/editDashboard';\nimport { updateDashboard, postDashboard } from '../api/editDashboard';\nimport { tSetSelectedDashboardById } from '../actions/selected';\nimport { NEW_ITEM_SHAPE } from '../components/ItemGrid/gridUtil';\nimport {\n    itemTypeMap,\n    isSpacerType,\n    TEXT,\n    emptyTextItemContent,\n    isTextType,\n} from '../modules/itemTypes';\n\nconst onError = error => {\n    console.log('Error (Saving Dashboard): ', error);\n    return error;\n};\n\n// actions\n\nexport const acSetEditDashboard = (dashboard, items) => {\n    const val = {\n        ...dashboard,\n        dashboardItems: items,\n    };\n\n    return {\n        type: RECEIVED_EDIT_DASHBOARD,\n        value: val,\n    };\n};\n\nexport const acSetEditNewDashboard = () => ({\n    type: START_NEW_DASHBOARD,\n});\n\nexport const acClearEditDashboard = () => ({\n    type: RECEIVED_NOT_EDITING,\n});\n\nexport const acSetDashboardTitle = value => ({\n    type: RECEIVED_TITLE,\n    value,\n});\n\nexport const acSetDashboardDescription = value => ({\n    type: RECEIVED_DESCRIPTION,\n    value,\n});\n\nexport const acUpdateDashboardLayout = value => ({\n    type: RECEIVED_DASHBOARD_LAYOUT,\n    value,\n});\n\nexport const acAddDashboardItem = item => {\n    const type = item.type;\n    delete item.type;\n    const itemPropName = itemTypeMap[type].propName;\n\n    return {\n        type: ADD_DASHBOARD_ITEM,\n        value: {\n            id: generateUid(),\n            type,\n            [itemPropName]: item.content,\n            ...NEW_ITEM_SHAPE,\n        },\n    };\n};\n\nexport const acUpdateDashboardItem = item => ({\n    type: UPDATE_DASHBOARD_ITEM,\n    value: item,\n});\n\nexport const acRemoveDashboardItem = value => ({\n    type: REMOVE_DASHBOARD_ITEM,\n    value,\n});\n\n// thunks\n\nexport const tSaveDashboard = () => async (dispatch, getState) => {\n    const dashboard = sGetEditDashboardRoot(getState());\n\n    const dashboardItems = dashboard.dashboardItems.map(item => {\n        const text = isTextType(item)\n            ? item.text || emptyTextItemContent\n            : null;\n\n        const type = isSpacerType(item) ? TEXT : item.type;\n\n        return {\n            ...item,\n            ...(text ? { text } : {}),\n            type,\n        };\n    });\n\n    const dashboardToSave = {\n        ...dashboard,\n        dashboardItems,\n    };\n\n    try {\n        const dashboardId = dashboardToSave.id\n            ? await updateDashboard(dashboardToSave)\n            : await postDashboard(dashboardToSave);\n\n        dispatch(acClearEditDashboard());\n        await dispatch(tSetSelectedDashboardById(dashboardId));\n\n        return Promise.resolve(dashboardId);\n    } catch (error) {\n        onError(error);\n    }\n};\n","import {\n    SET_DASHBOARDS,\n    ADD_DASHBOARDS,\n    SET_DASHBOARD_STARRED,\n    SET_DASHBOARD_DISPLAY_NAME,\n    SET_DASHBOARD_ITEMS,\n} from '../reducers/dashboards';\nimport {\n    getCustomDashboards,\n    sGetDashboardById,\n    sGetDashboardsSortedByStarred,\n} from '../reducers/dashboards';\nimport { sGetUserUsername } from '../reducers/user';\nimport { tSetSelectedDashboardById, acSetSelectedId } from './selected';\nimport { acClearEditDashboard } from './editDashboard';\nimport {\n    apiFetchDashboards,\n    apiStarDashboard,\n    apiDeleteDashboard,\n} from '../api/dashboards';\nimport { getPreferredDashboardId } from '../api/localStorage';\nimport { arrayToIdMap } from '../modules/util';\n\n// actions\n\nexport const acSetDashboards = dashboards => ({\n    type: SET_DASHBOARDS,\n    value: arrayToIdMap(getCustomDashboards(dashboards)),\n});\n\nexport const acAppendDashboards = dashboards => ({\n    type: ADD_DASHBOARDS,\n    value: arrayToIdMap(getCustomDashboards(dashboards)),\n});\n\nexport const acSetDashboardStarred = (dashboardId, isStarred) => ({\n    type: SET_DASHBOARD_STARRED,\n    dashboardId: dashboardId,\n    value: isStarred,\n});\n\nexport const acSetDashboardDisplayName = (dashboardId, value) => ({\n    type: SET_DASHBOARD_DISPLAY_NAME,\n    dashboardId,\n    value,\n});\n\nexport const acSetDashboardItems = value => ({\n    type: SET_DASHBOARD_ITEMS,\n    value,\n});\n\n// thunks\n\nexport const tFetchDashboards = () => async dispatch => {\n    const collection = await apiFetchDashboards();\n    dispatch(acSetDashboards(collection.toArray()));\n};\n\nexport const tSelectDashboard = id => async (dispatch, getState) => {\n    const onError = error => {\n        console.log('Error (apiFetchDashboards): ', error);\n        return error;\n    };\n\n    try {\n        const state = getState();\n\n        let dashboardToSelect = null;\n        if (id) {\n            dashboardToSelect = sGetDashboardById(state, id) || null;\n        } else {\n            const preferredId = getPreferredDashboardId(\n                sGetUserUsername(state)\n            );\n            const dash = sGetDashboardById(state, preferredId);\n            dashboardToSelect =\n                preferredId && dash\n                    ? dash\n                    : sGetDashboardsSortedByStarred(state)[0];\n        }\n\n        if (dashboardToSelect) {\n            dispatch(tSetSelectedDashboardById(dashboardToSelect.id));\n        } else {\n            dispatch(acSetSelectedId());\n        }\n    } catch (err) {\n        return onError(err);\n    }\n};\n\nexport const tStarDashboard = (id, isStarred) => async dispatch => {\n    const onSuccess = id => {\n        dispatch(acSetDashboardStarred(id, isStarred));\n        return id;\n    };\n\n    const onError = error => {\n        console.log('Error (apiStarDashboard): ', error);\n        return error;\n    };\n    try {\n        await apiStarDashboard(id, isStarred);\n        return onSuccess(id);\n    } catch (err) {\n        return onError(err);\n    }\n};\n\nexport const tDeleteDashboard = id => async dispatch => {\n    try {\n        await apiDeleteDashboard(id);\n        dispatch(acClearEditDashboard());\n        dispatch(acSetSelectedId());\n        dispatch(acSetDashboardItems([]));\n\n        await dispatch(tFetchDashboards());\n\n        return Promise.resolve();\n    } catch (err) {\n        console.log('Error (deleteDashboard): ', err);\n        return err;\n    }\n};\n","/** @module reducers/controlBar */\nimport { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\n\nexport const SET_CONTROLBAR_USER_ROWS = 'SET_CONTROLBAR_USER_ROWS';\n\nexport const DEFAULT_STATE_CONTROLBAR_ROWS = 1;\n\nconst userRows = (state = DEFAULT_STATE_CONTROLBAR_ROWS, action) => {\n    switch (action.type) {\n        case SET_CONTROLBAR_USER_ROWS:\n            return validateReducer(action.value, DEFAULT_STATE_CONTROLBAR_ROWS);\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    userRows,\n});\n\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\nexport const sGetControlBarRoot = state => state.controlBar;\n\n// Selector dependency level 2\n\nexport const sGetControlBarUserRows = state =>\n    sGetControlBarRoot(state).userRows;\n","import { getInstance } from 'd2';\nimport { DEFAULT_STATE_CONTROLBAR_ROWS } from '../reducers/controlBar';\n\nconst NAMESPACE = 'dashboard';\nconst KEY = 'controlBarRows';\n\nconst hasNamespace = async d2 => await d2.currentUser.dataStore.has(NAMESPACE);\n\nconst getNamespace = async (d2, hasNamespace) =>\n    hasNamespace\n        ? await d2.currentUser.dataStore.get(NAMESPACE)\n        : await d2.currentUser.dataStore.create(NAMESPACE);\n\nexport const apiGetControlBarRows = async () => {\n    const d2 = await getInstance();\n    const namespace = await getNamespace(d2, await hasNamespace(d2));\n    const hasKey = namespace.keys && namespace.keys.find(key => key === KEY);\n\n    if (hasKey) {\n        return await namespace.get(KEY);\n    } else {\n        await apiPostControlBarRows(DEFAULT_STATE_CONTROLBAR_ROWS, namespace);\n        console.log(\n            '(These errors to /userDataStore/dashboard can be ignored)'\n        );\n        return DEFAULT_STATE_CONTROLBAR_ROWS;\n    }\n};\n\nexport const apiPostControlBarRows = async (rows, namespace) => {\n    const d2 = await getInstance();\n    const ns = namespace || (await getNamespace(d2, hasNamespace));\n\n    ns.set(KEY, rows);\n};\n","import { SET_CONTROLBAR_USER_ROWS } from '../reducers/controlBar';\nimport { apiGetControlBarRows } from '../api/controlBar';\n\n// actions\n\nexport const acSetControlBarUserRows = rows => ({\n    type: SET_CONTROLBAR_USER_ROWS,\n    value: rows,\n});\n\n// thunks\n\nexport const tSetControlBarRows = () => async dispatch => {\n    const onSuccess = rows => {\n        dispatch(acSetControlBarUserRows(rows));\n    };\n\n    const onError = error => {\n        console.log('Error (apiGetControlBarRows): ', error);\n        return error;\n    };\n\n    try {\n        const controlBarRows = await apiGetControlBarRows();\n        return onSuccess(controlBarRows);\n    } catch (err) {\n        return onError(err);\n    }\n};\n","import {\n    getDimensionById,\n    DIMENSION_ID_PERIOD,\n    DIMENSION_ID_ORGUNIT,\n} from '@dhis2/analytics';\n\nexport const SET_DIMENSIONS = 'SET_DIMENSIONS';\nexport const DEFAULT_DIMENSIONS = [\n    getDimensionById(DIMENSION_ID_PERIOD),\n    getDimensionById(DIMENSION_ID_ORGUNIT),\n];\n\nexport default (state = DEFAULT_DIMENSIONS, action) => {\n    switch (action.type) {\n        case SET_DIMENSIONS: {\n            return [...DEFAULT_DIMENSIONS, ...action.value];\n        }\n        default:\n            return state;\n    }\n};\n\nexport const sGetDimensions = state => state.dimensions;\n","export const SET_SETTINGS = 'SET_SETTINGS';\nexport const ADD_SETTINGS = 'ADD_SETTINGS';\n\nexport const DEFAULT_SETTINGS = {\n    keyDateFormat: 'yyyy-MM-dd',\n    keyAnalysisRelativePeriod: 'LAST_12_MONTHS',\n    keyAnalysisDigitGroupSeparator: 'SPACE',\n    displayNameProperty: 'displayName',\n    uiLocale: 'en',\n    rootOrganisationUnit: {},\n};\n\nexport default (state = DEFAULT_SETTINGS, action) => {\n    switch (action.type) {\n        case SET_SETTINGS: {\n            return Object.assign({}, action.value);\n        }\n        case ADD_SETTINGS: {\n            return {\n                ...state,\n                ...action.value,\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// Selectors\n\nexport const sGetSettings = state => state.settings;\n\nexport const sGetSettingsDisplayNameProperty = state =>\n    sGetSettings(state).displayNameProperty;\n\nexport const sGetRootOrgUnit = state =>\n    sGetSettings(state).rootOrganisationUnit;\n\nexport const sGetRelativePeriod = state =>\n    sGetSettings(state).keyAnalysisRelativePeriod;\n\nexport const sGetUiLocale = state => sGetSettings(state).uiLocale;\n","import { SET_DIMENSIONS } from '../reducers/dimensions';\nimport { apiFetchDimensions } from '@dhis2/analytics';\nimport { sGetSettingsDisplayNameProperty } from '../reducers/settings';\n\nexport const acSetDimensions = dimensions => ({\n    type: SET_DIMENSIONS,\n    value: dimensions,\n});\n\nexport const tSetDimensions = d2 => async (dispatch, getState) => {\n    const onSuccess = dimensions => {\n        dispatch(acSetDimensions(dimensions));\n    };\n\n    const onError = error => {\n        console.log('Error (apiFetchDimensions): ', error);\n        return error;\n    };\n\n    try {\n        const displayNameProp = sGetSettingsDisplayNameProperty(getState());\n        const dimensions = await apiFetchDimensions(d2, displayNameProp);\n\n        // filter out CATEGORY that are not of type ATTRIBUTE\n        const filteredDimensions = dimensions.filter(\n            dim =>\n                dim.dimensionType !== 'CATEGORY' ||\n                (dim.dimensionType === 'CATEGORY' &&\n                    dim.dataDimensionType === 'ATTRIBUTE')\n        );\n        return onSuccess(filteredDimensions);\n    } catch (err) {\n        return onError(err);\n    }\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { colors } from '@dhis2/ui-core';\nimport { withStyles } from '@material-ui/core/styles';\n\nexport const SHOWMORE_BAR_HEIGHT = 16;\n\nconst styles = {\n    showMore: {\n        color: colors.grey700,\n        cursor: 'pointer',\n        fontSize: 11,\n        paddingTop: 5,\n        '&:hover': {\n            textDecoration: 'underline',\n        },\n    },\n    disabled: {\n        paddingTop: 5,\n        color: colors.grey500,\n        fontSize: 11,\n        cursor: 'not-allowed',\n    },\n};\n\nexport const ShowMoreButton = ({ onClick, isMaxHeight, classes, disabled }) => {\n    return (\n        <div style={{ textAlign: 'center' }}>\n            {disabled ? (\n                <div className={classes.disabled}>{i18n.t('Show more')}</div>\n            ) : (\n                <div className={classes.showMore} onClick={onClick}>\n                    {isMaxHeight ? i18n.t('Show less') : i18n.t('Show more')}\n                </div>\n            )}\n        </div>\n    );\n};\n\nShowMoreButton.propTypes = {\n    classes: PropTypes.object,\n    disabled: PropTypes.bool,\n    isMaxHeight: PropTypes.bool,\n    onClick: PropTypes.func,\n};\n\nexport default withStyles(styles)(ShowMoreButton);\n","import { SHOWMORE_BAR_HEIGHT } from './ShowMoreButton';\n\nexport const CONTROL_BAR_ROW_HEIGHT = 40;\nexport const FIRST_ROW_PADDING_HEIGHT = 10;\nexport const MIN_ROW_COUNT = 1;\n\nexport const HEADERBAR_HEIGHT = 48;\n\nconst CONTROL_BAR_OUTER_HEIGHT_DIFF =\n    FIRST_ROW_PADDING_HEIGHT + SHOWMORE_BAR_HEIGHT - 2; // 2 pixel \"adjustment\"\n\nexport const getRowsHeight = rows => {\n    return rows * CONTROL_BAR_ROW_HEIGHT;\n};\n\nexport const getNumRowsFromHeight = height => {\n    return Math.floor(\n        (height - CONTROL_BAR_OUTER_HEIGHT_DIFF) / CONTROL_BAR_ROW_HEIGHT\n    );\n};\n\nexport const getTopOffset = rows => {\n    return HEADERBAR_HEIGHT + getControlBarHeight(rows, false);\n};\n\nexport const getControlBarHeight = rows => {\n    return getRowsHeight(rows) + CONTROL_BAR_OUTER_HEIGHT_DIFF;\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { colors } from '@dhis2/ui-core';\nimport { HEADERBAR_HEIGHT } from './controlBarDimensions';\n\nimport classes from './styles/ControlBar.module.css';\n\nconst DRAG_HANDLE_HEIGHT = 7;\n\nclass ControlBar extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            dragging: false,\n        };\n    }\n\n    onStartDrag = () => {\n        this.setState({ dragging: true });\n        window.addEventListener('mousemove', this.onDrag);\n        window.addEventListener('mouseup', this.onEndDrag);\n    };\n\n    onDrag = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const newHeight = event.clientY;\n\n        if (\n            this.props.onChangeHeight &&\n            newHeight !== this.props.height &&\n            newHeight > 0\n        ) {\n            requestAnimationFrame(() => {\n                this.props.onChangeHeight(newHeight);\n            });\n        }\n    };\n\n    onEndDrag = () => {\n        this.setState({ dragging: false });\n        window.removeEventListener('mousemove', this.onDrag);\n        window.removeEventListener('mouseup', this.onEndDrag);\n\n        if (this.props.onEndDrag) {\n            this.props.onEndDrag();\n        }\n    };\n\n    renderDragHandle() {\n        return typeof this.props.onChangeHeight === 'function' ? (\n            <div\n                className={classes.draghandle}\n                style={{ height: DRAG_HANDLE_HEIGHT }}\n                onMouseDown={this.onStartDrag}\n            />\n        ) : null;\n    }\n\n    render() {\n        const height = Math.max(this.props.height, 0) + DRAG_HANDLE_HEIGHT;\n\n        const rootStyle = Object.assign(\n            {\n                height,\n                top: HEADERBAR_HEIGHT,\n                backgroundColor: this.props.editMode\n                    ? colors.yellow050\n                    : colors.white,\n                paddingBottom: DRAG_HANDLE_HEIGHT,\n            },\n            // Disable animations while dragging\n            this.state.dragging ? { transition: 'none' } : {}\n        );\n\n        return (\n            <div style={rootStyle} className={classes.root}>\n                <div className={classes.content}>{this.props.children}</div>\n                {this.renderDragHandle()}\n            </div>\n        );\n    }\n}\n\nControlBar.propTypes = {\n    /**\n     * The height of the control bar in number of lines. Must be a positive integer.\n     */\n    children: PropTypes.node.isRequired,\n\n    /**\n     * If true, the background color of the control bar changes to indicate that edit mode is active.\n     */\n    editMode: PropTypes.bool.isRequired,\n\n    /**\n     * Callback function that is called when the control bar is resized.\n     * The callback receives one argument: The new height in pixels.\n     *\n     * If no callback is specified the control bar will not have a drag handle.\n     */\n    height: PropTypes.number.isRequired,\n\n    /**\n     * Callback function that is called when the control bar is dropped after being dragged.\n     * The callback receives one argument: The new height in pixels.\n     *\n     * Ignored if no \"onChangeHeight\" function is provided.\n     */\n    onChangeHeight: PropTypes.func,\n\n    /**\n     * The contents of the control bar.\n     */\n    onEndDrag: PropTypes.func,\n};\n\nControlBar.defaultProps = {\n    onChangeHeight: null,\n    onEndDrag: null,\n};\n\nexport default ControlBar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst StarIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>\n);\n\nStarIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default StarIcon;\n","import { getInstance } from 'd2';\n\nexport const apiPostDataStatistics = async (eventType, id) => {\n    const d2 = await getInstance();\n    const url = `dataStatistics?eventType=${eventType}&favorite=${id}`;\n\n    d2.Api.getApi().post(url);\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Chip, colors } from '@dhis2/ui-core';\nimport { Link } from 'react-router-dom';\nimport debounce from 'lodash/debounce';\n\nimport StarIcon from '../../icons/Star';\nimport { apiPostDataStatistics } from '../../api/dataStatistics';\n\nconst styles = {\n    chip: {\n        margin: '3px',\n    },\n    link: {\n        color: colors.grey600,\n        display: 'inline-block',\n        textDecoration: 'none',\n        verticalAlign: 'top',\n    },\n    icon: {\n        height: '20px',\n        marginTop: '2px',\n        width: '20px',\n    },\n    selected: {\n        fill: colors.white,\n    },\n    unselected: {\n        fill: colors.grey700,\n    },\n};\n\nexport const DashboardItemChip = ({\n    starred,\n    selected,\n    label,\n    dashboardId,\n    classes,\n}) => {\n    const chipProps = {\n        selected,\n        className: classes.chip,\n    };\n\n    if (starred) {\n        const selectedState = selected ? classes.selected : classes.unselected;\n        chipProps.icon = (\n            <StarIcon className={`${classes.icon} ${selectedState}`} />\n        );\n    }\n\n    return (\n        <Link\n            className={classes.link}\n            to={`/${dashboardId}`}\n            onClick={debounce(\n                () => apiPostDataStatistics('DASHBOARD_VIEW', dashboardId),\n                500\n            )}\n        >\n            <Chip {...chipProps}>{label}</Chip>\n        </Link>\n    );\n};\n\nDashboardItemChip.propTypes = {\n    dashboardId: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    selected: PropTypes.bool.isRequired,\n    starred: PropTypes.bool.isRequired,\n    classes: PropTypes.object,\n};\n\nexport default withStyles(styles)(DashboardItemChip);\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\n\nconst AddCircleIcon = () => (\n    <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"32\"\n        height=\"32\"\n        fill={colors.teal600}\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm4 11h-3v3c0 .55-.45 1-1 1s-1-.45-1-1v-3H8c-.55 0-1-.45-1-1s.45-1 1-1h3V8c0-.55.45-1 1-1s1 .45 1 1v3h3c.55 0 1 .45 1 1s-.45 1-1 1z\" />\n    </svg>\n);\n\nexport default AddCircleIcon;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nconst ClearIcon = ({ className }) => (\n    <svg\n        className={className}\n        fill={colors.grey800}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>\n);\n\nClearIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default ClearIcon;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ClearIcon from '../../icons/Clear';\n\nimport classes from './styles/ClearButton.module.css';\n\nexport const ClearButton = ({ onClear }) => (\n    <button className={classes.button} onClick={onClear}>\n        <span>\n            <ClearIcon className={classes.icon} color=\"action\" />\n        </span>\n    </button>\n);\n\nClearButton.propTypes = {\n    onClear: PropTypes.func.isRequired,\n};\n\nexport default ClearButton;\n","import { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\n\nexport const SET_DASHBOARDS_FILTER_NAME = 'SET_DASHBOARDS_FILTER_NAME';\nexport const SET_DASHBOARDS_FILTER_OWNER = 'SET_DASHBOARDS_FILTER_OWNER';\nexport const SET_DASHBOARDS_FILTER_ORDER = 'SET_DASHBOARDS_FILTER_ORDER';\n\nexport const ownerData = [\n    { id: 'ALL', value: 'All users' },\n    { id: 'ME', value: 'Created by me' },\n    { id: 'OTHERS', value: 'Created by others' },\n];\n\nexport const orderData = [\n    { id: 'NAME:ASC', value: 'Name (asc)' },\n    { id: 'NAME:ASC', value: 'Name (desc)' },\n    { id: 'ITEMS:ASC', value: 'Number of items (asc)' },\n    { id: 'ITEMS:ASC', value: 'Number of items (desc)' },\n    { id: 'CREATED:ASC', value: 'Created date (asc)' },\n    { id: 'CREATED:ASC', value: 'Created date (desc)' },\n];\n\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_NAME = '';\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_OWNER = ownerData[0].id;\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_ORDER = orderData[0].id;\n\nconst name = (state = DEFAULT_STATE_DASHBOARDS_FILTER_NAME, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_NAME:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_NAME\n            );\n        default:\n            return state;\n    }\n};\n\nconst owner = (state = DEFAULT_STATE_DASHBOARDS_FILTER_OWNER, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_OWNER:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_NAME\n            );\n        default:\n            return state;\n    }\n};\n\nconst order = (state = DEFAULT_STATE_DASHBOARDS_FILTER_ORDER, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_ORDER:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_ORDER\n            );\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    name,\n    owner,\n    order,\n});\n\n// selectors\n\nexport const sGetDashboardsFilterRoot = state => state.dashboardsFilter;\n\n// selector dependency level 2\n\nexport const sGetFilterName = state => sGetDashboardsFilterRoot(state).name;\nexport const sGetFilterOwner = state => sGetDashboardsFilterRoot(state).owner;\nexport const sGetFilterOrder = state => sGetDashboardsFilterRoot(state).order;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport i18n from '@dhis2/d2-i18n';\nimport InputField from '@material-ui/core/Input';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { colors } from '@dhis2/ui-core';\n\nimport ClearButton from './ClearButton';\nimport { DEFAULT_STATE_DASHBOARDS_FILTER_NAME } from '../../reducers/dashboardsFilter';\n\nexport const KEYCODE_ENTER = 13;\nexport const KEYCODE_ESCAPE = 27;\n\nconst styles = {\n    filterField: {\n        fontSize: '14px',\n        width: '200px',\n        height: '30px',\n        top: '-4px',\n    },\n    searchIcon: {\n        color: colors.grey700,\n        width: '20px',\n        height: '20px',\n    },\n};\n\nexport class Filter extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            value: DEFAULT_STATE_DASHBOARDS_FILTER_NAME,\n        };\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setState({\n            value: nextProps.name,\n        });\n    }\n\n    setFilterValue = event => {\n        event.preventDefault();\n\n        this.props.onChangeName(event.target.value);\n    };\n\n    handleKeyUp = event => {\n        switch (event.keyCode) {\n            case KEYCODE_ENTER:\n                this.props.onKeypressEnter();\n                break;\n            case KEYCODE_ESCAPE:\n                this.props.onChangeName();\n                break;\n            default:\n                break;\n        }\n    };\n\n    render() {\n        const { classes, name, onChangeName } = this.props;\n\n        const startAdornment = (\n            <InputAdornment position=\"start\">\n                <SearchIcon className={classes.searchIcon} />\n            </InputAdornment>\n        );\n\n        const endAdornment =\n            name !== '' && name !== null ? (\n                <InputAdornment position=\"end\">\n                    <ClearButton onClear={() => onChangeName()} />\n                </InputAdornment>\n            ) : null;\n\n        return (\n            <InputField\n                className={classes.filterField}\n                placeholder={i18n.t('Search for a dashboard')}\n                startAdornment={startAdornment}\n                endAdornment={endAdornment}\n                value={this.state.value}\n                onChange={this.setFilterValue}\n                onKeyUp={this.handleKeyUp}\n            />\n        );\n    }\n}\n\nFilter.propTypes = {\n    classes: PropTypes.object,\n    name: PropTypes.string,\n    onChangeName: PropTypes.func,\n    onKeypressEnter: PropTypes.func,\n};\n\nFilter.defaultProps = {\n    name: '',\n    onChangeName: Function.prototype,\n};\n\nexport default withStyles(styles)(Filter);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport ControlBar from './ControlBar';\nimport arraySort from 'd2-utilizr/lib/arraySort';\nimport PropTypes from 'prop-types';\n\nimport Chip from './DashboardItemChip';\nimport AddCircleIcon from '../../icons/AddCircle';\nimport Filter from './Filter';\nimport ShowMoreButton from './ShowMoreButton';\nimport {\n    FIRST_ROW_PADDING_HEIGHT,\n    MIN_ROW_COUNT,\n    getRowsHeight,\n    getControlBarHeight,\n    getNumRowsFromHeight,\n} from './controlBarDimensions';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { sGetAllDashboards } from '../../reducers/dashboards';\nimport { sGetFilterName } from '../../reducers/dashboardsFilter';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { acSetControlBarUserRows } from '../../actions/controlBar';\nimport { acSetFilterName } from '../../actions/dashboardsFilter';\nimport { orObject, orArray } from '../../modules/util';\nimport { apiPostControlBarRows } from '../../api/controlBar';\n\nimport classes from './styles/DashboardsBar.module.css';\n\nexport const MAX_ROW_COUNT = 10;\n\nexport class DashboardsBar extends Component {\n    state = {\n        rows: MIN_ROW_COUNT,\n    };\n\n    setInitialDashboardState = rows => {\n        this.setState({ rows, isMaxHeight: rows === MAX_ROW_COUNT });\n    };\n\n    componentDidMount() {\n        this.setInitialDashboardState(this.props.userRows);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setInitialDashboardState(nextProps.userRows);\n    }\n\n    onChangeHeight = newHeight => {\n        const adjustedHeight = newHeight - 52; // don't rush the transition to a bigger row count\n        const newRows = Math.max(\n            MIN_ROW_COUNT,\n            getNumRowsFromHeight(adjustedHeight)\n        );\n\n        if (newRows !== this.state.rows) {\n            const newRowCount = Math.min(newRows, MAX_ROW_COUNT);\n\n            this.props.onChangeHeight(newRowCount);\n        }\n    };\n\n    onEndDrag = () => {\n        return apiPostControlBarRows(this.state.rows);\n    };\n\n    onToggleMaxHeight = () => {\n        const rows =\n            this.state.rows === MAX_ROW_COUNT\n                ? this.props.userRows\n                : MAX_ROW_COUNT;\n\n        this.setState({ rows, isMaxHeight: !this.state.isMaxHeight });\n    };\n\n    onSelectDashboard = () => {\n        this.props.history.push(`/${this.props.dashboards[0].id}`);\n    };\n\n    render() {\n        const { dashboards, name, selectedId, onChangeFilterName } = this.props;\n\n        const rowCount = this.state.isMaxHeight\n            ? MAX_ROW_COUNT\n            : this.state.rows;\n        const controlBarHeight = getControlBarHeight(rowCount);\n        const contentWrapperStyle = {\n            padding: `${FIRST_ROW_PADDING_HEIGHT}px 6px 0 6px`,\n            overflowY: this.state.isMaxHeight ? 'auto' : 'hidden',\n            height: getRowsHeight(rowCount) + FIRST_ROW_PADDING_HEIGHT,\n        };\n\n        return (\n            <ControlBar\n                height={controlBarHeight}\n                onChangeHeight={this.onChangeHeight}\n                onEndDrag={this.onEndDrag}\n                editMode={false}\n            >\n                <div style={contentWrapperStyle}>\n                    <div className={classes.leftControls}>\n                        <Link\n                            style={{\n                                display: 'inline-block',\n                                textDecoration: 'none',\n                                marginRight: 10,\n                                position: 'relative',\n                                top: '2px',\n                            }}\n                            to={'/new'}\n                        >\n                            <AddCircleIcon />\n                        </Link>\n                        <Filter\n                            name={name}\n                            onChangeName={onChangeFilterName}\n                            onKeypressEnter={this.onSelectDashboard}\n                        />\n                    </div>\n                    {orArray(dashboards).map(dashboard => (\n                        <Chip\n                            key={dashboard.id}\n                            label={dashboard.displayName}\n                            starred={dashboard.starred}\n                            dashboardId={dashboard.id}\n                            selected={dashboard.id === selectedId}\n                        />\n                    ))}\n                </div>\n                <ShowMoreButton\n                    onClick={this.onToggleMaxHeight}\n                    isMaxHeight={this.state.isMaxHeight}\n                    disabled={this.props.userRows === MAX_ROW_COUNT}\n                />\n            </ControlBar>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    dashboards: sGetAllDashboards(state),\n    name: sGetFilterName(state),\n    userRows: sGetControlBarUserRows(state),\n    selectedId: sGetSelectedId(state),\n});\n\nconst mapDispatchToProps = {\n    onChangeHeight: acSetControlBarUserRows,\n    onChangeFilterName: acSetFilterName,\n};\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const dashboards = Object.values(orObject(stateProps.dashboards));\n    const displayDashboards = arraySort(\n        dashboards.filter(d =>\n            d.displayName.toLowerCase().includes(stateProps.name.toLowerCase())\n        ),\n        'ASC',\n        'displayName'\n    );\n\n    return {\n        ...stateProps,\n        ...ownProps,\n        ...dispatchProps,\n        dashboards: [\n            ...displayDashboards.filter(d => d.starred),\n            ...displayDashboards.filter(d => !d.starred),\n        ],\n    };\n};\n\nDashboardsBar.propTypes = {\n    dashboards: PropTypes.array,\n    history: PropTypes.object,\n    name: PropTypes.string,\n    selectedId: PropTypes.string,\n    userRows: PropTypes.number,\n    onChangeFilterName: PropTypes.func,\n    onChangeHeight: PropTypes.func,\n};\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps,\n        mergeProps\n    )(DashboardsBar)\n);\n","import {\n    SET_DASHBOARDS_FILTER_NAME,\n    SET_DASHBOARDS_FILTER_OWNER,\n    SET_DASHBOARDS_FILTER_ORDER,\n} from '../reducers/dashboardsFilter';\n\n// actions\n\nexport const acSetFilterName = value => ({\n    type: SET_DASHBOARDS_FILTER_NAME,\n    value,\n});\n\nexport const acSetFilterOwner = value => ({\n    type: SET_DASHBOARDS_FILTER_OWNER,\n    value,\n});\n\nexport const acSetFilterOrder = value => ({\n    type: SET_DASHBOARDS_FILTER_ORDER,\n    value,\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport {\n    getTopOffset,\n    MIN_ROW_COUNT,\n} from '../ControlBar/controlBarDimensions';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\n\nconst DashboardVerticalOffset = props => {\n    const rows = props.editMode ? MIN_ROW_COUNT : props.userRows;\n    const marginTop = getTopOffset(rows);\n\n    return <div className=\"page-container-top-margin\" style={{ marginTop }} />;\n};\n\nconst mapStateToProps = state => ({\n    userRows: sGetControlBarUserRows(state),\n});\n\nDashboardVerticalOffset.propTypes = {\n    editMode: PropTypes.bool,\n    userRows: PropTypes.number,\n};\n\nexport default connect(mapStateToProps)(DashboardVerticalOffset);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { MenuItem, colors } from '@dhis2/ui-core';\n\nconst HeaderMenuItem = ({ title }) => (\n    <MenuItem\n        dense\n        key={title}\n        disabled\n        label={\n            <span style={{ color: colors.grey800, fontWeight: '600' }}>\n                {title}\n            </span>\n        }\n    />\n);\n\nHeaderMenuItem.propTypes = {\n    title: PropTypes.string.isRequired,\n};\n\nexport default HeaderMenuItem;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nconst LaunchIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"12\"\n        height=\"12\"\n        fill={colors.grey600}\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z\" />\n    </svg>\n);\n\nLaunchIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default LaunchIcon;\n","import React from 'react';\nimport { MenuItem, colors } from '@dhis2/ui-core';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport { visTypeIcons } from '@dhis2/analytics';\n\nimport { getItemIcon, VISUALIZATION } from '../../modules/itemTypes';\nimport LaunchIcon from '../../icons/Launch';\n\nimport classes from './styles/ContentMenuItem.module.css';\n\nconst LaunchLink = ({ url }) => (\n    <a\n        onClick={e => e.stopPropagation()}\n        className={classes.launchLink}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        href={url}\n    >\n        <LaunchIcon />\n    </a>\n);\n\nLaunchLink.propTypes = {\n    url: PropTypes.string,\n};\n\nconst InsertButton = () => (\n    <button className={classes.buttonInsert}>{i18n.t('Insert')}</button>\n);\n\nconst ContentMenuItem = ({ type, name, onInsert, url, visType }) => {\n    const ItemIcon = getItemIcon(type);\n\n    const renderedItemIcon =\n        type === VISUALIZATION ? (\n            visTypeIcons[visType]\n        ) : (\n            <ItemIcon style={{ fill: colors.grey600 }} />\n        );\n\n    return (\n        <MenuItem\n            dense\n            onClick={onInsert}\n            label={\n                <div className={classes.menuItem}>\n                    <div className={classes.label}>\n                        <span style={{ marginRight: '6px' }}>\n                            {renderedItemIcon}\n                        </span>\n                        <span>{name}</span>\n                        {url ? <LaunchLink url={url} /> : null}\n                    </div>\n                    <InsertButton />\n                </div>\n            }\n        />\n    );\n};\n\nContentMenuItem.propTypes = {\n    name: PropTypes.string,\n    type: PropTypes.string,\n    url: PropTypes.string,\n    visType: PropTypes.string,\n    onInsert: PropTypes.func,\n};\n\nexport default ContentMenuItem;\n","import i18n from '@dhis2/d2-i18n';\nimport {\n    spacerContent,\n    VISUALIZATION,\n    MAP,\n    EVENT_CHART,\n    EVENT_REPORT,\n    USERS,\n    REPORTS,\n    RESOURCES,\n    APP,\n    MESSAGES,\n    TEXT,\n    SPACER,\n} from '../../modules/itemTypes';\n\nexport const singleItems = [\n    {\n        id: 'additional',\n        header: i18n.t('Additional items'),\n        items: [\n            {\n                type: TEXT,\n                name: i18n.t('Text box'),\n                content: '',\n            },\n            {\n                type: MESSAGES,\n                name: i18n.t('Messages'),\n                content: 'true',\n            },\n            {\n                type: SPACER,\n                name: i18n.t('Spacer'),\n                content: spacerContent,\n            },\n        ],\n    },\n];\n\n// categorizedItems are grouped in the item selector menu\nexport const categorizedItems = [\n    VISUALIZATION,\n    MAP,\n    EVENT_REPORT,\n    EVENT_CHART,\n    USERS,\n    REPORTS,\n    RESOURCES,\n    APP,\n];\n\n// listItemTypes are included in a single dashboard item\nexport const listItemTypes = [REPORTS, RESOURCES, USERS];\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { MenuItem, Divider } from '@dhis2/ui-core';\n\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\n\nimport { tAddListItemContent } from './actions';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\nimport { getItemUrl, APP, VISUALIZATION } from '../../modules/itemTypes';\nimport { categorizedItems, listItemTypes } from './selectableItems';\n\nimport classes from './styles/CategorizedMenuGroup.module.css';\n\nclass CategorizedMenuGroup extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seeMore: false,\n        };\n    }\n\n    addItem = item => () => {\n        const { type, acAddDashboardItem, tAddListItemContent } = this.props;\n\n        if (type === APP) {\n            acAddDashboardItem({ type, content: item.key });\n        } else {\n            const newItem = {\n                id: item.id,\n                name: item.displayName || item.name,\n            };\n\n            if (listItemTypes.includes(type)) {\n                tAddListItemContent(type, newItem);\n            } else {\n                acAddDashboardItem({ type, content: newItem });\n            }\n        }\n    };\n\n    toggleSeeMore = () => {\n        this.setState({ seeMore: !this.state.seeMore });\n\n        this.props.onChangeItemsLimit(this.props.type);\n    };\n\n    render() {\n        const { title, type, items, hasMore } = this.props;\n        return (\n            <Fragment>\n                <HeaderMenuItem title={title} />\n                {items.map(item => {\n                    const itemUrl = getItemUrl(type, item, this.context.d2);\n                    return (\n                        <ContentMenuItem\n                            key={item.id || item.key}\n                            type={type}\n                            visType={type === VISUALIZATION ? item.type : type}\n                            name={item.displayName || item.name}\n                            onInsert={this.addItem(item)}\n                            url={itemUrl}\n                        />\n                    );\n                })}\n                {hasMore ? (\n                    <MenuItem\n                        dense\n                        key={`showmore${title}`}\n                        onClick={this.toggleSeeMore}\n                        label={\n                            <button className={classes.showMoreButton}>\n                                {this.state.seeMore\n                                    ? i18n.t('Show fewer')\n                                    : i18n.t('Show more')}\n                            </button>\n                        }\n                    />\n                ) : null}\n                <Divider margin=\"8px 0px\" />\n            </Fragment>\n        );\n    }\n}\n\nCategorizedMenuGroup.propTypes = {\n    items: PropTypes.array.isRequired,\n    title: PropTypes.string.isRequired,\n    type: PropTypes.oneOf(categorizedItems).isRequired,\n    onChangeItemsLimit: PropTypes.func.isRequired,\n    acAddDashboardItem: PropTypes.func,\n    hasMore: PropTypes.bool,\n    tAddListItemContent: PropTypes.func,\n};\n\nCategorizedMenuGroup.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nexport default connect(\n    null,\n    {\n        acAddDashboardItem,\n        tAddListItemContent,\n    }\n)(CategorizedMenuGroup);\n","import { sGetEditDashboardRoot } from '../../reducers/editDashboard';\nimport { itemTypeMap } from '../../modules/itemTypes';\nimport {\n    acAddDashboardItem,\n    acUpdateDashboardItem,\n} from '../../actions/editDashboard';\n\nexport const tAddListItemContent = (type, content) => (dispatch, getState) => {\n    const state = getState();\n    const listItemType = itemTypeMap[type].propName;\n    const dashboardItems = sGetEditDashboardRoot(state).dashboardItems;\n    const dashboardItemIndex = dashboardItems.findIndex(\n        item => item.type === type\n    );\n    let dashboardItem;\n\n    // Reports/Resources/Users dashboard item type already present in dashboard\n    if (dashboardItemIndex > -1) {\n        dashboardItem = dashboardItems[dashboardItemIndex];\n        dashboardItem[listItemType].push(content);\n\n        dispatch(acUpdateDashboardItem(dashboardItem));\n    } else {\n        dashboardItem = {\n            type: type,\n            content: [content],\n        };\n\n        dispatch(acAddDashboardItem(dashboardItem));\n    }\n};\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\n\nexport const SinglesMenuGroup = ({ acAddDashboardItem, category }) => {\n    const addToDashboard = ({ type, content }) => () => {\n        acAddDashboardItem({ type, content });\n    };\n\n    return (\n        <Fragment>\n            <HeaderMenuItem title={category.header} />\n            {category.items.map(item => (\n                <ContentMenuItem\n                    key={item.type}\n                    type={item.type}\n                    name={item.name}\n                    onInsert={addToDashboard(item)}\n                />\n            ))}\n        </Fragment>\n    );\n};\n\nSinglesMenuGroup.propTypes = {\n    acAddDashboardItem: PropTypes.func,\n    category: PropTypes.object,\n};\n\nexport default connect(\n    null,\n    { acAddDashboardItem }\n)(SinglesMenuGroup);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport Popover from '@material-ui/core/Popover';\nimport { InputField, Menu } from '@dhis2/ui-core';\n\nimport CategorizedMenuGroup from './CategorizedMenuGroup';\nimport SinglesMenuGroup from './SinglesMenuGroup';\nimport { singleItems, categorizedItems } from './selectableItems';\nimport { itemTypeMap, getDefaultItemCount } from '../../modules/itemTypes';\n\nimport './styles/ItemSelector.css';\n\nconst ItemSearchField = props => (\n    <InputField\n        name=\"Dashboard item search\"\n        label={i18n.t('Search for items to add to this dashboard')}\n        type=\"text\"\n        onChange={props.onChange}\n        onFocus={props.onFocus}\n        value={props.value}\n    />\n);\n\nclass ItemSelector extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n            open: false,\n            maxOptions: new Set(),\n            items: undefined,\n            filter: '',\n        };\n    }\n\n    closeList = () => {\n        this.setState({ open: false, filter: '' });\n    };\n\n    openList = (_, event) => {\n        this.fetchItems();\n\n        this.setState({\n            anchorEl: event.currentTarget,\n            open: true,\n        });\n    };\n\n    setFilter = (_, event) => {\n        this.setState({ filter: event.target.value }, this.fetchItems);\n    };\n\n    getCategorizedMenuGroups = () =>\n        categorizedItems\n            .filter(type => {\n                const itemType = itemTypeMap[type];\n                return (\n                    this.state.items && this.state.items[itemType.endPointName]\n                );\n            })\n            .map(type => {\n                const itemType = itemTypeMap[type];\n                const itemCount = getDefaultItemCount(type);\n                const allItems = this.state.items[itemType.endPointName];\n                const hasMore = allItems.length > itemCount;\n                const items = this.state.maxOptions.has(itemType.id)\n                    ? allItems\n                    : allItems.slice(0, itemCount);\n\n                return (\n                    <CategorizedMenuGroup\n                        key={type}\n                        type={type}\n                        title={itemType.pluralTitle}\n                        items={items}\n                        onChangeItemsLimit={this.fetchItems}\n                        hasMore={hasMore}\n                    />\n                );\n            });\n\n    getSinglesMenuGroups = () =>\n        singleItems.map(category => (\n            <SinglesMenuGroup key={category.id} category={category} />\n        ));\n\n    getMenuGroups = () =>\n        this.getCategorizedMenuGroups().concat(this.getSinglesMenuGroups());\n\n    fetchItems = async type => {\n        if (type) {\n            const maxOptions = this.state.maxOptions;\n\n            if (maxOptions.has(type)) {\n                maxOptions.delete(type);\n            } else {\n                maxOptions.add(type);\n            }\n\n            this.setState({ maxOptions });\n        } else {\n            this.setState({\n                maxOptions: new Set(),\n            });\n        }\n\n        let queryString = '?count=11';\n        if ([...this.state.maxOptions.values()].length) {\n            queryString +=\n                '&max=' + [...this.state.maxOptions.values()].join('&max=');\n        }\n\n        const filter = this.state.filter ? `/${this.state.filter}` : '';\n\n        this.context.d2.Api.getApi()\n            .get(`dashboards/q${filter}${queryString}`)\n            .then(response => this.setState({ items: response }))\n            .catch(console.error);\n    };\n\n    render() {\n        return (\n            <Fragment>\n                <ItemSearchField\n                    value={this.state.filter}\n                    onChange={this.setFilter}\n                    onFocus={this.openList}\n                />\n                <Popover\n                    className=\"dashboard-item-selector\"\n                    open={this.state.open}\n                    onClose={this.closeList}\n                    anchorEl={this.state.anchorEl}\n                    anchorOrigin={{ horizontal: 'left', vertical: 'bottom' }}\n                    transformOrigin={{ horizontal: 'left', vertical: 'top' }}\n                    style={{ height: '70vh' }}\n                    PaperProps={{ style: { width: '700px' } }}\n                    disableAutoFocus={true}\n                    disableEnforceFocus={true}\n                    disableRestoreFocus={true}\n                >\n                    <Menu maxWidth={'700px'}>{this.getMenuGroups()}</Menu>\n                </Popover>\n            </Fragment>\n        );\n    }\n}\n\nItemSearchField.propTypes = {\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n    onFocus: PropTypes.func,\n};\n\nItemSelector.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nexport default ItemSelector;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport i18n from '@dhis2/d2-i18n';\nimport { InputField, TextAreaField } from '@dhis2/ui-core';\n\nimport ItemSelector from '../ItemSelector/ItemSelector';\nimport {\n    acSetDashboardTitle,\n    acSetDashboardDescription,\n} from '../../actions/editDashboard';\nimport { orObject } from '../../modules/util';\nimport { sGetEditDashboardRoot } from '../../reducers/editDashboard';\n\nconst styles = {\n    section: { display: 'flex', justifyContent: 'space-between' },\n    titleDescription: {\n        flex: '3',\n        marginRight: '50px',\n    },\n    title: {\n        display: 'block',\n        clear: 'both',\n    },\n    description: {\n        display: 'block',\n        clear: 'both',\n        marginTop: '15px',\n    },\n    underline: {\n        '&::before': {\n            borderBottom: `none`,\n        },\n        '&:hover::before': {\n            borderBottom: `none!important`,\n        },\n    },\n    input: {\n        backgroundColor: 'rgba(0, 0, 10, 0.05)',\n        borderRadius: '4px',\n        width: '100%',\n        '&:hover': {\n            backgroundColor: 'rgba(0, 0, 10, 0.08)',\n        },\n    },\n    itemSelector: {\n        flex: '2',\n        position: 'relative',\n    },\n};\n\nexport const EditTitleBar = ({\n    name,\n    description,\n    onChangeTitle,\n    onChangeDescription,\n    classes,\n}) => {\n    const updateTitle = (_, e) => {\n        onChangeTitle(e.target.value);\n    };\n\n    const updateDescription = (_, e) => {\n        onChangeDescription(e.target.value);\n    };\n\n    return (\n        <section className={classes.section}>\n            <div className={classes.titleDescription}>\n                <InputField\n                    className={classes.title}\n                    name=\"Dashboard title input\"\n                    label={i18n.t('Dashboard title')}\n                    type=\"text\"\n                    onChange={updateTitle}\n                    value={name}\n                />\n                <TextAreaField\n                    className={classes.description}\n                    name=\"Dashboard description input\"\n                    label={i18n.t('Dashboard description')}\n                    onChange={updateDescription}\n                    value={description}\n                />\n            </div>\n            <div className={classes.itemSelector}>\n                <ItemSelector />\n            </div>\n        </section>\n    );\n};\n\nconst mapStateToProps = state => {\n    const selectedDashboard = orObject(sGetEditDashboardRoot(state));\n\n    return {\n        name: selectedDashboard.name,\n        description: selectedDashboard.description,\n    };\n};\n\nconst mapDispatchToProps = {\n    onChangeTitle: acSetDashboardTitle,\n    onChangeDescription: acSetDashboardDescription,\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(EditTitleBar));\n\nEditTitleBar.propTypes = {\n    onChangeDescription: PropTypes.func.isRequired,\n    onChangeTitle: PropTypes.func.isRequired,\n    classes: PropTypes.object,\n    description: PropTypes.string,\n    name: PropTypes.string,\n};\n\nEditTitleBar.defaultProps = {\n    name: '',\n    description: '',\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Button } from '@dhis2/ui-core';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport i18n from '@dhis2/d2-i18n';\n\nimport {\n    PeriodDimension,\n    DynamicDimension,\n    OrgUnitDimension,\n    DIMENSION_ID_PERIOD,\n    DIMENSION_ID_ORGUNIT,\n} from '@dhis2/analytics';\n\nconst peId = DIMENSION_ID_PERIOD;\nconst ouId = DIMENSION_ID_ORGUNIT;\n\nclass FilterDialog extends Component {\n    onConfirm = id => () => this.props.onConfirm(id);\n\n    dialogContent() {\n        const { displayNameProperty, dimension, selectedItems } = this.props;\n        const dialogId = dimension.id;\n\n        const commonProps = {\n            d2: this.context.d2,\n            onSelect: this.props.onSelect,\n            onDeselect: this.props.onDeselect,\n            onReorder: this.props.onReorder,\n        };\n\n        switch (dialogId) {\n            case peId: {\n                return (\n                    <PeriodDimension\n                        selectedPeriods={selectedItems}\n                        {...commonProps}\n                    />\n                );\n            }\n            case ouId:\n                return (\n                    <OrgUnitDimension\n                        displayNameProperty={displayNameProperty}\n                        ouItems={selectedItems}\n                        {...commonProps}\n                    />\n                );\n            default:\n                return (\n                    <DynamicDimension\n                        selectedItems={selectedItems}\n                        dialogId={dialogId}\n                        dialogTitle={dimension.name}\n                        {...commonProps}\n                    />\n                );\n        }\n    }\n\n    render() {\n        const { dimension, onClose } = this.props;\n        const dialogId = dimension.id;\n\n        return (\n            <Dialog\n                open={!!dialogId}\n                maxWidth=\"lg\"\n                disableEnforceFocus\n                onClose={onClose}\n            >\n                {dialogId && this.dialogContent()}\n                <DialogActions>\n                    <Button kind=\"secondary\" onClick={onClose}>\n                        {i18n.t('Cancel')}\n                    </Button>\n                    <Button kind=\"primary\" onClick={this.onConfirm(dialogId)}>\n                        {i18n.t('Confirm')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nFilterDialog.propTypes = {\n    dimension: PropTypes.object,\n    displayNameProperty: PropTypes.string,\n    selectedItems: PropTypes.array,\n    onClose: PropTypes.func,\n    onConfirm: PropTypes.func,\n    onDeselect: PropTypes.func,\n    onReorder: PropTypes.func,\n    onSelect: PropTypes.func,\n};\n\nFilterDialog.contextTypes = {\n    d2: PropTypes.object,\n};\n\nexport default FilterDialog;\n","export const SET_ACTIVE_MODAL_DIMENSION = 'SET_ACTIVE_MODAL_DIMENSION';\nexport const CLEAR_ACTIVE_MODAL_DIMENSION = 'CLEAR_ACTIVE_MODAL_DIMENSION';\n\nexport const DEFAULT_STATE_ACTIVE_MODAL_DIMENSION = {};\n\nexport default (state = DEFAULT_STATE_ACTIVE_MODAL_DIMENSION, action) => {\n    switch (action.type) {\n        case SET_ACTIVE_MODAL_DIMENSION: {\n            return action.value;\n        }\n        case CLEAR_ACTIVE_MODAL_DIMENSION: {\n            return DEFAULT_STATE_ACTIVE_MODAL_DIMENSION;\n        }\n        default:\n            return state;\n    }\n};\n\nexport const sGetActiveModalDimension = state => state.activeModalDimension;\n","import {\n    SET_ACTIVE_MODAL_DIMENSION,\n    CLEAR_ACTIVE_MODAL_DIMENSION,\n} from '../reducers/activeModalDimension';\n\nexport const acSetActiveModalDimension = value => ({\n    type: SET_ACTIVE_MODAL_DIMENSION,\n    value,\n});\n\nexport const acClearActiveModalDimension = () => ({\n    type: CLEAR_ACTIVE_MODAL_DIMENSION,\n});\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Popover from '@material-ui/core/Popover';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\n\nimport i18n from '@dhis2/d2-i18n';\nimport { DimensionsPanel } from '@dhis2/analytics';\n\nimport { Button } from '@dhis2/ui-core';\nimport FilterDialog from './FilterDialog';\n\nimport { sGetSettingsDisplayNameProperty } from '../../reducers/settings';\nimport { sGetActiveModalDimension } from '../../reducers/activeModalDimension';\nimport { sGetDimensions } from '../../reducers/dimensions';\nimport { sGetFiltersKeys } from '../../reducers/itemFilters';\nimport { sGetEditItemFiltersRoot } from '../../reducers/editItemFilters';\nimport { acAddItemFilter, acRemoveItemFilter } from '../../actions/itemFilters';\nimport {\n    acRemoveEditItemFilter,\n    acSetEditItemFilters,\n} from '../../actions/editItemFilters';\nimport {\n    acClearActiveModalDimension,\n    acSetActiveModalDimension,\n} from '../../actions/activeModalDimension';\n\nclass FilterSelector extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n        };\n    }\n\n    openPanel = (_, event) => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    closePanel = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    closeDialog = () => {\n        this.setState({ anchorEl: null });\n\n        this.props.clearActiveModalDimension();\n    };\n\n    selectDimension = id => {\n        this.props.setActiveModalDimension(\n            this.props.dimensions.find(dimension => dimension.id === id)\n        );\n    };\n\n    onSelectItems = ({ dimensionId, items }) => {\n        this.props.setEditItemFilters({\n            ...this.props.selectedItems,\n            [dimensionId]: items,\n        });\n    };\n\n    onDeselectItems = ({ dimensionId, itemIdsToRemove }) => {\n        const oldList = this.props.selectedItems[dimensionId] || [];\n        const newList = oldList.filter(\n            item => !itemIdsToRemove.includes(item.id)\n        );\n\n        if (newList.length) {\n            this.props.setEditItemFilters({\n                ...this.props.selectedItems,\n                [dimensionId]: newList,\n            });\n        } else {\n            this.props.removeEditItemFilter(dimensionId);\n        }\n    };\n\n    onReorderItems = ({ dimensionId, itemIds }) => {\n        const oldList = this.props.selectedItems[dimensionId] || [];\n        const reorderedList = itemIds.map(id =>\n            oldList.find(item => item.id === id)\n        );\n\n        this.props.setEditItemFilters({\n            ...this.props.selectedItems,\n            [dimensionId]: reorderedList,\n        });\n    };\n\n    saveFilter = id => {\n        const filterItems = this.props.selectedItems[id];\n\n        if (filterItems && filterItems.length) {\n            this.props.addItemFilter({\n                id,\n                value: [...filterItems],\n            });\n        } else {\n            this.props.removeItemFilter(id);\n        }\n\n        this.closeDialog();\n    };\n\n    render() {\n        const {\n            displayNameProperty,\n            dimension,\n            dimensions,\n            selectedDimensions,\n            selectedItems,\n        } = this.props;\n\n        return (\n            <Fragment>\n                <Button onClick={this.openPanel}>\n                    {i18n.t('Add filter')}\n                    <ArrowDropDownIcon />\n                </Button>\n                <Popover\n                    open={Boolean(this.state.anchorEl)}\n                    anchorEl={this.state.anchorEl}\n                    anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\n                    onClose={this.closePanel}\n                    style={{ height: '100%' }}\n                >\n                    <DimensionsPanel\n                        style={{ width: '320px' }}\n                        dimensions={dimensions}\n                        onDimensionClick={this.selectDimension}\n                        selectedIds={selectedDimensions}\n                    />\n                </Popover>\n                {dimension ? (\n                    <FilterDialog\n                        displayNameProperty={displayNameProperty}\n                        dimension={dimension}\n                        selectedItems={selectedItems[dimension.id] || []}\n                        onSelect={this.onSelectItems}\n                        onDeselect={this.onDeselectItems}\n                        onReorder={this.onReorderItems}\n                        onClose={this.closeDialog}\n                        onConfirm={this.saveFilter}\n                    />\n                ) : null}\n            </Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    displayNameProperty: sGetSettingsDisplayNameProperty(state),\n    dimension: sGetActiveModalDimension(state),\n    dimensions: sGetDimensions(state),\n    selectedDimensions: sGetFiltersKeys(state),\n    selectedItems: sGetEditItemFiltersRoot(state),\n});\n\nFilterSelector.propTypes = {\n    addItemFilter: PropTypes.func,\n    clearActiveModalDimension: PropTypes.func,\n    dimension: PropTypes.object,\n    dimensions: PropTypes.array,\n    displayNameProperty: PropTypes.string,\n    removeEditItemFilter: PropTypes.func,\n    removeItemFilter: PropTypes.func,\n    selectedDimensions: PropTypes.array,\n    selectedItems: PropTypes.object,\n    setActiveModalDimension: PropTypes.func,\n    setEditItemFilters: PropTypes.func,\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        clearActiveModalDimension: acClearActiveModalDimension,\n        setActiveModalDimension: acSetActiveModalDimension,\n        addItemFilter: acAddItemFilter,\n        removeItemFilter: acRemoveItemFilter,\n        removeEditItemFilter: acRemoveEditItemFilter,\n        setEditItemFilters: acSetEditItemFilters,\n    }\n)(FilterSelector);\n","import React, { Component } from 'react';\nimport InfoOutlineIcon from '@material-ui/icons/InfoOutlined';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nclass Info extends Component {\n    show = false;\n\n    toggle() {\n        this.show = !this.show;\n        return this.show;\n    }\n\n    render() {\n        return (\n            <div onClick={() => this.props.onClick(this.toggle())}>\n                <InfoOutlineIcon style={{ fill: colors.grey600 }} />\n            </div>\n        );\n    }\n}\n\nInfo.propTypes = {\n    onClick: PropTypes.func,\n};\n\nexport default Info;\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport SharingDialog from '@dhis2/d2-ui-sharing-dialog';\nimport Star from '@material-ui/icons/Star';\nimport StarBorder from '@material-ui/icons/StarBorder';\n\nimport { orObject } from '../../modules/util';\nimport { tStarDashboard } from '../../actions/dashboards';\nimport { acSetSelectedShowDescription } from '../../actions/selected';\nimport FilterSelector from '../ItemFilter/FilterSelector';\nimport { Button } from '@dhis2/ui-core';\nimport Info from './Info';\nimport {\n    sGetSelectedId,\n    sGetSelectedShowDescription,\n} from '../../reducers/selected';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n} from '../../reducers/dashboards';\nimport { colors } from '@dhis2/ui-core';\n\nconst NO_DESCRIPTION = i18n.t('No description');\n\nconst styles = {\n    actions: {\n        display: 'flex',\n        alignItems: 'center',\n        marginLeft: '20px',\n    },\n    starIcon: {\n        fill: colors.grey600,\n    },\n    textButton: {\n        minWidth: '30px',\n        top: '1px',\n    },\n    editLink: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        textDecoration: 'none',\n        marginRight: '4px',\n    },\n    titleBar: {\n        display: 'flex',\n        alignItems: 'flex-start',\n    },\n    titleBarIcon: {\n        marginLeft: 5,\n        position: 'relative',\n        top: 1,\n        cursor: 'pointer',\n    },\n};\n\nclass ViewTitleBar extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            sharingDialogIsOpen: false,\n        };\n    }\n\n    toggleSharingDialog = () =>\n        this.setState({ sharingDialogIsOpen: !this.state.sharingDialogIsOpen });\n\n    render() {\n        const {\n            id,\n            name,\n            description,\n            access,\n            style,\n            showDescription,\n            starred,\n            onStarClick,\n            onInfoClick,\n            classes,\n        } = this.props;\n\n        const titleStyle = Object.assign({}, style.title, {\n            cursor: 'default',\n            userSelect: 'text',\n            top: '7px',\n        });\n\n        const StarIcon = starred ? Star : StarBorder;\n\n        return (\n            <Fragment>\n                <div className={classes.titleBar}>\n                    <span style={titleStyle}>{name}</span>\n                    <div className={classes.actions}>\n                        <div\n                            className={classes.titleBarIcon}\n                            onClick={onStarClick}\n                        >\n                            <StarIcon className={classes.starIcon} />\n                        </div>\n                        <div className={classes.titleBarIcon}>\n                            <Info onClick={onInfoClick} />\n                        </div>\n                        <div style={{ marginLeft: '10px' }}>\n                            {access.update ? (\n                                <Link\n                                    className={classes.editLink}\n                                    to={`/${id}/edit`}\n                                >\n                                    <Button>{i18n.t('Edit')}</Button>\n                                </Link>\n                            ) : null}\n                            {access.manage ? (\n                                <span style={{ marginRight: '4px' }}>\n                                    <Button onClick={this.toggleSharingDialog}>\n                                        {i18n.t('Share')}\n                                    </Button>\n                                </span>\n                            ) : null}\n                            <span style={{ marginRight: '4px' }}>\n                                <FilterSelector />\n                            </span>\n                        </div>\n                    </div>\n                </div>\n                {showDescription ? (\n                    <div\n                        className=\"dashboard-description\"\n                        style={Object.assign(\n                            { paddingTop: '5px', paddingBottom: '5px' },\n                            style.description,\n                            !description ? { color: '#888' } : {}\n                        )}\n                    >\n                        {description || NO_DESCRIPTION}\n                    </div>\n                ) : null}\n                {id ? (\n                    <SharingDialog\n                        d2={this.context.d2}\n                        id={id}\n                        type=\"dashboard\"\n                        open={this.state.sharingDialogIsOpen}\n                        onRequestClose={this.toggleSharingDialog}\n                    />\n                ) : null}\n            </Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    const id = sGetSelectedId(state);\n    const dashboard = orObject(sGetDashboardById(state, id));\n\n    return {\n        id,\n        name: dashboard.displayName,\n        description: dashboard.displayDescription,\n        dashboardItems: sGetDashboardItems(state),\n        showDescription: sGetSelectedShowDescription(state),\n        starred: dashboard.starred,\n        access: orObject(dashboard.access),\n    };\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const { id, starred, showDescription } = stateProps;\n    const { dispatch } = dispatchProps;\n\n    return {\n        ...stateProps,\n        ...ownProps,\n        onStarClick: () => dispatch(tStarDashboard(id, !starred)),\n        onInfoClick: () =>\n            dispatch(acSetSelectedShowDescription(!showDescription)),\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    null,\n    mergeProps\n)(withStyles(styles)(ViewTitleBar));\n\nViewTitleBar.propTypes = {\n    access: PropTypes.object,\n    classes: PropTypes.object,\n    description: PropTypes.string,\n    id: PropTypes.string,\n    name: PropTypes.string,\n    showDescription: PropTypes.bool,\n    starred: PropTypes.bool,\n    style: PropTypes.object,\n    onInfoClick: PropTypes.func,\n    onStarClick: PropTypes.func,\n};\n\nViewTitleBar.defaultProps = {\n    name: '',\n    description: '',\n    starred: false,\n    showDescription: false,\n    onInfoClick: null,\n};\n\nViewTitleBar.contextTypes = {\n    d2: PropTypes.object,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { colors } from '@dhis2/ui-core';\nimport EditTitleBar from './EditTitleBar';\nimport ViewTitleBar from './ViewTitleBar';\n\nimport './TitleBar.css';\n\nconst style = {\n    title: {\n        position: 'relative',\n        fontSize: 21,\n        fontWeight: 500,\n        color: colors.black,\n        minWidth: 50,\n    },\n    description: {\n        fontSize: 14,\n        color: colors.grey800,\n    },\n};\n\nconst TitleBar = ({ edit }) => {\n    return (\n        <div\n            className=\"titlebar-wrapper\"\n            style={{\n                padding: '20px 15px 5px 10px',\n            }}\n        >\n            {edit ? (\n                <EditTitleBar style={style} />\n            ) : (\n                <ViewTitleBar style={style} />\n            )}\n        </div>\n    );\n};\n\nTitleBar.propTypes = {\n    edit: PropTypes.bool,\n};\n\nexport default TitleBar;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport i18n from '@dhis2/d2-i18n';\n\nimport * as pluginManager from './plugin';\nimport { getBaseUrl, orObject } from '../../../modules/util';\nimport { getGridItemDomId } from '../../ItemGrid/gridUtil';\n\nconst pluginCredentials = d2 => {\n    return {\n        baseUrl: getBaseUrl(d2),\n        auth: d2.Api.getApi().defaultHeaders.Authorization,\n    };\n};\n\nclass DefaultPlugin extends Component {\n    pluginCredentials = null;\n\n    constructor(props, context) {\n        super(props);\n\n        this.d2 = context.d2;\n    }\n\n    shouldPluginReload = prevProps => {\n        // TODO - fix this hack, to handle bug with multiple\n        // rerendering while switching between dashboards.\n        //\n        // To determine if the rendering is happening because of a\n        // dashboard switch, check if the item reference has changed.\n        const reloadAllowed = this.props.item === prevProps.item;\n\n        const filtersChanged = prevProps.itemFilters !== this.props.itemFilters;\n        const vis = orObject(this.props.visualization);\n        const prevVis = orObject(prevProps.visualization);\n        const visChanged =\n            vis.id !== prevVis.id || vis.activeType !== prevVis.activeType;\n\n        return reloadAllowed && (visChanged || filtersChanged);\n    };\n\n    reloadPlugin = prevProps => {\n        if (\n            pluginManager.pluginIsAvailable(\n                this.props.item,\n                this.props.visualization\n            ) &&\n            this.shouldPluginReload(prevProps)\n        ) {\n            const prevVis = orObject(prevProps.visualization);\n            const currentVis = this.props.visualization;\n\n            const useActiveType =\n                currentVis.activeType !== prevVis.activeType ||\n                currentVis.activeType !== this.props.item.type;\n\n            if (\n                useActiveType ||\n                this.props.itemFilters !== prevProps.itemFilters\n            ) {\n                pluginManager.unmount(\n                    this.props.item,\n                    prevVis.activeType || this.props.item.type\n                );\n\n                pluginManager.load(this.props.item, this.props.visualization, {\n                    credentials: this.pluginCredentials,\n                    activeType: useActiveType ? currentVis.activeType : null,\n                });\n            }\n        }\n    };\n\n    componentDidMount() {\n        this.pluginCredentials = pluginCredentials(this.d2);\n\n        if (\n            pluginManager.pluginIsAvailable(\n                this.props.item,\n                this.props.visualization\n            )\n        ) {\n            pluginManager.load(this.props.item, this.props.visualization, {\n                credentials: this.pluginCredentials,\n                activeType: !this.props.editMode ? this.getActiveType() : null,\n            });\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        this.reloadPlugin(prevProps);\n    }\n\n    getActiveType = () =>\n        this.props.visualization.activeType || this.props.item.type;\n\n    render() {\n        const { classes, item, visualization, style } = this.props;\n        const pluginIsAvailable = pluginManager.pluginIsAvailable(\n            item,\n            visualization\n        );\n\n        return pluginIsAvailable ? (\n            <div id={getGridItemDomId(item.id)} style={style} />\n        ) : (\n            <div className={classes.textDiv}>\n                {i18n.t('Unable to load the plugin for this item')}\n            </div>\n        );\n    }\n}\n\nDefaultPlugin.contextTypes = {\n    d2: PropTypes.object,\n};\n\nDefaultPlugin.propTypes = {\n    classes: PropTypes.object,\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    itemFilters: PropTypes.object,\n    style: PropTypes.object,\n    visualization: PropTypes.object,\n};\n\nDefaultPlugin.defaultProps = {\n    style: {},\n    item: {},\n    itemFilters: {},\n    visualization: {},\n};\n\nexport default DefaultPlugin;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\n\nexport const ThreeDots = () => (\n    <svg\n        height=\"18\"\n        viewBox=\"0 0 18 18\"\n        width=\"18\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n    >\n        <path\n            d=\"m4 7.5c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm10 0c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm-5 0c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5z\"\n            fill=\"#6e7a8a\"\n        />\n    </svg>\n);\n\nexport const SpeechBubble = () => (\n    <svg\n        height=\"20\"\n        viewBox=\"0 0 20 20\"\n        width=\"20\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        style={{ margin: '3px 2px 0 2px' }} // Temporary fix for the misaligned icon, should be removed once the icon is replaced\n    >\n        <path\n            d=\"m20 2h-16c-1.1 0-1.99.9-1.99 2l-.01 18 4-4h14c1.1 0 2-.9 2-2v-12c0-1.1-.9-2-2-2zm-2 12h-12v-2h12zm0-3h-12v-2h12zm0-3h-12v-2h12z\"\n            fill=\"#6e7a8a\"\n            fillRule=\"evenodd\"\n            transform=\"translate(-2 -2)\"\n        />\n    </svg>\n);\n\nexport const Warning = () => (\n    <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        height=\"24\"\n        viewBox=\"0 0 24 24\"\n        width=\"24\"\n        fill={colors.grey600}\n    >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z\" />\n    </svg>\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Warning } from './assets/icons';\n\nimport classes from './styles/FatalErrorBoundary.module.css';\n\nclass FatalErrorBoundary extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            errorFound: false,\n        };\n    }\n    componentDidCatch(error, info) {\n        this.setState({\n            errorFound: true,\n        });\n        console.log('error: ', error);\n        console.log('info: ', info);\n    }\n    render() {\n        if (this.state.errorFound) {\n            return (\n                <p className={classes.container}>\n                    <span className={classes.icon}>\n                        <Warning />\n                    </span>\n                    <span className={classes.message}>\n                        {i18n.t(\n                            'There was a problem loading this dashboard item'\n                        )}\n                    </span>\n                </p>\n            );\n        }\n        return this.props.children;\n    }\n}\n\nFatalErrorBoundary.propTypes = {\n    children: PropTypes.node,\n};\n\nexport default FatalErrorBoundary;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { colors } from '@dhis2/ui-core';\n\nimport classes from './styles/DeleteItemButton.module.css';\n\nconst DeleteItemButton = ({ onClick }) => (\n    <button\n        type=\"button\"\n        className={classes.deleteItemButton}\n        onClick={onClick}\n        title={i18n.t(`Delete item`)}\n    >\n        <DeleteIcon style={{ fill: colors.red500 }} />\n    </button>\n);\n\nDeleteItemButton.propTypes = {\n    onClick: PropTypes.func,\n};\n\nexport default DeleteItemButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { sGetIsEditing } from '../../reducers/editDashboard';\nimport { acRemoveDashboardItem } from '../../actions/editDashboard';\nimport DeleteItemButton from './DeleteItemButton';\n\nimport classes from './styles/ItemHeader.module.css';\n\n// This is the margin-top + margin-bottom defined in the css file\nexport const HEADER_MARGIN_HEIGHT = 12;\n\nconst ItemHeader = React.forwardRef(\n    (\n        { itemId, acRemoveDashboardItem, actionButtons, title, editMode },\n        ref\n    ) => {\n        const handleDeleteItem = () => acRemoveDashboardItem(itemId);\n\n        return (\n            <div className={classes.itemHeaderWrap} ref={ref}>\n                <p className={classes.itemTitle}>{title}</p>\n                {editMode ? (\n                    <div className={classes.itemActionsWrap}>\n                        <DeleteItemButton onClick={handleDeleteItem} />\n                    </div>\n                ) : (\n                    actionButtons && (\n                        <div className={classes.itemActionsWrap}>\n                            {actionButtons}\n                        </div>\n                    )\n                )}\n            </div>\n        );\n    }\n);\n\nItemHeader.propTypes = {\n    acRemoveDashboardItem: PropTypes.func,\n    actionButtons: PropTypes.node,\n    editMode: PropTypes.bool,\n    itemId: PropTypes.string,\n    title: PropTypes.string,\n};\n\nconst mapStateToProps = state => ({\n    editMode: sGetIsEditing(state),\n});\n\nconst mapDispatchToProps = {\n    acRemoveDashboardItem,\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n    null,\n    { forwardRef: true }\n)(ItemHeader);\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n    isSingleValue,\n    isYearOverYear,\n    VIS_TYPE_GAUGE,\n    VIS_TYPE_PIE,\n} from '@dhis2/analytics';\nimport { Button, Menu, MenuItem, Divider, colors } from '@dhis2/ui-core';\nimport i18n from '@dhis2/d2-i18n';\nimport Popover from '@material-ui/core/Popover';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\nimport LaunchIcon from '@material-ui/icons/Launch';\n\nimport { ThreeDots, SpeechBubble } from './assets/icons';\nimport { pluginIsAvailable, getLink } from './plugin';\nimport {\n    CHART,\n    MAP,\n    REPORT_TABLE,\n    EVENT_CHART,\n    EVENT_REPORT,\n    isTrackerDomainType,\n    hasMapView,\n    getAppName,\n} from '../../../modules/itemTypes';\n\nconst iconFill = { fill: colors.grey600 };\n\nconst ItemHeaderButtons = props => {\n    const [anchorEl, setAnchorEl] = useState(null);\n\n    const { item, visualization, onSelectActiveType, d2, activeType } = props;\n\n    const isTrackerType = isTrackerDomainType(item.type);\n\n    const onViewTable = () => {\n        handleClose();\n        onSelectActiveType(isTrackerType ? EVENT_REPORT : REPORT_TABLE);\n    };\n\n    const onViewChart = () => {\n        handleClose();\n        onSelectActiveType(isTrackerType ? EVENT_CHART : CHART);\n    };\n\n    const onViewMap = () => {\n        handleClose();\n        onSelectActiveType(MAP);\n    };\n\n    const itemHasMapView = () => hasMapView(item.type);\n\n    const handleMenuClick = (_, event) => setAnchorEl(event.currentTarget);\n\n    const handleInterpretationClick = () => {\n        props.onToggleFooter();\n        if (anchorEl !== null) {\n            handleClose();\n        }\n    };\n\n    const handleClose = () => setAnchorEl(null);\n\n    const type = visualization.type || item.type;\n    const canViewAs =\n        !isSingleValue(type) &&\n        !isYearOverYear(type) &&\n        type !== VIS_TYPE_GAUGE &&\n        type !== VIS_TYPE_PIE;\n\n    const interpretationMenuLabel = props.activeFooter\n        ? i18n.t(`Hide interpretations and details`)\n        : i18n.t(`Show interpretations and details`);\n\n    const ViewAsMenuItems = () => (\n        <>\n            {activeType !== CHART && activeType !== EVENT_CHART && (\n                <MenuItem\n                    dense\n                    label={i18n.t('View as Chart')}\n                    onClick={onViewChart}\n                    icon={<ChartIcon style={iconFill} />}\n                />\n            )}\n            {activeType !== REPORT_TABLE && activeType !== EVENT_REPORT && (\n                <MenuItem\n                    dense\n                    label={i18n.t('View as Table')}\n                    onClick={onViewTable}\n                    icon={<TableIcon style={iconFill} />}\n                />\n            )}\n            {itemHasMapView() && activeType !== MAP && (\n                <MenuItem\n                    dense\n                    label={i18n.t('View as Map')}\n                    onClick={onViewMap}\n                    icon={<MapIcon style={iconFill} />}\n                />\n            )}\n        </>\n    );\n\n    return pluginIsAvailable(item, visualization) ? (\n        <>\n            <Button small secondary onClick={handleMenuClick}>\n                <ThreeDots />\n            </Button>\n            {anchorEl && (\n                <Popover\n                    open={Boolean(anchorEl)}\n                    onClose={handleClose}\n                    anchorEl={anchorEl}\n                >\n                    <Menu>\n                        {canViewAs && (\n                            <>\n                                <ViewAsMenuItems />\n                                <Divider />\n                            </>\n                        )}\n                        <MenuItem\n                            dense\n                            icon={<LaunchIcon style={{ fill: '#6e7a8a' }} />}\n                            label={i18n.t('Open in {{appName}} app', {\n                                appName: getAppName(item.type),\n                            })}\n                            href={getLink(item, d2)}\n                            target=\"_blank\"\n                        />\n                        <MenuItem\n                            dense\n                            icon={<SpeechBubble />}\n                            label={interpretationMenuLabel}\n                            onClick={handleInterpretationClick}\n                        />\n                    </Menu>\n                </Popover>\n            )}\n        </>\n    ) : null;\n};\n\nItemHeaderButtons.propTypes = {\n    activeFooter: PropTypes.bool,\n    activeType: PropTypes.string,\n    d2: PropTypes.object,\n    item: PropTypes.object,\n    visualization: PropTypes.object,\n    onSelectActiveType: PropTypes.func,\n    onToggleFooter: PropTypes.func,\n};\n\nexport default ItemHeaderButtons;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { colors } from '@dhis2/ui-core';\nimport { getId } from './plugin';\nimport InterpretationsComponent from '@dhis2/d2-ui-interpretations';\n\nconst style = {\n    scrollContainer: {\n        overflowY: 'auto',\n        height: '340px',\n    },\n    line: {\n        margin: '-1px 0px 0px',\n        height: '1px',\n        border: 'none',\n        backgroundColor: colors.grey100,\n    },\n};\n\nclass ItemFooter extends Component {\n    render() {\n        const objectId = getId(this.props.item);\n\n        return (\n            <div className=\"dashboard-item-footer\">\n                <hr style={style.line} />\n                <div style={style.scrollContainer}>\n                    <InterpretationsComponent\n                        d2={this.context.d2}\n                        item={this.props.item}\n                        type={this.props.item.type.toLowerCase()}\n                        id={objectId}\n                        appName=\"dashboard\"\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nItemFooter.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nItemFooter.propTypes = {\n    item: PropTypes.object.isRequired,\n};\n\nexport default ItemFooter;\n","// Note that this ignores discrepancies in 'this', so shouldn't be used with bound functions\n// This is useful instead of lodash/memoize when we only need to memoize a single value\n// Inspiration: https://github.com/alexreardon/memoize-one\n\nconst memoizeOne = fn => {\n    let lastArgs = undefined;\n    let lastValue = undefined;\n\n    return (...args) => {\n        if (\n            lastArgs &&\n            args.length === lastArgs.length &&\n            args.every((arg, i) => arg === lastArgs[i])\n        ) {\n            return lastValue;\n        }\n        lastArgs = args;\n        lastValue = fn(...args);\n        return lastValue;\n    };\n};\n\nexport default memoizeOne;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst styles = {\n    progress: {\n        margin: 16,\n        maxWidth: 200,\n        textAlign: 'center',\n        alignSelf: 'center',\n    },\n    outer: {\n        display: 'flex',\n        justifyContent: 'center',\n        height: '100%',\n    },\n};\n\nfunction CircularIndeterminate(props) {\n    const { classes } = props;\n    return (\n        <div className={classes.outer}>\n            <CircularProgress className={classes.progress} />\n        </div>\n    );\n}\n\nCircularIndeterminate.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(CircularIndeterminate);\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport uniqueId from 'lodash/uniqueId';\nimport VisualizationPlugin from '@dhis2/data-visualizer-plugin';\nimport i18n from '@dhis2/d2-i18n';\n\nimport DefaultPlugin from './DefaultPlugin';\nimport FatalErrorBoundary from './FatalErrorBoundary';\nimport ItemHeader, { HEADER_MARGIN_HEIGHT } from '../ItemHeader';\nimport ItemHeaderButtons from './ItemHeaderButtons';\nimport ItemFooter from './ItemFooter';\nimport * as pluginManager from './plugin';\nimport { sGetVisualization } from '../../../reducers/visualizations';\nimport { sGetItemFiltersRoot } from '../../../reducers/itemFilters';\nimport {\n    acAddVisualization,\n    acSetActiveVisualizationType,\n} from '../../../actions/visualizations';\nimport {\n    VISUALIZATION,\n    MAP,\n    CHART,\n    REPORT_TABLE,\n} from '../../../modules/itemTypes';\nimport memoizeOne from '../../../modules/memoizeOne';\n\nimport { colors } from '@dhis2/ui-core';\nimport { getVisualizationConfig } from './plugin';\nimport LoadingMask from './LoadingMask';\nimport { ITEM_CONTENT_PADDING_BOTTOM } from '../../ItemGrid/ItemGrid';\n\nconst styles = {\n    icon: {\n        width: 16,\n        height: 16,\n        marginLeft: 3,\n        cursor: 'pointer',\n        fill: colors.grey600,\n    },\n    title: {\n        overflow: 'hidden',\n        maxWidth: '85%',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n    },\n    textDiv: {\n        fontSize: '14px',\n        fontStretch: 'normal',\n        padding: '10px',\n        lineHeight: '20px',\n    },\n    loadingCover: {\n        position: 'absolute',\n        height: '100%',\n        width: '100%',\n        left: 0,\n        top: 0,\n        zIndex: 100,\n        background: '#ffffffab',\n    },\n};\n\nexport class Item extends Component {\n    state = {\n        showFooter: false,\n        configLoaded: false,\n        pluginIsLoaded: false,\n    };\n\n    constructor(props, context) {\n        super(props);\n\n        this.d2 = context.d2;\n\n        this.contentRef = React.createRef();\n        this.headerRef = React.createRef();\n\n        this.memoizedApplyFilters = memoizeOne(this.applyFilters);\n\n        this.memoizedGetVisualizationConfig = memoizeOne(\n            getVisualizationConfig\n        );\n\n        this.memoizedGetContentStyle = memoizeOne(this.getContentStyle);\n    }\n\n    async componentDidMount() {\n        this.props.onVisualizationLoaded(\n            // TODO do not call fetch on the pluginManager, do it here as the manager will eventually be removed...\n            await pluginManager.fetch(this.props.item)\n        );\n\n        this.setState({\n            configLoaded: true,\n        });\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (\n            prevState.pluginIsLoaded &&\n            (prevProps.visualization !== this.props.visualization ||\n                prevProps.itemFilters !== this.props.itemFilters)\n        ) {\n            this.setState({\n                pluginIsLoaded: false,\n            });\n        }\n    }\n\n    applyFilters = (visualization, filters) => {\n        if (!Object.keys(filters).length) {\n            return visualization;\n        }\n\n        // deep clone objects in filters to avoid changing the visualization in the Redux store\n        const visRows = visualization.rows.map(obj => ({ ...obj }));\n        const visColumns = visualization.columns.map(obj => ({ ...obj }));\n        const visFilters = visualization.filters.map(obj => ({ ...obj }));\n\n        Object.keys(filters).forEach(dimensionId => {\n            if (filters[dimensionId]) {\n                let dimensionFound = false;\n\n                [visRows, visColumns, visFilters].forEach(dimensionObjects =>\n                    dimensionObjects\n                        .filter(obj => obj.dimension === dimensionId)\n                        .forEach(obj => {\n                            dimensionFound = true;\n                            obj.items = filters[dimensionId];\n                        })\n                );\n\n                // add dimension to filters if not already present elsewhere\n                if (!dimensionFound) {\n                    visFilters.push({\n                        dimension: dimensionId,\n                        items: filters[dimensionId],\n                    });\n                }\n            }\n        });\n\n        return {\n            ...visualization,\n            rows: visRows,\n            columns: visColumns,\n            filters: visFilters,\n        };\n    };\n\n    getUniqueKey = memoizeOne(() => uniqueId());\n\n    pluginCredentials = null;\n\n    getPluginComponent = () => {\n        const activeType = this.getActiveType();\n        const visualization = this.memoizedGetVisualizationConfig(\n            this.props.visualization,\n            this.props.item.type,\n            activeType\n        );\n\n        if (!visualization) {\n            return (\n                <div className={this.props.classes.textDiv}>\n                    {i18n.t('No data to display')}\n                </div>\n            );\n        }\n\n        const calculatedHeight =\n            this.props.item.originalHeight -\n            this.headerRef.current.clientHeight -\n            HEADER_MARGIN_HEIGHT -\n            ITEM_CONTENT_PADDING_BOTTOM;\n\n        const props = {\n            ...this.props,\n            visualization,\n            style: this.memoizedGetContentStyle(\n                calculatedHeight,\n                this.contentRef ? this.contentRef.offsetHeight : null,\n                this.props.editMode\n            ),\n        };\n\n        switch (activeType) {\n            case VISUALIZATION:\n            case CHART:\n            case REPORT_TABLE: {\n                return (\n                    <Fragment>\n                        {!this.state.pluginIsLoaded ? (\n                            <div style={styles.loadingCover}>\n                                <LoadingMask />\n                            </div>\n                        ) : null}\n                        <VisualizationPlugin\n                            d2={this.d2}\n                            visualization={this.memoizedApplyFilters(\n                                visualization,\n                                props.itemFilters\n                            )}\n                            onLoadingComplete={this.onLoadingComplete}\n                            forDashboard={true}\n                            style={props.style}\n                        />\n                    </Fragment>\n                );\n            }\n            case MAP: {\n                if (props.item.type === MAP) {\n                    // apply filters only to thematic and event layers\n                    // for maps AO\n                    const mapViews = props.visualization.mapViews.map(obj => {\n                        if (\n                            obj.layer.includes('thematic') ||\n                            obj.layer.includes('event')\n                        ) {\n                            return this.memoizedApplyFilters(\n                                obj,\n                                props.itemFilters\n                            );\n                        }\n\n                        return obj;\n                    });\n\n                    props.visualization = {\n                        ...props.visualization,\n                        mapViews,\n                    };\n                } else {\n                    // this is the case of a non map AO passed to the maps plugin\n                    // due to a visualization type switch in dashboard item\n                    // maps plugin takes care of converting the AO to a suitable format\n                    props.visualization = this.memoizedApplyFilters(\n                        props.visualization,\n                        props.itemFilters\n                    );\n                }\n\n                return <DefaultPlugin {...props} />;\n            }\n            default: {\n                props.visualization = this.memoizedApplyFilters(\n                    props.visualization,\n                    props.itemFilters\n                );\n\n                return <DefaultPlugin {...props} />;\n            }\n        }\n    };\n\n    onLoadingComplete = () => {\n        this.setState({\n            pluginIsLoaded: true,\n        });\n    };\n\n    onToggleFooter = () => {\n        this.setState(\n            { showFooter: !this.state.showFooter },\n            this.props.onToggleItemExpanded(this.props.item.id)\n        );\n    };\n\n    onSelectActiveType = type => {\n        if (type === this.getActiveType()) {\n            return;\n        }\n\n        pluginManager.unmount(this.props.item, this.getActiveType());\n\n        this.props.onSelectActiveType(this.props.visualization.id, type);\n    };\n\n    getActiveType = () =>\n        this.props.visualization.activeType || this.props.item.type;\n\n    pluginIsAvailable = () =>\n        pluginManager.pluginIsAvailable(\n            this.props.item,\n            this.props.visualization\n        );\n\n    getContentStyle = (calculatedHeight, measuredHeight, editMode) => {\n        const height = editMode\n            ? measuredHeight || calculatedHeight\n            : calculatedHeight;\n\n        return { height };\n    };\n\n    render() {\n        const { item, editMode, itemFilters } = this.props;\n        const { showFooter } = this.state;\n\n        const actionButtons = (\n            <ItemHeaderButtons\n                item={item}\n                visualization={this.props.visualization}\n                onSelectActiveType={this.onSelectActiveType}\n                onToggleFooter={this.onToggleFooter}\n                d2={this.d2}\n                activeType={this.getActiveType()}\n                activeFooter={this.state.showFooter}\n            />\n        );\n\n        return (\n            <>\n                <ItemHeader\n                    title={pluginManager.getName(item)}\n                    itemId={item.id}\n                    actionButtons={actionButtons}\n                    ref={this.headerRef}\n                />\n                <FatalErrorBoundary>\n                    <div\n                        key={this.getUniqueKey(itemFilters)}\n                        className=\"dashboard-item-content\"\n                        ref={ref => (this.contentRef = ref)}\n                    >\n                        {this.state.configLoaded && this.getPluginComponent()}\n                    </div>\n                </FatalErrorBoundary>\n                {!editMode && showFooter ? <ItemFooter item={item} /> : null}\n            </>\n        );\n    }\n}\n\nItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nItem.propTypes = {\n    classes: PropTypes.object,\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    itemFilters: PropTypes.object,\n    visualization: PropTypes.object,\n    onSelectActiveType: PropTypes.func,\n    onToggleItemExpanded: PropTypes.func,\n    onVisualizationLoaded: PropTypes.func,\n};\n\nItem.defaultProps = {\n    item: {},\n    editMode: false,\n    onToggleItemExpanded: Function.prototype,\n    itemFilters: {},\n    visualization: {},\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n    itemFilters: sGetItemFiltersRoot(state),\n    visualization: sGetVisualization(\n        state,\n        pluginManager.extractFavorite(ownProps.item).id\n    ),\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onVisualizationLoaded: visualization =>\n        dispatch(acAddVisualization(visualization)),\n    onSelectActiveType: (id, type, activeType) =>\n        dispatch(acSetActiveVisualizationType(id, type, activeType)),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(Item));\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\n\nconst style = {\n    backgroundColor: colors.grey200,\n    border: 'none',\n    height: '1px',\n    margin: '0px 0px 5px 0px',\n};\n\nconst Line = () => <hr style={style} />;\n\nexport default Line;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\n\nimport { sGetMessagesRoot } from '../../../reducers/messages';\nimport { formatDate } from '../../../modules/util';\nimport { colors } from '@dhis2/ui-core';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nimport './MessagesItem.css';\n\nconst PRIVATE = 'PRIVATE';\n\nconst messageTypes = {\n    [PRIVATE]: 'Private',\n    VALIDATION_RESULT: 'Validation',\n    TICKET: 'Ticket',\n    SYSTEM: 'System',\n};\n\nconst style = {\n    list: {\n        listStyleType: 'none',\n        paddingLeft: '0px',\n    },\n    seeAll: {\n        textAlign: 'center',\n        fontSize: '13px',\n        marginBottom: '5px',\n    },\n    sender: {\n        fontSize: '13px',\n        lineHeight: '15px',\n        margin: 0,\n        color: colors.grey800,\n    },\n    snippet: {\n        color: colors.grey800,\n        fontSize: '13px',\n        lineHeight: '15px',\n        maxHeight: '30px',\n        overflow: 'hidden',\n    },\n};\n\nclass MessagesItem extends Component {\n    state = {\n        uiLocale: '',\n    };\n\n    async componentDidMount() {\n        const uiLocale = await this.context.d2.currentUser.userSettings.get(\n            'keyUiLocale'\n        );\n\n        this.setState({ uiLocale });\n    }\n\n    getMessageHref = msg => {\n        const msgIdentifier = msg ? `#/${msg.messageType}/${msg.id}` : '';\n        return `${this.context.baseUrl}/dhis-web-messaging/${msgIdentifier}`;\n    };\n\n    getMessageSender = msg => {\n        const latestMsg = msg.messages.slice(-1)[0];\n        return latestMsg.sender ? latestMsg.sender.displayName : '';\n    };\n\n    getMessageItems = () => {\n        const editClass = !this.props.editMode ? 'view' : null;\n\n        return this.props.messages.map(msg => {\n            const redirectToMsg = () => {\n                if (!this.props.editMode) {\n                    document.location.href = this.getMessageHref(msg);\n                }\n            };\n\n            const sender =\n                msg.messageType === PRIVATE\n                    ? this.getMessageSender(msg)\n                    : messageTypes[msg.messageType];\n\n            const readClass = !msg.read ? 'unread' : null;\n            const latestMsg = msg.messages.slice(-1)[0];\n            const msgDate = latestMsg.lastUpdated;\n\n            return (\n                <li\n                    className={`message-item ${editClass}`}\n                    key={msg.id}\n                    onClick={redirectToMsg}\n                >\n                    <p className={`message-title ${readClass}`}>\n                        {msg.displayName} ({msg.messageCount})\n                    </p>\n                    <p style={style.sender}>\n                        {sender} - {formatDate(msgDate, this.state.uiLocale)}\n                    </p>\n                    <p style={style.snippet}>{latestMsg.text}</p>\n                </li>\n            );\n        });\n    };\n\n    render() {\n        return (\n            <Fragment>\n                <ItemHeader\n                    title={i18n.t('Messages')}\n                    itemId={this.props.item.id}\n                />\n                <Line />\n                {this.props.messages.length > 0 && (\n                    <div className=\"dashboard-item-content\">\n                        <ul style={style.list}>{this.getMessageItems()}</ul>\n                        <div style={style.seeAll}>\n                            <a href={this.getMessageHref()}>\n                                {i18n.t('See all messages')}\n                            </a>\n                        </div>\n                    </div>\n                )}\n            </Fragment>\n        );\n    }\n}\n\nMessagesItem.propTypes = {\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    messages: PropTypes.array,\n};\n\nMessagesItem.contextTypes = {\n    d2: PropTypes.object,\n    baseUrl: PropTypes.string,\n};\n\nconst mapStateToProps = state => {\n    return {\n        messages: Object.values(sGetMessagesRoot(state)),\n    };\n};\n\nconst MessagesContainer = connect(\n    mapStateToProps,\n    null\n)(MessagesItem);\n\nexport default MessagesContainer;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ItemHeader from '../ItemHeader';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nconst NotSupportedItem = props => (\n    <Fragment>\n        <ItemHeader\n            title={i18n.t('Item type \"{{type}}\" not supported', {\n                type: props.item.type,\n            })}\n            itemId={props.item.id}\n        />\n        <div\n            style={{\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center',\n                height: '90%',\n            }}\n        >\n            <NotInterestedIcon\n                style={{ width: 100, height: 100, align: 'center' }}\n                color=\"disabled\"\n            />\n        </div>\n    </Fragment>\n);\n\nNotSupportedItem.propTypes = {\n    item: PropTypes.object,\n};\n\nexport default NotSupportedItem;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nconst DescriptionIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n        fill={colors.grey500}\n    >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M14 2H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6zm2 16H8v-2h8v2zm0-4H8v-2h8v2zm-3-5V3.5L18.5 9H13z\" />\n    </svg>\n);\n\nDescriptionIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default DescriptionIcon;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nconst DeleteIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"18\"\n        height=\"18\"\n        viewBox=\"0 0 24 24\"\n        fill={colors.red500}\n    >\n        <path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>\n);\n\nDeleteIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default DeleteIcon;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { colors } from '@dhis2/ui-core';\nimport DescriptionIcon from '../../../icons/Description';\n\nimport DeleteIcon from '../../../icons/Delete';\nimport Line from '../../../widgets/Line';\nimport { itemTypeMap, getItemUrl } from '../../../modules/itemTypes';\nimport { orArray } from '../../../modules/util';\nimport { tRemoveListItemContent } from './actions';\nimport ItemHeader from '../ItemHeader';\nimport classes from './Item.module.css';\n\nconst getItemTitle = item => itemTypeMap[item.type].pluralTitle;\n\nconst getContentItems = item =>\n    orArray(item[itemTypeMap[item.type].propName]).filter(\n        (item, index, array) =>\n            array.findIndex(el => el.id === item.id) === index\n    );\n\nconst ListItem = (props, context) => {\n    const { item, editMode, tRemoveListItemContent } = props;\n    const contentItems = getContentItems(item);\n\n    const getLink = contentItem => {\n        const deleteButton = (\n            <button\n                className={classes.deletebutton}\n                onClick={() => tRemoveListItemContent(item, contentItem)}\n            >\n                <DeleteIcon className={classes.deleteicon} />\n            </button>\n        );\n\n        return (\n            <Fragment>\n                <a\n                    className={classes.link}\n                    style={{ color: colors.grey900 }}\n                    href={getItemUrl(item.type, contentItem, context.d2)}\n                >\n                    {contentItem.name}\n                </a>\n                {editMode ? deleteButton : null}\n            </Fragment>\n        );\n    };\n\n    return (\n        <Fragment>\n            <ItemHeader title={getItemTitle(item)} itemId={item.id} />\n            <Line />\n            <div className=\"dashboard-item-content\">\n                <ul className={classes.list}>\n                    {contentItems.map(contentItem => (\n                        <li className={classes.item} key={contentItem.id}>\n                            <DescriptionIcon className={classes.itemicon} />\n                            {getLink(contentItem)}\n                        </li>\n                    ))}\n                </ul>\n            </div>\n        </Fragment>\n    );\n};\n\nListItem.propTypes = {\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    tRemoveListItemContent: PropTypes.func,\n};\n\nListItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nexport default connect(\n    null,\n    {\n        tRemoveListItemContent,\n    }\n)(ListItem);\n","import {\n    acUpdateDashboardItem,\n    acRemoveDashboardItem,\n} from '../../../actions/editDashboard';\nimport { itemTypeMap } from '../../../modules/itemTypes';\n\nexport const tRemoveListItemContent = (dashboardItem, content) => dispatch => {\n    const listItemType = itemTypeMap[dashboardItem.type].propName;\n\n    const newContent = dashboardItem[listItemType].filter(\n        item => item.id !== content.id\n    );\n\n    if (newContent.length) {\n        dashboardItem[listItemType] = newContent;\n        dispatch(acUpdateDashboardItem(dashboardItem));\n    } else {\n        dispatch(acRemoveDashboardItem(dashboardItem));\n    }\n};\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\n\nimport Input from '@material-ui/core/Input';\nimport {\n    Parser as RichTextParser,\n    Editor as RichTextEditor,\n} from '@dhis2/d2-ui-rich-text';\n\nimport { acUpdateDashboardItem } from '../../../actions/editDashboard';\nimport { sGetEditDashboardItems } from '../../../reducers/editDashboard';\nimport { sGetDashboardItems } from '../../../reducers/dashboards';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nconst style = {\n    textDiv: {\n        padding: '10px',\n        whiteSpace: 'pre-line',\n        lineHeight: '20px',\n    },\n    textField: {\n        fontSize: '14px',\n        fontStretch: 'normal',\n        width: '90%',\n        margin: '0 auto',\n        display: 'block',\n        lineHeight: '24px',\n    },\n    container: {\n        marginBottom: '20px',\n        marginTop: '20px',\n    },\n};\n\nconst TextItem = props => {\n    const { item, editMode, text, acUpdateDashboardItem } = props;\n\n    const onChangeText = event => {\n        const updatedItem = {\n            ...item,\n            text: event.target.value,\n        };\n\n        acUpdateDashboardItem(updatedItem);\n    };\n\n    const viewItem = () => {\n        const textDivStyle = Object.assign({}, style.textField, style.textDiv);\n        return (\n            <div className=\"dashboard-item-content\" style={style.container}>\n                <RichTextParser style={textDivStyle}>{text}</RichTextParser>\n            </div>\n        );\n    };\n\n    const editItem = () => {\n        return (\n            <Fragment>\n                <ItemHeader title={i18n.t('Text item')} itemId={item.id} />\n                <Line />\n                <div className=\"dashboard-item-content\">\n                    <RichTextEditor onEdit={onChangeText}>\n                        <Input\n                            value={text}\n                            multiline\n                            fullWidth\n                            style={style.textField}\n                            placeholder={i18n.t('Add text here')}\n                            onChange={onChangeText}\n                        />\n                    </RichTextEditor>\n                </div>\n            </Fragment>\n        );\n    };\n\n    return <Fragment>{editMode ? editItem() : viewItem()}</Fragment>;\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    const items = ownProps.editMode\n        ? sGetEditDashboardItems(state)\n        : sGetDashboardItems(state);\n\n    const item = items.find(item => item.id === ownProps.item.id);\n\n    return {\n        text: item ? item.text : '',\n    };\n};\n\nTextItem.propTypes = {\n    acUpdateDashboardItem: PropTypes.func,\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    text: PropTypes.string,\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        acUpdateDashboardItem,\n    }\n)(TextItem);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nimport { FILTER_ORG_UNIT } from '../../../actions/itemFilters';\nimport { sGetItemFiltersRoot } from '../../../reducers/itemFilters';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nconst getIframeSrc = (appDetails, item, itemFilters) => {\n    let iframeSrc = `${appDetails.launchUrl}?dashboardItemId=${item.id}`;\n\n    if (\n        itemFilters &&\n        itemFilters[FILTER_ORG_UNIT] &&\n        itemFilters[FILTER_ORG_UNIT].length\n    ) {\n        const ouIds = itemFilters[FILTER_ORG_UNIT].map(\n            ouPath => ouPath.split('/').slice(-1)[0]\n        );\n\n        iframeSrc += `&userOrgUnit=${ouIds.join(',')}`;\n    }\n\n    return iframeSrc;\n};\n\nconst AppItem = ({ item, itemFilters }, context) => {\n    let appDetails;\n\n    const appKey = item.appKey;\n\n    if (appKey) {\n        appDetails = context.d2.system.installedApps.find(\n            app => app.key === appKey\n        );\n    }\n\n    return appDetails && appDetails.name && appDetails.launchUrl ? (\n        <Fragment>\n            <ItemHeader title={appDetails.name} itemId={item.id} />\n            <Line />\n            <iframe\n                title={appDetails.name}\n                src={getIframeSrc(appDetails, item, itemFilters)}\n                className=\"dashboard-item-content\"\n                style={{ border: 'none' }}\n            />\n        </Fragment>\n    ) : (\n        <Fragment>\n            <ItemHeader title={`${appKey} app not found`} />\n            <Line />\n            <div\n                className=\"dashboard-item-content\"\n                style={{\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    height: '90%',\n                }}\n            >\n                <NotInterestedIcon\n                    color=\"disabled\"\n                    disabled\n                    style={{ width: 100, height: 100, align: 'center' }}\n                />\n            </div>\n        </Fragment>\n    );\n};\n\nAppItem.propTypes = {\n    item: PropTypes.object,\n    itemFilters: PropTypes.object,\n};\n\nAppItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nconst mapStateToProps = state => ({\n    itemFilters: sGetItemFiltersRoot(state),\n});\n\nexport default connect(mapStateToProps)(AppItem);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\n\nimport { colors } from '@dhis2/ui-core';\nimport ItemHeader from '../ItemHeader';\n\nconst style = {\n    margin: '21px 28px',\n    fontSize: '14px',\n    lineHeight: '18px',\n    color: colors.grey600,\n};\n\nconst SpacerItem = props => {\n    return (\n        <Fragment>\n            <ItemHeader title={i18n.t('Spacer')} itemId={props.item.id} />\n            <p style={style}>\n                {i18n.t(\n                    'Use a spacer to create empty vertical space between other dashboard items.'\n                )}\n            </p>\n        </Fragment>\n    );\n};\n\nSpacerItem.propTypes = {\n    item: PropTypes.object,\n};\n\nexport default SpacerItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport VisualizationItem from './VisualizationItem/Item';\nimport MessagesItem from './MessagesItem/Item';\nimport NotSupportedItem from './NotSupportedItem/Item';\nimport ListItem from './ListItem/Item';\nimport TextItem from './TextItem/Item';\nimport AppItem from './AppItem/Item';\nimport SpacerItem from './SpacerItem/Item';\nimport {\n    APP,\n    VISUALIZATION,\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_CHART,\n    EVENT_REPORT,\n    MESSAGES,\n    REPORTS,\n    RESOURCES,\n    USERS,\n    TEXT,\n    SPACER,\n} from '../../modules/itemTypes';\nimport { DEFAULT_STATE_ITEM_FILTERS } from '../../reducers/itemFilters';\n\nconst getGridItem = type => {\n    switch (type) {\n        case VISUALIZATION:\n        case REPORT_TABLE:\n        case CHART:\n        case MAP:\n        case EVENT_CHART:\n        case EVENT_REPORT:\n            return VisualizationItem;\n        case MESSAGES:\n            return MessagesItem;\n        case REPORTS:\n        case RESOURCES:\n        case USERS:\n            return ListItem;\n        case TEXT:\n            return TextItem;\n        case SPACER:\n            return SpacerItem;\n        case APP:\n            return AppItem;\n        default:\n            return NotSupportedItem;\n    }\n};\n\nexport const Item = props => {\n    const GridItem = getGridItem(props.item.type);\n\n    return (\n        <GridItem\n            item={props.item}\n            editMode={props.editMode}\n            itemFilters={\n                props.editMode ? DEFAULT_STATE_ITEM_FILTERS : props.itemFilters\n            }\n            onToggleItemExpanded={props.onToggleItemExpanded}\n        />\n    );\n};\n\nItem.propTypes = {\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    itemFilters: PropTypes.object,\n    onToggleItemExpanded: PropTypes.func,\n};\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nexport const NoContentMessage = ({ text }) => (\n    <div\n        style={{\n            padding: '50px 10px',\n            textAlign: 'center',\n            fontSize: '15px',\n            fontWeight: 500,\n            color: colors.grey600,\n        }}\n    >\n        {text}\n    </div>\n);\n\nNoContentMessage.propTypes = {\n    text: PropTypes.string,\n};\n\nexport default NoContentMessage;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash/debounce';\nimport pick from 'lodash/pick';\n\nconst defaultDebounceMs = 100;\nconst defaultBufferFactor = 0.25;\n\nclass ProgressiveLoadingContainer extends Component {\n    static propTypes = {\n        children: PropTypes.node.isRequired,\n        bufferFactor: PropTypes.number,\n        className: PropTypes.string,\n        debounceMs: PropTypes.number,\n        style: PropTypes.object,\n    };\n    static defaultProps = {\n        debounceMs: defaultDebounceMs,\n        bufferFactor: defaultBufferFactor,\n    };\n\n    state = {\n        shouldLoad: false,\n    };\n    containerRef = null;\n    shouldLoadHandler = null;\n\n    checkShouldLoad() {\n        const bufferPx = this.props.bufferFactor * window.innerHeight;\n\n        if (!this.containerRef) {\n            return;\n        }\n\n        const rect = this.containerRef.getBoundingClientRect();\n        if (\n            rect.bottom > -bufferPx &&\n            rect.top < window.innerHeight + bufferPx\n        ) {\n            this.setState({\n                shouldLoad: true,\n            });\n\n            this.removeHandler();\n        }\n    }\n\n    registerHandler() {\n        this.shouldLoadHandler = debounce(\n            () => this.checkShouldLoad(),\n            this.props.debounceMs\n        );\n\n        window.addEventListener('scroll', this.shouldLoadHandler);\n    }\n    removeHandler() {\n        window.removeEventListener('scroll', this.shouldLoadHandler);\n    }\n\n    componentDidMount() {\n        this.registerHandler();\n        this.checkShouldLoad();\n    }\n\n    componentWillUnmount() {\n        this.removeHandler();\n    }\n\n    render() {\n        const { children, className, style, ...props } = this.props;\n        const { shouldLoad } = this.state;\n\n        const eventProps = pick(props, [\n            'onMouseDown',\n            'onTouchStart',\n            'onMouseUp',\n            'onTouchEnd',\n        ]);\n\n        return (\n            <div\n                ref={ref => (this.containerRef = ref)}\n                style={style}\n                className={className}\n                {...eventProps}\n            >\n                {shouldLoad && children}\n            </div>\n        );\n    }\n}\n\nexport default ProgressiveLoadingContainer;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport memoize from 'lodash/memoize';\nimport i18n from '@dhis2/d2-i18n';\nimport ReactGridLayout from 'react-grid-layout';\nimport { CircularLoader, ScreenCover } from '@dhis2/ui-core';\n\nimport {\n    acUpdateDashboardLayout,\n    acRemoveDashboardItem,\n} from '../../actions/editDashboard';\nimport { Item } from '../Item/Item';\nimport { resize as pluginResize } from '../Item/VisualizationItem/plugin';\nimport { isVisualizationType } from '../../modules/itemTypes';\nimport {\n    GRID_ROW_HEIGHT,\n    GRID_COMPACT_TYPE,\n    ITEM_MIN_HEIGHT,\n    MARGIN,\n    getGridColumns,\n    hasShape,\n    onItemResize,\n} from './gridUtil';\nimport { orArray } from '../../modules/util';\n\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\n\nimport './ItemGrid.css';\nimport { sGetSelectedId, sGetSelectedIsLoading } from '../../reducers/selected';\nimport {\n    sGetEditDashboardRoot,\n    sGetEditDashboardItems,\n} from '../../reducers/editDashboard';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n} from '../../reducers/dashboards';\nimport ProgressiveLoadingContainer from '../Item/ProgressiveLoadingContainer';\n\n// Component\n\nconst EXPANDED_HEIGHT = 17;\n// this is set in the .dashboard-item-content css\nexport const ITEM_CONTENT_PADDING_BOTTOM = 4;\n\nexport class ItemGrid extends Component {\n    state = {\n        expandedItems: {},\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.getMemoizedItem = memoize(this.getItem);\n    }\n\n    onToggleItemExpanded = clickedId => {\n        const isExpanded =\n            typeof this.state.expandedItems[clickedId] === 'boolean'\n                ? this.state.expandedItems[clickedId]\n                : false;\n\n        const expandedItems = { ...this.state.expandedItems };\n        expandedItems[clickedId] = !isExpanded;\n        this.setState({ expandedItems });\n    };\n\n    onRemoveItem = clickedId => {\n        this.props.acRemoveDashboardItem(clickedId);\n    };\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.edit) {\n            this.setState({ expandedItems: {} });\n        }\n    }\n\n    onLayoutChange = newLayout => {\n        if (this.props.edit) {\n            this.props.acUpdateDashboardLayout(newLayout);\n        }\n    };\n\n    onResizeStop = (layout, oldItem, newItem) => {\n        onItemResize(newItem.i);\n\n        const dashboardItem = this.props.dashboardItems.find(\n            item => item.id === newItem.i\n        );\n\n        // call resize on the item component if it's a plugin type\n        if (dashboardItem && isVisualizationType(dashboardItem)) {\n            pluginResize(dashboardItem);\n        }\n    };\n\n    onRemoveItemWrapper = id => () => this.onRemoveItem(id);\n\n    getItem = dashboardItem => {\n        const expandedItem = this.state.expandedItems[dashboardItem.id];\n        const hProp = { h: dashboardItem.h };\n\n        if (expandedItem && expandedItem === true) {\n            hProp.h = dashboardItem.h + EXPANDED_HEIGHT;\n        }\n\n        return Object.assign({}, dashboardItem, hProp, {\n            i: dashboardItem.id,\n            minH: ITEM_MIN_HEIGHT,\n            randomNumber: Math.random(),\n        });\n    };\n\n    getItems = dashboardItems =>\n        dashboardItems.map(item => this.getMemoizedItem(item));\n\n    getItemComponent = item => {\n        const itemClassNames = [\n            item.type,\n            this.props.edit ? 'edit' : 'view',\n        ].join(' ');\n\n        return (\n            <ProgressiveLoadingContainer\n                key={item.i}\n                className={itemClassNames}\n            >\n                <Item\n                    item={item}\n                    editMode={this.props.edit}\n                    onToggleItemExpanded={this.onToggleItemExpanded}\n                />\n            </ProgressiveLoadingContainer>\n        );\n    };\n\n    getItemComponents = items => items.map(item => this.getItemComponent(item));\n\n    render() {\n        const { edit, isLoading, dashboardItems } = this.props;\n\n        if (!isLoading && !dashboardItems.length) {\n            return (\n                <NoContentMessage\n                    text={i18n.t('There are no items on this dashboard')}\n                />\n            );\n        }\n\n        const items = edit\n            ? this.getItems(dashboardItems)\n            : dashboardItems.map(this.getItem);\n\n        return (\n            <div className=\"grid-wrapper\">\n                {isLoading ? (\n                    <ScreenCover>\n                        <CircularLoader />\n                    </ScreenCover>\n                ) : null}\n                <ReactGridLayout\n                    onLayoutChange={this.onLayoutChange}\n                    onResizeStop={this.onResizeStop}\n                    className=\"layout\"\n                    layout={items}\n                    margin={MARGIN}\n                    cols={getGridColumns()}\n                    rowHeight={GRID_ROW_HEIGHT}\n                    width={window.innerWidth}\n                    compactType={GRID_COMPACT_TYPE}\n                    isDraggable={edit}\n                    isResizable={edit}\n                    draggableCancel=\"input,textarea\"\n                >\n                    {this.getItemComponents(items)}\n                </ReactGridLayout>\n            </div>\n        );\n    }\n}\n\nItemGrid.propTypes = {\n    acRemoveDashboardItem: PropTypes.func,\n    acUpdateDashboardLayout: PropTypes.func,\n    dashboardItems: PropTypes.array,\n    edit: PropTypes.bool,\n    isLoading: PropTypes.bool,\n};\n\nItemGrid.defaultProps = {\n    dashboardItems: [],\n};\n\n// Container\n\nconst mapStateToProps = (state, ownProps) => {\n    const selectedDashboard = ownProps.edit\n        ? sGetEditDashboardRoot(state)\n        : sGetDashboardById(state, sGetSelectedId(state));\n\n    const dashboardItems = ownProps.edit\n        ? sGetEditDashboardItems(state)\n        : sGetDashboardItems(state);\n\n    return {\n        isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n        dashboardItems,\n    };\n};\n\nconst mapDispatchToProps = {\n    acUpdateDashboardLayout,\n    acRemoveDashboardItem,\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const validItems = orArray(stateProps.dashboardItems).filter(hasShape);\n\n    return {\n        ...dispatchProps,\n        edit: ownProps.edit,\n        isLoading: stateProps.isLoading,\n        dashboardItems: validItems,\n        onItemResize,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n    mergeProps\n)(ItemGrid);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport i18n from '@dhis2/d2-i18n';\n\nimport { colors } from '@dhis2/ui-core';\n\nconst styles = {\n    badgeContainer: {\n        margin: '2px',\n        padding: '0 16px',\n        borderRadius: '4px',\n        color: colors.white,\n        backgroundColor: '#212934',\n        height: 36,\n        display: 'flex',\n        alignItems: 'center',\n    },\n    badge: {\n        fontSize: '13px',\n        cursor: 'pointer',\n        whiteSpace: 'nowrap',\n    },\n    badgeRemove: {\n        fontSize: '12px',\n        textDecoration: 'underline',\n        marginLeft: '24px',\n        cursor: 'pointer',\n    },\n};\n\nclass FilterBadge extends Component {\n    onClick = id => () => this.props.onClick(id);\n    onRemove = id => () => this.props.onRemove(id);\n\n    render() {\n        const { data } = this.props;\n\n        return (\n            <div style={styles.badgeContainer}>\n                <span style={styles.badge} onClick={this.onClick(data.id)}>\n                    {`${data.name}: ${\n                        data.values.length > 1\n                            ? i18n.t('{{count}} selected', {\n                                  count: data.values.length,\n                              })\n                            : data.values[0].name\n                    }`}\n                </span>\n                <span\n                    style={styles.badgeRemove}\n                    onClick={this.onRemove(data.id)}\n                >\n                    {i18n.t('Remove')}\n                </span>\n            </div>\n        );\n    }\n}\n\nFilterBadge.propTypes = {\n    data: PropTypes.object.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onRemove: PropTypes.func.isRequired,\n};\n\nFilterBadge.defaultProps = {\n    onClick: Function.prototype,\n    onRemove: Function.prototype,\n};\n\nexport default FilterBadge;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { createSelector } from 'reselect';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport { sGetDimensions } from '../../reducers/dimensions';\nimport { sGetItemFiltersRoot } from '../../reducers/itemFilters';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { getTopOffset } from '../ControlBar/controlBarDimensions';\nimport { acRemoveItemFilter } from '../../actions/itemFilters';\nimport { acRemoveEditItemFilter } from '../../actions/editItemFilters';\nimport { acSetActiveModalDimension } from '../../actions/activeModalDimension';\n\nimport FilterBadge from './FilterBadge';\n\nconst styles = {\n    bar: {\n        position: 'sticky',\n        zIndex: 7,\n        padding: '8px 0',\n        display: 'flex',\n        justifyContent: 'center',\n        flexWrap: 'wrap',\n    },\n};\n\nexport class FilterBar extends Component {\n    onBadgeRemove = id => {\n        this.props.removeItemFilter(id);\n        this.props.removeEditItemFilter(id);\n    };\n\n    onBadgeClick = id => {\n        this.props.setActiveModalDimension({\n            id,\n            name: this.props.filters.find(item => item.id === id).name,\n        });\n    };\n\n    render() {\n        const { filters, userRows, classes } = this.props;\n        const top = getTopOffset(userRows) + 10;\n\n        return filters.length ? (\n            <div className={classes.bar} style={{ top }}>\n                {filters.map(filter => (\n                    <FilterBadge\n                        key={filter.id}\n                        data={filter}\n                        onClick={this.onBadgeClick}\n                        onRemove={this.onBadgeRemove}\n                    />\n                ))}\n            </div>\n        ) : null;\n    }\n}\n\nFilterBar.propTypes = {\n    filters: PropTypes.array.isRequired,\n    removeEditItemFilter: PropTypes.func.isRequired,\n    removeItemFilter: PropTypes.func.isRequired,\n    classes: PropTypes.object,\n    setActiveModalDimension: PropTypes.func,\n    userRows: PropTypes.number,\n};\n\nFilterBar.defaultProps = {\n    filters: [],\n    removeItemFIlter: Function.prototype,\n    removeEditItemFilter: Function.prototype,\n};\n\n// simplify the filters structure to:\n// [{ id: 'pe', name: 'Period', values: [{ id: 2019: name: '2019' }, {id: 'LAST_MONTH', name: 'Last month' }]}, ...]\nconst filtersSelector = createSelector(\n    [sGetItemFiltersRoot, sGetDimensions],\n    (filters, dimensions) =>\n        Object.keys(filters).reduce((arr, id) => {\n            arr.push({\n                id: id,\n                name: dimensions.find(dimension => dimension.id === id).name,\n                values: filters[id].map(value => ({\n                    id: value.id,\n                    name: value.displayName || value.name,\n                })),\n            });\n\n            return arr;\n        }, [])\n);\n\nconst mapStateToProps = state => ({\n    filters: filtersSelector(state),\n    userRows: sGetControlBarUserRows(state),\n});\n\nexport default connect(\n    mapStateToProps,\n    {\n        setActiveModalDimension: acSetActiveModalDimension,\n        removeItemFilter: acRemoveItemFilter,\n        removeEditItemFilter: acRemoveEditItemFilter,\n    }\n)(withStyles(styles)(FilterBar));\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport TitleBar from '../TitleBar/TitleBar';\nimport ItemGrid from '../ItemGrid/ItemGrid';\nimport FilterBar from '../FilterBar/FilterBar';\n\nexport const DashboardContent = props => (\n    <Fragment>\n        <TitleBar edit={props.editMode} />\n        <FilterBar />\n        <ItemGrid edit={props.editMode} />\n    </Fragment>\n);\n\nDashboardContent.propTypes = {\n    editMode: PropTypes.bool,\n};\n\nexport default DashboardContent;\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport isEmpty from 'lodash/isEmpty';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\n\nimport {\n    sGetAllDashboards,\n    sDashboardsIsFetching,\n} from '../../reducers/dashboards';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport DashboardsBar from '../ControlBar/DashboardsBar';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport DashboardContent from './DashboardContent';\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nexport const Content = ({ hasDashboardContent, dashboardsIsEmpty }) => {\n    const msg = dashboardsIsEmpty\n        ? i18n.t(\n              'No dashboards found. Use the + button to create a new dashboard.'\n          )\n        : i18n.t('Requested dashboard not found');\n\n    return hasDashboardContent ? (\n        <DashboardContent editMode={false} />\n    ) : (\n        <NoContentMessage text={msg} />\n    );\n};\n\nContent.propTypes = {\n    dashboardsIsEmpty: PropTypes.bool,\n    hasDashboardContent: PropTypes.bool,\n};\n\nexport const ViewDashboard = ({ id, dashboardsIsEmpty, dashboardsLoaded }) => {\n    const hasDashboardContent = id && !dashboardsIsEmpty;\n    const contentNotReady = !dashboardsLoaded || id === null;\n\n    return (\n        <Fragment>\n            <DashboardsBar />\n            <DashboardVerticalOffset />\n            <div className=\"dashboard-wrapper\">\n                {contentNotReady ? null : (\n                    <Content\n                        hasDashboardContent={hasDashboardContent}\n                        dashboardsIsEmpty={dashboardsIsEmpty}\n                    />\n                )}\n            </div>\n        </Fragment>\n    );\n};\n\nViewDashboard.propTypes = {\n    dashboardsIsEmpty: PropTypes.bool,\n    dashboardsLoaded: PropTypes.bool,\n    id: PropTypes.string,\n};\n\nconst mapStateToProps = state => {\n    const dashboards = sGetAllDashboards(state);\n\n    return {\n        id: sGetSelectedId(state),\n        dashboardsIsEmpty: isEmpty(dashboards),\n        dashboardsLoaded: !sDashboardsIsFetching(state),\n    };\n};\n\nexport default connect(mapStateToProps)(ViewDashboard);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport { Button } from '@dhis2/ui-core';\n\nexport const ConfirmDeleteDialog = ({\n    dashboardName,\n    onDeleteConfirmed,\n    onContinueEditing,\n    open,\n}) => {\n    const actions = [\n        <Button key=\"cancel\" secondary onClick={onContinueEditing}>\n            {i18n.t('Cancel')}\n        </Button>,\n        <Button key=\"delete\" destructive onClick={onDeleteConfirmed}>\n            {i18n.t('Delete')}\n        </Button>,\n    ];\n\n    return (\n        <Dialog open={open} onClose={onContinueEditing}>\n            <DialogTitle style={{ fontSize: '1.25rem', fontWeight: '450' }}>\n                {i18n.t('Delete dashboard')}\n            </DialogTitle>\n            <DialogContent>\n                <DialogContentText style={{ fontSize: '0.875rem' }}>\n                    {i18n.t(\n                        'Deleting dashboard \"{{ dashboardName }}\" will remove it for all users. This action cannot be undone. Are you sure you want to permanently delete this dashboard?',\n                        { dashboardName }\n                    )}\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>{actions}</DialogActions>\n        </Dialog>\n    );\n};\n\nConfirmDeleteDialog.propTypes = {\n    dashboardName: PropTypes.string,\n    open: PropTypes.bool,\n    onContinueEditing: PropTypes.func,\n    onDeleteConfirmed: PropTypes.func,\n};\n\nexport default ConfirmDeleteDialog;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport ControlBar from './ControlBar';\nimport TranslationDialog from '@dhis2/d2-ui-translation-dialog';\nimport { Button } from '@dhis2/ui-core';\n\nimport ConfirmDeleteDialog from './ConfirmDeleteDialog';\nimport {\n    tSaveDashboard,\n    acClearEditDashboard,\n} from '../../actions/editDashboard';\nimport {\n    tDeleteDashboard,\n    acSetDashboardDisplayName,\n} from '../../actions/dashboards';\nimport {\n    sGetEditDashboardRoot,\n    sGetIsNewDashboard,\n} from '../../reducers/editDashboard';\nimport {\n    CONTROL_BAR_ROW_HEIGHT,\n    MIN_ROW_COUNT,\n    getControlBarHeight,\n} from './controlBarDimensions';\nimport { apiFetchDashboard } from '../../api/dashboards';\n\nimport classes from './styles/DashboardsBar.module.css';\n\nconst buttonBarStyle = {\n    height: CONTROL_BAR_ROW_HEIGHT,\n    paddingTop: '15px',\n    marginLeft: '15px',\n    marginRight: '15px',\n};\n\nexport class EditBar extends Component {\n    state = {\n        translationDialogIsOpen: false,\n        dashboardModel: undefined,\n        confirmDeleteDialogOpen: false,\n        redirectUrl: undefined,\n    };\n\n    onConfirmDelete = () => {\n        this.setState({ confirmDeleteDialogOpen: true });\n    };\n\n    onSave = () => {\n        this.props.onSave().then(newId => {\n            this.setState({ redirectUrl: `/${newId}` });\n        });\n    };\n\n    onDiscard = () => {\n        this.props.onDiscardChanges();\n        const redirectUrl = this.props.dashboardId\n            ? `/${this.props.dashboardId}`\n            : '/';\n        this.setState({ redirectUrl });\n    };\n\n    onContinueEditing = () => {\n        this.setState({ confirmDeleteDialogOpen: false });\n    };\n\n    onDeleteConfirmed = () => {\n        this.setState({ confirmDeleteDialogOpen: false });\n        this.props.onDelete(this.props.dashboardId).then(() => {\n            this.setState({ redirectUrl: '/' });\n        });\n    };\n\n    onTranslationsSaved = async translations => {\n        if (translations && translations.length) {\n            const dbLocale = await this.context.d2.currentUser.userSettings.get(\n                'keyDbLocale'\n            );\n\n            const translation = translations.find(\n                t => t.locale === dbLocale && t.property === 'NAME'\n            );\n\n            if (translation && translation.value) {\n                this.props.onTranslate(\n                    this.props.dashboardId,\n                    translation.value\n                );\n            }\n        }\n    };\n\n    fetchDashboardModel = () => {\n        if (this.props.dashboardId && !this.state.dashboardModel) {\n            apiFetchDashboard(this.props.dashboardId).then(dashboardModel =>\n                this.setState({ dashboardModel })\n            );\n        }\n    };\n\n    componentDidMount() {\n        this.fetchDashboardModel();\n    }\n\n    componentDidUpdate() {\n        this.fetchDashboardModel();\n    }\n\n    toggleTranslationDialog = () => {\n        this.setState({\n            translationDialogIsOpen: !this.state.translationDialogIsOpen,\n        });\n    };\n\n    confirmDeleteDialog = () =>\n        this.props.deleteAccess && this.props.dashboardId ? (\n            <ConfirmDeleteDialog\n                dashboardName={this.props.dashboardName}\n                onDeleteConfirmed={this.onDeleteConfirmed}\n                onContinueEditing={this.onContinueEditing}\n                open={this.state.confirmDeleteDialogOpen}\n            />\n        ) : null;\n\n    translationDialog = () =>\n        this.state.dashboardModel && this.state.dashboardModel.id ? (\n            <TranslationDialog\n                className=\"translation-dialog\"\n                d2={this.context.d2}\n                open={this.state.translationDialogIsOpen}\n                onRequestClose={this.toggleTranslationDialog}\n                objectToTranslate={this.state.dashboardModel}\n                fieldsToTranslate={['name', 'description']}\n                // TODO handle messages in snackbar\n                onTranslationSaved={this.onTranslationsSaved}\n                onTranslationError={err =>\n                    console.log('translation update error', err)\n                }\n            />\n        ) : null;\n\n    render() {\n        if (this.state.redirectUrl) {\n            return <Redirect to={this.state.redirectUrl} />;\n        }\n\n        const { dashboardId, deleteAccess, updateAccess } = this.props;\n        const controlBarHeight = getControlBarHeight(MIN_ROW_COUNT);\n\n        const discardBtnText = updateAccess\n            ? i18n.t('Exit without saving')\n            : i18n.t('Go to dashboards');\n\n        return (\n            <Fragment>\n                <ControlBar height={controlBarHeight} editMode={true}>\n                    <div style={buttonBarStyle}>\n                        {updateAccess ? (\n                            <div className={classes.leftControls}>\n                                <span style={{ marginRight: '15px' }}>\n                                    <Button primary onClick={this.onSave}>\n                                        {i18n.t('Save changes')}\n                                    </Button>\n                                </span>\n\n                                {dashboardId ? (\n                                    <span style={{ marginRight: '15px' }}>\n                                        <Button\n                                            onClick={\n                                                this.toggleTranslationDialog\n                                            }\n                                        >\n                                            {i18n.t('Translate')}\n                                        </Button>\n                                    </span>\n                                ) : null}\n                                {dashboardId && deleteAccess ? (\n                                    <Button onClick={this.onConfirmDelete}>\n                                        {i18n.t('Delete')}\n                                    </Button>\n                                ) : null}\n                            </div>\n                        ) : null}\n\n                        <div className={classes.rightControls}>\n                            <Button secondary onClick={this.onDiscard}>\n                                {discardBtnText}\n                            </Button>\n                        </div>\n                    </div>\n                </ControlBar>\n                {this.translationDialog()}\n                {this.confirmDeleteDialog()}\n            </Fragment>\n        );\n    }\n}\n\nEditBar.propTypes = {\n    dashboardId: PropTypes.string,\n    dashboardName: PropTypes.string,\n    deleteAccess: PropTypes.bool,\n    updateAccess: PropTypes.bool,\n    onDelete: PropTypes.func,\n    onDiscardChanges: PropTypes.func,\n    onSave: PropTypes.func,\n    onTranslate: PropTypes.func,\n};\n\nEditBar.contextTypes = {\n    d2: PropTypes.object,\n};\n\nconst mapStateToProps = state => {\n    const dashboard = sGetEditDashboardRoot(state);\n\n    let deleteAccess;\n    let updateAccess;\n    if (sGetIsNewDashboard(state)) {\n        deleteAccess = true;\n        updateAccess = true;\n    } else {\n        updateAccess = dashboard.access ? dashboard.access.update : false;\n        deleteAccess = dashboard.access ? dashboard.access.delete : false;\n    }\n\n    return {\n        dashboardId: dashboard.id,\n        dashboardName: dashboard.name,\n        deleteAccess,\n        updateAccess,\n    };\n};\n\nconst mapDispatchToProps = dispatch => ({\n    onSave: () => dispatch(tSaveDashboard()).then(id => id),\n    onDelete: id => dispatch(tDeleteDashboard(id)),\n    onDiscardChanges: () => dispatch(acClearEditDashboard()),\n    onTranslate: (id, value) => dispatch(acSetDashboardDisplayName(id, value)),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(EditBar);\n","import React, { Fragment, Component } from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\n\nimport { acSetEditDashboard } from '../../actions/editDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n    sDashboardsIsFetching,\n} from '../../reducers/dashboards';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport DashboardContent from './DashboardContent';\nimport EditBar from '../ControlBar/EditBar';\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nexport const Content = ({ updateAccess }) => {\n    return updateAccess ? (\n        <DashboardContent editMode={true} />\n    ) : (\n        <NoContentMessage text={i18n.t('No access')} />\n    );\n};\n\nContent.propTypes = {\n    updateAccess: PropTypes.bool,\n};\nexport class EditDashboard extends Component {\n    state = {\n        initialized: false,\n    };\n\n    initEditDashboard = () => {\n        if (this.props.dashboard) {\n            this.setState({ initialized: true });\n            this.props.setEditDashboard(this.props.dashboard, this.props.items);\n        }\n    };\n\n    componentDidMount() {\n        this.initEditDashboard();\n    }\n\n    componentDidUpdate() {\n        if (!this.state.initialized) {\n            this.initEditDashboard();\n        }\n    }\n\n    getDashboardContent = () => {\n        const contentNotReady =\n            !this.props.dashboardsLoaded || this.props.id === null;\n\n        return (\n            <div className=\"dashboard-wrapper\">\n                {contentNotReady ? null : (\n                    <Content updateAccess={this.props.updateAccess} />\n                )}\n            </div>\n        );\n    };\n\n    render() {\n        return (\n            <Fragment>\n                <EditBar />\n                <DashboardVerticalOffset editMode={true} />\n                {this.getDashboardContent()}\n            </Fragment>\n        );\n    }\n}\n\nEditDashboard.propTypes = {\n    dashboard: PropTypes.object,\n    dashboardsLoaded: PropTypes.bool,\n    id: PropTypes.string,\n    items: PropTypes.array,\n    setEditDashboard: PropTypes.func,\n    updateAccess: PropTypes.bool,\n};\n\nconst mapStateToProps = state => {\n    const id = sGetSelectedId(state);\n    const dashboard = id ? sGetDashboardById(state, id) : null;\n\n    const updateAccess =\n        dashboard && dashboard.access ? dashboard.access.update : false;\n\n    return {\n        dashboard,\n        id,\n        updateAccess,\n        items: sGetDashboardItems(state),\n        dashboardsLoaded: !sDashboardsIsFetching(state),\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        setEditDashboard: acSetEditDashboard,\n    }\n)(EditDashboard);\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { acSetEditNewDashboard } from '../../actions/editDashboard';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport EditBar from '../ControlBar/EditBar';\nimport DashboardContent from './DashboardContent';\n\nclass NewDashboard extends Component {\n    componentDidMount() {\n        this.props.setNewDashboard();\n    }\n\n    render() {\n        return (\n            <Fragment>\n                <EditBar />\n                <DashboardVerticalOffset editMode={true} />\n                <div className=\"dashboard-wrapper\">\n                    <DashboardContent editMode={true} />\n                </div>\n            </Fragment>\n        );\n    }\n}\n\nNewDashboard.propTypes = {\n    setNewDashboard: PropTypes.func,\n};\n\nexport default connect(\n    null,\n    {\n        setNewDashboard: acSetEditNewDashboard,\n    }\n)(NewDashboard);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { tSelectDashboard } from '../../actions/dashboards';\nimport { sDashboardsIsFetching } from '../../reducers/dashboards';\nimport { EDIT, NEW } from './dashboardModes';\nimport ViewDashboard from './ViewDashboard';\nimport EditDashboard from './EditDashboard';\nimport NewDashboard from './NewDashboard';\n\nclass Dashboard extends Component {\n    setDashboard = () => {\n        if (this.props.dashboardsLoaded) {\n            const id = this.props.match.params.dashboardId || null;\n\n            this.props.selectDashboard(id);\n\n            this.scrollToTop();\n        }\n    };\n\n    scrollToTop = () => {\n        window.scrollTo(0, 0);\n    };\n\n    componentDidMount() {\n        this.setDashboard();\n    }\n\n    componentDidUpdate() {\n        this.setDashboard();\n    }\n\n    render() {\n        switch (this.props.mode) {\n            case EDIT:\n                return <EditDashboard />;\n            case NEW:\n                return <NewDashboard />;\n            default:\n                return <ViewDashboard />;\n        }\n    }\n}\n\nDashboard.propTypes = {\n    dashboardsLoaded: PropTypes.bool,\n    match: PropTypes.object,\n    mode: PropTypes.string,\n    selectDashboard: PropTypes.func,\n};\n\nconst mapStateToProps = state => {\n    return { dashboardsLoaded: !sDashboardsIsFetching(state) };\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        selectDashboard: tSelectDashboard,\n    }\n)(Dashboard);\n","export const EDIT = 'edit';\nexport const NEW = 'new';\nexport const VIEW = 'view';\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { HeaderBar } from '@dhis2/ui-widgets';\nimport { CssVariables } from '@dhis2/ui-core';\n\nimport { EDIT, VIEW, NEW } from './Dashboard/dashboardModes';\nimport { acReceivedUser } from '../actions/user';\nimport { tFetchDashboards } from '../actions/dashboards';\nimport { tSetControlBarRows } from '../actions/controlBar';\nimport { tSetDimensions } from '../actions/dimensions';\nimport Dashboard from './Dashboard/Dashboard';\nimport SnackbarMessage from './SnackbarMessage/SnackbarMessage';\n\nimport 'typeface-roboto';\nimport './App.css';\n\nexport class App extends Component {\n    componentDidMount() {\n        this.props.setCurrentUser(this.props.d2.currentUser);\n        this.props.fetchDashboards();\n        this.props.setControlBarRows();\n        this.props.setDimensions(this.props.d2);\n    }\n\n    getChildContext() {\n        return { baseUrl: this.props.baseUrl, i18n, d2: this.props.d2 };\n    }\n\n    render() {\n        return (\n            <>\n                <CssVariables colors spacers />\n                <div className=\"app-wrapper\">\n                    <div className=\"dashboard-header-bar\">\n                        <HeaderBar appName={i18n.t('Dashboard')} />\n                    </div>\n                    <Router>\n                        <Switch>\n                            <Route\n                                exact\n                                path=\"/\"\n                                render={props => (\n                                    <Dashboard {...props} mode={VIEW} />\n                                )}\n                            />\n                            <Route\n                                exact\n                                path=\"/new\"\n                                render={props => (\n                                    <Dashboard {...props} mode={NEW} />\n                                )}\n                            />\n                            <Route\n                                exact\n                                path=\"/:dashboardId\"\n                                render={props => (\n                                    <Dashboard {...props} mode={VIEW} />\n                                )}\n                            />\n                            <Route\n                                exact\n                                path=\"/:dashboardId/edit\"\n                                render={props => (\n                                    <Dashboard {...props} mode={EDIT} />\n                                )}\n                            />\n                        </Switch>\n                    </Router>\n                    <SnackbarMessage />\n                </div>\n            </>\n        );\n    }\n}\n\nApp.propTypes = {\n    fetchDashboards: PropTypes.func.isRequired,\n    setControlBarRows: PropTypes.func.isRequired,\n    setCurrentUser: PropTypes.func.isRequired,\n    setDimensions: PropTypes.func.isRequired,\n    baseUrl: PropTypes.string,\n    d2: PropTypes.object,\n};\n\nApp.childContextTypes = {\n    baseUrl: PropTypes.string,\n    i18n: PropTypes.object,\n    d2: PropTypes.object,\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setCurrentUser: currentUser => dispatch(acReceivedUser(currentUser)),\n        fetchDashboards: () => dispatch(tFetchDashboards()),\n        setControlBarRows: () => dispatch(tSetControlBarRows()),\n        setDimensions: d2 => dispatch(tSetDimensions(d2)),\n    };\n};\n\nexport default connect(\n    null,\n    mapDispatchToProps\n)(App);\n","import { RECEIVED_USER } from '../reducers/user';\n\nexport const acReceivedUser = value => ({\n    type: RECEIVED_USER,\n    value,\n});\n","//------------------------------------------------------------------------------\n// <auto-generated>\n// This code was generated by d2-i18n-generate.\n//\n// Changes to this file may cause incorrect behavior and will be lost if\n// the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\nimport i18n from '@dhis2/d2-i18n';\nimport moment from 'moment';\nimport 'moment/locale/ar';\nimport 'moment/locale/es';\nimport 'moment/locale/fr';\nimport 'moment/locale/lo';\nimport 'moment/locale/pt';\nimport 'moment/locale/ru';\nimport 'moment/locale/sv';\nimport 'moment/locale/tg';\nimport 'moment/locale/uk';\nimport 'moment/locale/ur';\nimport 'moment/locale/vi';\nimport 'moment/locale/zh-cn';\n\nimport arTranslations from './ar/translations.json';\nimport daTranslations from './da/translations.json';\nimport enTranslations from './en/translations.json';\nimport esTranslations from './es/translations.json';\nimport frTranslations from './fr/translations.json';\nimport idTranslations from './id/translations.json';\nimport kmTranslations from './km/translations.json';\nimport loTranslations from './lo/translations.json';\nimport myTranslations from './my/translations.json';\nimport prsTranslations from './prs/translations.json';\nimport psTranslations from './ps/translations.json';\nimport ptTranslations from './pt/translations.json';\nimport pt_BRTranslations from './pt_BR/translations.json';\nimport ruTranslations from './ru/translations.json';\nimport svTranslations from './sv/translations.json';\nimport tetTranslations from './tet/translations.json';\nimport tgTranslations from './tg/translations.json';\nimport ukTranslations from './uk/translations.json';\nimport urTranslations from './ur/translations.json';\nimport viTranslations from './vi/translations.json';\nimport zhTranslations from './zh/translations.json';\nimport zh_CNTranslations from './zh_CN/translations.json';\n\nconst namespace = 'dashboards-app';\nmoment.locale('en');\n\ni18n.addResources('ar', namespace, arTranslations);\ni18n.addResources('da', namespace, daTranslations);\ni18n.addResources('en', namespace, enTranslations);\ni18n.addResources('es', namespace, esTranslations);\ni18n.addResources('fr', namespace, frTranslations);\ni18n.addResources('id', namespace, idTranslations);\ni18n.addResources('km', namespace, kmTranslations);\ni18n.addResources('lo', namespace, loTranslations);\ni18n.addResources('my', namespace, myTranslations);\ni18n.addResources('prs', namespace, prsTranslations);\ni18n.addResources('ps', namespace, psTranslations);\ni18n.addResources('pt', namespace, ptTranslations);\ni18n.addResources('pt_BR', namespace, pt_BRTranslations);\ni18n.addResources('ru', namespace, ruTranslations);\ni18n.addResources('sv', namespace, svTranslations);\ni18n.addResources('tet', namespace, tetTranslations);\ni18n.addResources('tg', namespace, tgTranslations);\ni18n.addResources('uk', namespace, ukTranslations);\ni18n.addResources('ur', namespace, urTranslations);\ni18n.addResources('vi', namespace, viTranslations);\ni18n.addResources('zh', namespace, zhTranslations);\ni18n.addResources('zh_CN', namespace, zh_CNTranslations);\n\ni18n.setDefaultNamespace(namespace);\ni18n.changeLanguage('en');\n\nexport default i18n;\n","/** @module reducers/selected */\nimport { validateReducer } from '../modules/util';\n\nexport const SET_STYLE = 'SET_STYLE';\n\nexport const DEFAULT_STATE_STYLE = 'LIST';\n\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\nconst style = (state = DEFAULT_STATE_STYLE, action) => {\n    switch (action.type) {\n        case SET_STYLE:\n            return validateReducer(action.value, DEFAULT_STATE_STYLE);\n        default:\n            return state;\n    }\n};\n\nexport default style;\n\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\nexport const sGetStyleRoot = state => state.style;\n","import { combineReducers } from 'redux';\nimport arraySort from 'd2-utilizr/lib/arraySort';\n\nimport dashboards, { sGetDashboardsRoot } from './dashboards';\nimport selected from './selected';\nimport dashboardsFilter, {\n    ownerData,\n    sGetFilterName,\n    sGetFilterOrder,\n    sGetFilterOwner,\n} from './dashboardsFilter';\nimport controlBar from './controlBar';\nimport visualizations from './visualizations';\nimport editDashboard from './editDashboard';\nimport messages from './messages';\nimport user from './user';\nimport snackbar from './snackbar';\nimport itemFilters from './itemFilters';\nimport editItemFilters from './editItemFilters';\nimport style from './style';\nimport dimensions from './dimensions';\nimport settings from './settings';\nimport activeModalDimension from './activeModalDimension';\n\nconst USER = 'system';\n\n// Reducers\n\nexport default combineReducers({\n    dashboards,\n    selected,\n    dashboardsFilter,\n    controlBar,\n    visualizations,\n    messages,\n    user,\n    editDashboard,\n    itemFilters,\n    editItemFilters,\n    style,\n    snackbar,\n    dimensions,\n    settings,\n    activeModalDimension,\n});\n\n// Map constants to data\nconst mapConstToData = {\n    NAME: 'name',\n    ITEMS: 'numberOfItems',\n    CREATED: 'created',\n    OWNER: 'owner',\n};\n\n// Selectors\n\n// Filter dashboards by name\nexport const sFilterDashboardsByName = (dashboards, filter) =>\n    dashboards.filter(d =>\n        d.displayName.toLowerCase().includes(filter.toLowerCase())\n    );\n\n// Filter dashboards by owner, TODO FIXME\nexport const sFilterDashboardsByOwner = (dashboards, filter) => {\n    const ME = ownerData[1]; // TODO\n    const OTHERS = ownerData[2]; // TODO\n\n    switch (filter) {\n        case ME:\n            return dashboards.filter(d => d.owner === USER);\n        case OTHERS:\n            return dashboards.filter(d => d.owner !== USER);\n        default:\n            return dashboards;\n    }\n};\n\n// Filter dashboards by order\nexport const sFilterDashboardsByOrder = (dashboards, filter) => {\n    const filterValues = filter.split(':');\n\n    const key = filterValues[0];\n    const direction = filterValues[1];\n\n    return arraySort(dashboards, direction, mapConstToData[key]);\n};\n\n// Selectors dependency level 2\n\n// Get filtered dashboards\nexport const sGetFilteredDashboards = state => {\n    const dashboards = sGetDashboardsRoot(state);\n\n    const nameFilter = sGetFilterName(state);\n    const ownerFilter = sGetFilterOwner(state);\n    const orderFilter = sGetFilterOrder(state);\n\n    return sFilterDashboardsByOrder(\n        sFilterDashboardsByName(\n            sFilterDashboardsByOwner(dashboards, ownerFilter),\n            nameFilter\n        ),\n        orderFilter\n    );\n};\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport reducer from './reducers';\n\nconst configureStore = () => {\n    const middleware = [thunk];\n\n    // Enable Redux devtools if extension is installed instead of redux-logger\n    const composeEnhancers =\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n    if (\n        !window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ &&\n        process.env.NODE_ENV !== 'production'\n    ) {\n        middleware.push(createLogger());\n    }\n\n    return createStore(\n        reducer,\n        composeEnhancers(applyMiddleware(...middleware))\n    );\n};\n\nexport default configureStore;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport { init as d2Init, config, getManifest, getUserSettings } from 'd2';\nimport dhis2theme from '@dhis2/d2-ui-core/theme/mui3.theme';\n\nimport { Provider as RuntimeProvider } from '@dhis2/app-runtime';\nimport { CssReset } from '@dhis2/ui-core';\n\nimport App from './components/App';\nimport './index.css';\nimport i18n from './locales';\nimport configureStore from './configureStore';\n\nconst muiTheme = () => createMuiTheme(dhis2theme);\n\nconst configI18n = userSettings => {\n    const uiLocale = userSettings.keyUiLocale;\n\n    if (uiLocale && uiLocale !== 'en') {\n        config.i18n.sources.add(`./i18n/i18n_module_${uiLocale}.properties`);\n    }\n\n    config.i18n.sources.add('./i18n/i18n_module_en.properties');\n    i18n.changeLanguage(uiLocale);\n};\n\nconst init = async () => {\n    const manifest = await getManifest('./manifest.webapp');\n\n    // log app info\n    console.info(\n        `Dashboards app, v${manifest.version}, ${\n            manifest.manifest_generated_at\n        }`\n    );\n\n    const isProd = process.env.NODE_ENV === 'production';\n\n    if (\n        !isProd &&\n        (!process.env.REACT_APP_DHIS2_BASE_URL ||\n            !process.env.REACT_APP_DHIS2_AUTHORIZATION)\n    ) {\n        throw new Error(\n            'Missing env variables REACT_APP_DHIS2_BASE_URL and REACT_APP_DHIS2_AUTHORIZATION'\n        );\n    }\n\n    // api config\n    const baseUrl = isProd\n        ? manifest.activities.dhis.href\n        : process.env.REACT_APP_DHIS2_BASE_URL;\n    const authorization = process.env.REACT_APP_DHIS2_AUTHORIZATION;\n\n    config.baseUrl = `${baseUrl}/api/${manifest.dhis2.apiVersion}`;\n    config.headers = isProd ? null : { Authorization: authorization };\n    config.schemas = [\n        'chart',\n        'map',\n        'report',\n        'reportTable',\n        'eventChart',\n        'eventReport',\n        'dashboard',\n        'organisationUnit',\n        'userGroup',\n    ];\n\n    getUserSettings()\n        .then(configI18n)\n        .then(() => d2Init(config))\n        .then(initializedD2 => {\n            ReactDOM.render(\n                <RuntimeProvider\n                    config={{\n                        baseUrl: baseUrl,\n                        apiVersion: manifest.dhis2.apiVersion,\n                    }}\n                >\n                    <CssReset />\n                    <Provider store={configureStore()}>\n                        <MuiThemeProvider theme={muiTheme()}>\n                            <App baseUrl={baseUrl} d2={initializedD2} />\n                        </MuiThemeProvider>\n                    </Provider>\n                </RuntimeProvider>,\n                document.getElementById('root')\n            );\n        });\n};\n\ninit();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"leftControls\":\"DashboardsBar_leftControls__2kr14\",\"rightControls\":\"DashboardsBar_rightControls__2l1lT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuItem\":\"ContentMenuItem_menuItem__2DIcB\",\"launchLink\":\"ContentMenuItem_launchLink__MRANR\",\"label\":\"ContentMenuItem_label__2pIfq\",\"buttonInsert\":\"ContentMenuItem_buttonInsert__1GlZy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemWrap\":\"ItemHeader_itemWrap__3gJiQ\",\"itemHeaderWrap\":\"ItemHeader_itemHeaderWrap__xEKwZ\",\"itemTitle\":\"ItemHeader_itemTitle__3LmXp\",\"itemActionsWrap\":\"ItemHeader_itemActionsWrap__1U5Ex\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ControlBar_root__3LaTt\",\"content\":\"ControlBar_content__1r98-\",\"draghandle\":\"ControlBar_draghandle__1VWa0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FatalErrorBoundary_container__x6zhd\",\"icon\":\"FatalErrorBoundary_icon__2XjC2\",\"message\":\"FatalErrorBoundary_message__2p9y8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ClearButton_button__2yjcV\",\"icon\":\"ClearButton_icon__1fqj8\"};","import isObject from 'lodash/isObject';\nimport { VIS_TYPE_COLUMN, VIS_TYPE_PIVOT_TABLE } from '@dhis2/analytics';\nimport { apiFetchFavorite, getMapFields } from '../../../api/metadata';\nimport {\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_REPORT,\n    EVENT_CHART,\n    itemTypeMap,\n} from '../../../modules/itemTypes';\nimport { getBaseUrl, getWithoutId } from '../../../modules/util';\nimport { getGridItemDomId } from '../../ItemGrid/gridUtil';\n\n//external plugins\nconst itemTypeToExternalPlugin = {\n    [MAP]: 'mapPlugin',\n    [EVENT_REPORT]: 'eventReportPlugin',\n    [EVENT_CHART]: 'eventChartPlugin',\n};\nconst hasIntegratedPlugin = type => [CHART, REPORT_TABLE].includes(type);\n\nconst getPlugin = type => {\n    if (hasIntegratedPlugin(type)) {\n        return true;\n    }\n    const pluginName = itemTypeToExternalPlugin[type];\n\n    return global[pluginName];\n};\n\nexport const THEMATIC_LAYER = 'thematic';\n\nexport const pluginIsAvailable = (item = {}, visualization = {}) => {\n    const type = visualization.activeType || item.type;\n\n    return !!getPlugin(type);\n};\n\nexport const extractFavorite = item => {\n    if (!isObject(item)) {\n        return null;\n    }\n\n    const propName = itemTypeMap[item.type].propName;\n\n    return (\n        item[propName] ||\n        (item.reportTable ||\n            item.chart ||\n            item.map ||\n            item.eventReport ||\n            item.eventChart ||\n            {})\n    );\n};\n\nexport const extractMapView = map =>\n    map.mapViews && map.mapViews.find(mv => mv.layer.includes(THEMATIC_LAYER));\n\nexport const loadPlugin = (plugin, config, credentials) => {\n    if (!(plugin && plugin.load)) {\n        return;\n    }\n\n    plugin.url = credentials.baseUrl;\n    plugin.loadingIndicator = true;\n    plugin.dashboard = true;\n    if (credentials.auth) {\n        plugin.auth = credentials.auth;\n    }\n    plugin.load(config);\n};\n\nexport const getId = item => extractFavorite(item).id;\nexport const getName = item => extractFavorite(item).name;\nexport const getDescription = item => extractFavorite(item).description;\nexport const getLink = (item, d2) => {\n    const baseUrl = getBaseUrl(d2);\n    const appUrl = itemTypeMap[item.type].appUrl(getId(item));\n\n    return `${baseUrl}/${appUrl}`;\n};\n\nexport const load = async (\n    item,\n    visualization,\n    { credentials, activeType }\n) => {\n    const config = {\n        ...visualization,\n        el: getGridItemDomId(item.id),\n    };\n\n    const type = activeType || item.type;\n    const plugin = getPlugin(type);\n\n    loadPlugin(plugin, config, credentials);\n};\n\nexport const fetch = async item => {\n    const fetchedFavorite = await apiFetchFavorite(getId(item), item.type, {\n        fields: item.type === MAP ? getMapFields() : null,\n    });\n\n    return fetchedFavorite;\n};\n\nexport const resize = item => {\n    const plugin = getPlugin(item.type);\n\n    if (plugin && plugin.resize) {\n        plugin.resize(getGridItemDomId(item.id));\n    }\n};\n\nexport const unmount = (item, activeType) => {\n    const plugin = getPlugin(activeType);\n\n    if (plugin && plugin.unmount) {\n        plugin.unmount(getGridItemDomId(item.id));\n    }\n};\n\nexport const getVisualizationConfig = (\n    visualization,\n    originalType,\n    activeType\n) => {\n    if (originalType === MAP && originalType !== activeType) {\n        const extractedMapView = extractMapView(visualization);\n\n        if (extractedMapView === undefined) {\n            return null;\n        }\n\n        return getWithoutId({\n            ...visualization,\n            ...extractedMapView,\n            mapViews: undefined,\n            type: activeType === CHART ? VIS_TYPE_COLUMN : VIS_TYPE_PIVOT_TABLE,\n        });\n    } else if (originalType === REPORT_TABLE && activeType === CHART) {\n        return getWithoutId({ ...visualization, type: VIS_TYPE_COLUMN });\n    } else if (originalType === CHART && activeType === REPORT_TABLE) {\n        return getWithoutId({\n            ...visualization,\n            type: VIS_TYPE_PIVOT_TABLE,\n        });\n    }\n\n    return getWithoutId(visualization);\n};\n","import isFunction from 'd2-utilizr/lib/isFunction';\n\nimport { orObject } from '../../modules/util';\n\n// Dimensions for the react-grid-layout\n\nexport const GRID_COMPACT_TYPE = 'vertical'; // vertical | horizonal | null\nexport const GRID_ROW_HEIGHT = 10;\nconst GRID_COLUMN_WIDTH_PX = 20;\nconst GRID_LAYOUT = 'FLEXIBLE'; // FIXED | FLEXIBLE\nexport const MARGIN = [10, 10];\n\nexport const NEW_ITEM_SHAPE = { x: 0, y: 0, w: 20, h: 29 };\nexport const ITEM_MIN_HEIGHT = 4;\n\n// Dimensions for getShape\n\nconst NUMBER_OF_ITEM_COLS = 2;\nconst GRID_COLUMNS = 60;\n\nexport const getGridColumns = () => {\n    switch (GRID_LAYOUT) {\n        case 'FLEXIBLE':\n            return GRID_COLUMNS;\n        case 'FIXED':\n            return Math.floor((window.innerWidth - 20) / GRID_COLUMN_WIDTH_PX);\n        default:\n            return GRID_COLUMNS;\n    }\n};\n\n// isNonNegativeInteger\n\nconst isNonNegativeInteger = x => Number.isInteger(x) && x >= 0;\n\n// Does the item have all the shape properties?\n\nexport const hasShape = item =>\n    isNonNegativeInteger(item.x) &&\n    isNonNegativeInteger(item.y) &&\n    isNonNegativeInteger(item.w) &&\n    isNonNegativeInteger(item.h);\n\n// returns a rectangular grid block dimensioned with x, y, w, h in grid units.\n// based on a grid with 3 items across\nexport const getShape = i => {\n    if (!isNonNegativeInteger(i)) {\n        throw new Error('Invalid grid block number');\n    }\n\n    const col = i % NUMBER_OF_ITEM_COLS;\n    const row = Math.floor(i / NUMBER_OF_ITEM_COLS);\n    const itemWidth = Math.floor((GRID_COLUMNS - 1) / NUMBER_OF_ITEM_COLS);\n    const itemHeight = GRID_ROW_HEIGHT * 2;\n\n    return {\n        x: col * itemWidth,\n        y: row * itemHeight,\n        w: itemWidth,\n        h: itemHeight,\n    };\n};\n\n/**\n * Calculates the grid item's original height in pixels based\n * on the height in grid units. This calculation\n * is copied directly from react-grid-layout GridItem.js (calcPosition)\n *\n * @param {Object} item item containing shape (x, y, w, h)\n */\nconst getOriginalHeight = item => {\n    const originalHeight = Math.round(\n        GRID_ROW_HEIGHT * item.h + Math.max(0, item.h - 1) * MARGIN[1]\n    );\n\n    return { originalHeight };\n};\n\n/**\n * Returns an array of items containing the x, y, w, h dimensions\n * and the item's originalheight in pixels\n * @function\n * @param {Array} items\n * @returns {Array}\n */\n\nexport const withShape = items =>\n    items.map((item, index) => {\n        const itemWithShape = hasShape(item)\n            ? item\n            : Object.assign({}, item, getShape(index));\n\n        return Object.assign(\n            {},\n            itemWithShape,\n            getOriginalHeight(itemWithShape)\n        );\n    });\n\nexport const getGridItemDomId = id => `item-${id}`;\n\nexport function onItemResize(id) {\n    const el = orObject(document.querySelector(`#${getGridItemDomId(id)}`));\n    if (isFunction(el.setViewportSize))\n        setTimeout(\n            () => el.setViewportSize(el.clientWidth - 5, el.clientHeight - 5),\n            10\n        );\n}\n"],"sourceRoot":""}
{"version":3,"sources":["D2App/components/ItemSelector/styles/CategorizedMenuGroup.module.css","D2App/components/TitleBar/styles/EditTitleBar.module.css","D2App/components/TitleBar/styles/ViewTitleBar.module.css","D2App/components/Item/VisualizationItem/styles/FatalErrorBoundary.module.css","D2App/components/Item/ItemHeader/styles/DeleteItemButton.module.css","D2App/components/Item/ItemHeader/styles/PrintItemInfo.module.css","D2App/components/Item/VisualizationItem/styles/LoadingMask.module.css","D2App/components/Item/VisualizationItem/styles/Item.module.css","D2App/components/Item/ListItem/Item.module.css","D2App/components/Item/PrintTitlePageItem/styles/Item.module.css","D2App/components/FilterBar/styles/FilterBar.module.css","D2App/components/ControlBar/styles/ConfirmDeleteDialog.module.css","D2App/components/Dashboard/styles/PrintInfo.module.css","D2App/components/Dashboard/styles/PrintActionsBar.module.css","D2App/components/Dashboard/styles/PrintLayoutDashboard.module.css","D2App/components/Dashboard/styles/PrintDashboard.module.css","D2App/components/ControlBar/ControlBar.js","D2App/icons/Star.js","D2App/components/ControlBar/DashboardItemChip.js","D2App/api/dataStatistics.js","D2App/icons/AddCircle.js","D2App/icons/Clear.js","D2App/components/ControlBar/ClearButton.js","D2App/reducers/dashboardsFilter.js","D2App/components/ControlBar/Filter.js","D2App/components/ControlBar/ShowMoreButton.js","D2App/components/ControlBar/controlBarDimensions.js","D2App/reducers/controlBar.js","D2App/modules/uiBackendItemConverter.js","D2App/reducers/dashboards.js","D2App/reducers/selected.js","D2App/api/userDataStore.js","D2App/actions/controlBar.js","D2App/api/controlBar.js","D2App/components/ControlBar/DashboardsBar.js","D2App/actions/dashboardsFilter.js","D2App/components/Dashboard/DashboardVerticalOffset.js","D2App/widgets/NoContentMessage.js","D2App/components/ItemSelector/HeaderMenuItem.js","D2App/icons/Launch.js","D2App/components/ItemSelector/ContentMenuItem.js","D2App/reducers/editDashboard.js","D2App/api/editDashboard.js","D2App/reducers/user.js","D2App/api/index.js","D2App/api/dashboards.js","D2App/actions/dashboards.js","D2App/reducers/dimensions.js","D2App/reducers/itemFilters.js","D2App/actions/itemFilters.js","D2App/reducers/messages.js","D2App/components/Item/MessagesItem/actions.js","D2App/api/messages.js","D2App/reducers/alert.js","D2App/actions/alert.js","D2App/reducers/visualizations.js","D2App/actions/visualizations.js","D2App/actions/selected.js","D2App/api/localStorage.js","D2App/api/description.js","D2App/actions/editDashboard.js","D2App/components/ItemSelector/selectableItems.js","D2App/components/ItemSelector/CategorizedMenuGroup.js","D2App/components/ItemSelector/actions.js","D2App/components/ItemSelector/SinglesMenuGroup.js","D2App/components/ItemSelector/ItemSelector.js","D2App/components/TitleBar/EditTitleBar.js","D2App/components/Item/VisualizationItem/assets/icons.js","D2App/components/ItemFilter/FilterDialog.js","D2App/reducers/settings.js","D2App/reducers/activeModalDimension.js","D2App/actions/activeModalDimension.js","D2App/components/ItemFilter/FilterSelector.js","D2App/components/TitleBar/ViewTitleBar.js","D2App/components/TitleBar/TitleBar.js","D2App/components/Item/VisualizationItem/DefaultPlugin.js","D2App/components/Item/VisualizationItem/FatalErrorBoundary.js","D2App/components/Item/ItemHeader/ViewItemActions.js","D2App/components/Item/ItemHeader/DeleteItemButton.js","D2App/components/Item/ItemHeader/EditItemActions.js","D2App/icons/Info.js","D2App/components/Item/ItemHeader/PrintItemInfo.js","D2App/components/Dashboard/dashboardModes.js","D2App/components/Item/ItemHeader/ItemHeader.js","D2App/components/Item/VisualizationItem/ItemHeaderButtons.js","D2App/components/Item/VisualizationItem/ItemFooter.js","D2App/components/Item/VisualizationItem/LoadingMask.js","D2App/modules/memoizeOne.js","D2App/components/Item/VisualizationItem/Item.js","D2App/widgets/Line.js","D2App/components/Item/MessagesItem/Item.js","D2App/components/Item/NotSupportedItem/Item.js","D2App/icons/Description.js","D2App/icons/Delete.js","D2App/components/Item/ListItem/Item.js","D2App/components/Item/ListItem/actions.js","D2App/reducers/printDashboard.js","D2App/components/Item/TextItem/Item.js","D2App/components/Item/AppItem/Item.js","D2App/components/Item/SpacerItem/Item.js","D2App/components/Item/PageBreakItem/Item.js","D2App/components/Item/PrintTitlePageItem/Item.js","D2App/components/Item/Item.js","D2App/components/Item/ProgressiveLoadingContainer.js","D2App/components/ItemGrid/ItemGrid.js","D2App/components/FilterBar/FilterBadge.js","D2App/components/FilterBar/FilterBar.js","D2App/reducers/windowHeight.js","D2App/actions/printDashboard.js","D2App/components/Dashboard/ViewDashboard.js","D2App/components/ControlBar/ConfirmDeleteDialog.js","D2App/components/ControlBar/EditBar.js","D2App/components/Dashboard/PrintInfo.js","D2App/icons/LessHorizontal.js","D2App/components/Dashboard/PrintActionsBar.js","D2App/modules/printUtils.js","D2App/components/ItemGrid/PrintLayoutItemGrid.js","D2App/components/Dashboard/PrintLayoutDashboard.js","D2App/components/Dashboard/EditDashboard.js","D2App/components/Dashboard/NewDashboard.js","D2App/components/ItemGrid/PrintItemGrid.js","D2App/components/Dashboard/PrintDashboard.js","D2App/actions/windowHeight.js","D2App/components/Dashboard/Dashboard.js","D2App/components/AlertBar/AlertBar.js","D2App/actions/user.js","D2App/actions/dimensions.js","D2App/components/App.js","D2App/reducers/style.js","D2App/reducers/index.js","D2App/configureStore.js","D2App/locales/index.js","D2App/AppWrapper.js","D2App/modules/util.js","D2App/modules/itemTypes.js","D2App/components/ItemGrid/gridUtil.js","D2App/components/Item/VisualizationItem/plugin.js","D2App/components/Item/ItemHeader/styles/ItemHeader.module.css","D2App/components/ControlBar/styles/DashboardsBar.module.css","D2App/api/metadata.js","D2App/components/ControlBar/styles/ControlBar.module.css","D2App/components/ControlBar/styles/DashboardItemChip.module.css","D2App/components/ControlBar/styles/ClearButton.module.css","D2App/components/ControlBar/styles/ShowMoreButton.module.css","D2App/components/ItemSelector/styles/ContentMenuItem.module.css"],"names":["module","exports","ControlBar","React","Component","constructor","props","super","onStartDrag","this","setState","dragging","window","addEventListener","onDrag","onEndDrag","event","preventDefault","stopPropagation","newHeight","clientY","onChangeHeight","height","requestAnimationFrame","removeEventListener","state","renderDragHandle","className","classes","draghandle","style","onMouseDown","render","Math","max","rootStyle","Object","assign","backgroundColor","editMode","colors","yellow050","white","paddingBottom","transition","root","content","children","defaultProps","StarIcon","xmlns","viewBox","d","fill","DashboardItemChip","starred","selected","label","dashboardId","chipProps","selectedState","unselected","icon","Star","link","to","onClick","debounce","async","eventType","id","d2","getInstance","url","Api","getApi","post","apiPostDataStatistics","AddCircleIcon","width","teal600","ClearIcon","grey800","ClearButton","onClear","button","Clear","color","ownerData","value","DEFAULT_STATE_DASHBOARDS_FILTER_OWNER","combineReducers","name","action","type","validateReducer","owner","order","sGetDashboardsFilterRoot","dashboardsFilter","sGetFilterName","styles","filterField","fontSize","top","searchIcon","grey700","Filter","setFilterValue","onChangeName","target","handleKeyUp","keyCode","onKeypressEnter","componentWillReceiveProps","nextProps","startAdornment","position","endAdornment","placeholder","i18n","t","onChange","onKeyUp","Function","prototype","withStyles","ShowMoreButton","isMaxHeight","disabled","textAlign","showMore","getRowsHeight","rows","getControlBarHeight","FIRST_ROW_PADDING_HEIGHT","userRows","sGetControlBarUserRows","controlBar","sGetControlBarRoot","spacerContent","isTextType","item","TEXT","text","convertUiItemsToBackend","items","map","SPACER","isUiSpacerType","convertBackendItemsToUi","isBackendSpacerType","gridProperties","getGridItemProperties","DEFAULT_STATE_DASHBOARDS","byId","EMPTY_DASHBOARD","updateDashboardProp","prop","sGetDashboardsRoot","dashboards","sGetDashboardById","orObject","sDashboardsIsFetching","sGetAllDashboards","sGetDashboardItems","sGetStarredDashboards","values","filter","dashboard","sGetUnstarredDashboards","getCustomDashboards","data","arrayFrom","displayName","description","displayDescription","favorite","user","created","split","join","substr","lastUpdated","access","numberOfItems","orArray","dashboardItems","length","isLoading","showDescription","sGetSelectedRoot","sGetSelectedId","sGetSelectedIsLoading","sGetSelectedShowDescription","hasNamespace","currentUser","dataStore","has","getNamespace","get","create","apiPostUserDataStoreValue","key","set","apiGetUserDataStoreValue","defaultValue","namespace","keys","find","k","console","log","acSetControlBarUserRows","tSetControlBarRows","controlBarRows","apiGetControlBarRows","dispatch","err","error","DashboardsBar","setInitialDashboardState","adjustedHeight","newRows","floor","newRowCount","min","apiPostControlBarRows","onToggleMaxHeight","onSelectDashboard","history","push","componentDidMount","selectedId","onChangeFilterName","rowCount","controlBarHeight","contentWrapperStyle","padding","overflowY","leftControls","display","textDecoration","marginRight","AddCircle","mapDispatchToProps","withRouter","connect","stateProps","dispatchProps","ownProps","displayDashboards","arraySort","toLowerCase","includes","marginTop","NoContentMessage","fontWeight","grey600","HeaderMenuItem","title","dense","LaunchIcon","LaunchLink","e","launchLink","rel","href","Launch","InsertButton","buttonInsert","ContentMenuItem","onInsert","visType","ItemIcon","getItemIcon","renderedItemIcon","VISUALIZATION","visTypeIcons","menuItem","DEFAULT_STATE_EDIT_DASHBOARD","NEW_DASHBOARD_STATE","printPreviewView","sGetEditDashboardRoot","editDashboard","sGetIsEditing","isEmpty","sGetIsPrintPreviewView","sGetEditDashboardItems","onError","saveDashboard","w","h","save","then","msg","response","uid","DEFAULT_STATE_USER","username","uiLocale","isSuperuser","sGetUserUsername","getDashboardItemsFields","withFavorite","arrayClean","getListItemFields","getFavoritesFields","withDimensions","getDashboardFields","withItems","getIdNameFields","rename","apiFetchDashboard","models","fields","catch","tFetchDashboards","collection","list","paging","toArray","arrayToIdMap","tStarDashboard","isStarred","delete","apiStarDashboard","acSetDashboardStarred","onSuccess","tDeleteDashboard","apiDeleteDashboard","Promise","resolve","DEFAULT_DIMENSIONS","getDimensionById","DIMENSION_ID_PERIOD","DIMENSION_ID_ORGUNIT","sGetDimensions","dimensions","DEFAULT_STATE_ITEM_FILTERS","sGetItemFiltersRoot","itemFilters","sGetNamedItemFilters","createSelector","filters","reduce","arr","dimension","acRemoveItemFilter","sGetMessagesRoot","messages","tGetMessages","getMessages","messageConversations","sGetAlertMessage","alert","acClearAlertMessage","DEFAULT_STATE_VISUALIZATIONS","p","undefined","sGetVisualization","visualizations","sGetVisualizationsRoot","acAddVisualization","acSetSelectedId","acSetSelectedIsLoading","acSetSelectedShowDescription","tSetSelectedDashboardById","getState","alertTimeout","setTimeout","customDashboard","withShape","localStorage","setItem","forEach","REPORT_TABLE","CHART","MAP","EVENT_REPORT","EVENT_CHART","extractFavorite","MESSAGES","clearTimeout","tSetShowDescription","apiGetShowDescription","tUpdateShowDescription","apiPostShowDescription","acClearEditDashboard","acAddDashboardItem","itemPropName","itemTypeMap","propName","generateUid","gridItemProperties","shape","PAGEBREAK","yPos","getPageBreakItemShape","isStatic","PRINT_TITLE_PAGE","getPrintTitlePageItemShape","NEW_ITEM_SHAPE","acUpdateDashboardItem","acRemoveDashboardItem","tSaveDashboard","dashboardToSave","postDashboard","singleItems","header","categorizedItems","USERS","REPORTS","RESOURCES","APP","listItemTypes","CategorizedMenuGroup","addItem","tAddListItemContent","newItem","toggleSeeMore","seeMore","onChangeItemsLimit","hasMore","itemUrl","getItemUrl","context","showMoreButton","margin","contextTypes","PropTypes","object","isRequired","listItemType","dashboardItemIndex","findIndex","dashboardItem","category","addToDashboard","ItemSearchField","onFocus","ItemSelector","closeList","open","openList","_","fetchItems","anchorEl","currentTarget","setFilter","getCategorizedMenuGroups","itemType","endPointName","itemCount","getDefaultItemCount","allItems","maxOptions","slice","pluralTitle","getSinglesMenuGroups","getMenuGroups","concat","add","Set","queryString","onClose","anchorOrigin","horizontal","vertical","transformOrigin","PaperProps","disableAutoFocus","disableEnforceFocus","disableRestoreFocus","maxWidth","EditTitleBar","onChangeTitle","onChangeDescription","section","titleDescription","itemSelector","selectedDashboard","ThreeDots","SpeechBubble","fillRule","transform","Warning","FilterDialog","displayNameProperty","initiallySelectedItems","addItemFilter","removeItemFilter","setFilters","useState","onSelectItems","dimensionId","onDeselectItems","itemIdsToRemove","newList","onReorderItems","itemIds","oldList","reorderedList","large","commonProps","onSelect","onDeselect","onReorder","selectedItems","selectedPeriods","ouItems","renderDialogContent","secondary","primary","filterItems","DEFAULT_SETTINGS","keyDateFormat","keyAnalysisRelativePeriod","keyAnalysisDigitGroupSeparator","rootOrganisationUnit","sGetSettings","settings","sGetSettingsDisplayNameProperty","DEFAULT_STATE_ACTIVE_MODAL_DIMENSION","sGetActiveModalDimension","activeModalDimension","acSetActiveModalDimension","clearActiveModalDimension","setActiveModalDimension","showPopover","setShowPopover","ref","useRef","onCloseDialog","onClickOutside","reference","arrow","placement","onDimensionClick","selectedIds","ViewTitleBar","moreOptionsIsOpen","setMoreOptionsIsOpen","sharingDialogIsOpen","setSharingDialogIsOpen","redirectUrl","setRedirectUrl","onToggleStarredDashboard","onShowHideDescription","toggleSharingDialog","toggleMoreOptions","titleStyle","cursor","userSelect","StarBorder","showHideDescriptionLabel","toggleStarredDashboardLabel","buttonRef","createRef","userAccess","titleBar","actions","titleBarIcon","strip","update","editLink","manage","marginLeft","paddingTop","onRequestClose","black","minWidth","TitleBar","edit","DefaultPlugin","pluginCredentials","shouldPluginReload","prevProps","reloadAllowed","filtersChanged","vis","visualization","prevVis","visChanged","activeType","reloadPlugin","pluginManager","currentVis","useActiveType","credentials","getActiveType","baseUrl","getBaseUrl","auth","defaultHeaders","Authorization","options","componentDidUpdate","componentWillUnmount","getGridItemDomId","textDiv","FatalErrorBoundary","errorFound","componentDidCatch","info","container","message","ViewItemActions","actionButtons","itemActionsWrap","DeleteItemButton","deleteItemButton","red500","itemId","WarningIcon","PrintWarning","warning","Info","EDIT","NEW","PRINT","PRINT_LAYOUT","isEditMode","mode","isPrintMode","isViewMode","ItemHeader","forwardRef","dashboardMode","isShortened","rest","Actions","EditItemActions","PrintItemInfo","getItemActionsMap","itemHeaderWrap","itemTitle","iconFill","ItemHeaderButtons","setAnchorEl","onSelectActiveType","isTrackerType","isTrackerDomainType","onViewTable","handleClose","onViewChart","onViewMap","canViewAs","isSingleValue","isYearOverYear","VIS_TYPE_GAUGE","VIS_TYPE_PIE","interpretationMenuLabel","activeFooter","ViewAsMenuItems","hasMapView","pluginIsAvailable","small","Boolean","appName","getAppName","getLink","onToggleFooter","scrollContainer","line","border","grey100","ItemFooter","objectId","getId","LoadingMask","center","memoizeOne","fn","lastArgs","lastValue","args","every","arg","i","Item","showFooter","configLoaded","pluginIsLoaded","applyFilters","visRows","obj","visColumns","columns","visFilters","dimensionFound","dimensionObjects","getUniqueKey","uniqueId","getPluginComponent","memoizedGetVisualizationConfig","calculatedHeight","originalHeight","headerRef","current","clientHeight","ITEM_CONTENT_PADDING_BOTTOM","memoizedGetContentStyle","contentRef","offsetHeight","memoizedApplyFilters","onLoadingComplete","forDashboard","mapViews","layer","hideTitle","onToggleItemExpanded","getContentStyle","measuredHeight","preferMeasured","onVisualizationLoaded","prevState","shortened","acSetActiveVisualizationType","grey200","Line","messageTypes","VALIDATION_RESULT","TICKET","SYSTEM","listStyleType","paddingLeft","seeAll","marginBottom","sender","lineHeight","snippet","maxHeight","overflow","MessagesItem","getMessageHref","msgIdentifier","messageType","getMessageSender","latestMsg","getMessageItems","modeClass","readClass","read","msgDate","document","location","messageCount","formatDate","userSettings","string","MessagesContainer","NotSupportedItem","justifyContent","alignItems","align","DescriptionIcon","grey500","DeleteIcon","getItemTitle","ListItem","tRemoveListItemContent","contentItems","index","array","el","getContentItems","contentItem","Description","itemicon","deleteButton","deletebutton","deleteicon","grey900","newContent","DEFAULT_STATE_PRINT_DASHBOARD","DEFAULT_DASHBOARD_ITEMS","NEW_PRINT_DASHBOARD_STATE","sGetPrintDashboardRoot","printDashboard","sGetIsPrinting","sGetPrintDashboardItems","whiteSpace","textField","fontStretch","onChangeText","updatedItem","viewItem","textDivStyle","editItem","onEdit","multiline","fullWidth","printItem","textItem","getIframeSrc","appDetails","iframeSrc","launchUrl","ouIds","ouPath","AppItem","appKey","system","installedApps","app","src","SpacerItem","PageBreakItem","PrintTitlePageItem","titlePage","filterTitle","listItems","filterListItem","val","filterList","getItemFilterList","viewDashboard","sGetPrintDashboardName","sGetPrintDashboardDescription","GridItem","VisualizationItem","TextItem","getGridItem","ProgressiveLoadingContainer","shouldLoad","containerRef","shouldLoadHandler","handlerOptions","passive","checkShouldLoad","bufferPx","bufferFactor","innerHeight","rect","getBoundingClientRect","bottom","removeHandler","registerHandler","debounceMs","getElementsByClassName","eventProps","pick","ItemGrid","expandedItems","clickedId","isExpanded","onLayoutChange","newLayout","acUpdateDashboardLayout","onResizeStop","layout","oldItem","onItemResize","isVisualizationType","pluginResize","adjustHeightForExpanded","expandedItem","getItemComponent","itemClassNames","getItemComponents","translucent","MARGIN","cols","getGridColumns","rowHeight","GRID_ROW_HEIGHT","innerWidth","compactType","GRID_COMPACT_TYPE","isDraggable","isResizable","draggableCancel","validItems","hasShape","badgeContainer","borderRadius","badge","badgeRemove","FilterBadge","onRemove","count","FilterBar","onBadgeRemove","onBadgeClick","bar","removeItemFIlter","DEFAULT_STATE_WINDOW_HEIGHT","sGetWindowHeight","windowHeight","acSetPrintDashboard","acClearPrintDashboard","acAddPrintDashboardItem","isOneItemPerPage","acUpdatePrintDashboardItem","dashboardIsEditing","dashboardIsPrinting","clearEditDashboard","clearPrintDashboard","useEffect","querySelector","scroll","ConfirmDeleteDialog","dashboardName","onDeleteConfirmed","onContinueEditing","destructive","buttonBarStyle","EditBar","translationDialogIsOpen","dashboardModel","confirmDeleteDialogOpen","onConfirmDelete","onSave","newId","onPrintPreview","isPrintPreviewView","clearPrintPreview","showPrintPreview","onDiscard","onDiscardChanges","onDelete","onTranslationsSaved","translations","dbLocale","translation","locale","property","onTranslate","fetchDashboardModel","toggleTranslationDialog","confirmDeleteDialog","deleteAccess","translationDialog","objectToTranslate","fieldsToTranslate","onTranslationSaved","onTranslationError","renderActionButtons","printPreviewText","updateAccess","discardBtnText","rightControls","topMargin","sGetIsNewDashboard","acSetDashboardDisplayName","PrintInfo","isLayout","a4LandscapeWidthPx","infoHeader","infoWrapper","infoList","divider","LessHorizontalIcon","PrintActionsBar","inner","LessHorizontal","print","getTransformYPx","elStyle","transformY","match","parseInt","PrintLayoutItemGrid","updateDashboardLayout","isFirstPageBreak","pageBreaks","sortedPageBreaks","sortBy","y","cx","isEditing","hideExtraPageBreaks","sortedElements","elements","types","elementsWithBoundingRect","Array","from","classList","indexOf","bottomY","getDomGridItemsSortedByYPos","querySelectorAll","pageBreakBottom","lastItemBottom","foundNonPageBreak","thisItemBottom","gridElement","firstBreak","scrollArea","EDIT_BAR_HEIGHT","isLeapPage","n","x","getMultiple","factor","multiple","PrintLayoutDashboard","initialized","initPrintLayoutDashboard","setPrintDashboard","MAX_ITEM_GRID_HEIGHT","updateDashboardItem","addDashboardItem","yPosList","pageNum","addPageBreaks","getWrapperStyle","fromEdit","spacers","dp24","wrapper","pageOuter","EditDashboard","initEditDashboard","setEditDashboard","renderGrid","NewDashboard","setNewDashboard","PrintItemGrid","PrintDashboard","initPrintDashboard","sortedItems","spacerCount","removeDashboardItem","MAX_ITEM_GRID_WIDTH_OIPP","MAX_ITEM_GRID_HEIGHT_OIPP","dashboardMap","dashboardsIsEmpty","dashboardsLoaded","routeId","params","selectDashboard","dashboardToSelect","preferredId","getItem","dash","sGetDashboardsSortedByStarred","setWindowHeight","getElementsByTagName","remove","setHeaderbarVisibility","onResize","onHidden","permanent","tSetDimensions","displayNameProp","apiFetchDimensions","acSetDimensions","dim","dimensionType","dataDimensionType","App","setCurrentUser","fetchDashboards","setControlBarRows","setShowDescription","setDimensions","getChildContext","exact","path","AlertBar","childContextTypes","objectClean","conversations","$merge","d2Object","keyUiLocale","authorities","newState","$splice","$unshift","idToRemove","stateItems","layoutHasChanged","newStateItems","stateItem","si","configureStore","middleware","thunk","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducer","applyMiddleware","addResources","arTranslations","ar_IQTranslations","daTranslations","enTranslations","esTranslations","frTranslations","idTranslations","kmTranslations","loTranslations","myTranslations","nbTranslations","prsTranslations","psTranslations","ptTranslations","pt_BRTranslations","ruTranslations","svTranslations","tetTranslations","tgTranslations","ukTranslations","urTranslations","uz_CyrlTranslations","viTranslations","zhTranslations","zh_CNTranslations","appConfig","schemas","authorization","process","REACT_APP_DHIS2_AUTHORIZATION","headers","AppWrapper","store","theme","createMuiTheme","dhis2theme","i18nRoot","param","isArray","isObject","global","Intl","DateTimeFormat","year","month","day","format","Date","replace","api","idx","getWithoutId","domainType","defaultItemCount","appUrl","getTime","getEndPointName","TableIcon","ChartIcon","MapIcon","ExtensionIcon","PersonIcon","FontDownloadIcon","EmailIcon","CropFreeIcon","NotInterestedIcon","isNonNegativeInteger","Number","isInteger","minH","GRID_COLUMNS","static","itemWithShape","Error","col","row","itemWidth","MAX_ITEM_GRID_WIDTH","itemHeight","getShape","round","getOriginalHeight","isFunction","setViewportSize","clientWidth","itemTypeToExternalPlugin","getPlugin","hasIntegratedPlugin","reportTable","chart","eventReport","eventChart","getName","load","config","plugin","loadingIndicator","loadPlugin","fetch","apiFetchFavorite","getMapFields","resize","unmount","getVisualizationConfig","originalType","extractedMapView","mv","VIS_TYPE_COLUMN","VIS_TYPE_PIVOT_TABLE","getDimensionFields","getAxesFields","getFavoriteFields","withOptions"],"mappings":"kHACAA,EAAOC,QAAU,CAAC,eAAiB,+C,4CCAnCD,EAAOC,QAAU,CAAC,QAAU,8BAA8B,iBAAmB,uCAAuC,MAAQ,4BAA4B,YAAc,kCAAkC,aAAe,qC,qBCAvND,EAAOC,QAAU,CAAC,QAAU,8BAA8B,SAAW,+BAA+B,SAAW,+BAA+B,aAAe,mCAAmC,MAAQ,4BAA4B,SAAW,iC,4CCA/OD,EAAOC,QAAU,CAAC,UAAY,sCAAsC,KAAO,iCAAiC,QAAU,sC,qBCAtHD,EAAOC,QAAU,CAAC,iBAAmB,6C,qBCArCD,EAAOC,QAAU,CAAC,QAAU,iC,qBCA5BD,EAAOC,QAAU,CAAC,OAAS,8B,qBCA3BD,EAAOC,QAAU,CAAC,QAAU,wB,4CCA5BD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,KAAO,mBAAmB,SAAW,uBAAuB,KAAO,mBAAmB,WAAa,yBAAyB,aAAe,6B,qBCAvLD,EAAOC,QAAU,CAAC,UAAY,wBAAwB,KAAO,mBAAmB,YAAc,0BAA0B,YAAc,0BAA0B,WAAa,yBAAyB,eAAiB,+B,qBCAvND,EAAOC,QAAU,CAAC,IAAM,yB,qBCAxBD,EAAOC,QAAU,CAAC,QAAU,uC,qBCA5BD,EAAOC,QAAU,CAAC,YAAc,+BAA+B,WAAa,8BAA8B,KAAO,wBAAwB,SAAW,4BAA4B,QAAU,6B,qBCA1LD,EAAOC,QAAU,CAAC,UAAY,mCAAmC,UAAY,mCAAmC,MAAQ,+BAA+B,KAAO,gC,qBCA9JD,EAAOC,QAAU,CAAC,QAAU,sCAAsC,UAAY,0C,4CCA9ED,EAAOC,QAAU,CAAC,QAAU,gCAAgC,UAAY,oC,8l2FCKxE,MAAMC,UAAmBC,IAAMC,UAC7BC,YAAYC,GACVC,MAAMD,GADW,KAOnBE,YAAc,KACZC,KAAKC,SAAS,CACZC,UAAU,IAEZC,OAAOC,iBAAiB,YAAaJ,KAAKK,QAC1CF,OAAOC,iBAAiB,UAAWJ,KAAKM,YAZvB,KAcnBD,OAASE,IACPA,EAAMC,iBACND,EAAME,kBACN,MAAMC,EAAYH,EAAMI,QAEpBX,KAAKH,MAAMe,gBAAkBF,IAAcV,KAAKH,MAAMgB,QAAUH,EAAY,GAC9EI,sBAAsB,KACpBd,KAAKH,MAAMe,eAAeF,MArBb,KAyBnBJ,UAAY,KACVN,KAAKC,SAAS,CACZC,UAAU,IAEZC,OAAOY,oBAAoB,YAAaf,KAAKK,QAC7CF,OAAOY,oBAAoB,UAAWf,KAAKM,WAEvCN,KAAKH,MAAMS,WACbN,KAAKH,MAAMS,aA/BbN,KAAKgB,MAAQ,CACXd,UAAU,GAkCde,mBACE,MAA4C,oBAA9BjB,KAAKH,MAAMe,eAAgC,yBAAKM,UAAWC,IAAQC,WAAYC,MAAO,CAClGR,OA1C4B,GA2C3BS,YAAatB,KAAKD,cAAkB,KAGzCwB,SACE,MAAMV,EAASW,KAAKC,IAAIzB,KAAKH,MAAMgB,OAAQ,GA/Cb,EAgDxBa,EAAYC,OAAOC,OAAO,CAC9Bf,SACAgB,gBAAiB7B,KAAKH,MAAMiC,SAAWC,IAAOC,UAAYD,IAAOE,MACjEC,cAnD4B,GAqD9BlC,KAAKgB,MAAMd,SAAW,CACpBiC,WAAY,QACV,IACJ,OAAO,yBAAKd,MAAOK,EAAWR,UAAWC,IAAQiB,MACrC,yBAAKlB,UAAWC,IAAQkB,SAAUrC,KAAKH,MAAMyC,UAC5CtC,KAAKiB,qBAsCtBxB,EAAW8C,aAAe,CACxB3B,eAAgB,KAChBN,UAAW,MAEEb,Q,kBC1FA+C,MAXE,EACftB,eACI,yBAAKA,UAAWA,EAAWuB,MAAM,6BAA6BC,QAAQ,aACpE,0BAAMC,EAAE,gBAAgBC,KAAK,SAC7B,0BAAMD,EAAE,6FACR,0BAAMA,EAAE,gBAAgBC,KAAK,U,+BC0BtBC,MA1BkB,EAC/BC,UACAC,WACAC,QACAC,kBAEA,MAAMC,EAAY,CAChBH,YAGF,GAAID,EAAS,CACX,MAAMK,EAAgBJ,EAAW5B,IAAQ4B,SAAW5B,IAAQiC,WAC5DF,EAAUG,KAAO,kBAACC,EAAD,CAAUpC,UAAS,UAAKC,IAAQkC,KAAb,YAAqBF,KAG3D,OAAO,kBAAC,IAAD,CAAMjC,UAAWC,IAAQoC,KAAMC,GAAE,WAAMP,GAAeQ,QAASC,IAAS,ICtB5CC,OAAOC,EAAWC,KACrD,MAAMC,QAAWC,wBACXC,EAAG,mCAA+BJ,EAA/B,qBAAqDC,GAC9DC,EAAGG,IAAIC,SAASC,KAAKH,IDmBgEI,CAAsB,iBAAkBnB,GAAc,MACjI,kBAAC,IAASC,EAAYF,KEjBnBqB,MAJO,IAAM,yBAAK5B,MAAM,6BAA6B6B,MAAM,KAAKzD,OAAO,KAAK+B,KAAMb,IAAOwC,QAAS7B,QAAQ,aACjH,0BAAMC,EAAE,0M,sDCUD6B,MAVG,EAChBtD,eACI,yBAAKA,UAAWA,EAAW0B,KAAMb,IAAO0C,QAAShC,MAAM,6BAA6BC,QAAQ,aAC1F,0BAAMC,EAAE,0GACR,0BAAMA,EAAE,gBAAgBC,KAAK,U,kBCMtB8B,MAVY,EACzBC,aACI,4BAAQzD,UAAWC,IAAQyD,OAAQnB,QAASkB,GAC1C,8BACI,kBAACE,EAAD,CAAW3D,UAAWC,IAAQkC,KAAMyB,MAAM,a,kBCN/C,MAGMC,EAAY,CAAC,CACxBlB,GAAI,MACJmB,MAAO,aACN,CACDnB,GAAI,KACJmB,MAAO,iBACN,CACDnB,GAAI,SACJmB,MAAO,sBAsBIC,EAAwCF,EAAU,GAAGlB,GAiCnDqB,kBAAgB,CAC7BC,KA/BW,CAACnE,EAJsC,GAIQoE,KAC1D,OAAQA,EAAOC,MACb,IAtCsC,6BAuCpC,OAAOC,YAAgBF,EAAOJ,MAPgB,IAShD,QACE,OAAOhE,IA0BXuE,MAtBY,CAACvE,EAAQiE,EAAuCG,KAC5D,OAAQA,EAAOC,MACb,IA/CuC,8BAgDrC,OAAOC,YAAgBF,EAAOJ,MAjBgB,IAmBhD,QACE,OAAOhE,IAiBXwE,MAbY,CAACxE,EA1CT,WA0CwDoE,KAC5D,OAAQA,EAAOC,MACb,IAxDuC,8BAyDrC,OAAOC,YAAgBF,EAAOJ,MA7C9B,YA+CF,QACE,OAAOhE,MAUN,MAAMyE,EAA2BzE,GAASA,EAAM0E,iBAE1CC,EAAiB3E,GAASyE,EAAyBzE,GAAOmE,KClEjES,EAAS,CACbC,YAAa,CACXC,SAAU,OACVxB,MAAO,QACPzD,OAAQ,OACRkF,IAAK,QAEPC,WAAY,CACVlB,MAAO/C,IAAOkE,QACd3B,MAAO,OACPzD,OAAQ,SAKL,MAAMqF,UAAevG,YAC1BC,YAAYC,GACVC,MAAMD,GADW,KAanBsG,eAAiB5F,IACfA,EAAMC,iBACNR,KAAKH,MAAMuG,aAAa7F,EAAM8F,OAAOrB,QAfpB,KAiBnBsB,YAAc/F,IACZ,OAAQA,EAAMgG,SACZ,KAtBuB,GAuBrBvG,KAAKH,MAAM2G,kBACX,MAEF,KAzBwB,GA0BtBxG,KAAKH,MAAMuG,iBAtBfpG,KAAKgB,MAAQ,CACXgE,MDK8C,ICDlDyB,0BAA0BC,GACxB1G,KAAKC,SAAS,CACZ+E,MAAO0B,EAAUvB,OAuBrB5D,SACE,MAAM,QACJJ,EADI,KAEJgE,EAFI,aAGJiB,GACEpG,KAAKH,MACH8G,EAAiB,kBAAC,IAAD,CAAgBC,SAAS,SACpC,kBAAC,IAAD,CAAY1F,UAAWC,EAAQ6E,cAErCa,EAAwB,KAAT1B,GAAwB,OAATA,EAAgB,kBAAC,IAAD,CAAgByB,SAAS,OAC7D,kBAAC,EAAD,CAAajC,QAAS,IAAMyB,OACZ,KAChC,OAAO,kBAAC,IAAD,CAAYlF,UAAWC,EAAQ0E,YAAaiB,YAAaC,IAAKC,EAAE,0BAA2BL,eAAgBA,EAAgBE,aAAcA,EAAc7B,MAAOhF,KAAKgB,MAAMgE,MAAOiC,SAAUjH,KAAKmG,eAAgBe,QAASlH,KAAKsG,eAUxOJ,EAAO3D,aAAe,CACpB4C,KAAM,GACNiB,aAAce,SAASC,WAEVC,2BAAWzB,EAAXyB,CAAmBnB,G,qBC7DnBoB,OAlBe,EAC5B7D,UACA8D,cACAC,cAEO,yBAAKnG,MAAO,CACjBoG,UAAW,WAEFD,EAAW,yBAAKtG,UAAWC,KAAQqG,UAAWT,IAAKC,EAAE,cAAsB,yBAAK9F,UAAWC,KAAQuG,SAAUjE,QAASA,GAC9G8D,EAAcR,IAAKC,EAAE,aAAeD,IAAKC,EAAE,eCbzD,MAMMW,GAAgBC,GANS,GAO7BA,EAKIC,GAAsBD,GAC1BD,GAAcC,GATeE,GCWvB5C,mBAAgB,CAC7B6C,SAXe,CAAC/G,EAF2B,EAEYoE,KACvD,OAAQA,EAAOC,MACb,IALoC,2BAMlC,OAAOC,YAAgBF,EAAOJ,MALS,GAOzC,QACE,OAAOhE,MAcN,MAEMgH,GAAyBhH,GAFJA,IAASA,EAAMiH,WAEFC,CAAmBlH,GAAO+G,S,6CC1BlE,MAAMI,GAAgB,+CAOvBC,GAAaC,GAAQA,EAAKhD,OAASiD,MAAQD,EAAKE,OAASJ,GAElDK,GAA0BC,GAASA,EAAMC,IAAIL,IACxD,IAAIE,EAAO,KAQX,MAbqBF,IAAQA,EAAKhD,OAASsD,KAOvCC,CAAeP,GACjBE,EAAOJ,GACEC,GAAWC,KACpBE,EAAOF,EAAKE,MAdoB,6BAiB3B,2BAAKF,GACNE,EAAO,CACTA,QACE,MAGKM,GAA0BJ,GAASA,EAAMC,IAAIL,IACxD,MAAMhD,EAtBoBgD,IAAQA,EAAKhD,OAASiD,MAAQD,EAAKE,OAASJ,GAsBzDW,CAAoBT,GAAQM,KAASN,EAAKhD,KACjD0D,EAAiBC,aAAsBX,EAAKxE,IAC5C0E,EAAOH,GAAWC,GA1BU,8BA0BFA,EAAKE,KAAgC,GAAKF,EAAKE,KAAO,KACtF,OAAO,uCAAKF,GACG,OAATE,EAAgB,CAClBA,QACE,IAHN,IAIElD,QACG0D,KCzBME,GAA2B,CACtCC,KAAM,KACNT,MAAO,IAEIU,GAAkB,GAEzBC,GAAsB,EAC1BpI,QACAiC,cACAoG,OACArE,YAJ0B,CAM1BkE,KAAK,2BAAMlI,EAAMkI,MAAb,IACF,CAACjG,GAAD,2BAAoBjC,EAAMkI,KAAKjG,IAA/B,IACE,CAACoG,GAAOrE,MAGZyD,MAAOzH,EAAMyH,QA8DR,MAAMa,GAAqBtI,GAASA,EAAMuI,WAgBpCC,GAAoB,CAACxI,EAAO6C,IAAO4F,YAASH,GAAmBtI,GAAOkI,MAAMrF,GAC5E6F,GAAwB1I,GACO,OAAnCsI,GAAmBtI,GAAOkI,KAUtBS,GAAoB3I,GAASyI,YAASH,GAAmBtI,GAAOkI,MAShEU,GAAqB5I,GAASsI,GAAmBtI,GAAOyH,MAExDoB,GAAwB7I,GAASW,OAAOmI,OAAOH,GAAkB3I,IAAQ+I,OAAOC,IAAmC,IAAtBA,EAAUlH,SACvGmH,GAA0BjJ,GAASW,OAAOmI,OAAOH,GAAkB3I,IAAQ+I,OAAOC,IAAmC,IAAtBA,EAAUlH,SAezGoH,GAAsBC,GAAQC,KAAUD,GAAMzB,IAAI/F,IAAC,CAC9DkB,GAAIlB,EAAEkB,GACNsB,KAAMxC,EAAEwC,KACRkF,YAAa1H,EAAE0H,YACfC,YAAa3H,EAAE2H,YACfC,mBAAoB5H,EAAE4H,mBACtBzH,QAASH,EAAE6H,SACXjF,MAAO5C,EAAE8H,KAAKtF,KACduF,QAAS/H,EAAE+H,QAAQC,MAAM,KAAKC,KAAK,KAAKC,OAAO,EAAG,IAClDC,YAAanI,EAAEmI,YAAYH,MAAM,KAAKC,KAAK,KAAKC,OAAO,EAAG,IAC1DE,OAAQpI,EAAEoI,OACVC,cAAeC,YAAQtI,EAAEuI,gBAAgBC,OACzCD,eAAgBrC,GAAwBlG,EAAEuI,mBC7G7BhG,mBAAgB,CAC7BrB,GA/BS,CAAC7C,EAX6B,KAWMoE,KAC7C,OAAQA,EAAOC,MACb,IAhB2B,kBAiBzB,OAAOC,YAAgBF,EAAOJ,MAdK,MAgBrC,QACE,OAAOhE,IA0BXoK,UAtBgB,CAACpK,GApB6B,EAoBaoE,KAC3D,OAAQA,EAAOC,MACb,IAzBkC,yBA0BhC,OAAOC,YAAgBF,EAAOJ,OAvBY,GAyB5C,QACE,OAAOhE,IAiBXqK,gBAbsB,CAACrK,GA7B6B,EA6BmBoE,KACvE,OAAQA,EAAOC,MACb,IAlCwC,+BAmCtC,OAAOC,YAAgBF,EAAOJ,OAhCkB,GAkClD,QACE,OAAOhE,MAUN,MAAMsK,GAAmBtK,GAASA,EAAM+B,SAClCwI,GAAiBvK,GAASsK,GAAiBtK,GAAO6C,GAClD2H,GAAwBxK,GAASsK,GAAiBtK,GAAOoK,UACzDK,GAA8BzK,GAASsK,GAAiBtK,GAAOqK,gBCtD/DK,GAAe/H,eAAoBG,EAAG6H,YAAYC,UAAUC,IADhD,aAEZC,GAAenI,MAAOG,EAAI4H,IAAiBA,QAAqB5H,EAAG6H,YAAYC,UAAUG,IAF7E,mBAEoGjI,EAAG6H,YAAYC,UAAUI,OAF7H,aAGZC,GAA4BtI,MAAOuI,EAAKlH,KACnD,MAAMlB,QAAWC,+BACA+H,GAAahI,EAAI4H,KAC/BS,IAAID,EAAKlH,IAEDoH,GAA2BzI,MAAOuI,EAAKG,KAAkB,IAAD,EACnE,MAAMvI,QAAWC,wBACXuI,QAAkBR,GAAahI,QAAU4H,GAAa5H,IAG5D,OAFY,OAAGwI,QAAH,IAAGA,GAAH,UAAGA,EAAWC,YAAd,aAAG,EAAiBC,KAAKC,GAAKA,IAAMP,UAGjCI,EAAUP,IAAIG,UAErBD,GAA0BC,EAAKG,GACrCK,QAAQC,IAAI,mDACLN,IChBEO,GAA0BhF,IAAI,CACzCvC,KLDsC,2BKEtCL,MAAO4C,IAGIiF,GAAqB,IAAMlJ,UAUtC,IACE,MAAMmJ,OChB0BnJ,gBAAkByI,GAD1B,iBNEiB,GKeZW,GAC7B,YAVAC,EAASJ,GAUQE,IACjB,MAAOG,GACP,OATcC,EASCD,EARfP,QAAQC,IAAI,iCAAkCO,GACvCA,EAFOA,O,yBEQX,MAAMC,WAAsBxN,YAAW,eAAD,oBAC3CqB,MAAQ,CACN4G,KRpByB,GQkBgB,KAI3CwF,yBAA2BxF,IACzB5H,KAAKC,SAAS,CACZ2H,OACAL,YARuB,KAQVK,KAP0B,KAmB3ChH,eAAiBF,IACf,MAAM2M,EAAiB3M,EAAY,GAE7B4M,EAAU9L,KAAKC,IRxCI,GAOOZ,EQiC6BwM,ERhCxD7L,KAAK+L,OAAO1M,EANiBiH,IAJA,MASFjH,MQmChC,GAAIyM,IAAYtN,KAAKgB,MAAM4G,KAAM,CAC/B,MAAM4F,EAAchM,KAAKiM,IAAIH,EA1BN,IA2BvBtN,KAAKH,MAAMe,eAAe4M,KA1Ba,KA6B3ClN,UAAY,ID9CuBqD,gBAAuBsI,GAFhC,iBAE+EjH,GC+ChG0I,CAAsB1N,KAAKgB,MAAM4G,MA9BC,KAgC3C+F,kBAAoB,KAClB,MAAM/F,EAlCmB,KAkCZ5H,KAAKgB,MAAM4G,KAAyB5H,KAAKH,MAAMkI,SAlCnC,GAmCzB/H,KAAKC,SAAS,CACZ2H,OACAL,aAAcvH,KAAKgB,MAAMuG,eApCc,KAuC3CqG,kBAAoB,KAClB5N,KAAKH,MAAMgO,QAAQC,KAAnB,WAA4B9N,KAAKH,MAAM0J,WAAW,GAAG1F,MA7BvDkK,oBACE/N,KAAKoN,yBAAyBpN,KAAKH,MAAMkI,UAG3CtB,0BAA0BC,GACxB1G,KAAKoN,yBAAyB1G,EAAUqB,UA2B1CxG,SACE,MAAM,WACJgI,EADI,KAEJpE,EAFI,WAGJ6I,EAHI,mBAIJC,GACEjO,KAAKH,MACHqO,EAAWlO,KAAKgB,MAAMuG,YAnDH,GAmDiCvH,KAAKgB,MAAM4G,KAC/DuG,EAAmBtG,GAAoBqG,GACvCE,EAAsB,CAC1BC,QAAQ,GAAD,ORxE2B,GQwE3B,gBACPC,UAAWtO,KAAKgB,MAAMuG,YAAc,OAAS,SAC7C1G,OAAQ8G,GAAcuG,GR1EY,IQ4EpC,OAAO,kBAAC,EAAD,CAAYrN,OAAQsN,EAAkBvN,eAAgBZ,KAAKY,eAAgBN,UAAWN,KAAKM,UAAWwB,UAAU,GAC3G,yBAAKT,MAAO+M,GACR,yBAAKlN,UAAWC,KAAQoN,cACpB,kBAAC,IAAD,CAAMlN,MAAO,CACzBmN,QAAS,eACTC,eAAgB,OAChBC,YAAa,GACb9H,SAAU,WACVb,IAAK,OACJvC,GAAI,QACW,kBAACmL,EAAD,OAEJ,kBAAC,EAAD,CAAQxJ,KAAMA,EAAMiB,aAAc6H,EAAoBzH,gBAAiBxG,KAAK4N,qBAE/E3C,YAAQ1B,GAAYb,IAAIsB,GAAa,kBAAC,EAAD,CAAMkC,IAAKlC,EAAUnG,GAAIb,MAAOgH,EAAUK,YAAavH,QAASkH,EAAUlH,QAASG,YAAa+G,EAAUnG,GAAId,SAAUiH,EAAUnG,KAAOmK,MAEnL,kBAAC,GAAD,CAAgBvK,QAASzD,KAAK2N,kBAAmBpG,YAAavH,KAAKgB,MAAMuG,YAAaC,SA1EzE,KA0EmFxH,KAAKH,MAAMkI,aAM3H,MAOM6G,GAAqB,CACzBhO,eAAgBgM,GAChBqB,mBC3G6BjJ,IAAK,CAClCK,KZDwC,6BYExCL,WD+Ha6J,mBAAWC,YA/BF9N,IAAK,CAC3BuI,WAAYI,GAAkB3I,GAC9BmE,KAAMQ,EAAe3E,GACrB+G,SAAUC,GAAuBhH,GACjCgN,WAAYzC,GAAevK,KA2BsB4N,GAnBhC,CAACG,EAAYC,EAAeC,KAC7C,MAAM1F,EAAa5H,OAAOmI,OAAOL,YAASsF,EAAWxF,aAC/C2F,EAAoBC,IAAU5F,EAAWQ,OAAOpH,GAAKA,EAAE0H,YAAY+E,cAAcC,SAASN,EAAW5J,KAAKiK,gBAAiB,MAAO,eACxI,OAAO,mDAAKL,GACPE,GACAD,GAFL,IAGEzF,WAAY,IAAI2F,EAAkBnF,OAAOpH,GAAKA,EAAEG,YAAaoM,EAAkBnF,OAAOpH,IAAMA,EAAEG,aAaxEgM,CAAyD3B,KE5GpE2B,mBARS9N,IAAK,CAC3B+G,SAAUC,GAAuBhH,KAOpB8N,CAhBiBjP,IAC9B,MAAM+H,EAAO/H,EAAMiC,SVLQ,EUKmBjC,EAAMkI,SAC9CuH,EAAYzH,GAAoBD,GpBLN,EoBMhC,OAAO,yBAAK1G,UAAU,4BAA4BG,MAAO,CACvDiO,iBCMWC,OAdiB,EAC9BhH,UACI,yBAAKlH,MAAO,CAChBgN,QAAS,YACT5G,UAAW,SACX3B,SAAU,OACV0J,WAAY,IACZ1K,MAAO/C,IAAO0N,UAEPlH,G,qBCIMmH,OAZQ,EACrBC,WACI,kBAAC,IAAD,CAAUC,OAAK,EAAC1D,IAAKyD,EAAOnI,UAAQ,EAACxE,MAAO,0BAAM3B,MAAO,CAC7DyD,MAAO/C,IAAO0C,QACd+K,WAAY,QAEGG,K,UCIFE,OAVI,EACjB3O,eACI,yBAAKA,UAAWA,EAAWuB,MAAM,6BAA6B6B,MAAM,KAAKzD,OAAO,KAAK+B,KAAMb,IAAO0N,QAAS/M,QAAQ,aACjH,0BAAMC,EAAE,gBAAgBC,KAAK,SAC7B,0BAAMD,EAAE,wI,qBCChB,MAAMmN,GAAa,EACjB9L,SACI,uBAAGP,QAASsM,GAAKA,EAAEtP,kBAAmBS,UAAWC,KAAQ6O,WAAY3J,OAAO,SAAS4J,IAAI,sBAAsBC,KAAMlM,GACnH,kBAACmM,GAAD,OAOFC,GAAe,IAAM,4BAAQlP,UAAWC,KAAQkP,cAAetJ,IAAKC,EAAE,WAkC7DsJ,OAhCS,EACtBjL,OACAF,OACAoL,WACAvM,MACAwM,cAEA,MAAMC,EAAWC,aAAYrL,GACvBsL,EAAmBtL,IAASuL,KAAgBC,KAAaL,GAAW,kBAACC,EAAD,CAAUpP,MAAO,CACzFuB,KAAMb,IAAO0N,WAEf,OAAO,kBAAC,IAAD,CAAUG,OAAK,EAACnM,QAAS8M,EAAUvN,MAAO,yBAAK9B,UAAWC,KAAQ2P,UACvD,yBAAK5P,UAAWC,KAAQ6B,OACpB,0BAAM3B,MAAO,CAC7BqN,YAAa,QAEQiC,GAEL,8BAAOxL,GACNnB,EAAM,kBAAC8L,GAAD,CAAY9L,IAAKA,IAAU,MAEtC,kBAACoM,GAAD,U,qBCtCb,MAWMW,GAA+B,GAC/BC,GAAsB,CACjCnN,GAAI,GACJsB,KAAM,GACN4F,OAAQ,GACRT,YAAa,GACbY,eAAgB,GAChB+F,kBAAkB,GA6Hb,MAAMC,GAAwBlQ,GAASA,EAAMmQ,cAEvCC,GAAgBpQ,IAAUqQ,IAAQrQ,EAAMmQ,eACxCG,GAAyBtQ,GAASkQ,GAAsBlQ,GAAOiQ,iBAM/DM,GAAyBvQ,GAASyI,YAASyH,GAAsBlQ,IAAQkK,e,cC1JtF,MAAMsG,GAAUtE,GAASR,QAAQC,IAAI,UAAWO,GAE1CuE,GAAgB,CAACzH,EAAWG,KAChC,MAAM,KACJhF,EADI,YAEJmF,EAFI,eAGJY,GACEf,EAOJ,OANAH,EAAU7E,KAAOA,EACjB6E,EAAUM,YAAcA,EACxBN,EAAUkB,eAAiBA,EAAexC,IAAIL,GAAQ1G,OAAOC,OAAO,GAAIyG,EAAM,CAC5E/D,MAAO+D,EAAKqJ,EACZ7Q,OAAQwH,EAAKsJ,KAER3H,EAAU4H,OAAOC,KAAKC,GAAOA,EAAIC,SAASC,MCftCC,GAAqB,CAChCpO,GAAI,GACJqO,SAAU,GACVC,SAAU,GACVC,aAAa,GAwBR,MACMC,GAAmBrR,GAASA,EAAMyJ,KAAKyH,S,mCC3B7C,MAAMV,GAAUtE,GAASR,QAAQC,IAAI,UAAWO,GAE1CoF,GAA0B,EACrCC,gBACE,KAAOC,KAAW,CAAC,KAAM,OAAQ,QAAS,IAAK,IAAK,kBAAmB,mBAAoB,WAAY,OAAQ,SAA7F,UAA0GC,eAAoB7H,KAAK,MAAQ2H,EAAY,UAAMG,aAAmB,CACpMC,eAAgBJ,EAAaI,iBAC5B/H,KAAK,MAFqK,KAIhKgI,GAAqB,EAChCC,YACAN,gBACE,KAAOC,KAAW,CAAC,GAAD,OAAIM,eAAkBlI,KAAK,MAAQ,cAAe,qBAAsB,WAAxE,eAA4FkI,aAAgB,CAChIC,QAAQ,IACPnI,KAAK,KAFc,KAEL,UAAW,cAAe,SAAUiI,EAAS,yBAAqBP,GAAwB,CACzGC,iBACC3H,KAAK,KAFsD,UCPjDoI,GAAoBnP,GAAME,wBAAc8N,KAAK/N,GAAMA,EAAGmP,OAAOjJ,UAAU+B,IAAIlI,EAAI,CAC1FqP,OAAQV,KAAWI,GAAmB,CACpCC,WAAW,EACXN,aAAc,CACZI,gBAAgB,MAEhB/H,KAAK,QACPuI,MAAM3B,ICgBG4B,GAAmB,IAAMzP,UACpC,MAAM0P,QD7BgCtP,wBAAc8N,KAAK/N,GAAMA,EAAGmP,OAAOjJ,UAAUsJ,KAAK,CACxFJ,OAAQ,CAACN,KAAqBhI,KAAK,KAAM,sBAAsBA,KAAK,KACpE2I,OAAQ,WACNJ,MAAM3B,ICEqBjI,MAyB7ByD,GAzB6BzD,EAyBJ8J,EAAWG,UAzBG,CACvCnO,KjBL4B,iBiBM5BL,MAAOyO,YAAavJ,GAAoBX,QAoD7BmK,GAAiB,CAAC7P,EAAI8P,IAAchQ,UAW/C,IAEE,YD1D4B,EAACE,EAAI8P,KACnC,MAAM3P,EAAG,qBAAiBH,EAAjB,aACTE,wBAAc8N,KAAK/N,IACb6P,EACF7P,EAAGG,IAAIC,SAASC,KAAKH,GAErBF,EAAGG,IAAIC,SAAS0P,OAAO5P,MCmDnB6P,CAAiBhQ,EAAI8P,GAXX9P,KAChBmJ,EAhDiC,EAAC/J,EAAa0Q,KAAd,CACnCtO,KjBXmC,wBiBYnCpC,YAAaA,EACb+B,MAAO2O,IA6CIG,CAAsBjQ,EAAI8P,IAC5B9P,GAUAkQ,CAAUlQ,GACjB,MAAOoJ,GACP,OATcC,EASCD,EARfP,QAAQC,IAAI,6BAA8BO,GACnCA,EAFOA,OAYL8G,GAAmBnQ,GAAMF,UACpC,IAGE,YDzD8BE,IACzBE,wBAAc8N,KAAK/N,GACjBA,EAAGmP,OAAO1J,WAAWwC,IAAIlI,GAAIgO,KAAK7H,GAAaA,EAAU4J,WAC/DT,MAAM3B,ICoDDyC,CAAmBpQ,SACnBmJ,EAASoG,MACRc,QAAQC,UACf,MAAOlH,GAEP,OADAP,QAAQC,IAAI,4BAA6BM,GAClCA,ICtFEmH,GAAqB,CAACC,aAAiBC,MAAsBD,aAAiBE,OAYpF,MAAMC,GAAiBxT,GAASA,EAAMyT,W,eCZtC,MAIMC,GAA6B,GAiCnC,MAAMC,GAAsB3T,GAASA,EAAM4T,YAGrCC,GAAuBC,aAAe,CAACH,GAAqBH,IAAiB,CAACO,EAASN,IAAe9S,OAAO4K,KAAKwI,GAASC,OAAO,CAACC,EAAKpR,KACnJoR,EAAInH,KAAK,CACPjK,GAAIA,EACJsB,KAAMsP,EAAWjI,KAAK0I,GAAaA,EAAUrR,KAAOA,GAAIsB,KACxD2E,OAAQiL,EAAQlR,GAAI6E,IAAI1D,IAAK,CAC3BnB,GAAImB,EAAMnB,GACVsB,KAAMH,EAAMqF,aAAerF,EAAMG,UAG9B8P,GACN,KC7CUE,GAAqBtR,IAAE,CAClCwB,KDHgC,qBCIhCxB,OCUK,MAAMuR,GAAmBpU,GAASA,EAAMqU,SCPlCC,GAAe,IAAM3R,UAChC,IACE,MAAM0R,OCbiB,MACzB,MACMrR,EAAG,uCADM,qHACN,gCACT,OAAOD,wBAAc8N,KAAK/N,GAAMA,EAAGG,IAAIC,SAAS6H,IAAI/H,IAAMmP,MAAMjG,GAASR,QAAQC,IAAI,SAAUO,KDUtEqI,IACjB,qBACJC,GACEH,EACJ,OAAOrI,EAV0B,CACnC3H,KDP+B,oBCQ/BL,MAQmCwQ,IACjC,MAAOvI,GACP,OAjBa7H,EAiBE,eAjBM8H,EAiBUD,EAhBjCP,QAAQC,IAAR,0BAA+BvH,EAA/B,aAA0C8H,IACnCA,EAFO,IAAC9H,EAAQ8H,GEiBlB,MAAMuI,GAAmBzU,GAASA,EAAM0U,MCflCC,GAAsB,MACjCtQ,KDLiC,wB,yBEG5B,MAEMuQ,GAA+B,GAEtCvE,GAAUwE,QAAWC,IAAND,GAAyB,OAANA,EA2BjC,MAEME,GAAoB,CAAC/U,EAAO6C,IAFH7C,IAASA,EAAMgV,eAG5CC,CAAuBjV,GAAO6C,GCrC1BqS,GAAqBlR,IAAK,CACrCK,KDE+B,oBCD/BL,U,cCaK,MAAMmR,GAAkBnR,IAAK,CAClCK,K3Bd6B,kB2Be7BL,UAEWoR,GAAyBpR,IAAK,CACzCK,K3BjBoC,yB2BkBpCL,UAEWqR,GAA+BrR,IAAK,CAC/CK,K3BpB0C,+B2BqB1CL,UAGWsR,GAA4BzS,GAAMF,MAAOqJ,EAAUuJ,KAC9DvJ,EAASoJ,IAAuB,IAChC,MAAMI,EAAeC,WAAW,KAAO,IAAD,EACpC,MAAMtR,EAAI,UAAGqE,GAAkB+M,IAAY1S,UAAjC,aAAG,EAAmCwG,YAE5CmB,GAAsB+K,MAAepR,GACvC6H,EHlCgC,CACpC3H,KDF+B,oBCG/BL,MGgC+B,GAAD,OAAI+B,IAAKC,EAAE,qBAAX,aAAoC7B,MAE/D,KAEG4O,EAAYhR,IX1BcwG,MW2B9ByD,GX3B8BzD,EW2BFxG,EX3BY,CAC1CsC,KjBR4B,iBiBS5BL,MAAOyO,YAAavJ,GAAoBX,OW0BtC,MAAMmN,EAAkBxM,GAAoBnH,GAAU,GXdvBiC,IY1BOkN,EAAUjP,EDsEhD,OA7BA+J,EXfoC,CACtC3H,KjBnBiC,sBiBoBjCL,MWa+B2R,aAAUD,EAAgBxL,kBCzCjBgH,ED0CZG,GAAiBkE,KC1CKtT,ED0CQY,ECzC1D+S,aAAaC,QAAb,kCAAgD3E,GAAYjP,GD0C1DyT,EAAgBxL,eAAe4L,QAAQzO,IACrC,OAAQA,EAAKhD,MACX,KAAK0R,KACL,KAAKC,KACL,KAAKC,KACL,KAAKC,KACL,KAAKC,KACHnK,EAASkJ,GAAmBkB,aAAgB/O,KAC5C,MAEF,KAAKgP,KACHrK,EAASsI,SAQXzR,IAAO0H,GAAegL,MACxBvJ,ERrD4B,CAChC3H,KDVgC,uBSiE9B2H,EAASmJ,GAAgBtS,IACzBmJ,EAASoJ,IAAuB,IAChCkB,aAAad,GACbxJ,EHjE+B,CACjC3H,KDLiC,wBIsExBtC,GAQT,IAEE,OAAOgR,QADiBf,GAAkBnP,IAE1C,MAAOoJ,GACP,OATcC,EASCD,EARfP,QAAQC,IAAI,UAAWO,GAChBA,EAFOA,OAYLqK,GAAsB,IAAM5T,UAUvC,IACE,MAAM0H,OE9F2B1H,gBAAkByI,GAD1B,mB7BMyB,G2ByFpBoL,GAC9B,YAVAxK,EAASqJ,GAUQhL,IACjB,MAAO4B,GACP,OATcC,EASCD,EARfP,QAAQC,IAAI,kCAAmCO,GACxCA,EAFOA,OAYLuK,GAAyBzS,GAASrB,UAU7C,IAEE,YE/GkCA,gBAAuBsI,GAFhC,kBAEgFjH,GF8GnG0S,CAAuB1S,QAT7BgI,EAASqJ,GAA6BrR,IAWtC,MAAOiI,GACP,OATcC,EASCD,EARfP,QAAQC,IAAI,kCAAmCO,GACxCA,EAFOA,OGhFLyK,GAAuB,MAClCtS,KnBxBkC,yBmB4CvBuS,GAAqBvP,IAChC,MAAMhD,EAAOgD,EAAKhD,YACXgD,EAAKhD,KACZ,MAAMwS,EAAeC,KAAYzS,GAAM0S,SACjClU,EAAKmU,yBACLC,EAAqBjP,aAAsBnF,GACjD,IAAIqU,EAEJ,GAAI7S,IAAS8S,KAAW,CACtB,MAAMC,EAAO/P,EAAK+P,MAAQ,EAC1BF,EAAQG,aAAsBD,EAAM/P,EAAKiQ,eAEzCJ,EADS7S,IAASkT,KACVC,eAEAC,KAGV,MAAO,CACLpT,KnB1D8B,qBmB2D9BL,MAAM,qCACJnB,KACAwB,OACAuB,SAAUyB,EAAKzB,UAAY,KAC3B,CAACiR,GAAexP,EAAKhG,SAClBoW,MACAR,GACAC,KAIIQ,GAAwBrQ,IAAI,CACvChD,KnBrEmC,wBmBsEnCL,MAAOqD,IAEIsQ,GAAwB3T,IAAK,CACxCK,KnB1EmC,wBmB2EnCL,UAGW4T,GAAiB,IAAMjV,MAAOqJ,EAAUuJ,KACnD,MAAMvM,EAAYkH,GAAsBqF,KAClCsC,EAAe,2BAAQ7O,GAAR,IACnBkB,eAAgB1C,GAAwBwB,EAAUkB,gBAClD/F,KAAM6E,EAAU7E,MAAQ4B,IAAKC,EAAE,wBAGjC,IACE,MAAM/D,EAAc4V,EAAgBhV,SlB7ETsG,EkB6EoC0O,ElB5E1D9U,wBAAc8N,KAAK/N,GACjBA,EAAGmP,OAAO1J,WAAWwC,IAAI5B,EAAKtG,IAAIgO,KAAK7H,GAAayH,GAAczH,EAAWG,KACnFgJ,MAAM3B,UAEkBrH,IACpBpG,wBAAc8N,KAAK/N,IACxB,MAAMkG,EAAYlG,EAAGmP,OAAO1J,WAAWyC,SACvC,OAAOyF,GAAczH,EAAWG,KkBqEwD2O,CAAcD,GAGtG,OAFA7L,EArEgC,CAClC3H,KnBxBkC,+BmB6F1B2H,EAASsJ,GAA0BrT,IAClCiR,QAAQC,QAAQlR,GACvB,MAAOiK,GA1FKA,KACdR,QAAQC,IAAI,6BAA8BO,IA0FxCsE,CAAQtE,GlBlFmB/C,OmBjBlB4O,GAAc,CAAC,CAC1BlV,GAAI,aACJmV,OAAQjS,IAAKC,EAAE,oBACfyB,MAAO,CAAC,CACNpD,KAAMiD,KACNnD,KAAM4B,IAAKC,EAAE,YACb3E,QAAS,IACR,CACDgD,KAAMgS,KACNlS,KAAM4B,IAAKC,EAAE,YACb3E,QAAS,QACR,CACDgD,KAAMsD,KACNxD,KAAM4B,IAAKC,EAAE,UACb3E,QAAS,OAIA4W,GAAmB,CAACrI,KAAeqG,KAAKC,KAAcC,KAAa+B,KAAOC,KAASC,KAAWC,MAE9FC,GAAgB,CAACH,KAASC,KAAWF,M,0BCTlD,MAAMK,WAA6B5Z,YACjCC,YAAYC,GACVC,MAAMD,GADW,KAOnB2Z,QAAUnR,GAAQ,KAChB,MAAM,KACJhD,EADI,mBAEJuS,EAFI,oBAGJ6B,GACEzZ,KAAKH,MAET,GAAIwF,IAASgU,KACXzB,EAAmB,CACjBvS,OACAhD,QAASgG,EAAK6D,UAEX,CACL,MAAMwN,EAAU,CACd7V,GAAIwE,EAAKxE,GACTsB,KAAMkD,EAAKgC,aAAehC,EAAKlD,MAG7BmU,GAAcjK,SAAShK,GACzBoU,EAAoBpU,EAAMqU,GAE1B9B,EAAmB,CACjBvS,OACAhD,QAASqX,MA9BE,KAmCnBC,cAAgB,KACd3Z,KAAKC,SAAS,CACZ2Z,SAAU5Z,KAAKgB,MAAM4Y,UAEvB5Z,KAAKH,MAAMga,mBAAmB7Z,KAAKH,MAAMwF,OArCzCrF,KAAKgB,MAAQ,CACX4Y,SAAS,GAuCbrY,SACE,MAAM,MACJoO,EADI,KAEJtK,EAFI,MAGJoD,EAHI,QAIJqR,GACE9Z,KAAKH,MACT,OAAO,oCACK,kBAAC,GAAD,CAAgB8P,MAAOA,IACtBlH,EAAMC,IAAIL,IACnB,MAAM0R,EAAUC,aAAW3U,EAAMgD,EAAMrI,KAAKia,QAAQnW,IACpD,OAAO,kBAAC,GAAD,CAAiBoI,IAAK7D,EAAKxE,IAAMwE,EAAK6D,IAAK7G,KAAMA,EAAMmL,QAASnL,IAASuL,KAAgBvI,EAAKhD,KAAOA,EAAMF,KAAMkD,EAAKgC,aAAehC,EAAKlD,KAAMoL,SAAUvQ,KAAKwZ,QAAQnR,GAAOrE,IAAK+V,MAEjLD,EAAU,kBAAC,IAAD,CAAUlK,OAAK,EAAC1D,IAAG,kBAAayD,GAASlM,QAASzD,KAAK2Z,cAAe3W,MAAO,4BAAQ9B,UAAWC,KAAQ+Y,gBAClGla,KAAKgB,MAAM4Y,QAAU7S,IAAKC,EAAE,cAAgBD,IAAKC,EAAE,gBACxC,KAC5B,kBAAC,IAAD,CAASmT,OAAO,cAehCZ,GAAqBa,aAAe,CAClCtW,GAAIuW,IAAUC,OAAOC,YAERzL,mBAAQ,KAAM,CAC3B8I,sBACA6B,oBCzFiC,CAACpU,EAAMhD,IAAY,CAAC2K,EAAUuJ,KAC/D,MAAMvV,EAAQuV,IACRiE,EAAe1C,KAAYzS,GAAM0S,SACjC7M,EAAiBgG,GAAsBlQ,GAAOkK,eAC9CuP,EAAqBvP,EAAewP,UAAUrS,GAAQA,EAAKhD,OAASA,GAC1E,IAAIsV,EAEAF,GAAsB,GACxBE,EAAgBzP,EAAeuP,GAC/BE,EAAcH,GAAc1M,KAAKzL,GACjC2K,EAAS0L,GAAsBiC,MAE/BA,EAAgB,CACdtV,KAAMA,EACNhD,QAAS,CAACA,IAEZ2K,EAAS4K,GAAmB+C,ODuEjB7L,CAGZyK,IEhEYzK,mBAAQ,KAAM,CAC3B8I,uBADa9I,CAvBiB,EAC9B8I,qBACAgD,eAEA,MAAMC,EAAiB,EACrBxV,OACAhD,aACI,KACJuV,EAAmB,CACjBvS,OACAhD,aAIJ,OAAO,oCACG,kBAAC,GAAD,CAAgBsN,MAAOiL,EAAS5B,SAC/B4B,EAASnS,MAAMC,IAAIL,GAAQ,kBAAC,GAAD,CAAiB6D,IAAK7D,EAAKhD,KAAMA,KAAMgD,EAAKhD,KAAMF,KAAMkD,EAAKlD,KAAMoL,SAAUsK,EAAexS,S,QCXpI,MAAMyS,GAAkBjb,GAAS,kBAAC,IAAD,CAAYsF,KAAK,wBAAwBnC,MAAO+D,IAAKC,EAAE,6CAA8C3B,KAAK,OAAO4B,SAAUpH,EAAMoH,SAAU8T,QAASlb,EAAMkb,QAAS/V,MAAOnF,EAAMmF,QAEjN,MAAMgW,WAAqBtb,IAAMC,UAC/BC,YAAYC,GACVC,MAAMD,GADW,KAWnBob,UAAY,KACVjb,KAAKC,SAAS,CACZib,MAAM,EACNnR,OAAQ,MAdO,KAiBnBoR,SAAW,CAACC,EAAG7a,KACbP,KAAKqb,aACLrb,KAAKC,SAAS,CACZqb,SAAU/a,EAAMgb,cAChBL,MAAM,KArBS,KAwBnBM,UAAY,CAACJ,EAAG7a,KACdP,KAAKC,SAAS,CACZ8J,OAAQxJ,EAAM8F,OAAOrB,OACpBhF,KAAKqb,aA3BS,KA6BnBI,yBAA2B,IAAMxC,GAAiBlP,OAAO1E,IACvD,MAAMqW,EAAW5D,KAAYzS,GAC7B,OAAOrF,KAAKgB,MAAMyH,OAASzI,KAAKgB,MAAMyH,MAAMiT,EAASC,gBACpDjT,IAAIrD,IACL,MAAMqW,EAAW5D,KAAYzS,GACvBuW,EAAYC,aAAoBxW,GAChCyW,EAAW9b,KAAKgB,MAAMyH,MAAMiT,EAASC,cACrC7B,EAAUgC,EAAS3Q,OAASyQ,EAC5BnT,EAAQzI,KAAKgB,MAAM+a,WAAWlQ,IAAI6P,EAAS7X,IAAMiY,EAAWA,EAASE,MAAM,EAAGJ,GACpF,OAAO,kBAAC,GAAD,CAAsB1P,IAAK7G,EAAMA,KAAMA,EAAMsK,MAAO+L,EAASO,YAAaxT,MAAOA,EAAOoR,mBAAoB7Z,KAAKqb,WAAYvB,QAASA,MAtC5H,KAwCnBoC,qBAAuB,IAAMnD,GAAYrQ,IAAIkS,GAAY,kBAAC,GAAD,CAAkB1O,IAAK0O,EAAS/W,GAAI+W,SAAUA,KAxCpF,KAyCnBuB,cAAgB,IAAMnc,KAAKyb,2BAA2BW,OAAOpc,KAAKkc,wBAzC/C,KA0CnBb,WAAa1X,UACX,GAAI0B,EAAM,CACR,MAAM0W,EAAa/b,KAAKgB,MAAM+a,WAE1BA,EAAWlQ,IAAIxG,GACjB0W,EAAWnI,OAAOvO,GAElB0W,EAAWM,IAAIhX,GAGjBrF,KAAKC,SAAS,CACZ8b,oBAGF/b,KAAKC,SAAS,CACZ8b,WAAY,IAAIO,MAIpB,IAAIC,EAAc,YAEd,IAAIvc,KAAKgB,MAAM+a,WAAWjS,UAAUqB,SACtCoR,GAAe,QAAU,IAAIvc,KAAKgB,MAAM+a,WAAWjS,UAAUc,KAAK,UAGpE,MAAMb,EAAS/J,KAAKgB,MAAM+I,OAAX,WAAwB/J,KAAKgB,MAAM+I,QAAW,GAC7D/J,KAAKia,QAAQnW,GAAGG,IAAIC,SAAS6H,IAA7B,sBAAgDhC,GAAhD,OAAyDwS,IAAe1K,KAAKE,GAAY/R,KAAKC,SAAS,CACrGwI,MAAOsJ,KACLoB,MAAMzG,QAAQQ,QApElBlN,KAAKgB,MAAQ,CACXsa,SAAU,KACVJ,MAAM,EACNa,WAAY,IAAIO,IAChB7T,WAAOqN,EACP/L,OAAQ,IAkEZxI,SACE,OAAO,oCACK,kBAACuZ,GAAD,CAAiB9V,MAAOhF,KAAKgB,MAAM+I,OAAQ9C,SAAUjH,KAAKwb,UAAWT,QAAS/a,KAAKmb,WACnF,kBAAC,KAAD,CAASja,UAAU,0BAA0Bga,KAAMlb,KAAKgB,MAAMka,KAAMsB,QAASxc,KAAKib,UAAWK,SAAUtb,KAAKgB,MAAMsa,SAAUmB,aAAc,CAClJC,WAAY,OACZC,SAAU,UACTC,gBAAiB,CAClBF,WAAY,OACZC,SAAU,OACTtb,MAAO,CACRR,OAAQ,QACPgc,WAAY,CACbxb,MAAO,CACLiD,MAAO,UAERwY,kBAAkB,EAAMC,qBAAqB,EAAMC,qBAAqB,GAC7D,kBAAC,IAAD,CAAMC,SAAU,SAAUjd,KAAKmc,oBAYnDnB,GAAaZ,aAAe,CAC1BtW,GAAIuW,IAAUC,OAAOC,YAERS,U,sBC5GR,MAAMkC,GAAe,EAC1B/X,OACAmF,cACA6S,gBACAC,yBAUO,6BAASlc,UAAWC,KAAQkc,SACzB,yBAAKnc,UAAWC,KAAQmc,kBACpB,kBAAC,IAAD,CAAYpc,UAAWC,KAAQwO,MAAOxK,KAAK,wBAAwBnC,MAAO+D,IAAKC,EAAE,mBAAoB3B,KAAK,OAAO4B,SAV3G,CAACmU,EAAGrL,KACtBoN,EAAcpN,EAAE1J,OAAOrB,QAS6HA,MAAOG,EAAM2B,YAAaC,IAAKC,EAAE,wBACzK,kBAAC,IAAD,CAAe9F,UAAWC,KAAQmJ,YAAanF,KAAK,8BAA8BnC,MAAO+D,IAAKC,EAAE,yBAA0BC,SAP9G,CAACmU,EAAGrL,KAC5BqN,EAAoBrN,EAAE1J,OAAOrB,QAMsIA,MAAOsF,KAElK,yBAAKpJ,UAAWC,KAAQoc,cACpB,kBAAC,GAAD,QAUhBL,GAAa3a,aAAe,CAC1B4C,KAAM,GACNmF,YAAa,IAGf,MAQMsE,GAAqB,CACzBuO,cNjBiCnY,IAAK,CACtCK,KnB/B4B,iBmBgC5BL,UMgBAoY,oBNduCpY,IAAK,CAC5CK,KnBlCkC,uBmBmClCL,WMca8J,mBAZS9N,IACtB,MAAMwc,EAAoB/T,YAASyH,GAAsBlQ,IACzD,MAAO,CACLmE,KAAMqY,EAAkBrY,KACxBmF,YAAakT,EAAkBlT,cAQKsE,GAAzBE,CAA6CoO,I,iECvDrD,MAAMO,GAAY,IAAM,yBAAK5c,OAAO,KAAK6B,QAAQ,YAAY4B,MAAM,KAAK7B,MAAM,8BAC7E,0BAAME,EAAE,wOAAwOC,KAAK,aAEhP8a,GAAe,IAAM,yBAAK7c,OAAO,KAAK6B,QAAQ,YAAY4B,MAAM,KAAK7B,MAAM,6BAA6BpB,MAAO,CAC1H8Y,OAAQ,kBAGF,0BAAMxX,EAAE,kIAAkIC,KAAK,UAAU+a,SAAS,UAAUC,UAAU,sBAEjLC,GAAU,IAAM,yBAAKpb,MAAM,6BAA6B5B,OAAO,KAAK6B,QAAQ,YAAY4B,MAAM,KAAK1B,KAAMb,IAAO0N,SACrH,0BAAM9M,EAAE,gBAAgBC,KAAK,SAC7B,0BAAMD,EAAE,wD,0BCJhB,MAAMmb,GAAe,EACnBC,sBACA7I,YACA8I,yBACAC,gBACAC,mBACA1B,WACCvC,KACD,MAAOlF,EAASoJ,GAAcC,mBAASJ,GAEjCK,EAAgB,EACpBC,cACA7V,YAEA0V,EAAW,CACT,CAACG,GAAc7V,KAIb8V,EAAkB,EACtBD,cACAE,sBAEA,MACMC,GADU1J,EAAQuJ,IAAgB,IAChBvU,OAAO1B,IAASmW,EAAgBnP,SAAShH,EAAKxE,KACtEsa,EAAW,2BAAKpJ,GAAN,IACR,CAACuJ,GAAcG,MAIbC,EAAiB,EACrBJ,cACAK,cAEA,MAAMC,EAAU7J,EAAQuJ,IAAgB,GAClCO,EAAgBF,EAAQjW,IAAI7E,GAAM+a,EAAQpS,KAAKnE,GAAQA,EAAKxE,KAAOA,IACzEsa,EAAW,2BAAKpJ,GAAN,IACR,CAACuJ,GAAcO,MA2CnB,OAAO,oCACI3J,EAAUrR,IAAM,kBAAC,IAAD,CAAO2Y,QAASA,EAAS5V,SAAS,MAAMkY,OAAK,GACtD,kBAAC,IAAD,KAAa5J,EAAU/P,MACvB,kBAAC,IAAD,KA1BU,MAC1B,MAAM4Z,EAAc,CAClBjb,GAAImW,EAAQnW,GACZkb,SAAUX,EACVY,WAAYV,EACZW,UAAWR,GAEPS,EAAgBpK,EAAQG,EAAUrR,KAAO,GAE/C,OAAQqR,EAAUrR,IAChB,KAAKyQ,KAED,OAAO,kBAAC,KAAD,CAAiB8K,gBAAiBD,EAAeH,SAAUD,EAAYC,WAGlF,KAAKzK,KACH,OAAO,kBAAC,KAAD,eAAkBwJ,oBAAqBA,EAAqBsB,QAASF,GAAmBJ,IAEjG,QACE,OAAO,kBAAC,KAAD,CAAkBI,cAAeA,EAAeb,YAAapJ,EAAUrR,GAAImb,SAAUD,EAAYC,SAAU/E,QAAS8E,EAAYjb,OAO5Gwb,IACf,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQC,WAAS,EAAC9b,QAAS+Y,GACtBzV,IAAKC,EAAE,WAEZ,kBAAC,IAAD,CAAQwY,SAAO,EAAC/b,QAhDvB,KACjB,MAAMI,EAAKqR,EAAUrR,GACf4b,EAAc1K,EAAQlR,GAExB4b,GAAeA,EAAYtU,OAC7B8S,EAAc,CACZpa,KACAmB,MAAO,IAAIya,KAGbvB,EAAiBra,GAGnB2Y,EAAQ3Y,KAoCqBkD,IAAKC,EAAE,iBAgBxC8W,GAAa1D,aAAe,CAC1BtW,GAAIuW,IAAUC,QAODxL,mBAJS9N,IAAK,CAC3Bgd,uBAAwBrJ,GAAoB3T,KAGN,CACtCid,cnBzH6BlU,IAAM,CACnC1E,KDA6B,kBCC7B0E,WmBwHAmU,iBAAkB/I,IAFLrG,CAGZgP,IC9HI,MAEM4B,GAAmB,CAC9BC,cAAe,aACfC,0BAA2B,iBAC3BC,+BAAgC,QAChC9B,oBAAqB,cACrB5L,SAAU,KACV2N,qBAAsB,IAqBjB,MAAMC,GAAe/e,GAASA,EAAMgf,SAC9BC,GAAkCjf,GAAS+e,GAAa/e,GAAO+c,oBC5B/DmC,GAAuC,GAiB7C,MAAMC,GAA2Bnf,GAASA,EAAMof,qBClB1CC,GAA4Brb,IAAK,CAC5CK,KDFwC,6BCGxCL,UCwDa8J,mBAfS9N,IAAK,CAC3B+c,oBAAqBkC,GAAgCjf,GACrDkU,UAAWiL,GAAyBnf,GACpCyT,WAAYD,GAAexT,GAC3Bgd,uBAAwBrJ,GAAoB3T,KAWN,CACtCsf,0BDvDyC,MACzCjb,KDL0C,iCE4D1Ckb,wBAAyBF,IAFZvR,CA5CQjP,IACrB,MAAO2gB,EAAaC,GAAkBrC,oBAAS,GACzCsC,EAAMC,iBAAO,MAEbC,EAAgB,KACpBH,GAAe,GACf5gB,EAAMygB,6BAOR,OAAO,oCACG,0BAAMI,IAAKA,GACP,kBAAC,IAAD,CAAQjd,QAAS,IAAMgd,GAAe,IACjC1Z,IAAKC,EAAE,cACR,kBAAC,KAAD,QAGPwZ,GAAe,kBAAC,IAAD,CAASK,eAAgBD,EAAeE,UAAWJ,EAAKK,OAAO,EAAMC,UAAU,gBACvF,kBAAC,KAAD,CAAiB3f,MAAO,CACpCiD,MAAO,SACNmQ,WAAY5U,EAAM4U,WAAYwM,iBAdbpd,IACtBhE,EAAM0gB,wBAAwB1gB,EAAM4U,WAAWjI,KAAK0I,GAAaA,EAAUrR,KAAOA,KAaZqd,YAAavf,OAAO4K,KAAK1M,EAAMme,2BAE3F3M,IAAQxR,EAAMqV,WAAoI,KAAvH,kBAAC,GAAD,CAAc6I,oBAAqBle,EAAMke,oBAAqB7I,UAAWrV,EAAMqV,UAAWsH,QAASoE,O,sBCrB5I,MAAMO,GAAe,CAACthB,EAAOoa,KAC3B,MAAOmH,EAAmBC,GAAwBjD,oBAAS,IACpDkD,EAAqBC,GAA0BnD,oBAAS,IACxDoD,EAAaC,GAAkBrD,mBAAS,OACzC,GACJva,EADI,KAEJsB,EAFI,YAGJmF,EAHI,OAIJS,EAJI,MAKJ1J,EALI,gBAMJgK,EANI,QAOJvI,EAPI,yBAQJ4e,EARI,sBASJC,GACE9hB,EAEE+hB,EAAsB,IAAML,GAAwBD,GAEpDO,EAAoB,IAAMR,GAAsBD,GAMhDU,EAAangB,OAAOC,OAAO,GAAIP,EAAMsO,MAAO,CAChDoS,OAAQ,UACRC,WAAY,OACZjc,IAAK,QAEDvD,EAAWM,EAAUQ,KAAO2e,KAElC,GAAIT,EACF,OAAO,kBAAC,IAAD,CAAUhe,GAAIge,IAGvB,MAAMU,EAA2B7W,EAAkBtE,IAAKC,EAAE,oBAAsBD,IAAKC,EAAE,oBAOjFmb,EAA8Brf,EAAUiE,IAAKC,EAAE,oBAAsBD,IAAKC,EAAE,kBAO5Eob,EAAYC,sBACZC,EAAa7Y,YAASsB,GAC5B,OAAO,oCACG,yBAAK7J,UAAWC,KAAQohB,UACpB,0BAAMlhB,MAAOygB,GAAa3c,GAC1B,yBAAKjE,UAAWC,KAAQqhB,SACpB,yBAAKthB,UAAWC,KAAQshB,aAAchf,QAASie,GAC3C,kBAAClf,EAAD,CAAUnB,MAAO,CAC7BuB,KAAMb,IAAO0N,YAGL,yBAAKvO,UAAWC,KAAQuhB,OACnBJ,EAAWK,OAAS,kBAAC,IAAD,CAAMzhB,UAAWC,KAAQyhB,SAAUpf,GAAE,WAAMK,EAAN,UAClD,kBAAC,IAAD,KAASkD,IAAKC,EAAE,UACV,KACbsb,EAAWO,OAAS,kBAAC,IAAD,CAAQpf,QAASme,GAC7B7a,IAAKC,EAAE,UACA,KAChB,kBAAC,GAAD,MACA,0BAAM0Z,IAAK0B,GACP,kBAAC,IAAD,CAAQ3e,QAASoe,GACb,kBAACpE,GAAD,MACA,0BAAMpc,MAAO,CAC7ByhB,WAAY,QAES/b,IAAKC,EAAE,YAKvBoa,GAAqB,kBAAC,IAAD,CAASN,UAAWsB,EAAWpB,UAAU,eAAeH,eAAgBgB,GACtF,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAUjS,OAAK,EAAC5M,MAAOmf,EAA6B1e,QArCnD,KAC7Bie,IACAG,OAoC4B,kBAAC,IAAD,CAAUjS,OAAK,EAAC5M,MAAOkf,EAA0Bze,QA7CnD,KAC1Bke,IACAE,OA4C4B,kBAAC,IAAD,CAAUjS,OAAK,EAAC5M,MAAO+D,IAAKC,EAAE,UAC1B,kBAAC,IAAD,CAAU4I,OAAK,EAAC5M,MAAO+D,IAAKC,EAAE,oBAAqBvD,QAhEjE,IAAMge,EAAe,GAAD,OAAI5d,EAAJ,mBAiEN,kBAAC,IAAD,CAAU+L,OAAK,EAAC5M,MAAO+D,IAAKC,EAAE,qBAAsBvD,QA/DpE,IAAMge,EAAe,GAAD,OAAI5d,EAAJ,sBAqE3BwH,EAAkB,yBAAKnK,UAAU,wBAAwBG,MAAOM,OAAOC,OAAO,CACrFmhB,WAAY,MACZ7gB,cAAe,OACdb,EAAMiJ,YAAcA,EAEnB,GAFiC,CACnCxF,MAAO,UAEQwF,GAAevD,IAAKC,EAAE,mBAClB,KACZnD,EAAK,kBAAC,KAAD,CAAeC,GAAImW,EAAQnW,GAAID,GAAIA,EAAIwB,KAAK,YAAY6V,KAAMoG,EAAqB0B,eAAgBpB,IAA0B,OAe/IT,GAAa5e,aAAe,CAC1B4C,KAAM,GACNmF,YAAa,GACbxH,SAAS,EACTuI,iBAAiB,GAEnB8V,GAAa/G,aAAe,CAC1BtW,GAAIuW,IAAUC,QAiCDxL,mBA9BS9N,IACtB,MAAM6C,EAAK0H,GAAevK,GACpBgJ,EAAYR,GAAkBxI,EAAO6C,IAAOsF,GAClD,MAAO,CACLtF,KACAsB,KAAM6E,EAAUK,YAChBC,YAAaN,EAAUO,mBACvBW,eAAgBtB,GAAmB5I,GACnCqK,gBAAiBI,GAA4BzK,GAC7C8B,QAASkH,EAAUlH,QACnBiI,OAAQf,EAAUe,SAoBkB,KAhBrB,CAACgE,EAAYC,EAAeC,KAC7C,MAAM,GACJpL,EADI,QAEJf,EAFI,gBAGJuI,GACE0D,GACE,SACJ/B,GACEgC,EACJ,OAAO,uCAAKD,GACPE,GADL,IAEEyS,yBAA0B,IAAM1U,EAAS0G,GAAe7P,GAAKf,IAC7D6e,sBAAuB,IAAM3U,EAASyK,IAAwBpM,OAInDyD,CAA2CqS,I,QCvK1D,MAAM9f,GAAQ,CACZsO,MAAO,CACL/I,SAAU,WACVd,SAAU,GACV0J,WAAY,IACZ1K,MAAO/C,IAAOkhB,MACdC,SAAU,IAEZ5Y,YAAa,CACXxE,SAAU,GACVhB,MAAO/C,IAAO0C,UAiBH0e,OAbE,EACfC,UAEO,yBAAKliB,UAAU,mBAAmBG,MAAO,CAC9CgN,QAAS,uBAEA+U,EAAO,kBAAC,GAAD,CAAc/hB,MAAOA,KAAY,kBAAC,GAAD,CAAcA,MAAOA,M,sDCZ1E,MAAMgiB,WAAsB1jB,YAG1BC,YAAYC,EAAOoa,GACjBna,MAAMD,GADoB,KAF5ByjB,kBAAoB,KAEQ,KAK5BC,mBAAqBC,IAMnB,MAAMC,EAAgBzjB,KAAKH,MAAMwI,OAASmb,EAAUnb,KAC9Cqb,EAAiBF,EAAU5O,cAAgB5U,KAAKH,MAAM+U,YACtD+O,EAAMla,YAASzJ,KAAKH,MAAM+jB,eAC1BC,EAAUpa,YAAS+Z,EAAUI,eAC7BE,EAAaH,EAAI9f,KAAOggB,EAAQhgB,IAAM8f,EAAII,aAAeF,EAAQE,WACvE,OAAON,IAAkBK,GAAcJ,IAhBb,KAkB5BM,aAAeR,IACb,GAAIS,KAAgCjkB,KAAKH,MAAMwI,KAAMrI,KAAKH,MAAM+jB,gBAAkB5jB,KAAKujB,mBAAmBC,GAAY,CACpH,MAAMK,EAAUpa,YAAS+Z,EAAUI,eAC7BM,EAAalkB,KAAKH,MAAM+jB,cACxBO,EAAgBD,EAAWH,aAAeF,EAAQE,YAAcG,EAAWH,aAAe/jB,KAAKH,MAAMwI,KAAKhD,MAE5G8e,GAAiBnkB,KAAKH,MAAM+U,cAAgB4O,EAAU5O,eACxDqP,KAAsBjkB,KAAKH,MAAMwI,KAAMwb,EAAQE,YAAc/jB,KAAKH,MAAMwI,KAAKhD,MAC7E4e,KAAmBjkB,KAAKH,MAAMwI,KAAMrI,KAAKH,MAAM+jB,cAAe,CAC5DQ,YAAapkB,KAAKsjB,kBAClBS,WAAYI,EAAgBD,EAAWH,WAAa,UA5BhC,KAwD5BM,cAAgB,IAAMrkB,KAAKH,MAAM+jB,cAAcG,YAAc/jB,KAAKH,MAAMwI,KAAKhD,KAtD3ErF,KAAK8D,GAAKmW,EAAQnW,GAgCpBiK,oBA5CwBjK,MA6CtB9D,KAAKsjB,mBA7CiBxf,EA6CqB9D,KAAK8D,GA5C3C,CACLwgB,QAASC,YAAWzgB,GACpB0gB,KAAM1gB,EAAGG,IAAIC,SAASugB,eAAeC,gBA4CjCT,KAAgCjkB,KAAKH,MAAMwI,KAAMrI,KAAKH,MAAM+jB,gBAC9DK,KAAmBjkB,KAAKH,MAAMwI,KAAMrI,KAAKH,MAAM+jB,cAAe,CAC5DQ,YAAapkB,KAAKsjB,kBAClBS,WAAY/jB,KAAKH,MAAMskB,cAAgBnkB,KAAKqkB,gBAAkB,KAC9DM,QAAS3kB,KAAKH,MAAM8kB,UAK1BC,mBAAmBpB,GACjBxjB,KAAKgkB,aAAaR,GAGpBqB,uBACMZ,KAAgCjkB,KAAKH,MAAMwI,KAAMrI,KAAKH,MAAM+jB,gBAC9DK,KAAsBjkB,KAAKH,MAAMwI,KAAMrI,KAAKqkB,iBAMhD9iB,SACE,MAAM,QACJJ,EADI,KAEJkH,EAFI,cAGJub,EAHI,MAIJviB,GACErB,KAAKH,MAET,OAD0BokB,KAAgC5b,EAAMub,GACrC,yBAAK/f,GAAIihB,aAAiBzc,EAAKxE,IAAKxC,MAAOA,IAAY,yBAAKH,UAAWC,EAAQ4jB,SAC7Fhe,IAAKC,EAAE,6CAMxBqc,GAAcjJ,aAAe,CAC3BtW,GAAIuW,IAAUC,QAWhB+I,GAAc9gB,aAAe,CAC3BlB,MAAO,GACPgH,KAAM,GACNuM,YAAa,GACb+P,QAAS,GACTf,cAAe,IAEFP,U,sBCvGf,MAAM2B,WAA2BtlB,IAAMC,UACrCC,YAAYC,GACVC,MAAMD,GACNG,KAAKgB,MAAQ,CACXikB,YAAY,GAIhBC,kBAAkBhY,EAAOiY,GACvBnlB,KAAKC,SAAS,CACZglB,YAAY,IAEdvY,QAAQC,IAAI,UAAWO,GACvBR,QAAQC,IAAI,SAAUwY,GAGxB5jB,SACE,OAAIvB,KAAKgB,MAAMikB,WACN,uBAAG/jB,UAAWC,KAAQikB,WACf,0BAAMlkB,UAAWC,KAAQkC,MACrB,kBAACwa,GAAD,OAEJ,0BAAM3c,UAAWC,KAAQkkB,SACpBte,IAAKC,EAAE,qDAKrBhH,KAAKH,MAAMyC,UAQP0iB,U,+BC7BAM,OATS,EACtBC,mBAEOA,EAAgB,yBAAKrkB,UAAWC,KAAQqkB,iBAAkBD,GAAuB,K,4CCW3EE,OAXU,EACvBhiB,aACI,4BAAQ4B,KAAK,SAASnE,UAAWC,KAAQukB,iBAAkBjiB,QAASA,EAASkM,MAAO5I,IAAKC,EAAL,gBAClF,kBAAC,KAAD,CAAY3F,MAAO,CACvBuB,KAAMb,IAAO4jB,WCJjB,MAeM/W,GAAqB,CACzB+J,0BAEa7J,mBAAQ,KAAMF,GAAdE,CAlBS,EACtB8W,SACAjN,2BAIO,yBAAKzX,UAAWC,KAAQqkB,iBACrB,kBAAC,GAAD,CAAkB/hB,QAHH,IAAMkV,EAAsBiN,OCHxCC,OALK,IAAM,yBAAKpjB,MAAM,6BAA6B5B,OAAO,KAAK6B,QAAQ,YAAY4B,MAAM,KAAK1B,KAAMb,IAAO0N,SAClH,0BAAM9M,EAAE,gBAAgBC,KAAK,SAC7B,0BAAMD,EAAE,sG,sBCODmjB,OANM,IAAM,yBAAK5kB,UAAWC,KAAQ4kB,SAC3C,kBAAC,IAAD,CAAS1jB,QAAS0E,IAAKC,EAAE,mDAAoDga,UAAU,UACnF,kBAACgF,GAAD,QCRL,MAAMC,GAAO,OACPC,GAAM,MAENC,GAAQ,QACRC,GAAe,eACfC,GAAaC,GAAQ,CAACL,GAAMC,IAAK7W,SAASiX,GAC1CC,GAAcD,GAAQ,CAACH,GAAOC,IAAc/W,SAASiX,GACrDE,GAAaF,GALN,SAKcA,ECY5BG,GAAa/mB,IAAMgnB,WAAW,CAAC,EAKlChG,KAAS,IALyB,cACnCiG,EADmC,MAEnChX,EAFmC,YAGnCiX,GAES,EADNC,EACM,wDACT,MAAMC,EAhBkBF,KACjB,CACL,KAAQtB,GACR,CAACW,IAAOc,GACR,CAACX,IAAeQ,EAAcI,GAAgB,OAYhCC,CAAkBL,GAAaD,GAC/C,OAAO,yBAAKzlB,UAAWC,KAAQ+lB,eAAgBxG,IAAKA,GACtC,uBAAGxf,UAAWC,KAAQgmB,WAAYxX,GACjCmX,EAAU,kBAACA,EAAYD,GAAW,QAGnDJ,GAAWpc,YAAc,aAMVyE,mBAAQ,KAAM,KAAM,KAAM,CACvC4X,YAAY,GADC5X,CAEZ2X,I,qFC1BH,MAAMW,GAAW,CACfxkB,KAAMb,IAAO0N,SAmFA4X,OAhFWxnB,IACxB,MAAOyb,EAAUgM,GAAelJ,mBAAS,OACnC,KACJ/V,EADI,cAEJub,EAFI,mBAGJ2D,EAHI,GAIJzjB,EAJI,WAKJigB,GACElkB,EACE2nB,EAAgBC,aAAoBpf,EAAKhD,MAEzCqiB,EAAc,KAClBC,IACAJ,EAAmBC,EAAgBtQ,KAAeH,OAG9C6Q,EAAc,KAClBD,IACAJ,EAAmBC,EAAgBrQ,KAAcH,OAG7C6Q,EAAY,KAChBF,IACAJ,EAAmBtQ,OAef0Q,EAAc,IAAML,EAAY,MAEhCjiB,EAAOue,EAAcve,MAAQgD,EAAKhD,KAClCyiB,GAAaC,aAAc1iB,KAAU2iB,aAAe3iB,IAASA,IAAS4iB,MAAkB5iB,IAAS6iB,KACjGC,EAA0BtoB,EAAMuoB,aAAerhB,IAAKC,EAAL,oCAA6CD,IAAKC,EAAL,oCAE5FqhB,EAAkB,IAAM,oCACnBtE,IAAe/M,MAAS+M,IAAe5M,MAAe,kBAAC,IAAD,CAAUvH,OAAK,EAAC5M,MAAO+D,IAAKC,EAAE,iBAAkBvD,QAASmkB,EAAavkB,KAAM,kBAAC,KAAD,CAAWhC,MAAO+lB,OACpJrD,IAAehN,MAAgBgN,IAAe7M,MAAgB,kBAAC,IAAD,CAAUtH,OAAK,EAAC5M,MAAO+D,IAAKC,EAAE,iBAAkBvD,QAASikB,EAAarkB,KAAM,kBAAC,KAAD,CAAWhC,MAAO+lB,OApB1IkB,aAAWjgB,EAAKhD,OAqBd0e,IAAe9M,MAAO,kBAAC,IAAD,CAAUrH,OAAK,EAAC5M,MAAO+D,IAAKC,EAAE,eAAgBvD,QAASokB,EAAWxkB,KAAM,kBAAC,KAAD,CAAShC,MAAO+lB,QAG7I,OAAOmB,aAAkBlgB,EAAMub,GAAiB,oCACtC,kBAAC,IAAD,CAAQ4E,OAAK,EAACjJ,WAAS,EAAC9b,QAvBV,CAAC2X,EAAG7a,IAAU+mB,EAAY/mB,EAAMgb,gBAwB1C,kBAACkC,GAAD,OAEHnC,GAAY,kBAAC,KAAD,CAASJ,KAAMuN,QAAQnN,GAAWkB,QAASmL,EAAarM,SAAUA,GACvE,kBAAC,IAAD,KACKwM,GAAa,oCACN,kBAACO,EAAD,MACA,kBAAC,IAAD,OAER,kBAAC,IAAD,CAAUzY,OAAK,EAACvM,KAAM,kBAAC,KAAD,CAAYhC,MAAO,CACvDuB,KAAM,aACDI,MAAO+D,IAAKC,EAAE,0BAA2B,CAC9C0hB,QAASC,aAAWtgB,EAAKhD,QACvB6K,KAAM0Y,aAAQvgB,EAAMvE,GAAKuC,OAAO,WACpB,kBAAC,IAAD,CAAUuJ,OAAK,EAACvM,KAAM,kBAACqa,GAAD,MAAkB1a,MAAOmlB,EAAyB1kB,QAnC5D,KAChC5D,EAAMgpB,iBAEW,OAAbvN,GACFqM,UAkCQ,M,sBChFd,MAAMtmB,GAAQ,CACZynB,gBAAiB,CACfxa,UAAW,OACXzN,OAAQ,SAEVkoB,KAAM,CACJ5O,OAAQ,eACRtZ,OAAQ,MACRmoB,OAAQ,OACRnnB,gBAAiBE,IAAOknB,UAI5B,MAAMC,WAAmBvpB,YACvB4B,SACE,MAAM4nB,EAAWC,aAAMppB,KAAKH,MAAMwI,MAClC,OAAO,yBAAKnH,UAAU,yBACV,wBAAIG,MAAOA,GAAM0nB,OACjB,yBAAK1nB,MAAOA,GAAMynB,iBACd,kBAAC,KAAD,CAA0BhlB,GAAI9D,KAAKia,QAAQnW,GAAIuE,KAAMrI,KAAKH,MAAMwI,KAAMhD,KAAMrF,KAAKH,MAAMwI,KAAKhD,KAAK+J,cAAevL,GAAIslB,EAAUT,QAAQ,iBAO1JQ,GAAW9O,aAAe,CACxBtW,GAAIuW,IAAUC,OAAOC,YAKR2O,U,sBC3BAG,OANK,IACX,yBAAKnoB,UAAWC,KAAQmoB,QACrB,kBAAC,IAAD,OCWGC,OAdIC,IACjB,IAAIC,OAAW3T,EACX4T,OAAY5T,EAChB,MAAO,IAAI6T,KACLF,GAAYE,EAAKxe,SAAWse,EAASte,QAAUwe,EAAKC,MAAM,CAACC,EAAKC,IAAMD,IAAQJ,EAASK,MAI3FL,EAAWE,EACXD,EAAYF,KAAMG,IAJTD,I,sBCaN,MAAMK,WAAapqB,YAOxBC,YAAYC,EAAOoa,GACjBna,MAAMD,GADoB,KAN5BmB,MAAQ,CACNgpB,YAAY,EACZC,cAAc,EACdC,gBAAgB,GAGU,KA0B5BC,aAAe,CAACvG,EAAe7O,KAC7B,IAAKpT,OAAO4K,KAAKwI,GAAS5J,OACxB,OAAOyY,EAIT,MAAMwG,EAAUxG,EAAchc,KAAKc,IAAI2hB,GAAG,eAAUA,IAE9CC,EAAa1G,EAAc2G,QAAQ7hB,IAAI2hB,GAAG,eAAUA,IAEpDG,EAAa5G,EAAc7O,QAAQrM,IAAI2hB,GAAG,eAAUA,IAkB1D,OAhBA1oB,OAAO4K,KAAKwI,GAAS+B,QAAQwH,IAC3B,GAAIvJ,EAAQuJ,GAAc,CACxB,IAAImM,GAAiB,EACrB,CAACL,EAASE,EAAYE,GAAY1T,QAAQ4T,GAAoBA,EAAiB3gB,OAAOsgB,GAAOA,EAAInV,YAAcoJ,GAAaxH,QAAQuT,IAClII,GAAiB,EACjBJ,EAAI5hB,MAAQsM,EAAQuJ,MAGjBmM,GACHD,EAAW1c,KAAK,CACdoH,UAAWoJ,EACX7V,MAAOsM,EAAQuJ,QAKhB,2BAAKsF,GAAZ,IACEhc,KAAMwiB,EACNG,QAASD,EACTvV,QAASyV,KAzDe,KA4D5BG,aAAepB,GAAW,IAAMqB,QA5DJ,KA6D5BtH,kBAAoB,KA7DQ,KA8D5BuH,mBAAqB,KACnB,MAAM9G,EAAa/jB,KAAKqkB,gBAClBT,EAAgB5jB,KAAK8qB,+BAA+B9qB,KAAKH,MAAM+jB,cAAe5jB,KAAKH,MAAMwI,KAAKhD,KAAM0e,GAE1G,IAAKH,EACH,OAAO,yBAAK1iB,UAAWC,KAAQ4jB,SAChBhe,IAAKC,EAAE,uBAIxB,MAAM+jB,EAAmB/qB,KAAKH,MAAMwI,KAAK2iB,eAAiBhrB,KAAKirB,UAAUC,QAAQC,aLlFjD,GKkFuFC,GACjHvrB,EAAK,2BAAQG,KAAKH,OAAb,IACTskB,eAAgBkC,GAAWrmB,KAAKH,MAAM8mB,eACtC/C,gBACAziB,aACAE,MAAOrB,KAAKqrB,wBAAwBN,EAAkB/qB,KAAKsrB,WAAatrB,KAAKsrB,WAAWC,aAAe,KAAMlF,GAAWrmB,KAAKH,MAAM8mB,gBAAkBJ,GAAYvmB,KAAKH,MAAM8mB,kBAG9K,OAAQ5C,GACN,KAAKnT,KACL,KAAKoG,KACL,KAAKD,KAED,OAAO,qCACS/W,KAAKgB,MAAMkpB,gBAAkB,yBAAK7oB,MAAOxB,EAAMwB,OACzC,kBAAC,GAAD,OAER,kBAAC,KAAD,CAAqByC,GAAI9D,KAAK8D,GAAI8f,cAAe5jB,KAAKwrB,qBAAqB5H,EAAe/jB,EAAM+U,aAAc6W,kBAAmBzrB,KAAKyrB,kBAAmBC,cAAc,EAAMrqB,MAAOxB,EAAMwB,SAI5M,KAAK4V,KAED,GAAIpX,EAAMwI,KAAKhD,OAAS4R,KAAK,CAG3B,MAAM0U,EAAW9rB,EAAM+jB,cAAc+H,SAASjjB,IAAI2hB,GAC5CA,EAAIuB,MAAMvc,SAAS,aAAegb,EAAIuB,MAAMvc,SAAS,SAChDrP,KAAKwrB,qBAAqBnB,EAAKxqB,EAAM+U,aAGvCyV,GAETxqB,EAAM+jB,cAAN,2BAA2B/jB,EAAM+jB,eAAjC,IACE+H,kBAMF9rB,EAAM+jB,cAAgB5jB,KAAKwrB,qBAAqB3rB,EAAM+jB,cAAe/jB,EAAM+U,aAM7E,OAHA/U,EAAM8kB,QAAN,2BAAqB9kB,EAAM8kB,SAA3B,IACEkH,WAAW,IAEN,kBAAC,GAAkBhsB,GAG9B,QAGI,OADAA,EAAM+jB,cAAgB5jB,KAAKwrB,qBAAqB3rB,EAAM+jB,cAAe/jB,EAAM+U,aACpE,kBAAC,GAAkB/U,KA5HN,KAgI5B4rB,kBAAoB,KAClBzrB,KAAKC,SAAS,CACZiqB,gBAAgB,KAlIQ,KAqI5BrB,eAAiB,KACf7oB,KAAKC,SAAS,CACZ+pB,YAAahqB,KAAKgB,MAAMgpB,YACvBhqB,KAAKH,MAAMisB,qBAAqB9rB,KAAKH,MAAMwI,KAAKxE,MAxIzB,KA0I5B0jB,mBAAqBliB,IACnBA,IAASrF,KAAKqkB,iBAAmBrkB,KAAKH,MAAM0nB,mBAAmBvnB,KAAKH,MAAM+jB,cAAc/f,GAAIwB,IA3IlE,KA6I5Bgf,cAAgB,IAAMrkB,KAAKH,MAAM+jB,cAAcG,YAAc/jB,KAAKH,MAAMwI,KAAKhD,KA7IjD,KA8I5BkjB,kBAAoB,IAAMtE,KAAgCjkB,KAAKH,MAAMwI,KAAMrI,KAAKH,MAAM+jB,eA9I1D,KA+I5BmI,gBAAkB,CAAChB,EAAkBiB,EAAgBC,KAE5C,CACLprB,OAFaorB,GAAiBD,GAAqCjB,IA9IrE/qB,KAAK8D,GAAKmW,EAAQnW,GAClB9D,KAAKsrB,WAAa5rB,IAAM2iB,YACxBriB,KAAKirB,UAAYvrB,IAAM2iB,YACvBriB,KAAKwrB,qBAAuBjC,GAAWvpB,KAAKmqB,cAC5CnqB,KAAK8qB,+BAAiCvB,GAAWtF,MACjDjkB,KAAKqrB,wBAA0B9B,GAAWvpB,KAAK+rB,iBAGjD,0BACE/rB,KAAKH,MAAMqsB,4BACLjI,KAAoBjkB,KAAKH,MAAMwI,OACrCrI,KAAKC,SAAS,CACZgqB,cAAc,IAIlBrF,mBAAmBpB,EAAW2I,IACxBA,EAAUjC,gBAAmB1G,EAAUI,gBAAkB5jB,KAAKH,MAAM+jB,eAAiBJ,EAAU5O,cAAgB5U,KAAKH,MAAM+U,aAC5H5U,KAAKC,SAAS,CACZiqB,gBAAgB,IAiItB3oB,SACE,MAAM,KACJ8G,EADI,cAEJse,EAFI,YAGJ/R,GACE5U,KAAKH,OACH,WACJmqB,GACEhqB,KAAKgB,MACHukB,EAAgB,kBAAC,GAAD,CAAmBld,KAAMA,EAAMub,cAAe5jB,KAAKH,MAAM+jB,cAAe2D,mBAAoBvnB,KAAKunB,mBAAoBsB,eAAgB7oB,KAAK6oB,eAAgB/kB,GAAI9D,KAAK8D,GAAIigB,WAAY/jB,KAAKqkB,gBAAiB+D,aAAcpoB,KAAKgB,MAAMgpB,aACxP,OAAO,oCACK,kBAAC,GAAD,CAAYra,MAAOsU,KAAsB5b,GAAOud,OAAQvd,EAAKxE,GAAI0hB,cAAeA,EAAe7E,IAAK1gB,KAAKirB,UAAWtE,cAAeA,EAAeC,YAAave,EAAK+jB,YACpK,kBAAC,GAAD,KACI,yBAAKlgB,IAAKlM,KAAK2qB,aAAa/V,GAAc1T,UAAU,yBAAyBwf,IAAKA,GAAO1gB,KAAKsrB,WAAa5K,GACtG1gB,KAAKgB,MAAMipB,cAAgBjqB,KAAK6qB,uBAGxCrE,GAAWG,IAAkBqD,EAAa,kBAAC,GAAD,CAAY3hB,KAAMA,IAAW,OAKxF0hB,GAAK3P,aAAe,CAClBtW,GAAIuW,IAAUC,QAWhByP,GAAKxnB,aAAe,CAClB8F,KAAM,GACNyjB,qBAAsB3kB,SAASC,UAC/Bwc,cAAe,IAgBF9U,mBAbS,CAAC9N,EAAOiO,KAEvB,CACL2F,YAFmByR,GAAWpX,EAAS0X,eAA8CjS,GAA7BC,GAAoB3T,GAG5E4iB,cAAe7N,GAAkB/U,EAAOijB,KAA8BhV,EAAS5G,MAAMxE,MAI9DmJ,IAAQ,CACjCkf,sBAAuBtI,GAAiB5W,EAASkJ,GAAmB0N,IACpE2D,mBAAoB,CAAC1jB,EAAIwB,EAAM0e,IAAe/W,EhC/NJ,EAACnJ,EAAIkgB,KAChC,CACb1e,KDFyC,gCCGzCxB,KACAkgB,egC2NqDsI,CAA6BxoB,EAAIwB,MAG3EyJ,CAA6Cib,ICrO5D,MAAM1oB,GAAQ,CACZQ,gBAAiBE,IAAOuqB,QACxBtD,OAAQ,OACRnoB,OAAQ,MACRsZ,OAAQ,mBAKKoS,OAFF,IAAM,wBAAIlrB,MAAOA,K,QCE9B,MACMmrB,GAAe,CACnB,QAAW,UACXC,kBAAmB,aACnBC,OAAQ,SACRC,OAAQ,UAEJtrB,GAAQ,CACZiS,KAAM,CACJsZ,cAAe,OACfC,YAAa,OAEfC,OAAQ,CACNrlB,UAAW,SACX3B,SAAU,OACVinB,aAAc,OAEhBC,OAAQ,CACNlnB,SAAU,OACVmnB,WAAY,OACZ9S,OAAQ,EACRrV,MAAO/C,IAAO0C,SAEhByoB,QAAS,CACPpoB,MAAO/C,IAAO0C,QACdqB,SAAU,OACVmnB,WAAY,OACZE,UAAW,OACXC,SAAU,WAId,MAAMC,WAAqB1tB,YAAW,eAAD,oBACnCqB,MAAQ,CACNmR,SAAU,IAFuB,KAYnCmb,eAAiBxb,IACf,MAAMyb,EAAgBzb,EAAG,YAAQA,EAAI0b,YAAZ,YAA2B1b,EAAIjO,IAAO,GAC/D,MAAM,GAAN,OAAU7D,KAAKia,QAAQqK,QAAvB,+BAAqDiJ,IAdpB,KAgBnCE,iBAAmB3b,IACjB,MAAM4b,EAAY5b,EAAIuD,SAAS2G,OAAO,GAAG,GACzC,OAAO0R,EAAUV,OAASU,EAAUV,OAAO3iB,YAAc,IAlBxB,KAoBnCsjB,gBAAkB,KAChB,MAAMC,EAAYpH,GAAWxmB,KAAKH,MAAM8mB,eAAiB,OAAS,KAClE,OAAO3mB,KAAKH,MAAMwV,SAAS3M,IAAIoJ,IAC7B,MAMMkb,EA7DI,YA6DKlb,EAAI0b,YAA0BxtB,KAAKytB,iBAAiB3b,GAAO0a,GAAa1a,EAAI0b,aACrFK,EAAa/b,EAAIgc,KAAkB,KAAX,SACxBJ,EAAY5b,EAAIuD,SAAS2G,OAAO,GAAG,GACnC+R,EAAUL,EAAU5iB,YAC1B,OAAO,wBAAI5J,UAAS,uBAAkB0sB,GAAa1hB,IAAK4F,EAAIjO,GAAIJ,QAV1C,KAChB+iB,GAAWxmB,KAAKH,MAAM8mB,iBACxBqH,SAASC,SAAS/d,KAAOlQ,KAAKstB,eAAexb,MASnC,uBAAG5Q,UAAS,wBAAmB2sB,IAC1B/b,EAAIzH,YADT,KACwByH,EAAIoc,aAD5B,KAGA,uBAAG7sB,MAAOA,GAAM2rB,QACXA,EADL,MACgBmB,YAAWJ,EAAS/tB,KAAKgB,MAAMmR,WAE/C,uBAAG9Q,MAAOA,GAAM6rB,SAAUQ,EAAUnlB,UAnCtD,0BACE,MAAM4J,QAAiBnS,KAAKia,QAAQnW,GAAG6H,YAAYyiB,aAAariB,IAAI,eACpE/L,KAAKC,SAAS,CACZkS,aAqCJ5Q,SACE,OAAO,oCACK,kBAAC,GAAD,CAAYoO,MAAO5I,IAAKC,EAAE,YAAa4e,OAAQ5lB,KAAKH,MAAMwI,KAAKxE,GAAI8iB,cAAe3mB,KAAKH,MAAM8mB,cAAeC,YAAa5mB,KAAKH,MAAMwI,KAAK+jB,YACzI,kBAAC,GAAD,MACCpsB,KAAKH,MAAMwV,SAASlK,OAAS,GAAK,yBAAKjK,UAAU,0BAC1C,wBAAIG,MAAOA,GAAMiS,MAAOtT,KAAK2tB,mBAC7B,yBAAKtsB,MAAOA,GAAMyrB,QACd,uBAAG5c,KAAMlQ,KAAKstB,kBACTvmB,IAAKC,EAAE,yBAcxCqmB,GAAajT,aAAe,CAC1BtW,GAAIuW,IAAUC,OACdgK,QAASjK,IAAUgU,QAUNC,OADWxf,YANF9N,IACf,CACLqU,SAAU1T,OAAOmI,OAAOsL,GAAiBpU,MAIM,KAAzB8N,CAA+Bue,I,qBC7F1CkB,OAtBU1uB,GAAS,oCAC1B,kBAAC,GAAD,CAAY8P,MAAO5I,IAAKC,EAAE,qCAAsC,CACpE3B,KAAMxF,EAAMwI,KAAKhD,OACfugB,OAAQ/lB,EAAMwI,KAAKxE,GAAI8iB,cAAe9mB,EAAM8mB,cAAeC,YAAa/mB,EAAMwI,KAAK+jB,YACjF,yBAAK/qB,MAAO,CAChBmN,QAAS,OACTggB,eAAgB,SAChBC,WAAY,SACZ5tB,OAAQ,QAEA,kBAAC,KAAD,CAAmBQ,MAAO,CAChCiD,MAAO,IACPzD,OAAQ,IACR6tB,MAAO,UACN5pB,MAAM,eCNE6pB,OAVS,EACtBztB,eACI,yBAAKA,UAAWA,EAAWuB,MAAM,6BAA6BC,QAAQ,YAAYE,KAAMb,IAAO6sB,SAC7F,0BAAMjsB,EAAE,gBAAgBC,KAAK,SAC7B,0BAAMD,EAAE,oICMDksB,OAVI,EACjB3tB,eACI,yBAAKA,UAAWA,EAAWuB,MAAM,6BAA6B6B,MAAM,KAAKzD,OAAO,KAAK6B,QAAQ,YAAYE,KAAMb,IAAO4jB,QACpH,0BAAMhjB,EAAE,kFACR,0BAAMA,EAAE,gBAAgBC,KAAK,U,0BCMrC,MAAMksB,GAAezmB,GAAQyP,KAAYzP,EAAKhD,MAAM4W,YAI9C8S,GAAW,CAAClvB,EAAOoa,KACvB,MAAM,KACJ5R,EADI,cAEJse,EAFI,uBAGJqI,GACEnvB,EACEovB,EARgB5mB,IAAQ4C,YAAQ5C,EAAKyP,KAAYzP,EAAKhD,MAAM0S,WAAWhO,OAAO,CAAC1B,EAAM6mB,EAAOC,IAAUA,EAAMzU,UAAU0U,GAAMA,EAAGvrB,KAAOwE,EAAKxE,MAAQqrB,GAQpIG,CAAgBhnB,GAgBrC,OAAO,oCACG,kBAAC,GAAD,CAAYsH,MAAOmf,GAAazmB,GAAOud,OAAQvd,EAAKxE,GAAI8iB,cAAeA,EAAeC,YAAave,EAAK+jB,YACxG,kBAAC,GAAD,MACA,yBAAKlrB,UAAU,0BACX,wBAAIA,UAAWC,KAAQmS,MAClB2b,EAAavmB,IAAI4mB,GAAe,wBAAIpuB,UAAWC,KAAQkH,KAAM6D,IAAKojB,EAAYzrB,IACvE,kBAAC0rB,GAAD,CAAiBruB,UAAWC,KAAQquB,WApB9CF,KACd,MAAMG,EAAe,4BAAQvuB,UAAWC,KAAQuuB,aAAcjsB,QAAS,IAAMurB,EAAuB3mB,EAAMinB,IAC9F,kBAAC,GAAD,CAAYpuB,UAAWC,KAAQwuB,cAE3C,OAAO,oCACK,uBAAGzuB,UAAWC,KAAQoC,KAAMlC,MAAO,CAC3CyD,MAAO/C,IAAO6tB,SACb1f,KAAM8J,aAAW3R,EAAKhD,KAAMiqB,EAAarV,EAAQnW,KACrCwrB,EAAYnqB,MAEhBkhB,GAAWM,GAAiB8I,EAAe,OAW/B7G,CAAQ0G,SAYrCP,GAAS3U,aAAe,CACtBtW,GAAIuW,IAAUC,QAEDxL,mBAAQ,KAAM,CAC3BkgB,uBC7DoC,CAACrU,EAAetY,IAAY2K,IAChE,MAAMwN,EAAe1C,KAAY6C,EAActV,MAAM0S,SAC/C8X,EAAalV,EAAcH,GAAczQ,OAAO1B,GAAQA,EAAKxE,KAAOxB,EAAQwB,IAE9EgsB,EAAW1kB,QACbwP,EAAcH,GAAgBqV,EAC9B7iB,EAAS0L,GAAsBiC,KAE/B3N,EAAS2L,GAAsBgC,MDoDpB7L,CAEZigB,I,UE5DI,MAMMe,GAAgC,GACvCC,GAA0B,GACnBC,GAA4B,CACvCnsB,GAAI,GACJsB,KAAM,GACN4F,OAAQ,GACRT,YAAa,GACbY,eAAgB6kB,IAiGX,MAAME,GAAyBjvB,GAASA,EAAMkvB,eAExCC,GAAiBnvB,IAAUqQ,IAAQrQ,EAAMkvB,gBAGzCE,GAA0BpvB,IAAU,IAAD,EAC9C,OAAO,UAAAivB,GAAuBjvB,UAAvB,eAA+BkK,iBAAkB6kB,IC1GpD1uB,GAAQ,CACZ0jB,QAAS,CACP1W,QAAS,OACTgiB,WAAY,WACZpD,WAAY,QAEdqD,UAAW,CACTxqB,SAAU,OACVyqB,YAAa,SACbjsB,MAAO,MACP6V,OAAQ,SACR3L,QAAS,QACTye,WAAY,QAEd7H,UAAW,CACT2H,aAAc,OACdzd,UAAW,SAqFAR,mBAxBS,CAAC9N,EAAOiO,KAE9B,IAAIxG,EAGFA,EAJqB0nB,GAAenvB,GAI5BovB,GAAwBpvB,GACvBqlB,GAAWpX,EAAS0X,eACrBpV,GAAuBvQ,GAEvB4I,GAAmB5I,GAG7B,MAAMqH,EAAOI,EAAM+D,KAAKnE,GAAQA,EAAKxE,KAAOoL,EAAS5G,KAAKxE,IAC1D,MAAO,CACL0E,KAAMF,EAAOA,EAAKE,KAAO,KAUW,CACtCmQ,0BADa5J,CAjFEjP,IACf,MAAM,KACJwI,EADI,cAEJse,EAFI,KAGJpe,EAHI,sBAIJmQ,GACE7Y,EAEE2wB,EAAejwB,IACnB,MAAMkwB,EAAW,2BAAQpoB,GAAR,IACfE,KAAMhI,EAAM8F,OAAOrB,QAErB0T,EAAsB+X,IAGlBC,EAAW,KACf,MAAMC,EAAehvB,OAAOC,OAAO,GAAIP,GAAMivB,UAAWjvB,GAAM0jB,SAC9D,OAAO,yBAAK7jB,UAAU,yBAAyBG,MAAOA,GAAM+jB,WAChD,kBAAC,UAAD,CAAgB/jB,MAAOsvB,GAAepoB,KAI9CqoB,EAAW,IACR,oCACK,kBAAC,GAAD,CAAYjhB,MAAO5I,IAAKC,EAAE,aAAc4e,OAAQvd,EAAKxE,GAAI8iB,cAAeA,IACxE,kBAAC,GAAD,MACA,yBAAKzlB,UAAU,0BACX,kBAAC,UAAD,CAAgB2vB,OAAQL,GACpB,kBAAC,IAAD,CAAOxrB,MAAOuD,EAAMuoB,WAAS,EAACC,WAAS,EAAC1vB,MAAOA,GAAMivB,UAAWxpB,YAAaC,IAAKC,EAAE,iBAAkBC,SAAUupB,OAMhIQ,EAAY,KAChB,MAAML,EAAehvB,OAAOC,OAAO,GAAIP,GAAMivB,UAAWjvB,GAAM0jB,SAC9D,OAAO,oCACMllB,EAAMwI,KAAK+jB,UAAY,kBAACpF,GAAD,MAAoB,KAC5C,yBAAK9lB,UAAU,yBAAyBG,MAAOA,GAAM+jB,WACjD,kBAAC,UAAD,CAAgB/jB,MAAOsvB,GAAepoB,MAKxD,IAAI0oB,EAUJ,OAPEA,EADE5K,GAAWM,GACFiK,EACFjK,IAAkBP,GAChB4K,EAEAN,EAGN,oCAAGO,OC9EZ,MAAMC,GAAe,CAACC,EAAY9oB,EAAMuM,KACtC,IAAIwc,EAAS,UAAMD,EAAWE,UAAjB,4BAA8ChpB,EAAKxE,IAEhE,GAAI+Q,GAAeA,EAAW,IAAqBA,EAAW,GAAkBzJ,OAAQ,CACtF,MAAMmmB,EAAQ1c,EAAW,GAAkBlM,IAAI6oB,GAAUA,EAAO5mB,MAAM,KAAKqR,OAAO,GAAG,IACrFoV,GAAS,uBAAoBE,EAAM1mB,KAAK,MAG1C,OAAOwmB,GAGHI,GAAU,EACd7K,gBACAte,OACAuM,eACCqF,KACD,IAAIkX,EACJ,MAAMM,EAASppB,EAAKopB,OAMpB,OAJIA,IACFN,EAAalX,EAAQnW,GAAG4tB,OAAOC,cAAcnlB,KAAKolB,GAAOA,EAAI1lB,MAAQulB,IAGhEN,GAAcA,EAAWhsB,MAAQgsB,EAAWE,UAAY,oCACrD,kBAAC,GAAD,CAAY1hB,MAAOwhB,EAAWhsB,KAAMygB,OAAQvd,EAAKxE,GAAI8iB,cAAeA,EAAeC,YAAave,EAAK+jB,YACrG,kBAAC,GAAD,MACA,4BAAQzc,MAAOwhB,EAAWhsB,KAAM0sB,IAAKX,GAAaC,EAAY9oB,EAAMuM,GAAc1T,UAAU,yBAAyBG,MAAO,CAClI2nB,OAAQ,WAEA,oCACF,kBAAC,GAAD,CAAYrZ,MAAK,UAAK8hB,EAAL,oBACjB,kBAAC,GAAD,MACA,yBAAKvwB,UAAU,yBAAyBG,MAAO,CACrDmN,QAAS,OACTggB,eAAgB,SAChBC,WAAY,SACZ5tB,OAAQ,QAEE,kBAAC,KAAD,CAAmBiE,MAAM,WAAW0C,UAAQ,EAACnG,MAAO,CAC5DiD,MAAO,IACPzD,OAAQ,IACR6tB,MAAO,eAWf8C,GAAQpX,aAAe,CACrBtW,GAAIuW,IAAUC,QAUDxL,mBAPS,CAAC9N,EAAOiO,KAEvB,CACL2F,YAFmByR,GAAWpX,EAAS0X,eAA8CjS,GAA7BC,GAAoB3T,KAMjE8N,CAAyB0iB,ICpExC,MAAMnwB,GAAQ,CACZ8Y,OAAQ,YACRrU,SAAU,OACVmnB,WAAY,OACZnoB,MAAO/C,IAAO0N,SAgBDqiB,OAbIjyB,GACV,oCACG,kBAAC,GAAD,CAAY8P,MAAO5I,IAAKC,EAAE,UAAW4e,OAAQ/lB,EAAMwI,KAAKxE,GAAI8iB,cAAe9mB,EAAM8mB,cAAeC,YAAa/mB,EAAMwI,KAAK+jB,YACxH,uBAAG/qB,MAAOA,IACL0F,IAAKC,EAAE,gFCZT+qB,OAFO,IAAM,8B,sBCS5B,MAAMC,GAAqB,EACzB7sB,OACAmF,cACAsK,cACAvJ,qBAYO,yBAAKnK,UAAWC,KAAQ8wB,WACrB,uBAAG/wB,UAAWC,KAAQgE,MAAOA,GAC5BkG,GAAmBf,GAAe,uBAAGpJ,UAAWC,KAAQmJ,aAAcA,GACtEsK,EAAYzJ,OAAS,GAAK,oCACnB,uBAAGjK,UAAWC,KAAQ+wB,aACjBnrB,IAAKC,EAAE,oBAfJ,MACxB,MAAMmrB,EAAYvd,EAAYlM,IAAI,EAChCvD,OACA2E,YACI,wBAAI5I,UAAWC,KAAQixB,eAAgBlmB,IAAK/G,GACrCA,EADP,KACe2E,EAAOpB,IAAI2pB,GAAOA,EAAIltB,MAAMyF,KAAK,QAEtD,OAAO,wBAAI1J,UAAWC,KAAQmxB,YAAaH,IAU1BI,KAWrBP,GAAmBzvB,aAAe,CAChC+H,YAAa,GACbnF,KAAM,GACNkG,iBAAiB,GAiBJyD,mBAdS9N,IACtB,MAAM6C,EAAK0H,GAAevK,GACpBqlB,EAAajV,GAAcpQ,GAC3BwxB,EAAgBhpB,GAAkBxI,EAAO6C,IAAOsF,GAGtD,MAAO,CACLhE,KAHWkhB,EL8DuBrlB,IAASivB,GAAuBjvB,GAAOmE,KK9DjDstB,CAAuBzxB,IAAU+F,IAAKC,EAAE,sBAAwBwrB,EAAcnoB,YAItGC,YAHkB+b,EL8DuBrlB,IAASivB,GAAuBjvB,GAAOsJ,YK9DjDooB,CAA8B1xB,GAASwxB,EAAcjoB,mBAIpFqK,YAAaC,GAAqB7T,GAClCqK,gBAAiBI,GAA4BzK,KAIlC8N,CAAyBkjB,ICpDxC,MAsCajI,GAAOlqB,IAClB,MAAM8yB,EAvCYttB,KAClB,OAAQA,GACN,KAAKuL,KACL,KAAKmG,KACL,KAAKC,KACL,KAAKC,KACL,KAAKE,KACL,KAAKD,KACH,OAAO0b,GAET,KAAKvb,KACH,OAAOgW,GAET,KAAKlU,KACL,KAAKC,KACL,KAAKF,KACH,OAAO6V,GAET,KAAKzmB,KACH,OAAOuqB,GAET,KAAKlqB,KACH,OAAOmpB,GAET,KAAKzY,KACH,OAAOmY,GAET,KAAKrZ,KACH,OAAO4Z,GAET,KAAKxZ,KACH,OAAOyZ,GAET,QACE,OAAOzD,KAKMuE,CAAYjzB,EAAMwI,KAAKhD,MACxC,OAAO,kBAACstB,EAAD,CAAUtqB,KAAMxI,EAAMwI,KAAMse,cAAe9mB,EAAM8mB,cAAemF,qBAAsBjsB,EAAMisB,wB,8CC9CrG,MAAMiH,WAAoCpzB,YAAW,eAAD,oBAYlDqB,MAAQ,CACNgyB,YAAY,GAboC,KAelDC,aAAe,KAfmC,KAgBlDC,kBAAoB,KAhB8B,KAiBlDC,eAAiB,CACfC,SAAS,GAGXC,kBACE,IAAKrzB,KAAKizB,aACR,OAGF,MAAMK,EAAWtzB,KAAKH,MAAM0zB,aAAepzB,OAAOqzB,YAC5CC,EAAOzzB,KAAKizB,aAAaS,wBAE3BD,EAAKE,QAAUL,GAAYG,EAAK1tB,IAAM5F,OAAOqzB,YAAcF,IAC7DtzB,KAAKC,SAAS,CACZ+yB,YAAY,IAEdhzB,KAAK4zB,iBAITC,kBAAmB,IAAD,EAChB7zB,KAAKkzB,kBAAoBxvB,IAAS,IAAM1D,KAAKqzB,kBAAmBrzB,KAAKH,MAAMi0B,YAC3E,UAAA9F,SAAS+F,uBAAuB,qBAAqB,UAArD,SAAyD3zB,iBAAiB,SAAUJ,KAAKkzB,kBAAmBlzB,KAAKmzB,gBAGnHS,gBAAiB,IAAD,EACd,UAAA5F,SAAS+F,uBAAuB,qBAAqB,UAArD,SAAyDhzB,oBAAoB,SAAUf,KAAKkzB,kBAAmBlzB,KAAKmzB,gBAGtHplB,oBACE/N,KAAK6zB,kBACL7zB,KAAKqzB,kBAGPxO,uBACE7kB,KAAK4zB,gBAGPryB,SACE,MAAM,EAKFvB,KAAKH,OALH,SACJyC,EADI,UAEJpB,EAFI,MAGJG,GAHF,EAIKxB,EAJL,kDAMM,WACJmzB,GACEhzB,KAAKgB,MACHgzB,EAAaC,KAAKp0B,EAAO,CAAC,cAAe,eAAgB,YAAa,eAC5E,OAAO,uCAAK6gB,IAAKA,GAAO1gB,KAAKizB,aAAevS,EAAKrf,MAAOA,EAAOH,UAAWA,GAAe8yB,GAC5EhB,GAAc1wB,IAnEzBywB,GAQGxwB,aAAe,CACpBuxB,WAZsB,IAatBP,aAZwB,KA2EbR,UC1Df,MAEa3H,GAA8B,EACpC,MAAM8I,WAAiBv0B,YAAW,eAAD,oBACtCqB,MAAQ,CACNmzB,cAAe,IAFqB,KAItCrI,qBAAuBsI,IACrB,MAAMC,EAA4D,mBAAxCr0B,KAAKgB,MAAMmzB,cAAcC,IAA2Bp0B,KAAKgB,MAAMmzB,cAAcC,GACjGD,EAAa,eAAQn0B,KAAKgB,MAAMmzB,eAEtCA,EAAcC,IAAcC,EAC5Br0B,KAAKC,SAAS,CACZk0B,mBAVkC,KAsBtCG,eAAiBC,IACXv0B,KAAKH,MAAMujB,MACbpjB,KAAKH,MAAM20B,wBAAwBD,IAxBD,KA2BtCE,aAAe,CAACC,EAAQC,EAASjb,KAC/Bkb,aAAalb,EAAQoQ,GACrB,MAAMnP,EAAgB3a,KAAKH,MAAMqL,eAAesB,KAAKnE,GAAQA,EAAKxE,KAAO6V,EAAQoQ,GAE7EnP,GAAiBka,aAAoBla,IACvCma,aAAana,IAhCqB,KAmCtCoa,wBAA0Bpa,IACxB,MAAMqa,EAAeh1B,KAAKgB,MAAMmzB,cAAcxZ,EAAc9W,IAE5D,OAAImxB,IAAiC,IAAjBA,EACXrzB,OAAOC,OAAO,GAAI+Y,EAAe,CACtChJ,EAAGgJ,EAAchJ,EA3CD,KA+CbgJ,GA5C6B,KA8CtCsa,iBAAmB5sB,IACjB,MAAM6sB,EAAiB,CAAC7sB,EAAKhD,KAAMrF,KAAKH,MAAMujB,KAAO,OAAS,QAAQxY,KAAK,KAC3E,OAAO,kBAAC,GAAD,CAA6BsB,IAAK7D,EAAKyhB,EAAG5oB,UAAWg0B,GAChD,kBAAC,GAAD,CAAM7sB,KAAMA,EAAMse,cAAe3mB,KAAKH,MAAMujB,KAAO6C,GtBxE/C,OsBwE4D6F,qBAAsB9rB,KAAK8rB,yBAjDnE,KAoDtCqJ,kBAAoB1sB,GAASA,EAAMC,IAAIL,GAAQrI,KAAKi1B,iBAAiB5sB,IAtCrE5B,0BAA0BC,GACpBA,EAAU0c,MACZpjB,KAAKC,SAAS,CACZk0B,cAAe,KAqCrB5yB,SACE,MAAM,KACJ6hB,EADI,UAEJhY,EAFI,eAGJF,GACElL,KAAKH,MAET,IAAKuL,IAAcF,EAAeC,OAChC,OAAO,kBAAC,GAAD,CAAkB5C,KAAMxB,IAAKC,EAAE,0CAGxC,MAAMyB,EAAQ2a,EAAOlY,EAAiBA,EAAexC,IAAI1I,KAAK+0B,yBAC9D,OAAO,yBAAK7zB,UAAU,gBACTkK,EAAY,kBAAC,IAAD,CAAOgqB,aAAW,GACvB,kBAAC,IAAD,KACI,kBAAC,IAAD,QAEG,KACf,kBAAC,KAAD,CAAiBd,eAAgBt0B,KAAKs0B,eAAgBG,aAAcz0B,KAAKy0B,aAAcvzB,UAAU,SAASwzB,OAAQjsB,EAAO0R,OAAQkb,KAAQC,KAAMC,eAAkBC,UAAWC,KAAiBnxB,MAAOnE,OAAOu1B,WAAYC,YAAaC,KAAmBC,YAAazS,EAAM0S,YAAa1S,EAAM2S,gBAAgB,kBACxS/1B,KAAKm1B,kBAAkB1sB,MAY5CyrB,GAAS3xB,aAAe,CACtB2I,eAAgB,IAGlB,MASM0D,GAAqB,CACzB4lB,wB5C/EqCxvB,IAAK,CAC1CK,KnBlCuC,4BmBmCvCL,W4C0Fa8J,mBAvBS,CAAC9N,EAAOiO,KAC9B,MAAMuO,EAAoBvO,EAASmU,KAAOlS,GAAsBlQ,GAASwI,GAAkBxI,EAAOuK,GAAevK,IAC3GkK,EAAiB+D,EAASmU,KAAO7R,GAAuBvQ,GAAS4I,GAAmB5I,GAC1F,MAAO,CACLoK,UAAWI,GAAsBxK,KAAWwc,EAC5CtS,mBAkBoC0D,GAVrB,CAACG,EAAYC,EAAeC,KAC7C,MAAM+mB,EAAa/qB,YAAQ8D,EAAW7D,gBAAgBnB,OAAOksB,MAC7D,OAAO,2BAAKjnB,GAAZ,IACEoU,KAAMnU,EAASmU,KACfhY,UAAW2D,EAAW3D,UACtBF,eAAgB8qB,EAChBpB,qBAIW9lB,CAAyDolB,ICrIxE,MAAMtuB,GAAS,CACbswB,eAAgB,CACd/b,OAAQ,MACR9L,QAAS,SACT8nB,aAAc,MACdrxB,MAAO/C,IAAOE,MACdJ,gBAAiB,UACjBhB,OAAQ,GACR2N,QAAS,OACTigB,WAAY,UAEd2H,MAAO,CACLtwB,SAAU,OACVic,OAAQ,UACRsO,WAAY,UAEdgG,YAAa,CACXvwB,SAAU,OACV2I,eAAgB,YAChBqU,WAAY,OACZf,OAAQ,YAIZ,MAAMuU,WAAoB32B,YAAW,eAAD,oBAClC8D,QAAUI,GAAM,IAAM7D,KAAKH,MAAM4D,QAAQI,GADP,KAElC0yB,SAAW1yB,GAAM,IAAM7D,KAAKH,MAAM02B,SAAS1yB,GAE3CtC,SACE,MAAM,KACJ4I,GACEnK,KAAKH,MACT,OAAO,yBAAKwB,MAAOuE,GAAOswB,gBACd,0BAAM70B,MAAOuE,GAAOwwB,MAAO3yB,QAASzD,KAAKyD,QAAQ0G,EAAKtG,KAAtD,UACQsG,EAAKhF,KADb,aACsBgF,EAAKL,OAAOqB,OAAS,EAAIpE,IAAKC,EAAE,qBAAsB,CAClFwvB,MAAOrsB,EAAKL,OAAOqB,SAChBhB,EAAKL,OAAO,GAAG3E,OAEZ,0BAAM9D,MAAOuE,GAAOywB,YAAa5yB,QAASzD,KAAKu2B,SAASpsB,EAAKtG,KACxDkD,IAAKC,EAAE,aAY5BsvB,GAAY/zB,aAAe,CACzBkB,QAAS0D,SAASC,UAClBmvB,SAAUpvB,SAASC,WAENkvB,U,sBCnDR,MAAMG,WAAkB92B,YAAW,eAAD,oBACvC+2B,cAAgB7yB,IACd7D,KAAKH,MAAMqe,iBAAiBra,IAFS,KAIvC8yB,aAAe9yB,IACb7D,KAAKH,MAAM0gB,wBAAwB,CACjC1c,KACAsB,KAAMnF,KAAKH,MAAMkV,QAAQvI,KAAKnE,GAAQA,EAAKxE,KAAOA,GAAIsB,QAI1D5D,SACE,MAAM,QACJwT,GACE/U,KAAKH,MACT,OAAOkV,EAAQ5J,OACf,yBAAKjK,UAAWC,KAAQy1B,IAAKv1B,MAAO,CAClC0E,IAAK,IAEMgP,EAAQrM,IAAIqB,GAAU,kBAAC,GAAD,CAAamC,IAAKnC,EAAOlG,GAAIsG,KAAMJ,EAAQtG,QAASzD,KAAK22B,aAAcJ,SAAUv2B,KAAK02B,kBACxG,MASrBD,GAAUl0B,aAAe,CACvBwS,QAAS,GACT8hB,iBAAkB1vB,SAASC,WAOd0H,mBAJS9N,IAAK,CAC3B+T,QAASF,GAAqB7T,KAGQ,CACtCuf,wBAAyBF,GACzBnC,iBAAkB/I,IAFLrG,CAGZ2nB,ICjDI,MACMK,GAA8B32B,OAAOqzB,YAY3C,MAAMuD,GAAmB/1B,GAASA,EAAMg2B,aCRlCC,GAAsB,CAACjtB,EAAWvB,KAItC,CACLpD,KZN+B,sBYO/BL,MALO,2BAAQgF,GAAR,IACPkB,eAAgBzC,MAOPyuB,GAAwB,MACnC7xB,KZVmC,0BYgBxB8xB,GAA0B9uB,IACrC,MAAMhD,EAAOgD,EAAKhD,YACXgD,EAAKhD,KACZ,MAAMwS,EAAeC,KAAYzS,GAAM0S,SACjClU,EAAKmU,yBACLC,EAAqBjP,aAAsBnF,GACjD,IAAIqU,EAEJ,GAAI7S,IAAS8S,KAAW,CACtB,MAAMC,EAAO/P,EAAK+P,MAAQ,EAC1BF,EAAQG,aAAsBD,EAAM/P,EAAKiQ,eAEzCJ,EAAQM,aAA2BnQ,EAAK+uB,kBAG1C,MAAO,CACL/xB,KZ/BoC,2BYgCpCL,MAAM,qCACJnB,KACAwB,OACAuB,SAAUyB,EAAKzB,UAAY,KAC3B,CAACiR,GAAexP,EAAKhG,SAClBoW,MACAR,GACAC,KAQImf,GAA6BhvB,IAAI,CAC5ChD,KZ7CyC,8BY8CzCL,MAAOqD,ICKMyG,mBAVS9N,IACf,CACLs2B,mBAAoBlmB,GAAcpQ,GAClCu2B,oBAAqBpH,GAAenvB,GACpC8L,eAAgB9E,GAAuBhH,GACvCgN,WAAYzC,GAAevK,GAC3Bg2B,aAAcD,GAAiB/1B,KAIK,CACtCw2B,mBAAoB7f,GACpB8f,oBAAqBP,IAFRpoB,CA5CcjP,IAC3B63B,oBAAU,KACJ73B,EAAMy3B,mBACRz3B,EAAM23B,qBACG33B,EAAM03B,qBACf13B,EAAM43B,uBAEP,CAAC53B,EAAMy3B,mBAAoBz3B,EAAM03B,sBACpCG,oBAAU,KAAO,IAAD,EACd,UAAA1J,SAAS2J,cAAc,6BAAvB,SAA8CC,OAAO,EAAG,IACvD,CAAC/3B,EAAMmO,aACV,MAAMnN,EAAShB,EAAMm3B,anFvBS,GmFuByBnvB,GAAoBhI,EAAMiN,gBACjF,OAAO,oCACG,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,yBAAK5L,UAAU,oBAAoBG,MAAO,CAChDR,WAEU,kBAAC,GAAD,CAAUuiB,MAAM,IAChB,kBAAC,GAAD,MACA,kBAAC,GAAD,CAAUA,MAAM,Q,4CCAjByU,OA/BoB,EACjCC,gBACAC,oBACAC,oBACA9c,WAEA,MAAMsH,EAAU,CAAC,kBAAC,IAAD,CAAQtW,IAAI,SAASqT,WAAS,EAAC9b,QAASu0B,GAC9CjxB,IAAKC,EAAE,WACD,kBAAC,IAAD,CAAQkF,IAAI,SAAS+rB,aAAW,EAACx0B,QAASs0B,GAChDhxB,IAAKC,EAAE,YAElB,OAAOkU,GAAQ,kBAAC,IAAD,CAAOsB,QAASwb,EAAmBxP,OAAK,EAAC5hB,SAAS,UACnD,kBAAC,IAAD,KAAaG,IAAKC,EAAE,qBACpB,kBAAC,IAAD,KACI,0BAAM9F,UAAWC,KAAQkB,SACpB0E,IAAKC,EAAE,mKAAoK,CAC1L8wB,oBAIM,kBAAC,IAAD,KACI,kBAAC,IAAD,KAActV,MCTlC,MAAM0V,GAAiB,CACrBr3B,OrFjBoC,GqFkBpCkiB,WAAY,OACZD,WAAY,OACZpU,YAAa,QAER,MAAMypB,WAAgBx4B,YAAW,eAAD,oBACrCqB,MAAQ,CACNo3B,yBAAyB,EACzBC,oBAAgBviB,EAChBwiB,yBAAyB,EACzB9W,iBAAa1L,GALsB,KAOrCyiB,gBAAkB,KAChBv4B,KAAKC,SAAS,CACZq4B,yBAAyB,KATQ,KAYrCE,OAAS,KACPx4B,KAAKH,MAAM24B,SAAS3mB,KAAK4mB,IACvBz4B,KAAKC,SAAS,CACZuhB,YAAY,IAAD,OAAMiX,QAfc,KAmBrCC,eAAiB,KACX14B,KAAKH,MAAM84B,oBACb34B,KAAKH,MAAM+4B,oBACX54B,KAAKH,MAAM43B,uBAEXz3B,KAAKH,MAAMg5B,oBAxBsB,KA2BrCC,UAAY,KACV94B,KAAKH,MAAMk5B,mBACX,MAAMvX,EAAcxhB,KAAKH,MAAMoD,YAAX,WAA6BjD,KAAKH,MAAMoD,aAAgB,IAC5EjD,KAAKC,SAAS,CACZuhB,iBA/BiC,KAkCrCwW,kBAAoB,KAClBh4B,KAAKC,SAAS,CACZq4B,yBAAyB,KApCQ,KAuCrCP,kBAAoB,KAClB/3B,KAAKC,SAAS,CACZq4B,yBAAyB,IAE3Bt4B,KAAKH,MAAMm5B,SAASh5B,KAAKH,MAAMoD,aAAa4O,KAAK,KAC/C7R,KAAKC,SAAS,CACZuhB,YAAa,SA7CkB,KAiDrCyX,oBAAsBt1B,UACpB,GAAIu1B,GAAgBA,EAAa/tB,OAAQ,CACvC,MAAMguB,QAAiBn5B,KAAKia,QAAQnW,GAAG6H,YAAYyiB,aAAariB,IAAI,eAC9DqtB,EAAcF,EAAa1sB,KAAKxF,GAAKA,EAAEqyB,SAAWF,GAA2B,SAAfnyB,EAAEsyB,UAElEF,GAAeA,EAAYp0B,OAC7BhF,KAAKH,MAAM05B,YAAYv5B,KAAKH,MAAMoD,YAAam2B,EAAYp0B,SAvD5B,KA2DrCw0B,oBAAsB,KAChBx5B,KAAKH,MAAMoD,cAAgBjD,KAAKgB,MAAMq3B,gBACxCrlB,GAAkBhT,KAAKH,MAAMoD,aAAa4O,KAAKwmB,GAAkBr4B,KAAKC,SAAS,CAC7Eo4B,qBA9D+B,KA2ErCoB,wBAA0B,KACxBz5B,KAAKC,SAAS,CACZm4B,yBAA0Bp4B,KAAKgB,MAAMo3B,2BA7EJ,KAgFrCsB,oBAAsB,IAAM15B,KAAKH,MAAM85B,cAAgB35B,KAAKH,MAAMoD,YAAc,kBAAC,GAAD,CAAqB60B,cAAe93B,KAAKH,MAAMi4B,cAAeC,kBAAmB/3B,KAAK+3B,kBAAmBC,kBAAmBh4B,KAAKg4B,kBAAmB9c,KAAMlb,KAAKgB,MAAMs3B,0BAA8B,KAhF9O,KAiFrCsB,kBAAoB,IAAM55B,KAAKgB,MAAMq3B,gBAAkBr4B,KAAKgB,MAAMq3B,eAAex0B,GAAK,kBAAC,KAAD,CAAmB3C,UAAU,qBAAqB4C,GAAI9D,KAAKia,QAAQnW,GAAIoX,KAAMlb,KAAKgB,MAAMo3B,wBAAyBpV,eAAgBhjB,KAAKy5B,wBAAyBI,kBAAmB75B,KAAKgB,MAAMq3B,eAAgByB,kBAAmB,CAAC,OAAQ,eAAgBC,mBAAoB/5B,KAAKi5B,oBAAqBe,mBAAoB/sB,GAAOP,QAAQC,IAAI,2BAA4BM,KAAW,KAjFta,KAkFrCgtB,oBAAsB,KACpB,MAAMC,EAAmBl6B,KAAKH,MAAM84B,mBAAqB5xB,IAAKC,EAAE,sBAAwBD,IAAKC,EAAE,iBAC/F,OAAO,yBAAK9F,UAAWC,KAAQoN,cACnB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQiR,SAAO,EAAC/b,QAASzD,KAAKw4B,QACzBzxB,IAAKC,EAAE,iBAEZ,kBAAC,IAAD,CAAQvD,QAASzD,KAAK04B,gBACjBwB,GAGJl6B,KAAKH,MAAMoD,YAAc,kBAAC,IAAD,CAAQQ,QAASzD,KAAKy5B,yBACvC1yB,IAAKC,EAAE,cACA,KACfhH,KAAKH,MAAMoD,aAAejD,KAAKH,MAAM85B,aAAe,kBAAC,IAAD,CAAQl2B,QAASzD,KAAKu4B,iBAClExxB,IAAKC,EAAE,WACA,QA/BlC+G,oBACE/N,KAAKw5B,sBAGP5U,qBACE5kB,KAAKw5B,sBA+BPj4B,SACE,GAAIvB,KAAKgB,MAAMwgB,YACb,OAAO,kBAAC,IAAD,CAAUhe,GAAIxD,KAAKgB,MAAMwgB,cAGlC,MAAM,aACJ2Y,GACEn6B,KAAKH,MACHsO,EAAmBtG,GrFnIA,GqFoInBuyB,EAAiBD,EAAepzB,IAAKC,EAAE,uBAAyBD,IAAKC,EAAE,oBAC7E,OAAO,oCACK,kBAAC,EAAD,CAAYnG,OAAQsN,EAAkBrM,UAAU,GAC5C,yBAAKT,MAAO62B,IACPiC,EAAen6B,KAAKi6B,sBAAwB,KAE7C,yBAAK/4B,UAAWC,KAAQk5B,eACpB,kBAAC,IAAD,CAAQ9a,WAAS,EAAC9b,QAASzD,KAAK84B,WAC3BsB,MAKjB,yBAAKl5B,UAAWC,KAAQm5B,YACvBt6B,KAAK45B,oBACL55B,KAAK05B,wBAmBtBvB,GAAQ/d,aAAe,CACrBtW,GAAIuW,IAAUC,QAmCDxL,mBAhCS9N,IACtB,MAAMgJ,EAAYkH,GAAsBlQ,GACxC,IAAI24B,EACAQ,EAUJ,MtEnCgCn5B,KACxBqQ,IAAQrQ,EAAMmQ,gBAAsD,KAApCD,GAAsBlQ,GAAO6C,GsE0BjE02B,CAAmBv5B,IACrB24B,GAAe,EACfQ,GAAe,IAEfA,IAAenwB,EAAUe,QAASf,EAAUe,OAAO4X,OACnDgX,IAAe3vB,EAAUe,QAASf,EAAUe,OAAO6I,QAG9C,CACL3Q,YAAa+G,EAAUnG,GACvBi0B,cAAe9tB,EAAU7E,KACzBw0B,eACAhB,mBAAoBrnB,GAAuBtQ,GAC3Cm5B,iBAIuBntB,IAAQ,CACjCyqB,oBAAqB,IAAMzqB,EHtLQ,CACnC3H,KZVmC,0BegMnCuzB,kBAAmB,IAAM5rB,EnDnKY,CACrC3H,KnBrBsC,6BsEwLtCmzB,OAAQ,IAAMxrB,EAAS4L,MAAkB/G,KAAKhO,GAAMA,GACpDm1B,SAAUn1B,GAAMmJ,EAASgH,GAAiBnQ,IAC1Ck1B,iBAAkB,IAAM/rB,EnD5KU,CAClC3H,KnBxBkC,yBsEoMlCk0B,YAAa,CAAC11B,EAAImB,IAAUgI,EjEnLW,EAAC/J,EAAa+B,KAAd,CACvCK,KjBfwC,6BiBgBxCpC,cACA+B,UiEgLqCw1B,CAA0B32B,EAAImB,IACnE6zB,iBAAkB,IAAM7rB,EnD3KW,CACnC3H,KnBnBoC,6BsEgMvByJ,CAA6CqpB,I,yCCrK7CsC,OAlCG,EAChBC,eAEA,MAAMzd,EAAW0d,KAAqBx6B,OAAOu1B,WAAaiF,KAAqBx6B,OAAOu1B,WAChFkF,EAAaF,EAAW3zB,IAAKC,EAAE,oBAAsBD,IAAKC,EAAE,qBAClE,OAAO,yBAAK9F,UAAWC,KAAQ05B,aACrB,uBAAG35B,UAAWC,KAAQy5B,YAAtB,UACQ7zB,IAAKC,EAAE,iBADf,aACoC4zB,IAEpC,yBAAKv5B,MAAO,CAClB4b,aAEU,uBAAG/b,UAAWC,KAAQgkB,MAAtB,UACQpe,IAAKC,EAAE,0BADf,MAGA,yBAAK9F,UAAWC,KAAQgkB,MACpB,wBAAIjkB,UAAWC,KAAQ25B,UACnB,4BAAK/zB,IAAKC,EAAE,mCACZ,4BACKD,IAAKC,EAAE,yDAEZ,4BACKD,IAAKC,EAAE,2FAKxB,wBAAI9F,UAAWC,KAAQ45B,YC1BpBC,OAJY,IAAM,yBAAKv4B,MAAM,6BAA6B6B,MAAM,KAAKzD,OAAO,KAAK+B,KAAMb,IAAO0N,QAAS/M,QAAQ,aACtH,0BAAMC,EAAE,ma,sBCgCDs4B,OAzBS,EACtBp3B,SAEA,MAAMS,EAAQq2B,KAAqBx6B,OAAOu1B,WAAaiF,KAAqBx6B,OAAOu1B,WACnF,OAAO,oCACG,yBAAKx0B,UAAWC,KAAQikB,WACpB,yBAAKlkB,UAAWC,KAAQ+5B,MAAO75B,MAAO,CAC9CiD,UAEY,kBAAC,IAAD,CAAMpD,UAAWC,KAAQoC,KAAMC,GAAE,WAAMK,IACnC,kBAAC,IAAD,KACI,kBAACs3B,GAAD,MACCp0B,IAAKC,EAAE,wBAGhB,kBAAC,IAAD,CAAQvD,QAAStD,OAAOi7B,OAAQr0B,IAAKC,EAAE,YAG/C,yBAAK9F,UAAWC,KAAQm5B,c,qBC1B7B,MAAMe,GAAkBC,IAAY,IAAD,EACxC,IAAKA,IAAYA,EAAQ1d,UACvB,OAAO,KAMT,MAAM2d,EAAU,UAAGD,EAAQ1d,UAAUjT,MAAM,KAAK,UAAhC,aAAG,EAAiC6wB,MAAM,WAE1D,OAAID,EACKE,SAASF,EAAW,IAEpB,MCOJ,MAAMG,WAA4B/7B,YAAW,eAAD,oBACjD20B,eAAiBC,IACfv0B,KAAKH,MAAM87B,sBAAsBpH,IAFc,KAIjDqH,iBAAmBvzB,IACjB,GAAIA,EAAKhD,OAAS8S,KAChB,OAAO,EAGT,MAAM0jB,EAAa77B,KAAKH,MAAMqL,eAAenB,OAAO+f,GAAKA,EAAEzkB,OAAS8S,MAC9D2jB,EAAmBC,KAAOF,EAAY,CAAC,MAC7C,OAAOxzB,EAAK2zB,IAAMF,EAAiB,GAAGE,GAXS,KAajD/G,iBAAmB5sB,IAEjB,MAAM6sB,EAAiB+G,KAAG,QAAS,SAAV,UAAuB5zB,EAAKhD,MAAQ,CAC3D,mBAAoBrF,KAAKH,MAAMq8B,WAAal8B,KAAK47B,iBAAiBvzB,GAClE+jB,YAAa/jB,EAAK+jB,YAEpB,OAAO,yBAAKlgB,IAAK7D,EAAKyhB,EAAG5oB,UAAWg0B,GACxB,kBAAC,GAAD,CAAM7sB,KAAMA,EAAMse,cAAeP,OApBE,KAuBjD+O,kBAAoB1sB,GAASA,EAAMC,IAAIL,GAAQrI,KAAKi1B,iBAAiB5sB,IAErE8zB,sBACE,MAAMC,ED9BiCC,KACzC,MAAMC,EAAQ36B,OAAO4K,KAAKuL,MACpBykB,EAA2BtxB,YAAQoxB,GAAU3zB,IAAI0mB,IACrD,MAAM/pB,EAAOm3B,MAAMC,KAAKrN,EAAGsN,WAAWlwB,KAAKtL,GAAao7B,EAAMK,QAAQz7B,IAAc,GAC9EuyB,EAAOrE,EAAGsE,wBACVsI,EAAIX,GAAgBjM,EAAG/tB,QAAUo6B,SAAShI,EAAKuI,GACrD,MAAO,CACL32B,OACAq3B,UAAWtN,EAAGsN,UACdE,QAASZ,EAAIP,SAAShI,EAAK5yB,QAC3BuuB,QAGJ,OAAO2M,KAAOQ,EAA0B,CAAC,aCiBhBM,CAA4BL,MAAMC,KAAKzO,SAAS8O,iBAAiB,sBACxF,IAAIC,EAAkB,EAClBC,EAAiB,EACjBC,GAAoB,EAExB,IAAK,IAAInT,EAAIsS,EAAejxB,OAAS,EAAG2e,GAAK,IAAKA,EAAG,CACnD,MAAMzhB,EAAO+zB,EAAetS,GAE5B,GAAIzhB,EAAKhD,OAAS8S,KAAW,CAC3B,GAAK8kB,EAEE,CACLF,EAAkB10B,EAAKu0B,QACvB,MAHAv0B,EAAK+mB,GAAGsN,UAAUrgB,IAAI,eAKnB,CACL4gB,GAAoB,EACpB,MAAMC,EAAiB70B,EAAKu0B,QAExBM,EAAiBF,IACnBA,EAAiBE,IAKvB,MACMC,EAAcnP,SAAS2J,cAAc,sBAGrCxK,EAAY4P,EAJC,IAUnB,GAJII,IACFA,EAAY97B,MAAMR,OAAlB,UAA8BssB,EAA9B,OAGEntB,KAAKH,MAAMq8B,UAAW,CAExB,MAAMkB,EAAapP,SAAS2J,cAAc,qBAE1C,GAAIyF,GAAcA,EAAW/7B,OAAS+7B,EAAW/7B,MAAMuc,UAAW,CAChE,MAAMxF,EAAOijB,GAAgB+B,EAAW/7B,OAClCg8B,EAAarP,SAAS2J,cAAc,gBAC1C0F,GAAcA,EAAWzF,OAAO,EAAGxf,EAAO,MAKhDrK,oBACE/N,KAAKm8B,sBAGPvX,qBACE5kB,KAAKm8B,sBAGP56B,SACE,MAAM,UACJ6J,EADI,eAEJF,GACElL,KAAKH,MAET,IAAKuL,IAAcF,EAAeC,OAChC,OAAO,kBAAC,GAAD,CAAkB5C,KAAMxB,IAAKC,EAAE,0CAGxC,MAAM1C,EAAQq2B,KAAqBx6B,OAAOu1B,WAAaiF,KAAqBx6B,OAAOu1B,WACnF,OAAO,yBAAKx0B,UAAU,gBACTkK,EAAY,kBAAC,IAAD,CAAOgqB,aAAW,GACvB,kBAAC,IAAD,KACI,kBAAC,IAAD,QAEG,KACf,kBAAC,KAAD,CAAiBd,eAAgBt0B,KAAKs0B,eAAgBpzB,UAAU,SAASwzB,OAAQxpB,EAAgBiP,OAAQkb,KAAQC,KAAMC,eAAkBC,UAAWC,KAAiBnxB,MAAOA,EAAOqxB,YAAaC,KAAmBC,aAAa,EAAOC,aAAa,EAAOC,gBAAgB,kBACtQ/1B,KAAKm1B,kBAAkBjqB,MAY5CwwB,GAAoBn5B,aAAe,CACjC2I,eAAgB,IAYH4D,mBATS9N,IACtB,MAAMwc,EAAoByS,GAAuBjvB,GACjD,MAAO,CACLoK,UAAWI,GAAsBxK,KAAWwc,EAC5CtS,eAAgBklB,GAAwBpvB,GAAO+I,OAAOksB,MACtDiG,UAAW9qB,GAAcpQ,KAIW,CACtC26B,sBRnI0C32B,IAAK,CAC/CK,KZXwC,6BYYxCL,WQgIa8J,CAEZ4sB,I,qCChIH,MAAM4B,GAAkBz1B,GAAoB,GrGjBV,EqGmB5B01B,GAAaC,IAEjB,IAAIC,EAAI,EACR,MAEMC,EAAcC,GAFF,EAEwB,EAAIA,EAE9C,IAAIC,EAAWF,EAAY,GACvBH,GAAa,EAEjB,KAAOK,EAAWJ,GAIhB,GAHAI,EAAWF,EAAYD,KACrBA,EAEEG,IAAaJ,EAAG,CAClBD,GAAa,EACb,MAIJ,OAAOA,GAkCF,MAAMM,WAA6Bl+B,YAAW,eAAD,oBAClDqB,MAAQ,CACN88B,aAAa,GAFmC,KAIlDC,yBAA2B,KACrB/9B,KAAKH,MAAMmK,YACbhK,KAAKC,SAAS,CACZ69B,aAAa,IAEf99B,KAAKH,MAAMm+B,kBAAkBh+B,KAAKH,MAAMmK,UAAWhK,KAAKH,MAAM4I,OAG9DzI,KAAKH,MAAM4I,MAAMqO,QAAQzO,IACnBA,EAAKsJ,EAAIssB,OACX51B,EAAK+jB,WAAY,EACjBpsB,KAAKH,MAAMq+B,oBAAoBv8B,OAAOC,OAAO,GAAIyG,EAAM,CACrDsJ,EAAGssB,WA/CO,GACpBx1B,QACA01B,uBAMA,IAAI/lB,EAAO,EACX,MAAMgmB,EAAW,GAEjB,IAAK,IAAIC,EAAU,EAAGA,GAAW51B,EAAM0C,SAAUkzB,EAC/B,IAAZA,EACFjmB,GAAQ,GACCmlB,GAAWc,GACpBjmB,GAAQ,GAERA,GAAQ,GAGVgmB,EAAStwB,KAAKsK,GAGhB,IAAK,IAAI0R,EAAI,EAAGA,EAAIrhB,EAAM0C,SAAU2e,EAClCqU,EAAiB,CACf94B,KAAM8S,KACNC,KAAMgmB,EAAStU,MAyBfwU,CAAct+B,KAAKH,OACnBG,KAAKH,MAAMs+B,iBAAiB,CAC1B94B,KAAMkT,KACN6e,kBAAkB,MAvB0B,KAsClDmH,gBAAkB,IACTv+B,KAAKH,MAAM2+B,SAAW,CAC3Bzb,WAAY0b,IAAQC,KACpB79B,OAAQb,KAAKH,MAAMm3B,aAAesG,G3FlHR,I2FmHxB,CACFz8B,OAAQb,KAAKH,MAAMm3B,aH/Ge,IGgGtCjpB,oBACE/N,KAAK+9B,2BAGPnZ,qBACO5kB,KAAKgB,MAAM88B,aACd99B,KAAK+9B,2BAaTx8B,SACE,OAAO,qCACOvB,KAAKH,MAAM2+B,UAAY,kBAAC,GAAD,CAAiB36B,GAAI7D,KAAKH,MAAMmK,UAAUnG,KACnE,yBAAK3C,UAAW+6B,KAAG96B,KAAQw9B,QAAS,eAAgBt9B,MAAOrB,KAAKu+B,oBAC1Dv+B,KAAKH,MAAM2+B,UAAY,kBAAC,GAAD,CAAW9D,UAAU,IAC9C,yBAAKx5B,UAAWC,KAAQy9B,UAAWv9B,MAAO,CACpDiD,MAAOq2B,OAEO,kBAAC,GAAD,UAuCT7rB,mBAtBS,CAAC9N,EAAOiO,KAC9B,MAAMpL,EAAK0H,GAAevK,GAE1B,GAAIiO,EAASuvB,SAAU,CAErB,MAAO,CACLx0B,UAFgBkH,GAAsBlQ,GAGtC6C,KACA4E,MAAO8I,GAAuBvQ,GAC9Bg2B,aAAcD,GAAiB/1B,IAKnC,MAAO,CACLgJ,UAFgBnG,EAAK2F,GAAkBxI,EAAO6C,GAAM,KAGpDA,KACA4E,MAAOmB,GAAmB5I,GAC1Bg2B,aAAcD,GAAiB/1B,KAIK,CACtCg9B,kBAAmB/G,GACnBkH,iBAAkBhH,GAClB+G,oBAAqB7G,IAHRvoB,CAIZ+uB,IChKI,MAAMgB,WAAsBl/B,YAAW,eAAD,oBAC3CqB,MAAQ,CACN88B,aAAa,GAF4B,KAI3CgB,kBAAoB,KACd9+B,KAAKH,MAAMmK,YACbhK,KAAKC,SAAS,CACZ69B,aAAa,IAEf99B,KAAKH,MAAMk/B,iBAAiB/+B,KAAKH,MAAMmK,UAAWhK,KAAKH,MAAM4I,SATtB,KAuB3Cu2B,WAAa,KACX,GAAIh/B,KAAKH,MAAM84B,mBACb,OAAO,kBAAC,GAAD,CAAoB6F,UAAU,IAGvC,MAAM39B,EAASb,KAAKH,MAAMm3B,a5FvCE,G4FuCgCnvB,GAAoB,GAChF,OAAO,yBAAK3G,UAAU,oBAAoBG,MAAO,CAC/CR,WAEU,kBAAC,GAAD,CAAUuiB,MAAM,IAChB,kBAAC,GAAD,CAAUA,MAAM,MApB9BrV,oBACE/N,KAAK8+B,oBAGPla,qBACO5kB,KAAKgB,MAAM88B,aACd99B,KAAK8+B,oBAkBTv9B,SACE,OAAO,oCACK,kBAAC,GAAD,MACCvB,KAAKH,MAAMs6B,aAAen6B,KAAKg/B,aAAe,kBAAC,GAAD,CAAkBz2B,KAAMxB,IAAKC,EAAE,iBA2B/E8H,mBAbS9N,IACtB,MAAM6C,EAAK0H,GAAevK,GACpBgJ,EAAYnG,EAAK2F,GAAkBxI,EAAO6C,GAAM,KAEtD,MAAO,CACLmG,YACAmwB,gBAHmBnwB,IAAaA,EAAUe,SAASf,EAAUe,OAAO4X,OAIpEla,MAAOmB,GAAmB5I,GAC1B23B,mBAAoBrnB,GAAuBtQ,GAC3Cg2B,aAAcD,GAAiB/1B,KAIK,CACtC+9B,iB1DnEgC,CAAC/0B,EAAWvB,KAIrC,CACLpD,KnBjBmC,0BmBkBnCL,MALO,2BAAQgF,GAAR,IACPkB,eAAgBzC,O0DgELqG,CAEZ+vB,ICxEH,MAAMI,WAAqBt/B,YACzBoO,oBACE/N,KAAKH,MAAMq/B,kBAGb39B,SACE,MAAMV,EAASb,KAAKH,MAAMm3B,a7FdE,G6FcgCnvB,GAAoB,GAChF,OAAO,oCACK,kBAAC,GAAD,MACC7H,KAAKH,MAAM84B,mBAAqB,kBAAC,GAAD,CAAoB6F,UAAU,IAAW,yBAAKt9B,UAAU,oBAAoBG,MAAO,CAC5HR,WAEgB,kBAAC,GAAD,CAAUuiB,MAAM,IAChB,kBAAC,GAAD,CAAUA,MAAM,OAkBzBtU,mBALS9N,IAAK,CAC3B23B,mBAAoBrnB,GAAuBtQ,GAC3Cg2B,aAAcD,GAAiB/1B,KAGO,CACtCk+B,gB3DnBmC,MACnC75B,KnBpBiC,yB8EqCpByJ,CAEZmwB,IC7BI,MAAME,WAAsBx/B,YAAW,eAAD,oBAC3Cs1B,iBAAmB5sB,GAAQ,yBAAK6D,IAAK7D,EAAKyhB,EAAG5oB,UAAW+6B,KAAG5zB,EAAKhD,KAAM,QAAS,SACrE,kBAAC,GAAD,CAAMgD,KAAMA,EAAMse,cAAeR,MAFA,KAI3CgP,kBAAoB1sB,GAASA,EAAMC,IAAIL,GAAQrI,KAAKi1B,iBAAiB5sB,IAErE9G,SACE,MAAM,UACJ6J,EADI,eAEJF,GACElL,KAAKH,MAET,IAAKuL,IAAcF,EAAeC,OAChC,OAAO,kBAAC,GAAD,CAAkB5C,KAAMxB,IAAKC,EAAE,0CAGxC,MAAM1C,EAAQq2B,KAAqBx6B,OAAOu1B,WAAaiF,KAAqBx6B,OAAOu1B,WACnF,OAAO,oCACMtqB,EAAY,kBAAC,IAAD,CAAOgqB,aAAW,GACvB,kBAAC,IAAD,KACI,kBAAC,IAAD,QAEG,KACf,kBAAC,KAAD,CAAiBl0B,UAAU,eAAewzB,OAAQxpB,EAAgBiP,OAAQkb,KAAQC,KAAMC,eAAkBC,UAAWC,KAAiBnxB,MAAOA,EAAOqxB,YAAaC,KAAmBC,aAAa,EAAOC,aAAa,EAAOC,gBAAgB,kBACvO/1B,KAAKm1B,kBAAkBjqB,MAU5Ci0B,GAAc58B,aAAe,CAC3B2I,eAAgB,IAWH4D,mBARS9N,IACtB,MAAMwc,EAAoByS,GAAuBjvB,GACjD,MAAO,CACLoK,UAAWI,GAAsBxK,KAAWwc,EAC5CtS,eAAgBD,YAAQmlB,GAAwBpvB,IAAQ+I,OAAOksB,QAIpDnnB,CAAyBqwB,I,8BC7CjC,MAAMC,WAAuBz/B,YAAW,eAAD,oBAC5CqB,MAAQ,CACN88B,aAAa,GAF6B,KAI5CuB,mBAAqB,KACnB,GAAIr/B,KAAKH,MAAMmK,UAAW,CACxBhK,KAAKC,SAAS,CACZ69B,aAAa,IAGf,MAAMwB,EAAcvD,KAAO/7B,KAAKH,MAAM4I,MAAO,CAAC,IAAK,MACnDzI,KAAKH,MAAMm+B,kBAAkBh+B,KAAKH,MAAMmK,UAAWs1B,GAEnD,IAAIC,EAAc,EAClBv/B,KAAKH,MAAM4I,MAAMqO,QAAQzO,IACnBA,EAAKhD,OAASsD,OAChB42B,GAAe,EACfv/B,KAAKH,MAAM2/B,oBAAoBn3B,EAAKxE,OAIxC7D,KAAKH,MAAM4I,MAAMqO,QAAQzO,IACvBrI,KAAKH,MAAMq+B,oBAAoBv8B,OAAOC,OAAO,GAAIyG,EAAM,CACrDqJ,EAAG+tB,KACH9tB,EAAG+tB,UAKP,IAAK,IAAI5V,EAAI,EAAGA,EAA8C,GAAzC9pB,KAAKH,MAAM4I,MAAM0C,OAASo0B,GAAkBzV,GAAK,EACpE9pB,KAAKH,MAAMs+B,iBAAiB,CAC1B94B,KAAM8S,KACNvR,SAAUkjB,EACVxR,UAAU,IAIdtY,KAAKH,MAAMs+B,iBAAiB,CAC1B94B,KAAMkT,KACN6e,kBAAkB,MAKxBrpB,oBACE/N,KAAKq/B,qBAGPza,qBACO5kB,KAAKgB,MAAM88B,aACd99B,KAAKq/B,qBAIT99B,SACE,MAAMV,EAASb,KAAKH,MAAMm3B,aP/DU,GOgEpC,OAAO,oCACK,kBAAC,GAAD,CAAiBnzB,GAAI7D,KAAKH,MAAMmK,UAAUnG,KAC1C,yBAAK3C,UAAWC,KAAQw9B,QAASt9B,MAAO,CAChDR,WAEY,kBAAC,GAAD,CAAW65B,UAAU,IACrB,yBAAKx5B,UAAWC,KAAQy9B,UAAWv9B,MAAO,CACpDiD,MAAOq2B,OAEO,kBAAC,GAAD,UA4BT7rB,mBAXS9N,IACtB,MAAM6C,EAAK0H,GAAevK,GAE1B,MAAO,CACLgJ,UAFgBnG,EAAK2F,GAAkBxI,EAAO6C,GAAM,KAGpDA,KACA4E,MAAOmB,GAAmB5I,GAC1Bg2B,aAAcD,GAAiB/1B,KAIK,CACtCg9B,kBAAmB/G,GACnBkH,iBAAkBhH,GAClBqI,oBbhEwCx6B,IAAK,CAC7CK,KZ1CyC,8BY2CzCL,Ua+DAk5B,oBAAqB7G,IAJRvoB,CAKZswB,IClHI,MC8BDO,GAAe,CACnB,KAAQ,kBAAC,GAAD,MACR,CAAC1Z,IAAO,kBAAC,GAAD,MACR,CAACC,IAAM,kBAAC,GAAD,MACP,CAACC,IAAQ,kBAAC,GAAD,MACT,CAACC,IAAe,kBAAC,GAAD,OA+EHtX,mBAVS,CAAC9N,EAAOiO,KAAc,IAAD,IAC3C,MAAM1F,EAAaI,GAAkB3I,GACrC,MAAO,CACL4+B,kBAAmBvuB,IAAQ9H,GAC3Bs2B,kBAAmBn2B,GAAsB1I,GACzC6C,GAAI0H,GAAevK,GACnB8+B,SAAS,UAAA7wB,EAASusB,aAAT,mBAAgBuE,cAAhB,eAAwB98B,cAAe,OAIZ,CACtC+8B,gB7EhF8Bn8B,GAAMF,MAAOqJ,EAAUuJ,KAMrD,IACE,MAAMvV,EAAQuV,IACd,IAAI0pB,EAAoB,KAExB,GAAIp8B,EACFo8B,EAAoBz2B,GAAkBxI,EAAO6C,IAAO,SAC/C,CACL,MAAMq8B,GYjD2BhuB,EZiDWG,GAAiBrR,GYjDhB4V,aAAaupB,QAAb,kCAAgDjuB,UAAe4D,GZkDtGsqB,EAAO52B,GAAkBxI,EAAOk/B,GACtCD,EAAoBC,GAAeE,EAAOA,EjBoFHp/B,IAAS,IAAImO,IAAUtF,GAAsB7I,GAAQ,MAAO,kBAAmBmO,IAAUlF,GAAwBjJ,GAAQ,MAAO,gBiBpFtHq/B,CAA8Br/B,GAAO,GAItFgM,EADEizB,EACO3pB,GAA0B2pB,EAAkBp8B,IAE5CsS,GhBhD0B,MgBkDrC,MAAOlJ,GACP,OAvBcC,EAuBCD,EAtBfP,QAAQC,IAAI,+BAAgCO,GACrCA,EAFOA,MYrCqBgF,GiEqHrCouB,gBDpH+Bt7B,IAAK,CACpCK,KfF+B,oBeG/BL,WCgHa8J,CA7EU,EACvBjL,KACAyiB,OACAuZ,mBACAD,oBACAE,UACAE,kBACAM,sBAEA5I,oBAAU,KA1BmBpR,KAC7B,MAAMtN,EAASgV,SAASuS,qBAAqB,UAAU,GAEnDha,GAAYD,GACdtN,EAAO0jB,UAAUrgB,IAAI,UAErBrD,EAAO0jB,UAAU8D,OAAO,WAqBxBC,CAAuBna,IACtB,CAACA,IACJoR,oBAAU,KACJmI,IAAqBD,GACvBI,EAAgBF,IAEjB,CAACD,EAAkBD,EAAmBE,IACzCpI,oBAAU,KACR,MAAMgJ,EAAWh9B,IAAS,IAAM48B,EAAgBngC,OAAOqzB,aAAc,KAErE,OADArzB,OAAOC,iBAAiB,SAAUsgC,GAC3B,KACLvgC,OAAOY,oBAAoB,SAAU2/B,KAEtC,IAEEb,GAA2B,OAAPh8B,EAQrByiB,IAASJ,GACJyZ,GAAarZ,GAGlBsZ,EACK,oCACK,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,CAAkBr3B,KAAMxB,IAAKC,EAAE,uE7FtEN,M6F0EnCnD,EACK,oCACK,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,CAAkB0E,KAAMxB,IAAKC,EAAE,oCAItC24B,GAAarZ,GA3BX,kBAAC,IAAD,CAAO8O,aAAW,GACb,kBAAC,IAAD,KACI,kBAAC,IAAD,UC3CLtmB,mBAJS9N,IAAK,CAC3BqkB,QAAS5P,GAAiBzU,KAGY,CACtCwb,QAAS7G,IADI7G,CAjBM,EACnBuW,UACA7I,aACI6I,EAAU,kBAAC,IAAD,KACJ,kBAAC,IAAD,CAAUsb,SAAUnkB,EAASokB,WAAS,GACjCvb,IAEO,MCZjB,MCMMwb,GAAiB/8B,GAAMH,MAAOqJ,EAAUuJ,KAUnD,IACE,MAAMuqB,EAAkB7gB,GAAgC1J,KAClD9B,QAAmBssB,aAAmBj9B,EAAIg9B,GAGhD,MAdgBrsB,KAChBzH,EAN2ByH,KAAU,CACvCpP,K/EH4B,iB+EI5BL,MAAOyP,IAIIusB,CAAgBvsB,KAalBV,CADoBU,EAAW1K,OAAOk3B,GAA6B,aAAtBA,EAAIC,eAAsD,aAAtBD,EAAIC,eAA0D,cAA1BD,EAAIE,oBAEhI,MAAOl0B,GACP,OAZcC,EAYCD,EAXfP,QAAQC,IAAI,+BAAgCO,GACrCA,EAFOA,O,QCGX,MAAMk0B,WAAYzhC,YACvBoO,oBACE/N,KAAKH,MAAMwhC,eAAerhC,KAAKH,MAAMiE,GAAG6H,aACxC3L,KAAKH,MAAMyhC,kBACXthC,KAAKH,MAAM0hC,oBACXvhC,KAAKH,MAAM2hC,qBACXxhC,KAAKH,MAAM4hC,cAAczhC,KAAKH,MAAMiE,IAGtC49B,kBACE,MAAO,CACLpd,QAAStkB,KAAKH,MAAMykB,QACpBvd,SACAjD,GAAI9D,KAAKH,MAAMiE,IAInBvC,SACE,OAAO,oCACK,kBAAC,IAAD,CAAcQ,QAAM,EAAC08B,SAAO,IAC5B,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOkD,OAAK,EAACC,KAAK,IAAIrgC,OAAQ1B,GAAS,kBAAC,GAAD,iBAAeA,EAAf,CAAsBymB,K7CnCjE,Y6CoCI,kBAAC,IAAD,CAAOqb,OAAK,EAACC,KAAK,OAAOrgC,OAAQ1B,GAAS,kBAAC,GAAD,iBAAeA,EAAf,CAAsBymB,KAAMJ,QACtE,kBAAC,IAAD,CAAOyb,OAAK,EAACC,KAAK,gBAAgBrgC,OAAQ1B,GAAS,kBAAC,GAAD,iBAAeA,EAAf,CAAsBymB,K7CrC7E,Y6CsCI,kBAAC,IAAD,CAAOqb,OAAK,EAACC,KAAK,qBAAqBrgC,OAAQ1B,GAAS,kBAAC,GAAD,iBAAeA,EAAf,CAAsBymB,KAAML,QACpF,kBAAC,IAAD,CAAO0b,OAAK,EAACC,KAAK,0BAA0BrgC,OAAQ1B,GAAS,kBAAC,GAAD,iBAAeA,EAAf,CAAsBymB,KAAMH,QACzF,kBAAC,IAAD,CAAOwb,OAAK,EAACC,KAAK,4BAA4BrgC,OAAQ1B,GAAS,kBAAC,GAAD,iBAAeA,EAAf,CAAsBymB,KAAMF,UAGnG,kBAACyb,GAAD,QAchBT,GAAIU,kBAAoB,CACtBxd,QAASjK,IAAUgU,OACnBtnB,KAAMsT,IAAUC,OAChBxW,GAAIuW,IAAUC,QAaDxL,mBAAQ,KAVI9B,IAClB,CACLs0B,gBAAiB,IAAMt0B,EAASoG,MAChCmuB,kBAAmB,IAAMv0B,EAASH,MAClCw0B,eAAgB11B,GAAeqB,EFpEA,CACjC3H,KlFF2B,gBkFG3BL,MEkEyD2G,IACvD81B,cAAe39B,GAAMkJ,EAAS6zB,GAAe/8B,IAC7C09B,mBAAoB,IAAMx0B,EAASuK,QAIxBzI,CAAkCsyB,I,qBCtDlC//B,OAVD,CAACL,EARoB,OAQSoE,KAC1C,OAAQA,EAAOC,MACb,IAXqB,YAYnB,OAAOC,YAAgBF,EAAOJ,MAXD,QAa/B,QACE,OAAOhE,ICGEkE,mBAAgB,CAC7BqE,WpGiBc,CAACvI,EAAQiI,GAA0B7D,KACjD,OAAQA,EAAOC,MACb,IAnC0B,iBAqCtB,MAAO,CACL6D,KAAM9D,EAAOJ,MACbyD,MAAO,IAIb,IA1C0B,iBA4CtB,OAAO,2BAAKzH,GAAZ,IACEkI,KAAK,2BAAMlI,EAAMkI,MACZ9D,EAAOJ,SAKlB,IAlDiC,wBAoD7B,OAAOoE,GAAoB,CACzBpI,QACAiC,YAAamC,EAAOnC,YACpBoG,KAAM,UACNrE,MAAOI,EAAOJ,QAIpB,IA3DsC,6BA6DlC,OAAOoE,GAAoB,CACzBpI,QACAiC,YAAamC,EAAOnC,YACpBoG,KAAM,cACNrE,MAAOI,EAAOJ,QAIpB,IApE+B,sBAsE3B,OAAO,2BAAKhE,GAAZ,IACEyH,MAAOrD,EAAOJ,QAIpB,QACE,OAAOhE,IoG/DX+B,YACA2C,mBACAuC,cACA+N,e1Efc,CAAChV,EAAQ4U,GAA8BxQ,KACrD,OAAQA,EAAOC,MACb,IAR6B,oBAUzB,OAAO,2BAAKrE,GAAZ,IACE,CAACoE,EAAOJ,MAAMnB,IAAKk+B,KAAY,2BAAKt4B,YAASzI,EAAMoE,EAAOJ,MAAMnB,MAC3DuB,EAAOJ,OACTqM,MAIT,IAhByC,gCAkBrC,OAAO,2BAAKrQ,GAAZ,IACE,CAACoE,EAAOvB,IAAKk+B,KAAY,2BAAKt4B,YAASzI,EAAMoE,EAAOvB,MAA5B,IACtBkgB,WAAY3e,EAAO2e,aAClB1S,MAIT,QACE,OAAOrQ,I0ELXqU,S/EvBc,CAACrU,EAAQ,GAAIoE,KAC3B,OAAQA,EAAOC,MACb,IAH6B,oBAI3B,CACE,MAAM28B,EAAgBvuB,YAAarO,EAAOJ,OAI1C,OAHiB2d,KAAO3hB,EAAO,CAC7BihC,OAAQD,IAKd,QACE,OAAOhhC,I+EYXyJ,KtFpBc,CAACzJ,EAAQiR,GAAoB7M,KAC3C,OAAQA,EAAOC,MACb,IATyB,gBAWrB,MASC,CACLxB,IAFqBq+B,EARM98B,EAAOJ,OAUrBnB,GACbqO,SAAUgwB,EAAShwB,SACnBC,SAAU+vB,EAASliB,SAASmiB,YAC5B/vB,YAAa8vB,EAASE,YAAYv2B,IAAI,QAVtC,QACE,OAAO7K,EAIb,IAAyBkhC,GsFSvB/wB,cxFJc,CAACnQ,EAAQ+P,GAA8B3L,KACrD,OAAQA,EAAOC,MACb,IAtBmC,0BAuBjC,CACE,MAAMg9B,EAAW,GAGjB,OAFA1gC,OAAO4K,KAAKyE,IAAqBtI,IAAI+D,GAAK41B,EAAS51B,GAAKrH,EAAOJ,MAAMyH,IACrE41B,EAASpxB,kBAAmB,EACrBoxB,EAGX,IA7BgC,uBA8B9B,OAAOtxB,GAET,IAxBkC,yBAyBhC,OAAOpP,OAAOC,OAAO,GAAIZ,EAAO,CAC9BiQ,kBAAkB,IAGtB,IA5BoC,2BA6BlC,OAAOtP,OAAOC,OAAO,GAAIZ,EAAO,CAC9BiQ,kBAAkB,IAGtB,IAzC+B,sBA0C7B,OAAOD,GAET,IA3C0B,iBA6CtB,OAAOrP,OAAOC,OAAO,GAAIZ,EAAO,CAC9BmE,KAAMC,EAAOJ,QAInB,IAjDgC,uBAmD5B,OAAOrD,OAAOC,OAAO,GAAIZ,EAAO,CAC9BsJ,YAAalF,EAAOJ,QAI1B,IAvD8B,qBAwD5B,OAAKI,EAAOJ,MAAM4B,SAQX+b,KAAO3hB,EAAO,CACnBkK,eAAgB,CACdo3B,QAAS,CAAC,CAAC7G,SAASr2B,EAAOJ,MAAM4B,UAAW,EAAGxB,EAAOJ,WATjD2d,KAAO3hB,EAAO,CACnBkK,eAAgB,CACdq3B,SAAU,CAACn9B,EAAOJ,UAW1B,IArEiC,wBAsE/B,CACE,MAAMw9B,EAAap9B,EAAOJ,MACpByV,EAAqBzZ,EAAMkK,eAAewP,UAAUrS,GAAQA,EAAKxE,KAAO2+B,GAE9E,OAAI/nB,GAAsB,EACjBkI,KAAO3hB,EAAO,CACnBkK,eAAgB,CACdo3B,QAAS,CAAC,CAAC7nB,EAAoB,OAK9BzZ,EAGX,IAnFqC,4BAoFnC,CACE,MAAMyhC,EAAax3B,YAAQjK,EAAMkK,gBACjC,IAAIw3B,GAAmB,EACvB,MAAMC,EAAgBv9B,EAAOJ,MAAM0D,IAAI,EACrC+0B,IACAzB,IACAtqB,IACAC,IACAmY,QAEA,MAAM8Y,EAAYH,EAAWj2B,KAAKq2B,GAAMA,EAAGh/B,KAAOimB,GAElD,OAAM8Y,EAAUnF,IAAMA,GAAKmF,EAAU5G,IAAMA,GAAK4G,EAAUlxB,IAAMA,GAAKkxB,EAAUjxB,IAAMA,GACnF+wB,GAAmB,EACZ/gC,OAAOC,OAAO,GAAIghC,EAAW,CAClClxB,IACAC,IACA8rB,IACAzB,OAIG4G,IAET,OAAOF,EAAgB,2BAAQ1hC,GAAR,IACrBkK,eAAgBy3B,IACd3hC,EAGR,IAlHiC,wBAmH/B,CACE,MAAM2Z,EAAgBvV,EAAOJ,MACvByV,EAAqBzZ,EAAMkK,eAAewP,UAAUrS,GAAQA,EAAKxE,KAAO8W,EAAc9W,IAE5F,GAAI4W,GAAsB,EAAG,CAM3B,OALiBkI,KAAO3hB,EAAO,CAC7BkK,eAAgB,CACdo3B,QAAS,CAAC,CAAC7nB,EAAoB,EAAG9Y,OAAOC,OAAO,GAAI+Y,QAM1D,OAAO3Z,EAGX,QACE,OAAOA,IwFlHXkvB,ejCVc,CAAClvB,EAAQ8uB,GAA+B1qB,KACtD,OAAQA,EAAOC,MACb,IAjB+B,sBAkB7B,CACE,MAAMg9B,EAAW,GAEjB,OADA1gC,OAAO4K,KAAKyjB,IAA2BtnB,IAAI+D,GAAK41B,EAAS51B,GAAKrH,EAAOJ,MAAMyH,IACpE41B,EAGX,IAvBiC,wBAwB/B,OAAOvS,GAET,IAzBoC,2BA0BlC,OAAK1qB,EAAOJ,MAAM4B,SAQX+b,KAAO3hB,EAAO,CACnBkK,eAAgB,CACdo3B,QAAS,CAAC,CAAC7G,SAASr2B,EAAOJ,MAAM4B,UAAW,EAAGxB,EAAOJ,WATjD2d,KAAO3hB,EAAO,CACnBkK,eAAgB,CACdq3B,SAAU,CAACn9B,EAAOJ,UAW1B,IAtCuC,8BAuCrC,CACE,MAAMw9B,EAAap9B,EAAOJ,MACpByV,EAAqBzZ,EAAMkK,eAAewP,UAAUrS,GAAQA,EAAKxE,KAAO2+B,GAE9E,OAAI/nB,GAAsB,EACjBkI,KAAO3hB,EAAO,CACnBkK,eAAgB,CACdo3B,QAAS,CAAC,CAAC7nB,EAAoB,OAK9BzZ,EAGX,IArDuC,8BAsDrC,CACE,MAAM2Z,EAAgBvV,EAAOJ,MACvByV,EAAqBzZ,EAAMkK,eAAewP,UAAUrS,GAAQA,EAAKxE,KAAO8W,EAAc9W,IAE5F,GAAI4W,GAAsB,EAAG,CAM3B,OALiBkI,KAAO3hB,EAAO,CAC7BkK,eAAgB,CACdo3B,QAAS,CAAC,CAAC7nB,EAAoB,EAAG9Y,OAAOC,OAAO,GAAI+Y,QAM1D,OAAO3Z,EAGX,IAxEsC,6BAyEpC,CACE,MAAMyhC,EAAax3B,YAAQjK,EAAMkK,gBACjC,IAAIw3B,GAAmB,EACvB,MAAMC,EAAgBv9B,EAAOJ,MAAM0D,IAAI,EACrC+0B,IACAzB,IACAtqB,IACAC,IACAmY,QAEA,MAAM8Y,EAAYH,EAAWj2B,KAAKq2B,GAAMA,EAAGh/B,KAAOimB,GAElD,OAAM8Y,EAAUnF,IAAMA,GAAKmF,EAAU5G,IAAMA,GAAK4G,EAAUlxB,IAAMA,GAAKkxB,EAAUjxB,IAAMA,GACnF+wB,GAAmB,EACZ/gC,OAAOC,OAAO,GAAIghC,EAAW,CAClClxB,IACAC,IACA8rB,IACAzB,OAIG4G,IAET,OAAOF,EAAgB,2BAAQ1hC,GAAR,IACrBkK,eAAgBy3B,IACd3hC,EAGR,QACE,OAAOA,IiChFX4T,YjFvBc,CAAC5T,EAAQ0T,GAA4BtP,KACnD,OAAQA,EAAOC,MACb,IAL2B,kBAOvB,OAAO,2BAAKrE,GAAZ,IACE,CAACoE,EAAO2E,OAAOlG,IAAKuB,EAAO2E,OAAO/E,QAIxC,IAX8B,qBAY5B,CACE,MAAMq9B,EAAQ,eAAQrhC,GAGtB,cADOqhC,EAASj9B,EAAOvB,IAChBw+B,EAGX,IArB4B,mBAuBxB,OAAOj9B,EAAO2P,QAGlB,IA3B8B,qBA6B1B,OAAOL,GAGX,QACE,OAAO1T,IiFJXK,SACAqU,M5E7Bc,CAAC1U,EADkB,KACWoE,KAC5C,OAAQA,EAAOC,MACb,IAL6B,oBAOzB,OAAOD,EAAOJ,MAGlB,IAT+B,sBAW3B,OAV2B,KAa/B,QACE,OAAOhE,I4EiBXyT,WlF9Bc,CAACzT,EAAQoT,GAAoBhP,KAC3C,OAAQA,EAAOC,MACb,IAJ0B,iBAMtB,MAAO,IAAI+O,MAAuBhP,EAAOJ,OAG7C,QACE,OAAOhE,IkFuBXgf,S5DxBc,CAAChf,EAAQ0e,GAAkBta,KACzC,OAAQA,EAAOC,MACb,IAZwB,eAcpB,OAAO1D,OAAOC,OAAO,GAAIwD,EAAOJ,OAGpC,IAhBwB,eAkBpB,OAAO,2BAAKhE,GACPoE,EAAOJ,OAIhB,QACE,OAAOhE,I4DUXof,qB3DhCc,CAACpf,EAAQkf,GAAsC9a,KAC7D,OAAQA,EAAOC,MACb,IALsC,6BAOlC,OAAOD,EAAOJ,MAGlB,IATwC,+BAWpC,OAAOkb,GAGX,QACE,OAAOlf,I2DoBXg2B,atBlCc,CAACh2B,EAAQ81B,GAA6B1xB,KACpD,OAAQA,EAAOC,MACb,IAJ6B,oBAMzB,OAAOD,EAAOJ,MAGlB,QACE,OAAOhE,MuBOE8hC,OAZQ,KACrB,MAAMC,EAAa,CAACC,MAEdC,EAAmB9iC,OAAO+iC,sCAAwCC,IAMxE,OAJKhjC,OAAO+iC,qCAILE,YAAYC,GAASJ,EAAiBK,eAAmBP,M,6RCqBlEh8B,IAAKw8B,aAAa,KADA,UACiBC,IACnCz8B,IAAKw8B,aAAa,QAFA,UAEoBE,IACtC18B,IAAKw8B,aAAa,KAHA,UAGiBG,IACnC38B,IAAKw8B,aAAa,KAJA,UAIiBI,IACnC58B,IAAKw8B,aAAa,KALA,UAKiBK,IACnC78B,IAAKw8B,aAAa,KANA,UAMiBM,IACnC98B,IAAKw8B,aAAa,KAPA,UAOiBO,IACnC/8B,IAAKw8B,aAAa,KARA,UAQiBQ,IACnCh9B,IAAKw8B,aAAa,KATA,UASiBS,IACnCj9B,IAAKw8B,aAAa,KAVA,UAUiBU,IACnCl9B,IAAKw8B,aAAa,KAXA,UAWiBW,IACnCn9B,IAAKw8B,aAAa,MAZA,UAYkBY,IACpCp9B,IAAKw8B,aAAa,KAbA,UAaiBa,IACnCr9B,IAAKw8B,aAAa,KAdA,UAciBc,IACnCt9B,IAAKw8B,aAAa,QAfA,UAeoBe,IACtCv9B,IAAKw8B,aAAa,KAhBA,UAgBiBgB,IACnCx9B,IAAKw8B,aAAa,KAjBA,UAiBiBiB,IACnCz9B,IAAKw8B,aAAa,MAlBA,UAkBkBkB,IACpC19B,IAAKw8B,aAAa,KAnBA,UAmBiBmB,IACnC39B,IAAKw8B,aAAa,KApBA,UAoBiBoB,IACnC59B,IAAKw8B,aAAa,KArBA,UAqBiBqB,IACnC79B,IAAKw8B,aAAa,UAtBA,UAsBsBsB,IACxC99B,IAAKw8B,aAAa,KAvBA,UAuBiBuB,IACnC/9B,IAAKw8B,aAAa,KAxBA,UAwBiBwB,IACnCh+B,IAAKw8B,aAAa,QAzBA,UAyBoByB,IACvBj+B,EAAf,EClDA,MAGMk+B,GAAY,CAChBC,QAFc,CAAC,QAAS,MAAO,SAAU,cAAe,aAAc,cAAe,YAAa,mBAAoB,cAIlHC,GAAgBC,uLAAYC,+BAAiC,KAG/DF,KACFF,GAAUK,QAAU,CAClB5gB,cAAeygB,KAuBJI,UAnBI,IACV,kBAAC,IAAD,CAAeC,MAAO1C,MACnB,kBAAC,mBAAD,CAAkB2C,MAjBPC,yBAAeC,MAkBtB,kBAAC,IAAD,CAAQV,UAAWA,GAAWW,SAAS,UAClC,EACX9hC,QAEKA,EAKE,kBAAC,GAAD,CAAKA,GAAIA,IAHP,S,0TC7BZ,SAASmH,EAAQ46B,GACtB,OAAOrJ,MAAMsJ,QAAQD,GAASA,EAAQ,GAEjC,SAASp8B,EAASo8B,GACvB,OAAOE,IAASF,GAASA,EAAQ,GAO5B,SAASpyB,EAAa0b,GAC3B,OAAOA,EAAMna,OAAO,CAACqV,EAAKhiB,KACxBgiB,EAAIhiB,EAAKxE,IAAMwE,EACRgiB,GACN,IAYE,MAAM8D,EAAa,CAACnpB,EAAOmN,KAChC,GAA2B,qBAAhB6zB,EAAOC,MAAwBA,KAAKC,eAAgB,CAC7D,MAAM7M,EAASlnB,GAAY,KAC3B,OAAO,IAAI8zB,KAAKC,eAAe7M,EAAQ,CACrC8M,KAAM,UACNC,MAAO,QACPC,IAAK,YACJC,OAAO,IAAIC,KAAKvhC,IAGrB,OAAOA,EAAM6F,OAAO,EAAG,IAAI27B,QAAQ,IAAK,MAoB7BlhC,EAAkB,CAACN,EAAOqH,SAA2ByJ,IAAV9Q,GAAiC,OAAVA,EAAiBqH,EAAerH,EAClGuf,EAAazgB,IACxB,MAAM2iC,EAAM3iC,EAAGG,IAAIC,SACbwiC,EAAMD,EAAIniB,QAAQqY,QAAQ,QAChC,OAAO+J,GAAO,EAAID,EAAIniB,QAAQtI,MAAM,EAAG0qB,GAAOD,EAAIniB,SAEvCqiB,EAAersB,GAAM,2BAAUA,GAAV,IAChCzW,QAAIiS,M,mDCrEN,igCAaO,MAAMlF,EAAgB,gBAChBmG,EAAe,eACfC,EAAQ,QACRC,EAAM,MACNC,EAAe,eACfC,EAAc,cACdkC,EAAM,MACNF,EAAU,UACVC,EAAY,YACZF,EAAQ,QACR7B,EAAW,WACX/O,EAAO,OACPK,EAAS,SACTwP,EAAY,YACZI,EAAmB,mBAInBsc,EAAsBxsB,KAAUyP,EAAYzP,EAAKhD,MAAMwvB,oBACvDvM,EAAa5M,GAJI,cAIQ5D,EAAY4D,GAAUkrB,WAC/Cnf,EAAsB/L,GAJP,YAImB5D,EAAY4D,GAAUkrB,WACxD/qB,EAAsBH,GAAY5D,EAAY4D,GAAUmrB,kBAAoB,EAC5Ele,EAAajN,GAAY5D,EAAY4D,GAAUgN,SAAW,GAE1D5Q,EAAc,CACzB,CAAClH,GAAgB,CACf/M,GAAI+M,EACJ+K,aAAc,iBACd5D,SAAU,gBACVkE,YAAalV,IAAKC,EAAE,kBACpB8/B,OAAQjjC,GAAE,qCAAkCA,GAC5C6kB,QAAS,kBACTme,iBAAkB,IAEpB,CAAC9vB,GAAe,CACdlT,GAAIkT,EACJ4E,aAAc,iBACd5D,SAAU,gBACVkE,YAAalV,IAAKC,EAAE,gBACpB4/B,WAxB0B,YAyB1B/R,qBAAqB,EACrBiS,OAAQjjC,GAAE,qCAAkCA,GAC5C6kB,QAAS,mBAEX,CAAC1R,GAAQ,CACPnT,GAAImT,EACJ2E,aAAc,iBACd5D,SAAU,gBACVkE,YAAalV,IAAKC,EAAE,UACpB4/B,WAlC0B,YAmC1B/R,qBAAqB,EACrBiS,OAAQjjC,GAAE,qCAAkCA,GAC5C6kB,QAAS,mBAEX,CAACzR,GAAM,CACLpT,GAAIoT,EACJ0E,aAAc,OACd5D,SAAU,MACVkE,YAAalV,IAAKC,EAAE,QACpB4/B,WA5C0B,YA6C1B/R,qBAAqB,EACrBiS,OAAQjjC,GAAE,4BAAyBA,GACnC6kB,QAAS,QAEX,CAACxR,GAAe,CACdrT,GAAIqT,EACJyE,aAAc,eACd5D,SAAU,cACVkE,YAAalV,IAAKC,EAAE,iBACpB4/B,WArDwB,UAsDxB/R,qBAAqB,EACrBiS,OAAQjjC,GAAE,qCAAkCA,GAC5C6kB,QAAS,iBAEX,CAACvR,GAAc,CACbtT,GAAIsT,EACJwE,aAAc,cACd5D,SAAU,aACVkE,YAAalV,IAAKC,EAAE,gBACpB4/B,WA/DwB,UAgExB/R,qBAAqB,EACrBiS,OAAQjjC,GAAE,wCAAqCA,GAC/C6kB,QAAS,oBAEX,CAACrP,GAAM,CACLsC,aAAc,OACd5D,SAAU,SACVkE,YAAalV,IAAKC,EAAE,SAEtB,CAACmS,GAAU,CACTtV,GAAIsV,EACJwC,aAAc,UACd5D,SAAU,UACVkE,YAAalV,IAAKC,EAAE,WACpB8/B,OAAQ,CAACjjC,EAAIwB,KACX,OAAQA,GACN,IAAK,OACH,MAAM,2CAAN,OAAkDxB,GAEpD,IAAK,sBACL,IAAK,cACL,QACE,MAAM,eAAN,OAAsBA,EAAtB,wBAAuC,IAAI0iC,MAAOQ,cAI1D,CAAC3tB,GAAY,CACXvV,GAAIuV,EACJuC,aAAc,YACd5D,SAAU,YACVkE,YAAalV,IAAKC,EAAE,aACpB8/B,OAAQjjC,GAAE,wBAAqBA,EAArB,UAEZ,CAACqV,GAAQ,CACPrV,GAAIqV,EACJyC,aAAc,QACd5D,SAAU,QACVkE,YAAalV,IAAKC,EAAE,SACpB8/B,OAAQjjC,GAAE,2DAAwDA,IAEpE,CAACyE,GAAO,CACNzE,GAAIyE,EACJyP,SAAU,QAEZ,CAACV,GAAW,CACVU,SAAU,YAEZ,CAACpP,GAAS,CACRoP,SAAU,QAEZ,CAACI,GAAY,CACXJ,SAAU,QAEZ,CAACQ,GAAmB,CAClBR,SAAU,SAGDivB,EAAkB3hC,GAAQyS,EAAYzS,GAAMsW,aAC5C3B,EAAa,CAAC3U,EAAMgD,EAAMvE,KACrC,IAAIE,EAUJ,OARIqB,IAASgU,IACXrV,EAAMqE,EAAKgpB,WAGTvZ,EAAYzS,IAASyS,EAAYzS,GAAMyhC,SACzC9iC,EAAG,UAAMugB,YAAWzgB,GAAjB,YAAwBgU,EAAYzS,GAAMyhC,OAAOz+B,EAAKxE,GAAIwE,EAAKhD,QAG7DrB,GAEI0M,EAAcrL,IACzB,OAAQA,GACN,KAAK0R,EACL,KAAKG,EACL,KAAKiC,EACH,OAAO8tB,IAET,KAAKjwB,EACL,KAAKG,EACH,OAAO+vB,IAET,KAAKjwB,EACH,OAAOkwB,IAET,KAAK9tB,EACH,OAAO+tB,IAET,KAAKhuB,EACH,OAAOuV,IAET,KAAKzV,EACH,OAAOmuB,IAET,KAAK/+B,EACH,OAAOg/B,IAET,KAAKjwB,EACH,OAAOkwB,IAET,KAAK5+B,EACH,OAAO6+B,IAET,QACE,OAAOC,O,iCCrMb,+jBAGO,MAAM7R,EAAoB,WAEpBH,EAAkB,GAIlBJ,EAAS,CAAC,GAAI,IACd5c,EAAiB,CAC5BglB,EAAG,EACHzB,EAAG,EACHtqB,EAAG,GACHC,EAAG,IAMQssB,EAAuB,GACvByB,EAA4B,GAC5BD,EAA2B,GAK3B9E,EAAqB,KACrBpF,EAAiB,IAVT,GAuBfmS,EAAuBjK,GAAKkK,OAAOC,UAAUnK,IAAMA,GAAK,EAGjDxH,EAAW5tB,GAAQq/B,EAAqBr/B,EAAKo1B,IAAMiK,EAAqBr/B,EAAK2zB,IAAM0L,EAAqBr/B,EAAKqJ,IAAMg2B,EAAqBr/B,EAAKsJ,GAmB7I3I,EAAwB4c,IAC5B,CACLkE,EAAGlE,EACHiiB,KAAM,IAIGxvB,EAAwB,CAACD,EAAME,GAAW,KAC9C,CACLmlB,EAAG,EACHzB,EAAG5jB,EACH1G,EAvDwBo2B,GAwDxBn2B,EAAG,EACHo2B,SAAUzvB,EACVuvB,KAAM,IAGGrvB,EAA6B4e,IACjC,CACLqG,EAAG,EACHzB,EAAG,EACHtqB,EAAG0lB,EAAmBqI,EAjEEqI,GAkExBn2B,EAAGssB,EACH8J,QAAQ,EACRF,KAAM,IAyBGlxB,EAAYlO,GAASA,EAAMC,IAAI,CAACL,EAAM6mB,KACjD,MAAM8Y,EAAgB/R,EAAS5tB,GAAQA,EAAO1G,OAAOC,OAAO,GAAIyG,EAlE1CyhB,KACtB,IAAK4d,EAAqB5d,GACxB,MAAM,IAAIme,MAAM,6BAGlB,MAAMC,EAAMpe,EAnCc,EAoCpBqe,EAAM3mC,KAAK+L,MAAMuc,EApCG,GAqCpBse,EAAY5mC,KAAK+L,MAAM86B,MACvBC,EAA+B,EAAlB7S,EACnB,MAAO,CACLgI,EAAGyK,EAAME,EACTpM,EAAGmM,EAAMG,EACT52B,EAAG02B,EACHz2B,EAAG22B,IAqDiEC,CAASrZ,IAC/E,OAAOvtB,OAAOC,OAAO,GAAIomC,EAhBM3/B,KAExB,CACL2iB,eAFqBxpB,KAAKgnC,MAAM/S,EAAkBptB,EAAKsJ,EAAInQ,KAAKC,IAAI,EAAG4G,EAAKsJ,EAAI,GAAK0jB,EAAO,MAetDoT,CAAkBT,MAE/CljB,EAAmBjhB,GAAE,eAAYA,GACvC,SAAS+wB,EAAa/wB,GAC3B,MAAMurB,EAAK3lB,YAASukB,SAAS2J,cAAT,WAA2B7S,EAAiBjhB,MAC5D6kC,IAAWtZ,EAAGuZ,kBAAkBlyB,WAAW,IAAM2Y,EAAGuZ,gBAAgBvZ,EAAGwZ,YAAc,EAAGxZ,EAAGjE,aAAe,GAAI,M,6cChHpH,MAAM0d,EAA2B,CAC/B,CAAC5xB,KAAM,YACP,CAACC,KAAe,oBAChB,CAACC,KAAc,oBAKX2xB,EAAYzjC,IAChB,GAH0BA,IAAQ,CAAC2R,IAAOD,KAAc1H,SAAShK,GAG7D0jC,CAAoB1jC,GACtB,OAAO,EAIT,OAAO2gC,EADY6C,EAAyBxjC,KAKjCkjB,EAAoB,CAAClgB,EAAO,GAAIub,EAAgB,MAC3D,MAAMve,EAAOue,EAAcG,YAAc1b,EAAKhD,KAC9C,QAASyjC,EAAUzjC,IAER+R,EAAkB/O,IAC7B,IAAK09B,IAAS19B,GACZ,OAAO,KAIT,OAAOA,EADUyP,IAAYzP,EAAKhD,MAAM0S,WACf1P,EAAK2gC,aAAe3gC,EAAK4gC,OAAS5gC,EAAKK,KAAOL,EAAK6gC,aAAe7gC,EAAK8gC,YAAc,IAkBnG/f,EAAQ/gB,GAAQ+O,EAAgB/O,GAAMxE,GACtCulC,EAAU/gC,GAAQ+O,EAAgB/O,GAAMlD,KAExCyjB,EAAU,CAACvgB,EAAMvE,KAC5B,MAAMwgB,EAAUC,YAAWzgB,GACrBgjC,EAAShvB,IAAYzP,EAAKhD,MAAMyhC,OAAO1d,EAAM/gB,IACnD,MAAM,GAAN,OAAUic,EAAV,YAAqBwiB,IAEVuC,EAAO1lC,MAAO0E,EAAMub,GAC/BQ,cACAL,aACAY,UAAU,OAEV,MAAM2kB,EAAM,uCAAQ1lB,GACfe,GADO,IAEVyK,GAAItK,YAAiBzc,EAAKxE,MAEtBwB,EAAO0e,GAAc1b,EAAKhD,KAhCR,EAACkkC,EAAQD,EAAQllB,KACnCmlB,GAAUA,EAAOF,OAIvBE,EAAOvlC,IAAMogB,EAAYE,QACzBilB,EAAOC,kBAAmB,EAC1BD,EAAOv/B,WAAY,EAEfoa,EAAYI,OACd+kB,EAAO/kB,KAAOJ,EAAYI,MAG5B+kB,EAAOF,KAAKC,KAqBZG,CADeX,EAAUzjC,GACNikC,EAAQllB,IAEhBslB,EAAQ/lC,eACWgmC,YAAiBvgB,EAAM/gB,GAAOA,EAAKhD,KAAM,CACrE6N,OAAQ7K,EAAKhD,OAAS4R,IAAM2yB,cAAiB,OAIpCC,EAASxhC,IACpB,MAAMkhC,EAAST,EAAUzgC,EAAKhD,MAE1BkkC,GAAUA,EAAOM,QACnBN,EAAOM,OAAO/kB,YAAiBzc,EAAKxE,MAG3BimC,EAAU,CAACzhC,EAAM0b,KAC5B,MAAMwlB,EAAST,EAAU/kB,GAErBwlB,GAAUA,EAAOO,SACnBP,EAAOO,QAAQhlB,YAAiBzc,EAAKxE,MAG5BkmC,EAAyB,CAACnmB,EAAeomB,EAAcjmB,KAClE,GAAIimB,IAAiB/yB,KAAO+yB,IAAiBjmB,EAAY,CACvD,MAAMkmB,GA3DoBvhC,EA2Dckb,GA3DH+H,UAAYjjB,EAAIijB,SAASnf,KAAK09B,GAAMA,EAAGte,MAAMvc,SAbxD,aA0E1B,YAAyByG,IAArBm0B,EACK,KAGFtD,YAAa,uCAAK/iB,GACpBqmB,GADc,IAEjBte,cAAU7V,EACVzQ,KAAM0e,IAAe/M,IAAQmzB,IAAkBC,OAE5C,OAAIJ,IAAiBjzB,KAAgBgN,IAAe/M,IAClD2vB,YAAa,2BAAK/iB,GAAN,IACjBve,KAAM8kC,OAECH,IAAiBhzB,KAAS+M,IAAehN,IAC3C4vB,YAAa,2BAAK/iB,GAAN,IACjBve,KAAM+kC,OAIHzD,YAAa/iB,GAhFQlb,S,sCCpC9BnJ,EAAOC,QAAU,CAAC,eAAiB,mCAAmC,UAAY,8BAA8B,gBAAkB,sC,0CCAlID,EAAOC,QAAU,CAAC,aAAe,oCAAoC,cAAgB,qCAAqC,UAAY,mC,iCCDtI,kNAIO,MAAMsT,EAAkB,EAC7BC,UACE,KAAO,CAAC,KAAD,UAAUA,EAAS,2BAA6B,qBAI9Cs3B,EAAqB,EAChCx3B,eACIL,IAAW,CAAC,YAAa,gBAAiB,SAAU,eAAgBK,EAAS,gBAJhD,CAAC,2BAA4B,2BAA4B,qBAImBjI,KAAK,KAAjC,UAEtE0/B,EAAgB,EAC3Bz3B,eACI,CAAC,WAAD,OAAYw3B,EAAmB,CACnCx3B,cACCjI,KAAK,KAFF,oBAEmBy/B,EAAmB,CAC1Cx3B,cACCjI,KAAK,KAJF,uBAIsBy/B,EAAmB,CAC7Cx3B,cACCjI,KAAK,KANF,MAQO2/B,EAAoB,EAC/B53B,iBACA63B,iBAEOh4B,IAAW,CAAC,GAAD,OAAIM,EAAgB,CACpCC,QAAQ,IACPnI,KAAK,MAAQ,yCAA0C+H,EAAc,UAAM23B,EAAc,CAC1Fz3B,WAAW,IACVjI,KAAK,MAFgE,GAEnD4/B,EAAc,CAAC,IAAK,uBAAwB,mBAAoB,YAAa,sBAAuB,oCAAqC,oBAAqB,sBAAuB,yBAA0B,iCAAkC,oBAAqB,8BAA+B,iBAAkB,sCAAuC,0BAA2B,qBAAsB,8BAA+B,mBAAoB,gBAAiB,iBAAkB,gBAAiB,wBAAyB,gCAAiC,sCAAsC5/B,KAAK,KAAO,KAE5mB8H,EAAqB,EAChCC,oBACI,CAAC,eAAD,OAAgB43B,EAAkB,CACtC53B,mBACC/H,KAAK,KAFF,qBAEoB,CAAC,UAAW2/B,EAAkB,CACtD53B,oBACE/H,KAAK,KAJH,mBAImB2/B,EAAkB,CACzC53B,mBACC/H,KAAK,KANF,2BAM0B2/B,EAAkB,CAChD53B,mBACC/H,KAAK,KARF,0BAQyB2/B,EAAkB,CAC/C53B,mBACC/H,KAAK,KAVF,MAYO6H,EAAoB,IAAM,CAAC,WAAD,OAAY,CAAC,UAAWK,EAAgB,CAC7EC,QAAQ,KACNnI,KAAK,KAF8B,yBAERkI,EAAgB,CAC7CC,QAAQ,IACPnI,KAAK,KAJ+B,qBAIbkI,EAAgB,CACxCC,QAAQ,IACPnI,KAAK,KAN+B,MAQ1Bg/B,EAAe,IAAM,CAAC,GAAD,OAAI92B,EAAgB,CACpDC,QAAQ,IACPnI,KAAK,MAAQ,uCAFkB,mBAEkC2/B,EAAkB,CACpF53B,gBAAgB,EAChB63B,aAAa,IAJmB,MAQrBb,EAAmB,CAAC9lC,EAAIwB,GACnC6N,YACInP,wBAAc8N,KAAK/N,GAAMA,EAAGG,IAAIC,SAAS6H,IAAhB,UAAuBi7B,YAAgB3hC,GAAvC,YAAgDxB,GAAM,CACnFqP,OAAQA,GAAUq3B,EAAkB,CAClC53B,gBAAgB,EAChB63B,aAAa,Q,0CCpEjBjrC,EAAOC,QAAU,CAAC,KAAO,yBAAyB,QAAU,4BAA4B,WAAa,iC,oBCArGD,EAAOC,QAAU,CAAC,KAAO,gCAAgC,KAAO,gCAAgC,SAAW,oCAAoC,WAAa,wC,oBCA5JD,EAAOC,QAAU,CAAC,OAAS,4BAA4B,KAAO,4B,oBCA9DD,EAAOC,QAAU,CAAC,SAAW,iCAAiC,SAAW,mC,oBCAzED,EAAOC,QAAU,CAAC,SAAW,kCAAkC,WAAa,oCAAoC,MAAQ,+BAA+B,aAAe","file":"static/js/app.a1101540.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"showMoreButton\":\"CategorizedMenuGroup_showMoreButton__2RbRp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"EditTitleBar_section__LIaIC\",\"titleDescription\":\"EditTitleBar_titleDescription__1YsU6\",\"title\":\"EditTitleBar_title__3mUbt\",\"description\":\"EditTitleBar_description__24U5X\",\"itemSelector\":\"EditTitleBar_itemSelector__1cFEp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"actions\":\"ViewTitleBar_actions__2UTRz\",\"editLink\":\"ViewTitleBar_editLink__d_HzW\",\"titleBar\":\"ViewTitleBar_titleBar__eiwJS\",\"titleBarIcon\":\"ViewTitleBar_titleBarIcon__2cBxv\",\"strip\":\"ViewTitleBar_strip__3xR4U\",\"backdrop\":\"ViewTitleBar_backdrop__2Cpm8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FatalErrorBoundary_container__3SViR\",\"icon\":\"FatalErrorBoundary_icon__2UbeP\",\"message\":\"FatalErrorBoundary_message__3FzrY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"deleteItemButton\":\"DeleteItemButton_deleteItemButton__3TJm9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"warning\":\"PrintItemInfo_warning__123PK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"center\":\"LoadingMask_center__2SFwS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textDiv\":\"Item_textDiv__1U7zV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Item_list__1_nkQ\",\"item\":\"Item_item__3-6QE\",\"itemicon\":\"Item_itemicon__QlouX\",\"link\":\"Item_link___3c_q\",\"deleteicon\":\"Item_deleteicon__3usrl\",\"deletebutton\":\"Item_deletebutton__1DpBW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"titlePage\":\"Item_titlePage__18CNQ\",\"name\":\"Item_name__3nuTV\",\"description\":\"Item_description__1gFQd\",\"filterTitle\":\"Item_filterTitle__2p7TQ\",\"filterList\":\"Item_filterList__qc_G3\",\"filterListItem\":\"Item_filterListItem__sPbBY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bar\":\"FilterBar_bar__1Ma3p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ConfirmDeleteDialog_content__EqswE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"infoWrapper\":\"PrintInfo_infoWrapper__3m2lt\",\"infoHeader\":\"PrintInfo_infoHeader__KyW8I\",\"info\":\"PrintInfo_info__13oXZ\",\"infoList\":\"PrintInfo_infoList__Iu9MC\",\"divider\":\"PrintInfo_divider__3wzx9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PrintActionsBar_container__2iQp7\",\"topMargin\":\"PrintActionsBar_topMargin__OpYDN\",\"inner\":\"PrintActionsBar_inner__uBqU7\",\"link\":\"PrintActionsBar_link__lFUmI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"PrintLayoutDashboard_wrapper__1WDh4\",\"pageOuter\":\"PrintLayoutDashboard_pageOuter__22acI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"PrintDashboard_wrapper__1O3s_\",\"pageOuter\":\"PrintDashboard_pageOuter__fl9tw\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { colors } from '@dhis2/ui';\nimport classes from './styles/ControlBar.module.css';\nexport const DRAG_HANDLE_HEIGHT = 7;\n\nclass ControlBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dragging: false\n    };\n  }\n\n  onStartDrag = () => {\n    this.setState({\n      dragging: true\n    });\n    window.addEventListener('mousemove', this.onDrag);\n    window.addEventListener('mouseup', this.onEndDrag);\n  };\n  onDrag = event => {\n    event.preventDefault();\n    event.stopPropagation();\n    const newHeight = event.clientY;\n\n    if (this.props.onChangeHeight && newHeight !== this.props.height && newHeight > 0) {\n      requestAnimationFrame(() => {\n        this.props.onChangeHeight(newHeight);\n      });\n    }\n  };\n  onEndDrag = () => {\n    this.setState({\n      dragging: false\n    });\n    window.removeEventListener('mousemove', this.onDrag);\n    window.removeEventListener('mouseup', this.onEndDrag);\n\n    if (this.props.onEndDrag) {\n      this.props.onEndDrag();\n    }\n  };\n\n  renderDragHandle() {\n    return typeof this.props.onChangeHeight === 'function' ? <div className={classes.draghandle} style={{\n      height: DRAG_HANDLE_HEIGHT\n    }} onMouseDown={this.onStartDrag} /> : null;\n  }\n\n  render() {\n    const height = Math.max(this.props.height, 0) + DRAG_HANDLE_HEIGHT;\n    const rootStyle = Object.assign({\n      height,\n      backgroundColor: this.props.editMode ? colors.yellow050 : colors.white,\n      paddingBottom: DRAG_HANDLE_HEIGHT\n    }, // Disable animations while dragging\n    this.state.dragging ? {\n      transition: 'none'\n    } : {});\n    return <div style={rootStyle} className={classes.root}>\n                <div className={classes.content}>{this.props.children}</div>\n                {this.renderDragHandle()}\n            </div>;\n  }\n\n}\n\nControlBar.propTypes = {\n  /**\n   * The height of the control bar in number of lines. Must be a positive integer.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * If true, the background color of the control bar changes to indicate that edit mode is active.\n   */\n  editMode: PropTypes.bool.isRequired,\n\n  /**\n   * Callback function that is called when the control bar is resized.\n   * The callback receives one argument: The new height in pixels.\n   *\n   * If no callback is specified the control bar will not have a drag handle.\n   */\n  height: PropTypes.number.isRequired,\n\n  /**\n   * Callback function that is called when the control bar is dropped after being dragged.\n   * The callback receives one argument: The new height in pixels.\n   *\n   * Ignored if no \"onChangeHeight\" function is provided.\n   */\n  onChangeHeight: PropTypes.func,\n\n  /**\n   * The contents of the control bar.\n   */\n  onEndDrag: PropTypes.func\n};\nControlBar.defaultProps = {\n  onChangeHeight: null,\n  onEndDrag: null\n};\nexport default ControlBar;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst StarIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>;\n\nStarIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default StarIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Chip } from '@dhis2/ui';\nimport { Link } from 'react-router-dom';\nimport debounce from 'lodash/debounce';\nimport StarIcon from '../../icons/Star';\nimport { apiPostDataStatistics } from '../../api/dataStatistics';\nimport classes from './styles/DashboardItemChip.module.css';\nexport const DashboardItemChip = ({\n  starred,\n  selected,\n  label,\n  dashboardId\n}) => {\n  const chipProps = {\n    selected\n  };\n\n  if (starred) {\n    const selectedState = selected ? classes.selected : classes.unselected;\n    chipProps.icon = <StarIcon className={`${classes.icon} ${selectedState}`} />;\n  }\n\n  return <Link className={classes.link} to={`/${dashboardId}`} onClick={debounce(() => apiPostDataStatistics('DASHBOARD_VIEW', dashboardId), 500)}>\n            <Chip {...chipProps}>{label}</Chip>\n        </Link>;\n};\nDashboardItemChip.propTypes = {\n  dashboardId: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  selected: PropTypes.bool.isRequired,\n  starred: PropTypes.bool.isRequired,\n  classes: PropTypes.object\n};\nexport default DashboardItemChip;","import { getInstance } from 'd2';\nexport const apiPostDataStatistics = async (eventType, id) => {\n  const d2 = await getInstance();\n  const url = `dataStatistics?eventType=${eventType}&favorite=${id}`;\n  d2.Api.getApi().post(url);\n};","import React from 'react';\nimport { colors } from '@dhis2/ui';\n\nconst AddCircleIcon = () => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" fill={colors.teal600} viewBox=\"0 0 24 24\">\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm4 11h-3v3c0 .55-.45 1-1 1s-1-.45-1-1v-3H8c-.55 0-1-.45-1-1s.45-1 1-1h3V8c0-.55.45-1 1-1s1 .45 1 1v3h3c.55 0 1 .45 1 1s-.45 1-1 1z\" />\n    </svg>;\n\nexport default AddCircleIcon;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst ClearIcon = ({\n  className\n}) => <svg className={className} fill={colors.grey800} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n        <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>;\n\nClearIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default ClearIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ClearIcon from '../../icons/Clear';\nimport classes from './styles/ClearButton.module.css';\nexport const ClearButton = ({\n  onClear\n}) => <button className={classes.button} onClick={onClear}>\n        <span>\n            <ClearIcon className={classes.icon} color=\"action\" />\n        </span>\n    </button>;\nClearButton.propTypes = {\n  onClear: PropTypes.func.isRequired\n};\nexport default ClearButton;","import { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\nexport const SET_DASHBOARDS_FILTER_NAME = 'SET_DASHBOARDS_FILTER_NAME';\nexport const SET_DASHBOARDS_FILTER_OWNER = 'SET_DASHBOARDS_FILTER_OWNER';\nexport const SET_DASHBOARDS_FILTER_ORDER = 'SET_DASHBOARDS_FILTER_ORDER';\nexport const ownerData = [{\n  id: 'ALL',\n  value: 'All users'\n}, {\n  id: 'ME',\n  value: 'Created by me'\n}, {\n  id: 'OTHERS',\n  value: 'Created by others'\n}];\nexport const orderData = [{\n  id: 'NAME:ASC',\n  value: 'Name (asc)'\n}, {\n  id: 'NAME:ASC',\n  value: 'Name (desc)'\n}, {\n  id: 'ITEMS:ASC',\n  value: 'Number of items (asc)'\n}, {\n  id: 'ITEMS:ASC',\n  value: 'Number of items (desc)'\n}, {\n  id: 'CREATED:ASC',\n  value: 'Created date (asc)'\n}, {\n  id: 'CREATED:ASC',\n  value: 'Created date (desc)'\n}];\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_NAME = '';\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_OWNER = ownerData[0].id;\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_ORDER = orderData[0].id;\n\nconst name = (state = DEFAULT_STATE_DASHBOARDS_FILTER_NAME, action) => {\n  switch (action.type) {\n    case SET_DASHBOARDS_FILTER_NAME:\n      return validateReducer(action.value, DEFAULT_STATE_DASHBOARDS_FILTER_NAME);\n\n    default:\n      return state;\n  }\n};\n\nconst owner = (state = DEFAULT_STATE_DASHBOARDS_FILTER_OWNER, action) => {\n  switch (action.type) {\n    case SET_DASHBOARDS_FILTER_OWNER:\n      return validateReducer(action.value, DEFAULT_STATE_DASHBOARDS_FILTER_NAME);\n\n    default:\n      return state;\n  }\n};\n\nconst order = (state = DEFAULT_STATE_DASHBOARDS_FILTER_ORDER, action) => {\n  switch (action.type) {\n    case SET_DASHBOARDS_FILTER_ORDER:\n      return validateReducer(action.value, DEFAULT_STATE_DASHBOARDS_FILTER_ORDER);\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  name,\n  owner,\n  order\n}); // selectors\n\nexport const sGetDashboardsFilterRoot = state => state.dashboardsFilter; // selector dependency level 2\n\nexport const sGetFilterName = state => sGetDashboardsFilterRoot(state).name;\nexport const sGetFilterOwner = state => sGetDashboardsFilterRoot(state).owner;\nexport const sGetFilterOrder = state => sGetDashboardsFilterRoot(state).order;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { withStyles } from '@material-ui/core/styles';\nimport InputField from '@material-ui/core/Input';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { colors } from '@dhis2/ui';\nimport ClearButton from './ClearButton';\nimport { DEFAULT_STATE_DASHBOARDS_FILTER_NAME } from '../../reducers/dashboardsFilter';\nconst styles = {\n  filterField: {\n    fontSize: '14px',\n    width: '200px',\n    height: '30px',\n    top: '-4px'\n  },\n  searchIcon: {\n    color: colors.grey700,\n    width: '20px',\n    height: '20px'\n  }\n};\nexport const KEYCODE_ENTER = 13;\nexport const KEYCODE_ESCAPE = 27;\nexport class Filter extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: DEFAULT_STATE_DASHBOARDS_FILTER_NAME\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      value: nextProps.name\n    });\n  }\n\n  setFilterValue = event => {\n    event.preventDefault();\n    this.props.onChangeName(event.target.value);\n  };\n  handleKeyUp = event => {\n    switch (event.keyCode) {\n      case KEYCODE_ENTER:\n        this.props.onKeypressEnter();\n        break;\n\n      case KEYCODE_ESCAPE:\n        this.props.onChangeName();\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  render() {\n    const {\n      classes,\n      name,\n      onChangeName\n    } = this.props;\n    const startAdornment = <InputAdornment position=\"start\">\n                <SearchIcon className={classes.searchIcon} />\n            </InputAdornment>;\n    const endAdornment = name !== '' && name !== null ? <InputAdornment position=\"end\">\n                    <ClearButton onClear={() => onChangeName()} />\n                </InputAdornment> : null;\n    return <InputField className={classes.filterField} placeholder={i18n.t('Search for a dashboard')} startAdornment={startAdornment} endAdornment={endAdornment} value={this.state.value} onChange={this.setFilterValue} onKeyUp={this.handleKeyUp} />;\n  }\n\n}\nFilter.propTypes = {\n  classes: PropTypes.object,\n  name: PropTypes.string,\n  onChangeName: PropTypes.func,\n  onKeypressEnter: PropTypes.func\n};\nFilter.defaultProps = {\n  name: '',\n  onChangeName: Function.prototype\n};\nexport default withStyles(styles)(Filter);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport classes from './styles/ShowMoreButton.module.css';\nexport const SHOWMORE_BAR_HEIGHT = 16;\nexport const ShowMoreButton = ({\n  onClick,\n  isMaxHeight,\n  disabled\n}) => {\n  return <div style={{\n    textAlign: 'center'\n  }}>\n            {disabled ? <div className={classes.disabled}>{i18n.t('Show more')}</div> : <div className={classes.showMore} onClick={onClick}>\n                    {isMaxHeight ? i18n.t('Show less') : i18n.t('Show more')}\n                </div>}\n        </div>;\n};\nShowMoreButton.propTypes = {\n  disabled: PropTypes.bool,\n  isMaxHeight: PropTypes.bool,\n  onClick: PropTypes.func\n};\nexport default ShowMoreButton;","import { SHOWMORE_BAR_HEIGHT } from './ShowMoreButton';\nexport const CONTROL_BAR_ROW_HEIGHT = 40;\nexport const FIRST_ROW_PADDING_HEIGHT = 10;\nexport const MIN_ROW_COUNT = 1;\nexport const HEADERBAR_HEIGHT = 48;\nconst CONTROL_BAR_OUTER_HEIGHT_DIFF = FIRST_ROW_PADDING_HEIGHT + SHOWMORE_BAR_HEIGHT - 2; // 2 pixel \"adjustment\"\n\nexport const getRowsHeight = rows => {\n  return rows * CONTROL_BAR_ROW_HEIGHT;\n};\nexport const getNumRowsFromHeight = height => {\n  return Math.floor((height - CONTROL_BAR_OUTER_HEIGHT_DIFF) / CONTROL_BAR_ROW_HEIGHT);\n};\nexport const getControlBarHeight = rows => {\n  return getRowsHeight(rows) + CONTROL_BAR_OUTER_HEIGHT_DIFF;\n};","/** @module reducers/controlBar */\nimport { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\nexport const SET_CONTROLBAR_USER_ROWS = 'SET_CONTROLBAR_USER_ROWS';\nexport const DEFAULT_STATE_CONTROLBAR_ROWS = 1;\n\nconst userRows = (state = DEFAULT_STATE_CONTROLBAR_ROWS, action) => {\n  switch (action.type) {\n    case SET_CONTROLBAR_USER_ROWS:\n      return validateReducer(action.value, DEFAULT_STATE_CONTROLBAR_ROWS);\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  userRows\n});\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\n\nexport const sGetControlBarRoot = state => state.controlBar; // Selector dependency level 2\n\nexport const sGetControlBarUserRows = state => sGetControlBarRoot(state).userRows;","import { TEXT, SPACER } from './itemTypes';\nimport { getGridItemProperties } from '../components/ItemGrid/gridUtil';\nexport const spacerContent = 'SPACER_ITEM_FOR_DASHBOARD_LAYOUT_CONVENIENCE';\nexport const emptyTextItemContent = 'TEXT_ITEM_WITH_NO_CONTENT';\n\nconst isBackendSpacerType = item => item.type === TEXT && item.text === spacerContent;\n\nconst isUiSpacerType = item => item.type === SPACER;\n\nconst isTextType = item => item.type === TEXT && item.text !== spacerContent;\n\nexport const convertUiItemsToBackend = items => items.map(item => {\n  let text = null;\n\n  if (isUiSpacerType(item)) {\n    text = spacerContent;\n  } else if (isTextType(item)) {\n    text = item.text || emptyTextItemContent;\n  }\n\n  return { ...item,\n    ...(text ? {\n      text\n    } : {})\n  };\n});\nexport const convertBackendItemsToUi = items => items.map(item => {\n  const type = isBackendSpacerType(item) ? SPACER : item.type;\n  const gridProperties = getGridItemProperties(item.id);\n  const text = isTextType(item) ? item.text === emptyTextItemContent ? '' : item.text : null;\n  return { ...item,\n    ...(text !== null ? {\n      text\n    } : {}),\n    type,\n    ...gridProperties\n  };\n});","/** @module reducers/dashboards */\nimport arrayFrom from 'd2-utilizr/lib/arrayFrom';\nimport arraySort from 'd2-utilizr/lib/arraySort';\nimport { orArray, orObject } from '../modules/util';\nimport { convertBackendItemsToUi } from '../modules/uiBackendItemConverter';\nexport const SET_DASHBOARDS = 'SET_DASHBOARDS';\nexport const ADD_DASHBOARDS = 'ADD_DASHBOARDS';\nexport const SET_DASHBOARD_STARRED = 'SET_DASHBOARD_STARRED';\nexport const SET_DASHBOARD_DISPLAY_NAME = 'SET_DASHBOARD_DISPLAY_NAME';\nexport const SET_DASHBOARD_ITEMS = 'SET_DASHBOARD_ITEMS';\nexport const DEFAULT_STATE_DASHBOARDS = {\n  byId: null,\n  items: []\n};\nexport const EMPTY_DASHBOARD = {}; // reducer helper functions\n\nconst updateDashboardProp = ({\n  state,\n  dashboardId,\n  prop,\n  value\n}) => ({\n  byId: { ...state.byId,\n    [dashboardId]: { ...state.byId[dashboardId],\n      [prop]: value\n    }\n  },\n  items: state.items\n});\n/**\n * Reducer that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n * @returns {Object}\n */\n\n\nexport default ((state = DEFAULT_STATE_DASHBOARDS, action) => {\n  switch (action.type) {\n    case SET_DASHBOARDS:\n      {\n        return {\n          byId: action.value,\n          items: []\n        };\n      }\n\n    case ADD_DASHBOARDS:\n      {\n        return { ...state,\n          byId: { ...state.byId,\n            ...action.value\n          }\n        };\n      }\n\n    case SET_DASHBOARD_STARRED:\n      {\n        return updateDashboardProp({\n          state,\n          dashboardId: action.dashboardId,\n          prop: 'starred',\n          value: action.value\n        });\n      }\n\n    case SET_DASHBOARD_DISPLAY_NAME:\n      {\n        return updateDashboardProp({\n          state,\n          dashboardId: action.dashboardId,\n          prop: 'displayName',\n          value: action.value\n        });\n      }\n\n    case SET_DASHBOARD_ITEMS:\n      {\n        return { ...state,\n          items: action.value\n        };\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetDashboardsRoot = state => state.dashboards; // selector level 1\n\n/**\n * Selector which returns a dashboard by id from the state object\n * If no matching dashboard is found it returns undefined\n * If dashboards.byId is null, then the dashboards api request\n * has not yet completed. If dashboards.byId is an empty object\n * then the dashboards api request is complete, but no dashboards\n * were returned\n *\n * @function\n * @param {Object} state The current state\n * @param {Number} id The id of the dashboard\n * @returns {Object | undefined}\n */\n\nexport const sGetDashboardById = (state, id) => orObject(sGetDashboardsRoot(state).byId)[id];\nexport const sDashboardsIsFetching = state => {\n  return sGetDashboardsRoot(state).byId === null;\n};\n/**\n * Selector which returns all dashboards (the byId object)\n *\n * @function\n * @param {Object} state The current state\n * @returns {Object | undefined}\n */\n\nexport const sGetAllDashboards = state => orObject(sGetDashboardsRoot(state).byId);\n/**\n * Selector which returns the current dashboard items\n *\n * @function\n * @param {Object} state The current state\n * @returns {Array}\n */\n\nexport const sGetDashboardItems = state => sGetDashboardsRoot(state).items; // selector level 2\n\nexport const sGetStarredDashboards = state => Object.values(sGetAllDashboards(state)).filter(dashboard => dashboard.starred === true);\nexport const sGetUnstarredDashboards = state => Object.values(sGetAllDashboards(state)).filter(dashboard => dashboard.starred === false); // selector level 3\n\nexport const sGetStarredDashboardIds = state => {\n  return sGetStarredDashboards(state).map(dashboard => dashboard.id);\n};\nexport const sGetUnstarredDashboardIds = state => sGetUnstarredDashboards(state).map(dashboard => dashboard.id);\nexport const sGetDashboardsSortedByStarred = state => [...arraySort(sGetStarredDashboards(state), 'ASC', 'displayName'), ...arraySort(sGetUnstarredDashboards(state), 'ASC', 'displayName')]; // utils\n\n/**\n * Returns the array of dashboards, customized for ui\n * @function\n * @param {Array} data The original dashboard list\n * @returns {Array}\n */\n\nexport const getCustomDashboards = data => arrayFrom(data).map(d => ({\n  id: d.id,\n  name: d.name,\n  displayName: d.displayName,\n  description: d.description,\n  displayDescription: d.displayDescription,\n  starred: d.favorite,\n  owner: d.user.name,\n  created: d.created.split('T').join(' ').substr(0, 16),\n  lastUpdated: d.lastUpdated.split('T').join(' ').substr(0, 16),\n  access: d.access,\n  numberOfItems: orArray(d.dashboardItems).length,\n  dashboardItems: convertBackendItemsToUi(d.dashboardItems)\n}));","/** @module reducers/selected */\nimport { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\nexport const SET_SELECTED_ID = 'SET_SELECTED_ID';\nexport const SET_SELECTED_ISLOADING = 'SET_SELECTED_ISLOADING';\nexport const SET_SELECTED_SHOWDESCRIPTION = 'SET_SELECTED_SHOWDESCRIPTION';\nexport const DEFAULT_STATE_SELECTED_ID = null;\nexport const DEFAULT_STATE_SELECTED_ISLOADING = false;\nexport const DEFAULT_STATE_SELECTED_SHOWDESCRIPTION = false;\nexport const NON_EXISTING_DASHBOARD_ID = '0';\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\n\nconst id = (state = DEFAULT_STATE_SELECTED_ID, action) => {\n  switch (action.type) {\n    case SET_SELECTED_ID:\n      return validateReducer(action.value, DEFAULT_STATE_SELECTED_ID);\n\n    default:\n      return state;\n  }\n};\n\nconst isLoading = (state = DEFAULT_STATE_SELECTED_ISLOADING, action) => {\n  switch (action.type) {\n    case SET_SELECTED_ISLOADING:\n      return validateReducer(action.value, DEFAULT_STATE_SELECTED_ISLOADING);\n\n    default:\n      return state;\n  }\n};\n\nconst showDescription = (state = DEFAULT_STATE_SELECTED_SHOWDESCRIPTION, action) => {\n  switch (action.type) {\n    case SET_SELECTED_SHOWDESCRIPTION:\n      return validateReducer(action.value, DEFAULT_STATE_SELECTED_SHOWDESCRIPTION);\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  id,\n  isLoading,\n  showDescription\n}); // Selectors\n\nexport const sGetSelectedRoot = state => state.selected;\nexport const sGetSelectedId = state => sGetSelectedRoot(state).id;\nexport const sGetSelectedIsLoading = state => sGetSelectedRoot(state).isLoading;\nexport const sGetSelectedShowDescription = state => sGetSelectedRoot(state).showDescription;","import { getInstance } from 'd2';\nexport const NAMESPACE = 'dashboard';\nexport const hasNamespace = async (d2) => await d2.currentUser.dataStore.has(NAMESPACE);\nexport const getNamespace = async (d2, hasNamespace) => hasNamespace ? await d2.currentUser.dataStore.get(NAMESPACE) : await d2.currentUser.dataStore.create(NAMESPACE);\nexport const apiPostUserDataStoreValue = async (key, value) => {\n  const d2 = await getInstance();\n  const ns = await getNamespace(d2, hasNamespace);\n  ns.set(key, value);\n};\nexport const apiGetUserDataStoreValue = async (key, defaultValue) => {\n  const d2 = await getInstance();\n  const namespace = await getNamespace(d2, await hasNamespace(d2));\n  const hasKey = namespace?.keys?.find(k => k === key);\n\n  if (hasKey) {\n    return await namespace.get(key);\n  } else {\n    await apiPostUserDataStoreValue(key, defaultValue, namespace);\n    console.log('(These errors to /userDataStore can be ignored)');\n    return defaultValue;\n  }\n};","import { SET_CONTROLBAR_USER_ROWS } from '../reducers/controlBar';\nimport { apiGetControlBarRows } from '../api/controlBar'; // actions\n\nexport const acSetControlBarUserRows = rows => ({\n  type: SET_CONTROLBAR_USER_ROWS,\n  value: rows\n}); // thunks\n\nexport const tSetControlBarRows = () => async dispatch => {\n  const onSuccess = rows => {\n    dispatch(acSetControlBarUserRows(rows));\n  };\n\n  const onError = error => {\n    console.log('Error (apiGetControlBarRows): ', error);\n    return error;\n  };\n\n  try {\n    const controlBarRows = await apiGetControlBarRows();\n    return onSuccess(controlBarRows);\n  } catch (err) {\n    return onError(err);\n  }\n};","import { apiGetUserDataStoreValue, apiPostUserDataStoreValue } from './userDataStore';\nimport { DEFAULT_STATE_CONTROLBAR_ROWS } from '../reducers/controlBar';\nconst KEY_CONTROLBAR_ROWS = 'controlBarRows';\nexport const apiGetControlBarRows = async () => await apiGetUserDataStoreValue(KEY_CONTROLBAR_ROWS, DEFAULT_STATE_CONTROLBAR_ROWS);\nexport const apiPostControlBarRows = async (value) => await apiPostUserDataStoreValue(KEY_CONTROLBAR_ROWS, value);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport ControlBar from './ControlBar';\nimport arraySort from 'd2-utilizr/lib/arraySort';\nimport PropTypes from 'prop-types';\nimport Chip from './DashboardItemChip';\nimport AddCircleIcon from '../../icons/AddCircle';\nimport Filter from './Filter';\nimport ShowMoreButton from './ShowMoreButton';\nimport { FIRST_ROW_PADDING_HEIGHT, MIN_ROW_COUNT, getRowsHeight, getControlBarHeight, getNumRowsFromHeight } from './controlBarDimensions';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { sGetAllDashboards } from '../../reducers/dashboards';\nimport { sGetFilterName } from '../../reducers/dashboardsFilter';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { acSetControlBarUserRows } from '../../actions/controlBar';\nimport { acSetFilterName } from '../../actions/dashboardsFilter';\nimport { orObject, orArray } from '../../modules/util';\nimport { apiPostControlBarRows } from '../../api/controlBar';\nimport classes from './styles/DashboardsBar.module.css';\nexport const MAX_ROW_COUNT = 10;\nexport class DashboardsBar extends Component {\n  state = {\n    rows: MIN_ROW_COUNT\n  };\n  setInitialDashboardState = rows => {\n    this.setState({\n      rows,\n      isMaxHeight: rows === MAX_ROW_COUNT\n    });\n  };\n\n  componentDidMount() {\n    this.setInitialDashboardState(this.props.userRows);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setInitialDashboardState(nextProps.userRows);\n  }\n\n  onChangeHeight = newHeight => {\n    const adjustedHeight = newHeight - 52; // don't rush the transition to a bigger row count\n\n    const newRows = Math.max(MIN_ROW_COUNT, getNumRowsFromHeight(adjustedHeight));\n\n    if (newRows !== this.state.rows) {\n      const newRowCount = Math.min(newRows, MAX_ROW_COUNT);\n      this.props.onChangeHeight(newRowCount);\n    }\n  };\n  onEndDrag = () => {\n    return apiPostControlBarRows(this.state.rows);\n  };\n  onToggleMaxHeight = () => {\n    const rows = this.state.rows === MAX_ROW_COUNT ? this.props.userRows : MAX_ROW_COUNT;\n    this.setState({\n      rows,\n      isMaxHeight: !this.state.isMaxHeight\n    });\n  };\n  onSelectDashboard = () => {\n    this.props.history.push(`/${this.props.dashboards[0].id}`);\n  };\n\n  render() {\n    const {\n      dashboards,\n      name,\n      selectedId,\n      onChangeFilterName\n    } = this.props;\n    const rowCount = this.state.isMaxHeight ? MAX_ROW_COUNT : this.state.rows;\n    const controlBarHeight = getControlBarHeight(rowCount);\n    const contentWrapperStyle = {\n      padding: `${FIRST_ROW_PADDING_HEIGHT}px 6px 0 6px`,\n      overflowY: this.state.isMaxHeight ? 'auto' : 'hidden',\n      height: getRowsHeight(rowCount) + FIRST_ROW_PADDING_HEIGHT\n    };\n    return <ControlBar height={controlBarHeight} onChangeHeight={this.onChangeHeight} onEndDrag={this.onEndDrag} editMode={false}>\n                <div style={contentWrapperStyle}>\n                    <div className={classes.leftControls}>\n                        <Link style={{\n            display: 'inline-block',\n            textDecoration: 'none',\n            marginRight: 10,\n            position: 'relative',\n            top: '2px'\n          }} to={'/new'}>\n                            <AddCircleIcon />\n                        </Link>\n                        <Filter name={name} onChangeName={onChangeFilterName} onKeypressEnter={this.onSelectDashboard} />\n                    </div>\n                    {orArray(dashboards).map(dashboard => <Chip key={dashboard.id} label={dashboard.displayName} starred={dashboard.starred} dashboardId={dashboard.id} selected={dashboard.id === selectedId} />)}\n                </div>\n                <ShowMoreButton onClick={this.onToggleMaxHeight} isMaxHeight={this.state.isMaxHeight} disabled={this.props.userRows === MAX_ROW_COUNT} />\n            </ControlBar>;\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  dashboards: sGetAllDashboards(state),\n  name: sGetFilterName(state),\n  userRows: sGetControlBarUserRows(state),\n  selectedId: sGetSelectedId(state)\n});\n\nconst mapDispatchToProps = {\n  onChangeHeight: acSetControlBarUserRows,\n  onChangeFilterName: acSetFilterName\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n  const dashboards = Object.values(orObject(stateProps.dashboards));\n  const displayDashboards = arraySort(dashboards.filter(d => d.displayName.toLowerCase().includes(stateProps.name.toLowerCase())), 'ASC', 'displayName');\n  return { ...stateProps,\n    ...ownProps,\n    ...dispatchProps,\n    dashboards: [...displayDashboards.filter(d => d.starred), ...displayDashboards.filter(d => !d.starred)]\n  };\n};\n\nDashboardsBar.propTypes = {\n  dashboards: PropTypes.array,\n  history: PropTypes.object,\n  name: PropTypes.string,\n  selectedId: PropTypes.string,\n  userRows: PropTypes.number,\n  onChangeFilterName: PropTypes.func,\n  onChangeHeight: PropTypes.func\n};\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps, mergeProps)(DashboardsBar));","import { SET_DASHBOARDS_FILTER_NAME, SET_DASHBOARDS_FILTER_OWNER, SET_DASHBOARDS_FILTER_ORDER } from '../reducers/dashboardsFilter'; // actions\n\nexport const acSetFilterName = value => ({\n  type: SET_DASHBOARDS_FILTER_NAME,\n  value\n});\nexport const acSetFilterOwner = value => ({\n  type: SET_DASHBOARDS_FILTER_OWNER,\n  value\n});\nexport const acSetFilterOrder = value => ({\n  type: SET_DASHBOARDS_FILTER_ORDER,\n  value\n});","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { getControlBarHeight, MIN_ROW_COUNT } from '../ControlBar/controlBarDimensions';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { DRAG_HANDLE_HEIGHT } from '../ControlBar/ControlBar';\n\nconst DashboardVerticalOffset = props => {\n  const rows = props.editMode ? MIN_ROW_COUNT : props.userRows;\n  const marginTop = getControlBarHeight(rows) + DRAG_HANDLE_HEIGHT;\n  return <div className=\"page-container-top-margin\" style={{\n    marginTop\n  }} />;\n};\n\nconst mapStateToProps = state => ({\n  userRows: sGetControlBarUserRows(state)\n});\n\nDashboardVerticalOffset.propTypes = {\n  editMode: PropTypes.bool,\n  userRows: PropTypes.number\n};\nexport default connect(mapStateToProps)(DashboardVerticalOffset);","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nexport const NoContentMessage = ({\n  text\n}) => <div style={{\n  padding: '50px 10px',\n  textAlign: 'center',\n  fontSize: '15px',\n  fontWeight: 500,\n  color: colors.grey600\n}}>\n        {text}\n    </div>;\nNoContentMessage.propTypes = {\n  text: PropTypes.string\n};\nexport default NoContentMessage;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { MenuItem, colors } from '@dhis2/ui';\n\nconst HeaderMenuItem = ({\n  title\n}) => <MenuItem dense key={title} disabled label={<span style={{\n  color: colors.grey800,\n  fontWeight: '600'\n}}>\n                {title}\n            </span>} />;\n\nHeaderMenuItem.propTypes = {\n  title: PropTypes.string.isRequired\n};\nexport default HeaderMenuItem;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst LaunchIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\" fill={colors.grey600} viewBox=\"0 0 24 24\">\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z\" />\n    </svg>;\n\nLaunchIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default LaunchIcon;","import React from 'react';\nimport { MenuItem, colors } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport { visTypeIcons } from '@dhis2/analytics';\nimport { getItemIcon, VISUALIZATION } from '../../modules/itemTypes';\nimport LaunchIcon from '../../icons/Launch';\nimport classes from './styles/ContentMenuItem.module.css';\n\nconst LaunchLink = ({\n  url\n}) => <a onClick={e => e.stopPropagation()} className={classes.launchLink} target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n        <LaunchIcon />\n    </a>;\n\nLaunchLink.propTypes = {\n  url: PropTypes.string\n};\n\nconst InsertButton = () => <button className={classes.buttonInsert}>{i18n.t('Insert')}</button>;\n\nconst ContentMenuItem = ({\n  type,\n  name,\n  onInsert,\n  url,\n  visType\n}) => {\n  const ItemIcon = getItemIcon(type);\n  const renderedItemIcon = type === VISUALIZATION ? visTypeIcons[visType] : <ItemIcon style={{\n    fill: colors.grey600\n  }} />;\n  return <MenuItem dense onClick={onInsert} label={<div className={classes.menuItem}>\n                    <div className={classes.label}>\n                        <span style={{\n        marginRight: '6px'\n      }}>\n                            {renderedItemIcon}\n                        </span>\n                        <span>{name}</span>\n                        {url ? <LaunchLink url={url} /> : null}\n                    </div>\n                    <InsertButton />\n                </div>} />;\n};\n\nContentMenuItem.propTypes = {\n  name: PropTypes.string,\n  type: PropTypes.string,\n  url: PropTypes.string,\n  visType: PropTypes.string,\n  onInsert: PropTypes.func\n};\nexport default ContentMenuItem;","/** @module reducers/editDashboard */\nimport update from 'immutability-helper';\nimport isEmpty from 'lodash/isEmpty';\nimport { orArray, orObject } from '../modules/util';\nexport const RECEIVED_EDIT_DASHBOARD = 'RECEIVED_EDIT_DASHBOARD';\nexport const RECEIVED_NOT_EDITING = 'RECEIVED_NOT_EDITING';\nexport const START_NEW_DASHBOARD = 'START_NEW_DASHBOARD';\nexport const RECEIVED_TITLE = 'RECEIVED_TITLE';\nexport const RECEIVED_DESCRIPTION = 'RECEIVED_DESCRIPTION';\nexport const ADD_DASHBOARD_ITEM = 'ADD_DASHBOARD_ITEM';\nexport const REMOVE_DASHBOARD_ITEM = 'REMOVE_DASHBOARD_ITEM';\nexport const UPDATE_DASHBOARD_ITEM = 'UPDATE_DASHBOARD_ITEM';\nexport const RECEIVED_DASHBOARD_LAYOUT = 'RECEIVED_DASHBOARD_LAYOUT';\nexport const SET_PRINT_PREVIEW_VIEW = 'SET_PRINT_PREVIEW_VIEW';\nexport const CLEAR_PRINT_PREVIEW_VIEW = 'CLEAR_PRINT_PREVIEW_VIEW';\nexport const DEFAULT_STATE_EDIT_DASHBOARD = {};\nexport const NEW_DASHBOARD_STATE = {\n  id: '',\n  name: '',\n  access: {},\n  description: '',\n  dashboardItems: [],\n  printPreviewView: false\n};\nexport default ((state = DEFAULT_STATE_EDIT_DASHBOARD, action) => {\n  switch (action.type) {\n    case RECEIVED_EDIT_DASHBOARD:\n      {\n        const newState = {};\n        Object.keys(NEW_DASHBOARD_STATE).map(k => newState[k] = action.value[k]);\n        newState.printPreviewView = false;\n        return newState;\n      }\n\n    case RECEIVED_NOT_EDITING:\n      return DEFAULT_STATE_EDIT_DASHBOARD;\n\n    case SET_PRINT_PREVIEW_VIEW:\n      return Object.assign({}, state, {\n        printPreviewView: true\n      });\n\n    case CLEAR_PRINT_PREVIEW_VIEW:\n      return Object.assign({}, state, {\n        printPreviewView: false\n      });\n\n    case START_NEW_DASHBOARD:\n      return NEW_DASHBOARD_STATE;\n\n    case RECEIVED_TITLE:\n      {\n        return Object.assign({}, state, {\n          name: action.value\n        });\n      }\n\n    case RECEIVED_DESCRIPTION:\n      {\n        return Object.assign({}, state, {\n          description: action.value\n        });\n      }\n\n    case ADD_DASHBOARD_ITEM:\n      if (!action.value.position) {\n        return update(state, {\n          dashboardItems: {\n            $unshift: [action.value]\n          }\n        });\n      }\n\n      return update(state, {\n        dashboardItems: {\n          $splice: [[parseInt(action.value.position), 0, action.value]]\n        }\n      });\n\n    case REMOVE_DASHBOARD_ITEM:\n      {\n        const idToRemove = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === idToRemove);\n\n        if (dashboardItemIndex > -1) {\n          return update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1]]\n            }\n          });\n        }\n\n        return state;\n      }\n\n    case RECEIVED_DASHBOARD_LAYOUT:\n      {\n        const stateItems = orArray(state.dashboardItems);\n        let layoutHasChanged = false;\n        const newStateItems = action.value.map(({\n          x,\n          y,\n          w,\n          h,\n          i\n        }) => {\n          const stateItem = stateItems.find(si => si.id === i);\n\n          if (!(stateItem.x === x && stateItem.y === y && stateItem.w === w && stateItem.h === h)) {\n            layoutHasChanged = true;\n            return Object.assign({}, stateItem, {\n              w,\n              h,\n              x,\n              y\n            });\n          }\n\n          return stateItem;\n        });\n        return layoutHasChanged ? { ...state,\n          dashboardItems: newStateItems\n        } : state;\n      }\n\n    case UPDATE_DASHBOARD_ITEM:\n      {\n        const dashboardItem = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === dashboardItem.id);\n\n        if (dashboardItemIndex > -1) {\n          const newState = update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1, Object.assign({}, dashboardItem)]]\n            }\n          });\n          return newState;\n        }\n\n        return state;\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetEditDashboardRoot = state => state.editDashboard; // selectors\n\nexport const sGetIsEditing = state => !isEmpty(state.editDashboard);\nexport const sGetIsPrintPreviewView = state => sGetEditDashboardRoot(state).printPreviewView;\nexport const sGetIsNewDashboard = state => {\n  return !isEmpty(state.editDashboard) && sGetEditDashboardRoot(state).id === '';\n};\nexport const sGetEditDashboardName = state => sGetEditDashboardRoot(state).name;\nexport const sGetEditDashboardDescription = state => sGetEditDashboardRoot(state).description;\nexport const sGetEditDashboardItems = state => orObject(sGetEditDashboardRoot(state)).dashboardItems;","import { getInstance } from 'd2';\n\nconst onError = error => console.log('Error: ', error);\n\nconst saveDashboard = (dashboard, data) => {\n  const {\n    name,\n    description,\n    dashboardItems\n  } = data;\n  dashboard.name = name;\n  dashboard.description = description;\n  dashboard.dashboardItems = dashboardItems.map(item => Object.assign({}, item, {\n    width: item.w,\n    height: item.h\n  }));\n  return dashboard.save().then(msg => msg.response.uid);\n};\n\nexport const updateDashboard = data => {\n  return getInstance().then(d2 => {\n    return d2.models.dashboards.get(data.id).then(dashboard => saveDashboard(dashboard, data));\n  }).catch(onError);\n};\nexport const postDashboard = data => {\n  return getInstance().then(d2 => {\n    const dashboard = d2.models.dashboards.create();\n    return saveDashboard(dashboard, data);\n  });\n};","export const RECEIVED_USER = 'RECEIVED_USER';\nexport const DEFAULT_STATE_USER = {\n  id: '',\n  username: '',\n  uiLocale: '',\n  isSuperuser: false\n};\nexport default ((state = DEFAULT_STATE_USER, action) => {\n  switch (action.type) {\n    case RECEIVED_USER:\n      {\n        return fromD2ToUserObj(action.value);\n      }\n\n    default:\n      return state;\n  }\n});\n\nfunction fromD2ToUserObj(d2Object) {\n  return {\n    id: d2Object.id,\n    username: d2Object.username,\n    uiLocale: d2Object.settings.keyUiLocale,\n    isSuperuser: d2Object.authorities.has('ALL')\n  };\n} // selectors\n\n\nexport const sGetUserId = state => state.user.id;\nexport const sGetUserUsername = state => state.user.username;\nexport const sGetIsSuperuser = state => state.user.isSuperuser;\nexport const sGetUiLocale = state => state.user.uiLocale;","import arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { getListItemFields, getFavoritesFields, getIdNameFields } from './metadata'; // Helper functions\n\nexport const onError = error => console.log('Error: ', error); // Dashboard item\n\nexport const getDashboardItemsFields = ({\n  withFavorite\n} = {}) => arrayClean(['id', 'type', 'shape', 'x', 'y', 'width~rename(w)', 'height~rename(h)', 'messages', 'text', 'appKey', `${getListItemFields().join(',')}`, withFavorite ? `${getFavoritesFields({\n  withDimensions: withFavorite.withDimensions\n}).join(',')}` : ``]); // Dashboard\n\nexport const getDashboardFields = ({\n  withItems,\n  withFavorite\n} = {}) => arrayClean([`${getIdNameFields().join(',')}`, 'description', 'displayDescription', 'favorite', `user[${getIdNameFields({\n  rename: true\n}).join(',')}]`, 'created', 'lastUpdated', 'access', withItems ? `dashboardItems[${getDashboardItemsFields({\n  withFavorite\n}).join(',')}]` : ``]);","import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { onError, getDashboardFields } from './index'; // Get \"all\" dashboards on startup\n\nexport const apiFetchDashboards = () => getInstance().then(d2 => d2.models.dashboard.list({\n  fields: [getDashboardFields().join(','), 'dashboardItems[id]'].join(','),\n  paging: 'false'\n})).catch(onError); // Get more info about selected dashboard\n\nexport const apiFetchDashboard = id => getInstance().then(d2 => d2.models.dashboard.get(id, {\n  fields: arrayClean(getDashboardFields({\n    withItems: true,\n    withFavorite: {\n      withDimensions: false\n    }\n  })).join(',')\n})).catch(onError); // Star dashboard\n\nexport const apiStarDashboard = (id, isStarred) => {\n  const url = `dashboards/${id}/favorite`;\n  getInstance().then(d2 => {\n    if (isStarred) {\n      d2.Api.getApi().post(url);\n    } else {\n      d2.Api.getApi().delete(url);\n    }\n  });\n};\nexport const apiDeleteDashboard = id => {\n  return getInstance().then(d2 => {\n    return d2.models.dashboards.get(id).then(dashboard => dashboard.delete());\n  }).catch(onError);\n};","import { SET_DASHBOARDS, ADD_DASHBOARDS, SET_DASHBOARD_STARRED, SET_DASHBOARD_DISPLAY_NAME, SET_DASHBOARD_ITEMS } from '../reducers/dashboards';\nimport { getCustomDashboards, sGetDashboardById, sGetDashboardsSortedByStarred } from '../reducers/dashboards';\nimport { NON_EXISTING_DASHBOARD_ID } from '../reducers/selected';\nimport { sGetUserUsername } from '../reducers/user';\nimport { tSetSelectedDashboardById, acSetSelectedId } from './selected';\nimport { apiFetchDashboards, apiStarDashboard, apiDeleteDashboard } from '../api/dashboards';\nimport { getPreferredDashboardId } from '../api/localStorage';\nimport { arrayToIdMap } from '../modules/util'; // actions\n\nexport const acSetDashboards = dashboards => ({\n  type: SET_DASHBOARDS,\n  value: arrayToIdMap(getCustomDashboards(dashboards))\n});\nexport const acAppendDashboards = dashboards => ({\n  type: ADD_DASHBOARDS,\n  value: arrayToIdMap(getCustomDashboards(dashboards))\n});\nexport const acSetDashboardStarred = (dashboardId, isStarred) => ({\n  type: SET_DASHBOARD_STARRED,\n  dashboardId: dashboardId,\n  value: isStarred\n});\nexport const acSetDashboardDisplayName = (dashboardId, value) => ({\n  type: SET_DASHBOARD_DISPLAY_NAME,\n  dashboardId,\n  value\n});\nexport const acSetDashboardItems = value => ({\n  type: SET_DASHBOARD_ITEMS,\n  value\n}); // thunks\n\nexport const tFetchDashboards = () => async dispatch => {\n  const collection = await apiFetchDashboards();\n  dispatch(acSetDashboards(collection.toArray()));\n};\nexport const tSelectDashboard = id => async (dispatch, getState) => {\n  const onError = error => {\n    console.log('Error (apiFetchDashboards): ', error);\n    return error;\n  };\n\n  try {\n    const state = getState();\n    let dashboardToSelect = null;\n\n    if (id) {\n      dashboardToSelect = sGetDashboardById(state, id) || null;\n    } else {\n      const preferredId = getPreferredDashboardId(sGetUserUsername(state));\n      const dash = sGetDashboardById(state, preferredId);\n      dashboardToSelect = preferredId && dash ? dash : sGetDashboardsSortedByStarred(state)[0];\n    }\n\n    if (dashboardToSelect) {\n      dispatch(tSetSelectedDashboardById(dashboardToSelect.id));\n    } else {\n      dispatch(acSetSelectedId(NON_EXISTING_DASHBOARD_ID));\n    }\n  } catch (err) {\n    return onError(err);\n  }\n};\nexport const tStarDashboard = (id, isStarred) => async dispatch => {\n  const onSuccess = id => {\n    dispatch(acSetDashboardStarred(id, isStarred));\n    return id;\n  };\n\n  const onError = error => {\n    console.log('Error (apiStarDashboard): ', error);\n    return error;\n  };\n\n  try {\n    await apiStarDashboard(id, isStarred);\n    return onSuccess(id);\n  } catch (err) {\n    return onError(err);\n  }\n};\nexport const tDeleteDashboard = id => async dispatch => {\n  try {\n    await apiDeleteDashboard(id);\n    await dispatch(tFetchDashboards());\n    return Promise.resolve();\n  } catch (err) {\n    console.log('Error (deleteDashboard): ', err);\n    return err;\n  }\n};","import { getDimensionById, DIMENSION_ID_PERIOD, DIMENSION_ID_ORGUNIT } from '@dhis2/analytics';\nexport const SET_DIMENSIONS = 'SET_DIMENSIONS';\nexport const DEFAULT_DIMENSIONS = [getDimensionById(DIMENSION_ID_PERIOD), getDimensionById(DIMENSION_ID_ORGUNIT)];\nexport default ((state = DEFAULT_DIMENSIONS, action) => {\n  switch (action.type) {\n    case SET_DIMENSIONS:\n      {\n        return [...DEFAULT_DIMENSIONS, ...action.value];\n      }\n\n    default:\n      return state;\n  }\n});\nexport const sGetDimensions = state => state.dimensions;","import { sGetDimensions } from './dimensions';\nimport { createSelector } from 'reselect';\nexport const CLEAR_ITEM_FILTERS = 'CLEAR_ITEM_FILTERS';\nexport const SET_ITEM_FILTERS = 'SET_ITEM_FILTERS';\nexport const ADD_ITEM_FILTER = 'ADD_ITEM_FILTER';\nexport const REMOVE_ITEM_FILTER = 'REMOVE_ITEM_FILTER';\nexport const DEFAULT_STATE_ITEM_FILTERS = {};\nexport default ((state = DEFAULT_STATE_ITEM_FILTERS, action) => {\n  switch (action.type) {\n    case ADD_ITEM_FILTER:\n      {\n        return { ...state,\n          [action.filter.id]: action.filter.value\n        };\n      }\n\n    case REMOVE_ITEM_FILTER:\n      {\n        const newState = { ...state\n        };\n        delete newState[action.id];\n        return newState;\n      }\n\n    case SET_ITEM_FILTERS:\n      {\n        return action.filters;\n      }\n\n    case CLEAR_ITEM_FILTERS:\n      {\n        return DEFAULT_STATE_ITEM_FILTERS;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetItemFiltersRoot = state => state.itemFilters; // simplify the filters structure to:\n// [{ id: 'pe', name: 'Period', values: [{ id: 2019: name: '2019' }, {id: 'LAST_MONTH', name: 'Last month' }]}, ...]\n\nexport const sGetNamedItemFilters = createSelector([sGetItemFiltersRoot, sGetDimensions], (filters, dimensions) => Object.keys(filters).reduce((arr, id) => {\n  arr.push({\n    id: id,\n    name: dimensions.find(dimension => dimension.id === id).name,\n    values: filters[id].map(value => ({\n      id: value.id,\n      name: value.displayName || value.name\n    }))\n  });\n  return arr;\n}, []));","import { ADD_ITEM_FILTER, REMOVE_ITEM_FILTER, SET_ITEM_FILTERS, CLEAR_ITEM_FILTERS } from '../reducers/itemFilters';\nexport const FILTER_ORG_UNIT = 'ou'; // actions\n\nexport const acAddItemFilter = filter => ({\n  type: ADD_ITEM_FILTER,\n  filter\n});\nexport const acRemoveItemFilter = id => ({\n  type: REMOVE_ITEM_FILTER,\n  id\n});\nexport const acClearItemFilters = () => ({\n  type: CLEAR_ITEM_FILTERS\n});\nexport const acSetItemFilters = filters => ({\n  type: SET_ITEM_FILTERS,\n  filters\n});","import update from 'immutability-helper';\nimport { arrayToIdMap } from '../modules/util';\nexport const RECEIVED_MESSAGES = 'RECEIVED_MESSAGES';\nexport default ((state = {}, action) => {\n  switch (action.type) {\n    case RECEIVED_MESSAGES:\n      {\n        const conversations = arrayToIdMap(action.value);\n        const newState = update(state, {\n          $merge: conversations\n        });\n        return newState;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetMessagesRoot = state => state.messages;","import { RECEIVED_MESSAGES } from '../../../reducers/messages';\nimport { getMessages } from '../../../api/messages';\n\nconst onError = (action, error) => {\n  console.log(`Error in action ${action}: ${error}`);\n  return error;\n};\n\nexport const receivedMessages = value => ({\n  type: RECEIVED_MESSAGES,\n  value\n});\nexport const tGetMessages = () => async dispatch => {\n  try {\n    const messages = await getMessages();\n    const {\n      messageConversations\n    } = messages;\n    return dispatch(receivedMessages(messageConversations));\n  } catch (err) {\n    return onError('Get Messages', err);\n  }\n};","import { getInstance } from 'd2';\nexport const getMessages = () => {\n  const fields = 'id,messageCount,lastUpdated,messageType,displayName,read,messages[id,read,sender[id,displayName],text,lastUpdated]';\n  const url = `/messageConversations?fields=${fields}&order=read:asc&pageSize=200`;\n  return getInstance().then(d2 => d2.Api.getApi().get(url)).catch(error => console.log('Error:', error));\n};","export const SET_ALERT_MESSAGE = 'SET_ALERT_MESSAGE';\nexport const CLEAR_ALERT_MESSAGE = 'CLEAR_ALERT_MESSAGE';\nexport const DEFAULT_STATE_ALERT = null;\nexport default ((state = DEFAULT_STATE_ALERT, action) => {\n  switch (action.type) {\n    case SET_ALERT_MESSAGE:\n      {\n        return action.value;\n      }\n\n    case CLEAR_ALERT_MESSAGE:\n      {\n        return DEFAULT_STATE_ALERT;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetAlertMessage = state => state.alert;","import { SET_ALERT_MESSAGE, CLEAR_ALERT_MESSAGE } from '../reducers/alert';\nexport const acSetAlertMessage = value => ({\n  type: SET_ALERT_MESSAGE,\n  value\n});\nexport const acClearAlertMessage = () => ({\n  type: CLEAR_ALERT_MESSAGE\n});","import { orObject } from '../modules/util';\nimport objectClean from 'd2-utilizr/lib/objectClean';\n/** @module reducers/visualizations */\n\nexport const ADD_VISUALIZATION = 'ADD_VISUALIZATION';\nexport const SET_ACTIVE_VISUALIZATION_TYPE = 'SET_ACTIVE_VISUALIZATION_TYPE';\nexport const DEFAULT_STATE_VISUALIZATIONS = {};\n\nconst isEmpty = p => p === undefined || p === null;\n\nexport default ((state = DEFAULT_STATE_VISUALIZATIONS, action) => {\n  switch (action.type) {\n    case ADD_VISUALIZATION:\n      {\n        return { ...state,\n          [action.value.id]: objectClean({ ...orObject(state[action.value.id]),\n            ...action.value\n          }, isEmpty)\n        };\n      }\n\n    case SET_ACTIVE_VISUALIZATION_TYPE:\n      {\n        return { ...state,\n          [action.id]: objectClean({ ...orObject(state[action.id]),\n            activeType: action.activeType\n          }, isEmpty)\n        };\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetVisualizationsRoot = state => state.visualizations; // selectors level 1\n\nexport const sGetVisualization = (state, id) => {\n  return sGetVisualizationsRoot(state)[id];\n};","import { ADD_VISUALIZATION, SET_ACTIVE_VISUALIZATION_TYPE } from '../reducers/visualizations';\nexport const acAddVisualization = value => ({\n  type: ADD_VISUALIZATION,\n  value\n});\nexport const acSetActiveVisualizationType = (id, activeType) => {\n  const action = {\n    type: SET_ACTIVE_VISUALIZATION_TYPE,\n    id,\n    activeType\n  };\n  return action;\n};","import i18n from '@dhis2/d2-i18n';\nimport { getCustomDashboards, sGetDashboardById } from '../reducers/dashboards';\nimport { SET_SELECTED_ID, SET_SELECTED_ISLOADING, SET_SELECTED_SHOWDESCRIPTION, sGetSelectedIsLoading, sGetSelectedId } from '../reducers/selected';\nimport { sGetUserUsername } from '../reducers/user';\nimport { acSetDashboardItems, acAppendDashboards } from './dashboards';\nimport { acClearItemFilters } from './itemFilters';\nimport { tGetMessages } from '../components/Item/MessagesItem/actions';\nimport { acSetAlertMessage, acClearAlertMessage } from './alert';\nimport { acAddVisualization } from './visualizations';\nimport { apiFetchDashboard } from '../api/dashboards';\nimport { storePreferredDashboardId } from '../api/localStorage';\nimport { apiGetShowDescription, apiPostShowDescription } from '../api/description';\nimport { withShape } from '../components/ItemGrid/gridUtil';\nimport { extractFavorite } from '../components/Item/VisualizationItem/plugin';\nimport { REPORT_TABLE, CHART, MAP, EVENT_REPORT, EVENT_CHART, MESSAGES } from '../modules/itemTypes'; // actions\n\nexport const acSetSelectedId = value => ({\n  type: SET_SELECTED_ID,\n  value\n});\nexport const acSetSelectedIsLoading = value => ({\n  type: SET_SELECTED_ISLOADING,\n  value\n});\nexport const acSetSelectedShowDescription = value => ({\n  type: SET_SELECTED_SHOWDESCRIPTION,\n  value\n}); // thunks\n\nexport const tSetSelectedDashboardById = id => async (dispatch, getState) => {\n  dispatch(acSetSelectedIsLoading(true));\n  const alertTimeout = setTimeout(() => {\n    const name = sGetDashboardById(getState(), id)?.displayName;\n\n    if (sGetSelectedIsLoading(getState()) && name) {\n      dispatch(acSetAlertMessage(`${i18n.t('Loading dashboard')}: ${name}`));\n    }\n  }, 100);\n\n  const onSuccess = selected => {\n    dispatch(acAppendDashboards(selected));\n    const customDashboard = getCustomDashboards(selected)[0];\n    dispatch(acSetDashboardItems(withShape(customDashboard.dashboardItems)));\n    storePreferredDashboardId(sGetUserUsername(getState()), id);\n    customDashboard.dashboardItems.forEach(item => {\n      switch (item.type) {\n        case REPORT_TABLE:\n        case CHART:\n        case MAP:\n        case EVENT_REPORT:\n        case EVENT_CHART:\n          dispatch(acAddVisualization(extractFavorite(item)));\n          break;\n\n        case MESSAGES:\n          dispatch(tGetMessages(id));\n          break;\n\n        default:\n          break;\n      }\n    });\n\n    if (id !== sGetSelectedId(getState())) {\n      dispatch(acClearItemFilters());\n    }\n\n    dispatch(acSetSelectedId(id));\n    dispatch(acSetSelectedIsLoading(false));\n    clearTimeout(alertTimeout);\n    dispatch(acClearAlertMessage());\n    return selected;\n  };\n\n  const onError = error => {\n    console.log('Error: ', error);\n    return error;\n  };\n\n  try {\n    const dashboard = await apiFetchDashboard(id);\n    return onSuccess(dashboard);\n  } catch (err) {\n    return onError(err);\n  }\n};\nexport const tSetShowDescription = () => async dispatch => {\n  const onSuccess = value => {\n    dispatch(acSetSelectedShowDescription(value));\n  };\n\n  const onError = error => {\n    console.log('Error (apiGetShowDescription): ', error);\n    return error;\n  };\n\n  try {\n    const showDescription = await apiGetShowDescription();\n    return onSuccess(showDescription);\n  } catch (err) {\n    return onError(err);\n  }\n};\nexport const tUpdateShowDescription = value => async dispatch => {\n  const onSuccess = () => {\n    dispatch(acSetSelectedShowDescription(value));\n  };\n\n  const onError = error => {\n    console.log('Error (apiGetShowDescription): ', error);\n    return error;\n  };\n\n  try {\n    await apiPostShowDescription(value);\n    return onSuccess();\n  } catch (err) {\n    return onError(err);\n  }\n};","export const getPreferredDashboardId = username => localStorage.getItem(`dhis2.dashboard.current.${username}`) || undefined;\nexport const storePreferredDashboardId = (username, dashboardId) => {\n  localStorage.setItem(`dhis2.dashboard.current.${username}`, dashboardId);\n};","import { apiGetUserDataStoreValue, apiPostUserDataStoreValue } from './userDataStore';\nimport { DEFAULT_STATE_SELECTED_SHOWDESCRIPTION } from '../reducers/selected';\nconst KEY_SHOW_DESCRIPTION = 'showDescription';\nexport const apiGetShowDescription = async () => await apiGetUserDataStoreValue(KEY_SHOW_DESCRIPTION, DEFAULT_STATE_SELECTED_SHOWDESCRIPTION);\nexport const apiPostShowDescription = async (value) => await apiPostUserDataStoreValue(KEY_SHOW_DESCRIPTION, value);","import { generateUid } from 'd2/uid';\nimport i18n from '@dhis2/d2-i18n';\nimport { RECEIVED_EDIT_DASHBOARD, START_NEW_DASHBOARD, RECEIVED_NOT_EDITING, RECEIVED_TITLE, RECEIVED_DESCRIPTION, RECEIVED_DASHBOARD_LAYOUT, ADD_DASHBOARD_ITEM, UPDATE_DASHBOARD_ITEM, REMOVE_DASHBOARD_ITEM, SET_PRINT_PREVIEW_VIEW, CLEAR_PRINT_PREVIEW_VIEW } from '../reducers/editDashboard';\nimport { sGetEditDashboardRoot } from '../reducers/editDashboard';\nimport { updateDashboard, postDashboard } from '../api/editDashboard';\nimport { tSetSelectedDashboardById } from '../actions/selected';\nimport { NEW_ITEM_SHAPE, getGridItemProperties, getPageBreakItemShape, getPrintTitlePageItemShape } from '../components/ItemGrid/gridUtil';\nimport { itemTypeMap, PAGEBREAK, PRINT_TITLE_PAGE } from '../modules/itemTypes';\nimport { convertUiItemsToBackend } from '../modules/uiBackendItemConverter';\n\nconst onError = error => {\n  console.log('Error (Saving Dashboard): ', error);\n  return error;\n}; // actions\n\n\nexport const acSetEditDashboard = (dashboard, items) => {\n  const val = { ...dashboard,\n    dashboardItems: items\n  };\n  return {\n    type: RECEIVED_EDIT_DASHBOARD,\n    value: val\n  };\n};\nexport const acSetEditNewDashboard = () => ({\n  type: START_NEW_DASHBOARD\n});\nexport const acClearEditDashboard = () => ({\n  type: RECEIVED_NOT_EDITING\n});\nexport const acSetPrintPreviewView = () => ({\n  type: SET_PRINT_PREVIEW_VIEW\n});\nexport const acClearPrintPreviewView = () => ({\n  type: CLEAR_PRINT_PREVIEW_VIEW\n});\nexport const acSetDashboardTitle = value => ({\n  type: RECEIVED_TITLE,\n  value\n});\nexport const acSetDashboardDescription = value => ({\n  type: RECEIVED_DESCRIPTION,\n  value\n});\nexport const acUpdateDashboardLayout = value => ({\n  type: RECEIVED_DASHBOARD_LAYOUT,\n  value\n});\nexport const acAddDashboardItem = item => {\n  const type = item.type;\n  delete item.type;\n  const itemPropName = itemTypeMap[type].propName;\n  const id = generateUid();\n  const gridItemProperties = getGridItemProperties(id);\n  let shape;\n\n  if (type === PAGEBREAK) {\n    const yPos = item.yPos || 0;\n    shape = getPageBreakItemShape(yPos, item.isStatic);\n  } else if (type === PRINT_TITLE_PAGE) {\n    shape = getPrintTitlePageItemShape();\n  } else {\n    shape = NEW_ITEM_SHAPE;\n  }\n\n  return {\n    type: ADD_DASHBOARD_ITEM,\n    value: {\n      id,\n      type,\n      position: item.position || null,\n      [itemPropName]: item.content,\n      ...NEW_ITEM_SHAPE,\n      ...gridItemProperties,\n      ...shape\n    }\n  };\n};\nexport const acUpdateDashboardItem = item => ({\n  type: UPDATE_DASHBOARD_ITEM,\n  value: item\n});\nexport const acRemoveDashboardItem = value => ({\n  type: REMOVE_DASHBOARD_ITEM,\n  value\n}); // thunks\n\nexport const tSaveDashboard = () => async (dispatch, getState) => {\n  const dashboard = sGetEditDashboardRoot(getState());\n  const dashboardToSave = { ...dashboard,\n    dashboardItems: convertUiItemsToBackend(dashboard.dashboardItems),\n    name: dashboard.name || i18n.t('Untitled dashboard')\n  };\n\n  try {\n    const dashboardId = dashboardToSave.id ? await updateDashboard(dashboardToSave) : await postDashboard(dashboardToSave);\n    dispatch(acClearEditDashboard());\n    await dispatch(tSetSelectedDashboardById(dashboardId));\n    return Promise.resolve(dashboardId);\n  } catch (error) {\n    onError(error);\n  }\n};","import i18n from '@dhis2/d2-i18n';\nimport { VISUALIZATION, MAP, EVENT_CHART, EVENT_REPORT, USERS, REPORTS, RESOURCES, APP, MESSAGES, TEXT, SPACER } from '../../modules/itemTypes';\nexport const singleItems = [{\n  id: 'additional',\n  header: i18n.t('Additional items'),\n  items: [{\n    type: TEXT,\n    name: i18n.t('Text box'),\n    content: ''\n  }, {\n    type: MESSAGES,\n    name: i18n.t('Messages'),\n    content: 'true'\n  }, {\n    type: SPACER,\n    name: i18n.t('Spacer'),\n    content: ''\n  }]\n}]; // categorizedItems are grouped in the item selector menu\n\nexport const categorizedItems = [VISUALIZATION, MAP, EVENT_REPORT, EVENT_CHART, USERS, REPORTS, RESOURCES, APP]; // listItemTypes are included in a single dashboard item\n\nexport const listItemTypes = [REPORTS, RESOURCES, USERS];","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { MenuItem, Divider } from '@dhis2/ui';\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\nimport { tAddListItemContent } from './actions';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\nimport { getItemUrl, APP, VISUALIZATION } from '../../modules/itemTypes';\nimport { categorizedItems, listItemTypes } from './selectableItems';\nimport classes from './styles/CategorizedMenuGroup.module.css';\n\nclass CategorizedMenuGroup extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      seeMore: false\n    };\n  }\n\n  addItem = item => () => {\n    const {\n      type,\n      acAddDashboardItem,\n      tAddListItemContent\n    } = this.props;\n\n    if (type === APP) {\n      acAddDashboardItem({\n        type,\n        content: item.key\n      });\n    } else {\n      const newItem = {\n        id: item.id,\n        name: item.displayName || item.name\n      };\n\n      if (listItemTypes.includes(type)) {\n        tAddListItemContent(type, newItem);\n      } else {\n        acAddDashboardItem({\n          type,\n          content: newItem\n        });\n      }\n    }\n  };\n  toggleSeeMore = () => {\n    this.setState({\n      seeMore: !this.state.seeMore\n    });\n    this.props.onChangeItemsLimit(this.props.type);\n  };\n\n  render() {\n    const {\n      title,\n      type,\n      items,\n      hasMore\n    } = this.props;\n    return <>\n                <HeaderMenuItem title={title} />\n                {items.map(item => {\n        const itemUrl = getItemUrl(type, item, this.context.d2);\n        return <ContentMenuItem key={item.id || item.key} type={type} visType={type === VISUALIZATION ? item.type : type} name={item.displayName || item.name} onInsert={this.addItem(item)} url={itemUrl} />;\n      })}\n                {hasMore ? <MenuItem dense key={`showmore${title}`} onClick={this.toggleSeeMore} label={<button className={classes.showMoreButton}>\n                                {this.state.seeMore ? i18n.t('Show fewer') : i18n.t('Show more')}\n                            </button>} /> : null}\n                <Divider margin=\"8px 0px\" />\n            </>;\n  }\n\n}\n\nCategorizedMenuGroup.propTypes = {\n  items: PropTypes.array.isRequired,\n  title: PropTypes.string.isRequired,\n  type: PropTypes.oneOf(categorizedItems).isRequired,\n  onChangeItemsLimit: PropTypes.func.isRequired,\n  acAddDashboardItem: PropTypes.func,\n  hasMore: PropTypes.bool,\n  tAddListItemContent: PropTypes.func\n};\nCategorizedMenuGroup.contextTypes = {\n  d2: PropTypes.object.isRequired\n};\nexport default connect(null, {\n  acAddDashboardItem,\n  tAddListItemContent\n})(CategorizedMenuGroup);","import { sGetEditDashboardRoot } from '../../reducers/editDashboard';\nimport { itemTypeMap } from '../../modules/itemTypes';\nimport { acAddDashboardItem, acUpdateDashboardItem } from '../../actions/editDashboard';\nexport const tAddListItemContent = (type, content) => (dispatch, getState) => {\n  const state = getState();\n  const listItemType = itemTypeMap[type].propName;\n  const dashboardItems = sGetEditDashboardRoot(state).dashboardItems;\n  const dashboardItemIndex = dashboardItems.findIndex(item => item.type === type);\n  let dashboardItem; // Reports/Resources/Users dashboard item type already present in dashboard\n\n  if (dashboardItemIndex > -1) {\n    dashboardItem = dashboardItems[dashboardItemIndex];\n    dashboardItem[listItemType].push(content);\n    dispatch(acUpdateDashboardItem(dashboardItem));\n  } else {\n    dashboardItem = {\n      type: type,\n      content: [content]\n    };\n    dispatch(acAddDashboardItem(dashboardItem));\n  }\n};","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\nexport const SinglesMenuGroup = ({\n  acAddDashboardItem,\n  category\n}) => {\n  const addToDashboard = ({\n    type,\n    content\n  }) => () => {\n    acAddDashboardItem({\n      type,\n      content\n    });\n  };\n\n  return <>\n            <HeaderMenuItem title={category.header} />\n            {category.items.map(item => <ContentMenuItem key={item.type} type={item.type} name={item.name} onInsert={addToDashboard(item)} />)}\n        </>;\n};\nSinglesMenuGroup.propTypes = {\n  acAddDashboardItem: PropTypes.func,\n  category: PropTypes.object\n};\nexport default connect(null, {\n  acAddDashboardItem\n})(SinglesMenuGroup);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport Popover from '@material-ui/core/Popover';\nimport { InputField, Menu } from '@dhis2/ui';\nimport CategorizedMenuGroup from './CategorizedMenuGroup';\nimport SinglesMenuGroup from './SinglesMenuGroup';\nimport { singleItems, categorizedItems } from './selectableItems';\nimport { itemTypeMap, getDefaultItemCount } from '../../modules/itemTypes';\nimport './styles/ItemSelector.css';\n\nconst ItemSearchField = props => <InputField name=\"Dashboard item search\" label={i18n.t('Search for items to add to this dashboard')} type=\"text\" onChange={props.onChange} onFocus={props.onFocus} value={props.value} />;\n\nclass ItemSelector extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      anchorEl: null,\n      open: false,\n      maxOptions: new Set(),\n      items: undefined,\n      filter: ''\n    };\n  }\n\n  closeList = () => {\n    this.setState({\n      open: false,\n      filter: ''\n    });\n  };\n  openList = (_, event) => {\n    this.fetchItems();\n    this.setState({\n      anchorEl: event.currentTarget,\n      open: true\n    });\n  };\n  setFilter = (_, event) => {\n    this.setState({\n      filter: event.target.value\n    }, this.fetchItems);\n  };\n  getCategorizedMenuGroups = () => categorizedItems.filter(type => {\n    const itemType = itemTypeMap[type];\n    return this.state.items && this.state.items[itemType.endPointName];\n  }).map(type => {\n    const itemType = itemTypeMap[type];\n    const itemCount = getDefaultItemCount(type);\n    const allItems = this.state.items[itemType.endPointName];\n    const hasMore = allItems.length > itemCount;\n    const items = this.state.maxOptions.has(itemType.id) ? allItems : allItems.slice(0, itemCount);\n    return <CategorizedMenuGroup key={type} type={type} title={itemType.pluralTitle} items={items} onChangeItemsLimit={this.fetchItems} hasMore={hasMore} />;\n  });\n  getSinglesMenuGroups = () => singleItems.map(category => <SinglesMenuGroup key={category.id} category={category} />);\n  getMenuGroups = () => this.getCategorizedMenuGroups().concat(this.getSinglesMenuGroups());\n  fetchItems = async type => {\n    if (type) {\n      const maxOptions = this.state.maxOptions;\n\n      if (maxOptions.has(type)) {\n        maxOptions.delete(type);\n      } else {\n        maxOptions.add(type);\n      }\n\n      this.setState({\n        maxOptions\n      });\n    } else {\n      this.setState({\n        maxOptions: new Set()\n      });\n    }\n\n    let queryString = '?count=11';\n\n    if ([...this.state.maxOptions.values()].length) {\n      queryString += '&max=' + [...this.state.maxOptions.values()].join('&max=');\n    }\n\n    const filter = this.state.filter ? `/${this.state.filter}` : '';\n    this.context.d2.Api.getApi().get(`dashboards/q${filter}${queryString}`).then(response => this.setState({\n      items: response\n    })).catch(console.error);\n  };\n\n  render() {\n    return <>\n                <ItemSearchField value={this.state.filter} onChange={this.setFilter} onFocus={this.openList} />\n                <Popover className=\"dashboard-item-selector\" open={this.state.open} onClose={this.closeList} anchorEl={this.state.anchorEl} anchorOrigin={{\n        horizontal: 'left',\n        vertical: 'bottom'\n      }} transformOrigin={{\n        horizontal: 'left',\n        vertical: 'top'\n      }} style={{\n        height: '70vh'\n      }} PaperProps={{\n        style: {\n          width: '700px'\n        }\n      }} disableAutoFocus={true} disableEnforceFocus={true} disableRestoreFocus={true}>\n                    <Menu maxWidth={'700px'}>{this.getMenuGroups()}</Menu>\n                </Popover>\n            </>;\n  }\n\n}\n\nItemSearchField.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n  onFocus: PropTypes.func\n};\nItemSelector.contextTypes = {\n  d2: PropTypes.object.isRequired\n};\nexport default ItemSelector;","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { InputField, TextAreaField } from '@dhis2/ui';\nimport ItemSelector from '../ItemSelector/ItemSelector';\nimport { acSetDashboardTitle, acSetDashboardDescription } from '../../actions/editDashboard';\nimport { orObject } from '../../modules/util';\nimport { sGetEditDashboardRoot } from '../../reducers/editDashboard';\nimport classes from './styles/EditTitleBar.module.css';\nexport const EditTitleBar = ({\n  name,\n  description,\n  onChangeTitle,\n  onChangeDescription\n}) => {\n  const updateTitle = (_, e) => {\n    onChangeTitle(e.target.value);\n  };\n\n  const updateDescription = (_, e) => {\n    onChangeDescription(e.target.value);\n  };\n\n  return <section className={classes.section}>\n            <div className={classes.titleDescription}>\n                <InputField className={classes.title} name=\"Dashboard title input\" label={i18n.t('Dashboard title')} type=\"text\" onChange={updateTitle} value={name} placeholder={i18n.t('Untitled dashboard')} />\n                <TextAreaField className={classes.description} name=\"Dashboard description input\" label={i18n.t('Dashboard description')} onChange={updateDescription} value={description} />\n            </div>\n            <div className={classes.itemSelector}>\n                <ItemSelector />\n            </div>\n        </section>;\n};\nEditTitleBar.propTypes = {\n  onChangeDescription: PropTypes.func.isRequired,\n  onChangeTitle: PropTypes.func.isRequired,\n  description: PropTypes.string,\n  name: PropTypes.string\n};\nEditTitleBar.defaultProps = {\n  name: '',\n  description: ''\n};\n\nconst mapStateToProps = state => {\n  const selectedDashboard = orObject(sGetEditDashboardRoot(state));\n  return {\n    name: selectedDashboard.name,\n    description: selectedDashboard.description\n  };\n};\n\nconst mapDispatchToProps = {\n  onChangeTitle: acSetDashboardTitle,\n  onChangeDescription: acSetDashboardDescription\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(EditTitleBar);","import React from 'react';\nimport { colors } from '@dhis2/ui';\nexport const ThreeDots = () => <svg height=\"18\" viewBox=\"0 0 18 18\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"m4 7.5c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm10 0c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm-5 0c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5z\" fill=\"#6e7a8a\" />\n    </svg>;\nexport const SpeechBubble = () => <svg height=\"20\" viewBox=\"0 0 20 20\" width=\"20\" xmlns=\"http://www.w3.org/2000/svg\" style={{\n  margin: '3px 2px 0 2px'\n}} // Temporary fix for the misaligned icon, should be removed once the icon is replaced\n>\n        <path d=\"m20 2h-16c-1.1 0-1.99.9-1.99 2l-.01 18 4-4h14c1.1 0 2-.9 2-2v-12c0-1.1-.9-2-2-2zm-2 12h-12v-2h12zm0-3h-12v-2h12zm0-3h-12v-2h12z\" fill=\"#6e7a8a\" fillRule=\"evenodd\" transform=\"translate(-2 -2)\" />\n    </svg>;\nexport const Warning = () => <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" fill={colors.grey600}>\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z\" />\n    </svg>;","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { Button, Modal, ModalTitle, ModalContent, ModalActions, ButtonStrip } from '@dhis2/ui';\nimport { PeriodDimension, DynamicDimension, OrgUnitDimension, DIMENSION_ID_PERIOD, DIMENSION_ID_ORGUNIT } from '@dhis2/analytics';\nimport { acAddItemFilter, acRemoveItemFilter } from '../../actions/itemFilters';\nimport { sGetItemFiltersRoot } from '../../reducers/itemFilters';\n\nconst FilterDialog = ({\n  displayNameProperty,\n  dimension,\n  initiallySelectedItems,\n  addItemFilter,\n  removeItemFilter,\n  onClose\n}, context) => {\n  const [filters, setFilters] = useState(initiallySelectedItems);\n\n  const onSelectItems = ({\n    dimensionId,\n    items\n  }) => {\n    setFilters({\n      [dimensionId]: items\n    });\n  };\n\n  const onDeselectItems = ({\n    dimensionId,\n    itemIdsToRemove\n  }) => {\n    const oldList = filters[dimensionId] || [];\n    const newList = oldList.filter(item => !itemIdsToRemove.includes(item.id));\n    setFilters({ ...filters,\n      [dimensionId]: newList\n    });\n  };\n\n  const onReorderItems = ({\n    dimensionId,\n    itemIds\n  }) => {\n    const oldList = filters[dimensionId] || [];\n    const reorderedList = itemIds.map(id => oldList.find(item => item.id === id));\n    setFilters({ ...filters,\n      [dimensionId]: reorderedList\n    });\n  };\n\n  const saveFilter = () => {\n    const id = dimension.id;\n    const filterItems = filters[id];\n\n    if (filterItems && filterItems.length) {\n      addItemFilter({\n        id,\n        value: [...filterItems]\n      });\n    } else {\n      removeItemFilter(id);\n    }\n\n    onClose(id);\n  };\n\n  const renderDialogContent = () => {\n    const commonProps = {\n      d2: context.d2,\n      onSelect: onSelectItems,\n      onDeselect: onDeselectItems,\n      onReorder: onReorderItems\n    };\n    const selectedItems = filters[dimension.id] || [];\n\n    switch (dimension.id) {\n      case DIMENSION_ID_PERIOD:\n        {\n          return <PeriodDimension selectedPeriods={selectedItems} onSelect={commonProps.onSelect} />;\n        }\n\n      case DIMENSION_ID_ORGUNIT:\n        return <OrgUnitDimension displayNameProperty={displayNameProperty} ouItems={selectedItems} {...commonProps} />;\n\n      default:\n        return <DynamicDimension selectedItems={selectedItems} dimensionId={dimension.id} onSelect={commonProps.onSelect} context={commonProps.d2} />;\n    }\n  };\n\n  return <>\n            {dimension.id && <Modal onClose={onClose} position=\"top\" large>\n                    <ModalTitle>{dimension.name}</ModalTitle>\n                    <ModalContent>{renderDialogContent()}</ModalContent>\n                    <ModalActions>\n                        <ButtonStrip>\n                            <Button secondary onClick={onClose}>\n                                {i18n.t('Cancel')}\n                            </Button>\n                            <Button primary onClick={saveFilter}>\n                                {i18n.t('Confirm')}\n                            </Button>\n                        </ButtonStrip>\n                    </ModalActions>\n                </Modal>}\n        </>;\n};\n\nFilterDialog.propTypes = {\n  addItemFilter: PropTypes.func,\n  dimension: PropTypes.object,\n  displayNameProperty: PropTypes.string,\n  initiallySelectedItems: PropTypes.object,\n  removeItemFilter: PropTypes.func,\n  onClose: PropTypes.func\n};\nFilterDialog.contextTypes = {\n  d2: PropTypes.object\n};\n\nconst mapStateToProps = state => ({\n  initiallySelectedItems: sGetItemFiltersRoot(state)\n});\n\nexport default connect(mapStateToProps, {\n  addItemFilter: acAddItemFilter,\n  removeItemFilter: acRemoveItemFilter\n})(FilterDialog);","export const SET_SETTINGS = 'SET_SETTINGS';\nexport const ADD_SETTINGS = 'ADD_SETTINGS';\nexport const DEFAULT_SETTINGS = {\n  keyDateFormat: 'yyyy-MM-dd',\n  keyAnalysisRelativePeriod: 'LAST_12_MONTHS',\n  keyAnalysisDigitGroupSeparator: 'SPACE',\n  displayNameProperty: 'displayName',\n  uiLocale: 'en',\n  rootOrganisationUnit: {}\n};\nexport default ((state = DEFAULT_SETTINGS, action) => {\n  switch (action.type) {\n    case SET_SETTINGS:\n      {\n        return Object.assign({}, action.value);\n      }\n\n    case ADD_SETTINGS:\n      {\n        return { ...state,\n          ...action.value\n        };\n      }\n\n    default:\n      return state;\n  }\n}); // Selectors\n\nexport const sGetSettings = state => state.settings;\nexport const sGetSettingsDisplayNameProperty = state => sGetSettings(state).displayNameProperty;\nexport const sGetRootOrgUnit = state => sGetSettings(state).rootOrganisationUnit;\nexport const sGetRelativePeriod = state => sGetSettings(state).keyAnalysisRelativePeriod;\nexport const sGetUiLocale = state => sGetSettings(state).uiLocale;","export const SET_ACTIVE_MODAL_DIMENSION = 'SET_ACTIVE_MODAL_DIMENSION';\nexport const CLEAR_ACTIVE_MODAL_DIMENSION = 'CLEAR_ACTIVE_MODAL_DIMENSION';\nexport const DEFAULT_STATE_ACTIVE_MODAL_DIMENSION = {};\nexport default ((state = DEFAULT_STATE_ACTIVE_MODAL_DIMENSION, action) => {\n  switch (action.type) {\n    case SET_ACTIVE_MODAL_DIMENSION:\n      {\n        return action.value;\n      }\n\n    case CLEAR_ACTIVE_MODAL_DIMENSION:\n      {\n        return DEFAULT_STATE_ACTIVE_MODAL_DIMENSION;\n      }\n\n    default:\n      return state;\n  }\n});\nexport const sGetActiveModalDimension = state => state.activeModalDimension;","import { SET_ACTIVE_MODAL_DIMENSION, CLEAR_ACTIVE_MODAL_DIMENSION } from '../reducers/activeModalDimension';\nexport const acSetActiveModalDimension = value => ({\n  type: SET_ACTIVE_MODAL_DIMENSION,\n  value\n});\nexport const acClearActiveModalDimension = () => ({\n  type: CLEAR_ACTIVE_MODAL_DIMENSION\n});","import React, { useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport isEmpty from 'lodash/isEmpty';\nimport i18n from '@dhis2/d2-i18n';\nimport { DimensionsPanel } from '@dhis2/analytics';\nimport { Button, Popover } from '@dhis2/ui';\nimport FilterDialog from './FilterDialog';\nimport { sGetSettingsDisplayNameProperty } from '../../reducers/settings';\nimport { sGetActiveModalDimension } from '../../reducers/activeModalDimension';\nimport { sGetDimensions } from '../../reducers/dimensions';\nimport { sGetItemFiltersRoot } from '../../reducers/itemFilters';\nimport { acClearActiveModalDimension, acSetActiveModalDimension } from '../../actions/activeModalDimension';\n\nconst FilterSelector = props => {\n  const [showPopover, setShowPopover] = useState(false);\n  const ref = useRef(null);\n\n  const onCloseDialog = () => {\n    setShowPopover(false);\n    props.clearActiveModalDimension();\n  };\n\n  const selectDimension = id => {\n    props.setActiveModalDimension(props.dimensions.find(dimension => dimension.id === id));\n  };\n\n  return <>\n            <span ref={ref}>\n                <Button onClick={() => setShowPopover(true)}>\n                    {i18n.t('Add filter')}\n                    <ArrowDropDownIcon />\n                </Button>\n            </span>\n            {showPopover && <Popover onClickOutside={onCloseDialog} reference={ref} arrow={true} placement=\"bottom-start\">\n                    <DimensionsPanel style={{\n        width: '320px'\n      }} dimensions={props.dimensions} onDimensionClick={selectDimension} selectedIds={Object.keys(props.initiallySelectedItems)} />\n                </Popover>}\n            {!isEmpty(props.dimension) ? <FilterDialog displayNameProperty={props.displayNameProperty} dimension={props.dimension} onClose={onCloseDialog} /> : null}\n        </>;\n};\n\nconst mapStateToProps = state => ({\n  displayNameProperty: sGetSettingsDisplayNameProperty(state),\n  dimension: sGetActiveModalDimension(state),\n  dimensions: sGetDimensions(state),\n  initiallySelectedItems: sGetItemFiltersRoot(state)\n});\n\nFilterSelector.propTypes = {\n  clearActiveModalDimension: PropTypes.func,\n  dimension: PropTypes.object,\n  dimensions: PropTypes.array,\n  displayNameProperty: PropTypes.string,\n  initiallySelectedItems: PropTypes.object,\n  setActiveModalDimension: PropTypes.func\n};\nexport default connect(mapStateToProps, {\n  clearActiveModalDimension: acClearActiveModalDimension,\n  setActiveModalDimension: acSetActiveModalDimension\n})(FilterSelector);","import React, { useState, createRef } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport { Redirect } from 'react-router-dom';\nimport SharingDialog from '@dhis2/d2-ui-sharing-dialog';\nimport Star from '@material-ui/icons/Star';\nimport StarBorder from '@material-ui/icons/StarBorder';\nimport { Button, FlyoutMenu, Popover, MenuItem, colors } from '@dhis2/ui';\nimport { ThreeDots } from '../Item/VisualizationItem/assets/icons';\nimport { orObject } from '../../modules/util';\nimport { tStarDashboard } from '../../actions/dashboards';\nimport { tUpdateShowDescription } from '../../actions/selected';\nimport FilterSelector from '../ItemFilter/FilterSelector';\nimport { sGetSelectedId, sGetSelectedShowDescription } from '../../reducers/selected';\nimport { sGetDashboardById, sGetDashboardItems, EMPTY_DASHBOARD } from '../../reducers/dashboards';\nimport classes from './styles/ViewTitleBar.module.css';\n\nconst ViewTitleBar = (props, context) => {\n  const [moreOptionsIsOpen, setMoreOptionsIsOpen] = useState(false);\n  const [sharingDialogIsOpen, setSharingDialogIsOpen] = useState(false);\n  const [redirectUrl, setRedirectUrl] = useState(null);\n  const {\n    id,\n    name,\n    description,\n    access,\n    style,\n    showDescription,\n    starred,\n    onToggleStarredDashboard,\n    onShowHideDescription\n  } = props;\n\n  const toggleSharingDialog = () => setSharingDialogIsOpen(!sharingDialogIsOpen);\n\n  const toggleMoreOptions = () => setMoreOptionsIsOpen(!moreOptionsIsOpen);\n\n  const printLayout = () => setRedirectUrl(`${id}/printlayout`);\n\n  const printOipp = () => setRedirectUrl(`${id}/printoipp`);\n\n  const titleStyle = Object.assign({}, style.title, {\n    cursor: 'default',\n    userSelect: 'text',\n    top: '7px'\n  });\n  const StarIcon = starred ? Star : StarBorder;\n\n  if (redirectUrl) {\n    return <Redirect to={redirectUrl} />;\n  }\n\n  const showHideDescriptionLabel = showDescription ? i18n.t('Hide description') : i18n.t('Show description');\n\n  const showHideDescription = () => {\n    onShowHideDescription();\n    toggleMoreOptions();\n  };\n\n  const toggleStarredDashboardLabel = starred ? i18n.t('Unstar dashboard') : i18n.t('Star dashboard');\n\n  const toggleStarredDashboard = () => {\n    onToggleStarredDashboard();\n    toggleMoreOptions();\n  };\n\n  const buttonRef = createRef();\n  const userAccess = orObject(access);\n  return <>\n            <div className={classes.titleBar}>\n                <span style={titleStyle}>{name}</span>\n                <div className={classes.actions}>\n                    <div className={classes.titleBarIcon} onClick={onToggleStarredDashboard}>\n                        <StarIcon style={{\n            fill: colors.grey600\n          }} />\n                    </div>\n                    <div className={classes.strip}>\n                        {userAccess.update ? <Link className={classes.editLink} to={`/${id}/edit`}>\n                                <Button>{i18n.t('Edit')}</Button>\n                            </Link> : null}\n                        {userAccess.manage ? <Button onClick={toggleSharingDialog}>\n                                {i18n.t('Share')}\n                            </Button> : null}\n                        <FilterSelector />\n                        <span ref={buttonRef}>\n                            <Button onClick={toggleMoreOptions}>\n                                <ThreeDots />\n                                <span style={{\n                marginLeft: '5px'\n              }}>\n                                    {i18n.t('More')}\n                                </span>\n                            </Button>\n                        </span>\n                    </div>\n                    {moreOptionsIsOpen && <Popover reference={buttonRef} placement=\"bottom-start\" onClickOutside={toggleMoreOptions}>\n                            <FlyoutMenu>\n                                <MenuItem dense label={toggleStarredDashboardLabel} onClick={toggleStarredDashboard} />\n                                <MenuItem dense label={showHideDescriptionLabel} onClick={showHideDescription} />\n                                <MenuItem dense label={i18n.t('Print')}>\n                                    <MenuItem dense label={i18n.t('Dashboard layout')} onClick={printLayout} />\n                                    <MenuItem dense label={i18n.t('One item per page')} onClick={printOipp} />\n                                </MenuItem>\n                            </FlyoutMenu>\n                        </Popover>}\n                </div>\n            </div>\n            {showDescription ? <div className=\"dashboard-description\" style={Object.assign({\n      paddingTop: '5px',\n      paddingBottom: '5px'\n    }, style.description, !description ? {\n      color: '#888'\n    } : {})}>\n                    {description || i18n.t('No description')}\n                </div> : null}\n            {id ? <SharingDialog d2={context.d2} id={id} type=\"dashboard\" open={sharingDialogIsOpen} onRequestClose={toggleSharingDialog} /> : null}\n        </>;\n};\n\nViewTitleBar.propTypes = {\n  access: PropTypes.object,\n  description: PropTypes.string,\n  id: PropTypes.string,\n  name: PropTypes.string,\n  showDescription: PropTypes.bool,\n  starred: PropTypes.bool,\n  style: PropTypes.object,\n  onShowHideDescription: PropTypes.func,\n  onToggleStarredDashboard: PropTypes.func\n};\nViewTitleBar.defaultProps = {\n  name: '',\n  description: '',\n  starred: false,\n  showDescription: false\n};\nViewTitleBar.contextTypes = {\n  d2: PropTypes.object\n};\n\nconst mapStateToProps = state => {\n  const id = sGetSelectedId(state);\n  const dashboard = sGetDashboardById(state, id) || EMPTY_DASHBOARD;\n  return {\n    id,\n    name: dashboard.displayName,\n    description: dashboard.displayDescription,\n    dashboardItems: sGetDashboardItems(state),\n    showDescription: sGetSelectedShowDescription(state),\n    starred: dashboard.starred,\n    access: dashboard.access\n  };\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n  const {\n    id,\n    starred,\n    showDescription\n  } = stateProps;\n  const {\n    dispatch\n  } = dispatchProps;\n  return { ...stateProps,\n    ...ownProps,\n    onToggleStarredDashboard: () => dispatch(tStarDashboard(id, !starred)),\n    onShowHideDescription: () => dispatch(tUpdateShowDescription(!showDescription))\n  };\n};\n\nexport default connect(mapStateToProps, null, mergeProps)(ViewTitleBar);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { colors } from '@dhis2/ui';\nimport EditTitleBar from './EditTitleBar';\nimport ViewTitleBar from './ViewTitleBar';\nimport './TitleBar.css';\nconst style = {\n  title: {\n    position: 'relative',\n    fontSize: 21,\n    fontWeight: 500,\n    color: colors.black,\n    minWidth: 50\n  },\n  description: {\n    fontSize: 14,\n    color: colors.grey800\n  }\n};\n\nconst TitleBar = ({\n  edit\n}) => {\n  return <div className=\"titlebar-wrapper\" style={{\n    padding: '13px 15px 5px 10px'\n  }}>\n            {edit ? <EditTitleBar style={style} /> : <ViewTitleBar style={style} />}\n        </div>;\n};\n\nTitleBar.propTypes = {\n  edit: PropTypes.bool\n};\nexport default TitleBar;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport * as pluginManager from './plugin';\nimport { getBaseUrl, orObject } from '../../../modules/util';\nimport { getGridItemDomId } from '../../ItemGrid/gridUtil';\n\nconst pluginCredentials = d2 => {\n  return {\n    baseUrl: getBaseUrl(d2),\n    auth: d2.Api.getApi().defaultHeaders.Authorization\n  };\n};\n\nclass DefaultPlugin extends Component {\n  pluginCredentials = null;\n\n  constructor(props, context) {\n    super(props);\n    this.d2 = context.d2;\n  }\n\n  shouldPluginReload = prevProps => {\n    // TODO - fix this hack, to handle bug with multiple\n    // rerendering while switching between dashboards.\n    //\n    // To determine if the rendering is happening because of a\n    // dashboard switch, check if the item reference has changed.\n    const reloadAllowed = this.props.item === prevProps.item;\n    const filtersChanged = prevProps.itemFilters !== this.props.itemFilters;\n    const vis = orObject(this.props.visualization);\n    const prevVis = orObject(prevProps.visualization);\n    const visChanged = vis.id !== prevVis.id || vis.activeType !== prevVis.activeType;\n    return reloadAllowed && (visChanged || filtersChanged);\n  };\n  reloadPlugin = prevProps => {\n    if (pluginManager.pluginIsAvailable(this.props.item, this.props.visualization) && this.shouldPluginReload(prevProps)) {\n      const prevVis = orObject(prevProps.visualization);\n      const currentVis = this.props.visualization;\n      const useActiveType = currentVis.activeType !== prevVis.activeType || currentVis.activeType !== this.props.item.type;\n\n      if (useActiveType || this.props.itemFilters !== prevProps.itemFilters) {\n        pluginManager.unmount(this.props.item, prevVis.activeType || this.props.item.type);\n        pluginManager.load(this.props.item, this.props.visualization, {\n          credentials: this.pluginCredentials,\n          activeType: useActiveType ? currentVis.activeType : null\n        });\n      }\n    }\n  };\n\n  componentDidMount() {\n    this.pluginCredentials = pluginCredentials(this.d2);\n\n    if (pluginManager.pluginIsAvailable(this.props.item, this.props.visualization)) {\n      pluginManager.load(this.props.item, this.props.visualization, {\n        credentials: this.pluginCredentials,\n        activeType: this.props.useActiveType ? this.getActiveType() : null,\n        options: this.props.options\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    this.reloadPlugin(prevProps);\n  }\n\n  componentWillUnmount() {\n    if (pluginManager.pluginIsAvailable(this.props.item, this.props.visualization)) {\n      pluginManager.unmount(this.props.item, this.getActiveType());\n    }\n  }\n\n  getActiveType = () => this.props.visualization.activeType || this.props.item.type;\n\n  render() {\n    const {\n      classes,\n      item,\n      visualization,\n      style\n    } = this.props;\n    const pluginIsAvailable = pluginManager.pluginIsAvailable(item, visualization);\n    return pluginIsAvailable ? <div id={getGridItemDomId(item.id)} style={style} /> : <div className={classes.textDiv}>\n                {i18n.t('Unable to load the plugin for this item')}\n            </div>;\n  }\n\n}\n\nDefaultPlugin.contextTypes = {\n  d2: PropTypes.object\n};\nDefaultPlugin.propTypes = {\n  classes: PropTypes.object,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object,\n  options: PropTypes.object,\n  style: PropTypes.object,\n  useActiveType: PropTypes.bool,\n  visualization: PropTypes.object\n};\nDefaultPlugin.defaultProps = {\n  style: {},\n  item: {},\n  itemFilters: {},\n  options: {},\n  visualization: {}\n};\nexport default DefaultPlugin;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Warning } from './assets/icons';\nimport classes from './styles/FatalErrorBoundary.module.css';\n\nclass FatalErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      errorFound: false\n    };\n  }\n\n  componentDidCatch(error, info) {\n    this.setState({\n      errorFound: true\n    });\n    console.log('error: ', error);\n    console.log('info: ', info);\n  }\n\n  render() {\n    if (this.state.errorFound) {\n      return <p className={classes.container}>\n                    <span className={classes.icon}>\n                        <Warning />\n                    </span>\n                    <span className={classes.message}>\n                        {i18n.t('There was a problem loading this dashboard item')}\n                    </span>\n                </p>;\n    }\n\n    return this.props.children;\n  }\n\n}\n\nFatalErrorBoundary.propTypes = {\n  children: PropTypes.node\n};\nexport default FatalErrorBoundary;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classes from './styles/ItemHeader.module.css';\n\nconst ViewItemActions = ({\n  actionButtons\n}) => {\n  return actionButtons ? <div className={classes.itemActionsWrap}>{actionButtons}</div> : null;\n};\n\nViewItemActions.propTypes = {\n  actionButtons: PropTypes.node\n};\nexport default ViewItemActions;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { colors } from '@dhis2/ui';\nimport classes from './styles/DeleteItemButton.module.css';\n\nconst DeleteItemButton = ({\n  onClick\n}) => <button type=\"button\" className={classes.deleteItemButton} onClick={onClick} title={i18n.t(`Delete item`)}>\n        <DeleteIcon style={{\n    fill: colors.red500\n  }} />\n    </button>;\n\nDeleteItemButton.propTypes = {\n  onClick: PropTypes.func\n};\nexport default DeleteItemButton;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport DeleteItemButton from './DeleteItemButton';\nimport { acRemoveDashboardItem } from '../../../actions/editDashboard';\nimport classes from './styles/ItemHeader.module.css';\n\nconst EditItemActions = ({\n  itemId,\n  acRemoveDashboardItem\n}) => {\n  const handleDeleteItem = () => acRemoveDashboardItem(itemId);\n\n  return <div className={classes.itemActionsWrap}>\n            <DeleteItemButton onClick={handleDeleteItem} />\n        </div>;\n};\n\nEditItemActions.propTypes = {\n  acRemoveDashboardItem: PropTypes.func,\n  itemId: PropTypes.string\n};\nconst mapDispatchToProps = {\n  acRemoveDashboardItem\n};\nexport default connect(null, mapDispatchToProps)(EditItemActions);","import React from 'react';\nimport { colors } from '@dhis2/ui';\n\nconst WarningIcon = () => <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" fill={colors.grey600}>\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z\" />\n    </svg>;\n\nexport default WarningIcon;","import React from 'react';\nimport { Tooltip } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport InfoIcon from '../../../icons/Info';\nimport classes from './styles/PrintItemInfo.module.css';\n\nconst PrintWarning = () => <div className={classes.warning}>\n        <Tooltip content={i18n.t('This item has been shortened to fit on one page')} placement=\"bottom\">\n            <InfoIcon />\n        </Tooltip>\n    </div>;\n\nexport default PrintWarning;","export const EDIT = 'edit';\nexport const NEW = 'new';\nexport const VIEW = 'view';\nexport const PRINT = 'print';\nexport const PRINT_LAYOUT = 'print-layout';\nexport const isEditMode = mode => [EDIT, NEW].includes(mode);\nexport const isPrintMode = mode => [PRINT, PRINT_LAYOUT].includes(mode);\nexport const isViewMode = mode => mode === VIEW;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ViewItemActions from './ViewItemActions';\nimport EditItemActions from './EditItemActions';\nimport PrintItemInfo from './PrintItemInfo';\nimport { VIEW, EDIT, PRINT_LAYOUT } from '../../Dashboard/dashboardModes';\nimport classes from './styles/ItemHeader.module.css';\n\nconst getItemActionsMap = isShortened => {\n  return {\n    [VIEW]: ViewItemActions,\n    [EDIT]: EditItemActions,\n    [PRINT_LAYOUT]: isShortened ? PrintItemInfo : null\n  };\n}; // This is the margin-top + margin-bottom defined in the css file\n\n\nexport const HEADER_MARGIN_HEIGHT = 12;\nconst ItemHeader = React.forwardRef(({\n  dashboardMode,\n  title,\n  isShortened,\n  ...rest\n}, ref) => {\n  const Actions = getItemActionsMap(isShortened)[dashboardMode];\n  return <div className={classes.itemHeaderWrap} ref={ref}>\n                <p className={classes.itemTitle}>{title}</p>\n                {Actions ? <Actions {...rest} /> : null}\n            </div>;\n});\nItemHeader.displayName = 'ItemHeader';\nItemHeader.propTypes = {\n  dashboardMode: PropTypes.string,\n  isShortened: PropTypes.bool,\n  title: PropTypes.string\n};\nexport default connect(null, null, null, {\n  forwardRef: true\n})(ItemHeader);","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { isSingleValue, isYearOverYear, VIS_TYPE_GAUGE, VIS_TYPE_PIE } from '@dhis2/analytics';\nimport { Button, Menu, MenuItem, Divider, colors } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport Popover from '@material-ui/core/Popover';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport { ThreeDots, SpeechBubble } from './assets/icons';\nimport { pluginIsAvailable, getLink } from './plugin';\nimport { CHART, MAP, REPORT_TABLE, EVENT_CHART, EVENT_REPORT, isTrackerDomainType, hasMapView, getAppName } from '../../../modules/itemTypes';\nconst iconFill = {\n  fill: colors.grey600\n};\n\nconst ItemHeaderButtons = props => {\n  const [anchorEl, setAnchorEl] = useState(null);\n  const {\n    item,\n    visualization,\n    onSelectActiveType,\n    d2,\n    activeType\n  } = props;\n  const isTrackerType = isTrackerDomainType(item.type);\n\n  const onViewTable = () => {\n    handleClose();\n    onSelectActiveType(isTrackerType ? EVENT_REPORT : REPORT_TABLE);\n  };\n\n  const onViewChart = () => {\n    handleClose();\n    onSelectActiveType(isTrackerType ? EVENT_CHART : CHART);\n  };\n\n  const onViewMap = () => {\n    handleClose();\n    onSelectActiveType(MAP);\n  };\n\n  const itemHasMapView = () => hasMapView(item.type);\n\n  const handleMenuClick = (_, event) => setAnchorEl(event.currentTarget);\n\n  const handleInterpretationClick = () => {\n    props.onToggleFooter();\n\n    if (anchorEl !== null) {\n      handleClose();\n    }\n  };\n\n  const handleClose = () => setAnchorEl(null);\n\n  const type = visualization.type || item.type;\n  const canViewAs = !isSingleValue(type) && !isYearOverYear(type) && type !== VIS_TYPE_GAUGE && type !== VIS_TYPE_PIE;\n  const interpretationMenuLabel = props.activeFooter ? i18n.t(`Hide interpretations and details`) : i18n.t(`Show interpretations and details`);\n\n  const ViewAsMenuItems = () => <>\n            {activeType !== CHART && activeType !== EVENT_CHART && <MenuItem dense label={i18n.t('View as Chart')} onClick={onViewChart} icon={<ChartIcon style={iconFill} />} />}\n            {activeType !== REPORT_TABLE && activeType !== EVENT_REPORT && <MenuItem dense label={i18n.t('View as Table')} onClick={onViewTable} icon={<TableIcon style={iconFill} />} />}\n            {itemHasMapView() && activeType !== MAP && <MenuItem dense label={i18n.t('View as Map')} onClick={onViewMap} icon={<MapIcon style={iconFill} />} />}\n        </>;\n\n  return pluginIsAvailable(item, visualization) ? <>\n            <Button small secondary onClick={handleMenuClick}>\n                <ThreeDots />\n            </Button>\n            {anchorEl && <Popover open={Boolean(anchorEl)} onClose={handleClose} anchorEl={anchorEl}>\n                    <Menu>\n                        {canViewAs && <>\n                                <ViewAsMenuItems />\n                                <Divider />\n                            </>}\n                        <MenuItem dense icon={<LaunchIcon style={{\n          fill: '#6e7a8a'\n        }} />} label={i18n.t('Open in {{appName}} app', {\n          appName: getAppName(item.type)\n        })} href={getLink(item, d2)} target=\"_blank\" />\n                        <MenuItem dense icon={<SpeechBubble />} label={interpretationMenuLabel} onClick={handleInterpretationClick} />\n                    </Menu>\n                </Popover>}\n        </> : null;\n};\n\nItemHeaderButtons.propTypes = {\n  activeFooter: PropTypes.bool,\n  activeType: PropTypes.string,\n  d2: PropTypes.object,\n  item: PropTypes.object,\n  visualization: PropTypes.object,\n  onSelectActiveType: PropTypes.func,\n  onToggleFooter: PropTypes.func\n};\nexport default ItemHeaderButtons;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { colors } from '@dhis2/ui';\nimport { getId } from './plugin';\nimport InterpretationsComponent from '@dhis2/d2-ui-interpretations';\nconst style = {\n  scrollContainer: {\n    overflowY: 'auto',\n    height: '340px'\n  },\n  line: {\n    margin: '-1px 0px 0px',\n    height: '1px',\n    border: 'none',\n    backgroundColor: colors.grey100\n  }\n};\n\nclass ItemFooter extends Component {\n  render() {\n    const objectId = getId(this.props.item);\n    return <div className=\"dashboard-item-footer\">\n                <hr style={style.line} />\n                <div style={style.scrollContainer}>\n                    <InterpretationsComponent d2={this.context.d2} item={this.props.item} type={this.props.item.type.toLowerCase()} id={objectId} appName=\"dashboard\" />\n                </div>\n            </div>;\n  }\n\n}\n\nItemFooter.contextTypes = {\n  d2: PropTypes.object.isRequired\n};\nItemFooter.propTypes = {\n  item: PropTypes.object.isRequired\n};\nexport default ItemFooter;","import React from 'react';\nimport { CircularLoader } from '@dhis2/ui';\nimport classes from './styles/LoadingMask.module.css';\n\nconst LoadingMask = () => {\n  return <div className={classes.center}>\n            <CircularLoader />\n        </div>;\n};\n\nexport default LoadingMask;","// Note that this ignores discrepancies in 'this', so shouldn't be used with bound functions\n// This is useful instead of lodash/memoize when we only need to memoize a single value\n// Inspiration: https://github.com/alexreardon/memoize-one\nconst memoizeOne = fn => {\n  let lastArgs = undefined;\n  let lastValue = undefined;\n  return (...args) => {\n    if (lastArgs && args.length === lastArgs.length && args.every((arg, i) => arg === lastArgs[i])) {\n      return lastValue;\n    }\n\n    lastArgs = args;\n    lastValue = fn(...args);\n    return lastValue;\n  };\n};\n\nexport default memoizeOne;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport uniqueId from 'lodash/uniqueId';\nimport VisualizationPlugin from '@dhis2/data-visualizer-plugin';\nimport i18n from '@dhis2/d2-i18n';\nimport DefaultPlugin from './DefaultPlugin';\nimport FatalErrorBoundary from './FatalErrorBoundary';\nimport ItemHeader, { HEADER_MARGIN_HEIGHT } from '../ItemHeader/ItemHeader';\nimport ItemHeaderButtons from './ItemHeaderButtons';\nimport ItemFooter from './ItemFooter';\nimport LoadingMask from './LoadingMask';\nimport * as pluginManager from './plugin';\nimport { sGetVisualization } from '../../../reducers/visualizations';\nimport { sGetItemFiltersRoot, DEFAULT_STATE_ITEM_FILTERS } from '../../../reducers/itemFilters';\nimport { acAddVisualization, acSetActiveVisualizationType } from '../../../actions/visualizations';\nimport { VISUALIZATION, MAP, CHART, REPORT_TABLE } from '../../../modules/itemTypes';\nimport memoizeOne from '../../../modules/memoizeOne';\nimport { isEditMode, isPrintMode, isViewMode } from '../../Dashboard/dashboardModes';\nimport { ITEM_CONTENT_PADDING_BOTTOM } from '../../ItemGrid/ItemGrid';\nimport classes from './styles/Item.module.css';\nexport class Item extends Component {\n  state = {\n    showFooter: false,\n    configLoaded: false,\n    pluginIsLoaded: false\n  };\n\n  constructor(props, context) {\n    super(props);\n    this.d2 = context.d2;\n    this.contentRef = React.createRef();\n    this.headerRef = React.createRef();\n    this.memoizedApplyFilters = memoizeOne(this.applyFilters);\n    this.memoizedGetVisualizationConfig = memoizeOne(pluginManager.getVisualizationConfig);\n    this.memoizedGetContentStyle = memoizeOne(this.getContentStyle);\n  }\n\n  async componentDidMount() {\n    this.props.onVisualizationLoaded( // TODO do not call fetch on the pluginManager, do it here as the manager will eventually be removed...\n    await pluginManager.fetch(this.props.item));\n    this.setState({\n      configLoaded: true\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.pluginIsLoaded && (prevProps.visualization !== this.props.visualization || prevProps.itemFilters !== this.props.itemFilters)) {\n      this.setState({\n        pluginIsLoaded: false\n      });\n    }\n  }\n\n  applyFilters = (visualization, filters) => {\n    if (!Object.keys(filters).length) {\n      return visualization;\n    } // deep clone objects in filters to avoid changing the visualization in the Redux store\n\n\n    const visRows = visualization.rows.map(obj => ({ ...obj\n    }));\n    const visColumns = visualization.columns.map(obj => ({ ...obj\n    }));\n    const visFilters = visualization.filters.map(obj => ({ ...obj\n    }));\n    Object.keys(filters).forEach(dimensionId => {\n      if (filters[dimensionId]) {\n        let dimensionFound = false;\n        [visRows, visColumns, visFilters].forEach(dimensionObjects => dimensionObjects.filter(obj => obj.dimension === dimensionId).forEach(obj => {\n          dimensionFound = true;\n          obj.items = filters[dimensionId];\n        })); // add dimension to filters if not already present elsewhere\n\n        if (!dimensionFound) {\n          visFilters.push({\n            dimension: dimensionId,\n            items: filters[dimensionId]\n          });\n        }\n      }\n    });\n    return { ...visualization,\n      rows: visRows,\n      columns: visColumns,\n      filters: visFilters\n    };\n  };\n  getUniqueKey = memoizeOne(() => uniqueId());\n  pluginCredentials = null;\n  getPluginComponent = () => {\n    const activeType = this.getActiveType();\n    const visualization = this.memoizedGetVisualizationConfig(this.props.visualization, this.props.item.type, activeType);\n\n    if (!visualization) {\n      return <div className={classes.textDiv}>\n                    {i18n.t('No data to display')}\n                </div>;\n    }\n\n    const calculatedHeight = this.props.item.originalHeight - this.headerRef.current.clientHeight - HEADER_MARGIN_HEIGHT - ITEM_CONTENT_PADDING_BOTTOM;\n    const props = { ...this.props,\n      useActiveType: !isEditMode(this.props.dashboardMode),\n      visualization,\n      classes,\n      style: this.memoizedGetContentStyle(calculatedHeight, this.contentRef ? this.contentRef.offsetHeight : null, isEditMode(this.props.dashboardMode) || isPrintMode(this.props.dashboardMode))\n    };\n\n    switch (activeType) {\n      case VISUALIZATION:\n      case CHART:\n      case REPORT_TABLE:\n        {\n          return <>\n                        {!this.state.pluginIsLoaded && <div style={props.style}>\n                                <LoadingMask />\n                            </div>}\n                        <VisualizationPlugin d2={this.d2} visualization={this.memoizedApplyFilters(visualization, props.itemFilters)} onLoadingComplete={this.onLoadingComplete} forDashboard={true} style={props.style} />\n                    </>;\n        }\n\n      case MAP:\n        {\n          if (props.item.type === MAP) {\n            // apply filters only to thematic and event layers\n            // for maps AO\n            const mapViews = props.visualization.mapViews.map(obj => {\n              if (obj.layer.includes('thematic') || obj.layer.includes('event')) {\n                return this.memoizedApplyFilters(obj, props.itemFilters);\n              }\n\n              return obj;\n            });\n            props.visualization = { ...props.visualization,\n              mapViews\n            };\n          } else {\n            // this is the case of a non map AO passed to the maps plugin\n            // due to a visualization type switch in dashboard item\n            // maps plugin takes care of converting the AO to a suitable format\n            props.visualization = this.memoizedApplyFilters(props.visualization, props.itemFilters);\n          }\n\n          props.options = { ...props.options,\n            hideTitle: true\n          };\n          return <DefaultPlugin {...props} />;\n        }\n\n      default:\n        {\n          props.visualization = this.memoizedApplyFilters(props.visualization, props.itemFilters);\n          return <DefaultPlugin {...props} />;\n        }\n    }\n  };\n  onLoadingComplete = () => {\n    this.setState({\n      pluginIsLoaded: true\n    });\n  };\n  onToggleFooter = () => {\n    this.setState({\n      showFooter: !this.state.showFooter\n    }, this.props.onToggleItemExpanded(this.props.item.id));\n  };\n  onSelectActiveType = type => {\n    type !== this.getActiveType() && this.props.onSelectActiveType(this.props.visualization.id, type);\n  };\n  getActiveType = () => this.props.visualization.activeType || this.props.item.type;\n  pluginIsAvailable = () => pluginManager.pluginIsAvailable(this.props.item, this.props.visualization);\n  getContentStyle = (calculatedHeight, measuredHeight, preferMeasured) => {\n    const height = preferMeasured ? measuredHeight || calculatedHeight : calculatedHeight;\n    return {\n      height\n    };\n  };\n\n  render() {\n    const {\n      item,\n      dashboardMode,\n      itemFilters\n    } = this.props;\n    const {\n      showFooter\n    } = this.state;\n    const actionButtons = <ItemHeaderButtons item={item} visualization={this.props.visualization} onSelectActiveType={this.onSelectActiveType} onToggleFooter={this.onToggleFooter} d2={this.d2} activeType={this.getActiveType()} activeFooter={this.state.showFooter} />;\n    return <>\n                <ItemHeader title={pluginManager.getName(item)} itemId={item.id} actionButtons={actionButtons} ref={this.headerRef} dashboardMode={dashboardMode} isShortened={item.shortened} />\n                <FatalErrorBoundary>\n                    <div key={this.getUniqueKey(itemFilters)} className=\"dashboard-item-content\" ref={ref => this.contentRef = ref}>\n                        {this.state.configLoaded && this.getPluginComponent()}\n                    </div>\n                </FatalErrorBoundary>\n                {isViewMode(dashboardMode) && showFooter ? <ItemFooter item={item} /> : null}\n            </>;\n  }\n\n}\nItem.contextTypes = {\n  d2: PropTypes.object\n};\nItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object,\n  visualization: PropTypes.object,\n  onSelectActiveType: PropTypes.func,\n  onToggleItemExpanded: PropTypes.func,\n  onVisualizationLoaded: PropTypes.func\n};\nItem.defaultProps = {\n  item: {},\n  onToggleItemExpanded: Function.prototype,\n  visualization: {}\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const itemFilters = !isEditMode(ownProps.dashboardMode) ? sGetItemFiltersRoot(state) : DEFAULT_STATE_ITEM_FILTERS;\n  return {\n    itemFilters,\n    visualization: sGetVisualization(state, pluginManager.extractFavorite(ownProps.item).id)\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  onVisualizationLoaded: visualization => dispatch(acAddVisualization(visualization)),\n  onSelectActiveType: (id, type, activeType) => dispatch(acSetActiveVisualizationType(id, type, activeType))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Item);","import React from 'react';\nimport { colors } from '@dhis2/ui';\nconst style = {\n  backgroundColor: colors.grey200,\n  border: 'none',\n  height: '1px',\n  margin: '0px 0px 5px 0px'\n};\n\nconst Line = () => <hr style={style} />;\n\nexport default Line;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { colors } from '@dhis2/ui';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport Line from '../../../widgets/Line';\nimport { sGetMessagesRoot } from '../../../reducers/messages';\nimport { formatDate } from '../../../modules/util';\nimport { isViewMode } from '../../Dashboard/dashboardModes';\nimport './MessagesItem.css';\nconst PRIVATE = 'PRIVATE';\nconst messageTypes = {\n  [PRIVATE]: 'Private',\n  VALIDATION_RESULT: 'Validation',\n  TICKET: 'Ticket',\n  SYSTEM: 'System'\n};\nconst style = {\n  list: {\n    listStyleType: 'none',\n    paddingLeft: '0px'\n  },\n  seeAll: {\n    textAlign: 'center',\n    fontSize: '13px',\n    marginBottom: '5px'\n  },\n  sender: {\n    fontSize: '13px',\n    lineHeight: '15px',\n    margin: 0,\n    color: colors.grey800\n  },\n  snippet: {\n    color: colors.grey800,\n    fontSize: '13px',\n    lineHeight: '15px',\n    maxHeight: '30px',\n    overflow: 'hidden'\n  }\n};\n\nclass MessagesItem extends Component {\n  state = {\n    uiLocale: ''\n  };\n\n  async componentDidMount() {\n    const uiLocale = await this.context.d2.currentUser.userSettings.get('keyUiLocale');\n    this.setState({\n      uiLocale\n    });\n  }\n\n  getMessageHref = msg => {\n    const msgIdentifier = msg ? `#/${msg.messageType}/${msg.id}` : '';\n    return `${this.context.baseUrl}/dhis-web-messaging/${msgIdentifier}`;\n  };\n  getMessageSender = msg => {\n    const latestMsg = msg.messages.slice(-1)[0];\n    return latestMsg.sender ? latestMsg.sender.displayName : '';\n  };\n  getMessageItems = () => {\n    const modeClass = isViewMode(this.props.dashboardMode) ? 'view' : null;\n    return this.props.messages.map(msg => {\n      const redirectToMsg = () => {\n        if (isViewMode(this.props.dashboardMode)) {\n          document.location.href = this.getMessageHref(msg);\n        }\n      };\n\n      const sender = msg.messageType === PRIVATE ? this.getMessageSender(msg) : messageTypes[msg.messageType];\n      const readClass = !msg.read ? 'unread' : null;\n      const latestMsg = msg.messages.slice(-1)[0];\n      const msgDate = latestMsg.lastUpdated;\n      return <li className={`message-item ${modeClass}`} key={msg.id} onClick={redirectToMsg}>\n                    <p className={`message-title ${readClass}`}>\n                        {msg.displayName} ({msg.messageCount})\n                    </p>\n                    <p style={style.sender}>\n                        {sender} - {formatDate(msgDate, this.state.uiLocale)}\n                    </p>\n                    <p style={style.snippet}>{latestMsg.text}</p>\n                </li>;\n    });\n  };\n\n  render() {\n    return <>\n                <ItemHeader title={i18n.t('Messages')} itemId={this.props.item.id} dashboardMode={this.props.dashboardMode} isShortened={this.props.item.shortened} />\n                <Line />\n                {this.props.messages.length > 0 && <div className=\"dashboard-item-content\">\n                        <ul style={style.list}>{this.getMessageItems()}</ul>\n                        <div style={style.seeAll}>\n                            <a href={this.getMessageHref()}>\n                                {i18n.t('See all messages')}\n                            </a>\n                        </div>\n                    </div>}\n            </>;\n  }\n\n}\n\nMessagesItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  messages: PropTypes.array\n};\nMessagesItem.contextTypes = {\n  d2: PropTypes.object,\n  baseUrl: PropTypes.string\n};\n\nconst mapStateToProps = state => {\n  return {\n    messages: Object.values(sGetMessagesRoot(state))\n  };\n};\n\nconst MessagesContainer = connect(mapStateToProps, null)(MessagesItem);\nexport default MessagesContainer;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nconst NotSupportedItem = props => <>\n        <ItemHeader title={i18n.t('Item type \"{{type}}\" not supported', {\n    type: props.item.type\n  })} itemId={props.item.id} dashboardMode={props.dashboardMode} isShortened={props.item.shortened} />\n        <div style={{\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '90%'\n  }}>\n            <NotInterestedIcon style={{\n      width: 100,\n      height: 100,\n      align: 'center'\n    }} color=\"disabled\" />\n        </div>\n    </>;\n\nNotSupportedItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object\n};\nexport default NotSupportedItem;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst DescriptionIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill={colors.grey500}>\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M14 2H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6zm2 16H8v-2h8v2zm0-4H8v-2h8v2zm-3-5V3.5L18.5 9H13z\" />\n    </svg>;\n\nDescriptionIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default DescriptionIcon;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst DeleteIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill={colors.red500}>\n        <path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>;\n\nDeleteIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default DeleteIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { colors } from '@dhis2/ui';\nimport DescriptionIcon from '../../../icons/Description';\nimport DeleteIcon from '../../../icons/Delete';\nimport Line from '../../../widgets/Line';\nimport { itemTypeMap, getItemUrl } from '../../../modules/itemTypes';\nimport { orArray } from '../../../modules/util';\nimport { tRemoveListItemContent } from './actions';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport { isEditMode } from '../../Dashboard/dashboardModes';\nimport classes from './Item.module.css';\n\nconst getItemTitle = item => itemTypeMap[item.type].pluralTitle;\n\nconst getContentItems = item => orArray(item[itemTypeMap[item.type].propName]).filter((item, index, array) => array.findIndex(el => el.id === item.id) === index);\n\nconst ListItem = (props, context) => {\n  const {\n    item,\n    dashboardMode,\n    tRemoveListItemContent\n  } = props;\n  const contentItems = getContentItems(item);\n\n  const getLink = contentItem => {\n    const deleteButton = <button className={classes.deletebutton} onClick={() => tRemoveListItemContent(item, contentItem)}>\n                <DeleteIcon className={classes.deleteicon} />\n            </button>;\n    return <>\n                <a className={classes.link} style={{\n        color: colors.grey900\n      }} href={getItemUrl(item.type, contentItem, context.d2)}>\n                    {contentItem.name}\n                </a>\n                {isEditMode(dashboardMode) ? deleteButton : null}\n            </>;\n  };\n\n  return <>\n            <ItemHeader title={getItemTitle(item)} itemId={item.id} dashboardMode={dashboardMode} isShortened={item.shortened} />\n            <Line />\n            <div className=\"dashboard-item-content\">\n                <ul className={classes.list}>\n                    {contentItems.map(contentItem => <li className={classes.item} key={contentItem.id}>\n                            <DescriptionIcon className={classes.itemicon} />\n                            {getLink(contentItem)}\n                        </li>)}\n                </ul>\n            </div>\n        </>;\n};\n\nListItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  tRemoveListItemContent: PropTypes.func\n};\nListItem.contextTypes = {\n  d2: PropTypes.object\n};\nexport default connect(null, {\n  tRemoveListItemContent\n})(ListItem);","import { acUpdateDashboardItem, acRemoveDashboardItem } from '../../../actions/editDashboard';\nimport { itemTypeMap } from '../../../modules/itemTypes';\nexport const tRemoveListItemContent = (dashboardItem, content) => dispatch => {\n  const listItemType = itemTypeMap[dashboardItem.type].propName;\n  const newContent = dashboardItem[listItemType].filter(item => item.id !== content.id);\n\n  if (newContent.length) {\n    dashboardItem[listItemType] = newContent;\n    dispatch(acUpdateDashboardItem(dashboardItem));\n  } else {\n    dispatch(acRemoveDashboardItem(dashboardItem));\n  }\n};","/** @module reducers/editDashboard */\nimport update from 'immutability-helper';\nimport isEmpty from 'lodash/isEmpty';\nimport { orArray } from '../modules/util';\nexport const SET_PRINT_DASHBOARD = 'SET_PRINT_DASHBOARD';\nexport const CLEAR_PRINT_DASHBOARD = 'CLEAR_PRINT_DASHBOARD';\nexport const ADD_PRINT_DASHBOARD_ITEM = 'ADD_PRINT_DASHBOARD_ITEM';\nexport const SET_PRINT_DASHBOARD_LAYOUT = 'SET_PRINT_DASHBOARD_LAYOUT';\nexport const REMOVE_PRINT_DASHBOARD_ITEM = 'REMOVE_PRINT_DASHBOARD_ITEM';\nexport const UPDATE_PRINT_DASHBOARD_ITEM = 'UPDATE_PRINT_DASHBOARD_ITEM';\nexport const DEFAULT_STATE_PRINT_DASHBOARD = {};\nconst DEFAULT_DASHBOARD_ITEMS = [];\nexport const NEW_PRINT_DASHBOARD_STATE = {\n  id: '',\n  name: '',\n  access: {},\n  description: '',\n  dashboardItems: DEFAULT_DASHBOARD_ITEMS\n};\nexport default ((state = DEFAULT_STATE_PRINT_DASHBOARD, action) => {\n  switch (action.type) {\n    case SET_PRINT_DASHBOARD:\n      {\n        const newState = {};\n        Object.keys(NEW_PRINT_DASHBOARD_STATE).map(k => newState[k] = action.value[k]);\n        return newState;\n      }\n\n    case CLEAR_PRINT_DASHBOARD:\n      return DEFAULT_STATE_PRINT_DASHBOARD;\n\n    case ADD_PRINT_DASHBOARD_ITEM:\n      if (!action.value.position) {\n        return update(state, {\n          dashboardItems: {\n            $unshift: [action.value]\n          }\n        });\n      }\n\n      return update(state, {\n        dashboardItems: {\n          $splice: [[parseInt(action.value.position), 0, action.value]]\n        }\n      });\n\n    case REMOVE_PRINT_DASHBOARD_ITEM:\n      {\n        const idToRemove = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === idToRemove);\n\n        if (dashboardItemIndex > -1) {\n          return update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1]]\n            }\n          });\n        }\n\n        return state;\n      }\n\n    case UPDATE_PRINT_DASHBOARD_ITEM:\n      {\n        const dashboardItem = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === dashboardItem.id);\n\n        if (dashboardItemIndex > -1) {\n          const newState = update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1, Object.assign({}, dashboardItem)]]\n            }\n          });\n          return newState;\n        }\n\n        return state;\n      }\n\n    case SET_PRINT_DASHBOARD_LAYOUT:\n      {\n        const stateItems = orArray(state.dashboardItems);\n        let layoutHasChanged = false;\n        const newStateItems = action.value.map(({\n          x,\n          y,\n          w,\n          h,\n          i\n        }) => {\n          const stateItem = stateItems.find(si => si.id === i);\n\n          if (!(stateItem.x === x && stateItem.y === y && stateItem.w === w && stateItem.h === h)) {\n            layoutHasChanged = true;\n            return Object.assign({}, stateItem, {\n              w,\n              h,\n              x,\n              y\n            });\n          }\n\n          return stateItem;\n        });\n        return layoutHasChanged ? { ...state,\n          dashboardItems: newStateItems\n        } : state;\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetPrintDashboardRoot = state => state.printDashboard; // selectors\n\nexport const sGetIsPrinting = state => !isEmpty(state.printDashboard);\nexport const sGetPrintDashboardName = state => sGetPrintDashboardRoot(state).name;\nexport const sGetPrintDashboardDescription = state => sGetPrintDashboardRoot(state).description;\nexport const sGetPrintDashboardItems = state => {\n  return sGetPrintDashboardRoot(state)?.dashboardItems || DEFAULT_DASHBOARD_ITEMS;\n};","import React from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport Input from '@material-ui/core/Input';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport PrintItemInfo from '../ItemHeader/PrintItemInfo';\nimport Line from '../../../widgets/Line';\nimport { Parser as RichTextParser, Editor as RichTextEditor } from '@dhis2/d2-ui-rich-text';\nimport { acUpdateDashboardItem } from '../../../actions/editDashboard';\nimport { sGetEditDashboardItems } from '../../../reducers/editDashboard';\nimport { sGetDashboardItems } from '../../../reducers/dashboards';\nimport { sGetIsPrinting, sGetPrintDashboardItems } from '../../../reducers/printDashboard';\nimport { isEditMode, PRINT_LAYOUT } from '../../Dashboard/dashboardModes';\nconst style = {\n  textDiv: {\n    padding: '10px',\n    whiteSpace: 'pre-line',\n    lineHeight: '20px'\n  },\n  textField: {\n    fontSize: '14px',\n    fontStretch: 'normal',\n    width: '90%',\n    margin: '0 auto',\n    display: 'block',\n    lineHeight: '24px'\n  },\n  container: {\n    marginBottom: '20px',\n    marginTop: '20px'\n  }\n};\n\nconst TextItem = props => {\n  const {\n    item,\n    dashboardMode,\n    text,\n    acUpdateDashboardItem\n  } = props;\n\n  const onChangeText = event => {\n    const updatedItem = { ...item,\n      text: event.target.value\n    };\n    acUpdateDashboardItem(updatedItem);\n  };\n\n  const viewItem = () => {\n    const textDivStyle = Object.assign({}, style.textField, style.textDiv);\n    return <div className=\"dashboard-item-content\" style={style.container}>\n                <RichTextParser style={textDivStyle}>{text}</RichTextParser>\n            </div>;\n  };\n\n  const editItem = () => {\n    return <>\n                <ItemHeader title={i18n.t('Text item')} itemId={item.id} dashboardMode={dashboardMode} />\n                <Line />\n                <div className=\"dashboard-item-content\">\n                    <RichTextEditor onEdit={onChangeText}>\n                        <Input value={text} multiline fullWidth style={style.textField} placeholder={i18n.t('Add text here')} onChange={onChangeText} />\n                    </RichTextEditor>\n                </div>\n            </>;\n  };\n\n  const printItem = () => {\n    const textDivStyle = Object.assign({}, style.textField, style.textDiv);\n    return <>\n                {props.item.shortened ? <PrintItemInfo /> : null}\n                <div className=\"dashboard-item-content\" style={style.container}>\n                    <RichTextParser style={textDivStyle}>{text}</RichTextParser>\n                </div>\n            </>;\n  };\n\n  let textItem;\n\n  if (isEditMode(dashboardMode)) {\n    textItem = editItem;\n  } else if (dashboardMode === PRINT_LAYOUT) {\n    textItem = printItem;\n  } else {\n    textItem = viewItem;\n  }\n\n  return <>{textItem()}</>;\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const isPrintPreview = sGetIsPrinting(state);\n  let items;\n\n  if (isPrintPreview) {\n    items = sGetPrintDashboardItems(state);\n  } else if (isEditMode(ownProps.dashboardMode)) {\n    items = sGetEditDashboardItems(state);\n  } else {\n    items = sGetDashboardItems(state);\n  }\n\n  const item = items.find(item => item.id === ownProps.item.id);\n  return {\n    text: item ? item.text : ''\n  };\n};\n\nTextItem.propTypes = {\n  acUpdateDashboardItem: PropTypes.func,\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  text: PropTypes.string\n};\nexport default connect(mapStateToProps, {\n  acUpdateDashboardItem\n})(TextItem);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\nimport { FILTER_ORG_UNIT } from '../../../actions/itemFilters';\nimport { sGetItemFiltersRoot, DEFAULT_STATE_ITEM_FILTERS } from '../../../reducers/itemFilters';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport Line from '../../../widgets/Line';\nimport { isEditMode } from '../../Dashboard/dashboardModes';\n\nconst getIframeSrc = (appDetails, item, itemFilters) => {\n  let iframeSrc = `${appDetails.launchUrl}?dashboardItemId=${item.id}`;\n\n  if (itemFilters && itemFilters[FILTER_ORG_UNIT] && itemFilters[FILTER_ORG_UNIT].length) {\n    const ouIds = itemFilters[FILTER_ORG_UNIT].map(ouPath => ouPath.split('/').slice(-1)[0]);\n    iframeSrc += `&userOrgUnit=${ouIds.join(',')}`;\n  }\n\n  return iframeSrc;\n};\n\nconst AppItem = ({\n  dashboardMode,\n  item,\n  itemFilters\n}, context) => {\n  let appDetails;\n  const appKey = item.appKey;\n\n  if (appKey) {\n    appDetails = context.d2.system.installedApps.find(app => app.key === appKey);\n  }\n\n  return appDetails && appDetails.name && appDetails.launchUrl ? <>\n            <ItemHeader title={appDetails.name} itemId={item.id} dashboardMode={dashboardMode} isShortened={item.shortened} />\n            <Line />\n            <iframe title={appDetails.name} src={getIframeSrc(appDetails, item, itemFilters)} className=\"dashboard-item-content\" style={{\n      border: 'none'\n    }} />\n        </> : <>\n            <ItemHeader title={`${appKey} app not found`} />\n            <Line />\n            <div className=\"dashboard-item-content\" style={{\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      height: '90%'\n    }}>\n                <NotInterestedIcon color=\"disabled\" disabled style={{\n        width: 100,\n        height: 100,\n        align: 'center'\n      }} />\n            </div>\n        </>;\n};\n\nAppItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object\n};\nAppItem.contextTypes = {\n  d2: PropTypes.object\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const itemFilters = !isEditMode(ownProps.dashboardMode) ? sGetItemFiltersRoot(state) : DEFAULT_STATE_ITEM_FILTERS;\n  return {\n    itemFilters\n  };\n};\n\nexport default connect(mapStateToProps)(AppItem);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { colors } from '@dhis2/ui';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nconst style = {\n  margin: '21px 28px',\n  fontSize: '14px',\n  lineHeight: '18px',\n  color: colors.grey600\n};\n\nconst SpacerItem = props => {\n  return <>\n            <ItemHeader title={i18n.t('Spacer')} itemId={props.item.id} dashboardMode={props.dashboardMode} isShortened={props.item.shortened} />\n            <p style={style}>\n                {i18n.t('Use a spacer to create empty vertical space between other dashboard items.')}\n            </p>\n        </>;\n};\n\nSpacerItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object\n};\nexport default SpacerItem;","import React from 'react';\n\nconst PageBreakItem = () => <div />;\n\nexport default PageBreakItem;","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { sGetSelectedId, sGetSelectedShowDescription } from '../../../reducers/selected';\nimport { sGetDashboardById, EMPTY_DASHBOARD } from '../../../reducers/dashboards';\nimport { sGetNamedItemFilters } from '../../../reducers/itemFilters';\nimport { sGetIsEditing } from '../../../reducers/editDashboard';\nimport { sGetPrintDashboardName, sGetPrintDashboardDescription } from '../../../reducers/printDashboard';\nimport classes from './styles/Item.module.css';\n\nconst PrintTitlePageItem = ({\n  name,\n  description,\n  itemFilters,\n  showDescription\n}) => {\n  const getItemFilterList = () => {\n    const listItems = itemFilters.map(({\n      name,\n      values\n    }) => <li className={classes.filterListItem} key={name}>\n                {name}: {values.map(val => val.name).join(', ')}\n            </li>);\n    return <ul className={classes.filterList}>{listItems}</ul>;\n  };\n\n  return <div className={classes.titlePage}>\n            <p className={classes.name}>{name}</p>\n            {showDescription && description && <p className={classes.description}>{description}</p>}\n            {itemFilters.length > 0 && <>\n                    <p className={classes.filterTitle}>\n                        {i18n.t('Filters applied')}\n                    </p>\n                    {getItemFilterList()}\n                </>}\n        </div>;\n};\n\nPrintTitlePageItem.propTypes = {\n  description: PropTypes.string,\n  itemFilters: PropTypes.array,\n  name: PropTypes.string,\n  showDescription: PropTypes.bool\n};\nPrintTitlePageItem.defaultProps = {\n  description: '',\n  name: '',\n  showDescription: false\n};\n\nconst mapStateToProps = state => {\n  const id = sGetSelectedId(state);\n  const isEditMode = sGetIsEditing(state);\n  const viewDashboard = sGetDashboardById(state, id) || EMPTY_DASHBOARD;\n  const name = isEditMode ? sGetPrintDashboardName(state) || i18n.t('Untitled dashboard') : viewDashboard.displayName;\n  const description = isEditMode ? sGetPrintDashboardDescription(state) : viewDashboard.displayDescription;\n  return {\n    name,\n    description,\n    itemFilters: sGetNamedItemFilters(state),\n    showDescription: sGetSelectedShowDescription(state)\n  };\n};\n\nexport default connect(mapStateToProps)(PrintTitlePageItem);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport VisualizationItem from './VisualizationItem/Item';\nimport MessagesItem from './MessagesItem/Item';\nimport NotSupportedItem from './NotSupportedItem/Item';\nimport ListItem from './ListItem/Item';\nimport TextItem from './TextItem/Item';\nimport AppItem from './AppItem/Item';\nimport SpacerItem from './SpacerItem/Item';\nimport PageBreakItem from './PageBreakItem/Item';\nimport PrintTitlePageItem from './PrintTitlePageItem/Item';\nimport { APP, VISUALIZATION, REPORT_TABLE, CHART, MAP, EVENT_CHART, EVENT_REPORT, MESSAGES, REPORTS, RESOURCES, USERS, TEXT, SPACER, PAGEBREAK, PRINT_TITLE_PAGE } from '../../modules/itemTypes';\n\nconst getGridItem = type => {\n  switch (type) {\n    case VISUALIZATION:\n    case REPORT_TABLE:\n    case CHART:\n    case MAP:\n    case EVENT_CHART:\n    case EVENT_REPORT:\n      return VisualizationItem;\n\n    case MESSAGES:\n      return MessagesItem;\n\n    case REPORTS:\n    case RESOURCES:\n    case USERS:\n      return ListItem;\n\n    case TEXT:\n      return TextItem;\n\n    case SPACER:\n      return SpacerItem;\n\n    case APP:\n      return AppItem;\n\n    case PAGEBREAK:\n      return PageBreakItem;\n\n    case PRINT_TITLE_PAGE:\n      return PrintTitlePageItem;\n\n    default:\n      return NotSupportedItem;\n  }\n};\n\nexport const Item = props => {\n  const GridItem = getGridItem(props.item.type);\n  return <GridItem item={props.item} dashboardMode={props.dashboardMode} onToggleItemExpanded={props.onToggleItemExpanded} />;\n};\nItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  onToggleItemExpanded: PropTypes.func\n};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash/debounce';\nimport pick from 'lodash/pick';\nconst defaultDebounceMs = 100;\nconst defaultBufferFactor = 0.25;\n\nclass ProgressiveLoadingContainer extends Component {\n  static propTypes = {\n    children: PropTypes.node.isRequired,\n    bufferFactor: PropTypes.number,\n    className: PropTypes.string,\n    debounceMs: PropTypes.number,\n    style: PropTypes.object\n  };\n  static defaultProps = {\n    debounceMs: defaultDebounceMs,\n    bufferFactor: defaultBufferFactor\n  };\n  state = {\n    shouldLoad: false\n  };\n  containerRef = null;\n  shouldLoadHandler = null;\n  handlerOptions = {\n    passive: true\n  };\n\n  checkShouldLoad() {\n    if (!this.containerRef) {\n      return;\n    }\n\n    const bufferPx = this.props.bufferFactor * window.innerHeight;\n    const rect = this.containerRef.getBoundingClientRect();\n\n    if (rect.bottom > -bufferPx && rect.top < window.innerHeight + bufferPx) {\n      this.setState({\n        shouldLoad: true\n      });\n      this.removeHandler();\n    }\n  }\n\n  registerHandler() {\n    this.shouldLoadHandler = debounce(() => this.checkShouldLoad(), this.props.debounceMs);\n    document.getElementsByClassName('dashboard-wrapper')[0]?.addEventListener('scroll', this.shouldLoadHandler, this.handlerOptions);\n  }\n\n  removeHandler() {\n    document.getElementsByClassName('dashboard-wrapper')[0]?.removeEventListener('scroll', this.shouldLoadHandler, this.handlerOptions);\n  }\n\n  componentDidMount() {\n    this.registerHandler();\n    this.checkShouldLoad();\n  }\n\n  componentWillUnmount() {\n    this.removeHandler();\n  }\n\n  render() {\n    const {\n      children,\n      className,\n      style,\n      ...props\n    } = this.props;\n    const {\n      shouldLoad\n    } = this.state;\n    const eventProps = pick(props, ['onMouseDown', 'onTouchStart', 'onMouseUp', 'onTouchEnd']);\n    return <div ref={ref => this.containerRef = ref} style={style} className={className} {...eventProps}>\n                {shouldLoad && children}\n            </div>;\n  }\n\n}\n\nexport default ProgressiveLoadingContainer;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ReactGridLayout from 'react-grid-layout';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport { acUpdateDashboardLayout } from '../../actions/editDashboard';\nimport { Item } from '../Item/Item';\nimport { resize as pluginResize } from '../Item/VisualizationItem/plugin';\nimport { isVisualizationType } from '../../modules/itemTypes';\nimport { GRID_ROW_HEIGHT, GRID_COMPACT_TYPE, MARGIN, getGridColumns, hasShape, onItemResize } from './gridUtil';\nimport { orArray } from '../../modules/util';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\nimport './ItemGrid.css';\nimport { sGetSelectedId, sGetSelectedIsLoading } from '../../reducers/selected';\nimport { sGetEditDashboardRoot, sGetEditDashboardItems } from '../../reducers/editDashboard';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport ProgressiveLoadingContainer from '../Item/ProgressiveLoadingContainer';\nimport { VIEW, EDIT } from '../Dashboard/dashboardModes'; // Component\n\nconst EXPANDED_HEIGHT = 17; // this is set in the .dashboard-item-content css\n\nexport const ITEM_CONTENT_PADDING_BOTTOM = 4;\nexport class ItemGrid extends Component {\n  state = {\n    expandedItems: {}\n  };\n  onToggleItemExpanded = clickedId => {\n    const isExpanded = typeof this.state.expandedItems[clickedId] === 'boolean' ? this.state.expandedItems[clickedId] : false;\n    const expandedItems = { ...this.state.expandedItems\n    };\n    expandedItems[clickedId] = !isExpanded;\n    this.setState({\n      expandedItems\n    });\n  };\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.edit) {\n      this.setState({\n        expandedItems: {}\n      });\n    }\n  }\n\n  onLayoutChange = newLayout => {\n    if (this.props.edit) {\n      this.props.acUpdateDashboardLayout(newLayout);\n    }\n  };\n  onResizeStop = (layout, oldItem, newItem) => {\n    onItemResize(newItem.i);\n    const dashboardItem = this.props.dashboardItems.find(item => item.id === newItem.i); // call resize on the item component if it's a plugin type\n\n    if (dashboardItem && isVisualizationType(dashboardItem)) {\n      pluginResize(dashboardItem);\n    }\n  };\n  adjustHeightForExpanded = dashboardItem => {\n    const expandedItem = this.state.expandedItems[dashboardItem.id];\n\n    if (expandedItem && expandedItem === true) {\n      return Object.assign({}, dashboardItem, {\n        h: dashboardItem.h + EXPANDED_HEIGHT\n      });\n    }\n\n    return dashboardItem;\n  };\n  getItemComponent = item => {\n    const itemClassNames = [item.type, this.props.edit ? 'edit' : 'view'].join(' ');\n    return <ProgressiveLoadingContainer key={item.i} className={itemClassNames}>\n                <Item item={item} dashboardMode={this.props.edit ? EDIT : VIEW} onToggleItemExpanded={this.onToggleItemExpanded} />\n            </ProgressiveLoadingContainer>;\n  };\n  getItemComponents = items => items.map(item => this.getItemComponent(item));\n\n  render() {\n    const {\n      edit,\n      isLoading,\n      dashboardItems\n    } = this.props;\n\n    if (!isLoading && !dashboardItems.length) {\n      return <NoContentMessage text={i18n.t('There are no items on this dashboard')} />;\n    }\n\n    const items = edit ? dashboardItems : dashboardItems.map(this.adjustHeightForExpanded);\n    return <div className=\"grid-wrapper\">\n                {isLoading ? <Layer translucent>\n                        <CenteredContent>\n                            <CircularLoader />\n                        </CenteredContent>\n                    </Layer> : null}\n                <ReactGridLayout onLayoutChange={this.onLayoutChange} onResizeStop={this.onResizeStop} className=\"layout\" layout={items} margin={MARGIN} cols={getGridColumns()} rowHeight={GRID_ROW_HEIGHT} width={window.innerWidth} compactType={GRID_COMPACT_TYPE} isDraggable={edit} isResizable={edit} draggableCancel=\"input,textarea\">\n                    {this.getItemComponents(items)}\n                </ReactGridLayout>\n            </div>;\n  }\n\n}\nItemGrid.propTypes = {\n  acUpdateDashboardLayout: PropTypes.func,\n  dashboardItems: PropTypes.array,\n  edit: PropTypes.bool,\n  isLoading: PropTypes.bool\n};\nItemGrid.defaultProps = {\n  dashboardItems: []\n}; // Container\n\nconst mapStateToProps = (state, ownProps) => {\n  const selectedDashboard = ownProps.edit ? sGetEditDashboardRoot(state) : sGetDashboardById(state, sGetSelectedId(state));\n  const dashboardItems = ownProps.edit ? sGetEditDashboardItems(state) : sGetDashboardItems(state);\n  return {\n    isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n    dashboardItems\n  };\n};\n\nconst mapDispatchToProps = {\n  acUpdateDashboardLayout\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n  const validItems = orArray(stateProps.dashboardItems).filter(hasShape);\n  return { ...dispatchProps,\n    edit: ownProps.edit,\n    isLoading: stateProps.isLoading,\n    dashboardItems: validItems,\n    onItemResize\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps, mergeProps)(ItemGrid);","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { colors } from '@dhis2/ui';\nconst styles = {\n  badgeContainer: {\n    margin: '2px',\n    padding: '0 16px',\n    borderRadius: '4px',\n    color: colors.white,\n    backgroundColor: '#212934',\n    height: 36,\n    display: 'flex',\n    alignItems: 'center'\n  },\n  badge: {\n    fontSize: '13px',\n    cursor: 'pointer',\n    whiteSpace: 'nowrap'\n  },\n  badgeRemove: {\n    fontSize: '12px',\n    textDecoration: 'underline',\n    marginLeft: '24px',\n    cursor: 'pointer'\n  }\n};\n\nclass FilterBadge extends Component {\n  onClick = id => () => this.props.onClick(id);\n  onRemove = id => () => this.props.onRemove(id);\n\n  render() {\n    const {\n      data\n    } = this.props;\n    return <div style={styles.badgeContainer}>\n                <span style={styles.badge} onClick={this.onClick(data.id)}>\n                    {`${data.name}: ${data.values.length > 1 ? i18n.t('{{count}} selected', {\n          count: data.values.length\n        }) : data.values[0].name}`}\n                </span>\n                <span style={styles.badgeRemove} onClick={this.onRemove(data.id)}>\n                    {i18n.t('Remove')}\n                </span>\n            </div>;\n  }\n\n}\n\nFilterBadge.propTypes = {\n  data: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired,\n  onRemove: PropTypes.func.isRequired\n};\nFilterBadge.defaultProps = {\n  onClick: Function.prototype,\n  onRemove: Function.prototype\n};\nexport default FilterBadge;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport FilterBadge from './FilterBadge';\nimport { sGetNamedItemFilters } from '../../reducers/itemFilters';\nimport { acRemoveItemFilter } from '../../actions/itemFilters';\nimport { acSetActiveModalDimension } from '../../actions/activeModalDimension';\nimport classes from './styles/FilterBar.module.css';\nexport class FilterBar extends Component {\n  onBadgeRemove = id => {\n    this.props.removeItemFilter(id);\n  };\n  onBadgeClick = id => {\n    this.props.setActiveModalDimension({\n      id,\n      name: this.props.filters.find(item => item.id === id).name\n    });\n  };\n\n  render() {\n    const {\n      filters\n    } = this.props;\n    return filters.length ? // the 3 is calculated so that the FilterBar has the same vertical position as the TitleBar in relation to the ControlBar\n    <div className={classes.bar} style={{\n      top: 3\n    }}>\n                {filters.map(filter => <FilterBadge key={filter.id} data={filter} onClick={this.onBadgeClick} onRemove={this.onBadgeRemove} />)}\n            </div> : null;\n  }\n\n}\nFilterBar.propTypes = {\n  filters: PropTypes.array.isRequired,\n  removeItemFilter: PropTypes.func.isRequired,\n  setActiveModalDimension: PropTypes.func\n};\nFilterBar.defaultProps = {\n  filters: [],\n  removeItemFIlter: Function.prototype\n};\n\nconst mapStateToProps = state => ({\n  filters: sGetNamedItemFilters(state)\n});\n\nexport default connect(mapStateToProps, {\n  setActiveModalDimension: acSetActiveModalDimension,\n  removeItemFilter: acRemoveItemFilter\n})(FilterBar);","export const SET_WINDOW_HEIGHT = 'SET_WINDOW_HEIGHT';\nexport const DEFAULT_STATE_WINDOW_HEIGHT = window.innerHeight;\nexport default ((state = DEFAULT_STATE_WINDOW_HEIGHT, action) => {\n  switch (action.type) {\n    case SET_WINDOW_HEIGHT:\n      {\n        return action.value;\n      }\n\n    default:\n      return state;\n  }\n});\nexport const sGetWindowHeight = state => state.windowHeight;","import { generateUid } from 'd2/uid';\nimport { SET_PRINT_DASHBOARD, CLEAR_PRINT_DASHBOARD, SET_PRINT_DASHBOARD_LAYOUT, ADD_PRINT_DASHBOARD_ITEM, REMOVE_PRINT_DASHBOARD_ITEM, UPDATE_PRINT_DASHBOARD_ITEM } from '../reducers/printDashboard';\nimport { NEW_ITEM_SHAPE, getGridItemProperties, getPageBreakItemShape, getPrintTitlePageItemShape } from '../components/ItemGrid/gridUtil';\nimport { itemTypeMap, PAGEBREAK } from '../modules/itemTypes'; // actions\n\nexport const acSetPrintDashboard = (dashboard, items) => {\n  const val = { ...dashboard,\n    dashboardItems: items\n  };\n  return {\n    type: SET_PRINT_DASHBOARD,\n    value: val\n  };\n};\nexport const acClearPrintDashboard = () => ({\n  type: CLEAR_PRINT_DASHBOARD\n});\nexport const acUpdatePrintDashboardLayout = value => ({\n  type: SET_PRINT_DASHBOARD_LAYOUT,\n  value\n});\nexport const acAddPrintDashboardItem = item => {\n  const type = item.type;\n  delete item.type;\n  const itemPropName = itemTypeMap[type].propName;\n  const id = generateUid();\n  const gridItemProperties = getGridItemProperties(id);\n  let shape;\n\n  if (type === PAGEBREAK) {\n    const yPos = item.yPos || 0;\n    shape = getPageBreakItemShape(yPos, item.isStatic);\n  } else {\n    shape = getPrintTitlePageItemShape(item.isOneItemPerPage);\n  }\n\n  return {\n    type: ADD_PRINT_DASHBOARD_ITEM,\n    value: {\n      id,\n      type,\n      position: item.position || null,\n      [itemPropName]: item.content,\n      ...NEW_ITEM_SHAPE,\n      ...gridItemProperties,\n      ...shape\n    }\n  };\n};\nexport const acRemovePrintDashboardItem = value => ({\n  type: REMOVE_PRINT_DASHBOARD_ITEM,\n  value\n});\nexport const acUpdatePrintDashboardItem = item => ({\n  type: UPDATE_PRINT_DASHBOARD_ITEM,\n  value: item\n});","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport TitleBar from '../TitleBar/TitleBar';\nimport ItemGrid from '../ItemGrid/ItemGrid';\nimport FilterBar from '../FilterBar/FilterBar';\nimport DashboardsBar from '../ControlBar/DashboardsBar';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport { sGetIsEditing } from '../../reducers/editDashboard';\nimport { sGetIsPrinting } from '../../reducers/printDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { sGetWindowHeight } from '../../reducers/windowHeight';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { acClearEditDashboard } from '../../actions/editDashboard';\nimport { acClearPrintDashboard } from '../../actions/printDashboard';\nimport { getControlBarHeight, HEADERBAR_HEIGHT } from '../ControlBar/controlBarDimensions';\nexport const ViewDashboard = props => {\n  useEffect(() => {\n    if (props.dashboardIsEditing) {\n      props.clearEditDashboard();\n    } else if (props.dashboardIsPrinting) {\n      props.clearPrintDashboard();\n    }\n  }, [props.dashboardIsEditing, props.dashboardIsPrinting]);\n  useEffect(() => {\n    document.querySelector('.dashboard-wrapper')?.scroll(0, 0);\n  }, [props.selectedId]);\n  const height = props.windowHeight - HEADERBAR_HEIGHT - getControlBarHeight(props.controlBarRows);\n  return <>\n            <DashboardsBar />\n            <DashboardVerticalOffset />\n            <div className=\"dashboard-wrapper\" style={{\n      height\n    }}>\n                <TitleBar edit={false} />\n                <FilterBar />\n                <ItemGrid edit={false} />\n            </div>\n        </>;\n};\nViewDashboard.propTypes = {\n  clearEditDashboard: PropTypes.func,\n  clearPrintDashboard: PropTypes.func,\n  controlBarRows: PropTypes.number,\n  dashboardIsEditing: PropTypes.bool,\n  dashboardIsPrinting: PropTypes.bool,\n  selectedId: PropTypes.string,\n  windowHeight: PropTypes.number\n};\n\nconst mapStateToProps = state => {\n  return {\n    dashboardIsEditing: sGetIsEditing(state),\n    dashboardIsPrinting: sGetIsPrinting(state),\n    controlBarRows: sGetControlBarUserRows(state),\n    selectedId: sGetSelectedId(state),\n    windowHeight: sGetWindowHeight(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  clearEditDashboard: acClearEditDashboard,\n  clearPrintDashboard: acClearPrintDashboard\n})(ViewDashboard);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Button, Modal, ModalContent, ModalActions, ButtonStrip, ModalTitle } from '@dhis2/ui';\nimport classes from './styles/ConfirmDeleteDialog.module.css';\nexport const ConfirmDeleteDialog = ({\n  dashboardName,\n  onDeleteConfirmed,\n  onContinueEditing,\n  open\n}) => {\n  const actions = [<Button key=\"cancel\" secondary onClick={onContinueEditing}>\n            {i18n.t('Cancel')}\n        </Button>, <Button key=\"delete\" destructive onClick={onDeleteConfirmed}>\n            {i18n.t('Delete')}\n        </Button>];\n  return open && <Modal onClose={onContinueEditing} small position=\"middle\">\n                <ModalTitle>{i18n.t('Delete dashboard')}</ModalTitle>\n                <ModalContent>\n                    <span className={classes.content}>\n                        {i18n.t('Deleting dashboard \"{{ dashboardName }}\" will remove it for all users. This action cannot be undone. Are you sure you want to permanently delete this dashboard?', {\n          dashboardName\n        })}\n                    </span>\n                </ModalContent>\n                <ModalActions>\n                    <ButtonStrip>{actions}</ButtonStrip>\n                </ModalActions>\n            </Modal>;\n};\nConfirmDeleteDialog.propTypes = {\n  dashboardName: PropTypes.string,\n  open: PropTypes.bool,\n  onContinueEditing: PropTypes.func,\n  onDeleteConfirmed: PropTypes.func\n};\nexport default ConfirmDeleteDialog;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport ControlBar from './ControlBar';\nimport TranslationDialog from '@dhis2/d2-ui-translation-dialog';\nimport { Button, ButtonStrip } from '@dhis2/ui';\nimport ConfirmDeleteDialog from './ConfirmDeleteDialog';\nimport { tSaveDashboard, acClearEditDashboard } from '../../actions/editDashboard';\nimport { acClearPrintDashboard } from '../../actions/printDashboard';\nimport { tDeleteDashboard, acSetDashboardDisplayName } from '../../actions/dashboards';\nimport { sGetEditDashboardRoot, sGetIsNewDashboard, sGetIsPrintPreviewView } from '../../reducers/editDashboard';\nimport { acSetPrintPreviewView, acClearPrintPreviewView } from '../../actions/editDashboard';\nimport { CONTROL_BAR_ROW_HEIGHT, MIN_ROW_COUNT, getControlBarHeight } from './controlBarDimensions';\nimport { apiFetchDashboard } from '../../api/dashboards';\nimport classes from './styles/DashboardsBar.module.css';\nconst buttonBarStyle = {\n  height: CONTROL_BAR_ROW_HEIGHT,\n  paddingTop: '15px',\n  marginLeft: '15px',\n  marginRight: '15px'\n};\nexport class EditBar extends Component {\n  state = {\n    translationDialogIsOpen: false,\n    dashboardModel: undefined,\n    confirmDeleteDialogOpen: false,\n    redirectUrl: undefined\n  };\n  onConfirmDelete = () => {\n    this.setState({\n      confirmDeleteDialogOpen: true\n    });\n  };\n  onSave = () => {\n    this.props.onSave().then(newId => {\n      this.setState({\n        redirectUrl: `/${newId}`\n      });\n    });\n  };\n  onPrintPreview = () => {\n    if (this.props.isPrintPreviewView) {\n      this.props.clearPrintPreview();\n      this.props.clearPrintDashboard();\n    } else {\n      this.props.showPrintPreview();\n    }\n  };\n  onDiscard = () => {\n    this.props.onDiscardChanges();\n    const redirectUrl = this.props.dashboardId ? `/${this.props.dashboardId}` : '/';\n    this.setState({\n      redirectUrl\n    });\n  };\n  onContinueEditing = () => {\n    this.setState({\n      confirmDeleteDialogOpen: false\n    });\n  };\n  onDeleteConfirmed = () => {\n    this.setState({\n      confirmDeleteDialogOpen: false\n    });\n    this.props.onDelete(this.props.dashboardId).then(() => {\n      this.setState({\n        redirectUrl: '/'\n      });\n    });\n  };\n  onTranslationsSaved = async translations => {\n    if (translations && translations.length) {\n      const dbLocale = await this.context.d2.currentUser.userSettings.get('keyDbLocale');\n      const translation = translations.find(t => t.locale === dbLocale && t.property === 'NAME');\n\n      if (translation && translation.value) {\n        this.props.onTranslate(this.props.dashboardId, translation.value);\n      }\n    }\n  };\n  fetchDashboardModel = () => {\n    if (this.props.dashboardId && !this.state.dashboardModel) {\n      apiFetchDashboard(this.props.dashboardId).then(dashboardModel => this.setState({\n        dashboardModel\n      }));\n    }\n  };\n\n  componentDidMount() {\n    this.fetchDashboardModel();\n  }\n\n  componentDidUpdate() {\n    this.fetchDashboardModel();\n  }\n\n  toggleTranslationDialog = () => {\n    this.setState({\n      translationDialogIsOpen: !this.state.translationDialogIsOpen\n    });\n  };\n  confirmDeleteDialog = () => this.props.deleteAccess && this.props.dashboardId ? <ConfirmDeleteDialog dashboardName={this.props.dashboardName} onDeleteConfirmed={this.onDeleteConfirmed} onContinueEditing={this.onContinueEditing} open={this.state.confirmDeleteDialogOpen} /> : null;\n  translationDialog = () => this.state.dashboardModel && this.state.dashboardModel.id ? <TranslationDialog className=\"translation-dialog\" d2={this.context.d2} open={this.state.translationDialogIsOpen} onRequestClose={this.toggleTranslationDialog} objectToTranslate={this.state.dashboardModel} fieldsToTranslate={['name', 'description']} onTranslationSaved={this.onTranslationsSaved} onTranslationError={err => console.log('translation update error', err)} /> : null;\n  renderActionButtons = () => {\n    const printPreviewText = this.props.isPrintPreviewView ? i18n.t('Exit Print preview') : i18n.t('Print preview');\n    return <div className={classes.leftControls}>\n                <ButtonStrip>\n                    <Button primary onClick={this.onSave}>\n                        {i18n.t('Save changes')}\n                    </Button>\n                    <Button onClick={this.onPrintPreview}>\n                        {printPreviewText}\n                    </Button>\n\n                    {this.props.dashboardId ? <Button onClick={this.toggleTranslationDialog}>\n                            {i18n.t('Translate')}\n                        </Button> : null}\n                    {this.props.dashboardId && this.props.deleteAccess ? <Button onClick={this.onConfirmDelete}>\n                            {i18n.t('Delete')}\n                        </Button> : null}\n                </ButtonStrip>\n            </div>;\n  };\n\n  render() {\n    if (this.state.redirectUrl) {\n      return <Redirect to={this.state.redirectUrl} />;\n    }\n\n    const {\n      updateAccess\n    } = this.props;\n    const controlBarHeight = getControlBarHeight(MIN_ROW_COUNT);\n    const discardBtnText = updateAccess ? i18n.t('Exit without saving') : i18n.t('Go to dashboards');\n    return <>\n                <ControlBar height={controlBarHeight} editMode={true}>\n                    <div style={buttonBarStyle}>\n                        {updateAccess ? this.renderActionButtons() : null}\n\n                        <div className={classes.rightControls}>\n                            <Button secondary onClick={this.onDiscard}>\n                                {discardBtnText}\n                            </Button>\n                        </div>\n                    </div>\n                </ControlBar>\n                <div className={classes.topMargin} />\n                {this.translationDialog()}\n                {this.confirmDeleteDialog()}\n            </>;\n  }\n\n}\nEditBar.propTypes = {\n  clearPrintDashboard: PropTypes.func,\n  clearPrintPreview: PropTypes.func,\n  dashboardId: PropTypes.string,\n  dashboardName: PropTypes.string,\n  deleteAccess: PropTypes.bool,\n  isPrintPreviewView: PropTypes.bool,\n  showPrintPreview: PropTypes.func,\n  updateAccess: PropTypes.bool,\n  onDelete: PropTypes.func,\n  onDiscardChanges: PropTypes.func,\n  onSave: PropTypes.func,\n  onTranslate: PropTypes.func\n};\nEditBar.contextTypes = {\n  d2: PropTypes.object\n};\n\nconst mapStateToProps = state => {\n  const dashboard = sGetEditDashboardRoot(state);\n  let deleteAccess;\n  let updateAccess;\n\n  if (sGetIsNewDashboard(state)) {\n    deleteAccess = true;\n    updateAccess = true;\n  } else {\n    updateAccess = dashboard.access ? dashboard.access.update : false;\n    deleteAccess = dashboard.access ? dashboard.access.delete : false;\n  }\n\n  return {\n    dashboardId: dashboard.id,\n    dashboardName: dashboard.name,\n    deleteAccess,\n    isPrintPreviewView: sGetIsPrintPreviewView(state),\n    updateAccess\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  clearPrintDashboard: () => dispatch(acClearPrintDashboard()),\n  clearPrintPreview: () => dispatch(acClearPrintPreviewView()),\n  onSave: () => dispatch(tSaveDashboard()).then(id => id),\n  onDelete: id => dispatch(tDeleteDashboard(id)),\n  onDiscardChanges: () => dispatch(acClearEditDashboard()),\n  onTranslate: (id, value) => dispatch(acSetDashboardDisplayName(id, value)),\n  showPrintPreview: () => dispatch(acSetPrintPreviewView())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditBar);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { a4LandscapeWidthPx } from '../ItemGrid/gridUtil';\nimport classes from './styles/PrintInfo.module.css';\n\nconst PrintInfo = ({\n  isLayout\n}) => {\n  const maxWidth = a4LandscapeWidthPx < window.innerWidth ? a4LandscapeWidthPx : window.innerWidth;\n  const infoHeader = isLayout ? i18n.t('dashboard layout') : i18n.t('one item per page');\n  return <div className={classes.infoWrapper}>\n            <p className={classes.infoHeader}>\n                {`${i18n.t('Print Preview')}: ${infoHeader}`}\n            </p>\n            <div style={{\n      maxWidth\n    }}>\n                <p className={classes.info}>\n                    {`${i18n.t('For best print results')}:`}\n                </p>\n                <div className={classes.info}>\n                    <ul className={classes.infoList}>\n                        <li>{i18n.t('Use Chrome or Edge web browser')}</li>\n                        <li>\n                            {i18n.t('Wait for all dashboard items to load before printing')}\n                        </li>\n                        <li>\n                            {i18n.t('Use A4 landscape paper size and default margin settings in the browser print dialog')}\n                        </li>\n                    </ul>\n                </div>\n            </div>\n            <hr className={classes.divider} />\n        </div>;\n};\n\nPrintInfo.propTypes = {\n  isLayout: PropTypes.bool\n};\nexport default PrintInfo;","import React from 'react';\nimport { colors } from '@dhis2/ui';\n\nconst LessHorizontalIcon = () => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill={colors.grey600} viewBox=\"0 0 24 24\">\n        <path d=\"m13.2928932 6.29289322c.3905243-.39052429 1.0236893-.39052429 1.4142136 0 .3604839.36048396.3882135.92771502.0831886 1.32000622l-.0831886.09420734-4.2921068 4.29289322 4.2921068 4.2928932c.3604839.360484.3882135.927715.0831886 1.3200062l-.0831886.0942074c-.360484.3604839-.927715.3882135-1.3200062.0831886l-.0942074-.0831886-4.99999998-5c-.36048396-.360484-.3882135-.927715-.08318861-1.3200062l.08318861-.0942074z\" />\n    </svg>;\n\nexport default LessHorizontalIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Button } from '@dhis2/ui';\nimport { Link } from 'react-router-dom';\nimport LessHorizontalIcon from '../../icons/LessHorizontal';\nimport { a4LandscapeWidthPx } from '../ItemGrid/gridUtil';\nimport classes from './styles/PrintActionsBar.module.css'; // 42px set in the module css file\n\nexport const PRINT_ACTIONS_BAR_HEIGHT = 42;\n\nconst PrintActionsBar = ({\n  id\n}) => {\n  const width = a4LandscapeWidthPx < window.innerWidth ? a4LandscapeWidthPx : window.innerWidth;\n  return <>\n            <div className={classes.container}>\n                <div className={classes.inner} style={{\n        width\n      }}>\n                    <Link className={classes.link} to={`/${id}`}>\n                        <Button>\n                            <LessHorizontalIcon />\n                            {i18n.t('Exit print preview')}\n                        </Button>\n                    </Link>\n                    <Button onClick={window.print}>{i18n.t('Print')}</Button>\n                </div>\n            </div>\n            <div className={classes.topMargin} />\n        </>;\n};\n\nPrintActionsBar.propTypes = {\n  id: PropTypes.string\n};\nexport default PrintActionsBar;","import sortBy from 'lodash/sortBy';\nimport { orArray } from './util';\nimport { itemTypeMap } from './itemTypes';\nexport const getTransformYPx = elStyle => {\n  if (!elStyle || !elStyle.transform) {\n    return null;\n  } // find valid transforms - those with y pixels\n  // the code is expecting the transform prop to\n  // look like:  translate(10px, 300px)\n\n\n  const transformY = elStyle.transform.split(' ')[1]?.match(/(\\d+)px/);\n\n  if (transformY) {\n    return parseInt(transformY[1]);\n  } else {\n    return null;\n  }\n};\nexport const getDomGridItemsSortedByYPos = elements => {\n  const types = Object.keys(itemTypeMap);\n  const elementsWithBoundingRect = orArray(elements).map(el => {\n    const type = Array.from(el.classList).find(className => types.indexOf(className) > -1);\n    const rect = el.getBoundingClientRect();\n    const y = getTransformYPx(el.style) || parseInt(rect.y);\n    return {\n      type,\n      classList: el.classList,\n      bottomY: y + parseInt(rect.height),\n      el\n    };\n  });\n  return sortBy(elementsWithBoundingRect, ['bottomY']);\n};","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport sortBy from 'lodash/sortBy';\nimport ReactGridLayout from 'react-grid-layout';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport cx from 'classnames';\nimport { Item } from '../Item/Item';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport { acUpdatePrintDashboardLayout } from '../../actions/printDashboard';\nimport { sGetSelectedIsLoading } from '../../reducers/selected';\nimport { sGetPrintDashboardRoot, sGetPrintDashboardItems } from '../../reducers/printDashboard';\nimport { sGetIsEditing } from '../../reducers/editDashboard';\nimport { GRID_ROW_HEIGHT, GRID_COMPACT_TYPE, MARGIN, getGridColumns, hasShape, a4LandscapeWidthPx } from './gridUtil';\nimport { getDomGridItemsSortedByYPos, getTransformYPx } from '../../modules/printUtils';\nimport { PRINT_LAYOUT } from '../Dashboard/dashboardModes';\nimport { PAGEBREAK } from '../../modules/itemTypes';\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\nimport './ItemGrid.css'; // this is set in the .dashboard-item-content css\n\nexport const ITEM_CONTENT_PADDING_BOTTOM = 4;\nexport class PrintLayoutItemGrid extends Component {\n  onLayoutChange = newLayout => {\n    this.props.updateDashboardLayout(newLayout);\n  };\n  isFirstPageBreak = item => {\n    if (item.type !== PAGEBREAK) {\n      return false;\n    }\n\n    const pageBreaks = this.props.dashboardItems.filter(i => i.type === PAGEBREAK);\n    const sortedPageBreaks = sortBy(pageBreaks, ['y']);\n    return item.y === sortedPageBreaks[0].y;\n  };\n  getItemComponent = item => {\n    // the first-page-break class is used in Edit print preview\n    const itemClassNames = cx('print', 'layout', `${item.type}`, {\n      'first-page-break': this.props.isEditing && this.isFirstPageBreak(item),\n      shortened: !!item.shortened\n    });\n    return <div key={item.i} className={itemClassNames}>\n                <Item item={item} dashboardMode={PRINT_LAYOUT} />\n            </div>;\n  };\n  getItemComponents = items => items.map(item => this.getItemComponent(item));\n\n  hideExtraPageBreaks() {\n    const sortedElements = getDomGridItemsSortedByYPos(Array.from(document.querySelectorAll('.react-grid-item')));\n    let pageBreakBottom = 0;\n    let lastItemBottom = 0;\n    let foundNonPageBreak = false;\n\n    for (let i = sortedElements.length - 1; i >= 0; --i) {\n      const item = sortedElements[i];\n\n      if (item.type === PAGEBREAK) {\n        if (!foundNonPageBreak) {\n          item.el.classList.add('removed');\n        } else {\n          pageBreakBottom = item.bottomY;\n          break;\n        }\n      } else {\n        foundNonPageBreak = true;\n        const thisItemBottom = item.bottomY;\n\n        if (thisItemBottom > lastItemBottom) {\n          lastItemBottom = thisItemBottom;\n        }\n      }\n    }\n\n    const pageHeight = 720;\n    const gridElement = document.querySelector('.react-grid-layout'); // the last page break is before the last item(s) so\n    // maxHeight is one page beyond the last page break\n\n    const maxHeight = pageBreakBottom + pageHeight;\n\n    if (gridElement) {\n      gridElement.style.height = `${maxHeight}px`;\n    }\n\n    if (this.props.isEditing) {\n      //scroll to below the title page - which is middle of the first pagebreak\n      const firstBreak = document.querySelector('.first-page-break');\n\n      if (firstBreak && firstBreak.style && firstBreak.style.transform) {\n        const yPos = getTransformYPx(firstBreak.style);\n        const scrollArea = document.querySelector('.scroll-area');\n        scrollArea && scrollArea.scroll(0, yPos + 50);\n      }\n    }\n  }\n\n  componentDidMount() {\n    this.hideExtraPageBreaks();\n  }\n\n  componentDidUpdate() {\n    this.hideExtraPageBreaks();\n  }\n\n  render() {\n    const {\n      isLoading,\n      dashboardItems\n    } = this.props;\n\n    if (!isLoading && !dashboardItems.length) {\n      return <NoContentMessage text={i18n.t('There are no items on this dashboard')} />;\n    }\n\n    const width = a4LandscapeWidthPx < window.innerWidth ? a4LandscapeWidthPx : window.innerWidth;\n    return <div className=\"grid-wrapper\">\n                {isLoading ? <Layer translucent>\n                        <CenteredContent>\n                            <CircularLoader />\n                        </CenteredContent>\n                    </Layer> : null}\n                <ReactGridLayout onLayoutChange={this.onLayoutChange} className=\"layout\" layout={dashboardItems} margin={MARGIN} cols={getGridColumns()} rowHeight={GRID_ROW_HEIGHT} width={width} compactType={GRID_COMPACT_TYPE} isDraggable={false} isResizable={false} draggableCancel=\"input,textarea\">\n                    {this.getItemComponents(dashboardItems)}\n                </ReactGridLayout>\n            </div>;\n  }\n\n}\nPrintLayoutItemGrid.propTypes = {\n  dashboardItems: PropTypes.array,\n  isEditing: PropTypes.bool,\n  isLoading: PropTypes.bool,\n  updateDashboardLayout: PropTypes.func\n};\nPrintLayoutItemGrid.defaultProps = {\n  dashboardItems: []\n};\n\nconst mapStateToProps = state => {\n  const selectedDashboard = sGetPrintDashboardRoot(state);\n  return {\n    isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n    dashboardItems: sGetPrintDashboardItems(state).filter(hasShape),\n    isEditing: sGetIsEditing(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  updateDashboardLayout: acUpdatePrintDashboardLayout\n})(PrintLayoutItemGrid);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { spacers } from '@dhis2/ui';\nimport cx from 'classnames';\nimport PrintInfo from './PrintInfo';\nimport PrintActionsBar from './PrintActionsBar';\nimport PrintLayoutItemGrid from '../ItemGrid/PrintLayoutItemGrid';\nimport { acSetPrintDashboard, acAddPrintDashboardItem, acUpdatePrintDashboardItem } from '../../actions/printDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { sGetWindowHeight } from '../../reducers/windowHeight';\nimport { sGetEditDashboardRoot, sGetEditDashboardItems } from '../../reducers/editDashboard';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport { PAGEBREAK, PRINT_TITLE_PAGE } from '../../modules/itemTypes';\nimport { a4LandscapeWidthPx, MAX_ITEM_GRID_HEIGHT } from '../ItemGrid/gridUtil';\nimport { getControlBarHeight, HEADERBAR_HEIGHT } from '../ControlBar/controlBarDimensions';\nimport { PRINT_ACTIONS_BAR_HEIGHT } from './PrintActionsBar';\nimport { DRAG_HANDLE_HEIGHT } from '../ControlBar/ControlBar';\nimport classes from './styles/PrintLayoutDashboard.module.css';\nimport './styles/print.css';\nimport './styles/print-layout.css';\nconst EDIT_BAR_HEIGHT = getControlBarHeight(1) + DRAG_HANDLE_HEIGHT;\n\nconst isLeapPage = n => {\n  // pages 5,9,13,17,21,25,29... are leap pages\n  let x = 0;\n  const startPage = 1;\n\n  const getMultiple = factor => startPage + 4 * factor;\n\n  let multiple = getMultiple(0);\n  let isLeapPage = false;\n\n  while (multiple < n) {\n    multiple = getMultiple(x);\n    ++x;\n\n    if (multiple === n) {\n      isLeapPage = true;\n      break;\n    }\n  }\n\n  return isLeapPage;\n};\n\nconst addPageBreaks = ({\n  items,\n  addDashboardItem\n}) => {\n  // add enough page breaks so that each item could\n  // be put on its own page. Due to the react-grid-layout\n  // unit system, we have to estimate roughly the size of each\n  // page. At regular intervals add a unit, like a leap year\n  let yPos = 0;\n  const yPosList = [];\n\n  for (let pageNum = 1; pageNum <= items.length; ++pageNum) {\n    if (pageNum === 1) {\n      yPos += 35;\n    } else if (isLeapPage(pageNum)) {\n      yPos += 40;\n    } else {\n      yPos += 39;\n    }\n\n    yPosList.push(yPos);\n  }\n\n  for (let i = 0; i < items.length; ++i) {\n    addDashboardItem({\n      type: PAGEBREAK,\n      yPos: yPosList[i]\n    });\n  }\n};\n\nexport class PrintLayoutDashboard extends Component {\n  state = {\n    initialized: false\n  };\n  initPrintLayoutDashboard = () => {\n    if (this.props.dashboard) {\n      this.setState({\n        initialized: true\n      });\n      this.props.setPrintDashboard(this.props.dashboard, this.props.items); // If any items are taller than one page, reduce it to one\n      // page (react-grid-layout units)\n\n      this.props.items.forEach(item => {\n        if (item.h > MAX_ITEM_GRID_HEIGHT) {\n          item.shortened = true;\n          this.props.updateDashboardItem(Object.assign({}, item, {\n            h: MAX_ITEM_GRID_HEIGHT\n          }));\n        }\n      });\n      addPageBreaks(this.props);\n      this.props.addDashboardItem({\n        type: PRINT_TITLE_PAGE,\n        isOneItemPerPage: false\n      });\n    }\n  };\n\n  componentDidMount() {\n    this.initPrintLayoutDashboard();\n  }\n\n  componentDidUpdate() {\n    if (!this.state.initialized) {\n      this.initPrintLayoutDashboard();\n    }\n  }\n\n  getWrapperStyle = () => {\n    return this.props.fromEdit ? {\n      paddingTop: spacers.dp24,\n      height: this.props.windowHeight - EDIT_BAR_HEIGHT - HEADERBAR_HEIGHT\n    } : {\n      height: this.props.windowHeight - PRINT_ACTIONS_BAR_HEIGHT\n    };\n  };\n\n  render() {\n    return <>\n                {!this.props.fromEdit && <PrintActionsBar id={this.props.dashboard.id} />}\n                <div className={cx(classes.wrapper, 'scroll-area')} style={this.getWrapperStyle()}>\n                    {!this.props.fromEdit && <PrintInfo isLayout={true} />}\n                    <div className={classes.pageOuter} style={{\n          width: a4LandscapeWidthPx\n        }}>\n                        <PrintLayoutItemGrid />\n                    </div>\n                </div>\n            </>;\n  }\n\n}\nPrintLayoutDashboard.propTypes = {\n  addDashboardItem: PropTypes.func,\n  dashboard: PropTypes.object,\n  fromEdit: PropTypes.bool,\n  items: PropTypes.array,\n  setPrintDashboard: PropTypes.func,\n  updateDashboardItem: PropTypes.func,\n  windowHeight: PropTypes.number\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const id = sGetSelectedId(state);\n\n  if (ownProps.fromEdit) {\n    const dashboard = sGetEditDashboardRoot(state);\n    return {\n      dashboard,\n      id,\n      items: sGetEditDashboardItems(state),\n      windowHeight: sGetWindowHeight(state)\n    };\n  }\n\n  const dashboard = id ? sGetDashboardById(state, id) : null;\n  return {\n    dashboard,\n    id,\n    items: sGetDashboardItems(state),\n    windowHeight: sGetWindowHeight(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setPrintDashboard: acSetPrintDashboard,\n  addDashboardItem: acAddPrintDashboardItem,\n  updateDashboardItem: acUpdatePrintDashboardItem\n})(PrintLayoutDashboard);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport TitleBar from '../TitleBar/TitleBar';\nimport ItemGrid from '../ItemGrid/ItemGrid';\nimport EditBar from '../ControlBar/EditBar';\nimport LayoutPrintPreview from './PrintLayoutDashboard';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport { acSetEditDashboard } from '../../actions/editDashboard';\nimport { sGetWindowHeight } from '../../reducers/windowHeight';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport { sGetIsPrintPreviewView } from '../../reducers/editDashboard';\nimport { getControlBarHeight, HEADERBAR_HEIGHT } from '../ControlBar/controlBarDimensions';\nexport class EditDashboard extends Component {\n  state = {\n    initialized: false\n  };\n  initEditDashboard = () => {\n    if (this.props.dashboard) {\n      this.setState({\n        initialized: true\n      });\n      this.props.setEditDashboard(this.props.dashboard, this.props.items);\n    }\n  };\n\n  componentDidMount() {\n    this.initEditDashboard();\n  }\n\n  componentDidUpdate() {\n    if (!this.state.initialized) {\n      this.initEditDashboard();\n    }\n  }\n\n  renderGrid = () => {\n    if (this.props.isPrintPreviewView) {\n      return <LayoutPrintPreview fromEdit={true} />;\n    }\n\n    const height = this.props.windowHeight - HEADERBAR_HEIGHT - getControlBarHeight(1);\n    return <div className=\"dashboard-wrapper\" style={{\n      height\n    }}>\n                <TitleBar edit={true} />\n                <ItemGrid edit={true} />\n            </div>;\n  };\n\n  render() {\n    return <>\n                <EditBar />\n                {this.props.updateAccess ? this.renderGrid() : <NoContentMessage text={i18n.t('No access')} />}\n            </>;\n  }\n\n}\nEditDashboard.propTypes = {\n  dashboard: PropTypes.object,\n  isPrintPreviewView: PropTypes.bool,\n  items: PropTypes.array,\n  setEditDashboard: PropTypes.func,\n  updateAccess: PropTypes.bool,\n  windowHeight: PropTypes.number\n};\n\nconst mapStateToProps = state => {\n  const id = sGetSelectedId(state);\n  const dashboard = id ? sGetDashboardById(state, id) : null;\n  const updateAccess = dashboard && dashboard.access ? dashboard.access.update : false;\n  return {\n    dashboard,\n    updateAccess,\n    items: sGetDashboardItems(state),\n    isPrintPreviewView: sGetIsPrintPreviewView(state),\n    windowHeight: sGetWindowHeight(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setEditDashboard: acSetEditDashboard\n})(EditDashboard);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport EditBar from '../ControlBar/EditBar';\nimport TitleBar from '../TitleBar/TitleBar';\nimport ItemGrid from '../ItemGrid/ItemGrid';\nimport LayoutPrintPreview from './PrintLayoutDashboard';\nimport { acSetEditNewDashboard } from '../../actions/editDashboard';\nimport { sGetIsPrintPreviewView } from '../../reducers/editDashboard';\nimport { sGetWindowHeight } from '../../reducers/windowHeight';\nimport { getControlBarHeight, HEADERBAR_HEIGHT } from '../ControlBar/controlBarDimensions';\n\nclass NewDashboard extends Component {\n  componentDidMount() {\n    this.props.setNewDashboard();\n  }\n\n  render() {\n    const height = this.props.windowHeight - HEADERBAR_HEIGHT - getControlBarHeight(1);\n    return <>\n                <EditBar />\n                {this.props.isPrintPreviewView ? <LayoutPrintPreview fromEdit={true} /> : <div className=\"dashboard-wrapper\" style={{\n        height\n      }}>\n                        <TitleBar edit={true} />\n                        <ItemGrid edit={true} />\n                    </div>}\n            </>;\n  }\n\n}\n\nNewDashboard.propTypes = {\n  isPrintPreviewView: PropTypes.bool,\n  setNewDashboard: PropTypes.func,\n  windowHeight: PropTypes.number\n};\n\nconst mapStateToProps = state => ({\n  isPrintPreviewView: sGetIsPrintPreviewView(state),\n  windowHeight: sGetWindowHeight(state)\n});\n\nexport default connect(mapStateToProps, {\n  setNewDashboard: acSetEditNewDashboard\n})(NewDashboard);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ReactGridLayout from 'react-grid-layout';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport cx from 'classnames';\nimport { Item } from '../Item/Item';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport { PRINT } from '../Dashboard/dashboardModes';\nimport { sGetSelectedIsLoading } from '../../reducers/selected';\nimport { sGetPrintDashboardRoot, sGetPrintDashboardItems } from '../../reducers/printDashboard';\nimport { GRID_ROW_HEIGHT, GRID_COMPACT_TYPE, MARGIN, getGridColumns, hasShape, a4LandscapeWidthPx } from './gridUtil';\nimport { orArray } from '../../modules/util';\nimport 'react-grid-layout/css/styles.css';\nimport './ItemGrid.css';\nexport class PrintItemGrid extends Component {\n  getItemComponent = item => <div key={item.i} className={cx(item.type, 'print', 'oipp')}>\n            <Item item={item} dashboardMode={PRINT} />\n        </div>;\n  getItemComponents = items => items.map(item => this.getItemComponent(item));\n\n  render() {\n    const {\n      isLoading,\n      dashboardItems\n    } = this.props;\n\n    if (!isLoading && !dashboardItems.length) {\n      return <NoContentMessage text={i18n.t('There are no items on this dashboard')} />;\n    }\n\n    const width = a4LandscapeWidthPx < window.innerWidth ? a4LandscapeWidthPx : window.innerWidth;\n    return <>\n                {isLoading ? <Layer translucent>\n                        <CenteredContent>\n                            <CircularLoader />\n                        </CenteredContent>\n                    </Layer> : null}\n                <ReactGridLayout className=\"layout print\" layout={dashboardItems} margin={MARGIN} cols={getGridColumns()} rowHeight={GRID_ROW_HEIGHT} width={width} compactType={GRID_COMPACT_TYPE} isDraggable={false} isResizable={false} draggableCancel=\"input,textarea\">\n                    {this.getItemComponents(dashboardItems)}\n                </ReactGridLayout>\n            </>;\n  }\n\n}\nPrintItemGrid.propTypes = {\n  dashboardItems: PropTypes.array,\n  isLoading: PropTypes.bool\n};\nPrintItemGrid.defaultProps = {\n  dashboardItems: []\n};\n\nconst mapStateToProps = state => {\n  const selectedDashboard = sGetPrintDashboardRoot(state);\n  return {\n    isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n    dashboardItems: orArray(sGetPrintDashboardItems(state)).filter(hasShape)\n  };\n};\n\nexport default connect(mapStateToProps)(PrintItemGrid);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport sortBy from 'lodash/sortBy';\nimport PrintInfo from './PrintInfo';\nimport PrintActionsBar from './PrintActionsBar';\nimport PrintItemGrid from '../ItemGrid/PrintItemGrid';\nimport { acSetPrintDashboard, acAddPrintDashboardItem, acRemovePrintDashboardItem, acUpdatePrintDashboardItem } from '../../actions/printDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { sGetWindowHeight } from '../../reducers/windowHeight';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport { PAGEBREAK, PRINT_TITLE_PAGE, SPACER } from '../../modules/itemTypes';\nimport { a4LandscapeWidthPx, MAX_ITEM_GRID_HEIGHT_OIPP, MAX_ITEM_GRID_WIDTH_OIPP } from '../ItemGrid/gridUtil';\nimport { PRINT_ACTIONS_BAR_HEIGHT } from './PrintActionsBar';\nimport classes from './styles/PrintDashboard.module.css';\nimport './styles/print.css';\nimport './styles/print-oipp.css';\nexport class PrintDashboard extends Component {\n  state = {\n    initialized: false\n  };\n  initPrintDashboard = () => {\n    if (this.props.dashboard) {\n      this.setState({\n        initialized: true\n      }); //sort the items by Y pos so they print in order of top to bottom\n\n      const sortedItems = sortBy(this.props.items, ['y', 'x']);\n      this.props.setPrintDashboard(this.props.dashboard, sortedItems); // remove spacers - don't want empty pages\n\n      let spacerCount = 0;\n      this.props.items.forEach(item => {\n        if (item.type === SPACER) {\n          spacerCount += 1;\n          this.props.removeDashboardItem(item.id);\n        }\n      }); // Resize the items to the full page size\n\n      this.props.items.forEach(item => {\n        this.props.updateDashboardItem(Object.assign({}, item, {\n          w: MAX_ITEM_GRID_WIDTH_OIPP,\n          h: MAX_ITEM_GRID_HEIGHT_OIPP\n        }));\n      }); // insert page breaks into the document flow to create the \"pages\"\n      // when previewing the print\n\n      for (let i = 0; i < (this.props.items.length - spacerCount) * 2; i += 2) {\n        this.props.addDashboardItem({\n          type: PAGEBREAK,\n          position: i,\n          isStatic: false\n        });\n      }\n\n      this.props.addDashboardItem({\n        type: PRINT_TITLE_PAGE,\n        isOneItemPerPage: true\n      });\n    }\n  };\n\n  componentDidMount() {\n    this.initPrintDashboard();\n  }\n\n  componentDidUpdate() {\n    if (!this.state.initialized) {\n      this.initPrintDashboard();\n    }\n  }\n\n  render() {\n    const height = this.props.windowHeight - PRINT_ACTIONS_BAR_HEIGHT;\n    return <>\n                <PrintActionsBar id={this.props.dashboard.id} />\n                <div className={classes.wrapper} style={{\n        height\n      }}>\n                    <PrintInfo isLayout={false} />\n                    <div className={classes.pageOuter} style={{\n          width: a4LandscapeWidthPx\n        }}>\n                        <PrintItemGrid />\n                    </div>\n                </div>\n            </>;\n  }\n\n}\nPrintDashboard.propTypes = {\n  addDashboardItem: PropTypes.func,\n  dashboard: PropTypes.object,\n  items: PropTypes.array,\n  removeDashboardItem: PropTypes.func,\n  setPrintDashboard: PropTypes.func,\n  updateDashboardItem: PropTypes.func,\n  windowHeight: PropTypes.number\n};\n\nconst mapStateToProps = state => {\n  const id = sGetSelectedId(state);\n  const dashboard = id ? sGetDashboardById(state, id) : null;\n  return {\n    dashboard,\n    id,\n    items: sGetDashboardItems(state),\n    windowHeight: sGetWindowHeight(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setPrintDashboard: acSetPrintDashboard,\n  addDashboardItem: acAddPrintDashboardItem,\n  removeDashboardItem: acRemovePrintDashboardItem,\n  updateDashboardItem: acUpdatePrintDashboardItem\n})(PrintDashboard);","import { SET_WINDOW_HEIGHT } from '../reducers/windowHeight';\nexport const acSetWindowHeight = value => ({\n  type: SET_WINDOW_HEIGHT,\n  value\n});","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport isEmpty from 'lodash/isEmpty';\nimport i18n from '@dhis2/d2-i18n';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport debounce from 'lodash/debounce';\nimport DashboardsBar from '../ControlBar/DashboardsBar';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport ViewDashboard from './ViewDashboard';\nimport EditDashboard from './EditDashboard';\nimport NewDashboard from './NewDashboard';\nimport PrintDashboard from './PrintDashboard';\nimport PrintLayoutDashboard from './PrintLayoutDashboard';\nimport { tSelectDashboard } from '../../actions/dashboards';\nimport { acSetWindowHeight } from '../../actions/windowHeight';\nimport { sDashboardsIsFetching, sGetAllDashboards } from '../../reducers/dashboards';\nimport { sGetSelectedId, NON_EXISTING_DASHBOARD_ID } from '../../reducers/selected';\nimport { EDIT, NEW, VIEW, PRINT, PRINT_LAYOUT, isPrintMode } from './dashboardModes';\n\nconst setHeaderbarVisibility = mode => {\n  const header = document.getElementsByTagName('header')[0];\n\n  if (isPrintMode(mode)) {\n    header.classList.add('hidden');\n  } else {\n    header.classList.remove('hidden');\n  }\n};\n\nconst dashboardMap = {\n  [VIEW]: <ViewDashboard />,\n  [EDIT]: <EditDashboard />,\n  [NEW]: <NewDashboard />,\n  [PRINT]: <PrintDashboard />,\n  [PRINT_LAYOUT]: <PrintLayoutDashboard />\n};\nexport const Dashboard = ({\n  id,\n  mode,\n  dashboardsLoaded,\n  dashboardsIsEmpty,\n  routeId,\n  selectDashboard,\n  setWindowHeight\n}) => {\n  useEffect(() => {\n    setHeaderbarVisibility(mode);\n  }, [mode]);\n  useEffect(() => {\n    if (dashboardsLoaded && !dashboardsIsEmpty) {\n      selectDashboard(routeId);\n    }\n  }, [dashboardsLoaded, dashboardsIsEmpty, routeId]);\n  useEffect(() => {\n    const onResize = debounce(() => setWindowHeight(window.innerHeight), 300);\n    window.addEventListener('resize', onResize);\n    return () => {\n      window.removeEventListener('resize', onResize);\n    };\n  }, []);\n\n  if (!dashboardsLoaded || id === null) {\n    return <Layer translucent>\n                <CenteredContent>\n                    <CircularLoader />\n                </CenteredContent>\n            </Layer>;\n  }\n\n  if (mode === NEW) {\n    return dashboardMap[mode];\n  }\n\n  if (dashboardsIsEmpty) {\n    return <>\n                <DashboardsBar />\n                <DashboardVerticalOffset />\n                <NoContentMessage text={i18n.t('No dashboards found. Use the + button to create a new dashboard.')} />\n            </>;\n  }\n\n  if (id === NON_EXISTING_DASHBOARD_ID) {\n    return <>\n                <DashboardsBar />\n                <DashboardVerticalOffset />\n                <NoContentMessage text={i18n.t('Requested dashboard not found')} />\n            </>;\n  }\n\n  return dashboardMap[mode];\n};\nDashboard.propTypes = {\n  dashboardsIsEmpty: PropTypes.bool,\n  dashboardsLoaded: PropTypes.bool,\n  id: PropTypes.string,\n  match: PropTypes.object,\n  // provided by the react-router-dom\n  mode: PropTypes.string,\n  routeId: PropTypes.string,\n  selectDashboard: PropTypes.func,\n  setWindowHeight: PropTypes.func\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const dashboards = sGetAllDashboards(state);\n  return {\n    dashboardsIsEmpty: isEmpty(dashboards),\n    dashboardsLoaded: !sDashboardsIsFetching(state),\n    id: sGetSelectedId(state),\n    routeId: ownProps.match?.params?.dashboardId || null\n  };\n};\n\nexport default connect(mapStateToProps, {\n  selectDashboard: tSelectDashboard,\n  setWindowHeight: acSetWindowHeight\n})(Dashboard);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { AlertBar, AlertStack } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport { sGetAlertMessage } from '../../reducers/alert';\nimport { acClearAlertMessage } from '../../actions/alert';\nexport const Alert = ({\n  message,\n  onClose\n}) => message ? <AlertStack>\n            <AlertBar onHidden={onClose} permanent>\n                {message}\n            </AlertBar>\n        </AlertStack> : null;\nAlert.propTypes = {\n  message: PropTypes.string,\n  onClose: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  message: sGetAlertMessage(state)\n});\n\nexport default connect(mapStateToProps, {\n  onClose: acClearAlertMessage\n})(Alert);","import { RECEIVED_USER } from '../reducers/user';\nexport const acReceivedUser = value => ({\n  type: RECEIVED_USER,\n  value\n});","import { SET_DIMENSIONS } from '../reducers/dimensions';\nimport { apiFetchDimensions } from '@dhis2/analytics';\nimport { sGetSettingsDisplayNameProperty } from '../reducers/settings';\nexport const acSetDimensions = dimensions => ({\n  type: SET_DIMENSIONS,\n  value: dimensions\n});\nexport const tSetDimensions = d2 => async (dispatch, getState) => {\n  const onSuccess = dimensions => {\n    dispatch(acSetDimensions(dimensions));\n  };\n\n  const onError = error => {\n    console.log('Error (apiFetchDimensions): ', error);\n    return error;\n  };\n\n  try {\n    const displayNameProp = sGetSettingsDisplayNameProperty(getState());\n    const dimensions = await apiFetchDimensions(d2, displayNameProp); // filter out CATEGORY that are not of type ATTRIBUTE\n\n    const filteredDimensions = dimensions.filter(dim => dim.dimensionType !== 'CATEGORY' || dim.dimensionType === 'CATEGORY' && dim.dataDimensionType === 'ATTRIBUTE');\n    return onSuccess(filteredDimensions);\n  } catch (err) {\n    return onError(err);\n  }\n};","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { CssVariables } from '@dhis2/ui';\nimport Dashboard from './Dashboard/Dashboard';\nimport AlertBar from './AlertBar/AlertBar';\nimport { acReceivedUser } from '../actions/user';\nimport { tFetchDashboards } from '../actions/dashboards';\nimport { tSetControlBarRows } from '../actions/controlBar';\nimport { tSetShowDescription } from '../actions/selected';\nimport { tSetDimensions } from '../actions/dimensions';\nimport { EDIT, VIEW, NEW, PRINT, PRINT_LAYOUT } from './Dashboard/dashboardModes';\nimport './App.css';\nexport class App extends Component {\n  componentDidMount() {\n    this.props.setCurrentUser(this.props.d2.currentUser);\n    this.props.fetchDashboards();\n    this.props.setControlBarRows();\n    this.props.setShowDescription();\n    this.props.setDimensions(this.props.d2);\n  }\n\n  getChildContext() {\n    return {\n      baseUrl: this.props.baseUrl,\n      i18n,\n      d2: this.props.d2\n    };\n  }\n\n  render() {\n    return <>\n                <CssVariables colors spacers />\n                <Router>\n                    <Switch>\n                        <Route exact path=\"/\" render={props => <Dashboard {...props} mode={VIEW} />} />\n                        <Route exact path=\"/new\" render={props => <Dashboard {...props} mode={NEW} />} />\n                        <Route exact path=\"/:dashboardId\" render={props => <Dashboard {...props} mode={VIEW} />} />\n                        <Route exact path=\"/:dashboardId/edit\" render={props => <Dashboard {...props} mode={EDIT} />} />\n                        <Route exact path=\"/:dashboardId/printoipp\" render={props => <Dashboard {...props} mode={PRINT} />} />\n                        <Route exact path=\"/:dashboardId/printlayout\" render={props => <Dashboard {...props} mode={PRINT_LAYOUT} />} />\n                    </Switch>\n                </Router>\n                <AlertBar />\n            </>;\n  }\n\n}\nApp.propTypes = {\n  fetchDashboards: PropTypes.func.isRequired,\n  setControlBarRows: PropTypes.func.isRequired,\n  setCurrentUser: PropTypes.func.isRequired,\n  setDimensions: PropTypes.func.isRequired,\n  setShowDescription: PropTypes.func.isRequired,\n  baseUrl: PropTypes.string,\n  d2: PropTypes.object\n};\nApp.childContextTypes = {\n  baseUrl: PropTypes.string,\n  i18n: PropTypes.object,\n  d2: PropTypes.object\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchDashboards: () => dispatch(tFetchDashboards()),\n    setControlBarRows: () => dispatch(tSetControlBarRows()),\n    setCurrentUser: currentUser => dispatch(acReceivedUser(currentUser)),\n    setDimensions: d2 => dispatch(tSetDimensions(d2)),\n    setShowDescription: () => dispatch(tSetShowDescription())\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(App);","/** @module reducers/selected */\nimport { validateReducer } from '../modules/util';\nexport const SET_STYLE = 'SET_STYLE';\nexport const DEFAULT_STATE_STYLE = 'LIST';\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\n\nconst style = (state = DEFAULT_STATE_STYLE, action) => {\n  switch (action.type) {\n    case SET_STYLE:\n      return validateReducer(action.value, DEFAULT_STATE_STYLE);\n\n    default:\n      return state;\n  }\n};\n\nexport default style;\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\n\nexport const sGetStyleRoot = state => state.style;","import { combineReducers } from 'redux';\nimport arraySort from 'd2-utilizr/lib/arraySort';\nimport dashboards, { sGetDashboardsRoot } from './dashboards';\nimport selected from './selected';\nimport dashboardsFilter, { ownerData, sGetFilterName, sGetFilterOrder, sGetFilterOwner } from './dashboardsFilter';\nimport controlBar from './controlBar';\nimport visualizations from './visualizations';\nimport editDashboard from './editDashboard';\nimport printDashboard from './printDashboard';\nimport messages from './messages';\nimport user from './user';\nimport alert from './alert';\nimport itemFilters from './itemFilters';\nimport style from './style';\nimport dimensions from './dimensions';\nimport settings from './settings';\nimport activeModalDimension from './activeModalDimension';\nimport windowHeight from './windowHeight';\nconst USER = 'system'; // Reducers\n\nexport default combineReducers({\n  dashboards,\n  selected,\n  dashboardsFilter,\n  controlBar,\n  visualizations,\n  messages,\n  user,\n  editDashboard,\n  printDashboard,\n  itemFilters,\n  style,\n  alert,\n  dimensions,\n  settings,\n  activeModalDimension,\n  windowHeight\n}); // Map constants to data\n\nconst mapConstToData = {\n  NAME: 'name',\n  ITEMS: 'numberOfItems',\n  CREATED: 'created',\n  OWNER: 'owner'\n}; // Selectors\n// Filter dashboards by name\n\nexport const sFilterDashboardsByName = (dashboards, filter) => dashboards.filter(d => d.displayName.toLowerCase().includes(filter.toLowerCase())); // Filter dashboards by owner, TODO FIXME\n\nexport const sFilterDashboardsByOwner = (dashboards, filter) => {\n  const ME = ownerData[1]; // TODO\n\n  const OTHERS = ownerData[2]; // TODO\n\n  switch (filter) {\n    case ME:\n      return dashboards.filter(d => d.owner === USER);\n\n    case OTHERS:\n      return dashboards.filter(d => d.owner !== USER);\n\n    default:\n      return dashboards;\n  }\n}; // Filter dashboards by order\n\nexport const sFilterDashboardsByOrder = (dashboards, filter) => {\n  const filterValues = filter.split(':');\n  const key = filterValues[0];\n  const direction = filterValues[1];\n  return arraySort(dashboards, direction, mapConstToData[key]);\n}; // Selectors dependency level 2\n// Get filtered dashboards\n\nexport const sGetFilteredDashboards = state => {\n  const dashboards = sGetDashboardsRoot(state);\n  const nameFilter = sGetFilterName(state);\n  const ownerFilter = sGetFilterOwner(state);\n  const orderFilter = sGetFilterOrder(state);\n  return sFilterDashboardsByOrder(sFilterDashboardsByName(sFilterDashboardsByOwner(dashboards, ownerFilter), nameFilter), orderFilter);\n};","import { createStore, applyMiddleware, compose } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport reducer from './reducers';\n\nconst configureStore = () => {\n  const middleware = [thunk]; // Enable Redux devtools if extension is installed instead of redux-logger\n\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n  if (!window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ && process.env.NODE_ENV !== 'production') {\n    middleware.push(createLogger());\n  }\n\n  return createStore(reducer, composeEnhancers(applyMiddleware(...middleware)));\n};\n\nexport default configureStore;","//------------------------------------------------------------------------------\n// <auto-generated>\n// This code was generated by d2-i18n-generate.\n//\n// Changes to this file may cause incorrect behavior and will be lost if\n// the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\nimport i18n from '@dhis2/d2-i18n';\nimport arTranslations from './ar/translations.json';\nimport ar_IQTranslations from './ar_IQ/translations.json';\nimport daTranslations from './da/translations.json';\nimport enTranslations from './en/translations.json';\nimport esTranslations from './es/translations.json';\nimport frTranslations from './fr/translations.json';\nimport idTranslations from './id/translations.json';\nimport kmTranslations from './km/translations.json';\nimport loTranslations from './lo/translations.json';\nimport myTranslations from './my/translations.json';\nimport nbTranslations from './nb/translations.json';\nimport prsTranslations from './prs/translations.json';\nimport psTranslations from './ps/translations.json';\nimport ptTranslations from './pt/translations.json';\nimport pt_BRTranslations from './pt_BR/translations.json';\nimport ruTranslations from './ru/translations.json';\nimport svTranslations from './sv/translations.json';\nimport tetTranslations from './tet/translations.json';\nimport tgTranslations from './tg/translations.json';\nimport ukTranslations from './uk/translations.json';\nimport urTranslations from './ur/translations.json';\nimport uz_CyrlTranslations from './uz_Cyrl/translations.json';\nimport viTranslations from './vi/translations.json';\nimport zhTranslations from './zh/translations.json';\nimport zh_CNTranslations from './zh_CN/translations.json';\nconst namespace = 'default';\ni18n.addResources('ar', namespace, arTranslations);\ni18n.addResources('ar_IQ', namespace, ar_IQTranslations);\ni18n.addResources('da', namespace, daTranslations);\ni18n.addResources('en', namespace, enTranslations);\ni18n.addResources('es', namespace, esTranslations);\ni18n.addResources('fr', namespace, frTranslations);\ni18n.addResources('id', namespace, idTranslations);\ni18n.addResources('km', namespace, kmTranslations);\ni18n.addResources('lo', namespace, loTranslations);\ni18n.addResources('my', namespace, myTranslations);\ni18n.addResources('nb', namespace, nbTranslations);\ni18n.addResources('prs', namespace, prsTranslations);\ni18n.addResources('ps', namespace, psTranslations);\ni18n.addResources('pt', namespace, ptTranslations);\ni18n.addResources('pt_BR', namespace, pt_BRTranslations);\ni18n.addResources('ru', namespace, ruTranslations);\ni18n.addResources('sv', namespace, svTranslations);\ni18n.addResources('tet', namespace, tetTranslations);\ni18n.addResources('tg', namespace, tgTranslations);\ni18n.addResources('uk', namespace, ukTranslations);\ni18n.addResources('ur', namespace, urTranslations);\ni18n.addResources('uz_Cyrl', namespace, uz_CyrlTranslations);\ni18n.addResources('vi', namespace, viTranslations);\ni18n.addResources('zh', namespace, zhTranslations);\ni18n.addResources('zh_CN', namespace, zh_CNTranslations);\nexport default i18n;","import React from 'react';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport dhis2theme from '@dhis2/d2-ui-core/theme/mui3.theme';\nimport { Provider as ReduxProvider } from 'react-redux';\nimport { D2Shim } from '@dhis2/app-runtime-adapter-d2';\nimport App from './components/App';\nimport configureStore from './configureStore';\nimport './AppWrapper.css';\nimport './locales';\n\nconst muiTheme = () => createMuiTheme(dhis2theme);\n\nconst schemas = ['chart', 'map', 'report', 'reportTable', 'eventChart', 'eventReport', 'dashboard', 'organisationUnit', 'userGroup'];\nconst appConfig = {\n  schemas\n};\nconst authorization = process.env.REACT_APP_DHIS2_AUTHORIZATION || null; // TODO: ER and EV plugins require the auth header in development mode.\n// Remove this when these plugins are rewritten\n\nif (authorization) {\n  appConfig.headers = {\n    Authorization: authorization\n  };\n}\n\nconst AppWrapper = () => {\n  return <ReduxProvider store={configureStore()}>\n            <MuiThemeProvider theme={muiTheme()}>\n                <D2Shim appConfig={appConfig} i18nRoot=\"./i18n\">\n                    {({\n          d2\n        }) => {\n          if (!d2) {\n            // TODO: Handle errors in d2 initialization\n            return null;\n          }\n\n          return <App d2={d2} />;\n        }}\n                </D2Shim>\n            </MuiThemeProvider>\n        </ReduxProvider>;\n};\n\nexport default AppWrapper;","import isObject from 'lodash/isObject'; // validation\n\nexport function orNull(param) {\n  return param === undefined ? null : param;\n}\nexport function orArray(param) {\n  return Array.isArray(param) ? param : [];\n}\nexport function orObject(param) {\n  return isObject(param) ? param : {};\n} // array\n\nexport function arrayGetById(array, id) {\n  return array.find(item => item.id === id);\n} // object\n\nexport function arrayToIdMap(array) {\n  return array.reduce((obj, item) => {\n    obj[item.id] = item;\n    return obj;\n  }, {});\n} // date\n\nexport function getDate() {\n  const y = Math.floor(Math.random() * 3) + 2015;\n  const M = Math.floor(Math.random() * 12) + 1;\n  const d = Math.floor(Math.random() * 28) + 1; // const h = Math.floor(Math.random() * 23) + 1;\n  // const m = Math.floor(Math.random() * 59) + 1;\n  // const s = Math.floor(Math.random() * 59) + 1;\n\n  return new Date(`${y}-${M}-${d}`).toJSON().replace('T', ' ').substr(0, 10);\n}\nexport const formatDate = (value, uiLocale) => {\n  if (typeof global.Intl !== 'undefined' && Intl.DateTimeFormat) {\n    const locale = uiLocale || 'en';\n    return new Intl.DateTimeFormat(locale, {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    }).format(new Date(value));\n  }\n\n  return value.substr(0, 19).replace('T', ' ');\n};\n/**\n * Sorts an array of objects based on provided date property\n *\n * @param {Array} items Array of objects\n * @param {String} dateProp Name of the date property to be used for sorting\n * @param {Boolean} ascending Whether to sort ascending or descending\n */\n\nexport const sortByDate = (items, dateProp, ascending = true) => {\n  const values = Object.values(items);\n  values.sort((a, b) => {\n    const aDate = new Date(a[dateProp]);\n    const bDate = new Date(b[dateProp]);\n    return ascending ? aDate - bDate : bDate - aDate;\n  });\n  return values;\n}; // reducer validator\n\nexport const validateReducer = (value, defaultValue) => value === undefined || value === null ? defaultValue : value;\nexport const getBaseUrl = d2 => {\n  const api = d2.Api.getApi();\n  const idx = api.baseUrl.indexOf('/api');\n  return idx > -1 ? api.baseUrl.slice(0, idx) : api.baseUrl;\n};\nexport const getWithoutId = object => ({ ...object,\n  id: undefined\n});","import i18n from '@dhis2/d2-i18n';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\nimport ExtensionIcon from '@material-ui/icons/Extension';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport PersonIcon from '@material-ui/icons/Person';\nimport FontDownloadIcon from '@material-ui/icons/FontDownload';\nimport EmailIcon from '@material-ui/icons/Email';\nimport CropFreeIcon from '@material-ui/icons/CropFree';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\nimport { getBaseUrl } from './util'; // Item types\n\nexport const VISUALIZATION = 'VISUALIZATION';\nexport const REPORT_TABLE = 'REPORT_TABLE';\nexport const CHART = 'CHART';\nexport const MAP = 'MAP';\nexport const EVENT_REPORT = 'EVENT_REPORT';\nexport const EVENT_CHART = 'EVENT_CHART';\nexport const APP = 'APP';\nexport const REPORTS = 'REPORTS';\nexport const RESOURCES = 'RESOURCES';\nexport const USERS = 'USERS';\nexport const MESSAGES = 'MESSAGES';\nexport const TEXT = 'TEXT';\nexport const SPACER = 'SPACER';\nexport const PAGEBREAK = 'PAGEBREAK';\nexport const PRINT_TITLE_PAGE = 'PRINT_TITLE_PAGE';\nconst DOMAIN_TYPE_AGGREGATE = 'AGGREGATE';\nconst DOMAIN_TYPE_TRACKER = 'TRACKER'; // Dashboard helpers\n\nexport const isVisualizationType = item => !!itemTypeMap[item.type].isVisualizationType;\nexport const hasMapView = itemType => itemTypeMap[itemType].domainType === DOMAIN_TYPE_AGGREGATE;\nexport const isTrackerDomainType = itemType => itemTypeMap[itemType].domainType === DOMAIN_TYPE_TRACKER;\nexport const getDefaultItemCount = itemType => itemTypeMap[itemType].defaultItemCount || 5;\nexport const getAppName = itemType => itemTypeMap[itemType].appName || ''; // Item type map\n\nexport const itemTypeMap = {\n  [VISUALIZATION]: {\n    id: VISUALIZATION,\n    endPointName: 'visualizations',\n    propName: 'visualization',\n    pluralTitle: i18n.t('Visualizations'),\n    appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n    appName: 'Data Visualizer',\n    defaultItemCount: 10\n  },\n  [REPORT_TABLE]: {\n    id: REPORT_TABLE,\n    endPointName: 'visualizations',\n    propName: 'visualization',\n    pluralTitle: i18n.t('Pivot tables'),\n    domainType: DOMAIN_TYPE_AGGREGATE,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n    appName: 'Data Visualizer'\n  },\n  [CHART]: {\n    id: CHART,\n    endPointName: 'visualizations',\n    propName: 'visualization',\n    pluralTitle: i18n.t('Charts'),\n    domainType: DOMAIN_TYPE_AGGREGATE,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n    appName: 'Data Visualizer'\n  },\n  [MAP]: {\n    id: MAP,\n    endPointName: 'maps',\n    propName: 'map',\n    pluralTitle: i18n.t('Maps'),\n    domainType: DOMAIN_TYPE_AGGREGATE,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-maps/?id=${id}`,\n    appName: 'Maps'\n  },\n  [EVENT_REPORT]: {\n    id: EVENT_REPORT,\n    endPointName: 'eventReports',\n    propName: 'eventReport',\n    pluralTitle: i18n.t('Event reports'),\n    domainType: DOMAIN_TYPE_TRACKER,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-event-reports/?id=${id}`,\n    appName: 'Event Reports'\n  },\n  [EVENT_CHART]: {\n    id: EVENT_CHART,\n    endPointName: 'eventCharts',\n    propName: 'eventChart',\n    pluralTitle: i18n.t('Event charts'),\n    domainType: DOMAIN_TYPE_TRACKER,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-event-visualizer/?id=${id}`,\n    appName: 'Event Visualizer'\n  },\n  [APP]: {\n    endPointName: 'apps',\n    propName: 'appKey',\n    pluralTitle: i18n.t('Apps')\n  },\n  [REPORTS]: {\n    id: REPORTS,\n    endPointName: 'reports',\n    propName: 'reports',\n    pluralTitle: i18n.t('Reports'),\n    appUrl: (id, type) => {\n      switch (type) {\n        case 'HTML':\n          return `dhis-web-reports/#/standard-report/view/${id}`;\n\n        case 'JASPER_REPORT_TABLE':\n        case 'JASPER_JDBC':\n        default:\n          return `api/reports/${id}/data.pdf?t=${new Date().getTime()}`;\n      }\n    }\n  },\n  [RESOURCES]: {\n    id: RESOURCES,\n    endPointName: 'resources',\n    propName: 'resources',\n    pluralTitle: i18n.t('Resources'),\n    appUrl: id => `api/documents/${id}/data`\n  },\n  [USERS]: {\n    id: USERS,\n    endPointName: 'users',\n    propName: 'users',\n    pluralTitle: i18n.t('Users'),\n    appUrl: id => `dhis-web-dashboard-integration/profile.action?id=${id}`\n  },\n  [TEXT]: {\n    id: TEXT,\n    propName: 'text'\n  },\n  [MESSAGES]: {\n    propName: 'messages'\n  },\n  [SPACER]: {\n    propName: 'text'\n  },\n  [PAGEBREAK]: {\n    propName: 'text'\n  },\n  [PRINT_TITLE_PAGE]: {\n    propName: 'text'\n  }\n};\nexport const getEndPointName = type => itemTypeMap[type].endPointName;\nexport const getItemUrl = (type, item, d2) => {\n  let url;\n\n  if (type === APP) {\n    url = item.launchUrl;\n  }\n\n  if (itemTypeMap[type] && itemTypeMap[type].appUrl) {\n    url = `${getBaseUrl(d2)}/${itemTypeMap[type].appUrl(item.id, item.type)}`;\n  }\n\n  return url;\n};\nexport const getItemIcon = type => {\n  switch (type) {\n    case REPORT_TABLE:\n    case EVENT_REPORT:\n    case REPORTS:\n      return TableIcon;\n\n    case CHART:\n    case EVENT_CHART:\n      return ChartIcon;\n\n    case MAP:\n      return MapIcon;\n\n    case APP:\n      return ExtensionIcon;\n\n    case RESOURCES:\n      return DescriptionIcon;\n\n    case USERS:\n      return PersonIcon;\n\n    case TEXT:\n      return FontDownloadIcon;\n\n    case MESSAGES:\n      return EmailIcon;\n\n    case SPACER:\n      return CropFreeIcon;\n\n    default:\n      return NotInterestedIcon;\n  }\n};","import isFunction from 'd2-utilizr/lib/isFunction';\nimport { orObject } from '../../modules/util'; // Dimensions for the react-grid-layout\n\nexport const GRID_COMPACT_TYPE = 'vertical'; // vertical | horizonal | null\n\nexport const GRID_ROW_HEIGHT = 10;\nconst GRID_COLUMN_WIDTH_PX = 20;\nconst GRID_LAYOUT = 'FLEXIBLE'; // FIXED | FLEXIBLE\n\nexport const MARGIN = [10, 10];\nexport const NEW_ITEM_SHAPE = {\n  x: 0,\n  y: 0,\n  w: 20,\n  h: 29\n}; // Dimensions for getShape\n\nconst NUMBER_OF_ITEM_COLS = 2;\nconst GRID_COLUMNS = 60;\nconst MAX_ITEM_GRID_WIDTH = GRID_COLUMNS - 1;\nexport const MAX_ITEM_GRID_HEIGHT = 34;\nexport const MAX_ITEM_GRID_HEIGHT_OIPP = 35;\nexport const MAX_ITEM_GRID_WIDTH_OIPP = 56; // for A4 landscape (297x210mm)\n// 794 px = (21cm / 2.54) * 96 pixels/inch\n// 1122 px = 29.7 /2.54 * 96 pixels/inch\n// const a4LandscapeHeightPx = 794\n\nexport const a4LandscapeWidthPx = 1102;\nexport const getGridColumns = () => {\n  switch (GRID_LAYOUT) {\n    case 'FLEXIBLE':\n      return GRID_COLUMNS;\n\n    case 'FIXED':\n      return Math.floor((window.innerWidth - 20) / GRID_COLUMN_WIDTH_PX);\n\n    default:\n      return GRID_COLUMNS;\n  }\n}; // isNonNegativeInteger\n\nconst isNonNegativeInteger = x => Number.isInteger(x) && x >= 0; // Does the item have all the shape properties?\n\n\nexport const hasShape = item => isNonNegativeInteger(item.x) && isNonNegativeInteger(item.y) && isNonNegativeInteger(item.w) && isNonNegativeInteger(item.h); // returns a rectangular grid block dimensioned with x, y, w, h in grid units.\n// based on a grid with 3 items across\n\nexport const getShape = i => {\n  if (!isNonNegativeInteger(i)) {\n    throw new Error('Invalid grid block number');\n  }\n\n  const col = i % NUMBER_OF_ITEM_COLS;\n  const row = Math.floor(i / NUMBER_OF_ITEM_COLS);\n  const itemWidth = Math.floor(MAX_ITEM_GRID_WIDTH / NUMBER_OF_ITEM_COLS);\n  const itemHeight = GRID_ROW_HEIGHT * 2;\n  return {\n    x: col * itemWidth,\n    y: row * itemHeight,\n    w: itemWidth,\n    h: itemHeight\n  };\n};\nexport const getGridItemProperties = itemId => {\n  return {\n    i: itemId,\n    minH: 4 // minimum height for item\n\n  };\n};\nexport const getPageBreakItemShape = (yPos, isStatic = true) => {\n  return {\n    x: 0,\n    y: yPos,\n    w: MAX_ITEM_GRID_WIDTH,\n    h: 5,\n    static: !!isStatic,\n    minH: 1\n  };\n};\nexport const getPrintTitlePageItemShape = isOneItemPerPage => {\n  return {\n    x: 0,\n    y: 0,\n    w: isOneItemPerPage ? MAX_ITEM_GRID_WIDTH_OIPP : MAX_ITEM_GRID_WIDTH,\n    h: MAX_ITEM_GRID_HEIGHT,\n    static: true,\n    minH: 1\n  };\n};\n/**\n * Calculates the grid item's original height in pixels based\n * on the height in grid units. This calculation\n * is copied directly from react-grid-layout GridItem.js (calcPosition)\n *\n * @param {Object} item item containing shape (x, y, w, h)\n */\n\nexport const getOriginalHeight = item => {\n  const originalHeight = Math.round(GRID_ROW_HEIGHT * item.h + Math.max(0, item.h - 1) * MARGIN[1]);\n  return {\n    originalHeight\n  };\n};\n/**\n * Returns an array of items containing the x, y, w, h dimensions\n * and the item's originalheight in pixels\n * @function\n * @param {Array} items\n * @returns {Array}\n */\n\nexport const withShape = items => items.map((item, index) => {\n  const itemWithShape = hasShape(item) ? item : Object.assign({}, item, getShape(index));\n  return Object.assign({}, itemWithShape, getOriginalHeight(itemWithShape));\n});\nexport const getGridItemDomId = id => `item-${id}`;\nexport function onItemResize(id) {\n  const el = orObject(document.querySelector(`#${getGridItemDomId(id)}`));\n  if (isFunction(el.setViewportSize)) setTimeout(() => el.setViewportSize(el.clientWidth - 5, el.clientHeight - 5), 10);\n}","import isObject from 'lodash/isObject';\nimport { VIS_TYPE_COLUMN, VIS_TYPE_PIVOT_TABLE } from '@dhis2/analytics';\nimport { apiFetchFavorite, getMapFields } from '../../../api/metadata';\nimport { REPORT_TABLE, CHART, MAP, EVENT_REPORT, EVENT_CHART, itemTypeMap } from '../../../modules/itemTypes';\nimport { getBaseUrl, getWithoutId } from '../../../modules/util';\nimport { getGridItemDomId } from '../../ItemGrid/gridUtil'; //external plugins\n\nconst itemTypeToExternalPlugin = {\n  [MAP]: 'mapPlugin',\n  [EVENT_REPORT]: 'eventReportPlugin',\n  [EVENT_CHART]: 'eventChartPlugin'\n};\n\nconst hasIntegratedPlugin = type => [CHART, REPORT_TABLE].includes(type);\n\nconst getPlugin = type => {\n  if (hasIntegratedPlugin(type)) {\n    return true;\n  }\n\n  const pluginName = itemTypeToExternalPlugin[type];\n  return global[pluginName];\n};\n\nexport const THEMATIC_LAYER = 'thematic';\nexport const pluginIsAvailable = (item = {}, visualization = {}) => {\n  const type = visualization.activeType || item.type;\n  return !!getPlugin(type);\n};\nexport const extractFavorite = item => {\n  if (!isObject(item)) {\n    return null;\n  }\n\n  const propName = itemTypeMap[item.type].propName;\n  return item[propName] || item.reportTable || item.chart || item.map || item.eventReport || item.eventChart || {};\n};\nexport const extractMapView = map => map.mapViews && map.mapViews.find(mv => mv.layer.includes(THEMATIC_LAYER));\nexport const loadPlugin = (plugin, config, credentials) => {\n  if (!(plugin && plugin.load)) {\n    return;\n  }\n\n  plugin.url = credentials.baseUrl;\n  plugin.loadingIndicator = true;\n  plugin.dashboard = true;\n\n  if (credentials.auth) {\n    plugin.auth = credentials.auth;\n  }\n\n  plugin.load(config);\n};\nexport const getId = item => extractFavorite(item).id;\nexport const getName = item => extractFavorite(item).name;\nexport const getDescription = item => extractFavorite(item).description;\nexport const getLink = (item, d2) => {\n  const baseUrl = getBaseUrl(d2);\n  const appUrl = itemTypeMap[item.type].appUrl(getId(item));\n  return `${baseUrl}/${appUrl}`;\n};\nexport const load = async (item, visualization, {\n  credentials,\n  activeType,\n  options = {}\n}) => {\n  const config = { ...visualization,\n    ...options,\n    el: getGridItemDomId(item.id)\n  };\n  const type = activeType || item.type;\n  const plugin = getPlugin(type);\n  loadPlugin(plugin, config, credentials);\n};\nexport const fetch = async item => {\n  const fetchedFavorite = await apiFetchFavorite(getId(item), item.type, {\n    fields: item.type === MAP ? getMapFields() : null\n  });\n  return fetchedFavorite;\n};\nexport const resize = item => {\n  const plugin = getPlugin(item.type);\n\n  if (plugin && plugin.resize) {\n    plugin.resize(getGridItemDomId(item.id));\n  }\n};\nexport const unmount = (item, activeType) => {\n  const plugin = getPlugin(activeType);\n\n  if (plugin && plugin.unmount) {\n    plugin.unmount(getGridItemDomId(item.id));\n  }\n};\nexport const getVisualizationConfig = (visualization, originalType, activeType) => {\n  if (originalType === MAP && originalType !== activeType) {\n    const extractedMapView = extractMapView(visualization);\n\n    if (extractedMapView === undefined) {\n      return null;\n    }\n\n    return getWithoutId({ ...visualization,\n      ...extractedMapView,\n      mapViews: undefined,\n      type: activeType === CHART ? VIS_TYPE_COLUMN : VIS_TYPE_PIVOT_TABLE\n    });\n  } else if (originalType === REPORT_TABLE && activeType === CHART) {\n    return getWithoutId({ ...visualization,\n      type: VIS_TYPE_COLUMN\n    });\n  } else if (originalType === CHART && activeType === REPORT_TABLE) {\n    return getWithoutId({ ...visualization,\n      type: VIS_TYPE_PIVOT_TABLE\n    });\n  }\n\n  return getWithoutId(visualization);\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemHeaderWrap\":\"ItemHeader_itemHeaderWrap__JcBP7\",\"itemTitle\":\"ItemHeader_itemTitle__34rHa\",\"itemActionsWrap\":\"ItemHeader_itemActionsWrap__Gx3D9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"leftControls\":\"DashboardsBar_leftControls__k-Y57\",\"rightControls\":\"DashboardsBar_rightControls__1cyr1\",\"topMargin\":\"DashboardsBar_topMargin__FKGgr\"};","import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { getEndPointName } from '../modules/itemTypes'; // Id, name\n\nexport const getIdNameFields = ({\n  rename\n} = {}) => ['id', `${rename ? 'displayName~rename(name)' : 'name,displayName'}`]; // Item\n\nexport const getItemFields = () => ['dimensionItem~rename(id)', 'displayName~rename(name)', 'dimensionItemType']; // Dimension\n\nexport const getDimensionFields = ({\n  withItems\n}) => arrayClean(['dimension', 'legendSet[id]', 'filter', 'programStage', withItems ? `items[${getItemFields().join(',')}]` : ``]); // Axis\n\nexport const getAxesFields = ({\n  withItems\n}) => [`columns[${getDimensionFields({\n  withItems\n}).join(',')}]`, `rows[${getDimensionFields({\n  withItems\n}).join(',')}]`, `filters[${getDimensionFields({\n  withItems\n}).join(',')}]`]; // Favorite\n\nexport const getFavoriteFields = ({\n  withDimensions,\n  withOptions\n}) => {\n  return arrayClean([`${getIdNameFields({\n    rename: true\n  }).join(',')}`, 'displayDescription~rename(description)', withDimensions ? `${getAxesFields({\n    withItems: true\n  }).join(',')}` : ``, withOptions ? ['*', '!attributeDimensions', '!attributeValues', '!category', '!categoryDimensions', '!categoryOptionGroupSetDimensions', '!columnDimensions', '!dataDimensionItems', '!dataElementDimensions', '!dataElementGroupSetDimensions', '!filterDimensions', '!itemOrganisationUnitGroups', '!lastUpdatedBy', '!organisationUnitGroupSetDimensions', '!organisationUnitLevels', '!organisationUnits', '!programIndicatorDimensions', '!relativePeriods', '!reportParams', '!rowDimensions', '!translations', '!userOrganisationUnit', '!userOrganisationUnitChildren', '!userOrganisationUnitGrandChildren'].join(',') : '']);\n};\nexport const getFavoritesFields = ({\n  withDimensions\n}) => [`reportTable[${getFavoriteFields({\n  withDimensions\n}).join(',')}]`, `chart[${['type', ...getFavoriteFields({\n  withDimensions\n})].join(',')}]`, `map[${getFavoriteFields({\n  withDimensions\n}).join(',')}]`, `eventReport[${getFavoriteFields({\n  withDimensions\n}).join(',')}]`, `eventChart[${getFavoriteFields({\n  withDimensions\n}).join(',')}]`]; // List item\n\nexport const getListItemFields = () => [`reports[${['type', ...getIdNameFields({\n  rename: true\n})].join(',')}]`, `resources[${getIdNameFields({\n  rename: true\n}).join(',')}]`, `users[${getIdNameFields({\n  rename: true\n}).join(',')}]`]; // Map\n\nexport const getMapFields = () => [`${getIdNameFields({\n  rename: true\n}).join(',')}`, 'user,longitude,latitude,zoom,basemap', `mapViews[${getFavoriteFields({\n  withDimensions: true,\n  withOptions: true\n})}]`]; // Api\n// Get more info about the favorite of a dashboard item\n\nexport const apiFetchFavorite = (id, type, {\n  fields\n}) => getInstance().then(d2 => d2.Api.getApi().get(`${getEndPointName(type)}/${id}`, {\n  fields: fields || getFavoriteFields({\n    withDimensions: true,\n    withOptions: true\n  })\n}));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ControlBar_root__iikeX\",\"content\":\"ControlBar_content__26Z33\",\"draghandle\":\"ControlBar_draghandle__27zum\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"DashboardItemChip_link__21drZ\",\"icon\":\"DashboardItemChip_icon__2hcIR\",\"selected\":\"DashboardItemChip_selected__r00uP\",\"unselected\":\"DashboardItemChip_unselected__2H9l2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ClearButton_button__33ZbK\",\"icon\":\"ClearButton_icon__vTJm3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"showMore\":\"ShowMoreButton_showMore__3S3He\",\"disabled\":\"ShowMoreButton_disabled__2FQNA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuItem\":\"ContentMenuItem_menuItem__vbKn3\",\"launchLink\":\"ContentMenuItem_launchLink__2Nql9\",\"label\":\"ContentMenuItem_label__ANfH1\",\"buttonInsert\":\"ContentMenuItem_buttonInsert__1joHg\"};"],"sourceRoot":""}
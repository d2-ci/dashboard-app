{"version":3,"sources":["modules/itemTypes.js","api/metadata.js","components/Item/ListItem/Item.module.css","components/ControlBar/styles/DashboardItemChip.module.css","components/TitleBar/styles/EditTitleBar.module.css","components/TitleBar/styles/ViewTitleBar.module.css","reducers/user.js","modules/uiBackendItemConverter.js","reducers/dashboards.js","reducers/editDashboard.js","reducers/editItemFilters.js","reducers/selected.js","actions/editItemFilters.js","reducers/itemFilters.js","actions/itemFilters.js","reducers/messages.js","api/messages.js","reducers/snackbar.js","actions/snackbar.js","reducers/visualizations.js","actions/visualizations.js","api/index.js","api/dashboards.js","components/SnackbarMessage/SnackbarMessage.js","actions/selected.js","api/localStorage.js","components/Item/MessagesItem/actions.js","api/editDashboard.js","actions/editDashboard.js","actions/dashboards.js","reducers/controlBar.js","api/controlBar.js","actions/controlBar.js","reducers/dimensions.js","reducers/settings.js","actions/dimensions.js","components/ControlBar/ShowMoreButton.js","components/ControlBar/controlBarDimensions.js","components/ControlBar/ControlBar.js","icons/Star.js","api/dataStatistics.js","components/ControlBar/DashboardItemChip.js","icons/AddCircle.js","icons/Clear.js","components/ControlBar/ClearButton.js","reducers/dashboardsFilter.js","components/ControlBar/Filter.js","components/ControlBar/DashboardsBar.js","actions/dashboardsFilter.js","components/Dashboard/DashboardVerticalOffset.js","components/ItemSelector/HeaderMenuItem.js","icons/Launch.js","components/ItemSelector/ContentMenuItem.js","components/ItemSelector/selectableItems.js","components/ItemSelector/CategorizedMenuGroup.js","components/ItemSelector/actions.js","components/ItemSelector/SinglesMenuGroup.js","components/ItemSelector/ItemSelector.js","components/TitleBar/EditTitleBar.js","components/ItemFilter/FilterDialog.js","reducers/activeModalDimension.js","actions/activeModalDimension.js","components/ItemFilter/FilterSelector.js","components/TitleBar/Info.js","components/TitleBar/ViewTitleBar.js","components/TitleBar/TitleBar.js","components/Item/VisualizationItem/DefaultPlugin.js","components/Item/VisualizationItem/assets/icons.js","components/Item/VisualizationItem/FatalErrorBoundary.js","components/Item/DeleteItemButton.js","components/Item/ItemHeader.js","components/Item/VisualizationItem/ItemHeaderButtons.js","components/Item/VisualizationItem/ItemFooter.js","modules/memoizeOne.js","components/Item/VisualizationItem/LoadingMask.js","components/Item/VisualizationItem/Item.js","widgets/Line.js","components/Item/MessagesItem/Item.js","components/Item/NotSupportedItem/Item.js","icons/Description.js","icons/Delete.js","components/Item/ListItem/Item.js","components/Item/ListItem/actions.js","components/Item/TextItem/Item.js","components/Item/AppItem/Item.js","components/Item/SpacerItem/Item.js","components/Item/Item.js","widgets/NoContentMessage.js","components/Item/ProgressiveLoadingContainer.js","components/ItemGrid/ItemGrid.js","components/FilterBar/FilterBadge.js","components/FilterBar/FilterBar.js","components/Dashboard/DashboardContent.js","components/Dashboard/ViewDashboard.js","components/ControlBar/ConfirmDeleteDialog.js","components/ControlBar/EditBar.js","components/Dashboard/EditDashboard.js","components/Dashboard/NewDashboard.js","components/Dashboard/Dashboard.js","components/Dashboard/dashboardModes.js","components/App.js","actions/user.js","locales/index.js","reducers/style.js","reducers/index.js","configureStore.js","index.js","modules/util.js","components/ControlBar/styles/DashboardsBar.module.css","components/ItemSelector/styles/ContentMenuItem.module.css","components/Item/styles/ItemHeader.module.css","components/ControlBar/styles/ControlBar.module.css","components/Item/VisualizationItem/styles/FatalErrorBoundary.module.css","components/ControlBar/styles/ShowMoreButton.module.css","components/ControlBar/styles/ClearButton.module.css","components/ControlBar/styles/Filter.module.css","components/Item/VisualizationItem/styles/LoadingMask.module.css","components/Item/VisualizationItem/styles/Item.module.css","components/Item/VisualizationItem/plugin.js","components/ItemGrid/gridUtil.js","components/ItemSelector/styles/CategorizedMenuGroup.module.css","components/Item/styles/DeleteItemButton.module.css","components/FilterBar/styles/FilterBar.module.css"],"names":["VISUALIZATION","REPORT_TABLE","CHART","MAP","EVENT_REPORT","EVENT_CHART","APP","REPORTS","RESOURCES","USERS","MESSAGES","TEXT","SPACER","isVisualizationType","item","itemTypeMap","type","hasMapView","itemType","domainType","isTrackerDomainType","getDefaultItemCount","defaultItemCount","getAppName","appName","_itemTypeMap","Object","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","id","endPointName","propName","pluralTitle","i18n","t","appUrl","concat","getEndPointName","getItemUrl","d2","url","launchUrl","getBaseUrl","getItemIcon","TableIcon","ChartIcon","MapIcon","ExtensionIcon","DescriptionIcon","PersonIcon","FontDownloadIcon","EmailIcon","CropFreeIcon","NotInterestedIcon","getIdNameFields","rename","arguments","length","undefined","getDimensionFields","_ref2","withItems","arrayClean","join","getAxesFields","_ref3","getFavoriteFields","_ref4","withDimensions","withOptions","getFavoritesFields","_ref5","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","getListItemFields","getMapFields","apiFetchFavorite","_ref6","fields","getInstance","then","Api","getApi","get","module","exports","list","itemicon","link","deleteicon","deletebutton","chip","icon","selected","unselected","section","titleDescription","title","description","itemSelector","actions","editLink","titleBar","titleBarIcon","DEFAULT_STATE_USER","username","uiLocale","isSuperuser","sGetUserUsername","state","user","spacerContent","isTextType","text","convertUiItemsToBackend","items","map","isUiSpacerType","objectSpread","convertBackendItemsToUi","isBackendSpacerType","DEFAULT_STATE_DASHBOARDS","byId","updateDashboardProp","_ref","dashboardId","prop","value","defineProperty","sGetDashboardsRoot","dashboards","sGetDashboardById","orObject","sDashboardsIsFetching","sGetAllDashboards","sGetDashboardItems","sGetStarredDashboards","values","filter","dashboard","starred","sGetUnstarredDashboards","sGetDashboardsSortedByStarred","toConsumableArray","arraySort","getCustomDashboards","data","arrayFrom","d","name","displayName","displayDescription","favorite","owner","created","split","substr","lastUpdated","access","numberOfItems","orArray","dashboardItems","DEFAULT_STATE_EDIT_DASHBOARD","NEW_DASHBOARD_STATE","sGetEditDashboardRoot","editDashboard","sGetIsEditing","isEmpty","sGetEditDashboardItems","DEFAULT_STATE_EDIT_ITEM_FILTERS","sGetEditItemFiltersRoot","editItemFilters","combineReducers","action","validateReducer","isLoading","showDescription","sGetSelectedRoot","sGetSelectedId","sGetSelectedIsLoading","sGetSelectedShowDescription","acRemoveEditItemFilter","DEFAULT_STATE_ITEM_FILTERS","sGetItemFiltersRoot","itemFilters","sGetFiltersKeys","keys","acRemoveItemFilter","sGetMessagesRoot","messages","getMessages","catch","error","console","log","DEFAULT_STATE_SNACKBAR","message","duration","open","acCloseSnackbar","DEFAULT_STATE_VISUALIZATIONS","p","sGetVisualization","visualizations","sGetVisualizationsRoot","acAddVisualization","onError","getDashboardItemsFields","withFavorite","getDashboardFields","apiFetchDashboard","models","apiStarDashboard","isStarred","post","delete","apiDeleteDashboard","loadingDashboardMsg","SnackbarMessageContent","react_default","a","createElement","style","fontWeight","connect","_sGetSnackbar","snackbar","sGetSnackbar","snackbarOpen","snackbarMessage","snackbarDuration","onCloseSnackbar","props","Snackbar_default","zIndex","SnackbarMessage_SnackbarMessageContent","autoHideDuration","onClose","acSetSelectedId","acSetSelectedIsLoading","tLoadDashboard","asyncToGenerator","regenerator_default","mark","_callee","dispatch","dash","wrap","_context","prev","next","sent","acAppendDashboards","abrupt","Promise","resolve","t0","stop","_x","apply","this","tSetSelectedDashboardById","_callee2","getState","snackbarTimeout","onSuccess","_context2","setTimeout","dashboardName","customDashboard","acSetDashboardItems","withShape","localStorage","setItem","forEach","extractFavorite","messageConversations","filters","clearTimeout","_x2","_x3","saveDashboard","assign","width","w","height","h","save","msg","response","uid","updateDashboard","postDashboard","create","acAddDashboardItem","itemPropName","generateUid","content","NEW_ITEM_SHAPE","acUpdateDashboardItem","acRemoveDashboardItem","arrayToIdMap","acSetDashboardStarred","tFetchDashboards","collection","paging","toArray","userRows","sGetControlBarUserRows","controlBar","sGetControlBarRoot","KEY","hasNamespace","currentUser","dataStore","has","getNamespace","apiGetControlBarRows","_callee3","namespace","_context3","t1","t2","find","key","apiPostControlBarRows","_callee4","rows","_context4","set","_x4","_x5","acSetControlBarUserRows","DEFAULT_DIMENSIONS","getDimensionById","DIMENSION_ID_PERIOD","DIMENSION_ID_ORGUNIT","sGetDimensions","dimensions","DEFAULT_SETTINGS","keyDateFormat","keyAnalysisRelativePeriod","keyAnalysisDigitGroupSeparator","displayNameProperty","rootOrganisationUnit","sGetSettings","settings","sGetSettingsDisplayNameProperty","acSetDimensions","ShowMoreButton","onClick","isMaxHeight","disabled","textAlign","className","classes","showMore","MIN_ROW_COUNT","getRowsHeight","getNumRowsFromHeight","Math","floor","FIRST_ROW_PADDING_HEIGHT","getTopOffset","getControlBarHeight","ControlBar","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onStartDrag","setState","dragging","window","addEventListener","onDrag","onEndDrag","event","preventDefault","stopPropagation","newHeight","clientY","onChangeHeight","requestAnimationFrame","removeEventListener","draghandle","onMouseDown","max","rootStyle","top","backgroundColor","editMode","colors","yellow050","white","paddingBottom","transition","root","children","renderDragHandle","React","Component","defaultProps","StarIcon","xmlns","viewBox","fill","apiPostDataStatistics","eventType","DashboardItemChip","label","chipProps","selectedState","Star","Link","to","debounce","lib","AddCircleIcon","teal600","ClearIcon","grey800","ClearButton","onClear","button","Clear","color","ownerData","DEFAULT_STATE_DASHBOARDS_FILTER_NAME","DEFAULT_STATE_DASHBOARDS_FILTER_OWNER","order","sGetDashboardsFilterRoot","dashboardsFilter","sGetFilterName","KEYCODE_ENTER","KEYCODE_ESCAPE","Filter","_Component","setFilterValue","onChangeName","target","handleKeyUp","keyCode","onKeypressEnter","inherits","createClass","nextProps","_this$props","startAdornment","InputAdornment_default","position","Search_default","searchIcon","endAdornment","ControlBar_ClearButton","Input_default","filterField","placeholder","onChange","onKeyUp","Function","prototype","MAX_ROW_COUNT","DashboardsBar","_getPrototypeOf2","_len","args","Array","_key","setInitialDashboardState","adjustedHeight","newRows","newRowCount","min","onToggleMaxHeight","onSelectDashboard","history","push","selectedId","onChangeFilterName","rowCount","controlBarHeight","contentWrapperStyle","padding","overflowY","components_ControlBar_ControlBar","leftControls","display","textDecoration","marginRight","AddCircle","ControlBar_Filter","ControlBar_DashboardItemChip","ControlBar_ShowMoreButton","mapDispatchToProps","withRouter","stateProps","dispatchProps","ownProps","displayDashboards","toLowerCase","includes","marginTop","HeaderMenuItem","dense","LaunchIcon","grey600","LaunchLink","e","launchLink","rel","href","Launch","InsertButton","buttonInsert","ContentMenuItem","onInsert","visType","ItemIcon","renderedItemIcon","visTypeIcons","menuItem","margin","ContentMenuItem_LaunchLink","ContentMenuItem_InsertButton","singleItems","header","categorizedItems","listItemTypes","CategorizedMenuGroup","addItem","tAddListItemContent","newItem","toggleSeeMore","seeMore","onChangeItemsLimit","_this2","_this$props2","hasMore","Fragment","ItemSelector_HeaderMenuItem","itemUrl","context","ItemSelector_ContentMenuItem","showMoreButton","contextTypes","PropTypes","object","isRequired","dashboardItem","listItemType","dashboardItemIndex","findIndex","category","addToDashboard","ItemSearchField","onFocus","ItemSelector","closeList","openList","_","fetchItems","anchorEl","currentTarget","setFilter","getCategorizedMenuGroups","itemCount","allItems","maxOptions","slice","ItemSelector_CategorizedMenuGroup","getSinglesMenuGroups","ItemSelector_SinglesMenuGroup","getMenuGroups","queryString","add","Set","ItemSelector_ItemSearchField","Popover_default","anchorOrigin","horizontal","vertical","transformOrigin","PaperProps","disableAutoFocus","disableRestoreFocus","EditTitleBar","onChangeTitle","onChangeDescription","components_ItemSelector_ItemSelector","selectedDashboard","peId","ouId","FilterDialog","onConfirm","dimension","selectedItems","dialogId","commonProps","onSelect","onDeselect","onReorder","es_lib","selectedPeriods","ouItems","dialogTitle","Dialog_default","maxWidth","disableEnforceFocus","dialogContent","DialogActions_default","kind","DEFAULT_STATE_ACTIVE_MODAL_DIMENSION","sGetActiveModalDimension","activeModalDimension","acSetActiveModalDimension","FilterSelector","openPanel","closePanel","closeDialog","clearActiveModalDimension","selectDimension","setActiveModalDimension","onSelectItems","dimensionId","setEditItemFilters","onDeselectItems","itemIdsToRemove","newList","removeEditItemFilter","onReorderItems","itemIds","oldList","reorderedList","saveFilter","filterItems","addItemFilter","removeItemFilter","theme","selectedDimensions","ArrowDropDown_default","Boolean","fontFamily","typography","onDimensionClick","selectedIds","ItemFilter_FilterDialog","withTheme","Info","show","toggle","InfoOutlined_default","NO_DESCRIPTION","ViewTitleBar","toggleSharingDialog","sharingDialogIsOpen","onStarClick","onInfoClick","titleStyle","cursor","userSelect","StarBorder","TitleBar_Info","marginLeft","update","manage","ItemFilter_FilterSelector","paddingTop","d2_ui_sharing_dialog_default","onRequestClose","tStarDashboard","fontSize","black","minWidth","TitleBar","edit","TitleBar_EditTitleBar","TitleBar_ViewTitleBar","DefaultPlugin","pluginCredentials","shouldPluginReload","prevProps","reloadAllowed","filtersChanged","vis","visualization","prevVis","visChanged","activeType","reloadPlugin","pluginManager","currentVis","useActiveType","credentials","getActiveType","baseUrl","auth","defaultHeaders","Authorization","getGridItemDomId","textDiv","ThreeDots","SpeechBubble","fillRule","transform","Warning","FatalErrorBoundary","errorFound","info","container","icons_Warning","DeleteItemButton","deleteItemButton","Delete_default","red500","HEADER_MARGIN_HEIGHT","ItemHeader","actionButtons","itemId","forwardedRef","itemHeaderWrap","ref","itemTitle","itemActionsWrap","Item_DeleteItemButton","ConnectedItemHeader","forwardRef","iconFill","ItemHeaderButtons","_useState","useState","_useState2","slicedToArray","setAnchorEl","onSelectActiveType","isTrackerType","onViewTable","handleClose","onViewChart","onViewMap","canViewAs","isSingleValue","isYearOverYear","VIS_TYPE_GAUGE","VIS_TYPE_PIE","interpretationMenuLabel","activeFooter","pluginIsAvailable","small","secondary","icons_ThreeDots","InsertChart_default","ViewList_default","Public_default","Launch_default","getLink","icons_SpeechBubble","onToggleFooter","scrollContainer","line","border","grey100","ItemFooter","objectId","getId","d2_ui_interpretations_default","memoizeOne","fn","lastArgs","lastValue","every","arg","i","CircularIndeterminate","outer","CircularProgress_default","progress","Item","showFooter","configLoaded","pluginIsLoaded","applyFilters","visRows","obj","visColumns","columns","visFilters","dimensionFound","dimensionObjects","getUniqueKey","uniqueId","getPluginComponent","memoizedGetVisualizationConfig","calculatedHeight","originalHeight","headerRef","current","clientHeight","ITEM_CONTENT_PADDING_BOTTOM","memoizedGetContentStyle","contentRef","offsetHeight","loadingCover","LoadingMask","build_es_lib","memoizedApplyFilters","onLoadingComplete","forDashboard","mapViews","layer","VisualizationItem_DefaultPlugin","onToggleItemExpanded","getContentStyle","measuredHeight","createRef","getVisualizationConfig","_componentDidMount","onVisualizationLoaded","prevState","VisualizationItem_ItemHeaderButtons","Item_ItemHeader","VisualizationItem_FatalErrorBoundary","VisualizationItem_ItemFooter","acSetActiveVisualizationType","grey200","Line","PRIVATE","messageTypes","_messageTypes","listStyleType","paddingLeft","seeAll","marginBottom","sender","lineHeight","snippet","maxHeight","overflow","MessagesItem","getMessageHref","msgIdentifier","messageType","getMessageSender","latestMsg","getMessageItems","editClass","readClass","read","msgDate","document","location","messageCount","formatDate","userSettings","widgets_Line","string","MessagesContainer","NotSupportedItem","justifyContent","alignItems","NotInterested_default","align","grey500","DeleteIcon","getItemTitle","ListItem","tRemoveListItemContent","contentItems","index","array","el","getContentItems","contentItem","Description","deleteButton","icons_Delete","grey900","newContent","whiteSpace","textField","fontStretch","onChangeText","updatedItem","d2_ui_rich_text","onEdit","multiline","fullWidth","textDivStyle","viewItem","getIframeSrc","appDetails","iframeSrc","ouIds","ouPath","AppItem","appKey","system","installedApps","app","src","SpacerItem","GridItem","VisualizationItem","TextItem","getGridItem","NoContentMessage","ProgressiveLoadingContainer","shouldLoad","containerRef","shouldLoadHandler","bufferPx","bufferFactor","innerHeight","rect","getBoundingClientRect","bottom","removeHandler","checkShouldLoad","debounceMs","registerHandler","_this3","objectWithoutProperties","eventProps","pick","EXPANDED_HEIGHT","ItemGrid","expandedItems","clickedId","isExpanded","onRemoveItem","onLayoutChange","newLayout","acUpdateDashboardLayout","onResizeStop","layout","oldItem","onItemResize","pluginResize","onRemoveItemWrapper","getItem","expandedItem","hProp","minH","ITEM_MIN_HEIGHT","randomNumber","random","getItems","getMemoizedItem","getItemComponent","itemClassNames","Item_ProgressiveLoadingContainer","Item_Item_Item","getItemComponents","memoize","widgets_NoContentMessage","react_grid_layout_default","MARGIN","cols","getGridColumns","rowHeight","GRID_ROW_HEIGHT","innerWidth","compactType","GRID_COMPACT_TYPE","isDraggable","isResizable","draggableCancel","validItems","hasShape","styles","badgeContainer","borderRadius","badge","badgeRemove","FilterBadge","onRemove","count","FilterBar","onBadgeRemove","onBadgeClick","bar","FilterBar_FilterBadge","removeItemFIlter","filtersSelector","createSelector","reduce","arr","DashboardContent","components_TitleBar_TitleBar","components_FilterBar_FilterBar","components_ItemGrid_ItemGrid","Content","hasDashboardContent","dashboardsIsEmpty","Dashboard_DashboardContent","dashboardsLoaded","contentNotReady","ControlBar_DashboardsBar","Dashboard_DashboardVerticalOffset","ViewDashboard_Content","ConfirmDeleteDialog","onDeleteConfirmed","onContinueEditing","destructive","DialogTitle_default","DialogContent_default","DialogContentText_default","buttonBarStyle","EditBar","translationDialogIsOpen","dashboardModel","confirmDeleteDialogOpen","redirectUrl","onConfirmDelete","onSave","newId","onDiscard","onDiscardChanges","onDelete","onTranslationsSaved","translations","dbLocale","translation","locale","property","onTranslate","fetchDashboardModel","toggleTranslationDialog","confirmDeleteDialog","deleteAccess","ControlBar_ConfirmDeleteDialog","translationDialog","d2_ui_translation_dialog_default","objectToTranslate","fieldsToTranslate","onTranslationSaved","onTranslationError","err","Redirect","updateAccess","discardBtnText","primary","rightControls","sGetIsNewDashboard","dashboardToSave","tDeleteDashboard","acSetDashboardDisplayName","EditDashboard","initialized","initEditDashboard","setEditDashboard","getDashboardContent","EditDashboard_Content","ControlBar_EditBar","NewDashboard","setNewDashboard","Dashboard","setDashboard","match","params","selectDashboard","scrollToTop","scrollTo","mode","Dashboard_EditDashboard","Dashboard_NewDashboard","Dashboard_ViewDashboard","dashboardToSelect","preferredId","App","setCurrentUser","fetchDashboards","setControlBarRows","setDimensions","spacers","HeaderBar","HashRouter","Switch","Route","exact","path","render","components_Dashboard_Dashboard","components_SnackbarMessage_SnackbarMessage","childContextTypes","controlBarRows","displayNameProp","filteredDimensions","apiFetchDimensions","dim","dimensionType","dataDimensionType","tSetDimensions","moment","addResources","arTranslations","daTranslations","enTranslations","esTranslations","frTranslations","idTranslations","kmTranslations","loTranslations","myTranslations","prsTranslations","psTranslations","ptTranslations","pt_BRTranslations","ruTranslations","svTranslations","tetTranslations","tgTranslations","ukTranslations","urTranslations","viTranslations","zhTranslations","zh_CNTranslations","setDefaultNamespace","changeLanguage","objectClean","conversations","$merge","d2Object","keyUiLocale","authorities","newState","k","$unshift","idToRemove","$splice","stateItems","layoutHasChanged","newStateItems","x","y","stateItem","si","configureStore","middleware","thunk","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducer","applyMiddleware","configI18n","config","sources","manifest","isProd","getManifest","version","manifest_generated_at","process","activities","dhis","dhis2","apiVersion","headers","schemas","getUserSettings","d2Init","initializedD2","ReactDOM","build_es","es","store","createMuiTheme","dhis2theme","src_components_App","getElementById","init","param","isArray","isObject","global","Intl","DateTimeFormat","year","month","day","format","Date","replace","defaultValue","api","idx","indexOf","getWithoutId","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","itemWrap","itemTypeToExternalPlugin","_itemTypeToExternalPl","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_3__","getPlugin","hasIntegratedPlugin","reportTable","chart","eventReport","eventChart","loadPlugin","plugin","load","loadingIndicator","getName","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","fetch","fetchedFavorite","resize","unmount","originalType","extractedMapView","mv","VIS_TYPE_COLUMN","VIS_TYPE_PIVOT_TABLE","__webpack_require__","__webpack_exports__","d2_utilizr_lib_isFunction__WEBPACK_IMPORTED_MODULE_0__","d2_utilizr_lib_isFunction__WEBPACK_IMPORTED_MODULE_0___default","n","_modules_util__WEBPACK_IMPORTED_MODULE_1__","isNonNegativeInteger","Number","isInteger","itemWithShape","Error","col","row","itemWidth","itemHeight","getShape","round","getOriginalHeight","querySelector","isFunction","setViewportSize","clientWidth"],"mappings":"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","file":"static/js/main.b911d479.chunk.js","sourcesContent":["import i18n from '@dhis2/d2-i18n';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\nimport ExtensionIcon from '@material-ui/icons/Extension';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport PersonIcon from '@material-ui/icons/Person';\nimport FontDownloadIcon from '@material-ui/icons/FontDownload';\nimport EmailIcon from '@material-ui/icons/Email';\nimport CropFreeIcon from '@material-ui/icons/CropFree';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nimport { getBaseUrl } from './util';\n\n// Item types\nexport const VISUALIZATION = 'VISUALIZATION';\nexport const REPORT_TABLE = 'REPORT_TABLE';\nexport const CHART = 'CHART';\nexport const MAP = 'MAP';\nexport const EVENT_REPORT = 'EVENT_REPORT';\nexport const EVENT_CHART = 'EVENT_CHART';\nexport const APP = 'APP';\nexport const REPORTS = 'REPORTS';\nexport const RESOURCES = 'RESOURCES';\nexport const USERS = 'USERS';\nexport const MESSAGES = 'MESSAGES';\nexport const TEXT = 'TEXT';\nexport const SPACER = 'SPACER';\n\nconst DOMAIN_TYPE_AGGREGATE = 'AGGREGATE';\nconst DOMAIN_TYPE_TRACKER = 'TRACKER';\n\n// Dashboard helpers\nexport const isVisualizationType = item =>\n    !!itemTypeMap[item.type].isVisualizationType;\nexport const hasMapView = itemType =>\n    itemTypeMap[itemType].domainType === DOMAIN_TYPE_AGGREGATE;\nexport const isTrackerDomainType = itemType =>\n    itemTypeMap[itemType].domainType === DOMAIN_TYPE_TRACKER;\nexport const getDefaultItemCount = itemType =>\n    itemTypeMap[itemType].defaultItemCount || 5;\nexport const getAppName = itemType => itemTypeMap[itemType].appName || '';\n\n// Item type map\nexport const itemTypeMap = {\n    [VISUALIZATION]: {\n        id: VISUALIZATION,\n        endPointName: 'visualizations',\n        propName: 'visualization',\n        pluralTitle: i18n.t('Visualizations'),\n        appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n        appName: 'Data Visualizer',\n        defaultItemCount: 10,\n    },\n    [REPORT_TABLE]: {\n        id: REPORT_TABLE,\n        endPointName: 'visualizations',\n        propName: 'visualization',\n        pluralTitle: i18n.t('Pivot tables'),\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n        appName: 'Data Visualizer',\n    },\n    [CHART]: {\n        id: CHART,\n        endPointName: 'visualizations',\n        propName: 'visualization',\n        pluralTitle: i18n.t('Charts'),\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n        appName: 'Data Visualizer',\n    },\n    [MAP]: {\n        id: MAP,\n        endPointName: 'maps',\n        propName: 'map',\n        pluralTitle: i18n.t('Maps'),\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-maps/?id=${id}`,\n        appName: 'Maps',\n    },\n    [EVENT_REPORT]: {\n        id: EVENT_REPORT,\n        endPointName: 'eventReports',\n        propName: 'eventReport',\n        pluralTitle: i18n.t('Event reports'),\n        domainType: DOMAIN_TYPE_TRACKER,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-event-reports/?id=${id}`,\n        appName: 'Event Reports',\n    },\n    [EVENT_CHART]: {\n        id: EVENT_CHART,\n        endPointName: 'eventCharts',\n        propName: 'eventChart',\n        pluralTitle: i18n.t('Event charts'),\n        domainType: DOMAIN_TYPE_TRACKER,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-event-visualizer/?id=${id}`,\n        appName: 'Event Visualizer',\n    },\n    [APP]: {\n        endPointName: 'apps',\n        propName: 'appKey',\n        pluralTitle: i18n.t('Apps'),\n    },\n    [REPORTS]: {\n        id: REPORTS,\n        endPointName: 'reports',\n        propName: 'reports',\n        pluralTitle: i18n.t('Reports'),\n        appUrl: id =>\n            `dhis-web-reporting/getReportParams.action?mode=report&uid=${id}`,\n    },\n    [RESOURCES]: {\n        id: RESOURCES,\n        endPointName: 'resources',\n        propName: 'resources',\n        pluralTitle: i18n.t('Resources'),\n        appUrl: id => `api/documents/${id}/data`,\n    },\n    [USERS]: {\n        id: USERS,\n        endPointName: 'users',\n        propName: 'users',\n        pluralTitle: i18n.t('Users'),\n        appUrl: id => `dhis-web-dashboard-integration/profile.action?id=${id}`,\n    },\n    [TEXT]: {\n        id: TEXT,\n        propName: 'text',\n    },\n    [MESSAGES]: {\n        propName: 'messages',\n    },\n    [SPACER]: {\n        propName: 'text',\n    },\n};\n\nexport const getEndPointName = type => itemTypeMap[type].endPointName;\n\nexport const getItemUrl = (type, item, d2) => {\n    let url;\n\n    if (type === APP) {\n        url = item.launchUrl;\n    }\n\n    if (itemTypeMap[type] && itemTypeMap[type].appUrl) {\n        url = `${getBaseUrl(d2)}/${itemTypeMap[type].appUrl(item.id)}`;\n    }\n\n    return url;\n};\n\nexport const getItemIcon = type => {\n    switch (type) {\n        case REPORT_TABLE:\n        case EVENT_REPORT:\n        case REPORTS:\n            return TableIcon;\n        case CHART:\n        case EVENT_CHART:\n            return ChartIcon;\n        case MAP:\n            return MapIcon;\n        case APP:\n            return ExtensionIcon;\n        case RESOURCES:\n            return DescriptionIcon;\n        case USERS:\n            return PersonIcon;\n        case TEXT:\n            return FontDownloadIcon;\n        case MESSAGES:\n            return EmailIcon;\n        case SPACER:\n            return CropFreeIcon;\n        default:\n            return NotInterestedIcon;\n    }\n};\n","import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\n\nimport { getEndPointName } from '../modules/itemTypes';\n\n// Id, name\nexport const getIdNameFields = ({ rename } = {}) => [\n    'id',\n    `${rename ? 'displayName~rename(name)' : 'name,displayName'}`,\n];\n\n// Item\nexport const getItemFields = () => [\n    'dimensionItem~rename(id)',\n    'displayName~rename(name)',\n    'dimensionItemType',\n];\n\n// Dimension\nexport const getDimensionFields = ({ withItems }) =>\n    arrayClean([\n        'dimension',\n        'legendSet[id]',\n        'filter',\n        'programStage',\n        withItems ? `items[${getItemFields().join(',')}]` : ``,\n    ]);\n\n// Axis\nexport const getAxesFields = ({ withItems }) => [\n    `columns[${getDimensionFields({ withItems }).join(',')}]`,\n    `rows[${getDimensionFields({ withItems }).join(',')}]`,\n    `filters[${getDimensionFields({ withItems }).join(',')}]`,\n];\n\n// Favorite\nexport const getFavoriteFields = ({ withDimensions, withOptions }) => {\n    return arrayClean([\n        `${getIdNameFields({ rename: true }).join(',')}`,\n        'displayDescription~rename(description)',\n        withDimensions ? `${getAxesFields({ withItems: true }).join(',')}` : ``,\n        withOptions\n            ? [\n                  '*',\n                  '!attributeDimensions',\n                  '!attributeValues',\n                  '!category',\n                  '!categoryDimensions',\n                  '!categoryOptionGroupSetDimensions',\n                  '!columnDimensions',\n                  '!dataDimensionItems',\n                  '!dataElementDimensions',\n                  '!dataElementGroupSetDimensions',\n                  '!filterDimensions',\n                  '!itemOrganisationUnitGroups',\n                  '!lastUpdatedBy',\n                  '!organisationUnitGroupSetDimensions',\n                  '!organisationUnitLevels',\n                  '!organisationUnits',\n                  '!programIndicatorDimensions',\n                  '!relativePeriods',\n                  '!reportParams',\n                  '!rowDimensions',\n                  '!series',\n                  '!translations',\n                  '!userOrganisationUnit',\n                  '!userOrganisationUnitChildren',\n                  '!userOrganisationUnitGrandChildren',\n              ].join(',')\n            : '',\n    ]);\n};\n\nexport const getFavoritesFields = ({ withDimensions }) => [\n    `reportTable[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `chart[${['type', ...getFavoriteFields({ withDimensions })].join(',')}]`,\n    `map[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `eventReport[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `eventChart[${getFavoriteFields({ withDimensions }).join(',')}]`,\n];\n\n// List item\nexport const getListItemFields = () => [\n    `reports[${getIdNameFields({ rename: true }).join(',')}]`,\n    `resources[${getIdNameFields({ rename: true }).join(',')}]`,\n    `users[${getIdNameFields({ rename: true }).join(',')}]`,\n];\n\n// Map\nexport const getMapFields = () => [\n    `${getIdNameFields({ rename: true }).join(',')}`,\n    'user,longitude,latitude,zoom,basemap',\n    `mapViews[${getFavoriteFields({\n        withDimensions: true,\n        withOptions: true,\n    })}]`,\n];\n\n// Api\n\n// Get more info about the favorite of a dashboard item\nexport const apiFetchFavorite = (id, type, { fields }) =>\n    getInstance().then(d2 =>\n        d2.Api.getApi().get(`${getEndPointName(type)}/${id}`, {\n            fields:\n                fields ||\n                getFavoriteFields({\n                    withDimensions: true,\n                    withOptions: true,\n                }),\n        })\n    );\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Item_list__2oHc1\",\"item\":\"Item_item__lO40M\",\"itemicon\":\"Item_itemicon__dv5ah\",\"link\":\"Item_link__2gULT\",\"deleteicon\":\"Item_deleteicon__3c7bl\",\"deletebutton\":\"Item_deletebutton__1DfY5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chip\":\"DashboardItemChip_chip__3znxp\",\"link\":\"DashboardItemChip_link__1b7Z_\",\"icon\":\"DashboardItemChip_icon__1zOaG\",\"selected\":\"DashboardItemChip_selected__36Qak\",\"unselected\":\"DashboardItemChip_unselected__3dm-X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"EditTitleBar_section__2sBzn\",\"titleDescription\":\"EditTitleBar_titleDescription__1-pfK\",\"title\":\"EditTitleBar_title__2fOQP\",\"description\":\"EditTitleBar_description__fKEX6\",\"itemSelector\":\"EditTitleBar_itemSelector__PWJdH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"actions\":\"ViewTitleBar_actions__1kGtw\",\"editLink\":\"ViewTitleBar_editLink__1HKr0\",\"titleBar\":\"ViewTitleBar_titleBar__1K-pW\",\"titleBarIcon\":\"ViewTitleBar_titleBarIcon__2spKM\"};","export const RECEIVED_USER = 'RECEIVED_USER';\n\nexport const DEFAULT_STATE_USER = {\n    id: '',\n    username: '',\n    uiLocale: '',\n    isSuperuser: false,\n};\n\nexport default (state = DEFAULT_STATE_USER, action) => {\n    switch (action.type) {\n        case RECEIVED_USER: {\n            return fromD2ToUserObj(action.value);\n        }\n        default:\n            return state;\n    }\n};\n\nfunction fromD2ToUserObj(d2Object) {\n    return {\n        id: d2Object.id,\n        username: d2Object.username,\n        uiLocale: d2Object.settings.keyUiLocale,\n        isSuperuser: d2Object.authorities.has('ALL'),\n    };\n}\n\n// selectors\n\nexport const sGetUserId = state => state.user.id;\nexport const sGetUserUsername = state => state.user.username;\nexport const sGetIsSuperuser = state => state.user.isSuperuser;\nexport const sGetUiLocale = state => state.user.uiLocale;\n","import { TEXT, SPACER } from './itemTypes';\n\nexport const spacerContent = 'SPACER_ITEM_FOR_DASHBOARD_LAYOUT_CONVENIENCE';\nexport const emptyTextItemContent = 'TEXT_ITEM_WITH_NO_CONTENT';\n\nconst isBackendSpacerType = item =>\n    item.type === TEXT && item.text === spacerContent;\nconst isUiSpacerType = item => item.type === SPACER;\nconst isTextType = item => item.type === TEXT && item.text !== spacerContent;\n\nexport const convertUiItemsToBackend = items =>\n    items.map(item => {\n        let text = null;\n        if (isUiSpacerType(item)) {\n            text = spacerContent;\n        } else if (isTextType(item)) {\n            text = item.text || emptyTextItemContent;\n        }\n\n        return {\n            ...item,\n            ...(text ? { text } : {}),\n        };\n    });\n\nexport const convertBackendItemsToUi = items =>\n    items.map(item => {\n        const type = isBackendSpacerType(item) ? SPACER : item.type;\n\n        const text = isTextType(item)\n            ? item.text === emptyTextItemContent\n                ? ''\n                : item.text\n            : null;\n\n        return {\n            ...item,\n            ...(text !== null ? { text } : {}),\n            type,\n        };\n    });\n","/** @module reducers/dashboards */\n\nimport arrayFrom from 'd2-utilizr/lib/arrayFrom';\nimport arraySort from 'd2-utilizr/lib/arraySort';\n\nimport { orArray, orObject } from '../modules/util';\nimport { convertBackendItemsToUi } from '../modules/uiBackendItemConverter';\n\nexport const SET_DASHBOARDS = 'SET_DASHBOARDS';\nexport const ADD_DASHBOARDS = 'ADD_DASHBOARDS';\nexport const SET_DASHBOARD_STARRED = 'SET_DASHBOARD_STARRED';\nexport const SET_DASHBOARD_DISPLAY_NAME = 'SET_DASHBOARD_DISPLAY_NAME';\nexport const SET_DASHBOARD_ITEMS = 'SET_DASHBOARD_ITEMS';\n\nexport const DEFAULT_STATE_DASHBOARDS = {\n    byId: null,\n    items: [],\n};\n\n// reducer helper functions\n\nconst updateDashboardProp = ({ state, dashboardId, prop, value }) => ({\n    byId: {\n        ...state.byId,\n        [dashboardId]: {\n            ...state.byId[dashboardId],\n            [prop]: value,\n        },\n    },\n    items: state.items,\n});\n\n/**\n * Reducer that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n * @returns {Object}\n */\nexport default (state = DEFAULT_STATE_DASHBOARDS, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS: {\n            return {\n                byId: action.value,\n                items: [],\n            };\n        }\n        case ADD_DASHBOARDS: {\n            return {\n                ...state,\n                byId: {\n                    ...state.byId,\n                    ...action.value,\n                },\n            };\n        }\n        case SET_DASHBOARD_STARRED: {\n            return updateDashboardProp({\n                state,\n                dashboardId: action.dashboardId,\n                prop: 'starred',\n                value: action.value,\n            });\n        }\n        case SET_DASHBOARD_DISPLAY_NAME: {\n            return updateDashboardProp({\n                state,\n                dashboardId: action.dashboardId,\n                prop: 'displayName',\n                value: action.value,\n            });\n        }\n        case SET_DASHBOARD_ITEMS: {\n            return {\n                ...state,\n                items: action.value,\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// root selector\n\nexport const sGetDashboardsRoot = state => state.dashboards;\n\n// selector level 1\n\n/**\n * Selector which returns a dashboard by id from the state object\n * If no matching dashboard is found it returns undefined\n * If dashboards.byId is null, then the dashboards api request\n * has not yet completed. If dashboards.byId is an empty object\n * then the dashboards api request is complete, but no dashboards\n * were returned\n *\n * @function\n * @param {Object} state The current state\n * @param {Number} id The id of the dashboard\n * @returns {Object | undefined}\n */\nexport const sGetDashboardById = (state, id) =>\n    orObject(sGetDashboardsRoot(state).byId)[id];\n\nexport const sDashboardsIsFetching = state => {\n    return sGetDashboardsRoot(state).byId === null;\n};\n\n/**\n * Selector which returns all dashboards (the byId object)\n *\n * @function\n * @param {Object} state The current state\n * @returns {Object | undefined}\n */\nexport const sGetAllDashboards = state =>\n    orObject(sGetDashboardsRoot(state).byId);\n\n/**\n * Selector which returns the current dashboard items\n *\n * @function\n * @param {Object} state The current state\n * @returns {Array}\n */\nexport const sGetDashboardItems = state => sGetDashboardsRoot(state).items;\n\n// selector level 2\n\nexport const sGetStarredDashboards = state =>\n    Object.values(sGetAllDashboards(state)).filter(\n        dashboard => dashboard.starred === true\n    );\n\nexport const sGetUnstarredDashboards = state =>\n    Object.values(sGetAllDashboards(state)).filter(\n        dashboard => dashboard.starred === false\n    );\n\n// selector level 3\n\nexport const sGetStarredDashboardIds = state => {\n    return sGetStarredDashboards(state).map(dashboard => dashboard.id);\n};\n\nexport const sGetUnstarredDashboardIds = state =>\n    sGetUnstarredDashboards(state).map(dashboard => dashboard.id);\n\nexport const sGetDashboardsSortedByStarred = state => [\n    ...arraySort(sGetStarredDashboards(state), 'ASC', 'displayName'),\n    ...arraySort(sGetUnstarredDashboards(state), 'ASC', 'displayName'),\n];\n\n// utils\n\n/**\n * Returns the array of dashboards, customized for ui\n * @function\n * @param {Array} data The original dashboard list\n * @returns {Array}\n */\nexport const getCustomDashboards = data =>\n    arrayFrom(data).map(d => ({\n        id: d.id,\n        name: d.name,\n        displayName: d.displayName,\n        description: d.description,\n        displayDescription: d.displayDescription,\n        starred: d.favorite,\n        owner: d.user.name,\n        created: d.created\n            .split('T')\n            .join(' ')\n            .substr(0, 16),\n        lastUpdated: d.lastUpdated\n            .split('T')\n            .join(' ')\n            .substr(0, 16),\n        access: d.access,\n        numberOfItems: orArray(d.dashboardItems).length,\n        dashboardItems: convertBackendItemsToUi(d.dashboardItems),\n    }));\n","/** @module reducers/editDashboard */\nimport update from 'immutability-helper';\nimport isEmpty from 'lodash/isEmpty';\nimport { orArray, orObject } from '../modules/util';\n\nexport const RECEIVED_EDIT_DASHBOARD = 'RECEIVED_EDIT_DASHBOARD';\nexport const RECEIVED_NOT_EDITING = 'RECEIVED_NOT_EDITING';\nexport const START_NEW_DASHBOARD = 'START_NEW_DASHBOARD';\nexport const RECEIVED_TITLE = 'RECEIVED_TITLE';\nexport const RECEIVED_DESCRIPTION = 'RECEIVED_DESCRIPTION';\nexport const ADD_DASHBOARD_ITEM = 'ADD_DASHBOARD_ITEM';\nexport const REMOVE_DASHBOARD_ITEM = 'REMOVE_DASHBOARD_ITEM';\nexport const UPDATE_DASHBOARD_ITEM = 'UPDATE_DASHBOARD_ITEM';\nexport const RECEIVED_DASHBOARD_LAYOUT = 'RECEIVED_DASHBOARD_LAYOUT';\n\nexport const DEFAULT_STATE_EDIT_DASHBOARD = {};\nexport const NEW_DASHBOARD_STATE = {\n    id: '',\n    name: '',\n    access: {},\n    description: '',\n    dashboardItems: [],\n};\n\nexport default (state = DEFAULT_STATE_EDIT_DASHBOARD, action) => {\n    switch (action.type) {\n        case RECEIVED_EDIT_DASHBOARD: {\n            const newState = {};\n            Object.keys(NEW_DASHBOARD_STATE).map(\n                k => (newState[k] = action.value[k])\n            );\n            return newState;\n        }\n        case RECEIVED_NOT_EDITING:\n            return DEFAULT_STATE_EDIT_DASHBOARD;\n        case START_NEW_DASHBOARD:\n            return NEW_DASHBOARD_STATE;\n        case RECEIVED_TITLE: {\n            return Object.assign({}, state, { name: action.value });\n        }\n        case RECEIVED_DESCRIPTION: {\n            return Object.assign({}, state, {\n                description: action.value,\n            });\n        }\n        case ADD_DASHBOARD_ITEM:\n            return update(state, {\n                dashboardItems: { $unshift: [action.value] },\n            });\n        case REMOVE_DASHBOARD_ITEM: {\n            const idToRemove = action.value;\n\n            const dashboardItemIndex = state.dashboardItems.findIndex(\n                item => item.id === idToRemove\n            );\n\n            if (dashboardItemIndex > -1) {\n                return update(state, {\n                    dashboardItems: {\n                        $splice: [[dashboardItemIndex, 1]],\n                    },\n                });\n            }\n\n            return state;\n        }\n        case RECEIVED_DASHBOARD_LAYOUT: {\n            const stateItems = orArray(state.dashboardItems);\n            let layoutHasChanged = false;\n\n            const newStateItems = action.value.map(({ x, y, w, h, i }) => {\n                const stateItem = stateItems.find(si => si.id === i);\n\n                if (\n                    !(\n                        stateItem.x === x &&\n                        stateItem.y === y &&\n                        stateItem.w === w &&\n                        stateItem.h === h\n                    )\n                ) {\n                    layoutHasChanged = true;\n                    return Object.assign({}, stateItem, { w, h, x, y });\n                }\n\n                return stateItem;\n            });\n\n            return layoutHasChanged\n                ? {\n                      ...state,\n                      dashboardItems: newStateItems,\n                  }\n                : state;\n        }\n        case UPDATE_DASHBOARD_ITEM: {\n            const dashboardItem = action.value;\n\n            const dashboardItemIndex = state.dashboardItems.findIndex(\n                item => item.id === dashboardItem.id\n            );\n\n            if (dashboardItemIndex > -1) {\n                const newState = update(state, {\n                    dashboardItems: {\n                        $splice: [[dashboardItemIndex, 1, dashboardItem]],\n                    },\n                });\n\n                return newState;\n            }\n\n            return state;\n        }\n        default:\n            return state;\n    }\n};\n\n// root selector\n\nexport const sGetEditDashboardRoot = state => state.editDashboard;\n\n// selectors\n\nexport const sGetIsEditing = state => !isEmpty(state.editDashboard);\n\nexport const sGetIsNewDashboard = state => {\n    return (\n        !isEmpty(state.editDashboard) && sGetEditDashboardRoot(state).id === ''\n    );\n};\n\nexport const sGetEditDashboardItems = state =>\n    orObject(sGetEditDashboardRoot(state)).dashboardItems;\n","export const CLEAR_EDIT_ITEM_FILTERS = 'CLEAR_EDIT_ITEM_FILTERS';\nexport const REMOVE_EDIT_ITEM_FILTER = 'REMOVE_EDIT_ITEM_FILTER';\nexport const SET_EDIT_ITEM_FILTERS = 'SET_EDIT_ITEM_FILTERS';\n\nexport const DEFAULT_STATE_EDIT_ITEM_FILTERS = {};\n\nexport default (state = DEFAULT_STATE_EDIT_ITEM_FILTERS, action) => {\n    switch (action.type) {\n        case REMOVE_EDIT_ITEM_FILTER: {\n            const newState = { ...state };\n\n            delete newState[action.id];\n\n            return newState;\n        }\n        case SET_EDIT_ITEM_FILTERS: {\n            return action.filters;\n        }\n        case CLEAR_EDIT_ITEM_FILTERS: {\n            return DEFAULT_STATE_EDIT_ITEM_FILTERS;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetEditItemFiltersRoot = state => state.editItemFilters;\n\nexport const sGetEditFiltersKeys = state =>\n    Object.keys(sGetEditItemFiltersRoot(state));\n","/** @module reducers/selected */\nimport { combineReducers } from 'redux';\n\nimport { validateReducer } from '../modules/util';\n\nexport const SET_SELECTED_ID = 'SET_SELECTED_ID';\nexport const SET_SELECTED_ISLOADING = 'SET_SELECTED_ISLOADING';\nexport const SET_SELECTED_SHOWDESCRIPTION = 'SET_SELECTED_SHOWDESCRIPTION';\n\nexport const DEFAULT_STATE_SELECTED_ID = null;\nexport const DEFAULT_STATE_SELECTED_ISLOADING = false;\nexport const DEFAULT_STATE_SELECTED_SHOWDESCRIPTION = false;\n\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\nconst id = (state = DEFAULT_STATE_SELECTED_ID, action) => {\n    switch (action.type) {\n        case SET_SELECTED_ID:\n            return validateReducer(action.value, DEFAULT_STATE_SELECTED_ID);\n        default:\n            return state;\n    }\n};\n\nconst isLoading = (state = DEFAULT_STATE_SELECTED_ISLOADING, action) => {\n    switch (action.type) {\n        case SET_SELECTED_ISLOADING:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_SELECTED_ISLOADING\n            );\n        default:\n            return state;\n    }\n};\n\nconst showDescription = (\n    state = DEFAULT_STATE_SELECTED_SHOWDESCRIPTION,\n    action\n) => {\n    switch (action.type) {\n        case SET_SELECTED_SHOWDESCRIPTION:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_SELECTED_SHOWDESCRIPTION\n            );\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    id,\n    isLoading,\n    showDescription,\n});\n\n// Selectors\n\nexport const sGetSelectedRoot = state => state.selected;\n\nexport const sGetSelectedId = state => sGetSelectedRoot(state).id;\n\nexport const sGetSelectedIsLoading = state => sGetSelectedRoot(state).isLoading;\n\nexport const sGetSelectedShowDescription = state =>\n    sGetSelectedRoot(state).showDescription;\n","import {\n    REMOVE_EDIT_ITEM_FILTER,\n    SET_EDIT_ITEM_FILTERS,\n    CLEAR_EDIT_ITEM_FILTERS,\n} from '../reducers/editItemFilters';\n\n// actions\n\nexport const acRemoveEditItemFilter = id => ({\n    type: REMOVE_EDIT_ITEM_FILTER,\n    id,\n});\n\nexport const acClearEditItemFilters = () => ({\n    type: CLEAR_EDIT_ITEM_FILTERS,\n});\n\nexport const acSetEditItemFilters = filters => ({\n    type: SET_EDIT_ITEM_FILTERS,\n    filters,\n});\n","export const CLEAR_ITEM_FILTERS = 'CLEAR_ITEM_FILTERS';\nexport const SET_ITEM_FILTERS = 'SET_ITEM_FILTERS';\nexport const ADD_ITEM_FILTER = 'ADD_ITEM_FILTER';\nexport const REMOVE_ITEM_FILTER = 'REMOVE_ITEM_FILTER';\n\nexport const DEFAULT_STATE_ITEM_FILTERS = {};\n\nexport default (state = DEFAULT_STATE_ITEM_FILTERS, action) => {\n    switch (action.type) {\n        case ADD_ITEM_FILTER: {\n            return {\n                ...state,\n                [action.filter.id]: action.filter.value,\n            };\n        }\n        case REMOVE_ITEM_FILTER: {\n            const newState = { ...state };\n\n            delete newState[action.id];\n\n            return newState;\n        }\n        case SET_ITEM_FILTERS: {\n            return action.filters;\n        }\n        case CLEAR_ITEM_FILTERS: {\n            return DEFAULT_STATE_ITEM_FILTERS;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetItemFiltersRoot = state => state.itemFilters;\n\nexport const sGetFiltersKeys = state => Object.keys(sGetItemFiltersRoot(state));\n","import {\n    ADD_ITEM_FILTER,\n    REMOVE_ITEM_FILTER,\n    SET_ITEM_FILTERS,\n    CLEAR_ITEM_FILTERS,\n} from '../reducers/itemFilters';\n\nexport const FILTER_ORG_UNIT = 'ou';\n\n// actions\n\nexport const acAddItemFilter = filter => ({\n    type: ADD_ITEM_FILTER,\n    filter,\n});\n\nexport const acRemoveItemFilter = id => ({\n    type: REMOVE_ITEM_FILTER,\n    id,\n});\n\nexport const acClearItemFilters = () => ({\n    type: CLEAR_ITEM_FILTERS,\n});\n\nexport const acSetItemFilters = filters => ({\n    type: SET_ITEM_FILTERS,\n    filters,\n});\n","import update from 'immutability-helper';\nimport { arrayToIdMap } from '../modules/util';\n\nexport const RECEIVED_MESSAGES = 'RECEIVED_MESSAGES';\n\nexport default (state = {}, action) => {\n    switch (action.type) {\n        case RECEIVED_MESSAGES: {\n            const conversations = arrayToIdMap(action.value);\n\n            const newState = update(state, { $merge: conversations });\n\n            return newState;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetMessagesRoot = state => state.messages;\n","import { getInstance } from 'd2';\n\nexport const getMessages = () => {\n    const fields =\n        'id,messageCount,lastUpdated,messageType,displayName,read,messages[id,read,sender[id,displayName],text,lastUpdated]';\n    const url = `/messageConversations?fields=${fields}&order=read:asc&pageSize=200`;\n    return getInstance()\n        .then(d2 => d2.Api.getApi().get(url))\n        .catch(error => console.log('Error:', error));\n};\n","export const RECEIVED_SNACKBAR_MESSAGE = 'RECEIVED_SNACKBAR_MESSAGE';\nexport const CLOSE_SNACKBAR = 'CLOSE_SNACKBAR';\n\nexport const DEFAULT_STATE_SNACKBAR = {\n    message: {},\n    duration: null,\n    open: false,\n};\n\nexport default (state = DEFAULT_STATE_SNACKBAR, action) => {\n    switch (action.type) {\n        case RECEIVED_SNACKBAR_MESSAGE: {\n            return { ...state, ...action.value };\n        }\n        case CLOSE_SNACKBAR: {\n            return DEFAULT_STATE_SNACKBAR;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetSnackbar = state => state.snackbar || DEFAULT_STATE_SNACKBAR;\n","import {\n    RECEIVED_SNACKBAR_MESSAGE,\n    CLOSE_SNACKBAR,\n} from '../reducers/snackbar';\n\nexport const acReceivedSnackbarMessage = value => ({\n    type: RECEIVED_SNACKBAR_MESSAGE,\n    value,\n});\n\nexport const acCloseSnackbar = () => ({\n    type: CLOSE_SNACKBAR,\n});\n","import { orObject } from '../modules/util';\nimport objectClean from 'd2-utilizr/lib/objectClean';\n\n/** @module reducers/visualizations */\n\nexport const ADD_VISUALIZATION = 'ADD_VISUALIZATION';\nexport const SET_ACTIVE_VISUALIZATION_TYPE = 'SET_ACTIVE_VISUALIZATION_TYPE';\n\nexport const DEFAULT_STATE_VISUALIZATIONS = {};\n\nconst isEmpty = p => p === undefined || p === null;\n\nexport default (state = DEFAULT_STATE_VISUALIZATIONS, action) => {\n    switch (action.type) {\n        case ADD_VISUALIZATION: {\n            return {\n                ...state,\n                [action.value.id]: objectClean(\n                    {\n                        ...orObject(state[action.value.id]),\n                        ...action.value,\n                    },\n                    isEmpty\n                ),\n            };\n        }\n        case SET_ACTIVE_VISUALIZATION_TYPE: {\n            return {\n                ...state,\n                [action.id]: objectClean(\n                    {\n                        ...orObject(state[action.id]),\n                        activeType: action.activeType,\n                    },\n                    isEmpty\n                ),\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// root selector\nexport const sGetVisualizationsRoot = state => state.visualizations;\n\n// selectors level 1\nexport const sGetVisualization = (state, id) => {\n    return sGetVisualizationsRoot(state)[id];\n};\n","import {\n    ADD_VISUALIZATION,\n    SET_ACTIVE_VISUALIZATION_TYPE,\n} from '../reducers/visualizations';\n\nexport const acAddVisualization = value => ({\n    type: ADD_VISUALIZATION,\n    value,\n});\n\nexport const acSetActiveVisualizationType = (id, activeType) => {\n    const action = {\n        type: SET_ACTIVE_VISUALIZATION_TYPE,\n        id,\n        activeType,\n    };\n\n    return action;\n};\n","import arrayClean from 'd2-utilizr/lib/arrayClean';\nimport {\n    getListItemFields,\n    getFavoritesFields,\n    getIdNameFields,\n} from './metadata';\n\n// Helper functions\n\nexport const onError = error => console.log('Error: ', error);\n\n// Dashboard item\nexport const getDashboardItemsFields = ({ withFavorite } = {}) =>\n    arrayClean([\n        'id',\n        'type',\n        'shape',\n        'x',\n        'y',\n        'width~rename(w)',\n        'height~rename(h)',\n        'messages',\n        'text',\n        'appKey',\n        `${getListItemFields().join(',')}`,\n        withFavorite\n            ? `${getFavoritesFields({\n                  withDimensions: withFavorite.withDimensions,\n              }).join(',')}`\n            : ``,\n    ]);\n\n// Dashboard\nexport const getDashboardFields = ({ withItems, withFavorite } = {}) =>\n    arrayClean([\n        `${getIdNameFields().join(',')}`,\n        'description',\n        'displayDescription',\n        'favorite',\n        `user[${getIdNameFields({ rename: true }).join(',')}]`,\n        'created',\n        'lastUpdated',\n        'access',\n        withItems\n            ? `dashboardItems[${getDashboardItemsFields({\n                  withFavorite,\n              }).join(',')}]`\n            : ``,\n    ]);\n","import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { onError, getDashboardFields } from './index';\n\n// Get \"all\" dashboards on startup\nexport const apiFetchDashboards = () =>\n    getInstance()\n        .then(d2 =>\n            d2.models.dashboard.list({\n                fields: [\n                    getDashboardFields().join(','),\n                    'dashboardItems[id]',\n                ].join(','),\n                paging: 'false',\n            })\n        )\n        .catch(onError);\n\n// Get more info about selected dashboard\nexport const apiFetchDashboard = id =>\n    getInstance()\n        .then(d2 =>\n            d2.models.dashboard.get(id, {\n                fields: arrayClean(\n                    getDashboardFields({\n                        withItems: true,\n                        withFavorite: { withDimensions: false },\n                    })\n                ).join(','),\n            })\n        )\n        .catch(onError);\n\n// Star dashboard\nexport const apiStarDashboard = (id, isStarred) => {\n    const url = `dashboards/${id}/favorite`;\n\n    getInstance().then(d2 => {\n        if (isStarred) {\n            d2.Api.getApi().post(url);\n        } else {\n            d2.Api.getApi().delete(url);\n        }\n    });\n};\n\nexport const apiDeleteDashboard = id => {\n    return getInstance()\n        .then(d2 => {\n            return d2.models.dashboards\n                .get(id)\n                .then(dashboard => dashboard.delete());\n        })\n        .catch(onError);\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport PropTypes from 'prop-types';\n\nimport { sGetSnackbar } from '../../reducers/snackbar';\nimport { acCloseSnackbar } from '../../actions/snackbar';\n\nconst LOADING_DASHBOARD = 'LOADING_DASHBOARD';\nexport const loadingDashboardMsg = { name: '', type: LOADING_DASHBOARD };\n\nconst SnackbarMessageContent = ({ message }) => {\n    if (typeof message === 'object') {\n        //future message types:  switch(message.type)\n        return (\n            <span>\n                Loading <span style={{ fontWeight: 800 }}>{message.name}</span>{' '}\n                dashboard\n            </span>\n        );\n    }\n    return message;\n};\n\nexport const SnackbarMessage = props => {\n    return (\n        <Snackbar\n            style={{ zIndex: 10001 }}\n            open={props.snackbarOpen}\n            message={<SnackbarMessageContent message={props.snackbarMessage} />}\n            autoHideDuration={props.snackbarDuration}\n            onClose={props.onCloseSnackbar}\n        />\n    );\n};\n\nconst mapStateToProps = state => {\n    const { message, duration, open } = sGetSnackbar(state);\n    return {\n        snackbarOpen: open,\n        snackbarMessage: message,\n        snackbarDuration: duration,\n    };\n};\n\nSnackbarMessage.propTypes = {\n    snackbarDuration: PropTypes.string,\n    snackbarMessage: PropTypes.object,\n    snackbarOpen: PropTypes.bool,\n    onCloseSnackbar: PropTypes.func,\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        onCloseSnackbar: acCloseSnackbar,\n    }\n)(SnackbarMessage);\n","import { getCustomDashboards, sGetDashboardById } from '../reducers/dashboards';\nimport { sGetIsEditing } from '../reducers/editDashboard';\nimport { sGetEditItemFiltersRoot } from '../reducers/editItemFilters';\nimport {\n    SET_SELECTED_ID,\n    SET_SELECTED_ISLOADING,\n    SET_SELECTED_SHOWDESCRIPTION,\n    sGetSelectedIsLoading,\n    sGetSelectedId,\n} from '../reducers/selected';\nimport { sGetUserUsername } from '../reducers/user';\n\nimport { acSetDashboardItems, acAppendDashboards } from './dashboards';\nimport { acClearEditItemFilters } from './editItemFilters';\nimport { acClearItemFilters, acSetItemFilters } from './itemFilters';\nimport { tGetMessages } from '../components/Item/MessagesItem/actions';\nimport { acReceivedSnackbarMessage, acCloseSnackbar } from './snackbar';\nimport { acAddVisualization } from './visualizations';\n\nimport { apiFetchDashboard } from '../api/dashboards';\nimport { storePreferredDashboardId } from '../api/localStorage';\n\nimport { withShape } from '../components/ItemGrid/gridUtil';\nimport { loadingDashboardMsg } from '../components/SnackbarMessage/SnackbarMessage';\nimport { extractFavorite } from '../components/Item/VisualizationItem/plugin';\n\nimport {\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_REPORT,\n    EVENT_CHART,\n    MESSAGES,\n} from '../modules/itemTypes';\nimport { orObject } from '../modules/util';\n\n// actions\n\nexport const acSetSelectedId = value => ({\n    type: SET_SELECTED_ID,\n    value,\n});\n\nexport const acSetSelectedIsLoading = value => ({\n    type: SET_SELECTED_ISLOADING,\n    value,\n});\n\nexport const acSetSelectedShowDescription = value => ({\n    type: SET_SELECTED_SHOWDESCRIPTION,\n    value,\n});\n\nexport const tLoadDashboard = id => async dispatch => {\n    try {\n        const dash = await apiFetchDashboard(id);\n\n        dispatch(acAppendDashboards(dash));\n\n        return Promise.resolve(dash);\n    } catch (err) {\n        console.log('Error: ', err);\n        return err;\n    }\n};\n\n// thunks\nexport const tSetSelectedDashboardById = id => async (dispatch, getState) => {\n    dispatch(acSetSelectedIsLoading(true));\n\n    const snackbarTimeout = setTimeout(() => {\n        const dashboardName = orObject(sGetDashboardById(getState(), id))\n            .displayName;\n        if (sGetSelectedIsLoading(getState()) && dashboardName) {\n            loadingDashboardMsg.name = dashboardName;\n\n            dispatch(\n                acReceivedSnackbarMessage({\n                    message: loadingDashboardMsg,\n                    open: true,\n                })\n            );\n        }\n    }, 500);\n\n    const onSuccess = selected => {\n        const customDashboard = getCustomDashboards(selected)[0];\n\n        dispatch(\n            acSetDashboardItems(withShape(customDashboard.dashboardItems))\n        );\n\n        storePreferredDashboardId(sGetUserUsername(getState()), id);\n\n        // add visualizations to store\n        customDashboard.dashboardItems.forEach(item => {\n            switch (item.type) {\n                case REPORT_TABLE:\n                case CHART:\n                case MAP:\n                case EVENT_REPORT:\n                case EVENT_CHART:\n                    dispatch(acAddVisualization(extractFavorite(item)));\n                    break;\n                case MESSAGES:\n                    dispatch(tGetMessages(id));\n                    break;\n                default:\n                    break;\n            }\n        });\n\n        const state = getState();\n        if (id === sGetSelectedId(state)) {\n            if (sGetIsEditing(state)) {\n                // disable filters when switching to edit mode\n                dispatch(acClearItemFilters());\n            } else {\n                // enable filters when switching to view mode\n                dispatch(acSetItemFilters(sGetEditItemFiltersRoot(state)));\n            }\n        } else {\n            // clear filters when switching dashboard\n            dispatch(acClearEditItemFilters());\n            dispatch(acClearItemFilters());\n        }\n\n        dispatch(acSetSelectedId(id));\n\n        dispatch(acSetSelectedIsLoading(false));\n\n        clearTimeout(snackbarTimeout);\n\n        dispatch(acCloseSnackbar());\n\n        return selected;\n    };\n\n    const onError = error => {\n        console.log('Error: ', error);\n        return error;\n    };\n\n    try {\n        const selected = await dispatch(tLoadDashboard(id));\n\n        return onSuccess(selected);\n    } catch (err) {\n        return onError(err);\n    }\n};\n","export const getPreferredDashboardId = username =>\n    localStorage.getItem(`dhis2.dashboard.current.${username}`) || undefined;\n\nexport const storePreferredDashboardId = (username, dashboardId) => {\n    localStorage.setItem(`dhis2.dashboard.current.${username}`, dashboardId);\n};\n","import { RECEIVED_MESSAGES } from '../../../reducers/messages';\nimport { getMessages } from '../../../api/messages';\n\nconst onError = (action, error) => {\n    console.log(`Error in action ${action}: ${error}`);\n    return error;\n};\n\nexport const receivedMessages = value => ({\n    type: RECEIVED_MESSAGES,\n    value,\n});\n\nexport const tGetMessages = () => async dispatch => {\n    try {\n        const messages = await getMessages();\n        const { messageConversations } = messages;\n\n        return dispatch(receivedMessages(messageConversations));\n    } catch (err) {\n        return onError('Get Messages', err);\n    }\n};\n","import { getInstance } from 'd2';\n\nconst onError = error => console.log('Error: ', error);\n\nconst saveDashboard = (dashboard, data) => {\n    const { name, description, dashboardItems } = data;\n\n    dashboard.name = name;\n    dashboard.description = description;\n    dashboard.dashboardItems = dashboardItems.map(item =>\n        Object.assign({}, item, { width: item.w, height: item.h })\n    );\n\n    return dashboard.save().then(msg => msg.response.uid);\n};\n\nexport const updateDashboard = data => {\n    return getInstance()\n        .then(d2 => {\n            return d2.models.dashboards\n                .get(data.id)\n                .then(dashboard => saveDashboard(dashboard, data));\n        })\n        .catch(onError);\n};\n\nexport const postDashboard = data => {\n    return getInstance().then(d2 => {\n        const dashboard = d2.models.dashboards.create();\n\n        return saveDashboard(dashboard, data);\n    });\n};\n","import { generateUid } from 'd2/uid';\n\nimport {\n    RECEIVED_EDIT_DASHBOARD,\n    START_NEW_DASHBOARD,\n    RECEIVED_NOT_EDITING,\n    RECEIVED_TITLE,\n    RECEIVED_DESCRIPTION,\n    RECEIVED_DASHBOARD_LAYOUT,\n    ADD_DASHBOARD_ITEM,\n    UPDATE_DASHBOARD_ITEM,\n    REMOVE_DASHBOARD_ITEM,\n} from '../reducers/editDashboard';\nimport { sGetEditDashboardRoot } from '../reducers/editDashboard';\nimport { updateDashboard, postDashboard } from '../api/editDashboard';\nimport { tSetSelectedDashboardById } from '../actions/selected';\nimport { NEW_ITEM_SHAPE } from '../components/ItemGrid/gridUtil';\nimport { itemTypeMap } from '../modules/itemTypes';\nimport { convertUiItemsToBackend } from '../modules/uiBackendItemConverter';\n\nconst onError = error => {\n    console.log('Error (Saving Dashboard): ', error);\n    return error;\n};\n\n// actions\n\nexport const acSetEditDashboard = (dashboard, items) => {\n    const val = {\n        ...dashboard,\n        dashboardItems: items,\n    };\n\n    return {\n        type: RECEIVED_EDIT_DASHBOARD,\n        value: val,\n    };\n};\n\nexport const acSetEditNewDashboard = () => ({\n    type: START_NEW_DASHBOARD,\n});\n\nexport const acClearEditDashboard = () => ({\n    type: RECEIVED_NOT_EDITING,\n});\n\nexport const acSetDashboardTitle = value => ({\n    type: RECEIVED_TITLE,\n    value,\n});\n\nexport const acSetDashboardDescription = value => ({\n    type: RECEIVED_DESCRIPTION,\n    value,\n});\n\nexport const acUpdateDashboardLayout = value => ({\n    type: RECEIVED_DASHBOARD_LAYOUT,\n    value,\n});\n\nexport const acAddDashboardItem = item => {\n    const type = item.type;\n    delete item.type;\n    const itemPropName = itemTypeMap[type].propName;\n\n    return {\n        type: ADD_DASHBOARD_ITEM,\n        value: {\n            id: generateUid(),\n            type,\n            [itemPropName]: item.content,\n            ...NEW_ITEM_SHAPE,\n        },\n    };\n};\n\nexport const acUpdateDashboardItem = item => ({\n    type: UPDATE_DASHBOARD_ITEM,\n    value: item,\n});\n\nexport const acRemoveDashboardItem = value => ({\n    type: REMOVE_DASHBOARD_ITEM,\n    value,\n});\n\n// thunks\n\nexport const tSaveDashboard = () => async (dispatch, getState) => {\n    const dashboard = sGetEditDashboardRoot(getState());\n\n    const dashboardToSave = {\n        ...dashboard,\n        dashboardItems: convertUiItemsToBackend(dashboard.dashboardItems),\n    };\n\n    try {\n        const dashboardId = dashboardToSave.id\n            ? await updateDashboard(dashboardToSave)\n            : await postDashboard(dashboardToSave);\n\n        dispatch(acClearEditDashboard());\n        await dispatch(tSetSelectedDashboardById(dashboardId));\n\n        return Promise.resolve(dashboardId);\n    } catch (error) {\n        onError(error);\n    }\n};\n","import {\n    SET_DASHBOARDS,\n    ADD_DASHBOARDS,\n    SET_DASHBOARD_STARRED,\n    SET_DASHBOARD_DISPLAY_NAME,\n    SET_DASHBOARD_ITEMS,\n} from '../reducers/dashboards';\nimport {\n    getCustomDashboards,\n    sGetDashboardById,\n    sGetDashboardsSortedByStarred,\n} from '../reducers/dashboards';\nimport { sGetUserUsername } from '../reducers/user';\nimport { tSetSelectedDashboardById, acSetSelectedId } from './selected';\nimport { acClearEditDashboard } from './editDashboard';\nimport {\n    apiFetchDashboards,\n    apiStarDashboard,\n    apiDeleteDashboard,\n} from '../api/dashboards';\nimport { getPreferredDashboardId } from '../api/localStorage';\nimport { arrayToIdMap } from '../modules/util';\n\n// actions\n\nexport const acSetDashboards = dashboards => ({\n    type: SET_DASHBOARDS,\n    value: arrayToIdMap(getCustomDashboards(dashboards)),\n});\n\nexport const acAppendDashboards = dashboards => ({\n    type: ADD_DASHBOARDS,\n    value: arrayToIdMap(getCustomDashboards(dashboards)),\n});\n\nexport const acSetDashboardStarred = (dashboardId, isStarred) => ({\n    type: SET_DASHBOARD_STARRED,\n    dashboardId: dashboardId,\n    value: isStarred,\n});\n\nexport const acSetDashboardDisplayName = (dashboardId, value) => ({\n    type: SET_DASHBOARD_DISPLAY_NAME,\n    dashboardId,\n    value,\n});\n\nexport const acSetDashboardItems = value => ({\n    type: SET_DASHBOARD_ITEMS,\n    value,\n});\n\n// thunks\n\nexport const tFetchDashboards = () => async dispatch => {\n    const collection = await apiFetchDashboards();\n    dispatch(acSetDashboards(collection.toArray()));\n};\n\nexport const tSelectDashboard = id => async (dispatch, getState) => {\n    const onError = error => {\n        console.log('Error (apiFetchDashboards): ', error);\n        return error;\n    };\n\n    try {\n        const state = getState();\n\n        let dashboardToSelect = null;\n        if (id) {\n            dashboardToSelect = sGetDashboardById(state, id) || null;\n        } else {\n            const preferredId = getPreferredDashboardId(\n                sGetUserUsername(state)\n            );\n            const dash = sGetDashboardById(state, preferredId);\n            dashboardToSelect =\n                preferredId && dash\n                    ? dash\n                    : sGetDashboardsSortedByStarred(state)[0];\n        }\n\n        if (dashboardToSelect) {\n            dispatch(tSetSelectedDashboardById(dashboardToSelect.id));\n        } else {\n            dispatch(acSetSelectedId());\n        }\n    } catch (err) {\n        return onError(err);\n    }\n};\n\nexport const tStarDashboard = (id, isStarred) => async dispatch => {\n    const onSuccess = id => {\n        dispatch(acSetDashboardStarred(id, isStarred));\n        return id;\n    };\n\n    const onError = error => {\n        console.log('Error (apiStarDashboard): ', error);\n        return error;\n    };\n    try {\n        await apiStarDashboard(id, isStarred);\n        return onSuccess(id);\n    } catch (err) {\n        return onError(err);\n    }\n};\n\nexport const tDeleteDashboard = id => async dispatch => {\n    try {\n        await apiDeleteDashboard(id);\n        dispatch(acClearEditDashboard());\n        dispatch(acSetSelectedId());\n        dispatch(acSetDashboardItems([]));\n\n        await dispatch(tFetchDashboards());\n\n        return Promise.resolve();\n    } catch (err) {\n        console.log('Error (deleteDashboard): ', err);\n        return err;\n    }\n};\n","/** @module reducers/controlBar */\nimport { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\n\nexport const SET_CONTROLBAR_USER_ROWS = 'SET_CONTROLBAR_USER_ROWS';\n\nexport const DEFAULT_STATE_CONTROLBAR_ROWS = 1;\n\nconst userRows = (state = DEFAULT_STATE_CONTROLBAR_ROWS, action) => {\n    switch (action.type) {\n        case SET_CONTROLBAR_USER_ROWS:\n            return validateReducer(action.value, DEFAULT_STATE_CONTROLBAR_ROWS);\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    userRows,\n});\n\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\nexport const sGetControlBarRoot = state => state.controlBar;\n\n// Selector dependency level 2\n\nexport const sGetControlBarUserRows = state =>\n    sGetControlBarRoot(state).userRows;\n","import { getInstance } from 'd2';\nimport { DEFAULT_STATE_CONTROLBAR_ROWS } from '../reducers/controlBar';\n\nconst NAMESPACE = 'dashboard';\nconst KEY = 'controlBarRows';\n\nconst hasNamespace = async d2 => await d2.currentUser.dataStore.has(NAMESPACE);\n\nconst getNamespace = async (d2, hasNamespace) =>\n    hasNamespace\n        ? await d2.currentUser.dataStore.get(NAMESPACE)\n        : await d2.currentUser.dataStore.create(NAMESPACE);\n\nexport const apiGetControlBarRows = async () => {\n    const d2 = await getInstance();\n    const namespace = await getNamespace(d2, await hasNamespace(d2));\n    const hasKey = namespace.keys && namespace.keys.find(key => key === KEY);\n\n    if (hasKey) {\n        return await namespace.get(KEY);\n    } else {\n        await apiPostControlBarRows(DEFAULT_STATE_CONTROLBAR_ROWS, namespace);\n        console.log(\n            '(These errors to /userDataStore/dashboard can be ignored)'\n        );\n        return DEFAULT_STATE_CONTROLBAR_ROWS;\n    }\n};\n\nexport const apiPostControlBarRows = async (rows, namespace) => {\n    const d2 = await getInstance();\n    const ns = namespace || (await getNamespace(d2, hasNamespace));\n\n    ns.set(KEY, rows);\n};\n","import { SET_CONTROLBAR_USER_ROWS } from '../reducers/controlBar';\nimport { apiGetControlBarRows } from '../api/controlBar';\n\n// actions\n\nexport const acSetControlBarUserRows = rows => ({\n    type: SET_CONTROLBAR_USER_ROWS,\n    value: rows,\n});\n\n// thunks\n\nexport const tSetControlBarRows = () => async dispatch => {\n    const onSuccess = rows => {\n        dispatch(acSetControlBarUserRows(rows));\n    };\n\n    const onError = error => {\n        console.log('Error (apiGetControlBarRows): ', error);\n        return error;\n    };\n\n    try {\n        const controlBarRows = await apiGetControlBarRows();\n        return onSuccess(controlBarRows);\n    } catch (err) {\n        return onError(err);\n    }\n};\n","import {\n    getDimensionById,\n    DIMENSION_ID_PERIOD,\n    DIMENSION_ID_ORGUNIT,\n} from '@dhis2/analytics';\n\nexport const SET_DIMENSIONS = 'SET_DIMENSIONS';\nexport const DEFAULT_DIMENSIONS = [\n    getDimensionById(DIMENSION_ID_PERIOD),\n    getDimensionById(DIMENSION_ID_ORGUNIT),\n];\n\nexport default (state = DEFAULT_DIMENSIONS, action) => {\n    switch (action.type) {\n        case SET_DIMENSIONS: {\n            return [...DEFAULT_DIMENSIONS, ...action.value];\n        }\n        default:\n            return state;\n    }\n};\n\nexport const sGetDimensions = state => state.dimensions;\n","export const SET_SETTINGS = 'SET_SETTINGS';\nexport const ADD_SETTINGS = 'ADD_SETTINGS';\n\nexport const DEFAULT_SETTINGS = {\n    keyDateFormat: 'yyyy-MM-dd',\n    keyAnalysisRelativePeriod: 'LAST_12_MONTHS',\n    keyAnalysisDigitGroupSeparator: 'SPACE',\n    displayNameProperty: 'displayName',\n    uiLocale: 'en',\n    rootOrganisationUnit: {},\n};\n\nexport default (state = DEFAULT_SETTINGS, action) => {\n    switch (action.type) {\n        case SET_SETTINGS: {\n            return Object.assign({}, action.value);\n        }\n        case ADD_SETTINGS: {\n            return {\n                ...state,\n                ...action.value,\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// Selectors\n\nexport const sGetSettings = state => state.settings;\n\nexport const sGetSettingsDisplayNameProperty = state =>\n    sGetSettings(state).displayNameProperty;\n\nexport const sGetRootOrgUnit = state =>\n    sGetSettings(state).rootOrganisationUnit;\n\nexport const sGetRelativePeriod = state =>\n    sGetSettings(state).keyAnalysisRelativePeriod;\n\nexport const sGetUiLocale = state => sGetSettings(state).uiLocale;\n","import { SET_DIMENSIONS } from '../reducers/dimensions';\nimport { apiFetchDimensions } from '@dhis2/analytics';\nimport { sGetSettingsDisplayNameProperty } from '../reducers/settings';\n\nexport const acSetDimensions = dimensions => ({\n    type: SET_DIMENSIONS,\n    value: dimensions,\n});\n\nexport const tSetDimensions = d2 => async (dispatch, getState) => {\n    const onSuccess = dimensions => {\n        dispatch(acSetDimensions(dimensions));\n    };\n\n    const onError = error => {\n        console.log('Error (apiFetchDimensions): ', error);\n        return error;\n    };\n\n    try {\n        const displayNameProp = sGetSettingsDisplayNameProperty(getState());\n        const dimensions = await apiFetchDimensions(d2, displayNameProp);\n\n        // filter out CATEGORY that are not of type ATTRIBUTE\n        const filteredDimensions = dimensions.filter(\n            dim =>\n                dim.dimensionType !== 'CATEGORY' ||\n                (dim.dimensionType === 'CATEGORY' &&\n                    dim.dataDimensionType === 'ATTRIBUTE')\n        );\n        return onSuccess(filteredDimensions);\n    } catch (err) {\n        return onError(err);\n    }\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\n\nimport classes from './styles/ShowMoreButton.module.css';\n\nexport const SHOWMORE_BAR_HEIGHT = 16;\n\nexport const ShowMoreButton = ({ onClick, isMaxHeight, disabled }) => {\n    return (\n        <div style={{ textAlign: 'center' }}>\n            {disabled ? (\n                <div className={classes.disabled}>{i18n.t('Show more')}</div>\n            ) : (\n                <div className={classes.showMore} onClick={onClick}>\n                    {isMaxHeight ? i18n.t('Show less') : i18n.t('Show more')}\n                </div>\n            )}\n        </div>\n    );\n};\n\nShowMoreButton.propTypes = {\n    disabled: PropTypes.bool,\n    isMaxHeight: PropTypes.bool,\n    onClick: PropTypes.func,\n};\n\nexport default ShowMoreButton;\n","import { SHOWMORE_BAR_HEIGHT } from './ShowMoreButton';\n\nexport const CONTROL_BAR_ROW_HEIGHT = 40;\nexport const FIRST_ROW_PADDING_HEIGHT = 10;\nexport const MIN_ROW_COUNT = 1;\n\nexport const HEADERBAR_HEIGHT = 48;\n\nconst CONTROL_BAR_OUTER_HEIGHT_DIFF =\n    FIRST_ROW_PADDING_HEIGHT + SHOWMORE_BAR_HEIGHT - 2; // 2 pixel \"adjustment\"\n\nexport const getRowsHeight = rows => {\n    return rows * CONTROL_BAR_ROW_HEIGHT;\n};\n\nexport const getNumRowsFromHeight = height => {\n    return Math.floor(\n        (height - CONTROL_BAR_OUTER_HEIGHT_DIFF) / CONTROL_BAR_ROW_HEIGHT\n    );\n};\n\nexport const getTopOffset = rows => {\n    return HEADERBAR_HEIGHT + getControlBarHeight(rows, false);\n};\n\nexport const getControlBarHeight = rows => {\n    return getRowsHeight(rows) + CONTROL_BAR_OUTER_HEIGHT_DIFF;\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { colors } from '@dhis2/ui-core';\nimport { HEADERBAR_HEIGHT } from './controlBarDimensions';\n\nimport classes from './styles/ControlBar.module.css';\n\nconst DRAG_HANDLE_HEIGHT = 7;\n\nclass ControlBar extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            dragging: false,\n        };\n    }\n\n    onStartDrag = () => {\n        this.setState({ dragging: true });\n        window.addEventListener('mousemove', this.onDrag);\n        window.addEventListener('mouseup', this.onEndDrag);\n    };\n\n    onDrag = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const newHeight = event.clientY;\n\n        if (\n            this.props.onChangeHeight &&\n            newHeight !== this.props.height &&\n            newHeight > 0\n        ) {\n            requestAnimationFrame(() => {\n                this.props.onChangeHeight(newHeight);\n            });\n        }\n    };\n\n    onEndDrag = () => {\n        this.setState({ dragging: false });\n        window.removeEventListener('mousemove', this.onDrag);\n        window.removeEventListener('mouseup', this.onEndDrag);\n\n        if (this.props.onEndDrag) {\n            this.props.onEndDrag();\n        }\n    };\n\n    renderDragHandle() {\n        return typeof this.props.onChangeHeight === 'function' ? (\n            <div\n                className={classes.draghandle}\n                style={{ height: DRAG_HANDLE_HEIGHT }}\n                onMouseDown={this.onStartDrag}\n            />\n        ) : null;\n    }\n\n    render() {\n        const height = Math.max(this.props.height, 0) + DRAG_HANDLE_HEIGHT;\n\n        const rootStyle = Object.assign(\n            {\n                height,\n                top: HEADERBAR_HEIGHT,\n                backgroundColor: this.props.editMode\n                    ? colors.yellow050\n                    : colors.white,\n                paddingBottom: DRAG_HANDLE_HEIGHT,\n            },\n            // Disable animations while dragging\n            this.state.dragging ? { transition: 'none' } : {}\n        );\n\n        return (\n            <div style={rootStyle} className={classes.root}>\n                <div className={classes.content}>{this.props.children}</div>\n                {this.renderDragHandle()}\n            </div>\n        );\n    }\n}\n\nControlBar.propTypes = {\n    /**\n     * The height of the control bar in number of lines. Must be a positive integer.\n     */\n    children: PropTypes.node.isRequired,\n\n    /**\n     * If true, the background color of the control bar changes to indicate that edit mode is active.\n     */\n    editMode: PropTypes.bool.isRequired,\n\n    /**\n     * Callback function that is called when the control bar is resized.\n     * The callback receives one argument: The new height in pixels.\n     *\n     * If no callback is specified the control bar will not have a drag handle.\n     */\n    height: PropTypes.number.isRequired,\n\n    /**\n     * Callback function that is called when the control bar is dropped after being dragged.\n     * The callback receives one argument: The new height in pixels.\n     *\n     * Ignored if no \"onChangeHeight\" function is provided.\n     */\n    onChangeHeight: PropTypes.func,\n\n    /**\n     * The contents of the control bar.\n     */\n    onEndDrag: PropTypes.func,\n};\n\nControlBar.defaultProps = {\n    onChangeHeight: null,\n    onEndDrag: null,\n};\n\nexport default ControlBar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst StarIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>\n);\n\nStarIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default StarIcon;\n","import { getInstance } from 'd2';\n\nexport const apiPostDataStatistics = async (eventType, id) => {\n    const d2 = await getInstance();\n    const url = `dataStatistics?eventType=${eventType}&favorite=${id}`;\n\n    d2.Api.getApi().post(url);\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Chip } from '@dhis2/ui-core';\nimport { Link } from 'react-router-dom';\nimport debounce from 'lodash/debounce';\n\nimport StarIcon from '../../icons/Star';\nimport { apiPostDataStatistics } from '../../api/dataStatistics';\n\nimport classes from './styles/DashboardItemChip.module.css';\n\nexport const DashboardItemChip = ({\n    starred,\n    selected,\n    label,\n    dashboardId,\n}) => {\n    const chipProps = {\n        selected,\n        className: classes.chip,\n    };\n\n    if (starred) {\n        const selectedState = selected ? classes.selected : classes.unselected;\n        chipProps.icon = (\n            <StarIcon className={`${classes.icon} ${selectedState}`} />\n        );\n    }\n\n    return (\n        <Link\n            className={classes.link}\n            to={`/${dashboardId}`}\n            onClick={debounce(\n                () => apiPostDataStatistics('DASHBOARD_VIEW', dashboardId),\n                500\n            )}\n        >\n            <Chip {...chipProps}>{label}</Chip>\n        </Link>\n    );\n};\n\nDashboardItemChip.propTypes = {\n    dashboardId: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    selected: PropTypes.bool.isRequired,\n    starred: PropTypes.bool.isRequired,\n    classes: PropTypes.object,\n};\n\nexport default DashboardItemChip;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\n\nconst AddCircleIcon = () => (\n    <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"32\"\n        height=\"32\"\n        fill={colors.teal600}\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm4 11h-3v3c0 .55-.45 1-1 1s-1-.45-1-1v-3H8c-.55 0-1-.45-1-1s.45-1 1-1h3V8c0-.55.45-1 1-1s1 .45 1 1v3h3c.55 0 1 .45 1 1s-.45 1-1 1z\" />\n    </svg>\n);\n\nexport default AddCircleIcon;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nconst ClearIcon = ({ className }) => (\n    <svg\n        className={className}\n        fill={colors.grey800}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>\n);\n\nClearIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default ClearIcon;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ClearIcon from '../../icons/Clear';\n\nimport classes from './styles/ClearButton.module.css';\n\nexport const ClearButton = ({ onClear }) => (\n    <button className={classes.button} onClick={onClear}>\n        <span>\n            <ClearIcon className={classes.icon} color=\"action\" />\n        </span>\n    </button>\n);\n\nClearButton.propTypes = {\n    onClear: PropTypes.func.isRequired,\n};\n\nexport default ClearButton;\n","import { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\n\nexport const SET_DASHBOARDS_FILTER_NAME = 'SET_DASHBOARDS_FILTER_NAME';\nexport const SET_DASHBOARDS_FILTER_OWNER = 'SET_DASHBOARDS_FILTER_OWNER';\nexport const SET_DASHBOARDS_FILTER_ORDER = 'SET_DASHBOARDS_FILTER_ORDER';\n\nexport const ownerData = [\n    { id: 'ALL', value: 'All users' },\n    { id: 'ME', value: 'Created by me' },\n    { id: 'OTHERS', value: 'Created by others' },\n];\n\nexport const orderData = [\n    { id: 'NAME:ASC', value: 'Name (asc)' },\n    { id: 'NAME:ASC', value: 'Name (desc)' },\n    { id: 'ITEMS:ASC', value: 'Number of items (asc)' },\n    { id: 'ITEMS:ASC', value: 'Number of items (desc)' },\n    { id: 'CREATED:ASC', value: 'Created date (asc)' },\n    { id: 'CREATED:ASC', value: 'Created date (desc)' },\n];\n\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_NAME = '';\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_OWNER = ownerData[0].id;\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_ORDER = orderData[0].id;\n\nconst name = (state = DEFAULT_STATE_DASHBOARDS_FILTER_NAME, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_NAME:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_NAME\n            );\n        default:\n            return state;\n    }\n};\n\nconst owner = (state = DEFAULT_STATE_DASHBOARDS_FILTER_OWNER, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_OWNER:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_NAME\n            );\n        default:\n            return state;\n    }\n};\n\nconst order = (state = DEFAULT_STATE_DASHBOARDS_FILTER_ORDER, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_ORDER:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_ORDER\n            );\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    name,\n    owner,\n    order,\n});\n\n// selectors\n\nexport const sGetDashboardsFilterRoot = state => state.dashboardsFilter;\n\n// selector dependency level 2\n\nexport const sGetFilterName = state => sGetDashboardsFilterRoot(state).name;\nexport const sGetFilterOwner = state => sGetDashboardsFilterRoot(state).owner;\nexport const sGetFilterOrder = state => sGetDashboardsFilterRoot(state).order;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport InputField from '@material-ui/core/Input';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport SearchIcon from '@material-ui/icons/Search';\n\nimport ClearButton from './ClearButton';\nimport { DEFAULT_STATE_DASHBOARDS_FILTER_NAME } from '../../reducers/dashboardsFilter';\n\nimport classes from './styles/Filter.module.css';\n\nexport const KEYCODE_ENTER = 13;\nexport const KEYCODE_ESCAPE = 27;\n\nexport class Filter extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            value: DEFAULT_STATE_DASHBOARDS_FILTER_NAME,\n        };\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setState({\n            value: nextProps.name,\n        });\n    }\n\n    setFilterValue = event => {\n        event.preventDefault();\n\n        this.props.onChangeName(event.target.value);\n    };\n\n    handleKeyUp = event => {\n        switch (event.keyCode) {\n            case KEYCODE_ENTER:\n                this.props.onKeypressEnter();\n                break;\n            case KEYCODE_ESCAPE:\n                this.props.onChangeName();\n                break;\n            default:\n                break;\n        }\n    };\n\n    render() {\n        const { name, onChangeName } = this.props;\n\n        const startAdornment = (\n            <InputAdornment position=\"start\">\n                <SearchIcon className={classes.searchIcon} />\n            </InputAdornment>\n        );\n\n        const endAdornment =\n            name !== '' && name !== null ? (\n                <InputAdornment position=\"end\">\n                    <ClearButton onClear={() => onChangeName()} />\n                </InputAdornment>\n            ) : null;\n\n        return (\n            <InputField\n                className={classes.filterField}\n                placeholder={i18n.t('Search for a dashboard')}\n                startAdornment={startAdornment}\n                endAdornment={endAdornment}\n                value={this.state.value}\n                onChange={this.setFilterValue}\n                onKeyUp={this.handleKeyUp}\n            />\n        );\n    }\n}\n\nFilter.propTypes = {\n    name: PropTypes.string,\n    onChangeName: PropTypes.func,\n    onKeypressEnter: PropTypes.func,\n};\n\nFilter.defaultProps = {\n    name: '',\n    onChangeName: Function.prototype,\n};\n\nexport default Filter;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport ControlBar from './ControlBar';\nimport arraySort from 'd2-utilizr/lib/arraySort';\nimport PropTypes from 'prop-types';\n\nimport Chip from './DashboardItemChip';\nimport AddCircleIcon from '../../icons/AddCircle';\nimport Filter from './Filter';\nimport ShowMoreButton from './ShowMoreButton';\nimport {\n    FIRST_ROW_PADDING_HEIGHT,\n    MIN_ROW_COUNT,\n    getRowsHeight,\n    getControlBarHeight,\n    getNumRowsFromHeight,\n} from './controlBarDimensions';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { sGetAllDashboards } from '../../reducers/dashboards';\nimport { sGetFilterName } from '../../reducers/dashboardsFilter';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { acSetControlBarUserRows } from '../../actions/controlBar';\nimport { acSetFilterName } from '../../actions/dashboardsFilter';\nimport { orObject, orArray } from '../../modules/util';\nimport { apiPostControlBarRows } from '../../api/controlBar';\n\nimport classes from './styles/DashboardsBar.module.css';\n\nexport const MAX_ROW_COUNT = 10;\n\nexport class DashboardsBar extends Component {\n    state = {\n        rows: MIN_ROW_COUNT,\n    };\n\n    setInitialDashboardState = rows => {\n        this.setState({ rows, isMaxHeight: rows === MAX_ROW_COUNT });\n    };\n\n    componentDidMount() {\n        this.setInitialDashboardState(this.props.userRows);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setInitialDashboardState(nextProps.userRows);\n    }\n\n    onChangeHeight = newHeight => {\n        const adjustedHeight = newHeight - 52; // don't rush the transition to a bigger row count\n        const newRows = Math.max(\n            MIN_ROW_COUNT,\n            getNumRowsFromHeight(adjustedHeight)\n        );\n\n        if (newRows !== this.state.rows) {\n            const newRowCount = Math.min(newRows, MAX_ROW_COUNT);\n\n            this.props.onChangeHeight(newRowCount);\n        }\n    };\n\n    onEndDrag = () => {\n        return apiPostControlBarRows(this.state.rows);\n    };\n\n    onToggleMaxHeight = () => {\n        const rows =\n            this.state.rows === MAX_ROW_COUNT\n                ? this.props.userRows\n                : MAX_ROW_COUNT;\n\n        this.setState({ rows, isMaxHeight: !this.state.isMaxHeight });\n    };\n\n    onSelectDashboard = () => {\n        this.props.history.push(`/${this.props.dashboards[0].id}`);\n    };\n\n    render() {\n        const { dashboards, name, selectedId, onChangeFilterName } = this.props;\n\n        const rowCount = this.state.isMaxHeight\n            ? MAX_ROW_COUNT\n            : this.state.rows;\n        const controlBarHeight = getControlBarHeight(rowCount);\n        const contentWrapperStyle = {\n            padding: `${FIRST_ROW_PADDING_HEIGHT}px 6px 0 6px`,\n            overflowY: this.state.isMaxHeight ? 'auto' : 'hidden',\n            height: getRowsHeight(rowCount) + FIRST_ROW_PADDING_HEIGHT,\n        };\n\n        return (\n            <ControlBar\n                height={controlBarHeight}\n                onChangeHeight={this.onChangeHeight}\n                onEndDrag={this.onEndDrag}\n                editMode={false}\n            >\n                <div style={contentWrapperStyle}>\n                    <div className={classes.leftControls}>\n                        <Link\n                            style={{\n                                display: 'inline-block',\n                                textDecoration: 'none',\n                                marginRight: 10,\n                                position: 'relative',\n                                top: '2px',\n                            }}\n                            to={'/new'}\n                        >\n                            <AddCircleIcon />\n                        </Link>\n                        <Filter\n                            name={name}\n                            onChangeName={onChangeFilterName}\n                            onKeypressEnter={this.onSelectDashboard}\n                        />\n                    </div>\n                    {orArray(dashboards).map(dashboard => (\n                        <Chip\n                            key={dashboard.id}\n                            label={dashboard.displayName}\n                            starred={dashboard.starred}\n                            dashboardId={dashboard.id}\n                            selected={dashboard.id === selectedId}\n                        />\n                    ))}\n                </div>\n                <ShowMoreButton\n                    onClick={this.onToggleMaxHeight}\n                    isMaxHeight={this.state.isMaxHeight}\n                    disabled={this.props.userRows === MAX_ROW_COUNT}\n                />\n            </ControlBar>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    dashboards: sGetAllDashboards(state),\n    name: sGetFilterName(state),\n    userRows: sGetControlBarUserRows(state),\n    selectedId: sGetSelectedId(state),\n});\n\nconst mapDispatchToProps = {\n    onChangeHeight: acSetControlBarUserRows,\n    onChangeFilterName: acSetFilterName,\n};\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const dashboards = Object.values(orObject(stateProps.dashboards));\n    const displayDashboards = arraySort(\n        dashboards.filter(d =>\n            d.displayName.toLowerCase().includes(stateProps.name.toLowerCase())\n        ),\n        'ASC',\n        'displayName'\n    );\n\n    return {\n        ...stateProps,\n        ...ownProps,\n        ...dispatchProps,\n        dashboards: [\n            ...displayDashboards.filter(d => d.starred),\n            ...displayDashboards.filter(d => !d.starred),\n        ],\n    };\n};\n\nDashboardsBar.propTypes = {\n    dashboards: PropTypes.array,\n    history: PropTypes.object,\n    name: PropTypes.string,\n    selectedId: PropTypes.string,\n    userRows: PropTypes.number,\n    onChangeFilterName: PropTypes.func,\n    onChangeHeight: PropTypes.func,\n};\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps,\n        mergeProps\n    )(DashboardsBar)\n);\n","import {\n    SET_DASHBOARDS_FILTER_NAME,\n    SET_DASHBOARDS_FILTER_OWNER,\n    SET_DASHBOARDS_FILTER_ORDER,\n} from '../reducers/dashboardsFilter';\n\n// actions\n\nexport const acSetFilterName = value => ({\n    type: SET_DASHBOARDS_FILTER_NAME,\n    value,\n});\n\nexport const acSetFilterOwner = value => ({\n    type: SET_DASHBOARDS_FILTER_OWNER,\n    value,\n});\n\nexport const acSetFilterOrder = value => ({\n    type: SET_DASHBOARDS_FILTER_ORDER,\n    value,\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport {\n    getTopOffset,\n    MIN_ROW_COUNT,\n} from '../ControlBar/controlBarDimensions';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\n\nconst DashboardVerticalOffset = props => {\n    const rows = props.editMode ? MIN_ROW_COUNT : props.userRows;\n    const marginTop = getTopOffset(rows);\n\n    return <div className=\"page-container-top-margin\" style={{ marginTop }} />;\n};\n\nconst mapStateToProps = state => ({\n    userRows: sGetControlBarUserRows(state),\n});\n\nDashboardVerticalOffset.propTypes = {\n    editMode: PropTypes.bool,\n    userRows: PropTypes.number,\n};\n\nexport default connect(mapStateToProps)(DashboardVerticalOffset);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { MenuItem, colors } from '@dhis2/ui-core';\n\nconst HeaderMenuItem = ({ title }) => (\n    <MenuItem\n        dense\n        key={title}\n        disabled\n        label={\n            <p style={{ color: colors.grey800, fontWeight: '600' }}>{title}</p>\n        }\n    />\n);\n\nHeaderMenuItem.propTypes = {\n    title: PropTypes.string.isRequired,\n};\n\nexport default HeaderMenuItem;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nconst LaunchIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"12\"\n        height=\"12\"\n        fill={colors.grey600}\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z\" />\n    </svg>\n);\n\nLaunchIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default LaunchIcon;\n","import React from 'react';\nimport { MenuItem, colors } from '@dhis2/ui-core';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport { visTypeIcons } from '@dhis2/analytics';\n\nimport { getItemIcon, VISUALIZATION } from '../../modules/itemTypes';\nimport LaunchIcon from '../../icons/Launch';\n\nimport classes from './styles/ContentMenuItem.module.css';\n\nconst LaunchLink = ({ url }) => (\n    <a\n        onClick={e => e.stopPropagation()}\n        className={classes.launchLink}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        href={url}\n    >\n        <LaunchIcon />\n    </a>\n);\n\nLaunchLink.propTypes = {\n    url: PropTypes.string,\n};\n\nconst InsertButton = () => (\n    <button className={classes.buttonInsert}>{i18n.t('Insert')}</button>\n);\n\nconst ContentMenuItem = ({ type, name, onInsert, url, visType }) => {\n    const ItemIcon = getItemIcon(type);\n\n    const renderedItemIcon =\n        type === VISUALIZATION ? (\n            visTypeIcons[visType]\n        ) : (\n            <ItemIcon style={{ fill: colors.grey600 }} />\n        );\n\n    return (\n        <MenuItem\n            dense\n            onClick={onInsert}\n            label={\n                <div className={classes.menuItem}>\n                    <div className={classes.label}>\n                        <span style={{ margin: '6px' }}>\n                            {renderedItemIcon}\n                        </span>\n                        <span>{name}</span>\n                        {url ? <LaunchLink url={url} /> : null}\n                    </div>\n                    <InsertButton />\n                </div>\n            }\n        />\n    );\n};\n\nContentMenuItem.propTypes = {\n    name: PropTypes.string,\n    type: PropTypes.string,\n    url: PropTypes.string,\n    visType: PropTypes.string,\n    onInsert: PropTypes.func,\n};\n\nexport default ContentMenuItem;\n","import i18n from '@dhis2/d2-i18n';\nimport {\n    VISUALIZATION,\n    MAP,\n    EVENT_CHART,\n    EVENT_REPORT,\n    USERS,\n    REPORTS,\n    RESOURCES,\n    APP,\n    MESSAGES,\n    TEXT,\n    SPACER,\n} from '../../modules/itemTypes';\n\nexport const singleItems = [\n    {\n        id: 'additional',\n        header: i18n.t('Additional items'),\n        items: [\n            {\n                type: TEXT,\n                name: i18n.t('Text box'),\n                content: '',\n            },\n            {\n                type: MESSAGES,\n                name: i18n.t('Messages'),\n                content: 'true',\n            },\n            {\n                type: SPACER,\n                name: i18n.t('Spacer'),\n                content: '',\n            },\n        ],\n    },\n];\n\n// categorizedItems are grouped in the item selector menu\nexport const categorizedItems = [\n    VISUALIZATION,\n    MAP,\n    EVENT_REPORT,\n    EVENT_CHART,\n    USERS,\n    REPORTS,\n    RESOURCES,\n    APP,\n];\n\n// listItemTypes are included in a single dashboard item\nexport const listItemTypes = [REPORTS, RESOURCES, USERS];\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { MenuItem, Divider } from '@dhis2/ui-core';\n\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\n\nimport { tAddListItemContent } from './actions';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\nimport { getItemUrl, APP, VISUALIZATION } from '../../modules/itemTypes';\nimport { categorizedItems, listItemTypes } from './selectableItems';\n\nimport classes from './styles/CategorizedMenuGroup.module.css';\n\nclass CategorizedMenuGroup extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seeMore: false,\n        };\n    }\n\n    addItem = item => () => {\n        const { type, acAddDashboardItem, tAddListItemContent } = this.props;\n\n        if (type === APP) {\n            acAddDashboardItem({ type, content: item.key });\n        } else {\n            const newItem = {\n                id: item.id,\n                name: item.displayName || item.name,\n            };\n\n            if (listItemTypes.includes(type)) {\n                tAddListItemContent(type, newItem);\n            } else {\n                acAddDashboardItem({ type, content: newItem });\n            }\n        }\n    };\n\n    toggleSeeMore = () => {\n        this.setState({ seeMore: !this.state.seeMore });\n\n        this.props.onChangeItemsLimit(this.props.type);\n    };\n\n    render() {\n        const { title, type, items, hasMore } = this.props;\n        return (\n            <>\n                <HeaderMenuItem title={title} />\n                {items.map(item => {\n                    const itemUrl = getItemUrl(type, item, this.context.d2);\n                    return (\n                        <ContentMenuItem\n                            key={item.id || item.key}\n                            type={type}\n                            visType={type === VISUALIZATION ? item.type : type}\n                            name={item.displayName || item.name}\n                            onInsert={this.addItem(item)}\n                            url={itemUrl}\n                        />\n                    );\n                })}\n                {hasMore ? (\n                    <MenuItem\n                        dense\n                        key={`showmore${title}`}\n                        onClick={this.toggleSeeMore}\n                        label={\n                            <button className={classes.showMoreButton}>\n                                {this.state.seeMore\n                                    ? i18n.t('Show fewer')\n                                    : i18n.t('Show more')}\n                            </button>\n                        }\n                    />\n                ) : null}\n                <Divider margin=\"8px 0px\" />\n            </>\n        );\n    }\n}\n\nCategorizedMenuGroup.propTypes = {\n    items: PropTypes.array.isRequired,\n    title: PropTypes.string.isRequired,\n    type: PropTypes.oneOf(categorizedItems).isRequired,\n    onChangeItemsLimit: PropTypes.func.isRequired,\n    acAddDashboardItem: PropTypes.func,\n    hasMore: PropTypes.bool,\n    tAddListItemContent: PropTypes.func,\n};\n\nCategorizedMenuGroup.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nexport default connect(\n    null,\n    {\n        acAddDashboardItem,\n        tAddListItemContent,\n    }\n)(CategorizedMenuGroup);\n","import { sGetEditDashboardRoot } from '../../reducers/editDashboard';\nimport { itemTypeMap } from '../../modules/itemTypes';\nimport {\n    acAddDashboardItem,\n    acUpdateDashboardItem,\n} from '../../actions/editDashboard';\n\nexport const tAddListItemContent = (type, content) => (dispatch, getState) => {\n    const state = getState();\n    const listItemType = itemTypeMap[type].propName;\n    const dashboardItems = sGetEditDashboardRoot(state).dashboardItems;\n    const dashboardItemIndex = dashboardItems.findIndex(\n        item => item.type === type\n    );\n    let dashboardItem;\n\n    // Reports/Resources/Users dashboard item type already present in dashboard\n    if (dashboardItemIndex > -1) {\n        dashboardItem = dashboardItems[dashboardItemIndex];\n        dashboardItem[listItemType].push(content);\n\n        dispatch(acUpdateDashboardItem(dashboardItem));\n    } else {\n        dashboardItem = {\n            type: type,\n            content: [content],\n        };\n\n        dispatch(acAddDashboardItem(dashboardItem));\n    }\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\n\nexport const SinglesMenuGroup = ({ acAddDashboardItem, category }) => {\n    const addToDashboard = ({ type, content }) => () => {\n        acAddDashboardItem({ type, content });\n    };\n\n    return (\n        <>\n            <HeaderMenuItem title={category.header} />\n            {category.items.map(item => (\n                <ContentMenuItem\n                    key={item.type}\n                    type={item.type}\n                    name={item.name}\n                    onInsert={addToDashboard(item)}\n                />\n            ))}\n        </>\n    );\n};\n\nSinglesMenuGroup.propTypes = {\n    acAddDashboardItem: PropTypes.func,\n    category: PropTypes.object,\n};\n\nexport default connect(\n    null,\n    { acAddDashboardItem }\n)(SinglesMenuGroup);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport Popover from '@material-ui/core/Popover';\nimport { InputField, Menu } from '@dhis2/ui-core';\n\nimport CategorizedMenuGroup from './CategorizedMenuGroup';\nimport SinglesMenuGroup from './SinglesMenuGroup';\nimport { singleItems, categorizedItems } from './selectableItems';\nimport { itemTypeMap, getDefaultItemCount } from '../../modules/itemTypes';\n\nimport './styles/ItemSelector.css';\n\nconst ItemSearchField = props => (\n    <InputField\n        name=\"Dashboard item search\"\n        label={i18n.t('Search for items to add to this dashboard')}\n        type=\"text\"\n        onChange={props.onChange}\n        onFocus={props.onFocus}\n        value={props.value}\n    />\n);\n\nclass ItemSelector extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n            open: false,\n            maxOptions: new Set(),\n            items: undefined,\n            filter: '',\n        };\n    }\n\n    closeList = () => {\n        this.setState({ open: false, filter: '' });\n    };\n\n    openList = (_, event) => {\n        this.fetchItems();\n\n        this.setState({\n            anchorEl: event.currentTarget,\n            open: true,\n        });\n    };\n\n    setFilter = (_, event) => {\n        this.setState({ filter: event.target.value }, this.fetchItems);\n    };\n\n    getCategorizedMenuGroups = () =>\n        categorizedItems\n            .filter(type => {\n                const itemType = itemTypeMap[type];\n                return (\n                    this.state.items && this.state.items[itemType.endPointName]\n                );\n            })\n            .map(type => {\n                const itemType = itemTypeMap[type];\n                const itemCount = getDefaultItemCount(type);\n                const allItems = this.state.items[itemType.endPointName];\n                const hasMore = allItems.length > itemCount;\n                const items = this.state.maxOptions.has(itemType.id)\n                    ? allItems\n                    : allItems.slice(0, itemCount);\n\n                return (\n                    <CategorizedMenuGroup\n                        key={type}\n                        type={type}\n                        title={itemType.pluralTitle}\n                        items={items}\n                        onChangeItemsLimit={this.fetchItems}\n                        hasMore={hasMore}\n                    />\n                );\n            });\n\n    getSinglesMenuGroups = () =>\n        singleItems.map(category => (\n            <SinglesMenuGroup key={category.id} category={category} />\n        ));\n\n    getMenuGroups = () =>\n        this.getCategorizedMenuGroups().concat(this.getSinglesMenuGroups());\n\n    fetchItems = async type => {\n        if (type) {\n            const maxOptions = this.state.maxOptions;\n\n            if (maxOptions.has(type)) {\n                maxOptions.delete(type);\n            } else {\n                maxOptions.add(type);\n            }\n\n            this.setState({ maxOptions });\n        } else {\n            this.setState({\n                maxOptions: new Set(),\n            });\n        }\n\n        let queryString = '?count=11';\n        if ([...this.state.maxOptions.values()].length) {\n            queryString +=\n                '&max=' + [...this.state.maxOptions.values()].join('&max=');\n        }\n\n        const filter = this.state.filter ? `/${this.state.filter}` : '';\n\n        this.context.d2.Api.getApi()\n            .get(`dashboards/q${filter}${queryString}`)\n            .then(response => this.setState({ items: response }))\n            .catch(console.error);\n    };\n\n    render() {\n        return (\n            <>\n                <ItemSearchField\n                    value={this.state.filter}\n                    onChange={this.setFilter}\n                    onFocus={this.openList}\n                />\n                <Popover\n                    className=\"dashboard-item-selector\"\n                    open={this.state.open}\n                    onClose={this.closeList}\n                    anchorEl={this.state.anchorEl}\n                    anchorOrigin={{ horizontal: 'left', vertical: 'bottom' }}\n                    transformOrigin={{ horizontal: 'left', vertical: 'top' }}\n                    style={{ height: '70vh' }}\n                    PaperProps={{ style: { width: '700px' } }}\n                    disableAutoFocus={true}\n                    disableRestoreFocus={true}\n                >\n                    <Menu>{this.getMenuGroups()}</Menu>\n                </Popover>\n            </>\n        );\n    }\n}\n\nItemSearchField.propTypes = {\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n    onFocus: PropTypes.func,\n};\n\nItemSelector.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nexport default ItemSelector;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { InputField, TextAreaField } from '@dhis2/ui-core';\n\nimport ItemSelector from '../ItemSelector/ItemSelector';\nimport {\n    acSetDashboardTitle,\n    acSetDashboardDescription,\n} from '../../actions/editDashboard';\nimport { orObject } from '../../modules/util';\nimport { sGetEditDashboardRoot } from '../../reducers/editDashboard';\n\nimport classes from './styles/EditTitleBar.module.css';\n\nexport const EditTitleBar = ({\n    name,\n    description,\n    onChangeTitle,\n    onChangeDescription,\n}) => {\n    const updateTitle = (_, e) => {\n        onChangeTitle(e.target.value);\n    };\n\n    const updateDescription = (_, e) => {\n        onChangeDescription(e.target.value);\n    };\n\n    return (\n        <section className={classes.section}>\n            <div className={classes.titleDescription}>\n                <InputField\n                    className={classes.title}\n                    name=\"Dashboard title input\"\n                    label={i18n.t('Dashboard title')}\n                    type=\"text\"\n                    onChange={updateTitle}\n                    value={name}\n                />\n                <TextAreaField\n                    className={classes.description}\n                    name=\"Dashboard description input\"\n                    label={i18n.t('Dashboard description')}\n                    onChange={updateDescription}\n                    value={description}\n                />\n            </div>\n            <div className={classes.itemSelector}>\n                <ItemSelector />\n            </div>\n        </section>\n    );\n};\n\nEditTitleBar.propTypes = {\n    onChangeDescription: PropTypes.func.isRequired,\n    onChangeTitle: PropTypes.func.isRequired,\n    description: PropTypes.string,\n    name: PropTypes.string,\n};\n\nEditTitleBar.defaultProps = {\n    name: '',\n    description: '',\n};\n\nconst mapStateToProps = state => {\n    const selectedDashboard = orObject(sGetEditDashboardRoot(state));\n\n    return {\n        name: selectedDashboard.name,\n        description: selectedDashboard.description,\n    };\n};\n\nconst mapDispatchToProps = {\n    onChangeTitle: acSetDashboardTitle,\n    onChangeDescription: acSetDashboardDescription,\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(EditTitleBar);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Button } from '@dhis2/ui-core';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport i18n from '@dhis2/d2-i18n';\n\nimport {\n    PeriodDimension,\n    DynamicDimension,\n    OrgUnitDimension,\n    DIMENSION_ID_PERIOD,\n    DIMENSION_ID_ORGUNIT,\n} from '@dhis2/analytics';\n\nconst peId = DIMENSION_ID_PERIOD;\nconst ouId = DIMENSION_ID_ORGUNIT;\n\nclass FilterDialog extends Component {\n    onConfirm = id => () => this.props.onConfirm(id);\n\n    dialogContent() {\n        const { displayNameProperty, dimension, selectedItems } = this.props;\n        const dialogId = dimension.id;\n\n        const commonProps = {\n            d2: this.context.d2,\n            onSelect: this.props.onSelect,\n            onDeselect: this.props.onDeselect,\n            onReorder: this.props.onReorder,\n        };\n\n        switch (dialogId) {\n            case peId: {\n                return (\n                    <PeriodDimension\n                        selectedPeriods={selectedItems}\n                        {...commonProps}\n                    />\n                );\n            }\n            case ouId:\n                return (\n                    <OrgUnitDimension\n                        displayNameProperty={displayNameProperty}\n                        ouItems={selectedItems}\n                        {...commonProps}\n                    />\n                );\n            default:\n                return (\n                    <DynamicDimension\n                        selectedItems={selectedItems}\n                        dialogId={dialogId}\n                        dialogTitle={dimension.name}\n                        {...commonProps}\n                    />\n                );\n        }\n    }\n\n    render() {\n        const { dimension, onClose } = this.props;\n        const dialogId = dimension.id;\n\n        return (\n            <Dialog\n                open={!!dialogId}\n                maxWidth=\"lg\"\n                disableEnforceFocus\n                onClose={onClose}\n            >\n                {dialogId && this.dialogContent()}\n                <DialogActions>\n                    <Button kind=\"secondary\" onClick={onClose}>\n                        {i18n.t('Cancel')}\n                    </Button>\n                    <Button kind=\"primary\" onClick={this.onConfirm(dialogId)}>\n                        {i18n.t('Confirm')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nFilterDialog.propTypes = {\n    dimension: PropTypes.object,\n    displayNameProperty: PropTypes.string,\n    selectedItems: PropTypes.array,\n    onClose: PropTypes.func,\n    onConfirm: PropTypes.func,\n    onDeselect: PropTypes.func,\n    onReorder: PropTypes.func,\n    onSelect: PropTypes.func,\n};\n\nFilterDialog.contextTypes = {\n    d2: PropTypes.object,\n};\n\nexport default FilterDialog;\n","export const SET_ACTIVE_MODAL_DIMENSION = 'SET_ACTIVE_MODAL_DIMENSION';\nexport const CLEAR_ACTIVE_MODAL_DIMENSION = 'CLEAR_ACTIVE_MODAL_DIMENSION';\n\nexport const DEFAULT_STATE_ACTIVE_MODAL_DIMENSION = {};\n\nexport default (state = DEFAULT_STATE_ACTIVE_MODAL_DIMENSION, action) => {\n    switch (action.type) {\n        case SET_ACTIVE_MODAL_DIMENSION: {\n            return action.value;\n        }\n        case CLEAR_ACTIVE_MODAL_DIMENSION: {\n            return DEFAULT_STATE_ACTIVE_MODAL_DIMENSION;\n        }\n        default:\n            return state;\n    }\n};\n\nexport const sGetActiveModalDimension = state => state.activeModalDimension;\n","import {\n    SET_ACTIVE_MODAL_DIMENSION,\n    CLEAR_ACTIVE_MODAL_DIMENSION,\n} from '../reducers/activeModalDimension';\n\nexport const acSetActiveModalDimension = value => ({\n    type: SET_ACTIVE_MODAL_DIMENSION,\n    value,\n});\n\nexport const acClearActiveModalDimension = () => ({\n    type: CLEAR_ACTIVE_MODAL_DIMENSION,\n});\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Popover from '@material-ui/core/Popover';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport { withTheme } from '@material-ui/core/styles';\n\nimport i18n from '@dhis2/d2-i18n';\nimport { DimensionsPanel } from '@dhis2/analytics';\n\nimport { Button } from '@dhis2/ui-core';\nimport FilterDialog from './FilterDialog';\n\nimport { sGetSettingsDisplayNameProperty } from '../../reducers/settings';\nimport { sGetActiveModalDimension } from '../../reducers/activeModalDimension';\nimport { sGetDimensions } from '../../reducers/dimensions';\nimport { sGetFiltersKeys } from '../../reducers/itemFilters';\nimport { sGetEditItemFiltersRoot } from '../../reducers/editItemFilters';\nimport { acAddItemFilter, acRemoveItemFilter } from '../../actions/itemFilters';\nimport {\n    acRemoveEditItemFilter,\n    acSetEditItemFilters,\n} from '../../actions/editItemFilters';\nimport {\n    acClearActiveModalDimension,\n    acSetActiveModalDimension,\n} from '../../actions/activeModalDimension';\n\nclass FilterSelector extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n        };\n    }\n\n    openPanel = (_, event) => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    closePanel = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    closeDialog = () => {\n        this.setState({ anchorEl: null });\n\n        this.props.clearActiveModalDimension();\n    };\n\n    selectDimension = id => {\n        this.props.setActiveModalDimension(\n            this.props.dimensions.find(dimension => dimension.id === id)\n        );\n    };\n\n    onSelectItems = ({ dimensionId, items }) => {\n        this.props.setEditItemFilters({\n            ...this.props.selectedItems,\n            [dimensionId]: items,\n        });\n    };\n\n    onDeselectItems = ({ dimensionId, itemIdsToRemove }) => {\n        const oldList = this.props.selectedItems[dimensionId] || [];\n        const newList = oldList.filter(\n            item => !itemIdsToRemove.includes(item.id)\n        );\n\n        if (newList.length) {\n            this.props.setEditItemFilters({\n                ...this.props.selectedItems,\n                [dimensionId]: newList,\n            });\n        } else {\n            this.props.removeEditItemFilter(dimensionId);\n        }\n    };\n\n    onReorderItems = ({ dimensionId, itemIds }) => {\n        const oldList = this.props.selectedItems[dimensionId] || [];\n        const reorderedList = itemIds.map(id =>\n            oldList.find(item => item.id === id)\n        );\n\n        this.props.setEditItemFilters({\n            ...this.props.selectedItems,\n            [dimensionId]: reorderedList,\n        });\n    };\n\n    saveFilter = id => {\n        const filterItems = this.props.selectedItems[id];\n\n        if (filterItems && filterItems.length) {\n            this.props.addItemFilter({\n                id,\n                value: [...filterItems],\n            });\n        } else {\n            this.props.removeItemFilter(id);\n        }\n\n        this.closeDialog();\n    };\n\n    render() {\n        const {\n            theme,\n            displayNameProperty,\n            dimension,\n            dimensions,\n            selectedDimensions,\n            selectedItems,\n        } = this.props;\n\n        return (\n            <>\n                <Button onClick={this.openPanel}>\n                    {i18n.t('Add filter')}\n                    <ArrowDropDownIcon />\n                </Button>\n                <Popover\n                    open={Boolean(this.state.anchorEl)}\n                    anchorEl={this.state.anchorEl}\n                    anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\n                    onClose={this.closePanel}\n                    style={{\n                        height: '100%',\n                        fontFamily: theme.typography.fontFamily,\n                    }}\n                >\n                    <DimensionsPanel\n                        style={{ width: '320px' }}\n                        dimensions={dimensions}\n                        onDimensionClick={this.selectDimension}\n                        selectedIds={selectedDimensions}\n                    />\n                </Popover>\n                {dimension ? (\n                    <FilterDialog\n                        displayNameProperty={displayNameProperty}\n                        dimension={dimension}\n                        selectedItems={selectedItems[dimension.id] || []}\n                        onSelect={this.onSelectItems}\n                        onDeselect={this.onDeselectItems}\n                        onReorder={this.onReorderItems}\n                        onClose={this.closeDialog}\n                        onConfirm={this.saveFilter}\n                    />\n                ) : null}\n            </>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    displayNameProperty: sGetSettingsDisplayNameProperty(state),\n    dimension: sGetActiveModalDimension(state),\n    dimensions: sGetDimensions(state),\n    selectedDimensions: sGetFiltersKeys(state),\n    selectedItems: sGetEditItemFiltersRoot(state),\n});\n\nFilterSelector.propTypes = {\n    addItemFilter: PropTypes.func,\n    clearActiveModalDimension: PropTypes.func,\n    dimension: PropTypes.object,\n    dimensions: PropTypes.array,\n    displayNameProperty: PropTypes.string,\n    removeEditItemFilter: PropTypes.func,\n    removeItemFilter: PropTypes.func,\n    selectedDimensions: PropTypes.array,\n    selectedItems: PropTypes.object,\n    setActiveModalDimension: PropTypes.func,\n    setEditItemFilters: PropTypes.func,\n    theme: PropTypes.object,\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        clearActiveModalDimension: acClearActiveModalDimension,\n        setActiveModalDimension: acSetActiveModalDimension,\n        addItemFilter: acAddItemFilter,\n        removeItemFilter: acRemoveItemFilter,\n        removeEditItemFilter: acRemoveEditItemFilter,\n        setEditItemFilters: acSetEditItemFilters,\n    }\n)(withTheme()(FilterSelector));\n","import React, { Component } from 'react';\nimport InfoOutlineIcon from '@material-ui/icons/InfoOutlined';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nclass Info extends Component {\n    show = false;\n\n    toggle() {\n        this.show = !this.show;\n        return this.show;\n    }\n\n    render() {\n        return (\n            <div onClick={() => this.props.onClick(this.toggle())}>\n                <InfoOutlineIcon style={{ fill: colors.grey600 }} />\n            </div>\n        );\n    }\n}\n\nInfo.propTypes = {\n    onClick: PropTypes.func,\n};\n\nexport default Info;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport SharingDialog from '@dhis2/d2-ui-sharing-dialog';\nimport Star from '@material-ui/icons/Star';\nimport StarBorder from '@material-ui/icons/StarBorder';\n\nimport { orObject } from '../../modules/util';\nimport { tStarDashboard } from '../../actions/dashboards';\nimport { acSetSelectedShowDescription } from '../../actions/selected';\nimport FilterSelector from '../ItemFilter/FilterSelector';\nimport { Button, colors } from '@dhis2/ui-core';\nimport Info from './Info';\nimport {\n    sGetSelectedId,\n    sGetSelectedShowDescription,\n} from '../../reducers/selected';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n} from '../../reducers/dashboards';\n\nimport classes from './styles/ViewTitleBar.module.css';\n\nconst NO_DESCRIPTION = i18n.t('No description');\n\nclass ViewTitleBar extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            sharingDialogIsOpen: false,\n        };\n    }\n\n    toggleSharingDialog = () =>\n        this.setState({ sharingDialogIsOpen: !this.state.sharingDialogIsOpen });\n\n    render() {\n        const {\n            id,\n            name,\n            description,\n            access,\n            style,\n            showDescription,\n            starred,\n            onStarClick,\n            onInfoClick,\n        } = this.props;\n\n        const titleStyle = Object.assign({}, style.title, {\n            cursor: 'default',\n            userSelect: 'text',\n            top: '7px',\n        });\n\n        const StarIcon = starred ? Star : StarBorder;\n\n        return (\n            <>\n                <div className={classes.titleBar}>\n                    <span style={titleStyle}>{name}</span>\n                    <div className={classes.actions}>\n                        <div\n                            className={classes.titleBarIcon}\n                            onClick={onStarClick}\n                        >\n                            <StarIcon style={{ fill: colors.grey600 }} />\n                        </div>\n                        <div className={classes.titleBarIcon}>\n                            <Info onClick={onInfoClick} />\n                        </div>\n                        <div style={{ marginLeft: '10px' }}>\n                            {access.update ? (\n                                <Link\n                                    className={classes.editLink}\n                                    to={`/${id}/edit`}\n                                >\n                                    <Button>{i18n.t('Edit')}</Button>\n                                </Link>\n                            ) : null}\n                            {access.manage ? (\n                                <span style={{ marginRight: '4px' }}>\n                                    <Button onClick={this.toggleSharingDialog}>\n                                        {i18n.t('Share')}\n                                    </Button>\n                                </span>\n                            ) : null}\n                            <span style={{ marginRight: '4px' }}>\n                                <FilterSelector />\n                            </span>\n                        </div>\n                    </div>\n                </div>\n                {showDescription ? (\n                    <div\n                        className=\"dashboard-description\"\n                        style={Object.assign(\n                            { paddingTop: '5px', paddingBottom: '5px' },\n                            style.description,\n                            !description ? { color: '#888' } : {}\n                        )}\n                    >\n                        {description || NO_DESCRIPTION}\n                    </div>\n                ) : null}\n                {id ? (\n                    <SharingDialog\n                        d2={this.context.d2}\n                        id={id}\n                        type=\"dashboard\"\n                        open={this.state.sharingDialogIsOpen}\n                        onRequestClose={this.toggleSharingDialog}\n                    />\n                ) : null}\n            </>\n        );\n    }\n}\n\nViewTitleBar.propTypes = {\n    access: PropTypes.object,\n    description: PropTypes.string,\n    id: PropTypes.string,\n    name: PropTypes.string,\n    showDescription: PropTypes.bool,\n    starred: PropTypes.bool,\n    style: PropTypes.object,\n    onInfoClick: PropTypes.func,\n    onStarClick: PropTypes.func,\n};\n\nViewTitleBar.defaultProps = {\n    name: '',\n    description: '',\n    starred: false,\n    showDescription: false,\n    onInfoClick: null,\n};\n\nViewTitleBar.contextTypes = {\n    d2: PropTypes.object,\n};\n\nconst mapStateToProps = state => {\n    const id = sGetSelectedId(state);\n    const dashboard = orObject(sGetDashboardById(state, id));\n\n    return {\n        id,\n        name: dashboard.displayName,\n        description: dashboard.displayDescription,\n        dashboardItems: sGetDashboardItems(state),\n        showDescription: sGetSelectedShowDescription(state),\n        starred: dashboard.starred,\n        access: orObject(dashboard.access),\n    };\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const { id, starred, showDescription } = stateProps;\n    const { dispatch } = dispatchProps;\n\n    return {\n        ...stateProps,\n        ...ownProps,\n        onStarClick: () => dispatch(tStarDashboard(id, !starred)),\n        onInfoClick: () =>\n            dispatch(acSetSelectedShowDescription(!showDescription)),\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    null,\n    mergeProps\n)(ViewTitleBar);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { colors } from '@dhis2/ui-core';\nimport EditTitleBar from './EditTitleBar';\nimport ViewTitleBar from './ViewTitleBar';\n\nimport './TitleBar.css';\n\nconst style = {\n    title: {\n        position: 'relative',\n        fontSize: 21,\n        fontWeight: 500,\n        color: colors.black,\n        minWidth: 50,\n    },\n    description: {\n        fontSize: 14,\n        color: colors.grey800,\n    },\n};\n\nconst TitleBar = ({ edit }) => {\n    return (\n        <div\n            className=\"titlebar-wrapper\"\n            style={{\n                padding: '20px 15px 5px 10px',\n            }}\n        >\n            {edit ? (\n                <EditTitleBar style={style} />\n            ) : (\n                <ViewTitleBar style={style} />\n            )}\n        </div>\n    );\n};\n\nTitleBar.propTypes = {\n    edit: PropTypes.bool,\n};\n\nexport default TitleBar;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport i18n from '@dhis2/d2-i18n';\n\nimport * as pluginManager from './plugin';\nimport { getBaseUrl, orObject } from '../../../modules/util';\nimport { getGridItemDomId } from '../../ItemGrid/gridUtil';\n\nconst pluginCredentials = d2 => {\n    return {\n        baseUrl: getBaseUrl(d2),\n        auth: d2.Api.getApi().defaultHeaders.Authorization,\n    };\n};\n\nclass DefaultPlugin extends Component {\n    pluginCredentials = null;\n\n    constructor(props, context) {\n        super(props);\n\n        this.d2 = context.d2;\n    }\n\n    shouldPluginReload = prevProps => {\n        // TODO - fix this hack, to handle bug with multiple\n        // rerendering while switching between dashboards.\n        //\n        // To determine if the rendering is happening because of a\n        // dashboard switch, check if the item reference has changed.\n        const reloadAllowed = this.props.item === prevProps.item;\n\n        const filtersChanged = prevProps.itemFilters !== this.props.itemFilters;\n        const vis = orObject(this.props.visualization);\n        const prevVis = orObject(prevProps.visualization);\n        const visChanged =\n            vis.id !== prevVis.id || vis.activeType !== prevVis.activeType;\n\n        return reloadAllowed && (visChanged || filtersChanged);\n    };\n\n    reloadPlugin = prevProps => {\n        if (\n            pluginManager.pluginIsAvailable(\n                this.props.item,\n                this.props.visualization\n            ) &&\n            this.shouldPluginReload(prevProps)\n        ) {\n            const prevVis = orObject(prevProps.visualization);\n            const currentVis = this.props.visualization;\n\n            const useActiveType =\n                currentVis.activeType !== prevVis.activeType ||\n                currentVis.activeType !== this.props.item.type;\n\n            if (\n                useActiveType ||\n                this.props.itemFilters !== prevProps.itemFilters\n            ) {\n                pluginManager.unmount(\n                    this.props.item,\n                    prevVis.activeType || this.props.item.type\n                );\n\n                pluginManager.load(this.props.item, this.props.visualization, {\n                    credentials: this.pluginCredentials,\n                    activeType: useActiveType ? currentVis.activeType : null,\n                });\n            }\n        }\n    };\n\n    componentDidMount() {\n        this.pluginCredentials = pluginCredentials(this.d2);\n\n        if (\n            pluginManager.pluginIsAvailable(\n                this.props.item,\n                this.props.visualization\n            )\n        ) {\n            pluginManager.load(this.props.item, this.props.visualization, {\n                credentials: this.pluginCredentials,\n                activeType: !this.props.editMode ? this.getActiveType() : null,\n            });\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        this.reloadPlugin(prevProps);\n    }\n\n    getActiveType = () =>\n        this.props.visualization.activeType || this.props.item.type;\n\n    render() {\n        const { classes, item, visualization, style } = this.props;\n        const pluginIsAvailable = pluginManager.pluginIsAvailable(\n            item,\n            visualization\n        );\n\n        return pluginIsAvailable ? (\n            <div id={getGridItemDomId(item.id)} style={style} />\n        ) : (\n            <div className={classes.textDiv}>\n                {i18n.t('Unable to load the plugin for this item')}\n            </div>\n        );\n    }\n}\n\nDefaultPlugin.contextTypes = {\n    d2: PropTypes.object,\n};\n\nDefaultPlugin.propTypes = {\n    classes: PropTypes.object,\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    itemFilters: PropTypes.object,\n    style: PropTypes.object,\n    visualization: PropTypes.object,\n};\n\nDefaultPlugin.defaultProps = {\n    style: {},\n    item: {},\n    itemFilters: {},\n    visualization: {},\n};\n\nexport default DefaultPlugin;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\n\nexport const ThreeDots = () => (\n    <svg\n        height=\"18\"\n        viewBox=\"0 0 18 18\"\n        width=\"18\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n    >\n        <path\n            d=\"m4 7.5c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm10 0c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm-5 0c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5z\"\n            fill=\"#6e7a8a\"\n        />\n    </svg>\n);\n\nexport const SpeechBubble = () => (\n    <svg\n        height=\"20\"\n        viewBox=\"0 0 20 20\"\n        width=\"20\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        style={{ margin: '3px 2px 0 2px' }} // Temporary fix for the misaligned icon, should be removed once the icon is replaced\n    >\n        <path\n            d=\"m20 2h-16c-1.1 0-1.99.9-1.99 2l-.01 18 4-4h14c1.1 0 2-.9 2-2v-12c0-1.1-.9-2-2-2zm-2 12h-12v-2h12zm0-3h-12v-2h12zm0-3h-12v-2h12z\"\n            fill=\"#6e7a8a\"\n            fillRule=\"evenodd\"\n            transform=\"translate(-2 -2)\"\n        />\n    </svg>\n);\n\nexport const Warning = () => (\n    <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        height=\"24\"\n        viewBox=\"0 0 24 24\"\n        width=\"24\"\n        fill={colors.grey600}\n    >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z\" />\n    </svg>\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Warning } from './assets/icons';\n\nimport classes from './styles/FatalErrorBoundary.module.css';\n\nclass FatalErrorBoundary extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            errorFound: false,\n        };\n    }\n    componentDidCatch(error, info) {\n        this.setState({\n            errorFound: true,\n        });\n        console.log('error: ', error);\n        console.log('info: ', info);\n    }\n    render() {\n        if (this.state.errorFound) {\n            return (\n                <p className={classes.container}>\n                    <span className={classes.icon}>\n                        <Warning />\n                    </span>\n                    <span className={classes.message}>\n                        {i18n.t(\n                            'There was a problem loading this dashboard item'\n                        )}\n                    </span>\n                </p>\n            );\n        }\n        return this.props.children;\n    }\n}\n\nFatalErrorBoundary.propTypes = {\n    children: PropTypes.node,\n};\n\nexport default FatalErrorBoundary;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { colors } from '@dhis2/ui-core';\n\nimport classes from './styles/DeleteItemButton.module.css';\n\nconst DeleteItemButton = ({ onClick }) => (\n    <button\n        type=\"button\"\n        className={classes.deleteItemButton}\n        onClick={onClick}\n        title={i18n.t(`Delete item`)}\n    >\n        <DeleteIcon style={{ fill: colors.red500 }} />\n    </button>\n);\n\nDeleteItemButton.propTypes = {\n    onClick: PropTypes.func,\n};\n\nexport default DeleteItemButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { sGetIsEditing } from '../../reducers/editDashboard';\nimport { acRemoveDashboardItem } from '../../actions/editDashboard';\nimport DeleteItemButton from './DeleteItemButton';\n\nimport classes from './styles/ItemHeader.module.css';\n\n// This is the margin-top + margin-bottom defined in the css file\nexport const HEADER_MARGIN_HEIGHT = 12;\n\nconst ItemHeader = props => {\n    const {\n        title,\n        editMode,\n        actionButtons,\n        itemId,\n        acRemoveDashboardItem,\n        forwardedRef,\n    } = props;\n\n    const handleDeleteItem = () => acRemoveDashboardItem(itemId);\n\n    return (\n        <div className={classes.itemHeaderWrap} ref={forwardedRef}>\n            <p className={classes.itemTitle}>{title}</p>\n            {editMode ? (\n                <div className={classes.itemActionsWrap}>\n                    <DeleteItemButton onClick={handleDeleteItem} />\n                </div>\n            ) : (\n                actionButtons && (\n                    <div className={classes.itemActionsWrap}>\n                        {actionButtons}\n                    </div>\n                )\n            )}\n        </div>\n    );\n};\n\nItemHeader.propTypes = {\n    acRemoveDashboardItem: PropTypes.func,\n    actionButtons: PropTypes.node,\n    editMode: PropTypes.bool,\n    forwardedRef: PropTypes.object,\n    itemId: PropTypes.string,\n    title: PropTypes.string,\n};\n\nItemHeader.defaultProps = {\n    forwardedRef: {},\n};\n\nconst mapStateToProps = state => ({\n    editMode: sGetIsEditing(state),\n});\n\nconst mapDispatchToProps = {\n    acRemoveDashboardItem,\n};\n\nconst ConnectedItemHeader = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ItemHeader);\n\n// TODO this is a false positive that is fixed in eslint-plugin-react v7.15\n// github.com/yannickcr/eslint-plugin-react/blob/master/CHANGELOG.md\n/* eslint-disable react/display-name */\nexport default React.forwardRef((props, ref) => (\n    <ConnectedItemHeader {...props} forwardedRef={ref} />\n));\n/* eslint-enable react/display-name */\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n    isSingleValue,\n    isYearOverYear,\n    VIS_TYPE_GAUGE,\n    VIS_TYPE_PIE,\n} from '@dhis2/analytics';\nimport { Button, Menu, MenuItem, Divider, colors } from '@dhis2/ui-core';\nimport i18n from '@dhis2/d2-i18n';\nimport Popover from '@material-ui/core/Popover';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\nimport LaunchIcon from '@material-ui/icons/Launch';\n\nimport { ThreeDots, SpeechBubble } from './assets/icons';\nimport { pluginIsAvailable, getLink } from './plugin';\nimport {\n    CHART,\n    MAP,\n    REPORT_TABLE,\n    EVENT_CHART,\n    EVENT_REPORT,\n    isTrackerDomainType,\n    hasMapView,\n    getAppName,\n} from '../../../modules/itemTypes';\n\nconst iconFill = { fill: colors.grey600 };\n\nconst ItemHeaderButtons = props => {\n    const [anchorEl, setAnchorEl] = useState(null);\n\n    const { item, visualization, onSelectActiveType, d2, activeType } = props;\n\n    const isTrackerType = isTrackerDomainType(item.type);\n\n    const onViewTable = () => {\n        handleClose();\n        onSelectActiveType(isTrackerType ? EVENT_REPORT : REPORT_TABLE);\n    };\n\n    const onViewChart = () => {\n        handleClose();\n        onSelectActiveType(isTrackerType ? EVENT_CHART : CHART);\n    };\n\n    const onViewMap = () => {\n        handleClose();\n        onSelectActiveType(MAP);\n    };\n\n    const itemHasMapView = () => hasMapView(item.type);\n\n    const handleMenuClick = (_, event) => setAnchorEl(event.currentTarget);\n\n    const handleInterpretationClick = () => {\n        props.onToggleFooter();\n        if (anchorEl !== null) {\n            handleClose();\n        }\n    };\n\n    const handleClose = () => setAnchorEl(null);\n\n    const type = visualization.type || item.type;\n    const canViewAs =\n        !isSingleValue(type) &&\n        !isYearOverYear(type) &&\n        type !== VIS_TYPE_GAUGE &&\n        type !== VIS_TYPE_PIE;\n\n    const interpretationMenuLabel = props.activeFooter\n        ? i18n.t(`Hide interpretations and details`)\n        : i18n.t(`Show interpretations and details`);\n\n    const ViewAsMenuItems = () => (\n        <>\n            {activeType !== CHART && activeType !== EVENT_CHART && (\n                <MenuItem\n                    dense\n                    label={i18n.t('View as Chart')}\n                    onClick={onViewChart}\n                    icon={<ChartIcon style={iconFill} />}\n                />\n            )}\n            {activeType !== REPORT_TABLE && activeType !== EVENT_REPORT && (\n                <MenuItem\n                    dense\n                    label={i18n.t('View as Table')}\n                    onClick={onViewTable}\n                    icon={<TableIcon style={iconFill} />}\n                />\n            )}\n            {itemHasMapView() && activeType !== MAP && (\n                <MenuItem\n                    dense\n                    label={i18n.t('View as Map')}\n                    onClick={onViewMap}\n                    icon={<MapIcon style={iconFill} />}\n                />\n            )}\n        </>\n    );\n\n    return pluginIsAvailable(item, visualization) ? (\n        <>\n            <Button small secondary onClick={handleMenuClick}>\n                <ThreeDots />\n            </Button>\n            {anchorEl && (\n                <Popover\n                    open={Boolean(anchorEl)}\n                    onClose={handleClose}\n                    anchorEl={anchorEl}\n                >\n                    <Menu>\n                        {canViewAs && (\n                            <>\n                                <ViewAsMenuItems />\n                                <Divider />\n                            </>\n                        )}\n                        <MenuItem\n                            dense\n                            icon={<LaunchIcon style={{ fill: '#6e7a8a' }} />}\n                            label={i18n.t('Open in {{appName}} app', {\n                                appName: getAppName(item.type),\n                            })}\n                            href={getLink(item, d2)}\n                            target=\"_blank\"\n                        />\n                        <MenuItem\n                            dense\n                            icon={<SpeechBubble />}\n                            label={interpretationMenuLabel}\n                            onClick={handleInterpretationClick}\n                        />\n                    </Menu>\n                </Popover>\n            )}\n        </>\n    ) : null;\n};\n\nItemHeaderButtons.propTypes = {\n    activeFooter: PropTypes.bool,\n    activeType: PropTypes.string,\n    d2: PropTypes.object,\n    item: PropTypes.object,\n    visualization: PropTypes.object,\n    onSelectActiveType: PropTypes.func,\n    onToggleFooter: PropTypes.func,\n};\n\nexport default ItemHeaderButtons;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { colors } from '@dhis2/ui-core';\nimport { getId } from './plugin';\nimport InterpretationsComponent from '@dhis2/d2-ui-interpretations';\n\nconst style = {\n    scrollContainer: {\n        overflowY: 'auto',\n        height: '340px',\n    },\n    line: {\n        margin: '-1px 0px 0px',\n        height: '1px',\n        border: 'none',\n        backgroundColor: colors.grey100,\n    },\n};\n\nclass ItemFooter extends Component {\n    render() {\n        const objectId = getId(this.props.item);\n\n        return (\n            <div className=\"dashboard-item-footer\">\n                <hr style={style.line} />\n                <div style={style.scrollContainer}>\n                    <InterpretationsComponent\n                        d2={this.context.d2}\n                        item={this.props.item}\n                        type={this.props.item.type.toLowerCase()}\n                        id={objectId}\n                        appName=\"dashboard\"\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nItemFooter.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nItemFooter.propTypes = {\n    item: PropTypes.object.isRequired,\n};\n\nexport default ItemFooter;\n","// Note that this ignores discrepancies in 'this', so shouldn't be used with bound functions\n// This is useful instead of lodash/memoize when we only need to memoize a single value\n// Inspiration: https://github.com/alexreardon/memoize-one\n\nconst memoizeOne = fn => {\n    let lastArgs = undefined;\n    let lastValue = undefined;\n\n    return (...args) => {\n        if (\n            lastArgs &&\n            args.length === lastArgs.length &&\n            args.every((arg, i) => arg === lastArgs[i])\n        ) {\n            return lastValue;\n        }\n        lastArgs = args;\n        lastValue = fn(...args);\n        return lastValue;\n    };\n};\n\nexport default memoizeOne;\n","import React from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport classes from './styles/LoadingMask.module.css';\n\nfunction CircularIndeterminate() {\n    return (\n        <div className={classes.outer}>\n            <CircularProgress className={classes.progress} />\n        </div>\n    );\n}\n\nexport default CircularIndeterminate;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport uniqueId from 'lodash/uniqueId';\nimport VisualizationPlugin from '@dhis2/data-visualizer-plugin';\nimport i18n from '@dhis2/d2-i18n';\n\nimport DefaultPlugin from './DefaultPlugin';\nimport FatalErrorBoundary from './FatalErrorBoundary';\nimport ItemHeader, { HEADER_MARGIN_HEIGHT } from '../ItemHeader';\nimport ItemHeaderButtons from './ItemHeaderButtons';\nimport ItemFooter from './ItemFooter';\nimport * as pluginManager from './plugin';\nimport { sGetVisualization } from '../../../reducers/visualizations';\nimport { sGetItemFiltersRoot } from '../../../reducers/itemFilters';\nimport {\n    acAddVisualization,\n    acSetActiveVisualizationType,\n} from '../../../actions/visualizations';\nimport {\n    VISUALIZATION,\n    MAP,\n    CHART,\n    REPORT_TABLE,\n} from '../../../modules/itemTypes';\nimport memoizeOne from '../../../modules/memoizeOne';\n\nimport { getVisualizationConfig } from './plugin';\nimport LoadingMask from './LoadingMask';\nimport { ITEM_CONTENT_PADDING_BOTTOM } from '../../ItemGrid/ItemGrid';\n\nimport classes from './styles/Item.module.css';\n\nexport class Item extends Component {\n    state = {\n        showFooter: false,\n        configLoaded: false,\n        pluginIsLoaded: false,\n    };\n\n    constructor(props, context) {\n        super(props);\n\n        this.d2 = context.d2;\n\n        this.contentRef = React.createRef();\n        this.headerRef = React.createRef();\n\n        this.memoizedApplyFilters = memoizeOne(this.applyFilters);\n\n        this.memoizedGetVisualizationConfig = memoizeOne(\n            getVisualizationConfig\n        );\n\n        this.memoizedGetContentStyle = memoizeOne(this.getContentStyle);\n    }\n\n    async componentDidMount() {\n        this.props.onVisualizationLoaded(\n            // TODO do not call fetch on the pluginManager, do it here as the manager will eventually be removed...\n            await pluginManager.fetch(this.props.item)\n        );\n\n        this.setState({\n            configLoaded: true,\n        });\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (\n            prevState.pluginIsLoaded &&\n            (prevProps.visualization !== this.props.visualization ||\n                prevProps.itemFilters !== this.props.itemFilters)\n        ) {\n            this.setState({\n                pluginIsLoaded: false,\n            });\n        }\n    }\n\n    applyFilters = (visualization, filters) => {\n        if (!Object.keys(filters).length) {\n            return visualization;\n        }\n\n        // deep clone objects in filters to avoid changing the visualization in the Redux store\n        const visRows = visualization.rows.map(obj => ({ ...obj }));\n        const visColumns = visualization.columns.map(obj => ({ ...obj }));\n        const visFilters = visualization.filters.map(obj => ({ ...obj }));\n\n        Object.keys(filters).forEach(dimensionId => {\n            if (filters[dimensionId]) {\n                let dimensionFound = false;\n\n                [visRows, visColumns, visFilters].forEach(dimensionObjects =>\n                    dimensionObjects\n                        .filter(obj => obj.dimension === dimensionId)\n                        .forEach(obj => {\n                            dimensionFound = true;\n                            obj.items = filters[dimensionId];\n                        })\n                );\n\n                // add dimension to filters if not already present elsewhere\n                if (!dimensionFound) {\n                    visFilters.push({\n                        dimension: dimensionId,\n                        items: filters[dimensionId],\n                    });\n                }\n            }\n        });\n\n        return {\n            ...visualization,\n            rows: visRows,\n            columns: visColumns,\n            filters: visFilters,\n        };\n    };\n\n    getUniqueKey = memoizeOne(() => uniqueId());\n\n    pluginCredentials = null;\n\n    getPluginComponent = () => {\n        const activeType = this.getActiveType();\n        const visualization = this.memoizedGetVisualizationConfig(\n            this.props.visualization,\n            this.props.item.type,\n            activeType\n        );\n\n        if (!visualization) {\n            return (\n                <div className={classes.textDiv}>\n                    {i18n.t('No data to display')}\n                </div>\n            );\n        }\n\n        const calculatedHeight =\n            this.props.item.originalHeight -\n            this.headerRef.current.clientHeight -\n            HEADER_MARGIN_HEIGHT -\n            ITEM_CONTENT_PADDING_BOTTOM;\n\n        const props = {\n            ...this.props,\n            visualization,\n            style: this.memoizedGetContentStyle(\n                calculatedHeight,\n                this.contentRef ? this.contentRef.offsetHeight : null,\n                this.props.editMode\n            ),\n        };\n\n        switch (activeType) {\n            case VISUALIZATION:\n            case CHART:\n            case REPORT_TABLE: {\n                return (\n                    <>\n                        {!this.state.pluginIsLoaded ? (\n                            <div className={classes.loadingCover}>\n                                <LoadingMask />\n                            </div>\n                        ) : null}\n                        <VisualizationPlugin\n                            d2={this.d2}\n                            visualization={this.memoizedApplyFilters(\n                                visualization,\n                                props.itemFilters\n                            )}\n                            onLoadingComplete={this.onLoadingComplete}\n                            forDashboard={true}\n                            style={props.style}\n                        />\n                    </>\n                );\n            }\n            case MAP: {\n                if (props.item.type === MAP) {\n                    // apply filters only to thematic and event layers\n                    // for maps AO\n                    const mapViews = props.visualization.mapViews.map(obj => {\n                        if (\n                            obj.layer.includes('thematic') ||\n                            obj.layer.includes('event')\n                        ) {\n                            return this.memoizedApplyFilters(\n                                obj,\n                                props.itemFilters\n                            );\n                        }\n\n                        return obj;\n                    });\n\n                    props.visualization = {\n                        ...props.visualization,\n                        mapViews,\n                    };\n                } else {\n                    // this is the case of a non map AO passed to the maps plugin\n                    // due to a visualization type switch in dashboard item\n                    // maps plugin takes care of converting the AO to a suitable format\n                    props.visualization = this.memoizedApplyFilters(\n                        props.visualization,\n                        props.itemFilters\n                    );\n                }\n\n                return <DefaultPlugin {...props} />;\n            }\n            default: {\n                props.visualization = this.memoizedApplyFilters(\n                    props.visualization,\n                    props.itemFilters\n                );\n\n                return <DefaultPlugin {...props} />;\n            }\n        }\n    };\n\n    onLoadingComplete = () => {\n        this.setState({\n            pluginIsLoaded: true,\n        });\n    };\n\n    onToggleFooter = () => {\n        this.setState(\n            { showFooter: !this.state.showFooter },\n            this.props.onToggleItemExpanded(this.props.item.id)\n        );\n    };\n\n    onSelectActiveType = type => {\n        if (type === this.getActiveType()) {\n            return;\n        }\n\n        pluginManager.unmount(this.props.item, this.getActiveType());\n\n        this.props.onSelectActiveType(this.props.visualization.id, type);\n    };\n\n    getActiveType = () =>\n        this.props.visualization.activeType || this.props.item.type;\n\n    pluginIsAvailable = () =>\n        pluginManager.pluginIsAvailable(\n            this.props.item,\n            this.props.visualization\n        );\n\n    getContentStyle = (calculatedHeight, measuredHeight, editMode) => {\n        const height = editMode\n            ? measuredHeight || calculatedHeight\n            : calculatedHeight;\n\n        return { height };\n    };\n\n    render() {\n        const { item, editMode, itemFilters } = this.props;\n        const { showFooter } = this.state;\n\n        const actionButtons = (\n            <ItemHeaderButtons\n                item={item}\n                visualization={this.props.visualization}\n                onSelectActiveType={this.onSelectActiveType}\n                onToggleFooter={this.onToggleFooter}\n                d2={this.d2}\n                activeType={this.getActiveType()}\n                activeFooter={this.state.showFooter}\n            />\n        );\n\n        return (\n            <>\n                <ItemHeader\n                    title={pluginManager.getName(item)}\n                    itemId={item.id}\n                    actionButtons={actionButtons}\n                    ref={this.headerRef}\n                />\n                <FatalErrorBoundary>\n                    <div\n                        key={this.getUniqueKey(itemFilters)}\n                        className=\"dashboard-item-content\"\n                        ref={ref => (this.contentRef = ref)}\n                    >\n                        {this.state.configLoaded && this.getPluginComponent()}\n                    </div>\n                </FatalErrorBoundary>\n                {!editMode && showFooter ? <ItemFooter item={item} /> : null}\n            </>\n        );\n    }\n}\n\nItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nItem.propTypes = {\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    itemFilters: PropTypes.object,\n    visualization: PropTypes.object,\n    onSelectActiveType: PropTypes.func,\n    onToggleItemExpanded: PropTypes.func,\n    onVisualizationLoaded: PropTypes.func,\n};\n\nItem.defaultProps = {\n    item: {},\n    editMode: false,\n    onToggleItemExpanded: Function.prototype,\n    itemFilters: {},\n    visualization: {},\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n    itemFilters: sGetItemFiltersRoot(state),\n    visualization: sGetVisualization(\n        state,\n        pluginManager.extractFavorite(ownProps.item).id\n    ),\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onVisualizationLoaded: visualization =>\n        dispatch(acAddVisualization(visualization)),\n    onSelectActiveType: (id, type, activeType) =>\n        dispatch(acSetActiveVisualizationType(id, type, activeType)),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Item);\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\n\nconst style = {\n    backgroundColor: colors.grey200,\n    border: 'none',\n    height: '1px',\n    margin: '0px 0px 5px 0px',\n};\n\nconst Line = () => <hr style={style} />;\n\nexport default Line;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\n\nimport { sGetMessagesRoot } from '../../../reducers/messages';\nimport { formatDate } from '../../../modules/util';\nimport { colors } from '@dhis2/ui-core';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nimport './MessagesItem.css';\n\nconst PRIVATE = 'PRIVATE';\n\nconst messageTypes = {\n    [PRIVATE]: 'Private',\n    VALIDATION_RESULT: 'Validation',\n    TICKET: 'Ticket',\n    SYSTEM: 'System',\n};\n\nconst style = {\n    list: {\n        listStyleType: 'none',\n        paddingLeft: '0px',\n    },\n    seeAll: {\n        textAlign: 'center',\n        fontSize: '13px',\n        marginBottom: '5px',\n    },\n    sender: {\n        fontSize: '13px',\n        lineHeight: '15px',\n        margin: 0,\n        color: colors.grey800,\n    },\n    snippet: {\n        color: colors.grey800,\n        fontSize: '13px',\n        lineHeight: '15px',\n        maxHeight: '30px',\n        overflow: 'hidden',\n    },\n};\n\nclass MessagesItem extends Component {\n    state = {\n        uiLocale: '',\n    };\n\n    async componentDidMount() {\n        const uiLocale = await this.context.d2.currentUser.userSettings.get(\n            'keyUiLocale'\n        );\n\n        this.setState({ uiLocale });\n    }\n\n    getMessageHref = msg => {\n        const msgIdentifier = msg ? `#/${msg.messageType}/${msg.id}` : '';\n        return `${this.context.baseUrl}/dhis-web-messaging/${msgIdentifier}`;\n    };\n\n    getMessageSender = msg => {\n        const latestMsg = msg.messages.slice(-1)[0];\n        return latestMsg.sender ? latestMsg.sender.displayName : '';\n    };\n\n    getMessageItems = () => {\n        const editClass = !this.props.editMode ? 'view' : null;\n\n        return this.props.messages.map(msg => {\n            const redirectToMsg = () => {\n                if (!this.props.editMode) {\n                    document.location.href = this.getMessageHref(msg);\n                }\n            };\n\n            const sender =\n                msg.messageType === PRIVATE\n                    ? this.getMessageSender(msg)\n                    : messageTypes[msg.messageType];\n\n            const readClass = !msg.read ? 'unread' : null;\n            const latestMsg = msg.messages.slice(-1)[0];\n            const msgDate = latestMsg.lastUpdated;\n\n            return (\n                <li\n                    className={`message-item ${editClass}`}\n                    key={msg.id}\n                    onClick={redirectToMsg}\n                >\n                    <p className={`message-title ${readClass}`}>\n                        {msg.displayName} ({msg.messageCount})\n                    </p>\n                    <p style={style.sender}>\n                        {sender} - {formatDate(msgDate, this.state.uiLocale)}\n                    </p>\n                    <p style={style.snippet}>{latestMsg.text}</p>\n                </li>\n            );\n        });\n    };\n\n    render() {\n        return (\n            <>\n                <ItemHeader\n                    title={i18n.t('Messages')}\n                    itemId={this.props.item.id}\n                />\n                <Line />\n                {this.props.messages.length > 0 && (\n                    <div className=\"dashboard-item-content\">\n                        <ul style={style.list}>{this.getMessageItems()}</ul>\n                        <div style={style.seeAll}>\n                            <a href={this.getMessageHref()}>\n                                {i18n.t('See all messages')}\n                            </a>\n                        </div>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nMessagesItem.propTypes = {\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    messages: PropTypes.array,\n};\n\nMessagesItem.contextTypes = {\n    d2: PropTypes.object,\n    baseUrl: PropTypes.string,\n};\n\nconst mapStateToProps = state => {\n    return {\n        messages: Object.values(sGetMessagesRoot(state)),\n    };\n};\n\nconst MessagesContainer = connect(\n    mapStateToProps,\n    null\n)(MessagesItem);\n\nexport default MessagesContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ItemHeader from '../ItemHeader';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nconst NotSupportedItem = props => (\n    <>\n        <ItemHeader\n            title={i18n.t('Item type \"{{type}}\" not supported', {\n                type: props.item.type,\n            })}\n            itemId={props.item.id}\n        />\n        <div\n            style={{\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center',\n                height: '90%',\n            }}\n        >\n            <NotInterestedIcon\n                style={{ width: 100, height: 100, align: 'center' }}\n                color=\"disabled\"\n            />\n        </div>\n    </>\n);\n\nNotSupportedItem.propTypes = {\n    item: PropTypes.object,\n};\n\nexport default NotSupportedItem;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nconst DescriptionIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n        fill={colors.grey500}\n    >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M14 2H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6zm2 16H8v-2h8v2zm0-4H8v-2h8v2zm-3-5V3.5L18.5 9H13z\" />\n    </svg>\n);\n\nDescriptionIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default DescriptionIcon;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nconst DeleteIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"18\"\n        height=\"18\"\n        viewBox=\"0 0 24 24\"\n        fill={colors.red500}\n    >\n        <path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>\n);\n\nDeleteIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default DeleteIcon;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { colors } from '@dhis2/ui-core';\nimport DescriptionIcon from '../../../icons/Description';\n\nimport DeleteIcon from '../../../icons/Delete';\nimport Line from '../../../widgets/Line';\nimport { itemTypeMap, getItemUrl } from '../../../modules/itemTypes';\nimport { orArray } from '../../../modules/util';\nimport { tRemoveListItemContent } from './actions';\nimport ItemHeader from '../ItemHeader';\nimport classes from './Item.module.css';\n\nconst getItemTitle = item => itemTypeMap[item.type].pluralTitle;\n\nconst getContentItems = item =>\n    orArray(item[itemTypeMap[item.type].propName]).filter(\n        (item, index, array) =>\n            array.findIndex(el => el.id === item.id) === index\n    );\n\nconst ListItem = (props, context) => {\n    const { item, editMode, tRemoveListItemContent } = props;\n    const contentItems = getContentItems(item);\n\n    const getLink = contentItem => {\n        const deleteButton = (\n            <button\n                className={classes.deletebutton}\n                onClick={() => tRemoveListItemContent(item, contentItem)}\n            >\n                <DeleteIcon className={classes.deleteicon} />\n            </button>\n        );\n\n        return (\n            <>\n                <a\n                    className={classes.link}\n                    style={{ color: colors.grey900 }}\n                    href={getItemUrl(item.type, contentItem, context.d2)}\n                >\n                    {contentItem.name}\n                </a>\n                {editMode ? deleteButton : null}\n            </>\n        );\n    };\n\n    return (\n        <>\n            <ItemHeader title={getItemTitle(item)} itemId={item.id} />\n            <Line />\n            <div className=\"dashboard-item-content\">\n                <ul className={classes.list}>\n                    {contentItems.map(contentItem => (\n                        <li className={classes.item} key={contentItem.id}>\n                            <DescriptionIcon className={classes.itemicon} />\n                            {getLink(contentItem)}\n                        </li>\n                    ))}\n                </ul>\n            </div>\n        </>\n    );\n};\n\nListItem.propTypes = {\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    tRemoveListItemContent: PropTypes.func,\n};\n\nListItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nexport default connect(\n    null,\n    {\n        tRemoveListItemContent,\n    }\n)(ListItem);\n","import {\n    acUpdateDashboardItem,\n    acRemoveDashboardItem,\n} from '../../../actions/editDashboard';\nimport { itemTypeMap } from '../../../modules/itemTypes';\n\nexport const tRemoveListItemContent = (dashboardItem, content) => dispatch => {\n    const listItemType = itemTypeMap[dashboardItem.type].propName;\n\n    const newContent = dashboardItem[listItemType].filter(\n        item => item.id !== content.id\n    );\n\n    if (newContent.length) {\n        dashboardItem[listItemType] = newContent;\n        dispatch(acUpdateDashboardItem(dashboardItem));\n    } else {\n        dispatch(acRemoveDashboardItem(dashboardItem));\n    }\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\n\nimport Input from '@material-ui/core/Input';\nimport {\n    Parser as RichTextParser,\n    Editor as RichTextEditor,\n} from '@dhis2/d2-ui-rich-text';\n\nimport { acUpdateDashboardItem } from '../../../actions/editDashboard';\nimport { sGetEditDashboardItems } from '../../../reducers/editDashboard';\nimport { sGetDashboardItems } from '../../../reducers/dashboards';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nconst style = {\n    textDiv: {\n        padding: '10px',\n        whiteSpace: 'pre-line',\n        lineHeight: '20px',\n    },\n    textField: {\n        fontSize: '14px',\n        fontStretch: 'normal',\n        width: '90%',\n        margin: '0 auto',\n        display: 'block',\n        lineHeight: '24px',\n    },\n    container: {\n        marginBottom: '20px',\n        marginTop: '20px',\n    },\n};\n\nconst TextItem = props => {\n    const { item, editMode, text, acUpdateDashboardItem } = props;\n\n    const onChangeText = event => {\n        const updatedItem = {\n            ...item,\n            text: event.target.value,\n        };\n\n        acUpdateDashboardItem(updatedItem);\n    };\n\n    const viewItem = () => {\n        const textDivStyle = Object.assign({}, style.textField, style.textDiv);\n        return (\n            <div className=\"dashboard-item-content\" style={style.container}>\n                <RichTextParser style={textDivStyle}>{text}</RichTextParser>\n            </div>\n        );\n    };\n\n    const editItem = () => {\n        return (\n            <>\n                <ItemHeader title={i18n.t('Text item')} itemId={item.id} />\n                <Line />\n                <div className=\"dashboard-item-content\">\n                    <RichTextEditor onEdit={onChangeText}>\n                        <Input\n                            value={text}\n                            multiline\n                            fullWidth\n                            style={style.textField}\n                            placeholder={i18n.t('Add text here')}\n                            onChange={onChangeText}\n                        />\n                    </RichTextEditor>\n                </div>\n            </>\n        );\n    };\n\n    return <>{editMode ? editItem() : viewItem()}</>;\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    const items = ownProps.editMode\n        ? sGetEditDashboardItems(state)\n        : sGetDashboardItems(state);\n\n    const item = items.find(item => item.id === ownProps.item.id);\n\n    return {\n        text: item ? item.text : '',\n    };\n};\n\nTextItem.propTypes = {\n    acUpdateDashboardItem: PropTypes.func,\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    text: PropTypes.string,\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        acUpdateDashboardItem,\n    }\n)(TextItem);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nimport { FILTER_ORG_UNIT } from '../../../actions/itemFilters';\nimport { sGetItemFiltersRoot } from '../../../reducers/itemFilters';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nconst getIframeSrc = (appDetails, item, itemFilters) => {\n    let iframeSrc = `${appDetails.launchUrl}?dashboardItemId=${item.id}`;\n\n    if (\n        itemFilters &&\n        itemFilters[FILTER_ORG_UNIT] &&\n        itemFilters[FILTER_ORG_UNIT].length\n    ) {\n        const ouIds = itemFilters[FILTER_ORG_UNIT].map(\n            ouPath => ouPath.split('/').slice(-1)[0]\n        );\n\n        iframeSrc += `&userOrgUnit=${ouIds.join(',')}`;\n    }\n\n    return iframeSrc;\n};\n\nconst AppItem = ({ item, itemFilters }, context) => {\n    let appDetails;\n\n    const appKey = item.appKey;\n\n    if (appKey) {\n        appDetails = context.d2.system.installedApps.find(\n            app => app.key === appKey\n        );\n    }\n\n    return appDetails && appDetails.name && appDetails.launchUrl ? (\n        <>\n            <ItemHeader title={appDetails.name} itemId={item.id} />\n            <Line />\n            <iframe\n                title={appDetails.name}\n                src={getIframeSrc(appDetails, item, itemFilters)}\n                className=\"dashboard-item-content\"\n                style={{ border: 'none' }}\n            />\n        </>\n    ) : (\n        <>\n            <ItemHeader title={`${appKey} app not found`} />\n            <Line />\n            <div\n                className=\"dashboard-item-content\"\n                style={{\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    height: '90%',\n                }}\n            >\n                <NotInterestedIcon\n                    color=\"disabled\"\n                    disabled\n                    style={{ width: 100, height: 100, align: 'center' }}\n                />\n            </div>\n        </>\n    );\n};\n\nAppItem.propTypes = {\n    item: PropTypes.object,\n    itemFilters: PropTypes.object,\n};\n\nAppItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nconst mapStateToProps = state => ({\n    itemFilters: sGetItemFiltersRoot(state),\n});\n\nexport default connect(mapStateToProps)(AppItem);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\n\nimport { colors } from '@dhis2/ui-core';\nimport ItemHeader from '../ItemHeader';\n\nconst style = {\n    margin: '21px 28px',\n    fontSize: '14px',\n    lineHeight: '18px',\n    color: colors.grey600,\n};\n\nconst SpacerItem = props => {\n    return (\n        <>\n            <ItemHeader title={i18n.t('Spacer')} itemId={props.item.id} />\n            <p style={style}>\n                {i18n.t(\n                    'Use a spacer to create empty vertical space between other dashboard items.'\n                )}\n            </p>\n        </>\n    );\n};\n\nSpacerItem.propTypes = {\n    item: PropTypes.object,\n};\n\nexport default SpacerItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport VisualizationItem from './VisualizationItem/Item';\nimport MessagesItem from './MessagesItem/Item';\nimport NotSupportedItem from './NotSupportedItem/Item';\nimport ListItem from './ListItem/Item';\nimport TextItem from './TextItem/Item';\nimport AppItem from './AppItem/Item';\nimport SpacerItem from './SpacerItem/Item';\nimport {\n    APP,\n    VISUALIZATION,\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_CHART,\n    EVENT_REPORT,\n    MESSAGES,\n    REPORTS,\n    RESOURCES,\n    USERS,\n    TEXT,\n    SPACER,\n} from '../../modules/itemTypes';\nimport { DEFAULT_STATE_ITEM_FILTERS } from '../../reducers/itemFilters';\n\nconst getGridItem = type => {\n    switch (type) {\n        case VISUALIZATION:\n        case REPORT_TABLE:\n        case CHART:\n        case MAP:\n        case EVENT_CHART:\n        case EVENT_REPORT:\n            return VisualizationItem;\n        case MESSAGES:\n            return MessagesItem;\n        case REPORTS:\n        case RESOURCES:\n        case USERS:\n            return ListItem;\n        case TEXT:\n            return TextItem;\n        case SPACER:\n            return SpacerItem;\n        case APP:\n            return AppItem;\n        default:\n            return NotSupportedItem;\n    }\n};\n\nexport const Item = props => {\n    const GridItem = getGridItem(props.item.type);\n\n    return (\n        <GridItem\n            item={props.item}\n            editMode={props.editMode}\n            itemFilters={\n                props.editMode ? DEFAULT_STATE_ITEM_FILTERS : props.itemFilters\n            }\n            onToggleItemExpanded={props.onToggleItemExpanded}\n        />\n    );\n};\n\nItem.propTypes = {\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    itemFilters: PropTypes.object,\n    onToggleItemExpanded: PropTypes.func,\n};\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nexport const NoContentMessage = ({ text }) => (\n    <div\n        style={{\n            padding: '50px 10px',\n            textAlign: 'center',\n            fontSize: '15px',\n            fontWeight: 500,\n            color: colors.grey600,\n        }}\n    >\n        {text}\n    </div>\n);\n\nNoContentMessage.propTypes = {\n    text: PropTypes.string,\n};\n\nexport default NoContentMessage;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash/debounce';\nimport pick from 'lodash/pick';\n\nconst defaultDebounceMs = 100;\nconst defaultBufferFactor = 0.25;\n\nclass ProgressiveLoadingContainer extends Component {\n    static propTypes = {\n        children: PropTypes.node.isRequired,\n        bufferFactor: PropTypes.number,\n        className: PropTypes.string,\n        debounceMs: PropTypes.number,\n        style: PropTypes.object,\n    };\n    static defaultProps = {\n        debounceMs: defaultDebounceMs,\n        bufferFactor: defaultBufferFactor,\n    };\n\n    state = {\n        shouldLoad: false,\n    };\n    containerRef = null;\n    shouldLoadHandler = null;\n\n    checkShouldLoad() {\n        const bufferPx = this.props.bufferFactor * window.innerHeight;\n\n        if (!this.containerRef) {\n            return;\n        }\n\n        const rect = this.containerRef.getBoundingClientRect();\n        if (\n            rect.bottom > -bufferPx &&\n            rect.top < window.innerHeight + bufferPx\n        ) {\n            this.setState({\n                shouldLoad: true,\n            });\n\n            this.removeHandler();\n        }\n    }\n\n    registerHandler() {\n        this.shouldLoadHandler = debounce(\n            () => this.checkShouldLoad(),\n            this.props.debounceMs\n        );\n\n        window.addEventListener('scroll', this.shouldLoadHandler);\n    }\n    removeHandler() {\n        window.removeEventListener('scroll', this.shouldLoadHandler);\n    }\n\n    componentDidMount() {\n        this.registerHandler();\n        this.checkShouldLoad();\n    }\n\n    componentWillUnmount() {\n        this.removeHandler();\n    }\n\n    render() {\n        const { children, className, style, ...props } = this.props;\n        const { shouldLoad } = this.state;\n\n        const eventProps = pick(props, [\n            'onMouseDown',\n            'onTouchStart',\n            'onMouseUp',\n            'onTouchEnd',\n        ]);\n\n        return (\n            <div\n                ref={ref => (this.containerRef = ref)}\n                style={style}\n                className={className}\n                {...eventProps}\n            >\n                {shouldLoad && children}\n            </div>\n        );\n    }\n}\n\nexport default ProgressiveLoadingContainer;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport memoize from 'lodash/memoize';\nimport i18n from '@dhis2/d2-i18n';\nimport ReactGridLayout from 'react-grid-layout';\nimport { CircularLoader, ScreenCover } from '@dhis2/ui-core';\n\nimport {\n    acUpdateDashboardLayout,\n    acRemoveDashboardItem,\n} from '../../actions/editDashboard';\nimport { Item } from '../Item/Item';\nimport { resize as pluginResize } from '../Item/VisualizationItem/plugin';\nimport { isVisualizationType } from '../../modules/itemTypes';\nimport {\n    GRID_ROW_HEIGHT,\n    GRID_COMPACT_TYPE,\n    ITEM_MIN_HEIGHT,\n    MARGIN,\n    getGridColumns,\n    hasShape,\n    onItemResize,\n} from './gridUtil';\nimport { orArray } from '../../modules/util';\n\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\n\nimport './ItemGrid.css';\nimport { sGetSelectedId, sGetSelectedIsLoading } from '../../reducers/selected';\nimport {\n    sGetEditDashboardRoot,\n    sGetEditDashboardItems,\n} from '../../reducers/editDashboard';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n} from '../../reducers/dashboards';\nimport ProgressiveLoadingContainer from '../Item/ProgressiveLoadingContainer';\n\n// Component\n\nconst EXPANDED_HEIGHT = 17;\n// this is set in the .dashboard-item-content css\nexport const ITEM_CONTENT_PADDING_BOTTOM = 4;\n\nexport class ItemGrid extends Component {\n    state = {\n        expandedItems: {},\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.getMemoizedItem = memoize(this.getItem);\n    }\n\n    onToggleItemExpanded = clickedId => {\n        const isExpanded =\n            typeof this.state.expandedItems[clickedId] === 'boolean'\n                ? this.state.expandedItems[clickedId]\n                : false;\n\n        const expandedItems = { ...this.state.expandedItems };\n        expandedItems[clickedId] = !isExpanded;\n        this.setState({ expandedItems });\n    };\n\n    onRemoveItem = clickedId => {\n        this.props.acRemoveDashboardItem(clickedId);\n    };\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.edit) {\n            this.setState({ expandedItems: {} });\n        }\n    }\n\n    onLayoutChange = newLayout => {\n        if (this.props.edit) {\n            this.props.acUpdateDashboardLayout(newLayout);\n        }\n    };\n\n    onResizeStop = (layout, oldItem, newItem) => {\n        onItemResize(newItem.i);\n\n        const dashboardItem = this.props.dashboardItems.find(\n            item => item.id === newItem.i\n        );\n\n        // call resize on the item component if it's a plugin type\n        if (dashboardItem && isVisualizationType(dashboardItem)) {\n            pluginResize(dashboardItem);\n        }\n    };\n\n    onRemoveItemWrapper = id => () => this.onRemoveItem(id);\n\n    getItem = dashboardItem => {\n        const expandedItem = this.state.expandedItems[dashboardItem.id];\n        const hProp = { h: dashboardItem.h };\n\n        if (expandedItem && expandedItem === true) {\n            hProp.h = dashboardItem.h + EXPANDED_HEIGHT;\n        }\n\n        return Object.assign({}, dashboardItem, hProp, {\n            i: dashboardItem.id,\n            minH: ITEM_MIN_HEIGHT,\n            randomNumber: Math.random(),\n        });\n    };\n\n    getItems = dashboardItems =>\n        dashboardItems.map(item => this.getMemoizedItem(item));\n\n    getItemComponent = item => {\n        const itemClassNames = [\n            item.type,\n            this.props.edit ? 'edit' : 'view',\n        ].join(' ');\n\n        return (\n            <ProgressiveLoadingContainer\n                key={item.i}\n                className={itemClassNames}\n            >\n                <Item\n                    item={item}\n                    editMode={this.props.edit}\n                    onToggleItemExpanded={this.onToggleItemExpanded}\n                />\n            </ProgressiveLoadingContainer>\n        );\n    };\n\n    getItemComponents = items => items.map(item => this.getItemComponent(item));\n\n    render() {\n        const { edit, isLoading, dashboardItems } = this.props;\n\n        if (!isLoading && !dashboardItems.length) {\n            return (\n                <NoContentMessage\n                    text={i18n.t('There are no items on this dashboard')}\n                />\n            );\n        }\n\n        const items = edit\n            ? this.getItems(dashboardItems)\n            : dashboardItems.map(this.getItem);\n\n        return (\n            <div className=\"grid-wrapper\">\n                {isLoading ? (\n                    <ScreenCover>\n                        <CircularLoader />\n                    </ScreenCover>\n                ) : null}\n                <ReactGridLayout\n                    onLayoutChange={this.onLayoutChange}\n                    onResizeStop={this.onResizeStop}\n                    className=\"layout\"\n                    layout={items}\n                    margin={MARGIN}\n                    cols={getGridColumns()}\n                    rowHeight={GRID_ROW_HEIGHT}\n                    width={window.innerWidth}\n                    compactType={GRID_COMPACT_TYPE}\n                    isDraggable={edit}\n                    isResizable={edit}\n                    draggableCancel=\"input,textarea\"\n                >\n                    {this.getItemComponents(items)}\n                </ReactGridLayout>\n            </div>\n        );\n    }\n}\n\nItemGrid.propTypes = {\n    acRemoveDashboardItem: PropTypes.func,\n    acUpdateDashboardLayout: PropTypes.func,\n    dashboardItems: PropTypes.array,\n    edit: PropTypes.bool,\n    isLoading: PropTypes.bool,\n};\n\nItemGrid.defaultProps = {\n    dashboardItems: [],\n};\n\n// Container\n\nconst mapStateToProps = (state, ownProps) => {\n    const selectedDashboard = ownProps.edit\n        ? sGetEditDashboardRoot(state)\n        : sGetDashboardById(state, sGetSelectedId(state));\n\n    const dashboardItems = ownProps.edit\n        ? sGetEditDashboardItems(state)\n        : sGetDashboardItems(state);\n\n    return {\n        isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n        dashboardItems,\n    };\n};\n\nconst mapDispatchToProps = {\n    acUpdateDashboardLayout,\n    acRemoveDashboardItem,\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const validItems = orArray(stateProps.dashboardItems).filter(hasShape);\n\n    return {\n        ...dispatchProps,\n        edit: ownProps.edit,\n        isLoading: stateProps.isLoading,\n        dashboardItems: validItems,\n        onItemResize,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n    mergeProps\n)(ItemGrid);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport i18n from '@dhis2/d2-i18n';\n\nimport { colors } from '@dhis2/ui-core';\n\nconst styles = {\n    badgeContainer: {\n        margin: '2px',\n        padding: '0 16px',\n        borderRadius: '4px',\n        color: colors.white,\n        backgroundColor: '#212934',\n        height: 36,\n        display: 'flex',\n        alignItems: 'center',\n    },\n    badge: {\n        fontSize: '13px',\n        cursor: 'pointer',\n        whiteSpace: 'nowrap',\n    },\n    badgeRemove: {\n        fontSize: '12px',\n        textDecoration: 'underline',\n        marginLeft: '24px',\n        cursor: 'pointer',\n    },\n};\n\nclass FilterBadge extends Component {\n    onClick = id => () => this.props.onClick(id);\n    onRemove = id => () => this.props.onRemove(id);\n\n    render() {\n        const { data } = this.props;\n\n        return (\n            <div style={styles.badgeContainer}>\n                <span style={styles.badge} onClick={this.onClick(data.id)}>\n                    {`${data.name}: ${\n                        data.values.length > 1\n                            ? i18n.t('{{count}} selected', {\n                                  count: data.values.length,\n                              })\n                            : data.values[0].name\n                    }`}\n                </span>\n                <span\n                    style={styles.badgeRemove}\n                    onClick={this.onRemove(data.id)}\n                >\n                    {i18n.t('Remove')}\n                </span>\n            </div>\n        );\n    }\n}\n\nFilterBadge.propTypes = {\n    data: PropTypes.object.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onRemove: PropTypes.func.isRequired,\n};\n\nFilterBadge.defaultProps = {\n    onClick: Function.prototype,\n    onRemove: Function.prototype,\n};\n\nexport default FilterBadge;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { createSelector } from 'reselect';\n\nimport { sGetDimensions } from '../../reducers/dimensions';\nimport { sGetItemFiltersRoot } from '../../reducers/itemFilters';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { getTopOffset } from '../ControlBar/controlBarDimensions';\nimport { acRemoveItemFilter } from '../../actions/itemFilters';\nimport { acRemoveEditItemFilter } from '../../actions/editItemFilters';\nimport { acSetActiveModalDimension } from '../../actions/activeModalDimension';\n\nimport FilterBadge from './FilterBadge';\n\nimport classes from './styles/FilterBar.module.css';\n\nexport class FilterBar extends Component {\n    onBadgeRemove = id => {\n        this.props.removeItemFilter(id);\n        this.props.removeEditItemFilter(id);\n    };\n\n    onBadgeClick = id => {\n        this.props.setActiveModalDimension({\n            id,\n            name: this.props.filters.find(item => item.id === id).name,\n        });\n    };\n\n    render() {\n        const { filters, userRows } = this.props;\n        const top = getTopOffset(userRows) + 10;\n\n        return filters.length ? (\n            <div className={classes.bar} style={{ top }}>\n                {filters.map(filter => (\n                    <FilterBadge\n                        key={filter.id}\n                        data={filter}\n                        onClick={this.onBadgeClick}\n                        onRemove={this.onBadgeRemove}\n                    />\n                ))}\n            </div>\n        ) : null;\n    }\n}\n\nFilterBar.propTypes = {\n    filters: PropTypes.array.isRequired,\n    removeEditItemFilter: PropTypes.func.isRequired,\n    removeItemFilter: PropTypes.func.isRequired,\n    setActiveModalDimension: PropTypes.func,\n    userRows: PropTypes.number,\n};\n\nFilterBar.defaultProps = {\n    filters: [],\n    removeItemFIlter: Function.prototype,\n    removeEditItemFilter: Function.prototype,\n};\n\n// simplify the filters structure to:\n// [{ id: 'pe', name: 'Period', values: [{ id: 2019: name: '2019' }, {id: 'LAST_MONTH', name: 'Last month' }]}, ...]\nconst filtersSelector = createSelector(\n    [sGetItemFiltersRoot, sGetDimensions],\n    (filters, dimensions) =>\n        Object.keys(filters).reduce((arr, id) => {\n            arr.push({\n                id: id,\n                name: dimensions.find(dimension => dimension.id === id).name,\n                values: filters[id].map(value => ({\n                    id: value.id,\n                    name: value.displayName || value.name,\n                })),\n            });\n\n            return arr;\n        }, [])\n);\n\nconst mapStateToProps = state => ({\n    filters: filtersSelector(state),\n    userRows: sGetControlBarUserRows(state),\n});\n\nexport default connect(\n    mapStateToProps,\n    {\n        setActiveModalDimension: acSetActiveModalDimension,\n        removeItemFilter: acRemoveItemFilter,\n        removeEditItemFilter: acRemoveEditItemFilter,\n    }\n)(FilterBar);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TitleBar from '../TitleBar/TitleBar';\nimport ItemGrid from '../ItemGrid/ItemGrid';\nimport FilterBar from '../FilterBar/FilterBar';\n\nexport const DashboardContent = props => (\n    <>\n        <TitleBar edit={props.editMode} />\n        <FilterBar />\n        <ItemGrid edit={props.editMode} />\n    </>\n);\n\nDashboardContent.propTypes = {\n    editMode: PropTypes.bool,\n};\n\nexport default DashboardContent;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport isEmpty from 'lodash/isEmpty';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\n\nimport {\n    sGetAllDashboards,\n    sDashboardsIsFetching,\n} from '../../reducers/dashboards';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport DashboardsBar from '../ControlBar/DashboardsBar';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport DashboardContent from './DashboardContent';\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nexport const Content = ({ hasDashboardContent, dashboardsIsEmpty }) => {\n    const msg = dashboardsIsEmpty\n        ? i18n.t(\n              'No dashboards found. Use the + button to create a new dashboard.'\n          )\n        : i18n.t('Requested dashboard not found');\n\n    return hasDashboardContent ? (\n        <DashboardContent editMode={false} />\n    ) : (\n        <NoContentMessage text={msg} />\n    );\n};\n\nContent.propTypes = {\n    dashboardsIsEmpty: PropTypes.bool,\n    hasDashboardContent: PropTypes.bool,\n};\n\nexport const ViewDashboard = ({ id, dashboardsIsEmpty, dashboardsLoaded }) => {\n    const hasDashboardContent = id && !dashboardsIsEmpty;\n    const contentNotReady = !dashboardsLoaded || id === null;\n\n    return (\n        <>\n            <DashboardsBar />\n            <DashboardVerticalOffset />\n            <div className=\"dashboard-wrapper\">\n                {contentNotReady ? null : (\n                    <Content\n                        hasDashboardContent={hasDashboardContent}\n                        dashboardsIsEmpty={dashboardsIsEmpty}\n                    />\n                )}\n            </div>\n        </>\n    );\n};\n\nViewDashboard.propTypes = {\n    dashboardsIsEmpty: PropTypes.bool,\n    dashboardsLoaded: PropTypes.bool,\n    id: PropTypes.string,\n};\n\nconst mapStateToProps = state => {\n    const dashboards = sGetAllDashboards(state);\n\n    return {\n        id: sGetSelectedId(state),\n        dashboardsIsEmpty: isEmpty(dashboards),\n        dashboardsLoaded: !sDashboardsIsFetching(state),\n    };\n};\n\nexport default connect(mapStateToProps)(ViewDashboard);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport { Button } from '@dhis2/ui-core';\n\nexport const ConfirmDeleteDialog = ({\n    dashboardName,\n    onDeleteConfirmed,\n    onContinueEditing,\n    open,\n}) => {\n    const actions = [\n        <Button key=\"cancel\" secondary onClick={onContinueEditing}>\n            {i18n.t('Cancel')}\n        </Button>,\n        <Button key=\"delete\" destructive onClick={onDeleteConfirmed}>\n            {i18n.t('Delete')}\n        </Button>,\n    ];\n\n    return (\n        <Dialog open={open} onClose={onContinueEditing}>\n            <DialogTitle style={{ fontSize: '1.25rem', fontWeight: '450' }}>\n                {i18n.t('Delete dashboard')}\n            </DialogTitle>\n            <DialogContent>\n                <DialogContentText style={{ fontSize: '0.875rem' }}>\n                    {i18n.t(\n                        'Deleting dashboard \"{{ dashboardName }}\" will remove it for all users. This action cannot be undone. Are you sure you want to permanently delete this dashboard?',\n                        { dashboardName }\n                    )}\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>{actions}</DialogActions>\n        </Dialog>\n    );\n};\n\nConfirmDeleteDialog.propTypes = {\n    dashboardName: PropTypes.string,\n    open: PropTypes.bool,\n    onContinueEditing: PropTypes.func,\n    onDeleteConfirmed: PropTypes.func,\n};\n\nexport default ConfirmDeleteDialog;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport ControlBar from './ControlBar';\nimport TranslationDialog from '@dhis2/d2-ui-translation-dialog';\nimport { Button } from '@dhis2/ui-core';\n\nimport ConfirmDeleteDialog from './ConfirmDeleteDialog';\nimport {\n    tSaveDashboard,\n    acClearEditDashboard,\n} from '../../actions/editDashboard';\nimport {\n    tDeleteDashboard,\n    acSetDashboardDisplayName,\n} from '../../actions/dashboards';\nimport {\n    sGetEditDashboardRoot,\n    sGetIsNewDashboard,\n} from '../../reducers/editDashboard';\nimport {\n    CONTROL_BAR_ROW_HEIGHT,\n    MIN_ROW_COUNT,\n    getControlBarHeight,\n} from './controlBarDimensions';\nimport { apiFetchDashboard } from '../../api/dashboards';\n\nimport classes from './styles/DashboardsBar.module.css';\n\nconst buttonBarStyle = {\n    height: CONTROL_BAR_ROW_HEIGHT,\n    paddingTop: '15px',\n    marginLeft: '15px',\n    marginRight: '15px',\n};\n\nexport class EditBar extends Component {\n    state = {\n        translationDialogIsOpen: false,\n        dashboardModel: undefined,\n        confirmDeleteDialogOpen: false,\n        redirectUrl: undefined,\n    };\n\n    onConfirmDelete = () => {\n        this.setState({ confirmDeleteDialogOpen: true });\n    };\n\n    onSave = () => {\n        this.props.onSave().then(newId => {\n            this.setState({ redirectUrl: `/${newId}` });\n        });\n    };\n\n    onDiscard = () => {\n        this.props.onDiscardChanges();\n        const redirectUrl = this.props.dashboardId\n            ? `/${this.props.dashboardId}`\n            : '/';\n        this.setState({ redirectUrl });\n    };\n\n    onContinueEditing = () => {\n        this.setState({ confirmDeleteDialogOpen: false });\n    };\n\n    onDeleteConfirmed = () => {\n        this.setState({ confirmDeleteDialogOpen: false });\n        this.props.onDelete(this.props.dashboardId).then(() => {\n            this.setState({ redirectUrl: '/' });\n        });\n    };\n\n    onTranslationsSaved = async translations => {\n        if (translations && translations.length) {\n            const dbLocale = await this.context.d2.currentUser.userSettings.get(\n                'keyDbLocale'\n            );\n\n            const translation = translations.find(\n                t => t.locale === dbLocale && t.property === 'NAME'\n            );\n\n            if (translation && translation.value) {\n                this.props.onTranslate(\n                    this.props.dashboardId,\n                    translation.value\n                );\n            }\n        }\n    };\n\n    fetchDashboardModel = () => {\n        if (this.props.dashboardId && !this.state.dashboardModel) {\n            apiFetchDashboard(this.props.dashboardId).then(dashboardModel =>\n                this.setState({ dashboardModel })\n            );\n        }\n    };\n\n    componentDidMount() {\n        this.fetchDashboardModel();\n    }\n\n    componentDidUpdate() {\n        this.fetchDashboardModel();\n    }\n\n    toggleTranslationDialog = () => {\n        this.setState({\n            translationDialogIsOpen: !this.state.translationDialogIsOpen,\n        });\n    };\n\n    confirmDeleteDialog = () =>\n        this.props.deleteAccess && this.props.dashboardId ? (\n            <ConfirmDeleteDialog\n                dashboardName={this.props.dashboardName}\n                onDeleteConfirmed={this.onDeleteConfirmed}\n                onContinueEditing={this.onContinueEditing}\n                open={this.state.confirmDeleteDialogOpen}\n            />\n        ) : null;\n\n    translationDialog = () =>\n        this.state.dashboardModel && this.state.dashboardModel.id ? (\n            <TranslationDialog\n                className=\"translation-dialog\"\n                d2={this.context.d2}\n                open={this.state.translationDialogIsOpen}\n                onRequestClose={this.toggleTranslationDialog}\n                objectToTranslate={this.state.dashboardModel}\n                fieldsToTranslate={['name', 'description']}\n                // TODO handle messages in snackbar\n                onTranslationSaved={this.onTranslationsSaved}\n                onTranslationError={err =>\n                    console.log('translation update error', err)\n                }\n            />\n        ) : null;\n\n    render() {\n        if (this.state.redirectUrl) {\n            return <Redirect to={this.state.redirectUrl} />;\n        }\n\n        const { dashboardId, deleteAccess, updateAccess } = this.props;\n        const controlBarHeight = getControlBarHeight(MIN_ROW_COUNT);\n\n        const discardBtnText = updateAccess\n            ? i18n.t('Exit without saving')\n            : i18n.t('Go to dashboards');\n\n        return (\n            <>\n                <ControlBar height={controlBarHeight} editMode={true}>\n                    <div style={buttonBarStyle}>\n                        {updateAccess ? (\n                            <div className={classes.leftControls}>\n                                <span style={{ marginRight: '15px' }}>\n                                    <Button primary onClick={this.onSave}>\n                                        {i18n.t('Save changes')}\n                                    </Button>\n                                </span>\n\n                                {dashboardId ? (\n                                    <span style={{ marginRight: '15px' }}>\n                                        <Button\n                                            onClick={\n                                                this.toggleTranslationDialog\n                                            }\n                                        >\n                                            {i18n.t('Translate')}\n                                        </Button>\n                                    </span>\n                                ) : null}\n                                {dashboardId && deleteAccess ? (\n                                    <Button onClick={this.onConfirmDelete}>\n                                        {i18n.t('Delete')}\n                                    </Button>\n                                ) : null}\n                            </div>\n                        ) : null}\n\n                        <div className={classes.rightControls}>\n                            <Button secondary onClick={this.onDiscard}>\n                                {discardBtnText}\n                            </Button>\n                        </div>\n                    </div>\n                </ControlBar>\n                {this.translationDialog()}\n                {this.confirmDeleteDialog()}\n            </>\n        );\n    }\n}\n\nEditBar.propTypes = {\n    dashboardId: PropTypes.string,\n    dashboardName: PropTypes.string,\n    deleteAccess: PropTypes.bool,\n    updateAccess: PropTypes.bool,\n    onDelete: PropTypes.func,\n    onDiscardChanges: PropTypes.func,\n    onSave: PropTypes.func,\n    onTranslate: PropTypes.func,\n};\n\nEditBar.contextTypes = {\n    d2: PropTypes.object,\n};\n\nconst mapStateToProps = state => {\n    const dashboard = sGetEditDashboardRoot(state);\n\n    let deleteAccess;\n    let updateAccess;\n    if (sGetIsNewDashboard(state)) {\n        deleteAccess = true;\n        updateAccess = true;\n    } else {\n        updateAccess = dashboard.access ? dashboard.access.update : false;\n        deleteAccess = dashboard.access ? dashboard.access.delete : false;\n    }\n\n    return {\n        dashboardId: dashboard.id,\n        dashboardName: dashboard.name,\n        deleteAccess,\n        updateAccess,\n    };\n};\n\nconst mapDispatchToProps = dispatch => ({\n    onSave: () => dispatch(tSaveDashboard()).then(id => id),\n    onDelete: id => dispatch(tDeleteDashboard(id)),\n    onDiscardChanges: () => dispatch(acClearEditDashboard()),\n    onTranslate: (id, value) => dispatch(acSetDashboardDisplayName(id, value)),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(EditBar);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\n\nimport { acSetEditDashboard } from '../../actions/editDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n    sDashboardsIsFetching,\n} from '../../reducers/dashboards';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport DashboardContent from './DashboardContent';\nimport EditBar from '../ControlBar/EditBar';\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nexport const Content = ({ updateAccess }) => {\n    return updateAccess ? (\n        <DashboardContent editMode={true} />\n    ) : (\n        <NoContentMessage text={i18n.t('No access')} />\n    );\n};\n\nContent.propTypes = {\n    updateAccess: PropTypes.bool,\n};\nexport class EditDashboard extends Component {\n    state = {\n        initialized: false,\n    };\n\n    initEditDashboard = () => {\n        if (this.props.dashboard) {\n            this.setState({ initialized: true });\n            this.props.setEditDashboard(this.props.dashboard, this.props.items);\n        }\n    };\n\n    componentDidMount() {\n        this.initEditDashboard();\n    }\n\n    componentDidUpdate() {\n        if (!this.state.initialized) {\n            this.initEditDashboard();\n        }\n    }\n\n    getDashboardContent = () => {\n        const contentNotReady =\n            !this.props.dashboardsLoaded || this.props.id === null;\n\n        return (\n            <div className=\"dashboard-wrapper\">\n                {contentNotReady ? null : (\n                    <Content updateAccess={this.props.updateAccess} />\n                )}\n            </div>\n        );\n    };\n\n    render() {\n        return (\n            <>\n                <EditBar />\n                <DashboardVerticalOffset editMode={true} />\n                {this.getDashboardContent()}\n            </>\n        );\n    }\n}\n\nEditDashboard.propTypes = {\n    dashboard: PropTypes.object,\n    dashboardsLoaded: PropTypes.bool,\n    id: PropTypes.string,\n    items: PropTypes.array,\n    setEditDashboard: PropTypes.func,\n    updateAccess: PropTypes.bool,\n};\n\nconst mapStateToProps = state => {\n    const id = sGetSelectedId(state);\n    const dashboard = id ? sGetDashboardById(state, id) : null;\n\n    const updateAccess =\n        dashboard && dashboard.access ? dashboard.access.update : false;\n\n    return {\n        dashboard,\n        id,\n        updateAccess,\n        items: sGetDashboardItems(state),\n        dashboardsLoaded: !sDashboardsIsFetching(state),\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        setEditDashboard: acSetEditDashboard,\n    }\n)(EditDashboard);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { acSetEditNewDashboard } from '../../actions/editDashboard';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport EditBar from '../ControlBar/EditBar';\nimport DashboardContent from './DashboardContent';\n\nclass NewDashboard extends Component {\n    componentDidMount() {\n        this.props.setNewDashboard();\n    }\n\n    render() {\n        return (\n            <>\n                <EditBar />\n                <DashboardVerticalOffset editMode={true} />\n                <div className=\"dashboard-wrapper\">\n                    <DashboardContent editMode={true} />\n                </div>\n            </>\n        );\n    }\n}\n\nNewDashboard.propTypes = {\n    setNewDashboard: PropTypes.func,\n};\n\nexport default connect(\n    null,\n    {\n        setNewDashboard: acSetEditNewDashboard,\n    }\n)(NewDashboard);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { tSelectDashboard } from '../../actions/dashboards';\nimport { sDashboardsIsFetching } from '../../reducers/dashboards';\nimport { EDIT, NEW } from './dashboardModes';\nimport ViewDashboard from './ViewDashboard';\nimport EditDashboard from './EditDashboard';\nimport NewDashboard from './NewDashboard';\n\nclass Dashboard extends Component {\n    setDashboard = () => {\n        if (this.props.dashboardsLoaded) {\n            const id = this.props.match.params.dashboardId || null;\n\n            this.props.selectDashboard(id);\n\n            this.scrollToTop();\n        }\n    };\n\n    scrollToTop = () => {\n        window.scrollTo(0, 0);\n    };\n\n    componentDidMount() {\n        this.setDashboard();\n    }\n\n    componentDidUpdate() {\n        this.setDashboard();\n    }\n\n    render() {\n        switch (this.props.mode) {\n            case EDIT:\n                return <EditDashboard />;\n            case NEW:\n                return <NewDashboard />;\n            default:\n                return <ViewDashboard />;\n        }\n    }\n}\n\nDashboard.propTypes = {\n    dashboardsLoaded: PropTypes.bool,\n    match: PropTypes.object,\n    mode: PropTypes.string,\n    selectDashboard: PropTypes.func,\n};\n\nconst mapStateToProps = state => {\n    return { dashboardsLoaded: !sDashboardsIsFetching(state) };\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        selectDashboard: tSelectDashboard,\n    }\n)(Dashboard);\n","export const EDIT = 'edit';\nexport const NEW = 'new';\nexport const VIEW = 'view';\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { HeaderBar } from '@dhis2/ui-widgets';\nimport { CssVariables } from '@dhis2/ui-core';\n\nimport { EDIT, VIEW, NEW } from './Dashboard/dashboardModes';\nimport { acReceivedUser } from '../actions/user';\nimport { tFetchDashboards } from '../actions/dashboards';\nimport { tSetControlBarRows } from '../actions/controlBar';\nimport { tSetDimensions } from '../actions/dimensions';\nimport Dashboard from './Dashboard/Dashboard';\nimport SnackbarMessage from './SnackbarMessage/SnackbarMessage';\n\nimport 'typeface-roboto';\nimport './App.css';\n\nexport class App extends Component {\n    componentDidMount() {\n        this.props.setCurrentUser(this.props.d2.currentUser);\n        this.props.fetchDashboards();\n        this.props.setControlBarRows();\n        this.props.setDimensions(this.props.d2);\n    }\n\n    getChildContext() {\n        return { baseUrl: this.props.baseUrl, i18n, d2: this.props.d2 };\n    }\n\n    render() {\n        return (\n            <>\n                <CssVariables colors spacers />\n                <div className=\"app-wrapper\">\n                    <div className=\"dashboard-header-bar\">\n                        <HeaderBar appName={i18n.t('Dashboard')} />\n                    </div>\n                    <Router>\n                        <Switch>\n                            <Route\n                                exact\n                                path=\"/\"\n                                render={props => (\n                                    <Dashboard {...props} mode={VIEW} />\n                                )}\n                            />\n                            <Route\n                                exact\n                                path=\"/new\"\n                                render={props => (\n                                    <Dashboard {...props} mode={NEW} />\n                                )}\n                            />\n                            <Route\n                                exact\n                                path=\"/:dashboardId\"\n                                render={props => (\n                                    <Dashboard {...props} mode={VIEW} />\n                                )}\n                            />\n                            <Route\n                                exact\n                                path=\"/:dashboardId/edit\"\n                                render={props => (\n                                    <Dashboard {...props} mode={EDIT} />\n                                )}\n                            />\n                        </Switch>\n                    </Router>\n                    <SnackbarMessage />\n                </div>\n            </>\n        );\n    }\n}\n\nApp.propTypes = {\n    fetchDashboards: PropTypes.func.isRequired,\n    setControlBarRows: PropTypes.func.isRequired,\n    setCurrentUser: PropTypes.func.isRequired,\n    setDimensions: PropTypes.func.isRequired,\n    baseUrl: PropTypes.string,\n    d2: PropTypes.object,\n};\n\nApp.childContextTypes = {\n    baseUrl: PropTypes.string,\n    i18n: PropTypes.object,\n    d2: PropTypes.object,\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setCurrentUser: currentUser => dispatch(acReceivedUser(currentUser)),\n        fetchDashboards: () => dispatch(tFetchDashboards()),\n        setControlBarRows: () => dispatch(tSetControlBarRows()),\n        setDimensions: d2 => dispatch(tSetDimensions(d2)),\n    };\n};\n\nexport default connect(\n    null,\n    mapDispatchToProps\n)(App);\n","import { RECEIVED_USER } from '../reducers/user';\n\nexport const acReceivedUser = value => ({\n    type: RECEIVED_USER,\n    value,\n});\n","//------------------------------------------------------------------------------\n// <auto-generated>\n// This code was generated by d2-i18n-generate.\n//\n// Changes to this file may cause incorrect behavior and will be lost if\n// the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\nimport i18n from '@dhis2/d2-i18n';\nimport moment from 'moment';\nimport 'moment/locale/ar';\nimport 'moment/locale/es';\nimport 'moment/locale/fr';\nimport 'moment/locale/lo';\nimport 'moment/locale/pt';\nimport 'moment/locale/ru';\nimport 'moment/locale/sv';\nimport 'moment/locale/tg';\nimport 'moment/locale/uk';\nimport 'moment/locale/ur';\nimport 'moment/locale/vi';\nimport 'moment/locale/zh-cn';\n\nimport arTranslations from './ar/translations.json';\nimport daTranslations from './da/translations.json';\nimport enTranslations from './en/translations.json';\nimport esTranslations from './es/translations.json';\nimport frTranslations from './fr/translations.json';\nimport idTranslations from './id/translations.json';\nimport kmTranslations from './km/translations.json';\nimport loTranslations from './lo/translations.json';\nimport myTranslations from './my/translations.json';\nimport prsTranslations from './prs/translations.json';\nimport psTranslations from './ps/translations.json';\nimport ptTranslations from './pt/translations.json';\nimport pt_BRTranslations from './pt_BR/translations.json';\nimport ruTranslations from './ru/translations.json';\nimport svTranslations from './sv/translations.json';\nimport tetTranslations from './tet/translations.json';\nimport tgTranslations from './tg/translations.json';\nimport ukTranslations from './uk/translations.json';\nimport urTranslations from './ur/translations.json';\nimport viTranslations from './vi/translations.json';\nimport zhTranslations from './zh/translations.json';\nimport zh_CNTranslations from './zh_CN/translations.json';\n\nconst namespace = 'dashboards-app';\nmoment.locale('en');\n\ni18n.addResources('ar', namespace, arTranslations);\ni18n.addResources('da', namespace, daTranslations);\ni18n.addResources('en', namespace, enTranslations);\ni18n.addResources('es', namespace, esTranslations);\ni18n.addResources('fr', namespace, frTranslations);\ni18n.addResources('id', namespace, idTranslations);\ni18n.addResources('km', namespace, kmTranslations);\ni18n.addResources('lo', namespace, loTranslations);\ni18n.addResources('my', namespace, myTranslations);\ni18n.addResources('prs', namespace, prsTranslations);\ni18n.addResources('ps', namespace, psTranslations);\ni18n.addResources('pt', namespace, ptTranslations);\ni18n.addResources('pt_BR', namespace, pt_BRTranslations);\ni18n.addResources('ru', namespace, ruTranslations);\ni18n.addResources('sv', namespace, svTranslations);\ni18n.addResources('tet', namespace, tetTranslations);\ni18n.addResources('tg', namespace, tgTranslations);\ni18n.addResources('uk', namespace, ukTranslations);\ni18n.addResources('ur', namespace, urTranslations);\ni18n.addResources('vi', namespace, viTranslations);\ni18n.addResources('zh', namespace, zhTranslations);\ni18n.addResources('zh_CN', namespace, zh_CNTranslations);\n\ni18n.setDefaultNamespace(namespace);\ni18n.changeLanguage('en');\n\nexport default i18n;\n","/** @module reducers/selected */\nimport { validateReducer } from '../modules/util';\n\nexport const SET_STYLE = 'SET_STYLE';\n\nexport const DEFAULT_STATE_STYLE = 'LIST';\n\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\nconst style = (state = DEFAULT_STATE_STYLE, action) => {\n    switch (action.type) {\n        case SET_STYLE:\n            return validateReducer(action.value, DEFAULT_STATE_STYLE);\n        default:\n            return state;\n    }\n};\n\nexport default style;\n\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\nexport const sGetStyleRoot = state => state.style;\n","import { combineReducers } from 'redux';\nimport arraySort from 'd2-utilizr/lib/arraySort';\n\nimport dashboards, { sGetDashboardsRoot } from './dashboards';\nimport selected from './selected';\nimport dashboardsFilter, {\n    ownerData,\n    sGetFilterName,\n    sGetFilterOrder,\n    sGetFilterOwner,\n} from './dashboardsFilter';\nimport controlBar from './controlBar';\nimport visualizations from './visualizations';\nimport editDashboard from './editDashboard';\nimport messages from './messages';\nimport user from './user';\nimport snackbar from './snackbar';\nimport itemFilters from './itemFilters';\nimport editItemFilters from './editItemFilters';\nimport style from './style';\nimport dimensions from './dimensions';\nimport settings from './settings';\nimport activeModalDimension from './activeModalDimension';\n\nconst USER = 'system';\n\n// Reducers\n\nexport default combineReducers({\n    dashboards,\n    selected,\n    dashboardsFilter,\n    controlBar,\n    visualizations,\n    messages,\n    user,\n    editDashboard,\n    itemFilters,\n    editItemFilters,\n    style,\n    snackbar,\n    dimensions,\n    settings,\n    activeModalDimension,\n});\n\n// Map constants to data\nconst mapConstToData = {\n    NAME: 'name',\n    ITEMS: 'numberOfItems',\n    CREATED: 'created',\n    OWNER: 'owner',\n};\n\n// Selectors\n\n// Filter dashboards by name\nexport const sFilterDashboardsByName = (dashboards, filter) =>\n    dashboards.filter(d =>\n        d.displayName.toLowerCase().includes(filter.toLowerCase())\n    );\n\n// Filter dashboards by owner, TODO FIXME\nexport const sFilterDashboardsByOwner = (dashboards, filter) => {\n    const ME = ownerData[1]; // TODO\n    const OTHERS = ownerData[2]; // TODO\n\n    switch (filter) {\n        case ME:\n            return dashboards.filter(d => d.owner === USER);\n        case OTHERS:\n            return dashboards.filter(d => d.owner !== USER);\n        default:\n            return dashboards;\n    }\n};\n\n// Filter dashboards by order\nexport const sFilterDashboardsByOrder = (dashboards, filter) => {\n    const filterValues = filter.split(':');\n\n    const key = filterValues[0];\n    const direction = filterValues[1];\n\n    return arraySort(dashboards, direction, mapConstToData[key]);\n};\n\n// Selectors dependency level 2\n\n// Get filtered dashboards\nexport const sGetFilteredDashboards = state => {\n    const dashboards = sGetDashboardsRoot(state);\n\n    const nameFilter = sGetFilterName(state);\n    const ownerFilter = sGetFilterOwner(state);\n    const orderFilter = sGetFilterOrder(state);\n\n    return sFilterDashboardsByOrder(\n        sFilterDashboardsByName(\n            sFilterDashboardsByOwner(dashboards, ownerFilter),\n            nameFilter\n        ),\n        orderFilter\n    );\n};\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport reducer from './reducers';\n\nconst configureStore = () => {\n    const middleware = [thunk];\n\n    // Enable Redux devtools if extension is installed instead of redux-logger\n    const composeEnhancers =\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n    if (\n        !window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ &&\n        process.env.NODE_ENV !== 'production'\n    ) {\n        middleware.push(createLogger());\n    }\n\n    return createStore(\n        reducer,\n        composeEnhancers(applyMiddleware(...middleware))\n    );\n};\n\nexport default configureStore;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport { init as d2Init, config, getManifest, getUserSettings } from 'd2';\nimport dhis2theme from '@dhis2/d2-ui-core/theme/mui3.theme';\n\nimport { Provider as RuntimeProvider } from '@dhis2/app-runtime';\nimport { CssReset } from '@dhis2/ui-core';\n\nimport App from './components/App';\nimport './index.css';\nimport i18n from './locales';\nimport configureStore from './configureStore';\n\nconst muiTheme = () => createMuiTheme(dhis2theme);\n\nconst configI18n = userSettings => {\n    const uiLocale = userSettings.keyUiLocale;\n\n    if (uiLocale && uiLocale !== 'en') {\n        config.i18n.sources.add(`./i18n/i18n_module_${uiLocale}.properties`);\n    }\n\n    config.i18n.sources.add('./i18n/i18n_module_en.properties');\n    i18n.changeLanguage(uiLocale);\n};\n\nconst init = async () => {\n    const manifest = await getManifest('./manifest.webapp');\n\n    // log app info\n    console.info(\n        `Dashboards app, v${manifest.version}, ${\n            manifest.manifest_generated_at\n        }`\n    );\n\n    const isProd = process.env.NODE_ENV === 'production';\n\n    if (\n        !isProd &&\n        (!process.env.REACT_APP_DHIS2_BASE_URL ||\n            !process.env.REACT_APP_DHIS2_AUTHORIZATION)\n    ) {\n        throw new Error(\n            'Missing env variables REACT_APP_DHIS2_BASE_URL and REACT_APP_DHIS2_AUTHORIZATION'\n        );\n    }\n\n    // api config\n    const baseUrl = isProd\n        ? manifest.activities.dhis.href\n        : process.env.REACT_APP_DHIS2_BASE_URL;\n    const authorization = process.env.REACT_APP_DHIS2_AUTHORIZATION;\n\n    config.baseUrl = `${baseUrl}/api/${manifest.dhis2.apiVersion}`;\n    config.headers = isProd ? null : { Authorization: authorization };\n    config.schemas = [\n        'chart',\n        'map',\n        'report',\n        'reportTable',\n        'eventChart',\n        'eventReport',\n        'dashboard',\n        'organisationUnit',\n        'userGroup',\n    ];\n\n    getUserSettings()\n        .then(configI18n)\n        .then(() => d2Init(config))\n        .then(initializedD2 => {\n            ReactDOM.render(\n                <RuntimeProvider\n                    config={{\n                        baseUrl: baseUrl,\n                        apiVersion: manifest.dhis2.apiVersion,\n                    }}\n                >\n                    <CssReset />\n                    <Provider store={configureStore()}>\n                        <MuiThemeProvider theme={muiTheme()}>\n                            <App baseUrl={baseUrl} d2={initializedD2} />\n                        </MuiThemeProvider>\n                    </Provider>\n                </RuntimeProvider>,\n                document.getElementById('root')\n            );\n        });\n};\n\ninit();\n","import isObject from 'lodash/isObject';\n\n// validation\nexport function orNull(param) {\n    return param === undefined ? null : param;\n}\n\nexport function orArray(param) {\n    return Array.isArray(param) ? param : [];\n}\n\nexport function orObject(param) {\n    return isObject(param) ? param : {};\n}\n\n// array\nexport function arrayGetById(array, id) {\n    return array.find(item => item.id === id);\n}\n\n// object\nexport function arrayToIdMap(array) {\n    return array.reduce((obj, item) => {\n        obj[item.id] = item;\n        return obj;\n    }, {});\n}\n\n// date\nexport function getDate() {\n    const y = Math.floor(Math.random() * 3) + 2015;\n    const M = Math.floor(Math.random() * 12) + 1;\n    const d = Math.floor(Math.random() * 28) + 1;\n    // const h = Math.floor(Math.random() * 23) + 1;\n    // const m = Math.floor(Math.random() * 59) + 1;\n    // const s = Math.floor(Math.random() * 59) + 1;\n\n    return new Date(`${y}-${M}-${d}`)\n        .toJSON()\n        .replace('T', ' ')\n        .substr(0, 10);\n}\n\nexport const formatDate = (value, uiLocale) => {\n    if (typeof global.Intl !== 'undefined' && Intl.DateTimeFormat) {\n        const locale = uiLocale || 'en';\n        return new Intl.DateTimeFormat(locale, {\n            year: 'numeric',\n            month: 'short',\n            day: 'numeric',\n        }).format(new Date(value));\n    }\n\n    return value.substr(0, 19).replace('T', ' ');\n};\n\n/**\n * Sorts an array of objects based on provided date property\n *\n * @param {Array} items Array of objects\n * @param {String} dateProp Name of the date property to be used for sorting\n * @param {Boolean} ascending Whether to sort ascending or descending\n */\nexport const sortByDate = (items, dateProp, ascending = true) => {\n    const values = Object.values(items);\n\n    values.sort((a, b) => {\n        const aDate = new Date(a[dateProp]);\n        const bDate = new Date(b[dateProp]);\n\n        return ascending ? aDate - bDate : bDate - aDate;\n    });\n\n    return values;\n};\n\n// reducer validator\nexport const validateReducer = (value, defaultValue) =>\n    value === undefined || value === null ? defaultValue : value;\n\nexport const getBaseUrl = d2 => {\n    const api = d2.Api.getApi();\n    const idx = api.baseUrl.indexOf('/api');\n    return idx > -1 ? api.baseUrl.slice(0, idx) : api.baseUrl;\n};\n\nexport const getWithoutId = object => ({\n    ...object,\n    id: undefined,\n});\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"leftControls\":\"DashboardsBar_leftControls__2kr14\",\"rightControls\":\"DashboardsBar_rightControls__2l1lT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuItem\":\"ContentMenuItem_menuItem__2DIcB\",\"launchLink\":\"ContentMenuItem_launchLink__MRANR\",\"label\":\"ContentMenuItem_label__2pIfq\",\"buttonInsert\":\"ContentMenuItem_buttonInsert__1GlZy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemWrap\":\"ItemHeader_itemWrap__3gJiQ\",\"itemHeaderWrap\":\"ItemHeader_itemHeaderWrap__xEKwZ\",\"itemTitle\":\"ItemHeader_itemTitle__3LmXp\",\"itemActionsWrap\":\"ItemHeader_itemActionsWrap__1U5Ex\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ControlBar_root__3LaTt\",\"content\":\"ControlBar_content__1r98-\",\"draghandle\":\"ControlBar_draghandle__1VWa0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FatalErrorBoundary_container__x6zhd\",\"icon\":\"FatalErrorBoundary_icon__2XjC2\",\"message\":\"FatalErrorBoundary_message__2p9y8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"showMore\":\"ShowMoreButton_showMore__rWqw9\",\"disabled\":\"ShowMoreButton_disabled__2oX7G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ClearButton_button__2yjcV\",\"icon\":\"ClearButton_icon__1fqj8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterField\":\"Filter_filterField__23cD5\",\"searchIcon\":\"Filter_searchIcon__2cHsm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"progress\":\"LoadingMask_progress__NsmGX\",\"outer\":\"LoadingMask_outer__2Nb9y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textDiv\":\"Item_textDiv__2b-T5\",\"loadingCover\":\"Item_loadingCover__fhJgG\"};","import isObject from 'lodash/isObject';\nimport { VIS_TYPE_COLUMN, VIS_TYPE_PIVOT_TABLE } from '@dhis2/analytics';\nimport { apiFetchFavorite, getMapFields } from '../../../api/metadata';\nimport {\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_REPORT,\n    EVENT_CHART,\n    itemTypeMap,\n} from '../../../modules/itemTypes';\nimport { getBaseUrl, getWithoutId } from '../../../modules/util';\nimport { getGridItemDomId } from '../../ItemGrid/gridUtil';\n\n//external plugins\nconst itemTypeToExternalPlugin = {\n    [MAP]: 'mapPlugin',\n    [EVENT_REPORT]: 'eventReportPlugin',\n    [EVENT_CHART]: 'eventChartPlugin',\n};\nconst hasIntegratedPlugin = type => [CHART, REPORT_TABLE].includes(type);\n\nconst getPlugin = type => {\n    if (hasIntegratedPlugin(type)) {\n        return true;\n    }\n    const pluginName = itemTypeToExternalPlugin[type];\n\n    return global[pluginName];\n};\n\nexport const THEMATIC_LAYER = 'thematic';\n\nexport const pluginIsAvailable = (item = {}, visualization = {}) => {\n    const type = visualization.activeType || item.type;\n\n    return !!getPlugin(type);\n};\n\nexport const extractFavorite = item => {\n    if (!isObject(item)) {\n        return null;\n    }\n\n    const propName = itemTypeMap[item.type].propName;\n\n    return (\n        item[propName] ||\n        (item.reportTable ||\n            item.chart ||\n            item.map ||\n            item.eventReport ||\n            item.eventChart ||\n            {})\n    );\n};\n\nexport const extractMapView = map =>\n    map.mapViews && map.mapViews.find(mv => mv.layer.includes(THEMATIC_LAYER));\n\nexport const loadPlugin = (plugin, config, credentials) => {\n    if (!(plugin && plugin.load)) {\n        return;\n    }\n\n    plugin.url = credentials.baseUrl;\n    plugin.loadingIndicator = true;\n    plugin.dashboard = true;\n    if (credentials.auth) {\n        plugin.auth = credentials.auth;\n    }\n    plugin.load(config);\n};\n\nexport const getId = item => extractFavorite(item).id;\nexport const getName = item => extractFavorite(item).name;\nexport const getDescription = item => extractFavorite(item).description;\nexport const getLink = (item, d2) => {\n    const baseUrl = getBaseUrl(d2);\n    const appUrl = itemTypeMap[item.type].appUrl(getId(item));\n\n    return `${baseUrl}/${appUrl}`;\n};\n\nexport const load = async (\n    item,\n    visualization,\n    { credentials, activeType }\n) => {\n    const config = {\n        ...visualization,\n        el: getGridItemDomId(item.id),\n    };\n\n    const type = activeType || item.type;\n    const plugin = getPlugin(type);\n\n    loadPlugin(plugin, config, credentials);\n};\n\nexport const fetch = async item => {\n    const fetchedFavorite = await apiFetchFavorite(getId(item), item.type, {\n        fields: item.type === MAP ? getMapFields() : null,\n    });\n\n    return fetchedFavorite;\n};\n\nexport const resize = item => {\n    const plugin = getPlugin(item.type);\n\n    if (plugin && plugin.resize) {\n        plugin.resize(getGridItemDomId(item.id));\n    }\n};\n\nexport const unmount = (item, activeType) => {\n    const plugin = getPlugin(activeType);\n\n    if (plugin && plugin.unmount) {\n        plugin.unmount(getGridItemDomId(item.id));\n    }\n};\n\nexport const getVisualizationConfig = (\n    visualization,\n    originalType,\n    activeType\n) => {\n    if (originalType === MAP && originalType !== activeType) {\n        const extractedMapView = extractMapView(visualization);\n\n        if (extractedMapView === undefined) {\n            return null;\n        }\n\n        return getWithoutId({\n            ...visualization,\n            ...extractedMapView,\n            mapViews: undefined,\n            type: activeType === CHART ? VIS_TYPE_COLUMN : VIS_TYPE_PIVOT_TABLE,\n        });\n    } else if (originalType === REPORT_TABLE && activeType === CHART) {\n        return getWithoutId({ ...visualization, type: VIS_TYPE_COLUMN });\n    } else if (originalType === CHART && activeType === REPORT_TABLE) {\n        return getWithoutId({\n            ...visualization,\n            type: VIS_TYPE_PIVOT_TABLE,\n        });\n    }\n\n    return getWithoutId(visualization);\n};\n","import isFunction from 'd2-utilizr/lib/isFunction';\n\nimport { orObject } from '../../modules/util';\n\n// Dimensions for the react-grid-layout\n\nexport const GRID_COMPACT_TYPE = 'vertical'; // vertical | horizonal | null\nexport const GRID_ROW_HEIGHT = 10;\nconst GRID_COLUMN_WIDTH_PX = 20;\nconst GRID_LAYOUT = 'FLEXIBLE'; // FIXED | FLEXIBLE\nexport const MARGIN = [10, 10];\n\nexport const NEW_ITEM_SHAPE = { x: 0, y: 0, w: 20, h: 29 };\nexport const ITEM_MIN_HEIGHT = 4;\n\n// Dimensions for getShape\n\nconst NUMBER_OF_ITEM_COLS = 2;\nconst GRID_COLUMNS = 60;\n\nexport const getGridColumns = () => {\n    switch (GRID_LAYOUT) {\n        case 'FLEXIBLE':\n            return GRID_COLUMNS;\n        case 'FIXED':\n            return Math.floor((window.innerWidth - 20) / GRID_COLUMN_WIDTH_PX);\n        default:\n            return GRID_COLUMNS;\n    }\n};\n\n// isNonNegativeInteger\n\nconst isNonNegativeInteger = x => Number.isInteger(x) && x >= 0;\n\n// Does the item have all the shape properties?\n\nexport const hasShape = item =>\n    isNonNegativeInteger(item.x) &&\n    isNonNegativeInteger(item.y) &&\n    isNonNegativeInteger(item.w) &&\n    isNonNegativeInteger(item.h);\n\n// returns a rectangular grid block dimensioned with x, y, w, h in grid units.\n// based on a grid with 3 items across\nexport const getShape = i => {\n    if (!isNonNegativeInteger(i)) {\n        throw new Error('Invalid grid block number');\n    }\n\n    const col = i % NUMBER_OF_ITEM_COLS;\n    const row = Math.floor(i / NUMBER_OF_ITEM_COLS);\n    const itemWidth = Math.floor((GRID_COLUMNS - 1) / NUMBER_OF_ITEM_COLS);\n    const itemHeight = GRID_ROW_HEIGHT * 2;\n\n    return {\n        x: col * itemWidth,\n        y: row * itemHeight,\n        w: itemWidth,\n        h: itemHeight,\n    };\n};\n\n/**\n * Calculates the grid item's original height in pixels based\n * on the height in grid units. This calculation\n * is copied directly from react-grid-layout GridItem.js (calcPosition)\n *\n * @param {Object} item item containing shape (x, y, w, h)\n */\nconst getOriginalHeight = item => {\n    const originalHeight = Math.round(\n        GRID_ROW_HEIGHT * item.h + Math.max(0, item.h - 1) * MARGIN[1]\n    );\n\n    return { originalHeight };\n};\n\n/**\n * Returns an array of items containing the x, y, w, h dimensions\n * and the item's originalheight in pixels\n * @function\n * @param {Array} items\n * @returns {Array}\n */\n\nexport const withShape = items =>\n    items.map((item, index) => {\n        const itemWithShape = hasShape(item)\n            ? item\n            : Object.assign({}, item, getShape(index));\n\n        return Object.assign(\n            {},\n            itemWithShape,\n            getOriginalHeight(itemWithShape)\n        );\n    });\n\nexport const getGridItemDomId = id => `item-${id}`;\n\nexport function onItemResize(id) {\n    const el = orObject(document.querySelector(`#${getGridItemDomId(id)}`));\n    if (isFunction(el.setViewportSize))\n        setTimeout(\n            () => el.setViewportSize(el.clientWidth - 5, el.clientHeight - 5),\n            10\n        );\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"showMoreButton\":\"CategorizedMenuGroup_showMoreButton__3-0Wa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"deleteItemButton\":\"DeleteItemButton_deleteItemButton__4YLrM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bar\":\"FilterBar_bar__2mF3Z\"};"],"sourceRoot":""}
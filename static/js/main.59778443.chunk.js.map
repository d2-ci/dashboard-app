{"version":3,"sources":["api/metadata.js","components/Item/ListItem/Item.module.css","modules/itemTypes.js","reducers/user.js","reducers/dashboards.js","reducers/editDashboard.js","reducers/editItemFilters.js","reducers/selected.js","actions/editItemFilters.js","reducers/itemFilters.js","actions/itemFilters.js","reducers/messages.js","api/messages.js","reducers/snackbar.js","actions/snackbar.js","reducers/visualizations.js","actions/visualizations.js","api/index.js","api/dashboards.js","components/SnackbarMessage/SnackbarMessage.js","actions/selected.js","api/localStorage.js","components/Item/MessagesItem/actions.js","api/editDashboard.js","actions/editDashboard.js","actions/dashboards.js","reducers/controlBar.js","api/controlBar.js","actions/controlBar.js","reducers/dimensions.js","reducers/settings.js","actions/dimensions.js","components/ControlBar/ShowMoreButton.js","components/ControlBar/controlBarDimensions.js","components/ControlBar/ControlBar.js","icons/Star.js","api/dataStatistics.js","components/ControlBar/DashboardItemChip.js","icons/AddCircle.js","icons/Clear.js","components/ControlBar/ClearButton.js","reducers/dashboardsFilter.js","components/ControlBar/Filter.js","components/ControlBar/DashboardsBar.js","actions/dashboardsFilter.js","components/Dashboard/DashboardVerticalOffset.js","components/ItemSelector/HeaderMenuItem.js","icons/Launch.js","components/ItemSelector/ContentMenuItem.js","components/ItemSelector/selectableItems.js","components/ItemSelector/CategorizedMenuGroup.js","components/ItemSelector/actions.js","components/ItemSelector/SinglesMenuGroup.js","components/ItemSelector/ItemSelector.js","components/TitleBar/EditTitleBar.js","components/ItemFilter/FilterDialog.js","reducers/activeModalDimension.js","actions/activeModalDimension.js","components/ItemFilter/FilterSelector.js","components/TitleBar/Info.js","components/TitleBar/ViewTitleBar.js","components/TitleBar/TitleBar.js","components/Item/VisualizationItem/DefaultPlugin.js","components/Item/VisualizationItem/assets/icons.js","components/Item/VisualizationItem/FatalErrorBoundary.js","components/Item/DeleteItemButton.js","components/Item/ItemHeader.js","components/Item/VisualizationItem/ItemHeaderButtons.js","components/Item/VisualizationItem/ItemFooter.js","modules/memoizeOne.js","components/Item/VisualizationItem/LoadingMask.js","components/Item/VisualizationItem/Item.js","widgets/Line.js","components/Item/MessagesItem/Item.js","components/Item/NotSupportedItem/Item.js","icons/Description.js","icons/Delete.js","components/Item/ListItem/Item.js","components/Item/ListItem/actions.js","components/Item/TextItem/Item.js","components/Item/AppItem/Item.js","components/Item/SpacerItem/Item.js","components/Item/Item.js","widgets/NoContentMessage.js","components/Item/ProgressiveLoadingContainer.js","components/ItemGrid/ItemGrid.js","components/FilterBar/FilterBadge.js","components/FilterBar/FilterBar.js","components/Dashboard/DashboardContent.js","components/Dashboard/ViewDashboard.js","components/ControlBar/ConfirmDeleteDialog.js","components/ControlBar/EditBar.js","components/Dashboard/EditDashboard.js","components/Dashboard/NewDashboard.js","components/Dashboard/Dashboard.js","components/Dashboard/dashboardModes.js","components/App.js","actions/user.js","locales/index.js","reducers/style.js","reducers/index.js","configureStore.js","index.js","components/ControlBar/styles/DashboardsBar.module.css","components/ItemSelector/styles/ContentMenuItem.module.css","components/Item/styles/ItemHeader.module.css","modules/util.js","components/ControlBar/styles/ControlBar.module.css","components/Item/VisualizationItem/styles/FatalErrorBoundary.module.css","components/ControlBar/styles/ClearButton.module.css","components/Item/VisualizationItem/plugin.js","components/ItemGrid/gridUtil.js","components/ItemSelector/styles/CategorizedMenuGroup.module.css","components/Item/styles/DeleteItemButton.module.css"],"names":["getIdNameFields","rename","arguments","length","undefined","concat","getDimensionFields","_ref2","withItems","arrayClean","join","getAxesFields","_ref3","getFavoriteFields","_ref4","withDimensions","withOptions","getFavoritesFields","_ref5","Object","_home_runner_work_dashboard_app_dashboard_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","getListItemFields","getMapFields","apiFetchFavorite","id","type","_ref6","fields","getInstance","then","d2","Api","getApi","get","getEndPointName","module","exports","list","item","itemicon","link","deleteicon","deletebutton","VISUALIZATION","REPORT_TABLE","CHART","MAP","EVENT_REPORT","EVENT_CHART","APP","REPORTS","RESOURCES","USERS","MESSAGES","TEXT","SPACER","spacerContent","emptyTextItemContent","isSpacerType","text","isTextType","isVisualizationType","itemTypeMap","hasMapView","itemType","domainType","isTrackerDomainType","getDefaultItemCount","defaultItemCount","getAppName","appName","_itemTypeMap","_home_runner_work_dashboard_app_dashboard_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","endPointName","propName","pluralTitle","i18n","t","appUrl","Function","prototype","Date","getTime","getItemUrl","url","launchUrl","getBaseUrl","getItemIcon","TableIcon","ChartIcon","MapIcon","ExtensionIcon","DescriptionIcon","PersonIcon","FontDownloadIcon","EmailIcon","CropFreeIcon","NotInterestedIcon","DEFAULT_STATE_USER","username","uiLocale","isSuperuser","sGetUserUsername","state","user","DEFAULT_STATE_DASHBOARDS","byId","items","updateDashboardProp","_ref","dashboardId","prop","value","objectSpread","defineProperty","sGetDashboardsRoot","dashboards","sGetDashboardById","orObject","sDashboardsIsFetching","sGetAllDashboards","sGetDashboardItems","sGetStarredDashboards","values","filter","dashboard","starred","sGetUnstarredDashboards","sGetDashboardsSortedByStarred","toConsumableArray","arraySort","getCustomDashboards","data","arrayFrom","map","d","name","displayName","description","displayDescription","favorite","owner","created","split","substr","lastUpdated","access","numberOfItems","orArray","dashboardItems","reportTable","chart","gridProperties","getGridItemProperties","DEFAULT_STATE_EDIT_DASHBOARD","NEW_DASHBOARD_STATE","sGetEditDashboardRoot","editDashboard","sGetIsEditing","isEmpty","sGetEditDashboardItems","DEFAULT_STATE_EDIT_ITEM_FILTERS","sGetEditItemFiltersRoot","editItemFilters","combineReducers","action","validateReducer","isLoading","showDescription","sGetSelectedRoot","selected","sGetSelectedId","sGetSelectedIsLoading","sGetSelectedShowDescription","acRemoveEditItemFilter","DEFAULT_STATE_ITEM_FILTERS","sGetItemFiltersRoot","itemFilters","sGetFiltersKeys","keys","acRemoveItemFilter","sGetMessagesRoot","messages","getMessages","catch","error","console","log","DEFAULT_STATE_SNACKBAR","message","duration","open","acCloseSnackbar","DEFAULT_STATE_VISUALIZATIONS","p","sGetVisualization","visualizations","sGetVisualizationsRoot","acAddVisualization","onError","getDashboardItemsFields","withFavorite","getDashboardFields","apiFetchDashboard","models","apiStarDashboard","isStarred","post","delete","apiDeleteDashboard","loadingDashboardMsg","SnackbarMessageContent","react_default","a","createElement","style","fontWeight","connect","_sGetSnackbar","snackbar","sGetSnackbar","snackbarOpen","snackbarMessage","snackbarDuration","onCloseSnackbar","props","Snackbar_default","zIndex","SnackbarMessage_SnackbarMessageContent","autoHideDuration","onClose","acSetSelectedId","acSetSelectedIsLoading","tLoadDashboard","asyncToGenerator","regenerator_default","mark","_callee","dispatch","dash","wrap","_context","prev","next","sent","acAppendDashboards","abrupt","Promise","resolve","t0","stop","_x","apply","this","tSetSelectedDashboardById","_callee2","getState","snackbarTimeout","onSuccess","_context2","setTimeout","dashboardName","customDashboard","acSetDashboardItems","withShape","localStorage","setItem","forEach","extractFavorite","messageConversations","filters","clearTimeout","_x2","_x3","saveDashboard","assign","width","w","height","h","save","msg","response","uid","updateDashboard","postDashboard","create","acAddDashboardItem","itemPropName","generateUid","gridItemProperties","content","NEW_ITEM_SHAPE","acUpdateDashboardItem","acRemoveDashboardItem","arrayToIdMap","acSetDashboardStarred","tFetchDashboards","collection","paging","toArray","userRows","sGetControlBarUserRows","controlBar","sGetControlBarRoot","KEY","hasNamespace","currentUser","dataStore","has","getNamespace","apiGetControlBarRows","_callee3","namespace","_context3","t1","t2","find","key","apiPostControlBarRows","_callee4","rows","_context4","set","_x4","_x5","acSetControlBarUserRows","getDefaultDimensions","DIMENSION_ID_PERIOD","DIMENSION_ID_ORGUNIT","dimensionId","_getDimensionById","getDimensionById","iconName","sGetDimensions","dimensions","DEFAULT_SETTINGS","keyDateFormat","keyAnalysisRelativePeriod","keyAnalysisDigitGroupSeparator","displayNameProperty","rootOrganisationUnit","sGetSettings","settings","sGetSettingsDisplayNameProperty","acSetDimensions","styles","showMore","color","colors","grey700","cursor","fontSize","paddingTop","&:hover","textDecoration","disabled","grey500","withStyles","onClick","isMaxHeight","classes","textAlign","className","MIN_ROW_COUNT","getRowsHeight","getNumRowsFromHeight","Math","floor","FIRST_ROW_PADDING_HEIGHT","getTopOffset","getControlBarHeight","ControlBar","_this","classCallCheck","_super","call","onStartDrag","setState","dragging","window","addEventListener","onDrag","onEndDrag","event","preventDefault","stopPropagation","newHeight","clientY","onChangeHeight","requestAnimationFrame","removeEventListener","draghandle","onMouseDown","max","rootStyle","top","backgroundColor","editMode","yellow050","white","paddingBottom","transition","root","children","renderDragHandle","React","Component","defaultProps","StarIcon","xmlns","viewBox","fill","apiPostDataStatistics","eventType","chip","margin","grey600","display","verticalAlign","icon","marginTop","unselected","label","chipProps","selectedState","Star","Link","to","debounce","es_lib","AddCircleIcon","teal600","ClearIcon","grey800","ClearButton","onClear","button","Clear","ownerData","DEFAULT_STATE_DASHBOARDS_FILTER_NAME","DEFAULT_STATE_DASHBOARDS_FILTER_OWNER","order","sGetDashboardsFilterRoot","dashboardsFilter","sGetFilterName","KEYCODE_ENTER","KEYCODE_ESCAPE","filterField","searchIcon","Filter","_Component","inherits","Filter_createSuper","setFilterValue","onChangeName","target","handleKeyUp","keyCode","onKeypressEnter","createClass","nextProps","_this$props","startAdornment","InputAdornment_default","position","Search_default","endAdornment","ControlBar_ClearButton","Input_default","placeholder","onChange","onKeyUp","MAX_ROW_COUNT","DashboardsBar","DashboardsBar_createSuper","_len","args","Array","_key","setInitialDashboardState","adjustedHeight","newRows","newRowCount","min","onToggleMaxHeight","onSelectDashboard","history","push","selectedId","onChangeFilterName","rowCount","controlBarHeight","contentWrapperStyle","padding","overflowY","components_ControlBar_ControlBar","leftControls","marginRight","AddCircle","ControlBar_Filter","ControlBar_DashboardItemChip","ControlBar_ShowMoreButton","mapDispatchToProps","withRouter","stateProps","dispatchProps","ownProps","displayDashboards","toLowerCase","includes","HeaderMenuItem","title","dense","LaunchIcon","LaunchLink","e","launchLink","rel","href","Launch","InsertButton","buttonInsert","ContentMenuItem","onInsert","visType","ItemIcon","renderedItemIcon","visTypeIcons","menuItem","ContentMenuItem_LaunchLink","ContentMenuItem_InsertButton","singleItems","header","categorizedItems","listItemTypes","CategorizedMenuGroup","addItem","tAddListItemContent","newItem","toggleSeeMore","seeMore","onChangeItemsLimit","_this2","_this$props2","hasMore","react","ItemSelector_HeaderMenuItem","itemUrl","context","ItemSelector_ContentMenuItem","showMoreButton","contextTypes","PropTypes","object","isRequired","dashboardItem","listItemType","dashboardItemIndex","findIndex","category","addToDashboard","ItemSearchField","onFocus","ItemSelector","closeList","openList","_","fetchItems","anchorEl","currentTarget","setFilter","getCategorizedMenuGroups","itemCount","allItems","maxOptions","slice","ItemSelector_CategorizedMenuGroup","getSinglesMenuGroups","ItemSelector_SinglesMenuGroup","getMenuGroups","queryString","add","Set","ItemSelector_ItemSearchField","Popover_default","anchorOrigin","horizontal","vertical","transformOrigin","PaperProps","disableAutoFocus","disableRestoreFocus","EditTitleBar","onChangeTitle","onChangeDescription","section","titleDescription","itemSelector","components_ItemSelector_ItemSelector","selectedDashboard","justifyContent","flex","clear","underline","&::before","borderBottom","&:hover::before","input","borderRadius","peId","ouId","FilterDialog","onConfirm","dimension","selectedItems","dialogId","commonProps","onSelect","onDeselect","onReorder","build","selectedPeriods","ouItems","dialogTitle","Dialog_default","maxWidth","disableEnforceFocus","dialogContent","DialogActions_default","kind","DEFAULT_STATE_ACTIVE_MODAL_DIMENSION","sGetActiveModalDimension","activeModalDimension","acSetActiveModalDimension","FilterSelector","openPanel","closePanel","closeDialog","clearActiveModalDimension","selectDimension","setActiveModalDimension","onSelectItems","setEditItemFilters","onDeselectItems","itemIdsToRemove","newList","removeEditItemFilter","onReorderItems","itemIds","oldList","reorderedList","saveFilter","filterItems","addItemFilter","removeItemFilter","theme","selectedDimensions","ArrowDropDown_default","Boolean","fontFamily","typography","onDimensionClick","selectedIds","ItemFilter_FilterDialog","withTheme","Info","show","toggle","InfoOutlined_default","actions","alignItems","marginLeft","starIcon","textButton","minWidth","editLink","titleBar","titleBarIcon","ViewTitleBar","toggleSharingDialog","sharingDialogIsOpen","onStarClick","onInfoClick","titleStyle","userSelect","StarBorder","TitleBar_Info","update","manage","ItemFilter_FilterSelector","d2_ui_sharing_dialog_default","onRequestClose","tStarDashboard","black","TitleBar","edit","TitleBar_EditTitleBar","TitleBar_ViewTitleBar","DefaultPlugin","pluginCredentials","shouldPluginReload","prevProps","reloadAllowed","filtersChanged","vis","visualization","prevVis","visChanged","activeType","reloadPlugin","pluginManager","currentVis","useActiveType","credentials","getActiveType","baseUrl","auth","defaultHeaders","Authorization","options","getGridItemDomId","textDiv","ThreeDots","SpeechBubble","fillRule","transform","Warning","FatalErrorBoundary","errorFound","info","container","icons_Warning","DeleteItemButton","deleteItemButton","Delete_default","red500","HEADER_MARGIN_HEIGHT","ItemHeader","actionButtons","itemId","forwardedRef","itemHeaderWrap","ref","itemTitle","itemActionsWrap","Item_DeleteItemButton","ConnectedItemHeader","forwardRef","iconFill","ItemHeaderButtons","_useState","useState","_useState2","slicedToArray","setAnchorEl","onSelectActiveType","isTrackerType","onViewTable","handleClose","onViewChart","onViewMap","canViewAs","isSingleValue","isYearOverYear","VIS_TYPE_GAUGE","VIS_TYPE_PIE","interpretationMenuLabel","activeFooter","pluginIsAvailable","Fragment","small","secondary","icons_ThreeDots","InsertChart_default","ViewList_default","Public_default","Launch_default","getLink","icons_SpeechBubble","onToggleFooter","scrollContainer","line","border","grey100","ItemFooter","objectId","getId","d2_ui_interpretations_default","memoizeOne","fn","lastArgs","lastValue","every","arg","i","progress","spacing","unit","alignSelf","outer","CircularProgress_default","overflow","textOverflow","whiteSpace","fontStretch","lineHeight","loadingCover","left","background","Item","Item_createSuper","showFooter","configLoaded","pluginIsLoaded","applyFilters","visRows","obj","visColumns","columns","visFilters","dimensionFound","dimensionObjects","getUniqueKey","uniqueId","getPluginComponent","memoizedGetVisualizationConfig","calculatedHeight","originalHeight","headerRef","current","clientHeight","ITEM_CONTENT_PADDING_BOTTOM","memoizedGetContentStyle","contentRef","offsetHeight","LoadingMask","data_visualizer_plugin_build_es_lib","memoizedApplyFilters","onLoadingComplete","forDashboard","mapViews","layer","hideTitle","VisualizationItem_DefaultPlugin","onToggleItemExpanded","getContentStyle","measuredHeight","createRef","getVisualizationConfig","_componentDidMount","onVisualizationLoaded","prevState","VisualizationItem_ItemHeaderButtons","Item_ItemHeader","VisualizationItem_FatalErrorBoundary","VisualizationItem_ItemFooter","acSetActiveVisualizationType","grey200","Line","PRIVATE","messageTypes","_messageTypes","listStyleType","paddingLeft","seeAll","marginBottom","sender","snippet","maxHeight","MessagesItem","getMessageHref","msgIdentifier","messageType","getMessageSender","latestMsg","getMessageItems","editClass","readClass","read","msgDate","document","location","messageCount","formatDate","userSettings","widgets_Line","string","MessagesContainer","NotSupportedItem","NotInterested_default","align","DeleteIcon","getItemTitle","ListItem","tRemoveListItemContent","contentItems","index","array","el","getContentItems","contentItem","Description","deleteButton","icons_Delete","grey900","newContent","textField","onChangeText","updatedItem","d2_ui_rich_text","onEdit","multiline","fullWidth","textDivStyle","viewItem","getIframeSrc","appDetails","iframeSrc","ouIds","ouFilter","path","AppItem","appKey","system","installedApps","app","src","SpacerItem","GridItem","VisualizationItem","TextItem","getGridItem","NoContentMessage","ProgressiveLoadingContainer","shouldLoad","containerRef","shouldLoadHandler","bufferPx","bufferFactor","innerHeight","rect","getBoundingClientRect","bottom","removeHandler","checkShouldLoad","debounceMs","registerHandler","_this3","objectWithoutProperties","eventProps","pick","EXPANDED_HEIGHT","ItemGrid","ItemGrid_createSuper","expandedItems","clickedId","isExpanded","onRemoveItem","onLayoutChange","newLayout","acUpdateDashboardLayout","onResizeStop","layout","oldItem","onItemResize","pluginResize","onRemoveItemWrapper","adjustHeightForExpanded","expandedItem","getItemComponent","itemClassNames","Item_ProgressiveLoadingContainer","Item_Item_Item","getItemComponents","widgets_NoContentMessage","react_grid_layout_default","MARGIN","cols","getGridColumns","rowHeight","GRID_ROW_HEIGHT","innerWidth","compactType","GRID_COMPACT_TYPE","isDraggable","isResizable","draggableCancel","validItems","hasShape","badgeContainer","badge","badgeRemove","FilterBadge","onRemove","count","FilterBar","FilterBar_createSuper","onBadgeRemove","onBadgeClick","bar","FilterBar_FilterBadge","removeItemFIlter","filtersSelector","createSelector","reduce","arr","flexWrap","DashboardContent","components_TitleBar_TitleBar","components_FilterBar_FilterBar","components_ItemGrid_ItemGrid","Content","hasDashboardContent","dashboardsIsEmpty","Dashboard_DashboardContent","dashboardsLoaded","contentNotReady","ControlBar_DashboardsBar","Dashboard_DashboardVerticalOffset","ViewDashboard_Content","ConfirmDeleteDialog","onDeleteConfirmed","onContinueEditing","destructive","DialogTitle_default","DialogContent_default","DialogContentText_default","buttonBarStyle","EditBar","EditBar_createSuper","translationDialogIsOpen","dashboardModel","confirmDeleteDialogOpen","redirectUrl","onConfirmDelete","onSave","newId","onDiscard","onDiscardChanges","onDelete","onTranslationsSaved","translations","dbLocale","translation","locale","property","onTranslate","fetchDashboardModel","toggleTranslationDialog","confirmDeleteDialog","deleteAccess","ControlBar_ConfirmDeleteDialog","translationDialog","d2_ui_translation_dialog_default","objectToTranslate","fieldsToTranslate","onTranslationSaved","onTranslationError","err","Redirect","updateAccess","discardBtnText","primary","rightControls","sGetIsNewDashboard","dashboardToSave","tDeleteDashboard","acSetDashboardDisplayName","EditDashboard","EditDashboard_createSuper","initialized","initEditDashboard","setEditDashboard","getDashboardContent","EditDashboard_Content","ControlBar_EditBar","NewDashboard","setNewDashboard","Dashboard","setDashboard","match","params","selectDashboard","scrollToTop","scrollTo","mode","Dashboard_EditDashboard","Dashboard_NewDashboard","Dashboard_ViewDashboard","dashboardToSelect","preferredId","getItem","App","App_createSuper","setCurrentUser","fetchDashboards","setControlBarRows","setDimensions","spacers","build_es_lib","HashRouter","Switch","Route","exact","render","components_Dashboard_Dashboard","components_SnackbarMessage_SnackbarMessage","childContextTypes","controlBarRows","displayNameProp","filteredDimensions","apiFetchDimensions","dim","dimensionType","dataDimensionType","tSetDimensions","moment","addResources","arTranslations","ar_IQTranslations","ckbTranslations","csTranslations","daTranslations","enTranslations","esTranslations","frTranslations","idTranslations","kmTranslations","loTranslations","myTranslations","nbTranslations","prsTranslations","psTranslations","ptTranslations","pt_BRTranslations","ruTranslations","svTranslations","tetTranslations","tgTranslations","ukTranslations","urTranslations","uzTranslations","uz_CyrlTranslations","uz_LatnTranslations","viTranslations","zhTranslations","zh_CNTranslations","setDefaultNamespace","changeLanguage","objectClean","conversations","$merge","d2Object","keyUiLocale","authorities","newState","k","$unshift","idToRemove","$splice","stateItems","layoutHasChanged","newStateItems","x","y","stateItem","si","configureStore","middleware","thunk","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducer","applyMiddleware","configI18n","config","sources","manifest","isProd","getManifest","version","manifest_generated_at","process","activities","dhis","dhis2","apiVersion","headers","schemas","getUserSettings","d2Init","initializedD2","ReactDOM","lib","es","store","createMuiTheme","dhis2theme","src_components_App","getElementById","init","itemWrap","param","isArray","isObject","global","Intl","DateTimeFormat","year","month","day","format","replace","defaultValue","api","idx","indexOf","getWithoutId","_home_runner_work_dashboard_app_dashboard_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","itemTypeToExternalPlugin","_itemTypeToExternalPl","_home_runner_work_dashboard_app_dashboard_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_4__","getPlugin","hasIntegratedPlugin","eventReport","eventChart","loadPlugin","plugin","load","loadingIndicator","getName","_home_runner_work_dashboard_app_dashboard_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__","_home_runner_work_dashboard_app_dashboard_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","_ref$options","_home_runner_work_dashboard_app_dashboard_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_2__","fetch","fetchedFavorite","resize","unmount","originalType","extractedMapView","mv","VIS_TYPE_COLUMN","VIS_TYPE_PIVOT_TABLE","AXIS_ID_COLUMNS","AXIS_ID_ROWS","splice","shift","AXIS_ID_FILTERS","__webpack_require__","__webpack_exports__","d2_utilizr_lib_isFunction__WEBPACK_IMPORTED_MODULE_0__","d2_utilizr_lib_isFunction__WEBPACK_IMPORTED_MODULE_0___default","n","_modules_util__WEBPACK_IMPORTED_MODULE_1__","isNonNegativeInteger","Number","isInteger","minH","itemWithShape","Error","col","row","itemWidth","itemHeight","getShape","round","getOriginalHeight","querySelector","isFunction","setViewportSize","clientWidth"],"mappings":"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","file":"static/js/main.59778443.chunk.js","sourcesContent":["import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\n\nimport { getEndPointName } from '../modules/itemTypes';\n\n// Id, name\nexport const getIdNameFields = ({ rename } = {}) => [\n    'id',\n    `${rename ? 'displayName~rename(name)' : 'name,displayName'}`,\n];\n\n// Item\nexport const getItemFields = () => [\n    'dimensionItem~rename(id)',\n    'displayName~rename(name)',\n    'dimensionItemType',\n];\n\n// Dimension\nexport const getDimensionFields = ({ withItems }) =>\n    arrayClean([\n        'dimension',\n        'legendSet[id]',\n        'filter',\n        'programStage',\n        withItems ? `items[${getItemFields().join(',')}]` : ``,\n    ]);\n\n// Axis\nexport const getAxesFields = ({ withItems }) => [\n    `columns[${getDimensionFields({ withItems }).join(',')}]`,\n    `rows[${getDimensionFields({ withItems }).join(',')}]`,\n    `filters[${getDimensionFields({ withItems }).join(',')}]`,\n];\n\n// Favorite\nexport const getFavoriteFields = ({ withDimensions, withOptions }) => {\n    return arrayClean([\n        `${getIdNameFields({ rename: true }).join(',')}`,\n        'displayDescription~rename(description)',\n        withDimensions ? `${getAxesFields({ withItems: true }).join(',')}` : ``,\n        withOptions\n            ? [\n                  '*',\n                  '!attributeDimensions',\n                  '!attributeValues',\n                  '!category',\n                  '!categoryDimensions',\n                  '!categoryOptionGroupSetDimensions',\n                  '!columnDimensions',\n                  '!dataDimensionItems',\n                  '!dataElementDimensions',\n                  '!dataElementGroupSetDimensions',\n                  '!filterDimensions',\n                  '!itemOrganisationUnitGroups',\n                  '!lastUpdatedBy',\n                  '!organisationUnitGroupSetDimensions',\n                  '!organisationUnitLevels',\n                  '!organisationUnits',\n                  '!programIndicatorDimensions',\n                  '!relativePeriods',\n                  '!reportParams',\n                  '!rowDimensions',\n                  '!series',\n                  '!translations',\n                  '!userOrganisationUnit',\n                  '!userOrganisationUnitChildren',\n                  '!userOrganisationUnitGrandChildren',\n              ].join(',')\n            : '',\n    ]);\n};\n\nexport const getFavoritesFields = ({ withDimensions }) => [\n    `reportTable[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `chart[${['type', ...getFavoriteFields({ withDimensions })].join(',')}]`,\n    `map[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `eventReport[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `eventChart[${getFavoriteFields({ withDimensions }).join(',')}]`,\n];\n\n// List item\nexport const getListItemFields = () => [\n    `reports[${['type', ...getIdNameFields({ rename: true })].join(',')}]`,\n    `resources[${getIdNameFields({ rename: true }).join(',')}]`,\n    `users[${getIdNameFields({ rename: true }).join(',')}]`,\n];\n\n// Map\nexport const getMapFields = () => [\n    `${getIdNameFields({ rename: true }).join(',')}`,\n    'user,longitude,latitude,zoom,basemap',\n    `mapViews[${getFavoriteFields({\n        withDimensions: true,\n        withOptions: true,\n    })}]`,\n];\n\n// Api\n\n// Get more info about the favorite of a dashboard item\nexport const apiFetchFavorite = (id, type, { fields }) =>\n    getInstance().then(d2 =>\n        d2.Api.getApi().get(`${getEndPointName(type)}/${id}`, {\n            fields:\n                fields ||\n                getFavoriteFields({\n                    withDimensions: true,\n                    withOptions: true,\n                }),\n        })\n    );\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Item_list__3Uzbv\",\"item\":\"Item_item__8Iaca\",\"itemicon\":\"Item_itemicon__1X_uy\",\"link\":\"Item_link__30-BO\",\"deleteicon\":\"Item_deleteicon__2-Ewn\",\"deletebutton\":\"Item_deletebutton__pXLo4\"};","import i18n from '@dhis2/d2-i18n';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\nimport ExtensionIcon from '@material-ui/icons/Extension';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport PersonIcon from '@material-ui/icons/Person';\nimport FontDownloadIcon from '@material-ui/icons/FontDownload';\nimport EmailIcon from '@material-ui/icons/Email';\nimport CropFreeIcon from '@material-ui/icons/CropFree';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nimport { getBaseUrl } from './util';\n\n// Item types\nexport const VISUALIZATION = 'VISUALIZATION';\nexport const REPORT_TABLE = 'REPORT_TABLE';\nexport const CHART = 'CHART';\nexport const MAP = 'MAP';\nexport const EVENT_REPORT = 'EVENT_REPORT';\nexport const EVENT_CHART = 'EVENT_CHART';\nexport const APP = 'APP';\nexport const REPORTS = 'REPORTS';\nexport const RESOURCES = 'RESOURCES';\nexport const USERS = 'USERS';\nexport const MESSAGES = 'MESSAGES';\nexport const TEXT = 'TEXT';\nexport const SPACER = 'SPACER';\n\nconst DOMAIN_TYPE_AGGREGATE = 'AGGREGATE';\nconst DOMAIN_TYPE_TRACKER = 'TRACKER';\n\n// Dashboard helpers\nexport const spacerContent = 'SPACER_ITEM_FOR_DASHBOARD_LAYOUT_CONVENIENCE';\nexport const emptyTextItemContent = 'TEXT_ITEM_WITH_NO_CONTENT';\nexport const isSpacerType = item =>\n    item.type === TEXT && item.text === spacerContent;\nexport const isTextType = item =>\n    item.type === TEXT && item.text !== spacerContent;\nexport const isVisualizationType = item =>\n    !!itemTypeMap[item.type].isVisualizationType;\nexport const hasMapView = itemType =>\n    itemTypeMap[itemType].domainType === DOMAIN_TYPE_AGGREGATE;\nexport const isTrackerDomainType = itemType =>\n    itemTypeMap[itemType].domainType === DOMAIN_TYPE_TRACKER;\nexport const getDefaultItemCount = itemType =>\n    itemTypeMap[itemType].defaultItemCount || 5;\nexport const getAppName = itemType => itemTypeMap[itemType].appName() || '';\n\n// Item type map\nexport const itemTypeMap = {\n    [VISUALIZATION]: {\n        id: VISUALIZATION,\n        endPointName: 'visualizations',\n        propName: 'visualization',\n        pluralTitle: () => i18n.t('Visualizations'),\n        appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n        appName: () => i18n.t('Data Visualizer'),\n        defaultItemCount: 10,\n    },\n    [REPORT_TABLE]: {\n        id: REPORT_TABLE,\n        endPointName: 'visualizations',\n        propName: 'visualization',\n        pluralTitle: () => i18n.t('Pivot tables'),\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n        appName: () => i18n.t('Data Visualizer'),\n    },\n    [CHART]: {\n        id: CHART,\n        endPointName: 'visualizations',\n        propName: 'visualization',\n        pluralTitle: () => i18n.t('Charts'),\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n        appName: () => i18n.t('Data Visualizer'),\n    },\n    [MAP]: {\n        id: MAP,\n        endPointName: 'maps',\n        propName: 'map',\n        pluralTitle: () => i18n.t('Maps'),\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-maps/?id=${id}`,\n        appName: () => i18n.t('Maps'),\n    },\n    [EVENT_REPORT]: {\n        id: EVENT_REPORT,\n        endPointName: 'eventReports',\n        propName: 'eventReport',\n        pluralTitle: () => i18n.t('Event reports'),\n        domainType: DOMAIN_TYPE_TRACKER,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-event-reports/?id=${id}`,\n        appName: () => i18n.t('Event Reports'),\n    },\n    [EVENT_CHART]: {\n        id: EVENT_CHART,\n        endPointName: 'eventCharts',\n        propName: 'eventChart',\n        pluralTitle: () => i18n.t('Event charts'),\n        domainType: DOMAIN_TYPE_TRACKER,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-event-visualizer/?id=${id}`,\n        appName: () => i18n.t('Event Visualizer'),\n    },\n    [APP]: {\n        endPointName: 'apps',\n        propName: 'appKey',\n        pluralTitle: () => i18n.t('Apps'),\n        appName: Function.prototype,\n    },\n    [REPORTS]: {\n        id: REPORTS,\n        endPointName: 'reports',\n        propName: 'reports',\n        pluralTitle: () => i18n.t('Reports'),\n        appUrl: (id, type) => {\n            switch (type) {\n                case 'HTML':\n                    return `dhis-web-reports/#/standard-report/view/${id}`;\n\n                case 'JASPER_REPORT_TABLE':\n                case 'JASPER_JDBC':\n                default:\n                    return `api/reports/${id}/data.pdf?t=${new Date().getTime()}`;\n            }\n        },\n        appName: Function.prototype,\n    },\n    [RESOURCES]: {\n        id: RESOURCES,\n        endPointName: 'resources',\n        propName: 'resources',\n        pluralTitle: () => i18n.t('Resources'),\n        appUrl: id => `api/documents/${id}/data`,\n        appName: Function.prototype,\n    },\n    [USERS]: {\n        id: USERS,\n        endPointName: 'users',\n        propName: 'users',\n        pluralTitle: () => i18n.t('Users'),\n        appUrl: id => `dhis-web-dashboard-integration/profile.action?id=${id}`,\n        appName: Function.prototype,\n    },\n    [TEXT]: {\n        id: TEXT,\n        propName: 'text',\n    },\n    [MESSAGES]: {\n        propName: 'messages',\n    },\n    [SPACER]: {\n        propName: 'text',\n    },\n};\n\nexport const getEndPointName = type => itemTypeMap[type].endPointName;\n\nexport const getItemUrl = (type, item, d2) => {\n    let url;\n\n    if (type === APP) {\n        url = item.launchUrl;\n    }\n\n    if (itemTypeMap[type] && itemTypeMap[type].appUrl) {\n        url = `${getBaseUrl(d2)}/${itemTypeMap[type].appUrl(\n            item.id,\n            item.type\n        )}`;\n    }\n\n    return url;\n};\n\nexport const getItemIcon = type => {\n    switch (type) {\n        case REPORT_TABLE:\n        case EVENT_REPORT:\n        case REPORTS:\n            return TableIcon;\n        case CHART:\n        case EVENT_CHART:\n            return ChartIcon;\n        case MAP:\n            return MapIcon;\n        case APP:\n            return ExtensionIcon;\n        case RESOURCES:\n            return DescriptionIcon;\n        case USERS:\n            return PersonIcon;\n        case TEXT:\n            return FontDownloadIcon;\n        case MESSAGES:\n            return EmailIcon;\n        case SPACER:\n            return CropFreeIcon;\n        default:\n            return NotInterestedIcon;\n    }\n};\n","export const RECEIVED_USER = 'RECEIVED_USER';\n\nexport const DEFAULT_STATE_USER = {\n    id: '',\n    username: '',\n    uiLocale: '',\n    isSuperuser: false,\n};\n\nexport default (state = DEFAULT_STATE_USER, action) => {\n    switch (action.type) {\n        case RECEIVED_USER: {\n            return fromD2ToUserObj(action.value);\n        }\n        default:\n            return state;\n    }\n};\n\nfunction fromD2ToUserObj(d2Object) {\n    return {\n        id: d2Object.id,\n        username: d2Object.username,\n        uiLocale: d2Object.settings.keyUiLocale,\n        isSuperuser: d2Object.authorities.has('ALL'),\n    };\n}\n\n// selectors\n\nexport const sGetUserId = state => state.user.id;\nexport const sGetUserUsername = state => state.user.username;\nexport const sGetIsSuperuser = state => state.user.isSuperuser;\nexport const sGetUiLocale = state => state.user.uiLocale;\n","/** @module reducers/dashboards */\n\nimport arrayFrom from 'd2-utilizr/lib/arrayFrom';\nimport arraySort from 'd2-utilizr/lib/arraySort';\n\nimport { orArray, orObject } from '../modules/util';\nimport {\n    SPACER,\n    isSpacerType,\n    isTextType,\n    emptyTextItemContent,\n    REPORT_TABLE,\n    CHART,\n    VISUALIZATION,\n} from '../modules/itemTypes';\nimport { getGridItemProperties } from '../components/ItemGrid/gridUtil';\n\nexport const SET_DASHBOARDS = 'SET_DASHBOARDS';\nexport const ADD_DASHBOARDS = 'ADD_DASHBOARDS';\nexport const SET_DASHBOARD_STARRED = 'SET_DASHBOARD_STARRED';\nexport const SET_DASHBOARD_DISPLAY_NAME = 'SET_DASHBOARD_DISPLAY_NAME';\nexport const SET_DASHBOARD_ITEMS = 'SET_DASHBOARD_ITEMS';\n\nexport const DEFAULT_STATE_DASHBOARDS = {\n    byId: null,\n    items: [],\n};\n\n// reducer helper functions\n\nconst updateDashboardProp = ({ state, dashboardId, prop, value }) => ({\n    byId: {\n        ...state.byId,\n        [dashboardId]: {\n            ...state.byId[dashboardId],\n            [prop]: value,\n        },\n    },\n    items: state.items,\n});\n\n/**\n * Reducer that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n * @returns {Object}\n */\nexport default (state = DEFAULT_STATE_DASHBOARDS, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS: {\n            return {\n                byId: action.value,\n                items: [],\n            };\n        }\n        case ADD_DASHBOARDS: {\n            return {\n                ...state,\n                byId: {\n                    ...state.byId,\n                    ...action.value,\n                },\n            };\n        }\n        case SET_DASHBOARD_STARRED: {\n            return updateDashboardProp({\n                state,\n                dashboardId: action.dashboardId,\n                prop: 'starred',\n                value: action.value,\n            });\n        }\n        case SET_DASHBOARD_DISPLAY_NAME: {\n            return updateDashboardProp({\n                state,\n                dashboardId: action.dashboardId,\n                prop: 'displayName',\n                value: action.value,\n            });\n        }\n        case SET_DASHBOARD_ITEMS: {\n            return {\n                ...state,\n                items: action.value,\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// root selector\n\nexport const sGetDashboardsRoot = state => state.dashboards;\n\n// selector level 1\n\n/**\n * Selector which returns a dashboard by id from the state object\n * If no matching dashboard is found it returns undefined\n * If dashboards.byId is null, then the dashboards api request\n * has not yet completed. If dashboards.byId is an empty object\n * then the dashboards api request is complete, but no dashboards\n * were returned\n *\n * @function\n * @param {Object} state The current state\n * @param {Number} id The id of the dashboard\n * @returns {Object | undefined}\n */\nexport const sGetDashboardById = (state, id) =>\n    orObject(sGetDashboardsRoot(state).byId)[id];\n\nexport const sDashboardsIsFetching = state => {\n    return sGetDashboardsRoot(state).byId === null;\n};\n\n/**\n * Selector which returns all dashboards (the byId object)\n *\n * @function\n * @param {Object} state The current state\n * @returns {Object | undefined}\n */\nexport const sGetAllDashboards = state =>\n    orObject(sGetDashboardsRoot(state).byId);\n\n/**\n * Selector which returns the current dashboard items\n *\n * @function\n * @param {Object} state The current state\n * @returns {Array}\n */\nexport const sGetDashboardItems = state => sGetDashboardsRoot(state).items;\n\n// selector level 2\n\nexport const sGetStarredDashboards = state =>\n    Object.values(sGetAllDashboards(state)).filter(\n        dashboard => dashboard.starred === true\n    );\n\nexport const sGetUnstarredDashboards = state =>\n    Object.values(sGetAllDashboards(state)).filter(\n        dashboard => dashboard.starred === false\n    );\n\n// selector level 3\n\nexport const sGetStarredDashboardIds = state => {\n    return sGetStarredDashboards(state).map(dashboard => dashboard.id);\n};\n\nexport const sGetUnstarredDashboardIds = state =>\n    sGetUnstarredDashboards(state).map(dashboard => dashboard.id);\n\nexport const sGetDashboardsSortedByStarred = state => [\n    ...arraySort(sGetStarredDashboards(state), 'ASC', 'displayName'),\n    ...arraySort(sGetUnstarredDashboards(state), 'ASC', 'displayName'),\n];\n\n// utils\n\n/**\n * Returns the array of dashboards, customized for ui\n * @function\n * @param {Array} data The original dashboard list\n * @returns {Array}\n */\nexport const getCustomDashboards = data => {\n    const uiItems = items =>\n        items.map(item => {\n            let type = isSpacerType(item) ? SPACER : item.type;\n\n            // TODO: temporary fix before 2.34 epic branch is merged\n            // if \"VISUALIZATION\", reset to \"REPORT_TABLE\" or \"CHART\"\n            if (type === VISUALIZATION) {\n                type = item.reportTable\n                    ? REPORT_TABLE\n                    : item.chart\n                    ? CHART\n                    : type;\n            }\n\n            const text = isTextType(item)\n                ? item.text === emptyTextItemContent\n                    ? ''\n                    : item.text\n                : null;\n\n            const gridProperties = getGridItemProperties(item.id);\n\n            return {\n                ...item,\n                ...(text !== null ? { text } : {}),\n                type,\n                ...gridProperties,\n            };\n        });\n\n    return arrayFrom(data).map(d => ({\n        id: d.id,\n        name: d.name,\n        displayName: d.displayName,\n        description: d.description,\n        displayDescription: d.displayDescription,\n        starred: d.favorite,\n        owner: d.user.name,\n        created: d.created\n            .split('T')\n            .join(' ')\n            .substr(0, 16),\n        lastUpdated: d.lastUpdated\n            .split('T')\n            .join(' ')\n            .substr(0, 16),\n        access: d.access,\n        numberOfItems: orArray(d.dashboardItems).length,\n        dashboardItems: uiItems(d.dashboardItems),\n    }));\n};\n","/** @module reducers/editDashboard */\nimport update from 'immutability-helper';\nimport isEmpty from 'lodash/isEmpty';\nimport { orArray, orObject } from '../modules/util';\n\nexport const RECEIVED_EDIT_DASHBOARD = 'RECEIVED_EDIT_DASHBOARD';\nexport const RECEIVED_NOT_EDITING = 'RECEIVED_NOT_EDITING';\nexport const START_NEW_DASHBOARD = 'START_NEW_DASHBOARD';\nexport const RECEIVED_TITLE = 'RECEIVED_TITLE';\nexport const RECEIVED_DESCRIPTION = 'RECEIVED_DESCRIPTION';\nexport const ADD_DASHBOARD_ITEM = 'ADD_DASHBOARD_ITEM';\nexport const REMOVE_DASHBOARD_ITEM = 'REMOVE_DASHBOARD_ITEM';\nexport const UPDATE_DASHBOARD_ITEM = 'UPDATE_DASHBOARD_ITEM';\nexport const RECEIVED_DASHBOARD_LAYOUT = 'RECEIVED_DASHBOARD_LAYOUT';\n\nexport const DEFAULT_STATE_EDIT_DASHBOARD = {};\nexport const NEW_DASHBOARD_STATE = {\n    id: '',\n    name: '',\n    access: {},\n    description: '',\n    dashboardItems: [],\n};\n\nexport default (state = DEFAULT_STATE_EDIT_DASHBOARD, action) => {\n    switch (action.type) {\n        case RECEIVED_EDIT_DASHBOARD: {\n            const newState = {};\n            Object.keys(NEW_DASHBOARD_STATE).map(\n                k => (newState[k] = action.value[k])\n            );\n            return newState;\n        }\n        case RECEIVED_NOT_EDITING:\n            return DEFAULT_STATE_EDIT_DASHBOARD;\n        case START_NEW_DASHBOARD:\n            return NEW_DASHBOARD_STATE;\n        case RECEIVED_TITLE: {\n            return Object.assign({}, state, { name: action.value });\n        }\n        case RECEIVED_DESCRIPTION: {\n            return Object.assign({}, state, {\n                description: action.value,\n            });\n        }\n        case ADD_DASHBOARD_ITEM:\n            return update(state, {\n                dashboardItems: { $unshift: [action.value] },\n            });\n        case REMOVE_DASHBOARD_ITEM: {\n            const idToRemove = action.value;\n\n            const dashboardItemIndex = state.dashboardItems.findIndex(\n                item => item.id === idToRemove\n            );\n\n            if (dashboardItemIndex > -1) {\n                return update(state, {\n                    dashboardItems: {\n                        $splice: [[dashboardItemIndex, 1]],\n                    },\n                });\n            }\n\n            return state;\n        }\n        case RECEIVED_DASHBOARD_LAYOUT: {\n            const stateItems = orArray(state.dashboardItems);\n            let layoutHasChanged = false;\n\n            const newStateItems = action.value.map(({ x, y, w, h, i }) => {\n                const stateItem = stateItems.find(si => si.id === i);\n\n                if (\n                    !(\n                        stateItem.x === x &&\n                        stateItem.y === y &&\n                        stateItem.w === w &&\n                        stateItem.h === h\n                    )\n                ) {\n                    layoutHasChanged = true;\n                    return Object.assign({}, stateItem, { w, h, x, y });\n                }\n\n                return stateItem;\n            });\n\n            return layoutHasChanged\n                ? {\n                      ...state,\n                      dashboardItems: newStateItems,\n                  }\n                : state;\n        }\n        case UPDATE_DASHBOARD_ITEM: {\n            const dashboardItem = action.value;\n\n            const dashboardItemIndex = state.dashboardItems.findIndex(\n                item => item.id === dashboardItem.id\n            );\n\n            if (dashboardItemIndex > -1) {\n                const newState = update(state, {\n                    dashboardItems: {\n                        $splice: [\n                            [\n                                dashboardItemIndex,\n                                1,\n                                Object.assign({}, dashboardItem),\n                            ],\n                        ],\n                    },\n                });\n\n                return newState;\n            }\n\n            return state;\n        }\n        default:\n            return state;\n    }\n};\n\n// root selector\n\nexport const sGetEditDashboardRoot = state => state.editDashboard;\n\n// selectors\n\nexport const sGetIsEditing = state => !isEmpty(state.editDashboard);\n\nexport const sGetIsNewDashboard = state => {\n    return (\n        !isEmpty(state.editDashboard) && sGetEditDashboardRoot(state).id === ''\n    );\n};\n\nexport const sGetEditDashboardItems = state =>\n    orObject(sGetEditDashboardRoot(state)).dashboardItems;\n","export const CLEAR_EDIT_ITEM_FILTERS = 'CLEAR_EDIT_ITEM_FILTERS';\nexport const REMOVE_EDIT_ITEM_FILTER = 'REMOVE_EDIT_ITEM_FILTER';\nexport const SET_EDIT_ITEM_FILTERS = 'SET_EDIT_ITEM_FILTERS';\n\nexport const DEFAULT_STATE_EDIT_ITEM_FILTERS = {};\n\nexport default (state = DEFAULT_STATE_EDIT_ITEM_FILTERS, action) => {\n    switch (action.type) {\n        case REMOVE_EDIT_ITEM_FILTER: {\n            const newState = { ...state };\n\n            delete newState[action.id];\n\n            return newState;\n        }\n        case SET_EDIT_ITEM_FILTERS: {\n            return action.filters;\n        }\n        case CLEAR_EDIT_ITEM_FILTERS: {\n            return DEFAULT_STATE_EDIT_ITEM_FILTERS;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetEditItemFiltersRoot = state => state.editItemFilters;\n\nexport const sGetEditFiltersKeys = state =>\n    Object.keys(sGetEditItemFiltersRoot(state));\n","/** @module reducers/selected */\nimport { combineReducers } from 'redux';\n\nimport { validateReducer } from '../modules/util';\n\nexport const SET_SELECTED_ID = 'SET_SELECTED_ID';\nexport const SET_SELECTED_ISLOADING = 'SET_SELECTED_ISLOADING';\nexport const SET_SELECTED_SHOWDESCRIPTION = 'SET_SELECTED_SHOWDESCRIPTION';\n\nexport const DEFAULT_STATE_SELECTED_ID = null;\nexport const DEFAULT_STATE_SELECTED_ISLOADING = false;\nexport const DEFAULT_STATE_SELECTED_SHOWDESCRIPTION = false;\n\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\nconst id = (state = DEFAULT_STATE_SELECTED_ID, action) => {\n    switch (action.type) {\n        case SET_SELECTED_ID:\n            return validateReducer(action.value, DEFAULT_STATE_SELECTED_ID);\n        default:\n            return state;\n    }\n};\n\nconst isLoading = (state = DEFAULT_STATE_SELECTED_ISLOADING, action) => {\n    switch (action.type) {\n        case SET_SELECTED_ISLOADING:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_SELECTED_ISLOADING\n            );\n        default:\n            return state;\n    }\n};\n\nconst showDescription = (\n    state = DEFAULT_STATE_SELECTED_SHOWDESCRIPTION,\n    action\n) => {\n    switch (action.type) {\n        case SET_SELECTED_SHOWDESCRIPTION:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_SELECTED_SHOWDESCRIPTION\n            );\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    id,\n    isLoading,\n    showDescription,\n});\n\n// Selectors\n\nexport const sGetSelectedRoot = state => state.selected;\n\nexport const sGetSelectedId = state => sGetSelectedRoot(state).id;\n\nexport const sGetSelectedIsLoading = state => sGetSelectedRoot(state).isLoading;\n\nexport const sGetSelectedShowDescription = state =>\n    sGetSelectedRoot(state).showDescription;\n","import {\n    REMOVE_EDIT_ITEM_FILTER,\n    SET_EDIT_ITEM_FILTERS,\n    CLEAR_EDIT_ITEM_FILTERS,\n} from '../reducers/editItemFilters';\n\n// actions\n\nexport const acRemoveEditItemFilter = id => ({\n    type: REMOVE_EDIT_ITEM_FILTER,\n    id,\n});\n\nexport const acClearEditItemFilters = () => ({\n    type: CLEAR_EDIT_ITEM_FILTERS,\n});\n\nexport const acSetEditItemFilters = filters => ({\n    type: SET_EDIT_ITEM_FILTERS,\n    filters,\n});\n","export const CLEAR_ITEM_FILTERS = 'CLEAR_ITEM_FILTERS';\nexport const SET_ITEM_FILTERS = 'SET_ITEM_FILTERS';\nexport const ADD_ITEM_FILTER = 'ADD_ITEM_FILTER';\nexport const REMOVE_ITEM_FILTER = 'REMOVE_ITEM_FILTER';\n\nexport const DEFAULT_STATE_ITEM_FILTERS = {};\n\nexport default (state = DEFAULT_STATE_ITEM_FILTERS, action) => {\n    switch (action.type) {\n        case ADD_ITEM_FILTER: {\n            return {\n                ...state,\n                [action.filter.id]: action.filter.value,\n            };\n        }\n        case REMOVE_ITEM_FILTER: {\n            const newState = { ...state };\n\n            delete newState[action.id];\n\n            return newState;\n        }\n        case SET_ITEM_FILTERS: {\n            return action.filters;\n        }\n        case CLEAR_ITEM_FILTERS: {\n            return DEFAULT_STATE_ITEM_FILTERS;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetItemFiltersRoot = state => state.itemFilters;\n\nexport const sGetFiltersKeys = state => Object.keys(sGetItemFiltersRoot(state));\n","import {\n    ADD_ITEM_FILTER,\n    REMOVE_ITEM_FILTER,\n    SET_ITEM_FILTERS,\n    CLEAR_ITEM_FILTERS,\n} from '../reducers/itemFilters';\n\nexport const FILTER_ORG_UNIT = 'ou';\n\n// actions\n\nexport const acAddItemFilter = filter => ({\n    type: ADD_ITEM_FILTER,\n    filter,\n});\n\nexport const acRemoveItemFilter = id => ({\n    type: REMOVE_ITEM_FILTER,\n    id,\n});\n\nexport const acClearItemFilters = () => ({\n    type: CLEAR_ITEM_FILTERS,\n});\n\nexport const acSetItemFilters = filters => ({\n    type: SET_ITEM_FILTERS,\n    filters,\n});\n","import update from 'immutability-helper';\nimport { arrayToIdMap } from '../modules/util';\n\nexport const RECEIVED_MESSAGES = 'RECEIVED_MESSAGES';\n\nexport default (state = {}, action) => {\n    switch (action.type) {\n        case RECEIVED_MESSAGES: {\n            const conversations = arrayToIdMap(action.value);\n\n            const newState = update(state, { $merge: conversations });\n\n            return newState;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetMessagesRoot = state => state.messages;\n","import { getInstance } from 'd2';\n\nexport const getMessages = () => {\n    const fields =\n        'id,messageCount,lastUpdated,messageType,displayName,read,messages[id,read,sender[id,displayName],text,lastUpdated]';\n    const url = `/messageConversations?fields=${fields}&order=read:asc&pageSize=200`;\n    return getInstance()\n        .then(d2 => d2.Api.getApi().get(url))\n        .catch(error => console.log('Error:', error));\n};\n","export const RECEIVED_SNACKBAR_MESSAGE = 'RECEIVED_SNACKBAR_MESSAGE';\nexport const CLOSE_SNACKBAR = 'CLOSE_SNACKBAR';\n\nexport const DEFAULT_STATE_SNACKBAR = {\n    message: {},\n    duration: null,\n    open: false,\n};\n\nexport default (state = DEFAULT_STATE_SNACKBAR, action) => {\n    switch (action.type) {\n        case RECEIVED_SNACKBAR_MESSAGE: {\n            return { ...state, ...action.value };\n        }\n        case CLOSE_SNACKBAR: {\n            return DEFAULT_STATE_SNACKBAR;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetSnackbar = state => state.snackbar || DEFAULT_STATE_SNACKBAR;\n","import {\n    RECEIVED_SNACKBAR_MESSAGE,\n    CLOSE_SNACKBAR,\n} from '../reducers/snackbar';\n\nexport const acReceivedSnackbarMessage = value => ({\n    type: RECEIVED_SNACKBAR_MESSAGE,\n    value,\n});\n\nexport const acCloseSnackbar = () => ({\n    type: CLOSE_SNACKBAR,\n});\n","import { orObject } from '../modules/util';\nimport objectClean from 'd2-utilizr/lib/objectClean';\n\n/** @module reducers/visualizations */\n\nexport const ADD_VISUALIZATION = 'ADD_VISUALIZATION';\nexport const SET_ACTIVE_VISUALIZATION_TYPE = 'SET_ACTIVE_VISUALIZATION_TYPE';\n\nexport const DEFAULT_STATE_VISUALIZATIONS = {};\n\nconst isEmpty = p => p === undefined || p === null;\n\nexport default (state = DEFAULT_STATE_VISUALIZATIONS, action) => {\n    switch (action.type) {\n        case ADD_VISUALIZATION: {\n            return {\n                ...state,\n                [action.value.id]: objectClean(\n                    {\n                        ...orObject(state[action.value.id]),\n                        ...action.value,\n                    },\n                    isEmpty\n                ),\n            };\n        }\n        case SET_ACTIVE_VISUALIZATION_TYPE: {\n            return {\n                ...state,\n                [action.id]: objectClean(\n                    {\n                        ...orObject(state[action.id]),\n                        activeType: action.activeType,\n                    },\n                    isEmpty\n                ),\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// root selector\nexport const sGetVisualizationsRoot = state => state.visualizations;\n\n// selectors level 1\nexport const sGetVisualization = (state, id) => {\n    return sGetVisualizationsRoot(state)[id];\n};\n","import {\n    ADD_VISUALIZATION,\n    SET_ACTIVE_VISUALIZATION_TYPE,\n} from '../reducers/visualizations';\n\nexport const acAddVisualization = value => ({\n    type: ADD_VISUALIZATION,\n    value,\n});\n\nexport const acSetActiveVisualizationType = (id, activeType) => {\n    const action = {\n        type: SET_ACTIVE_VISUALIZATION_TYPE,\n        id,\n        activeType,\n    };\n\n    return action;\n};\n","import arrayClean from 'd2-utilizr/lib/arrayClean';\nimport {\n    getListItemFields,\n    getFavoritesFields,\n    getIdNameFields,\n} from './metadata';\n\n// Helper functions\n\nexport const onError = error => console.log('Error: ', error);\n\n// Dashboard item\nexport const getDashboardItemsFields = ({ withFavorite } = {}) =>\n    arrayClean([\n        'id',\n        'type',\n        'shape',\n        'x',\n        'y',\n        'width~rename(w)',\n        'height~rename(h)',\n        'messages',\n        'text',\n        'appKey',\n        `${getListItemFields().join(',')}`,\n        withFavorite\n            ? `${getFavoritesFields({\n                  withDimensions: withFavorite.withDimensions,\n              }).join(',')}`\n            : ``,\n    ]);\n\n// Dashboard\nexport const getDashboardFields = ({ withItems, withFavorite } = {}) =>\n    arrayClean([\n        `${getIdNameFields().join(',')}`,\n        'description',\n        'displayDescription',\n        'favorite',\n        `user[${getIdNameFields({ rename: true }).join(',')}]`,\n        'created',\n        'lastUpdated',\n        'access',\n        withItems\n            ? `dashboardItems[${getDashboardItemsFields({\n                  withFavorite,\n              }).join(',')}]`\n            : ``,\n    ]);\n","import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { onError, getDashboardFields } from './index';\n\n// Get \"all\" dashboards on startup\nexport const apiFetchDashboards = () =>\n    getInstance()\n        .then(d2 =>\n            d2.models.dashboard.list({\n                fields: [\n                    getDashboardFields().join(','),\n                    'dashboardItems[id]',\n                ].join(','),\n                paging: 'false',\n            })\n        )\n        .catch(onError);\n\n// Get more info about selected dashboard\nexport const apiFetchDashboard = id =>\n    getInstance()\n        .then(d2 =>\n            d2.models.dashboard.get(id, {\n                fields: arrayClean(\n                    getDashboardFields({\n                        withItems: true,\n                        withFavorite: { withDimensions: false },\n                    })\n                ).join(','),\n            })\n        )\n        .catch(onError);\n\n// Star dashboard\nexport const apiStarDashboard = (id, isStarred) => {\n    const url = `dashboards/${id}/favorite`;\n\n    getInstance().then(d2 => {\n        if (isStarred) {\n            d2.Api.getApi().post(url);\n        } else {\n            d2.Api.getApi().delete(url);\n        }\n    });\n};\n\nexport const apiDeleteDashboard = id => {\n    return getInstance()\n        .then(d2 => {\n            return d2.models.dashboards\n                .get(id)\n                .then(dashboard => dashboard.delete());\n        })\n        .catch(onError);\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport PropTypes from 'prop-types';\n\nimport { sGetSnackbar } from '../../reducers/snackbar';\nimport { acCloseSnackbar } from '../../actions/snackbar';\n\nconst LOADING_DASHBOARD = 'LOADING_DASHBOARD';\nexport const loadingDashboardMsg = { name: '', type: LOADING_DASHBOARD };\n\nconst SnackbarMessageContent = ({ message }) => {\n    if (typeof message === 'object') {\n        //future message types:  switch(message.type)\n        return (\n            <span>\n                Loading <span style={{ fontWeight: 800 }}>{message.name}</span>{' '}\n                dashboard\n            </span>\n        );\n    }\n    return message;\n};\n\nexport const SnackbarMessage = props => {\n    return (\n        <Snackbar\n            style={{ zIndex: 10001 }}\n            open={props.snackbarOpen}\n            message={<SnackbarMessageContent message={props.snackbarMessage} />}\n            autoHideDuration={props.snackbarDuration}\n            onClose={props.onCloseSnackbar}\n        />\n    );\n};\n\nconst mapStateToProps = state => {\n    const { message, duration, open } = sGetSnackbar(state);\n    return {\n        snackbarOpen: open,\n        snackbarMessage: message,\n        snackbarDuration: duration,\n    };\n};\n\nSnackbarMessage.propTypes = {\n    snackbarDuration: PropTypes.string,\n    snackbarMessage: PropTypes.object,\n    snackbarOpen: PropTypes.bool,\n    onCloseSnackbar: PropTypes.func,\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        onCloseSnackbar: acCloseSnackbar,\n    }\n)(SnackbarMessage);\n","import { getCustomDashboards, sGetDashboardById } from '../reducers/dashboards';\nimport { sGetIsEditing } from '../reducers/editDashboard';\nimport { sGetEditItemFiltersRoot } from '../reducers/editItemFilters';\nimport {\n    SET_SELECTED_ID,\n    SET_SELECTED_ISLOADING,\n    SET_SELECTED_SHOWDESCRIPTION,\n    sGetSelectedIsLoading,\n    sGetSelectedId,\n} from '../reducers/selected';\nimport { sGetUserUsername } from '../reducers/user';\n\nimport { acSetDashboardItems, acAppendDashboards } from './dashboards';\nimport { acClearEditItemFilters } from './editItemFilters';\nimport { acClearItemFilters, acSetItemFilters } from './itemFilters';\nimport { tGetMessages } from '../components/Item/MessagesItem/actions';\nimport { acReceivedSnackbarMessage, acCloseSnackbar } from './snackbar';\nimport { acAddVisualization } from './visualizations';\n\nimport { apiFetchDashboard } from '../api/dashboards';\nimport { storePreferredDashboardId } from '../api/localStorage';\n\nimport { withShape } from '../components/ItemGrid/gridUtil';\nimport { loadingDashboardMsg } from '../components/SnackbarMessage/SnackbarMessage';\nimport { extractFavorite } from '../components/Item/VisualizationItem/plugin';\n\nimport {\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_REPORT,\n    EVENT_CHART,\n    MESSAGES,\n} from '../modules/itemTypes';\nimport { orObject } from '../modules/util';\n\n// actions\n\nexport const acSetSelectedId = value => ({\n    type: SET_SELECTED_ID,\n    value,\n});\n\nexport const acSetSelectedIsLoading = value => ({\n    type: SET_SELECTED_ISLOADING,\n    value,\n});\n\nexport const acSetSelectedShowDescription = value => ({\n    type: SET_SELECTED_SHOWDESCRIPTION,\n    value,\n});\n\nexport const tLoadDashboard = id => async dispatch => {\n    try {\n        const dash = await apiFetchDashboard(id);\n\n        dispatch(acAppendDashboards(dash));\n\n        return Promise.resolve(dash);\n    } catch (err) {\n        console.log('Error: ', err);\n        return err;\n    }\n};\n\n// thunks\nexport const tSetSelectedDashboardById = id => async (dispatch, getState) => {\n    dispatch(acSetSelectedIsLoading(true));\n\n    const snackbarTimeout = setTimeout(() => {\n        const dashboardName = orObject(sGetDashboardById(getState(), id))\n            .displayName;\n        if (sGetSelectedIsLoading(getState()) && dashboardName) {\n            loadingDashboardMsg.name = dashboardName;\n\n            dispatch(\n                acReceivedSnackbarMessage({\n                    message: loadingDashboardMsg,\n                    open: true,\n                })\n            );\n        }\n    }, 500);\n\n    const onSuccess = selected => {\n        const customDashboard = getCustomDashboards(selected)[0];\n\n        dispatch(\n            acSetDashboardItems(withShape(customDashboard.dashboardItems))\n        );\n\n        storePreferredDashboardId(sGetUserUsername(getState()), id);\n\n        // add visualizations to store\n        customDashboard.dashboardItems.forEach(item => {\n            switch (item.type) {\n                case REPORT_TABLE:\n                case CHART:\n                case MAP:\n                case EVENT_REPORT:\n                case EVENT_CHART:\n                    dispatch(acAddVisualization(extractFavorite(item)));\n                    break;\n                case MESSAGES:\n                    dispatch(tGetMessages(id));\n                    break;\n                default:\n                    break;\n            }\n        });\n\n        const state = getState();\n        if (id === sGetSelectedId(state)) {\n            if (sGetIsEditing(state)) {\n                // disable filters when switching to edit mode\n                dispatch(acClearItemFilters());\n            } else {\n                // enable filters when switching to view mode\n                dispatch(acSetItemFilters(sGetEditItemFiltersRoot(state)));\n            }\n        } else {\n            // clear filters when switching dashboard\n            dispatch(acClearEditItemFilters());\n            dispatch(acClearItemFilters());\n        }\n\n        dispatch(acSetSelectedId(id));\n\n        dispatch(acSetSelectedIsLoading(false));\n\n        clearTimeout(snackbarTimeout);\n\n        dispatch(acCloseSnackbar());\n\n        return selected;\n    };\n\n    const onError = error => {\n        console.log('Error: ', error);\n        return error;\n    };\n\n    try {\n        const selected = await dispatch(tLoadDashboard(id));\n\n        return onSuccess(selected);\n    } catch (err) {\n        return onError(err);\n    }\n};\n","export const getPreferredDashboardId = username =>\n    localStorage.getItem(`dhis2.dashboard.current.${username}`) || undefined;\n\nexport const storePreferredDashboardId = (username, dashboardId) => {\n    localStorage.setItem(`dhis2.dashboard.current.${username}`, dashboardId);\n};\n","import { RECEIVED_MESSAGES } from '../../../reducers/messages';\nimport { getMessages } from '../../../api/messages';\n\nconst onError = (action, error) => {\n    console.log(`Error in action ${action}: ${error}`);\n    return error;\n};\n\nexport const receivedMessages = value => ({\n    type: RECEIVED_MESSAGES,\n    value,\n});\n\nexport const tGetMessages = () => async dispatch => {\n    try {\n        const messages = await getMessages();\n        const { messageConversations } = messages;\n\n        return dispatch(receivedMessages(messageConversations));\n    } catch (err) {\n        return onError('Get Messages', err);\n    }\n};\n","import { getInstance } from 'd2';\n\nconst onError = error => console.log('Error: ', error);\n\nconst saveDashboard = (dashboard, data) => {\n    const { name, description, dashboardItems } = data;\n\n    dashboard.name = name;\n    dashboard.description = description;\n    dashboard.dashboardItems = dashboardItems.map(item =>\n        Object.assign({}, item, { width: item.w, height: item.h })\n    );\n\n    return dashboard.save().then(msg => msg.response.uid);\n};\n\nexport const updateDashboard = data => {\n    return getInstance()\n        .then(d2 => {\n            return d2.models.dashboards\n                .get(data.id)\n                .then(dashboard => saveDashboard(dashboard, data));\n        })\n        .catch(onError);\n};\n\nexport const postDashboard = data => {\n    return getInstance().then(d2 => {\n        const dashboard = d2.models.dashboards.create();\n\n        return saveDashboard(dashboard, data);\n    });\n};\n","import { generateUid } from 'd2/uid';\nimport i18n from '@dhis2/d2-i18n';\n\nimport {\n    RECEIVED_EDIT_DASHBOARD,\n    START_NEW_DASHBOARD,\n    RECEIVED_NOT_EDITING,\n    RECEIVED_TITLE,\n    RECEIVED_DESCRIPTION,\n    RECEIVED_DASHBOARD_LAYOUT,\n    ADD_DASHBOARD_ITEM,\n    UPDATE_DASHBOARD_ITEM,\n    REMOVE_DASHBOARD_ITEM,\n} from '../reducers/editDashboard';\nimport { sGetEditDashboardRoot } from '../reducers/editDashboard';\nimport { updateDashboard, postDashboard } from '../api/editDashboard';\nimport { tSetSelectedDashboardById } from '../actions/selected';\nimport {\n    NEW_ITEM_SHAPE,\n    getGridItemProperties,\n} from '../components/ItemGrid/gridUtil';\nimport {\n    itemTypeMap,\n    isSpacerType,\n    TEXT,\n    emptyTextItemContent,\n    isTextType,\n} from '../modules/itemTypes';\n\nconst onError = error => {\n    console.log('Error (Saving Dashboard): ', error);\n    return error;\n};\n\n// actions\n\nexport const acSetEditDashboard = (dashboard, items) => {\n    const val = {\n        ...dashboard,\n        dashboardItems: items,\n    };\n\n    return {\n        type: RECEIVED_EDIT_DASHBOARD,\n        value: val,\n    };\n};\n\nexport const acSetEditNewDashboard = () => ({\n    type: START_NEW_DASHBOARD,\n});\n\nexport const acClearEditDashboard = () => ({\n    type: RECEIVED_NOT_EDITING,\n});\n\nexport const acSetDashboardTitle = value => ({\n    type: RECEIVED_TITLE,\n    value,\n});\n\nexport const acSetDashboardDescription = value => ({\n    type: RECEIVED_DESCRIPTION,\n    value,\n});\n\nexport const acUpdateDashboardLayout = value => ({\n    type: RECEIVED_DASHBOARD_LAYOUT,\n    value,\n});\n\nexport const acAddDashboardItem = item => {\n    const type = item.type;\n    delete item.type;\n    const itemPropName = itemTypeMap[type].propName;\n\n    const id = generateUid();\n    const gridItemProperties = getGridItemProperties(id);\n\n    return {\n        type: ADD_DASHBOARD_ITEM,\n        value: {\n            id,\n            type,\n            [itemPropName]: item.content,\n            ...NEW_ITEM_SHAPE,\n            ...gridItemProperties,\n        },\n    };\n};\n\nexport const acUpdateDashboardItem = item => ({\n    type: UPDATE_DASHBOARD_ITEM,\n    value: item,\n});\n\nexport const acRemoveDashboardItem = value => ({\n    type: REMOVE_DASHBOARD_ITEM,\n    value,\n});\n\n// thunks\n\nexport const tSaveDashboard = () => async (dispatch, getState) => {\n    const dashboard = sGetEditDashboardRoot(getState());\n\n    const dashboardItems = dashboard.dashboardItems.map(item => {\n        const text = isTextType(item)\n            ? item.text || emptyTextItemContent\n            : null;\n\n        const type = isSpacerType(item) ? TEXT : item.type;\n\n        return {\n            ...item,\n            ...(text ? { text } : {}),\n            type,\n        };\n    });\n\n    const dashboardToSave = {\n        ...dashboard,\n        dashboardItems,\n        name: dashboard.name || i18n.t('Untitled dashboard'),\n    };\n\n    try {\n        const dashboardId = dashboardToSave.id\n            ? await updateDashboard(dashboardToSave)\n            : await postDashboard(dashboardToSave);\n\n        dispatch(acClearEditDashboard());\n        await dispatch(tSetSelectedDashboardById(dashboardId));\n\n        return Promise.resolve(dashboardId);\n    } catch (error) {\n        onError(error);\n    }\n};\n","import {\n    SET_DASHBOARDS,\n    ADD_DASHBOARDS,\n    SET_DASHBOARD_STARRED,\n    SET_DASHBOARD_DISPLAY_NAME,\n    SET_DASHBOARD_ITEMS,\n} from '../reducers/dashboards';\nimport {\n    getCustomDashboards,\n    sGetDashboardById,\n    sGetDashboardsSortedByStarred,\n} from '../reducers/dashboards';\nimport { sGetUserUsername } from '../reducers/user';\nimport { tSetSelectedDashboardById, acSetSelectedId } from './selected';\nimport { acClearEditDashboard } from './editDashboard';\nimport {\n    apiFetchDashboards,\n    apiStarDashboard,\n    apiDeleteDashboard,\n} from '../api/dashboards';\nimport { getPreferredDashboardId } from '../api/localStorage';\nimport { arrayToIdMap } from '../modules/util';\n\n// actions\n\nexport const acSetDashboards = dashboards => ({\n    type: SET_DASHBOARDS,\n    value: arrayToIdMap(getCustomDashboards(dashboards)),\n});\n\nexport const acAppendDashboards = dashboards => ({\n    type: ADD_DASHBOARDS,\n    value: arrayToIdMap(getCustomDashboards(dashboards)),\n});\n\nexport const acSetDashboardStarred = (dashboardId, isStarred) => ({\n    type: SET_DASHBOARD_STARRED,\n    dashboardId: dashboardId,\n    value: isStarred,\n});\n\nexport const acSetDashboardDisplayName = (dashboardId, value) => ({\n    type: SET_DASHBOARD_DISPLAY_NAME,\n    dashboardId,\n    value,\n});\n\nexport const acSetDashboardItems = value => ({\n    type: SET_DASHBOARD_ITEMS,\n    value,\n});\n\n// thunks\n\nexport const tFetchDashboards = () => async dispatch => {\n    const collection = await apiFetchDashboards();\n    dispatch(acSetDashboards(collection.toArray()));\n};\n\nexport const tSelectDashboard = id => async (dispatch, getState) => {\n    const onError = error => {\n        console.log('Error (apiFetchDashboards): ', error);\n        return error;\n    };\n\n    try {\n        const state = getState();\n\n        let dashboardToSelect = null;\n        if (id) {\n            dashboardToSelect = sGetDashboardById(state, id) || null;\n        } else {\n            const preferredId = getPreferredDashboardId(\n                sGetUserUsername(state)\n            );\n            const dash = sGetDashboardById(state, preferredId);\n            dashboardToSelect =\n                preferredId && dash\n                    ? dash\n                    : sGetDashboardsSortedByStarred(state)[0];\n        }\n\n        if (dashboardToSelect) {\n            dispatch(tSetSelectedDashboardById(dashboardToSelect.id));\n        } else {\n            dispatch(acSetSelectedId());\n        }\n    } catch (err) {\n        return onError(err);\n    }\n};\n\nexport const tStarDashboard = (id, isStarred) => async dispatch => {\n    const onSuccess = id => {\n        dispatch(acSetDashboardStarred(id, isStarred));\n        return id;\n    };\n\n    const onError = error => {\n        console.log('Error (apiStarDashboard): ', error);\n        return error;\n    };\n    try {\n        await apiStarDashboard(id, isStarred);\n        return onSuccess(id);\n    } catch (err) {\n        return onError(err);\n    }\n};\n\nexport const tDeleteDashboard = id => async dispatch => {\n    try {\n        await apiDeleteDashboard(id);\n        dispatch(acClearEditDashboard());\n        dispatch(acSetSelectedId());\n        dispatch(acSetDashboardItems([]));\n\n        await dispatch(tFetchDashboards());\n\n        return Promise.resolve();\n    } catch (err) {\n        console.log('Error (deleteDashboard): ', err);\n        return err;\n    }\n};\n","/** @module reducers/controlBar */\nimport { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\n\nexport const SET_CONTROLBAR_USER_ROWS = 'SET_CONTROLBAR_USER_ROWS';\n\nexport const DEFAULT_STATE_CONTROLBAR_ROWS = 1;\n\nconst userRows = (state = DEFAULT_STATE_CONTROLBAR_ROWS, action) => {\n    switch (action.type) {\n        case SET_CONTROLBAR_USER_ROWS:\n            return validateReducer(action.value, DEFAULT_STATE_CONTROLBAR_ROWS);\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    userRows,\n});\n\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\nexport const sGetControlBarRoot = state => state.controlBar;\n\n// Selector dependency level 2\n\nexport const sGetControlBarUserRows = state =>\n    sGetControlBarRoot(state).userRows;\n","import { getInstance } from 'd2';\nimport { DEFAULT_STATE_CONTROLBAR_ROWS } from '../reducers/controlBar';\n\nconst NAMESPACE = 'dashboard';\nconst KEY = 'controlBarRows';\n\nconst hasNamespace = async d2 => await d2.currentUser.dataStore.has(NAMESPACE);\n\nconst getNamespace = async (d2, hasNamespace) =>\n    hasNamespace\n        ? await d2.currentUser.dataStore.get(NAMESPACE)\n        : await d2.currentUser.dataStore.create(NAMESPACE);\n\nexport const apiGetControlBarRows = async () => {\n    const d2 = await getInstance();\n    const namespace = await getNamespace(d2, await hasNamespace(d2));\n    const hasKey = namespace.keys && namespace.keys.find(key => key === KEY);\n\n    if (hasKey) {\n        return await namespace.get(KEY);\n    } else {\n        await apiPostControlBarRows(DEFAULT_STATE_CONTROLBAR_ROWS, namespace);\n        console.log(\n            '(These errors to /userDataStore/dashboard can be ignored)'\n        );\n        return DEFAULT_STATE_CONTROLBAR_ROWS;\n    }\n};\n\nexport const apiPostControlBarRows = async (rows, namespace) => {\n    const d2 = await getInstance();\n    const ns = namespace || (await getNamespace(d2, hasNamespace));\n\n    ns.set(KEY, rows);\n};\n","import { SET_CONTROLBAR_USER_ROWS } from '../reducers/controlBar';\nimport { apiGetControlBarRows } from '../api/controlBar';\n\n// actions\n\nexport const acSetControlBarUserRows = rows => ({\n    type: SET_CONTROLBAR_USER_ROWS,\n    value: rows,\n});\n\n// thunks\n\nexport const tSetControlBarRows = () => async dispatch => {\n    const onSuccess = rows => {\n        dispatch(acSetControlBarUserRows(rows));\n    };\n\n    const onError = error => {\n        console.log('Error (apiGetControlBarRows): ', error);\n        return error;\n    };\n\n    try {\n        const controlBarRows = await apiGetControlBarRows();\n        return onSuccess(controlBarRows);\n    } catch (err) {\n        return onError(err);\n    }\n};\n","import {\n    getDimensionById,\n    DIMENSION_ID_PERIOD,\n    DIMENSION_ID_ORGUNIT,\n} from '@dhis2/analytics';\n\nexport const SET_DIMENSIONS = 'SET_DIMENSIONS';\n\nexport const getDefaultDimensions = () =>\n    [DIMENSION_ID_PERIOD, DIMENSION_ID_ORGUNIT].map(dimensionId => {\n        const { id, iconName, name } = getDimensionById(dimensionId);\n        return {\n            id,\n            iconName,\n            name: name(),\n        };\n    });\n\nexport default (state = getDefaultDimensions(), action) => {\n    switch (action.type) {\n        case SET_DIMENSIONS: {\n            return [...getDefaultDimensions(), ...action.value];\n        }\n        default:\n            return state;\n    }\n};\n\nexport const sGetDimensions = state => state.dimensions;\n","export const SET_SETTINGS = 'SET_SETTINGS';\nexport const ADD_SETTINGS = 'ADD_SETTINGS';\n\nexport const DEFAULT_SETTINGS = {\n    keyDateFormat: 'yyyy-MM-dd',\n    keyAnalysisRelativePeriod: 'LAST_12_MONTHS',\n    keyAnalysisDigitGroupSeparator: 'SPACE',\n    displayNameProperty: 'displayName',\n    uiLocale: 'en',\n    rootOrganisationUnit: {},\n};\n\nexport default (state = DEFAULT_SETTINGS, action) => {\n    switch (action.type) {\n        case SET_SETTINGS: {\n            return Object.assign({}, action.value);\n        }\n        case ADD_SETTINGS: {\n            return {\n                ...state,\n                ...action.value,\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// Selectors\n\nexport const sGetSettings = state => state.settings;\n\nexport const sGetSettingsDisplayNameProperty = state =>\n    sGetSettings(state).displayNameProperty;\n\nexport const sGetRootOrgUnit = state =>\n    sGetSettings(state).rootOrganisationUnit;\n\nexport const sGetRelativePeriod = state =>\n    sGetSettings(state).keyAnalysisRelativePeriod;\n\nexport const sGetUiLocale = state => sGetSettings(state).uiLocale;\n","import { SET_DIMENSIONS } from '../reducers/dimensions';\nimport { apiFetchDimensions } from '@dhis2/analytics';\nimport { sGetSettingsDisplayNameProperty } from '../reducers/settings';\n\nexport const acSetDimensions = dimensions => ({\n    type: SET_DIMENSIONS,\n    value: dimensions,\n});\n\nexport const tSetDimensions = d2 => async (dispatch, getState) => {\n    const onSuccess = dimensions => {\n        dispatch(acSetDimensions(dimensions));\n    };\n\n    const onError = error => {\n        console.log('Error (apiFetchDimensions): ', error);\n        return error;\n    };\n\n    try {\n        const displayNameProp = sGetSettingsDisplayNameProperty(getState());\n        const dimensions = await apiFetchDimensions(d2, displayNameProp);\n\n        // filter out CATEGORY that are not of type ATTRIBUTE\n        const filteredDimensions = dimensions.filter(\n            dim =>\n                dim.dimensionType !== 'CATEGORY' ||\n                (dim.dimensionType === 'CATEGORY' &&\n                    dim.dataDimensionType === 'ATTRIBUTE')\n        );\n        return onSuccess(filteredDimensions);\n    } catch (err) {\n        return onError(err);\n    }\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { colors } from '@dhis2/ui-core';\nimport { withStyles } from '@material-ui/core/styles';\n\nexport const SHOWMORE_BAR_HEIGHT = 16;\n\nconst styles = {\n    showMore: {\n        color: colors.grey700,\n        cursor: 'pointer',\n        fontSize: 11,\n        paddingTop: 5,\n        '&:hover': {\n            textDecoration: 'underline',\n        },\n    },\n    disabled: {\n        paddingTop: 5,\n        color: colors.grey500,\n        fontSize: 11,\n        cursor: 'not-allowed',\n    },\n};\n\nexport const ShowMoreButton = ({ onClick, isMaxHeight, classes, disabled }) => {\n    return (\n        <div style={{ textAlign: 'center' }}>\n            {disabled ? (\n                <div className={classes.disabled}>{i18n.t('Show more')}</div>\n            ) : (\n                <div className={classes.showMore} onClick={onClick}>\n                    {isMaxHeight ? i18n.t('Show less') : i18n.t('Show more')}\n                </div>\n            )}\n        </div>\n    );\n};\n\nShowMoreButton.propTypes = {\n    classes: PropTypes.object,\n    disabled: PropTypes.bool,\n    isMaxHeight: PropTypes.bool,\n    onClick: PropTypes.func,\n};\n\nexport default withStyles(styles)(ShowMoreButton);\n","import { SHOWMORE_BAR_HEIGHT } from './ShowMoreButton';\n\nexport const CONTROL_BAR_ROW_HEIGHT = 40;\nexport const FIRST_ROW_PADDING_HEIGHT = 10;\nexport const MIN_ROW_COUNT = 1;\n\nexport const HEADERBAR_HEIGHT = 48;\n\nconst CONTROL_BAR_OUTER_HEIGHT_DIFF =\n    FIRST_ROW_PADDING_HEIGHT + SHOWMORE_BAR_HEIGHT - 2; // 2 pixel \"adjustment\"\n\nexport const getRowsHeight = rows => {\n    return rows * CONTROL_BAR_ROW_HEIGHT;\n};\n\nexport const getNumRowsFromHeight = height => {\n    return Math.floor(\n        (height - CONTROL_BAR_OUTER_HEIGHT_DIFF) / CONTROL_BAR_ROW_HEIGHT\n    );\n};\n\nexport const getTopOffset = rows => {\n    return HEADERBAR_HEIGHT + getControlBarHeight(rows, false);\n};\n\nexport const getControlBarHeight = rows => {\n    return getRowsHeight(rows) + CONTROL_BAR_OUTER_HEIGHT_DIFF;\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { colors } from '@dhis2/ui-core';\nimport { HEADERBAR_HEIGHT } from './controlBarDimensions';\n\nimport classes from './styles/ControlBar.module.css';\n\nconst DRAG_HANDLE_HEIGHT = 7;\n\nclass ControlBar extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            dragging: false,\n        };\n    }\n\n    onStartDrag = () => {\n        this.setState({ dragging: true });\n        window.addEventListener('mousemove', this.onDrag);\n        window.addEventListener('mouseup', this.onEndDrag);\n    };\n\n    onDrag = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const newHeight = event.clientY;\n\n        if (\n            this.props.onChangeHeight &&\n            newHeight !== this.props.height &&\n            newHeight > 0\n        ) {\n            requestAnimationFrame(() => {\n                this.props.onChangeHeight(newHeight);\n            });\n        }\n    };\n\n    onEndDrag = () => {\n        this.setState({ dragging: false });\n        window.removeEventListener('mousemove', this.onDrag);\n        window.removeEventListener('mouseup', this.onEndDrag);\n\n        if (this.props.onEndDrag) {\n            this.props.onEndDrag();\n        }\n    };\n\n    renderDragHandle() {\n        return typeof this.props.onChangeHeight === 'function' ? (\n            <div\n                className={classes.draghandle}\n                style={{ height: DRAG_HANDLE_HEIGHT }}\n                onMouseDown={this.onStartDrag}\n            />\n        ) : null;\n    }\n\n    render() {\n        const height = Math.max(this.props.height, 0) + DRAG_HANDLE_HEIGHT;\n\n        const rootStyle = Object.assign(\n            {\n                height,\n                top: HEADERBAR_HEIGHT,\n                backgroundColor: this.props.editMode\n                    ? colors.yellow050\n                    : colors.white,\n                paddingBottom: DRAG_HANDLE_HEIGHT,\n            },\n            // Disable animations while dragging\n            this.state.dragging ? { transition: 'none' } : {}\n        );\n\n        return (\n            <div style={rootStyle} className={classes.root}>\n                <div className={classes.content}>{this.props.children}</div>\n                {this.renderDragHandle()}\n            </div>\n        );\n    }\n}\n\nControlBar.propTypes = {\n    /**\n     * The height of the control bar in number of lines. Must be a positive integer.\n     */\n    children: PropTypes.node.isRequired,\n\n    /**\n     * If true, the background color of the control bar changes to indicate that edit mode is active.\n     */\n    editMode: PropTypes.bool.isRequired,\n\n    /**\n     * Callback function that is called when the control bar is resized.\n     * The callback receives one argument: The new height in pixels.\n     *\n     * If no callback is specified the control bar will not have a drag handle.\n     */\n    height: PropTypes.number.isRequired,\n\n    /**\n     * Callback function that is called when the control bar is dropped after being dragged.\n     * The callback receives one argument: The new height in pixels.\n     *\n     * Ignored if no \"onChangeHeight\" function is provided.\n     */\n    onChangeHeight: PropTypes.func,\n\n    /**\n     * The contents of the control bar.\n     */\n    onEndDrag: PropTypes.func,\n};\n\nControlBar.defaultProps = {\n    onChangeHeight: null,\n    onEndDrag: null,\n};\n\nexport default ControlBar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst StarIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>\n);\n\nStarIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default StarIcon;\n","import { getInstance } from 'd2';\n\nexport const apiPostDataStatistics = async (eventType, id) => {\n    const d2 = await getInstance();\n    const url = `dataStatistics?eventType=${eventType}&favorite=${id}`;\n\n    d2.Api.getApi().post(url);\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Chip, colors } from '@dhis2/ui-core';\nimport { Link } from 'react-router-dom';\nimport debounce from 'lodash/debounce';\n\nimport StarIcon from '../../icons/Star';\nimport { apiPostDataStatistics } from '../../api/dataStatistics';\n\nconst styles = {\n    chip: {\n        margin: '3px',\n    },\n    link: {\n        color: colors.grey600,\n        display: 'inline-block',\n        textDecoration: 'none',\n        verticalAlign: 'top',\n    },\n    icon: {\n        height: '20px',\n        marginTop: '2px',\n        width: '20px',\n    },\n    selected: {\n        fill: colors.white,\n    },\n    unselected: {\n        fill: colors.grey700,\n    },\n};\n\nexport const DashboardItemChip = ({\n    starred,\n    selected,\n    label,\n    dashboardId,\n    classes,\n}) => {\n    const chipProps = {\n        selected,\n        className: classes.chip,\n    };\n\n    if (starred) {\n        const selectedState = selected ? classes.selected : classes.unselected;\n        chipProps.icon = (\n            <StarIcon className={`${classes.icon} ${selectedState}`} />\n        );\n    }\n\n    return (\n        <Link\n            className={classes.link}\n            to={`/${dashboardId}`}\n            onClick={debounce(\n                () => apiPostDataStatistics('DASHBOARD_VIEW', dashboardId),\n                500\n            )}\n        >\n            <Chip {...chipProps}>{label}</Chip>\n        </Link>\n    );\n};\n\nDashboardItemChip.propTypes = {\n    dashboardId: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    selected: PropTypes.bool.isRequired,\n    starred: PropTypes.bool.isRequired,\n    classes: PropTypes.object,\n};\n\nexport default withStyles(styles)(DashboardItemChip);\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\n\nconst AddCircleIcon = () => (\n    <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"32\"\n        height=\"32\"\n        fill={colors.teal600}\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm4 11h-3v3c0 .55-.45 1-1 1s-1-.45-1-1v-3H8c-.55 0-1-.45-1-1s.45-1 1-1h3V8c0-.55.45-1 1-1s1 .45 1 1v3h3c.55 0 1 .45 1 1s-.45 1-1 1z\" />\n    </svg>\n);\n\nexport default AddCircleIcon;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nconst ClearIcon = ({ className }) => (\n    <svg\n        className={className}\n        fill={colors.grey800}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>\n);\n\nClearIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default ClearIcon;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ClearIcon from '../../icons/Clear';\n\nimport classes from './styles/ClearButton.module.css';\n\nexport const ClearButton = ({ onClear }) => (\n    <button className={classes.button} onClick={onClear}>\n        <span>\n            <ClearIcon className={classes.icon} color=\"action\" />\n        </span>\n    </button>\n);\n\nClearButton.propTypes = {\n    onClear: PropTypes.func.isRequired,\n};\n\nexport default ClearButton;\n","import { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\n\nexport const SET_DASHBOARDS_FILTER_NAME = 'SET_DASHBOARDS_FILTER_NAME';\nexport const SET_DASHBOARDS_FILTER_OWNER = 'SET_DASHBOARDS_FILTER_OWNER';\nexport const SET_DASHBOARDS_FILTER_ORDER = 'SET_DASHBOARDS_FILTER_ORDER';\n\nexport const ownerData = [\n    { id: 'ALL', value: 'All users' },\n    { id: 'ME', value: 'Created by me' },\n    { id: 'OTHERS', value: 'Created by others' },\n];\n\nexport const orderData = [\n    { id: 'NAME:ASC', value: 'Name (asc)' },\n    { id: 'NAME:ASC', value: 'Name (desc)' },\n    { id: 'ITEMS:ASC', value: 'Number of items (asc)' },\n    { id: 'ITEMS:ASC', value: 'Number of items (desc)' },\n    { id: 'CREATED:ASC', value: 'Created date (asc)' },\n    { id: 'CREATED:ASC', value: 'Created date (desc)' },\n];\n\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_NAME = '';\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_OWNER = ownerData[0].id;\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_ORDER = orderData[0].id;\n\nconst name = (state = DEFAULT_STATE_DASHBOARDS_FILTER_NAME, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_NAME:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_NAME\n            );\n        default:\n            return state;\n    }\n};\n\nconst owner = (state = DEFAULT_STATE_DASHBOARDS_FILTER_OWNER, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_OWNER:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_NAME\n            );\n        default:\n            return state;\n    }\n};\n\nconst order = (state = DEFAULT_STATE_DASHBOARDS_FILTER_ORDER, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_ORDER:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_ORDER\n            );\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    name,\n    owner,\n    order,\n});\n\n// selectors\n\nexport const sGetDashboardsFilterRoot = state => state.dashboardsFilter;\n\n// selector dependency level 2\n\nexport const sGetFilterName = state => sGetDashboardsFilterRoot(state).name;\nexport const sGetFilterOwner = state => sGetDashboardsFilterRoot(state).owner;\nexport const sGetFilterOrder = state => sGetDashboardsFilterRoot(state).order;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport i18n from '@dhis2/d2-i18n';\nimport InputField from '@material-ui/core/Input';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { colors } from '@dhis2/ui-core';\n\nimport ClearButton from './ClearButton';\nimport { DEFAULT_STATE_DASHBOARDS_FILTER_NAME } from '../../reducers/dashboardsFilter';\n\nexport const KEYCODE_ENTER = 13;\nexport const KEYCODE_ESCAPE = 27;\n\nconst styles = {\n    filterField: {\n        fontSize: '14px',\n        width: '200px',\n        height: '30px',\n        top: '-4px',\n    },\n    searchIcon: {\n        color: colors.grey700,\n        width: '20px',\n        height: '20px',\n    },\n};\n\nexport class Filter extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            value: DEFAULT_STATE_DASHBOARDS_FILTER_NAME,\n        };\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setState({\n            value: nextProps.name,\n        });\n    }\n\n    setFilterValue = event => {\n        event.preventDefault();\n\n        this.props.onChangeName(event.target.value);\n    };\n\n    handleKeyUp = event => {\n        switch (event.keyCode) {\n            case KEYCODE_ENTER:\n                this.props.onKeypressEnter();\n                break;\n            case KEYCODE_ESCAPE:\n                this.props.onChangeName();\n                break;\n            default:\n                break;\n        }\n    };\n\n    render() {\n        const { classes, name, onChangeName } = this.props;\n\n        const startAdornment = (\n            <InputAdornment position=\"start\">\n                <SearchIcon className={classes.searchIcon} />\n            </InputAdornment>\n        );\n\n        const endAdornment =\n            name !== '' && name !== null ? (\n                <InputAdornment position=\"end\">\n                    <ClearButton onClear={() => onChangeName()} />\n                </InputAdornment>\n            ) : null;\n\n        return (\n            <InputField\n                className={classes.filterField}\n                placeholder={i18n.t('Search for a dashboard')}\n                startAdornment={startAdornment}\n                endAdornment={endAdornment}\n                value={this.state.value}\n                onChange={this.setFilterValue}\n                onKeyUp={this.handleKeyUp}\n            />\n        );\n    }\n}\n\nFilter.propTypes = {\n    classes: PropTypes.object,\n    name: PropTypes.string,\n    onChangeName: PropTypes.func,\n    onKeypressEnter: PropTypes.func,\n};\n\nFilter.defaultProps = {\n    name: '',\n    onChangeName: Function.prototype,\n};\n\nexport default withStyles(styles)(Filter);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport ControlBar from './ControlBar';\nimport arraySort from 'd2-utilizr/lib/arraySort';\nimport PropTypes from 'prop-types';\n\nimport Chip from './DashboardItemChip';\nimport AddCircleIcon from '../../icons/AddCircle';\nimport Filter from './Filter';\nimport ShowMoreButton from './ShowMoreButton';\nimport {\n    FIRST_ROW_PADDING_HEIGHT,\n    MIN_ROW_COUNT,\n    getRowsHeight,\n    getControlBarHeight,\n    getNumRowsFromHeight,\n} from './controlBarDimensions';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { sGetAllDashboards } from '../../reducers/dashboards';\nimport { sGetFilterName } from '../../reducers/dashboardsFilter';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { acSetControlBarUserRows } from '../../actions/controlBar';\nimport { acSetFilterName } from '../../actions/dashboardsFilter';\nimport { orObject, orArray } from '../../modules/util';\nimport { apiPostControlBarRows } from '../../api/controlBar';\n\nimport classes from './styles/DashboardsBar.module.css';\n\nexport const MAX_ROW_COUNT = 10;\n\nexport class DashboardsBar extends Component {\n    state = {\n        rows: MIN_ROW_COUNT,\n    };\n\n    setInitialDashboardState = rows => {\n        this.setState({ rows, isMaxHeight: rows === MAX_ROW_COUNT });\n    };\n\n    componentDidMount() {\n        this.setInitialDashboardState(this.props.userRows);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setInitialDashboardState(nextProps.userRows);\n    }\n\n    onChangeHeight = newHeight => {\n        const adjustedHeight = newHeight - 52; // don't rush the transition to a bigger row count\n        const newRows = Math.max(\n            MIN_ROW_COUNT,\n            getNumRowsFromHeight(adjustedHeight)\n        );\n\n        if (newRows !== this.state.rows) {\n            const newRowCount = Math.min(newRows, MAX_ROW_COUNT);\n\n            this.props.onChangeHeight(newRowCount);\n        }\n    };\n\n    onEndDrag = () => {\n        return apiPostControlBarRows(this.state.rows);\n    };\n\n    onToggleMaxHeight = () => {\n        const rows =\n            this.state.rows === MAX_ROW_COUNT\n                ? this.props.userRows\n                : MAX_ROW_COUNT;\n\n        this.setState({ rows, isMaxHeight: !this.state.isMaxHeight });\n    };\n\n    onSelectDashboard = () => {\n        this.props.history.push(`/${this.props.dashboards[0].id}`);\n    };\n\n    render() {\n        const { dashboards, name, selectedId, onChangeFilterName } = this.props;\n\n        const rowCount = this.state.isMaxHeight\n            ? MAX_ROW_COUNT\n            : this.state.rows;\n        const controlBarHeight = getControlBarHeight(rowCount);\n        const contentWrapperStyle = {\n            padding: `${FIRST_ROW_PADDING_HEIGHT}px 6px 0 6px`,\n            overflowY: this.state.isMaxHeight ? 'auto' : 'hidden',\n            height: getRowsHeight(rowCount) + FIRST_ROW_PADDING_HEIGHT,\n        };\n\n        return (\n            <ControlBar\n                height={controlBarHeight}\n                onChangeHeight={this.onChangeHeight}\n                onEndDrag={this.onEndDrag}\n                editMode={false}\n            >\n                <div style={contentWrapperStyle}>\n                    <div className={classes.leftControls}>\n                        <Link\n                            style={{\n                                display: 'inline-block',\n                                textDecoration: 'none',\n                                marginRight: 10,\n                                position: 'relative',\n                                top: '2px',\n                            }}\n                            to={'/new'}\n                        >\n                            <AddCircleIcon />\n                        </Link>\n                        <Filter\n                            name={name}\n                            onChangeName={onChangeFilterName}\n                            onKeypressEnter={this.onSelectDashboard}\n                        />\n                    </div>\n                    {orArray(dashboards).map(dashboard => (\n                        <Chip\n                            key={dashboard.id}\n                            label={dashboard.displayName}\n                            starred={dashboard.starred}\n                            dashboardId={dashboard.id}\n                            selected={dashboard.id === selectedId}\n                        />\n                    ))}\n                </div>\n                <ShowMoreButton\n                    onClick={this.onToggleMaxHeight}\n                    isMaxHeight={this.state.isMaxHeight}\n                    disabled={this.props.userRows === MAX_ROW_COUNT}\n                />\n            </ControlBar>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    dashboards: sGetAllDashboards(state),\n    name: sGetFilterName(state),\n    userRows: sGetControlBarUserRows(state),\n    selectedId: sGetSelectedId(state),\n});\n\nconst mapDispatchToProps = {\n    onChangeHeight: acSetControlBarUserRows,\n    onChangeFilterName: acSetFilterName,\n};\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const dashboards = Object.values(orObject(stateProps.dashboards));\n    const displayDashboards = arraySort(\n        dashboards.filter(d =>\n            d.displayName.toLowerCase().includes(stateProps.name.toLowerCase())\n        ),\n        'ASC',\n        'displayName'\n    );\n\n    return {\n        ...stateProps,\n        ...ownProps,\n        ...dispatchProps,\n        dashboards: [\n            ...displayDashboards.filter(d => d.starred),\n            ...displayDashboards.filter(d => !d.starred),\n        ],\n    };\n};\n\nDashboardsBar.propTypes = {\n    dashboards: PropTypes.array,\n    history: PropTypes.object,\n    name: PropTypes.string,\n    selectedId: PropTypes.string,\n    userRows: PropTypes.number,\n    onChangeFilterName: PropTypes.func,\n    onChangeHeight: PropTypes.func,\n};\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps,\n        mergeProps\n    )(DashboardsBar)\n);\n","import {\n    SET_DASHBOARDS_FILTER_NAME,\n    SET_DASHBOARDS_FILTER_OWNER,\n    SET_DASHBOARDS_FILTER_ORDER,\n} from '../reducers/dashboardsFilter';\n\n// actions\n\nexport const acSetFilterName = value => ({\n    type: SET_DASHBOARDS_FILTER_NAME,\n    value,\n});\n\nexport const acSetFilterOwner = value => ({\n    type: SET_DASHBOARDS_FILTER_OWNER,\n    value,\n});\n\nexport const acSetFilterOrder = value => ({\n    type: SET_DASHBOARDS_FILTER_ORDER,\n    value,\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport {\n    getTopOffset,\n    MIN_ROW_COUNT,\n} from '../ControlBar/controlBarDimensions';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\n\nconst DashboardVerticalOffset = props => {\n    const rows = props.editMode ? MIN_ROW_COUNT : props.userRows;\n    const marginTop = getTopOffset(rows);\n\n    return <div className=\"page-container-top-margin\" style={{ marginTop }} />;\n};\n\nconst mapStateToProps = state => ({\n    userRows: sGetControlBarUserRows(state),\n});\n\nDashboardVerticalOffset.propTypes = {\n    editMode: PropTypes.bool,\n    userRows: PropTypes.number,\n};\n\nexport default connect(mapStateToProps)(DashboardVerticalOffset);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { MenuItem, colors } from '@dhis2/ui-core';\n\nconst HeaderMenuItem = ({ title }) => (\n    <MenuItem\n        dense\n        key={title}\n        disabled\n        label={\n            <p style={{ color: colors.grey800, fontWeight: '600' }}>{title}</p>\n        }\n    />\n);\n\nHeaderMenuItem.propTypes = {\n    title: PropTypes.string.isRequired,\n};\n\nexport default HeaderMenuItem;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nconst LaunchIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"12\"\n        height=\"12\"\n        fill={colors.grey600}\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z\" />\n    </svg>\n);\n\nLaunchIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default LaunchIcon;\n","import React from 'react';\nimport { MenuItem, colors } from '@dhis2/ui-core';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport { visTypeIcons } from '@dhis2/analytics';\n\nimport { getItemIcon, VISUALIZATION } from '../../modules/itemTypes';\nimport LaunchIcon from '../../icons/Launch';\n\nimport classes from './styles/ContentMenuItem.module.css';\n\nconst LaunchLink = ({ url }) => (\n    <a\n        onClick={e => e.stopPropagation()}\n        className={classes.launchLink}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        href={url}\n    >\n        <LaunchIcon />\n    </a>\n);\n\nLaunchLink.propTypes = {\n    url: PropTypes.string,\n};\n\nconst InsertButton = () => (\n    <button className={classes.buttonInsert}>{i18n.t('Insert')}</button>\n);\n\nconst ContentMenuItem = ({ type, name, onInsert, url, visType }) => {\n    const ItemIcon = getItemIcon(type);\n\n    const renderedItemIcon =\n        type === VISUALIZATION ? (\n            visTypeIcons[visType]\n        ) : (\n            <ItemIcon style={{ fill: colors.grey600 }} />\n        );\n\n    return (\n        <MenuItem\n            dense\n            onClick={onInsert}\n            label={\n                <div className={classes.menuItem}>\n                    <div className={classes.label}>\n                        <span style={{ margin: '6px' }}>\n                            {renderedItemIcon}\n                        </span>\n                        <span>{name}</span>\n                        {url ? <LaunchLink url={url} /> : null}\n                    </div>\n                    <InsertButton />\n                </div>\n            }\n        />\n    );\n};\n\nContentMenuItem.propTypes = {\n    name: PropTypes.string,\n    type: PropTypes.string,\n    url: PropTypes.string,\n    visType: PropTypes.string,\n    onInsert: PropTypes.func,\n};\n\nexport default ContentMenuItem;\n","import i18n from '@dhis2/d2-i18n';\nimport {\n    spacerContent,\n    VISUALIZATION,\n    MAP,\n    EVENT_CHART,\n    EVENT_REPORT,\n    USERS,\n    REPORTS,\n    RESOURCES,\n    APP,\n    MESSAGES,\n    TEXT,\n    SPACER,\n} from '../../modules/itemTypes';\n\nexport const singleItems = [\n    {\n        id: 'additional',\n        header: () => i18n.t('Additional items'),\n        items: [\n            {\n                type: TEXT,\n                name: () => i18n.t('Text box'),\n                content: '',\n            },\n            {\n                type: MESSAGES,\n                name: () => i18n.t('Messages'),\n                content: 'true',\n            },\n            {\n                type: SPACER,\n                name: () => i18n.t('Spacer'),\n                content: spacerContent,\n            },\n        ],\n    },\n];\n\n// categorizedItems are grouped in the item selector menu\nexport const categorizedItems = [\n    VISUALIZATION,\n    MAP,\n    EVENT_REPORT,\n    EVENT_CHART,\n    USERS,\n    REPORTS,\n    RESOURCES,\n    APP,\n];\n\n// listItemTypes are included in a single dashboard item\nexport const listItemTypes = [REPORTS, RESOURCES, USERS];\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { MenuItem, Divider } from '@dhis2/ui-core';\n\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\n\nimport { tAddListItemContent } from './actions';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\nimport { getItemUrl, APP, VISUALIZATION } from '../../modules/itemTypes';\nimport { categorizedItems, listItemTypes } from './selectableItems';\n\nimport classes from './styles/CategorizedMenuGroup.module.css';\n\nclass CategorizedMenuGroup extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seeMore: false,\n        };\n    }\n\n    addItem = item => () => {\n        const { type, acAddDashboardItem, tAddListItemContent } = this.props;\n\n        if (type === APP) {\n            acAddDashboardItem({ type, content: item.key });\n        } else {\n            const newItem = {\n                id: item.id,\n                name: item.displayName || item.name,\n            };\n\n            if (listItemTypes.includes(type)) {\n                tAddListItemContent(type, newItem);\n            } else {\n                acAddDashboardItem({ type, content: newItem });\n            }\n        }\n    };\n\n    toggleSeeMore = () => {\n        this.setState({ seeMore: !this.state.seeMore });\n\n        this.props.onChangeItemsLimit(this.props.type);\n    };\n\n    render() {\n        const { title, type, items, hasMore } = this.props;\n        return (\n            <Fragment>\n                <HeaderMenuItem title={title} />\n                {items.map(item => {\n                    const itemUrl = getItemUrl(type, item, this.context.d2);\n                    return (\n                        <ContentMenuItem\n                            key={item.id || item.key}\n                            type={type}\n                            visType={type === VISUALIZATION ? item.type : type}\n                            name={item.displayName || item.name}\n                            onInsert={this.addItem(item)}\n                            url={itemUrl}\n                        />\n                    );\n                })}\n                {hasMore ? (\n                    <MenuItem\n                        dense\n                        key={`showmore${title}`}\n                        onClick={this.toggleSeeMore}\n                        label={\n                            <button className={classes.showMoreButton}>\n                                {this.state.seeMore\n                                    ? i18n.t('Show fewer')\n                                    : i18n.t('Show more')}\n                            </button>\n                        }\n                    />\n                ) : null}\n                <Divider margin=\"8px 0px\" />\n            </Fragment>\n        );\n    }\n}\n\nCategorizedMenuGroup.propTypes = {\n    items: PropTypes.array.isRequired,\n    title: PropTypes.string.isRequired,\n    type: PropTypes.oneOf(categorizedItems).isRequired,\n    onChangeItemsLimit: PropTypes.func.isRequired,\n    acAddDashboardItem: PropTypes.func,\n    hasMore: PropTypes.bool,\n    tAddListItemContent: PropTypes.func,\n};\n\nCategorizedMenuGroup.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nexport default connect(\n    null,\n    {\n        acAddDashboardItem,\n        tAddListItemContent,\n    }\n)(CategorizedMenuGroup);\n","import { sGetEditDashboardRoot } from '../../reducers/editDashboard';\nimport { itemTypeMap } from '../../modules/itemTypes';\nimport {\n    acAddDashboardItem,\n    acUpdateDashboardItem,\n} from '../../actions/editDashboard';\n\nexport const tAddListItemContent = (type, content) => (dispatch, getState) => {\n    const state = getState();\n    const listItemType = itemTypeMap[type].propName;\n    const dashboardItems = sGetEditDashboardRoot(state).dashboardItems;\n    const dashboardItemIndex = dashboardItems.findIndex(\n        item => item.type === type\n    );\n    let dashboardItem;\n\n    // Reports/Resources/Users dashboard item type already present in dashboard\n    if (dashboardItemIndex > -1) {\n        dashboardItem = dashboardItems[dashboardItemIndex];\n        dashboardItem[listItemType].push(content);\n\n        dispatch(acUpdateDashboardItem(dashboardItem));\n    } else {\n        dashboardItem = {\n            type: type,\n            content: [content],\n        };\n\n        dispatch(acAddDashboardItem(dashboardItem));\n    }\n};\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\n\nexport const SinglesMenuGroup = ({ acAddDashboardItem, category }) => {\n    const addToDashboard = ({ type, content }) => () => {\n        acAddDashboardItem({ type, content });\n    };\n\n    return (\n        <Fragment>\n            <HeaderMenuItem title={category.header()} />\n            {category.items.map(item => (\n                <ContentMenuItem\n                    key={item.type}\n                    type={item.type}\n                    name={item.name()}\n                    onInsert={addToDashboard(item)}\n                />\n            ))}\n        </Fragment>\n    );\n};\n\nSinglesMenuGroup.propTypes = {\n    acAddDashboardItem: PropTypes.func,\n    category: PropTypes.object,\n};\n\nexport default connect(\n    null,\n    { acAddDashboardItem }\n)(SinglesMenuGroup);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport Popover from '@material-ui/core/Popover';\nimport { InputField, Menu } from '@dhis2/ui-core';\n\nimport CategorizedMenuGroup from './CategorizedMenuGroup';\nimport SinglesMenuGroup from './SinglesMenuGroup';\nimport { singleItems, categorizedItems } from './selectableItems';\nimport { itemTypeMap, getDefaultItemCount } from '../../modules/itemTypes';\n\nimport './styles/ItemSelector.css';\n\nconst ItemSearchField = props => (\n    <InputField\n        name=\"Dashboard item search\"\n        label={i18n.t('Search for items to add to this dashboard')}\n        type=\"text\"\n        onChange={props.onChange}\n        onFocus={props.onFocus}\n        value={props.value}\n    />\n);\n\nclass ItemSelector extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n            open: false,\n            maxOptions: new Set(),\n            items: undefined,\n            filter: '',\n        };\n    }\n\n    closeList = () => {\n        this.setState({ open: false, filter: '' });\n    };\n\n    openList = (_, event) => {\n        this.fetchItems();\n\n        this.setState({\n            anchorEl: event.currentTarget,\n            open: true,\n        });\n    };\n\n    setFilter = (_, event) => {\n        this.setState({ filter: event.target.value }, this.fetchItems);\n    };\n\n    getCategorizedMenuGroups = () =>\n        categorizedItems\n            .filter(type => {\n                const itemType = itemTypeMap[type];\n                return (\n                    this.state.items && this.state.items[itemType.endPointName]\n                );\n            })\n            .map(type => {\n                const itemType = itemTypeMap[type];\n                const itemCount = getDefaultItemCount(type);\n                const allItems = this.state.items[itemType.endPointName];\n                const hasMore = allItems.length > itemCount;\n                const items = this.state.maxOptions.has(itemType.id)\n                    ? allItems\n                    : allItems.slice(0, itemCount);\n\n                return (\n                    <CategorizedMenuGroup\n                        key={type}\n                        type={type}\n                        title={itemType.pluralTitle()}\n                        items={items}\n                        onChangeItemsLimit={this.fetchItems}\n                        hasMore={hasMore}\n                    />\n                );\n            });\n\n    getSinglesMenuGroups = () =>\n        singleItems.map(category => (\n            <SinglesMenuGroup key={category.id} category={category} />\n        ));\n\n    getMenuGroups = () =>\n        this.getCategorizedMenuGroups().concat(this.getSinglesMenuGroups());\n\n    fetchItems = async type => {\n        if (type) {\n            const maxOptions = this.state.maxOptions;\n\n            if (maxOptions.has(type)) {\n                maxOptions.delete(type);\n            } else {\n                maxOptions.add(type);\n            }\n\n            this.setState({ maxOptions });\n        } else {\n            this.setState({\n                maxOptions: new Set(),\n            });\n        }\n\n        let queryString = '?count=11';\n        if ([...this.state.maxOptions.values()].length) {\n            queryString +=\n                '&max=' + [...this.state.maxOptions.values()].join('&max=');\n        }\n\n        const filter = this.state.filter ? `/${this.state.filter}` : '';\n\n        this.context.d2.Api.getApi()\n            .get(`dashboards/q${filter}${queryString}`)\n            .then(response => this.setState({ items: response }))\n            .catch(console.error);\n    };\n\n    render() {\n        return (\n            <Fragment>\n                <ItemSearchField\n                    value={this.state.filter}\n                    onChange={this.setFilter}\n                    onFocus={this.openList}\n                />\n                <Popover\n                    className=\"dashboard-item-selector\"\n                    open={this.state.open}\n                    onClose={this.closeList}\n                    anchorEl={this.state.anchorEl}\n                    anchorOrigin={{ horizontal: 'left', vertical: 'bottom' }}\n                    transformOrigin={{ horizontal: 'left', vertical: 'top' }}\n                    style={{ height: '70vh' }}\n                    PaperProps={{ style: { width: '700px' } }}\n                    disableAutoFocus={true}\n                    disableRestoreFocus={true}\n                >\n                    <Menu>{this.getMenuGroups()}</Menu>\n                </Popover>\n            </Fragment>\n        );\n    }\n}\n\nItemSearchField.propTypes = {\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n    onFocus: PropTypes.func,\n};\n\nItemSelector.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nexport default ItemSelector;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport i18n from '@dhis2/d2-i18n';\nimport { InputField, TextAreaField } from '@dhis2/ui-core';\n\nimport ItemSelector from '../ItemSelector/ItemSelector';\nimport {\n    acSetDashboardTitle,\n    acSetDashboardDescription,\n} from '../../actions/editDashboard';\nimport { orObject } from '../../modules/util';\nimport { sGetEditDashboardRoot } from '../../reducers/editDashboard';\n\nconst styles = {\n    section: { display: 'flex', justifyContent: 'space-between' },\n    titleDescription: {\n        flex: '3',\n        marginRight: '50px',\n    },\n    title: {\n        display: 'block',\n        clear: 'both',\n    },\n    description: {\n        display: 'block',\n        clear: 'both',\n        marginTop: '15px',\n    },\n    underline: {\n        '&::before': {\n            borderBottom: `none`,\n        },\n        '&:hover::before': {\n            borderBottom: `none!important`,\n        },\n    },\n    input: {\n        backgroundColor: 'rgba(0, 0, 10, 0.05)',\n        borderRadius: '4px',\n        width: '100%',\n        '&:hover': {\n            backgroundColor: 'rgba(0, 0, 10, 0.08)',\n        },\n    },\n    itemSelector: {\n        flex: '2',\n        position: 'relative',\n    },\n};\n\nexport const EditTitleBar = ({\n    name,\n    description,\n    onChangeTitle,\n    onChangeDescription,\n    classes,\n}) => {\n    const updateTitle = (_, e) => {\n        onChangeTitle(e.target.value);\n    };\n\n    const updateDescription = (_, e) => {\n        onChangeDescription(e.target.value);\n    };\n\n    return (\n        <section className={classes.section}>\n            <div className={classes.titleDescription}>\n                <InputField\n                    className={classes.title}\n                    name=\"Dashboard title input\"\n                    label={i18n.t('Dashboard title')}\n                    type=\"text\"\n                    onChange={updateTitle}\n                    value={name}\n                    placeholder={i18n.t('Untitled dashboard')}\n                />\n                <TextAreaField\n                    className={classes.description}\n                    name=\"Dashboard description input\"\n                    label={i18n.t('Dashboard description')}\n                    onChange={updateDescription}\n                    value={description}\n                />\n            </div>\n            <div className={classes.itemSelector}>\n                <ItemSelector />\n            </div>\n        </section>\n    );\n};\n\nconst mapStateToProps = state => {\n    const selectedDashboard = orObject(sGetEditDashboardRoot(state));\n\n    return {\n        name: selectedDashboard.name,\n        description: selectedDashboard.description,\n    };\n};\n\nconst mapDispatchToProps = {\n    onChangeTitle: acSetDashboardTitle,\n    onChangeDescription: acSetDashboardDescription,\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(EditTitleBar));\n\nEditTitleBar.propTypes = {\n    onChangeDescription: PropTypes.func.isRequired,\n    onChangeTitle: PropTypes.func.isRequired,\n    classes: PropTypes.object,\n    description: PropTypes.string,\n    name: PropTypes.string,\n};\n\nEditTitleBar.defaultProps = {\n    name: '',\n    description: '',\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Button } from '@dhis2/ui-core';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport i18n from '@dhis2/d2-i18n';\n\nimport {\n    PeriodDimension,\n    DynamicDimension,\n    OrgUnitDimension,\n    DIMENSION_ID_PERIOD,\n    DIMENSION_ID_ORGUNIT,\n} from '@dhis2/analytics';\n\nconst peId = DIMENSION_ID_PERIOD;\nconst ouId = DIMENSION_ID_ORGUNIT;\n\nclass FilterDialog extends Component {\n    onConfirm = id => () => this.props.onConfirm(id);\n\n    dialogContent() {\n        const { displayNameProperty, dimension, selectedItems } = this.props;\n        const dialogId = dimension.id;\n\n        const commonProps = {\n            d2: this.context.d2,\n            onSelect: this.props.onSelect,\n            onDeselect: this.props.onDeselect,\n            onReorder: this.props.onReorder,\n        };\n\n        switch (dialogId) {\n            case peId: {\n                return (\n                    <PeriodDimension\n                        selectedPeriods={selectedItems}\n                        {...commonProps}\n                    />\n                );\n            }\n            case ouId:\n                return (\n                    <OrgUnitDimension\n                        displayNameProperty={displayNameProperty}\n                        ouItems={selectedItems}\n                        {...commonProps}\n                    />\n                );\n            default:\n                return (\n                    <DynamicDimension\n                        selectedItems={selectedItems}\n                        dialogId={dialogId}\n                        dialogTitle={dimension.name}\n                        {...commonProps}\n                    />\n                );\n        }\n    }\n\n    render() {\n        const { dimension, onClose } = this.props;\n        const dialogId = dimension.id;\n\n        return (\n            <Dialog\n                open={!!dialogId}\n                maxWidth=\"lg\"\n                disableEnforceFocus\n                onClose={onClose}\n            >\n                {dialogId && this.dialogContent()}\n                <DialogActions>\n                    <Button kind=\"secondary\" onClick={onClose}>\n                        {i18n.t('Cancel')}\n                    </Button>\n                    <Button kind=\"primary\" onClick={this.onConfirm(dialogId)}>\n                        {i18n.t('Confirm')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nFilterDialog.propTypes = {\n    dimension: PropTypes.object,\n    displayNameProperty: PropTypes.string,\n    selectedItems: PropTypes.array,\n    onClose: PropTypes.func,\n    onConfirm: PropTypes.func,\n    onDeselect: PropTypes.func,\n    onReorder: PropTypes.func,\n    onSelect: PropTypes.func,\n};\n\nFilterDialog.contextTypes = {\n    d2: PropTypes.object,\n};\n\nexport default FilterDialog;\n","export const SET_ACTIVE_MODAL_DIMENSION = 'SET_ACTIVE_MODAL_DIMENSION';\nexport const CLEAR_ACTIVE_MODAL_DIMENSION = 'CLEAR_ACTIVE_MODAL_DIMENSION';\n\nexport const DEFAULT_STATE_ACTIVE_MODAL_DIMENSION = {};\n\nexport default (state = DEFAULT_STATE_ACTIVE_MODAL_DIMENSION, action) => {\n    switch (action.type) {\n        case SET_ACTIVE_MODAL_DIMENSION: {\n            return action.value;\n        }\n        case CLEAR_ACTIVE_MODAL_DIMENSION: {\n            return DEFAULT_STATE_ACTIVE_MODAL_DIMENSION;\n        }\n        default:\n            return state;\n    }\n};\n\nexport const sGetActiveModalDimension = state => state.activeModalDimension;\n","import {\n    SET_ACTIVE_MODAL_DIMENSION,\n    CLEAR_ACTIVE_MODAL_DIMENSION,\n} from '../reducers/activeModalDimension';\n\nexport const acSetActiveModalDimension = value => ({\n    type: SET_ACTIVE_MODAL_DIMENSION,\n    value,\n});\n\nexport const acClearActiveModalDimension = () => ({\n    type: CLEAR_ACTIVE_MODAL_DIMENSION,\n});\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Popover from '@material-ui/core/Popover';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport { withTheme } from '@material-ui/core/styles';\n\nimport i18n from '@dhis2/d2-i18n';\nimport { DimensionsPanel } from '@dhis2/analytics';\n\nimport { Button } from '@dhis2/ui-core';\nimport FilterDialog from './FilterDialog';\n\nimport { sGetSettingsDisplayNameProperty } from '../../reducers/settings';\nimport { sGetActiveModalDimension } from '../../reducers/activeModalDimension';\nimport { sGetDimensions } from '../../reducers/dimensions';\nimport { sGetFiltersKeys } from '../../reducers/itemFilters';\nimport { sGetEditItemFiltersRoot } from '../../reducers/editItemFilters';\nimport { acAddItemFilter, acRemoveItemFilter } from '../../actions/itemFilters';\nimport {\n    acRemoveEditItemFilter,\n    acSetEditItemFilters,\n} from '../../actions/editItemFilters';\nimport {\n    acClearActiveModalDimension,\n    acSetActiveModalDimension,\n} from '../../actions/activeModalDimension';\n\nclass FilterSelector extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n        };\n    }\n\n    openPanel = (_, event) => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    closePanel = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    closeDialog = () => {\n        this.setState({ anchorEl: null });\n\n        this.props.clearActiveModalDimension();\n    };\n\n    selectDimension = id => {\n        this.props.setActiveModalDimension(\n            this.props.dimensions.find(dimension => dimension.id === id)\n        );\n    };\n\n    onSelectItems = ({ dimensionId, items }) => {\n        this.props.setEditItemFilters({\n            ...this.props.selectedItems,\n            [dimensionId]: items,\n        });\n    };\n\n    onDeselectItems = ({ dimensionId, itemIdsToRemove }) => {\n        const oldList = this.props.selectedItems[dimensionId] || [];\n        const newList = oldList.filter(\n            item => !itemIdsToRemove.includes(item.id)\n        );\n\n        if (newList.length) {\n            this.props.setEditItemFilters({\n                ...this.props.selectedItems,\n                [dimensionId]: newList,\n            });\n        } else {\n            this.props.removeEditItemFilter(dimensionId);\n        }\n    };\n\n    onReorderItems = ({ dimensionId, itemIds }) => {\n        const oldList = this.props.selectedItems[dimensionId] || [];\n        const reorderedList = itemIds.map(id =>\n            oldList.find(item => item.id === id)\n        );\n\n        this.props.setEditItemFilters({\n            ...this.props.selectedItems,\n            [dimensionId]: reorderedList,\n        });\n    };\n\n    saveFilter = id => {\n        const filterItems = this.props.selectedItems[id];\n\n        if (filterItems && filterItems.length) {\n            this.props.addItemFilter({\n                id,\n                value: [...filterItems],\n            });\n        } else {\n            this.props.removeItemFilter(id);\n        }\n\n        this.closeDialog();\n    };\n\n    render() {\n        const {\n            theme,\n            displayNameProperty,\n            dimension,\n            dimensions,\n            selectedDimensions,\n            selectedItems,\n        } = this.props;\n\n        return (\n            <Fragment>\n                <Button onClick={this.openPanel}>\n                    {i18n.t('Add filter')}\n                    <ArrowDropDownIcon />\n                </Button>\n                <Popover\n                    open={Boolean(this.state.anchorEl)}\n                    anchorEl={this.state.anchorEl}\n                    anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\n                    onClose={this.closePanel}\n                    style={{\n                        height: '100%',\n                        fontFamily: theme.typography.fontFamily,\n                    }}\n                >\n                    <DimensionsPanel\n                        style={{ width: '320px' }}\n                        dimensions={dimensions}\n                        onDimensionClick={this.selectDimension}\n                        selectedIds={selectedDimensions}\n                    />\n                </Popover>\n                {dimension ? (\n                    <FilterDialog\n                        displayNameProperty={displayNameProperty}\n                        dimension={dimension}\n                        selectedItems={selectedItems[dimension.id] || []}\n                        onSelect={this.onSelectItems}\n                        onDeselect={this.onDeselectItems}\n                        onReorder={this.onReorderItems}\n                        onClose={this.closeDialog}\n                        onConfirm={this.saveFilter}\n                    />\n                ) : null}\n            </Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    displayNameProperty: sGetSettingsDisplayNameProperty(state),\n    dimension: sGetActiveModalDimension(state),\n    dimensions: sGetDimensions(state),\n    selectedDimensions: sGetFiltersKeys(state),\n    selectedItems: sGetEditItemFiltersRoot(state),\n});\n\nFilterSelector.propTypes = {\n    addItemFilter: PropTypes.func,\n    clearActiveModalDimension: PropTypes.func,\n    dimension: PropTypes.object,\n    dimensions: PropTypes.array,\n    displayNameProperty: PropTypes.string,\n    removeEditItemFilter: PropTypes.func,\n    removeItemFilter: PropTypes.func,\n    selectedDimensions: PropTypes.array,\n    selectedItems: PropTypes.object,\n    setActiveModalDimension: PropTypes.func,\n    setEditItemFilters: PropTypes.func,\n    theme: PropTypes.object,\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        clearActiveModalDimension: acClearActiveModalDimension,\n        setActiveModalDimension: acSetActiveModalDimension,\n        addItemFilter: acAddItemFilter,\n        removeItemFilter: acRemoveItemFilter,\n        removeEditItemFilter: acRemoveEditItemFilter,\n        setEditItemFilters: acSetEditItemFilters,\n    }\n)(withTheme()(FilterSelector));\n","import React, { Component } from 'react';\nimport InfoOutlineIcon from '@material-ui/icons/InfoOutlined';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nclass Info extends Component {\n    show = false;\n\n    toggle() {\n        this.show = !this.show;\n        return this.show;\n    }\n\n    render() {\n        return (\n            <div onClick={() => this.props.onClick(this.toggle())}>\n                <InfoOutlineIcon style={{ fill: colors.grey600 }} />\n            </div>\n        );\n    }\n}\n\nInfo.propTypes = {\n    onClick: PropTypes.func,\n};\n\nexport default Info;\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport SharingDialog from '@dhis2/d2-ui-sharing-dialog';\nimport Star from '@material-ui/icons/Star';\nimport StarBorder from '@material-ui/icons/StarBorder';\n\nimport { orObject } from '../../modules/util';\nimport { tStarDashboard } from '../../actions/dashboards';\nimport { acSetSelectedShowDescription } from '../../actions/selected';\nimport FilterSelector from '../ItemFilter/FilterSelector';\nimport { Button } from '@dhis2/ui-core';\nimport Info from './Info';\nimport {\n    sGetSelectedId,\n    sGetSelectedShowDescription,\n} from '../../reducers/selected';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n} from '../../reducers/dashboards';\nimport { colors } from '@dhis2/ui-core';\n\nconst styles = {\n    actions: {\n        display: 'flex',\n        alignItems: 'center',\n        marginLeft: '20px',\n    },\n    starIcon: {\n        fill: colors.grey600,\n    },\n    textButton: {\n        minWidth: '30px',\n        top: '1px',\n    },\n    editLink: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        textDecoration: 'none',\n        marginRight: '4px',\n    },\n    titleBar: {\n        display: 'flex',\n        alignItems: 'flex-start',\n    },\n    titleBarIcon: {\n        marginLeft: 5,\n        position: 'relative',\n        top: 1,\n        cursor: 'pointer',\n    },\n};\n\nclass ViewTitleBar extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            sharingDialogIsOpen: false,\n        };\n    }\n\n    toggleSharingDialog = () =>\n        this.setState({ sharingDialogIsOpen: !this.state.sharingDialogIsOpen });\n\n    render() {\n        const {\n            id,\n            name,\n            description,\n            access,\n            style,\n            showDescription,\n            starred,\n            onStarClick,\n            onInfoClick,\n            classes,\n        } = this.props;\n\n        const titleStyle = Object.assign({}, style.title, {\n            cursor: 'default',\n            userSelect: 'text',\n            top: '7px',\n        });\n\n        const StarIcon = starred ? Star : StarBorder;\n\n        return (\n            <Fragment>\n                <div className={classes.titleBar}>\n                    <span style={titleStyle}>{name}</span>\n                    <div className={classes.actions}>\n                        <div\n                            className={classes.titleBarIcon}\n                            onClick={onStarClick}\n                        >\n                            <StarIcon className={classes.starIcon} />\n                        </div>\n                        <div className={classes.titleBarIcon}>\n                            <Info onClick={onInfoClick} />\n                        </div>\n                        <div style={{ marginLeft: '10px' }}>\n                            {access.update ? (\n                                <Link\n                                    className={classes.editLink}\n                                    to={`/${id}/edit`}\n                                >\n                                    <Button>{i18n.t('Edit')}</Button>\n                                </Link>\n                            ) : null}\n                            {access.manage ? (\n                                <span style={{ marginRight: '4px' }}>\n                                    <Button onClick={this.toggleSharingDialog}>\n                                        {i18n.t('Share')}\n                                    </Button>\n                                </span>\n                            ) : null}\n                            <span style={{ marginRight: '4px' }}>\n                                <FilterSelector />\n                            </span>\n                        </div>\n                    </div>\n                </div>\n                {showDescription ? (\n                    <div\n                        className=\"dashboard-description\"\n                        style={Object.assign(\n                            { paddingTop: '5px', paddingBottom: '5px' },\n                            style.description,\n                            !description ? { color: '#888' } : {}\n                        )}\n                    >\n                        {description || i18n.t('No description')}\n                    </div>\n                ) : null}\n                {id ? (\n                    <SharingDialog\n                        d2={this.context.d2}\n                        id={id}\n                        type=\"dashboard\"\n                        open={this.state.sharingDialogIsOpen}\n                        onRequestClose={this.toggleSharingDialog}\n                    />\n                ) : null}\n            </Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    const id = sGetSelectedId(state);\n    const dashboard = orObject(sGetDashboardById(state, id));\n\n    return {\n        id,\n        name: dashboard.displayName,\n        description: dashboard.displayDescription,\n        dashboardItems: sGetDashboardItems(state),\n        showDescription: sGetSelectedShowDescription(state),\n        starred: dashboard.starred,\n        access: orObject(dashboard.access),\n    };\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const { id, starred, showDescription } = stateProps;\n    const { dispatch } = dispatchProps;\n\n    return {\n        ...stateProps,\n        ...ownProps,\n        onStarClick: () => dispatch(tStarDashboard(id, !starred)),\n        onInfoClick: () =>\n            dispatch(acSetSelectedShowDescription(!showDescription)),\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    null,\n    mergeProps\n)(withStyles(styles)(ViewTitleBar));\n\nViewTitleBar.propTypes = {\n    access: PropTypes.object,\n    classes: PropTypes.object,\n    description: PropTypes.string,\n    id: PropTypes.string,\n    name: PropTypes.string,\n    showDescription: PropTypes.bool,\n    starred: PropTypes.bool,\n    style: PropTypes.object,\n    onInfoClick: PropTypes.func,\n    onStarClick: PropTypes.func,\n};\n\nViewTitleBar.defaultProps = {\n    name: '',\n    description: '',\n    starred: false,\n    showDescription: false,\n    onInfoClick: null,\n};\n\nViewTitleBar.contextTypes = {\n    d2: PropTypes.object,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { colors } from '@dhis2/ui-core';\nimport EditTitleBar from './EditTitleBar';\nimport ViewTitleBar from './ViewTitleBar';\n\nimport './TitleBar.css';\n\nconst style = {\n    title: {\n        position: 'relative',\n        fontSize: 21,\n        fontWeight: 500,\n        color: colors.black,\n        minWidth: 50,\n    },\n    description: {\n        fontSize: 14,\n        color: colors.grey800,\n    },\n};\n\nconst TitleBar = ({ edit }) => {\n    return (\n        <div\n            className=\"titlebar-wrapper\"\n            style={{\n                padding: '20px 15px 5px 10px',\n            }}\n        >\n            {edit ? (\n                <EditTitleBar style={style} />\n            ) : (\n                <ViewTitleBar style={style} />\n            )}\n        </div>\n    );\n};\n\nTitleBar.propTypes = {\n    edit: PropTypes.bool,\n};\n\nexport default TitleBar;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport i18n from '@dhis2/d2-i18n';\n\nimport * as pluginManager from './plugin';\nimport { getBaseUrl, orObject } from '../../../modules/util';\nimport { getGridItemDomId } from '../../ItemGrid/gridUtil';\n\nconst pluginCredentials = d2 => {\n    return {\n        baseUrl: getBaseUrl(d2),\n        auth: d2.Api.getApi().defaultHeaders.Authorization,\n    };\n};\n\nclass DefaultPlugin extends Component {\n    pluginCredentials = null;\n\n    constructor(props, context) {\n        super(props);\n\n        this.d2 = context.d2;\n    }\n\n    shouldPluginReload = prevProps => {\n        // TODO - fix this hack, to handle bug with multiple\n        // rerendering while switching between dashboards.\n        //\n        // To determine if the rendering is happening because of a\n        // dashboard switch, check if the item reference has changed.\n        const reloadAllowed = this.props.item === prevProps.item;\n\n        const filtersChanged = prevProps.itemFilters !== this.props.itemFilters;\n        const vis = orObject(this.props.visualization);\n        const prevVis = orObject(prevProps.visualization);\n        const visChanged =\n            vis.id !== prevVis.id || vis.activeType !== prevVis.activeType;\n\n        return reloadAllowed && (visChanged || filtersChanged);\n    };\n\n    reloadPlugin = prevProps => {\n        if (\n            pluginManager.pluginIsAvailable(\n                this.props.item,\n                this.props.visualization\n            ) &&\n            this.shouldPluginReload(prevProps)\n        ) {\n            const prevVis = orObject(prevProps.visualization);\n            const currentVis = this.props.visualization;\n\n            const useActiveType =\n                currentVis.activeType !== prevVis.activeType ||\n                currentVis.activeType !== this.props.item.type;\n\n            if (\n                useActiveType ||\n                this.props.itemFilters !== prevProps.itemFilters\n            ) {\n                pluginManager.unmount(\n                    this.props.item,\n                    prevVis.activeType || this.props.item.type\n                );\n\n                pluginManager.load(this.props.item, this.props.visualization, {\n                    credentials: this.pluginCredentials,\n                    activeType: useActiveType ? currentVis.activeType : null,\n                });\n            }\n        }\n    };\n\n    componentDidMount() {\n        this.pluginCredentials = pluginCredentials(this.d2);\n\n        if (\n            pluginManager.pluginIsAvailable(\n                this.props.item,\n                this.props.visualization\n            )\n        ) {\n            pluginManager.load(this.props.item, this.props.visualization, {\n                credentials: this.pluginCredentials,\n                activeType: !this.props.editMode ? this.getActiveType() : null,\n                options: this.props.options,\n            });\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        this.reloadPlugin(prevProps);\n    }\n\n    getActiveType = () =>\n        this.props.visualization.activeType || this.props.item.type;\n\n    render() {\n        const { classes, item, visualization, style } = this.props;\n        const pluginIsAvailable = pluginManager.pluginIsAvailable(\n            item,\n            visualization\n        );\n\n        return pluginIsAvailable ? (\n            <div id={getGridItemDomId(item.id)} style={style} />\n        ) : (\n            <div className={classes.textDiv}>\n                {i18n.t('Unable to load the plugin for this item')}\n            </div>\n        );\n    }\n}\n\nDefaultPlugin.contextTypes = {\n    d2: PropTypes.object,\n};\n\nDefaultPlugin.propTypes = {\n    classes: PropTypes.object,\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    itemFilters: PropTypes.object,\n    options: PropTypes.object,\n    style: PropTypes.object,\n    visualization: PropTypes.object,\n};\n\nDefaultPlugin.defaultProps = {\n    style: {},\n    item: {},\n    itemFilters: {},\n    options: {},\n    visualization: {},\n};\n\nexport default DefaultPlugin;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\n\nexport const ThreeDots = () => (\n    <svg\n        height=\"18\"\n        viewBox=\"0 0 18 18\"\n        width=\"18\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n    >\n        <path\n            d=\"m4 7.5c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm10 0c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm-5 0c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5z\"\n            fill=\"#6e7a8a\"\n        />\n    </svg>\n);\n\nexport const SpeechBubble = () => (\n    <svg\n        height=\"20\"\n        viewBox=\"0 0 20 20\"\n        width=\"20\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        style={{ margin: '3px 2px 0 2px' }} // Temporary fix for the misaligned icon, should be removed once the icon is replaced\n    >\n        <path\n            d=\"m20 2h-16c-1.1 0-1.99.9-1.99 2l-.01 18 4-4h14c1.1 0 2-.9 2-2v-12c0-1.1-.9-2-2-2zm-2 12h-12v-2h12zm0-3h-12v-2h12zm0-3h-12v-2h12z\"\n            fill=\"#6e7a8a\"\n            fillRule=\"evenodd\"\n            transform=\"translate(-2 -2)\"\n        />\n    </svg>\n);\n\nexport const Warning = () => (\n    <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        height=\"24\"\n        viewBox=\"0 0 24 24\"\n        width=\"24\"\n        fill={colors.grey600}\n    >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z\" />\n    </svg>\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Warning } from './assets/icons';\n\nimport classes from './styles/FatalErrorBoundary.module.css';\n\nclass FatalErrorBoundary extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            errorFound: false,\n        };\n    }\n    componentDidCatch(error, info) {\n        this.setState({\n            errorFound: true,\n        });\n        console.log('error: ', error);\n        console.log('info: ', info);\n    }\n    render() {\n        if (this.state.errorFound) {\n            return (\n                <p className={classes.container}>\n                    <span className={classes.icon}>\n                        <Warning />\n                    </span>\n                    <span className={classes.message}>\n                        {i18n.t(\n                            'There was a problem loading this dashboard item'\n                        )}\n                    </span>\n                </p>\n            );\n        }\n        return this.props.children;\n    }\n}\n\nFatalErrorBoundary.propTypes = {\n    children: PropTypes.node,\n};\n\nexport default FatalErrorBoundary;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { colors } from '@dhis2/ui-core';\n\nimport classes from './styles/DeleteItemButton.module.css';\n\nconst DeleteItemButton = ({ onClick }) => (\n    <button\n        type=\"button\"\n        className={classes.deleteItemButton}\n        onClick={onClick}\n        title={i18n.t(`Delete item`)}\n    >\n        <DeleteIcon style={{ fill: colors.red500 }} />\n    </button>\n);\n\nDeleteItemButton.propTypes = {\n    onClick: PropTypes.func,\n};\n\nexport default DeleteItemButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { sGetIsEditing } from '../../reducers/editDashboard';\nimport { acRemoveDashboardItem } from '../../actions/editDashboard';\nimport DeleteItemButton from './DeleteItemButton';\n\nimport classes from './styles/ItemHeader.module.css';\n\n// This is the margin-top + margin-bottom defined in the css file\nexport const HEADER_MARGIN_HEIGHT = 12;\n\nconst ItemHeader = props => {\n    const {\n        title,\n        editMode,\n        actionButtons,\n        itemId,\n        acRemoveDashboardItem,\n        forwardedRef,\n    } = props;\n\n    const handleDeleteItem = () => acRemoveDashboardItem(itemId);\n\n    return (\n        <div className={classes.itemHeaderWrap} ref={forwardedRef}>\n            <p className={classes.itemTitle}>{title}</p>\n            {editMode ? (\n                <div className={classes.itemActionsWrap}>\n                    <DeleteItemButton onClick={handleDeleteItem} />\n                </div>\n            ) : (\n                actionButtons && (\n                    <div className={classes.itemActionsWrap}>\n                        {actionButtons}\n                    </div>\n                )\n            )}\n        </div>\n    );\n};\n\nItemHeader.propTypes = {\n    acRemoveDashboardItem: PropTypes.func,\n    actionButtons: PropTypes.node,\n    editMode: PropTypes.bool,\n    forwardedRef: PropTypes.object,\n    itemId: PropTypes.string,\n    title: PropTypes.string,\n};\n\nItemHeader.defaultProps = {\n    forwardedRef: {},\n};\n\nconst mapStateToProps = state => ({\n    editMode: sGetIsEditing(state),\n});\n\nconst mapDispatchToProps = {\n    acRemoveDashboardItem,\n};\n\nconst ConnectedItemHeader = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ItemHeader);\n\n// TODO this is a false positive that is fixed in eslint-plugin-react v7.15\n// github.com/yannickcr/eslint-plugin-react/blob/master/CHANGELOG.md\n/* eslint-disable react/display-name */\nexport default React.forwardRef((props, ref) => (\n    <ConnectedItemHeader {...props} forwardedRef={ref} />\n));\n/* eslint-enable react/display-name */\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n    isSingleValue,\n    isYearOverYear,\n    VIS_TYPE_GAUGE,\n    VIS_TYPE_PIE,\n} from '@dhis2/analytics';\nimport { Button, Menu, MenuItem, Divider, colors } from '@dhis2/ui-core';\nimport i18n from '@dhis2/d2-i18n';\nimport Popover from '@material-ui/core/Popover';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\nimport LaunchIcon from '@material-ui/icons/Launch';\n\nimport { ThreeDots, SpeechBubble } from './assets/icons';\nimport { pluginIsAvailable, getLink } from './plugin';\nimport {\n    CHART,\n    MAP,\n    REPORT_TABLE,\n    EVENT_CHART,\n    EVENT_REPORT,\n    isTrackerDomainType,\n    hasMapView,\n    getAppName,\n} from '../../../modules/itemTypes';\n\nconst iconFill = { fill: colors.grey600 };\n\nconst ItemHeaderButtons = props => {\n    const [anchorEl, setAnchorEl] = useState(null);\n\n    const { item, visualization, onSelectActiveType, d2, activeType } = props;\n\n    const isTrackerType = isTrackerDomainType(item.type);\n\n    const onViewTable = () => {\n        handleClose();\n        onSelectActiveType(isTrackerType ? EVENT_REPORT : REPORT_TABLE);\n    };\n\n    const onViewChart = () => {\n        handleClose();\n        onSelectActiveType(isTrackerType ? EVENT_CHART : CHART);\n    };\n\n    const onViewMap = () => {\n        handleClose();\n        onSelectActiveType(MAP);\n    };\n\n    const itemHasMapView = () => hasMapView(item.type);\n\n    const handleMenuClick = (_, event) => setAnchorEl(event.currentTarget);\n\n    const handleInterpretationClick = () => {\n        props.onToggleFooter();\n        if (anchorEl !== null) {\n            handleClose();\n        }\n    };\n\n    const handleClose = () => setAnchorEl(null);\n\n    const type = visualization.type || item.type;\n    const canViewAs =\n        !isSingleValue(type) &&\n        !isYearOverYear(type) &&\n        type !== VIS_TYPE_GAUGE &&\n        type !== VIS_TYPE_PIE;\n\n    const interpretationMenuLabel = props.activeFooter\n        ? i18n.t(`Hide interpretations and details`)\n        : i18n.t(`Show interpretations and details`);\n\n    const ViewAsMenuItems = () => (\n        <>\n            {activeType !== CHART && activeType !== EVENT_CHART && (\n                <MenuItem\n                    dense\n                    label={i18n.t('View as Chart')}\n                    onClick={onViewChart}\n                    icon={<ChartIcon style={iconFill} />}\n                />\n            )}\n            {activeType !== REPORT_TABLE && activeType !== EVENT_REPORT && (\n                <MenuItem\n                    dense\n                    label={i18n.t('View as Table')}\n                    onClick={onViewTable}\n                    icon={<TableIcon style={iconFill} />}\n                />\n            )}\n            {itemHasMapView() && activeType !== MAP && (\n                <MenuItem\n                    dense\n                    label={i18n.t('View as Map')}\n                    onClick={onViewMap}\n                    icon={<MapIcon style={iconFill} />}\n                />\n            )}\n        </>\n    );\n\n    return pluginIsAvailable(item, visualization) ? (\n        <>\n            <Button small secondary onClick={handleMenuClick}>\n                <ThreeDots />\n            </Button>\n            {anchorEl && (\n                <Popover\n                    open={Boolean(anchorEl)}\n                    onClose={handleClose}\n                    anchorEl={anchorEl}\n                >\n                    <Menu>\n                        {canViewAs && (\n                            <>\n                                <ViewAsMenuItems />\n                                <Divider />\n                            </>\n                        )}\n                        <MenuItem\n                            dense\n                            icon={<LaunchIcon style={{ fill: '#6e7a8a' }} />}\n                            label={i18n.t('Open in {{appName}} app', {\n                                appName: getAppName(item.type),\n                            })}\n                            href={getLink(item, d2)}\n                            target=\"_blank\"\n                        />\n                        <MenuItem\n                            dense\n                            icon={<SpeechBubble />}\n                            label={interpretationMenuLabel}\n                            onClick={handleInterpretationClick}\n                        />\n                    </Menu>\n                </Popover>\n            )}\n        </>\n    ) : null;\n};\n\nItemHeaderButtons.propTypes = {\n    activeFooter: PropTypes.bool,\n    activeType: PropTypes.string,\n    d2: PropTypes.object,\n    item: PropTypes.object,\n    visualization: PropTypes.object,\n    onSelectActiveType: PropTypes.func,\n    onToggleFooter: PropTypes.func,\n};\n\nexport default ItemHeaderButtons;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { colors } from '@dhis2/ui-core';\nimport { getId } from './plugin';\nimport InterpretationsComponent from '@dhis2/d2-ui-interpretations';\n\nconst style = {\n    scrollContainer: {\n        overflowY: 'auto',\n        height: '340px',\n    },\n    line: {\n        margin: '-1px 0px 0px',\n        height: '1px',\n        border: 'none',\n        backgroundColor: colors.grey100,\n    },\n};\n\nclass ItemFooter extends Component {\n    render() {\n        const objectId = getId(this.props.item);\n\n        return (\n            <div className=\"dashboard-item-footer\">\n                <hr style={style.line} />\n                <div style={style.scrollContainer}>\n                    <InterpretationsComponent\n                        d2={this.context.d2}\n                        item={this.props.item}\n                        type={this.props.item.type.toLowerCase()}\n                        id={objectId}\n                        appName=\"dashboard\"\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nItemFooter.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nItemFooter.propTypes = {\n    item: PropTypes.object.isRequired,\n};\n\nexport default ItemFooter;\n","// Note that this ignores discrepancies in 'this', so shouldn't be used with bound functions\n// This is useful instead of lodash/memoize when we only need to memoize a single value\n// Inspiration: https://github.com/alexreardon/memoize-one\n\nconst memoizeOne = fn => {\n    let lastArgs = undefined;\n    let lastValue = undefined;\n\n    return (...args) => {\n        if (\n            lastArgs &&\n            args.length === lastArgs.length &&\n            args.every((arg, i) => arg === lastArgs[i])\n        ) {\n            return lastValue;\n        }\n        lastArgs = args;\n        lastValue = fn(...args);\n        return lastValue;\n    };\n};\n\nexport default memoizeOne;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst styles = theme => ({\n    progress: {\n        margin: theme.spacing.unit * 2,\n        maxWidth: 200,\n        textAlign: 'center',\n        alignSelf: 'center',\n    },\n    outer: {\n        display: 'flex',\n        justifyContent: 'center',\n        height: '100%',\n    },\n});\n\nfunction CircularIndeterminate(props) {\n    const { classes } = props;\n    return (\n        <div className={classes.outer}>\n            <CircularProgress className={classes.progress} />\n        </div>\n    );\n}\n\nCircularIndeterminate.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(CircularIndeterminate);\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport uniqueId from 'lodash/uniqueId';\nimport VisualizationPlugin from '@dhis2/data-visualizer-plugin';\nimport i18n from '@dhis2/d2-i18n';\n\nimport DefaultPlugin from './DefaultPlugin';\nimport FatalErrorBoundary from './FatalErrorBoundary';\nimport ItemHeader, { HEADER_MARGIN_HEIGHT } from '../ItemHeader';\nimport ItemHeaderButtons from './ItemHeaderButtons';\nimport ItemFooter from './ItemFooter';\nimport * as pluginManager from './plugin';\nimport { sGetVisualization } from '../../../reducers/visualizations';\nimport { sGetItemFiltersRoot } from '../../../reducers/itemFilters';\nimport {\n    acAddVisualization,\n    acSetActiveVisualizationType,\n} from '../../../actions/visualizations';\nimport {\n    VISUALIZATION,\n    MAP,\n    CHART,\n    REPORT_TABLE,\n} from '../../../modules/itemTypes';\nimport memoizeOne from '../../../modules/memoizeOne';\n\nimport { colors } from '@dhis2/ui-core';\nimport { getVisualizationConfig } from './plugin';\nimport LoadingMask from './LoadingMask';\nimport { ITEM_CONTENT_PADDING_BOTTOM } from '../../ItemGrid/ItemGrid';\n\nconst styles = {\n    icon: {\n        width: 16,\n        height: 16,\n        marginLeft: 3,\n        cursor: 'pointer',\n        fill: colors.grey600,\n    },\n    title: {\n        overflow: 'hidden',\n        maxWidth: '85%',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n    },\n    textDiv: {\n        fontSize: '14px',\n        fontStretch: 'normal',\n        padding: '10px',\n        lineHeight: '20px',\n    },\n    loadingCover: {\n        position: 'absolute',\n        height: '100%',\n        width: '100%',\n        left: 0,\n        top: 0,\n        zIndex: 100,\n        background: '#ffffffab',\n    },\n};\n\nexport class Item extends Component {\n    state = {\n        showFooter: false,\n        configLoaded: false,\n        pluginIsLoaded: false,\n    };\n\n    constructor(props, context) {\n        super(props);\n\n        this.d2 = context.d2;\n\n        this.contentRef = React.createRef();\n        this.headerRef = React.createRef();\n\n        this.memoizedApplyFilters = memoizeOne(this.applyFilters);\n\n        this.memoizedGetVisualizationConfig = memoizeOne(\n            getVisualizationConfig\n        );\n\n        this.memoizedGetContentStyle = memoizeOne(this.getContentStyle);\n    }\n\n    async componentDidMount() {\n        this.props.onVisualizationLoaded(\n            // TODO do not call fetch on the pluginManager, do it here as the manager will eventually be removed...\n            await pluginManager.fetch(this.props.item)\n        );\n\n        this.setState({\n            configLoaded: true,\n        });\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (\n            prevState.pluginIsLoaded &&\n            (prevProps.visualization !== this.props.visualization ||\n                prevProps.itemFilters !== this.props.itemFilters)\n        ) {\n            this.setState({\n                pluginIsLoaded: false,\n            });\n        }\n    }\n\n    applyFilters = (visualization, filters) => {\n        if (!Object.keys(filters).length) {\n            return visualization;\n        }\n\n        // deep clone objects in filters to avoid changing the visualization in the Redux store\n        const visRows = visualization.rows.map(obj => ({ ...obj }));\n        const visColumns = visualization.columns.map(obj => ({ ...obj }));\n        const visFilters = visualization.filters.map(obj => ({ ...obj }));\n\n        Object.keys(filters).forEach(dimensionId => {\n            if (filters[dimensionId]) {\n                let dimensionFound = false;\n\n                [visRows, visColumns, visFilters].forEach(dimensionObjects =>\n                    dimensionObjects\n                        .filter(obj => obj.dimension === dimensionId)\n                        .forEach(obj => {\n                            dimensionFound = true;\n                            obj.items = filters[dimensionId];\n                        })\n                );\n\n                // add dimension to filters if not already present elsewhere\n                if (!dimensionFound) {\n                    visFilters.push({\n                        dimension: dimensionId,\n                        items: filters[dimensionId],\n                    });\n                }\n            }\n        });\n\n        return {\n            ...visualization,\n            rows: visRows,\n            columns: visColumns,\n            filters: visFilters,\n        };\n    };\n\n    getUniqueKey = memoizeOne(() => uniqueId());\n\n    pluginCredentials = null;\n\n    getPluginComponent = () => {\n        const activeType = this.getActiveType();\n        const visualization = this.memoizedGetVisualizationConfig(\n            this.props.visualization,\n            this.props.item.type,\n            activeType\n        );\n\n        if (!visualization) {\n            return (\n                <div className={this.props.classes.textDiv}>\n                    {i18n.t('No data to display')}\n                </div>\n            );\n        }\n\n        const calculatedHeight =\n            this.props.item.originalHeight -\n            this.headerRef.current.clientHeight -\n            HEADER_MARGIN_HEIGHT -\n            ITEM_CONTENT_PADDING_BOTTOM;\n\n        const props = {\n            ...this.props,\n            visualization,\n            style: this.memoizedGetContentStyle(\n                calculatedHeight,\n                this.contentRef ? this.contentRef.offsetHeight : null,\n                this.props.editMode\n            ),\n        };\n\n        switch (activeType) {\n            case VISUALIZATION:\n            case CHART:\n            case REPORT_TABLE: {\n                return (\n                    <Fragment>\n                        {!this.state.pluginIsLoaded ? (\n                            <div style={styles.loadingCover}>\n                                <LoadingMask />\n                            </div>\n                        ) : null}\n                        <VisualizationPlugin\n                            d2={this.d2}\n                            visualization={this.memoizedApplyFilters(\n                                visualization,\n                                props.itemFilters\n                            )}\n                            onLoadingComplete={this.onLoadingComplete}\n                            forDashboard={true}\n                            style={props.style}\n                        />\n                    </Fragment>\n                );\n            }\n            case MAP: {\n                if (props.item.type === MAP) {\n                    // apply filters only to thematic and event layers\n                    // for maps AO\n                    const mapViews = props.visualization.mapViews.map(obj => {\n                        if (\n                            obj.layer.includes('thematic') ||\n                            obj.layer.includes('event')\n                        ) {\n                            return this.memoizedApplyFilters(\n                                obj,\n                                props.itemFilters\n                            );\n                        }\n\n                        return obj;\n                    });\n\n                    props.visualization = {\n                        ...props.visualization,\n                        mapViews,\n                    };\n                } else {\n                    // this is the case of a non map AO passed to the maps plugin\n                    // due to a visualization type switch in dashboard item\n                    // maps plugin takes care of converting the AO to a suitable format\n                    props.visualization = this.memoizedApplyFilters(\n                        props.visualization,\n                        props.itemFilters\n                    );\n                }\n\n                props.options = {\n                    ...props.options,\n                    hideTitle: true,\n                };\n\n                return <DefaultPlugin {...props} />;\n            }\n            default: {\n                props.visualization = this.memoizedApplyFilters(\n                    props.visualization,\n                    props.itemFilters\n                );\n\n                return <DefaultPlugin {...props} />;\n            }\n        }\n    };\n\n    onLoadingComplete = () => {\n        this.setState({\n            pluginIsLoaded: true,\n        });\n    };\n\n    onToggleFooter = () => {\n        this.setState(\n            { showFooter: !this.state.showFooter },\n            this.props.onToggleItemExpanded(this.props.item.id)\n        );\n    };\n\n    onSelectActiveType = type => {\n        if (type === this.getActiveType()) {\n            return;\n        }\n\n        pluginManager.unmount(this.props.item, this.getActiveType());\n\n        this.props.onSelectActiveType(this.props.visualization.id, type);\n    };\n\n    getActiveType = () =>\n        this.props.visualization.activeType || this.props.item.type;\n\n    pluginIsAvailable = () =>\n        pluginManager.pluginIsAvailable(\n            this.props.item,\n            this.props.visualization\n        );\n\n    getContentStyle = (calculatedHeight, measuredHeight, editMode) => {\n        const height = editMode\n            ? measuredHeight || calculatedHeight\n            : calculatedHeight;\n\n        return { height };\n    };\n\n    render() {\n        const { item, editMode, itemFilters } = this.props;\n        const { showFooter } = this.state;\n\n        const actionButtons = (\n            <ItemHeaderButtons\n                item={item}\n                visualization={this.props.visualization}\n                onSelectActiveType={this.onSelectActiveType}\n                onToggleFooter={this.onToggleFooter}\n                d2={this.d2}\n                activeType={this.getActiveType()}\n                activeFooter={this.state.showFooter}\n            />\n        );\n\n        return (\n            <>\n                <ItemHeader\n                    title={pluginManager.getName(item)}\n                    itemId={item.id}\n                    actionButtons={actionButtons}\n                    ref={this.headerRef}\n                />\n                <FatalErrorBoundary>\n                    <div\n                        key={this.getUniqueKey(itemFilters)}\n                        className=\"dashboard-item-content\"\n                        ref={ref => (this.contentRef = ref)}\n                    >\n                        {this.state.configLoaded && this.getPluginComponent()}\n                    </div>\n                </FatalErrorBoundary>\n                {!editMode && showFooter ? <ItemFooter item={item} /> : null}\n            </>\n        );\n    }\n}\n\nItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nItem.propTypes = {\n    classes: PropTypes.object,\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    itemFilters: PropTypes.object,\n    visualization: PropTypes.object,\n    onSelectActiveType: PropTypes.func,\n    onToggleItemExpanded: PropTypes.func,\n    onVisualizationLoaded: PropTypes.func,\n};\n\nItem.defaultProps = {\n    item: {},\n    editMode: false,\n    onToggleItemExpanded: Function.prototype,\n    itemFilters: {},\n    visualization: {},\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n    itemFilters: sGetItemFiltersRoot(state),\n    visualization: sGetVisualization(\n        state,\n        pluginManager.extractFavorite(ownProps.item).id\n    ),\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onVisualizationLoaded: visualization =>\n        dispatch(acAddVisualization(visualization)),\n    onSelectActiveType: (id, type, activeType) =>\n        dispatch(acSetActiveVisualizationType(id, type, activeType)),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(Item));\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\n\nconst style = {\n    backgroundColor: colors.grey200,\n    border: 'none',\n    height: '1px',\n    margin: '0px 0px 5px 0px',\n};\n\nconst Line = () => <hr style={style} />;\n\nexport default Line;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\n\nimport { sGetMessagesRoot } from '../../../reducers/messages';\nimport { formatDate } from '../../../modules/util';\nimport { colors } from '@dhis2/ui-core';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nimport './MessagesItem.css';\n\nconst PRIVATE = 'PRIVATE';\n\nconst messageTypes = {\n    [PRIVATE]: 'Private',\n    VALIDATION_RESULT: 'Validation',\n    TICKET: 'Ticket',\n    SYSTEM: 'System',\n};\n\nconst style = {\n    list: {\n        listStyleType: 'none',\n        paddingLeft: '0px',\n    },\n    seeAll: {\n        textAlign: 'center',\n        fontSize: '13px',\n        marginBottom: '5px',\n    },\n    sender: {\n        fontSize: '13px',\n        lineHeight: '15px',\n        margin: 0,\n        color: colors.grey800,\n    },\n    snippet: {\n        color: colors.grey800,\n        fontSize: '13px',\n        lineHeight: '15px',\n        maxHeight: '30px',\n        overflow: 'hidden',\n    },\n};\n\nclass MessagesItem extends Component {\n    state = {\n        uiLocale: '',\n    };\n\n    async componentDidMount() {\n        const uiLocale = await this.context.d2.currentUser.userSettings.get(\n            'keyUiLocale'\n        );\n\n        this.setState({ uiLocale });\n    }\n\n    getMessageHref = msg => {\n        const msgIdentifier = msg ? `#/${msg.messageType}/${msg.id}` : '';\n        return `${this.context.baseUrl}/dhis-web-messaging/${msgIdentifier}`;\n    };\n\n    getMessageSender = msg => {\n        const latestMsg = msg.messages.slice(-1)[0];\n        return latestMsg.sender ? latestMsg.sender.displayName : '';\n    };\n\n    getMessageItems = () => {\n        const editClass = !this.props.editMode ? 'view' : null;\n\n        return this.props.messages.map(msg => {\n            const redirectToMsg = () => {\n                if (!this.props.editMode) {\n                    document.location.href = this.getMessageHref(msg);\n                }\n            };\n\n            const sender =\n                msg.messageType === PRIVATE\n                    ? this.getMessageSender(msg)\n                    : messageTypes[msg.messageType];\n\n            const readClass = !msg.read ? 'unread' : null;\n            const latestMsg = msg.messages.slice(-1)[0];\n            const msgDate = latestMsg.lastUpdated;\n\n            return (\n                <li\n                    className={`message-item ${editClass}`}\n                    key={msg.id}\n                    onClick={redirectToMsg}\n                >\n                    <p className={`message-title ${readClass}`}>\n                        {msg.displayName} ({msg.messageCount})\n                    </p>\n                    <p style={style.sender}>\n                        {sender} - {formatDate(msgDate, this.state.uiLocale)}\n                    </p>\n                    <p style={style.snippet}>{latestMsg.text}</p>\n                </li>\n            );\n        });\n    };\n\n    render() {\n        return (\n            <Fragment>\n                <ItemHeader\n                    title={i18n.t('Messages')}\n                    itemId={this.props.item.id}\n                />\n                <Line />\n                {this.props.messages.length > 0 && (\n                    <div className=\"dashboard-item-content\">\n                        <ul style={style.list}>{this.getMessageItems()}</ul>\n                        <div style={style.seeAll}>\n                            <a href={this.getMessageHref()}>\n                                {i18n.t('See all messages')}\n                            </a>\n                        </div>\n                    </div>\n                )}\n            </Fragment>\n        );\n    }\n}\n\nMessagesItem.propTypes = {\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    messages: PropTypes.array,\n};\n\nMessagesItem.contextTypes = {\n    d2: PropTypes.object,\n    baseUrl: PropTypes.string,\n};\n\nconst mapStateToProps = state => {\n    return {\n        messages: Object.values(sGetMessagesRoot(state)),\n    };\n};\n\nconst MessagesContainer = connect(\n    mapStateToProps,\n    null\n)(MessagesItem);\n\nexport default MessagesContainer;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ItemHeader from '../ItemHeader';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nconst NotSupportedItem = props => (\n    <Fragment>\n        <ItemHeader\n            title={i18n.t('Item type \"{{type}}\" not supported', {\n                type: props.item.type,\n            })}\n            itemId={props.item.id}\n        />\n        <div\n            style={{\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center',\n                height: '90%',\n            }}\n        >\n            <NotInterestedIcon\n                style={{ width: 100, height: 100, align: 'center' }}\n                color=\"disabled\"\n            />\n        </div>\n    </Fragment>\n);\n\nNotSupportedItem.propTypes = {\n    item: PropTypes.object,\n};\n\nexport default NotSupportedItem;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nconst DescriptionIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n        fill={colors.grey500}\n    >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M14 2H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6zm2 16H8v-2h8v2zm0-4H8v-2h8v2zm-3-5V3.5L18.5 9H13z\" />\n    </svg>\n);\n\nDescriptionIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default DescriptionIcon;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nconst DeleteIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"18\"\n        height=\"18\"\n        viewBox=\"0 0 24 24\"\n        fill={colors.red500}\n    >\n        <path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>\n);\n\nDeleteIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default DeleteIcon;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { colors } from '@dhis2/ui-core';\nimport DescriptionIcon from '../../../icons/Description';\n\nimport DeleteIcon from '../../../icons/Delete';\nimport Line from '../../../widgets/Line';\nimport { itemTypeMap, getItemUrl } from '../../../modules/itemTypes';\nimport { orArray } from '../../../modules/util';\nimport { tRemoveListItemContent } from './actions';\nimport ItemHeader from '../ItemHeader';\nimport classes from './Item.module.css';\n\nconst getItemTitle = item => itemTypeMap[item.type].pluralTitle;\n\nconst getContentItems = item =>\n    orArray(item[itemTypeMap[item.type].propName]).filter(\n        (item, index, array) =>\n            array.findIndex(el => el.id === item.id) === index\n    );\n\nconst ListItem = (props, context) => {\n    const { item, editMode, tRemoveListItemContent } = props;\n    const contentItems = getContentItems(item);\n\n    const getLink = contentItem => {\n        const deleteButton = (\n            <button\n                className={classes.deletebutton}\n                onClick={() => tRemoveListItemContent(item, contentItem)}\n            >\n                <DeleteIcon className={classes.deleteicon} />\n            </button>\n        );\n\n        return (\n            <Fragment>\n                <a\n                    className={classes.link}\n                    style={{ color: colors.grey900 }}\n                    href={getItemUrl(item.type, contentItem, context.d2)}\n                >\n                    {contentItem.name}\n                </a>\n                {editMode ? deleteButton : null}\n            </Fragment>\n        );\n    };\n\n    return (\n        <Fragment>\n            <ItemHeader title={getItemTitle(item)} itemId={item.id} />\n            <Line />\n            <div className=\"dashboard-item-content\">\n                <ul className={classes.list}>\n                    {contentItems.map(contentItem => (\n                        <li className={classes.item} key={contentItem.id}>\n                            <DescriptionIcon className={classes.itemicon} />\n                            {getLink(contentItem)}\n                        </li>\n                    ))}\n                </ul>\n            </div>\n        </Fragment>\n    );\n};\n\nListItem.propTypes = {\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    tRemoveListItemContent: PropTypes.func,\n};\n\nListItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nexport default connect(\n    null,\n    {\n        tRemoveListItemContent,\n    }\n)(ListItem);\n","import {\n    acUpdateDashboardItem,\n    acRemoveDashboardItem,\n} from '../../../actions/editDashboard';\nimport { itemTypeMap } from '../../../modules/itemTypes';\n\nexport const tRemoveListItemContent = (dashboardItem, content) => dispatch => {\n    const listItemType = itemTypeMap[dashboardItem.type].propName;\n\n    const newContent = dashboardItem[listItemType].filter(\n        item => item.id !== content.id\n    );\n\n    if (newContent.length) {\n        dashboardItem[listItemType] = newContent;\n        dispatch(acUpdateDashboardItem(dashboardItem));\n    } else {\n        dispatch(acRemoveDashboardItem(dashboardItem));\n    }\n};\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\n\nimport Input from '@material-ui/core/Input';\nimport {\n    Parser as RichTextParser,\n    Editor as RichTextEditor,\n} from '@dhis2/d2-ui-rich-text';\n\nimport { acUpdateDashboardItem } from '../../../actions/editDashboard';\nimport { sGetEditDashboardItems } from '../../../reducers/editDashboard';\nimport { sGetDashboardItems } from '../../../reducers/dashboards';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nconst style = {\n    textDiv: {\n        padding: '10px',\n        whiteSpace: 'pre-line',\n        lineHeight: '20px',\n    },\n    textField: {\n        fontSize: '14px',\n        fontStretch: 'normal',\n        width: '90%',\n        margin: '0 auto',\n        display: 'block',\n        lineHeight: '24px',\n    },\n    container: {\n        marginBottom: '20px',\n        marginTop: '20px',\n    },\n};\n\nconst TextItem = props => {\n    const { item, editMode, text, acUpdateDashboardItem } = props;\n\n    const onChangeText = event => {\n        const updatedItem = {\n            ...item,\n            text: event.target.value,\n        };\n\n        acUpdateDashboardItem(updatedItem);\n    };\n\n    const viewItem = () => {\n        const textDivStyle = Object.assign({}, style.textField, style.textDiv);\n        return (\n            <div className=\"dashboard-item-content\" style={style.container}>\n                <RichTextParser style={textDivStyle}>{text}</RichTextParser>\n            </div>\n        );\n    };\n\n    const editItem = () => {\n        return (\n            <Fragment>\n                <ItemHeader title={i18n.t('Text item')} itemId={item.id} />\n                <Line />\n                <div className=\"dashboard-item-content\">\n                    <RichTextEditor onEdit={onChangeText}>\n                        <Input\n                            value={text}\n                            multiline\n                            fullWidth\n                            style={style.textField}\n                            placeholder={i18n.t('Add text here')}\n                            onChange={onChangeText}\n                        />\n                    </RichTextEditor>\n                </div>\n            </Fragment>\n        );\n    };\n\n    return <Fragment>{editMode ? editItem() : viewItem()}</Fragment>;\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    const items = ownProps.editMode\n        ? sGetEditDashboardItems(state)\n        : sGetDashboardItems(state);\n\n    const item = items.find(item => item.id === ownProps.item.id);\n\n    return {\n        text: item ? item.text : '',\n    };\n};\n\nTextItem.propTypes = {\n    acUpdateDashboardItem: PropTypes.func,\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    text: PropTypes.string,\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        acUpdateDashboardItem,\n    }\n)(TextItem);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nimport { FILTER_ORG_UNIT } from '../../../actions/itemFilters';\nimport { sGetItemFiltersRoot } from '../../../reducers/itemFilters';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nconst getIframeSrc = (appDetails, item, itemFilters) => {\n    let iframeSrc = `${appDetails.launchUrl}?dashboardItemId=${item.id}`;\n\n    if (\n        itemFilters &&\n        itemFilters[FILTER_ORG_UNIT] &&\n        itemFilters[FILTER_ORG_UNIT].length\n    ) {\n        const ouIds = itemFilters[FILTER_ORG_UNIT].map(\n            ouFilter => ouFilter.path.split('/').slice(-1)[0]\n        );\n\n        iframeSrc += `&userOrgUnit=${ouIds.join(',')}`;\n    }\n\n    return iframeSrc;\n};\n\nconst AppItem = ({ item, itemFilters }, context) => {\n    let appDetails;\n\n    const appKey = item.appKey;\n\n    if (appKey) {\n        appDetails = context.d2.system.installedApps.find(\n            app => app.key === appKey\n        );\n    }\n\n    return appDetails && appDetails.name && appDetails.launchUrl ? (\n        <Fragment>\n            <ItemHeader title={appDetails.name} itemId={item.id} />\n            <Line />\n            <iframe\n                title={appDetails.name}\n                src={getIframeSrc(appDetails, item, itemFilters)}\n                className=\"dashboard-item-content\"\n                style={{ border: 'none' }}\n            />\n        </Fragment>\n    ) : (\n        <Fragment>\n            <ItemHeader title={`${appKey} app not found`} />\n            <Line />\n            <div\n                className=\"dashboard-item-content\"\n                style={{\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    height: '90%',\n                }}\n            >\n                <NotInterestedIcon\n                    color=\"disabled\"\n                    disabled\n                    style={{ width: 100, height: 100, align: 'center' }}\n                />\n            </div>\n        </Fragment>\n    );\n};\n\nAppItem.propTypes = {\n    item: PropTypes.object,\n    itemFilters: PropTypes.object,\n};\n\nAppItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nconst mapStateToProps = state => ({\n    itemFilters: sGetItemFiltersRoot(state),\n});\n\nexport default connect(mapStateToProps)(AppItem);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\n\nimport { colors } from '@dhis2/ui-core';\nimport ItemHeader from '../ItemHeader';\n\nconst style = {\n    margin: '21px 28px',\n    fontSize: '14px',\n    lineHeight: '18px',\n    color: colors.grey600,\n};\n\nconst SpacerItem = props => {\n    return (\n        <Fragment>\n            <ItemHeader title={i18n.t('Spacer')} itemId={props.item.id} />\n            <p style={style}>\n                {i18n.t(\n                    'Use a spacer to create empty vertical space between other dashboard items.'\n                )}\n            </p>\n        </Fragment>\n    );\n};\n\nSpacerItem.propTypes = {\n    item: PropTypes.object,\n};\n\nexport default SpacerItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport VisualizationItem from './VisualizationItem/Item';\nimport MessagesItem from './MessagesItem/Item';\nimport NotSupportedItem from './NotSupportedItem/Item';\nimport ListItem from './ListItem/Item';\nimport TextItem from './TextItem/Item';\nimport AppItem from './AppItem/Item';\nimport SpacerItem from './SpacerItem/Item';\nimport {\n    APP,\n    VISUALIZATION,\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_CHART,\n    EVENT_REPORT,\n    MESSAGES,\n    REPORTS,\n    RESOURCES,\n    USERS,\n    TEXT,\n    SPACER,\n} from '../../modules/itemTypes';\nimport { DEFAULT_STATE_ITEM_FILTERS } from '../../reducers/itemFilters';\n\nconst getGridItem = type => {\n    switch (type) {\n        case VISUALIZATION:\n        case REPORT_TABLE:\n        case CHART:\n        case MAP:\n        case EVENT_CHART:\n        case EVENT_REPORT:\n            return VisualizationItem;\n        case MESSAGES:\n            return MessagesItem;\n        case REPORTS:\n        case RESOURCES:\n        case USERS:\n            return ListItem;\n        case TEXT:\n            return TextItem;\n        case SPACER:\n            return SpacerItem;\n        case APP:\n            return AppItem;\n        default:\n            return NotSupportedItem;\n    }\n};\n\nexport const Item = props => {\n    const GridItem = getGridItem(props.item.type);\n\n    return (\n        <GridItem\n            item={props.item}\n            editMode={props.editMode}\n            itemFilters={\n                props.editMode ? DEFAULT_STATE_ITEM_FILTERS : props.itemFilters\n            }\n            onToggleItemExpanded={props.onToggleItemExpanded}\n        />\n    );\n};\n\nItem.propTypes = {\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    itemFilters: PropTypes.object,\n    onToggleItemExpanded: PropTypes.func,\n};\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nexport const NoContentMessage = ({ text }) => (\n    <div\n        style={{\n            padding: '50px 10px',\n            textAlign: 'center',\n            fontSize: '15px',\n            fontWeight: 500,\n            color: colors.grey600,\n        }}\n    >\n        {text}\n    </div>\n);\n\nNoContentMessage.propTypes = {\n    text: PropTypes.string,\n};\n\nexport default NoContentMessage;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash/debounce';\nimport pick from 'lodash/pick';\n\nconst defaultDebounceMs = 100;\nconst defaultBufferFactor = 0.25;\n\nclass ProgressiveLoadingContainer extends Component {\n    static propTypes = {\n        children: PropTypes.node.isRequired,\n        bufferFactor: PropTypes.number,\n        className: PropTypes.string,\n        debounceMs: PropTypes.number,\n        style: PropTypes.object,\n    };\n    static defaultProps = {\n        debounceMs: defaultDebounceMs,\n        bufferFactor: defaultBufferFactor,\n    };\n\n    state = {\n        shouldLoad: false,\n    };\n    containerRef = null;\n    shouldLoadHandler = null;\n\n    checkShouldLoad() {\n        const bufferPx = this.props.bufferFactor * window.innerHeight;\n\n        if (!this.containerRef) {\n            return;\n        }\n\n        const rect = this.containerRef.getBoundingClientRect();\n        if (\n            rect.bottom > -bufferPx &&\n            rect.top < window.innerHeight + bufferPx\n        ) {\n            this.setState({\n                shouldLoad: true,\n            });\n\n            this.removeHandler();\n        }\n    }\n\n    registerHandler() {\n        this.shouldLoadHandler = debounce(\n            () => this.checkShouldLoad(),\n            this.props.debounceMs\n        );\n\n        window.addEventListener('scroll', this.shouldLoadHandler);\n    }\n    removeHandler() {\n        window.removeEventListener('scroll', this.shouldLoadHandler);\n    }\n\n    componentDidMount() {\n        this.registerHandler();\n        this.checkShouldLoad();\n    }\n\n    componentWillUnmount() {\n        this.removeHandler();\n    }\n\n    render() {\n        const { children, className, style, ...props } = this.props;\n        const { shouldLoad } = this.state;\n\n        const eventProps = pick(props, [\n            'onMouseDown',\n            'onTouchStart',\n            'onMouseUp',\n            'onTouchEnd',\n        ]);\n\n        return (\n            <div\n                ref={ref => (this.containerRef = ref)}\n                style={style}\n                className={className}\n                {...eventProps}\n            >\n                {shouldLoad && children}\n            </div>\n        );\n    }\n}\n\nexport default ProgressiveLoadingContainer;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ReactGridLayout from 'react-grid-layout';\nimport { CircularLoader, ScreenCover } from '@dhis2/ui-core';\n\nimport {\n    acUpdateDashboardLayout,\n    acRemoveDashboardItem,\n} from '../../actions/editDashboard';\nimport { Item } from '../Item/Item';\nimport { resize as pluginResize } from '../Item/VisualizationItem/plugin';\nimport { isVisualizationType } from '../../modules/itemTypes';\nimport {\n    GRID_ROW_HEIGHT,\n    GRID_COMPACT_TYPE,\n    MARGIN,\n    getGridColumns,\n    hasShape,\n    onItemResize,\n} from './gridUtil';\nimport { orArray } from '../../modules/util';\n\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\n\nimport './ItemGrid.css';\nimport { sGetSelectedId, sGetSelectedIsLoading } from '../../reducers/selected';\nimport {\n    sGetEditDashboardRoot,\n    sGetEditDashboardItems,\n} from '../../reducers/editDashboard';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n} from '../../reducers/dashboards';\nimport ProgressiveLoadingContainer from '../Item/ProgressiveLoadingContainer';\n\n// Component\n\nconst EXPANDED_HEIGHT = 17;\n// this is set in the .dashboard-item-content css\nexport const ITEM_CONTENT_PADDING_BOTTOM = 4;\n\nexport class ItemGrid extends Component {\n    state = {\n        expandedItems: {},\n    };\n\n    onToggleItemExpanded = clickedId => {\n        const isExpanded =\n            typeof this.state.expandedItems[clickedId] === 'boolean'\n                ? this.state.expandedItems[clickedId]\n                : false;\n\n        const expandedItems = { ...this.state.expandedItems };\n        expandedItems[clickedId] = !isExpanded;\n        this.setState({ expandedItems });\n    };\n\n    onRemoveItem = clickedId => {\n        this.props.acRemoveDashboardItem(clickedId);\n    };\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.edit) {\n            this.setState({ expandedItems: {} });\n        }\n    }\n\n    onLayoutChange = newLayout => {\n        if (this.props.edit) {\n            this.props.acUpdateDashboardLayout(newLayout);\n        }\n    };\n\n    onResizeStop = (layout, oldItem, newItem) => {\n        onItemResize(newItem.i);\n\n        const dashboardItem = this.props.dashboardItems.find(\n            item => item.id === newItem.i\n        );\n\n        // call resize on the item component if it's a plugin type\n        if (dashboardItem && isVisualizationType(dashboardItem)) {\n            pluginResize(dashboardItem);\n        }\n    };\n\n    onRemoveItemWrapper = id => () => this.onRemoveItem(id);\n\n    adjustHeightForExpanded = dashboardItem => {\n        const expandedItem = this.state.expandedItems[dashboardItem.id];\n\n        if (expandedItem && expandedItem === true) {\n            return Object.assign({}, dashboardItem, {\n                h: dashboardItem.h + EXPANDED_HEIGHT,\n            });\n        }\n\n        return dashboardItem;\n    };\n\n    getItemComponent = item => {\n        const itemClassNames = [\n            item.type,\n            this.props.edit ? 'edit' : 'view',\n        ].join(' ');\n\n        return (\n            <ProgressiveLoadingContainer\n                key={item.i}\n                className={itemClassNames}\n            >\n                <Item\n                    item={item}\n                    editMode={this.props.edit}\n                    onToggleItemExpanded={this.onToggleItemExpanded}\n                />\n            </ProgressiveLoadingContainer>\n        );\n    };\n\n    getItemComponents = items => items.map(item => this.getItemComponent(item));\n\n    render() {\n        const { edit, isLoading, dashboardItems } = this.props;\n\n        if (!isLoading && !dashboardItems.length) {\n            return (\n                <NoContentMessage\n                    text={i18n.t('There are no items on this dashboard')}\n                />\n            );\n        }\n\n        const items = edit\n            ? dashboardItems\n            : dashboardItems.map(this.adjustHeightForExpanded);\n\n        return (\n            <div className=\"grid-wrapper\">\n                {isLoading ? (\n                    <ScreenCover>\n                        <CircularLoader />\n                    </ScreenCover>\n                ) : null}\n                <ReactGridLayout\n                    onLayoutChange={this.onLayoutChange}\n                    onResizeStop={this.onResizeStop}\n                    className=\"layout\"\n                    layout={items}\n                    margin={MARGIN}\n                    cols={getGridColumns()}\n                    rowHeight={GRID_ROW_HEIGHT}\n                    width={window.innerWidth}\n                    compactType={GRID_COMPACT_TYPE}\n                    isDraggable={edit}\n                    isResizable={edit}\n                    draggableCancel=\"input,textarea\"\n                >\n                    {this.getItemComponents(items)}\n                </ReactGridLayout>\n            </div>\n        );\n    }\n}\n\nItemGrid.propTypes = {\n    acRemoveDashboardItem: PropTypes.func,\n    acUpdateDashboardLayout: PropTypes.func,\n    dashboardItems: PropTypes.array,\n    edit: PropTypes.bool,\n    isLoading: PropTypes.bool,\n};\n\nItemGrid.defaultProps = {\n    dashboardItems: [],\n};\n\n// Container\n\nconst mapStateToProps = (state, ownProps) => {\n    const selectedDashboard = ownProps.edit\n        ? sGetEditDashboardRoot(state)\n        : sGetDashboardById(state, sGetSelectedId(state));\n\n    const dashboardItems = ownProps.edit\n        ? sGetEditDashboardItems(state)\n        : sGetDashboardItems(state);\n\n    return {\n        isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n        dashboardItems,\n    };\n};\n\nconst mapDispatchToProps = {\n    acUpdateDashboardLayout,\n    acRemoveDashboardItem,\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const validItems = orArray(stateProps.dashboardItems).filter(hasShape);\n\n    return {\n        ...dispatchProps,\n        edit: ownProps.edit,\n        isLoading: stateProps.isLoading,\n        dashboardItems: validItems,\n        onItemResize,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n    mergeProps\n)(ItemGrid);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport i18n from '@dhis2/d2-i18n';\n\nimport { colors } from '@dhis2/ui-core';\n\nconst styles = {\n    badgeContainer: {\n        margin: '2px',\n        padding: '0 16px',\n        borderRadius: '4px',\n        color: colors.white,\n        backgroundColor: '#212934',\n        height: 36,\n        display: 'flex',\n        alignItems: 'center',\n    },\n    badge: {\n        fontSize: '13px',\n        cursor: 'pointer',\n        whiteSpace: 'nowrap',\n    },\n    badgeRemove: {\n        fontSize: '12px',\n        textDecoration: 'underline',\n        marginLeft: '24px',\n        cursor: 'pointer',\n    },\n};\n\nclass FilterBadge extends Component {\n    onClick = id => () => this.props.onClick(id);\n    onRemove = id => () => this.props.onRemove(id);\n\n    render() {\n        const { data } = this.props;\n\n        return (\n            <div style={styles.badgeContainer}>\n                <span style={styles.badge} onClick={this.onClick(data.id)}>\n                    {`${data.name}: ${\n                        data.values.length > 1\n                            ? i18n.t('{{count}} selected', {\n                                  count: data.values.length,\n                              })\n                            : data.values[0].name\n                    }`}\n                </span>\n                <span\n                    style={styles.badgeRemove}\n                    onClick={this.onRemove(data.id)}\n                >\n                    {i18n.t('Remove')}\n                </span>\n            </div>\n        );\n    }\n}\n\nFilterBadge.propTypes = {\n    data: PropTypes.object.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onRemove: PropTypes.func.isRequired,\n};\n\nFilterBadge.defaultProps = {\n    onClick: Function.prototype,\n    onRemove: Function.prototype,\n};\n\nexport default FilterBadge;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { createSelector } from 'reselect';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport { sGetDimensions } from '../../reducers/dimensions';\nimport { sGetItemFiltersRoot } from '../../reducers/itemFilters';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { getTopOffset } from '../ControlBar/controlBarDimensions';\nimport { acRemoveItemFilter } from '../../actions/itemFilters';\nimport { acRemoveEditItemFilter } from '../../actions/editItemFilters';\nimport { acSetActiveModalDimension } from '../../actions/activeModalDimension';\n\nimport FilterBadge from './FilterBadge';\n\nconst styles = {\n    bar: {\n        position: 'sticky',\n        zIndex: 7,\n        padding: '8px 0',\n        display: 'flex',\n        justifyContent: 'center',\n        flexWrap: 'wrap',\n    },\n};\n\nexport class FilterBar extends Component {\n    onBadgeRemove = id => {\n        this.props.removeItemFilter(id);\n        this.props.removeEditItemFilter(id);\n    };\n\n    onBadgeClick = id => {\n        this.props.setActiveModalDimension({\n            id,\n            name: this.props.filters.find(item => item.id === id).name,\n        });\n    };\n\n    render() {\n        const { filters, userRows, classes } = this.props;\n        const top = getTopOffset(userRows) + 10;\n\n        return filters.length ? (\n            <div className={classes.bar} style={{ top }}>\n                {filters.map(filter => (\n                    <FilterBadge\n                        key={filter.id}\n                        data={filter}\n                        onClick={this.onBadgeClick}\n                        onRemove={this.onBadgeRemove}\n                    />\n                ))}\n            </div>\n        ) : null;\n    }\n}\n\nFilterBar.propTypes = {\n    filters: PropTypes.array.isRequired,\n    removeEditItemFilter: PropTypes.func.isRequired,\n    removeItemFilter: PropTypes.func.isRequired,\n    classes: PropTypes.object,\n    setActiveModalDimension: PropTypes.func,\n    userRows: PropTypes.number,\n};\n\nFilterBar.defaultProps = {\n    filters: [],\n    removeItemFIlter: Function.prototype,\n    removeEditItemFilter: Function.prototype,\n};\n\n// simplify the filters structure to:\n// [{ id: 'pe', name: 'Period', values: [{ id: 2019: name: '2019' }, {id: 'LAST_MONTH', name: 'Last month' }]}, ...]\nconst filtersSelector = createSelector(\n    [sGetItemFiltersRoot, sGetDimensions],\n    (filters, dimensions) =>\n        Object.keys(filters).reduce((arr, id) => {\n            arr.push({\n                id: id,\n                name: dimensions.find(dimension => dimension.id === id).name,\n                values: filters[id].map(value => ({\n                    id: value.id,\n                    name: value.displayName || value.name,\n                })),\n            });\n\n            return arr;\n        }, [])\n);\n\nconst mapStateToProps = state => ({\n    filters: filtersSelector(state),\n    userRows: sGetControlBarUserRows(state),\n});\n\nexport default connect(\n    mapStateToProps,\n    {\n        setActiveModalDimension: acSetActiveModalDimension,\n        removeItemFilter: acRemoveItemFilter,\n        removeEditItemFilter: acRemoveEditItemFilter,\n    }\n)(withStyles(styles)(FilterBar));\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport TitleBar from '../TitleBar/TitleBar';\nimport ItemGrid from '../ItemGrid/ItemGrid';\nimport FilterBar from '../FilterBar/FilterBar';\n\nexport const DashboardContent = props => (\n    <Fragment>\n        <TitleBar edit={props.editMode} />\n        <FilterBar />\n        <ItemGrid edit={props.editMode} />\n    </Fragment>\n);\n\nDashboardContent.propTypes = {\n    editMode: PropTypes.bool,\n};\n\nexport default DashboardContent;\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport isEmpty from 'lodash/isEmpty';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\n\nimport {\n    sGetAllDashboards,\n    sDashboardsIsFetching,\n} from '../../reducers/dashboards';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport DashboardsBar from '../ControlBar/DashboardsBar';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport DashboardContent from './DashboardContent';\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nexport const Content = ({ hasDashboardContent, dashboardsIsEmpty }) => {\n    const msg = dashboardsIsEmpty\n        ? i18n.t(\n              'No dashboards found. Use the + button to create a new dashboard.'\n          )\n        : i18n.t('Requested dashboard not found');\n\n    return hasDashboardContent ? (\n        <DashboardContent editMode={false} />\n    ) : (\n        <NoContentMessage text={msg} />\n    );\n};\n\nContent.propTypes = {\n    dashboardsIsEmpty: PropTypes.bool,\n    hasDashboardContent: PropTypes.bool,\n};\n\nexport const ViewDashboard = ({ id, dashboardsIsEmpty, dashboardsLoaded }) => {\n    const hasDashboardContent = id && !dashboardsIsEmpty;\n    const contentNotReady = !dashboardsLoaded || id === null;\n\n    return (\n        <Fragment>\n            <DashboardsBar />\n            <DashboardVerticalOffset />\n            <div className=\"dashboard-wrapper\">\n                {contentNotReady ? null : (\n                    <Content\n                        hasDashboardContent={hasDashboardContent}\n                        dashboardsIsEmpty={dashboardsIsEmpty}\n                    />\n                )}\n            </div>\n        </Fragment>\n    );\n};\n\nViewDashboard.propTypes = {\n    dashboardsIsEmpty: PropTypes.bool,\n    dashboardsLoaded: PropTypes.bool,\n    id: PropTypes.string,\n};\n\nconst mapStateToProps = state => {\n    const dashboards = sGetAllDashboards(state);\n\n    return {\n        id: sGetSelectedId(state),\n        dashboardsIsEmpty: isEmpty(dashboards),\n        dashboardsLoaded: !sDashboardsIsFetching(state),\n    };\n};\n\nexport default connect(mapStateToProps)(ViewDashboard);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport { Button } from '@dhis2/ui-core';\n\nexport const ConfirmDeleteDialog = ({\n    dashboardName,\n    onDeleteConfirmed,\n    onContinueEditing,\n    open,\n}) => {\n    const actions = [\n        <Button key=\"cancel\" secondary onClick={onContinueEditing}>\n            {i18n.t('Cancel')}\n        </Button>,\n        <Button key=\"delete\" destructive onClick={onDeleteConfirmed}>\n            {i18n.t('Delete')}\n        </Button>,\n    ];\n\n    return (\n        <Dialog open={open} onClose={onContinueEditing}>\n            <DialogTitle style={{ fontSize: '1.25rem', fontWeight: '450' }}>\n                {i18n.t('Delete dashboard')}\n            </DialogTitle>\n            <DialogContent>\n                <DialogContentText style={{ fontSize: '0.875rem' }}>\n                    {i18n.t(\n                        'Deleting dashboard \"{{ dashboardName }}\" will remove it for all users. This action cannot be undone. Are you sure you want to permanently delete this dashboard?',\n                        { dashboardName }\n                    )}\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>{actions}</DialogActions>\n        </Dialog>\n    );\n};\n\nConfirmDeleteDialog.propTypes = {\n    dashboardName: PropTypes.string,\n    open: PropTypes.bool,\n    onContinueEditing: PropTypes.func,\n    onDeleteConfirmed: PropTypes.func,\n};\n\nexport default ConfirmDeleteDialog;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport ControlBar from './ControlBar';\nimport TranslationDialog from '@dhis2/d2-ui-translation-dialog';\nimport { Button } from '@dhis2/ui-core';\n\nimport ConfirmDeleteDialog from './ConfirmDeleteDialog';\nimport {\n    tSaveDashboard,\n    acClearEditDashboard,\n} from '../../actions/editDashboard';\nimport {\n    tDeleteDashboard,\n    acSetDashboardDisplayName,\n} from '../../actions/dashboards';\nimport {\n    sGetEditDashboardRoot,\n    sGetIsNewDashboard,\n} from '../../reducers/editDashboard';\nimport {\n    CONTROL_BAR_ROW_HEIGHT,\n    MIN_ROW_COUNT,\n    getControlBarHeight,\n} from './controlBarDimensions';\nimport { apiFetchDashboard } from '../../api/dashboards';\n\nimport classes from './styles/DashboardsBar.module.css';\n\nconst buttonBarStyle = {\n    height: CONTROL_BAR_ROW_HEIGHT,\n    paddingTop: '15px',\n    marginLeft: '15px',\n    marginRight: '15px',\n};\n\nexport class EditBar extends Component {\n    state = {\n        translationDialogIsOpen: false,\n        dashboardModel: undefined,\n        confirmDeleteDialogOpen: false,\n        redirectUrl: undefined,\n    };\n\n    onConfirmDelete = () => {\n        this.setState({ confirmDeleteDialogOpen: true });\n    };\n\n    onSave = () => {\n        this.props.onSave().then(newId => {\n            this.setState({ redirectUrl: `/${newId}` });\n        });\n    };\n\n    onDiscard = () => {\n        this.props.onDiscardChanges();\n        const redirectUrl = this.props.dashboardId\n            ? `/${this.props.dashboardId}`\n            : '/';\n        this.setState({ redirectUrl });\n    };\n\n    onContinueEditing = () => {\n        this.setState({ confirmDeleteDialogOpen: false });\n    };\n\n    onDeleteConfirmed = () => {\n        this.setState({ confirmDeleteDialogOpen: false });\n        this.props.onDelete(this.props.dashboardId).then(() => {\n            this.setState({ redirectUrl: '/' });\n        });\n    };\n\n    onTranslationsSaved = async translations => {\n        if (translations && translations.length) {\n            const dbLocale = await this.context.d2.currentUser.userSettings.get(\n                'keyDbLocale'\n            );\n\n            const translation = translations.find(\n                t => t.locale === dbLocale && t.property === 'NAME'\n            );\n\n            if (translation && translation.value) {\n                this.props.onTranslate(\n                    this.props.dashboardId,\n                    translation.value\n                );\n            }\n        }\n    };\n\n    fetchDashboardModel = () => {\n        if (this.props.dashboardId && !this.state.dashboardModel) {\n            apiFetchDashboard(this.props.dashboardId).then(dashboardModel =>\n                this.setState({ dashboardModel })\n            );\n        }\n    };\n\n    componentDidMount() {\n        this.fetchDashboardModel();\n    }\n\n    componentDidUpdate() {\n        this.fetchDashboardModel();\n    }\n\n    toggleTranslationDialog = () => {\n        this.setState({\n            translationDialogIsOpen: !this.state.translationDialogIsOpen,\n        });\n    };\n\n    confirmDeleteDialog = () =>\n        this.props.deleteAccess && this.props.dashboardId ? (\n            <ConfirmDeleteDialog\n                dashboardName={this.props.dashboardName}\n                onDeleteConfirmed={this.onDeleteConfirmed}\n                onContinueEditing={this.onContinueEditing}\n                open={this.state.confirmDeleteDialogOpen}\n            />\n        ) : null;\n\n    translationDialog = () =>\n        this.state.dashboardModel && this.state.dashboardModel.id ? (\n            <TranslationDialog\n                className=\"translation-dialog\"\n                d2={this.context.d2}\n                open={this.state.translationDialogIsOpen}\n                onRequestClose={this.toggleTranslationDialog}\n                objectToTranslate={this.state.dashboardModel}\n                fieldsToTranslate={['name', 'description']}\n                // TODO handle messages in snackbar\n                onTranslationSaved={this.onTranslationsSaved}\n                onTranslationError={err =>\n                    console.log('translation update error', err)\n                }\n            />\n        ) : null;\n\n    render() {\n        if (this.state.redirectUrl) {\n            return <Redirect to={this.state.redirectUrl} />;\n        }\n\n        const { dashboardId, deleteAccess, updateAccess } = this.props;\n        const controlBarHeight = getControlBarHeight(MIN_ROW_COUNT);\n\n        const discardBtnText = updateAccess\n            ? i18n.t('Exit without saving')\n            : i18n.t('Go to dashboards');\n\n        return (\n            <Fragment>\n                <ControlBar height={controlBarHeight} editMode={true}>\n                    <div style={buttonBarStyle}>\n                        {updateAccess ? (\n                            <div className={classes.leftControls}>\n                                <span style={{ marginRight: '15px' }}>\n                                    <Button primary onClick={this.onSave}>\n                                        {i18n.t('Save changes')}\n                                    </Button>\n                                </span>\n\n                                {dashboardId ? (\n                                    <span style={{ marginRight: '15px' }}>\n                                        <Button\n                                            onClick={\n                                                this.toggleTranslationDialog\n                                            }\n                                        >\n                                            {i18n.t('Translate')}\n                                        </Button>\n                                    </span>\n                                ) : null}\n                                {dashboardId && deleteAccess ? (\n                                    <Button onClick={this.onConfirmDelete}>\n                                        {i18n.t('Delete')}\n                                    </Button>\n                                ) : null}\n                            </div>\n                        ) : null}\n\n                        <div className={classes.rightControls}>\n                            <Button secondary onClick={this.onDiscard}>\n                                {discardBtnText}\n                            </Button>\n                        </div>\n                    </div>\n                </ControlBar>\n                {this.translationDialog()}\n                {this.confirmDeleteDialog()}\n            </Fragment>\n        );\n    }\n}\n\nEditBar.propTypes = {\n    dashboardId: PropTypes.string,\n    dashboardName: PropTypes.string,\n    deleteAccess: PropTypes.bool,\n    updateAccess: PropTypes.bool,\n    onDelete: PropTypes.func,\n    onDiscardChanges: PropTypes.func,\n    onSave: PropTypes.func,\n    onTranslate: PropTypes.func,\n};\n\nEditBar.contextTypes = {\n    d2: PropTypes.object,\n};\n\nconst mapStateToProps = state => {\n    const dashboard = sGetEditDashboardRoot(state);\n\n    let deleteAccess;\n    let updateAccess;\n    if (sGetIsNewDashboard(state)) {\n        deleteAccess = true;\n        updateAccess = true;\n    } else {\n        updateAccess = dashboard.access ? dashboard.access.update : false;\n        deleteAccess = dashboard.access ? dashboard.access.delete : false;\n    }\n\n    return {\n        dashboardId: dashboard.id,\n        dashboardName: dashboard.name,\n        deleteAccess,\n        updateAccess,\n    };\n};\n\nconst mapDispatchToProps = dispatch => ({\n    onSave: () => dispatch(tSaveDashboard()).then(id => id),\n    onDelete: id => dispatch(tDeleteDashboard(id)),\n    onDiscardChanges: () => dispatch(acClearEditDashboard()),\n    onTranslate: (id, value) => dispatch(acSetDashboardDisplayName(id, value)),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(EditBar);\n","import React, { Fragment, Component } from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\n\nimport { acSetEditDashboard } from '../../actions/editDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n    sDashboardsIsFetching,\n} from '../../reducers/dashboards';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport DashboardContent from './DashboardContent';\nimport EditBar from '../ControlBar/EditBar';\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nexport const Content = ({ updateAccess }) => {\n    return updateAccess ? (\n        <DashboardContent editMode={true} />\n    ) : (\n        <NoContentMessage text={i18n.t('No access')} />\n    );\n};\n\nContent.propTypes = {\n    updateAccess: PropTypes.bool,\n};\nexport class EditDashboard extends Component {\n    state = {\n        initialized: false,\n    };\n\n    initEditDashboard = () => {\n        if (this.props.dashboard) {\n            this.setState({ initialized: true });\n            this.props.setEditDashboard(this.props.dashboard, this.props.items);\n        }\n    };\n\n    componentDidMount() {\n        this.initEditDashboard();\n    }\n\n    componentDidUpdate() {\n        if (!this.state.initialized) {\n            this.initEditDashboard();\n        }\n    }\n\n    getDashboardContent = () => {\n        const contentNotReady =\n            !this.props.dashboardsLoaded || this.props.id === null;\n\n        return (\n            <div className=\"dashboard-wrapper\">\n                {contentNotReady ? null : (\n                    <Content updateAccess={this.props.updateAccess} />\n                )}\n            </div>\n        );\n    };\n\n    render() {\n        return (\n            <Fragment>\n                <EditBar />\n                <DashboardVerticalOffset editMode={true} />\n                {this.getDashboardContent()}\n            </Fragment>\n        );\n    }\n}\n\nEditDashboard.propTypes = {\n    dashboard: PropTypes.object,\n    dashboardsLoaded: PropTypes.bool,\n    id: PropTypes.string,\n    items: PropTypes.array,\n    setEditDashboard: PropTypes.func,\n    updateAccess: PropTypes.bool,\n};\n\nconst mapStateToProps = state => {\n    const id = sGetSelectedId(state);\n    const dashboard = id ? sGetDashboardById(state, id) : null;\n\n    const updateAccess =\n        dashboard && dashboard.access ? dashboard.access.update : false;\n\n    return {\n        dashboard,\n        id,\n        updateAccess,\n        items: sGetDashboardItems(state),\n        dashboardsLoaded: !sDashboardsIsFetching(state),\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        setEditDashboard: acSetEditDashboard,\n    }\n)(EditDashboard);\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { acSetEditNewDashboard } from '../../actions/editDashboard';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport EditBar from '../ControlBar/EditBar';\nimport DashboardContent from './DashboardContent';\n\nclass NewDashboard extends Component {\n    componentDidMount() {\n        this.props.setNewDashboard();\n    }\n\n    render() {\n        return (\n            <Fragment>\n                <EditBar />\n                <DashboardVerticalOffset editMode={true} />\n                <div className=\"dashboard-wrapper\">\n                    <DashboardContent editMode={true} />\n                </div>\n            </Fragment>\n        );\n    }\n}\n\nNewDashboard.propTypes = {\n    setNewDashboard: PropTypes.func,\n};\n\nexport default connect(\n    null,\n    {\n        setNewDashboard: acSetEditNewDashboard,\n    }\n)(NewDashboard);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { tSelectDashboard } from '../../actions/dashboards';\nimport { sDashboardsIsFetching } from '../../reducers/dashboards';\nimport { EDIT, NEW } from './dashboardModes';\nimport ViewDashboard from './ViewDashboard';\nimport EditDashboard from './EditDashboard';\nimport NewDashboard from './NewDashboard';\n\nclass Dashboard extends Component {\n    setDashboard = () => {\n        if (this.props.dashboardsLoaded) {\n            const id = this.props.match.params.dashboardId || null;\n\n            this.props.selectDashboard(id);\n\n            this.scrollToTop();\n        }\n    };\n\n    scrollToTop = () => {\n        window.scrollTo(0, 0);\n    };\n\n    componentDidMount() {\n        this.setDashboard();\n    }\n\n    componentDidUpdate() {\n        this.setDashboard();\n    }\n\n    render() {\n        switch (this.props.mode) {\n            case EDIT:\n                return <EditDashboard />;\n            case NEW:\n                return <NewDashboard />;\n            default:\n                return <ViewDashboard />;\n        }\n    }\n}\n\nDashboard.propTypes = {\n    dashboardsLoaded: PropTypes.bool,\n    match: PropTypes.object,\n    mode: PropTypes.string,\n    selectDashboard: PropTypes.func,\n};\n\nconst mapStateToProps = state => {\n    return { dashboardsLoaded: !sDashboardsIsFetching(state) };\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        selectDashboard: tSelectDashboard,\n    }\n)(Dashboard);\n","export const EDIT = 'edit';\nexport const NEW = 'new';\nexport const VIEW = 'view';\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { HeaderBar } from '@dhis2/ui-widgets';\nimport { CssVariables } from '@dhis2/ui-core';\n\nimport { EDIT, VIEW, NEW } from './Dashboard/dashboardModes';\nimport { acReceivedUser } from '../actions/user';\nimport { tFetchDashboards } from '../actions/dashboards';\nimport { tSetControlBarRows } from '../actions/controlBar';\nimport { tSetDimensions } from '../actions/dimensions';\nimport Dashboard from './Dashboard/Dashboard';\nimport SnackbarMessage from './SnackbarMessage/SnackbarMessage';\n\nimport 'typeface-roboto';\nimport './App.css';\n\nexport class App extends Component {\n    componentDidMount() {\n        this.props.setCurrentUser(this.props.d2.currentUser);\n        this.props.fetchDashboards();\n        this.props.setControlBarRows();\n        this.props.setDimensions(this.props.d2);\n    }\n\n    getChildContext() {\n        return { baseUrl: this.props.baseUrl, i18n, d2: this.props.d2 };\n    }\n\n    render() {\n        return (\n            <>\n                <CssVariables colors spacers />\n                <div className=\"app-wrapper\">\n                    <div className=\"dashboard-header-bar\">\n                        <HeaderBar appName={i18n.t('Dashboard')} />\n                    </div>\n                    <Router>\n                        <Switch>\n                            <Route\n                                exact\n                                path=\"/\"\n                                render={props => (\n                                    <Dashboard {...props} mode={VIEW} />\n                                )}\n                            />\n                            <Route\n                                exact\n                                path=\"/new\"\n                                render={props => (\n                                    <Dashboard {...props} mode={NEW} />\n                                )}\n                            />\n                            <Route\n                                exact\n                                path=\"/:dashboardId\"\n                                render={props => (\n                                    <Dashboard {...props} mode={VIEW} />\n                                )}\n                            />\n                            <Route\n                                exact\n                                path=\"/:dashboardId/edit\"\n                                render={props => (\n                                    <Dashboard {...props} mode={EDIT} />\n                                )}\n                            />\n                        </Switch>\n                    </Router>\n                    <SnackbarMessage />\n                </div>\n            </>\n        );\n    }\n}\n\nApp.propTypes = {\n    fetchDashboards: PropTypes.func.isRequired,\n    setControlBarRows: PropTypes.func.isRequired,\n    setCurrentUser: PropTypes.func.isRequired,\n    setDimensions: PropTypes.func.isRequired,\n    baseUrl: PropTypes.string,\n    d2: PropTypes.object,\n};\n\nApp.childContextTypes = {\n    baseUrl: PropTypes.string,\n    i18n: PropTypes.object,\n    d2: PropTypes.object,\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setCurrentUser: currentUser => dispatch(acReceivedUser(currentUser)),\n        fetchDashboards: () => dispatch(tFetchDashboards()),\n        setControlBarRows: () => dispatch(tSetControlBarRows()),\n        setDimensions: d2 => dispatch(tSetDimensions(d2)),\n    };\n};\n\nexport default connect(\n    null,\n    mapDispatchToProps\n)(App);\n","import { RECEIVED_USER } from '../reducers/user';\n\nexport const acReceivedUser = value => ({\n    type: RECEIVED_USER,\n    value,\n});\n","//------------------------------------------------------------------------------\n// <auto-generated>\n    // This code was generated by d2-i18n-generate.\n    //\n    // Changes to this file may cause incorrect behavior and will be lost if\n    // the code is regenerated.\n    // </auto-generated>\n//------------------------------------------------------------------------------\nimport i18n from '@dhis2/d2-i18n';\nimport moment from 'moment';\nimport 'moment/locale/ar';\nimport 'moment/locale/es';\nimport 'moment/locale/fr';\nimport 'moment/locale/lo';\nimport 'moment/locale/nb';\nimport 'moment/locale/pt';\nimport 'moment/locale/ru';\nimport 'moment/locale/sv';\nimport 'moment/locale/tg';\nimport 'moment/locale/uk';\nimport 'moment/locale/ur';\nimport 'moment/locale/vi';\nimport 'moment/locale/zh-cn';\n\nimport arTranslations from './ar/translations.json';\nimport ar_IQTranslations from './ar_IQ/translations.json';\nimport ckbTranslations from './ckb/translations.json';\nimport csTranslations from './cs/translations.json';\nimport daTranslations from './da/translations.json';\nimport enTranslations from './en/translations.json';\nimport esTranslations from './es/translations.json';\nimport frTranslations from './fr/translations.json';\nimport idTranslations from './id/translations.json';\nimport kmTranslations from './km/translations.json';\nimport loTranslations from './lo/translations.json';\nimport myTranslations from './my/translations.json';\nimport nbTranslations from './nb/translations.json';\nimport prsTranslations from './prs/translations.json';\nimport psTranslations from './ps/translations.json';\nimport ptTranslations from './pt/translations.json';\nimport pt_BRTranslations from './pt_BR/translations.json';\nimport ruTranslations from './ru/translations.json';\nimport svTranslations from './sv/translations.json';\nimport tetTranslations from './tet/translations.json';\nimport tgTranslations from './tg/translations.json';\nimport ukTranslations from './uk/translations.json';\nimport urTranslations from './ur/translations.json';\nimport uzTranslations from './uz/translations.json';\nimport uz_CyrlTranslations from './uz_Cyrl/translations.json';\nimport uz_LatnTranslations from './uz_Latn/translations.json';\nimport viTranslations from './vi/translations.json';\nimport zhTranslations from './zh/translations.json';\nimport zh_CNTranslations from './zh_CN/translations.json';\n\nconst namespace = 'default';\nmoment.locale('en');\n\ni18n.addResources('ar', namespace, arTranslations);\ni18n.addResources('ar_IQ', namespace, ar_IQTranslations);\ni18n.addResources('ckb', namespace, ckbTranslations);\ni18n.addResources('cs', namespace, csTranslations);\ni18n.addResources('da', namespace, daTranslations);\ni18n.addResources('en', namespace, enTranslations);\ni18n.addResources('es', namespace, esTranslations);\ni18n.addResources('fr', namespace, frTranslations);\ni18n.addResources('id', namespace, idTranslations);\ni18n.addResources('km', namespace, kmTranslations);\ni18n.addResources('lo', namespace, loTranslations);\ni18n.addResources('my', namespace, myTranslations);\ni18n.addResources('nb', namespace, nbTranslations);\ni18n.addResources('prs', namespace, prsTranslations);\ni18n.addResources('ps', namespace, psTranslations);\ni18n.addResources('pt', namespace, ptTranslations);\ni18n.addResources('pt_BR', namespace, pt_BRTranslations);\ni18n.addResources('ru', namespace, ruTranslations);\ni18n.addResources('sv', namespace, svTranslations);\ni18n.addResources('tet', namespace, tetTranslations);\ni18n.addResources('tg', namespace, tgTranslations);\ni18n.addResources('uk', namespace, ukTranslations);\ni18n.addResources('ur', namespace, urTranslations);\ni18n.addResources('uz', namespace, uzTranslations);\ni18n.addResources('uz_Cyrl', namespace, uz_CyrlTranslations);\ni18n.addResources('uz_Latn', namespace, uz_LatnTranslations);\ni18n.addResources('vi', namespace, viTranslations);\ni18n.addResources('zh', namespace, zhTranslations);\ni18n.addResources('zh_CN', namespace, zh_CNTranslations);\n\ni18n.setDefaultNamespace(namespace);\ni18n.changeLanguage('en');\n\nexport default i18n;\n","/** @module reducers/selected */\nimport { validateReducer } from '../modules/util';\n\nexport const SET_STYLE = 'SET_STYLE';\n\nexport const DEFAULT_STATE_STYLE = 'LIST';\n\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\nconst style = (state = DEFAULT_STATE_STYLE, action) => {\n    switch (action.type) {\n        case SET_STYLE:\n            return validateReducer(action.value, DEFAULT_STATE_STYLE);\n        default:\n            return state;\n    }\n};\n\nexport default style;\n\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\nexport const sGetStyleRoot = state => state.style;\n","import { combineReducers } from 'redux';\nimport arraySort from 'd2-utilizr/lib/arraySort';\n\nimport dashboards, { sGetDashboardsRoot } from './dashboards';\nimport selected from './selected';\nimport dashboardsFilter, {\n    ownerData,\n    sGetFilterName,\n    sGetFilterOrder,\n    sGetFilterOwner,\n} from './dashboardsFilter';\nimport controlBar from './controlBar';\nimport visualizations from './visualizations';\nimport editDashboard from './editDashboard';\nimport messages from './messages';\nimport user from './user';\nimport snackbar from './snackbar';\nimport itemFilters from './itemFilters';\nimport editItemFilters from './editItemFilters';\nimport style from './style';\nimport dimensions from './dimensions';\nimport settings from './settings';\nimport activeModalDimension from './activeModalDimension';\n\nconst USER = 'system';\n\n// Reducers\n\nexport default combineReducers({\n    dashboards,\n    selected,\n    dashboardsFilter,\n    controlBar,\n    visualizations,\n    messages,\n    user,\n    editDashboard,\n    itemFilters,\n    editItemFilters,\n    style,\n    snackbar,\n    dimensions,\n    settings,\n    activeModalDimension,\n});\n\n// Map constants to data\nconst mapConstToData = {\n    NAME: 'name',\n    ITEMS: 'numberOfItems',\n    CREATED: 'created',\n    OWNER: 'owner',\n};\n\n// Selectors\n\n// Filter dashboards by name\nexport const sFilterDashboardsByName = (dashboards, filter) =>\n    dashboards.filter(d =>\n        d.displayName.toLowerCase().includes(filter.toLowerCase())\n    );\n\n// Filter dashboards by owner, TODO FIXME\nexport const sFilterDashboardsByOwner = (dashboards, filter) => {\n    const ME = ownerData[1]; // TODO\n    const OTHERS = ownerData[2]; // TODO\n\n    switch (filter) {\n        case ME:\n            return dashboards.filter(d => d.owner === USER);\n        case OTHERS:\n            return dashboards.filter(d => d.owner !== USER);\n        default:\n            return dashboards;\n    }\n};\n\n// Filter dashboards by order\nexport const sFilterDashboardsByOrder = (dashboards, filter) => {\n    const filterValues = filter.split(':');\n\n    const key = filterValues[0];\n    const direction = filterValues[1];\n\n    return arraySort(dashboards, direction, mapConstToData[key]);\n};\n\n// Selectors dependency level 2\n\n// Get filtered dashboards\nexport const sGetFilteredDashboards = state => {\n    const dashboards = sGetDashboardsRoot(state);\n\n    const nameFilter = sGetFilterName(state);\n    const ownerFilter = sGetFilterOwner(state);\n    const orderFilter = sGetFilterOrder(state);\n\n    return sFilterDashboardsByOrder(\n        sFilterDashboardsByName(\n            sFilterDashboardsByOwner(dashboards, ownerFilter),\n            nameFilter\n        ),\n        orderFilter\n    );\n};\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport reducer from './reducers';\n\nconst configureStore = () => {\n    const middleware = [thunk];\n\n    // Enable Redux devtools if extension is installed instead of redux-logger\n    const composeEnhancers =\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n    if (\n        !window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ &&\n        process.env.NODE_ENV !== 'production'\n    ) {\n        middleware.push(createLogger());\n    }\n\n    return createStore(\n        reducer,\n        composeEnhancers(applyMiddleware(...middleware))\n    );\n};\n\nexport default configureStore;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport { init as d2Init, config, getManifest, getUserSettings } from 'd2';\nimport dhis2theme from '@dhis2/d2-ui-core/theme/mui3.theme';\n\nimport { Provider as RuntimeProvider } from '@dhis2/app-runtime';\nimport { CssReset } from '@dhis2/ui-core';\n\nimport App from './components/App';\nimport './index.css';\nimport i18n from './locales';\nimport configureStore from './configureStore';\n\nconst muiTheme = () => createMuiTheme(dhis2theme);\n\nconst configI18n = userSettings => {\n    const uiLocale = userSettings.keyUiLocale;\n\n    if (uiLocale && uiLocale !== 'en') {\n        config.i18n.sources.add(`./i18n/i18n_module_${uiLocale}.properties`);\n    }\n\n    config.i18n.sources.add('./i18n/i18n_module_en.properties');\n    i18n.changeLanguage(uiLocale);\n};\n\nconst init = async () => {\n    const manifest = await getManifest('./manifest.webapp');\n\n    // log app info\n    console.info(\n        `Dashboards app, v${manifest.version}, ${\n            manifest.manifest_generated_at\n        }`\n    );\n\n    const isProd = process.env.NODE_ENV === 'production';\n\n    if (\n        !isProd &&\n        (!process.env.REACT_APP_DHIS2_BASE_URL ||\n            !process.env.REACT_APP_DHIS2_AUTHORIZATION)\n    ) {\n        throw new Error(\n            'Missing env variables REACT_APP_DHIS2_BASE_URL and REACT_APP_DHIS2_AUTHORIZATION'\n        );\n    }\n\n    // api config\n    const baseUrl = isProd\n        ? manifest.activities.dhis.href\n        : process.env.REACT_APP_DHIS2_BASE_URL;\n    const authorization = process.env.REACT_APP_DHIS2_AUTHORIZATION;\n\n    config.baseUrl = `${baseUrl}/api/${manifest.dhis2.apiVersion}`;\n    config.headers = isProd ? null : { Authorization: authorization };\n    config.schemas = [\n        'chart',\n        'map',\n        'report',\n        'reportTable',\n        'eventChart',\n        'eventReport',\n        'dashboard',\n        'organisationUnit',\n        'userGroup',\n    ];\n\n    getUserSettings()\n        .then(configI18n)\n        .then(() => d2Init(config))\n        .then(initializedD2 => {\n            ReactDOM.render(\n                <RuntimeProvider\n                    config={{\n                        baseUrl: baseUrl,\n                        apiVersion: manifest.dhis2.apiVersion,\n                    }}\n                >\n                    <CssReset />\n                    <Provider store={configureStore()}>\n                        <MuiThemeProvider theme={muiTheme()}>\n                            <App baseUrl={baseUrl} d2={initializedD2} />\n                        </MuiThemeProvider>\n                    </Provider>\n                </RuntimeProvider>,\n                document.getElementById('root')\n            );\n        });\n};\n\ninit();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"leftControls\":\"DashboardsBar_leftControls__25cNR\",\"rightControls\":\"DashboardsBar_rightControls__CiA5J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuItem\":\"ContentMenuItem_menuItem___-2-X\",\"launchLink\":\"ContentMenuItem_launchLink__2fSUG\",\"label\":\"ContentMenuItem_label__2NOxi\",\"buttonInsert\":\"ContentMenuItem_buttonInsert__7buZh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemWrap\":\"ItemHeader_itemWrap__1iSno\",\"itemHeaderWrap\":\"ItemHeader_itemHeaderWrap__1dXOS\",\"itemTitle\":\"ItemHeader_itemTitle__1fKUT\",\"itemActionsWrap\":\"ItemHeader_itemActionsWrap__1U07S\"};","import isObject from 'lodash/isObject';\n\n// validation\nexport function orNull(param) {\n    return param === undefined ? null : param;\n}\n\nexport function orArray(param) {\n    return Array.isArray(param) ? param : [];\n}\n\nexport function orObject(param) {\n    return isObject(param) ? param : {};\n}\n\n// array\nexport function arrayGetById(array, id) {\n    return array.find(item => item.id === id);\n}\n\n// object\nexport function arrayToIdMap(array) {\n    return array.reduce((obj, item) => {\n        obj[item.id] = item;\n        return obj;\n    }, {});\n}\n\n// date\nexport function getDate() {\n    const y = Math.floor(Math.random() * 3) + 2015;\n    const M = Math.floor(Math.random() * 12) + 1;\n    const d = Math.floor(Math.random() * 28) + 1;\n    // const h = Math.floor(Math.random() * 23) + 1;\n    // const m = Math.floor(Math.random() * 59) + 1;\n    // const s = Math.floor(Math.random() * 59) + 1;\n\n    return new Date(`${y}-${M}-${d}`)\n        .toJSON()\n        .replace('T', ' ')\n        .substr(0, 10);\n}\n\nexport const formatDate = (value, uiLocale) => {\n    if (typeof global.Intl !== 'undefined' && Intl.DateTimeFormat) {\n        const locale = uiLocale || 'en';\n        return new Intl.DateTimeFormat(locale, {\n            year: 'numeric',\n            month: 'short',\n            day: 'numeric',\n        }).format(new Date(value));\n    }\n\n    return value.substr(0, 19).replace('T', ' ');\n};\n\n/**\n * Sorts an array of objects based on provided date property\n *\n * @param {Array} items Array of objects\n * @param {String} dateProp Name of the date property to be used for sorting\n * @param {Boolean} ascending Whether to sort ascending or descending\n */\nexport const sortByDate = (items, dateProp, ascending = true) => {\n    const values = Object.values(items);\n\n    values.sort((a, b) => {\n        const aDate = new Date(a[dateProp]);\n        const bDate = new Date(b[dateProp]);\n\n        return ascending ? aDate - bDate : bDate - aDate;\n    });\n\n    return values;\n};\n\n// reducer validator\nexport const validateReducer = (value, defaultValue) =>\n    value === undefined || value === null ? defaultValue : value;\n\nexport const getBaseUrl = d2 => {\n    const api = d2.Api.getApi();\n    const idx = api.baseUrl.indexOf('/api');\n    return idx > -1 ? api.baseUrl.slice(0, idx) : api.baseUrl;\n};\n\nexport const getWithoutId = object => ({\n    ...object,\n    id: undefined,\n});\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ControlBar_root__2a7xK\",\"content\":\"ControlBar_content__uG2fK\",\"draghandle\":\"ControlBar_draghandle__nLcL-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FatalErrorBoundary_container__FPSkU\",\"icon\":\"FatalErrorBoundary_icon__1bhAy\",\"message\":\"FatalErrorBoundary_message__2ZvqS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ClearButton_button__V4UJr\",\"icon\":\"ClearButton_icon__7atFN\"};","import isObject from 'lodash/isObject';\nimport {\n    VIS_TYPE_COLUMN,\n    VIS_TYPE_PIVOT_TABLE,\n    AXIS_ID_ROWS,\n    AXIS_ID_COLUMNS,\n    AXIS_ID_FILTERS,\n} from '@dhis2/analytics';\nimport { apiFetchFavorite, getMapFields } from '../../../api/metadata';\n\nimport {\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_REPORT,\n    EVENT_CHART,\n    itemTypeMap,\n} from '../../../modules/itemTypes';\nimport { getBaseUrl, getWithoutId } from '../../../modules/util';\nimport { getGridItemDomId } from '../../ItemGrid/gridUtil';\n\n//external plugins\nconst itemTypeToExternalPlugin = {\n    [MAP]: 'mapPlugin',\n    [EVENT_REPORT]: 'eventReportPlugin',\n    [EVENT_CHART]: 'eventChartPlugin',\n};\nconst hasIntegratedPlugin = type => [CHART, REPORT_TABLE].includes(type);\n\nconst getPlugin = type => {\n    if (hasIntegratedPlugin(type)) {\n        return true;\n    }\n    const pluginName = itemTypeToExternalPlugin[type];\n\n    return global[pluginName];\n};\n\nexport const THEMATIC_LAYER = 'thematic';\n\nexport const pluginIsAvailable = (item = {}, visualization = {}) => {\n    const type = visualization.activeType || item.type;\n\n    return !!getPlugin(type);\n};\n\nexport const extractFavorite = item => {\n    if (!isObject(item)) {\n        return null;\n    }\n\n    const propName = itemTypeMap[item.type].propName;\n\n    return (\n        item[propName] ||\n        item.reportTable ||\n        item.chart ||\n        item.map ||\n        item.eventReport ||\n        item.eventChart ||\n        {}\n    );\n};\n\nexport const extractMapView = map =>\n    map.mapViews && map.mapViews.find(mv => mv.layer.includes(THEMATIC_LAYER));\n\nexport const loadPlugin = (plugin, config, credentials) => {\n    if (!(plugin && plugin.load)) {\n        return;\n    }\n\n    plugin.url = credentials.baseUrl;\n    plugin.loadingIndicator = true;\n    plugin.dashboard = true;\n    if (credentials.auth) {\n        plugin.auth = credentials.auth;\n    }\n    plugin.load(config);\n};\n\nexport const getId = item => extractFavorite(item).id;\nexport const getName = item => extractFavorite(item).name;\nexport const getDescription = item => extractFavorite(item).description;\nexport const getLink = (item, d2) => {\n    const baseUrl = getBaseUrl(d2);\n    const appUrl = itemTypeMap[item.type].appUrl(getId(item));\n\n    return `${baseUrl}/${appUrl}`;\n};\n\nexport const load = async (\n    item,\n    visualization,\n    { credentials, activeType, options = {} }\n) => {\n    const config = {\n        ...visualization,\n        ...options,\n        el: getGridItemDomId(item.id),\n    };\n\n    const type = activeType || item.type;\n    const plugin = getPlugin(type);\n\n    loadPlugin(plugin, config, credentials);\n};\n\nexport const fetch = async item => {\n    const fetchedFavorite = await apiFetchFavorite(getId(item), item.type, {\n        fields: item.type === MAP ? getMapFields() : null,\n    });\n\n    return fetchedFavorite;\n};\n\nexport const resize = item => {\n    const plugin = getPlugin(item.type);\n\n    if (plugin && plugin.resize) {\n        plugin.resize(getGridItemDomId(item.id));\n    }\n};\n\nexport const unmount = (item, activeType) => {\n    const plugin = getPlugin(activeType);\n\n    if (plugin && plugin.unmount) {\n        plugin.unmount(getGridItemDomId(item.id));\n    }\n};\n\nexport const getVisualizationConfig = (\n    visualization,\n    originalType,\n    activeType\n) => {\n    if (originalType === MAP && originalType !== activeType) {\n        const extractedMapView = extractMapView(visualization);\n\n        if (extractedMapView === undefined) {\n            return null;\n        }\n\n        return getWithoutId({\n            ...visualization,\n            ...extractedMapView,\n            mapViews: undefined,\n            type: activeType === CHART ? VIS_TYPE_COLUMN : VIS_TYPE_PIVOT_TABLE,\n        });\n    } else if (originalType === REPORT_TABLE && activeType === CHART) {\n        // return getWithoutId({ ...visualization, type: VIS_TYPE_COLUMN });\n        const columns = visualization[AXIS_ID_COLUMNS].slice();\n        const rows = visualization[AXIS_ID_ROWS].slice();\n\n        const layout = {};\n\n        if (visualization.rows.length > 1) {\n            layout[AXIS_ID_ROWS] =\n                rows.length > 2\n                    ? rows.splice(0, 2)\n                    : rows.splice(0, rows.length);\n        } else {\n            layout[AXIS_ID_ROWS] = rows.length ? [rows.shift()] : rows;\n        }\n\n        layout[AXIS_ID_COLUMNS] = columns.length ? [columns.shift()] : columns;\n        layout[AXIS_ID_FILTERS] = [\n            ...visualization[AXIS_ID_FILTERS],\n            ...columns,\n            ...rows,\n        ];\n\n        return getWithoutId({\n            ...visualization,\n            ...layout,\n            type: VIS_TYPE_COLUMN,\n        });\n    } else if (originalType === CHART && activeType === REPORT_TABLE) {\n        return getWithoutId({\n            ...visualization,\n            type: VIS_TYPE_PIVOT_TABLE,\n        });\n    }\n\n    return getWithoutId(visualization);\n};\n","import isFunction from 'd2-utilizr/lib/isFunction';\n\nimport { orObject } from '../../modules/util';\n\n// Dimensions for the react-grid-layout\n\nexport const GRID_COMPACT_TYPE = 'vertical'; // vertical | horizonal | null\nexport const GRID_ROW_HEIGHT = 10;\nconst GRID_COLUMN_WIDTH_PX = 20;\nconst GRID_LAYOUT = 'FLEXIBLE'; // FIXED | FLEXIBLE\nexport const MARGIN = [10, 10];\n\nexport const NEW_ITEM_SHAPE = { x: 0, y: 0, w: 20, h: 29 };\n\n// Dimensions for getShape\n\nconst NUMBER_OF_ITEM_COLS = 2;\nconst GRID_COLUMNS = 60;\n\nexport const getGridColumns = () => {\n    switch (GRID_LAYOUT) {\n        case 'FLEXIBLE':\n            return GRID_COLUMNS;\n        case 'FIXED':\n            return Math.floor((window.innerWidth - 20) / GRID_COLUMN_WIDTH_PX);\n        default:\n            return GRID_COLUMNS;\n    }\n};\n\n// isNonNegativeInteger\n\nconst isNonNegativeInteger = x => Number.isInteger(x) && x >= 0;\n\n// Does the item have all the shape properties?\n\nexport const hasShape = item =>\n    isNonNegativeInteger(item.x) &&\n    isNonNegativeInteger(item.y) &&\n    isNonNegativeInteger(item.w) &&\n    isNonNegativeInteger(item.h);\n\n// returns a rectangular grid block dimensioned with x, y, w, h in grid units.\n// based on a grid with 3 items across\nexport const getShape = i => {\n    if (!isNonNegativeInteger(i)) {\n        throw new Error('Invalid grid block number');\n    }\n\n    const col = i % NUMBER_OF_ITEM_COLS;\n    const row = Math.floor(i / NUMBER_OF_ITEM_COLS);\n    const itemWidth = Math.floor((GRID_COLUMNS - 1) / NUMBER_OF_ITEM_COLS);\n    const itemHeight = GRID_ROW_HEIGHT * 2;\n\n    return {\n        x: col * itemWidth,\n        y: row * itemHeight,\n        w: itemWidth,\n        h: itemHeight,\n    };\n};\n\nexport const getGridItemProperties = itemId => {\n    return {\n        i: itemId,\n        minH: 4, // minimum height for item\n    };\n};\n\n/**\n * Calculates the grid item's original height in pixels based\n * on the height in grid units. This calculation\n * is copied directly from react-grid-layout GridItem.js (calcPosition)\n *\n * @param {Object} item item containing shape (x, y, w, h)\n */\nconst getOriginalHeight = item => {\n    const originalHeight = Math.round(\n        GRID_ROW_HEIGHT * item.h + Math.max(0, item.h - 1) * MARGIN[1]\n    );\n\n    return { originalHeight };\n};\n\n/**\n * Returns an array of items containing the x, y, w, h dimensions\n * and the item's originalheight in pixels\n * @function\n * @param {Array} items\n * @returns {Array}\n */\n\nexport const withShape = items =>\n    items.map((item, index) => {\n        const itemWithShape = hasShape(item)\n            ? item\n            : Object.assign({}, item, getShape(index));\n\n        return Object.assign(\n            {},\n            itemWithShape,\n            getOriginalHeight(itemWithShape)\n        );\n    });\n\nexport const getGridItemDomId = id => `item-${id}`;\n\nexport function onItemResize(id) {\n    const el = orObject(document.querySelector(`#${getGridItemDomId(id)}`));\n    if (isFunction(el.setViewportSize))\n        setTimeout(\n            () => el.setViewportSize(el.clientWidth - 5, el.clientHeight - 5),\n            10\n        );\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"showMoreButton\":\"CategorizedMenuGroup_showMoreButton__24-Ko\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"deleteItemButton\":\"DeleteItemButton_deleteItemButton__1ytNP\"};"],"sourceRoot":""}
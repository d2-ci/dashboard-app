{"version":3,"sources":["api/metadata.js","modules/itemTypes.js","components/Item/ListItem/Item.module.css","reducers/user.js","reducers/dashboards.js","reducers/editDashboard.js","reducers/editItemFilters.js","reducers/selected.js","actions/editItemFilters.js","reducers/itemFilters.js","actions/itemFilters.js","reducers/messages.js","api/messages.js","reducers/snackbar.js","actions/snackbar.js","reducers/visualizations.js","actions/visualizations.js","api/index.js","api/dashboards.js","components/SnackbarMessage/SnackbarMessage.js","actions/selected.js","api/localStorage.js","components/Item/MessagesItem/actions.js","api/editDashboard.js","actions/editDashboard.js","actions/dashboards.js","reducers/controlBar.js","api/controlBar.js","actions/controlBar.js","reducers/dimensions.js","reducers/settings.js","actions/dimensions.js","components/ControlBar/ShowMoreButton.js","components/ControlBar/controlBarDimensions.js","components/ControlBar/ControlBar.js","icons/Star.js","api/dataStatistics.js","components/ControlBar/DashboardItemChip.js","icons/AddCircle.js","icons/Clear.js","components/ControlBar/ClearButton.js","reducers/dashboardsFilter.js","components/ControlBar/Filter.js","components/ControlBar/DashboardsBar.js","actions/dashboardsFilter.js","components/Dashboard/DashboardVerticalOffset.js","components/ItemSelector/HeaderMenuItem.js","icons/Launch.js","components/ItemSelector/ContentMenuItem.js","components/ItemSelector/selectableItems.js","components/ItemSelector/CategorizedMenuGroup.js","components/ItemSelector/actions.js","components/ItemSelector/SinglesMenuGroup.js","components/ItemSelector/ItemSelector.js","components/TitleBar/EditTitleBar.js","components/ItemFilter/FilterDialog.js","reducers/activeModalDimension.js","actions/activeModalDimension.js","components/ItemFilter/FilterSelector.js","components/TitleBar/Info.js","components/TitleBar/ViewTitleBar.js","components/TitleBar/TitleBar.js","components/Item/VisualizationItem/DefaultPlugin.js","components/Item/VisualizationItem/assets/icons.js","components/Item/VisualizationItem/FatalErrorBoundary.js","components/Item/VisualizationItem/VisualizationErrorMessage.js","components/Item/DeleteItemButton.js","components/Item/ItemHeader.js","components/Item/VisualizationItem/ItemHeaderButtons.js","components/Item/VisualizationItem/ItemFooter.js","modules/memoizeOne.js","components/Item/VisualizationItem/LoadingMask.js","components/Item/VisualizationItem/Item.js","widgets/Line.js","components/Item/MessagesItem/Item.js","components/Item/NotSupportedItem/Item.js","icons/Description.js","icons/Delete.js","components/Item/ListItem/Item.js","components/Item/ListItem/actions.js","components/Item/TextItem/Item.js","components/Item/AppItem/Item.js","components/Item/SpacerItem/Item.js","components/Item/Item.js","widgets/NoContentMessage.js","components/Item/ProgressiveLoadingContainer.js","components/ItemGrid/ItemGrid.js","components/FilterBar/FilterBadge.js","components/FilterBar/FilterBar.js","components/Dashboard/DashboardContent.js","components/Dashboard/ViewDashboard.js","components/ControlBar/ConfirmDeleteDialog.js","components/ControlBar/EditBar.js","components/Dashboard/EditDashboard.js","components/Dashboard/NewDashboard.js","components/Dashboard/Dashboard.js","components/Dashboard/dashboardModes.js","components/App.js","actions/user.js","locales/index.js","reducers/style.js","reducers/index.js","configureStore.js","index.js","components/ControlBar/styles/DashboardsBar.module.css","components/ItemSelector/styles/ContentMenuItem.module.css","components/Item/styles/ItemHeader.module.css","modules/util.js","components/ControlBar/styles/ControlBar.module.css","components/Item/VisualizationItem/styles/FatalErrorBoundary.module.css","components/Item/VisualizationItem/styles/VisualizationErrorMessage.module.css","components/ControlBar/styles/ClearButton.module.css","components/Item/VisualizationItem/plugin.js","components/ItemGrid/gridUtil.js","components/ItemSelector/styles/CategorizedMenuGroup.module.css","components/Item/styles/DeleteItemButton.module.css"],"names":["getIdNameFields","rename","arguments","length","undefined","concat","getDimensionFields","_ref2","withItems","arrayClean","join","getAxesFields","_ref3","getFavoriteFields","_ref4","withDimensions","withOptions","getFavoritesFields","_ref5","Object","_home_runner_work_dashboard_app_dashboard_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","getListItemFields","getMapFields","favoriteFields","apiFetchFavorite","id","type","_ref6","fields","getInstance","then","d2","Api","getApi","get","getEndPointName","VISUALIZATION","REPORT_TABLE","CHART","MAP","EVENT_REPORT","EVENT_CHART","APP","REPORTS","RESOURCES","USERS","MESSAGES","TEXT","SPACER","spacerContent","emptyTextItemContent","isSpacerType","item","text","isTextType","isVisualizationType","itemTypeMap","hasMapView","itemType","domainType","isTrackerDomainType","getDefaultItemCount","defaultItemCount","getAppName","appName","_itemTypeMap","_home_runner_work_dashboard_app_dashboard_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","endPointName","propName","pluralTitle","i18n","t","appUrl","Function","prototype","Date","getTime","getItemUrl","url","launchUrl","getBaseUrl","getItemIcon","TableIcon","ChartIcon","MapIcon","ExtensionIcon","DescriptionIcon","PersonIcon","FontDownloadIcon","EmailIcon","CropFreeIcon","NotInterestedIcon","module","exports","list","itemicon","link","deleteicon","deletebutton","DEFAULT_STATE_USER","username","uiLocale","isSuperuser","sGetUserUsername","state","user","DEFAULT_STATE_DASHBOARDS","byId","items","updateDashboardProp","_ref","dashboardId","prop","value","objectSpread","defineProperty","sGetDashboardsRoot","dashboards","sGetDashboardById","orObject","sDashboardsIsFetching","sGetAllDashboards","sGetDashboardItems","sGetStarredDashboards","values","filter","dashboard","starred","sGetUnstarredDashboards","sGetDashboardsSortedByStarred","toConsumableArray","arraySort","getCustomDashboards","data","arrayFrom","map","d","name","displayName","description","displayDescription","favorite","owner","created","split","substr","lastUpdated","access","numberOfItems","orArray","dashboardItems","reportTable","chart","gridProperties","getGridItemProperties","DEFAULT_STATE_EDIT_DASHBOARD","NEW_DASHBOARD_STATE","sGetEditDashboardRoot","editDashboard","sGetIsEditing","isEmpty","sGetEditDashboardItems","DEFAULT_STATE_EDIT_ITEM_FILTERS","sGetEditItemFiltersRoot","editItemFilters","combineReducers","action","validateReducer","isLoading","showDescription","sGetSelectedRoot","selected","sGetSelectedId","sGetSelectedIsLoading","sGetSelectedShowDescription","acRemoveEditItemFilter","DEFAULT_STATE_ITEM_FILTERS","sGetItemFiltersRoot","itemFilters","sGetFiltersKeys","keys","acRemoveItemFilter","sGetMessagesRoot","messages","getMessages","catch","error","console","log","DEFAULT_STATE_SNACKBAR","message","duration","open","acCloseSnackbar","DEFAULT_STATE_VISUALIZATIONS","p","sGetVisualization","visualizations","sGetVisualizationsRoot","acAddVisualization","onError","getDashboardItemsFields","withFavorite","getDashboardFields","apiFetchDashboard","models","apiStarDashboard","isStarred","post","delete","apiDeleteDashboard","loadingDashboardMsg","SnackbarMessageContent","react_default","a","createElement","style","fontWeight","connect","_sGetSnackbar","snackbar","sGetSnackbar","snackbarOpen","snackbarMessage","snackbarDuration","onCloseSnackbar","props","Snackbar_default","zIndex","SnackbarMessage_SnackbarMessageContent","autoHideDuration","onClose","acSetSelectedId","acSetSelectedIsLoading","tLoadDashboard","asyncToGenerator","regenerator_default","mark","_callee","dispatch","dash","wrap","_context","prev","next","sent","acAppendDashboards","abrupt","Promise","resolve","t0","stop","_x","apply","this","tSetSelectedDashboardById","_callee2","getState","snackbarTimeout","onSuccess","_context2","setTimeout","dashboardName","customDashboard","acSetDashboardItems","withShape","localStorage","setItem","forEach","extractFavorite","messageConversations","filters","clearTimeout","_x2","_x3","saveDashboard","assign","width","w","height","h","save","msg","response","uid","updateDashboard","postDashboard","create","acAddDashboardItem","itemPropName","generateUid","gridItemProperties","content","NEW_ITEM_SHAPE","acUpdateDashboardItem","acRemoveDashboardItem","arrayToIdMap","acSetDashboardStarred","tFetchDashboards","collection","paging","toArray","userRows","sGetControlBarUserRows","controlBar","sGetControlBarRoot","KEY","hasNamespace","currentUser","dataStore","has","getNamespace","apiGetControlBarRows","_callee3","namespace","_context3","t1","t2","find","key","apiPostControlBarRows","_callee4","rows","_context4","set","_x4","_x5","acSetControlBarUserRows","getDefaultDimensions","DIMENSION_ID_PERIOD","DIMENSION_ID_ORGUNIT","dimensionId","_getDimensionById","getDimensionById","iconName","sGetDimensions","dimensions","DEFAULT_SETTINGS","keyDateFormat","keyAnalysisRelativePeriod","keyAnalysisDigitGroupSeparator","displayNameProperty","rootOrganisationUnit","sGetSettings","settings","sGetSettingsDisplayNameProperty","acSetDimensions","styles","showMore","color","colors","grey700","cursor","fontSize","paddingTop","&:hover","textDecoration","disabled","grey500","withStyles","onClick","isMaxHeight","classes","textAlign","className","MIN_ROW_COUNT","getRowsHeight","getNumRowsFromHeight","Math","floor","FIRST_ROW_PADDING_HEIGHT","getTopOffset","getControlBarHeight","ControlBar","_this","classCallCheck","_super","call","onStartDrag","setState","dragging","window","addEventListener","onDrag","onEndDrag","event","preventDefault","stopPropagation","newHeight","clientY","onChangeHeight","requestAnimationFrame","removeEventListener","draghandle","onMouseDown","max","rootStyle","top","backgroundColor","editMode","yellow050","white","paddingBottom","transition","root","children","renderDragHandle","React","Component","defaultProps","StarIcon","xmlns","viewBox","fill","apiPostDataStatistics","eventType","chip","margin","grey600","display","verticalAlign","icon","marginTop","unselected","label","chipProps","selectedState","Star","Link","to","debounce","es_lib","AddCircleIcon","teal600","ClearIcon","grey800","ClearButton","onClear","button","Clear","ownerData","DEFAULT_STATE_DASHBOARDS_FILTER_NAME","DEFAULT_STATE_DASHBOARDS_FILTER_OWNER","order","sGetDashboardsFilterRoot","dashboardsFilter","sGetFilterName","KEYCODE_ENTER","KEYCODE_ESCAPE","filterField","searchIcon","Filter","_Component","inherits","Filter_createSuper","setFilterValue","onChangeName","target","handleKeyUp","keyCode","onKeypressEnter","createClass","nextProps","_this$props","startAdornment","InputAdornment_default","position","Search_default","endAdornment","ControlBar_ClearButton","Input_default","placeholder","onChange","onKeyUp","MAX_ROW_COUNT","DashboardsBar","DashboardsBar_createSuper","_len","args","Array","_key","setInitialDashboardState","adjustedHeight","newRows","newRowCount","min","onToggleMaxHeight","onSelectDashboard","history","push","selectedId","onChangeFilterName","rowCount","controlBarHeight","contentWrapperStyle","padding","overflowY","components_ControlBar_ControlBar","leftControls","marginRight","AddCircle","ControlBar_Filter","ControlBar_DashboardItemChip","ControlBar_ShowMoreButton","mapDispatchToProps","withRouter","stateProps","dispatchProps","ownProps","displayDashboards","toLowerCase","includes","HeaderMenuItem","title","dense","LaunchIcon","LaunchLink","e","launchLink","rel","href","Launch","InsertButton","buttonInsert","ContentMenuItem","onInsert","visType","ItemIcon","renderedItemIcon","visTypeIcons","menuItem","ContentMenuItem_LaunchLink","ContentMenuItem_InsertButton","singleItems","header","categorizedItems","listItemTypes","CategorizedMenuGroup","addItem","tAddListItemContent","newItem","toggleSeeMore","seeMore","onChangeItemsLimit","_this2","_this$props2","hasMore","react","ItemSelector_HeaderMenuItem","itemUrl","context","ItemSelector_ContentMenuItem","showMoreButton","contextTypes","PropTypes","object","isRequired","dashboardItem","listItemType","dashboardItemIndex","findIndex","category","addToDashboard","ItemSearchField","onFocus","ItemSelector","closeList","openList","_","fetchItems","anchorEl","currentTarget","setFilter","getCategorizedMenuGroups","itemCount","allItems","maxOptions","slice","ItemSelector_CategorizedMenuGroup","getSinglesMenuGroups","ItemSelector_SinglesMenuGroup","getMenuGroups","queryString","add","Set","ItemSelector_ItemSearchField","Popover_default","anchorOrigin","horizontal","vertical","transformOrigin","PaperProps","disableAutoFocus","disableRestoreFocus","EditTitleBar","onChangeTitle","onChangeDescription","section","titleDescription","itemSelector","components_ItemSelector_ItemSelector","selectedDashboard","justifyContent","flex","clear","underline","&::before","borderBottom","&:hover::before","input","borderRadius","peId","ouId","FilterDialog","onConfirm","dimension","selectedItems","dialogId","commonProps","onSelect","onDeselect","onReorder","build","selectedPeriods","ouItems","dialogTitle","Dialog_default","maxWidth","disableEnforceFocus","dialogContent","DialogActions_default","kind","DEFAULT_STATE_ACTIVE_MODAL_DIMENSION","sGetActiveModalDimension","activeModalDimension","acSetActiveModalDimension","FilterSelector","openPanel","closePanel","closeDialog","clearActiveModalDimension","selectDimension","setActiveModalDimension","onSelectItems","setEditItemFilters","onDeselectItems","itemIdsToRemove","newList","removeEditItemFilter","onReorderItems","itemIds","oldList","reorderedList","saveFilter","filterItems","addItemFilter","removeItemFilter","theme","selectedDimensions","ArrowDropDown_default","Boolean","fontFamily","typography","onDimensionClick","selectedIds","ItemFilter_FilterDialog","withTheme","Info","show","toggle","InfoOutlined_default","actions","alignItems","marginLeft","starIcon","textButton","minWidth","editLink","titleBar","titleBarIcon","ViewTitleBar","toggleSharingDialog","sharingDialogIsOpen","onStarClick","onInfoClick","titleStyle","userSelect","StarBorder","TitleBar_Info","update","manage","ItemFilter_FilterSelector","d2_ui_sharing_dialog_default","onRequestClose","tStarDashboard","black","TitleBar","edit","TitleBar_EditTitleBar","TitleBar_ViewTitleBar","DefaultPlugin","pluginCredentials","shouldPluginReload","prevProps","reloadAllowed","filtersChanged","vis","visualization","prevVis","visChanged","activeType","reloadPlugin","pluginManager","currentVis","useActiveType","credentials","getActiveType","baseUrl","auth","defaultHeaders","Authorization","options","getGridItemDomId","textDiv","ThreeDots","SpeechBubble","fillRule","transform","Warning","FatalErrorBoundary","errorFound","info","container","icons_Warning","VisualizationErrorMessage","visHref","center","errorMessage","appLink","DeleteItemButton","deleteItemButton","Delete_default","red500","HEADER_MARGIN_HEIGHT","ItemHeader","actionButtons","itemId","forwardedRef","itemHeaderWrap","ref","itemTitle","itemActionsWrap","Item_DeleteItemButton","ConnectedItemHeader","forwardRef","iconFill","ItemHeaderButtons","_useState","useState","_useState2","slicedToArray","setAnchorEl","onSelectActiveType","isTrackerType","onViewTable","handleClose","onViewChart","onViewMap","canViewAs","isSingleValue","isYearOverYear","VIS_TYPE_GAUGE","VIS_TYPE_PIE","interpretationMenuLabel","activeFooter","pluginIsAvailable","Fragment","small","secondary","icons_ThreeDots","InsertChart_default","ViewList_default","Public_default","Launch_default","getLink","icons_SpeechBubble","onToggleFooter","scrollContainer","line","border","grey100","ItemFooter","objectId","getId","d2_ui_interpretations_default","memoizeOne","fn","lastArgs","lastValue","every","arg","i","progress","spacing","unit","alignSelf","outer","CircularProgress_default","overflow","textOverflow","whiteSpace","fontStretch","lineHeight","loadingCover","left","background","Item","Item_createSuper","showFooter","configLoaded","pluginIsLoaded","isError","applyFilters","visRows","obj","visColumns","columns","visFilters","dimensionFound","dimensionObjects","getFilterVersion","uniqueId","getPluginComponent","calculatedHeight","originalHeight","headerRef","current","clientHeight","ITEM_CONTENT_PADDING_BOTTOM","memoizedGetContentStyle","contentRef","offsetHeight","VisualizationItem_VisualizationErrorMessage","memoizedGetVisualizationConfig","LoadingMask","data_visualizer_plugin_build_es_lib","memoizedApplyFilters","onLoadingComplete","forDashboard","mapViews","layer","hideTitle","VisualizationItem_DefaultPlugin","onToggleItemExpanded","getContentStyle","measuredHeight","createRef","getVisualizationConfig","_componentDidMount","onVisualizationLoaded","prevState","VisualizationItem_ItemHeaderButtons","Item_ItemHeader","VisualizationItem_FatalErrorBoundary","VisualizationItem_ItemFooter","acSetActiveVisualizationType","grey200","Line","PRIVATE","messageTypes","_messageTypes","listStyleType","paddingLeft","seeAll","marginBottom","sender","snippet","maxHeight","MessagesItem","getMessageHref","msgIdentifier","messageType","getMessageSender","latestMsg","getMessageItems","editClass","readClass","read","msgDate","document","location","messageCount","formatDate","userSettings","widgets_Line","string","MessagesContainer","NotSupportedItem","NotInterested_default","align","DeleteIcon","getItemTitle","ListItem","tRemoveListItemContent","contentItems","index","array","el","getContentItems","contentItem","Description","deleteButton","icons_Delete","grey900","newContent","textField","onChangeText","updatedItem","d2_ui_rich_text","onEdit","multiline","fullWidth","textDivStyle","viewItem","getIframeSrc","appDetails","iframeSrc","ouIds","ouFilter","path","AppItem","appKey","system","installedApps","app","src","SpacerItem","GridItem","VisualizationItem","TextItem","getGridItem","NoContentMessage","ProgressiveLoadingContainer","shouldLoad","containerRef","shouldLoadHandler","bufferPx","bufferFactor","innerHeight","rect","getBoundingClientRect","bottom","removeHandler","checkShouldLoad","debounceMs","registerHandler","_this3","objectWithoutProperties","eventProps","pick","EXPANDED_HEIGHT","ItemGrid","ItemGrid_createSuper","expandedItems","clickedId","isExpanded","onRemoveItem","onLayoutChange","newLayout","acUpdateDashboardLayout","onResizeStop","layout","oldItem","onItemResize","pluginResize","onRemoveItemWrapper","adjustHeightForExpanded","expandedItem","getItemComponent","itemClassNames","Item_ProgressiveLoadingContainer","Item_Item_Item","getItemComponents","widgets_NoContentMessage","react_grid_layout_default","MARGIN","cols","getGridColumns","rowHeight","GRID_ROW_HEIGHT","innerWidth","compactType","GRID_COMPACT_TYPE","isDraggable","isResizable","draggableCancel","validItems","hasShape","badgeContainer","badge","badgeRemove","FilterBadge","onRemove","count","FilterBar","FilterBar_createSuper","onBadgeRemove","onBadgeClick","bar","FilterBar_FilterBadge","removeItemFIlter","filtersSelector","createSelector","reduce","arr","flexWrap","DashboardContent","components_TitleBar_TitleBar","components_FilterBar_FilterBar","components_ItemGrid_ItemGrid","Content","hasDashboardContent","dashboardsIsEmpty","Dashboard_DashboardContent","dashboardsLoaded","contentNotReady","ControlBar_DashboardsBar","Dashboard_DashboardVerticalOffset","ViewDashboard_Content","ConfirmDeleteDialog","onDeleteConfirmed","onContinueEditing","destructive","DialogTitle_default","DialogContent_default","DialogContentText_default","buttonBarStyle","EditBar","EditBar_createSuper","translationDialogIsOpen","dashboardModel","confirmDeleteDialogOpen","redirectUrl","onConfirmDelete","onSave","newId","onDiscard","onDiscardChanges","onDelete","onTranslationsSaved","translations","dbLocale","translation","locale","property","onTranslate","fetchDashboardModel","toggleTranslationDialog","confirmDeleteDialog","deleteAccess","ControlBar_ConfirmDeleteDialog","translationDialog","d2_ui_translation_dialog_default","objectToTranslate","fieldsToTranslate","onTranslationSaved","onTranslationError","err","Redirect","updateAccess","discardBtnText","primary","rightControls","sGetIsNewDashboard","dashboardToSave","tDeleteDashboard","acSetDashboardDisplayName","EditDashboard","EditDashboard_createSuper","initialized","initEditDashboard","setEditDashboard","getDashboardContent","EditDashboard_Content","ControlBar_EditBar","NewDashboard","setNewDashboard","Dashboard","setDashboard","match","params","selectDashboard","scrollToTop","scrollTo","mode","Dashboard_EditDashboard","Dashboard_NewDashboard","Dashboard_ViewDashboard","dashboardToSelect","preferredId","getItem","App","App_createSuper","setCurrentUser","fetchDashboards","setControlBarRows","setDimensions","spacers","build_es_lib","HashRouter","Switch","Route","exact","render","components_Dashboard_Dashboard","components_SnackbarMessage_SnackbarMessage","childContextTypes","controlBarRows","displayNameProp","filteredDimensions","apiFetchDimensions","dim","dimensionType","dataDimensionType","tSetDimensions","moment","addResources","arTranslations","ar_IQTranslations","ckbTranslations","csTranslations","daTranslations","enTranslations","esTranslations","frTranslations","idTranslations","kmTranslations","loTranslations","myTranslations","nbTranslations","nlTranslations","prsTranslations","psTranslations","ptTranslations","pt_BRTranslations","roTranslations","ruTranslations","svTranslations","tetTranslations","tgTranslations","ukTranslations","urTranslations","uzTranslations","uz_CyrlTranslations","uz_LatnTranslations","viTranslations","zhTranslations","zh_CNTranslations","setDefaultNamespace","changeLanguage","objectClean","conversations","$merge","d2Object","keyUiLocale","authorities","newState","k","$unshift","idToRemove","$splice","stateItems","layoutHasChanged","newStateItems","x","y","stateItem","si","configureStore","middleware","thunk","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducer","applyMiddleware","configI18n","config","sources","manifest","isProd","getManifest","version","manifest_generated_at","process","activities","dhis","dhis2","apiVersion","headers","schemas","getUserSettings","d2Init","initializedD2","ReactDOM","lib","es","store","createMuiTheme","dhis2theme","src_components_App","getElementById","init","itemWrap","param","isArray","isObject","global","Intl","DateTimeFormat","year","month","day","format","replace","defaultValue","api","idx","indexOf","getWithoutId","_home_runner_work_dashboard_app_dashboard_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","itemTypeToExternalPlugin","_itemTypeToExternalPl","_home_runner_work_dashboard_app_dashboard_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_4__","getPlugin","hasIntegratedPlugin","eventReport","eventChart","loadPlugin","plugin","load","loadingIndicator","getName","_home_runner_work_dashboard_app_dashboard_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__","_home_runner_work_dashboard_app_dashboard_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","_ref$options","_home_runner_work_dashboard_app_dashboard_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_2__","fetch","fetchedFavorite","resize","unmount","originalType","extractedMapView","mv","VIS_TYPE_COLUMN","VIS_TYPE_PIVOT_TABLE","AXIS_ID_COLUMNS","AXIS_ID_ROWS","splice","shift","AXIS_ID_FILTERS","__webpack_require__","__webpack_exports__","d2_utilizr_lib_isFunction__WEBPACK_IMPORTED_MODULE_0__","d2_utilizr_lib_isFunction__WEBPACK_IMPORTED_MODULE_0___default","n","_modules_util__WEBPACK_IMPORTED_MODULE_1__","isNonNegativeInteger","Number","isInteger","minH","itemWithShape","Error","col","row","itemWidth","itemHeight","getShape","round","getOriginalHeight","querySelector","isFunction","setViewportSize","clientWidth"],"mappings":"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","file":"static/js/main.d57a3d57.chunk.js","sourcesContent":["import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\n\nimport { getEndPointName } from '../modules/itemTypes';\n\n// Id, name\nexport const getIdNameFields = ({ rename } = {}) => [\n    'id',\n    `${rename ? 'displayName~rename(name)' : 'name,displayName'}`,\n];\n\n// Item\nexport const getItemFields = () => [\n    'dimensionItem~rename(id)',\n    'displayName~rename(name)',\n    'dimensionItemType',\n];\n\n// Dimension\nexport const getDimensionFields = ({ withItems }) =>\n    arrayClean([\n        'dimension',\n        'legendSet[id]',\n        'filter',\n        'programStage',\n        withItems ? `items[${getItemFields().join(',')}]` : ``,\n    ]);\n\n// Axis\nexport const getAxesFields = ({ withItems }) => [\n    `columns[${getDimensionFields({ withItems }).join(',')}]`,\n    `rows[${getDimensionFields({ withItems }).join(',')}]`,\n    `filters[${getDimensionFields({ withItems }).join(',')}]`,\n];\n\n// Favorite\nexport const getFavoriteFields = ({ withDimensions, withOptions }) => {\n    return arrayClean([\n        `${getIdNameFields({ rename: true }).join(',')}`,\n        'displayDescription~rename(description)',\n        withDimensions ? `${getAxesFields({ withItems: true }).join(',')}` : ``,\n        withOptions\n            ? [\n                  '*',\n                  '!attributeDimensions',\n                  '!attributeValues',\n                  '!category',\n                  '!categoryDimensions',\n                  '!categoryOptionGroupSetDimensions',\n                  '!columnDimensions',\n                  '!dataDimensionItems',\n                  '!dataElementDimensions',\n                  '!dataElementGroupSetDimensions',\n                  '!filterDimensions',\n                  '!itemOrganisationUnitGroups',\n                  '!lastUpdatedBy',\n                  '!organisationUnitGroupSetDimensions',\n                  '!organisationUnitLevels',\n                  '!organisationUnits',\n                  '!programIndicatorDimensions',\n                  '!relativePeriods',\n                  '!reportParams',\n                  '!rowDimensions',\n                  '!series',\n                  '!translations',\n                  '!userOrganisationUnit',\n                  '!userOrganisationUnitChildren',\n                  '!userOrganisationUnitGrandChildren',\n              ].join(',')\n            : '',\n    ]);\n};\n\nexport const getFavoritesFields = ({ withDimensions }) => [\n    `reportTable[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `chart[${['type', ...getFavoriteFields({ withDimensions })].join(',')}]`,\n    `map[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `eventReport[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `eventChart[${getFavoriteFields({ withDimensions }).join(',')}]`,\n];\n\n// List item\nexport const getListItemFields = () => [\n    `reports[${['type', ...getIdNameFields({ rename: true })].join(',')}]`,\n    `resources[${getIdNameFields({ rename: true }).join(',')}]`,\n    `users[${getIdNameFields({ rename: true }).join(',')}]`,\n];\n\n// Map\nexport const getMapFields = () => {\n    const favoriteFields = getFavoriteFields({\n        withDimensions: true,\n        withOptions: true,\n    });\n\n    const teFields =\n        'program[id,displayName~rename(name)],programStage[id,displayName~rename(name)],trackedEntityType[id,displayName~rename(name)]';\n\n    return [\n        `${getIdNameFields({ rename: true }).join(',')}`,\n        'user,longitude,latitude,zoom,basemap',\n        `mapViews[${favoriteFields.concat(teFields)}]`,\n    ];\n};\n\n// Api\n\n// Get more info about the favorite of a dashboard item\nexport const apiFetchFavorite = (id, type, { fields }) =>\n    getInstance().then(d2 =>\n        d2.Api.getApi().get(`${getEndPointName(type)}/${id}`, {\n            fields:\n                fields ||\n                getFavoriteFields({\n                    withDimensions: true,\n                    withOptions: true,\n                }),\n        })\n    );\n","import i18n from '@dhis2/d2-i18n';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\nimport ExtensionIcon from '@material-ui/icons/Extension';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport PersonIcon from '@material-ui/icons/Person';\nimport FontDownloadIcon from '@material-ui/icons/FontDownload';\nimport EmailIcon from '@material-ui/icons/Email';\nimport CropFreeIcon from '@material-ui/icons/CropFree';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nimport { getBaseUrl } from './util';\n\n// Item types\nexport const VISUALIZATION = 'VISUALIZATION';\nexport const REPORT_TABLE = 'REPORT_TABLE';\nexport const CHART = 'CHART';\nexport const MAP = 'MAP';\nexport const EVENT_REPORT = 'EVENT_REPORT';\nexport const EVENT_CHART = 'EVENT_CHART';\nexport const APP = 'APP';\nexport const REPORTS = 'REPORTS';\nexport const RESOURCES = 'RESOURCES';\nexport const USERS = 'USERS';\nexport const MESSAGES = 'MESSAGES';\nexport const TEXT = 'TEXT';\nexport const SPACER = 'SPACER';\n\nconst DOMAIN_TYPE_AGGREGATE = 'AGGREGATE';\nconst DOMAIN_TYPE_TRACKER = 'TRACKER';\n\n// Dashboard helpers\nexport const spacerContent = 'SPACER_ITEM_FOR_DASHBOARD_LAYOUT_CONVENIENCE';\nexport const emptyTextItemContent = 'TEXT_ITEM_WITH_NO_CONTENT';\nexport const isSpacerType = item =>\n    item.type === TEXT && item.text === spacerContent;\nexport const isTextType = item =>\n    item.type === TEXT && item.text !== spacerContent;\nexport const isVisualizationType = item =>\n    !!itemTypeMap[item.type].isVisualizationType;\nexport const hasMapView = itemType =>\n    itemTypeMap[itemType].domainType === DOMAIN_TYPE_AGGREGATE;\nexport const isTrackerDomainType = itemType =>\n    itemTypeMap[itemType].domainType === DOMAIN_TYPE_TRACKER;\nexport const getDefaultItemCount = itemType =>\n    itemTypeMap[itemType].defaultItemCount || 5;\nexport const getAppName = itemType => itemTypeMap[itemType].appName() || '';\n\n// Item type map\nexport const itemTypeMap = {\n    [VISUALIZATION]: {\n        id: VISUALIZATION,\n        endPointName: 'visualizations',\n        propName: 'visualization',\n        pluralTitle: () => i18n.t('Visualizations'),\n        appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n        appName: () => i18n.t('Data Visualizer'),\n        defaultItemCount: 10,\n    },\n    [REPORT_TABLE]: {\n        id: REPORT_TABLE,\n        endPointName: 'visualizations',\n        propName: 'visualization',\n        pluralTitle: () => i18n.t('Pivot tables'),\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n        appName: () => i18n.t('Data Visualizer'),\n    },\n    [CHART]: {\n        id: CHART,\n        endPointName: 'visualizations',\n        propName: 'visualization',\n        pluralTitle: () => i18n.t('Charts'),\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n        appName: () => i18n.t('Data Visualizer'),\n    },\n    [MAP]: {\n        id: MAP,\n        endPointName: 'maps',\n        propName: 'map',\n        pluralTitle: () => i18n.t('Maps'),\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-maps/?id=${id}`,\n        appName: () => i18n.t('Maps'),\n    },\n    [EVENT_REPORT]: {\n        id: EVENT_REPORT,\n        endPointName: 'eventReports',\n        propName: 'eventReport',\n        pluralTitle: () => i18n.t('Event reports'),\n        domainType: DOMAIN_TYPE_TRACKER,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-event-reports/?id=${id}`,\n        appName: () => i18n.t('Event Reports'),\n    },\n    [EVENT_CHART]: {\n        id: EVENT_CHART,\n        endPointName: 'eventCharts',\n        propName: 'eventChart',\n        pluralTitle: () => i18n.t('Event charts'),\n        domainType: DOMAIN_TYPE_TRACKER,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-event-visualizer/?id=${id}`,\n        appName: () => i18n.t('Event Visualizer'),\n    },\n    [APP]: {\n        endPointName: 'apps',\n        propName: 'appKey',\n        pluralTitle: () => i18n.t('Apps'),\n        appName: Function.prototype,\n    },\n    [REPORTS]: {\n        id: REPORTS,\n        endPointName: 'reports',\n        propName: 'reports',\n        pluralTitle: () => i18n.t('Reports'),\n        appUrl: (id, type) => {\n            switch (type) {\n                case 'HTML':\n                    return `dhis-web-reports/#/standard-report/view/${id}`;\n\n                case 'JASPER_REPORT_TABLE':\n                case 'JASPER_JDBC':\n                default:\n                    return `api/reports/${id}/data.pdf?t=${new Date().getTime()}`;\n            }\n        },\n        appName: Function.prototype,\n    },\n    [RESOURCES]: {\n        id: RESOURCES,\n        endPointName: 'resources',\n        propName: 'resources',\n        pluralTitle: () => i18n.t('Resources'),\n        appUrl: id => `api/documents/${id}/data`,\n        appName: Function.prototype,\n    },\n    [USERS]: {\n        id: USERS,\n        endPointName: 'users',\n        propName: 'users',\n        pluralTitle: () => i18n.t('Users'),\n        appUrl: id => `dhis-web-dashboard-integration/profile.action?id=${id}`,\n        appName: Function.prototype,\n    },\n    [TEXT]: {\n        id: TEXT,\n        propName: 'text',\n    },\n    [MESSAGES]: {\n        propName: 'messages',\n    },\n    [SPACER]: {\n        propName: 'text',\n    },\n};\n\nexport const getEndPointName = type => itemTypeMap[type].endPointName;\n\nexport const getItemUrl = (type, item, d2) => {\n    let url;\n\n    if (type === APP) {\n        url = item.launchUrl;\n    }\n\n    if (itemTypeMap[type] && itemTypeMap[type].appUrl) {\n        url = `${getBaseUrl(d2)}/${itemTypeMap[type].appUrl(\n            item.id,\n            item.type\n        )}`;\n    }\n\n    return url;\n};\n\nexport const getItemIcon = type => {\n    switch (type) {\n        case REPORT_TABLE:\n        case EVENT_REPORT:\n        case REPORTS:\n            return TableIcon;\n        case CHART:\n        case EVENT_CHART:\n            return ChartIcon;\n        case MAP:\n            return MapIcon;\n        case APP:\n            return ExtensionIcon;\n        case RESOURCES:\n            return DescriptionIcon;\n        case USERS:\n            return PersonIcon;\n        case TEXT:\n            return FontDownloadIcon;\n        case MESSAGES:\n            return EmailIcon;\n        case SPACER:\n            return CropFreeIcon;\n        default:\n            return NotInterestedIcon;\n    }\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Item_list__3Uzbv\",\"item\":\"Item_item__8Iaca\",\"itemicon\":\"Item_itemicon__1X_uy\",\"link\":\"Item_link__30-BO\",\"deleteicon\":\"Item_deleteicon__2-Ewn\",\"deletebutton\":\"Item_deletebutton__pXLo4\"};","export const RECEIVED_USER = 'RECEIVED_USER';\n\nexport const DEFAULT_STATE_USER = {\n    id: '',\n    username: '',\n    uiLocale: '',\n    isSuperuser: false,\n};\n\nexport default (state = DEFAULT_STATE_USER, action) => {\n    switch (action.type) {\n        case RECEIVED_USER: {\n            return fromD2ToUserObj(action.value);\n        }\n        default:\n            return state;\n    }\n};\n\nfunction fromD2ToUserObj(d2Object) {\n    return {\n        id: d2Object.id,\n        username: d2Object.username,\n        uiLocale: d2Object.settings.keyUiLocale,\n        isSuperuser: d2Object.authorities.has('ALL'),\n    };\n}\n\n// selectors\n\nexport const sGetUserId = state => state.user.id;\nexport const sGetUserUsername = state => state.user.username;\nexport const sGetIsSuperuser = state => state.user.isSuperuser;\nexport const sGetUiLocale = state => state.user.uiLocale;\n","/** @module reducers/dashboards */\n\nimport arrayFrom from 'd2-utilizr/lib/arrayFrom';\nimport arraySort from 'd2-utilizr/lib/arraySort';\n\nimport { orArray, orObject } from '../modules/util';\nimport {\n    SPACER,\n    isSpacerType,\n    isTextType,\n    emptyTextItemContent,\n    REPORT_TABLE,\n    CHART,\n    VISUALIZATION,\n} from '../modules/itemTypes';\nimport { getGridItemProperties } from '../components/ItemGrid/gridUtil';\n\nexport const SET_DASHBOARDS = 'SET_DASHBOARDS';\nexport const ADD_DASHBOARDS = 'ADD_DASHBOARDS';\nexport const SET_DASHBOARD_STARRED = 'SET_DASHBOARD_STARRED';\nexport const SET_DASHBOARD_DISPLAY_NAME = 'SET_DASHBOARD_DISPLAY_NAME';\nexport const SET_DASHBOARD_ITEMS = 'SET_DASHBOARD_ITEMS';\n\nexport const DEFAULT_STATE_DASHBOARDS = {\n    byId: null,\n    items: [],\n};\n\n// reducer helper functions\n\nconst updateDashboardProp = ({ state, dashboardId, prop, value }) => ({\n    byId: {\n        ...state.byId,\n        [dashboardId]: {\n            ...state.byId[dashboardId],\n            [prop]: value,\n        },\n    },\n    items: state.items,\n});\n\n/**\n * Reducer that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n * @returns {Object}\n */\nexport default (state = DEFAULT_STATE_DASHBOARDS, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS: {\n            return {\n                byId: action.value,\n                items: [],\n            };\n        }\n        case ADD_DASHBOARDS: {\n            return {\n                ...state,\n                byId: {\n                    ...state.byId,\n                    ...action.value,\n                },\n            };\n        }\n        case SET_DASHBOARD_STARRED: {\n            return updateDashboardProp({\n                state,\n                dashboardId: action.dashboardId,\n                prop: 'starred',\n                value: action.value,\n            });\n        }\n        case SET_DASHBOARD_DISPLAY_NAME: {\n            return updateDashboardProp({\n                state,\n                dashboardId: action.dashboardId,\n                prop: 'displayName',\n                value: action.value,\n            });\n        }\n        case SET_DASHBOARD_ITEMS: {\n            return {\n                ...state,\n                items: action.value,\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// root selector\n\nexport const sGetDashboardsRoot = state => state.dashboards;\n\n// selector level 1\n\n/**\n * Selector which returns a dashboard by id from the state object\n * If no matching dashboard is found it returns undefined\n * If dashboards.byId is null, then the dashboards api request\n * has not yet completed. If dashboards.byId is an empty object\n * then the dashboards api request is complete, but no dashboards\n * were returned\n *\n * @function\n * @param {Object} state The current state\n * @param {Number} id The id of the dashboard\n * @returns {Object | undefined}\n */\nexport const sGetDashboardById = (state, id) =>\n    orObject(sGetDashboardsRoot(state).byId)[id];\n\nexport const sDashboardsIsFetching = state => {\n    return sGetDashboardsRoot(state).byId === null;\n};\n\n/**\n * Selector which returns all dashboards (the byId object)\n *\n * @function\n * @param {Object} state The current state\n * @returns {Object | undefined}\n */\nexport const sGetAllDashboards = state =>\n    orObject(sGetDashboardsRoot(state).byId);\n\n/**\n * Selector which returns the current dashboard items\n *\n * @function\n * @param {Object} state The current state\n * @returns {Array}\n */\nexport const sGetDashboardItems = state => sGetDashboardsRoot(state).items;\n\n// selector level 2\n\nexport const sGetStarredDashboards = state =>\n    Object.values(sGetAllDashboards(state)).filter(\n        dashboard => dashboard.starred === true\n    );\n\nexport const sGetUnstarredDashboards = state =>\n    Object.values(sGetAllDashboards(state)).filter(\n        dashboard => dashboard.starred === false\n    );\n\n// selector level 3\n\nexport const sGetStarredDashboardIds = state => {\n    return sGetStarredDashboards(state).map(dashboard => dashboard.id);\n};\n\nexport const sGetUnstarredDashboardIds = state =>\n    sGetUnstarredDashboards(state).map(dashboard => dashboard.id);\n\nexport const sGetDashboardsSortedByStarred = state => [\n    ...arraySort(sGetStarredDashboards(state), 'ASC', 'displayName'),\n    ...arraySort(sGetUnstarredDashboards(state), 'ASC', 'displayName'),\n];\n\n// utils\n\n/**\n * Returns the array of dashboards, customized for ui\n * @function\n * @param {Array} data The original dashboard list\n * @returns {Array}\n */\nexport const getCustomDashboards = data => {\n    const uiItems = items =>\n        items.map(item => {\n            let type = isSpacerType(item) ? SPACER : item.type;\n\n            // TODO: temporary fix before 2.34 epic branch is merged\n            // if \"VISUALIZATION\", reset to \"REPORT_TABLE\" or \"CHART\"\n            if (type === VISUALIZATION) {\n                type = item.reportTable\n                    ? REPORT_TABLE\n                    : item.chart\n                    ? CHART\n                    : type;\n            }\n\n            const text = isTextType(item)\n                ? item.text === emptyTextItemContent\n                    ? ''\n                    : item.text\n                : null;\n\n            const gridProperties = getGridItemProperties(item.id);\n\n            return {\n                ...item,\n                ...(text !== null ? { text } : {}),\n                type,\n                ...gridProperties,\n            };\n        });\n\n    return arrayFrom(data).map(d => ({\n        id: d.id,\n        name: d.name,\n        displayName: d.displayName,\n        description: d.description,\n        displayDescription: d.displayDescription,\n        starred: d.favorite,\n        owner: d.user.name,\n        created: d.created\n            .split('T')\n            .join(' ')\n            .substr(0, 16),\n        lastUpdated: d.lastUpdated\n            .split('T')\n            .join(' ')\n            .substr(0, 16),\n        access: d.access,\n        numberOfItems: orArray(d.dashboardItems).length,\n        dashboardItems: uiItems(d.dashboardItems),\n    }));\n};\n","/** @module reducers/editDashboard */\nimport update from 'immutability-helper';\nimport isEmpty from 'lodash/isEmpty';\nimport { orArray, orObject } from '../modules/util';\n\nexport const RECEIVED_EDIT_DASHBOARD = 'RECEIVED_EDIT_DASHBOARD';\nexport const RECEIVED_NOT_EDITING = 'RECEIVED_NOT_EDITING';\nexport const START_NEW_DASHBOARD = 'START_NEW_DASHBOARD';\nexport const RECEIVED_TITLE = 'RECEIVED_TITLE';\nexport const RECEIVED_DESCRIPTION = 'RECEIVED_DESCRIPTION';\nexport const ADD_DASHBOARD_ITEM = 'ADD_DASHBOARD_ITEM';\nexport const REMOVE_DASHBOARD_ITEM = 'REMOVE_DASHBOARD_ITEM';\nexport const UPDATE_DASHBOARD_ITEM = 'UPDATE_DASHBOARD_ITEM';\nexport const RECEIVED_DASHBOARD_LAYOUT = 'RECEIVED_DASHBOARD_LAYOUT';\n\nexport const DEFAULT_STATE_EDIT_DASHBOARD = {};\nexport const NEW_DASHBOARD_STATE = {\n    id: '',\n    name: '',\n    access: {},\n    description: '',\n    dashboardItems: [],\n};\n\nexport default (state = DEFAULT_STATE_EDIT_DASHBOARD, action) => {\n    switch (action.type) {\n        case RECEIVED_EDIT_DASHBOARD: {\n            const newState = {};\n            Object.keys(NEW_DASHBOARD_STATE).map(\n                k => (newState[k] = action.value[k])\n            );\n            return newState;\n        }\n        case RECEIVED_NOT_EDITING:\n            return DEFAULT_STATE_EDIT_DASHBOARD;\n        case START_NEW_DASHBOARD:\n            return NEW_DASHBOARD_STATE;\n        case RECEIVED_TITLE: {\n            return Object.assign({}, state, { name: action.value });\n        }\n        case RECEIVED_DESCRIPTION: {\n            return Object.assign({}, state, {\n                description: action.value,\n            });\n        }\n        case ADD_DASHBOARD_ITEM:\n            return update(state, {\n                dashboardItems: { $unshift: [action.value] },\n            });\n        case REMOVE_DASHBOARD_ITEM: {\n            const idToRemove = action.value;\n\n            const dashboardItemIndex = state.dashboardItems.findIndex(\n                item => item.id === idToRemove\n            );\n\n            if (dashboardItemIndex > -1) {\n                return update(state, {\n                    dashboardItems: {\n                        $splice: [[dashboardItemIndex, 1]],\n                    },\n                });\n            }\n\n            return state;\n        }\n        case RECEIVED_DASHBOARD_LAYOUT: {\n            const stateItems = orArray(state.dashboardItems);\n            let layoutHasChanged = false;\n\n            const newStateItems = action.value.map(({ x, y, w, h, i }) => {\n                const stateItem = stateItems.find(si => si.id === i);\n\n                if (\n                    !(\n                        stateItem.x === x &&\n                        stateItem.y === y &&\n                        stateItem.w === w &&\n                        stateItem.h === h\n                    )\n                ) {\n                    layoutHasChanged = true;\n                    return Object.assign({}, stateItem, { w, h, x, y });\n                }\n\n                return stateItem;\n            });\n\n            return layoutHasChanged\n                ? {\n                      ...state,\n                      dashboardItems: newStateItems,\n                  }\n                : state;\n        }\n        case UPDATE_DASHBOARD_ITEM: {\n            const dashboardItem = action.value;\n\n            const dashboardItemIndex = state.dashboardItems.findIndex(\n                item => item.id === dashboardItem.id\n            );\n\n            if (dashboardItemIndex > -1) {\n                const newState = update(state, {\n                    dashboardItems: {\n                        $splice: [\n                            [\n                                dashboardItemIndex,\n                                1,\n                                Object.assign({}, dashboardItem),\n                            ],\n                        ],\n                    },\n                });\n\n                return newState;\n            }\n\n            return state;\n        }\n        default:\n            return state;\n    }\n};\n\n// root selector\n\nexport const sGetEditDashboardRoot = state => state.editDashboard;\n\n// selectors\n\nexport const sGetIsEditing = state => !isEmpty(state.editDashboard);\n\nexport const sGetIsNewDashboard = state => {\n    return (\n        !isEmpty(state.editDashboard) && sGetEditDashboardRoot(state).id === ''\n    );\n};\n\nexport const sGetEditDashboardItems = state =>\n    orObject(sGetEditDashboardRoot(state)).dashboardItems;\n","export const CLEAR_EDIT_ITEM_FILTERS = 'CLEAR_EDIT_ITEM_FILTERS';\nexport const REMOVE_EDIT_ITEM_FILTER = 'REMOVE_EDIT_ITEM_FILTER';\nexport const SET_EDIT_ITEM_FILTERS = 'SET_EDIT_ITEM_FILTERS';\n\nexport const DEFAULT_STATE_EDIT_ITEM_FILTERS = {};\n\nexport default (state = DEFAULT_STATE_EDIT_ITEM_FILTERS, action) => {\n    switch (action.type) {\n        case REMOVE_EDIT_ITEM_FILTER: {\n            const newState = { ...state };\n\n            delete newState[action.id];\n\n            return newState;\n        }\n        case SET_EDIT_ITEM_FILTERS: {\n            return action.filters;\n        }\n        case CLEAR_EDIT_ITEM_FILTERS: {\n            return DEFAULT_STATE_EDIT_ITEM_FILTERS;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetEditItemFiltersRoot = state => state.editItemFilters;\n\nexport const sGetEditFiltersKeys = state =>\n    Object.keys(sGetEditItemFiltersRoot(state));\n","/** @module reducers/selected */\nimport { combineReducers } from 'redux';\n\nimport { validateReducer } from '../modules/util';\n\nexport const SET_SELECTED_ID = 'SET_SELECTED_ID';\nexport const SET_SELECTED_ISLOADING = 'SET_SELECTED_ISLOADING';\nexport const SET_SELECTED_SHOWDESCRIPTION = 'SET_SELECTED_SHOWDESCRIPTION';\n\nexport const DEFAULT_STATE_SELECTED_ID = null;\nexport const DEFAULT_STATE_SELECTED_ISLOADING = false;\nexport const DEFAULT_STATE_SELECTED_SHOWDESCRIPTION = false;\n\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\nconst id = (state = DEFAULT_STATE_SELECTED_ID, action) => {\n    switch (action.type) {\n        case SET_SELECTED_ID:\n            return validateReducer(action.value, DEFAULT_STATE_SELECTED_ID);\n        default:\n            return state;\n    }\n};\n\nconst isLoading = (state = DEFAULT_STATE_SELECTED_ISLOADING, action) => {\n    switch (action.type) {\n        case SET_SELECTED_ISLOADING:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_SELECTED_ISLOADING\n            );\n        default:\n            return state;\n    }\n};\n\nconst showDescription = (\n    state = DEFAULT_STATE_SELECTED_SHOWDESCRIPTION,\n    action\n) => {\n    switch (action.type) {\n        case SET_SELECTED_SHOWDESCRIPTION:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_SELECTED_SHOWDESCRIPTION\n            );\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    id,\n    isLoading,\n    showDescription,\n});\n\n// Selectors\n\nexport const sGetSelectedRoot = state => state.selected;\n\nexport const sGetSelectedId = state => sGetSelectedRoot(state).id;\n\nexport const sGetSelectedIsLoading = state => sGetSelectedRoot(state).isLoading;\n\nexport const sGetSelectedShowDescription = state =>\n    sGetSelectedRoot(state).showDescription;\n","import {\n    REMOVE_EDIT_ITEM_FILTER,\n    SET_EDIT_ITEM_FILTERS,\n    CLEAR_EDIT_ITEM_FILTERS,\n} from '../reducers/editItemFilters';\n\n// actions\n\nexport const acRemoveEditItemFilter = id => ({\n    type: REMOVE_EDIT_ITEM_FILTER,\n    id,\n});\n\nexport const acClearEditItemFilters = () => ({\n    type: CLEAR_EDIT_ITEM_FILTERS,\n});\n\nexport const acSetEditItemFilters = filters => ({\n    type: SET_EDIT_ITEM_FILTERS,\n    filters,\n});\n","export const CLEAR_ITEM_FILTERS = 'CLEAR_ITEM_FILTERS';\nexport const SET_ITEM_FILTERS = 'SET_ITEM_FILTERS';\nexport const ADD_ITEM_FILTER = 'ADD_ITEM_FILTER';\nexport const REMOVE_ITEM_FILTER = 'REMOVE_ITEM_FILTER';\n\nexport const DEFAULT_STATE_ITEM_FILTERS = {};\n\nexport default (state = DEFAULT_STATE_ITEM_FILTERS, action) => {\n    switch (action.type) {\n        case ADD_ITEM_FILTER: {\n            return {\n                ...state,\n                [action.filter.id]: action.filter.value,\n            };\n        }\n        case REMOVE_ITEM_FILTER: {\n            const newState = { ...state };\n\n            delete newState[action.id];\n\n            return newState;\n        }\n        case SET_ITEM_FILTERS: {\n            return action.filters;\n        }\n        case CLEAR_ITEM_FILTERS: {\n            return DEFAULT_STATE_ITEM_FILTERS;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetItemFiltersRoot = state => state.itemFilters;\n\nexport const sGetFiltersKeys = state => Object.keys(sGetItemFiltersRoot(state));\n","import {\n    ADD_ITEM_FILTER,\n    REMOVE_ITEM_FILTER,\n    SET_ITEM_FILTERS,\n    CLEAR_ITEM_FILTERS,\n} from '../reducers/itemFilters';\n\nexport const FILTER_ORG_UNIT = 'ou';\n\n// actions\n\nexport const acAddItemFilter = filter => ({\n    type: ADD_ITEM_FILTER,\n    filter,\n});\n\nexport const acRemoveItemFilter = id => ({\n    type: REMOVE_ITEM_FILTER,\n    id,\n});\n\nexport const acClearItemFilters = () => ({\n    type: CLEAR_ITEM_FILTERS,\n});\n\nexport const acSetItemFilters = filters => ({\n    type: SET_ITEM_FILTERS,\n    filters,\n});\n","import update from 'immutability-helper';\nimport { arrayToIdMap } from '../modules/util';\n\nexport const RECEIVED_MESSAGES = 'RECEIVED_MESSAGES';\n\nexport default (state = {}, action) => {\n    switch (action.type) {\n        case RECEIVED_MESSAGES: {\n            const conversations = arrayToIdMap(action.value);\n\n            const newState = update(state, { $merge: conversations });\n\n            return newState;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetMessagesRoot = state => state.messages;\n","import { getInstance } from 'd2';\n\nexport const getMessages = () => {\n    const fields =\n        'id,messageCount,lastUpdated,messageType,displayName,read,messages[id,read,sender[id,displayName],text,lastUpdated]';\n    const url = `/messageConversations?fields=${fields}&order=read:asc&pageSize=200`;\n    return getInstance()\n        .then(d2 => d2.Api.getApi().get(url))\n        .catch(error => console.log('Error:', error));\n};\n","export const RECEIVED_SNACKBAR_MESSAGE = 'RECEIVED_SNACKBAR_MESSAGE';\nexport const CLOSE_SNACKBAR = 'CLOSE_SNACKBAR';\n\nexport const DEFAULT_STATE_SNACKBAR = {\n    message: {},\n    duration: null,\n    open: false,\n};\n\nexport default (state = DEFAULT_STATE_SNACKBAR, action) => {\n    switch (action.type) {\n        case RECEIVED_SNACKBAR_MESSAGE: {\n            return { ...state, ...action.value };\n        }\n        case CLOSE_SNACKBAR: {\n            return DEFAULT_STATE_SNACKBAR;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetSnackbar = state => state.snackbar || DEFAULT_STATE_SNACKBAR;\n","import {\n    RECEIVED_SNACKBAR_MESSAGE,\n    CLOSE_SNACKBAR,\n} from '../reducers/snackbar';\n\nexport const acReceivedSnackbarMessage = value => ({\n    type: RECEIVED_SNACKBAR_MESSAGE,\n    value,\n});\n\nexport const acCloseSnackbar = () => ({\n    type: CLOSE_SNACKBAR,\n});\n","import { orObject } from '../modules/util';\nimport objectClean from 'd2-utilizr/lib/objectClean';\n\n/** @module reducers/visualizations */\n\nexport const ADD_VISUALIZATION = 'ADD_VISUALIZATION';\nexport const SET_ACTIVE_VISUALIZATION_TYPE = 'SET_ACTIVE_VISUALIZATION_TYPE';\n\nexport const DEFAULT_STATE_VISUALIZATIONS = {};\n\nconst isEmpty = p => p === undefined || p === null;\n\nexport default (state = DEFAULT_STATE_VISUALIZATIONS, action) => {\n    switch (action.type) {\n        case ADD_VISUALIZATION: {\n            return {\n                ...state,\n                [action.value.id]: objectClean(\n                    {\n                        ...orObject(state[action.value.id]),\n                        ...action.value,\n                    },\n                    isEmpty\n                ),\n            };\n        }\n        case SET_ACTIVE_VISUALIZATION_TYPE: {\n            return {\n                ...state,\n                [action.id]: objectClean(\n                    {\n                        ...orObject(state[action.id]),\n                        activeType: action.activeType,\n                    },\n                    isEmpty\n                ),\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// root selector\nexport const sGetVisualizationsRoot = state => state.visualizations;\n\n// selectors level 1\nexport const sGetVisualization = (state, id) => {\n    return sGetVisualizationsRoot(state)[id];\n};\n","import {\n    ADD_VISUALIZATION,\n    SET_ACTIVE_VISUALIZATION_TYPE,\n} from '../reducers/visualizations';\n\nexport const acAddVisualization = value => ({\n    type: ADD_VISUALIZATION,\n    value,\n});\n\nexport const acSetActiveVisualizationType = (id, activeType) => {\n    const action = {\n        type: SET_ACTIVE_VISUALIZATION_TYPE,\n        id,\n        activeType,\n    };\n\n    return action;\n};\n","import arrayClean from 'd2-utilizr/lib/arrayClean';\nimport {\n    getListItemFields,\n    getFavoritesFields,\n    getIdNameFields,\n} from './metadata';\n\n// Helper functions\n\nexport const onError = error => console.log('Error: ', error);\n\n// Dashboard item\nexport const getDashboardItemsFields = ({ withFavorite } = {}) =>\n    arrayClean([\n        'id',\n        'type',\n        'shape',\n        'x',\n        'y',\n        'width~rename(w)',\n        'height~rename(h)',\n        'messages',\n        'text',\n        'appKey',\n        `${getListItemFields().join(',')}`,\n        withFavorite\n            ? `${getFavoritesFields({\n                  withDimensions: withFavorite.withDimensions,\n              }).join(',')}`\n            : ``,\n    ]);\n\n// Dashboard\nexport const getDashboardFields = ({ withItems, withFavorite } = {}) =>\n    arrayClean([\n        `${getIdNameFields().join(',')}`,\n        'description',\n        'displayDescription',\n        'favorite',\n        `user[${getIdNameFields({ rename: true }).join(',')}]`,\n        'created',\n        'lastUpdated',\n        'access',\n        withItems\n            ? `dashboardItems[${getDashboardItemsFields({\n                  withFavorite,\n              }).join(',')}]`\n            : ``,\n    ]);\n","import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { onError, getDashboardFields } from './index';\n\n// Get \"all\" dashboards on startup\nexport const apiFetchDashboards = () =>\n    getInstance()\n        .then(d2 =>\n            d2.models.dashboard.list({\n                fields: [\n                    getDashboardFields().join(','),\n                    'dashboardItems[id]',\n                ].join(','),\n                paging: 'false',\n            })\n        )\n        .catch(onError);\n\n// Get more info about selected dashboard\nexport const apiFetchDashboard = id =>\n    getInstance()\n        .then(d2 =>\n            d2.models.dashboard.get(id, {\n                fields: arrayClean(\n                    getDashboardFields({\n                        withItems: true,\n                        withFavorite: { withDimensions: false },\n                    })\n                ).join(','),\n            })\n        )\n        .catch(onError);\n\n// Star dashboard\nexport const apiStarDashboard = (id, isStarred) => {\n    const url = `dashboards/${id}/favorite`;\n\n    getInstance().then(d2 => {\n        if (isStarred) {\n            d2.Api.getApi().post(url);\n        } else {\n            d2.Api.getApi().delete(url);\n        }\n    });\n};\n\nexport const apiDeleteDashboard = id => {\n    return getInstance()\n        .then(d2 => {\n            return d2.models.dashboards\n                .get(id)\n                .then(dashboard => dashboard.delete());\n        })\n        .catch(onError);\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport PropTypes from 'prop-types';\n\nimport { sGetSnackbar } from '../../reducers/snackbar';\nimport { acCloseSnackbar } from '../../actions/snackbar';\n\nconst LOADING_DASHBOARD = 'LOADING_DASHBOARD';\nexport const loadingDashboardMsg = { name: '', type: LOADING_DASHBOARD };\n\nconst SnackbarMessageContent = ({ message }) => {\n    if (typeof message === 'object') {\n        //future message types:  switch(message.type)\n        return (\n            <span>\n                Loading <span style={{ fontWeight: 800 }}>{message.name}</span>{' '}\n                dashboard\n            </span>\n        );\n    }\n    return message;\n};\n\nexport const SnackbarMessage = props => {\n    return (\n        <Snackbar\n            style={{ zIndex: 10001 }}\n            open={props.snackbarOpen}\n            message={<SnackbarMessageContent message={props.snackbarMessage} />}\n            autoHideDuration={props.snackbarDuration}\n            onClose={props.onCloseSnackbar}\n        />\n    );\n};\n\nconst mapStateToProps = state => {\n    const { message, duration, open } = sGetSnackbar(state);\n    return {\n        snackbarOpen: open,\n        snackbarMessage: message,\n        snackbarDuration: duration,\n    };\n};\n\nSnackbarMessage.propTypes = {\n    snackbarDuration: PropTypes.string,\n    snackbarMessage: PropTypes.object,\n    snackbarOpen: PropTypes.bool,\n    onCloseSnackbar: PropTypes.func,\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        onCloseSnackbar: acCloseSnackbar,\n    }\n)(SnackbarMessage);\n","import { getCustomDashboards, sGetDashboardById } from '../reducers/dashboards';\nimport { sGetIsEditing } from '../reducers/editDashboard';\nimport { sGetEditItemFiltersRoot } from '../reducers/editItemFilters';\nimport {\n    SET_SELECTED_ID,\n    SET_SELECTED_ISLOADING,\n    SET_SELECTED_SHOWDESCRIPTION,\n    sGetSelectedIsLoading,\n    sGetSelectedId,\n} from '../reducers/selected';\nimport { sGetUserUsername } from '../reducers/user';\n\nimport { acSetDashboardItems, acAppendDashboards } from './dashboards';\nimport { acClearEditItemFilters } from './editItemFilters';\nimport { acClearItemFilters, acSetItemFilters } from './itemFilters';\nimport { tGetMessages } from '../components/Item/MessagesItem/actions';\nimport { acReceivedSnackbarMessage, acCloseSnackbar } from './snackbar';\nimport { acAddVisualization } from './visualizations';\n\nimport { apiFetchDashboard } from '../api/dashboards';\nimport { storePreferredDashboardId } from '../api/localStorage';\n\nimport { withShape } from '../components/ItemGrid/gridUtil';\nimport { loadingDashboardMsg } from '../components/SnackbarMessage/SnackbarMessage';\nimport { extractFavorite } from '../components/Item/VisualizationItem/plugin';\n\nimport {\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_REPORT,\n    EVENT_CHART,\n    MESSAGES,\n} from '../modules/itemTypes';\nimport { orObject } from '../modules/util';\n\n// actions\n\nexport const acSetSelectedId = value => ({\n    type: SET_SELECTED_ID,\n    value,\n});\n\nexport const acSetSelectedIsLoading = value => ({\n    type: SET_SELECTED_ISLOADING,\n    value,\n});\n\nexport const acSetSelectedShowDescription = value => ({\n    type: SET_SELECTED_SHOWDESCRIPTION,\n    value,\n});\n\nexport const tLoadDashboard = id => async dispatch => {\n    try {\n        const dash = await apiFetchDashboard(id);\n\n        dispatch(acAppendDashboards(dash));\n\n        return Promise.resolve(dash);\n    } catch (err) {\n        console.log('Error: ', err);\n        return err;\n    }\n};\n\n// thunks\nexport const tSetSelectedDashboardById = id => async (dispatch, getState) => {\n    dispatch(acSetSelectedIsLoading(true));\n\n    const snackbarTimeout = setTimeout(() => {\n        const dashboardName = orObject(sGetDashboardById(getState(), id))\n            .displayName;\n        if (sGetSelectedIsLoading(getState()) && dashboardName) {\n            loadingDashboardMsg.name = dashboardName;\n\n            dispatch(\n                acReceivedSnackbarMessage({\n                    message: loadingDashboardMsg,\n                    open: true,\n                })\n            );\n        }\n    }, 500);\n\n    const onSuccess = selected => {\n        const customDashboard = getCustomDashboards(selected)[0];\n\n        dispatch(\n            acSetDashboardItems(withShape(customDashboard.dashboardItems))\n        );\n\n        storePreferredDashboardId(sGetUserUsername(getState()), id);\n\n        // add visualizations to store\n        customDashboard.dashboardItems.forEach(item => {\n            switch (item.type) {\n                case REPORT_TABLE:\n                case CHART:\n                case MAP:\n                case EVENT_REPORT:\n                case EVENT_CHART:\n                    dispatch(acAddVisualization(extractFavorite(item)));\n                    break;\n                case MESSAGES:\n                    dispatch(tGetMessages(id));\n                    break;\n                default:\n                    break;\n            }\n        });\n\n        const state = getState();\n        if (id === sGetSelectedId(state)) {\n            if (sGetIsEditing(state)) {\n                // disable filters when switching to edit mode\n                dispatch(acClearItemFilters());\n            } else {\n                // enable filters when switching to view mode\n                dispatch(acSetItemFilters(sGetEditItemFiltersRoot(state)));\n            }\n        } else {\n            // clear filters when switching dashboard\n            dispatch(acClearEditItemFilters());\n            dispatch(acClearItemFilters());\n        }\n\n        dispatch(acSetSelectedId(id));\n\n        dispatch(acSetSelectedIsLoading(false));\n\n        clearTimeout(snackbarTimeout);\n\n        dispatch(acCloseSnackbar());\n\n        return selected;\n    };\n\n    const onError = error => {\n        console.log('Error: ', error);\n        return error;\n    };\n\n    try {\n        const selected = await dispatch(tLoadDashboard(id));\n\n        return onSuccess(selected);\n    } catch (err) {\n        return onError(err);\n    }\n};\n","export const getPreferredDashboardId = username =>\n    localStorage.getItem(`dhis2.dashboard.current.${username}`) || undefined;\n\nexport const storePreferredDashboardId = (username, dashboardId) => {\n    localStorage.setItem(`dhis2.dashboard.current.${username}`, dashboardId);\n};\n","import { RECEIVED_MESSAGES } from '../../../reducers/messages';\nimport { getMessages } from '../../../api/messages';\n\nconst onError = (action, error) => {\n    console.log(`Error in action ${action}: ${error}`);\n    return error;\n};\n\nexport const receivedMessages = value => ({\n    type: RECEIVED_MESSAGES,\n    value,\n});\n\nexport const tGetMessages = () => async dispatch => {\n    try {\n        const messages = await getMessages();\n        const { messageConversations } = messages;\n\n        return dispatch(receivedMessages(messageConversations));\n    } catch (err) {\n        return onError('Get Messages', err);\n    }\n};\n","import { getInstance } from 'd2';\n\nconst onError = error => console.log('Error: ', error);\n\nconst saveDashboard = (dashboard, data) => {\n    const { name, description, dashboardItems } = data;\n\n    dashboard.name = name;\n    dashboard.description = description;\n    dashboard.dashboardItems = dashboardItems.map(item =>\n        Object.assign({}, item, { width: item.w, height: item.h })\n    );\n\n    return dashboard.save().then(msg => msg.response.uid);\n};\n\nexport const updateDashboard = data => {\n    return getInstance()\n        .then(d2 => {\n            return d2.models.dashboards\n                .get(data.id)\n                .then(dashboard => saveDashboard(dashboard, data));\n        })\n        .catch(onError);\n};\n\nexport const postDashboard = data => {\n    return getInstance().then(d2 => {\n        const dashboard = d2.models.dashboards.create();\n\n        return saveDashboard(dashboard, data);\n    });\n};\n","import { generateUid } from 'd2/uid';\nimport i18n from '@dhis2/d2-i18n';\n\nimport {\n    RECEIVED_EDIT_DASHBOARD,\n    START_NEW_DASHBOARD,\n    RECEIVED_NOT_EDITING,\n    RECEIVED_TITLE,\n    RECEIVED_DESCRIPTION,\n    RECEIVED_DASHBOARD_LAYOUT,\n    ADD_DASHBOARD_ITEM,\n    UPDATE_DASHBOARD_ITEM,\n    REMOVE_DASHBOARD_ITEM,\n} from '../reducers/editDashboard';\nimport { sGetEditDashboardRoot } from '../reducers/editDashboard';\nimport { updateDashboard, postDashboard } from '../api/editDashboard';\nimport { tSetSelectedDashboardById } from '../actions/selected';\nimport {\n    NEW_ITEM_SHAPE,\n    getGridItemProperties,\n} from '../components/ItemGrid/gridUtil';\nimport {\n    itemTypeMap,\n    isSpacerType,\n    TEXT,\n    emptyTextItemContent,\n    isTextType,\n} from '../modules/itemTypes';\n\nconst onError = error => {\n    console.log('Error (Saving Dashboard): ', error);\n    return error;\n};\n\n// actions\n\nexport const acSetEditDashboard = (dashboard, items) => {\n    const val = {\n        ...dashboard,\n        dashboardItems: items,\n    };\n\n    return {\n        type: RECEIVED_EDIT_DASHBOARD,\n        value: val,\n    };\n};\n\nexport const acSetEditNewDashboard = () => ({\n    type: START_NEW_DASHBOARD,\n});\n\nexport const acClearEditDashboard = () => ({\n    type: RECEIVED_NOT_EDITING,\n});\n\nexport const acSetDashboardTitle = value => ({\n    type: RECEIVED_TITLE,\n    value,\n});\n\nexport const acSetDashboardDescription = value => ({\n    type: RECEIVED_DESCRIPTION,\n    value,\n});\n\nexport const acUpdateDashboardLayout = value => ({\n    type: RECEIVED_DASHBOARD_LAYOUT,\n    value,\n});\n\nexport const acAddDashboardItem = item => {\n    const type = item.type;\n    delete item.type;\n    const itemPropName = itemTypeMap[type].propName;\n\n    const id = generateUid();\n    const gridItemProperties = getGridItemProperties(id);\n\n    return {\n        type: ADD_DASHBOARD_ITEM,\n        value: {\n            id,\n            type,\n            [itemPropName]: item.content,\n            ...NEW_ITEM_SHAPE,\n            ...gridItemProperties,\n        },\n    };\n};\n\nexport const acUpdateDashboardItem = item => ({\n    type: UPDATE_DASHBOARD_ITEM,\n    value: item,\n});\n\nexport const acRemoveDashboardItem = value => ({\n    type: REMOVE_DASHBOARD_ITEM,\n    value,\n});\n\n// thunks\n\nexport const tSaveDashboard = () => async (dispatch, getState) => {\n    const dashboard = sGetEditDashboardRoot(getState());\n\n    const dashboardItems = dashboard.dashboardItems.map(item => {\n        const text = isTextType(item)\n            ? item.text || emptyTextItemContent\n            : null;\n\n        const type = isSpacerType(item) ? TEXT : item.type;\n\n        return {\n            ...item,\n            ...(text ? { text } : {}),\n            type,\n        };\n    });\n\n    const dashboardToSave = {\n        ...dashboard,\n        dashboardItems,\n        name: dashboard.name || i18n.t('Untitled dashboard'),\n    };\n\n    try {\n        const dashboardId = dashboardToSave.id\n            ? await updateDashboard(dashboardToSave)\n            : await postDashboard(dashboardToSave);\n\n        dispatch(acClearEditDashboard());\n        await dispatch(tSetSelectedDashboardById(dashboardId));\n\n        return Promise.resolve(dashboardId);\n    } catch (error) {\n        onError(error);\n    }\n};\n","import {\n    SET_DASHBOARDS,\n    ADD_DASHBOARDS,\n    SET_DASHBOARD_STARRED,\n    SET_DASHBOARD_DISPLAY_NAME,\n    SET_DASHBOARD_ITEMS,\n} from '../reducers/dashboards';\nimport {\n    getCustomDashboards,\n    sGetDashboardById,\n    sGetDashboardsSortedByStarred,\n} from '../reducers/dashboards';\nimport { sGetUserUsername } from '../reducers/user';\nimport { tSetSelectedDashboardById, acSetSelectedId } from './selected';\nimport { acClearEditDashboard } from './editDashboard';\nimport {\n    apiFetchDashboards,\n    apiStarDashboard,\n    apiDeleteDashboard,\n} from '../api/dashboards';\nimport { getPreferredDashboardId } from '../api/localStorage';\nimport { arrayToIdMap } from '../modules/util';\n\n// actions\n\nexport const acSetDashboards = dashboards => ({\n    type: SET_DASHBOARDS,\n    value: arrayToIdMap(getCustomDashboards(dashboards)),\n});\n\nexport const acAppendDashboards = dashboards => ({\n    type: ADD_DASHBOARDS,\n    value: arrayToIdMap(getCustomDashboards(dashboards)),\n});\n\nexport const acSetDashboardStarred = (dashboardId, isStarred) => ({\n    type: SET_DASHBOARD_STARRED,\n    dashboardId: dashboardId,\n    value: isStarred,\n});\n\nexport const acSetDashboardDisplayName = (dashboardId, value) => ({\n    type: SET_DASHBOARD_DISPLAY_NAME,\n    dashboardId,\n    value,\n});\n\nexport const acSetDashboardItems = value => ({\n    type: SET_DASHBOARD_ITEMS,\n    value,\n});\n\n// thunks\n\nexport const tFetchDashboards = () => async dispatch => {\n    const collection = await apiFetchDashboards();\n    dispatch(acSetDashboards(collection.toArray()));\n};\n\nexport const tSelectDashboard = id => async (dispatch, getState) => {\n    const onError = error => {\n        console.log('Error (apiFetchDashboards): ', error);\n        return error;\n    };\n\n    try {\n        const state = getState();\n\n        let dashboardToSelect = null;\n        if (id) {\n            dashboardToSelect = sGetDashboardById(state, id) || null;\n        } else {\n            const preferredId = getPreferredDashboardId(\n                sGetUserUsername(state)\n            );\n            const dash = sGetDashboardById(state, preferredId);\n            dashboardToSelect =\n                preferredId && dash\n                    ? dash\n                    : sGetDashboardsSortedByStarred(state)[0];\n        }\n\n        if (dashboardToSelect) {\n            dispatch(tSetSelectedDashboardById(dashboardToSelect.id));\n        } else {\n            dispatch(acSetSelectedId());\n        }\n    } catch (err) {\n        return onError(err);\n    }\n};\n\nexport const tStarDashboard = (id, isStarred) => async dispatch => {\n    const onSuccess = id => {\n        dispatch(acSetDashboardStarred(id, isStarred));\n        return id;\n    };\n\n    const onError = error => {\n        console.log('Error (apiStarDashboard): ', error);\n        return error;\n    };\n    try {\n        await apiStarDashboard(id, isStarred);\n        return onSuccess(id);\n    } catch (err) {\n        return onError(err);\n    }\n};\n\nexport const tDeleteDashboard = id => async dispatch => {\n    try {\n        await apiDeleteDashboard(id);\n        dispatch(acClearEditDashboard());\n        dispatch(acSetSelectedId());\n        dispatch(acSetDashboardItems([]));\n\n        await dispatch(tFetchDashboards());\n\n        return Promise.resolve();\n    } catch (err) {\n        console.log('Error (deleteDashboard): ', err);\n        return err;\n    }\n};\n","/** @module reducers/controlBar */\nimport { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\n\nexport const SET_CONTROLBAR_USER_ROWS = 'SET_CONTROLBAR_USER_ROWS';\n\nexport const DEFAULT_STATE_CONTROLBAR_ROWS = 1;\n\nconst userRows = (state = DEFAULT_STATE_CONTROLBAR_ROWS, action) => {\n    switch (action.type) {\n        case SET_CONTROLBAR_USER_ROWS:\n            return validateReducer(action.value, DEFAULT_STATE_CONTROLBAR_ROWS);\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    userRows,\n});\n\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\nexport const sGetControlBarRoot = state => state.controlBar;\n\n// Selector dependency level 2\n\nexport const sGetControlBarUserRows = state =>\n    sGetControlBarRoot(state).userRows;\n","import { getInstance } from 'd2';\nimport { DEFAULT_STATE_CONTROLBAR_ROWS } from '../reducers/controlBar';\n\nconst NAMESPACE = 'dashboard';\nconst KEY = 'controlBarRows';\n\nconst hasNamespace = async d2 => await d2.currentUser.dataStore.has(NAMESPACE);\n\nconst getNamespace = async (d2, hasNamespace) =>\n    hasNamespace\n        ? await d2.currentUser.dataStore.get(NAMESPACE)\n        : await d2.currentUser.dataStore.create(NAMESPACE);\n\nexport const apiGetControlBarRows = async () => {\n    const d2 = await getInstance();\n    const namespace = await getNamespace(d2, await hasNamespace(d2));\n    const hasKey = namespace.keys && namespace.keys.find(key => key === KEY);\n\n    if (hasKey) {\n        return await namespace.get(KEY);\n    } else {\n        await apiPostControlBarRows(DEFAULT_STATE_CONTROLBAR_ROWS, namespace);\n        console.log(\n            '(These errors to /userDataStore/dashboard can be ignored)'\n        );\n        return DEFAULT_STATE_CONTROLBAR_ROWS;\n    }\n};\n\nexport const apiPostControlBarRows = async (rows, namespace) => {\n    const d2 = await getInstance();\n    const ns = namespace || (await getNamespace(d2, hasNamespace));\n\n    ns.set(KEY, rows);\n};\n","import { SET_CONTROLBAR_USER_ROWS } from '../reducers/controlBar';\nimport { apiGetControlBarRows } from '../api/controlBar';\n\n// actions\n\nexport const acSetControlBarUserRows = rows => ({\n    type: SET_CONTROLBAR_USER_ROWS,\n    value: rows,\n});\n\n// thunks\n\nexport const tSetControlBarRows = () => async dispatch => {\n    const onSuccess = rows => {\n        dispatch(acSetControlBarUserRows(rows));\n    };\n\n    const onError = error => {\n        console.log('Error (apiGetControlBarRows): ', error);\n        return error;\n    };\n\n    try {\n        const controlBarRows = await apiGetControlBarRows();\n        return onSuccess(controlBarRows);\n    } catch (err) {\n        return onError(err);\n    }\n};\n","import {\n    getDimensionById,\n    DIMENSION_ID_PERIOD,\n    DIMENSION_ID_ORGUNIT,\n} from '@dhis2/analytics';\n\nexport const SET_DIMENSIONS = 'SET_DIMENSIONS';\n\nexport const getDefaultDimensions = () =>\n    [DIMENSION_ID_PERIOD, DIMENSION_ID_ORGUNIT].map(dimensionId => {\n        const { id, iconName, name } = getDimensionById(dimensionId);\n        return {\n            id,\n            iconName,\n            name: name(),\n        };\n    });\n\nexport default (state = getDefaultDimensions(), action) => {\n    switch (action.type) {\n        case SET_DIMENSIONS: {\n            return [...getDefaultDimensions(), ...action.value];\n        }\n        default:\n            return state;\n    }\n};\n\nexport const sGetDimensions = state => state.dimensions;\n","export const SET_SETTINGS = 'SET_SETTINGS';\nexport const ADD_SETTINGS = 'ADD_SETTINGS';\n\nexport const DEFAULT_SETTINGS = {\n    keyDateFormat: 'yyyy-MM-dd',\n    keyAnalysisRelativePeriod: 'LAST_12_MONTHS',\n    keyAnalysisDigitGroupSeparator: 'SPACE',\n    displayNameProperty: 'displayName',\n    uiLocale: 'en',\n    rootOrganisationUnit: {},\n};\n\nexport default (state = DEFAULT_SETTINGS, action) => {\n    switch (action.type) {\n        case SET_SETTINGS: {\n            return Object.assign({}, action.value);\n        }\n        case ADD_SETTINGS: {\n            return {\n                ...state,\n                ...action.value,\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// Selectors\n\nexport const sGetSettings = state => state.settings;\n\nexport const sGetSettingsDisplayNameProperty = state =>\n    sGetSettings(state).displayNameProperty;\n\nexport const sGetRootOrgUnit = state =>\n    sGetSettings(state).rootOrganisationUnit;\n\nexport const sGetRelativePeriod = state =>\n    sGetSettings(state).keyAnalysisRelativePeriod;\n\nexport const sGetUiLocale = state => sGetSettings(state).uiLocale;\n","import { SET_DIMENSIONS } from '../reducers/dimensions';\nimport { apiFetchDimensions } from '@dhis2/analytics';\nimport { sGetSettingsDisplayNameProperty } from '../reducers/settings';\n\nexport const acSetDimensions = dimensions => ({\n    type: SET_DIMENSIONS,\n    value: dimensions,\n});\n\nexport const tSetDimensions = d2 => async (dispatch, getState) => {\n    const onSuccess = dimensions => {\n        dispatch(acSetDimensions(dimensions));\n    };\n\n    const onError = error => {\n        console.log('Error (apiFetchDimensions): ', error);\n        return error;\n    };\n\n    try {\n        const displayNameProp = sGetSettingsDisplayNameProperty(getState());\n        const dimensions = await apiFetchDimensions(d2, displayNameProp);\n\n        // filter out CATEGORY that are not of type ATTRIBUTE\n        const filteredDimensions = dimensions.filter(\n            dim =>\n                dim.dimensionType !== 'CATEGORY' ||\n                (dim.dimensionType === 'CATEGORY' &&\n                    dim.dataDimensionType === 'ATTRIBUTE')\n        );\n        return onSuccess(filteredDimensions);\n    } catch (err) {\n        return onError(err);\n    }\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { colors } from '@dhis2/ui-core';\nimport { withStyles } from '@material-ui/core/styles';\n\nexport const SHOWMORE_BAR_HEIGHT = 16;\n\nconst styles = {\n    showMore: {\n        color: colors.grey700,\n        cursor: 'pointer',\n        fontSize: 11,\n        paddingTop: 5,\n        '&:hover': {\n            textDecoration: 'underline',\n        },\n    },\n    disabled: {\n        paddingTop: 5,\n        color: colors.grey500,\n        fontSize: 11,\n        cursor: 'not-allowed',\n    },\n};\n\nexport const ShowMoreButton = ({ onClick, isMaxHeight, classes, disabled }) => {\n    return (\n        <div style={{ textAlign: 'center' }}>\n            {disabled ? (\n                <div className={classes.disabled}>{i18n.t('Show more')}</div>\n            ) : (\n                <div className={classes.showMore} onClick={onClick}>\n                    {isMaxHeight ? i18n.t('Show less') : i18n.t('Show more')}\n                </div>\n            )}\n        </div>\n    );\n};\n\nShowMoreButton.propTypes = {\n    classes: PropTypes.object,\n    disabled: PropTypes.bool,\n    isMaxHeight: PropTypes.bool,\n    onClick: PropTypes.func,\n};\n\nexport default withStyles(styles)(ShowMoreButton);\n","import { SHOWMORE_BAR_HEIGHT } from './ShowMoreButton';\n\nexport const CONTROL_BAR_ROW_HEIGHT = 40;\nexport const FIRST_ROW_PADDING_HEIGHT = 10;\nexport const MIN_ROW_COUNT = 1;\n\nexport const HEADERBAR_HEIGHT = 48;\n\nconst CONTROL_BAR_OUTER_HEIGHT_DIFF =\n    FIRST_ROW_PADDING_HEIGHT + SHOWMORE_BAR_HEIGHT - 2; // 2 pixel \"adjustment\"\n\nexport const getRowsHeight = rows => {\n    return rows * CONTROL_BAR_ROW_HEIGHT;\n};\n\nexport const getNumRowsFromHeight = height => {\n    return Math.floor(\n        (height - CONTROL_BAR_OUTER_HEIGHT_DIFF) / CONTROL_BAR_ROW_HEIGHT\n    );\n};\n\nexport const getTopOffset = rows => {\n    return HEADERBAR_HEIGHT + getControlBarHeight(rows, false);\n};\n\nexport const getControlBarHeight = rows => {\n    return getRowsHeight(rows) + CONTROL_BAR_OUTER_HEIGHT_DIFF;\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { colors } from '@dhis2/ui-core';\nimport { HEADERBAR_HEIGHT } from './controlBarDimensions';\n\nimport classes from './styles/ControlBar.module.css';\n\nconst DRAG_HANDLE_HEIGHT = 7;\n\nclass ControlBar extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            dragging: false,\n        };\n    }\n\n    onStartDrag = () => {\n        this.setState({ dragging: true });\n        window.addEventListener('mousemove', this.onDrag);\n        window.addEventListener('mouseup', this.onEndDrag);\n    };\n\n    onDrag = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const newHeight = event.clientY;\n\n        if (\n            this.props.onChangeHeight &&\n            newHeight !== this.props.height &&\n            newHeight > 0\n        ) {\n            requestAnimationFrame(() => {\n                this.props.onChangeHeight(newHeight);\n            });\n        }\n    };\n\n    onEndDrag = () => {\n        this.setState({ dragging: false });\n        window.removeEventListener('mousemove', this.onDrag);\n        window.removeEventListener('mouseup', this.onEndDrag);\n\n        if (this.props.onEndDrag) {\n            this.props.onEndDrag();\n        }\n    };\n\n    renderDragHandle() {\n        return typeof this.props.onChangeHeight === 'function' ? (\n            <div\n                className={classes.draghandle}\n                style={{ height: DRAG_HANDLE_HEIGHT }}\n                onMouseDown={this.onStartDrag}\n            />\n        ) : null;\n    }\n\n    render() {\n        const height = Math.max(this.props.height, 0) + DRAG_HANDLE_HEIGHT;\n\n        const rootStyle = Object.assign(\n            {\n                height,\n                top: HEADERBAR_HEIGHT,\n                backgroundColor: this.props.editMode\n                    ? colors.yellow050\n                    : colors.white,\n                paddingBottom: DRAG_HANDLE_HEIGHT,\n            },\n            // Disable animations while dragging\n            this.state.dragging ? { transition: 'none' } : {}\n        );\n\n        return (\n            <div style={rootStyle} className={classes.root}>\n                <div className={classes.content}>{this.props.children}</div>\n                {this.renderDragHandle()}\n            </div>\n        );\n    }\n}\n\nControlBar.propTypes = {\n    /**\n     * The height of the control bar in number of lines. Must be a positive integer.\n     */\n    children: PropTypes.node.isRequired,\n\n    /**\n     * If true, the background color of the control bar changes to indicate that edit mode is active.\n     */\n    editMode: PropTypes.bool.isRequired,\n\n    /**\n     * Callback function that is called when the control bar is resized.\n     * The callback receives one argument: The new height in pixels.\n     *\n     * If no callback is specified the control bar will not have a drag handle.\n     */\n    height: PropTypes.number.isRequired,\n\n    /**\n     * Callback function that is called when the control bar is dropped after being dragged.\n     * The callback receives one argument: The new height in pixels.\n     *\n     * Ignored if no \"onChangeHeight\" function is provided.\n     */\n    onChangeHeight: PropTypes.func,\n\n    /**\n     * The contents of the control bar.\n     */\n    onEndDrag: PropTypes.func,\n};\n\nControlBar.defaultProps = {\n    onChangeHeight: null,\n    onEndDrag: null,\n};\n\nexport default ControlBar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst StarIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>\n);\n\nStarIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default StarIcon;\n","import { getInstance } from 'd2';\n\nexport const apiPostDataStatistics = async (eventType, id) => {\n    const d2 = await getInstance();\n    const url = `dataStatistics?eventType=${eventType}&favorite=${id}`;\n\n    d2.Api.getApi().post(url);\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Chip, colors } from '@dhis2/ui-core';\nimport { Link } from 'react-router-dom';\nimport debounce from 'lodash/debounce';\n\nimport StarIcon from '../../icons/Star';\nimport { apiPostDataStatistics } from '../../api/dataStatistics';\n\nconst styles = {\n    chip: {\n        margin: '3px',\n    },\n    link: {\n        color: colors.grey600,\n        display: 'inline-block',\n        textDecoration: 'none',\n        verticalAlign: 'top',\n    },\n    icon: {\n        height: '20px',\n        marginTop: '2px',\n        width: '20px',\n    },\n    selected: {\n        fill: colors.white,\n    },\n    unselected: {\n        fill: colors.grey700,\n    },\n};\n\nexport const DashboardItemChip = ({\n    starred,\n    selected,\n    label,\n    dashboardId,\n    classes,\n}) => {\n    const chipProps = {\n        selected,\n        className: classes.chip,\n    };\n\n    if (starred) {\n        const selectedState = selected ? classes.selected : classes.unselected;\n        chipProps.icon = (\n            <StarIcon className={`${classes.icon} ${selectedState}`} />\n        );\n    }\n\n    return (\n        <Link\n            className={classes.link}\n            to={`/${dashboardId}`}\n            onClick={debounce(\n                () => apiPostDataStatistics('DASHBOARD_VIEW', dashboardId),\n                500\n            )}\n        >\n            <Chip {...chipProps}>{label}</Chip>\n        </Link>\n    );\n};\n\nDashboardItemChip.propTypes = {\n    dashboardId: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    selected: PropTypes.bool.isRequired,\n    starred: PropTypes.bool.isRequired,\n    classes: PropTypes.object,\n};\n\nexport default withStyles(styles)(DashboardItemChip);\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\n\nconst AddCircleIcon = () => (\n    <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"32\"\n        height=\"32\"\n        fill={colors.teal600}\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm4 11h-3v3c0 .55-.45 1-1 1s-1-.45-1-1v-3H8c-.55 0-1-.45-1-1s.45-1 1-1h3V8c0-.55.45-1 1-1s1 .45 1 1v3h3c.55 0 1 .45 1 1s-.45 1-1 1z\" />\n    </svg>\n);\n\nexport default AddCircleIcon;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nconst ClearIcon = ({ className }) => (\n    <svg\n        className={className}\n        fill={colors.grey800}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>\n);\n\nClearIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default ClearIcon;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ClearIcon from '../../icons/Clear';\n\nimport classes from './styles/ClearButton.module.css';\n\nexport const ClearButton = ({ onClear }) => (\n    <button className={classes.button} onClick={onClear}>\n        <span>\n            <ClearIcon className={classes.icon} color=\"action\" />\n        </span>\n    </button>\n);\n\nClearButton.propTypes = {\n    onClear: PropTypes.func.isRequired,\n};\n\nexport default ClearButton;\n","import { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\n\nexport const SET_DASHBOARDS_FILTER_NAME = 'SET_DASHBOARDS_FILTER_NAME';\nexport const SET_DASHBOARDS_FILTER_OWNER = 'SET_DASHBOARDS_FILTER_OWNER';\nexport const SET_DASHBOARDS_FILTER_ORDER = 'SET_DASHBOARDS_FILTER_ORDER';\n\nexport const ownerData = [\n    { id: 'ALL', value: 'All users' },\n    { id: 'ME', value: 'Created by me' },\n    { id: 'OTHERS', value: 'Created by others' },\n];\n\nexport const orderData = [\n    { id: 'NAME:ASC', value: 'Name (asc)' },\n    { id: 'NAME:ASC', value: 'Name (desc)' },\n    { id: 'ITEMS:ASC', value: 'Number of items (asc)' },\n    { id: 'ITEMS:ASC', value: 'Number of items (desc)' },\n    { id: 'CREATED:ASC', value: 'Created date (asc)' },\n    { id: 'CREATED:ASC', value: 'Created date (desc)' },\n];\n\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_NAME = '';\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_OWNER = ownerData[0].id;\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_ORDER = orderData[0].id;\n\nconst name = (state = DEFAULT_STATE_DASHBOARDS_FILTER_NAME, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_NAME:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_NAME\n            );\n        default:\n            return state;\n    }\n};\n\nconst owner = (state = DEFAULT_STATE_DASHBOARDS_FILTER_OWNER, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_OWNER:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_NAME\n            );\n        default:\n            return state;\n    }\n};\n\nconst order = (state = DEFAULT_STATE_DASHBOARDS_FILTER_ORDER, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_ORDER:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_ORDER\n            );\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    name,\n    owner,\n    order,\n});\n\n// selectors\n\nexport const sGetDashboardsFilterRoot = state => state.dashboardsFilter;\n\n// selector dependency level 2\n\nexport const sGetFilterName = state => sGetDashboardsFilterRoot(state).name;\nexport const sGetFilterOwner = state => sGetDashboardsFilterRoot(state).owner;\nexport const sGetFilterOrder = state => sGetDashboardsFilterRoot(state).order;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport i18n from '@dhis2/d2-i18n';\nimport InputField from '@material-ui/core/Input';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { colors } from '@dhis2/ui-core';\n\nimport ClearButton from './ClearButton';\nimport { DEFAULT_STATE_DASHBOARDS_FILTER_NAME } from '../../reducers/dashboardsFilter';\n\nexport const KEYCODE_ENTER = 13;\nexport const KEYCODE_ESCAPE = 27;\n\nconst styles = {\n    filterField: {\n        fontSize: '14px',\n        width: '200px',\n        height: '30px',\n        top: '-4px',\n    },\n    searchIcon: {\n        color: colors.grey700,\n        width: '20px',\n        height: '20px',\n    },\n};\n\nexport class Filter extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            value: DEFAULT_STATE_DASHBOARDS_FILTER_NAME,\n        };\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setState({\n            value: nextProps.name,\n        });\n    }\n\n    setFilterValue = event => {\n        event.preventDefault();\n\n        this.props.onChangeName(event.target.value);\n    };\n\n    handleKeyUp = event => {\n        switch (event.keyCode) {\n            case KEYCODE_ENTER:\n                this.props.onKeypressEnter();\n                break;\n            case KEYCODE_ESCAPE:\n                this.props.onChangeName();\n                break;\n            default:\n                break;\n        }\n    };\n\n    render() {\n        const { classes, name, onChangeName } = this.props;\n\n        const startAdornment = (\n            <InputAdornment position=\"start\">\n                <SearchIcon className={classes.searchIcon} />\n            </InputAdornment>\n        );\n\n        const endAdornment =\n            name !== '' && name !== null ? (\n                <InputAdornment position=\"end\">\n                    <ClearButton onClear={() => onChangeName()} />\n                </InputAdornment>\n            ) : null;\n\n        return (\n            <InputField\n                className={classes.filterField}\n                placeholder={i18n.t('Search for a dashboard')}\n                startAdornment={startAdornment}\n                endAdornment={endAdornment}\n                value={this.state.value}\n                onChange={this.setFilterValue}\n                onKeyUp={this.handleKeyUp}\n            />\n        );\n    }\n}\n\nFilter.propTypes = {\n    classes: PropTypes.object,\n    name: PropTypes.string,\n    onChangeName: PropTypes.func,\n    onKeypressEnter: PropTypes.func,\n};\n\nFilter.defaultProps = {\n    name: '',\n    onChangeName: Function.prototype,\n};\n\nexport default withStyles(styles)(Filter);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport ControlBar from './ControlBar';\nimport arraySort from 'd2-utilizr/lib/arraySort';\nimport PropTypes from 'prop-types';\n\nimport Chip from './DashboardItemChip';\nimport AddCircleIcon from '../../icons/AddCircle';\nimport Filter from './Filter';\nimport ShowMoreButton from './ShowMoreButton';\nimport {\n    FIRST_ROW_PADDING_HEIGHT,\n    MIN_ROW_COUNT,\n    getRowsHeight,\n    getControlBarHeight,\n    getNumRowsFromHeight,\n} from './controlBarDimensions';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { sGetAllDashboards } from '../../reducers/dashboards';\nimport { sGetFilterName } from '../../reducers/dashboardsFilter';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { acSetControlBarUserRows } from '../../actions/controlBar';\nimport { acSetFilterName } from '../../actions/dashboardsFilter';\nimport { orObject, orArray } from '../../modules/util';\nimport { apiPostControlBarRows } from '../../api/controlBar';\n\nimport classes from './styles/DashboardsBar.module.css';\n\nexport const MAX_ROW_COUNT = 10;\n\nexport class DashboardsBar extends Component {\n    state = {\n        rows: MIN_ROW_COUNT,\n    };\n\n    setInitialDashboardState = rows => {\n        this.setState({ rows, isMaxHeight: rows === MAX_ROW_COUNT });\n    };\n\n    componentDidMount() {\n        this.setInitialDashboardState(this.props.userRows);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setInitialDashboardState(nextProps.userRows);\n    }\n\n    onChangeHeight = newHeight => {\n        const adjustedHeight = newHeight - 52; // don't rush the transition to a bigger row count\n        const newRows = Math.max(\n            MIN_ROW_COUNT,\n            getNumRowsFromHeight(adjustedHeight)\n        );\n\n        if (newRows !== this.state.rows) {\n            const newRowCount = Math.min(newRows, MAX_ROW_COUNT);\n\n            this.props.onChangeHeight(newRowCount);\n        }\n    };\n\n    onEndDrag = () => {\n        return apiPostControlBarRows(this.state.rows);\n    };\n\n    onToggleMaxHeight = () => {\n        const rows =\n            this.state.rows === MAX_ROW_COUNT\n                ? this.props.userRows\n                : MAX_ROW_COUNT;\n\n        this.setState({ rows, isMaxHeight: !this.state.isMaxHeight });\n    };\n\n    onSelectDashboard = () => {\n        this.props.history.push(`/${this.props.dashboards[0].id}`);\n    };\n\n    render() {\n        const { dashboards, name, selectedId, onChangeFilterName } = this.props;\n\n        const rowCount = this.state.isMaxHeight\n            ? MAX_ROW_COUNT\n            : this.state.rows;\n        const controlBarHeight = getControlBarHeight(rowCount);\n        const contentWrapperStyle = {\n            padding: `${FIRST_ROW_PADDING_HEIGHT}px 6px 0 6px`,\n            overflowY: this.state.isMaxHeight ? 'auto' : 'hidden',\n            height: getRowsHeight(rowCount) + FIRST_ROW_PADDING_HEIGHT,\n        };\n\n        return (\n            <ControlBar\n                height={controlBarHeight}\n                onChangeHeight={this.onChangeHeight}\n                onEndDrag={this.onEndDrag}\n                editMode={false}\n            >\n                <div style={contentWrapperStyle}>\n                    <div className={classes.leftControls}>\n                        <Link\n                            style={{\n                                display: 'inline-block',\n                                textDecoration: 'none',\n                                marginRight: 10,\n                                position: 'relative',\n                                top: '2px',\n                            }}\n                            to={'/new'}\n                        >\n                            <AddCircleIcon />\n                        </Link>\n                        <Filter\n                            name={name}\n                            onChangeName={onChangeFilterName}\n                            onKeypressEnter={this.onSelectDashboard}\n                        />\n                    </div>\n                    {orArray(dashboards).map(dashboard => (\n                        <Chip\n                            key={dashboard.id}\n                            label={dashboard.displayName}\n                            starred={dashboard.starred}\n                            dashboardId={dashboard.id}\n                            selected={dashboard.id === selectedId}\n                        />\n                    ))}\n                </div>\n                <ShowMoreButton\n                    onClick={this.onToggleMaxHeight}\n                    isMaxHeight={this.state.isMaxHeight}\n                    disabled={this.props.userRows === MAX_ROW_COUNT}\n                />\n            </ControlBar>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    dashboards: sGetAllDashboards(state),\n    name: sGetFilterName(state),\n    userRows: sGetControlBarUserRows(state),\n    selectedId: sGetSelectedId(state),\n});\n\nconst mapDispatchToProps = {\n    onChangeHeight: acSetControlBarUserRows,\n    onChangeFilterName: acSetFilterName,\n};\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const dashboards = Object.values(orObject(stateProps.dashboards));\n    const displayDashboards = arraySort(\n        dashboards.filter(d =>\n            d.displayName.toLowerCase().includes(stateProps.name.toLowerCase())\n        ),\n        'ASC',\n        'displayName'\n    );\n\n    return {\n        ...stateProps,\n        ...ownProps,\n        ...dispatchProps,\n        dashboards: [\n            ...displayDashboards.filter(d => d.starred),\n            ...displayDashboards.filter(d => !d.starred),\n        ],\n    };\n};\n\nDashboardsBar.propTypes = {\n    dashboards: PropTypes.array,\n    history: PropTypes.object,\n    name: PropTypes.string,\n    selectedId: PropTypes.string,\n    userRows: PropTypes.number,\n    onChangeFilterName: PropTypes.func,\n    onChangeHeight: PropTypes.func,\n};\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps,\n        mergeProps\n    )(DashboardsBar)\n);\n","import {\n    SET_DASHBOARDS_FILTER_NAME,\n    SET_DASHBOARDS_FILTER_OWNER,\n    SET_DASHBOARDS_FILTER_ORDER,\n} from '../reducers/dashboardsFilter';\n\n// actions\n\nexport const acSetFilterName = value => ({\n    type: SET_DASHBOARDS_FILTER_NAME,\n    value,\n});\n\nexport const acSetFilterOwner = value => ({\n    type: SET_DASHBOARDS_FILTER_OWNER,\n    value,\n});\n\nexport const acSetFilterOrder = value => ({\n    type: SET_DASHBOARDS_FILTER_ORDER,\n    value,\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport {\n    getTopOffset,\n    MIN_ROW_COUNT,\n} from '../ControlBar/controlBarDimensions';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\n\nconst DashboardVerticalOffset = props => {\n    const rows = props.editMode ? MIN_ROW_COUNT : props.userRows;\n    const marginTop = getTopOffset(rows);\n\n    return <div className=\"page-container-top-margin\" style={{ marginTop }} />;\n};\n\nconst mapStateToProps = state => ({\n    userRows: sGetControlBarUserRows(state),\n});\n\nDashboardVerticalOffset.propTypes = {\n    editMode: PropTypes.bool,\n    userRows: PropTypes.number,\n};\n\nexport default connect(mapStateToProps)(DashboardVerticalOffset);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { MenuItem, colors } from '@dhis2/ui-core';\n\nconst HeaderMenuItem = ({ title }) => (\n    <MenuItem\n        dense\n        key={title}\n        disabled\n        label={\n            <p style={{ color: colors.grey800, fontWeight: '600' }}>{title}</p>\n        }\n    />\n);\n\nHeaderMenuItem.propTypes = {\n    title: PropTypes.string.isRequired,\n};\n\nexport default HeaderMenuItem;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nconst LaunchIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"12\"\n        height=\"12\"\n        fill={colors.grey600}\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z\" />\n    </svg>\n);\n\nLaunchIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default LaunchIcon;\n","import React from 'react';\nimport { MenuItem, colors } from '@dhis2/ui-core';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport { visTypeIcons } from '@dhis2/analytics';\n\nimport { getItemIcon, VISUALIZATION } from '../../modules/itemTypes';\nimport LaunchIcon from '../../icons/Launch';\n\nimport classes from './styles/ContentMenuItem.module.css';\n\nconst LaunchLink = ({ url }) => (\n    <a\n        onClick={e => e.stopPropagation()}\n        className={classes.launchLink}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        href={url}\n    >\n        <LaunchIcon />\n    </a>\n);\n\nLaunchLink.propTypes = {\n    url: PropTypes.string,\n};\n\nconst InsertButton = () => (\n    <button className={classes.buttonInsert}>{i18n.t('Insert')}</button>\n);\n\nconst ContentMenuItem = ({ type, name, onInsert, url, visType }) => {\n    const ItemIcon = getItemIcon(type);\n\n    const renderedItemIcon =\n        type === VISUALIZATION ? (\n            visTypeIcons[visType]\n        ) : (\n            <ItemIcon style={{ fill: colors.grey600 }} />\n        );\n\n    return (\n        <MenuItem\n            dense\n            onClick={onInsert}\n            label={\n                <div className={classes.menuItem}>\n                    <div className={classes.label}>\n                        <span style={{ margin: '6px' }}>\n                            {renderedItemIcon}\n                        </span>\n                        <span>{name}</span>\n                        {url ? <LaunchLink url={url} /> : null}\n                    </div>\n                    <InsertButton />\n                </div>\n            }\n        />\n    );\n};\n\nContentMenuItem.propTypes = {\n    name: PropTypes.string,\n    type: PropTypes.string,\n    url: PropTypes.string,\n    visType: PropTypes.string,\n    onInsert: PropTypes.func,\n};\n\nexport default ContentMenuItem;\n","import i18n from '@dhis2/d2-i18n';\nimport {\n    spacerContent,\n    VISUALIZATION,\n    MAP,\n    EVENT_CHART,\n    EVENT_REPORT,\n    USERS,\n    REPORTS,\n    RESOURCES,\n    APP,\n    MESSAGES,\n    TEXT,\n    SPACER,\n} from '../../modules/itemTypes';\n\nexport const singleItems = [\n    {\n        id: 'additional',\n        header: () => i18n.t('Additional items'),\n        items: [\n            {\n                type: TEXT,\n                name: () => i18n.t('Text box'),\n                content: '',\n            },\n            {\n                type: MESSAGES,\n                name: () => i18n.t('Messages'),\n                content: 'true',\n            },\n            {\n                type: SPACER,\n                name: () => i18n.t('Spacer'),\n                content: spacerContent,\n            },\n        ],\n    },\n];\n\n// categorizedItems are grouped in the item selector menu\nexport const categorizedItems = [\n    VISUALIZATION,\n    MAP,\n    EVENT_REPORT,\n    EVENT_CHART,\n    USERS,\n    REPORTS,\n    RESOURCES,\n    APP,\n];\n\n// listItemTypes are included in a single dashboard item\nexport const listItemTypes = [REPORTS, RESOURCES, USERS];\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { MenuItem, Divider } from '@dhis2/ui-core';\n\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\n\nimport { tAddListItemContent } from './actions';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\nimport { getItemUrl, APP, VISUALIZATION } from '../../modules/itemTypes';\nimport { categorizedItems, listItemTypes } from './selectableItems';\n\nimport classes from './styles/CategorizedMenuGroup.module.css';\n\nclass CategorizedMenuGroup extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seeMore: false,\n        };\n    }\n\n    addItem = item => () => {\n        const { type, acAddDashboardItem, tAddListItemContent } = this.props;\n\n        if (type === APP) {\n            acAddDashboardItem({ type, content: item.key });\n        } else {\n            const newItem = {\n                id: item.id,\n                name: item.displayName || item.name,\n            };\n\n            if (listItemTypes.includes(type)) {\n                tAddListItemContent(type, newItem);\n            } else {\n                acAddDashboardItem({ type, content: newItem });\n            }\n        }\n    };\n\n    toggleSeeMore = () => {\n        this.setState({ seeMore: !this.state.seeMore });\n\n        this.props.onChangeItemsLimit(this.props.type);\n    };\n\n    render() {\n        const { title, type, items, hasMore } = this.props;\n        return (\n            <Fragment>\n                <HeaderMenuItem title={title} />\n                {items.map(item => {\n                    const itemUrl = getItemUrl(type, item, this.context.d2);\n                    return (\n                        <ContentMenuItem\n                            key={item.id || item.key}\n                            type={type}\n                            visType={type === VISUALIZATION ? item.type : type}\n                            name={item.displayName || item.name}\n                            onInsert={this.addItem(item)}\n                            url={itemUrl}\n                        />\n                    );\n                })}\n                {hasMore ? (\n                    <MenuItem\n                        dense\n                        key={`showmore${title}`}\n                        onClick={this.toggleSeeMore}\n                        label={\n                            <button className={classes.showMoreButton}>\n                                {this.state.seeMore\n                                    ? i18n.t('Show fewer')\n                                    : i18n.t('Show more')}\n                            </button>\n                        }\n                    />\n                ) : null}\n                <Divider margin=\"8px 0px\" />\n            </Fragment>\n        );\n    }\n}\n\nCategorizedMenuGroup.propTypes = {\n    items: PropTypes.array.isRequired,\n    title: PropTypes.string.isRequired,\n    type: PropTypes.oneOf(categorizedItems).isRequired,\n    onChangeItemsLimit: PropTypes.func.isRequired,\n    acAddDashboardItem: PropTypes.func,\n    hasMore: PropTypes.bool,\n    tAddListItemContent: PropTypes.func,\n};\n\nCategorizedMenuGroup.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nexport default connect(\n    null,\n    {\n        acAddDashboardItem,\n        tAddListItemContent,\n    }\n)(CategorizedMenuGroup);\n","import { sGetEditDashboardRoot } from '../../reducers/editDashboard';\nimport { itemTypeMap } from '../../modules/itemTypes';\nimport {\n    acAddDashboardItem,\n    acUpdateDashboardItem,\n} from '../../actions/editDashboard';\n\nexport const tAddListItemContent = (type, content) => (dispatch, getState) => {\n    const state = getState();\n    const listItemType = itemTypeMap[type].propName;\n    const dashboardItems = sGetEditDashboardRoot(state).dashboardItems;\n    const dashboardItemIndex = dashboardItems.findIndex(\n        item => item.type === type\n    );\n    let dashboardItem;\n\n    // Reports/Resources/Users dashboard item type already present in dashboard\n    if (dashboardItemIndex > -1) {\n        dashboardItem = dashboardItems[dashboardItemIndex];\n        dashboardItem[listItemType].push(content);\n\n        dispatch(acUpdateDashboardItem(dashboardItem));\n    } else {\n        dashboardItem = {\n            type: type,\n            content: [content],\n        };\n\n        dispatch(acAddDashboardItem(dashboardItem));\n    }\n};\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\n\nexport const SinglesMenuGroup = ({ acAddDashboardItem, category }) => {\n    const addToDashboard = ({ type, content }) => () => {\n        acAddDashboardItem({ type, content });\n    };\n\n    return (\n        <Fragment>\n            <HeaderMenuItem title={category.header()} />\n            {category.items.map(item => (\n                <ContentMenuItem\n                    key={item.type}\n                    type={item.type}\n                    name={item.name()}\n                    onInsert={addToDashboard(item)}\n                />\n            ))}\n        </Fragment>\n    );\n};\n\nSinglesMenuGroup.propTypes = {\n    acAddDashboardItem: PropTypes.func,\n    category: PropTypes.object,\n};\n\nexport default connect(\n    null,\n    { acAddDashboardItem }\n)(SinglesMenuGroup);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport Popover from '@material-ui/core/Popover';\nimport { InputField, Menu } from '@dhis2/ui-core';\n\nimport CategorizedMenuGroup from './CategorizedMenuGroup';\nimport SinglesMenuGroup from './SinglesMenuGroup';\nimport { singleItems, categorizedItems } from './selectableItems';\nimport { itemTypeMap, getDefaultItemCount } from '../../modules/itemTypes';\n\nimport './styles/ItemSelector.css';\n\nconst ItemSearchField = props => (\n    <InputField\n        name=\"Dashboard item search\"\n        label={i18n.t('Search for items to add to this dashboard')}\n        type=\"text\"\n        onChange={props.onChange}\n        onFocus={props.onFocus}\n        value={props.value}\n    />\n);\n\nclass ItemSelector extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n            open: false,\n            maxOptions: new Set(),\n            items: undefined,\n            filter: '',\n        };\n    }\n\n    closeList = () => {\n        this.setState({ open: false, filter: '' });\n    };\n\n    openList = (_, event) => {\n        this.fetchItems();\n\n        this.setState({\n            anchorEl: event.currentTarget,\n            open: true,\n        });\n    };\n\n    setFilter = (_, event) => {\n        this.setState({ filter: event.target.value }, this.fetchItems);\n    };\n\n    getCategorizedMenuGroups = () =>\n        categorizedItems\n            .filter(type => {\n                const itemType = itemTypeMap[type];\n                return (\n                    this.state.items && this.state.items[itemType.endPointName]\n                );\n            })\n            .map(type => {\n                const itemType = itemTypeMap[type];\n                const itemCount = getDefaultItemCount(type);\n                const allItems = this.state.items[itemType.endPointName];\n                const hasMore = allItems.length > itemCount;\n                const items = this.state.maxOptions.has(itemType.id)\n                    ? allItems\n                    : allItems.slice(0, itemCount);\n\n                return (\n                    <CategorizedMenuGroup\n                        key={type}\n                        type={type}\n                        title={itemType.pluralTitle()}\n                        items={items}\n                        onChangeItemsLimit={this.fetchItems}\n                        hasMore={hasMore}\n                    />\n                );\n            });\n\n    getSinglesMenuGroups = () =>\n        singleItems.map(category => (\n            <SinglesMenuGroup key={category.id} category={category} />\n        ));\n\n    getMenuGroups = () =>\n        this.getCategorizedMenuGroups().concat(this.getSinglesMenuGroups());\n\n    fetchItems = async type => {\n        if (type) {\n            const maxOptions = this.state.maxOptions;\n\n            if (maxOptions.has(type)) {\n                maxOptions.delete(type);\n            } else {\n                maxOptions.add(type);\n            }\n\n            this.setState({ maxOptions });\n        } else {\n            this.setState({\n                maxOptions: new Set(),\n            });\n        }\n\n        let queryString = '?count=11';\n        if ([...this.state.maxOptions.values()].length) {\n            queryString +=\n                '&max=' + [...this.state.maxOptions.values()].join('&max=');\n        }\n\n        const filter = this.state.filter ? `/${this.state.filter}` : '';\n\n        this.context.d2.Api.getApi()\n            .get(`dashboards/q${filter}${queryString}`)\n            .then(response => this.setState({ items: response }))\n            .catch(console.error);\n    };\n\n    render() {\n        return (\n            <Fragment>\n                <ItemSearchField\n                    value={this.state.filter}\n                    onChange={this.setFilter}\n                    onFocus={this.openList}\n                />\n                <Popover\n                    className=\"dashboard-item-selector\"\n                    open={this.state.open}\n                    onClose={this.closeList}\n                    anchorEl={this.state.anchorEl}\n                    anchorOrigin={{ horizontal: 'left', vertical: 'bottom' }}\n                    transformOrigin={{ horizontal: 'left', vertical: 'top' }}\n                    style={{ height: '70vh' }}\n                    PaperProps={{ style: { width: '700px' } }}\n                    disableAutoFocus={true}\n                    disableRestoreFocus={true}\n                >\n                    <Menu>{this.getMenuGroups()}</Menu>\n                </Popover>\n            </Fragment>\n        );\n    }\n}\n\nItemSearchField.propTypes = {\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n    onFocus: PropTypes.func,\n};\n\nItemSelector.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nexport default ItemSelector;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport i18n from '@dhis2/d2-i18n';\nimport { InputField, TextAreaField } from '@dhis2/ui-core';\n\nimport ItemSelector from '../ItemSelector/ItemSelector';\nimport {\n    acSetDashboardTitle,\n    acSetDashboardDescription,\n} from '../../actions/editDashboard';\nimport { orObject } from '../../modules/util';\nimport { sGetEditDashboardRoot } from '../../reducers/editDashboard';\n\nconst styles = {\n    section: { display: 'flex', justifyContent: 'space-between' },\n    titleDescription: {\n        flex: '3',\n        marginRight: '50px',\n    },\n    title: {\n        display: 'block',\n        clear: 'both',\n    },\n    description: {\n        display: 'block',\n        clear: 'both',\n        marginTop: '15px',\n    },\n    underline: {\n        '&::before': {\n            borderBottom: `none`,\n        },\n        '&:hover::before': {\n            borderBottom: `none!important`,\n        },\n    },\n    input: {\n        backgroundColor: 'rgba(0, 0, 10, 0.05)',\n        borderRadius: '4px',\n        width: '100%',\n        '&:hover': {\n            backgroundColor: 'rgba(0, 0, 10, 0.08)',\n        },\n    },\n    itemSelector: {\n        flex: '2',\n        position: 'relative',\n    },\n};\n\nexport const EditTitleBar = ({\n    name,\n    description,\n    onChangeTitle,\n    onChangeDescription,\n    classes,\n}) => {\n    const updateTitle = (_, e) => {\n        onChangeTitle(e.target.value);\n    };\n\n    const updateDescription = (_, e) => {\n        onChangeDescription(e.target.value);\n    };\n\n    return (\n        <section className={classes.section}>\n            <div className={classes.titleDescription}>\n                <InputField\n                    className={classes.title}\n                    name=\"Dashboard title input\"\n                    label={i18n.t('Dashboard title')}\n                    type=\"text\"\n                    onChange={updateTitle}\n                    value={name}\n                    placeholder={i18n.t('Untitled dashboard')}\n                />\n                <TextAreaField\n                    className={classes.description}\n                    name=\"Dashboard description input\"\n                    label={i18n.t('Dashboard description')}\n                    onChange={updateDescription}\n                    value={description}\n                />\n            </div>\n            <div className={classes.itemSelector}>\n                <ItemSelector />\n            </div>\n        </section>\n    );\n};\n\nconst mapStateToProps = state => {\n    const selectedDashboard = orObject(sGetEditDashboardRoot(state));\n\n    return {\n        name: selectedDashboard.name,\n        description: selectedDashboard.description,\n    };\n};\n\nconst mapDispatchToProps = {\n    onChangeTitle: acSetDashboardTitle,\n    onChangeDescription: acSetDashboardDescription,\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(EditTitleBar));\n\nEditTitleBar.propTypes = {\n    onChangeDescription: PropTypes.func.isRequired,\n    onChangeTitle: PropTypes.func.isRequired,\n    classes: PropTypes.object,\n    description: PropTypes.string,\n    name: PropTypes.string,\n};\n\nEditTitleBar.defaultProps = {\n    name: '',\n    description: '',\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Button } from '@dhis2/ui-core';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport i18n from '@dhis2/d2-i18n';\n\nimport {\n    PeriodDimension,\n    DynamicDimension,\n    OrgUnitDimension,\n    DIMENSION_ID_PERIOD,\n    DIMENSION_ID_ORGUNIT,\n} from '@dhis2/analytics';\n\nconst peId = DIMENSION_ID_PERIOD;\nconst ouId = DIMENSION_ID_ORGUNIT;\n\nclass FilterDialog extends Component {\n    onConfirm = id => () => this.props.onConfirm(id);\n\n    dialogContent() {\n        const { displayNameProperty, dimension, selectedItems } = this.props;\n        const dialogId = dimension.id;\n\n        const commonProps = {\n            d2: this.context.d2,\n            onSelect: this.props.onSelect,\n            onDeselect: this.props.onDeselect,\n            onReorder: this.props.onReorder,\n        };\n\n        switch (dialogId) {\n            case peId: {\n                return (\n                    <PeriodDimension\n                        selectedPeriods={selectedItems}\n                        {...commonProps}\n                    />\n                );\n            }\n            case ouId:\n                return (\n                    <OrgUnitDimension\n                        displayNameProperty={displayNameProperty}\n                        ouItems={selectedItems}\n                        {...commonProps}\n                    />\n                );\n            default:\n                return (\n                    <DynamicDimension\n                        selectedItems={selectedItems}\n                        dialogId={dialogId}\n                        dialogTitle={dimension.name}\n                        {...commonProps}\n                    />\n                );\n        }\n    }\n\n    render() {\n        const { dimension, onClose } = this.props;\n        const dialogId = dimension.id;\n\n        return (\n            <Dialog\n                open={!!dialogId}\n                maxWidth=\"lg\"\n                disableEnforceFocus\n                onClose={onClose}\n            >\n                {dialogId && this.dialogContent()}\n                <DialogActions>\n                    <Button kind=\"secondary\" onClick={onClose}>\n                        {i18n.t('Cancel')}\n                    </Button>\n                    <Button kind=\"primary\" onClick={this.onConfirm(dialogId)}>\n                        {i18n.t('Confirm')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nFilterDialog.propTypes = {\n    dimension: PropTypes.object,\n    displayNameProperty: PropTypes.string,\n    selectedItems: PropTypes.array,\n    onClose: PropTypes.func,\n    onConfirm: PropTypes.func,\n    onDeselect: PropTypes.func,\n    onReorder: PropTypes.func,\n    onSelect: PropTypes.func,\n};\n\nFilterDialog.contextTypes = {\n    d2: PropTypes.object,\n};\n\nexport default FilterDialog;\n","export const SET_ACTIVE_MODAL_DIMENSION = 'SET_ACTIVE_MODAL_DIMENSION';\nexport const CLEAR_ACTIVE_MODAL_DIMENSION = 'CLEAR_ACTIVE_MODAL_DIMENSION';\n\nexport const DEFAULT_STATE_ACTIVE_MODAL_DIMENSION = {};\n\nexport default (state = DEFAULT_STATE_ACTIVE_MODAL_DIMENSION, action) => {\n    switch (action.type) {\n        case SET_ACTIVE_MODAL_DIMENSION: {\n            return action.value;\n        }\n        case CLEAR_ACTIVE_MODAL_DIMENSION: {\n            return DEFAULT_STATE_ACTIVE_MODAL_DIMENSION;\n        }\n        default:\n            return state;\n    }\n};\n\nexport const sGetActiveModalDimension = state => state.activeModalDimension;\n","import {\n    SET_ACTIVE_MODAL_DIMENSION,\n    CLEAR_ACTIVE_MODAL_DIMENSION,\n} from '../reducers/activeModalDimension';\n\nexport const acSetActiveModalDimension = value => ({\n    type: SET_ACTIVE_MODAL_DIMENSION,\n    value,\n});\n\nexport const acClearActiveModalDimension = () => ({\n    type: CLEAR_ACTIVE_MODAL_DIMENSION,\n});\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Popover from '@material-ui/core/Popover';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport { withTheme } from '@material-ui/core/styles';\n\nimport i18n from '@dhis2/d2-i18n';\nimport { DimensionsPanel } from '@dhis2/analytics';\n\nimport { Button } from '@dhis2/ui-core';\nimport FilterDialog from './FilterDialog';\n\nimport { sGetSettingsDisplayNameProperty } from '../../reducers/settings';\nimport { sGetActiveModalDimension } from '../../reducers/activeModalDimension';\nimport { sGetDimensions } from '../../reducers/dimensions';\nimport { sGetFiltersKeys } from '../../reducers/itemFilters';\nimport { sGetEditItemFiltersRoot } from '../../reducers/editItemFilters';\nimport { acAddItemFilter, acRemoveItemFilter } from '../../actions/itemFilters';\nimport {\n    acRemoveEditItemFilter,\n    acSetEditItemFilters,\n} from '../../actions/editItemFilters';\nimport {\n    acClearActiveModalDimension,\n    acSetActiveModalDimension,\n} from '../../actions/activeModalDimension';\n\nclass FilterSelector extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n        };\n    }\n\n    openPanel = (_, event) => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    closePanel = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    closeDialog = () => {\n        this.setState({ anchorEl: null });\n\n        this.props.clearActiveModalDimension();\n    };\n\n    selectDimension = id => {\n        this.props.setActiveModalDimension(\n            this.props.dimensions.find(dimension => dimension.id === id)\n        );\n    };\n\n    onSelectItems = ({ dimensionId, items }) => {\n        this.props.setEditItemFilters({\n            ...this.props.selectedItems,\n            [dimensionId]: items,\n        });\n    };\n\n    onDeselectItems = ({ dimensionId, itemIdsToRemove }) => {\n        const oldList = this.props.selectedItems[dimensionId] || [];\n        const newList = oldList.filter(\n            item => !itemIdsToRemove.includes(item.id)\n        );\n\n        if (newList.length) {\n            this.props.setEditItemFilters({\n                ...this.props.selectedItems,\n                [dimensionId]: newList,\n            });\n        } else {\n            this.props.removeEditItemFilter(dimensionId);\n        }\n    };\n\n    onReorderItems = ({ dimensionId, itemIds }) => {\n        const oldList = this.props.selectedItems[dimensionId] || [];\n        const reorderedList = itemIds.map(id =>\n            oldList.find(item => item.id === id)\n        );\n\n        this.props.setEditItemFilters({\n            ...this.props.selectedItems,\n            [dimensionId]: reorderedList,\n        });\n    };\n\n    saveFilter = id => {\n        const filterItems = this.props.selectedItems[id];\n\n        if (filterItems && filterItems.length) {\n            this.props.addItemFilter({\n                id,\n                value: [...filterItems],\n            });\n        } else {\n            this.props.removeItemFilter(id);\n        }\n\n        this.closeDialog();\n    };\n\n    render() {\n        const {\n            theme,\n            displayNameProperty,\n            dimension,\n            dimensions,\n            selectedDimensions,\n            selectedItems,\n        } = this.props;\n\n        return (\n            <Fragment>\n                <Button onClick={this.openPanel}>\n                    {i18n.t('Add filter')}\n                    <ArrowDropDownIcon />\n                </Button>\n                <Popover\n                    open={Boolean(this.state.anchorEl)}\n                    anchorEl={this.state.anchorEl}\n                    anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\n                    onClose={this.closePanel}\n                    style={{\n                        height: '100%',\n                        fontFamily: theme.typography.fontFamily,\n                    }}\n                >\n                    <DimensionsPanel\n                        style={{ width: '320px' }}\n                        dimensions={dimensions}\n                        onDimensionClick={this.selectDimension}\n                        selectedIds={selectedDimensions}\n                    />\n                </Popover>\n                {dimension ? (\n                    <FilterDialog\n                        displayNameProperty={displayNameProperty}\n                        dimension={dimension}\n                        selectedItems={selectedItems[dimension.id] || []}\n                        onSelect={this.onSelectItems}\n                        onDeselect={this.onDeselectItems}\n                        onReorder={this.onReorderItems}\n                        onClose={this.closeDialog}\n                        onConfirm={this.saveFilter}\n                    />\n                ) : null}\n            </Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    displayNameProperty: sGetSettingsDisplayNameProperty(state),\n    dimension: sGetActiveModalDimension(state),\n    dimensions: sGetDimensions(state),\n    selectedDimensions: sGetFiltersKeys(state),\n    selectedItems: sGetEditItemFiltersRoot(state),\n});\n\nFilterSelector.propTypes = {\n    addItemFilter: PropTypes.func,\n    clearActiveModalDimension: PropTypes.func,\n    dimension: PropTypes.object,\n    dimensions: PropTypes.array,\n    displayNameProperty: PropTypes.string,\n    removeEditItemFilter: PropTypes.func,\n    removeItemFilter: PropTypes.func,\n    selectedDimensions: PropTypes.array,\n    selectedItems: PropTypes.object,\n    setActiveModalDimension: PropTypes.func,\n    setEditItemFilters: PropTypes.func,\n    theme: PropTypes.object,\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        clearActiveModalDimension: acClearActiveModalDimension,\n        setActiveModalDimension: acSetActiveModalDimension,\n        addItemFilter: acAddItemFilter,\n        removeItemFilter: acRemoveItemFilter,\n        removeEditItemFilter: acRemoveEditItemFilter,\n        setEditItemFilters: acSetEditItemFilters,\n    }\n)(withTheme()(FilterSelector));\n","import React, { Component } from 'react';\nimport InfoOutlineIcon from '@material-ui/icons/InfoOutlined';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nclass Info extends Component {\n    show = false;\n\n    toggle() {\n        this.show = !this.show;\n        return this.show;\n    }\n\n    render() {\n        return (\n            <div onClick={() => this.props.onClick(this.toggle())}>\n                <InfoOutlineIcon style={{ fill: colors.grey600 }} />\n            </div>\n        );\n    }\n}\n\nInfo.propTypes = {\n    onClick: PropTypes.func,\n};\n\nexport default Info;\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport SharingDialog from '@dhis2/d2-ui-sharing-dialog';\nimport Star from '@material-ui/icons/Star';\nimport StarBorder from '@material-ui/icons/StarBorder';\n\nimport { orObject } from '../../modules/util';\nimport { tStarDashboard } from '../../actions/dashboards';\nimport { acSetSelectedShowDescription } from '../../actions/selected';\nimport FilterSelector from '../ItemFilter/FilterSelector';\nimport { Button } from '@dhis2/ui-core';\nimport Info from './Info';\nimport {\n    sGetSelectedId,\n    sGetSelectedShowDescription,\n} from '../../reducers/selected';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n} from '../../reducers/dashboards';\nimport { colors } from '@dhis2/ui-core';\n\nconst styles = {\n    actions: {\n        display: 'flex',\n        alignItems: 'center',\n        marginLeft: '20px',\n    },\n    starIcon: {\n        fill: colors.grey600,\n    },\n    textButton: {\n        minWidth: '30px',\n        top: '1px',\n    },\n    editLink: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        textDecoration: 'none',\n        marginRight: '4px',\n    },\n    titleBar: {\n        display: 'flex',\n        alignItems: 'flex-start',\n    },\n    titleBarIcon: {\n        marginLeft: 5,\n        position: 'relative',\n        top: 1,\n        cursor: 'pointer',\n    },\n};\n\nclass ViewTitleBar extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            sharingDialogIsOpen: false,\n        };\n    }\n\n    toggleSharingDialog = () =>\n        this.setState({ sharingDialogIsOpen: !this.state.sharingDialogIsOpen });\n\n    render() {\n        const {\n            id,\n            name,\n            description,\n            access,\n            style,\n            showDescription,\n            starred,\n            onStarClick,\n            onInfoClick,\n            classes,\n        } = this.props;\n\n        const titleStyle = Object.assign({}, style.title, {\n            cursor: 'default',\n            userSelect: 'text',\n            top: '7px',\n        });\n\n        const StarIcon = starred ? Star : StarBorder;\n\n        return (\n            <Fragment>\n                <div className={classes.titleBar}>\n                    <span style={titleStyle}>{name}</span>\n                    <div className={classes.actions}>\n                        <div\n                            className={classes.titleBarIcon}\n                            onClick={onStarClick}\n                        >\n                            <StarIcon className={classes.starIcon} />\n                        </div>\n                        <div className={classes.titleBarIcon}>\n                            <Info onClick={onInfoClick} />\n                        </div>\n                        <div style={{ marginLeft: '10px' }}>\n                            {access.update ? (\n                                <Link\n                                    className={classes.editLink}\n                                    to={`/${id}/edit`}\n                                >\n                                    <Button>{i18n.t('Edit')}</Button>\n                                </Link>\n                            ) : null}\n                            {access.manage ? (\n                                <span style={{ marginRight: '4px' }}>\n                                    <Button onClick={this.toggleSharingDialog}>\n                                        {i18n.t('Share')}\n                                    </Button>\n                                </span>\n                            ) : null}\n                            <span style={{ marginRight: '4px' }}>\n                                <FilterSelector />\n                            </span>\n                        </div>\n                    </div>\n                </div>\n                {showDescription ? (\n                    <div\n                        className=\"dashboard-description\"\n                        style={Object.assign(\n                            { paddingTop: '5px', paddingBottom: '5px' },\n                            style.description,\n                            !description ? { color: '#888' } : {}\n                        )}\n                    >\n                        {description || i18n.t('No description')}\n                    </div>\n                ) : null}\n                {id ? (\n                    <SharingDialog\n                        d2={this.context.d2}\n                        id={id}\n                        type=\"dashboard\"\n                        open={this.state.sharingDialogIsOpen}\n                        onRequestClose={this.toggleSharingDialog}\n                    />\n                ) : null}\n            </Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    const id = sGetSelectedId(state);\n    const dashboard = orObject(sGetDashboardById(state, id));\n\n    return {\n        id,\n        name: dashboard.displayName,\n        description: dashboard.displayDescription,\n        dashboardItems: sGetDashboardItems(state),\n        showDescription: sGetSelectedShowDescription(state),\n        starred: dashboard.starred,\n        access: orObject(dashboard.access),\n    };\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const { id, starred, showDescription } = stateProps;\n    const { dispatch } = dispatchProps;\n\n    return {\n        ...stateProps,\n        ...ownProps,\n        onStarClick: () => dispatch(tStarDashboard(id, !starred)),\n        onInfoClick: () =>\n            dispatch(acSetSelectedShowDescription(!showDescription)),\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    null,\n    mergeProps\n)(withStyles(styles)(ViewTitleBar));\n\nViewTitleBar.propTypes = {\n    access: PropTypes.object,\n    classes: PropTypes.object,\n    description: PropTypes.string,\n    id: PropTypes.string,\n    name: PropTypes.string,\n    showDescription: PropTypes.bool,\n    starred: PropTypes.bool,\n    style: PropTypes.object,\n    onInfoClick: PropTypes.func,\n    onStarClick: PropTypes.func,\n};\n\nViewTitleBar.defaultProps = {\n    name: '',\n    description: '',\n    starred: false,\n    showDescription: false,\n    onInfoClick: null,\n};\n\nViewTitleBar.contextTypes = {\n    d2: PropTypes.object,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { colors } from '@dhis2/ui-core';\nimport EditTitleBar from './EditTitleBar';\nimport ViewTitleBar from './ViewTitleBar';\n\nimport './TitleBar.css';\n\nconst style = {\n    title: {\n        position: 'relative',\n        fontSize: 21,\n        fontWeight: 500,\n        color: colors.black,\n        minWidth: 50,\n    },\n    description: {\n        fontSize: 14,\n        color: colors.grey800,\n    },\n};\n\nconst TitleBar = ({ edit }) => {\n    return (\n        <div\n            className=\"titlebar-wrapper\"\n            style={{\n                padding: '20px 15px 5px 10px',\n            }}\n        >\n            {edit ? (\n                <EditTitleBar style={style} />\n            ) : (\n                <ViewTitleBar style={style} />\n            )}\n        </div>\n    );\n};\n\nTitleBar.propTypes = {\n    edit: PropTypes.bool,\n};\n\nexport default TitleBar;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport i18n from '@dhis2/d2-i18n';\n\nimport * as pluginManager from './plugin';\nimport { getBaseUrl, orObject } from '../../../modules/util';\nimport { getGridItemDomId } from '../../ItemGrid/gridUtil';\n\nconst pluginCredentials = d2 => {\n    return {\n        baseUrl: getBaseUrl(d2),\n        auth: d2.Api.getApi().defaultHeaders.Authorization,\n    };\n};\n\nclass DefaultPlugin extends Component {\n    pluginCredentials = null;\n\n    constructor(props, context) {\n        super(props);\n\n        this.d2 = context.d2;\n    }\n\n    shouldPluginReload = prevProps => {\n        // TODO - fix this hack, to handle bug with multiple\n        // rerendering while switching between dashboards.\n        //\n        // To determine if the rendering is happening because of a\n        // dashboard switch, check if the item reference has changed.\n        const reloadAllowed = this.props.item === prevProps.item;\n\n        const filtersChanged = prevProps.itemFilters !== this.props.itemFilters;\n        const vis = orObject(this.props.visualization);\n        const prevVis = orObject(prevProps.visualization);\n        const visChanged =\n            vis.id !== prevVis.id || vis.activeType !== prevVis.activeType;\n\n        return reloadAllowed && (visChanged || filtersChanged);\n    };\n\n    reloadPlugin = prevProps => {\n        if (\n            pluginManager.pluginIsAvailable(\n                this.props.item,\n                this.props.visualization\n            ) &&\n            this.shouldPluginReload(prevProps)\n        ) {\n            const prevVis = orObject(prevProps.visualization);\n            const currentVis = this.props.visualization;\n\n            const useActiveType =\n                currentVis.activeType !== prevVis.activeType ||\n                currentVis.activeType !== this.props.item.type;\n\n            if (\n                useActiveType ||\n                this.props.itemFilters !== prevProps.itemFilters\n            ) {\n                pluginManager.unmount(\n                    this.props.item,\n                    prevVis.activeType || this.props.item.type\n                );\n\n                pluginManager.load(this.props.item, this.props.visualization, {\n                    credentials: this.pluginCredentials,\n                    activeType: useActiveType ? currentVis.activeType : null,\n                });\n            }\n        }\n    };\n\n    componentDidMount() {\n        this.pluginCredentials = pluginCredentials(this.d2);\n\n        if (\n            pluginManager.pluginIsAvailable(\n                this.props.item,\n                this.props.visualization\n            )\n        ) {\n            pluginManager.load(this.props.item, this.props.visualization, {\n                credentials: this.pluginCredentials,\n                activeType: !this.props.editMode ? this.getActiveType() : null,\n                options: this.props.options,\n            });\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        this.reloadPlugin(prevProps);\n    }\n\n    getActiveType = () =>\n        this.props.visualization.activeType || this.props.item.type;\n\n    render() {\n        const { classes, item, visualization, style } = this.props;\n        const pluginIsAvailable = pluginManager.pluginIsAvailable(\n            item,\n            visualization\n        );\n\n        return pluginIsAvailable ? (\n            <div id={getGridItemDomId(item.id)} style={style} />\n        ) : (\n            <div className={classes.textDiv}>\n                {i18n.t('Unable to load the plugin for this item')}\n            </div>\n        );\n    }\n}\n\nDefaultPlugin.contextTypes = {\n    d2: PropTypes.object,\n};\n\nDefaultPlugin.propTypes = {\n    classes: PropTypes.object,\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    itemFilters: PropTypes.object,\n    options: PropTypes.object,\n    style: PropTypes.object,\n    visualization: PropTypes.object,\n};\n\nDefaultPlugin.defaultProps = {\n    style: {},\n    item: {},\n    itemFilters: {},\n    options: {},\n    visualization: {},\n};\n\nexport default DefaultPlugin;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\n\nexport const ThreeDots = () => (\n    <svg\n        height=\"18\"\n        viewBox=\"0 0 18 18\"\n        width=\"18\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n    >\n        <path\n            d=\"m4 7.5c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm10 0c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm-5 0c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5z\"\n            fill=\"#6e7a8a\"\n        />\n    </svg>\n);\n\nexport const SpeechBubble = () => (\n    <svg\n        height=\"20\"\n        viewBox=\"0 0 20 20\"\n        width=\"20\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        style={{ margin: '3px 2px 0 2px' }} // Temporary fix for the misaligned icon, should be removed once the icon is replaced\n    >\n        <path\n            d=\"m20 2h-16c-1.1 0-1.99.9-1.99 2l-.01 18 4-4h14c1.1 0 2-.9 2-2v-12c0-1.1-.9-2-2-2zm-2 12h-12v-2h12zm0-3h-12v-2h12zm0-3h-12v-2h12z\"\n            fill=\"#6e7a8a\"\n            fillRule=\"evenodd\"\n            transform=\"translate(-2 -2)\"\n        />\n    </svg>\n);\n\nexport const Warning = () => (\n    <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        height=\"24\"\n        viewBox=\"0 0 24 24\"\n        width=\"24\"\n        fill={colors.grey600}\n    >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z\" />\n    </svg>\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Warning } from './assets/icons';\n\nimport classes from './styles/FatalErrorBoundary.module.css';\n\nclass FatalErrorBoundary extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            errorFound: false,\n        };\n    }\n    componentDidCatch(error, info) {\n        this.setState({\n            errorFound: true,\n        });\n        console.log('error: ', error);\n        console.log('info: ', info);\n    }\n    render() {\n        if (this.state.errorFound) {\n            return (\n                <p className={classes.container}>\n                    <span className={classes.icon}>\n                        <Warning />\n                    </span>\n                    <span className={classes.message}>\n                        {i18n.t(\n                            'There was a problem loading this dashboard item'\n                        )}\n                    </span>\n                </p>\n            );\n        }\n        return this.props.children;\n    }\n}\n\nFatalErrorBoundary.propTypes = {\n    children: PropTypes.node,\n};\n\nexport default FatalErrorBoundary;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\n\nimport { extractFavorite } from './plugin';\n\nimport { getAppName, itemTypeMap } from '../../../modules/itemTypes';\n\nimport classes from './styles/VisualizationErrorMessage.module.css';\n\nconst getErrorIcon = () => (\n    <svg\n        height=\"96\"\n        viewBox=\"0 0 96 96\"\n        width=\"96\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n    >\n        <g fill=\"#d5dde5\" transform=\"translate(3 3)\">\n            <path d=\"m40.5 73.5000001c0 2.4852813 2.0147186 4.5 4.5 4.5s4.5-2.0147187 4.5-4.5c0-2.4142734-1.9012365-4.3844892-4.2881643-4.4951021l-.2128322-.0048979c-2.4848234.0005384-4.4990035 2.0150507-4.4990035 4.5z\" />\n            <path d=\"m48 60v-30c0-1.6568542-1.3431458-3-3-3s-3 1.3431458-3 3v30c0 1.6568542 1.3431458 3 3 3s3-1.3431458 3-3z\" />\n            <path d=\"m45-2.99904788c3.8985931 0 7.4578604 2.21715778 9.1770339 5.71709169l37.8912554 77.19048409c1.3845546 2.8165473 1.2171646 6.1482722-.4427191 8.811863-1.6598833 2.6635901-4.5771005 4.2816904-7.7135702 4.2796124h-77.82201115c-3.13845856.002078-6.05567574-1.6160223-7.71555901-4.2796124-1.65988369-2.6635908-1.82727377-5.9953157-.44346379-8.8103471l37.89234295-77.19269833c1.7188306-3.49923557 5.2780979-5.71639335 9.176691-5.71639335zm0 6c-1.6106864 0-3.0811818.91600885-3.7909661 2.36100407l-37.89274459 77.19351591c-.47005356.9562122-.41322496 2.0873262.15030227 2.99161.56352731.9042839 1.5539177 1.4529206 2.62140842 1.4529206h77.8259889c1.0655018 0 2.0558922-.5486367 2.6194195-1.4529206.5635272-.9042838.6203558-2.0353978.1495577-2.9931259l-37.8916571-77.19130167c-.7101272-1.44569356-2.1806226-2.36170241-3.791309-2.36170241z\" />\n        </g>\n    </svg>\n);\n\nconst VisualizationErrorMessage = ({ item, baseUrl }) => {\n    const visHref = `${baseUrl}/${itemTypeMap[item.type].appUrl(\n        extractFavorite(item).id\n    )}`;\n\n    return (\n        <div className={classes.center}>\n            {getErrorIcon()}\n            <p className={classes.errorMessage}>\n                {i18n.t('There was an error loading data for this item')}\n            </p>\n            <p className={classes.appLink}>\n                <a\n                    onClick={e => e.stopPropagation()}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    href={visHref}\n                >\n                    {i18n.t('Open this item in {{appName}}', {\n                        appName: getAppName(item.type),\n                    })}\n                </a>\n            </p>\n        </div>\n    );\n};\n\nVisualizationErrorMessage.propTypes = {\n    baseUrl: PropTypes.string,\n    item: PropTypes.object,\n};\n\nexport default VisualizationErrorMessage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { colors } from '@dhis2/ui-core';\n\nimport classes from './styles/DeleteItemButton.module.css';\n\nconst DeleteItemButton = ({ onClick }) => (\n    <button\n        type=\"button\"\n        className={classes.deleteItemButton}\n        onClick={onClick}\n        title={i18n.t(`Delete item`)}\n    >\n        <DeleteIcon style={{ fill: colors.red500 }} />\n    </button>\n);\n\nDeleteItemButton.propTypes = {\n    onClick: PropTypes.func,\n};\n\nexport default DeleteItemButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { sGetIsEditing } from '../../reducers/editDashboard';\nimport { acRemoveDashboardItem } from '../../actions/editDashboard';\nimport DeleteItemButton from './DeleteItemButton';\n\nimport classes from './styles/ItemHeader.module.css';\n\n// This is the margin-top + margin-bottom defined in the css file\nexport const HEADER_MARGIN_HEIGHT = 12;\n\nconst ItemHeader = props => {\n    const {\n        title,\n        editMode,\n        actionButtons,\n        itemId,\n        acRemoveDashboardItem,\n        forwardedRef,\n    } = props;\n\n    const handleDeleteItem = () => acRemoveDashboardItem(itemId);\n\n    return (\n        <div className={classes.itemHeaderWrap} ref={forwardedRef}>\n            <p className={classes.itemTitle}>{title}</p>\n            {editMode ? (\n                <div className={classes.itemActionsWrap}>\n                    <DeleteItemButton onClick={handleDeleteItem} />\n                </div>\n            ) : (\n                actionButtons && (\n                    <div className={classes.itemActionsWrap}>\n                        {actionButtons}\n                    </div>\n                )\n            )}\n        </div>\n    );\n};\n\nItemHeader.propTypes = {\n    acRemoveDashboardItem: PropTypes.func,\n    actionButtons: PropTypes.node,\n    editMode: PropTypes.bool,\n    forwardedRef: PropTypes.object,\n    itemId: PropTypes.string,\n    title: PropTypes.string,\n};\n\nItemHeader.defaultProps = {\n    forwardedRef: {},\n};\n\nconst mapStateToProps = state => ({\n    editMode: sGetIsEditing(state),\n});\n\nconst mapDispatchToProps = {\n    acRemoveDashboardItem,\n};\n\nconst ConnectedItemHeader = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ItemHeader);\n\n// TODO this is a false positive that is fixed in eslint-plugin-react v7.15\n// github.com/yannickcr/eslint-plugin-react/blob/master/CHANGELOG.md\n/* eslint-disable react/display-name */\nexport default React.forwardRef((props, ref) => (\n    <ConnectedItemHeader {...props} forwardedRef={ref} />\n));\n/* eslint-enable react/display-name */\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n    isSingleValue,\n    isYearOverYear,\n    VIS_TYPE_GAUGE,\n    VIS_TYPE_PIE,\n} from '@dhis2/analytics';\nimport { Button, Menu, MenuItem, Divider, colors } from '@dhis2/ui-core';\nimport i18n from '@dhis2/d2-i18n';\nimport Popover from '@material-ui/core/Popover';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\nimport LaunchIcon from '@material-ui/icons/Launch';\n\nimport { ThreeDots, SpeechBubble } from './assets/icons';\nimport { pluginIsAvailable, getLink } from './plugin';\nimport {\n    CHART,\n    MAP,\n    REPORT_TABLE,\n    EVENT_CHART,\n    EVENT_REPORT,\n    isTrackerDomainType,\n    hasMapView,\n    getAppName,\n} from '../../../modules/itemTypes';\n\nconst iconFill = { fill: colors.grey600 };\n\nconst ItemHeaderButtons = props => {\n    const [anchorEl, setAnchorEl] = useState(null);\n\n    const { item, visualization, onSelectActiveType, d2, activeType } = props;\n\n    const isTrackerType = isTrackerDomainType(item.type);\n\n    const onViewTable = () => {\n        handleClose();\n        onSelectActiveType(isTrackerType ? EVENT_REPORT : REPORT_TABLE);\n    };\n\n    const onViewChart = () => {\n        handleClose();\n        onSelectActiveType(isTrackerType ? EVENT_CHART : CHART);\n    };\n\n    const onViewMap = () => {\n        handleClose();\n        onSelectActiveType(MAP);\n    };\n\n    const itemHasMapView = () => hasMapView(item.type);\n\n    const handleMenuClick = (_, event) => setAnchorEl(event.currentTarget);\n\n    const handleInterpretationClick = () => {\n        props.onToggleFooter();\n        if (anchorEl !== null) {\n            handleClose();\n        }\n    };\n\n    const handleClose = () => setAnchorEl(null);\n\n    const type = visualization.type || item.type;\n    const canViewAs =\n        !isSingleValue(type) &&\n        !isYearOverYear(type) &&\n        type !== VIS_TYPE_GAUGE &&\n        type !== VIS_TYPE_PIE;\n\n    const interpretationMenuLabel = props.activeFooter\n        ? i18n.t(`Hide interpretations and details`)\n        : i18n.t(`Show interpretations and details`);\n\n    const ViewAsMenuItems = () => (\n        <>\n            {activeType !== CHART && activeType !== EVENT_CHART && (\n                <MenuItem\n                    dense\n                    label={i18n.t('View as Chart')}\n                    onClick={onViewChart}\n                    icon={<ChartIcon style={iconFill} />}\n                />\n            )}\n            {activeType !== REPORT_TABLE && activeType !== EVENT_REPORT && (\n                <MenuItem\n                    dense\n                    label={i18n.t('View as Table')}\n                    onClick={onViewTable}\n                    icon={<TableIcon style={iconFill} />}\n                />\n            )}\n            {itemHasMapView() && activeType !== MAP && (\n                <MenuItem\n                    dense\n                    label={i18n.t('View as Map')}\n                    onClick={onViewMap}\n                    icon={<MapIcon style={iconFill} />}\n                />\n            )}\n        </>\n    );\n\n    return pluginIsAvailable(item, visualization) ? (\n        <>\n            <Button small secondary onClick={handleMenuClick}>\n                <ThreeDots />\n            </Button>\n            {anchorEl && (\n                <Popover\n                    open={Boolean(anchorEl)}\n                    onClose={handleClose}\n                    anchorEl={anchorEl}\n                >\n                    <Menu>\n                        {canViewAs && (\n                            <>\n                                <ViewAsMenuItems />\n                                <Divider />\n                            </>\n                        )}\n                        <MenuItem\n                            dense\n                            icon={<LaunchIcon style={{ fill: '#6e7a8a' }} />}\n                            label={i18n.t('Open in {{appName}} app', {\n                                appName: getAppName(item.type),\n                            })}\n                            href={getLink(item, d2)}\n                            target=\"_blank\"\n                        />\n                        <MenuItem\n                            dense\n                            icon={<SpeechBubble />}\n                            label={interpretationMenuLabel}\n                            onClick={handleInterpretationClick}\n                        />\n                    </Menu>\n                </Popover>\n            )}\n        </>\n    ) : null;\n};\n\nItemHeaderButtons.propTypes = {\n    activeFooter: PropTypes.bool,\n    activeType: PropTypes.string,\n    d2: PropTypes.object,\n    item: PropTypes.object,\n    visualization: PropTypes.object,\n    onSelectActiveType: PropTypes.func,\n    onToggleFooter: PropTypes.func,\n};\n\nexport default ItemHeaderButtons;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { colors } from '@dhis2/ui-core';\nimport { getId } from './plugin';\nimport InterpretationsComponent from '@dhis2/d2-ui-interpretations';\n\nconst style = {\n    scrollContainer: {\n        overflowY: 'auto',\n        height: '340px',\n    },\n    line: {\n        margin: '-1px 0px 0px',\n        height: '1px',\n        border: 'none',\n        backgroundColor: colors.grey100,\n    },\n};\n\nclass ItemFooter extends Component {\n    render() {\n        const objectId = getId(this.props.item);\n\n        return (\n            <div className=\"dashboard-item-footer\">\n                <hr style={style.line} />\n                <div style={style.scrollContainer}>\n                    <InterpretationsComponent\n                        d2={this.context.d2}\n                        item={this.props.item}\n                        type={this.props.item.type.toLowerCase()}\n                        id={objectId}\n                        appName=\"dashboard\"\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nItemFooter.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nItemFooter.propTypes = {\n    item: PropTypes.object.isRequired,\n};\n\nexport default ItemFooter;\n","// Note that this ignores discrepancies in 'this', so shouldn't be used with bound functions\n// This is useful instead of lodash/memoize when we only need to memoize a single value\n// Inspiration: https://github.com/alexreardon/memoize-one\n\nconst memoizeOne = fn => {\n    let lastArgs = undefined;\n    let lastValue = undefined;\n\n    return (...args) => {\n        if (\n            lastArgs &&\n            args.length === lastArgs.length &&\n            args.every((arg, i) => arg === lastArgs[i])\n        ) {\n            return lastValue;\n        }\n        lastArgs = args;\n        lastValue = fn(...args);\n        return lastValue;\n    };\n};\n\nexport default memoizeOne;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst styles = theme => ({\n    progress: {\n        margin: theme.spacing.unit * 2,\n        maxWidth: 200,\n        textAlign: 'center',\n        alignSelf: 'center',\n    },\n    outer: {\n        display: 'flex',\n        justifyContent: 'center',\n        height: '100%',\n    },\n});\n\nfunction CircularIndeterminate(props) {\n    const { classes } = props;\n    return (\n        <div className={classes.outer}>\n            <CircularProgress className={classes.progress} />\n        </div>\n    );\n}\n\nCircularIndeterminate.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(CircularIndeterminate);\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport uniqueId from 'lodash/uniqueId';\nimport VisualizationPlugin from '@dhis2/data-visualizer-plugin';\nimport i18n from '@dhis2/d2-i18n';\n\nimport DefaultPlugin from './DefaultPlugin';\nimport FatalErrorBoundary from './FatalErrorBoundary';\nimport VisualizationErrorMessage from './VisualizationErrorMessage';\nimport ItemHeader, { HEADER_MARGIN_HEIGHT } from '../ItemHeader';\nimport ItemHeaderButtons from './ItemHeaderButtons';\nimport ItemFooter from './ItemFooter';\nimport * as pluginManager from './plugin';\nimport { sGetVisualization } from '../../../reducers/visualizations';\nimport { sGetItemFiltersRoot } from '../../../reducers/itemFilters';\nimport {\n    acAddVisualization,\n    acSetActiveVisualizationType,\n} from '../../../actions/visualizations';\nimport {\n    VISUALIZATION,\n    MAP,\n    CHART,\n    REPORT_TABLE,\n} from '../../../modules/itemTypes';\nimport memoizeOne from '../../../modules/memoizeOne';\nimport { getBaseUrl } from '../../../modules/util';\n\nimport { colors } from '@dhis2/ui-core';\nimport { getVisualizationConfig } from './plugin';\nimport LoadingMask from './LoadingMask';\nimport { ITEM_CONTENT_PADDING_BOTTOM } from '../../ItemGrid/ItemGrid';\n\nconst styles = {\n    icon: {\n        width: 16,\n        height: 16,\n        marginLeft: 3,\n        cursor: 'pointer',\n        fill: colors.grey600,\n    },\n    title: {\n        overflow: 'hidden',\n        maxWidth: '85%',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n    },\n    textDiv: {\n        fontSize: '14px',\n        fontStretch: 'normal',\n        padding: '10px',\n        lineHeight: '20px',\n    },\n    loadingCover: {\n        position: 'absolute',\n        height: '100%',\n        width: '100%',\n        left: 0,\n        top: 0,\n        zIndex: 100,\n        background: '#ffffffab',\n    },\n};\n\nexport class Item extends Component {\n    state = {\n        showFooter: false,\n        configLoaded: false,\n        pluginIsLoaded: false,\n        isError: false,\n    };\n\n    constructor(props, context) {\n        super(props);\n\n        this.d2 = context.d2;\n\n        this.contentRef = React.createRef();\n        this.headerRef = React.createRef();\n\n        this.memoizedApplyFilters = memoizeOne(this.applyFilters);\n\n        this.memoizedGetVisualizationConfig = memoizeOne(\n            getVisualizationConfig\n        );\n\n        this.memoizedGetContentStyle = memoizeOne(this.getContentStyle);\n    }\n\n    async componentDidMount() {\n        this.props.onVisualizationLoaded(\n            // TODO do not call fetch on the pluginManager, do it here as the manager will eventually be removed...\n            await pluginManager.fetch(this.props.item)\n        );\n\n        this.setState({\n            configLoaded: true,\n        });\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (\n            prevProps.visualization !== this.props.visualization ||\n            prevProps.itemFilters !== this.props.itemFilters\n        ) {\n            if (this.state.isError) {\n                this.setState({ isError: false });\n            }\n\n            if (prevState.pluginIsLoaded) {\n                // if the visualization or filters has changed, then mark pluginLoaded as false\n                // since a different plugin may be needed\n                this.setState({\n                    pluginIsLoaded: false,\n                });\n            }\n        }\n    }\n\n    applyFilters = (visualization, filters) => {\n        if (!Object.keys(filters).length) {\n            return visualization;\n        }\n\n        // deep clone objects in filters to avoid changing the visualization in the Redux store\n        const visRows = visualization.rows.map(obj => ({ ...obj }));\n        const visColumns = visualization.columns.map(obj => ({\n            ...obj,\n        }));\n        const visFilters = visualization.filters.map(obj => ({\n            ...obj,\n        }));\n\n        Object.keys(filters).forEach(dimensionId => {\n            if (filters[dimensionId]) {\n                let dimensionFound = false;\n\n                [visRows, visColumns, visFilters].forEach(dimensionObjects =>\n                    dimensionObjects\n                        .filter(obj => obj.dimension === dimensionId)\n                        .forEach(obj => {\n                            dimensionFound = true;\n                            obj.items = filters[dimensionId];\n                        })\n                );\n\n                // add dimension to filters if not already present elsewhere\n                if (!dimensionFound) {\n                    visFilters.push({\n                        dimension: dimensionId,\n                        items: filters[dimensionId],\n                    });\n                }\n            }\n        });\n\n        return {\n            ...visualization,\n            rows: visRows,\n            columns: visColumns,\n            filters: visFilters,\n        };\n    };\n\n    getFilterVersion = memoizeOne(() => uniqueId());\n\n    onError = () => this.setState({ isError: true });\n\n    pluginCredentials = null;\n\n    getPluginComponent = () => {\n        const calculatedHeight =\n            this.props.item.originalHeight -\n            this.headerRef.current.clientHeight -\n            HEADER_MARGIN_HEIGHT -\n            ITEM_CONTENT_PADDING_BOTTOM;\n\n        const style = this.memoizedGetContentStyle(\n            calculatedHeight,\n            this.contentRef ? this.contentRef.offsetHeight : null,\n            this.props.editMode\n        );\n\n        if (this.state.isError) {\n            return (\n                <div style={style}>\n                    <VisualizationErrorMessage\n                        item={this.props.item}\n                        baseUrl={getBaseUrl(this.d2)}\n                    />\n                </div>\n            );\n        }\n\n        const activeType = this.getActiveType();\n        const visualization = this.memoizedGetVisualizationConfig(\n            this.props.visualization,\n            this.props.item.type,\n            activeType\n        );\n\n        if (!visualization) {\n            return (\n                <div className={this.props.classes.textDiv}>\n                    {i18n.t('No data to display')}\n                </div>\n            );\n        }\n\n        const props = {\n            ...this.props,\n            visualization,\n            style,\n        };\n\n        switch (activeType) {\n            case VISUALIZATION:\n            case CHART:\n            case REPORT_TABLE: {\n                return (\n                    <Fragment>\n                        {!this.state.pluginIsLoaded ? (\n                            <div style={styles.loadingCover}>\n                                <LoadingMask />\n                            </div>\n                        ) : null}\n                        <VisualizationPlugin\n                            d2={this.d2}\n                            visualization={this.memoizedApplyFilters(\n                                visualization,\n                                props.itemFilters\n                            )}\n                            onLoadingComplete={this.onLoadingComplete}\n                            onError={this.onError}\n                            forDashboard={true}\n                            style={props.style}\n                        />\n                    </Fragment>\n                );\n            }\n            case MAP: {\n                if (props.item.type === MAP) {\n                    // apply filters only to thematic and event layers\n                    // for maps AO\n                    const mapViews = props.visualization.mapViews.map(obj => {\n                        if (\n                            obj.layer.includes('thematic') ||\n                            obj.layer.includes('event')\n                        ) {\n                            return this.memoizedApplyFilters(\n                                obj,\n                                props.itemFilters\n                            );\n                        }\n\n                        return obj;\n                    });\n\n                    props.visualization = {\n                        ...props.visualization,\n                        mapViews,\n                    };\n                } else {\n                    // this is the case of a non map AO passed to the maps plugin\n                    // due to a visualization type switch in dashboard item\n                    // maps plugin takes care of converting the AO to a suitable format\n                    props.visualization = this.memoizedApplyFilters(\n                        props.visualization,\n                        props.itemFilters\n                    );\n                }\n\n                props.options = {\n                    ...props.options,\n                    hideTitle: true,\n                };\n\n                return <DefaultPlugin {...props} />;\n            }\n            default: {\n                props.visualization = this.memoizedApplyFilters(\n                    props.visualization,\n                    props.itemFilters\n                );\n\n                return <DefaultPlugin {...props} />;\n            }\n        }\n    };\n\n    onLoadingComplete = () => {\n        this.setState({\n            pluginIsLoaded: true,\n        });\n    };\n\n    onToggleFooter = () => {\n        this.setState(\n            { showFooter: !this.state.showFooter },\n            this.props.onToggleItemExpanded(this.props.item.id)\n        );\n    };\n\n    onSelectActiveType = type => {\n        if (type === this.getActiveType()) {\n            return;\n        }\n\n        pluginManager.unmount(this.props.item, this.getActiveType());\n\n        this.props.onSelectActiveType(this.props.visualization.id, type);\n    };\n\n    getActiveType = () =>\n        this.props.visualization.activeType || this.props.item.type;\n\n    pluginIsAvailable = () =>\n        pluginManager.pluginIsAvailable(\n            this.props.item,\n            this.props.visualization\n        );\n\n    getContentStyle = (calculatedHeight, measuredHeight, editMode) => {\n        const height = editMode\n            ? measuredHeight || calculatedHeight\n            : calculatedHeight;\n\n        return { height };\n    };\n\n    render() {\n        const { item, editMode, itemFilters } = this.props;\n        const { showFooter } = this.state;\n\n        const actionButtons = (\n            <ItemHeaderButtons\n                item={item}\n                visualization={this.props.visualization}\n                onSelectActiveType={this.onSelectActiveType}\n                onToggleFooter={this.onToggleFooter}\n                d2={this.d2}\n                activeType={this.getActiveType()}\n                activeFooter={this.state.showFooter}\n            />\n        );\n\n        return (\n            <>\n                <ItemHeader\n                    title={pluginManager.getName(item)}\n                    itemId={item.id}\n                    actionButtons={actionButtons}\n                    ref={this.headerRef}\n                />\n                <FatalErrorBoundary>\n                    <div\n                        key={this.getFilterVersion(itemFilters)}\n                        className=\"dashboard-item-content\"\n                        ref={ref => (this.contentRef = ref)}\n                    >\n                        {this.state.configLoaded && this.getPluginComponent()}\n                    </div>\n                </FatalErrorBoundary>\n                {!editMode && showFooter ? <ItemFooter item={item} /> : null}\n            </>\n        );\n    }\n}\n\nItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nItem.propTypes = {\n    classes: PropTypes.object,\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    itemFilters: PropTypes.object,\n    visualization: PropTypes.object,\n    onSelectActiveType: PropTypes.func,\n    onToggleItemExpanded: PropTypes.func,\n    onVisualizationLoaded: PropTypes.func,\n};\n\nItem.defaultProps = {\n    item: {},\n    editMode: false,\n    onToggleItemExpanded: Function.prototype,\n    itemFilters: {},\n    visualization: {},\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n    itemFilters: sGetItemFiltersRoot(state),\n    visualization: sGetVisualization(\n        state,\n        pluginManager.extractFavorite(ownProps.item).id\n    ),\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onVisualizationLoaded: visualization =>\n        dispatch(acAddVisualization(visualization)),\n    onSelectActiveType: (id, type, activeType) =>\n        dispatch(acSetActiveVisualizationType(id, type, activeType)),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(Item));\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\n\nconst style = {\n    backgroundColor: colors.grey200,\n    border: 'none',\n    height: '1px',\n    margin: '0px 0px 5px 0px',\n};\n\nconst Line = () => <hr style={style} />;\n\nexport default Line;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\n\nimport { sGetMessagesRoot } from '../../../reducers/messages';\nimport { formatDate } from '../../../modules/util';\nimport { colors } from '@dhis2/ui-core';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nimport './MessagesItem.css';\n\nconst PRIVATE = 'PRIVATE';\n\nconst messageTypes = {\n    [PRIVATE]: 'Private',\n    VALIDATION_RESULT: 'Validation',\n    TICKET: 'Ticket',\n    SYSTEM: 'System',\n};\n\nconst style = {\n    list: {\n        listStyleType: 'none',\n        paddingLeft: '0px',\n    },\n    seeAll: {\n        textAlign: 'center',\n        fontSize: '13px',\n        marginBottom: '5px',\n    },\n    sender: {\n        fontSize: '13px',\n        lineHeight: '15px',\n        margin: 0,\n        color: colors.grey800,\n    },\n    snippet: {\n        color: colors.grey800,\n        fontSize: '13px',\n        lineHeight: '15px',\n        maxHeight: '30px',\n        overflow: 'hidden',\n    },\n};\n\nclass MessagesItem extends Component {\n    state = {\n        uiLocale: '',\n    };\n\n    async componentDidMount() {\n        const uiLocale = await this.context.d2.currentUser.userSettings.get(\n            'keyUiLocale'\n        );\n\n        this.setState({ uiLocale });\n    }\n\n    getMessageHref = msg => {\n        const msgIdentifier = msg ? `#/${msg.messageType}/${msg.id}` : '';\n        return `${this.context.baseUrl}/dhis-web-messaging/${msgIdentifier}`;\n    };\n\n    getMessageSender = msg => {\n        const latestMsg = msg.messages.slice(-1)[0];\n        return latestMsg.sender ? latestMsg.sender.displayName : '';\n    };\n\n    getMessageItems = () => {\n        const editClass = !this.props.editMode ? 'view' : null;\n\n        return this.props.messages.map(msg => {\n            const redirectToMsg = () => {\n                if (!this.props.editMode) {\n                    document.location.href = this.getMessageHref(msg);\n                }\n            };\n\n            const sender =\n                msg.messageType === PRIVATE\n                    ? this.getMessageSender(msg)\n                    : messageTypes[msg.messageType];\n\n            const readClass = !msg.read ? 'unread' : null;\n            const latestMsg = msg.messages.slice(-1)[0];\n            const msgDate = latestMsg.lastUpdated;\n\n            return (\n                <li\n                    className={`message-item ${editClass}`}\n                    key={msg.id}\n                    onClick={redirectToMsg}\n                >\n                    <p className={`message-title ${readClass}`}>\n                        {msg.displayName} ({msg.messageCount})\n                    </p>\n                    <p style={style.sender}>\n                        {sender} - {formatDate(msgDate, this.state.uiLocale)}\n                    </p>\n                    <p style={style.snippet}>{latestMsg.text}</p>\n                </li>\n            );\n        });\n    };\n\n    render() {\n        return (\n            <Fragment>\n                <ItemHeader\n                    title={i18n.t('Messages')}\n                    itemId={this.props.item.id}\n                />\n                <Line />\n                {this.props.messages.length > 0 && (\n                    <div className=\"dashboard-item-content\">\n                        <ul style={style.list}>{this.getMessageItems()}</ul>\n                        <div style={style.seeAll}>\n                            <a href={this.getMessageHref()}>\n                                {i18n.t('See all messages')}\n                            </a>\n                        </div>\n                    </div>\n                )}\n            </Fragment>\n        );\n    }\n}\n\nMessagesItem.propTypes = {\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    messages: PropTypes.array,\n};\n\nMessagesItem.contextTypes = {\n    d2: PropTypes.object,\n    baseUrl: PropTypes.string,\n};\n\nconst mapStateToProps = state => {\n    return {\n        messages: Object.values(sGetMessagesRoot(state)),\n    };\n};\n\nconst MessagesContainer = connect(\n    mapStateToProps,\n    null\n)(MessagesItem);\n\nexport default MessagesContainer;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ItemHeader from '../ItemHeader';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nconst NotSupportedItem = props => (\n    <Fragment>\n        <ItemHeader\n            title={i18n.t('Item type \"{{type}}\" not supported', {\n                type: props.item.type,\n            })}\n            itemId={props.item.id}\n        />\n        <div\n            style={{\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center',\n                height: '90%',\n            }}\n        >\n            <NotInterestedIcon\n                style={{ width: 100, height: 100, align: 'center' }}\n                color=\"disabled\"\n            />\n        </div>\n    </Fragment>\n);\n\nNotSupportedItem.propTypes = {\n    item: PropTypes.object,\n};\n\nexport default NotSupportedItem;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nconst DescriptionIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n        fill={colors.grey500}\n    >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M14 2H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6zm2 16H8v-2h8v2zm0-4H8v-2h8v2zm-3-5V3.5L18.5 9H13z\" />\n    </svg>\n);\n\nDescriptionIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default DescriptionIcon;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nconst DeleteIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"18\"\n        height=\"18\"\n        viewBox=\"0 0 24 24\"\n        fill={colors.red500}\n    >\n        <path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>\n);\n\nDeleteIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default DeleteIcon;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { colors } from '@dhis2/ui-core';\nimport DescriptionIcon from '../../../icons/Description';\n\nimport DeleteIcon from '../../../icons/Delete';\nimport Line from '../../../widgets/Line';\nimport { itemTypeMap, getItemUrl } from '../../../modules/itemTypes';\nimport { orArray } from '../../../modules/util';\nimport { tRemoveListItemContent } from './actions';\nimport ItemHeader from '../ItemHeader';\nimport classes from './Item.module.css';\n\nconst getItemTitle = item => itemTypeMap[item.type].pluralTitle;\n\nconst getContentItems = item =>\n    orArray(item[itemTypeMap[item.type].propName]).filter(\n        (item, index, array) =>\n            array.findIndex(el => el.id === item.id) === index\n    );\n\nconst ListItem = (props, context) => {\n    const { item, editMode, tRemoveListItemContent } = props;\n    const contentItems = getContentItems(item);\n\n    const getLink = contentItem => {\n        const deleteButton = (\n            <button\n                className={classes.deletebutton}\n                onClick={() => tRemoveListItemContent(item, contentItem)}\n            >\n                <DeleteIcon className={classes.deleteicon} />\n            </button>\n        );\n\n        return (\n            <Fragment>\n                <a\n                    className={classes.link}\n                    style={{ color: colors.grey900 }}\n                    href={getItemUrl(item.type, contentItem, context.d2)}\n                >\n                    {contentItem.name}\n                </a>\n                {editMode ? deleteButton : null}\n            </Fragment>\n        );\n    };\n\n    return (\n        <Fragment>\n            <ItemHeader title={getItemTitle(item)} itemId={item.id} />\n            <Line />\n            <div className=\"dashboard-item-content\">\n                <ul className={classes.list}>\n                    {contentItems.map(contentItem => (\n                        <li className={classes.item} key={contentItem.id}>\n                            <DescriptionIcon className={classes.itemicon} />\n                            {getLink(contentItem)}\n                        </li>\n                    ))}\n                </ul>\n            </div>\n        </Fragment>\n    );\n};\n\nListItem.propTypes = {\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    tRemoveListItemContent: PropTypes.func,\n};\n\nListItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nexport default connect(\n    null,\n    {\n        tRemoveListItemContent,\n    }\n)(ListItem);\n","import {\n    acUpdateDashboardItem,\n    acRemoveDashboardItem,\n} from '../../../actions/editDashboard';\nimport { itemTypeMap } from '../../../modules/itemTypes';\n\nexport const tRemoveListItemContent = (dashboardItem, content) => dispatch => {\n    const listItemType = itemTypeMap[dashboardItem.type].propName;\n\n    const newContent = dashboardItem[listItemType].filter(\n        item => item.id !== content.id\n    );\n\n    if (newContent.length) {\n        dashboardItem[listItemType] = newContent;\n        dispatch(acUpdateDashboardItem(dashboardItem));\n    } else {\n        dispatch(acRemoveDashboardItem(dashboardItem));\n    }\n};\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\n\nimport Input from '@material-ui/core/Input';\nimport {\n    Parser as RichTextParser,\n    Editor as RichTextEditor,\n} from '@dhis2/d2-ui-rich-text';\n\nimport { acUpdateDashboardItem } from '../../../actions/editDashboard';\nimport { sGetEditDashboardItems } from '../../../reducers/editDashboard';\nimport { sGetDashboardItems } from '../../../reducers/dashboards';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nconst style = {\n    textDiv: {\n        padding: '10px',\n        whiteSpace: 'pre-line',\n        lineHeight: '20px',\n    },\n    textField: {\n        fontSize: '14px',\n        fontStretch: 'normal',\n        width: '90%',\n        margin: '0 auto',\n        display: 'block',\n        lineHeight: '24px',\n    },\n    container: {\n        marginBottom: '20px',\n        marginTop: '20px',\n    },\n};\n\nconst TextItem = props => {\n    const { item, editMode, text, acUpdateDashboardItem } = props;\n\n    const onChangeText = event => {\n        const updatedItem = {\n            ...item,\n            text: event.target.value,\n        };\n\n        acUpdateDashboardItem(updatedItem);\n    };\n\n    const viewItem = () => {\n        const textDivStyle = Object.assign({}, style.textField, style.textDiv);\n        return (\n            <div className=\"dashboard-item-content\" style={style.container}>\n                <RichTextParser style={textDivStyle}>{text}</RichTextParser>\n            </div>\n        );\n    };\n\n    const editItem = () => {\n        return (\n            <Fragment>\n                <ItemHeader title={i18n.t('Text item')} itemId={item.id} />\n                <Line />\n                <div className=\"dashboard-item-content\">\n                    <RichTextEditor onEdit={onChangeText}>\n                        <Input\n                            value={text}\n                            multiline\n                            fullWidth\n                            style={style.textField}\n                            placeholder={i18n.t('Add text here')}\n                            onChange={onChangeText}\n                        />\n                    </RichTextEditor>\n                </div>\n            </Fragment>\n        );\n    };\n\n    return <Fragment>{editMode ? editItem() : viewItem()}</Fragment>;\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    const items = ownProps.editMode\n        ? sGetEditDashboardItems(state)\n        : sGetDashboardItems(state);\n\n    const item = items.find(item => item.id === ownProps.item.id);\n\n    return {\n        text: item ? item.text : '',\n    };\n};\n\nTextItem.propTypes = {\n    acUpdateDashboardItem: PropTypes.func,\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    text: PropTypes.string,\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        acUpdateDashboardItem,\n    }\n)(TextItem);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nimport { FILTER_ORG_UNIT } from '../../../actions/itemFilters';\nimport { sGetItemFiltersRoot } from '../../../reducers/itemFilters';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nconst getIframeSrc = (appDetails, item, itemFilters) => {\n    let iframeSrc = `${appDetails.launchUrl}?dashboardItemId=${item.id}`;\n\n    if (\n        itemFilters &&\n        itemFilters[FILTER_ORG_UNIT] &&\n        itemFilters[FILTER_ORG_UNIT].length\n    ) {\n        const ouIds = itemFilters[FILTER_ORG_UNIT].map(\n            ouFilter => ouFilter.path.split('/').slice(-1)[0]\n        );\n\n        iframeSrc += `&userOrgUnit=${ouIds.join(',')}`;\n    }\n\n    return iframeSrc;\n};\n\nconst AppItem = ({ item, itemFilters }, context) => {\n    let appDetails;\n\n    const appKey = item.appKey;\n\n    if (appKey) {\n        appDetails = context.d2.system.installedApps.find(\n            app => app.key === appKey\n        );\n    }\n\n    return appDetails && appDetails.name && appDetails.launchUrl ? (\n        <Fragment>\n            <ItemHeader title={appDetails.name} itemId={item.id} />\n            <Line />\n            <iframe\n                title={appDetails.name}\n                src={getIframeSrc(appDetails, item, itemFilters)}\n                className=\"dashboard-item-content\"\n                style={{ border: 'none' }}\n            />\n        </Fragment>\n    ) : (\n        <Fragment>\n            <ItemHeader title={`${appKey} app not found`} />\n            <Line />\n            <div\n                className=\"dashboard-item-content\"\n                style={{\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    height: '90%',\n                }}\n            >\n                <NotInterestedIcon\n                    color=\"disabled\"\n                    disabled\n                    style={{ width: 100, height: 100, align: 'center' }}\n                />\n            </div>\n        </Fragment>\n    );\n};\n\nAppItem.propTypes = {\n    item: PropTypes.object,\n    itemFilters: PropTypes.object,\n};\n\nAppItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nconst mapStateToProps = state => ({\n    itemFilters: sGetItemFiltersRoot(state),\n});\n\nexport default connect(mapStateToProps)(AppItem);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\n\nimport { colors } from '@dhis2/ui-core';\nimport ItemHeader from '../ItemHeader';\n\nconst style = {\n    margin: '21px 28px',\n    fontSize: '14px',\n    lineHeight: '18px',\n    color: colors.grey600,\n};\n\nconst SpacerItem = props => {\n    return (\n        <Fragment>\n            <ItemHeader title={i18n.t('Spacer')} itemId={props.item.id} />\n            <p style={style}>\n                {i18n.t(\n                    'Use a spacer to create empty vertical space between other dashboard items.'\n                )}\n            </p>\n        </Fragment>\n    );\n};\n\nSpacerItem.propTypes = {\n    item: PropTypes.object,\n};\n\nexport default SpacerItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport VisualizationItem from './VisualizationItem/Item';\nimport MessagesItem from './MessagesItem/Item';\nimport NotSupportedItem from './NotSupportedItem/Item';\nimport ListItem from './ListItem/Item';\nimport TextItem from './TextItem/Item';\nimport AppItem from './AppItem/Item';\nimport SpacerItem from './SpacerItem/Item';\nimport {\n    APP,\n    VISUALIZATION,\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_CHART,\n    EVENT_REPORT,\n    MESSAGES,\n    REPORTS,\n    RESOURCES,\n    USERS,\n    TEXT,\n    SPACER,\n} from '../../modules/itemTypes';\nimport { DEFAULT_STATE_ITEM_FILTERS } from '../../reducers/itemFilters';\n\nconst getGridItem = type => {\n    switch (type) {\n        case VISUALIZATION:\n        case REPORT_TABLE:\n        case CHART:\n        case MAP:\n        case EVENT_CHART:\n        case EVENT_REPORT:\n            return VisualizationItem;\n        case MESSAGES:\n            return MessagesItem;\n        case REPORTS:\n        case RESOURCES:\n        case USERS:\n            return ListItem;\n        case TEXT:\n            return TextItem;\n        case SPACER:\n            return SpacerItem;\n        case APP:\n            return AppItem;\n        default:\n            return NotSupportedItem;\n    }\n};\n\nexport const Item = props => {\n    const GridItem = getGridItem(props.item.type);\n\n    return (\n        <GridItem\n            item={props.item}\n            editMode={props.editMode}\n            itemFilters={\n                props.editMode ? DEFAULT_STATE_ITEM_FILTERS : props.itemFilters\n            }\n            onToggleItemExpanded={props.onToggleItemExpanded}\n        />\n    );\n};\n\nItem.propTypes = {\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    itemFilters: PropTypes.object,\n    onToggleItemExpanded: PropTypes.func,\n};\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nexport const NoContentMessage = ({ text }) => (\n    <div\n        style={{\n            padding: '50px 10px',\n            textAlign: 'center',\n            fontSize: '15px',\n            fontWeight: 500,\n            color: colors.grey600,\n        }}\n    >\n        {text}\n    </div>\n);\n\nNoContentMessage.propTypes = {\n    text: PropTypes.string,\n};\n\nexport default NoContentMessage;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash/debounce';\nimport pick from 'lodash/pick';\n\nconst defaultDebounceMs = 100;\nconst defaultBufferFactor = 0.25;\n\nclass ProgressiveLoadingContainer extends Component {\n    static propTypes = {\n        children: PropTypes.node.isRequired,\n        bufferFactor: PropTypes.number,\n        className: PropTypes.string,\n        debounceMs: PropTypes.number,\n        style: PropTypes.object,\n    };\n    static defaultProps = {\n        debounceMs: defaultDebounceMs,\n        bufferFactor: defaultBufferFactor,\n    };\n\n    state = {\n        shouldLoad: false,\n    };\n    containerRef = null;\n    shouldLoadHandler = null;\n\n    checkShouldLoad() {\n        const bufferPx = this.props.bufferFactor * window.innerHeight;\n\n        if (!this.containerRef) {\n            return;\n        }\n\n        const rect = this.containerRef.getBoundingClientRect();\n        if (\n            rect.bottom > -bufferPx &&\n            rect.top < window.innerHeight + bufferPx\n        ) {\n            this.setState({\n                shouldLoad: true,\n            });\n\n            this.removeHandler();\n        }\n    }\n\n    registerHandler() {\n        this.shouldLoadHandler = debounce(\n            () => this.checkShouldLoad(),\n            this.props.debounceMs\n        );\n\n        window.addEventListener('scroll', this.shouldLoadHandler);\n    }\n    removeHandler() {\n        window.removeEventListener('scroll', this.shouldLoadHandler);\n    }\n\n    componentDidMount() {\n        this.registerHandler();\n        this.checkShouldLoad();\n    }\n\n    componentWillUnmount() {\n        this.removeHandler();\n    }\n\n    render() {\n        const { children, className, style, ...props } = this.props;\n        const { shouldLoad } = this.state;\n\n        const eventProps = pick(props, [\n            'onMouseDown',\n            'onTouchStart',\n            'onMouseUp',\n            'onTouchEnd',\n        ]);\n\n        return (\n            <div\n                ref={ref => (this.containerRef = ref)}\n                style={style}\n                className={className}\n                {...eventProps}\n            >\n                {shouldLoad && children}\n            </div>\n        );\n    }\n}\n\nexport default ProgressiveLoadingContainer;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ReactGridLayout from 'react-grid-layout';\nimport { CircularLoader, ScreenCover } from '@dhis2/ui-core';\n\nimport {\n    acUpdateDashboardLayout,\n    acRemoveDashboardItem,\n} from '../../actions/editDashboard';\nimport { Item } from '../Item/Item';\nimport { resize as pluginResize } from '../Item/VisualizationItem/plugin';\nimport { isVisualizationType } from '../../modules/itemTypes';\nimport {\n    GRID_ROW_HEIGHT,\n    GRID_COMPACT_TYPE,\n    MARGIN,\n    getGridColumns,\n    hasShape,\n    onItemResize,\n} from './gridUtil';\nimport { orArray } from '../../modules/util';\n\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\n\nimport './ItemGrid.css';\nimport { sGetSelectedId, sGetSelectedIsLoading } from '../../reducers/selected';\nimport {\n    sGetEditDashboardRoot,\n    sGetEditDashboardItems,\n} from '../../reducers/editDashboard';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n} from '../../reducers/dashboards';\nimport ProgressiveLoadingContainer from '../Item/ProgressiveLoadingContainer';\n\n// Component\n\nconst EXPANDED_HEIGHT = 17;\n// this is set in the .dashboard-item-content css\nexport const ITEM_CONTENT_PADDING_BOTTOM = 4;\n\nexport class ItemGrid extends Component {\n    state = {\n        expandedItems: {},\n    };\n\n    onToggleItemExpanded = clickedId => {\n        const isExpanded =\n            typeof this.state.expandedItems[clickedId] === 'boolean'\n                ? this.state.expandedItems[clickedId]\n                : false;\n\n        const expandedItems = { ...this.state.expandedItems };\n        expandedItems[clickedId] = !isExpanded;\n        this.setState({ expandedItems });\n    };\n\n    onRemoveItem = clickedId => {\n        this.props.acRemoveDashboardItem(clickedId);\n    };\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.edit) {\n            this.setState({ expandedItems: {} });\n        }\n    }\n\n    onLayoutChange = newLayout => {\n        if (this.props.edit) {\n            this.props.acUpdateDashboardLayout(newLayout);\n        }\n    };\n\n    onResizeStop = (layout, oldItem, newItem) => {\n        onItemResize(newItem.i);\n\n        const dashboardItem = this.props.dashboardItems.find(\n            item => item.id === newItem.i\n        );\n\n        // call resize on the item component if it's a plugin type\n        if (dashboardItem && isVisualizationType(dashboardItem)) {\n            pluginResize(dashboardItem);\n        }\n    };\n\n    onRemoveItemWrapper = id => () => this.onRemoveItem(id);\n\n    adjustHeightForExpanded = dashboardItem => {\n        const expandedItem = this.state.expandedItems[dashboardItem.id];\n\n        if (expandedItem && expandedItem === true) {\n            return Object.assign({}, dashboardItem, {\n                h: dashboardItem.h + EXPANDED_HEIGHT,\n            });\n        }\n\n        return dashboardItem;\n    };\n\n    getItemComponent = item => {\n        const itemClassNames = [\n            item.type,\n            this.props.edit ? 'edit' : 'view',\n        ].join(' ');\n\n        return (\n            <ProgressiveLoadingContainer\n                key={item.i}\n                className={itemClassNames}\n            >\n                <Item\n                    item={item}\n                    editMode={this.props.edit}\n                    onToggleItemExpanded={this.onToggleItemExpanded}\n                />\n            </ProgressiveLoadingContainer>\n        );\n    };\n\n    getItemComponents = items => items.map(item => this.getItemComponent(item));\n\n    render() {\n        const { edit, isLoading, dashboardItems } = this.props;\n\n        if (!isLoading && !dashboardItems.length) {\n            return (\n                <NoContentMessage\n                    text={i18n.t('There are no items on this dashboard')}\n                />\n            );\n        }\n\n        const items = edit\n            ? dashboardItems\n            : dashboardItems.map(this.adjustHeightForExpanded);\n\n        return (\n            <div className=\"grid-wrapper\">\n                {isLoading ? (\n                    <ScreenCover>\n                        <CircularLoader />\n                    </ScreenCover>\n                ) : null}\n                <ReactGridLayout\n                    onLayoutChange={this.onLayoutChange}\n                    onResizeStop={this.onResizeStop}\n                    className=\"layout\"\n                    layout={items}\n                    margin={MARGIN}\n                    cols={getGridColumns()}\n                    rowHeight={GRID_ROW_HEIGHT}\n                    width={window.innerWidth}\n                    compactType={GRID_COMPACT_TYPE}\n                    isDraggable={edit}\n                    isResizable={edit}\n                    draggableCancel=\"input,textarea\"\n                >\n                    {this.getItemComponents(items)}\n                </ReactGridLayout>\n            </div>\n        );\n    }\n}\n\nItemGrid.propTypes = {\n    acRemoveDashboardItem: PropTypes.func,\n    acUpdateDashboardLayout: PropTypes.func,\n    dashboardItems: PropTypes.array,\n    edit: PropTypes.bool,\n    isLoading: PropTypes.bool,\n};\n\nItemGrid.defaultProps = {\n    dashboardItems: [],\n};\n\n// Container\n\nconst mapStateToProps = (state, ownProps) => {\n    const selectedDashboard = ownProps.edit\n        ? sGetEditDashboardRoot(state)\n        : sGetDashboardById(state, sGetSelectedId(state));\n\n    const dashboardItems = ownProps.edit\n        ? sGetEditDashboardItems(state)\n        : sGetDashboardItems(state);\n\n    return {\n        isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n        dashboardItems,\n    };\n};\n\nconst mapDispatchToProps = {\n    acUpdateDashboardLayout,\n    acRemoveDashboardItem,\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const validItems = orArray(stateProps.dashboardItems).filter(hasShape);\n\n    return {\n        ...dispatchProps,\n        edit: ownProps.edit,\n        isLoading: stateProps.isLoading,\n        dashboardItems: validItems,\n        onItemResize,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n    mergeProps\n)(ItemGrid);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport i18n from '@dhis2/d2-i18n';\n\nimport { colors } from '@dhis2/ui-core';\n\nconst styles = {\n    badgeContainer: {\n        margin: '2px',\n        padding: '0 16px',\n        borderRadius: '4px',\n        color: colors.white,\n        backgroundColor: '#212934',\n        height: 36,\n        display: 'flex',\n        alignItems: 'center',\n    },\n    badge: {\n        fontSize: '13px',\n        cursor: 'pointer',\n        whiteSpace: 'nowrap',\n    },\n    badgeRemove: {\n        fontSize: '12px',\n        textDecoration: 'underline',\n        marginLeft: '24px',\n        cursor: 'pointer',\n    },\n};\n\nclass FilterBadge extends Component {\n    onClick = id => () => this.props.onClick(id);\n    onRemove = id => () => this.props.onRemove(id);\n\n    render() {\n        const { data } = this.props;\n\n        return (\n            <div style={styles.badgeContainer}>\n                <span style={styles.badge} onClick={this.onClick(data.id)}>\n                    {`${data.name}: ${\n                        data.values.length > 1\n                            ? i18n.t('{{count}} selected', {\n                                  count: data.values.length,\n                              })\n                            : data.values[0].name\n                    }`}\n                </span>\n                <span\n                    style={styles.badgeRemove}\n                    onClick={this.onRemove(data.id)}\n                >\n                    {i18n.t('Remove')}\n                </span>\n            </div>\n        );\n    }\n}\n\nFilterBadge.propTypes = {\n    data: PropTypes.object.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onRemove: PropTypes.func.isRequired,\n};\n\nFilterBadge.defaultProps = {\n    onClick: Function.prototype,\n    onRemove: Function.prototype,\n};\n\nexport default FilterBadge;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { createSelector } from 'reselect';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport { sGetDimensions } from '../../reducers/dimensions';\nimport { sGetItemFiltersRoot } from '../../reducers/itemFilters';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { getTopOffset } from '../ControlBar/controlBarDimensions';\nimport { acRemoveItemFilter } from '../../actions/itemFilters';\nimport { acRemoveEditItemFilter } from '../../actions/editItemFilters';\nimport { acSetActiveModalDimension } from '../../actions/activeModalDimension';\n\nimport FilterBadge from './FilterBadge';\n\nconst styles = {\n    bar: {\n        position: 'sticky',\n        zIndex: 7,\n        padding: '8px 0',\n        display: 'flex',\n        justifyContent: 'center',\n        flexWrap: 'wrap',\n    },\n};\n\nexport class FilterBar extends Component {\n    onBadgeRemove = id => {\n        this.props.removeItemFilter(id);\n        this.props.removeEditItemFilter(id);\n    };\n\n    onBadgeClick = id => {\n        this.props.setActiveModalDimension({\n            id,\n            name: this.props.filters.find(item => item.id === id).name,\n        });\n    };\n\n    render() {\n        const { filters, userRows, classes } = this.props;\n        const top = getTopOffset(userRows) + 10;\n\n        return filters.length ? (\n            <div className={classes.bar} style={{ top }}>\n                {filters.map(filter => (\n                    <FilterBadge\n                        key={filter.id}\n                        data={filter}\n                        onClick={this.onBadgeClick}\n                        onRemove={this.onBadgeRemove}\n                    />\n                ))}\n            </div>\n        ) : null;\n    }\n}\n\nFilterBar.propTypes = {\n    filters: PropTypes.array.isRequired,\n    removeEditItemFilter: PropTypes.func.isRequired,\n    removeItemFilter: PropTypes.func.isRequired,\n    classes: PropTypes.object,\n    setActiveModalDimension: PropTypes.func,\n    userRows: PropTypes.number,\n};\n\nFilterBar.defaultProps = {\n    filters: [],\n    removeItemFIlter: Function.prototype,\n    removeEditItemFilter: Function.prototype,\n};\n\n// simplify the filters structure to:\n// [{ id: 'pe', name: 'Period', values: [{ id: 2019: name: '2019' }, {id: 'LAST_MONTH', name: 'Last month' }]}, ...]\nconst filtersSelector = createSelector(\n    [sGetItemFiltersRoot, sGetDimensions],\n    (filters, dimensions) =>\n        Object.keys(filters).reduce((arr, id) => {\n            arr.push({\n                id: id,\n                name: dimensions.find(dimension => dimension.id === id).name,\n                values: filters[id].map(value => ({\n                    id: value.id,\n                    name: value.displayName || value.name,\n                })),\n            });\n\n            return arr;\n        }, [])\n);\n\nconst mapStateToProps = state => ({\n    filters: filtersSelector(state),\n    userRows: sGetControlBarUserRows(state),\n});\n\nexport default connect(\n    mapStateToProps,\n    {\n        setActiveModalDimension: acSetActiveModalDimension,\n        removeItemFilter: acRemoveItemFilter,\n        removeEditItemFilter: acRemoveEditItemFilter,\n    }\n)(withStyles(styles)(FilterBar));\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport TitleBar from '../TitleBar/TitleBar';\nimport ItemGrid from '../ItemGrid/ItemGrid';\nimport FilterBar from '../FilterBar/FilterBar';\n\nexport const DashboardContent = props => (\n    <Fragment>\n        <TitleBar edit={props.editMode} />\n        <FilterBar />\n        <ItemGrid edit={props.editMode} />\n    </Fragment>\n);\n\nDashboardContent.propTypes = {\n    editMode: PropTypes.bool,\n};\n\nexport default DashboardContent;\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport isEmpty from 'lodash/isEmpty';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\n\nimport {\n    sGetAllDashboards,\n    sDashboardsIsFetching,\n} from '../../reducers/dashboards';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport DashboardsBar from '../ControlBar/DashboardsBar';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport DashboardContent from './DashboardContent';\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nexport const Content = ({ hasDashboardContent, dashboardsIsEmpty }) => {\n    const msg = dashboardsIsEmpty\n        ? i18n.t(\n              'No dashboards found. Use the + button to create a new dashboard.'\n          )\n        : i18n.t('Requested dashboard not found');\n\n    return hasDashboardContent ? (\n        <DashboardContent editMode={false} />\n    ) : (\n        <NoContentMessage text={msg} />\n    );\n};\n\nContent.propTypes = {\n    dashboardsIsEmpty: PropTypes.bool,\n    hasDashboardContent: PropTypes.bool,\n};\n\nexport const ViewDashboard = ({ id, dashboardsIsEmpty, dashboardsLoaded }) => {\n    const hasDashboardContent = id && !dashboardsIsEmpty;\n    const contentNotReady = !dashboardsLoaded || id === null;\n\n    return (\n        <Fragment>\n            <DashboardsBar />\n            <DashboardVerticalOffset />\n            <div className=\"dashboard-wrapper\">\n                {contentNotReady ? null : (\n                    <Content\n                        hasDashboardContent={hasDashboardContent}\n                        dashboardsIsEmpty={dashboardsIsEmpty}\n                    />\n                )}\n            </div>\n        </Fragment>\n    );\n};\n\nViewDashboard.propTypes = {\n    dashboardsIsEmpty: PropTypes.bool,\n    dashboardsLoaded: PropTypes.bool,\n    id: PropTypes.string,\n};\n\nconst mapStateToProps = state => {\n    const dashboards = sGetAllDashboards(state);\n\n    return {\n        id: sGetSelectedId(state),\n        dashboardsIsEmpty: isEmpty(dashboards),\n        dashboardsLoaded: !sDashboardsIsFetching(state),\n    };\n};\n\nexport default connect(mapStateToProps)(ViewDashboard);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport { Button } from '@dhis2/ui-core';\n\nexport const ConfirmDeleteDialog = ({\n    dashboardName,\n    onDeleteConfirmed,\n    onContinueEditing,\n    open,\n}) => {\n    const actions = [\n        <Button key=\"cancel\" secondary onClick={onContinueEditing}>\n            {i18n.t('Cancel')}\n        </Button>,\n        <Button key=\"delete\" destructive onClick={onDeleteConfirmed}>\n            {i18n.t('Delete')}\n        </Button>,\n    ];\n\n    return (\n        <Dialog open={open} onClose={onContinueEditing}>\n            <DialogTitle style={{ fontSize: '1.25rem', fontWeight: '450' }}>\n                {i18n.t('Delete dashboard')}\n            </DialogTitle>\n            <DialogContent>\n                <DialogContentText style={{ fontSize: '0.875rem' }}>\n                    {i18n.t(\n                        'Deleting dashboard \"{{ dashboardName }}\" will remove it for all users. This action cannot be undone. Are you sure you want to permanently delete this dashboard?',\n                        { dashboardName }\n                    )}\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>{actions}</DialogActions>\n        </Dialog>\n    );\n};\n\nConfirmDeleteDialog.propTypes = {\n    dashboardName: PropTypes.string,\n    open: PropTypes.bool,\n    onContinueEditing: PropTypes.func,\n    onDeleteConfirmed: PropTypes.func,\n};\n\nexport default ConfirmDeleteDialog;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport ControlBar from './ControlBar';\nimport TranslationDialog from '@dhis2/d2-ui-translation-dialog';\nimport { Button } from '@dhis2/ui-core';\n\nimport ConfirmDeleteDialog from './ConfirmDeleteDialog';\nimport {\n    tSaveDashboard,\n    acClearEditDashboard,\n} from '../../actions/editDashboard';\nimport {\n    tDeleteDashboard,\n    acSetDashboardDisplayName,\n} from '../../actions/dashboards';\nimport {\n    sGetEditDashboardRoot,\n    sGetIsNewDashboard,\n} from '../../reducers/editDashboard';\nimport {\n    CONTROL_BAR_ROW_HEIGHT,\n    MIN_ROW_COUNT,\n    getControlBarHeight,\n} from './controlBarDimensions';\nimport { apiFetchDashboard } from '../../api/dashboards';\n\nimport classes from './styles/DashboardsBar.module.css';\n\nconst buttonBarStyle = {\n    height: CONTROL_BAR_ROW_HEIGHT,\n    paddingTop: '15px',\n    marginLeft: '15px',\n    marginRight: '15px',\n};\n\nexport class EditBar extends Component {\n    state = {\n        translationDialogIsOpen: false,\n        dashboardModel: undefined,\n        confirmDeleteDialogOpen: false,\n        redirectUrl: undefined,\n    };\n\n    onConfirmDelete = () => {\n        this.setState({ confirmDeleteDialogOpen: true });\n    };\n\n    onSave = () => {\n        this.props.onSave().then(newId => {\n            this.setState({ redirectUrl: `/${newId}` });\n        });\n    };\n\n    onDiscard = () => {\n        this.props.onDiscardChanges();\n        const redirectUrl = this.props.dashboardId\n            ? `/${this.props.dashboardId}`\n            : '/';\n        this.setState({ redirectUrl });\n    };\n\n    onContinueEditing = () => {\n        this.setState({ confirmDeleteDialogOpen: false });\n    };\n\n    onDeleteConfirmed = () => {\n        this.setState({ confirmDeleteDialogOpen: false });\n        this.props.onDelete(this.props.dashboardId).then(() => {\n            this.setState({ redirectUrl: '/' });\n        });\n    };\n\n    onTranslationsSaved = async translations => {\n        if (translations && translations.length) {\n            const dbLocale = await this.context.d2.currentUser.userSettings.get(\n                'keyDbLocale'\n            );\n\n            const translation = translations.find(\n                t => t.locale === dbLocale && t.property === 'NAME'\n            );\n\n            if (translation && translation.value) {\n                this.props.onTranslate(\n                    this.props.dashboardId,\n                    translation.value\n                );\n            }\n        }\n    };\n\n    fetchDashboardModel = () => {\n        if (this.props.dashboardId && !this.state.dashboardModel) {\n            apiFetchDashboard(this.props.dashboardId).then(dashboardModel =>\n                this.setState({ dashboardModel })\n            );\n        }\n    };\n\n    componentDidMount() {\n        this.fetchDashboardModel();\n    }\n\n    componentDidUpdate() {\n        this.fetchDashboardModel();\n    }\n\n    toggleTranslationDialog = () => {\n        this.setState({\n            translationDialogIsOpen: !this.state.translationDialogIsOpen,\n        });\n    };\n\n    confirmDeleteDialog = () =>\n        this.props.deleteAccess && this.props.dashboardId ? (\n            <ConfirmDeleteDialog\n                dashboardName={this.props.dashboardName}\n                onDeleteConfirmed={this.onDeleteConfirmed}\n                onContinueEditing={this.onContinueEditing}\n                open={this.state.confirmDeleteDialogOpen}\n            />\n        ) : null;\n\n    translationDialog = () =>\n        this.state.dashboardModel && this.state.dashboardModel.id ? (\n            <TranslationDialog\n                className=\"translation-dialog\"\n                d2={this.context.d2}\n                open={this.state.translationDialogIsOpen}\n                onRequestClose={this.toggleTranslationDialog}\n                objectToTranslate={this.state.dashboardModel}\n                fieldsToTranslate={['name', 'description']}\n                // TODO handle messages in snackbar\n                onTranslationSaved={this.onTranslationsSaved}\n                onTranslationError={err =>\n                    console.log('translation update error', err)\n                }\n            />\n        ) : null;\n\n    render() {\n        if (this.state.redirectUrl) {\n            return <Redirect to={this.state.redirectUrl} />;\n        }\n\n        const { dashboardId, deleteAccess, updateAccess } = this.props;\n        const controlBarHeight = getControlBarHeight(MIN_ROW_COUNT);\n\n        const discardBtnText = updateAccess\n            ? i18n.t('Exit without saving')\n            : i18n.t('Go to dashboards');\n\n        return (\n            <Fragment>\n                <ControlBar height={controlBarHeight} editMode={true}>\n                    <div style={buttonBarStyle}>\n                        {updateAccess ? (\n                            <div className={classes.leftControls}>\n                                <span style={{ marginRight: '15px' }}>\n                                    <Button primary onClick={this.onSave}>\n                                        {i18n.t('Save changes')}\n                                    </Button>\n                                </span>\n\n                                {dashboardId ? (\n                                    <span style={{ marginRight: '15px' }}>\n                                        <Button\n                                            onClick={\n                                                this.toggleTranslationDialog\n                                            }\n                                        >\n                                            {i18n.t('Translate')}\n                                        </Button>\n                                    </span>\n                                ) : null}\n                                {dashboardId && deleteAccess ? (\n                                    <Button onClick={this.onConfirmDelete}>\n                                        {i18n.t('Delete')}\n                                    </Button>\n                                ) : null}\n                            </div>\n                        ) : null}\n\n                        <div className={classes.rightControls}>\n                            <Button secondary onClick={this.onDiscard}>\n                                {discardBtnText}\n                            </Button>\n                        </div>\n                    </div>\n                </ControlBar>\n                {this.translationDialog()}\n                {this.confirmDeleteDialog()}\n            </Fragment>\n        );\n    }\n}\n\nEditBar.propTypes = {\n    dashboardId: PropTypes.string,\n    dashboardName: PropTypes.string,\n    deleteAccess: PropTypes.bool,\n    updateAccess: PropTypes.bool,\n    onDelete: PropTypes.func,\n    onDiscardChanges: PropTypes.func,\n    onSave: PropTypes.func,\n    onTranslate: PropTypes.func,\n};\n\nEditBar.contextTypes = {\n    d2: PropTypes.object,\n};\n\nconst mapStateToProps = state => {\n    const dashboard = sGetEditDashboardRoot(state);\n\n    let deleteAccess;\n    let updateAccess;\n    if (sGetIsNewDashboard(state)) {\n        deleteAccess = true;\n        updateAccess = true;\n    } else {\n        updateAccess = dashboard.access ? dashboard.access.update : false;\n        deleteAccess = dashboard.access ? dashboard.access.delete : false;\n    }\n\n    return {\n        dashboardId: dashboard.id,\n        dashboardName: dashboard.name,\n        deleteAccess,\n        updateAccess,\n    };\n};\n\nconst mapDispatchToProps = dispatch => ({\n    onSave: () => dispatch(tSaveDashboard()).then(id => id),\n    onDelete: id => dispatch(tDeleteDashboard(id)),\n    onDiscardChanges: () => dispatch(acClearEditDashboard()),\n    onTranslate: (id, value) => dispatch(acSetDashboardDisplayName(id, value)),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(EditBar);\n","import React, { Fragment, Component } from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\n\nimport { acSetEditDashboard } from '../../actions/editDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n    sDashboardsIsFetching,\n} from '../../reducers/dashboards';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport DashboardContent from './DashboardContent';\nimport EditBar from '../ControlBar/EditBar';\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nexport const Content = ({ updateAccess }) => {\n    return updateAccess ? (\n        <DashboardContent editMode={true} />\n    ) : (\n        <NoContentMessage text={i18n.t('No access')} />\n    );\n};\n\nContent.propTypes = {\n    updateAccess: PropTypes.bool,\n};\nexport class EditDashboard extends Component {\n    state = {\n        initialized: false,\n    };\n\n    initEditDashboard = () => {\n        if (this.props.dashboard) {\n            this.setState({ initialized: true });\n            this.props.setEditDashboard(this.props.dashboard, this.props.items);\n        }\n    };\n\n    componentDidMount() {\n        this.initEditDashboard();\n    }\n\n    componentDidUpdate() {\n        if (!this.state.initialized) {\n            this.initEditDashboard();\n        }\n    }\n\n    getDashboardContent = () => {\n        const contentNotReady =\n            !this.props.dashboardsLoaded || this.props.id === null;\n\n        return (\n            <div className=\"dashboard-wrapper\">\n                {contentNotReady ? null : (\n                    <Content updateAccess={this.props.updateAccess} />\n                )}\n            </div>\n        );\n    };\n\n    render() {\n        return (\n            <Fragment>\n                <EditBar />\n                <DashboardVerticalOffset editMode={true} />\n                {this.getDashboardContent()}\n            </Fragment>\n        );\n    }\n}\n\nEditDashboard.propTypes = {\n    dashboard: PropTypes.object,\n    dashboardsLoaded: PropTypes.bool,\n    id: PropTypes.string,\n    items: PropTypes.array,\n    setEditDashboard: PropTypes.func,\n    updateAccess: PropTypes.bool,\n};\n\nconst mapStateToProps = state => {\n    const id = sGetSelectedId(state);\n    const dashboard = id ? sGetDashboardById(state, id) : null;\n\n    const updateAccess =\n        dashboard && dashboard.access ? dashboard.access.update : false;\n\n    return {\n        dashboard,\n        id,\n        updateAccess,\n        items: sGetDashboardItems(state),\n        dashboardsLoaded: !sDashboardsIsFetching(state),\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        setEditDashboard: acSetEditDashboard,\n    }\n)(EditDashboard);\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { acSetEditNewDashboard } from '../../actions/editDashboard';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport EditBar from '../ControlBar/EditBar';\nimport DashboardContent from './DashboardContent';\n\nclass NewDashboard extends Component {\n    componentDidMount() {\n        this.props.setNewDashboard();\n    }\n\n    render() {\n        return (\n            <Fragment>\n                <EditBar />\n                <DashboardVerticalOffset editMode={true} />\n                <div className=\"dashboard-wrapper\">\n                    <DashboardContent editMode={true} />\n                </div>\n            </Fragment>\n        );\n    }\n}\n\nNewDashboard.propTypes = {\n    setNewDashboard: PropTypes.func,\n};\n\nexport default connect(\n    null,\n    {\n        setNewDashboard: acSetEditNewDashboard,\n    }\n)(NewDashboard);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { tSelectDashboard } from '../../actions/dashboards';\nimport { sDashboardsIsFetching } from '../../reducers/dashboards';\nimport { EDIT, NEW } from './dashboardModes';\nimport ViewDashboard from './ViewDashboard';\nimport EditDashboard from './EditDashboard';\nimport NewDashboard from './NewDashboard';\n\nclass Dashboard extends Component {\n    setDashboard = () => {\n        if (this.props.dashboardsLoaded) {\n            const id = this.props.match.params.dashboardId || null;\n\n            this.props.selectDashboard(id);\n\n            this.scrollToTop();\n        }\n    };\n\n    scrollToTop = () => {\n        window.scrollTo(0, 0);\n    };\n\n    componentDidMount() {\n        this.setDashboard();\n    }\n\n    componentDidUpdate() {\n        this.setDashboard();\n    }\n\n    render() {\n        switch (this.props.mode) {\n            case EDIT:\n                return <EditDashboard />;\n            case NEW:\n                return <NewDashboard />;\n            default:\n                return <ViewDashboard />;\n        }\n    }\n}\n\nDashboard.propTypes = {\n    dashboardsLoaded: PropTypes.bool,\n    match: PropTypes.object,\n    mode: PropTypes.string,\n    selectDashboard: PropTypes.func,\n};\n\nconst mapStateToProps = state => {\n    return { dashboardsLoaded: !sDashboardsIsFetching(state) };\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        selectDashboard: tSelectDashboard,\n    }\n)(Dashboard);\n","export const EDIT = 'edit';\nexport const NEW = 'new';\nexport const VIEW = 'view';\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { HeaderBar } from '@dhis2/ui-widgets';\nimport { CssVariables } from '@dhis2/ui-core';\n\nimport { EDIT, VIEW, NEW } from './Dashboard/dashboardModes';\nimport { acReceivedUser } from '../actions/user';\nimport { tFetchDashboards } from '../actions/dashboards';\nimport { tSetControlBarRows } from '../actions/controlBar';\nimport { tSetDimensions } from '../actions/dimensions';\nimport Dashboard from './Dashboard/Dashboard';\nimport SnackbarMessage from './SnackbarMessage/SnackbarMessage';\n\nimport 'typeface-roboto';\nimport './App.css';\n\nexport class App extends Component {\n    componentDidMount() {\n        this.props.setCurrentUser(this.props.d2.currentUser);\n        this.props.fetchDashboards();\n        this.props.setControlBarRows();\n        this.props.setDimensions(this.props.d2);\n    }\n\n    getChildContext() {\n        return { baseUrl: this.props.baseUrl, i18n, d2: this.props.d2 };\n    }\n\n    render() {\n        return (\n            <>\n                <CssVariables colors spacers />\n                <div className=\"app-wrapper\">\n                    <div className=\"dashboard-header-bar\">\n                        <HeaderBar appName={i18n.t('Dashboard')} />\n                    </div>\n                    <Router>\n                        <Switch>\n                            <Route\n                                exact\n                                path=\"/\"\n                                render={props => (\n                                    <Dashboard {...props} mode={VIEW} />\n                                )}\n                            />\n                            <Route\n                                exact\n                                path=\"/new\"\n                                render={props => (\n                                    <Dashboard {...props} mode={NEW} />\n                                )}\n                            />\n                            <Route\n                                exact\n                                path=\"/:dashboardId\"\n                                render={props => (\n                                    <Dashboard {...props} mode={VIEW} />\n                                )}\n                            />\n                            <Route\n                                exact\n                                path=\"/:dashboardId/edit\"\n                                render={props => (\n                                    <Dashboard {...props} mode={EDIT} />\n                                )}\n                            />\n                        </Switch>\n                    </Router>\n                    <SnackbarMessage />\n                </div>\n            </>\n        );\n    }\n}\n\nApp.propTypes = {\n    fetchDashboards: PropTypes.func.isRequired,\n    setControlBarRows: PropTypes.func.isRequired,\n    setCurrentUser: PropTypes.func.isRequired,\n    setDimensions: PropTypes.func.isRequired,\n    baseUrl: PropTypes.string,\n    d2: PropTypes.object,\n};\n\nApp.childContextTypes = {\n    baseUrl: PropTypes.string,\n    i18n: PropTypes.object,\n    d2: PropTypes.object,\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setCurrentUser: currentUser => dispatch(acReceivedUser(currentUser)),\n        fetchDashboards: () => dispatch(tFetchDashboards()),\n        setControlBarRows: () => dispatch(tSetControlBarRows()),\n        setDimensions: d2 => dispatch(tSetDimensions(d2)),\n    };\n};\n\nexport default connect(\n    null,\n    mapDispatchToProps\n)(App);\n","import { RECEIVED_USER } from '../reducers/user';\n\nexport const acReceivedUser = value => ({\n    type: RECEIVED_USER,\n    value,\n});\n","//------------------------------------------------------------------------------\n// <auto-generated>\n    // This code was generated by d2-i18n-generate.\n    //\n    // Changes to this file may cause incorrect behavior and will be lost if\n    // the code is regenerated.\n    // </auto-generated>\n//------------------------------------------------------------------------------\nimport i18n from '@dhis2/d2-i18n';\nimport moment from 'moment';\nimport 'moment/locale/ar';\nimport 'moment/locale/es';\nimport 'moment/locale/fr';\nimport 'moment/locale/lo';\nimport 'moment/locale/nb';\nimport 'moment/locale/nl';\nimport 'moment/locale/pt';\nimport 'moment/locale/ru';\nimport 'moment/locale/sv';\nimport 'moment/locale/tg';\nimport 'moment/locale/uk';\nimport 'moment/locale/ur';\nimport 'moment/locale/vi';\nimport 'moment/locale/zh-cn';\n\nimport arTranslations from './ar/translations.json';\nimport ar_IQTranslations from './ar_IQ/translations.json';\nimport ckbTranslations from './ckb/translations.json';\nimport csTranslations from './cs/translations.json';\nimport daTranslations from './da/translations.json';\nimport enTranslations from './en/translations.json';\nimport esTranslations from './es/translations.json';\nimport frTranslations from './fr/translations.json';\nimport idTranslations from './id/translations.json';\nimport kmTranslations from './km/translations.json';\nimport loTranslations from './lo/translations.json';\nimport myTranslations from './my/translations.json';\nimport nbTranslations from './nb/translations.json';\nimport nlTranslations from './nl/translations.json';\nimport prsTranslations from './prs/translations.json';\nimport psTranslations from './ps/translations.json';\nimport ptTranslations from './pt/translations.json';\nimport pt_BRTranslations from './pt_BR/translations.json';\nimport roTranslations from './ro/translations.json';\nimport ruTranslations from './ru/translations.json';\nimport svTranslations from './sv/translations.json';\nimport tetTranslations from './tet/translations.json';\nimport tgTranslations from './tg/translations.json';\nimport ukTranslations from './uk/translations.json';\nimport urTranslations from './ur/translations.json';\nimport uzTranslations from './uz/translations.json';\nimport uz_CyrlTranslations from './uz_Cyrl/translations.json';\nimport uz_LatnTranslations from './uz_Latn/translations.json';\nimport viTranslations from './vi/translations.json';\nimport zhTranslations from './zh/translations.json';\nimport zh_CNTranslations from './zh_CN/translations.json';\n\nconst namespace = 'default';\nmoment.locale('en');\n\ni18n.addResources('ar', namespace, arTranslations);\ni18n.addResources('ar_IQ', namespace, ar_IQTranslations);\ni18n.addResources('ckb', namespace, ckbTranslations);\ni18n.addResources('cs', namespace, csTranslations);\ni18n.addResources('da', namespace, daTranslations);\ni18n.addResources('en', namespace, enTranslations);\ni18n.addResources('es', namespace, esTranslations);\ni18n.addResources('fr', namespace, frTranslations);\ni18n.addResources('id', namespace, idTranslations);\ni18n.addResources('km', namespace, kmTranslations);\ni18n.addResources('lo', namespace, loTranslations);\ni18n.addResources('my', namespace, myTranslations);\ni18n.addResources('nb', namespace, nbTranslations);\ni18n.addResources('nl', namespace, nlTranslations);\ni18n.addResources('prs', namespace, prsTranslations);\ni18n.addResources('ps', namespace, psTranslations);\ni18n.addResources('pt', namespace, ptTranslations);\ni18n.addResources('pt_BR', namespace, pt_BRTranslations);\ni18n.addResources('ro', namespace, roTranslations);\ni18n.addResources('ru', namespace, ruTranslations);\ni18n.addResources('sv', namespace, svTranslations);\ni18n.addResources('tet', namespace, tetTranslations);\ni18n.addResources('tg', namespace, tgTranslations);\ni18n.addResources('uk', namespace, ukTranslations);\ni18n.addResources('ur', namespace, urTranslations);\ni18n.addResources('uz', namespace, uzTranslations);\ni18n.addResources('uz_Cyrl', namespace, uz_CyrlTranslations);\ni18n.addResources('uz_Latn', namespace, uz_LatnTranslations);\ni18n.addResources('vi', namespace, viTranslations);\ni18n.addResources('zh', namespace, zhTranslations);\ni18n.addResources('zh_CN', namespace, zh_CNTranslations);\n\ni18n.setDefaultNamespace(namespace);\ni18n.changeLanguage('en');\n\nexport default i18n;\n","/** @module reducers/selected */\nimport { validateReducer } from '../modules/util';\n\nexport const SET_STYLE = 'SET_STYLE';\n\nexport const DEFAULT_STATE_STYLE = 'LIST';\n\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\nconst style = (state = DEFAULT_STATE_STYLE, action) => {\n    switch (action.type) {\n        case SET_STYLE:\n            return validateReducer(action.value, DEFAULT_STATE_STYLE);\n        default:\n            return state;\n    }\n};\n\nexport default style;\n\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\nexport const sGetStyleRoot = state => state.style;\n","import { combineReducers } from 'redux';\nimport arraySort from 'd2-utilizr/lib/arraySort';\n\nimport dashboards, { sGetDashboardsRoot } from './dashboards';\nimport selected from './selected';\nimport dashboardsFilter, {\n    ownerData,\n    sGetFilterName,\n    sGetFilterOrder,\n    sGetFilterOwner,\n} from './dashboardsFilter';\nimport controlBar from './controlBar';\nimport visualizations from './visualizations';\nimport editDashboard from './editDashboard';\nimport messages from './messages';\nimport user from './user';\nimport snackbar from './snackbar';\nimport itemFilters from './itemFilters';\nimport editItemFilters from './editItemFilters';\nimport style from './style';\nimport dimensions from './dimensions';\nimport settings from './settings';\nimport activeModalDimension from './activeModalDimension';\n\nconst USER = 'system';\n\n// Reducers\n\nexport default combineReducers({\n    dashboards,\n    selected,\n    dashboardsFilter,\n    controlBar,\n    visualizations,\n    messages,\n    user,\n    editDashboard,\n    itemFilters,\n    editItemFilters,\n    style,\n    snackbar,\n    dimensions,\n    settings,\n    activeModalDimension,\n});\n\n// Map constants to data\nconst mapConstToData = {\n    NAME: 'name',\n    ITEMS: 'numberOfItems',\n    CREATED: 'created',\n    OWNER: 'owner',\n};\n\n// Selectors\n\n// Filter dashboards by name\nexport const sFilterDashboardsByName = (dashboards, filter) =>\n    dashboards.filter(d =>\n        d.displayName.toLowerCase().includes(filter.toLowerCase())\n    );\n\n// Filter dashboards by owner, TODO FIXME\nexport const sFilterDashboardsByOwner = (dashboards, filter) => {\n    const ME = ownerData[1]; // TODO\n    const OTHERS = ownerData[2]; // TODO\n\n    switch (filter) {\n        case ME:\n            return dashboards.filter(d => d.owner === USER);\n        case OTHERS:\n            return dashboards.filter(d => d.owner !== USER);\n        default:\n            return dashboards;\n    }\n};\n\n// Filter dashboards by order\nexport const sFilterDashboardsByOrder = (dashboards, filter) => {\n    const filterValues = filter.split(':');\n\n    const key = filterValues[0];\n    const direction = filterValues[1];\n\n    return arraySort(dashboards, direction, mapConstToData[key]);\n};\n\n// Selectors dependency level 2\n\n// Get filtered dashboards\nexport const sGetFilteredDashboards = state => {\n    const dashboards = sGetDashboardsRoot(state);\n\n    const nameFilter = sGetFilterName(state);\n    const ownerFilter = sGetFilterOwner(state);\n    const orderFilter = sGetFilterOrder(state);\n\n    return sFilterDashboardsByOrder(\n        sFilterDashboardsByName(\n            sFilterDashboardsByOwner(dashboards, ownerFilter),\n            nameFilter\n        ),\n        orderFilter\n    );\n};\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport reducer from './reducers';\n\nconst configureStore = () => {\n    const middleware = [thunk];\n\n    // Enable Redux devtools if extension is installed instead of redux-logger\n    const composeEnhancers =\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n    if (\n        !window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ &&\n        process.env.NODE_ENV !== 'production'\n    ) {\n        middleware.push(createLogger());\n    }\n\n    return createStore(\n        reducer,\n        composeEnhancers(applyMiddleware(...middleware))\n    );\n};\n\nexport default configureStore;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport { init as d2Init, config, getManifest, getUserSettings } from 'd2';\nimport dhis2theme from '@dhis2/d2-ui-core/theme/mui3.theme';\n\nimport { Provider as RuntimeProvider } from '@dhis2/app-runtime';\nimport { CssReset } from '@dhis2/ui-core';\n\nimport App from './components/App';\nimport './index.css';\nimport i18n from './locales';\nimport configureStore from './configureStore';\n\nconst muiTheme = () => createMuiTheme(dhis2theme);\n\nconst configI18n = userSettings => {\n    const uiLocale = userSettings.keyUiLocale;\n\n    if (uiLocale && uiLocale !== 'en') {\n        config.i18n.sources.add(`./i18n/i18n_module_${uiLocale}.properties`);\n    }\n\n    config.i18n.sources.add('./i18n/i18n_module_en.properties');\n    i18n.changeLanguage(uiLocale);\n};\n\nconst init = async () => {\n    const manifest = await getManifest('./manifest.webapp');\n\n    // log app info\n    console.info(\n        `Dashboards app, v${manifest.version}, ${\n            manifest.manifest_generated_at\n        }`\n    );\n\n    const isProd = process.env.NODE_ENV === 'production';\n\n    if (\n        !isProd &&\n        (!process.env.REACT_APP_DHIS2_BASE_URL ||\n            !process.env.REACT_APP_DHIS2_AUTHORIZATION)\n    ) {\n        throw new Error(\n            'Missing env variables REACT_APP_DHIS2_BASE_URL and REACT_APP_DHIS2_AUTHORIZATION'\n        );\n    }\n\n    // api config\n    const baseUrl = isProd\n        ? manifest.activities.dhis.href\n        : process.env.REACT_APP_DHIS2_BASE_URL;\n    const authorization = process.env.REACT_APP_DHIS2_AUTHORIZATION;\n\n    config.baseUrl = `${baseUrl}/api/${manifest.dhis2.apiVersion}`;\n    config.headers = isProd ? null : { Authorization: authorization };\n    config.schemas = [\n        'chart',\n        'map',\n        'report',\n        'reportTable',\n        'eventChart',\n        'eventReport',\n        'dashboard',\n        'organisationUnit',\n        'userGroup',\n    ];\n\n    getUserSettings()\n        .then(configI18n)\n        .then(() => d2Init(config))\n        .then(initializedD2 => {\n            ReactDOM.render(\n                <RuntimeProvider\n                    config={{\n                        baseUrl: baseUrl,\n                        apiVersion: manifest.dhis2.apiVersion,\n                    }}\n                >\n                    <CssReset />\n                    <Provider store={configureStore()}>\n                        <MuiThemeProvider theme={muiTheme()}>\n                            <App baseUrl={baseUrl} d2={initializedD2} />\n                        </MuiThemeProvider>\n                    </Provider>\n                </RuntimeProvider>,\n                document.getElementById('root')\n            );\n        });\n};\n\ninit();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"leftControls\":\"DashboardsBar_leftControls__25cNR\",\"rightControls\":\"DashboardsBar_rightControls__CiA5J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuItem\":\"ContentMenuItem_menuItem___-2-X\",\"launchLink\":\"ContentMenuItem_launchLink__2fSUG\",\"label\":\"ContentMenuItem_label__2NOxi\",\"buttonInsert\":\"ContentMenuItem_buttonInsert__7buZh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemWrap\":\"ItemHeader_itemWrap__1iSno\",\"itemHeaderWrap\":\"ItemHeader_itemHeaderWrap__1dXOS\",\"itemTitle\":\"ItemHeader_itemTitle__1fKUT\",\"itemActionsWrap\":\"ItemHeader_itemActionsWrap__1U07S\"};","import isObject from 'lodash/isObject';\n\n// validation\nexport function orNull(param) {\n    return param === undefined ? null : param;\n}\n\nexport function orArray(param) {\n    return Array.isArray(param) ? param : [];\n}\n\nexport function orObject(param) {\n    return isObject(param) ? param : {};\n}\n\n// array\nexport function arrayGetById(array, id) {\n    return array.find(item => item.id === id);\n}\n\n// object\nexport function arrayToIdMap(array) {\n    return array.reduce((obj, item) => {\n        obj[item.id] = item;\n        return obj;\n    }, {});\n}\n\n// date\nexport function getDate() {\n    const y = Math.floor(Math.random() * 3) + 2015;\n    const M = Math.floor(Math.random() * 12) + 1;\n    const d = Math.floor(Math.random() * 28) + 1;\n    // const h = Math.floor(Math.random() * 23) + 1;\n    // const m = Math.floor(Math.random() * 59) + 1;\n    // const s = Math.floor(Math.random() * 59) + 1;\n\n    return new Date(`${y}-${M}-${d}`)\n        .toJSON()\n        .replace('T', ' ')\n        .substr(0, 10);\n}\n\nexport const formatDate = (value, uiLocale) => {\n    if (typeof global.Intl !== 'undefined' && Intl.DateTimeFormat) {\n        const locale = uiLocale || 'en';\n        return new Intl.DateTimeFormat(locale, {\n            year: 'numeric',\n            month: 'short',\n            day: 'numeric',\n        }).format(new Date(value));\n    }\n\n    return value.substr(0, 19).replace('T', ' ');\n};\n\n/**\n * Sorts an array of objects based on provided date property\n *\n * @param {Array} items Array of objects\n * @param {String} dateProp Name of the date property to be used for sorting\n * @param {Boolean} ascending Whether to sort ascending or descending\n */\nexport const sortByDate = (items, dateProp, ascending = true) => {\n    const values = Object.values(items);\n\n    values.sort((a, b) => {\n        const aDate = new Date(a[dateProp]);\n        const bDate = new Date(b[dateProp]);\n\n        return ascending ? aDate - bDate : bDate - aDate;\n    });\n\n    return values;\n};\n\n// reducer validator\nexport const validateReducer = (value, defaultValue) =>\n    value === undefined || value === null ? defaultValue : value;\n\nexport const getBaseUrl = d2 => {\n    const api = d2.Api.getApi();\n    const idx = api.baseUrl.indexOf('/api');\n    return idx > -1 ? api.baseUrl.slice(0, idx) : api.baseUrl;\n};\n\nexport const getWithoutId = object => ({\n    ...object,\n    id: undefined,\n});\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ControlBar_root__2a7xK\",\"content\":\"ControlBar_content__uG2fK\",\"draghandle\":\"ControlBar_draghandle__nLcL-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FatalErrorBoundary_container__FPSkU\",\"icon\":\"FatalErrorBoundary_icon__1bhAy\",\"message\":\"FatalErrorBoundary_message__2ZvqS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"center\":\"VisualizationErrorMessage_center__39mQ5\",\"errorMessage\":\"VisualizationErrorMessage_errorMessage__Ln_Yg\",\"appLink\":\"VisualizationErrorMessage_appLink__3kH-I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ClearButton_button__V4UJr\",\"icon\":\"ClearButton_icon__7atFN\"};","import isObject from 'lodash/isObject';\nimport {\n    VIS_TYPE_COLUMN,\n    VIS_TYPE_PIVOT_TABLE,\n    AXIS_ID_ROWS,\n    AXIS_ID_COLUMNS,\n    AXIS_ID_FILTERS,\n} from '@dhis2/analytics';\nimport { apiFetchFavorite, getMapFields } from '../../../api/metadata';\n\nimport {\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_REPORT,\n    EVENT_CHART,\n    itemTypeMap,\n} from '../../../modules/itemTypes';\nimport { getBaseUrl, getWithoutId } from '../../../modules/util';\nimport { getGridItemDomId } from '../../ItemGrid/gridUtil';\n\n//external plugins\nconst itemTypeToExternalPlugin = {\n    [MAP]: 'mapPlugin',\n    [EVENT_REPORT]: 'eventReportPlugin',\n    [EVENT_CHART]: 'eventChartPlugin',\n};\nconst hasIntegratedPlugin = type => [CHART, REPORT_TABLE].includes(type);\n\nconst getPlugin = type => {\n    if (hasIntegratedPlugin(type)) {\n        return true;\n    }\n    const pluginName = itemTypeToExternalPlugin[type];\n\n    return global[pluginName];\n};\n\nexport const THEMATIC_LAYER = 'thematic';\n\nexport const pluginIsAvailable = (item = {}, visualization = {}) => {\n    const type = visualization.activeType || item.type;\n\n    return !!getPlugin(type);\n};\n\nexport const extractFavorite = item => {\n    if (!isObject(item)) {\n        return null;\n    }\n\n    const propName = itemTypeMap[item.type].propName;\n\n    return (\n        item[propName] ||\n        item.reportTable ||\n        item.chart ||\n        item.map ||\n        item.eventReport ||\n        item.eventChart ||\n        {}\n    );\n};\n\nexport const extractMapView = map =>\n    map.mapViews && map.mapViews.find(mv => mv.layer.includes(THEMATIC_LAYER));\n\nexport const loadPlugin = (plugin, config, credentials) => {\n    if (!(plugin && plugin.load)) {\n        return;\n    }\n\n    plugin.url = credentials.baseUrl;\n    plugin.loadingIndicator = true;\n    plugin.dashboard = true;\n    if (credentials.auth) {\n        plugin.auth = credentials.auth;\n    }\n    plugin.load(config);\n};\n\nexport const getId = item => extractFavorite(item).id;\nexport const getName = item => extractFavorite(item).name;\nexport const getDescription = item => extractFavorite(item).description;\nexport const getLink = (item, d2) => {\n    const baseUrl = getBaseUrl(d2);\n    const appUrl = itemTypeMap[item.type].appUrl(getId(item));\n\n    return `${baseUrl}/${appUrl}`;\n};\n\nexport const load = async (\n    item,\n    visualization,\n    { credentials, activeType, options = {} }\n) => {\n    const config = {\n        ...visualization,\n        ...options,\n        el: getGridItemDomId(item.id),\n    };\n\n    const type = activeType || item.type;\n    const plugin = getPlugin(type);\n\n    loadPlugin(plugin, config, credentials);\n};\n\nexport const fetch = async item => {\n    const fetchedFavorite = await apiFetchFavorite(getId(item), item.type, {\n        fields: item.type === MAP ? getMapFields() : null,\n    });\n\n    return fetchedFavorite;\n};\n\nexport const resize = item => {\n    const plugin = getPlugin(item.type);\n\n    if (plugin && plugin.resize) {\n        plugin.resize(getGridItemDomId(item.id));\n    }\n};\n\nexport const unmount = (item, activeType) => {\n    const plugin = getPlugin(activeType);\n\n    if (plugin && plugin.unmount) {\n        plugin.unmount(getGridItemDomId(item.id));\n    }\n};\n\nexport const getVisualizationConfig = (\n    visualization,\n    originalType,\n    activeType\n) => {\n    if (originalType === MAP && originalType !== activeType) {\n        const extractedMapView = extractMapView(visualization);\n\n        if (extractedMapView === undefined) {\n            return null;\n        }\n\n        return getWithoutId({\n            ...visualization,\n            ...extractedMapView,\n            mapViews: undefined,\n            type: activeType === CHART ? VIS_TYPE_COLUMN : VIS_TYPE_PIVOT_TABLE,\n        });\n    } else if (originalType === REPORT_TABLE && activeType === CHART) {\n        // return getWithoutId({ ...visualization, type: VIS_TYPE_COLUMN });\n        const columns = visualization[AXIS_ID_COLUMNS].slice();\n        const rows = visualization[AXIS_ID_ROWS].slice();\n\n        const layout = {};\n\n        if (visualization.rows.length > 1) {\n            layout[AXIS_ID_ROWS] =\n                rows.length > 2\n                    ? rows.splice(0, 2)\n                    : rows.splice(0, rows.length);\n        } else {\n            layout[AXIS_ID_ROWS] = rows.length ? [rows.shift()] : rows;\n        }\n\n        layout[AXIS_ID_COLUMNS] = columns.length ? [columns.shift()] : columns;\n        layout[AXIS_ID_FILTERS] = [\n            ...visualization[AXIS_ID_FILTERS],\n            ...columns,\n            ...rows,\n        ];\n\n        return getWithoutId({\n            ...visualization,\n            ...layout,\n            type: VIS_TYPE_COLUMN,\n        });\n    } else if (originalType === CHART && activeType === REPORT_TABLE) {\n        return getWithoutId({\n            ...visualization,\n            type: VIS_TYPE_PIVOT_TABLE,\n        });\n    }\n\n    return getWithoutId(visualization);\n};\n","import isFunction from 'd2-utilizr/lib/isFunction';\n\nimport { orObject } from '../../modules/util';\n\n// Dimensions for the react-grid-layout\n\nexport const GRID_COMPACT_TYPE = 'vertical'; // vertical | horizonal | null\nexport const GRID_ROW_HEIGHT = 10;\nconst GRID_COLUMN_WIDTH_PX = 20;\nconst GRID_LAYOUT = 'FLEXIBLE'; // FIXED | FLEXIBLE\nexport const MARGIN = [10, 10];\n\nexport const NEW_ITEM_SHAPE = { x: 0, y: 0, w: 20, h: 29 };\n\n// Dimensions for getShape\n\nconst NUMBER_OF_ITEM_COLS = 2;\nconst GRID_COLUMNS = 60;\n\nexport const getGridColumns = () => {\n    switch (GRID_LAYOUT) {\n        case 'FLEXIBLE':\n            return GRID_COLUMNS;\n        case 'FIXED':\n            return Math.floor((window.innerWidth - 20) / GRID_COLUMN_WIDTH_PX);\n        default:\n            return GRID_COLUMNS;\n    }\n};\n\n// isNonNegativeInteger\n\nconst isNonNegativeInteger = x => Number.isInteger(x) && x >= 0;\n\n// Does the item have all the shape properties?\n\nexport const hasShape = item =>\n    isNonNegativeInteger(item.x) &&\n    isNonNegativeInteger(item.y) &&\n    isNonNegativeInteger(item.w) &&\n    isNonNegativeInteger(item.h);\n\n// returns a rectangular grid block dimensioned with x, y, w, h in grid units.\n// based on a grid with 3 items across\nexport const getShape = i => {\n    if (!isNonNegativeInteger(i)) {\n        throw new Error('Invalid grid block number');\n    }\n\n    const col = i % NUMBER_OF_ITEM_COLS;\n    const row = Math.floor(i / NUMBER_OF_ITEM_COLS);\n    const itemWidth = Math.floor((GRID_COLUMNS - 1) / NUMBER_OF_ITEM_COLS);\n    const itemHeight = GRID_ROW_HEIGHT * 2;\n\n    return {\n        x: col * itemWidth,\n        y: row * itemHeight,\n        w: itemWidth,\n        h: itemHeight,\n    };\n};\n\nexport const getGridItemProperties = itemId => {\n    return {\n        i: itemId,\n        minH: 4, // minimum height for item\n    };\n};\n\n/**\n * Calculates the grid item's original height in pixels based\n * on the height in grid units. This calculation\n * is copied directly from react-grid-layout GridItem.js (calcPosition)\n *\n * @param {Object} item item containing shape (x, y, w, h)\n */\nconst getOriginalHeight = item => {\n    const originalHeight = Math.round(\n        GRID_ROW_HEIGHT * item.h + Math.max(0, item.h - 1) * MARGIN[1]\n    );\n\n    return { originalHeight };\n};\n\n/**\n * Returns an array of items containing the x, y, w, h dimensions\n * and the item's originalheight in pixels\n * @function\n * @param {Array} items\n * @returns {Array}\n */\n\nexport const withShape = items =>\n    items.map((item, index) => {\n        const itemWithShape = hasShape(item)\n            ? item\n            : Object.assign({}, item, getShape(index));\n\n        return Object.assign(\n            {},\n            itemWithShape,\n            getOriginalHeight(itemWithShape)\n        );\n    });\n\nexport const getGridItemDomId = id => `item-${id}`;\n\nexport function onItemResize(id) {\n    const el = orObject(document.querySelector(`#${getGridItemDomId(id)}`));\n    if (isFunction(el.setViewportSize))\n        setTimeout(\n            () => el.setViewportSize(el.clientWidth - 5, el.clientHeight - 5),\n            10\n        );\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"showMoreButton\":\"CategorizedMenuGroup_showMoreButton__24-Ko\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"deleteItemButton\":\"DeleteItemButton_deleteItemButton__1ytNP\"};"],"sourceRoot":""}
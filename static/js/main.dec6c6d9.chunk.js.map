{"version":3,"sources":["modules/itemTypes.js","reducers/user.js","reducers/dashboards.js","reducers/selected.js","reducers/visualizations.js","api/metadata.js","api/index.js","api/dashboards.js","components/ItemGrid/gridUtil.js","reducers/messages.js","api/messages.js","reducers/snackbar.js","actions/snackbar.js","components/SnackbarMessage/SnackbarMessage.js","components/Item/VisualizationItem/plugin.js","actions/selected.js","api/localStorage.js","components/Item/MessagesItem/actions.js","reducers/editDashboard.js","api/editDashboard.js","actions/editDashboard.js","actions/dashboards.js","reducers/controlBar.js","api/controlBar.js","actions/controlBar.js","reducers/dimensions.js","reducers/settings.js","actions/dimensions.js","modules/colors.js","api/dataStatistics.js","components/ControlBar/DashboardItemChip.js","widgets/D2IconButton.js","reducers/dashboardsFilter.js","components/ControlBar/Filter.js","components/ControlBar/ShowMoreButton.js","components/ControlBar/controlBarDimensions.js","components/ControlBar/DashboardsBar.js","actions/dashboardsFilter.js","components/Dashboard/DashboardVerticalOffset.js","components/ItemSelect/selectableItems.js","components/ItemSelect/ItemSelectList.js","components/ItemSelect/actions.js","components/ItemSelect/ItemSelectSingle.js","components/ItemSelect/ItemSelect.js","components/TitleBar/EditTitleBar.js","components/ItemFilter/FilterDialog.js","reducers/activeModalDimension.js","reducers/itemFilters.js","reducers/editItemFilters.js","actions/itemFilters.js","actions/editItemFilters.js","actions/activeModalDimension.js","components/ItemFilter/FilterSelector.js","components/TitleBar/Info.js","components/TitleBar/ViewTitleBar.js","components/TitleBar/TitleBar.js","components/Item/VisualizationItem/DefaultPlugin.js","components/Item/ItemHeader.js","components/Item/VisualizationItem/ItemFooter.js","components/Item/ItemHeaderButton.js","components/Item/VisualizationItem/ItemHeaderButtons.js","modules/memoizeOne.js","components/Item/VisualizationItem/Item.js","widgets/Line.js","components/Item/MessagesItem/Item.js","components/Item/NotSupportedItem/Item.js","components/Item/ListItem/Item.js","components/Item/ListItem/actions.js","components/Item/TextItem/Item.js","components/Item/AppItem/Item.js","components/Item/SpacerItem/Item.js","components/Item/Item.js","components/ItemGrid/DeleteItemButton.js","widgets/ModalLoadingMask.js","widgets/NoContentMessage.js","components/Item/ProgressiveLoadingContainer.js","components/ItemGrid/ItemGrid.js","components/FilterBar/FilterBadge.js","components/FilterBar/FilterBar.js","components/Dashboard/DashboardContent.js","components/Dashboard/ViewDashboard.js","widgets/PrimaryButton.js","widgets/FlatButton.js","components/ControlBar/ConfirmDeleteDialog.js","components/ControlBar/EditBar.js","components/Dashboard/EditDashboard.js","components/Dashboard/NewDashboard.js","components/Dashboard/Dashboard.js","components/Dashboard/dashboardModes.js","components/App.js","actions/user.js","locales/index.js","reducers/style.js","reducers/index.js","configureStore.js","modules/theme.js","index.js","modules/util.js"],"names":["REPORT_TABLE","CHART","MAP","EVENT_REPORT","EVENT_CHART","APP","REPORTS","RESOURCES","USERS","MESSAGES","TEXT","SPACER","DOMAIN_TYPE_AGGREGATE","VISUALIZATION_TYPE_TABLE","VISUALIZATION_TYPE_CHART","VISUALIZATION_TYPE_MAP","spacerContent","emptyTextItemContent","isSpacerType","item","type","text","isTextType","isPluginType","itemTypeMap","hasOwnProperty","getPlugin","pluginName","plugin","global","_itemTypeMap","Object","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","id","endPointName","propName","countName","pluralTitle","i18n","t","domainType","visualizationType","appUrl","concat","appName","getItemUrl","d2","url","launchUrl","getBaseUrl","getItemIcon","TableIcon","ChartIcon","MapIcon","ExtensionIcon","DescriptionIcon","PersonIcon","FontDownloadIcon","EmailIcon","CropFreeIcon","NotInterestedIcon","DEFAULT_STATE_USER","username","uiLocale","isSuperuser","sGetUserUsername","state","user","DEFAULT_STATE_DASHBOARDS","byId","items","updateDashboardProp","dashboardId","prop","value","objectSpread","defineProperty","sGetDashboardsRoot","dashboards","sGetDashboardById","orObject","sDashboardsIsFetching","sGetAllDashboards","sGetDashboardItems","sGetStarredDashboards","values","filter","dashboard","starred","sGetUnstarredDashboards","sGetDashboardsSortedByStarred","toConsumableArray","arraySort","getCustomDashboards","data","arrayFrom","map","d","index","name","displayName","description","displayDescription","favorite","owner","created","split","join","substr","lastUpdated","access","numberOfItems","orArray","dashboardItems","length","combineReducers","arguments","undefined","action","validateReducer","isLoading","showDescription","sGetSelectedRoot","selected","sGetSelectedId","sGetSelectedIsLoading","sGetSelectedShowDescription","DEFAULT_STATE_VISUALIZATIONS","isEmpty","p","sGetVisualization","visualizations","sGetVisualizationsRoot","getIdNameFields","rename","getDimensionFields","_ref2","withItems","arrayClean","getAxesFields","_ref3","getFavoriteFields","_ref4","withDimensions","withOptions","getFavoritesFields","_ref5","apiFetchFavorite","_ref6","fields","getInstance","then","Api","getApi","get","getEndPointName","onError","error","console","log","getDashboardItemsFields","withFavorite","getDashboardFields","apiFetchDashboard","models","catch","apiStarDashboard","isStarred","post","delete","apiDeleteDashboard","MARGIN","NEW_ITEM_SHAPE","x","y","w","h","isNonNegativeInteger","Number","isInteger","hasShape","withShape","itemWithShape","assign","i","Error","col","row","Math","floor","itemWidth","GRID_ROW_HEIGHT","getShape","originalHeight","round","max","getOriginalHeight","getGridItemDomId","onItemResize","el","document","querySelector","isFunction","setViewportSize","setTimeout","clientWidth","clientHeight","sGetMessagesRoot","messages","getMessages","DEFAULT_STATE_SNACKBAR","message","duration","open","acCloseSnackbar","loadingDashboardMsg","SnackbarMessageContent","_ref","react_default","a","createElement","style","fontWeight","connect","_sGetSnackbar","snackbar","sGetSnackbar","snackbarOpen","snackbarMessage","snackbarDuration","onCloseSnackbar","props","Snackbar_default","SnackbarMessage_SnackbarMessageContent","autoHideDuration","onRequestClose","pluginIsAvailable","activeType","extractFavorite","isObject","reportTable","chart","eventReport","eventChart","loadPlugin","config","credentials","load","baseUrl","loadingIndicator","auth","getId","getName","getLink","asyncToGenerator","regenerator_default","mark","_callee","visualization","_args","wrap","_context","prev","next","stop","_x","_x2","_x3","_x4","apply","this","fetch","_callee2","fetchedFavorite","_context2","sent","abrupt","_x5","resize","unmount","getVisualizationConfig","originalType","extractedMapView","mapViews","find","mv","layer","includes","getWithoutId","acSetSelectedId","acSetSelectedIsLoading","acReceivedVisualization","tLoadDashboard","dispatch","getState","dash","acAppendDashboards","Promise","resolve","t0","tSetSelectedDashboardById","snackbarTimeout","onSuccess","dashboardName","customDashboard","acSetDashboardItems","localStorage","setItem","forEach","messageConversations","clearTimeout","DEFAULT_STATE_EDIT_DASHBOARD","NEW_DASHBOARD_STATE","sGetEditDashboardRoot","editDashboard","sGetEditDashboardItems","saveDashboard","width","height","save","msg","response","uid","updateDashboard","postDashboard","create","acAddDashboardItem","itemPropName","generateUid","content","acUpdateDashboardItem","acRemoveDashboardItem","arrayToIdMap","acSetDashboardStarred","tFetchDashboards","collection","list","paging","toArray","userRows","sGetControlBarUserRows","controlBar","sGetControlBarRoot","KEY","hasNamespace","currentUser","dataStore","has","getNamespace","apiGetControlBarRows","_callee3","namespace","_context3","t1","t2","keys","key","apiPostControlBarRows","_callee4","rows","_context4","set","acSetControlBarUserRows","DEFAULT_DIMENSIONS","pe","FIXED_DIMENSIONS","ou","sGetDimensions","dimensions","DEFAULT_SETTINGS","keyDateFormat","keyAnalysisRelativePeriod","keyAnalysisDigitGroupSeparator","displayNameProperty","rootOrganisationUnit","sGetSettings","settings","sGetSettingsDisplayNameProperty","acSetDimensions","keyBy","sortBy","toLowerCase","colors","apiPostDataStatistics","eventType","chipTheme","default","labelColor","backgroundColor","primary","accent","DashboardItemChip","label","chipColorProps","labelStyle","fontSize","lineHeight","margin","cursor","Link","display","verticalAlign","textDecoration","to","onClick","debounce","Chip_default","avatarProps","color","Avatar_default","icon","Star_default","avatar","styles","button","padding","iconStyle","IconAdd","iconColor","D2IconButton","IconButton_default","add_circle_default","defaultProps","Function","prototype","ownerData","DEFAULT_STATE_DASHBOARDS_FILTER_NAME","DEFAULT_STATE_DASHBOARDS_FILTER_OWNER","order","sGetDashboardsFilterRoot","dashboardsFilter","sGetFilterName","KEYCODE_ENTER","KEYCODE_ESCAPE","filterField","top","filterFieldInput","left","filterFieldUnderline","bottom","filterFieldUnderlineFocus","borderColor","borderWidth","clearButton","clearButtonIcon","Filter","_Component","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setFilterValue","event","preventDefault","onChangeName","target","handleKeyUp","keyCode","onKeypressEnter","inherits","createClass","nextProps","setState","TextField_default","className","onChange","onKeyUp","hintText","inputStyle","hintStyle","filterFieldHint","underlineStyle","underlineFocusStyle","Component","ClearButton","disabled","opacity","Clear_default","ControlBar_Filter","react","Filter_Filter","Filter_ClearButton","showMore","paddingTop","textTransform","visibility","withStyles","isMaxHeight","classes","textAlign","MIN_ROW_COUNT","getRowsHeight","getNumRowsFromHeight","FIRST_ROW_PADDING_HEIGHT","getControlBarHeight","expandable","flapHeight","END_FLAP_HEIGHT","MAX_ROW_COUNT","DashboardsBar","_getPrototypeOf2","_len","args","Array","_key","setInitialDashboardState","onChangeHeight","newHeight","newRows","newRowCount","min","onEndDrag","onToggleMaxHeight","onSelectDashboard","history","push","_this$props","selectedId","onChangeFilterName","rowCount","controlBarHeight","contentWrapperStyle","overflowY","ControlBar_default","editMode","marginRight","widgets_D2IconButton","ControlBar_DashboardItemChip","ControlBar_ShowMoreButton","mapDispatchToProps","withRouter","stateProps","dispatchProps","ownProps","displayDashboards","marginTop","singleItems","header","listItems","title","ItemSelectList","addItem","tAddListItemContent","newItem","match","toggleSeeMore","seeMore","onChangeItemsLimit","_this2","justifyContent","paddingLeft","Button_default","Divider_default","List","itemUrl","context","ItemIcon","leftIcon","fill","innerDivStyle","hoverColor","primaryText","alignItems","marginLeft","rel","href","Launch_default","contextTypes","PropTypes","object","isRequired","dashboardItem","listItemType","dashboardItemIndex","findIndex","SingleItem","onAddToDashboard","category","addToDashboard","ItemSelectSingle_SingleItem","searchIcon","ItemSearchField","Search_default","fullWidth","ItemSelect","closeList","openList","fetchItems","anchorEl","currentTarget","setFilter","getListItems","itemType","ItemSelect_ItemSelectList","popoverChildren","SingleItems","ItemSelect_ItemSelectSingle","maxOption","api","queryString","maxOptions","add","Set","ItemSelect_ItemSearchField","Popover_default","onClose","anchorOrigin","horizontal","vertical","transformOrigin","PaperProps","React","EditTitleBar","onChangeTitle","onChangeDescription","titleStyle","section","titleDescription","text_field_TextField_default","multiline","rowsMax","placeholder","itemSelect","components_ItemSelect_ItemSelect","selectedDashboard","flex","minWidth","maxWidth","position","peId","ouId","FilterDialog","onConfirm","dimension","selectedItems","onSelect","onDeselect","onReorder","dialogId","PeriodDimension","selectedPeriods","OrgUnitDimension","ouItems","DynamicDimension","dialogTitle","_this$props2","Dialog_default","disableEnforceFocus","dialogContent","DialogActions_default","es_Button","kind","DEFAULT_STATE_ACTIVE_MODAL_DIMENSION","sGetActiveModalDimension","activeModalDimension","DEFAULT_STATE_ITEM_FILTERS","sGetItemFiltersRoot","itemFilters","sGetFiltersKeys","DEFAULT_STATE_EDIT_ITEM_FILTERS","sGetEditItemFiltersRoot","editItemFilters","acRemoveItemFilter","acRemoveEditItemFilter","acSetActiveModalDimension","FilterSelector","openPanel","closePanel","closeDialog","clearActiveModalDimension","selectDimension","setActiveModalDimension","onSelectItems","dimensionId","dimensionType","setEditItemFilters","onDeselectItems","idsToRemove","newList","removeEditItemFilter","onReorderItems","ids","oldList","reorderedList","saveFilter","filterItems","addItemFilter","removeItemFilter","selectedDimensions","ArrowDropDown_default","Boolean","DimensionsPanel","onDimensionClick","selectedIds","ItemFilter_FilterDialog","filters","Info","show","toggle","InfoOutlined_default","NO_DESCRIPTION","actions","starIcon","textButton","editLink","titleBar","titleBarIcon","ViewTitleBar","toggleSharingDialog","sharingDialogIsOpen","onStarClick","onInfoClick","userSelect","StarIcon","Star","StarBorder","TitleBar_Info","update","manage","ItemFilter_FilterSelector","paddingBottom","d2_ui_sharing_dialog_default","tStarDashboard","TitleBar","edit","TitleBar_EditTitleBar","TitleBar_ViewTitleBar","DefaultPlugin","pluginCredentials","shouldPluginReload","prevProps","reloadAllowed","filtersChanged","vis","prevVis","visChanged","reloadPlugin","pluginManager","currentVis","useActiveType","getActiveType","defaultHeaders","Authorization","textDiv","HEADER_HEIGHT","ItemHeader","actionButtons","scrollContainer","line","border","ItemFooter","objectId","d2_ui_interpretations_default","ItemHeaderButton","children","iconBase","buttonBase","buttonDisabled","toggleFooterPadding","borderRadius","baseStyle","container","disabledStyle","activeStyle","inactiveStyle","getItemTypeId","VisualizationItemHeaderButtons","onSelectVisualization","activeFooter","onToggleFooter","toggleFooterBase","toggleFooter","tableButtonStyle","tableBtnStyle","chartButtonStyle","chartBtnStyle","mapButtonStyle","mapBtnStyle","components_Item_ItemHeaderButton","Message_default","ViewList_default","InsertChart_default","Public_default","memoizeOne","fn","lastArgs","lastValue","every","arg","overflow","textOverflow","whiteSpace","fontStretch","applyFilters","visRows","obj","visColumns","columns","visFilters","dimensionFound","dimensionObjects","Item","showFooter","configLoaded","getUniqueKey","uniqueId","getPluginComponent","getContentStyle","data_visualizer_plugin","forDashboard","VisualizationItem_DefaultPlugin","onToggleItemExpanded","getTitle","itemName","getActionButtons","ItemHeaderButtons","_componentDidMount","onVisualizationLoaded","_this$props3","Item_ItemHeader","VisualizationItem_ItemFooter","acReceivedActiveVisualization","Line","PRIVATE","messageTypes","_messageTypes","listStyleType","seeAll","marginBottom","sender","snippet","maxHeight","MessagesItem","getMessageHref","msgIdentifier","messageType","getMessageSender","latestMsg","slice","getMessageItems","editClass","readClass","read","msgDate","location","messageCount","formatDate","userSettings","widgets_Line","string","MessagesContainer","NotSupportedItem","NotInterested_default","align","getItemTitle","removeContent","handler","contentToRemove","ListItem","tRemoveListItemContent","contentItems","array","getContentItems","contentItem","deleteButton","Delete_default","ListItemContainer","newContent","textField","onChangeText","updatedItem","d2_ui_rich_text","onEdit","textDivStyle","viewItem","getIframeSrc","appDetails","iframeSrc","ouIds","ouPath","AppItem","appKey","system","installedApps","app","src","SpacerItem","GridItem","VisualizationItem","TextItem","getGridItem","right","zIndex","DeleteItemHeaderButton","modal","pointerEvents","dark","ModalLoadingMask","LoadingMask_component_default","NoContentMessage","ProgressiveLoadingContainer","shouldLoad","containerRef","shouldLoadHandler","bufferPx","bufferFactor","window","innerHeight","rect","getBoundingClientRect","removeHandler","checkShouldLoad","debounceMs","addEventListener","removeEventListener","registerHandler","_this3","objectWithoutProperties","ref","ItemGrid","expandedItems","NO_ITEMS_MESSAGE","clickedId","isExpanded","onRemoveItem","onLayoutChange","newLayout","acUpdateDashboardLayout","onResizeStop","layout","oldItem","pluginResize","onRemoveItemWrapper","widgets_NoContentMessage","expandedItem","hProp","minH","widgets_ModalLoadingMask","react_grid_layout_default","cols","rowHeight","innerWidth","compactType","isDraggable","isResizable","draggableCancel","itemClassNames","Item_ProgressiveLoadingContainer","DeleteItemButton","Item_Item_Item","validItems","badgeContainer","badge","badgeRemove","FilterBadge","onRemove","count","bar","FilterBar","onBadgeRemove","onBadgeClick","FilterBar_FilterBadge","removeItemFIlter","filtersSelector","createSelector","reduce","arr","DashboardContent","components_TitleBar_TitleBar","components_FilterBar_FilterBar","components_ItemGrid_ItemGrid","Content","hasDashboardContent","dashboardsIsEmpty","Dashboard_DashboardContent","dashboardsLoaded","contentNotReady","ControlBar_DashboardsBar","Dashboard_DashboardVerticalOffset","ViewDashboard_Content","PrimaryButton","RaisedButton_default","defaultStyles","FlatButton","combinedStyle","FlatButton_default","ConfirmDeleteDialog","onDeleteConfirmed","onContinueEditing","widgets_FlatButton","src_widgets_PrimaryButton","material_ui_Dialog_default","buttonBarStyle","EditBar","translationDialogIsOpen","dashboardModel","confirmDeleteDialogOpen","redirectUrl","onConfirmDelete","onSave","newId","onDiscard","onDiscardChanges","onDelete","onTranslationsSaved","translations","dbLocale","translation","locale","property","onTranslate","fetchDashboardModel","toggleTranslationDialog","confirmDeleteDialog","deleteAccess","ControlBar_ConfirmDeleteDialog","translationDialog","d2_ui_translation_dialog_default","objectToTranslate","fieldsToTranslate","onTranslationSaved","onTranslationError","err","Redirect","updateAccess","discardBtnText","sGetIsNewDashboard","dashboardToSave","_x6","_x7","tDeleteDashboard","acSetDashboardDisplayName","EditDashboard","initialized","initEditDashboard","setEditDashboard","getDashboardContent","EditDashboard_Content","ControlBar_EditBar","NewDashboard","setNewDashboard","Dashboard","setDashboard","params","selectDashboard","mode","Dashboard_EditDashboard","Dashboard_NewDashboard","Dashboard_ViewDashboard","dashboardToSelect","preferredId","getItem","App","setCurrentUser","fetchDashboards","setControlBarRows","setDimensions","HeaderBar_default","HashRouter","Switch","Route","exact","path","render","components_Dashboard_Dashboard","components_SnackbarMessage_SnackbarMessage","childContextTypes","controlBarRows","displayNameProp","apiFetchDimensions","tSetDimensions","moment","addResources","enTranslations","loTranslations","svTranslations","urTranslations","viTranslations","setDefaultNamespace","changeLanguage","objectClean","conversations","$merge","d2Object","keyUiLocale","authorities","newState","k","$unshift","idToRemove","$splice","stateItems","newStateItems","stateItem","si","$set","configureStore","middleware","thunk","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducer","applyMiddleware","muiTheme","raisedButton","primaryColor","disabledColor","disabledTextColor","getMuiTheme","configI18n","sources","manifest","isProd","getManifest","info","version","manifest_generated_at","process","activities","dhis","dhis2","apiVersion","headers","schemas","getUserSettings","d2Init","initializedD2","ReactDOM","es","store","theme","createMuiTheme","dhis2theme","index_es","src_components_App","getElementById","init","param","isArray","Intl","DateTimeFormat","year","month","day","format","Date","replace","defaultValue","idx","indexOf","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__"],"mappings":"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","file":"static/js/main.dec6c6d9.chunk.js","sourcesContent":["import i18n from '@dhis2/d2-i18n';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\nimport ExtensionIcon from '@material-ui/icons/Extension';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport PersonIcon from '@material-ui/icons/Person';\nimport FontDownloadIcon from '@material-ui/icons/FontDownload';\nimport EmailIcon from '@material-ui/icons/Email';\nimport CropFreeIcon from '@material-ui/icons/CropFree';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nimport { getBaseUrl } from './util';\n\n// Item types\nexport const REPORT_TABLE = 'REPORT_TABLE';\nexport const CHART = 'CHART';\nexport const MAP = 'MAP';\nexport const EVENT_REPORT = 'EVENT_REPORT';\nexport const EVENT_CHART = 'EVENT_CHART';\nexport const APP = 'APP';\nexport const REPORTS = 'REPORTS';\nexport const RESOURCES = 'RESOURCES';\nexport const USERS = 'USERS';\nexport const MESSAGES = 'MESSAGES';\nexport const TEXT = 'TEXT';\nexport const SPACER = 'SPACER';\n\n// Domain types\nexport const DOMAIN_TYPE_AGGREGATE = 'AGGREGATE';\nexport const DOMAIN_TYPE_TRACKER = 'TRACKER';\n\n// Visualization types\nexport const VISUALIZATION_TYPE_TABLE = 'TABLE';\nexport const VISUALIZATION_TYPE_CHART = 'CHART';\nexport const VISUALIZATION_TYPE_MAP = 'MAP';\n\nexport const spacerContent = 'SPACER_ITEM_FOR_DASHBOARD_LAYOUT_CONVENIENCE';\nexport const emptyTextItemContent = 'TEXT_ITEM_WITH_NO_CONTENT';\nexport const isSpacerType = item =>\n    item.type === TEXT && item.text === spacerContent;\nexport const isTextType = item =>\n    item.type === TEXT && item.text !== spacerContent;\nexport const isPluginType = item =>\n    itemTypeMap[item.type].hasOwnProperty('plugin');\n\nexport const getPlugin = type => {\n    const pluginName = itemTypeMap[type].plugin;\n\n    if (type === CHART) {\n        return true;\n    }\n\n    return global[pluginName];\n};\n\n// Item type map\nexport const itemTypeMap = {\n    [REPORT_TABLE]: {\n        id: REPORT_TABLE,\n        endPointName: 'reportTables',\n        propName: 'reportTable',\n        countName: 'reportTableCount',\n        pluralTitle: i18n.t('Pivot tables'),\n        plugin: 'reportTablePlugin',\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        visualizationType: VISUALIZATION_TYPE_TABLE,\n        appUrl: id => `dhis-web-pivot/?id=${id}`,\n        appName: i18n.t('Pivot Tables'),\n    },\n    [CHART]: {\n        id: CHART,\n        endPointName: 'charts',\n        propName: 'chart',\n        countName: 'chartCount',\n        pluralTitle: i18n.t('Charts'),\n        plugin: 'chartPlugin',\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        visualizationType: VISUALIZATION_TYPE_CHART,\n        appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n        appName: i18n.t('Visualizer'),\n    },\n    [MAP]: {\n        id: MAP,\n        endPointName: 'maps',\n        propName: 'map',\n        countName: 'mapCount',\n        pluralTitle: i18n.t('Maps'),\n        plugin: 'mapPlugin',\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        visualizationType: VISUALIZATION_TYPE_MAP,\n        appUrl: id => `dhis-web-maps/?id=${id}`,\n        appName: i18n.t('Maps'),\n    },\n    [EVENT_REPORT]: {\n        id: EVENT_REPORT,\n        endPointName: 'eventReports',\n        propName: 'eventReport',\n        countName: 'eventReportCount',\n        pluralTitle: i18n.t('Event reports'),\n        plugin: 'eventReportPlugin',\n        domainType: DOMAIN_TYPE_TRACKER,\n        visualizationType: VISUALIZATION_TYPE_TABLE,\n        appUrl: id => `dhis-web-event-reports/?id=${id}`,\n        appName: i18n.t('Event Reports'),\n    },\n    [EVENT_CHART]: {\n        id: EVENT_CHART,\n        endPointName: 'eventCharts',\n        propName: 'eventChart',\n        countName: 'eventChartCount',\n        pluralTitle: i18n.t('Event charts'),\n        plugin: 'eventChartPlugin',\n        domainType: DOMAIN_TYPE_TRACKER,\n        visualizationType: VISUALIZATION_TYPE_CHART,\n        appUrl: id => `dhis-web-event-visualizer/?id=${id}`,\n        appName: i18n.t('Event Visualizer'),\n    },\n    [APP]: {\n        endPointName: 'apps',\n        propName: 'appKey',\n        countName: 'appCount',\n        pluralTitle: 'Apps',\n    },\n    [REPORTS]: {\n        id: REPORTS,\n        endPointName: 'reports',\n        propName: 'reports',\n        countName: 'reportCount',\n        pluralTitle: i18n.t('Reports'),\n        appUrl: id =>\n            `dhis-web-reporting/getReportParams.action?mode=report&uid=${id}`,\n    },\n    [RESOURCES]: {\n        id: RESOURCES,\n        endPointName: 'resources',\n        propName: 'resources',\n        countName: 'resourceCount',\n        pluralTitle: i18n.t('Resources'),\n        appUrl: id => `api/documents/${id}/data`,\n    },\n    [USERS]: {\n        id: USERS,\n        endPointName: 'users',\n        propName: 'users',\n        countName: 'userCount',\n        pluralTitle: i18n.t('Users'),\n        appUrl: id => `dhis-web-dashboard-integration/profile.action?id=${id}`,\n    },\n    [TEXT]: {\n        id: TEXT,\n        propName: 'text',\n    },\n    [MESSAGES]: {\n        propName: 'messages',\n    },\n    [SPACER]: {\n        propName: 'text',\n    },\n};\n\nexport const getItemUrl = (type, item, d2) => {\n    let url;\n\n    if (type === APP) {\n        url = item.launchUrl;\n    }\n\n    if (itemTypeMap[type] && itemTypeMap[type].appUrl) {\n        url = `${getBaseUrl(d2)}/${itemTypeMap[type].appUrl(item.id)}`;\n    }\n\n    return url;\n};\n\nexport const getItemIcon = type => {\n    switch (type) {\n        case REPORT_TABLE:\n        case EVENT_REPORT:\n        case REPORTS:\n            return TableIcon;\n        case CHART:\n        case EVENT_CHART:\n            return ChartIcon;\n        case MAP:\n            return MapIcon;\n        case APP:\n            return ExtensionIcon;\n        case RESOURCES:\n            return DescriptionIcon;\n        case USERS:\n            return PersonIcon;\n        case TEXT:\n            return FontDownloadIcon;\n        case MESSAGES:\n            return EmailIcon;\n        case SPACER:\n            return CropFreeIcon;\n        default:\n            return NotInterestedIcon;\n    }\n};\n","export const RECEIVED_USER = 'RECEIVED_USER';\n\nexport const DEFAULT_STATE_USER = {\n    id: '',\n    username: '',\n    uiLocale: '',\n    isSuperuser: false,\n};\n\nexport default (state = DEFAULT_STATE_USER, action) => {\n    switch (action.type) {\n        case RECEIVED_USER: {\n            return fromD2ToUserObj(action.value);\n        }\n        default:\n            return state;\n    }\n};\n\nfunction fromD2ToUserObj(d2Object) {\n    return {\n        id: d2Object.id,\n        username: d2Object.username,\n        uiLocale: d2Object.settings.keyUiLocale,\n        isSuperuser: d2Object.authorities.has('ALL'),\n    };\n}\n\n// selectors\n\nexport const sGetUserId = state => state.user.id;\nexport const sGetUserUsername = state => state.user.username;\nexport const sGetIsSuperuser = state => state.user.isSuperuser;\nexport const sGetUiLocale = state => state.user.uiLocale;\n","/** @module reducers/dashboards */\n\nimport arrayFrom from 'd2-utilizr/lib/arrayFrom';\nimport arraySort from 'd2-utilizr/lib/arraySort';\n\nimport { orArray, orObject } from '../modules/util';\nimport {\n    SPACER,\n    isSpacerType,\n    isTextType,\n    emptyTextItemContent,\n} from '../modules/itemTypes';\n\nexport const SET_DASHBOARDS = 'SET_DASHBOARDS';\nexport const ADD_DASHBOARDS = 'ADD_DASHBOARDS';\nexport const SET_DASHBOARD_STARRED = 'SET_DASHBOARD_STARRED';\nexport const SET_DASHBOARD_DISPLAY_NAME = 'SET_DASHBOARD_DISPLAY_NAME';\nexport const SET_DASHBOARD_ITEMS = 'SET_DASHBOARD_ITEMS';\n\nexport const DEFAULT_STATE_DASHBOARDS = {\n    byId: null,\n    items: [],\n};\n\n// reducer helper functions\n\nconst updateDashboardProp = (state, dashboardId, prop, value) => ({\n    byId: {\n        ...state.byId,\n        [dashboardId]: {\n            ...state.byId[dashboardId],\n            [prop]: value,\n        },\n    },\n    items: state.items,\n});\n\n/**\n * Reducer that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n * @returns {Object}\n */\nexport default (state = DEFAULT_STATE_DASHBOARDS, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS: {\n            return {\n                byId: action.value,\n                items: [],\n            };\n        }\n        case ADD_DASHBOARDS: {\n            return {\n                ...state,\n                byId: {\n                    ...state.byId,\n                    ...action.value,\n                },\n            };\n        }\n        case SET_DASHBOARD_STARRED: {\n            return updateDashboardProp(\n                state,\n                action.dashboardId,\n                'starred',\n                action.value\n            );\n        }\n        case SET_DASHBOARD_DISPLAY_NAME: {\n            return updateDashboardProp(\n                state,\n                action.dashboardId,\n                'displayName',\n                action.value\n            );\n        }\n        case SET_DASHBOARD_ITEMS: {\n            return {\n                ...state,\n                items: action.value,\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// root selector\n\nexport const sGetDashboardsRoot = state => state.dashboards;\n\n// selector level 1\n\n/**\n * Selector which returns a dashboard by id from the state object\n * If no matching dashboard is found it returns undefined\n * If dashboards.byId is null, then the dashboards api request\n * has not yet completed. If dashboards.byId is an empty object\n * then the dashboards api request is complete, but no dashboards\n * were returned\n *\n * @function\n * @param {Object} state The current state\n * @param {Number} id The id of the dashboard\n * @returns {Object | undefined}\n */\nexport const sGetDashboardById = (state, id) =>\n    orObject(sGetDashboardsRoot(state).byId)[id];\n\nexport const sDashboardsIsFetching = state => {\n    return sGetDashboardsRoot(state).byId === null;\n};\n\n/**\n * Selector which returns all dashboards (the byId object)\n *\n * @function\n * @param {Object} state The current state\n * @returns {Object | undefined}\n */\nexport const sGetAllDashboards = state =>\n    orObject(sGetDashboardsRoot(state).byId);\n\n/**\n * Selector which returns the current dashboard items\n *\n * @function\n * @param {Object} state The current state\n * @returns {Array}\n */\nexport const sGetDashboardItems = state => sGetDashboardsRoot(state).items;\n\n// selector level 2\n\nexport const sGetStarredDashboards = state =>\n    Object.values(sGetAllDashboards(state)).filter(\n        dashboard => dashboard.starred === true\n    );\n\nexport const sGetUnstarredDashboards = state =>\n    Object.values(sGetAllDashboards(state)).filter(\n        dashboard => dashboard.starred === false\n    );\n\n// selector level 3\n\nexport const sGetStarredDashboardIds = state => {\n    return sGetStarredDashboards(state).map(dashboard => dashboard.id);\n};\n\nexport const sGetUnstarredDashboardIds = state =>\n    sGetUnstarredDashboards(state).map(dashboard => dashboard.id);\n\nexport const sGetDashboardsSortedByStarred = state => [\n    ...arraySort(sGetStarredDashboards(state), 'ASC', 'displayName'),\n    ...arraySort(sGetUnstarredDashboards(state), 'ASC', 'displayName'),\n];\n\n// utils\n\n/**\n * Returns the array of dashboards, customized for ui\n * @function\n * @param {Array} data The original dashboard list\n * @returns {Array}\n */\nexport const getCustomDashboards = data => {\n    const uiItems = items =>\n        items.map(item => {\n            const type = isSpacerType(item) ? SPACER : item.type;\n            const text = isTextType(item)\n                ? item.text === emptyTextItemContent\n                    ? ''\n                    : item.text\n                : null;\n\n            return {\n                ...item,\n                ...(text !== null ? { text } : {}),\n                type,\n            };\n        });\n\n    return arrayFrom(data).map((d, index) => ({\n        id: d.id,\n        name: d.name,\n        displayName: d.displayName,\n        description: d.description,\n        displayDescription: d.displayDescription,\n        starred: d.favorite,\n        owner: d.user.name,\n        created: d.created\n            .split('T')\n            .join(' ')\n            .substr(0, 16),\n        lastUpdated: d.lastUpdated\n            .split('T')\n            .join(' ')\n            .substr(0, 16),\n        access: d.access,\n        numberOfItems: orArray(d.dashboardItems).length,\n        dashboardItems: uiItems(d.dashboardItems),\n    }));\n};\n","/** @module reducers/selected */\nimport { combineReducers } from 'redux';\n\nimport { validateReducer } from '../modules/util';\n\nexport const SET_SELECTED_ID = 'SET_SELECTED_ID';\nexport const SET_SELECTED_ISLOADING = 'SET_SELECTED_ISLOADING';\nexport const SET_SELECTED_SHOWDESCRIPTION = 'SET_SELECTED_SHOWDESCRIPTION';\n\nexport const DEFAULT_STATE_SELECTED_ID = null;\nexport const DEFAULT_STATE_SELECTED_ISLOADING = false;\nexport const DEFAULT_STATE_SELECTED_SHOWDESCRIPTION = false;\n\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\nconst id = (state = DEFAULT_STATE_SELECTED_ID, action) => {\n    switch (action.type) {\n        case SET_SELECTED_ID:\n            return validateReducer(action.value, DEFAULT_STATE_SELECTED_ID);\n        default:\n            return state;\n    }\n};\n\nconst isLoading = (state = DEFAULT_STATE_SELECTED_ISLOADING, action) => {\n    switch (action.type) {\n        case SET_SELECTED_ISLOADING:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_SELECTED_ISLOADING\n            );\n        default:\n            return state;\n    }\n};\n\nconst showDescription = (\n    state = DEFAULT_STATE_SELECTED_SHOWDESCRIPTION,\n    action\n) => {\n    switch (action.type) {\n        case SET_SELECTED_SHOWDESCRIPTION:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_SELECTED_SHOWDESCRIPTION\n            );\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    id,\n    isLoading,\n    showDescription,\n});\n\n// Selectors\n\nexport const sGetSelectedRoot = state => state.selected;\n\nexport const sGetSelectedId = state => sGetSelectedRoot(state).id;\n\nexport const sGetSelectedIsLoading = state => sGetSelectedRoot(state).isLoading;\n\nexport const sGetSelectedShowDescription = state =>\n    sGetSelectedRoot(state).showDescription;\n","import { orObject } from '../modules/util';\nimport objectClean from 'd2-utilizr/lib/objectClean';\n\n/** @module reducers/visualizations */\n\nexport const RECEIVED_VISUALIZATION = 'RECEIVED_VISUALIZATION';\nexport const RECEIVED_ACTIVE_VISUALIZATION = 'RECEIVED_ACTIVE_VISUALIZATION';\n\nexport const DEFAULT_STATE_VISUALIZATIONS = {};\n\nconst isEmpty = p => p === undefined || p === null;\n\nexport default (state = DEFAULT_STATE_VISUALIZATIONS, action) => {\n    switch (action.type) {\n        case RECEIVED_VISUALIZATION: {\n            return {\n                ...state,\n                [action.value.id]: objectClean(\n                    {\n                        ...orObject(state[action.value.id]),\n                        ...action.value,\n                    },\n                    isEmpty\n                ),\n            };\n        }\n        case RECEIVED_ACTIVE_VISUALIZATION: {\n            return {\n                ...state,\n                [action.id]: objectClean(\n                    {\n                        ...orObject(state[action.id]),\n                        activeType: action.activeType,\n                    },\n                    isEmpty\n                ),\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// root selector\nexport const sGetVisualizationsRoot = state => state.visualizations;\n\n// selectors level 1\nexport const sGetVisualization = (state, id) => {\n    return sGetVisualizationsRoot(state)[id];\n};\n","import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\n\nimport { getEndPointName } from './index';\n\n// Id, name\nexport const getIdNameFields = ({ rename } = {}) => [\n    'id',\n    `${rename ? 'displayName~rename(name)' : 'name,displayName'}`,\n];\n\n// Item\nexport const getItemFields = () => [\n    'dimensionItem~rename(id)',\n    'displayName~rename(name)',\n];\n\n// Dimension\nexport const getDimensionFields = ({ withItems }) =>\n    arrayClean([\n        'dimension',\n        'legendSet[id]',\n        withItems ? `items[${getItemFields().join(',')}]` : ``,\n    ]);\n\n// Axis\nexport const getAxesFields = ({ withItems }) => [\n    `columns[${getDimensionFields({ withItems }).join(',')}]`,\n    `rows[${getDimensionFields({ withItems }).join(',')}]`,\n    `filters[${getDimensionFields({ withItems }).join(',')}]`,\n];\n\n// Favorite\nexport const getFavoriteFields = ({ withDimensions, withOptions }) => {\n    return arrayClean([\n        `${getIdNameFields({ rename: true }).join(',')}`,\n        'displayDescription~rename(description)',\n        withDimensions ? `${getAxesFields({ withItems: true }).join(',')}` : ``,\n        withOptions\n            ? [\n                  '*',\n                  '!attributeDimensions',\n                  '!attributeValues',\n                  '!category',\n                  '!categoryDimensions',\n                  '!categoryOptionGroupSetDimensions',\n                  '!columnDimensions',\n                  '!dataDimensionItems',\n                  '!dataElementDimensions',\n                  '!dataElementGroupSetDimensions',\n                  '!filterDimensions',\n                  '!itemOrganisationUnitGroups',\n                  '!lastUpdatedBy',\n                  '!organisationUnitGroupSetDimensions',\n                  '!organisationUnitLevels',\n                  '!organisationUnits',\n                  '!programIndicatorDimensions',\n                  '!relativePeriods',\n                  '!reportParams',\n                  '!rowDimensions',\n                  '!series',\n                  '!translations',\n                  '!userOrganisationUnit',\n                  '!userOrganisationUnitChildren',\n                  '!userOrganisationUnitGrandChildren',\n              ].join(',')\n            : '',\n    ]);\n};\n\nexport const getFavoritesFields = ({ withDimensions, withOptions }) => [\n    `reportTable[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `chart[${['type', ...getFavoriteFields({ withDimensions })].join(',')}]`,\n    `map[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `eventReport[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `eventChart[${getFavoriteFields({ withDimensions }).join(',')}]`,\n];\n\n// List item\nexport const getListItemFields = () => [\n    `reports[${getIdNameFields({ rename: true }).join(',')}]`,\n    `resources[${getIdNameFields({ rename: true }).join(',')}]`,\n    `users[${getIdNameFields({ rename: true }).join(',')}]`,\n];\n\n// Map\nexport const getMapFields = () => [\n    `${getIdNameFields({ rename: true }).join(',')}`,\n    'user,longitude,latitude,zoom,basemap',\n    `mapViews[${getFavoriteFields({\n        withDimensions: true,\n        withOptions: true,\n    })}]`,\n];\n\n// Api\n\n// Get more info about the favorite of a dashboard item\nexport const apiFetchFavorite = (id, type, { fields }) =>\n    getInstance().then(d2 =>\n        d2.Api.getApi().get(`${getEndPointName(type)}/${id}`, {\n            fields:\n                fields ||\n                getFavoriteFields({\n                    withDimensions: true,\n                    withOptions: true,\n                }),\n        })\n    );\n","import arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { itemTypeMap } from '../modules/itemTypes';\nimport {\n    getListItemFields,\n    getFavoritesFields,\n    getIdNameFields,\n} from './metadata';\n\n// Helper functions\n\nexport const onError = error => console.log('Error: ', error);\n\nexport const getEndPointName = type => itemTypeMap[type].endPointName;\n\n// Dashboard item\nexport const getDashboardItemsFields = ({ withFavorite } = {}) =>\n    arrayClean([\n        'id',\n        'type',\n        'shape',\n        'x',\n        'y',\n        'width~rename(w)',\n        'height~rename(h)',\n        'messages',\n        'text',\n        'appKey',\n        `${getListItemFields().join(',')}`,\n        withFavorite\n            ? `${getFavoritesFields({\n                  withDimensions: withFavorite.withDimensions,\n              }).join(',')}`\n            : ``,\n    ]);\n\n// Dashboard\nexport const getDashboardFields = ({ withItems, withFavorite } = {}) =>\n    arrayClean([\n        `${getIdNameFields().join(',')}`,\n        'description',\n        'displayDescription',\n        'favorite',\n        `user[${getIdNameFields({ rename: true }).join(',')}]`,\n        'created',\n        'lastUpdated',\n        'access',\n        withItems\n            ? `dashboardItems[${getDashboardItemsFields({\n                  withFavorite,\n              }).join(',')}]`\n            : ``,\n    ]);\n","import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { onError, getDashboardFields } from './index';\n\n// Get \"all\" dashboards on startup\nexport const apiFetchDashboards = () =>\n    getInstance()\n        .then(d2 =>\n            d2.models.dashboard.list({\n                fields: [\n                    getDashboardFields().join(','),\n                    'dashboardItems[id]',\n                ].join(','),\n                paging: 'false',\n            })\n        )\n        .catch(onError);\n\n// Get more info about selected dashboard\nexport const apiFetchDashboard = id =>\n    getInstance()\n        .then(d2 =>\n            d2.models.dashboard.get(id, {\n                fields: arrayClean(\n                    getDashboardFields({\n                        withItems: true,\n                        withFavorite: { withDimensions: false },\n                    })\n                ).join(','),\n            })\n        )\n        .catch(onError);\n\n// Star dashboard\nexport const apiStarDashboard = (id, isStarred) => {\n    const url = `dashboards/${id}/favorite`;\n\n    getInstance().then(d2 => {\n        if (isStarred) {\n            d2.Api.getApi().post(url);\n        } else {\n            d2.Api.getApi().delete(url);\n        }\n    });\n};\n\nexport const apiDeleteDashboard = id => {\n    return getInstance()\n        .then(d2 => {\n            return d2.models.dashboards\n                .get(id)\n                .then(dashboard => dashboard.delete());\n        })\n        .catch(onError);\n};\n","import isFunction from 'd2-utilizr/lib/isFunction';\n\nimport { orObject } from '../../modules/util';\n\n// Dimensions for the react-grid-layout\n\nexport const GRID_COMPACT_TYPE = 'vertical'; // vertical | horizonal | null\nexport const GRID_ROW_HEIGHT = 10;\nconst GRID_COLUMN_WIDTH_PX = 20;\nconst GRID_LAYOUT = 'FLEXIBLE'; // FIXED | FLEXIBLE\nexport const MARGIN = [10, 10];\n\nexport const NEW_ITEM_SHAPE = { x: 0, y: 0, w: 20, h: 29 };\nexport const ITEM_MIN_HEIGHT = 4;\n\n// Dimensions for getShape\n\nconst NUMBER_OF_ITEM_COLS = 2;\nconst GRID_COLUMNS = 60;\n\nexport const getGridColumns = () => {\n    switch (GRID_LAYOUT) {\n        case 'FLEXIBLE':\n            return GRID_COLUMNS;\n        case 'FIXED':\n            return Math.floor((window.innerWidth - 20) / GRID_COLUMN_WIDTH_PX);\n        default:\n            return GRID_COLUMNS;\n    }\n};\n\n// isNonNegativeInteger\n\nconst isNonNegativeInteger = x => Number.isInteger(x) && x >= 0;\n\n// Does the item have all the shape properties?\n\nexport const hasShape = item =>\n    isNonNegativeInteger(item.x) &&\n    isNonNegativeInteger(item.y) &&\n    isNonNegativeInteger(item.w) &&\n    isNonNegativeInteger(item.h);\n\n// returns a rectangular grid block dimensioned with x, y, w, h in grid units.\n// based on a grid with 3 items across\nexport const getShape = i => {\n    if (!isNonNegativeInteger(i)) {\n        throw new Error('Invalid grid block number');\n    }\n\n    const col = i % NUMBER_OF_ITEM_COLS;\n    const row = Math.floor(i / NUMBER_OF_ITEM_COLS);\n    const itemWidth = Math.floor((GRID_COLUMNS - 1) / NUMBER_OF_ITEM_COLS);\n    const itemHeight = GRID_ROW_HEIGHT * 2;\n\n    return {\n        x: col * itemWidth,\n        y: row * itemHeight,\n        w: itemWidth,\n        h: itemHeight,\n    };\n};\n\n/**\n * Calculates the grid item's original height in pixels based\n * on the height in grid units. This calculation\n * is copied directly from react-grid-layout GridItem.js (calcPosition)\n *\n * @param {Object} item item containing shape (x, y, w, h)\n */\nconst getOriginalHeight = item => {\n    const originalHeight = Math.round(\n        GRID_ROW_HEIGHT * item.h + Math.max(0, item.h - 1) * MARGIN[1]\n    );\n\n    return { originalHeight };\n};\n\n/**\n * Returns an array of items containing the x, y, w, h dimensions\n * and the item's originalheight in pixels\n * @function\n * @param {Array} items\n * @returns {Array}\n */\n\nexport const withShape = items =>\n    items.map((item, index) => {\n        const itemWithShape = hasShape(item)\n            ? item\n            : Object.assign({}, item, getShape(index));\n\n        return Object.assign(\n            {},\n            itemWithShape,\n            getOriginalHeight(itemWithShape)\n        );\n    });\n\nexport const getGridItemDomId = id => `item-${id}`;\n\nexport function onItemResize(id) {\n    const el = orObject(document.querySelector(`#${getGridItemDomId(id)}`));\n    if (isFunction(el.setViewportSize))\n        setTimeout(\n            () => el.setViewportSize(el.clientWidth - 5, el.clientHeight - 5),\n            10\n        );\n}\n","import update from 'immutability-helper';\nimport { arrayToIdMap } from '../modules/util';\n\nexport const RECEIVED_MESSAGES = 'RECEIVED_MESSAGES';\n\nexport default (state = {}, action) => {\n    switch (action.type) {\n        case RECEIVED_MESSAGES: {\n            const conversations = arrayToIdMap(action.value);\n\n            const newState = update(state, { $merge: conversations });\n\n            return newState;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetMessagesRoot = state => state.messages;\n","import { getInstance } from 'd2';\n\nexport const getMessages = () => {\n    const fields =\n        'id,messageCount,lastUpdated,messageType,displayName,read,messages[id,read,sender[id,displayName],text,lastUpdated]';\n    const url = `/messageConversations?fields=${fields}&order=read:asc&pageSize=200`;\n    return getInstance()\n        .then(d2 => d2.Api.getApi().get(url))\n        .catch(error => console.log('Error:', error));\n};\n","export const RECEIVED_SNACKBAR_MESSAGE = 'RECEIVED_SNACKBAR_MESSAGE';\nexport const CLOSE_SNACKBAR = 'CLOSE_SNACKBAR';\n\nexport const DEFAULT_STATE_SNACKBAR = {\n    message: {},\n    duration: null,\n    open: false,\n};\n\nexport default (state = DEFAULT_STATE_SNACKBAR, action) => {\n    switch (action.type) {\n        case RECEIVED_SNACKBAR_MESSAGE: {\n            return { ...state, ...action.value };\n        }\n        case CLOSE_SNACKBAR: {\n            return DEFAULT_STATE_SNACKBAR;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetSnackbar = state => state.snackbar || DEFAULT_STATE_SNACKBAR;\n","import {\n    RECEIVED_SNACKBAR_MESSAGE,\n    CLOSE_SNACKBAR,\n} from '../reducers/snackbar';\n\nexport const acReceivedSnackbarMessage = value => ({\n    type: RECEIVED_SNACKBAR_MESSAGE,\n    value,\n});\n\nexport const acCloseSnackbar = () => ({\n    type: CLOSE_SNACKBAR,\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Snackbar from 'material-ui/Snackbar';\n\nimport { sGetSnackbar } from '../../reducers/snackbar';\nimport { acCloseSnackbar } from '../../actions/snackbar';\n\nconst LOADING_DASHBOARD = 'LOADING_DASHBOARD';\nexport const loadingDashboardMsg = { name: '', type: LOADING_DASHBOARD };\n\nconst SnackbarMessageContent = ({ message }) => {\n    if (typeof message === 'object') {\n        //future message types:  switch(message.type)\n        return (\n            <span>\n                Loading <span style={{ fontWeight: 800 }}>{message.name}</span>{' '}\n                dashboard\n            </span>\n        );\n    }\n    return message;\n};\n\nexport const SnackbarMessage = props => {\n    return (\n        <Snackbar\n            open={props.snackbarOpen}\n            message={<SnackbarMessageContent message={props.snackbarMessage} />}\n            autoHideDuration={props.snackbarDuration}\n            onRequestClose={props.onCloseSnackbar}\n        />\n    );\n};\n\nconst mapStateToProps = state => {\n    const { message, duration, open } = sGetSnackbar(state);\n    return {\n        snackbarOpen: open,\n        snackbarMessage: message,\n        snackbarDuration: duration,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        onCloseSnackbar: acCloseSnackbar,\n    }\n)(SnackbarMessage);\n","import isObject from 'lodash/isObject';\nimport { apiFetchFavorite, getMapFields } from '../../../api/metadata';\nimport {\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_REPORT,\n    EVENT_CHART,\n    itemTypeMap,\n    getPlugin,\n} from '../../../modules/itemTypes';\nimport { getBaseUrl, getWithoutId } from '../../../modules/util';\nimport { getGridItemDomId } from '../../ItemGrid/gridUtil';\n\nexport const THEMATIC_LAYER = 'thematic';\n\nexport const pluginIsAvailable = (item = {}, visualization = {}) => {\n    const type = visualization.activeType || item.type;\n\n    return !!getPlugin(type);\n};\n\nexport const extractFavorite = item => {\n    if (!isObject(item)) {\n        return null;\n    }\n\n    switch (item.type) {\n        case REPORT_TABLE:\n            return item.reportTable;\n        case CHART:\n            return item.chart;\n        case MAP:\n            return item.map;\n        case EVENT_REPORT:\n            return item.eventReport;\n        case EVENT_CHART:\n            return item.eventChart;\n        default:\n            return (\n                item.reportTable ||\n                item.chart ||\n                item.map ||\n                item.eventReport ||\n                item.eventChart ||\n                {}\n            );\n    }\n};\n\nexport const extractMapView = map =>\n    map.mapViews && map.mapViews.find(mv => mv.layer.includes(THEMATIC_LAYER));\n\nexport const loadPlugin = (plugin, config, credentials) => {\n    if (!(plugin && plugin.load)) {\n        return;\n    }\n\n    plugin.url = credentials.baseUrl;\n    plugin.loadingIndicator = true;\n    plugin.dashboard = true;\n    if (credentials.auth) {\n        plugin.auth = credentials.auth;\n    }\n    plugin.load(config);\n};\n\nexport const getId = item => extractFavorite(item).id;\nexport const getName = item => extractFavorite(item).name;\nexport const getDescription = item => extractFavorite(item).description;\nexport const getLink = (item, d2) => {\n    const baseUrl = getBaseUrl(d2);\n    const appUrl = itemTypeMap[item.type].appUrl(getId(item));\n\n    return `${baseUrl}/${appUrl}`;\n};\n\nexport const load = async (\n    item,\n    visualization,\n    credentials,\n    activeType,\n    filter = {}\n) => {\n    const config = {\n        ...visualization,\n        el: getGridItemDomId(item.id),\n    };\n\n    const type = activeType || item.type;\n    const plugin = getPlugin(type);\n\n    loadPlugin(plugin, config, credentials);\n};\n\nexport const fetch = async item => {\n    const fetchedFavorite = await apiFetchFavorite(getId(item), item.type, {\n        fields: item.type === MAP ? getMapFields() : null,\n    });\n\n    return fetchedFavorite;\n};\n\nexport const resize = item => {\n    const plugin = getPlugin(item.type);\n\n    if (plugin && plugin.resize) {\n        plugin.resize(getGridItemDomId(item.id));\n    }\n};\n\nexport const unmount = (item, activeType) => {\n    const plugin = getPlugin(activeType);\n\n    if (plugin && plugin.unmount) {\n        plugin.unmount(getGridItemDomId(item.id));\n    }\n};\n\nexport const getVisualizationConfig = (\n    visualization,\n    originalType,\n    activeType\n) => {\n    if (originalType === MAP && originalType !== activeType) {\n        const extractedMapView = extractMapView(visualization);\n\n        if (extractedMapView === undefined) {\n            return null;\n        }\n\n        return getWithoutId({\n            ...visualization,\n            ...extractedMapView,\n            mapViews: undefined,\n        });\n    }\n\n    return getWithoutId(visualization);\n};\n","import {\n    SET_SELECTED_ID,\n    SET_SELECTED_ISLOADING,\n    SET_SELECTED_SHOWDESCRIPTION,\n} from '../reducers/selected';\nimport {\n    RECEIVED_VISUALIZATION,\n    RECEIVED_ACTIVE_VISUALIZATION,\n} from '../reducers/visualizations';\nimport { sGetSelectedIsLoading } from '../reducers/selected';\nimport { sGetUserUsername } from '../reducers/user';\nimport { getCustomDashboards, sGetDashboardById } from '../reducers/dashboards';\nimport { apiFetchDashboard } from '../api/dashboards';\nimport { acSetDashboardItems, acAppendDashboards } from './dashboards';\nimport { withShape } from '../components/ItemGrid/gridUtil';\nimport { tGetMessages } from '../components/Item/MessagesItem/actions';\nimport { acReceivedSnackbarMessage, acCloseSnackbar } from './snackbar';\nimport { storePreferredDashboardId } from '../api/localStorage';\nimport { loadingDashboardMsg } from '../components/SnackbarMessage/SnackbarMessage';\nimport {\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_REPORT,\n    EVENT_CHART,\n    MESSAGES,\n} from '../modules/itemTypes';\nimport { extractFavorite } from '../components/Item/VisualizationItem/plugin';\nimport { orObject } from '../modules/util';\n\n// actions\n\nexport const acSetSelectedId = value => ({\n    type: SET_SELECTED_ID,\n    value,\n});\n\nexport const acSetSelectedIsLoading = value => ({\n    type: SET_SELECTED_ISLOADING,\n    value,\n});\n\nexport const acSetSelectedShowDescription = value => ({\n    type: SET_SELECTED_SHOWDESCRIPTION,\n    value,\n});\n\nexport const acReceivedVisualization = value => ({\n    type: RECEIVED_VISUALIZATION,\n    value,\n});\n\nexport const acReceivedActiveVisualization = (id, type, activeType) => {\n    const action = {\n        type: RECEIVED_ACTIVE_VISUALIZATION,\n        id,\n    };\n\n    if (activeType !== type) {\n        action.activeType = activeType;\n    }\n\n    return action;\n};\n\nexport const tLoadDashboard = id => async (dispatch, getState) => {\n    try {\n        const dash = await apiFetchDashboard(id);\n        dispatch(acAppendDashboards(dash));\n\n        return Promise.resolve(dash);\n    } catch (err) {\n        console.log('Error: ', err);\n        return err;\n    }\n};\n\n// thunks\nexport const tSetSelectedDashboardById = id => async (dispatch, getState) => {\n    dispatch(acSetSelectedIsLoading(true));\n\n    const snackbarTimeout = setTimeout(() => {\n        const dashboardName = orObject(sGetDashboardById(getState(), id))\n            .displayName;\n        if (sGetSelectedIsLoading(getState()) && dashboardName) {\n            loadingDashboardMsg.name = dashboardName;\n\n            dispatch(\n                acReceivedSnackbarMessage({\n                    message: loadingDashboardMsg,\n                    open: true,\n                })\n            );\n        }\n    }, 500);\n\n    const onSuccess = selected => {\n        const customDashboard = getCustomDashboards(selected)[0];\n\n        dispatch(\n            acSetDashboardItems(withShape(customDashboard.dashboardItems))\n        );\n\n        storePreferredDashboardId(sGetUserUsername(getState()), id);\n\n        // add visualizations to store\n        customDashboard.dashboardItems.forEach(item => {\n            switch (item.type) {\n                case REPORT_TABLE:\n                case CHART:\n                case MAP:\n                case EVENT_REPORT:\n                case EVENT_CHART:\n                    dispatch(acReceivedVisualization(extractFavorite(item)));\n                    break;\n                case MESSAGES:\n                    dispatch(tGetMessages(id));\n                    break;\n                default:\n                    break;\n            }\n        });\n\n        dispatch(acSetSelectedId(id));\n\n        dispatch(acSetSelectedIsLoading(false));\n\n        clearTimeout(snackbarTimeout);\n\n        dispatch(acCloseSnackbar());\n\n        return selected;\n    };\n\n    const onError = error => {\n        console.log('Error: ', error);\n        return error;\n    };\n\n    try {\n        const selected = await dispatch(tLoadDashboard(id));\n\n        return onSuccess(selected);\n    } catch (err) {\n        return onError(err);\n    }\n};\n","export const getPreferredDashboardId = username =>\n    localStorage.getItem(`dhis2.dashboard.current.${username}`) || undefined;\n\nexport const storePreferredDashboardId = (username, dashboardId) => {\n    localStorage.setItem(`dhis2.dashboard.current.${username}`, dashboardId);\n};\n","import { RECEIVED_MESSAGES } from '../../../reducers/messages';\nimport { getMessages } from '../../../api/messages';\n\nconst onError = (action, error) => {\n    console.log(`Error in action ${action}: ${error}`);\n    return error;\n};\n\nexport const receivedMessages = value => ({\n    type: RECEIVED_MESSAGES,\n    value,\n});\n\nexport const tGetMessages = dashboardItemId => async dispatch => {\n    try {\n        const messages = await getMessages();\n        const { messageConversations } = messages;\n\n        return dispatch(receivedMessages(messageConversations));\n    } catch (err) {\n        return onError('Get Messages', err);\n    }\n};\n","/** @module reducers/editDashboard */\nimport update from 'immutability-helper';\nimport isEmpty from 'lodash/isEmpty';\nimport { orArray, orObject } from '../modules/util';\n\nexport const RECEIVED_EDIT_DASHBOARD = 'RECEIVED_EDIT_DASHBOARD';\nexport const RECEIVED_NOT_EDITING = 'RECEIVED_NOT_EDITING';\nexport const START_NEW_DASHBOARD = 'START_NEW_DASHBOARD';\nexport const RECEIVED_TITLE = 'RECEIVED_TITLE';\nexport const RECEIVED_DESCRIPTION = 'RECEIVED_DESCRIPTION';\nexport const ADD_DASHBOARD_ITEM = 'ADD_DASHBOARD_ITEM';\nexport const REMOVE_DASHBOARD_ITEM = 'REMOVE_DASHBOARD_ITEM';\nexport const UPDATE_DASHBOARD_ITEM = 'UPDATE_DASHBOARD_ITEM';\nexport const RECEIVED_DASHBOARD_LAYOUT = 'RECEIVED_DASHBOARD_LAYOUT';\n\nexport const DEFAULT_STATE_EDIT_DASHBOARD = {};\nexport const NEW_DASHBOARD_STATE = {\n    id: '',\n    name: '',\n    access: {},\n    description: '',\n    dashboardItems: [],\n};\n\nexport default (state = DEFAULT_STATE_EDIT_DASHBOARD, action) => {\n    switch (action.type) {\n        case RECEIVED_EDIT_DASHBOARD:\n            const newState = {};\n            Object.keys(NEW_DASHBOARD_STATE).map(\n                k => (newState[k] = action.value[k])\n            );\n            return newState;\n        case RECEIVED_NOT_EDITING:\n            return DEFAULT_STATE_EDIT_DASHBOARD;\n        case START_NEW_DASHBOARD:\n            return NEW_DASHBOARD_STATE;\n        case RECEIVED_TITLE: {\n            return Object.assign({}, state, { name: action.value });\n        }\n        case RECEIVED_DESCRIPTION: {\n            return Object.assign({}, state, {\n                description: action.value,\n            });\n        }\n        case ADD_DASHBOARD_ITEM:\n            return update(state, {\n                dashboardItems: { $unshift: [action.value] },\n            });\n        case REMOVE_DASHBOARD_ITEM: {\n            const idToRemove = action.value;\n\n            const dashboardItemIndex = state.dashboardItems.findIndex(\n                item => item.id === idToRemove\n            );\n\n            if (dashboardItemIndex > -1) {\n                return update(state, {\n                    dashboardItems: {\n                        $splice: [[dashboardItemIndex, 1]],\n                    },\n                });\n            }\n\n            return state;\n        }\n        case RECEIVED_DASHBOARD_LAYOUT: {\n            const stateItems = orArray(state.dashboardItems);\n\n            const newStateItems = action.value.map(({ x, y, w, h, i }) => {\n                const stateItem = stateItems.find(si => si.id === i);\n\n                return Object.assign({}, stateItem, { w, h, x, y });\n            });\n\n            return update(state, {\n                dashboardItems: { $set: newStateItems },\n            });\n        }\n        case UPDATE_DASHBOARD_ITEM: {\n            const dashboardItem = action.value;\n\n            const dashboardItemIndex = state.dashboardItems.findIndex(\n                item => item.id === dashboardItem.id\n            );\n\n            if (dashboardItemIndex > -1) {\n                const newState = update(state, {\n                    dashboardItems: {\n                        $splice: [[dashboardItemIndex, 1, dashboardItem]],\n                    },\n                });\n\n                return newState;\n            }\n\n            return state;\n        }\n        default:\n            return state;\n    }\n};\n\n// root selector\n\nexport const sGetEditDashboardRoot = state => state.editDashboard;\n\n// selectors\n\nexport const sGetIsEditing = state => !isEmpty(state.editDashboard);\n\nexport const sGetIsNewDashboard = state => {\n    return (\n        !isEmpty(state.editDashboard) && sGetEditDashboardRoot(state).id === ''\n    );\n};\n\nexport const sGetEditDashboardItems = state =>\n    orObject(sGetEditDashboardRoot(state)).dashboardItems;\n","import { getInstance } from 'd2';\n\nconst onError = error => console.log('Error: ', error);\n\nconst saveDashboard = (dashboard, data) => {\n    const { name, description, dashboardItems } = data;\n\n    dashboard.name = name;\n    dashboard.description = description;\n    dashboard.dashboardItems = dashboardItems.map(item =>\n        Object.assign({}, item, { width: item.w, height: item.h })\n    );\n\n    return dashboard.save().then(msg => msg.response.uid);\n};\n\nexport const updateDashboard = data => {\n    return getInstance()\n        .then(d2 => {\n            return d2.models.dashboards\n                .get(data.id)\n                .then(dashboard => saveDashboard(dashboard, data));\n        })\n        .catch(onError);\n};\n\nexport const postDashboard = data => {\n    return getInstance().then(d2 => {\n        const dashboard = d2.models.dashboards.create();\n\n        return saveDashboard(dashboard, data);\n    });\n};\n","import { generateUid } from 'd2/uid';\n\nimport {\n    RECEIVED_EDIT_DASHBOARD,\n    START_NEW_DASHBOARD,\n    RECEIVED_NOT_EDITING,\n    RECEIVED_TITLE,\n    RECEIVED_DESCRIPTION,\n    RECEIVED_DASHBOARD_LAYOUT,\n    ADD_DASHBOARD_ITEM,\n    UPDATE_DASHBOARD_ITEM,\n    REMOVE_DASHBOARD_ITEM,\n} from '../reducers/editDashboard';\nimport { sGetEditDashboardRoot } from '../reducers/editDashboard';\nimport { updateDashboard, postDashboard } from '../api/editDashboard';\nimport { tSetSelectedDashboardById } from '../actions/selected';\nimport { NEW_ITEM_SHAPE } from '../components/ItemGrid/gridUtil';\nimport {\n    itemTypeMap,\n    isSpacerType,\n    TEXT,\n    emptyTextItemContent,\n    isTextType,\n} from '../modules/itemTypes';\n\nconst onError = error => {\n    console.log('Error (Saving Dashboard): ', error);\n    return error;\n};\n\n// actions\n\nexport const acSetEditDashboard = (dashboard, items) => {\n    const val = {\n        ...dashboard,\n        dashboardItems: items,\n    };\n\n    return {\n        type: RECEIVED_EDIT_DASHBOARD,\n        value: val,\n    };\n};\n\nexport const acSetEditNewDashboard = () => ({\n    type: START_NEW_DASHBOARD,\n});\n\nexport const acClearEditDashboard = () => ({\n    type: RECEIVED_NOT_EDITING,\n});\n\nexport const acSetDashboardTitle = value => ({\n    type: RECEIVED_TITLE,\n    value,\n});\n\nexport const acSetDashboardDescription = value => ({\n    type: RECEIVED_DESCRIPTION,\n    value,\n});\n\nexport const acUpdateDashboardLayout = value => ({\n    type: RECEIVED_DASHBOARD_LAYOUT,\n    value,\n});\n\nexport const acAddDashboardItem = item => {\n    const type = item.type;\n    delete item.type;\n    const itemPropName = itemTypeMap[type].propName;\n\n    return {\n        type: ADD_DASHBOARD_ITEM,\n        value: {\n            id: generateUid(),\n            type,\n            [itemPropName]: item.content,\n            ...NEW_ITEM_SHAPE,\n        },\n    };\n};\n\nexport const acUpdateDashboardItem = item => ({\n    type: UPDATE_DASHBOARD_ITEM,\n    value: item,\n});\n\nexport const acRemoveDashboardItem = value => ({\n    type: REMOVE_DASHBOARD_ITEM,\n    value,\n});\n\n// thunks\n\nexport const tSaveDashboard = () => async (dispatch, getState) => {\n    const dashboard = sGetEditDashboardRoot(getState());\n\n    const dashboardItems = dashboard.dashboardItems.map(item => {\n        const text = isTextType(item)\n            ? item.text || emptyTextItemContent\n            : null;\n\n        const type = isSpacerType(item) ? TEXT : item.type;\n\n        return {\n            ...item,\n            ...(text ? { text } : {}),\n            type,\n        };\n    });\n\n    const dashboardToSave = {\n        ...dashboard,\n        dashboardItems,\n    };\n\n    try {\n        const dashboardId = dashboardToSave.id\n            ? await updateDashboard(dashboardToSave)\n            : await postDashboard(dashboardToSave);\n\n        dispatch(acClearEditDashboard());\n        await dispatch(tSetSelectedDashboardById(dashboardId));\n\n        return Promise.resolve(dashboardId);\n    } catch (error) {\n        onError(error);\n    }\n};\n","import {\n    SET_DASHBOARDS,\n    ADD_DASHBOARDS,\n    SET_DASHBOARD_STARRED,\n    SET_DASHBOARD_DISPLAY_NAME,\n    SET_DASHBOARD_ITEMS,\n} from '../reducers/dashboards';\nimport {\n    getCustomDashboards,\n    sGetDashboardById,\n    sGetDashboardsSortedByStarred,\n} from '../reducers/dashboards';\nimport { sGetUserUsername } from '../reducers/user';\nimport { tSetSelectedDashboardById, acSetSelectedId } from './selected';\nimport { acClearEditDashboard } from './editDashboard';\nimport {\n    apiFetchDashboards,\n    apiStarDashboard,\n    apiDeleteDashboard,\n} from '../api/dashboards';\nimport { getPreferredDashboardId } from '../api/localStorage';\nimport { arrayToIdMap } from '../modules/util';\n\n// actions\n\nexport const acSetDashboards = dashboards => ({\n    type: SET_DASHBOARDS,\n    value: arrayToIdMap(getCustomDashboards(dashboards)),\n});\n\nexport const acAppendDashboards = dashboards => ({\n    type: ADD_DASHBOARDS,\n    value: arrayToIdMap(getCustomDashboards(dashboards)),\n});\n\nexport const acSetDashboardStarred = (dashboardId, isStarred) => ({\n    type: SET_DASHBOARD_STARRED,\n    dashboardId: dashboardId,\n    value: isStarred,\n});\n\nexport const acSetDashboardDisplayName = (dashboardId, value) => ({\n    type: SET_DASHBOARD_DISPLAY_NAME,\n    dashboardId,\n    value,\n});\n\nexport const acSetDashboardItems = value => ({\n    type: SET_DASHBOARD_ITEMS,\n    value,\n});\n\n// thunks\n\nexport const tFetchDashboards = () => async dispatch => {\n    const collection = await apiFetchDashboards();\n    dispatch(acSetDashboards(collection.toArray()));\n};\n\nexport const tSelectDashboard = id => async (dispatch, getState) => {\n    const onError = error => {\n        console.log('Error (apiFetchDashboards): ', error);\n        return error;\n    };\n\n    try {\n        const state = getState();\n\n        let dashboardToSelect = null;\n        if (id) {\n            dashboardToSelect = sGetDashboardById(state, id) || null;\n        } else {\n            const preferredId = getPreferredDashboardId(\n                sGetUserUsername(state)\n            );\n            const dash = sGetDashboardById(state, preferredId);\n            dashboardToSelect =\n                preferredId && dash\n                    ? dash\n                    : sGetDashboardsSortedByStarred(state)[0];\n        }\n\n        if (dashboardToSelect) {\n            dispatch(tSetSelectedDashboardById(dashboardToSelect.id));\n        } else {\n            dispatch(acSetSelectedId(false));\n        }\n    } catch (err) {\n        return onError(err);\n    }\n};\n\nexport const tStarDashboard = (id, isStarred) => async (dispatch, getState) => {\n    const onSuccess = id => {\n        dispatch(acSetDashboardStarred(id, isStarred));\n        return id;\n    };\n\n    const onError = error => {\n        console.log('Error (apiStarDashboard): ', error);\n        return error;\n    };\n    try {\n        await apiStarDashboard(id, isStarred);\n        return onSuccess(id);\n    } catch (err) {\n        return onError(err);\n    }\n};\n\nexport const tDeleteDashboard = id => async (dispatch, getState) => {\n    try {\n        await apiDeleteDashboard(id);\n        dispatch(acClearEditDashboard());\n        dispatch(acSetSelectedId());\n        dispatch(acSetDashboardItems([]));\n\n        await dispatch(tFetchDashboards());\n\n        return Promise.resolve();\n    } catch (err) {\n        console.log('Error (deleteDashboard): ', err);\n        return err;\n    }\n};\n","/** @module reducers/controlBar */\nimport { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\n\nexport const SET_CONTROLBAR_USER_ROWS = 'SET_CONTROLBAR_USER_ROWS';\n\nexport const DEFAULT_STATE_CONTROLBAR_ROWS = 1;\n\nconst userRows = (state = DEFAULT_STATE_CONTROLBAR_ROWS, action) => {\n    switch (action.type) {\n        case SET_CONTROLBAR_USER_ROWS:\n            return validateReducer(action.value, DEFAULT_STATE_CONTROLBAR_ROWS);\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    userRows,\n});\n\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\nexport const sGetControlBarRoot = state => state.controlBar;\n\n// Selector dependency level 2\n\nexport const sGetControlBarUserRows = state =>\n    sGetControlBarRoot(state).userRows;\n","import { getInstance } from 'd2';\nimport { DEFAULT_STATE_CONTROLBAR_ROWS } from '../reducers/controlBar';\n\nconst NAMESPACE = 'dashboard';\nconst KEY = 'controlBarRows';\n\nconst hasNamespace = async d2 => await d2.currentUser.dataStore.has(NAMESPACE);\n\nconst getNamespace = async (d2, hasNamespace) =>\n    hasNamespace\n        ? await d2.currentUser.dataStore.get(NAMESPACE)\n        : await d2.currentUser.dataStore.create(NAMESPACE);\n\nexport const apiGetControlBarRows = async () => {\n    const d2 = await getInstance();\n    const namespace = await getNamespace(d2, await hasNamespace(d2));\n    const hasKey = namespace.keys && namespace.keys.find(key => key === KEY);\n\n    if (hasKey) {\n        return await namespace.get(KEY);\n    } else {\n        await apiPostControlBarRows(DEFAULT_STATE_CONTROLBAR_ROWS, namespace);\n        console.log(\n            '(These errors to /userDataStore/dashboard can be ignored)'\n        );\n        return DEFAULT_STATE_CONTROLBAR_ROWS;\n    }\n};\n\nexport const apiPostControlBarRows = async (rows, namespace) => {\n    const d2 = await getInstance();\n    const ns = namespace || (await getNamespace(d2, hasNamespace));\n\n    ns.set(KEY, rows);\n};\n","import { SET_CONTROLBAR_USER_ROWS } from '../reducers/controlBar';\nimport { apiGetControlBarRows } from '../api/controlBar';\n\n// actions\n\nexport const acSetControlBarUserRows = rows => ({\n    type: SET_CONTROLBAR_USER_ROWS,\n    value: rows,\n});\n\n// thunks\n\nexport const tSetControlBarRows = () => async (dispatch, getState) => {\n    const onSuccess = rows => {\n        dispatch(acSetControlBarUserRows(rows));\n    };\n\n    const onError = error => {\n        console.log('Error (apiGetControlBarRows): ', error);\n        return error;\n    };\n\n    try {\n        const controlBarRows = await apiGetControlBarRows();\n        return onSuccess(controlBarRows);\n    } catch (err) {\n        return onError(err);\n    }\n};\n","import { FIXED_DIMENSIONS } from '@dhis2/d2-ui-analytics';\n\nexport const SET_DIMENSIONS = 'SET_DIMENSIONS';\nexport const DEFAULT_DIMENSIONS = {\n    pe: FIXED_DIMENSIONS.pe,\n    ou: FIXED_DIMENSIONS.ou,\n};\n\nexport default (state = DEFAULT_DIMENSIONS, action) => {\n    switch (action.type) {\n        case SET_DIMENSIONS: {\n            return {\n                ...DEFAULT_DIMENSIONS,\n                ...action.value,\n            };\n        }\n        default:\n            return state;\n    }\n};\n\nexport const sGetDimensions = state => state.dimensions;\n","export const SET_SETTINGS = 'SET_SETTINGS';\nexport const ADD_SETTINGS = 'ADD_SETTINGS';\n\nexport const DEFAULT_SETTINGS = {\n    keyDateFormat: 'yyyy-MM-dd',\n    keyAnalysisRelativePeriod: 'LAST_12_MONTHS',\n    keyAnalysisDigitGroupSeparator: 'SPACE',\n    displayNameProperty: 'displayName',\n    uiLocale: 'en',\n    rootOrganisationUnit: {},\n};\n\nexport default (state = DEFAULT_SETTINGS, action) => {\n    switch (action.type) {\n        case SET_SETTINGS: {\n            return Object.assign({}, action.value);\n        }\n        case ADD_SETTINGS: {\n            return {\n                ...state,\n                ...action.value,\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// Selectors\n\nexport const sGetSettings = state => state.settings;\n\nexport const sGetSettingsDisplayNameProperty = state =>\n    sGetSettings(state).displayNameProperty;\n\nexport const sGetRootOrgUnit = state =>\n    sGetSettings(state).rootOrganisationUnit;\n\nexport const sGetRelativePeriod = state =>\n    sGetSettings(state).keyAnalysisRelativePeriod;\n\nexport const sGetUiLocale = state => sGetSettings(state).uiLocale;\n","import keyBy from 'lodash/keyBy';\nimport sortBy from 'lodash/sortBy';\nimport { SET_DIMENSIONS } from '../reducers/dimensions';\nimport { apiFetchDimensions } from '@dhis2/d2-ui-analytics';\nimport { sGetSettingsDisplayNameProperty } from '../reducers/settings';\n\nexport const acSetDimensions = dimensions => ({\n    type: SET_DIMENSIONS,\n    value: keyBy(sortBy(dimensions, [d => d.name.toLowerCase()]), 'id'),\n});\n\nexport const tSetDimensions = d2 => async (dispatch, getState) => {\n    const onSuccess = dimensions => {\n        dispatch(acSetDimensions(dimensions));\n    };\n\n    const onError = error => {\n        console.log('Error (apiFetchDimensions): ', error);\n        return error;\n    };\n\n    try {\n        const displayNameProp = sGetSettingsDisplayNameProperty(getState());\n        const dimensions = await apiFetchDimensions(d2, displayNameProp);\n        return onSuccess(dimensions);\n    } catch (err) {\n        return onError(err);\n    }\n};\n","const lightGrey = '#ECEFF1';\nconst lightMediumGrey = '#9E9E9E';\nconst mediumGrey = '#393939';\nconst charcoalGrey = '#8C8C8C';\nconst darkGrey = '#494949';\nconst muiDefaultGrey = '#757575';\n\nconst red = '#E53935';\n\nconst paleBlue = '#E3F2FD';\nconst lightBlue = '#EAF4FF'; //'#63A4FF'\nconst royalBlue = '#004BA0';\n\nconst mint = '#B2DFDB';\nconst lightGreen = '#48A999';\nconst mediumGreen = '#00796B';\nconst darkGreen = '#004C40';\n\nconst paleYellow = '#FFF8E1';\n\nconst white = '#FFFFFF';\nconst black = 'rgba(0,0,0,0.87)';\n\nexport const colors = {\n    lightGrey,\n    lightMediumGrey,\n    mediumGrey,\n    charcoalGrey,\n    darkGrey,\n    muiDefaultGrey,\n    red,\n    paleBlue,\n    lightBlue,\n    royalBlue,\n    mint,\n    lightGreen,\n    mediumGreen,\n    darkGreen,\n    paleYellow,\n    white,\n    black,\n};\n","import { getInstance } from 'd2';\n\nexport const apiPostDataStatistics = async (eventType, id) => {\n    const d2 = await getInstance();\n    const url = `dataStatistics?eventType=${eventType}&favorite=${id}`;\n\n    d2.Api.getApi().post(url);\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport MuiChip from 'material-ui/Chip';\nimport Avatar from 'material-ui/Avatar';\nimport IconStar from '@material-ui/icons/Star';\nimport { Link } from 'react-router-dom';\nimport debounce from 'lodash/debounce';\n\nimport { colors } from '../../modules/colors';\nimport { apiPostDataStatistics } from '../../api/dataStatistics';\n\nconst chipTheme = {\n    default: {\n        labelColor: colors.black,\n        backgroundColor: colors.lightGrey,\n    },\n    primary: {\n        labelColor: colors.black,\n        backgroundColor: colors.lightGrey,\n    },\n    accent: {\n        labelColor: colors.white,\n        backgroundColor: colors.mediumGreen,\n    },\n};\n\nconst d = '30px';\n\nconst avatar = selected => {\n    const avatarProps = {\n        color: colors.white,\n        backgroundColor: selected ? 'transparent' : colors.lightMediumGrey,\n        style: { height: d, width: d },\n    };\n\n    return <Avatar icon={<IconStar />} {...avatarProps} />;\n};\n\nconst DashboardItemChip = ({ starred, selected, label, dashboardId }) => {\n    const chipColorProps = selected\n        ? chipTheme.accent\n        : starred\n        ? chipTheme.primary\n        : chipTheme.default;\n\n    const labelStyle = { fontSize: '14px', fontWeight: 400, lineHeight: d };\n    const style = { margin: 3, height: d, cursor: 'pointer' };\n\n    const props = {\n        style,\n        labelStyle,\n        ...chipColorProps,\n    };\n\n    return (\n        <Link\n            style={{\n                display: 'inline-block',\n                verticalAlign: 'top',\n                textDecoration: 'none',\n            }}\n            to={`/${dashboardId}`}\n            onClick={debounce(\n                () => apiPostDataStatistics('DASHBOARD_VIEW', dashboardId),\n                500\n            )}\n        >\n            <MuiChip {...props}>\n                {starred ? avatar(selected) : null}\n                {label}\n            </MuiChip>\n        </Link>\n    );\n};\n\nDashboardItemChip.propTypes = {\n    starred: PropTypes.bool.isRequired,\n    selected: PropTypes.bool.isRequired,\n    label: PropTypes.string.isRequired,\n};\n\nexport default DashboardItemChip;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport IconButton from 'material-ui/IconButton';\nimport IconAdd from 'material-ui/svg-icons/content/add-circle';\nimport { colors } from '../modules/colors';\n\nconst styles = {\n    button: {\n        width: 36,\n        height: 36,\n        padding: 0,\n    },\n    iconStyle: {\n        width: 32,\n        height: 32,\n    },\n    icon: IconAdd,\n    iconColor: colors.mediumGreen,\n};\n\nconst D2IconButton = props => (\n    <IconButton\n        style={styles.button}\n        iconStyle={Object.assign({}, styles.iconStyle, props.iconStyle)}\n        onClick={props.onClick}\n    >\n        {props.icon || <IconAdd color={styles.iconColor} />}\n    </IconButton>\n);\n\nD2IconButton.propTypes = {\n    style: PropTypes.object,\n    iconStyle: PropTypes.object,\n    icon: PropTypes.object,\n    iconColor: PropTypes.string,\n    onClick: PropTypes.func,\n};\n\nD2IconButton.defaultProps = {\n    style: null,\n    iconStyle: null,\n    icon: null,\n    iconColor: '',\n    onClick: Function.prototype,\n};\n\nexport default D2IconButton;\n","import { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\n\nexport const SET_DASHBOARDS_FILTER_NAME = 'SET_DASHBOARDS_FILTER_NAME';\nexport const SET_DASHBOARDS_FILTER_OWNER = 'SET_DASHBOARDS_FILTER_OWNER';\nexport const SET_DASHBOARDS_FILTER_ORDER = 'SET_DASHBOARDS_FILTER_ORDER';\n\nexport const ownerData = [\n    { id: 'ALL', value: 'All users' },\n    { id: 'ME', value: 'Created by me' },\n    { id: 'OTHERS', value: 'Created by others' },\n];\n\nexport const orderData = [\n    { id: 'NAME:ASC', value: 'Name (asc)' },\n    { id: 'NAME:ASC', value: 'Name (desc)' },\n    { id: 'ITEMS:ASC', value: 'Number of items (asc)' },\n    { id: 'ITEMS:ASC', value: 'Number of items (desc)' },\n    { id: 'CREATED:ASC', value: 'Created date (asc)' },\n    { id: 'CREATED:ASC', value: 'Created date (desc)' },\n];\n\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_NAME = '';\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_OWNER = ownerData[0].id;\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_ORDER = orderData[0].id;\n\nconst name = (state = DEFAULT_STATE_DASHBOARDS_FILTER_NAME, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_NAME:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_NAME\n            );\n        default:\n            return state;\n    }\n};\n\nconst owner = (state = DEFAULT_STATE_DASHBOARDS_FILTER_OWNER, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_OWNER:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_NAME\n            );\n        default:\n            return state;\n    }\n};\n\nconst order = (state = DEFAULT_STATE_DASHBOARDS_FILTER_ORDER, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_ORDER:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_ORDER\n            );\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    name,\n    owner,\n    order,\n});\n\n// selectors\n\nexport const sGetDashboardsFilterRoot = state => state.dashboardsFilter;\n\n// selector dependency level 2\n\nexport const sGetFilterName = state => sGetDashboardsFilterRoot(state).name;\nexport const sGetFilterOwner = state => sGetDashboardsFilterRoot(state).owner;\nexport const sGetFilterOrder = state => sGetDashboardsFilterRoot(state).order;\n","import React, { Component, Fragment } from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport TextField from 'material-ui/TextField';\nimport IconButton from 'material-ui/IconButton';\nimport IconClear from '@material-ui/icons/Clear';\nimport isEmpty from 'd2-utilizr/lib/isEmpty';\n\nimport { DEFAULT_STATE_DASHBOARDS_FILTER_NAME } from '../../reducers/dashboardsFilter';\n\nexport const KEYCODE_ENTER = 13;\nexport const KEYCODE_ESCAPE = 27;\n\nconst styles = {\n    filterField: {\n        fontSize: '14px',\n        width: '200px',\n        height: '30px',\n        top: '-2px',\n    },\n    filterFieldInput: {\n        top: '-9px',\n        left: '1px',\n    },\n    filterFieldUnderline: {\n        bottom: '10px',\n    },\n    filterFieldUnderlineFocus: {\n        borderColor: '#aaa',\n        borderWidth: '1px',\n    },\n    clearButton: {\n        width: '20px',\n        height: '24px',\n        padding: 0,\n        top: '-5px',\n        left: '-18px',\n    },\n    clearButtonIcon: {\n        width: '16px',\n        height: '16px',\n    },\n};\n\nexport class Filter extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            value: DEFAULT_STATE_DASHBOARDS_FILTER_NAME,\n        };\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setState({\n            value: nextProps.name,\n        });\n    }\n\n    setFilterValue = event => {\n        event.preventDefault();\n\n        this.props.onChangeName(event.target.value);\n    };\n\n    handleKeyUp = event => {\n        switch (event.keyCode) {\n            case KEYCODE_ENTER:\n                this.props.onKeypressEnter();\n                break;\n            case KEYCODE_ESCAPE:\n                this.props.onChangeName();\n                break;\n            default:\n                break;\n        }\n    };\n\n    render() {\n        return (\n            <TextField\n                className=\"FilterField\"\n                value={this.state.value}\n                onChange={this.setFilterValue}\n                onKeyUp={this.handleKeyUp}\n                hintText={i18n.t('Search for a dashboard')}\n                style={styles.filterField}\n                inputStyle={styles.filterFieldInput}\n                hintStyle={styles.filterFieldHint}\n                underlineStyle={styles.filterFieldUnderline}\n                underlineFocusStyle={styles.filterFieldUnderlineFocus}\n            />\n        );\n    }\n}\n\nFilter.propTypes = {\n    name: PropTypes.string,\n    onChangeName: PropTypes.func,\n};\n\nFilter.defaultProps = {\n    name: '',\n    onChangeName: Function.prototype,\n};\n\nexport const ClearButton = ({ name, onChangeName }) => {\n    const disabled = isEmpty(name);\n\n    const clearFilter = () => onChangeName();\n\n    return (\n        <IconButton\n            style={Object.assign({}, styles.clearButton, {\n                opacity: disabled ? 0 : 1,\n            })}\n            iconStyle={styles.clearButtonIcon}\n            onClick={clearFilter}\n            disabled={disabled}\n        >\n            <IconClear color=\"action\" />\n        </IconButton>\n    );\n};\n\nClearButton.propTypes = {\n    name: PropTypes.string.isRequired,\n    onChangeName: PropTypes.func.isRequired,\n};\n\nexport default props => (\n    <Fragment>\n        <Filter {...props} />\n        <ClearButton {...props} />\n    </Fragment>\n);\n","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport { colors } from '../../modules/colors';\n\nexport const SHOWMORE_BAR_HEIGHT = 16;\n\nconst styles = {\n    showMore: {\n        color: colors.royalBlue,\n        cursor: 'pointer',\n        fontSize: 11,\n        fontWeight: 700,\n        height: SHOWMORE_BAR_HEIGHT,\n        paddingTop: 5,\n        textTransform: 'uppercase',\n        visibility: 'visible',\n    },\n};\n\nexport const ShowMoreButton = ({ onClick, isMaxHeight, classes }) => (\n    <div style={{ textAlign: 'center' }}>\n        <div className={classes.showMore} onClick={onClick}>\n            {isMaxHeight ? i18n.t('Show less') : i18n.t('Show more')}\n        </div>\n    </div>\n);\n\nexport default withStyles(styles)(ShowMoreButton);\n","import { END_FLAP_HEIGHT } from '@dhis2/d2-ui-core/control-bar/ControlBar';\nimport { SHOWMORE_BAR_HEIGHT } from './ShowMoreButton';\n\nexport const CONTROL_BAR_ROW_HEIGHT = 36;\nexport const FIRST_ROW_PADDING_HEIGHT = 10;\nexport const HEADERBAR_HEIGHT = 48;\n\nexport const MIN_ROW_COUNT = 1;\n\nconst CONTROL_BAR_OUTER_HEIGHT_DIFF =\n    FIRST_ROW_PADDING_HEIGHT + SHOWMORE_BAR_HEIGHT - 2; // 2 pixel \"adjustment\"\n\nexport const getRowsHeight = rows => {\n    return rows * CONTROL_BAR_ROW_HEIGHT;\n};\n\nexport const getNumRowsFromHeight = height => {\n    return Math.floor(\n        (height - CONTROL_BAR_OUTER_HEIGHT_DIFF) / CONTROL_BAR_ROW_HEIGHT\n    );\n};\n\nexport const getControlBarHeight = (rows, expandable) => {\n    const flapHeight = !expandable ? END_FLAP_HEIGHT : 0;\n\n    return getRowsHeight(rows) + CONTROL_BAR_OUTER_HEIGHT_DIFF + flapHeight;\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport ControlBar from '@dhis2/d2-ui-core/control-bar/ControlBar';\nimport arraySort from 'd2-utilizr/lib/arraySort';\n\nimport Chip from './DashboardItemChip';\nimport D2IconButton from '../../widgets/D2IconButton';\nimport Filter from './Filter';\nimport ShowMoreButton from './ShowMoreButton';\nimport {\n    FIRST_ROW_PADDING_HEIGHT,\n    MIN_ROW_COUNT,\n    getRowsHeight,\n    getControlBarHeight,\n    getNumRowsFromHeight,\n} from './controlBarDimensions';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { sGetAllDashboards } from '../../reducers/dashboards';\nimport { sGetFilterName } from '../../reducers/dashboardsFilter';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { acSetControlBarUserRows } from '../../actions/controlBar';\nimport { acSetFilterName } from '../../actions/dashboardsFilter';\nimport { orObject, orArray } from '../../modules/util';\nimport { apiPostControlBarRows } from '../../api/controlBar';\n\nimport './ControlBar.css';\n\nexport const MAX_ROW_COUNT = 10;\n\nexport class DashboardsBar extends Component {\n    state = {\n        rows: MIN_ROW_COUNT,\n    };\n\n    setInitialDashboardState = rows => {\n        this.setState({ rows, isMaxHeight: rows === MAX_ROW_COUNT });\n    };\n\n    componentDidMount() {\n        this.setInitialDashboardState(this.props.userRows);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setInitialDashboardState(nextProps.userRows);\n    }\n\n    onChangeHeight = newHeight => {\n        const newRows = Math.max(\n            MIN_ROW_COUNT,\n            getNumRowsFromHeight(newHeight)\n        );\n\n        if (newRows !== this.state.rows) {\n            const newRowCount = Math.min(newRows, MAX_ROW_COUNT);\n\n            this.props.onChangeHeight(newRowCount);\n        }\n    };\n\n    onEndDrag = () => {\n        return apiPostControlBarRows(this.state.rows);\n    };\n\n    onToggleMaxHeight = () => {\n        const rows =\n            this.state.rows === MAX_ROW_COUNT\n                ? this.props.userRows\n                : MAX_ROW_COUNT;\n\n        this.setState({ rows, isMaxHeight: !this.state.isMaxHeight });\n    };\n\n    onSelectDashboard = () => {\n        this.props.history.push(`/${this.props.dashboards[0].id}`);\n    };\n\n    render() {\n        const { dashboards, name, selectedId, onChangeFilterName } = this.props;\n\n        const rowCount = this.state.isMaxHeight\n            ? MAX_ROW_COUNT\n            : this.state.rows;\n        const controlBarHeight = getControlBarHeight(rowCount, true);\n        const contentWrapperStyle = {\n            padding: `${FIRST_ROW_PADDING_HEIGHT}px 6px 0 6px`,\n            overflowY: this.state.isMaxHeight ? 'auto' : 'hidden',\n            height: getRowsHeight(rowCount) + FIRST_ROW_PADDING_HEIGHT,\n        };\n\n        return (\n            <ControlBar\n                height={controlBarHeight}\n                onChangeHeight={this.onChangeHeight}\n                onEndDrag={this.onEndDrag}\n                editMode={false}\n                expandable={true}\n            >\n                <div style={contentWrapperStyle}>\n                    <div className=\"left-controls\">\n                        <Link\n                            style={{\n                                display: 'inline-block',\n                                textDecoration: 'none',\n                                marginRight: 10,\n                            }}\n                            to={'/new'}\n                        >\n                            <D2IconButton />\n                        </Link>\n                        <Filter\n                            name={name}\n                            onChangeName={onChangeFilterName}\n                            onKeypressEnter={this.onSelectDashboard}\n                        />\n                    </div>\n                    {orArray(dashboards).map(dashboard => (\n                        <Chip\n                            key={dashboard.id}\n                            label={dashboard.displayName}\n                            starred={dashboard.starred}\n                            dashboardId={dashboard.id}\n                            selected={dashboard.id === selectedId}\n                        />\n                    ))}\n                </div>\n                {this.props.userRows !== MAX_ROW_COUNT ? (\n                    <ShowMoreButton\n                        onClick={this.onToggleMaxHeight}\n                        isMaxHeight={this.state.isMaxHeight}\n                    />\n                ) : null}\n            </ControlBar>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    dashboards: sGetAllDashboards(state),\n    name: sGetFilterName(state),\n    userRows: sGetControlBarUserRows(state),\n    selectedId: sGetSelectedId(state),\n});\n\nconst mapDispatchToProps = {\n    onChangeHeight: acSetControlBarUserRows,\n    onChangeFilterName: acSetFilterName,\n};\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const dashboards = Object.values(orObject(stateProps.dashboards));\n    const displayDashboards = arraySort(\n        dashboards.filter(d =>\n            d.displayName.toLowerCase().includes(stateProps.name.toLowerCase())\n        ),\n        'ASC',\n        'displayName'\n    );\n\n    return {\n        ...stateProps,\n        ...ownProps,\n        ...dispatchProps,\n        dashboards: [\n            ...displayDashboards.filter(d => d.starred),\n            ...displayDashboards.filter(d => !d.starred),\n        ],\n    };\n};\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps,\n        mergeProps\n    )(DashboardsBar)\n);\n","import {\n    SET_DASHBOARDS_FILTER_NAME,\n    SET_DASHBOARDS_FILTER_OWNER,\n    SET_DASHBOARDS_FILTER_ORDER,\n} from '../reducers/dashboardsFilter';\n\n// actions\n\nexport const acSetFilterName = value => ({\n    type: SET_DASHBOARDS_FILTER_NAME,\n    value,\n});\n\nexport const acSetFilterOwner = value => ({\n    type: SET_DASHBOARDS_FILTER_OWNER,\n    value,\n});\n\nexport const acSetFilterOrder = value => ({\n    type: SET_DASHBOARDS_FILTER_ORDER,\n    value,\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport {\n    HEADERBAR_HEIGHT,\n    getControlBarHeight,\n    MIN_ROW_COUNT,\n} from '../ControlBar/controlBarDimensions';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\n\nconst DashboardVerticalOffset = props => {\n    const rows = props.editMode ? MIN_ROW_COUNT : props.userRows;\n    const marginTop = HEADERBAR_HEIGHT + getControlBarHeight(rows, false);\n\n    return <div className=\"page-container-top-margin\" style={{ marginTop }} />;\n};\n\nconst mapStateToProps = state => ({\n    userRows: sGetControlBarUserRows(state),\n});\n\nexport default connect(mapStateToProps)(DashboardVerticalOffset);\n","import i18n from '@dhis2/d2-i18n';\nimport {\n    itemTypeMap,\n    spacerContent,\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_CHART,\n    EVENT_REPORT,\n    USERS,\n    REPORTS,\n    RESOURCES,\n    APP,\n    MESSAGES,\n    TEXT,\n    SPACER,\n} from '../../modules/itemTypes';\n\nexport const singleItems = [\n    {\n        id: 'additional',\n        header: 'Additional items',\n        items: [\n            {\n                type: TEXT,\n                name: i18n.t('Text box'),\n                content: '',\n            },\n            {\n                type: MESSAGES,\n                name: i18n.t('Messages'),\n                content: 'true',\n            },\n            {\n                type: SPACER,\n                name: i18n.t('Spacer'),\n                content: spacerContent,\n            },\n        ],\n    },\n];\n\nexport const listItems = [\n    {\n        id: REPORT_TABLE,\n        title: itemTypeMap[REPORT_TABLE].pluralTitle,\n    },\n    {\n        id: CHART,\n        title: itemTypeMap[CHART].pluralTitle,\n    },\n    { id: MAP, title: itemTypeMap[MAP].pluralTitle },\n    {\n        id: EVENT_REPORT,\n        title: itemTypeMap[EVENT_REPORT].pluralTitle,\n    },\n    {\n        id: EVENT_CHART,\n        title: itemTypeMap[EVENT_CHART].pluralTitle,\n    },\n    {\n        id: USERS,\n        title: itemTypeMap[USERS].pluralTitle,\n    },\n    {\n        id: REPORTS,\n        title: itemTypeMap[REPORTS].pluralTitle,\n    },\n    {\n        id: RESOURCES,\n        title: itemTypeMap[RESOURCES].pluralTitle,\n    },\n    { id: APP, title: itemTypeMap[APP].pluralTitle },\n];\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport Divider from 'material-ui/Divider';\nimport { List, ListItem } from 'material-ui/List';\nimport Button from '@dhis2/d2-ui-core/button/Button';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport { tAddListItemContent } from './actions';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\nimport { sGetEditDashboardRoot } from '../../reducers/editDashboard';\nimport {\n    getItemUrl,\n    getItemIcon,\n    APP,\n    CHART,\n    EVENT_CHART,\n    REPORT_TABLE,\n    EVENT_REPORT,\n    MAP,\n    REPORTS,\n    RESOURCES,\n    USERS,\n} from '../../modules/itemTypes';\nimport { colors } from '../../modules/colors';\n\nclass ItemSelectList extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seeMore: false,\n        };\n    }\n\n    addItem = item => () => {\n        const {\n            type,\n            dashboardId,\n            acAddDashboardItem,\n            tAddListItemContent,\n        } = this.props;\n\n        const newItem = {\n            id: item.id,\n            name: item.displayName || item.name,\n        };\n\n        // special handling for ListItem types\n        if (type.match(/(REPORTS|RESOURCES|USERS)/)) {\n            tAddListItemContent(dashboardId, type, newItem);\n        } else if (type === APP) {\n            acAddDashboardItem({ type, content: item.key });\n        } else {\n            acAddDashboardItem({ type, content: newItem });\n        }\n    };\n\n    toggleSeeMore = () => {\n        this.setState({ seeMore: !this.state.seeMore });\n\n        this.props.onChangeItemsLimit(this.props.type);\n    };\n\n    render() {\n        return (\n            <Fragment>\n                <div\n                    style={{\n                        display: 'flex',\n                        justifyContent: 'space-between',\n                        paddingLeft: '16px',\n                    }}\n                >\n                    <h3>{this.props.title}</h3>\n                    <Button\n                        color=\"primary\"\n                        style={{ textTransform: 'uppercase' }}\n                        onClick={this.toggleSeeMore}\n                    >\n                        {`${i18n.t('See')} ${\n                            this.state.seeMore\n                                ? i18n.t('fewer')\n                                : i18n.t('more')\n                        } ${this.props.title}`}\n                    </Button>\n                </div>\n                <Divider />\n                <List>\n                    {this.props.items.map(item => {\n                        const itemUrl = getItemUrl(\n                            this.props.type,\n                            item,\n                            this.context.d2\n                        );\n\n                        const ItemIcon = getItemIcon(this.props.type);\n\n                        return (\n                            <ListItem // apps don't have item.id\n                                key={item.id || item.key}\n                                leftIcon={\n                                    <ItemIcon\n                                        style={{\n                                            margin: '6px',\n                                            fill: colors.muiDefaultGrey,\n                                        }}\n                                    />\n                                }\n                                innerDivStyle={{ padding: '0px 0px 0px 42px' }}\n                                hoverColor=\"transparent\"\n                                primaryText={\n                                    <p\n                                        style={{\n                                            display: 'flex',\n                                            alignItems: 'center',\n                                            justifyContent: 'flex-start',\n                                            margin: 0,\n                                        }}\n                                    >\n                                        {item.displayName || item.name}\n                                        <Button\n                                            color=\"primary\"\n                                            onClick={this.addItem(item)}\n                                            style={{\n                                                marginLeft: '5px',\n                                                marginRight: '5px',\n                                            }}\n                                        >\n                                            + ADD\n                                        </Button>\n                                        {itemUrl && (\n                                            <a\n                                                target=\"_blank\"\n                                                rel=\"noopener noreferrer\"\n                                                href={itemUrl}\n                                                style={{ display: 'flex' }}\n                                            >\n                                                <LaunchIcon\n                                                    style={{\n                                                        width: '16px',\n                                                        height: '16px',\n                                                        fill:\n                                                            colors.muiDefaultGrey,\n                                                    }}\n                                                />\n                                            </a>\n                                        )}\n                                    </p>\n                                }\n                            />\n                        );\n                    })}\n                </List>\n            </Fragment>\n        );\n    }\n}\n\nItemSelectList.propTypes = {\n    type: PropTypes.oneOf([\n        APP,\n        CHART,\n        EVENT_CHART,\n        REPORT_TABLE,\n        EVENT_REPORT,\n        MAP,\n        REPORTS,\n        RESOURCES,\n        USERS,\n    ]).isRequired,\n    title: PropTypes.string.isRequired,\n    items: PropTypes.array.isRequired,\n    onChangeItemsLimit: PropTypes.func.isRequired,\n};\n\nItemSelectList.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nexport default connect(\n    state => ({\n        dashboardId: sGetEditDashboardRoot(state).id,\n    }),\n    {\n        acAddDashboardItem,\n        tAddListItemContent,\n    }\n)(ItemSelectList);\n","import { sGetEditDashboardRoot } from '../../reducers/editDashboard';\nimport { itemTypeMap } from '../../modules/itemTypes';\nimport {\n    acAddDashboardItem,\n    acUpdateDashboardItem,\n} from '../../actions/editDashboard';\n\nexport const tAddListItemContent = (dashboardId, type, content) => (\n    dispatch,\n    getState\n) => {\n    const state = getState();\n    const listItemType = itemTypeMap[type].propName;\n    const dashboardItems = sGetEditDashboardRoot(state).dashboardItems;\n    const dashboardItemIndex = dashboardItems.findIndex(\n        item => item.type === type\n    );\n    let dashboardItem;\n\n    // Reports/Resources/Users dashboard item type already present in dashboard\n    if (dashboardItemIndex > -1) {\n        dashboardItem = dashboardItems[dashboardItemIndex];\n        dashboardItem[listItemType].push(content);\n\n        dispatch(acUpdateDashboardItem(dashboardItem));\n    } else {\n        dashboardItem = {\n            type: type,\n            content: [content],\n        };\n\n        dispatch(acAddDashboardItem(dashboardItem));\n    }\n};\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport Divider from 'material-ui/Divider';\nimport { List, ListItem } from 'material-ui/List';\nimport Button from '@dhis2/d2-ui-core/button/Button';\nimport { getItemIcon } from '../../modules/itemTypes';\n\nimport { acAddDashboardItem } from '../../actions/editDashboard';\n\nconst SingleItem = ({ item, onAddToDashboard }) => {\n    const ItemIcon = getItemIcon(item.type);\n    return (\n        <ListItem\n            key={item.type}\n            leftIcon={<ItemIcon style={{ margin: '6px' }} />}\n            innerDivStyle={{ padding: '0px 0px 0px 42px' }}\n            hoverColor=\"transparent\"\n            primaryText={\n                <p\n                    style={{\n                        display: 'flex',\n                        alignItems: 'center',\n                        justifyContent: 'flex-start',\n                        margin: 0,\n                    }}\n                >\n                    {item.name}\n                    <Button\n                        color=\"primary\"\n                        onClick={onAddToDashboard}\n                        style={{\n                            marginLeft: '5px',\n                            marginRight: '5px',\n                        }}\n                    >\n                        + ADD\n                    </Button>\n                </p>\n            }\n        />\n    );\n};\n\nconst ItemSelectSingle = ({ acAddDashboardItem, category }) => {\n    const addToDashboard = ({ type, content }) => () => {\n        acAddDashboardItem({ type, content });\n    };\n\n    return (\n        <Fragment>\n            <div\n                style={{\n                    display: 'flex',\n                    justifyContent: 'space-between',\n                    paddingLeft: '16px',\n                }}\n            >\n                <h3>{category.header}</h3>\n            </div>\n            <Divider />\n            <List>\n                {category.items.map(item => (\n                    <SingleItem\n                        key={item.type}\n                        item={item}\n                        onAddToDashboard={addToDashboard(item)}\n                    />\n                ))}\n            </List>\n        </Fragment>\n    );\n};\n\nexport default connect(\n    null,\n    { acAddDashboardItem }\n)(ItemSelectSingle);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport Popover from '@material-ui/core/Popover';\nimport SearchIcon from '@material-ui/icons/Search';\nimport TextField from 'material-ui/TextField';\n\nimport { singleItems, listItems } from './selectableItems';\nimport { itemTypeMap } from '../../modules/itemTypes';\nimport ItemSelectList from './ItemSelectList';\nimport ItemSelectSingle from './ItemSelectSingle';\nimport { colors } from '../../modules/colors';\n\nimport './ItemSelect.css';\n\nconst styles = {\n    filterField: {\n        fontSize: '14px',\n        height: '30px',\n        marginLeft: '10px',\n    },\n    filterFieldInput: {\n        top: '-9px',\n        left: '1px',\n    },\n    filterFieldUnderline: {\n        bottom: '10px',\n    },\n    filterFieldUnderlineFocus: {\n        borderColor: '#aaa',\n        borderWidth: '1px',\n    },\n    searchIcon: {\n        fill: colors.muiDefaultGrey,\n    },\n};\n\nconst ItemSearchField = props => (\n    <div style={{ display: 'flex', alignItems: 'baseline' }}>\n        <SearchIcon style={styles.searchIcon} />\n        <TextField\n            hintText={i18n.t('Search for items to add to this dashboard')}\n            fullWidth={true}\n            value={props.value}\n            onClick={props.onClick}\n            onChange={props.onChange}\n            style={styles.filterField}\n            inputStyle={styles.filterFieldInput}\n            hintStyle={styles.filterFieldHint}\n            underlineStyle={styles.filterFieldUnderline}\n            underlineFocusStyle={styles.filterFieldUnderlineFocus}\n        />\n    </div>\n);\n\nclass ItemSelect extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n            open: false,\n            maxOptions: new Set(),\n            items: undefined,\n            filter: '',\n        };\n    }\n\n    closeList = () => {\n        this.setState({ open: false, filter: '' });\n    };\n\n    openList = event => {\n        this.fetchItems();\n\n        this.setState({\n            anchorEl: event.currentTarget,\n            open: true,\n        });\n    };\n\n    setFilter = event => {\n        this.setState({ filter: event.target.value }, this.fetchItems);\n    };\n\n    getListItems = items => {\n        return listItems.map(type => {\n            const itemType = itemTypeMap[type.id];\n\n            if (items && items[itemType.countName] > 0) {\n                return (\n                    <ItemSelectList\n                        key={type.id}\n                        type={type.id}\n                        title={type.title}\n                        items={items[itemType.endPointName]}\n                        onChangeItemsLimit={this.fetchItems}\n                    />\n                );\n            } else {\n                return null;\n            }\n        });\n    };\n\n    popoverChildren = items => {\n        const SingleItems = singleItems.map(category => (\n            <ItemSelectSingle key={category.id} category={category} />\n        ));\n        const ListItems = this.getListItems(items);\n\n        return ListItems.concat(SingleItems);\n    };\n\n    fetchItems = async maxOption => {\n        const api = this.context.d2.Api.getApi();\n\n        let queryString;\n\n        if (maxOption) {\n            const maxOptions = this.state.maxOptions;\n\n            if (maxOptions.has(maxOption)) {\n                maxOptions.delete(maxOption);\n            } else {\n                maxOptions.add(maxOption);\n            }\n\n            this.setState({\n                maxOptions,\n            });\n        } else {\n            this.setState({\n                maxOptions: new Set(),\n            });\n        }\n\n        if ([...this.state.maxOptions.values()].length) {\n            queryString =\n                'max=' + [...this.state.maxOptions.values()].join('&max=');\n        }\n\n        api.get(\n            `dashboards/q/${this.state.filter || ''}${\n                queryString ? `?${queryString}` : ''\n            }`\n        )\n            .then(response => {\n                this.setState({ items: response });\n            })\n            .catch(console.error);\n    };\n\n    render() {\n        return (\n            <Fragment>\n                <ItemSearchField\n                    value={this.state.filter}\n                    onClick={this.openList}\n                    onChange={this.setFilter}\n                />\n                <Popover\n                    className=\"dashboard-item-select\"\n                    open={this.state.open}\n                    onClose={this.closeList}\n                    anchorEl={this.state.anchorEl}\n                    anchorOrigin={{ horizontal: 'left', vertical: 'bottom' }}\n                    transformOrigin={{ horizontal: 'left', vertical: 'top' }}\n                    style={{ height: '70vh' }}\n                    PaperProps={{ style: { width: '700px' } }}\n                >\n                    {this.popoverChildren(this.state.items)}\n                </Popover>\n            </Fragment>\n        );\n    }\n}\n\nItemSelect.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nexport default ItemSelect;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport i18n from '@dhis2/d2-i18n';\nimport TextField from '@dhis2/d2-ui-core/text-field/TextField';\n\nimport {\n    acSetDashboardTitle,\n    acSetDashboardDescription,\n} from '../../actions/editDashboard';\nimport { orObject } from '../../modules/util';\nimport { sGetEditDashboardRoot } from '../../reducers/editDashboard';\nimport { sGetDashboardById } from '../../reducers/dashboards';\nimport ItemSelect from '../ItemSelect/ItemSelect';\n\nconst styles = {\n    section: { display: 'flex', justifyContent: 'space-between' },\n    titleDescription: {\n        flex: '3',\n        marginRight: '20px',\n    },\n    title: { padding: '6px 0' },\n    itemSelect: {\n        flex: '2',\n        minWidth: '300px',\n        maxWidth: '730px',\n        position: 'relative',\n        top: '33px',\n    },\n};\n\nexport const EditTitleBar = ({\n    name,\n    displayName,\n    description,\n    style,\n    onChangeTitle,\n    onChangeDescription,\n    classes,\n}) => {\n    const titleStyle = Object.assign({}, style.title, {\n        top: '-2px',\n    });\n\n    const translatedName = () => {\n        return displayName ? (\n            <span style={style.description}>\n                {i18n.t('Current translation')}: {displayName}\n            </span>\n        ) : null;\n    };\n\n    return (\n        <section className={classes.section}>\n            <div className={classes.titleDescription}>\n                <span>{i18n.t('Currently editing')}</span>\n                <div className={classes.title}>\n                    <TextField\n                        multiline\n                        fullWidth\n                        rows={1}\n                        rowsMax={3}\n                        style={titleStyle}\n                        value={name}\n                        placeholder={i18n.t('Add title here')}\n                        onChange={onChangeTitle}\n                    />\n                    {translatedName()}\n                </div>\n                <TextField\n                    multiline\n                    fullWidth\n                    rows={1}\n                    rowsMax={3}\n                    style={style.description}\n                    value={description}\n                    placeholder={i18n.t('Add description here')}\n                    onChange={onChangeDescription}\n                />\n            </div>\n            <div className={classes.itemSelect}>\n                <ItemSelect />\n            </div>\n        </section>\n    );\n};\n\nconst mapStateToProps = state => {\n    const selectedDashboard = orObject(sGetEditDashboardRoot(state));\n    const displayName = orObject(sGetDashboardById(state, selectedDashboard.id))\n        .displayName;\n\n    return {\n        name: selectedDashboard.name,\n        displayName,\n        description: selectedDashboard.description,\n    };\n};\n\nconst mapDispatchToProps = {\n    onChangeTitle: acSetDashboardTitle,\n    onChangeDescription: acSetDashboardDescription,\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(EditTitleBar));\n\nEditTitleBar.propTypes = {\n    name: PropTypes.string,\n    displayName: PropTypes.string,\n    description: PropTypes.string,\n    onChangeTitle: PropTypes.func.isRequired,\n    onChangeDescription: PropTypes.func.isRequired,\n    style: PropTypes.object,\n};\n\nEditTitleBar.defaultProps = {\n    name: '',\n    displayName: '',\n    description: '',\n    style: {},\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Button } from '@dhis2/ui-core';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport i18n from '@dhis2/d2-i18n';\n\nimport {\n    PeriodDimension,\n    DynamicDimension,\n    OrgUnitDimension,\n    FIXED_DIMENSIONS,\n} from '@dhis2/d2-ui-analytics';\n\nconst peId = FIXED_DIMENSIONS.pe.id;\nconst ouId = FIXED_DIMENSIONS.ou.id;\n\nclass FilterDialog extends Component {\n    onConfirm = id => () => this.props.onConfirm(id);\n\n    dialogContent() {\n        const {\n            displayNameProperty,\n            dimension,\n            selectedItems,\n            onSelect,\n            onDeselect,\n            onReorder,\n        } = this.props;\n        const { d2 } = this.context;\n        const dialogId = dimension.id;\n\n        switch (dialogId) {\n            case peId: {\n                return (\n                    <PeriodDimension\n                        d2={d2}\n                        selectedPeriods={selectedItems}\n                        onSelect={onSelect}\n                        onDeselect={onDeselect}\n                        onReorder={onReorder}\n                    />\n                );\n            }\n            case ouId:\n                return (\n                    <OrgUnitDimension\n                        d2={d2}\n                        displayNameProperty={displayNameProperty}\n                        ouItems={selectedItems}\n                        onSelect={onSelect}\n                        onDeselect={onDeselect}\n                        onReorder={onReorder}\n                    />\n                );\n            default:\n                return (\n                    <DynamicDimension\n                        d2={d2}\n                        selectedItems={selectedItems}\n                        onSelect={onSelect}\n                        onDeselect={onDeselect}\n                        onReorder={onReorder}\n                        dialogId={dialogId}\n                        dialogTitle={dimension.name}\n                    />\n                );\n        }\n    }\n\n    render() {\n        const { dimension, onClose } = this.props;\n        const dialogId = dimension.id;\n\n        return (\n            <Dialog\n                open={!!dialogId}\n                maxWidth=\"lg\"\n                disableEnforceFocus\n                onClose={onClose}\n            >\n                {dialogId && this.dialogContent()}\n                <DialogActions>\n                    <Button kind=\"secondary\" onClick={onClose}>\n                        {i18n.t('Cancel')}\n                    </Button>\n                    <Button kind=\"primary\" onClick={this.onConfirm(dialogId)}>\n                        {i18n.t('Confirm')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nFilterDialog.propTypes = {\n    displayNameProperty: PropTypes.string,\n    dimension: PropTypes.object,\n    selectedItems: PropTypes.array,\n    onSelect: PropTypes.func,\n    onDeselect: PropTypes.func,\n    onReorder: PropTypes.func,\n    onClose: PropTypes.func,\n    onConfirm: PropTypes.func,\n};\n\nFilterDialog.contextTypes = {\n    d2: PropTypes.object,\n};\n\nexport default FilterDialog;\n","export const SET_ACTIVE_MODAL_DIMENSION = 'SET_ACTIVE_MODAL_DIMENSION';\nexport const CLEAR_ACTIVE_MODAL_DIMENSION = 'CLEAR_ACTIVE_MODAL_DIMENSION';\n\nexport const DEFAULT_STATE_ACTIVE_MODAL_DIMENSION = {};\n\nexport default (state = DEFAULT_STATE_ACTIVE_MODAL_DIMENSION, action) => {\n    switch (action.type) {\n        case SET_ACTIVE_MODAL_DIMENSION: {\n            return action.value;\n        }\n        case CLEAR_ACTIVE_MODAL_DIMENSION: {\n            return DEFAULT_STATE_ACTIVE_MODAL_DIMENSION;\n        }\n        default:\n            return state;\n    }\n};\n\nexport const sGetActiveModalDimension = state => state.activeModalDimension;\n","export const SET_ITEM_FILTERS = 'SET_ITEM_FILTERS';\nexport const ADD_ITEM_FILTER = 'ADD_ITEM_FILTER';\nexport const REMOVE_ITEM_FILTER = 'REMOVE_ITEM_FILTER';\n\nexport const DEFAULT_STATE_ITEM_FILTERS = {};\n\nexport default (state = DEFAULT_STATE_ITEM_FILTERS, action) => {\n    switch (action.type) {\n        case ADD_ITEM_FILTER: {\n            return {\n                ...state,\n                [action.filter.id]: action.filter.value,\n            };\n        }\n        case REMOVE_ITEM_FILTER: {\n            const newState = { ...state };\n\n            delete newState[action.id];\n\n            return newState;\n        }\n        case SET_ITEM_FILTERS: {\n            return action.filters;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetItemFiltersRoot = state => state.itemFilters;\n\nexport const sGetFiltersKeys = state => Object.keys(sGetItemFiltersRoot(state));\n","export const REMOVE_EDIT_ITEM_FILTER = 'REMOVE_EDIT_ITEM_FILTER';\nexport const SET_EDIT_ITEM_FILTERS = 'SET_EDIT_ITEM_FILTERS';\n\nexport const DEFAULT_STATE_EDIT_ITEM_FILTERS = {};\n\nexport default (state = DEFAULT_STATE_EDIT_ITEM_FILTERS, action) => {\n    switch (action.type) {\n        case REMOVE_EDIT_ITEM_FILTER: {\n            const newState = { ...state };\n\n            delete newState[action.id];\n\n            return newState;\n        }\n        case SET_EDIT_ITEM_FILTERS: {\n            return action.filters;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetEditItemFiltersRoot = state => state.editItemFilters;\n\nexport const sGetEditFiltersKeys = state =>\n    Object.keys(sGetEditItemFiltersRoot(state));\n","import {\n    ADD_ITEM_FILTER,\n    REMOVE_ITEM_FILTER,\n    SET_ITEM_FILTERS,\n} from '../reducers/itemFilters';\n\nexport const FILTER_ORG_UNIT = 'ou';\n\n// actions\n\nexport const acAddItemFilter = filter => ({\n    type: ADD_ITEM_FILTER,\n    filter,\n});\n\nexport const acRemoveItemFilter = id => ({\n    type: REMOVE_ITEM_FILTER,\n    id,\n});\n\nexport const acSetItemFilters = filters => ({\n    type: SET_ITEM_FILTERS,\n    filters,\n});\n","import {\n    REMOVE_EDIT_ITEM_FILTER,\n    SET_EDIT_ITEM_FILTERS,\n} from '../reducers/editItemFilters';\n\n// actions\n\nexport const acRemoveEditItemFilter = id => ({\n    type: REMOVE_EDIT_ITEM_FILTER,\n    id,\n});\n\nexport const acSetEditItemFilters = filters => ({\n    type: SET_EDIT_ITEM_FILTERS,\n    filters,\n});\n","import {\n    SET_ACTIVE_MODAL_DIMENSION,\n    CLEAR_ACTIVE_MODAL_DIMENSION,\n} from '../reducers/activeModalDimension';\n\nexport const acSetActiveModalDimension = value => ({\n    type: SET_ACTIVE_MODAL_DIMENSION,\n    value,\n});\n\nexport const acClearActiveModalDimension = () => ({\n    type: CLEAR_ACTIVE_MODAL_DIMENSION,\n});\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport Popover from '@material-ui/core/Popover';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\n\nimport i18n from '@dhis2/d2-i18n';\nimport { DimensionsPanel } from '@dhis2/d2-ui-analytics';\n\nimport { Button } from '@dhis2/ui-core';\nimport FilterDialog from './FilterDialog';\n\nimport { sGetSettingsDisplayNameProperty } from '../../reducers/settings';\nimport { sGetActiveModalDimension } from '../../reducers/activeModalDimension';\nimport { sGetDimensions } from '../../reducers/dimensions';\nimport { sGetFiltersKeys } from '../../reducers/itemFilters';\nimport { sGetEditItemFiltersRoot } from '../../reducers/editItemFilters';\nimport { acAddItemFilter, acRemoveItemFilter } from '../../actions/itemFilters';\nimport {\n    acRemoveEditItemFilter,\n    acSetEditItemFilters,\n} from '../../actions/editItemFilters';\nimport {\n    acClearActiveModalDimension,\n    acSetActiveModalDimension,\n} from '../../actions/activeModalDimension';\n\nclass FilterSelector extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n        };\n    }\n\n    openPanel = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    closePanel = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    closeDialog = () => {\n        this.setState({ anchorEl: null });\n\n        this.props.clearActiveModalDimension();\n    };\n\n    selectDimension = id => {\n        this.props.setActiveModalDimension({\n            id,\n            name: this.props.dimensions[id].name,\n        });\n    };\n\n    onSelectItems = ({ dimensionType: dimensionId, value: items }) => {\n        this.props.setEditItemFilters({\n            ...this.props.selectedItems,\n            [dimensionId]: items,\n        });\n    };\n\n    onDeselectItems = ({ dimensionType: dimensionId, value: idsToRemove }) => {\n        const oldList = this.props.selectedItems[dimensionId] || [];\n        const newList = oldList.filter(item => !idsToRemove.includes(item.id));\n\n        if (newList.length) {\n            this.props.setEditItemFilters({\n                ...this.props.selectedItems,\n                [dimensionId]: newList,\n            });\n        } else {\n            this.props.removeEditItemFilter(dimensionId);\n        }\n    };\n\n    onReorderItems = ({ dimensionType: dimensionId, value: ids }) => {\n        const oldList = this.props.selectedItems[dimensionId] || [];\n        const reorderedList = ids.map(id =>\n            oldList.find(item => item.id === id)\n        );\n\n        this.props.setEditItemFilters({\n            ...this.props.selectedItems,\n            [dimensionId]: reorderedList,\n        });\n    };\n\n    saveFilter = id => {\n        const filterItems = this.props.selectedItems[id];\n\n        if (filterItems && filterItems.length) {\n            this.props.addItemFilter({\n                id,\n                value: [...filterItems],\n            });\n        } else {\n            this.props.removeItemFilter(id);\n        }\n\n        this.closeDialog();\n    };\n\n    render() {\n        const {\n            displayNameProperty,\n            dimension,\n            dimensions,\n            selectedDimensions,\n            selectedItems,\n        } = this.props;\n\n        return (\n            <Fragment>\n                <Button onClick={this.openPanel}>\n                    {i18n.t('Add filter')}\n                    <ArrowDropDownIcon />\n                </Button>\n                <Popover\n                    open={Boolean(this.state.anchorEl)}\n                    anchorEl={this.state.anchorEl}\n                    anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\n                    onClose={this.closePanel}\n                    style={{ height: '100%' }}\n                >\n                    <DimensionsPanel\n                        dimensions={dimensions}\n                        onDimensionClick={this.selectDimension}\n                        selectedIds={selectedDimensions}\n                    />\n                </Popover>\n                {dimension ? (\n                    <FilterDialog\n                        displayNameProperty={displayNameProperty}\n                        dimension={dimension}\n                        selectedItems={selectedItems[dimension.id] || []}\n                        onSelect={this.onSelectItems}\n                        onDeselect={this.onDeselectItems}\n                        onReorder={this.onReorderItems}\n                        onClose={this.closeDialog}\n                        onConfirm={this.saveFilter}\n                    />\n                ) : null}\n            </Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    displayNameProperty: sGetSettingsDisplayNameProperty(state),\n    dimension: sGetActiveModalDimension(state),\n    dimensions: sGetDimensions(state),\n    selectedDimensions: sGetFiltersKeys(state),\n    selectedItems: sGetEditItemFiltersRoot(state),\n});\n\nexport default connect(\n    mapStateToProps,\n    {\n        clearActiveModalDimension: acClearActiveModalDimension,\n        setActiveModalDimension: acSetActiveModalDimension,\n        addItemFilter: acAddItemFilter,\n        removeItemFilter: acRemoveItemFilter,\n        removeEditItemFilter: acRemoveEditItemFilter,\n        setEditItemFilters: acSetEditItemFilters,\n    }\n)(FilterSelector);\n","import React, { Component } from 'react';\nimport InfoOutlineIcon from '@material-ui/icons/InfoOutlined';\nimport { colors } from '../../modules/colors';\n\nclass Info extends Component {\n    show = false;\n\n    toggle() {\n        this.show = !this.show;\n        return this.show;\n    }\n\n    render() {\n        return (\n            <div onClick={() => this.props.onClick(this.toggle())}>\n                <InfoOutlineIcon style={{ fill: colors.muiDefaultGrey }} />\n            </div>\n        );\n    }\n}\n\nexport default Info;\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport SharingDialog from '@dhis2/d2-ui-sharing-dialog';\nimport Star from '@material-ui/icons/Star';\nimport StarBorder from '@material-ui/icons/StarBorder';\n\nimport { orObject } from '../../modules/util';\nimport { tStarDashboard } from '../../actions/dashboards';\nimport { acSetSelectedShowDescription } from '../../actions/selected';\nimport FilterSelector from '../ItemFilter/FilterSelector';\nimport { Button } from '@dhis2/ui-core';\nimport Info from './Info';\nimport {\n    sGetSelectedId,\n    sGetSelectedShowDescription,\n} from '../../reducers/selected';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n} from '../../reducers/dashboards';\nimport { colors } from '../../modules/colors';\n\nconst NO_DESCRIPTION = i18n.t('No description');\n\nconst styles = {\n    actions: {\n        display: 'flex',\n        alignItems: 'center',\n        marginLeft: '20px',\n    },\n    starIcon: {\n        fill: colors.muiDefaultGrey,\n    },\n    textButton: {\n        minWidth: '30px',\n        top: '1px',\n    },\n    editLink: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        textDecoration: 'none',\n        marginRight: '4px',\n    },\n    titleBar: {\n        display: 'flex',\n        alignItems: 'flex-start',\n    },\n    titleBarIcon: {\n        marginLeft: 5,\n        position: 'relative',\n        top: 1,\n        cursor: 'pointer',\n    },\n};\n\nclass ViewTitleBar extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            sharingDialogIsOpen: false,\n        };\n    }\n\n    toggleSharingDialog = () =>\n        this.setState({ sharingDialogIsOpen: !this.state.sharingDialogIsOpen });\n\n    render() {\n        const {\n            id,\n            name,\n            description,\n            access,\n            style,\n            showDescription,\n            starred,\n            onStarClick,\n            onInfoClick,\n            classes,\n        } = this.props;\n\n        const titleStyle = Object.assign({}, style.title, {\n            cursor: 'default',\n            userSelect: 'text',\n            top: '7px',\n        });\n\n        const StarIcon = starred ? Star : StarBorder;\n\n        return (\n            <Fragment>\n                <div className={classes.titleBar}>\n                    <span style={titleStyle}>{name}</span>\n                    <div className={classes.actions}>\n                        <div\n                            className={classes.titleBarIcon}\n                            onClick={onStarClick}\n                        >\n                            <StarIcon className={classes.starIcon} />\n                        </div>\n                        <div className={classes.titleBarIcon}>\n                            <Info onClick={onInfoClick} />\n                        </div>\n                        <div style={{ marginLeft: '10px' }}>\n                            {access.update ? (\n                                <Link\n                                    className={classes.editLink}\n                                    to={`/${id}/edit`}\n                                >\n                                    <Button>{i18n.t('Edit')}</Button>\n                                </Link>\n                            ) : null}\n                            {access.manage ? (\n                                <span style={{ marginRight: '4px' }}>\n                                    <Button onClick={this.toggleSharingDialog}>\n                                        {i18n.t('Share')}\n                                    </Button>\n                                </span>\n                            ) : null}\n                            <span style={{ marginRight: '4px' }}>\n                                <FilterSelector />\n                            </span>\n                        </div>\n                    </div>\n                </div>\n                {showDescription ? (\n                    <div\n                        className=\"dashboard-description\"\n                        style={Object.assign(\n                            { paddingTop: '5px', paddingBottom: '5px' },\n                            style.description,\n                            !description ? { color: '#888' } : {}\n                        )}\n                    >\n                        {description || NO_DESCRIPTION}\n                    </div>\n                ) : null}\n                {id ? (\n                    <SharingDialog\n                        d2={this.context.d2}\n                        id={id}\n                        type=\"dashboard\"\n                        open={this.state.sharingDialogIsOpen}\n                        onRequestClose={this.toggleSharingDialog}\n                    />\n                ) : null}\n            </Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    const id = sGetSelectedId(state);\n    const dashboard = orObject(sGetDashboardById(state, id));\n\n    return {\n        id,\n        name: dashboard.displayName,\n        description: dashboard.displayDescription,\n        dashboardItems: sGetDashboardItems(state),\n        showDescription: sGetSelectedShowDescription(state),\n        starred: dashboard.starred,\n        access: orObject(dashboard.access),\n    };\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const { id, starred, showDescription } = stateProps;\n    const { dispatch } = dispatchProps;\n\n    return {\n        ...stateProps,\n        ...ownProps,\n        onStarClick: () => dispatch(tStarDashboard(id, !starred)),\n        onInfoClick: () =>\n            dispatch(acSetSelectedShowDescription(!showDescription)),\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    null,\n    mergeProps\n)(withStyles(styles)(ViewTitleBar));\n\nViewTitleBar.propTypes = {\n    id: PropTypes.string,\n    name: PropTypes.string,\n    description: PropTypes.string,\n    starred: PropTypes.bool,\n    showDescription: PropTypes.bool,\n    onInfoClick: PropTypes.func,\n};\n\nViewTitleBar.defaultProps = {\n    name: '',\n    description: '',\n    starred: false,\n    showDescription: false,\n    onInfoClick: null,\n};\n\nViewTitleBar.contextTypes = {\n    d2: PropTypes.object,\n};\n","import React from 'react';\n\nimport { colors } from '../../modules/colors';\nimport EditTitleBar from './EditTitleBar';\nimport ViewTitleBar from './ViewTitleBar';\n\nimport './TitleBar.css';\n\nconst style = {\n    title: {\n        position: 'relative',\n        fontSize: 21,\n        fontWeight: 500,\n        color: colors.black,\n        minWidth: 50,\n    },\n    description: {\n        fontSize: 14,\n        color: colors.darkGrey,\n    },\n};\n\nconst TitleBar = ({ edit }) => {\n    return (\n        <div\n            className=\"titlebar-wrapper\"\n            style={{\n                padding: '20px 15px 5px 10px',\n            }}\n        >\n            {edit ? (\n                <EditTitleBar style={style} />\n            ) : (\n                <ViewTitleBar style={style} />\n            )}\n        </div>\n    );\n};\n\nexport default TitleBar;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport i18n from '@dhis2/d2-i18n';\n\nimport * as pluginManager from './plugin';\nimport { getBaseUrl, orObject } from '../../../modules/util';\nimport { getGridItemDomId } from '../../ItemGrid/gridUtil';\n\nconst pluginCredentials = d2 => {\n    return {\n        baseUrl: getBaseUrl(d2),\n        auth: d2.Api.getApi().defaultHeaders.Authorization,\n    };\n};\n\nclass DefaultPlugin extends Component {\n    pluginCredentials = null;\n\n    constructor(props, context) {\n        super(props);\n\n        this.d2 = context.d2;\n    }\n\n    shouldPluginReload = prevProps => {\n        // TODO - fix this hack, to handle bug with multiple\n        // rerendering while switching between dashboards.\n        //\n        // To determine if the rendering is happening because of a\n        // dashboard switch, check if the item reference has changed.\n        const reloadAllowed = this.props.item === prevProps.item;\n\n        const filtersChanged = prevProps.itemFilters !== this.props.itemFilters;\n        const vis = orObject(this.props.visualization);\n        const prevVis = orObject(prevProps.visualization);\n        const visChanged =\n            vis.id !== prevVis.id || vis.activeType !== prevVis.activeType;\n\n        return reloadAllowed && (visChanged || filtersChanged);\n    };\n\n    reloadPlugin = prevProps => {\n        if (\n            pluginManager.pluginIsAvailable(\n                this.props.item,\n                this.props.visualization\n            ) &&\n            this.shouldPluginReload(prevProps)\n        ) {\n            const prevVis = orObject(prevProps.visualization);\n            const currentVis = this.props.visualization;\n\n            const useActiveType =\n                currentVis.activeType !== prevVis.activeType ||\n                currentVis.activeType !== this.props.item.type;\n\n            if (\n                useActiveType ||\n                this.props.itemFilters !== prevProps.itemFilters\n            ) {\n                pluginManager.unmount(\n                    this.props.item,\n                    prevVis.activeType || this.props.item.type\n                );\n\n                pluginManager.load(\n                    this.props.item,\n                    this.props.visualization,\n                    this.pluginCredentials,\n                    useActiveType ? currentVis.activeType : null\n                );\n            }\n        }\n    };\n\n    componentDidMount() {\n        this.pluginCredentials = pluginCredentials(this.d2);\n\n        if (\n            pluginManager.pluginIsAvailable(\n                this.props.item,\n                this.props.visualization\n            )\n        ) {\n            pluginManager.load(\n                this.props.item,\n                this.props.visualization,\n                this.pluginCredentials,\n                !this.props.editMode ? this.getActiveType() : null\n            );\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        this.reloadPlugin(prevProps);\n    }\n\n    getActiveType = () =>\n        this.props.visualization.activeType || this.props.item.type;\n\n    render() {\n        const { classes, item, visualization, style } = this.props;\n        const pluginIsAvailable = pluginManager.pluginIsAvailable(\n            item,\n            visualization\n        );\n\n        return pluginIsAvailable ? (\n            <div id={getGridItemDomId(item.id)} style={style} />\n        ) : (\n            <div className={classes.textDiv}>\n                {i18n.t('Unable to load the plugin for this item')}\n            </div>\n        );\n    }\n}\n\nDefaultPlugin.contextTypes = {\n    d2: PropTypes.object,\n};\n\nDefaultPlugin.propTypes = {\n    style: PropTypes.object,\n    item: PropTypes.object,\n    itemFilters: PropTypes.object,\n    visualization: PropTypes.object,\n};\n\nDefaultPlugin.defaultProps = {\n    style: {},\n    item: {},\n    itemFilters: {},\n    visualization: {},\n};\n\nexport default DefaultPlugin;\n","import React from 'react';\n\nexport const HEADER_HEIGHT = 45;\n\nconst ItemHeader = props => {\n    const { title, actionButtons, editMode } = props;\n\n    return (\n        <div className=\"dashboard-item-header\">\n            <div\n                className=\"dashboard-item-header-title\"\n                style={{ userSelect: editMode ? 'none' : 'text' }}\n            >\n                {title}\n            </div>\n            {actionButtons}\n        </div>\n    );\n};\n\nexport default ItemHeader;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { colors } from '../../../modules/colors';\nimport { getId } from './plugin';\nimport InterpretationsComponent from '@dhis2/d2-ui-interpretations';\n\nconst style = {\n    scrollContainer: {\n        overflowY: 'auto',\n        height: '340px',\n    },\n    line: {\n        margin: '-1px 0px 0px',\n        height: '1px',\n        border: 'none',\n        backgroundColor: colors.lightGrey,\n    },\n};\n\nclass ItemFooter extends Component {\n    render() {\n        const objectId = getId(this.props.item);\n\n        return (\n            <div className=\"dashboard-item-footer\">\n                <hr style={style.line} />\n                <div style={style.scrollContainer}>\n                    <InterpretationsComponent\n                        d2={this.context.d2}\n                        item={this.props.item}\n                        type={this.props.item.type.toLowerCase()}\n                        id={objectId}\n                        appName=\"dashboard\"\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nItemFooter.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nItemFooter.propTypes = {\n    item: PropTypes.object.isRequired,\n};\n\nexport default ItemFooter;\n","import React from 'react';\n\nimport './ItemHeaderButton.css';\n\nconst ItemHeaderButton = ({ disabled, onClick, children, style }) => {\n    return (\n        <button\n            disabled={disabled}\n            type=\"button\"\n            className=\"item-action-button\"\n            style={style}\n            onClick={onClick}\n        >\n            {children}\n        </button>\n    );\n};\n\nexport default ItemHeaderButton;\n","import React, { Component, Fragment } from 'react';\nimport MessageIcon from '@material-ui/icons/Message';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\n\nimport { extractFavorite } from './plugin';\nimport ItemHeaderButton from '../ItemHeaderButton';\nimport {\n    VISUALIZATION_TYPE_TABLE,\n    VISUALIZATION_TYPE_CHART,\n    VISUALIZATION_TYPE_MAP,\n    itemTypeMap,\n    CHART,\n    MAP,\n    REPORT_TABLE,\n    EVENT_CHART,\n    EVENT_REPORT,\n    DOMAIN_TYPE_AGGREGATE,\n} from '../../../modules/itemTypes';\nimport { colors } from '../../../modules/colors';\n\nconst style = {\n    iconBase: {\n        width: '24px',\n        height: '24px',\n        fill: colors.lightMediumGrey,\n    },\n    buttonBase: {\n        padding: '5px 6px 3px 6px',\n    },\n    buttonDisabled: {\n        padding: '5px 6px 3px 6px',\n        opacity: 0.5,\n        cursor: 'unset',\n    },\n    toggleFooterPadding: {\n        padding: '7px 6px 1px 6px',\n    },\n    border: {\n        borderRadius: '2px',\n        border: `1px solid ${colors.lightGrey}`,\n    },\n};\n\nconst baseStyle = {\n    icon: style.iconBase,\n    container: style.buttonBase,\n};\n\nconst disabledStyle = {\n    icon: style.iconBase,\n    container: style.buttonDisabled,\n};\n\nconst activeStyle = {\n    icon: { ...style.iconBase, fill: colors.royalBlue },\n    container: {\n        ...style.buttonBase,\n        backgroundColor: colors.lightBlue,\n    },\n};\n\nconst inactiveStyle = disabled => (disabled ? disabledStyle : baseStyle);\n\nconst tableBtnStyle = (activeType, disabled) =>\n    [REPORT_TABLE, EVENT_REPORT].includes(activeType)\n        ? activeStyle\n        : inactiveStyle(disabled);\n\nconst chartBtnStyle = (activeType, disabled) =>\n    [CHART, EVENT_CHART].includes(activeType)\n        ? activeStyle\n        : inactiveStyle(disabled);\n\nconst mapBtnStyle = (activeType, disabled) =>\n    [MAP].includes(activeType) ? activeStyle : inactiveStyle(disabled);\n\nexport const getItemTypeId = (itemTypeMap, visualizationType, domainType) => {\n    const item = Object.values(itemTypeMap).find(\n        item =>\n            item.visualizationType === visualizationType &&\n            item.domainType === domainType\n    );\n    return item.id;\n};\n\nclass VisualizationItemHeaderButtons extends Component {\n    render() {\n        const {\n            item,\n            onSelectVisualization,\n            activeFooter,\n            activeType,\n            onToggleFooter,\n        } = this.props;\n\n        const domainType = itemTypeMap[item.type].domainType;\n\n        const onViewTable = () =>\n            onSelectVisualization(\n                getItemTypeId(itemTypeMap, VISUALIZATION_TYPE_TABLE, domainType)\n            );\n\n        const onViewChart = () =>\n            onSelectVisualization(\n                getItemTypeId(itemTypeMap, VISUALIZATION_TYPE_CHART, domainType)\n            );\n\n        const onViewMap = () =>\n            onSelectVisualization(\n                getItemTypeId(itemTypeMap, VISUALIZATION_TYPE_MAP, domainType)\n            );\n\n        const toggleFooterBase = activeFooter ? activeStyle : baseStyle;\n\n        const toggleFooter = {\n            ...toggleFooterBase,\n            container: {\n                ...toggleFooterBase.container,\n                ...style.toggleFooterPadding,\n                ...style.border,\n            },\n        };\n\n        // disable toggle buttons\n        let disabled = false;\n\n        if (item.type === VISUALIZATION_TYPE_CHART) {\n            if (extractFavorite(item).type.match(/^YEAR_OVER_YEAR/)) {\n                disabled = true;\n            }\n        }\n\n        const tableButtonStyle = tableBtnStyle(activeType, disabled);\n        const chartButtonStyle = chartBtnStyle(activeType, disabled);\n        const mapButtonStyle = mapBtnStyle(activeType, disabled);\n\n        return (\n            <Fragment>\n                <div style={{ marginRight: 10 }}>\n                    <ItemHeaderButton\n                        style={toggleFooter.container}\n                        onClick={onToggleFooter}\n                    >\n                        <MessageIcon style={toggleFooter.icon} />\n                    </ItemHeaderButton>\n                </div>\n                <div style={style.border}>\n                    <ItemHeaderButton\n                        disabled={disabled}\n                        style={tableButtonStyle.container}\n                        onClick={onViewTable}\n                    >\n                        <TableIcon style={tableButtonStyle.icon} />\n                    </ItemHeaderButton>\n                    <ItemHeaderButton\n                        disabled={disabled}\n                        style={chartButtonStyle.container}\n                        onClick={onViewChart}\n                    >\n                        <ChartIcon style={chartButtonStyle.icon} />\n                    </ItemHeaderButton>\n                    {domainType === DOMAIN_TYPE_AGGREGATE ? (\n                        <ItemHeaderButton\n                            disabled={disabled}\n                            style={mapButtonStyle.container}\n                            onClick={onViewMap}\n                        >\n                            <MapIcon style={mapButtonStyle.icon} />\n                        </ItemHeaderButton>\n                    ) : null}\n                </div>\n            </Fragment>\n        );\n    }\n}\n\nexport default VisualizationItemHeaderButtons;\n","// Note that this ignores discrepancies in 'this', so shouldn't be used with bound functions\n// This is useful instead of lodash/memoize when we only need to memoize a single value\n// Inspiration: https://github.com/alexreardon/memoize-one\n\nconst memoizeOne = fn => {\n    let lastArgs = undefined;\n    let lastValue = undefined;\n\n    return (...args) => {\n        if (\n            lastArgs &&\n            args.length === lastArgs.length &&\n            args.every((arg, i) => arg === lastArgs[i])\n        ) {\n            return lastValue;\n        }\n        lastArgs = args;\n        lastValue = fn(...args);\n        return lastValue;\n    };\n};\n\nexport default memoizeOne;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport ChartPlugin from 'data-visualizer-plugin';\n\nimport i18n from '@dhis2/d2-i18n';\nimport uniqueId from 'lodash/uniqueId';\n\nimport DefaultPlugin from './DefaultPlugin';\nimport ItemHeader, { HEADER_HEIGHT } from '../ItemHeader';\nimport ItemFooter from './ItemFooter';\nimport VisualizationItemHeaderButtons from './ItemHeaderButtons';\nimport * as pluginManager from './plugin';\nimport { sGetVisualization } from '../../../reducers/visualizations';\nimport { sGetItemFiltersRoot } from '../../../reducers/itemFilters';\nimport {\n    acReceivedVisualization,\n    acReceivedActiveVisualization,\n} from '../../../actions/selected';\nimport { CHART, MAP, itemTypeMap } from '../../../modules/itemTypes';\nimport { colors } from '../../../modules/colors';\nimport memoizeOne from '../../../modules/memoizeOne';\nimport { getVisualizationConfig } from './plugin';\n\nconst styles = {\n    icon: {\n        width: 16,\n        height: 16,\n        marginLeft: 3,\n        cursor: 'pointer',\n        fill: colors.muiDefaultGrey,\n    },\n    title: {\n        overflow: 'hidden',\n        maxWidth: '85%',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n    },\n    textDiv: {\n        fontSize: '14px',\n        fontStretch: 'normal',\n        padding: '10px',\n        lineHeight: '20px',\n    },\n};\n\nconst applyFilters = (visualization, filters) => {\n    if (!Object.keys(filters).length) {\n        return visualization;\n    }\n\n    // deep clone objects in filters to avoid changing the visualization in the Redux store\n    const visRows = visualization.rows.map(obj => ({ ...obj }));\n    const visColumns = visualization.columns.map(obj => ({ ...obj }));\n    const visFilters = visualization.filters.map(obj => ({ ...obj }));\n\n    Object.keys(filters).forEach(dimensionId => {\n        if (filters[dimensionId]) {\n            let dimensionFound = false;\n\n            [visRows, visColumns, visFilters].forEach(dimensionObjects =>\n                dimensionObjects\n                    .filter(obj => obj.dimension === dimensionId)\n                    .forEach(obj => {\n                        dimensionFound = true;\n                        obj.items = filters[dimensionId];\n                    })\n            );\n\n            // add dimension to filters if not already present elsewhere\n            if (!dimensionFound) {\n                visFilters.push({\n                    dimension: dimensionId,\n                    items: filters[dimensionId],\n                });\n            }\n        }\n    });\n\n    return {\n        ...visualization,\n        rows: visRows,\n        columns: visColumns,\n        filters: visFilters,\n    };\n};\n\nexport class Item extends Component {\n    state = {\n        showFooter: false,\n        configLoaded: false,\n    };\n\n    constructor(props, context) {\n        super(props);\n\n        this.d2 = context.d2;\n    }\n\n    async componentDidMount() {\n        this.props.onVisualizationLoaded(\n            // TODO do not call fetch on the pluginManager, do it here as the manager will eventually be removed...\n            await pluginManager.fetch(this.props.item)\n        );\n\n        this.setState({\n            configLoaded: true,\n        });\n    }\n\n    getUniqueKey = memoizeOne(() => uniqueId());\n\n    pluginCredentials = null;\n\n    getPluginComponent = () => {\n        const visualization = getVisualizationConfig(\n            this.props.visualization,\n            this.props.item.type,\n            this.getActiveType()\n        );\n\n        if (!visualization) {\n            return (\n                <div className={this.props.classes.textDiv}>\n                    {i18n.t('No data to display')}\n                </div>\n            );\n        }\n\n        const props = {\n            ...this.props,\n            visualization,\n            style: this.getContentStyle(),\n        };\n\n        switch (this.getActiveType()) {\n            case CHART: {\n                return (\n                    <ChartPlugin\n                        d2={this.d2}\n                        config={applyFilters(\n                            props.visualization,\n                            props.itemFilters\n                        )}\n                        forDashboard={true}\n                        style={props.style}\n                    />\n                );\n            }\n            case MAP: {\n                if (props.item.type === MAP) {\n                    // apply filters only to thematic and event layers\n                    // for maps AO\n                    const mapViews = props.visualization.mapViews.map(obj => {\n                        if (\n                            obj.layer.includes('thematic') ||\n                            obj.layer.includes('event')\n                        ) {\n                            return applyFilters(obj, props.itemFilters);\n                        }\n\n                        return obj;\n                    });\n\n                    props.visualization = {\n                        ...props.visualization,\n                        mapViews,\n                    };\n                } else {\n                    // this is the case of a non map AO passed to the maps plugin\n                    // due to a visualization type switch in dashboard item\n                    // maps plugin takes care of converting the AO to a suitable format\n                    props.visualization = applyFilters(\n                        props.visualization,\n                        props.itemFilters\n                    );\n                }\n\n                return <DefaultPlugin {...props} />;\n            }\n            default: {\n                props.visualization = applyFilters(\n                    props.visualization,\n                    props.itemFilters\n                );\n\n                return <DefaultPlugin {...props} />;\n            }\n        }\n    };\n\n    onToggleFooter = () => {\n        this.setState(\n            { showFooter: !this.state.showFooter },\n            this.props.onToggleItemExpanded(this.props.item.id)\n        );\n    };\n\n    onSelectVisualization = activeType => {\n        // Cancel request if type is already active\n        if (activeType === this.getActiveType()) {\n            return;\n        }\n\n        pluginManager.unmount(this.props.item, this.getActiveType());\n\n        this.props.onSelectVisualization(\n            this.props.visualization.id,\n            this.props.item.type,\n            activeType\n        );\n    };\n\n    getActiveType = () =>\n        this.props.visualization.activeType || this.props.item.type;\n\n    pluginIsAvailable = () =>\n        pluginManager.pluginIsAvailable(\n            this.props.item,\n            this.props.visualization\n        );\n\n    getTitle = () => {\n        const { item, editMode, classes } = this.props;\n        const itemName = pluginManager.getName(item);\n\n        return (\n            <div style={{ display: 'flex', alignItems: 'center' }}>\n                <span className={classes.title} title={itemName}>\n                    {itemName}\n                </span>\n                {!editMode && this.pluginIsAvailable() ? (\n                    <a\n                        href={pluginManager.getLink(this.props.item, this.d2)}\n                        style={{ height: 16 }}\n                        title={`View in ${\n                            itemTypeMap[this.props.item.type].appName\n                        } app`}\n                    >\n                        <LaunchIcon className={classes.icon} />\n                    </a>\n                ) : null}\n            </div>\n        );\n    };\n\n    getActionButtons = () =>\n        pluginManager.pluginIsAvailable(\n            this.props.item,\n            this.props.visualization\n        ) && !this.props.editMode ? (\n            <VisualizationItemHeaderButtons\n                item={this.props.item}\n                activeFooter={this.state.showFooter}\n                activeType={this.getActiveType()}\n                onSelectVisualization={this.onSelectVisualization}\n                onToggleFooter={this.onToggleFooter}\n            />\n        ) : null;\n\n    getContentStyle = () => {\n        const { item, editMode } = this.props;\n        const PADDING_BOTTOM = 4;\n        return !editMode\n            ? {\n                  height: item.originalHeight - HEADER_HEIGHT - PADDING_BOTTOM,\n              }\n            : null;\n    };\n\n    render() {\n        const { item, editMode, itemFilters } = this.props;\n        const { showFooter } = this.state;\n\n        return (\n            <Fragment>\n                <ItemHeader\n                    title={this.getTitle()}\n                    actionButtons={this.getActionButtons()}\n                    editMode={editMode}\n                />\n                <div\n                    key={this.getUniqueKey(itemFilters)}\n                    className=\"dashboard-item-content\"\n                >\n                    {this.state.configLoaded && this.getPluginComponent()}\n                </div>\n                {!editMode && showFooter ? <ItemFooter item={item} /> : null}\n            </Fragment>\n        );\n    }\n}\n\nItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nItem.propTypes = {\n    item: PropTypes.object,\n    editMode: PropTypes.bool,\n    onToggleItemExpanded: PropTypes.func,\n    itemFilters: PropTypes.object,\n    visualization: PropTypes.object,\n};\n\nItem.defaultProps = {\n    item: {},\n    editMode: false,\n    onToggleItemExpanded: Function.prototype,\n    itemFilters: {},\n    visualization: {},\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n    itemFilters: sGetItemFiltersRoot(state),\n    visualization: sGetVisualization(\n        state,\n        pluginManager.extractFavorite(ownProps.item).id\n    ),\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onVisualizationLoaded: visualization =>\n        dispatch(acReceivedVisualization(visualization)),\n    onSelectVisualization: (id, type, activeType) =>\n        dispatch(acReceivedActiveVisualization(id, type, activeType)),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(Item));\n","import React from 'react';\nimport { colors } from '../modules/colors';\n\nconst style = {\n    backgroundColor: colors.lightGrey,\n    border: 'none',\n    height: '1px',\n    margin: '0px 0px 5px 0px',\n};\n\nconst Line = props => <hr style={style} />;\n\nexport default Line;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\n\nimport { sGetMessagesRoot } from '../../../reducers/messages';\nimport { formatDate } from '../../../modules/util';\nimport { colors } from '../../../modules/colors';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nimport './MessagesItem.css';\n\nconst PRIVATE = 'PRIVATE';\n\nconst messageTypes = {\n    [PRIVATE]: 'Private',\n    VALIDATION_RESULT: 'Validation',\n    TICKET: 'Ticket',\n    SYSTEM: 'System',\n};\n\nconst style = {\n    list: {\n        listStyleType: 'none',\n        paddingLeft: '0px',\n    },\n    seeAll: {\n        textAlign: 'center',\n        fontSize: '13px',\n        marginBottom: '5px',\n    },\n    sender: {\n        fontSize: '13px',\n        lineHeight: '15px',\n        margin: 0,\n        color: colors.darkGrey,\n    },\n    snippet: {\n        color: colors.darkGrey,\n        fontSize: '13px',\n        lineHeight: '15px',\n        maxHeight: '30px',\n        overflow: 'hidden',\n    },\n};\n\nclass MessagesItem extends Component {\n    state = {\n        uiLocale: '',\n    };\n\n    async componentDidMount() {\n        const uiLocale = await this.context.d2.currentUser.userSettings.get(\n            'keyUiLocale'\n        );\n\n        this.setState({ uiLocale });\n    }\n\n    getMessageHref = msg => {\n        const msgIdentifier = msg ? `#/${msg.messageType}/${msg.id}` : '';\n        return `${this.context.baseUrl}/dhis-web-messaging/${msgIdentifier}`;\n    };\n\n    getMessageSender = msg => {\n        const latestMsg = msg.messages.slice(-1)[0];\n        return latestMsg.sender ? latestMsg.sender.displayName : '';\n    };\n\n    getMessageItems = () => {\n        const editClass = !this.props.editMode ? 'view' : null;\n\n        return this.props.messages.map(msg => {\n            const redirectToMsg = () => {\n                if (!this.props.editMode) {\n                    document.location.href = this.getMessageHref(msg);\n                }\n            };\n\n            const sender =\n                msg.messageType === PRIVATE\n                    ? this.getMessageSender(msg)\n                    : messageTypes[msg.messageType];\n\n            const readClass = !msg.read ? 'unread' : null;\n            const latestMsg = msg.messages.slice(-1)[0];\n            const msgDate = latestMsg.lastUpdated;\n\n            return (\n                <li\n                    className={`message-item ${editClass}`}\n                    key={msg.id}\n                    onClick={redirectToMsg}\n                >\n                    <p className={`message-title ${readClass}`}>\n                        {msg.displayName} ({msg.messageCount})\n                    </p>\n                    <p style={style.sender}>\n                        {sender} - {formatDate(msgDate, this.state.uiLocale)}\n                    </p>\n                    <p style={style.snippet}>{latestMsg.text}</p>\n                </li>\n            );\n        });\n    };\n\n    render() {\n        return (\n            <Fragment>\n                <ItemHeader title={i18n.t('Messages')} />\n                <Line />\n                {this.props.messages.length > 0 && (\n                    <div className=\"dashboard-item-content\">\n                        <ul style={style.list}>{this.getMessageItems()}</ul>\n                        <div style={style.seeAll}>\n                            <a href={this.getMessageHref()}>\n                                {i18n.t('See all messages')}\n                            </a>\n                        </div>\n                    </div>\n                )}\n            </Fragment>\n        );\n    }\n}\n\nMessagesItem.contextTypes = {\n    d2: PropTypes.object,\n    baseUrl: PropTypes.string,\n};\n\nconst mapStateToProps = state => {\n    return {\n        messages: Object.values(sGetMessagesRoot(state)),\n    };\n};\n\nconst MessagesContainer = connect(\n    mapStateToProps,\n    null\n)(MessagesItem);\n\nexport default MessagesContainer;\n","import React, { Fragment } from 'react';\nimport ItemHeader from '../ItemHeader';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nconst NotSupportedItem = props => (\n    <Fragment>\n        <ItemHeader title={`Item type not supported: ${props.item.type}`} />\n        <div\n            style={{\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center',\n                height: '90%',\n            }}\n        >\n            <NotInterestedIcon\n                style={{ width: 100, height: 100, align: 'center' }}\n                color=\"disabled\"\n            />\n        </div>\n    </Fragment>\n);\n\nexport default NotSupportedItem;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { List, ListItem as MUIListItem } from 'material-ui/List';\nimport IconButton from 'material-ui/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport Line from '../../../widgets/Line';\nimport {\n    itemTypeMap,\n    getItemUrl,\n    getItemIcon,\n} from '../../../modules/itemTypes';\nimport { orArray } from '../../../modules/util';\nimport { tRemoveListItemContent } from './actions';\nimport { colors } from '../../../modules/colors';\nimport ItemHeader from '../ItemHeader';\n\nconst getItemTitle = item => {\n    return itemTypeMap[item.type].pluralTitle;\n};\n\nconst getContentItems = item =>\n    orArray(item[itemTypeMap[item.type].propName]).filter(\n        (item, index, array) =>\n            array.findIndex(el => el.id === item.id) === index\n    );\n\nconst removeContent = (handler, item, contentToRemove) => () => {\n    handler(item, contentToRemove);\n};\n\nconst ListItem = (props, context) => {\n    const { item, editMode, tRemoveListItemContent } = props;\n\n    // avoid showing duplicates\n    const contentItems = getContentItems(item);\n\n    const primaryText = contentItem => {\n        const deleteButton = (\n            <IconButton\n                style={{\n                    verticalAlign: 'text-bottom',\n                    padding: '0 12px',\n                    height: 20,\n                }}\n                iconStyle={{\n                    width: 20,\n                    height: 20,\n                    fill: colors.red,\n                }}\n                onClick={removeContent(\n                    tRemoveListItemContent,\n                    item,\n                    contentItem\n                )}\n            >\n                <DeleteIcon />\n            </IconButton>\n        );\n\n        return (\n            <div>\n                <a\n                    style={{ textDecoration: 'none' }}\n                    href={getItemUrl(item.type, contentItem, context.d2)}\n                >\n                    {contentItem.name}\n                </a>\n                {editMode ? deleteButton : null}\n            </div>\n        );\n    };\n\n    const ItemIcon = getItemIcon(item.type);\n\n    return (\n        <Fragment>\n            <ItemHeader title={getItemTitle(item)} />\n            <Line />\n            <List className=\"dashboard-item-content\">\n                {contentItems.map(contentItem => (\n                    <MUIListItem\n                        key={contentItem.id}\n                        primaryText={primaryText(contentItem)}\n                        leftIcon={<ItemIcon style={{ margin: 0 }} />}\n                        disabled={true}\n                        innerDivStyle={{ padding: '4px 4px 4px 32px' }}\n                    />\n                ))}\n            </List>\n        </Fragment>\n    );\n};\n\nListItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nconst ListItemContainer = connect(\n    null,\n    {\n        tRemoveListItemContent,\n    }\n)(ListItem);\n\nexport default ListItemContainer;\n","import {\n    acUpdateDashboardItem,\n    acRemoveDashboardItem,\n} from '../../../actions/editDashboard';\nimport { itemTypeMap } from '../../../modules/itemTypes';\n\nexport const tRemoveListItemContent = (dashboardItem, content) => dispatch => {\n    const listItemType = itemTypeMap[dashboardItem.type].propName;\n\n    const newContent = dashboardItem[listItemType].filter(\n        item => item.id !== content.id\n    );\n\n    if (newContent.length) {\n        dashboardItem[listItemType] = newContent;\n        dispatch(acUpdateDashboardItem(dashboardItem));\n    } else {\n        dispatch(acRemoveDashboardItem(dashboardItem));\n    }\n};\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport TextField from '@dhis2/d2-ui-core/text-field/TextField';\nimport {\n    Parser as RichTextParser,\n    Editor as RichTextEditor,\n} from '@dhis2/d2-ui-rich-text';\n\nimport { acUpdateDashboardItem } from '../../../actions/editDashboard';\nimport { sGetEditDashboardItems } from '../../../reducers/editDashboard';\nimport { sGetDashboardItems } from '../../../reducers/dashboards';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nconst style = {\n    textDiv: {\n        padding: '10px',\n        whiteSpace: 'pre-line',\n        lineHeight: '20px',\n    },\n    textField: {\n        fontSize: '14px',\n        fontStretch: 'normal',\n        width: '90%',\n        margin: '0 auto',\n        display: 'block',\n    },\n    container: {\n        marginBottom: '20px',\n        marginTop: '20px',\n    },\n};\n\nconst TextItem = props => {\n    const { item, editMode, text, acUpdateDashboardItem } = props;\n\n    const onChangeText = text => {\n        const updatedItem = {\n            ...item,\n            text,\n        };\n\n        acUpdateDashboardItem(updatedItem);\n    };\n\n    const viewItem = () => {\n        const textDivStyle = Object.assign({}, style.textField, style.textDiv);\n        return (\n            <div className=\"dashboard-item-content\" style={style.container}>\n                <RichTextParser style={textDivStyle}>{text}</RichTextParser>\n            </div>\n        );\n    };\n\n    const editItem = () => {\n        return (\n            <Fragment>\n                <ItemHeader title={i18n.t('Text item')} />\n                <Line />\n                <div className=\"dashboard-item-content\">\n                    <RichTextEditor onEdit={onChangeText}>\n                        <TextField\n                            value={text}\n                            multiline\n                            rows={1}\n                            rowsMax={8}\n                            fullWidth\n                            style={style.textField}\n                            placeholder={i18n.t('Add text here')}\n                            onChange={onChangeText}\n                        />\n                    </RichTextEditor>\n                </div>\n            </Fragment>\n        );\n    };\n\n    return <Fragment>{editMode ? editItem() : viewItem()}</Fragment>;\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    const items = ownProps.editMode\n        ? sGetEditDashboardItems(state)\n        : sGetDashboardItems(state);\n\n    const item = items.find(item => item.id === ownProps.item.id);\n\n    return {\n        text: item ? item.text : '',\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        acUpdateDashboardItem,\n    }\n)(TextItem);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nimport { FILTER_ORG_UNIT } from '../../../actions/itemFilters';\nimport { sGetItemFiltersRoot } from '../../../reducers/itemFilters';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nconst getIframeSrc = (appDetails, item, itemFilters) => {\n    let iframeSrc = `${appDetails.launchUrl}?dashboardItemId=${item.id}`;\n\n    if (\n        itemFilters &&\n        itemFilters[FILTER_ORG_UNIT] &&\n        itemFilters[FILTER_ORG_UNIT].length\n    ) {\n        const ouIds = itemFilters[FILTER_ORG_UNIT].map(\n            ouPath => ouPath.split('/').slice(-1)[0]\n        );\n\n        iframeSrc += `&userOrgUnit=${ouIds.join(',')}`;\n    }\n\n    return iframeSrc;\n};\n\nconst AppItem = ({ item, itemFilters }, context) => {\n    let appDetails;\n\n    const appKey = item.appKey;\n\n    if (appKey) {\n        appDetails = context.d2.system.installedApps.find(\n            app => app.key === appKey\n        );\n    }\n\n    return appDetails && appDetails.name && appDetails.launchUrl ? (\n        <Fragment>\n            <ItemHeader title={appDetails.name} />\n            <Line />\n            <iframe\n                title={appDetails.name}\n                src={getIframeSrc(appDetails, item, itemFilters)}\n                className=\"dashboard-item-content\"\n                style={{ border: 'none' }}\n            />\n        </Fragment>\n    ) : (\n        <Fragment>\n            <ItemHeader title={`${appKey} app not found`} />\n            <Line />\n            <div\n                className=\"dashboard-item-content\"\n                style={{\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    height: '90%',\n                }}\n            >\n                <NotInterestedIcon\n                    color=\"disabled\"\n                    disabled\n                    style={{ width: 100, height: 100, align: 'center' }}\n                />\n            </div>\n        </Fragment>\n    );\n};\n\nAppItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nconst mapStateToProps = state => ({\n    itemFilters: sGetItemFiltersRoot(state),\n});\n\nexport default connect(mapStateToProps)(AppItem);\n","import React, { Fragment } from 'react';\nimport i18n from '@dhis2/d2-i18n';\n\nimport { colors } from '../../../modules/colors';\nimport ItemHeader from '../ItemHeader';\n\nconst style = {\n    margin: '21px 28px',\n    fontSize: '14px',\n    lineHeight: '18px',\n    color: colors.charcoalGrey,\n};\n\nconst SpacerItem = () => {\n    return (\n        <Fragment>\n            <ItemHeader title={i18n.t('Spacer')} />\n            <p style={style}>\n                {i18n.t(\n                    'Use a spacer to create empty vertical space between other dashboard items.'\n                )}\n            </p>\n        </Fragment>\n    );\n};\n\nexport default SpacerItem;\n","import React from 'react';\n\nimport VisualizationItem from './VisualizationItem/Item';\nimport MessagesItem from './MessagesItem/Item';\nimport NotSupportedItem from './NotSupportedItem/Item';\nimport ListItem from './ListItem/Item';\nimport TextItem from './TextItem/Item';\nimport AppItem from './AppItem/Item';\nimport SpacerItem from './SpacerItem/Item';\nimport {\n    APP,\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_CHART,\n    EVENT_REPORT,\n    MESSAGES,\n    REPORTS,\n    RESOURCES,\n    USERS,\n    TEXT,\n    SPACER,\n} from '../../modules/itemTypes';\nimport { DEFAULT_STATE_ITEM_FILTERS } from '../../reducers/itemFilters';\n\nconst getGridItem = type => {\n    switch (type) {\n        case REPORT_TABLE:\n        case CHART:\n        case MAP:\n        case EVENT_CHART:\n        case EVENT_REPORT:\n            return VisualizationItem;\n        case MESSAGES:\n            return MessagesItem;\n        case REPORTS:\n        case RESOURCES:\n        case USERS:\n            return ListItem;\n        case TEXT:\n            return TextItem;\n        case SPACER:\n            return SpacerItem;\n        case APP:\n            return AppItem;\n        default:\n            return NotSupportedItem;\n    }\n};\n\nexport const Item = props => {\n    const GridItem = getGridItem(props.item.type);\n\n    return (\n        <GridItem\n            item={props.item}\n            editMode={props.editMode}\n            itemFilters={\n                props.editMode ? DEFAULT_STATE_ITEM_FILTERS : props.itemFilters\n            }\n            onToggleItemExpanded={props.onToggleItemExpanded}\n        />\n    );\n};\n","import React from 'react';\nimport ItemHeaderButton from '../Item/ItemHeaderButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { colors } from '../../modules/colors';\n\nconst style = {\n    button: {\n        position: 'absolute',\n        top: '7px',\n        right: '7px',\n        zIndex: '1000',\n    },\n    icon: {\n        fill: colors.red,\n    },\n};\n\nconst DeleteItemHeaderButton = ({ onClick }) => (\n    <ItemHeaderButton onClick={onClick} style={style.button}>\n        <DeleteIcon style={style.icon} />\n    </ItemHeaderButton>\n);\n\nexport default DeleteItemHeaderButton;\n","import React from 'react';\nimport LoadingMask from '@dhis2/d2-ui-core/loading-mask/LoadingMask.component';\n\nconst styles = {\n    modal: {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        width: '100%',\n        height: '100%',\n        zIndex: 999999998,\n        pointerEvents: 'none',\n    },\n    dark: {\n        backgroundColor: '#000000',\n        opacity: 0.2,\n        zIndex: 999999999,\n    },\n};\n\nconst ModalLoadingMask = ({ isLoading }) => {\n    if (!isLoading) {\n        return null;\n    }\n\n    return (\n        <div className=\"loading-mask-wrapper\">\n            <div style={styles.modal}>\n                <LoadingMask />\n            </div>\n            <div\n                style={{\n                    ...styles.modal,\n                    ...styles.dark,\n                }}\n            />\n        </div>\n    );\n};\n\nexport default ModalLoadingMask;\n","import React from 'react';\nimport { colors } from '../modules/colors';\n\nexport const NoContentMessage = ({ text }) => (\n    <div\n        style={{\n            padding: '50px 10px',\n            textAlign: 'center',\n            fontSize: '15px',\n            fontWeight: 500,\n            color: colors.charcoalGrey,\n        }}\n    >\n        {text}\n    </div>\n);\n\nexport default NoContentMessage;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash/debounce';\n\nconst defaultDebounceMs = 100;\nconst defaultBufferFactor = 0.25;\n\nclass ProgressiveLoadingContainer extends Component {\n    static propTypes = {\n        children: PropTypes.node.isRequired,\n        debounceMs: PropTypes.number,\n        bufferFactor: PropTypes.number,\n    };\n    static defaultProps = {\n        debounceMs: defaultDebounceMs,\n        bufferFactor: defaultBufferFactor,\n    };\n\n    state = {\n        shouldLoad: false,\n    };\n    containerRef = null;\n    shouldLoadHandler = null;\n\n    checkShouldLoad() {\n        const bufferPx = this.props.bufferFactor * window.innerHeight;\n\n        if (!this.containerRef) {\n            return;\n        }\n\n        const rect = this.containerRef.getBoundingClientRect();\n        if (\n            rect.bottom > -bufferPx &&\n            rect.top < window.innerHeight + bufferPx\n        ) {\n            this.setState({\n                shouldLoad: true,\n            });\n\n            this.removeHandler();\n        }\n    }\n\n    registerHandler() {\n        this.shouldLoadHandler = debounce(\n            () => this.checkShouldLoad(),\n            this.props.debounceMs\n        );\n\n        window.addEventListener('scroll', this.shouldLoadHandler);\n    }\n    removeHandler() {\n        window.removeEventListener('scroll', this.shouldLoadHandler);\n    }\n\n    componentDidMount() {\n        this.registerHandler();\n        this.checkShouldLoad();\n    }\n\n    componentWillUnmount() {\n        this.removeHandler();\n    }\n\n    render() {\n        const { children, debounceMs, bufferFactor, ...props } = this.props;\n        const { shouldLoad } = this.state;\n\n        return (\n            <div ref={ref => (this.containerRef = ref)} {...props}>\n                {shouldLoad && children}\n            </div>\n        );\n    }\n}\n\nexport default ProgressiveLoadingContainer;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ReactGridLayout from 'react-grid-layout';\n\nimport {\n    acUpdateDashboardLayout,\n    acRemoveDashboardItem,\n} from '../../actions/editDashboard';\nimport { Item } from '../Item/Item';\nimport { resize as pluginResize } from '../Item/VisualizationItem/plugin';\nimport { isPluginType } from '../../modules/itemTypes';\nimport {\n    GRID_ROW_HEIGHT,\n    GRID_COMPACT_TYPE,\n    ITEM_MIN_HEIGHT,\n    MARGIN,\n    getGridColumns,\n    hasShape,\n    onItemResize,\n} from './gridUtil';\nimport { orArray } from '../../modules/util';\nimport DeleteItemButton from './DeleteItemButton';\nimport ModalLoadingMask from '../../widgets/ModalLoadingMask';\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\n\nimport './ItemGrid.css';\nimport { sGetSelectedId, sGetSelectedIsLoading } from '../../reducers/selected';\nimport {\n    sGetEditDashboardRoot,\n    sGetEditDashboardItems,\n} from '../../reducers/editDashboard';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n} from '../../reducers/dashboards';\nimport ProgressiveLoadingContainer from '../Item/ProgressiveLoadingContainer';\n\n// Component\n\nconst EXPANDED_HEIGHT = 17;\n\nexport class ItemGrid extends Component {\n    state = {\n        expandedItems: {},\n    };\n\n    NO_ITEMS_MESSAGE = i18n.t('There are no items on this dashboard');\n\n    onToggleItemExpanded = clickedId => {\n        const isExpanded =\n            typeof this.state.expandedItems[clickedId] === 'boolean'\n                ? this.state.expandedItems[clickedId]\n                : false;\n\n        const expandedItems = { ...this.state.expandedItems };\n        expandedItems[clickedId] = !isExpanded;\n        this.setState({ expandedItems });\n    };\n\n    onRemoveItem = clickedId => {\n        this.props.acRemoveDashboardItem(clickedId);\n    };\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.edit) {\n            this.setState({ expandedItems: {} });\n        }\n    }\n\n    onLayoutChange = newLayout => {\n        if (this.props.edit) {\n            this.props.acUpdateDashboardLayout(newLayout);\n        }\n    };\n\n    onResizeStop = (layout, oldItem, newItem) => {\n        onItemResize(newItem.i);\n\n        const dashboardItem = this.props.dashboardItems.find(\n            item => item.id === newItem.i\n        );\n\n        // call resize on the item component if it's a plugin type\n        if (dashboardItem && isPluginType(dashboardItem)) {\n            pluginResize(dashboardItem);\n        }\n    };\n\n    onRemoveItemWrapper = id => () => this.onRemoveItem(id);\n\n    render() {\n        const { edit, isLoading, dashboardItems } = this.props;\n\n        if (!isLoading && !dashboardItems.length) {\n            return <NoContentMessage text={this.NO_ITEMS_MESSAGE} />;\n        }\n\n        const items = dashboardItems.map((item, index) => {\n            const expandedItem = this.state.expandedItems[item.id];\n            let hProp = { h: item.h };\n\n            if (expandedItem && expandedItem === true) {\n                hProp.h = item.h + EXPANDED_HEIGHT;\n            }\n\n            return Object.assign({}, item, hProp, {\n                i: item.id,\n                minH: ITEM_MIN_HEIGHT,\n            });\n        });\n\n        return (\n            <div className=\"grid-wrapper\">\n                <ModalLoadingMask isLoading={isLoading} />\n                <ReactGridLayout\n                    onLayoutChange={this.onLayoutChange}\n                    onResizeStop={this.onResizeStop}\n                    className=\"layout\"\n                    layout={items}\n                    margin={MARGIN}\n                    cols={getGridColumns()}\n                    rowHeight={GRID_ROW_HEIGHT}\n                    width={window.innerWidth}\n                    compactType={GRID_COMPACT_TYPE}\n                    isDraggable={edit}\n                    isResizable={edit}\n                    draggableCancel=\"input,textarea\"\n                >\n                    {items.map(item => {\n                        const itemClassNames = [\n                            item.type,\n                            edit ? 'edit' : 'view',\n                        ].join(' ');\n\n                        return (\n                            <ProgressiveLoadingContainer\n                                key={item.i}\n                                className={itemClassNames}\n                            >\n                                {edit ? (\n                                    <DeleteItemButton\n                                        onClick={this.onRemoveItemWrapper(\n                                            item.id\n                                        )}\n                                    />\n                                ) : null}\n                                <Item\n                                    item={item}\n                                    editMode={edit}\n                                    onToggleItemExpanded={\n                                        this.onToggleItemExpanded\n                                    }\n                                />\n                            </ProgressiveLoadingContainer>\n                        );\n                    })}\n                </ReactGridLayout>\n            </div>\n        );\n    }\n}\n\nItemGrid.propTypes = {\n    dashboardItems: PropTypes.array,\n};\n\nItemGrid.defaultProps = {\n    dashboardItems: [],\n};\n\n// Container\n\nconst mapStateToProps = (state, ownProps) => {\n    const selectedDashboard = ownProps.edit\n        ? sGetEditDashboardRoot(state)\n        : sGetDashboardById(state, sGetSelectedId(state));\n\n    const dashboardItems = ownProps.edit\n        ? sGetEditDashboardItems(state)\n        : sGetDashboardItems(state);\n\n    return {\n        isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n        dashboardItems,\n    };\n};\n\nconst mapDispatchToProps = {\n    acUpdateDashboardLayout,\n    acRemoveDashboardItem,\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const validItems = orArray(stateProps.dashboardItems).filter(hasShape);\n\n    return {\n        ...dispatchProps,\n        edit: ownProps.edit,\n        isLoading: stateProps.isLoading,\n        dashboardItems: validItems,\n        onItemResize,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n    mergeProps\n)(ItemGrid);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport i18n from '@dhis2/d2-i18n';\n\nimport { colors } from '../../modules/colors';\n\nconst styles = {\n    badgeContainer: {\n        margin: '0 4px',\n        padding: '0 16px',\n        borderRadius: '4px',\n        color: colors.white,\n        backgroundColor: '#212934',\n        height: 36,\n        display: 'flex',\n        alignItems: 'center',\n    },\n    badge: {\n        fontSize: '13px',\n        cursor: 'pointer',\n    },\n    badgeRemove: {\n        fontSize: '12px',\n        textDecoration: 'underline',\n        marginLeft: '24px',\n        cursor: 'pointer',\n    },\n};\n\nclass FilterBadge extends Component {\n    onClick = id => () => this.props.onClick(id);\n    onRemove = id => () => this.props.onRemove(id);\n\n    render() {\n        const { data } = this.props;\n\n        return (\n            <div style={styles.badgeContainer}>\n                <span style={styles.badge} onClick={this.onClick(data.id)}>\n                    {`${data.name}: ${\n                        data.values.length > 1\n                            ? i18n.t('{{count}} selected', {\n                                  count: data.values.length,\n                              })\n                            : data.values[0].name\n                    }`}\n                </span>\n                <span\n                    style={styles.badgeRemove}\n                    onClick={this.onRemove(data.id)}\n                >\n                    {i18n.t('Remove')}\n                </span>\n            </div>\n        );\n    }\n}\n\nFilterBadge.propTypes = {\n    data: PropTypes.object.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onRemove: PropTypes.func.isRequired,\n};\n\nFilterBadge.defaultProps = {\n    onClick: Function.prototype,\n    onRemove: Function.prototype,\n};\n\nexport default FilterBadge;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { createSelector } from 'reselect';\n\nimport { sGetDimensions } from '../../reducers/dimensions';\nimport { sGetItemFiltersRoot } from '../../reducers/itemFilters';\nimport { acRemoveItemFilter } from '../../actions/itemFilters';\nimport { acRemoveEditItemFilter } from '../../actions/editItemFilters';\nimport { acSetActiveModalDimension } from '../../actions/activeModalDimension';\n\nimport FilterBadge from './FilterBadge';\n\nconst styles = {\n    bar: {\n        position: 'sticky',\n        top: 130,\n        zIndex: 7,\n        padding: '8px 0',\n        display: 'flex',\n        justifyContent: 'center',\n    },\n};\n\nexport class FilterBar extends Component {\n    onBadgeRemove = id => {\n        this.props.removeItemFilter(id);\n        this.props.removeEditItemFilter(id);\n    };\n\n    onBadgeClick = id => {\n        this.props.setActiveModalDimension({\n            id,\n            name: this.props.filters.find(item => item.id === id).name,\n        });\n    };\n\n    render() {\n        const { filters } = this.props;\n\n        return filters.length ? (\n            <div style={styles.bar}>\n                {filters.map(filter => (\n                    <FilterBadge\n                        key={filter.id}\n                        data={filter}\n                        onClick={this.onBadgeClick}\n                        onRemove={this.onBadgeRemove}\n                    />\n                ))}\n            </div>\n        ) : null;\n    }\n}\n\nFilterBar.propTypes = {\n    filters: PropTypes.array.isRequired,\n    removeItemFilter: PropTypes.func.isRequired,\n    removeEditItemFilter: PropTypes.func.isRequired,\n};\n\nFilterBar.defaultProps = {\n    filters: [],\n    removeItemFIlter: Function.prototype,\n    removeEditItemFilter: Function.prototype,\n};\n\n// simplify the filters structure to:\n// [{ id: 'pe', name: 'Period', values: [{ id: 2019: name: '2019' }, {id: 'LAST_MONTH', name: 'Last month' }]}, ...]\nconst filtersSelector = createSelector(\n    [sGetItemFiltersRoot, sGetDimensions],\n    (filters, dimensions) =>\n        Object.keys(filters).reduce((arr, id) => {\n            arr.push({\n                id: id,\n                name: dimensions[id].name,\n                values: filters[id].map(value => ({\n                    id: value.id,\n                    name: value.displayName || value.name,\n                })),\n            });\n\n            return arr;\n        }, [])\n);\n\nconst mapStateToProps = state => ({\n    filters: filtersSelector(state),\n});\n\nexport default connect(\n    mapStateToProps,\n    {\n        setActiveModalDimension: acSetActiveModalDimension,\n        removeItemFilter: acRemoveItemFilter,\n        removeEditItemFilter: acRemoveEditItemFilter,\n    }\n)(FilterBar);\n","import React, { Fragment } from 'react';\nimport TitleBar from '../TitleBar/TitleBar';\nimport ItemGrid from '../ItemGrid/ItemGrid';\nimport FilterBar from '../FilterBar/FilterBar';\n\nexport const DashboardContent = props => (\n    <Fragment>\n        <TitleBar edit={props.editMode} />\n        <FilterBar />\n        <ItemGrid edit={props.editMode} />\n    </Fragment>\n);\n\nexport default DashboardContent;\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport isEmpty from 'lodash/isEmpty';\nimport i18n from '@dhis2/d2-i18n';\n\nimport {\n    sGetAllDashboards,\n    sDashboardsIsFetching,\n} from '../../reducers/dashboards';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport DashboardsBar from '../ControlBar/DashboardsBar';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport DashboardContent from './DashboardContent';\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nexport const Content = ({ hasDashboardContent, dashboardsIsEmpty }) => {\n    const msg = dashboardsIsEmpty\n        ? i18n.t(\n              'No dashboards found. Use the + button to create a new dashboard.'\n          )\n        : i18n.t('Requested dashboard not found');\n\n    return hasDashboardContent ? (\n        <DashboardContent editMode={false} />\n    ) : (\n        <NoContentMessage text={msg} />\n    );\n};\n\nexport const ViewDashboard = ({ id, dashboardsIsEmpty, dashboardsLoaded }) => {\n    const hasDashboardContent = id && !dashboardsIsEmpty;\n    const contentNotReady = !dashboardsLoaded || id === null;\n\n    return (\n        <Fragment>\n            <DashboardsBar />\n            <DashboardVerticalOffset />\n            <div className=\"dashboard-wrapper\">\n                {contentNotReady ? null : (\n                    <Content\n                        hasDashboardContent={hasDashboardContent}\n                        dashboardsIsEmpty={dashboardsIsEmpty}\n                    />\n                )}\n            </div>\n        </Fragment>\n    );\n};\n\nconst mapStateToProps = state => {\n    const dashboards = sGetAllDashboards(state);\n\n    return {\n        id: sGetSelectedId(state),\n        dashboardsIsEmpty: isEmpty(dashboards),\n        dashboardsLoaded: !sDashboardsIsFetching(state),\n    };\n};\n\nexport default connect(mapStateToProps)(ViewDashboard);\n","import React from 'react';\nimport RaisedButton from 'material-ui/RaisedButton';\n\nimport './PrimaryButton.css';\n\nconst PrimaryButton = props => {\n    const { onClick, children, disabled, style } = props;\n    const label = typeof children === 'string' ? children : null;\n    const classes = ['d2ui-primary-button', disabled ? 'disabled' : null].join(\n        ' '\n    );\n\n    return (\n        <RaisedButton\n            className={classes}\n            style={style}\n            primary={true}\n            onClick={onClick}\n            label={label}\n            disabled={disabled}\n        />\n    );\n};\n\nexport default PrimaryButton;\n","import React from 'react';\nimport MuiFlatButton from 'material-ui/FlatButton';\nimport { colors } from '../modules/colors';\n\nconst defaultStyles = {\n    color: colors.royalBlue,\n    backgroundColor: 'transparent',\n    minWidth: '30px',\n};\n\nconst FlatButton = ({ onClick, children, style, disabled }) => {\n    const label = typeof children === 'string' ? children : null;\n    const classes = ['d2ui-flat-button', disabled ? 'disabled' : null].join(\n        ' '\n    );\n\n    const combinedStyle = Object.assign({}, defaultStyles, style);\n\n    return (\n        <MuiFlatButton\n            className={classes}\n            style={combinedStyle}\n            onClick={onClick}\n            label={label}\n            disabled={disabled}\n        >\n            {typeof children !== 'string' ? children : null}\n        </MuiFlatButton>\n    );\n};\n\nexport default FlatButton;\n","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport Dialog from 'material-ui/Dialog';\n\nimport FlatButton from '../../widgets/FlatButton';\nimport PrimaryButton from '../../widgets/PrimaryButton';\n\nexport const ConfirmDeleteDialog = ({\n    dashboardName,\n    onDeleteConfirmed,\n    onContinueEditing,\n    open,\n}) => {\n    const actions = [\n        <FlatButton onClick={onDeleteConfirmed}>{i18n.t('Delete')}</FlatButton>,\n        <PrimaryButton onClick={onContinueEditing}>\n            {i18n.t('Continue editing')}\n        </PrimaryButton>,\n    ];\n\n    return (\n        <Dialog\n            title={i18n.t('Confirm delete dashboard')}\n            actions={actions}\n            modal={true}\n            open={open}\n        >\n            {i18n.t(\n                'Are you sure you want to delete dashboard \"{{ dashboardName }}\"?',\n                { dashboardName }\n            )}\n        </Dialog>\n    );\n};\n\nexport default ConfirmDeleteDialog;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport ControlBar from '@dhis2/d2-ui-core/control-bar/ControlBar';\nimport TranslationDialog from '@dhis2/d2-ui-translation-dialog';\n\nimport PrimaryButton from '../../widgets/PrimaryButton';\nimport FlatButton from '../../widgets/FlatButton';\nimport ConfirmDeleteDialog from './ConfirmDeleteDialog';\nimport {\n    tSaveDashboard,\n    acClearEditDashboard,\n} from '../../actions/editDashboard';\nimport {\n    tDeleteDashboard,\n    acSetDashboardDisplayName,\n} from '../../actions/dashboards';\nimport {\n    sGetEditDashboardRoot,\n    sGetIsNewDashboard,\n} from '../../reducers/editDashboard';\nimport {\n    CONTROL_BAR_ROW_HEIGHT,\n    MIN_ROW_COUNT,\n    getControlBarHeight,\n} from './controlBarDimensions';\nimport { apiFetchDashboard } from '../../api/dashboards';\n\nimport './ControlBar.css';\n\nconst buttonBarStyle = {\n    height: CONTROL_BAR_ROW_HEIGHT,\n    paddingTop: '15px',\n    marginLeft: '15px',\n    marginRight: '15px',\n};\n\nexport class EditBar extends Component {\n    state = {\n        translationDialogIsOpen: false,\n        dashboardModel: undefined,\n        confirmDeleteDialogOpen: false,\n        redirectUrl: undefined,\n    };\n\n    onConfirmDelete = () => {\n        this.setState({ confirmDeleteDialogOpen: true });\n    };\n\n    onSave = () => {\n        this.props.onSave().then(newId => {\n            this.setState({ redirectUrl: `/${newId}` });\n        });\n    };\n\n    onDiscard = () => {\n        this.props.onDiscardChanges();\n        const redirectUrl = this.props.dashboardId\n            ? `/${this.props.dashboardId}`\n            : '/';\n        this.setState({ redirectUrl });\n    };\n\n    onContinueEditing = () => {\n        this.setState({ confirmDeleteDialogOpen: false });\n    };\n\n    onDeleteConfirmed = () => {\n        this.setState({ confirmDeleteDialogOpen: false });\n        this.props.onDelete(this.props.dashboardId).then(() => {\n            this.setState({ redirectUrl: '/' });\n        });\n    };\n\n    onTranslationsSaved = async translations => {\n        if (translations && translations.length) {\n            const dbLocale = await this.context.d2.currentUser.userSettings.get(\n                'keyDbLocale'\n            );\n\n            const translation = translations.find(\n                t => t.locale === dbLocale && t.property === 'NAME'\n            );\n\n            if (translation && translation.value) {\n                this.props.onTranslate(\n                    this.props.dashboardId,\n                    translation.value\n                );\n            }\n        }\n    };\n\n    fetchDashboardModel = () => {\n        if (this.props.dashboardId && !this.state.dashboardModel) {\n            apiFetchDashboard(this.props.dashboardId).then(dashboardModel =>\n                this.setState({ dashboardModel })\n            );\n        }\n    };\n\n    componentDidMount() {\n        this.fetchDashboardModel();\n    }\n\n    componentDidUpdate() {\n        this.fetchDashboardModel();\n    }\n\n    toggleTranslationDialog = () => {\n        this.setState({\n            translationDialogIsOpen: !this.state.translationDialogIsOpen,\n        });\n    };\n\n    confirmDeleteDialog = () =>\n        this.props.deleteAccess && this.props.dashboardId ? (\n            <ConfirmDeleteDialog\n                dashboardName={this.props.dashboardName}\n                onDeleteConfirmed={this.onDeleteConfirmed}\n                onContinueEditing={this.onContinueEditing}\n                open={this.state.confirmDeleteDialogOpen}\n            />\n        ) : null;\n\n    translationDialog = () =>\n        this.state.dashboardModel && this.state.dashboardModel.id ? (\n            <TranslationDialog\n                className=\"translation-dialog\"\n                d2={this.context.d2}\n                open={this.state.translationDialogIsOpen}\n                onRequestClose={this.toggleTranslationDialog}\n                objectToTranslate={this.state.dashboardModel}\n                fieldsToTranslate={['name', 'description']}\n                // TODO handle messages in snackbar\n                onTranslationSaved={this.onTranslationsSaved}\n                onTranslationError={err =>\n                    console.log('translation update error', err)\n                }\n            />\n        ) : null;\n\n    render() {\n        if (this.state.redirectUrl) {\n            return <Redirect to={this.state.redirectUrl} />;\n        }\n\n        const { dashboardId, deleteAccess, updateAccess } = this.props;\n        const controlBarHeight = getControlBarHeight(MIN_ROW_COUNT, false);\n\n        const discardBtnText = updateAccess\n            ? i18n.t('Exit without saving')\n            : i18n.t('Go to dashboards');\n\n        return (\n            <Fragment>\n                <ControlBar\n                    height={controlBarHeight}\n                    editMode={true}\n                    expandable={false}\n                >\n                    <div style={buttonBarStyle}>\n                        {updateAccess ? (\n                            <div className=\"left-controls\">\n                                <span style={{ marginRight: '15px' }}>\n                                    <PrimaryButton\n                                        className=\"save-button\"\n                                        onClick={this.onSave}\n                                    >\n                                        {i18n.t('Save changes')}\n                                    </PrimaryButton>\n                                </span>\n                                {dashboardId && deleteAccess ? (\n                                    <FlatButton\n                                        className=\"delete-button\"\n                                        onClick={this.onConfirmDelete}\n                                    >\n                                        {i18n.t('Delete')}\n                                    </FlatButton>\n                                ) : null}\n                                {dashboardId ? (\n                                    <FlatButton\n                                        className=\"translate-button\"\n                                        onClick={this.toggleTranslationDialog}\n                                    >\n                                        {i18n.t('Translate')}\n                                    </FlatButton>\n                                ) : null}\n                            </div>\n                        ) : null}\n\n                        <div className=\"right-controls\">\n                            <FlatButton\n                                className=\"discard-button\"\n                                onClick={this.onDiscard}\n                            >\n                                {discardBtnText}\n                            </FlatButton>\n                        </div>\n                    </div>\n                </ControlBar>\n                {this.translationDialog()}\n                {this.confirmDeleteDialog()}\n            </Fragment>\n        );\n    }\n}\n\nEditBar.contextTypes = {\n    d2: PropTypes.object,\n};\n\nconst mapStateToProps = state => {\n    const dashboard = sGetEditDashboardRoot(state);\n\n    let deleteAccess;\n    let updateAccess;\n    if (sGetIsNewDashboard(state)) {\n        deleteAccess = true;\n        updateAccess = true;\n    } else {\n        updateAccess = dashboard.access ? dashboard.access.update : false;\n        deleteAccess = dashboard.access ? dashboard.access.delete : false;\n    }\n\n    return {\n        dashboardId: dashboard.id,\n        dashboardName: dashboard.name,\n        deleteAccess,\n        updateAccess,\n    };\n};\n\nconst mapDispatchToProps = dispatch => ({\n    onSave: () => dispatch(tSaveDashboard()).then(id => id),\n    onDelete: id => dispatch(tDeleteDashboard(id)),\n    onDiscardChanges: () => dispatch(acClearEditDashboard()),\n    onTranslate: (id, value) => dispatch(acSetDashboardDisplayName(id, value)),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(EditBar);\n","import React, { Fragment, Component } from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\n\nimport { acSetEditDashboard } from '../../actions/editDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n    sDashboardsIsFetching,\n} from '../../reducers/dashboards';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport DashboardContent from './DashboardContent';\nimport EditBar from '../ControlBar/EditBar';\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nexport const Content = ({ updateAccess }) => {\n    return updateAccess ? (\n        <DashboardContent editMode={true} />\n    ) : (\n        <NoContentMessage text={i18n.t('No access')} />\n    );\n};\nexport class EditDashboard extends Component {\n    state = {\n        initialized: false,\n    };\n\n    initEditDashboard = () => {\n        if (this.props.dashboard) {\n            this.setState({ initialized: true });\n            this.props.setEditDashboard(this.props.dashboard, this.props.items);\n        }\n    };\n\n    componentDidMount() {\n        this.initEditDashboard();\n    }\n\n    componentDidUpdate() {\n        if (!this.state.initialized) {\n            this.initEditDashboard();\n        }\n    }\n\n    getDashboardContent = () => {\n        const contentNotReady =\n            !this.props.dashboardsLoaded || this.props.id === null;\n\n        return (\n            <div className=\"dashboard-wrapper\">\n                {contentNotReady ? null : (\n                    <Content updateAccess={this.props.updateAccess} />\n                )}\n            </div>\n        );\n    };\n\n    render() {\n        return (\n            <Fragment>\n                <EditBar />\n                <DashboardVerticalOffset editMode={true} />\n                {this.getDashboardContent()}\n            </Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    const id = sGetSelectedId(state);\n    const dashboard = id ? sGetDashboardById(state, id) : null;\n\n    const updateAccess =\n        dashboard && dashboard.access ? dashboard.access.update : false;\n\n    return {\n        dashboard,\n        id,\n        updateAccess,\n        items: sGetDashboardItems(state),\n        dashboardsLoaded: !sDashboardsIsFetching(state),\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        setEditDashboard: acSetEditDashboard,\n    }\n)(EditDashboard);\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\n\nimport { acSetEditNewDashboard } from '../../actions/editDashboard';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport EditBar from '../ControlBar/EditBar';\nimport DashboardContent from './DashboardContent';\n\nclass NewDashboard extends Component {\n    componentDidMount() {\n        this.props.setNewDashboard();\n    }\n\n    render() {\n        return (\n            <Fragment>\n                <EditBar />\n                <DashboardVerticalOffset editMode={true} />\n                <div className=\"dashboard-wrapper\">\n                    <DashboardContent editMode={true} />\n                </div>\n            </Fragment>\n        );\n    }\n}\n\nexport default connect(\n    null,\n    {\n        setNewDashboard: acSetEditNewDashboard,\n    }\n)(NewDashboard);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { tSelectDashboard } from '../../actions/dashboards';\nimport { sDashboardsIsFetching } from '../../reducers/dashboards';\nimport { EDIT, NEW } from './dashboardModes';\nimport ViewDashboard from './ViewDashboard';\nimport EditDashboard from './EditDashboard';\nimport NewDashboard from './NewDashboard';\n\nclass Dashboard extends Component {\n    setDashboard = () => {\n        if (this.props.dashboardsLoaded) {\n            const id = this.props.match.params.dashboardId || null;\n            this.props.selectDashboard(id);\n        }\n    };\n\n    componentDidMount() {\n        this.setDashboard();\n    }\n\n    componentDidUpdate() {\n        this.setDashboard();\n    }\n\n    render() {\n        switch (this.props.mode) {\n            case EDIT:\n                return <EditDashboard />;\n            case NEW:\n                return <NewDashboard />;\n            default:\n                return <ViewDashboard />;\n        }\n    }\n}\n\nconst mapStateToProps = state => {\n    return { dashboardsLoaded: !sDashboardsIsFetching(state) };\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        selectDashboard: tSelectDashboard,\n    }\n)(Dashboard);\n","export const EDIT = 'edit';\nexport const NEW = 'new';\nexport const VIEW = 'view';\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport HeaderBar from '@dhis2/ui/widgets/HeaderBar';\n\nimport { EDIT, VIEW, NEW } from './Dashboard/dashboardModes';\nimport { acReceivedUser } from '../actions/user';\nimport { tFetchDashboards } from '../actions/dashboards';\nimport { tSetControlBarRows } from '../actions/controlBar';\nimport { tSetDimensions } from '../actions/dimensions';\nimport Dashboard from './Dashboard/Dashboard';\nimport SnackbarMessage from './SnackbarMessage/SnackbarMessage';\n\nimport 'typeface-roboto';\nimport './App.css';\n\nexport class App extends Component {\n    componentDidMount() {\n        this.props.setCurrentUser(this.props.d2.currentUser);\n        this.props.fetchDashboards();\n        this.props.setControlBarRows();\n        this.props.setDimensions(this.props.d2);\n    }\n\n    getChildContext() {\n        return { baseUrl: this.props.baseUrl, i18n, d2: this.props.d2 };\n    }\n\n    render() {\n        return (\n            <div className=\"app-wrapper\">\n                <div className=\"dashboard-header-bar\">\n                    <HeaderBar appName={i18n.t('Dashboard')} />\n                </div>\n                <Router>\n                    <Switch>\n                        <Route\n                            exact\n                            path=\"/\"\n                            render={props => (\n                                <Dashboard {...props} mode={VIEW} />\n                            )}\n                        />\n                        <Route\n                            exact\n                            path=\"/new\"\n                            render={props => (\n                                <Dashboard {...props} mode={NEW} />\n                            )}\n                        />\n                        <Route\n                            exact\n                            path=\"/:dashboardId\"\n                            render={props => (\n                                <Dashboard {...props} mode={VIEW} />\n                            )}\n                        />\n                        <Route\n                            exact\n                            path=\"/:dashboardId/edit\"\n                            render={props => (\n                                <Dashboard {...props} mode={EDIT} />\n                            )}\n                        />\n                    </Switch>\n                </Router>\n                <SnackbarMessage />\n            </div>\n        );\n    }\n}\n\nApp.childContextTypes = {\n    baseUrl: PropTypes.string,\n    i18n: PropTypes.object,\n    d2: PropTypes.object,\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setCurrentUser: currentUser => dispatch(acReceivedUser(currentUser)),\n        fetchDashboards: () => dispatch(tFetchDashboards()),\n        setControlBarRows: () => dispatch(tSetControlBarRows()),\n        setDimensions: d2 => dispatch(tSetDimensions(d2)),\n    };\n};\n\nexport default connect(\n    null,\n    mapDispatchToProps\n)(App);\n","import { RECEIVED_USER } from '../reducers/user';\n\nexport const acReceivedUser = value => ({\n    type: RECEIVED_USER,\n    value,\n});\n","//------------------------------------------------------------------------------\n// <auto-generated>\n// This code was generated by d2-i18n-generate.\n//\n// Changes to this file may cause incorrect behavior and will be lost if\n// the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\nimport i18n from '@dhis2/d2-i18n';\nimport moment from 'moment';\nimport 'moment/locale/lo';\nimport 'moment/locale/sv';\nimport 'moment/locale/ur';\nimport 'moment/locale/vi';\n\nimport enTranslations from './en/translations.json';\nimport loTranslations from './lo/translations.json';\nimport svTranslations from './sv/translations.json';\nimport urTranslations from './ur/translations.json';\nimport viTranslations from './vi/translations.json';\n\nconst namespace = 'dashboards-app';\nmoment.locale('en');\n\ni18n.addResources('en', namespace, enTranslations);\ni18n.addResources('lo', namespace, loTranslations);\ni18n.addResources('sv', namespace, svTranslations);\ni18n.addResources('ur', namespace, urTranslations);\ni18n.addResources('vi', namespace, viTranslations);\n\ni18n.setDefaultNamespace(namespace);\ni18n.changeLanguage('en');\n\nexport default i18n;\n","/** @module reducers/selected */\nimport { validateReducer } from '../modules/util';\n\nexport const SET_STYLE = 'SET_STYLE';\n\nexport const DEFAULT_STATE_STYLE = 'LIST';\n\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\nconst style = (state = DEFAULT_STATE_STYLE, action) => {\n    switch (action.type) {\n        case SET_STYLE:\n            return validateReducer(action.value, DEFAULT_STATE_STYLE);\n        default:\n            return state;\n    }\n};\n\nexport default style;\n\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\nexport const sGetStyleRoot = state => state.style;\n","import { combineReducers } from 'redux';\nimport arraySort from 'd2-utilizr/lib/arraySort';\n\nimport dashboards, { sGetDashboardsRoot } from './dashboards';\nimport selected from './selected';\nimport dashboardsFilter, {\n    ownerData,\n    sGetFilterName,\n    sGetFilterOrder,\n    sGetFilterOwner,\n} from './dashboardsFilter';\nimport controlBar from './controlBar';\nimport visualizations from './visualizations';\nimport editDashboard from './editDashboard';\nimport messages from './messages';\nimport user from './user';\nimport snackbar from './snackbar';\nimport itemFilters from './itemFilters';\nimport editItemFilters from './editItemFilters';\nimport style from './style';\nimport dimensions from './dimensions';\nimport settings from './settings';\nimport activeModalDimension from './activeModalDimension';\n\nconst USER = 'system';\n\n// Reducers\n\nexport default combineReducers({\n    dashboards,\n    selected,\n    dashboardsFilter,\n    controlBar,\n    visualizations,\n    messages,\n    user,\n    editDashboard,\n    itemFilters,\n    editItemFilters,\n    style,\n    snackbar,\n    dimensions,\n    settings,\n    activeModalDimension,\n});\n\n// Map constants to data\nconst mapConstToData = {\n    NAME: 'name',\n    ITEMS: 'numberOfItems',\n    CREATED: 'created',\n    OWNER: 'owner',\n};\n\n// Selectors\n\n// Filter dashboards by name\nexport const sFilterDashboardsByName = (dashboards, filter) =>\n    dashboards.filter(d =>\n        d.displayName.toLowerCase().includes(filter.toLowerCase())\n    );\n\n// Filter dashboards by owner, TODO FIXME\nexport const sFilterDashboardsByOwner = (dashboards, filter) => {\n    const ME = ownerData[1]; // TODO\n    const OTHERS = ownerData[2]; // TODO\n\n    switch (filter) {\n        case ME:\n            return dashboards.filter(d => d.owner === USER);\n        case OTHERS:\n            return dashboards.filter(d => d.owner !== USER);\n        default:\n            return dashboards;\n    }\n};\n\n// Filter dashboards by order\nexport const sFilterDashboardsByOrder = (dashboards, filter) => {\n    const filterValues = filter.split(':');\n\n    const key = filterValues[0];\n    const direction = filterValues[1];\n\n    return arraySort(dashboards, direction, mapConstToData[key]);\n};\n\n// Selectors dependency level 2\n\n// Get filtered dashboards\nexport const sGetFilteredDashboards = state => {\n    const dashboards = sGetDashboardsRoot(state);\n\n    const nameFilter = sGetFilterName(state);\n    const ownerFilter = sGetFilterOwner(state);\n    const orderFilter = sGetFilterOrder(state);\n\n    return sFilterDashboardsByOrder(\n        sFilterDashboardsByName(\n            sFilterDashboardsByOwner(dashboards, ownerFilter),\n            nameFilter\n        ),\n        orderFilter\n    );\n};\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport reducer from './reducers';\n\nconst configureStore = () => {\n    const middleware = [thunk];\n\n    // Enable Redux devtools if extension is installed instead of redux-logger\n    const composeEnhancers =\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n    if (\n        !window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ &&\n        process.env.NODE_ENV !== 'production'\n    ) {\n        middleware.push(createLogger());\n    }\n\n    return createStore(\n        reducer,\n        composeEnhancers(applyMiddleware(...middleware))\n    );\n};\n\nexport default configureStore;\n","import getMuiTheme from 'material-ui/styles/getMuiTheme';\n\nimport { colors } from './colors';\n\nexport const muiTheme = () => {\n    const raisedButton = {\n        primaryColor: colors.royalBlue,\n        disabledColor: colors.paleBlue,\n        disabledTextColor: colors.lightMediumGrey,\n    };\n\n    const theme = getMuiTheme({ raisedButton });\n\n    return theme;\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport { MuiThemeProvider as V0MuiThemeProvider } from 'material-ui';\nimport { init as d2Init, config, getManifest, getUserSettings } from 'd2';\nimport dhis2theme from '@dhis2/d2-ui-core/theme/mui3.theme';\n\n// temporary workaround until new ui headerbar is ready\nimport 'material-design-icons/iconfont/material-icons.css';\nimport './reset.css';\n\nimport App from './components/App';\nimport './index.css';\nimport i18n from './locales';\nimport configureStore from './configureStore';\nimport { muiTheme } from './modules/theme';\n\nconst v1Theme = () => createMuiTheme({ ...dhis2theme });\n\nconst configI18n = userSettings => {\n    const uiLocale = userSettings.keyUiLocale;\n\n    if (uiLocale && uiLocale !== 'en') {\n        config.i18n.sources.add(`./i18n/i18n_module_${uiLocale}.properties`);\n    }\n\n    config.i18n.sources.add('./i18n/i18n_module_en.properties');\n    i18n.changeLanguage(uiLocale);\n};\n\nconst init = async () => {\n    const manifest = await getManifest('./manifest.webapp');\n\n    // log app info\n    console.info(\n        `Dashboards app, v${manifest.version}, ${\n            manifest.manifest_generated_at\n        }`\n    );\n\n    const isProd = process.env.NODE_ENV === 'production';\n\n    if (\n        !isProd &&\n        (!process.env.REACT_APP_DHIS2_BASE_URL ||\n            !process.env.REACT_APP_DHIS2_AUTHORIZATION)\n    ) {\n        throw new Error(\n            'Missing env variables REACT_APP_DHIS2_BASE_URL and REACT_APP_DHIS2_AUTHORIZATION'\n        );\n    }\n\n    // api config\n    const baseUrl = isProd\n        ? manifest.activities.dhis.href\n        : process.env.REACT_APP_DHIS2_BASE_URL;\n    const authorization = process.env.REACT_APP_DHIS2_AUTHORIZATION;\n\n    config.baseUrl = `${baseUrl}/api/${manifest.dhis2.apiVersion}`;\n    config.headers = isProd ? null : { Authorization: authorization };\n    config.schemas = [\n        'chart',\n        'map',\n        'report',\n        'reportTable',\n        'eventChart',\n        'eventReport',\n        'dashboard',\n        'organisationUnit',\n        'userGroup',\n    ];\n\n    getUserSettings()\n        .then(configI18n)\n        .then(() => d2Init(config))\n        .then(initializedD2 => {\n            ReactDOM.render(\n                <Provider store={configureStore()}>\n                    <MuiThemeProvider theme={v1Theme()}>\n                        <V0MuiThemeProvider muiTheme={muiTheme()}>\n                            <App baseUrl={baseUrl} d2={initializedD2} />\n                        </V0MuiThemeProvider>\n                    </MuiThemeProvider>\n                </Provider>,\n                document.getElementById('root')\n            );\n        });\n};\n\ninit();\n","import isObject from 'lodash/isObject';\n\n// validation\nexport function orNull(param) {\n    return param === undefined ? null : param;\n}\n\nexport function orArray(param) {\n    return Array.isArray(param) ? param : [];\n}\n\nexport function orObject(param) {\n    return isObject(param) ? param : {};\n}\n\n// array\nexport function arrayGetById(array, id) {\n    return array.find(item => item.id === id);\n}\n\n// object\nexport function arrayToIdMap(array) {\n    return array.reduce((obj, item) => {\n        obj[item.id] = item;\n        return obj;\n    }, {});\n}\n\n// date\nexport function getDate() {\n    const y = Math.floor(Math.random() * 3) + 2015;\n    const M = Math.floor(Math.random() * 12) + 1;\n    const d = Math.floor(Math.random() * 28) + 1;\n    // const h = Math.floor(Math.random() * 23) + 1;\n    // const m = Math.floor(Math.random() * 59) + 1;\n    // const s = Math.floor(Math.random() * 59) + 1;\n\n    return new Date(`${y}-${M}-${d}`)\n        .toJSON()\n        .replace('T', ' ')\n        .substr(0, 10);\n}\n\nexport const formatDate = (value, uiLocale) => {\n    if (typeof global.Intl !== 'undefined' && Intl.DateTimeFormat) {\n        const locale = uiLocale || 'en';\n        return new Intl.DateTimeFormat(locale, {\n            year: 'numeric',\n            month: 'short',\n            day: 'numeric',\n        }).format(new Date(value));\n    }\n\n    return value.substr(0, 19).replace('T', ' ');\n};\n\n/**\n * Sorts an array of objects based on provided date property\n *\n * @param {Array} items Array of objects\n * @param {String} dateProp Name of the date property to be used for sorting\n * @param {Boolean} ascending Whether to sort ascending or descending\n */\nexport const sortByDate = (items, dateProp, ascending = true) => {\n    const values = Object.values(items);\n\n    values.sort((a, b) => {\n        const aDate = new Date(a[dateProp]);\n        const bDate = new Date(b[dateProp]);\n\n        return ascending ? aDate - bDate : bDate - aDate;\n    });\n\n    return values;\n};\n\n// reducer validator\nexport const validateReducer = (value, defaultValue) =>\n    value === undefined || value === null ? defaultValue : value;\n\nexport const getBaseUrl = d2 => {\n    const api = d2.Api.getApi();\n    const idx = api.baseUrl.indexOf('/api');\n    return idx > -1 ? api.baseUrl.slice(0, idx) : api.baseUrl;\n};\n\nexport const getWithoutId = object => ({\n    ...object,\n    id: undefined,\n});\n"],"sourceRoot":""}
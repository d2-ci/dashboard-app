{"version":3,"sources":["modules/itemTypes.js","components/ItemSelector/styles/CategorizedMenuGroup.module.css","components/Item/styles/DeleteItemButton.module.css","api/metadata.js","components/Item/ListItem/Item.module.css","modules/util.js","components/ControlBar/styles/DashboardsBar.module.css","components/ItemSelector/styles/ContentMenuItem.module.css","components/Item/styles/ItemHeader.module.css","reducers/user.js","reducers/dashboards.js","reducers/selected.js","reducers/visualizations.js","actions/visualizations.js","reducers/currentVisualizationViews.js","actions/currentVisualizationViews.js","api/index.js","api/dashboards.js","reducers/messages.js","api/messages.js","reducers/snackbar.js","actions/snackbar.js","components/SnackbarMessage/SnackbarMessage.js","actions/selected.js","api/localStorage.js","components/Item/MessagesItem/actions.js","reducers/editDashboard.js","reducers/editItemFilters.js","reducers/itemFilters.js","actions/itemFilters.js","actions/editItemFilters.js","api/editDashboard.js","actions/editDashboard.js","actions/dashboards.js","reducers/controlBar.js","api/controlBar.js","actions/controlBar.js","reducers/dimensions.js","reducers/settings.js","actions/dimensions.js","components/ControlBar/ShowMoreButton.js","components/ControlBar/controlBarDimensions.js","components/ControlBar/ControlBar.js","icons/Star.js","api/dataStatistics.js","components/ControlBar/DashboardItemChip.js","icons/AddCircle.js","icons/Clear.js","components/ControlBar/ClearButton.js","reducers/dashboardsFilter.js","components/ControlBar/Filter.js","components/ControlBar/DashboardsBar.js","actions/dashboardsFilter.js","components/Dashboard/DashboardVerticalOffset.js","components/ItemSelector/HeaderMenuItem.js","icons/Launch.js","components/ItemSelector/ContentMenuItem.js","components/ItemSelector/selectableItems.js","components/ItemSelector/CategorizedMenuGroup.js","components/ItemSelector/actions.js","components/ItemSelector/SinglesMenuGroup.js","components/ItemSelector/ItemSelector.js","components/TitleBar/EditTitleBar.js","components/ItemFilter/FilterDialog.js","reducers/activeModalDimension.js","actions/activeModalDimension.js","components/ItemFilter/FilterSelector.js","components/TitleBar/Info.js","components/TitleBar/ViewTitleBar.js","components/TitleBar/TitleBar.js","components/Item/VisualizationItem/DefaultPlugin.js","components/Item/DeleteItemButton.js","components/Item/ItemHeader.js","components/Item/VisualizationItem/assets/icons.js","components/Item/VisualizationItem/ItemHeaderButtons.js","components/Item/VisualizationItem/ItemFooter.js","modules/memoizeOne.js","components/Item/VisualizationItem/Item.js","widgets/Line.js","components/Item/MessagesItem/Item.js","components/Item/NotSupportedItem/Item.js","icons/Description.js","icons/Delete.js","components/Item/ListItem/Item.js","components/Item/ListItem/actions.js","components/Item/TextItem/Item.js","components/Item/AppItem/Item.js","components/Item/SpacerItem/Item.js","components/Item/Item.js","widgets/NoContentMessage.js","components/Item/ProgressiveLoadingContainer.js","components/ItemGrid/ItemGrid.js","components/FilterBar/FilterBadge.js","components/FilterBar/FilterBar.js","components/Dashboard/DashboardContent.js","components/Dashboard/ViewDashboard.js","components/ControlBar/ConfirmDeleteDialog.js","components/ControlBar/EditBar.js","components/Dashboard/EditDashboard.js","components/Dashboard/NewDashboard.js","components/Dashboard/Dashboard.js","components/Dashboard/dashboardModes.js","components/App.js","actions/user.js","locales/index.js","reducers/style.js","reducers/index.js","configureStore.js","index.js","components/ControlBar/styles/ControlBar.module.css","components/ControlBar/styles/ClearButton.module.css","components/Item/VisualizationItem/plugin.js","components/ItemGrid/gridUtil.js"],"names":["VISUALIZATION","REPORT_TABLE","CHART","MAP","EVENT_REPORT","EVENT_CHART","APP","REPORTS","RESOURCES","USERS","MESSAGES","TEXT","SPACER","spacerContent","emptyTextItemContent","isSpacerType","item","type","text","isTextType","isVisualizationType","itemTypeMap","hasMapView","itemType","domainType","isTrackerDomainType","getDefaultItemCount","defaultItemCount","getAppName","appName","_itemTypeMap","Object","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","id","endPointName","propName","pluralTitle","i18n","t","appUrl","concat","getEndPointName","getItemUrl","d2","url","launchUrl","getBaseUrl","getItemIcon","TableIcon","ChartIcon","MapIcon","ExtensionIcon","DescriptionIcon","PersonIcon","FontDownloadIcon","EmailIcon","CropFreeIcon","NotInterestedIcon","module","exports","showMoreButton","deleteItemButton","getIdNameFields","rename","arguments","length","undefined","getDimensionFields","_ref2","withItems","arrayClean","join","getAxesFields","_ref3","getFavoriteFields","_ref4","withDimensions","withOptions","getFavoritesFields","_ref5","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","getListItemFields","getMapFields","apiFetchFavorite","_ref6","fields","getInstance","then","Api","getApi","get","list","itemicon","link","deleteicon","deletebutton","orArray","param","Array","isArray","orObject","isObject","arrayToIdMap","array","reduce","obj","formatDate","value","uiLocale","global","Intl","DateTimeFormat","locale","year","month","day","format","Date","substr","replace","validateReducer","defaultValue","api","idx","baseUrl","indexOf","slice","getWithoutId","object","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","leftControls","rightControls","menuItem","launchLink","label","buttonInsert","itemWrap","itemHeaderWrap","itemTitle","itemActionsWrap","DEFAULT_STATE_USER","username","isSuperuser","sGetUserUsername","state","user","DEFAULT_STATE_DASHBOARDS","byId","items","updateDashboardProp","_ref","dashboardId","prop","objectSpread","defineProperty","sGetDashboardsRoot","dashboards","sGetDashboardById","sDashboardsIsFetching","sGetAllDashboards","sGetDashboardItems","sGetStarredDashboards","values","filter","dashboard","starred","sGetUnstarredDashboards","sGetDashboardsSortedByStarred","toConsumableArray","arraySort","getCustomDashboards","data","arrayFrom","map","d","name","displayName","description","displayDescription","favorite","owner","created","split","lastUpdated","access","numberOfItems","dashboardItems","reportTable","chart","combineReducers","action","isLoading","showDescription","sGetSelectedRoot","selected","sGetSelectedId","sGetSelectedIsLoading","sGetSelectedShowDescription","DEFAULT_STATE_VISUALIZATIONS","isEmpty","p","sGetVisualization","visualizations","sGetVisualizationsRoot","acAddVisualization","DEFAULT_STATE","sGetCurrentVisualizationView","currentVisualizationViews","sGetCurrentVisualizationViewsRoot","acSetCurrentVisualizationView","onError","error","console","log","getDashboardItemsFields","withFavorite","getDashboardFields","apiFetchDashboard","models","catch","apiStarDashboard","isStarred","post","delete","apiDeleteDashboard","sGetMessagesRoot","messages","getMessages","DEFAULT_STATE_SNACKBAR","message","duration","open","acCloseSnackbar","loadingDashboardMsg","SnackbarMessageContent","react_default","a","createElement","style","fontWeight","connect","_sGetSnackbar","snackbar","sGetSnackbar","snackbarOpen","snackbarMessage","snackbarDuration","onCloseSnackbar","props","Snackbar_default","zIndex","SnackbarMessage_SnackbarMessageContent","autoHideDuration","onClose","acSetSelectedId","acSetSelectedIsLoading","tLoadDashboard","asyncToGenerator","regenerator_default","mark","_callee","dispatch","dash","wrap","_context","prev","next","sent","acAppendDashboards","abrupt","Promise","resolve","t0","stop","_x","apply","this","tSetSelectedDashboardById","_callee2","getState","snackbarTimeout","onSuccess","_context2","setTimeout","dashboardName","customDashboard","acSetDashboardItems","withShape","localStorage","setItem","forEach","visualization","extractFavorite","messageConversations","clearTimeout","_x2","_x3","DEFAULT_STATE_EDIT_DASHBOARD","NEW_DASHBOARD_STATE","sGetEditDashboardRoot","editDashboard","sGetIsEditing","sGetEditDashboardItems","DEFAULT_STATE_EDIT_ITEM_FILTERS","sGetEditItemFiltersRoot","editItemFilters","DEFAULT_STATE_ITEM_FILTERS","sGetItemFiltersRoot","itemFilters","sGetFiltersKeys","keys","acRemoveItemFilter","acRemoveEditItemFilter","saveDashboard","assign","width","w","height","h","save","msg","response","uid","updateDashboard","postDashboard","create","acAddDashboardItem","itemPropName","generateUid","content","NEW_ITEM_SHAPE","acUpdateDashboardItem","acRemoveDashboardItem","acSetDashboardStarred","tFetchDashboards","collection","paging","toArray","userRows","sGetControlBarUserRows","controlBar","sGetControlBarRoot","KEY","hasNamespace","currentUser","dataStore","has","getNamespace","apiGetControlBarRows","_callee3","namespace","_context3","t1","t2","find","key","apiPostControlBarRows","_callee4","rows","_context4","set","_x4","_x5","acSetControlBarUserRows","DEFAULT_DIMENSIONS","getDimensionById","DIMENSION_ID_PERIOD","DIMENSION_ID_ORGUNIT","sGetDimensions","dimensions","DEFAULT_SETTINGS","keyDateFormat","keyAnalysisRelativePeriod","keyAnalysisDigitGroupSeparator","displayNameProperty","rootOrganisationUnit","sGetSettings","settings","sGetSettingsDisplayNameProperty","acSetDimensions","styles","showMore","color","colors","grey700","cursor","fontSize","paddingTop","&:hover","textDecoration","disabled","grey500","withStyles","onClick","isMaxHeight","classes","textAlign","className","MIN_ROW_COUNT","getRowsHeight","getNumRowsFromHeight","Math","floor","FIRST_ROW_PADDING_HEIGHT","getTopOffset","getControlBarHeight","ControlBar","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onStartDrag","setState","dragging","window","addEventListener","onDrag","onEndDrag","event","preventDefault","stopPropagation","newHeight","clientY","onChangeHeight","requestAnimationFrame","removeEventListener","draghandle","onMouseDown","max","rootStyle","top","backgroundColor","editMode","yellow050","white","paddingBottom","transition","root","children","renderDragHandle","React","Component","defaultProps","StarIcon","xmlns","viewBox","fill","apiPostDataStatistics","eventType","chip","margin","grey600","display","verticalAlign","icon","marginTop","unselected","chipProps","selectedState","Star","Link","to","debounce","lib","AddCircleIcon","teal600","ClearIcon","grey800","ClearButton","onClear","button","Clear","ownerData","DEFAULT_STATE_DASHBOARDS_FILTER_NAME","DEFAULT_STATE_DASHBOARDS_FILTER_OWNER","order","sGetDashboardsFilterRoot","dashboardsFilter","sGetFilterName","KEYCODE_ENTER","KEYCODE_ESCAPE","filterField","searchIcon","Filter","_Component","setFilterValue","onChangeName","target","handleKeyUp","keyCode","onKeypressEnter","inherits","createClass","nextProps","_this$props","startAdornment","InputAdornment_default","position","Search_default","endAdornment","ControlBar_ClearButton","Input_default","placeholder","onChange","onKeyUp","Function","prototype","MAX_ROW_COUNT","DashboardsBar","_getPrototypeOf2","_len","args","_key","setInitialDashboardState","adjustedHeight","newRows","newRowCount","min","onToggleMaxHeight","onSelectDashboard","history","push","selectedId","onChangeFilterName","rowCount","controlBarHeight","contentWrapperStyle","padding","overflowY","components_ControlBar_ControlBar","marginRight","AddCircle","ControlBar_Filter","ControlBar_DashboardItemChip","ControlBar_ShowMoreButton","mapDispatchToProps","withRouter","stateProps","dispatchProps","ownProps","displayDashboards","toLowerCase","includes","HeaderMenuItem","title","dense","LaunchIcon","LaunchLink","e","rel","href","Launch","InsertButton","ContentMenuItem","onInsert","visType","ItemIcon","renderedItemIcon","visTypeIcons","ContentMenuItem_LaunchLink","ContentMenuItem_InsertButton","singleItems","header","categorizedItems","listItemTypes","CategorizedMenuGroup","addItem","tAddListItemContent","newItem","toggleSeeMore","seeMore","onChangeItemsLimit","_this2","_this$props2","hasMore","react","ItemSelector_HeaderMenuItem","itemUrl","context","ItemSelector_ContentMenuItem","contextTypes","PropTypes","isRequired","dashboardItem","listItemType","dashboardItemIndex","findIndex","category","addToDashboard","ItemSearchField","onFocus","ItemSelector","closeList","openList","_","fetchItems","anchorEl","currentTarget","setFilter","getCategorizedMenuGroups","itemCount","allItems","maxOptions","ItemSelector_CategorizedMenuGroup","getSinglesMenuGroups","ItemSelector_SinglesMenuGroup","getMenuGroups","queryString","add","Set","ItemSelector_ItemSearchField","Popover_default","anchorOrigin","horizontal","vertical","transformOrigin","PaperProps","disableAutoFocus","disableRestoreFocus","EditTitleBar","onChangeTitle","onChangeDescription","section","titleDescription","itemSelector","components_ItemSelector_ItemSelector","selectedDashboard","justifyContent","flex","clear","underline","&::before","borderBottom","&:hover::before","input","borderRadius","peId","ouId","FilterDialog","onConfirm","dimension","selectedItems","dialogId","commonProps","onSelect","onDeselect","onReorder","build","selectedPeriods","ouItems","dialogTitle","Dialog_default","maxWidth","disableEnforceFocus","dialogContent","DialogActions_default","kind","DEFAULT_STATE_ACTIVE_MODAL_DIMENSION","sGetActiveModalDimension","activeModalDimension","acSetActiveModalDimension","FilterSelector","openPanel","closePanel","closeDialog","clearActiveModalDimension","selectDimension","setActiveModalDimension","onSelectItems","dimensionId","setEditItemFilters","onDeselectItems","itemIdsToRemove","newList","removeEditItemFilter","onReorderItems","itemIds","oldList","reorderedList","saveFilter","filterItems","addItemFilter","removeItemFilter","theme","selectedDimensions","ArrowDropDown_default","Boolean","fontFamily","typography","onDimensionClick","selectedIds","ItemFilter_FilterDialog","filters","withTheme","Info","show","toggle","InfoOutlined_default","NO_DESCRIPTION","actions","alignItems","marginLeft","starIcon","textButton","minWidth","editLink","titleBar","titleBarIcon","ViewTitleBar","toggleSharingDialog","sharingDialogIsOpen","onStarClick","onInfoClick","titleStyle","userSelect","StarBorder","TitleBar_Info","update","manage","ItemFilter_FilterSelector","d2_ui_sharing_dialog_default","onRequestClose","tStarDashboard","black","TitleBar","edit","TitleBar_EditTitleBar","TitleBar_ViewTitleBar","DefaultPlugin","pluginCredentials","shouldPluginReload","prevProps","reloadAllowed","filtersChanged","vis","prevVis","visChanged","activeType","reloadPlugin","pluginManager","currentVis","useActiveType","credentials","getActiveType","auth","defaultHeaders","Authorization","getGridItemDomId","textDiv","DeleteItemButton","Delete_default","red500","actionButtons","itemId","Item_DeleteItemButton","ThreeDots","SpeechBubble","fillRule","transform","iconFill","ItemHeaderButtons","_useState","useState","_useState2","slicedToArray","setAnchorEl","onSelectActiveType","isTrackerType","onViewTable","handleClose","onViewChart","onViewMap","canViewAs","isSingleValue","isYearOverYear","interpretationMenuLabel","activeFooter","pluginIsAvailable","Fragment","small","secondary","icons_ThreeDots","active","InsertChart_default","ViewList_default","Public_default","Launch_default","getLink","icons_SpeechBubble","onToggleFooter","scrollContainer","line","border","grey100","ItemFooter","objectId","getId","d2_ui_interpretations_default","memoizeOne","fn","lastArgs","lastValue","every","arg","i","HEADER_HEIGHT","overflow","textOverflow","whiteSpace","fontStretch","lineHeight","applyFilters","visRows","visColumns","columns","visFilters","dimensionFound","dimensionObjects","Item","showFooter","configLoaded","getUniqueKey","uniqueId","getPluginComponent","currentVisualizationView","getContentStyle","es_lib","forDashboard","mapViews","layer","VisualizationItem_DefaultPlugin","onToggleItemExpanded","newActiveType","currentActiveType","onSelectVisualizationView","contentRef","offsetHeight","originalHeight","createRef","_componentDidMount","onVisualizationLoaded","_this$props3","VisualizationItem_ItemHeaderButtons","Item_ItemHeader","ref","VisualizationItem_ItemFooter","grey200","Line","PRIVATE","messageTypes","_messageTypes","listStyleType","paddingLeft","seeAll","marginBottom","sender","snippet","maxHeight","MessagesItem","getMessageHref","msgIdentifier","messageType","getMessageSender","latestMsg","getMessageItems","editClass","readClass","read","msgDate","document","location","messageCount","userSettings","widgets_Line","string","MessagesContainer","NotSupportedItem","NotInterested_default","align","DeleteIcon","getItemTitle","ListItem","tRemoveListItemContent","contentItems","index","el","getContentItems","contentItem","Description","deleteButton","icons_Delete","grey900","newContent","textField","container","onChangeText","updatedItem","d2_ui_rich_text","onEdit","multiline","fullWidth","textDivStyle","viewItem","getIframeSrc","appDetails","iframeSrc","ouIds","ouPath","AppItem","appKey","system","installedApps","app","src","SpacerItem","GridItem","VisualizationItem","TextItem","getGridItem","NoContentMessage","ProgressiveLoadingContainer","shouldLoad","containerRef","shouldLoadHandler","bufferPx","bufferFactor","innerHeight","rect","getBoundingClientRect","bottom","removeHandler","checkShouldLoad","debounceMs","registerHandler","_this3","objectWithoutProperties","eventProps","pick","ItemGrid","expandedItems","clickedId","isExpanded","onRemoveItem","onLayoutChange","newLayout","acUpdateDashboardLayout","onResizeStop","layout","oldItem","onItemResize","pluginResize","onRemoveItemWrapper","widgets_NoContentMessage","expandedItem","hProp","minH","ITEM_MIN_HEIGHT","react_grid_layout_default","MARGIN","cols","getGridColumns","rowHeight","GRID_ROW_HEIGHT","innerWidth","compactType","GRID_COMPACT_TYPE","isDraggable","isResizable","draggableCancel","itemClassNames","Item_ProgressiveLoadingContainer","Item_Item_Item","validItems","hasShape","badgeContainer","badge","badgeRemove","FilterBadge","onRemove","count","FilterBar","onBadgeRemove","onBadgeClick","bar","FilterBar_FilterBadge","removeItemFIlter","filtersSelector","createSelector","arr","flexWrap","DashboardContent","components_TitleBar_TitleBar","components_FilterBar_FilterBar","components_ItemGrid_ItemGrid","Content","hasDashboardContent","dashboardsIsEmpty","Dashboard_DashboardContent","dashboardsLoaded","contentNotReady","ControlBar_DashboardsBar","Dashboard_DashboardVerticalOffset","ViewDashboard_Content","ConfirmDeleteDialog","onDeleteConfirmed","onContinueEditing","destructive","DialogTitle_default","DialogContent_default","DialogContentText_default","buttonBarStyle","EditBar","translationDialogIsOpen","dashboardModel","confirmDeleteDialogOpen","redirectUrl","onConfirmDelete","onSave","newId","onDiscard","onDiscardChanges","onDelete","onTranslationsSaved","translations","dbLocale","translation","property","onTranslate","fetchDashboardModel","toggleTranslationDialog","confirmDeleteDialog","deleteAccess","ControlBar_ConfirmDeleteDialog","translationDialog","d2_ui_translation_dialog_default","objectToTranslate","fieldsToTranslate","onTranslationSaved","onTranslationError","err","Redirect","updateAccess","discardBtnText","primary","sGetIsNewDashboard","dashboardToSave","tDeleteDashboard","acSetDashboardDisplayName","EditDashboard","initialized","initEditDashboard","setEditDashboard","getDashboardContent","EditDashboard_Content","ControlBar_EditBar","NewDashboard","setNewDashboard","Dashboard","setDashboard","match","params","selectDashboard","scrollToTop","scrollTo","mode","Dashboard_EditDashboard","Dashboard_NewDashboard","Dashboard_ViewDashboard","dashboardToSelect","preferredId","getItem","App","setCurrentUser","fetchDashboards","setControlBarRows","setDimensions","spacers","HeaderBar","HashRouter","Switch","Route","exact","path","render","components_Dashboard_Dashboard","components_SnackbarMessage_SnackbarMessage","childContextTypes","controlBarRows","displayNameProp","filteredDimensions","apiFetchDimensions","dim","dimensionType","dataDimensionType","tSetDimensions","moment","addResources","arTranslations","daTranslations","enTranslations","esTranslations","frTranslations","idTranslations","kmTranslations","loTranslations","myTranslations","prsTranslations","psTranslations","ptTranslations","pt_BRTranslations","ruTranslations","svTranslations","tetTranslations","tgTranslations","ukTranslations","urTranslations","viTranslations","zhTranslations","zh_CNTranslations","setDefaultNamespace","changeLanguage","objectClean","conversations","$merge","d2Object","keyUiLocale","authorities","newState","k","$unshift","idToRemove","$splice","stateItems","newStateItems","x","y","stateItem","si","$set","configureStore","middleware","thunk","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducer","applyMiddleware","configI18n","config","sources","manifest","isProd","getManifest","info","version","manifest_generated_at","process","activities","dhis","dhis2","apiVersion","headers","schemas","getUserSettings","d2Init","initializedD2","ReactDOM","build_es","es","store","createMuiTheme","dhis2theme","src_components_App","getElementById","init","itemTypeToExternalPlugin","_itemTypeToExternalPl","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_3__","getPlugin","hasIntegratedPlugin","eventReport","eventChart","loadPlugin","plugin","load","loadingIndicator","getName","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","fetch","fetchedFavorite","resize","unmount","getVisualizationConfig","originalType","extractedMapView","mv","VIS_TYPE_COLUMN","VIS_TYPE_PIVOT_TABLE","__webpack_require__","__webpack_exports__","d2_utilizr_lib_isFunction__WEBPACK_IMPORTED_MODULE_0__","d2_utilizr_lib_isFunction__WEBPACK_IMPORTED_MODULE_0___default","n","_modules_util__WEBPACK_IMPORTED_MODULE_1__","isNonNegativeInteger","Number","isInteger","itemWithShape","Error","col","row","itemWidth","itemHeight","getShape","round","getOriginalHeight","querySelector","isFunction","setViewportSize","clientWidth","clientHeight"],"mappings":"wnCAeaA,EAAgB,gBAChBC,EAAe,eACfC,EAAQ,QACRC,EAAM,MACNC,EAAe,eACfC,EAAc,cACdC,EAAM,MACNC,EAAU,UACVC,EAAY,YACZC,EAAQ,QACRC,EAAW,WACXC,EAAO,OACPC,EAAS,SAMTC,EAAgB,+CAChBC,EAAuB,4BACvBC,EAAe,SAAAC,GAAI,OAC5BA,EAAKC,OAASN,GAAQK,EAAKE,OAASL,GAC3BM,EAAa,SAAAH,GAAI,OAC1BA,EAAKC,OAASN,GAAQK,EAAKE,OAASL,GAC3BO,EAAsB,SAAAJ,GAAI,QACjCK,EAAYL,EAAKC,MAAMG,qBAChBE,EAAa,SAAAC,GAAQ,MAZJ,cAa1BF,EAAYE,GAAUC,YACbC,EAAsB,SAAAF,GAAQ,MAbf,YAcxBF,EAAYE,GAAUC,YACbE,EAAsB,SAAAH,GAAQ,OACvCF,EAAYE,GAAUI,kBAAoB,GACjCC,EAAa,SAAAL,GAAQ,OAAIF,EAAYE,GAAUM,SAAW,IAG1DR,GAAWS,EAAA,GAAAC,OAAAC,EAAA,EAAAD,CAAAD,EACnB9B,EAAgB,CACbiC,GAAIjC,EACJkC,aAAc,iBACdC,SAAU,gBACVC,YAAaC,IAAKC,EAAE,kBACpBC,OAAQ,SAAAN,GAAE,oCAAAO,OAAkCP,IAC5CJ,QAAS,kBACTT,qBAAqB,EACrBO,iBAAkB,KATFI,OAAAC,EAAA,EAAAD,CAAAD,EAWnB7B,EAAe,CACZgC,GAAIhC,EACJiC,aAAc,iBACdC,SAAU,cACVC,YAAaC,IAAKC,EAAE,gBACpBd,WArCsB,YAsCtBJ,qBAAqB,EACrBmB,OAAQ,SAAAN,GAAE,oCAAAO,OAAkCP,IAC5CJ,QAAS,oBAnBOE,OAAAC,EAAA,EAAAD,CAAAD,EAqBnB5B,EAAQ,CACL+B,GAAI/B,EACJgC,aAAc,iBACdC,SAAU,QACVC,YAAaC,IAAKC,EAAE,UACpBd,WA/CsB,YAgDtBJ,qBAAqB,EACrBmB,OAAQ,SAAAN,GAAE,oCAAAO,OAAkCP,IAC5CJ,QAAS,oBA7BOE,OAAAC,EAAA,EAAAD,CAAAD,EA+BnB3B,EAAM,CACH8B,GAAI9B,EACJ+B,aAAc,OACdC,SAAU,MACVC,YAAaC,IAAKC,EAAE,QACpBd,WAzDsB,YA0DtBJ,qBAAqB,EACrBmB,OAAQ,SAAAN,GAAE,2BAAAO,OAAyBP,IACnCJ,QAAS,SAvCOE,OAAAC,EAAA,EAAAD,CAAAD,EAyCnB1B,EAAe,CACZ6B,GAAI7B,EACJ8B,aAAc,eACdC,SAAU,cACVC,YAAaC,IAAKC,EAAE,iBACpBd,WAlEoB,UAmEpBJ,qBAAqB,EACrBmB,OAAQ,SAAAN,GAAE,oCAAAO,OAAkCP,IAC5CJ,QAAS,kBAjDOE,OAAAC,EAAA,EAAAD,CAAAD,EAmDnBzB,EAAc,CACX4B,GAAI5B,EACJ6B,aAAc,cACdC,SAAU,aACVC,YAAaC,IAAKC,EAAE,gBACpBd,WA5EoB,UA6EpBJ,qBAAqB,EACrBmB,OAAQ,SAAAN,GAAE,uCAAAO,OAAqCP,IAC/CJ,QAAS,qBA3DOE,OAAAC,EAAA,EAAAD,CAAAD,EA6DnBxB,EAAM,CACH4B,aAAc,OACdC,SAAU,SACVC,YAAaC,IAAKC,EAAE,UAhEJP,OAAAC,EAAA,EAAAD,CAAAD,EAkEnBvB,EAAU,CACP0B,GAAI1B,EACJ2B,aAAc,UACdC,SAAU,UACVC,YAAaC,IAAKC,EAAE,WACpBC,OAAQ,SAAAN,GAAE,mEAAAO,OACuDP,MAxEjDF,OAAAC,EAAA,EAAAD,CAAAD,EA0EnBtB,EAAY,CACTyB,GAAIzB,EACJ0B,aAAc,YACdC,SAAU,YACVC,YAAaC,IAAKC,EAAE,aACpBC,OAAQ,SAAAN,GAAE,uBAAAO,OAAqBP,EAArB,YA/EMF,OAAAC,EAAA,EAAAD,CAAAD,EAiFnBrB,EAAQ,CACLwB,GAAIxB,EACJyB,aAAc,QACdC,SAAU,QACVC,YAAaC,IAAKC,EAAE,SACpBC,OAAQ,SAAAN,GAAE,0DAAAO,OAAwDP,MAtFlDF,OAAAC,EAAA,EAAAD,CAAAD,EAwFnBnB,EAAO,CACJsB,GAAItB,EACJwB,SAAU,SA1FMJ,OAAAC,EAAA,EAAAD,CAAAD,EA4FnBpB,EAAW,CACRyB,SAAU,aA7FMJ,OAAAC,EAAA,EAAAD,CAAAD,EA+FnBlB,EAAS,CACNuB,SAAU,SAhGML,GAoGXW,EAAkB,SAAAxB,GAAI,OAAII,EAAYJ,GAAMiB,cAE5CQ,EAAa,SAACzB,EAAMD,EAAM2B,GACnC,IAAIC,EAUJ,OARI3B,IAASX,IACTsC,EAAM5B,EAAK6B,WAGXxB,EAAYJ,IAASI,EAAYJ,GAAMsB,SACvCK,EAAG,GAAAJ,OAAMM,YAAWH,GAAjB,KAAAH,OAAwBnB,EAAYJ,GAAMsB,OAAOvB,EAAKiB,MAGtDW,GAGEG,EAAc,SAAA9B,GACvB,OAAQA,GACJ,KAAKhB,EACL,KAAKG,EACL,KAAKG,EACD,OAAOyC,IACX,KAAK9C,EACL,KAAKG,EACD,OAAO4C,IACX,KAAK9C,EACD,OAAO+C,IACX,KAAK5C,EACD,OAAO6C,IACX,KAAK3C,EACD,OAAO4C,IACX,KAAK3C,EACD,OAAO4C,IACX,KAAK1C,EACD,OAAO2C,IACX,KAAK5C,EACD,OAAO6C,IACX,KAAK3C,EACD,OAAO4C,IACX,QACI,OAAOC,4BC7LnBC,EAAAC,QAAA,CAAkBC,eAAA,oECAlBF,EAAAC,QAAA,CAAkBE,iBAAA,wvhDCKLC,EAAkB,eAAGC,GAAHC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAc,IAAXD,OAAH,MAAqB,CAChD,KADgD,GAAAvB,OAE7CuB,EAAS,2BAA6B,sBAWhCI,EAAqB,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,UAAH,OAC9BC,IAAW,CACP,YACA,gBACA,SACA,eACAD,EAAS,SAAA7B,OAbkB,CAC/B,2BACA,2BACA,qBAUyC+B,KAAK,KAAjC,WAIJC,EAAgB,SAAAC,GAAA,IAAGJ,EAAHI,EAAGJ,UAAH,MAAmB,YAAA7B,OACjC2B,EAAmB,CAAEE,cAAaE,KAAK,KADN,aAAA/B,OAEpC2B,EAAmB,CAAEE,cAAaE,KAAK,KAFH,gBAAA/B,OAGjC2B,EAAmB,CAAEE,cAAaE,KAAK,KAHN,OAOnCG,EAAoB,SAAAC,GAAqC,IAAlCC,EAAkCD,EAAlCC,eAAgBC,EAAkBF,EAAlBE,YAChD,OAAOP,IAAW,IAAA9B,OACXsB,EAAgB,CAAEC,QAAQ,IAAQQ,KAAK,MAC1C,yCACAK,EAAc,GAAApC,OAAMgC,EAAc,CAAEH,WAAW,IAAQE,KAAK,MAA9C,GACdM,EACM,CACI,IACA,uBACA,mBACA,YACA,sBACA,oCACA,oBACA,sBACA,yBACA,iCACA,oBACA,8BACA,iBACA,sCACA,0BACA,qBACA,8BACA,mBACA,gBACA,iBACA,UACA,gBACA,wBACA,gCACA,sCACFN,KAAK,KACP,MAIDO,EAAqB,SAAAC,GAAA,IAAGH,EAAHG,EAAGH,eAAH,MAAwB,gBAAApC,OACvCkC,EAAkB,CAAEE,mBAAkBL,KAAK,KADJ,cAAA/B,OAE7C,CAAC,QAADA,OAAAT,OAAAiD,EAAA,EAAAjD,CAAY2C,EAAkB,CAAEE,qBAAmBL,KAAK,KAFX,YAAA/B,OAG/CkC,EAAkB,CAAEE,mBAAkBL,KAAK,KAHI,oBAAA/B,OAIvCkC,EAAkB,CAAEE,mBAAkBL,KAAK,KAJJ,mBAAA/B,OAKxCkC,EAAkB,CAAEE,mBAAkBL,KAAK,KALH,OAS7CU,EAAoB,iBAAM,YAAAzC,OACxBsB,EAAgB,CAAEC,QAAQ,IAAQQ,KAAK,KADf,kBAAA/B,OAEtBsB,EAAgB,CAAEC,QAAQ,IAAQQ,KAAK,KAFjB,cAAA/B,OAG1BsB,EAAgB,CAAEC,QAAQ,IAAQQ,KAAK,KAHb,OAO1BW,EAAe,iBAAM,IAAA1C,OAC3BsB,EAAgB,CAAEC,QAAQ,IAAQQ,KAAK,MAC1C,uCAF8B,YAAA/B,OAGlBkC,EAAkB,CAC1BE,gBAAgB,EAChBC,aAAa,IALa,OAYrBM,EAAmB,SAAClD,EAAIhB,EAALmE,GAAA,IAAaC,EAAbD,EAAaC,OAAb,OAC5BC,wBAAcC,KAAK,SAAA5C,GAAE,OACjBA,EAAG6C,IAAIC,SAASC,IAAhB,GAAAlD,OAAuBC,YAAgBxB,GAAvC,KAAAuB,OAAgDP,GAAM,CAClDoD,OACIA,GACAX,EAAkB,CACdE,gBAAgB,EAChBC,aAAa,8BC3GjCnB,EAAAC,QAAA,CAAkBgC,KAAA,mBAAA3E,KAAA,mBAAA4E,SAAA,uBAAAC,KAAA,mBAAAC,WAAA,yBAAAC,aAAA,qXCMX,SAASC,EAAQC,GACpB,OAAOC,MAAMC,QAAQF,GAASA,EAAQ,GAGnC,SAASG,EAASH,GACrB,OAAOI,IAASJ,GAASA,EAAQ,GAS9B,SAASK,EAAaC,GACzB,OAAOA,EAAMC,OAAO,SAACC,EAAKzF,GAEtB,OADAyF,EAAIzF,EAAKiB,IAAMjB,EACRyF,GACR,IAkBA,IAAMC,EAAa,SAACC,EAAOC,GAC9B,GAA2B,qBAAhBC,EAAOC,MAAwBA,KAAKC,eAAgB,CAC3D,IAAMC,EAASJ,GAAY,KAC3B,OAAO,IAAIE,KAAKC,eAAeC,EAAQ,CACnCC,KAAM,UACNC,MAAO,QACPC,IAAK,YACNC,OAAO,IAAIC,KAAKV,IAGvB,OAAOA,EAAMW,OAAO,EAAG,IAAIC,QAAQ,IAAK,MAwB/BC,EAAkB,SAACb,EAAOc,GAAR,YACjBvD,IAAVyC,GAAiC,OAAVA,EAAiBc,EAAed,GAE9C7D,EAAa,SAAAH,GACtB,IAAM+E,EAAM/E,EAAG6C,IAAIC,SACbkC,EAAMD,EAAIE,QAAQC,QAAQ,QAChC,OAAOF,GAAO,EAAID,EAAIE,QAAQE,MAAM,EAAGH,GAAOD,EAAIE,SAGzCG,EAAe,SAAAC,GAAM,OAAAjG,OAAAkG,EAAA,EAAAlG,CAAA,GAC3BiG,EAD2B,CAE9B/F,QAAIiC,2FCvFRR,EAAAC,QAAA,CAAkBuE,aAAA,oCAAAC,cAAA,2DCAlBzE,EAAAC,QAAA,CAAkByE,SAAA,kCAAAC,WAAA,oCAAAC,MAAA,+BAAAC,aAAA,4DCAlB7E,EAAAC,QAAA,CAAkB6E,SAAA,6BAAAC,eAAA,mCAAAC,UAAA,8BAAAC,gBAAA,sWCCLC,EAAqB,CAC9B3G,GAAI,GACJ4G,SAAU,GACVjC,SAAU,GACVkC,aAAa,GAwBV,IACMC,EAAmB,SAAAC,GAAK,OAAIA,EAAMC,KAAKJ,uFCTvCK,EAA2B,CACpCC,KAAM,KACNC,MAAO,IAKLC,EAAsB,SAAAC,GAAA,IAAGN,EAAHM,EAAGN,MAAOO,EAAVD,EAAUC,YAAaC,EAAvBF,EAAuBE,KAAM7C,EAA7B2C,EAA6B3C,MAA7B,MAA0C,CAClEwC,KAAKpH,OAAA0H,EAAA,EAAA1H,CAAA,GACEiH,EAAMG,KADTpH,OAAA2H,EAAA,EAAA3H,CAAA,GAECwH,EAFDxH,OAAA0H,EAAA,EAAA1H,CAAA,GAGOiH,EAAMG,KAAKI,GAHlBxH,OAAA2H,EAAA,EAAA3H,CAAA,GAIKyH,EAAO7C,MAGhByC,MAAOJ,EAAMI,QAwDJO,EAAqB,SAAAX,GAAK,OAAIA,EAAMY,YAiBpCC,EAAoB,SAACb,EAAO/G,GAAR,OAC7BmE,YAASuD,EAAmBX,GAAOG,MAAMlH,IAEhC6H,EAAwB,SAAAd,GACjC,OAA0C,OAAnCW,EAAmBX,GAAOG,MAUxBY,EAAoB,SAAAf,GAAK,OAClC5C,YAASuD,EAAmBX,GAAOG,OAS1Ba,EAAqB,SAAAhB,GAAK,OAAIW,EAAmBX,GAAOI,OAIxDa,EAAwB,SAAAjB,GAAK,OACtCjH,OAAOmI,OAAOH,EAAkBf,IAAQmB,OACpC,SAAAC,GAAS,OAA0B,IAAtBA,EAAUC,WAGlBC,EAA0B,SAAAtB,GAAK,OACxCjH,OAAOmI,OAAOH,EAAkBf,IAAQmB,OACpC,SAAAC,GAAS,OAA0B,IAAtBA,EAAUC,WAYlBE,EAAgC,SAAAvB,GAAK,SAAAxG,OAAAT,OAAAyI,EAAA,EAAAzI,CAC3C0I,IAAUR,EAAsBjB,GAAQ,MAAO,gBADJjH,OAAAyI,EAAA,EAAAzI,CAE3C0I,IAAUH,EAAwBtB,GAAQ,MAAO,kBAW3C0B,EAAsB,SAAAC,GA4B/B,OAAOC,IAAUD,GAAME,IAAI,SAAAC,GAAC,MAAK,CAC7B7I,GAAI6I,EAAE7I,GACN8I,KAAMD,EAAEC,KACRC,YAAaF,EAAEE,YACfC,YAAaH,EAAEG,YACfC,mBAAoBJ,EAAEI,mBACtBb,QAASS,EAAEK,SACXC,MAAON,EAAE7B,KAAK8B,KACdM,QAASP,EAAEO,QACNC,MAAM,KACN/G,KAAK,KACL+C,OAAO,EAAG,IACfiE,YAAaT,EAAES,YACVD,MAAM,KACN/G,KAAK,KACL+C,OAAO,EAAG,IACfkE,OAAQV,EAAEU,OACVC,cAAezF,YAAQ8E,EAAEY,gBAAgBzH,OACzCyH,gBA7CYtC,EA6CY0B,EAAEY,eA5C1BtC,EAAMyB,IAAI,SAAA7J,GACN,IAAIC,EAAOF,YAAaC,GAAQJ,IAASI,EAAKC,KAI1CA,IAASjB,MACTiB,EAAOD,EAAK2K,YACN1L,IACAe,EAAK4K,MACL1L,IACAe,GAGV,IAAMC,EAAOC,YAAWH,GAClBA,EAAKE,OAASJ,IACV,GACAE,EAAKE,KACT,KAEN,OAAOa,OAAA0H,EAAA,EAAA1H,CAAA,GACAf,EACU,OAATE,EAAgB,CAAEA,QAAS,GAFnC,CAGID,aAvBI,IAAAmI,aCpHLyC,cAAgB,CAC3B5J,GArCO,WAA+C,IAA9C+G,EAA8ChF,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAVjB,KAUM8H,EAAW9H,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACtD,OAAQ4H,EAAO7K,MACX,IAhBuB,kBAiBnB,OAAOuG,YAAgBsE,EAAOnF,MAbD,MAcjC,QACI,OAAOqC,IAiCf+C,UA7Bc,WAAsD,IAArD/C,EAAqDhF,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAAX8H,EAAW9H,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACpE,OAAQ4H,EAAO7K,MACX,IAxB8B,yBAyB1B,OAAOuG,YACHsE,EAAOnF,OAtByB,GAyBxC,QACI,OAAOqC,IAsBfgD,gBAlBoB,WAGnB,IAFDhD,EAEChF,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GADD8H,EACC9H,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACD,OAAQ4H,EAAO7K,MACX,IAtCoC,+BAuChC,OAAOuG,YACHsE,EAAOnF,OApC+B,GAuC9C,QACI,OAAOqC,MAYNiD,GAAmB,SAAAjD,GAAK,OAAIA,EAAMkD,UAElCC,GAAiB,SAAAnD,GAAK,OAAIiD,GAAiBjD,GAAO/G,IAElDmK,GAAwB,SAAApD,GAAK,OAAIiD,GAAiBjD,GAAO+C,WAEzDM,GAA8B,SAAArD,GAAK,OAC5CiD,GAAiBjD,GAAOgD,qCC/DfM,GAA+B,GAEtCC,GAAU,SAAAC,GAAC,YAAUtI,IAANsI,GAAyB,OAANA,GA0B3BC,GAAoB,SAACzD,EAAO/G,GACrC,OAJkC,SAAA+G,GAAK,OAAIA,EAAM0D,eAI1CC,CAAuB3D,GAAO/G,IClC5B2K,GAAqB,SAAAjG,GAAK,MAAK,CACxC1F,KDE6B,oBCD7B0F,UCGSkG,GAAgB,GAEvBN,GAAU,SAAAC,GAAC,YAAUtI,IAANsI,GAAyB,OAANA,GA0B3BM,GAA+B,SAAC9D,EAAO/G,GAAR,OAJK,SAAA+G,GAAK,OAClDA,EAAM+D,0BAINC,CAAkChE,GAAO/G,IClChCgL,GAAgC,SAAAtG,GAAK,MAAK,CACnD1F,KDE0C,iCCD1C0F,wCCKSuG,GAAU,SAAAC,GAAK,OAAIC,QAAQC,IAAI,UAAWF,IAG1CG,GAA0B,eAAGC,GAAHvJ,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAoB,IAAjBuJ,aAAH,OACnCjJ,KAAW,CACP,KACA,OACA,QACA,IACA,IACA,kBACA,mBACA,WACA,OACA,SAVO,GAAA9B,OAWJyC,eAAoBV,KAAK,MAC5BgJ,EAAY,GAAA/K,OACHsC,aAAmB,CAClBF,eAAgB2I,EAAa3I,iBAC9BL,KAAK,MAHF,MAQPiJ,GAAqB,eAAApJ,EAAAJ,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA+B,GAA5BK,EAAHD,EAAGC,UAAWkJ,EAAdnJ,EAAcmJ,aAAd,OAC9BjJ,KAAW,IAAA9B,OACJsB,eAAkBS,KAAK,MAC1B,cACA,qBACA,WAJO,QAAA/B,OAKCsB,aAAgB,CAAEC,QAAQ,IAAQQ,KAAK,KALxC,KAMP,UACA,cACA,SACAF,EAAS,kBAAA7B,OACe8K,GAAwB,CACtCC,iBACDhJ,KAAK,KAHL,WCxBJkJ,GAAoB,SAAAxL,GAAE,OAC/BqD,wBACKC,KAAK,SAAA5C,GAAE,OACJA,EAAG+K,OAAOtD,UAAU1E,IAAIzD,EAAI,CACxBoD,OAAQf,KACJkJ,GAAmB,CACfnJ,WAAW,EACXkJ,aAAc,CAAE3I,gBAAgB,MAEtCL,KAAK,SAGdoJ,MAAMT,KAGFU,GAAmB,SAAC3L,EAAI4L,GACjC,IAAMjL,EAAG,cAAAJ,OAAiBP,EAAjB,aAETqD,wBAAcC,KAAK,SAAA5C,GACXkL,EACAlL,EAAG6C,IAAIC,SAASqI,KAAKlL,GAErBD,EAAG6C,IAAIC,SAASsI,OAAOnL,MAKtBoL,GAAqB,SAAA/L,GAC9B,OAAOqD,wBACFC,KAAK,SAAA5C,GACF,OAAOA,EAAG+K,OAAO9D,WACZlE,IAAIzD,GACJsD,KAAK,SAAA6E,GAAS,OAAIA,EAAU2D,aAEpCJ,MAAMT,mCChCFe,GAAmB,SAAAjF,GAAK,OAAIA,EAAMkF,UCnBlCC,GAAc,WACvB,IAEMvL,EAAG,gCAAAJ,OADL,qHACK,gCACT,OAAO8C,wBACFC,KAAK,SAAA5C,GAAE,OAAIA,EAAG6C,IAAIC,SAASC,IAAI9C,KAC/B+K,MAAM,SAAAR,GAAK,OAAIC,QAAQC,IAAI,SAAUF,MCLjCiB,GAAyB,CAClCC,QAAS,GACTC,SAAU,KACVC,MAAM,GCIGC,GAAkB,iBAAO,CAClCvN,KDV0B,wCEQjBwN,GAAsB,CAAE1D,KAAM,GAAI9J,KADrB,qBAGpByN,GAAyB,SAAApF,GAAiB,IAAd+E,EAAc/E,EAAd+E,QAC9B,MAAuB,kBAAZA,EAGHM,EAAAC,EAAAC,cAAA,uBACYF,EAAAC,EAAAC,cAAA,QAAMC,MAAO,CAAEC,WAAY,MAAQV,EAAQtD,MAAa,IADpE,aAMDsD,GA+BIW,eAhBS,SAAAhG,GAAS,IAAAiG,EFZL,SAAAjG,GAAK,OAAIA,EAAMkG,UAAYd,GEafe,CAAanG,GAAzCqF,EADqBY,EACrBZ,QAASC,EADYW,EACZX,SACjB,MAAO,CACHc,aAHyBH,EACFV,KAGvBc,gBAAiBhB,EACjBiB,iBAAkBhB,IAatB,CACIiB,gBAAiBf,IAHVQ,CA5BgB,SAAAQ,GAC3B,OACIb,EAAAC,EAAAC,cAACY,GAAAb,EAAD,CACIE,MAAO,CAAEY,OAAQ,OACjBnB,KAAMiB,EAAMJ,aACZf,QAASM,EAAAC,EAAAC,cAACc,GAAD,CAAwBtB,QAASmB,EAAMH,kBAChDO,iBAAkBJ,EAAMF,iBACxBO,QAASL,EAAMD,6BCRdO,GAAkB,SAAAnJ,GAAK,MAAK,CACrC1F,KZnB2B,kBYoB3B0F,UAGSoJ,GAAyB,SAAApJ,GAAK,MAAK,CAC5C1F,KZvBkC,yBYwBlC0F,UAQSqJ,GAAiB,SAAA/N,GAAE,sBAAAqH,EAAAvH,OAAAkO,EAAA,EAAAlO,CAAAmO,EAAAtB,EAAAuB,KAAI,SAAAC,EAAMC,GAAN,IAAAC,EAAA,OAAAJ,EAAAtB,EAAA2B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAETjD,GAAkBxL,GAFT,cAEtBqO,EAFsBE,EAAAG,KAG5BN,EAASO,GAAmBN,IAHAE,EAAAK,OAAA,SAKrBC,QAAQC,QAAQT,IALK,cAAAE,EAAAC,KAAA,EAAAD,EAAAQ,GAAAR,EAAA,SAO5BpD,QAAQC,IAAI,UAAZmD,EAAAQ,IAP4BR,EAAAK,OAAA,SAAAL,EAAAQ,IAAA,yBAAAR,EAAAS,SAAAb,EAAA,iBAAJ,gBAAAc,GAAA,OAAA5H,EAAA6H,MAAAC,KAAApN,YAAA,IAanBqN,GAA4B,SAAApP,GAAE,sBAAAmC,EAAArC,OAAAkO,EAAA,EAAAlO,CAAAmO,EAAAtB,EAAAuB,KAAI,SAAAmB,EAAOjB,EAAUkB,GAAjB,IAAAC,EAAAC,EAAAvE,EAAAhB,EAAA,OAAAgE,EAAAtB,EAAA2B,KAAA,SAAAmB,GAAA,cAAAA,EAAAjB,KAAAiB,EAAAhB,MAAA,cAC3CL,EAASN,IAAuB,IAE1ByB,EAAkBG,WAAW,WAC/B,IAAMC,EAAgBxL,YAASyD,EAAkB0H,IAAYtP,IACxD+I,YACDoB,GAAsBmF,MAAeK,IACrCnD,GAAoB1D,KAAO6G,EAE3BvB,EFvDuC,CAC/CpP,KDNqC,4BCOrC0F,MEsDsC,CACtB0H,QAASI,GACTF,MAAM,OAInB,KAEGkD,EAAY,SAAAvF,GACd,ICnEkCrD,EAAUU,EDmEtCsI,EAAkBnH,EAAoBwB,GAAU,GAkCtD,OAhCAmE,EACIyB,GAAoBC,aAAUF,EAAgBnG,kBCtEhB7C,EDyERE,EAAiBwI,KCzEChI,EDyEYtH,ECxE5D+P,aAAaC,QAAb,2BAAAzP,OAAgDqG,GAAYU,GD2ExDsI,EAAgBnG,eAAewG,QAAQ,SAAAlR,GACnC,GAAII,YAAoBJ,GAAO,CAC3B,IAAMmR,EAAgBC,aAAgBpR,GACtCqP,EAASzD,GAAmBuF,IAC5B9B,EACIpD,GACIkF,EAAclQ,KAMtBjB,EAAKC,OAASP,KACd2P,EE/EY,eAAA/G,EAAAvH,OAAAkO,EAAA,EAAAlO,CAAAmO,EAAAtB,EAAAuB,KAAM,SAAAC,EAAMC,GAAN,IAAAnC,EAAAmE,EAAA,OAAAnC,EAAAtB,EAAA2B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEHvC,KAFG,cAEpBD,EAFoBsC,EAAAG,KAGlB0B,EAAyBnE,EAAzBmE,qBAHkB7B,EAAAK,OAAA,SAKnBR,EAV2B,CACtCpP,KPN6B,oBOO7B0F,MAQqC0L,KALP,cAAA7B,EAAAC,KAAA,EAAAD,EAAAQ,GAAAR,EAAA,SAAAA,EAAAK,OAAA,UAVjB/E,EAiBM,eAjBEqB,EAiBHqD,EAAAQ,GAhBlB5D,QAAQC,IAAR,mBAAA7K,OAA+BsJ,EAA/B,MAAAtJ,OAA0C2K,IACnCA,IAQuB,yBAAAqD,EAAAS,OAVlB,IAACnF,EAAQqB,GAUSiD,EAAA,iBAAN,gBAAAc,GAAA,OAAA5H,EAAA6H,MAAAC,KAAApN,YAAA,MFmFpBqM,EAASP,GAAgB7N,IAEzBoO,EAASN,IAAuB,IAEhCuC,aAAad,GAEbnB,EF5F8B,CAClCpP,KDV0B,mBGuGfiL,GAGLgB,EAAU,SAAAC,GAEZ,OADAC,QAAQC,IAAI,UAAWF,GAChBA,GA1DgCuE,EAAAjB,KAAA,EAAAiB,EAAAhB,KAAA,EA8DhBL,EAASL,GAAe/N,IA9DR,cA8DjCiK,EA9DiCwF,EAAAf,KAAAe,EAAAb,OAAA,SAgEhCY,EAAUvF,IAhEsB,eAAAwF,EAAAjB,KAAA,GAAAiB,EAAAV,GAAAU,EAAA,SAAAA,EAAAb,OAAA,SAkEhC3D,EAAOwE,EAAAV,KAlEyB,yBAAAU,EAAAT,SAAAK,EAAA,kBAAJ,gBAAAiB,EAAAC,GAAA,OAAApO,EAAA+M,MAAAC,KAAApN,YAAA,yBGpC9ByO,GAA+B,GAC/BC,GAAsB,CAC/BzQ,GAAI,GACJ8I,KAAM,GACNS,OAAQ,GACRP,YAAa,GACbS,eAAgB,IAoFPiH,GAAwB,SAAA3J,GAAK,OAAIA,EAAM4J,eAIvCC,GAAgB,SAAA7J,GAAK,OAAKuD,KAAQvD,EAAM4J,gBAQxCE,GAAyB,SAAA9J,GAAK,OACvC5C,YAASuM,GAAsB3J,IAAQ0C,gBClH9BqH,GAAkC,GAwBlCC,GAA0B,SAAAhK,GAAK,OAAIA,EAAMiK,iBCvBzCC,GAA6B,GA8B7BC,GAAsB,SAAAnK,GAAK,OAAIA,EAAMoK,aAErCC,GAAkB,SAAArK,GAAK,OAAIjH,OAAOuR,KAAKH,GAAoBnK,KCrB3DuK,GAAqB,SAAAtR,GAAE,MAAK,CACrChB,KDd8B,qBCe9BgB,OCVSuR,GAAyB,SAAAvR,GAAE,MAAK,CACzChB,KHRmC,0BGSnCgB,iBCREiL,GAAU,SAAAC,GAAK,OAAIC,QAAQC,IAAI,UAAWF,IAE1CsG,GAAgB,SAACrJ,EAAWO,GAAS,IAC/BI,EAAsCJ,EAAtCI,KAAME,EAAgCN,EAAhCM,YAAaS,EAAmBf,EAAnBe,eAQ3B,OANAtB,EAAUW,KAAOA,EACjBX,EAAUa,YAAcA,EACxBb,EAAUsB,eAAiBA,EAAeb,IAAI,SAAA7J,GAAI,OAC9Ce,OAAO2R,OAAO,GAAI1S,EAAM,CAAE2S,MAAO3S,EAAK4S,EAAGC,OAAQ7S,EAAK8S,MAGnD1J,EAAU2J,OAAOxO,KAAK,SAAAyO,GAAG,OAAIA,EAAIC,SAASC,OAGxCC,GAAkB,SAAAxJ,GAC3B,OAAOrF,wBACFC,KAAK,SAAA5C,GACF,OAAOA,EAAG+K,OAAO9D,WACZlE,IAAIiF,EAAK1I,IACTsD,KAAK,SAAA6E,GAAS,OAAIqJ,GAAcrJ,EAAWO,OAEnDgD,MAAMT,KAGFkH,GAAgB,SAAAzJ,GACzB,OAAOrF,wBAAcC,KAAK,SAAA5C,GACtB,IAAMyH,EAAYzH,EAAG+K,OAAO9D,WAAWyK,SAEvC,OAAOZ,GAAcrJ,EAAWO,MCqC3B2J,GAAqB,SAAAtT,GAC9B,IAAMC,EAAOD,EAAKC,YACXD,EAAKC,KACZ,IAAMsT,EAAelT,IAAYJ,GAAMkB,SAEvC,MAAO,CACHlB,KN/D0B,qBMgE1B0F,MAAM5E,OAAA0H,EAAA,EAAA1H,QAAA2H,EAAA,EAAA3H,CAAA,CACFE,GAAIuS,yBACJvT,QACCsT,EAAevT,EAAKyT,SAClBC,QAKFC,GAAwB,SAAA3T,GAAI,MAAK,CAC1CC,KNxEiC,wBMyEjC0F,MAAO3F,IAGE4T,GAAwB,SAAAjO,GAAK,MAAK,CAC3C1F,KN9EiC,wBM+EjC0F,UCvDSiK,GAAqB,SAAAhH,GAAU,MAAK,CAC7C3I,KvBnB0B,iBuBoB1B0F,MAAOL,YAAaoE,EAAoBd,MAG/BiL,GAAwB,SAACtL,EAAasE,GAAd,MAA6B,CAC9D5M,KvBvBiC,wBuBwBjCsI,YAAaA,EACb5C,MAAOkH,IASEiE,GAAsB,SAAAnL,GAAK,MAAK,CACzC1F,KvBjC+B,sBuBkC/B0F,UAKSmO,GAAmB,iCAAAxL,EAAAvH,OAAAkO,EAAA,EAAAlO,CAAAmO,EAAAtB,EAAAuB,KAAM,SAAAC,EAAMC,GAAN,IAAA0E,EAAA,OAAA7E,EAAAtB,EAAA2B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EhBrDlCpL,wBACKC,KAAK,SAAA5C,GAAE,OACJA,EAAG+K,OAAOtD,UAAUzE,KAAK,CACrBN,OAAQ,CACJmI,KAAqBjJ,KAAK,KAC1B,sBACFA,KAAK,KACPyQ,OAAQ,YAGfrH,MAAMT,IgB2CuB,OAC5B6H,EAD4BvE,EAAAG,KAElCN,GA/B2BzG,EA+BFmL,EAAWE,UA/BM,CAC1ChU,KvBf0B,iBuBgB1B0F,MAAOL,YAAaoE,EAAoBd,OA2BN,wBAAA4G,EAAAS,OA7BP,IAAArH,GA6BOwG,MAAN,gBAAAc,GAAA,OAAA5H,EAAA6H,MAAAC,KAAApN,YAAA,IC1CjB6H,eAAgB,CAC3BqJ,SAVa,WAAmD,IAAlDlM,EAAkDhF,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAFvB,EAEY8H,EAAW9H,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAChE,OAAQ4H,EAAO7K,MACX,IANgC,2BAO5B,OAAOuG,YAAgBsE,EAAOnF,MALG,GAMrC,QACI,OAAOqC,MAkBNmM,GAAyB,SAAAnM,GAAK,OAJT,SAAAA,GAAK,OAAIA,EAAMoM,WAK7CC,CAAmBrM,GAAOkM,UC5BxBI,GAAM,iBAENC,GAAY,eAAAjM,EAAAvH,OAAAkO,EAAA,EAAAlO,CAAAmO,EAAAtB,EAAAuB,KAAG,SAAAC,EAAMzN,GAAN,OAAAuN,EAAAtB,EAAA2B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAAkB/N,EAAG6S,YAAYC,UAAUC,IAH9C,aAGG,cAAAlF,EAAAK,OAAA,SAAAL,EAAAG,MAAA,wBAAAH,EAAAS,SAAAb,MAAH,gBAAAc,GAAA,OAAA5H,EAAA6H,MAAAC,KAAApN,YAAA,GAEZ2R,GAAY,eAAAvR,EAAArC,OAAAkO,EAAA,EAAAlO,CAAAmO,EAAAtB,EAAAuB,KAAG,SAAAmB,EAAO3O,EAAI4S,GAAX,OAAArF,EAAAtB,EAAA2B,KAAA,SAAAmB,GAAA,cAAAA,EAAAjB,KAAAiB,EAAAhB,MAAA,WACjB6E,EADiB,CAAA7D,EAAAhB,KAAA,eAAAgB,EAAAhB,KAAA,EAEL/N,EAAG6S,YAAYC,UAAU/P,IAPvB,aAKG,OAAAgM,EAAAV,GAAAU,EAAAf,KAAAe,EAAAhB,KAAA,sBAAAgB,EAAAhB,KAAA,EAGL/N,EAAG6S,YAAYC,UAAUpB,OARvB,aAKG,OAAA3C,EAAAV,GAAAU,EAAAf,KAAA,cAAAe,EAAAb,OAAA,SAAAa,EAAAV,IAAA,yBAAAU,EAAAT,SAAAK,MAAH,gBAAAiB,EAAAC,GAAA,OAAApO,EAAA+M,MAAAC,KAAApN,YAAA,GAKL4R,GAAoB,eAAAnR,EAAA1C,OAAAkO,EAAA,EAAAlO,CAAAmO,EAAAtB,EAAAuB,KAAG,SAAA0F,IAAA,IAAAlT,EAAAmT,EAAA,OAAA5F,EAAAtB,EAAA2B,KAAA,SAAAwF,GAAA,cAAAA,EAAAtF,KAAAsF,EAAArF,MAAA,cAAAqF,EAAArF,KAAA,EACfpL,wBADe,cAC1B3C,EAD0BoT,EAAApF,KAAAoF,EAAA/E,GAER2E,GAFQI,EAAAC,GAEKrT,EAFLoT,EAAArF,KAAA,EAEe6E,GAAa5S,GAF5B,cAAAoT,EAAAE,GAAAF,EAAApF,KAAAoF,EAAArF,KAAA,MAAAqF,EAAA/E,IAAA+E,EAAAC,GAAAD,EAAAE,IAAA,WAE1BH,EAF0BC,EAAApF,OAGjBmF,EAAUxC,MAAQwC,EAAUxC,KAAK4C,KAAK,SAAAC,GAAG,OAAIA,IAAQb,MAHpC,CAAAS,EAAArF,KAAA,gBAAAqF,EAAArF,KAAA,GAMfoF,EAAUpQ,IAAI4P,IANC,eAAAS,EAAAlF,OAAA,SAAAkF,EAAApF,MAAA,eAAAoF,EAAArF,KAAA,GAQtB0F,GDf+B,ECesBN,GAR/B,eAS5B1I,QAAQC,IACJ,6DAVwB0I,EAAAlF,OAAA,SDPS,GCOT,yBAAAkF,EAAA9E,SAAA4E,MAAH,yBAAApR,EAAA0M,MAAAC,KAAApN,YAAA,GAgBpBoS,GAAqB,eAAAzR,EAAA5C,OAAAkO,EAAA,EAAAlO,CAAAmO,EAAAtB,EAAAuB,KAAG,SAAAkG,EAAOC,EAAMR,GAAb,IAAAnT,EAAA,OAAAuN,EAAAtB,EAAA2B,KAAA,SAAAgG,GAAA,cAAAA,EAAA9F,KAAA8F,EAAA7F,MAAA,cAAA6F,EAAA7F,KAAA,EAChBpL,wBADgB,UAC3B3C,EAD2B4T,EAAA5F,KAAA4F,EAAAvF,GAEtB8E,EAFsBS,EAAAvF,GAAA,CAAAuF,EAAA7F,KAAA,eAAA6F,EAAA7F,KAAA,EAEFiF,GAAahT,EAAI4S,IAFf,OAAAgB,EAAAvF,GAAAuF,EAAA5F,KAAA,OAAA4F,EAAAvF,GAI9BwF,IAAIlB,GAAKgB,GAJqB,yBAAAC,EAAAtF,SAAAoF,MAAH,gBAAAI,EAAAC,GAAA,OAAA/R,EAAAwM,MAAAC,KAAApN,YAAA,GCxBrB2S,GAA0B,SAAAL,GAAI,MAAK,CAC5CrV,KFFoC,2BEGpC0F,MAAO2P,aCAEM,GAAqB,CAC9BC,4BAAiBC,wBACjBD,4BAAiBE,0BAaRC,GAAiB,SAAAhO,GAAK,OAAIA,EAAMiO,YCnBhCC,GAAmB,CAC5BC,cAAe,aACfC,0BAA2B,iBAC3BC,+BAAgC,QAChCC,oBAAqB,cACrB1Q,SAAU,KACV2Q,qBAAsB,IAqBbC,GAAe,SAAAxO,GAAK,OAAIA,EAAMyO,UAE9BC,GAAkC,SAAA1O,GAAK,OAChDwO,GAAaxO,GAAOsO,qBC7BXK,GAAkB,SAAAV,GAAU,MAAK,CAC1ChW,KFC0B,iBEA1B0F,MAAOsQ,0BCELW,GAAS,CACXC,SAAU,CACNC,MAAOC,IAAOC,QACdC,OAAQ,UACRC,SAAU,GACVC,WAAY,EACZC,UAAW,CACPC,eAAgB,cAGxBC,SAAU,CACNH,WAAY,EACZL,MAAOC,IAAOQ,QACdL,SAAU,GACVD,OAAQ,gBAyBDO,wBAAWZ,GAAXY,CArBe,SAAAlP,GAAiD,IAA9CmP,EAA8CnP,EAA9CmP,QAASC,EAAqCpP,EAArCoP,YAAaC,EAAwBrP,EAAxBqP,QAASL,EAAehP,EAAfgP,SAC5D,OACI3J,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAAE8J,UAAW,WACpBN,EACG3J,EAAAC,EAAAC,cAAA,OAAKgK,UAAWF,EAAQL,UAAWjW,IAAKC,EAAE,cAE1CqM,EAAAC,EAAAC,cAAA,OAAKgK,UAAWF,EAAQd,SAAUY,QAASA,GACtCC,EAAcrW,IAAKC,EAAE,aAAeD,IAAKC,EAAE,iBC7BnDwW,GAAgB,EAOhBC,GAAgB,SAAAzC,GACzB,OAVkC,GAU3BA,GAGE0C,GAAuB,SAAAnF,GAChC,OAAOoF,KAAKC,OACPrF,EARLsF,IAPkC,KAmBzBC,GAAe,SAAA9C,GACxB,OAhB4B,GAgBF+C,GAAoB/C,GAAM,IAG3C+C,GAAsB,SAAA/C,GAC/B,OAAOyC,GAAczC,GAjBrB6C,yBCAEG,eACF,SAAAA,EAAY9J,GAAO,IAAA+J,EAAA,OAAAxX,OAAAyX,EAAA,EAAAzX,CAAAqP,KAAAkI,IACfC,EAAAxX,OAAA0X,EAAA,EAAA1X,CAAAqP,KAAArP,OAAA2X,EAAA,EAAA3X,CAAAuX,GAAAK,KAAAvI,KAAM5B,KAOVoK,YAAc,WACVL,EAAKM,SAAS,CAAEC,UAAU,IAC1BC,OAAOC,iBAAiB,YAAaT,EAAKU,QAC1CF,OAAOC,iBAAiB,UAAWT,EAAKW,YAXzBX,EAcnBU,OAAS,SAAAE,GACLA,EAAMC,iBACND,EAAME,kBAEN,IAAMC,EAAYH,EAAMI,QAGpBhB,EAAK/J,MAAMgL,gBACXF,IAAcf,EAAK/J,MAAMqE,QACzByG,EAAY,GAEZG,sBAAsB,WAClBlB,EAAK/J,MAAMgL,eAAeF,MA1BnBf,EA+BnBW,UAAY,WACRX,EAAKM,SAAS,CAAEC,UAAU,IAC1BC,OAAOW,oBAAoB,YAAanB,EAAKU,QAC7CF,OAAOW,oBAAoB,UAAWnB,EAAKW,WAEvCX,EAAK/J,MAAM0K,WACXX,EAAK/J,MAAM0K,aAlCfX,EAAKvQ,MAAQ,CACT8Q,UAAU,GAJCP,kFA0Cf,MAA4C,oBAA9BnI,KAAK5B,MAAMgL,eACrB7L,EAAAC,EAAAC,cAAA,OACIgK,UAAWF,KAAQgC,WACnB7L,MAAO,CAAE+E,OAhDE,GAiDX+G,YAAaxJ,KAAKwI,cAEtB,sCAIJ,IAAM/F,EAASoF,KAAK4B,IAAIzJ,KAAK5B,MAAMqE,OAAQ,GAvDxB,EAyDbiH,EAAY/Y,OAAO2R,OACrB,CACIG,SACAkH,ID7DgB,GC8DhBC,gBAAiB5J,KAAK5B,MAAMyL,SACtBlD,IAAOmD,UACPnD,IAAOoD,MACbC,cAhEW,GAmEfhK,KAAKpI,MAAM8Q,SAAW,CAAEuB,WAAY,QAAW,IAGnD,OACI1M,EAAAC,EAAAC,cAAA,OAAKC,MAAOgM,EAAWjC,UAAWF,KAAQ2C,MACtC3M,EAAAC,EAAAC,cAAA,OAAKgK,UAAWF,KAAQlE,SAAUrD,KAAK5B,MAAM+L,UAC5CnK,KAAKoK,2BAvEGC,IAAMC,WA8G/BpC,GAAWqC,aAAe,CACtBnB,eAAgB,KAChBN,UAAW,MAGAZ,+BCzGAsC,GAhBE,SAAAtS,GAAA,IAAGuP,EAAHvP,EAAGuP,UAAH,OACblK,EAAAC,EAAAC,cAAA,OACIgK,UAAWA,EACXgD,MAAM,6BACNC,QAAQ,aAERnN,EAAAC,EAAAC,cAAA,QAAM/D,EAAE,gBAAgBiR,KAAK,SAC7BpN,EAAAC,EAAAC,cAAA,QAAM/D,EAAE,6FACR6D,EAAAC,EAAAC,cAAA,QAAM/D,EAAE,gBAAgBiR,KAAK,WCTxBC,GAAqB,eAAA1S,EAAAvH,OAAAkO,EAAA,EAAAlO,CAAAmO,EAAAtB,EAAAuB,KAAG,SAAAC,EAAO6L,EAAWha,GAAlB,IAAAU,EAAAC,EAAA,OAAAsN,EAAAtB,EAAA2B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAChBpL,wBADgB,OAC3B3C,EAD2B6N,EAAAG,KAE3B/N,EAF2B,4BAAAJ,OAEOyZ,EAFP,cAAAzZ,OAE6BP,GAE9DU,EAAG6C,IAAIC,SAASqI,KAAKlL,GAJY,wBAAA4N,EAAAS,SAAAb,MAAH,gBAAAc,EAAAqB,GAAA,OAAAjJ,EAAA6H,MAAAC,KAAApN,YAAA,GCQ5B4T,GAAS,CACXsE,KAAM,CACFC,OAAQ,OAEZtW,KAAM,CACFiS,MAAOC,IAAOqE,QACdC,QAAS,eACThE,eAAgB,OAChBiE,cAAe,OAEnBC,KAAM,CACF1I,OAAQ,OACR2I,UAAW,MACX7I,MAAO,QAEXzH,SAAU,CACN6P,KAAMhE,IAAOoD,OAEjBsB,WAAY,CACRV,KAAMhE,IAAOC,UA6CNQ,wBAAWZ,GAAXY,CAzCkB,SAAAlP,GAM3B,IALFe,EAKEf,EALFe,QACA6B,EAIE5C,EAJF4C,SACA5D,EAGEgB,EAHFhB,MACAiB,EAEED,EAFFC,YACAoP,EACErP,EADFqP,QAEM+D,EAAY,CACdxQ,WACA2M,UAAWF,EAAQuD,MAGvB,GAAI7R,EAAS,CACT,IAAMsS,EAAgBzQ,EAAWyM,EAAQzM,SAAWyM,EAAQ8D,WAC5DC,EAAUH,KACN5N,EAAAC,EAAAC,cAAC+N,GAAD,CAAU/D,UAAS,GAAArW,OAAKmW,EAAQ4D,KAAb,KAAA/Z,OAAqBma,KAIhD,OACIhO,EAAAC,EAAAC,cAACgO,GAAA,EAAD,CACIhE,UAAWF,EAAQ9S,KACnBiX,GAAE,IAAAta,OAAM+G,GACRkP,QAASsE,KACL,kBAAMf,GAAsB,iBAAkBzS,IAC9C,MAGJoF,EAAAC,EAAAC,cAACmO,EAAA,EAASN,EAAYpU,MC9CnB2U,GAZO,kBAClBtO,EAAAC,EAAAC,cAAA,OACIgN,MAAM,6BACNlI,MAAM,KACNE,OAAO,KACPkI,KAAMhE,IAAOmF,QACbpB,QAAQ,aAERnN,EAAAC,EAAAC,cAAA,QAAM/D,EAAE,0QCSDqS,GAhBG,SAAA7T,GAAA,IAAGuP,EAAHvP,EAAGuP,UAAH,OACdlK,EAAAC,EAAAC,cAAA,OACIgK,UAAWA,EACXkD,KAAMhE,IAAOqF,QACbvB,MAAM,6BACNC,QAAQ,aAERnN,EAAAC,EAAAC,cAAA,QAAM/D,EAAE,0GACR6D,EAAAC,EAAAC,cAAA,QAAM/D,EAAE,gBAAgBiR,KAAK,gCCMtBsB,GAZY,SAAA/T,GAAA,IAAGgU,EAAHhU,EAAGgU,QAAH,OACvB3O,EAAAC,EAAAC,cAAA,UAAQgK,UAAWF,KAAQ4E,OAAQ9E,QAAS6E,GACxC3O,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAC2O,GAAD,CAAW3E,UAAWF,KAAQ4D,KAAMzE,MAAM,cCFzC2F,GAAY,CACrB,CAAExb,GAAI,MAAO0E,MAAO,aACpB,CAAE1E,GAAI,KAAM0E,MAAO,iBACnB,CAAE1E,GAAI,SAAU0E,MAAO,sBAYd+W,GAAuC,GACvCC,GAAwCF,GAAU,GAAGxb,GAuCnD4J,eAAgB,CAC3Bd,KArCS,WAA0D,IAAzD/B,EAAyDhF,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAjD0Z,GAAsC5R,EAAW9H,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACnE,OAAQ4H,EAAO7K,MACX,IAzBkC,6BA0B9B,OAAOuG,YACHsE,EAAOnF,MACP+W,IAER,QACI,OAAO1U,IA8BfoC,MA1BU,WAA2D,IAA1DpC,EAA0DhF,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAlD2Z,GAAuC7R,EAAW9H,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACrE,OAAQ4H,EAAO7K,MACX,IApCmC,8BAqC/B,OAAOuG,YACHsE,EAAOnF,MACP+W,IAER,QACI,OAAO1U,IAmBf4U,MAfU,WAA2D,IAA1D5U,EAA0DhF,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GApC/D,WAoCoD8H,EAAW9H,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACrE,OAAQ4H,EAAO7K,MACX,IA/CmC,8BAgD/B,OAAOuG,YACHsE,EAAOnF,MAxCb,YA2CF,QACI,OAAOqC,MAYN6U,GAA2B,SAAA7U,GAAK,OAAIA,EAAM8U,kBAI1CC,GAAiB,SAAA/U,GAAK,OAAI6U,GAAyB7U,GAAO+B,MC9D1DiT,GAAgB,GAChBC,GAAiB,GAExBrG,GAAS,CACXsG,YAAa,CACThG,SAAU,OACVvE,MAAO,QACPE,OAAQ,OACRkH,IAAK,QAEToD,WAAY,CACRrG,MAAOC,IAAOC,QACdrE,MAAO,OACPE,OAAQ,SAIHuK,GAAb,SAAAC,GACI,SAAAD,EAAY5O,GAAO,IAAA+J,EAAA,OAAAxX,OAAAyX,EAAA,EAAAzX,CAAAqP,KAAAgN,IACf7E,EAAAxX,OAAA0X,EAAA,EAAA1X,CAAAqP,KAAArP,OAAA2X,EAAA,EAAA3X,CAAAqc,GAAAzE,KAAAvI,KAAM5B,KAaV8O,eAAiB,SAAAnE,GACbA,EAAMC,iBAENb,EAAK/J,MAAM+O,aAAapE,EAAMqE,OAAO7X,QAjBtB4S,EAoBnBkF,YAAc,SAAAtE,GACV,OAAQA,EAAMuE,SACV,KAAKV,GACDzE,EAAK/J,MAAMmP,kBACX,MACJ,KAAKV,GACD1E,EAAK/J,MAAM+O,iBAvBnBhF,EAAKvQ,MAAQ,CACTrC,MAAO+W,IAJInE,EADvB,OAAAxX,OAAA6c,EAAA,EAAA7c,CAAAqc,EAAAC,GAAAtc,OAAA8c,EAAA,EAAA9c,CAAAqc,EAAA,EAAAjI,IAAA,4BAAAxP,MAAA,SAS8BmY,GACtB1N,KAAKyI,SAAS,CACVlT,MAAOmY,EAAU/T,SAX7B,CAAAoL,IAAA,SAAAxP,MAAA,WAkCa,IAAAoY,EACmC3N,KAAK5B,MAArCmJ,EADHoG,EACGpG,QAAS5N,EADZgU,EACYhU,KAAMwT,EADlBQ,EACkBR,aAEjBS,EACFrQ,EAAAC,EAAAC,cAACoQ,GAAArQ,EAAD,CAAgBsQ,SAAS,SACrBvQ,EAAAC,EAAAC,cAACsQ,GAAAvQ,EAAD,CAAYiK,UAAWF,EAAQwF,cAIjCiB,EACO,KAATrU,GAAwB,OAATA,EACX4D,EAAAC,EAAAC,cAACoQ,GAAArQ,EAAD,CAAgBsQ,SAAS,OACrBvQ,EAAAC,EAAAC,cAACwQ,GAAD,CAAa/B,QAAS,kBAAMiB,QAEhC,KAER,OACI5P,EAAAC,EAAAC,cAACyQ,GAAA1Q,EAAD,CACIiK,UAAWF,EAAQuF,YACnBqB,YAAald,IAAKC,EAAE,0BACpB0c,eAAgBA,EAChBI,aAAcA,EACdzY,MAAOyK,KAAKpI,MAAMrC,MAClB6Y,SAAUpO,KAAKkN,eACfmB,QAASrO,KAAKqN,kBA1D9BL,EAAA,CAA4B1C,aAuE5B0C,GAAOzC,aAAe,CAClB5Q,KAAM,GACNwT,aAAcmB,SAASC,WAGZnH,4BAAWZ,GAAXY,CAAmB4F,yBC5ErBwB,GAAgB,GAEhBC,GAAb,SAAAxB,GAAA,SAAAwB,IAAA,IAAAC,EAAAvG,EAAAxX,OAAAyX,EAAA,EAAAzX,CAAAqP,KAAAyO,GAAA,QAAAE,EAAA/b,UAAAC,OAAA+b,EAAA,IAAA9Z,MAAA6Z,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAAD,EAAAC,GAAAjc,UAAAic,GAAA,OAAA1G,EAAAxX,OAAA0X,EAAA,EAAA1X,CAAAqP,MAAA0O,EAAA/d,OAAA2X,EAAA,EAAA3X,CAAA8d,IAAAlG,KAAAxI,MAAA2O,EAAA,CAAA1O,MAAA5O,OAAAwd,MACIhX,MAAQ,CACJsN,KAAMwC,IAFdS,EAKI2G,yBAA2B,SAAA5J,GACvBiD,EAAKM,SAAS,CAAEvD,OAAMoC,YAAapC,IAASsJ,MANpDrG,EAiBIiB,eAAiB,SAAAF,GACb,IAAM6F,EAAiB7F,EAAY,GAC7B8F,EAAUnH,KAAK4B,IACjB/B,GACAE,GAAqBmH,IAGzB,GAAIC,IAAY7G,EAAKvQ,MAAMsN,KAAM,CAC7B,IAAM+J,EAAcpH,KAAKqH,IAAIF,EAASR,IAEtCrG,EAAK/J,MAAMgL,eAAe6F,KA3BtC9G,EA+BIW,UAAY,WACR,OAAO9D,GAAsBmD,EAAKvQ,MAAMsN,OAhChDiD,EAmCIgH,kBAAoB,WAChB,IAAMjK,EACFiD,EAAKvQ,MAAMsN,OAASsJ,GACdrG,EAAK/J,MAAM0F,SACX0K,GAEVrG,EAAKM,SAAS,CAAEvD,OAAMoC,aAAca,EAAKvQ,MAAM0P,eAzCvDa,EA4CIiH,kBAAoB,WAChBjH,EAAK/J,MAAMiR,QAAQC,KAAnB,IAAAle,OAA4B+W,EAAK/J,MAAM5F,WAAW,GAAG3H,MA7C7DsX,EAAA,OAAAxX,OAAA6c,EAAA,EAAA7c,CAAA8d,EAAAxB,GAAAtc,OAAA8c,EAAA,EAAA9c,CAAA8d,EAAA,EAAA1J,IAAA,oBAAAxP,MAAA,WAUQyK,KAAK8O,yBAAyB9O,KAAK5B,MAAM0F,YAVjD,CAAAiB,IAAA,4BAAAxP,MAAA,SAa8BmY,GACtB1N,KAAK8O,yBAAyBpB,EAAU5J,YAdhD,CAAAiB,IAAA,SAAAxP,MAAA,WAgDa,IAAAoY,EACwD3N,KAAK5B,MAA1D5F,EADHmV,EACGnV,WAAYmB,EADfgU,EACehU,KAAM4V,EADrB5B,EACqB4B,WAAYC,EADjC7B,EACiC6B,mBAEhCC,EAAWzP,KAAKpI,MAAM0P,YACtBkH,GACAxO,KAAKpI,MAAMsN,KACXwK,EAAmBzH,GAAoBwH,GACvCE,EAAsB,CACxBC,QAAO,GAAAxe,OVpFqB,GUoFrB,gBACPye,UAAW7P,KAAKpI,MAAM0P,YAAc,OAAS,SAC7C7E,OAAQkF,GAAc8H,GVtFM,IUyFhC,OACIlS,EAAAC,EAAAC,cAACqS,GAAD,CACIrN,OAAQiN,EACRtG,eAAgBpJ,KAAKoJ,eACrBN,UAAW9I,KAAK8I,UAChBe,UAAU,GAEVtM,EAAAC,EAAAC,cAAA,OAAKC,MAAOiS,GACRpS,EAAAC,EAAAC,cAAA,OAAKgK,UAAWF,KAAQzQ,cACpByG,EAAAC,EAAAC,cAACgO,GAAA,EAAD,CACI/N,MAAO,CACHuN,QAAS,eACThE,eAAgB,OAChB8I,YAAa,GACbjC,SAAU,WACVnE,IAAK,OAET+B,GAAI,QAEJnO,EAAAC,EAAAC,cAACuS,GAAD,OAEJzS,EAAAC,EAAAC,cAACwS,GAAD,CACItW,KAAMA,EACNwT,aAAcqC,EACdjC,gBAAiBvN,KAAKoP,qBAG7Bxa,YAAQ4D,GAAYiB,IAAI,SAAAT,GAAS,OAC9BuE,EAAAC,EAAAC,cAACyS,GAAD,CACInL,IAAK/L,EAAUnI,GACfqG,MAAO8B,EAAUY,YACjBX,QAASD,EAAUC,QACnBd,YAAaa,EAAUnI,GACvBiK,SAAU9B,EAAUnI,KAAO0e,OAIvChS,EAAAC,EAAAC,cAAC0S,GAAD,CACI9I,QAASrH,KAAKmP,kBACd7H,YAAatH,KAAKpI,MAAM0P,YACxBJ,SAAUlH,KAAK5B,MAAM0F,WAAa0K,UArGtDC,EAAA,CAAmCnE,aAmH7B8F,GAAqB,CACvBhH,eAAgB7D,GAChBiK,mBC5I2B,SAAAja,GAAK,MAAK,CACrC1F,KHNsC,6BGOtC0F,WD2KW8a,gBACXzS,YA3CoB,SAAAhG,GAAK,MAAK,CAC9BY,WAAYG,EAAkBf,GAC9B+B,KAAMgT,GAAe/U,GACrBkM,SAAUC,GAAuBnM,GACjC2X,WAAYxU,GAAenD,KAyCvBwY,GAlCW,SAACE,EAAYC,EAAeC,GAC3C,IAAMhY,EAAa7H,OAAOmI,OAAO9D,YAASsb,EAAW9X,aAC/CiY,EAAoBpX,IACtBb,EAAWO,OAAO,SAAAW,GAAC,OACfA,EAAEE,YAAY8W,cAAcC,SAASL,EAAW3W,KAAK+W,iBAEzD,MACA,eAGJ,OAAO/f,OAAA0H,EAAA,EAAA1H,CAAA,GACA2f,EACAE,EACAD,EAHP,CAII/X,WAAU,GAAApH,OAAAT,OAAAyI,EAAA,EAAAzI,CACH8f,EAAkB1X,OAAO,SAAAW,GAAC,OAAIA,EAAET,WAD7BtI,OAAAyI,EAAA,EAAAzI,CAEH8f,EAAkB1X,OAAO,SAAAW,GAAC,OAAKA,EAAET,eAgB5C2E,CAIE6Q,KEhKS7Q,eATS,SAAAhG,GAAK,MAAK,CAC9BkM,SAAUC,GAAuBnM,KAQtBgG,CAhBiB,SAAAQ,GAC5B,IAAM8G,EAAO9G,EAAMyL,SAAWnC,GAAgBtJ,EAAM0F,SAC9CsH,EAAYpD,GAAa9C,GAE/B,OAAO3H,EAAAC,EAAAC,cAAA,OAAKgK,UAAU,4BAA4B/J,MAAO,CAAE0N,sCCKhDwF,GAfQ,SAAA1Y,GAAA,IAAG2Y,EAAH3Y,EAAG2Y,MAAH,OACnBtT,EAAAC,EAAAC,cAACmO,EAAA,EAAD,CACIkF,OAAK,EACL/L,IAAK8L,EACL3J,UAAQ,EACRhQ,MACIqG,EAAAC,EAAAC,cAAA,KAAGC,MAAO,CAAEgJ,MAAOC,IAAOqF,QAASrO,WAAY,QAAUkT,MCYtDE,GAlBI,SAAA7Y,GAAA,IAAGuP,EAAHvP,EAAGuP,UAAH,OACflK,EAAAC,EAAAC,cAAA,OACIgK,UAAWA,EACXgD,MAAM,6BACNlI,MAAM,KACNE,OAAO,KACPkI,KAAMhE,IAAOqE,QACbN,QAAQ,aAERnN,EAAAC,EAAAC,cAAA,QAAM/D,EAAE,gBAAgBiR,KAAK,SAC7BpN,EAAAC,EAAAC,cAAA,QAAM/D,EAAE,8JCHVsX,GAAa,SAAA9Y,GAAA,IAAG1G,EAAH0G,EAAG1G,IAAH,OACf+L,EAAAC,EAAAC,cAAA,KACI4J,QAAS,SAAA4J,GAAC,OAAIA,EAAEhI,mBAChBxB,UAAWF,KAAQtQ,WACnBmW,OAAO,SACP8D,IAAI,sBACJC,KAAM3f,GAEN+L,EAAAC,EAAAC,cAAC2T,GAAD,QAQFC,GAAe,kBACjB9T,EAAAC,EAAAC,cAAA,UAAQgK,UAAWF,KAAQpQ,cAAelG,IAAKC,EAAE,YAyCtCogB,GAtCS,SAAAte,GAA4C,IAAzCnD,EAAyCmD,EAAzCnD,KAAM8J,EAAmC3G,EAAnC2G,KAAM4X,EAA6Bve,EAA7Bue,SAAU/f,EAAmBwB,EAAnBxB,IAAKggB,EAAcxe,EAAdwe,QAC5CC,EAAW9f,YAAY9B,GAEvB6hB,EACF7hB,IAASjB,IACL+iB,gBAAaH,GAEbjU,EAAAC,EAAAC,cAACgU,EAAD,CAAU/T,MAAO,CAAEiN,KAAMhE,IAAOqE,WAGxC,OACIzN,EAAAC,EAAAC,cAACmO,EAAA,EAAD,CACIkF,OAAK,EACLzJ,QAASkK,EACTra,MACIqG,EAAAC,EAAAC,cAAA,OAAKgK,UAAWF,KAAQvQ,UACpBuG,EAAAC,EAAAC,cAAA,OAAKgK,UAAWF,KAAQrQ,OACpBqG,EAAAC,EAAAC,cAAA,QAAMC,MAAO,CAAEqN,OAAQ,QAClB2G,GAELnU,EAAAC,EAAAC,cAAA,YAAO9D,GACNnI,EAAM+L,EAAAC,EAAAC,cAACmU,GAAD,CAAYpgB,IAAKA,IAAU,MAEtC+L,EAAAC,EAAAC,cAACoU,GAAD,UCtCPC,GAAc,CACvB,CACIjhB,GAAI,aACJkhB,OAAQ9gB,IAAKC,EAAE,oBACf8G,MAAO,CACH,CACInI,KAAMN,IACNoK,KAAM1I,IAAKC,EAAE,YACbmS,QAAS,IAEb,CACIxT,KAAMP,IACNqK,KAAM1I,IAAKC,EAAE,YACbmS,QAAS,QAEb,CACIxT,KAAML,IACNmK,KAAM1I,IAAKC,EAAE,UACbmS,QAAS5T,QAOZuiB,GAAmB,CAC5BpjB,IACAG,IACAC,IACAC,IACAI,IACAF,IACAC,IACAF,KAIS+iB,GAAgB,CAAC9iB,IAASC,IAAWC,2BCrC5C6iB,eACF,SAAAA,EAAY9T,GAAO,IAAA+J,EAAA,OAAAxX,OAAAyX,EAAA,EAAAzX,CAAAqP,KAAAkS,IACf/J,EAAAxX,OAAA0X,EAAA,EAAA1X,CAAAqP,KAAArP,OAAA2X,EAAA,EAAA3X,CAAAuhB,GAAA3J,KAAAvI,KAAM5B,KAOV+T,QAAU,SAAAviB,GAAI,OAAI,WAAM,IAAA+d,EACsCxF,EAAK/J,MAAvDvO,EADY8d,EACZ9d,KAAMqT,EADMyK,EACNzK,mBAAoBkP,EADdzE,EACcyE,oBAElC,GAAIviB,IAASX,IACTgU,EAAmB,CAAErT,OAAMwT,QAASzT,EAAKmV,UACtC,CACH,IAAMsN,EAAU,CACZxhB,GAAIjB,EAAKiB,GACT8I,KAAM/J,EAAKgK,aAAehK,EAAK+J,MAG/BsY,GAActB,SAAS9gB,GACvBuiB,EAAoBviB,EAAMwiB,GAE1BnP,EAAmB,CAAErT,OAAMwT,QAASgP,OAtB7BlK,EA2BnBmK,cAAgB,WACZnK,EAAKM,SAAS,CAAE8J,SAAUpK,EAAKvQ,MAAM2a,UAErCpK,EAAK/J,MAAMoU,mBAAmBrK,EAAK/J,MAAMvO,OA3BzCsY,EAAKvQ,MAAQ,CACT2a,SAAS,GAJEpK,wEAiCV,IAAAsK,EAAAzS,KAAA0S,EACmC1S,KAAK5B,MAArCyS,EADH6B,EACG7B,MAAOhhB,EADV6iB,EACU7iB,KAAMmI,EADhB0a,EACgB1a,MAAO2a,EADvBD,EACuBC,QAC5B,OACIpV,EAAAC,EAAAC,cAACmV,EAAA,SAAD,KACIrV,EAAAC,EAAAC,cAACoV,GAAD,CAAgBhC,MAAOA,IACtB7Y,EAAMyB,IAAI,SAAA7J,GACP,IAAMkjB,EAAUxhB,YAAWzB,EAAMD,EAAM6iB,EAAKM,QAAQxhB,IACpD,OACIgM,EAAAC,EAAAC,cAACuV,GAAD,CACIjO,IAAKnV,EAAKiB,IAAMjB,EAAKmV,IACrBlV,KAAMA,EACN2hB,QAAS3hB,IAASjB,IAAgBgB,EAAKC,KAAOA,EAC9C8J,KAAM/J,EAAKgK,aAAehK,EAAK+J,KAC/B4X,SAAUkB,EAAKN,QAAQviB,GACvB4B,IAAKshB,MAIhBH,EACGpV,EAAAC,EAAAC,cAACmO,EAAA,EAAD,CACIkF,OAAK,EACL/L,IAAG,WAAA3T,OAAayf,GAChBxJ,QAASrH,KAAKsS,cACdpb,MACIqG,EAAAC,EAAAC,cAAA,UAAQgK,UAAWF,KAAQ/U,gBACtBwN,KAAKpI,MAAM2a,QACNthB,IAAKC,EAAE,cACPD,IAAKC,EAAE,gBAIzB,KACJqM,EAAAC,EAAAC,cAACmO,EAAA,EAAD,CAASb,OAAO,oBAlEGT,aAkFnC4H,GAAqBe,aAAe,CAChC1hB,GAAI2hB,IAAUtc,OAAOuc,YAGVvV,mBACX,KACA,CACIsF,sBACAkP,oBCnG2B,SAACviB,EAAMwT,GAAP,OAAmB,SAACpE,EAAUkB,GAC7D,IAMIiT,EANExb,EAAQuI,IACRkT,EAAepjB,IAAYJ,GAAMkB,SACjCuJ,EAAiBiH,GAAsB3J,GAAO0C,eAC9CgZ,EAAqBhZ,EAAeiZ,UACtC,SAAA3jB,GAAI,OAAIA,EAAKC,OAASA,IAKtByjB,GAAsB,IACtBF,EAAgB9Y,EAAegZ,IACjBD,GAAc/D,KAAKjM,GAEjCpE,EAASsE,GAAsB6P,KAO/BnU,EAASiE,GALTkQ,EAAgB,CACZvjB,KAAMA,EACNwT,QAAS,CAACA,SD6EPzF,CAMbsU,IE3EatU,eACX,KACA,CAAEsF,uBAFStF,CAzBiB,SAAA1F,GAAsC,IAAnCgL,EAAmChL,EAAnCgL,mBAAoBsQ,EAAetb,EAAfsb,SAC7CC,EAAiB,SAAAzgB,GAAA,IAAGnD,EAAHmD,EAAGnD,KAAMwT,EAATrQ,EAASqQ,QAAT,OAAuB,WAC1CH,EAAmB,CAAErT,OAAMwT,cAG/B,OACI9F,EAAAC,EAAAC,cAACmV,EAAA,SAAD,KACIrV,EAAAC,EAAAC,cAACoV,GAAD,CAAgBhC,MAAO2C,EAASzB,SAC/ByB,EAASxb,MAAMyB,IAAI,SAAA7J,GAAI,OACpB2N,EAAAC,EAAAC,cAACuV,GAAD,CACIjO,IAAKnV,EAAKC,KACVA,KAAMD,EAAKC,KACX8J,KAAM/J,EAAK+J,KACX4X,SAAUkC,EAAe7jB,UCRvC8jB,YAAkB,SAAAtV,GAAK,OACzBb,EAAAC,EAAAC,cAACmO,EAAA,EAAD,CACIjS,KAAK,wBACLzC,MAAOjG,IAAKC,EAAE,6CACdrB,KAAK,OACLue,SAAUhQ,EAAMgQ,SAChBuF,QAASvV,EAAMuV,QACfpe,MAAO6I,EAAM7I,UAIfqe,eACF,SAAAA,EAAYxV,GAAO,IAAA+J,EAAA,OAAAxX,OAAAyX,EAAA,EAAAzX,CAAAqP,KAAA4T,IACfzL,EAAAxX,OAAA0X,EAAA,EAAA1X,CAAAqP,KAAArP,OAAA2X,EAAA,EAAA3X,CAAAijB,GAAArL,KAAAvI,KAAM5B,KAWVyV,UAAY,WACR1L,EAAKM,SAAS,CAAEtL,MAAM,EAAOpE,OAAQ,MAbtBoP,EAgBnB2L,SAAW,SAACC,EAAGhL,GACXZ,EAAK6L,aAEL7L,EAAKM,SAAS,CACVwL,SAAUlL,EAAMmL,cAChB/W,MAAM,KArBKgL,EAyBnBgM,UAAY,SAACJ,EAAGhL,GACZZ,EAAKM,SAAS,CAAE1P,OAAQgQ,EAAMqE,OAAO7X,OAAS4S,EAAK6L,aA1BpC7L,EA6BnBiM,yBAA2B,kBACvBpC,GACKjZ,OAAO,SAAAlJ,GACJ,IAAMM,EAAWF,IAAYJ,GAC7B,OACIsY,EAAKvQ,MAAMI,OAASmQ,EAAKvQ,MAAMI,MAAM7H,EAASW,gBAGrD2I,IAAI,SAAA5J,GACD,IAAMM,EAAWF,IAAYJ,GACvBwkB,EAAY/jB,YAAoBT,GAChCykB,EAAWnM,EAAKvQ,MAAMI,MAAM7H,EAASW,cACrC6hB,EAAU2B,EAASzhB,OAASwhB,EAC5Brc,EAAQmQ,EAAKvQ,MAAM2c,WAAWjQ,IAAInU,EAASU,IAC3CyjB,EACAA,EAAS5d,MAAM,EAAG2d,GAExB,OACI9W,EAAAC,EAAAC,cAAC+W,GAAD,CACIzP,IAAKlV,EACLA,KAAMA,EACNghB,MAAO1gB,EAASa,YAChBgH,MAAOA,EACPwa,mBAAoBrK,EAAK6L,WACzBrB,QAASA,OArDVxK,EA0DnBsM,qBAAuB,kBACnB3C,GAAYrY,IAAI,SAAA+Z,GAAQ,OACpBjW,EAAAC,EAAAC,cAACiX,GAAD,CAAkB3P,IAAKyO,EAAS3iB,GAAI2iB,SAAUA,OA5DnCrL,EA+DnBwM,cAAgB,kBACZxM,EAAKiM,2BAA2BhjB,OAAO+W,EAAKsM,yBAhE7BtM,EAkEnB6L,WAlEmB,eAAA9b,EAAAvH,OAAAkO,EAAA,EAAAlO,CAAAmO,EAAAtB,EAAAuB,KAkEN,SAAAC,EAAMnP,GAAN,IAAA0kB,EAAAK,EAAA7b,EAAA,OAAA+F,EAAAtB,EAAA2B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACLzP,IACM0kB,EAAapM,EAAKvQ,MAAM2c,YAEfjQ,IAAIzU,GACf0kB,EAAW5X,OAAO9M,GAElB0kB,EAAWM,IAAIhlB,GAGnBsY,EAAKM,SAAS,CAAE8L,gBAEhBpM,EAAKM,SAAS,CACV8L,WAAY,IAAIO,MAIpBF,EAAc,YACdjkB,OAAAyI,EAAA,EAAAzI,CAAIwX,EAAKvQ,MAAM2c,WAAWzb,UAAUjG,SACpC+hB,GACI,QAAUjkB,OAAAyI,EAAA,EAAAzI,CAAIwX,EAAKvQ,MAAM2c,WAAWzb,UAAU3F,KAAK,UAGrD4F,EAASoP,EAAKvQ,MAAMmB,OAAX,IAAA3H,OAAwB+W,EAAKvQ,MAAMmB,QAAW,GAE7DoP,EAAK4K,QAAQxhB,GAAG6C,IAAIC,SACfC,IADL,eAAAlD,OACwB2H,GADxB3H,OACiCwjB,IAC5BzgB,KAAK,SAAA0O,GAAQ,OAAIsF,EAAKM,SAAS,CAAEzQ,MAAO6K,MACxCtG,MAAMP,QAAQD,OA5BV,wBAAAqD,EAAAS,SAAAb,MAlEM,gBAAAc,GAAA,OAAA5H,EAAA6H,MAAAC,KAAApN,YAAA,GAGfuV,EAAKvQ,MAAQ,CACTqc,SAAU,KACV9W,MAAM,EACNoX,WAAY,IAAIO,IAChB9c,WAAOlF,EACPiG,OAAQ,IARGoP,wEAkGf,OACI5K,EAAAC,EAAAC,cAACmV,EAAA,SAAD,KACIrV,EAAAC,EAAAC,cAACsX,GAAD,CACIxf,MAAOyK,KAAKpI,MAAMmB,OAClBqV,SAAUpO,KAAKmU,UACfR,QAAS3T,KAAK8T,WAElBvW,EAAAC,EAAAC,cAACuX,GAAAxX,EAAD,CACIiK,UAAU,0BACVtK,KAAM6C,KAAKpI,MAAMuF,KACjBsB,QAASuB,KAAK6T,UACdI,SAAUjU,KAAKpI,MAAMqc,SACrBgB,aAAc,CAAEC,WAAY,OAAQC,SAAU,UAC9CC,gBAAiB,CAAEF,WAAY,OAAQC,SAAU,OACjDzX,MAAO,CAAE+E,OAAQ,QACjB4S,WAAY,CAAE3X,MAAO,CAAE6E,MAAO,UAC9B+S,kBAAkB,EAClBC,qBAAqB,GAErBhY,EAAAC,EAAAC,cAACmO,EAAA,EAAD,KAAO5L,KAAK2U,0BAtHLtK,IAAMC,WAmIjCsJ,GAAaX,aAAe,CACxB1hB,GAAI2hB,IAAUtc,OAAOuc,YAGVS,UC3GF4B,GAAe,SAAAtd,GAMtB,IALFyB,EAKEzB,EALFyB,KACAE,EAIE3B,EAJF2B,YACA4b,EAGEvd,EAHFud,cACAC,EAEExd,EAFFwd,oBACAnO,EACErP,EADFqP,QAUA,OACIhK,EAAAC,EAAAC,cAAA,WAASgK,UAAWF,EAAQoO,SACxBpY,EAAAC,EAAAC,cAAA,OAAKgK,UAAWF,EAAQqO,kBACpBrY,EAAAC,EAAAC,cAACmO,EAAA,EAAD,CACInE,UAAWF,EAAQsJ,MACnBlX,KAAK,wBACLzC,MAAOjG,IAAKC,EAAE,mBACdrB,KAAK,OACLue,SAhBI,SAAC2F,EAAG9C,GACpBwE,EAAcxE,EAAE7D,OAAO7X,QAgBXA,MAAOoE,IAEX4D,EAAAC,EAAAC,cAACmO,EAAA,EAAD,CACInE,UAAWF,EAAQ1N,YACnBF,KAAK,8BACLzC,MAAOjG,IAAKC,EAAE,yBACdkd,SAnBU,SAAC2F,EAAG9C,GAC1ByE,EAAoBzE,EAAE7D,OAAO7X,QAmBjBA,MAAOsE,KAGf0D,EAAAC,EAAAC,cAAA,OAAKgK,UAAWF,EAAQsO,cACpBtY,EAAAC,EAAAC,cAACqY,GAAD,SAeV1F,GAAqB,CACvBqF,c9BnD+B,SAAAlgB,GAAK,MAAK,CACzC1F,KN7C0B,iBM8C1B0F,U8BkDAmgB,oB9B/CqC,SAAAngB,GAAK,MAAK,CAC/C1F,KNjDgC,uBMkDhC0F,W8BgDWqI,eAdS,SAAAhG,GACpB,IAAMme,EAAoB/gB,YAASuM,GAAsB3J,IAEzD,MAAO,CACH+B,KAAMoc,EAAkBpc,KACxBE,YAAakc,EAAkBlc,cAWnCuW,GAFWxS,CAGbwJ,qBA/Fa,CACXuO,QAAS,CAAE1K,QAAS,OAAQ+K,eAAgB,iBAC5CJ,iBAAkB,CACdK,KAAM,IACNlG,YAAa,QAEjBc,MAAO,CACH5F,QAAS,QACTiL,MAAO,QAEXrc,YAAa,CACToR,QAAS,QACTiL,MAAO,OACP9K,UAAW,QAEf+K,UAAW,CACPC,YAAa,CACTC,aAAY,QAEhBC,kBAAmB,CACfD,aAAY,mBAGpBE,MAAO,CACH3M,gBAAiB,uBACjB4M,aAAc,MACdjU,MAAO,OACPyE,UAAW,CACP4C,gBAAiB,yBAGzBiM,aAAc,CACVI,KAAM,IACNnI,SAAU,aA8DhB1G,CAAmBoO,KAUrBA,GAAajL,aAAe,CACxB5Q,KAAM,GACNE,YAAa,yICzGX4c,GAAO/Q,uBACPgR,GAAO/Q,wBAEPgR,8MACFC,UAAY,SAAA/lB,GAAE,OAAI,kBAAMsX,EAAK/J,MAAMwY,UAAU/lB,oFAE7B,IAAA8c,EAC8C3N,KAAK5B,MAAvD8H,EADIyH,EACJzH,oBAAqB2Q,EADjBlJ,EACiBkJ,UAAWC,EAD5BnJ,EAC4BmJ,cAClCC,EAAWF,EAAUhmB,GAErBmmB,EAAc,CAChBzlB,GAAIyO,KAAK+S,QAAQxhB,GACjB0lB,SAAUjX,KAAK5B,MAAM6Y,SACrBC,WAAYlX,KAAK5B,MAAM8Y,WACvBC,UAAWnX,KAAK5B,MAAM+Y,WAG1B,OAAQJ,GACJ,KAAKN,GACD,OACIlZ,EAAAC,EAAAC,cAAC2Z,GAAA,gBAADzmB,OAAA2R,OAAA,CACI+U,gBAAiBP,GACbE,IAIhB,KAAKN,GACD,OACInZ,EAAAC,EAAAC,cAAC2Z,GAAA,iBAADzmB,OAAA2R,OAAA,CACI4D,oBAAqBA,EACrBoR,QAASR,GACLE,IAGhB,QACI,OACIzZ,EAAAC,EAAAC,cAAC2Z,GAAA,iBAADzmB,OAAA2R,OAAA,CACIwU,cAAeA,EACfC,SAAUA,EACVQ,YAAaV,EAAUld,MACnBqd,sCAMf,IAAAtE,EAC0B1S,KAAK5B,MAA5ByY,EADHnE,EACGmE,UAAWpY,EADdiU,EACcjU,QACbsY,EAAWF,EAAUhmB,GAE3B,OACI0M,EAAAC,EAAAC,cAAC+Z,GAAAha,EAAD,CACIL,OAAQ4Z,EACRU,SAAS,KACTC,qBAAmB,EACnBjZ,QAASA,GAERsY,GAAY/W,KAAK2X,gBAClBpa,EAAAC,EAAAC,cAACma,GAAApa,EAAD,KACID,EAAAC,EAAAC,cAACmO,EAAA,EAAD,CAAQiM,KAAK,YAAYxQ,QAAS5I,GAC7BxN,IAAKC,EAAE,WAEZqM,EAAAC,EAAAC,cAACmO,EAAA,EAAD,CAAQiM,KAAK,UAAUxQ,QAASrH,KAAK4W,UAAUG,IAC1C9lB,IAAKC,EAAE,qBA5DLoZ,aA+E3BqM,GAAa1D,aAAe,CACxB1hB,GAAI2hB,IAAUtc,QAGH+f,UCpGFmB,GAAuC,GAevCC,GAA2B,SAAAngB,GAAK,OAAIA,EAAMogB,sBCb1CC,GAA4B,SAAA1iB,GAAK,MAAK,CAC/C1F,KDNsC,6BCOtC0F,UCqBE2iB,eACF,SAAAA,EAAY9Z,GAAO,IAAA+J,EAAA,OAAAxX,OAAAyX,EAAA,EAAAzX,CAAAqP,KAAAkY,IACf/P,EAAAxX,OAAA0X,EAAA,EAAA1X,CAAAqP,KAAArP,OAAA2X,EAAA,EAAA3X,CAAAunB,GAAA3P,KAAAvI,KAAM5B,KAOV+Z,UAAY,SAACpE,EAAGhL,GACZZ,EAAKM,SAAS,CAAEwL,SAAUlL,EAAMmL,iBATjB/L,EAYnBiQ,WAAa,WACTjQ,EAAKM,SAAS,CAAEwL,SAAU,QAbX9L,EAgBnBkQ,YAAc,WACVlQ,EAAKM,SAAS,CAAEwL,SAAU,OAE1B9L,EAAK/J,MAAMka,6BAnBInQ,EAsBnBoQ,gBAAkB,SAAA1nB,GACdsX,EAAK/J,MAAMoa,wBACPrQ,EAAK/J,MAAMyH,WAAWf,KAAK,SAAA+R,GAAS,OAAIA,EAAUhmB,KAAOA,MAxB9CsX,EA4BnBsQ,cAAgB,SAAAvgB,GAA4B,IAAzBwgB,EAAyBxgB,EAAzBwgB,YAAa1gB,EAAYE,EAAZF,MAC5BmQ,EAAK/J,MAAMua,mBAAXhoB,OAAA0H,EAAA,EAAA1H,CAAA,GACOwX,EAAK/J,MAAM0Y,cADlBnmB,OAAA2H,EAAA,EAAA3H,CAAA,GAEK+nB,EAAc1gB,MA/BJmQ,EAmCnByQ,gBAAkB,SAAA5lB,GAAsC,IAAnC0lB,EAAmC1lB,EAAnC0lB,YAAaG,EAAsB7lB,EAAtB6lB,gBAExBC,GADU3Q,EAAK/J,MAAM0Y,cAAc4B,IAAgB,IACjC3f,OACpB,SAAAnJ,GAAI,OAAKipB,EAAgBlI,SAAS/gB,EAAKiB,MAGvCioB,EAAQjmB,OACRsV,EAAK/J,MAAMua,mBAAXhoB,OAAA0H,EAAA,EAAA1H,CAAA,GACOwX,EAAK/J,MAAM0Y,cADlBnmB,OAAA2H,EAAA,EAAA3H,CAAA,GAEK+nB,EAAcI,KAGnB3Q,EAAK/J,MAAM2a,qBAAqBL,IA/CrBvQ,EAmDnB6Q,eAAiB,SAAA3lB,GAA8B,IAA3BqlB,EAA2BrlB,EAA3BqlB,YAAaO,EAAc5lB,EAAd4lB,QACvBC,EAAU/Q,EAAK/J,MAAM0Y,cAAc4B,IAAgB,GACnDS,EAAgBF,EAAQxf,IAAI,SAAA5I,GAAE,OAChCqoB,EAAQpU,KAAK,SAAAlV,GAAI,OAAIA,EAAKiB,KAAOA,MAGrCsX,EAAK/J,MAAMua,mBAAXhoB,OAAA0H,EAAA,EAAA1H,CAAA,GACOwX,EAAK/J,MAAM0Y,cADlBnmB,OAAA2H,EAAA,EAAA3H,CAAA,GAEK+nB,EAAcS,MA3DJhR,EA+DnBiR,WAAa,SAAAvoB,GACT,IAAMwoB,EAAclR,EAAK/J,MAAM0Y,cAAcjmB,GAEzCwoB,GAAeA,EAAYxmB,OAC3BsV,EAAK/J,MAAMkb,cAAc,CACrBzoB,KACA0E,MAAM5E,OAAAyI,EAAA,EAAAzI,CAAK0oB,KAGflR,EAAK/J,MAAMmb,iBAAiB1oB,GAGhCsX,EAAKkQ,eAxELlQ,EAAKvQ,MAAQ,CACTqc,SAAU,MAJC9L,wEA8EV,IAAAwF,EAQD3N,KAAK5B,MANLob,EAFC7L,EAED6L,MACAtT,EAHCyH,EAGDzH,oBACA2Q,EAJClJ,EAIDkJ,UACAhR,EALC8H,EAKD9H,WACA4T,EANC9L,EAMD8L,mBACA3C,EAPCnJ,EAODmJ,cAGJ,OACIvZ,EAAAC,EAAAC,cAACmV,EAAA,SAAD,KACIrV,EAAAC,EAAAC,cAACmO,EAAA,EAAD,CAAQvE,QAASrH,KAAKmY,WACjBlnB,IAAKC,EAAE,cACRqM,EAAAC,EAAAC,cAACic,GAAAlc,EAAD,OAEJD,EAAAC,EAAAC,cAACuX,GAAAxX,EAAD,CACIL,KAAMwc,QAAQ3Z,KAAKpI,MAAMqc,UACzBA,SAAUjU,KAAKpI,MAAMqc,SACrBgB,aAAc,CAAEE,SAAU,SAAUD,WAAY,QAChDzW,QAASuB,KAAKoY,WACd1a,MAAO,CACH+E,OAAQ,OACRmX,WAAYJ,EAAMK,WAAWD,aAGjCrc,EAAAC,EAAAC,cAAC2Z,GAAA,gBAAD,CACI1Z,MAAO,CAAE6E,MAAO,SAChBsD,WAAYA,EACZiU,iBAAkB9Z,KAAKuY,gBACvBwB,YAAaN,KAGpB5C,EACGtZ,EAAAC,EAAAC,cAACuc,GAAD,CACI9T,oBAAqBA,EACrB2Q,UAAWA,EACXC,cAAeA,EAAcD,EAAUhmB,KAAO,GAC9ComB,SAAUjX,KAAKyY,cACfvB,WAAYlX,KAAK4Y,gBACjBzB,UAAWnX,KAAKgZ,eAChBva,QAASuB,KAAKqY,YACdzB,UAAW5W,KAAKoZ,aAEpB,aA3HS9O,aAwJd1M,eAvBS,SAAAhG,GAAK,MAAK,CAC9BsO,oBAAqBI,GAAgC1O,GACrDif,UAAWkB,GAAyBngB,GACpCiO,WAAYD,GAAehO,GAC3B6hB,mBAAoBxX,GAAgBrK,GACpCkf,cAAelV,GAAwBhK,KAoBvC,CACI0gB,0BD7KmC,iBAAO,CAC9CzoB,KDVwC,iCEuLpC2oB,wBAAyBP,GACzBqB,crC9KuB,SAAAvgB,GAAM,MAAK,CACtClJ,KDV2B,kBCW3BkJ,WqC6KIwgB,iBAAkBpX,GAClB4W,qBAAsB3W,GACtBuW,mBpC3K4B,SAAAsB,GAAO,MAAK,CAC5CpqB,KHhBiC,wBGiBjCoqB,aoCiKWrc,CAUbsc,sBAAYhC,0BCpKCiC,8MApBXC,MAAO,0EAIH,OADApa,KAAKoa,MAAQpa,KAAKoa,KACXpa,KAAKoa,sCAGP,IAAA3H,EAAAzS,KACL,OACIzC,EAAAC,EAAAC,cAAA,OAAK4J,QAAS,kBAAMoL,EAAKrU,MAAMiJ,QAAQoL,EAAK4H,YACxC9c,EAAAC,EAAAC,cAAC6c,GAAA9c,EAAD,CAAiBE,MAAO,CAAEiN,KAAMhE,IAAOqE,mBAXpCV,aCqBbiQ,GAAiBtpB,IAAKC,EAAE,kBAExBsV,GAAS,CACXgU,QAAS,CACLvP,QAAS,OACTwP,WAAY,SACZC,WAAY,QAEhBC,SAAU,CACNhQ,KAAMhE,IAAOqE,SAEjB4P,WAAY,CACRC,SAAU,OACVlR,IAAK,OAETmR,SAAU,CACN7P,QAAS,eACTC,cAAe,MACfjE,eAAgB,OAChB8I,YAAa,OAEjBgL,SAAU,CACN9P,QAAS,OACTwP,WAAY,cAEhBO,aAAc,CACVN,WAAY,EACZ5M,SAAU,WACVnE,IAAK,EACL9C,OAAQ,YAIVoU,eACF,SAAAA,EAAY7c,GAAO,IAAA+J,EAAA,OAAAxX,OAAAyX,EAAA,EAAAzX,CAAAqP,KAAAib,IACf9S,EAAAxX,OAAA0X,EAAA,EAAA1X,CAAAqP,KAAArP,OAAA2X,EAAA,EAAA3X,CAAAsqB,GAAA1S,KAAAvI,KAAM5B,KAOV8c,oBAAsB,kBAClB/S,EAAKM,SAAS,CAAE0S,qBAAsBhT,EAAKvQ,MAAMujB,uBANjDhT,EAAKvQ,MAAQ,CACTujB,qBAAqB,GAJVhT,wEAWV,IAAAwF,EAYD3N,KAAK5B,MAVLvN,EAFC8c,EAED9c,GACA8I,EAHCgU,EAGDhU,KACAE,EAJC8T,EAID9T,YACAO,EALCuT,EAKDvT,OACAsD,EANCiQ,EAMDjQ,MACA9C,EAPC+S,EAOD/S,gBACA3B,EARC0U,EAQD1U,QACAmiB,EATCzN,EASDyN,YACAC,EAVC1N,EAUD0N,YACA9T,EAXCoG,EAWDpG,QAGE+T,EAAa3qB,OAAO2R,OAAO,GAAI5E,EAAMmT,MAAO,CAC9ChK,OAAQ,UACR0U,WAAY,OACZ5R,IAAK,QAGHa,EAAWvR,EAAUuS,KAAOgQ,KAElC,OACIje,EAAAC,EAAAC,cAACmV,EAAA,SAAD,KACIrV,EAAAC,EAAAC,cAAA,OAAKgK,UAAWF,EAAQwT,UACpBxd,EAAAC,EAAAC,cAAA,QAAMC,MAAO4d,GAAa3hB,GAC1B4D,EAAAC,EAAAC,cAAA,OAAKgK,UAAWF,EAAQiT,SACpBjd,EAAAC,EAAAC,cAAA,OACIgK,UAAWF,EAAQyT,aACnB3T,QAAS+T,GAET7d,EAAAC,EAAAC,cAAC+M,EAAD,CAAU/C,UAAWF,EAAQoT,YAEjCpd,EAAAC,EAAAC,cAAA,OAAKgK,UAAWF,EAAQyT,cACpBzd,EAAAC,EAAAC,cAACge,GAAD,CAAMpU,QAASgU,KAEnB9d,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAAEgd,WAAY,SACrBtgB,EAAOshB,OACJne,EAAAC,EAAAC,cAACgO,GAAA,EAAD,CACIhE,UAAWF,EAAQuT,SACnBpP,GAAE,IAAAta,OAAMP,EAAN,UAEF0M,EAAAC,EAAAC,cAACmO,EAAA,EAAD,KAAS3a,IAAKC,EAAE,UAEpB,KACHkJ,EAAOuhB,OACJpe,EAAAC,EAAAC,cAAA,QAAMC,MAAO,CAAEqS,YAAa,QACxBxS,EAAAC,EAAAC,cAACmO,EAAA,EAAD,CAAQvE,QAASrH,KAAKkb,qBACjBjqB,IAAKC,EAAE,WAGhB,KACJqM,EAAAC,EAAAC,cAAA,QAAMC,MAAO,CAAEqS,YAAa,QACxBxS,EAAAC,EAAAC,cAACme,GAAD,UAKfhhB,EACG2C,EAAAC,EAAAC,cAAA,OACIgK,UAAU,wBACV/J,MAAO/M,OAAO2R,OACV,CAAEyE,WAAY,MAAOiD,cAAe,OACpCtM,EAAM7D,YACLA,EAAkC,GAApB,CAAE6M,MAAO,UAG3B7M,GAAe0gB,IAEpB,KACH1pB,EACG0M,EAAAC,EAAAC,cAACoe,GAAAre,EAAD,CACIjM,GAAIyO,KAAK+S,QAAQxhB,GACjBV,GAAIA,EACJhB,KAAK,YACLsN,KAAM6C,KAAKpI,MAAMujB,oBACjBW,eAAgB9b,KAAKkb,sBAEzB,aA1FO5Q,aA4HZ1M,eA5BS,SAAAhG,GACpB,IAAM/G,EAAKkK,GAAenD,GACpBoB,EAAYhE,YAASyD,EAAkBb,EAAO/G,IAEpD,MAAO,CACHA,KACA8I,KAAMX,EAAUY,YAChBC,YAAab,EAAUc,mBACvBQ,eAAgB1B,EAAmBhB,GACnCgD,gBAAiBK,GAA4BrD,GAC7CqB,QAASD,EAAUC,QACnBmB,OAAQpF,YAASgE,EAAUoB,UAmB/B,KAfe,SAACkW,EAAYC,EAAeC,GAAa,IAChD3f,EAAiCyf,EAAjCzf,GAAIoI,EAA6BqX,EAA7BrX,QAAS2B,EAAoB0V,EAApB1V,gBACbqE,EAAasR,EAAbtR,SAER,OAAOtO,OAAA0H,EAAA,EAAA1H,CAAA,GACA2f,EACAE,EAFP,CAGI4K,YAAa,kBAAMnc,EnClEG,SAACpO,EAAI4L,GAAL,sBAAApJ,EAAA1C,OAAAkO,EAAA,EAAAlO,CAAAmO,EAAAtB,EAAAuB,KAAmB,SAAA0F,EAAMxF,GAAN,IAAAoB,EAAAvE,EAAA,OAAAgD,EAAAtB,EAAA2B,KAAA,SAAAwF,GAAA,cAAAA,EAAAtF,KAAAsF,EAAArF,MAAA,cACvCe,EAAY,SAAAxP,GAEd,OADAoO,EAASwE,GAAsB5S,EAAI4L,IAC5B5L,GAGLiL,EAAU,SAAAC,GAEZ,OADAC,QAAQC,IAAI,6BAA8BF,GACnCA,GARkC4I,EAAAtF,KAAA,EAAAsF,EAAArF,KAAA,EAWnC9C,GAAiB3L,EAAI4L,GAXc,cAAAkI,EAAAlF,OAAA,SAYlCY,EAAUxP,IAZwB,cAAA8T,EAAAtF,KAAA,EAAAsF,EAAA/E,GAAA+E,EAAA,SAAAA,EAAAlF,OAAA,SAclC3D,EAAO6I,EAAA/E,KAd2B,yBAAA+E,EAAA9E,SAAA4E,EAAA,iBAAnB,gBAAAY,GAAA,OAAAhS,EAAA0M,MAAAC,KAAApN,YAAA,GmCkEMmpB,CAAelrB,GAAKoI,KAChDoiB,YAAa,kBACTpc,E7ClJ0C,CAClDpP,KZ3BwC,+BY4BxC0F,O6CgJ+CqF,QAIpCgD,CAIbwJ,qBAAWZ,GAAXY,CAAmB6T,KAerBA,GAAa1Q,aAAe,CACxB5Q,KAAM,GACNE,YAAa,GACbZ,SAAS,EACT2B,iBAAiB,EACjBygB,YAAa,MAGjBJ,GAAahI,aAAe,CACxB1hB,GAAI2hB,IAAUtc,oBC1MZ8G,GAAQ,CACVmT,MAAO,CACH/C,SAAU,WACVhH,SAAU,GACVnJ,WAAY,IACZ+I,MAAOC,IAAOqV,MACdnB,SAAU,IAEdhhB,YAAa,CACTiN,SAAU,GACVJ,MAAOC,IAAOqF,UAyBPiQ,GArBE,SAAA/jB,GAAc,IAAXgkB,EAAWhkB,EAAXgkB,KAChB,OACI3e,EAAAC,EAAAC,cAAA,OACIgK,UAAU,mBACV/J,MAAO,CACHkS,QAAS,uBAGZsM,EACG3e,EAAAC,EAAAC,cAAC0e,GAAD,CAAcze,MAAOA,KAErBH,EAAAC,EAAAC,cAAC2e,GAAD,CAAc1e,MAAOA,8DClB/B2e,eAGF,SAAAA,EAAYje,EAAO2U,GAAS,IAAA5K,EAAA,OAAAxX,OAAAyX,EAAA,EAAAzX,CAAAqP,KAAAqc,IACxBlU,EAAAxX,OAAA0X,EAAA,EAAA1X,CAAAqP,KAAArP,OAAA2X,EAAA,EAAA3X,CAAA0rB,GAAA9T,KAAAvI,KAAM5B,KAHVke,kBAAoB,KAEQnU,EAM5BoU,mBAAqB,SAAAC,GAMjB,IAAMC,EAAgBtU,EAAK/J,MAAMxO,OAAS4sB,EAAU5sB,KAE9C8sB,EAAiBF,EAAUxa,cAAgBmG,EAAK/J,MAAM4D,YACtD2a,EAAM3nB,YAASmT,EAAK/J,MAAM2C,eAC1B6b,EAAU5nB,YAASwnB,EAAUzb,eAC7B8b,EACFF,EAAI9rB,KAAO+rB,EAAQ/rB,IAAM8rB,EAAIG,aAAeF,EAAQE,WAExD,OAAOL,IAAkBI,GAAcH,IApBfvU,EAuB5B4U,aAAe,SAAAP,GACX,GACIQ,KACI7U,EAAK/J,MAAMxO,KACXuY,EAAK/J,MAAM2C,gBAEfoH,EAAKoU,mBAAmBC,GAC1B,CACE,IAAMI,EAAU5nB,YAASwnB,EAAUzb,eAC7Bkc,EAAa9U,EAAK/J,MAAM2C,cAExBmc,EACFD,EAAWH,aAAeF,EAAQE,YAClCG,EAAWH,aAAe3U,EAAK/J,MAAMxO,KAAKC,MAG1CqtB,GACA/U,EAAK/J,MAAM4D,cAAgBwa,EAAUxa,eAErCgb,KACI7U,EAAK/J,MAAMxO,KACXgtB,EAAQE,YAAc3U,EAAK/J,MAAMxO,KAAKC,MAG1CmtB,KAAmB7U,EAAK/J,MAAMxO,KAAMuY,EAAK/J,MAAM2C,cAAe,CAC1Doc,YAAahV,EAAKmU,kBAClBQ,WAAYI,EAAgBD,EAAWH,WAAa,UAjDxC3U,EA2E5BiV,cAAgB,kBACZjV,EAAK/J,MAAM2C,cAAc+b,YAAc3U,EAAK/J,MAAMxO,KAAKC,MAzEvDsY,EAAK5W,GAAKwhB,EAAQxhB,GAHM4W,mFAVN,IAAA5W,EAkElByO,KAAKsc,mBAlEa/qB,EAkEyByO,KAAKzO,GAjE7C,CACHiF,QAAS9E,YAAWH,GACpB8rB,KAAM9rB,EAAG6C,IAAIC,SAASipB,eAAeC,gBAkEjCP,KACIhd,KAAK5B,MAAMxO,KACXoQ,KAAK5B,MAAM2C,gBAGfic,KAAmBhd,KAAK5B,MAAMxO,KAAMoQ,KAAK5B,MAAM2C,cAAe,CAC1Doc,YAAand,KAAKsc,kBAClBQ,WAAa9c,KAAK5B,MAAMyL,SAAkC,KAAvB7J,KAAKod,6DAKjCZ,GACfxc,KAAK+c,aAAaP,oCAMb,IAAA7O,EAC2C3N,KAAK5B,MAA7CmJ,EADHoG,EACGpG,QAAS3X,EADZ+d,EACY/d,KAAMmR,EADlB4M,EACkB5M,cAAerD,EADjCiQ,EACiCjQ,MAMtC,OAL0Bsf,KACtBptB,EACAmR,GAIAxD,EAAAC,EAAAC,cAAA,OAAK5M,GAAI2sB,aAAiB5tB,EAAKiB,IAAK6M,MAAOA,IAE3CH,EAAAC,EAAAC,cAAA,OAAKgK,UAAWF,EAAQkW,SACnBxsB,IAAKC,EAAE,mDA5FIoZ,aAkG5B+R,GAAcpJ,aAAe,CACzB1hB,GAAI2hB,IAAUtc,QAYlBylB,GAAc9R,aAAe,CACzB7M,MAAO,GACP9N,KAAM,GACNoS,YAAa,GACbjB,cAAe,IAGJsb,qDC/GAqB,GAfU,SAAAxlB,GAAA,IAAGmP,EAAHnP,EAAGmP,QAAH,OACrB9J,EAAAC,EAAAC,cAAA,UACI5N,KAAK,SACL4X,UAAWF,KAAQ9U,iBACnB4U,QAASA,EACTwJ,MAAO5f,IAAKC,EAAL,gBAEPqM,EAAAC,EAAAC,cAACkgB,GAAAngB,EAAD,CAAYE,MAAO,CAAEiN,KAAMhE,IAAOiX,iCCoCpCxN,GAAqB,CACvB5M,0BAGW5F,eARS,SAAAhG,GAAK,MAAK,CAC9BiS,SAAUpI,GAAc7J,KASxBwY,GAFWxS,CA7CI,SAAAQ,GAAS,IAEpByS,EAKAzS,EALAyS,MACAhH,EAIAzL,EAJAyL,SACAgU,EAGAzf,EAHAyf,cACAC,EAEA1f,EAFA0f,OACAta,EACApF,EADAoF,sBAKJ,OACIjG,EAAAC,EAAAC,cAAA,OAAKgK,UAAWF,KAAQlQ,gBACpBkG,EAAAC,EAAAC,cAAA,KAAGgK,UAAWF,KAAQjQ,WAAYuZ,GACjChH,EACGtM,EAAAC,EAAAC,cAAA,OAAKgK,UAAWF,KAAQhQ,iBACpBgG,EAAAC,EAAAC,cAACsgB,GAAD,CAAkB1W,QAPT,kBAAM7D,EAAsBsa,OAUzCD,GACItgB,EAAAC,EAAAC,cAAA,OAAKgK,UAAWF,KAAQhQ,iBACnBsmB,oGC7BZG,GAAY,kBACrBzgB,EAAAC,EAAAC,cAAA,OACIgF,OAAO,KACPiI,QAAQ,YACRnI,MAAM,KACNkI,MAAM,8BAENlN,EAAAC,EAAAC,cAAA,QACI/D,EAAE,wOACFiR,KAAK,cAKJsT,GAAe,kBACxB1gB,EAAAC,EAAAC,cAAA,OACIgF,OAAO,KACPiI,QAAQ,YACRnI,MAAM,KACNkI,MAAM,8BAENlN,EAAAC,EAAAC,cAAA,QACI/D,EAAE,kIACFiR,KAAK,UACLuT,SAAS,UACTC,UAAU,uBCFhBC,GAAW,CAAEzT,KAAMhE,IAAOqE,SAwHjBqT,GAtHW,SAAAjgB,GAAS,IAAAkgB,EACCC,mBAAS,MADVC,EAAA7tB,OAAA8tB,GAAA,EAAA9tB,CAAA2tB,EAAA,GACxBrK,EADwBuK,EAAA,GACdE,EADcF,EAAA,GAGvB5uB,EAA4DwO,EAA5DxO,KAAMmR,EAAsD3C,EAAtD2C,cAAe4d,EAAuCvgB,EAAvCugB,mBAAoBptB,EAAmB6M,EAAnB7M,GAAIurB,EAAe1e,EAAf0e,WAE/C8B,EAAgBvuB,YAAoBT,EAAKC,MAEzCgvB,EAAc,WAChBF,EAAmBC,EAAgB5vB,IAAeH,KAClDiwB,KAGEC,EAAc,WAChBJ,EAAmBC,EAAgB3vB,IAAcH,KACjDgwB,KAGEE,EAAY,WACdL,EAAmB5vB,KACnB+vB,KAcEA,EAAc,kBAAMJ,EAAY,OAEhC7uB,EAAOkR,EAAclR,MAAQD,EAAKC,KAClCovB,GAAaC,yBAAcrvB,KAAUsvB,0BAAetvB,GAEpDuvB,EAA0BhhB,EAAMihB,aAChCpuB,IAAKC,EAAL,oCACAD,IAAKC,EAAL,oCA8BN,OAAOouB,aAAkB1vB,EAAMmR,GAC3BxD,EAAAC,EAAAC,cAAAF,EAAAC,EAAA+hB,SAAA,KACIhiB,EAAAC,EAAAC,cAACmO,EAAA,EAAD,CAAQ4T,OAAK,EAACC,WAAS,EAACpY,QAhDR,SAAC0M,EAAGhL,GAAJ,OAAc2V,EAAY3V,EAAMmL,iBAiD5C3W,EAAAC,EAAAC,cAACiiB,GAAD,OAEJniB,EAAAC,EAAAC,cAACuX,GAAAxX,EAAD,CACIL,KAAMwc,QAAQ1F,GACdxV,QAASqgB,EACT7K,SAAUA,GAEV1W,EAAAC,EAAAC,cAACmO,EAAA,EAAD,KACKqT,GACG1hB,EAAAC,EAAAC,cAAAF,EAAAC,EAAA+hB,SAAA,KACIhiB,EAAAC,EAAAC,cAzCA,kBACpBF,EAAAC,EAAAC,cAAAF,EAAAC,EAAA+hB,SAAA,KACIhiB,EAAAC,EAAAC,cAACmO,EAAA,EAAD,CACIkF,OAAK,EACL6O,OAAQ7C,IAAehuB,IACvBoI,MAAOjG,IAAKC,EAAE,iBACdmW,QAAS0X,EACT5T,KAAM5N,EAAAC,EAAAC,cAACmiB,GAAApiB,EAAD,CAAWE,MAAO0gB,OAE5B7gB,EAAAC,EAAAC,cAACmO,EAAA,EAAD,CACIkF,OAAK,EACL6O,OAAQ,CAAC9wB,IAAcG,KAAc2hB,SAASmM,GAC9C5lB,MAAOjG,IAAKC,EAAE,iBACdmW,QAASwX,EACT1T,KAAM5N,EAAAC,EAAAC,cAACoiB,GAAAriB,EAAD,CAAWE,MAAO0gB,OAlCPluB,YAAWN,EAAKC,OAqCjC0N,EAAAC,EAAAC,cAACmO,EAAA,EAAD,CACIkF,OAAK,EACL6O,OAAQ7C,IAAe/tB,IACvBmI,MAAOjG,IAAKC,EAAE,eACdmW,QAAS2X,EACT7T,KAAM5N,EAAAC,EAAAC,cAACqiB,GAAAtiB,EAAD,CAASE,MAAO0gB,SAmBd,MACA7gB,EAAAC,EAAAC,cAACmO,EAAA,EAAD,OAGRrO,EAAAC,EAAAC,cAACmO,EAAA,EAAD,CACIkF,OAAK,EACL3F,KAAM5N,EAAAC,EAAAC,cAACsiB,GAAAviB,EAAD,CAAYE,MAAO,CAAEiN,KAAM,aACjCzT,MAAOjG,IAAKC,EAAE,0BAA2B,CACrCT,QAASD,YAAWZ,EAAKC,QAE7BshB,KAAM6O,aAAQpwB,EAAM2B,GACpB6b,OAAO,WAEX7P,EAAAC,EAAAC,cAACmO,EAAA,EAAD,CACIkF,OAAK,EACL3F,KAAM5N,EAAAC,EAAAC,cAACwiB,GAAD,MACN/oB,MAAOkoB,EACP/X,QA1Ec,WAC9BjJ,EAAM8hB,iBACW,OAAbjM,GACA6K,UA4EJ,4BC9HFphB,GAAQ,CACVyiB,gBAAiB,CACbtQ,UAAW,OACXpN,OAAQ,SAEZ2d,KAAM,CACFrV,OAAQ,eACRtI,OAAQ,MACR4d,OAAQ,OACRzW,gBAAiBjD,IAAO2Z,UAI1BC,oLAEE,IAAMC,EAAWC,aAAMzgB,KAAK5B,MAAMxO,MAElC,OACI2N,EAAAC,EAAAC,cAAA,OAAKgK,UAAU,yBACXlK,EAAAC,EAAAC,cAAA,MAAIC,MAAOA,GAAM0iB,OACjB7iB,EAAAC,EAAAC,cAAA,OAAKC,MAAOA,GAAMyiB,iBACd5iB,EAAAC,EAAAC,cAACijB,GAAAljB,EAAD,CACIjM,GAAIyO,KAAK+S,QAAQxhB,GACjB3B,KAAMoQ,KAAK5B,MAAMxO,KACjBC,KAAMmQ,KAAK5B,MAAMxO,KAAKC,KAAK6gB,cAC3B7f,GAAI2vB,EACJ/vB,QAAQ,uBAbP6Z,aAqBzBiW,GAAWtN,aAAe,CACtB1hB,GAAI2hB,IAAUtc,OAAOuc,YAOVoN,UC1BAI,GAlBI,SAAAC,GACf,IAAIC,OAAW/tB,EACXguB,OAAYhuB,EAEhB,OAAO,WAAa,QAAA6b,EAAA/b,UAAAC,OAAT+b,EAAS,IAAA9Z,MAAA6Z,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAATD,EAASC,GAAAjc,UAAAic,GAChB,OACIgS,GACAjS,EAAK/b,SAAWguB,EAAShuB,QACzB+b,EAAKmS,MAAM,SAACC,EAAKC,GAAN,OAAYD,IAAQH,EAASI,KAEjCH,GAEXD,EAAWjS,EACXkS,EAAYF,EAAE7gB,WAAF,EAAM6O,MCYpBsS,GAAgB,GAEhB1a,GAAS,CACX2E,KAAM,CACF5I,MAAO,GACPE,OAAQ,GACRiY,WAAY,EACZ7T,OAAQ,UACR8D,KAAMhE,IAAOqE,SAEjB6F,MAAO,CACHsQ,SAAU,SACV1J,SAAU,MACV2J,aAAc,WACdC,WAAY,UAEhB5D,QAAS,CACL3W,SAAU,OACVwa,YAAa,SACb1R,QAAS,OACT2R,WAAY,SAIdC,GAAe,SAACzgB,EAAekZ,GACjC,IAAKtpB,OAAOuR,KAAK+X,GAASpnB,OACtB,OAAOkO,EAIX,IAAM0gB,EAAU1gB,EAAcmE,KAAKzL,IAAI,SAAApE,GAAG,OAAA1E,OAAA0H,EAAA,EAAA1H,CAAA,GAAU0E,KAC9CqsB,EAAa3gB,EAAc4gB,QAAQloB,IAAI,SAAApE,GAAG,OAAA1E,OAAA0H,EAAA,EAAA1H,CAAA,GAAU0E,KACpDusB,EAAa7gB,EAAckZ,QAAQxgB,IAAI,SAAApE,GAAG,OAAA1E,OAAA0H,EAAA,EAAA1H,CAAA,GAAU0E,KAyB1D,OAvBA1E,OAAOuR,KAAK+X,GAASnZ,QAAQ,SAAA4X,GACzB,GAAIuB,EAAQvB,GAAc,CACtB,IAAImJ,GAAiB,EAErB,CAACJ,EAASC,EAAYE,GAAY9gB,QAAQ,SAAAghB,GAAgB,OACtDA,EACK/oB,OAAO,SAAA1D,GAAG,OAAIA,EAAIwhB,YAAc6B,IAChC5X,QAAQ,SAAAzL,GACLwsB,GAAiB,EACjBxsB,EAAI2C,MAAQiiB,EAAQvB,OAK3BmJ,GACDD,EAAWtS,KAAK,CACZuH,UAAW6B,EACX1gB,MAAOiiB,EAAQvB,QAMxB/nB,OAAA0H,EAAA,EAAA1H,CAAA,GACAoQ,EADP,CAEImE,KAAMuc,EACNE,QAASD,EACTzH,QAAS2H,KAIJG,GAAb,SAAA9U,GAMI,SAAA8U,EAAY3jB,EAAO2U,GAAS,IAAA5K,EAAA,OAAAxX,OAAAyX,EAAA,EAAAzX,CAAAqP,KAAA+hB,IACxB5Z,EAAAxX,OAAA0X,EAAA,EAAA1X,CAAAqP,KAAArP,OAAA2X,EAAA,EAAA3X,CAAAoxB,GAAAxZ,KAAAvI,KAAM5B,KANVxG,MAAQ,CACJoqB,YAAY,EACZC,cAAc,GAGU9Z,EAqB5B+Z,aAAevB,GAAW,kBAAMwB,SArBJha,EAuB5BmU,kBAAoB,KAvBQnU,EAyB5Bia,mBAAqB,WAAM,IAAAzU,EAOnBxF,EAAK/J,MALL4D,EAFmB2L,EAEnB3L,YACA6H,EAHmB8D,EAGnB9D,SACAja,EAJmB+d,EAInB/d,KACA2X,EALmBoG,EAKnBpG,QACA8a,EANmB1U,EAMnB0U,yBAGJ,IAAKA,EACD,OACI9kB,EAAAC,EAAAC,cAAA,OAAKgK,UAAWU,EAAK/J,MAAMmJ,QAAQkW,SAC9BxsB,IAAKC,EAAE,uBAIpB,IAAMwM,EAAQyK,EAAKma,kBACblkB,EAAQ,CAAE4D,cAAa6H,WAAUja,OAAM2X,UAAS7J,SAEtD,OAAQyK,EAAKiV,iBACT,KAAKxuB,IACL,KAAKE,IACL,KAAKD,IACD,OACI0O,EAAAC,EAAAC,cAAC8kB,GAAA,EAAD,CACIhxB,GAAI4W,EAAK5W,GACTwP,cAAeygB,GACXa,EACArgB,GAEJwgB,cAAc,EACd9kB,MAAOA,IAInB,KAAK3O,IACD,IAAIgS,EAAgBshB,EACpB,GAAIzyB,EAAKC,OAASd,IAAK,CAEnB,IAAM0zB,EAAWJ,EAAyBI,SAAShpB,IAC/C,SAAApE,GACI,OACIA,EAAIqtB,MAAM/R,SAAS,aACnBtb,EAAIqtB,MAAM/R,SAAS,SAEZ6Q,GAAansB,EAAK2M,GAGtB3M,IAIf0L,EAAapQ,OAAA0H,EAAA,EAAA1H,CAAA,GACN0xB,EADM,CAETI,kBAIJ1hB,EAAgBygB,GACZa,EACArgB,GAIR,OACIzE,EAAAC,EAAAC,cAACklB,GAADhyB,OAAA2R,OAAA,GAAmBlE,EAAnB,CAA0B2C,cAAeA,KAGjD,QACI,IAAMA,EAAgBygB,GAClBa,EACArgB,GAGJ,OACIzE,EAAAC,EAAAC,cAACklB,GAADhyB,OAAA2R,OAAA,GAAmBlE,EAAnB,CAA0B2C,cAAeA,OApG7BoH,EA0G5B+X,eAAiB,WACb/X,EAAKM,SACD,CAAEuZ,YAAa7Z,EAAKvQ,MAAMoqB,YAC1B7Z,EAAK/J,MAAMwkB,qBAAqBza,EAAK/J,MAAMxO,KAAKiB,MA7G5BsX,EAiH5BwW,mBAAqB,SAAAkE,GACjB,IAAMC,EAAoB3a,EAAKiV,gBAC/B,GAAIyF,IAAkBC,EAAtB,CAIA9F,KAAsB7U,EAAK/J,MAAMxO,KAAMkzB,GAEvC,IAAM/hB,EAAgBic,KAClB7U,EAAK/J,MAAM2C,cACXoH,EAAK/J,MAAMxO,KAAKC,KAChBgzB,GAGJ1a,EAAK/J,MAAM2kB,0BAA0B5a,EAAK/J,MAAM2C,cAAclQ,GAA9DF,OAAA0H,EAAA,EAAA1H,CAAA,GACOoQ,EADP,CAEI+b,WAAY+F,OAjIQ1a,EAqI5BiV,cAAgB,kBACXjV,EAAK/J,MAAMikB,0BACRla,EAAK/J,MAAMikB,yBAAyBvF,YACxC3U,EAAK/J,MAAMxO,KAAKC,MAxIQsY,EA0I5BmX,kBAAoB,kBAChBtC,KACI7U,EAAK/J,MAAMxO,KACXuY,EAAK/J,MAAM2C,gBA7ISoH,EAgJ5Bma,gBAAkB,WAAM,IAAA5P,EACOvK,EAAK/J,MAAxBxO,EADY8iB,EACZ9iB,KAGR,OAJoB8iB,EACN7I,SAOR,CAAEpH,OAAQ0F,EAAK6a,WAAWC,cAH1B,CACIxgB,OAAQ7S,EAAKszB,eAAiBhC,GAJjB,IA/IvB/Y,EAAK5W,GAAKwhB,EAAQxhB,GAElB4W,EAAK6a,WAAa3Y,IAAM8Y,YALAhb,EANhC,OAAAxX,OAAA6c,EAAA,EAAA7c,CAAAoxB,EAAA9U,GAAAtc,OAAA8c,EAAA,EAAA9c,CAAAoxB,EAAA,EAAAhd,IAAA,oBAAAxP,MAAA,eAAA6tB,EAAAzyB,OAAAkO,EAAA,EAAAlO,CAAAmO,EAAAtB,EAAAuB,KAAA,SAAAC,IAAA,IAAA+B,EAAA,OAAAjC,EAAAtB,EAAA2B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAeoC0d,KAAoBhd,KAAK5B,MAAMxO,MAfnE,OAecmR,EAfd3B,EAAAG,KAgBQS,KAAK5B,MAAMilB,sBAAsBtiB,GACjCf,KAAK5B,MAAM2kB,0BACP/iB,KAAK5B,MAAM2C,cAAclQ,GACzBkQ,GAGJf,KAAKyI,SAAS,CACVwZ,cAAc,IAvB1B,wBAAA7iB,EAAAS,SAAAb,EAAAgB,SAAA,yBAAAojB,EAAArjB,MAAAC,KAAApN,YAAA,KAAAmS,IAAA,SAAAxP,MAAA,WAiKa,IAAAkd,EAAAzS,KAAAsjB,EACmCtjB,KAAK5B,MAArCxO,EADH0zB,EACG1zB,KAAMia,EADTyZ,EACSzZ,SAAU7H,EADnBshB,EACmBthB,YAChBggB,EAAehiB,KAAKpI,MAApBoqB,WAEFnE,EACFtgB,EAAAC,EAAAC,cAAC8lB,GAAD,CACI3zB,KAAMA,EACNmR,cAAef,KAAK5B,MAAM2C,cAC1B4d,mBAAoB3e,KAAK2e,mBACzBuB,eAAgBlgB,KAAKkgB,eACrB3uB,GAAIyO,KAAKzO,GACTurB,WAAY9c,KAAKod,gBACjBiC,aAAcrf,KAAKpI,MAAMoqB,aAIjC,OACIzkB,EAAAC,EAAAC,cAAAF,EAAAC,EAAA+hB,SAAA,KACIhiB,EAAAC,EAAAC,cAAC+lB,GAAD,CACI3S,MAAOmM,KAAsBptB,GAC7BkuB,OAAQluB,EAAKiB,GACbgtB,cAAeA,IAEnBtgB,EAAAC,EAAAC,cAAA,OACIsH,IAAK/E,KAAKkiB,aAAalgB,GACvByF,UAAU,yBACVgc,IAAK,SAAAA,GAAG,OAAKhR,EAAKuQ,WAAaS,IAE9BzjB,KAAKpI,MAAMqqB,cAAgBjiB,KAAKoiB,uBAEnCvY,GAAYmY,EAAazkB,EAAAC,EAAAC,cAACimB,GAAD,CAAY9zB,KAAMA,IAAW,UA/LxEmyB,EAAA,CAA0BzX,aAqM1ByX,GAAK9O,aAAe,CAChB1hB,GAAI2hB,IAAUtc,QAelBmrB,GAAKxX,aAAe,CAChB3a,KAAM,GACNia,UAAU,EACV+Y,qBAAsBtU,SAASC,UAC/BvM,YAAa,GACbjB,cAAe,IAGnB,OAoBenD,eApBS,SAAChG,EAAO4Y,GAAR,MAAsB,CAC1CxO,YAAaD,GAAoBnK,GACjCmJ,cAAe1F,GACXzD,EACAolB,KAA8BxM,EAAS5gB,MAAMiB,IAEjDwxB,yBAA0B3mB,GACtB9D,EACAolB,KAA8BxM,EAAS5gB,MAAMiB,MAI1B,SAAAoO,GAAQ,MAAK,CACpCokB,sBAAuB,SAAAtiB,GAAa,OAChC9B,EAASzD,GAAmBuF,KAChCgiB,0BAA2B,SAAClyB,EAAIkQ,GAC5B9B,EAASpD,GAA8B,CAAEhL,KAAIkQ,sBAItCnD,CAGbwJ,qBAAWZ,GAAXY,CAAmB2a,KC/UfrkB,GAAQ,CACVkM,gBAAiBjD,IAAOgd,QACxBtD,OAAQ,OACR5d,OAAQ,MACRsI,OAAQ,mBAKG6Y,GAFF,kBAAMrmB,EAAAC,EAAAC,cAAA,MAAIC,MAAOA,MCGxBmmB,YAAU,WAEVC,IAAYC,GAAA,GAAApzB,OAAA2H,EAAA,EAAA3H,CAAAozB,GACbF,GAAU,WADGlzB,OAAA2H,EAAA,EAAA3H,CAAAozB,GAAA,oBAEK,cAFLpzB,OAAA2H,EAAA,EAAA3H,CAAAozB,GAAA,SAGN,UAHMpzB,OAAA2H,EAAA,EAAA3H,CAAAozB,GAAA,SAIN,UAJMA,IAOZrmB,GAAQ,CACVnJ,KAAM,CACFyvB,cAAe,OACfC,YAAa,OAEjBC,OAAQ,CACJ1c,UAAW,SACXV,SAAU,OACVqd,aAAc,OAElBC,OAAQ,CACJtd,SAAU,OACVya,WAAY,OACZxW,OAAQ,EACRrE,MAAOC,IAAOqF,SAElBqY,QAAS,CACL3d,MAAOC,IAAOqF,QACdlF,SAAU,OACVya,WAAY,OACZ+C,UAAW,OACXnD,SAAU,WAIZoD,8MACF3sB,MAAQ,CACJpC,SAAU,MAWdgvB,eAAiB,SAAA5hB,GACb,IAAM6hB,EAAgB7hB,EAAG,KAAAxR,OAAQwR,EAAI8hB,YAAZ,KAAAtzB,OAA2BwR,EAAI/R,IAAO,GAC/D,SAAAO,OAAU+W,EAAK4K,QAAQvc,QAAvB,wBAAApF,OAAqDqzB,MAGzDE,iBAAmB,SAAA/hB,GACf,IAAMgiB,EAAYhiB,EAAI9F,SAASpG,OAAO,GAAG,GACzC,OAAOkuB,EAAUR,OAASQ,EAAUR,OAAOxqB,YAAc,MAG7DirB,gBAAkB,WACd,IAAMC,EAAa3c,EAAK/J,MAAMyL,SAAoB,KAAT,OAEzC,OAAO1B,EAAK/J,MAAMtB,SAASrD,IAAI,SAAAmJ,GAC3B,IAMMwhB,EACFxhB,EAAI8hB,cAAgBb,GACd1b,EAAKwc,iBAAiB/hB,GACtBkhB,GAAalhB,EAAI8hB,aAErBK,EAAaniB,EAAIoiB,KAAkB,KAAX,SACxBJ,EAAYhiB,EAAI9F,SAASpG,OAAO,GAAG,GACnCuuB,EAAUL,EAAUzqB,YAE1B,OACIoD,EAAAC,EAAAC,cAAA,MACIgK,UAAS,gBAAArW,OAAkB0zB,GAC3B/f,IAAKnC,EAAI/R,GACTwW,QAnBc,WACbc,EAAK/J,MAAMyL,WACZqb,SAASC,SAAShU,KAAOhJ,EAAKqc,eAAe5hB,MAmB7CrF,EAAAC,EAAAC,cAAA,KAAGgK,UAAS,iBAAArW,OAAmB2zB,IAC1BniB,EAAIhJ,YADT,KACwBgJ,EAAIwiB,aAD5B,KAGA7nB,EAAAC,EAAAC,cAAA,KAAGC,MAAOA,GAAM0mB,QACXA,EADL,MACgB9uB,YAAW2vB,EAAS9c,EAAKvQ,MAAMpC,WAE/C+H,EAAAC,EAAAC,cAAA,KAAGC,MAAOA,GAAM2mB,SAAUO,EAAU90B,2NAhDzBkQ,KAAK+S,QAAQxhB,GAAG6S,YAAYihB,aAAa/wB,IAC5D,sBADEkB,SAINwK,KAAKyI,SAAS,CAAEjT,gJAmDhB,OACI+H,EAAAC,EAAAC,cAACmV,EAAA,SAAD,KACIrV,EAAAC,EAAAC,cAAC+lB,GAAD,CACI3S,MAAO5f,IAAKC,EAAE,YACd4sB,OAAQ9d,KAAK5B,MAAMxO,KAAKiB,KAE5B0M,EAAAC,EAAAC,cAAC6nB,GAAD,MACCtlB,KAAK5B,MAAMtB,SAASjK,OAAS,GAC1B0K,EAAAC,EAAAC,cAAA,OAAKgK,UAAU,0BACXlK,EAAAC,EAAAC,cAAA,MAAIC,MAAOA,GAAMnJ,MAAOyL,KAAK6kB,mBAC7BtnB,EAAAC,EAAAC,cAAA,OAAKC,MAAOA,GAAMwmB,QACd3mB,EAAAC,EAAAC,cAAA,KAAG0T,KAAMnR,KAAKwkB,kBACTvzB,IAAKC,EAAE,+BAzEboZ,aAyF3Bia,GAAatR,aAAe,CACxB1hB,GAAI2hB,IAAUtc,OACdJ,QAAS0c,IAAUqS,QAGvB,IAWeC,GALW5nB,YANF,SAAAhG,GACpB,MAAO,CACHkF,SAAUnM,OAAOmI,OAAO+D,GAAiBjF,MAM7C,KAFsBgG,CAGxB2mB,yBCpHakB,GA5BU,SAAArnB,GAAK,OAC1Bb,EAAAC,EAAAC,cAACmV,EAAA,SAAD,KACIrV,EAAAC,EAAAC,cAAC+lB,GAAD,CACI3S,MAAO5f,IAAKC,EAAE,qCAAsC,CAChDrB,KAAMuO,EAAMxO,KAAKC,OAErBiuB,OAAQ1f,EAAMxO,KAAKiB,KAEvB0M,EAAAC,EAAAC,cAAA,OACIC,MAAO,CACHuN,QAAS,OACT+K,eAAgB,SAChByE,WAAY,SACZhY,OAAQ,QAGZlF,EAAAC,EAAAC,cAACioB,GAAAloB,EAAD,CACIE,MAAO,CAAE6E,MAAO,IAAKE,OAAQ,IAAKkjB,MAAO,UACzCjf,MAAM,gBCJP1U,GAhBS,SAAAkG,GAAA,IAAGuP,EAAHvP,EAAGuP,UAAH,OACpBlK,EAAAC,EAAAC,cAAA,OACIgK,UAAWA,EACXgD,MAAM,6BACNC,QAAQ,YACRC,KAAMhE,IAAOQ,SAEb5J,EAAAC,EAAAC,cAAA,QAAM/D,EAAE,gBAAgBiR,KAAK,SAC7BpN,EAAAC,EAAAC,cAAA,QAAM/D,EAAE,qICUDksB,GAlBI,SAAA1tB,GAAA,IAAGuP,EAAHvP,EAAGuP,UAAH,OACflK,EAAAC,EAAAC,cAAA,OACIgK,UAAWA,EACXgD,MAAM,6BACNlI,MAAM,KACNE,OAAO,KACPiI,QAAQ,YACRC,KAAMhE,IAAOiX,QAEbrgB,EAAAC,EAAAC,cAAA,QAAM/D,EAAE,kFACR6D,EAAAC,EAAAC,cAAA,QAAM/D,EAAE,gBAAgBiR,KAAK,gCCA/Bkb,GAAe,SAAAj2B,GAAI,OAAIK,IAAYL,EAAKC,MAAMmB,aAQ9C80B,GAAW,SAAC1nB,EAAO2U,GAAY,IACzBnjB,EAA2CwO,EAA3CxO,KAAMia,EAAqCzL,EAArCyL,SAAUkc,EAA2B3nB,EAA3B2nB,uBAClBC,EARc,SAAAp2B,GAAI,OACxBgF,YAAQhF,EAAKK,IAAYL,EAAKC,MAAMkB,WAAWgI,OAC3C,SAACnJ,EAAMq2B,EAAO9wB,GAAd,OACIA,EAAMoe,UAAU,SAAA2S,GAAE,OAAIA,EAAGr1B,KAAOjB,EAAKiB,OAAQo1B,IAKhCE,CAAgBv2B,GA0BrC,OACI2N,EAAAC,EAAAC,cAACmV,EAAA,SAAD,KACIrV,EAAAC,EAAAC,cAAC+lB,GAAD,CAAY3S,MAAOgV,GAAaj2B,GAAOkuB,OAAQluB,EAAKiB,KACpD0M,EAAAC,EAAAC,cAAC6nB,GAAD,MACA/nB,EAAAC,EAAAC,cAAA,OAAKgK,UAAU,0BACXlK,EAAAC,EAAAC,cAAA,MAAIgK,UAAWF,KAAQhT,MAClByxB,EAAavsB,IAAI,SAAA2sB,GAAW,OACzB7oB,EAAAC,EAAAC,cAAA,MAAIgK,UAAWF,KAAQ3X,KAAMmV,IAAKqhB,EAAYv1B,IAC1C0M,EAAAC,EAAAC,cAAC4oB,GAAD,CAAiB5e,UAAWF,KAAQ/S,WAhC5C,SAAA4xB,GACZ,IAAME,EACF/oB,EAAAC,EAAAC,cAAA,UACIgK,UAAWF,KAAQ5S,aACnB0S,QAAS,kBAAM0e,EAAuBn2B,EAAMw2B,KAE5C7oB,EAAAC,EAAAC,cAAC8oB,GAAD,CAAY9e,UAAWF,KAAQ7S,cAIvC,OACI6I,EAAAC,EAAAC,cAACmV,EAAA,SAAD,KACIrV,EAAAC,EAAAC,cAAA,KACIgK,UAAWF,KAAQ9S,KACnBiJ,MAAO,CAAEgJ,MAAOC,IAAO6f,SACvBrV,KAAM7f,YAAW1B,EAAKC,KAAMu2B,EAAarT,EAAQxhB,KAEhD60B,EAAYzsB,MAEhBkQ,EAAWyc,EAAe,MAcdtG,CAAQoG,UAerCN,GAAS7S,aAAe,CACpB1hB,GAAI2hB,IAAUtc,QAGHgH,mBACX,KACA,CACImoB,uBC3E8B,SAAC3S,EAAe/P,GAAhB,OAA4B,SAAApE,GAC9D,IAAMoU,EAAepjB,IAAYmjB,EAAcvjB,MAAMkB,SAE/C01B,EAAarT,EAAcC,GAActa,OAC3C,SAAAnJ,GAAI,OAAIA,EAAKiB,KAAOwS,EAAQxS,KAG5B41B,EAAW5zB,QACXugB,EAAcC,GAAgBoT,EAC9BxnB,EAASsE,GAAsB6P,KAE/BnU,EAASuE,GAAsB4P,OD6DxBxV,CAKbkoB,cElEIpoB,GAAQ,CACV+f,QAAS,CACL7N,QAAS,OACTyR,WAAY,WACZE,WAAY,QAEhBmF,UAAW,CACP5f,SAAU,OACVwa,YAAa,SACb/e,MAAO,MACPwI,OAAQ,SACRE,QAAS,QACTsW,WAAY,QAEhBoF,UAAW,CACPxC,aAAc,OACd/Y,UAAW,SAoEJxN,eAnBS,SAAChG,EAAO4Y,GAC5B,IAIM5gB,GAJQ4gB,EAAS3G,SACjBnI,GAAuB9J,GACvBgB,EAAmBhB,IAENkN,KAAK,SAAAlV,GAAI,OAAIA,EAAKiB,KAAO2f,EAAS5gB,KAAKiB,KAE1D,MAAO,CACHf,KAAMF,EAAOA,EAAKE,KAAO,KAa7B,CACIyT,0BAHO3F,CAhEE,SAAAQ,GAAS,IACdxO,EAAgDwO,EAAhDxO,KAAMia,EAA0CzL,EAA1CyL,SAAU/Z,EAAgCsO,EAAhCtO,KAAMyT,EAA0BnF,EAA1BmF,sBAExBqjB,EAAe,SAAA7d,GACjB,IAAM8d,EAAWl2B,OAAA0H,EAAA,EAAA1H,CAAA,GACVf,EADU,CAEbE,KAAMiZ,EAAMqE,OAAO7X,QAGvBgO,EAAsBsjB,IAiC1B,OAAOtpB,EAAAC,EAAAC,cAACmV,EAAA,SAAD,KAAW/I,EAnBVtM,EAAAC,EAAAC,cAACmV,EAAA,SAAD,KACIrV,EAAAC,EAAAC,cAAC+lB,GAAD,CAAY3S,MAAO5f,IAAKC,EAAE,aAAc4sB,OAAQluB,EAAKiB,KACrD0M,EAAAC,EAAAC,cAAC6nB,GAAD,MACA/nB,EAAAC,EAAAC,cAAA,OAAKgK,UAAU,0BACXlK,EAAAC,EAAAC,cAACqpB,GAAA,OAAD,CAAgBC,OAAQH,GACpBrpB,EAAAC,EAAAC,cAACyQ,GAAA1Q,EAAD,CACIjI,MAAOzF,EACPk3B,WAAS,EACTC,WAAS,EACTvpB,MAAOA,GAAMgpB,UACbvY,YAAald,IAAKC,EAAE,iBACpBkd,SAAUwY,OAtBjB,WACb,IAAMM,EAAev2B,OAAO2R,OAAO,GAAI5E,GAAMgpB,UAAWhpB,GAAM+f,SAC9D,OACIlgB,EAAAC,EAAAC,cAAA,OAAKgK,UAAU,yBAAyB/J,MAAOA,GAAMipB,WACjDppB,EAAAC,EAAAC,cAACqpB,GAAA,OAAD,CAAgBppB,MAAOwpB,GAAep3B,IA0BRq3B,MCrExCC,GAAe,SAACC,EAAYz3B,EAAMoS,GACpC,IAAIslB,EAAS,GAAAl2B,OAAMi2B,EAAW51B,UAAjB,qBAAAL,OAA8CxB,EAAKiB,IAEhE,GACImR,GACAA,EAAW,IACXA,EAAW,GAAkBnP,OAC/B,CACE,IAAM00B,EAAQvlB,EAAW,GAAkBvI,IACvC,SAAA+tB,GAAM,OAAIA,EAAOttB,MAAM,KAAKxD,OAAO,GAAG,KAG1C4wB,GAAS,gBAAAl2B,OAAoBm2B,EAAMp0B,KAAK,MAG5C,OAAOm0B,GAGLG,GAAU,SAAAvvB,EAAwB6a,GAAY,IAC5CsU,EADWz3B,EAAiCsI,EAAjCtI,KAAMoS,EAA2B9J,EAA3B8J,YAGf0lB,EAAS93B,EAAK83B,OAQpB,OANIA,IACAL,EAAatU,EAAQxhB,GAAGo2B,OAAOC,cAAc9iB,KACzC,SAAA+iB,GAAG,OAAIA,EAAI9iB,MAAQ2iB,KAIpBL,GAAcA,EAAW1tB,MAAQ0tB,EAAW51B,UAC/C8L,EAAAC,EAAAC,cAACmV,EAAA,SAAD,KACIrV,EAAAC,EAAAC,cAAC+lB,GAAD,CAAY3S,MAAOwW,EAAW1tB,KAAMmkB,OAAQluB,EAAKiB,KACjD0M,EAAAC,EAAAC,cAAC6nB,GAAD,MACA/nB,EAAAC,EAAAC,cAAA,UACIoT,MAAOwW,EAAW1tB,KAClBmuB,IAAKV,GAAaC,EAAYz3B,EAAMoS,GACpCyF,UAAU,yBACV/J,MAAO,CAAE2iB,OAAQ,WAIzB9iB,EAAAC,EAAAC,cAACmV,EAAA,SAAD,KACIrV,EAAAC,EAAAC,cAAC+lB,GAAD,CAAY3S,MAAK,GAAAzf,OAAKs2B,EAAL,oBACjBnqB,EAAAC,EAAAC,cAAC6nB,GAAD,MACA/nB,EAAAC,EAAAC,cAAA,OACIgK,UAAU,yBACV/J,MAAO,CACHuN,QAAS,OACT+K,eAAgB,SAChByE,WAAY,SACZhY,OAAQ,QAGZlF,EAAAC,EAAAC,cAACioB,GAAAloB,EAAD,CACIkJ,MAAM,WACNQ,UAAQ,EACRxJ,MAAO,CAAE6E,MAAO,IAAKE,OAAQ,IAAKkjB,MAAO,eAY7D8B,GAAQxU,aAAe,CACnB1hB,GAAI2hB,IAAUtc,QAGlB,IAIegH,eAJS,SAAAhG,GAAK,MAAK,CAC9BoK,YAAaD,GAAoBnK,KAGtBgG,CAAyB6pB,IC/ElC/pB,GAAQ,CACVqN,OAAQ,YACRjE,SAAU,OACVya,WAAY,OACZ7a,MAAOC,IAAOqE,SAoBH+c,GAjBI,SAAA3pB,GACf,OACIb,EAAAC,EAAAC,cAACmV,EAAA,SAAD,KACIrV,EAAAC,EAAAC,cAAC+lB,GAAD,CAAY3S,MAAO5f,IAAKC,EAAE,UAAW4sB,OAAQ1f,EAAMxO,KAAKiB,KACxD0M,EAAAC,EAAAC,cAAA,KAAGC,MAAOA,IACLzM,IAAKC,EACF,iFCiCP6wB,GAAO,SAAA3jB,GAChB,IAAM4pB,EA3BU,SAAAn4B,GAChB,OAAQA,GACJ,KAAKjB,IACL,KAAKC,IACL,KAAKC,IACL,KAAKC,IACL,KAAKE,IACL,KAAKD,IACD,OAAOi5B,GACX,KAAK34B,IACD,OAAOi1B,GACX,KAAKp1B,IACL,KAAKC,IACL,KAAKC,IACD,OAAOy2B,GACX,KAAKv2B,IACD,OAAO24B,GACX,KAAK14B,IACD,OAAOu4B,GACX,KAAK74B,IACD,OAAOu4B,GACX,QACI,OAAOhC,IAKE0C,CAAY/pB,EAAMxO,KAAKC,MAExC,OACI0N,EAAAC,EAAAC,cAACuqB,EAAD,CACIp4B,KAAMwO,EAAMxO,KACZia,SAAUzL,EAAMyL,SAChB7H,YACI5D,EAAMyL,SAAW/H,GAA6B1D,EAAM4D,YAExD4gB,qBAAsBxkB,EAAMwkB,wBCzCzBwF,GAlBiB,SAAAlwB,GAAA,IAAGpI,EAAHoI,EAAGpI,KAAH,OAC5ByN,EAAAC,EAAAC,cAAA,OACIC,MAAO,CACHkS,QAAS,YACTpI,UAAW,SACXV,SAAU,OACVnJ,WAAY,IACZ+I,MAAOC,IAAOqE,UAGjBlb,8DCNHu4B,8MAaFzwB,MAAQ,CACJ0wB,YAAY,KAEhBC,aAAe,OACfC,kBAAoB,sFAGhB,IAAMC,EAAWzoB,KAAK5B,MAAMsqB,aAAe/f,OAAOggB,YAElD,GAAK3oB,KAAKuoB,aAAV,CAIA,IAAMK,EAAO5oB,KAAKuoB,aAAaM,wBAE3BD,EAAKE,QAAUL,GACfG,EAAKjf,IAAMhB,OAAOggB,YAAcF,IAEhCzoB,KAAKyI,SAAS,CACV6f,YAAY,IAGhBtoB,KAAK+oB,4DAIK,IAAAtW,EAAAzS,KACdA,KAAKwoB,kBAAoB7c,KACrB,kBAAM8G,EAAKuW,mBACXhpB,KAAK5B,MAAM6qB,YAGftgB,OAAOC,iBAAiB,SAAU5I,KAAKwoB,2DAGvC7f,OAAOW,oBAAoB,SAAUtJ,KAAKwoB,+DAI1CxoB,KAAKkpB,kBACLlpB,KAAKgpB,iEAILhpB,KAAK+oB,iDAGA,IAAAI,EAAAnpB,KAAA2N,EAC4C3N,KAAK5B,MAA9C+L,EADHwD,EACGxD,SAAU1C,EADbkG,EACalG,UAAW/J,EADxBiQ,EACwBjQ,MAAUU,EADlCzN,OAAAy4B,GAAA,EAAAz4B,CAAAgd,EAAA,kCAEG2a,EAAetoB,KAAKpI,MAApB0wB,WAEFe,EAAaC,KAAKlrB,EAAO,CAC3B,cACA,eACA,YACA,eAGJ,OACIb,EAAAC,EAAAC,cAAA,MAAA9M,OAAA2R,OAAA,CACImhB,IAAK,SAAAA,GAAG,OAAK0F,EAAKZ,aAAe9E,GACjC/lB,MAAOA,EACP+J,UAAWA,GACP4hB,GAEHf,GAAcne,UA9EWG,aAApC+d,GAQK9d,aAAe,CAClB0e,WAZkB,IAalBP,aAZoB,KAsFbL,UC9CFkB,GAAb,SAAAtc,GAAA,SAAAsc,IAAA,IAAA7a,EAAAvG,EAAAxX,OAAAyX,EAAA,EAAAzX,CAAAqP,KAAAupB,GAAA,QAAA5a,EAAA/b,UAAAC,OAAA+b,EAAA,IAAA9Z,MAAA6Z,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAAD,EAAAC,GAAAjc,UAAAic,GAAA,OAAA1G,EAAAxX,OAAA0X,EAAA,EAAA1X,CAAAqP,MAAA0O,EAAA/d,OAAA2X,EAAA,EAAA3X,CAAA44B,IAAAhhB,KAAAxI,MAAA2O,EAAA,CAAA1O,MAAA5O,OAAAwd,MACIhX,MAAQ,CACJ4xB,cAAe,IAFvBrhB,EAKIya,qBAAuB,SAAA6G,GACnB,IAAMC,EAC6C,mBAAxCvhB,EAAKvQ,MAAM4xB,cAAcC,IAC1BthB,EAAKvQ,MAAM4xB,cAAcC,GAG7BD,EAAa74B,OAAA0H,EAAA,EAAA1H,CAAA,GAAQwX,EAAKvQ,MAAM4xB,eACtCA,EAAcC,IAAcC,EAC5BvhB,EAAKM,SAAS,CAAE+gB,mBAbxBrhB,EAgBIwhB,aAAe,SAAAF,GACXthB,EAAK/J,MAAMoF,sBAAsBimB,IAjBzCthB,EA0BIyhB,eAAiB,SAAAC,GACT1hB,EAAK/J,MAAM8d,MACX/T,EAAK/J,MAAM0rB,wBAAwBD,IA5B/C1hB,EAgCI4hB,aAAe,SAACC,EAAQC,EAAS5X,GAC7B6X,aAAa7X,EAAQ4O,GAErB,IAAM7N,EAAgBjL,EAAK/J,MAAM9D,eAAewK,KAC5C,SAAAlV,GAAI,OAAIA,EAAKiB,KAAOwhB,EAAQ4O,IAI5B7N,GAAiBpjB,YAAoBojB,IACrC+W,aAAa/W,IAzCzBjL,EA6CIiiB,oBAAsB,SAAAv5B,GAAE,OAAI,kBAAMsX,EAAKwhB,aAAa94B,KA7CxDsX,EAAA,OAAAxX,OAAA6c,EAAA,EAAA7c,CAAA44B,EAAAtc,GAAAtc,OAAA8c,EAAA,EAAA9c,CAAA44B,EAAA,EAAAxkB,IAAA,4BAAAxP,MAAA,SAoB8BmY,GAClBA,EAAUwO,MACVlc,KAAKyI,SAAS,CAAE+gB,cAAe,OAtB3C,CAAAzkB,IAAA,SAAAxP,MAAA,WA+Ca,IAAAkd,EAAAzS,KAAA2N,EACuC3N,KAAK5B,MAAzC8d,EADHvO,EACGuO,KAAMvhB,EADTgT,EACShT,UAAWL,EADpBqT,EACoBrT,eAEzB,IAAKK,IAAcL,EAAezH,OAC9B,OACI0K,EAAAC,EAAAC,cAAC4sB,GAAD,CACIv6B,KAAMmB,IAAKC,EAAE,0CAKzB,IAAM8G,EAAQsC,EAAeb,IAAI,SAAA7J,GAC7B,IAAM06B,EAAe7X,EAAK7a,MAAM4xB,cAAc55B,EAAKiB,IAC7C05B,EAAQ,CAAE7nB,EAAG9S,EAAK8S,GAMxB,OAJI4nB,IAAiC,IAAjBA,IAChBC,EAAM7nB,EAAI9S,EAAK8S,EAjEP,IAoEL/R,OAAO2R,OAAO,GAAI1S,EAAM26B,EAAO,CAClCtJ,EAAGrxB,EAAKiB,GACR25B,KAAMC,SAId,OACIltB,EAAAC,EAAAC,cAAA,OAAKgK,UAAU,gBACV9M,EACG4C,EAAAC,EAAAC,cAACmO,EAAA,EAAD,KACIrO,EAAAC,EAAAC,cAACmO,EAAA,EAAD,OAEJ,KACJrO,EAAAC,EAAAC,cAACitB,GAAAltB,EAAD,CACIosB,eAAgB5pB,KAAK4pB,eACrBG,aAAc/pB,KAAK+pB,aACnBtiB,UAAU,SACVuiB,OAAQhyB,EACR+S,OAAQ4f,KACRC,KAAMC,eACNC,UAAWC,KACXxoB,MAAOoG,OAAOqiB,WACdC,YAAaC,KACbC,YAAajP,EACbkP,YAAalP,EACbmP,gBAAgB,kBAEfrzB,EAAMyB,IAAI,SAAA7J,GACP,IAAM07B,EAAiB,CACnB17B,EAAKC,KACLqsB,EAAO,OAAS,QAClB/oB,KAAK,KAEP,OACIoK,EAAAC,EAAAC,cAAC8tB,GAAD,CACIxmB,IAAKnV,EAAKqxB,EACVxZ,UAAW6jB,GAEX/tB,EAAAC,EAAAC,cAAC+tB,GAAD,CACI57B,KAAMA,EACNia,SAAUqS,EACV0G,qBACInQ,EAAKmQ,gCA5G7C2G,EAAA,CAA8Bjf,aAgI9Bif,GAAShf,aAAe,CACpBjQ,eAAgB,IAKpB,IAeM8V,GAAqB,CACvB0Z,wB3DtImC,SAAAv0B,GAAK,MAAK,CAC7C1F,KNlDqC,4BMmDrC0F,U2DqIAiO,0BAeW5F,eAhCS,SAAChG,EAAO4Y,GAC5B,IAAMuF,EAAoBvF,EAAS0L,KAC7B3a,GAAsB3J,GACtBa,EAAkBb,EAAOmD,GAAenD,IAExC0C,EAAiBkW,EAAS0L,KAC1Bxa,GAAuB9J,GACvBgB,EAAmBhB,GAEzB,MAAO,CACH+C,UAAWK,GAAsBpD,KAAWme,EAC5Czb,mBAuBJ8V,GAde,SAACE,EAAYC,EAAeC,GAC3C,IAAMib,EAAa72B,YAAQ0b,EAAWhW,gBAAgBvB,OAAO2yB,MAE7D,OAAO/6B,OAAA0H,EAAA,EAAA1H,CAAA,GACA4f,EADP,CAEI2L,KAAM1L,EAAS0L,KACfvhB,UAAW2V,EAAW3V,UACtBL,eAAgBmxB,EAChBvB,qBAIOtsB,CAIb2rB,eCjNI/iB,GAAS,CACXmlB,eAAgB,CACZ5gB,OAAQ,MACR6E,QAAS,SACT4G,aAAc,MACd9P,MAAOC,IAAOoD,MACdH,gBAAiB,UACjBnH,OAAQ,GACRwI,QAAS,OACTwP,WAAY,UAEhBmR,MAAO,CACH9kB,SAAU,OACVD,OAAQ,UACRwa,WAAY,UAEhBwK,YAAa,CACT/kB,SAAU,OACVG,eAAgB,YAChByT,WAAY,OACZ7T,OAAQ,YAIVilB,8MACFzkB,QAAU,SAAAxW,GAAE,OAAI,kBAAMsX,EAAK/J,MAAMiJ,QAAQxW,OACzCk7B,SAAW,SAAAl7B,GAAE,OAAI,kBAAMsX,EAAK/J,MAAM2tB,SAASl7B,6EAElC,IACG0I,EAASyG,KAAK5B,MAAd7E,KAER,OACIgE,EAAAC,EAAAC,cAAA,OAAKC,MAAO8I,GAAOmlB,gBACfpuB,EAAAC,EAAAC,cAAA,QAAMC,MAAO8I,GAAOolB,MAAOvkB,QAASrH,KAAKqH,QAAQ9N,EAAK1I,KAAtD,GAAAO,OACQmI,EAAKI,KADb,MAAAvI,OAEQmI,EAAKT,OAAOjG,OAAS,EACf5B,IAAKC,EAAE,qBAAsB,CACzB86B,MAAOzyB,EAAKT,OAAOjG,SAEvB0G,EAAKT,OAAO,GAAGa,OAG7B4D,EAAAC,EAAAC,cAAA,QACIC,MAAO8I,GAAOqlB,YACdxkB,QAASrH,KAAK+rB,SAASxyB,EAAK1I,KAE3BI,IAAKC,EAAE,mBAtBFoZ,aAmC1BwhB,GAAYvhB,aAAe,CACvBlD,QAASiH,SAASC,UAClBwd,SAAUzd,SAASC,WAGRud,UC5CFG,GAAb,SAAAhf,GAAA,SAAAgf,IAAA,IAAAvd,EAAAvG,EAAAxX,OAAAyX,EAAA,EAAAzX,CAAAqP,KAAAisB,GAAA,QAAAtd,EAAA/b,UAAAC,OAAA+b,EAAA,IAAA9Z,MAAA6Z,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAAD,EAAAC,GAAAjc,UAAAic,GAAA,OAAA1G,EAAAxX,OAAA0X,EAAA,EAAA1X,CAAAqP,MAAA0O,EAAA/d,OAAA2X,EAAA,EAAA3X,CAAAs7B,IAAA1jB,KAAAxI,MAAA2O,EAAA,CAAA1O,MAAA5O,OAAAwd,MACIsd,cAAgB,SAAAr7B,GACZsX,EAAK/J,MAAMmb,iBAAiB1oB,GAC5BsX,EAAK/J,MAAM2a,qBAAqBloB,IAHxCsX,EAMIgkB,aAAe,SAAAt7B,GACXsX,EAAK/J,MAAMoa,wBAAwB,CAC/B3nB,KACA8I,KAAMwO,EAAK/J,MAAM6b,QAAQnV,KAAK,SAAAlV,GAAI,OAAIA,EAAKiB,KAAOA,IAAI8I,QATlEwO,EAAA,OAAAxX,OAAA6c,EAAA,EAAA7c,CAAAs7B,EAAAhf,GAAAtc,OAAA8c,EAAA,EAAA9c,CAAAs7B,EAAA,EAAAlnB,IAAA,SAAAxP,MAAA,WAaa,IAAAkd,EAAAzS,KAAA2N,EACkC3N,KAAK5B,MAApC6b,EADHtM,EACGsM,QAASnW,EADZ6J,EACY7J,SAAUyD,EADtBoG,EACsBpG,QACrBoC,EAAM3B,GAAalE,GAAY,GAErC,OAAOmW,EAAQpnB,OACX0K,EAAAC,EAAAC,cAAA,OAAKgK,UAAWF,EAAQ6kB,IAAK1uB,MAAO,CAAEiM,QACjCsQ,EAAQxgB,IAAI,SAAAV,GAAM,OACfwE,EAAAC,EAAAC,cAAC4uB,GAAD,CACItnB,IAAKhM,EAAOlI,GACZ0I,KAAMR,EACNsO,QAASoL,EAAK0Z,aACdJ,SAAUtZ,EAAKyZ,mBAI3B,SA5BZD,EAAA,CAA+B3hB,aAyC/B2hB,GAAU1hB,aAAe,CACrB0P,QAAS,GACTqS,iBAAkBhe,SAASC,UAC3BwK,qBAAsBzK,SAASC,WAKnC,IAAMge,GAAkBC,aACpB,CAACzqB,GAAqB6D,IACtB,SAACqU,EAASpU,GAAV,OACIlV,OAAOuR,KAAK+X,GAAS7kB,OAAO,SAACq3B,EAAK57B,GAU9B,OATA47B,EAAInd,KAAK,CACLze,GAAIA,EACJ8I,KAAMkM,EAAWf,KAAK,SAAA+R,GAAS,OAAIA,EAAUhmB,KAAOA,IAAI8I,KACxDb,OAAQmhB,EAAQppB,GAAI4I,IAAI,SAAAlE,GAAK,MAAK,CAC9B1E,GAAI0E,EAAM1E,GACV8I,KAAMpE,EAAMqE,aAAerE,EAAMoE,UAIlC8yB,GACR,MAQI7uB,eALS,SAAAhG,GAAK,MAAK,CAC9BqiB,QAASsS,GAAgB30B,GACzBkM,SAAUC,GAAuBnM,KAKjC,CACI4gB,wBAAyBP,GACzBsB,iBAAkBpX,GAClB4W,qBAAsB3W,IALfxE,CAObwJ,qBAzFa,CACXglB,IAAK,CACDte,SAAU,SACVxP,OAAQ,EACRsR,QAAS,QACT3E,QAAS,OACT+K,eAAgB,SAChB0W,SAAU,SAkFhBtlB,CAAmB6kB,KCvFNU,GAZiB,SAAAvuB,GAAK,OACjCb,EAAAC,EAAAC,cAACmV,EAAA,SAAD,KACIrV,EAAAC,EAAAC,cAACmvB,GAAD,CAAU1Q,KAAM9d,EAAMyL,WACtBtM,EAAAC,EAAAC,cAACovB,GAAD,MACAtvB,EAAAC,EAAAC,cAACqvB,GAAD,CAAU5Q,KAAM9d,EAAMyL,aCMjBkjB,GAAU,SAAA70B,GAAgD,IAA7C80B,EAA6C90B,EAA7C80B,oBAChBpqB,EAD6D1K,EAAxB+0B,kBAErCh8B,IAAKC,EACD,oEAEJD,IAAKC,EAAE,iCAEb,OAAO87B,EACHzvB,EAAAC,EAAAC,cAACyvB,GAAD,CAAkBrjB,UAAU,IAE5BtM,EAAAC,EAAAC,cAAC4sB,GAAD,CAAkBv6B,KAAM8S,KA6CjBhF,eAVS,SAAAhG,GACpB,IAAMY,EAAaG,EAAkBf,GAErC,MAAO,CACH/G,GAAIkK,GAAenD,GACnBq1B,kBAAmB9xB,KAAQ3C,GAC3B20B,kBAAmBz0B,EAAsBd,KAIlCgG,CApCc,SAAA5K,GAAiD,IAA9CnC,EAA8CmC,EAA9CnC,GAAIo8B,EAA0Cj6B,EAA1Ci6B,kBAC1BD,EAAsBn8B,IAAOo8B,EAC7BG,GAFoEp6B,EAAvBm6B,kBAEC,OAAPt8B,EAE7C,OACI0M,EAAAC,EAAAC,cAACmV,EAAA,SAAD,KACIrV,EAAAC,EAAAC,cAAC4vB,GAAD,MACA9vB,EAAAC,EAAAC,cAAC6vB,GAAD,MACA/vB,EAAAC,EAAAC,cAAA,OAAKgK,UAAU,qBACV2lB,EAAkB,KACf7vB,EAAAC,EAAAC,cAAC8vB,GAAD,CACIP,oBAAqBA,EACrBC,kBAAmBA,uGCG5BO,GAxCoB,SAAAt1B,GAK7B,IAJFsI,EAIEtI,EAJFsI,cACAitB,EAGEv1B,EAHFu1B,kBACAC,EAEEx1B,EAFFw1B,kBACAvwB,EACEjF,EADFiF,KAEMqd,EAAU,CACZjd,EAAAC,EAAAC,cAACmO,EAAA,EAAD,CAAQ7G,IAAI,SAAS0a,WAAS,EAACpY,QAASqmB,GACnCz8B,IAAKC,EAAE,WAEZqM,EAAAC,EAAAC,cAACmO,EAAA,EAAD,CAAQ7G,IAAI,SAAS4oB,aAAW,EAACtmB,QAASomB,GACrCx8B,IAAKC,EAAE,YAIhB,OACIqM,EAAAC,EAAAC,cAAC+Z,GAAAha,EAAD,CAAQL,KAAMA,EAAMsB,QAASivB,GACzBnwB,EAAAC,EAAAC,cAACmwB,GAAApwB,EAAD,CAAaE,MAAO,CAAEoJ,SAAU,UAAWnJ,WAAY,QAClD1M,IAAKC,EAAE,qBAEZqM,EAAAC,EAAAC,cAACowB,GAAArwB,EAAD,KACID,EAAAC,EAAAC,cAACqwB,GAAAtwB,EAAD,CAAmBE,MAAO,CAAEoJ,SAAU,aACjC7V,IAAKC,EACF,mKACA,CAAEsP,oBAIdjD,EAAAC,EAAAC,cAACma,GAAApa,EAAD,KAAgBgd,KCPtBuT,GAAiB,CACnBtrB,OxD9BkC,GwD+BlCsE,WAAY,OACZ2T,WAAY,OACZ3K,YAAa,QAGJie,GAAb,SAAA/gB,GAAA,SAAA+gB,IAAA,IAAAtf,EAAAvG,EAAAxX,OAAAyX,EAAA,EAAAzX,CAAAqP,KAAAguB,GAAA,QAAArf,EAAA/b,UAAAC,OAAA+b,EAAA,IAAA9Z,MAAA6Z,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAAD,EAAAC,GAAAjc,UAAAic,GAAA,OAAA1G,EAAAxX,OAAA0X,EAAA,EAAA1X,CAAAqP,MAAA0O,EAAA/d,OAAA2X,EAAA,EAAA3X,CAAAq9B,IAAAzlB,KAAAxI,MAAA2O,EAAA,CAAA1O,MAAA5O,OAAAwd,MACIhX,MAAQ,CACJq2B,yBAAyB,EACzBC,oBAAgBp7B,EAChBq7B,yBAAyB,EACzBC,iBAAat7B,GALrBqV,EAQIkmB,gBAAkB,WACdlmB,EAAKM,SAAS,CAAE0lB,yBAAyB,KATjDhmB,EAYImmB,OAAS,WACLnmB,EAAK/J,MAAMkwB,SAASn6B,KAAK,SAAAo6B,GACrBpmB,EAAKM,SAAS,CAAE2lB,YAAW,IAAAh9B,OAAMm9B,QAd7CpmB,EAkBIqmB,UAAY,WACRrmB,EAAK/J,MAAMqwB,mBACX,IAAML,EAAcjmB,EAAK/J,MAAMjG,YAAX,IAAA/G,OACV+W,EAAK/J,MAAMjG,aACf,IACNgQ,EAAKM,SAAS,CAAE2lB,iBAvBxBjmB,EA0BIulB,kBAAoB,WAChBvlB,EAAKM,SAAS,CAAE0lB,yBAAyB,KA3BjDhmB,EA8BIslB,kBAAoB,WAChBtlB,EAAKM,SAAS,CAAE0lB,yBAAyB,IACzChmB,EAAK/J,MAAMswB,SAASvmB,EAAK/J,MAAMjG,aAAahE,KAAK,WAC7CgU,EAAKM,SAAS,CAAE2lB,YAAa,SAjCzCjmB,EAqCIwmB,oBArCJ,eAAAz2B,EAAAvH,OAAAkO,EAAA,EAAAlO,CAAAmO,EAAAtB,EAAAuB,KAqC0B,SAAAC,EAAM4vB,GAAN,IAAAC,EAAAC,EAAA,OAAAhwB,EAAAtB,EAAA2B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,WACdsvB,IAAgBA,EAAa/7B,OADf,CAAAuM,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EAES6I,EAAK4K,QAAQxhB,GAAG6S,YAAYihB,aAAa/wB,IAC5D,eAHU,OAERu6B,EAFQzvB,EAAAG,MAMRuvB,EAAcF,EAAa9pB,KAC7B,SAAA5T,GAAC,OAAIA,EAAE0E,SAAWi5B,GAA2B,SAAf39B,EAAE69B,aAGjBD,EAAYv5B,OAC3B4S,EAAK/J,MAAM4wB,YACP7mB,EAAK/J,MAAMjG,YACX22B,EAAYv5B,OAbN,wBAAA6J,EAAAS,SAAAb,MArC1B,gBAAAc,GAAA,OAAA5H,EAAA6H,MAAAC,KAAApN,YAAA,GAAAuV,EAwDI8mB,oBAAsB,WACd9mB,EAAK/J,MAAMjG,cAAgBgQ,EAAKvQ,MAAMs2B,gBACtC7xB,GAAkB8L,EAAK/J,MAAMjG,aAAahE,KAAK,SAAA+5B,GAAc,OACzD/lB,EAAKM,SAAS,CAAEylB,sBA3DhC/lB,EAwEI+mB,wBAA0B,WACtB/mB,EAAKM,SAAS,CACVwlB,yBAA0B9lB,EAAKvQ,MAAMq2B,2BA1EjD9lB,EA8EIgnB,oBAAsB,kBAClBhnB,EAAK/J,MAAMgxB,cAAgBjnB,EAAK/J,MAAMjG,YAClCoF,EAAAC,EAAAC,cAAC4xB,GAAD,CACI7uB,cAAe2H,EAAK/J,MAAMoC,cAC1BitB,kBAAmBtlB,EAAKslB,kBACxBC,kBAAmBvlB,EAAKulB,kBACxBvwB,KAAMgL,EAAKvQ,MAAMu2B,0BAErB,MAtFZhmB,EAwFImnB,kBAAoB,kBAChBnnB,EAAKvQ,MAAMs2B,gBAAkB/lB,EAAKvQ,MAAMs2B,eAAer9B,GACnD0M,EAAAC,EAAAC,cAAC8xB,GAAA/xB,EAAD,CACIiK,UAAU,qBACVlW,GAAI4W,EAAK4K,QAAQxhB,GACjB4L,KAAMgL,EAAKvQ,MAAMq2B,wBACjBnS,eAAgB3T,EAAK+mB,wBACrBM,kBAAmBrnB,EAAKvQ,MAAMs2B,eAC9BuB,kBAAmB,CAAC,OAAQ,eAE5BC,mBAAoBvnB,EAAKwmB,oBACzBgB,mBAAoB,SAAAC,GAAG,OACnB5zB,QAAQC,IAAI,2BAA4B2zB,MAGhD,MAvGZznB,EAAA,OAAAxX,OAAA6c,EAAA,EAAA7c,CAAAq9B,EAAA/gB,GAAAtc,OAAA8c,EAAA,EAAA9c,CAAAq9B,EAAA,EAAAjpB,IAAA,oBAAAxP,MAAA,WAiEQyK,KAAKivB,wBAjEb,CAAAlqB,IAAA,qBAAAxP,MAAA,WAqEQyK,KAAKivB,wBArEb,CAAAlqB,IAAA,SAAAxP,MAAA,WA0GQ,GAAIyK,KAAKpI,MAAMw2B,YACX,OAAO7wB,EAAAC,EAAAC,cAACoyB,GAAA,EAAD,CAAUnkB,GAAI1L,KAAKpI,MAAMw2B,cAF/B,IAAAzgB,EAK+C3N,KAAK5B,MAAjDjG,EALHwV,EAKGxV,YAAai3B,EALhBzhB,EAKgByhB,aAAcU,EAL9BniB,EAK8BmiB,aAC7BpgB,EAAmBzH,GAAoBP,IAEvCqoB,EAAiBD,EACjB7+B,IAAKC,EAAE,uBACPD,IAAKC,EAAE,oBAEb,OACIqM,EAAAC,EAAAC,cAACmV,EAAA,SAAD,KACIrV,EAAAC,EAAAC,cAACqS,GAAD,CAAYrN,OAAQiN,EAAkB7F,UAAU,GAC5CtM,EAAAC,EAAAC,cAAA,OAAKC,MAAOqwB,IACP+B,EACGvyB,EAAAC,EAAAC,cAAA,OAAKgK,UAAWF,KAAQzQ,cACpByG,EAAAC,EAAAC,cAAA,QAAMC,MAAO,CAAEqS,YAAa,SACxBxS,EAAAC,EAAAC,cAACmO,EAAA,EAAD,CAAQokB,SAAO,EAAC3oB,QAASrH,KAAKsuB,QACzBr9B,IAAKC,EAAE,kBAIfiH,EACGoF,EAAAC,EAAAC,cAAA,QAAMC,MAAO,CAAEqS,YAAa,SACxBxS,EAAAC,EAAAC,cAACmO,EAAA,EAAD,CACIvE,QACIrH,KAAKkvB,yBAGRj+B,IAAKC,EAAE,eAGhB,KACHiH,GAAei3B,EACZ7xB,EAAAC,EAAAC,cAACmO,EAAA,EAAD,CAAQvE,QAASrH,KAAKquB,iBACjBp9B,IAAKC,EAAE,WAEZ,MAER,KAEJqM,EAAAC,EAAAC,cAAA,OAAKgK,UAAWF,KAAQxQ,eACpBwG,EAAAC,EAAAC,cAACmO,EAAA,EAAD,CAAQ6T,WAAS,EAACpY,QAASrH,KAAKwuB,WAC3BuB,MAKhB/vB,KAAKsvB,oBACLtvB,KAAKmvB,2BA5JtBnB,EAAA,CAA6B1jB,aA6K7B0jB,GAAQ/a,aAAe,CACnB1hB,GAAI2hB,IAAUtc,QAGlB,IA4BegH,eA5BS,SAAAhG,GACpB,IAEIw3B,EACAU,EAHE92B,EAAYuI,GAAsB3J,GAYxC,OvErH8B,SAAAA,GAC9B,OACKuD,KAAQvD,EAAM4J,gBAAsD,KAApCD,GAAsB3J,GAAO/G,GuE2G9Do/B,CAAmBr4B,IACnBw3B,GAAe,EACfU,GAAe,IAEfA,IAAe92B,EAAUoB,QAASpB,EAAUoB,OAAOshB,OACnD0T,IAAep2B,EAAUoB,QAASpB,EAAUoB,OAAOuC,QAGhD,CACHxE,YAAaa,EAAUnI,GACvB2P,cAAexH,EAAUW,KACzBy1B,eACAU,iBAImB,SAAA7wB,GAAQ,MAAK,CACpCqvB,OAAQ,kBAAMrvB,EjE9IY,eAAA/G,EAAAvH,OAAAkO,EAAA,EAAAlO,CAAAmO,EAAAtB,EAAAuB,KAAM,SAAAC,EAAOC,EAAUkB,GAAjB,IAAAnH,EAAAsB,EAAA41B,EAAA/3B,EAAA,OAAA2G,EAAAtB,EAAA2B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAC1BtG,EAAYuI,GAAsBpB,KAElC7F,EAAiBtB,EAAUsB,eAAeb,IAAI,SAAA7J,GAChD,IAAME,EAAOC,YAAWH,GAClBA,EAAKE,MAAQJ,IACb,KAEAG,EAAOF,YAAaC,GAAQL,IAAOK,EAAKC,KAE9C,OAAOc,OAAA0H,EAAA,EAAA1H,CAAA,GACAf,EACCE,EAAO,CAAEA,QAAS,GAF1B,CAGID,WAIFqgC,EAjB0Bv/B,OAAA0H,EAAA,EAAA1H,CAAA,GAkBzBqI,EAlByB,CAmB5BsB,mBAnB4B8E,EAAAC,KAAA,GAuBR6wB,EAAgBr/B,GAvBR,CAAAuO,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,EAwBhByD,GAAgBmtB,GAxBA,OAAA9wB,EAAAQ,GAAAR,EAAAG,KAAAH,EAAAE,KAAA,wBAAAF,EAAAE,KAAA,GAyBhB0D,GAAcktB,GAzBE,QAAA9wB,EAAAQ,GAAAR,EAAAG,KAAA,eAuBtBpH,EAvBsBiH,EAAAQ,GA2B5BX,EA1EmC,CACvCpP,KN3CgC,yBMyFAuP,EAAAE,KAAA,GA4BtBL,EAASgB,GAA0B9H,IA5Bb,eAAAiH,EAAAK,OAAA,SA8BrBC,QAAQC,QAAQxH,IA9BK,QAAAiH,EAAAC,KAAA,GAAAD,EAAAwF,GAAAxF,EAAA,SAtEpBrD,EAsGDqD,EAAAwF,GArGX5I,QAAQC,IAAI,6BAA8BF,GAqEV,yBAAAqD,EAAAS,OAtEpB,IAAA9D,GAsEoBiD,EAAA,kBAAN,gBAAAc,EAAAqB,GAAA,OAAAjJ,EAAA6H,MAAAC,KAAApN,YAAA,IiE8IeuB,KAAK,SAAAtD,GAAE,OAAIA,KACpD69B,SAAU,SAAA79B,GAAE,OAAIoO,EhE7GY,SAAApO,GAAE,sBAAA0C,EAAA5C,OAAAkO,EAAA,EAAAlO,CAAAmO,EAAAtB,EAAAuB,KAAI,SAAAkG,EAAMhG,GAAN,OAAAH,EAAAtB,EAAA2B,KAAA,SAAAgG,GAAA,cAAAA,EAAA9F,KAAA8F,EAAA7F,MAAA,cAAA6F,EAAA9F,KAAA,EAAA8F,EAAA7F,KAAA,EAExB1C,GAAmB/L,GAFK,cAG9BoO,EDpFmC,CACvCpP,KN3CgC,yBO+H5BoP,EAASP,MACTO,EAASyB,GAAoB,KALCyE,EAAA7F,KAAA,EAOxBL,EAASyE,MAPe,cAAAyB,EAAA1F,OAAA,SASvBC,QAAQC,WATe,eAAAwF,EAAA9F,KAAA,GAAA8F,EAAAvF,GAAAuF,EAAA,SAW9BnJ,QAAQC,IAAI,4BAAZkJ,EAAAvF,IAX8BuF,EAAA1F,OAAA,SAAA0F,EAAAvF,IAAA,yBAAAuF,EAAAtF,SAAAoF,EAAA,kBAAJ,gBAAAK,GAAA,OAAA/R,EAAAwM,MAAAC,KAAApN,YAAA,GgE6GLu9B,CAAiBt/B,KAC1C49B,iBAAkB,kBAAMxvB,EjE/Le,CACvCpP,KN3CgC,0BuE0OhCm/B,YAAa,SAACn+B,EAAI0E,GAAL,OAAe0J,EhElMS,SAAC9G,EAAa5C,GAAd,MAAyB,CAC9D1F,KvB5BsC,6BuB6BtCsI,cACA5C,SgE+LqC66B,CAA0Bv/B,EAAI0E,OAGxDqI,CAGbowB,ICrOWjB,GAAU,SAAA70B,GACnB,OADyCA,EAAnB43B,aAElBvyB,EAAAC,EAAAC,cAACyvB,GAAD,CAAkBrjB,UAAU,IAE5BtM,EAAAC,EAAAC,cAAC4sB,GAAD,CAAkBv6B,KAAMmB,IAAKC,EAAE,gBAO1Bm/B,GAAb,SAAApjB,GAAA,SAAAojB,IAAA,IAAA3hB,EAAAvG,EAAAxX,OAAAyX,EAAA,EAAAzX,CAAAqP,KAAAqwB,GAAA,QAAA1hB,EAAA/b,UAAAC,OAAA+b,EAAA,IAAA9Z,MAAA6Z,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAAD,EAAAC,GAAAjc,UAAAic,GAAA,OAAA1G,EAAAxX,OAAA0X,EAAA,EAAA1X,CAAAqP,MAAA0O,EAAA/d,OAAA2X,EAAA,EAAA3X,CAAA0/B,IAAA9nB,KAAAxI,MAAA2O,EAAA,CAAA1O,MAAA5O,OAAAwd,MACIhX,MAAQ,CACJ04B,aAAa,GAFrBnoB,EAKIooB,kBAAoB,WACZpoB,EAAK/J,MAAMpF,YACXmP,EAAKM,SAAS,CAAE6nB,aAAa,IAC7BnoB,EAAK/J,MAAMoyB,iBAAiBroB,EAAK/J,MAAMpF,UAAWmP,EAAK/J,MAAMpG,SARzEmQ,EAsBIsoB,oBAAsB,WAClB,IAAMrD,GACDjlB,EAAK/J,MAAM+uB,kBAAsC,OAAlBhlB,EAAK/J,MAAMvN,GAE/C,OACI0M,EAAAC,EAAAC,cAAA,OAAKgK,UAAU,qBACV2lB,EAAkB,KACf7vB,EAAAC,EAAAC,cAACizB,GAAD,CAASZ,aAAc3nB,EAAK/J,MAAM0xB,iBA7BtD3nB,EAAA,OAAAxX,OAAA6c,EAAA,EAAA7c,CAAA0/B,EAAApjB,GAAAtc,OAAA8c,EAAA,EAAA9c,CAAA0/B,EAAA,EAAAtrB,IAAA,oBAAAxP,MAAA,WAaQyK,KAAKuwB,sBAbb,CAAAxrB,IAAA,qBAAAxP,MAAA,WAiBayK,KAAKpI,MAAM04B,aACZtwB,KAAKuwB,sBAlBjB,CAAAxrB,IAAA,SAAAxP,MAAA,WAoCQ,OACIgI,EAAAC,EAAAC,cAACmV,EAAA,SAAD,KACIrV,EAAAC,EAAAC,cAACkzB,GAAD,MACApzB,EAAAC,EAAAC,cAAC6vB,GAAD,CAAyBzjB,UAAU,IAClC7J,KAAKywB,2BAxCtBJ,EAAA,CAAmC/lB,aAuEpB1M,eAhBS,SAAAhG,GACpB,IAAM/G,EAAKkK,GAAenD,GACpBoB,EAAYnI,EAAK4H,EAAkBb,EAAO/G,GAAM,KAKtD,MAAO,CACHmI,YACAnI,KACAi/B,gBALA92B,IAAaA,EAAUoB,SAASpB,EAAUoB,OAAOshB,OAMjD1jB,MAAOY,EAAmBhB,GAC1Bu1B,kBAAmBz0B,EAAsBd,KAM7C,CACI44B,iBlEtE0B,SAACx3B,EAAWhB,GAM1C,MAAO,CACHnI,KNlC+B,0BMmC/B0F,MAPK5E,OAAA0H,EAAA,EAAA1H,CAAA,GACFqI,EADE,CAELsB,eAAgBtC,OkEgET4F,CAKbyyB,IC/FIO,+LAEE5wB,KAAK5B,MAAMyyB,mDAIX,OACItzB,EAAAC,EAAAC,cAACmV,EAAA,SAAD,KACIrV,EAAAC,EAAAC,cAACkzB,GAAD,MACApzB,EAAAC,EAAAC,cAAC6vB,GAAD,CAAyBzjB,UAAU,IACnCtM,EAAAC,EAAAC,cAAA,OAAKgK,UAAU,qBACXlK,EAAAC,EAAAC,cAACyvB,GAAD,CAAkBrjB,UAAU,aAXrBS,aAsBZ1M,eACX,KACA,CACIizB,gBnEU6B,iBAAO,CACxChhC,KNtC+B,yByEwBpB+N,CAKbgzB,ICzBIE,8MACFC,aAAe,WACX,GAAI5oB,EAAK/J,MAAM+uB,iBAAkB,CAC7B,IAAMt8B,EAAKsX,EAAK/J,MAAM4yB,MAAMC,OAAO94B,aAAe,KAElDgQ,EAAK/J,MAAM8yB,gBAAgBrgC,GAE3BsX,EAAKgpB,kBAIbA,YAAc,WACVxoB,OAAOyoB,SAAS,EAAG,uFAInBpxB,KAAK+wB,4DAIL/wB,KAAK+wB,gDAIL,OAAQ/wB,KAAK5B,MAAMizB,MACf,ICpCQ,ODqCJ,OAAO9zB,EAAAC,EAAAC,cAAC6zB,GAAD,MACX,ICrCO,MDsCH,OAAO/zB,EAAAC,EAAAC,cAAC8zB,GAAD,MACX,QACI,OAAOh0B,EAAAC,EAAAC,cAAC+zB,GAAD,cA9BClnB,aA8CT1M,eAJS,SAAAhG,GACpB,MAAO,CAAEu1B,kBAAmBz0B,EAAsBd,KAKlD,CACIs5B,gBnEIwB,SAAArgC,GAAE,sBAAAmC,EAAArC,OAAAkO,EAAA,EAAAlO,CAAAmO,EAAAtB,EAAAuB,KAAI,SAAAmB,EAAOjB,EAAUkB,GAAjB,IAAArE,EAAAlE,EAAA65B,EAAAC,EAAAxyB,EAAA,OAAAJ,EAAAtB,EAAA2B,KAAA,SAAAmB,GAAA,cAAAA,EAAAjB,KAAAiB,EAAAhB,MAAA,OAC5BxD,EAAU,SAAAC,GAEZ,OADAC,QAAQC,IAAI,+BAAgCF,GACrCA,GAHuBuE,EAAAjB,KAAA,EAOxBzH,EAAQuI,IAEVsxB,EAAoB,KACpB5gC,EACA4gC,EAAoBh5B,EAAkBb,EAAO/G,IAAO,MT3EzB4G,ES8EvBE,EAAiBC,GADf85B,ET5Ed9wB,aAAa+wB,QAAb,2BAAAvgC,OAAgDqG,UAAe3E,ES+EjDoM,EAAOzG,EAAkBb,EAAO85B,GACtCD,EACIC,GAAexyB,EACTA,EACA/F,EAA8BvB,GAAO,IAG/C65B,GACAxyB,EAASgB,GAA0BwxB,EAAkB5gC,KAEjD4gC,EAAkB5gC,KAAOkK,GAAenD,GACpC6J,GAAc7J,GAEdqH,EJxEqB,CACrCpP,KDtB8B,uBKgGdoP,EJvEwB,CACxCpP,KDzB4B,mBC0B5BoqB,QIqE0CrY,GAAwBhK,MAItDqH,EHvF6B,CACzCpP,KHdmC,4BMqGvBoP,EJhFyB,CACrCpP,KDtB8B,yBKwGtBoP,EAASP,MAxCiB4B,EAAAhB,KAAA,uBAAAgB,EAAAjB,KAAA,EAAAiB,EAAAV,GAAAU,EAAA,SAAAA,EAAAb,OAAA,SA2CvB3D,EAAOwE,EAAAV,KA3CgB,yBAAAU,EAAAT,OJvCN,ILzBOpI,GSgEDyI,EAAA,iBAAJ,gBAAAiB,EAAAC,GAAA,OAAApO,EAAA+M,MAAAC,KAAApN,YAAA,KmEPnBgL,CAKbkzB,IE3CWc,oBAAb,SAAA3kB,GAAA,SAAA2kB,IAAA,OAAAjhC,OAAAyX,EAAA,EAAAzX,CAAAqP,KAAA4xB,GAAAjhC,OAAA0X,EAAA,EAAA1X,CAAAqP,KAAArP,OAAA2X,EAAA,EAAA3X,CAAAihC,GAAA7xB,MAAAC,KAAApN,YAAA,OAAAjC,OAAA6c,EAAA,EAAA7c,CAAAihC,EAAA3kB,GAAAtc,OAAA8c,EAAA,EAAA9c,CAAAihC,EAAA,EAAA7sB,IAAA,oBAAAxP,MAAA,WAEQyK,KAAK5B,MAAMyzB,eAAe7xB,KAAK5B,MAAM7M,GAAG6S,aACxCpE,KAAK5B,MAAM0zB,kBACX9xB,KAAK5B,MAAM2zB,oBACX/xB,KAAK5B,MAAM4zB,cAAchyB,KAAK5B,MAAM7M,MAL5C,CAAAwT,IAAA,kBAAAxP,MAAA,WASQ,MAAO,CAAEiB,QAASwJ,KAAK5B,MAAM5H,QAASvF,SAAMM,GAAIyO,KAAK5B,MAAM7M,MATnE,CAAAwT,IAAA,SAAAxP,MAAA,WAaQ,OACIgI,EAAAC,EAAAC,cAAAF,EAAAC,EAAA+hB,SAAA,KACIhiB,EAAAC,EAAAC,cAACmO,EAAA,EAAD,CAAcjF,QAAM,EAACsrB,SAAO,IAC5B10B,EAAAC,EAAAC,cAAA,OAAKgK,UAAU,eACXlK,EAAAC,EAAAC,cAAA,OAAKgK,UAAU,wBACXlK,EAAAC,EAAAC,cAACy0B,EAAA,EAAD,CAAWzhC,QAASQ,IAAKC,EAAE,gBAE/BqM,EAAAC,EAAAC,cAAC00B,EAAA,EAAD,KACI50B,EAAAC,EAAAC,cAAC20B,EAAA,EAAD,KACI70B,EAAAC,EAAAC,cAAC40B,EAAA,EAAD,CACIC,OAAK,EACLC,KAAK,IACLC,OAAQ,SAAAp0B,GAAK,OACTb,EAAAC,EAAAC,cAACg1B,GAAD9hC,OAAA2R,OAAA,GAAelE,EAAf,CAAsBizB,KD3CtC,aC8CQ9zB,EAAAC,EAAAC,cAAC40B,EAAA,EAAD,CACIC,OAAK,EACLC,KAAK,OACLC,OAAQ,SAAAp0B,GAAK,OACTb,EAAAC,EAAAC,cAACg1B,GAAD9hC,OAAA2R,OAAA,GAAelE,EAAf,CAAsBizB,KDnDvC,YCsDS9zB,EAAAC,EAAAC,cAAC40B,EAAA,EAAD,CACIC,OAAK,EACLC,KAAK,gBACLC,OAAQ,SAAAp0B,GAAK,OACTb,EAAAC,EAAAC,cAACg1B,GAAD9hC,OAAA2R,OAAA,GAAelE,EAAf,CAAsBizB,KDzDtC,aC4DQ9zB,EAAAC,EAAAC,cAAC40B,EAAA,EAAD,CACIC,OAAK,EACLC,KAAK,qBACLC,OAAQ,SAAAp0B,GAAK,OACTb,EAAAC,EAAAC,cAACg1B,GAAD9hC,OAAA2R,OAAA,GAAelE,EAAf,CAAsBizB,KDlEtC,eCuEA9zB,EAAAC,EAAAC,cAACi1B,GAAD,YApDpBd,EAAA,CAAyBtnB,cAoEzBsnB,GAAIe,kBAAoB,CACpBn8B,QAAS0c,IAAUqS,OACnBt0B,KAAMiiB,IAAUtc,OAChBrF,GAAI2hB,IAAUtc,QAGlB,IASegH,eACX,KAVuB,SAAAqB,GACvB,MAAO,CACH4yB,eAAgB,SAAAztB,GAAW,OAAInF,EC7FC,CACpCpP,K9FHyB,gB8FIzB0F,MD2F2D6O,KACvD0tB,gBAAiB,kBAAM7yB,EAASyE,OAChCquB,kBAAmB,kBAAM9yB,ElErFC,eAAA/G,EAAAvH,OAAAkO,EAAA,EAAAlO,CAAAmO,EAAAtB,EAAAuB,KAAM,SAAAC,EAAMC,GAAN,IAAAoB,EAAAvE,EAAA82B,EAAA,OAAA9zB,EAAAtB,EAAA2B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAC9Be,EAAY,SAAA6E,GACdjG,EAASsG,GAAwBL,KAG/BpJ,EAAU,SAAAC,GAEZ,OADAC,QAAQC,IAAI,iCAAkCF,GACvCA,GAPyBqD,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAWHkF,KAXG,cAW1BouB,EAX0BxzB,EAAAG,KAAAH,EAAAK,OAAA,SAYzBY,EAAUuyB,IAZe,cAAAxzB,EAAAC,KAAA,EAAAD,EAAAQ,GAAAR,EAAA,SAAAA,EAAAK,OAAA,SAczB3D,EAAOsD,EAAAQ,KAdkB,yBAAAR,EAAAS,SAAAb,EAAA,iBAAN,gBAAAc,GAAA,OAAA5H,EAAA6H,MAAAC,KAAApN,YAAA,KkEsF1Bo/B,cAAe,SAAAzgC,GAAE,OAAI0N,E/DzFC,SAAA1N,GAAE,sBAAA2G,EAAAvH,OAAAkO,EAAA,EAAAlO,CAAAmO,EAAAtB,EAAAuB,KAAI,SAAAC,EAAOC,EAAUkB,GAAjB,IAAAE,EAAAvE,EAAA+2B,EAAAhtB,EAAAitB,EAAA,OAAAh0B,EAAAtB,EAAA2B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAC1Be,EAAY,SAAAwF,GACd5G,EAASsH,GAAgBV,KAGvB/J,EAAU,SAAAC,GAEZ,OADAC,QAAQC,IAAI,+BAAgCF,GACrCA,GAPqBqD,EAAAC,KAAA,EAWtBwzB,EAAkBvsB,GAAgCnG,KAX5Bf,EAAAE,KAAA,EAYHyzB,8BAAmBxhC,EAAIshC,GAZpB,cAYtBhtB,EAZsBzG,EAAAG,KAetBuzB,EAAqBjtB,EAAW9M,OAClC,SAAAi6B,GAAG,MACuB,aAAtBA,EAAIC,eACmB,aAAtBD,EAAIC,eACyB,cAA1BD,EAAIE,oBAnBY9zB,EAAAK,OAAA,SAqBrBY,EAAUyyB,IArBW,eAAA1zB,EAAAC,KAAA,GAAAD,EAAAQ,GAAAR,EAAA,SAAAA,EAAAK,OAAA,SAuBrB3D,EAAOsD,EAAAQ,KAvBc,yBAAAR,EAAAS,SAAAb,EAAA,kBAAJ,gBAAAc,EAAAqB,GAAA,OAAAjJ,EAAA6H,MAAAC,KAAApN,YAAA,G+DyFMugC,CAAe5hC,OAItCqM,CAGbg0B,4WE1DFwB,KAAOx9B,OAAO,MAEd3E,IAAKoiC,aAAa,KAHA,iBAGiBC,IACnCriC,IAAKoiC,aAAa,KAJA,iBAIiBE,IACnCtiC,IAAKoiC,aAAa,KALA,iBAKiBG,IACnCviC,IAAKoiC,aAAa,KANA,iBAMiBI,IACnCxiC,IAAKoiC,aAAa,KAPA,iBAOiBK,IACnCziC,IAAKoiC,aAAa,KARA,iBAQiBM,IACnC1iC,IAAKoiC,aAAa,KATA,iBASiBO,IACnC3iC,IAAKoiC,aAAa,KAVA,iBAUiBQ,IACnC5iC,IAAKoiC,aAAa,KAXA,iBAWiBS,IACnC7iC,IAAKoiC,aAAa,MAZA,iBAYkBU,IACpC9iC,IAAKoiC,aAAa,KAbA,iBAaiBW,IACnC/iC,IAAKoiC,aAAa,KAdA,iBAciBY,IACnChjC,IAAKoiC,aAAa,QAfA,iBAeoBa,IACtCjjC,IAAKoiC,aAAa,KAhBA,iBAgBiBc,IACnCljC,IAAKoiC,aAAa,KAjBA,iBAiBiBe,IACnCnjC,IAAKoiC,aAAa,MAlBA,iBAkBkBgB,IACpCpjC,IAAKoiC,aAAa,KAnBA,iBAmBiBiB,IACnCrjC,IAAKoiC,aAAa,KApBA,iBAoBiBkB,IACnCtjC,IAAKoiC,aAAa,KArBA,iBAqBiBmB,IACnCvjC,IAAKoiC,aAAa,KAtBA,iBAsBiBoB,IACnCxjC,IAAKoiC,aAAa,KAvBA,iBAuBiBqB,IACnCzjC,IAAKoiC,aAAa,QAxBA,iBAwBoBsB,IAEtC1jC,IAAK2jC,oBA1Ba,kBA2BlB3jC,IAAK4jC,eAAe,MAEL5jC,SAAf,uBCrDeyM,GATD,WAAyC,IAAxC9F,EAAwChF,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GARpB,OAQS8H,EAAW9H,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACnD,OAAQ4H,EAAO7K,MACX,IAZiB,YAab,OAAOuG,YAAgBsE,EAAOnF,MAXP,QAY3B,QACI,OAAOqC,ICWJ6C,eAAgB,CAC3BjC,WhGiBW,WAA8C,IAA7CZ,EAA6ChF,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAArCkF,EAA0B4C,EAAW9H,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACzD,OAAQ4H,EAAO7K,MACX,IAjCsB,iBAkClB,MAAO,CACHkI,KAAM2C,EAAOnF,MACbyC,MAAO,IAGf,IAtCsB,iBAuClB,OAAOrH,OAAA0H,EAAA,EAAA1H,CAAA,GACAiH,EADP,CAEIG,KAAKpH,OAAA0H,EAAA,EAAA1H,CAAA,GACEiH,EAAMG,KACN2C,EAAOnF,SAItB,IA9C6B,wBA+CzB,OAAO0C,EAAoB,CACvBL,QACAO,YAAauC,EAAOvC,YACpBC,KAAM,UACN7C,MAAOmF,EAAOnF,QAGtB,IArDkC,6BAsD9B,OAAO0C,EAAoB,CACvBL,QACAO,YAAauC,EAAOvC,YACpBC,KAAM,cACN7C,MAAOmF,EAAOnF,QAGtB,IA5D2B,sBA6DvB,OAAO5E,OAAA0H,EAAA,EAAA1H,CAAA,GACAiH,EADP,CAEII,MAAO0C,EAAOnF,QAGtB,QACI,OAAOqC,IgGxDfkD,WACA4R,oBACA1I,cACA1I,e9FvBW,WAAkD,IAAjD1D,EAAiDhF,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzCsI,GAA8BR,EAAW9H,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC7D,OAAQ4H,EAAO7K,MACX,IARyB,oBASrB,OAAOc,OAAA0H,EAAA,EAAA1H,CAAA,GACAiH,EADPjH,OAAA2H,EAAA,EAAA3H,CAAA,GAEK+J,EAAOnF,MAAM1E,GAAKikC,KAAYnkC,OAAA0H,EAAA,EAAA1H,CAAA,GAEpBqE,YAAS4C,EAAM8C,EAAOnF,MAAM1E,KAC5B6J,EAAOnF,OAEd4F,MAKZ,QACI,OAAOvD,I8FQf+D,0B5FxBW,WAAmC,IAAlC/D,EAAkChF,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA1B6I,GAAef,EAAW9H,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC9C,OAAQ4H,EAAO7K,MACX,IARsC,iCASlC,OAAOc,OAAA0H,EAAA,EAAA1H,CAAA,GACAiH,EADPjH,OAAA2H,EAAA,EAAA3H,CAAA,GAEK+J,EAAOnF,MAAM1E,GAAKikC,KAAYnkC,OAAA0H,EAAA,EAAA1H,CAAA,GAEpBqE,YAAS0F,EAAOnF,MAAMwL,gBAE7B5F,MAKZ,QACI,OAAOvD,I4FUfkF,SxF/BW,WAAwB,IAAvBlF,EAAuBhF,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAf,GAAI8H,EAAW9H,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACnC,OAAQ4H,EAAO7K,MACX,IAJyB,oBAKrB,IAAMklC,EAAgB7/B,YAAawF,EAAOnF,OAI1C,OAFiBmmB,KAAO9jB,EAAO,CAAEo9B,OAAQD,IAI7C,QACI,OAAOn9B,IwFsBfC,KjG5BW,WAAwC,IAU9Bo9B,EAVTr9B,EAAuChF,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA/B4E,EAAoBkD,EAAW9H,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACnD,OAAQ4H,EAAO7K,MACX,IAXqB,gBAYjB,MAQD,CACHgB,IAFiBokC,EAPUv6B,EAAOnF,OASrB1E,GACb4G,SAAUw9B,EAASx9B,SACnBjC,SAAUy/B,EAAS5uB,SAAS6uB,YAC5Bx9B,YAAau9B,EAASE,YAAY7wB,IAAI,QAVtC,QACI,OAAO1M,IiGuBf4J,chFdW,WAAkD,IAAjD5J,EAAiDhF,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzCyO,GAA8B3G,EAAW9H,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC7D,OAAQ4H,EAAO7K,MACX,IArB+B,0BAsB3B,IAAMulC,EAAW,GAIjB,OAHAzkC,OAAOuR,KAAKZ,IAAqB7H,IAC7B,SAAA47B,GAAC,OAAKD,EAASC,GAAK36B,EAAOnF,MAAM8/B,KAE9BD,EAEX,IA3B4B,uBA4BxB,OAAO/zB,GACX,IA5B2B,sBA6BvB,OAAOC,GACX,IA7BsB,iBA8BlB,OAAO3Q,OAAO2R,OAAO,GAAI1K,EAAO,CAAE+B,KAAMe,EAAOnF,QAEnD,IA/B4B,uBAgCxB,OAAO5E,OAAO2R,OAAO,GAAI1K,EAAO,CAC5BiC,YAAaa,EAAOnF,QAG5B,IAnC0B,qBAoCtB,OAAOmmB,KAAO9jB,EAAO,CACjB0C,eAAgB,CAAEg7B,SAAU,CAAC56B,EAAOnF,UAE5C,IAtC6B,wBAuCzB,IAAMggC,EAAa76B,EAAOnF,MAEpB+d,EAAqB1b,EAAM0C,eAAeiZ,UAC5C,SAAA3jB,GAAI,OAAIA,EAAKiB,KAAO0kC,IAGxB,OAAIjiB,GAAsB,EACfoI,KAAO9jB,EAAO,CACjB0C,eAAgB,CACZk7B,QAAS,CAAC,CAACliB,EAAoB,OAKpC1b,EAEX,IArDiC,4BAsD7B,IAAM69B,EAAa7gC,YAAQgD,EAAM0C,gBAE3Bo7B,EAAgBh7B,EAAOnF,MAAMkE,IAAI,SAAAvB,GAAuB,IAApBy9B,EAAoBz9B,EAApBy9B,EAAGC,EAAiB19B,EAAjB09B,EAAGpzB,EAActK,EAAdsK,EAAGE,EAAWxK,EAAXwK,EAAGue,EAAQ/oB,EAAR+oB,EAC5C4U,EAAYJ,EAAW3wB,KAAK,SAAAgxB,GAAE,OAAIA,EAAGjlC,KAAOowB,IAElD,OAAOtwB,OAAO2R,OAAO,GAAIuzB,EAAW,CAAErzB,IAAGE,IAAGizB,IAAGC,QAGnD,OAAOla,KAAO9jB,EAAO,CACjB0C,eAAgB,CAAEy7B,KAAML,KAGhC,IAnE6B,wBAoEzB,IAAMtiB,EAAgB1Y,EAAOnF,MAEvB+d,EAAqB1b,EAAM0C,eAAeiZ,UAC5C,SAAA3jB,GAAI,OAAIA,EAAKiB,KAAOuiB,EAAcviB,KAGtC,OAAIyiB,GAAsB,EACLoI,KAAO9jB,EAAO,CAC3B0C,eAAgB,CACZk7B,QAAS,CAAC,CAACliB,EAAoB,EAAGF,OAOvCxb,EAEX,QACI,OAAOA,IgF5DfoK,Y9EhCW,WAAgD,IAA/CpK,EAA+ChF,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAvCkP,GAA4BpH,EAAW9H,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC3D,OAAQ4H,EAAO7K,MACX,IAPuB,kBAQnB,OAAOc,OAAA0H,EAAA,EAAA1H,CAAA,GACAiH,EADPjH,OAAA2H,EAAA,EAAA3H,CAAA,GAEK+J,EAAO3B,OAAOlI,GAAK6J,EAAO3B,OAAOxD,QAG1C,IAZ0B,qBAatB,IAAM6/B,EAAQzkC,OAAA0H,EAAA,EAAA1H,CAAA,GAAQiH,GAItB,cAFOw9B,EAAS16B,EAAO7J,IAEhBukC,EAEX,IArBwB,mBAsBpB,OAAO16B,EAAOuf,QAElB,IAzB0B,qBA0BtB,OAAOnY,GAEX,QACI,OAAOlK,I8EWfiK,gB/ElCW,WAAqD,IAApDjK,EAAoDhF,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA5C+O,GAAiCjH,EAAW9H,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAChE,OAAQ4H,EAAO7K,MACX,IAP+B,0BAQ3B,IAAMulC,EAAQzkC,OAAA0H,EAAA,EAAA1H,CAAA,GAAQiH,GAItB,cAFOw9B,EAAS16B,EAAO7J,IAEhBukC,EAEX,IAb6B,wBAczB,OAAO16B,EAAOuf,QAElB,IAlB+B,0BAmB3B,OAAOtY,GAEX,QACI,OAAO/J,I+EmBf8F,SACAI,StFjCW,WAA4C,IAA3ClG,EAA2ChF,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAnCoK,GAAwBtC,EAAW9H,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACvD,OAAQ4H,EAAO7K,MACX,IAXiC,4BAY7B,OAAOc,OAAA0H,EAAA,EAAA1H,CAAA,GAAKiH,EAAU8C,EAAOnF,OAEjC,IAbsB,iBAclB,OAAOyH,GAEX,QACI,OAAOpF,IsFyBfiO,WrE/BW,WAAwC,IAAvCjO,EAAuChF,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA/B4S,GAAoB9K,EAAW9H,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACnD,OAAQ4H,EAAO7K,MACX,IARsB,iBASlB,SAAAuB,OAAWoU,GAAX7U,OAAAyI,EAAA,EAAAzI,CAAkC+J,EAAOnF,QAE7C,QACI,OAAOqC,IqE0BfyO,SpEhCW,WAAsC,IAArCzO,EAAqChF,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA7BkT,GAAkBpL,EAAW9H,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACjD,OAAQ4H,EAAO7K,MACX,IAdoB,eAehB,OAAOc,OAAO2R,OAAO,GAAI5H,EAAOnF,OAEpC,IAhBoB,eAiBhB,OAAO5E,OAAA0H,EAAA,EAAA1H,CAAA,GACAiH,EACA8C,EAAOnF,OAGlB,QACI,OAAOqC,IoEqBfogB,qB1CxCW,WAA0D,IAAzDpgB,EAAyDhF,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAjDklB,GAAsCpd,EAAW9H,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACrE,OAAQ4H,EAAO7K,MACX,IAPkC,6BAQ9B,OAAO6K,EAAOnF,MAElB,IAToC,+BAUhC,OAAOuiB,GAEX,QACI,OAAOlgB,M2CUJo+B,GAnBQ,WACnB,IAAMC,EAAa,CAACC,MAGdC,EACFxtB,OAAOytB,sCAAwCC,IAQnD,OANK1tB,OAAOytB,qCAMLE,YACHC,GACAJ,EAAiBK,IAAez2B,WAAf,EAAmBk2B,MCHtCQ,GAAa,SAAApR,GACf,IAAM7vB,EAAW6vB,EAAa6P,YAE1B1/B,GAAyB,OAAbA,GACZkhC,SAAOzlC,KAAK0lC,QAAQ9hB,IAApB,sBAAAzjB,OAA8CoE,EAA9C,gBAGJkhC,SAAOzlC,KAAK0lC,QAAQ9hB,IAAI,oCACxB5jB,GAAK4jC,eAAer/B,KAGd,eAAA0C,EAAAvH,OAAAkO,EAAA,EAAAlO,CAAAmO,EAAAtB,EAAAuB,KAAG,SAAAC,IAAA,IAAA43B,EAAAC,EAAArgC,EAAA,OAAAsI,EAAAtB,EAAA2B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACcw3B,sBAAY,qBAD1B,OACHF,EADGx3B,EAAAG,KAITvD,QAAQ+6B,KAAR,oBAAA3lC,OACwBwlC,EAASI,QADjC,MAAA5lC,OAEQwlC,EAASK,wBAIXJ,GAASK,EAVN93B,EAAAE,KAAA,eAuBH9I,EAAUqgC,EACVD,EAASO,WAAWC,KAAKjmB,KACzB+lB,KACgBA,SAEtBR,SAAOlgC,QAAP,GAAApF,OAAoBoF,EAApB,SAAApF,OAAmCwlC,EAASS,MAAMC,YAClDZ,SAAOa,QAAUV,EAAS,KAAO,CAAEtZ,cAHb2Z,UAItBR,SAAOc,QAAU,CACb,QACA,MACA,SACA,cACA,aACA,cACA,YACA,mBACA,aAGJC,4BACKtjC,KAAKsiC,IACLtiC,KAAK,kBAAMujC,eAAOhB,YAClBviC,KAAK,SAAAwjC,GACFC,IAASpF,OACLj1B,EAAAC,EAAAC,cAACo6B,EAAA,EAAD,CACInB,OAAQ,CACJlgC,QAASA,EACT8gC,WAAYV,EAASS,MAAMC,aAG/B/5B,EAAAC,EAAAC,cAACmO,EAAA,EAAD,MACArO,EAAAC,EAAAC,cAACq6B,EAAA,EAAD,CAAUC,MAAO/B,MACbz4B,EAAAC,EAAAC,cAAC+I,EAAA,iBAAD,CAAkBgT,MApEnBwe,yBAAeC,MAqEV16B,EAAAC,EAAAC,cAACy6B,GAAD,CAAK1hC,QAASA,EAASjF,GAAIomC,OAIvCzS,SAASiT,eAAe,WA5D3B,yBAAA/4B,EAAAS,SAAAb,MAAH,yBAAA9G,EAAA6H,MAAAC,KAAApN,aAAA,EAiEVwlC,wBC5FA9lC,EAAAC,QAAA,CAAkB2X,KAAA,yBAAA7G,QAAA,4BAAAkG,WAAA,qDCAlBjX,EAAAC,QAAA,CAAkB4Z,OAAA,4BAAAhB,KAAA,kfCcZktB,GAAwBC,EAAA,GAAA3nC,OAAA4nC,EAAA,EAAA5nC,CAAA2nC,EACzBvpC,IAAM,aADmB4B,OAAA4nC,EAAA,EAAA5nC,CAAA2nC,EAEzBtpC,IAAe,qBAFU2B,OAAA4nC,EAAA,EAAA5nC,CAAA2nC,EAGzBrpC,IAAc,oBAHWqpC,GAOxBE,EAAY,SAAA3oC,GACd,QAHwB,SAAAA,GAAI,MAAI,CAACf,IAAOD,KAAc8hB,SAAS9gB,GAG3D4oC,CAAoB5oC,IAKjB4F,EAFY4iC,EAAyBxoC,KAOnCyvB,EAAoB,WAAmC,IAAlC1vB,EAAkCgD,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA3B,GAC/B/C,GAD0D+C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAP,IAC9BkqB,YAAcltB,EAAKC,KAE9C,QAAS2oC,EAAU3oC,IAGVmR,EAAkB,SAAApR,GAC3B,OAAKqF,IAASrF,GAOVA,EAHaK,IAAYL,EAAKC,MAAMkB,WAInCnB,EAAK2K,aACF3K,EAAK4K,OACL5K,EAAK6J,KACL7J,EAAK8oC,aACL9oC,EAAK+oC,YACL,GAZG,MAmBFC,EAAa,SAACC,EAAQnC,EAAQvZ,GACjC0b,GAAUA,EAAOC,OAIvBD,EAAOrnC,IAAM2rB,EAAY3mB,QACzBqiC,EAAOE,kBAAmB,EAC1BF,EAAO7/B,WAAY,EACfmkB,EAAYE,OACZwb,EAAOxb,KAAOF,EAAYE,MAE9Bwb,EAAOC,KAAKpC,KAGHjW,EAAQ,SAAA7wB,GAAI,OAAIoR,EAAgBpR,GAAMiB,IACtCmoC,EAAU,SAAAppC,GAAI,OAAIoR,EAAgBpR,GAAM+J,MAExCqmB,EAAU,SAACpwB,EAAM2B,GAC1B,IAAMiF,EAAU9E,YAAWH,GACrBJ,EAASlB,IAAYL,EAAKC,MAAMsB,OAAOsvB,EAAM7wB,IAEnD,SAAAwB,OAAUoF,EAAV,KAAApF,OAAqBD,IAGZ2nC,EAAI,eAAA9lC,EAAArC,OAAAsoC,EAAA,EAAAtoC,CAAAuoC,EAAA17B,EAAAuB,KAAG,SAAAC,EAChBpP,EACAmR,EAFgB7I,GAAA,IAAAilB,EAAAL,EAAA4Z,EAAA7mC,EAAAgpC,EAAA,OAAAK,EAAA17B,EAAA2B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAGd6d,EAHcjlB,EAGdilB,YAAaL,EAHC5kB,EAGD4kB,WAET4Z,EALU/lC,OAAAwoC,EAAA,EAAAxoC,CAAA,GAMToQ,EANS,CAOZmlB,GAAI1I,YAAiB5tB,EAAKiB,MAGxBhB,EAAOitB,GAAcltB,EAAKC,KAC1BgpC,EAASL,EAAU3oC,GAEzB+oC,EAAWC,EAAQnC,EAAQvZ,GAbX,wBAAA/d,EAAAS,SAAAb,MAAH,gBAAAc,EAAAqB,EAAAC,GAAA,OAAApO,EAAA+M,MAAAC,KAAApN,YAAA,GAgBJwmC,EAAK,eAAA/lC,EAAA1C,OAAAsoC,EAAA,EAAAtoC,CAAAuoC,EAAA17B,EAAAuB,KAAG,SAAAmB,EAAMtQ,GAAN,IAAAypC,EAAA,OAAAH,EAAA17B,EAAA2B,KAAA,SAAAmB,GAAA,cAAAA,EAAAjB,KAAAiB,EAAAhB,MAAA,cAAAgB,EAAAhB,KAAA,EACavL,YAAiB0sB,EAAM7wB,GAAOA,EAAKC,KAAM,CACnEoE,OAAQrE,EAAKC,OAASd,IAAM+E,cAAiB,OAFhC,cACXulC,EADW/4B,EAAAf,KAAAe,EAAAb,OAAA,SAKV45B,GALU,wBAAA/4B,EAAAT,SAAAK,MAAH,gBAAAmF,GAAA,OAAAhS,EAAA0M,MAAAC,KAAApN,YAAA,GAQL0mC,EAAS,SAAA1pC,GAClB,IAAMipC,EAASL,EAAU5oC,EAAKC,MAE1BgpC,GAAUA,EAAOS,QACjBT,EAAOS,OAAO9b,YAAiB5tB,EAAKiB,MAI/B0oC,EAAU,SAAC3pC,EAAMktB,GAC1B,IAAM+b,EAASL,EAAU1b,GAErB+b,GAAUA,EAAOU,SACjBV,EAAOU,QAAQ/b,YAAiB5tB,EAAKiB,MAIhC2oC,EAAyB,SAClCz4B,EACA04B,EACA3c,GAEA,GAAI2c,IAAiB1qC,KAAO0qC,IAAiB3c,EAAY,CACrD,IAAM4c,GAzEgBjgC,EAyEkBsH,GAxExC0hB,UAAYhpB,EAAIgpB,SAAS3d,KAAK,SAAA60B,GAAE,OAAIA,EAAGjX,MAAM/R,SA3BvB,cAqGtB,YAAyB7d,IAArB4mC,EACO,KAGJ/iC,YAAahG,OAAAwoC,EAAA,EAAAxoC,CAAA,GACboQ,EACA24B,EAFY,CAGfjX,cAAU3vB,EACVjD,KAAMitB,IAAehuB,IAAQ8qC,kBAAkBC,0BAEhD,OAAIJ,IAAiB5qC,KAAgBiuB,IAAehuB,IAChD6H,YAAahG,OAAAwoC,EAAA,EAAAxoC,CAAA,GAAKoQ,EAAN,CAAqBlR,KAAM+pC,qBACvCH,IAAiB3qC,KAASguB,IAAejuB,IACzC8H,YAAahG,OAAAwoC,EAAA,EAAAxoC,CAAA,GACboQ,EADY,CAEflR,KAAMgqC,0BAIPljC,YAAaoK,GA9FM,IAAAtH,uDCzD9BqgC,EAAApgC,EAAAqgC,EAAA,sBAAA7O,IAAA4O,EAAApgC,EAAAqgC,EAAA,sBAAAhP,IAAA+O,EAAApgC,EAAAqgC,EAAA,sBAAApP,IAAAmP,EAAApgC,EAAAqgC,EAAA,sBAAAz2B,IAAAw2B,EAAApgC,EAAAqgC,EAAA,sBAAAtP,IAAAqP,EAAApgC,EAAAqgC,EAAA,sBAAAlP,IAAAiP,EAAApgC,EAAAqgC,EAAA,sBAAArO,IAAAoO,EAAApgC,EAAAqgC,EAAA,sBAAAp5B,IAAAm5B,EAAApgC,EAAAqgC,EAAA,sBAAAvc,IAAAsc,EAAApgC,EAAAqgC,EAAA,sBAAA7P,IAAA,IAAA8P,EAAAF,EAAA,MAAAG,EAAAH,EAAAI,EAAAF,GAAAG,EAAAL,EAAA,IAMa5O,EAAoB,WACpBH,EAAkB,GAGlBJ,EAAS,CAAC,GAAI,IAEdrnB,EAAiB,CAAEqyB,EAAG,EAAGC,EAAG,EAAGpzB,EAAG,GAAIE,EAAG,IACzC+nB,EAAkB,EAOlBI,EAAiB,WAGlB,OALS,IAefuP,EAAuB,SAAAzE,GAAC,OAAI0E,OAAOC,UAAU3E,IAAMA,GAAK,GAIjDjK,EAAW,SAAA97B,GAAI,OACxBwqC,EAAqBxqC,EAAK+lC,IAC1ByE,EAAqBxqC,EAAKgmC,IAC1BwE,EAAqBxqC,EAAK4S,IAC1B43B,EAAqBxqC,EAAK8S,IA6CjB/B,EAAY,SAAA3I,GAAK,OAC1BA,EAAMyB,IAAI,SAAC7J,EAAMq2B,GACb,IAAMsU,EAAgB7O,EAAS97B,GACzBA,EACAe,OAAO2R,OAAO,GAAI1S,EA7CR,SAAAqxB,GACpB,IAAKmZ,EAAqBnZ,GACtB,MAAM,IAAIuZ,MAAM,6BAGpB,IAAMC,EAAMxZ,EAjCY,EAkClByZ,EAAM7yB,KAAKC,MAAMmZ,EAlCC,GAmClB0Z,EAAY9yB,KAAKC,MAAM,MACvB8yB,EAA+B,EAAlB7P,EAEnB,MAAO,CACH4K,EAAG8E,EAAME,EACT/E,EAAG8E,EAAME,EACTp4B,EAAGm4B,EACHj4B,EAAGk4B,GA+B2BC,CAAS5U,IAEvC,OAAOt1B,OAAO2R,OACV,GACAi4B,EAxBc,SAAA3qC,GAKtB,MAAO,CAAEszB,eAJcrb,KAAKizB,MACxB/P,EAAkBn7B,EAAK8S,EAAImF,KAAK4B,IAAI,EAAG7Z,EAAK8S,EAAI,GAAKioB,EAAO,KAuBxDoQ,CAAkBR,OAIjB/c,EAAmB,SAAA3sB,GAAE,cAAAO,OAAYP,IAEvC,SAASq5B,EAAar5B,GACzB,IAAMq1B,EAAKlxB,YAASkwB,SAAS8V,cAAT,IAAA5pC,OAA2BosB,EAAiB3sB,MAC5DoqC,IAAW/U,EAAGgV,kBACd36B,WACI,kBAAM2lB,EAAGgV,gBAAgBhV,EAAGiV,YAAc,EAAGjV,EAAGkV,aAAe,IAC/D","file":"static/js/main.7a5f9110.chunk.js","sourcesContent":["import i18n from '@dhis2/d2-i18n';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\nimport ExtensionIcon from '@material-ui/icons/Extension';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport PersonIcon from '@material-ui/icons/Person';\nimport FontDownloadIcon from '@material-ui/icons/FontDownload';\nimport EmailIcon from '@material-ui/icons/Email';\nimport CropFreeIcon from '@material-ui/icons/CropFree';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nimport { getBaseUrl } from './util';\n\n// Item types\nexport const VISUALIZATION = 'VISUALIZATION';\nexport const REPORT_TABLE = 'REPORT_TABLE';\nexport const CHART = 'CHART';\nexport const MAP = 'MAP';\nexport const EVENT_REPORT = 'EVENT_REPORT';\nexport const EVENT_CHART = 'EVENT_CHART';\nexport const APP = 'APP';\nexport const REPORTS = 'REPORTS';\nexport const RESOURCES = 'RESOURCES';\nexport const USERS = 'USERS';\nexport const MESSAGES = 'MESSAGES';\nexport const TEXT = 'TEXT';\nexport const SPACER = 'SPACER';\n\nconst DOMAIN_TYPE_AGGREGATE = 'AGGREGATE';\nconst DOMAIN_TYPE_TRACKER = 'TRACKER';\n\n// Dashboard helpers\nexport const spacerContent = 'SPACER_ITEM_FOR_DASHBOARD_LAYOUT_CONVENIENCE';\nexport const emptyTextItemContent = 'TEXT_ITEM_WITH_NO_CONTENT';\nexport const isSpacerType = item =>\n    item.type === TEXT && item.text === spacerContent;\nexport const isTextType = item =>\n    item.type === TEXT && item.text !== spacerContent;\nexport const isVisualizationType = item =>\n    !!itemTypeMap[item.type].isVisualizationType;\nexport const hasMapView = itemType =>\n    itemTypeMap[itemType].domainType === DOMAIN_TYPE_AGGREGATE;\nexport const isTrackerDomainType = itemType =>\n    itemTypeMap[itemType].domainType === DOMAIN_TYPE_TRACKER;\nexport const getDefaultItemCount = itemType =>\n    itemTypeMap[itemType].defaultItemCount || 5;\nexport const getAppName = itemType => itemTypeMap[itemType].appName || '';\n\n// Item type map\nexport const itemTypeMap = {\n    [VISUALIZATION]: {\n        id: VISUALIZATION,\n        endPointName: 'visualizations',\n        propName: 'visualization',\n        pluralTitle: i18n.t('Visualizations'),\n        appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n        appName: 'Data Visualizer',\n        isVisualizationType: true,\n        defaultItemCount: 10,\n    },\n    [REPORT_TABLE]: {\n        id: REPORT_TABLE,\n        endPointName: 'visualizations',\n        propName: 'reportTable',\n        pluralTitle: i18n.t('Pivot tables'),\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n        appName: 'Data Visualizer',\n    },\n    [CHART]: {\n        id: CHART,\n        endPointName: 'visualizations',\n        propName: 'chart',\n        pluralTitle: i18n.t('Charts'),\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n        appName: 'Data Visualizer',\n    },\n    [MAP]: {\n        id: MAP,\n        endPointName: 'maps',\n        propName: 'map',\n        pluralTitle: i18n.t('Maps'),\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-maps/?id=${id}`,\n        appName: 'Maps',\n    },\n    [EVENT_REPORT]: {\n        id: EVENT_REPORT,\n        endPointName: 'eventReports',\n        propName: 'eventReport',\n        pluralTitle: i18n.t('Event reports'),\n        domainType: DOMAIN_TYPE_TRACKER,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-event-reports/?id=${id}`,\n        appName: 'Event Reports',\n    },\n    [EVENT_CHART]: {\n        id: EVENT_CHART,\n        endPointName: 'eventCharts',\n        propName: 'eventChart',\n        pluralTitle: i18n.t('Event charts'),\n        domainType: DOMAIN_TYPE_TRACKER,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-event-visualizer/?id=${id}`,\n        appName: 'Event Visualizer',\n    },\n    [APP]: {\n        endPointName: 'apps',\n        propName: 'appKey',\n        pluralTitle: i18n.t('Apps'),\n    },\n    [REPORTS]: {\n        id: REPORTS,\n        endPointName: 'reports',\n        propName: 'reports',\n        pluralTitle: i18n.t('Reports'),\n        appUrl: id =>\n            `dhis-web-reporting/getReportParams.action?mode=report&uid=${id}`,\n    },\n    [RESOURCES]: {\n        id: RESOURCES,\n        endPointName: 'resources',\n        propName: 'resources',\n        pluralTitle: i18n.t('Resources'),\n        appUrl: id => `api/documents/${id}/data`,\n    },\n    [USERS]: {\n        id: USERS,\n        endPointName: 'users',\n        propName: 'users',\n        pluralTitle: i18n.t('Users'),\n        appUrl: id => `dhis-web-dashboard-integration/profile.action?id=${id}`,\n    },\n    [TEXT]: {\n        id: TEXT,\n        propName: 'text',\n    },\n    [MESSAGES]: {\n        propName: 'messages',\n    },\n    [SPACER]: {\n        propName: 'text',\n    },\n};\n\nexport const getEndPointName = type => itemTypeMap[type].endPointName;\n\nexport const getItemUrl = (type, item, d2) => {\n    let url;\n\n    if (type === APP) {\n        url = item.launchUrl;\n    }\n\n    if (itemTypeMap[type] && itemTypeMap[type].appUrl) {\n        url = `${getBaseUrl(d2)}/${itemTypeMap[type].appUrl(item.id)}`;\n    }\n\n    return url;\n};\n\nexport const getItemIcon = type => {\n    switch (type) {\n        case REPORT_TABLE:\n        case EVENT_REPORT:\n        case REPORTS:\n            return TableIcon;\n        case CHART:\n        case EVENT_CHART:\n            return ChartIcon;\n        case MAP:\n            return MapIcon;\n        case APP:\n            return ExtensionIcon;\n        case RESOURCES:\n            return DescriptionIcon;\n        case USERS:\n            return PersonIcon;\n        case TEXT:\n            return FontDownloadIcon;\n        case MESSAGES:\n            return EmailIcon;\n        case SPACER:\n            return CropFreeIcon;\n        default:\n            return NotInterestedIcon;\n    }\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"showMoreButton\":\"CategorizedMenuGroup_showMoreButton__3-0Wa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"deleteItemButton\":\"DeleteItemButton_deleteItemButton__4YLrM\"};","import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\n\nimport { getEndPointName } from '../modules/itemTypes';\n\n// Id, name\nexport const getIdNameFields = ({ rename } = {}) => [\n    'id',\n    `${rename ? 'displayName~rename(name)' : 'name,displayName'}`,\n];\n\n// Item\nexport const getItemFields = () => [\n    'dimensionItem~rename(id)',\n    'displayName~rename(name)',\n    'dimensionItemType',\n];\n\n// Dimension\nexport const getDimensionFields = ({ withItems }) =>\n    arrayClean([\n        'dimension',\n        'legendSet[id]',\n        'filter',\n        'programStage',\n        withItems ? `items[${getItemFields().join(',')}]` : ``,\n    ]);\n\n// Axis\nexport const getAxesFields = ({ withItems }) => [\n    `columns[${getDimensionFields({ withItems }).join(',')}]`,\n    `rows[${getDimensionFields({ withItems }).join(',')}]`,\n    `filters[${getDimensionFields({ withItems }).join(',')}]`,\n];\n\n// Favorite\nexport const getFavoriteFields = ({ withDimensions, withOptions }) => {\n    return arrayClean([\n        `${getIdNameFields({ rename: true }).join(',')}`,\n        'displayDescription~rename(description)',\n        withDimensions ? `${getAxesFields({ withItems: true }).join(',')}` : ``,\n        withOptions\n            ? [\n                  '*',\n                  '!attributeDimensions',\n                  '!attributeValues',\n                  '!category',\n                  '!categoryDimensions',\n                  '!categoryOptionGroupSetDimensions',\n                  '!columnDimensions',\n                  '!dataDimensionItems',\n                  '!dataElementDimensions',\n                  '!dataElementGroupSetDimensions',\n                  '!filterDimensions',\n                  '!itemOrganisationUnitGroups',\n                  '!lastUpdatedBy',\n                  '!organisationUnitGroupSetDimensions',\n                  '!organisationUnitLevels',\n                  '!organisationUnits',\n                  '!programIndicatorDimensions',\n                  '!relativePeriods',\n                  '!reportParams',\n                  '!rowDimensions',\n                  '!series',\n                  '!translations',\n                  '!userOrganisationUnit',\n                  '!userOrganisationUnitChildren',\n                  '!userOrganisationUnitGrandChildren',\n              ].join(',')\n            : '',\n    ]);\n};\n\nexport const getFavoritesFields = ({ withDimensions }) => [\n    `reportTable[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `chart[${['type', ...getFavoriteFields({ withDimensions })].join(',')}]`,\n    `map[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `eventReport[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `eventChart[${getFavoriteFields({ withDimensions }).join(',')}]`,\n];\n\n// List item\nexport const getListItemFields = () => [\n    `reports[${getIdNameFields({ rename: true }).join(',')}]`,\n    `resources[${getIdNameFields({ rename: true }).join(',')}]`,\n    `users[${getIdNameFields({ rename: true }).join(',')}]`,\n];\n\n// Map\nexport const getMapFields = () => [\n    `${getIdNameFields({ rename: true }).join(',')}`,\n    'user,longitude,latitude,zoom,basemap',\n    `mapViews[${getFavoriteFields({\n        withDimensions: true,\n        withOptions: true,\n    })}]`,\n];\n\n// Api\n\n// Get more info about the favorite of a dashboard item\nexport const apiFetchFavorite = (id, type, { fields }) =>\n    getInstance().then(d2 =>\n        d2.Api.getApi().get(`${getEndPointName(type)}/${id}`, {\n            fields:\n                fields ||\n                getFavoriteFields({\n                    withDimensions: true,\n                    withOptions: true,\n                }),\n        })\n    );\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Item_list__2oHc1\",\"item\":\"Item_item__lO40M\",\"itemicon\":\"Item_itemicon__dv5ah\",\"link\":\"Item_link__2gULT\",\"deleteicon\":\"Item_deleteicon__3c7bl\",\"deletebutton\":\"Item_deletebutton__1DfY5\"};","import isObject from 'lodash/isObject';\n\n// validation\nexport function orNull(param) {\n    return param === undefined ? null : param;\n}\n\nexport function orArray(param) {\n    return Array.isArray(param) ? param : [];\n}\n\nexport function orObject(param) {\n    return isObject(param) ? param : {};\n}\n\n// array\nexport function arrayGetById(array, id) {\n    return array.find(item => item.id === id);\n}\n\n// object\nexport function arrayToIdMap(array) {\n    return array.reduce((obj, item) => {\n        obj[item.id] = item;\n        return obj;\n    }, {});\n}\n\n// date\nexport function getDate() {\n    const y = Math.floor(Math.random() * 3) + 2015;\n    const M = Math.floor(Math.random() * 12) + 1;\n    const d = Math.floor(Math.random() * 28) + 1;\n    // const h = Math.floor(Math.random() * 23) + 1;\n    // const m = Math.floor(Math.random() * 59) + 1;\n    // const s = Math.floor(Math.random() * 59) + 1;\n\n    return new Date(`${y}-${M}-${d}`)\n        .toJSON()\n        .replace('T', ' ')\n        .substr(0, 10);\n}\n\nexport const formatDate = (value, uiLocale) => {\n    if (typeof global.Intl !== 'undefined' && Intl.DateTimeFormat) {\n        const locale = uiLocale || 'en';\n        return new Intl.DateTimeFormat(locale, {\n            year: 'numeric',\n            month: 'short',\n            day: 'numeric',\n        }).format(new Date(value));\n    }\n\n    return value.substr(0, 19).replace('T', ' ');\n};\n\n/**\n * Sorts an array of objects based on provided date property\n *\n * @param {Array} items Array of objects\n * @param {String} dateProp Name of the date property to be used for sorting\n * @param {Boolean} ascending Whether to sort ascending or descending\n */\nexport const sortByDate = (items, dateProp, ascending = true) => {\n    const values = Object.values(items);\n\n    values.sort((a, b) => {\n        const aDate = new Date(a[dateProp]);\n        const bDate = new Date(b[dateProp]);\n\n        return ascending ? aDate - bDate : bDate - aDate;\n    });\n\n    return values;\n};\n\n// reducer validator\nexport const validateReducer = (value, defaultValue) =>\n    value === undefined || value === null ? defaultValue : value;\n\nexport const getBaseUrl = d2 => {\n    const api = d2.Api.getApi();\n    const idx = api.baseUrl.indexOf('/api');\n    return idx > -1 ? api.baseUrl.slice(0, idx) : api.baseUrl;\n};\n\nexport const getWithoutId = object => ({\n    ...object,\n    id: undefined,\n});\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"leftControls\":\"DashboardsBar_leftControls__2kr14\",\"rightControls\":\"DashboardsBar_rightControls__2l1lT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuItem\":\"ContentMenuItem_menuItem__2DIcB\",\"launchLink\":\"ContentMenuItem_launchLink__MRANR\",\"label\":\"ContentMenuItem_label__2pIfq\",\"buttonInsert\":\"ContentMenuItem_buttonInsert__1GlZy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemWrap\":\"ItemHeader_itemWrap__3gJiQ\",\"itemHeaderWrap\":\"ItemHeader_itemHeaderWrap__xEKwZ\",\"itemTitle\":\"ItemHeader_itemTitle__3LmXp\",\"itemActionsWrap\":\"ItemHeader_itemActionsWrap__1U5Ex\"};","export const RECEIVED_USER = 'RECEIVED_USER';\n\nexport const DEFAULT_STATE_USER = {\n    id: '',\n    username: '',\n    uiLocale: '',\n    isSuperuser: false,\n};\n\nexport default (state = DEFAULT_STATE_USER, action) => {\n    switch (action.type) {\n        case RECEIVED_USER: {\n            return fromD2ToUserObj(action.value);\n        }\n        default:\n            return state;\n    }\n};\n\nfunction fromD2ToUserObj(d2Object) {\n    return {\n        id: d2Object.id,\n        username: d2Object.username,\n        uiLocale: d2Object.settings.keyUiLocale,\n        isSuperuser: d2Object.authorities.has('ALL'),\n    };\n}\n\n// selectors\n\nexport const sGetUserId = state => state.user.id;\nexport const sGetUserUsername = state => state.user.username;\nexport const sGetIsSuperuser = state => state.user.isSuperuser;\nexport const sGetUiLocale = state => state.user.uiLocale;\n","/** @module reducers/dashboards */\n\nimport arrayFrom from 'd2-utilizr/lib/arrayFrom';\nimport arraySort from 'd2-utilizr/lib/arraySort';\n\nimport { orArray, orObject } from '../modules/util';\nimport {\n    SPACER,\n    isSpacerType,\n    isTextType,\n    emptyTextItemContent,\n    REPORT_TABLE,\n    CHART,\n    VISUALIZATION,\n} from '../modules/itemTypes';\n\nexport const SET_DASHBOARDS = 'SET_DASHBOARDS';\nexport const ADD_DASHBOARDS = 'ADD_DASHBOARDS';\nexport const SET_DASHBOARD_STARRED = 'SET_DASHBOARD_STARRED';\nexport const SET_DASHBOARD_DISPLAY_NAME = 'SET_DASHBOARD_DISPLAY_NAME';\nexport const SET_DASHBOARD_ITEMS = 'SET_DASHBOARD_ITEMS';\n\nexport const DEFAULT_STATE_DASHBOARDS = {\n    byId: null,\n    items: [],\n};\n\n// reducer helper functions\n\nconst updateDashboardProp = ({ state, dashboardId, prop, value }) => ({\n    byId: {\n        ...state.byId,\n        [dashboardId]: {\n            ...state.byId[dashboardId],\n            [prop]: value,\n        },\n    },\n    items: state.items,\n});\n\n/**\n * Reducer that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n * @returns {Object}\n */\nexport default (state = DEFAULT_STATE_DASHBOARDS, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS: {\n            return {\n                byId: action.value,\n                items: [],\n            };\n        }\n        case ADD_DASHBOARDS: {\n            return {\n                ...state,\n                byId: {\n                    ...state.byId,\n                    ...action.value,\n                },\n            };\n        }\n        case SET_DASHBOARD_STARRED: {\n            return updateDashboardProp({\n                state,\n                dashboardId: action.dashboardId,\n                prop: 'starred',\n                value: action.value,\n            });\n        }\n        case SET_DASHBOARD_DISPLAY_NAME: {\n            return updateDashboardProp({\n                state,\n                dashboardId: action.dashboardId,\n                prop: 'displayName',\n                value: action.value,\n            });\n        }\n        case SET_DASHBOARD_ITEMS: {\n            return {\n                ...state,\n                items: action.value,\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// root selector\n\nexport const sGetDashboardsRoot = state => state.dashboards;\n\n// selector level 1\n\n/**\n * Selector which returns a dashboard by id from the state object\n * If no matching dashboard is found it returns undefined\n * If dashboards.byId is null, then the dashboards api request\n * has not yet completed. If dashboards.byId is an empty object\n * then the dashboards api request is complete, but no dashboards\n * were returned\n *\n * @function\n * @param {Object} state The current state\n * @param {Number} id The id of the dashboard\n * @returns {Object | undefined}\n */\nexport const sGetDashboardById = (state, id) =>\n    orObject(sGetDashboardsRoot(state).byId)[id];\n\nexport const sDashboardsIsFetching = state => {\n    return sGetDashboardsRoot(state).byId === null;\n};\n\n/**\n * Selector which returns all dashboards (the byId object)\n *\n * @function\n * @param {Object} state The current state\n * @returns {Object | undefined}\n */\nexport const sGetAllDashboards = state =>\n    orObject(sGetDashboardsRoot(state).byId);\n\n/**\n * Selector which returns the current dashboard items\n *\n * @function\n * @param {Object} state The current state\n * @returns {Array}\n */\nexport const sGetDashboardItems = state => sGetDashboardsRoot(state).items;\n\n// selector level 2\n\nexport const sGetStarredDashboards = state =>\n    Object.values(sGetAllDashboards(state)).filter(\n        dashboard => dashboard.starred === true\n    );\n\nexport const sGetUnstarredDashboards = state =>\n    Object.values(sGetAllDashboards(state)).filter(\n        dashboard => dashboard.starred === false\n    );\n\n// selector level 3\n\nexport const sGetStarredDashboardIds = state => {\n    return sGetStarredDashboards(state).map(dashboard => dashboard.id);\n};\n\nexport const sGetUnstarredDashboardIds = state =>\n    sGetUnstarredDashboards(state).map(dashboard => dashboard.id);\n\nexport const sGetDashboardsSortedByStarred = state => [\n    ...arraySort(sGetStarredDashboards(state), 'ASC', 'displayName'),\n    ...arraySort(sGetUnstarredDashboards(state), 'ASC', 'displayName'),\n];\n\n// utils\n\n/**\n * Returns the array of dashboards, customized for ui\n * @function\n * @param {Array} data The original dashboard list\n * @returns {Array}\n */\nexport const getCustomDashboards = data => {\n    const uiItems = items =>\n        items.map(item => {\n            let type = isSpacerType(item) ? SPACER : item.type;\n\n            // TODO: temporary fix before 2.34 epic branch is merged\n            // if \"VISUALIZATION\", reset to \"REPORT_TABLE\" or \"CHART\"\n            if (type === VISUALIZATION) {\n                type = item.reportTable\n                    ? REPORT_TABLE\n                    : item.chart\n                    ? CHART\n                    : type;\n            }\n\n            const text = isTextType(item)\n                ? item.text === emptyTextItemContent\n                    ? ''\n                    : item.text\n                : null;\n\n            return {\n                ...item,\n                ...(text !== null ? { text } : {}),\n                type,\n            };\n        });\n\n    return arrayFrom(data).map(d => ({\n        id: d.id,\n        name: d.name,\n        displayName: d.displayName,\n        description: d.description,\n        displayDescription: d.displayDescription,\n        starred: d.favorite,\n        owner: d.user.name,\n        created: d.created\n            .split('T')\n            .join(' ')\n            .substr(0, 16),\n        lastUpdated: d.lastUpdated\n            .split('T')\n            .join(' ')\n            .substr(0, 16),\n        access: d.access,\n        numberOfItems: orArray(d.dashboardItems).length,\n        dashboardItems: uiItems(d.dashboardItems),\n    }));\n};\n","/** @module reducers/selected */\nimport { combineReducers } from 'redux';\n\nimport { validateReducer } from '../modules/util';\n\nexport const SET_SELECTED_ID = 'SET_SELECTED_ID';\nexport const SET_SELECTED_ISLOADING = 'SET_SELECTED_ISLOADING';\nexport const SET_SELECTED_SHOWDESCRIPTION = 'SET_SELECTED_SHOWDESCRIPTION';\n\nexport const DEFAULT_STATE_SELECTED_ID = null;\nexport const DEFAULT_STATE_SELECTED_ISLOADING = false;\nexport const DEFAULT_STATE_SELECTED_SHOWDESCRIPTION = false;\n\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\nconst id = (state = DEFAULT_STATE_SELECTED_ID, action) => {\n    switch (action.type) {\n        case SET_SELECTED_ID:\n            return validateReducer(action.value, DEFAULT_STATE_SELECTED_ID);\n        default:\n            return state;\n    }\n};\n\nconst isLoading = (state = DEFAULT_STATE_SELECTED_ISLOADING, action) => {\n    switch (action.type) {\n        case SET_SELECTED_ISLOADING:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_SELECTED_ISLOADING\n            );\n        default:\n            return state;\n    }\n};\n\nconst showDescription = (\n    state = DEFAULT_STATE_SELECTED_SHOWDESCRIPTION,\n    action\n) => {\n    switch (action.type) {\n        case SET_SELECTED_SHOWDESCRIPTION:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_SELECTED_SHOWDESCRIPTION\n            );\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    id,\n    isLoading,\n    showDescription,\n});\n\n// Selectors\n\nexport const sGetSelectedRoot = state => state.selected;\n\nexport const sGetSelectedId = state => sGetSelectedRoot(state).id;\n\nexport const sGetSelectedIsLoading = state => sGetSelectedRoot(state).isLoading;\n\nexport const sGetSelectedShowDescription = state =>\n    sGetSelectedRoot(state).showDescription;\n","import { orObject } from '../modules/util';\nimport objectClean from 'd2-utilizr/lib/objectClean';\n\n/** @module reducers/visualizations */\n\nexport const ADD_VISUALIZATION = 'ADD_VISUALIZATION';\n\nexport const DEFAULT_STATE_VISUALIZATIONS = {};\n\nconst isEmpty = p => p === undefined || p === null;\n\nexport default (state = DEFAULT_STATE_VISUALIZATIONS, action) => {\n    switch (action.type) {\n        case ADD_VISUALIZATION: {\n            return {\n                ...state,\n                [action.value.id]: objectClean(\n                    {\n                        ...orObject(state[action.value.id]),\n                        ...action.value,\n                    },\n                    isEmpty\n                ),\n            };\n        }\n\n        default:\n            return state;\n    }\n};\n\n// root selector\nexport const sGetVisualizationsRoot = state => state.visualizations;\n\n// selectors level 1\nexport const sGetVisualization = (state, id) => {\n    return sGetVisualizationsRoot(state)[id];\n};\n","import { ADD_VISUALIZATION } from '../reducers/visualizations';\n\nexport const acAddVisualization = value => ({\n    type: ADD_VISUALIZATION,\n    value,\n});\n","import { orObject } from '../modules/util';\nimport objectClean from 'd2-utilizr/lib/objectClean';\n\n/** @module reducers/currentVisualizationViews */\n\nexport const SET_CURRENT_VISUALIZATION_VIEW = 'SET_CURRENT_VISUALIZATION_VIEW';\n\nexport const DEFAULT_STATE = {};\n\nconst isEmpty = p => p === undefined || p === null;\n\nexport default (state = DEFAULT_STATE, action) => {\n    switch (action.type) {\n        case SET_CURRENT_VISUALIZATION_VIEW: {\n            return {\n                ...state,\n                [action.value.id]: objectClean(\n                    {\n                        ...orObject(action.value.visualization),\n                    },\n                    isEmpty\n                ),\n            };\n        }\n\n        default:\n            return state;\n    }\n};\n\n// root selector\nexport const sGetCurrentVisualizationViewsRoot = state =>\n    state.currentVisualizationViews;\n\n// selectors level 1\nexport const sGetCurrentVisualizationView = (state, id) =>\n    sGetCurrentVisualizationViewsRoot(state)[id];\n","import { SET_CURRENT_VISUALIZATION_VIEW } from '../reducers/currentVisualizationViews';\n\nexport const acSetCurrentVisualizationView = value => ({\n    type: SET_CURRENT_VISUALIZATION_VIEW,\n    value,\n});\n","import arrayClean from 'd2-utilizr/lib/arrayClean';\nimport {\n    getListItemFields,\n    getFavoritesFields,\n    getIdNameFields,\n} from './metadata';\n\n// Helper functions\n\nexport const onError = error => console.log('Error: ', error);\n\n// Dashboard item\nexport const getDashboardItemsFields = ({ withFavorite } = {}) =>\n    arrayClean([\n        'id',\n        'type',\n        'shape',\n        'x',\n        'y',\n        'width~rename(w)',\n        'height~rename(h)',\n        'messages',\n        'text',\n        'appKey',\n        `${getListItemFields().join(',')}`,\n        withFavorite\n            ? `${getFavoritesFields({\n                  withDimensions: withFavorite.withDimensions,\n              }).join(',')}`\n            : ``,\n    ]);\n\n// Dashboard\nexport const getDashboardFields = ({ withItems, withFavorite } = {}) =>\n    arrayClean([\n        `${getIdNameFields().join(',')}`,\n        'description',\n        'displayDescription',\n        'favorite',\n        `user[${getIdNameFields({ rename: true }).join(',')}]`,\n        'created',\n        'lastUpdated',\n        'access',\n        withItems\n            ? `dashboardItems[${getDashboardItemsFields({\n                  withFavorite,\n              }).join(',')}]`\n            : ``,\n    ]);\n","import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { onError, getDashboardFields } from './index';\n\n// Get \"all\" dashboards on startup\nexport const apiFetchDashboards = () =>\n    getInstance()\n        .then(d2 =>\n            d2.models.dashboard.list({\n                fields: [\n                    getDashboardFields().join(','),\n                    'dashboardItems[id]',\n                ].join(','),\n                paging: 'false',\n            })\n        )\n        .catch(onError);\n\n// Get more info about selected dashboard\nexport const apiFetchDashboard = id =>\n    getInstance()\n        .then(d2 =>\n            d2.models.dashboard.get(id, {\n                fields: arrayClean(\n                    getDashboardFields({\n                        withItems: true,\n                        withFavorite: { withDimensions: false },\n                    })\n                ).join(','),\n            })\n        )\n        .catch(onError);\n\n// Star dashboard\nexport const apiStarDashboard = (id, isStarred) => {\n    const url = `dashboards/${id}/favorite`;\n\n    getInstance().then(d2 => {\n        if (isStarred) {\n            d2.Api.getApi().post(url);\n        } else {\n            d2.Api.getApi().delete(url);\n        }\n    });\n};\n\nexport const apiDeleteDashboard = id => {\n    return getInstance()\n        .then(d2 => {\n            return d2.models.dashboards\n                .get(id)\n                .then(dashboard => dashboard.delete());\n        })\n        .catch(onError);\n};\n","import update from 'immutability-helper';\nimport { arrayToIdMap } from '../modules/util';\n\nexport const RECEIVED_MESSAGES = 'RECEIVED_MESSAGES';\n\nexport default (state = {}, action) => {\n    switch (action.type) {\n        case RECEIVED_MESSAGES: {\n            const conversations = arrayToIdMap(action.value);\n\n            const newState = update(state, { $merge: conversations });\n\n            return newState;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetMessagesRoot = state => state.messages;\n","import { getInstance } from 'd2';\n\nexport const getMessages = () => {\n    const fields =\n        'id,messageCount,lastUpdated,messageType,displayName,read,messages[id,read,sender[id,displayName],text,lastUpdated]';\n    const url = `/messageConversations?fields=${fields}&order=read:asc&pageSize=200`;\n    return getInstance()\n        .then(d2 => d2.Api.getApi().get(url))\n        .catch(error => console.log('Error:', error));\n};\n","export const RECEIVED_SNACKBAR_MESSAGE = 'RECEIVED_SNACKBAR_MESSAGE';\nexport const CLOSE_SNACKBAR = 'CLOSE_SNACKBAR';\n\nexport const DEFAULT_STATE_SNACKBAR = {\n    message: {},\n    duration: null,\n    open: false,\n};\n\nexport default (state = DEFAULT_STATE_SNACKBAR, action) => {\n    switch (action.type) {\n        case RECEIVED_SNACKBAR_MESSAGE: {\n            return { ...state, ...action.value };\n        }\n        case CLOSE_SNACKBAR: {\n            return DEFAULT_STATE_SNACKBAR;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetSnackbar = state => state.snackbar || DEFAULT_STATE_SNACKBAR;\n","import {\n    RECEIVED_SNACKBAR_MESSAGE,\n    CLOSE_SNACKBAR,\n} from '../reducers/snackbar';\n\nexport const acReceivedSnackbarMessage = value => ({\n    type: RECEIVED_SNACKBAR_MESSAGE,\n    value,\n});\n\nexport const acCloseSnackbar = () => ({\n    type: CLOSE_SNACKBAR,\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport PropTypes from 'prop-types';\n\nimport { sGetSnackbar } from '../../reducers/snackbar';\nimport { acCloseSnackbar } from '../../actions/snackbar';\n\nconst LOADING_DASHBOARD = 'LOADING_DASHBOARD';\nexport const loadingDashboardMsg = { name: '', type: LOADING_DASHBOARD };\n\nconst SnackbarMessageContent = ({ message }) => {\n    if (typeof message === 'object') {\n        //future message types:  switch(message.type)\n        return (\n            <span>\n                Loading <span style={{ fontWeight: 800 }}>{message.name}</span>{' '}\n                dashboard\n            </span>\n        );\n    }\n    return message;\n};\n\nexport const SnackbarMessage = props => {\n    return (\n        <Snackbar\n            style={{ zIndex: 10001 }}\n            open={props.snackbarOpen}\n            message={<SnackbarMessageContent message={props.snackbarMessage} />}\n            autoHideDuration={props.snackbarDuration}\n            onClose={props.onCloseSnackbar}\n        />\n    );\n};\n\nconst mapStateToProps = state => {\n    const { message, duration, open } = sGetSnackbar(state);\n    return {\n        snackbarOpen: open,\n        snackbarMessage: message,\n        snackbarDuration: duration,\n    };\n};\n\nSnackbarMessage.propTypes = {\n    snackbarDuration: PropTypes.string,\n    snackbarMessage: PropTypes.object,\n    snackbarOpen: PropTypes.bool,\n    onCloseSnackbar: PropTypes.func,\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        onCloseSnackbar: acCloseSnackbar,\n    }\n)(SnackbarMessage);\n","import {\n    SET_SELECTED_ID,\n    SET_SELECTED_ISLOADING,\n    SET_SELECTED_SHOWDESCRIPTION,\n} from '../reducers/selected';\nimport { acAddVisualization } from '../actions/visualizations';\nimport { acSetCurrentVisualizationView } from '../actions/currentVisualizationViews';\nimport { sGetSelectedIsLoading } from '../reducers/selected';\nimport { sGetUserUsername } from '../reducers/user';\nimport { getCustomDashboards, sGetDashboardById } from '../reducers/dashboards';\nimport { apiFetchDashboard } from '../api/dashboards';\nimport { acSetDashboardItems, acAppendDashboards } from './dashboards';\nimport { withShape } from '../components/ItemGrid/gridUtil';\nimport { tGetMessages } from '../components/Item/MessagesItem/actions';\nimport { acReceivedSnackbarMessage, acCloseSnackbar } from './snackbar';\nimport { storePreferredDashboardId } from '../api/localStorage';\nimport { loadingDashboardMsg } from '../components/SnackbarMessage/SnackbarMessage';\nimport { MESSAGES, isVisualizationType } from '../modules/itemTypes';\nimport { extractFavorite } from '../components/Item/VisualizationItem/plugin';\nimport { orObject } from '../modules/util';\n\n// actions\n\nexport const acSetSelectedId = value => ({\n    type: SET_SELECTED_ID,\n    value,\n});\n\nexport const acSetSelectedIsLoading = value => ({\n    type: SET_SELECTED_ISLOADING,\n    value,\n});\n\nexport const acSetSelectedShowDescription = value => ({\n    type: SET_SELECTED_SHOWDESCRIPTION,\n    value,\n});\n\nexport const tLoadDashboard = id => async dispatch => {\n    try {\n        const dash = await apiFetchDashboard(id);\n        dispatch(acAppendDashboards(dash));\n\n        return Promise.resolve(dash);\n    } catch (err) {\n        console.log('Error: ', err);\n        return err;\n    }\n};\n\n// thunks\nexport const tSetSelectedDashboardById = id => async (dispatch, getState) => {\n    dispatch(acSetSelectedIsLoading(true));\n\n    const snackbarTimeout = setTimeout(() => {\n        const dashboardName = orObject(sGetDashboardById(getState(), id))\n            .displayName;\n        if (sGetSelectedIsLoading(getState()) && dashboardName) {\n            loadingDashboardMsg.name = dashboardName;\n\n            dispatch(\n                acReceivedSnackbarMessage({\n                    message: loadingDashboardMsg,\n                    open: true,\n                })\n            );\n        }\n    }, 500);\n\n    const onSuccess = selected => {\n        const customDashboard = getCustomDashboards(selected)[0];\n\n        dispatch(\n            acSetDashboardItems(withShape(customDashboard.dashboardItems))\n        );\n\n        storePreferredDashboardId(sGetUserUsername(getState()), id);\n\n        // add visualizations to store\n        customDashboard.dashboardItems.forEach(item => {\n            if (isVisualizationType(item)) {\n                const visualization = extractFavorite(item);\n                dispatch(acAddVisualization(visualization));\n                dispatch(\n                    acSetCurrentVisualizationView(\n                        visualization.id,\n                        visualization\n                    )\n                );\n            }\n\n            if (item.type === MESSAGES) {\n                dispatch(tGetMessages(id));\n            }\n        });\n\n        dispatch(acSetSelectedId(id));\n\n        dispatch(acSetSelectedIsLoading(false));\n\n        clearTimeout(snackbarTimeout);\n\n        dispatch(acCloseSnackbar());\n\n        return selected;\n    };\n\n    const onError = error => {\n        console.log('Error: ', error);\n        return error;\n    };\n\n    try {\n        const selected = await dispatch(tLoadDashboard(id));\n\n        return onSuccess(selected);\n    } catch (err) {\n        return onError(err);\n    }\n};\n","export const getPreferredDashboardId = username =>\n    localStorage.getItem(`dhis2.dashboard.current.${username}`) || undefined;\n\nexport const storePreferredDashboardId = (username, dashboardId) => {\n    localStorage.setItem(`dhis2.dashboard.current.${username}`, dashboardId);\n};\n","import { RECEIVED_MESSAGES } from '../../../reducers/messages';\nimport { getMessages } from '../../../api/messages';\n\nconst onError = (action, error) => {\n    console.log(`Error in action ${action}: ${error}`);\n    return error;\n};\n\nexport const receivedMessages = value => ({\n    type: RECEIVED_MESSAGES,\n    value,\n});\n\nexport const tGetMessages = () => async dispatch => {\n    try {\n        const messages = await getMessages();\n        const { messageConversations } = messages;\n\n        return dispatch(receivedMessages(messageConversations));\n    } catch (err) {\n        return onError('Get Messages', err);\n    }\n};\n","/** @module reducers/editDashboard */\nimport update from 'immutability-helper';\nimport isEmpty from 'lodash/isEmpty';\nimport { orArray, orObject } from '../modules/util';\n\nexport const RECEIVED_EDIT_DASHBOARD = 'RECEIVED_EDIT_DASHBOARD';\nexport const RECEIVED_NOT_EDITING = 'RECEIVED_NOT_EDITING';\nexport const START_NEW_DASHBOARD = 'START_NEW_DASHBOARD';\nexport const RECEIVED_TITLE = 'RECEIVED_TITLE';\nexport const RECEIVED_DESCRIPTION = 'RECEIVED_DESCRIPTION';\nexport const ADD_DASHBOARD_ITEM = 'ADD_DASHBOARD_ITEM';\nexport const REMOVE_DASHBOARD_ITEM = 'REMOVE_DASHBOARD_ITEM';\nexport const UPDATE_DASHBOARD_ITEM = 'UPDATE_DASHBOARD_ITEM';\nexport const RECEIVED_DASHBOARD_LAYOUT = 'RECEIVED_DASHBOARD_LAYOUT';\n\nexport const DEFAULT_STATE_EDIT_DASHBOARD = {};\nexport const NEW_DASHBOARD_STATE = {\n    id: '',\n    name: '',\n    access: {},\n    description: '',\n    dashboardItems: [],\n};\n\nexport default (state = DEFAULT_STATE_EDIT_DASHBOARD, action) => {\n    switch (action.type) {\n        case RECEIVED_EDIT_DASHBOARD: {\n            const newState = {};\n            Object.keys(NEW_DASHBOARD_STATE).map(\n                k => (newState[k] = action.value[k])\n            );\n            return newState;\n        }\n        case RECEIVED_NOT_EDITING:\n            return DEFAULT_STATE_EDIT_DASHBOARD;\n        case START_NEW_DASHBOARD:\n            return NEW_DASHBOARD_STATE;\n        case RECEIVED_TITLE: {\n            return Object.assign({}, state, { name: action.value });\n        }\n        case RECEIVED_DESCRIPTION: {\n            return Object.assign({}, state, {\n                description: action.value,\n            });\n        }\n        case ADD_DASHBOARD_ITEM:\n            return update(state, {\n                dashboardItems: { $unshift: [action.value] },\n            });\n        case REMOVE_DASHBOARD_ITEM: {\n            const idToRemove = action.value;\n\n            const dashboardItemIndex = state.dashboardItems.findIndex(\n                item => item.id === idToRemove\n            );\n\n            if (dashboardItemIndex > -1) {\n                return update(state, {\n                    dashboardItems: {\n                        $splice: [[dashboardItemIndex, 1]],\n                    },\n                });\n            }\n\n            return state;\n        }\n        case RECEIVED_DASHBOARD_LAYOUT: {\n            const stateItems = orArray(state.dashboardItems);\n\n            const newStateItems = action.value.map(({ x, y, w, h, i }) => {\n                const stateItem = stateItems.find(si => si.id === i);\n\n                return Object.assign({}, stateItem, { w, h, x, y });\n            });\n\n            return update(state, {\n                dashboardItems: { $set: newStateItems },\n            });\n        }\n        case UPDATE_DASHBOARD_ITEM: {\n            const dashboardItem = action.value;\n\n            const dashboardItemIndex = state.dashboardItems.findIndex(\n                item => item.id === dashboardItem.id\n            );\n\n            if (dashboardItemIndex > -1) {\n                const newState = update(state, {\n                    dashboardItems: {\n                        $splice: [[dashboardItemIndex, 1, dashboardItem]],\n                    },\n                });\n\n                return newState;\n            }\n\n            return state;\n        }\n        default:\n            return state;\n    }\n};\n\n// root selector\n\nexport const sGetEditDashboardRoot = state => state.editDashboard;\n\n// selectors\n\nexport const sGetIsEditing = state => !isEmpty(state.editDashboard);\n\nexport const sGetIsNewDashboard = state => {\n    return (\n        !isEmpty(state.editDashboard) && sGetEditDashboardRoot(state).id === ''\n    );\n};\n\nexport const sGetEditDashboardItems = state =>\n    orObject(sGetEditDashboardRoot(state)).dashboardItems;\n","export const CLEAR_EDIT_ITEM_FILTERS = 'CLEAR_EDIT_ITEM_FILTERS';\nexport const REMOVE_EDIT_ITEM_FILTER = 'REMOVE_EDIT_ITEM_FILTER';\nexport const SET_EDIT_ITEM_FILTERS = 'SET_EDIT_ITEM_FILTERS';\n\nexport const DEFAULT_STATE_EDIT_ITEM_FILTERS = {};\n\nexport default (state = DEFAULT_STATE_EDIT_ITEM_FILTERS, action) => {\n    switch (action.type) {\n        case REMOVE_EDIT_ITEM_FILTER: {\n            const newState = { ...state };\n\n            delete newState[action.id];\n\n            return newState;\n        }\n        case SET_EDIT_ITEM_FILTERS: {\n            return action.filters;\n        }\n        case CLEAR_EDIT_ITEM_FILTERS: {\n            return DEFAULT_STATE_EDIT_ITEM_FILTERS;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetEditItemFiltersRoot = state => state.editItemFilters;\n\nexport const sGetEditFiltersKeys = state =>\n    Object.keys(sGetEditItemFiltersRoot(state));\n","export const CLEAR_ITEM_FILTERS = 'CLEAR_ITEM_FILTERS';\nexport const SET_ITEM_FILTERS = 'SET_ITEM_FILTERS';\nexport const ADD_ITEM_FILTER = 'ADD_ITEM_FILTER';\nexport const REMOVE_ITEM_FILTER = 'REMOVE_ITEM_FILTER';\n\nexport const DEFAULT_STATE_ITEM_FILTERS = {};\n\nexport default (state = DEFAULT_STATE_ITEM_FILTERS, action) => {\n    switch (action.type) {\n        case ADD_ITEM_FILTER: {\n            return {\n                ...state,\n                [action.filter.id]: action.filter.value,\n            };\n        }\n        case REMOVE_ITEM_FILTER: {\n            const newState = { ...state };\n\n            delete newState[action.id];\n\n            return newState;\n        }\n        case SET_ITEM_FILTERS: {\n            return action.filters;\n        }\n        case CLEAR_ITEM_FILTERS: {\n            return DEFAULT_STATE_ITEM_FILTERS;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetItemFiltersRoot = state => state.itemFilters;\n\nexport const sGetFiltersKeys = state => Object.keys(sGetItemFiltersRoot(state));\n","import {\n    ADD_ITEM_FILTER,\n    REMOVE_ITEM_FILTER,\n    SET_ITEM_FILTERS,\n    CLEAR_ITEM_FILTERS,\n} from '../reducers/itemFilters';\n\nexport const FILTER_ORG_UNIT = 'ou';\n\n// actions\n\nexport const acAddItemFilter = filter => ({\n    type: ADD_ITEM_FILTER,\n    filter,\n});\n\nexport const acRemoveItemFilter = id => ({\n    type: REMOVE_ITEM_FILTER,\n    id,\n});\n\nexport const acClearItemFilters = () => ({\n    type: CLEAR_ITEM_FILTERS,\n});\n\nexport const acSetItemFilters = filters => ({\n    type: SET_ITEM_FILTERS,\n    filters,\n});\n","import {\n    REMOVE_EDIT_ITEM_FILTER,\n    SET_EDIT_ITEM_FILTERS,\n    CLEAR_EDIT_ITEM_FILTERS,\n} from '../reducers/editItemFilters';\n\n// actions\n\nexport const acRemoveEditItemFilter = id => ({\n    type: REMOVE_EDIT_ITEM_FILTER,\n    id,\n});\n\nexport const acClearEditItemFilters = () => ({\n    type: CLEAR_EDIT_ITEM_FILTERS,\n});\n\nexport const acSetEditItemFilters = filters => ({\n    type: SET_EDIT_ITEM_FILTERS,\n    filters,\n});\n","import { getInstance } from 'd2';\n\nconst onError = error => console.log('Error: ', error);\n\nconst saveDashboard = (dashboard, data) => {\n    const { name, description, dashboardItems } = data;\n\n    dashboard.name = name;\n    dashboard.description = description;\n    dashboard.dashboardItems = dashboardItems.map(item =>\n        Object.assign({}, item, { width: item.w, height: item.h })\n    );\n\n    return dashboard.save().then(msg => msg.response.uid);\n};\n\nexport const updateDashboard = data => {\n    return getInstance()\n        .then(d2 => {\n            return d2.models.dashboards\n                .get(data.id)\n                .then(dashboard => saveDashboard(dashboard, data));\n        })\n        .catch(onError);\n};\n\nexport const postDashboard = data => {\n    return getInstance().then(d2 => {\n        const dashboard = d2.models.dashboards.create();\n\n        return saveDashboard(dashboard, data);\n    });\n};\n","import { generateUid } from 'd2/uid';\n\nimport {\n    RECEIVED_EDIT_DASHBOARD,\n    START_NEW_DASHBOARD,\n    RECEIVED_NOT_EDITING,\n    RECEIVED_TITLE,\n    RECEIVED_DESCRIPTION,\n    RECEIVED_DASHBOARD_LAYOUT,\n    ADD_DASHBOARD_ITEM,\n    UPDATE_DASHBOARD_ITEM,\n    REMOVE_DASHBOARD_ITEM,\n} from '../reducers/editDashboard';\nimport { sGetEditDashboardRoot } from '../reducers/editDashboard';\nimport { updateDashboard, postDashboard } from '../api/editDashboard';\nimport { tSetSelectedDashboardById } from '../actions/selected';\nimport { NEW_ITEM_SHAPE } from '../components/ItemGrid/gridUtil';\nimport {\n    itemTypeMap,\n    isSpacerType,\n    TEXT,\n    emptyTextItemContent,\n    isTextType,\n} from '../modules/itemTypes';\n\nconst onError = error => {\n    console.log('Error (Saving Dashboard): ', error);\n    return error;\n};\n\n// actions\n\nexport const acSetEditDashboard = (dashboard, items) => {\n    const val = {\n        ...dashboard,\n        dashboardItems: items,\n    };\n\n    return {\n        type: RECEIVED_EDIT_DASHBOARD,\n        value: val,\n    };\n};\n\nexport const acSetEditNewDashboard = () => ({\n    type: START_NEW_DASHBOARD,\n});\n\nexport const acClearEditDashboard = () => ({\n    type: RECEIVED_NOT_EDITING,\n});\n\nexport const acSetDashboardTitle = value => ({\n    type: RECEIVED_TITLE,\n    value,\n});\n\nexport const acSetDashboardDescription = value => ({\n    type: RECEIVED_DESCRIPTION,\n    value,\n});\n\nexport const acUpdateDashboardLayout = value => ({\n    type: RECEIVED_DASHBOARD_LAYOUT,\n    value,\n});\n\nexport const acAddDashboardItem = item => {\n    const type = item.type;\n    delete item.type;\n    const itemPropName = itemTypeMap[type].propName;\n\n    return {\n        type: ADD_DASHBOARD_ITEM,\n        value: {\n            id: generateUid(),\n            type,\n            [itemPropName]: item.content,\n            ...NEW_ITEM_SHAPE,\n        },\n    };\n};\n\nexport const acUpdateDashboardItem = item => ({\n    type: UPDATE_DASHBOARD_ITEM,\n    value: item,\n});\n\nexport const acRemoveDashboardItem = value => ({\n    type: REMOVE_DASHBOARD_ITEM,\n    value,\n});\n\n// thunks\n\nexport const tSaveDashboard = () => async (dispatch, getState) => {\n    const dashboard = sGetEditDashboardRoot(getState());\n\n    const dashboardItems = dashboard.dashboardItems.map(item => {\n        const text = isTextType(item)\n            ? item.text || emptyTextItemContent\n            : null;\n\n        const type = isSpacerType(item) ? TEXT : item.type;\n\n        return {\n            ...item,\n            ...(text ? { text } : {}),\n            type,\n        };\n    });\n\n    const dashboardToSave = {\n        ...dashboard,\n        dashboardItems,\n    };\n\n    try {\n        const dashboardId = dashboardToSave.id\n            ? await updateDashboard(dashboardToSave)\n            : await postDashboard(dashboardToSave);\n\n        dispatch(acClearEditDashboard());\n        await dispatch(tSetSelectedDashboardById(dashboardId));\n\n        return Promise.resolve(dashboardId);\n    } catch (error) {\n        onError(error);\n    }\n};\n","import {\n    SET_DASHBOARDS,\n    ADD_DASHBOARDS,\n    SET_DASHBOARD_STARRED,\n    SET_DASHBOARD_DISPLAY_NAME,\n    SET_DASHBOARD_ITEMS,\n} from '../reducers/dashboards';\nimport {\n    getCustomDashboards,\n    sGetDashboardById,\n    sGetDashboardsSortedByStarred,\n} from '../reducers/dashboards';\nimport { sGetUserUsername } from '../reducers/user';\nimport { tSetSelectedDashboardById, acSetSelectedId } from './selected';\nimport { sGetSelectedId } from '../reducers/selected';\nimport { sGetIsEditing } from '../reducers/editDashboard';\nimport { sGetEditItemFiltersRoot } from '../reducers/editItemFilters';\nimport { acSetItemFilters, acClearItemFilters } from './itemFilters';\nimport { acClearEditItemFilters } from './editItemFilters';\nimport { acClearEditDashboard } from './editDashboard';\nimport {\n    apiFetchDashboards,\n    apiStarDashboard,\n    apiDeleteDashboard,\n} from '../api/dashboards';\nimport { getPreferredDashboardId } from '../api/localStorage';\nimport { arrayToIdMap } from '../modules/util';\n\n// actions\n\nexport const acSetDashboards = dashboards => ({\n    type: SET_DASHBOARDS,\n    value: arrayToIdMap(getCustomDashboards(dashboards)),\n});\n\nexport const acAppendDashboards = dashboards => ({\n    type: ADD_DASHBOARDS,\n    value: arrayToIdMap(getCustomDashboards(dashboards)),\n});\n\nexport const acSetDashboardStarred = (dashboardId, isStarred) => ({\n    type: SET_DASHBOARD_STARRED,\n    dashboardId: dashboardId,\n    value: isStarred,\n});\n\nexport const acSetDashboardDisplayName = (dashboardId, value) => ({\n    type: SET_DASHBOARD_DISPLAY_NAME,\n    dashboardId,\n    value,\n});\n\nexport const acSetDashboardItems = value => ({\n    type: SET_DASHBOARD_ITEMS,\n    value,\n});\n\n// thunks\n\nexport const tFetchDashboards = () => async dispatch => {\n    const collection = await apiFetchDashboards();\n    dispatch(acSetDashboards(collection.toArray()));\n};\n\nexport const tSelectDashboard = id => async (dispatch, getState) => {\n    const onError = error => {\n        console.log('Error (apiFetchDashboards): ', error);\n        return error;\n    };\n\n    try {\n        const state = getState();\n\n        let dashboardToSelect = null;\n        if (id) {\n            dashboardToSelect = sGetDashboardById(state, id) || null;\n        } else {\n            const preferredId = getPreferredDashboardId(\n                sGetUserUsername(state)\n            );\n            const dash = sGetDashboardById(state, preferredId);\n            dashboardToSelect =\n                preferredId && dash\n                    ? dash\n                    : sGetDashboardsSortedByStarred(state)[0];\n        }\n\n        if (dashboardToSelect) {\n            dispatch(tSetSelectedDashboardById(dashboardToSelect.id));\n\n            if (dashboardToSelect.id === sGetSelectedId(state)) {\n                if (sGetIsEditing(state)) {\n                    // disable filters when switching to edit mode\n                    dispatch(acClearItemFilters());\n                } else {\n                    // enable filters when switching to view mode\n                    dispatch(acSetItemFilters(sGetEditItemFiltersRoot(state)));\n                }\n            } else {\n                // clear filters when switching dashboard\n                dispatch(acClearEditItemFilters());\n                dispatch(acClearItemFilters());\n            }\n        } else {\n            dispatch(acSetSelectedId());\n        }\n    } catch (err) {\n        return onError(err);\n    }\n};\n\nexport const tStarDashboard = (id, isStarred) => async dispatch => {\n    const onSuccess = id => {\n        dispatch(acSetDashboardStarred(id, isStarred));\n        return id;\n    };\n\n    const onError = error => {\n        console.log('Error (apiStarDashboard): ', error);\n        return error;\n    };\n    try {\n        await apiStarDashboard(id, isStarred);\n        return onSuccess(id);\n    } catch (err) {\n        return onError(err);\n    }\n};\n\nexport const tDeleteDashboard = id => async dispatch => {\n    try {\n        await apiDeleteDashboard(id);\n        dispatch(acClearEditDashboard());\n        dispatch(acSetSelectedId());\n        dispatch(acSetDashboardItems([]));\n\n        await dispatch(tFetchDashboards());\n\n        return Promise.resolve();\n    } catch (err) {\n        console.log('Error (deleteDashboard): ', err);\n        return err;\n    }\n};\n","/** @module reducers/controlBar */\nimport { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\n\nexport const SET_CONTROLBAR_USER_ROWS = 'SET_CONTROLBAR_USER_ROWS';\n\nexport const DEFAULT_STATE_CONTROLBAR_ROWS = 1;\n\nconst userRows = (state = DEFAULT_STATE_CONTROLBAR_ROWS, action) => {\n    switch (action.type) {\n        case SET_CONTROLBAR_USER_ROWS:\n            return validateReducer(action.value, DEFAULT_STATE_CONTROLBAR_ROWS);\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    userRows,\n});\n\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\nexport const sGetControlBarRoot = state => state.controlBar;\n\n// Selector dependency level 2\n\nexport const sGetControlBarUserRows = state =>\n    sGetControlBarRoot(state).userRows;\n","import { getInstance } from 'd2';\nimport { DEFAULT_STATE_CONTROLBAR_ROWS } from '../reducers/controlBar';\n\nconst NAMESPACE = 'dashboard';\nconst KEY = 'controlBarRows';\n\nconst hasNamespace = async d2 => await d2.currentUser.dataStore.has(NAMESPACE);\n\nconst getNamespace = async (d2, hasNamespace) =>\n    hasNamespace\n        ? await d2.currentUser.dataStore.get(NAMESPACE)\n        : await d2.currentUser.dataStore.create(NAMESPACE);\n\nexport const apiGetControlBarRows = async () => {\n    const d2 = await getInstance();\n    const namespace = await getNamespace(d2, await hasNamespace(d2));\n    const hasKey = namespace.keys && namespace.keys.find(key => key === KEY);\n\n    if (hasKey) {\n        return await namespace.get(KEY);\n    } else {\n        await apiPostControlBarRows(DEFAULT_STATE_CONTROLBAR_ROWS, namespace);\n        console.log(\n            '(These errors to /userDataStore/dashboard can be ignored)'\n        );\n        return DEFAULT_STATE_CONTROLBAR_ROWS;\n    }\n};\n\nexport const apiPostControlBarRows = async (rows, namespace) => {\n    const d2 = await getInstance();\n    const ns = namespace || (await getNamespace(d2, hasNamespace));\n\n    ns.set(KEY, rows);\n};\n","import { SET_CONTROLBAR_USER_ROWS } from '../reducers/controlBar';\nimport { apiGetControlBarRows } from '../api/controlBar';\n\n// actions\n\nexport const acSetControlBarUserRows = rows => ({\n    type: SET_CONTROLBAR_USER_ROWS,\n    value: rows,\n});\n\n// thunks\n\nexport const tSetControlBarRows = () => async dispatch => {\n    const onSuccess = rows => {\n        dispatch(acSetControlBarUserRows(rows));\n    };\n\n    const onError = error => {\n        console.log('Error (apiGetControlBarRows): ', error);\n        return error;\n    };\n\n    try {\n        const controlBarRows = await apiGetControlBarRows();\n        return onSuccess(controlBarRows);\n    } catch (err) {\n        return onError(err);\n    }\n};\n","import {\n    getDimensionById,\n    DIMENSION_ID_PERIOD,\n    DIMENSION_ID_ORGUNIT,\n} from '@dhis2/analytics';\n\nexport const SET_DIMENSIONS = 'SET_DIMENSIONS';\nexport const DEFAULT_DIMENSIONS = [\n    getDimensionById(DIMENSION_ID_PERIOD),\n    getDimensionById(DIMENSION_ID_ORGUNIT),\n];\n\nexport default (state = DEFAULT_DIMENSIONS, action) => {\n    switch (action.type) {\n        case SET_DIMENSIONS: {\n            return [...DEFAULT_DIMENSIONS, ...action.value];\n        }\n        default:\n            return state;\n    }\n};\n\nexport const sGetDimensions = state => state.dimensions;\n","export const SET_SETTINGS = 'SET_SETTINGS';\nexport const ADD_SETTINGS = 'ADD_SETTINGS';\n\nexport const DEFAULT_SETTINGS = {\n    keyDateFormat: 'yyyy-MM-dd',\n    keyAnalysisRelativePeriod: 'LAST_12_MONTHS',\n    keyAnalysisDigitGroupSeparator: 'SPACE',\n    displayNameProperty: 'displayName',\n    uiLocale: 'en',\n    rootOrganisationUnit: {},\n};\n\nexport default (state = DEFAULT_SETTINGS, action) => {\n    switch (action.type) {\n        case SET_SETTINGS: {\n            return Object.assign({}, action.value);\n        }\n        case ADD_SETTINGS: {\n            return {\n                ...state,\n                ...action.value,\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// Selectors\n\nexport const sGetSettings = state => state.settings;\n\nexport const sGetSettingsDisplayNameProperty = state =>\n    sGetSettings(state).displayNameProperty;\n\nexport const sGetRootOrgUnit = state =>\n    sGetSettings(state).rootOrganisationUnit;\n\nexport const sGetRelativePeriod = state =>\n    sGetSettings(state).keyAnalysisRelativePeriod;\n\nexport const sGetUiLocale = state => sGetSettings(state).uiLocale;\n","import { SET_DIMENSIONS } from '../reducers/dimensions';\nimport { apiFetchDimensions } from '@dhis2/analytics';\nimport { sGetSettingsDisplayNameProperty } from '../reducers/settings';\n\nexport const acSetDimensions = dimensions => ({\n    type: SET_DIMENSIONS,\n    value: dimensions,\n});\n\nexport const tSetDimensions = d2 => async (dispatch, getState) => {\n    const onSuccess = dimensions => {\n        dispatch(acSetDimensions(dimensions));\n    };\n\n    const onError = error => {\n        console.log('Error (apiFetchDimensions): ', error);\n        return error;\n    };\n\n    try {\n        const displayNameProp = sGetSettingsDisplayNameProperty(getState());\n        const dimensions = await apiFetchDimensions(d2, displayNameProp);\n\n        // filter out CATEGORY that are not of type ATTRIBUTE\n        const filteredDimensions = dimensions.filter(\n            dim =>\n                dim.dimensionType !== 'CATEGORY' ||\n                (dim.dimensionType === 'CATEGORY' &&\n                    dim.dataDimensionType === 'ATTRIBUTE')\n        );\n        return onSuccess(filteredDimensions);\n    } catch (err) {\n        return onError(err);\n    }\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { colors } from '@dhis2/ui-core';\nimport { withStyles } from '@material-ui/core/styles';\n\nexport const SHOWMORE_BAR_HEIGHT = 16;\n\nconst styles = {\n    showMore: {\n        color: colors.grey700,\n        cursor: 'pointer',\n        fontSize: 11,\n        paddingTop: 5,\n        '&:hover': {\n            textDecoration: 'underline',\n        },\n    },\n    disabled: {\n        paddingTop: 5,\n        color: colors.grey500,\n        fontSize: 11,\n        cursor: 'not-allowed',\n    },\n};\n\nexport const ShowMoreButton = ({ onClick, isMaxHeight, classes, disabled }) => {\n    return (\n        <div style={{ textAlign: 'center' }}>\n            {disabled ? (\n                <div className={classes.disabled}>{i18n.t('Show more')}</div>\n            ) : (\n                <div className={classes.showMore} onClick={onClick}>\n                    {isMaxHeight ? i18n.t('Show less') : i18n.t('Show more')}\n                </div>\n            )}\n        </div>\n    );\n};\n\nShowMoreButton.propTypes = {\n    classes: PropTypes.object,\n    disabled: PropTypes.bool,\n    isMaxHeight: PropTypes.bool,\n    onClick: PropTypes.func,\n};\n\nexport default withStyles(styles)(ShowMoreButton);\n","import { SHOWMORE_BAR_HEIGHT } from './ShowMoreButton';\n\nexport const CONTROL_BAR_ROW_HEIGHT = 40;\nexport const FIRST_ROW_PADDING_HEIGHT = 10;\nexport const MIN_ROW_COUNT = 1;\n\nexport const HEADERBAR_HEIGHT = 48;\n\nconst CONTROL_BAR_OUTER_HEIGHT_DIFF =\n    FIRST_ROW_PADDING_HEIGHT + SHOWMORE_BAR_HEIGHT - 2; // 2 pixel \"adjustment\"\n\nexport const getRowsHeight = rows => {\n    return rows * CONTROL_BAR_ROW_HEIGHT;\n};\n\nexport const getNumRowsFromHeight = height => {\n    return Math.floor(\n        (height - CONTROL_BAR_OUTER_HEIGHT_DIFF) / CONTROL_BAR_ROW_HEIGHT\n    );\n};\n\nexport const getTopOffset = rows => {\n    return HEADERBAR_HEIGHT + getControlBarHeight(rows, false);\n};\n\nexport const getControlBarHeight = rows => {\n    return getRowsHeight(rows) + CONTROL_BAR_OUTER_HEIGHT_DIFF;\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { colors } from '@dhis2/ui-core';\nimport { HEADERBAR_HEIGHT } from './controlBarDimensions';\n\nimport classes from './styles/ControlBar.module.css';\n\nconst DRAG_HANDLE_HEIGHT = 7;\n\nclass ControlBar extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            dragging: false,\n        };\n    }\n\n    onStartDrag = () => {\n        this.setState({ dragging: true });\n        window.addEventListener('mousemove', this.onDrag);\n        window.addEventListener('mouseup', this.onEndDrag);\n    };\n\n    onDrag = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const newHeight = event.clientY;\n\n        if (\n            this.props.onChangeHeight &&\n            newHeight !== this.props.height &&\n            newHeight > 0\n        ) {\n            requestAnimationFrame(() => {\n                this.props.onChangeHeight(newHeight);\n            });\n        }\n    };\n\n    onEndDrag = () => {\n        this.setState({ dragging: false });\n        window.removeEventListener('mousemove', this.onDrag);\n        window.removeEventListener('mouseup', this.onEndDrag);\n\n        if (this.props.onEndDrag) {\n            this.props.onEndDrag();\n        }\n    };\n\n    renderDragHandle() {\n        return typeof this.props.onChangeHeight === 'function' ? (\n            <div\n                className={classes.draghandle}\n                style={{ height: DRAG_HANDLE_HEIGHT }}\n                onMouseDown={this.onStartDrag}\n            />\n        ) : null;\n    }\n\n    render() {\n        const height = Math.max(this.props.height, 0) + DRAG_HANDLE_HEIGHT;\n\n        const rootStyle = Object.assign(\n            {\n                height,\n                top: HEADERBAR_HEIGHT,\n                backgroundColor: this.props.editMode\n                    ? colors.yellow050\n                    : colors.white,\n                paddingBottom: DRAG_HANDLE_HEIGHT,\n            },\n            // Disable animations while dragging\n            this.state.dragging ? { transition: 'none' } : {}\n        );\n\n        return (\n            <div style={rootStyle} className={classes.root}>\n                <div className={classes.content}>{this.props.children}</div>\n                {this.renderDragHandle()}\n            </div>\n        );\n    }\n}\n\nControlBar.propTypes = {\n    /**\n     * The height of the control bar in number of lines. Must be a positive integer.\n     */\n    children: PropTypes.node.isRequired,\n\n    /**\n     * If true, the background color of the control bar changes to indicate that edit mode is active.\n     */\n    editMode: PropTypes.bool.isRequired,\n\n    /**\n     * Callback function that is called when the control bar is resized.\n     * The callback receives one argument: The new height in pixels.\n     *\n     * If no callback is specified the control bar will not have a drag handle.\n     */\n    height: PropTypes.number.isRequired,\n\n    /**\n     * Callback function that is called when the control bar is dropped after being dragged.\n     * The callback receives one argument: The new height in pixels.\n     *\n     * Ignored if no \"onChangeHeight\" function is provided.\n     */\n    onChangeHeight: PropTypes.func,\n\n    /**\n     * The contents of the control bar.\n     */\n    onEndDrag: PropTypes.func,\n};\n\nControlBar.defaultProps = {\n    onChangeHeight: null,\n    onEndDrag: null,\n};\n\nexport default ControlBar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst StarIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>\n);\n\nStarIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default StarIcon;\n","import { getInstance } from 'd2';\n\nexport const apiPostDataStatistics = async (eventType, id) => {\n    const d2 = await getInstance();\n    const url = `dataStatistics?eventType=${eventType}&favorite=${id}`;\n\n    d2.Api.getApi().post(url);\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Chip, colors } from '@dhis2/ui-core';\nimport { Link } from 'react-router-dom';\nimport debounce from 'lodash/debounce';\n\nimport StarIcon from '../../icons/Star';\nimport { apiPostDataStatistics } from '../../api/dataStatistics';\n\nconst styles = {\n    chip: {\n        margin: '3px',\n    },\n    link: {\n        color: colors.grey600,\n        display: 'inline-block',\n        textDecoration: 'none',\n        verticalAlign: 'top',\n    },\n    icon: {\n        height: '20px',\n        marginTop: '2px',\n        width: '20px',\n    },\n    selected: {\n        fill: colors.white,\n    },\n    unselected: {\n        fill: colors.grey700,\n    },\n};\n\nexport const DashboardItemChip = ({\n    starred,\n    selected,\n    label,\n    dashboardId,\n    classes,\n}) => {\n    const chipProps = {\n        selected,\n        className: classes.chip,\n    };\n\n    if (starred) {\n        const selectedState = selected ? classes.selected : classes.unselected;\n        chipProps.icon = (\n            <StarIcon className={`${classes.icon} ${selectedState}`} />\n        );\n    }\n\n    return (\n        <Link\n            className={classes.link}\n            to={`/${dashboardId}`}\n            onClick={debounce(\n                () => apiPostDataStatistics('DASHBOARD_VIEW', dashboardId),\n                500\n            )}\n        >\n            <Chip {...chipProps}>{label}</Chip>\n        </Link>\n    );\n};\n\nDashboardItemChip.propTypes = {\n    dashboardId: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    selected: PropTypes.bool.isRequired,\n    starred: PropTypes.bool.isRequired,\n    classes: PropTypes.object,\n};\n\nexport default withStyles(styles)(DashboardItemChip);\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\n\nconst AddCircleIcon = () => (\n    <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"32\"\n        height=\"32\"\n        fill={colors.teal600}\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm4 11h-3v3c0 .55-.45 1-1 1s-1-.45-1-1v-3H8c-.55 0-1-.45-1-1s.45-1 1-1h3V8c0-.55.45-1 1-1s1 .45 1 1v3h3c.55 0 1 .45 1 1s-.45 1-1 1z\" />\n    </svg>\n);\n\nexport default AddCircleIcon;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nconst ClearIcon = ({ className }) => (\n    <svg\n        className={className}\n        fill={colors.grey800}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>\n);\n\nClearIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default ClearIcon;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ClearIcon from '../../icons/Clear';\n\nimport classes from './styles/ClearButton.module.css';\n\nexport const ClearButton = ({ onClear }) => (\n    <button className={classes.button} onClick={onClear}>\n        <span>\n            <ClearIcon className={classes.icon} color=\"action\" />\n        </span>\n    </button>\n);\n\nClearButton.propTypes = {\n    onClear: PropTypes.func.isRequired,\n};\n\nexport default ClearButton;\n","import { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\n\nexport const SET_DASHBOARDS_FILTER_NAME = 'SET_DASHBOARDS_FILTER_NAME';\nexport const SET_DASHBOARDS_FILTER_OWNER = 'SET_DASHBOARDS_FILTER_OWNER';\nexport const SET_DASHBOARDS_FILTER_ORDER = 'SET_DASHBOARDS_FILTER_ORDER';\n\nexport const ownerData = [\n    { id: 'ALL', value: 'All users' },\n    { id: 'ME', value: 'Created by me' },\n    { id: 'OTHERS', value: 'Created by others' },\n];\n\nexport const orderData = [\n    { id: 'NAME:ASC', value: 'Name (asc)' },\n    { id: 'NAME:ASC', value: 'Name (desc)' },\n    { id: 'ITEMS:ASC', value: 'Number of items (asc)' },\n    { id: 'ITEMS:ASC', value: 'Number of items (desc)' },\n    { id: 'CREATED:ASC', value: 'Created date (asc)' },\n    { id: 'CREATED:ASC', value: 'Created date (desc)' },\n];\n\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_NAME = '';\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_OWNER = ownerData[0].id;\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_ORDER = orderData[0].id;\n\nconst name = (state = DEFAULT_STATE_DASHBOARDS_FILTER_NAME, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_NAME:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_NAME\n            );\n        default:\n            return state;\n    }\n};\n\nconst owner = (state = DEFAULT_STATE_DASHBOARDS_FILTER_OWNER, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_OWNER:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_NAME\n            );\n        default:\n            return state;\n    }\n};\n\nconst order = (state = DEFAULT_STATE_DASHBOARDS_FILTER_ORDER, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_ORDER:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_ORDER\n            );\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    name,\n    owner,\n    order,\n});\n\n// selectors\n\nexport const sGetDashboardsFilterRoot = state => state.dashboardsFilter;\n\n// selector dependency level 2\n\nexport const sGetFilterName = state => sGetDashboardsFilterRoot(state).name;\nexport const sGetFilterOwner = state => sGetDashboardsFilterRoot(state).owner;\nexport const sGetFilterOrder = state => sGetDashboardsFilterRoot(state).order;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport i18n from '@dhis2/d2-i18n';\nimport InputField from '@material-ui/core/Input';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { colors } from '@dhis2/ui-core';\n\nimport ClearButton from './ClearButton';\nimport { DEFAULT_STATE_DASHBOARDS_FILTER_NAME } from '../../reducers/dashboardsFilter';\n\nexport const KEYCODE_ENTER = 13;\nexport const KEYCODE_ESCAPE = 27;\n\nconst styles = {\n    filterField: {\n        fontSize: '14px',\n        width: '200px',\n        height: '30px',\n        top: '-4px',\n    },\n    searchIcon: {\n        color: colors.grey700,\n        width: '20px',\n        height: '20px',\n    },\n};\n\nexport class Filter extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            value: DEFAULT_STATE_DASHBOARDS_FILTER_NAME,\n        };\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setState({\n            value: nextProps.name,\n        });\n    }\n\n    setFilterValue = event => {\n        event.preventDefault();\n\n        this.props.onChangeName(event.target.value);\n    };\n\n    handleKeyUp = event => {\n        switch (event.keyCode) {\n            case KEYCODE_ENTER:\n                this.props.onKeypressEnter();\n                break;\n            case KEYCODE_ESCAPE:\n                this.props.onChangeName();\n                break;\n            default:\n                break;\n        }\n    };\n\n    render() {\n        const { classes, name, onChangeName } = this.props;\n\n        const startAdornment = (\n            <InputAdornment position=\"start\">\n                <SearchIcon className={classes.searchIcon} />\n            </InputAdornment>\n        );\n\n        const endAdornment =\n            name !== '' && name !== null ? (\n                <InputAdornment position=\"end\">\n                    <ClearButton onClear={() => onChangeName()} />\n                </InputAdornment>\n            ) : null;\n\n        return (\n            <InputField\n                className={classes.filterField}\n                placeholder={i18n.t('Search for a dashboard')}\n                startAdornment={startAdornment}\n                endAdornment={endAdornment}\n                value={this.state.value}\n                onChange={this.setFilterValue}\n                onKeyUp={this.handleKeyUp}\n            />\n        );\n    }\n}\n\nFilter.propTypes = {\n    classes: PropTypes.object,\n    name: PropTypes.string,\n    onChangeName: PropTypes.func,\n    onKeypressEnter: PropTypes.func,\n};\n\nFilter.defaultProps = {\n    name: '',\n    onChangeName: Function.prototype,\n};\n\nexport default withStyles(styles)(Filter);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport ControlBar from './ControlBar';\nimport arraySort from 'd2-utilizr/lib/arraySort';\nimport PropTypes from 'prop-types';\n\nimport Chip from './DashboardItemChip';\nimport AddCircleIcon from '../../icons/AddCircle';\nimport Filter from './Filter';\nimport ShowMoreButton from './ShowMoreButton';\nimport {\n    FIRST_ROW_PADDING_HEIGHT,\n    MIN_ROW_COUNT,\n    getRowsHeight,\n    getControlBarHeight,\n    getNumRowsFromHeight,\n} from './controlBarDimensions';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { sGetAllDashboards } from '../../reducers/dashboards';\nimport { sGetFilterName } from '../../reducers/dashboardsFilter';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { acSetControlBarUserRows } from '../../actions/controlBar';\nimport { acSetFilterName } from '../../actions/dashboardsFilter';\nimport { orObject, orArray } from '../../modules/util';\nimport { apiPostControlBarRows } from '../../api/controlBar';\n\nimport classes from './styles/DashboardsBar.module.css';\n\nexport const MAX_ROW_COUNT = 10;\n\nexport class DashboardsBar extends Component {\n    state = {\n        rows: MIN_ROW_COUNT,\n    };\n\n    setInitialDashboardState = rows => {\n        this.setState({ rows, isMaxHeight: rows === MAX_ROW_COUNT });\n    };\n\n    componentDidMount() {\n        this.setInitialDashboardState(this.props.userRows);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setInitialDashboardState(nextProps.userRows);\n    }\n\n    onChangeHeight = newHeight => {\n        const adjustedHeight = newHeight - 52; // don't rush the transition to a bigger row count\n        const newRows = Math.max(\n            MIN_ROW_COUNT,\n            getNumRowsFromHeight(adjustedHeight)\n        );\n\n        if (newRows !== this.state.rows) {\n            const newRowCount = Math.min(newRows, MAX_ROW_COUNT);\n\n            this.props.onChangeHeight(newRowCount);\n        }\n    };\n\n    onEndDrag = () => {\n        return apiPostControlBarRows(this.state.rows);\n    };\n\n    onToggleMaxHeight = () => {\n        const rows =\n            this.state.rows === MAX_ROW_COUNT\n                ? this.props.userRows\n                : MAX_ROW_COUNT;\n\n        this.setState({ rows, isMaxHeight: !this.state.isMaxHeight });\n    };\n\n    onSelectDashboard = () => {\n        this.props.history.push(`/${this.props.dashboards[0].id}`);\n    };\n\n    render() {\n        const { dashboards, name, selectedId, onChangeFilterName } = this.props;\n\n        const rowCount = this.state.isMaxHeight\n            ? MAX_ROW_COUNT\n            : this.state.rows;\n        const controlBarHeight = getControlBarHeight(rowCount);\n        const contentWrapperStyle = {\n            padding: `${FIRST_ROW_PADDING_HEIGHT}px 6px 0 6px`,\n            overflowY: this.state.isMaxHeight ? 'auto' : 'hidden',\n            height: getRowsHeight(rowCount) + FIRST_ROW_PADDING_HEIGHT,\n        };\n\n        return (\n            <ControlBar\n                height={controlBarHeight}\n                onChangeHeight={this.onChangeHeight}\n                onEndDrag={this.onEndDrag}\n                editMode={false}\n            >\n                <div style={contentWrapperStyle}>\n                    <div className={classes.leftControls}>\n                        <Link\n                            style={{\n                                display: 'inline-block',\n                                textDecoration: 'none',\n                                marginRight: 10,\n                                position: 'relative',\n                                top: '2px',\n                            }}\n                            to={'/new'}\n                        >\n                            <AddCircleIcon />\n                        </Link>\n                        <Filter\n                            name={name}\n                            onChangeName={onChangeFilterName}\n                            onKeypressEnter={this.onSelectDashboard}\n                        />\n                    </div>\n                    {orArray(dashboards).map(dashboard => (\n                        <Chip\n                            key={dashboard.id}\n                            label={dashboard.displayName}\n                            starred={dashboard.starred}\n                            dashboardId={dashboard.id}\n                            selected={dashboard.id === selectedId}\n                        />\n                    ))}\n                </div>\n                <ShowMoreButton\n                    onClick={this.onToggleMaxHeight}\n                    isMaxHeight={this.state.isMaxHeight}\n                    disabled={this.props.userRows === MAX_ROW_COUNT}\n                />\n            </ControlBar>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    dashboards: sGetAllDashboards(state),\n    name: sGetFilterName(state),\n    userRows: sGetControlBarUserRows(state),\n    selectedId: sGetSelectedId(state),\n});\n\nconst mapDispatchToProps = {\n    onChangeHeight: acSetControlBarUserRows,\n    onChangeFilterName: acSetFilterName,\n};\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const dashboards = Object.values(orObject(stateProps.dashboards));\n    const displayDashboards = arraySort(\n        dashboards.filter(d =>\n            d.displayName.toLowerCase().includes(stateProps.name.toLowerCase())\n        ),\n        'ASC',\n        'displayName'\n    );\n\n    return {\n        ...stateProps,\n        ...ownProps,\n        ...dispatchProps,\n        dashboards: [\n            ...displayDashboards.filter(d => d.starred),\n            ...displayDashboards.filter(d => !d.starred),\n        ],\n    };\n};\n\nDashboardsBar.propTypes = {\n    dashboards: PropTypes.array,\n    history: PropTypes.object,\n    name: PropTypes.string,\n    selectedId: PropTypes.string,\n    userRows: PropTypes.number,\n    onChangeFilterName: PropTypes.func,\n    onChangeHeight: PropTypes.func,\n};\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps,\n        mergeProps\n    )(DashboardsBar)\n);\n","import {\n    SET_DASHBOARDS_FILTER_NAME,\n    SET_DASHBOARDS_FILTER_OWNER,\n    SET_DASHBOARDS_FILTER_ORDER,\n} from '../reducers/dashboardsFilter';\n\n// actions\n\nexport const acSetFilterName = value => ({\n    type: SET_DASHBOARDS_FILTER_NAME,\n    value,\n});\n\nexport const acSetFilterOwner = value => ({\n    type: SET_DASHBOARDS_FILTER_OWNER,\n    value,\n});\n\nexport const acSetFilterOrder = value => ({\n    type: SET_DASHBOARDS_FILTER_ORDER,\n    value,\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport {\n    getTopOffset,\n    MIN_ROW_COUNT,\n} from '../ControlBar/controlBarDimensions';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\n\nconst DashboardVerticalOffset = props => {\n    const rows = props.editMode ? MIN_ROW_COUNT : props.userRows;\n    const marginTop = getTopOffset(rows);\n\n    return <div className=\"page-container-top-margin\" style={{ marginTop }} />;\n};\n\nconst mapStateToProps = state => ({\n    userRows: sGetControlBarUserRows(state),\n});\n\nDashboardVerticalOffset.propTypes = {\n    editMode: PropTypes.bool,\n    userRows: PropTypes.number,\n};\n\nexport default connect(mapStateToProps)(DashboardVerticalOffset);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { MenuItem, colors } from '@dhis2/ui-core';\n\nconst HeaderMenuItem = ({ title }) => (\n    <MenuItem\n        dense\n        key={title}\n        disabled\n        label={\n            <p style={{ color: colors.grey800, fontWeight: '600' }}>{title}</p>\n        }\n    />\n);\n\nHeaderMenuItem.propTypes = {\n    title: PropTypes.string.isRequired,\n};\n\nexport default HeaderMenuItem;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nconst LaunchIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"12\"\n        height=\"12\"\n        fill={colors.grey600}\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z\" />\n    </svg>\n);\n\nLaunchIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default LaunchIcon;\n","import React from 'react';\nimport { MenuItem, colors } from '@dhis2/ui-core';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport { visTypeIcons } from '@dhis2/analytics';\n\nimport { getItemIcon, VISUALIZATION } from '../../modules/itemTypes';\nimport LaunchIcon from '../../icons/Launch';\n\nimport classes from './styles/ContentMenuItem.module.css';\n\nconst LaunchLink = ({ url }) => (\n    <a\n        onClick={e => e.stopPropagation()}\n        className={classes.launchLink}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        href={url}\n    >\n        <LaunchIcon />\n    </a>\n);\n\nLaunchLink.propTypes = {\n    url: PropTypes.string,\n};\n\nconst InsertButton = () => (\n    <button className={classes.buttonInsert}>{i18n.t('Insert')}</button>\n);\n\nconst ContentMenuItem = ({ type, name, onInsert, url, visType }) => {\n    const ItemIcon = getItemIcon(type);\n\n    const renderedItemIcon =\n        type === VISUALIZATION ? (\n            visTypeIcons[visType]\n        ) : (\n            <ItemIcon style={{ fill: colors.grey600 }} />\n        );\n\n    return (\n        <MenuItem\n            dense\n            onClick={onInsert}\n            label={\n                <div className={classes.menuItem}>\n                    <div className={classes.label}>\n                        <span style={{ margin: '6px' }}>\n                            {renderedItemIcon}\n                        </span>\n                        <span>{name}</span>\n                        {url ? <LaunchLink url={url} /> : null}\n                    </div>\n                    <InsertButton />\n                </div>\n            }\n        />\n    );\n};\n\nContentMenuItem.propTypes = {\n    name: PropTypes.string,\n    type: PropTypes.string,\n    url: PropTypes.string,\n    visType: PropTypes.string,\n    onInsert: PropTypes.func,\n};\n\nexport default ContentMenuItem;\n","import i18n from '@dhis2/d2-i18n';\nimport {\n    spacerContent,\n    VISUALIZATION,\n    MAP,\n    EVENT_CHART,\n    EVENT_REPORT,\n    USERS,\n    REPORTS,\n    RESOURCES,\n    APP,\n    MESSAGES,\n    TEXT,\n    SPACER,\n} from '../../modules/itemTypes';\n\nexport const singleItems = [\n    {\n        id: 'additional',\n        header: i18n.t('Additional items'),\n        items: [\n            {\n                type: TEXT,\n                name: i18n.t('Text box'),\n                content: '',\n            },\n            {\n                type: MESSAGES,\n                name: i18n.t('Messages'),\n                content: 'true',\n            },\n            {\n                type: SPACER,\n                name: i18n.t('Spacer'),\n                content: spacerContent,\n            },\n        ],\n    },\n];\n\n// categorizedItems are grouped in the item selector menu\nexport const categorizedItems = [\n    VISUALIZATION,\n    MAP,\n    EVENT_REPORT,\n    EVENT_CHART,\n    USERS,\n    REPORTS,\n    RESOURCES,\n    APP,\n];\n\n// listItemTypes are included in a single dashboard item\nexport const listItemTypes = [REPORTS, RESOURCES, USERS];\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { MenuItem, Divider } from '@dhis2/ui-core';\n\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\n\nimport { tAddListItemContent } from './actions';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\nimport { getItemUrl, APP, VISUALIZATION } from '../../modules/itemTypes';\nimport { categorizedItems, listItemTypes } from './selectableItems';\n\nimport classes from './styles/CategorizedMenuGroup.module.css';\n\nclass CategorizedMenuGroup extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seeMore: false,\n        };\n    }\n\n    addItem = item => () => {\n        const { type, acAddDashboardItem, tAddListItemContent } = this.props;\n\n        if (type === APP) {\n            acAddDashboardItem({ type, content: item.key });\n        } else {\n            const newItem = {\n                id: item.id,\n                name: item.displayName || item.name,\n            };\n\n            if (listItemTypes.includes(type)) {\n                tAddListItemContent(type, newItem);\n            } else {\n                acAddDashboardItem({ type, content: newItem });\n            }\n        }\n    };\n\n    toggleSeeMore = () => {\n        this.setState({ seeMore: !this.state.seeMore });\n\n        this.props.onChangeItemsLimit(this.props.type);\n    };\n\n    render() {\n        const { title, type, items, hasMore } = this.props;\n        return (\n            <Fragment>\n                <HeaderMenuItem title={title} />\n                {items.map(item => {\n                    const itemUrl = getItemUrl(type, item, this.context.d2);\n                    return (\n                        <ContentMenuItem\n                            key={item.id || item.key}\n                            type={type}\n                            visType={type === VISUALIZATION ? item.type : type}\n                            name={item.displayName || item.name}\n                            onInsert={this.addItem(item)}\n                            url={itemUrl}\n                        />\n                    );\n                })}\n                {hasMore ? (\n                    <MenuItem\n                        dense\n                        key={`showmore${title}`}\n                        onClick={this.toggleSeeMore}\n                        label={\n                            <button className={classes.showMoreButton}>\n                                {this.state.seeMore\n                                    ? i18n.t('Show fewer')\n                                    : i18n.t('Show more')}\n                            </button>\n                        }\n                    />\n                ) : null}\n                <Divider margin=\"8px 0px\" />\n            </Fragment>\n        );\n    }\n}\n\nCategorizedMenuGroup.propTypes = {\n    items: PropTypes.array.isRequired,\n    title: PropTypes.string.isRequired,\n    type: PropTypes.oneOf(categorizedItems).isRequired,\n    onChangeItemsLimit: PropTypes.func.isRequired,\n    acAddDashboardItem: PropTypes.func,\n    hasMore: PropTypes.bool,\n    tAddListItemContent: PropTypes.func,\n};\n\nCategorizedMenuGroup.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nexport default connect(\n    null,\n    {\n        acAddDashboardItem,\n        tAddListItemContent,\n    }\n)(CategorizedMenuGroup);\n","import { sGetEditDashboardRoot } from '../../reducers/editDashboard';\nimport { itemTypeMap } from '../../modules/itemTypes';\nimport {\n    acAddDashboardItem,\n    acUpdateDashboardItem,\n} from '../../actions/editDashboard';\n\nexport const tAddListItemContent = (type, content) => (dispatch, getState) => {\n    const state = getState();\n    const listItemType = itemTypeMap[type].propName;\n    const dashboardItems = sGetEditDashboardRoot(state).dashboardItems;\n    const dashboardItemIndex = dashboardItems.findIndex(\n        item => item.type === type\n    );\n    let dashboardItem;\n\n    // Reports/Resources/Users dashboard item type already present in dashboard\n    if (dashboardItemIndex > -1) {\n        dashboardItem = dashboardItems[dashboardItemIndex];\n        dashboardItem[listItemType].push(content);\n\n        dispatch(acUpdateDashboardItem(dashboardItem));\n    } else {\n        dashboardItem = {\n            type: type,\n            content: [content],\n        };\n\n        dispatch(acAddDashboardItem(dashboardItem));\n    }\n};\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\n\nexport const SinglesMenuGroup = ({ acAddDashboardItem, category }) => {\n    const addToDashboard = ({ type, content }) => () => {\n        acAddDashboardItem({ type, content });\n    };\n\n    return (\n        <Fragment>\n            <HeaderMenuItem title={category.header} />\n            {category.items.map(item => (\n                <ContentMenuItem\n                    key={item.type}\n                    type={item.type}\n                    name={item.name}\n                    onInsert={addToDashboard(item)}\n                />\n            ))}\n        </Fragment>\n    );\n};\n\nSinglesMenuGroup.propTypes = {\n    acAddDashboardItem: PropTypes.func,\n    category: PropTypes.object,\n};\n\nexport default connect(\n    null,\n    { acAddDashboardItem }\n)(SinglesMenuGroup);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport Popover from '@material-ui/core/Popover';\nimport { InputField, Menu } from '@dhis2/ui-core';\n\nimport CategorizedMenuGroup from './CategorizedMenuGroup';\nimport SinglesMenuGroup from './SinglesMenuGroup';\nimport { singleItems, categorizedItems } from './selectableItems';\nimport { itemTypeMap, getDefaultItemCount } from '../../modules/itemTypes';\n\nimport './styles/ItemSelector.css';\n\nconst ItemSearchField = props => (\n    <InputField\n        name=\"Dashboard item search\"\n        label={i18n.t('Search for items to add to this dashboard')}\n        type=\"text\"\n        onChange={props.onChange}\n        onFocus={props.onFocus}\n        value={props.value}\n    />\n);\n\nclass ItemSelector extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n            open: false,\n            maxOptions: new Set(),\n            items: undefined,\n            filter: '',\n        };\n    }\n\n    closeList = () => {\n        this.setState({ open: false, filter: '' });\n    };\n\n    openList = (_, event) => {\n        this.fetchItems();\n\n        this.setState({\n            anchorEl: event.currentTarget,\n            open: true,\n        });\n    };\n\n    setFilter = (_, event) => {\n        this.setState({ filter: event.target.value }, this.fetchItems);\n    };\n\n    getCategorizedMenuGroups = () =>\n        categorizedItems\n            .filter(type => {\n                const itemType = itemTypeMap[type];\n                return (\n                    this.state.items && this.state.items[itemType.endPointName]\n                );\n            })\n            .map(type => {\n                const itemType = itemTypeMap[type];\n                const itemCount = getDefaultItemCount(type);\n                const allItems = this.state.items[itemType.endPointName];\n                const hasMore = allItems.length > itemCount;\n                const items = this.state.maxOptions.has(itemType.id)\n                    ? allItems\n                    : allItems.slice(0, itemCount);\n\n                return (\n                    <CategorizedMenuGroup\n                        key={type}\n                        type={type}\n                        title={itemType.pluralTitle}\n                        items={items}\n                        onChangeItemsLimit={this.fetchItems}\n                        hasMore={hasMore}\n                    />\n                );\n            });\n\n    getSinglesMenuGroups = () =>\n        singleItems.map(category => (\n            <SinglesMenuGroup key={category.id} category={category} />\n        ));\n\n    getMenuGroups = () =>\n        this.getCategorizedMenuGroups().concat(this.getSinglesMenuGroups());\n\n    fetchItems = async type => {\n        if (type) {\n            const maxOptions = this.state.maxOptions;\n\n            if (maxOptions.has(type)) {\n                maxOptions.delete(type);\n            } else {\n                maxOptions.add(type);\n            }\n\n            this.setState({ maxOptions });\n        } else {\n            this.setState({\n                maxOptions: new Set(),\n            });\n        }\n\n        let queryString = '?count=11';\n        if ([...this.state.maxOptions.values()].length) {\n            queryString +=\n                '&max=' + [...this.state.maxOptions.values()].join('&max=');\n        }\n\n        const filter = this.state.filter ? `/${this.state.filter}` : '';\n\n        this.context.d2.Api.getApi()\n            .get(`dashboards/q${filter}${queryString}`)\n            .then(response => this.setState({ items: response }))\n            .catch(console.error);\n    };\n\n    render() {\n        return (\n            <Fragment>\n                <ItemSearchField\n                    value={this.state.filter}\n                    onChange={this.setFilter}\n                    onFocus={this.openList}\n                />\n                <Popover\n                    className=\"dashboard-item-selector\"\n                    open={this.state.open}\n                    onClose={this.closeList}\n                    anchorEl={this.state.anchorEl}\n                    anchorOrigin={{ horizontal: 'left', vertical: 'bottom' }}\n                    transformOrigin={{ horizontal: 'left', vertical: 'top' }}\n                    style={{ height: '70vh' }}\n                    PaperProps={{ style: { width: '700px' } }}\n                    disableAutoFocus={true}\n                    disableRestoreFocus={true}\n                >\n                    <Menu>{this.getMenuGroups()}</Menu>\n                </Popover>\n            </Fragment>\n        );\n    }\n}\n\nItemSearchField.propTypes = {\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n    onFocus: PropTypes.func,\n};\n\nItemSelector.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nexport default ItemSelector;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport i18n from '@dhis2/d2-i18n';\nimport { InputField, TextAreaField } from '@dhis2/ui-core';\n\nimport ItemSelector from '../ItemSelector/ItemSelector';\nimport {\n    acSetDashboardTitle,\n    acSetDashboardDescription,\n} from '../../actions/editDashboard';\nimport { orObject } from '../../modules/util';\nimport { sGetEditDashboardRoot } from '../../reducers/editDashboard';\n\nconst styles = {\n    section: { display: 'flex', justifyContent: 'space-between' },\n    titleDescription: {\n        flex: '3',\n        marginRight: '50px',\n    },\n    title: {\n        display: 'block',\n        clear: 'both',\n    },\n    description: {\n        display: 'block',\n        clear: 'both',\n        marginTop: '15px',\n    },\n    underline: {\n        '&::before': {\n            borderBottom: `none`,\n        },\n        '&:hover::before': {\n            borderBottom: `none!important`,\n        },\n    },\n    input: {\n        backgroundColor: 'rgba(0, 0, 10, 0.05)',\n        borderRadius: '4px',\n        width: '100%',\n        '&:hover': {\n            backgroundColor: 'rgba(0, 0, 10, 0.08)',\n        },\n    },\n    itemSelector: {\n        flex: '2',\n        position: 'relative',\n    },\n};\n\nexport const EditTitleBar = ({\n    name,\n    description,\n    onChangeTitle,\n    onChangeDescription,\n    classes,\n}) => {\n    const updateTitle = (_, e) => {\n        onChangeTitle(e.target.value);\n    };\n\n    const updateDescription = (_, e) => {\n        onChangeDescription(e.target.value);\n    };\n\n    return (\n        <section className={classes.section}>\n            <div className={classes.titleDescription}>\n                <InputField\n                    className={classes.title}\n                    name=\"Dashboard title input\"\n                    label={i18n.t('Dashboard title')}\n                    type=\"text\"\n                    onChange={updateTitle}\n                    value={name}\n                />\n                <TextAreaField\n                    className={classes.description}\n                    name=\"Dashboard description input\"\n                    label={i18n.t('Dashboard description')}\n                    onChange={updateDescription}\n                    value={description}\n                />\n            </div>\n            <div className={classes.itemSelector}>\n                <ItemSelector />\n            </div>\n        </section>\n    );\n};\n\nconst mapStateToProps = state => {\n    const selectedDashboard = orObject(sGetEditDashboardRoot(state));\n\n    return {\n        name: selectedDashboard.name,\n        description: selectedDashboard.description,\n    };\n};\n\nconst mapDispatchToProps = {\n    onChangeTitle: acSetDashboardTitle,\n    onChangeDescription: acSetDashboardDescription,\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(EditTitleBar));\n\nEditTitleBar.propTypes = {\n    onChangeDescription: PropTypes.func.isRequired,\n    onChangeTitle: PropTypes.func.isRequired,\n    classes: PropTypes.object,\n    description: PropTypes.string,\n    name: PropTypes.string,\n};\n\nEditTitleBar.defaultProps = {\n    name: '',\n    description: '',\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Button } from '@dhis2/ui-core';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport i18n from '@dhis2/d2-i18n';\n\nimport {\n    PeriodDimension,\n    DynamicDimension,\n    OrgUnitDimension,\n    DIMENSION_ID_PERIOD,\n    DIMENSION_ID_ORGUNIT,\n} from '@dhis2/analytics';\n\nconst peId = DIMENSION_ID_PERIOD;\nconst ouId = DIMENSION_ID_ORGUNIT;\n\nclass FilterDialog extends Component {\n    onConfirm = id => () => this.props.onConfirm(id);\n\n    dialogContent() {\n        const { displayNameProperty, dimension, selectedItems } = this.props;\n        const dialogId = dimension.id;\n\n        const commonProps = {\n            d2: this.context.d2,\n            onSelect: this.props.onSelect,\n            onDeselect: this.props.onDeselect,\n            onReorder: this.props.onReorder,\n        };\n\n        switch (dialogId) {\n            case peId: {\n                return (\n                    <PeriodDimension\n                        selectedPeriods={selectedItems}\n                        {...commonProps}\n                    />\n                );\n            }\n            case ouId:\n                return (\n                    <OrgUnitDimension\n                        displayNameProperty={displayNameProperty}\n                        ouItems={selectedItems}\n                        {...commonProps}\n                    />\n                );\n            default:\n                return (\n                    <DynamicDimension\n                        selectedItems={selectedItems}\n                        dialogId={dialogId}\n                        dialogTitle={dimension.name}\n                        {...commonProps}\n                    />\n                );\n        }\n    }\n\n    render() {\n        const { dimension, onClose } = this.props;\n        const dialogId = dimension.id;\n\n        return (\n            <Dialog\n                open={!!dialogId}\n                maxWidth=\"lg\"\n                disableEnforceFocus\n                onClose={onClose}\n            >\n                {dialogId && this.dialogContent()}\n                <DialogActions>\n                    <Button kind=\"secondary\" onClick={onClose}>\n                        {i18n.t('Cancel')}\n                    </Button>\n                    <Button kind=\"primary\" onClick={this.onConfirm(dialogId)}>\n                        {i18n.t('Confirm')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nFilterDialog.propTypes = {\n    dimension: PropTypes.object,\n    displayNameProperty: PropTypes.string,\n    selectedItems: PropTypes.array,\n    onClose: PropTypes.func,\n    onConfirm: PropTypes.func,\n    onDeselect: PropTypes.func,\n    onReorder: PropTypes.func,\n    onSelect: PropTypes.func,\n};\n\nFilterDialog.contextTypes = {\n    d2: PropTypes.object,\n};\n\nexport default FilterDialog;\n","export const SET_ACTIVE_MODAL_DIMENSION = 'SET_ACTIVE_MODAL_DIMENSION';\nexport const CLEAR_ACTIVE_MODAL_DIMENSION = 'CLEAR_ACTIVE_MODAL_DIMENSION';\n\nexport const DEFAULT_STATE_ACTIVE_MODAL_DIMENSION = {};\n\nexport default (state = DEFAULT_STATE_ACTIVE_MODAL_DIMENSION, action) => {\n    switch (action.type) {\n        case SET_ACTIVE_MODAL_DIMENSION: {\n            return action.value;\n        }\n        case CLEAR_ACTIVE_MODAL_DIMENSION: {\n            return DEFAULT_STATE_ACTIVE_MODAL_DIMENSION;\n        }\n        default:\n            return state;\n    }\n};\n\nexport const sGetActiveModalDimension = state => state.activeModalDimension;\n","import {\n    SET_ACTIVE_MODAL_DIMENSION,\n    CLEAR_ACTIVE_MODAL_DIMENSION,\n} from '../reducers/activeModalDimension';\n\nexport const acSetActiveModalDimension = value => ({\n    type: SET_ACTIVE_MODAL_DIMENSION,\n    value,\n});\n\nexport const acClearActiveModalDimension = () => ({\n    type: CLEAR_ACTIVE_MODAL_DIMENSION,\n});\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Popover from '@material-ui/core/Popover';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport { withTheme } from '@material-ui/core/styles';\n\nimport i18n from '@dhis2/d2-i18n';\nimport { DimensionsPanel } from '@dhis2/analytics';\n\nimport { Button } from '@dhis2/ui-core';\nimport FilterDialog from './FilterDialog';\n\nimport { sGetSettingsDisplayNameProperty } from '../../reducers/settings';\nimport { sGetActiveModalDimension } from '../../reducers/activeModalDimension';\nimport { sGetDimensions } from '../../reducers/dimensions';\nimport { sGetFiltersKeys } from '../../reducers/itemFilters';\nimport { sGetEditItemFiltersRoot } from '../../reducers/editItemFilters';\nimport { acAddItemFilter, acRemoveItemFilter } from '../../actions/itemFilters';\nimport {\n    acRemoveEditItemFilter,\n    acSetEditItemFilters,\n} from '../../actions/editItemFilters';\nimport {\n    acClearActiveModalDimension,\n    acSetActiveModalDimension,\n} from '../../actions/activeModalDimension';\n\nclass FilterSelector extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n        };\n    }\n\n    openPanel = (_, event) => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    closePanel = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    closeDialog = () => {\n        this.setState({ anchorEl: null });\n\n        this.props.clearActiveModalDimension();\n    };\n\n    selectDimension = id => {\n        this.props.setActiveModalDimension(\n            this.props.dimensions.find(dimension => dimension.id === id)\n        );\n    };\n\n    onSelectItems = ({ dimensionId, items }) => {\n        this.props.setEditItemFilters({\n            ...this.props.selectedItems,\n            [dimensionId]: items,\n        });\n    };\n\n    onDeselectItems = ({ dimensionId, itemIdsToRemove }) => {\n        const oldList = this.props.selectedItems[dimensionId] || [];\n        const newList = oldList.filter(\n            item => !itemIdsToRemove.includes(item.id)\n        );\n\n        if (newList.length) {\n            this.props.setEditItemFilters({\n                ...this.props.selectedItems,\n                [dimensionId]: newList,\n            });\n        } else {\n            this.props.removeEditItemFilter(dimensionId);\n        }\n    };\n\n    onReorderItems = ({ dimensionId, itemIds }) => {\n        const oldList = this.props.selectedItems[dimensionId] || [];\n        const reorderedList = itemIds.map(id =>\n            oldList.find(item => item.id === id)\n        );\n\n        this.props.setEditItemFilters({\n            ...this.props.selectedItems,\n            [dimensionId]: reorderedList,\n        });\n    };\n\n    saveFilter = id => {\n        const filterItems = this.props.selectedItems[id];\n\n        if (filterItems && filterItems.length) {\n            this.props.addItemFilter({\n                id,\n                value: [...filterItems],\n            });\n        } else {\n            this.props.removeItemFilter(id);\n        }\n\n        this.closeDialog();\n    };\n\n    render() {\n        const {\n            theme,\n            displayNameProperty,\n            dimension,\n            dimensions,\n            selectedDimensions,\n            selectedItems,\n        } = this.props;\n\n        return (\n            <Fragment>\n                <Button onClick={this.openPanel}>\n                    {i18n.t('Add filter')}\n                    <ArrowDropDownIcon />\n                </Button>\n                <Popover\n                    open={Boolean(this.state.anchorEl)}\n                    anchorEl={this.state.anchorEl}\n                    anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\n                    onClose={this.closePanel}\n                    style={{\n                        height: '100%',\n                        fontFamily: theme.typography.fontFamily,\n                    }}\n                >\n                    <DimensionsPanel\n                        style={{ width: '320px' }}\n                        dimensions={dimensions}\n                        onDimensionClick={this.selectDimension}\n                        selectedIds={selectedDimensions}\n                    />\n                </Popover>\n                {dimension ? (\n                    <FilterDialog\n                        displayNameProperty={displayNameProperty}\n                        dimension={dimension}\n                        selectedItems={selectedItems[dimension.id] || []}\n                        onSelect={this.onSelectItems}\n                        onDeselect={this.onDeselectItems}\n                        onReorder={this.onReorderItems}\n                        onClose={this.closeDialog}\n                        onConfirm={this.saveFilter}\n                    />\n                ) : null}\n            </Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    displayNameProperty: sGetSettingsDisplayNameProperty(state),\n    dimension: sGetActiveModalDimension(state),\n    dimensions: sGetDimensions(state),\n    selectedDimensions: sGetFiltersKeys(state),\n    selectedItems: sGetEditItemFiltersRoot(state),\n});\n\nFilterSelector.propTypes = {\n    addItemFilter: PropTypes.func,\n    clearActiveModalDimension: PropTypes.func,\n    dimension: PropTypes.object,\n    dimensions: PropTypes.array,\n    displayNameProperty: PropTypes.string,\n    removeEditItemFilter: PropTypes.func,\n    removeItemFilter: PropTypes.func,\n    selectedDimensions: PropTypes.array,\n    selectedItems: PropTypes.object,\n    setActiveModalDimension: PropTypes.func,\n    setEditItemFilters: PropTypes.func,\n    theme: PropTypes.object,\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        clearActiveModalDimension: acClearActiveModalDimension,\n        setActiveModalDimension: acSetActiveModalDimension,\n        addItemFilter: acAddItemFilter,\n        removeItemFilter: acRemoveItemFilter,\n        removeEditItemFilter: acRemoveEditItemFilter,\n        setEditItemFilters: acSetEditItemFilters,\n    }\n)(withTheme()(FilterSelector));\n","import React, { Component } from 'react';\nimport InfoOutlineIcon from '@material-ui/icons/InfoOutlined';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nclass Info extends Component {\n    show = false;\n\n    toggle() {\n        this.show = !this.show;\n        return this.show;\n    }\n\n    render() {\n        return (\n            <div onClick={() => this.props.onClick(this.toggle())}>\n                <InfoOutlineIcon style={{ fill: colors.grey600 }} />\n            </div>\n        );\n    }\n}\n\nInfo.propTypes = {\n    onClick: PropTypes.func,\n};\n\nexport default Info;\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport SharingDialog from '@dhis2/d2-ui-sharing-dialog';\nimport Star from '@material-ui/icons/Star';\nimport StarBorder from '@material-ui/icons/StarBorder';\n\nimport { orObject } from '../../modules/util';\nimport { tStarDashboard } from '../../actions/dashboards';\nimport { acSetSelectedShowDescription } from '../../actions/selected';\nimport FilterSelector from '../ItemFilter/FilterSelector';\nimport { Button } from '@dhis2/ui-core';\nimport Info from './Info';\nimport {\n    sGetSelectedId,\n    sGetSelectedShowDescription,\n} from '../../reducers/selected';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n} from '../../reducers/dashboards';\nimport { colors } from '@dhis2/ui-core';\n\nconst NO_DESCRIPTION = i18n.t('No description');\n\nconst styles = {\n    actions: {\n        display: 'flex',\n        alignItems: 'center',\n        marginLeft: '20px',\n    },\n    starIcon: {\n        fill: colors.grey600,\n    },\n    textButton: {\n        minWidth: '30px',\n        top: '1px',\n    },\n    editLink: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        textDecoration: 'none',\n        marginRight: '4px',\n    },\n    titleBar: {\n        display: 'flex',\n        alignItems: 'flex-start',\n    },\n    titleBarIcon: {\n        marginLeft: 5,\n        position: 'relative',\n        top: 1,\n        cursor: 'pointer',\n    },\n};\n\nclass ViewTitleBar extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            sharingDialogIsOpen: false,\n        };\n    }\n\n    toggleSharingDialog = () =>\n        this.setState({ sharingDialogIsOpen: !this.state.sharingDialogIsOpen });\n\n    render() {\n        const {\n            id,\n            name,\n            description,\n            access,\n            style,\n            showDescription,\n            starred,\n            onStarClick,\n            onInfoClick,\n            classes,\n        } = this.props;\n\n        const titleStyle = Object.assign({}, style.title, {\n            cursor: 'default',\n            userSelect: 'text',\n            top: '7px',\n        });\n\n        const StarIcon = starred ? Star : StarBorder;\n\n        return (\n            <Fragment>\n                <div className={classes.titleBar}>\n                    <span style={titleStyle}>{name}</span>\n                    <div className={classes.actions}>\n                        <div\n                            className={classes.titleBarIcon}\n                            onClick={onStarClick}\n                        >\n                            <StarIcon className={classes.starIcon} />\n                        </div>\n                        <div className={classes.titleBarIcon}>\n                            <Info onClick={onInfoClick} />\n                        </div>\n                        <div style={{ marginLeft: '10px' }}>\n                            {access.update ? (\n                                <Link\n                                    className={classes.editLink}\n                                    to={`/${id}/edit`}\n                                >\n                                    <Button>{i18n.t('Edit')}</Button>\n                                </Link>\n                            ) : null}\n                            {access.manage ? (\n                                <span style={{ marginRight: '4px' }}>\n                                    <Button onClick={this.toggleSharingDialog}>\n                                        {i18n.t('Share')}\n                                    </Button>\n                                </span>\n                            ) : null}\n                            <span style={{ marginRight: '4px' }}>\n                                <FilterSelector />\n                            </span>\n                        </div>\n                    </div>\n                </div>\n                {showDescription ? (\n                    <div\n                        className=\"dashboard-description\"\n                        style={Object.assign(\n                            { paddingTop: '5px', paddingBottom: '5px' },\n                            style.description,\n                            !description ? { color: '#888' } : {}\n                        )}\n                    >\n                        {description || NO_DESCRIPTION}\n                    </div>\n                ) : null}\n                {id ? (\n                    <SharingDialog\n                        d2={this.context.d2}\n                        id={id}\n                        type=\"dashboard\"\n                        open={this.state.sharingDialogIsOpen}\n                        onRequestClose={this.toggleSharingDialog}\n                    />\n                ) : null}\n            </Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    const id = sGetSelectedId(state);\n    const dashboard = orObject(sGetDashboardById(state, id));\n\n    return {\n        id,\n        name: dashboard.displayName,\n        description: dashboard.displayDescription,\n        dashboardItems: sGetDashboardItems(state),\n        showDescription: sGetSelectedShowDescription(state),\n        starred: dashboard.starred,\n        access: orObject(dashboard.access),\n    };\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const { id, starred, showDescription } = stateProps;\n    const { dispatch } = dispatchProps;\n\n    return {\n        ...stateProps,\n        ...ownProps,\n        onStarClick: () => dispatch(tStarDashboard(id, !starred)),\n        onInfoClick: () =>\n            dispatch(acSetSelectedShowDescription(!showDescription)),\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    null,\n    mergeProps\n)(withStyles(styles)(ViewTitleBar));\n\nViewTitleBar.propTypes = {\n    access: PropTypes.object,\n    classes: PropTypes.object,\n    description: PropTypes.string,\n    id: PropTypes.string,\n    name: PropTypes.string,\n    showDescription: PropTypes.bool,\n    starred: PropTypes.bool,\n    style: PropTypes.object,\n    onInfoClick: PropTypes.func,\n    onStarClick: PropTypes.func,\n};\n\nViewTitleBar.defaultProps = {\n    name: '',\n    description: '',\n    starred: false,\n    showDescription: false,\n    onInfoClick: null,\n};\n\nViewTitleBar.contextTypes = {\n    d2: PropTypes.object,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { colors } from '@dhis2/ui-core';\nimport EditTitleBar from './EditTitleBar';\nimport ViewTitleBar from './ViewTitleBar';\n\nimport './TitleBar.css';\n\nconst style = {\n    title: {\n        position: 'relative',\n        fontSize: 21,\n        fontWeight: 500,\n        color: colors.black,\n        minWidth: 50,\n    },\n    description: {\n        fontSize: 14,\n        color: colors.grey800,\n    },\n};\n\nconst TitleBar = ({ edit }) => {\n    return (\n        <div\n            className=\"titlebar-wrapper\"\n            style={{\n                padding: '20px 15px 5px 10px',\n            }}\n        >\n            {edit ? (\n                <EditTitleBar style={style} />\n            ) : (\n                <ViewTitleBar style={style} />\n            )}\n        </div>\n    );\n};\n\nTitleBar.propTypes = {\n    edit: PropTypes.bool,\n};\n\nexport default TitleBar;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport i18n from '@dhis2/d2-i18n';\n\nimport * as pluginManager from './plugin';\nimport { getBaseUrl, orObject } from '../../../modules/util';\nimport { getGridItemDomId } from '../../ItemGrid/gridUtil';\n\nconst pluginCredentials = d2 => {\n    return {\n        baseUrl: getBaseUrl(d2),\n        auth: d2.Api.getApi().defaultHeaders.Authorization,\n    };\n};\n\nclass DefaultPlugin extends Component {\n    pluginCredentials = null;\n\n    constructor(props, context) {\n        super(props);\n\n        this.d2 = context.d2;\n    }\n\n    shouldPluginReload = prevProps => {\n        // TODO - fix this hack, to handle bug with multiple\n        // rerendering while switching between dashboards.\n        //\n        // To determine if the rendering is happening because of a\n        // dashboard switch, check if the item reference has changed.\n        const reloadAllowed = this.props.item === prevProps.item;\n\n        const filtersChanged = prevProps.itemFilters !== this.props.itemFilters;\n        const vis = orObject(this.props.visualization);\n        const prevVis = orObject(prevProps.visualization);\n        const visChanged =\n            vis.id !== prevVis.id || vis.activeType !== prevVis.activeType;\n\n        return reloadAllowed && (visChanged || filtersChanged);\n    };\n\n    reloadPlugin = prevProps => {\n        if (\n            pluginManager.pluginIsAvailable(\n                this.props.item,\n                this.props.visualization\n            ) &&\n            this.shouldPluginReload(prevProps)\n        ) {\n            const prevVis = orObject(prevProps.visualization);\n            const currentVis = this.props.visualization;\n\n            const useActiveType =\n                currentVis.activeType !== prevVis.activeType ||\n                currentVis.activeType !== this.props.item.type;\n\n            if (\n                useActiveType ||\n                this.props.itemFilters !== prevProps.itemFilters\n            ) {\n                pluginManager.unmount(\n                    this.props.item,\n                    prevVis.activeType || this.props.item.type\n                );\n\n                pluginManager.load(this.props.item, this.props.visualization, {\n                    credentials: this.pluginCredentials,\n                    activeType: useActiveType ? currentVis.activeType : null,\n                });\n            }\n        }\n    };\n\n    componentDidMount() {\n        this.pluginCredentials = pluginCredentials(this.d2);\n\n        if (\n            pluginManager.pluginIsAvailable(\n                this.props.item,\n                this.props.visualization\n            )\n        ) {\n            pluginManager.load(this.props.item, this.props.visualization, {\n                credentials: this.pluginCredentials,\n                activeType: !this.props.editMode ? this.getActiveType() : null,\n            });\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        this.reloadPlugin(prevProps);\n    }\n\n    getActiveType = () =>\n        this.props.visualization.activeType || this.props.item.type;\n\n    render() {\n        const { classes, item, visualization, style } = this.props;\n        const pluginIsAvailable = pluginManager.pluginIsAvailable(\n            item,\n            visualization\n        );\n\n        return pluginIsAvailable ? (\n            <div id={getGridItemDomId(item.id)} style={style} />\n        ) : (\n            <div className={classes.textDiv}>\n                {i18n.t('Unable to load the plugin for this item')}\n            </div>\n        );\n    }\n}\n\nDefaultPlugin.contextTypes = {\n    d2: PropTypes.object,\n};\n\nDefaultPlugin.propTypes = {\n    classes: PropTypes.object,\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    itemFilters: PropTypes.object,\n    style: PropTypes.object,\n    visualization: PropTypes.object,\n};\n\nDefaultPlugin.defaultProps = {\n    style: {},\n    item: {},\n    itemFilters: {},\n    visualization: {},\n};\n\nexport default DefaultPlugin;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { colors } from '@dhis2/ui-core';\n\nimport classes from './styles/DeleteItemButton.module.css';\n\nconst DeleteItemButton = ({ onClick }) => (\n    <button\n        type=\"button\"\n        className={classes.deleteItemButton}\n        onClick={onClick}\n        title={i18n.t(`Delete item`)}\n    >\n        <DeleteIcon style={{ fill: colors.red500 }} />\n    </button>\n);\n\nDeleteItemButton.propTypes = {\n    onClick: PropTypes.func,\n};\n\nexport default DeleteItemButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { sGetIsEditing } from '../../reducers/editDashboard';\nimport { acRemoveDashboardItem } from '../../actions/editDashboard';\nimport DeleteItemButton from './DeleteItemButton';\n\nimport classes from './styles/ItemHeader.module.css';\n\nconst ItemHeader = props => {\n    const {\n        title,\n        editMode,\n        actionButtons,\n        itemId,\n        acRemoveDashboardItem,\n    } = props;\n\n    const handleDeleteItem = () => acRemoveDashboardItem(itemId);\n\n    return (\n        <div className={classes.itemHeaderWrap}>\n            <p className={classes.itemTitle}>{title}</p>\n            {editMode ? (\n                <div className={classes.itemActionsWrap}>\n                    <DeleteItemButton onClick={handleDeleteItem} />\n                </div>\n            ) : (\n                actionButtons && (\n                    <div className={classes.itemActionsWrap}>\n                        {actionButtons}\n                    </div>\n                )\n            )}\n        </div>\n    );\n};\n\nItemHeader.propTypes = {\n    acRemoveDashboardItem: PropTypes.func,\n    actionButtons: PropTypes.node,\n    editMode: PropTypes.bool,\n    itemId: PropTypes.string,\n    title: PropTypes.string,\n};\n\nconst mapStateToProps = state => ({\n    editMode: sGetIsEditing(state),\n});\n\nconst mapDispatchToProps = {\n    acRemoveDashboardItem,\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ItemHeader);\n","import React from 'react';\n\nexport const ThreeDots = () => (\n    <svg\n        height=\"18\"\n        viewBox=\"0 0 18 18\"\n        width=\"18\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n    >\n        <path\n            d=\"m4 7.5c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm10 0c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm-5 0c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5z\"\n            fill=\"#6e7a8a\"\n        />\n    </svg>\n);\n\nexport const SpeechBubble = () => (\n    <svg\n        height=\"20\"\n        viewBox=\"0 0 20 20\"\n        width=\"20\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n    >\n        <path\n            d=\"m20 2h-16c-1.1 0-1.99.9-1.99 2l-.01 18 4-4h14c1.1 0 2-.9 2-2v-12c0-1.1-.9-2-2-2zm-2 12h-12v-2h12zm0-3h-12v-2h12zm0-3h-12v-2h12z\"\n            fill=\"#6e7a8a\"\n            fillRule=\"evenodd\"\n            transform=\"translate(-2 -2)\"\n        />\n    </svg>\n);\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { isSingleValue, isYearOverYear } from '@dhis2/analytics';\nimport { Button, Menu, MenuItem, Divider, colors } from '@dhis2/ui-core';\nimport i18n from '@dhis2/d2-i18n';\nimport Popover from '@material-ui/core/Popover';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\nimport LaunchIcon from '@material-ui/icons/Launch';\n\nimport { ThreeDots, SpeechBubble } from './assets/icons';\nimport { pluginIsAvailable, getLink } from './plugin';\nimport {\n    CHART,\n    MAP,\n    REPORT_TABLE,\n    EVENT_CHART,\n    EVENT_REPORT,\n    isTrackerDomainType,\n    hasMapView,\n    getAppName,\n} from '../../../modules/itemTypes';\n\nconst iconFill = { fill: colors.grey600 };\n\nconst ItemHeaderButtons = props => {\n    const [anchorEl, setAnchorEl] = useState(null);\n\n    const { item, visualization, onSelectActiveType, d2, activeType } = props;\n\n    const isTrackerType = isTrackerDomainType(item.type);\n\n    const onViewTable = () => {\n        onSelectActiveType(isTrackerType ? EVENT_REPORT : REPORT_TABLE);\n        handleClose();\n    };\n\n    const onViewChart = () => {\n        onSelectActiveType(isTrackerType ? EVENT_CHART : CHART);\n        handleClose();\n    };\n\n    const onViewMap = () => {\n        onSelectActiveType(MAP);\n        handleClose();\n    };\n\n    const itemHasMapView = () => hasMapView(item.type);\n\n    const handleMenuClick = (_, event) => setAnchorEl(event.currentTarget);\n\n    const handleInterpretationClick = () => {\n        props.onToggleFooter();\n        if (anchorEl !== null) {\n            handleClose();\n        }\n    };\n\n    const handleClose = () => setAnchorEl(null);\n\n    const type = visualization.type || item.type;\n    const canViewAs = !isSingleValue(type) && !isYearOverYear(type);\n\n    const interpretationMenuLabel = props.activeFooter\n        ? i18n.t(`Hide interpretations and details`)\n        : i18n.t(`Show interpretations and details`);\n\n    const ViewAsMenuItems = () => (\n        <>\n            <MenuItem\n                dense\n                active={activeType === CHART}\n                label={i18n.t('View as Chart')}\n                onClick={onViewChart}\n                icon={<ChartIcon style={iconFill} />}\n            />\n            <MenuItem\n                dense\n                active={[REPORT_TABLE, EVENT_REPORT].includes(activeType)}\n                label={i18n.t('View as Table')}\n                onClick={onViewTable}\n                icon={<TableIcon style={iconFill} />}\n            />\n            {itemHasMapView() && (\n                <MenuItem\n                    dense\n                    active={activeType === MAP}\n                    label={i18n.t('View as Map')}\n                    onClick={onViewMap}\n                    icon={<MapIcon style={iconFill} />}\n                />\n            )}\n        </>\n    );\n\n    return pluginIsAvailable(item, visualization) ? (\n        <>\n            <Button small secondary onClick={handleMenuClick}>\n                <ThreeDots />\n            </Button>\n            <Popover\n                open={Boolean(anchorEl)}\n                onClose={handleClose}\n                anchorEl={anchorEl}\n            >\n                <Menu>\n                    {canViewAs && (\n                        <>\n                            <ViewAsMenuItems />\n                            <Divider />\n                        </>\n                    )}\n                    <MenuItem\n                        dense\n                        icon={<LaunchIcon style={{ fill: '#6e7a8a' }} />}\n                        label={i18n.t('Open in {{appName}} app', {\n                            appName: getAppName(item.type),\n                        })}\n                        href={getLink(item, d2)}\n                        target=\"_blank\"\n                    />\n                    <MenuItem\n                        dense\n                        icon={<SpeechBubble />}\n                        label={interpretationMenuLabel}\n                        onClick={handleInterpretationClick}\n                    />\n                </Menu>\n            </Popover>\n        </>\n    ) : null;\n};\n\nItemHeaderButtons.propTypes = {\n    activeFooter: PropTypes.bool,\n    activeType: PropTypes.string,\n    d2: PropTypes.object,\n    item: PropTypes.object,\n    visualization: PropTypes.object,\n    onSelectActiveType: PropTypes.func,\n    onToggleFooter: PropTypes.func,\n};\n\nexport default ItemHeaderButtons;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { colors } from '@dhis2/ui-core';\nimport { getId } from './plugin';\nimport InterpretationsComponent from '@dhis2/d2-ui-interpretations';\n\nconst style = {\n    scrollContainer: {\n        overflowY: 'auto',\n        height: '340px',\n    },\n    line: {\n        margin: '-1px 0px 0px',\n        height: '1px',\n        border: 'none',\n        backgroundColor: colors.grey100,\n    },\n};\n\nclass ItemFooter extends Component {\n    render() {\n        const objectId = getId(this.props.item);\n\n        return (\n            <div className=\"dashboard-item-footer\">\n                <hr style={style.line} />\n                <div style={style.scrollContainer}>\n                    <InterpretationsComponent\n                        d2={this.context.d2}\n                        item={this.props.item}\n                        type={this.props.item.type.toLowerCase()}\n                        id={objectId}\n                        appName=\"dashboard\"\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nItemFooter.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nItemFooter.propTypes = {\n    item: PropTypes.object.isRequired,\n};\n\nexport default ItemFooter;\n","// Note that this ignores discrepancies in 'this', so shouldn't be used with bound functions\n// This is useful instead of lodash/memoize when we only need to memoize a single value\n// Inspiration: https://github.com/alexreardon/memoize-one\n\nconst memoizeOne = fn => {\n    let lastArgs = undefined;\n    let lastValue = undefined;\n\n    return (...args) => {\n        if (\n            lastArgs &&\n            args.length === lastArgs.length &&\n            args.every((arg, i) => arg === lastArgs[i])\n        ) {\n            return lastValue;\n        }\n        lastArgs = args;\n        lastValue = fn(...args);\n        return lastValue;\n    };\n};\n\nexport default memoizeOne;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport VisualizationPlugin from '@dhis2/data-visualizer-plugin';\n\nimport i18n from '@dhis2/d2-i18n';\nimport uniqueId from 'lodash/uniqueId';\n\nimport DefaultPlugin from './DefaultPlugin';\nimport ItemHeader from '../ItemHeader';\nimport ItemHeaderButtons from './ItemHeaderButtons';\nimport ItemFooter from './ItemFooter';\nimport * as pluginManager from './plugin';\nimport { sGetVisualization } from '../../../reducers/visualizations';\nimport { sGetCurrentVisualizationView } from '../../../reducers/currentVisualizationViews';\nimport { sGetItemFiltersRoot } from '../../../reducers/itemFilters';\nimport { acAddVisualization } from '../../../actions/visualizations';\nimport { acSetCurrentVisualizationView } from '../../../actions/currentVisualizationViews';\nimport {\n    VISUALIZATION,\n    MAP,\n    CHART,\n    REPORT_TABLE,\n} from '../../../modules/itemTypes';\n\nimport { colors } from '@dhis2/ui-core';\nimport memoizeOne from '../../../modules/memoizeOne';\n\nconst HEADER_HEIGHT = 45;\n\nconst styles = {\n    icon: {\n        width: 16,\n        height: 16,\n        marginLeft: 3,\n        cursor: 'pointer',\n        fill: colors.grey600,\n    },\n    title: {\n        overflow: 'hidden',\n        maxWidth: '85%',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n    },\n    textDiv: {\n        fontSize: '14px',\n        fontStretch: 'normal',\n        padding: '10px',\n        lineHeight: '20px',\n    },\n};\n\nconst applyFilters = (visualization, filters) => {\n    if (!Object.keys(filters).length) {\n        return visualization;\n    }\n\n    // deep clone objects in filters to avoid changing the visualization in the Redux store\n    const visRows = visualization.rows.map(obj => ({ ...obj }));\n    const visColumns = visualization.columns.map(obj => ({ ...obj }));\n    const visFilters = visualization.filters.map(obj => ({ ...obj }));\n\n    Object.keys(filters).forEach(dimensionId => {\n        if (filters[dimensionId]) {\n            let dimensionFound = false;\n\n            [visRows, visColumns, visFilters].forEach(dimensionObjects =>\n                dimensionObjects\n                    .filter(obj => obj.dimension === dimensionId)\n                    .forEach(obj => {\n                        dimensionFound = true;\n                        obj.items = filters[dimensionId];\n                    })\n            );\n\n            // add dimension to filters if not already present elsewhere\n            if (!dimensionFound) {\n                visFilters.push({\n                    dimension: dimensionId,\n                    items: filters[dimensionId],\n                });\n            }\n        }\n    });\n\n    return {\n        ...visualization,\n        rows: visRows,\n        columns: visColumns,\n        filters: visFilters,\n    };\n};\n\nexport class Item extends Component {\n    state = {\n        showFooter: false,\n        configLoaded: false,\n    };\n\n    constructor(props, context) {\n        super(props);\n\n        this.d2 = context.d2;\n\n        this.contentRef = React.createRef();\n    }\n\n    async componentDidMount() {\n        const visualization = await pluginManager.fetch(this.props.item);\n        this.props.onVisualizationLoaded(visualization);\n        this.props.onSelectVisualizationView(\n            this.props.visualization.id,\n            visualization\n        );\n\n        this.setState({\n            configLoaded: true,\n        });\n    }\n\n    getUniqueKey = memoizeOne(() => uniqueId());\n\n    pluginCredentials = null;\n\n    getPluginComponent = () => {\n        const {\n            itemFilters,\n            editMode,\n            item,\n            classes,\n            currentVisualizationView,\n        } = this.props;\n\n        if (!currentVisualizationView) {\n            return (\n                <div className={this.props.classes.textDiv}>\n                    {i18n.t('No data to display')}\n                </div>\n            );\n        }\n        const style = this.getContentStyle();\n        const props = { itemFilters, editMode, item, classes, style };\n\n        switch (this.getActiveType()) {\n            case VISUALIZATION:\n            case CHART:\n            case REPORT_TABLE: {\n                return (\n                    <VisualizationPlugin\n                        d2={this.d2}\n                        visualization={applyFilters(\n                            currentVisualizationView,\n                            itemFilters\n                        )}\n                        forDashboard={true}\n                        style={style}\n                    />\n                );\n            }\n            case MAP: {\n                let visualization = currentVisualizationView;\n                if (item.type === MAP) {\n                    // apply filters only to thematic and event layers for map\n                    const mapViews = currentVisualizationView.mapViews.map(\n                        obj => {\n                            if (\n                                obj.layer.includes('thematic') ||\n                                obj.layer.includes('event')\n                            ) {\n                                return applyFilters(obj, itemFilters);\n                            }\n\n                            return obj;\n                        }\n                    );\n\n                    visualization = {\n                        ...currentVisualizationView,\n                        mapViews,\n                    };\n                } else {\n                    // Non-map AO passed to the maps plugin. Maps plugin will handle it\n                    visualization = applyFilters(\n                        currentVisualizationView,\n                        itemFilters\n                    );\n                }\n\n                return (\n                    <DefaultPlugin {...props} visualization={visualization} />\n                );\n            }\n            default: {\n                const visualization = applyFilters(\n                    currentVisualizationView,\n                    itemFilters\n                );\n\n                return (\n                    <DefaultPlugin {...props} visualization={visualization} />\n                );\n            }\n        }\n    };\n\n    onToggleFooter = () => {\n        this.setState(\n            { showFooter: !this.state.showFooter },\n            this.props.onToggleItemExpanded(this.props.item.id)\n        );\n    };\n\n    onSelectActiveType = newActiveType => {\n        const currentActiveType = this.getActiveType();\n        if (newActiveType === currentActiveType) {\n            return;\n        }\n\n        pluginManager.unmount(this.props.item, currentActiveType);\n\n        const visualization = pluginManager.getVisualizationConfig(\n            this.props.visualization,\n            this.props.item.type,\n            newActiveType\n        );\n\n        this.props.onSelectVisualizationView(this.props.visualization.id, {\n            ...visualization,\n            activeType: newActiveType,\n        });\n    };\n\n    getActiveType = () =>\n        (this.props.currentVisualizationView &&\n            this.props.currentVisualizationView.activeType) ||\n        this.props.item.type;\n\n    pluginIsAvailable = () =>\n        pluginManager.pluginIsAvailable(\n            this.props.item,\n            this.props.visualization\n        );\n\n    getContentStyle = () => {\n        const { item, editMode } = this.props;\n        const PADDING_BOTTOM = 4;\n\n        return !editMode\n            ? {\n                  height: item.originalHeight - HEADER_HEIGHT - PADDING_BOTTOM,\n              }\n            : { height: this.contentRef.offsetHeight };\n    };\n\n    render() {\n        const { item, editMode, itemFilters } = this.props;\n        const { showFooter } = this.state;\n\n        const actionButtons = (\n            <ItemHeaderButtons\n                item={item}\n                visualization={this.props.visualization}\n                onSelectActiveType={this.onSelectActiveType}\n                onToggleFooter={this.onToggleFooter}\n                d2={this.d2}\n                activeType={this.getActiveType()}\n                activeFooter={this.state.showFooter}\n            />\n        );\n\n        return (\n            <>\n                <ItemHeader\n                    title={pluginManager.getName(item)}\n                    itemId={item.id}\n                    actionButtons={actionButtons}\n                />\n                <div\n                    key={this.getUniqueKey(itemFilters)}\n                    className=\"dashboard-item-content\"\n                    ref={ref => (this.contentRef = ref)}\n                >\n                    {this.state.configLoaded && this.getPluginComponent()}\n                </div>\n                {!editMode && showFooter ? <ItemFooter item={item} /> : null}\n            </>\n        );\n    }\n}\n\nItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nItem.propTypes = {\n    classes: PropTypes.object,\n    currentVisualizationView: PropTypes.object,\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    itemFilters: PropTypes.object,\n    visualization: PropTypes.object,\n    onSelectVisualizationView: PropTypes.func,\n    onToggleItemExpanded: PropTypes.func,\n    onVisualizationLoaded: PropTypes.func,\n};\n\nItem.defaultProps = {\n    item: {},\n    editMode: false,\n    onToggleItemExpanded: Function.prototype,\n    itemFilters: {},\n    visualization: {},\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n    itemFilters: sGetItemFiltersRoot(state),\n    visualization: sGetVisualization(\n        state,\n        pluginManager.extractFavorite(ownProps.item).id\n    ),\n    currentVisualizationView: sGetCurrentVisualizationView(\n        state,\n        pluginManager.extractFavorite(ownProps.item).id\n    ),\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onVisualizationLoaded: visualization =>\n        dispatch(acAddVisualization(visualization)),\n    onSelectVisualizationView: (id, visualization) => {\n        dispatch(acSetCurrentVisualizationView({ id, visualization }));\n    },\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(Item));\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\n\nconst style = {\n    backgroundColor: colors.grey200,\n    border: 'none',\n    height: '1px',\n    margin: '0px 0px 5px 0px',\n};\n\nconst Line = () => <hr style={style} />;\n\nexport default Line;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\n\nimport { sGetMessagesRoot } from '../../../reducers/messages';\nimport { formatDate } from '../../../modules/util';\nimport { colors } from '@dhis2/ui-core';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nimport './MessagesItem.css';\n\nconst PRIVATE = 'PRIVATE';\n\nconst messageTypes = {\n    [PRIVATE]: 'Private',\n    VALIDATION_RESULT: 'Validation',\n    TICKET: 'Ticket',\n    SYSTEM: 'System',\n};\n\nconst style = {\n    list: {\n        listStyleType: 'none',\n        paddingLeft: '0px',\n    },\n    seeAll: {\n        textAlign: 'center',\n        fontSize: '13px',\n        marginBottom: '5px',\n    },\n    sender: {\n        fontSize: '13px',\n        lineHeight: '15px',\n        margin: 0,\n        color: colors.grey800,\n    },\n    snippet: {\n        color: colors.grey800,\n        fontSize: '13px',\n        lineHeight: '15px',\n        maxHeight: '30px',\n        overflow: 'hidden',\n    },\n};\n\nclass MessagesItem extends Component {\n    state = {\n        uiLocale: '',\n    };\n\n    async componentDidMount() {\n        const uiLocale = await this.context.d2.currentUser.userSettings.get(\n            'keyUiLocale'\n        );\n\n        this.setState({ uiLocale });\n    }\n\n    getMessageHref = msg => {\n        const msgIdentifier = msg ? `#/${msg.messageType}/${msg.id}` : '';\n        return `${this.context.baseUrl}/dhis-web-messaging/${msgIdentifier}`;\n    };\n\n    getMessageSender = msg => {\n        const latestMsg = msg.messages.slice(-1)[0];\n        return latestMsg.sender ? latestMsg.sender.displayName : '';\n    };\n\n    getMessageItems = () => {\n        const editClass = !this.props.editMode ? 'view' : null;\n\n        return this.props.messages.map(msg => {\n            const redirectToMsg = () => {\n                if (!this.props.editMode) {\n                    document.location.href = this.getMessageHref(msg);\n                }\n            };\n\n            const sender =\n                msg.messageType === PRIVATE\n                    ? this.getMessageSender(msg)\n                    : messageTypes[msg.messageType];\n\n            const readClass = !msg.read ? 'unread' : null;\n            const latestMsg = msg.messages.slice(-1)[0];\n            const msgDate = latestMsg.lastUpdated;\n\n            return (\n                <li\n                    className={`message-item ${editClass}`}\n                    key={msg.id}\n                    onClick={redirectToMsg}\n                >\n                    <p className={`message-title ${readClass}`}>\n                        {msg.displayName} ({msg.messageCount})\n                    </p>\n                    <p style={style.sender}>\n                        {sender} - {formatDate(msgDate, this.state.uiLocale)}\n                    </p>\n                    <p style={style.snippet}>{latestMsg.text}</p>\n                </li>\n            );\n        });\n    };\n\n    render() {\n        return (\n            <Fragment>\n                <ItemHeader\n                    title={i18n.t('Messages')}\n                    itemId={this.props.item.id}\n                />\n                <Line />\n                {this.props.messages.length > 0 && (\n                    <div className=\"dashboard-item-content\">\n                        <ul style={style.list}>{this.getMessageItems()}</ul>\n                        <div style={style.seeAll}>\n                            <a href={this.getMessageHref()}>\n                                {i18n.t('See all messages')}\n                            </a>\n                        </div>\n                    </div>\n                )}\n            </Fragment>\n        );\n    }\n}\n\nMessagesItem.propTypes = {\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    messages: PropTypes.array,\n};\n\nMessagesItem.contextTypes = {\n    d2: PropTypes.object,\n    baseUrl: PropTypes.string,\n};\n\nconst mapStateToProps = state => {\n    return {\n        messages: Object.values(sGetMessagesRoot(state)),\n    };\n};\n\nconst MessagesContainer = connect(\n    mapStateToProps,\n    null\n)(MessagesItem);\n\nexport default MessagesContainer;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ItemHeader from '../ItemHeader';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nconst NotSupportedItem = props => (\n    <Fragment>\n        <ItemHeader\n            title={i18n.t('Item type \"{{type}}\" not supported', {\n                type: props.item.type,\n            })}\n            itemId={props.item.id}\n        />\n        <div\n            style={{\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center',\n                height: '90%',\n            }}\n        >\n            <NotInterestedIcon\n                style={{ width: 100, height: 100, align: 'center' }}\n                color=\"disabled\"\n            />\n        </div>\n    </Fragment>\n);\n\nNotSupportedItem.propTypes = {\n    item: PropTypes.object,\n};\n\nexport default NotSupportedItem;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nconst DescriptionIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n        fill={colors.grey500}\n    >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M14 2H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6zm2 16H8v-2h8v2zm0-4H8v-2h8v2zm-3-5V3.5L18.5 9H13z\" />\n    </svg>\n);\n\nDescriptionIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default DescriptionIcon;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nconst DeleteIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"18\"\n        height=\"18\"\n        viewBox=\"0 0 24 24\"\n        fill={colors.red500}\n    >\n        <path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>\n);\n\nDeleteIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default DeleteIcon;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { colors } from '@dhis2/ui-core';\nimport DescriptionIcon from '../../../icons/Description';\n\nimport DeleteIcon from '../../../icons/Delete';\nimport Line from '../../../widgets/Line';\nimport { itemTypeMap, getItemUrl } from '../../../modules/itemTypes';\nimport { orArray } from '../../../modules/util';\nimport { tRemoveListItemContent } from './actions';\nimport ItemHeader from '../ItemHeader';\nimport classes from './Item.module.css';\n\nconst getItemTitle = item => itemTypeMap[item.type].pluralTitle;\n\nconst getContentItems = item =>\n    orArray(item[itemTypeMap[item.type].propName]).filter(\n        (item, index, array) =>\n            array.findIndex(el => el.id === item.id) === index\n    );\n\nconst ListItem = (props, context) => {\n    const { item, editMode, tRemoveListItemContent } = props;\n    const contentItems = getContentItems(item);\n\n    const getLink = contentItem => {\n        const deleteButton = (\n            <button\n                className={classes.deletebutton}\n                onClick={() => tRemoveListItemContent(item, contentItem)}\n            >\n                <DeleteIcon className={classes.deleteicon} />\n            </button>\n        );\n\n        return (\n            <Fragment>\n                <a\n                    className={classes.link}\n                    style={{ color: colors.grey900 }}\n                    href={getItemUrl(item.type, contentItem, context.d2)}\n                >\n                    {contentItem.name}\n                </a>\n                {editMode ? deleteButton : null}\n            </Fragment>\n        );\n    };\n\n    return (\n        <Fragment>\n            <ItemHeader title={getItemTitle(item)} itemId={item.id} />\n            <Line />\n            <div className=\"dashboard-item-content\">\n                <ul className={classes.list}>\n                    {contentItems.map(contentItem => (\n                        <li className={classes.item} key={contentItem.id}>\n                            <DescriptionIcon className={classes.itemicon} />\n                            {getLink(contentItem)}\n                        </li>\n                    ))}\n                </ul>\n            </div>\n        </Fragment>\n    );\n};\n\nListItem.propTypes = {\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    tRemoveListItemContent: PropTypes.func,\n};\n\nListItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nexport default connect(\n    null,\n    {\n        tRemoveListItemContent,\n    }\n)(ListItem);\n","import {\n    acUpdateDashboardItem,\n    acRemoveDashboardItem,\n} from '../../../actions/editDashboard';\nimport { itemTypeMap } from '../../../modules/itemTypes';\n\nexport const tRemoveListItemContent = (dashboardItem, content) => dispatch => {\n    const listItemType = itemTypeMap[dashboardItem.type].propName;\n\n    const newContent = dashboardItem[listItemType].filter(\n        item => item.id !== content.id\n    );\n\n    if (newContent.length) {\n        dashboardItem[listItemType] = newContent;\n        dispatch(acUpdateDashboardItem(dashboardItem));\n    } else {\n        dispatch(acRemoveDashboardItem(dashboardItem));\n    }\n};\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\n\nimport Input from '@material-ui/core/Input';\nimport {\n    Parser as RichTextParser,\n    Editor as RichTextEditor,\n} from '@dhis2/d2-ui-rich-text';\n\nimport { acUpdateDashboardItem } from '../../../actions/editDashboard';\nimport { sGetEditDashboardItems } from '../../../reducers/editDashboard';\nimport { sGetDashboardItems } from '../../../reducers/dashboards';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nconst style = {\n    textDiv: {\n        padding: '10px',\n        whiteSpace: 'pre-line',\n        lineHeight: '20px',\n    },\n    textField: {\n        fontSize: '14px',\n        fontStretch: 'normal',\n        width: '90%',\n        margin: '0 auto',\n        display: 'block',\n        lineHeight: '24px',\n    },\n    container: {\n        marginBottom: '20px',\n        marginTop: '20px',\n    },\n};\n\nconst TextItem = props => {\n    const { item, editMode, text, acUpdateDashboardItem } = props;\n\n    const onChangeText = event => {\n        const updatedItem = {\n            ...item,\n            text: event.target.value,\n        };\n\n        acUpdateDashboardItem(updatedItem);\n    };\n\n    const viewItem = () => {\n        const textDivStyle = Object.assign({}, style.textField, style.textDiv);\n        return (\n            <div className=\"dashboard-item-content\" style={style.container}>\n                <RichTextParser style={textDivStyle}>{text}</RichTextParser>\n            </div>\n        );\n    };\n\n    const editItem = () => {\n        return (\n            <Fragment>\n                <ItemHeader title={i18n.t('Text item')} itemId={item.id} />\n                <Line />\n                <div className=\"dashboard-item-content\">\n                    <RichTextEditor onEdit={onChangeText}>\n                        <Input\n                            value={text}\n                            multiline\n                            fullWidth\n                            style={style.textField}\n                            placeholder={i18n.t('Add text here')}\n                            onChange={onChangeText}\n                        />\n                    </RichTextEditor>\n                </div>\n            </Fragment>\n        );\n    };\n\n    return <Fragment>{editMode ? editItem() : viewItem()}</Fragment>;\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    const items = ownProps.editMode\n        ? sGetEditDashboardItems(state)\n        : sGetDashboardItems(state);\n\n    const item = items.find(item => item.id === ownProps.item.id);\n\n    return {\n        text: item ? item.text : '',\n    };\n};\n\nTextItem.propTypes = {\n    acUpdateDashboardItem: PropTypes.func,\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    text: PropTypes.string,\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        acUpdateDashboardItem,\n    }\n)(TextItem);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nimport { FILTER_ORG_UNIT } from '../../../actions/itemFilters';\nimport { sGetItemFiltersRoot } from '../../../reducers/itemFilters';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nconst getIframeSrc = (appDetails, item, itemFilters) => {\n    let iframeSrc = `${appDetails.launchUrl}?dashboardItemId=${item.id}`;\n\n    if (\n        itemFilters &&\n        itemFilters[FILTER_ORG_UNIT] &&\n        itemFilters[FILTER_ORG_UNIT].length\n    ) {\n        const ouIds = itemFilters[FILTER_ORG_UNIT].map(\n            ouPath => ouPath.split('/').slice(-1)[0]\n        );\n\n        iframeSrc += `&userOrgUnit=${ouIds.join(',')}`;\n    }\n\n    return iframeSrc;\n};\n\nconst AppItem = ({ item, itemFilters }, context) => {\n    let appDetails;\n\n    const appKey = item.appKey;\n\n    if (appKey) {\n        appDetails = context.d2.system.installedApps.find(\n            app => app.key === appKey\n        );\n    }\n\n    return appDetails && appDetails.name && appDetails.launchUrl ? (\n        <Fragment>\n            <ItemHeader title={appDetails.name} itemId={item.id} />\n            <Line />\n            <iframe\n                title={appDetails.name}\n                src={getIframeSrc(appDetails, item, itemFilters)}\n                className=\"dashboard-item-content\"\n                style={{ border: 'none' }}\n            />\n        </Fragment>\n    ) : (\n        <Fragment>\n            <ItemHeader title={`${appKey} app not found`} />\n            <Line />\n            <div\n                className=\"dashboard-item-content\"\n                style={{\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    height: '90%',\n                }}\n            >\n                <NotInterestedIcon\n                    color=\"disabled\"\n                    disabled\n                    style={{ width: 100, height: 100, align: 'center' }}\n                />\n            </div>\n        </Fragment>\n    );\n};\n\nAppItem.propTypes = {\n    item: PropTypes.object,\n    itemFilters: PropTypes.object,\n};\n\nAppItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nconst mapStateToProps = state => ({\n    itemFilters: sGetItemFiltersRoot(state),\n});\n\nexport default connect(mapStateToProps)(AppItem);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\n\nimport { colors } from '@dhis2/ui-core';\nimport ItemHeader from '../ItemHeader';\n\nconst style = {\n    margin: '21px 28px',\n    fontSize: '14px',\n    lineHeight: '18px',\n    color: colors.grey600,\n};\n\nconst SpacerItem = props => {\n    return (\n        <Fragment>\n            <ItemHeader title={i18n.t('Spacer')} itemId={props.item.id} />\n            <p style={style}>\n                {i18n.t(\n                    'Use a spacer to create empty vertical space between other dashboard items.'\n                )}\n            </p>\n        </Fragment>\n    );\n};\n\nSpacerItem.propTypes = {\n    item: PropTypes.object,\n};\n\nexport default SpacerItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport VisualizationItem from './VisualizationItem/Item';\nimport MessagesItem from './MessagesItem/Item';\nimport NotSupportedItem from './NotSupportedItem/Item';\nimport ListItem from './ListItem/Item';\nimport TextItem from './TextItem/Item';\nimport AppItem from './AppItem/Item';\nimport SpacerItem from './SpacerItem/Item';\nimport {\n    APP,\n    VISUALIZATION,\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_CHART,\n    EVENT_REPORT,\n    MESSAGES,\n    REPORTS,\n    RESOURCES,\n    USERS,\n    TEXT,\n    SPACER,\n} from '../../modules/itemTypes';\nimport { DEFAULT_STATE_ITEM_FILTERS } from '../../reducers/itemFilters';\n\nconst getGridItem = type => {\n    switch (type) {\n        case VISUALIZATION:\n        case REPORT_TABLE:\n        case CHART:\n        case MAP:\n        case EVENT_CHART:\n        case EVENT_REPORT:\n            return VisualizationItem;\n        case MESSAGES:\n            return MessagesItem;\n        case REPORTS:\n        case RESOURCES:\n        case USERS:\n            return ListItem;\n        case TEXT:\n            return TextItem;\n        case SPACER:\n            return SpacerItem;\n        case APP:\n            return AppItem;\n        default:\n            return NotSupportedItem;\n    }\n};\n\nexport const Item = props => {\n    const GridItem = getGridItem(props.item.type);\n\n    return (\n        <GridItem\n            item={props.item}\n            editMode={props.editMode}\n            itemFilters={\n                props.editMode ? DEFAULT_STATE_ITEM_FILTERS : props.itemFilters\n            }\n            onToggleItemExpanded={props.onToggleItemExpanded}\n        />\n    );\n};\n\nItem.propTypes = {\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    itemFilters: PropTypes.object,\n    onToggleItemExpanded: PropTypes.func,\n};\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nexport const NoContentMessage = ({ text }) => (\n    <div\n        style={{\n            padding: '50px 10px',\n            textAlign: 'center',\n            fontSize: '15px',\n            fontWeight: 500,\n            color: colors.grey600,\n        }}\n    >\n        {text}\n    </div>\n);\n\nNoContentMessage.propTypes = {\n    text: PropTypes.string,\n};\n\nexport default NoContentMessage;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash/debounce';\nimport pick from 'lodash/pick';\n\nconst defaultDebounceMs = 100;\nconst defaultBufferFactor = 0.25;\n\nclass ProgressiveLoadingContainer extends Component {\n    static propTypes = {\n        children: PropTypes.node.isRequired,\n        bufferFactor: PropTypes.number,\n        className: PropTypes.string,\n        debounceMs: PropTypes.number,\n        style: PropTypes.object,\n    };\n    static defaultProps = {\n        debounceMs: defaultDebounceMs,\n        bufferFactor: defaultBufferFactor,\n    };\n\n    state = {\n        shouldLoad: false,\n    };\n    containerRef = null;\n    shouldLoadHandler = null;\n\n    checkShouldLoad() {\n        const bufferPx = this.props.bufferFactor * window.innerHeight;\n\n        if (!this.containerRef) {\n            return;\n        }\n\n        const rect = this.containerRef.getBoundingClientRect();\n        if (\n            rect.bottom > -bufferPx &&\n            rect.top < window.innerHeight + bufferPx\n        ) {\n            this.setState({\n                shouldLoad: true,\n            });\n\n            this.removeHandler();\n        }\n    }\n\n    registerHandler() {\n        this.shouldLoadHandler = debounce(\n            () => this.checkShouldLoad(),\n            this.props.debounceMs\n        );\n\n        window.addEventListener('scroll', this.shouldLoadHandler);\n    }\n    removeHandler() {\n        window.removeEventListener('scroll', this.shouldLoadHandler);\n    }\n\n    componentDidMount() {\n        this.registerHandler();\n        this.checkShouldLoad();\n    }\n\n    componentWillUnmount() {\n        this.removeHandler();\n    }\n\n    render() {\n        const { children, className, style, ...props } = this.props;\n        const { shouldLoad } = this.state;\n\n        const eventProps = pick(props, [\n            'onMouseDown',\n            'onTouchStart',\n            'onMouseUp',\n            'onTouchEnd',\n        ]);\n\n        return (\n            <div\n                ref={ref => (this.containerRef = ref)}\n                style={style}\n                className={className}\n                {...eventProps}\n            >\n                {shouldLoad && children}\n            </div>\n        );\n    }\n}\n\nexport default ProgressiveLoadingContainer;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ReactGridLayout from 'react-grid-layout';\nimport { CircularLoader, ScreenCover } from '@dhis2/ui-core';\n\nimport {\n    acUpdateDashboardLayout,\n    acRemoveDashboardItem,\n} from '../../actions/editDashboard';\nimport { Item } from '../Item/Item';\nimport { resize as pluginResize } from '../Item/VisualizationItem/plugin';\nimport { isVisualizationType } from '../../modules/itemTypes';\nimport {\n    GRID_ROW_HEIGHT,\n    GRID_COMPACT_TYPE,\n    ITEM_MIN_HEIGHT,\n    MARGIN,\n    getGridColumns,\n    hasShape,\n    onItemResize,\n} from './gridUtil';\nimport { orArray } from '../../modules/util';\n\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\n\nimport './ItemGrid.css';\nimport { sGetSelectedId, sGetSelectedIsLoading } from '../../reducers/selected';\nimport {\n    sGetEditDashboardRoot,\n    sGetEditDashboardItems,\n} from '../../reducers/editDashboard';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n} from '../../reducers/dashboards';\nimport ProgressiveLoadingContainer from '../Item/ProgressiveLoadingContainer';\n\n// Component\n\nconst EXPANDED_HEIGHT = 17;\n\nexport class ItemGrid extends Component {\n    state = {\n        expandedItems: {},\n    };\n\n    onToggleItemExpanded = clickedId => {\n        const isExpanded =\n            typeof this.state.expandedItems[clickedId] === 'boolean'\n                ? this.state.expandedItems[clickedId]\n                : false;\n\n        const expandedItems = { ...this.state.expandedItems };\n        expandedItems[clickedId] = !isExpanded;\n        this.setState({ expandedItems });\n    };\n\n    onRemoveItem = clickedId => {\n        this.props.acRemoveDashboardItem(clickedId);\n    };\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.edit) {\n            this.setState({ expandedItems: {} });\n        }\n    }\n\n    onLayoutChange = newLayout => {\n        if (this.props.edit) {\n            this.props.acUpdateDashboardLayout(newLayout);\n        }\n    };\n\n    onResizeStop = (layout, oldItem, newItem) => {\n        onItemResize(newItem.i);\n\n        const dashboardItem = this.props.dashboardItems.find(\n            item => item.id === newItem.i\n        );\n\n        // call resize on the item component if it's a plugin type\n        if (dashboardItem && isVisualizationType(dashboardItem)) {\n            pluginResize(dashboardItem);\n        }\n    };\n\n    onRemoveItemWrapper = id => () => this.onRemoveItem(id);\n\n    render() {\n        const { edit, isLoading, dashboardItems } = this.props;\n\n        if (!isLoading && !dashboardItems.length) {\n            return (\n                <NoContentMessage\n                    text={i18n.t('There are no items on this dashboard')}\n                />\n            );\n        }\n\n        const items = dashboardItems.map(item => {\n            const expandedItem = this.state.expandedItems[item.id];\n            const hProp = { h: item.h };\n\n            if (expandedItem && expandedItem === true) {\n                hProp.h = item.h + EXPANDED_HEIGHT;\n            }\n\n            return Object.assign({}, item, hProp, {\n                i: item.id,\n                minH: ITEM_MIN_HEIGHT,\n            });\n        });\n\n        return (\n            <div className=\"grid-wrapper\">\n                {isLoading ? (\n                    <ScreenCover>\n                        <CircularLoader />\n                    </ScreenCover>\n                ) : null}\n                <ReactGridLayout\n                    onLayoutChange={this.onLayoutChange}\n                    onResizeStop={this.onResizeStop}\n                    className=\"layout\"\n                    layout={items}\n                    margin={MARGIN}\n                    cols={getGridColumns()}\n                    rowHeight={GRID_ROW_HEIGHT}\n                    width={window.innerWidth}\n                    compactType={GRID_COMPACT_TYPE}\n                    isDraggable={edit}\n                    isResizable={edit}\n                    draggableCancel=\"input,textarea\"\n                >\n                    {items.map(item => {\n                        const itemClassNames = [\n                            item.type,\n                            edit ? 'edit' : 'view',\n                        ].join(' ');\n\n                        return (\n                            <ProgressiveLoadingContainer\n                                key={item.i}\n                                className={itemClassNames}\n                            >\n                                <Item\n                                    item={item}\n                                    editMode={edit}\n                                    onToggleItemExpanded={\n                                        this.onToggleItemExpanded\n                                    }\n                                />\n                            </ProgressiveLoadingContainer>\n                        );\n                    })}\n                </ReactGridLayout>\n            </div>\n        );\n    }\n}\n\nItemGrid.propTypes = {\n    acRemoveDashboardItem: PropTypes.func,\n    acUpdateDashboardLayout: PropTypes.func,\n    dashboardItems: PropTypes.array,\n    edit: PropTypes.bool,\n    isLoading: PropTypes.bool,\n};\n\nItemGrid.defaultProps = {\n    dashboardItems: [],\n};\n\n// Container\n\nconst mapStateToProps = (state, ownProps) => {\n    const selectedDashboard = ownProps.edit\n        ? sGetEditDashboardRoot(state)\n        : sGetDashboardById(state, sGetSelectedId(state));\n\n    const dashboardItems = ownProps.edit\n        ? sGetEditDashboardItems(state)\n        : sGetDashboardItems(state);\n\n    return {\n        isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n        dashboardItems,\n    };\n};\n\nconst mapDispatchToProps = {\n    acUpdateDashboardLayout,\n    acRemoveDashboardItem,\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const validItems = orArray(stateProps.dashboardItems).filter(hasShape);\n\n    return {\n        ...dispatchProps,\n        edit: ownProps.edit,\n        isLoading: stateProps.isLoading,\n        dashboardItems: validItems,\n        onItemResize,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n    mergeProps\n)(ItemGrid);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport i18n from '@dhis2/d2-i18n';\n\nimport { colors } from '@dhis2/ui-core';\n\nconst styles = {\n    badgeContainer: {\n        margin: '2px',\n        padding: '0 16px',\n        borderRadius: '4px',\n        color: colors.white,\n        backgroundColor: '#212934',\n        height: 36,\n        display: 'flex',\n        alignItems: 'center',\n    },\n    badge: {\n        fontSize: '13px',\n        cursor: 'pointer',\n        whiteSpace: 'nowrap',\n    },\n    badgeRemove: {\n        fontSize: '12px',\n        textDecoration: 'underline',\n        marginLeft: '24px',\n        cursor: 'pointer',\n    },\n};\n\nclass FilterBadge extends Component {\n    onClick = id => () => this.props.onClick(id);\n    onRemove = id => () => this.props.onRemove(id);\n\n    render() {\n        const { data } = this.props;\n\n        return (\n            <div style={styles.badgeContainer}>\n                <span style={styles.badge} onClick={this.onClick(data.id)}>\n                    {`${data.name}: ${\n                        data.values.length > 1\n                            ? i18n.t('{{count}} selected', {\n                                  count: data.values.length,\n                              })\n                            : data.values[0].name\n                    }`}\n                </span>\n                <span\n                    style={styles.badgeRemove}\n                    onClick={this.onRemove(data.id)}\n                >\n                    {i18n.t('Remove')}\n                </span>\n            </div>\n        );\n    }\n}\n\nFilterBadge.propTypes = {\n    data: PropTypes.object.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onRemove: PropTypes.func.isRequired,\n};\n\nFilterBadge.defaultProps = {\n    onClick: Function.prototype,\n    onRemove: Function.prototype,\n};\n\nexport default FilterBadge;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { createSelector } from 'reselect';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport { sGetDimensions } from '../../reducers/dimensions';\nimport { sGetItemFiltersRoot } from '../../reducers/itemFilters';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { getTopOffset } from '../ControlBar/controlBarDimensions';\nimport { acRemoveItemFilter } from '../../actions/itemFilters';\nimport { acRemoveEditItemFilter } from '../../actions/editItemFilters';\nimport { acSetActiveModalDimension } from '../../actions/activeModalDimension';\n\nimport FilterBadge from './FilterBadge';\n\nconst styles = {\n    bar: {\n        position: 'sticky',\n        zIndex: 7,\n        padding: '8px 0',\n        display: 'flex',\n        justifyContent: 'center',\n        flexWrap: 'wrap',\n    },\n};\n\nexport class FilterBar extends Component {\n    onBadgeRemove = id => {\n        this.props.removeItemFilter(id);\n        this.props.removeEditItemFilter(id);\n    };\n\n    onBadgeClick = id => {\n        this.props.setActiveModalDimension({\n            id,\n            name: this.props.filters.find(item => item.id === id).name,\n        });\n    };\n\n    render() {\n        const { filters, userRows, classes } = this.props;\n        const top = getTopOffset(userRows) + 10;\n\n        return filters.length ? (\n            <div className={classes.bar} style={{ top }}>\n                {filters.map(filter => (\n                    <FilterBadge\n                        key={filter.id}\n                        data={filter}\n                        onClick={this.onBadgeClick}\n                        onRemove={this.onBadgeRemove}\n                    />\n                ))}\n            </div>\n        ) : null;\n    }\n}\n\nFilterBar.propTypes = {\n    filters: PropTypes.array.isRequired,\n    removeEditItemFilter: PropTypes.func.isRequired,\n    removeItemFilter: PropTypes.func.isRequired,\n    classes: PropTypes.object,\n    setActiveModalDimension: PropTypes.func,\n    userRows: PropTypes.number,\n};\n\nFilterBar.defaultProps = {\n    filters: [],\n    removeItemFIlter: Function.prototype,\n    removeEditItemFilter: Function.prototype,\n};\n\n// simplify the filters structure to:\n// [{ id: 'pe', name: 'Period', values: [{ id: 2019: name: '2019' }, {id: 'LAST_MONTH', name: 'Last month' }]}, ...]\nconst filtersSelector = createSelector(\n    [sGetItemFiltersRoot, sGetDimensions],\n    (filters, dimensions) =>\n        Object.keys(filters).reduce((arr, id) => {\n            arr.push({\n                id: id,\n                name: dimensions.find(dimension => dimension.id === id).name,\n                values: filters[id].map(value => ({\n                    id: value.id,\n                    name: value.displayName || value.name,\n                })),\n            });\n\n            return arr;\n        }, [])\n);\n\nconst mapStateToProps = state => ({\n    filters: filtersSelector(state),\n    userRows: sGetControlBarUserRows(state),\n});\n\nexport default connect(\n    mapStateToProps,\n    {\n        setActiveModalDimension: acSetActiveModalDimension,\n        removeItemFilter: acRemoveItemFilter,\n        removeEditItemFilter: acRemoveEditItemFilter,\n    }\n)(withStyles(styles)(FilterBar));\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport TitleBar from '../TitleBar/TitleBar';\nimport ItemGrid from '../ItemGrid/ItemGrid';\nimport FilterBar from '../FilterBar/FilterBar';\n\nexport const DashboardContent = props => (\n    <Fragment>\n        <TitleBar edit={props.editMode} />\n        <FilterBar />\n        <ItemGrid edit={props.editMode} />\n    </Fragment>\n);\n\nDashboardContent.propTypes = {\n    editMode: PropTypes.bool,\n};\n\nexport default DashboardContent;\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport isEmpty from 'lodash/isEmpty';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\n\nimport {\n    sGetAllDashboards,\n    sDashboardsIsFetching,\n} from '../../reducers/dashboards';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport DashboardsBar from '../ControlBar/DashboardsBar';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport DashboardContent from './DashboardContent';\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nexport const Content = ({ hasDashboardContent, dashboardsIsEmpty }) => {\n    const msg = dashboardsIsEmpty\n        ? i18n.t(\n              'No dashboards found. Use the + button to create a new dashboard.'\n          )\n        : i18n.t('Requested dashboard not found');\n\n    return hasDashboardContent ? (\n        <DashboardContent editMode={false} />\n    ) : (\n        <NoContentMessage text={msg} />\n    );\n};\n\nContent.propTypes = {\n    dashboardsIsEmpty: PropTypes.bool,\n    hasDashboardContent: PropTypes.bool,\n};\n\nexport const ViewDashboard = ({ id, dashboardsIsEmpty, dashboardsLoaded }) => {\n    const hasDashboardContent = id && !dashboardsIsEmpty;\n    const contentNotReady = !dashboardsLoaded || id === null;\n\n    return (\n        <Fragment>\n            <DashboardsBar />\n            <DashboardVerticalOffset />\n            <div className=\"dashboard-wrapper\">\n                {contentNotReady ? null : (\n                    <Content\n                        hasDashboardContent={hasDashboardContent}\n                        dashboardsIsEmpty={dashboardsIsEmpty}\n                    />\n                )}\n            </div>\n        </Fragment>\n    );\n};\n\nViewDashboard.propTypes = {\n    dashboardsIsEmpty: PropTypes.bool,\n    dashboardsLoaded: PropTypes.bool,\n    id: PropTypes.string,\n};\n\nconst mapStateToProps = state => {\n    const dashboards = sGetAllDashboards(state);\n\n    return {\n        id: sGetSelectedId(state),\n        dashboardsIsEmpty: isEmpty(dashboards),\n        dashboardsLoaded: !sDashboardsIsFetching(state),\n    };\n};\n\nexport default connect(mapStateToProps)(ViewDashboard);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport { Button } from '@dhis2/ui-core';\n\nexport const ConfirmDeleteDialog = ({\n    dashboardName,\n    onDeleteConfirmed,\n    onContinueEditing,\n    open,\n}) => {\n    const actions = [\n        <Button key=\"cancel\" secondary onClick={onContinueEditing}>\n            {i18n.t('Cancel')}\n        </Button>,\n        <Button key=\"delete\" destructive onClick={onDeleteConfirmed}>\n            {i18n.t('Delete')}\n        </Button>,\n    ];\n\n    return (\n        <Dialog open={open} onClose={onContinueEditing}>\n            <DialogTitle style={{ fontSize: '1.25rem', fontWeight: '450' }}>\n                {i18n.t('Delete dashboard')}\n            </DialogTitle>\n            <DialogContent>\n                <DialogContentText style={{ fontSize: '0.875rem' }}>\n                    {i18n.t(\n                        'Deleting dashboard \"{{ dashboardName }}\" will remove it for all users. This action cannot be undone. Are you sure you want to permanently delete this dashboard?',\n                        { dashboardName }\n                    )}\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>{actions}</DialogActions>\n        </Dialog>\n    );\n};\n\nConfirmDeleteDialog.propTypes = {\n    dashboardName: PropTypes.string,\n    open: PropTypes.bool,\n    onContinueEditing: PropTypes.func,\n    onDeleteConfirmed: PropTypes.func,\n};\n\nexport default ConfirmDeleteDialog;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport ControlBar from './ControlBar';\nimport TranslationDialog from '@dhis2/d2-ui-translation-dialog';\nimport { Button } from '@dhis2/ui-core';\n\nimport ConfirmDeleteDialog from './ConfirmDeleteDialog';\nimport {\n    tSaveDashboard,\n    acClearEditDashboard,\n} from '../../actions/editDashboard';\nimport {\n    tDeleteDashboard,\n    acSetDashboardDisplayName,\n} from '../../actions/dashboards';\nimport {\n    sGetEditDashboardRoot,\n    sGetIsNewDashboard,\n} from '../../reducers/editDashboard';\nimport {\n    CONTROL_BAR_ROW_HEIGHT,\n    MIN_ROW_COUNT,\n    getControlBarHeight,\n} from './controlBarDimensions';\nimport { apiFetchDashboard } from '../../api/dashboards';\n\nimport classes from './styles/DashboardsBar.module.css';\n\nconst buttonBarStyle = {\n    height: CONTROL_BAR_ROW_HEIGHT,\n    paddingTop: '15px',\n    marginLeft: '15px',\n    marginRight: '15px',\n};\n\nexport class EditBar extends Component {\n    state = {\n        translationDialogIsOpen: false,\n        dashboardModel: undefined,\n        confirmDeleteDialogOpen: false,\n        redirectUrl: undefined,\n    };\n\n    onConfirmDelete = () => {\n        this.setState({ confirmDeleteDialogOpen: true });\n    };\n\n    onSave = () => {\n        this.props.onSave().then(newId => {\n            this.setState({ redirectUrl: `/${newId}` });\n        });\n    };\n\n    onDiscard = () => {\n        this.props.onDiscardChanges();\n        const redirectUrl = this.props.dashboardId\n            ? `/${this.props.dashboardId}`\n            : '/';\n        this.setState({ redirectUrl });\n    };\n\n    onContinueEditing = () => {\n        this.setState({ confirmDeleteDialogOpen: false });\n    };\n\n    onDeleteConfirmed = () => {\n        this.setState({ confirmDeleteDialogOpen: false });\n        this.props.onDelete(this.props.dashboardId).then(() => {\n            this.setState({ redirectUrl: '/' });\n        });\n    };\n\n    onTranslationsSaved = async translations => {\n        if (translations && translations.length) {\n            const dbLocale = await this.context.d2.currentUser.userSettings.get(\n                'keyDbLocale'\n            );\n\n            const translation = translations.find(\n                t => t.locale === dbLocale && t.property === 'NAME'\n            );\n\n            if (translation && translation.value) {\n                this.props.onTranslate(\n                    this.props.dashboardId,\n                    translation.value\n                );\n            }\n        }\n    };\n\n    fetchDashboardModel = () => {\n        if (this.props.dashboardId && !this.state.dashboardModel) {\n            apiFetchDashboard(this.props.dashboardId).then(dashboardModel =>\n                this.setState({ dashboardModel })\n            );\n        }\n    };\n\n    componentDidMount() {\n        this.fetchDashboardModel();\n    }\n\n    componentDidUpdate() {\n        this.fetchDashboardModel();\n    }\n\n    toggleTranslationDialog = () => {\n        this.setState({\n            translationDialogIsOpen: !this.state.translationDialogIsOpen,\n        });\n    };\n\n    confirmDeleteDialog = () =>\n        this.props.deleteAccess && this.props.dashboardId ? (\n            <ConfirmDeleteDialog\n                dashboardName={this.props.dashboardName}\n                onDeleteConfirmed={this.onDeleteConfirmed}\n                onContinueEditing={this.onContinueEditing}\n                open={this.state.confirmDeleteDialogOpen}\n            />\n        ) : null;\n\n    translationDialog = () =>\n        this.state.dashboardModel && this.state.dashboardModel.id ? (\n            <TranslationDialog\n                className=\"translation-dialog\"\n                d2={this.context.d2}\n                open={this.state.translationDialogIsOpen}\n                onRequestClose={this.toggleTranslationDialog}\n                objectToTranslate={this.state.dashboardModel}\n                fieldsToTranslate={['name', 'description']}\n                // TODO handle messages in snackbar\n                onTranslationSaved={this.onTranslationsSaved}\n                onTranslationError={err =>\n                    console.log('translation update error', err)\n                }\n            />\n        ) : null;\n\n    render() {\n        if (this.state.redirectUrl) {\n            return <Redirect to={this.state.redirectUrl} />;\n        }\n\n        const { dashboardId, deleteAccess, updateAccess } = this.props;\n        const controlBarHeight = getControlBarHeight(MIN_ROW_COUNT);\n\n        const discardBtnText = updateAccess\n            ? i18n.t('Exit without saving')\n            : i18n.t('Go to dashboards');\n\n        return (\n            <Fragment>\n                <ControlBar height={controlBarHeight} editMode={true}>\n                    <div style={buttonBarStyle}>\n                        {updateAccess ? (\n                            <div className={classes.leftControls}>\n                                <span style={{ marginRight: '15px' }}>\n                                    <Button primary onClick={this.onSave}>\n                                        {i18n.t('Save changes')}\n                                    </Button>\n                                </span>\n\n                                {dashboardId ? (\n                                    <span style={{ marginRight: '15px' }}>\n                                        <Button\n                                            onClick={\n                                                this.toggleTranslationDialog\n                                            }\n                                        >\n                                            {i18n.t('Translate')}\n                                        </Button>\n                                    </span>\n                                ) : null}\n                                {dashboardId && deleteAccess ? (\n                                    <Button onClick={this.onConfirmDelete}>\n                                        {i18n.t('Delete')}\n                                    </Button>\n                                ) : null}\n                            </div>\n                        ) : null}\n\n                        <div className={classes.rightControls}>\n                            <Button secondary onClick={this.onDiscard}>\n                                {discardBtnText}\n                            </Button>\n                        </div>\n                    </div>\n                </ControlBar>\n                {this.translationDialog()}\n                {this.confirmDeleteDialog()}\n            </Fragment>\n        );\n    }\n}\n\nEditBar.propTypes = {\n    dashboardId: PropTypes.string,\n    dashboardName: PropTypes.string,\n    deleteAccess: PropTypes.bool,\n    updateAccess: PropTypes.bool,\n    onDelete: PropTypes.func,\n    onDiscardChanges: PropTypes.func,\n    onSave: PropTypes.func,\n    onTranslate: PropTypes.func,\n};\n\nEditBar.contextTypes = {\n    d2: PropTypes.object,\n};\n\nconst mapStateToProps = state => {\n    const dashboard = sGetEditDashboardRoot(state);\n\n    let deleteAccess;\n    let updateAccess;\n    if (sGetIsNewDashboard(state)) {\n        deleteAccess = true;\n        updateAccess = true;\n    } else {\n        updateAccess = dashboard.access ? dashboard.access.update : false;\n        deleteAccess = dashboard.access ? dashboard.access.delete : false;\n    }\n\n    return {\n        dashboardId: dashboard.id,\n        dashboardName: dashboard.name,\n        deleteAccess,\n        updateAccess,\n    };\n};\n\nconst mapDispatchToProps = dispatch => ({\n    onSave: () => dispatch(tSaveDashboard()).then(id => id),\n    onDelete: id => dispatch(tDeleteDashboard(id)),\n    onDiscardChanges: () => dispatch(acClearEditDashboard()),\n    onTranslate: (id, value) => dispatch(acSetDashboardDisplayName(id, value)),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(EditBar);\n","import React, { Fragment, Component } from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\n\nimport { acSetEditDashboard } from '../../actions/editDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n    sDashboardsIsFetching,\n} from '../../reducers/dashboards';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport DashboardContent from './DashboardContent';\nimport EditBar from '../ControlBar/EditBar';\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nexport const Content = ({ updateAccess }) => {\n    return updateAccess ? (\n        <DashboardContent editMode={true} />\n    ) : (\n        <NoContentMessage text={i18n.t('No access')} />\n    );\n};\n\nContent.propTypes = {\n    updateAccess: PropTypes.bool,\n};\nexport class EditDashboard extends Component {\n    state = {\n        initialized: false,\n    };\n\n    initEditDashboard = () => {\n        if (this.props.dashboard) {\n            this.setState({ initialized: true });\n            this.props.setEditDashboard(this.props.dashboard, this.props.items);\n        }\n    };\n\n    componentDidMount() {\n        this.initEditDashboard();\n    }\n\n    componentDidUpdate() {\n        if (!this.state.initialized) {\n            this.initEditDashboard();\n        }\n    }\n\n    getDashboardContent = () => {\n        const contentNotReady =\n            !this.props.dashboardsLoaded || this.props.id === null;\n\n        return (\n            <div className=\"dashboard-wrapper\">\n                {contentNotReady ? null : (\n                    <Content updateAccess={this.props.updateAccess} />\n                )}\n            </div>\n        );\n    };\n\n    render() {\n        return (\n            <Fragment>\n                <EditBar />\n                <DashboardVerticalOffset editMode={true} />\n                {this.getDashboardContent()}\n            </Fragment>\n        );\n    }\n}\n\nEditDashboard.propTypes = {\n    dashboard: PropTypes.object,\n    dashboardsLoaded: PropTypes.bool,\n    id: PropTypes.string,\n    items: PropTypes.array,\n    setEditDashboard: PropTypes.func,\n    updateAccess: PropTypes.bool,\n};\n\nconst mapStateToProps = state => {\n    const id = sGetSelectedId(state);\n    const dashboard = id ? sGetDashboardById(state, id) : null;\n\n    const updateAccess =\n        dashboard && dashboard.access ? dashboard.access.update : false;\n\n    return {\n        dashboard,\n        id,\n        updateAccess,\n        items: sGetDashboardItems(state),\n        dashboardsLoaded: !sDashboardsIsFetching(state),\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        setEditDashboard: acSetEditDashboard,\n    }\n)(EditDashboard);\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { acSetEditNewDashboard } from '../../actions/editDashboard';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport EditBar from '../ControlBar/EditBar';\nimport DashboardContent from './DashboardContent';\n\nclass NewDashboard extends Component {\n    componentDidMount() {\n        this.props.setNewDashboard();\n    }\n\n    render() {\n        return (\n            <Fragment>\n                <EditBar />\n                <DashboardVerticalOffset editMode={true} />\n                <div className=\"dashboard-wrapper\">\n                    <DashboardContent editMode={true} />\n                </div>\n            </Fragment>\n        );\n    }\n}\n\nNewDashboard.propTypes = {\n    setNewDashboard: PropTypes.func,\n};\n\nexport default connect(\n    null,\n    {\n        setNewDashboard: acSetEditNewDashboard,\n    }\n)(NewDashboard);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { tSelectDashboard } from '../../actions/dashboards';\nimport { sDashboardsIsFetching } from '../../reducers/dashboards';\nimport { EDIT, NEW } from './dashboardModes';\nimport ViewDashboard from './ViewDashboard';\nimport EditDashboard from './EditDashboard';\nimport NewDashboard from './NewDashboard';\n\nclass Dashboard extends Component {\n    setDashboard = () => {\n        if (this.props.dashboardsLoaded) {\n            const id = this.props.match.params.dashboardId || null;\n\n            this.props.selectDashboard(id);\n\n            this.scrollToTop();\n        }\n    };\n\n    scrollToTop = () => {\n        window.scrollTo(0, 0);\n    };\n\n    componentDidMount() {\n        this.setDashboard();\n    }\n\n    componentDidUpdate() {\n        this.setDashboard();\n    }\n\n    render() {\n        switch (this.props.mode) {\n            case EDIT:\n                return <EditDashboard />;\n            case NEW:\n                return <NewDashboard />;\n            default:\n                return <ViewDashboard />;\n        }\n    }\n}\n\nDashboard.propTypes = {\n    dashboardsLoaded: PropTypes.bool,\n    match: PropTypes.object,\n    mode: PropTypes.string,\n    selectDashboard: PropTypes.func,\n};\n\nconst mapStateToProps = state => {\n    return { dashboardsLoaded: !sDashboardsIsFetching(state) };\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        selectDashboard: tSelectDashboard,\n    }\n)(Dashboard);\n","export const EDIT = 'edit';\nexport const NEW = 'new';\nexport const VIEW = 'view';\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { HeaderBar } from '@dhis2/ui-widgets';\nimport { CssVariables } from '@dhis2/ui-core';\n\nimport { EDIT, VIEW, NEW } from './Dashboard/dashboardModes';\nimport { acReceivedUser } from '../actions/user';\nimport { tFetchDashboards } from '../actions/dashboards';\nimport { tSetControlBarRows } from '../actions/controlBar';\nimport { tSetDimensions } from '../actions/dimensions';\nimport Dashboard from './Dashboard/Dashboard';\nimport SnackbarMessage from './SnackbarMessage/SnackbarMessage';\n\nimport 'typeface-roboto';\nimport './App.css';\n\nexport class App extends Component {\n    componentDidMount() {\n        this.props.setCurrentUser(this.props.d2.currentUser);\n        this.props.fetchDashboards();\n        this.props.setControlBarRows();\n        this.props.setDimensions(this.props.d2);\n    }\n\n    getChildContext() {\n        return { baseUrl: this.props.baseUrl, i18n, d2: this.props.d2 };\n    }\n\n    render() {\n        return (\n            <>\n                <CssVariables colors spacers />\n                <div className=\"app-wrapper\">\n                    <div className=\"dashboard-header-bar\">\n                        <HeaderBar appName={i18n.t('Dashboard')} />\n                    </div>\n                    <Router>\n                        <Switch>\n                            <Route\n                                exact\n                                path=\"/\"\n                                render={props => (\n                                    <Dashboard {...props} mode={VIEW} />\n                                )}\n                            />\n                            <Route\n                                exact\n                                path=\"/new\"\n                                render={props => (\n                                    <Dashboard {...props} mode={NEW} />\n                                )}\n                            />\n                            <Route\n                                exact\n                                path=\"/:dashboardId\"\n                                render={props => (\n                                    <Dashboard {...props} mode={VIEW} />\n                                )}\n                            />\n                            <Route\n                                exact\n                                path=\"/:dashboardId/edit\"\n                                render={props => (\n                                    <Dashboard {...props} mode={EDIT} />\n                                )}\n                            />\n                        </Switch>\n                    </Router>\n                    <SnackbarMessage />\n                </div>\n            </>\n        );\n    }\n}\n\nApp.propTypes = {\n    fetchDashboards: PropTypes.func.isRequired,\n    setControlBarRows: PropTypes.func.isRequired,\n    setCurrentUser: PropTypes.func.isRequired,\n    setDimensions: PropTypes.func.isRequired,\n    baseUrl: PropTypes.string,\n    d2: PropTypes.object,\n};\n\nApp.childContextTypes = {\n    baseUrl: PropTypes.string,\n    i18n: PropTypes.object,\n    d2: PropTypes.object,\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setCurrentUser: currentUser => dispatch(acReceivedUser(currentUser)),\n        fetchDashboards: () => dispatch(tFetchDashboards()),\n        setControlBarRows: () => dispatch(tSetControlBarRows()),\n        setDimensions: d2 => dispatch(tSetDimensions(d2)),\n    };\n};\n\nexport default connect(\n    null,\n    mapDispatchToProps\n)(App);\n","import { RECEIVED_USER } from '../reducers/user';\n\nexport const acReceivedUser = value => ({\n    type: RECEIVED_USER,\n    value,\n});\n","//------------------------------------------------------------------------------\n// <auto-generated>\n// This code was generated by d2-i18n-generate.\n//\n// Changes to this file may cause incorrect behavior and will be lost if\n// the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\nimport i18n from '@dhis2/d2-i18n';\nimport moment from 'moment';\nimport 'moment/locale/ar';\nimport 'moment/locale/es';\nimport 'moment/locale/fr';\nimport 'moment/locale/lo';\nimport 'moment/locale/pt';\nimport 'moment/locale/ru';\nimport 'moment/locale/sv';\nimport 'moment/locale/tg';\nimport 'moment/locale/uk';\nimport 'moment/locale/ur';\nimport 'moment/locale/vi';\nimport 'moment/locale/zh-cn';\n\nimport arTranslations from './ar/translations.json';\nimport daTranslations from './da/translations.json';\nimport enTranslations from './en/translations.json';\nimport esTranslations from './es/translations.json';\nimport frTranslations from './fr/translations.json';\nimport idTranslations from './id/translations.json';\nimport kmTranslations from './km/translations.json';\nimport loTranslations from './lo/translations.json';\nimport myTranslations from './my/translations.json';\nimport prsTranslations from './prs/translations.json';\nimport psTranslations from './ps/translations.json';\nimport ptTranslations from './pt/translations.json';\nimport pt_BRTranslations from './pt_BR/translations.json';\nimport ruTranslations from './ru/translations.json';\nimport svTranslations from './sv/translations.json';\nimport tetTranslations from './tet/translations.json';\nimport tgTranslations from './tg/translations.json';\nimport ukTranslations from './uk/translations.json';\nimport urTranslations from './ur/translations.json';\nimport viTranslations from './vi/translations.json';\nimport zhTranslations from './zh/translations.json';\nimport zh_CNTranslations from './zh_CN/translations.json';\n\nconst namespace = 'dashboards-app';\nmoment.locale('en');\n\ni18n.addResources('ar', namespace, arTranslations);\ni18n.addResources('da', namespace, daTranslations);\ni18n.addResources('en', namespace, enTranslations);\ni18n.addResources('es', namespace, esTranslations);\ni18n.addResources('fr', namespace, frTranslations);\ni18n.addResources('id', namespace, idTranslations);\ni18n.addResources('km', namespace, kmTranslations);\ni18n.addResources('lo', namespace, loTranslations);\ni18n.addResources('my', namespace, myTranslations);\ni18n.addResources('prs', namespace, prsTranslations);\ni18n.addResources('ps', namespace, psTranslations);\ni18n.addResources('pt', namespace, ptTranslations);\ni18n.addResources('pt_BR', namespace, pt_BRTranslations);\ni18n.addResources('ru', namespace, ruTranslations);\ni18n.addResources('sv', namespace, svTranslations);\ni18n.addResources('tet', namespace, tetTranslations);\ni18n.addResources('tg', namespace, tgTranslations);\ni18n.addResources('uk', namespace, ukTranslations);\ni18n.addResources('ur', namespace, urTranslations);\ni18n.addResources('vi', namespace, viTranslations);\ni18n.addResources('zh', namespace, zhTranslations);\ni18n.addResources('zh_CN', namespace, zh_CNTranslations);\n\ni18n.setDefaultNamespace(namespace);\ni18n.changeLanguage('en');\n\nexport default i18n;\n","/** @module reducers/selected */\nimport { validateReducer } from '../modules/util';\n\nexport const SET_STYLE = 'SET_STYLE';\n\nexport const DEFAULT_STATE_STYLE = 'LIST';\n\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\nconst style = (state = DEFAULT_STATE_STYLE, action) => {\n    switch (action.type) {\n        case SET_STYLE:\n            return validateReducer(action.value, DEFAULT_STATE_STYLE);\n        default:\n            return state;\n    }\n};\n\nexport default style;\n\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\nexport const sGetStyleRoot = state => state.style;\n","import { combineReducers } from 'redux';\nimport arraySort from 'd2-utilizr/lib/arraySort';\n\nimport dashboards, { sGetDashboardsRoot } from './dashboards';\nimport selected from './selected';\nimport dashboardsFilter, {\n    ownerData,\n    sGetFilterName,\n    sGetFilterOrder,\n    sGetFilterOwner,\n} from './dashboardsFilter';\nimport controlBar from './controlBar';\nimport visualizations from './visualizations';\nimport currentVisualizationViews from './currentVisualizationViews';\nimport editDashboard from './editDashboard';\nimport messages from './messages';\nimport user from './user';\nimport snackbar from './snackbar';\nimport itemFilters from './itemFilters';\nimport editItemFilters from './editItemFilters';\nimport style from './style';\nimport dimensions from './dimensions';\nimport settings from './settings';\nimport activeModalDimension from './activeModalDimension';\n\nconst USER = 'system';\n\n// Reducers\n\nexport default combineReducers({\n    dashboards,\n    selected,\n    dashboardsFilter,\n    controlBar,\n    visualizations,\n    currentVisualizationViews,\n    messages,\n    user,\n    editDashboard,\n    itemFilters,\n    editItemFilters,\n    style,\n    snackbar,\n    dimensions,\n    settings,\n    activeModalDimension,\n});\n\n// Map constants to data\nconst mapConstToData = {\n    NAME: 'name',\n    ITEMS: 'numberOfItems',\n    CREATED: 'created',\n    OWNER: 'owner',\n};\n\n// Selectors\n\n// Filter dashboards by name\nexport const sFilterDashboardsByName = (dashboards, filter) =>\n    dashboards.filter(d =>\n        d.displayName.toLowerCase().includes(filter.toLowerCase())\n    );\n\n// Filter dashboards by owner, TODO FIXME\nexport const sFilterDashboardsByOwner = (dashboards, filter) => {\n    const ME = ownerData[1]; // TODO\n    const OTHERS = ownerData[2]; // TODO\n\n    switch (filter) {\n        case ME:\n            return dashboards.filter(d => d.owner === USER);\n        case OTHERS:\n            return dashboards.filter(d => d.owner !== USER);\n        default:\n            return dashboards;\n    }\n};\n\n// Filter dashboards by order\nexport const sFilterDashboardsByOrder = (dashboards, filter) => {\n    const filterValues = filter.split(':');\n\n    const key = filterValues[0];\n    const direction = filterValues[1];\n\n    return arraySort(dashboards, direction, mapConstToData[key]);\n};\n\n// Selectors dependency level 2\n\n// Get filtered dashboards\nexport const sGetFilteredDashboards = state => {\n    const dashboards = sGetDashboardsRoot(state);\n\n    const nameFilter = sGetFilterName(state);\n    const ownerFilter = sGetFilterOwner(state);\n    const orderFilter = sGetFilterOrder(state);\n\n    return sFilterDashboardsByOrder(\n        sFilterDashboardsByName(\n            sFilterDashboardsByOwner(dashboards, ownerFilter),\n            nameFilter\n        ),\n        orderFilter\n    );\n};\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport reducer from './reducers';\n\nconst configureStore = () => {\n    const middleware = [thunk];\n\n    // Enable Redux devtools if extension is installed instead of redux-logger\n    const composeEnhancers =\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n    if (\n        !window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ &&\n        process.env.NODE_ENV !== 'production'\n    ) {\n        middleware.push(createLogger());\n    }\n\n    return createStore(\n        reducer,\n        composeEnhancers(applyMiddleware(...middleware))\n    );\n};\n\nexport default configureStore;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport { init as d2Init, config, getManifest, getUserSettings } from 'd2';\nimport dhis2theme from '@dhis2/d2-ui-core/theme/mui3.theme';\n\nimport { Provider as RuntimeProvider } from '@dhis2/app-runtime';\nimport { CssReset } from '@dhis2/ui-core';\n\nimport App from './components/App';\nimport './index.css';\nimport i18n from './locales';\nimport configureStore from './configureStore';\n\nconst muiTheme = () => createMuiTheme(dhis2theme);\n\nconst configI18n = userSettings => {\n    const uiLocale = userSettings.keyUiLocale;\n\n    if (uiLocale && uiLocale !== 'en') {\n        config.i18n.sources.add(`./i18n/i18n_module_${uiLocale}.properties`);\n    }\n\n    config.i18n.sources.add('./i18n/i18n_module_en.properties');\n    i18n.changeLanguage(uiLocale);\n};\n\nconst init = async () => {\n    const manifest = await getManifest('./manifest.webapp');\n\n    // log app info\n    console.info(\n        `Dashboards app, v${manifest.version}, ${\n            manifest.manifest_generated_at\n        }`\n    );\n\n    const isProd = process.env.NODE_ENV === 'production';\n\n    if (\n        !isProd &&\n        (!process.env.REACT_APP_DHIS2_BASE_URL ||\n            !process.env.REACT_APP_DHIS2_AUTHORIZATION)\n    ) {\n        throw new Error(\n            'Missing env variables REACT_APP_DHIS2_BASE_URL and REACT_APP_DHIS2_AUTHORIZATION'\n        );\n    }\n\n    // api config\n    const baseUrl = isProd\n        ? manifest.activities.dhis.href\n        : process.env.REACT_APP_DHIS2_BASE_URL;\n    const authorization = process.env.REACT_APP_DHIS2_AUTHORIZATION;\n\n    config.baseUrl = `${baseUrl}/api/${manifest.dhis2.apiVersion}`;\n    config.headers = isProd ? null : { Authorization: authorization };\n    config.schemas = [\n        'chart',\n        'map',\n        'report',\n        'reportTable',\n        'eventChart',\n        'eventReport',\n        'dashboard',\n        'organisationUnit',\n        'userGroup',\n    ];\n\n    getUserSettings()\n        .then(configI18n)\n        .then(() => d2Init(config))\n        .then(initializedD2 => {\n            ReactDOM.render(\n                <RuntimeProvider\n                    config={{\n                        baseUrl: baseUrl,\n                        apiVersion: manifest.dhis2.apiVersion,\n                    }}\n                >\n                    <CssReset />\n                    <Provider store={configureStore()}>\n                        <MuiThemeProvider theme={muiTheme()}>\n                            <App baseUrl={baseUrl} d2={initializedD2} />\n                        </MuiThemeProvider>\n                    </Provider>\n                </RuntimeProvider>,\n                document.getElementById('root')\n            );\n        });\n};\n\ninit();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ControlBar_root__3LaTt\",\"content\":\"ControlBar_content__1r98-\",\"draghandle\":\"ControlBar_draghandle__1VWa0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ClearButton_button__2yjcV\",\"icon\":\"ClearButton_icon__1fqj8\"};","import isObject from 'lodash/isObject';\nimport { VIS_TYPE_COLUMN, VIS_TYPE_PIVOT_TABLE } from '@dhis2/analytics';\nimport { apiFetchFavorite, getMapFields } from '../../../api/metadata';\nimport {\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_REPORT,\n    EVENT_CHART,\n    itemTypeMap,\n} from '../../../modules/itemTypes';\nimport { getBaseUrl, getWithoutId } from '../../../modules/util';\nimport { getGridItemDomId } from '../../ItemGrid/gridUtil';\n\n//external plugins\nconst itemTypeToExternalPlugin = {\n    [MAP]: 'mapPlugin',\n    [EVENT_REPORT]: 'eventReportPlugin',\n    [EVENT_CHART]: 'eventChartPlugin',\n};\nconst hasIntegratedPlugin = type => [CHART, REPORT_TABLE].includes(type);\n\nconst getPlugin = type => {\n    if (hasIntegratedPlugin(type)) {\n        return true;\n    }\n    const pluginName = itemTypeToExternalPlugin[type];\n\n    return global[pluginName];\n};\n\nexport const THEMATIC_LAYER = 'thematic';\n\nexport const pluginIsAvailable = (item = {}, visualization = {}) => {\n    const type = visualization.activeType || item.type;\n\n    return !!getPlugin(type);\n};\n\nexport const extractFavorite = item => {\n    if (!isObject(item)) {\n        return null;\n    }\n\n    const propName = itemTypeMap[item.type].propName;\n\n    return (\n        item[propName] ||\n        (item.reportTable ||\n            item.chart ||\n            item.map ||\n            item.eventReport ||\n            item.eventChart ||\n            {})\n    );\n};\n\nexport const extractMapView = map =>\n    map.mapViews && map.mapViews.find(mv => mv.layer.includes(THEMATIC_LAYER));\n\nexport const loadPlugin = (plugin, config, credentials) => {\n    if (!(plugin && plugin.load)) {\n        return;\n    }\n\n    plugin.url = credentials.baseUrl;\n    plugin.loadingIndicator = true;\n    plugin.dashboard = true;\n    if (credentials.auth) {\n        plugin.auth = credentials.auth;\n    }\n    plugin.load(config);\n};\n\nexport const getId = item => extractFavorite(item).id;\nexport const getName = item => extractFavorite(item).name;\nexport const getDescription = item => extractFavorite(item).description;\nexport const getLink = (item, d2) => {\n    const baseUrl = getBaseUrl(d2);\n    const appUrl = itemTypeMap[item.type].appUrl(getId(item));\n\n    return `${baseUrl}/${appUrl}`;\n};\n\nexport const load = async (\n    item,\n    visualization,\n    { credentials, activeType }\n) => {\n    const config = {\n        ...visualization,\n        el: getGridItemDomId(item.id),\n    };\n\n    const type = activeType || item.type;\n    const plugin = getPlugin(type);\n\n    loadPlugin(plugin, config, credentials);\n};\n\nexport const fetch = async item => {\n    const fetchedFavorite = await apiFetchFavorite(getId(item), item.type, {\n        fields: item.type === MAP ? getMapFields() : null,\n    });\n\n    return fetchedFavorite;\n};\n\nexport const resize = item => {\n    const plugin = getPlugin(item.type);\n\n    if (plugin && plugin.resize) {\n        plugin.resize(getGridItemDomId(item.id));\n    }\n};\n\nexport const unmount = (item, activeType) => {\n    const plugin = getPlugin(activeType);\n\n    if (plugin && plugin.unmount) {\n        plugin.unmount(getGridItemDomId(item.id));\n    }\n};\n\nexport const getVisualizationConfig = (\n    visualization,\n    originalType,\n    activeType\n) => {\n    if (originalType === MAP && originalType !== activeType) {\n        const extractedMapView = extractMapView(visualization);\n\n        if (extractedMapView === undefined) {\n            return null;\n        }\n\n        return getWithoutId({\n            ...visualization,\n            ...extractedMapView,\n            mapViews: undefined,\n            type: activeType === CHART ? VIS_TYPE_COLUMN : VIS_TYPE_PIVOT_TABLE,\n        });\n    } else if (originalType === REPORT_TABLE && activeType === CHART) {\n        return getWithoutId({ ...visualization, type: VIS_TYPE_COLUMN });\n    } else if (originalType === CHART && activeType === REPORT_TABLE) {\n        return getWithoutId({\n            ...visualization,\n            type: VIS_TYPE_PIVOT_TABLE,\n        });\n    }\n\n    return getWithoutId(visualization);\n};\n","import isFunction from 'd2-utilizr/lib/isFunction';\n\nimport { orObject } from '../../modules/util';\n\n// Dimensions for the react-grid-layout\n\nexport const GRID_COMPACT_TYPE = 'vertical'; // vertical | horizonal | null\nexport const GRID_ROW_HEIGHT = 10;\nconst GRID_COLUMN_WIDTH_PX = 20;\nconst GRID_LAYOUT = 'FLEXIBLE'; // FIXED | FLEXIBLE\nexport const MARGIN = [10, 10];\n\nexport const NEW_ITEM_SHAPE = { x: 0, y: 0, w: 20, h: 29 };\nexport const ITEM_MIN_HEIGHT = 4;\n\n// Dimensions for getShape\n\nconst NUMBER_OF_ITEM_COLS = 2;\nconst GRID_COLUMNS = 60;\n\nexport const getGridColumns = () => {\n    switch (GRID_LAYOUT) {\n        case 'FLEXIBLE':\n            return GRID_COLUMNS;\n        case 'FIXED':\n            return Math.floor((window.innerWidth - 20) / GRID_COLUMN_WIDTH_PX);\n        default:\n            return GRID_COLUMNS;\n    }\n};\n\n// isNonNegativeInteger\n\nconst isNonNegativeInteger = x => Number.isInteger(x) && x >= 0;\n\n// Does the item have all the shape properties?\n\nexport const hasShape = item =>\n    isNonNegativeInteger(item.x) &&\n    isNonNegativeInteger(item.y) &&\n    isNonNegativeInteger(item.w) &&\n    isNonNegativeInteger(item.h);\n\n// returns a rectangular grid block dimensioned with x, y, w, h in grid units.\n// based on a grid with 3 items across\nexport const getShape = i => {\n    if (!isNonNegativeInteger(i)) {\n        throw new Error('Invalid grid block number');\n    }\n\n    const col = i % NUMBER_OF_ITEM_COLS;\n    const row = Math.floor(i / NUMBER_OF_ITEM_COLS);\n    const itemWidth = Math.floor((GRID_COLUMNS - 1) / NUMBER_OF_ITEM_COLS);\n    const itemHeight = GRID_ROW_HEIGHT * 2;\n\n    return {\n        x: col * itemWidth,\n        y: row * itemHeight,\n        w: itemWidth,\n        h: itemHeight,\n    };\n};\n\n/**\n * Calculates the grid item's original height in pixels based\n * on the height in grid units. This calculation\n * is copied directly from react-grid-layout GridItem.js (calcPosition)\n *\n * @param {Object} item item containing shape (x, y, w, h)\n */\nconst getOriginalHeight = item => {\n    const originalHeight = Math.round(\n        GRID_ROW_HEIGHT * item.h + Math.max(0, item.h - 1) * MARGIN[1]\n    );\n\n    return { originalHeight };\n};\n\n/**\n * Returns an array of items containing the x, y, w, h dimensions\n * and the item's originalheight in pixels\n * @function\n * @param {Array} items\n * @returns {Array}\n */\n\nexport const withShape = items =>\n    items.map((item, index) => {\n        const itemWithShape = hasShape(item)\n            ? item\n            : Object.assign({}, item, getShape(index));\n\n        return Object.assign(\n            {},\n            itemWithShape,\n            getOriginalHeight(itemWithShape)\n        );\n    });\n\nexport const getGridItemDomId = id => `item-${id}`;\n\nexport function onItemResize(id) {\n    const el = orObject(document.querySelector(`#${getGridItemDomId(id)}`));\n    if (isFunction(el.setViewportSize))\n        setTimeout(\n            () => el.setViewportSize(el.clientWidth - 5, el.clientHeight - 5),\n            10\n        );\n}\n"],"sourceRoot":""}
{"version":3,"sources":["D2App/components/ItemSelector/styles/CategorizedMenuGroup.module.css","D2App/components/ItemSelector/styles/ItemSelector.module.css","D2App/components/TitleBar/styles/EditTitleBar.module.css","D2App/components/TitleBar/styles/ViewTitleBar.module.css","D2App/components/Item/VisualizationItem/Visualization/styles/NoVisualizationMessage.module.css","D2App/components/Item/VisualizationItem/Visualization/styles/LoadingMask.module.css","D2App/components/Item/VisualizationItem/styles/FatalErrorBoundary.module.css","D2App/components/Item/ItemHeader/styles/DeleteItemButton.module.css","D2App/components/Item/ItemHeader/styles/PrintItemInfo.module.css","D2App/components/Item/VisualizationItem/styles/ItemFooter.module.css","D2App/components/Item/ListItem/Item.module.css","D2App/components/Item/PrintTitlePageItem/styles/Item.module.css","D2App/components/FilterBar/styles/FilterBar.module.css","D2App/components/ControlBar/styles/ConfirmDeleteDialog.module.css","D2App/components/Dashboard/styles/PrintInfo.module.css","D2App/components/Dashboard/styles/PrintActionsBar.module.css","D2App/components/Dashboard/styles/PrintLayoutDashboard.module.css","D2App/components/Dashboard/styles/PrintDashboard.module.css","D2App/components/WindowDimensionsProvider.js","D2App/components/ControlBar/ControlBar.js","D2App/icons/Star.js","D2App/api/dataStatistics.js","D2App/components/ControlBar/DashboardItemChip.js","D2App/icons/AddCircle.js","D2App/icons/Search.js","D2App/icons/Clear.js","D2App/components/ControlBar/ClearButton.js","D2App/reducers/dashboardsFilter.js","D2App/components/ControlBar/Filter.js","D2App/actions/dashboardsFilter.js","D2App/components/ControlBar/ShowMoreButton.js","D2App/components/ControlBar/controlBarDimensions.js","D2App/reducers/controlBar.js","D2App/modules/uiBackendItemConverter.js","D2App/reducers/dashboards.js","D2App/reducers/selected.js","D2App/api/userDataStore.js","D2App/api/controlBar.js","D2App/actions/controlBar.js","D2App/components/ControlBar/DashboardsBar.js","D2App/components/Dashboard/DashboardVerticalOffset.js","D2App/widgets/NoContentMessage.js","D2App/components/ItemSelector/ItemSearchField.js","D2App/components/ItemSelector/HeaderMenuItem.js","D2App/icons/Launch.js","D2App/components/ItemSelector/ContentMenuItem.js","D2App/reducers/editDashboard.js","D2App/api/metadata.js","D2App/api/index.js","D2App/api/dashboards.js","D2App/api/editDashboard.js","D2App/reducers/user.js","D2App/actions/dashboards.js","D2App/reducers/dimensions.js","D2App/reducers/itemFilters.js","D2App/actions/itemFilters.js","D2App/reducers/messages.js","D2App/api/messages.js","D2App/components/Item/MessagesItem/actions.js","D2App/reducers/alert.js","D2App/actions/alert.js","D2App/reducers/visualizations.js","D2App/actions/visualizations.js","D2App/api/description.js","D2App/actions/selected.js","D2App/api/localStorage.js","D2App/actions/editDashboard.js","D2App/components/ItemSelector/selectableItems.js","D2App/components/ItemSelector/CategorizedMenuGroup.js","D2App/components/ItemSelector/actions.js","D2App/components/ItemSelector/SinglesMenuGroup.js","D2App/components/ItemSelector/ItemSelector.js","D2App/components/TitleBar/EditTitleBar.js","D2App/components/Item/VisualizationItem/assets/icons.js","D2App/components/ItemFilter/FilterDialog.js","D2App/reducers/settings.js","D2App/reducers/activeModalDimension.js","D2App/actions/activeModalDimension.js","D2App/components/ItemFilter/FilterSelector.js","D2App/components/TitleBar/ViewTitleBar.js","D2App/components/TitleBar/TitleBar.js","D2App/components/Item/VisualizationItem/Visualization/NoVisualizationMessage.js","D2App/components/Item/VisualizationItem/Visualization/DefaultPlugin.js","D2App/components/Item/VisualizationItem/Visualization/MapPlugin.js","D2App/components/Item/VisualizationItem/Visualization/LoadingMask.js","D2App/components/Item/VisualizationItem/Visualization/getFilteredVisualization.js","D2App/components/Item/VisualizationItem/Visualization/getVisualizationConfig.js","D2App/modules/memoizeOne.js","D2App/components/Item/VisualizationItem/Visualization/Visualization.js","D2App/components/Item/VisualizationItem/FatalErrorBoundary.js","D2App/components/Item/ItemHeader/ViewItemActions.js","D2App/components/Item/ItemHeader/DeleteItemButton.js","D2App/components/Item/ItemHeader/EditItemActions.js","D2App/icons/Info.js","D2App/components/Item/ItemHeader/PrintItemInfo.js","D2App/components/Dashboard/dashboardModes.js","D2App/components/Item/ItemHeader/ItemHeader.js","D2App/components/Item/VisualizationItem/ItemHeaderButtons.js","D2App/components/Item/VisualizationItem/ItemFooter.js","D2App/components/Item/VisualizationItem/Item.js","D2App/widgets/Line.js","D2App/components/Item/MessagesItem/Item.js","D2App/components/Item/NotSupportedItem/Item.js","D2App/icons/Description.js","D2App/icons/Delete.js","D2App/components/Item/ListItem/Item.js","D2App/components/Item/ListItem/actions.js","D2App/reducers/printDashboard.js","D2App/components/Item/TextItem/Item.js","D2App/components/Item/AppItem/Item.js","D2App/components/Item/SpacerItem/Item.js","D2App/components/Item/PageBreakItem/Item.js","D2App/components/Item/PrintTitlePageItem/Item.js","D2App/components/Item/Item.js","D2App/components/Item/ProgressiveLoadingContainer.js","D2App/components/ItemGrid/ViewItemGrid.js","D2App/components/FilterBar/FilterBadge.js","D2App/components/FilterBar/FilterBar.js","D2App/reducers/windowHeight.js","D2App/actions/printDashboard.js","D2App/components/Dashboard/ViewDashboard.js","D2App/components/ItemGrid/EditItemGrid.js","D2App/components/ControlBar/ConfirmDeleteDialog.js","D2App/components/ControlBar/EditBar.js","D2App/components/Dashboard/PrintInfo.js","D2App/icons/LessHorizontal.js","D2App/components/Dashboard/PrintActionsBar.js","D2App/modules/printUtils.js","D2App/components/ItemGrid/PrintLayoutItemGrid.js","D2App/components/Dashboard/PrintLayoutDashboard.js","D2App/components/Dashboard/EditDashboard.js","D2App/components/Dashboard/NewDashboard.js","D2App/components/ItemGrid/PrintItemGrid.js","D2App/components/Dashboard/PrintDashboard.js","D2App/actions/windowHeight.js","D2App/components/Dashboard/Dashboard.js","D2App/components/AlertBar/AlertBar.js","D2App/actions/user.js","D2App/actions/dimensions.js","D2App/api/settings.js","D2App/actions/settings.js","D2App/components/App.js","D2App/reducers/style.js","D2App/reducers/index.js","D2App/configureStore.js","D2App/locales/index.js","D2App/AppWrapper.js","D2App/modules/itemTypes.js","D2App/modules/util.js","D2App/components/ItemGrid/gridUtil.js","D2App/modules/item.js","D2App/components/Item/VisualizationItem/Visualization/plugin.js","D2App/components/Item/ItemHeader/styles/ItemHeader.module.css","D2App/components/ControlBar/styles/DashboardsBar.module.css","D2App/components/ControlBar/styles/ControlBar.module.css","D2App/components/ControlBar/styles/DashboardItemChip.module.css","D2App/components/ControlBar/styles/ClearButton.module.css","D2App/components/ControlBar/styles/Filter.module.css","D2App/components/ControlBar/styles/ShowMoreButton.module.css","D2App/components/ItemSelector/styles/HeaderMenuItem.module.css","D2App/components/ItemSelector/styles/ContentMenuItem.module.css"],"names":["module","exports","WindowDimensionsCtx","createContext","windowDims","height","window","innerHeight","width","innerWidth","WindowDimensionsProvider","children","dimensions","setDimensions","useState","useEffect","handleResize","debounce","addEventListener","removeEventListener","Provider","value","ControlBar","React","Component","constructor","props","super","onStartDrag","this","setState","dragging","onDrag","onEndDrag","event","preventDefault","stopPropagation","newHeight","clientY","onChangeHeight","requestAnimationFrame","state","renderDragHandle","data-testid","className","classes","draghandle","style","onMouseDown","render","Math","max","rootStyle","Object","assign","backgroundColor","editMode","colors","yellow050","white","paddingBottom","transition","root","content","defaultProps","StarIcon","xmlns","viewBox","d","fill","apiPostDataStatistics","async","eventType","id","d2","getInstance","url","Api","getApi","post","DashboardItemChip","starred","selected","label","dashboardId","onClick","chipProps","selectedState","unselected","icon","Star","debouncedPostStatistics","link","to","data-test","AddCircleIcon","teal600","SearchIcon","ClearIcon","grey800","ClearButton","onClear","button","Clear","color","SET_DASHBOARDS_FILTER","CLEAR_DASHBOARDS_FILTER","sGetDashboardsFilter","dashboardsFilter","mapDispatchToProps","setDashboardsFilter","type","clearDashboardsFilter","connect","filterText","onKeypressEnter","focusedClassName","setFocusedClassName","cx","container","onFocus","focused","onBlur","Search","searchIcon","input","placeholder","i18n","t","onChange","target","onKeyUp","keyCode","ShowMoreButton","isMaxHeight","disabled","showMore","getRowsHeight","rows","getControlBarHeight","FIRST_ROW_PADDING_HEIGHT","SET_CONTROLBAR_USER_ROWS","combineReducers","userRows","action","validateReducer","sGetControlBarUserRows","controlBar","sGetControlBarRoot","spacerContent","emptyTextItemContent","isTextType","item","TEXT","text","convertUiItemsToBackend","items","map","SPACER","isUiSpacerType","convertBackendItemsToUi","isBackendSpacerType","gridProperties","getGridItemProperties","SET_DASHBOARDS","ADD_DASHBOARDS","SET_DASHBOARD_STARRED","SET_DASHBOARD_DISPLAY_NAME","SET_DASHBOARD_ITEMS","DEFAULT_STATE_DASHBOARDS","byId","EMPTY_DASHBOARD","updateDashboardProp","prop","sGetDashboardsRoot","dashboards","sGetDashboardById","orObject","sDashboardsIsFetching","sGetAllDashboards","sGetDashboardItems","sGetStarredDashboards","values","filter","dashboard","sGetUnstarredDashboards","getCustomDashboards","data","arrayFrom","name","displayName","description","displayDescription","favorite","owner","user","created","split","join","substr","lastUpdated","access","numberOfItems","orArray","dashboardItems","length","SET_SELECTED_ID","SET_SELECTED_ISLOADING","SET_SELECTED_SHOWDESCRIPTION","SET_SELECTED_ITEM_ACTIVE_TYPE","CLEAR_SELECTED_ITEM_ACTIVE_TYPES","DEFAULT_STATE_SELECTED_SHOWDESCRIPTION","DEFAULT_STATE_SELECTED_ITEM_ACTIVE_TYPES","isLoading","showDescription","itemActiveTypes","activeType","sGetSelectedRoot","sGetSelectedId","sGetSelectedIsLoading","sGetSelectedShowDescription","sGetSelectedItemActiveType","NAMESPACE","hasNamespace","currentUser","dataStore","has","getNamespace","get","create","apiPostUserDataStoreValue","key","set","apiGetUserDataStoreValue","defaultValue","namespace","keys","find","k","console","log","KEY_CONTROLBAR_ROWS","acSetControlBarUserRows","tSetControlBarRows","controlBarRows","apiGetControlBarRows","dispatch","err","error","withRouter","selectedId","history","setRows","cancelMaxHeight","getFilteredDashboards","filteredDashboards","arraySort","toLowerCase","includes","overflowYClass","overflowYAuto","overflowYHidden","newRows","floor","min","apiPostControlBarRows","leftControls","newLink","AddCircle","push","marginTop","NoContentMessage","padding","textAlign","fontSize","fontWeight","grey600","ItemSearchField","dataTest","HeaderMenuItem","title","dense","LaunchIcon","LaunchLink","e","launchLink","rel","href","Launch","InsertButton","buttonInsert","ContentMenuItem","onInsert","visType","ItemIcon","getItemIcon","renderedItemIcon","VISUALIZATION","visTypeIcons","menuItem","marginRight","RECEIVED_EDIT_DASHBOARD","RECEIVED_NOT_EDITING","START_NEW_DASHBOARD","RECEIVED_TITLE","RECEIVED_DESCRIPTION","ADD_DASHBOARD_ITEM","REMOVE_DASHBOARD_ITEM","UPDATE_DASHBOARD_ITEM","RECEIVED_DASHBOARD_LAYOUT","SET_PRINT_PREVIEW_VIEW","CLEAR_PRINT_PREVIEW_VIEW","DEFAULT_STATE_EDIT_DASHBOARD","NEW_DASHBOARD_STATE","printPreviewView","sGetEditDashboardRoot","editDashboard","sGetIsEditing","isEmpty","sGetIsPrintPreviewView","sGetEditDashboardItems","getIdNameFields","rename","getDimensionFields","withItems","arrayClean","getAxesFields","getFavoriteFields","withDimensions","withOptions","getFavoritesFields","apiFetchVisualization","getVisualizationId","fields","MAP","getEndPointName","onError","getDashboardItemsFields","withFavorite","getDashboardFields","dashboardsQuery","resource","params","paging","dashboardQuery","starDashboardMutation","unstarDashboardMutation","deleteDashboardMutation","apiFetchDashboard","dataEngine","query","variables","createDashboardMutation","updateDashboardMutation","generatePayload","w","h","RECEIVED_USER","DEFAULT_STATE_USER","username","uiLocale","isSuperuser","sGetUserUsername","tFetchDashboards","getState","arrayToIdMap","acSetDashboards","apiFetchDashboards","tStarDashboard","isStarred","onSuccess","acSetDashboardStarred","mutate","apiStarDashboard","tDeleteDashboard","apiDeleteDashboard","Promise","resolve","SET_DIMENSIONS","DEFAULT_DIMENSIONS","getDimensionById","DIMENSION_ID_PERIOD","DIMENSION_ID_ORGUNIT","sGetDimensions","CLEAR_ITEM_FILTERS","SET_ITEM_FILTERS","ADD_ITEM_FILTER","REMOVE_ITEM_FILTER","DEFAULT_STATE_ITEM_FILTERS","sGetItemFiltersRoot","itemFilters","sGetNamedItemFilters","createSelector","filters","reduce","arr","dimension","acRemoveItemFilter","RECEIVED_MESSAGES","sGetMessagesRoot","messages","messageConversationsQuery","order","pageSize","tGetMessages","messageConversations","getMessages","SET_ALERT_MESSAGE","CLEAR_ALERT_MESSAGE","sGetAlertMessage","alert","acClearAlertMessage","ADD_VISUALIZATION","CLEAR_VISUALIZATIONS","DEFAULT_STATE_VISUALIZATIONS","p","undefined","sGetVisualization","visualizations","sGetVisualizationsRoot","acAddVisualization","KEY_SHOW_DESCRIPTION","acSetSelectedId","acSetSelectedIsLoading","acSetSelectedShowDescription","tSetSelectedDashboardById","alertTimeout","setTimeout","customDashboard","withShape","localStorage","setItem","forEach","REPORT_TABLE","CHART","EVENT_REPORT","EVENT_CHART","getVisualizationFromItem","MESSAGES","clearTimeout","tSetShowDescription","apiGetShowDescription","tUpdateShowDescription","apiPostShowDescription","acClearEditDashboard","acAddDashboardItem","itemPropName","itemTypeMap","propName","generateUid","gridItemProperties","shape","PAGEBREAK","yPos","getPageBreakItemShape","isStatic","PRINT_TITLE_PAGE","getPrintTitlePageItemShape","NEW_ITEM_SHAPE","position","acUpdateDashboardItem","acRemoveDashboardItem","tSaveDashboard","dashboardToSave","response","uid","updateDashboard","postDashboard","singleItems","header","categorizedItems","USERS","REPORTS","RESOURCES","APP","listItemTypes","CategorizedMenuGroup","addItem","tAddListItemContent","newItem","toggleSeeMore","seeMore","onChangeItemsLimit","hasMore","itemUrl","getItemUrl","context","showMoreButton","margin","contextTypes","PropTypes","object","isRequired","listItemType","dashboardItemIndex","findIndex","dashboardItem","category","addToDashboard","ItemSelector","isOpen","setIsOpen","setFilter","setItems","maxOptions","setMaxOptions","Set","queryString","filterStr","then","catch","updateMaxOptions","options","delete","add","inputRef","createRef","ref","reference","placement","onClickOutside","arrow","maxWidth","menu","itemType","endPointName","itemCount","getDefaultItemCount","allItems","displayItems","slice","pluralTitle","concat","EditTitleBar","onChangeTitle","onChangeDescription","section","titleDescription","_","itemSelector","selectedDashboard","ThreeDots","SpeechBubble","fillRule","transform","Warning","Fullscreen","ExitFullscreen","FilterDialog","displayNameProperty","initiallySelectedItems","addItemFilter","removeItemFilter","onClose","setFilters","onSelectItems","dimensionId","onDeselectItems","itemIdsToRemove","newList","onReorderItems","itemIds","oldList","reorderedList","large","commonProps","onSelect","onDeselect","onReorder","selectedItems","selectedPeriods","ouItems","renderDialogContent","secondary","primary","filterItems","ADD_SETTINGS","DEFAULT_SETTINGS","keyDateFormat","keyAnalysisRelativePeriod","keyAnalysisDigitGroupSeparator","rootOrganisationUnit","keyGatherAnalyticalObjectStatisticsInDashboardViews","sGetSettings","settings","sGetSettingsDisplayNameProperty","sGatherAnalyticalObjectStatisticsInDashboardViews","SET_ACTIVE_MODAL_DIMENSION","CLEAR_ACTIVE_MODAL_DIMENSION","DEFAULT_STATE_ACTIVE_MODAL_DIMENSION","sGetActiveModalDimension","activeModalDimension","acSetActiveModalDimension","clearActiveModalDimension","setActiveModalDimension","showPopover","setShowPopover","useRef","onCloseDialog","onDimensionClick","selectedIds","ViewTitleBar","moreOptionsIsOpen","setMoreOptionsIsOpen","sharingDialogIsOpen","setSharingDialogIsOpen","redirectUrl","setRedirectUrl","onToggleStarredDashboard","onShowHideDescription","toggleSharingDialog","toggleMoreOptions","titleStyle","cursor","userSelect","top","StarBorder","showHideDescriptionLabel","toggleStarredDashboardLabel","buttonRef","userAccess","titleBar","actions","titleBarIcon","strip","update","editLink","manage","marginLeft","paddingTop","open","onRequestClose","stateProps","dispatchProps","ownProps","black","minWidth","TitleBar","edit","NoVisualizationMessage","message","DefaultPlugin","pluginCredentials","pluginIsAvailable","pluginManager","shouldPluginReload","prevProps","reloadAllowed","filtersChanged","vis","visualization","prevVis","visChanged","reloadPlugin","credentials","componentDidMount","baseUrl","getBaseUrl","auth","defaultHeaders","Authorization","componentDidUpdate","componentWillUnmount","getGridItemDomId","MapPlugin","applyFilters","mapViews","mapView","layer","hideTitle","LoadingMask","center","getFilteredVisualization","visRows","obj","visColumns","columns","visFilters","dimensionFound","dimensionObjects","getWithoutId","getVisualizationConfig","originalType","extractedMapView","mv","VIS_TYPE_COLUMN","VIS_TYPE_PIVOT_TABLE","layout","getAdaptedUiLayoutByType","memoizeOne","fn","lastArgs","lastValue","args","every","arg","i","Visualization","pluginLoaded","onLoadingComplete","memoizedGetFilteredVisualization","memoizedGetVisualizationConfig","availableHeight","pluginProps","forDashboard","FatalErrorBoundary","errorFound","componentDidCatch","info","ViewItemActions","actionButtons","itemActionsWrap","DeleteItemButton","deleteItemButton","red500","itemId","WarningIcon","PrintWarning","warning","Info","EDIT","NEW","VIEW","PRINT","PRINT_LAYOUT","isEditMode","mode","isPrintMode","isViewMode","ItemHeader","forwardRef","dashboardMode","isShortened","rest","Actions","EditItemActions","PrintItemInfo","getItemActionsMap","itemHeaderWrap","itemTitle","iconFill","ItemHeaderButtons","menuIsOpen","setMenuIsOpen","useConfig","onSelectActiveType","isTrackerType","isTrackerDomainType","onViewTable","closeMenu","onViewChart","onViewMap","canViewAs","isSingleValue","isYearOverYear","VIS_TYPE_GAUGE","VIS_TYPE_PIE","interpretationMenuLabel","activeFooter","ViewAsMenuItems","hasMapView","isFullscreen","small","onToggleFullscreen","appName","getAppName","getLink","onToggleFooter","fullscreenSupported","ItemFooter","line","scrollContainer","Item","showFooter","configLoaded","isFullscreenSupported","el","document","querySelector","itemDomElSelector","requestFullscreen","webkitRequestFullscreen","handleFullscreenChange","fullscreenElement","webkitFullscreenElement","exitFullscreen","webkitExitFullscreen","getUniqueKey","uniqueId","onToggleItemExpanded","setActiveType","getActiveType","isEditing","getAvailableHeight","calculatedHeight","originalHeight","headerRef","current","clientHeight","memoizedGetContentHeight","contentRef","offsetHeight","measuredHeight","preferMeasured","updateVisualization","gatherDataStatistics","getDataStatisticsName","onfullscreenchange","onwebkitfullscreenchange","getVisualizationName","shortened","Function","prototype","grey200","border","Line","PRIVATE","messageTypes","VALIDATION_RESULT","TICKET","SYSTEM","list","listStyleType","paddingLeft","seeAll","marginBottom","sender","lineHeight","snippet","maxHeight","overflow","MessagesItem","getMessageHref","msg","msgIdentifier","messageType","getMessageSender","latestMsg","getMessageItems","modeClass","readClass","read","msgDate","location","messageCount","formatDate","userSettings","string","MessagesContainer","NotSupportedItem","display","justifyContent","alignItems","align","DescriptionIcon","grey500","DeleteIcon","getItemTitle","ListItem","tRemoveListItemContent","contentItems","index","array","getContentItems","contentItem","deleteButton","deletebutton","deleteicon","grey900","Description","itemicon","newContent","SET_PRINT_DASHBOARD","CLEAR_PRINT_DASHBOARD","ADD_PRINT_DASHBOARD_ITEM","SET_PRINT_DASHBOARD_LAYOUT","REMOVE_PRINT_DASHBOARD_ITEM","UPDATE_PRINT_DASHBOARD_ITEM","DEFAULT_STATE_PRINT_DASHBOARD","DEFAULT_DASHBOARD_ITEMS","NEW_PRINT_DASHBOARD_STATE","sGetPrintDashboardRoot","printDashboard","sGetIsPrinting","sGetPrintDashboardItems","textDiv","whiteSpace","textField","fontStretch","onChangeText","updatedItem","viewItem","textDivStyle","editItem","onEdit","multiline","fullWidth","printItem","textItem","getIframeSrc","appDetails","iframeSrc","launchUrl","ouIds","ouFilter","path","AppItem","appKey","system","installedApps","app","dashboardWidget","src","SpacerItem","PageBreakItem","PrintTitlePageItem","titlePage","filterTitle","listItems","filterListItem","val","filterList","getItemFilterList","viewDashboard","sGetPrintDashboardName","sGetPrintDashboardDescription","GridItem","VisualizationItem","TextItem","getGridItem","ProgressiveLoadingContainer","shouldLoad","containerRef","shouldLoadHandler","handlerOptions","passive","checkShouldLoad","bufferPx","bufferFactor","rect","getBoundingClientRect","bottom","removeHandler","registerHandler","debounceMs","getElementsByClassName","eventProps","pick","hasShape","expandedItems","setExpandedItems","setDisplayItems","useContext","displayItemsSmallDevice","withSingleColumnShape","sortCoordinates","adjustHeightForExpanded","clickedId","isExpanded","newExpandedItems","expandedItem","translucent","rowHeight","GRID_ROW_HEIGHT","cols","lg","getGridColumns","sm","breakpoints","layouts","measureBeforeMount","compactType","GRID_COMPACT_TYPE","MARGIN","isDraggable","isResizable","draggableCancel","getItemComponent","styles","badgeContainer","borderRadius","badge","badgeRemove","textDecoration","FilterBadge","onRemove","count","FilterBar","onBadgeRemove","onBadgeClick","bar","removeItemFIlter","SET_WINDOW_HEIGHT","DEFAULT_STATE_WINDOW_HEIGHT","sGetWindowHeight","windowHeight","acSetPrintDashboard","acClearPrintDashboard","acAddPrintDashboardItem","isOneItemPerPage","acUpdatePrintDashboardItem","dashboardIsEditing","dashboardIsPrinting","clearEditDashboard","clearPrintDashboard","scroll","ViewItemGrid","acUpdateDashboardLayout","onLayoutChange","newLayout","onResizeStop","oldItem","setViewportSize","clientWidth","onItemResize","isVisualizationType","pluginResize","ConfirmDeleteDialog","dashboardName","onDeleteConfirmed","onContinueEditing","destructive","buttonBarStyle","EditBar","translationDialogIsOpen","dashboardModel","confirmDeleteDialogOpen","onConfirmDelete","onSave","newId","onPrintPreview","isPrintPreviewView","clearPrintPreview","showPrintPreview","onDiscard","onDiscardChanges","onDelete","onTranslationsSaved","translations","dbLocale","translation","locale","property","onTranslate","fetchDashboardModel","toggleTranslationDialog","confirmDeleteDialog","deleteAccess","translationDialog","objectToTranslate","modelDefinition","fieldsToTranslate","onTranslationSaved","onTranslationError","renderActionButtons","printPreviewText","updateAccess","controlBarHeight","discardBtnText","rightControls","topMargin","sGetIsNewDashboard","acSetDashboardDisplayName","PrintInfo","isLayout","a4LandscapeWidthPx","infoHeader","infoWrapper","infoList","divider","LessHorizontalIcon","PrintActionsBar","inner","LessHorizontal","print","getTransformYPx","elStyle","transformY","match","parseInt","PrintLayoutItemGrid","updateDashboardLayout","isFirstPageBreak","pageBreaks","sortedPageBreaks","sortBy","y","itemClassNames","getItemComponents","hideExtraPageBreaks","sortedElements","elements","types","elementsWithBoundingRect","Array","from","classList","indexOf","bottomY","getDomGridItemsSortedByYPos","querySelectorAll","pageBreakBottom","lastItemBottom","foundNonPageBreak","thisItemBottom","gridElement","firstBreak","scrollArea","EDIT_BAR_HEIGHT","isLeapPage","n","x","getMultiple","factor","multiple","PrintLayoutDashboard","initialized","initPrintLayoutDashboard","setPrintDashboard","MAX_ITEM_GRID_HEIGHT","updateDashboardItem","addDashboardItem","yPosList","pageNum","addPageBreaks","getWrapperStyle","fromEdit","spacers","dp24","wrapper","pageOuter","EditDashboard","initEditDashboard","setEditDashboard","renderGrid","NewDashboard","setNewDashboard","PrintItemGrid","PrintDashboard","initPrintDashboard","sortedItems","spacerCount","removeDashboardItem","MAX_ITEM_GRID_WIDTH_OIPP","MAX_ITEM_GRID_HEIGHT_OIPP","dashboardMap","dashboardsIsEmpty","dashboardsLoaded","routeId","selectDashboard","dashboardToSelect","preferredId","getItem","dash","sGetDashboardsSortedByStarred","setWindowHeight","getElementsByTagName","remove","setHeaderbarVisibility","onResize","onHidden","permanent","tSetDimensions","acSetDimensions","displayNameProp","apiFetchDimensions","dim","dimensionType","dataDimensionType","SYSTEM_SETTINGS","tAddSettings","extraSettings","fetchedSettings","s","apiFetchSystemSettings","App","setCurrentUser","fetchDashboards","setControlBarRows","setShowDescription","addSettings","getChildContext","exact","AlertBar","childContextTypes","DEFAULT_STATE_STYLE","objectClean","conversations","$merge","d2Object","keyUiLocale","authorities","newState","$splice","$unshift","idToRemove","stateItems","layoutHasChanged","newStateItems","stateItem","si","configureStore","middleware","thunk","withExtraArgument","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducer","applyMiddleware","addResources","arTranslations","ar_IQTranslations","ckbTranslations","csTranslations","daTranslations","enTranslations","esTranslations","frTranslations","idTranslations","kmTranslations","loTranslations","myTranslations","nbTranslations","prsTranslations","psTranslations","ptTranslations","pt_BRTranslations","ruTranslations","svTranslations","tetTranslations","tgTranslations","ukTranslations","urTranslations","uzTranslations","uz_CyrlTranslations","viTranslations","zhTranslations","zh_CNTranslations","d2Config","schemas","authorization","process","REACT_APP_DHIS2_AUTHORIZATION","headers","AppWrapper","useDataEngine","store","theme","createMuiTheme","dhis2theme","i18nRoot","DOMAIN_TYPE_AGGREGATE","DOMAIN_TYPE_TRACKER","domainType","defaultItemCount","appUrl","dataStatisticsName","Date","getTime","TableIcon","ChartIcon","MapIcon","ExtensionIcon","PersonIcon","FontDownloadIcon","EmailIcon","CropFreeIcon","NotInterestedIcon","param","isArray","isObject","global","Intl","DateTimeFormat","year","month","day","format","replace","api","idx","isNonNegativeInteger","Number","isInteger","sort","a","b","minH","GRID_COLUMNS","static","getOriginalHeight","round","itemWithShape","Error","col","row","itemWidth","MAX_ITEM_GRID_WIDTH","itemHeight","getShape","getSingleColumnShape","reportTable","chart","eventReport","eventChart","itemTypeToExternalPlugin","getPlugin","hasIntegratedPlugin","load","config","plugin","loadingIndicator","loadPlugin","resize","unmount"],"mappings":"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","file":"static/js/app.4329f142.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"showMoreButton\":\"CategorizedMenuGroup_showMoreButton__2RbRp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"ItemSelector_menu__2VYae\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"EditTitleBar_section__LIaIC\",\"titleDescription\":\"EditTitleBar_titleDescription__1YsU6\",\"title\":\"EditTitleBar_title__3mUbt\",\"description\":\"EditTitleBar_description__24U5X\",\"itemSelector\":\"EditTitleBar_itemSelector__1cFEp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"actions\":\"ViewTitleBar_actions__2UTRz\",\"editLink\":\"ViewTitleBar_editLink__d_HzW\",\"titleBar\":\"ViewTitleBar_titleBar__eiwJS\",\"titleBarIcon\":\"ViewTitleBar_titleBarIcon__2cBxv\",\"strip\":\"ViewTitleBar_strip__3xR4U\",\"backdrop\":\"ViewTitleBar_backdrop__2Cpm8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"NoVisualizationMessage_message__22IPi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"center\":\"LoadingMask_center__KHIYy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FatalErrorBoundary_container__3SViR\",\"icon\":\"FatalErrorBoundary_icon__2UbeP\",\"message\":\"FatalErrorBoundary_message__3FzrY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"deleteItemButton\":\"DeleteItemButton_deleteItemButton__3TJm9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"warning\":\"PrintItemInfo_warning__123PK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"line\":\"ItemFooter_line__3Ko0R\",\"scrollContainer\":\"ItemFooter_scrollContainer__tuq4P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Item_list__1_nkQ\",\"item\":\"Item_item__3-6QE\",\"itemicon\":\"Item_itemicon__QlouX\",\"link\":\"Item_link___3c_q\",\"deleteicon\":\"Item_deleteicon__3usrl\",\"deletebutton\":\"Item_deletebutton__1DpBW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"titlePage\":\"Item_titlePage__18CNQ\",\"name\":\"Item_name__3nuTV\",\"description\":\"Item_description__1gFQd\",\"filterTitle\":\"Item_filterTitle__2p7TQ\",\"filterList\":\"Item_filterList__qc_G3\",\"filterListItem\":\"Item_filterListItem__sPbBY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bar\":\"FilterBar_bar__1Ma3p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ConfirmDeleteDialog_content__EqswE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"infoWrapper\":\"PrintInfo_infoWrapper__3m2lt\",\"infoHeader\":\"PrintInfo_infoHeader__KyW8I\",\"info\":\"PrintInfo_info__13oXZ\",\"infoList\":\"PrintInfo_infoList__Iu9MC\",\"divider\":\"PrintInfo_divider__3wzx9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PrintActionsBar_container__2iQp7\",\"topMargin\":\"PrintActionsBar_topMargin__OpYDN\",\"inner\":\"PrintActionsBar_inner__uBqU7\",\"link\":\"PrintActionsBar_link__lFUmI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"PrintLayoutDashboard_wrapper__1WDh4\",\"pageOuter\":\"PrintLayoutDashboard_pageOuter__22acI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"PrintDashboard_wrapper__1O3s_\",\"pageOuter\":\"PrintDashboard_pageOuter__fl9tw\"};","import React, { createContext, useContext, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash/debounce';\nexport const WindowDimensionsCtx = createContext(null);\n\nconst windowDims = () => ({\n  height: window.innerHeight,\n  width: window.innerWidth\n});\n\nconst WindowDimensionsProvider = ({\n  children\n}) => {\n  const [dimensions, setDimensions] = useState(windowDims());\n  useEffect(() => {\n    const handleResize = debounce(() => {\n      setDimensions(windowDims());\n    }, 200);\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n  return <WindowDimensionsCtx.Provider value={dimensions}>\n            {children}\n        </WindowDimensionsCtx.Provider>;\n};\n\nWindowDimensionsProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};\nexport default WindowDimensionsProvider;\nexport const useWindowDimensions = () => {\n  return useContext(WindowDimensionsCtx);\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { colors } from '@dhis2/ui';\nimport classes from './styles/ControlBar.module.css';\nexport const DRAG_HANDLE_HEIGHT = 7;\n\nclass ControlBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dragging: false\n    };\n  }\n\n  onStartDrag = () => {\n    this.setState({\n      dragging: true\n    });\n    window.addEventListener('mousemove', this.onDrag);\n    window.addEventListener('mouseup', this.onEndDrag);\n  };\n  onDrag = event => {\n    event.preventDefault();\n    event.stopPropagation();\n    const newHeight = event.clientY;\n\n    if (this.props.onChangeHeight && newHeight !== this.props.height && newHeight > 0) {\n      requestAnimationFrame(() => {\n        this.props.onChangeHeight(newHeight);\n      });\n    }\n  };\n  onEndDrag = () => {\n    this.setState({\n      dragging: false\n    });\n    window.removeEventListener('mousemove', this.onDrag);\n    window.removeEventListener('mouseup', this.onEndDrag);\n\n    if (this.props.onEndDrag) {\n      this.props.onEndDrag();\n    }\n  };\n\n  renderDragHandle() {\n    return typeof this.props.onChangeHeight === 'function' ? <div data-testid=\"controlbar-drag-handle\" className={classes.draghandle} style={{\n      height: DRAG_HANDLE_HEIGHT\n    }} onMouseDown={this.onStartDrag} /> : null;\n  }\n\n  render() {\n    const height = Math.max(this.props.height, 0) + DRAG_HANDLE_HEIGHT;\n    const rootStyle = Object.assign({\n      height,\n      backgroundColor: this.props.editMode ? colors.yellow050 : colors.white,\n      paddingBottom: DRAG_HANDLE_HEIGHT\n    }, // Disable animations while dragging\n    this.state.dragging ? {\n      transition: 'none'\n    } : {});\n    return <div style={rootStyle} className={classes.root}>\n                <div className={classes.content}>{this.props.children}</div>\n                {this.renderDragHandle()}\n            </div>;\n  }\n\n}\n\nControlBar.propTypes = {\n  /**\n   * The height of the control bar in number of lines. Must be a positive integer.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * If true, the background color of the control bar changes to indicate that edit mode is active.\n   */\n  editMode: PropTypes.bool.isRequired,\n\n  /**\n   * Callback function that is called when the control bar is resized.\n   * The callback receives one argument: The new height in pixels.\n   *\n   * If no callback is specified the control bar will not have a drag handle.\n   */\n  height: PropTypes.number.isRequired,\n\n  /**\n   * Callback function that is called when the control bar is dropped after being dragged.\n   * The callback receives one argument: The new height in pixels.\n   *\n   * Ignored if no \"onChangeHeight\" function is provided.\n   */\n  onChangeHeight: PropTypes.func,\n\n  /**\n   * The contents of the control bar.\n   */\n  onEndDrag: PropTypes.func\n};\nControlBar.defaultProps = {\n  onChangeHeight: null,\n  onEndDrag: null\n};\nexport default ControlBar;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst StarIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>;\n\nStarIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default StarIcon;","import { getInstance } from 'd2';\nexport const apiPostDataStatistics = async (eventType, id) => {\n  const d2 = await getInstance();\n  const url = `dataStatistics?eventType=${eventType}&favorite=${id}`;\n  d2.Api.getApi().post(url);\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Chip } from '@dhis2/ui';\nimport { Link } from 'react-router-dom';\nimport debounce from 'lodash/debounce';\nimport StarIcon from '../../icons/Star';\nimport { apiPostDataStatistics } from '../../api/dataStatistics';\nimport classes from './styles/DashboardItemChip.module.css';\nexport const DashboardItemChip = ({\n  starred,\n  selected,\n  label,\n  dashboardId,\n  onClick\n}) => {\n  const chipProps = {\n    selected\n  };\n\n  if (starred) {\n    const selectedState = selected ? classes.selected : classes.unselected;\n    chipProps.icon = <StarIcon className={`${classes.icon} ${selectedState}`} />;\n  }\n\n  const debouncedPostStatistics = debounce(() => apiPostDataStatistics('DASHBOARD_VIEW', dashboardId), 500);\n\n  const handleClick = () => {\n    debouncedPostStatistics();\n    onClick();\n  };\n\n  return <Link className={classes.link} to={`/${dashboardId}`} onClick={handleClick} data-test=\"dashboard-chip\">\n            <Chip {...chipProps}>{label}</Chip>\n        </Link>;\n};\nDashboardItemChip.propTypes = {\n  dashboardId: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  selected: PropTypes.bool.isRequired,\n  starred: PropTypes.bool.isRequired,\n  onClick: PropTypes.func.isRequired,\n  classes: PropTypes.object\n};\nexport default DashboardItemChip;","import React from 'react';\nimport { colors } from '@dhis2/ui';\n\nconst AddCircleIcon = () => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" fill={colors.teal600} viewBox=\"0 0 24 24\">\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm4 11h-3v3c0 .55-.45 1-1 1s-1-.45-1-1v-3H8c-.55 0-1-.45-1-1s.45-1 1-1h3V8c0-.55.45-1 1-1s1 .45 1 1v3h3c.55 0 1 .45 1 1s-.45 1-1 1z\" />\n    </svg>;\n\nexport default AddCircleIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst SearchIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\" />\n    </svg>;\n\nSearchIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default SearchIcon;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst ClearIcon = ({\n  className\n}) => <svg className={className} fill={colors.grey800} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n        <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>;\n\nClearIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default ClearIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ClearIcon from '../../icons/Clear';\nimport classes from './styles/ClearButton.module.css';\nexport const ClearButton = ({\n  onClear\n}) => <button className={classes.button} onClick={onClear}>\n        <span>\n            <ClearIcon className={classes.icon} color=\"action\" />\n        </span>\n    </button>;\nClearButton.propTypes = {\n  onClear: PropTypes.func.isRequired\n};\nexport default ClearButton;","import { validateReducer } from '../modules/util';\nexport const SET_DASHBOARDS_FILTER = 'SET_DASHBOARDS_FILTER';\nexport const CLEAR_DASHBOARDS_FILTER = 'CLEAR_DASHBOARDS_FILTER';\nexport const DEFAULT_STATE_DASHBOARDS_FILTER = '';\nexport default ((state = DEFAULT_STATE_DASHBOARDS_FILTER, action) => {\n  switch (action.type) {\n    case SET_DASHBOARDS_FILTER:\n      {\n        return validateReducer(action.value, DEFAULT_STATE_DASHBOARDS_FILTER);\n      }\n\n    case CLEAR_DASHBOARDS_FILTER:\n      {\n        return DEFAULT_STATE_DASHBOARDS_FILTER;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetDashboardsFilter = state => state.dashboardsFilter;","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport cx from 'classnames';\nimport SearchIcon from '../../icons/Search';\nimport ClearButton from './ClearButton';\nimport { acSetDashboardsFilter, acClearDashboardsFilter } from '../../actions/dashboardsFilter';\nimport { sGetDashboardsFilter } from '../../reducers/dashboardsFilter';\nimport classes from './styles/Filter.module.css';\nexport const KEYCODE_ENTER = 13;\nexport const KEYCODE_ESCAPE = 27;\nexport const Filter = ({\n  clearDashboardsFilter,\n  filterText,\n  setDashboardsFilter,\n  onKeypressEnter\n}) => {\n  const [focusedClassName, setFocusedClassName] = useState('');\n\n  const setFilterValue = event => {\n    event.preventDefault();\n    setDashboardsFilter(event.target.value);\n  };\n\n  const onKeyUp = event => {\n    switch (event.keyCode) {\n      case KEYCODE_ENTER:\n        onKeypressEnter();\n        clearDashboardsFilter();\n        break;\n\n      case KEYCODE_ESCAPE:\n        clearDashboardsFilter();\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const onFocus = event => {\n    event.preventDefault();\n    setFocusedClassName(classes.focused);\n  };\n\n  const onBlur = event => {\n    event.preventDefault();\n    setFocusedClassName('');\n  };\n\n  return <div className={cx(classes.container, `${focusedClassName}`)} onFocus={onFocus} onBlur={onBlur}>\n            <SearchIcon className={classes.searchIcon} />\n            <input className={classes.input} type=\"text\" placeholder={i18n.t('Search for a dashboard')} onChange={setFilterValue} onKeyUp={onKeyUp} value={filterText} data-test=\"search-dashboard-input\" />\n            {filterText && <ClearButton onClear={clearDashboardsFilter} />}\n        </div>;\n};\nFilter.propTypes = {\n  clearDashboardsFilter: PropTypes.func,\n  filterText: PropTypes.string,\n  setDashboardsFilter: PropTypes.func,\n  onKeypressEnter: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  filterText: sGetDashboardsFilter(state)\n});\n\nconst mapDispatchToProps = {\n  setDashboardsFilter: acSetDashboardsFilter,\n  clearDashboardsFilter: acClearDashboardsFilter\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);","import { SET_DASHBOARDS_FILTER, CLEAR_DASHBOARDS_FILTER } from '../reducers/dashboardsFilter'; // actions\n\nexport const acSetDashboardsFilter = value => ({\n  type: SET_DASHBOARDS_FILTER,\n  value\n});\nexport const acClearDashboardsFilter = () => ({\n  type: CLEAR_DASHBOARDS_FILTER\n});","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport classes from './styles/ShowMoreButton.module.css';\nexport const SHOWMORE_BAR_HEIGHT = 16;\nexport const ShowMoreButton = ({\n  onClick,\n  isMaxHeight,\n  disabled\n}) => {\n  return <div className={classes.container}>\n            {disabled ? <div className={classes.disabled}>{i18n.t('Show more')}</div> : <div className={classes.showMore} onClick={onClick} data-test=\"showmore-button\">\n                    {isMaxHeight ? i18n.t('Show less') : i18n.t('Show more')}\n                </div>}\n        </div>;\n};\nShowMoreButton.propTypes = {\n  disabled: PropTypes.bool,\n  isMaxHeight: PropTypes.bool,\n  onClick: PropTypes.func\n};\nexport default ShowMoreButton;","import { SHOWMORE_BAR_HEIGHT } from './ShowMoreButton';\nexport const CONTROL_BAR_ROW_HEIGHT = 40;\nexport const FIRST_ROW_PADDING_HEIGHT = 10;\nexport const MIN_ROW_COUNT = 1;\nexport const HEADERBAR_HEIGHT = 48;\nconst CONTROL_BAR_OUTER_HEIGHT_DIFF = FIRST_ROW_PADDING_HEIGHT + SHOWMORE_BAR_HEIGHT - 2; // 2 pixel \"adjustment\"\n\nexport const getRowsHeight = rows => {\n  return rows * CONTROL_BAR_ROW_HEIGHT;\n};\nexport const getNumRowsFromHeight = height => {\n  return Math.floor((height - CONTROL_BAR_OUTER_HEIGHT_DIFF) / CONTROL_BAR_ROW_HEIGHT);\n};\nexport const getControlBarHeight = rows => {\n  return getRowsHeight(rows) + CONTROL_BAR_OUTER_HEIGHT_DIFF;\n};","/** @module reducers/controlBar */\nimport { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\nexport const SET_CONTROLBAR_USER_ROWS = 'SET_CONTROLBAR_USER_ROWS';\nexport const DEFAULT_STATE_CONTROLBAR_ROWS = 1;\n\nconst userRows = (state = DEFAULT_STATE_CONTROLBAR_ROWS, action) => {\n  switch (action.type) {\n    case SET_CONTROLBAR_USER_ROWS:\n      return validateReducer(action.value, DEFAULT_STATE_CONTROLBAR_ROWS);\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  userRows\n});\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\n\nexport const sGetControlBarRoot = state => state.controlBar; // Selector dependency level 2\n\nexport const sGetControlBarUserRows = state => sGetControlBarRoot(state).userRows;","import { TEXT, SPACER } from './itemTypes';\nimport { getGridItemProperties } from '../components/ItemGrid/gridUtil';\nexport const spacerContent = 'SPACER_ITEM_FOR_DASHBOARD_LAYOUT_CONVENIENCE';\nexport const emptyTextItemContent = 'TEXT_ITEM_WITH_NO_CONTENT';\n\nconst isBackendSpacerType = item => item.type === TEXT && item.text === spacerContent;\n\nconst isUiSpacerType = item => item.type === SPACER;\n\nconst isTextType = item => item.type === TEXT && item.text !== spacerContent;\n\nexport const convertUiItemsToBackend = items => items.map(item => {\n  let text = null;\n\n  if (isUiSpacerType(item)) {\n    text = spacerContent;\n  } else if (isTextType(item)) {\n    text = item.text || emptyTextItemContent;\n  }\n\n  return { ...item,\n    ...(text ? {\n      text\n    } : {})\n  };\n});\nexport const convertBackendItemsToUi = items => items.map(item => {\n  const type = isBackendSpacerType(item) ? SPACER : item.type;\n  const gridProperties = getGridItemProperties(item.id);\n  const text = isTextType(item) ? item.text === emptyTextItemContent ? '' : item.text : null;\n  return { ...item,\n    ...(text !== null ? {\n      text\n    } : {}),\n    type,\n    ...gridProperties\n  };\n});","/** @module reducers/dashboards */\nimport arrayFrom from 'd2-utilizr/lib/arrayFrom';\nimport arraySort from 'd2-utilizr/lib/arraySort';\nimport { orArray, orObject } from '../modules/util';\nimport { convertBackendItemsToUi } from '../modules/uiBackendItemConverter';\nexport const SET_DASHBOARDS = 'SET_DASHBOARDS';\nexport const ADD_DASHBOARDS = 'ADD_DASHBOARDS';\nexport const SET_DASHBOARD_STARRED = 'SET_DASHBOARD_STARRED';\nexport const SET_DASHBOARD_DISPLAY_NAME = 'SET_DASHBOARD_DISPLAY_NAME';\nexport const SET_DASHBOARD_ITEMS = 'SET_DASHBOARD_ITEMS';\nexport const DEFAULT_STATE_DASHBOARDS = {\n  byId: null,\n  items: []\n};\nexport const EMPTY_DASHBOARD = {}; // reducer helper functions\n\nconst updateDashboardProp = ({\n  state,\n  dashboardId,\n  prop,\n  value\n}) => ({\n  byId: { ...state.byId,\n    [dashboardId]: { ...state.byId[dashboardId],\n      [prop]: value\n    }\n  },\n  items: state.items\n});\n/**\n * Reducer that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n * @returns {Object}\n */\n\n\nexport default ((state = DEFAULT_STATE_DASHBOARDS, action) => {\n  switch (action.type) {\n    case SET_DASHBOARDS:\n      {\n        return {\n          byId: action.value,\n          items: []\n        };\n      }\n\n    case ADD_DASHBOARDS:\n      {\n        return { ...state,\n          byId: { ...state.byId,\n            ...action.value\n          }\n        };\n      }\n\n    case SET_DASHBOARD_STARRED:\n      {\n        return updateDashboardProp({\n          state,\n          dashboardId: action.dashboardId,\n          prop: 'starred',\n          value: action.value\n        });\n      }\n\n    case SET_DASHBOARD_DISPLAY_NAME:\n      {\n        return updateDashboardProp({\n          state,\n          dashboardId: action.dashboardId,\n          prop: 'displayName',\n          value: action.value\n        });\n      }\n\n    case SET_DASHBOARD_ITEMS:\n      {\n        return { ...state,\n          items: action.value\n        };\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetDashboardsRoot = state => state.dashboards; // selector level 1\n\n/**\n * Selector which returns a dashboard by id from the state object\n * If no matching dashboard is found it returns undefined\n * If dashboards.byId is null, then the dashboards api request\n * has not yet completed. If dashboards.byId is an empty object\n * then the dashboards api request is complete, but no dashboards\n * were returned\n *\n * @function\n * @param {Object} state The current state\n * @param {Number} id The id of the dashboard\n * @returns {Object | undefined}\n */\n\nexport const sGetDashboardById = (state, id) => orObject(sGetDashboardsRoot(state).byId)[id];\nexport const sDashboardsIsFetching = state => {\n  return sGetDashboardsRoot(state).byId === null;\n};\n/**\n * Selector which returns all dashboards (the byId object)\n *\n * @function\n * @param {Object} state The current state\n * @returns {Object | undefined}\n */\n\nexport const sGetAllDashboards = state => orObject(sGetDashboardsRoot(state).byId);\n/**\n * Selector which returns the current dashboard items\n *\n * @function\n * @param {Object} state The current state\n * @returns {Array}\n */\n\nexport const sGetDashboardItems = state => sGetDashboardsRoot(state).items; // selector level 2\n\nexport const sGetStarredDashboards = state => Object.values(sGetAllDashboards(state)).filter(dashboard => dashboard.starred === true);\nexport const sGetUnstarredDashboards = state => Object.values(sGetAllDashboards(state)).filter(dashboard => dashboard.starred === false); // selector level 3\n\nexport const sGetStarredDashboardIds = state => {\n  return sGetStarredDashboards(state).map(dashboard => dashboard.id);\n};\nexport const sGetUnstarredDashboardIds = state => sGetUnstarredDashboards(state).map(dashboard => dashboard.id);\nexport const sGetDashboardsSortedByStarred = state => [...arraySort(sGetStarredDashboards(state), 'ASC', 'displayName'), ...arraySort(sGetUnstarredDashboards(state), 'ASC', 'displayName')]; // utils\n\n/**\n * Returns the array of dashboards, customized for ui\n * @function\n * @param {Array} data The original dashboard list\n * @returns {Array}\n */\n\nexport const getCustomDashboards = data => arrayFrom(data).map(d => ({\n  id: d.id,\n  name: d.name,\n  displayName: d.displayName,\n  description: d.description,\n  displayDescription: d.displayDescription,\n  starred: d.favorite,\n  owner: d.user.name,\n  created: d.created.split('T').join(' ').substr(0, 16),\n  lastUpdated: d.lastUpdated.split('T').join(' ').substr(0, 16),\n  access: d.access,\n  numberOfItems: orArray(d.dashboardItems).length,\n  dashboardItems: convertBackendItemsToUi(d.dashboardItems)\n}));","/** @module reducers/selected */\nimport { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\nexport const SET_SELECTED_ID = 'SET_SELECTED_ID';\nexport const SET_SELECTED_ISLOADING = 'SET_SELECTED_ISLOADING';\nexport const SET_SELECTED_SHOWDESCRIPTION = 'SET_SELECTED_SHOWDESCRIPTION';\nexport const SET_SELECTED_ITEM_ACTIVE_TYPE = 'SET_SELECTED_ITEM_ACTIVE_TYPE';\nexport const CLEAR_SELECTED_ITEM_ACTIVE_TYPES = 'CLEAR_SELECTED_ITEM_ACTIVE_TYPES';\nexport const DEFAULT_STATE_SELECTED_ID = null;\nexport const DEFAULT_STATE_SELECTED_ISLOADING = false;\nexport const DEFAULT_STATE_SELECTED_SHOWDESCRIPTION = false;\nexport const DEFAULT_STATE_SELECTED_ITEM_ACTIVE_TYPES = {};\nexport const NON_EXISTING_DASHBOARD_ID = '0';\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\n\nconst id = (state = DEFAULT_STATE_SELECTED_ID, action) => {\n  switch (action.type) {\n    case SET_SELECTED_ID:\n      return validateReducer(action.value, DEFAULT_STATE_SELECTED_ID);\n\n    default:\n      return state;\n  }\n};\n\nconst isLoading = (state = DEFAULT_STATE_SELECTED_ISLOADING, action) => {\n  switch (action.type) {\n    case SET_SELECTED_ISLOADING:\n      return validateReducer(action.value, DEFAULT_STATE_SELECTED_ISLOADING);\n\n    default:\n      return state;\n  }\n};\n\nconst showDescription = (state = DEFAULT_STATE_SELECTED_SHOWDESCRIPTION, action) => {\n  switch (action.type) {\n    case SET_SELECTED_SHOWDESCRIPTION:\n      return validateReducer(action.value, DEFAULT_STATE_SELECTED_SHOWDESCRIPTION);\n\n    default:\n      return state;\n  }\n};\n\nconst itemActiveTypes = (state = DEFAULT_STATE_SELECTED_ITEM_ACTIVE_TYPES, action) => {\n  switch (action.type) {\n    case SET_SELECTED_ITEM_ACTIVE_TYPE:\n      {\n        return { ...state,\n          [action.id]: action.activeType\n        };\n      }\n\n    case CLEAR_SELECTED_ITEM_ACTIVE_TYPES:\n      {\n        return DEFAULT_STATE_SELECTED_ITEM_ACTIVE_TYPES;\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  id,\n  isLoading,\n  showDescription,\n  itemActiveTypes\n}); // Selectors\n\nexport const sGetSelectedRoot = state => state.selected;\nexport const sGetSelectedId = state => sGetSelectedRoot(state).id;\nexport const sGetSelectedIsLoading = state => sGetSelectedRoot(state).isLoading;\nexport const sGetSelectedShowDescription = state => sGetSelectedRoot(state).showDescription;\nexport const sGetSelectedItemActiveType = (state, id) => sGetSelectedRoot(state).itemActiveTypes[id];","import { getInstance } from 'd2';\nexport const NAMESPACE = 'dashboard';\nexport const hasNamespace = async (d2) => await d2.currentUser.dataStore.has(NAMESPACE);\nexport const getNamespace = async (d2, hasNamespace) => hasNamespace ? await d2.currentUser.dataStore.get(NAMESPACE) : await d2.currentUser.dataStore.create(NAMESPACE);\nexport const apiPostUserDataStoreValue = async (key, value) => {\n  const d2 = await getInstance();\n  const ns = await getNamespace(d2, hasNamespace);\n  ns.set(key, value);\n};\nexport const apiGetUserDataStoreValue = async (key, defaultValue) => {\n  const d2 = await getInstance();\n  const namespace = await getNamespace(d2, await hasNamespace(d2));\n  const hasKey = namespace?.keys?.find(k => k === key);\n\n  if (hasKey) {\n    return await namespace.get(key);\n  } else {\n    await apiPostUserDataStoreValue(key, defaultValue, namespace);\n    console.log('(These errors to /userDataStore can be ignored)');\n    return defaultValue;\n  }\n};","import { apiGetUserDataStoreValue, apiPostUserDataStoreValue } from './userDataStore';\nimport { DEFAULT_STATE_CONTROLBAR_ROWS } from '../reducers/controlBar';\nconst KEY_CONTROLBAR_ROWS = 'controlBarRows';\nexport const apiGetControlBarRows = async () => await apiGetUserDataStoreValue(KEY_CONTROLBAR_ROWS, DEFAULT_STATE_CONTROLBAR_ROWS);\nexport const apiPostControlBarRows = async (value) => await apiPostUserDataStoreValue(KEY_CONTROLBAR_ROWS, value);","import { SET_CONTROLBAR_USER_ROWS } from '../reducers/controlBar';\nimport { apiGetControlBarRows } from '../api/controlBar'; // actions\n\nexport const acSetControlBarUserRows = rows => ({\n  type: SET_CONTROLBAR_USER_ROWS,\n  value: rows\n}); // thunks\n\nexport const tSetControlBarRows = () => async dispatch => {\n  const onSuccess = rows => {\n    dispatch(acSetControlBarUserRows(rows));\n  };\n\n  const onError = error => {\n    console.log('Error (apiGetControlBarRows): ', error);\n    return error;\n  };\n\n  try {\n    const controlBarRows = await apiGetControlBarRows();\n    return onSuccess(controlBarRows);\n  } catch (err) {\n    return onError(err);\n  }\n};","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport cx from 'classnames';\nimport arraySort from 'd2-utilizr/lib/arraySort';\nimport PropTypes from 'prop-types';\nimport ControlBar from './ControlBar';\nimport Chip from './DashboardItemChip';\nimport AddCircleIcon from '../../icons/AddCircle';\nimport Filter from './Filter';\nimport ShowMoreButton from './ShowMoreButton';\nimport { FIRST_ROW_PADDING_HEIGHT, MIN_ROW_COUNT, getRowsHeight, getControlBarHeight, getNumRowsFromHeight } from './controlBarDimensions';\nimport { sGetDashboardsFilter } from '../../reducers/dashboardsFilter';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { sGetAllDashboards } from '../../reducers/dashboards';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { acSetControlBarUserRows } from '../../actions/controlBar';\nimport { apiPostControlBarRows } from '../../api/controlBar';\nimport classes from './styles/DashboardsBar.module.css';\nexport const MAX_ROW_COUNT = 10;\nexport const DashboardsBar = ({\n  userRows,\n  onChangeHeight,\n  history,\n  dashboards,\n  selectedId,\n  filterText\n}) => {\n  const [rows, setRows] = useState(userRows);\n  useEffect(() => {\n    setRows(userRows);\n  }, [userRows]);\n\n  const isMaxHeight = () => rows === MAX_ROW_COUNT;\n\n  const adjustHeight = newHeight => {\n    const newRows = Math.max(MIN_ROW_COUNT, getNumRowsFromHeight(newHeight - 52) // don't rush the transition to a bigger row count\n    );\n\n    if (newRows !== rows) {\n      onChangeHeight(Math.min(newRows, MAX_ROW_COUNT));\n    }\n  };\n\n  const onEndDrag = () => apiPostControlBarRows(rows);\n\n  const toggleMaxHeight = () => {\n    const newRows = isMaxHeight() ? userRows : MAX_ROW_COUNT;\n    setRows(newRows);\n  };\n\n  const cancelMaxHeight = () => {\n    setRows(userRows);\n  };\n\n  const onSelectDashboard = () => {\n    const id = getFilteredDashboards()[0]?.id;\n\n    if (id) {\n      history.push(id);\n    }\n  };\n\n  const getFilteredDashboards = () => {\n    const filteredDashboards = arraySort(Object.values(dashboards).filter(d => d.displayName.toLowerCase().includes(filterText.toLowerCase())), 'ASC', 'displayName');\n    return [...filteredDashboards.filter(d => d.starred), ...filteredDashboards.filter(d => !d.starred)];\n  };\n\n  const overflowYClass = isMaxHeight() ? classes.overflowYAuto : classes.overflowYHidden;\n  return <ControlBar height={getControlBarHeight(rows)} onChangeHeight={adjustHeight} onEndDrag={onEndDrag} editMode={false}>\n            <div className={cx(classes.container, overflowYClass)} style={{\n      height: getRowsHeight(rows) + FIRST_ROW_PADDING_HEIGHT\n    }}>\n                <div className={classes.leftControls}>\n                    <Link className={classes.newLink} to={'/new'} data-test=\"link-new-dashboard\">\n                        <AddCircleIcon />\n                    </Link>\n                    <Filter onKeypressEnter={onSelectDashboard} />\n                </div>\n                {getFilteredDashboards().map(dashboard => <Chip key={dashboard.id} label={dashboard.displayName} starred={dashboard.starred} dashboardId={dashboard.id} selected={dashboard.id === selectedId} onClick={cancelMaxHeight} />)}\n            </div>\n            <ShowMoreButton onClick={toggleMaxHeight} isMaxHeight={isMaxHeight()} disabled={userRows === MAX_ROW_COUNT} />\n        </ControlBar>;\n};\nDashboardsBar.propTypes = {\n  dashboards: PropTypes.object,\n  filterText: PropTypes.string,\n  history: PropTypes.object,\n  selectedId: PropTypes.string,\n  userRows: PropTypes.number,\n  onChangeHeight: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  dashboards: sGetAllDashboards(state),\n  filterText: sGetDashboardsFilter(state),\n  selectedId: sGetSelectedId(state),\n  userRows: sGetControlBarUserRows(state)\n});\n\nconst mapDispatchToProps = {\n  onChangeHeight: acSetControlBarUserRows\n};\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(DashboardsBar));","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { getControlBarHeight, MIN_ROW_COUNT } from '../ControlBar/controlBarDimensions';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { DRAG_HANDLE_HEIGHT } from '../ControlBar/ControlBar';\n\nconst DashboardVerticalOffset = props => {\n  const rows = props.editMode ? MIN_ROW_COUNT : props.userRows;\n  const marginTop = getControlBarHeight(rows) + DRAG_HANDLE_HEIGHT;\n  return <div className=\"page-container-top-margin\" style={{\n    marginTop\n  }} />;\n};\n\nconst mapStateToProps = state => ({\n  userRows: sGetControlBarUserRows(state)\n});\n\nDashboardVerticalOffset.propTypes = {\n  editMode: PropTypes.bool,\n  userRows: PropTypes.number\n};\nexport default connect(mapStateToProps)(DashboardVerticalOffset);","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nexport const NoContentMessage = ({\n  text\n}) => <div style={{\n  padding: '50px 10px',\n  textAlign: 'center',\n  fontSize: '15px',\n  fontWeight: 500,\n  color: colors.grey600\n}}>\n        {text}\n    </div>;\nNoContentMessage.propTypes = {\n  text: PropTypes.string\n};\nexport default NoContentMessage;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { InputField } from '@dhis2/ui';\n\nconst ItemSearchField = props => <InputField name=\"Dashboard item search\" label={i18n.t('Search for items to add to this dashboard')} type=\"text\" onChange={props.onChange} onFocus={props.onFocus} value={props.value} dataTest=\"item-search\" />;\n\nItemSearchField.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n  onFocus: PropTypes.func\n};\nexport default ItemSearchField;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { MenuItem, colors } from '@dhis2/ui';\nimport classes from './styles/HeaderMenuItem.module.css';\n\nconst HeaderMenuItem = ({\n  title\n}) => <MenuItem className={classes.item} dense key={title} disabled label={<span style={{\n  color: colors.grey800,\n  fontWeight: '600'\n}}>\n                {title}\n            </span>} />;\n\nHeaderMenuItem.propTypes = {\n  title: PropTypes.string.isRequired\n};\nexport default HeaderMenuItem;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst LaunchIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\" fill={colors.grey600} viewBox=\"0 0 24 24\">\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z\" />\n    </svg>;\n\nLaunchIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default LaunchIcon;","import React from 'react';\nimport { MenuItem, colors } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport { visTypeIcons } from '@dhis2/analytics';\nimport { getItemIcon, VISUALIZATION } from '../../modules/itemTypes';\nimport LaunchIcon from '../../icons/Launch';\nimport classes from './styles/ContentMenuItem.module.css';\n\nconst LaunchLink = ({\n  url\n}) => <a onClick={e => e.stopPropagation()} className={classes.launchLink} target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n        <LaunchIcon />\n    </a>;\n\nLaunchLink.propTypes = {\n  url: PropTypes.string\n};\n\nconst InsertButton = () => <button className={classes.buttonInsert}>{i18n.t('Insert')}</button>;\n\nconst ContentMenuItem = ({\n  type,\n  name,\n  onInsert,\n  url,\n  visType\n}) => {\n  const ItemIcon = getItemIcon(type);\n  const renderedItemIcon = type === VISUALIZATION ? visTypeIcons[visType] : <ItemIcon style={{\n    fill: colors.grey600\n  }} />;\n  return <MenuItem dense onClick={onInsert} label={<div className={classes.menuItem}>\n                    <div className={classes.label}>\n                        <span style={{\n        marginRight: '6px'\n      }}>\n                            {renderedItemIcon}\n                        </span>\n                        <span>{name}</span>\n                        {url ? <LaunchLink url={url} /> : null}\n                    </div>\n                    <InsertButton />\n                </div>} dataTest={`menu-item-${name}`} />;\n};\n\nContentMenuItem.propTypes = {\n  name: PropTypes.string,\n  type: PropTypes.string,\n  url: PropTypes.string,\n  visType: PropTypes.string,\n  onInsert: PropTypes.func\n};\nexport default ContentMenuItem;","/** @module reducers/editDashboard */\nimport update from 'immutability-helper';\nimport isEmpty from 'lodash/isEmpty';\nimport { orArray, orObject } from '../modules/util';\nexport const RECEIVED_EDIT_DASHBOARD = 'RECEIVED_EDIT_DASHBOARD';\nexport const RECEIVED_NOT_EDITING = 'RECEIVED_NOT_EDITING';\nexport const START_NEW_DASHBOARD = 'START_NEW_DASHBOARD';\nexport const RECEIVED_TITLE = 'RECEIVED_TITLE';\nexport const RECEIVED_DESCRIPTION = 'RECEIVED_DESCRIPTION';\nexport const ADD_DASHBOARD_ITEM = 'ADD_DASHBOARD_ITEM';\nexport const REMOVE_DASHBOARD_ITEM = 'REMOVE_DASHBOARD_ITEM';\nexport const UPDATE_DASHBOARD_ITEM = 'UPDATE_DASHBOARD_ITEM';\nexport const RECEIVED_DASHBOARD_LAYOUT = 'RECEIVED_DASHBOARD_LAYOUT';\nexport const SET_PRINT_PREVIEW_VIEW = 'SET_PRINT_PREVIEW_VIEW';\nexport const CLEAR_PRINT_PREVIEW_VIEW = 'CLEAR_PRINT_PREVIEW_VIEW';\nexport const DEFAULT_STATE_EDIT_DASHBOARD = {};\nexport const NEW_DASHBOARD_STATE = {\n  id: '',\n  name: '',\n  access: {},\n  description: '',\n  dashboardItems: [],\n  printPreviewView: false\n};\nexport default ((state = DEFAULT_STATE_EDIT_DASHBOARD, action) => {\n  switch (action.type) {\n    case RECEIVED_EDIT_DASHBOARD:\n      {\n        const newState = {};\n        Object.keys(NEW_DASHBOARD_STATE).map(k => newState[k] = action.value[k]);\n        newState.printPreviewView = false;\n        return newState;\n      }\n\n    case RECEIVED_NOT_EDITING:\n      return DEFAULT_STATE_EDIT_DASHBOARD;\n\n    case SET_PRINT_PREVIEW_VIEW:\n      return Object.assign({}, state, {\n        printPreviewView: true\n      });\n\n    case CLEAR_PRINT_PREVIEW_VIEW:\n      return Object.assign({}, state, {\n        printPreviewView: false\n      });\n\n    case START_NEW_DASHBOARD:\n      return NEW_DASHBOARD_STATE;\n\n    case RECEIVED_TITLE:\n      {\n        return Object.assign({}, state, {\n          name: action.value\n        });\n      }\n\n    case RECEIVED_DESCRIPTION:\n      {\n        return Object.assign({}, state, {\n          description: action.value\n        });\n      }\n\n    case ADD_DASHBOARD_ITEM:\n      if (!action.value.position) {\n        return update(state, {\n          dashboardItems: {\n            $unshift: [action.value]\n          }\n        });\n      }\n\n      return update(state, {\n        dashboardItems: {\n          $splice: [[parseInt(action.value.position), 0, action.value]]\n        }\n      });\n\n    case REMOVE_DASHBOARD_ITEM:\n      {\n        const idToRemove = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === idToRemove);\n\n        if (dashboardItemIndex > -1) {\n          return update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1]]\n            }\n          });\n        }\n\n        return state;\n      }\n\n    case RECEIVED_DASHBOARD_LAYOUT:\n      {\n        const stateItems = orArray(state.dashboardItems);\n        let layoutHasChanged = false;\n        const newStateItems = action.value.map(({\n          x,\n          y,\n          w,\n          h,\n          i\n        }) => {\n          const stateItem = stateItems.find(si => si.id === i);\n\n          if (!(stateItem.x === x && stateItem.y === y && stateItem.w === w && stateItem.h === h)) {\n            layoutHasChanged = true;\n            return Object.assign({}, stateItem, {\n              w,\n              h,\n              x,\n              y\n            });\n          }\n\n          return stateItem;\n        });\n        return layoutHasChanged ? { ...state,\n          dashboardItems: newStateItems\n        } : state;\n      }\n\n    case UPDATE_DASHBOARD_ITEM:\n      {\n        const dashboardItem = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === dashboardItem.id);\n\n        if (dashboardItemIndex > -1) {\n          const newState = update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1, Object.assign({}, dashboardItem)]]\n            }\n          });\n          return newState;\n        }\n\n        return state;\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetEditDashboardRoot = state => state.editDashboard; // selectors\n\nexport const sGetIsEditing = state => !isEmpty(state.editDashboard);\nexport const sGetIsPrintPreviewView = state => sGetEditDashboardRoot(state).printPreviewView;\nexport const sGetIsNewDashboard = state => {\n  return !isEmpty(state.editDashboard) && sGetEditDashboardRoot(state).id === '';\n};\nexport const sGetEditDashboardName = state => sGetEditDashboardRoot(state).name;\nexport const sGetEditDashboardDescription = state => sGetEditDashboardRoot(state).description;\nexport const sGetEditDashboardItems = state => orObject(sGetEditDashboardRoot(state)).dashboardItems;","import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { getEndPointName, MAP } from '../modules/itemTypes';\nimport { getVisualizationId } from '../modules/item'; // Id, name\n\nexport const getIdNameFields = ({\n  rename\n} = {}) => ['id', `${rename ? 'displayName~rename(name)' : 'name,displayName'}`]; // Item\n\nexport const getItemFields = () => ['dimensionItem~rename(id)', 'displayName~rename(name)', 'dimensionItemType']; // Dimension\n\nexport const getDimensionFields = ({\n  withItems\n}) => arrayClean(['dimension', 'legendSet[id]', 'filter', 'programStage', withItems ? `items[${getItemFields().join(',')}]` : ``]); // Axis\n\nexport const getAxesFields = ({\n  withItems\n}) => [`columns[${getDimensionFields({\n  withItems\n}).join(',')}]`, `rows[${getDimensionFields({\n  withItems\n}).join(',')}]`, `filters[${getDimensionFields({\n  withItems\n}).join(',')}]`]; // Favorite\n\nexport const getFavoriteFields = ({\n  withDimensions,\n  withOptions\n}) => {\n  return arrayClean([`${getIdNameFields({\n    rename: true\n  }).join(',')}`, 'displayDescription~rename(description)', withDimensions ? `${getAxesFields({\n    withItems: true\n  }).join(',')}` : ``, withOptions ? ['*', '!attributeDimensions', '!attributeValues', '!category', '!categoryDimensions', '!categoryOptionGroupSetDimensions', '!columnDimensions', '!dataDimensionItems', '!dataElementDimensions', '!dataElementGroupSetDimensions', '!filterDimensions', '!itemOrganisationUnitGroups', '!lastUpdatedBy', '!organisationUnitGroupSetDimensions', '!organisationUnitLevels', '!organisationUnits', '!programIndicatorDimensions', '!relativePeriods', '!reportParams', '!rowDimensions', '!translations', '!userOrganisationUnit', '!userOrganisationUnitChildren', '!userOrganisationUnitGrandChildren'].join(',') : '']);\n};\nexport const getFavoritesFields = ({\n  withDimensions\n}) => [`reportTable[${getFavoriteFields({\n  withDimensions\n}).join(',')}]`, `chart[${['type', ...getFavoriteFields({\n  withDimensions\n})].join(',')}]`, `map[${getFavoriteFields({\n  withDimensions\n}).join(',')}]`, `eventReport[${getFavoriteFields({\n  withDimensions\n}).join(',')}]`, `eventChart[${getFavoriteFields({\n  withDimensions\n}).join(',')}]`]; // List item\n\nexport const getListItemFields = () => [`reports[${['type', ...getIdNameFields({\n  rename: true\n})].join(',')}]`, `resources[${getIdNameFields({\n  rename: true\n}).join(',')}]`, `users[${getIdNameFields({\n  rename: true\n}).join(',')}]`]; // Map\n\nexport const getMapFields = () => [`${getIdNameFields({\n  rename: true\n}).join(',')}`, 'user,longitude,latitude,zoom,basemap', `mapViews[${getFavoriteFields({\n  withDimensions: true,\n  withOptions: true\n})}]`]; // Api\n\nexport const apiFetchVisualization = async item => {\n  const id = getVisualizationId(item);\n  const fields = item.type === MAP ? getMapFields() : getFavoriteFields({\n    withDimensions: true,\n    withOptions: true\n  });\n  const d2 = await getInstance();\n  return await d2.Api.getApi().get(`${getEndPointName(item.type)}/${id}`, {\n    fields\n  });\n};","import arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { getListItemFields, getFavoritesFields, getIdNameFields } from './metadata'; // Helper functions\n\nexport const onError = error => console.log('Error: ', error); // Dashboard item\n\nexport const getDashboardItemsFields = ({\n  withFavorite\n} = {}) => arrayClean(['id', 'type', 'shape', 'x', 'y', 'width~rename(w)', 'height~rename(h)', 'messages', 'text', 'appKey', `${getListItemFields().join(',')}`, withFavorite ? `${getFavoritesFields({\n  withDimensions: withFavorite.withDimensions\n}).join(',')}` : ``]); // Dashboard\n\nexport const getDashboardFields = ({\n  withItems,\n  withFavorite\n} = {}) => arrayClean([`${getIdNameFields().join(',')}`, 'description', 'displayDescription', 'favorite', `user[${getIdNameFields({\n  rename: true\n}).join(',')}]`, 'created', 'lastUpdated', 'access', 'href', // needed for d2-ui-translations-dialog, since we don't pass a d2 Model anymore\nwithItems ? `dashboardItems[${getDashboardItemsFields({\n  withFavorite\n}).join(',')}]` : ``]);","import arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { onError, getDashboardFields } from './index';\nexport const dashboardsQuery = {\n  resource: 'dashboards',\n  params: {\n    fields: [getDashboardFields(), 'dashboardItems[id]'].join(','),\n    paging: false\n  }\n};\nexport const dashboardQuery = {\n  resource: 'dashboards',\n  id: ({\n    id\n  }) => id,\n  params: {\n    fields: arrayClean(getDashboardFields({\n      withItems: true,\n      withFavorite: {\n        withDimensions: false\n      }\n    })).join(',')\n  }\n};\nexport const starDashboardMutation = {\n  type: 'create',\n  resource: 'dashboards',\n  // TODO create mutation does not accept the id function\n  // we must use a workaround until dataEngine supports dynamic resource/path\n  id: ({\n    id\n  }) => `${id}/favorite`\n};\nexport const unstarDashboardMutation = {\n  type: 'delete',\n  resource: 'dashboards',\n  id: ({\n    id\n  }) => `${id}/favorite`\n};\nexport const deleteDashboardMutation = {\n  type: 'delete',\n  resource: 'dashboards',\n  id: ({\n    id\n  }) => id\n}; // Get \"all\" dashboards on startup\n\nexport const apiFetchDashboards = async dataEngine => {\n  try {\n    const dashboardsData = await dataEngine.query({\n      dashboards: dashboardsQuery\n    });\n    return dashboardsData.dashboards.dashboards;\n  } catch (error) {\n    onError(error);\n  }\n}; // Get more info about selected dashboard\n\nexport const apiFetchDashboard = async (dataEngine, id) => {\n  try {\n    const dashboardData = await dataEngine.query({\n      dashboard: dashboardQuery\n    }, {\n      variables: {\n        id\n      }\n    });\n    return dashboardData.dashboard;\n  } catch (error) {\n    onError(error);\n  }\n}; // Star dashboard\n\nexport const apiStarDashboard = async (dataEngine, id, isStarred) => {\n  try {\n    if (isStarred) {\n      await dataEngine.mutate(starDashboardMutation, {\n        variables: {\n          id\n        }\n      });\n    } else {\n      await dataEngine.mutate(unstarDashboardMutation, {\n        variables: {\n          id\n        }\n      });\n    }\n  } catch (error) {\n    onError(error);\n  }\n};\nexport const apiDeleteDashboard = async (dataEngine, id) => {\n  try {\n    await dataEngine.mutate(deleteDashboardMutation, {\n      variables: {\n        id\n      }\n    });\n  } catch (error) {\n    onError(error);\n  }\n};","import { apiFetchDashboard } from './dashboards';\n\nconst onError = error => console.log('Error: ', error);\n\nexport const createDashboardMutation = {\n  resource: 'dashboards',\n  type: 'create',\n  data: ({\n    data\n  }) => data\n};\nexport const updateDashboardMutation = {\n  resource: 'dashboards',\n  type: 'update',\n  id: ({\n    id\n  }) => id,\n  data: ({\n    data\n  }) => data\n};\n\nconst generatePayload = (dashboard = {}, data) => {\n  return { ...dashboard,\n    name: data.name,\n    description: data.description,\n    dashboardItems: data.dashboardItems.map(item => ({ ...item,\n      width: item.w,\n      height: item.h\n    }))\n  };\n};\n\nexport const updateDashboard = async (dataEngine, data) => {\n  try {\n    const dashboard = await apiFetchDashboard(dataEngine, data.id);\n    const {\n      response\n    } = await dataEngine.mutate(updateDashboardMutation, {\n      variables: {\n        id: data.id,\n        data: generatePayload(dashboard, data)\n      }\n    });\n    return response.uid;\n  } catch (error) {\n    onError(error);\n  }\n};\nexport const postDashboard = async (dataEngine, data) => {\n  try {\n    const {\n      response\n    } = await dataEngine.mutate(createDashboardMutation, {\n      variables: {\n        data: generatePayload({}, data)\n      }\n    });\n    return response.uid;\n  } catch (error) {\n    onError(error);\n  }\n};","export const RECEIVED_USER = 'RECEIVED_USER';\nexport const DEFAULT_STATE_USER = {\n  id: '',\n  username: '',\n  uiLocale: '',\n  isSuperuser: false\n};\nexport default ((state = DEFAULT_STATE_USER, action) => {\n  switch (action.type) {\n    case RECEIVED_USER:\n      {\n        return fromD2ToUserObj(action.value);\n      }\n\n    default:\n      return state;\n  }\n});\n\nfunction fromD2ToUserObj(d2Object) {\n  return {\n    id: d2Object.id,\n    username: d2Object.username,\n    uiLocale: d2Object.settings.keyUiLocale,\n    isSuperuser: d2Object.authorities.has('ALL')\n  };\n} // selectors\n\n\nexport const sGetUserId = state => state.user.id;\nexport const sGetUserUsername = state => state.user.username;\nexport const sGetIsSuperuser = state => state.user.isSuperuser;\nexport const sGetUiLocale = state => state.user.uiLocale;","import { SET_DASHBOARDS, ADD_DASHBOARDS, SET_DASHBOARD_STARRED, SET_DASHBOARD_DISPLAY_NAME, SET_DASHBOARD_ITEMS } from '../reducers/dashboards';\nimport { getCustomDashboards, sGetDashboardById, sGetDashboardsSortedByStarred } from '../reducers/dashboards';\nimport { NON_EXISTING_DASHBOARD_ID } from '../reducers/selected';\nimport { sGetUserUsername } from '../reducers/user';\nimport { tSetSelectedDashboardById, acSetSelectedId } from './selected';\nimport { apiFetchDashboards, apiStarDashboard, apiDeleteDashboard } from '../api/dashboards';\nimport { getPreferredDashboardId } from '../api/localStorage';\nimport { arrayToIdMap } from '../modules/util'; // actions\n\nexport const acSetDashboards = dashboards => ({\n  type: SET_DASHBOARDS,\n  value: arrayToIdMap(getCustomDashboards(dashboards))\n});\nexport const acAppendDashboards = dashboards => ({\n  type: ADD_DASHBOARDS,\n  value: arrayToIdMap(getCustomDashboards(dashboards))\n});\nexport const acSetDashboardStarred = (dashboardId, isStarred) => ({\n  type: SET_DASHBOARD_STARRED,\n  dashboardId: dashboardId,\n  value: isStarred\n});\nexport const acSetDashboardDisplayName = (dashboardId, value) => ({\n  type: SET_DASHBOARD_DISPLAY_NAME,\n  dashboardId,\n  value\n});\nexport const acSetDashboardItems = value => ({\n  type: SET_DASHBOARD_ITEMS,\n  value\n}); // thunks\n\nexport const tFetchDashboards = () => async (dispatch, getState, dataEngine) => {\n  const dashboards = await apiFetchDashboards(dataEngine);\n  dispatch(acSetDashboards(dashboards));\n};\nexport const tSelectDashboard = id => async (dispatch, getState) => {\n  const onError = error => {\n    console.log('Error (apiFetchDashboards): ', error);\n    return error;\n  };\n\n  try {\n    const state = getState();\n    let dashboardToSelect = null;\n\n    if (id) {\n      dashboardToSelect = sGetDashboardById(state, id) || null;\n    } else {\n      const preferredId = getPreferredDashboardId(sGetUserUsername(state));\n      const dash = sGetDashboardById(state, preferredId);\n      dashboardToSelect = preferredId && dash ? dash : sGetDashboardsSortedByStarred(state)[0];\n    }\n\n    if (dashboardToSelect) {\n      dispatch(tSetSelectedDashboardById(dashboardToSelect.id));\n    } else {\n      dispatch(acSetSelectedId(NON_EXISTING_DASHBOARD_ID));\n    }\n  } catch (err) {\n    return onError(err);\n  }\n};\nexport const tStarDashboard = (id, isStarred) => async (dispatch, getState, dataEngine) => {\n  const onSuccess = id => {\n    dispatch(acSetDashboardStarred(id, isStarred));\n    return id;\n  };\n\n  const onError = error => {\n    console.log('Error (apiStarDashboard): ', error);\n    return error;\n  };\n\n  try {\n    await apiStarDashboard(dataEngine, id, isStarred);\n    return onSuccess(id);\n  } catch (err) {\n    return onError(err);\n  }\n};\nexport const tDeleteDashboard = id => async (dispatch, getState, dataEngine) => {\n  try {\n    await apiDeleteDashboard(dataEngine, id);\n    await dispatch(tFetchDashboards());\n    return Promise.resolve();\n  } catch (err) {\n    console.log('Error (deleteDashboard): ', err);\n    return err;\n  }\n};","import { getDimensionById, DIMENSION_ID_PERIOD, DIMENSION_ID_ORGUNIT } from '@dhis2/analytics';\nexport const SET_DIMENSIONS = 'SET_DIMENSIONS';\nexport const DEFAULT_DIMENSIONS = [getDimensionById(DIMENSION_ID_PERIOD), getDimensionById(DIMENSION_ID_ORGUNIT)];\nexport default ((state = DEFAULT_DIMENSIONS, action) => {\n  switch (action.type) {\n    case SET_DIMENSIONS:\n      {\n        return [...DEFAULT_DIMENSIONS, ...action.value];\n      }\n\n    default:\n      return state;\n  }\n});\nexport const sGetDimensions = state => state.dimensions;","import { sGetDimensions } from './dimensions';\nimport { createSelector } from 'reselect';\nexport const CLEAR_ITEM_FILTERS = 'CLEAR_ITEM_FILTERS';\nexport const SET_ITEM_FILTERS = 'SET_ITEM_FILTERS';\nexport const ADD_ITEM_FILTER = 'ADD_ITEM_FILTER';\nexport const REMOVE_ITEM_FILTER = 'REMOVE_ITEM_FILTER';\nexport const DEFAULT_STATE_ITEM_FILTERS = {};\nexport default ((state = DEFAULT_STATE_ITEM_FILTERS, action) => {\n  switch (action.type) {\n    case ADD_ITEM_FILTER:\n      {\n        return { ...state,\n          [action.filter.id]: action.filter.value\n        };\n      }\n\n    case REMOVE_ITEM_FILTER:\n      {\n        const newState = { ...state\n        };\n        delete newState[action.id];\n        return newState;\n      }\n\n    case SET_ITEM_FILTERS:\n      {\n        return action.filters;\n      }\n\n    case CLEAR_ITEM_FILTERS:\n      {\n        return DEFAULT_STATE_ITEM_FILTERS;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetItemFiltersRoot = state => state.itemFilters; // simplify the filters structure to:\n// [{ id: 'pe', name: 'Period', values: [{ id: 2019: name: '2019' }, {id: 'LAST_MONTH', name: 'Last month' }]}, ...]\n\nexport const sGetNamedItemFilters = createSelector([sGetItemFiltersRoot, sGetDimensions], (filters, dimensions) => Object.keys(filters).reduce((arr, id) => {\n  arr.push({\n    id: id,\n    name: dimensions.find(dimension => dimension.id === id).name,\n    values: filters[id].map(value => ({\n      id: value.id,\n      name: value.displayName || value.name\n    }))\n  });\n  return arr;\n}, []));","import { ADD_ITEM_FILTER, REMOVE_ITEM_FILTER, SET_ITEM_FILTERS, CLEAR_ITEM_FILTERS } from '../reducers/itemFilters';\nexport const FILTER_ORG_UNIT = 'ou'; // actions\n\nexport const acAddItemFilter = filter => ({\n  type: ADD_ITEM_FILTER,\n  filter\n});\nexport const acRemoveItemFilter = id => ({\n  type: REMOVE_ITEM_FILTER,\n  id\n});\nexport const acClearItemFilters = () => ({\n  type: CLEAR_ITEM_FILTERS\n});\nexport const acSetItemFilters = filters => ({\n  type: SET_ITEM_FILTERS,\n  filters\n});","import update from 'immutability-helper';\nimport { arrayToIdMap } from '../modules/util';\nexport const RECEIVED_MESSAGES = 'RECEIVED_MESSAGES';\nexport default ((state = {}, action) => {\n  switch (action.type) {\n    case RECEIVED_MESSAGES:\n      {\n        const conversations = arrayToIdMap(action.value);\n        const newState = update(state, {\n          $merge: conversations\n        });\n        return newState;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetMessagesRoot = state => state.messages;","export const messageConversationsQuery = {\n  resource: 'messageConversations',\n  params: {\n    fields: 'id,messageCount,lastUpdated,messageType,displayName,read,messages[id,read,sender[id,displayName],text,lastUpdated]',\n    order: 'read:asc',\n    pageSize: 200\n  }\n};\nexport const getMessages = async dataEngine => {\n  try {\n    const {\n      messageConversations\n    } = await dataEngine.query({\n      messageConversations: messageConversationsQuery\n    });\n    return messageConversations.messageConversations;\n  } catch (error) {\n    console.log('Error:', error);\n  }\n};","import { RECEIVED_MESSAGES } from '../../../reducers/messages';\nimport { getMessages } from '../../../api/messages';\n\nconst onError = (action, error) => {\n  console.log(`Error in action ${action}: ${error}`);\n  return error;\n};\n\nexport const receivedMessages = value => ({\n  type: RECEIVED_MESSAGES,\n  value\n});\nexport const tGetMessages = dataEngine => async dispatch => {\n  try {\n    const messageConversations = await getMessages(dataEngine);\n    return dispatch(receivedMessages(messageConversations));\n  } catch (err) {\n    return onError('Get Messages', err);\n  }\n};","export const SET_ALERT_MESSAGE = 'SET_ALERT_MESSAGE';\nexport const CLEAR_ALERT_MESSAGE = 'CLEAR_ALERT_MESSAGE';\nexport const DEFAULT_STATE_ALERT = null;\nexport default ((state = DEFAULT_STATE_ALERT, action) => {\n  switch (action.type) {\n    case SET_ALERT_MESSAGE:\n      {\n        return action.value;\n      }\n\n    case CLEAR_ALERT_MESSAGE:\n      {\n        return DEFAULT_STATE_ALERT;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetAlertMessage = state => state.alert;","import { SET_ALERT_MESSAGE, CLEAR_ALERT_MESSAGE } from '../reducers/alert';\nexport const acSetAlertMessage = value => ({\n  type: SET_ALERT_MESSAGE,\n  value\n});\nexport const acClearAlertMessage = () => ({\n  type: CLEAR_ALERT_MESSAGE\n});","import { orObject } from '../modules/util';\nimport objectClean from 'd2-utilizr/lib/objectClean';\n/** @module reducers/visualizations */\n\nexport const ADD_VISUALIZATION = 'ADD_VISUALIZATION';\nexport const SET_ACTIVE_VISUALIZATION_TYPE = 'SET_ACTIVE_VISUALIZATION_TYPE';\nexport const CLEAR_VISUALIZATIONS = 'CLEAR_VISUALIZATIONS';\nexport const DEFAULT_STATE_VISUALIZATIONS = {};\n\nconst isEmpty = p => p === undefined || p === null;\n\nexport default ((state = DEFAULT_STATE_VISUALIZATIONS, action) => {\n  switch (action.type) {\n    case ADD_VISUALIZATION:\n      {\n        return { ...state,\n          [action.value.id]: objectClean({ ...orObject(state[action.value.id]),\n            ...action.value\n          }, isEmpty)\n        };\n      }\n\n    case CLEAR_VISUALIZATIONS:\n      {\n        return DEFAULT_STATE_VISUALIZATIONS;\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetVisualizationsRoot = state => state.visualizations; // selectors level 1\n\nexport const sGetVisualization = (state, id) => {\n  return sGetVisualizationsRoot(state)[id];\n};","import { ADD_VISUALIZATION, CLEAR_VISUALIZATIONS } from '../reducers/visualizations';\nexport const acAddVisualization = value => ({\n  type: ADD_VISUALIZATION,\n  value\n});\nexport const acClearVisualizations = () => ({\n  type: CLEAR_VISUALIZATIONS\n});","import { apiGetUserDataStoreValue, apiPostUserDataStoreValue } from './userDataStore';\nimport { DEFAULT_STATE_SELECTED_SHOWDESCRIPTION } from '../reducers/selected';\nconst KEY_SHOW_DESCRIPTION = 'showDescription';\nexport const apiGetShowDescription = async () => await apiGetUserDataStoreValue(KEY_SHOW_DESCRIPTION, DEFAULT_STATE_SELECTED_SHOWDESCRIPTION);\nexport const apiPostShowDescription = async (value) => await apiPostUserDataStoreValue(KEY_SHOW_DESCRIPTION, value);","import i18n from '@dhis2/d2-i18n';\nimport { getCustomDashboards, sGetDashboardById } from '../reducers/dashboards';\nimport { SET_SELECTED_ID, SET_SELECTED_ISLOADING, SET_SELECTED_SHOWDESCRIPTION, SET_SELECTED_ITEM_ACTIVE_TYPE, CLEAR_SELECTED_ITEM_ACTIVE_TYPES, sGetSelectedIsLoading, sGetSelectedId } from '../reducers/selected';\nimport { sGetUserUsername } from '../reducers/user';\nimport { acSetDashboardItems, acAppendDashboards } from './dashboards';\nimport { acClearItemFilters } from './itemFilters';\nimport { tGetMessages } from '../components/Item/MessagesItem/actions';\nimport { acSetAlertMessage, acClearAlertMessage } from './alert';\nimport { acAddVisualization, acClearVisualizations } from './visualizations';\nimport { apiFetchDashboard } from '../api/dashboards';\nimport { storePreferredDashboardId } from '../api/localStorage';\nimport { apiGetShowDescription, apiPostShowDescription } from '../api/description';\nimport { withShape } from '../components/ItemGrid/gridUtil';\nimport { getVisualizationFromItem } from '../modules/item';\nimport { REPORT_TABLE, CHART, MAP, EVENT_REPORT, EVENT_CHART, MESSAGES } from '../modules/itemTypes'; // actions\n\nexport const acSetSelectedId = value => ({\n  type: SET_SELECTED_ID,\n  value\n});\nexport const acSetSelectedIsLoading = value => ({\n  type: SET_SELECTED_ISLOADING,\n  value\n});\nexport const acSetSelectedShowDescription = value => ({\n  type: SET_SELECTED_SHOWDESCRIPTION,\n  value\n});\nexport const acSetSelectedItemActiveType = (id, activeType) => {\n  const action = {\n    type: SET_SELECTED_ITEM_ACTIVE_TYPE,\n    id,\n    activeType\n  };\n  return action;\n};\nexport const acClearSelectedItemActiveTypes = () => ({\n  type: CLEAR_SELECTED_ITEM_ACTIVE_TYPES\n}); // thunks\n\nexport const tSetSelectedDashboardById = id => async (dispatch, getState, dataEngine) => {\n  dispatch(acSetSelectedIsLoading(true));\n  const alertTimeout = setTimeout(() => {\n    const name = sGetDashboardById(getState(), id)?.displayName;\n\n    if (sGetSelectedIsLoading(getState()) && name) {\n      dispatch(acSetAlertMessage(i18n.t('Loading dashboard – {{name}}', {\n        name\n      })));\n    }\n  }, 500);\n\n  const onSuccess = selected => {\n    dispatch(acAppendDashboards(selected));\n    const customDashboard = getCustomDashboards(selected)[0];\n    dispatch(acSetDashboardItems(withShape(customDashboard.dashboardItems)));\n    storePreferredDashboardId(sGetUserUsername(getState()), id);\n\n    if (id !== sGetSelectedId(getState())) {\n      dispatch(acClearItemFilters());\n      dispatch(acClearVisualizations());\n      dispatch(acClearSelectedItemActiveTypes());\n    }\n\n    customDashboard.dashboardItems.forEach(item => {\n      switch (item.type) {\n        case REPORT_TABLE:\n        case CHART:\n        case MAP:\n        case EVENT_REPORT:\n        case EVENT_CHART:\n          dispatch(acAddVisualization(getVisualizationFromItem(item)));\n          break;\n\n        case MESSAGES:\n          dispatch(tGetMessages(dataEngine));\n          break;\n\n        default:\n          break;\n      }\n    });\n    dispatch(acSetSelectedId(id));\n    dispatch(acSetSelectedIsLoading(false));\n    clearTimeout(alertTimeout);\n    dispatch(acClearAlertMessage());\n    return selected;\n  };\n\n  const onError = error => {\n    console.log('Error: ', error);\n    return error;\n  };\n\n  try {\n    const dashboard = await apiFetchDashboard(dataEngine, id);\n    return onSuccess(dashboard);\n  } catch (err) {\n    return onError(err);\n  }\n};\nexport const tSetShowDescription = () => async dispatch => {\n  const onSuccess = value => {\n    dispatch(acSetSelectedShowDescription(value));\n  };\n\n  const onError = error => {\n    console.log('Error (apiGetShowDescription): ', error);\n    return error;\n  };\n\n  try {\n    const showDescription = await apiGetShowDescription();\n    return onSuccess(showDescription);\n  } catch (err) {\n    return onError(err);\n  }\n};\nexport const tUpdateShowDescription = value => async dispatch => {\n  const onSuccess = () => {\n    dispatch(acSetSelectedShowDescription(value));\n  };\n\n  const onError = error => {\n    console.log('Error (apiGetShowDescription): ', error);\n    return error;\n  };\n\n  try {\n    await apiPostShowDescription(value);\n    return onSuccess();\n  } catch (err) {\n    return onError(err);\n  }\n};","export const getPreferredDashboardId = username => localStorage.getItem(`dhis2.dashboard.current.${username}`) || undefined;\nexport const storePreferredDashboardId = (username, dashboardId) => {\n  localStorage.setItem(`dhis2.dashboard.current.${username}`, dashboardId);\n};","import { generateUid } from 'd2/uid';\nimport i18n from '@dhis2/d2-i18n';\nimport { RECEIVED_EDIT_DASHBOARD, START_NEW_DASHBOARD, RECEIVED_NOT_EDITING, RECEIVED_TITLE, RECEIVED_DESCRIPTION, RECEIVED_DASHBOARD_LAYOUT, ADD_DASHBOARD_ITEM, UPDATE_DASHBOARD_ITEM, REMOVE_DASHBOARD_ITEM, SET_PRINT_PREVIEW_VIEW, CLEAR_PRINT_PREVIEW_VIEW } from '../reducers/editDashboard';\nimport { sGetEditDashboardRoot } from '../reducers/editDashboard';\nimport { updateDashboard, postDashboard } from '../api/editDashboard';\nimport { tSetSelectedDashboardById } from '../actions/selected';\nimport { NEW_ITEM_SHAPE, getGridItemProperties, getPageBreakItemShape, getPrintTitlePageItemShape } from '../components/ItemGrid/gridUtil';\nimport { itemTypeMap, PAGEBREAK, PRINT_TITLE_PAGE } from '../modules/itemTypes';\nimport { convertUiItemsToBackend } from '../modules/uiBackendItemConverter';\n\nconst onError = error => {\n  console.log('Error (Saving Dashboard): ', error);\n  return error;\n}; // actions\n\n\nexport const acSetEditDashboard = (dashboard, items) => {\n  const val = { ...dashboard,\n    dashboardItems: items\n  };\n  return {\n    type: RECEIVED_EDIT_DASHBOARD,\n    value: val\n  };\n};\nexport const acSetEditNewDashboard = () => ({\n  type: START_NEW_DASHBOARD\n});\nexport const acClearEditDashboard = () => ({\n  type: RECEIVED_NOT_EDITING\n});\nexport const acSetPrintPreviewView = () => ({\n  type: SET_PRINT_PREVIEW_VIEW\n});\nexport const acClearPrintPreviewView = () => ({\n  type: CLEAR_PRINT_PREVIEW_VIEW\n});\nexport const acSetDashboardTitle = value => ({\n  type: RECEIVED_TITLE,\n  value\n});\nexport const acSetDashboardDescription = value => ({\n  type: RECEIVED_DESCRIPTION,\n  value\n});\nexport const acUpdateDashboardLayout = value => ({\n  type: RECEIVED_DASHBOARD_LAYOUT,\n  value\n});\nexport const acAddDashboardItem = item => {\n  const type = item.type;\n  delete item.type;\n  const itemPropName = itemTypeMap[type].propName;\n  const id = generateUid();\n  const gridItemProperties = getGridItemProperties(id);\n  let shape;\n\n  if (type === PAGEBREAK) {\n    const yPos = item.yPos || 0;\n    shape = getPageBreakItemShape(yPos, item.isStatic);\n  } else if (type === PRINT_TITLE_PAGE) {\n    shape = getPrintTitlePageItemShape();\n  } else {\n    shape = NEW_ITEM_SHAPE;\n  }\n\n  return {\n    type: ADD_DASHBOARD_ITEM,\n    value: {\n      id,\n      type,\n      position: item.position || null,\n      [itemPropName]: item.content,\n      ...NEW_ITEM_SHAPE,\n      ...gridItemProperties,\n      ...shape\n    }\n  };\n};\nexport const acUpdateDashboardItem = item => ({\n  type: UPDATE_DASHBOARD_ITEM,\n  value: item\n});\nexport const acRemoveDashboardItem = value => ({\n  type: REMOVE_DASHBOARD_ITEM,\n  value\n}); // thunks\n\nexport const tSaveDashboard = () => async (dispatch, getState, dataEngine) => {\n  const dashboard = sGetEditDashboardRoot(getState());\n  const dashboardToSave = { ...dashboard,\n    dashboardItems: convertUiItemsToBackend(dashboard.dashboardItems),\n    name: dashboard.name || i18n.t('Untitled dashboard')\n  };\n\n  try {\n    const dashboardId = dashboardToSave.id ? await updateDashboard(dataEngine, dashboardToSave) : await postDashboard(dataEngine, dashboardToSave);\n    dispatch(acClearEditDashboard());\n    await dispatch(tSetSelectedDashboardById(dashboardId));\n    return Promise.resolve(dashboardId);\n  } catch (error) {\n    onError(error);\n  }\n};","import i18n from '@dhis2/d2-i18n';\nimport { VISUALIZATION, MAP, EVENT_CHART, EVENT_REPORT, USERS, REPORTS, RESOURCES, APP, MESSAGES, TEXT, SPACER } from '../../modules/itemTypes';\nexport const singleItems = [{\n  id: 'additional',\n  header: i18n.t('Additional items'),\n  items: [{\n    type: TEXT,\n    name: i18n.t('Text box'),\n    content: ''\n  }, {\n    type: MESSAGES,\n    name: i18n.t('Messages'),\n    content: 'true'\n  }, {\n    type: SPACER,\n    name: i18n.t('Spacer'),\n    content: ''\n  }]\n}]; // categorizedItems are grouped in the item selector menu\n\nexport const categorizedItems = [VISUALIZATION, MAP, EVENT_REPORT, EVENT_CHART, USERS, REPORTS, RESOURCES, APP]; // listItemTypes are included in a single dashboard item\n\nexport const listItemTypes = [REPORTS, RESOURCES, USERS];","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { MenuItem, Divider } from '@dhis2/ui';\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\nimport { tAddListItemContent } from './actions';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\nimport { getItemUrl, APP, VISUALIZATION } from '../../modules/itemTypes';\nimport { categorizedItems, listItemTypes } from './selectableItems';\nimport classes from './styles/CategorizedMenuGroup.module.css';\n\nclass CategorizedMenuGroup extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      seeMore: false\n    };\n  }\n\n  addItem = item => () => {\n    const {\n      type,\n      acAddDashboardItem,\n      tAddListItemContent\n    } = this.props;\n\n    if (type === APP) {\n      acAddDashboardItem({\n        type,\n        content: item.key\n      });\n    } else {\n      const newItem = {\n        id: item.id,\n        name: item.displayName || item.name\n      };\n\n      if (listItemTypes.includes(type)) {\n        tAddListItemContent(type, newItem);\n      } else {\n        acAddDashboardItem({\n          type,\n          content: newItem\n        });\n      }\n    }\n  };\n  toggleSeeMore = () => {\n    this.setState({\n      seeMore: !this.state.seeMore\n    });\n    this.props.onChangeItemsLimit(this.props.type);\n  };\n\n  render() {\n    const {\n      title,\n      type,\n      items,\n      hasMore\n    } = this.props;\n    return <>\n                <HeaderMenuItem title={title} />\n                {items.map(item => {\n        const itemUrl = getItemUrl(type, item, this.context.d2);\n        return <ContentMenuItem key={item.id || item.key} type={type} visType={type === VISUALIZATION ? item.type : type} name={item.displayName || item.name} onInsert={this.addItem(item)} url={itemUrl} />;\n      })}\n                {hasMore ? <MenuItem dense key={`showmore${title}`} onClick={this.toggleSeeMore} label={<button className={classes.showMoreButton}>\n                                {this.state.seeMore ? i18n.t('Show fewer') : i18n.t('Show more')}\n                            </button>} /> : null}\n                <Divider margin=\"8px 0px\" />\n            </>;\n  }\n\n}\n\nCategorizedMenuGroup.propTypes = {\n  items: PropTypes.array.isRequired,\n  title: PropTypes.string.isRequired,\n  type: PropTypes.oneOf(categorizedItems).isRequired,\n  onChangeItemsLimit: PropTypes.func.isRequired,\n  acAddDashboardItem: PropTypes.func,\n  hasMore: PropTypes.bool,\n  tAddListItemContent: PropTypes.func\n};\nCategorizedMenuGroup.contextTypes = {\n  d2: PropTypes.object.isRequired\n};\nexport default connect(null, {\n  acAddDashboardItem,\n  tAddListItemContent\n})(CategorizedMenuGroup);","import { sGetEditDashboardRoot } from '../../reducers/editDashboard';\nimport { itemTypeMap } from '../../modules/itemTypes';\nimport { acAddDashboardItem, acUpdateDashboardItem } from '../../actions/editDashboard';\nexport const tAddListItemContent = (type, content) => (dispatch, getState) => {\n  const state = getState();\n  const listItemType = itemTypeMap[type].propName;\n  const dashboardItems = sGetEditDashboardRoot(state).dashboardItems;\n  const dashboardItemIndex = dashboardItems.findIndex(item => item.type === type);\n  let dashboardItem; // Reports/Resources/Users dashboard item type already present in dashboard\n\n  if (dashboardItemIndex > -1) {\n    dashboardItem = dashboardItems[dashboardItemIndex];\n    dashboardItem[listItemType].push(content);\n    dispatch(acUpdateDashboardItem(dashboardItem));\n  } else {\n    dashboardItem = {\n      type: type,\n      content: [content]\n    };\n    dispatch(acAddDashboardItem(dashboardItem));\n  }\n};","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\nexport const SinglesMenuGroup = ({\n  acAddDashboardItem,\n  category\n}) => {\n  const addToDashboard = ({\n    type,\n    content\n  }) => () => {\n    acAddDashboardItem({\n      type,\n      content\n    });\n  };\n\n  return <>\n            <HeaderMenuItem title={category.header} />\n            {category.items.map(item => <ContentMenuItem key={item.type} type={item.type} name={item.name} onInsert={addToDashboard(item)} />)}\n        </>;\n};\nSinglesMenuGroup.propTypes = {\n  acAddDashboardItem: PropTypes.func,\n  category: PropTypes.object\n};\nexport default connect(null, {\n  acAddDashboardItem\n})(SinglesMenuGroup);","import React, { useState, useEffect, createRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { Popover, FlyoutMenu } from '@dhis2/ui';\nimport ItemSearchField from './ItemSearchField';\nimport CategorizedMenuGroup from './CategorizedMenuGroup';\nimport SinglesMenuGroup from './SinglesMenuGroup';\nimport { singleItems, categorizedItems } from './selectableItems';\nimport { itemTypeMap, getDefaultItemCount } from '../../modules/itemTypes';\nimport classes from './styles/ItemSelector.module.css'; // eslint-disable-next-line no-empty-pattern\n\nconst ItemSelector = ({}, context) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [filter, setFilter] = useState('');\n  const [items, setItems] = useState(null);\n  const [maxOptions, setMaxOptions] = useState(new Set());\n  useEffect(() => {\n    let queryString = '?count=11';\n\n    if ([...maxOptions.values()].length) {\n      queryString += '&max=' + [...maxOptions.values()].join('&max=');\n    }\n\n    const filterStr = filter ? `/${filter}` : '';\n    context.d2.Api.getApi().get(`dashboards/q${filterStr}${queryString}`).then(response => setItems(response)).catch(console.error);\n  }, [filter, maxOptions]);\n\n  const closeMenu = () => {\n    setIsOpen(false);\n    setFilter('');\n    setMaxOptions(new Set());\n  };\n\n  const openMenu = () => setIsOpen(true);\n\n  const getCategorizedMenuGroups = () => {\n    return categorizedItems.filter(type => {\n      const itemType = itemTypeMap[type];\n      return items && items[itemType.endPointName];\n    }).map(type => {\n      const itemType = itemTypeMap[type];\n      const itemCount = getDefaultItemCount(type);\n      const allItems = items[itemType.endPointName];\n      const hasMore = allItems.length > itemCount;\n      const displayItems = maxOptions.has(itemType.id) ? allItems : allItems.slice(0, itemCount);\n      return <CategorizedMenuGroup key={type} type={type} title={itemType.pluralTitle} items={displayItems} onChangeItemsLimit={updateMaxOptions} hasMore={hasMore} />;\n    });\n  };\n\n  const getSinglesMenuGroups = () => singleItems.map(category => <SinglesMenuGroup key={category.id} category={category} />);\n\n  const getMenuGroups = () => getCategorizedMenuGroups().concat(getSinglesMenuGroups());\n\n  const updateMaxOptions = type => {\n    if (type) {\n      const options = new Set(maxOptions);\n      options.has(type) ? options.delete(type) : options.add(type);\n      setMaxOptions(options);\n    } else {\n      setMaxOptions(new Set());\n    }\n  };\n\n  const updateFilter = ({\n    value\n  }) => setFilter(value);\n\n  const inputRef = createRef();\n  return <>\n            <span ref={inputRef}>\n                <ItemSearchField value={filter} onChange={updateFilter} onFocus={openMenu} />\n            </span>\n            {isOpen && <Popover reference={inputRef} placement=\"bottom-start\" onClickOutside={closeMenu} arrow={false} maxWidth={700}>\n                    <FlyoutMenu className={classes.menu} dataTest=\"item-menu\" maxWidth=\"700px\">\n                        {getMenuGroups()}\n                    </FlyoutMenu>\n                </Popover>}\n        </>;\n};\n\nItemSelector.contextTypes = {\n  d2: PropTypes.object.isRequired\n};\nexport default ItemSelector;","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { InputField, TextAreaField } from '@dhis2/ui';\nimport ItemSelector from '../ItemSelector/ItemSelector';\nimport { acSetDashboardTitle, acSetDashboardDescription } from '../../actions/editDashboard';\nimport { orObject } from '../../modules/util';\nimport { sGetEditDashboardRoot } from '../../reducers/editDashboard';\nimport classes from './styles/EditTitleBar.module.css';\nexport const EditTitleBar = ({\n  name,\n  description,\n  onChangeTitle,\n  onChangeDescription\n}) => {\n  const updateTitle = (_, e) => {\n    onChangeTitle(e.target.value);\n  };\n\n  const updateDescription = (_, e) => {\n    onChangeDescription(e.target.value);\n  };\n\n  return <section className={classes.section}>\n            <div className={classes.titleDescription}>\n                <InputField className={classes.title} name=\"Dashboard title input\" label={i18n.t('Dashboard title')} type=\"text\" onChange={updateTitle} value={name} placeholder={i18n.t('Untitled dashboard')} dataTest=\"dashboard-title-input\" />\n                <TextAreaField className={classes.description} name=\"Dashboard description input\" label={i18n.t('Dashboard description')} onChange={updateDescription} value={description} dataTest=\"dashboard-description-input\" />\n            </div>\n            <div className={classes.itemSelector}>\n                <ItemSelector />\n            </div>\n        </section>;\n};\nEditTitleBar.propTypes = {\n  onChangeDescription: PropTypes.func.isRequired,\n  onChangeTitle: PropTypes.func.isRequired,\n  description: PropTypes.string,\n  name: PropTypes.string\n};\nEditTitleBar.defaultProps = {\n  name: '',\n  description: ''\n};\n\nconst mapStateToProps = state => {\n  const selectedDashboard = orObject(sGetEditDashboardRoot(state));\n  return {\n    name: selectedDashboard.name,\n    description: selectedDashboard.description\n  };\n};\n\nconst mapDispatchToProps = {\n  onChangeTitle: acSetDashboardTitle,\n  onChangeDescription: acSetDashboardDescription\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(EditTitleBar);","import React from 'react';\nimport { colors } from '@dhis2/ui';\nexport const ThreeDots = () => <svg height=\"18\" viewBox=\"0 0 18 18\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"m4 7.5c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm10 0c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm-5 0c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5z\" fill=\"#6e7a8a\" />\n    </svg>;\nexport const SpeechBubble = () => <svg height=\"20\" viewBox=\"0 0 20 20\" width=\"20\" xmlns=\"http://www.w3.org/2000/svg\" style={{\n  margin: '3px 2px 0 2px'\n}} // Temporary fix for the misaligned icon, should be removed once the icon is replaced\n>\n        <path d=\"m20 2h-16c-1.1 0-1.99.9-1.99 2l-.01 18 4-4h14c1.1 0 2-.9 2-2v-12c0-1.1-.9-2-2-2zm-2 12h-12v-2h12zm0-3h-12v-2h12zm0-3h-12v-2h12z\" fill=\"#6e7a8a\" fillRule=\"evenodd\" transform=\"translate(-2 -2)\" />\n    </svg>;\nexport const Warning = () => <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" fill={colors.grey600}>\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z\" />\n    </svg>;\nexport const Fullscreen = () => <svg height=\"16\" viewBox=\"0 0 16 16\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"m6.85355339 9.14644661c.17356635.17356635.1928515.44299075.05785545.63785889l-.05785545.06924789-4.14755339 4.14644661h2.794c.24545989 0 .44960837.1768752.49194433.4101244l.00805567.0898756c0 .2454599-.17687516.4496084-.41012437.4919443l-.08987563.0080557h-4c-.24545989 0-.44960837-.1768752-.49194433-.4101244l-.00805567-.0898756v-4c0-.2761424.22385763-.5.5-.5.24545989 0 .44960837.1768752.49194433.4101244l.00805567.0898756v2.792l4.14644661-4.14555339c.19526215-.19526215.51184463-.19526215.70710678 0zm6.14644661-2.14644661v6h-6v-1h5v-5zm-4-4v1h-5v5h-1v-6zm5.5-2c.2454599 0 .4496084.17687516.4919443.41012437l.0080557.08987563v4c0 .27614237-.2238576.5-.5.5-.2454599 0-.4496084-.17687516-.4919443-.41012437l-.0080557-.08987563v-2.794l-4.14644661 4.14755339c-.19526215.19526215-.51184463.19526215-.70710678 0-.17356635-.17356635-.1928515-.44299075-.05785545-.63785889l.05785545-.06924789 4.14655339-4.14744661-2.793.001c-.2454599 0-.4496084-.17687516-.4919443-.41012437l-.0080557-.08987563c0-.24545989.1768752-.44960837.4101244-.49194433l.0898756-.00805567z\" fill=\"inherit\" />\n    </svg>;\nexport const ExitFullscreen = () => <svg height=\"16\" viewBox=\"0 0 16 16\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"m6.5 9c.24545989 0 .44960837.17687516.49194433.41012437l.00805567.08987563v4c0 .2761424-.22385763.5-.5.5-.24545989 0-.44960837-.1768752-.49194433-.4101244l-.00805567-.0898756v-2.794l-3.64644661 3.6475534c-.19526215.1952621-.51184463.1952621-.70710678 0-.17356635-.1735664-.1928515-.4429908-.05785545-.6378589l.05785545-.0692479 3.64555339-3.6464466h-2.792c-.24545989 0-.44960837-.17687516-.49194433-.41012437l-.00805567-.08987563c0-.24545989.17687516-.44960837.41012437-.49194433l.08987563-.00805567zm7.5-.5v5.5h-5.5v-1h4.5v-4.5zm-6.5-6.5v1h-4.5v4.5h-1v-5.5zm6.8535534-.35355339c.1735663.17356635.1928515.44299075.0578554.63785889l-.0578554.06924789-3.6475534 3.64644661h2.794c.2454599 0 .4496084.17687516.4919443.41012437l.0080557.08987563c0 .24545989-.1768752.44960837-.4101244.49194433l-.0898756.00805567h-4c-.24545989 0-.44960837-.17687516-.49194433-.41012437l-.00805567-.08987563v-4c0-.27614237.22385763-.5.5-.5.24545989 0 .44960837.17687516.49194433.41012437l.00805567.08987563v2.792l3.6464466-3.64555339c.1952622-.19526215.5118446-.19526215.7071068 0z\" fill=\"inherit\" />\n    </svg>;","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { Button, Modal, ModalTitle, ModalContent, ModalActions, ButtonStrip } from '@dhis2/ui';\nimport { PeriodDimension, DynamicDimension, OrgUnitDimension, DIMENSION_ID_PERIOD, DIMENSION_ID_ORGUNIT } from '@dhis2/analytics';\nimport { acAddItemFilter, acRemoveItemFilter } from '../../actions/itemFilters';\nimport { sGetItemFiltersRoot } from '../../reducers/itemFilters';\n\nconst FilterDialog = ({\n  displayNameProperty,\n  dimension,\n  initiallySelectedItems,\n  addItemFilter,\n  removeItemFilter,\n  onClose\n}, context) => {\n  const [filters, setFilters] = useState(initiallySelectedItems);\n\n  const onSelectItems = ({\n    dimensionId,\n    items\n  }) => {\n    setFilters({\n      [dimensionId]: items\n    });\n  };\n\n  const onDeselectItems = ({\n    dimensionId,\n    itemIdsToRemove\n  }) => {\n    const oldList = filters[dimensionId] || [];\n    const newList = oldList.filter(item => !itemIdsToRemove.includes(item.id));\n    setFilters({ ...filters,\n      [dimensionId]: newList\n    });\n  };\n\n  const onReorderItems = ({\n    dimensionId,\n    itemIds\n  }) => {\n    const oldList = filters[dimensionId] || [];\n    const reorderedList = itemIds.map(id => oldList.find(item => item.id === id));\n    setFilters({ ...filters,\n      [dimensionId]: reorderedList\n    });\n  };\n\n  const saveFilter = () => {\n    const id = dimension.id;\n    const filterItems = filters[id];\n\n    if (filterItems && filterItems.length) {\n      addItemFilter({\n        id,\n        value: [...filterItems]\n      });\n    } else {\n      removeItemFilter(id);\n    }\n\n    onClose(id);\n  };\n\n  const renderDialogContent = () => {\n    const commonProps = {\n      d2: context.d2,\n      onSelect: onSelectItems,\n      onDeselect: onDeselectItems,\n      onReorder: onReorderItems\n    };\n    const selectedItems = filters[dimension.id] || [];\n\n    switch (dimension.id) {\n      case DIMENSION_ID_PERIOD:\n        {\n          return <PeriodDimension selectedPeriods={selectedItems} onSelect={commonProps.onSelect} />;\n        }\n\n      case DIMENSION_ID_ORGUNIT:\n        return <OrgUnitDimension displayNameProperty={displayNameProperty} ouItems={selectedItems} {...commonProps} />;\n\n      default:\n        return <DynamicDimension selectedItems={selectedItems} dimensionId={dimension.id} onSelect={commonProps.onSelect} />;\n    }\n  };\n\n  return <>\n            {dimension.id && <Modal dataTest={`${dimension.id}-dimension-modal`} onClose={onClose} position=\"top\" large>\n                    <ModalTitle>{dimension.name}</ModalTitle>\n                    <ModalContent>{renderDialogContent()}</ModalContent>\n                    <ModalActions>\n                        <ButtonStrip>\n                            <Button secondary onClick={onClose}>\n                                {i18n.t('Cancel')}\n                            </Button>\n                            <Button primary onClick={saveFilter}>\n                                {i18n.t('Confirm')}\n                            </Button>\n                        </ButtonStrip>\n                    </ModalActions>\n                </Modal>}\n        </>;\n};\n\nFilterDialog.propTypes = {\n  addItemFilter: PropTypes.func,\n  dimension: PropTypes.object,\n  displayNameProperty: PropTypes.string,\n  initiallySelectedItems: PropTypes.object,\n  removeItemFilter: PropTypes.func,\n  onClose: PropTypes.func\n};\nFilterDialog.contextTypes = {\n  d2: PropTypes.object\n};\n\nconst mapStateToProps = state => ({\n  initiallySelectedItems: sGetItemFiltersRoot(state)\n});\n\nexport default connect(mapStateToProps, {\n  addItemFilter: acAddItemFilter,\n  removeItemFilter: acRemoveItemFilter\n})(FilterDialog);","export const SET_SETTINGS = 'SET_SETTINGS';\nexport const ADD_SETTINGS = 'ADD_SETTINGS';\nexport const DEFAULT_SETTINGS = {\n  keyDateFormat: 'yyyy-MM-dd',\n  keyAnalysisRelativePeriod: 'LAST_12_MONTHS',\n  keyAnalysisDigitGroupSeparator: 'SPACE',\n  displayNameProperty: 'displayName',\n  uiLocale: 'en',\n  rootOrganisationUnit: {},\n  keyGatherAnalyticalObjectStatisticsInDashboardViews: false\n};\nexport default ((state = DEFAULT_SETTINGS, action) => {\n  switch (action.type) {\n    case SET_SETTINGS:\n      {\n        return Object.assign({}, action.value);\n      }\n\n    case ADD_SETTINGS:\n      {\n        return { ...state,\n          ...action.value\n        };\n      }\n\n    default:\n      return state;\n  }\n}); // Selectors\n\nexport const sGetSettings = state => state.settings;\nexport const sGetSettingsDisplayNameProperty = state => sGetSettings(state).displayNameProperty;\nexport const sGetRootOrgUnit = state => sGetSettings(state).rootOrganisationUnit;\nexport const sGetRelativePeriod = state => sGetSettings(state).keyAnalysisRelativePeriod;\nexport const sGetUiLocale = state => sGetSettings(state).uiLocale;\nexport const sGatherAnalyticalObjectStatisticsInDashboardViews = state => sGetSettings(state).keyGatherAnalyticalObjectStatisticsInDashboardViews;","export const SET_ACTIVE_MODAL_DIMENSION = 'SET_ACTIVE_MODAL_DIMENSION';\nexport const CLEAR_ACTIVE_MODAL_DIMENSION = 'CLEAR_ACTIVE_MODAL_DIMENSION';\nexport const DEFAULT_STATE_ACTIVE_MODAL_DIMENSION = {};\nexport default ((state = DEFAULT_STATE_ACTIVE_MODAL_DIMENSION, action) => {\n  switch (action.type) {\n    case SET_ACTIVE_MODAL_DIMENSION:\n      {\n        return action.value;\n      }\n\n    case CLEAR_ACTIVE_MODAL_DIMENSION:\n      {\n        return DEFAULT_STATE_ACTIVE_MODAL_DIMENSION;\n      }\n\n    default:\n      return state;\n  }\n});\nexport const sGetActiveModalDimension = state => state.activeModalDimension;","import { SET_ACTIVE_MODAL_DIMENSION, CLEAR_ACTIVE_MODAL_DIMENSION } from '../reducers/activeModalDimension';\nexport const acSetActiveModalDimension = value => ({\n  type: SET_ACTIVE_MODAL_DIMENSION,\n  value\n});\nexport const acClearActiveModalDimension = () => ({\n  type: CLEAR_ACTIVE_MODAL_DIMENSION\n});","import React, { useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport isEmpty from 'lodash/isEmpty';\nimport i18n from '@dhis2/d2-i18n';\nimport { DimensionsPanel } from '@dhis2/analytics';\nimport { Button, Popover } from '@dhis2/ui';\nimport FilterDialog from './FilterDialog';\nimport { sGetSettingsDisplayNameProperty } from '../../reducers/settings';\nimport { sGetActiveModalDimension } from '../../reducers/activeModalDimension';\nimport { sGetDimensions } from '../../reducers/dimensions';\nimport { sGetItemFiltersRoot } from '../../reducers/itemFilters';\nimport { acClearActiveModalDimension, acSetActiveModalDimension } from '../../actions/activeModalDimension';\n\nconst FilterSelector = props => {\n  const [showPopover, setShowPopover] = useState(false);\n  const ref = useRef(null);\n\n  const onCloseDialog = () => {\n    setShowPopover(false);\n    props.clearActiveModalDimension();\n  };\n\n  const selectDimension = id => {\n    props.setActiveModalDimension(props.dimensions.find(dimension => dimension.id === id));\n  };\n\n  return <>\n            <span ref={ref}>\n                <Button onClick={() => setShowPopover(true)}>\n                    {i18n.t('Add filter')}\n                    <ArrowDropDownIcon />\n                </Button>\n            </span>\n            {showPopover && <Popover onClickOutside={onCloseDialog} reference={ref} arrow={true} placement=\"bottom-start\" dataTest=\"dashboard-filter-popover\">\n                    <DimensionsPanel style={{\n        width: '320px'\n      }} dimensions={props.dimensions} onDimensionClick={selectDimension} selectedIds={Object.keys(props.initiallySelectedItems)} />\n                </Popover>}\n            {!isEmpty(props.dimension) ? <FilterDialog displayNameProperty={props.displayNameProperty} dimension={props.dimension} onClose={onCloseDialog} /> : null}\n        </>;\n};\n\nconst mapStateToProps = state => ({\n  displayNameProperty: sGetSettingsDisplayNameProperty(state),\n  dimension: sGetActiveModalDimension(state),\n  dimensions: sGetDimensions(state),\n  initiallySelectedItems: sGetItemFiltersRoot(state)\n});\n\nFilterSelector.propTypes = {\n  clearActiveModalDimension: PropTypes.func,\n  dimension: PropTypes.object,\n  dimensions: PropTypes.array,\n  displayNameProperty: PropTypes.string,\n  initiallySelectedItems: PropTypes.object,\n  setActiveModalDimension: PropTypes.func\n};\nexport default connect(mapStateToProps, {\n  clearActiveModalDimension: acClearActiveModalDimension,\n  setActiveModalDimension: acSetActiveModalDimension\n})(FilterSelector);","import React, { useState, createRef } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link, Redirect } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport SharingDialog from '@dhis2/d2-ui-sharing-dialog';\nimport Star from '@material-ui/icons/Star';\nimport StarBorder from '@material-ui/icons/StarBorder';\nimport { Button, FlyoutMenu, Popover, MenuItem, colors } from '@dhis2/ui';\nimport { ThreeDots } from '../Item/VisualizationItem/assets/icons';\nimport { orObject } from '../../modules/util';\nimport { tStarDashboard } from '../../actions/dashboards';\nimport { tUpdateShowDescription } from '../../actions/selected';\nimport FilterSelector from '../ItemFilter/FilterSelector';\nimport { sGetSelectedId, sGetSelectedShowDescription } from '../../reducers/selected';\nimport { sGetDashboardById, sGetDashboardItems, EMPTY_DASHBOARD } from '../../reducers/dashboards';\nimport classes from './styles/ViewTitleBar.module.css';\n\nconst ViewTitleBar = (props, context) => {\n  const [moreOptionsIsOpen, setMoreOptionsIsOpen] = useState(false);\n  const [sharingDialogIsOpen, setSharingDialogIsOpen] = useState(false);\n  const [redirectUrl, setRedirectUrl] = useState(null);\n  const {\n    id,\n    name,\n    description,\n    access,\n    style,\n    showDescription,\n    starred,\n    onToggleStarredDashboard,\n    onShowHideDescription\n  } = props;\n\n  const toggleSharingDialog = () => setSharingDialogIsOpen(!sharingDialogIsOpen);\n\n  const toggleMoreOptions = () => setMoreOptionsIsOpen(!moreOptionsIsOpen);\n\n  const printLayout = () => setRedirectUrl(`${id}/printlayout`);\n\n  const printOipp = () => setRedirectUrl(`${id}/printoipp`);\n\n  const titleStyle = Object.assign({}, style.title, {\n    cursor: 'default',\n    userSelect: 'text',\n    top: '7px'\n  });\n  const StarIcon = starred ? Star : StarBorder;\n\n  if (redirectUrl) {\n    return <Redirect to={redirectUrl} />;\n  }\n\n  const showHideDescriptionLabel = showDescription ? i18n.t('Hide description') : i18n.t('Show description');\n\n  const showHideDescription = () => {\n    onShowHideDescription();\n    toggleMoreOptions();\n  };\n\n  const toggleStarredDashboardLabel = starred ? i18n.t('Unstar dashboard') : i18n.t('Star dashboard');\n\n  const toggleStarredDashboard = () => {\n    // TODO use dataQuery directly here with create/delete mutations ?!\n    onToggleStarredDashboard();\n    toggleMoreOptions();\n  };\n\n  const buttonRef = createRef();\n  const userAccess = orObject(access);\n  return <>\n            <div className={classes.titleBar}>\n                <span style={titleStyle} data-test=\"view-dashboard-title\">\n                    {name}\n                </span>\n                <div className={classes.actions}>\n                    <div className={classes.titleBarIcon} onClick={onToggleStarredDashboard}>\n                        <StarIcon style={{\n            fill: colors.grey600\n          }} />\n                    </div>\n                    <div className={classes.strip}>\n                        {userAccess.update ? <Link className={classes.editLink} to={`/${id}/edit`} data-test=\"link-edit-dashboard\">\n                                <Button>{i18n.t('Edit')}</Button>\n                            </Link> : null}\n                        {userAccess.manage ? <Button onClick={toggleSharingDialog}>\n                                {i18n.t('Share')}\n                            </Button> : null}\n                        <FilterSelector />\n                        <span ref={buttonRef}>\n                            <Button dataTest=\"more-button\" onClick={toggleMoreOptions}>\n                                <ThreeDots />\n                                <span style={{\n                marginLeft: '5px'\n              }}>\n                                    {i18n.t('More')}\n                                </span>\n                            </Button>\n                        </span>\n                    </div>\n                    {moreOptionsIsOpen && <Popover reference={buttonRef} placement=\"bottom-start\" onClickOutside={toggleMoreOptions}>\n                            <FlyoutMenu>\n                                <MenuItem dense label={toggleStarredDashboardLabel} onClick={toggleStarredDashboard} />\n                                <MenuItem dense label={showHideDescriptionLabel} onClick={showHideDescription} />\n                                <MenuItem dense label={i18n.t('Print')} dataTest=\"print-menu-item\">\n                                    <MenuItem dense label={i18n.t('Dashboard layout')} onClick={printLayout} dataTest=\"print-layout-menu-item\" />\n                                    <MenuItem dense label={i18n.t('One item per page')} onClick={printOipp} dataTest=\"print-oipp-menu-item\" />\n                                </MenuItem>\n                            </FlyoutMenu>\n                        </Popover>}\n                </div>\n            </div>\n            {showDescription ? <div className=\"dashboard-description\" style={Object.assign({\n      paddingTop: '5px',\n      paddingBottom: '5px'\n    }, style.description, !description ? {\n      color: '#888'\n    } : {})}>\n                    {description || i18n.t('No description')}\n                </div> : null}\n            {id ? <SharingDialog d2={context.d2} id={id} type=\"dashboard\" open={sharingDialogIsOpen} onRequestClose={toggleSharingDialog} /> : null}\n        </>;\n};\n\nViewTitleBar.propTypes = {\n  access: PropTypes.object,\n  description: PropTypes.string,\n  id: PropTypes.string,\n  name: PropTypes.string,\n  showDescription: PropTypes.bool,\n  starred: PropTypes.bool,\n  style: PropTypes.object,\n  onShowHideDescription: PropTypes.func,\n  onToggleStarredDashboard: PropTypes.func\n};\nViewTitleBar.defaultProps = {\n  name: '',\n  description: '',\n  starred: false,\n  showDescription: false\n};\nViewTitleBar.contextTypes = {\n  d2: PropTypes.object\n};\n\nconst mapStateToProps = state => {\n  const id = sGetSelectedId(state);\n  const dashboard = sGetDashboardById(state, id) || EMPTY_DASHBOARD;\n  return {\n    id,\n    name: dashboard.displayName,\n    description: dashboard.displayDescription,\n    dashboardItems: sGetDashboardItems(state),\n    showDescription: sGetSelectedShowDescription(state),\n    starred: dashboard.starred,\n    access: dashboard.access\n  };\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n  const {\n    id,\n    starred,\n    showDescription\n  } = stateProps;\n  const {\n    dispatch\n  } = dispatchProps;\n  return { ...stateProps,\n    ...ownProps,\n    onToggleStarredDashboard: () => dispatch(tStarDashboard(id, !starred)),\n    onShowHideDescription: () => dispatch(tUpdateShowDescription(!showDescription))\n  };\n};\n\nexport default connect(mapStateToProps, null, mergeProps)(ViewTitleBar);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { colors } from '@dhis2/ui';\nimport EditTitleBar from './EditTitleBar';\nimport ViewTitleBar from './ViewTitleBar';\nimport './TitleBar.css';\nconst style = {\n  title: {\n    position: 'relative',\n    fontSize: 21,\n    fontWeight: 500,\n    color: colors.black,\n    minWidth: 50\n  },\n  description: {\n    fontSize: 14,\n    color: colors.grey800\n  }\n};\n\nconst TitleBar = ({\n  edit\n}) => {\n  return <div className=\"titlebar-wrapper\" style={{\n    padding: '13px 15px 5px 10px'\n  }}>\n            {edit ? <EditTitleBar style={style} /> : <ViewTitleBar style={style} />}\n        </div>;\n};\n\nTitleBar.propTypes = {\n  edit: PropTypes.bool\n};\nexport default TitleBar;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classes from './styles/NoVisualizationMessage.module.css';\n\nconst NoVisualizationMessage = ({\n  message\n}) => {\n  return <div className={classes.message}>{message}</div>;\n};\n\nNoVisualizationMessage.propTypes = {\n  message: PropTypes.string\n};\nexport default NoVisualizationMessage;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport NoVisualizationMessage from './NoVisualizationMessage';\nimport * as pluginManager from './plugin';\nimport { getBaseUrl, orObject } from '../../../../modules/util';\nimport { getGridItemDomId } from '../../../ItemGrid/gridUtil';\n\nconst pluginCredentials = d2 => {\n  return {\n    baseUrl: getBaseUrl(d2),\n    auth: d2.Api.getApi().defaultHeaders.Authorization\n  };\n};\n\nclass DefaultPlugin extends Component {\n  pluginCredentials = null;\n\n  constructor(props, context) {\n    super(props);\n    this.d2 = context.d2;\n  }\n\n  pluginIsAvailable = () => pluginManager.pluginIsAvailable(this.props.activeType || this.props.item.type);\n  shouldPluginReload = prevProps => {\n    // TODO - fix this hack, to handle bug with multiple\n    // rerendering while switching between dashboards.\n    //\n    // To determine if the rendering is happening because of a\n    // dashboard switch, check if the item reference has changed.\n    const reloadAllowed = this.props.item === prevProps.item;\n    const filtersChanged = prevProps.itemFilters !== this.props.itemFilters;\n    const vis = orObject(this.props.visualization);\n    const prevVis = orObject(prevProps.visualization);\n    const visChanged = vis.id !== prevVis.id || prevProps.activeType !== this.props.activeType;\n    return reloadAllowed && (visChanged || filtersChanged);\n  };\n  reloadPlugin = prevProps => {\n    if (this.pluginIsAvailable() && this.shouldPluginReload(prevProps)) {\n      if (this.props.activeType !== prevProps.activeType || this.props.itemFilters !== prevProps.itemFilters) {\n        pluginManager.unmount(this.props.item, prevProps.activeType);\n        pluginManager.load(this.props.item, this.props.visualization, {\n          credentials: this.pluginCredentials,\n          activeType: this.props.activeType\n        });\n      }\n    }\n  };\n\n  componentDidMount() {\n    this.pluginCredentials = pluginCredentials(this.d2);\n\n    if (this.pluginIsAvailable()) {\n      pluginManager.load(this.props.item, this.props.visualization, {\n        credentials: this.pluginCredentials,\n        activeType: this.props.activeType,\n        options: this.props.options\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    this.reloadPlugin(prevProps);\n  }\n\n  componentWillUnmount() {\n    if (this.pluginIsAvailable()) {\n      pluginManager.unmount(this.props.item, this.props.activeType);\n    }\n  }\n\n  render() {\n    const {\n      item,\n      style\n    } = this.props;\n    return this.pluginIsAvailable() ? <div id={getGridItemDomId(item.id)} style={style} /> : <NoVisualizationMessage message={i18n.t('Unable to load the plugin for this item')} />;\n  }\n\n}\n\nDefaultPlugin.contextTypes = {\n  d2: PropTypes.object\n};\nDefaultPlugin.propTypes = {\n  activeType: PropTypes.string,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object,\n  options: PropTypes.object,\n  style: PropTypes.object,\n  visualization: PropTypes.object\n};\nDefaultPlugin.defaultProps = {\n  style: {},\n  item: {},\n  itemFilters: {},\n  options: {},\n  visualization: {}\n};\nexport default DefaultPlugin;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport DefaultPlugin from './DefaultPlugin';\nimport { MAP } from '../../../../modules/itemTypes';\n\nconst MapPlugin = ({\n  applyFilters,\n  ...props\n}) => {\n  if (props.item.type === MAP) {\n    // apply filters only to thematic and event layers\n    // for maps AO\n    const mapViews = props.visualization.mapViews.map(mapView => {\n      if (mapView.layer.includes('thematic') || mapView.layer.includes('event')) {\n        return applyFilters(mapView, props.itemFilters);\n      }\n\n      return mapView;\n    });\n    props.visualization = { ...props.visualization,\n      mapViews\n    };\n  } else {\n    // this is the case of a non map AO passed to the maps plugin\n    // due to a visualization type switch in dashboard item\n    // maps plugin takes care of converting the AO to a suitable format\n    props.visualization = applyFilters(props.visualization, props.itemFilters);\n  }\n\n  return <DefaultPlugin options={{\n    hideTitle: true\n  }} {...props} />;\n};\n\nMapPlugin.propTypes = {\n  applyFilters: PropTypes.func,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object,\n  visualization: PropTypes.object\n};\nexport default MapPlugin;","import React from 'react';\nimport { CircularLoader } from '@dhis2/ui';\nimport classes from './styles/LoadingMask.module.css';\n\nconst LoadingMask = () => {\n  return <div className={classes.center}>\n            <CircularLoader />\n        </div>;\n};\n\nexport default LoadingMask;","const getFilteredVisualization = (visualization, filters) => {\n  if (!Object.keys(filters).length) {\n    return visualization;\n  } // deep clone objects in filters to avoid changing the visualization in the Redux store\n\n\n  const visRows = visualization.rows.map(obj => ({ ...obj\n  }));\n  const visColumns = visualization.columns.map(obj => ({ ...obj\n  }));\n  const visFilters = visualization.filters.map(obj => ({ ...obj\n  }));\n  Object.keys(filters).forEach(dimensionId => {\n    if (filters[dimensionId]) {\n      let dimensionFound = false;\n      [visRows, visColumns, visFilters].forEach(dimensionObjects => dimensionObjects.filter(obj => obj.dimension === dimensionId).forEach(obj => {\n        dimensionFound = true;\n        obj.items = filters[dimensionId];\n      })); // add dimension to filters if not already present elsewhere\n\n      if (!dimensionFound) {\n        visFilters.push({\n          dimension: dimensionId,\n          items: filters[dimensionId]\n        });\n      }\n    }\n  });\n  return { ...visualization,\n    rows: visRows,\n    columns: visColumns,\n    filters: visFilters\n  };\n};\n\nexport default getFilteredVisualization;","import { VIS_TYPE_COLUMN, VIS_TYPE_PIVOT_TABLE, getAdaptedUiLayoutByType } from '@dhis2/analytics';\nimport { REPORT_TABLE, CHART, MAP } from '../../../../modules/itemTypes';\nexport const THEMATIC_LAYER = 'thematic';\n\nconst extractMapView = map => map.mapViews && map.mapViews.find(mv => mv.layer.includes(THEMATIC_LAYER));\n\nconst getWithoutId = object => ({ ...object,\n  id: undefined\n});\n\nconst getVisualizationConfig = (visualization, originalType, activeType) => {\n  if (originalType === MAP && originalType !== activeType) {\n    const extractedMapView = extractMapView(visualization);\n\n    if (extractedMapView === undefined) {\n      return null;\n    }\n\n    return getWithoutId({ ...visualization,\n      ...extractedMapView,\n      mapViews: undefined,\n      type: activeType === CHART ? VIS_TYPE_COLUMN : VIS_TYPE_PIVOT_TABLE\n    });\n  } else if (originalType === REPORT_TABLE && activeType === CHART) {\n    const layout = getAdaptedUiLayoutByType(visualization, VIS_TYPE_COLUMN);\n    return getWithoutId({ ...visualization,\n      ...layout,\n      type: VIS_TYPE_COLUMN\n    });\n  } else if (originalType === CHART && activeType === REPORT_TABLE) {\n    const layout = getAdaptedUiLayoutByType(visualization, VIS_TYPE_PIVOT_TABLE);\n    return getWithoutId({ ...visualization,\n      ...layout,\n      type: VIS_TYPE_PIVOT_TABLE\n    });\n  }\n\n  return getWithoutId(visualization);\n};\n\nexport default getVisualizationConfig;","// Note that this ignores discrepancies in 'this', so shouldn't be used with bound functions\n// This is useful instead of lodash/memoize when we only need to memoize a single value\n// Inspiration: https://github.com/alexreardon/memoize-one\nconst memoizeOne = fn => {\n  let lastArgs = undefined;\n  let lastValue = undefined;\n  return (...args) => {\n    if (lastArgs && args.length === lastArgs.length && args.every((arg, i) => arg === lastArgs[i])) {\n      return lastValue;\n    }\n\n    lastArgs = args;\n    lastValue = fn(...args);\n    return lastValue;\n  };\n};\n\nexport default memoizeOne;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport VisualizationPlugin from '@dhis2/data-visualizer-plugin';\nimport i18n from '@dhis2/d2-i18n';\nimport DefaultPlugin from './DefaultPlugin';\nimport MapPlugin from './MapPlugin';\nimport LoadingMask from './LoadingMask';\nimport NoVisualizationMessage from './NoVisualizationMessage';\nimport getFilteredVisualization from './getFilteredVisualization';\nimport getVisualizationConfig from './getVisualizationConfig';\nimport { VISUALIZATION, MAP, CHART, REPORT_TABLE } from '../../../../modules/itemTypes';\nimport { getVisualizationId } from '../../../../modules/item';\nimport memoizeOne from '../../../../modules/memoizeOne';\nimport { sGetVisualization } from '../../../../reducers/visualizations';\n\nclass Visualization extends React.Component {\n  state = {\n    pluginLoaded: false\n  };\n\n  constructor(props) {\n    super(props);\n    this.memoizedGetFilteredVisualization = memoizeOne(getFilteredVisualization);\n    this.memoizedGetVisualizationConfig = memoizeOne(getVisualizationConfig);\n  }\n\n  onLoadingComplete = () => {\n    this.setState({\n      pluginLoaded: true\n    });\n  };\n\n  render() {\n    const {\n      visualization,\n      activeType,\n      item,\n      itemFilters,\n      availableHeight\n    } = this.props;\n\n    if (!visualization) {\n      return <NoVisualizationMessage message={i18n.t('No data to display')} />;\n    }\n\n    const pluginProps = {\n      item,\n      itemFilters,\n      activeType,\n      style: {\n        height: availableHeight\n      },\n      visualization: this.memoizedGetVisualizationConfig(visualization, item.type, activeType)\n    };\n\n    switch (activeType) {\n      case VISUALIZATION:\n      case CHART:\n      case REPORT_TABLE:\n        {\n          return <>\n                        {!this.state.pluginLoaded && <div style={pluginProps.style}>\n                                <LoadingMask />\n                            </div>}\n                        <VisualizationPlugin d2={this.context.d2} visualization={this.memoizedGetFilteredVisualization(pluginProps.visualization, pluginProps.itemFilters)} onLoadingComplete={this.onLoadingComplete} forDashboard={true} style={pluginProps.style} />\n                    </>;\n        }\n\n      case MAP:\n        {\n          return <MapPlugin applyFilters={this.memoizedGetFilteredVisualization} {...pluginProps} />;\n        }\n\n      default:\n        {\n          pluginProps.visualization = this.memoizedGetFilteredVisualization(pluginProps.visualization, pluginProps.itemFilters);\n          return <DefaultPlugin {...pluginProps} />;\n        }\n    }\n  }\n\n}\n\nVisualization.propTypes = {\n  activeType: PropTypes.string,\n  availableHeight: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  item: PropTypes.object,\n  itemFilters: PropTypes.object,\n  visualization: PropTypes.object\n};\nVisualization.contextTypes = {\n  d2: PropTypes.object\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    visualization: sGetVisualization(state, getVisualizationId(ownProps.item))\n  };\n};\n\nexport default connect(mapStateToProps)(Visualization);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Warning } from './assets/icons';\nimport classes from './styles/FatalErrorBoundary.module.css';\n\nclass FatalErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      errorFound: false\n    };\n  }\n\n  componentDidCatch(error, info) {\n    this.setState({\n      errorFound: true\n    });\n    console.log('error: ', error);\n    console.log('info: ', info);\n  }\n\n  render() {\n    if (this.state.errorFound) {\n      return <p className={classes.container}>\n                    <span className={classes.icon}>\n                        <Warning />\n                    </span>\n                    <span className={classes.message}>\n                        {i18n.t('There was a problem loading this dashboard item')}\n                    </span>\n                </p>;\n    }\n\n    return this.props.children;\n  }\n\n}\n\nFatalErrorBoundary.propTypes = {\n  children: PropTypes.node\n};\nexport default FatalErrorBoundary;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classes from './styles/ItemHeader.module.css';\n\nconst ViewItemActions = ({\n  actionButtons\n}) => {\n  return actionButtons ? <div className={classes.itemActionsWrap}>{actionButtons}</div> : null;\n};\n\nViewItemActions.propTypes = {\n  actionButtons: PropTypes.node\n};\nexport default ViewItemActions;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { colors } from '@dhis2/ui';\nimport classes from './styles/DeleteItemButton.module.css';\n\nconst DeleteItemButton = ({\n  onClick\n}) => <button type=\"button\" className={classes.deleteItemButton} onClick={onClick} title={i18n.t(`Delete item`)}>\n        <DeleteIcon style={{\n    fill: colors.red500\n  }} />\n    </button>;\n\nDeleteItemButton.propTypes = {\n  onClick: PropTypes.func\n};\nexport default DeleteItemButton;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport DeleteItemButton from './DeleteItemButton';\nimport { acRemoveDashboardItem } from '../../../actions/editDashboard';\nimport classes from './styles/ItemHeader.module.css';\n\nconst EditItemActions = ({\n  itemId,\n  acRemoveDashboardItem\n}) => {\n  const handleDeleteItem = () => acRemoveDashboardItem(itemId);\n\n  return <div className={classes.itemActionsWrap}>\n            <DeleteItemButton onClick={handleDeleteItem} />\n        </div>;\n};\n\nEditItemActions.propTypes = {\n  acRemoveDashboardItem: PropTypes.func,\n  itemId: PropTypes.string\n};\nconst mapDispatchToProps = {\n  acRemoveDashboardItem\n};\nexport default connect(null, mapDispatchToProps)(EditItemActions);","import React from 'react';\nimport { colors } from '@dhis2/ui';\n\nconst WarningIcon = () => <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" fill={colors.grey600}>\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z\" />\n    </svg>;\n\nexport default WarningIcon;","import React from 'react';\nimport { Tooltip } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport InfoIcon from '../../../icons/Info';\nimport classes from './styles/PrintItemInfo.module.css';\n\nconst PrintWarning = () => <div className={classes.warning}>\n        <Tooltip content={i18n.t('This item has been shortened to fit on one page')} placement=\"bottom\">\n            <InfoIcon />\n        </Tooltip>\n    </div>;\n\nexport default PrintWarning;","export const EDIT = 'edit';\nexport const NEW = 'new';\nexport const VIEW = 'view';\nexport const PRINT = 'print';\nexport const PRINT_LAYOUT = 'print-layout';\nexport const isEditMode = mode => [EDIT, NEW].includes(mode);\nexport const isPrintMode = mode => [PRINT, PRINT_LAYOUT].includes(mode);\nexport const isViewMode = mode => mode === VIEW;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ViewItemActions from './ViewItemActions';\nimport EditItemActions from './EditItemActions';\nimport PrintItemInfo from './PrintItemInfo';\nimport { VIEW, EDIT, PRINT_LAYOUT } from '../../Dashboard/dashboardModes';\nimport classes from './styles/ItemHeader.module.css';\n\nconst getItemActionsMap = isShortened => {\n  return {\n    [VIEW]: ViewItemActions,\n    [EDIT]: EditItemActions,\n    [PRINT_LAYOUT]: isShortened ? PrintItemInfo : null\n  };\n}; // This is the margin-top + margin-bottom defined in the css file\n\n\nexport const HEADER_MARGIN_HEIGHT = 12;\nconst ItemHeader = React.forwardRef(({\n  dashboardMode,\n  title,\n  isShortened,\n  ...rest\n}, ref) => {\n  const Actions = getItemActionsMap(isShortened)[dashboardMode];\n  return <div className={classes.itemHeaderWrap} ref={ref}>\n                <p className={classes.itemTitle}>{title}</p>\n                {Actions ? <Actions {...rest} /> : null}\n            </div>;\n});\nItemHeader.displayName = 'ItemHeader';\nItemHeader.propTypes = {\n  dashboardMode: PropTypes.string,\n  isShortened: PropTypes.bool,\n  title: PropTypes.string\n};\nexport default connect(null, null, null, {\n  forwardRef: true\n})(ItemHeader);","import React, { useState, createRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { useConfig } from '@dhis2/app-runtime';\nimport { isSingleValue, isYearOverYear, VIS_TYPE_GAUGE, VIS_TYPE_PIE } from '@dhis2/analytics';\nimport { Button, Menu, Popover, MenuItem, Divider, colors } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport { ThreeDots, SpeechBubble, Fullscreen, ExitFullscreen } from './assets/icons';\nimport { getLink } from './Visualization/plugin';\nimport { CHART, MAP, REPORT_TABLE, EVENT_CHART, EVENT_REPORT, isTrackerDomainType, hasMapView, getAppName } from '../../../modules/itemTypes';\nconst iconFill = {\n  fill: colors.grey600\n};\n\nconst ItemHeaderButtons = props => {\n  const [menuIsOpen, setMenuIsOpen] = useState(null);\n  const {\n    baseUrl\n  } = useConfig();\n  const {\n    item,\n    visualization,\n    onSelectActiveType,\n    activeType\n  } = props;\n  const isTrackerType = isTrackerDomainType(item.type);\n\n  const onViewTable = () => {\n    closeMenu();\n    onSelectActiveType(isTrackerType ? EVENT_REPORT : REPORT_TABLE);\n  };\n\n  const onViewChart = () => {\n    closeMenu();\n    onSelectActiveType(isTrackerType ? EVENT_CHART : CHART);\n  };\n\n  const onViewMap = () => {\n    closeMenu();\n    onSelectActiveType(MAP);\n  };\n\n  const itemHasMapView = () => hasMapView(item.type);\n\n  const handleInterpretationClick = () => {\n    props.onToggleFooter();\n\n    if (menuIsOpen) {\n      closeMenu();\n    }\n  };\n\n  const handleToggleFullscreenClick = () => {\n    props.onToggleFullscreen();\n    closeMenu();\n  };\n\n  const openMenu = () => setMenuIsOpen(true);\n\n  const closeMenu = () => setMenuIsOpen(false);\n\n  const type = visualization.type || item.type;\n  const canViewAs = !isSingleValue(type) && !isYearOverYear(type) && type !== VIS_TYPE_GAUGE && type !== VIS_TYPE_PIE;\n  const interpretationMenuLabel = props.activeFooter ? i18n.t(`Hide interpretations and details`) : i18n.t(`Show interpretations and details`);\n\n  const ViewAsMenuItems = () => <>\n            {activeType !== CHART && activeType !== EVENT_CHART && <MenuItem dense label={i18n.t('View as Chart')} onClick={onViewChart} icon={<ChartIcon style={iconFill} />} />}\n            {activeType !== REPORT_TABLE && activeType !== EVENT_REPORT && <MenuItem dense label={i18n.t('View as Table')} onClick={onViewTable} icon={<TableIcon style={iconFill} />} />}\n            {itemHasMapView() && activeType !== MAP && <MenuItem dense label={i18n.t('View as Map')} onClick={onViewMap} icon={<MapIcon style={iconFill} />} />}\n        </>;\n\n  const buttonRef = createRef();\n  return props.isFullscreen ? <Button small secondary onClick={props.onToggleFullscreen}>\n            <ExitFullscreen />\n        </Button> : <>\n            <div ref={buttonRef}>\n                <Button small secondary onClick={openMenu} dataTest=\"dashboarditem-menu-button\">\n                    <ThreeDots />\n                </Button>\n            </div>\n            {menuIsOpen && <Popover reference={buttonRef} placement=\"auto-start\" arrow={false} onClickOutside={closeMenu}>\n                    <Menu>\n                        {canViewAs && <>\n                                <ViewAsMenuItems />\n                                <Divider />\n                            </>}\n                        <MenuItem dense icon={<LaunchIcon style={{\n          fill: '#6e7a8a'\n        }} />} label={i18n.t('Open in {{appName}} app', {\n          appName: getAppName(item.type)\n        })} href={getLink(item, baseUrl)} target=\"_blank\" />\n                        <MenuItem dense icon={<SpeechBubble />} label={interpretationMenuLabel} onClick={handleInterpretationClick} />\n                        {props.fullscreenSupported && <MenuItem dense icon={<Fullscreen />} label={i18n.t('View fullscreen')} onClick={handleToggleFullscreenClick} />}\n                    </Menu>\n                </Popover>}\n        </>;\n};\n\nItemHeaderButtons.propTypes = {\n  activeFooter: PropTypes.bool,\n  activeType: PropTypes.string,\n  fullscreenSupported: PropTypes.bool,\n  isFullscreen: PropTypes.bool,\n  item: PropTypes.object,\n  visualization: PropTypes.object,\n  onSelectActiveType: PropTypes.func,\n  onToggleFooter: PropTypes.func,\n  onToggleFullscreen: PropTypes.func\n};\nexport default ItemHeaderButtons;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getVisualizationId } from '../../../modules/item';\nimport InterpretationsComponent from '@dhis2/d2-ui-interpretations';\nimport classes from './styles/ItemFooter.module.css';\n\nconst ItemFooter = (props, context) => <div data-test=\"dashboarditem-footer\">\n        <hr className={classes.line} />\n        <div className={classes.scrollContainer}>\n            <InterpretationsComponent d2={context.d2} item={props.item} type={props.item.type.toLowerCase()} id={getVisualizationId(props.item)} appName=\"dashboard\" />\n        </div>\n    </div>;\n\nItemFooter.contextTypes = {\n  d2: PropTypes.object.isRequired\n};\nItemFooter.propTypes = {\n  item: PropTypes.object.isRequired\n};\nexport default ItemFooter;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport uniqueId from 'lodash/uniqueId';\nimport Visualization from './Visualization/Visualization';\nimport FatalErrorBoundary from './FatalErrorBoundary';\nimport ItemHeader, { HEADER_MARGIN_HEIGHT } from '../ItemHeader/ItemHeader';\nimport ItemHeaderButtons from './ItemHeaderButtons';\nimport ItemFooter from './ItemFooter';\nimport { apiPostDataStatistics } from '../../../api/dataStatistics';\nimport { apiFetchVisualization } from '../../../api/metadata';\nimport { sGetVisualization } from '../../../reducers/visualizations';\nimport { sGetSelectedItemActiveType } from '../../../reducers/selected';\nimport { sGetIsEditing } from '../../../reducers/editDashboard';\nimport { sGetItemFiltersRoot, DEFAULT_STATE_ITEM_FILTERS } from '../../../reducers/itemFilters';\nimport { sGatherAnalyticalObjectStatisticsInDashboardViews } from '../../../reducers/settings';\nimport { acAddVisualization } from '../../../actions/visualizations';\nimport { acSetSelectedItemActiveType } from '../../../actions/selected';\nimport { pluginIsAvailable } from './Visualization/plugin';\nimport { getDataStatisticsName } from '../../../modules/itemTypes';\nimport { getVisualizationId, getVisualizationName } from '../../../modules/item';\nimport memoizeOne from '../../../modules/memoizeOne';\nimport { isEditMode, isPrintMode, isViewMode } from '../../Dashboard/dashboardModes'; // this is set in the .dashboard-item-content css\n\nconst ITEM_CONTENT_PADDING_BOTTOM = 4;\nexport class Item extends Component {\n  state = {\n    showFooter: false,\n    configLoaded: false,\n    isFullscreen: false\n  };\n\n  constructor(props, context) {\n    super(props);\n    this.d2 = context.d2;\n    this.contentRef = React.createRef();\n    this.headerRef = React.createRef();\n    this.itemDomElSelector = `.reactgriditem-${this.props.item.id}`;\n    this.memoizedGetContentHeight = memoizeOne((calculatedHeight, measuredHeight, preferMeasured) => preferMeasured ? measuredHeight || calculatedHeight : calculatedHeight);\n  }\n\n  async componentDidMount() {\n    this.props.updateVisualization(await apiFetchVisualization(this.props.item));\n\n    try {\n      if (this.props.gatherDataStatistics && isViewMode(this.props.dashboardMode)) {\n        await apiPostDataStatistics(getDataStatisticsName(this.props.item.type), getVisualizationId(this.props.item));\n      }\n    } catch (e) {\n      console.log(e);\n    }\n\n    this.setState({\n      configLoaded: true\n    });\n    const el = document.querySelector(this.itemDomElSelector);\n\n    if (el?.requestFullscreen) {\n      el.onfullscreenchange = this.handleFullscreenChange;\n    } else if (el?.webkitRequestFullscreen) {\n      el.onwebkitfullscreenchange = this.handleFullscreenChange;\n    }\n  }\n\n  componentWillUnmount() {\n    const el = document.querySelector(this.itemDomElSelector);\n\n    if (el?.onfullscreenchange) {\n      el.removeEventListener('onfullscreenchange', this.handleFullscreenChange);\n    } else if (el?.onwebkitfullscreenchange) {\n      el.removeEventListener('onwebkitfullscreenchange', this.handleFullscreenChange);\n    }\n  }\n\n  isFullscreenSupported = () => {\n    const el = document.querySelector(this.itemDomElSelector);\n    return !!(el?.requestFullscreen || el?.webkitRequestFullscreen);\n  };\n  handleFullscreenChange = () => {\n    this.setState({\n      isFullscreen: !!document.fullscreenElement || !!document.webkitFullscreenElement\n    });\n  };\n  onToggleFullscreen = () => {\n    if (!this.state.isFullscreen) {\n      const el = document.querySelector(this.itemDomElSelector);\n\n      if (el?.requestFullscreen) {\n        el.requestFullscreen();\n      } else if (el?.webkitRequestFullscreen) {\n        el.webkitRequestFullscreen();\n      }\n    } else {\n      document.exitFullscreen ? document.exitFullscreen() : document.webkitExitFullscreen();\n    }\n  };\n  getUniqueKey = memoizeOne(() => uniqueId());\n  onToggleFooter = () => {\n    this.setState({\n      showFooter: !this.state.showFooter\n    }, this.props.onToggleItemExpanded(this.props.item.id));\n  };\n  setActiveType = type => {\n    type !== this.getActiveType() && this.props.setActiveType(this.props.item.id, type);\n  };\n  getActiveType = () => {\n    if (this.props.isEditing) {\n      return this.props.item.type;\n    }\n\n    return this.props.activeType || this.props.item.type;\n  };\n  getAvailableHeight = () => {\n    if (this.state.isFullscreen) {\n      return '95vh';\n    }\n\n    const calculatedHeight = this.props.item.originalHeight - this.headerRef.current.clientHeight - HEADER_MARGIN_HEIGHT - ITEM_CONTENT_PADDING_BOTTOM;\n    return this.memoizedGetContentHeight(calculatedHeight, this.contentRef ? this.contentRef.offsetHeight : null, isEditMode(this.props.dashboardMode) || isPrintMode(this.props.dashboardMode));\n  };\n\n  render() {\n    const {\n      item,\n      dashboardMode,\n      itemFilters\n    } = this.props;\n    const {\n      showFooter\n    } = this.state;\n    const activeType = this.getActiveType();\n    const actionButtons = pluginIsAvailable(activeType || item.type) ? <ItemHeaderButtons item={item} visualization={this.props.visualization} onSelectActiveType={this.setActiveType} onToggleFooter={this.onToggleFooter} onToggleFullscreen={this.onToggleFullscreen} activeType={activeType} activeFooter={showFooter} isFullscreen={this.state.isFullscreen} fullscreenSupported={this.isFullscreenSupported()} /> : null;\n    return <>\n                <ItemHeader title={getVisualizationName(item)} itemId={item.id} actionButtons={actionButtons} ref={this.headerRef} dashboardMode={dashboardMode} isShortened={item.shortened} />\n                <FatalErrorBoundary>\n                    <div key={this.getUniqueKey(itemFilters)} className=\"dashboard-item-content\" ref={ref => this.contentRef = ref}>\n                        {this.state.configLoaded && <Visualization item={item} activeType={activeType} itemFilters={itemFilters} availableHeight={this.getAvailableHeight()} />}\n                    </div>\n                </FatalErrorBoundary>\n                {isViewMode(dashboardMode) && showFooter ? <ItemFooter item={item} /> : null}\n            </>;\n  }\n\n}\nItem.contextTypes = {\n  d2: PropTypes.object\n};\nItem.propTypes = {\n  activeType: PropTypes.string,\n  dashboardMode: PropTypes.string,\n  gatherDataStatistics: PropTypes.bool,\n  isEditing: PropTypes.bool,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object,\n  setActiveType: PropTypes.func,\n  updateVisualization: PropTypes.func,\n  visualization: PropTypes.object,\n  onToggleItemExpanded: PropTypes.func\n};\nItem.defaultProps = {\n  item: {},\n  onToggleItemExpanded: Function.prototype,\n  visualization: {}\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const itemFilters = !isEditMode(ownProps.dashboardMode) ? sGetItemFiltersRoot(state) : DEFAULT_STATE_ITEM_FILTERS;\n  return {\n    activeType: sGetSelectedItemActiveType(state, ownProps.item?.id),\n    isEditing: sGetIsEditing(state),\n    itemFilters,\n    visualization: sGetVisualization(state, getVisualizationId(ownProps.item)),\n    gatherDataStatistics: sGatherAnalyticalObjectStatisticsInDashboardViews(state)\n  };\n};\n\nconst mapDispatchToProps = {\n  setActiveType: acSetSelectedItemActiveType,\n  updateVisualization: acAddVisualization\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Item);","import React from 'react';\nimport { colors } from '@dhis2/ui';\nconst style = {\n  backgroundColor: colors.grey200,\n  border: 'none',\n  height: '1px',\n  margin: '0px 0px 5px 0px'\n};\n\nconst Line = () => <hr style={style} />;\n\nexport default Line;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { colors } from '@dhis2/ui';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport Line from '../../../widgets/Line';\nimport { sGetMessagesRoot } from '../../../reducers/messages';\nimport { formatDate } from '../../../modules/util';\nimport { isViewMode } from '../../Dashboard/dashboardModes';\nimport './MessagesItem.css';\nconst PRIVATE = 'PRIVATE';\nconst messageTypes = {\n  [PRIVATE]: 'Private',\n  VALIDATION_RESULT: 'Validation',\n  TICKET: 'Ticket',\n  SYSTEM: 'System'\n};\nconst style = {\n  list: {\n    listStyleType: 'none',\n    paddingLeft: '0px'\n  },\n  seeAll: {\n    textAlign: 'center',\n    fontSize: '13px',\n    marginBottom: '5px'\n  },\n  sender: {\n    fontSize: '13px',\n    lineHeight: '15px',\n    margin: 0,\n    color: colors.grey800\n  },\n  snippet: {\n    color: colors.grey800,\n    fontSize: '13px',\n    lineHeight: '15px',\n    maxHeight: '30px',\n    overflow: 'hidden'\n  }\n};\n\nclass MessagesItem extends Component {\n  state = {\n    uiLocale: ''\n  };\n\n  async componentDidMount() {\n    const uiLocale = await this.context.d2.currentUser.userSettings.get('keyUiLocale');\n    this.setState({\n      uiLocale\n    });\n  }\n\n  getMessageHref = msg => {\n    const msgIdentifier = msg ? `#/${msg.messageType}/${msg.id}` : '';\n    return `${this.context.baseUrl}/dhis-web-messaging/${msgIdentifier}`;\n  };\n  getMessageSender = msg => {\n    const latestMsg = msg.messages.slice(-1)[0];\n    return latestMsg.sender ? latestMsg.sender.displayName : '';\n  };\n  getMessageItems = () => {\n    const modeClass = isViewMode(this.props.dashboardMode) ? 'view' : null;\n    return this.props.messages.map(msg => {\n      const redirectToMsg = () => {\n        if (isViewMode(this.props.dashboardMode)) {\n          document.location.href = this.getMessageHref(msg);\n        }\n      };\n\n      const sender = msg.messageType === PRIVATE ? this.getMessageSender(msg) : messageTypes[msg.messageType];\n      const readClass = !msg.read ? 'unread' : null;\n      const latestMsg = msg.messages.slice(-1)[0];\n      const msgDate = latestMsg.lastUpdated;\n      return <li className={`message-item ${modeClass}`} key={msg.id} onClick={redirectToMsg}>\n                    <p className={`message-title ${readClass}`}>\n                        {msg.displayName} ({msg.messageCount})\n                    </p>\n                    <p style={style.sender}>\n                        {sender} - {formatDate(msgDate, this.state.uiLocale)}\n                    </p>\n                    <p style={style.snippet}>{latestMsg.text}</p>\n                </li>;\n    });\n  };\n\n  render() {\n    return <>\n                <ItemHeader title={i18n.t('Messages')} itemId={this.props.item.id} dashboardMode={this.props.dashboardMode} isShortened={this.props.item.shortened} />\n                <Line />\n                {this.props.messages.length > 0 && <div className=\"dashboard-item-content\">\n                        <ul style={style.list}>{this.getMessageItems()}</ul>\n                        <div style={style.seeAll}>\n                            <a href={this.getMessageHref()}>\n                                {i18n.t('See all messages')}\n                            </a>\n                        </div>\n                    </div>}\n            </>;\n  }\n\n}\n\nMessagesItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  messages: PropTypes.array\n};\nMessagesItem.contextTypes = {\n  d2: PropTypes.object,\n  baseUrl: PropTypes.string\n};\n\nconst mapStateToProps = state => {\n  return {\n    messages: Object.values(sGetMessagesRoot(state))\n  };\n};\n\nconst MessagesContainer = connect(mapStateToProps, null)(MessagesItem);\nexport default MessagesContainer;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nconst NotSupportedItem = props => <>\n        <ItemHeader title={i18n.t('Item type \"{{type}}\" not supported', {\n    type: props.item.type\n  })} itemId={props.item.id} dashboardMode={props.dashboardMode} isShortened={props.item.shortened} />\n        <div style={{\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '90%'\n  }}>\n            <NotInterestedIcon style={{\n      width: 100,\n      height: 100,\n      align: 'center'\n    }} color=\"disabled\" />\n        </div>\n    </>;\n\nNotSupportedItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object\n};\nexport default NotSupportedItem;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst DescriptionIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill={colors.grey500}>\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M14 2H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6zm2 16H8v-2h8v2zm0-4H8v-2h8v2zm-3-5V3.5L18.5 9H13z\" />\n    </svg>;\n\nDescriptionIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default DescriptionIcon;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst DeleteIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill={colors.red500}>\n        <path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>;\n\nDeleteIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default DeleteIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { colors } from '@dhis2/ui';\nimport DescriptionIcon from '../../../icons/Description';\nimport DeleteIcon from '../../../icons/Delete';\nimport Line from '../../../widgets/Line';\nimport { itemTypeMap, getItemUrl } from '../../../modules/itemTypes';\nimport { orArray } from '../../../modules/util';\nimport { tRemoveListItemContent } from './actions';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport { isEditMode } from '../../Dashboard/dashboardModes';\nimport classes from './Item.module.css';\n\nconst getItemTitle = item => itemTypeMap[item.type].pluralTitle;\n\nconst getContentItems = item => orArray(item[itemTypeMap[item.type].propName]).filter((item, index, array) => array.findIndex(el => el.id === item.id) === index);\n\nconst ListItem = (props, context) => {\n  const {\n    item,\n    dashboardMode,\n    tRemoveListItemContent\n  } = props;\n  const contentItems = getContentItems(item);\n\n  const getLink = contentItem => {\n    const deleteButton = <button className={classes.deletebutton} onClick={() => tRemoveListItemContent(item, contentItem)}>\n                <DeleteIcon className={classes.deleteicon} />\n            </button>;\n    return <>\n                <a className={classes.link} style={{\n        color: colors.grey900\n      }} href={getItemUrl(item.type, contentItem, context.d2)}>\n                    {contentItem.name}\n                </a>\n                {isEditMode(dashboardMode) ? deleteButton : null}\n            </>;\n  };\n\n  return <>\n            <ItemHeader title={getItemTitle(item)} itemId={item.id} dashboardMode={dashboardMode} isShortened={item.shortened} />\n            <Line />\n            <div className=\"dashboard-item-content\">\n                <ul className={classes.list}>\n                    {contentItems.map(contentItem => <li className={classes.item} key={contentItem.id}>\n                            <DescriptionIcon className={classes.itemicon} />\n                            {getLink(contentItem)}\n                        </li>)}\n                </ul>\n            </div>\n        </>;\n};\n\nListItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  tRemoveListItemContent: PropTypes.func\n};\nListItem.contextTypes = {\n  d2: PropTypes.object\n};\nexport default connect(null, {\n  tRemoveListItemContent\n})(ListItem);","import { acUpdateDashboardItem, acRemoveDashboardItem } from '../../../actions/editDashboard';\nimport { itemTypeMap } from '../../../modules/itemTypes';\nexport const tRemoveListItemContent = (dashboardItem, content) => dispatch => {\n  const listItemType = itemTypeMap[dashboardItem.type].propName;\n  const newContent = dashboardItem[listItemType].filter(item => item.id !== content.id);\n\n  if (newContent.length) {\n    dashboardItem[listItemType] = newContent;\n    dispatch(acUpdateDashboardItem(dashboardItem));\n  } else {\n    dispatch(acRemoveDashboardItem(dashboardItem));\n  }\n};","/** @module reducers/editDashboard */\nimport update from 'immutability-helper';\nimport isEmpty from 'lodash/isEmpty';\nimport { orArray } from '../modules/util';\nexport const SET_PRINT_DASHBOARD = 'SET_PRINT_DASHBOARD';\nexport const CLEAR_PRINT_DASHBOARD = 'CLEAR_PRINT_DASHBOARD';\nexport const ADD_PRINT_DASHBOARD_ITEM = 'ADD_PRINT_DASHBOARD_ITEM';\nexport const SET_PRINT_DASHBOARD_LAYOUT = 'SET_PRINT_DASHBOARD_LAYOUT';\nexport const REMOVE_PRINT_DASHBOARD_ITEM = 'REMOVE_PRINT_DASHBOARD_ITEM';\nexport const UPDATE_PRINT_DASHBOARD_ITEM = 'UPDATE_PRINT_DASHBOARD_ITEM';\nexport const DEFAULT_STATE_PRINT_DASHBOARD = {};\nconst DEFAULT_DASHBOARD_ITEMS = [];\nexport const NEW_PRINT_DASHBOARD_STATE = {\n  id: '',\n  name: '',\n  access: {},\n  description: '',\n  dashboardItems: DEFAULT_DASHBOARD_ITEMS\n};\nexport default ((state = DEFAULT_STATE_PRINT_DASHBOARD, action) => {\n  switch (action.type) {\n    case SET_PRINT_DASHBOARD:\n      {\n        const newState = {};\n        Object.keys(NEW_PRINT_DASHBOARD_STATE).map(k => newState[k] = action.value[k]);\n        return newState;\n      }\n\n    case CLEAR_PRINT_DASHBOARD:\n      return DEFAULT_STATE_PRINT_DASHBOARD;\n\n    case ADD_PRINT_DASHBOARD_ITEM:\n      if (!action.value.position) {\n        return update(state, {\n          dashboardItems: {\n            $unshift: [action.value]\n          }\n        });\n      }\n\n      return update(state, {\n        dashboardItems: {\n          $splice: [[parseInt(action.value.position), 0, action.value]]\n        }\n      });\n\n    case REMOVE_PRINT_DASHBOARD_ITEM:\n      {\n        const idToRemove = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === idToRemove);\n\n        if (dashboardItemIndex > -1) {\n          return update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1]]\n            }\n          });\n        }\n\n        return state;\n      }\n\n    case UPDATE_PRINT_DASHBOARD_ITEM:\n      {\n        const dashboardItem = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === dashboardItem.id);\n\n        if (dashboardItemIndex > -1) {\n          const newState = update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1, Object.assign({}, dashboardItem)]]\n            }\n          });\n          return newState;\n        }\n\n        return state;\n      }\n\n    case SET_PRINT_DASHBOARD_LAYOUT:\n      {\n        const stateItems = orArray(state.dashboardItems);\n        let layoutHasChanged = false;\n        const newStateItems = action.value.map(({\n          x,\n          y,\n          w,\n          h,\n          i\n        }) => {\n          const stateItem = stateItems.find(si => si.id === i);\n\n          if (!(stateItem.x === x && stateItem.y === y && stateItem.w === w && stateItem.h === h)) {\n            layoutHasChanged = true;\n            return Object.assign({}, stateItem, {\n              w,\n              h,\n              x,\n              y\n            });\n          }\n\n          return stateItem;\n        });\n        return layoutHasChanged ? { ...state,\n          dashboardItems: newStateItems\n        } : state;\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetPrintDashboardRoot = state => state.printDashboard; // selectors\n\nexport const sGetIsPrinting = state => !isEmpty(state.printDashboard);\nexport const sGetPrintDashboardName = state => sGetPrintDashboardRoot(state).name;\nexport const sGetPrintDashboardDescription = state => sGetPrintDashboardRoot(state).description;\nexport const sGetPrintDashboardItems = state => {\n  return sGetPrintDashboardRoot(state)?.dashboardItems || DEFAULT_DASHBOARD_ITEMS;\n};","import React from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport Input from '@material-ui/core/Input';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport PrintItemInfo from '../ItemHeader/PrintItemInfo';\nimport Line from '../../../widgets/Line';\nimport { Parser as RichTextParser, Editor as RichTextEditor } from '@dhis2/d2-ui-rich-text';\nimport { acUpdateDashboardItem } from '../../../actions/editDashboard';\nimport { sGetEditDashboardItems } from '../../../reducers/editDashboard';\nimport { sGetDashboardItems } from '../../../reducers/dashboards';\nimport { sGetIsPrinting, sGetPrintDashboardItems } from '../../../reducers/printDashboard';\nimport { isEditMode, PRINT_LAYOUT } from '../../Dashboard/dashboardModes';\nconst style = {\n  textDiv: {\n    padding: '10px',\n    whiteSpace: 'pre-line',\n    lineHeight: '20px'\n  },\n  textField: {\n    fontSize: '14px',\n    fontStretch: 'normal',\n    width: '90%',\n    margin: '0 auto',\n    display: 'block',\n    lineHeight: '24px'\n  },\n  container: {\n    marginBottom: '20px',\n    marginTop: '20px'\n  }\n};\n\nconst TextItem = props => {\n  const {\n    item,\n    dashboardMode,\n    text,\n    acUpdateDashboardItem\n  } = props;\n\n  const onChangeText = event => {\n    const updatedItem = { ...item,\n      text: event.target.value\n    };\n    acUpdateDashboardItem(updatedItem);\n  };\n\n  const viewItem = () => {\n    const textDivStyle = Object.assign({}, style.textField, style.textDiv);\n    return <div className=\"dashboard-item-content\" style={style.container}>\n                <RichTextParser style={textDivStyle}>{text}</RichTextParser>\n            </div>;\n  };\n\n  const editItem = () => {\n    return <>\n                <ItemHeader title={i18n.t('Text item')} itemId={item.id} dashboardMode={dashboardMode} />\n                <Line />\n                <div className=\"dashboard-item-content\">\n                    <RichTextEditor onEdit={onChangeText}>\n                        <Input value={text} multiline fullWidth style={style.textField} placeholder={i18n.t('Add text here')} onChange={onChangeText} />\n                    </RichTextEditor>\n                </div>\n            </>;\n  };\n\n  const printItem = () => {\n    const textDivStyle = Object.assign({}, style.textField, style.textDiv);\n    return <>\n                {props.item.shortened ? <PrintItemInfo /> : null}\n                <div className=\"dashboard-item-content\" style={style.container}>\n                    <RichTextParser style={textDivStyle}>{text}</RichTextParser>\n                </div>\n            </>;\n  };\n\n  let textItem;\n\n  if (isEditMode(dashboardMode)) {\n    textItem = editItem;\n  } else if (dashboardMode === PRINT_LAYOUT) {\n    textItem = printItem;\n  } else {\n    textItem = viewItem;\n  }\n\n  return <>{textItem()}</>;\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const isPrintPreview = sGetIsPrinting(state);\n  let items;\n\n  if (isPrintPreview) {\n    items = sGetPrintDashboardItems(state);\n  } else if (isEditMode(ownProps.dashboardMode)) {\n    items = sGetEditDashboardItems(state);\n  } else {\n    items = sGetDashboardItems(state);\n  }\n\n  const item = items.find(item => item.id === ownProps.item.id);\n  return {\n    text: item ? item.text : ''\n  };\n};\n\nTextItem.propTypes = {\n  acUpdateDashboardItem: PropTypes.func,\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  text: PropTypes.string\n};\nexport default connect(mapStateToProps, {\n  acUpdateDashboardItem\n})(TextItem);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport Line from '../../../widgets/Line';\nimport { FILTER_ORG_UNIT } from '../../../actions/itemFilters';\nimport { sGetItemFiltersRoot, DEFAULT_STATE_ITEM_FILTERS } from '../../../reducers/itemFilters';\nimport { EDIT, isEditMode } from '../../Dashboard/dashboardModes';\n\nconst getIframeSrc = (appDetails, item, itemFilters) => {\n  let iframeSrc = `${appDetails.launchUrl}?dashboardItemId=${item.id}`;\n\n  if (itemFilters[FILTER_ORG_UNIT] && itemFilters[FILTER_ORG_UNIT].length) {\n    const ouIds = itemFilters[FILTER_ORG_UNIT].map(ouFilter => ouFilter.path.split('/').slice(-1)[0]);\n    iframeSrc += `&userOrgUnit=${ouIds.join(',')}`;\n  }\n\n  return iframeSrc;\n};\n\nconst AppItem = ({\n  dashboardMode,\n  item,\n  itemFilters\n}, context) => {\n  let appDetails;\n  const appKey = item.appKey;\n\n  if (appKey) {\n    appDetails = context.d2.system.installedApps.find(app => app.key === appKey);\n  }\n\n  const hideTitle = appDetails?.settings?.dashboardWidget?.hideTitle && dashboardMode !== EDIT;\n  return appDetails && appDetails.name && appDetails.launchUrl ? <>\n            {!hideTitle && <>\n                    <ItemHeader title={appDetails.name} itemId={item.id} dashboardMode={dashboardMode} isShortened={item.shortened} />\n                    <Line />\n                </>}\n            <iframe title={appDetails.name} src={getIframeSrc(appDetails, item, itemFilters)} className={!hideTitle ? 'dashboard-item-content' : 'dashboard-item-content-hidden-title'} style={{\n      border: 'none'\n    }} />\n        </> : <>\n            <ItemHeader title={`${appKey} app not found`} />\n            <Line />\n            <div className=\"dashboard-item-content\" style={{\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      height: '90%'\n    }}>\n                <NotInterestedIcon color=\"disabled\" disabled style={{\n        width: 100,\n        height: 100,\n        align: 'center'\n      }} />\n            </div>\n        </>;\n};\n\nAppItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object\n};\nAppItem.contextTypes = {\n  d2: PropTypes.object\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const itemFilters = !isEditMode(ownProps.dashboardMode) ? sGetItemFiltersRoot(state) : DEFAULT_STATE_ITEM_FILTERS;\n  return {\n    itemFilters\n  };\n};\n\nexport default connect(mapStateToProps)(AppItem);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { colors } from '@dhis2/ui';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nconst style = {\n  margin: '21px 28px',\n  fontSize: '14px',\n  lineHeight: '18px',\n  color: colors.grey600\n};\n\nconst SpacerItem = props => {\n  return <>\n            <ItemHeader title={i18n.t('Spacer')} itemId={props.item.id} dashboardMode={props.dashboardMode} isShortened={props.item.shortened} />\n            <p style={style}>\n                {i18n.t('Use a spacer to create empty vertical space between other dashboard items.')}\n            </p>\n        </>;\n};\n\nSpacerItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object\n};\nexport default SpacerItem;","import React from 'react';\n\nconst PageBreakItem = () => <div />;\n\nexport default PageBreakItem;","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { sGetSelectedId, sGetSelectedShowDescription } from '../../../reducers/selected';\nimport { sGetDashboardById, EMPTY_DASHBOARD } from '../../../reducers/dashboards';\nimport { sGetNamedItemFilters } from '../../../reducers/itemFilters';\nimport { sGetIsEditing } from '../../../reducers/editDashboard';\nimport { sGetPrintDashboardName, sGetPrintDashboardDescription } from '../../../reducers/printDashboard';\nimport classes from './styles/Item.module.css';\n\nconst PrintTitlePageItem = ({\n  name,\n  description,\n  itemFilters,\n  showDescription\n}) => {\n  const getItemFilterList = () => {\n    const listItems = itemFilters.map(({\n      name,\n      values\n    }) => <li className={classes.filterListItem} key={name}>\n                {name}: {values.map(val => val.name).join(', ')}\n            </li>);\n    return <ul className={classes.filterList}>{listItems}</ul>;\n  };\n\n  return <div className={classes.titlePage}>\n            <p className={classes.name}>{name}</p>\n            {showDescription && description && <p className={classes.description}>{description}</p>}\n            {itemFilters.length > 0 && <>\n                    <p className={classes.filterTitle}>\n                        {i18n.t('Filters applied')}\n                    </p>\n                    {getItemFilterList()}\n                </>}\n        </div>;\n};\n\nPrintTitlePageItem.propTypes = {\n  description: PropTypes.string,\n  itemFilters: PropTypes.array,\n  name: PropTypes.string,\n  showDescription: PropTypes.bool\n};\nPrintTitlePageItem.defaultProps = {\n  description: '',\n  name: '',\n  showDescription: false\n};\n\nconst mapStateToProps = state => {\n  const id = sGetSelectedId(state);\n  const isEditMode = sGetIsEditing(state);\n  const viewDashboard = sGetDashboardById(state, id) || EMPTY_DASHBOARD;\n  const name = isEditMode ? sGetPrintDashboardName(state) || i18n.t('Untitled dashboard') : viewDashboard.displayName;\n  const description = isEditMode ? sGetPrintDashboardDescription(state) : viewDashboard.displayDescription;\n  return {\n    name,\n    description,\n    itemFilters: sGetNamedItemFilters(state),\n    showDescription: sGetSelectedShowDescription(state)\n  };\n};\n\nexport default connect(mapStateToProps)(PrintTitlePageItem);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport VisualizationItem from './VisualizationItem/Item';\nimport MessagesItem from './MessagesItem/Item';\nimport NotSupportedItem from './NotSupportedItem/Item';\nimport ListItem from './ListItem/Item';\nimport TextItem from './TextItem/Item';\nimport AppItem from './AppItem/Item';\nimport SpacerItem from './SpacerItem/Item';\nimport PageBreakItem from './PageBreakItem/Item';\nimport PrintTitlePageItem from './PrintTitlePageItem/Item';\nimport { APP, VISUALIZATION, REPORT_TABLE, CHART, MAP, EVENT_CHART, EVENT_REPORT, MESSAGES, REPORTS, RESOURCES, USERS, TEXT, SPACER, PAGEBREAK, PRINT_TITLE_PAGE } from '../../modules/itemTypes';\n\nconst getGridItem = type => {\n  switch (type) {\n    case VISUALIZATION:\n    case REPORT_TABLE:\n    case CHART:\n    case MAP:\n    case EVENT_CHART:\n    case EVENT_REPORT:\n      return VisualizationItem;\n\n    case MESSAGES:\n      return MessagesItem;\n\n    case REPORTS:\n    case RESOURCES:\n    case USERS:\n      return ListItem;\n\n    case TEXT:\n      return TextItem;\n\n    case SPACER:\n      return SpacerItem;\n\n    case APP:\n      return AppItem;\n\n    case PAGEBREAK:\n      return PageBreakItem;\n\n    case PRINT_TITLE_PAGE:\n      return PrintTitlePageItem;\n\n    default:\n      return NotSupportedItem;\n  }\n};\n\nexport const Item = props => {\n  const GridItem = getGridItem(props.item.type);\n  return <GridItem item={props.item} dashboardMode={props.dashboardMode} onToggleItemExpanded={props.onToggleItemExpanded} />;\n};\nItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  onToggleItemExpanded: PropTypes.func\n};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash/debounce';\nimport pick from 'lodash/pick';\nconst defaultDebounceMs = 100;\nconst defaultBufferFactor = 0.25;\n\nclass ProgressiveLoadingContainer extends Component {\n  static propTypes = {\n    children: PropTypes.node.isRequired,\n    bufferFactor: PropTypes.number,\n    className: PropTypes.string,\n    debounceMs: PropTypes.number,\n    style: PropTypes.object\n  };\n  static defaultProps = {\n    debounceMs: defaultDebounceMs,\n    bufferFactor: defaultBufferFactor\n  };\n  state = {\n    shouldLoad: false\n  };\n  containerRef = null;\n  shouldLoadHandler = null;\n  handlerOptions = {\n    passive: true\n  };\n\n  checkShouldLoad() {\n    if (!this.containerRef) {\n      return;\n    }\n\n    const bufferPx = this.props.bufferFactor * window.innerHeight;\n    const rect = this.containerRef.getBoundingClientRect();\n\n    if (rect.bottom > -bufferPx && rect.top < window.innerHeight + bufferPx) {\n      this.setState({\n        shouldLoad: true\n      });\n      this.removeHandler();\n    }\n  }\n\n  registerHandler() {\n    this.shouldLoadHandler = debounce(() => this.checkShouldLoad(), this.props.debounceMs);\n    document.getElementsByClassName('dashboard-wrapper')[0]?.addEventListener('scroll', this.shouldLoadHandler, this.handlerOptions);\n  }\n\n  removeHandler() {\n    document.getElementsByClassName('dashboard-wrapper')[0]?.removeEventListener('scroll', this.shouldLoadHandler, this.handlerOptions);\n  }\n\n  componentDidMount() {\n    this.registerHandler();\n    this.checkShouldLoad();\n  }\n\n  componentWillUnmount() {\n    this.removeHandler();\n  }\n\n  render() {\n    const {\n      children,\n      className,\n      style,\n      ...props\n    } = this.props;\n    const {\n      shouldLoad\n    } = this.state;\n    const eventProps = pick(props, ['onMouseDown', 'onTouchStart', 'onMouseUp', 'onTouchEnd']);\n    return <div ref={ref => this.containerRef = ref} style={style} className={className} data-test={`dashboarditem-${props.itemId}`} {...eventProps}>\n                {shouldLoad && children}\n            </div>;\n  }\n\n}\n\nexport default ProgressiveLoadingContainer;","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport cx from 'classnames';\nimport { Responsive as ResponsiveReactGridLayout } from 'react-grid-layout';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport { useWindowDimensions } from '../WindowDimensionsProvider';\nimport { Item } from '../Item/Item';\nimport { GRID_ROW_HEIGHT, getGridColumns, GRID_COMPACT_TYPE, MARGIN, hasShape, sortCoordinates, withSingleColumnShape } from './gridUtil';\nimport { orArray } from '../../modules/util';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport { sGetSelectedId, sGetSelectedIsLoading } from '../../reducers/selected';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport ProgressiveLoadingContainer from '../Item/ProgressiveLoadingContainer';\nimport { VIEW } from '../Dashboard/dashboardModes';\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\nimport './styles/ItemGrid.css';\nconst EXPANDED_HEIGHT = 17;\n\nconst ResponsiveItemGrid = ({\n  isLoading,\n  dashboardItems\n}) => {\n  const [expandedItems, setExpandedItems] = useState({});\n  const [displayItems, setDisplayItems] = useState(dashboardItems);\n  const {\n    width\n  } = useWindowDimensions();\n  const displayItemsSmallDevice = withSingleColumnShape(sortCoordinates(dashboardItems));\n  useEffect(() => {\n    setDisplayItems(dashboardItems.map(adjustHeightForExpanded));\n  }, [expandedItems, dashboardItems]);\n\n  const onToggleItemExpanded = clickedId => {\n    const isExpanded = typeof expandedItems[clickedId] === 'boolean' ? expandedItems[clickedId] : false;\n    const newExpandedItems = { ...expandedItems\n    };\n    newExpandedItems[clickedId] = !isExpanded;\n    setExpandedItems(newExpandedItems);\n  };\n\n  const adjustHeightForExpanded = dashboardItem => {\n    const expandedItem = expandedItems[dashboardItem.id];\n\n    if (expandedItem && expandedItem === true) {\n      return Object.assign({}, dashboardItem, {\n        h: dashboardItem.h + EXPANDED_HEIGHT\n      });\n    }\n\n    return dashboardItem;\n  };\n\n  const getItemComponent = item => <ProgressiveLoadingContainer key={item.i} className={cx(item.type, 'view', `reactgriditem-${item.id}`)} itemId={item.id}>\n            <Item item={item} dashboardMode={VIEW} onToggleItemExpanded={onToggleItemExpanded} />\n        </ProgressiveLoadingContainer>;\n\n  const getItemComponents = items => items.map(item => getItemComponent(item));\n\n  if (!isLoading && !dashboardItems.length) {\n    return <NoContentMessage text={i18n.t('There are no items on this dashboard')} />;\n  }\n\n  return <>\n            {isLoading ? <Layer translucent>\n                    <CenteredContent>\n                        <CircularLoader />\n                    </CenteredContent>\n                </Layer> : null}\n            <ResponsiveReactGridLayout rowHeight={GRID_ROW_HEIGHT} width={width} cols={{\n      lg: getGridColumns(),\n      sm: 9\n    }} // min-width for items in dashboard was 9 columns\n    breakpoints={{\n      lg: 452,\n      sm: 0\n    }} layouts={{\n      lg: displayItems,\n      sm: displayItemsSmallDevice\n    }} measureBeforeMount={true} compactType={GRID_COMPACT_TYPE} margin={MARGIN} isDraggable={false} isResizable={false} draggableCancel=\"input,textarea\">\n                {getItemComponents(displayItems)}\n            </ResponsiveReactGridLayout>\n        </>;\n};\n\nResponsiveItemGrid.propTypes = {\n  dashboardItems: PropTypes.array,\n  isLoading: PropTypes.bool\n};\n\nconst mapStateToProps = state => {\n  const selectedDashboard = sGetDashboardById(state, sGetSelectedId(state));\n  const dashboardItems = orArray(sGetDashboardItems(state)).filter(hasShape);\n  return {\n    isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n    dashboardItems\n  };\n};\n\nexport default connect(mapStateToProps)(ResponsiveItemGrid);","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { colors } from '@dhis2/ui';\nconst styles = {\n  badgeContainer: {\n    margin: '2px',\n    padding: '0 16px',\n    borderRadius: '4px',\n    color: colors.white,\n    backgroundColor: '#212934',\n    height: 36,\n    display: 'flex',\n    alignItems: 'center'\n  },\n  badge: {\n    fontSize: '13px',\n    cursor: 'pointer',\n    whiteSpace: 'nowrap'\n  },\n  badgeRemove: {\n    fontSize: '12px',\n    textDecoration: 'underline',\n    marginLeft: '24px',\n    cursor: 'pointer'\n  }\n};\n\nclass FilterBadge extends Component {\n  onClick = id => () => this.props.onClick(id);\n  onRemove = id => () => this.props.onRemove(id);\n\n  render() {\n    const {\n      data\n    } = this.props;\n    return <div style={styles.badgeContainer} data-test=\"dashboard-filter-badge\">\n                <span style={styles.badge} onClick={this.onClick(data.id)}>\n                    {`${data.name}: ${data.values.length > 1 ? i18n.t('{{count}} selected', {\n          count: data.values.length\n        }) : data.values[0].name}`}\n                </span>\n                <span style={styles.badgeRemove} onClick={this.onRemove(data.id)}>\n                    {i18n.t('Remove')}\n                </span>\n            </div>;\n  }\n\n}\n\nFilterBadge.propTypes = {\n  data: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired,\n  onRemove: PropTypes.func.isRequired\n};\nFilterBadge.defaultProps = {\n  onClick: Function.prototype,\n  onRemove: Function.prototype\n};\nexport default FilterBadge;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport FilterBadge from './FilterBadge';\nimport { sGetNamedItemFilters } from '../../reducers/itemFilters';\nimport { acRemoveItemFilter } from '../../actions/itemFilters';\nimport { acSetActiveModalDimension } from '../../actions/activeModalDimension';\nimport classes from './styles/FilterBar.module.css';\nexport class FilterBar extends Component {\n  onBadgeRemove = id => {\n    this.props.removeItemFilter(id);\n  };\n  onBadgeClick = id => {\n    this.props.setActiveModalDimension({\n      id,\n      name: this.props.filters.find(item => item.id === id).name\n    });\n  };\n\n  render() {\n    const {\n      filters\n    } = this.props;\n    return filters.length ? // the 3 is calculated so that the FilterBar has the same vertical position as the TitleBar in relation to the ControlBar\n    <div className={classes.bar} style={{\n      top: 3\n    }}>\n                {filters.map(filter => <FilterBadge key={filter.id} data={filter} onClick={this.onBadgeClick} onRemove={this.onBadgeRemove} />)}\n            </div> : null;\n  }\n\n}\nFilterBar.propTypes = {\n  filters: PropTypes.array.isRequired,\n  removeItemFilter: PropTypes.func.isRequired,\n  setActiveModalDimension: PropTypes.func\n};\nFilterBar.defaultProps = {\n  filters: [],\n  removeItemFIlter: Function.prototype\n};\n\nconst mapStateToProps = state => ({\n  filters: sGetNamedItemFilters(state)\n});\n\nexport default connect(mapStateToProps, {\n  setActiveModalDimension: acSetActiveModalDimension,\n  removeItemFilter: acRemoveItemFilter\n})(FilterBar);","export const SET_WINDOW_HEIGHT = 'SET_WINDOW_HEIGHT';\nexport const DEFAULT_STATE_WINDOW_HEIGHT = window.innerHeight;\nexport default ((state = DEFAULT_STATE_WINDOW_HEIGHT, action) => {\n  switch (action.type) {\n    case SET_WINDOW_HEIGHT:\n      {\n        return action.value;\n      }\n\n    default:\n      return state;\n  }\n});\nexport const sGetWindowHeight = state => state.windowHeight;","import { generateUid } from 'd2/uid';\nimport { SET_PRINT_DASHBOARD, CLEAR_PRINT_DASHBOARD, SET_PRINT_DASHBOARD_LAYOUT, ADD_PRINT_DASHBOARD_ITEM, REMOVE_PRINT_DASHBOARD_ITEM, UPDATE_PRINT_DASHBOARD_ITEM } from '../reducers/printDashboard';\nimport { NEW_ITEM_SHAPE, getGridItemProperties, getPageBreakItemShape, getPrintTitlePageItemShape } from '../components/ItemGrid/gridUtil';\nimport { itemTypeMap, PAGEBREAK } from '../modules/itemTypes'; // actions\n\nexport const acSetPrintDashboard = (dashboard, items) => {\n  const val = { ...dashboard,\n    dashboardItems: items\n  };\n  return {\n    type: SET_PRINT_DASHBOARD,\n    value: val\n  };\n};\nexport const acClearPrintDashboard = () => ({\n  type: CLEAR_PRINT_DASHBOARD\n});\nexport const acUpdatePrintDashboardLayout = value => ({\n  type: SET_PRINT_DASHBOARD_LAYOUT,\n  value\n});\nexport const acAddPrintDashboardItem = item => {\n  const type = item.type;\n  delete item.type;\n  const itemPropName = itemTypeMap[type].propName;\n  const id = generateUid();\n  const gridItemProperties = getGridItemProperties(id);\n  let shape;\n\n  if (type === PAGEBREAK) {\n    const yPos = item.yPos || 0;\n    shape = getPageBreakItemShape(yPos, item.isStatic);\n  } else {\n    shape = getPrintTitlePageItemShape(item.isOneItemPerPage);\n  }\n\n  return {\n    type: ADD_PRINT_DASHBOARD_ITEM,\n    value: {\n      id,\n      type,\n      position: item.position || null,\n      [itemPropName]: item.content,\n      ...NEW_ITEM_SHAPE,\n      ...gridItemProperties,\n      ...shape\n    }\n  };\n};\nexport const acRemovePrintDashboardItem = value => ({\n  type: REMOVE_PRINT_DASHBOARD_ITEM,\n  value\n});\nexport const acUpdatePrintDashboardItem = item => ({\n  type: UPDATE_PRINT_DASHBOARD_ITEM,\n  value: item\n});","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport TitleBar from '../TitleBar/TitleBar';\nimport ViewItemGrid from '../ItemGrid/ViewItemGrid';\nimport FilterBar from '../FilterBar/FilterBar';\nimport DashboardsBar from '../ControlBar/DashboardsBar';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport { sGetIsEditing } from '../../reducers/editDashboard';\nimport { sGetIsPrinting } from '../../reducers/printDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { sGetWindowHeight } from '../../reducers/windowHeight';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { acClearEditDashboard } from '../../actions/editDashboard';\nimport { acClearPrintDashboard } from '../../actions/printDashboard';\nimport { getControlBarHeight, HEADERBAR_HEIGHT } from '../ControlBar/controlBarDimensions';\nexport const ViewDashboard = props => {\n  useEffect(() => {\n    if (props.dashboardIsEditing) {\n      props.clearEditDashboard();\n    } else if (props.dashboardIsPrinting) {\n      props.clearPrintDashboard();\n    }\n  }, [props.dashboardIsEditing, props.dashboardIsPrinting]);\n  useEffect(() => {\n    document.querySelector('.dashboard-wrapper')?.scroll(0, 0);\n  }, [props.selectedId]);\n  const height = props.windowHeight - HEADERBAR_HEIGHT - getControlBarHeight(props.controlBarRows);\n  return <>\n            <DashboardsBar />\n            <DashboardVerticalOffset />\n            <div className=\"dashboard-wrapper\" style={{\n      height\n    }}>\n                <TitleBar edit={false} />\n                <FilterBar />\n                <ViewItemGrid />\n            </div>\n        </>;\n};\nViewDashboard.propTypes = {\n  clearEditDashboard: PropTypes.func,\n  clearPrintDashboard: PropTypes.func,\n  controlBarRows: PropTypes.number,\n  dashboardIsEditing: PropTypes.bool,\n  dashboardIsPrinting: PropTypes.bool,\n  selectedId: PropTypes.string,\n  windowHeight: PropTypes.number\n};\n\nconst mapStateToProps = state => {\n  return {\n    dashboardIsEditing: sGetIsEditing(state),\n    dashboardIsPrinting: sGetIsPrinting(state),\n    controlBarRows: sGetControlBarUserRows(state),\n    selectedId: sGetSelectedId(state),\n    windowHeight: sGetWindowHeight(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  clearEditDashboard: acClearEditDashboard,\n  clearPrintDashboard: acClearPrintDashboard\n})(ViewDashboard);","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ReactGridLayout from 'react-grid-layout';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport cx from 'classnames';\nimport { acUpdateDashboardLayout } from '../../actions/editDashboard';\nimport { Item } from '../Item/Item';\nimport { resize as pluginResize } from '../Item/VisualizationItem/Visualization/plugin';\nimport { isVisualizationType } from '../../modules/itemTypes';\nimport { GRID_ROW_HEIGHT, GRID_COMPACT_TYPE, MARGIN, getGridColumns, hasShape, getGridItemDomId } from './gridUtil';\nimport { orArray } from '../../modules/util';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport { sGetSelectedIsLoading } from '../../reducers/selected';\nimport { sGetEditDashboardRoot, sGetEditDashboardItems } from '../../reducers/editDashboard';\nimport ProgressiveLoadingContainer from '../Item/ProgressiveLoadingContainer';\nimport { EDIT } from '../Dashboard/dashboardModes';\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\nimport './styles/ItemGrid.css';\n\nconst EditItemGrid = ({\n  isLoading,\n  dashboardItems,\n  acUpdateDashboardLayout\n}) => {\n  const onLayoutChange = newLayout => {\n    acUpdateDashboardLayout(newLayout);\n  };\n\n  const onItemResize = id => {\n    const el = document.querySelector(`#${getGridItemDomId(id)}`) || {};\n    if (typeof el.setViewportSize === 'function') setTimeout(() => el.setViewportSize(el.clientWidth - 5, el.clientHeight - 5), 10);\n  };\n\n  const onResizeStop = (layout, oldItem, newItem) => {\n    onItemResize(newItem.i);\n    const dashboardItem = dashboardItems.find(item => item.id === newItem.i); // call resize on the item component if it's a plugin type\n\n    if (dashboardItem && isVisualizationType(dashboardItem)) {\n      pluginResize(dashboardItem);\n    }\n  };\n\n  const getItemComponent = item => <ProgressiveLoadingContainer key={item.i} className={cx(item.type, 'edit')} itemId={item.id}>\n            <Item item={item} dashboardMode={EDIT} />\n        </ProgressiveLoadingContainer>;\n\n  const getItemComponents = items => items.map(item => getItemComponent(item));\n\n  if (!isLoading && !dashboardItems.length) {\n    return <NoContentMessage text={i18n.t('There are no items on this dashboard')} />;\n  }\n\n  return <>\n            {isLoading ? <Layer translucent>\n                    <CenteredContent>\n                        <CircularLoader />\n                    </CenteredContent>\n                </Layer> : null}\n            <ReactGridLayout layout={dashboardItems} margin={MARGIN} cols={getGridColumns()} rowHeight={GRID_ROW_HEIGHT} width={window.innerWidth} compactType={GRID_COMPACT_TYPE} onLayoutChange={onLayoutChange} onResizeStop={onResizeStop} isDraggable={true} isResizable={true} draggableCancel=\"input,textarea\">\n                {getItemComponents(dashboardItems)}\n            </ReactGridLayout>\n        </>;\n};\n\nEditItemGrid.propTypes = {\n  acUpdateDashboardLayout: PropTypes.func,\n  dashboardItems: PropTypes.array,\n  isLoading: PropTypes.bool\n}; // Container\n\nconst mapStateToProps = state => {\n  const selectedDashboard = sGetEditDashboardRoot(state);\n  const dashboardItems = orArray(sGetEditDashboardItems(state)).filter(hasShape);\n  return {\n    isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n    dashboardItems\n  };\n};\n\nconst mapDispatchToProps = {\n  acUpdateDashboardLayout\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(EditItemGrid);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Button, Modal, ModalContent, ModalActions, ButtonStrip, ModalTitle } from '@dhis2/ui';\nimport classes from './styles/ConfirmDeleteDialog.module.css';\nexport const ConfirmDeleteDialog = ({\n  dashboardName,\n  onDeleteConfirmed,\n  onContinueEditing,\n  open\n}) => {\n  const actions = [<Button key=\"cancel\" secondary onClick={onContinueEditing} dataTest=\"cancel-delete-dashboard\">\n            {i18n.t('Cancel')}\n        </Button>, <Button key=\"delete\" destructive onClick={onDeleteConfirmed} dataTest=\"confirm-delete-dashboard\">\n            {i18n.t('Delete')}\n        </Button>];\n  return open && <Modal onClose={onContinueEditing} small position=\"middle\">\n                <ModalTitle>{i18n.t('Delete dashboard')}</ModalTitle>\n                <ModalContent>\n                    <span className={classes.content}>\n                        {i18n.t('Deleting dashboard \"{{ dashboardName }}\" will remove it for all users. This action cannot be undone. Are you sure you want to permanently delete this dashboard?', {\n          dashboardName\n        })}\n                    </span>\n                </ModalContent>\n                <ModalActions>\n                    <ButtonStrip>{actions}</ButtonStrip>\n                </ModalActions>\n            </Modal>;\n};\nConfirmDeleteDialog.propTypes = {\n  dashboardName: PropTypes.string,\n  open: PropTypes.bool,\n  onContinueEditing: PropTypes.func,\n  onDeleteConfirmed: PropTypes.func\n};\nexport default ConfirmDeleteDialog;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport ControlBar from './ControlBar';\nimport TranslationDialog from '@dhis2/d2-ui-translation-dialog';\nimport { Button, ButtonStrip } from '@dhis2/ui';\nimport ConfirmDeleteDialog from './ConfirmDeleteDialog';\nimport { tSaveDashboard, acClearEditDashboard } from '../../actions/editDashboard';\nimport { acClearPrintDashboard } from '../../actions/printDashboard';\nimport { tDeleteDashboard, acSetDashboardDisplayName } from '../../actions/dashboards';\nimport { sGetEditDashboardRoot, sGetIsNewDashboard, sGetIsPrintPreviewView } from '../../reducers/editDashboard';\nimport { acSetPrintPreviewView, acClearPrintPreviewView } from '../../actions/editDashboard';\nimport { CONTROL_BAR_ROW_HEIGHT, MIN_ROW_COUNT, getControlBarHeight } from './controlBarDimensions';\nimport { apiFetchDashboard } from '../../api/dashboards';\nimport classes from './styles/DashboardsBar.module.css';\nconst buttonBarStyle = {\n  height: CONTROL_BAR_ROW_HEIGHT,\n  paddingTop: '15px',\n  marginLeft: '15px',\n  marginRight: '15px'\n};\nexport class EditBar extends Component {\n  state = {\n    translationDialogIsOpen: false,\n    dashboardModel: undefined,\n    dashboard: undefined,\n    confirmDeleteDialogOpen: false,\n    redirectUrl: undefined\n  };\n  onConfirmDelete = () => {\n    this.setState({\n      confirmDeleteDialogOpen: true\n    });\n  };\n  onSave = () => {\n    this.props.onSave().then(newId => {\n      this.setState({\n        redirectUrl: `/${newId}`\n      });\n    });\n  };\n  onPrintPreview = () => {\n    if (this.props.isPrintPreviewView) {\n      this.props.clearPrintPreview();\n      this.props.clearPrintDashboard();\n    } else {\n      this.props.showPrintPreview();\n    }\n  };\n  onDiscard = () => {\n    this.props.onDiscardChanges();\n    const redirectUrl = this.props.dashboardId ? `/${this.props.dashboardId}` : '/';\n    this.setState({\n      redirectUrl\n    });\n  };\n  onContinueEditing = () => {\n    this.setState({\n      confirmDeleteDialogOpen: false\n    });\n  };\n  onDeleteConfirmed = () => {\n    this.setState({\n      confirmDeleteDialogOpen: false\n    });\n    this.props.onDelete(this.props.dashboardId).then(() => {\n      this.setState({\n        redirectUrl: '/'\n      });\n    });\n  };\n  onTranslationsSaved = async translations => {\n    if (translations && translations.length) {\n      const dbLocale = await this.context.d2.currentUser.userSettings.get('keyDbLocale');\n      const translation = translations.find(t => t.locale === dbLocale && t.property === 'NAME');\n\n      if (translation && translation.value) {\n        this.props.onTranslate(this.props.dashboardId, translation.value);\n      }\n    }\n  };\n  fetchDashboardModel = () => {\n    if (this.props.dashboardId && !this.state.dashboard) {\n      apiFetchDashboard(this.context.dataEngine, this.props.dashboardId).then(dashboard => this.setState({\n        dashboard\n      }));\n    }\n  };\n\n  componentDidMount() {\n    this.fetchDashboardModel();\n  }\n\n  componentDidUpdate() {\n    this.fetchDashboardModel();\n  }\n\n  toggleTranslationDialog = () => {\n    this.setState({\n      translationDialogIsOpen: !this.state.translationDialogIsOpen\n    });\n  };\n  confirmDeleteDialog = () => this.props.deleteAccess && this.props.dashboardId ? <ConfirmDeleteDialog dashboardName={this.props.dashboardName} onDeleteConfirmed={this.onDeleteConfirmed} onContinueEditing={this.onContinueEditing} open={this.state.confirmDeleteDialogOpen} /> : null;\n  translationDialog = () => this.state.dashboard && this.state.dashboard.id ? <TranslationDialog className=\"translation-dialog\" d2={this.context.d2} open={this.state.translationDialogIsOpen} onRequestClose={this.toggleTranslationDialog} objectToTranslate={{ ...this.state.dashboard,\n    modelDefinition: {\n      name: 'dashboard'\n    }\n  }} fieldsToTranslate={['name', 'description']} onTranslationSaved={this.onTranslationsSaved} onTranslationError={err => console.log('translation update error', err)} /> : null;\n  renderActionButtons = () => {\n    const printPreviewText = this.props.isPrintPreviewView ? i18n.t('Exit Print preview') : i18n.t('Print preview');\n    return <div className={classes.leftControls}>\n                <ButtonStrip>\n                    <Button primary onClick={this.onSave} dataTest=\"save-dashboard-button\">\n                        {i18n.t('Save changes')}\n                    </Button>\n                    <Button onClick={this.onPrintPreview}>\n                        {printPreviewText}\n                    </Button>\n\n                    {this.props.dashboardId ? <Button onClick={this.toggleTranslationDialog}>\n                            {i18n.t('Translate')}\n                        </Button> : null}\n                    {this.props.dashboardId && this.props.deleteAccess ? <Button onClick={this.onConfirmDelete} dataTest=\"delete-dashboard-button\">\n                            {i18n.t('Delete')}\n                        </Button> : null}\n                </ButtonStrip>\n            </div>;\n  };\n\n  render() {\n    if (this.state.redirectUrl) {\n      return <Redirect to={this.state.redirectUrl} />;\n    }\n\n    const {\n      updateAccess\n    } = this.props;\n    const controlBarHeight = getControlBarHeight(MIN_ROW_COUNT);\n    const discardBtnText = updateAccess ? i18n.t('Exit without saving') : i18n.t('Go to dashboards');\n    return <>\n                <ControlBar height={controlBarHeight} editMode={true}>\n                    <div style={buttonBarStyle}>\n                        {updateAccess ? this.renderActionButtons() : null}\n\n                        <div className={classes.rightControls}>\n                            <Button secondary onClick={this.onDiscard}>\n                                {discardBtnText}\n                            </Button>\n                        </div>\n                    </div>\n                </ControlBar>\n                <div className={classes.topMargin} />\n                {this.translationDialog()}\n                {this.confirmDeleteDialog()}\n            </>;\n  }\n\n}\nEditBar.propTypes = {\n  clearPrintDashboard: PropTypes.func,\n  clearPrintPreview: PropTypes.func,\n  dashboardId: PropTypes.string,\n  dashboardName: PropTypes.string,\n  deleteAccess: PropTypes.bool,\n  isPrintPreviewView: PropTypes.bool,\n  showPrintPreview: PropTypes.func,\n  updateAccess: PropTypes.bool,\n  onDelete: PropTypes.func,\n  onDiscardChanges: PropTypes.func,\n  onSave: PropTypes.func,\n  onTranslate: PropTypes.func\n};\nEditBar.contextTypes = {\n  dataEngine: PropTypes.object,\n  d2: PropTypes.object\n};\n\nconst mapStateToProps = state => {\n  const dashboard = sGetEditDashboardRoot(state);\n  let deleteAccess;\n  let updateAccess;\n\n  if (sGetIsNewDashboard(state)) {\n    deleteAccess = true;\n    updateAccess = true;\n  } else {\n    updateAccess = dashboard.access ? dashboard.access.update : false;\n    deleteAccess = dashboard.access ? dashboard.access.delete : false;\n  }\n\n  return {\n    dashboardId: dashboard.id,\n    dashboardName: dashboard.name,\n    deleteAccess,\n    isPrintPreviewView: sGetIsPrintPreviewView(state),\n    updateAccess\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  clearPrintDashboard: () => dispatch(acClearPrintDashboard()),\n  clearPrintPreview: () => dispatch(acClearPrintPreviewView()),\n  onSave: () => dispatch(tSaveDashboard()).then(id => id),\n  onDelete: id => dispatch(tDeleteDashboard(id)),\n  onDiscardChanges: () => dispatch(acClearEditDashboard()),\n  onTranslate: (id, value) => dispatch(acSetDashboardDisplayName(id, value)),\n  showPrintPreview: () => dispatch(acSetPrintPreviewView())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditBar);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { a4LandscapeWidthPx } from '../ItemGrid/gridUtil';\nimport classes from './styles/PrintInfo.module.css';\n\nconst PrintInfo = ({\n  isLayout\n}) => {\n  const maxWidth = a4LandscapeWidthPx < window.innerWidth ? a4LandscapeWidthPx : window.innerWidth;\n  const infoHeader = isLayout ? i18n.t('dashboard layout') : i18n.t('one item per page');\n  return <div className={classes.infoWrapper}>\n            <p className={classes.infoHeader}>\n                {`${i18n.t('Print Preview')}: ${infoHeader}`}\n            </p>\n            <div style={{\n      maxWidth\n    }}>\n                <p className={classes.info}>\n                    {`${i18n.t('For best print results')}:`}\n                </p>\n                <div className={classes.info}>\n                    <ul className={classes.infoList}>\n                        <li>{i18n.t('Use Chrome or Edge web browser')}</li>\n                        <li>\n                            {i18n.t('Wait for all dashboard items to load before printing')}\n                        </li>\n                        <li>\n                            {i18n.t('Use A4 landscape paper size and default margin settings in the browser print dialog')}\n                        </li>\n                    </ul>\n                </div>\n            </div>\n            <hr className={classes.divider} />\n        </div>;\n};\n\nPrintInfo.propTypes = {\n  isLayout: PropTypes.bool\n};\nexport default PrintInfo;","import React from 'react';\nimport { colors } from '@dhis2/ui';\n\nconst LessHorizontalIcon = () => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill={colors.grey600} viewBox=\"0 0 24 24\">\n        <path d=\"m13.2928932 6.29289322c.3905243-.39052429 1.0236893-.39052429 1.4142136 0 .3604839.36048396.3882135.92771502.0831886 1.32000622l-.0831886.09420734-4.2921068 4.29289322 4.2921068 4.2928932c.3604839.360484.3882135.927715.0831886 1.3200062l-.0831886.0942074c-.360484.3604839-.927715.3882135-1.3200062.0831886l-.0942074-.0831886-4.99999998-5c-.36048396-.360484-.3882135-.927715-.08318861-1.3200062l.08318861-.0942074z\" />\n    </svg>;\n\nexport default LessHorizontalIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Button } from '@dhis2/ui';\nimport { Link } from 'react-router-dom';\nimport LessHorizontalIcon from '../../icons/LessHorizontal';\nimport { a4LandscapeWidthPx } from '../ItemGrid/gridUtil';\nimport classes from './styles/PrintActionsBar.module.css'; // 42px set in the module css file\n\nexport const PRINT_ACTIONS_BAR_HEIGHT = 42;\n\nconst PrintActionsBar = ({\n  id\n}) => {\n  const width = a4LandscapeWidthPx < window.innerWidth ? a4LandscapeWidthPx : window.innerWidth;\n  return <>\n            <div className={classes.container}>\n                <div className={classes.inner} style={{\n        width\n      }}>\n                    <Link className={classes.link} to={`/${id}`}>\n                        <Button dataTest=\"exit-print-preview\">\n                            <LessHorizontalIcon />\n                            {i18n.t('Exit print preview')}\n                        </Button>\n                    </Link>\n                    <Button onClick={window.print}>{i18n.t('Print')}</Button>\n                </div>\n            </div>\n            <div className={classes.topMargin} />\n        </>;\n};\n\nPrintActionsBar.propTypes = {\n  id: PropTypes.string\n};\nexport default PrintActionsBar;","import sortBy from 'lodash/sortBy';\nimport { orArray } from './util';\nimport { itemTypeMap } from './itemTypes';\nexport const getTransformYPx = elStyle => {\n  if (!elStyle || !elStyle.transform) {\n    return null;\n  } // find valid transforms - those with y pixels\n  // the code is expecting the transform prop to\n  // look like:  translate(10px, 300px)\n\n\n  const transformY = elStyle.transform.split(' ')[1]?.match(/(\\d+)px/);\n\n  if (transformY) {\n    return parseInt(transformY[1]);\n  } else {\n    return null;\n  }\n};\nexport const getDomGridItemsSortedByYPos = elements => {\n  const types = Object.keys(itemTypeMap);\n  const elementsWithBoundingRect = orArray(elements).map(el => {\n    const type = Array.from(el.classList).find(className => types.indexOf(className) > -1);\n    const rect = el.getBoundingClientRect();\n    const y = getTransformYPx(el.style) || parseInt(rect.y);\n    return {\n      type,\n      classList: el.classList,\n      bottomY: y + parseInt(rect.height),\n      el\n    };\n  });\n  return sortBy(elementsWithBoundingRect, ['bottomY']);\n};","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport sortBy from 'lodash/sortBy';\nimport ReactGridLayout from 'react-grid-layout';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport cx from 'classnames';\nimport { Item } from '../Item/Item';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport { acUpdatePrintDashboardLayout } from '../../actions/printDashboard';\nimport { sGetSelectedIsLoading } from '../../reducers/selected';\nimport { sGetPrintDashboardRoot, sGetPrintDashboardItems } from '../../reducers/printDashboard';\nimport { sGetIsEditing } from '../../reducers/editDashboard';\nimport { GRID_ROW_HEIGHT, GRID_COMPACT_TYPE, MARGIN, getGridColumns, hasShape, a4LandscapeWidthPx } from './gridUtil';\nimport { getDomGridItemsSortedByYPos, getTransformYPx } from '../../modules/printUtils';\nimport { PRINT_LAYOUT } from '../Dashboard/dashboardModes';\nimport { PAGEBREAK } from '../../modules/itemTypes';\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\nimport './styles/ItemGrid.css';\nexport class PrintLayoutItemGrid extends Component {\n  onLayoutChange = newLayout => {\n    this.props.updateDashboardLayout(newLayout);\n  };\n  isFirstPageBreak = item => {\n    if (item.type !== PAGEBREAK) {\n      return false;\n    }\n\n    const pageBreaks = this.props.dashboardItems.filter(i => i.type === PAGEBREAK);\n    const sortedPageBreaks = sortBy(pageBreaks, ['y']);\n    return item.y === sortedPageBreaks[0].y;\n  };\n  getItemComponent = item => {\n    // the first-page-break class is used in Edit print preview\n    const itemClassNames = cx('print', 'layout', `${item.type}`, {\n      'first-page-break': this.props.isEditing && this.isFirstPageBreak(item),\n      shortened: !!item.shortened\n    });\n    return <div key={item.i} className={itemClassNames}>\n                <Item item={item} dashboardMode={PRINT_LAYOUT} />\n            </div>;\n  };\n  getItemComponents = items => items.map(item => this.getItemComponent(item));\n\n  hideExtraPageBreaks() {\n    const sortedElements = getDomGridItemsSortedByYPos(Array.from(document.querySelectorAll('.react-grid-item')));\n    let pageBreakBottom = 0;\n    let lastItemBottom = 0;\n    let foundNonPageBreak = false;\n\n    for (let i = sortedElements.length - 1; i >= 0; --i) {\n      const item = sortedElements[i];\n\n      if (item.type === PAGEBREAK) {\n        if (!foundNonPageBreak) {\n          item.el.classList.add('removed');\n        } else {\n          pageBreakBottom = item.bottomY;\n          break;\n        }\n      } else {\n        foundNonPageBreak = true;\n        const thisItemBottom = item.bottomY;\n\n        if (thisItemBottom > lastItemBottom) {\n          lastItemBottom = thisItemBottom;\n        }\n      }\n    }\n\n    const pageHeight = 720;\n    const gridElement = document.querySelector('.react-grid-layout'); // the last page break is before the last item(s) so\n    // maxHeight is one page beyond the last page break\n\n    const maxHeight = pageBreakBottom + pageHeight;\n\n    if (gridElement) {\n      gridElement.style.height = `${maxHeight}px`;\n    }\n\n    if (this.props.isEditing) {\n      //scroll to below the title page - which is middle of the first pagebreak\n      const firstBreak = document.querySelector('.first-page-break');\n\n      if (firstBreak && firstBreak.style && firstBreak.style.transform) {\n        const yPos = getTransformYPx(firstBreak.style);\n        const scrollArea = document.querySelector('.scroll-area');\n        scrollArea && scrollArea.scroll(0, yPos + 50);\n      }\n    }\n  }\n\n  componentDidMount() {\n    this.hideExtraPageBreaks();\n  }\n\n  componentDidUpdate() {\n    this.hideExtraPageBreaks();\n  }\n\n  render() {\n    const {\n      isLoading,\n      dashboardItems\n    } = this.props;\n\n    if (!isLoading && !dashboardItems.length) {\n      return <NoContentMessage text={i18n.t('There are no items on this dashboard')} />;\n    }\n\n    const width = a4LandscapeWidthPx < window.innerWidth ? a4LandscapeWidthPx : window.innerWidth;\n    return <div className=\"grid-wrapper\">\n                {isLoading ? <Layer translucent>\n                        <CenteredContent>\n                            <CircularLoader />\n                        </CenteredContent>\n                    </Layer> : null}\n                <ReactGridLayout onLayoutChange={this.onLayoutChange} className=\"layout\" layout={dashboardItems} margin={MARGIN} cols={getGridColumns()} rowHeight={GRID_ROW_HEIGHT} width={width} compactType={GRID_COMPACT_TYPE} isDraggable={false} isResizable={false} draggableCancel=\"input,textarea\">\n                    {this.getItemComponents(dashboardItems)}\n                </ReactGridLayout>\n            </div>;\n  }\n\n}\nPrintLayoutItemGrid.propTypes = {\n  dashboardItems: PropTypes.array,\n  isEditing: PropTypes.bool,\n  isLoading: PropTypes.bool,\n  updateDashboardLayout: PropTypes.func\n};\nPrintLayoutItemGrid.defaultProps = {\n  dashboardItems: []\n};\n\nconst mapStateToProps = state => {\n  const selectedDashboard = sGetPrintDashboardRoot(state);\n  return {\n    isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n    dashboardItems: sGetPrintDashboardItems(state).filter(hasShape),\n    isEditing: sGetIsEditing(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  updateDashboardLayout: acUpdatePrintDashboardLayout\n})(PrintLayoutItemGrid);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { spacers } from '@dhis2/ui';\nimport cx from 'classnames';\nimport PrintInfo from './PrintInfo';\nimport PrintActionsBar from './PrintActionsBar';\nimport PrintLayoutItemGrid from '../ItemGrid/PrintLayoutItemGrid';\nimport { acSetPrintDashboard, acAddPrintDashboardItem, acUpdatePrintDashboardItem } from '../../actions/printDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { sGetWindowHeight } from '../../reducers/windowHeight';\nimport { sGetEditDashboardRoot, sGetEditDashboardItems } from '../../reducers/editDashboard';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport { PAGEBREAK, PRINT_TITLE_PAGE } from '../../modules/itemTypes';\nimport { a4LandscapeWidthPx, MAX_ITEM_GRID_HEIGHT } from '../ItemGrid/gridUtil';\nimport { getControlBarHeight, HEADERBAR_HEIGHT } from '../ControlBar/controlBarDimensions';\nimport { PRINT_ACTIONS_BAR_HEIGHT } from './PrintActionsBar';\nimport { DRAG_HANDLE_HEIGHT } from '../ControlBar/ControlBar';\nimport classes from './styles/PrintLayoutDashboard.module.css';\nimport './styles/print.css';\nimport './styles/print-layout.css';\nconst EDIT_BAR_HEIGHT = getControlBarHeight(1) + DRAG_HANDLE_HEIGHT;\n\nconst isLeapPage = n => {\n  // pages 5,9,13,17,21,25,29... are leap pages\n  let x = 0;\n  const startPage = 1;\n\n  const getMultiple = factor => startPage + 4 * factor;\n\n  let multiple = getMultiple(0);\n  let isLeapPage = false;\n\n  while (multiple < n) {\n    multiple = getMultiple(x);\n    ++x;\n\n    if (multiple === n) {\n      isLeapPage = true;\n      break;\n    }\n  }\n\n  return isLeapPage;\n};\n\nconst addPageBreaks = ({\n  items,\n  addDashboardItem\n}) => {\n  // add enough page breaks so that each item could\n  // be put on its own page. Due to the react-grid-layout\n  // unit system, we have to estimate roughly the size of each\n  // page. At regular intervals add a unit, like a leap year\n  let yPos = 0;\n  const yPosList = [];\n\n  for (let pageNum = 1; pageNum <= items.length; ++pageNum) {\n    if (pageNum === 1) {\n      yPos += 35;\n    } else if (isLeapPage(pageNum)) {\n      yPos += 40;\n    } else {\n      yPos += 39;\n    }\n\n    yPosList.push(yPos);\n  }\n\n  for (let i = 0; i < items.length; ++i) {\n    addDashboardItem({\n      type: PAGEBREAK,\n      yPos: yPosList[i]\n    });\n  }\n};\n\nexport class PrintLayoutDashboard extends Component {\n  state = {\n    initialized: false\n  };\n  initPrintLayoutDashboard = () => {\n    if (this.props.dashboard) {\n      this.setState({\n        initialized: true\n      });\n      this.props.setPrintDashboard(this.props.dashboard, this.props.items); // If any items are taller than one page, reduce it to one\n      // page (react-grid-layout units)\n\n      this.props.items.forEach(item => {\n        if (item.h > MAX_ITEM_GRID_HEIGHT) {\n          item.shortened = true;\n          this.props.updateDashboardItem(Object.assign({}, item, {\n            h: MAX_ITEM_GRID_HEIGHT\n          }));\n        }\n      });\n      addPageBreaks(this.props);\n      this.props.addDashboardItem({\n        type: PRINT_TITLE_PAGE,\n        isOneItemPerPage: false\n      });\n    }\n  };\n\n  componentDidMount() {\n    this.initPrintLayoutDashboard();\n  }\n\n  componentDidUpdate() {\n    if (!this.state.initialized) {\n      this.initPrintLayoutDashboard();\n    }\n  }\n\n  getWrapperStyle = () => {\n    return this.props.fromEdit ? {\n      paddingTop: spacers.dp24,\n      height: this.props.windowHeight - EDIT_BAR_HEIGHT - HEADERBAR_HEIGHT\n    } : {\n      height: this.props.windowHeight - PRINT_ACTIONS_BAR_HEIGHT\n    };\n  };\n\n  render() {\n    return <>\n                {!this.props.fromEdit && <PrintActionsBar id={this.props.dashboard.id} />}\n                <div className={cx(classes.wrapper, 'scroll-area')} style={this.getWrapperStyle()}>\n                    {!this.props.fromEdit && <PrintInfo isLayout={true} />}\n                    <div className={classes.pageOuter} style={{\n          width: a4LandscapeWidthPx\n        }} data-test=\"print-layout-page\">\n                        <PrintLayoutItemGrid />\n                    </div>\n                </div>\n            </>;\n  }\n\n}\nPrintLayoutDashboard.propTypes = {\n  addDashboardItem: PropTypes.func,\n  dashboard: PropTypes.object,\n  fromEdit: PropTypes.bool,\n  items: PropTypes.array,\n  setPrintDashboard: PropTypes.func,\n  updateDashboardItem: PropTypes.func,\n  windowHeight: PropTypes.number\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const id = sGetSelectedId(state);\n\n  if (ownProps.fromEdit) {\n    const dashboard = sGetEditDashboardRoot(state);\n    return {\n      dashboard,\n      id,\n      items: sGetEditDashboardItems(state),\n      windowHeight: sGetWindowHeight(state)\n    };\n  }\n\n  const dashboard = id ? sGetDashboardById(state, id) : null;\n  return {\n    dashboard,\n    id,\n    items: sGetDashboardItems(state),\n    windowHeight: sGetWindowHeight(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setPrintDashboard: acSetPrintDashboard,\n  addDashboardItem: acAddPrintDashboardItem,\n  updateDashboardItem: acUpdatePrintDashboardItem\n})(PrintLayoutDashboard);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport TitleBar from '../TitleBar/TitleBar';\nimport EditItemGrid from '../ItemGrid/EditItemGrid';\nimport EditBar from '../ControlBar/EditBar';\nimport LayoutPrintPreview from './PrintLayoutDashboard';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport { acSetEditDashboard } from '../../actions/editDashboard';\nimport { sGetWindowHeight } from '../../reducers/windowHeight';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport { sGetIsPrintPreviewView } from '../../reducers/editDashboard';\nimport { getControlBarHeight, HEADERBAR_HEIGHT } from '../ControlBar/controlBarDimensions';\nexport class EditDashboard extends Component {\n  state = {\n    initialized: false\n  };\n  initEditDashboard = () => {\n    if (this.props.dashboard) {\n      this.setState({\n        initialized: true\n      });\n      this.props.setEditDashboard(this.props.dashboard, this.props.items);\n    }\n  };\n\n  componentDidMount() {\n    this.initEditDashboard();\n  }\n\n  componentDidUpdate() {\n    if (!this.state.initialized) {\n      this.initEditDashboard();\n    }\n  }\n\n  renderGrid = () => {\n    if (this.props.isPrintPreviewView) {\n      return <LayoutPrintPreview fromEdit={true} />;\n    }\n\n    const height = this.props.windowHeight - HEADERBAR_HEIGHT - getControlBarHeight(1);\n    return <div className=\"dashboard-wrapper\" style={{\n      height\n    }}>\n                <TitleBar edit={true} />\n                <EditItemGrid />\n            </div>;\n  };\n\n  render() {\n    return <>\n                <EditBar />\n                {this.props.updateAccess ? this.renderGrid() : <NoContentMessage text={i18n.t('No access')} />}\n            </>;\n  }\n\n}\nEditDashboard.propTypes = {\n  dashboard: PropTypes.object,\n  isPrintPreviewView: PropTypes.bool,\n  items: PropTypes.array,\n  setEditDashboard: PropTypes.func,\n  updateAccess: PropTypes.bool,\n  windowHeight: PropTypes.number\n};\n\nconst mapStateToProps = state => {\n  const id = sGetSelectedId(state);\n  const dashboard = id ? sGetDashboardById(state, id) : null;\n  const updateAccess = dashboard && dashboard.access ? dashboard.access.update : false;\n  return {\n    dashboard,\n    updateAccess,\n    items: sGetDashboardItems(state),\n    isPrintPreviewView: sGetIsPrintPreviewView(state),\n    windowHeight: sGetWindowHeight(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setEditDashboard: acSetEditDashboard\n})(EditDashboard);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport EditBar from '../ControlBar/EditBar';\nimport TitleBar from '../TitleBar/TitleBar';\nimport EditItemGrid from '../ItemGrid/EditItemGrid';\nimport LayoutPrintPreview from './PrintLayoutDashboard';\nimport { acSetEditNewDashboard } from '../../actions/editDashboard';\nimport { sGetIsPrintPreviewView } from '../../reducers/editDashboard';\nimport { sGetWindowHeight } from '../../reducers/windowHeight';\nimport { getControlBarHeight, HEADERBAR_HEIGHT } from '../ControlBar/controlBarDimensions';\n\nclass NewDashboard extends Component {\n  componentDidMount() {\n    this.props.setNewDashboard();\n  }\n\n  render() {\n    const height = this.props.windowHeight - HEADERBAR_HEIGHT - getControlBarHeight(1);\n    return <>\n                <EditBar />\n                {this.props.isPrintPreviewView ? <LayoutPrintPreview fromEdit={true} /> : <div className=\"dashboard-wrapper\" style={{\n        height\n      }}>\n                        <TitleBar edit={true} />\n                        <EditItemGrid />\n                    </div>}\n            </>;\n  }\n\n}\n\nNewDashboard.propTypes = {\n  isPrintPreviewView: PropTypes.bool,\n  setNewDashboard: PropTypes.func,\n  windowHeight: PropTypes.number\n};\n\nconst mapStateToProps = state => ({\n  isPrintPreviewView: sGetIsPrintPreviewView(state),\n  windowHeight: sGetWindowHeight(state)\n});\n\nexport default connect(mapStateToProps, {\n  setNewDashboard: acSetEditNewDashboard\n})(NewDashboard);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ReactGridLayout from 'react-grid-layout';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport cx from 'classnames';\nimport { Item } from '../Item/Item';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport { PRINT } from '../Dashboard/dashboardModes';\nimport { sGetSelectedIsLoading } from '../../reducers/selected';\nimport { sGetPrintDashboardRoot, sGetPrintDashboardItems } from '../../reducers/printDashboard';\nimport { GRID_ROW_HEIGHT, GRID_COMPACT_TYPE, MARGIN, getGridColumns, hasShape, a4LandscapeWidthPx } from './gridUtil';\nimport { orArray } from '../../modules/util';\nimport 'react-grid-layout/css/styles.css';\nimport './styles/ItemGrid.css';\nexport class PrintItemGrid extends Component {\n  getItemComponent = item => <div key={item.i} className={cx(item.type, 'print', 'oipp')}>\n            <Item item={item} dashboardMode={PRINT} />\n        </div>;\n  getItemComponents = items => items.map(item => this.getItemComponent(item));\n\n  render() {\n    const {\n      isLoading,\n      dashboardItems\n    } = this.props;\n\n    if (!isLoading && !dashboardItems.length) {\n      return <NoContentMessage text={i18n.t('There are no items on this dashboard')} />;\n    }\n\n    const width = a4LandscapeWidthPx < window.innerWidth ? a4LandscapeWidthPx : window.innerWidth;\n    return <>\n                {isLoading ? <Layer translucent>\n                        <CenteredContent>\n                            <CircularLoader />\n                        </CenteredContent>\n                    </Layer> : null}\n                <ReactGridLayout className=\"layout print\" layout={dashboardItems} margin={MARGIN} cols={getGridColumns()} rowHeight={GRID_ROW_HEIGHT} width={width} compactType={GRID_COMPACT_TYPE} isDraggable={false} isResizable={false} draggableCancel=\"input,textarea\">\n                    {this.getItemComponents(dashboardItems)}\n                </ReactGridLayout>\n            </>;\n  }\n\n}\nPrintItemGrid.propTypes = {\n  dashboardItems: PropTypes.array,\n  isLoading: PropTypes.bool\n};\nPrintItemGrid.defaultProps = {\n  dashboardItems: []\n};\n\nconst mapStateToProps = state => {\n  const selectedDashboard = sGetPrintDashboardRoot(state);\n  return {\n    isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n    dashboardItems: orArray(sGetPrintDashboardItems(state)).filter(hasShape)\n  };\n};\n\nexport default connect(mapStateToProps)(PrintItemGrid);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport sortBy from 'lodash/sortBy';\nimport PrintInfo from './PrintInfo';\nimport PrintActionsBar from './PrintActionsBar';\nimport PrintItemGrid from '../ItemGrid/PrintItemGrid';\nimport { acSetPrintDashboard, acAddPrintDashboardItem, acRemovePrintDashboardItem, acUpdatePrintDashboardItem } from '../../actions/printDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { sGetWindowHeight } from '../../reducers/windowHeight';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport { PAGEBREAK, PRINT_TITLE_PAGE, SPACER } from '../../modules/itemTypes';\nimport { a4LandscapeWidthPx, MAX_ITEM_GRID_HEIGHT_OIPP, MAX_ITEM_GRID_WIDTH_OIPP } from '../ItemGrid/gridUtil';\nimport { PRINT_ACTIONS_BAR_HEIGHT } from './PrintActionsBar';\nimport classes from './styles/PrintDashboard.module.css';\nimport './styles/print.css';\nimport './styles/print-oipp.css';\nexport class PrintDashboard extends Component {\n  state = {\n    initialized: false\n  };\n  initPrintDashboard = () => {\n    if (this.props.dashboard) {\n      this.setState({\n        initialized: true\n      }); //sort the items by Y pos so they print in order of top to bottom\n\n      const sortedItems = sortBy(this.props.items, ['y', 'x']);\n      this.props.setPrintDashboard(this.props.dashboard, sortedItems); // remove spacers - don't want empty pages\n\n      let spacerCount = 0;\n      this.props.items.forEach(item => {\n        if (item.type === SPACER) {\n          spacerCount += 1;\n          this.props.removeDashboardItem(item.id);\n        }\n      }); // Resize the items to the full page size\n\n      this.props.items.forEach(item => {\n        this.props.updateDashboardItem(Object.assign({}, item, {\n          w: MAX_ITEM_GRID_WIDTH_OIPP,\n          h: MAX_ITEM_GRID_HEIGHT_OIPP\n        }));\n      }); // insert page breaks into the document flow to create the \"pages\"\n      // when previewing the print\n\n      for (let i = 0; i < (this.props.items.length - spacerCount) * 2; i += 2) {\n        this.props.addDashboardItem({\n          type: PAGEBREAK,\n          position: i,\n          isStatic: false\n        });\n      }\n\n      this.props.addDashboardItem({\n        type: PRINT_TITLE_PAGE,\n        isOneItemPerPage: true\n      });\n    }\n  };\n\n  componentDidMount() {\n    this.initPrintDashboard();\n  }\n\n  componentDidUpdate() {\n    if (!this.state.initialized) {\n      this.initPrintDashboard();\n    }\n  }\n\n  render() {\n    const height = this.props.windowHeight - PRINT_ACTIONS_BAR_HEIGHT;\n    return <>\n                <PrintActionsBar id={this.props.dashboard.id} />\n                <div className={classes.wrapper} style={{\n        height\n      }}>\n                    <PrintInfo isLayout={false} />\n                    <div className={classes.pageOuter} style={{\n          width: a4LandscapeWidthPx\n        }} data-test=\"print-oipp-page\">\n                        <PrintItemGrid />\n                    </div>\n                </div>\n            </>;\n  }\n\n}\nPrintDashboard.propTypes = {\n  addDashboardItem: PropTypes.func,\n  dashboard: PropTypes.object,\n  items: PropTypes.array,\n  removeDashboardItem: PropTypes.func,\n  setPrintDashboard: PropTypes.func,\n  updateDashboardItem: PropTypes.func,\n  windowHeight: PropTypes.number\n};\n\nconst mapStateToProps = state => {\n  const id = sGetSelectedId(state);\n  const dashboard = id ? sGetDashboardById(state, id) : null;\n  return {\n    dashboard,\n    id,\n    items: sGetDashboardItems(state),\n    windowHeight: sGetWindowHeight(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setPrintDashboard: acSetPrintDashboard,\n  addDashboardItem: acAddPrintDashboardItem,\n  removeDashboardItem: acRemovePrintDashboardItem,\n  updateDashboardItem: acUpdatePrintDashboardItem\n})(PrintDashboard);","import { SET_WINDOW_HEIGHT } from '../reducers/windowHeight';\nexport const acSetWindowHeight = value => ({\n  type: SET_WINDOW_HEIGHT,\n  value\n});","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport isEmpty from 'lodash/isEmpty';\nimport i18n from '@dhis2/d2-i18n';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport debounce from 'lodash/debounce';\nimport DashboardsBar from '../ControlBar/DashboardsBar';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport ViewDashboard from './ViewDashboard';\nimport EditDashboard from './EditDashboard';\nimport NewDashboard from './NewDashboard';\nimport PrintDashboard from './PrintDashboard';\nimport PrintLayoutDashboard from './PrintLayoutDashboard';\nimport { tSelectDashboard } from '../../actions/dashboards';\nimport { acSetWindowHeight } from '../../actions/windowHeight';\nimport { sDashboardsIsFetching, sGetAllDashboards } from '../../reducers/dashboards';\nimport { sGetSelectedId, NON_EXISTING_DASHBOARD_ID } from '../../reducers/selected';\nimport { EDIT, NEW, VIEW, PRINT, PRINT_LAYOUT, isPrintMode } from './dashboardModes';\n\nconst setHeaderbarVisibility = mode => {\n  const header = document.getElementsByTagName('header')[0];\n\n  if (isPrintMode(mode)) {\n    header.classList.add('hidden');\n  } else {\n    header.classList.remove('hidden');\n  }\n};\n\nconst dashboardMap = {\n  [VIEW]: <ViewDashboard />,\n  [EDIT]: <EditDashboard />,\n  [NEW]: <NewDashboard />,\n  [PRINT]: <PrintDashboard />,\n  [PRINT_LAYOUT]: <PrintLayoutDashboard />\n};\nexport const Dashboard = ({\n  id,\n  mode,\n  dashboardsLoaded,\n  dashboardsIsEmpty,\n  routeId,\n  selectDashboard,\n  setWindowHeight\n}) => {\n  useEffect(() => {\n    setHeaderbarVisibility(mode);\n  }, [mode]);\n  useEffect(() => {\n    if (dashboardsLoaded && !dashboardsIsEmpty) {\n      selectDashboard(routeId);\n    }\n  }, [dashboardsLoaded, dashboardsIsEmpty, routeId]);\n  useEffect(() => {\n    const onResize = debounce(() => setWindowHeight(window.innerHeight), 300);\n    window.addEventListener('resize', onResize);\n    return () => {\n      window.removeEventListener('resize', onResize);\n    };\n  }, []);\n\n  if (!dashboardsLoaded) {\n    return <Layer translucent>\n                <CenteredContent>\n                    <CircularLoader />\n                </CenteredContent>\n            </Layer>;\n  }\n\n  if (mode === NEW) {\n    return dashboardMap[mode];\n  }\n\n  if (dashboardsIsEmpty) {\n    return <>\n                <DashboardsBar />\n                <DashboardVerticalOffset />\n                <NoContentMessage text={i18n.t('No dashboards found. Use the + button to create a new dashboard.')} />\n            </>;\n  }\n\n  if (id === NON_EXISTING_DASHBOARD_ID) {\n    return <>\n                <DashboardsBar />\n                <DashboardVerticalOffset />\n                <NoContentMessage text={i18n.t('Requested dashboard not found')} />\n            </>;\n  }\n\n  if (id === null) {\n    return <Layer translucent>\n                <CenteredContent>\n                    <CircularLoader />\n                </CenteredContent>\n            </Layer>;\n  }\n\n  return dashboardMap[mode];\n};\nDashboard.propTypes = {\n  dashboardsIsEmpty: PropTypes.bool,\n  dashboardsLoaded: PropTypes.bool,\n  id: PropTypes.string,\n  match: PropTypes.object,\n  // provided by the react-router-dom\n  mode: PropTypes.string,\n  routeId: PropTypes.string,\n  selectDashboard: PropTypes.func,\n  setWindowHeight: PropTypes.func\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const dashboards = sGetAllDashboards(state);\n  return {\n    dashboardsIsEmpty: isEmpty(dashboards),\n    dashboardsLoaded: !sDashboardsIsFetching(state),\n    id: sGetSelectedId(state),\n    routeId: ownProps.match?.params?.dashboardId || null\n  };\n};\n\nexport default connect(mapStateToProps, {\n  selectDashboard: tSelectDashboard,\n  setWindowHeight: acSetWindowHeight\n})(Dashboard);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { AlertBar, AlertStack } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport { sGetAlertMessage } from '../../reducers/alert';\nimport { acClearAlertMessage } from '../../actions/alert';\nexport const Alert = ({\n  message,\n  onClose\n}) => message ? <AlertStack>\n            <AlertBar onHidden={onClose} permanent>\n                {message}\n            </AlertBar>\n        </AlertStack> : null;\nAlert.propTypes = {\n  message: PropTypes.string,\n  onClose: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  message: sGetAlertMessage(state)\n});\n\nexport default connect(mapStateToProps, {\n  onClose: acClearAlertMessage\n})(Alert);","import { RECEIVED_USER } from '../reducers/user';\nexport const acReceivedUser = value => ({\n  type: RECEIVED_USER,\n  value\n});","import { SET_DIMENSIONS } from '../reducers/dimensions';\nimport { apiFetchDimensions } from '@dhis2/analytics';\nimport { sGetSettingsDisplayNameProperty } from '../reducers/settings';\nexport const acSetDimensions = dimensions => ({\n  type: SET_DIMENSIONS,\n  value: dimensions\n});\nexport const tSetDimensions = () => async (dispatch, getState, dataEngine) => {\n  const onSuccess = dimensions => {\n    dispatch(acSetDimensions(dimensions));\n  };\n\n  const onError = error => {\n    console.log('Error (apiFetchDimensions): ', error);\n    return error;\n  };\n\n  try {\n    const displayNameProp = sGetSettingsDisplayNameProperty(getState());\n    const dimensions = await apiFetchDimensions(dataEngine, displayNameProp); // filter out CATEGORY that are not of type ATTRIBUTE\n\n    const filteredDimensions = dimensions.filter(dim => dim.dimensionType !== 'CATEGORY' || dim.dimensionType === 'CATEGORY' && dim.dataDimensionType === 'ATTRIBUTE');\n    return onSuccess(filteredDimensions);\n  } catch (err) {\n    return onError(err);\n  }\n};","import { getInstance } from 'd2';\nimport { onError } from './index';\nconst SYSTEM_SETTINGS = ['keyGatherAnalyticalObjectStatisticsInDashboardViews'];\nexport const apiFetchSystemSettings = () => {\n  const endPoint = '/systemSettings';\n  const url = `${endPoint}?${SYSTEM_SETTINGS.map(s => `key=${s}`).join('&')}`;\n  return getInstance().then(d2 => d2.Api.getApi().get(url)).catch(onError);\n};","import { ADD_SETTINGS } from '../reducers/settings';\nimport { apiFetchSystemSettings } from '../api/settings';\nexport const acAddSettings = value => ({\n  type: ADD_SETTINGS,\n  value\n});\nexport const tAddSettings = (...extraSettings) => async dispatch => {\n  const onSuccess = fetchedSettings => {\n    dispatch(acAddSettings(Object.assign({}, fetchedSettings, ...extraSettings)));\n  };\n\n  const onError = error => {\n    console.log('Error (apiFetchSystemSettings): ', error);\n    return error;\n  };\n\n  try {\n    const systemSettings = await apiFetchSystemSettings();\n    return onSuccess({ ...systemSettings\n    });\n  } catch (err) {\n    return onError(err);\n  }\n};","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { CssVariables } from '@dhis2/ui';\nimport Dashboard from './Dashboard/Dashboard';\nimport AlertBar from './AlertBar/AlertBar';\nimport { acReceivedUser } from '../actions/user';\nimport { tFetchDashboards } from '../actions/dashboards';\nimport { tSetControlBarRows } from '../actions/controlBar';\nimport { tSetShowDescription } from '../actions/selected';\nimport { tSetDimensions } from '../actions/dimensions';\nimport { tAddSettings } from '../actions/settings';\nimport { EDIT, VIEW, NEW, PRINT, PRINT_LAYOUT } from './Dashboard/dashboardModes';\nimport './App.css';\nexport class App extends Component {\n  componentDidMount() {\n    this.props.setCurrentUser(this.props.d2.currentUser);\n    this.props.fetchDashboards();\n    this.props.setControlBarRows();\n    this.props.setShowDescription();\n    this.props.setDimensions();\n    this.props.addSettings();\n  }\n\n  getChildContext() {\n    return {\n      baseUrl: this.props.baseUrl,\n      i18n,\n      d2: this.props.d2,\n      dataEngine: this.props.dataEngine\n    };\n  }\n\n  render() {\n    return <>\n                <CssVariables colors spacers />\n                <Router>\n                    <Switch>\n                        <Route exact path=\"/\" render={props => <Dashboard {...props} mode={VIEW} />} />\n                        <Route exact path=\"/new\" render={props => <Dashboard {...props} mode={NEW} />} />\n                        <Route exact path=\"/:dashboardId\" render={props => <Dashboard {...props} mode={VIEW} />} />\n                        <Route exact path=\"/:dashboardId/edit\" render={props => <Dashboard {...props} mode={EDIT} />} />\n                        <Route exact path=\"/:dashboardId/printoipp\" render={props => <Dashboard {...props} mode={PRINT} />} />\n                        <Route exact path=\"/:dashboardId/printlayout\" render={props => <Dashboard {...props} mode={PRINT_LAYOUT} />} />\n                    </Switch>\n                </Router>\n                <AlertBar />\n            </>;\n  }\n\n}\nApp.propTypes = {\n  addSettings: PropTypes.func.isRequired,\n  fetchDashboards: PropTypes.func.isRequired,\n  setControlBarRows: PropTypes.func.isRequired,\n  setCurrentUser: PropTypes.func.isRequired,\n  setDimensions: PropTypes.func.isRequired,\n  setShowDescription: PropTypes.func.isRequired,\n  baseUrl: PropTypes.string,\n  d2: PropTypes.object,\n  dataEngine: PropTypes.object\n};\nApp.childContextTypes = {\n  baseUrl: PropTypes.string,\n  i18n: PropTypes.object,\n  d2: PropTypes.object,\n  dataEngine: PropTypes.object\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchDashboards: () => dispatch(tFetchDashboards()),\n    setControlBarRows: () => dispatch(tSetControlBarRows()),\n    setCurrentUser: currentUser => dispatch(acReceivedUser(currentUser)),\n    setDimensions: () => dispatch(tSetDimensions()),\n    setShowDescription: () => dispatch(tSetShowDescription()),\n    addSettings: () => dispatch(tAddSettings())\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(App);","/** @module reducers/selected */\nimport { validateReducer } from '../modules/util';\nexport const SET_STYLE = 'SET_STYLE';\nexport const DEFAULT_STATE_STYLE = 'LIST';\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\n\nconst style = (state = DEFAULT_STATE_STYLE, action) => {\n  switch (action.type) {\n    case SET_STYLE:\n      return validateReducer(action.value, DEFAULT_STATE_STYLE);\n\n    default:\n      return state;\n  }\n};\n\nexport default style;\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\n\nexport const sGetStyleRoot = state => state.style;","import { combineReducers } from 'redux';\nimport dashboards from './dashboards';\nimport selected from './selected';\nimport dashboardsFilter from './dashboardsFilter';\nimport controlBar from './controlBar';\nimport visualizations from './visualizations';\nimport editDashboard from './editDashboard';\nimport printDashboard from './printDashboard';\nimport messages from './messages';\nimport user from './user';\nimport alert from './alert';\nimport itemFilters from './itemFilters';\nimport style from './style';\nimport dimensions from './dimensions';\nimport settings from './settings';\nimport activeModalDimension from './activeModalDimension';\nimport windowHeight from './windowHeight';\nexport default combineReducers({\n  dashboards,\n  selected,\n  dashboardsFilter,\n  controlBar,\n  visualizations,\n  messages,\n  user,\n  editDashboard,\n  printDashboard,\n  itemFilters,\n  style,\n  alert,\n  dimensions,\n  settings,\n  activeModalDimension,\n  windowHeight\n});","import { createStore, applyMiddleware, compose } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport reducer from './reducers';\n\nconst configureStore = dataEngine => {\n  const middleware = [thunk.withExtraArgument(dataEngine)]; // Enable Redux devtools if extension is installed instead of redux-logger\n\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n  if (!window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ && process.env.NODE_ENV !== 'production') {\n    middleware.push(createLogger());\n  }\n\n  return createStore(reducer, composeEnhancers(applyMiddleware(...middleware)));\n};\n\nexport default configureStore;","//------------------------------------------------------------------------------\n// <auto-generated>\n// This code was generated by d2-i18n-generate.\n//\n// Changes to this file may cause incorrect behavior and will be lost if\n// the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\nimport i18n from '@dhis2/d2-i18n';\nimport arTranslations from './ar/translations.json';\nimport ar_IQTranslations from './ar_IQ/translations.json';\nimport ckbTranslations from './ckb/translations.json';\nimport csTranslations from './cs/translations.json';\nimport daTranslations from './da/translations.json';\nimport enTranslations from './en/translations.json';\nimport esTranslations from './es/translations.json';\nimport frTranslations from './fr/translations.json';\nimport idTranslations from './id/translations.json';\nimport kmTranslations from './km/translations.json';\nimport loTranslations from './lo/translations.json';\nimport myTranslations from './my/translations.json';\nimport nbTranslations from './nb/translations.json';\nimport prsTranslations from './prs/translations.json';\nimport psTranslations from './ps/translations.json';\nimport ptTranslations from './pt/translations.json';\nimport pt_BRTranslations from './pt_BR/translations.json';\nimport ruTranslations from './ru/translations.json';\nimport svTranslations from './sv/translations.json';\nimport tetTranslations from './tet/translations.json';\nimport tgTranslations from './tg/translations.json';\nimport ukTranslations from './uk/translations.json';\nimport urTranslations from './ur/translations.json';\nimport uzTranslations from './uz/translations.json';\nimport uz_CyrlTranslations from './uz_Cyrl/translations.json';\nimport viTranslations from './vi/translations.json';\nimport zhTranslations from './zh/translations.json';\nimport zh_CNTranslations from './zh_CN/translations.json';\nconst namespace = 'default';\ni18n.addResources('ar', namespace, arTranslations);\ni18n.addResources('ar_IQ', namespace, ar_IQTranslations);\ni18n.addResources('ckb', namespace, ckbTranslations);\ni18n.addResources('cs', namespace, csTranslations);\ni18n.addResources('da', namespace, daTranslations);\ni18n.addResources('en', namespace, enTranslations);\ni18n.addResources('es', namespace, esTranslations);\ni18n.addResources('fr', namespace, frTranslations);\ni18n.addResources('id', namespace, idTranslations);\ni18n.addResources('km', namespace, kmTranslations);\ni18n.addResources('lo', namespace, loTranslations);\ni18n.addResources('my', namespace, myTranslations);\ni18n.addResources('nb', namespace, nbTranslations);\ni18n.addResources('prs', namespace, prsTranslations);\ni18n.addResources('ps', namespace, psTranslations);\ni18n.addResources('pt', namespace, ptTranslations);\ni18n.addResources('pt_BR', namespace, pt_BRTranslations);\ni18n.addResources('ru', namespace, ruTranslations);\ni18n.addResources('sv', namespace, svTranslations);\ni18n.addResources('tet', namespace, tetTranslations);\ni18n.addResources('tg', namespace, tgTranslations);\ni18n.addResources('uk', namespace, ukTranslations);\ni18n.addResources('ur', namespace, urTranslations);\ni18n.addResources('uz', namespace, uzTranslations);\ni18n.addResources('uz_Cyrl', namespace, uz_CyrlTranslations);\ni18n.addResources('vi', namespace, viTranslations);\ni18n.addResources('zh', namespace, zhTranslations);\ni18n.addResources('zh_CN', namespace, zh_CNTranslations);\nexport default i18n;","import React from 'react';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport dhis2theme from '@dhis2/d2-ui-core/theme/mui3.theme';\nimport { Provider as ReduxProvider } from 'react-redux';\nimport { D2Shim } from '@dhis2/app-runtime-adapter-d2';\nimport { useDataEngine } from '@dhis2/app-runtime';\nimport WindowDimensionsProvider from './components/WindowDimensionsProvider';\nimport App from './components/App';\nimport configureStore from './configureStore';\nimport './AppWrapper.css';\nimport './locales';\n\nconst muiTheme = () => createMuiTheme(dhis2theme);\n\nconst d2Config = {\n  schemas: ['chart', 'map', 'report', 'reportTable', 'eventChart', 'eventReport', 'dashboard', 'organisationUnit', 'userGroup']\n}; // TODO: ER and EV plugins require the auth header in development mode.\n// Remove this when these plugins are rewritten\n\nconst authorization = process.env.REACT_APP_DHIS2_AUTHORIZATION || null;\n\nif (authorization) {\n  d2Config.headers = {\n    Authorization: authorization\n  };\n}\n\nconst AppWrapper = () => {\n  const dataEngine = useDataEngine();\n  return <ReduxProvider store={configureStore(dataEngine)}>\n            <MuiThemeProvider theme={muiTheme()}>\n                <D2Shim d2Config={d2Config} i18nRoot=\"./i18n\">\n                    {({\n          d2\n        }) => {\n          if (!d2) {\n            // TODO: Handle errors in d2 initialization\n            return null;\n          }\n\n          return <WindowDimensionsProvider>\n                                <App d2={d2} dataEngine={dataEngine} />\n                            </WindowDimensionsProvider>;\n        }}\n                </D2Shim>\n            </MuiThemeProvider>\n        </ReduxProvider>;\n};\n\nexport default AppWrapper;","import i18n from '@dhis2/d2-i18n';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\nimport ExtensionIcon from '@material-ui/icons/Extension';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport PersonIcon from '@material-ui/icons/Person';\nimport FontDownloadIcon from '@material-ui/icons/FontDownload';\nimport EmailIcon from '@material-ui/icons/Email';\nimport CropFreeIcon from '@material-ui/icons/CropFree';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\nimport { getBaseUrl } from './util'; // Item types\n\nexport const VISUALIZATION = 'VISUALIZATION';\nexport const REPORT_TABLE = 'REPORT_TABLE';\nexport const CHART = 'CHART';\nexport const MAP = 'MAP';\nexport const EVENT_REPORT = 'EVENT_REPORT';\nexport const EVENT_CHART = 'EVENT_CHART';\nexport const APP = 'APP';\nexport const REPORTS = 'REPORTS';\nexport const RESOURCES = 'RESOURCES';\nexport const USERS = 'USERS';\nexport const MESSAGES = 'MESSAGES';\nexport const TEXT = 'TEXT';\nexport const SPACER = 'SPACER';\nexport const PAGEBREAK = 'PAGEBREAK';\nexport const PRINT_TITLE_PAGE = 'PRINT_TITLE_PAGE';\nconst DOMAIN_TYPE_AGGREGATE = 'AGGREGATE';\nconst DOMAIN_TYPE_TRACKER = 'TRACKER'; // Dashboard helpers\n\nexport const isVisualizationType = item => !!itemTypeMap[item.type].isVisualizationType;\nexport const hasMapView = itemType => itemTypeMap[itemType].domainType === DOMAIN_TYPE_AGGREGATE;\nexport const isTrackerDomainType = itemType => itemTypeMap[itemType].domainType === DOMAIN_TYPE_TRACKER;\nexport const getDefaultItemCount = itemType => itemTypeMap[itemType].defaultItemCount || 5;\nexport const getAppName = itemType => itemTypeMap[itemType].appName || ''; // Item type map\n\nexport const itemTypeMap = {\n  [VISUALIZATION]: {\n    id: VISUALIZATION,\n    endPointName: 'visualizations',\n    propName: 'visualization',\n    pluralTitle: i18n.t('Visualizations'),\n    appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n    appName: 'Data Visualizer',\n    defaultItemCount: 10\n  },\n  [REPORT_TABLE]: {\n    id: REPORT_TABLE,\n    endPointName: 'visualizations',\n    dataStatisticsName: 'REPORT_TABLE_VIEW',\n    propName: 'visualization',\n    pluralTitle: i18n.t('Pivot tables'),\n    domainType: DOMAIN_TYPE_AGGREGATE,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n    appName: 'Data Visualizer'\n  },\n  [CHART]: {\n    id: CHART,\n    endPointName: 'visualizations',\n    propName: 'visualization',\n    dataStatisticsName: 'CHART_VIEW',\n    pluralTitle: i18n.t('Charts'),\n    domainType: DOMAIN_TYPE_AGGREGATE,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n    appName: 'Data Visualizer'\n  },\n  [MAP]: {\n    id: MAP,\n    endPointName: 'maps',\n    dataStatisticsName: 'MAP_VIEW',\n    propName: 'map',\n    pluralTitle: i18n.t('Maps'),\n    domainType: DOMAIN_TYPE_AGGREGATE,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-maps/?id=${id}`,\n    appName: 'Maps'\n  },\n  [EVENT_REPORT]: {\n    id: EVENT_REPORT,\n    endPointName: 'eventReports',\n    propName: 'eventReport',\n    pluralTitle: i18n.t('Event reports'),\n    domainType: DOMAIN_TYPE_TRACKER,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-event-reports/?id=${id}`,\n    appName: 'Event Reports'\n  },\n  [EVENT_CHART]: {\n    id: EVENT_CHART,\n    endPointName: 'eventCharts',\n    propName: 'eventChart',\n    pluralTitle: i18n.t('Event charts'),\n    domainType: DOMAIN_TYPE_TRACKER,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-event-visualizer/?id=${id}`,\n    appName: 'Event Visualizer'\n  },\n  [APP]: {\n    endPointName: 'apps',\n    propName: 'appKey',\n    pluralTitle: i18n.t('Apps')\n  },\n  [REPORTS]: {\n    id: REPORTS,\n    endPointName: 'reports',\n    propName: 'reports',\n    pluralTitle: i18n.t('Reports'),\n    appUrl: (id, type) => {\n      switch (type) {\n        case 'HTML':\n          return `dhis-web-reports/#/standard-report/view/${id}`;\n\n        case 'JASPER_REPORT_TABLE':\n        case 'JASPER_JDBC':\n        default:\n          return `api/reports/${id}/data.pdf?t=${new Date().getTime()}`;\n      }\n    }\n  },\n  [RESOURCES]: {\n    id: RESOURCES,\n    endPointName: 'resources',\n    propName: 'resources',\n    pluralTitle: i18n.t('Resources'),\n    appUrl: id => `api/documents/${id}/data`\n  },\n  [USERS]: {\n    id: USERS,\n    endPointName: 'users',\n    propName: 'users',\n    pluralTitle: i18n.t('Users'),\n    appUrl: id => `dhis-web-dashboard-integration/profile.action?id=${id}`\n  },\n  [TEXT]: {\n    id: TEXT,\n    propName: 'text'\n  },\n  [MESSAGES]: {\n    propName: 'messages'\n  },\n  [SPACER]: {\n    propName: 'text'\n  },\n  [PAGEBREAK]: {\n    propName: 'text'\n  },\n  [PRINT_TITLE_PAGE]: {\n    propName: 'text'\n  }\n};\nexport const getEndPointName = type => itemTypeMap[type].endPointName;\nexport const getDataStatisticsName = type => itemTypeMap[type].dataStatisticsName || null;\nexport const getItemUrl = (type, item, d2) => {\n  let url;\n\n  if (type === APP) {\n    url = item.launchUrl;\n  }\n\n  if (itemTypeMap[type] && itemTypeMap[type].appUrl) {\n    url = `${getBaseUrl(d2)}/${itemTypeMap[type].appUrl(item.id, item.type)}`;\n  }\n\n  return url;\n};\nexport const getItemIcon = type => {\n  switch (type) {\n    case REPORT_TABLE:\n    case EVENT_REPORT:\n    case REPORTS:\n      return TableIcon;\n\n    case CHART:\n    case EVENT_CHART:\n      return ChartIcon;\n\n    case MAP:\n      return MapIcon;\n\n    case APP:\n      return ExtensionIcon;\n\n    case RESOURCES:\n      return DescriptionIcon;\n\n    case USERS:\n      return PersonIcon;\n\n    case TEXT:\n      return FontDownloadIcon;\n\n    case MESSAGES:\n      return EmailIcon;\n\n    case SPACER:\n      return CropFreeIcon;\n\n    default:\n      return NotInterestedIcon;\n  }\n};","import isObject from 'lodash/isObject'; // validation\n\nexport function orNull(param) {\n  return param === undefined ? null : param;\n}\nexport function orArray(param) {\n  return Array.isArray(param) ? param : [];\n}\nexport function orObject(param) {\n  return isObject(param) ? param : {};\n} // array\n\nexport function arrayGetById(array, id) {\n  return array.find(item => item.id === id);\n} // object\n\nexport function arrayToIdMap(array) {\n  return array.reduce((obj, item) => {\n    obj[item.id] = item;\n    return obj;\n  }, {});\n} // date\n\nexport function getDate() {\n  const y = Math.floor(Math.random() * 3) + 2015;\n  const M = Math.floor(Math.random() * 12) + 1;\n  const d = Math.floor(Math.random() * 28) + 1; // const h = Math.floor(Math.random() * 23) + 1;\n  // const m = Math.floor(Math.random() * 59) + 1;\n  // const s = Math.floor(Math.random() * 59) + 1;\n\n  return new Date(`${y}-${M}-${d}`).toJSON().replace('T', ' ').substr(0, 10);\n}\nexport const formatDate = (value, uiLocale) => {\n  if (typeof global.Intl !== 'undefined' && Intl.DateTimeFormat) {\n    const locale = uiLocale || 'en';\n    return new Intl.DateTimeFormat(locale, {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    }).format(new Date(value));\n  }\n\n  return value.substr(0, 19).replace('T', ' ');\n};\n/**\n * Sorts an array of objects based on provided date property\n *\n * @param {Array} items Array of objects\n * @param {String} dateProp Name of the date property to be used for sorting\n * @param {Boolean} ascending Whether to sort ascending or descending\n */\n\nexport const sortByDate = (items, dateProp, ascending = true) => {\n  const values = Object.values(items);\n  values.sort((a, b) => {\n    const aDate = new Date(a[dateProp]);\n    const bDate = new Date(b[dateProp]);\n    return ascending ? aDate - bDate : bDate - aDate;\n  });\n  return values;\n}; // reducer validator\n\nexport const validateReducer = (value, defaultValue) => value === undefined || value === null ? defaultValue : value;\nexport const getBaseUrl = d2 => {\n  const api = d2.Api.getApi();\n  const idx = api.baseUrl.indexOf('/api');\n  return idx > -1 ? api.baseUrl.slice(0, idx) : api.baseUrl;\n};","// Dimensions for the react-grid-layout\nexport const GRID_COMPACT_TYPE = 'vertical'; // vertical | horizonal | null\n\nexport const GRID_ROW_HEIGHT = 10;\nconst GRID_COLUMN_WIDTH_PX = 20;\nconst GRID_LAYOUT = 'FLEXIBLE'; // FIXED | FLEXIBLE\n\nexport const MARGIN = [10, 10];\nexport const NEW_ITEM_SHAPE = {\n  x: 0,\n  y: 0,\n  w: 20,\n  h: 29\n}; // Dimensions for getShape\n\nconst NUMBER_OF_ITEM_COLS = 2;\nconst GRID_COLUMNS = 60;\nconst MAX_ITEM_GRID_WIDTH = GRID_COLUMNS - 1;\nexport const MAX_ITEM_GRID_HEIGHT = 34;\nexport const MAX_ITEM_GRID_HEIGHT_OIPP = 35;\nexport const MAX_ITEM_GRID_WIDTH_OIPP = 56; // for A4 landscape (297x210mm)\n// 794 px = (21cm / 2.54) * 96 pixels/inch\n// 1122 px = 29.7 /2.54 * 96 pixels/inch\n// const a4LandscapeHeightPx = 794\n\nexport const a4LandscapeWidthPx = 1102;\nexport const getGridColumns = () => {\n  switch (GRID_LAYOUT) {\n    case 'FLEXIBLE':\n      return GRID_COLUMNS;\n\n    case 'FIXED':\n      return Math.floor((window.innerWidth - 20) / GRID_COLUMN_WIDTH_PX);\n\n    default:\n      return GRID_COLUMNS;\n  }\n}; // isNonNegativeInteger\n\nconst isNonNegativeInteger = x => Number.isInteger(x) && x >= 0; // Does the item have all the shape properties?\n\n\nexport const hasShape = item => isNonNegativeInteger(item.x) && isNonNegativeInteger(item.y) && isNonNegativeInteger(item.w) && isNonNegativeInteger(item.h); // returns a rectangular grid block dimensioned with x, y, w, h in grid units.\n// based on a grid with 3 items across\n\nexport const getShape = i => {\n  if (!isNonNegativeInteger(i)) {\n    throw new Error('Invalid grid block number');\n  }\n\n  const col = i % NUMBER_OF_ITEM_COLS;\n  const row = Math.floor(i / NUMBER_OF_ITEM_COLS);\n  const itemWidth = Math.floor(MAX_ITEM_GRID_WIDTH / NUMBER_OF_ITEM_COLS);\n  const itemHeight = GRID_ROW_HEIGHT * 2;\n  return {\n    x: col * itemWidth,\n    y: row * itemHeight,\n    w: itemWidth,\n    h: itemHeight\n  };\n}; // returns a rectangular grid block based on a grid with 1 item (Small devices)\n\nexport const getSingleColumnShape = (item, i) => {\n  if (!isNonNegativeInteger(i)) {\n    throw new Error('Invalid grid block number');\n  }\n\n  const itemWidth = item.w;\n  const itemHeight = item.h;\n  return {\n    x: 0,\n    y: i * itemHeight,\n    w: itemWidth,\n    h: itemHeight\n  };\n};\nexport const sortCoordinates = array => array.slice().sort((a, b) => {\n  if (a.y === b.y) return a.x - b.x;\n  return a.y - b.y;\n});\nexport const getGridItemProperties = itemId => {\n  return {\n    i: itemId,\n    minH: 4 // minimum height for item\n\n  };\n};\nexport const getPageBreakItemShape = (yPos, isStatic = true) => {\n  return {\n    x: 0,\n    y: yPos,\n    w: MAX_ITEM_GRID_WIDTH,\n    h: 5,\n    static: !!isStatic,\n    minH: 1\n  };\n};\nexport const getPrintTitlePageItemShape = isOneItemPerPage => {\n  return {\n    x: 0,\n    y: 0,\n    w: isOneItemPerPage ? MAX_ITEM_GRID_WIDTH_OIPP : MAX_ITEM_GRID_WIDTH,\n    h: MAX_ITEM_GRID_HEIGHT,\n    static: true,\n    minH: 1\n  };\n};\n/**\n * Calculates the grid item's original height in pixels based\n * on the height in grid units. This calculation\n * is copied directly from react-grid-layout GridItem.js (calcPosition)\n *\n * @param {Object} item item containing shape (x, y, w, h)\n */\n\nexport const getOriginalHeight = item => {\n  const originalHeight = Math.round(GRID_ROW_HEIGHT * item.h + Math.max(0, item.h - 1) * MARGIN[1]);\n  return {\n    originalHeight\n  };\n};\n/**\n * Returns an array of items containing the x, y, w, h dimensions\n * and the item's originalheight in pixels\n * @function\n * @param {Array} items\n * @returns {Array}\n */\n\nexport const withShape = items => items.map((item, index) => {\n  const itemWithShape = hasShape(item) ? item : Object.assign({}, item, getShape(index));\n  return Object.assign({}, itemWithShape, getOriginalHeight(itemWithShape));\n});\nexport const getGridItemDomId = id => `item-${id}`;\n/**\n * Returns an array of items containing the x, y, w, h dimensions\n * based on a single column grid for small devices\n * @function\n * @param {Array} items\n * @return {Array}\n * */\n\nexport const withSingleColumnShape = items => items.map((item, index) => {\n  const itemWithShape = Object.assign({}, item, getSingleColumnShape(item, index));\n  return Object.assign({}, itemWithShape, getOriginalHeight(itemWithShape));\n});","import isObject from 'lodash/isObject';\nimport { itemTypeMap } from './itemTypes';\nexport const getVisualizationFromItem = item => {\n  if (!isObject(item)) {\n    return null;\n  }\n\n  const propName = itemTypeMap[item.type]?.propName;\n  return item[propName] || item.reportTable || item.chart || item.map || item.eventReport || item.eventChart || {};\n};\nexport const getVisualizationId = item => getVisualizationFromItem(item).id;\nexport const getVisualizationName = item => getVisualizationFromItem(item).name;","import { REPORT_TABLE, CHART, MAP, EVENT_REPORT, EVENT_CHART, itemTypeMap } from '../../../../modules/itemTypes';\nimport { getVisualizationId } from '../../../../modules/item';\nimport { getGridItemDomId } from '../../../ItemGrid/gridUtil'; //external plugins\n\nconst itemTypeToExternalPlugin = {\n  [MAP]: 'mapPlugin',\n  [EVENT_REPORT]: 'eventReportPlugin',\n  [EVENT_CHART]: 'eventChartPlugin'\n};\n\nconst hasIntegratedPlugin = type => [CHART, REPORT_TABLE].includes(type);\n\nconst getPlugin = type => {\n  if (hasIntegratedPlugin(type)) {\n    return true;\n  }\n\n  const pluginName = itemTypeToExternalPlugin[type];\n  return global[pluginName];\n};\n\nexport const pluginIsAvailable = type => !!getPlugin(type);\nexport const loadPlugin = (plugin, config, credentials) => {\n  if (!(plugin && plugin.load)) {\n    return;\n  }\n\n  plugin.url = credentials.baseUrl;\n  plugin.loadingIndicator = true;\n  plugin.dashboard = true;\n\n  if (credentials.auth) {\n    plugin.auth = credentials.auth;\n  }\n\n  plugin.load(config);\n};\nexport const getLink = (item, baseUrl) => {\n  const appUrl = itemTypeMap[item.type].appUrl(getVisualizationId(item));\n  return `${baseUrl}/${appUrl}`;\n};\nexport const load = async (item, visualization, {\n  credentials,\n  activeType,\n  options = {}\n}) => {\n  const config = { ...visualization,\n    ...options,\n    el: getGridItemDomId(item.id)\n  };\n  const type = activeType || item.type;\n  const plugin = getPlugin(type);\n  loadPlugin(plugin, config, credentials);\n};\nexport const resize = item => {\n  const plugin = getPlugin(item.type);\n\n  if (plugin && plugin.resize) {\n    plugin.resize(getGridItemDomId(item.id));\n  }\n};\nexport const unmount = (item, activeType) => {\n  const plugin = getPlugin(activeType);\n\n  if (plugin && plugin.unmount) {\n    plugin.unmount(getGridItemDomId(item.id));\n  }\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemHeaderWrap\":\"ItemHeader_itemHeaderWrap__JcBP7\",\"itemTitle\":\"ItemHeader_itemTitle__34rHa\",\"itemActionsWrap\":\"ItemHeader_itemActionsWrap__Gx3D9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"DashboardsBar_container__1xuCo\",\"overflowYAuto\":\"DashboardsBar_overflowYAuto__2mKmg\",\"overflowYHidden\":\"DashboardsBar_overflowYHidden__24dgC\",\"leftControls\":\"DashboardsBar_leftControls__k-Y57\",\"newLink\":\"DashboardsBar_newLink__2PkLQ\",\"rightControls\":\"DashboardsBar_rightControls__1cyr1\",\"topMargin\":\"DashboardsBar_topMargin__FKGgr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ControlBar_root__iikeX\",\"content\":\"ControlBar_content__26Z33\",\"draghandle\":\"ControlBar_draghandle__27zum\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"DashboardItemChip_link__21drZ\",\"icon\":\"DashboardItemChip_icon__2hcIR\",\"selected\":\"DashboardItemChip_selected__r00uP\",\"unselected\":\"DashboardItemChip_unselected__2H9l2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ClearButton_button__33ZbK\",\"icon\":\"ClearButton_icon__vTJm3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Filter_container__1Vxdh\",\"input\":\"Filter_input__14lhU\",\"focused\":\"Filter_focused__Lvyz3\",\"searchIcon\":\"Filter_searchIcon__2ojUp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ShowMoreButton_container__riJz_\",\"showMore\":\"ShowMoreButton_showMore__3S3He\",\"disabled\":\"ShowMoreButton_disabled__2FQNA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"HeaderMenuItem_item__313hC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuItem\":\"ContentMenuItem_menuItem__vbKn3\",\"launchLink\":\"ContentMenuItem_launchLink__2Nql9\",\"label\":\"ContentMenuItem_label__ANfH1\",\"buttonInsert\":\"ContentMenuItem_buttonInsert__1joHg\"};"],"sourceRoot":""}
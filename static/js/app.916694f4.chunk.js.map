{"version":3,"sources":["D2App/modules/loadExternalScript.js","D2App/components/ControlBar/styles/ControlBar.module.css","D2App/components/ControlBar/styles/DashboardItemChip.module.css","D2App/components/ControlBar/styles/ClearButton.module.css","D2App/components/ControlBar/styles/ShowMoreButton.module.css","D2App/components/ItemSelector/styles/ContentMenuItem.module.css","D2App/components/ItemSelector/styles/CategorizedMenuGroup.module.css","D2App/components/TitleBar/styles/EditTitleBar.module.css","D2App/components/TitleBar/styles/ViewTitleBar.module.css","D2App/components/Item/VisualizationItem/styles/FatalErrorBoundary.module.css","D2App/components/Item/ItemHeader/styles/DeleteItemButton.module.css","D2App/components/Item/ItemHeader/styles/PrintItemInfo.module.css","D2App/components/Item/VisualizationItem/styles/LoadingMask.module.css","D2App/components/Item/VisualizationItem/styles/Item.module.css","D2App/components/Item/ListItem/Item.module.css","D2App/components/Item/PrintTitlePageItem/styles/Item.module.css","D2App/components/FilterBar/styles/FilterBar.module.css","D2App/components/ControlBar/styles/ConfirmDeleteDialog.module.css","D2App/components/Dashboard/styles/PrintInfo.module.css","D2App/components/Dashboard/styles/PrintActionsBar.module.css","D2App/components/Dashboard/styles/PrintLayoutDashboard.module.css","D2App/components/Dashboard/styles/PrintDashboard.module.css","D2App/components/Dashboard/dashboardModes.js","D2App/reducers/user.js","D2App/modules/uiBackendItemConverter.js","D2App/reducers/dashboards.js","D2App/reducers/selected.js","D2App/reducers/dimensions.js","D2App/reducers/itemFilters.js","D2App/actions/itemFilters.js","D2App/reducers/messages.js","D2App/api/messages.js","D2App/components/Item/MessagesItem/actions.js","D2App/reducers/snackbar.js","D2App/actions/snackbar.js","D2App/reducers/visualizations.js","D2App/actions/visualizations.js","D2App/api/index.js","D2App/api/dashboards.js","D2App/api/userDataStore.js","D2App/components/SnackbarMessage/SnackbarMessage.js","D2App/actions/selected.js","D2App/api/localStorage.js","D2App/api/description.js","D2App/actions/dashboards.js","D2App/reducers/controlBar.js","D2App/actions/controlBar.js","D2App/api/controlBar.js","D2App/reducers/settings.js","D2App/actions/dimensions.js","D2App/components/ControlBar/ControlBar.js","D2App/icons/Star.js","D2App/components/ControlBar/DashboardItemChip.js","D2App/api/dataStatistics.js","D2App/icons/AddCircle.js","D2App/icons/Clear.js","D2App/components/ControlBar/ClearButton.js","D2App/reducers/dashboardsFilter.js","D2App/components/ControlBar/Filter.js","D2App/components/ControlBar/ShowMoreButton.js","D2App/components/ControlBar/controlBarDimensions.js","D2App/components/ControlBar/DashboardsBar.js","D2App/actions/dashboardsFilter.js","D2App/components/Dashboard/DashboardVerticalOffset.js","D2App/widgets/NoContentMessage.js","D2App/components/ItemSelector/HeaderMenuItem.js","D2App/icons/Launch.js","D2App/components/ItemSelector/ContentMenuItem.js","D2App/reducers/editDashboard.js","D2App/api/editDashboard.js","D2App/actions/editDashboard.js","D2App/components/ItemSelector/selectableItems.js","D2App/components/ItemSelector/CategorizedMenuGroup.js","D2App/components/ItemSelector/actions.js","D2App/components/ItemSelector/SinglesMenuGroup.js","D2App/components/ItemSelector/ItemSelector.js","D2App/components/TitleBar/EditTitleBar.js","D2App/components/Item/VisualizationItem/assets/icons.js","D2App/components/ItemFilter/FilterDialog.js","D2App/reducers/activeModalDimension.js","D2App/actions/activeModalDimension.js","D2App/components/ItemFilter/FilterSelector.js","D2App/components/TitleBar/ViewTitleBar.js","D2App/components/TitleBar/TitleBar.js","D2App/components/Item/VisualizationItem/DefaultPlugin.js","D2App/components/Item/VisualizationItem/FatalErrorBoundary.js","D2App/components/Item/ItemHeader/ViewItemActions.js","D2App/components/Item/ItemHeader/DeleteItemButton.js","D2App/components/Item/ItemHeader/EditItemActions.js","D2App/icons/Info.js","D2App/components/Item/ItemHeader/PrintItemInfo.js","D2App/components/Item/ItemHeader/ItemHeader.js","D2App/components/Item/VisualizationItem/ItemHeaderButtons.js","D2App/components/Item/VisualizationItem/ItemFooter.js","D2App/components/Item/VisualizationItem/LoadingMask.js","D2App/modules/memoizeOne.js","D2App/components/Item/VisualizationItem/Item.js","D2App/widgets/Line.js","D2App/components/Item/MessagesItem/Item.js","D2App/components/Item/NotSupportedItem/Item.js","D2App/icons/Description.js","D2App/icons/Delete.js","D2App/components/Item/ListItem/Item.js","D2App/components/Item/ListItem/actions.js","D2App/reducers/printDashboard.js","D2App/components/Item/TextItem/Item.js","D2App/components/Item/AppItem/Item.js","D2App/components/Item/SpacerItem/Item.js","D2App/components/Item/PageBreakItem/Item.js","D2App/components/Item/PrintTitlePageItem/Item.js","D2App/components/Item/Item.js","D2App/components/Item/ProgressiveLoadingContainer.js","D2App/components/ItemGrid/ItemGrid.js","D2App/components/FilterBar/FilterBadge.js","D2App/components/FilterBar/FilterBar.js","D2App/reducers/windowHeight.js","D2App/actions/printDashboard.js","D2App/components/Dashboard/ViewDashboard.js","D2App/components/ControlBar/ConfirmDeleteDialog.js","D2App/components/ControlBar/EditBar.js","D2App/components/Dashboard/PrintInfo.js","D2App/icons/LessHorizontal.js","D2App/components/Dashboard/PrintActionsBar.js","D2App/modules/printUtils.js","D2App/components/ItemGrid/PrintLayoutItemGrid.js","D2App/components/Dashboard/PrintLayoutDashboard.js","D2App/components/Dashboard/EditDashboard.js","D2App/components/Dashboard/NewDashboard.js","D2App/components/ItemGrid/PrintItemGrid.js","D2App/components/Dashboard/PrintDashboard.js","D2App/actions/windowHeight.js","D2App/components/Dashboard/Dashboard.js","D2App/components/App.js","D2App/actions/user.js","D2App/reducers/style.js","D2App/reducers/index.js","D2App/configureStore.js","D2App/locales/index.js","D2App/AppWrapper.js","D2App/modules/util.js","D2App/modules/itemTypes.js","D2App/components/ItemGrid/gridUtil.js","D2App/components/Item/VisualizationItem/plugin.js","D2App/components/Item/ItemHeader/styles/ItemHeader.module.css","D2App/api/metadata.js","D2App/components/ControlBar/styles/DashboardsBar.module.css"],"names":["loadExternalScript","src","startsWith","path","process","replace","join","normalizeRelativePath","Promise","resolve","reject","document","querySelector","isScriptLoaded","element","createElement","type","async","cleanup","console","log","head","removeChild","onload","e","onerror","error","appendChild","module","exports","EDIT","NEW","PRINT","PRINT_LAYOUT","isEditMode","mode","includes","isPrintMode","isViewMode","DEFAULT_STATE_USER","id","username","uiLocale","isSuperuser","sGetUserUsername","state","user","spacerContent","isTextType","item","TEXT","text","convertUiItemsToBackend","items","map","SPACER","isUiSpacerType","convertBackendItemsToUi","isBackendSpacerType","gridProperties","getGridItemProperties","DEFAULT_STATE_DASHBOARDS","byId","EMPTY_DASHBOARD","updateDashboardProp","dashboardId","prop","value","sGetDashboardsRoot","dashboards","sGetDashboardById","orObject","sDashboardsIsFetching","sGetAllDashboards","sGetDashboardItems","sGetStarredDashboards","Object","values","filter","dashboard","starred","sGetUnstarredDashboards","getCustomDashboards","data","arrayFrom","d","name","displayName","description","displayDescription","favorite","owner","created","split","substr","lastUpdated","access","numberOfItems","orArray","dashboardItems","length","combineReducers","action","validateReducer","isLoading","showDescription","sGetSelectedRoot","selected","sGetSelectedId","sGetSelectedIsLoading","sGetSelectedShowDescription","DEFAULT_DIMENSIONS","getDimensionById","DIMENSION_ID_PERIOD","DIMENSION_ID_ORGUNIT","sGetDimensions","dimensions","DEFAULT_STATE_ITEM_FILTERS","sGetItemFiltersRoot","itemFilters","sGetNamedItemFilters","createSelector","filters","keys","reduce","arr","push","find","dimension","acRemoveItemFilter","sGetMessagesRoot","messages","tGetMessages","url","getInstance","then","d2","Api","getApi","get","catch","getMessages","messageConversations","dispatch","err","DEFAULT_STATE_SNACKBAR","message","duration","open","acCloseSnackbar","DEFAULT_STATE_VISUALIZATIONS","isEmpty","p","undefined","sGetVisualization","visualizations","sGetVisualizationsRoot","acAddVisualization","onError","getDashboardItemsFields","withFavorite","arrayClean","getListItemFields","getFavoritesFields","withDimensions","getDashboardFields","withItems","getIdNameFields","rename","apiFetchDashboard","models","fields","hasNamespace","currentUser","dataStore","has","getNamespace","create","apiPostUserDataStoreValue","key","set","apiGetUserDataStoreValue","defaultValue","namespace","k","loadingDashboardMsg","SnackbarMessageContent","style","fontWeight","connect","snackbar","sGetSnackbar","snackbarOpen","snackbarMessage","snackbarDuration","onCloseSnackbar","props","zIndex","autoHideDuration","onClose","acSetSelectedId","acSetSelectedIsLoading","acSetSelectedShowDescription","tSetSelectedDashboardById","getState","snackbarTimeout","setTimeout","dashboardName","onSuccess","acAppendDashboards","customDashboard","acSetDashboardItems","withShape","localStorage","setItem","forEach","REPORT_TABLE","CHART","MAP","EVENT_REPORT","EVENT_CHART","extractFavorite","MESSAGES","clearTimeout","tSetShowDescription","apiGetShowDescription","tUpdateShowDescription","apiPostShowDescription","arrayToIdMap","tFetchDashboards","collection","list","paging","toArray","tStarDashboard","isStarred","post","delete","apiStarDashboard","acSetDashboardStarred","tDeleteDashboard","apiDeleteDashboard","userRows","sGetControlBarUserRows","controlBar","sGetControlBarRoot","acSetControlBarUserRows","rows","tSetControlBarRows","controlBarRows","apiGetControlBarRows","DEFAULT_SETTINGS","keyDateFormat","keyAnalysisRelativePeriod","keyAnalysisDigitGroupSeparator","displayNameProperty","rootOrganisationUnit","sGetSettings","settings","sGetSettingsDisplayNameProperty","tSetDimensions","displayNameProp","apiFetchDimensions","acSetDimensions","dim","dimensionType","dataDimensionType","ControlBar","React","Component","constructor","super","onStartDrag","this","setState","dragging","window","addEventListener","onDrag","onEndDrag","event","preventDefault","stopPropagation","newHeight","clientY","onChangeHeight","height","requestAnimationFrame","removeEventListener","renderDragHandle","className","classes","draghandle","onMouseDown","render","Math","max","rootStyle","assign","backgroundColor","editMode","colors","yellow050","white","paddingBottom","transition","root","content","children","defaultProps","StarIcon","xmlns","viewBox","fill","DashboardItemChip","label","chipProps","selectedState","unselected","icon","Star","link","to","onClick","debounce","eventType","apiPostDataStatistics","AddCircleIcon","width","teal600","ClearIcon","grey800","ClearButton","onClear","button","Clear","color","ownerData","DEFAULT_STATE_DASHBOARDS_FILTER_OWNER","order","sGetDashboardsFilterRoot","dashboardsFilter","sGetFilterName","styles","filterField","fontSize","top","searchIcon","grey700","Filter","setFilterValue","onChangeName","target","handleKeyUp","keyCode","onKeypressEnter","componentWillReceiveProps","nextProps","startAdornment","position","endAdornment","placeholder","i18n","t","onChange","onKeyUp","Function","prototype","withStyles","ShowMoreButton","isMaxHeight","disabled","textAlign","showMore","getRowsHeight","getControlBarHeight","FIRST_ROW_PADDING_HEIGHT","DashboardsBar","setInitialDashboardState","adjustedHeight","newRows","floor","newRowCount","min","apiPostControlBarRows","onToggleMaxHeight","onSelectDashboard","history","componentDidMount","selectedId","onChangeFilterName","rowCount","controlBarHeight","contentWrapperStyle","padding","overflowY","leftControls","display","textDecoration","marginRight","AddCircle","mapDispatchToProps","withRouter","stateProps","dispatchProps","ownProps","displayDashboards","arraySort","toLowerCase","marginTop","NoContentMessage","grey600","HeaderMenuItem","title","dense","LaunchIcon","LaunchLink","launchLink","rel","href","Launch","InsertButton","buttonInsert","ContentMenuItem","onInsert","visType","ItemIcon","getItemIcon","renderedItemIcon","VISUALIZATION","visTypeIcons","menuItem","DEFAULT_STATE_EDIT_DASHBOARD","NEW_DASHBOARD_STATE","printPreviewView","sGetEditDashboardRoot","editDashboard","sGetIsEditing","sGetIsPrintPreviewView","sGetEditDashboardItems","saveDashboard","w","h","save","msg","response","uid","acClearEditDashboard","acAddDashboardItem","itemPropName","itemTypeMap","propName","generateUid","gridItemProperties","shape","PAGEBREAK","yPos","getPageBreakItemShape","isStatic","PRINT_TITLE_PAGE","getPrintTitlePageItemShape","NEW_ITEM_SHAPE","acUpdateDashboardItem","acRemoveDashboardItem","tSaveDashboard","dashboardToSave","postDashboard","singleItems","header","categorizedItems","USERS","REPORTS","RESOURCES","APP","listItemTypes","CategorizedMenuGroup","addItem","tAddListItemContent","newItem","toggleSeeMore","seeMore","onChangeItemsLimit","hasMore","itemUrl","getItemUrl","context","showMoreButton","margin","contextTypes","PropTypes","object","isRequired","listItemType","dashboardItemIndex","findIndex","dashboardItem","category","addToDashboard","ItemSearchField","onFocus","ItemSelector","closeList","openList","_","fetchItems","anchorEl","currentTarget","updateDebouncedFilterText","debouncedFilter","setFilter","getCategorizedMenuGroups","itemType","endPointName","itemCount","getDefaultItemCount","allItems","maxOptions","slice","pluralTitle","getSinglesMenuGroups","getMenuGroups","concat","add","Set","queryString","anchorOrigin","horizontal","vertical","transformOrigin","PaperProps","disableAutoFocus","disableEnforceFocus","disableRestoreFocus","maxWidth","EditTitleBar","onChangeTitle","onChangeDescription","section","titleDescription","itemSelector","selectedDashboard","ThreeDots","SpeechBubble","fillRule","transform","Warning","FilterDialog","initiallySelectedItems","addItemFilter","removeItemFilter","setFilters","useState","onSelectItems","dimensionId","onDeselectItems","itemIdsToRemove","newList","onReorderItems","itemIds","oldList","reorderedList","large","commonProps","onSelect","onDeselect","onReorder","selectedItems","selectedPeriods","ouItems","renderDialogContent","secondary","primary","filterItems","DEFAULT_STATE_ACTIVE_MODAL_DIMENSION","sGetActiveModalDimension","activeModalDimension","acSetActiveModalDimension","clearActiveModalDimension","setActiveModalDimension","showPopover","setShowPopover","ref","useRef","onCloseDialog","onClickOutside","reference","arrow","placement","onDimensionClick","selectedIds","ViewTitleBar","moreOptionsIsOpen","setMoreOptionsIsOpen","sharingDialogIsOpen","setSharingDialogIsOpen","redirectUrl","setRedirectUrl","onToggleStarredDashboard","onShowHideDescription","toggleSharingDialog","toggleMoreOptions","titleStyle","cursor","userSelect","StarBorder","showHideDescriptionLabel","toggleStarredDashboardLabel","buttonRef","createRef","userAccess","titleBar","actions","titleBarIcon","strip","update","editLink","manage","marginLeft","paddingTop","onRequestClose","black","minWidth","TitleBar","edit","DefaultPlugin","pluginCredentials","shouldPluginReload","prevProps","reloadAllowed","filtersChanged","vis","visualization","prevVis","visChanged","activeType","reloadPlugin","pluginManager","currentVis","useActiveType","credentials","getActiveType","baseUrl","getBaseUrl","auth","defaultHeaders","Authorization","options","componentDidUpdate","componentWillUnmount","getGridItemDomId","textDiv","FatalErrorBoundary","errorFound","componentDidCatch","info","container","ViewItemActions","actionButtons","itemActionsWrap","DeleteItemButton","deleteItemButton","red500","itemId","WarningIcon","PrintWarning","warning","Info","ItemHeader","forwardRef","dashboardMode","isShortened","rest","Actions","EditItemActions","PrintItemInfo","getItemActionsMap","itemHeaderWrap","itemTitle","iconFill","ItemHeaderButtons","setAnchorEl","onSelectActiveType","isTrackerType","isTrackerDomainType","onViewTable","handleClose","onViewChart","onViewMap","canViewAs","isSingleValue","isYearOverYear","VIS_TYPE_GAUGE","VIS_TYPE_PIE","interpretationMenuLabel","activeFooter","ViewAsMenuItems","hasMapView","pluginIsAvailable","small","Boolean","appName","getAppName","getLink","onToggleFooter","scrollContainer","line","border","grey100","ItemFooter","objectId","getId","LoadingMask","center","memoizeOne","fn","lastArgs","lastValue","args","every","arg","i","Item","showFooter","configLoaded","pluginIsLoaded","applyFilters","visRows","obj","visColumns","columns","visFilters","dimensionFound","dimensionObjects","getUniqueKey","uniqueId","getPluginComponent","memoizedGetVisualizationConfig","calculatedHeight","originalHeight","headerRef","current","clientHeight","ITEM_CONTENT_PADDING_BOTTOM","memoizedGetContentStyle","contentRef","offsetHeight","memoizedApplyFilters","onLoadingComplete","forDashboard","mapViews","layer","hideTitle","onToggleItemExpanded","getContentStyle","measuredHeight","preferMeasured","onVisualizationLoaded","prevState","shortened","acSetActiveVisualizationType","grey200","Line","messageTypes","VALIDATION_RESULT","TICKET","SYSTEM","listStyleType","paddingLeft","seeAll","marginBottom","sender","lineHeight","snippet","maxHeight","overflow","MessagesItem","getMessageHref","msgIdentifier","messageType","getMessageSender","latestMsg","getMessageItems","modeClass","readClass","read","msgDate","location","messageCount","formatDate","userSettings","string","MessagesContainer","NotSupportedItem","justifyContent","alignItems","align","DescriptionIcon","grey500","DeleteIcon","getItemTitle","ListItem","tRemoveListItemContent","contentItems","index","array","el","getContentItems","contentItem","Description","itemicon","deleteButton","deletebutton","deleteicon","grey900","newContent","DEFAULT_STATE_PRINT_DASHBOARD","DEFAULT_DASHBOARD_ITEMS","NEW_PRINT_DASHBOARD_STATE","sGetPrintDashboardRoot","printDashboard","sGetIsPrinting","sGetPrintDashboardItems","whiteSpace","textField","fontStretch","onChangeText","updatedItem","viewItem","textDivStyle","editItem","onEdit","multiline","fullWidth","printItem","textItem","getIframeSrc","appDetails","iframeSrc","launchUrl","ouIds","ouFilter","AppItem","appKey","system","installedApps","app","SpacerItem","PageBreakItem","PrintTitlePageItem","titlePage","filterTitle","listItems","filterListItem","val","filterList","getItemFilterList","viewDashboard","sGetPrintDashboardName","sGetPrintDashboardDescription","GridItem","VisualizationItem","TextItem","getGridItem","ProgressiveLoadingContainer","shouldLoad","containerRef","shouldLoadHandler","handlerOptions","passive","checkShouldLoad","bufferPx","bufferFactor","innerHeight","rect","getBoundingClientRect","bottom","removeHandler","registerHandler","debounceMs","getElementsByClassName","eventProps","pick","ItemGrid","expandedItems","clickedId","isExpanded","onLayoutChange","newLayout","acUpdateDashboardLayout","onResizeStop","layout","oldItem","onItemResize","isVisualizationType","pluginResize","adjustHeightForExpanded","expandedItem","getItemComponent","itemClassNames","getItemComponents","translucent","MARGIN","cols","getGridColumns","rowHeight","GRID_ROW_HEIGHT","innerWidth","compactType","GRID_COMPACT_TYPE","isDraggable","isResizable","draggableCancel","validItems","hasShape","badgeContainer","borderRadius","badge","badgeRemove","FilterBadge","onRemove","count","FilterBar","onBadgeRemove","onBadgeClick","bar","removeItemFIlter","DEFAULT_STATE_WINDOW_HEIGHT","sGetWindowHeight","windowHeight","acSetPrintDashboard","acClearPrintDashboard","acAddPrintDashboardItem","isOneItemPerPage","acUpdatePrintDashboardItem","dashboardIsEditing","dashboardIsPrinting","clearEditDashboard","clearPrintDashboard","useEffect","scroll","ConfirmDeleteDialog","onDeleteConfirmed","onContinueEditing","destructive","buttonBarStyle","EditBar","translationDialogIsOpen","dashboardModel","confirmDeleteDialogOpen","onConfirmDelete","onSave","newId","onPrintPreview","isPrintPreviewView","clearPrintPreview","showPrintPreview","onDiscard","onDiscardChanges","onDelete","onTranslationsSaved","translations","dbLocale","translation","locale","property","onTranslate","fetchDashboardModel","toggleTranslationDialog","confirmDeleteDialog","deleteAccess","translationDialog","objectToTranslate","fieldsToTranslate","onTranslationSaved","onTranslationError","renderActionButtons","printPreviewText","updateAccess","discardBtnText","rightControls","topMargin","sGetIsNewDashboard","acSetDashboardDisplayName","PrintInfo","isLayout","a4LandscapeWidthPx","infoHeader","infoWrapper","infoList","divider","LessHorizontalIcon","PrintActionsBar","inner","LessHorizontal","print","getTransformYPx","elStyle","transformY","match","parseInt","PrintLayoutItemGrid","updateDashboardLayout","isFirstPageBreak","pageBreaks","sortedPageBreaks","sortBy","y","cx","isEditing","hideExtraPageBreaks","sortedElements","elements","types","elementsWithBoundingRect","Array","from","classList","indexOf","bottomY","getDomGridItemsSortedByYPos","querySelectorAll","pageBreakBottom","lastItemBottom","foundNonPageBreak","thisItemBottom","gridElement","firstBreak","scrollArea","EDIT_BAR_HEIGHT","isLeapPage","n","x","getMultiple","factor","multiple","PrintLayoutDashboard","initialized","initPrintLayoutDashboard","setPrintDashboard","MAX_ITEM_GRID_HEIGHT","updateDashboardItem","addDashboardItem","yPosList","pageNum","addPageBreaks","getWrapperStyle","fromEdit","spacers","dp24","wrapper","pageOuter","EditDashboard","initEditDashboard","setEditDashboard","renderGrid","NewDashboard","setNewDashboard","PrintItemGrid","PrintDashboard","initPrintDashboard","sortedItems","spacerCount","removeDashboardItem","MAX_ITEM_GRID_WIDTH_OIPP","MAX_ITEM_GRID_HEIGHT_OIPP","dashboardMap","dashboardsIsEmpty","dashboardsLoaded","routeId","params","selectDashboard","dashboardToSelect","preferredId","getItem","dash","sGetDashboardsSortedByStarred","setWindowHeight","getElementsByTagName","remove","setHeaderbarVisibility","onResize","App","setCurrentUser","fetchDashboards","setControlBarRows","setShowDescription","setDimensions","getChildContext","exact","childContextTypes","objectClean","conversations","$merge","d2Object","keyUiLocale","authorities","newState","$splice","$unshift","idToRemove","stateItems","layoutHasChanged","newStateItems","stateItem","si","configureStore","middleware","thunk","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducer","applyMiddleware","addResources","arTranslations","ar_IQTranslations","ckbTranslations","csTranslations","daTranslations","enTranslations","esTranslations","frTranslations","idTranslations","kmTranslations","loTranslations","myTranslations","nbTranslations","prsTranslations","psTranslations","ptTranslations","pt_BRTranslations","ruTranslations","svTranslations","tetTranslations","tgTranslations","ukTranslations","urTranslations","uzTranslations","uz_LatnTranslations","viTranslations","zhTranslations","zh_CNTranslations","d2Config","schemas","authorization","REACT_APP_DHIS2_AUTHORIZATION","headers","AppWrapper","store","theme","createMuiTheme","dhis2theme","i18nRoot","param","isArray","isObject","global","Intl","DateTimeFormat","year","month","day","format","Date","api","idx","getWithoutId","domainType","defaultItemCount","appUrl","getTime","getEndPointName","TableIcon","ChartIcon","MapIcon","ExtensionIcon","PersonIcon","FontDownloadIcon","EmailIcon","CropFreeIcon","NotInterestedIcon","isNonNegativeInteger","Number","isInteger","minH","GRID_COLUMNS","static","itemWithShape","Error","col","row","itemWidth","MAX_ITEM_GRID_WIDTH","itemHeight","getShape","round","getOriginalHeight","isFunction","setViewportSize","clientWidth","itemTypeToGlobalVariable","hasIntegratedPlugin","itemTypeToScriptPath","getPlugin","reportTable","chart","eventReport","eventChart","loadPlugin","config","plugin","globalName","scripts","scriptsPromise","all","fetchPlugin","load","loadingIndicator","getName","fetch","apiFetchFavorite","getMapFields","resize","unmount","getVisualizationConfig","originalType","extractedMapView","mv","VIS_TYPE_COLUMN","VIS_TYPE_PIVOT_TABLE","AXIS_ID_COLUMNS","AXIS_ID_ROWS","splice","shift","AXIS_ID_FILTERS","getDimensionFields","getAxesFields","getFavoriteFields","withOptions"],"mappings":"+HAAA,wCAMaA,EAAqBC,IACjBA,EAPeC,WAAW,QAQvCD,EAN0BE,IAAQ,CAACC,IAAwBD,EAAKE,QAAQ,QAAS,KAAKC,KAAK,KAMrFC,CAAsBN,IAGvB,IAAIO,QAAQ,CAACC,EAASC,KAC3B,GARmBT,MAAOU,SAASC,cAAc,eAAiBX,EAAM,MAQpEY,CAAeZ,GACjB,OAAOQ,IAGT,MAAMK,EAAUH,SAASI,cAAc,UACvCD,EAAQb,IAAMA,EACda,EAAQE,KAAO,kBACfF,EAAQG,OAAQ,EAEhB,MAAMC,EAAU,KACdC,QAAQC,IAAR,kCAAuCnB,IACvCU,SAASU,KAAKC,YAAYR,IAG5BA,EAAQS,OAAS,KACfJ,QAAQC,IAAR,iCAAsCnB,IAEtC,IACEQ,IACA,MAAOe,GACPN,IACAR,MAIJI,EAAQW,QAAU,KAChBN,QAAQO,MAAR,gCAAuCzB,IACvCiB,IACAR,KAGFC,SAASU,KAAKM,YAAYb,O,qBC1C9Bc,EAAOC,QAAU,CAAC,KAAO,yBAAyB,QAAU,4BAA4B,WAAa,iC,qBCArGD,EAAOC,QAAU,CAAC,KAAO,gCAAgC,KAAO,gCAAgC,SAAW,oCAAoC,WAAa,wC,qBCA5JD,EAAOC,QAAU,CAAC,OAAS,4BAA4B,KAAO,4B,qBCA9DD,EAAOC,QAAU,CAAC,SAAW,iCAAiC,SAAW,mC,qBCAzED,EAAOC,QAAU,CAAC,SAAW,kCAAkC,WAAa,oCAAoC,MAAQ,+BAA+B,aAAe,wC,qBCAtKD,EAAOC,QAAU,CAAC,eAAiB,+C,4CCAnCD,EAAOC,QAAU,CAAC,QAAU,8BAA8B,iBAAmB,uCAAuC,MAAQ,4BAA4B,YAAc,kCAAkC,aAAe,qC,qBCAvND,EAAOC,QAAU,CAAC,QAAU,8BAA8B,SAAW,+BAA+B,SAAW,+BAA+B,aAAe,mCAAmC,MAAQ,4BAA4B,SAAW,iC,4CCA/OD,EAAOC,QAAU,CAAC,UAAY,sCAAsC,KAAO,iCAAiC,QAAU,sC,qBCAtHD,EAAOC,QAAU,CAAC,iBAAmB,6C,qBCArCD,EAAOC,QAAU,CAAC,QAAU,iC,qBCA5BD,EAAOC,QAAU,CAAC,OAAS,8B,qBCA3BD,EAAOC,QAAU,CAAC,QAAU,wB,4CCA5BD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,KAAO,mBAAmB,SAAW,uBAAuB,KAAO,mBAAmB,WAAa,yBAAyB,aAAe,6B,qBCAvLD,EAAOC,QAAU,CAAC,UAAY,wBAAwB,KAAO,mBAAmB,YAAc,0BAA0B,YAAc,0BAA0B,WAAa,yBAAyB,eAAiB,+B,qBCAvND,EAAOC,QAAU,CAAC,IAAM,yB,qBCAxBD,EAAOC,QAAU,CAAC,QAAU,uC,qBCA5BD,EAAOC,QAAU,CAAC,YAAc,+BAA+B,WAAa,8BAA8B,KAAO,wBAAwB,SAAW,4BAA4B,QAAU,6B,qBCA1LD,EAAOC,QAAU,CAAC,UAAY,mCAAmC,UAAY,mCAAmC,MAAQ,+BAA+B,KAAO,gC,qBCA9JD,EAAOC,QAAU,CAAC,QAAU,sCAAsC,UAAY,0C,4CCA9ED,EAAOC,QAAU,CAAC,QAAU,gCAAgC,UAAY,oC,qguHCDjE,MAAMC,EAAO,OACPC,EAAM,MAENC,EAAQ,QACRC,EAAe,eACfC,EAAaC,GAAQ,CAACL,EAAMC,GAAKK,SAASD,GAC1CE,EAAcF,GAAQ,CAACH,EAAOC,GAAcG,SAASD,GACrDG,EAAaH,GALN,SAKcA,ECNrBI,EAAqB,CAChCC,GAAI,GACJC,SAAU,GACVC,SAAU,GACVC,aAAa,GAwBR,MACMC,EAAmBC,GAASA,EAAMC,KAAKL,S,2EC5B7C,MAAMM,EAAgB,+CAOvBC,EAAaC,GAAQA,EAAKjC,OAASkC,KAAQD,EAAKE,OAASJ,EAElDK,EAA0BC,GAASA,EAAMC,IAAIL,IACxD,IAAIE,EAAO,KAQX,MAbqBF,IAAQA,EAAKjC,OAASuC,IAOvCC,CAAeP,GACjBE,EAAOJ,EACEC,EAAWC,KACpBE,EAAOF,EAAKE,MAdoB,6BAiB3B,2BAAKF,GACNE,EAAO,CACTA,QACE,MAGKM,EAA0BJ,GAASA,EAAMC,IAAIL,IACxD,MAAMjC,EAtBoBiC,IAAQA,EAAKjC,OAASkC,KAAQD,EAAKE,OAASJ,EAsBzDW,CAAoBT,GAAQM,IAASN,EAAKjC,KACjD2C,EAAiBC,YAAsBX,EAAKT,IAC5CW,EAAOH,EAAWC,GA1BU,8BA0BFA,EAAKE,KAAgC,GAAKF,EAAKE,KAAO,KACtF,OAAO,uCAAKF,GACG,OAATE,EAAgB,CAClBA,QACE,IAHN,IAIEnC,QACG2C,KCzBME,EAA2B,CACtCC,KAAM,KACNT,MAAO,IAEIU,EAAkB,GAEzBC,EAAsB,EAC1BnB,QACAoB,cACAC,OACAC,YAJ0B,CAM1BL,KAAK,2BAAMjB,EAAMiB,MAAb,IACF,CAACG,GAAD,2BAAoBpB,EAAMiB,KAAKG,IAA/B,IACE,CAACC,GAAOC,MAGZd,MAAOR,EAAMQ,QA8DR,MAAMe,EAAqBvB,GAASA,EAAMwB,WAgBpCC,EAAoB,CAACzB,EAAOL,IAAO+B,YAASH,EAAmBvB,GAAOiB,MAAMtB,GAC5EgC,EAAwB3B,GACO,OAAnCuB,EAAmBvB,GAAOiB,KAUtBW,EAAoB5B,GAAS0B,YAASH,EAAmBvB,GAAOiB,MAShEY,EAAqB7B,GAASuB,EAAmBvB,GAAOQ,MAExDsB,EAAwB9B,GAAS+B,OAAOC,OAAOJ,EAAkB5B,IAAQiC,OAAOC,IAAmC,IAAtBA,EAAUC,SACvGC,EAA0BpC,GAAS+B,OAAOC,OAAOJ,EAAkB5B,IAAQiC,OAAOC,IAAmC,IAAtBA,EAAUC,SAezGE,EAAsBC,GAAQC,IAAUD,GAAM7B,IAAI+B,IAAC,CAC9D7C,GAAI6C,EAAE7C,GACN8C,KAAMD,EAAEC,KACRC,YAAaF,EAAEE,YACfC,YAAaH,EAAEG,YACfC,mBAAoBJ,EAAEI,mBACtBT,QAASK,EAAEK,SACXC,MAAON,EAAEvC,KAAKwC,KACdM,QAASP,EAAEO,QAAQC,MAAM,KAAKvF,KAAK,KAAKwF,OAAO,EAAG,IAClDC,YAAaV,EAAEU,YAAYF,MAAM,KAAKvF,KAAK,KAAKwF,OAAO,EAAG,IAC1DE,OAAQX,EAAEW,OACVC,cAAeC,YAAQb,EAAEc,gBAAgBC,OACzCD,eAAgB1C,EAAwB4B,EAAEc,mB,aC7G7BE,kBAAgB,CAC7B7D,GA/BS,CAACK,EAX6B,KAWMyD,KAC7C,OAAQA,EAAOtF,MACb,IAhB2B,kBAiBzB,OAAOuF,YAAgBD,EAAOnC,MAdK,MAgBrC,QACE,OAAOtB,IA0BX2D,UAtBgB,CAAC3D,GApB6B,EAoBayD,KAC3D,OAAQA,EAAOtF,MACb,IAzBkC,yBA0BhC,OAAOuF,YAAgBD,EAAOnC,OAvBY,GAyB5C,QACE,OAAOtB,IAiBX4D,gBAbsB,CAAC5D,GA7B6B,EA6BmByD,KACvE,OAAQA,EAAOtF,MACb,IAlCwC,+BAmCtC,OAAOuF,YAAgBD,EAAOnC,OAhCkB,GAkClD,QACE,OAAOtB,MAUN,MAAM6D,EAAmB7D,GAASA,EAAM8D,SAClCC,EAAiB/D,GAAS6D,EAAiB7D,GAAOL,GAClDqE,EAAwBhE,GAAS6D,EAAiB7D,GAAO2D,UACzDM,GAA8BjE,GAAS6D,EAAiB7D,GAAO4D,gB,cCvDrE,MACMM,GAAqB,CAACC,aAAiBC,MAAsBD,aAAiBE,OAYpF,MAAMC,GAAiBtE,GAASA,EAAMuE,W,eCZtC,MAIMC,GAA6B,GAiCnC,MAAMC,GAAsBzE,GAASA,EAAM0E,YAGrCC,GAAuBC,aAAe,CAACH,GAAqBH,IAAiB,CAACO,EAASN,IAAexC,OAAO+C,KAAKD,GAASE,OAAO,CAACC,EAAKrF,KACnJqF,EAAIC,KAAK,CACPtF,GAAIA,EACJ8C,KAAM8B,EAAWW,KAAKC,GAAaA,EAAUxF,KAAOA,GAAI8C,KACxDT,OAAQ6C,EAAQlF,GAAIc,IAAIa,IAAK,CAC3B3B,GAAI2B,EAAM3B,GACV8C,KAAMnB,EAAMoB,aAAepB,EAAMmB,UAG9BuC,GACN,KC7CUI,GAAqBzF,IAAE,CAClCxB,KDHgC,qBCIhCwB,O,yBCUK,MAAM0F,GAAmBrF,GAASA,EAAMsF,S,cClBxC,MCWMC,GAAe,IAAMnH,UAChC,IACE,MAAMkH,ODbiB,MACzB,MACME,EAAG,uCADM,qHACN,gCACT,OAAOC,yBAAcC,KAAKC,GAAMA,EAAGC,IAAIC,SAASC,IAAIN,IAAMO,MAAMlH,GAASP,QAAQC,IAAI,SAAUM,KCUtEmH,IACjB,qBACJC,GACEX,EACJ,OAAOY,EAV0B,CACnC/H,KFP+B,oBEQ/BmD,MAQmC2E,IACjC,MAAOE,GACP,OAjBa1C,EAiBE,eAjBM5E,EAiBUsH,EAhBjC7H,QAAQC,IAAR,0BAA+BkF,EAA/B,aAA0C5E,IACnCA,EAFO,IAAC4E,EAAQ5E,GCDZuH,GAAyB,CACpCC,QAAS,GACTC,SAAU,KACVC,MAAM,GAqBD,MCrBMC,GAAkB,MAC7BrI,KDL4B,mB,yBEGvB,MAEMsI,GAA+B,GAEtCC,GAAUC,QAAWC,IAAND,GAAyB,OAANA,EA2BjC,MAEME,GAAoB,CAAC7G,EAAOL,IAFHK,IAASA,EAAM8G,eAG5CC,CAAuB/G,GAAOL,GCrC1BqH,GAAqB1F,IAAK,CACrCnD,KDE+B,oBCD/BmD,U,mCCAK,MAAM2F,GAAUpI,GAASP,QAAQC,IAAI,UAAWM,GAE1CqI,GAA0B,EACrCC,gBACE,KAAOC,KAAW,CAAC,KAAM,OAAQ,QAAS,IAAK,IAAK,kBAAmB,mBAAoB,WAAY,OAAQ,SAA7F,UAA0GC,eAAoB5J,KAAK,MAAQ0J,EAAY,UAAMG,aAAmB,CACpMC,eAAgBJ,EAAaI,iBAC5B9J,KAAK,MAFqK,KAIhK+J,GAAqB,EAChCC,YACAN,gBACE,KAAOC,KAAW,CAAC,GAAD,OAAIM,eAAkBjK,KAAK,MAAQ,cAAe,qBAAsB,WAAxE,eAA4FiK,aAAgB,CAChIC,QAAQ,IACPlK,KAAK,KAFc,KAEL,UAAW,cAAe,SAAUgK,EAAS,yBAAqBP,GAAwB,CACzGC,iBACC1J,KAAK,KAFsD,UCPjDmK,GAAoBjI,GAAM8F,yBAAcC,KAAKC,GAAMA,EAAGkC,OAAO3F,UAAU4D,IAAInG,EAAI,CAC1FmI,OAAQV,KAAWI,GAAmB,CACpCC,WAAW,EACXN,aAAc,CACZI,gBAAgB,MAEhB9J,KAAK,QACPsI,MAAMkB,ICdGc,GAAe3J,eAAoBuH,EAAGqC,YAAYC,UAAUC,IADhD,aAEZC,GAAe/J,MAAOuH,EAAIoC,IAAiBA,QAAqBpC,EAAGqC,YAAYC,UAAUnC,IAF7E,mBAEoGH,EAAGqC,YAAYC,UAAUG,OAF7H,aAGZC,GAA4BjK,MAAOkK,EAAKhH,KACnD,MAAMqE,QAAWF,gCACA0C,GAAaxC,EAAIoC,KAC/BQ,IAAID,EAAKhH,IAEDkH,GAA2BpK,MAAOkK,EAAKG,KAAkB,IAAD,EACnE,MAAM9C,QAAWF,yBACXiD,QAAkBP,GAAaxC,QAAUoC,GAAapC,IAG5D,OAFY,OAAG+C,QAAH,IAAGA,GAAH,UAAGA,EAAW5D,YAAd,aAAG,EAAiBI,KAAKyD,GAAKA,IAAML,UAGjCI,EAAU5C,IAAIwC,UAErBD,GAA0BC,EAAKG,GACrCnK,QAAQC,IAAI,mDACLkK,I,yBCbX,MACaG,GAAsB,CACjCnG,KAAM,GACNtE,KAHwB,qBAMpB0K,GAAyB,EAC7BxC,aAEuB,kBAAZA,EAEF,yCACa,0BAAMyC,MAAO,CAC7BC,WAAY,MACV1C,EAAQ5D,MAAa,IAHpB,aAQF4D,EA4BM2C,mBAnBShJ,IACtB,MAAM,QACJqG,EADI,SAEJC,EAFI,KAGJC,GPZwBvG,IAASA,EAAMiJ,UAAY7C,GOajD8C,CAAalJ,GACjB,MAAO,CACLmJ,aAAc5C,EACd6C,gBAAiB/C,EACjBgD,iBAAkB/C,IAUkB,CACtCgD,gBAAiB9C,IADJwC,CAzBgBO,GACtB,kBAAC,KAAD,CAAUT,MAAO,CACtBU,OAAQ,OACPjD,KAAMgD,EAAMJ,aAAc9C,QAAS,kBAACwC,GAAD,CAAwBxC,QAASkD,EAAMH,kBAAqBK,iBAAkBF,EAAMF,iBAAkBK,QAASH,EAAMD,mB,UCftJ,MAAMK,GAAkBrI,IAAK,CAClCnD,Kfd6B,kBee7BmD,UAEWsI,GAAyBtI,IAAK,CACzCnD,KfjBoC,yBekBpCmD,UAEWuI,GAA+BvI,IAAK,CAC/CnD,KfpB0C,+BeqB1CmD,UAGWwI,GAA4BnK,GAAMvB,MAAO8H,EAAU6D,KAC9D7D,EAAS0D,IAAuB,IAChC,MAAMI,EAAkBC,WAAW,KACjC,MAAMC,GAAiBzI,EAAkBsI,IAAYpK,IAAOuB,GAAiBwB,YAEzEsB,EAAsB+F,MAAeG,IACvCtB,GAAoBnG,KAAOyH,EAC3BhE,EPnCwC,CAC5C/H,KDFuC,4BCGvCmD,MOiCuC,CACjC+E,QAASuC,GACTrC,MAAM,OAGT,KAEG4D,EAAYrG,IAChBoC,EAASkE,GAAmBtG,IAC5B,MAAMuG,EAAkBhI,EAAoByB,GAAU,GC5CjB,IAAClE,EAAUwB,ED0EhD,OA7BA8E,EAASoE,GAAoBC,YAAUF,EAAgB/G,kBC7CjB1D,ED8CZG,EAAiBgK,KC9CK3I,ED8CQzB,EC7C1D6K,aAAaC,QAAb,kCAAgD7K,GAAYwB,GD8C1DiJ,EAAgB/G,eAAeoH,QAAQtK,IACrC,OAAQA,EAAKjC,MACX,KAAKwM,IACL,KAAKC,IACL,KAAKC,IACL,KAAKC,IACL,KAAKC,IACH7E,EAASc,GAAmBgE,aAAgB5K,KAC5C,MAEF,KAAK6K,IACH/E,EAASX,SAQX5F,IAAOoE,EAAegG,MACxB7D,EZzD4B,CAChC/H,KDVgC,uBaqE9B+H,EAASyD,GAAgBhK,IACzBuG,EAAS0D,IAAuB,IAChCsB,aAAalB,GACb9D,EPrE2B,CAC7B/H,KDL4B,mBQ0EnB2F,GAQT,IAEE,OAAOqG,QADiBvC,GAAkBjI,IAE1C,MAAOwG,GACP,OATctH,EASCsH,EARf7H,QAAQC,IAAI,UAAWM,GAChBA,EAFOA,OAYLsM,GAAsB,IAAM/M,UAUvC,IACE,MAAMwF,OElG2BxF,gBAAkBoK,GAD1B,mBjBMyB,Ge6FpB4C,GAC9B,YAVAlF,EAAS2D,GAUQjG,IACjB,MAAOuC,GACP,OATctH,EASCsH,EARf7H,QAAQC,IAAI,kCAAmCM,GACxCA,EAFOA,OAYLwM,GAAyB/J,GAASlD,UAU7C,IAEE,YEnHkCA,gBAAuBiK,GAFhC,kBAEgF/G,GFkHnGgK,CAAuBhK,QAT7B4E,EAAS2D,GAA6BvI,IAWtC,MAAO6E,GACP,OATctH,EASCsH,EARf7H,QAAQC,IAAI,kCAAmCM,GACxCA,EAFOA,OGnGLuL,GAAqB5I,IAAU,CAC1CrD,KnBR4B,iBmBS5BmD,MAAOiK,YAAalJ,EAAoBb,MAY7B8I,GAAsBhJ,IAAK,CACtCnD,KnBnBiC,sBmBoBjCmD,UAGWkK,GAAmB,IAAMpN,UACpC,MAAMqN,QN7BgChG,yBAAcC,KAAKC,GAAMA,EAAGkC,OAAO3F,UAAUwJ,KAAK,CACxF5D,OAAQ,CAACN,KAAqB/J,KAAK,KAAM,sBAAsBA,KAAK,KACpEkO,OAAQ,WACN5F,MAAMkB,IMEqBzF,MAyB7B0E,GAzB6B1E,EAyBJiK,EAAWG,UAzBG,CACvCzN,KnBL4B,iBmBM5BmD,MAAOiK,YAAalJ,EAAoBb,QAoD7BqK,GAAiB,CAAClM,EAAImM,IAAc1N,UAW/C,IAEE,YN1D4B,EAACuB,EAAImM,KACnC,MAAMtG,EAAG,qBAAiB7F,EAAjB,aACT8F,yBAAcC,KAAKC,IACbmG,EACFnG,EAAGC,IAAIC,SAASkG,KAAKvG,GAErBG,EAAGC,IAAIC,SAASmG,OAAOxG,MMmDnByG,CAAiBtM,EAAImM,GAXXnM,KAChBuG,EAhDiC,EAAC9E,EAAa0K,KAAd,CACnC3N,KnBXmC,wBmBYnCiD,YAAaA,EACbE,MAAOwK,IA6CII,CAAsBvM,EAAImM,IAC5BnM,GAUAwK,CAAUxK,GACjB,MAAOwG,GACP,OATctH,EASCsH,EARf7H,QAAQC,IAAI,6BAA8BM,GACnCA,EAFOA,OAYLsN,GAAmBxM,GAAMvB,UACpC,IAGE,YNzD8BuB,IACzB8F,yBAAcC,KAAKC,GACjBA,EAAGkC,OAAOrG,WAAWsE,IAAInG,GAAI+F,KAAKxD,GAAaA,EAAU8J,WAC/DjG,MAAMkB,IMoDDmF,CAAmBzM,SACnBuG,EAASsF,MACR7N,QAAQC,UACf,MAAOuI,GAEP,OADA7H,QAAQC,IAAI,4BAA6B4H,GAClCA,ICxEI3C,mBAAgB,CAC7B6I,SAXe,CAACrM,EAF2B,EAEYyD,KACvD,OAAQA,EAAOtF,MACb,IALoC,2BAMlC,OAAOuF,YAAgBD,EAAOnC,MALS,GAOzC,QACE,OAAOtB,MAcN,MAEMsM,GAAyBtM,GAFJA,IAASA,EAAMuM,WAEFC,CAAmBxM,GAAOqM,SCzB5DI,GAA0BC,IAAI,CACzCvO,KDDsC,2BCEtCmD,MAAOoL,IAGIC,GAAqB,IAAMvO,UAUtC,IACE,MAAMwO,OChB0BxO,gBAAkBoK,GAD1B,iBFEiB,GCeZqE,GAC7B,YAVA3G,EAASuG,GAUQG,IACjB,MAAOzG,GACP,OATctH,EASCsH,EARf7H,QAAQC,IAAI,iCAAkCM,GACvCA,EAFOA,OEXLiO,GAAmB,CAC9BC,cAAe,aACfC,0BAA2B,iBAC3BC,+BAAgC,QAChCC,oBAAqB,cACrBrN,SAAU,KACVsN,qBAAsB,IAqBjB,MAAMC,GAAepN,GAASA,EAAMqN,SAC9BC,GAAkCtN,GAASoN,GAAapN,GAAOkN,oBCvB/DK,GAAiB5H,GAAMvH,MAAO8H,EAAU6D,KAUnD,IACE,MAAMyD,EAAkBF,GAAgCvD,KAClDxF,QAAmBkJ,aAAmB9H,EAAI6H,GAGhD,MAdgBjJ,KAChB2B,EAN2B3B,KAAU,CACvCpG,KtBH4B,iBsBI5BmD,MAAOiD,IAIImJ,CAAgBnJ,KAalB4F,CADoB5F,EAAWtC,OAAO0L,GAA6B,aAAtBA,EAAIC,eAAsD,aAAtBD,EAAIC,eAA0D,cAA1BD,EAAIE,oBAEhI,MAAO1H,GACP,OAZctH,EAYCsH,EAXf7H,QAAQC,IAAI,+BAAgCM,GACrCA,EAFOA,O,oECNlB,MAAMiP,WAAmBC,IAAMC,UAC7BC,YAAY1E,GACV2E,MAAM3E,GADW,KAOnB4E,YAAc,KACZC,KAAKC,SAAS,CACZC,UAAU,IAEZC,OAAOC,iBAAiB,YAAaJ,KAAKK,QAC1CF,OAAOC,iBAAiB,UAAWJ,KAAKM,YAZvB,KAcnBD,OAASE,IACPA,EAAMC,iBACND,EAAME,kBACN,MAAMC,EAAYH,EAAMI,QAEpBX,KAAK7E,MAAMyF,gBAAkBF,IAAcV,KAAK7E,MAAM0F,QAAUH,EAAY,GAC9EI,sBAAsB,KACpBd,KAAK7E,MAAMyF,eAAeF,MArBb,KAyBnBJ,UAAY,KACVN,KAAKC,SAAS,CACZC,UAAU,IAEZC,OAAOY,oBAAoB,YAAaf,KAAKK,QAC7CF,OAAOY,oBAAoB,UAAWf,KAAKM,WAEvCN,KAAK7E,MAAMmF,WACbN,KAAK7E,MAAMmF,aA/BbN,KAAKpO,MAAQ,CACXsO,UAAU,GAkCdc,mBACE,MAA4C,oBAA9BhB,KAAK7E,MAAMyF,eAAgC,yBAAKK,UAAWC,KAAQC,WAAYzG,MAAO,CAClGmG,OA1C4B,GA2C3BO,YAAapB,KAAKD,cAAkB,KAGzCsB,SACE,MAAMR,EAASS,KAAKC,IAAIvB,KAAK7E,MAAM0F,OAAQ,GA/Cb,EAgDxBW,EAAY7N,OAAO8N,OAAO,CAC9BZ,SACAa,gBAAiB1B,KAAK7E,MAAMwG,SAAWC,IAAOC,UAAYD,IAAOE,MACjEC,cAnD4B,GAqD9B/B,KAAKpO,MAAMsO,SAAW,CACpB8B,WAAY,QACV,IACJ,OAAO,yBAAKtH,MAAO8G,EAAWP,UAAWC,KAAQe,MACrC,yBAAKhB,UAAWC,KAAQgB,SAAUlC,KAAK7E,MAAMgH,UAC5CnC,KAAKgB,qBAsCtBtB,GAAW0C,aAAe,CACxBxB,eAAgB,KAChBN,UAAW,MAEEZ,UC1FA2C,OAXE,EACfpB,eACI,yBAAKA,UAAWA,EAAWqB,MAAM,6BAA6BC,QAAQ,aACpE,0BAAMnO,EAAE,gBAAgBoO,KAAK,SAC7B,0BAAMpO,EAAE,6FACR,0BAAMA,EAAE,gBAAgBoO,KAAK,U,0BC0BtBC,OA1BkB,EAC/B1O,UACA2B,WACAgN,QACA1P,kBAEA,MAAM2P,EAAY,CAChBjN,YAGF,GAAI3B,EAAS,CACX,MAAM6O,EAAgBlN,EAAWwL,KAAQxL,SAAWwL,KAAQ2B,WAC5DF,EAAUG,KAAO,kBAACC,GAAD,CAAU9B,UAAS,UAAKC,KAAQ4B,KAAb,YAAqBF,KAG3D,OAAO,kBAAC,IAAD,CAAM3B,UAAWC,KAAQ8B,KAAMC,GAAE,WAAMjQ,GAAekQ,QAASC,KAAS,ICtB5CnT,OAAOoT,EAAW7R,KACrD,MAAMgG,QAAWF,yBACXD,EAAG,mCAA+BgM,EAA/B,qBAAqD7R,GAC9DgG,EAAGC,IAAIC,SAASkG,KAAKvG,IDmBgEiM,CAAsB,iBAAkBrQ,GAAc,MACjI,kBAAC,IAAS2P,EAAYD,KEjBnBY,OAJO,IAAM,yBAAKhB,MAAM,6BAA6BiB,MAAM,KAAK1C,OAAO,KAAK2B,KAAMZ,IAAO4B,QAASjB,QAAQ,aACjH,0BAAMnO,EAAE,0M,iECUDqP,OAVG,EAChBxC,eACI,yBAAKA,UAAWA,EAAWuB,KAAMZ,IAAO8B,QAASpB,MAAM,6BAA6BC,QAAQ,aAC1F,0BAAMnO,EAAE,0GACR,0BAAMA,EAAE,gBAAgBoO,KAAK,U,sBCMtBmB,OAVY,EACzBC,aACI,4BAAQ3C,UAAWC,KAAQ2C,OAAQX,QAASU,GAC1C,8BACI,kBAACE,GAAD,CAAW7C,UAAWC,KAAQ4B,KAAMiB,MAAM,aCN/C,MAGMC,GAAY,CAAC,CACxBzS,GAAI,MACJ2B,MAAO,aACN,CACD3B,GAAI,KACJ2B,MAAO,iBACN,CACD3B,GAAI,SACJ2B,MAAO,sBAsBI+Q,GAAwCD,GAAU,GAAGzS,GAiCnD6D,mBAAgB,CAC7Bf,KA/BW,CAACzC,EAJsC,GAIQyD,KAC1D,OAAQA,EAAOtF,MACb,IAtCsC,6BAuCpC,OAAOuF,YAAgBD,EAAOnC,MAPgB,IAShD,QACE,OAAOtB,IA0BX8C,MAtBY,CAAC9C,EAAQqS,GAAuC5O,KAC5D,OAAQA,EAAOtF,MACb,IA/CuC,8BAgDrC,OAAOuF,YAAgBD,EAAOnC,MAjBgB,IAmBhD,QACE,OAAOtB,IAiBXsS,MAbY,CAACtS,EA1CT,WA0CwDyD,KAC5D,OAAQA,EAAOtF,MACb,IAxDuC,8BAyDrC,OAAOuF,YAAgBD,EAAOnC,MA7C9B,YA+CF,QACE,OAAOtB,MAUN,MAAMuS,GAA2BvS,GAASA,EAAMwS,iBAE1CC,GAAiBzS,GAASuS,GAAyBvS,GAAOyC,KClEjEiQ,GAAS,CACbC,YAAa,CACXC,SAAU,OACVjB,MAAO,QACP1C,OAAQ,OACR4D,IAAK,QAEPC,WAAY,CACVX,MAAOnC,IAAO+C,QACdpB,MAAO,OACP1C,OAAQ,SAKL,MAAM+D,WAAehF,YAC1BC,YAAY1E,GACV2E,MAAM3E,GADW,KAanB0J,eAAiBtE,IACfA,EAAMC,iBACNR,KAAK7E,MAAM2J,aAAavE,EAAMwE,OAAO7R,QAfpB,KAiBnB8R,YAAczE,IACZ,OAAQA,EAAM0E,SACZ,KAtBuB,GAuBrBjF,KAAK7E,MAAM+J,kBACX,MAEF,KAzBwB,GA0BtBlF,KAAK7E,MAAM2J,iBAtBf9E,KAAKpO,MAAQ,CACXsB,MDK8C,ICDlDiS,0BAA0BC,GACxBpF,KAAKC,SAAS,CACZ/M,MAAOkS,EAAU/Q,OAuBrBgN,SACE,MAAM,QACJH,EADI,KAEJ7M,EAFI,aAGJyQ,GACE9E,KAAK7E,MACHkK,EAAiB,kBAAC,KAAD,CAAgBC,SAAS,SACpC,kBAAC,KAAD,CAAYrE,UAAWC,EAAQwD,cAErCa,EAAwB,KAATlR,GAAwB,OAATA,EAAgB,kBAAC,KAAD,CAAgBiR,SAAS,OAC7D,kBAAC,GAAD,CAAa1B,QAAS,IAAMkB,OACZ,KAChC,OAAO,kBAAC,KAAD,CAAY7D,UAAWC,EAAQqD,YAAaiB,YAAaC,IAAKC,EAAE,0BAA2BL,eAAgBA,EAAgBE,aAAcA,EAAcrS,MAAO8M,KAAKpO,MAAMsB,MAAOyS,SAAU3F,KAAK6E,eAAgBe,QAAS5F,KAAKgF,eAUxOJ,GAAOxC,aAAe,CACpB/N,KAAM,GACNyQ,aAAce,SAASC,WAEVC,4BAAWzB,GAAXyB,CAAmBnB,I,sBC7DnBoB,OAlBe,EAC5B9C,UACA+C,cACAC,cAEO,yBAAKxL,MAAO,CACjByL,UAAW,WAEFD,EAAW,yBAAKjF,UAAWC,KAAQgF,UAAWT,IAAKC,EAAE,cAAsB,yBAAKzE,UAAWC,KAAQkF,SAAUlD,QAASA,GAC9G+C,EAAcR,IAAKC,EAAE,aAAeD,IAAKC,EAAE,eCbzD,MAMMW,GAAgB/H,GANS,GAO7BA,EAKIgI,GAAsBhI,GAC1B+H,GAAc/H,GATeiI,G,yBCgB/B,MAAMC,WAAsB5G,YAAW,eAAD,oBAC3ChO,MAAQ,CACN0M,KDpByB,GCkBgB,KAI3CmI,yBAA2BnI,IACzB0B,KAAKC,SAAS,CACZ3B,OACA2H,YARuB,KAQV3H,KAP0B,KAmB3CsC,eAAiBF,IACf,MAAMgG,EAAiBhG,EAAY,GAE7BiG,EAAUrF,KAAKC,IDxCI,GAOOV,ECiC6B6F,EDhCxDpF,KAAKsF,OAAO/F,EANiB0F,IAJA,MASF1F,MCmChC,GAAI8F,IAAY3G,KAAKpO,MAAM0M,KAAM,CAC/B,MAAMuI,EAAcvF,KAAKwF,IAAIH,EA1BN,IA2BvB3G,KAAK7E,MAAMyF,eAAeiG,KA1Ba,KA6B3CvG,UAAY,Id9CuBtQ,gBAAuBiK,GAFhC,iBAE+E/G,Gc+ChG6T,CAAsB/G,KAAKpO,MAAM0M,MA9BC,KAgC3C0I,kBAAoB,KAClB,MAAM1I,EAlCmB,KAkCZ0B,KAAKpO,MAAM0M,KAAyB0B,KAAK7E,MAAM8C,SAlCnC,GAmCzB+B,KAAKC,SAAS,CACZ3B,OACA2H,aAAcjG,KAAKpO,MAAMqU,eApCc,KAuC3CgB,kBAAoB,KAClBjH,KAAK7E,MAAM+L,QAAQrQ,KAAnB,WAA4BmJ,KAAK7E,MAAM/H,WAAW,GAAG7B,MA7BvD4V,oBACEnH,KAAKyG,yBAAyBzG,KAAK7E,MAAM8C,UAG3CkH,0BAA0BC,GACxBpF,KAAKyG,yBAAyBrB,EAAUnH,UA2B1CoD,SACE,MAAM,WACJjO,EADI,KAEJiB,EAFI,WAGJ+S,EAHI,mBAIJC,GACErH,KAAK7E,MACHmM,EAAWtH,KAAKpO,MAAMqU,YAnDH,GAmDiCjG,KAAKpO,MAAM0M,KAC/DiJ,EAAmBjB,GAAoBgB,GACvCE,EAAsB,CAC1BC,QAAQ,GAAD,ODxE2B,GCwE3B,gBACPC,UAAW1H,KAAKpO,MAAMqU,YAAc,OAAS,SAC7CpF,OAAQwF,GAAciB,GD1EY,IC4EpC,OAAO,kBAAC,GAAD,CAAYzG,OAAQ0G,EAAkB3G,eAAgBZ,KAAKY,eAAgBN,UAAWN,KAAKM,UAAWqB,UAAU,GAC3G,yBAAKjH,MAAO8M,GACR,yBAAKvG,UAAWC,KAAQyG,cACpB,kBAAC,IAAD,CAAMjN,MAAO,CACzBkN,QAAS,eACTC,eAAgB,OAChBC,YAAa,GACbxC,SAAU,WACVb,IAAK,OACJxB,GAAI,QACW,kBAAC8E,GAAD,OAEJ,kBAAC,GAAD,CAAQ1T,KAAMA,EAAMyQ,aAAcuC,EAAoBnC,gBAAiBlF,KAAKiH,qBAE/EhS,YAAQ7B,GAAYf,IAAIyB,GAAa,kBAAC,GAAD,CAAMoG,IAAKpG,EAAUvC,GAAImR,MAAO5O,EAAUQ,YAAaP,QAASD,EAAUC,QAASf,YAAac,EAAUvC,GAAImE,SAAU5B,EAAUvC,KAAO6V,MAEnL,kBAAC,GAAD,CAAgBlE,QAASlD,KAAKgH,kBAAmBf,YAAajG,KAAKpO,MAAMqU,YAAaC,SA1EzE,KA0EmFlG,KAAK7E,MAAM8C,aAM3H,MAOM+J,GAAqB,CACzBpH,eAAgBvC,GAChBgJ,mBC3G6BnU,IAAK,CAClCnD,KLDwC,6BKExCmD,WD+Ha+U,mBAAWrN,YA/BFhJ,IAAK,CAC3BwB,WAAYI,EAAkB5B,GAC9ByC,KAAMgQ,GAAezS,GACrBqM,SAAUC,GAAuBtM,GACjCwV,WAAYzR,EAAe/D,KA2BsBoW,GAnBhC,CAACE,EAAYC,EAAeC,KAC7C,MAAMhV,EAAaO,OAAOC,OAAON,YAAS4U,EAAW9U,aAC/CiV,EAAoBC,IAAUlV,EAAWS,OAAOO,GAAKA,EAAEE,YAAYiU,cAAcpX,SAAS+W,EAAW7T,KAAKkU,gBAAiB,MAAO,eACxI,OAAO,mDAAKL,GACPE,GACAD,GAFL,IAGE/U,WAAY,IAAIiV,EAAkBxU,OAAOO,GAAKA,EAAEL,YAAasU,EAAkBxU,OAAOO,IAAMA,EAAEL,aAaxE6G,CAAyD4L,KE5GpE5L,mBARShJ,IAAK,CAC3BqM,SAAUC,GAAuBtM,KAOpBgJ,CAhBiBO,IAC9B,MAAMmD,EAAOnD,EAAMwG,SHLQ,EGKmBxG,EAAM8C,SAC9CuK,EAAYlC,GAAoBhI,GbLN,EaMhC,OAAO,yBAAK2C,UAAU,4BAA4BvG,MAAO,CACvD8N,iBCMWC,OAdiB,EAC9BvW,UACI,yBAAKwI,MAAO,CAChB+M,QAAS,YACTtB,UAAW,SACX3B,SAAU,OACV7J,WAAY,IACZoJ,MAAOnC,IAAO8G,UAEPxW,G,qBCIMyW,OAZQ,EACrBC,WACI,kBAAC,IAAD,CAAUC,OAAK,EAAC3O,IAAK0O,EAAO1C,UAAQ,EAACxD,MAAO,0BAAMhI,MAAO,CAC7DqJ,MAAOnC,IAAO8B,QACd/I,WAAY,QAEGiO,KCIFE,OAVI,EACjB7H,eACI,yBAAKA,UAAWA,EAAWqB,MAAM,6BAA6BiB,MAAM,KAAK1C,OAAO,KAAK2B,KAAMZ,IAAO8G,QAASnG,QAAQ,aACjH,0BAAMnO,EAAE,gBAAgBoO,KAAK,SAC7B,0BAAMpO,EAAE,wI,sBCChB,MAAM2U,GAAa,EACjB3R,SACI,uBAAG8L,QAAS3S,GAAKA,EAAEkQ,kBAAmBQ,UAAWC,KAAQ8H,WAAYjE,OAAO,SAASkE,IAAI,sBAAsBC,KAAM9R,GACnH,kBAAC+R,GAAD,OAOFC,GAAe,IAAM,4BAAQnI,UAAWC,KAAQmI,cAAe5D,IAAKC,EAAE,WAkC7D4D,OAhCS,EACtBvZ,OACAsE,OACAkV,WACAnS,MACAoS,cAEA,MAAMC,EAAWC,YAAY3Z,GACvB4Z,EAAmB5Z,IAAS6Z,IAAgBC,KAAaL,GAAW,kBAACC,EAAD,CAAU/O,MAAO,CACzF8H,KAAMZ,IAAO8G,WAEf,OAAO,kBAAC,IAAD,CAAUG,OAAK,EAAC3F,QAASqG,EAAU7G,MAAO,yBAAKzB,UAAWC,KAAQ4I,UACvD,yBAAK7I,UAAWC,KAAQwB,OACpB,0BAAMhI,MAAO,CAC7BoN,YAAa,QAEQ6B,GAEL,8BAAOtV,GACN+C,EAAM,kBAAC2R,GAAD,CAAY3R,IAAKA,IAAU,MAEtC,kBAACgS,GAAD,UCtCb,MAWMW,GAA+B,GAC/BC,GAAsB,CACjCzY,GAAI,GACJ8C,KAAM,GACNU,OAAQ,GACRR,YAAa,GACbW,eAAgB,GAChB+U,kBAAkB,GA6Hb,MAAMC,GAAwBtY,GAASA,EAAMuY,cAEvCC,GAAgBxY,IAAU0G,KAAQ1G,EAAMuY,eACxCE,GAAyBzY,GAASsY,GAAsBtY,GAAOqY,iBAM/DK,GAAyB1Y,GAAS0B,YAAS4W,GAAsBtY,IAAQsD,e,cC1JtF,MAAM2D,GAAUpI,GAASP,QAAQC,IAAI,UAAWM,GAE1C8Z,GAAgB,CAACzW,EAAWI,KAChC,MAAM,KACJG,EADI,YAEJE,EAFI,eAGJW,GACEhB,EAOJ,OANAJ,EAAUO,KAAOA,EACjBP,EAAUS,YAAcA,EACxBT,EAAUoB,eAAiBA,EAAe7C,IAAIL,GAAQ2B,OAAO8N,OAAO,GAAIzP,EAAM,CAC5EuR,MAAOvR,EAAKwY,EACZ3J,OAAQ7O,EAAKyY,KAER3W,EAAU4W,OAAOpT,KAAKqT,GAAOA,EAAIC,SAASC,MCYtCC,GAAuB,MAClC/a,KFxBkC,yBE4CvBgb,GAAqB/Y,IAChC,MAAMjC,EAAOiC,EAAKjC,YACXiC,EAAKjC,KACZ,MAAMib,EAAeC,IAAYlb,GAAMmb,SACjC3Z,EAAK4Z,yBACLC,EAAqBzY,YAAsBpB,GACjD,IAAI8Z,EAEJ,GAAItb,IAASub,IAAW,CACtB,MAAMC,EAAOvZ,EAAKuZ,MAAQ,EAC1BF,EAAQG,YAAsBD,EAAMvZ,EAAKyZ,eAEzCJ,EADStb,IAAS2b,IACVC,cAEAC,IAGV,MAAO,CACL7b,KF1D8B,qBE2D9BmD,MAAM,qCACJ3B,KACAxB,OACAuV,SAAUtT,EAAKsT,UAAY,KAC3B,CAAC0F,GAAehZ,EAAKkQ,SAClB0J,KACAR,GACAC,KAIIQ,GAAwB7Z,IAAI,CACvCjC,KFrEmC,wBEsEnCmD,MAAOlB,IAEI8Z,GAAwB5Y,IAAK,CACxCnD,KF1EmC,wBE2EnCmD,UAGW6Y,GAAiB,IAAM/b,MAAO8H,EAAU6D,KACnD,MAAM7H,EAAYoW,GAAsBvO,KAClCqQ,EAAe,2BAAQlY,GAAR,IACnBoB,eAAgB/C,EAAwB2B,EAAUoB,gBAClDb,KAAMP,EAAUO,MAAQoR,IAAKC,EAAE,wBAGjC,IACE,MAAM1S,EAAcgZ,EAAgBza,SD7ET2C,EC6EoC8X,ED5E1D3U,yBAAcC,KAAKC,GACjBA,EAAGkC,OAAOrG,WAAWsE,IAAIxD,EAAK3C,IAAI+F,KAAKxD,GAAayW,GAAczW,EAAWI,KACnFyD,MAAMkB,UAEkB3E,IACpBmD,yBAAcC,KAAKC,IACxB,MAAMzD,EAAYyD,EAAGkC,OAAOrG,WAAW4G,SACvC,OAAOuQ,GAAczW,EAAWI,KCqEwD+X,CAAcD,GAGtG,OAFAlU,EArEgC,CAClC/H,KFxBkC,+BE6F1B+H,EAAS4D,GAA0B1I,IAClCzD,QAAQC,QAAQwD,GACvB,MAAOvC,GA1FKA,KACdP,QAAQC,IAAI,6BAA8BM,IA0FxCoI,CAAQpI,GDlFmByD,OEjBlBgY,GAAc,CAAC,CAC1B3a,GAAI,aACJ4a,OAAQ1G,IAAKC,EAAE,oBACftT,MAAO,CAAC,CACNrC,KAAMkC,IACNoC,KAAMoR,IAAKC,EAAE,YACbxD,QAAS,IACR,CACDnS,KAAM8M,IACNxI,KAAMoR,IAAKC,EAAE,YACbxD,QAAS,QACR,CACDnS,KAAMuC,IACN+B,KAAMoR,IAAKC,EAAE,UACbxD,QAAS,OAIAkK,GAAmB,CAACxC,IAAenN,IAAKC,IAAcC,IAAa0P,IAAOC,IAASC,IAAWC,KAE9FC,GAAgB,CAACH,IAASC,IAAWF,K,0BCTlD,MAAMK,WAA6B9M,YACjCC,YAAY1E,GACV2E,MAAM3E,GADW,KAOnBwR,QAAU3a,GAAQ,KAChB,MAAM,KACJjC,EADI,mBAEJgb,EAFI,oBAGJ6B,GACE5M,KAAK7E,MAET,GAAIpL,IAASyc,IACXzB,EAAmB,CACjBhb,OACAmS,QAASlQ,EAAKkI,UAEX,CACL,MAAM2S,EAAU,CACdtb,GAAIS,EAAKT,GACT8C,KAAMrC,EAAKsC,aAAetC,EAAKqC,MAG7BoY,GAActb,SAASpB,GACzB6c,EAAoB7c,EAAM8c,GAE1B9B,EAAmB,CACjBhb,OACAmS,QAAS2K,MA9BE,KAmCnBC,cAAgB,KACd9M,KAAKC,SAAS,CACZ8M,SAAU/M,KAAKpO,MAAMmb,UAEvB/M,KAAK7E,MAAM6R,mBAAmBhN,KAAK7E,MAAMpL,OArCzCiQ,KAAKpO,MAAQ,CACXmb,SAAS,GAuCb1L,SACE,MAAM,MACJuH,EADI,KAEJ7Y,EAFI,MAGJqC,EAHI,QAIJ6a,GACEjN,KAAK7E,MACT,OAAO,oCACK,kBAAC,GAAD,CAAgByN,MAAOA,IACtBxW,EAAMC,IAAIL,IACnB,MAAMkb,EAAUC,YAAWpd,EAAMiC,EAAMgO,KAAKoN,QAAQ7V,IACpD,OAAO,kBAAC,GAAD,CAAiB2C,IAAKlI,EAAKT,IAAMS,EAAKkI,IAAKnK,KAAMA,EAAMyZ,QAASzZ,IAAS6Z,IAAgB5X,EAAKjC,KAAOA,EAAMsE,KAAMrC,EAAKsC,aAAetC,EAAKqC,KAAMkV,SAAUvJ,KAAK2M,QAAQ3a,GAAOoF,IAAK8V,MAEjLD,EAAU,kBAAC,IAAD,CAAUpE,OAAK,EAAC3O,IAAG,kBAAa0O,GAAS1F,QAASlD,KAAK8M,cAAepK,MAAO,4BAAQzB,UAAWC,KAAQmM,gBAClGrN,KAAKpO,MAAMmb,QAAUtH,IAAKC,EAAE,cAAgBD,IAAKC,EAAE,gBACxC,KAC5B,kBAAC,IAAD,CAAS4H,OAAO,cAehCZ,GAAqBa,aAAe,CAClChW,GAAIiW,IAAUC,OAAOC,YAER9S,mBAAQ,KAAM,CAC3BmQ,sBACA6B,oBCzFiC,CAAC7c,EAAMmS,IAAY,CAACpK,EAAU6D,KAC/D,MAAM/J,EAAQ+J,IACRgS,EAAe1C,IAAYlb,GAAMmb,SACjChW,EAAiBgV,GAAsBtY,GAAOsD,eAC9C0Y,EAAqB1Y,EAAe2Y,UAAU7b,GAAQA,EAAKjC,OAASA,GAC1E,IAAI+d,EAEAF,GAAsB,GACxBE,EAAgB5Y,EAAe0Y,GAC/BE,EAAcH,GAAc9W,KAAKqL,GACjCpK,EAAS+T,GAAsBiC,MAE/BA,EAAgB,CACd/d,KAAMA,EACNmS,QAAS,CAACA,IAEZpK,EAASiT,GAAmB+C,ODuEjBlT,CAGZ8R,IEhEY9R,mBAAQ,KAAM,CAC3BmQ,uBADanQ,CAvBiB,EAC9BmQ,qBACAgD,eAEA,MAAMC,EAAiB,EACrBje,OACAmS,aACI,KACJ6I,EAAmB,CACjBhb,OACAmS,aAIJ,OAAO,oCACG,kBAAC,GAAD,CAAgB0G,MAAOmF,EAAS5B,SAC/B4B,EAAS3b,MAAMC,IAAIL,GAAQ,kBAAC,GAAD,CAAiBkI,IAAKlI,EAAKjC,KAAMA,KAAMiC,EAAKjC,KAAMsE,KAAMrC,EAAKqC,KAAMkV,SAAUyE,EAAehc,S,QCVpI,MAAMic,GAAkB9S,GAAS,kBAAC,IAAD,CAAY9G,KAAK,wBAAwBqO,MAAO+C,IAAKC,EAAE,6CAA8C3V,KAAK,OAAO4V,SAAUxK,EAAMwK,SAAUuI,QAAS/S,EAAM+S,QAAShb,MAAOiI,EAAMjI,QAEjN,MAAMib,WAAqBxO,IAAMC,UAC/BC,YAAY1E,GACV2E,MAAM3E,GADW,KAYnBiT,UAAY,KACVpO,KAAKC,SAAS,CACZ9H,MAAM,EACNtE,OAAQ,MAfO,KAkBnBwa,SAAW,CAACC,EAAG/N,KACbP,KAAKuO,aACLvO,KAAKC,SAAS,CACZuO,SAAUjO,EAAMkO,cAChBtW,MAAM,KAtBS,KAyBnBuW,0BAA4BvL,KAAS,KACnCnD,KAAKC,SAAS,CACZ0O,gBAAiB3O,KAAKpO,MAAMiC,QAC3BmM,KAAKuO,aACP,KA7BgB,KA8BnBK,UAAY,CAACN,EAAG/N,KACdP,KAAKC,SAAS,CACZpM,OAAQ0M,EAAMwE,OAAO7R,OACpB8M,KAAK0O,4BAjCS,KAmCnBG,yBAA2B,IAAMzC,GAAiBvY,OAAO9D,IACvD,MAAM+e,EAAW7D,IAAYlb,GAC7B,OAAOiQ,KAAKpO,MAAMQ,OAAS4N,KAAKpO,MAAMQ,MAAM0c,EAASC,gBACpD1c,IAAItC,IACL,MAAM+e,EAAW7D,IAAYlb,GACvBif,EAAYC,YAAoBlf,GAChCmf,EAAWlP,KAAKpO,MAAMQ,MAAM0c,EAASC,cACrC9B,EAAUiC,EAAS/Z,OAAS6Z,EAC5B5c,EAAQ4N,KAAKpO,MAAMud,WAAWrV,IAAIgV,EAASvd,IAAM2d,EAAWA,EAASE,MAAM,EAAGJ,GACpF,OAAO,kBAAC,GAAD,CAAsB9U,IAAKnK,EAAMA,KAAMA,EAAM6Y,MAAOkG,EAASO,YAAajd,MAAOA,EAAO4a,mBAAoBhN,KAAKuO,WAAYtB,QAASA,MA5C5H,KA8CnBqC,qBAAuB,IAAMpD,GAAY7Z,IAAI0b,GAAY,kBAAC,GAAD,CAAkB7T,IAAK6T,EAASxc,GAAIwc,SAAUA,KA9CpF,KA+CnBwB,cAAgB,IAAMvP,KAAK6O,2BAA2BW,OAAOxP,KAAKsP,wBA/C/C,KAgDnBf,WAAave,UACX,GAAID,EAAM,CACR,MAAMof,EAAanP,KAAKpO,MAAMud,WAE1BA,EAAWrV,IAAI/J,GACjBof,EAAWvR,OAAO7N,GAElBof,EAAWM,IAAI1f,GAGjBiQ,KAAKC,SAAS,CACZkP,oBAGFnP,KAAKC,SAAS,CACZkP,WAAY,IAAIO,MAIpB,IAAIC,EAAc,YAEd,IAAI3P,KAAKpO,MAAMud,WAAWvb,UAAUuB,SACtCwa,GAAe,QAAU,IAAI3P,KAAKpO,MAAMud,WAAWvb,UAAUvE,KAAK,UAGpE,MAAMwE,EAASmM,KAAKpO,MAAM+c,gBAAX,WAAiC3O,KAAKpO,MAAM+c,iBAAoB,GAC/E3O,KAAKoN,QAAQ7V,GAAGC,IAAIC,SAASC,IAA7B,sBAAgD7D,GAAhD,OAAyD8b,IAAerY,KAAKsT,GAAY5K,KAAKC,SAAS,CACrG7N,MAAOwY,KACLjT,MAAMzH,QAAQO,QA1ElBuP,KAAKpO,MAAQ,CACX4c,SAAU,KACVrW,MAAM,EACNgX,WAAY,IAAIO,IAChBtd,WAAOoG,EACP3E,OAAQ,GACR8a,gBAAiB,IAuErBtN,SACE,OAAO,oCACK,kBAAC4M,GAAD,CAAiB/a,MAAO8M,KAAKpO,MAAMiC,OAAQ8R,SAAU3F,KAAK4O,UAAWV,QAASlO,KAAKqO,WACnF,kBAAC,KAAD,CAASpN,UAAU,0BAA0B9I,KAAM6H,KAAKpO,MAAMuG,KAAMmD,QAAS0E,KAAKoO,UAAWI,SAAUxO,KAAKpO,MAAM4c,SAAUoB,aAAc,CAClJC,WAAY,OACZC,SAAU,UACTC,gBAAiB,CAClBF,WAAY,OACZC,SAAU,OACTpV,MAAO,CACRmG,OAAQ,QACPmP,WAAY,CACbtV,MAAO,CACL6I,MAAO,UAER0M,kBAAkB,EAAMC,qBAAqB,EAAMC,qBAAqB,GAC7D,kBAAC,IAAD,CAAMC,SAAU,SAAUpQ,KAAKuP,oBAYnDpB,GAAaZ,aAAe,CAC1BhW,GAAIiW,IAAUC,OAAOC,YAERS,U,sBCnHR,MAAMkC,GAAe,EAC1Bhc,OACAE,cACA+b,gBACAC,yBAUO,6BAAStP,UAAWC,KAAQsP,SACzB,yBAAKvP,UAAWC,KAAQuP,kBACpB,kBAAC,IAAD,CAAYxP,UAAWC,KAAQ0H,MAAOvU,KAAK,wBAAwBqO,MAAO+C,IAAKC,EAAE,mBAAoB3V,KAAK,OAAO4V,SAV3G,CAAC2I,EAAG/d,KACtB+f,EAAc/f,EAAEwU,OAAO7R,QAS6HA,MAAOmB,EAAMmR,YAAaC,IAAKC,EAAE,wBACzK,kBAAC,IAAD,CAAezE,UAAWC,KAAQ3M,YAAaF,KAAK,8BAA8BqO,MAAO+C,IAAKC,EAAE,yBAA0BC,SAP9G,CAAC2I,EAAG/d,KAC5BggB,EAAoBhgB,EAAEwU,OAAO7R,QAMsIA,MAAOqB,KAElK,yBAAK0M,UAAWC,KAAQwP,cACpB,kBAAC,GAAD,QAUhBL,GAAajO,aAAe,CAC1B/N,KAAM,GACNE,YAAa,IAGf,MAQMyT,GAAqB,CACzBsI,cNjBiCpd,IAAK,CACtCnD,KF/B4B,iBEgC5BmD,UMgBAqd,oBNduCrd,IAAK,CAC5CnD,KFlCkC,uBEmClCmD,WMca0H,mBAZShJ,IACtB,MAAM+e,EAAoBrd,YAAS4W,GAAsBtY,IACzD,MAAO,CACLyC,KAAMsc,EAAkBtc,KACxBE,YAAaoc,EAAkBpc,cAQKyT,GAAzBpN,CAA6CyV,I,iECvDrD,MAAMO,GAAY,IAAM,yBAAK/P,OAAO,KAAK0B,QAAQ,YAAYgB,MAAM,KAAKjB,MAAM,8BAC7E,0BAAMlO,EAAE,wOAAwOoO,KAAK,aAEhPqO,GAAe,IAAM,yBAAKhQ,OAAO,KAAK0B,QAAQ,YAAYgB,MAAM,KAAKjB,MAAM,6BAA6B5H,MAAO,CAC1H4S,OAAQ,kBAGF,0BAAMlZ,EAAE,kIAAkIoO,KAAK,UAAUsO,SAAS,UAAUC,UAAU,sBAEjLC,GAAU,IAAM,yBAAK1O,MAAM,6BAA6BzB,OAAO,KAAK0B,QAAQ,YAAYgB,MAAM,KAAKf,KAAMZ,IAAO8G,SACrH,0BAAMtU,EAAE,gBAAgBoO,KAAK,SAC7B,0BAAMpO,EAAE,wD,0BCJhB,MAAM6c,GAAe,EACnBnS,sBACA/H,YACAma,yBACAC,gBACAC,mBACA9V,WACC8R,KACD,MAAO3W,EAAS4a,GAAcC,mBAASJ,GAEjCK,EAAgB,EACpBC,cACApf,YAEAif,EAAW,CACT,CAACG,GAAcpf,KAIbqf,EAAkB,EACtBD,cACAE,sBAEA,MACMC,GADUlb,EAAQ+a,IAAgB,IAChB3d,OAAO7B,IAAS0f,EAAgBvgB,SAASa,EAAKT,KACtE8f,EAAW,2BAAK5a,GAAN,IACR,CAAC+a,GAAcG,MAIbC,EAAiB,EACrBJ,cACAK,cAEA,MAAMC,EAAUrb,EAAQ+a,IAAgB,GAClCO,EAAgBF,EAAQxf,IAAId,GAAMugB,EAAQhb,KAAK9E,GAAQA,EAAKT,KAAOA,IACzE8f,EAAW,2BAAK5a,GAAN,IACR,CAAC+a,GAAcO,MA2CnB,OAAO,oCACIhb,EAAUxF,IAAM,kBAAC,IAAD,CAAO+J,QAASA,EAASgK,SAAS,MAAM0M,OAAK,GACtD,kBAAC,IAAD,KAAajb,EAAU1C,MACvB,kBAAC,IAAD,KA1BU,MAC1B,MAAM4d,EAAc,CAClB1a,GAAI6V,EAAQ7V,GACZ2a,SAAUX,EACVY,WAAYV,EACZW,UAAWR,GAEPS,EAAgB5b,EAAQM,EAAUxF,KAAO,GAE/C,OAAQwF,EAAUxF,IAChB,KAAKyE,KAED,OAAO,kBAAC,KAAD,CAAiBsc,gBAAiBD,EAAeH,SAAUD,EAAYC,WAGlF,KAAKjc,KACH,OAAO,kBAAC,KAAD,eAAkB6I,oBAAqBA,EAAqByT,QAASF,GAAmBJ,IAEjG,QACE,OAAO,kBAAC,KAAD,CAAkBI,cAAeA,EAAeb,YAAaza,EAAUxF,GAAI2gB,SAAUD,EAAYC,SAAU9E,QAAS6E,EAAY1a,OAO5Gib,IACf,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQC,WAAS,EAACvP,QAAS5H,GACtBmK,IAAKC,EAAE,WAEZ,kBAAC,IAAD,CAAQgN,SAAO,EAACxP,QAhDvB,KACjB,MAAM3R,EAAKwF,EAAUxF,GACfohB,EAAclc,EAAQlF,GAExBohB,GAAeA,EAAYxd,OAC7Bgc,EAAc,CACZ5f,KACA2B,MAAO,IAAIyf,KAGbvB,EAAiB7f,GAGnB+J,EAAQ/J,KAoCqBkU,IAAKC,EAAE,iBAgBxCuL,GAAa1D,aAAe,CAC1BhW,GAAIiW,IAAUC,QAOD7S,mBAJShJ,IAAK,CAC3Bsf,uBAAwB7a,GAAoBzE,KAGN,CACtCuf,cjDzH6Btd,IAAM,CACnC9D,KDA6B,kBCC7B8D,WiDwHAud,iBAAkBpa,IAFL4D,CAGZqW,IC9HI,MAEM2B,GAAuC,GAiB7C,MAAMC,GAA2BjhB,GAASA,EAAMkhB,qBClB1CC,GAA4B7f,IAAK,CAC5CnD,KDFwC,6BCGxCmD,UCwDa0H,mBAfShJ,IAAK,CAC3BkN,oBAAqBI,GAAgCtN,GACrDmF,UAAW8b,GAAyBjhB,GACpCuE,WAAYD,GAAetE,GAC3Bsf,uBAAwB7a,GAAoBzE,KAWN,CACtCohB,0BDvDyC,MACzCjjB,KDL0C,iCE4D1CkjB,wBAAyBF,IAFZnY,CA5CQO,IACrB,MAAO+X,EAAaC,GAAkB7B,oBAAS,GACzC8B,EAAMC,iBAAO,MAEbC,EAAgB,KACpBH,GAAe,GACfhY,EAAM6X,6BAOR,OAAO,oCACG,0BAAMI,IAAKA,GACP,kBAAC,IAAD,CAAQlQ,QAAS,IAAMiQ,GAAe,IACjC1N,IAAKC,EAAE,cACR,kBAAC,KAAD,QAGPwN,GAAe,kBAAC,IAAD,CAASK,eAAgBD,EAAeE,UAAWJ,EAAKK,OAAO,EAAMC,UAAU,gBACvF,kBAAC,KAAD,CAAiBhZ,MAAO,CACpC6I,MAAO,SACNpN,WAAYgF,EAAMhF,WAAYwd,iBAdbpiB,IACtB4J,EAAM8X,wBAAwB9X,EAAMhF,WAAWW,KAAKC,GAAaA,EAAUxF,KAAOA,KAaZqiB,YAAajgB,OAAO+C,KAAKyE,EAAM+V,2BAE3F5Y,KAAQ6C,EAAMpE,WAAoI,KAAvH,kBAAC,GAAD,CAAc+H,oBAAqB3D,EAAM2D,oBAAqB/H,UAAWoE,EAAMpE,UAAWuE,QAASgY,O,sBCrB5I,MAAMO,GAAe,CAAC1Y,EAAOiS,KAC3B,MAAO0G,EAAmBC,GAAwBzC,oBAAS,IACpD0C,EAAqBC,GAA0B3C,oBAAS,IACxD4C,EAAaC,GAAkB7C,mBAAS,OACzC,GACJ/f,EADI,KAEJ8C,EAFI,YAGJE,EAHI,OAIJQ,EAJI,MAKJ2F,EALI,gBAMJlF,EANI,QAOJzB,EAPI,yBAQJqgB,EARI,sBASJC,GACElZ,EAEEmZ,EAAsB,IAAML,GAAwBD,GAEpDO,EAAoB,IAAMR,GAAsBD,GAMhDU,EAAa7gB,OAAO8N,OAAO,GAAI/G,EAAMkO,MAAO,CAChD6L,OAAQ,UACRC,WAAY,OACZjQ,IAAK,QAEDpC,EAAWtO,EAAUgP,KAAO4R,KAElC,GAAIT,EACF,OAAO,kBAAC,IAAD,CAAUjR,GAAIiR,IAGvB,MAAMU,EAA2Bpf,EAAkBiQ,IAAKC,EAAE,oBAAsBD,IAAKC,EAAE,oBAOjFmP,EAA8B9gB,EAAU0R,IAAKC,EAAE,oBAAsBD,IAAKC,EAAE,kBAO5EoP,EAAYC,sBACZC,EAAa1hB,YAASyB,GAC5B,OAAO,oCACG,yBAAKkM,UAAWC,KAAQ+T,UACpB,0BAAMva,MAAO8Z,GAAangB,GAC1B,yBAAK4M,UAAWC,KAAQgU,SACpB,yBAAKjU,UAAWC,KAAQiU,aAAcjS,QAASkR,GAC3C,kBAAC/R,EAAD,CAAU3H,MAAO,CAC7B8H,KAAMZ,IAAO8G,YAGL,yBAAKzH,UAAWC,KAAQkU,OACnBJ,EAAWK,OAAS,kBAAC,IAAD,CAAMpU,UAAWC,KAAQoU,SAAUrS,GAAE,WAAM1R,EAAN,UAClD,kBAAC,IAAD,KAASkU,IAAKC,EAAE,UACV,KACbsP,EAAWO,OAAS,kBAAC,IAAD,CAAQrS,QAASoR,GAC7B7O,IAAKC,EAAE,UACA,KAChB,kBAAC,GAAD,MACA,0BAAM0N,IAAK0B,GACP,kBAAC,IAAD,CAAQ5R,QAASqR,GACb,kBAAC3D,GAAD,MACA,0BAAMlW,MAAO,CAC7B8a,WAAY,QAES/P,IAAKC,EAAE,YAKvBoO,GAAqB,kBAAC,IAAD,CAASN,UAAWsB,EAAWpB,UAAU,eAAeH,eAAgBgB,GACtF,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAU1L,OAAK,EAACnG,MAAOmS,EAA6B3R,QArCnD,KAC7BkR,IACAG,OAoC4B,kBAAC,IAAD,CAAU1L,OAAK,EAACnG,MAAOkS,EAA0B1R,QA7CnD,KAC1BmR,IACAE,OA4C4B,kBAAC,IAAD,CAAU1L,OAAK,EAACnG,MAAO+C,IAAKC,EAAE,UAC1B,kBAAC,IAAD,CAAUmD,OAAK,EAACnG,MAAO+C,IAAKC,EAAE,oBAAqBxC,QAhEjE,IAAMiR,EAAe,GAAD,OAAI5iB,EAAJ,mBAiEN,kBAAC,IAAD,CAAUsX,OAAK,EAACnG,MAAO+C,IAAKC,EAAE,qBAAsBxC,QA/DpE,IAAMiR,EAAe,GAAD,OAAI5iB,EAAJ,sBAqE3BiE,EAAkB,yBAAKyL,UAAU,wBAAwBvG,MAAO/G,OAAO8N,OAAO,CACrFgU,WAAY,MACZ1T,cAAe,OACdrH,EAAMnG,YAAcA,EAEnB,GAFiC,CACnCwP,MAAO,UAEQxP,GAAekR,IAAKC,EAAE,mBAClB,KACZnU,EAAK,kBAAC,KAAD,CAAegG,GAAI6V,EAAQ7V,GAAIhG,GAAIA,EAAIxB,KAAK,YAAYoI,KAAM6b,EAAqB0B,eAAgBpB,IAA0B,OAe/IT,GAAazR,aAAe,CAC1B/N,KAAM,GACNE,YAAa,GACbR,SAAS,EACTyB,iBAAiB,GAEnBqe,GAAatG,aAAe,CAC1BhW,GAAIiW,IAAUC,QAiCD7S,mBA9BShJ,IACtB,MAAML,EAAKoE,EAAe/D,GACpBkC,EAAYT,EAAkBzB,EAAOL,IAAOuB,EAClD,MAAO,CACLvB,KACA8C,KAAMP,EAAUQ,YAChBC,YAAaT,EAAUU,mBACvBU,eAAgBzB,EAAmB7B,GACnC4D,gBAAiBK,GAA4BjE,GAC7CmC,QAASD,EAAUC,QACnBgB,OAAQjB,EAAUiB,SAoBkB,KAhBrB,CAACmT,EAAYC,EAAeC,KAC7C,MAAM,GACJ7W,EADI,QAEJwC,EAFI,gBAGJyB,GACE0S,GACE,SACJpQ,GACEqQ,EACJ,OAAO,uCAAKD,GACPE,GADL,IAEEgM,yBAA0B,IAAMtc,EAAS2F,GAAelM,GAAKwC,IAC7DsgB,sBAAuB,IAAMvc,EAASmF,IAAwBzH,OAInDoF,CAA2CiZ,I,QCvK1D,MAAMnZ,GAAQ,CACZkO,MAAO,CACLtD,SAAU,WACVd,SAAU,GACV7J,WAAY,IACZoJ,MAAOnC,IAAO+T,MACdC,SAAU,IAEZrhB,YAAa,CACXiQ,SAAU,GACVT,MAAOnC,IAAO8B,UAiBHmS,OAbE,EACfC,UAEO,yBAAK7U,UAAU,mBAAmBvG,MAAO,CAC9C+M,QAAS,uBAEAqO,EAAO,kBAAC,GAAD,CAAcpb,MAAOA,KAAY,kBAAC,GAAD,CAAcA,MAAOA,M,sDCZ1E,MAAMqb,WAAsBnW,YAG1BC,YAAY1E,EAAOiS,GACjBtN,MAAM3E,GADoB,KAF5B6a,kBAAoB,KAEQ,KAK5BC,mBAAqBC,IAMnB,MAAMC,EAAgBnW,KAAK7E,MAAMnJ,OAASkkB,EAAUlkB,KAC9CokB,EAAiBF,EAAU5f,cAAgB0J,KAAK7E,MAAM7E,YACtD+f,EAAM/iB,YAAS0M,KAAK7E,MAAMmb,eAC1BC,EAAUjjB,YAAS4iB,EAAUI,eAC7BE,EAAaH,EAAI9kB,KAAOglB,EAAQhlB,IAAM8kB,EAAII,aAAeF,EAAQE,WACvE,OAAON,IAAkBK,GAAcJ,IAhBb,KAkB5BM,aAAeR,IACb,GAAIS,KAAgC3W,KAAK7E,MAAMmb,cAAcG,YAAczW,KAAK7E,MAAMnJ,KAAKjC,OAASiQ,KAAKiW,mBAAmBC,GAAY,CACtI,MAAMK,EAAUjjB,YAAS4iB,EAAUI,eAC7BM,EAAa5W,KAAK7E,MAAMmb,cACxBO,EAAgBD,EAAWH,aAAeF,EAAQE,YAAcG,EAAWH,aAAezW,KAAK7E,MAAMnJ,KAAKjC,MAE5G8mB,GAAiB7W,KAAK7E,MAAM7E,cAAgB4f,EAAU5f,eACxDqgB,KAAsB3W,KAAK7E,MAAMnJ,KAAMukB,EAAQE,YAAczW,KAAK7E,MAAMnJ,KAAKjC,MAC7E4mB,KAAmB3W,KAAK7E,MAAMnJ,KAAMgO,KAAK7E,MAAMmb,cAAe,CAC5DQ,YAAa9W,KAAKgW,kBAClBS,WAAYI,EAAgBD,EAAWH,WAAa,UA5BhC,KAwD5BM,cAAgB,IAAM/W,KAAK7E,MAAMmb,cAAcG,YAAczW,KAAK7E,MAAMnJ,KAAKjC,KAtD3EiQ,KAAKzI,GAAK6V,EAAQ7V,GAgCpB4P,oBA5CwB5P,MA6CtByI,KAAKgW,mBA7CiBze,EA6CqByI,KAAKzI,GA5C3C,CACLyf,QAASC,YAAW1f,GACpB2f,KAAM3f,EAAGC,IAAIC,SAAS0f,eAAeC,gBA4CjCT,KAAgC3W,KAAK7E,MAAMmb,cAAcG,YAAczW,KAAK7E,MAAMnJ,KAAKjC,OACzF4mB,KAAmB3W,KAAK7E,MAAMnJ,KAAMgO,KAAK7E,MAAMmb,cAAe,CAC5DQ,YAAa9W,KAAKgW,kBAClBS,WAAYzW,KAAK7E,MAAM0b,cAAgB7W,KAAK+W,gBAAkB,KAC9DM,QAASrX,KAAK7E,MAAMkc,UAK1BC,mBAAmBpB,GACjBlW,KAAK0W,aAAaR,GAGpBqB,uBACMZ,KAAgC3W,KAAK7E,MAAMmb,cAAcG,YAAczW,KAAK7E,MAAMnJ,KAAKjC,OACzF4mB,KAAsB3W,KAAK7E,MAAMnJ,KAAMgO,KAAK+W,iBAMhD1V,SACE,MAAM,QACJH,EADI,KAEJlP,EAFI,cAGJskB,EAHI,MAIJ5b,GACEsF,KAAK7E,MAET,OAD0Bwb,KAAgCL,EAAcG,YAAczkB,EAAKjC,MAChE,yBAAKwB,GAAIimB,YAAiBxlB,EAAKT,IAAKmJ,MAAOA,IAAY,yBAAKuG,UAAWC,EAAQuW,SAC7FhS,IAAKC,EAAE,6CAMxBqQ,GAAcxI,aAAe,CAC3BhW,GAAIiW,IAAUC,QAWhBsI,GAAc3T,aAAe,CAC3B1H,MAAO,GACP1I,KAAM,GACNsE,YAAa,GACb+gB,QAAS,GACTf,cAAe,IAEFP,U,sBCvGf,MAAM2B,WAA2B/X,IAAMC,UACrCC,YAAY1E,GACV2E,MAAM3E,GACN6E,KAAKpO,MAAQ,CACX+lB,YAAY,GAIhBC,kBAAkBnnB,EAAOonB,GACvB7X,KAAKC,SAAS,CACZ0X,YAAY,IAEdznB,QAAQC,IAAI,UAAWM,GACvBP,QAAQC,IAAI,SAAU0nB,GAGxBxW,SACE,OAAIrB,KAAKpO,MAAM+lB,WACN,uBAAG1W,UAAWC,KAAQ4W,WACf,0BAAM7W,UAAWC,KAAQ4B,MACrB,kBAACkO,GAAD,OAEJ,0BAAM/P,UAAWC,KAAQjJ,SACpBwN,IAAKC,EAAE,qDAKrB1F,KAAK7E,MAAMgH,UAQPuV,U,+BC7BAK,OATS,EACtBC,mBAEOA,EAAgB,yBAAK/W,UAAWC,KAAQ+W,iBAAkBD,GAAuB,K,4CCW3EE,OAXU,EACvBhV,aACI,4BAAQnT,KAAK,SAASkR,UAAWC,KAAQiX,iBAAkBjV,QAASA,EAAS0F,MAAOnD,IAAKC,EAAL,gBAClF,kBAAC,KAAD,CAAYhL,MAAO,CACvB8H,KAAMZ,IAAOwW,WCJjB,MAeMpQ,GAAqB,CACzB8D,0BAEalR,mBAAQ,KAAMoN,GAAdpN,CAlBS,EACtByd,SACAvM,2BAIO,yBAAK7K,UAAWC,KAAQ+W,iBACrB,kBAAC,GAAD,CAAkB/U,QAHH,IAAM4I,EAAsBuM,OCHxCC,OALK,IAAM,yBAAKhW,MAAM,6BAA6BzB,OAAO,KAAK0B,QAAQ,YAAYgB,MAAM,KAAKf,KAAMZ,IAAO8G,SAClH,0BAAMtU,EAAE,gBAAgBoO,KAAK,SAC7B,0BAAMpO,EAAE,sG,sBCODmkB,OANM,IAAM,yBAAKtX,UAAWC,KAAQsX,SAC3C,kBAAC,IAAD,CAAStW,QAASuD,IAAKC,EAAE,mDAAoDgO,UAAU,UACnF,kBAAC+E,GAAD,QCCZ,MAUMC,GAAa/Y,IAAMgZ,WAAW,CAAC,EAKlCvF,KAAS,IALyB,cACnCwF,EADmC,MAEnChQ,EAFmC,YAGnCiQ,GAES,EADNC,EACM,wDACT,MAAMC,EAhBkBF,KACjB,CACL,KAAQd,GACR,CAAClnB,GAAOmoB,GACR,CAAChoB,GAAe6nB,EAAcI,GAAgB,OAYhCC,CAAkBL,GAAaD,GAC/C,OAAO,yBAAK3X,UAAWC,KAAQiY,eAAgB/F,IAAKA,GACtC,uBAAGnS,UAAWC,KAAQkY,WAAYxQ,GACjCmQ,EAAU,kBAACA,EAAYD,GAAW,QAGnDJ,GAAWpkB,YAAc,aAMVsG,mBAAQ,KAAM,KAAM,KAAM,CACvC+d,YAAY,GADC/d,CAEZ8d,I,qFC1BH,MAAMW,GAAW,CACf7W,KAAMZ,IAAO8G,SAmFA4Q,OAhFWne,IACxB,MAAOqT,EAAU+K,GAAejI,mBAAS,OACnC,KACJtf,EADI,cAEJskB,EAFI,mBAGJkD,EAHI,GAIJjiB,EAJI,WAKJkf,GACEtb,EACEse,EAAgBC,YAAoB1nB,EAAKjC,MAEzC4pB,EAAc,KAClBC,IACAJ,EAAmBC,EAAgB/c,IAAeH,MAG9Csd,EAAc,KAClBD,IACAJ,EAAmBC,EAAgB9c,IAAcH,MAG7Csd,EAAY,KAChBF,IACAJ,EAAmB/c,MAefmd,EAAc,IAAML,EAAY,MAEhCxpB,EAAOumB,EAAcvmB,MAAQiC,EAAKjC,KAClCgqB,GAAaC,aAAcjqB,KAAUkqB,aAAelqB,IAASA,IAASmqB,MAAkBnqB,IAASoqB,KACjGC,EAA0Bjf,EAAMkf,aAAe5U,IAAKC,EAAL,oCAA6CD,IAAKC,EAAL,oCAE5F4U,EAAkB,IAAM,oCACnB7D,IAAeja,KAASia,IAAe9Z,KAAe,kBAAC,IAAD,CAAUkM,OAAK,EAACnG,MAAO+C,IAAKC,EAAE,iBAAkBxC,QAAS2W,EAAa/W,KAAM,kBAAC,KAAD,CAAWpI,MAAO2e,OACpJ5C,IAAela,KAAgBka,IAAe/Z,KAAgB,kBAAC,IAAD,CAAUmM,OAAK,EAACnG,MAAO+C,IAAKC,EAAE,iBAAkBxC,QAASyW,EAAa7W,KAAM,kBAAC,KAAD,CAAWpI,MAAO2e,OApB1IkB,YAAWvoB,EAAKjC,OAqBd0mB,IAAeha,KAAO,kBAAC,IAAD,CAAUoM,OAAK,EAACnG,MAAO+C,IAAKC,EAAE,eAAgBxC,QAAS4W,EAAWhX,KAAM,kBAAC,KAAD,CAASpI,MAAO2e,QAG7I,OAAOmB,aAAkB/D,GAAczkB,EAAKjC,MAAQ,oCAC1C,kBAAC,IAAD,CAAQ0qB,OAAK,EAAChI,WAAS,EAACvP,QAvBV,CAACoL,EAAG/N,IAAUgZ,EAAYhZ,EAAMkO,gBAwB1C,kBAACmC,GAAD,OAEHpC,GAAY,kBAAC,KAAD,CAASrW,KAAMuiB,QAAQlM,GAAWlT,QAASse,EAAapL,SAAUA,GACvE,kBAAC,IAAD,KACKuL,GAAa,oCACN,kBAACO,EAAD,MACA,kBAAC,IAAD,OAER,kBAAC,IAAD,CAAUzR,OAAK,EAAC/F,KAAM,kBAAC,KAAD,CAAYpI,MAAO,CACvD8H,KAAM,aACDE,MAAO+C,IAAKC,EAAE,0BAA2B,CAC9CiV,QAASC,YAAW5oB,EAAKjC,QACvBmZ,KAAM2R,aAAQ7oB,EAAMuF,GAAKwN,OAAO,WACpB,kBAAC,IAAD,CAAU8D,OAAK,EAAC/F,KAAM,kBAAC+N,GAAD,MAAkBnO,MAAO0X,EAAyBlX,QAnC5D,KAChC/H,EAAM2f,iBAEW,OAAbtM,GACFoL,UAkCQ,M,sBChFd,MAAMlf,GAAQ,CACZqgB,gBAAiB,CACfrT,UAAW,OACX7G,OAAQ,SAEVma,KAAM,CACJ1N,OAAQ,eACRzM,OAAQ,MACRoa,OAAQ,OACRvZ,gBAAiBE,IAAOsZ,UAI5B,MAAMC,WAAmBvb,YACvByB,SACE,MAAM+Z,EAAWC,aAAMrb,KAAK7E,MAAMnJ,MAClC,OAAO,yBAAKiP,UAAU,yBACV,wBAAIvG,MAAOA,GAAMsgB,OACjB,yBAAKtgB,MAAOA,GAAMqgB,iBACd,kBAAC,KAAD,CAA0BxjB,GAAIyI,KAAKoN,QAAQ7V,GAAIvF,KAAMgO,KAAK7E,MAAMnJ,KAAMjC,KAAMiQ,KAAK7E,MAAMnJ,KAAKjC,KAAKwY,cAAehX,GAAI6pB,EAAUT,QAAQ,iBAO1JQ,GAAW5N,aAAe,CACxBhW,GAAIiW,IAAUC,OAAOC,YAKRyN,U,sBC3BAG,OANK,IACX,yBAAKra,UAAWC,KAAQqa,QACrB,kBAAC,IAAD,OCWGC,OAdIC,IACjB,IAAIC,OAAWljB,EACXmjB,OAAYnjB,EAChB,MAAO,IAAIojB,KACLF,GAAYE,EAAKzmB,SAAWumB,EAASvmB,QAAUymB,EAAKC,MAAM,CAACC,EAAKC,IAAMD,IAAQJ,EAASK,MAI3FL,EAAWE,EACXD,EAAYF,KAAMG,IAJTD,I,sBCaN,MAAMK,WAAapc,YAOxBC,YAAY1E,EAAOiS,GACjBtN,MAAM3E,GADoB,KAN5BvJ,MAAQ,CACNqqB,YAAY,EACZC,cAAc,EACdC,gBAAgB,GAGU,KA0B5BC,aAAe,CAAC9F,EAAe7f,KAC7B,IAAK9C,OAAO+C,KAAKD,GAAStB,OACxB,OAAOmhB,EAIT,MAAM+F,EAAU/F,EAAchY,KAAKjM,IAAIiqB,GAAG,eAAUA,IAE9CC,EAAajG,EAAckG,QAAQnqB,IAAIiqB,GAAG,eAAUA,IAEpDG,EAAanG,EAAc7f,QAAQpE,IAAIiqB,GAAG,eAAUA,IAkB1D,OAhBA3oB,OAAO+C,KAAKD,GAAS6F,QAAQkV,IAC3B,GAAI/a,EAAQ+a,GAAc,CACxB,IAAIkL,GAAiB,EACrB,CAACL,EAASE,EAAYE,GAAYngB,QAAQqgB,GAAoBA,EAAiB9oB,OAAOyoB,GAAOA,EAAIvlB,YAAcya,GAAalV,QAAQggB,IAClII,GAAiB,EACjBJ,EAAIlqB,MAAQqE,EAAQ+a,MAGjBkL,GACHD,EAAW5lB,KAAK,CACdE,UAAWya,EACXpf,MAAOqE,EAAQ+a,QAKhB,2BAAK8E,GAAZ,IACEhY,KAAM+d,EACNG,QAASD,EACT9lB,QAASgmB,KAzDe,KA4D5BG,aAAepB,GAAW,IAAMqB,QA5DJ,KA6D5B7G,kBAAoB,KA7DQ,KA8D5B8G,mBAAqB,KACnB,MAAMrG,EAAazW,KAAK+W,gBAClBT,EAAgBtW,KAAK+c,+BAA+B/c,KAAK7E,MAAMmb,cAAetW,KAAK7E,MAAMnJ,KAAKjC,KAAM0mB,GAE1G,IAAKH,EACH,OAAO,yBAAKrV,UAAWC,KAAQuW,SAChBhS,IAAKC,EAAE,uBAIxB,MAAMsX,EAAmBhd,KAAK7E,MAAMnJ,KAAKirB,eAAiBjd,KAAKkd,UAAUC,QAAQC,aLlFjD,GKkFuFC,GACjHliB,EAAK,2BAAQ6E,KAAK7E,OAAb,IACT0b,eAAgB5lB,EAAW+O,KAAK7E,MAAMyd,eACtCtC,gBACApV,aACAxG,MAAOsF,KAAKsd,wBAAwBN,EAAkBhd,KAAKud,WAAavd,KAAKud,WAAWC,aAAe,KAAMvsB,EAAW+O,KAAK7E,MAAMyd,gBAAkBxnB,EAAY4O,KAAK7E,MAAMyd,kBAG9K,OAAQnC,GACN,KAAK7M,IACL,KAAKpN,IACL,KAAKD,IAED,OAAO,qCACSyD,KAAKpO,MAAMuqB,gBAAkB,yBAAKzhB,MAAOS,EAAMT,OACzC,kBAAC,GAAD,OAER,kBAAC,KAAD,CAAqBnD,GAAIyI,KAAKzI,GAAI+e,cAAetW,KAAKyd,qBAAqBnH,EAAenb,EAAM7E,aAAconB,kBAAmB1d,KAAK0d,kBAAmBC,cAAc,EAAMjjB,MAAOS,EAAMT,SAI5M,KAAK+B,IAED,GAAItB,EAAMnJ,KAAKjC,OAAS0M,IAAK,CAG3B,MAAMmhB,EAAWziB,EAAMmb,cAAcsH,SAASvrB,IAAIiqB,GAC5CA,EAAIuB,MAAM1sB,SAAS,aAAemrB,EAAIuB,MAAM1sB,SAAS,SAChD6O,KAAKyd,qBAAqBnB,EAAKnhB,EAAM7E,aAGvCgmB,GAETnhB,EAAMmb,cAAN,2BAA2Bnb,EAAMmb,eAAjC,IACEsH,kBAMFziB,EAAMmb,cAAgBtW,KAAKyd,qBAAqBtiB,EAAMmb,cAAenb,EAAM7E,aAM7E,OAHA6E,EAAMkc,QAAN,2BAAqBlc,EAAMkc,SAA3B,IACEyG,WAAW,IAEN,kBAAC,GAAkB3iB,GAG9B,QAGI,OADAA,EAAMmb,cAAgBtW,KAAKyd,qBAAqBtiB,EAAMmb,cAAenb,EAAM7E,aACpE,kBAAC,GAAkB6E,KA5HN,KAgI5BuiB,kBAAoB,KAClB1d,KAAKC,SAAS,CACZkc,gBAAgB,KAlIQ,KAqI5BrB,eAAiB,KACf9a,KAAKC,SAAS,CACZgc,YAAajc,KAAKpO,MAAMqqB,YACvBjc,KAAK7E,MAAM4iB,qBAAqB/d,KAAK7E,MAAMnJ,KAAKT,MAxIzB,KA0I5BioB,mBAAqBzpB,IACnBA,IAASiQ,KAAK+W,iBAAmB/W,KAAK7E,MAAMqe,mBAAmBxZ,KAAK7E,MAAMmb,cAAc/kB,GAAIxB,IA3IlE,KA6I5BgnB,cAAgB,IAAM/W,KAAK7E,MAAMmb,cAAcG,YAAczW,KAAK7E,MAAMnJ,KAAKjC,KA7IjD,KA8I5ByqB,kBAAoB,IAAM7D,KAAgC3W,KAAK7E,MAAMnJ,KAAMgO,KAAK7E,MAAMmb,eA9I1D,KA+I5B0H,gBAAkB,CAAChB,EAAkBiB,EAAgBC,KAE5C,CACLrd,OAFaqd,GAAiBD,GAAqCjB,IA9IrEhd,KAAKzI,GAAK6V,EAAQ7V,GAClByI,KAAKud,WAAa5d,IAAMoV,YACxB/U,KAAKkd,UAAYvd,IAAMoV,YACvB/U,KAAKyd,qBAAuBjC,GAAWxb,KAAKoc,cAC5Cpc,KAAK+c,+BAAiCvB,GAAW7E,MACjD3W,KAAKsd,wBAA0B9B,GAAWxb,KAAKge,iBAGjD,0BACEhe,KAAK7E,MAAMgjB,4BACLxH,KAAoB3W,KAAK7E,MAAMnJ,OACrCgO,KAAKC,SAAS,CACZic,cAAc,IAIlB5E,mBAAmBpB,EAAWkI,IACxBA,EAAUjC,gBAAmBjG,EAAUI,gBAAkBtW,KAAK7E,MAAMmb,eAAiBJ,EAAU5f,cAAgB0J,KAAK7E,MAAM7E,aAC5H0J,KAAKC,SAAS,CACZkc,gBAAgB,IAiItB9a,SACE,MAAM,KACJrP,EADI,cAEJ4mB,EAFI,YAGJtiB,GACE0J,KAAK7E,OACH,WACJ8gB,GACEjc,KAAKpO,MACHomB,EAAgB,kBAAC,GAAD,CAAmBhmB,KAAMA,EAAMskB,cAAetW,KAAK7E,MAAMmb,cAAekD,mBAAoBxZ,KAAKwZ,mBAAoBsB,eAAgB9a,KAAK8a,eAAgBvjB,GAAIyI,KAAKzI,GAAIkf,WAAYzW,KAAK+W,gBAAiBsD,aAAcra,KAAKpO,MAAMqqB,aACxP,OAAO,oCACK,kBAAC,GAAD,CAAYrT,MAAO+N,KAAsB3kB,GAAOqmB,OAAQrmB,EAAKT,GAAIymB,cAAeA,EAAe5E,IAAKpT,KAAKkd,UAAWtE,cAAeA,EAAeC,YAAa7mB,EAAKqsB,YACpK,kBAAC,GAAD,KACI,yBAAKnkB,IAAK8F,KAAK4c,aAAatmB,GAAc2K,UAAU,yBAAyBmS,IAAKA,GAAOpT,KAAKud,WAAanK,GACtGpT,KAAKpO,MAAMsqB,cAAgBlc,KAAK8c,uBAGxCzrB,EAAWunB,IAAkBqD,EAAa,kBAAC,GAAD,CAAYjqB,KAAMA,IAAW,OAKxFgqB,GAAKzO,aAAe,CAClBhW,GAAIiW,IAAUC,QAWhBuO,GAAK5Z,aAAe,CAClBpQ,KAAM,GACN+rB,qBAAsBlY,SAASC,UAC/BwQ,cAAe,IAgBF1b,mBAbS,CAAChJ,EAAOwW,KAEvB,CACL9R,YAFmBrF,EAAWmX,EAASwQ,eAA8CxiB,GAA7BC,GAAoBzE,GAG5E0kB,cAAe7d,GAAkB7G,EAAO+kB,KAA8BvO,EAASpW,MAAMT,MAI9DuG,IAAQ,CACjCqmB,sBAAuB7H,GAAiBxe,EAASc,GAAmB0d,IACpEkD,mBAAoB,CAACjoB,EAAIxB,EAAM0mB,IAAe3e,E5D/NJ,EAACvG,EAAIklB,KAChC,CACb1mB,KDFyC,gCCGzCwB,KACAklB,e4D2NqD6H,CAA6B/sB,EAAIxB,MAG3E6K,CAA6CohB,ICrO5D,MAAMthB,GAAQ,CACZgH,gBAAiBE,IAAO2c,QACxBtD,OAAQ,OACRpa,OAAQ,MACRyM,OAAQ,mBAKKkR,OAFF,IAAM,wBAAI9jB,MAAOA,K,QCE9B,MACM+jB,GAAe,CACnB,QAAW,UACXC,kBAAmB,aACnBC,OAAQ,SACRC,OAAQ,UAEJlkB,GAAQ,CACZ4C,KAAM,CACJuhB,cAAe,OACfC,YAAa,OAEfC,OAAQ,CACN5Y,UAAW,SACX3B,SAAU,OACVwa,aAAc,OAEhBC,OAAQ,CACNza,SAAU,OACV0a,WAAY,OACZ5R,OAAQ,EACRvJ,MAAOnC,IAAO8B,SAEhByb,QAAS,CACPpb,MAAOnC,IAAO8B,QACdc,SAAU,OACV0a,WAAY,OACZE,UAAW,OACXC,SAAU,WAId,MAAMC,WAAqB1f,YAAW,eAAD,oBACnChO,MAAQ,CACNH,SAAU,IAFuB,KAYnC8tB,eAAiB5U,IACf,MAAM6U,EAAgB7U,EAAG,YAAQA,EAAI8U,YAAZ,YAA2B9U,EAAIpZ,IAAO,GAC/D,MAAM,GAAN,OAAUyO,KAAKoN,QAAQ4J,QAAvB,+BAAqDwI,IAdpB,KAgBnCE,iBAAmB/U,IACjB,MAAMgV,EAAYhV,EAAIzT,SAASkY,OAAO,GAAG,GACzC,OAAOuQ,EAAUV,OAASU,EAAUV,OAAO3qB,YAAc,IAlBxB,KAoBnCsrB,gBAAkB,KAChB,MAAMC,EAAYxuB,EAAW2O,KAAK7E,MAAMyd,eAAiB,OAAS,KAClE,OAAO5Y,KAAK7E,MAAMjE,SAAS7E,IAAIsY,IAC7B,MAMMsU,EA7DI,YA6DKtU,EAAI8U,YAA0Bzf,KAAK0f,iBAAiB/U,GAAO8T,GAAa9T,EAAI8U,aACrFK,EAAanV,EAAIoV,KAAkB,KAAX,SACxBJ,EAAYhV,EAAIzT,SAASkY,OAAO,GAAG,GACnC4Q,EAAUL,EAAU7qB,YAC1B,OAAO,wBAAImM,UAAS,uBAAkB4e,GAAa3lB,IAAKyQ,EAAIpZ,GAAI2R,QAV1C,KAChB7R,EAAW2O,KAAK7E,MAAMyd,iBACxBlpB,SAASuwB,SAAS/W,KAAOlJ,KAAKuf,eAAe5U,MASnC,uBAAG1J,UAAS,wBAAmB6e,IAC1BnV,EAAIrW,YADT,KACwBqW,EAAIuV,aAD5B,KAGA,uBAAGxlB,MAAOA,GAAMukB,QACXA,EADL,MACgBkB,YAAWH,EAAShgB,KAAKpO,MAAMH,WAE/C,uBAAGiJ,MAAOA,GAAMykB,SAAUQ,EAAUztB,UAnCtD,0BACE,MAAMT,QAAiBuO,KAAKoN,QAAQ7V,GAAGqC,YAAYwmB,aAAa1oB,IAAI,eACpEsI,KAAKC,SAAS,CACZxO,aAqCJ4P,SACE,OAAO,oCACK,kBAAC,GAAD,CAAYuH,MAAOnD,IAAKC,EAAE,YAAa2S,OAAQrY,KAAK7E,MAAMnJ,KAAKT,GAAIqnB,cAAe5Y,KAAK7E,MAAMyd,cAAeC,YAAa7Y,KAAK7E,MAAMnJ,KAAKqsB,YACzI,kBAAC,GAAD,MACCre,KAAK7E,MAAMjE,SAAS/B,OAAS,GAAK,yBAAK8L,UAAU,0BAC1C,wBAAIvG,MAAOA,GAAM4C,MAAO0C,KAAK4f,mBAC7B,yBAAKllB,MAAOA,GAAMqkB,QACd,uBAAG7V,KAAMlJ,KAAKuf,kBACT9Z,IAAKC,EAAE,yBAcxC4Z,GAAa/R,aAAe,CAC1BhW,GAAIiW,IAAUC,OACduJ,QAASxJ,IAAU6S,QAUNC,OADW1lB,YANFhJ,IACf,CACLsF,SAAUvD,OAAOC,OAAOqD,GAAiBrF,MAIM,KAAzBgJ,CAA+B0kB,I,qBC7F1CiB,OAtBUplB,GAAS,oCAC1B,kBAAC,GAAD,CAAYyN,MAAOnD,IAAKC,EAAE,qCAAsC,CACpE3V,KAAMoL,EAAMnJ,KAAKjC,OACfsoB,OAAQld,EAAMnJ,KAAKT,GAAIqnB,cAAezd,EAAMyd,cAAeC,YAAa1d,EAAMnJ,KAAKqsB,YACjF,yBAAK3jB,MAAO,CAChBkN,QAAS,OACT4Y,eAAgB,SAChBC,WAAY,SACZ5f,OAAQ,QAEA,kBAAC,KAAD,CAAmBnG,MAAO,CAChC6I,MAAO,IACP1C,OAAQ,IACR6f,MAAO,UACN3c,MAAM,eCNE4c,OAVS,EACtB1f,eACI,yBAAKA,UAAWA,EAAWqB,MAAM,6BAA6BC,QAAQ,YAAYC,KAAMZ,IAAOgf,SAC7F,0BAAMxsB,EAAE,gBAAgBoO,KAAK,SAC7B,0BAAMpO,EAAE,oICMDysB,OAVI,EACjB5f,eACI,yBAAKA,UAAWA,EAAWqB,MAAM,6BAA6BiB,MAAM,KAAK1C,OAAO,KAAK0B,QAAQ,YAAYC,KAAMZ,IAAOwW,QACpH,0BAAMhkB,EAAE,kFACR,0BAAMA,EAAE,gBAAgBoO,KAAK,U,0BCMrC,MAAMse,GAAe9uB,GAAQiZ,IAAYjZ,EAAKjC,MAAMsf,YAI9C0R,GAAW,CAAC5lB,EAAOiS,KACvB,MAAM,KACJpb,EADI,cAEJ4mB,EAFI,uBAGJoI,GACE7lB,EACE8lB,EARgBjvB,IAAQiD,YAAQjD,EAAKiZ,IAAYjZ,EAAKjC,MAAMmb,WAAWrX,OAAO,CAAC7B,EAAMkvB,EAAOC,IAAUA,EAAMtT,UAAUuT,GAAMA,EAAG7vB,KAAOS,EAAKT,MAAQ2vB,GAQpIG,CAAgBrvB,GAgBrC,OAAO,oCACG,kBAAC,GAAD,CAAY4W,MAAOkY,GAAa9uB,GAAOqmB,OAAQrmB,EAAKT,GAAIqnB,cAAeA,EAAeC,YAAa7mB,EAAKqsB,YACxG,kBAAC,GAAD,MACA,yBAAKpd,UAAU,0BACX,wBAAIA,UAAWC,KAAQ5D,MAClB2jB,EAAa5uB,IAAIivB,GAAe,wBAAIrgB,UAAWC,KAAQlP,KAAMkI,IAAKonB,EAAY/vB,IACvE,kBAACgwB,GAAD,CAAiBtgB,UAAWC,KAAQsgB,WApB9CF,KACd,MAAMG,EAAe,4BAAQxgB,UAAWC,KAAQwgB,aAAcxe,QAAS,IAAM8d,EAAuBhvB,EAAMsvB,IAC9F,kBAAC,GAAD,CAAYrgB,UAAWC,KAAQygB,cAE3C,OAAO,oCACK,uBAAG1gB,UAAWC,KAAQ8B,KAAMtI,MAAO,CAC3CqJ,MAAOnC,IAAOggB,SACb1Y,KAAMiE,YAAWnb,EAAKjC,KAAMuxB,EAAalU,EAAQ7V,KACrC+pB,EAAYjtB,MAEhBpD,EAAW2nB,GAAiB6I,EAAe,OAW/B5G,CAAQyG,SAYrCP,GAASxT,aAAe,CACtBhW,GAAIiW,IAAUC,QAED7S,mBAAQ,KAAM,CAC3BomB,uBC7DoC,CAAClT,EAAe5L,IAAYpK,IAChE,MAAM6V,EAAe1C,IAAY6C,EAAc/d,MAAMmb,SAC/C2W,EAAa/T,EAAcH,GAAc9Z,OAAO7B,GAAQA,EAAKT,KAAO2Q,EAAQ3Q,IAE9EswB,EAAW1sB,QACb2Y,EAAcH,GAAgBkU,EAC9B/pB,EAAS+T,GAAsBiC,KAE/BhW,EAASgU,GAAsBgC,MDoDpBlT,CAEZmmB,I,UE5DI,MAMMe,GAAgC,GACvCC,GAA0B,GACnBC,GAA4B,CACvCzwB,GAAI,GACJ8C,KAAM,GACNU,OAAQ,GACRR,YAAa,GACbW,eAAgB6sB,IAiGX,MAAME,GAAyBrwB,GAASA,EAAMswB,eAExCC,GAAiBvwB,IAAU0G,KAAQ1G,EAAMswB,gBAGzCE,GAA0BxwB,IAAU,IAAD,EAC9C,OAAO,UAAAqwB,GAAuBrwB,UAAvB,eAA+BsD,iBAAkB6sB,IC1GpDrnB,GAAQ,CACZ+c,QAAS,CACPhQ,QAAS,OACT4a,WAAY,WACZnD,WAAY,QAEdoD,UAAW,CACT9d,SAAU,OACV+d,YAAa,SACbhf,MAAO,MACP+J,OAAQ,SACR1F,QAAS,QACTsX,WAAY,QAEdpH,UAAW,CACTkH,aAAc,OACdxW,UAAW,SAqFA5N,mBAxBS,CAAChJ,EAAOwW,KAE9B,IAAIhW,EAGFA,EAJqB+vB,GAAevwB,GAI5BwwB,GAAwBxwB,GACvBX,EAAWmX,EAASwQ,eACrBtO,GAAuB1Y,GAEvB6B,EAAmB7B,GAG7B,MAAMI,EAAOI,EAAM0E,KAAK9E,GAAQA,EAAKT,KAAO6W,EAASpW,KAAKT,IAC1D,MAAO,CACLW,KAAMF,EAAOA,EAAKE,KAAO,KAUW,CACtC2Z,0BADajR,CAjFEO,IACf,MAAM,KACJnJ,EADI,cAEJ4mB,EAFI,KAGJ1mB,EAHI,sBAIJ2Z,GACE1Q,EAEEqnB,EAAejiB,IACnB,MAAMkiB,EAAW,2BAAQzwB,GAAR,IACfE,KAAMqO,EAAMwE,OAAO7R,QAErB2Y,EAAsB4W,IAGlBC,EAAW,KACf,MAAMC,EAAehvB,OAAO8N,OAAO,GAAI/G,GAAM4nB,UAAW5nB,GAAM+c,SAC9D,OAAO,yBAAKxW,UAAU,yBAAyBvG,MAAOA,GAAMod,WAChD,kBAAC,UAAD,CAAgBpd,MAAOioB,GAAezwB,KAI9C0wB,EAAW,IACR,oCACK,kBAAC,GAAD,CAAYha,MAAOnD,IAAKC,EAAE,aAAc2S,OAAQrmB,EAAKT,GAAIqnB,cAAeA,IACxE,kBAAC,GAAD,MACA,yBAAK3X,UAAU,0BACX,kBAAC,UAAD,CAAgB4hB,OAAQL,GACpB,kBAAC,KAAD,CAAOtvB,MAAOhB,EAAM4wB,WAAS,EAACC,WAAS,EAACroB,MAAOA,GAAM4nB,UAAW9c,YAAaC,IAAKC,EAAE,iBAAkBC,SAAU6c,OAMhIQ,EAAY,KAChB,MAAML,EAAehvB,OAAO8N,OAAO,GAAI/G,GAAM4nB,UAAW5nB,GAAM+c,SAC9D,OAAO,oCACMtc,EAAMnJ,KAAKqsB,UAAY,kBAACpF,GAAD,MAAoB,KAC5C,yBAAKhY,UAAU,yBAAyBvG,MAAOA,GAAMod,WACjD,kBAAC,UAAD,CAAgBpd,MAAOioB,GAAezwB,MAKxD,IAAI+wB,EAUJ,OAPEA,EADEhyB,EAAW2nB,GACFgK,EACFhK,IAAkB5nB,EAChBgyB,EAEAN,EAGN,oCAAGO,OC9EZ,MAAMC,GAAe,CAACC,EAAYnxB,EAAMsE,KACtC,IAAI8sB,EAAS,UAAMD,EAAWE,UAAjB,4BAA8CrxB,EAAKT,IAEhE,GAAI+E,GAAeA,EAAW,IAAqBA,EAAW,GAAkBnB,OAAQ,CACtF,MAAMmuB,EAAQhtB,EAAW,GAAkBjE,IAAIkxB,GAAYA,EAASr0B,KAAK0F,MAAM,KAAKwa,OAAO,GAAG,IAC9FgU,GAAS,uBAAoBE,EAAMj0B,KAAK,MAG1C,OAAO+zB,GAGHI,GAAU,EACd5K,gBACA5mB,OACAsE,eACC8W,KACD,IAAI+V,EACJ,MAAMM,EAASzxB,EAAKyxB,OAMpB,OAJIA,IACFN,EAAa/V,EAAQ7V,GAAGmsB,OAAOC,cAAc7sB,KAAK8sB,GAAOA,EAAI1pB,MAAQupB,IAGhEN,GAAcA,EAAW9uB,MAAQ8uB,EAAWE,UAAY,oCACrD,kBAAC,GAAD,CAAYza,MAAOua,EAAW9uB,KAAMgkB,OAAQrmB,EAAKT,GAAIqnB,cAAeA,EAAeC,YAAa7mB,EAAKqsB,YACrG,kBAAC,GAAD,MACA,4BAAQzV,MAAOua,EAAW9uB,KAAMrF,IAAKk0B,GAAaC,EAAYnxB,EAAMsE,GAAc2K,UAAU,yBAAyBvG,MAAO,CAClIugB,OAAQ,WAEA,oCACF,kBAAC,GAAD,CAAYrS,MAAK,UAAK6a,EAAL,oBACjB,kBAAC,GAAD,MACA,yBAAKxiB,UAAU,yBAAyBvG,MAAO,CACrDkN,QAAS,OACT4Y,eAAgB,SAChBC,WAAY,SACZ5f,OAAQ,QAEE,kBAAC,KAAD,CAAmBkD,MAAM,WAAWmC,UAAQ,EAACxL,MAAO,CAC5D6I,MAAO,IACP1C,OAAQ,IACR6f,MAAO,eAWf8C,GAAQjW,aAAe,CACrBhW,GAAIiW,IAAUC,QAUD7S,mBAPS,CAAChJ,EAAOwW,KAEvB,CACL9R,YAFmBrF,EAAWmX,EAASwQ,eAA8CxiB,GAA7BC,GAAoBzE,KAMjEgJ,CAAyB4oB,ICpExC,MAAM9oB,GAAQ,CACZ4S,OAAQ,YACR9I,SAAU,OACV0a,WAAY,OACZnb,MAAOnC,IAAO8G,SAgBDmb,OAbI1oB,GACV,oCACG,kBAAC,GAAD,CAAYyN,MAAOnD,IAAKC,EAAE,UAAW2S,OAAQld,EAAMnJ,KAAKT,GAAIqnB,cAAezd,EAAMyd,cAAeC,YAAa1d,EAAMnJ,KAAKqsB,YACxH,uBAAG3jB,MAAOA,IACL+K,IAAKC,EAAE,gFCZToe,OAFO,IAAM,8B,sBCS5B,MAAMC,GAAqB,EACzB1vB,OACAE,cACA+B,cACAd,qBAYO,yBAAKyL,UAAWC,KAAQ8iB,WACrB,uBAAG/iB,UAAWC,KAAQ7M,MAAOA,GAC5BmB,GAAmBjB,GAAe,uBAAG0M,UAAWC,KAAQ3M,aAAcA,GACtE+B,EAAYnB,OAAS,GAAK,oCACnB,uBAAG8L,UAAWC,KAAQ+iB,aACjBxe,IAAKC,EAAE,oBAfJ,MACxB,MAAMwe,EAAY5tB,EAAYjE,IAAI,EAChCgC,OACAT,YACI,wBAAIqN,UAAWC,KAAQijB,eAAgBjqB,IAAK7F,GACrCA,EADP,KACeT,EAAOvB,IAAI+xB,GAAOA,EAAI/vB,MAAMhF,KAAK,QAEtD,OAAO,wBAAI4R,UAAWC,KAAQmjB,YAAaH,IAU1BI,KAWrBP,GAAmB3hB,aAAe,CAChC7N,YAAa,GACbF,KAAM,GACNmB,iBAAiB,GAiBJoF,mBAdShJ,IACtB,MAAML,EAAKoE,EAAe/D,GACpBX,EAAamZ,GAAcxY,GAC3B2yB,EAAgBlxB,EAAkBzB,EAAOL,IAAOuB,EAGtD,MAAO,CACLuB,KAHWpD,EL8DuBW,IAASqwB,GAAuBrwB,GAAOyC,KK9DjDmwB,CAAuB5yB,IAAU6T,IAAKC,EAAE,sBAAwB6e,EAAcjwB,YAItGC,YAHkBtD,EL8DuBW,IAASqwB,GAAuBrwB,GAAO2C,YK9DjDkwB,CAA8B7yB,GAAS2yB,EAAc/vB,mBAIpF8B,YAAaC,GAAqB3E,GAClC4D,gBAAiBK,GAA4BjE,KAIlCgJ,CAAyBmpB,ICpDxC,MAsCa/H,GAAO7gB,IAClB,MAAMupB,EAvCY30B,KAClB,OAAQA,GACN,KAAK6Z,IACL,KAAKrN,IACL,KAAKC,IACL,KAAKC,IACL,KAAKE,IACL,KAAKD,IACH,OAAOioB,GAET,KAAK9nB,IACH,OAAOyiB,GAET,KAAKhT,IACL,KAAKC,IACL,KAAKF,IACH,OAAO0U,GAET,KAAK9uB,IACH,OAAO2yB,GAET,KAAKtyB,IACH,OAAOuxB,GAET,KAAKrX,IACH,OAAOgX,GAET,KAAKlY,IACH,OAAOwY,GAET,KAAKpY,IACH,OAAOqY,GAET,QACE,OAAOxD,KAKMsE,CAAY1pB,EAAMnJ,KAAKjC,MACxC,OAAO,kBAAC20B,EAAD,CAAU1yB,KAAMmJ,EAAMnJ,KAAM4mB,cAAezd,EAAMyd,cAAemF,qBAAsB5iB,EAAM4iB,wB,8CC9CrG,MAAM+G,WAAoCllB,YAAW,eAAD,oBAYlDhO,MAAQ,CACNmzB,YAAY,GAboC,KAelDC,aAAe,KAfmC,KAgBlDC,kBAAoB,KAhB8B,KAiBlDC,eAAiB,CACfC,SAAS,GAGXC,kBACE,IAAKplB,KAAKglB,aACR,OAGF,MAAMK,EAAWrlB,KAAK7E,MAAMmqB,aAAenlB,OAAOolB,YAC5CC,EAAOxlB,KAAKglB,aAAaS,wBAE3BD,EAAKE,QAAUL,GAAYG,EAAK/gB,IAAMtE,OAAOolB,YAAcF,IAC7DrlB,KAAKC,SAAS,CACZ8kB,YAAY,IAEd/kB,KAAK2lB,iBAITC,kBAAmB,IAAD,EAChB5lB,KAAKilB,kBAAoB9hB,KAAS,IAAMnD,KAAKolB,kBAAmBplB,KAAK7E,MAAM0qB,YAC3E,UAAAn2B,SAASo2B,uBAAuB,qBAAqB,UAArD,SAAyD1lB,iBAAiB,SAAUJ,KAAKilB,kBAAmBjlB,KAAKklB,gBAGnHS,gBAAiB,IAAD,EACd,UAAAj2B,SAASo2B,uBAAuB,qBAAqB,UAArD,SAAyD/kB,oBAAoB,SAAUf,KAAKilB,kBAAmBjlB,KAAKklB,gBAGtH/d,oBACEnH,KAAK4lB,kBACL5lB,KAAKolB,kBAGP7N,uBACEvX,KAAK2lB,gBAGPtkB,SACE,MAAM,EAKFrB,KAAK7E,OALH,SACJgH,EADI,UAEJlB,EAFI,MAGJvG,GAHF,EAIKS,EAJL,kDAMM,WACJ4pB,GACE/kB,KAAKpO,MACHm0B,EAAaC,KAAK7qB,EAAO,CAAC,cAAe,eAAgB,YAAa,eAC5E,OAAO,uCAAKiY,IAAKA,GAAOpT,KAAKglB,aAAe5R,EAAK1Y,MAAOA,EAAOuG,UAAWA,GAAe8kB,GAC5EhB,GAAc5iB,IAnEzB2iB,GAQG1iB,aAAe,CACpByjB,WAZsB,IAatBP,aAZwB,KA2EbR,UC1Df,MAEazH,GAA8B,EACpC,MAAM4I,WAAiBrmB,YAAW,eAAD,oBACtChO,MAAQ,CACNs0B,cAAe,IAFqB,KAItCnI,qBAAuBoI,IACrB,MAAMC,EAA4D,mBAAxCpmB,KAAKpO,MAAMs0B,cAAcC,IAA2BnmB,KAAKpO,MAAMs0B,cAAcC,GACjGD,EAAa,eAAQlmB,KAAKpO,MAAMs0B,eAEtCA,EAAcC,IAAcC,EAC5BpmB,KAAKC,SAAS,CACZimB,mBAVkC,KAsBtCG,eAAiBC,IACXtmB,KAAK7E,MAAM2a,MACb9V,KAAK7E,MAAMorB,wBAAwBD,IAxBD,KA2BtCE,aAAe,CAACC,EAAQC,EAAS7Z,KAC/B8Z,YAAa9Z,EAAQkP,GACrB,MAAMjO,EAAgB9N,KAAK7E,MAAMjG,eAAe4B,KAAK9E,GAAQA,EAAKT,KAAOsb,EAAQkP,GAE7EjO,GAAiB8Y,YAAoB9Y,IACvC+Y,aAAa/Y,IAhCqB,KAmCtCgZ,wBAA0BhZ,IACxB,MAAMiZ,EAAe/mB,KAAKpO,MAAMs0B,cAAcpY,EAAcvc,IAE5D,OAAIw1B,IAAiC,IAAjBA,EACXpzB,OAAO8N,OAAO,GAAIqM,EAAe,CACtCrD,EAAGqD,EAAcrD,EA3CD,KA+CbqD,GA5C6B,KA8CtCkZ,iBAAmBh1B,IACjB,MAAMi1B,EAAiB,CAACj1B,EAAKjC,KAAMiQ,KAAK7E,MAAM2a,KAAO,OAAS,QAAQzmB,KAAK,KAC3E,OAAO,kBAAC,GAAD,CAA6B6K,IAAKlI,EAAK+pB,EAAG9a,UAAWgmB,GAChD,kBAAC,GAAD,CAAMj1B,KAAMA,EAAM4mB,cAAe5Y,KAAK7E,MAAM2a,KAAOjlB,E1FxE/C,O0FwE4DktB,qBAAsB/d,KAAK+d,yBAjDnE,KAoDtCmJ,kBAAoB90B,GAASA,EAAMC,IAAIL,GAAQgO,KAAKgnB,iBAAiBh1B,IAtCrEmT,0BAA0BC,GACpBA,EAAU0Q,MACZ9V,KAAKC,SAAS,CACZimB,cAAe,KAqCrB7kB,SACE,MAAM,KACJyU,EADI,UAEJvgB,EAFI,eAGJL,GACE8K,KAAK7E,MAET,IAAK5F,IAAcL,EAAeC,OAChC,OAAO,kBAAC,GAAD,CAAkBjD,KAAMuT,IAAKC,EAAE,0CAGxC,MAAMtT,EAAQ0jB,EAAO5gB,EAAiBA,EAAe7C,IAAI2N,KAAK8mB,yBAC9D,OAAO,yBAAK7lB,UAAU,gBACT1L,EAAY,kBAAC,IAAD,CAAO4xB,aAAW,GACvB,kBAAC,IAAD,KACI,kBAAC,IAAD,QAEG,KACf,kBAAC,KAAD,CAAiBd,eAAgBrmB,KAAKqmB,eAAgBG,aAAcxmB,KAAKwmB,aAAcvlB,UAAU,SAASwlB,OAAQr0B,EAAOkb,OAAQ8Z,IAAQC,KAAMC,cAAkBC,UAAWC,IAAiBjkB,MAAOpD,OAAOsnB,WAAYC,YAAaC,IAAmBC,YAAa9R,EAAM+R,YAAa/R,EAAMgS,gBAAgB,kBACxS9nB,KAAKknB,kBAAkB90B,MAY5C6zB,GAAS7jB,aAAe,CACtBlN,eAAgB,IAGlB,MASM8S,GAAqB,CACzBue,wB1C/EqCrzB,IAAK,CAC1CnD,KFlCuC,4BEmCvCmD,W0C0Fa0H,mBAvBS,CAAChJ,EAAOwW,KAC9B,MAAMuI,EAAoBvI,EAAS0N,KAAO5L,GAAsBtY,GAASyB,EAAkBzB,EAAO+D,EAAe/D,IAC3GsD,EAAiBkT,EAAS0N,KAAOxL,GAAuB1Y,GAAS6B,EAAmB7B,GAC1F,MAAO,CACL2D,UAAWK,EAAsBhE,KAAW+e,EAC5Czb,mBAkBoC8S,GAVrB,CAACE,EAAYC,EAAeC,KAC7C,MAAM2f,EAAa9yB,YAAQiT,EAAWhT,gBAAgBrB,OAAOm0B,KAC7D,OAAO,2BAAK7f,GAAZ,IACE2N,KAAM1N,EAAS0N,KACfvgB,UAAW2S,EAAW3S,UACtBL,eAAgB6yB,EAChBpB,oBAIW/rB,CAAyDqrB,ICrIxE,MAAM3hB,GAAS,CACb2jB,eAAgB,CACd3a,OAAQ,MACR7F,QAAS,SACTygB,aAAc,MACdnkB,MAAOnC,IAAOE,MACdJ,gBAAiB,UACjBb,OAAQ,GACR+G,QAAS,OACT6Y,WAAY,UAEd0H,MAAO,CACL3jB,SAAU,OACViQ,OAAQ,UACR4N,WAAY,UAEd+F,YAAa,CACX5jB,SAAU,OACVqD,eAAgB,YAChB2N,WAAY,OACZf,OAAQ,YAIZ,MAAM4T,WAAoBzoB,YAAW,eAAD,oBAClCsD,QAAU3R,GAAM,IAAMyO,KAAK7E,MAAM+H,QAAQ3R,GADP,KAElC+2B,SAAW/2B,GAAM,IAAMyO,KAAK7E,MAAMmtB,SAAS/2B,GAE3C8P,SACE,MAAM,KACJnN,GACE8L,KAAK7E,MACT,OAAO,yBAAKT,MAAO4J,GAAO2jB,gBACd,0BAAMvtB,MAAO4J,GAAO6jB,MAAOjlB,QAASlD,KAAKkD,QAAQhP,EAAK3C,KAAtD,UACQ2C,EAAKG,KADb,aACsBH,EAAKN,OAAOuB,OAAS,EAAIsQ,IAAKC,EAAE,qBAAsB,CAClF6iB,MAAOr0B,EAAKN,OAAOuB,SAChBjB,EAAKN,OAAO,GAAGS,OAEZ,0BAAMqG,MAAO4J,GAAO8jB,YAAallB,QAASlD,KAAKsoB,SAASp0B,EAAK3C,KACxDkU,IAAKC,EAAE,aAY5B2iB,GAAYjmB,aAAe,CACzBc,QAAS2C,SAASC,UAClBwiB,SAAUziB,SAASC,WAENuiB,U,sBCnDR,MAAMG,WAAkB5oB,YAAW,eAAD,oBACvC6oB,cAAgBl3B,IACdyO,KAAK7E,MAAMiW,iBAAiB7f,IAFS,KAIvCm3B,aAAen3B,IACbyO,KAAK7E,MAAM8X,wBAAwB,CACjC1hB,KACA8C,KAAM2L,KAAK7E,MAAM1E,QAAQK,KAAK9E,GAAQA,EAAKT,KAAOA,GAAI8C,QAI1DgN,SACE,MAAM,QACJ5K,GACEuJ,KAAK7E,MACT,OAAO1E,EAAQtB,OACf,yBAAK8L,UAAWC,KAAQynB,IAAKjuB,MAAO,CAClC+J,IAAK,IAEMhO,EAAQpE,IAAIwB,GAAU,kBAAC,GAAD,CAAaqG,IAAKrG,EAAOtC,GAAI2C,KAAML,EAAQqP,QAASlD,KAAK0oB,aAAcJ,SAAUtoB,KAAKyoB,kBACxG,MASrBD,GAAUpmB,aAAe,CACvB3L,QAAS,GACTmyB,iBAAkB/iB,SAASC,WAOdlL,mBAJShJ,IAAK,CAC3B6E,QAASF,GAAqB3E,KAGQ,CACtCqhB,wBAAyBF,GACzB3B,iBAAkBpa,IAFL4D,CAGZ4tB,ICjDI,MACMK,GAA8B1oB,OAAOolB,YAY3C,MAAMuD,GAAmBl3B,GAASA,EAAMm3B,aCRlCC,GAAsB,CAACl1B,EAAW1B,KAItC,CACLrC,KZN+B,sBYO/BmD,MALO,2BAAQY,GAAR,IACPoB,eAAgB9C,MAOP62B,GAAwB,MACnCl5B,KZVmC,0BYgBxBm5B,GAA0Bl3B,IACrC,MAAMjC,EAAOiC,EAAKjC,YACXiC,EAAKjC,KACZ,MAAMib,EAAeC,IAAYlb,GAAMmb,SACjC3Z,EAAK4Z,yBACLC,EAAqBzY,YAAsBpB,GACjD,IAAI8Z,EAEJ,GAAItb,IAASub,IAAW,CACtB,MAAMC,EAAOvZ,EAAKuZ,MAAQ,EAC1BF,EAAQG,YAAsBD,EAAMvZ,EAAKyZ,eAEzCJ,EAAQM,YAA2B3Z,EAAKm3B,kBAG1C,MAAO,CACLp5B,KZ/BoC,2BYgCpCmD,MAAM,qCACJ3B,KACAxB,OACAuV,SAAUtT,EAAKsT,UAAY,KAC3B,CAAC0F,GAAehZ,EAAKkQ,SAClB0J,KACAR,GACAC,KAQI+d,GAA6Bp3B,IAAI,CAC5CjC,KZ7CyC,8BY8CzCmD,MAAOlB,ICKM4I,mBAVShJ,IACf,CACLy3B,mBAAoBjf,GAAcxY,GAClC03B,oBAAqBnH,GAAevwB,GACpC4M,eAAgBN,GAAuBtM,GACvCwV,WAAYzR,EAAe/D,GAC3Bm3B,aAAcD,GAAiBl3B,KAIK,CACtC23B,mBAAoBze,GACpB0e,oBAAqBP,IAFRruB,CA5CcO,IAC3BsuB,oBAAU,KACJtuB,EAAMkuB,mBACRluB,EAAMouB,qBACGpuB,EAAMmuB,qBACfnuB,EAAMquB,uBAEP,CAACruB,EAAMkuB,mBAAoBluB,EAAMmuB,sBACpCG,oBAAU,KAAO,IAAD,EACd,UAAA/5B,SAASC,cAAc,6BAAvB,SAA8C+5B,OAAO,EAAG,IACvD,CAACvuB,EAAMiM,aACV,MAAMvG,EAAS1F,EAAM4tB,azDvBS,GyDuByBziB,GAAoBnL,EAAMqD,gBACjF,OAAO,oCACG,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,yBAAKyC,UAAU,oBAAoBvG,MAAO,CAChDmG,WAEU,kBAAC,GAAD,CAAUiV,MAAM,IAChB,kBAAC,GAAD,MACA,kBAAC,GAAD,CAAUA,MAAM,Q,4CCAjB6T,OA/BoB,EACjC7tB,gBACA8tB,oBACAC,oBACA1xB,WAEA,MAAM+c,EAAU,CAAC,kBAAC,IAAD,CAAQhb,IAAI,SAASuY,WAAS,EAACvP,QAAS2mB,GAC9CpkB,IAAKC,EAAE,WACD,kBAAC,IAAD,CAAQxL,IAAI,SAAS4vB,aAAW,EAAC5mB,QAAS0mB,GAChDnkB,IAAKC,EAAE,YAElB,OAAOvN,GAAQ,kBAAC,IAAD,CAAOmD,QAASuuB,EAAmBpP,OAAK,EAACnV,SAAS,UACnD,kBAAC,IAAD,KAAaG,IAAKC,EAAE,qBACpB,kBAAC,IAAD,KACI,0BAAMzE,UAAWC,KAAQgB,SACpBuD,IAAKC,EAAE,mKAAoK,CAC1L5J,oBAIM,kBAAC,IAAD,KACI,kBAAC,IAAD,KAAcoZ,MCTlC,MAAM6U,GAAiB,CACrBlpB,O3DjBoC,G2DkBpC4U,WAAY,OACZD,WAAY,OACZ1N,YAAa,QAER,MAAMkiB,WAAgBpqB,YAAW,eAAD,oBACrChO,MAAQ,CACNq4B,yBAAyB,EACzBC,oBAAgB1xB,EAChB2xB,yBAAyB,EACzBjW,iBAAa1b,GALsB,KAOrC4xB,gBAAkB,KAChBpqB,KAAKC,SAAS,CACZkqB,yBAAyB,KATQ,KAYrCE,OAAS,KACPrqB,KAAK7E,MAAMkvB,SAAS/yB,KAAKgzB,IACvBtqB,KAAKC,SAAS,CACZiU,YAAY,IAAD,OAAMoW,QAfc,KAmBrCC,eAAiB,KACXvqB,KAAK7E,MAAMqvB,oBACbxqB,KAAK7E,MAAMsvB,oBACXzqB,KAAK7E,MAAMquB,uBAEXxpB,KAAK7E,MAAMuvB,oBAxBsB,KA2BrCC,UAAY,KACV3qB,KAAK7E,MAAMyvB,mBACX,MAAM1W,EAAclU,KAAK7E,MAAMnI,YAAX,WAA6BgN,KAAK7E,MAAMnI,aAAgB,IAC5EgN,KAAKC,SAAS,CACZiU,iBA/BiC,KAkCrC2V,kBAAoB,KAClB7pB,KAAKC,SAAS,CACZkqB,yBAAyB,KApCQ,KAuCrCP,kBAAoB,KAClB5pB,KAAKC,SAAS,CACZkqB,yBAAyB,IAE3BnqB,KAAK7E,MAAM0vB,SAAS7qB,KAAK7E,MAAMnI,aAAasE,KAAK,KAC/C0I,KAAKC,SAAS,CACZiU,YAAa,SA7CkB,KAiDrC4W,oBAAsB96B,UACpB,GAAI+6B,GAAgBA,EAAa51B,OAAQ,CACvC,MAAM61B,QAAiBhrB,KAAKoN,QAAQ7V,GAAGqC,YAAYwmB,aAAa1oB,IAAI,eAC9DuzB,EAAcF,EAAaj0B,KAAK4O,GAAKA,EAAEwlB,SAAWF,GAA2B,SAAftlB,EAAEylB,UAElEF,GAAeA,EAAY/3B,OAC7B8M,KAAK7E,MAAMiwB,YAAYprB,KAAK7E,MAAMnI,YAAai4B,EAAY/3B,SAvD5B,KA2DrCm4B,oBAAsB,KAChBrrB,KAAK7E,MAAMnI,cAAgBgN,KAAKpO,MAAMs4B,gBACxC1wB,GAAkBwG,KAAK7E,MAAMnI,aAAasE,KAAK4yB,GAAkBlqB,KAAKC,SAAS,CAC7EiqB,qBA9D+B,KA2ErCoB,wBAA0B,KACxBtrB,KAAKC,SAAS,CACZgqB,yBAA0BjqB,KAAKpO,MAAMq4B,2BA7EJ,KAgFrCsB,oBAAsB,IAAMvrB,KAAK7E,MAAMqwB,cAAgBxrB,KAAK7E,MAAMnI,YAAc,kBAAC,GAAD,CAAqB8I,cAAekE,KAAK7E,MAAMW,cAAe8tB,kBAAmB5pB,KAAK4pB,kBAAmBC,kBAAmB7pB,KAAK6pB,kBAAmB1xB,KAAM6H,KAAKpO,MAAMu4B,0BAA8B,KAhF9O,KAiFrCsB,kBAAoB,IAAMzrB,KAAKpO,MAAMs4B,gBAAkBlqB,KAAKpO,MAAMs4B,eAAe34B,GAAK,kBAAC,KAAD,CAAmB0P,UAAU,qBAAqB1J,GAAIyI,KAAKoN,QAAQ7V,GAAIY,KAAM6H,KAAKpO,MAAMq4B,wBAAyBvU,eAAgB1V,KAAKsrB,wBAAyBI,kBAAmB1rB,KAAKpO,MAAMs4B,eAAgByB,kBAAmB,CAAC,OAAQ,eAC/TC,mBAAoB5rB,KAAK8qB,oBAAqBe,mBAAoB9zB,GAAO7H,QAAQC,IAAI,2BAA4B4H,KAAW,KAlFvF,KAmFrC+zB,oBAAsB,KACpB,MAAMC,EAAmB/rB,KAAK7E,MAAMqvB,mBAAqB/kB,IAAKC,EAAE,sBAAwBD,IAAKC,EAAE,iBAC/F,OAAO,yBAAKzE,UAAWC,KAAQyG,cACnB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQ+K,SAAO,EAACxP,QAASlD,KAAKqqB,QACzB5kB,IAAKC,EAAE,iBAEZ,kBAAC,IAAD,CAAQxC,QAASlD,KAAKuqB,gBACjBwB,GAGJ/rB,KAAK7E,MAAMnI,YAAc,kBAAC,IAAD,CAAQkQ,QAASlD,KAAKsrB,yBACvC7lB,IAAKC,EAAE,cACA,KACf1F,KAAK7E,MAAMnI,aAAegN,KAAK7E,MAAMqwB,aAAe,kBAAC,IAAD,CAAQtoB,QAASlD,KAAKoqB,iBAClE3kB,IAAKC,EAAE,WACA,QAhClCyB,oBACEnH,KAAKqrB,sBAGP/T,qBACEtX,KAAKqrB,sBAgCPhqB,SACE,GAAIrB,KAAKpO,MAAMsiB,YACb,OAAO,kBAAC,IAAD,CAAUjR,GAAIjD,KAAKpO,MAAMsiB,cAGlC,MAAM,aACJ8X,GACEhsB,KAAK7E,MACHoM,EAAmBjB,G3DpIA,G2DqInB2lB,EAAiBD,EAAevmB,IAAKC,EAAE,uBAAyBD,IAAKC,EAAE,oBAC7E,OAAO,oCACK,kBAAC,GAAD,CAAY7E,OAAQ0G,EAAkB5F,UAAU,GAC5C,yBAAKjH,MAAOqvB,IACPiC,EAAehsB,KAAK8rB,sBAAwB,KAE7C,yBAAK7qB,UAAWC,KAAQgrB,eACpB,kBAAC,IAAD,CAAQzZ,WAAS,EAACvP,QAASlD,KAAK2qB,WAC3BsB,MAKjB,yBAAKhrB,UAAWC,KAAQirB,YACvBnsB,KAAKyrB,oBACLzrB,KAAKurB,wBAmBtBvB,GAAQzc,aAAe,CACrBhW,GAAIiW,IAAUC,QAmCD7S,mBAhCShJ,IACtB,MAAMkC,EAAYoW,GAAsBtY,GACxC,IAAI45B,EACAQ,EAUJ,MnDpCgCp6B,KACxB0G,KAAQ1G,EAAMuY,gBAAsD,KAApCD,GAAsBtY,GAAOL,GmD2BjE66B,CAAmBx6B,IACrB45B,GAAe,EACfQ,GAAe,IAEfA,IAAel4B,EAAUiB,QAASjB,EAAUiB,OAAOsgB,OACnDmW,IAAe13B,EAAUiB,QAASjB,EAAUiB,OAAO6I,QAG9C,CACL5K,YAAac,EAAUvC,GACvBuK,cAAehI,EAAUO,KACzBm3B,eACAhB,mBAAoBngB,GAAuBzY,GAC3Co6B,iBAIuBl0B,IAAQ,CACjC0xB,oBAAqB,IAAM1xB,EHvLQ,CACnC/H,KZVmC,0BeiMnC06B,kBAAmB,IAAM3yB,EjDpKY,CACrC/H,KFrBsC,6BmDyLtCs6B,OAAQ,IAAMvyB,EAASiU,MAAkBzU,KAAK/F,GAAMA,GACpDs5B,SAAUt5B,GAAMuG,EAASiG,GAAiBxM,IAC1Cq5B,iBAAkB,IAAM9yB,EjD7KU,CAClC/H,KFxBkC,yBmDqMlCq7B,YAAa,CAAC75B,EAAI2B,IAAU4E,E3EpLW,EAAC9E,EAAaE,KAAd,CACvCnD,KnBfwC,6BmBgBxCiD,cACAE,U2EiLqCm5B,CAA0B96B,EAAI2B,IACnEw3B,iBAAkB,IAAM5yB,EjD5KW,CACnC/H,KFnBoC,6BmDiMvB6K,CAA6CovB,I,yCCtK7CsC,OAlCG,EAChBC,eAEA,MAAMnc,EAAWoc,IAAqBrsB,OAAOsnB,WAAa+E,IAAqBrsB,OAAOsnB,WAChFgF,EAAaF,EAAW9mB,IAAKC,EAAE,oBAAsBD,IAAKC,EAAE,qBAClE,OAAO,yBAAKzE,UAAWC,KAAQwrB,aACrB,uBAAGzrB,UAAWC,KAAQurB,YAAtB,UACQhnB,IAAKC,EAAE,iBADf,aACoC+mB,IAEpC,yBAAK/xB,MAAO,CAClB0V,aAEU,uBAAGnP,UAAWC,KAAQ2W,MAAtB,UACQpS,IAAKC,EAAE,0BADf,MAGA,yBAAKzE,UAAWC,KAAQ2W,MACpB,wBAAI5W,UAAWC,KAAQyrB,UACnB,4BAAKlnB,IAAKC,EAAE,mCACZ,4BACKD,IAAKC,EAAE,yDAEZ,4BACKD,IAAKC,EAAE,2FAKxB,wBAAIzE,UAAWC,KAAQ0rB,YC1BpBC,OAJY,IAAM,yBAAKvqB,MAAM,6BAA6BiB,MAAM,KAAK1C,OAAO,KAAK2B,KAAMZ,IAAO8G,QAASnG,QAAQ,aACtH,0BAAMnO,EAAE,ma,sBCgCD04B,OAzBS,EACtBv7B,SAEA,MAAMgS,EAAQipB,IAAqBrsB,OAAOsnB,WAAa+E,IAAqBrsB,OAAOsnB,WACnF,OAAO,oCACG,yBAAKxmB,UAAWC,KAAQ4W,WACpB,yBAAK7W,UAAWC,KAAQ6rB,MAAOryB,MAAO,CAC9C6I,UAEY,kBAAC,IAAD,CAAMtC,UAAWC,KAAQ8B,KAAMC,GAAE,WAAM1R,IACnC,kBAAC,IAAD,KACI,kBAACy7B,GAAD,MACCvnB,IAAKC,EAAE,wBAGhB,kBAAC,IAAD,CAAQxC,QAAS/C,OAAO8sB,OAAQxnB,IAAKC,EAAE,YAG/C,yBAAKzE,UAAWC,KAAQirB,c,qBC1B7B,MAAMe,GAAkBC,IAAY,IAAD,EACxC,IAAKA,IAAYA,EAAQpc,UACvB,OAAO,KAMT,MAAMqc,EAAU,UAAGD,EAAQpc,UAAUnc,MAAM,KAAK,UAAhC,aAAG,EAAiCy4B,MAAM,WAE1D,OAAID,EACKE,SAASF,EAAW,IAEpB,MCOJ,MAAMG,WAA4B3tB,YAAW,eAAD,oBACjDymB,eAAiBC,IACftmB,KAAK7E,MAAMqyB,sBAAsBlH,IAFc,KAIjDmH,iBAAmBz7B,IACjB,GAAIA,EAAKjC,OAASub,IAChB,OAAO,EAGT,MAAMoiB,EAAa1tB,KAAK7E,MAAMjG,eAAerB,OAAOkoB,GAAKA,EAAEhsB,OAASub,KAC9DqiB,EAAmBC,KAAOF,EAAY,CAAC,MAC7C,OAAO17B,EAAK67B,IAAMF,EAAiB,GAAGE,GAXS,KAajD7G,iBAAmBh1B,IAEjB,MAAMi1B,EAAiB6G,KAAG,QAAS,SAAV,UAAuB97B,EAAKjC,MAAQ,CAC3D,mBAAoBiQ,KAAK7E,MAAM4yB,WAAa/tB,KAAKytB,iBAAiBz7B,GAClEqsB,YAAarsB,EAAKqsB,YAEpB,OAAO,yBAAKnkB,IAAKlI,EAAK+pB,EAAG9a,UAAWgmB,GACxB,kBAAC,GAAD,CAAMj1B,KAAMA,EAAM4mB,cAAe5nB,MApBE,KAuBjDk2B,kBAAoB90B,GAASA,EAAMC,IAAIL,GAAQgO,KAAKgnB,iBAAiBh1B,IAErEg8B,sBACE,MAAMC,ED9BiCC,KACzC,MAAMC,EAAQx6B,OAAO+C,KAAKuU,KACpBmjB,EAA2Bn5B,YAAQi5B,GAAU77B,IAAI+uB,IACrD,MAAMrxB,EAAOs+B,MAAMC,KAAKlN,EAAGmN,WAAWz3B,KAAKmK,GAAaktB,EAAMK,QAAQvtB,IAAc,GAC9EukB,EAAOpE,EAAGqE,wBACVoI,EAAIX,GAAgB9L,EAAG1mB,QAAU4yB,SAAS9H,EAAKqI,GACrD,MAAO,CACL99B,OACAw+B,UAAWnN,EAAGmN,UACdE,QAASZ,EAAIP,SAAS9H,EAAK3kB,QAC3BugB,QAGJ,OAAOwM,KAAOQ,EAA0B,CAAC,aCiBhBM,CAA4BL,MAAMC,KAAK5+B,SAASi/B,iBAAiB,sBACxF,IAAIC,EAAkB,EAClBC,EAAiB,EACjBC,GAAoB,EAExB,IAAK,IAAI/S,EAAIkS,EAAe94B,OAAS,EAAG4mB,GAAK,IAAKA,EAAG,CACnD,MAAM/pB,EAAOi8B,EAAelS,GAE5B,GAAI/pB,EAAKjC,OAASub,IAAW,CAC3B,GAAKwjB,EAEE,CACLF,EAAkB58B,EAAKy8B,QACvB,MAHAz8B,EAAKovB,GAAGmN,UAAU9e,IAAI,eAKnB,CACLqf,GAAoB,EACpB,MAAMC,EAAiB/8B,EAAKy8B,QAExBM,EAAiBF,IACnBA,EAAiBE,IAKvB,MACMC,EAAct/B,SAASC,cAAc,sBAGrCyvB,EAAYwP,EAJC,IAUnB,GAJII,IACFA,EAAYt0B,MAAMmG,OAAlB,UAA8Bue,EAA9B,OAGEpf,KAAK7E,MAAM4yB,UAAW,CAExB,MAAMkB,EAAav/B,SAASC,cAAc,qBAE1C,GAAIs/B,GAAcA,EAAWv0B,OAASu0B,EAAWv0B,MAAMqW,UAAW,CAChE,MAAMxF,EAAO2hB,GAAgB+B,EAAWv0B,OAClCw0B,EAAax/B,SAASC,cAAc,gBAC1Cu/B,GAAcA,EAAWxF,OAAO,EAAGne,EAAO,MAKhDpE,oBACEnH,KAAKguB,sBAGP1W,qBACEtX,KAAKguB,sBAGP3sB,SACE,MAAM,UACJ9L,EADI,eAEJL,GACE8K,KAAK7E,MAET,IAAK5F,IAAcL,EAAeC,OAChC,OAAO,kBAAC,GAAD,CAAkBjD,KAAMuT,IAAKC,EAAE,0CAGxC,MAAMnC,EAAQipB,IAAqBrsB,OAAOsnB,WAAa+E,IAAqBrsB,OAAOsnB,WACnF,OAAO,yBAAKxmB,UAAU,gBACT1L,EAAY,kBAAC,IAAD,CAAO4xB,aAAW,GACvB,kBAAC,IAAD,KACI,kBAAC,IAAD,QAEG,KACf,kBAAC,KAAD,CAAiBd,eAAgBrmB,KAAKqmB,eAAgBplB,UAAU,SAASwlB,OAAQvxB,EAAgBoY,OAAQ8Z,IAAQC,KAAMC,cAAkBC,UAAWC,IAAiBjkB,MAAOA,EAAOmkB,YAAaC,IAAmBC,aAAa,EAAOC,aAAa,EAAOC,gBAAgB,kBACtQ9nB,KAAKknB,kBAAkBhyB,MAY5Cq4B,GAAoBnrB,aAAe,CACjClN,eAAgB,IAYH0F,mBATShJ,IACtB,MAAM+e,EAAoBsR,GAAuBrwB,GACjD,MAAO,CACL2D,UAAWK,EAAsBhE,KAAW+e,EAC5Czb,eAAgBktB,GAAwBxwB,GAAOiC,OAAOm0B,KACtD+F,UAAW3jB,GAAcxY,KAIW,CACtC47B,sBRnI0Ct6B,IAAK,CAC/CnD,KZXwC,6BYYxCmD,WQgIa0H,CAEZ2yB,I,qCChIH,MAAM4B,GAAkB7oB,GAAoB,G3EjBV,E2EmB5B8oB,GAAaC,IAEjB,IAAIC,EAAI,EACR,MAEMC,EAAcC,GAFF,EAEwB,EAAIA,EAE9C,IAAIC,EAAWF,EAAY,GACvBH,GAAa,EAEjB,KAAOK,EAAWJ,GAIhB,GAHAI,EAAWF,EAAYD,KACrBA,EAEEG,IAAaJ,EAAG,CAClBD,GAAa,EACb,MAIJ,OAAOA,GAkCF,MAAMM,WAA6B9vB,YAAW,eAAD,oBAClDhO,MAAQ,CACN+9B,aAAa,GAFmC,KAIlDC,yBAA2B,KACrB5vB,KAAK7E,MAAMrH,YACbkM,KAAKC,SAAS,CACZ0vB,aAAa,IAEf3vB,KAAK7E,MAAM00B,kBAAkB7vB,KAAK7E,MAAMrH,UAAWkM,KAAK7E,MAAM/I,OAG9D4N,KAAK7E,MAAM/I,MAAMkK,QAAQtK,IACnBA,EAAKyY,EAAIqlB,MACX99B,EAAKqsB,WAAY,EACjBre,KAAK7E,MAAM40B,oBAAoBp8B,OAAO8N,OAAO,GAAIzP,EAAM,CACrDyY,EAAGqlB,UA/CO,GACpB19B,QACA49B,uBAMA,IAAIzkB,EAAO,EACX,MAAM0kB,EAAW,GAEjB,IAAK,IAAIC,EAAU,EAAGA,GAAW99B,EAAM+C,SAAU+6B,EAC/B,IAAZA,EACF3kB,GAAQ,GACC6jB,GAAWc,GACpB3kB,GAAQ,GAERA,GAAQ,GAGV0kB,EAASp5B,KAAK0U,GAGhB,IAAK,IAAIwQ,EAAI,EAAGA,EAAI3pB,EAAM+C,SAAU4mB,EAClCiU,EAAiB,CACfjgC,KAAMub,IACNC,KAAM0kB,EAASlU,MAyBfoU,CAAcnwB,KAAK7E,OACnB6E,KAAK7E,MAAM60B,iBAAiB,CAC1BjgC,KAAM2b,IACNyd,kBAAkB,MAvB0B,KAsClDiH,gBAAkB,IACTpwB,KAAK7E,MAAMk1B,SAAW,CAC3B5a,WAAY6a,IAAQC,KACpB1vB,OAAQb,KAAK7E,MAAM4tB,aAAeoG,GjElHR,IiEmHxB,CACFtuB,OAAQb,KAAK7E,MAAM4tB,aH/Ge,IGgGtC5hB,oBACEnH,KAAK4vB,2BAGPtY,qBACOtX,KAAKpO,MAAM+9B,aACd3vB,KAAK4vB,2BAaTvuB,SACE,OAAO,qCACOrB,KAAK7E,MAAMk1B,UAAY,kBAAC,GAAD,CAAiB9+B,GAAIyO,KAAK7E,MAAMrH,UAAUvC,KACnE,yBAAK0P,UAAW6sB,KAAG5sB,KAAQsvB,QAAS,eAAgB91B,MAAOsF,KAAKowB,oBAC1DpwB,KAAK7E,MAAMk1B,UAAY,kBAAC,GAAD,CAAW9D,UAAU,IAC9C,yBAAKtrB,UAAWC,KAAQuvB,UAAW/1B,MAAO,CACpD6I,MAAOipB,MAEO,kBAAC,GAAD,UAuCT5xB,mBAtBS,CAAChJ,EAAOwW,KAC9B,MAAM7W,EAAKoE,EAAe/D,GAE1B,GAAIwW,EAASioB,SAAU,CAErB,MAAO,CACLv8B,UAFgBoW,GAAsBtY,GAGtCL,KACAa,MAAOkY,GAAuB1Y,GAC9Bm3B,aAAcD,GAAiBl3B,IAKnC,MAAO,CACLkC,UAFgBvC,EAAK8B,EAAkBzB,EAAOL,GAAM,KAGpDA,KACAa,MAAOqB,EAAmB7B,GAC1Bm3B,aAAcD,GAAiBl3B,KAIK,CACtCi+B,kBAAmB7G,GACnBgH,iBAAkB9G,GAClB6G,oBAAqB3G,IAHRxuB,CAIZ80B,IChKI,MAAMgB,WAAsB9wB,YAAW,eAAD,oBAC3ChO,MAAQ,CACN+9B,aAAa,GAF4B,KAI3CgB,kBAAoB,KACd3wB,KAAK7E,MAAMrH,YACbkM,KAAKC,SAAS,CACZ0vB,aAAa,IAEf3vB,KAAK7E,MAAMy1B,iBAAiB5wB,KAAK7E,MAAMrH,UAAWkM,KAAK7E,MAAM/I,SATtB,KAuB3Cy+B,WAAa,KACX,GAAI7wB,KAAK7E,MAAMqvB,mBACb,OAAO,kBAAC,GAAD,CAAoB6F,UAAU,IAGvC,MAAMxvB,EAASb,KAAK7E,MAAM4tB,alEvCE,GkEuCgCziB,GAAoB,GAChF,OAAO,yBAAKrF,UAAU,oBAAoBvG,MAAO,CAC/CmG,WAEU,kBAAC,GAAD,CAAUiV,MAAM,IAChB,kBAAC,GAAD,CAAUA,MAAM,MApB9B3O,oBACEnH,KAAK2wB,oBAGPrZ,qBACOtX,KAAKpO,MAAM+9B,aACd3vB,KAAK2wB,oBAkBTtvB,SACE,OAAO,oCACK,kBAAC,GAAD,MACCrB,KAAK7E,MAAM6wB,aAAehsB,KAAK6wB,aAAe,kBAAC,GAAD,CAAkB3+B,KAAMuT,IAAKC,EAAE,iBA2B/E9K,mBAbShJ,IACtB,MAAML,EAAKoE,EAAe/D,GACpBkC,EAAYvC,EAAK8B,EAAkBzB,EAAOL,GAAM,KAEtD,MAAO,CACLuC,YACAk4B,gBAHmBl4B,IAAaA,EAAUiB,SAASjB,EAAUiB,OAAOsgB,OAIpEjjB,MAAOqB,EAAmB7B,GAC1B44B,mBAAoBngB,GAAuBzY,GAC3Cm3B,aAAcD,GAAiBl3B,KAIK,CACtCg/B,iBxDnEgC,CAAC98B,EAAW1B,KAIrC,CACLrC,KFjBmC,0BEkBnCmD,MALO,2BAAQY,GAAR,IACPoB,eAAgB9C,OwDgELwI,CAEZ81B,ICxEH,MAAMI,WAAqBlxB,YACzBuH,oBACEnH,KAAK7E,MAAM41B,kBAGb1vB,SACE,MAAMR,EAASb,KAAK7E,MAAM4tB,anEdE,GmEcgCziB,GAAoB,GAChF,OAAO,oCACK,kBAAC,GAAD,MACCtG,KAAK7E,MAAMqvB,mBAAqB,kBAAC,GAAD,CAAoB6F,UAAU,IAAW,yBAAKpvB,UAAU,oBAAoBvG,MAAO,CAC5HmG,WAEgB,kBAAC,GAAD,CAAUiV,MAAM,IAChB,kBAAC,GAAD,CAAUA,MAAM,OAkBzBlb,mBALShJ,IAAK,CAC3B44B,mBAAoBngB,GAAuBzY,GAC3Cm3B,aAAcD,GAAiBl3B,KAGO,CACtCm/B,gBzDnBmC,MACnChhC,KFpBiC,yB2DqCpB6K,CAEZk2B,IC7BI,MAAME,WAAsBpxB,YAAW,eAAD,oBAC3ConB,iBAAmBh1B,GAAQ,yBAAKkI,IAAKlI,EAAK+pB,EAAG9a,UAAW6sB,KAAG97B,EAAKjC,KAAM,QAAS,SACrE,kBAAC,GAAD,CAAMiC,KAAMA,EAAM4mB,cAAe7nB,KAFA,KAI3Cm2B,kBAAoB90B,GAASA,EAAMC,IAAIL,GAAQgO,KAAKgnB,iBAAiBh1B,IAErEqP,SACE,MAAM,UACJ9L,EADI,eAEJL,GACE8K,KAAK7E,MAET,IAAK5F,IAAcL,EAAeC,OAChC,OAAO,kBAAC,GAAD,CAAkBjD,KAAMuT,IAAKC,EAAE,0CAGxC,MAAMnC,EAAQipB,IAAqBrsB,OAAOsnB,WAAa+E,IAAqBrsB,OAAOsnB,WACnF,OAAO,oCACMlyB,EAAY,kBAAC,IAAD,CAAO4xB,aAAW,GACvB,kBAAC,IAAD,KACI,kBAAC,IAAD,QAEG,KACf,kBAAC,KAAD,CAAiBlmB,UAAU,eAAewlB,OAAQvxB,EAAgBoY,OAAQ8Z,IAAQC,KAAMC,cAAkBC,UAAWC,IAAiBjkB,MAAOA,EAAOmkB,YAAaC,IAAmBC,aAAa,EAAOC,aAAa,EAAOC,gBAAgB,kBACvO9nB,KAAKknB,kBAAkBhyB,MAU5C87B,GAAc5uB,aAAe,CAC3BlN,eAAgB,IAWH0F,mBARShJ,IACtB,MAAM+e,EAAoBsR,GAAuBrwB,GACjD,MAAO,CACL2D,UAAWK,EAAsBhE,KAAW+e,EAC5Czb,eAAgBD,YAAQmtB,GAAwBxwB,IAAQiC,OAAOm0B,OAIpDptB,CAAyBo2B,I,8BC7CjC,MAAMC,WAAuBrxB,YAAW,eAAD,oBAC5ChO,MAAQ,CACN+9B,aAAa,GAF6B,KAI5CuB,mBAAqB,KACnB,GAAIlxB,KAAK7E,MAAMrH,UAAW,CACxBkM,KAAKC,SAAS,CACZ0vB,aAAa,IAGf,MAAMwB,EAAcvD,KAAO5tB,KAAK7E,MAAM/I,MAAO,CAAC,IAAK,MACnD4N,KAAK7E,MAAM00B,kBAAkB7vB,KAAK7E,MAAMrH,UAAWq9B,GAEnD,IAAIC,EAAc,EAClBpxB,KAAK7E,MAAM/I,MAAMkK,QAAQtK,IACnBA,EAAKjC,OAASuC,MAChB8+B,GAAe,EACfpxB,KAAK7E,MAAMk2B,oBAAoBr/B,EAAKT,OAIxCyO,KAAK7E,MAAM/I,MAAMkK,QAAQtK,IACvBgO,KAAK7E,MAAM40B,oBAAoBp8B,OAAO8N,OAAO,GAAIzP,EAAM,CACrDwY,EAAG8mB,IACH7mB,EAAG8mB,SAKP,IAAK,IAAIxV,EAAI,EAAGA,EAA8C,GAAzC/b,KAAK7E,MAAM/I,MAAM+C,OAASi8B,GAAkBrV,GAAK,EACpE/b,KAAK7E,MAAM60B,iBAAiB,CAC1BjgC,KAAMub,IACNhG,SAAUyW,EACVtQ,UAAU,IAIdzL,KAAK7E,MAAM60B,iBAAiB,CAC1BjgC,KAAM2b,IACNyd,kBAAkB,MAKxBhiB,oBACEnH,KAAKkxB,qBAGP5Z,qBACOtX,KAAKpO,MAAM+9B,aACd3vB,KAAKkxB,qBAIT7vB,SACE,MAAMR,EAASb,KAAK7E,MAAM4tB,aP/DU,GOgEpC,OAAO,oCACK,kBAAC,GAAD,CAAiBx3B,GAAIyO,KAAK7E,MAAMrH,UAAUvC,KAC1C,yBAAK0P,UAAWC,KAAQsvB,QAAS91B,MAAO,CAChDmG,WAEY,kBAAC,GAAD,CAAW0rB,UAAU,IACrB,yBAAKtrB,UAAWC,KAAQuvB,UAAW/1B,MAAO,CACpD6I,MAAOipB,MAEO,kBAAC,GAAD,UA4BT5xB,mBAXShJ,IACtB,MAAML,EAAKoE,EAAe/D,GAE1B,MAAO,CACLkC,UAFgBvC,EAAK8B,EAAkBzB,EAAOL,GAAM,KAGpDA,KACAa,MAAOqB,EAAmB7B,GAC1Bm3B,aAAcD,GAAiBl3B,KAIK,CACtCi+B,kBAAmB7G,GACnBgH,iBAAkB9G,GAClBmI,oBbhEwCn+B,IAAK,CAC7CnD,KZ1CyC,8BY2CzCmD,Ua+DA68B,oBAAqB3G,IAJRxuB,CAKZq2B,IClHI,MC8BDO,GAAe,CACnB,KAAQ,kBAAC,GAAD,MACR,CAAC3gC,GAAO,kBAAC,GAAD,MACR,CAACC,GAAM,kBAAC,GAAD,MACP,CAACC,GAAQ,kBAAC,GAAD,MACT,CAACC,GAAe,kBAAC,GAAD,OAuFH4J,mBAVS,CAAChJ,EAAOwW,KAAc,IAAD,IAC3C,MAAMhV,EAAaI,EAAkB5B,GACrC,MAAO,CACL6/B,kBAAmBn5B,KAAQlF,GAC3Bs+B,kBAAmBn+B,EAAsB3B,GACzCL,GAAIoE,EAAe/D,GACnB+/B,SAAS,UAAAvpB,EAASilB,aAAT,mBAAgBuE,cAAhB,eAAwB5+B,cAAe,OAIZ,CACtC6+B,gBvFxF8BtgC,GAAMvB,MAAO8H,EAAU6D,KAMrD,IACE,MAAM/J,EAAQ+J,IACd,IAAIm2B,EAAoB,KAExB,GAAIvgC,EACFugC,EAAoBz+B,EAAkBzB,EAAOL,IAAO,SAC/C,CACL,MAAMwgC,GFjD2BvgC,EEiDWG,EAAiBC,GFjDhBwK,aAAa41B,QAAb,kCAAgDxgC,UAAegH,GEkDtGy5B,EAAO5+B,EAAkBzB,EAAOmgC,GACtCD,EAAoBC,GAAeE,EAAOA,EnBoFHrgC,IAAS,IAAI0W,IAAU5U,EAAsB9B,GAAQ,MAAO,kBAAmB0W,IAAUtU,EAAwBpC,GAAQ,MAAO,gBmBpFtHsgC,CAA8BtgC,GAAO,GAItFkG,EADEg6B,EACOp2B,GAA0Bo2B,EAAkBvgC,IAE5CgK,GlBhD0B,MkBkDrC,MAAOxD,GACP,OAvBctH,EAuBCsH,EAtBf7H,QAAQC,IAAI,+BAAgCM,GACrCA,EAFOA,MFrCqBe,GyF6HrC2gC,gBD5H+Bj/B,IAAK,CACpCnD,KfF+B,oBeG/BmD,WCwHa0H,CArFU,EACvBrJ,KACAL,OACAwgC,mBACAD,oBACAE,UACAE,kBACAM,sBAEA1I,oBAAU,KA1BmBv4B,KAC7B,MAAMib,EAASzc,SAAS0iC,qBAAqB,UAAU,GAEnDhhC,EAAYF,GACdib,EAAOoiB,UAAU9e,IAAI,UAErBtD,EAAOoiB,UAAU8D,OAAO,WAqBxBC,CAAuBphC,IACtB,CAACA,IACJu4B,oBAAU,KACJiI,IAAqBD,GACvBI,EAAgBF,IAEjB,CAACD,EAAkBD,EAAmBE,IACzClI,oBAAU,KACR,MAAM8I,EAAWpvB,KAAS,IAAMgvB,EAAgBhyB,OAAOolB,aAAc,KAErE,OADAplB,OAAOC,iBAAiB,SAAUmyB,GAC3B,KACLpyB,OAAOY,oBAAoB,SAAUwxB,KAEtC,IAEEb,EAQDxgC,IAASJ,EACJ0gC,GAAatgC,GAGlBugC,EACK,oCACK,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,CAAkBv/B,KAAMuT,IAAKC,EAAE,uEzGtEN,MyG0EnCnU,EACK,oCACK,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,CAAkBW,KAAMuT,IAAKC,EAAE,oCAIlC,OAAPnU,EACK,kBAAC,IAAD,CAAO41B,aAAW,GACb,kBAAC,IAAD,KACI,kBAAC,IAAD,QAKXqK,GAAatgC,GAnCX,kBAAC,IAAD,CAAOi2B,aAAW,GACb,kBAAC,IAAD,KACI,kBAAC,IAAD,U,QCnDb,MAAMqL,WAAY5yB,YACvBuH,oBACEnH,KAAK7E,MAAMs3B,eAAezyB,KAAK7E,MAAM5D,GAAGqC,aACxCoG,KAAK7E,MAAMu3B,kBACX1yB,KAAK7E,MAAMw3B,oBACX3yB,KAAK7E,MAAMy3B,qBACX5yB,KAAK7E,MAAM03B,cAAc7yB,KAAK7E,MAAM5D,IAGtCu7B,kBACE,MAAO,CACL9b,QAAShX,KAAK7E,MAAM6b,QACpBvR,SACAlO,GAAIyI,KAAK7E,MAAM5D,IAInB8J,SACE,OAAO,oCACK,kBAAC,IAAD,CAAcO,QAAM,EAAC0uB,SAAO,IAC5B,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOyC,OAAK,EAAC7jC,KAAK,IAAImS,OAAQlG,GAAS,kBAAC,GAAD,iBAAeA,EAAf,CAAsBjK,K9GnCjE,Y8GoCI,kBAAC,IAAD,CAAO6hC,OAAK,EAAC7jC,KAAK,OAAOmS,OAAQlG,GAAS,kBAAC,GAAD,iBAAeA,EAAf,CAAsBjK,KAAMJ,OACtE,kBAAC,IAAD,CAAOiiC,OAAK,EAAC7jC,KAAK,gBAAgBmS,OAAQlG,GAAS,kBAAC,GAAD,iBAAeA,EAAf,CAAsBjK,K9GrC7E,Y8GsCI,kBAAC,IAAD,CAAO6hC,OAAK,EAAC7jC,KAAK,qBAAqBmS,OAAQlG,GAAS,kBAAC,GAAD,iBAAeA,EAAf,CAAsBjK,KAAML,OACpF,kBAAC,IAAD,CAAOkiC,OAAK,EAAC7jC,KAAK,0BAA0BmS,OAAQlG,GAAS,kBAAC,GAAD,iBAAeA,EAAf,CAAsBjK,KAAMH,OACzF,kBAAC,IAAD,CAAOgiC,OAAK,EAAC7jC,KAAK,4BAA4BmS,OAAQlG,GAAS,kBAAC,GAAD,iBAAeA,EAAf,CAAsBjK,KAAMF,SAGnG,kBAAC,GAAD,QAchBwhC,GAAIQ,kBAAoB,CACtBhc,QAASxJ,IAAU6S,OACnB5a,KAAM+H,IAAUC,OAChBlW,GAAIiW,IAAUC,QAaD7S,mBAAQ,KAVI9C,IAClB,CACL46B,gBAAiB,IAAM56B,EAASsF,MAChCu1B,kBAAmB,IAAM76B,EAASyG,MAClCk0B,eAAgB74B,GAAe9B,ECpEA,CACjC/H,K9GF2B,gB8GG3BmD,MDkEyD0G,IACvDi5B,cAAet7B,GAAMO,EAASqH,GAAe5H,IAC7Cq7B,mBAAoB,IAAM96B,EAASiF,QAIxBnC,CAAkC43B,I,qBEtDlC93B,OAVD,CAAC9I,EARoB,OAQSyD,KAC1C,OAAQA,EAAOtF,MACb,IAXqB,YAYnB,OAAOuF,YAAgBD,EAAOnC,MAXD,QAa/B,QACE,OAAOtB,ICGEwD,mBAAgB,CAC7BhC,W9GiBc,CAACxB,EAAQgB,EAA0ByC,KACjD,OAAQA,EAAOtF,MACb,IAnC0B,iBAqCtB,MAAO,CACL8C,KAAMwC,EAAOnC,MACbd,MAAO,IAIb,IA1C0B,iBA4CtB,OAAO,2BAAKR,GAAZ,IACEiB,KAAK,2BAAMjB,EAAMiB,MACZwC,EAAOnC,SAKlB,IAlDiC,wBAoD7B,OAAOH,EAAoB,CACzBnB,QACAoB,YAAaqC,EAAOrC,YACpBC,KAAM,UACNC,MAAOmC,EAAOnC,QAIpB,IA3DsC,6BA6DlC,OAAOH,EAAoB,CACzBnB,QACAoB,YAAaqC,EAAOrC,YACpBC,KAAM,cACNC,MAAOmC,EAAOnC,QAIpB,IApE+B,sBAsE3B,OAAO,2BAAKtB,GAAZ,IACEQ,MAAOiD,EAAOnC,QAIpB,QACE,OAAOtB,I8G/DX8D,WACA0O,oBACAjG,cACAzF,epGfc,CAAC9G,EAAQyG,GAA8BhD,KACrD,OAAQA,EAAOtF,MACb,IAR6B,oBAUzB,OAAO,2BAAK6B,GAAZ,IACE,CAACyD,EAAOnC,MAAM3B,IAAK0hC,KAAY,2BAAK3/B,YAAS1B,EAAMyD,EAAOnC,MAAM3B,MAC3D8D,EAAOnC,OACToF,MAIT,IAhByC,gCAkBrC,OAAO,2BAAK1G,GAAZ,IACE,CAACyD,EAAO9D,IAAK0hC,KAAY,2BAAK3/B,YAAS1B,EAAMyD,EAAO9D,MAA5B,IACtBklB,WAAYphB,EAAOohB,aAClBne,MAIT,QACE,OAAO1G,IoGLXsF,SzGvBc,CAACtF,EAAQ,GAAIyD,KAC3B,OAAQA,EAAOtF,MACb,IAH6B,oBAI3B,CACE,MAAMmjC,EAAgB/1B,YAAa9H,EAAOnC,OAI1C,OAHiBmiB,KAAOzjB,EAAO,CAC7BuhC,OAAQD,IAKd,QACE,OAAOthC,IyGYXC,KhHpBc,CAACD,EAAQN,EAAoB+D,KAC3C,OAAQA,EAAOtF,MACb,IATyB,gBAWrB,MASC,CACLwB,IAFqB6hC,EARM/9B,EAAOnC,OAUrB3B,GACbC,SAAU4hC,EAAS5hC,SACnBC,SAAU2hC,EAASn0B,SAASo0B,YAC5B3hC,YAAa0hC,EAASE,YAAYx5B,IAAI,QAVtC,QACE,OAAOlI,EAIb,IAAyBwhC,GgHSvBjpB,cnEJc,CAACvY,EAAQmY,GAA8B1U,KACrD,OAAQA,EAAOtF,MACb,IAtBmC,0BAuBjC,CACE,MAAMwjC,EAAW,GAGjB,OAFA5/B,OAAO+C,KAAKsT,IAAqB3X,IAAIkI,GAAKg5B,EAASh5B,GAAKlF,EAAOnC,MAAMqH,IACrEg5B,EAAStpB,kBAAmB,EACrBspB,EAGX,IA7BgC,uBA8B9B,OAAOxpB,GAET,IAxBkC,yBAyBhC,OAAOpW,OAAO8N,OAAO,GAAI7P,EAAO,CAC9BqY,kBAAkB,IAGtB,IA5BoC,2BA6BlC,OAAOtW,OAAO8N,OAAO,GAAI7P,EAAO,CAC9BqY,kBAAkB,IAGtB,IAzC+B,sBA0C7B,OAAOD,GAET,IA3C0B,iBA6CtB,OAAOrW,OAAO8N,OAAO,GAAI7P,EAAO,CAC9ByC,KAAMgB,EAAOnC,QAInB,IAjDgC,uBAmD5B,OAAOS,OAAO8N,OAAO,GAAI7P,EAAO,CAC9B2C,YAAac,EAAOnC,QAI1B,IAvD8B,qBAwD5B,OAAKmC,EAAOnC,MAAMoS,SAQX+P,KAAOzjB,EAAO,CACnBsD,eAAgB,CACds+B,QAAS,CAAC,CAAClG,SAASj4B,EAAOnC,MAAMoS,UAAW,EAAGjQ,EAAOnC,WATjDmiB,KAAOzjB,EAAO,CACnBsD,eAAgB,CACdu+B,SAAU,CAACp+B,EAAOnC,UAW1B,IArEiC,wBAsE/B,CACE,MAAMwgC,EAAar+B,EAAOnC,MACpB0a,EAAqBhc,EAAMsD,eAAe2Y,UAAU7b,GAAQA,EAAKT,KAAOmiC,GAE9E,OAAI9lB,GAAsB,EACjByH,KAAOzjB,EAAO,CACnBsD,eAAgB,CACds+B,QAAS,CAAC,CAAC5lB,EAAoB,OAK9Bhc,EAGX,IAnFqC,4BAoFnC,CACE,MAAM+hC,EAAa1+B,YAAQrD,EAAMsD,gBACjC,IAAI0+B,GAAmB,EACvB,MAAMC,EAAgBx+B,EAAOnC,MAAMb,IAAI,EACrCi9B,IACAzB,IACArjB,IACAC,IACAsR,QAEA,MAAM+X,EAAYH,EAAW78B,KAAKi9B,GAAMA,EAAGxiC,KAAOwqB,GAElD,OAAM+X,EAAUxE,IAAMA,GAAKwE,EAAUjG,IAAMA,GAAKiG,EAAUtpB,IAAMA,GAAKspB,EAAUrpB,IAAMA,GACnFmpB,GAAmB,EACZjgC,OAAO8N,OAAO,GAAIqyB,EAAW,CAClCtpB,IACAC,IACA6kB,IACAzB,OAIGiG,IAET,OAAOF,EAAgB,2BAAQhiC,GAAR,IACrBsD,eAAgB2+B,IACdjiC,EAGR,IAlHiC,wBAmH/B,CACE,MAAMkc,EAAgBzY,EAAOnC,MACvB0a,EAAqBhc,EAAMsD,eAAe2Y,UAAU7b,GAAQA,EAAKT,KAAOuc,EAAcvc,IAE5F,GAAIqc,GAAsB,EAAG,CAM3B,OALiByH,KAAOzjB,EAAO,CAC7BsD,eAAgB,CACds+B,QAAS,CAAC,CAAC5lB,EAAoB,EAAGja,OAAO8N,OAAO,GAAIqM,QAM1D,OAAOlc,EAGX,QACE,OAAOA,ImElHXswB,e/BVc,CAACtwB,EAAQkwB,GAA+BzsB,KACtD,OAAQA,EAAOtF,MACb,IAjB+B,sBAkB7B,CACE,MAAMwjC,EAAW,GAEjB,OADA5/B,OAAO+C,KAAKsrB,IAA2B3vB,IAAIkI,GAAKg5B,EAASh5B,GAAKlF,EAAOnC,MAAMqH,IACpEg5B,EAGX,IAvBiC,wBAwB/B,OAAOzR,GAET,IAzBoC,2BA0BlC,OAAKzsB,EAAOnC,MAAMoS,SAQX+P,KAAOzjB,EAAO,CACnBsD,eAAgB,CACds+B,QAAS,CAAC,CAAClG,SAASj4B,EAAOnC,MAAMoS,UAAW,EAAGjQ,EAAOnC,WATjDmiB,KAAOzjB,EAAO,CACnBsD,eAAgB,CACdu+B,SAAU,CAACp+B,EAAOnC,UAW1B,IAtCuC,8BAuCrC,CACE,MAAMwgC,EAAar+B,EAAOnC,MACpB0a,EAAqBhc,EAAMsD,eAAe2Y,UAAU7b,GAAQA,EAAKT,KAAOmiC,GAE9E,OAAI9lB,GAAsB,EACjByH,KAAOzjB,EAAO,CACnBsD,eAAgB,CACds+B,QAAS,CAAC,CAAC5lB,EAAoB,OAK9Bhc,EAGX,IArDuC,8BAsDrC,CACE,MAAMkc,EAAgBzY,EAAOnC,MACvB0a,EAAqBhc,EAAMsD,eAAe2Y,UAAU7b,GAAQA,EAAKT,KAAOuc,EAAcvc,IAE5F,GAAIqc,GAAsB,EAAG,CAM3B,OALiByH,KAAOzjB,EAAO,CAC7BsD,eAAgB,CACds+B,QAAS,CAAC,CAAC5lB,EAAoB,EAAGja,OAAO8N,OAAO,GAAIqM,QAM1D,OAAOlc,EAGX,IAxEsC,6BAyEpC,CACE,MAAM+hC,EAAa1+B,YAAQrD,EAAMsD,gBACjC,IAAI0+B,GAAmB,EACvB,MAAMC,EAAgBx+B,EAAOnC,MAAMb,IAAI,EACrCi9B,IACAzB,IACArjB,IACAC,IACAsR,QAEA,MAAM+X,EAAYH,EAAW78B,KAAKi9B,GAAMA,EAAGxiC,KAAOwqB,GAElD,OAAM+X,EAAUxE,IAAMA,GAAKwE,EAAUjG,IAAMA,GAAKiG,EAAUtpB,IAAMA,GAAKspB,EAAUrpB,IAAMA,GACnFmpB,GAAmB,EACZjgC,OAAO8N,OAAO,GAAIqyB,EAAW,CAClCtpB,IACAC,IACA6kB,IACAzB,OAIGiG,IAET,OAAOF,EAAgB,2BAAQhiC,GAAR,IACrBsD,eAAgB2+B,IACdjiC,EAGR,QACE,OAAOA,I+BhFX0E,Y3GvBc,CAAC1E,EAAQwE,GAA4Bf,KACnD,OAAQA,EAAOtF,MACb,IAL2B,kBAOvB,OAAO,2BAAK6B,GAAZ,IACE,CAACyD,EAAOxB,OAAOtC,IAAK8D,EAAOxB,OAAOX,QAIxC,IAX8B,qBAY5B,CACE,MAAMqgC,EAAQ,eAAQ3hC,GAGtB,cADO2hC,EAASl+B,EAAO9D,IAChBgiC,EAGX,IArB4B,mBAuBxB,OAAOl+B,EAAOoB,QAGlB,IA3B8B,qBA6B1B,OAAOL,GAGX,QACE,OAAOxE,I2GJX8I,SACAG,StGzBc,CAACjJ,EAAQoG,GAAwB3C,KAC/C,OAAQA,EAAOtF,MACb,IATqC,4BAWjC,OAAO,2BAAK6B,GACPyD,EAAOnC,OAIhB,IAf0B,iBAiBtB,OAAO8E,GAGX,QACE,OAAOpG,IsGWXuE,W5G9Bc,CAACvE,EAAQkE,GAAoBT,KAC3C,OAAQA,EAAOtF,MACb,IAJ0B,iBAMtB,MAAO,IAAI+F,MAAuBT,EAAOnC,OAG7C,QACE,OAAOtB,I4GuBXqN,SvFxBc,CAACrN,EAAQ8M,GAAkBrJ,KACzC,OAAQA,EAAOtF,MACb,IAZwB,eAcpB,OAAO4D,OAAO8N,OAAO,GAAIpM,EAAOnC,OAGpC,IAhBwB,eAkBpB,OAAO,2BAAKtB,GACPyD,EAAOnC,OAIhB,QACE,OAAOtB,IuFUXkhB,qBxDhCc,CAAClhB,EAAQghB,GAAsCvd,KAC7D,OAAQA,EAAOtF,MACb,IALsC,6BAOlC,OAAOsF,EAAOnC,MAGlB,IATwC,+BAWpC,OAAO0f,GAGX,QACE,OAAOhhB,IwDoBXm3B,apBlCc,CAACn3B,EAAQi3B,GAA6BxzB,KACpD,OAAQA,EAAOtF,MACb,IAJ6B,oBAMzB,OAAOsF,EAAOnC,MAGlB,QACE,OAAOtB,MqBOEoiC,OAZQ,KACrB,MAAMC,EAAa,CAACC,MAEdC,EAAmBh0B,OAAOi0B,sCAAwCC,IAMxE,OAJKl0B,OAAOi0B,qCAILE,YAAYC,GAASJ,EAAiBK,eAAmBP,M,8TCwBlExuB,IAAKgvB,aAAa,KADA,UACiBC,IACnCjvB,IAAKgvB,aAAa,QAFA,UAEoBE,IACtClvB,IAAKgvB,aAAa,MAHA,UAGkBG,IACpCnvB,IAAKgvB,aAAa,KAJA,UAIiBI,IACnCpvB,IAAKgvB,aAAa,KALA,UAKiBK,IACnCrvB,IAAKgvB,aAAa,KANA,UAMiBM,IACnCtvB,IAAKgvB,aAAa,KAPA,UAOiBO,IACnCvvB,IAAKgvB,aAAa,KARA,UAQiBQ,IACnCxvB,IAAKgvB,aAAa,KATA,UASiBS,IACnCzvB,IAAKgvB,aAAa,KAVA,UAUiBU,IACnC1vB,IAAKgvB,aAAa,KAXA,UAWiBW,IACnC3vB,IAAKgvB,aAAa,KAZA,UAYiBY,IACnC5vB,IAAKgvB,aAAa,KAbA,UAaiBa,IACnC7vB,IAAKgvB,aAAa,MAdA,UAckBc,IACpC9vB,IAAKgvB,aAAa,KAfA,UAeiBe,IACnC/vB,IAAKgvB,aAAa,KAhBA,UAgBiBgB,IACnChwB,IAAKgvB,aAAa,QAjBA,UAiBoBiB,IACtCjwB,IAAKgvB,aAAa,KAlBA,UAkBiBkB,IACnClwB,IAAKgvB,aAAa,KAnBA,UAmBiBmB,IACnCnwB,IAAKgvB,aAAa,MApBA,UAoBkBoB,IACpCpwB,IAAKgvB,aAAa,KArBA,UAqBiBqB,IACnCrwB,IAAKgvB,aAAa,KAtBA,UAsBiBsB,IACnCtwB,IAAKgvB,aAAa,KAvBA,UAuBiBuB,IACnCvwB,IAAKgvB,aAAa,KAxBA,UAwBiBwB,IACnCxwB,IAAKgvB,aAAa,UAzBA,UAyBsByB,IACxCzwB,IAAKgvB,aAAa,KA1BA,UA0BiB0B,IACnC1wB,IAAKgvB,aAAa,KA3BA,UA2BiB2B,IACnC3wB,IAAKgvB,aAAa,QA5BA,UA4BoB4B,IACvB5wB,EAAf,ECxDA,MAEM6wB,GAAW,CACfC,QAAS,CAAC,QAAS,MAAO,SAAU,cAAe,aAAc,cAAe,YAAa,mBAAoB,cAI7GC,GAAgBrnC,uLAAYsnC,+BAAiC,KAE/DD,KACFF,GAASI,QAAU,CACjBtf,cAAeof,KAuBJG,UAnBI,IACV,kBAAC,IAAD,CAAeC,MAAO5C,MACnB,kBAAC,mBAAD,CAAkB6C,MAjBPC,yBAAeC,MAkBtB,kBAAC,IAAD,CAAQT,SAAUA,GAAUU,SAAS,UAChC,EACXz/B,QAEKA,EAKE,kBAAC,GAAD,CAAKA,GAAIA,IAHP,S,0TC7BZ,SAAStC,EAAQgiC,GACtB,OAAO5I,MAAM6I,QAAQD,GAASA,EAAQ,GAEjC,SAAS3jC,EAAS2jC,GACvB,OAAOE,IAASF,GAASA,EAAQ,GAO5B,SAAS95B,EAAagkB,GAC3B,OAAOA,EAAMxqB,OAAO,CAAC2lB,EAAKtqB,KACxBsqB,EAAItqB,EAAKT,IAAMS,EACRsqB,GACN,IAYE,MAAM6D,EAAa,CAACjtB,EAAOzB,KAChC,GAA2B,qBAAhB2lC,EAAOC,MAAwBA,KAAKC,eAAgB,CAC7D,MAAMpM,EAASz5B,GAAY,KAC3B,OAAO,IAAI4lC,KAAKC,eAAepM,EAAQ,CACrCqM,KAAM,UACNC,MAAO,QACPC,IAAK,YACJC,OAAO,IAAIC,KAAKzkC,IAGrB,OAAOA,EAAM2B,OAAO,EAAG,IAAIzF,QAAQ,IAAK,MAoB7BkG,EAAkB,CAACpC,EAAOmH,SAA2B7B,IAAVtF,GAAiC,OAAVA,EAAiBmH,EAAenH,EAClG+jB,EAAa1f,IACxB,MAAMqgC,EAAMrgC,EAAGC,IAAIC,SACbogC,EAAMD,EAAI5gB,QAAQwX,QAAQ,QAChC,OAAOqJ,GAAO,EAAID,EAAI5gB,QAAQ5H,MAAM,EAAGyoB,GAAOD,EAAI5gB,SAEvC8gB,EAAerqB,GAAM,2BAAUA,GAAV,IAChClc,QAAIiH,M,mDCrEN,igCAaO,MAAMoR,EAAgB,gBAChBrN,EAAe,eACfC,EAAQ,QACRC,EAAM,MACNC,EAAe,eACfC,EAAc,cACd6P,EAAM,MACNF,EAAU,UACVC,EAAY,YACZF,EAAQ,QACRxP,EAAW,WACX5K,EAAO,OACPK,EAAS,SACTgZ,EAAY,YACZI,EAAmB,mBAInBkb,EAAsB50B,KAAUiZ,EAAYjZ,EAAKjC,MAAM62B,oBACvDrM,EAAazL,GAJI,cAIQ7D,EAAY6D,GAAUipB,WAC/Cre,EAAsB5K,GAJP,YAImB7D,EAAY6D,GAAUipB,WACxD9oB,EAAsBH,GAAY7D,EAAY6D,GAAUkpB,kBAAoB,EAC5Epd,EAAa9L,GAAY7D,EAAY6D,GAAU6L,SAAW,GAE1D1P,EAAc,CACzB,CAACrB,GAAgB,CACfrY,GAAIqY,EACJmF,aAAc,iBACd7D,SAAU,gBACVmE,YAAa5J,IAAKC,EAAE,kBACpBuyB,OAAQ1mC,GAAE,qCAAkCA,GAC5CopB,QAAS,kBACTqd,iBAAkB,IAEpB,CAACz7B,GAAe,CACdhL,GAAIgL,EACJwS,aAAc,iBACd7D,SAAU,gBACVmE,YAAa5J,IAAKC,EAAE,gBACpBqyB,WAxB0B,YAyB1BnR,qBAAqB,EACrBqR,OAAQ1mC,GAAE,qCAAkCA,GAC5CopB,QAAS,mBAEX,CAACne,GAAQ,CACPjL,GAAIiL,EACJuS,aAAc,iBACd7D,SAAU,gBACVmE,YAAa5J,IAAKC,EAAE,UACpBqyB,WAlC0B,YAmC1BnR,qBAAqB,EACrBqR,OAAQ1mC,GAAE,qCAAkCA,GAC5CopB,QAAS,mBAEX,CAACle,GAAM,CACLlL,GAAIkL,EACJsS,aAAc,OACd7D,SAAU,MACVmE,YAAa5J,IAAKC,EAAE,QACpBqyB,WA5C0B,YA6C1BnR,qBAAqB,EACrBqR,OAAQ1mC,GAAE,4BAAyBA,GACnCopB,QAAS,QAEX,CAACje,GAAe,CACdnL,GAAImL,EACJqS,aAAc,eACd7D,SAAU,cACVmE,YAAa5J,IAAKC,EAAE,iBACpBqyB,WArDwB,UAsDxBnR,qBAAqB,EACrBqR,OAAQ1mC,GAAE,qCAAkCA,GAC5CopB,QAAS,iBAEX,CAAChe,GAAc,CACbpL,GAAIoL,EACJoS,aAAc,cACd7D,SAAU,aACVmE,YAAa5J,IAAKC,EAAE,gBACpBqyB,WA/DwB,UAgExBnR,qBAAqB,EACrBqR,OAAQ1mC,GAAE,wCAAqCA,GAC/CopB,QAAS,oBAEX,CAACnO,GAAM,CACLuC,aAAc,OACd7D,SAAU,SACVmE,YAAa5J,IAAKC,EAAE,SAEtB,CAAC4G,GAAU,CACT/a,GAAI+a,EACJyC,aAAc,UACd7D,SAAU,UACVmE,YAAa5J,IAAKC,EAAE,WACpBuyB,OAAQ,CAAC1mC,EAAIxB,KACX,OAAQA,GACN,IAAK,OACH,MAAM,2CAAN,OAAkDwB,GAEpD,IAAK,sBACL,IAAK,cACL,QACE,MAAM,eAAN,OAAsBA,EAAtB,wBAAuC,IAAIomC,MAAOO,cAI1D,CAAC3rB,GAAY,CACXhb,GAAIgb,EACJwC,aAAc,YACd7D,SAAU,YACVmE,YAAa5J,IAAKC,EAAE,aACpBuyB,OAAQ1mC,GAAE,wBAAqBA,EAArB,UAEZ,CAAC8a,GAAQ,CACP9a,GAAI8a,EACJ0C,aAAc,QACd7D,SAAU,QACVmE,YAAa5J,IAAKC,EAAE,SACpBuyB,OAAQ1mC,GAAE,2DAAwDA,IAEpE,CAACU,GAAO,CACNV,GAAIU,EACJiZ,SAAU,QAEZ,CAACrO,GAAW,CACVqO,SAAU,YAEZ,CAAC5Y,GAAS,CACR4Y,SAAU,QAEZ,CAACI,GAAY,CACXJ,SAAU,QAEZ,CAACQ,GAAmB,CAClBR,SAAU,SAGDitB,EAAkBpoC,GAAQkb,EAAYlb,GAAMgf,aAC5C5B,EAAa,CAACpd,EAAMiC,EAAMuF,KACrC,IAAIH,EAUJ,OARIrH,IAASyc,IACXpV,EAAMpF,EAAKqxB,WAGTpY,EAAYlb,IAASkb,EAAYlb,GAAMkoC,SACzC7gC,EAAG,UAAM6f,YAAW1f,GAAjB,YAAwB0T,EAAYlb,GAAMkoC,OAAOjmC,EAAKT,GAAIS,EAAKjC,QAG7DqH,GAEIsS,EAAc3Z,IACzB,OAAQA,GACN,KAAKwM,EACL,KAAKG,EACL,KAAK4P,EACH,OAAO8rB,IAET,KAAK57B,EACL,KAAKG,EACH,OAAO07B,IAET,KAAK57B,EACH,OAAO67B,IAET,KAAK9rB,EACH,OAAO+rB,IAET,KAAKhsB,EACH,OAAOoU,IAET,KAAKtU,EACH,OAAOmsB,IAET,KAAKvmC,EACH,OAAOwmC,IAET,KAAK57B,EACH,OAAO67B,IAET,KAAKpmC,EACH,OAAOqmC,IAET,QACE,OAAOC,O,iCCrMb,+jBAGO,MAAMjR,EAAoB,WAEpBH,EAAkB,GAIlBJ,EAAS,CAAC,GAAI,IACdxb,EAAiB,CAC5B0jB,EAAG,EACHzB,EAAG,EACHrjB,EAAG,GACHC,EAAG,IAMQqlB,EAAuB,GACvByB,EAA4B,GAC5BD,EAA2B,GAK3B9E,EAAqB,KACrBlF,EAAiB,IAVT,GAuBfuR,EAAuBvJ,GAAKwJ,OAAOC,UAAUzJ,IAAMA,GAAK,EAGjDtH,EAAWh2B,GAAQ6mC,EAAqB7mC,EAAKs9B,IAAMuJ,EAAqB7mC,EAAK67B,IAAMgL,EAAqB7mC,EAAKwY,IAAMquB,EAAqB7mC,EAAKyY,GAmB7I9X,EAAwB0lB,IAC5B,CACL0D,EAAG1D,EACH2gB,KAAM,IAIGxtB,EAAwB,CAACD,EAAME,GAAW,KAC9C,CACL6jB,EAAG,EACHzB,EAAGtiB,EACHf,EAvDwByuB,GAwDxBxuB,EAAG,EACHyuB,SAAUztB,EACVutB,KAAM,IAGGrtB,EAA6Bwd,IACjC,CACLmG,EAAG,EACHzB,EAAG,EACHrjB,EAAG2e,EAAmBmI,EAjEE2H,GAkExBxuB,EAAGqlB,EACHoJ,QAAQ,EACRF,KAAM,IAyBG78B,EAAY/J,GAASA,EAAMC,IAAI,CAACL,EAAMkvB,KACjD,MAAMiY,EAAgBnR,EAASh2B,GAAQA,EAAO2B,OAAO8N,OAAO,GAAIzP,EAlE1C+pB,KACtB,IAAK8c,EAAqB9c,GACxB,MAAM,IAAIqd,MAAM,6BAGlB,MAAMC,EAAMtd,EAnCc,EAoCpBud,EAAMh4B,KAAKsF,MAAMmV,EApCG,GAqCpBwd,EAAYj4B,KAAKsF,MAAM4yB,MACvBC,EAA+B,EAAlBjS,EACnB,MAAO,CACL8H,EAAG+J,EAAME,EACT1L,EAAGyL,EAAMG,EACTjvB,EAAG+uB,EACH9uB,EAAGgvB,IAqDiEC,CAASxY,IAC/E,OAAOvtB,OAAO8N,OAAO,GAAI03B,EAhBMnnC,KAExB,CACLirB,eAFqB3b,KAAKq4B,MAAMnS,EAAkBx1B,EAAKyY,EAAInJ,KAAKC,IAAI,EAAGvP,EAAKyY,EAAI,GAAK2c,EAAO,MAetDwS,CAAkBT,MAE/C3hB,EAAmBjmB,GAAE,eAAYA,GACvC,SAASo1B,EAAap1B,GAC3B,MAAM6vB,EAAK9tB,YAAS5D,SAASC,cAAT,WAA2B6nB,EAAiBjmB,MAC5DsoC,IAAWzY,EAAG0Y,kBAAkBj+B,WAAW,IAAMulB,EAAG0Y,gBAAgB1Y,EAAG2Y,YAAc,EAAG3Y,EAAGhE,aAAe,GAAI,M,udC/GpH,MAAM4c,EAA2B,CAC/B,CAACv9B,KAAM,YACP,CAACC,KAAe,oBAChB,CAACC,KAAc,oBAGXs9B,EAAsBlqC,GAAQ,CAACyM,IAAOD,KAAcpL,SAASpB,GAE7DmqC,EAAuB,CAC3B,CAACz9B,KAAM,wBACP,CAACC,KAAe,yCAChB,CAACC,KAAc,4CAGXw9B,EAAYnqC,UAChB,GAAIiqC,EAAoBlqC,GACtB,OAAO,EAIT,OAAOqnC,EADY4C,EAAyBjqC,KAKjC6M,EAAkB5K,IAC7B,IAAKmlC,IAASnlC,GACZ,OAAO,KAIT,OAAOA,EADUiZ,IAAYjZ,EAAKjC,MAAMmb,WACflZ,EAAKooC,aAAepoC,EAAKqoC,OAASroC,EAAKK,KAAOL,EAAKsoC,aAAetoC,EAAKuoC,YAAc,IAgCnG/f,EAAoBzqB,GAAQkqC,EAAoBlqC,IAASiqC,EAAyBjqC,GAClFyqC,EAAaxqC,MAAOD,EAAM0qC,EAAQ3jB,KAC7C,IAAK0D,EAAkBzqB,GACrB,OAGF,MAAM2qC,OAlCY1qC,OAAOD,EAAMinB,KAC/B,MAAM2jB,EAAaX,EAAyBjqC,GAE5C,GAAIqnC,EAAOuD,GACT,OAAOvD,EAAOuD,GAGhB,MAAMC,EAAU,GAEZ7qC,IAAS2M,KAAgB3M,IAAS4M,MAElCi+B,EAAQ/jC,KAAK,yCACb+jC,EAAQ/jC,KAAK,gCACb+jC,EAAQ/jC,KAAK,yCAQjB+jC,EAAQ/jC,KAAKmgB,EAAUkjB,EAAqBnqC,IAC5C,MAAM8qC,EAAiBtrC,QAAQurC,IAAIF,EAAQvoC,IAAItD,MAAqBuI,KAAK,IAAM8/B,EAAOuD,IAGtF,OADAvD,EAAOuD,GAAcE,QACRA,GASQE,CAAYhrC,EAAM+mB,EAAYE,SAE7C0jB,GAAUA,EAAOM,OAIvBN,EAAOtjC,IAAM0f,EAAYE,QACzB0jB,EAAOO,kBAAmB,EAC1BP,EAAO5mC,WAAY,EAEfgjB,EAAYI,OACdwjB,EAAOxjB,KAAOJ,EAAYI,MAG5BwjB,EAAOM,KAAKP,KAEDpf,EAAQrpB,GAAQ4K,EAAgB5K,GAAMT,GACtC2pC,EAAUlpC,GAAQ4K,EAAgB5K,GAAMqC,KAExCwmB,EAAU,CAAC7oB,EAAMuF,KAC5B,MAAMyf,EAAUC,YAAW1f,GACrB0gC,EAAShtB,IAAYjZ,EAAKjC,MAAMkoC,OAAO5c,EAAMrpB,IACnD,MAAM,GAAN,OAAUglB,EAAV,YAAqBihB,IAEV+C,EAAOhrC,MAAOgC,EAAMskB,GAC/BQ,cACAL,aACAY,UAAU,OAEV,MAAMojB,EAAM,uCAAQnkB,GACfe,GADO,IAEV+J,GAAI5J,YAAiBxlB,EAAKT,MAEtBxB,EAAO0mB,GAAczkB,EAAKjC,WAC1ByqC,EAAWzqC,EAAM0qC,EAAQ3jB,IAEpBqkB,EAAQnrC,eACWorC,YAAiB/f,EAAMrpB,GAAOA,EAAKjC,KAAM,CACrE2J,OAAQ1H,EAAKjC,OAAS0M,IAAM4+B,cAAiB,OAIpCC,EAAStpC,IACpB,MAAM0oC,EAASP,EAAUnoC,EAAKjC,MAE1B2qC,GAAUA,EAAOY,QACnBZ,EAAOY,OAAO9jB,YAAiBxlB,EAAKT,MAG3BgqC,EAAU,CAACvpC,EAAMykB,KAC5B,MAAMikB,EAASP,EAAU1jB,GAErBikB,GAAUA,EAAOa,SACnBb,EAAOa,QAAQ/jB,YAAiBxlB,EAAKT,MAG5BiqC,EAAyB,CAACllB,EAAemlB,EAAchlB,KAClE,GAAIglB,IAAiBh/B,KAAOg/B,IAAiBhlB,EAAY,CACvD,MAAMilB,GA9FoBrpC,EA8FcikB,GA9FHsH,UAAYvrB,EAAIurB,SAAS9mB,KAAK6kC,GAAMA,EAAG9d,MAAM1sB,SATxD,aAyG1B,YAAyBqH,IAArBkjC,EACK,KAGF5D,YAAa,uCAAKxhB,GACpBolB,GADc,IAEjB9d,cAAUplB,EACVzI,KAAM0mB,IAAeja,IAAQo/B,IAAkBC,OAE5C,GAAIJ,IAAiBl/B,KAAgBka,IAAeja,IAAO,CAChE,MAAMggB,EAAUlG,EAAcwlB,KAAiB1sB,QACzC9Q,EAAOgY,EAAcylB,KAAc3sB,QACnCqX,EAAS,GAUf,OARInQ,EAAchY,KAAKnJ,OAAS,EAC9BsxB,EAAOsV,KAAgBz9B,EAAKnJ,OAAS,EAAImJ,EAAK09B,OAAO,EAAG,GAAK19B,EAAK09B,OAAO,EAAG19B,EAAKnJ,QAEjFsxB,EAAOsV,KAAgBz9B,EAAKnJ,OAAS,CAACmJ,EAAK29B,SAAW39B,EAGxDmoB,EAAOqV,KAAmBtf,EAAQrnB,OAAS,CAACqnB,EAAQyf,SAAWzf,EAC/DiK,EAAOyV,KAAmB,IAAI5lB,EAAc4lB,QAAqB1f,KAAYle,GACtEw5B,YAAa,uCAAKxhB,GACpBmQ,GADc,IAEjB12B,KAAM6rC,OAEH,OAAIH,IAAiBj/B,KAASia,IAAela,IAC3Cu7B,YAAa,2BAAKxhB,GAAN,IACjBvmB,KAAM8rC,OAIH/D,YAAaxhB,GAhIQjkB,S,sCCvC9B1B,EAAOC,QAAU,CAAC,eAAiB,mCAAmC,UAAY,8BAA8B,gBAAkB,sC,uDCDlI,kNAIO,MAAM0I,EAAkB,EAC7BC,UACE,KAAO,CAAC,KAAD,UAAUA,EAAS,2BAA6B,qBAI9C4iC,EAAqB,EAChC9iC,eACIL,IAAW,CAAC,YAAa,gBAAiB,SAAU,eAAgBK,EAAS,gBAJhD,CAAC,2BAA4B,2BAA4B,qBAImBhK,KAAK,KAAjC,UAEtE+sC,EAAgB,EAC3B/iC,eACI,CAAC,WAAD,OAAY8iC,EAAmB,CACnC9iC,cACChK,KAAK,KAFF,oBAEmB8sC,EAAmB,CAC1C9iC,cACChK,KAAK,KAJF,uBAIsB8sC,EAAmB,CAC7C9iC,cACChK,KAAK,KANF,MAQOgtC,EAAoB,EAC/BljC,iBACAmjC,iBAEOtjC,IAAW,CAAC,GAAD,OAAIM,EAAgB,CACpCC,QAAQ,IACPlK,KAAK,MAAQ,yCAA0C8J,EAAc,UAAMijC,EAAc,CAC1F/iC,WAAW,IACVhK,KAAK,MAFgE,GAEnDitC,EAAc,CAAC,IAAK,uBAAwB,mBAAoB,YAAa,sBAAuB,oCAAqC,oBAAqB,sBAAuB,yBAA0B,iCAAkC,oBAAqB,8BAA+B,iBAAkB,sCAAuC,0BAA2B,qBAAsB,8BAA+B,mBAAoB,gBAAiB,iBAAkB,gBAAiB,wBAAyB,gCAAiC,sCAAsCjtC,KAAK,KAAO,KAE5mB6J,EAAqB,EAChCC,oBACI,CAAC,eAAD,OAAgBkjC,EAAkB,CACtCljC,mBACC9J,KAAK,KAFF,qBAEoB,CAAC,UAAWgtC,EAAkB,CACtDljC,oBACE9J,KAAK,KAJH,mBAImBgtC,EAAkB,CACzCljC,mBACC9J,KAAK,KANF,2BAM0BgtC,EAAkB,CAChDljC,mBACC9J,KAAK,KARF,0BAQyBgtC,EAAkB,CAC/CljC,mBACC9J,KAAK,KAVF,MAYO4J,EAAoB,IAAM,CAAC,WAAD,OAAY,CAAC,UAAWK,EAAgB,CAC7EC,QAAQ,KACNlK,KAAK,KAF8B,yBAERiK,EAAgB,CAC7CC,QAAQ,IACPlK,KAAK,KAJ+B,qBAIbiK,EAAgB,CACxCC,QAAQ,IACPlK,KAAK,KAN+B,MAQ1BgsC,EAAe,IAAM,CAAC,GAAD,OAAI/hC,EAAgB,CACpDC,QAAQ,IACPlK,KAAK,MAAQ,uCAFkB,mBAEkCgtC,EAAkB,CACpFljC,gBAAgB,EAChBmjC,aAAa,IAJmB,MAQrBlB,EAAmB,CAAC7pC,EAAIxB,GACnC2J,YACIrC,wBAAcC,KAAKC,GAAMA,EAAGC,IAAIC,SAASC,IAAhB,UAAuBygC,YAAgBpoC,GAAvC,YAAgDwB,GAAM,CACnFmI,OAAQA,GAAU2iC,EAAkB,CAClCljC,gBAAgB,EAChBmjC,aAAa,Q,oBCpEjB3rC,EAAOC,QAAU,CAAC,aAAe,oCAAoC,cAAgB,qCAAqC,UAAY,mC","file":"static/js/app.916694f4.chunk.js","sourcesContent":["const isRelative = path => path.startsWith('./');\n\nconst normalizeRelativePath = path => [process.env.PUBLIC_URL, path.replace(/^\\.\\//, '')].join('/');\n\nconst isScriptLoaded = src => document.querySelector('script[src=\"' + src + '\"]') ? true : false;\n\nexport const loadExternalScript = src => {\n  if (isRelative(src)) {\n    src = normalizeRelativePath(src);\n  }\n\n  return new Promise((resolve, reject) => {\n    if (isScriptLoaded(src)) {\n      return resolve();\n    }\n\n    const element = document.createElement('script');\n    element.src = src;\n    element.type = 'text/javascript';\n    element.async = false;\n\n    const cleanup = () => {\n      console.log(`Dynamic Script Removed: ${src}`);\n      document.head.removeChild(element);\n    };\n\n    element.onload = () => {\n      console.log(`Dynamic Script Loaded: ${src}`);\n\n      try {\n        resolve();\n      } catch (e) {\n        cleanup();\n        reject();\n      }\n    };\n\n    element.onerror = () => {\n      console.error(`Dynamic Script Error: ${src}`);\n      cleanup();\n      reject();\n    };\n\n    document.head.appendChild(element);\n  });\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ControlBar_root__iikeX\",\"content\":\"ControlBar_content__26Z33\",\"draghandle\":\"ControlBar_draghandle__27zum\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"DashboardItemChip_link__21drZ\",\"icon\":\"DashboardItemChip_icon__2hcIR\",\"selected\":\"DashboardItemChip_selected__r00uP\",\"unselected\":\"DashboardItemChip_unselected__2H9l2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ClearButton_button__33ZbK\",\"icon\":\"ClearButton_icon__vTJm3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"showMore\":\"ShowMoreButton_showMore__3S3He\",\"disabled\":\"ShowMoreButton_disabled__2FQNA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuItem\":\"ContentMenuItem_menuItem__vbKn3\",\"launchLink\":\"ContentMenuItem_launchLink__2Nql9\",\"label\":\"ContentMenuItem_label__ANfH1\",\"buttonInsert\":\"ContentMenuItem_buttonInsert__1joHg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"showMoreButton\":\"CategorizedMenuGroup_showMoreButton__2RbRp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"EditTitleBar_section__LIaIC\",\"titleDescription\":\"EditTitleBar_titleDescription__1YsU6\",\"title\":\"EditTitleBar_title__3mUbt\",\"description\":\"EditTitleBar_description__24U5X\",\"itemSelector\":\"EditTitleBar_itemSelector__1cFEp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"actions\":\"ViewTitleBar_actions__2UTRz\",\"editLink\":\"ViewTitleBar_editLink__d_HzW\",\"titleBar\":\"ViewTitleBar_titleBar__eiwJS\",\"titleBarIcon\":\"ViewTitleBar_titleBarIcon__2cBxv\",\"strip\":\"ViewTitleBar_strip__3xR4U\",\"backdrop\":\"ViewTitleBar_backdrop__2Cpm8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FatalErrorBoundary_container__3SViR\",\"icon\":\"FatalErrorBoundary_icon__2UbeP\",\"message\":\"FatalErrorBoundary_message__3FzrY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"deleteItemButton\":\"DeleteItemButton_deleteItemButton__3TJm9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"warning\":\"PrintItemInfo_warning__123PK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"center\":\"LoadingMask_center__2SFwS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textDiv\":\"Item_textDiv__1U7zV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Item_list__1_nkQ\",\"item\":\"Item_item__3-6QE\",\"itemicon\":\"Item_itemicon__QlouX\",\"link\":\"Item_link___3c_q\",\"deleteicon\":\"Item_deleteicon__3usrl\",\"deletebutton\":\"Item_deletebutton__1DpBW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"titlePage\":\"Item_titlePage__18CNQ\",\"name\":\"Item_name__3nuTV\",\"description\":\"Item_description__1gFQd\",\"filterTitle\":\"Item_filterTitle__2p7TQ\",\"filterList\":\"Item_filterList__qc_G3\",\"filterListItem\":\"Item_filterListItem__sPbBY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bar\":\"FilterBar_bar__1Ma3p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ConfirmDeleteDialog_content__EqswE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"infoWrapper\":\"PrintInfo_infoWrapper__3m2lt\",\"infoHeader\":\"PrintInfo_infoHeader__KyW8I\",\"info\":\"PrintInfo_info__13oXZ\",\"infoList\":\"PrintInfo_infoList__Iu9MC\",\"divider\":\"PrintInfo_divider__3wzx9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PrintActionsBar_container__2iQp7\",\"topMargin\":\"PrintActionsBar_topMargin__OpYDN\",\"inner\":\"PrintActionsBar_inner__uBqU7\",\"link\":\"PrintActionsBar_link__lFUmI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"PrintLayoutDashboard_wrapper__1WDh4\",\"pageOuter\":\"PrintLayoutDashboard_pageOuter__22acI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"PrintDashboard_wrapper__1O3s_\",\"pageOuter\":\"PrintDashboard_pageOuter__fl9tw\"};","export const EDIT = 'edit';\nexport const NEW = 'new';\nexport const VIEW = 'view';\nexport const PRINT = 'print';\nexport const PRINT_LAYOUT = 'print-layout';\nexport const isEditMode = mode => [EDIT, NEW].includes(mode);\nexport const isPrintMode = mode => [PRINT, PRINT_LAYOUT].includes(mode);\nexport const isViewMode = mode => mode === VIEW;","export const RECEIVED_USER = 'RECEIVED_USER';\nexport const DEFAULT_STATE_USER = {\n  id: '',\n  username: '',\n  uiLocale: '',\n  isSuperuser: false\n};\nexport default ((state = DEFAULT_STATE_USER, action) => {\n  switch (action.type) {\n    case RECEIVED_USER:\n      {\n        return fromD2ToUserObj(action.value);\n      }\n\n    default:\n      return state;\n  }\n});\n\nfunction fromD2ToUserObj(d2Object) {\n  return {\n    id: d2Object.id,\n    username: d2Object.username,\n    uiLocale: d2Object.settings.keyUiLocale,\n    isSuperuser: d2Object.authorities.has('ALL')\n  };\n} // selectors\n\n\nexport const sGetUserId = state => state.user.id;\nexport const sGetUserUsername = state => state.user.username;\nexport const sGetIsSuperuser = state => state.user.isSuperuser;\nexport const sGetUiLocale = state => state.user.uiLocale;","import { TEXT, SPACER } from './itemTypes';\nimport { getGridItemProperties } from '../components/ItemGrid/gridUtil';\nexport const spacerContent = 'SPACER_ITEM_FOR_DASHBOARD_LAYOUT_CONVENIENCE';\nexport const emptyTextItemContent = 'TEXT_ITEM_WITH_NO_CONTENT';\n\nconst isBackendSpacerType = item => item.type === TEXT && item.text === spacerContent;\n\nconst isUiSpacerType = item => item.type === SPACER;\n\nconst isTextType = item => item.type === TEXT && item.text !== spacerContent;\n\nexport const convertUiItemsToBackend = items => items.map(item => {\n  let text = null;\n\n  if (isUiSpacerType(item)) {\n    text = spacerContent;\n  } else if (isTextType(item)) {\n    text = item.text || emptyTextItemContent;\n  }\n\n  return { ...item,\n    ...(text ? {\n      text\n    } : {})\n  };\n});\nexport const convertBackendItemsToUi = items => items.map(item => {\n  const type = isBackendSpacerType(item) ? SPACER : item.type;\n  const gridProperties = getGridItemProperties(item.id);\n  const text = isTextType(item) ? item.text === emptyTextItemContent ? '' : item.text : null;\n  return { ...item,\n    ...(text !== null ? {\n      text\n    } : {}),\n    type,\n    ...gridProperties\n  };\n});","/** @module reducers/dashboards */\nimport arrayFrom from 'd2-utilizr/lib/arrayFrom';\nimport arraySort from 'd2-utilizr/lib/arraySort';\nimport { orArray, orObject } from '../modules/util';\nimport { convertBackendItemsToUi } from '../modules/uiBackendItemConverter';\nexport const SET_DASHBOARDS = 'SET_DASHBOARDS';\nexport const ADD_DASHBOARDS = 'ADD_DASHBOARDS';\nexport const SET_DASHBOARD_STARRED = 'SET_DASHBOARD_STARRED';\nexport const SET_DASHBOARD_DISPLAY_NAME = 'SET_DASHBOARD_DISPLAY_NAME';\nexport const SET_DASHBOARD_ITEMS = 'SET_DASHBOARD_ITEMS';\nexport const DEFAULT_STATE_DASHBOARDS = {\n  byId: null,\n  items: []\n};\nexport const EMPTY_DASHBOARD = {}; // reducer helper functions\n\nconst updateDashboardProp = ({\n  state,\n  dashboardId,\n  prop,\n  value\n}) => ({\n  byId: { ...state.byId,\n    [dashboardId]: { ...state.byId[dashboardId],\n      [prop]: value\n    }\n  },\n  items: state.items\n});\n/**\n * Reducer that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n * @returns {Object}\n */\n\n\nexport default ((state = DEFAULT_STATE_DASHBOARDS, action) => {\n  switch (action.type) {\n    case SET_DASHBOARDS:\n      {\n        return {\n          byId: action.value,\n          items: []\n        };\n      }\n\n    case ADD_DASHBOARDS:\n      {\n        return { ...state,\n          byId: { ...state.byId,\n            ...action.value\n          }\n        };\n      }\n\n    case SET_DASHBOARD_STARRED:\n      {\n        return updateDashboardProp({\n          state,\n          dashboardId: action.dashboardId,\n          prop: 'starred',\n          value: action.value\n        });\n      }\n\n    case SET_DASHBOARD_DISPLAY_NAME:\n      {\n        return updateDashboardProp({\n          state,\n          dashboardId: action.dashboardId,\n          prop: 'displayName',\n          value: action.value\n        });\n      }\n\n    case SET_DASHBOARD_ITEMS:\n      {\n        return { ...state,\n          items: action.value\n        };\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetDashboardsRoot = state => state.dashboards; // selector level 1\n\n/**\n * Selector which returns a dashboard by id from the state object\n * If no matching dashboard is found it returns undefined\n * If dashboards.byId is null, then the dashboards api request\n * has not yet completed. If dashboards.byId is an empty object\n * then the dashboards api request is complete, but no dashboards\n * were returned\n *\n * @function\n * @param {Object} state The current state\n * @param {Number} id The id of the dashboard\n * @returns {Object | undefined}\n */\n\nexport const sGetDashboardById = (state, id) => orObject(sGetDashboardsRoot(state).byId)[id];\nexport const sDashboardsIsFetching = state => {\n  return sGetDashboardsRoot(state).byId === null;\n};\n/**\n * Selector which returns all dashboards (the byId object)\n *\n * @function\n * @param {Object} state The current state\n * @returns {Object | undefined}\n */\n\nexport const sGetAllDashboards = state => orObject(sGetDashboardsRoot(state).byId);\n/**\n * Selector which returns the current dashboard items\n *\n * @function\n * @param {Object} state The current state\n * @returns {Array}\n */\n\nexport const sGetDashboardItems = state => sGetDashboardsRoot(state).items; // selector level 2\n\nexport const sGetStarredDashboards = state => Object.values(sGetAllDashboards(state)).filter(dashboard => dashboard.starred === true);\nexport const sGetUnstarredDashboards = state => Object.values(sGetAllDashboards(state)).filter(dashboard => dashboard.starred === false); // selector level 3\n\nexport const sGetStarredDashboardIds = state => {\n  return sGetStarredDashboards(state).map(dashboard => dashboard.id);\n};\nexport const sGetUnstarredDashboardIds = state => sGetUnstarredDashboards(state).map(dashboard => dashboard.id);\nexport const sGetDashboardsSortedByStarred = state => [...arraySort(sGetStarredDashboards(state), 'ASC', 'displayName'), ...arraySort(sGetUnstarredDashboards(state), 'ASC', 'displayName')]; // utils\n\n/**\n * Returns the array of dashboards, customized for ui\n * @function\n * @param {Array} data The original dashboard list\n * @returns {Array}\n */\n\nexport const getCustomDashboards = data => arrayFrom(data).map(d => ({\n  id: d.id,\n  name: d.name,\n  displayName: d.displayName,\n  description: d.description,\n  displayDescription: d.displayDescription,\n  starred: d.favorite,\n  owner: d.user.name,\n  created: d.created.split('T').join(' ').substr(0, 16),\n  lastUpdated: d.lastUpdated.split('T').join(' ').substr(0, 16),\n  access: d.access,\n  numberOfItems: orArray(d.dashboardItems).length,\n  dashboardItems: convertBackendItemsToUi(d.dashboardItems)\n}));","/** @module reducers/selected */\nimport { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\nexport const SET_SELECTED_ID = 'SET_SELECTED_ID';\nexport const SET_SELECTED_ISLOADING = 'SET_SELECTED_ISLOADING';\nexport const SET_SELECTED_SHOWDESCRIPTION = 'SET_SELECTED_SHOWDESCRIPTION';\nexport const DEFAULT_STATE_SELECTED_ID = null;\nexport const DEFAULT_STATE_SELECTED_ISLOADING = false;\nexport const DEFAULT_STATE_SELECTED_SHOWDESCRIPTION = false;\nexport const NON_EXISTING_DASHBOARD_ID = '0';\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\n\nconst id = (state = DEFAULT_STATE_SELECTED_ID, action) => {\n  switch (action.type) {\n    case SET_SELECTED_ID:\n      return validateReducer(action.value, DEFAULT_STATE_SELECTED_ID);\n\n    default:\n      return state;\n  }\n};\n\nconst isLoading = (state = DEFAULT_STATE_SELECTED_ISLOADING, action) => {\n  switch (action.type) {\n    case SET_SELECTED_ISLOADING:\n      return validateReducer(action.value, DEFAULT_STATE_SELECTED_ISLOADING);\n\n    default:\n      return state;\n  }\n};\n\nconst showDescription = (state = DEFAULT_STATE_SELECTED_SHOWDESCRIPTION, action) => {\n  switch (action.type) {\n    case SET_SELECTED_SHOWDESCRIPTION:\n      return validateReducer(action.value, DEFAULT_STATE_SELECTED_SHOWDESCRIPTION);\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  id,\n  isLoading,\n  showDescription\n}); // Selectors\n\nexport const sGetSelectedRoot = state => state.selected;\nexport const sGetSelectedId = state => sGetSelectedRoot(state).id;\nexport const sGetSelectedIsLoading = state => sGetSelectedRoot(state).isLoading;\nexport const sGetSelectedShowDescription = state => sGetSelectedRoot(state).showDescription;","import { getDimensionById, DIMENSION_ID_PERIOD, DIMENSION_ID_ORGUNIT } from '@dhis2/analytics';\nexport const SET_DIMENSIONS = 'SET_DIMENSIONS';\nexport const DEFAULT_DIMENSIONS = [getDimensionById(DIMENSION_ID_PERIOD), getDimensionById(DIMENSION_ID_ORGUNIT)];\nexport default ((state = DEFAULT_DIMENSIONS, action) => {\n  switch (action.type) {\n    case SET_DIMENSIONS:\n      {\n        return [...DEFAULT_DIMENSIONS, ...action.value];\n      }\n\n    default:\n      return state;\n  }\n});\nexport const sGetDimensions = state => state.dimensions;","import { sGetDimensions } from './dimensions';\nimport { createSelector } from 'reselect';\nexport const CLEAR_ITEM_FILTERS = 'CLEAR_ITEM_FILTERS';\nexport const SET_ITEM_FILTERS = 'SET_ITEM_FILTERS';\nexport const ADD_ITEM_FILTER = 'ADD_ITEM_FILTER';\nexport const REMOVE_ITEM_FILTER = 'REMOVE_ITEM_FILTER';\nexport const DEFAULT_STATE_ITEM_FILTERS = {};\nexport default ((state = DEFAULT_STATE_ITEM_FILTERS, action) => {\n  switch (action.type) {\n    case ADD_ITEM_FILTER:\n      {\n        return { ...state,\n          [action.filter.id]: action.filter.value\n        };\n      }\n\n    case REMOVE_ITEM_FILTER:\n      {\n        const newState = { ...state\n        };\n        delete newState[action.id];\n        return newState;\n      }\n\n    case SET_ITEM_FILTERS:\n      {\n        return action.filters;\n      }\n\n    case CLEAR_ITEM_FILTERS:\n      {\n        return DEFAULT_STATE_ITEM_FILTERS;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetItemFiltersRoot = state => state.itemFilters; // simplify the filters structure to:\n// [{ id: 'pe', name: 'Period', values: [{ id: 2019: name: '2019' }, {id: 'LAST_MONTH', name: 'Last month' }]}, ...]\n\nexport const sGetNamedItemFilters = createSelector([sGetItemFiltersRoot, sGetDimensions], (filters, dimensions) => Object.keys(filters).reduce((arr, id) => {\n  arr.push({\n    id: id,\n    name: dimensions.find(dimension => dimension.id === id).name,\n    values: filters[id].map(value => ({\n      id: value.id,\n      name: value.displayName || value.name\n    }))\n  });\n  return arr;\n}, []));","import { ADD_ITEM_FILTER, REMOVE_ITEM_FILTER, SET_ITEM_FILTERS, CLEAR_ITEM_FILTERS } from '../reducers/itemFilters';\nexport const FILTER_ORG_UNIT = 'ou'; // actions\n\nexport const acAddItemFilter = filter => ({\n  type: ADD_ITEM_FILTER,\n  filter\n});\nexport const acRemoveItemFilter = id => ({\n  type: REMOVE_ITEM_FILTER,\n  id\n});\nexport const acClearItemFilters = () => ({\n  type: CLEAR_ITEM_FILTERS\n});\nexport const acSetItemFilters = filters => ({\n  type: SET_ITEM_FILTERS,\n  filters\n});","import update from 'immutability-helper';\nimport { arrayToIdMap } from '../modules/util';\nexport const RECEIVED_MESSAGES = 'RECEIVED_MESSAGES';\nexport default ((state = {}, action) => {\n  switch (action.type) {\n    case RECEIVED_MESSAGES:\n      {\n        const conversations = arrayToIdMap(action.value);\n        const newState = update(state, {\n          $merge: conversations\n        });\n        return newState;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetMessagesRoot = state => state.messages;","import { getInstance } from 'd2';\nexport const getMessages = () => {\n  const fields = 'id,messageCount,lastUpdated,messageType,displayName,read,messages[id,read,sender[id,displayName],text,lastUpdated]';\n  const url = `/messageConversations?fields=${fields}&order=read:asc&pageSize=200`;\n  return getInstance().then(d2 => d2.Api.getApi().get(url)).catch(error => console.log('Error:', error));\n};","import { RECEIVED_MESSAGES } from '../../../reducers/messages';\nimport { getMessages } from '../../../api/messages';\n\nconst onError = (action, error) => {\n  console.log(`Error in action ${action}: ${error}`);\n  return error;\n};\n\nexport const receivedMessages = value => ({\n  type: RECEIVED_MESSAGES,\n  value\n});\nexport const tGetMessages = () => async dispatch => {\n  try {\n    const messages = await getMessages();\n    const {\n      messageConversations\n    } = messages;\n    return dispatch(receivedMessages(messageConversations));\n  } catch (err) {\n    return onError('Get Messages', err);\n  }\n};","export const RECEIVED_SNACKBAR_MESSAGE = 'RECEIVED_SNACKBAR_MESSAGE';\nexport const CLOSE_SNACKBAR = 'CLOSE_SNACKBAR';\nexport const DEFAULT_STATE_SNACKBAR = {\n  message: {},\n  duration: null,\n  open: false\n};\nexport default ((state = DEFAULT_STATE_SNACKBAR, action) => {\n  switch (action.type) {\n    case RECEIVED_SNACKBAR_MESSAGE:\n      {\n        return { ...state,\n          ...action.value\n        };\n      }\n\n    case CLOSE_SNACKBAR:\n      {\n        return DEFAULT_STATE_SNACKBAR;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetSnackbar = state => state.snackbar || DEFAULT_STATE_SNACKBAR;","import { RECEIVED_SNACKBAR_MESSAGE, CLOSE_SNACKBAR } from '../reducers/snackbar';\nexport const acReceivedSnackbarMessage = value => ({\n  type: RECEIVED_SNACKBAR_MESSAGE,\n  value\n});\nexport const acCloseSnackbar = () => ({\n  type: CLOSE_SNACKBAR\n});","import { orObject } from '../modules/util';\nimport objectClean from 'd2-utilizr/lib/objectClean';\n/** @module reducers/visualizations */\n\nexport const ADD_VISUALIZATION = 'ADD_VISUALIZATION';\nexport const SET_ACTIVE_VISUALIZATION_TYPE = 'SET_ACTIVE_VISUALIZATION_TYPE';\nexport const DEFAULT_STATE_VISUALIZATIONS = {};\n\nconst isEmpty = p => p === undefined || p === null;\n\nexport default ((state = DEFAULT_STATE_VISUALIZATIONS, action) => {\n  switch (action.type) {\n    case ADD_VISUALIZATION:\n      {\n        return { ...state,\n          [action.value.id]: objectClean({ ...orObject(state[action.value.id]),\n            ...action.value\n          }, isEmpty)\n        };\n      }\n\n    case SET_ACTIVE_VISUALIZATION_TYPE:\n      {\n        return { ...state,\n          [action.id]: objectClean({ ...orObject(state[action.id]),\n            activeType: action.activeType\n          }, isEmpty)\n        };\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetVisualizationsRoot = state => state.visualizations; // selectors level 1\n\nexport const sGetVisualization = (state, id) => {\n  return sGetVisualizationsRoot(state)[id];\n};","import { ADD_VISUALIZATION, SET_ACTIVE_VISUALIZATION_TYPE } from '../reducers/visualizations';\nexport const acAddVisualization = value => ({\n  type: ADD_VISUALIZATION,\n  value\n});\nexport const acSetActiveVisualizationType = (id, activeType) => {\n  const action = {\n    type: SET_ACTIVE_VISUALIZATION_TYPE,\n    id,\n    activeType\n  };\n  return action;\n};","import arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { getListItemFields, getFavoritesFields, getIdNameFields } from './metadata'; // Helper functions\n\nexport const onError = error => console.log('Error: ', error); // Dashboard item\n\nexport const getDashboardItemsFields = ({\n  withFavorite\n} = {}) => arrayClean(['id', 'type', 'shape', 'x', 'y', 'width~rename(w)', 'height~rename(h)', 'messages', 'text', 'appKey', `${getListItemFields().join(',')}`, withFavorite ? `${getFavoritesFields({\n  withDimensions: withFavorite.withDimensions\n}).join(',')}` : ``]); // Dashboard\n\nexport const getDashboardFields = ({\n  withItems,\n  withFavorite\n} = {}) => arrayClean([`${getIdNameFields().join(',')}`, 'description', 'displayDescription', 'favorite', `user[${getIdNameFields({\n  rename: true\n}).join(',')}]`, 'created', 'lastUpdated', 'access', withItems ? `dashboardItems[${getDashboardItemsFields({\n  withFavorite\n}).join(',')}]` : ``]);","import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { onError, getDashboardFields } from './index'; // Get \"all\" dashboards on startup\n\nexport const apiFetchDashboards = () => getInstance().then(d2 => d2.models.dashboard.list({\n  fields: [getDashboardFields().join(','), 'dashboardItems[id]'].join(','),\n  paging: 'false'\n})).catch(onError); // Get more info about selected dashboard\n\nexport const apiFetchDashboard = id => getInstance().then(d2 => d2.models.dashboard.get(id, {\n  fields: arrayClean(getDashboardFields({\n    withItems: true,\n    withFavorite: {\n      withDimensions: false\n    }\n  })).join(',')\n})).catch(onError); // Star dashboard\n\nexport const apiStarDashboard = (id, isStarred) => {\n  const url = `dashboards/${id}/favorite`;\n  getInstance().then(d2 => {\n    if (isStarred) {\n      d2.Api.getApi().post(url);\n    } else {\n      d2.Api.getApi().delete(url);\n    }\n  });\n};\nexport const apiDeleteDashboard = id => {\n  return getInstance().then(d2 => {\n    return d2.models.dashboards.get(id).then(dashboard => dashboard.delete());\n  }).catch(onError);\n};","import { getInstance } from 'd2';\nexport const NAMESPACE = 'dashboard';\nexport const hasNamespace = async (d2) => await d2.currentUser.dataStore.has(NAMESPACE);\nexport const getNamespace = async (d2, hasNamespace) => hasNamespace ? await d2.currentUser.dataStore.get(NAMESPACE) : await d2.currentUser.dataStore.create(NAMESPACE);\nexport const apiPostUserDataStoreValue = async (key, value) => {\n  const d2 = await getInstance();\n  const ns = await getNamespace(d2, hasNamespace);\n  ns.set(key, value);\n};\nexport const apiGetUserDataStoreValue = async (key, defaultValue) => {\n  const d2 = await getInstance();\n  const namespace = await getNamespace(d2, await hasNamespace(d2));\n  const hasKey = namespace?.keys?.find(k => k === key);\n\n  if (hasKey) {\n    return await namespace.get(key);\n  } else {\n    await apiPostUserDataStoreValue(key, defaultValue, namespace);\n    console.log('(These errors to /userDataStore can be ignored)');\n    return defaultValue;\n  }\n};","import React from 'react';\nimport { connect } from 'react-redux';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport PropTypes from 'prop-types';\nimport { sGetSnackbar } from '../../reducers/snackbar';\nimport { acCloseSnackbar } from '../../actions/snackbar';\nconst LOADING_DASHBOARD = 'LOADING_DASHBOARD';\nexport const loadingDashboardMsg = {\n  name: '',\n  type: LOADING_DASHBOARD\n};\n\nconst SnackbarMessageContent = ({\n  message\n}) => {\n  if (typeof message === 'object') {\n    //future message types:  switch(message.type)\n    return <span>\n                Loading <span style={{\n        fontWeight: 800\n      }}>{message.name}</span>{' '}\n                dashboard\n            </span>;\n  }\n\n  return message;\n};\n\nexport const SnackbarMessage = props => {\n  return <Snackbar style={{\n    zIndex: 10001\n  }} open={props.snackbarOpen} message={<SnackbarMessageContent message={props.snackbarMessage} />} autoHideDuration={props.snackbarDuration} onClose={props.onCloseSnackbar} />;\n};\n\nconst mapStateToProps = state => {\n  const {\n    message,\n    duration,\n    open\n  } = sGetSnackbar(state);\n  return {\n    snackbarOpen: open,\n    snackbarMessage: message,\n    snackbarDuration: duration\n  };\n};\n\nSnackbarMessage.propTypes = {\n  snackbarDuration: PropTypes.string,\n  snackbarMessage: PropTypes.object,\n  snackbarOpen: PropTypes.bool,\n  onCloseSnackbar: PropTypes.func\n};\nexport default connect(mapStateToProps, {\n  onCloseSnackbar: acCloseSnackbar\n})(SnackbarMessage);","import { getCustomDashboards, sGetDashboardById, EMPTY_DASHBOARD } from '../reducers/dashboards';\nimport { SET_SELECTED_ID, SET_SELECTED_ISLOADING, SET_SELECTED_SHOWDESCRIPTION, sGetSelectedIsLoading, sGetSelectedId } from '../reducers/selected';\nimport { sGetUserUsername } from '../reducers/user';\nimport { acSetDashboardItems, acAppendDashboards } from './dashboards';\nimport { acClearItemFilters } from './itemFilters';\nimport { tGetMessages } from '../components/Item/MessagesItem/actions';\nimport { acReceivedSnackbarMessage, acCloseSnackbar } from './snackbar';\nimport { acAddVisualization } from './visualizations';\nimport { apiFetchDashboard } from '../api/dashboards';\nimport { storePreferredDashboardId } from '../api/localStorage';\nimport { apiGetShowDescription, apiPostShowDescription } from '../api/description';\nimport { withShape } from '../components/ItemGrid/gridUtil';\nimport { loadingDashboardMsg } from '../components/SnackbarMessage/SnackbarMessage';\nimport { extractFavorite } from '../components/Item/VisualizationItem/plugin';\nimport { REPORT_TABLE, CHART, MAP, EVENT_REPORT, EVENT_CHART, MESSAGES } from '../modules/itemTypes'; // actions\n\nexport const acSetSelectedId = value => ({\n  type: SET_SELECTED_ID,\n  value\n});\nexport const acSetSelectedIsLoading = value => ({\n  type: SET_SELECTED_ISLOADING,\n  value\n});\nexport const acSetSelectedShowDescription = value => ({\n  type: SET_SELECTED_SHOWDESCRIPTION,\n  value\n}); // thunks\n\nexport const tSetSelectedDashboardById = id => async (dispatch, getState) => {\n  dispatch(acSetSelectedIsLoading(true));\n  const snackbarTimeout = setTimeout(() => {\n    const dashboardName = (sGetDashboardById(getState(), id) || EMPTY_DASHBOARD).displayName;\n\n    if (sGetSelectedIsLoading(getState()) && dashboardName) {\n      loadingDashboardMsg.name = dashboardName;\n      dispatch(acReceivedSnackbarMessage({\n        message: loadingDashboardMsg,\n        open: true\n      }));\n    }\n  }, 500);\n\n  const onSuccess = selected => {\n    dispatch(acAppendDashboards(selected));\n    const customDashboard = getCustomDashboards(selected)[0];\n    dispatch(acSetDashboardItems(withShape(customDashboard.dashboardItems)));\n    storePreferredDashboardId(sGetUserUsername(getState()), id);\n    customDashboard.dashboardItems.forEach(item => {\n      switch (item.type) {\n        case REPORT_TABLE:\n        case CHART:\n        case MAP:\n        case EVENT_REPORT:\n        case EVENT_CHART:\n          dispatch(acAddVisualization(extractFavorite(item)));\n          break;\n\n        case MESSAGES:\n          dispatch(tGetMessages(id));\n          break;\n\n        default:\n          break;\n      }\n    });\n\n    if (id !== sGetSelectedId(getState())) {\n      dispatch(acClearItemFilters());\n    }\n\n    dispatch(acSetSelectedId(id));\n    dispatch(acSetSelectedIsLoading(false));\n    clearTimeout(snackbarTimeout);\n    dispatch(acCloseSnackbar());\n    return selected;\n  };\n\n  const onError = error => {\n    console.log('Error: ', error);\n    return error;\n  };\n\n  try {\n    const dashboard = await apiFetchDashboard(id);\n    return onSuccess(dashboard);\n  } catch (err) {\n    return onError(err);\n  }\n};\nexport const tSetShowDescription = () => async dispatch => {\n  const onSuccess = value => {\n    dispatch(acSetSelectedShowDescription(value));\n  };\n\n  const onError = error => {\n    console.log('Error (apiGetShowDescription): ', error);\n    return error;\n  };\n\n  try {\n    const showDescription = await apiGetShowDescription();\n    return onSuccess(showDescription);\n  } catch (err) {\n    return onError(err);\n  }\n};\nexport const tUpdateShowDescription = value => async dispatch => {\n  const onSuccess = () => {\n    dispatch(acSetSelectedShowDescription(value));\n  };\n\n  const onError = error => {\n    console.log('Error (apiGetShowDescription): ', error);\n    return error;\n  };\n\n  try {\n    await apiPostShowDescription(value);\n    return onSuccess();\n  } catch (err) {\n    return onError(err);\n  }\n};","export const getPreferredDashboardId = username => localStorage.getItem(`dhis2.dashboard.current.${username}`) || undefined;\nexport const storePreferredDashboardId = (username, dashboardId) => {\n  localStorage.setItem(`dhis2.dashboard.current.${username}`, dashboardId);\n};","import { apiGetUserDataStoreValue, apiPostUserDataStoreValue } from './userDataStore';\nimport { DEFAULT_STATE_SELECTED_SHOWDESCRIPTION } from '../reducers/selected';\nconst KEY_SHOW_DESCRIPTION = 'showDescription';\nexport const apiGetShowDescription = async () => await apiGetUserDataStoreValue(KEY_SHOW_DESCRIPTION, DEFAULT_STATE_SELECTED_SHOWDESCRIPTION);\nexport const apiPostShowDescription = async (value) => await apiPostUserDataStoreValue(KEY_SHOW_DESCRIPTION, value);","import { SET_DASHBOARDS, ADD_DASHBOARDS, SET_DASHBOARD_STARRED, SET_DASHBOARD_DISPLAY_NAME, SET_DASHBOARD_ITEMS } from '../reducers/dashboards';\nimport { getCustomDashboards, sGetDashboardById, sGetDashboardsSortedByStarred } from '../reducers/dashboards';\nimport { NON_EXISTING_DASHBOARD_ID } from '../reducers/selected';\nimport { sGetUserUsername } from '../reducers/user';\nimport { tSetSelectedDashboardById, acSetSelectedId } from './selected';\nimport { apiFetchDashboards, apiStarDashboard, apiDeleteDashboard } from '../api/dashboards';\nimport { getPreferredDashboardId } from '../api/localStorage';\nimport { arrayToIdMap } from '../modules/util'; // actions\n\nexport const acSetDashboards = dashboards => ({\n  type: SET_DASHBOARDS,\n  value: arrayToIdMap(getCustomDashboards(dashboards))\n});\nexport const acAppendDashboards = dashboards => ({\n  type: ADD_DASHBOARDS,\n  value: arrayToIdMap(getCustomDashboards(dashboards))\n});\nexport const acSetDashboardStarred = (dashboardId, isStarred) => ({\n  type: SET_DASHBOARD_STARRED,\n  dashboardId: dashboardId,\n  value: isStarred\n});\nexport const acSetDashboardDisplayName = (dashboardId, value) => ({\n  type: SET_DASHBOARD_DISPLAY_NAME,\n  dashboardId,\n  value\n});\nexport const acSetDashboardItems = value => ({\n  type: SET_DASHBOARD_ITEMS,\n  value\n}); // thunks\n\nexport const tFetchDashboards = () => async dispatch => {\n  const collection = await apiFetchDashboards();\n  dispatch(acSetDashboards(collection.toArray()));\n};\nexport const tSelectDashboard = id => async (dispatch, getState) => {\n  const onError = error => {\n    console.log('Error (apiFetchDashboards): ', error);\n    return error;\n  };\n\n  try {\n    const state = getState();\n    let dashboardToSelect = null;\n\n    if (id) {\n      dashboardToSelect = sGetDashboardById(state, id) || null;\n    } else {\n      const preferredId = getPreferredDashboardId(sGetUserUsername(state));\n      const dash = sGetDashboardById(state, preferredId);\n      dashboardToSelect = preferredId && dash ? dash : sGetDashboardsSortedByStarred(state)[0];\n    }\n\n    if (dashboardToSelect) {\n      dispatch(tSetSelectedDashboardById(dashboardToSelect.id));\n    } else {\n      dispatch(acSetSelectedId(NON_EXISTING_DASHBOARD_ID));\n    }\n  } catch (err) {\n    return onError(err);\n  }\n};\nexport const tStarDashboard = (id, isStarred) => async dispatch => {\n  const onSuccess = id => {\n    dispatch(acSetDashboardStarred(id, isStarred));\n    return id;\n  };\n\n  const onError = error => {\n    console.log('Error (apiStarDashboard): ', error);\n    return error;\n  };\n\n  try {\n    await apiStarDashboard(id, isStarred);\n    return onSuccess(id);\n  } catch (err) {\n    return onError(err);\n  }\n};\nexport const tDeleteDashboard = id => async dispatch => {\n  try {\n    await apiDeleteDashboard(id);\n    await dispatch(tFetchDashboards());\n    return Promise.resolve();\n  } catch (err) {\n    console.log('Error (deleteDashboard): ', err);\n    return err;\n  }\n};","/** @module reducers/controlBar */\nimport { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\nexport const SET_CONTROLBAR_USER_ROWS = 'SET_CONTROLBAR_USER_ROWS';\nexport const DEFAULT_STATE_CONTROLBAR_ROWS = 1;\n\nconst userRows = (state = DEFAULT_STATE_CONTROLBAR_ROWS, action) => {\n  switch (action.type) {\n    case SET_CONTROLBAR_USER_ROWS:\n      return validateReducer(action.value, DEFAULT_STATE_CONTROLBAR_ROWS);\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  userRows\n});\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\n\nexport const sGetControlBarRoot = state => state.controlBar; // Selector dependency level 2\n\nexport const sGetControlBarUserRows = state => sGetControlBarRoot(state).userRows;","import { SET_CONTROLBAR_USER_ROWS } from '../reducers/controlBar';\nimport { apiGetControlBarRows } from '../api/controlBar'; // actions\n\nexport const acSetControlBarUserRows = rows => ({\n  type: SET_CONTROLBAR_USER_ROWS,\n  value: rows\n}); // thunks\n\nexport const tSetControlBarRows = () => async dispatch => {\n  const onSuccess = rows => {\n    dispatch(acSetControlBarUserRows(rows));\n  };\n\n  const onError = error => {\n    console.log('Error (apiGetControlBarRows): ', error);\n    return error;\n  };\n\n  try {\n    const controlBarRows = await apiGetControlBarRows();\n    return onSuccess(controlBarRows);\n  } catch (err) {\n    return onError(err);\n  }\n};","import { apiGetUserDataStoreValue, apiPostUserDataStoreValue } from './userDataStore';\nimport { DEFAULT_STATE_CONTROLBAR_ROWS } from '../reducers/controlBar';\nconst KEY_CONTROLBAR_ROWS = 'controlBarRows';\nexport const apiGetControlBarRows = async () => await apiGetUserDataStoreValue(KEY_CONTROLBAR_ROWS, DEFAULT_STATE_CONTROLBAR_ROWS);\nexport const apiPostControlBarRows = async (value) => await apiPostUserDataStoreValue(KEY_CONTROLBAR_ROWS, value);","export const SET_SETTINGS = 'SET_SETTINGS';\nexport const ADD_SETTINGS = 'ADD_SETTINGS';\nexport const DEFAULT_SETTINGS = {\n  keyDateFormat: 'yyyy-MM-dd',\n  keyAnalysisRelativePeriod: 'LAST_12_MONTHS',\n  keyAnalysisDigitGroupSeparator: 'SPACE',\n  displayNameProperty: 'displayName',\n  uiLocale: 'en',\n  rootOrganisationUnit: {}\n};\nexport default ((state = DEFAULT_SETTINGS, action) => {\n  switch (action.type) {\n    case SET_SETTINGS:\n      {\n        return Object.assign({}, action.value);\n      }\n\n    case ADD_SETTINGS:\n      {\n        return { ...state,\n          ...action.value\n        };\n      }\n\n    default:\n      return state;\n  }\n}); // Selectors\n\nexport const sGetSettings = state => state.settings;\nexport const sGetSettingsDisplayNameProperty = state => sGetSettings(state).displayNameProperty;\nexport const sGetRootOrgUnit = state => sGetSettings(state).rootOrganisationUnit;\nexport const sGetRelativePeriod = state => sGetSettings(state).keyAnalysisRelativePeriod;\nexport const sGetUiLocale = state => sGetSettings(state).uiLocale;","import { SET_DIMENSIONS } from '../reducers/dimensions';\nimport { apiFetchDimensions } from '@dhis2/analytics';\nimport { sGetSettingsDisplayNameProperty } from '../reducers/settings';\nexport const acSetDimensions = dimensions => ({\n  type: SET_DIMENSIONS,\n  value: dimensions\n});\nexport const tSetDimensions = d2 => async (dispatch, getState) => {\n  const onSuccess = dimensions => {\n    dispatch(acSetDimensions(dimensions));\n  };\n\n  const onError = error => {\n    console.log('Error (apiFetchDimensions): ', error);\n    return error;\n  };\n\n  try {\n    const displayNameProp = sGetSettingsDisplayNameProperty(getState());\n    const dimensions = await apiFetchDimensions(d2, displayNameProp); // filter out CATEGORY that are not of type ATTRIBUTE\n\n    const filteredDimensions = dimensions.filter(dim => dim.dimensionType !== 'CATEGORY' || dim.dimensionType === 'CATEGORY' && dim.dataDimensionType === 'ATTRIBUTE');\n    return onSuccess(filteredDimensions);\n  } catch (err) {\n    return onError(err);\n  }\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { colors } from '@dhis2/ui';\nimport classes from './styles/ControlBar.module.css';\nexport const DRAG_HANDLE_HEIGHT = 7;\n\nclass ControlBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dragging: false\n    };\n  }\n\n  onStartDrag = () => {\n    this.setState({\n      dragging: true\n    });\n    window.addEventListener('mousemove', this.onDrag);\n    window.addEventListener('mouseup', this.onEndDrag);\n  };\n  onDrag = event => {\n    event.preventDefault();\n    event.stopPropagation();\n    const newHeight = event.clientY;\n\n    if (this.props.onChangeHeight && newHeight !== this.props.height && newHeight > 0) {\n      requestAnimationFrame(() => {\n        this.props.onChangeHeight(newHeight);\n      });\n    }\n  };\n  onEndDrag = () => {\n    this.setState({\n      dragging: false\n    });\n    window.removeEventListener('mousemove', this.onDrag);\n    window.removeEventListener('mouseup', this.onEndDrag);\n\n    if (this.props.onEndDrag) {\n      this.props.onEndDrag();\n    }\n  };\n\n  renderDragHandle() {\n    return typeof this.props.onChangeHeight === 'function' ? <div className={classes.draghandle} style={{\n      height: DRAG_HANDLE_HEIGHT\n    }} onMouseDown={this.onStartDrag} /> : null;\n  }\n\n  render() {\n    const height = Math.max(this.props.height, 0) + DRAG_HANDLE_HEIGHT;\n    const rootStyle = Object.assign({\n      height,\n      backgroundColor: this.props.editMode ? colors.yellow050 : colors.white,\n      paddingBottom: DRAG_HANDLE_HEIGHT\n    }, // Disable animations while dragging\n    this.state.dragging ? {\n      transition: 'none'\n    } : {});\n    return <div style={rootStyle} className={classes.root}>\n                <div className={classes.content}>{this.props.children}</div>\n                {this.renderDragHandle()}\n            </div>;\n  }\n\n}\n\nControlBar.propTypes = {\n  /**\n   * The height of the control bar in number of lines. Must be a positive integer.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * If true, the background color of the control bar changes to indicate that edit mode is active.\n   */\n  editMode: PropTypes.bool.isRequired,\n\n  /**\n   * Callback function that is called when the control bar is resized.\n   * The callback receives one argument: The new height in pixels.\n   *\n   * If no callback is specified the control bar will not have a drag handle.\n   */\n  height: PropTypes.number.isRequired,\n\n  /**\n   * Callback function that is called when the control bar is dropped after being dragged.\n   * The callback receives one argument: The new height in pixels.\n   *\n   * Ignored if no \"onChangeHeight\" function is provided.\n   */\n  onChangeHeight: PropTypes.func,\n\n  /**\n   * The contents of the control bar.\n   */\n  onEndDrag: PropTypes.func\n};\nControlBar.defaultProps = {\n  onChangeHeight: null,\n  onEndDrag: null\n};\nexport default ControlBar;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst StarIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>;\n\nStarIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default StarIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Chip } from '@dhis2/ui';\nimport { Link } from 'react-router-dom';\nimport debounce from 'lodash/debounce';\nimport StarIcon from '../../icons/Star';\nimport { apiPostDataStatistics } from '../../api/dataStatistics';\nimport classes from './styles/DashboardItemChip.module.css';\nexport const DashboardItemChip = ({\n  starred,\n  selected,\n  label,\n  dashboardId\n}) => {\n  const chipProps = {\n    selected\n  };\n\n  if (starred) {\n    const selectedState = selected ? classes.selected : classes.unselected;\n    chipProps.icon = <StarIcon className={`${classes.icon} ${selectedState}`} />;\n  }\n\n  return <Link className={classes.link} to={`/${dashboardId}`} onClick={debounce(() => apiPostDataStatistics('DASHBOARD_VIEW', dashboardId), 500)}>\n            <Chip {...chipProps}>{label}</Chip>\n        </Link>;\n};\nDashboardItemChip.propTypes = {\n  dashboardId: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  selected: PropTypes.bool.isRequired,\n  starred: PropTypes.bool.isRequired,\n  classes: PropTypes.object\n};\nexport default DashboardItemChip;","import { getInstance } from 'd2';\nexport const apiPostDataStatistics = async (eventType, id) => {\n  const d2 = await getInstance();\n  const url = `dataStatistics?eventType=${eventType}&favorite=${id}`;\n  d2.Api.getApi().post(url);\n};","import React from 'react';\nimport { colors } from '@dhis2/ui';\n\nconst AddCircleIcon = () => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" fill={colors.teal600} viewBox=\"0 0 24 24\">\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm4 11h-3v3c0 .55-.45 1-1 1s-1-.45-1-1v-3H8c-.55 0-1-.45-1-1s.45-1 1-1h3V8c0-.55.45-1 1-1s1 .45 1 1v3h3c.55 0 1 .45 1 1s-.45 1-1 1z\" />\n    </svg>;\n\nexport default AddCircleIcon;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst ClearIcon = ({\n  className\n}) => <svg className={className} fill={colors.grey800} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n        <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>;\n\nClearIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default ClearIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ClearIcon from '../../icons/Clear';\nimport classes from './styles/ClearButton.module.css';\nexport const ClearButton = ({\n  onClear\n}) => <button className={classes.button} onClick={onClear}>\n        <span>\n            <ClearIcon className={classes.icon} color=\"action\" />\n        </span>\n    </button>;\nClearButton.propTypes = {\n  onClear: PropTypes.func.isRequired\n};\nexport default ClearButton;","import { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\nexport const SET_DASHBOARDS_FILTER_NAME = 'SET_DASHBOARDS_FILTER_NAME';\nexport const SET_DASHBOARDS_FILTER_OWNER = 'SET_DASHBOARDS_FILTER_OWNER';\nexport const SET_DASHBOARDS_FILTER_ORDER = 'SET_DASHBOARDS_FILTER_ORDER';\nexport const ownerData = [{\n  id: 'ALL',\n  value: 'All users'\n}, {\n  id: 'ME',\n  value: 'Created by me'\n}, {\n  id: 'OTHERS',\n  value: 'Created by others'\n}];\nexport const orderData = [{\n  id: 'NAME:ASC',\n  value: 'Name (asc)'\n}, {\n  id: 'NAME:ASC',\n  value: 'Name (desc)'\n}, {\n  id: 'ITEMS:ASC',\n  value: 'Number of items (asc)'\n}, {\n  id: 'ITEMS:ASC',\n  value: 'Number of items (desc)'\n}, {\n  id: 'CREATED:ASC',\n  value: 'Created date (asc)'\n}, {\n  id: 'CREATED:ASC',\n  value: 'Created date (desc)'\n}];\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_NAME = '';\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_OWNER = ownerData[0].id;\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_ORDER = orderData[0].id;\n\nconst name = (state = DEFAULT_STATE_DASHBOARDS_FILTER_NAME, action) => {\n  switch (action.type) {\n    case SET_DASHBOARDS_FILTER_NAME:\n      return validateReducer(action.value, DEFAULT_STATE_DASHBOARDS_FILTER_NAME);\n\n    default:\n      return state;\n  }\n};\n\nconst owner = (state = DEFAULT_STATE_DASHBOARDS_FILTER_OWNER, action) => {\n  switch (action.type) {\n    case SET_DASHBOARDS_FILTER_OWNER:\n      return validateReducer(action.value, DEFAULT_STATE_DASHBOARDS_FILTER_NAME);\n\n    default:\n      return state;\n  }\n};\n\nconst order = (state = DEFAULT_STATE_DASHBOARDS_FILTER_ORDER, action) => {\n  switch (action.type) {\n    case SET_DASHBOARDS_FILTER_ORDER:\n      return validateReducer(action.value, DEFAULT_STATE_DASHBOARDS_FILTER_ORDER);\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  name,\n  owner,\n  order\n}); // selectors\n\nexport const sGetDashboardsFilterRoot = state => state.dashboardsFilter; // selector dependency level 2\n\nexport const sGetFilterName = state => sGetDashboardsFilterRoot(state).name;\nexport const sGetFilterOwner = state => sGetDashboardsFilterRoot(state).owner;\nexport const sGetFilterOrder = state => sGetDashboardsFilterRoot(state).order;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { withStyles } from '@material-ui/core/styles';\nimport InputField from '@material-ui/core/Input';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { colors } from '@dhis2/ui';\nimport ClearButton from './ClearButton';\nimport { DEFAULT_STATE_DASHBOARDS_FILTER_NAME } from '../../reducers/dashboardsFilter';\nconst styles = {\n  filterField: {\n    fontSize: '14px',\n    width: '200px',\n    height: '30px',\n    top: '-4px'\n  },\n  searchIcon: {\n    color: colors.grey700,\n    width: '20px',\n    height: '20px'\n  }\n};\nexport const KEYCODE_ENTER = 13;\nexport const KEYCODE_ESCAPE = 27;\nexport class Filter extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: DEFAULT_STATE_DASHBOARDS_FILTER_NAME\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      value: nextProps.name\n    });\n  }\n\n  setFilterValue = event => {\n    event.preventDefault();\n    this.props.onChangeName(event.target.value);\n  };\n  handleKeyUp = event => {\n    switch (event.keyCode) {\n      case KEYCODE_ENTER:\n        this.props.onKeypressEnter();\n        break;\n\n      case KEYCODE_ESCAPE:\n        this.props.onChangeName();\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  render() {\n    const {\n      classes,\n      name,\n      onChangeName\n    } = this.props;\n    const startAdornment = <InputAdornment position=\"start\">\n                <SearchIcon className={classes.searchIcon} />\n            </InputAdornment>;\n    const endAdornment = name !== '' && name !== null ? <InputAdornment position=\"end\">\n                    <ClearButton onClear={() => onChangeName()} />\n                </InputAdornment> : null;\n    return <InputField className={classes.filterField} placeholder={i18n.t('Search for a dashboard')} startAdornment={startAdornment} endAdornment={endAdornment} value={this.state.value} onChange={this.setFilterValue} onKeyUp={this.handleKeyUp} />;\n  }\n\n}\nFilter.propTypes = {\n  classes: PropTypes.object,\n  name: PropTypes.string,\n  onChangeName: PropTypes.func,\n  onKeypressEnter: PropTypes.func\n};\nFilter.defaultProps = {\n  name: '',\n  onChangeName: Function.prototype\n};\nexport default withStyles(styles)(Filter);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport classes from './styles/ShowMoreButton.module.css';\nexport const SHOWMORE_BAR_HEIGHT = 16;\nexport const ShowMoreButton = ({\n  onClick,\n  isMaxHeight,\n  disabled\n}) => {\n  return <div style={{\n    textAlign: 'center'\n  }}>\n            {disabled ? <div className={classes.disabled}>{i18n.t('Show more')}</div> : <div className={classes.showMore} onClick={onClick}>\n                    {isMaxHeight ? i18n.t('Show less') : i18n.t('Show more')}\n                </div>}\n        </div>;\n};\nShowMoreButton.propTypes = {\n  disabled: PropTypes.bool,\n  isMaxHeight: PropTypes.bool,\n  onClick: PropTypes.func\n};\nexport default ShowMoreButton;","import { SHOWMORE_BAR_HEIGHT } from './ShowMoreButton';\nexport const CONTROL_BAR_ROW_HEIGHT = 40;\nexport const FIRST_ROW_PADDING_HEIGHT = 10;\nexport const MIN_ROW_COUNT = 1;\nexport const HEADERBAR_HEIGHT = 48;\nconst CONTROL_BAR_OUTER_HEIGHT_DIFF = FIRST_ROW_PADDING_HEIGHT + SHOWMORE_BAR_HEIGHT - 2; // 2 pixel \"adjustment\"\n\nexport const getRowsHeight = rows => {\n  return rows * CONTROL_BAR_ROW_HEIGHT;\n};\nexport const getNumRowsFromHeight = height => {\n  return Math.floor((height - CONTROL_BAR_OUTER_HEIGHT_DIFF) / CONTROL_BAR_ROW_HEIGHT);\n};\nexport const getControlBarHeight = rows => {\n  return getRowsHeight(rows) + CONTROL_BAR_OUTER_HEIGHT_DIFF;\n};","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport ControlBar from './ControlBar';\nimport arraySort from 'd2-utilizr/lib/arraySort';\nimport PropTypes from 'prop-types';\nimport Chip from './DashboardItemChip';\nimport AddCircleIcon from '../../icons/AddCircle';\nimport Filter from './Filter';\nimport ShowMoreButton from './ShowMoreButton';\nimport { FIRST_ROW_PADDING_HEIGHT, MIN_ROW_COUNT, getRowsHeight, getControlBarHeight, getNumRowsFromHeight } from './controlBarDimensions';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { sGetAllDashboards } from '../../reducers/dashboards';\nimport { sGetFilterName } from '../../reducers/dashboardsFilter';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { acSetControlBarUserRows } from '../../actions/controlBar';\nimport { acSetFilterName } from '../../actions/dashboardsFilter';\nimport { orObject, orArray } from '../../modules/util';\nimport { apiPostControlBarRows } from '../../api/controlBar';\nimport classes from './styles/DashboardsBar.module.css';\nexport const MAX_ROW_COUNT = 10;\nexport class DashboardsBar extends Component {\n  state = {\n    rows: MIN_ROW_COUNT\n  };\n  setInitialDashboardState = rows => {\n    this.setState({\n      rows,\n      isMaxHeight: rows === MAX_ROW_COUNT\n    });\n  };\n\n  componentDidMount() {\n    this.setInitialDashboardState(this.props.userRows);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setInitialDashboardState(nextProps.userRows);\n  }\n\n  onChangeHeight = newHeight => {\n    const adjustedHeight = newHeight - 52; // don't rush the transition to a bigger row count\n\n    const newRows = Math.max(MIN_ROW_COUNT, getNumRowsFromHeight(adjustedHeight));\n\n    if (newRows !== this.state.rows) {\n      const newRowCount = Math.min(newRows, MAX_ROW_COUNT);\n      this.props.onChangeHeight(newRowCount);\n    }\n  };\n  onEndDrag = () => {\n    return apiPostControlBarRows(this.state.rows);\n  };\n  onToggleMaxHeight = () => {\n    const rows = this.state.rows === MAX_ROW_COUNT ? this.props.userRows : MAX_ROW_COUNT;\n    this.setState({\n      rows,\n      isMaxHeight: !this.state.isMaxHeight\n    });\n  };\n  onSelectDashboard = () => {\n    this.props.history.push(`/${this.props.dashboards[0].id}`);\n  };\n\n  render() {\n    const {\n      dashboards,\n      name,\n      selectedId,\n      onChangeFilterName\n    } = this.props;\n    const rowCount = this.state.isMaxHeight ? MAX_ROW_COUNT : this.state.rows;\n    const controlBarHeight = getControlBarHeight(rowCount);\n    const contentWrapperStyle = {\n      padding: `${FIRST_ROW_PADDING_HEIGHT}px 6px 0 6px`,\n      overflowY: this.state.isMaxHeight ? 'auto' : 'hidden',\n      height: getRowsHeight(rowCount) + FIRST_ROW_PADDING_HEIGHT\n    };\n    return <ControlBar height={controlBarHeight} onChangeHeight={this.onChangeHeight} onEndDrag={this.onEndDrag} editMode={false}>\n                <div style={contentWrapperStyle}>\n                    <div className={classes.leftControls}>\n                        <Link style={{\n            display: 'inline-block',\n            textDecoration: 'none',\n            marginRight: 10,\n            position: 'relative',\n            top: '2px'\n          }} to={'/new'}>\n                            <AddCircleIcon />\n                        </Link>\n                        <Filter name={name} onChangeName={onChangeFilterName} onKeypressEnter={this.onSelectDashboard} />\n                    </div>\n                    {orArray(dashboards).map(dashboard => <Chip key={dashboard.id} label={dashboard.displayName} starred={dashboard.starred} dashboardId={dashboard.id} selected={dashboard.id === selectedId} />)}\n                </div>\n                <ShowMoreButton onClick={this.onToggleMaxHeight} isMaxHeight={this.state.isMaxHeight} disabled={this.props.userRows === MAX_ROW_COUNT} />\n            </ControlBar>;\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  dashboards: sGetAllDashboards(state),\n  name: sGetFilterName(state),\n  userRows: sGetControlBarUserRows(state),\n  selectedId: sGetSelectedId(state)\n});\n\nconst mapDispatchToProps = {\n  onChangeHeight: acSetControlBarUserRows,\n  onChangeFilterName: acSetFilterName\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n  const dashboards = Object.values(orObject(stateProps.dashboards));\n  const displayDashboards = arraySort(dashboards.filter(d => d.displayName.toLowerCase().includes(stateProps.name.toLowerCase())), 'ASC', 'displayName');\n  return { ...stateProps,\n    ...ownProps,\n    ...dispatchProps,\n    dashboards: [...displayDashboards.filter(d => d.starred), ...displayDashboards.filter(d => !d.starred)]\n  };\n};\n\nDashboardsBar.propTypes = {\n  dashboards: PropTypes.array,\n  history: PropTypes.object,\n  name: PropTypes.string,\n  selectedId: PropTypes.string,\n  userRows: PropTypes.number,\n  onChangeFilterName: PropTypes.func,\n  onChangeHeight: PropTypes.func\n};\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps, mergeProps)(DashboardsBar));","import { SET_DASHBOARDS_FILTER_NAME, SET_DASHBOARDS_FILTER_OWNER, SET_DASHBOARDS_FILTER_ORDER } from '../reducers/dashboardsFilter'; // actions\n\nexport const acSetFilterName = value => ({\n  type: SET_DASHBOARDS_FILTER_NAME,\n  value\n});\nexport const acSetFilterOwner = value => ({\n  type: SET_DASHBOARDS_FILTER_OWNER,\n  value\n});\nexport const acSetFilterOrder = value => ({\n  type: SET_DASHBOARDS_FILTER_ORDER,\n  value\n});","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { getControlBarHeight, MIN_ROW_COUNT } from '../ControlBar/controlBarDimensions';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { DRAG_HANDLE_HEIGHT } from '../ControlBar/ControlBar';\n\nconst DashboardVerticalOffset = props => {\n  const rows = props.editMode ? MIN_ROW_COUNT : props.userRows;\n  const marginTop = getControlBarHeight(rows) + DRAG_HANDLE_HEIGHT;\n  return <div className=\"page-container-top-margin\" style={{\n    marginTop\n  }} />;\n};\n\nconst mapStateToProps = state => ({\n  userRows: sGetControlBarUserRows(state)\n});\n\nDashboardVerticalOffset.propTypes = {\n  editMode: PropTypes.bool,\n  userRows: PropTypes.number\n};\nexport default connect(mapStateToProps)(DashboardVerticalOffset);","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nexport const NoContentMessage = ({\n  text\n}) => <div style={{\n  padding: '50px 10px',\n  textAlign: 'center',\n  fontSize: '15px',\n  fontWeight: 500,\n  color: colors.grey600\n}}>\n        {text}\n    </div>;\nNoContentMessage.propTypes = {\n  text: PropTypes.string\n};\nexport default NoContentMessage;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { MenuItem, colors } from '@dhis2/ui';\n\nconst HeaderMenuItem = ({\n  title\n}) => <MenuItem dense key={title} disabled label={<span style={{\n  color: colors.grey800,\n  fontWeight: '600'\n}}>\n                {title}\n            </span>} />;\n\nHeaderMenuItem.propTypes = {\n  title: PropTypes.string.isRequired\n};\nexport default HeaderMenuItem;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst LaunchIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\" fill={colors.grey600} viewBox=\"0 0 24 24\">\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z\" />\n    </svg>;\n\nLaunchIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default LaunchIcon;","import React from 'react';\nimport { MenuItem, colors } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport { visTypeIcons } from '@dhis2/analytics';\nimport { getItemIcon, VISUALIZATION } from '../../modules/itemTypes';\nimport LaunchIcon from '../../icons/Launch';\nimport classes from './styles/ContentMenuItem.module.css';\n\nconst LaunchLink = ({\n  url\n}) => <a onClick={e => e.stopPropagation()} className={classes.launchLink} target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n        <LaunchIcon />\n    </a>;\n\nLaunchLink.propTypes = {\n  url: PropTypes.string\n};\n\nconst InsertButton = () => <button className={classes.buttonInsert}>{i18n.t('Insert')}</button>;\n\nconst ContentMenuItem = ({\n  type,\n  name,\n  onInsert,\n  url,\n  visType\n}) => {\n  const ItemIcon = getItemIcon(type);\n  const renderedItemIcon = type === VISUALIZATION ? visTypeIcons[visType] : <ItemIcon style={{\n    fill: colors.grey600\n  }} />;\n  return <MenuItem dense onClick={onInsert} label={<div className={classes.menuItem}>\n                    <div className={classes.label}>\n                        <span style={{\n        marginRight: '6px'\n      }}>\n                            {renderedItemIcon}\n                        </span>\n                        <span>{name}</span>\n                        {url ? <LaunchLink url={url} /> : null}\n                    </div>\n                    <InsertButton />\n                </div>} />;\n};\n\nContentMenuItem.propTypes = {\n  name: PropTypes.string,\n  type: PropTypes.string,\n  url: PropTypes.string,\n  visType: PropTypes.string,\n  onInsert: PropTypes.func\n};\nexport default ContentMenuItem;","/** @module reducers/editDashboard */\nimport update from 'immutability-helper';\nimport isEmpty from 'lodash/isEmpty';\nimport { orArray, orObject } from '../modules/util';\nexport const RECEIVED_EDIT_DASHBOARD = 'RECEIVED_EDIT_DASHBOARD';\nexport const RECEIVED_NOT_EDITING = 'RECEIVED_NOT_EDITING';\nexport const START_NEW_DASHBOARD = 'START_NEW_DASHBOARD';\nexport const RECEIVED_TITLE = 'RECEIVED_TITLE';\nexport const RECEIVED_DESCRIPTION = 'RECEIVED_DESCRIPTION';\nexport const ADD_DASHBOARD_ITEM = 'ADD_DASHBOARD_ITEM';\nexport const REMOVE_DASHBOARD_ITEM = 'REMOVE_DASHBOARD_ITEM';\nexport const UPDATE_DASHBOARD_ITEM = 'UPDATE_DASHBOARD_ITEM';\nexport const RECEIVED_DASHBOARD_LAYOUT = 'RECEIVED_DASHBOARD_LAYOUT';\nexport const SET_PRINT_PREVIEW_VIEW = 'SET_PRINT_PREVIEW_VIEW';\nexport const CLEAR_PRINT_PREVIEW_VIEW = 'CLEAR_PRINT_PREVIEW_VIEW';\nexport const DEFAULT_STATE_EDIT_DASHBOARD = {};\nexport const NEW_DASHBOARD_STATE = {\n  id: '',\n  name: '',\n  access: {},\n  description: '',\n  dashboardItems: [],\n  printPreviewView: false\n};\nexport default ((state = DEFAULT_STATE_EDIT_DASHBOARD, action) => {\n  switch (action.type) {\n    case RECEIVED_EDIT_DASHBOARD:\n      {\n        const newState = {};\n        Object.keys(NEW_DASHBOARD_STATE).map(k => newState[k] = action.value[k]);\n        newState.printPreviewView = false;\n        return newState;\n      }\n\n    case RECEIVED_NOT_EDITING:\n      return DEFAULT_STATE_EDIT_DASHBOARD;\n\n    case SET_PRINT_PREVIEW_VIEW:\n      return Object.assign({}, state, {\n        printPreviewView: true\n      });\n\n    case CLEAR_PRINT_PREVIEW_VIEW:\n      return Object.assign({}, state, {\n        printPreviewView: false\n      });\n\n    case START_NEW_DASHBOARD:\n      return NEW_DASHBOARD_STATE;\n\n    case RECEIVED_TITLE:\n      {\n        return Object.assign({}, state, {\n          name: action.value\n        });\n      }\n\n    case RECEIVED_DESCRIPTION:\n      {\n        return Object.assign({}, state, {\n          description: action.value\n        });\n      }\n\n    case ADD_DASHBOARD_ITEM:\n      if (!action.value.position) {\n        return update(state, {\n          dashboardItems: {\n            $unshift: [action.value]\n          }\n        });\n      }\n\n      return update(state, {\n        dashboardItems: {\n          $splice: [[parseInt(action.value.position), 0, action.value]]\n        }\n      });\n\n    case REMOVE_DASHBOARD_ITEM:\n      {\n        const idToRemove = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === idToRemove);\n\n        if (dashboardItemIndex > -1) {\n          return update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1]]\n            }\n          });\n        }\n\n        return state;\n      }\n\n    case RECEIVED_DASHBOARD_LAYOUT:\n      {\n        const stateItems = orArray(state.dashboardItems);\n        let layoutHasChanged = false;\n        const newStateItems = action.value.map(({\n          x,\n          y,\n          w,\n          h,\n          i\n        }) => {\n          const stateItem = stateItems.find(si => si.id === i);\n\n          if (!(stateItem.x === x && stateItem.y === y && stateItem.w === w && stateItem.h === h)) {\n            layoutHasChanged = true;\n            return Object.assign({}, stateItem, {\n              w,\n              h,\n              x,\n              y\n            });\n          }\n\n          return stateItem;\n        });\n        return layoutHasChanged ? { ...state,\n          dashboardItems: newStateItems\n        } : state;\n      }\n\n    case UPDATE_DASHBOARD_ITEM:\n      {\n        const dashboardItem = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === dashboardItem.id);\n\n        if (dashboardItemIndex > -1) {\n          const newState = update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1, Object.assign({}, dashboardItem)]]\n            }\n          });\n          return newState;\n        }\n\n        return state;\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetEditDashboardRoot = state => state.editDashboard; // selectors\n\nexport const sGetIsEditing = state => !isEmpty(state.editDashboard);\nexport const sGetIsPrintPreviewView = state => sGetEditDashboardRoot(state).printPreviewView;\nexport const sGetIsNewDashboard = state => {\n  return !isEmpty(state.editDashboard) && sGetEditDashboardRoot(state).id === '';\n};\nexport const sGetEditDashboardName = state => sGetEditDashboardRoot(state).name;\nexport const sGetEditDashboardDescription = state => sGetEditDashboardRoot(state).description;\nexport const sGetEditDashboardItems = state => orObject(sGetEditDashboardRoot(state)).dashboardItems;","import { getInstance } from 'd2';\n\nconst onError = error => console.log('Error: ', error);\n\nconst saveDashboard = (dashboard, data) => {\n  const {\n    name,\n    description,\n    dashboardItems\n  } = data;\n  dashboard.name = name;\n  dashboard.description = description;\n  dashboard.dashboardItems = dashboardItems.map(item => Object.assign({}, item, {\n    width: item.w,\n    height: item.h\n  }));\n  return dashboard.save().then(msg => msg.response.uid);\n};\n\nexport const updateDashboard = data => {\n  return getInstance().then(d2 => {\n    return d2.models.dashboards.get(data.id).then(dashboard => saveDashboard(dashboard, data));\n  }).catch(onError);\n};\nexport const postDashboard = data => {\n  return getInstance().then(d2 => {\n    const dashboard = d2.models.dashboards.create();\n    return saveDashboard(dashboard, data);\n  });\n};","import { generateUid } from 'd2/uid';\nimport i18n from '@dhis2/d2-i18n';\nimport { RECEIVED_EDIT_DASHBOARD, START_NEW_DASHBOARD, RECEIVED_NOT_EDITING, RECEIVED_TITLE, RECEIVED_DESCRIPTION, RECEIVED_DASHBOARD_LAYOUT, ADD_DASHBOARD_ITEM, UPDATE_DASHBOARD_ITEM, REMOVE_DASHBOARD_ITEM, SET_PRINT_PREVIEW_VIEW, CLEAR_PRINT_PREVIEW_VIEW } from '../reducers/editDashboard';\nimport { sGetEditDashboardRoot } from '../reducers/editDashboard';\nimport { updateDashboard, postDashboard } from '../api/editDashboard';\nimport { tSetSelectedDashboardById } from '../actions/selected';\nimport { NEW_ITEM_SHAPE, getGridItemProperties, getPageBreakItemShape, getPrintTitlePageItemShape } from '../components/ItemGrid/gridUtil';\nimport { itemTypeMap, PAGEBREAK, PRINT_TITLE_PAGE } from '../modules/itemTypes';\nimport { convertUiItemsToBackend } from '../modules/uiBackendItemConverter';\n\nconst onError = error => {\n  console.log('Error (Saving Dashboard): ', error);\n  return error;\n}; // actions\n\n\nexport const acSetEditDashboard = (dashboard, items) => {\n  const val = { ...dashboard,\n    dashboardItems: items\n  };\n  return {\n    type: RECEIVED_EDIT_DASHBOARD,\n    value: val\n  };\n};\nexport const acSetEditNewDashboard = () => ({\n  type: START_NEW_DASHBOARD\n});\nexport const acClearEditDashboard = () => ({\n  type: RECEIVED_NOT_EDITING\n});\nexport const acSetPrintPreviewView = () => ({\n  type: SET_PRINT_PREVIEW_VIEW\n});\nexport const acClearPrintPreviewView = () => ({\n  type: CLEAR_PRINT_PREVIEW_VIEW\n});\nexport const acSetDashboardTitle = value => ({\n  type: RECEIVED_TITLE,\n  value\n});\nexport const acSetDashboardDescription = value => ({\n  type: RECEIVED_DESCRIPTION,\n  value\n});\nexport const acUpdateDashboardLayout = value => ({\n  type: RECEIVED_DASHBOARD_LAYOUT,\n  value\n});\nexport const acAddDashboardItem = item => {\n  const type = item.type;\n  delete item.type;\n  const itemPropName = itemTypeMap[type].propName;\n  const id = generateUid();\n  const gridItemProperties = getGridItemProperties(id);\n  let shape;\n\n  if (type === PAGEBREAK) {\n    const yPos = item.yPos || 0;\n    shape = getPageBreakItemShape(yPos, item.isStatic);\n  } else if (type === PRINT_TITLE_PAGE) {\n    shape = getPrintTitlePageItemShape();\n  } else {\n    shape = NEW_ITEM_SHAPE;\n  }\n\n  return {\n    type: ADD_DASHBOARD_ITEM,\n    value: {\n      id,\n      type,\n      position: item.position || null,\n      [itemPropName]: item.content,\n      ...NEW_ITEM_SHAPE,\n      ...gridItemProperties,\n      ...shape\n    }\n  };\n};\nexport const acUpdateDashboardItem = item => ({\n  type: UPDATE_DASHBOARD_ITEM,\n  value: item\n});\nexport const acRemoveDashboardItem = value => ({\n  type: REMOVE_DASHBOARD_ITEM,\n  value\n}); // thunks\n\nexport const tSaveDashboard = () => async (dispatch, getState) => {\n  const dashboard = sGetEditDashboardRoot(getState());\n  const dashboardToSave = { ...dashboard,\n    dashboardItems: convertUiItemsToBackend(dashboard.dashboardItems),\n    name: dashboard.name || i18n.t('Untitled dashboard')\n  };\n\n  try {\n    const dashboardId = dashboardToSave.id ? await updateDashboard(dashboardToSave) : await postDashboard(dashboardToSave);\n    dispatch(acClearEditDashboard());\n    await dispatch(tSetSelectedDashboardById(dashboardId));\n    return Promise.resolve(dashboardId);\n  } catch (error) {\n    onError(error);\n  }\n};","import i18n from '@dhis2/d2-i18n';\nimport { VISUALIZATION, MAP, EVENT_CHART, EVENT_REPORT, USERS, REPORTS, RESOURCES, APP, MESSAGES, TEXT, SPACER } from '../../modules/itemTypes';\nexport const singleItems = [{\n  id: 'additional',\n  header: i18n.t('Additional items'),\n  items: [{\n    type: TEXT,\n    name: i18n.t('Text box'),\n    content: ''\n  }, {\n    type: MESSAGES,\n    name: i18n.t('Messages'),\n    content: 'true'\n  }, {\n    type: SPACER,\n    name: i18n.t('Spacer'),\n    content: ''\n  }]\n}]; // categorizedItems are grouped in the item selector menu\n\nexport const categorizedItems = [VISUALIZATION, MAP, EVENT_REPORT, EVENT_CHART, USERS, REPORTS, RESOURCES, APP]; // listItemTypes are included in a single dashboard item\n\nexport const listItemTypes = [REPORTS, RESOURCES, USERS];","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { MenuItem, Divider } from '@dhis2/ui';\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\nimport { tAddListItemContent } from './actions';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\nimport { getItemUrl, APP, VISUALIZATION } from '../../modules/itemTypes';\nimport { categorizedItems, listItemTypes } from './selectableItems';\nimport classes from './styles/CategorizedMenuGroup.module.css';\n\nclass CategorizedMenuGroup extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      seeMore: false\n    };\n  }\n\n  addItem = item => () => {\n    const {\n      type,\n      acAddDashboardItem,\n      tAddListItemContent\n    } = this.props;\n\n    if (type === APP) {\n      acAddDashboardItem({\n        type,\n        content: item.key\n      });\n    } else {\n      const newItem = {\n        id: item.id,\n        name: item.displayName || item.name\n      };\n\n      if (listItemTypes.includes(type)) {\n        tAddListItemContent(type, newItem);\n      } else {\n        acAddDashboardItem({\n          type,\n          content: newItem\n        });\n      }\n    }\n  };\n  toggleSeeMore = () => {\n    this.setState({\n      seeMore: !this.state.seeMore\n    });\n    this.props.onChangeItemsLimit(this.props.type);\n  };\n\n  render() {\n    const {\n      title,\n      type,\n      items,\n      hasMore\n    } = this.props;\n    return <>\n                <HeaderMenuItem title={title} />\n                {items.map(item => {\n        const itemUrl = getItemUrl(type, item, this.context.d2);\n        return <ContentMenuItem key={item.id || item.key} type={type} visType={type === VISUALIZATION ? item.type : type} name={item.displayName || item.name} onInsert={this.addItem(item)} url={itemUrl} />;\n      })}\n                {hasMore ? <MenuItem dense key={`showmore${title}`} onClick={this.toggleSeeMore} label={<button className={classes.showMoreButton}>\n                                {this.state.seeMore ? i18n.t('Show fewer') : i18n.t('Show more')}\n                            </button>} /> : null}\n                <Divider margin=\"8px 0px\" />\n            </>;\n  }\n\n}\n\nCategorizedMenuGroup.propTypes = {\n  items: PropTypes.array.isRequired,\n  title: PropTypes.string.isRequired,\n  type: PropTypes.oneOf(categorizedItems).isRequired,\n  onChangeItemsLimit: PropTypes.func.isRequired,\n  acAddDashboardItem: PropTypes.func,\n  hasMore: PropTypes.bool,\n  tAddListItemContent: PropTypes.func\n};\nCategorizedMenuGroup.contextTypes = {\n  d2: PropTypes.object.isRequired\n};\nexport default connect(null, {\n  acAddDashboardItem,\n  tAddListItemContent\n})(CategorizedMenuGroup);","import { sGetEditDashboardRoot } from '../../reducers/editDashboard';\nimport { itemTypeMap } from '../../modules/itemTypes';\nimport { acAddDashboardItem, acUpdateDashboardItem } from '../../actions/editDashboard';\nexport const tAddListItemContent = (type, content) => (dispatch, getState) => {\n  const state = getState();\n  const listItemType = itemTypeMap[type].propName;\n  const dashboardItems = sGetEditDashboardRoot(state).dashboardItems;\n  const dashboardItemIndex = dashboardItems.findIndex(item => item.type === type);\n  let dashboardItem; // Reports/Resources/Users dashboard item type already present in dashboard\n\n  if (dashboardItemIndex > -1) {\n    dashboardItem = dashboardItems[dashboardItemIndex];\n    dashboardItem[listItemType].push(content);\n    dispatch(acUpdateDashboardItem(dashboardItem));\n  } else {\n    dashboardItem = {\n      type: type,\n      content: [content]\n    };\n    dispatch(acAddDashboardItem(dashboardItem));\n  }\n};","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\nexport const SinglesMenuGroup = ({\n  acAddDashboardItem,\n  category\n}) => {\n  const addToDashboard = ({\n    type,\n    content\n  }) => () => {\n    acAddDashboardItem({\n      type,\n      content\n    });\n  };\n\n  return <>\n            <HeaderMenuItem title={category.header} />\n            {category.items.map(item => <ContentMenuItem key={item.type} type={item.type} name={item.name} onInsert={addToDashboard(item)} />)}\n        </>;\n};\nSinglesMenuGroup.propTypes = {\n  acAddDashboardItem: PropTypes.func,\n  category: PropTypes.object\n};\nexport default connect(null, {\n  acAddDashboardItem\n})(SinglesMenuGroup);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport Popover from '@material-ui/core/Popover';\nimport { InputField, Menu } from '@dhis2/ui';\nimport debounce from 'lodash/debounce';\nimport CategorizedMenuGroup from './CategorizedMenuGroup';\nimport SinglesMenuGroup from './SinglesMenuGroup';\nimport { singleItems, categorizedItems } from './selectableItems';\nimport { itemTypeMap, getDefaultItemCount } from '../../modules/itemTypes';\nimport './styles/ItemSelector.css';\n\nconst ItemSearchField = props => <InputField name=\"Dashboard item search\" label={i18n.t('Search for items to add to this dashboard')} type=\"text\" onChange={props.onChange} onFocus={props.onFocus} value={props.value} />;\n\nclass ItemSelector extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      anchorEl: null,\n      open: false,\n      maxOptions: new Set(),\n      items: undefined,\n      filter: '',\n      debouncedFilter: ''\n    };\n  }\n\n  closeList = () => {\n    this.setState({\n      open: false,\n      filter: ''\n    });\n  };\n  openList = (_, event) => {\n    this.fetchItems();\n    this.setState({\n      anchorEl: event.currentTarget,\n      open: true\n    });\n  };\n  updateDebouncedFilterText = debounce(() => {\n    this.setState({\n      debouncedFilter: this.state.filter\n    }, this.fetchItems);\n  }, 350);\n  setFilter = (_, event) => {\n    this.setState({\n      filter: event.target.value\n    }, this.updateDebouncedFilterText);\n  };\n  getCategorizedMenuGroups = () => categorizedItems.filter(type => {\n    const itemType = itemTypeMap[type];\n    return this.state.items && this.state.items[itemType.endPointName];\n  }).map(type => {\n    const itemType = itemTypeMap[type];\n    const itemCount = getDefaultItemCount(type);\n    const allItems = this.state.items[itemType.endPointName];\n    const hasMore = allItems.length > itemCount;\n    const items = this.state.maxOptions.has(itemType.id) ? allItems : allItems.slice(0, itemCount);\n    return <CategorizedMenuGroup key={type} type={type} title={itemType.pluralTitle} items={items} onChangeItemsLimit={this.fetchItems} hasMore={hasMore} />;\n  });\n  getSinglesMenuGroups = () => singleItems.map(category => <SinglesMenuGroup key={category.id} category={category} />);\n  getMenuGroups = () => this.getCategorizedMenuGroups().concat(this.getSinglesMenuGroups());\n  fetchItems = async type => {\n    if (type) {\n      const maxOptions = this.state.maxOptions;\n\n      if (maxOptions.has(type)) {\n        maxOptions.delete(type);\n      } else {\n        maxOptions.add(type);\n      }\n\n      this.setState({\n        maxOptions\n      });\n    } else {\n      this.setState({\n        maxOptions: new Set()\n      });\n    }\n\n    let queryString = '?count=11';\n\n    if ([...this.state.maxOptions.values()].length) {\n      queryString += '&max=' + [...this.state.maxOptions.values()].join('&max=');\n    }\n\n    const filter = this.state.debouncedFilter ? `/${this.state.debouncedFilter}` : '';\n    this.context.d2.Api.getApi().get(`dashboards/q${filter}${queryString}`).then(response => this.setState({\n      items: response\n    })).catch(console.error);\n  };\n\n  render() {\n    return <>\n                <ItemSearchField value={this.state.filter} onChange={this.setFilter} onFocus={this.openList} />\n                <Popover className=\"dashboard-item-selector\" open={this.state.open} onClose={this.closeList} anchorEl={this.state.anchorEl} anchorOrigin={{\n        horizontal: 'left',\n        vertical: 'bottom'\n      }} transformOrigin={{\n        horizontal: 'left',\n        vertical: 'top'\n      }} style={{\n        height: '70vh'\n      }} PaperProps={{\n        style: {\n          width: '700px'\n        }\n      }} disableAutoFocus={true} disableEnforceFocus={true} disableRestoreFocus={true}>\n                    <Menu maxWidth={'700px'}>{this.getMenuGroups()}</Menu>\n                </Popover>\n            </>;\n  }\n\n}\n\nItemSearchField.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n  onFocus: PropTypes.func\n};\nItemSelector.contextTypes = {\n  d2: PropTypes.object.isRequired\n};\nexport default ItemSelector;","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { InputField, TextAreaField } from '@dhis2/ui';\nimport ItemSelector from '../ItemSelector/ItemSelector';\nimport { acSetDashboardTitle, acSetDashboardDescription } from '../../actions/editDashboard';\nimport { orObject } from '../../modules/util';\nimport { sGetEditDashboardRoot } from '../../reducers/editDashboard';\nimport classes from './styles/EditTitleBar.module.css';\nexport const EditTitleBar = ({\n  name,\n  description,\n  onChangeTitle,\n  onChangeDescription\n}) => {\n  const updateTitle = (_, e) => {\n    onChangeTitle(e.target.value);\n  };\n\n  const updateDescription = (_, e) => {\n    onChangeDescription(e.target.value);\n  };\n\n  return <section className={classes.section}>\n            <div className={classes.titleDescription}>\n                <InputField className={classes.title} name=\"Dashboard title input\" label={i18n.t('Dashboard title')} type=\"text\" onChange={updateTitle} value={name} placeholder={i18n.t('Untitled dashboard')} />\n                <TextAreaField className={classes.description} name=\"Dashboard description input\" label={i18n.t('Dashboard description')} onChange={updateDescription} value={description} />\n            </div>\n            <div className={classes.itemSelector}>\n                <ItemSelector />\n            </div>\n        </section>;\n};\nEditTitleBar.propTypes = {\n  onChangeDescription: PropTypes.func.isRequired,\n  onChangeTitle: PropTypes.func.isRequired,\n  description: PropTypes.string,\n  name: PropTypes.string\n};\nEditTitleBar.defaultProps = {\n  name: '',\n  description: ''\n};\n\nconst mapStateToProps = state => {\n  const selectedDashboard = orObject(sGetEditDashboardRoot(state));\n  return {\n    name: selectedDashboard.name,\n    description: selectedDashboard.description\n  };\n};\n\nconst mapDispatchToProps = {\n  onChangeTitle: acSetDashboardTitle,\n  onChangeDescription: acSetDashboardDescription\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(EditTitleBar);","import React from 'react';\nimport { colors } from '@dhis2/ui';\nexport const ThreeDots = () => <svg height=\"18\" viewBox=\"0 0 18 18\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"m4 7.5c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm10 0c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm-5 0c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5z\" fill=\"#6e7a8a\" />\n    </svg>;\nexport const SpeechBubble = () => <svg height=\"20\" viewBox=\"0 0 20 20\" width=\"20\" xmlns=\"http://www.w3.org/2000/svg\" style={{\n  margin: '3px 2px 0 2px'\n}} // Temporary fix for the misaligned icon, should be removed once the icon is replaced\n>\n        <path d=\"m20 2h-16c-1.1 0-1.99.9-1.99 2l-.01 18 4-4h14c1.1 0 2-.9 2-2v-12c0-1.1-.9-2-2-2zm-2 12h-12v-2h12zm0-3h-12v-2h12zm0-3h-12v-2h12z\" fill=\"#6e7a8a\" fillRule=\"evenodd\" transform=\"translate(-2 -2)\" />\n    </svg>;\nexport const Warning = () => <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" fill={colors.grey600}>\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z\" />\n    </svg>;","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { Button, Modal, ModalTitle, ModalContent, ModalActions, ButtonStrip } from '@dhis2/ui';\nimport { PeriodDimension, DynamicDimension, OrgUnitDimension, DIMENSION_ID_PERIOD, DIMENSION_ID_ORGUNIT } from '@dhis2/analytics';\nimport { acAddItemFilter, acRemoveItemFilter } from '../../actions/itemFilters';\nimport { sGetItemFiltersRoot } from '../../reducers/itemFilters';\n\nconst FilterDialog = ({\n  displayNameProperty,\n  dimension,\n  initiallySelectedItems,\n  addItemFilter,\n  removeItemFilter,\n  onClose\n}, context) => {\n  const [filters, setFilters] = useState(initiallySelectedItems);\n\n  const onSelectItems = ({\n    dimensionId,\n    items\n  }) => {\n    setFilters({\n      [dimensionId]: items\n    });\n  };\n\n  const onDeselectItems = ({\n    dimensionId,\n    itemIdsToRemove\n  }) => {\n    const oldList = filters[dimensionId] || [];\n    const newList = oldList.filter(item => !itemIdsToRemove.includes(item.id));\n    setFilters({ ...filters,\n      [dimensionId]: newList\n    });\n  };\n\n  const onReorderItems = ({\n    dimensionId,\n    itemIds\n  }) => {\n    const oldList = filters[dimensionId] || [];\n    const reorderedList = itemIds.map(id => oldList.find(item => item.id === id));\n    setFilters({ ...filters,\n      [dimensionId]: reorderedList\n    });\n  };\n\n  const saveFilter = () => {\n    const id = dimension.id;\n    const filterItems = filters[id];\n\n    if (filterItems && filterItems.length) {\n      addItemFilter({\n        id,\n        value: [...filterItems]\n      });\n    } else {\n      removeItemFilter(id);\n    }\n\n    onClose(id);\n  };\n\n  const renderDialogContent = () => {\n    const commonProps = {\n      d2: context.d2,\n      onSelect: onSelectItems,\n      onDeselect: onDeselectItems,\n      onReorder: onReorderItems\n    };\n    const selectedItems = filters[dimension.id] || [];\n\n    switch (dimension.id) {\n      case DIMENSION_ID_PERIOD:\n        {\n          return <PeriodDimension selectedPeriods={selectedItems} onSelect={commonProps.onSelect} />;\n        }\n\n      case DIMENSION_ID_ORGUNIT:\n        return <OrgUnitDimension displayNameProperty={displayNameProperty} ouItems={selectedItems} {...commonProps} />;\n\n      default:\n        return <DynamicDimension selectedItems={selectedItems} dimensionId={dimension.id} onSelect={commonProps.onSelect} context={commonProps.d2} />;\n    }\n  };\n\n  return <>\n            {dimension.id && <Modal onClose={onClose} position=\"top\" large>\n                    <ModalTitle>{dimension.name}</ModalTitle>\n                    <ModalContent>{renderDialogContent()}</ModalContent>\n                    <ModalActions>\n                        <ButtonStrip>\n                            <Button secondary onClick={onClose}>\n                                {i18n.t('Cancel')}\n                            </Button>\n                            <Button primary onClick={saveFilter}>\n                                {i18n.t('Confirm')}\n                            </Button>\n                        </ButtonStrip>\n                    </ModalActions>\n                </Modal>}\n        </>;\n};\n\nFilterDialog.propTypes = {\n  addItemFilter: PropTypes.func,\n  dimension: PropTypes.object,\n  displayNameProperty: PropTypes.string,\n  initiallySelectedItems: PropTypes.object,\n  removeItemFilter: PropTypes.func,\n  onClose: PropTypes.func\n};\nFilterDialog.contextTypes = {\n  d2: PropTypes.object\n};\n\nconst mapStateToProps = state => ({\n  initiallySelectedItems: sGetItemFiltersRoot(state)\n});\n\nexport default connect(mapStateToProps, {\n  addItemFilter: acAddItemFilter,\n  removeItemFilter: acRemoveItemFilter\n})(FilterDialog);","export const SET_ACTIVE_MODAL_DIMENSION = 'SET_ACTIVE_MODAL_DIMENSION';\nexport const CLEAR_ACTIVE_MODAL_DIMENSION = 'CLEAR_ACTIVE_MODAL_DIMENSION';\nexport const DEFAULT_STATE_ACTIVE_MODAL_DIMENSION = {};\nexport default ((state = DEFAULT_STATE_ACTIVE_MODAL_DIMENSION, action) => {\n  switch (action.type) {\n    case SET_ACTIVE_MODAL_DIMENSION:\n      {\n        return action.value;\n      }\n\n    case CLEAR_ACTIVE_MODAL_DIMENSION:\n      {\n        return DEFAULT_STATE_ACTIVE_MODAL_DIMENSION;\n      }\n\n    default:\n      return state;\n  }\n});\nexport const sGetActiveModalDimension = state => state.activeModalDimension;","import { SET_ACTIVE_MODAL_DIMENSION, CLEAR_ACTIVE_MODAL_DIMENSION } from '../reducers/activeModalDimension';\nexport const acSetActiveModalDimension = value => ({\n  type: SET_ACTIVE_MODAL_DIMENSION,\n  value\n});\nexport const acClearActiveModalDimension = () => ({\n  type: CLEAR_ACTIVE_MODAL_DIMENSION\n});","import React, { useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport isEmpty from 'lodash/isEmpty';\nimport i18n from '@dhis2/d2-i18n';\nimport { DimensionsPanel } from '@dhis2/analytics';\nimport { Button, Popover } from '@dhis2/ui';\nimport FilterDialog from './FilterDialog';\nimport { sGetSettingsDisplayNameProperty } from '../../reducers/settings';\nimport { sGetActiveModalDimension } from '../../reducers/activeModalDimension';\nimport { sGetDimensions } from '../../reducers/dimensions';\nimport { sGetItemFiltersRoot } from '../../reducers/itemFilters';\nimport { acClearActiveModalDimension, acSetActiveModalDimension } from '../../actions/activeModalDimension';\n\nconst FilterSelector = props => {\n  const [showPopover, setShowPopover] = useState(false);\n  const ref = useRef(null);\n\n  const onCloseDialog = () => {\n    setShowPopover(false);\n    props.clearActiveModalDimension();\n  };\n\n  const selectDimension = id => {\n    props.setActiveModalDimension(props.dimensions.find(dimension => dimension.id === id));\n  };\n\n  return <>\n            <span ref={ref}>\n                <Button onClick={() => setShowPopover(true)}>\n                    {i18n.t('Add filter')}\n                    <ArrowDropDownIcon />\n                </Button>\n            </span>\n            {showPopover && <Popover onClickOutside={onCloseDialog} reference={ref} arrow={true} placement=\"bottom-start\">\n                    <DimensionsPanel style={{\n        width: '320px'\n      }} dimensions={props.dimensions} onDimensionClick={selectDimension} selectedIds={Object.keys(props.initiallySelectedItems)} />\n                </Popover>}\n            {!isEmpty(props.dimension) ? <FilterDialog displayNameProperty={props.displayNameProperty} dimension={props.dimension} onClose={onCloseDialog} /> : null}\n        </>;\n};\n\nconst mapStateToProps = state => ({\n  displayNameProperty: sGetSettingsDisplayNameProperty(state),\n  dimension: sGetActiveModalDimension(state),\n  dimensions: sGetDimensions(state),\n  initiallySelectedItems: sGetItemFiltersRoot(state)\n});\n\nFilterSelector.propTypes = {\n  clearActiveModalDimension: PropTypes.func,\n  dimension: PropTypes.object,\n  dimensions: PropTypes.array,\n  displayNameProperty: PropTypes.string,\n  initiallySelectedItems: PropTypes.object,\n  setActiveModalDimension: PropTypes.func\n};\nexport default connect(mapStateToProps, {\n  clearActiveModalDimension: acClearActiveModalDimension,\n  setActiveModalDimension: acSetActiveModalDimension\n})(FilterSelector);","import React, { useState, createRef } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport { Redirect } from 'react-router-dom';\nimport SharingDialog from '@dhis2/d2-ui-sharing-dialog';\nimport Star from '@material-ui/icons/Star';\nimport StarBorder from '@material-ui/icons/StarBorder';\nimport { Button, FlyoutMenu, Popover, MenuItem, colors } from '@dhis2/ui';\nimport { ThreeDots } from '../Item/VisualizationItem/assets/icons';\nimport { orObject } from '../../modules/util';\nimport { tStarDashboard } from '../../actions/dashboards';\nimport { tUpdateShowDescription } from '../../actions/selected';\nimport FilterSelector from '../ItemFilter/FilterSelector';\nimport { sGetSelectedId, sGetSelectedShowDescription } from '../../reducers/selected';\nimport { sGetDashboardById, sGetDashboardItems, EMPTY_DASHBOARD } from '../../reducers/dashboards';\nimport classes from './styles/ViewTitleBar.module.css';\n\nconst ViewTitleBar = (props, context) => {\n  const [moreOptionsIsOpen, setMoreOptionsIsOpen] = useState(false);\n  const [sharingDialogIsOpen, setSharingDialogIsOpen] = useState(false);\n  const [redirectUrl, setRedirectUrl] = useState(null);\n  const {\n    id,\n    name,\n    description,\n    access,\n    style,\n    showDescription,\n    starred,\n    onToggleStarredDashboard,\n    onShowHideDescription\n  } = props;\n\n  const toggleSharingDialog = () => setSharingDialogIsOpen(!sharingDialogIsOpen);\n\n  const toggleMoreOptions = () => setMoreOptionsIsOpen(!moreOptionsIsOpen);\n\n  const printLayout = () => setRedirectUrl(`${id}/printlayout`);\n\n  const printOipp = () => setRedirectUrl(`${id}/printoipp`);\n\n  const titleStyle = Object.assign({}, style.title, {\n    cursor: 'default',\n    userSelect: 'text',\n    top: '7px'\n  });\n  const StarIcon = starred ? Star : StarBorder;\n\n  if (redirectUrl) {\n    return <Redirect to={redirectUrl} />;\n  }\n\n  const showHideDescriptionLabel = showDescription ? i18n.t('Hide description') : i18n.t('Show description');\n\n  const showHideDescription = () => {\n    onShowHideDescription();\n    toggleMoreOptions();\n  };\n\n  const toggleStarredDashboardLabel = starred ? i18n.t('Unstar dashboard') : i18n.t('Star dashboard');\n\n  const toggleStarredDashboard = () => {\n    onToggleStarredDashboard();\n    toggleMoreOptions();\n  };\n\n  const buttonRef = createRef();\n  const userAccess = orObject(access);\n  return <>\n            <div className={classes.titleBar}>\n                <span style={titleStyle}>{name}</span>\n                <div className={classes.actions}>\n                    <div className={classes.titleBarIcon} onClick={onToggleStarredDashboard}>\n                        <StarIcon style={{\n            fill: colors.grey600\n          }} />\n                    </div>\n                    <div className={classes.strip}>\n                        {userAccess.update ? <Link className={classes.editLink} to={`/${id}/edit`}>\n                                <Button>{i18n.t('Edit')}</Button>\n                            </Link> : null}\n                        {userAccess.manage ? <Button onClick={toggleSharingDialog}>\n                                {i18n.t('Share')}\n                            </Button> : null}\n                        <FilterSelector />\n                        <span ref={buttonRef}>\n                            <Button onClick={toggleMoreOptions}>\n                                <ThreeDots />\n                                <span style={{\n                marginLeft: '5px'\n              }}>\n                                    {i18n.t('More')}\n                                </span>\n                            </Button>\n                        </span>\n                    </div>\n                    {moreOptionsIsOpen && <Popover reference={buttonRef} placement=\"bottom-start\" onClickOutside={toggleMoreOptions}>\n                            <FlyoutMenu>\n                                <MenuItem dense label={toggleStarredDashboardLabel} onClick={toggleStarredDashboard} />\n                                <MenuItem dense label={showHideDescriptionLabel} onClick={showHideDescription} />\n                                <MenuItem dense label={i18n.t('Print')}>\n                                    <MenuItem dense label={i18n.t('Dashboard layout')} onClick={printLayout} />\n                                    <MenuItem dense label={i18n.t('One item per page')} onClick={printOipp} />\n                                </MenuItem>\n                            </FlyoutMenu>\n                        </Popover>}\n                </div>\n            </div>\n            {showDescription ? <div className=\"dashboard-description\" style={Object.assign({\n      paddingTop: '5px',\n      paddingBottom: '5px'\n    }, style.description, !description ? {\n      color: '#888'\n    } : {})}>\n                    {description || i18n.t('No description')}\n                </div> : null}\n            {id ? <SharingDialog d2={context.d2} id={id} type=\"dashboard\" open={sharingDialogIsOpen} onRequestClose={toggleSharingDialog} /> : null}\n        </>;\n};\n\nViewTitleBar.propTypes = {\n  access: PropTypes.object,\n  description: PropTypes.string,\n  id: PropTypes.string,\n  name: PropTypes.string,\n  showDescription: PropTypes.bool,\n  starred: PropTypes.bool,\n  style: PropTypes.object,\n  onShowHideDescription: PropTypes.func,\n  onToggleStarredDashboard: PropTypes.func\n};\nViewTitleBar.defaultProps = {\n  name: '',\n  description: '',\n  starred: false,\n  showDescription: false\n};\nViewTitleBar.contextTypes = {\n  d2: PropTypes.object\n};\n\nconst mapStateToProps = state => {\n  const id = sGetSelectedId(state);\n  const dashboard = sGetDashboardById(state, id) || EMPTY_DASHBOARD;\n  return {\n    id,\n    name: dashboard.displayName,\n    description: dashboard.displayDescription,\n    dashboardItems: sGetDashboardItems(state),\n    showDescription: sGetSelectedShowDescription(state),\n    starred: dashboard.starred,\n    access: dashboard.access\n  };\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n  const {\n    id,\n    starred,\n    showDescription\n  } = stateProps;\n  const {\n    dispatch\n  } = dispatchProps;\n  return { ...stateProps,\n    ...ownProps,\n    onToggleStarredDashboard: () => dispatch(tStarDashboard(id, !starred)),\n    onShowHideDescription: () => dispatch(tUpdateShowDescription(!showDescription))\n  };\n};\n\nexport default connect(mapStateToProps, null, mergeProps)(ViewTitleBar);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { colors } from '@dhis2/ui';\nimport EditTitleBar from './EditTitleBar';\nimport ViewTitleBar from './ViewTitleBar';\nimport './TitleBar.css';\nconst style = {\n  title: {\n    position: 'relative',\n    fontSize: 21,\n    fontWeight: 500,\n    color: colors.black,\n    minWidth: 50\n  },\n  description: {\n    fontSize: 14,\n    color: colors.grey800\n  }\n};\n\nconst TitleBar = ({\n  edit\n}) => {\n  return <div className=\"titlebar-wrapper\" style={{\n    padding: '13px 15px 5px 10px'\n  }}>\n            {edit ? <EditTitleBar style={style} /> : <ViewTitleBar style={style} />}\n        </div>;\n};\n\nTitleBar.propTypes = {\n  edit: PropTypes.bool\n};\nexport default TitleBar;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport * as pluginManager from './plugin';\nimport { getBaseUrl, orObject } from '../../../modules/util';\nimport { getGridItemDomId } from '../../ItemGrid/gridUtil';\n\nconst pluginCredentials = d2 => {\n  return {\n    baseUrl: getBaseUrl(d2),\n    auth: d2.Api.getApi().defaultHeaders.Authorization\n  };\n};\n\nclass DefaultPlugin extends Component {\n  pluginCredentials = null;\n\n  constructor(props, context) {\n    super(props);\n    this.d2 = context.d2;\n  }\n\n  shouldPluginReload = prevProps => {\n    // TODO - fix this hack, to handle bug with multiple\n    // rerendering while switching between dashboards.\n    //\n    // To determine if the rendering is happening because of a\n    // dashboard switch, check if the item reference has changed.\n    const reloadAllowed = this.props.item === prevProps.item;\n    const filtersChanged = prevProps.itemFilters !== this.props.itemFilters;\n    const vis = orObject(this.props.visualization);\n    const prevVis = orObject(prevProps.visualization);\n    const visChanged = vis.id !== prevVis.id || vis.activeType !== prevVis.activeType;\n    return reloadAllowed && (visChanged || filtersChanged);\n  };\n  reloadPlugin = prevProps => {\n    if (pluginManager.pluginIsAvailable(this.props.visualization.activeType || this.props.item.type) && this.shouldPluginReload(prevProps)) {\n      const prevVis = orObject(prevProps.visualization);\n      const currentVis = this.props.visualization;\n      const useActiveType = currentVis.activeType !== prevVis.activeType || currentVis.activeType !== this.props.item.type;\n\n      if (useActiveType || this.props.itemFilters !== prevProps.itemFilters) {\n        pluginManager.unmount(this.props.item, prevVis.activeType || this.props.item.type);\n        pluginManager.load(this.props.item, this.props.visualization, {\n          credentials: this.pluginCredentials,\n          activeType: useActiveType ? currentVis.activeType : null\n        });\n      }\n    }\n  };\n\n  componentDidMount() {\n    this.pluginCredentials = pluginCredentials(this.d2);\n\n    if (pluginManager.pluginIsAvailable(this.props.visualization.activeType || this.props.item.type)) {\n      pluginManager.load(this.props.item, this.props.visualization, {\n        credentials: this.pluginCredentials,\n        activeType: this.props.useActiveType ? this.getActiveType() : null,\n        options: this.props.options\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    this.reloadPlugin(prevProps);\n  }\n\n  componentWillUnmount() {\n    if (pluginManager.pluginIsAvailable(this.props.visualization.activeType || this.props.item.type)) {\n      pluginManager.unmount(this.props.item, this.getActiveType());\n    }\n  }\n\n  getActiveType = () => this.props.visualization.activeType || this.props.item.type;\n\n  render() {\n    const {\n      classes,\n      item,\n      visualization,\n      style\n    } = this.props;\n    const pluginIsAvailable = pluginManager.pluginIsAvailable(visualization.activeType || item.type);\n    return pluginIsAvailable ? <div id={getGridItemDomId(item.id)} style={style} /> : <div className={classes.textDiv}>\n                {i18n.t('Unable to load the plugin for this item')}\n            </div>;\n  }\n\n}\n\nDefaultPlugin.contextTypes = {\n  d2: PropTypes.object\n};\nDefaultPlugin.propTypes = {\n  classes: PropTypes.object,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object,\n  options: PropTypes.object,\n  style: PropTypes.object,\n  useActiveType: PropTypes.bool,\n  visualization: PropTypes.object\n};\nDefaultPlugin.defaultProps = {\n  style: {},\n  item: {},\n  itemFilters: {},\n  options: {},\n  visualization: {}\n};\nexport default DefaultPlugin;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Warning } from './assets/icons';\nimport classes from './styles/FatalErrorBoundary.module.css';\n\nclass FatalErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      errorFound: false\n    };\n  }\n\n  componentDidCatch(error, info) {\n    this.setState({\n      errorFound: true\n    });\n    console.log('error: ', error);\n    console.log('info: ', info);\n  }\n\n  render() {\n    if (this.state.errorFound) {\n      return <p className={classes.container}>\n                    <span className={classes.icon}>\n                        <Warning />\n                    </span>\n                    <span className={classes.message}>\n                        {i18n.t('There was a problem loading this dashboard item')}\n                    </span>\n                </p>;\n    }\n\n    return this.props.children;\n  }\n\n}\n\nFatalErrorBoundary.propTypes = {\n  children: PropTypes.node\n};\nexport default FatalErrorBoundary;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classes from './styles/ItemHeader.module.css';\n\nconst ViewItemActions = ({\n  actionButtons\n}) => {\n  return actionButtons ? <div className={classes.itemActionsWrap}>{actionButtons}</div> : null;\n};\n\nViewItemActions.propTypes = {\n  actionButtons: PropTypes.node\n};\nexport default ViewItemActions;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { colors } from '@dhis2/ui';\nimport classes from './styles/DeleteItemButton.module.css';\n\nconst DeleteItemButton = ({\n  onClick\n}) => <button type=\"button\" className={classes.deleteItemButton} onClick={onClick} title={i18n.t(`Delete item`)}>\n        <DeleteIcon style={{\n    fill: colors.red500\n  }} />\n    </button>;\n\nDeleteItemButton.propTypes = {\n  onClick: PropTypes.func\n};\nexport default DeleteItemButton;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport DeleteItemButton from './DeleteItemButton';\nimport { acRemoveDashboardItem } from '../../../actions/editDashboard';\nimport classes from './styles/ItemHeader.module.css';\n\nconst EditItemActions = ({\n  itemId,\n  acRemoveDashboardItem\n}) => {\n  const handleDeleteItem = () => acRemoveDashboardItem(itemId);\n\n  return <div className={classes.itemActionsWrap}>\n            <DeleteItemButton onClick={handleDeleteItem} />\n        </div>;\n};\n\nEditItemActions.propTypes = {\n  acRemoveDashboardItem: PropTypes.func,\n  itemId: PropTypes.string\n};\nconst mapDispatchToProps = {\n  acRemoveDashboardItem\n};\nexport default connect(null, mapDispatchToProps)(EditItemActions);","import React from 'react';\nimport { colors } from '@dhis2/ui';\n\nconst WarningIcon = () => <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" fill={colors.grey600}>\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z\" />\n    </svg>;\n\nexport default WarningIcon;","import React from 'react';\nimport { Tooltip } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport InfoIcon from '../../../icons/Info';\nimport classes from './styles/PrintItemInfo.module.css';\n\nconst PrintWarning = () => <div className={classes.warning}>\n        <Tooltip content={i18n.t('This item has been shortened to fit on one page')} placement=\"bottom\">\n            <InfoIcon />\n        </Tooltip>\n    </div>;\n\nexport default PrintWarning;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ViewItemActions from './ViewItemActions';\nimport EditItemActions from './EditItemActions';\nimport PrintItemInfo from './PrintItemInfo';\nimport { VIEW, EDIT, PRINT_LAYOUT } from '../../Dashboard/dashboardModes';\nimport classes from './styles/ItemHeader.module.css';\n\nconst getItemActionsMap = isShortened => {\n  return {\n    [VIEW]: ViewItemActions,\n    [EDIT]: EditItemActions,\n    [PRINT_LAYOUT]: isShortened ? PrintItemInfo : null\n  };\n}; // This is the margin-top + margin-bottom defined in the css file\n\n\nexport const HEADER_MARGIN_HEIGHT = 12;\nconst ItemHeader = React.forwardRef(({\n  dashboardMode,\n  title,\n  isShortened,\n  ...rest\n}, ref) => {\n  const Actions = getItemActionsMap(isShortened)[dashboardMode];\n  return <div className={classes.itemHeaderWrap} ref={ref}>\n                <p className={classes.itemTitle}>{title}</p>\n                {Actions ? <Actions {...rest} /> : null}\n            </div>;\n});\nItemHeader.displayName = 'ItemHeader';\nItemHeader.propTypes = {\n  dashboardMode: PropTypes.string,\n  isShortened: PropTypes.bool,\n  title: PropTypes.string\n};\nexport default connect(null, null, null, {\n  forwardRef: true\n})(ItemHeader);","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { isSingleValue, isYearOverYear, VIS_TYPE_GAUGE, VIS_TYPE_PIE } from '@dhis2/analytics';\nimport { Button, Menu, MenuItem, Divider, colors } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport Popover from '@material-ui/core/Popover';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport { ThreeDots, SpeechBubble } from './assets/icons';\nimport { pluginIsAvailable, getLink } from './plugin';\nimport { CHART, MAP, REPORT_TABLE, EVENT_CHART, EVENT_REPORT, isTrackerDomainType, hasMapView, getAppName } from '../../../modules/itemTypes';\nconst iconFill = {\n  fill: colors.grey600\n};\n\nconst ItemHeaderButtons = props => {\n  const [anchorEl, setAnchorEl] = useState(null);\n  const {\n    item,\n    visualization,\n    onSelectActiveType,\n    d2,\n    activeType\n  } = props;\n  const isTrackerType = isTrackerDomainType(item.type);\n\n  const onViewTable = () => {\n    handleClose();\n    onSelectActiveType(isTrackerType ? EVENT_REPORT : REPORT_TABLE);\n  };\n\n  const onViewChart = () => {\n    handleClose();\n    onSelectActiveType(isTrackerType ? EVENT_CHART : CHART);\n  };\n\n  const onViewMap = () => {\n    handleClose();\n    onSelectActiveType(MAP);\n  };\n\n  const itemHasMapView = () => hasMapView(item.type);\n\n  const handleMenuClick = (_, event) => setAnchorEl(event.currentTarget);\n\n  const handleInterpretationClick = () => {\n    props.onToggleFooter();\n\n    if (anchorEl !== null) {\n      handleClose();\n    }\n  };\n\n  const handleClose = () => setAnchorEl(null);\n\n  const type = visualization.type || item.type;\n  const canViewAs = !isSingleValue(type) && !isYearOverYear(type) && type !== VIS_TYPE_GAUGE && type !== VIS_TYPE_PIE;\n  const interpretationMenuLabel = props.activeFooter ? i18n.t(`Hide interpretations and details`) : i18n.t(`Show interpretations and details`);\n\n  const ViewAsMenuItems = () => <>\n            {activeType !== CHART && activeType !== EVENT_CHART && <MenuItem dense label={i18n.t('View as Chart')} onClick={onViewChart} icon={<ChartIcon style={iconFill} />} />}\n            {activeType !== REPORT_TABLE && activeType !== EVENT_REPORT && <MenuItem dense label={i18n.t('View as Table')} onClick={onViewTable} icon={<TableIcon style={iconFill} />} />}\n            {itemHasMapView() && activeType !== MAP && <MenuItem dense label={i18n.t('View as Map')} onClick={onViewMap} icon={<MapIcon style={iconFill} />} />}\n        </>;\n\n  return pluginIsAvailable(activeType || item.type) ? <>\n            <Button small secondary onClick={handleMenuClick}>\n                <ThreeDots />\n            </Button>\n            {anchorEl && <Popover open={Boolean(anchorEl)} onClose={handleClose} anchorEl={anchorEl}>\n                    <Menu>\n                        {canViewAs && <>\n                                <ViewAsMenuItems />\n                                <Divider />\n                            </>}\n                        <MenuItem dense icon={<LaunchIcon style={{\n          fill: '#6e7a8a'\n        }} />} label={i18n.t('Open in {{appName}} app', {\n          appName: getAppName(item.type)\n        })} href={getLink(item, d2)} target=\"_blank\" />\n                        <MenuItem dense icon={<SpeechBubble />} label={interpretationMenuLabel} onClick={handleInterpretationClick} />\n                    </Menu>\n                </Popover>}\n        </> : null;\n};\n\nItemHeaderButtons.propTypes = {\n  activeFooter: PropTypes.bool,\n  activeType: PropTypes.string,\n  d2: PropTypes.object,\n  item: PropTypes.object,\n  visualization: PropTypes.object,\n  onSelectActiveType: PropTypes.func,\n  onToggleFooter: PropTypes.func\n};\nexport default ItemHeaderButtons;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { colors } from '@dhis2/ui';\nimport { getId } from './plugin';\nimport InterpretationsComponent from '@dhis2/d2-ui-interpretations';\nconst style = {\n  scrollContainer: {\n    overflowY: 'auto',\n    height: '340px'\n  },\n  line: {\n    margin: '-1px 0px 0px',\n    height: '1px',\n    border: 'none',\n    backgroundColor: colors.grey100\n  }\n};\n\nclass ItemFooter extends Component {\n  render() {\n    const objectId = getId(this.props.item);\n    return <div className=\"dashboard-item-footer\">\n                <hr style={style.line} />\n                <div style={style.scrollContainer}>\n                    <InterpretationsComponent d2={this.context.d2} item={this.props.item} type={this.props.item.type.toLowerCase()} id={objectId} appName=\"dashboard\" />\n                </div>\n            </div>;\n  }\n\n}\n\nItemFooter.contextTypes = {\n  d2: PropTypes.object.isRequired\n};\nItemFooter.propTypes = {\n  item: PropTypes.object.isRequired\n};\nexport default ItemFooter;","import React from 'react';\nimport { CircularLoader } from '@dhis2/ui';\nimport classes from './styles/LoadingMask.module.css';\n\nconst LoadingMask = () => {\n  return <div className={classes.center}>\n            <CircularLoader />\n        </div>;\n};\n\nexport default LoadingMask;","// Note that this ignores discrepancies in 'this', so shouldn't be used with bound functions\n// This is useful instead of lodash/memoize when we only need to memoize a single value\n// Inspiration: https://github.com/alexreardon/memoize-one\nconst memoizeOne = fn => {\n  let lastArgs = undefined;\n  let lastValue = undefined;\n  return (...args) => {\n    if (lastArgs && args.length === lastArgs.length && args.every((arg, i) => arg === lastArgs[i])) {\n      return lastValue;\n    }\n\n    lastArgs = args;\n    lastValue = fn(...args);\n    return lastValue;\n  };\n};\n\nexport default memoizeOne;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport uniqueId from 'lodash/uniqueId';\nimport VisualizationPlugin from '@dhis2/data-visualizer-plugin';\nimport i18n from '@dhis2/d2-i18n';\nimport DefaultPlugin from './DefaultPlugin';\nimport FatalErrorBoundary from './FatalErrorBoundary';\nimport ItemHeader, { HEADER_MARGIN_HEIGHT } from '../ItemHeader/ItemHeader';\nimport ItemHeaderButtons from './ItemHeaderButtons';\nimport ItemFooter from './ItemFooter';\nimport LoadingMask from './LoadingMask';\nimport * as pluginManager from './plugin';\nimport { sGetVisualization } from '../../../reducers/visualizations';\nimport { sGetItemFiltersRoot, DEFAULT_STATE_ITEM_FILTERS } from '../../../reducers/itemFilters';\nimport { acAddVisualization, acSetActiveVisualizationType } from '../../../actions/visualizations';\nimport { VISUALIZATION, MAP, CHART, REPORT_TABLE } from '../../../modules/itemTypes';\nimport memoizeOne from '../../../modules/memoizeOne';\nimport { isEditMode, isPrintMode, isViewMode } from '../../Dashboard/dashboardModes';\nimport { ITEM_CONTENT_PADDING_BOTTOM } from '../../ItemGrid/ItemGrid';\nimport classes from './styles/Item.module.css';\nexport class Item extends Component {\n  state = {\n    showFooter: false,\n    configLoaded: false,\n    pluginIsLoaded: false\n  };\n\n  constructor(props, context) {\n    super(props);\n    this.d2 = context.d2;\n    this.contentRef = React.createRef();\n    this.headerRef = React.createRef();\n    this.memoizedApplyFilters = memoizeOne(this.applyFilters);\n    this.memoizedGetVisualizationConfig = memoizeOne(pluginManager.getVisualizationConfig);\n    this.memoizedGetContentStyle = memoizeOne(this.getContentStyle);\n  }\n\n  async componentDidMount() {\n    this.props.onVisualizationLoaded( // TODO do not call fetch on the pluginManager, do it here as the manager will eventually be removed...\n    await pluginManager.fetch(this.props.item));\n    this.setState({\n      configLoaded: true\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.pluginIsLoaded && (prevProps.visualization !== this.props.visualization || prevProps.itemFilters !== this.props.itemFilters)) {\n      this.setState({\n        pluginIsLoaded: false\n      });\n    }\n  }\n\n  applyFilters = (visualization, filters) => {\n    if (!Object.keys(filters).length) {\n      return visualization;\n    } // deep clone objects in filters to avoid changing the visualization in the Redux store\n\n\n    const visRows = visualization.rows.map(obj => ({ ...obj\n    }));\n    const visColumns = visualization.columns.map(obj => ({ ...obj\n    }));\n    const visFilters = visualization.filters.map(obj => ({ ...obj\n    }));\n    Object.keys(filters).forEach(dimensionId => {\n      if (filters[dimensionId]) {\n        let dimensionFound = false;\n        [visRows, visColumns, visFilters].forEach(dimensionObjects => dimensionObjects.filter(obj => obj.dimension === dimensionId).forEach(obj => {\n          dimensionFound = true;\n          obj.items = filters[dimensionId];\n        })); // add dimension to filters if not already present elsewhere\n\n        if (!dimensionFound) {\n          visFilters.push({\n            dimension: dimensionId,\n            items: filters[dimensionId]\n          });\n        }\n      }\n    });\n    return { ...visualization,\n      rows: visRows,\n      columns: visColumns,\n      filters: visFilters\n    };\n  };\n  getUniqueKey = memoizeOne(() => uniqueId());\n  pluginCredentials = null;\n  getPluginComponent = () => {\n    const activeType = this.getActiveType();\n    const visualization = this.memoizedGetVisualizationConfig(this.props.visualization, this.props.item.type, activeType);\n\n    if (!visualization) {\n      return <div className={classes.textDiv}>\n                    {i18n.t('No data to display')}\n                </div>;\n    }\n\n    const calculatedHeight = this.props.item.originalHeight - this.headerRef.current.clientHeight - HEADER_MARGIN_HEIGHT - ITEM_CONTENT_PADDING_BOTTOM;\n    const props = { ...this.props,\n      useActiveType: !isEditMode(this.props.dashboardMode),\n      visualization,\n      classes,\n      style: this.memoizedGetContentStyle(calculatedHeight, this.contentRef ? this.contentRef.offsetHeight : null, isEditMode(this.props.dashboardMode) || isPrintMode(this.props.dashboardMode))\n    };\n\n    switch (activeType) {\n      case VISUALIZATION:\n      case CHART:\n      case REPORT_TABLE:\n        {\n          return <>\n                        {!this.state.pluginIsLoaded && <div style={props.style}>\n                                <LoadingMask />\n                            </div>}\n                        <VisualizationPlugin d2={this.d2} visualization={this.memoizedApplyFilters(visualization, props.itemFilters)} onLoadingComplete={this.onLoadingComplete} forDashboard={true} style={props.style} />\n                    </>;\n        }\n\n      case MAP:\n        {\n          if (props.item.type === MAP) {\n            // apply filters only to thematic and event layers\n            // for maps AO\n            const mapViews = props.visualization.mapViews.map(obj => {\n              if (obj.layer.includes('thematic') || obj.layer.includes('event')) {\n                return this.memoizedApplyFilters(obj, props.itemFilters);\n              }\n\n              return obj;\n            });\n            props.visualization = { ...props.visualization,\n              mapViews\n            };\n          } else {\n            // this is the case of a non map AO passed to the maps plugin\n            // due to a visualization type switch in dashboard item\n            // maps plugin takes care of converting the AO to a suitable format\n            props.visualization = this.memoizedApplyFilters(props.visualization, props.itemFilters);\n          }\n\n          props.options = { ...props.options,\n            hideTitle: true\n          };\n          return <DefaultPlugin {...props} />;\n        }\n\n      default:\n        {\n          props.visualization = this.memoizedApplyFilters(props.visualization, props.itemFilters);\n          return <DefaultPlugin {...props} />;\n        }\n    }\n  };\n  onLoadingComplete = () => {\n    this.setState({\n      pluginIsLoaded: true\n    });\n  };\n  onToggleFooter = () => {\n    this.setState({\n      showFooter: !this.state.showFooter\n    }, this.props.onToggleItemExpanded(this.props.item.id));\n  };\n  onSelectActiveType = type => {\n    type !== this.getActiveType() && this.props.onSelectActiveType(this.props.visualization.id, type);\n  };\n  getActiveType = () => this.props.visualization.activeType || this.props.item.type;\n  pluginIsAvailable = () => pluginManager.pluginIsAvailable(this.props.item, this.props.visualization);\n  getContentStyle = (calculatedHeight, measuredHeight, preferMeasured) => {\n    const height = preferMeasured ? measuredHeight || calculatedHeight : calculatedHeight;\n    return {\n      height\n    };\n  };\n\n  render() {\n    const {\n      item,\n      dashboardMode,\n      itemFilters\n    } = this.props;\n    const {\n      showFooter\n    } = this.state;\n    const actionButtons = <ItemHeaderButtons item={item} visualization={this.props.visualization} onSelectActiveType={this.onSelectActiveType} onToggleFooter={this.onToggleFooter} d2={this.d2} activeType={this.getActiveType()} activeFooter={this.state.showFooter} />;\n    return <>\n                <ItemHeader title={pluginManager.getName(item)} itemId={item.id} actionButtons={actionButtons} ref={this.headerRef} dashboardMode={dashboardMode} isShortened={item.shortened} />\n                <FatalErrorBoundary>\n                    <div key={this.getUniqueKey(itemFilters)} className=\"dashboard-item-content\" ref={ref => this.contentRef = ref}>\n                        {this.state.configLoaded && this.getPluginComponent()}\n                    </div>\n                </FatalErrorBoundary>\n                {isViewMode(dashboardMode) && showFooter ? <ItemFooter item={item} /> : null}\n            </>;\n  }\n\n}\nItem.contextTypes = {\n  d2: PropTypes.object\n};\nItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object,\n  visualization: PropTypes.object,\n  onSelectActiveType: PropTypes.func,\n  onToggleItemExpanded: PropTypes.func,\n  onVisualizationLoaded: PropTypes.func\n};\nItem.defaultProps = {\n  item: {},\n  onToggleItemExpanded: Function.prototype,\n  visualization: {}\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const itemFilters = !isEditMode(ownProps.dashboardMode) ? sGetItemFiltersRoot(state) : DEFAULT_STATE_ITEM_FILTERS;\n  return {\n    itemFilters,\n    visualization: sGetVisualization(state, pluginManager.extractFavorite(ownProps.item).id)\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  onVisualizationLoaded: visualization => dispatch(acAddVisualization(visualization)),\n  onSelectActiveType: (id, type, activeType) => dispatch(acSetActiveVisualizationType(id, type, activeType))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Item);","import React from 'react';\nimport { colors } from '@dhis2/ui';\nconst style = {\n  backgroundColor: colors.grey200,\n  border: 'none',\n  height: '1px',\n  margin: '0px 0px 5px 0px'\n};\n\nconst Line = () => <hr style={style} />;\n\nexport default Line;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { colors } from '@dhis2/ui';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport Line from '../../../widgets/Line';\nimport { sGetMessagesRoot } from '../../../reducers/messages';\nimport { formatDate } from '../../../modules/util';\nimport { isViewMode } from '../../Dashboard/dashboardModes';\nimport './MessagesItem.css';\nconst PRIVATE = 'PRIVATE';\nconst messageTypes = {\n  [PRIVATE]: 'Private',\n  VALIDATION_RESULT: 'Validation',\n  TICKET: 'Ticket',\n  SYSTEM: 'System'\n};\nconst style = {\n  list: {\n    listStyleType: 'none',\n    paddingLeft: '0px'\n  },\n  seeAll: {\n    textAlign: 'center',\n    fontSize: '13px',\n    marginBottom: '5px'\n  },\n  sender: {\n    fontSize: '13px',\n    lineHeight: '15px',\n    margin: 0,\n    color: colors.grey800\n  },\n  snippet: {\n    color: colors.grey800,\n    fontSize: '13px',\n    lineHeight: '15px',\n    maxHeight: '30px',\n    overflow: 'hidden'\n  }\n};\n\nclass MessagesItem extends Component {\n  state = {\n    uiLocale: ''\n  };\n\n  async componentDidMount() {\n    const uiLocale = await this.context.d2.currentUser.userSettings.get('keyUiLocale');\n    this.setState({\n      uiLocale\n    });\n  }\n\n  getMessageHref = msg => {\n    const msgIdentifier = msg ? `#/${msg.messageType}/${msg.id}` : '';\n    return `${this.context.baseUrl}/dhis-web-messaging/${msgIdentifier}`;\n  };\n  getMessageSender = msg => {\n    const latestMsg = msg.messages.slice(-1)[0];\n    return latestMsg.sender ? latestMsg.sender.displayName : '';\n  };\n  getMessageItems = () => {\n    const modeClass = isViewMode(this.props.dashboardMode) ? 'view' : null;\n    return this.props.messages.map(msg => {\n      const redirectToMsg = () => {\n        if (isViewMode(this.props.dashboardMode)) {\n          document.location.href = this.getMessageHref(msg);\n        }\n      };\n\n      const sender = msg.messageType === PRIVATE ? this.getMessageSender(msg) : messageTypes[msg.messageType];\n      const readClass = !msg.read ? 'unread' : null;\n      const latestMsg = msg.messages.slice(-1)[0];\n      const msgDate = latestMsg.lastUpdated;\n      return <li className={`message-item ${modeClass}`} key={msg.id} onClick={redirectToMsg}>\n                    <p className={`message-title ${readClass}`}>\n                        {msg.displayName} ({msg.messageCount})\n                    </p>\n                    <p style={style.sender}>\n                        {sender} - {formatDate(msgDate, this.state.uiLocale)}\n                    </p>\n                    <p style={style.snippet}>{latestMsg.text}</p>\n                </li>;\n    });\n  };\n\n  render() {\n    return <>\n                <ItemHeader title={i18n.t('Messages')} itemId={this.props.item.id} dashboardMode={this.props.dashboardMode} isShortened={this.props.item.shortened} />\n                <Line />\n                {this.props.messages.length > 0 && <div className=\"dashboard-item-content\">\n                        <ul style={style.list}>{this.getMessageItems()}</ul>\n                        <div style={style.seeAll}>\n                            <a href={this.getMessageHref()}>\n                                {i18n.t('See all messages')}\n                            </a>\n                        </div>\n                    </div>}\n            </>;\n  }\n\n}\n\nMessagesItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  messages: PropTypes.array\n};\nMessagesItem.contextTypes = {\n  d2: PropTypes.object,\n  baseUrl: PropTypes.string\n};\n\nconst mapStateToProps = state => {\n  return {\n    messages: Object.values(sGetMessagesRoot(state))\n  };\n};\n\nconst MessagesContainer = connect(mapStateToProps, null)(MessagesItem);\nexport default MessagesContainer;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nconst NotSupportedItem = props => <>\n        <ItemHeader title={i18n.t('Item type \"{{type}}\" not supported', {\n    type: props.item.type\n  })} itemId={props.item.id} dashboardMode={props.dashboardMode} isShortened={props.item.shortened} />\n        <div style={{\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '90%'\n  }}>\n            <NotInterestedIcon style={{\n      width: 100,\n      height: 100,\n      align: 'center'\n    }} color=\"disabled\" />\n        </div>\n    </>;\n\nNotSupportedItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object\n};\nexport default NotSupportedItem;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst DescriptionIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill={colors.grey500}>\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M14 2H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6zm2 16H8v-2h8v2zm0-4H8v-2h8v2zm-3-5V3.5L18.5 9H13z\" />\n    </svg>;\n\nDescriptionIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default DescriptionIcon;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst DeleteIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill={colors.red500}>\n        <path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>;\n\nDeleteIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default DeleteIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { colors } from '@dhis2/ui';\nimport DescriptionIcon from '../../../icons/Description';\nimport DeleteIcon from '../../../icons/Delete';\nimport Line from '../../../widgets/Line';\nimport { itemTypeMap, getItemUrl } from '../../../modules/itemTypes';\nimport { orArray } from '../../../modules/util';\nimport { tRemoveListItemContent } from './actions';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport { isEditMode } from '../../Dashboard/dashboardModes';\nimport classes from './Item.module.css';\n\nconst getItemTitle = item => itemTypeMap[item.type].pluralTitle;\n\nconst getContentItems = item => orArray(item[itemTypeMap[item.type].propName]).filter((item, index, array) => array.findIndex(el => el.id === item.id) === index);\n\nconst ListItem = (props, context) => {\n  const {\n    item,\n    dashboardMode,\n    tRemoveListItemContent\n  } = props;\n  const contentItems = getContentItems(item);\n\n  const getLink = contentItem => {\n    const deleteButton = <button className={classes.deletebutton} onClick={() => tRemoveListItemContent(item, contentItem)}>\n                <DeleteIcon className={classes.deleteicon} />\n            </button>;\n    return <>\n                <a className={classes.link} style={{\n        color: colors.grey900\n      }} href={getItemUrl(item.type, contentItem, context.d2)}>\n                    {contentItem.name}\n                </a>\n                {isEditMode(dashboardMode) ? deleteButton : null}\n            </>;\n  };\n\n  return <>\n            <ItemHeader title={getItemTitle(item)} itemId={item.id} dashboardMode={dashboardMode} isShortened={item.shortened} />\n            <Line />\n            <div className=\"dashboard-item-content\">\n                <ul className={classes.list}>\n                    {contentItems.map(contentItem => <li className={classes.item} key={contentItem.id}>\n                            <DescriptionIcon className={classes.itemicon} />\n                            {getLink(contentItem)}\n                        </li>)}\n                </ul>\n            </div>\n        </>;\n};\n\nListItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  tRemoveListItemContent: PropTypes.func\n};\nListItem.contextTypes = {\n  d2: PropTypes.object\n};\nexport default connect(null, {\n  tRemoveListItemContent\n})(ListItem);","import { acUpdateDashboardItem, acRemoveDashboardItem } from '../../../actions/editDashboard';\nimport { itemTypeMap } from '../../../modules/itemTypes';\nexport const tRemoveListItemContent = (dashboardItem, content) => dispatch => {\n  const listItemType = itemTypeMap[dashboardItem.type].propName;\n  const newContent = dashboardItem[listItemType].filter(item => item.id !== content.id);\n\n  if (newContent.length) {\n    dashboardItem[listItemType] = newContent;\n    dispatch(acUpdateDashboardItem(dashboardItem));\n  } else {\n    dispatch(acRemoveDashboardItem(dashboardItem));\n  }\n};","/** @module reducers/editDashboard */\nimport update from 'immutability-helper';\nimport isEmpty from 'lodash/isEmpty';\nimport { orArray } from '../modules/util';\nexport const SET_PRINT_DASHBOARD = 'SET_PRINT_DASHBOARD';\nexport const CLEAR_PRINT_DASHBOARD = 'CLEAR_PRINT_DASHBOARD';\nexport const ADD_PRINT_DASHBOARD_ITEM = 'ADD_PRINT_DASHBOARD_ITEM';\nexport const SET_PRINT_DASHBOARD_LAYOUT = 'SET_PRINT_DASHBOARD_LAYOUT';\nexport const REMOVE_PRINT_DASHBOARD_ITEM = 'REMOVE_PRINT_DASHBOARD_ITEM';\nexport const UPDATE_PRINT_DASHBOARD_ITEM = 'UPDATE_PRINT_DASHBOARD_ITEM';\nexport const DEFAULT_STATE_PRINT_DASHBOARD = {};\nconst DEFAULT_DASHBOARD_ITEMS = [];\nexport const NEW_PRINT_DASHBOARD_STATE = {\n  id: '',\n  name: '',\n  access: {},\n  description: '',\n  dashboardItems: DEFAULT_DASHBOARD_ITEMS\n};\nexport default ((state = DEFAULT_STATE_PRINT_DASHBOARD, action) => {\n  switch (action.type) {\n    case SET_PRINT_DASHBOARD:\n      {\n        const newState = {};\n        Object.keys(NEW_PRINT_DASHBOARD_STATE).map(k => newState[k] = action.value[k]);\n        return newState;\n      }\n\n    case CLEAR_PRINT_DASHBOARD:\n      return DEFAULT_STATE_PRINT_DASHBOARD;\n\n    case ADD_PRINT_DASHBOARD_ITEM:\n      if (!action.value.position) {\n        return update(state, {\n          dashboardItems: {\n            $unshift: [action.value]\n          }\n        });\n      }\n\n      return update(state, {\n        dashboardItems: {\n          $splice: [[parseInt(action.value.position), 0, action.value]]\n        }\n      });\n\n    case REMOVE_PRINT_DASHBOARD_ITEM:\n      {\n        const idToRemove = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === idToRemove);\n\n        if (dashboardItemIndex > -1) {\n          return update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1]]\n            }\n          });\n        }\n\n        return state;\n      }\n\n    case UPDATE_PRINT_DASHBOARD_ITEM:\n      {\n        const dashboardItem = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === dashboardItem.id);\n\n        if (dashboardItemIndex > -1) {\n          const newState = update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1, Object.assign({}, dashboardItem)]]\n            }\n          });\n          return newState;\n        }\n\n        return state;\n      }\n\n    case SET_PRINT_DASHBOARD_LAYOUT:\n      {\n        const stateItems = orArray(state.dashboardItems);\n        let layoutHasChanged = false;\n        const newStateItems = action.value.map(({\n          x,\n          y,\n          w,\n          h,\n          i\n        }) => {\n          const stateItem = stateItems.find(si => si.id === i);\n\n          if (!(stateItem.x === x && stateItem.y === y && stateItem.w === w && stateItem.h === h)) {\n            layoutHasChanged = true;\n            return Object.assign({}, stateItem, {\n              w,\n              h,\n              x,\n              y\n            });\n          }\n\n          return stateItem;\n        });\n        return layoutHasChanged ? { ...state,\n          dashboardItems: newStateItems\n        } : state;\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetPrintDashboardRoot = state => state.printDashboard; // selectors\n\nexport const sGetIsPrinting = state => !isEmpty(state.printDashboard);\nexport const sGetPrintDashboardName = state => sGetPrintDashboardRoot(state).name;\nexport const sGetPrintDashboardDescription = state => sGetPrintDashboardRoot(state).description;\nexport const sGetPrintDashboardItems = state => {\n  return sGetPrintDashboardRoot(state)?.dashboardItems || DEFAULT_DASHBOARD_ITEMS;\n};","import React from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport Input from '@material-ui/core/Input';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport PrintItemInfo from '../ItemHeader/PrintItemInfo';\nimport Line from '../../../widgets/Line';\nimport { Parser as RichTextParser, Editor as RichTextEditor } from '@dhis2/d2-ui-rich-text';\nimport { acUpdateDashboardItem } from '../../../actions/editDashboard';\nimport { sGetEditDashboardItems } from '../../../reducers/editDashboard';\nimport { sGetDashboardItems } from '../../../reducers/dashboards';\nimport { sGetIsPrinting, sGetPrintDashboardItems } from '../../../reducers/printDashboard';\nimport { isEditMode, PRINT_LAYOUT } from '../../Dashboard/dashboardModes';\nconst style = {\n  textDiv: {\n    padding: '10px',\n    whiteSpace: 'pre-line',\n    lineHeight: '20px'\n  },\n  textField: {\n    fontSize: '14px',\n    fontStretch: 'normal',\n    width: '90%',\n    margin: '0 auto',\n    display: 'block',\n    lineHeight: '24px'\n  },\n  container: {\n    marginBottom: '20px',\n    marginTop: '20px'\n  }\n};\n\nconst TextItem = props => {\n  const {\n    item,\n    dashboardMode,\n    text,\n    acUpdateDashboardItem\n  } = props;\n\n  const onChangeText = event => {\n    const updatedItem = { ...item,\n      text: event.target.value\n    };\n    acUpdateDashboardItem(updatedItem);\n  };\n\n  const viewItem = () => {\n    const textDivStyle = Object.assign({}, style.textField, style.textDiv);\n    return <div className=\"dashboard-item-content\" style={style.container}>\n                <RichTextParser style={textDivStyle}>{text}</RichTextParser>\n            </div>;\n  };\n\n  const editItem = () => {\n    return <>\n                <ItemHeader title={i18n.t('Text item')} itemId={item.id} dashboardMode={dashboardMode} />\n                <Line />\n                <div className=\"dashboard-item-content\">\n                    <RichTextEditor onEdit={onChangeText}>\n                        <Input value={text} multiline fullWidth style={style.textField} placeholder={i18n.t('Add text here')} onChange={onChangeText} />\n                    </RichTextEditor>\n                </div>\n            </>;\n  };\n\n  const printItem = () => {\n    const textDivStyle = Object.assign({}, style.textField, style.textDiv);\n    return <>\n                {props.item.shortened ? <PrintItemInfo /> : null}\n                <div className=\"dashboard-item-content\" style={style.container}>\n                    <RichTextParser style={textDivStyle}>{text}</RichTextParser>\n                </div>\n            </>;\n  };\n\n  let textItem;\n\n  if (isEditMode(dashboardMode)) {\n    textItem = editItem;\n  } else if (dashboardMode === PRINT_LAYOUT) {\n    textItem = printItem;\n  } else {\n    textItem = viewItem;\n  }\n\n  return <>{textItem()}</>;\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const isPrintPreview = sGetIsPrinting(state);\n  let items;\n\n  if (isPrintPreview) {\n    items = sGetPrintDashboardItems(state);\n  } else if (isEditMode(ownProps.dashboardMode)) {\n    items = sGetEditDashboardItems(state);\n  } else {\n    items = sGetDashboardItems(state);\n  }\n\n  const item = items.find(item => item.id === ownProps.item.id);\n  return {\n    text: item ? item.text : ''\n  };\n};\n\nTextItem.propTypes = {\n  acUpdateDashboardItem: PropTypes.func,\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  text: PropTypes.string\n};\nexport default connect(mapStateToProps, {\n  acUpdateDashboardItem\n})(TextItem);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport Line from '../../../widgets/Line';\nimport { FILTER_ORG_UNIT } from '../../../actions/itemFilters';\nimport { sGetItemFiltersRoot, DEFAULT_STATE_ITEM_FILTERS } from '../../../reducers/itemFilters';\nimport { isEditMode } from '../../Dashboard/dashboardModes';\n\nconst getIframeSrc = (appDetails, item, itemFilters) => {\n  let iframeSrc = `${appDetails.launchUrl}?dashboardItemId=${item.id}`;\n\n  if (itemFilters && itemFilters[FILTER_ORG_UNIT] && itemFilters[FILTER_ORG_UNIT].length) {\n    const ouIds = itemFilters[FILTER_ORG_UNIT].map(ouFilter => ouFilter.path.split('/').slice(-1)[0]);\n    iframeSrc += `&userOrgUnit=${ouIds.join(',')}`;\n  }\n\n  return iframeSrc;\n};\n\nconst AppItem = ({\n  dashboardMode,\n  item,\n  itemFilters\n}, context) => {\n  let appDetails;\n  const appKey = item.appKey;\n\n  if (appKey) {\n    appDetails = context.d2.system.installedApps.find(app => app.key === appKey);\n  }\n\n  return appDetails && appDetails.name && appDetails.launchUrl ? <>\n            <ItemHeader title={appDetails.name} itemId={item.id} dashboardMode={dashboardMode} isShortened={item.shortened} />\n            <Line />\n            <iframe title={appDetails.name} src={getIframeSrc(appDetails, item, itemFilters)} className=\"dashboard-item-content\" style={{\n      border: 'none'\n    }} />\n        </> : <>\n            <ItemHeader title={`${appKey} app not found`} />\n            <Line />\n            <div className=\"dashboard-item-content\" style={{\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      height: '90%'\n    }}>\n                <NotInterestedIcon color=\"disabled\" disabled style={{\n        width: 100,\n        height: 100,\n        align: 'center'\n      }} />\n            </div>\n        </>;\n};\n\nAppItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object\n};\nAppItem.contextTypes = {\n  d2: PropTypes.object\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const itemFilters = !isEditMode(ownProps.dashboardMode) ? sGetItemFiltersRoot(state) : DEFAULT_STATE_ITEM_FILTERS;\n  return {\n    itemFilters\n  };\n};\n\nexport default connect(mapStateToProps)(AppItem);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { colors } from '@dhis2/ui';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nconst style = {\n  margin: '21px 28px',\n  fontSize: '14px',\n  lineHeight: '18px',\n  color: colors.grey600\n};\n\nconst SpacerItem = props => {\n  return <>\n            <ItemHeader title={i18n.t('Spacer')} itemId={props.item.id} dashboardMode={props.dashboardMode} isShortened={props.item.shortened} />\n            <p style={style}>\n                {i18n.t('Use a spacer to create empty vertical space between other dashboard items.')}\n            </p>\n        </>;\n};\n\nSpacerItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object\n};\nexport default SpacerItem;","import React from 'react';\n\nconst PageBreakItem = () => <div />;\n\nexport default PageBreakItem;","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { sGetSelectedId, sGetSelectedShowDescription } from '../../../reducers/selected';\nimport { sGetDashboardById, EMPTY_DASHBOARD } from '../../../reducers/dashboards';\nimport { sGetNamedItemFilters } from '../../../reducers/itemFilters';\nimport { sGetIsEditing } from '../../../reducers/editDashboard';\nimport { sGetPrintDashboardName, sGetPrintDashboardDescription } from '../../../reducers/printDashboard';\nimport classes from './styles/Item.module.css';\n\nconst PrintTitlePageItem = ({\n  name,\n  description,\n  itemFilters,\n  showDescription\n}) => {\n  const getItemFilterList = () => {\n    const listItems = itemFilters.map(({\n      name,\n      values\n    }) => <li className={classes.filterListItem} key={name}>\n                {name}: {values.map(val => val.name).join(', ')}\n            </li>);\n    return <ul className={classes.filterList}>{listItems}</ul>;\n  };\n\n  return <div className={classes.titlePage}>\n            <p className={classes.name}>{name}</p>\n            {showDescription && description && <p className={classes.description}>{description}</p>}\n            {itemFilters.length > 0 && <>\n                    <p className={classes.filterTitle}>\n                        {i18n.t('Filters applied')}\n                    </p>\n                    {getItemFilterList()}\n                </>}\n        </div>;\n};\n\nPrintTitlePageItem.propTypes = {\n  description: PropTypes.string,\n  itemFilters: PropTypes.array,\n  name: PropTypes.string,\n  showDescription: PropTypes.bool\n};\nPrintTitlePageItem.defaultProps = {\n  description: '',\n  name: '',\n  showDescription: false\n};\n\nconst mapStateToProps = state => {\n  const id = sGetSelectedId(state);\n  const isEditMode = sGetIsEditing(state);\n  const viewDashboard = sGetDashboardById(state, id) || EMPTY_DASHBOARD;\n  const name = isEditMode ? sGetPrintDashboardName(state) || i18n.t('Untitled dashboard') : viewDashboard.displayName;\n  const description = isEditMode ? sGetPrintDashboardDescription(state) : viewDashboard.displayDescription;\n  return {\n    name,\n    description,\n    itemFilters: sGetNamedItemFilters(state),\n    showDescription: sGetSelectedShowDescription(state)\n  };\n};\n\nexport default connect(mapStateToProps)(PrintTitlePageItem);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport VisualizationItem from './VisualizationItem/Item';\nimport MessagesItem from './MessagesItem/Item';\nimport NotSupportedItem from './NotSupportedItem/Item';\nimport ListItem from './ListItem/Item';\nimport TextItem from './TextItem/Item';\nimport AppItem from './AppItem/Item';\nimport SpacerItem from './SpacerItem/Item';\nimport PageBreakItem from './PageBreakItem/Item';\nimport PrintTitlePageItem from './PrintTitlePageItem/Item';\nimport { APP, VISUALIZATION, REPORT_TABLE, CHART, MAP, EVENT_CHART, EVENT_REPORT, MESSAGES, REPORTS, RESOURCES, USERS, TEXT, SPACER, PAGEBREAK, PRINT_TITLE_PAGE } from '../../modules/itemTypes';\n\nconst getGridItem = type => {\n  switch (type) {\n    case VISUALIZATION:\n    case REPORT_TABLE:\n    case CHART:\n    case MAP:\n    case EVENT_CHART:\n    case EVENT_REPORT:\n      return VisualizationItem;\n\n    case MESSAGES:\n      return MessagesItem;\n\n    case REPORTS:\n    case RESOURCES:\n    case USERS:\n      return ListItem;\n\n    case TEXT:\n      return TextItem;\n\n    case SPACER:\n      return SpacerItem;\n\n    case APP:\n      return AppItem;\n\n    case PAGEBREAK:\n      return PageBreakItem;\n\n    case PRINT_TITLE_PAGE:\n      return PrintTitlePageItem;\n\n    default:\n      return NotSupportedItem;\n  }\n};\n\nexport const Item = props => {\n  const GridItem = getGridItem(props.item.type);\n  return <GridItem item={props.item} dashboardMode={props.dashboardMode} onToggleItemExpanded={props.onToggleItemExpanded} />;\n};\nItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  onToggleItemExpanded: PropTypes.func\n};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash/debounce';\nimport pick from 'lodash/pick';\nconst defaultDebounceMs = 100;\nconst defaultBufferFactor = 0.25;\n\nclass ProgressiveLoadingContainer extends Component {\n  static propTypes = {\n    children: PropTypes.node.isRequired,\n    bufferFactor: PropTypes.number,\n    className: PropTypes.string,\n    debounceMs: PropTypes.number,\n    style: PropTypes.object\n  };\n  static defaultProps = {\n    debounceMs: defaultDebounceMs,\n    bufferFactor: defaultBufferFactor\n  };\n  state = {\n    shouldLoad: false\n  };\n  containerRef = null;\n  shouldLoadHandler = null;\n  handlerOptions = {\n    passive: true\n  };\n\n  checkShouldLoad() {\n    if (!this.containerRef) {\n      return;\n    }\n\n    const bufferPx = this.props.bufferFactor * window.innerHeight;\n    const rect = this.containerRef.getBoundingClientRect();\n\n    if (rect.bottom > -bufferPx && rect.top < window.innerHeight + bufferPx) {\n      this.setState({\n        shouldLoad: true\n      });\n      this.removeHandler();\n    }\n  }\n\n  registerHandler() {\n    this.shouldLoadHandler = debounce(() => this.checkShouldLoad(), this.props.debounceMs);\n    document.getElementsByClassName('dashboard-wrapper')[0]?.addEventListener('scroll', this.shouldLoadHandler, this.handlerOptions);\n  }\n\n  removeHandler() {\n    document.getElementsByClassName('dashboard-wrapper')[0]?.removeEventListener('scroll', this.shouldLoadHandler, this.handlerOptions);\n  }\n\n  componentDidMount() {\n    this.registerHandler();\n    this.checkShouldLoad();\n  }\n\n  componentWillUnmount() {\n    this.removeHandler();\n  }\n\n  render() {\n    const {\n      children,\n      className,\n      style,\n      ...props\n    } = this.props;\n    const {\n      shouldLoad\n    } = this.state;\n    const eventProps = pick(props, ['onMouseDown', 'onTouchStart', 'onMouseUp', 'onTouchEnd']);\n    return <div ref={ref => this.containerRef = ref} style={style} className={className} {...eventProps}>\n                {shouldLoad && children}\n            </div>;\n  }\n\n}\n\nexport default ProgressiveLoadingContainer;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ReactGridLayout from 'react-grid-layout';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport { acUpdateDashboardLayout } from '../../actions/editDashboard';\nimport { Item } from '../Item/Item';\nimport { resize as pluginResize } from '../Item/VisualizationItem/plugin';\nimport { isVisualizationType } from '../../modules/itemTypes';\nimport { GRID_ROW_HEIGHT, GRID_COMPACT_TYPE, MARGIN, getGridColumns, hasShape, onItemResize } from './gridUtil';\nimport { orArray } from '../../modules/util';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\nimport './ItemGrid.css';\nimport { sGetSelectedId, sGetSelectedIsLoading } from '../../reducers/selected';\nimport { sGetEditDashboardRoot, sGetEditDashboardItems } from '../../reducers/editDashboard';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport ProgressiveLoadingContainer from '../Item/ProgressiveLoadingContainer';\nimport { VIEW, EDIT } from '../Dashboard/dashboardModes'; // Component\n\nconst EXPANDED_HEIGHT = 17; // this is set in the .dashboard-item-content css\n\nexport const ITEM_CONTENT_PADDING_BOTTOM = 4;\nexport class ItemGrid extends Component {\n  state = {\n    expandedItems: {}\n  };\n  onToggleItemExpanded = clickedId => {\n    const isExpanded = typeof this.state.expandedItems[clickedId] === 'boolean' ? this.state.expandedItems[clickedId] : false;\n    const expandedItems = { ...this.state.expandedItems\n    };\n    expandedItems[clickedId] = !isExpanded;\n    this.setState({\n      expandedItems\n    });\n  };\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.edit) {\n      this.setState({\n        expandedItems: {}\n      });\n    }\n  }\n\n  onLayoutChange = newLayout => {\n    if (this.props.edit) {\n      this.props.acUpdateDashboardLayout(newLayout);\n    }\n  };\n  onResizeStop = (layout, oldItem, newItem) => {\n    onItemResize(newItem.i);\n    const dashboardItem = this.props.dashboardItems.find(item => item.id === newItem.i); // call resize on the item component if it's a plugin type\n\n    if (dashboardItem && isVisualizationType(dashboardItem)) {\n      pluginResize(dashboardItem);\n    }\n  };\n  adjustHeightForExpanded = dashboardItem => {\n    const expandedItem = this.state.expandedItems[dashboardItem.id];\n\n    if (expandedItem && expandedItem === true) {\n      return Object.assign({}, dashboardItem, {\n        h: dashboardItem.h + EXPANDED_HEIGHT\n      });\n    }\n\n    return dashboardItem;\n  };\n  getItemComponent = item => {\n    const itemClassNames = [item.type, this.props.edit ? 'edit' : 'view'].join(' ');\n    return <ProgressiveLoadingContainer key={item.i} className={itemClassNames}>\n                <Item item={item} dashboardMode={this.props.edit ? EDIT : VIEW} onToggleItemExpanded={this.onToggleItemExpanded} />\n            </ProgressiveLoadingContainer>;\n  };\n  getItemComponents = items => items.map(item => this.getItemComponent(item));\n\n  render() {\n    const {\n      edit,\n      isLoading,\n      dashboardItems\n    } = this.props;\n\n    if (!isLoading && !dashboardItems.length) {\n      return <NoContentMessage text={i18n.t('There are no items on this dashboard')} />;\n    }\n\n    const items = edit ? dashboardItems : dashboardItems.map(this.adjustHeightForExpanded);\n    return <div className=\"grid-wrapper\">\n                {isLoading ? <Layer translucent>\n                        <CenteredContent>\n                            <CircularLoader />\n                        </CenteredContent>\n                    </Layer> : null}\n                <ReactGridLayout onLayoutChange={this.onLayoutChange} onResizeStop={this.onResizeStop} className=\"layout\" layout={items} margin={MARGIN} cols={getGridColumns()} rowHeight={GRID_ROW_HEIGHT} width={window.innerWidth} compactType={GRID_COMPACT_TYPE} isDraggable={edit} isResizable={edit} draggableCancel=\"input,textarea\">\n                    {this.getItemComponents(items)}\n                </ReactGridLayout>\n            </div>;\n  }\n\n}\nItemGrid.propTypes = {\n  acUpdateDashboardLayout: PropTypes.func,\n  dashboardItems: PropTypes.array,\n  edit: PropTypes.bool,\n  isLoading: PropTypes.bool\n};\nItemGrid.defaultProps = {\n  dashboardItems: []\n}; // Container\n\nconst mapStateToProps = (state, ownProps) => {\n  const selectedDashboard = ownProps.edit ? sGetEditDashboardRoot(state) : sGetDashboardById(state, sGetSelectedId(state));\n  const dashboardItems = ownProps.edit ? sGetEditDashboardItems(state) : sGetDashboardItems(state);\n  return {\n    isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n    dashboardItems\n  };\n};\n\nconst mapDispatchToProps = {\n  acUpdateDashboardLayout\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n  const validItems = orArray(stateProps.dashboardItems).filter(hasShape);\n  return { ...dispatchProps,\n    edit: ownProps.edit,\n    isLoading: stateProps.isLoading,\n    dashboardItems: validItems,\n    onItemResize\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps, mergeProps)(ItemGrid);","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { colors } from '@dhis2/ui';\nconst styles = {\n  badgeContainer: {\n    margin: '2px',\n    padding: '0 16px',\n    borderRadius: '4px',\n    color: colors.white,\n    backgroundColor: '#212934',\n    height: 36,\n    display: 'flex',\n    alignItems: 'center'\n  },\n  badge: {\n    fontSize: '13px',\n    cursor: 'pointer',\n    whiteSpace: 'nowrap'\n  },\n  badgeRemove: {\n    fontSize: '12px',\n    textDecoration: 'underline',\n    marginLeft: '24px',\n    cursor: 'pointer'\n  }\n};\n\nclass FilterBadge extends Component {\n  onClick = id => () => this.props.onClick(id);\n  onRemove = id => () => this.props.onRemove(id);\n\n  render() {\n    const {\n      data\n    } = this.props;\n    return <div style={styles.badgeContainer}>\n                <span style={styles.badge} onClick={this.onClick(data.id)}>\n                    {`${data.name}: ${data.values.length > 1 ? i18n.t('{{count}} selected', {\n          count: data.values.length\n        }) : data.values[0].name}`}\n                </span>\n                <span style={styles.badgeRemove} onClick={this.onRemove(data.id)}>\n                    {i18n.t('Remove')}\n                </span>\n            </div>;\n  }\n\n}\n\nFilterBadge.propTypes = {\n  data: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired,\n  onRemove: PropTypes.func.isRequired\n};\nFilterBadge.defaultProps = {\n  onClick: Function.prototype,\n  onRemove: Function.prototype\n};\nexport default FilterBadge;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport FilterBadge from './FilterBadge';\nimport { sGetNamedItemFilters } from '../../reducers/itemFilters';\nimport { acRemoveItemFilter } from '../../actions/itemFilters';\nimport { acSetActiveModalDimension } from '../../actions/activeModalDimension';\nimport classes from './styles/FilterBar.module.css';\nexport class FilterBar extends Component {\n  onBadgeRemove = id => {\n    this.props.removeItemFilter(id);\n  };\n  onBadgeClick = id => {\n    this.props.setActiveModalDimension({\n      id,\n      name: this.props.filters.find(item => item.id === id).name\n    });\n  };\n\n  render() {\n    const {\n      filters\n    } = this.props;\n    return filters.length ? // the 3 is calculated so that the FilterBar has the same vertical position as the TitleBar in relation to the ControlBar\n    <div className={classes.bar} style={{\n      top: 3\n    }}>\n                {filters.map(filter => <FilterBadge key={filter.id} data={filter} onClick={this.onBadgeClick} onRemove={this.onBadgeRemove} />)}\n            </div> : null;\n  }\n\n}\nFilterBar.propTypes = {\n  filters: PropTypes.array.isRequired,\n  removeItemFilter: PropTypes.func.isRequired,\n  setActiveModalDimension: PropTypes.func\n};\nFilterBar.defaultProps = {\n  filters: [],\n  removeItemFIlter: Function.prototype\n};\n\nconst mapStateToProps = state => ({\n  filters: sGetNamedItemFilters(state)\n});\n\nexport default connect(mapStateToProps, {\n  setActiveModalDimension: acSetActiveModalDimension,\n  removeItemFilter: acRemoveItemFilter\n})(FilterBar);","export const SET_WINDOW_HEIGHT = 'SET_WINDOW_HEIGHT';\nexport const DEFAULT_STATE_WINDOW_HEIGHT = window.innerHeight;\nexport default ((state = DEFAULT_STATE_WINDOW_HEIGHT, action) => {\n  switch (action.type) {\n    case SET_WINDOW_HEIGHT:\n      {\n        return action.value;\n      }\n\n    default:\n      return state;\n  }\n});\nexport const sGetWindowHeight = state => state.windowHeight;","import { generateUid } from 'd2/uid';\nimport { SET_PRINT_DASHBOARD, CLEAR_PRINT_DASHBOARD, SET_PRINT_DASHBOARD_LAYOUT, ADD_PRINT_DASHBOARD_ITEM, REMOVE_PRINT_DASHBOARD_ITEM, UPDATE_PRINT_DASHBOARD_ITEM } from '../reducers/printDashboard';\nimport { NEW_ITEM_SHAPE, getGridItemProperties, getPageBreakItemShape, getPrintTitlePageItemShape } from '../components/ItemGrid/gridUtil';\nimport { itemTypeMap, PAGEBREAK } from '../modules/itemTypes'; // actions\n\nexport const acSetPrintDashboard = (dashboard, items) => {\n  const val = { ...dashboard,\n    dashboardItems: items\n  };\n  return {\n    type: SET_PRINT_DASHBOARD,\n    value: val\n  };\n};\nexport const acClearPrintDashboard = () => ({\n  type: CLEAR_PRINT_DASHBOARD\n});\nexport const acUpdatePrintDashboardLayout = value => ({\n  type: SET_PRINT_DASHBOARD_LAYOUT,\n  value\n});\nexport const acAddPrintDashboardItem = item => {\n  const type = item.type;\n  delete item.type;\n  const itemPropName = itemTypeMap[type].propName;\n  const id = generateUid();\n  const gridItemProperties = getGridItemProperties(id);\n  let shape;\n\n  if (type === PAGEBREAK) {\n    const yPos = item.yPos || 0;\n    shape = getPageBreakItemShape(yPos, item.isStatic);\n  } else {\n    shape = getPrintTitlePageItemShape(item.isOneItemPerPage);\n  }\n\n  return {\n    type: ADD_PRINT_DASHBOARD_ITEM,\n    value: {\n      id,\n      type,\n      position: item.position || null,\n      [itemPropName]: item.content,\n      ...NEW_ITEM_SHAPE,\n      ...gridItemProperties,\n      ...shape\n    }\n  };\n};\nexport const acRemovePrintDashboardItem = value => ({\n  type: REMOVE_PRINT_DASHBOARD_ITEM,\n  value\n});\nexport const acUpdatePrintDashboardItem = item => ({\n  type: UPDATE_PRINT_DASHBOARD_ITEM,\n  value: item\n});","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport TitleBar from '../TitleBar/TitleBar';\nimport ItemGrid from '../ItemGrid/ItemGrid';\nimport FilterBar from '../FilterBar/FilterBar';\nimport DashboardsBar from '../ControlBar/DashboardsBar';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport { sGetIsEditing } from '../../reducers/editDashboard';\nimport { sGetIsPrinting } from '../../reducers/printDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { sGetWindowHeight } from '../../reducers/windowHeight';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { acClearEditDashboard } from '../../actions/editDashboard';\nimport { acClearPrintDashboard } from '../../actions/printDashboard';\nimport { getControlBarHeight, HEADERBAR_HEIGHT } from '../ControlBar/controlBarDimensions';\nexport const ViewDashboard = props => {\n  useEffect(() => {\n    if (props.dashboardIsEditing) {\n      props.clearEditDashboard();\n    } else if (props.dashboardIsPrinting) {\n      props.clearPrintDashboard();\n    }\n  }, [props.dashboardIsEditing, props.dashboardIsPrinting]);\n  useEffect(() => {\n    document.querySelector('.dashboard-wrapper')?.scroll(0, 0);\n  }, [props.selectedId]);\n  const height = props.windowHeight - HEADERBAR_HEIGHT - getControlBarHeight(props.controlBarRows);\n  return <>\n            <DashboardsBar />\n            <DashboardVerticalOffset />\n            <div className=\"dashboard-wrapper\" style={{\n      height\n    }}>\n                <TitleBar edit={false} />\n                <FilterBar />\n                <ItemGrid edit={false} />\n            </div>\n        </>;\n};\nViewDashboard.propTypes = {\n  clearEditDashboard: PropTypes.func,\n  clearPrintDashboard: PropTypes.func,\n  controlBarRows: PropTypes.number,\n  dashboardIsEditing: PropTypes.bool,\n  dashboardIsPrinting: PropTypes.bool,\n  selectedId: PropTypes.string,\n  windowHeight: PropTypes.number\n};\n\nconst mapStateToProps = state => {\n  return {\n    dashboardIsEditing: sGetIsEditing(state),\n    dashboardIsPrinting: sGetIsPrinting(state),\n    controlBarRows: sGetControlBarUserRows(state),\n    selectedId: sGetSelectedId(state),\n    windowHeight: sGetWindowHeight(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  clearEditDashboard: acClearEditDashboard,\n  clearPrintDashboard: acClearPrintDashboard\n})(ViewDashboard);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Button, Modal, ModalContent, ModalActions, ButtonStrip, ModalTitle } from '@dhis2/ui';\nimport classes from './styles/ConfirmDeleteDialog.module.css';\nexport const ConfirmDeleteDialog = ({\n  dashboardName,\n  onDeleteConfirmed,\n  onContinueEditing,\n  open\n}) => {\n  const actions = [<Button key=\"cancel\" secondary onClick={onContinueEditing}>\n            {i18n.t('Cancel')}\n        </Button>, <Button key=\"delete\" destructive onClick={onDeleteConfirmed}>\n            {i18n.t('Delete')}\n        </Button>];\n  return open && <Modal onClose={onContinueEditing} small position=\"middle\">\n                <ModalTitle>{i18n.t('Delete dashboard')}</ModalTitle>\n                <ModalContent>\n                    <span className={classes.content}>\n                        {i18n.t('Deleting dashboard \"{{ dashboardName }}\" will remove it for all users. This action cannot be undone. Are you sure you want to permanently delete this dashboard?', {\n          dashboardName\n        })}\n                    </span>\n                </ModalContent>\n                <ModalActions>\n                    <ButtonStrip>{actions}</ButtonStrip>\n                </ModalActions>\n            </Modal>;\n};\nConfirmDeleteDialog.propTypes = {\n  dashboardName: PropTypes.string,\n  open: PropTypes.bool,\n  onContinueEditing: PropTypes.func,\n  onDeleteConfirmed: PropTypes.func\n};\nexport default ConfirmDeleteDialog;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport ControlBar from './ControlBar';\nimport TranslationDialog from '@dhis2/d2-ui-translation-dialog';\nimport { Button, ButtonStrip } from '@dhis2/ui';\nimport ConfirmDeleteDialog from './ConfirmDeleteDialog';\nimport { tSaveDashboard, acClearEditDashboard } from '../../actions/editDashboard';\nimport { acClearPrintDashboard } from '../../actions/printDashboard';\nimport { tDeleteDashboard, acSetDashboardDisplayName } from '../../actions/dashboards';\nimport { sGetEditDashboardRoot, sGetIsNewDashboard, sGetIsPrintPreviewView } from '../../reducers/editDashboard';\nimport { acSetPrintPreviewView, acClearPrintPreviewView } from '../../actions/editDashboard';\nimport { CONTROL_BAR_ROW_HEIGHT, MIN_ROW_COUNT, getControlBarHeight } from './controlBarDimensions';\nimport { apiFetchDashboard } from '../../api/dashboards';\nimport classes from './styles/DashboardsBar.module.css';\nconst buttonBarStyle = {\n  height: CONTROL_BAR_ROW_HEIGHT,\n  paddingTop: '15px',\n  marginLeft: '15px',\n  marginRight: '15px'\n};\nexport class EditBar extends Component {\n  state = {\n    translationDialogIsOpen: false,\n    dashboardModel: undefined,\n    confirmDeleteDialogOpen: false,\n    redirectUrl: undefined\n  };\n  onConfirmDelete = () => {\n    this.setState({\n      confirmDeleteDialogOpen: true\n    });\n  };\n  onSave = () => {\n    this.props.onSave().then(newId => {\n      this.setState({\n        redirectUrl: `/${newId}`\n      });\n    });\n  };\n  onPrintPreview = () => {\n    if (this.props.isPrintPreviewView) {\n      this.props.clearPrintPreview();\n      this.props.clearPrintDashboard();\n    } else {\n      this.props.showPrintPreview();\n    }\n  };\n  onDiscard = () => {\n    this.props.onDiscardChanges();\n    const redirectUrl = this.props.dashboardId ? `/${this.props.dashboardId}` : '/';\n    this.setState({\n      redirectUrl\n    });\n  };\n  onContinueEditing = () => {\n    this.setState({\n      confirmDeleteDialogOpen: false\n    });\n  };\n  onDeleteConfirmed = () => {\n    this.setState({\n      confirmDeleteDialogOpen: false\n    });\n    this.props.onDelete(this.props.dashboardId).then(() => {\n      this.setState({\n        redirectUrl: '/'\n      });\n    });\n  };\n  onTranslationsSaved = async translations => {\n    if (translations && translations.length) {\n      const dbLocale = await this.context.d2.currentUser.userSettings.get('keyDbLocale');\n      const translation = translations.find(t => t.locale === dbLocale && t.property === 'NAME');\n\n      if (translation && translation.value) {\n        this.props.onTranslate(this.props.dashboardId, translation.value);\n      }\n    }\n  };\n  fetchDashboardModel = () => {\n    if (this.props.dashboardId && !this.state.dashboardModel) {\n      apiFetchDashboard(this.props.dashboardId).then(dashboardModel => this.setState({\n        dashboardModel\n      }));\n    }\n  };\n\n  componentDidMount() {\n    this.fetchDashboardModel();\n  }\n\n  componentDidUpdate() {\n    this.fetchDashboardModel();\n  }\n\n  toggleTranslationDialog = () => {\n    this.setState({\n      translationDialogIsOpen: !this.state.translationDialogIsOpen\n    });\n  };\n  confirmDeleteDialog = () => this.props.deleteAccess && this.props.dashboardId ? <ConfirmDeleteDialog dashboardName={this.props.dashboardName} onDeleteConfirmed={this.onDeleteConfirmed} onContinueEditing={this.onContinueEditing} open={this.state.confirmDeleteDialogOpen} /> : null;\n  translationDialog = () => this.state.dashboardModel && this.state.dashboardModel.id ? <TranslationDialog className=\"translation-dialog\" d2={this.context.d2} open={this.state.translationDialogIsOpen} onRequestClose={this.toggleTranslationDialog} objectToTranslate={this.state.dashboardModel} fieldsToTranslate={['name', 'description']} // TODO handle messages in snackbar\n  onTranslationSaved={this.onTranslationsSaved} onTranslationError={err => console.log('translation update error', err)} /> : null;\n  renderActionButtons = () => {\n    const printPreviewText = this.props.isPrintPreviewView ? i18n.t('Exit Print preview') : i18n.t('Print preview');\n    return <div className={classes.leftControls}>\n                <ButtonStrip>\n                    <Button primary onClick={this.onSave}>\n                        {i18n.t('Save changes')}\n                    </Button>\n                    <Button onClick={this.onPrintPreview}>\n                        {printPreviewText}\n                    </Button>\n\n                    {this.props.dashboardId ? <Button onClick={this.toggleTranslationDialog}>\n                            {i18n.t('Translate')}\n                        </Button> : null}\n                    {this.props.dashboardId && this.props.deleteAccess ? <Button onClick={this.onConfirmDelete}>\n                            {i18n.t('Delete')}\n                        </Button> : null}\n                </ButtonStrip>\n            </div>;\n  };\n\n  render() {\n    if (this.state.redirectUrl) {\n      return <Redirect to={this.state.redirectUrl} />;\n    }\n\n    const {\n      updateAccess\n    } = this.props;\n    const controlBarHeight = getControlBarHeight(MIN_ROW_COUNT);\n    const discardBtnText = updateAccess ? i18n.t('Exit without saving') : i18n.t('Go to dashboards');\n    return <>\n                <ControlBar height={controlBarHeight} editMode={true}>\n                    <div style={buttonBarStyle}>\n                        {updateAccess ? this.renderActionButtons() : null}\n\n                        <div className={classes.rightControls}>\n                            <Button secondary onClick={this.onDiscard}>\n                                {discardBtnText}\n                            </Button>\n                        </div>\n                    </div>\n                </ControlBar>\n                <div className={classes.topMargin} />\n                {this.translationDialog()}\n                {this.confirmDeleteDialog()}\n            </>;\n  }\n\n}\nEditBar.propTypes = {\n  clearPrintDashboard: PropTypes.func,\n  clearPrintPreview: PropTypes.func,\n  dashboardId: PropTypes.string,\n  dashboardName: PropTypes.string,\n  deleteAccess: PropTypes.bool,\n  isPrintPreviewView: PropTypes.bool,\n  showPrintPreview: PropTypes.func,\n  updateAccess: PropTypes.bool,\n  onDelete: PropTypes.func,\n  onDiscardChanges: PropTypes.func,\n  onSave: PropTypes.func,\n  onTranslate: PropTypes.func\n};\nEditBar.contextTypes = {\n  d2: PropTypes.object\n};\n\nconst mapStateToProps = state => {\n  const dashboard = sGetEditDashboardRoot(state);\n  let deleteAccess;\n  let updateAccess;\n\n  if (sGetIsNewDashboard(state)) {\n    deleteAccess = true;\n    updateAccess = true;\n  } else {\n    updateAccess = dashboard.access ? dashboard.access.update : false;\n    deleteAccess = dashboard.access ? dashboard.access.delete : false;\n  }\n\n  return {\n    dashboardId: dashboard.id,\n    dashboardName: dashboard.name,\n    deleteAccess,\n    isPrintPreviewView: sGetIsPrintPreviewView(state),\n    updateAccess\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  clearPrintDashboard: () => dispatch(acClearPrintDashboard()),\n  clearPrintPreview: () => dispatch(acClearPrintPreviewView()),\n  onSave: () => dispatch(tSaveDashboard()).then(id => id),\n  onDelete: id => dispatch(tDeleteDashboard(id)),\n  onDiscardChanges: () => dispatch(acClearEditDashboard()),\n  onTranslate: (id, value) => dispatch(acSetDashboardDisplayName(id, value)),\n  showPrintPreview: () => dispatch(acSetPrintPreviewView())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditBar);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { a4LandscapeWidthPx } from '../ItemGrid/gridUtil';\nimport classes from './styles/PrintInfo.module.css';\n\nconst PrintInfo = ({\n  isLayout\n}) => {\n  const maxWidth = a4LandscapeWidthPx < window.innerWidth ? a4LandscapeWidthPx : window.innerWidth;\n  const infoHeader = isLayout ? i18n.t('dashboard layout') : i18n.t('one item per page');\n  return <div className={classes.infoWrapper}>\n            <p className={classes.infoHeader}>\n                {`${i18n.t('Print Preview')}: ${infoHeader}`}\n            </p>\n            <div style={{\n      maxWidth\n    }}>\n                <p className={classes.info}>\n                    {`${i18n.t('For best print results')}:`}\n                </p>\n                <div className={classes.info}>\n                    <ul className={classes.infoList}>\n                        <li>{i18n.t('Use Chrome or Edge web browser')}</li>\n                        <li>\n                            {i18n.t('Wait for all dashboard items to load before printing')}\n                        </li>\n                        <li>\n                            {i18n.t('Use A4 landscape paper size and default margin settings in the browser print dialog')}\n                        </li>\n                    </ul>\n                </div>\n            </div>\n            <hr className={classes.divider} />\n        </div>;\n};\n\nPrintInfo.propTypes = {\n  isLayout: PropTypes.bool\n};\nexport default PrintInfo;","import React from 'react';\nimport { colors } from '@dhis2/ui';\n\nconst LessHorizontalIcon = () => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill={colors.grey600} viewBox=\"0 0 24 24\">\n        <path d=\"m13.2928932 6.29289322c.3905243-.39052429 1.0236893-.39052429 1.4142136 0 .3604839.36048396.3882135.92771502.0831886 1.32000622l-.0831886.09420734-4.2921068 4.29289322 4.2921068 4.2928932c.3604839.360484.3882135.927715.0831886 1.3200062l-.0831886.0942074c-.360484.3604839-.927715.3882135-1.3200062.0831886l-.0942074-.0831886-4.99999998-5c-.36048396-.360484-.3882135-.927715-.08318861-1.3200062l.08318861-.0942074z\" />\n    </svg>;\n\nexport default LessHorizontalIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Button } from '@dhis2/ui';\nimport { Link } from 'react-router-dom';\nimport LessHorizontalIcon from '../../icons/LessHorizontal';\nimport { a4LandscapeWidthPx } from '../ItemGrid/gridUtil';\nimport classes from './styles/PrintActionsBar.module.css'; // 42px set in the module css file\n\nexport const PRINT_ACTIONS_BAR_HEIGHT = 42;\n\nconst PrintActionsBar = ({\n  id\n}) => {\n  const width = a4LandscapeWidthPx < window.innerWidth ? a4LandscapeWidthPx : window.innerWidth;\n  return <>\n            <div className={classes.container}>\n                <div className={classes.inner} style={{\n        width\n      }}>\n                    <Link className={classes.link} to={`/${id}`}>\n                        <Button>\n                            <LessHorizontalIcon />\n                            {i18n.t('Exit print preview')}\n                        </Button>\n                    </Link>\n                    <Button onClick={window.print}>{i18n.t('Print')}</Button>\n                </div>\n            </div>\n            <div className={classes.topMargin} />\n        </>;\n};\n\nPrintActionsBar.propTypes = {\n  id: PropTypes.string\n};\nexport default PrintActionsBar;","import sortBy from 'lodash/sortBy';\nimport { orArray } from './util';\nimport { itemTypeMap } from './itemTypes';\nexport const getTransformYPx = elStyle => {\n  if (!elStyle || !elStyle.transform) {\n    return null;\n  } // find valid transforms - those with y pixels\n  // the code is expecting the transform prop to\n  // look like:  translate(10px, 300px)\n\n\n  const transformY = elStyle.transform.split(' ')[1]?.match(/(\\d+)px/);\n\n  if (transformY) {\n    return parseInt(transformY[1]);\n  } else {\n    return null;\n  }\n};\nexport const getDomGridItemsSortedByYPos = elements => {\n  const types = Object.keys(itemTypeMap);\n  const elementsWithBoundingRect = orArray(elements).map(el => {\n    const type = Array.from(el.classList).find(className => types.indexOf(className) > -1);\n    const rect = el.getBoundingClientRect();\n    const y = getTransformYPx(el.style) || parseInt(rect.y);\n    return {\n      type,\n      classList: el.classList,\n      bottomY: y + parseInt(rect.height),\n      el\n    };\n  });\n  return sortBy(elementsWithBoundingRect, ['bottomY']);\n};","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport sortBy from 'lodash/sortBy';\nimport ReactGridLayout from 'react-grid-layout';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport cx from 'classnames';\nimport { Item } from '../Item/Item';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport { acUpdatePrintDashboardLayout } from '../../actions/printDashboard';\nimport { sGetSelectedIsLoading } from '../../reducers/selected';\nimport { sGetPrintDashboardRoot, sGetPrintDashboardItems } from '../../reducers/printDashboard';\nimport { sGetIsEditing } from '../../reducers/editDashboard';\nimport { GRID_ROW_HEIGHT, GRID_COMPACT_TYPE, MARGIN, getGridColumns, hasShape, a4LandscapeWidthPx } from './gridUtil';\nimport { getDomGridItemsSortedByYPos, getTransformYPx } from '../../modules/printUtils';\nimport { PRINT_LAYOUT } from '../Dashboard/dashboardModes';\nimport { PAGEBREAK } from '../../modules/itemTypes';\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\nimport './ItemGrid.css'; // this is set in the .dashboard-item-content css\n\nexport const ITEM_CONTENT_PADDING_BOTTOM = 4;\nexport class PrintLayoutItemGrid extends Component {\n  onLayoutChange = newLayout => {\n    this.props.updateDashboardLayout(newLayout);\n  };\n  isFirstPageBreak = item => {\n    if (item.type !== PAGEBREAK) {\n      return false;\n    }\n\n    const pageBreaks = this.props.dashboardItems.filter(i => i.type === PAGEBREAK);\n    const sortedPageBreaks = sortBy(pageBreaks, ['y']);\n    return item.y === sortedPageBreaks[0].y;\n  };\n  getItemComponent = item => {\n    // the first-page-break class is used in Edit print preview\n    const itemClassNames = cx('print', 'layout', `${item.type}`, {\n      'first-page-break': this.props.isEditing && this.isFirstPageBreak(item),\n      shortened: !!item.shortened\n    });\n    return <div key={item.i} className={itemClassNames}>\n                <Item item={item} dashboardMode={PRINT_LAYOUT} />\n            </div>;\n  };\n  getItemComponents = items => items.map(item => this.getItemComponent(item));\n\n  hideExtraPageBreaks() {\n    const sortedElements = getDomGridItemsSortedByYPos(Array.from(document.querySelectorAll('.react-grid-item')));\n    let pageBreakBottom = 0;\n    let lastItemBottom = 0;\n    let foundNonPageBreak = false;\n\n    for (let i = sortedElements.length - 1; i >= 0; --i) {\n      const item = sortedElements[i];\n\n      if (item.type === PAGEBREAK) {\n        if (!foundNonPageBreak) {\n          item.el.classList.add('removed');\n        } else {\n          pageBreakBottom = item.bottomY;\n          break;\n        }\n      } else {\n        foundNonPageBreak = true;\n        const thisItemBottom = item.bottomY;\n\n        if (thisItemBottom > lastItemBottom) {\n          lastItemBottom = thisItemBottom;\n        }\n      }\n    }\n\n    const pageHeight = 720;\n    const gridElement = document.querySelector('.react-grid-layout'); // the last page break is before the last item(s) so\n    // maxHeight is one page beyond the last page break\n\n    const maxHeight = pageBreakBottom + pageHeight;\n\n    if (gridElement) {\n      gridElement.style.height = `${maxHeight}px`;\n    }\n\n    if (this.props.isEditing) {\n      //scroll to below the title page - which is middle of the first pagebreak\n      const firstBreak = document.querySelector('.first-page-break');\n\n      if (firstBreak && firstBreak.style && firstBreak.style.transform) {\n        const yPos = getTransformYPx(firstBreak.style);\n        const scrollArea = document.querySelector('.scroll-area');\n        scrollArea && scrollArea.scroll(0, yPos + 50);\n      }\n    }\n  }\n\n  componentDidMount() {\n    this.hideExtraPageBreaks();\n  }\n\n  componentDidUpdate() {\n    this.hideExtraPageBreaks();\n  }\n\n  render() {\n    const {\n      isLoading,\n      dashboardItems\n    } = this.props;\n\n    if (!isLoading && !dashboardItems.length) {\n      return <NoContentMessage text={i18n.t('There are no items on this dashboard')} />;\n    }\n\n    const width = a4LandscapeWidthPx < window.innerWidth ? a4LandscapeWidthPx : window.innerWidth;\n    return <div className=\"grid-wrapper\">\n                {isLoading ? <Layer translucent>\n                        <CenteredContent>\n                            <CircularLoader />\n                        </CenteredContent>\n                    </Layer> : null}\n                <ReactGridLayout onLayoutChange={this.onLayoutChange} className=\"layout\" layout={dashboardItems} margin={MARGIN} cols={getGridColumns()} rowHeight={GRID_ROW_HEIGHT} width={width} compactType={GRID_COMPACT_TYPE} isDraggable={false} isResizable={false} draggableCancel=\"input,textarea\">\n                    {this.getItemComponents(dashboardItems)}\n                </ReactGridLayout>\n            </div>;\n  }\n\n}\nPrintLayoutItemGrid.propTypes = {\n  dashboardItems: PropTypes.array,\n  isEditing: PropTypes.bool,\n  isLoading: PropTypes.bool,\n  updateDashboardLayout: PropTypes.func\n};\nPrintLayoutItemGrid.defaultProps = {\n  dashboardItems: []\n};\n\nconst mapStateToProps = state => {\n  const selectedDashboard = sGetPrintDashboardRoot(state);\n  return {\n    isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n    dashboardItems: sGetPrintDashboardItems(state).filter(hasShape),\n    isEditing: sGetIsEditing(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  updateDashboardLayout: acUpdatePrintDashboardLayout\n})(PrintLayoutItemGrid);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { spacers } from '@dhis2/ui';\nimport cx from 'classnames';\nimport PrintInfo from './PrintInfo';\nimport PrintActionsBar from './PrintActionsBar';\nimport PrintLayoutItemGrid from '../ItemGrid/PrintLayoutItemGrid';\nimport { acSetPrintDashboard, acAddPrintDashboardItem, acUpdatePrintDashboardItem } from '../../actions/printDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { sGetWindowHeight } from '../../reducers/windowHeight';\nimport { sGetEditDashboardRoot, sGetEditDashboardItems } from '../../reducers/editDashboard';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport { PAGEBREAK, PRINT_TITLE_PAGE } from '../../modules/itemTypes';\nimport { a4LandscapeWidthPx, MAX_ITEM_GRID_HEIGHT } from '../ItemGrid/gridUtil';\nimport { getControlBarHeight, HEADERBAR_HEIGHT } from '../ControlBar/controlBarDimensions';\nimport { PRINT_ACTIONS_BAR_HEIGHT } from './PrintActionsBar';\nimport { DRAG_HANDLE_HEIGHT } from '../ControlBar/ControlBar';\nimport classes from './styles/PrintLayoutDashboard.module.css';\nimport './styles/print.css';\nimport './styles/print-layout.css';\nconst EDIT_BAR_HEIGHT = getControlBarHeight(1) + DRAG_HANDLE_HEIGHT;\n\nconst isLeapPage = n => {\n  // pages 5,9,13,17,21,25,29... are leap pages\n  let x = 0;\n  const startPage = 1;\n\n  const getMultiple = factor => startPage + 4 * factor;\n\n  let multiple = getMultiple(0);\n  let isLeapPage = false;\n\n  while (multiple < n) {\n    multiple = getMultiple(x);\n    ++x;\n\n    if (multiple === n) {\n      isLeapPage = true;\n      break;\n    }\n  }\n\n  return isLeapPage;\n};\n\nconst addPageBreaks = ({\n  items,\n  addDashboardItem\n}) => {\n  // add enough page breaks so that each item could\n  // be put on its own page. Due to the react-grid-layout\n  // unit system, we have to estimate roughly the size of each\n  // page. At regular intervals add a unit, like a leap year\n  let yPos = 0;\n  const yPosList = [];\n\n  for (let pageNum = 1; pageNum <= items.length; ++pageNum) {\n    if (pageNum === 1) {\n      yPos += 35;\n    } else if (isLeapPage(pageNum)) {\n      yPos += 40;\n    } else {\n      yPos += 39;\n    }\n\n    yPosList.push(yPos);\n  }\n\n  for (let i = 0; i < items.length; ++i) {\n    addDashboardItem({\n      type: PAGEBREAK,\n      yPos: yPosList[i]\n    });\n  }\n};\n\nexport class PrintLayoutDashboard extends Component {\n  state = {\n    initialized: false\n  };\n  initPrintLayoutDashboard = () => {\n    if (this.props.dashboard) {\n      this.setState({\n        initialized: true\n      });\n      this.props.setPrintDashboard(this.props.dashboard, this.props.items); // If any items are taller than one page, reduce it to one\n      // page (react-grid-layout units)\n\n      this.props.items.forEach(item => {\n        if (item.h > MAX_ITEM_GRID_HEIGHT) {\n          item.shortened = true;\n          this.props.updateDashboardItem(Object.assign({}, item, {\n            h: MAX_ITEM_GRID_HEIGHT\n          }));\n        }\n      });\n      addPageBreaks(this.props);\n      this.props.addDashboardItem({\n        type: PRINT_TITLE_PAGE,\n        isOneItemPerPage: false\n      });\n    }\n  };\n\n  componentDidMount() {\n    this.initPrintLayoutDashboard();\n  }\n\n  componentDidUpdate() {\n    if (!this.state.initialized) {\n      this.initPrintLayoutDashboard();\n    }\n  }\n\n  getWrapperStyle = () => {\n    return this.props.fromEdit ? {\n      paddingTop: spacers.dp24,\n      height: this.props.windowHeight - EDIT_BAR_HEIGHT - HEADERBAR_HEIGHT\n    } : {\n      height: this.props.windowHeight - PRINT_ACTIONS_BAR_HEIGHT\n    };\n  };\n\n  render() {\n    return <>\n                {!this.props.fromEdit && <PrintActionsBar id={this.props.dashboard.id} />}\n                <div className={cx(classes.wrapper, 'scroll-area')} style={this.getWrapperStyle()}>\n                    {!this.props.fromEdit && <PrintInfo isLayout={true} />}\n                    <div className={classes.pageOuter} style={{\n          width: a4LandscapeWidthPx\n        }}>\n                        <PrintLayoutItemGrid />\n                    </div>\n                </div>\n            </>;\n  }\n\n}\nPrintLayoutDashboard.propTypes = {\n  addDashboardItem: PropTypes.func,\n  dashboard: PropTypes.object,\n  fromEdit: PropTypes.bool,\n  items: PropTypes.array,\n  setPrintDashboard: PropTypes.func,\n  updateDashboardItem: PropTypes.func,\n  windowHeight: PropTypes.number\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const id = sGetSelectedId(state);\n\n  if (ownProps.fromEdit) {\n    const dashboard = sGetEditDashboardRoot(state);\n    return {\n      dashboard,\n      id,\n      items: sGetEditDashboardItems(state),\n      windowHeight: sGetWindowHeight(state)\n    };\n  }\n\n  const dashboard = id ? sGetDashboardById(state, id) : null;\n  return {\n    dashboard,\n    id,\n    items: sGetDashboardItems(state),\n    windowHeight: sGetWindowHeight(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setPrintDashboard: acSetPrintDashboard,\n  addDashboardItem: acAddPrintDashboardItem,\n  updateDashboardItem: acUpdatePrintDashboardItem\n})(PrintLayoutDashboard);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport TitleBar from '../TitleBar/TitleBar';\nimport ItemGrid from '../ItemGrid/ItemGrid';\nimport EditBar from '../ControlBar/EditBar';\nimport LayoutPrintPreview from './PrintLayoutDashboard';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport { acSetEditDashboard } from '../../actions/editDashboard';\nimport { sGetWindowHeight } from '../../reducers/windowHeight';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport { sGetIsPrintPreviewView } from '../../reducers/editDashboard';\nimport { getControlBarHeight, HEADERBAR_HEIGHT } from '../ControlBar/controlBarDimensions';\nexport class EditDashboard extends Component {\n  state = {\n    initialized: false\n  };\n  initEditDashboard = () => {\n    if (this.props.dashboard) {\n      this.setState({\n        initialized: true\n      });\n      this.props.setEditDashboard(this.props.dashboard, this.props.items);\n    }\n  };\n\n  componentDidMount() {\n    this.initEditDashboard();\n  }\n\n  componentDidUpdate() {\n    if (!this.state.initialized) {\n      this.initEditDashboard();\n    }\n  }\n\n  renderGrid = () => {\n    if (this.props.isPrintPreviewView) {\n      return <LayoutPrintPreview fromEdit={true} />;\n    }\n\n    const height = this.props.windowHeight - HEADERBAR_HEIGHT - getControlBarHeight(1);\n    return <div className=\"dashboard-wrapper\" style={{\n      height\n    }}>\n                <TitleBar edit={true} />\n                <ItemGrid edit={true} />\n            </div>;\n  };\n\n  render() {\n    return <>\n                <EditBar />\n                {this.props.updateAccess ? this.renderGrid() : <NoContentMessage text={i18n.t('No access')} />}\n            </>;\n  }\n\n}\nEditDashboard.propTypes = {\n  dashboard: PropTypes.object,\n  isPrintPreviewView: PropTypes.bool,\n  items: PropTypes.array,\n  setEditDashboard: PropTypes.func,\n  updateAccess: PropTypes.bool,\n  windowHeight: PropTypes.number\n};\n\nconst mapStateToProps = state => {\n  const id = sGetSelectedId(state);\n  const dashboard = id ? sGetDashboardById(state, id) : null;\n  const updateAccess = dashboard && dashboard.access ? dashboard.access.update : false;\n  return {\n    dashboard,\n    updateAccess,\n    items: sGetDashboardItems(state),\n    isPrintPreviewView: sGetIsPrintPreviewView(state),\n    windowHeight: sGetWindowHeight(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setEditDashboard: acSetEditDashboard\n})(EditDashboard);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport EditBar from '../ControlBar/EditBar';\nimport TitleBar from '../TitleBar/TitleBar';\nimport ItemGrid from '../ItemGrid/ItemGrid';\nimport LayoutPrintPreview from './PrintLayoutDashboard';\nimport { acSetEditNewDashboard } from '../../actions/editDashboard';\nimport { sGetIsPrintPreviewView } from '../../reducers/editDashboard';\nimport { sGetWindowHeight } from '../../reducers/windowHeight';\nimport { getControlBarHeight, HEADERBAR_HEIGHT } from '../ControlBar/controlBarDimensions';\n\nclass NewDashboard extends Component {\n  componentDidMount() {\n    this.props.setNewDashboard();\n  }\n\n  render() {\n    const height = this.props.windowHeight - HEADERBAR_HEIGHT - getControlBarHeight(1);\n    return <>\n                <EditBar />\n                {this.props.isPrintPreviewView ? <LayoutPrintPreview fromEdit={true} /> : <div className=\"dashboard-wrapper\" style={{\n        height\n      }}>\n                        <TitleBar edit={true} />\n                        <ItemGrid edit={true} />\n                    </div>}\n            </>;\n  }\n\n}\n\nNewDashboard.propTypes = {\n  isPrintPreviewView: PropTypes.bool,\n  setNewDashboard: PropTypes.func,\n  windowHeight: PropTypes.number\n};\n\nconst mapStateToProps = state => ({\n  isPrintPreviewView: sGetIsPrintPreviewView(state),\n  windowHeight: sGetWindowHeight(state)\n});\n\nexport default connect(mapStateToProps, {\n  setNewDashboard: acSetEditNewDashboard\n})(NewDashboard);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ReactGridLayout from 'react-grid-layout';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport cx from 'classnames';\nimport { Item } from '../Item/Item';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport { PRINT } from '../Dashboard/dashboardModes';\nimport { sGetSelectedIsLoading } from '../../reducers/selected';\nimport { sGetPrintDashboardRoot, sGetPrintDashboardItems } from '../../reducers/printDashboard';\nimport { GRID_ROW_HEIGHT, GRID_COMPACT_TYPE, MARGIN, getGridColumns, hasShape, a4LandscapeWidthPx } from './gridUtil';\nimport { orArray } from '../../modules/util';\nimport 'react-grid-layout/css/styles.css';\nimport './ItemGrid.css';\nexport class PrintItemGrid extends Component {\n  getItemComponent = item => <div key={item.i} className={cx(item.type, 'print', 'oipp')}>\n            <Item item={item} dashboardMode={PRINT} />\n        </div>;\n  getItemComponents = items => items.map(item => this.getItemComponent(item));\n\n  render() {\n    const {\n      isLoading,\n      dashboardItems\n    } = this.props;\n\n    if (!isLoading && !dashboardItems.length) {\n      return <NoContentMessage text={i18n.t('There are no items on this dashboard')} />;\n    }\n\n    const width = a4LandscapeWidthPx < window.innerWidth ? a4LandscapeWidthPx : window.innerWidth;\n    return <>\n                {isLoading ? <Layer translucent>\n                        <CenteredContent>\n                            <CircularLoader />\n                        </CenteredContent>\n                    </Layer> : null}\n                <ReactGridLayout className=\"layout print\" layout={dashboardItems} margin={MARGIN} cols={getGridColumns()} rowHeight={GRID_ROW_HEIGHT} width={width} compactType={GRID_COMPACT_TYPE} isDraggable={false} isResizable={false} draggableCancel=\"input,textarea\">\n                    {this.getItemComponents(dashboardItems)}\n                </ReactGridLayout>\n            </>;\n  }\n\n}\nPrintItemGrid.propTypes = {\n  dashboardItems: PropTypes.array,\n  isLoading: PropTypes.bool\n};\nPrintItemGrid.defaultProps = {\n  dashboardItems: []\n};\n\nconst mapStateToProps = state => {\n  const selectedDashboard = sGetPrintDashboardRoot(state);\n  return {\n    isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n    dashboardItems: orArray(sGetPrintDashboardItems(state)).filter(hasShape)\n  };\n};\n\nexport default connect(mapStateToProps)(PrintItemGrid);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport sortBy from 'lodash/sortBy';\nimport PrintInfo from './PrintInfo';\nimport PrintActionsBar from './PrintActionsBar';\nimport PrintItemGrid from '../ItemGrid/PrintItemGrid';\nimport { acSetPrintDashboard, acAddPrintDashboardItem, acRemovePrintDashboardItem, acUpdatePrintDashboardItem } from '../../actions/printDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { sGetWindowHeight } from '../../reducers/windowHeight';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport { PAGEBREAK, PRINT_TITLE_PAGE, SPACER } from '../../modules/itemTypes';\nimport { a4LandscapeWidthPx, MAX_ITEM_GRID_HEIGHT_OIPP, MAX_ITEM_GRID_WIDTH_OIPP } from '../ItemGrid/gridUtil';\nimport { PRINT_ACTIONS_BAR_HEIGHT } from './PrintActionsBar';\nimport classes from './styles/PrintDashboard.module.css';\nimport './styles/print.css';\nimport './styles/print-oipp.css';\nexport class PrintDashboard extends Component {\n  state = {\n    initialized: false\n  };\n  initPrintDashboard = () => {\n    if (this.props.dashboard) {\n      this.setState({\n        initialized: true\n      }); //sort the items by Y pos so they print in order of top to bottom\n\n      const sortedItems = sortBy(this.props.items, ['y', 'x']);\n      this.props.setPrintDashboard(this.props.dashboard, sortedItems); // remove spacers - don't want empty pages\n\n      let spacerCount = 0;\n      this.props.items.forEach(item => {\n        if (item.type === SPACER) {\n          spacerCount += 1;\n          this.props.removeDashboardItem(item.id);\n        }\n      }); // Resize the items to the full page size\n\n      this.props.items.forEach(item => {\n        this.props.updateDashboardItem(Object.assign({}, item, {\n          w: MAX_ITEM_GRID_WIDTH_OIPP,\n          h: MAX_ITEM_GRID_HEIGHT_OIPP\n        }));\n      }); // insert page breaks into the document flow to create the \"pages\"\n      // when previewing the print\n\n      for (let i = 0; i < (this.props.items.length - spacerCount) * 2; i += 2) {\n        this.props.addDashboardItem({\n          type: PAGEBREAK,\n          position: i,\n          isStatic: false\n        });\n      }\n\n      this.props.addDashboardItem({\n        type: PRINT_TITLE_PAGE,\n        isOneItemPerPage: true\n      });\n    }\n  };\n\n  componentDidMount() {\n    this.initPrintDashboard();\n  }\n\n  componentDidUpdate() {\n    if (!this.state.initialized) {\n      this.initPrintDashboard();\n    }\n  }\n\n  render() {\n    const height = this.props.windowHeight - PRINT_ACTIONS_BAR_HEIGHT;\n    return <>\n                <PrintActionsBar id={this.props.dashboard.id} />\n                <div className={classes.wrapper} style={{\n        height\n      }}>\n                    <PrintInfo isLayout={false} />\n                    <div className={classes.pageOuter} style={{\n          width: a4LandscapeWidthPx\n        }}>\n                        <PrintItemGrid />\n                    </div>\n                </div>\n            </>;\n  }\n\n}\nPrintDashboard.propTypes = {\n  addDashboardItem: PropTypes.func,\n  dashboard: PropTypes.object,\n  items: PropTypes.array,\n  removeDashboardItem: PropTypes.func,\n  setPrintDashboard: PropTypes.func,\n  updateDashboardItem: PropTypes.func,\n  windowHeight: PropTypes.number\n};\n\nconst mapStateToProps = state => {\n  const id = sGetSelectedId(state);\n  const dashboard = id ? sGetDashboardById(state, id) : null;\n  return {\n    dashboard,\n    id,\n    items: sGetDashboardItems(state),\n    windowHeight: sGetWindowHeight(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setPrintDashboard: acSetPrintDashboard,\n  addDashboardItem: acAddPrintDashboardItem,\n  removeDashboardItem: acRemovePrintDashboardItem,\n  updateDashboardItem: acUpdatePrintDashboardItem\n})(PrintDashboard);","import { SET_WINDOW_HEIGHT } from '../reducers/windowHeight';\nexport const acSetWindowHeight = value => ({\n  type: SET_WINDOW_HEIGHT,\n  value\n});","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport isEmpty from 'lodash/isEmpty';\nimport i18n from '@dhis2/d2-i18n';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport debounce from 'lodash/debounce';\nimport DashboardsBar from '../ControlBar/DashboardsBar';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport ViewDashboard from './ViewDashboard';\nimport EditDashboard from './EditDashboard';\nimport NewDashboard from './NewDashboard';\nimport PrintDashboard from './PrintDashboard';\nimport PrintLayoutDashboard from './PrintLayoutDashboard';\nimport { tSelectDashboard } from '../../actions/dashboards';\nimport { acSetWindowHeight } from '../../actions/windowHeight';\nimport { sDashboardsIsFetching, sGetAllDashboards } from '../../reducers/dashboards';\nimport { sGetSelectedId, NON_EXISTING_DASHBOARD_ID } from '../../reducers/selected';\nimport { EDIT, NEW, VIEW, PRINT, PRINT_LAYOUT, isPrintMode } from './dashboardModes';\n\nconst setHeaderbarVisibility = mode => {\n  const header = document.getElementsByTagName('header')[0];\n\n  if (isPrintMode(mode)) {\n    header.classList.add('hidden');\n  } else {\n    header.classList.remove('hidden');\n  }\n};\n\nconst dashboardMap = {\n  [VIEW]: <ViewDashboard />,\n  [EDIT]: <EditDashboard />,\n  [NEW]: <NewDashboard />,\n  [PRINT]: <PrintDashboard />,\n  [PRINT_LAYOUT]: <PrintLayoutDashboard />\n};\nexport const Dashboard = ({\n  id,\n  mode,\n  dashboardsLoaded,\n  dashboardsIsEmpty,\n  routeId,\n  selectDashboard,\n  setWindowHeight\n}) => {\n  useEffect(() => {\n    setHeaderbarVisibility(mode);\n  }, [mode]);\n  useEffect(() => {\n    if (dashboardsLoaded && !dashboardsIsEmpty) {\n      selectDashboard(routeId);\n    }\n  }, [dashboardsLoaded, dashboardsIsEmpty, routeId]);\n  useEffect(() => {\n    const onResize = debounce(() => setWindowHeight(window.innerHeight), 300);\n    window.addEventListener('resize', onResize);\n    return () => {\n      window.removeEventListener('resize', onResize);\n    };\n  }, []);\n\n  if (!dashboardsLoaded) {\n    return <Layer translucent>\n                <CenteredContent>\n                    <CircularLoader />\n                </CenteredContent>\n            </Layer>;\n  }\n\n  if (mode === NEW) {\n    return dashboardMap[mode];\n  }\n\n  if (dashboardsIsEmpty) {\n    return <>\n                <DashboardsBar />\n                <DashboardVerticalOffset />\n                <NoContentMessage text={i18n.t('No dashboards found. Use the + button to create a new dashboard.')} />\n            </>;\n  }\n\n  if (id === NON_EXISTING_DASHBOARD_ID) {\n    return <>\n                <DashboardsBar />\n                <DashboardVerticalOffset />\n                <NoContentMessage text={i18n.t('Requested dashboard not found')} />\n            </>;\n  }\n\n  if (id === null) {\n    return <Layer translucent>\n                <CenteredContent>\n                    <CircularLoader />\n                </CenteredContent>\n            </Layer>;\n  }\n\n  return dashboardMap[mode];\n};\nDashboard.propTypes = {\n  dashboardsIsEmpty: PropTypes.bool,\n  dashboardsLoaded: PropTypes.bool,\n  id: PropTypes.string,\n  match: PropTypes.object,\n  // provided by the react-router-dom\n  mode: PropTypes.string,\n  routeId: PropTypes.string,\n  selectDashboard: PropTypes.func,\n  setWindowHeight: PropTypes.func\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const dashboards = sGetAllDashboards(state);\n  return {\n    dashboardsIsEmpty: isEmpty(dashboards),\n    dashboardsLoaded: !sDashboardsIsFetching(state),\n    id: sGetSelectedId(state),\n    routeId: ownProps.match?.params?.dashboardId || null\n  };\n};\n\nexport default connect(mapStateToProps, {\n  selectDashboard: tSelectDashboard,\n  setWindowHeight: acSetWindowHeight\n})(Dashboard);","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { CssVariables } from '@dhis2/ui';\nimport { EDIT, VIEW, NEW, PRINT, PRINT_LAYOUT } from './Dashboard/dashboardModes';\nimport { acReceivedUser } from '../actions/user';\nimport { tFetchDashboards } from '../actions/dashboards';\nimport { tSetControlBarRows } from '../actions/controlBar';\nimport { tSetShowDescription } from '../actions/selected';\nimport { tSetDimensions } from '../actions/dimensions';\nimport Dashboard from './Dashboard/Dashboard';\nimport SnackbarMessage from './SnackbarMessage/SnackbarMessage';\nimport './App.css';\nexport class App extends Component {\n  componentDidMount() {\n    this.props.setCurrentUser(this.props.d2.currentUser);\n    this.props.fetchDashboards();\n    this.props.setControlBarRows();\n    this.props.setShowDescription();\n    this.props.setDimensions(this.props.d2);\n  }\n\n  getChildContext() {\n    return {\n      baseUrl: this.props.baseUrl,\n      i18n,\n      d2: this.props.d2\n    };\n  }\n\n  render() {\n    return <>\n                <CssVariables colors spacers />\n                <Router>\n                    <Switch>\n                        <Route exact path=\"/\" render={props => <Dashboard {...props} mode={VIEW} />} />\n                        <Route exact path=\"/new\" render={props => <Dashboard {...props} mode={NEW} />} />\n                        <Route exact path=\"/:dashboardId\" render={props => <Dashboard {...props} mode={VIEW} />} />\n                        <Route exact path=\"/:dashboardId/edit\" render={props => <Dashboard {...props} mode={EDIT} />} />\n                        <Route exact path=\"/:dashboardId/printoipp\" render={props => <Dashboard {...props} mode={PRINT} />} />\n                        <Route exact path=\"/:dashboardId/printlayout\" render={props => <Dashboard {...props} mode={PRINT_LAYOUT} />} />\n                    </Switch>\n                </Router>\n                <SnackbarMessage />\n            </>;\n  }\n\n}\nApp.propTypes = {\n  fetchDashboards: PropTypes.func.isRequired,\n  setControlBarRows: PropTypes.func.isRequired,\n  setCurrentUser: PropTypes.func.isRequired,\n  setDimensions: PropTypes.func.isRequired,\n  setShowDescription: PropTypes.func.isRequired,\n  baseUrl: PropTypes.string,\n  d2: PropTypes.object\n};\nApp.childContextTypes = {\n  baseUrl: PropTypes.string,\n  i18n: PropTypes.object,\n  d2: PropTypes.object\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchDashboards: () => dispatch(tFetchDashboards()),\n    setControlBarRows: () => dispatch(tSetControlBarRows()),\n    setCurrentUser: currentUser => dispatch(acReceivedUser(currentUser)),\n    setDimensions: d2 => dispatch(tSetDimensions(d2)),\n    setShowDescription: () => dispatch(tSetShowDescription())\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(App);","import { RECEIVED_USER } from '../reducers/user';\nexport const acReceivedUser = value => ({\n  type: RECEIVED_USER,\n  value\n});","/** @module reducers/selected */\nimport { validateReducer } from '../modules/util';\nexport const SET_STYLE = 'SET_STYLE';\nexport const DEFAULT_STATE_STYLE = 'LIST';\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\n\nconst style = (state = DEFAULT_STATE_STYLE, action) => {\n  switch (action.type) {\n    case SET_STYLE:\n      return validateReducer(action.value, DEFAULT_STATE_STYLE);\n\n    default:\n      return state;\n  }\n};\n\nexport default style;\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\n\nexport const sGetStyleRoot = state => state.style;","import { combineReducers } from 'redux';\nimport arraySort from 'd2-utilizr/lib/arraySort';\nimport dashboards, { sGetDashboardsRoot } from './dashboards';\nimport selected from './selected';\nimport dashboardsFilter, { ownerData, sGetFilterName, sGetFilterOrder, sGetFilterOwner } from './dashboardsFilter';\nimport controlBar from './controlBar';\nimport visualizations from './visualizations';\nimport editDashboard from './editDashboard';\nimport printDashboard from './printDashboard';\nimport messages from './messages';\nimport user from './user';\nimport snackbar from './snackbar';\nimport itemFilters from './itemFilters';\nimport style from './style';\nimport dimensions from './dimensions';\nimport settings from './settings';\nimport activeModalDimension from './activeModalDimension';\nimport windowHeight from './windowHeight';\nconst USER = 'system'; // Reducers\n\nexport default combineReducers({\n  dashboards,\n  selected,\n  dashboardsFilter,\n  controlBar,\n  visualizations,\n  messages,\n  user,\n  editDashboard,\n  printDashboard,\n  itemFilters,\n  style,\n  snackbar,\n  dimensions,\n  settings,\n  activeModalDimension,\n  windowHeight\n}); // Map constants to data\n\nconst mapConstToData = {\n  NAME: 'name',\n  ITEMS: 'numberOfItems',\n  CREATED: 'created',\n  OWNER: 'owner'\n}; // Selectors\n// Filter dashboards by name\n\nexport const sFilterDashboardsByName = (dashboards, filter) => dashboards.filter(d => d.displayName.toLowerCase().includes(filter.toLowerCase())); // Filter dashboards by owner, TODO FIXME\n\nexport const sFilterDashboardsByOwner = (dashboards, filter) => {\n  const ME = ownerData[1]; // TODO\n\n  const OTHERS = ownerData[2]; // TODO\n\n  switch (filter) {\n    case ME:\n      return dashboards.filter(d => d.owner === USER);\n\n    case OTHERS:\n      return dashboards.filter(d => d.owner !== USER);\n\n    default:\n      return dashboards;\n  }\n}; // Filter dashboards by order\n\nexport const sFilterDashboardsByOrder = (dashboards, filter) => {\n  const filterValues = filter.split(':');\n  const key = filterValues[0];\n  const direction = filterValues[1];\n  return arraySort(dashboards, direction, mapConstToData[key]);\n}; // Selectors dependency level 2\n// Get filtered dashboards\n\nexport const sGetFilteredDashboards = state => {\n  const dashboards = sGetDashboardsRoot(state);\n  const nameFilter = sGetFilterName(state);\n  const ownerFilter = sGetFilterOwner(state);\n  const orderFilter = sGetFilterOrder(state);\n  return sFilterDashboardsByOrder(sFilterDashboardsByName(sFilterDashboardsByOwner(dashboards, ownerFilter), nameFilter), orderFilter);\n};","import { createStore, applyMiddleware, compose } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport reducer from './reducers';\n\nconst configureStore = () => {\n  const middleware = [thunk]; // Enable Redux devtools if extension is installed instead of redux-logger\n\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n  if (!window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ && process.env.NODE_ENV !== 'production') {\n    middleware.push(createLogger());\n  }\n\n  return createStore(reducer, composeEnhancers(applyMiddleware(...middleware)));\n};\n\nexport default configureStore;","//------------------------------------------------------------------------------\n// <auto-generated>\n// This code was generated by d2-i18n-generate.\n//\n// Changes to this file may cause incorrect behavior and will be lost if\n// the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\nimport i18n from '@dhis2/d2-i18n';\nimport arTranslations from './ar/translations.json';\nimport ar_IQTranslations from './ar_IQ/translations.json';\nimport ckbTranslations from './ckb/translations.json';\nimport csTranslations from './cs/translations.json';\nimport daTranslations from './da/translations.json';\nimport enTranslations from './en/translations.json';\nimport esTranslations from './es/translations.json';\nimport frTranslations from './fr/translations.json';\nimport idTranslations from './id/translations.json';\nimport kmTranslations from './km/translations.json';\nimport loTranslations from './lo/translations.json';\nimport myTranslations from './my/translations.json';\nimport nbTranslations from './nb/translations.json';\nimport prsTranslations from './prs/translations.json';\nimport psTranslations from './ps/translations.json';\nimport ptTranslations from './pt/translations.json';\nimport pt_BRTranslations from './pt_BR/translations.json';\nimport ruTranslations from './ru/translations.json';\nimport svTranslations from './sv/translations.json';\nimport tetTranslations from './tet/translations.json';\nimport tgTranslations from './tg/translations.json';\nimport ukTranslations from './uk/translations.json';\nimport urTranslations from './ur/translations.json';\nimport uzTranslations from './uz/translations.json';\nimport uz_LatnTranslations from './uz_Latn/translations.json';\nimport viTranslations from './vi/translations.json';\nimport zhTranslations from './zh/translations.json';\nimport zh_CNTranslations from './zh_CN/translations.json';\nconst namespace = 'default';\ni18n.addResources('ar', namespace, arTranslations);\ni18n.addResources('ar_IQ', namespace, ar_IQTranslations);\ni18n.addResources('ckb', namespace, ckbTranslations);\ni18n.addResources('cs', namespace, csTranslations);\ni18n.addResources('da', namespace, daTranslations);\ni18n.addResources('en', namespace, enTranslations);\ni18n.addResources('es', namespace, esTranslations);\ni18n.addResources('fr', namespace, frTranslations);\ni18n.addResources('id', namespace, idTranslations);\ni18n.addResources('km', namespace, kmTranslations);\ni18n.addResources('lo', namespace, loTranslations);\ni18n.addResources('my', namespace, myTranslations);\ni18n.addResources('nb', namespace, nbTranslations);\ni18n.addResources('prs', namespace, prsTranslations);\ni18n.addResources('ps', namespace, psTranslations);\ni18n.addResources('pt', namespace, ptTranslations);\ni18n.addResources('pt_BR', namespace, pt_BRTranslations);\ni18n.addResources('ru', namespace, ruTranslations);\ni18n.addResources('sv', namespace, svTranslations);\ni18n.addResources('tet', namespace, tetTranslations);\ni18n.addResources('tg', namespace, tgTranslations);\ni18n.addResources('uk', namespace, ukTranslations);\ni18n.addResources('ur', namespace, urTranslations);\ni18n.addResources('uz', namespace, uzTranslations);\ni18n.addResources('uz_Latn', namespace, uz_LatnTranslations);\ni18n.addResources('vi', namespace, viTranslations);\ni18n.addResources('zh', namespace, zhTranslations);\ni18n.addResources('zh_CN', namespace, zh_CNTranslations);\nexport default i18n;","import React from 'react';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport dhis2theme from '@dhis2/d2-ui-core/theme/mui3.theme';\nimport { Provider as ReduxProvider } from 'react-redux';\nimport { D2Shim } from '@dhis2/app-runtime-adapter-d2';\nimport App from './components/App';\nimport configureStore from './configureStore';\nimport './AppWrapper.css';\nimport './locales';\n\nconst muiTheme = () => createMuiTheme(dhis2theme);\n\nconst d2Config = {\n  schemas: ['chart', 'map', 'report', 'reportTable', 'eventChart', 'eventReport', 'dashboard', 'organisationUnit', 'userGroup']\n}; // TODO: ER and EV plugins require the auth header in development mode.\n// Remove this when these plugins are rewritten\n\nconst authorization = process.env.REACT_APP_DHIS2_AUTHORIZATION || null;\n\nif (authorization) {\n  d2Config.headers = {\n    Authorization: authorization\n  };\n}\n\nconst AppWrapper = () => {\n  return <ReduxProvider store={configureStore()}>\n            <MuiThemeProvider theme={muiTheme()}>\n                <D2Shim d2Config={d2Config} i18nRoot=\"./i18n\">\n                    {({\n          d2\n        }) => {\n          if (!d2) {\n            // TODO: Handle errors in d2 initialization\n            return null;\n          }\n\n          return <App d2={d2} />;\n        }}\n                </D2Shim>\n            </MuiThemeProvider>\n        </ReduxProvider>;\n};\n\nexport default AppWrapper;","import isObject from 'lodash/isObject'; // validation\n\nexport function orNull(param) {\n  return param === undefined ? null : param;\n}\nexport function orArray(param) {\n  return Array.isArray(param) ? param : [];\n}\nexport function orObject(param) {\n  return isObject(param) ? param : {};\n} // array\n\nexport function arrayGetById(array, id) {\n  return array.find(item => item.id === id);\n} // object\n\nexport function arrayToIdMap(array) {\n  return array.reduce((obj, item) => {\n    obj[item.id] = item;\n    return obj;\n  }, {});\n} // date\n\nexport function getDate() {\n  const y = Math.floor(Math.random() * 3) + 2015;\n  const M = Math.floor(Math.random() * 12) + 1;\n  const d = Math.floor(Math.random() * 28) + 1; // const h = Math.floor(Math.random() * 23) + 1;\n  // const m = Math.floor(Math.random() * 59) + 1;\n  // const s = Math.floor(Math.random() * 59) + 1;\n\n  return new Date(`${y}-${M}-${d}`).toJSON().replace('T', ' ').substr(0, 10);\n}\nexport const formatDate = (value, uiLocale) => {\n  if (typeof global.Intl !== 'undefined' && Intl.DateTimeFormat) {\n    const locale = uiLocale || 'en';\n    return new Intl.DateTimeFormat(locale, {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    }).format(new Date(value));\n  }\n\n  return value.substr(0, 19).replace('T', ' ');\n};\n/**\n * Sorts an array of objects based on provided date property\n *\n * @param {Array} items Array of objects\n * @param {String} dateProp Name of the date property to be used for sorting\n * @param {Boolean} ascending Whether to sort ascending or descending\n */\n\nexport const sortByDate = (items, dateProp, ascending = true) => {\n  const values = Object.values(items);\n  values.sort((a, b) => {\n    const aDate = new Date(a[dateProp]);\n    const bDate = new Date(b[dateProp]);\n    return ascending ? aDate - bDate : bDate - aDate;\n  });\n  return values;\n}; // reducer validator\n\nexport const validateReducer = (value, defaultValue) => value === undefined || value === null ? defaultValue : value;\nexport const getBaseUrl = d2 => {\n  const api = d2.Api.getApi();\n  const idx = api.baseUrl.indexOf('/api');\n  return idx > -1 ? api.baseUrl.slice(0, idx) : api.baseUrl;\n};\nexport const getWithoutId = object => ({ ...object,\n  id: undefined\n});","import i18n from '@dhis2/d2-i18n';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\nimport ExtensionIcon from '@material-ui/icons/Extension';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport PersonIcon from '@material-ui/icons/Person';\nimport FontDownloadIcon from '@material-ui/icons/FontDownload';\nimport EmailIcon from '@material-ui/icons/Email';\nimport CropFreeIcon from '@material-ui/icons/CropFree';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\nimport { getBaseUrl } from './util'; // Item types\n\nexport const VISUALIZATION = 'VISUALIZATION';\nexport const REPORT_TABLE = 'REPORT_TABLE';\nexport const CHART = 'CHART';\nexport const MAP = 'MAP';\nexport const EVENT_REPORT = 'EVENT_REPORT';\nexport const EVENT_CHART = 'EVENT_CHART';\nexport const APP = 'APP';\nexport const REPORTS = 'REPORTS';\nexport const RESOURCES = 'RESOURCES';\nexport const USERS = 'USERS';\nexport const MESSAGES = 'MESSAGES';\nexport const TEXT = 'TEXT';\nexport const SPACER = 'SPACER';\nexport const PAGEBREAK = 'PAGEBREAK';\nexport const PRINT_TITLE_PAGE = 'PRINT_TITLE_PAGE';\nconst DOMAIN_TYPE_AGGREGATE = 'AGGREGATE';\nconst DOMAIN_TYPE_TRACKER = 'TRACKER'; // Dashboard helpers\n\nexport const isVisualizationType = item => !!itemTypeMap[item.type].isVisualizationType;\nexport const hasMapView = itemType => itemTypeMap[itemType].domainType === DOMAIN_TYPE_AGGREGATE;\nexport const isTrackerDomainType = itemType => itemTypeMap[itemType].domainType === DOMAIN_TYPE_TRACKER;\nexport const getDefaultItemCount = itemType => itemTypeMap[itemType].defaultItemCount || 5;\nexport const getAppName = itemType => itemTypeMap[itemType].appName || ''; // Item type map\n\nexport const itemTypeMap = {\n  [VISUALIZATION]: {\n    id: VISUALIZATION,\n    endPointName: 'visualizations',\n    propName: 'visualization',\n    pluralTitle: i18n.t('Visualizations'),\n    appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n    appName: 'Data Visualizer',\n    defaultItemCount: 10\n  },\n  [REPORT_TABLE]: {\n    id: REPORT_TABLE,\n    endPointName: 'visualizations',\n    propName: 'visualization',\n    pluralTitle: i18n.t('Pivot tables'),\n    domainType: DOMAIN_TYPE_AGGREGATE,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n    appName: 'Data Visualizer'\n  },\n  [CHART]: {\n    id: CHART,\n    endPointName: 'visualizations',\n    propName: 'visualization',\n    pluralTitle: i18n.t('Charts'),\n    domainType: DOMAIN_TYPE_AGGREGATE,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n    appName: 'Data Visualizer'\n  },\n  [MAP]: {\n    id: MAP,\n    endPointName: 'maps',\n    propName: 'map',\n    pluralTitle: i18n.t('Maps'),\n    domainType: DOMAIN_TYPE_AGGREGATE,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-maps/?id=${id}`,\n    appName: 'Maps'\n  },\n  [EVENT_REPORT]: {\n    id: EVENT_REPORT,\n    endPointName: 'eventReports',\n    propName: 'eventReport',\n    pluralTitle: i18n.t('Event reports'),\n    domainType: DOMAIN_TYPE_TRACKER,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-event-reports/?id=${id}`,\n    appName: 'Event Reports'\n  },\n  [EVENT_CHART]: {\n    id: EVENT_CHART,\n    endPointName: 'eventCharts',\n    propName: 'eventChart',\n    pluralTitle: i18n.t('Event charts'),\n    domainType: DOMAIN_TYPE_TRACKER,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-event-visualizer/?id=${id}`,\n    appName: 'Event Visualizer'\n  },\n  [APP]: {\n    endPointName: 'apps',\n    propName: 'appKey',\n    pluralTitle: i18n.t('Apps')\n  },\n  [REPORTS]: {\n    id: REPORTS,\n    endPointName: 'reports',\n    propName: 'reports',\n    pluralTitle: i18n.t('Reports'),\n    appUrl: (id, type) => {\n      switch (type) {\n        case 'HTML':\n          return `dhis-web-reports/#/standard-report/view/${id}`;\n\n        case 'JASPER_REPORT_TABLE':\n        case 'JASPER_JDBC':\n        default:\n          return `api/reports/${id}/data.pdf?t=${new Date().getTime()}`;\n      }\n    }\n  },\n  [RESOURCES]: {\n    id: RESOURCES,\n    endPointName: 'resources',\n    propName: 'resources',\n    pluralTitle: i18n.t('Resources'),\n    appUrl: id => `api/documents/${id}/data`\n  },\n  [USERS]: {\n    id: USERS,\n    endPointName: 'users',\n    propName: 'users',\n    pluralTitle: i18n.t('Users'),\n    appUrl: id => `dhis-web-dashboard-integration/profile.action?id=${id}`\n  },\n  [TEXT]: {\n    id: TEXT,\n    propName: 'text'\n  },\n  [MESSAGES]: {\n    propName: 'messages'\n  },\n  [SPACER]: {\n    propName: 'text'\n  },\n  [PAGEBREAK]: {\n    propName: 'text'\n  },\n  [PRINT_TITLE_PAGE]: {\n    propName: 'text'\n  }\n};\nexport const getEndPointName = type => itemTypeMap[type].endPointName;\nexport const getItemUrl = (type, item, d2) => {\n  let url;\n\n  if (type === APP) {\n    url = item.launchUrl;\n  }\n\n  if (itemTypeMap[type] && itemTypeMap[type].appUrl) {\n    url = `${getBaseUrl(d2)}/${itemTypeMap[type].appUrl(item.id, item.type)}`;\n  }\n\n  return url;\n};\nexport const getItemIcon = type => {\n  switch (type) {\n    case REPORT_TABLE:\n    case EVENT_REPORT:\n    case REPORTS:\n      return TableIcon;\n\n    case CHART:\n    case EVENT_CHART:\n      return ChartIcon;\n\n    case MAP:\n      return MapIcon;\n\n    case APP:\n      return ExtensionIcon;\n\n    case RESOURCES:\n      return DescriptionIcon;\n\n    case USERS:\n      return PersonIcon;\n\n    case TEXT:\n      return FontDownloadIcon;\n\n    case MESSAGES:\n      return EmailIcon;\n\n    case SPACER:\n      return CropFreeIcon;\n\n    default:\n      return NotInterestedIcon;\n  }\n};","import isFunction from 'd2-utilizr/lib/isFunction';\nimport { orObject } from '../../modules/util'; // Dimensions for the react-grid-layout\n\nexport const GRID_COMPACT_TYPE = 'vertical'; // vertical | horizonal | null\n\nexport const GRID_ROW_HEIGHT = 10;\nconst GRID_COLUMN_WIDTH_PX = 20;\nconst GRID_LAYOUT = 'FLEXIBLE'; // FIXED | FLEXIBLE\n\nexport const MARGIN = [10, 10];\nexport const NEW_ITEM_SHAPE = {\n  x: 0,\n  y: 0,\n  w: 20,\n  h: 29\n}; // Dimensions for getShape\n\nconst NUMBER_OF_ITEM_COLS = 2;\nconst GRID_COLUMNS = 60;\nconst MAX_ITEM_GRID_WIDTH = GRID_COLUMNS - 1;\nexport const MAX_ITEM_GRID_HEIGHT = 34;\nexport const MAX_ITEM_GRID_HEIGHT_OIPP = 35;\nexport const MAX_ITEM_GRID_WIDTH_OIPP = 56; // for A4 landscape (297x210mm)\n// 794 px = (21cm / 2.54) * 96 pixels/inch\n// 1122 px = 29.7 /2.54 * 96 pixels/inch\n// const a4LandscapeHeightPx = 794\n\nexport const a4LandscapeWidthPx = 1102;\nexport const getGridColumns = () => {\n  switch (GRID_LAYOUT) {\n    case 'FLEXIBLE':\n      return GRID_COLUMNS;\n\n    case 'FIXED':\n      return Math.floor((window.innerWidth - 20) / GRID_COLUMN_WIDTH_PX);\n\n    default:\n      return GRID_COLUMNS;\n  }\n}; // isNonNegativeInteger\n\nconst isNonNegativeInteger = x => Number.isInteger(x) && x >= 0; // Does the item have all the shape properties?\n\n\nexport const hasShape = item => isNonNegativeInteger(item.x) && isNonNegativeInteger(item.y) && isNonNegativeInteger(item.w) && isNonNegativeInteger(item.h); // returns a rectangular grid block dimensioned with x, y, w, h in grid units.\n// based on a grid with 3 items across\n\nexport const getShape = i => {\n  if (!isNonNegativeInteger(i)) {\n    throw new Error('Invalid grid block number');\n  }\n\n  const col = i % NUMBER_OF_ITEM_COLS;\n  const row = Math.floor(i / NUMBER_OF_ITEM_COLS);\n  const itemWidth = Math.floor(MAX_ITEM_GRID_WIDTH / NUMBER_OF_ITEM_COLS);\n  const itemHeight = GRID_ROW_HEIGHT * 2;\n  return {\n    x: col * itemWidth,\n    y: row * itemHeight,\n    w: itemWidth,\n    h: itemHeight\n  };\n};\nexport const getGridItemProperties = itemId => {\n  return {\n    i: itemId,\n    minH: 4 // minimum height for item\n\n  };\n};\nexport const getPageBreakItemShape = (yPos, isStatic = true) => {\n  return {\n    x: 0,\n    y: yPos,\n    w: MAX_ITEM_GRID_WIDTH,\n    h: 5,\n    static: !!isStatic,\n    minH: 1\n  };\n};\nexport const getPrintTitlePageItemShape = isOneItemPerPage => {\n  return {\n    x: 0,\n    y: 0,\n    w: isOneItemPerPage ? MAX_ITEM_GRID_WIDTH_OIPP : MAX_ITEM_GRID_WIDTH,\n    h: MAX_ITEM_GRID_HEIGHT,\n    static: true,\n    minH: 1\n  };\n};\n/**\n * Calculates the grid item's original height in pixels based\n * on the height in grid units. This calculation\n * is copied directly from react-grid-layout GridItem.js (calcPosition)\n *\n * @param {Object} item item containing shape (x, y, w, h)\n */\n\nexport const getOriginalHeight = item => {\n  const originalHeight = Math.round(GRID_ROW_HEIGHT * item.h + Math.max(0, item.h - 1) * MARGIN[1]);\n  return {\n    originalHeight\n  };\n};\n/**\n * Returns an array of items containing the x, y, w, h dimensions\n * and the item's originalheight in pixels\n * @function\n * @param {Array} items\n * @returns {Array}\n */\n\nexport const withShape = items => items.map((item, index) => {\n  const itemWithShape = hasShape(item) ? item : Object.assign({}, item, getShape(index));\n  return Object.assign({}, itemWithShape, getOriginalHeight(itemWithShape));\n});\nexport const getGridItemDomId = id => `item-${id}`;\nexport function onItemResize(id) {\n  const el = orObject(document.querySelector(`#${getGridItemDomId(id)}`));\n  if (isFunction(el.setViewportSize)) setTimeout(() => el.setViewportSize(el.clientWidth - 5, el.clientHeight - 5), 10);\n}","import isObject from 'lodash/isObject';\nimport { VIS_TYPE_COLUMN, VIS_TYPE_PIVOT_TABLE, AXIS_ID_ROWS, AXIS_ID_COLUMNS, AXIS_ID_FILTERS } from '@dhis2/analytics';\nimport { apiFetchFavorite, getMapFields } from '../../../api/metadata';\nimport { REPORT_TABLE, CHART, MAP, EVENT_REPORT, EVENT_CHART, itemTypeMap } from '../../../modules/itemTypes';\nimport { getBaseUrl, getWithoutId } from '../../../modules/util';\nimport { loadExternalScript } from '../../../modules/loadExternalScript';\nimport { getGridItemDomId } from '../../ItemGrid/gridUtil'; //external plugins\n\nconst itemTypeToGlobalVariable = {\n  [MAP]: 'mapPlugin',\n  [EVENT_REPORT]: 'eventReportPlugin',\n  [EVENT_CHART]: 'eventChartPlugin'\n};\n\nconst hasIntegratedPlugin = type => [CHART, REPORT_TABLE].includes(type);\n\nconst itemTypeToScriptPath = {\n  [MAP]: '/dhis-web-maps/map.js',\n  [EVENT_REPORT]: '/dhis-web-event-reports/eventreport.js',\n  [EVENT_CHART]: '/dhis-web-event-visualizer/eventchart.js'\n};\n\nconst getPlugin = async type => {\n  if (hasIntegratedPlugin(type)) {\n    return true;\n  }\n\n  const pluginName = itemTypeToGlobalVariable[type];\n  return global[pluginName];\n};\n\nexport const THEMATIC_LAYER = 'thematic';\nexport const extractFavorite = item => {\n  if (!isObject(item)) {\n    return null;\n  }\n\n  const propName = itemTypeMap[item.type].propName;\n  return item[propName] || item.reportTable || item.chart || item.map || item.eventReport || item.eventChart || {};\n};\nexport const extractMapView = map => map.mapViews && map.mapViews.find(mv => mv.layer.includes(THEMATIC_LAYER));\n\nconst fetchPlugin = async (type, baseUrl) => {\n  const globalName = itemTypeToGlobalVariable[type];\n\n  if (global[globalName]) {\n    return global[globalName]; // Will be a promise if fetch is in progress\n  }\n\n  const scripts = [];\n\n  if (type === EVENT_REPORT || type === EVENT_CHART) {\n    if (process.env.NODE_ENV === 'production') {\n      scripts.push('./vendor/babel-polyfill-6.26.0.min.js');\n      scripts.push('./vendor/jquery-3.3.1.min.js');\n      scripts.push('./vendor/jquery-migrate-3.0.1.min.js');\n    } else {\n      scripts.push('./vendor/babel-polyfill-6.26.0.js');\n      scripts.push('./vendor/jquery-3.3.1.js');\n      scripts.push('./vendor/jquery-migrate-3.0.1.js');\n    }\n  }\n\n  scripts.push(baseUrl + itemTypeToScriptPath[type]);\n  const scriptsPromise = Promise.all(scripts.map(loadExternalScript)).then(() => global[globalName] // At this point, has been replaced with the real thing\n  );\n  global[globalName] = scriptsPromise;\n  return await scriptsPromise;\n};\n\nexport const pluginIsAvailable = type => hasIntegratedPlugin(type) || itemTypeToGlobalVariable[type];\nexport const loadPlugin = async (type, config, credentials) => {\n  if (!pluginIsAvailable(type)) {\n    return;\n  }\n\n  const plugin = await fetchPlugin(type, credentials.baseUrl);\n\n  if (!(plugin && plugin.load)) {\n    return;\n  }\n\n  plugin.url = credentials.baseUrl;\n  plugin.loadingIndicator = true;\n  plugin.dashboard = true;\n\n  if (credentials.auth) {\n    plugin.auth = credentials.auth;\n  }\n\n  plugin.load(config);\n};\nexport const getId = item => extractFavorite(item).id;\nexport const getName = item => extractFavorite(item).name;\nexport const getDescription = item => extractFavorite(item).description;\nexport const getLink = (item, d2) => {\n  const baseUrl = getBaseUrl(d2);\n  const appUrl = itemTypeMap[item.type].appUrl(getId(item));\n  return `${baseUrl}/${appUrl}`;\n};\nexport const load = async (item, visualization, {\n  credentials,\n  activeType,\n  options = {}\n}) => {\n  const config = { ...visualization,\n    ...options,\n    el: getGridItemDomId(item.id)\n  };\n  const type = activeType || item.type;\n  await loadPlugin(type, config, credentials);\n};\nexport const fetch = async item => {\n  const fetchedFavorite = await apiFetchFavorite(getId(item), item.type, {\n    fields: item.type === MAP ? getMapFields() : null\n  });\n  return fetchedFavorite;\n};\nexport const resize = item => {\n  const plugin = getPlugin(item.type);\n\n  if (plugin && plugin.resize) {\n    plugin.resize(getGridItemDomId(item.id));\n  }\n};\nexport const unmount = (item, activeType) => {\n  const plugin = getPlugin(activeType);\n\n  if (plugin && plugin.unmount) {\n    plugin.unmount(getGridItemDomId(item.id));\n  }\n};\nexport const getVisualizationConfig = (visualization, originalType, activeType) => {\n  if (originalType === MAP && originalType !== activeType) {\n    const extractedMapView = extractMapView(visualization);\n\n    if (extractedMapView === undefined) {\n      return null;\n    }\n\n    return getWithoutId({ ...visualization,\n      ...extractedMapView,\n      mapViews: undefined,\n      type: activeType === CHART ? VIS_TYPE_COLUMN : VIS_TYPE_PIVOT_TABLE\n    });\n  } else if (originalType === REPORT_TABLE && activeType === CHART) {\n    const columns = visualization[AXIS_ID_COLUMNS].slice();\n    const rows = visualization[AXIS_ID_ROWS].slice();\n    const layout = {};\n\n    if (visualization.rows.length > 1) {\n      layout[AXIS_ID_ROWS] = rows.length > 2 ? rows.splice(0, 2) : rows.splice(0, rows.length);\n    } else {\n      layout[AXIS_ID_ROWS] = rows.length ? [rows.shift()] : rows;\n    }\n\n    layout[AXIS_ID_COLUMNS] = columns.length ? [columns.shift()] : columns;\n    layout[AXIS_ID_FILTERS] = [...visualization[AXIS_ID_FILTERS], ...columns, ...rows];\n    return getWithoutId({ ...visualization,\n      ...layout,\n      type: VIS_TYPE_COLUMN\n    });\n  } else if (originalType === CHART && activeType === REPORT_TABLE) {\n    return getWithoutId({ ...visualization,\n      type: VIS_TYPE_PIVOT_TABLE\n    });\n  }\n\n  return getWithoutId(visualization);\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemHeaderWrap\":\"ItemHeader_itemHeaderWrap__JcBP7\",\"itemTitle\":\"ItemHeader_itemTitle__34rHa\",\"itemActionsWrap\":\"ItemHeader_itemActionsWrap__Gx3D9\"};","import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { getEndPointName } from '../modules/itemTypes'; // Id, name\n\nexport const getIdNameFields = ({\n  rename\n} = {}) => ['id', `${rename ? 'displayName~rename(name)' : 'name,displayName'}`]; // Item\n\nexport const getItemFields = () => ['dimensionItem~rename(id)', 'displayName~rename(name)', 'dimensionItemType']; // Dimension\n\nexport const getDimensionFields = ({\n  withItems\n}) => arrayClean(['dimension', 'legendSet[id]', 'filter', 'programStage', withItems ? `items[${getItemFields().join(',')}]` : ``]); // Axis\n\nexport const getAxesFields = ({\n  withItems\n}) => [`columns[${getDimensionFields({\n  withItems\n}).join(',')}]`, `rows[${getDimensionFields({\n  withItems\n}).join(',')}]`, `filters[${getDimensionFields({\n  withItems\n}).join(',')}]`]; // Favorite\n\nexport const getFavoriteFields = ({\n  withDimensions,\n  withOptions\n}) => {\n  return arrayClean([`${getIdNameFields({\n    rename: true\n  }).join(',')}`, 'displayDescription~rename(description)', withDimensions ? `${getAxesFields({\n    withItems: true\n  }).join(',')}` : ``, withOptions ? ['*', '!attributeDimensions', '!attributeValues', '!category', '!categoryDimensions', '!categoryOptionGroupSetDimensions', '!columnDimensions', '!dataDimensionItems', '!dataElementDimensions', '!dataElementGroupSetDimensions', '!filterDimensions', '!itemOrganisationUnitGroups', '!lastUpdatedBy', '!organisationUnitGroupSetDimensions', '!organisationUnitLevels', '!organisationUnits', '!programIndicatorDimensions', '!relativePeriods', '!reportParams', '!rowDimensions', '!translations', '!userOrganisationUnit', '!userOrganisationUnitChildren', '!userOrganisationUnitGrandChildren'].join(',') : '']);\n};\nexport const getFavoritesFields = ({\n  withDimensions\n}) => [`reportTable[${getFavoriteFields({\n  withDimensions\n}).join(',')}]`, `chart[${['type', ...getFavoriteFields({\n  withDimensions\n})].join(',')}]`, `map[${getFavoriteFields({\n  withDimensions\n}).join(',')}]`, `eventReport[${getFavoriteFields({\n  withDimensions\n}).join(',')}]`, `eventChart[${getFavoriteFields({\n  withDimensions\n}).join(',')}]`]; // List item\n\nexport const getListItemFields = () => [`reports[${['type', ...getIdNameFields({\n  rename: true\n})].join(',')}]`, `resources[${getIdNameFields({\n  rename: true\n}).join(',')}]`, `users[${getIdNameFields({\n  rename: true\n}).join(',')}]`]; // Map\n\nexport const getMapFields = () => [`${getIdNameFields({\n  rename: true\n}).join(',')}`, 'user,longitude,latitude,zoom,basemap', `mapViews[${getFavoriteFields({\n  withDimensions: true,\n  withOptions: true\n})}]`]; // Api\n// Get more info about the favorite of a dashboard item\n\nexport const apiFetchFavorite = (id, type, {\n  fields\n}) => getInstance().then(d2 => d2.Api.getApi().get(`${getEndPointName(type)}/${id}`, {\n  fields: fields || getFavoriteFields({\n    withDimensions: true,\n    withOptions: true\n  })\n}));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"leftControls\":\"DashboardsBar_leftControls__k-Y57\",\"rightControls\":\"DashboardsBar_rightControls__1cyr1\",\"topMargin\":\"DashboardsBar_topMargin__FKGgr\"};"],"sourceRoot":""}